{"path":"lucene/spatial/src/java/org/apache/lucene/spatial/prefix/PrefixTreeStrategy#createField(Shape).mjava","commits":[{"id":"399d569d88e65d963440cdd3a3e2d5f7cdd1bd42","date":1341987627,"type":1,"author":"David Wayne Smiley","isMerge":false,"pathNew":"lucene/spatial/src/java/org/apache/lucene/spatial/prefix/PrefixTreeStrategy#createField(Shape).mjava","pathOld":"lucene/spatial/src/java/org/apache/lucene/spatial/prefix/PrefixTreeStrategy#createField(Shape,boolean,boolean).mjava","sourceNew":"  @Override\n  public IndexableField createField(Shape shape) {\n    int detailLevel = grid.getMaxLevelForPrecision(shape,distErrPct);\n    List<Node> cells = grid.getNodes(shape, detailLevel, true);//true=intermediates cells\n    //If shape isn't a point, add a full-resolution center-point so that\n    // PrefixFieldCacheProvider has the center-points.\n    // TODO index each center of a multi-point? Yes/no?\n    if (!(shape instanceof Point)) {\n      Point ctr = shape.getCenter();\n      //TODO should be smarter; don't index 2 tokens for this in CellTokenizer. Harmless though.\n      cells.add(grid.getNodes(ctr,grid.getMaxLevels(),false).get(0));\n    }\n\n    //TODO is CellTokenStream supposed to be re-used somehow? see Uwe's comments:\n    //  http://code.google.com/p/lucene-spatial-playground/issues/detail?id=4\n\n    return new Field(getFieldName(),new CellTokenStream(cells.iterator()), FIELD_TYPE);\n  }\n\n","sourceOld":"  @Override\n  public IndexableField createField(Shape shape, boolean index, boolean store) {\n    int detailLevel = grid.getMaxLevelForPrecision(shape,distErrPct);\n    List<Node> cells = grid.getNodes(shape, detailLevel, true);//true=intermediates cells\n    //If shape isn't a point, add a full-resolution center-point so that\n    // PrefixFieldCacheProvider has the center-points.\n    // TODO index each center of a multi-point? Yes/no?\n    if (!(shape instanceof Point)) {\n      Point ctr = shape.getCenter();\n      //TODO should be smarter; don't index 2 tokens for this in CellTokenizer. Harmless though.\n      cells.add(grid.getNodes(ctr,grid.getMaxLevels(),false).get(0));\n    }\n\n    //TODO is CellTokenStream supposed to be re-used somehow? see Uwe's comments:\n    //  http://code.google.com/p/lucene-spatial-playground/issues/detail?id=4\n\n    String fname = getFieldName();\n    if( store ) {\n      //TODO figure out how to re-use original string instead of reconstituting it.\n      String wkt = grid.getSpatialContext().toString(shape);\n      if( index ) {\n        Field f = new Field(fname,wkt,TYPE_STORED);\n        f.setTokenStream(new CellTokenStream(cells.iterator()));\n        return f;\n      }\n      return new StoredField(fname,wkt);\n    }\n    \n    if( index ) {\n      return new Field(fname,new CellTokenStream(cells.iterator()),TYPE_NOT_STORED);\n    }\n    \n    throw new UnsupportedOperationException(\"Fields need to be indexed or store [\"+fname+\"]\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"42ea82a615127d578d4d21a6743834c45fa10468","date":1342101990,"type":5,"author":"David Wayne Smiley","isMerge":false,"pathNew":"lucene/spatial/src/java/org/apache/lucene/spatial/prefix/PrefixTreeStrategy#createIndexableFields(Shape).mjava","pathOld":"lucene/spatial/src/java/org/apache/lucene/spatial/prefix/PrefixTreeStrategy#createField(Shape).mjava","sourceNew":"  @Override\n  public IndexableField[] createIndexableFields(Shape shape) {\n    int detailLevel = grid.getMaxLevelForPrecision(shape,distErrPct);\n    List<Node> cells = grid.getNodes(shape, detailLevel, true);//true=intermediates cells\n    //If shape isn't a point, add a full-resolution center-point so that\n    // PrefixFieldCacheProvider has the center-points.\n    // TODO index each center of a multi-point? Yes/no?\n    if (!(shape instanceof Point)) {\n      Point ctr = shape.getCenter();\n      //TODO should be smarter; don't index 2 tokens for this in CellTokenizer. Harmless though.\n      cells.add(grid.getNodes(ctr,grid.getMaxLevels(),false).get(0));\n    }\n\n    //TODO is CellTokenStream supposed to be re-used somehow? see Uwe's comments:\n    //  http://code.google.com/p/lucene-spatial-playground/issues/detail?id=4\n\n    Field field = new Field(getFieldName(), new CellTokenStream(cells.iterator()), FIELD_TYPE);\n    return new IndexableField[]{field};\n  }\n\n","sourceOld":"  @Override\n  public IndexableField createField(Shape shape) {\n    int detailLevel = grid.getMaxLevelForPrecision(shape,distErrPct);\n    List<Node> cells = grid.getNodes(shape, detailLevel, true);//true=intermediates cells\n    //If shape isn't a point, add a full-resolution center-point so that\n    // PrefixFieldCacheProvider has the center-points.\n    // TODO index each center of a multi-point? Yes/no?\n    if (!(shape instanceof Point)) {\n      Point ctr = shape.getCenter();\n      //TODO should be smarter; don't index 2 tokens for this in CellTokenizer. Harmless though.\n      cells.add(grid.getNodes(ctr,grid.getMaxLevels(),false).get(0));\n    }\n\n    //TODO is CellTokenStream supposed to be re-used somehow? see Uwe's comments:\n    //  http://code.google.com/p/lucene-spatial-playground/issues/detail?id=4\n\n    return new Field(getFieldName(),new CellTokenStream(cells.iterator()), FIELD_TYPE);\n  }\n\n","bugFix":null,"bugIntro":["6e2410e27320f6aaba450cbf500d7822baf642f8"],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"399d569d88e65d963440cdd3a3e2d5f7cdd1bd42":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"42ea82a615127d578d4d21a6743834c45fa10468":["399d569d88e65d963440cdd3a3e2d5f7cdd1bd42"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["42ea82a615127d578d4d21a6743834c45fa10468"]},"commit2Childs":{"399d569d88e65d963440cdd3a3e2d5f7cdd1bd42":["42ea82a615127d578d4d21a6743834c45fa10468"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["399d569d88e65d963440cdd3a3e2d5f7cdd1bd42"],"42ea82a615127d578d4d21a6743834c45fa10468":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}