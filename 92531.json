{"path":"lucene/queries/src/test/org/apache/lucene/queries/intervals/TestDisjunctionRewrites#testContaining().mjava","commits":[{"id":"97ee2282ff806e9bc9d705f389cf40451ab81c3e","date":1561721333,"type":1,"author":"Alan Woodward","isMerge":false,"pathNew":"lucene/queries/src/test/org/apache/lucene/queries/intervals/TestDisjunctionRewrites#testContaining().mjava","pathOld":"lucene/sandbox/src/test/org/apache/lucene/search/intervals/TestDisjunctionRewrites#testContaining().mjava","sourceNew":"  public void testContaining() {\n    // the 'big' interval should not be minimized, the 'small' one should be\n    // CONTAINING(MAXGAPS/4(or(ORDERED(\"a\", \"b\"), ORDERED(\"c\", \"d\"))), or(\"s\", BLOCK(\"s\", \"t\")))\n    // => or(CONTAINING(MAXGAPS/4(ORDERED(\"a\", \"b\")), or(\"s\", BLOCK(\"s\", \"t\"))),\n    //       CONTAINING(MAXGAPS/4(ORDERED(\"c\", \"d\")), or(\"s\", BLOCK(\"s\", \"t\"))))\n    IntervalsSource actual = containing(maxgaps(4, or(ordered(term(\"a\"), term(\"b\")), ordered(term(\"c\"), term(\"d\")))),\n                                        or(term(\"s\"), phrase(\"s\", \"t\")));\n    IntervalsSource expected = or(\n        containing(maxgaps(4, ordered(term(\"a\"), term(\"b\"))), or(term(\"s\"), phrase(\"s\", \"t\"))),\n        containing(maxgaps(4, ordered(term(\"c\"), term(\"d\"))), or(term(\"s\"), phrase(\"s\", \"t\")))\n    );\n    assertEquals(expected, actual);\n  }\n\n","sourceOld":"  public void testContaining() {\n    // the 'big' interval should not be minimized, the 'small' one should be\n    // CONTAINING(MAXGAPS/4(or(ORDERED(\"a\", \"b\"), ORDERED(\"c\", \"d\"))), or(\"s\", BLOCK(\"s\", \"t\")))\n    // => or(CONTAINING(MAXGAPS/4(ORDERED(\"a\", \"b\")), or(\"s\", BLOCK(\"s\", \"t\"))),\n    //       CONTAINING(MAXGAPS/4(ORDERED(\"c\", \"d\")), or(\"s\", BLOCK(\"s\", \"t\"))))\n    IntervalsSource actual = containing(maxgaps(4, or(ordered(term(\"a\"), term(\"b\")), ordered(term(\"c\"), term(\"d\")))),\n                                        or(term(\"s\"), phrase(\"s\", \"t\")));\n    IntervalsSource expected = or(\n        containing(maxgaps(4, ordered(term(\"a\"), term(\"b\"))), or(term(\"s\"), phrase(\"s\", \"t\"))),\n        containing(maxgaps(4, ordered(term(\"c\"), term(\"d\"))), or(term(\"s\"), phrase(\"s\", \"t\")))\n    );\n    assertEquals(expected, actual);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"97ee2282ff806e9bc9d705f389cf40451ab81c3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["97ee2282ff806e9bc9d705f389cf40451ab81c3e"]},"commit2Childs":{"97ee2282ff806e9bc9d705f389cf40451ab81c3e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["97ee2282ff806e9bc9d705f389cf40451ab81c3e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}