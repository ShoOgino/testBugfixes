{"path":"lucene/core/src/java/org/apache/lucene/index/DocumentsWriter#finishFullFlush(boolean).mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/DocumentsWriter#finishFullFlush(boolean).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/DocumentsWriter#finishFullFlush(boolean).mjava","sourceNew":"  final void finishFullFlush(boolean success) {\n    try {\n      if (infoStream.isEnabled(\"DW\")) {\n        infoStream.message(\"DW\", Thread.currentThread().getName() + \" finishFullFlush success=\" + success);\n      }\n      assert setFlushingDeleteQueue(null);\n      if (success) {\n        // Release the flush lock\n        flushControl.finishFullFlush();\n      } else {\n        flushControl.abortFullFlushes();\n      }\n    } finally {\n      pendingChangesInCurrentFullFlush = false;\n    }\n    \n  }\n\n","sourceOld":"  final void finishFullFlush(boolean success) {\n    try {\n      if (infoStream.isEnabled(\"DW\")) {\n        infoStream.message(\"DW\", Thread.currentThread().getName() + \" finishFullFlush success=\" + success);\n      }\n      assert setFlushingDeleteQueue(null);\n      if (success) {\n        // Release the flush lock\n        flushControl.finishFullFlush();\n      } else {\n        flushControl.abortFullFlushes();\n      }\n    } finally {\n      pendingChangesInCurrentFullFlush = false;\n    }\n    \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7af110b00ea8df9429309d83e38e0533d82e144f","date":1376924768,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/DocumentsWriter#finishFullFlush(boolean).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/DocumentsWriter#finishFullFlush(boolean).mjava","sourceNew":"  final void finishFullFlush(boolean success) {\n    try {\n      if (infoStream.isEnabled(\"DW\")) {\n        infoStream.message(\"DW\", Thread.currentThread().getName() + \" finishFullFlush success=\" + success);\n      }\n      assert setFlushingDeleteQueue(null);\n      if (success) {\n        // Release the flush lock\n        flushControl.finishFullFlush();\n      } else {\n        Set<String> newFilesSet = new HashSet<>();\n        flushControl.abortFullFlushes(newFilesSet);\n        putEvent(new DeleteNewFilesEvent(newFilesSet));\n\n      }\n    } finally {\n      pendingChangesInCurrentFullFlush = false;\n    }\n    \n  }\n\n","sourceOld":"  final void finishFullFlush(boolean success) {\n    try {\n      if (infoStream.isEnabled(\"DW\")) {\n        infoStream.message(\"DW\", Thread.currentThread().getName() + \" finishFullFlush success=\" + success);\n      }\n      assert setFlushingDeleteQueue(null);\n      if (success) {\n        // Release the flush lock\n        flushControl.finishFullFlush();\n      } else {\n        flushControl.abortFullFlushes();\n      }\n    } finally {\n      pendingChangesInCurrentFullFlush = false;\n    }\n    \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"31d4861802ca404d78ca1d15f4550eec415b9199","date":1376947894,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/DocumentsWriter#finishFullFlush(boolean).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/DocumentsWriter#finishFullFlush(boolean).mjava","sourceNew":"  final void finishFullFlush(boolean success) {\n    try {\n      if (infoStream.isEnabled(\"DW\")) {\n        infoStream.message(\"DW\", Thread.currentThread().getName() + \" finishFullFlush success=\" + success);\n      }\n      assert setFlushingDeleteQueue(null);\n      if (success) {\n        // Release the flush lock\n        flushControl.finishFullFlush();\n      } else {\n        Set<String> newFilesSet = new HashSet<>();\n        flushControl.abortFullFlushes(newFilesSet);\n        putEvent(new DeleteNewFilesEvent(newFilesSet));\n\n      }\n    } finally {\n      pendingChangesInCurrentFullFlush = false;\n    }\n    \n  }\n\n","sourceOld":"  final void finishFullFlush(boolean success) {\n    try {\n      if (infoStream.isEnabled(\"DW\")) {\n        infoStream.message(\"DW\", Thread.currentThread().getName() + \" finishFullFlush success=\" + success);\n      }\n      assert setFlushingDeleteQueue(null);\n      if (success) {\n        // Release the flush lock\n        flushControl.finishFullFlush();\n      } else {\n        flushControl.abortFullFlushes();\n      }\n    } finally {\n      pendingChangesInCurrentFullFlush = false;\n    }\n    \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3dffec77fb8f7d0e9ca4869dddd6af94528b4576","date":1377875202,"type":3,"author":"Han Jiang","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/DocumentsWriter#finishFullFlush(boolean).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/DocumentsWriter#finishFullFlush(boolean).mjava","sourceNew":"  final void finishFullFlush(boolean success) {\n    try {\n      if (infoStream.isEnabled(\"DW\")) {\n        infoStream.message(\"DW\", Thread.currentThread().getName() + \" finishFullFlush success=\" + success);\n      }\n      assert setFlushingDeleteQueue(null);\n      if (success) {\n        // Release the flush lock\n        flushControl.finishFullFlush();\n      } else {\n        Set<String> newFilesSet = new HashSet<>();\n        flushControl.abortFullFlushes(newFilesSet);\n        putEvent(new DeleteNewFilesEvent(newFilesSet));\n\n      }\n    } finally {\n      pendingChangesInCurrentFullFlush = false;\n    }\n    \n  }\n\n","sourceOld":"  final void finishFullFlush(boolean success) {\n    try {\n      if (infoStream.isEnabled(\"DW\")) {\n        infoStream.message(\"DW\", Thread.currentThread().getName() + \" finishFullFlush success=\" + success);\n      }\n      assert setFlushingDeleteQueue(null);\n      if (success) {\n        // Release the flush lock\n        flushControl.finishFullFlush();\n      } else {\n        flushControl.abortFullFlushes();\n      }\n    } finally {\n      pendingChangesInCurrentFullFlush = false;\n    }\n    \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9299079153fd7895bf3cf6835cf7019af2ba89b3","date":1417813477,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/DocumentsWriter#finishFullFlush(boolean).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/DocumentsWriter#finishFullFlush(boolean).mjava","sourceNew":"  final void finishFullFlush(boolean success) {\n    try {\n      if (infoStream.isEnabled(\"DW\")) {\n        infoStream.message(\"DW\", Thread.currentThread().getName() + \" finishFullFlush success=\" + success);\n      }\n      assert setFlushingDeleteQueue(null);\n      if (success) {\n        // Release the flush lock\n        flushControl.finishFullFlush();\n      } else {\n        flushControl.abortFullFlushes();\n\n      }\n    } finally {\n      pendingChangesInCurrentFullFlush = false;\n    }\n    \n  }\n\n","sourceOld":"  final void finishFullFlush(boolean success) {\n    try {\n      if (infoStream.isEnabled(\"DW\")) {\n        infoStream.message(\"DW\", Thread.currentThread().getName() + \" finishFullFlush success=\" + success);\n      }\n      assert setFlushingDeleteQueue(null);\n      if (success) {\n        // Release the flush lock\n        flushControl.finishFullFlush();\n      } else {\n        Set<String> newFilesSet = new HashSet<>();\n        flushControl.abortFullFlushes(newFilesSet);\n        putEvent(new DeleteNewFilesEvent(newFilesSet));\n\n      }\n    } finally {\n      pendingChangesInCurrentFullFlush = false;\n    }\n    \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"901d103ab7c2eeae92b111fc91bb1b00580a3fd7","date":1422827173,"type":5,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/DocumentsWriter#finishFullFlush(IndexWriter,boolean).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/DocumentsWriter#finishFullFlush(boolean).mjava","sourceNew":"  final void finishFullFlush(IndexWriter indexWriter, boolean success) {\n    assert indexWriter.holdsFullFlushLock();\n    try {\n      if (infoStream.isEnabled(\"DW\")) {\n        infoStream.message(\"DW\", Thread.currentThread().getName() + \" finishFullFlush success=\" + success);\n      }\n      assert setFlushingDeleteQueue(null);\n      if (success) {\n        // Release the flush lock\n        flushControl.finishFullFlush();\n      } else {\n        flushControl.abortFullFlushes();\n\n      }\n    } finally {\n      pendingChangesInCurrentFullFlush = false;\n    }\n    \n  }\n\n","sourceOld":"  final void finishFullFlush(boolean success) {\n    try {\n      if (infoStream.isEnabled(\"DW\")) {\n        infoStream.message(\"DW\", Thread.currentThread().getName() + \" finishFullFlush success=\" + success);\n      }\n      assert setFlushingDeleteQueue(null);\n      if (success) {\n        // Release the flush lock\n        flushControl.finishFullFlush();\n      } else {\n        flushControl.abortFullFlushes();\n\n      }\n    } finally {\n      pendingChangesInCurrentFullFlush = false;\n    }\n    \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6b8498afacfc8322268ca0d659d274fcce08d557","date":1524577248,"type":1,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/DocumentsWriter#finishFullFlush(boolean).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/DocumentsWriter#finishFullFlush(IndexWriter,boolean).mjava","sourceNew":"  void finishFullFlush(boolean success) {\n    try {\n      if (infoStream.isEnabled(\"DW\")) {\n        infoStream.message(\"DW\", Thread.currentThread().getName() + \" finishFullFlush success=\" + success);\n      }\n      assert setFlushingDeleteQueue(null);\n      if (success) {\n        // Release the flush lock\n        flushControl.finishFullFlush();\n      } else {\n        flushControl.abortFullFlushes();\n      }\n    } finally {\n      pendingChangesInCurrentFullFlush = false;\n    }\n  }\n\n","sourceOld":"  void finishFullFlush(IndexWriter indexWriter, boolean success) {\n    assert indexWriter.holdsFullFlushLock();\n    try {\n      if (infoStream.isEnabled(\"DW\")) {\n        infoStream.message(\"DW\", Thread.currentThread().getName() + \" finishFullFlush success=\" + success);\n      }\n      assert setFlushingDeleteQueue(null);\n      if (success) {\n        // Release the flush lock\n        flushControl.finishFullFlush();\n      } else {\n        flushControl.abortFullFlushes();\n\n      }\n    } finally {\n      pendingChangesInCurrentFullFlush = false;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9664831d785795f0f380fccc6db560efb979fdbb","date":1526559002,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/DocumentsWriter#finishFullFlush(boolean).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/DocumentsWriter#finishFullFlush(boolean).mjava","sourceNew":"  void finishFullFlush(boolean success) throws IOException {\n    try {\n      if (infoStream.isEnabled(\"DW\")) {\n        infoStream.message(\"DW\", Thread.currentThread().getName() + \" finishFullFlush success=\" + success);\n      }\n      assert setFlushingDeleteQueue(null);\n      if (success) {\n        // Release the flush lock\n        flushControl.finishFullFlush();\n      } else {\n        flushControl.abortFullFlushes();\n      }\n    } finally {\n      pendingChangesInCurrentFullFlush = false;\n      applyAllDeletes(deleteQueue); // make sure we do execute this since we block applying deletes during full flush\n    }\n  }\n\n","sourceOld":"  void finishFullFlush(boolean success) {\n    try {\n      if (infoStream.isEnabled(\"DW\")) {\n        infoStream.message(\"DW\", Thread.currentThread().getName() + \" finishFullFlush success=\" + success);\n      }\n      assert setFlushingDeleteQueue(null);\n      if (success) {\n        // Release the flush lock\n        flushControl.finishFullFlush();\n      } else {\n        flushControl.abortFullFlushes();\n      }\n    } finally {\n      pendingChangesInCurrentFullFlush = false;\n    }\n  }\n\n","bugFix":["6b8498afacfc8322268ca0d659d274fcce08d557"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"34067df01cbbefc83d0b316037fe4e10d89ba6a3","date":1559054674,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/DocumentsWriter#finishFullFlush(boolean).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/DocumentsWriter#finishFullFlush(boolean).mjava","sourceNew":"  void finishFullFlush(boolean success) throws IOException {\n    try {\n      if (infoStream.isEnabled(\"DW\")) {\n        infoStream.message(\"DW\", Thread.currentThread().getName() + \" finishFullFlush success=\" + success);\n      }\n      assert setFlushingDeleteQueue(null);\n      if (success) {\n        // Release the flush lock\n        flushControl.finishFullFlush();\n      } else {\n        flushControl.abortFullFlushes();\n      }\n    } finally {\n      pendingChangesInCurrentFullFlush = false;\n      applyAllDeletes(); // make sure we do execute this since we block applying deletes during full flush\n    }\n  }\n\n","sourceOld":"  void finishFullFlush(boolean success) throws IOException {\n    try {\n      if (infoStream.isEnabled(\"DW\")) {\n        infoStream.message(\"DW\", Thread.currentThread().getName() + \" finishFullFlush success=\" + success);\n      }\n      assert setFlushingDeleteQueue(null);\n      if (success) {\n        // Release the flush lock\n        flushControl.finishFullFlush();\n      } else {\n        flushControl.abortFullFlushes();\n      }\n    } finally {\n      pendingChangesInCurrentFullFlush = false;\n      applyAllDeletes(deleteQueue); // make sure we do execute this since we block applying deletes during full flush\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"34b5cf63f4ff3d985a7fc828c1a0d1624b0176d9","date":1559371943,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/DocumentsWriter#finishFullFlush(boolean).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/DocumentsWriter#finishFullFlush(boolean).mjava","sourceNew":"  void finishFullFlush(boolean success) throws IOException {\n    try {\n      if (infoStream.isEnabled(\"DW\")) {\n        infoStream.message(\"DW\", Thread.currentThread().getName() + \" finishFullFlush success=\" + success);\n      }\n      assert setFlushingDeleteQueue(null);\n      if (success) {\n        // Release the flush lock\n        flushControl.finishFullFlush();\n      } else {\n        flushControl.abortFullFlushes();\n      }\n    } finally {\n      pendingChangesInCurrentFullFlush = false;\n      applyAllDeletes(); // make sure we do execute this since we block applying deletes during full flush\n    }\n  }\n\n","sourceOld":"  void finishFullFlush(boolean success) throws IOException {\n    try {\n      if (infoStream.isEnabled(\"DW\")) {\n        infoStream.message(\"DW\", Thread.currentThread().getName() + \" finishFullFlush success=\" + success);\n      }\n      assert setFlushingDeleteQueue(null);\n      if (success) {\n        // Release the flush lock\n        flushControl.finishFullFlush();\n      } else {\n        flushControl.abortFullFlushes();\n      }\n    } finally {\n      pendingChangesInCurrentFullFlush = false;\n      applyAllDeletes(deleteQueue); // make sure we do execute this since we block applying deletes during full flush\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"7af110b00ea8df9429309d83e38e0533d82e144f":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"6b8498afacfc8322268ca0d659d274fcce08d557":["901d103ab7c2eeae92b111fc91bb1b00580a3fd7"],"9664831d785795f0f380fccc6db560efb979fdbb":["6b8498afacfc8322268ca0d659d274fcce08d557"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"3dffec77fb8f7d0e9ca4869dddd6af94528b4576":["3a119bbc8703c10faa329ec201c654b3a35a1e3e","7af110b00ea8df9429309d83e38e0533d82e144f"],"31d4861802ca404d78ca1d15f4550eec415b9199":["3a119bbc8703c10faa329ec201c654b3a35a1e3e","7af110b00ea8df9429309d83e38e0533d82e144f"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"34b5cf63f4ff3d985a7fc828c1a0d1624b0176d9":["9664831d785795f0f380fccc6db560efb979fdbb","34067df01cbbefc83d0b316037fe4e10d89ba6a3"],"9299079153fd7895bf3cf6835cf7019af2ba89b3":["7af110b00ea8df9429309d83e38e0533d82e144f"],"34067df01cbbefc83d0b316037fe4e10d89ba6a3":["9664831d785795f0f380fccc6db560efb979fdbb"],"901d103ab7c2eeae92b111fc91bb1b00580a3fd7":["9299079153fd7895bf3cf6835cf7019af2ba89b3"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["34b5cf63f4ff3d985a7fc828c1a0d1624b0176d9"]},"commit2Childs":{"7af110b00ea8df9429309d83e38e0533d82e144f":["3dffec77fb8f7d0e9ca4869dddd6af94528b4576","31d4861802ca404d78ca1d15f4550eec415b9199","9299079153fd7895bf3cf6835cf7019af2ba89b3"],"6b8498afacfc8322268ca0d659d274fcce08d557":["9664831d785795f0f380fccc6db560efb979fdbb"],"9664831d785795f0f380fccc6db560efb979fdbb":["34b5cf63f4ff3d985a7fc828c1a0d1624b0176d9","34067df01cbbefc83d0b316037fe4e10d89ba6a3"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["7af110b00ea8df9429309d83e38e0533d82e144f","3dffec77fb8f7d0e9ca4869dddd6af94528b4576","31d4861802ca404d78ca1d15f4550eec415b9199"],"3dffec77fb8f7d0e9ca4869dddd6af94528b4576":[],"31d4861802ca404d78ca1d15f4550eec415b9199":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"34b5cf63f4ff3d985a7fc828c1a0d1624b0176d9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"9299079153fd7895bf3cf6835cf7019af2ba89b3":["901d103ab7c2eeae92b111fc91bb1b00580a3fd7"],"34067df01cbbefc83d0b316037fe4e10d89ba6a3":["34b5cf63f4ff3d985a7fc828c1a0d1624b0176d9"],"901d103ab7c2eeae92b111fc91bb1b00580a3fd7":["6b8498afacfc8322268ca0d659d274fcce08d557"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["3dffec77fb8f7d0e9ca4869dddd6af94528b4576","31d4861802ca404d78ca1d15f4550eec415b9199","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}