{"path":"solr/core/src/test/org/apache/solr/servlet/DirectSolrConnectionTest#testSimpleRequest().mjava","commits":[{"id":"c903c3d15906a3da96b8c0c2fb704491005fdbdb","date":1453508227,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/servlet/DirectSolrConnectionTest#testSimpleRequest().mjava","pathOld":"solr/src/test/org/apache/solr/servlet/DirectSolrConnectionTest#testSimpleRequest().mjava","sourceNew":"  // Check that a request gets back the echoParams call\n  public void testSimpleRequest() throws Exception \n  { \n    String pathAndParams = \"/select?wt=xml&version=2.2&echoParams=explicit&q=*:*\";\n    \n    String got = direct.request( pathAndParams, null );\n    \n    assertTrue( got.indexOf( \"<str name=\\\"echoParams\\\">explicit</str>\" ) > 5 );\n    \n    \n    // It should throw an exception for unknown handler\n    try {\n      direct.request( \"/path to nonexistang thingy!!\", null );\n      fail( \"should throw an exception\" );\n    }\n    catch( Exception ex ){}\n  }\n\n","sourceOld":"  // Check that a request gets back the echoParams call\n  public void testSimpleRequest() throws Exception \n  { \n    String pathAndParams = \"/select?wt=xml&version=2.2&echoParams=explicit&q=*:*\";\n    \n    String got = direct.request( pathAndParams, null );\n    \n    assertTrue( got.indexOf( \"<str name=\\\"echoParams\\\">explicit</str>\" ) > 5 );\n    \n    \n    // It should throw an exception for unknown handler\n    try {\n      direct.request( \"/path to nonexistang thingy!!\", null );\n      fail( \"should throw an exception\" );\n    }\n    catch( Exception ex ){}\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a258fbb26824fd104ed795e5d9033d2d040049ee","date":1453508252,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/servlet/DirectSolrConnectionTest#testSimpleRequest().mjava","pathOld":"solr/src/test/org/apache/solr/servlet/DirectSolrConnectionTest#testSimpleRequest().mjava","sourceNew":"  // Check that a request gets back the echoParams call\n  public void testSimpleRequest() throws Exception \n  { \n    String pathAndParams = \"/select?wt=xml&version=2.2&echoParams=explicit&q=*:*\";\n    \n    String got = direct.request( pathAndParams, null );\n    \n    assertTrue( got.indexOf( \"<str name=\\\"echoParams\\\">explicit</str>\" ) > 5 );\n    \n    \n    // It should throw an exception for unknown handler\n    try {\n      direct.request( \"/path to nonexistang thingy!!\", null );\n      fail( \"should throw an exception\" );\n    }\n    catch( Exception ex ){}\n  }\n\n","sourceOld":"  // Check that a request gets back the echoParams call\n  public void testSimpleRequest() throws Exception \n  { \n    String pathAndParams = \"/select?wt=xml&version=2.2&echoParams=explicit&q=*:*\";\n    \n    String got = direct.request( pathAndParams, null );\n    \n    assertTrue( got.indexOf( \"<str name=\\\"echoParams\\\">explicit</str>\" ) > 5 );\n    \n    \n    // It should throw an exception for unknown handler\n    try {\n      direct.request( \"/path to nonexistang thingy!!\", null );\n      fail( \"should throw an exception\" );\n    }\n    catch( Exception ex ){}\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/servlet/DirectSolrConnectionTest#testSimpleRequest().mjava","pathOld":"solr/src/test/org/apache/solr/servlet/DirectSolrConnectionTest#testSimpleRequest().mjava","sourceNew":"  // Check that a request gets back the echoParams call\n  public void testSimpleRequest() throws Exception \n  { \n    String pathAndParams = \"/select?wt=xml&version=2.2&echoParams=explicit&q=*:*\";\n    \n    String got = direct.request( pathAndParams, null );\n    \n    assertTrue( got.indexOf( \"<str name=\\\"echoParams\\\">explicit</str>\" ) > 5 );\n    \n    \n    // It should throw an exception for unknown handler\n    try {\n      direct.request( \"/path to nonexistang thingy!!\", null );\n      fail( \"should throw an exception\" );\n    }\n    catch( Exception ex ){}\n  }\n\n","sourceOld":"  // Check that a request gets back the echoParams call\n  public void testSimpleRequest() throws Exception \n  { \n    String pathAndParams = \"/select?wt=xml&version=2.2&echoParams=explicit&q=*:*\";\n    \n    String got = direct.request( pathAndParams, null );\n    \n    assertTrue( got.indexOf( \"<str name=\\\"echoParams\\\">explicit</str>\" ) > 5 );\n    \n    \n    // It should throw an exception for unknown handler\n    try {\n      direct.request( \"/path to nonexistang thingy!!\", null );\n      fail( \"should throw an exception\" );\n    }\n    catch( Exception ex ){}\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d1a307447328c95a00248512b40d7a5ff12ecd6a","date":1564817449,"type":3,"author":"Munendra S N","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/servlet/DirectSolrConnectionTest#testSimpleRequest().mjava","pathOld":"solr/core/src/test/org/apache/solr/servlet/DirectSolrConnectionTest#testSimpleRequest().mjava","sourceNew":"  // Check that a request gets back the echoParams call\n  public void testSimpleRequest() throws Exception \n  { \n    String pathAndParams = \"/select?wt=xml&version=2.2&echoParams=explicit&q=*:*\";\n    \n    String got = direct.request( pathAndParams, null );\n    \n    assertTrue( got.indexOf( \"<str name=\\\"echoParams\\\">explicit</str>\" ) > 5 );\n    \n    // It should throw an exception for unknown handler\n    expectThrows(Exception.class, () -> direct.request( \"/path to nonexistang thingy!!\", null ));\n  }\n\n","sourceOld":"  // Check that a request gets back the echoParams call\n  public void testSimpleRequest() throws Exception \n  { \n    String pathAndParams = \"/select?wt=xml&version=2.2&echoParams=explicit&q=*:*\";\n    \n    String got = direct.request( pathAndParams, null );\n    \n    assertTrue( got.indexOf( \"<str name=\\\"echoParams\\\">explicit</str>\" ) > 5 );\n    \n    \n    // It should throw an exception for unknown handler\n    try {\n      direct.request( \"/path to nonexistang thingy!!\", null );\n      fail( \"should throw an exception\" );\n    }\n    catch( Exception ex ){}\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f8061ddd97f3352007d927dae445884a6f3d857b","date":1564988276,"type":3,"author":"Atri Sharma","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/servlet/DirectSolrConnectionTest#testSimpleRequest().mjava","pathOld":"solr/core/src/test/org/apache/solr/servlet/DirectSolrConnectionTest#testSimpleRequest().mjava","sourceNew":"  // Check that a request gets back the echoParams call\n  public void testSimpleRequest() throws Exception \n  { \n    String pathAndParams = \"/select?wt=xml&version=2.2&echoParams=explicit&q=*:*\";\n    \n    String got = direct.request( pathAndParams, null );\n    \n    assertTrue( got.indexOf( \"<str name=\\\"echoParams\\\">explicit</str>\" ) > 5 );\n    \n    // It should throw an exception for unknown handler\n    expectThrows(Exception.class, () -> direct.request( \"/path to nonexistang thingy!!\", null ));\n  }\n\n","sourceOld":"  // Check that a request gets back the echoParams call\n  public void testSimpleRequest() throws Exception \n  { \n    String pathAndParams = \"/select?wt=xml&version=2.2&echoParams=explicit&q=*:*\";\n    \n    String got = direct.request( pathAndParams, null );\n    \n    assertTrue( got.indexOf( \"<str name=\\\"echoParams\\\">explicit</str>\" ) > 5 );\n    \n    \n    // It should throw an exception for unknown handler\n    try {\n      direct.request( \"/path to nonexistang thingy!!\", null );\n      fail( \"should throw an exception\" );\n    }\n    catch( Exception ex ){}\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d8daa7a1d5d0c033d73962d5ca3bf3f9c9687693","date":1565097295,"type":3,"author":"Jan HÃ¸ydahl","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/servlet/DirectSolrConnectionTest#testSimpleRequest().mjava","pathOld":"solr/core/src/test/org/apache/solr/servlet/DirectSolrConnectionTest#testSimpleRequest().mjava","sourceNew":"  // Check that a request gets back the echoParams call\n  public void testSimpleRequest() throws Exception \n  { \n    String pathAndParams = \"/select?wt=xml&version=2.2&echoParams=explicit&q=*:*\";\n    \n    String got = direct.request( pathAndParams, null );\n    \n    assertTrue( got.indexOf( \"<str name=\\\"echoParams\\\">explicit</str>\" ) > 5 );\n    \n    // It should throw an exception for unknown handler\n    expectThrows(Exception.class, () -> direct.request( \"/path to nonexistang thingy!!\", null ));\n  }\n\n","sourceOld":"  // Check that a request gets back the echoParams call\n  public void testSimpleRequest() throws Exception \n  { \n    String pathAndParams = \"/select?wt=xml&version=2.2&echoParams=explicit&q=*:*\";\n    \n    String got = direct.request( pathAndParams, null );\n    \n    assertTrue( got.indexOf( \"<str name=\\\"echoParams\\\">explicit</str>\" ) > 5 );\n    \n    \n    // It should throw an exception for unknown handler\n    try {\n      direct.request( \"/path to nonexistang thingy!!\", null );\n      fail( \"should throw an exception\" );\n    }\n    catch( Exception ex ){}\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"c26f00b574427b55127e869b935845554afde1fa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","c903c3d15906a3da96b8c0c2fb704491005fdbdb"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a258fbb26824fd104ed795e5d9033d2d040049ee":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"d1a307447328c95a00248512b40d7a5ff12ecd6a":["c26f00b574427b55127e869b935845554afde1fa"],"d8daa7a1d5d0c033d73962d5ca3bf3f9c9687693":["c26f00b574427b55127e869b935845554afde1fa","d1a307447328c95a00248512b40d7a5ff12ecd6a"],"f8061ddd97f3352007d927dae445884a6f3d857b":["c26f00b574427b55127e869b935845554afde1fa","d1a307447328c95a00248512b40d7a5ff12ecd6a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["d1a307447328c95a00248512b40d7a5ff12ecd6a"]},"commit2Childs":{"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["c26f00b574427b55127e869b935845554afde1fa"],"c26f00b574427b55127e869b935845554afde1fa":["d1a307447328c95a00248512b40d7a5ff12ecd6a","d8daa7a1d5d0c033d73962d5ca3bf3f9c9687693","f8061ddd97f3352007d927dae445884a6f3d857b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c903c3d15906a3da96b8c0c2fb704491005fdbdb","c26f00b574427b55127e869b935845554afde1fa","a258fbb26824fd104ed795e5d9033d2d040049ee"],"a258fbb26824fd104ed795e5d9033d2d040049ee":[],"d1a307447328c95a00248512b40d7a5ff12ecd6a":["d8daa7a1d5d0c033d73962d5ca3bf3f9c9687693","f8061ddd97f3352007d927dae445884a6f3d857b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"d8daa7a1d5d0c033d73962d5ca3bf3f9c9687693":[],"f8061ddd97f3352007d927dae445884a6f3d857b":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a258fbb26824fd104ed795e5d9033d2d040049ee","d8daa7a1d5d0c033d73962d5ca3bf3f9c9687693","f8061ddd97f3352007d927dae445884a6f3d857b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}