{"path":"solr/core/src/test/org/apache/solr/security/JWTAuthPluginTest#wellKnownConfigFromString().mjava","commits":[{"id":"bb3e075eaa5788b2762ec235bf72b069cefe3f50","date":1548244981,"type":0,"author":"Jan Høydahl","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/security/JWTAuthPluginTest#wellKnownConfigFromString().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void wellKnownConfigFromString() throws IOException {\n    Path configJson = TEST_PATH().resolve(\"security\").resolve(\"jwt_well-known-config.json\");\n    String configString = StringUtils.join(Files.readAllLines(configJson), \"\\n\");\n    JWTAuthPlugin.WellKnownDiscoveryConfig config = JWTAuthPlugin.WellKnownDiscoveryConfig.parse(configString, StandardCharsets.UTF_8);\n    assertEquals(\"https://acmepaymentscorp/oauth/jwks\", config.getJwksUrl());\n    assertEquals(\"http://acmepaymentscorp\", config.getIssuer());\n    assertEquals(\"http://acmepaymentscorp/oauth/auz/authorize\", config.getAuthorizationEndpoint());\n    assertEquals(Arrays.asList(\"READ\", \"WRITE\", \"DELETE\", \"openid\", \"scope\", \"profile\", \"email\", \"address\", \"phone\"), config.getScopesSupported());\n    assertEquals(Arrays.asList(\"code\", \"code id_token\", \"code token\", \"code id_token token\", \"token\", \"id_token\", \"id_token token\"), config.getResponseTypesSupported());\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2682a1cd25864ccdc1b44bf047bd08700f28ba06","date":1548321910,"type":0,"author":"Tommaso Teofili","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/security/JWTAuthPluginTest#wellKnownConfigFromString().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void wellKnownConfigFromString() throws IOException {\n    Path configJson = TEST_PATH().resolve(\"security\").resolve(\"jwt_well-known-config.json\");\n    String configString = StringUtils.join(Files.readAllLines(configJson), \"\\n\");\n    JWTAuthPlugin.WellKnownDiscoveryConfig config = JWTAuthPlugin.WellKnownDiscoveryConfig.parse(configString, StandardCharsets.UTF_8);\n    assertEquals(\"https://acmepaymentscorp/oauth/jwks\", config.getJwksUrl());\n    assertEquals(\"http://acmepaymentscorp\", config.getIssuer());\n    assertEquals(\"http://acmepaymentscorp/oauth/auz/authorize\", config.getAuthorizationEndpoint());\n    assertEquals(Arrays.asList(\"READ\", \"WRITE\", \"DELETE\", \"openid\", \"scope\", \"profile\", \"email\", \"address\", \"phone\"), config.getScopesSupported());\n    assertEquals(Arrays.asList(\"code\", \"code id_token\", \"code token\", \"code id_token token\", \"token\", \"id_token\", \"id_token token\"), config.getResponseTypesSupported());\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1ac780c217504f0ca673ac5dcb98768984267c60","date":1568879420,"type":5,"author":"Jan Høydahl","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/security/JWTIssuerConfigTest#wellKnownConfigFromString().mjava","pathOld":"solr/core/src/test/org/apache/solr/security/JWTAuthPluginTest#wellKnownConfigFromString().mjava","sourceNew":"  @Test\n  public void wellKnownConfigFromString() throws IOException {\n    Path configJson = TEST_PATH().resolve(\"security\").resolve(\"jwt_well-known-config.json\");\n    String configString = StringUtils.join(Files.readAllLines(configJson), \"\\n\");\n    JWTIssuerConfig.WellKnownDiscoveryConfig config = JWTIssuerConfig.WellKnownDiscoveryConfig.parse(configString, StandardCharsets.UTF_8);\n    assertEquals(\"https://acmepaymentscorp/oauth/jwks\", config.getJwksUrl());\n    assertEquals(\"http://acmepaymentscorp\", config.getIssuer());\n    assertEquals(\"http://acmepaymentscorp/oauth/auz/authorize\", config.getAuthorizationEndpoint());\n    assertEquals(Arrays.asList(\"READ\", \"WRITE\", \"DELETE\", \"openid\", \"scope\", \"profile\", \"email\", \"address\", \"phone\"), config.getScopesSupported());\n    assertEquals(Arrays.asList(\"code\", \"code id_token\", \"code token\", \"code id_token token\", \"token\", \"id_token\", \"id_token token\"), config.getResponseTypesSupported());\n  }\n\n","sourceOld":"  @Test\n  public void wellKnownConfigFromString() throws IOException {\n    Path configJson = TEST_PATH().resolve(\"security\").resolve(\"jwt_well-known-config.json\");\n    String configString = StringUtils.join(Files.readAllLines(configJson), \"\\n\");\n    JWTAuthPlugin.WellKnownDiscoveryConfig config = JWTAuthPlugin.WellKnownDiscoveryConfig.parse(configString, StandardCharsets.UTF_8);\n    assertEquals(\"https://acmepaymentscorp/oauth/jwks\", config.getJwksUrl());\n    assertEquals(\"http://acmepaymentscorp\", config.getIssuer());\n    assertEquals(\"http://acmepaymentscorp/oauth/auz/authorize\", config.getAuthorizationEndpoint());\n    assertEquals(Arrays.asList(\"READ\", \"WRITE\", \"DELETE\", \"openid\", \"scope\", \"profile\", \"email\", \"address\", \"phone\"), config.getScopesSupported());\n    assertEquals(Arrays.asList(\"code\", \"code id_token\", \"code token\", \"code id_token token\", \"token\", \"id_token\", \"id_token token\"), config.getResponseTypesSupported());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"1ac780c217504f0ca673ac5dcb98768984267c60":["bb3e075eaa5788b2762ec235bf72b069cefe3f50"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["1ac780c217504f0ca673ac5dcb98768984267c60"],"bb3e075eaa5788b2762ec235bf72b069cefe3f50":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"2682a1cd25864ccdc1b44bf047bd08700f28ba06":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","bb3e075eaa5788b2762ec235bf72b069cefe3f50"]},"commit2Childs":{"1ac780c217504f0ca673ac5dcb98768984267c60":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["bb3e075eaa5788b2762ec235bf72b069cefe3f50","2682a1cd25864ccdc1b44bf047bd08700f28ba06"],"bb3e075eaa5788b2762ec235bf72b069cefe3f50":["1ac780c217504f0ca673ac5dcb98768984267c60","2682a1cd25864ccdc1b44bf047bd08700f28ba06"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"2682a1cd25864ccdc1b44bf047bd08700f28ba06":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817","2682a1cd25864ccdc1b44bf047bd08700f28ba06"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}