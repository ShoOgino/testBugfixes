{"path":"contrib/gdata-server/src/core/src/test/org/apache/lucene/gdata/storage/lucenestorage/TestStorageBuffer#testGetSortedEntries().mjava","commits":[{"id":"4055ae1e0f6bbe8fa4c1069a11adee5e57b518fe","date":1166036663,"type":1,"author":"Simon Willnauer","isMerge":false,"pathNew":"contrib/gdata-server/src/core/src/test/org/apache/lucene/gdata/storage/lucenestorage/TestStorageBuffer#testGetSortedEntries().mjava","pathOld":"contrib/gdata-server/src/core/test/org/apache/lucene/gdata/storage/lucenestorage/TestStorageBuffer#testGetSortedEntries().mjava","sourceNew":"    /*\n     * Test method for 'org.apache.lucene.gdata.storage.lucenestorage.StorageBuffer.getSortedEntries(String)'\n     */\n    public void testGetSortedEntries() throws IOException, InterruptedException {\n        assertNull(this.buffer.getSortedEntries(FEEDID));\n        ServerBaseEntry e = createServerBaseEntry(\"2\",FEEDID);\n        e.setUpdated(new DateTime(System.currentTimeMillis()-200,0));\n        StorageEntryWrapper wrapper = new StorageEntryWrapper(e,StorageOperation.INSERT);\n        this.buffer.addEntry(wrapper);\n        e.setId(\"0\");\n//      force timestamp\n        e.setUpdated(new DateTime(System.currentTimeMillis()-180,0));\n        wrapper = new StorageEntryWrapper(e,StorageOperation.INSERT);\n        this.buffer.addEntry(wrapper);\n        e.setId(\"1\");\n//      force timestamp\n        e.setUpdated(new DateTime(System.currentTimeMillis()-160,0));\n        wrapper = new StorageEntryWrapper(e,StorageOperation.INSERT);\n        this.buffer.addEntry(wrapper);\n        e.setId(\"0\");\n//      force timestamp\n        e.setUpdated(new DateTime(System.currentTimeMillis()-140,0));\n        wrapper = new StorageEntryWrapper(e,StorageOperation.UPDATE);\n        this.buffer.addEntry(wrapper);\n//      force timestamp\n        e.setUpdated(new DateTime(System.currentTimeMillis()-120,0));\n        wrapper = new StorageEntryWrapper(e,StorageOperation.DELETE);\n        this.buffer.addEntry(wrapper);\n        List<StorageEntryWrapper> list = this.buffer.getSortedEntries(FEEDID);\n       assertEquals(3,list.size());\n        for (int i = 0; i < 3; i++) {\n            assertEquals(\"\"+i,list.get(i).getEntryId());   \n        }\n        \n\n    }\n\n","sourceOld":"    /*\n     * Test method for 'org.apache.lucene.gdata.storage.lucenestorage.StorageBuffer.getSortedEntries(String)'\n     */\n    public void testGetSortedEntries() throws IOException, InterruptedException {\n        assertNull(this.buffer.getSortedEntries(FEEDID));\n        ServerBaseEntry e = createServerBaseEntry(\"2\",FEEDID);\n        e.setUpdated(new DateTime(System.currentTimeMillis()-200,0));\n        StorageEntryWrapper wrapper = new StorageEntryWrapper(e,StorageOperation.INSERT);\n        this.buffer.addEntry(wrapper);\n        e.setId(\"0\");\n//      force timestamp\n        e.setUpdated(new DateTime(System.currentTimeMillis()-180,0));\n        wrapper = new StorageEntryWrapper(e,StorageOperation.INSERT);\n        this.buffer.addEntry(wrapper);\n        e.setId(\"1\");\n//      force timestamp\n        e.setUpdated(new DateTime(System.currentTimeMillis()-160,0));\n        wrapper = new StorageEntryWrapper(e,StorageOperation.INSERT);\n        this.buffer.addEntry(wrapper);\n        e.setId(\"0\");\n//      force timestamp\n        e.setUpdated(new DateTime(System.currentTimeMillis()-140,0));\n        wrapper = new StorageEntryWrapper(e,StorageOperation.UPDATE);\n        this.buffer.addEntry(wrapper);\n//      force timestamp\n        e.setUpdated(new DateTime(System.currentTimeMillis()-120,0));\n        wrapper = new StorageEntryWrapper(e,StorageOperation.DELETE);\n        this.buffer.addEntry(wrapper);\n        List<StorageEntryWrapper> list = this.buffer.getSortedEntries(FEEDID);\n       assertEquals(3,list.size());\n        for (int i = 0; i < 3; i++) {\n            assertEquals(\"\"+i,list.get(i).getEntryId());   \n        }\n        \n\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"353a38bbb8d8067d74d6039986c7ce44c2f6cdbe","date":1195519587,"type":4,"author":"Michael Busch","isMerge":false,"pathNew":"/dev/null","pathOld":"contrib/gdata-server/src/core/src/test/org/apache/lucene/gdata/storage/lucenestorage/TestStorageBuffer#testGetSortedEntries().mjava","sourceNew":null,"sourceOld":"    /*\n     * Test method for 'org.apache.lucene.gdata.storage.lucenestorage.StorageBuffer.getSortedEntries(String)'\n     */\n    public void testGetSortedEntries() throws IOException, InterruptedException {\n        assertNull(this.buffer.getSortedEntries(FEEDID));\n        ServerBaseEntry e = createServerBaseEntry(\"2\",FEEDID);\n        e.setUpdated(new DateTime(System.currentTimeMillis()-200,0));\n        StorageEntryWrapper wrapper = new StorageEntryWrapper(e,StorageOperation.INSERT);\n        this.buffer.addEntry(wrapper);\n        e.setId(\"0\");\n//      force timestamp\n        e.setUpdated(new DateTime(System.currentTimeMillis()-180,0));\n        wrapper = new StorageEntryWrapper(e,StorageOperation.INSERT);\n        this.buffer.addEntry(wrapper);\n        e.setId(\"1\");\n//      force timestamp\n        e.setUpdated(new DateTime(System.currentTimeMillis()-160,0));\n        wrapper = new StorageEntryWrapper(e,StorageOperation.INSERT);\n        this.buffer.addEntry(wrapper);\n        e.setId(\"0\");\n//      force timestamp\n        e.setUpdated(new DateTime(System.currentTimeMillis()-140,0));\n        wrapper = new StorageEntryWrapper(e,StorageOperation.UPDATE);\n        this.buffer.addEntry(wrapper);\n//      force timestamp\n        e.setUpdated(new DateTime(System.currentTimeMillis()-120,0));\n        wrapper = new StorageEntryWrapper(e,StorageOperation.DELETE);\n        this.buffer.addEntry(wrapper);\n        List<StorageEntryWrapper> list = this.buffer.getSortedEntries(FEEDID);\n       assertEquals(3,list.size());\n        for (int i = 0; i < 3; i++) {\n            assertEquals(\"\"+i,list.get(i).getEntryId());   \n        }\n        \n\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"4055ae1e0f6bbe8fa4c1069a11adee5e57b518fe":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"353a38bbb8d8067d74d6039986c7ce44c2f6cdbe":["4055ae1e0f6bbe8fa4c1069a11adee5e57b518fe"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["353a38bbb8d8067d74d6039986c7ce44c2f6cdbe"]},"commit2Childs":{"4055ae1e0f6bbe8fa4c1069a11adee5e57b518fe":["353a38bbb8d8067d74d6039986c7ce44c2f6cdbe"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["4055ae1e0f6bbe8fa4c1069a11adee5e57b518fe"],"353a38bbb8d8067d74d6039986c7ce44c2f6cdbe":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}