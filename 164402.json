{"path":"solr/core/src/test/org/apache/solr/spelling/WordBreakSolrSpellCheckerTest#testCollate().mjava","commits":[{"id":"0ad9ec888e587ca9a3279368245cdf00aabdc108","date":1338832525,"type":0,"author":"James Dyer","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/spelling/WordBreakSolrSpellCheckerTest#testCollate().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testCollate() throws Exception {\n   assertQ(req(\n        \"q\", \"lowerfilt:(paintable pine apple godness)\", \n        \"qt\", \"spellCheckWithWordbreak\", \n        \"indent\", \"true\",\n        SpellCheckComponent.SPELLCHECK_BUILD, \"true\",\n        SpellCheckComponent.COMPONENT_NAME, \"true\", \n        SpellCheckComponent.SPELLCHECK_ACCURACY, \".75\", \n        SpellCheckComponent.SPELLCHECK_EXTENDED_RESULTS, \"true\",\n        SpellCheckComponent.SPELLCHECK_COLLATE, \"true\",\n        SpellCheckComponent.SPELLCHECK_COLLATE_EXTENDED_RESULTS, \"true\",\n        SpellCheckComponent.SPELLCHECK_MAX_COLLATIONS, \"10\"),\n        \"//lst[@name='collation'][1 ]/str[@name='collationQuery']='lowerfilt:(printable line ample goodness)'\",\n        \"//lst[@name='collation'][2 ]/str[@name='collationQuery']='lowerfilt:(paintablepine ample goodness)'\",\n        \"//lst[@name='collation'][3 ]/str[@name='collationQuery']='lowerfilt:(printable pineapple goodness)'\",\n        \"//lst[@name='collation'][4 ]/str[@name='collationQuery']='lowerfilt:((paint able) line ample goodness)'\",\n        \"//lst[@name='collation'][5 ]/str[@name='collationQuery']='lowerfilt:(printable (pi ne) ample goodness)'\",\n        \"//lst[@name='collation'][6 ]/str[@name='collationQuery']='lowerfilt:((paint able) pineapple goodness)'\",\n        \"//lst[@name='collation'][7 ]/str[@name='collationQuery']='lowerfilt:((paint able) (pi ne) ample goodness)'\",\n        \"//lst[@name='collation'][8 ]/str[@name='collationQuery']='lowerfilt:(pintable line ample goodness)'\",\n        \"//lst[@name='collation'][9 ]/str[@name='collationQuery']='lowerfilt:(pintable pineapple goodness)'\",\n        \"//lst[@name='collation'][10]/str[@name='collationQuery']='lowerfilt:(pintable (pi ne) ample goodness)'\",\n        \"//lst[@name='collation'][10]/lst[@name='misspellingsAndCorrections']/str[@name='paintable']='pintable'\",\n        \"//lst[@name='collation'][10]/lst[@name='misspellingsAndCorrections']/str[@name='pine']='pi ne'\",\n        \"//lst[@name='collation'][10]/lst[@name='misspellingsAndCorrections']/str[@name='apple']='ample'\",\n        \"//lst[@name='collation'][10]/lst[@name='misspellingsAndCorrections']/str[@name='godness']='goodness'\"\n    );\n    assertQ(req(\n        \"q\", \"lowerfilt:(pine AND apple)\", \n        \"qt\", \"spellCheckWithWordbreak\", \n        \"indent\", \"true\",\n        SpellCheckComponent.COMPONENT_NAME, \"true\", \n        SpellCheckComponent.SPELLCHECK_ACCURACY, \".75\", \n        SpellCheckComponent.SPELLCHECK_EXTENDED_RESULTS, \"true\",\n        SpellCheckComponent.SPELLCHECK_COLLATE, \"true\",\n        SpellCheckComponent.SPELLCHECK_COLLATE_EXTENDED_RESULTS, \"true\",\n        SpellCheckComponent.SPELLCHECK_MAX_COLLATIONS, \"10\"),\n        \"//lst[@name='collation'][1 ]/str[@name='collationQuery']='lowerfilt:(line AND ample)'\",\n        \"//lst[@name='collation'][2 ]/str[@name='collationQuery']='lowerfilt:(pineapple)'\",\n        \"//lst[@name='collation'][3 ]/str[@name='collationQuery']='lowerfilt:((pi AND ne) AND ample)'\"\n    );\n    assertQ(req(\n        \"q\", \"lowerfilt:pine AND NOT lowerfilt:apple\", \n        \"qt\", \"spellCheckWithWordbreak\", \n        \"indent\", \"true\",\n        SpellCheckComponent.COMPONENT_NAME, \"true\", \n        SpellCheckComponent.SPELLCHECK_ACCURACY, \".75\", \n        SpellCheckComponent.SPELLCHECK_EXTENDED_RESULTS, \"true\",\n        SpellCheckComponent.SPELLCHECK_COLLATE, \"true\",\n        SpellCheckComponent.SPELLCHECK_COLLATE_EXTENDED_RESULTS, \"true\",\n        SpellCheckComponent.SPELLCHECK_MAX_COLLATIONS, \"10\"),\n        \"//lst[@name='collation'][1 ]/str[@name='collationQuery']='lowerfilt:line AND NOT lowerfilt:ample'\",\n        \"//lst[@name='collation'][2 ]/str[@name='collationQuery']='lowerfilt:(pi AND ne) AND NOT lowerfilt:ample'\"\n    );\n    assertQ(req(\n        \"q\", \"lowerfilt:pine NOT lowerfilt:apple\", \n        \"qt\", \"spellCheckWithWordbreak\", \n        \"indent\", \"true\",\n        SpellCheckComponent.COMPONENT_NAME, \"true\", \n        SpellCheckComponent.SPELLCHECK_ACCURACY, \".75\", \n        SpellCheckComponent.SPELLCHECK_EXTENDED_RESULTS, \"true\",\n        SpellCheckComponent.SPELLCHECK_COLLATE, \"true\",\n        SpellCheckComponent.SPELLCHECK_COLLATE_EXTENDED_RESULTS, \"true\",\n        SpellCheckComponent.SPELLCHECK_MAX_COLLATIONS, \"10\"),\n        \"//lst[@name='collation'][1 ]/str[@name='collationQuery']='lowerfilt:line NOT lowerfilt:ample'\",\n        \"//lst[@name='collation'][2 ]/str[@name='collationQuery']='lowerfilt:(pi AND ne) NOT lowerfilt:ample'\"\n    );\n    assertQ(req(\n        \"q\", \"lowerfilt:(+pine -apple)\", \n        \"qt\", \"spellCheckWithWordbreak\", \n        \"indent\", \"true\",\n        SpellCheckComponent.COMPONENT_NAME, \"true\", \n        SpellCheckComponent.SPELLCHECK_ACCURACY, \".75\", \n        SpellCheckComponent.SPELLCHECK_EXTENDED_RESULTS, \"true\",\n        SpellCheckComponent.SPELLCHECK_COLLATE, \"true\",\n        SpellCheckComponent.SPELLCHECK_COLLATE_EXTENDED_RESULTS, \"true\",\n        SpellCheckComponent.SPELLCHECK_MAX_COLLATIONS, \"10\"),\n        \"//lst[@name='collation'][1 ]/str[@name='collationQuery']='lowerfilt:(+line -ample)'\",\n        \"//lst[@name='collation'][2 ]/str[@name='collationQuery']='lowerfilt:((+pi +ne) -ample)'\"\n    );\n    assertQ(req(\n        \"q\", \"lowerfilt:(+printableinpuntableplantable)\", \n        \"qt\", \"spellCheckWithWordbreak\", \n        \"indent\", \"true\",\n        SpellCheckComponent.COMPONENT_NAME, \"true\", \n        SpellCheckComponent.SPELLCHECK_ACCURACY, \"1\", \n        SpellCheckComponent.SPELLCHECK_EXTENDED_RESULTS, \"true\",\n        SpellCheckComponent.SPELLCHECK_COLLATE, \"true\",\n        SpellCheckComponent.SPELLCHECK_COLLATE_EXTENDED_RESULTS, \"true\",\n        SpellCheckComponent.SPELLCHECK_MAX_COLLATIONS, \"1\"),\n        \"//lst[@name='collation'][1 ]/str[@name='collationQuery']='lowerfilt:((+printable +in +puntable +plantable))'\"\n    );    \n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["a129ba8305f969b37c51a05f7307dac0fe1268c5"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"a129ba8305f969b37c51a05f7307dac0fe1268c5","date":1374768243,"type":3,"author":"James Dyer","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/spelling/WordBreakSolrSpellCheckerTest#testCollate().mjava","pathOld":"solr/core/src/test/org/apache/solr/spelling/WordBreakSolrSpellCheckerTest#testCollate().mjava","sourceNew":"  @Test\n  public void testCollate() throws Exception {\n   assertQ(req(\n        \"q\", \"lowerfilt:(paintable pine apple godness)\", \n        \"qt\", \"spellCheckWithWordbreak\", \n        \"indent\", \"true\",\n        SpellCheckComponent.SPELLCHECK_BUILD, \"true\",\n        SpellCheckComponent.COMPONENT_NAME, \"true\", \n        SpellCheckComponent.SPELLCHECK_ACCURACY, \".75\", \n        SpellCheckComponent.SPELLCHECK_EXTENDED_RESULTS, \"true\",\n        SpellCheckComponent.SPELLCHECK_COLLATE, \"true\",\n        SpellCheckComponent.SPELLCHECK_COLLATE_EXTENDED_RESULTS, \"true\",\n        SpellCheckComponent.SPELLCHECK_MAX_COLLATIONS, \"10\"),\n        \"//lst[@name='collation'][1 ]/str[@name='collationQuery']='lowerfilt:(printable line ample goodness)'\",\n        \"//lst[@name='collation'][2 ]/str[@name='collationQuery']='lowerfilt:(paintablepine ample goodness)'\",\n        \"//lst[@name='collation'][3 ]/str[@name='collationQuery']='lowerfilt:(printable pineapple goodness)'\",\n        \"//lst[@name='collation'][4 ]/str[@name='collationQuery']='lowerfilt:((paint able) line ample goodness)'\",\n        \"//lst[@name='collation'][5 ]/str[@name='collationQuery']='lowerfilt:(printable (pi ne) ample goodness)'\",\n        \"//lst[@name='collation'][6 ]/str[@name='collationQuery']='lowerfilt:((paint able) pineapple goodness)'\",\n        \"//lst[@name='collation'][7 ]/str[@name='collationQuery']='lowerfilt:((paint able) (pi ne) ample goodness)'\",\n        \"//lst[@name='collation'][8 ]/str[@name='collationQuery']='lowerfilt:(pintable line ample goodness)'\",\n        \"//lst[@name='collation'][9 ]/str[@name='collationQuery']='lowerfilt:(pintable pineapple goodness)'\",\n        \"//lst[@name='collation'][10]/str[@name='collationQuery']='lowerfilt:(pintable (pi ne) ample goodness)'\",\n        \"//lst[@name='collation'][10]/lst[@name='misspellingsAndCorrections']/str[@name='paintable']='pintable'\",\n        \"//lst[@name='collation'][10]/lst[@name='misspellingsAndCorrections']/str[@name='pine']='pi ne'\",\n        \"//lst[@name='collation'][10]/lst[@name='misspellingsAndCorrections']/str[@name='apple']='ample'\",\n        \"//lst[@name='collation'][10]/lst[@name='misspellingsAndCorrections']/str[@name='godness']='goodness'\"\n    );\n    assertQ(req(\n        \"q\", \"lowerfilt:(pine AND apple)\", \n        \"qt\", \"spellCheckWithWordbreak\", \n        \"indent\", \"true\",\n        SpellCheckComponent.COMPONENT_NAME, \"true\", \n        SpellCheckComponent.SPELLCHECK_ACCURACY, \".75\", \n        SpellCheckComponent.SPELLCHECK_EXTENDED_RESULTS, \"true\",\n        SpellCheckComponent.SPELLCHECK_COLLATE, \"true\",\n        SpellCheckComponent.SPELLCHECK_COLLATE_EXTENDED_RESULTS, \"true\",\n        SpellCheckComponent.SPELLCHECK_MAX_COLLATIONS, \"10\"),\n        \"//lst[@name='collation'][1 ]/str[@name='collationQuery']='lowerfilt:(line AND ample)'\",\n        \"//lst[@name='collation'][2 ]/str[@name='collationQuery']='lowerfilt:(pineapple)'\",\n        \"//lst[@name='collation'][3 ]/str[@name='collationQuery']='lowerfilt:((pi AND ne) AND ample)'\"\n    );\n    assertQ(req(\n        \"q\", \"lowerfilt:pine AND NOT lowerfilt:apple\", \n        \"qt\", \"spellCheckWithWordbreak\", \n        \"indent\", \"true\",\n        SpellCheckComponent.COMPONENT_NAME, \"true\", \n        SpellCheckComponent.SPELLCHECK_ACCURACY, \".75\", \n        SpellCheckComponent.SPELLCHECK_EXTENDED_RESULTS, \"true\",\n        SpellCheckComponent.SPELLCHECK_COLLATE, \"true\",\n        SpellCheckComponent.SPELLCHECK_COLLATE_EXTENDED_RESULTS, \"true\",\n        SpellCheckComponent.SPELLCHECK_MAX_COLLATIONS, \"10\"),\n        \"//lst[@name='collation'][1 ]/str[@name='collationQuery']='lowerfilt:line AND NOT lowerfilt:ample'\",\n        \"//lst[@name='collation'][2 ]/str[@name='collationQuery']='lowerfilt:(pi AND ne) AND NOT lowerfilt:ample'\"\n    );\n    assertQ(req(\n        \"q\", \"lowerfilt:pine NOT lowerfilt:apple\", \n        \"qt\", \"spellCheckWithWordbreak\", \n        \"indent\", \"true\",\n        SpellCheckComponent.COMPONENT_NAME, \"true\", \n        SpellCheckComponent.SPELLCHECK_ACCURACY, \".75\", \n        SpellCheckComponent.SPELLCHECK_EXTENDED_RESULTS, \"true\",\n        SpellCheckComponent.SPELLCHECK_COLLATE, \"true\",\n        SpellCheckComponent.SPELLCHECK_COLLATE_EXTENDED_RESULTS, \"true\",\n        SpellCheckComponent.SPELLCHECK_MAX_COLLATIONS, \"10\"),\n        \"//lst[@name='collation'][1 ]/str[@name='collationQuery']='lowerfilt:line NOT lowerfilt:ample'\",\n        \"//lst[@name='collation'][2 ]/str[@name='collationQuery']='lowerfilt:(pi AND ne) NOT lowerfilt:ample'\"\n    );\n    assertQ(req(\n        \"q\", \"lowerfilt:(+pine -apple)\", \n        \"qt\", \"spellCheckWithWordbreak\", \n        \"indent\", \"true\",\n        SpellCheckComponent.COMPONENT_NAME, \"true\", \n        SpellCheckComponent.SPELLCHECK_ACCURACY, \".75\", \n        SpellCheckComponent.SPELLCHECK_EXTENDED_RESULTS, \"true\",\n        SpellCheckComponent.SPELLCHECK_COLLATE, \"true\",\n        SpellCheckComponent.SPELLCHECK_COLLATE_EXTENDED_RESULTS, \"true\",\n        SpellCheckComponent.SPELLCHECK_MAX_COLLATIONS, \"10\"),\n        \"//lst[@name='collation'][1 ]/str[@name='collationQuery']='lowerfilt:(+line -ample)'\",\n        \"//lst[@name='collation'][2 ]/str[@name='collationQuery']='lowerfilt:((+pi +ne) -ample)'\"\n    );\n    assertQ(req(\n        \"q\", \"lowerfilt:(+printableinpuntableplantable)\", \n        \"qt\", \"spellCheckWithWordbreak\", \n        \"indent\", \"true\",\n        SpellCheckComponent.COMPONENT_NAME, \"true\", \n        SpellCheckComponent.SPELLCHECK_ACCURACY, \"1\", \n        SpellCheckComponent.SPELLCHECK_EXTENDED_RESULTS, \"true\",\n        SpellCheckComponent.SPELLCHECK_COLLATE, \"true\",\n        SpellCheckComponent.SPELLCHECK_COLLATE_EXTENDED_RESULTS, \"true\",\n        SpellCheckComponent.SPELLCHECK_MAX_COLLATIONS, \"1\"),\n        \"//lst[@name='collation'][1 ]/str[@name='collationQuery']='lowerfilt:((+printable +in +puntable +plantable))'\"\n    );\n    assertQ(req(\n        \"q\", \"zxcv AND qwtp AND fghj\", \n        \"qt\", \"spellCheckWithWordbreak\",\n        \"defType\", \"edismax\",\n        \"qf\", \"lowerfilt\",\n        \"indent\", \"true\",\n        SpellCheckComponent.SPELLCHECK_BUILD, \"true\",\n        SpellCheckComponent.COMPONENT_NAME, \"true\", \n        SpellCheckComponent.SPELLCHECK_ACCURACY, \".75\", \n        SpellCheckComponent.SPELLCHECK_EXTENDED_RESULTS, \"true\",\n        SpellCheckComponent.SPELLCHECK_COLLATE, \"true\",\n        SpellCheckComponent.SPELLCHECK_COLLATE_EXTENDED_RESULTS, \"true\",\n        SpellCheckComponent.SPELLCHECK_MAX_COLLATIONS, \"10\"),\n        \"//lst[@name='collation'][1 ]/str[@name='collationQuery']='zxcvqwtp AND (fg AND hj)'\"\n    ); \n  }\n\n","sourceOld":"  @Test\n  public void testCollate() throws Exception {\n   assertQ(req(\n        \"q\", \"lowerfilt:(paintable pine apple godness)\", \n        \"qt\", \"spellCheckWithWordbreak\", \n        \"indent\", \"true\",\n        SpellCheckComponent.SPELLCHECK_BUILD, \"true\",\n        SpellCheckComponent.COMPONENT_NAME, \"true\", \n        SpellCheckComponent.SPELLCHECK_ACCURACY, \".75\", \n        SpellCheckComponent.SPELLCHECK_EXTENDED_RESULTS, \"true\",\n        SpellCheckComponent.SPELLCHECK_COLLATE, \"true\",\n        SpellCheckComponent.SPELLCHECK_COLLATE_EXTENDED_RESULTS, \"true\",\n        SpellCheckComponent.SPELLCHECK_MAX_COLLATIONS, \"10\"),\n        \"//lst[@name='collation'][1 ]/str[@name='collationQuery']='lowerfilt:(printable line ample goodness)'\",\n        \"//lst[@name='collation'][2 ]/str[@name='collationQuery']='lowerfilt:(paintablepine ample goodness)'\",\n        \"//lst[@name='collation'][3 ]/str[@name='collationQuery']='lowerfilt:(printable pineapple goodness)'\",\n        \"//lst[@name='collation'][4 ]/str[@name='collationQuery']='lowerfilt:((paint able) line ample goodness)'\",\n        \"//lst[@name='collation'][5 ]/str[@name='collationQuery']='lowerfilt:(printable (pi ne) ample goodness)'\",\n        \"//lst[@name='collation'][6 ]/str[@name='collationQuery']='lowerfilt:((paint able) pineapple goodness)'\",\n        \"//lst[@name='collation'][7 ]/str[@name='collationQuery']='lowerfilt:((paint able) (pi ne) ample goodness)'\",\n        \"//lst[@name='collation'][8 ]/str[@name='collationQuery']='lowerfilt:(pintable line ample goodness)'\",\n        \"//lst[@name='collation'][9 ]/str[@name='collationQuery']='lowerfilt:(pintable pineapple goodness)'\",\n        \"//lst[@name='collation'][10]/str[@name='collationQuery']='lowerfilt:(pintable (pi ne) ample goodness)'\",\n        \"//lst[@name='collation'][10]/lst[@name='misspellingsAndCorrections']/str[@name='paintable']='pintable'\",\n        \"//lst[@name='collation'][10]/lst[@name='misspellingsAndCorrections']/str[@name='pine']='pi ne'\",\n        \"//lst[@name='collation'][10]/lst[@name='misspellingsAndCorrections']/str[@name='apple']='ample'\",\n        \"//lst[@name='collation'][10]/lst[@name='misspellingsAndCorrections']/str[@name='godness']='goodness'\"\n    );\n    assertQ(req(\n        \"q\", \"lowerfilt:(pine AND apple)\", \n        \"qt\", \"spellCheckWithWordbreak\", \n        \"indent\", \"true\",\n        SpellCheckComponent.COMPONENT_NAME, \"true\", \n        SpellCheckComponent.SPELLCHECK_ACCURACY, \".75\", \n        SpellCheckComponent.SPELLCHECK_EXTENDED_RESULTS, \"true\",\n        SpellCheckComponent.SPELLCHECK_COLLATE, \"true\",\n        SpellCheckComponent.SPELLCHECK_COLLATE_EXTENDED_RESULTS, \"true\",\n        SpellCheckComponent.SPELLCHECK_MAX_COLLATIONS, \"10\"),\n        \"//lst[@name='collation'][1 ]/str[@name='collationQuery']='lowerfilt:(line AND ample)'\",\n        \"//lst[@name='collation'][2 ]/str[@name='collationQuery']='lowerfilt:(pineapple)'\",\n        \"//lst[@name='collation'][3 ]/str[@name='collationQuery']='lowerfilt:((pi AND ne) AND ample)'\"\n    );\n    assertQ(req(\n        \"q\", \"lowerfilt:pine AND NOT lowerfilt:apple\", \n        \"qt\", \"spellCheckWithWordbreak\", \n        \"indent\", \"true\",\n        SpellCheckComponent.COMPONENT_NAME, \"true\", \n        SpellCheckComponent.SPELLCHECK_ACCURACY, \".75\", \n        SpellCheckComponent.SPELLCHECK_EXTENDED_RESULTS, \"true\",\n        SpellCheckComponent.SPELLCHECK_COLLATE, \"true\",\n        SpellCheckComponent.SPELLCHECK_COLLATE_EXTENDED_RESULTS, \"true\",\n        SpellCheckComponent.SPELLCHECK_MAX_COLLATIONS, \"10\"),\n        \"//lst[@name='collation'][1 ]/str[@name='collationQuery']='lowerfilt:line AND NOT lowerfilt:ample'\",\n        \"//lst[@name='collation'][2 ]/str[@name='collationQuery']='lowerfilt:(pi AND ne) AND NOT lowerfilt:ample'\"\n    );\n    assertQ(req(\n        \"q\", \"lowerfilt:pine NOT lowerfilt:apple\", \n        \"qt\", \"spellCheckWithWordbreak\", \n        \"indent\", \"true\",\n        SpellCheckComponent.COMPONENT_NAME, \"true\", \n        SpellCheckComponent.SPELLCHECK_ACCURACY, \".75\", \n        SpellCheckComponent.SPELLCHECK_EXTENDED_RESULTS, \"true\",\n        SpellCheckComponent.SPELLCHECK_COLLATE, \"true\",\n        SpellCheckComponent.SPELLCHECK_COLLATE_EXTENDED_RESULTS, \"true\",\n        SpellCheckComponent.SPELLCHECK_MAX_COLLATIONS, \"10\"),\n        \"//lst[@name='collation'][1 ]/str[@name='collationQuery']='lowerfilt:line NOT lowerfilt:ample'\",\n        \"//lst[@name='collation'][2 ]/str[@name='collationQuery']='lowerfilt:(pi AND ne) NOT lowerfilt:ample'\"\n    );\n    assertQ(req(\n        \"q\", \"lowerfilt:(+pine -apple)\", \n        \"qt\", \"spellCheckWithWordbreak\", \n        \"indent\", \"true\",\n        SpellCheckComponent.COMPONENT_NAME, \"true\", \n        SpellCheckComponent.SPELLCHECK_ACCURACY, \".75\", \n        SpellCheckComponent.SPELLCHECK_EXTENDED_RESULTS, \"true\",\n        SpellCheckComponent.SPELLCHECK_COLLATE, \"true\",\n        SpellCheckComponent.SPELLCHECK_COLLATE_EXTENDED_RESULTS, \"true\",\n        SpellCheckComponent.SPELLCHECK_MAX_COLLATIONS, \"10\"),\n        \"//lst[@name='collation'][1 ]/str[@name='collationQuery']='lowerfilt:(+line -ample)'\",\n        \"//lst[@name='collation'][2 ]/str[@name='collationQuery']='lowerfilt:((+pi +ne) -ample)'\"\n    );\n    assertQ(req(\n        \"q\", \"lowerfilt:(+printableinpuntableplantable)\", \n        \"qt\", \"spellCheckWithWordbreak\", \n        \"indent\", \"true\",\n        SpellCheckComponent.COMPONENT_NAME, \"true\", \n        SpellCheckComponent.SPELLCHECK_ACCURACY, \"1\", \n        SpellCheckComponent.SPELLCHECK_EXTENDED_RESULTS, \"true\",\n        SpellCheckComponent.SPELLCHECK_COLLATE, \"true\",\n        SpellCheckComponent.SPELLCHECK_COLLATE_EXTENDED_RESULTS, \"true\",\n        SpellCheckComponent.SPELLCHECK_MAX_COLLATIONS, \"1\"),\n        \"//lst[@name='collation'][1 ]/str[@name='collationQuery']='lowerfilt:((+printable +in +puntable +plantable))'\"\n    );    \n  }\n\n","bugFix":["0ad9ec888e587ca9a3279368245cdf00aabdc108"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"716d18f3a9b0993bc679d7fa7abdc9bfb03411ec","date":1376375609,"type":3,"author":"Han Jiang","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/spelling/WordBreakSolrSpellCheckerTest#testCollate().mjava","pathOld":"solr/core/src/test/org/apache/solr/spelling/WordBreakSolrSpellCheckerTest#testCollate().mjava","sourceNew":"  @Test\n  public void testCollate() throws Exception {\n   assertQ(req(\n        \"q\", \"lowerfilt:(paintable pine apple godness)\", \n        \"qt\", \"spellCheckWithWordbreak\", \n        \"indent\", \"true\",\n        SpellCheckComponent.SPELLCHECK_BUILD, \"true\",\n        SpellCheckComponent.COMPONENT_NAME, \"true\", \n        SpellCheckComponent.SPELLCHECK_ACCURACY, \".75\", \n        SpellCheckComponent.SPELLCHECK_EXTENDED_RESULTS, \"true\",\n        SpellCheckComponent.SPELLCHECK_COLLATE, \"true\",\n        SpellCheckComponent.SPELLCHECK_COLLATE_EXTENDED_RESULTS, \"true\",\n        SpellCheckComponent.SPELLCHECK_MAX_COLLATIONS, \"10\"),\n        \"//lst[@name='collation'][1 ]/str[@name='collationQuery']='lowerfilt:(printable line ample goodness)'\",\n        \"//lst[@name='collation'][2 ]/str[@name='collationQuery']='lowerfilt:(paintablepine ample goodness)'\",\n        \"//lst[@name='collation'][3 ]/str[@name='collationQuery']='lowerfilt:(printable pineapple goodness)'\",\n        \"//lst[@name='collation'][4 ]/str[@name='collationQuery']='lowerfilt:((paint able) line ample goodness)'\",\n        \"//lst[@name='collation'][5 ]/str[@name='collationQuery']='lowerfilt:(printable (pi ne) ample goodness)'\",\n        \"//lst[@name='collation'][6 ]/str[@name='collationQuery']='lowerfilt:((paint able) pineapple goodness)'\",\n        \"//lst[@name='collation'][7 ]/str[@name='collationQuery']='lowerfilt:((paint able) (pi ne) ample goodness)'\",\n        \"//lst[@name='collation'][8 ]/str[@name='collationQuery']='lowerfilt:(pintable line ample goodness)'\",\n        \"//lst[@name='collation'][9 ]/str[@name='collationQuery']='lowerfilt:(pintable pineapple goodness)'\",\n        \"//lst[@name='collation'][10]/str[@name='collationQuery']='lowerfilt:(pintable (pi ne) ample goodness)'\",\n        \"//lst[@name='collation'][10]/lst[@name='misspellingsAndCorrections']/str[@name='paintable']='pintable'\",\n        \"//lst[@name='collation'][10]/lst[@name='misspellingsAndCorrections']/str[@name='pine']='pi ne'\",\n        \"//lst[@name='collation'][10]/lst[@name='misspellingsAndCorrections']/str[@name='apple']='ample'\",\n        \"//lst[@name='collation'][10]/lst[@name='misspellingsAndCorrections']/str[@name='godness']='goodness'\"\n    );\n    assertQ(req(\n        \"q\", \"lowerfilt:(pine AND apple)\", \n        \"qt\", \"spellCheckWithWordbreak\", \n        \"indent\", \"true\",\n        SpellCheckComponent.COMPONENT_NAME, \"true\", \n        SpellCheckComponent.SPELLCHECK_ACCURACY, \".75\", \n        SpellCheckComponent.SPELLCHECK_EXTENDED_RESULTS, \"true\",\n        SpellCheckComponent.SPELLCHECK_COLLATE, \"true\",\n        SpellCheckComponent.SPELLCHECK_COLLATE_EXTENDED_RESULTS, \"true\",\n        SpellCheckComponent.SPELLCHECK_MAX_COLLATIONS, \"10\"),\n        \"//lst[@name='collation'][1 ]/str[@name='collationQuery']='lowerfilt:(line AND ample)'\",\n        \"//lst[@name='collation'][2 ]/str[@name='collationQuery']='lowerfilt:(pineapple)'\",\n        \"//lst[@name='collation'][3 ]/str[@name='collationQuery']='lowerfilt:((pi AND ne) AND ample)'\"\n    );\n    assertQ(req(\n        \"q\", \"lowerfilt:pine AND NOT lowerfilt:apple\", \n        \"qt\", \"spellCheckWithWordbreak\", \n        \"indent\", \"true\",\n        SpellCheckComponent.COMPONENT_NAME, \"true\", \n        SpellCheckComponent.SPELLCHECK_ACCURACY, \".75\", \n        SpellCheckComponent.SPELLCHECK_EXTENDED_RESULTS, \"true\",\n        SpellCheckComponent.SPELLCHECK_COLLATE, \"true\",\n        SpellCheckComponent.SPELLCHECK_COLLATE_EXTENDED_RESULTS, \"true\",\n        SpellCheckComponent.SPELLCHECK_MAX_COLLATIONS, \"10\"),\n        \"//lst[@name='collation'][1 ]/str[@name='collationQuery']='lowerfilt:line AND NOT lowerfilt:ample'\",\n        \"//lst[@name='collation'][2 ]/str[@name='collationQuery']='lowerfilt:(pi AND ne) AND NOT lowerfilt:ample'\"\n    );\n    assertQ(req(\n        \"q\", \"lowerfilt:pine NOT lowerfilt:apple\", \n        \"qt\", \"spellCheckWithWordbreak\", \n        \"indent\", \"true\",\n        SpellCheckComponent.COMPONENT_NAME, \"true\", \n        SpellCheckComponent.SPELLCHECK_ACCURACY, \".75\", \n        SpellCheckComponent.SPELLCHECK_EXTENDED_RESULTS, \"true\",\n        SpellCheckComponent.SPELLCHECK_COLLATE, \"true\",\n        SpellCheckComponent.SPELLCHECK_COLLATE_EXTENDED_RESULTS, \"true\",\n        SpellCheckComponent.SPELLCHECK_MAX_COLLATIONS, \"10\"),\n        \"//lst[@name='collation'][1 ]/str[@name='collationQuery']='lowerfilt:line NOT lowerfilt:ample'\",\n        \"//lst[@name='collation'][2 ]/str[@name='collationQuery']='lowerfilt:(pi AND ne) NOT lowerfilt:ample'\"\n    );\n    assertQ(req(\n        \"q\", \"lowerfilt:(+pine -apple)\", \n        \"qt\", \"spellCheckWithWordbreak\", \n        \"indent\", \"true\",\n        SpellCheckComponent.COMPONENT_NAME, \"true\", \n        SpellCheckComponent.SPELLCHECK_ACCURACY, \".75\", \n        SpellCheckComponent.SPELLCHECK_EXTENDED_RESULTS, \"true\",\n        SpellCheckComponent.SPELLCHECK_COLLATE, \"true\",\n        SpellCheckComponent.SPELLCHECK_COLLATE_EXTENDED_RESULTS, \"true\",\n        SpellCheckComponent.SPELLCHECK_MAX_COLLATIONS, \"10\"),\n        \"//lst[@name='collation'][1 ]/str[@name='collationQuery']='lowerfilt:(+line -ample)'\",\n        \"//lst[@name='collation'][2 ]/str[@name='collationQuery']='lowerfilt:((+pi +ne) -ample)'\"\n    );\n    assertQ(req(\n        \"q\", \"lowerfilt:(+printableinpuntableplantable)\", \n        \"qt\", \"spellCheckWithWordbreak\", \n        \"indent\", \"true\",\n        SpellCheckComponent.COMPONENT_NAME, \"true\", \n        SpellCheckComponent.SPELLCHECK_ACCURACY, \"1\", \n        SpellCheckComponent.SPELLCHECK_EXTENDED_RESULTS, \"true\",\n        SpellCheckComponent.SPELLCHECK_COLLATE, \"true\",\n        SpellCheckComponent.SPELLCHECK_COLLATE_EXTENDED_RESULTS, \"true\",\n        SpellCheckComponent.SPELLCHECK_MAX_COLLATIONS, \"1\"),\n        \"//lst[@name='collation'][1 ]/str[@name='collationQuery']='lowerfilt:((+printable +in +puntable +plantable))'\"\n    );\n    assertQ(req(\n        \"q\", \"zxcv AND qwtp AND fghj\", \n        \"qt\", \"spellCheckWithWordbreak\",\n        \"defType\", \"edismax\",\n        \"qf\", \"lowerfilt\",\n        \"indent\", \"true\",\n        SpellCheckComponent.SPELLCHECK_BUILD, \"true\",\n        SpellCheckComponent.COMPONENT_NAME, \"true\", \n        SpellCheckComponent.SPELLCHECK_ACCURACY, \".75\", \n        SpellCheckComponent.SPELLCHECK_EXTENDED_RESULTS, \"true\",\n        SpellCheckComponent.SPELLCHECK_COLLATE, \"true\",\n        SpellCheckComponent.SPELLCHECK_COLLATE_EXTENDED_RESULTS, \"true\",\n        SpellCheckComponent.SPELLCHECK_MAX_COLLATIONS, \"10\"),\n        \"//lst[@name='collation'][1 ]/str[@name='collationQuery']='zxcvqwtp AND (fg AND hj)'\"\n    ); \n  }\n\n","sourceOld":"  @Test\n  public void testCollate() throws Exception {\n   assertQ(req(\n        \"q\", \"lowerfilt:(paintable pine apple godness)\", \n        \"qt\", \"spellCheckWithWordbreak\", \n        \"indent\", \"true\",\n        SpellCheckComponent.SPELLCHECK_BUILD, \"true\",\n        SpellCheckComponent.COMPONENT_NAME, \"true\", \n        SpellCheckComponent.SPELLCHECK_ACCURACY, \".75\", \n        SpellCheckComponent.SPELLCHECK_EXTENDED_RESULTS, \"true\",\n        SpellCheckComponent.SPELLCHECK_COLLATE, \"true\",\n        SpellCheckComponent.SPELLCHECK_COLLATE_EXTENDED_RESULTS, \"true\",\n        SpellCheckComponent.SPELLCHECK_MAX_COLLATIONS, \"10\"),\n        \"//lst[@name='collation'][1 ]/str[@name='collationQuery']='lowerfilt:(printable line ample goodness)'\",\n        \"//lst[@name='collation'][2 ]/str[@name='collationQuery']='lowerfilt:(paintablepine ample goodness)'\",\n        \"//lst[@name='collation'][3 ]/str[@name='collationQuery']='lowerfilt:(printable pineapple goodness)'\",\n        \"//lst[@name='collation'][4 ]/str[@name='collationQuery']='lowerfilt:((paint able) line ample goodness)'\",\n        \"//lst[@name='collation'][5 ]/str[@name='collationQuery']='lowerfilt:(printable (pi ne) ample goodness)'\",\n        \"//lst[@name='collation'][6 ]/str[@name='collationQuery']='lowerfilt:((paint able) pineapple goodness)'\",\n        \"//lst[@name='collation'][7 ]/str[@name='collationQuery']='lowerfilt:((paint able) (pi ne) ample goodness)'\",\n        \"//lst[@name='collation'][8 ]/str[@name='collationQuery']='lowerfilt:(pintable line ample goodness)'\",\n        \"//lst[@name='collation'][9 ]/str[@name='collationQuery']='lowerfilt:(pintable pineapple goodness)'\",\n        \"//lst[@name='collation'][10]/str[@name='collationQuery']='lowerfilt:(pintable (pi ne) ample goodness)'\",\n        \"//lst[@name='collation'][10]/lst[@name='misspellingsAndCorrections']/str[@name='paintable']='pintable'\",\n        \"//lst[@name='collation'][10]/lst[@name='misspellingsAndCorrections']/str[@name='pine']='pi ne'\",\n        \"//lst[@name='collation'][10]/lst[@name='misspellingsAndCorrections']/str[@name='apple']='ample'\",\n        \"//lst[@name='collation'][10]/lst[@name='misspellingsAndCorrections']/str[@name='godness']='goodness'\"\n    );\n    assertQ(req(\n        \"q\", \"lowerfilt:(pine AND apple)\", \n        \"qt\", \"spellCheckWithWordbreak\", \n        \"indent\", \"true\",\n        SpellCheckComponent.COMPONENT_NAME, \"true\", \n        SpellCheckComponent.SPELLCHECK_ACCURACY, \".75\", \n        SpellCheckComponent.SPELLCHECK_EXTENDED_RESULTS, \"true\",\n        SpellCheckComponent.SPELLCHECK_COLLATE, \"true\",\n        SpellCheckComponent.SPELLCHECK_COLLATE_EXTENDED_RESULTS, \"true\",\n        SpellCheckComponent.SPELLCHECK_MAX_COLLATIONS, \"10\"),\n        \"//lst[@name='collation'][1 ]/str[@name='collationQuery']='lowerfilt:(line AND ample)'\",\n        \"//lst[@name='collation'][2 ]/str[@name='collationQuery']='lowerfilt:(pineapple)'\",\n        \"//lst[@name='collation'][3 ]/str[@name='collationQuery']='lowerfilt:((pi AND ne) AND ample)'\"\n    );\n    assertQ(req(\n        \"q\", \"lowerfilt:pine AND NOT lowerfilt:apple\", \n        \"qt\", \"spellCheckWithWordbreak\", \n        \"indent\", \"true\",\n        SpellCheckComponent.COMPONENT_NAME, \"true\", \n        SpellCheckComponent.SPELLCHECK_ACCURACY, \".75\", \n        SpellCheckComponent.SPELLCHECK_EXTENDED_RESULTS, \"true\",\n        SpellCheckComponent.SPELLCHECK_COLLATE, \"true\",\n        SpellCheckComponent.SPELLCHECK_COLLATE_EXTENDED_RESULTS, \"true\",\n        SpellCheckComponent.SPELLCHECK_MAX_COLLATIONS, \"10\"),\n        \"//lst[@name='collation'][1 ]/str[@name='collationQuery']='lowerfilt:line AND NOT lowerfilt:ample'\",\n        \"//lst[@name='collation'][2 ]/str[@name='collationQuery']='lowerfilt:(pi AND ne) AND NOT lowerfilt:ample'\"\n    );\n    assertQ(req(\n        \"q\", \"lowerfilt:pine NOT lowerfilt:apple\", \n        \"qt\", \"spellCheckWithWordbreak\", \n        \"indent\", \"true\",\n        SpellCheckComponent.COMPONENT_NAME, \"true\", \n        SpellCheckComponent.SPELLCHECK_ACCURACY, \".75\", \n        SpellCheckComponent.SPELLCHECK_EXTENDED_RESULTS, \"true\",\n        SpellCheckComponent.SPELLCHECK_COLLATE, \"true\",\n        SpellCheckComponent.SPELLCHECK_COLLATE_EXTENDED_RESULTS, \"true\",\n        SpellCheckComponent.SPELLCHECK_MAX_COLLATIONS, \"10\"),\n        \"//lst[@name='collation'][1 ]/str[@name='collationQuery']='lowerfilt:line NOT lowerfilt:ample'\",\n        \"//lst[@name='collation'][2 ]/str[@name='collationQuery']='lowerfilt:(pi AND ne) NOT lowerfilt:ample'\"\n    );\n    assertQ(req(\n        \"q\", \"lowerfilt:(+pine -apple)\", \n        \"qt\", \"spellCheckWithWordbreak\", \n        \"indent\", \"true\",\n        SpellCheckComponent.COMPONENT_NAME, \"true\", \n        SpellCheckComponent.SPELLCHECK_ACCURACY, \".75\", \n        SpellCheckComponent.SPELLCHECK_EXTENDED_RESULTS, \"true\",\n        SpellCheckComponent.SPELLCHECK_COLLATE, \"true\",\n        SpellCheckComponent.SPELLCHECK_COLLATE_EXTENDED_RESULTS, \"true\",\n        SpellCheckComponent.SPELLCHECK_MAX_COLLATIONS, \"10\"),\n        \"//lst[@name='collation'][1 ]/str[@name='collationQuery']='lowerfilt:(+line -ample)'\",\n        \"//lst[@name='collation'][2 ]/str[@name='collationQuery']='lowerfilt:((+pi +ne) -ample)'\"\n    );\n    assertQ(req(\n        \"q\", \"lowerfilt:(+printableinpuntableplantable)\", \n        \"qt\", \"spellCheckWithWordbreak\", \n        \"indent\", \"true\",\n        SpellCheckComponent.COMPONENT_NAME, \"true\", \n        SpellCheckComponent.SPELLCHECK_ACCURACY, \"1\", \n        SpellCheckComponent.SPELLCHECK_EXTENDED_RESULTS, \"true\",\n        SpellCheckComponent.SPELLCHECK_COLLATE, \"true\",\n        SpellCheckComponent.SPELLCHECK_COLLATE_EXTENDED_RESULTS, \"true\",\n        SpellCheckComponent.SPELLCHECK_MAX_COLLATIONS, \"1\"),\n        \"//lst[@name='collation'][1 ]/str[@name='collationQuery']='lowerfilt:((+printable +in +puntable +plantable))'\"\n    );    \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5ff704ef91e9ae30ca59babb23ece85720701b60","date":1498684964,"type":3,"author":"David Smiley","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/spelling/WordBreakSolrSpellCheckerTest#testCollate().mjava","pathOld":"solr/core/src/test/org/apache/solr/spelling/WordBreakSolrSpellCheckerTest#testCollate().mjava","sourceNew":"  @Test\n  public void testCollate() throws Exception {\n   assertQ(req(\n        \"q\", \"lowerfilt:(paintable pine apple godness)\", \n        \"qt\", \"/spellCheckWithWordbreak\",\n        \"indent\", \"true\",\n        SpellCheckComponent.SPELLCHECK_BUILD, \"true\",\n        SpellCheckComponent.COMPONENT_NAME, \"true\", \n        SpellCheckComponent.SPELLCHECK_ACCURACY, \".75\", \n        SpellCheckComponent.SPELLCHECK_EXTENDED_RESULTS, \"true\",\n        SpellCheckComponent.SPELLCHECK_COLLATE, \"true\",\n        SpellCheckComponent.SPELLCHECK_COLLATE_EXTENDED_RESULTS, \"true\",\n        SpellCheckComponent.SPELLCHECK_MAX_COLLATIONS, \"10\"),\n        \"//lst[@name='collation'][1 ]/str[@name='collationQuery']='lowerfilt:(printable line ample goodness)'\",\n        \"//lst[@name='collation'][2 ]/str[@name='collationQuery']='lowerfilt:(paintablepine ample goodness)'\",\n        \"//lst[@name='collation'][3 ]/str[@name='collationQuery']='lowerfilt:(printable pineapple goodness)'\",\n        \"//lst[@name='collation'][4 ]/str[@name='collationQuery']='lowerfilt:((paint able) line ample goodness)'\",\n        \"//lst[@name='collation'][5 ]/str[@name='collationQuery']='lowerfilt:(printable (pi ne) ample goodness)'\",\n        \"//lst[@name='collation'][6 ]/str[@name='collationQuery']='lowerfilt:((paint able) pineapple goodness)'\",\n        \"//lst[@name='collation'][7 ]/str[@name='collationQuery']='lowerfilt:((paint able) (pi ne) ample goodness)'\",\n        \"//lst[@name='collation'][8 ]/str[@name='collationQuery']='lowerfilt:(pintable line ample goodness)'\",\n        \"//lst[@name='collation'][9 ]/str[@name='collationQuery']='lowerfilt:(pintable pineapple goodness)'\",\n        \"//lst[@name='collation'][10]/str[@name='collationQuery']='lowerfilt:(pintable (pi ne) ample goodness)'\",\n        \"//lst[@name='collation'][10]/lst[@name='misspellingsAndCorrections']/str[@name='paintable']='pintable'\",\n        \"//lst[@name='collation'][10]/lst[@name='misspellingsAndCorrections']/str[@name='pine']='pi ne'\",\n        \"//lst[@name='collation'][10]/lst[@name='misspellingsAndCorrections']/str[@name='apple']='ample'\",\n        \"//lst[@name='collation'][10]/lst[@name='misspellingsAndCorrections']/str[@name='godness']='goodness'\"\n    );\n    assertQ(req(\n        \"q\", \"lowerfilt:(pine AND apple)\", \n        \"qt\", \"/spellCheckWithWordbreak\",\n        \"indent\", \"true\",\n        SpellCheckComponent.COMPONENT_NAME, \"true\", \n        SpellCheckComponent.SPELLCHECK_ACCURACY, \".75\", \n        SpellCheckComponent.SPELLCHECK_EXTENDED_RESULTS, \"true\",\n        SpellCheckComponent.SPELLCHECK_COLLATE, \"true\",\n        SpellCheckComponent.SPELLCHECK_COLLATE_EXTENDED_RESULTS, \"true\",\n        SpellCheckComponent.SPELLCHECK_MAX_COLLATIONS, \"10\"),\n        \"//lst[@name='collation'][1 ]/str[@name='collationQuery']='lowerfilt:(line AND ample)'\",\n        \"//lst[@name='collation'][2 ]/str[@name='collationQuery']='lowerfilt:(pineapple)'\",\n        \"//lst[@name='collation'][3 ]/str[@name='collationQuery']='lowerfilt:((pi AND ne) AND ample)'\"\n    );\n    assertQ(req(\n        \"q\", \"lowerfilt:pine AND NOT lowerfilt:apple\", \n        \"qt\", \"/spellCheckWithWordbreak\",\n        \"indent\", \"true\",\n        SpellCheckComponent.COMPONENT_NAME, \"true\", \n        SpellCheckComponent.SPELLCHECK_ACCURACY, \".75\", \n        SpellCheckComponent.SPELLCHECK_EXTENDED_RESULTS, \"true\",\n        SpellCheckComponent.SPELLCHECK_COLLATE, \"true\",\n        SpellCheckComponent.SPELLCHECK_COLLATE_EXTENDED_RESULTS, \"true\",\n        SpellCheckComponent.SPELLCHECK_MAX_COLLATIONS, \"10\"),\n        \"//lst[@name='collation'][1 ]/str[@name='collationQuery']='lowerfilt:line AND NOT lowerfilt:ample'\",\n        \"//lst[@name='collation'][2 ]/str[@name='collationQuery']='lowerfilt:(pi AND ne) AND NOT lowerfilt:ample'\"\n    );\n    assertQ(req(\n        \"q\", \"lowerfilt:pine NOT lowerfilt:apple\", \n        \"qt\", \"/spellCheckWithWordbreak\",\n        \"indent\", \"true\",\n        SpellCheckComponent.COMPONENT_NAME, \"true\", \n        SpellCheckComponent.SPELLCHECK_ACCURACY, \".75\", \n        SpellCheckComponent.SPELLCHECK_EXTENDED_RESULTS, \"true\",\n        SpellCheckComponent.SPELLCHECK_COLLATE, \"true\",\n        SpellCheckComponent.SPELLCHECK_COLLATE_EXTENDED_RESULTS, \"true\",\n        SpellCheckComponent.SPELLCHECK_MAX_COLLATIONS, \"10\"),\n        \"//lst[@name='collation'][1 ]/str[@name='collationQuery']='lowerfilt:line NOT lowerfilt:ample'\",\n        \"//lst[@name='collation'][2 ]/str[@name='collationQuery']='lowerfilt:(pi AND ne) NOT lowerfilt:ample'\"\n    );\n    assertQ(req(\n        \"q\", \"lowerfilt:(+pine -apple)\", \n        \"qt\", \"/spellCheckWithWordbreak\",\n        \"indent\", \"true\",\n        SpellCheckComponent.COMPONENT_NAME, \"true\", \n        SpellCheckComponent.SPELLCHECK_ACCURACY, \".75\", \n        SpellCheckComponent.SPELLCHECK_EXTENDED_RESULTS, \"true\",\n        SpellCheckComponent.SPELLCHECK_COLLATE, \"true\",\n        SpellCheckComponent.SPELLCHECK_COLLATE_EXTENDED_RESULTS, \"true\",\n        SpellCheckComponent.SPELLCHECK_MAX_COLLATIONS, \"10\"),\n        \"//lst[@name='collation'][1 ]/str[@name='collationQuery']='lowerfilt:(+line -ample)'\",\n        \"//lst[@name='collation'][2 ]/str[@name='collationQuery']='lowerfilt:((+pi +ne) -ample)'\"\n    );\n    assertQ(req(\n        \"q\", \"lowerfilt:(+printableinpuntableplantable)\", \n        \"qt\", \"/spellCheckWithWordbreak\",\n        \"indent\", \"true\",\n        SpellCheckComponent.COMPONENT_NAME, \"true\", \n        SpellCheckComponent.SPELLCHECK_ACCURACY, \"1\", \n        SpellCheckComponent.SPELLCHECK_EXTENDED_RESULTS, \"true\",\n        SpellCheckComponent.SPELLCHECK_COLLATE, \"true\",\n        SpellCheckComponent.SPELLCHECK_COLLATE_EXTENDED_RESULTS, \"true\",\n        SpellCheckComponent.SPELLCHECK_MAX_COLLATIONS, \"1\"),\n        \"//lst[@name='collation'][1 ]/str[@name='collationQuery']='lowerfilt:((+printable +in +puntable +plantable))'\"\n    );\n    assertQ(req(\n        \"q\", \"zxcv AND qwtp AND fghj\", \n        \"qt\", \"/spellCheckWithWordbreak\",\n        \"defType\", \"edismax\",\n        \"qf\", \"lowerfilt\",\n        \"indent\", \"true\",\n        SpellCheckComponent.SPELLCHECK_BUILD, \"true\",\n        SpellCheckComponent.COMPONENT_NAME, \"true\", \n        SpellCheckComponent.SPELLCHECK_ACCURACY, \".75\", \n        SpellCheckComponent.SPELLCHECK_EXTENDED_RESULTS, \"true\",\n        SpellCheckComponent.SPELLCHECK_COLLATE, \"true\",\n        SpellCheckComponent.SPELLCHECK_COLLATE_EXTENDED_RESULTS, \"true\",\n        SpellCheckComponent.SPELLCHECK_MAX_COLLATIONS, \"10\"),\n        \"//lst[@name='collation'][1 ]/str[@name='collationQuery']='zxcvqwtp AND (fg AND hj)'\"\n    ); \n  }\n\n","sourceOld":"  @Test\n  public void testCollate() throws Exception {\n   assertQ(req(\n        \"q\", \"lowerfilt:(paintable pine apple godness)\", \n        \"qt\", \"spellCheckWithWordbreak\", \n        \"indent\", \"true\",\n        SpellCheckComponent.SPELLCHECK_BUILD, \"true\",\n        SpellCheckComponent.COMPONENT_NAME, \"true\", \n        SpellCheckComponent.SPELLCHECK_ACCURACY, \".75\", \n        SpellCheckComponent.SPELLCHECK_EXTENDED_RESULTS, \"true\",\n        SpellCheckComponent.SPELLCHECK_COLLATE, \"true\",\n        SpellCheckComponent.SPELLCHECK_COLLATE_EXTENDED_RESULTS, \"true\",\n        SpellCheckComponent.SPELLCHECK_MAX_COLLATIONS, \"10\"),\n        \"//lst[@name='collation'][1 ]/str[@name='collationQuery']='lowerfilt:(printable line ample goodness)'\",\n        \"//lst[@name='collation'][2 ]/str[@name='collationQuery']='lowerfilt:(paintablepine ample goodness)'\",\n        \"//lst[@name='collation'][3 ]/str[@name='collationQuery']='lowerfilt:(printable pineapple goodness)'\",\n        \"//lst[@name='collation'][4 ]/str[@name='collationQuery']='lowerfilt:((paint able) line ample goodness)'\",\n        \"//lst[@name='collation'][5 ]/str[@name='collationQuery']='lowerfilt:(printable (pi ne) ample goodness)'\",\n        \"//lst[@name='collation'][6 ]/str[@name='collationQuery']='lowerfilt:((paint able) pineapple goodness)'\",\n        \"//lst[@name='collation'][7 ]/str[@name='collationQuery']='lowerfilt:((paint able) (pi ne) ample goodness)'\",\n        \"//lst[@name='collation'][8 ]/str[@name='collationQuery']='lowerfilt:(pintable line ample goodness)'\",\n        \"//lst[@name='collation'][9 ]/str[@name='collationQuery']='lowerfilt:(pintable pineapple goodness)'\",\n        \"//lst[@name='collation'][10]/str[@name='collationQuery']='lowerfilt:(pintable (pi ne) ample goodness)'\",\n        \"//lst[@name='collation'][10]/lst[@name='misspellingsAndCorrections']/str[@name='paintable']='pintable'\",\n        \"//lst[@name='collation'][10]/lst[@name='misspellingsAndCorrections']/str[@name='pine']='pi ne'\",\n        \"//lst[@name='collation'][10]/lst[@name='misspellingsAndCorrections']/str[@name='apple']='ample'\",\n        \"//lst[@name='collation'][10]/lst[@name='misspellingsAndCorrections']/str[@name='godness']='goodness'\"\n    );\n    assertQ(req(\n        \"q\", \"lowerfilt:(pine AND apple)\", \n        \"qt\", \"spellCheckWithWordbreak\", \n        \"indent\", \"true\",\n        SpellCheckComponent.COMPONENT_NAME, \"true\", \n        SpellCheckComponent.SPELLCHECK_ACCURACY, \".75\", \n        SpellCheckComponent.SPELLCHECK_EXTENDED_RESULTS, \"true\",\n        SpellCheckComponent.SPELLCHECK_COLLATE, \"true\",\n        SpellCheckComponent.SPELLCHECK_COLLATE_EXTENDED_RESULTS, \"true\",\n        SpellCheckComponent.SPELLCHECK_MAX_COLLATIONS, \"10\"),\n        \"//lst[@name='collation'][1 ]/str[@name='collationQuery']='lowerfilt:(line AND ample)'\",\n        \"//lst[@name='collation'][2 ]/str[@name='collationQuery']='lowerfilt:(pineapple)'\",\n        \"//lst[@name='collation'][3 ]/str[@name='collationQuery']='lowerfilt:((pi AND ne) AND ample)'\"\n    );\n    assertQ(req(\n        \"q\", \"lowerfilt:pine AND NOT lowerfilt:apple\", \n        \"qt\", \"spellCheckWithWordbreak\", \n        \"indent\", \"true\",\n        SpellCheckComponent.COMPONENT_NAME, \"true\", \n        SpellCheckComponent.SPELLCHECK_ACCURACY, \".75\", \n        SpellCheckComponent.SPELLCHECK_EXTENDED_RESULTS, \"true\",\n        SpellCheckComponent.SPELLCHECK_COLLATE, \"true\",\n        SpellCheckComponent.SPELLCHECK_COLLATE_EXTENDED_RESULTS, \"true\",\n        SpellCheckComponent.SPELLCHECK_MAX_COLLATIONS, \"10\"),\n        \"//lst[@name='collation'][1 ]/str[@name='collationQuery']='lowerfilt:line AND NOT lowerfilt:ample'\",\n        \"//lst[@name='collation'][2 ]/str[@name='collationQuery']='lowerfilt:(pi AND ne) AND NOT lowerfilt:ample'\"\n    );\n    assertQ(req(\n        \"q\", \"lowerfilt:pine NOT lowerfilt:apple\", \n        \"qt\", \"spellCheckWithWordbreak\", \n        \"indent\", \"true\",\n        SpellCheckComponent.COMPONENT_NAME, \"true\", \n        SpellCheckComponent.SPELLCHECK_ACCURACY, \".75\", \n        SpellCheckComponent.SPELLCHECK_EXTENDED_RESULTS, \"true\",\n        SpellCheckComponent.SPELLCHECK_COLLATE, \"true\",\n        SpellCheckComponent.SPELLCHECK_COLLATE_EXTENDED_RESULTS, \"true\",\n        SpellCheckComponent.SPELLCHECK_MAX_COLLATIONS, \"10\"),\n        \"//lst[@name='collation'][1 ]/str[@name='collationQuery']='lowerfilt:line NOT lowerfilt:ample'\",\n        \"//lst[@name='collation'][2 ]/str[@name='collationQuery']='lowerfilt:(pi AND ne) NOT lowerfilt:ample'\"\n    );\n    assertQ(req(\n        \"q\", \"lowerfilt:(+pine -apple)\", \n        \"qt\", \"spellCheckWithWordbreak\", \n        \"indent\", \"true\",\n        SpellCheckComponent.COMPONENT_NAME, \"true\", \n        SpellCheckComponent.SPELLCHECK_ACCURACY, \".75\", \n        SpellCheckComponent.SPELLCHECK_EXTENDED_RESULTS, \"true\",\n        SpellCheckComponent.SPELLCHECK_COLLATE, \"true\",\n        SpellCheckComponent.SPELLCHECK_COLLATE_EXTENDED_RESULTS, \"true\",\n        SpellCheckComponent.SPELLCHECK_MAX_COLLATIONS, \"10\"),\n        \"//lst[@name='collation'][1 ]/str[@name='collationQuery']='lowerfilt:(+line -ample)'\",\n        \"//lst[@name='collation'][2 ]/str[@name='collationQuery']='lowerfilt:((+pi +ne) -ample)'\"\n    );\n    assertQ(req(\n        \"q\", \"lowerfilt:(+printableinpuntableplantable)\", \n        \"qt\", \"spellCheckWithWordbreak\", \n        \"indent\", \"true\",\n        SpellCheckComponent.COMPONENT_NAME, \"true\", \n        SpellCheckComponent.SPELLCHECK_ACCURACY, \"1\", \n        SpellCheckComponent.SPELLCHECK_EXTENDED_RESULTS, \"true\",\n        SpellCheckComponent.SPELLCHECK_COLLATE, \"true\",\n        SpellCheckComponent.SPELLCHECK_COLLATE_EXTENDED_RESULTS, \"true\",\n        SpellCheckComponent.SPELLCHECK_MAX_COLLATIONS, \"1\"),\n        \"//lst[@name='collation'][1 ]/str[@name='collationQuery']='lowerfilt:((+printable +in +puntable +plantable))'\"\n    );\n    assertQ(req(\n        \"q\", \"zxcv AND qwtp AND fghj\", \n        \"qt\", \"spellCheckWithWordbreak\",\n        \"defType\", \"edismax\",\n        \"qf\", \"lowerfilt\",\n        \"indent\", \"true\",\n        SpellCheckComponent.SPELLCHECK_BUILD, \"true\",\n        SpellCheckComponent.COMPONENT_NAME, \"true\", \n        SpellCheckComponent.SPELLCHECK_ACCURACY, \".75\", \n        SpellCheckComponent.SPELLCHECK_EXTENDED_RESULTS, \"true\",\n        SpellCheckComponent.SPELLCHECK_COLLATE, \"true\",\n        SpellCheckComponent.SPELLCHECK_COLLATE_EXTENDED_RESULTS, \"true\",\n        SpellCheckComponent.SPELLCHECK_MAX_COLLATIONS, \"10\"),\n        \"//lst[@name='collation'][1 ]/str[@name='collationQuery']='zxcvqwtp AND (fg AND hj)'\"\n    ); \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"28288370235ed02234a64753cdbf0c6ec096304a","date":1498726817,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/spelling/WordBreakSolrSpellCheckerTest#testCollate().mjava","pathOld":"solr/core/src/test/org/apache/solr/spelling/WordBreakSolrSpellCheckerTest#testCollate().mjava","sourceNew":"  @Test\n  public void testCollate() throws Exception {\n   assertQ(req(\n        \"q\", \"lowerfilt:(paintable pine apple godness)\", \n        \"qt\", \"/spellCheckWithWordbreak\",\n        \"indent\", \"true\",\n        SpellCheckComponent.SPELLCHECK_BUILD, \"true\",\n        SpellCheckComponent.COMPONENT_NAME, \"true\", \n        SpellCheckComponent.SPELLCHECK_ACCURACY, \".75\", \n        SpellCheckComponent.SPELLCHECK_EXTENDED_RESULTS, \"true\",\n        SpellCheckComponent.SPELLCHECK_COLLATE, \"true\",\n        SpellCheckComponent.SPELLCHECK_COLLATE_EXTENDED_RESULTS, \"true\",\n        SpellCheckComponent.SPELLCHECK_MAX_COLLATIONS, \"10\"),\n        \"//lst[@name='collation'][1 ]/str[@name='collationQuery']='lowerfilt:(printable line ample goodness)'\",\n        \"//lst[@name='collation'][2 ]/str[@name='collationQuery']='lowerfilt:(paintablepine ample goodness)'\",\n        \"//lst[@name='collation'][3 ]/str[@name='collationQuery']='lowerfilt:(printable pineapple goodness)'\",\n        \"//lst[@name='collation'][4 ]/str[@name='collationQuery']='lowerfilt:((paint able) line ample goodness)'\",\n        \"//lst[@name='collation'][5 ]/str[@name='collationQuery']='lowerfilt:(printable (pi ne) ample goodness)'\",\n        \"//lst[@name='collation'][6 ]/str[@name='collationQuery']='lowerfilt:((paint able) pineapple goodness)'\",\n        \"//lst[@name='collation'][7 ]/str[@name='collationQuery']='lowerfilt:((paint able) (pi ne) ample goodness)'\",\n        \"//lst[@name='collation'][8 ]/str[@name='collationQuery']='lowerfilt:(pintable line ample goodness)'\",\n        \"//lst[@name='collation'][9 ]/str[@name='collationQuery']='lowerfilt:(pintable pineapple goodness)'\",\n        \"//lst[@name='collation'][10]/str[@name='collationQuery']='lowerfilt:(pintable (pi ne) ample goodness)'\",\n        \"//lst[@name='collation'][10]/lst[@name='misspellingsAndCorrections']/str[@name='paintable']='pintable'\",\n        \"//lst[@name='collation'][10]/lst[@name='misspellingsAndCorrections']/str[@name='pine']='pi ne'\",\n        \"//lst[@name='collation'][10]/lst[@name='misspellingsAndCorrections']/str[@name='apple']='ample'\",\n        \"//lst[@name='collation'][10]/lst[@name='misspellingsAndCorrections']/str[@name='godness']='goodness'\"\n    );\n    assertQ(req(\n        \"q\", \"lowerfilt:(pine AND apple)\", \n        \"qt\", \"/spellCheckWithWordbreak\",\n        \"indent\", \"true\",\n        SpellCheckComponent.COMPONENT_NAME, \"true\", \n        SpellCheckComponent.SPELLCHECK_ACCURACY, \".75\", \n        SpellCheckComponent.SPELLCHECK_EXTENDED_RESULTS, \"true\",\n        SpellCheckComponent.SPELLCHECK_COLLATE, \"true\",\n        SpellCheckComponent.SPELLCHECK_COLLATE_EXTENDED_RESULTS, \"true\",\n        SpellCheckComponent.SPELLCHECK_MAX_COLLATIONS, \"10\"),\n        \"//lst[@name='collation'][1 ]/str[@name='collationQuery']='lowerfilt:(line AND ample)'\",\n        \"//lst[@name='collation'][2 ]/str[@name='collationQuery']='lowerfilt:(pineapple)'\",\n        \"//lst[@name='collation'][3 ]/str[@name='collationQuery']='lowerfilt:((pi AND ne) AND ample)'\"\n    );\n    assertQ(req(\n        \"q\", \"lowerfilt:pine AND NOT lowerfilt:apple\", \n        \"qt\", \"/spellCheckWithWordbreak\",\n        \"indent\", \"true\",\n        SpellCheckComponent.COMPONENT_NAME, \"true\", \n        SpellCheckComponent.SPELLCHECK_ACCURACY, \".75\", \n        SpellCheckComponent.SPELLCHECK_EXTENDED_RESULTS, \"true\",\n        SpellCheckComponent.SPELLCHECK_COLLATE, \"true\",\n        SpellCheckComponent.SPELLCHECK_COLLATE_EXTENDED_RESULTS, \"true\",\n        SpellCheckComponent.SPELLCHECK_MAX_COLLATIONS, \"10\"),\n        \"//lst[@name='collation'][1 ]/str[@name='collationQuery']='lowerfilt:line AND NOT lowerfilt:ample'\",\n        \"//lst[@name='collation'][2 ]/str[@name='collationQuery']='lowerfilt:(pi AND ne) AND NOT lowerfilt:ample'\"\n    );\n    assertQ(req(\n        \"q\", \"lowerfilt:pine NOT lowerfilt:apple\", \n        \"qt\", \"/spellCheckWithWordbreak\",\n        \"indent\", \"true\",\n        SpellCheckComponent.COMPONENT_NAME, \"true\", \n        SpellCheckComponent.SPELLCHECK_ACCURACY, \".75\", \n        SpellCheckComponent.SPELLCHECK_EXTENDED_RESULTS, \"true\",\n        SpellCheckComponent.SPELLCHECK_COLLATE, \"true\",\n        SpellCheckComponent.SPELLCHECK_COLLATE_EXTENDED_RESULTS, \"true\",\n        SpellCheckComponent.SPELLCHECK_MAX_COLLATIONS, \"10\"),\n        \"//lst[@name='collation'][1 ]/str[@name='collationQuery']='lowerfilt:line NOT lowerfilt:ample'\",\n        \"//lst[@name='collation'][2 ]/str[@name='collationQuery']='lowerfilt:(pi AND ne) NOT lowerfilt:ample'\"\n    );\n    assertQ(req(\n        \"q\", \"lowerfilt:(+pine -apple)\", \n        \"qt\", \"/spellCheckWithWordbreak\",\n        \"indent\", \"true\",\n        SpellCheckComponent.COMPONENT_NAME, \"true\", \n        SpellCheckComponent.SPELLCHECK_ACCURACY, \".75\", \n        SpellCheckComponent.SPELLCHECK_EXTENDED_RESULTS, \"true\",\n        SpellCheckComponent.SPELLCHECK_COLLATE, \"true\",\n        SpellCheckComponent.SPELLCHECK_COLLATE_EXTENDED_RESULTS, \"true\",\n        SpellCheckComponent.SPELLCHECK_MAX_COLLATIONS, \"10\"),\n        \"//lst[@name='collation'][1 ]/str[@name='collationQuery']='lowerfilt:(+line -ample)'\",\n        \"//lst[@name='collation'][2 ]/str[@name='collationQuery']='lowerfilt:((+pi +ne) -ample)'\"\n    );\n    assertQ(req(\n        \"q\", \"lowerfilt:(+printableinpuntableplantable)\", \n        \"qt\", \"/spellCheckWithWordbreak\",\n        \"indent\", \"true\",\n        SpellCheckComponent.COMPONENT_NAME, \"true\", \n        SpellCheckComponent.SPELLCHECK_ACCURACY, \"1\", \n        SpellCheckComponent.SPELLCHECK_EXTENDED_RESULTS, \"true\",\n        SpellCheckComponent.SPELLCHECK_COLLATE, \"true\",\n        SpellCheckComponent.SPELLCHECK_COLLATE_EXTENDED_RESULTS, \"true\",\n        SpellCheckComponent.SPELLCHECK_MAX_COLLATIONS, \"1\"),\n        \"//lst[@name='collation'][1 ]/str[@name='collationQuery']='lowerfilt:((+printable +in +puntable +plantable))'\"\n    );\n    assertQ(req(\n        \"q\", \"zxcv AND qwtp AND fghj\", \n        \"qt\", \"/spellCheckWithWordbreak\",\n        \"defType\", \"edismax\",\n        \"qf\", \"lowerfilt\",\n        \"indent\", \"true\",\n        SpellCheckComponent.SPELLCHECK_BUILD, \"true\",\n        SpellCheckComponent.COMPONENT_NAME, \"true\", \n        SpellCheckComponent.SPELLCHECK_ACCURACY, \".75\", \n        SpellCheckComponent.SPELLCHECK_EXTENDED_RESULTS, \"true\",\n        SpellCheckComponent.SPELLCHECK_COLLATE, \"true\",\n        SpellCheckComponent.SPELLCHECK_COLLATE_EXTENDED_RESULTS, \"true\",\n        SpellCheckComponent.SPELLCHECK_MAX_COLLATIONS, \"10\"),\n        \"//lst[@name='collation'][1 ]/str[@name='collationQuery']='zxcvqwtp AND (fg AND hj)'\"\n    ); \n  }\n\n","sourceOld":"  @Test\n  public void testCollate() throws Exception {\n   assertQ(req(\n        \"q\", \"lowerfilt:(paintable pine apple godness)\", \n        \"qt\", \"spellCheckWithWordbreak\", \n        \"indent\", \"true\",\n        SpellCheckComponent.SPELLCHECK_BUILD, \"true\",\n        SpellCheckComponent.COMPONENT_NAME, \"true\", \n        SpellCheckComponent.SPELLCHECK_ACCURACY, \".75\", \n        SpellCheckComponent.SPELLCHECK_EXTENDED_RESULTS, \"true\",\n        SpellCheckComponent.SPELLCHECK_COLLATE, \"true\",\n        SpellCheckComponent.SPELLCHECK_COLLATE_EXTENDED_RESULTS, \"true\",\n        SpellCheckComponent.SPELLCHECK_MAX_COLLATIONS, \"10\"),\n        \"//lst[@name='collation'][1 ]/str[@name='collationQuery']='lowerfilt:(printable line ample goodness)'\",\n        \"//lst[@name='collation'][2 ]/str[@name='collationQuery']='lowerfilt:(paintablepine ample goodness)'\",\n        \"//lst[@name='collation'][3 ]/str[@name='collationQuery']='lowerfilt:(printable pineapple goodness)'\",\n        \"//lst[@name='collation'][4 ]/str[@name='collationQuery']='lowerfilt:((paint able) line ample goodness)'\",\n        \"//lst[@name='collation'][5 ]/str[@name='collationQuery']='lowerfilt:(printable (pi ne) ample goodness)'\",\n        \"//lst[@name='collation'][6 ]/str[@name='collationQuery']='lowerfilt:((paint able) pineapple goodness)'\",\n        \"//lst[@name='collation'][7 ]/str[@name='collationQuery']='lowerfilt:((paint able) (pi ne) ample goodness)'\",\n        \"//lst[@name='collation'][8 ]/str[@name='collationQuery']='lowerfilt:(pintable line ample goodness)'\",\n        \"//lst[@name='collation'][9 ]/str[@name='collationQuery']='lowerfilt:(pintable pineapple goodness)'\",\n        \"//lst[@name='collation'][10]/str[@name='collationQuery']='lowerfilt:(pintable (pi ne) ample goodness)'\",\n        \"//lst[@name='collation'][10]/lst[@name='misspellingsAndCorrections']/str[@name='paintable']='pintable'\",\n        \"//lst[@name='collation'][10]/lst[@name='misspellingsAndCorrections']/str[@name='pine']='pi ne'\",\n        \"//lst[@name='collation'][10]/lst[@name='misspellingsAndCorrections']/str[@name='apple']='ample'\",\n        \"//lst[@name='collation'][10]/lst[@name='misspellingsAndCorrections']/str[@name='godness']='goodness'\"\n    );\n    assertQ(req(\n        \"q\", \"lowerfilt:(pine AND apple)\", \n        \"qt\", \"spellCheckWithWordbreak\", \n        \"indent\", \"true\",\n        SpellCheckComponent.COMPONENT_NAME, \"true\", \n        SpellCheckComponent.SPELLCHECK_ACCURACY, \".75\", \n        SpellCheckComponent.SPELLCHECK_EXTENDED_RESULTS, \"true\",\n        SpellCheckComponent.SPELLCHECK_COLLATE, \"true\",\n        SpellCheckComponent.SPELLCHECK_COLLATE_EXTENDED_RESULTS, \"true\",\n        SpellCheckComponent.SPELLCHECK_MAX_COLLATIONS, \"10\"),\n        \"//lst[@name='collation'][1 ]/str[@name='collationQuery']='lowerfilt:(line AND ample)'\",\n        \"//lst[@name='collation'][2 ]/str[@name='collationQuery']='lowerfilt:(pineapple)'\",\n        \"//lst[@name='collation'][3 ]/str[@name='collationQuery']='lowerfilt:((pi AND ne) AND ample)'\"\n    );\n    assertQ(req(\n        \"q\", \"lowerfilt:pine AND NOT lowerfilt:apple\", \n        \"qt\", \"spellCheckWithWordbreak\", \n        \"indent\", \"true\",\n        SpellCheckComponent.COMPONENT_NAME, \"true\", \n        SpellCheckComponent.SPELLCHECK_ACCURACY, \".75\", \n        SpellCheckComponent.SPELLCHECK_EXTENDED_RESULTS, \"true\",\n        SpellCheckComponent.SPELLCHECK_COLLATE, \"true\",\n        SpellCheckComponent.SPELLCHECK_COLLATE_EXTENDED_RESULTS, \"true\",\n        SpellCheckComponent.SPELLCHECK_MAX_COLLATIONS, \"10\"),\n        \"//lst[@name='collation'][1 ]/str[@name='collationQuery']='lowerfilt:line AND NOT lowerfilt:ample'\",\n        \"//lst[@name='collation'][2 ]/str[@name='collationQuery']='lowerfilt:(pi AND ne) AND NOT lowerfilt:ample'\"\n    );\n    assertQ(req(\n        \"q\", \"lowerfilt:pine NOT lowerfilt:apple\", \n        \"qt\", \"spellCheckWithWordbreak\", \n        \"indent\", \"true\",\n        SpellCheckComponent.COMPONENT_NAME, \"true\", \n        SpellCheckComponent.SPELLCHECK_ACCURACY, \".75\", \n        SpellCheckComponent.SPELLCHECK_EXTENDED_RESULTS, \"true\",\n        SpellCheckComponent.SPELLCHECK_COLLATE, \"true\",\n        SpellCheckComponent.SPELLCHECK_COLLATE_EXTENDED_RESULTS, \"true\",\n        SpellCheckComponent.SPELLCHECK_MAX_COLLATIONS, \"10\"),\n        \"//lst[@name='collation'][1 ]/str[@name='collationQuery']='lowerfilt:line NOT lowerfilt:ample'\",\n        \"//lst[@name='collation'][2 ]/str[@name='collationQuery']='lowerfilt:(pi AND ne) NOT lowerfilt:ample'\"\n    );\n    assertQ(req(\n        \"q\", \"lowerfilt:(+pine -apple)\", \n        \"qt\", \"spellCheckWithWordbreak\", \n        \"indent\", \"true\",\n        SpellCheckComponent.COMPONENT_NAME, \"true\", \n        SpellCheckComponent.SPELLCHECK_ACCURACY, \".75\", \n        SpellCheckComponent.SPELLCHECK_EXTENDED_RESULTS, \"true\",\n        SpellCheckComponent.SPELLCHECK_COLLATE, \"true\",\n        SpellCheckComponent.SPELLCHECK_COLLATE_EXTENDED_RESULTS, \"true\",\n        SpellCheckComponent.SPELLCHECK_MAX_COLLATIONS, \"10\"),\n        \"//lst[@name='collation'][1 ]/str[@name='collationQuery']='lowerfilt:(+line -ample)'\",\n        \"//lst[@name='collation'][2 ]/str[@name='collationQuery']='lowerfilt:((+pi +ne) -ample)'\"\n    );\n    assertQ(req(\n        \"q\", \"lowerfilt:(+printableinpuntableplantable)\", \n        \"qt\", \"spellCheckWithWordbreak\", \n        \"indent\", \"true\",\n        SpellCheckComponent.COMPONENT_NAME, \"true\", \n        SpellCheckComponent.SPELLCHECK_ACCURACY, \"1\", \n        SpellCheckComponent.SPELLCHECK_EXTENDED_RESULTS, \"true\",\n        SpellCheckComponent.SPELLCHECK_COLLATE, \"true\",\n        SpellCheckComponent.SPELLCHECK_COLLATE_EXTENDED_RESULTS, \"true\",\n        SpellCheckComponent.SPELLCHECK_MAX_COLLATIONS, \"1\"),\n        \"//lst[@name='collation'][1 ]/str[@name='collationQuery']='lowerfilt:((+printable +in +puntable +plantable))'\"\n    );\n    assertQ(req(\n        \"q\", \"zxcv AND qwtp AND fghj\", \n        \"qt\", \"spellCheckWithWordbreak\",\n        \"defType\", \"edismax\",\n        \"qf\", \"lowerfilt\",\n        \"indent\", \"true\",\n        SpellCheckComponent.SPELLCHECK_BUILD, \"true\",\n        SpellCheckComponent.COMPONENT_NAME, \"true\", \n        SpellCheckComponent.SPELLCHECK_ACCURACY, \".75\", \n        SpellCheckComponent.SPELLCHECK_EXTENDED_RESULTS, \"true\",\n        SpellCheckComponent.SPELLCHECK_COLLATE, \"true\",\n        SpellCheckComponent.SPELLCHECK_COLLATE_EXTENDED_RESULTS, \"true\",\n        SpellCheckComponent.SPELLCHECK_MAX_COLLATIONS, \"10\"),\n        \"//lst[@name='collation'][1 ]/str[@name='collationQuery']='zxcvqwtp AND (fg AND hj)'\"\n    ); \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"30c8e5574b55d57947e989443dfde611646530ee","date":1499131153,"type":3,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/spelling/WordBreakSolrSpellCheckerTest#testCollate().mjava","pathOld":"solr/core/src/test/org/apache/solr/spelling/WordBreakSolrSpellCheckerTest#testCollate().mjava","sourceNew":"  @Test\n  public void testCollate() throws Exception {\n   assertQ(req(\n        \"q\", \"lowerfilt:(paintable pine apple godness)\", \n        \"qt\", \"/spellCheckWithWordbreak\",\n        \"indent\", \"true\",\n        SpellCheckComponent.SPELLCHECK_BUILD, \"true\",\n        SpellCheckComponent.COMPONENT_NAME, \"true\", \n        SpellCheckComponent.SPELLCHECK_ACCURACY, \".75\", \n        SpellCheckComponent.SPELLCHECK_EXTENDED_RESULTS, \"true\",\n        SpellCheckComponent.SPELLCHECK_COLLATE, \"true\",\n        SpellCheckComponent.SPELLCHECK_COLLATE_EXTENDED_RESULTS, \"true\",\n        SpellCheckComponent.SPELLCHECK_MAX_COLLATIONS, \"10\"),\n        \"//lst[@name='collation'][1 ]/str[@name='collationQuery']='lowerfilt:(printable line ample goodness)'\",\n        \"//lst[@name='collation'][2 ]/str[@name='collationQuery']='lowerfilt:(paintablepine ample goodness)'\",\n        \"//lst[@name='collation'][3 ]/str[@name='collationQuery']='lowerfilt:(printable pineapple goodness)'\",\n        \"//lst[@name='collation'][4 ]/str[@name='collationQuery']='lowerfilt:((paint able) line ample goodness)'\",\n        \"//lst[@name='collation'][5 ]/str[@name='collationQuery']='lowerfilt:(printable (pi ne) ample goodness)'\",\n        \"//lst[@name='collation'][6 ]/str[@name='collationQuery']='lowerfilt:((paint able) pineapple goodness)'\",\n        \"//lst[@name='collation'][7 ]/str[@name='collationQuery']='lowerfilt:((paint able) (pi ne) ample goodness)'\",\n        \"//lst[@name='collation'][8 ]/str[@name='collationQuery']='lowerfilt:(pintable line ample goodness)'\",\n        \"//lst[@name='collation'][9 ]/str[@name='collationQuery']='lowerfilt:(pintable pineapple goodness)'\",\n        \"//lst[@name='collation'][10]/str[@name='collationQuery']='lowerfilt:(pintable (pi ne) ample goodness)'\",\n        \"//lst[@name='collation'][10]/lst[@name='misspellingsAndCorrections']/str[@name='paintable']='pintable'\",\n        \"//lst[@name='collation'][10]/lst[@name='misspellingsAndCorrections']/str[@name='pine']='pi ne'\",\n        \"//lst[@name='collation'][10]/lst[@name='misspellingsAndCorrections']/str[@name='apple']='ample'\",\n        \"//lst[@name='collation'][10]/lst[@name='misspellingsAndCorrections']/str[@name='godness']='goodness'\"\n    );\n    assertQ(req(\n        \"q\", \"lowerfilt:(pine AND apple)\", \n        \"qt\", \"/spellCheckWithWordbreak\",\n        \"indent\", \"true\",\n        SpellCheckComponent.COMPONENT_NAME, \"true\", \n        SpellCheckComponent.SPELLCHECK_ACCURACY, \".75\", \n        SpellCheckComponent.SPELLCHECK_EXTENDED_RESULTS, \"true\",\n        SpellCheckComponent.SPELLCHECK_COLLATE, \"true\",\n        SpellCheckComponent.SPELLCHECK_COLLATE_EXTENDED_RESULTS, \"true\",\n        SpellCheckComponent.SPELLCHECK_MAX_COLLATIONS, \"10\"),\n        \"//lst[@name='collation'][1 ]/str[@name='collationQuery']='lowerfilt:(line AND ample)'\",\n        \"//lst[@name='collation'][2 ]/str[@name='collationQuery']='lowerfilt:(pineapple)'\",\n        \"//lst[@name='collation'][3 ]/str[@name='collationQuery']='lowerfilt:((pi AND ne) AND ample)'\"\n    );\n    assertQ(req(\n        \"q\", \"lowerfilt:pine AND NOT lowerfilt:apple\", \n        \"qt\", \"/spellCheckWithWordbreak\",\n        \"indent\", \"true\",\n        SpellCheckComponent.COMPONENT_NAME, \"true\", \n        SpellCheckComponent.SPELLCHECK_ACCURACY, \".75\", \n        SpellCheckComponent.SPELLCHECK_EXTENDED_RESULTS, \"true\",\n        SpellCheckComponent.SPELLCHECK_COLLATE, \"true\",\n        SpellCheckComponent.SPELLCHECK_COLLATE_EXTENDED_RESULTS, \"true\",\n        SpellCheckComponent.SPELLCHECK_MAX_COLLATIONS, \"10\"),\n        \"//lst[@name='collation'][1 ]/str[@name='collationQuery']='lowerfilt:line AND NOT lowerfilt:ample'\",\n        \"//lst[@name='collation'][2 ]/str[@name='collationQuery']='lowerfilt:(pi AND ne) AND NOT lowerfilt:ample'\"\n    );\n    assertQ(req(\n        \"q\", \"lowerfilt:pine NOT lowerfilt:apple\", \n        \"qt\", \"/spellCheckWithWordbreak\",\n        \"indent\", \"true\",\n        SpellCheckComponent.COMPONENT_NAME, \"true\", \n        SpellCheckComponent.SPELLCHECK_ACCURACY, \".75\", \n        SpellCheckComponent.SPELLCHECK_EXTENDED_RESULTS, \"true\",\n        SpellCheckComponent.SPELLCHECK_COLLATE, \"true\",\n        SpellCheckComponent.SPELLCHECK_COLLATE_EXTENDED_RESULTS, \"true\",\n        SpellCheckComponent.SPELLCHECK_MAX_COLLATIONS, \"10\"),\n        \"//lst[@name='collation'][1 ]/str[@name='collationQuery']='lowerfilt:line NOT lowerfilt:ample'\",\n        \"//lst[@name='collation'][2 ]/str[@name='collationQuery']='lowerfilt:(pi AND ne) NOT lowerfilt:ample'\"\n    );\n    assertQ(req(\n        \"q\", \"lowerfilt:(+pine -apple)\", \n        \"qt\", \"/spellCheckWithWordbreak\",\n        \"indent\", \"true\",\n        SpellCheckComponent.COMPONENT_NAME, \"true\", \n        SpellCheckComponent.SPELLCHECK_ACCURACY, \".75\", \n        SpellCheckComponent.SPELLCHECK_EXTENDED_RESULTS, \"true\",\n        SpellCheckComponent.SPELLCHECK_COLLATE, \"true\",\n        SpellCheckComponent.SPELLCHECK_COLLATE_EXTENDED_RESULTS, \"true\",\n        SpellCheckComponent.SPELLCHECK_MAX_COLLATIONS, \"10\"),\n        \"//lst[@name='collation'][1 ]/str[@name='collationQuery']='lowerfilt:(+line -ample)'\",\n        \"//lst[@name='collation'][2 ]/str[@name='collationQuery']='lowerfilt:((+pi +ne) -ample)'\"\n    );\n    assertQ(req(\n        \"q\", \"lowerfilt:(+printableinpuntableplantable)\", \n        \"qt\", \"/spellCheckWithWordbreak\",\n        \"indent\", \"true\",\n        SpellCheckComponent.COMPONENT_NAME, \"true\", \n        SpellCheckComponent.SPELLCHECK_ACCURACY, \"1\", \n        SpellCheckComponent.SPELLCHECK_EXTENDED_RESULTS, \"true\",\n        SpellCheckComponent.SPELLCHECK_COLLATE, \"true\",\n        SpellCheckComponent.SPELLCHECK_COLLATE_EXTENDED_RESULTS, \"true\",\n        SpellCheckComponent.SPELLCHECK_MAX_COLLATIONS, \"1\"),\n        \"//lst[@name='collation'][1 ]/str[@name='collationQuery']='lowerfilt:((+printable +in +puntable +plantable))'\"\n    );\n    assertQ(req(\n        \"q\", \"zxcv AND qwtp AND fghj\", \n        \"qt\", \"/spellCheckWithWordbreak\",\n        \"defType\", \"edismax\",\n        \"qf\", \"lowerfilt\",\n        \"indent\", \"true\",\n        SpellCheckComponent.SPELLCHECK_BUILD, \"true\",\n        SpellCheckComponent.COMPONENT_NAME, \"true\", \n        SpellCheckComponent.SPELLCHECK_ACCURACY, \".75\", \n        SpellCheckComponent.SPELLCHECK_EXTENDED_RESULTS, \"true\",\n        SpellCheckComponent.SPELLCHECK_COLLATE, \"true\",\n        SpellCheckComponent.SPELLCHECK_COLLATE_EXTENDED_RESULTS, \"true\",\n        SpellCheckComponent.SPELLCHECK_MAX_COLLATIONS, \"10\"),\n        \"//lst[@name='collation'][1 ]/str[@name='collationQuery']='zxcvqwtp AND (fg AND hj)'\"\n    ); \n  }\n\n","sourceOld":"  @Test\n  public void testCollate() throws Exception {\n   assertQ(req(\n        \"q\", \"lowerfilt:(paintable pine apple godness)\", \n        \"qt\", \"spellCheckWithWordbreak\", \n        \"indent\", \"true\",\n        SpellCheckComponent.SPELLCHECK_BUILD, \"true\",\n        SpellCheckComponent.COMPONENT_NAME, \"true\", \n        SpellCheckComponent.SPELLCHECK_ACCURACY, \".75\", \n        SpellCheckComponent.SPELLCHECK_EXTENDED_RESULTS, \"true\",\n        SpellCheckComponent.SPELLCHECK_COLLATE, \"true\",\n        SpellCheckComponent.SPELLCHECK_COLLATE_EXTENDED_RESULTS, \"true\",\n        SpellCheckComponent.SPELLCHECK_MAX_COLLATIONS, \"10\"),\n        \"//lst[@name='collation'][1 ]/str[@name='collationQuery']='lowerfilt:(printable line ample goodness)'\",\n        \"//lst[@name='collation'][2 ]/str[@name='collationQuery']='lowerfilt:(paintablepine ample goodness)'\",\n        \"//lst[@name='collation'][3 ]/str[@name='collationQuery']='lowerfilt:(printable pineapple goodness)'\",\n        \"//lst[@name='collation'][4 ]/str[@name='collationQuery']='lowerfilt:((paint able) line ample goodness)'\",\n        \"//lst[@name='collation'][5 ]/str[@name='collationQuery']='lowerfilt:(printable (pi ne) ample goodness)'\",\n        \"//lst[@name='collation'][6 ]/str[@name='collationQuery']='lowerfilt:((paint able) pineapple goodness)'\",\n        \"//lst[@name='collation'][7 ]/str[@name='collationQuery']='lowerfilt:((paint able) (pi ne) ample goodness)'\",\n        \"//lst[@name='collation'][8 ]/str[@name='collationQuery']='lowerfilt:(pintable line ample goodness)'\",\n        \"//lst[@name='collation'][9 ]/str[@name='collationQuery']='lowerfilt:(pintable pineapple goodness)'\",\n        \"//lst[@name='collation'][10]/str[@name='collationQuery']='lowerfilt:(pintable (pi ne) ample goodness)'\",\n        \"//lst[@name='collation'][10]/lst[@name='misspellingsAndCorrections']/str[@name='paintable']='pintable'\",\n        \"//lst[@name='collation'][10]/lst[@name='misspellingsAndCorrections']/str[@name='pine']='pi ne'\",\n        \"//lst[@name='collation'][10]/lst[@name='misspellingsAndCorrections']/str[@name='apple']='ample'\",\n        \"//lst[@name='collation'][10]/lst[@name='misspellingsAndCorrections']/str[@name='godness']='goodness'\"\n    );\n    assertQ(req(\n        \"q\", \"lowerfilt:(pine AND apple)\", \n        \"qt\", \"spellCheckWithWordbreak\", \n        \"indent\", \"true\",\n        SpellCheckComponent.COMPONENT_NAME, \"true\", \n        SpellCheckComponent.SPELLCHECK_ACCURACY, \".75\", \n        SpellCheckComponent.SPELLCHECK_EXTENDED_RESULTS, \"true\",\n        SpellCheckComponent.SPELLCHECK_COLLATE, \"true\",\n        SpellCheckComponent.SPELLCHECK_COLLATE_EXTENDED_RESULTS, \"true\",\n        SpellCheckComponent.SPELLCHECK_MAX_COLLATIONS, \"10\"),\n        \"//lst[@name='collation'][1 ]/str[@name='collationQuery']='lowerfilt:(line AND ample)'\",\n        \"//lst[@name='collation'][2 ]/str[@name='collationQuery']='lowerfilt:(pineapple)'\",\n        \"//lst[@name='collation'][3 ]/str[@name='collationQuery']='lowerfilt:((pi AND ne) AND ample)'\"\n    );\n    assertQ(req(\n        \"q\", \"lowerfilt:pine AND NOT lowerfilt:apple\", \n        \"qt\", \"spellCheckWithWordbreak\", \n        \"indent\", \"true\",\n        SpellCheckComponent.COMPONENT_NAME, \"true\", \n        SpellCheckComponent.SPELLCHECK_ACCURACY, \".75\", \n        SpellCheckComponent.SPELLCHECK_EXTENDED_RESULTS, \"true\",\n        SpellCheckComponent.SPELLCHECK_COLLATE, \"true\",\n        SpellCheckComponent.SPELLCHECK_COLLATE_EXTENDED_RESULTS, \"true\",\n        SpellCheckComponent.SPELLCHECK_MAX_COLLATIONS, \"10\"),\n        \"//lst[@name='collation'][1 ]/str[@name='collationQuery']='lowerfilt:line AND NOT lowerfilt:ample'\",\n        \"//lst[@name='collation'][2 ]/str[@name='collationQuery']='lowerfilt:(pi AND ne) AND NOT lowerfilt:ample'\"\n    );\n    assertQ(req(\n        \"q\", \"lowerfilt:pine NOT lowerfilt:apple\", \n        \"qt\", \"spellCheckWithWordbreak\", \n        \"indent\", \"true\",\n        SpellCheckComponent.COMPONENT_NAME, \"true\", \n        SpellCheckComponent.SPELLCHECK_ACCURACY, \".75\", \n        SpellCheckComponent.SPELLCHECK_EXTENDED_RESULTS, \"true\",\n        SpellCheckComponent.SPELLCHECK_COLLATE, \"true\",\n        SpellCheckComponent.SPELLCHECK_COLLATE_EXTENDED_RESULTS, \"true\",\n        SpellCheckComponent.SPELLCHECK_MAX_COLLATIONS, \"10\"),\n        \"//lst[@name='collation'][1 ]/str[@name='collationQuery']='lowerfilt:line NOT lowerfilt:ample'\",\n        \"//lst[@name='collation'][2 ]/str[@name='collationQuery']='lowerfilt:(pi AND ne) NOT lowerfilt:ample'\"\n    );\n    assertQ(req(\n        \"q\", \"lowerfilt:(+pine -apple)\", \n        \"qt\", \"spellCheckWithWordbreak\", \n        \"indent\", \"true\",\n        SpellCheckComponent.COMPONENT_NAME, \"true\", \n        SpellCheckComponent.SPELLCHECK_ACCURACY, \".75\", \n        SpellCheckComponent.SPELLCHECK_EXTENDED_RESULTS, \"true\",\n        SpellCheckComponent.SPELLCHECK_COLLATE, \"true\",\n        SpellCheckComponent.SPELLCHECK_COLLATE_EXTENDED_RESULTS, \"true\",\n        SpellCheckComponent.SPELLCHECK_MAX_COLLATIONS, \"10\"),\n        \"//lst[@name='collation'][1 ]/str[@name='collationQuery']='lowerfilt:(+line -ample)'\",\n        \"//lst[@name='collation'][2 ]/str[@name='collationQuery']='lowerfilt:((+pi +ne) -ample)'\"\n    );\n    assertQ(req(\n        \"q\", \"lowerfilt:(+printableinpuntableplantable)\", \n        \"qt\", \"spellCheckWithWordbreak\", \n        \"indent\", \"true\",\n        SpellCheckComponent.COMPONENT_NAME, \"true\", \n        SpellCheckComponent.SPELLCHECK_ACCURACY, \"1\", \n        SpellCheckComponent.SPELLCHECK_EXTENDED_RESULTS, \"true\",\n        SpellCheckComponent.SPELLCHECK_COLLATE, \"true\",\n        SpellCheckComponent.SPELLCHECK_COLLATE_EXTENDED_RESULTS, \"true\",\n        SpellCheckComponent.SPELLCHECK_MAX_COLLATIONS, \"1\"),\n        \"//lst[@name='collation'][1 ]/str[@name='collationQuery']='lowerfilt:((+printable +in +puntable +plantable))'\"\n    );\n    assertQ(req(\n        \"q\", \"zxcv AND qwtp AND fghj\", \n        \"qt\", \"spellCheckWithWordbreak\",\n        \"defType\", \"edismax\",\n        \"qf\", \"lowerfilt\",\n        \"indent\", \"true\",\n        SpellCheckComponent.SPELLCHECK_BUILD, \"true\",\n        SpellCheckComponent.COMPONENT_NAME, \"true\", \n        SpellCheckComponent.SPELLCHECK_ACCURACY, \".75\", \n        SpellCheckComponent.SPELLCHECK_EXTENDED_RESULTS, \"true\",\n        SpellCheckComponent.SPELLCHECK_COLLATE, \"true\",\n        SpellCheckComponent.SPELLCHECK_COLLATE_EXTENDED_RESULTS, \"true\",\n        SpellCheckComponent.SPELLCHECK_MAX_COLLATIONS, \"10\"),\n        \"//lst[@name='collation'][1 ]/str[@name='collationQuery']='zxcvqwtp AND (fg AND hj)'\"\n    ); \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9cd60ad4e8968dd23e5c5891b160ba5e4525d565","date":1525114039,"type":3,"author":"jdyer1","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/spelling/WordBreakSolrSpellCheckerTest#testCollate().mjava","pathOld":"solr/core/src/test/org/apache/solr/spelling/WordBreakSolrSpellCheckerTest#testCollate().mjava","sourceNew":"  @Test\n  public void testCollate() throws Exception {\n   assertQ(req(\n        \"q\", \"lowerfilt:(paintable pine apple godness)\", \n        \"qt\", \"/spellCheckWithWordbreak\",\n        \"indent\", \"true\",\n        SpellCheckComponent.SPELLCHECK_BUILD, \"true\",\n        SpellCheckComponent.COMPONENT_NAME, \"true\", \n        SpellCheckComponent.SPELLCHECK_ACCURACY, \".75\", \n        SpellCheckComponent.SPELLCHECK_EXTENDED_RESULTS, \"true\",\n        SpellCheckComponent.SPELLCHECK_COLLATE, \"true\",\n        SpellCheckComponent.SPELLCHECK_COLLATE_EXTENDED_RESULTS, \"true\",\n        SpellCheckComponent.SPELLCHECK_MAX_COLLATIONS, \"10\"),\n        \"//lst[@name='collation'][1 ]/str[@name='collationQuery']='lowerfilt:(printable line ample goodness)'\",\n        \"//lst[@name='collation'][2 ]/str[@name='collationQuery']='lowerfilt:(paintablepine ample goodness)'\",\n        \"//lst[@name='collation'][3 ]/str[@name='collationQuery']='lowerfilt:(printable pineapple goodness)'\",\n        \"//lst[@name='collation'][4 ]/str[@name='collationQuery']='lowerfilt:(paint able line ample goodness)'\",\n        \"//lst[@name='collation'][5 ]/str[@name='collationQuery']='lowerfilt:(printable pi ne ample goodness)'\",\n        \"//lst[@name='collation'][6 ]/str[@name='collationQuery']='lowerfilt:(paint able pineapple goodness)'\",\n        \"//lst[@name='collation'][7 ]/str[@name='collationQuery']='lowerfilt:(paint able pi ne ample goodness)'\",\n        \"//lst[@name='collation'][8 ]/str[@name='collationQuery']='lowerfilt:(pintable line ample goodness)'\",\n        \"//lst[@name='collation'][9 ]/str[@name='collationQuery']='lowerfilt:(pintable pineapple goodness)'\",\n        \"//lst[@name='collation'][10]/str[@name='collationQuery']='lowerfilt:(pintable pi ne ample goodness)'\",\n        \"//lst[@name='collation'][10]/lst[@name='misspellingsAndCorrections']/str[@name='paintable']='pintable'\",\n        \"//lst[@name='collation'][10]/lst[@name='misspellingsAndCorrections']/str[@name='pine']='pi ne'\",\n        \"//lst[@name='collation'][10]/lst[@name='misspellingsAndCorrections']/str[@name='apple']='ample'\",\n        \"//lst[@name='collation'][10]/lst[@name='misspellingsAndCorrections']/str[@name='godness']='goodness'\"\n    );\n    assertQ(req(\n        \"q\", \"lowerfilt:(pine AND apple)\", \n        \"qt\", \"/spellCheckWithWordbreak\",\n        \"indent\", \"true\",\n        SpellCheckComponent.COMPONENT_NAME, \"true\", \n        SpellCheckComponent.SPELLCHECK_ACCURACY, \".75\", \n        SpellCheckComponent.SPELLCHECK_EXTENDED_RESULTS, \"true\",\n        SpellCheckComponent.SPELLCHECK_COLLATE, \"true\",\n        SpellCheckComponent.SPELLCHECK_COLLATE_EXTENDED_RESULTS, \"true\",\n        SpellCheckComponent.SPELLCHECK_MAX_COLLATIONS, \"10\"),\n        \"//lst[@name='collation'][1 ]/str[@name='collationQuery']='lowerfilt:(line AND ample)'\",\n        \"//lst[@name='collation'][2 ]/str[@name='collationQuery']='lowerfilt:(pineapple)'\",\n        \"//lst[@name='collation'][3 ]/str[@name='collationQuery']='lowerfilt:((pi AND ne) AND ample)'\"\n    );\n    assertQ(req(\n        \"q\", \"lowerfilt:pine AND NOT lowerfilt:apple\", \n        \"qt\", \"/spellCheckWithWordbreak\",\n        \"indent\", \"true\",\n        SpellCheckComponent.COMPONENT_NAME, \"true\", \n        SpellCheckComponent.SPELLCHECK_ACCURACY, \".75\", \n        SpellCheckComponent.SPELLCHECK_EXTENDED_RESULTS, \"true\",\n        SpellCheckComponent.SPELLCHECK_COLLATE, \"true\",\n        SpellCheckComponent.SPELLCHECK_COLLATE_EXTENDED_RESULTS, \"true\",\n        SpellCheckComponent.SPELLCHECK_MAX_COLLATIONS, \"10\"),\n        \"//lst[@name='collation'][1 ]/str[@name='collationQuery']='lowerfilt:line AND NOT lowerfilt:ample'\",\n        \"//lst[@name='collation'][2 ]/str[@name='collationQuery']='lowerfilt:(pi AND ne) AND NOT lowerfilt:ample'\"\n    );\n    assertQ(req(\n        \"q\", \"lowerfilt:pine NOT lowerfilt:apple\", \n        \"qt\", \"/spellCheckWithWordbreak\",\n        \"indent\", \"true\",\n        SpellCheckComponent.COMPONENT_NAME, \"true\", \n        SpellCheckComponent.SPELLCHECK_ACCURACY, \".75\", \n        SpellCheckComponent.SPELLCHECK_EXTENDED_RESULTS, \"true\",\n        SpellCheckComponent.SPELLCHECK_COLLATE, \"true\",\n        SpellCheckComponent.SPELLCHECK_COLLATE_EXTENDED_RESULTS, \"true\",\n        SpellCheckComponent.SPELLCHECK_MAX_COLLATIONS, \"10\"),\n        \"//lst[@name='collation'][1 ]/str[@name='collationQuery']='lowerfilt:line NOT lowerfilt:ample'\",\n        \"//lst[@name='collation'][2 ]/str[@name='collationQuery']='lowerfilt:(pi AND ne) NOT lowerfilt:ample'\"\n    );\n    assertQ(req(\n        \"q\", \"lowerfilt:(+pine -apple)\", \n        \"qt\", \"/spellCheckWithWordbreak\",\n        \"indent\", \"true\",\n        SpellCheckComponent.COMPONENT_NAME, \"true\", \n        SpellCheckComponent.SPELLCHECK_ACCURACY, \".75\", \n        SpellCheckComponent.SPELLCHECK_EXTENDED_RESULTS, \"true\",\n        SpellCheckComponent.SPELLCHECK_COLLATE, \"true\",\n        SpellCheckComponent.SPELLCHECK_COLLATE_EXTENDED_RESULTS, \"true\",\n        SpellCheckComponent.SPELLCHECK_MAX_COLLATIONS, \"10\"),\n        \"//lst[@name='collation'][1 ]/str[@name='collationQuery']='lowerfilt:(+line -ample)'\",\n        \"//lst[@name='collation'][2 ]/str[@name='collationQuery']='lowerfilt:(+pi +ne -ample)'\"\n    );\n    assertQ(req(\n        \"q\", \"lowerfilt:(+printableinpuntableplantable)\", \n        \"qt\", \"/spellCheckWithWordbreak\",\n        \"indent\", \"true\",\n        SpellCheckComponent.COMPONENT_NAME, \"true\", \n        SpellCheckComponent.SPELLCHECK_ACCURACY, \"1\", \n        SpellCheckComponent.SPELLCHECK_EXTENDED_RESULTS, \"true\",\n        SpellCheckComponent.SPELLCHECK_COLLATE, \"true\",\n        SpellCheckComponent.SPELLCHECK_COLLATE_EXTENDED_RESULTS, \"true\",\n        SpellCheckComponent.SPELLCHECK_MAX_COLLATIONS, \"1\"),\n        \"//lst[@name='collation'][1 ]/str[@name='collationQuery']='lowerfilt:(+printable +in +puntable +plantable)'\"\n    );\n    assertQ(req(\n        \"q\", \"zxcv AND qwtp AND fghj\", \n        \"qt\", \"/spellCheckWithWordbreak\",\n        \"defType\", \"edismax\",\n        \"qf\", \"lowerfilt\",\n        \"indent\", \"true\",\n        SpellCheckComponent.SPELLCHECK_BUILD, \"true\",\n        SpellCheckComponent.COMPONENT_NAME, \"true\", \n        SpellCheckComponent.SPELLCHECK_ACCURACY, \".75\", \n        SpellCheckComponent.SPELLCHECK_EXTENDED_RESULTS, \"true\",\n        SpellCheckComponent.SPELLCHECK_COLLATE, \"true\",\n        SpellCheckComponent.SPELLCHECK_COLLATE_EXTENDED_RESULTS, \"true\",\n        SpellCheckComponent.SPELLCHECK_MAX_COLLATIONS, \"10\"),\n        \"//lst[@name='collation'][1 ]/str[@name='collationQuery']='zxcvqwtp AND (fg AND hj)'\"\n    ); \n  }\n\n","sourceOld":"  @Test\n  public void testCollate() throws Exception {\n   assertQ(req(\n        \"q\", \"lowerfilt:(paintable pine apple godness)\", \n        \"qt\", \"/spellCheckWithWordbreak\",\n        \"indent\", \"true\",\n        SpellCheckComponent.SPELLCHECK_BUILD, \"true\",\n        SpellCheckComponent.COMPONENT_NAME, \"true\", \n        SpellCheckComponent.SPELLCHECK_ACCURACY, \".75\", \n        SpellCheckComponent.SPELLCHECK_EXTENDED_RESULTS, \"true\",\n        SpellCheckComponent.SPELLCHECK_COLLATE, \"true\",\n        SpellCheckComponent.SPELLCHECK_COLLATE_EXTENDED_RESULTS, \"true\",\n        SpellCheckComponent.SPELLCHECK_MAX_COLLATIONS, \"10\"),\n        \"//lst[@name='collation'][1 ]/str[@name='collationQuery']='lowerfilt:(printable line ample goodness)'\",\n        \"//lst[@name='collation'][2 ]/str[@name='collationQuery']='lowerfilt:(paintablepine ample goodness)'\",\n        \"//lst[@name='collation'][3 ]/str[@name='collationQuery']='lowerfilt:(printable pineapple goodness)'\",\n        \"//lst[@name='collation'][4 ]/str[@name='collationQuery']='lowerfilt:((paint able) line ample goodness)'\",\n        \"//lst[@name='collation'][5 ]/str[@name='collationQuery']='lowerfilt:(printable (pi ne) ample goodness)'\",\n        \"//lst[@name='collation'][6 ]/str[@name='collationQuery']='lowerfilt:((paint able) pineapple goodness)'\",\n        \"//lst[@name='collation'][7 ]/str[@name='collationQuery']='lowerfilt:((paint able) (pi ne) ample goodness)'\",\n        \"//lst[@name='collation'][8 ]/str[@name='collationQuery']='lowerfilt:(pintable line ample goodness)'\",\n        \"//lst[@name='collation'][9 ]/str[@name='collationQuery']='lowerfilt:(pintable pineapple goodness)'\",\n        \"//lst[@name='collation'][10]/str[@name='collationQuery']='lowerfilt:(pintable (pi ne) ample goodness)'\",\n        \"//lst[@name='collation'][10]/lst[@name='misspellingsAndCorrections']/str[@name='paintable']='pintable'\",\n        \"//lst[@name='collation'][10]/lst[@name='misspellingsAndCorrections']/str[@name='pine']='pi ne'\",\n        \"//lst[@name='collation'][10]/lst[@name='misspellingsAndCorrections']/str[@name='apple']='ample'\",\n        \"//lst[@name='collation'][10]/lst[@name='misspellingsAndCorrections']/str[@name='godness']='goodness'\"\n    );\n    assertQ(req(\n        \"q\", \"lowerfilt:(pine AND apple)\", \n        \"qt\", \"/spellCheckWithWordbreak\",\n        \"indent\", \"true\",\n        SpellCheckComponent.COMPONENT_NAME, \"true\", \n        SpellCheckComponent.SPELLCHECK_ACCURACY, \".75\", \n        SpellCheckComponent.SPELLCHECK_EXTENDED_RESULTS, \"true\",\n        SpellCheckComponent.SPELLCHECK_COLLATE, \"true\",\n        SpellCheckComponent.SPELLCHECK_COLLATE_EXTENDED_RESULTS, \"true\",\n        SpellCheckComponent.SPELLCHECK_MAX_COLLATIONS, \"10\"),\n        \"//lst[@name='collation'][1 ]/str[@name='collationQuery']='lowerfilt:(line AND ample)'\",\n        \"//lst[@name='collation'][2 ]/str[@name='collationQuery']='lowerfilt:(pineapple)'\",\n        \"//lst[@name='collation'][3 ]/str[@name='collationQuery']='lowerfilt:((pi AND ne) AND ample)'\"\n    );\n    assertQ(req(\n        \"q\", \"lowerfilt:pine AND NOT lowerfilt:apple\", \n        \"qt\", \"/spellCheckWithWordbreak\",\n        \"indent\", \"true\",\n        SpellCheckComponent.COMPONENT_NAME, \"true\", \n        SpellCheckComponent.SPELLCHECK_ACCURACY, \".75\", \n        SpellCheckComponent.SPELLCHECK_EXTENDED_RESULTS, \"true\",\n        SpellCheckComponent.SPELLCHECK_COLLATE, \"true\",\n        SpellCheckComponent.SPELLCHECK_COLLATE_EXTENDED_RESULTS, \"true\",\n        SpellCheckComponent.SPELLCHECK_MAX_COLLATIONS, \"10\"),\n        \"//lst[@name='collation'][1 ]/str[@name='collationQuery']='lowerfilt:line AND NOT lowerfilt:ample'\",\n        \"//lst[@name='collation'][2 ]/str[@name='collationQuery']='lowerfilt:(pi AND ne) AND NOT lowerfilt:ample'\"\n    );\n    assertQ(req(\n        \"q\", \"lowerfilt:pine NOT lowerfilt:apple\", \n        \"qt\", \"/spellCheckWithWordbreak\",\n        \"indent\", \"true\",\n        SpellCheckComponent.COMPONENT_NAME, \"true\", \n        SpellCheckComponent.SPELLCHECK_ACCURACY, \".75\", \n        SpellCheckComponent.SPELLCHECK_EXTENDED_RESULTS, \"true\",\n        SpellCheckComponent.SPELLCHECK_COLLATE, \"true\",\n        SpellCheckComponent.SPELLCHECK_COLLATE_EXTENDED_RESULTS, \"true\",\n        SpellCheckComponent.SPELLCHECK_MAX_COLLATIONS, \"10\"),\n        \"//lst[@name='collation'][1 ]/str[@name='collationQuery']='lowerfilt:line NOT lowerfilt:ample'\",\n        \"//lst[@name='collation'][2 ]/str[@name='collationQuery']='lowerfilt:(pi AND ne) NOT lowerfilt:ample'\"\n    );\n    assertQ(req(\n        \"q\", \"lowerfilt:(+pine -apple)\", \n        \"qt\", \"/spellCheckWithWordbreak\",\n        \"indent\", \"true\",\n        SpellCheckComponent.COMPONENT_NAME, \"true\", \n        SpellCheckComponent.SPELLCHECK_ACCURACY, \".75\", \n        SpellCheckComponent.SPELLCHECK_EXTENDED_RESULTS, \"true\",\n        SpellCheckComponent.SPELLCHECK_COLLATE, \"true\",\n        SpellCheckComponent.SPELLCHECK_COLLATE_EXTENDED_RESULTS, \"true\",\n        SpellCheckComponent.SPELLCHECK_MAX_COLLATIONS, \"10\"),\n        \"//lst[@name='collation'][1 ]/str[@name='collationQuery']='lowerfilt:(+line -ample)'\",\n        \"//lst[@name='collation'][2 ]/str[@name='collationQuery']='lowerfilt:((+pi +ne) -ample)'\"\n    );\n    assertQ(req(\n        \"q\", \"lowerfilt:(+printableinpuntableplantable)\", \n        \"qt\", \"/spellCheckWithWordbreak\",\n        \"indent\", \"true\",\n        SpellCheckComponent.COMPONENT_NAME, \"true\", \n        SpellCheckComponent.SPELLCHECK_ACCURACY, \"1\", \n        SpellCheckComponent.SPELLCHECK_EXTENDED_RESULTS, \"true\",\n        SpellCheckComponent.SPELLCHECK_COLLATE, \"true\",\n        SpellCheckComponent.SPELLCHECK_COLLATE_EXTENDED_RESULTS, \"true\",\n        SpellCheckComponent.SPELLCHECK_MAX_COLLATIONS, \"1\"),\n        \"//lst[@name='collation'][1 ]/str[@name='collationQuery']='lowerfilt:((+printable +in +puntable +plantable))'\"\n    );\n    assertQ(req(\n        \"q\", \"zxcv AND qwtp AND fghj\", \n        \"qt\", \"/spellCheckWithWordbreak\",\n        \"defType\", \"edismax\",\n        \"qf\", \"lowerfilt\",\n        \"indent\", \"true\",\n        SpellCheckComponent.SPELLCHECK_BUILD, \"true\",\n        SpellCheckComponent.COMPONENT_NAME, \"true\", \n        SpellCheckComponent.SPELLCHECK_ACCURACY, \".75\", \n        SpellCheckComponent.SPELLCHECK_EXTENDED_RESULTS, \"true\",\n        SpellCheckComponent.SPELLCHECK_COLLATE, \"true\",\n        SpellCheckComponent.SPELLCHECK_COLLATE_EXTENDED_RESULTS, \"true\",\n        SpellCheckComponent.SPELLCHECK_MAX_COLLATIONS, \"10\"),\n        \"//lst[@name='collation'][1 ]/str[@name='collationQuery']='zxcvqwtp AND (fg AND hj)'\"\n    ); \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"0ad9ec888e587ca9a3279368245cdf00aabdc108":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"716d18f3a9b0993bc679d7fa7abdc9bfb03411ec":["0ad9ec888e587ca9a3279368245cdf00aabdc108","a129ba8305f969b37c51a05f7307dac0fe1268c5"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"30c8e5574b55d57947e989443dfde611646530ee":["a129ba8305f969b37c51a05f7307dac0fe1268c5","28288370235ed02234a64753cdbf0c6ec096304a"],"9cd60ad4e8968dd23e5c5891b160ba5e4525d565":["28288370235ed02234a64753cdbf0c6ec096304a"],"a129ba8305f969b37c51a05f7307dac0fe1268c5":["0ad9ec888e587ca9a3279368245cdf00aabdc108"],"28288370235ed02234a64753cdbf0c6ec096304a":["a129ba8305f969b37c51a05f7307dac0fe1268c5","5ff704ef91e9ae30ca59babb23ece85720701b60"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9cd60ad4e8968dd23e5c5891b160ba5e4525d565"],"5ff704ef91e9ae30ca59babb23ece85720701b60":["a129ba8305f969b37c51a05f7307dac0fe1268c5"]},"commit2Childs":{"0ad9ec888e587ca9a3279368245cdf00aabdc108":["716d18f3a9b0993bc679d7fa7abdc9bfb03411ec","a129ba8305f969b37c51a05f7307dac0fe1268c5"],"716d18f3a9b0993bc679d7fa7abdc9bfb03411ec":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["0ad9ec888e587ca9a3279368245cdf00aabdc108"],"30c8e5574b55d57947e989443dfde611646530ee":[],"a129ba8305f969b37c51a05f7307dac0fe1268c5":["716d18f3a9b0993bc679d7fa7abdc9bfb03411ec","30c8e5574b55d57947e989443dfde611646530ee","28288370235ed02234a64753cdbf0c6ec096304a","5ff704ef91e9ae30ca59babb23ece85720701b60"],"9cd60ad4e8968dd23e5c5891b160ba5e4525d565":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"28288370235ed02234a64753cdbf0c6ec096304a":["30c8e5574b55d57947e989443dfde611646530ee","9cd60ad4e8968dd23e5c5891b160ba5e4525d565"],"5ff704ef91e9ae30ca59babb23ece85720701b60":["28288370235ed02234a64753cdbf0c6ec096304a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["716d18f3a9b0993bc679d7fa7abdc9bfb03411ec","30c8e5574b55d57947e989443dfde611646530ee","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}