{"path":"modules/analysis/common/src/test/org/apache/lucene/analysis/core/TestAnalyzers#testLowerCaseFilter().mjava","commits":[{"id":"790c3f61c9b891d66d919c5d10db9fa5216eb0f1","date":1274818604,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"modules/analysis/common/src/test/org/apache/lucene/analysis/core/TestAnalyzers#testLowerCaseFilter().mjava","pathOld":"lucene/src/test/org/apache/lucene/analysis/TestAnalyzers#testLowerCaseFilter().mjava","sourceNew":"  /**\n   * Test that LowercaseFilter handles entire unicode range correctly\n   */\n  public void testLowerCaseFilter() throws IOException {\n    Analyzer a = new LowerCaseWhitespaceAnalyzer();\n    // BMP\n    assertAnalyzesTo(a, \"AbaCaDabA\", new String[] { \"abacadaba\" });\n    // supplementary\n    assertAnalyzesTo(a, \"\\ud801\\udc16\\ud801\\udc16\\ud801\\udc16\\ud801\\udc16\",\n        new String[] {\"\\ud801\\udc3e\\ud801\\udc3e\\ud801\\udc3e\\ud801\\udc3e\"});\n    assertAnalyzesTo(a, \"AbaCa\\ud801\\udc16DabA\", \n        new String[] { \"abaca\\ud801\\udc3edaba\" });\n    // unpaired lead surrogate\n    assertAnalyzesTo(a, \"AbaC\\uD801AdaBa\", \n        new String [] { \"abac\\uD801adaba\" });\n    // unpaired trail surrogate\n    assertAnalyzesTo(a, \"AbaC\\uDC16AdaBa\", \n        new String [] { \"abac\\uDC16adaba\" });\n  }\n\n","sourceOld":"  /**\n   * Test that LowercaseFilter handles entire unicode range correctly\n   */\n  public void testLowerCaseFilter() throws IOException {\n    Analyzer a = new LowerCaseWhitespaceAnalyzer();\n    // BMP\n    assertAnalyzesTo(a, \"AbaCaDabA\", new String[] { \"abacadaba\" });\n    // supplementary\n    assertAnalyzesTo(a, \"\\ud801\\udc16\\ud801\\udc16\\ud801\\udc16\\ud801\\udc16\",\n        new String[] {\"\\ud801\\udc3e\\ud801\\udc3e\\ud801\\udc3e\\ud801\\udc3e\"});\n    assertAnalyzesTo(a, \"AbaCa\\ud801\\udc16DabA\", \n        new String[] { \"abaca\\ud801\\udc3edaba\" });\n    // unpaired lead surrogate\n    assertAnalyzesTo(a, \"AbaC\\uD801AdaBa\", \n        new String [] { \"abac\\uD801adaba\" });\n    // unpaired trail surrogate\n    assertAnalyzesTo(a, \"AbaC\\uDC16AdaBa\", \n        new String [] { \"abac\\uDC16adaba\" });\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/core/TestAnalyzers#testLowerCaseFilter().mjava","pathOld":"modules/analysis/common/src/test/org/apache/lucene/analysis/core/TestAnalyzers#testLowerCaseFilter().mjava","sourceNew":"  /**\n   * Test that LowercaseFilter handles entire unicode range correctly\n   */\n  public void testLowerCaseFilter() throws IOException {\n    Analyzer a = new LowerCaseWhitespaceAnalyzer();\n    // BMP\n    assertAnalyzesTo(a, \"AbaCaDabA\", new String[] { \"abacadaba\" });\n    // supplementary\n    assertAnalyzesTo(a, \"\\ud801\\udc16\\ud801\\udc16\\ud801\\udc16\\ud801\\udc16\",\n        new String[] {\"\\ud801\\udc3e\\ud801\\udc3e\\ud801\\udc3e\\ud801\\udc3e\"});\n    assertAnalyzesTo(a, \"AbaCa\\ud801\\udc16DabA\", \n        new String[] { \"abaca\\ud801\\udc3edaba\" });\n    // unpaired lead surrogate\n    assertAnalyzesTo(a, \"AbaC\\uD801AdaBa\", \n        new String [] { \"abac\\uD801adaba\" });\n    // unpaired trail surrogate\n    assertAnalyzesTo(a, \"AbaC\\uDC16AdaBa\", \n        new String [] { \"abac\\uDC16adaba\" });\n  }\n\n","sourceOld":"  /**\n   * Test that LowercaseFilter handles entire unicode range correctly\n   */\n  public void testLowerCaseFilter() throws IOException {\n    Analyzer a = new LowerCaseWhitespaceAnalyzer();\n    // BMP\n    assertAnalyzesTo(a, \"AbaCaDabA\", new String[] { \"abacadaba\" });\n    // supplementary\n    assertAnalyzesTo(a, \"\\ud801\\udc16\\ud801\\udc16\\ud801\\udc16\\ud801\\udc16\",\n        new String[] {\"\\ud801\\udc3e\\ud801\\udc3e\\ud801\\udc3e\\ud801\\udc3e\"});\n    assertAnalyzesTo(a, \"AbaCa\\ud801\\udc16DabA\", \n        new String[] { \"abaca\\ud801\\udc3edaba\" });\n    // unpaired lead surrogate\n    assertAnalyzesTo(a, \"AbaC\\uD801AdaBa\", \n        new String [] { \"abac\\uD801adaba\" });\n    // unpaired trail surrogate\n    assertAnalyzesTo(a, \"AbaC\\uDC16AdaBa\", \n        new String [] { \"abac\\uDC16adaba\" });\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["790c3f61c9b891d66d919c5d10db9fa5216eb0f1"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"790c3f61c9b891d66d919c5d10db9fa5216eb0f1":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["790c3f61c9b891d66d919c5d10db9fa5216eb0f1"],"790c3f61c9b891d66d919c5d10db9fa5216eb0f1":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}