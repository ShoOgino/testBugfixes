{"path":"solr/core/src/test/org/apache/solr/search/facet/TestCloudJSONFacetSKGEquiv#getFacetDebug(SolrParams).mjava","commits":[{"id":"c5ec3c464e62e57df598ba20e010313bf6d5d7b4","date":1589998565,"type":0,"author":"Chris Hostetter","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/search/facet/TestCloudJSONFacetSKGEquiv#getFacetDebug(SolrParams).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * returns the <b>FIRST</b> NamedList (under the implicit 'null' FacetQuery) in the \"facet-trace\" output \n   * of the request.  Should not be used with multiple \"top level\" facets \n   * (the output is too confusing in cloud mode to be confident where/qhy each NamedList comes from)\n   */\n  private NamedList<Object> getFacetDebug(final SolrParams params) {\n    try {\n      final QueryResponse rsp = (new QueryRequest(params)).process(getRandClient(random()));\n      assertNotNull(params + \" is null rsp?\", rsp);\n      final NamedList topNamedList = rsp.getResponse();\n      assertNotNull(params + \" is null topNamedList?\", topNamedList);\n      \n      // skip past the (implicit) top Facet query to get it's \"sub-facets\" (the real facets)...\n      final List<NamedList<Object>> facetDebug =\n        (List<NamedList<Object>>) topNamedList.findRecursive(\"debug\", \"facet-trace\", \"sub-facet\");\n      assertNotNull(topNamedList + \" ... null facet debug?\", facetDebug);\n      assertFalse(topNamedList + \" ... not even one facet debug?\", facetDebug.isEmpty());\n      return facetDebug.get(0);\n    } catch (Exception e) {\n      throw new RuntimeException(\"query failed: \" + params + \": \" + \n                                 e.getMessage(), e);\n    } \n\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e98520789adb1d5ad05afb4956eca0944a929688","date":1592430701,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/search/facet/TestCloudJSONFacetSKGEquiv#getFacetDebug(SolrParams).mjava","pathOld":"solr/core/src/test/org/apache/solr/search/facet/TestCloudJSONFacetSKGEquiv#getFacetDebug(SolrParams).mjava","sourceNew":"  /**\n   * returns the <b>FIRST</b> NamedList (under the implicit 'null' FacetQuery) in the \"facet-trace\" output \n   * of the request.  Should not be used with multiple \"top level\" facets \n   * (the output is too confusing in cloud mode to be confident where/qhy each NamedList comes from)\n   */\n  private NamedList<Object> getFacetDebug(final SolrParams params) {\n    try {\n      final QueryResponse rsp = (new QueryRequest(params)).process(getRandClient(random()));\n      assertNotNull(params + \" is null rsp?\", rsp);\n      @SuppressWarnings({\"rawtypes\"})\n      final NamedList topNamedList = rsp.getResponse();\n      assertNotNull(params + \" is null topNamedList?\", topNamedList);\n      \n      // skip past the (implicit) top Facet query to get it's \"sub-facets\" (the real facets)...\n      @SuppressWarnings({\"unchecked\"})\n      final List<NamedList<Object>> facetDebug =\n        (List<NamedList<Object>>) topNamedList.findRecursive(\"debug\", \"facet-trace\", \"sub-facet\");\n      assertNotNull(topNamedList + \" ... null facet debug?\", facetDebug);\n      assertFalse(topNamedList + \" ... not even one facet debug?\", facetDebug.isEmpty());\n      return facetDebug.get(0);\n    } catch (Exception e) {\n      throw new RuntimeException(\"query failed: \" + params + \": \" + \n                                 e.getMessage(), e);\n    } \n\n  }\n\n","sourceOld":"  /**\n   * returns the <b>FIRST</b> NamedList (under the implicit 'null' FacetQuery) in the \"facet-trace\" output \n   * of the request.  Should not be used with multiple \"top level\" facets \n   * (the output is too confusing in cloud mode to be confident where/qhy each NamedList comes from)\n   */\n  private NamedList<Object> getFacetDebug(final SolrParams params) {\n    try {\n      final QueryResponse rsp = (new QueryRequest(params)).process(getRandClient(random()));\n      assertNotNull(params + \" is null rsp?\", rsp);\n      final NamedList topNamedList = rsp.getResponse();\n      assertNotNull(params + \" is null topNamedList?\", topNamedList);\n      \n      // skip past the (implicit) top Facet query to get it's \"sub-facets\" (the real facets)...\n      final List<NamedList<Object>> facetDebug =\n        (List<NamedList<Object>>) topNamedList.findRecursive(\"debug\", \"facet-trace\", \"sub-facet\");\n      assertNotNull(topNamedList + \" ... null facet debug?\", facetDebug);\n      assertFalse(topNamedList + \" ... not even one facet debug?\", facetDebug.isEmpty());\n      return facetDebug.get(0);\n    } catch (Exception e) {\n      throw new RuntimeException(\"query failed: \" + params + \": \" + \n                                 e.getMessage(), e);\n    } \n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"c5ec3c464e62e57df598ba20e010313bf6d5d7b4":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["e98520789adb1d5ad05afb4956eca0944a929688"],"e98520789adb1d5ad05afb4956eca0944a929688":["c5ec3c464e62e57df598ba20e010313bf6d5d7b4"]},"commit2Childs":{"c5ec3c464e62e57df598ba20e010313bf6d5d7b4":["e98520789adb1d5ad05afb4956eca0944a929688"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c5ec3c464e62e57df598ba20e010313bf6d5d7b4"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"e98520789adb1d5ad05afb4956eca0944a929688":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}