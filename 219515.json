{"path":"solr/core/src/java/org/apache/solr/util/SolrCLI.StatusTool#waitToSeeSolrUp(String,int).mjava","commits":[{"id":"4ca20be81c9284c840498143264e583ccbb8525a","date":1438705932,"type":0,"author":"Timothy Potter","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/util/SolrCLI.StatusTool#waitToSeeSolrUp(String,int).mjava","pathOld":"/dev/null","sourceNew":"    public Map<String,Object> waitToSeeSolrUp(String solrUrl, int maxWaitSecs) throws Exception {\n      long timeout = System.nanoTime() + TimeUnit.NANOSECONDS.convert(maxWaitSecs, TimeUnit.SECONDS);\n      while (System.nanoTime() < timeout) {\n        try {\n          return getStatus(solrUrl);\n        } catch (Exception exc) {\n          try {\n            Thread.sleep(2000L);\n          } catch (InterruptedException interrupted) {\n            timeout = 0; // stop looping\n          }\n        }\n      }\n      throw new TimeoutException(\"Did not see Solr at \"+solrUrl+\" come online within \"+maxWaitSecs);\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8677448a186f4abd32218787f7ae73ad38f575cf","date":1477484362,"type":3,"author":"Jan HÃ¸ydahl","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/util/SolrCLI.StatusTool#waitToSeeSolrUp(String,int).mjava","pathOld":"solr/core/src/java/org/apache/solr/util/SolrCLI.StatusTool#waitToSeeSolrUp(String,int).mjava","sourceNew":"    public Map<String,Object> waitToSeeSolrUp(String solrUrl, int maxWaitSecs) throws Exception {\n      long timeout = System.nanoTime() + TimeUnit.NANOSECONDS.convert(maxWaitSecs, TimeUnit.SECONDS);\n      while (System.nanoTime() < timeout) {\n        try {\n          return getStatus(solrUrl);\n        } catch (Exception exc) {\n          if (exceptionIsAuthRelated(exc)) {\n            throw exc;\n          }\n          try {\n            Thread.sleep(2000L);\n          } catch (InterruptedException interrupted) {\n            timeout = 0; // stop looping\n          }\n        }\n      }\n      throw new TimeoutException(\"Did not see Solr at \"+solrUrl+\" come online within \"+maxWaitSecs);\n    }\n\n","sourceOld":"    public Map<String,Object> waitToSeeSolrUp(String solrUrl, int maxWaitSecs) throws Exception {\n      long timeout = System.nanoTime() + TimeUnit.NANOSECONDS.convert(maxWaitSecs, TimeUnit.SECONDS);\n      while (System.nanoTime() < timeout) {\n        try {\n          return getStatus(solrUrl);\n        } catch (Exception exc) {\n          try {\n            Thread.sleep(2000L);\n          } catch (InterruptedException interrupted) {\n            timeout = 0; // stop looping\n          }\n        }\n      }\n      throw new TimeoutException(\"Did not see Solr at \"+solrUrl+\" come online within \"+maxWaitSecs);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"80d0e6d59ae23f4a6f30eaf40bfb40742300287f","date":1477598926,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/util/SolrCLI.StatusTool#waitToSeeSolrUp(String,int).mjava","pathOld":"solr/core/src/java/org/apache/solr/util/SolrCLI.StatusTool#waitToSeeSolrUp(String,int).mjava","sourceNew":"    public Map<String,Object> waitToSeeSolrUp(String solrUrl, int maxWaitSecs) throws Exception {\n      long timeout = System.nanoTime() + TimeUnit.NANOSECONDS.convert(maxWaitSecs, TimeUnit.SECONDS);\n      while (System.nanoTime() < timeout) {\n        try {\n          return getStatus(solrUrl);\n        } catch (Exception exc) {\n          if (exceptionIsAuthRelated(exc)) {\n            throw exc;\n          }\n          try {\n            Thread.sleep(2000L);\n          } catch (InterruptedException interrupted) {\n            timeout = 0; // stop looping\n          }\n        }\n      }\n      throw new TimeoutException(\"Did not see Solr at \"+solrUrl+\" come online within \"+maxWaitSecs);\n    }\n\n","sourceOld":"    public Map<String,Object> waitToSeeSolrUp(String solrUrl, int maxWaitSecs) throws Exception {\n      long timeout = System.nanoTime() + TimeUnit.NANOSECONDS.convert(maxWaitSecs, TimeUnit.SECONDS);\n      while (System.nanoTime() < timeout) {\n        try {\n          return getStatus(solrUrl);\n        } catch (Exception exc) {\n          try {\n            Thread.sleep(2000L);\n          } catch (InterruptedException interrupted) {\n            timeout = 0; // stop looping\n          }\n        }\n      }\n      throw new TimeoutException(\"Did not see Solr at \"+solrUrl+\" come online within \"+maxWaitSecs);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f85e0317037f2f84a7379222c6683b5d4b29a868","date":1494955156,"type":3,"author":"Mark Miller","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/util/SolrCLI.StatusTool#waitToSeeSolrUp(String,int).mjava","pathOld":"solr/core/src/java/org/apache/solr/util/SolrCLI.StatusTool#waitToSeeSolrUp(String,int).mjava","sourceNew":"    public Map<String,Object> waitToSeeSolrUp(String solrUrl, int maxWaitSecs) throws Exception {\n      long timeout = System.nanoTime() + TimeUnit.NANOSECONDS.convert(maxWaitSecs, TimeUnit.SECONDS);\n      while (System.nanoTime() < timeout) {\n        try {\n          return getStatus(solrUrl);\n        } catch (SSLPeerUnverifiedException exc) {\n            throw exc;\n        } catch (Exception exc) {\n          if (exceptionIsAuthRelated(exc)) {\n            throw exc;\n          }\n          try {\n            Thread.sleep(2000L);\n          } catch (InterruptedException interrupted) {\n            timeout = 0; // stop looping\n          }\n        }\n      }\n      throw new TimeoutException(\"Did not see Solr at \"+solrUrl+\" come online within \"+maxWaitSecs);\n    }\n\n","sourceOld":"    public Map<String,Object> waitToSeeSolrUp(String solrUrl, int maxWaitSecs) throws Exception {\n      long timeout = System.nanoTime() + TimeUnit.NANOSECONDS.convert(maxWaitSecs, TimeUnit.SECONDS);\n      while (System.nanoTime() < timeout) {\n        try {\n          return getStatus(solrUrl);\n        } catch (Exception exc) {\n          if (exceptionIsAuthRelated(exc)) {\n            throw exc;\n          }\n          try {\n            Thread.sleep(2000L);\n          } catch (InterruptedException interrupted) {\n            timeout = 0; // stop looping\n          }\n        }\n      }\n      throw new TimeoutException(\"Did not see Solr at \"+solrUrl+\" come online within \"+maxWaitSecs);\n    }\n\n","bugFix":null,"bugIntro":["ee8fbffa595c312bc0437f2c9bb6376a29c1b427"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"c5536d1fc2015d46bbeb8163f6f8b99483c7cc1f","date":1495081498,"type":3,"author":"Cao Manh Dat","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/util/SolrCLI.StatusTool#waitToSeeSolrUp(String,int).mjava","pathOld":"solr/core/src/java/org/apache/solr/util/SolrCLI.StatusTool#waitToSeeSolrUp(String,int).mjava","sourceNew":"    public Map<String,Object> waitToSeeSolrUp(String solrUrl, int maxWaitSecs) throws Exception {\n      long timeout = System.nanoTime() + TimeUnit.NANOSECONDS.convert(maxWaitSecs, TimeUnit.SECONDS);\n      while (System.nanoTime() < timeout) {\n        try {\n          return getStatus(solrUrl);\n        } catch (SSLPeerUnverifiedException exc) {\n            throw exc;\n        } catch (Exception exc) {\n          if (exceptionIsAuthRelated(exc)) {\n            throw exc;\n          }\n          try {\n            Thread.sleep(2000L);\n          } catch (InterruptedException interrupted) {\n            timeout = 0; // stop looping\n          }\n        }\n      }\n      throw new TimeoutException(\"Did not see Solr at \"+solrUrl+\" come online within \"+maxWaitSecs);\n    }\n\n","sourceOld":"    public Map<String,Object> waitToSeeSolrUp(String solrUrl, int maxWaitSecs) throws Exception {\n      long timeout = System.nanoTime() + TimeUnit.NANOSECONDS.convert(maxWaitSecs, TimeUnit.SECONDS);\n      while (System.nanoTime() < timeout) {\n        try {\n          return getStatus(solrUrl);\n        } catch (Exception exc) {\n          if (exceptionIsAuthRelated(exc)) {\n            throw exc;\n          }\n          try {\n            Thread.sleep(2000L);\n          } catch (InterruptedException interrupted) {\n            timeout = 0; // stop looping\n          }\n        }\n      }\n      throw new TimeoutException(\"Did not see Solr at \"+solrUrl+\" come online within \"+maxWaitSecs);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"e9017cf144952056066919f1ebc7897ff9bd71b1","date":1496757600,"type":3,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/util/SolrCLI.StatusTool#waitToSeeSolrUp(String,int).mjava","pathOld":"solr/core/src/java/org/apache/solr/util/SolrCLI.StatusTool#waitToSeeSolrUp(String,int).mjava","sourceNew":"    public Map<String,Object> waitToSeeSolrUp(String solrUrl, int maxWaitSecs) throws Exception {\n      long timeout = System.nanoTime() + TimeUnit.NANOSECONDS.convert(maxWaitSecs, TimeUnit.SECONDS);\n      while (System.nanoTime() < timeout) {\n        try {\n          return getStatus(solrUrl);\n        } catch (SSLPeerUnverifiedException exc) {\n            throw exc;\n        } catch (Exception exc) {\n          if (exceptionIsAuthRelated(exc)) {\n            throw exc;\n          }\n          try {\n            Thread.sleep(2000L);\n          } catch (InterruptedException interrupted) {\n            timeout = 0; // stop looping\n          }\n        }\n      }\n      throw new TimeoutException(\"Did not see Solr at \"+solrUrl+\" come online within \"+maxWaitSecs);\n    }\n\n","sourceOld":"    public Map<String,Object> waitToSeeSolrUp(String solrUrl, int maxWaitSecs) throws Exception {\n      long timeout = System.nanoTime() + TimeUnit.NANOSECONDS.convert(maxWaitSecs, TimeUnit.SECONDS);\n      while (System.nanoTime() < timeout) {\n        try {\n          return getStatus(solrUrl);\n        } catch (Exception exc) {\n          if (exceptionIsAuthRelated(exc)) {\n            throw exc;\n          }\n          try {\n            Thread.sleep(2000L);\n          } catch (InterruptedException interrupted) {\n            timeout = 0; // stop looping\n          }\n        }\n      }\n      throw new TimeoutException(\"Did not see Solr at \"+solrUrl+\" come online within \"+maxWaitSecs);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b79a5db147a1c6f95d1625ddbc3561ef56955225","date":1528848080,"type":3,"author":"Steve Rowe","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/util/SolrCLI.StatusTool#waitToSeeSolrUp(String,int).mjava","pathOld":"solr/core/src/java/org/apache/solr/util/SolrCLI.StatusTool#waitToSeeSolrUp(String,int).mjava","sourceNew":"    public Map<String,Object> waitToSeeSolrUp(String solrUrl, int maxWaitSecs) throws Exception {\n      long timeout = System.nanoTime() + TimeUnit.NANOSECONDS.convert(maxWaitSecs, TimeUnit.SECONDS);\n      while (System.nanoTime() < timeout) {\n        try {\n          return getStatus(solrUrl);\n        } catch (SSLPeerUnverifiedException exc) {\n            throw exc;\n        } catch (Exception exc) {\n          if (exceptionIsAuthRelated(exc)) {\n            throw exc;\n          }\n          try {\n            Thread.sleep(2000L);\n          } catch (InterruptedException interrupted) {\n            timeout = 0; // stop looping\n          }\n        }\n      }\n      throw new TimeoutException(\"Did not see Solr at \"+solrUrl+\" come online within \"+maxWaitSecs);\n    }\n\n","sourceOld":"    public Map<String,Object> waitToSeeSolrUp(String solrUrl, int maxWaitSecs) throws Exception {\n      long timeout = System.nanoTime() + TimeUnit.NANOSECONDS.convert(maxWaitSecs, TimeUnit.SECONDS);\n      while (System.nanoTime() < timeout) {\n        try {\n          return getStatus(solrUrl);\n        } catch (SSLPeerUnverifiedException exc) {\n            throw exc;\n        } catch (Exception exc) {\n          if (exceptionIsAuthRelated(exc)) {\n            throw exc;\n          }\n          try {\n            Thread.sleep(2000L);\n          } catch (InterruptedException interrupted) {\n            timeout = 0; // stop looping\n          }\n        }\n      }\n      throw new TimeoutException(\"Did not see Solr at \"+solrUrl+\" come online within \"+maxWaitSecs);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"7eeaaea0106c7d6a2de50acfc8d357121ef8bd26","date":1531589977,"type":3,"author":"Michael Braun","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/util/SolrCLI.StatusTool#waitToSeeSolrUp(String,int).mjava","pathOld":"solr/core/src/java/org/apache/solr/util/SolrCLI.StatusTool#waitToSeeSolrUp(String,int).mjava","sourceNew":"    public Map<String,Object> waitToSeeSolrUp(String solrUrl, int maxWaitSecs) throws Exception {\n      long timeout = System.nanoTime() + TimeUnit.NANOSECONDS.convert(maxWaitSecs, TimeUnit.SECONDS);\n      while (System.nanoTime() < timeout) {\n        try {\n          return getStatus(solrUrl);\n        } catch (SSLPeerUnverifiedException exc) {\n            throw exc;\n        } catch (Exception exc) {\n          if (exceptionIsAuthRelated(exc)) {\n            throw exc;\n          }\n          try {\n            Thread.sleep(2000L);\n          } catch (InterruptedException interrupted) {\n            timeout = 0; // stop looping\n          }\n        }\n      }\n      throw new TimeoutException(\"Did not see Solr at \"+solrUrl+\" come online within \"+maxWaitSecs);\n    }\n\n","sourceOld":"    public Map<String,Object> waitToSeeSolrUp(String solrUrl, int maxWaitSecs) throws Exception {\n      long timeout = System.nanoTime() + TimeUnit.NANOSECONDS.convert(maxWaitSecs, TimeUnit.SECONDS);\n      while (System.nanoTime() < timeout) {\n        try {\n          return getStatus(solrUrl);\n        } catch (SSLPeerUnverifiedException exc) {\n            throw exc;\n        } catch (Exception exc) {\n          if (exceptionIsAuthRelated(exc)) {\n            throw exc;\n          }\n          try {\n            Thread.sleep(2000L);\n          } catch (InterruptedException interrupted) {\n            timeout = 0; // stop looping\n          }\n        }\n      }\n      throw new TimeoutException(\"Did not see Solr at \"+solrUrl+\" come online within \"+maxWaitSecs);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","date":1531905561,"type":3,"author":"Alessandro Benedetti","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/util/SolrCLI.StatusTool#waitToSeeSolrUp(String,int).mjava","pathOld":"solr/core/src/java/org/apache/solr/util/SolrCLI.StatusTool#waitToSeeSolrUp(String,int).mjava","sourceNew":"    public Map<String,Object> waitToSeeSolrUp(String solrUrl, int maxWaitSecs) throws Exception {\n      long timeout = System.nanoTime() + TimeUnit.NANOSECONDS.convert(maxWaitSecs, TimeUnit.SECONDS);\n      while (System.nanoTime() < timeout) {\n        try {\n          return getStatus(solrUrl);\n        } catch (SSLPeerUnverifiedException exc) {\n            throw exc;\n        } catch (Exception exc) {\n          if (exceptionIsAuthRelated(exc)) {\n            throw exc;\n          }\n          try {\n            Thread.sleep(2000L);\n          } catch (InterruptedException interrupted) {\n            timeout = 0; // stop looping\n          }\n        }\n      }\n      throw new TimeoutException(\"Did not see Solr at \"+solrUrl+\" come online within \"+maxWaitSecs);\n    }\n\n","sourceOld":"    public Map<String,Object> waitToSeeSolrUp(String solrUrl, int maxWaitSecs) throws Exception {\n      long timeout = System.nanoTime() + TimeUnit.NANOSECONDS.convert(maxWaitSecs, TimeUnit.SECONDS);\n      while (System.nanoTime() < timeout) {\n        try {\n          return getStatus(solrUrl);\n        } catch (SSLPeerUnverifiedException exc) {\n            throw exc;\n        } catch (Exception exc) {\n          if (exceptionIsAuthRelated(exc)) {\n            throw exc;\n          }\n          try {\n            Thread.sleep(2000L);\n          } catch (InterruptedException interrupted) {\n            timeout = 0; // stop looping\n          }\n        }\n      }\n      throw new TimeoutException(\"Did not see Solr at \"+solrUrl+\" come online within \"+maxWaitSecs);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8fa515e65ed90b5fe8764eb2953e8a9771e9deb6","date":1588090745,"type":3,"author":"Christine Poerschke","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/util/SolrCLI.StatusTool#waitToSeeSolrUp(String,int).mjava","pathOld":"solr/core/src/java/org/apache/solr/util/SolrCLI.StatusTool#waitToSeeSolrUp(String,int).mjava","sourceNew":"    public Map<String,Object> waitToSeeSolrUp(String solrUrl, int maxWaitSecs) throws Exception {\n      long timeout = System.nanoTime() + TimeUnit.NANOSECONDS.convert(maxWaitSecs, TimeUnit.SECONDS);\n      while (System.nanoTime() < timeout) {\n        try {\n          return getStatus(solrUrl);\n        } catch (SSLPeerUnverifiedException exc) {\n            throw exc;\n        } catch (Exception exc) {\n          if (exceptionIsAuthRelated(exc)) {\n            throw exc;\n          }\n          try {\n            Thread.sleep(2000L);\n          } catch (InterruptedException interrupted) {\n            timeout = 0; // stop looping\n          }\n        }\n      }\n      throw new TimeoutException(\"Did not see Solr at \"+solrUrl+\" come online within \"+maxWaitSecs+\" seconds!\");\n    }\n\n","sourceOld":"    public Map<String,Object> waitToSeeSolrUp(String solrUrl, int maxWaitSecs) throws Exception {\n      long timeout = System.nanoTime() + TimeUnit.NANOSECONDS.convert(maxWaitSecs, TimeUnit.SECONDS);\n      while (System.nanoTime() < timeout) {\n        try {\n          return getStatus(solrUrl);\n        } catch (SSLPeerUnverifiedException exc) {\n            throw exc;\n        } catch (Exception exc) {\n          if (exceptionIsAuthRelated(exc)) {\n            throw exc;\n          }\n          try {\n            Thread.sleep(2000L);\n          } catch (InterruptedException interrupted) {\n            timeout = 0; // stop looping\n          }\n        }\n      }\n      throw new TimeoutException(\"Did not see Solr at \"+solrUrl+\" come online within \"+maxWaitSecs);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"ee8fbffa595c312bc0437f2c9bb6376a29c1b427","date":1589412657,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/util/SolrCLI.StatusTool#waitToSeeSolrUp(String,int).mjava","pathOld":"solr/core/src/java/org/apache/solr/util/SolrCLI.StatusTool#waitToSeeSolrUp(String,int).mjava","sourceNew":"    public Map<String,Object> waitToSeeSolrUp(String solrUrl, int maxWaitSecs) throws Exception {\n      long timeout = System.nanoTime() + TimeUnit.NANOSECONDS.convert(maxWaitSecs, TimeUnit.SECONDS);\n      while (System.nanoTime() < timeout) {\n        try {\n          return getStatus(solrUrl);\n        } catch (SSLPeerUnverifiedException exc) {\n          throw exc;\n        } catch (Exception exc) {\n          if (exceptionIsAuthRelated(exc)) {\n            throw exc;\n          }\n          try {\n            Thread.sleep(2000L);\n          } catch (InterruptedException interrupted) {\n            timeout = 0; // stop looping\n          }\n        }\n      }\n      throw new TimeoutException(\"Did not see Solr at \"+solrUrl+\" come online within \"+maxWaitSecs+\" seconds!\");\n    }\n\n","sourceOld":"    public Map<String,Object> waitToSeeSolrUp(String solrUrl, int maxWaitSecs) throws Exception {\n      long timeout = System.nanoTime() + TimeUnit.NANOSECONDS.convert(maxWaitSecs, TimeUnit.SECONDS);\n      while (System.nanoTime() < timeout) {\n        try {\n          return getStatus(solrUrl);\n        } catch (SSLPeerUnverifiedException exc) {\n            throw exc;\n        } catch (Exception exc) {\n          if (exceptionIsAuthRelated(exc)) {\n            throw exc;\n          }\n          try {\n            Thread.sleep(2000L);\n          } catch (InterruptedException interrupted) {\n            timeout = 0; // stop looping\n          }\n        }\n      }\n      throw new TimeoutException(\"Did not see Solr at \"+solrUrl+\" come online within \"+maxWaitSecs+\" seconds!\");\n    }\n\n","bugFix":["f85e0317037f2f84a7379222c6683b5d4b29a868"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"f85e0317037f2f84a7379222c6683b5d4b29a868":["8677448a186f4abd32218787f7ae73ad38f575cf"],"c5536d1fc2015d46bbeb8163f6f8b99483c7cc1f":["8677448a186f4abd32218787f7ae73ad38f575cf","f85e0317037f2f84a7379222c6683b5d4b29a868"],"b79a5db147a1c6f95d1625ddbc3561ef56955225":["c5536d1fc2015d46bbeb8163f6f8b99483c7cc1f"],"4ca20be81c9284c840498143264e583ccbb8525a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"e9017cf144952056066919f1ebc7897ff9bd71b1":["8677448a186f4abd32218787f7ae73ad38f575cf","c5536d1fc2015d46bbeb8163f6f8b99483c7cc1f"],"0efc9f2cae117418f13ba9035f5e1d516ea7a2b5":["c5536d1fc2015d46bbeb8163f6f8b99483c7cc1f","b79a5db147a1c6f95d1625ddbc3561ef56955225"],"8677448a186f4abd32218787f7ae73ad38f575cf":["4ca20be81c9284c840498143264e583ccbb8525a"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"80d0e6d59ae23f4a6f30eaf40bfb40742300287f":["4ca20be81c9284c840498143264e583ccbb8525a","8677448a186f4abd32218787f7ae73ad38f575cf"],"8fa515e65ed90b5fe8764eb2953e8a9771e9deb6":["b79a5db147a1c6f95d1625ddbc3561ef56955225"],"ee8fbffa595c312bc0437f2c9bb6376a29c1b427":["8fa515e65ed90b5fe8764eb2953e8a9771e9deb6"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["ee8fbffa595c312bc0437f2c9bb6376a29c1b427"],"7eeaaea0106c7d6a2de50acfc8d357121ef8bd26":["c5536d1fc2015d46bbeb8163f6f8b99483c7cc1f","b79a5db147a1c6f95d1625ddbc3561ef56955225"]},"commit2Childs":{"f85e0317037f2f84a7379222c6683b5d4b29a868":["c5536d1fc2015d46bbeb8163f6f8b99483c7cc1f"],"c5536d1fc2015d46bbeb8163f6f8b99483c7cc1f":["b79a5db147a1c6f95d1625ddbc3561ef56955225","e9017cf144952056066919f1ebc7897ff9bd71b1","0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","7eeaaea0106c7d6a2de50acfc8d357121ef8bd26"],"b79a5db147a1c6f95d1625ddbc3561ef56955225":["0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","8fa515e65ed90b5fe8764eb2953e8a9771e9deb6","7eeaaea0106c7d6a2de50acfc8d357121ef8bd26"],"4ca20be81c9284c840498143264e583ccbb8525a":["8677448a186f4abd32218787f7ae73ad38f575cf","80d0e6d59ae23f4a6f30eaf40bfb40742300287f"],"e9017cf144952056066919f1ebc7897ff9bd71b1":[],"0efc9f2cae117418f13ba9035f5e1d516ea7a2b5":[],"8677448a186f4abd32218787f7ae73ad38f575cf":["f85e0317037f2f84a7379222c6683b5d4b29a868","c5536d1fc2015d46bbeb8163f6f8b99483c7cc1f","e9017cf144952056066919f1ebc7897ff9bd71b1","80d0e6d59ae23f4a6f30eaf40bfb40742300287f"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["4ca20be81c9284c840498143264e583ccbb8525a"],"80d0e6d59ae23f4a6f30eaf40bfb40742300287f":[],"8fa515e65ed90b5fe8764eb2953e8a9771e9deb6":["ee8fbffa595c312bc0437f2c9bb6376a29c1b427"],"ee8fbffa595c312bc0437f2c9bb6376a29c1b427":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"7eeaaea0106c7d6a2de50acfc8d357121ef8bd26":[]},"heads":["e9017cf144952056066919f1ebc7897ff9bd71b1","0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","80d0e6d59ae23f4a6f30eaf40bfb40742300287f","cd5edd1f2b162a5cfa08efd17851a07373a96817","7eeaaea0106c7d6a2de50acfc8d357121ef8bd26"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}