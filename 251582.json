{"path":"lucene/core/src/java/org/apache/lucene/index/DocTermOrds#DocTermOrds(AtomicReader,String,BytesRef,int).mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/DocTermOrds#DocTermOrds(AtomicReader,String,BytesRef,int).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/DocTermOrds#DocTermOrds(AtomicReader,String,BytesRef,int).mjava","sourceNew":"  /** Inverts only terms starting w/ prefix, and only terms\n   *  whose docFreq (not taking deletions into account) is\n   *  <=  maxTermDocFreq */\n  public DocTermOrds(AtomicReader reader, String field, BytesRef termPrefix, int maxTermDocFreq) throws IOException {\n    this(reader, field, termPrefix, maxTermDocFreq, DEFAULT_INDEX_INTERVAL_BITS);\n    uninvert(reader, termPrefix);\n  }\n\n","sourceOld":"  /** Inverts only terms starting w/ prefix, and only terms\n   *  whose docFreq (not taking deletions into account) is\n   *  <=  maxTermDocFreq */\n  public DocTermOrds(AtomicReader reader, String field, BytesRef termPrefix, int maxTermDocFreq) throws IOException {\n    this(reader, field, termPrefix, maxTermDocFreq, DEFAULT_INDEX_INTERVAL_BITS);\n    uninvert(reader, termPrefix);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"60daad1187870cb8dea2344dcd50c29136546f18","date":1361389468,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/DocTermOrds#DocTermOrds(AtomicReader,Bits,String,BytesRef,int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/DocTermOrds#DocTermOrds(AtomicReader,String,BytesRef,int).mjava","sourceNew":"  /** Inverts only terms starting w/ prefix, and only terms\n   *  whose docFreq (not taking deletions into account) is\n   *  <=  maxTermDocFreq */\n  public DocTermOrds(AtomicReader reader, Bits liveDocs, String field, BytesRef termPrefix, int maxTermDocFreq) throws IOException {\n    this(reader, liveDocs, field, termPrefix, maxTermDocFreq, DEFAULT_INDEX_INTERVAL_BITS);\n  }\n\n","sourceOld":"  /** Inverts only terms starting w/ prefix, and only terms\n   *  whose docFreq (not taking deletions into account) is\n   *  <=  maxTermDocFreq */\n  public DocTermOrds(AtomicReader reader, String field, BytesRef termPrefix, int maxTermDocFreq) throws IOException {\n    this(reader, field, termPrefix, maxTermDocFreq, DEFAULT_INDEX_INTERVAL_BITS);\n    uninvert(reader, termPrefix);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"60daad1187870cb8dea2344dcd50c29136546f18":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["60daad1187870cb8dea2344dcd50c29136546f18"]},"commit2Childs":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["60daad1187870cb8dea2344dcd50c29136546f18"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"60daad1187870cb8dea2344dcd50c29136546f18":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}