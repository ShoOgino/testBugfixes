{"path":"src/java/org/apache/lucene/search/Scorer#score(HitCollector,int).mjava","commits":[{"id":"91109046a59c58ee0ee5d0d2767b08d1f30d6702","date":1000830588,"type":0,"author":"Jason van Zyl","isMerge":false,"pathNew":"src/java/org/apache/lucene/search/Scorer#score(HitCollector,int).mjava","pathOld":"/dev/null","sourceNew":"  abstract void score(HitCollector hc, int maxDoc) throws IOException;\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"27274410c91546fcfc28e692abd2dd77ca99be4b","date":1042501834,"type":3,"author":"Doug Cutting","isMerge":false,"pathNew":"src/java/org/apache/lucene/search/Scorer#score(HitCollector,int).mjava","pathOld":"src/java/org/apache/lucene/search/Scorer#score(HitCollector,int).mjava","sourceNew":"  /** Scores hits and passes them to a collector.  Stops at the last document\n   * before <code>maxDoc</code>.  If called repeatedly, will restart at point\n   * where it last left off.\n   */\n  public abstract void score(HitCollector hc, int maxDoc) throws IOException;\n\n","sourceOld":"  abstract void score(HitCollector hc, int maxDoc) throws IOException;\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"15c469602973ef1a33c9a07367a380d278ffab20","date":1074206555,"type":4,"author":"Doug Cutting","isMerge":false,"pathNew":"/dev/null","pathOld":"src/java/org/apache/lucene/search/Scorer#score(HitCollector,int).mjava","sourceNew":null,"sourceOld":"  /** Scores hits and passes them to a collector.  Stops at the last document\n   * before <code>maxDoc</code>.  If called repeatedly, will restart at point\n   * where it last left off.\n   */\n  public abstract void score(HitCollector hc, int maxDoc) throws IOException;\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9a53bff5f7abfecc50821f3dfcdca3d4c445cf88","date":1095875760,"type":0,"author":"Doug Cutting","isMerge":false,"pathNew":"src/java/org/apache/lucene/search/Scorer#score(HitCollector,int).mjava","pathOld":"/dev/null","sourceNew":"  /** Expert: Collects matching documents in a range.  Hook for optimization.\n   * Note that {@link #next()} must be called once before this method is called\n   * for the first time.\n   * @param hc The collector to which all matching documents are passed through\n   * {@link HitCollector#collect(int, float)}.\n   * @param max Do not score documents past this.\n   * @return true if more matching documents may remain.\n   */\n  protected boolean score(HitCollector hc, int max) throws IOException {\n    while (doc() < max) {\n      hc.collect(doc(), score());\n      if (!next())\n        return false;\n    }\n    return true;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"64714133cf5ec732e3bbceee63351bb9af0117dc","date":1239647636,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/search/Scorer#score(HitCollector,int).mjava","pathOld":"src/java/org/apache/lucene/search/Scorer#score(HitCollector,int).mjava","sourceNew":"  /** Expert: Collects matching documents in a range.  Hook for optimization.\n   * Note that {@link #next()} must be called once before this method is called\n   * for the first time.\n   * @param hc The collector to which all matching documents are passed through\n   * {@link HitCollector#collect(int, float)}.\n   * @param max Do not score documents past this.\n   * @return true if more matching documents may remain.\n   * @deprecated use {@link #score(Collector, int)} instead.\n   */\n  protected boolean score(HitCollector hc, int max) throws IOException {\n    return score(new HitCollectorWrapper(hc), max);\n  }\n\n","sourceOld":"  /** Expert: Collects matching documents in a range.  Hook for optimization.\n   * Note that {@link #next()} must be called once before this method is called\n   * for the first time.\n   * @param hc The collector to which all matching documents are passed through\n   * {@link HitCollector#collect(int, float)}.\n   * @param max Do not score documents past this.\n   * @return true if more matching documents may remain.\n   */\n  protected boolean score(HitCollector hc, int max) throws IOException {\n    while (doc() < max) {\n      hc.collect(doc(), score());\n      if (!next())\n        return false;\n    }\n    return true;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"30a558487f2298c2c19ceca9103c1b6865d64708","date":1244393921,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/search/Scorer#score(HitCollector,int).mjava","pathOld":"src/java/org/apache/lucene/search/Scorer#score(HitCollector,int).mjava","sourceNew":"  /** Expert: Collects matching documents in a range.  Hook for optimization.\n   * Note that {@link #next()} must be called once before this method is called\n   * for the first time.\n   * @param hc The collector to which all matching documents are passed through\n   * {@link HitCollector#collect(int, float)}.\n   * @param max Do not score documents past this.\n   * @return true if more matching documents may remain.\n   * @deprecated use {@link #score(Collector, int)} instead.\n   */\n  protected boolean score(HitCollector hc, int max) throws IOException {\n    return score(new HitCollectorWrapper(hc), max, docID());\n  }\n\n","sourceOld":"  /** Expert: Collects matching documents in a range.  Hook for optimization.\n   * Note that {@link #next()} must be called once before this method is called\n   * for the first time.\n   * @param hc The collector to which all matching documents are passed through\n   * {@link HitCollector#collect(int, float)}.\n   * @param max Do not score documents past this.\n   * @return true if more matching documents may remain.\n   * @deprecated use {@link #score(Collector, int)} instead.\n   */\n  protected boolean score(HitCollector hc, int max) throws IOException {\n    return score(new HitCollectorWrapper(hc), max);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"228ae6201d658ffd32c36e070ab952d9cee9d944","date":1244832561,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/search/Scorer#score(HitCollector,int).mjava","pathOld":"src/java/org/apache/lucene/search/Scorer#score(HitCollector,int).mjava","sourceNew":"  /** Expert: Collects matching documents in a range.  Hook for optimization.\n   * Note that {@link #next()} must be called once before this method is called\n   * for the first time.\n   * @param hc The collector to which all matching documents are passed through\n   * {@link HitCollector#collect(int, float)}.\n   * @param max Do not score documents past this.\n   * @return true if more matching documents may remain.\n   * @deprecated use {@link #score(Collector, int, int)} instead.\n   */\n  protected boolean score(HitCollector hc, int max) throws IOException {\n    return score(new HitCollectorWrapper(hc), max, docID());\n  }\n\n","sourceOld":"  /** Expert: Collects matching documents in a range.  Hook for optimization.\n   * Note that {@link #next()} must be called once before this method is called\n   * for the first time.\n   * @param hc The collector to which all matching documents are passed through\n   * {@link HitCollector#collect(int, float)}.\n   * @param max Do not score documents past this.\n   * @return true if more matching documents may remain.\n   * @deprecated use {@link #score(Collector, int)} instead.\n   */\n  protected boolean score(HitCollector hc, int max) throws IOException {\n    return score(new HitCollectorWrapper(hc), max, docID());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"61cbcf396559d597a914594d7e2830c142ecfd91","date":1255444081,"type":4,"author":"Uwe Schindler","isMerge":false,"pathNew":"/dev/null","pathOld":"src/java/org/apache/lucene/search/Scorer#score(HitCollector,int).mjava","sourceNew":null,"sourceOld":"  /** Expert: Collects matching documents in a range.  Hook for optimization.\n   * Note that {@link #next()} must be called once before this method is called\n   * for the first time.\n   * @param hc The collector to which all matching documents are passed through\n   * {@link HitCollector#collect(int, float)}.\n   * @param max Do not score documents past this.\n   * @return true if more matching documents may remain.\n   * @deprecated use {@link #score(Collector, int, int)} instead.\n   */\n  protected boolean score(HitCollector hc, int max) throws IOException {\n    return score(new HitCollectorWrapper(hc), max, docID());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"91109046a59c58ee0ee5d0d2767b08d1f30d6702":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"30a558487f2298c2c19ceca9103c1b6865d64708":["64714133cf5ec732e3bbceee63351bb9af0117dc"],"64714133cf5ec732e3bbceee63351bb9af0117dc":["9a53bff5f7abfecc50821f3dfcdca3d4c445cf88"],"27274410c91546fcfc28e692abd2dd77ca99be4b":["91109046a59c58ee0ee5d0d2767b08d1f30d6702"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"61cbcf396559d597a914594d7e2830c142ecfd91":["228ae6201d658ffd32c36e070ab952d9cee9d944"],"228ae6201d658ffd32c36e070ab952d9cee9d944":["30a558487f2298c2c19ceca9103c1b6865d64708"],"9a53bff5f7abfecc50821f3dfcdca3d4c445cf88":["15c469602973ef1a33c9a07367a380d278ffab20"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["61cbcf396559d597a914594d7e2830c142ecfd91"],"15c469602973ef1a33c9a07367a380d278ffab20":["27274410c91546fcfc28e692abd2dd77ca99be4b"]},"commit2Childs":{"91109046a59c58ee0ee5d0d2767b08d1f30d6702":["27274410c91546fcfc28e692abd2dd77ca99be4b"],"30a558487f2298c2c19ceca9103c1b6865d64708":["228ae6201d658ffd32c36e070ab952d9cee9d944"],"64714133cf5ec732e3bbceee63351bb9af0117dc":["30a558487f2298c2c19ceca9103c1b6865d64708"],"27274410c91546fcfc28e692abd2dd77ca99be4b":["15c469602973ef1a33c9a07367a380d278ffab20"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["91109046a59c58ee0ee5d0d2767b08d1f30d6702"],"61cbcf396559d597a914594d7e2830c142ecfd91":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"228ae6201d658ffd32c36e070ab952d9cee9d944":["61cbcf396559d597a914594d7e2830c142ecfd91"],"9a53bff5f7abfecc50821f3dfcdca3d4c445cf88":["64714133cf5ec732e3bbceee63351bb9af0117dc"],"15c469602973ef1a33c9a07367a380d278ffab20":["9a53bff5f7abfecc50821f3dfcdca3d4c445cf88"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}