{"path":"modules/analysis/common/src/test/org/apache/lucene/analysis/query/QueryAutoStopWordAnalyzerTest#testAddStopWordsIndexReaderInt().mjava","commits":[{"id":"0f080986da691a3bba7b757f43ab72cdc82b57ce","date":1273069619,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"modules/analysis/common/src/test/org/apache/lucene/analysis/query/QueryAutoStopWordAnalyzerTest#testAddStopWordsIndexReaderInt().mjava","pathOld":"lucene/contrib/analyzers/common/src/test/org/apache/lucene/analysis/query/QueryAutoStopWordAnalyzerTest#testAddStopWordsIndexReaderInt().mjava","sourceNew":"  /*\n    * Test method for 'org.apache.lucene.analysis.QueryAutoStopWordAnalyzer.addStopWords(IndexReader, int)'\n    */\n  public void testAddStopWordsIndexReaderInt() throws Exception {\n    protectedAnalyzer.addStopWords(reader, 1f / 2f);\n    int numHits = search(protectedAnalyzer, \"repetitiveField:boring\");\n    assertEquals(\"A filter on terms in > one half of docs remove boring docs\", 0, numHits);\n\n    numHits = search(protectedAnalyzer, \"repetitiveField:vaguelyboring\");\n    assertTrue(\"A filter on terms in > half of docs should not remove vaguelyBoring docs\", numHits > 1);\n\n    protectedAnalyzer.addStopWords(reader, 1f / 4f);\n    numHits = search(protectedAnalyzer, \"repetitiveField:vaguelyboring\");\n    assertEquals(\"A filter on terms in > quarter of docs should remove vaguelyBoring docs\", 0, numHits);\n  }\n\n","sourceOld":"  /*\n    * Test method for 'org.apache.lucene.analysis.QueryAutoStopWordAnalyzer.addStopWords(IndexReader, int)'\n    */\n  public void testAddStopWordsIndexReaderInt() throws Exception {\n    protectedAnalyzer.addStopWords(reader, 1f / 2f);\n    int numHits = search(protectedAnalyzer, \"repetitiveField:boring\");\n    assertEquals(\"A filter on terms in > one half of docs remove boring docs\", 0, numHits);\n\n    numHits = search(protectedAnalyzer, \"repetitiveField:vaguelyboring\");\n    assertTrue(\"A filter on terms in > half of docs should not remove vaguelyBoring docs\", numHits > 1);\n\n    protectedAnalyzer.addStopWords(reader, 1f / 4f);\n    numHits = search(protectedAnalyzer, \"repetitiveField:vaguelyboring\");\n    assertEquals(\"A filter on terms in > quarter of docs should remove vaguelyBoring docs\", 0, numHits);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"dfd4d352ddf04b37253ad97ce1aad1448253f0f7","date":1310173878,"type":3,"author":"Christopher John Male","isMerge":false,"pathNew":"modules/analysis/common/src/test/org/apache/lucene/analysis/query/QueryAutoStopWordAnalyzerTest#testAddStopWordsIndexReaderInt().mjava","pathOld":"modules/analysis/common/src/test/org/apache/lucene/analysis/query/QueryAutoStopWordAnalyzerTest#testAddStopWordsIndexReaderInt().mjava","sourceNew":"  /*\n    * Test method for 'org.apache.lucene.analysis.QueryAutoStopWordAnalyzer.addStopWords(IndexReader, int)'\n    */\n  public void testAddStopWordsIndexReaderInt() throws Exception {\n    protectedAnalyzer.addStopWords(reader, 1f / 2f);\n\n    TokenStream protectedTokenStream = protectedAnalyzer.reusableTokenStream(\"repetitiveField\", new StringReader(\"boring\"));\n    // A filter on terms in > one half of docs remove boring\n    assertTokenStreamContents(protectedTokenStream, new String[0]);\n\n    protectedTokenStream = protectedAnalyzer.reusableTokenStream(\"repetitiveField\", new StringReader(\"vaguelyboring\"));\n     // A filter on terms in > half of docs should not remove vaguelyBoring\n    assertTokenStreamContents(protectedTokenStream, new String[]{\"vaguelyboring\"});\n\n    protectedAnalyzer.addStopWords(reader, 1f / 4f);\n    protectedTokenStream = protectedAnalyzer.reusableTokenStream(\"repetitiveField\", new StringReader(\"vaguelyboring\"));\n     // A filter on terms in > quarter of docs should remove vaguelyBoring\n    assertTokenStreamContents(protectedTokenStream, new String[0]);\n  }\n\n","sourceOld":"  /*\n    * Test method for 'org.apache.lucene.analysis.QueryAutoStopWordAnalyzer.addStopWords(IndexReader, int)'\n    */\n  public void testAddStopWordsIndexReaderInt() throws Exception {\n    protectedAnalyzer.addStopWords(reader, 1f / 2f);\n    int numHits = search(protectedAnalyzer, \"repetitiveField:boring\");\n    assertEquals(\"A filter on terms in > one half of docs remove boring docs\", 0, numHits);\n\n    numHits = search(protectedAnalyzer, \"repetitiveField:vaguelyboring\");\n    assertTrue(\"A filter on terms in > half of docs should not remove vaguelyBoring docs\", numHits > 1);\n\n    protectedAnalyzer.addStopWords(reader, 1f / 4f);\n    numHits = search(protectedAnalyzer, \"repetitiveField:vaguelyboring\");\n    assertEquals(\"A filter on terms in > quarter of docs should remove vaguelyBoring docs\", 0, numHits);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"63639dd66fd5bd9b90bc24dd596ae01575f27cc4","date":1310237454,"type":3,"author":"Steven Rowe","isMerge":true,"pathNew":"modules/analysis/common/src/test/org/apache/lucene/analysis/query/QueryAutoStopWordAnalyzerTest#testAddStopWordsIndexReaderInt().mjava","pathOld":"modules/analysis/common/src/test/org/apache/lucene/analysis/query/QueryAutoStopWordAnalyzerTest#testAddStopWordsIndexReaderInt().mjava","sourceNew":"  /*\n    * Test method for 'org.apache.lucene.analysis.QueryAutoStopWordAnalyzer.addStopWords(IndexReader, int)'\n    */\n  public void testAddStopWordsIndexReaderInt() throws Exception {\n    protectedAnalyzer.addStopWords(reader, 1f / 2f);\n\n    TokenStream protectedTokenStream = protectedAnalyzer.reusableTokenStream(\"repetitiveField\", new StringReader(\"boring\"));\n    // A filter on terms in > one half of docs remove boring\n    assertTokenStreamContents(protectedTokenStream, new String[0]);\n\n    protectedTokenStream = protectedAnalyzer.reusableTokenStream(\"repetitiveField\", new StringReader(\"vaguelyboring\"));\n     // A filter on terms in > half of docs should not remove vaguelyBoring\n    assertTokenStreamContents(protectedTokenStream, new String[]{\"vaguelyboring\"});\n\n    protectedAnalyzer.addStopWords(reader, 1f / 4f);\n    protectedTokenStream = protectedAnalyzer.reusableTokenStream(\"repetitiveField\", new StringReader(\"vaguelyboring\"));\n     // A filter on terms in > quarter of docs should remove vaguelyBoring\n    assertTokenStreamContents(protectedTokenStream, new String[0]);\n  }\n\n","sourceOld":"  /*\n    * Test method for 'org.apache.lucene.analysis.QueryAutoStopWordAnalyzer.addStopWords(IndexReader, int)'\n    */\n  public void testAddStopWordsIndexReaderInt() throws Exception {\n    protectedAnalyzer.addStopWords(reader, 1f / 2f);\n    int numHits = search(protectedAnalyzer, \"repetitiveField:boring\");\n    assertEquals(\"A filter on terms in > one half of docs remove boring docs\", 0, numHits);\n\n    numHits = search(protectedAnalyzer, \"repetitiveField:vaguelyboring\");\n    assertTrue(\"A filter on terms in > half of docs should not remove vaguelyBoring docs\", numHits > 1);\n\n    protectedAnalyzer.addStopWords(reader, 1f / 4f);\n    numHits = search(protectedAnalyzer, \"repetitiveField:vaguelyboring\");\n    assertEquals(\"A filter on terms in > quarter of docs should remove vaguelyBoring docs\", 0, numHits);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"193a8346fc41165af561d084bb5f40a62125a878","date":1315971230,"type":5,"author":"Christopher John Male","isMerge":false,"pathNew":"modules/analysis/common/src/test/org/apache/lucene/analysis/query/QueryAutoStopWordAnalyzerTest#testStopwordsAllFieldsMaxPercentDocs().mjava","pathOld":"modules/analysis/common/src/test/org/apache/lucene/analysis/query/QueryAutoStopWordAnalyzerTest#testAddStopWordsIndexReaderInt().mjava","sourceNew":"  public void testStopwordsAllFieldsMaxPercentDocs() throws Exception {\n    protectedAnalyzer = new QueryAutoStopWordAnalyzer(TEST_VERSION_CURRENT, appAnalyzer, reader, 1f / 2f);\n\n    TokenStream protectedTokenStream = protectedAnalyzer.reusableTokenStream(\"repetitiveField\", new StringReader(\"boring\"));\n    // A filter on terms in > one half of docs remove boring\n    assertTokenStreamContents(protectedTokenStream, new String[0]);\n\n    protectedTokenStream = protectedAnalyzer.reusableTokenStream(\"repetitiveField\", new StringReader(\"vaguelyboring\"));\n     // A filter on terms in > half of docs should not remove vaguelyBoring\n    assertTokenStreamContents(protectedTokenStream, new String[]{\"vaguelyboring\"});\n\n    protectedAnalyzer = new QueryAutoStopWordAnalyzer(TEST_VERSION_CURRENT, appAnalyzer, reader, 1f / 4f);\n    protectedTokenStream = protectedAnalyzer.reusableTokenStream(\"repetitiveField\", new StringReader(\"vaguelyboring\"));\n     // A filter on terms in > quarter of docs should remove vaguelyBoring\n    assertTokenStreamContents(protectedTokenStream, new String[0]);\n  }\n\n","sourceOld":"  /*\n    * Test method for 'org.apache.lucene.analysis.QueryAutoStopWordAnalyzer.addStopWords(IndexReader, int)'\n    */\n  public void testAddStopWordsIndexReaderInt() throws Exception {\n    protectedAnalyzer.addStopWords(reader, 1f / 2f);\n\n    TokenStream protectedTokenStream = protectedAnalyzer.reusableTokenStream(\"repetitiveField\", new StringReader(\"boring\"));\n    // A filter on terms in > one half of docs remove boring\n    assertTokenStreamContents(protectedTokenStream, new String[0]);\n\n    protectedTokenStream = protectedAnalyzer.reusableTokenStream(\"repetitiveField\", new StringReader(\"vaguelyboring\"));\n     // A filter on terms in > half of docs should not remove vaguelyBoring\n    assertTokenStreamContents(protectedTokenStream, new String[]{\"vaguelyboring\"});\n\n    protectedAnalyzer.addStopWords(reader, 1f / 4f);\n    protectedTokenStream = protectedAnalyzer.reusableTokenStream(\"repetitiveField\", new StringReader(\"vaguelyboring\"));\n     // A filter on terms in > quarter of docs should remove vaguelyBoring\n    assertTokenStreamContents(protectedTokenStream, new String[0]);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"dfd4d352ddf04b37253ad97ce1aad1448253f0f7":["0f080986da691a3bba7b757f43ab72cdc82b57ce"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"193a8346fc41165af561d084bb5f40a62125a878":["dfd4d352ddf04b37253ad97ce1aad1448253f0f7"],"0f080986da691a3bba7b757f43ab72cdc82b57ce":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"63639dd66fd5bd9b90bc24dd596ae01575f27cc4":["0f080986da691a3bba7b757f43ab72cdc82b57ce","dfd4d352ddf04b37253ad97ce1aad1448253f0f7"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["193a8346fc41165af561d084bb5f40a62125a878"]},"commit2Childs":{"dfd4d352ddf04b37253ad97ce1aad1448253f0f7":["193a8346fc41165af561d084bb5f40a62125a878","63639dd66fd5bd9b90bc24dd596ae01575f27cc4"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["0f080986da691a3bba7b757f43ab72cdc82b57ce"],"193a8346fc41165af561d084bb5f40a62125a878":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"0f080986da691a3bba7b757f43ab72cdc82b57ce":["dfd4d352ddf04b37253ad97ce1aad1448253f0f7","63639dd66fd5bd9b90bc24dd596ae01575f27cc4"],"63639dd66fd5bd9b90bc24dd596ae01575f27cc4":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["63639dd66fd5bd9b90bc24dd596ae01575f27cc4","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}