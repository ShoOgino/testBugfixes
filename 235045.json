{"path":"solr/solrj/src/java/org/apache/solr/client/solrj/io/sql/ResultSetImpl#ResultSetImpl(StatementImpl,SolrStream).mjava","commits":[{"id":"d2af3708aa5f155e8f27905be60c119be0e39be8","date":1454361673,"type":1,"author":"jbernste","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/io/sql/ResultSetImpl#ResultSetImpl(StatementImpl,SolrStream).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/io/sql/ResultSetImpl#ResultSetImpl(StatementImpl).mjava","sourceNew":"  ResultSetImpl(StatementImpl statement, SolrStream solrStream) throws SQLException {\n    this.statement = statement;\n\n    try {\n      this.solrStream = new PushBackStream(solrStream);\n\n      StreamContext context = new StreamContext();\n      context.setSolrClientCache(((ConnectionImpl)this.statement.getConnection()).getSolrClientCache());\n      this.solrStream.setStreamContext(context);\n\n      this.solrStream.open();\n\n      this.metadataTuple = this.solrStream.read();\n\n      Object isMetadata = this.metadataTuple.get(\"isMetadata\");\n      if(isMetadata == null || !isMetadata.equals(true)) {\n        throw new RuntimeException(\"First tuple is not a metadata tuple\");\n      }\n\n      this.firstTuple = this.solrStream.read();\n      this.solrStream.pushBack(firstTuple);\n    } catch (IOException e) {\n      throw new SQLException(\"Couldn't read first tuple\", e);\n    }\n\n    this.resultSetMetaData = new ResultSetMetaDataImpl(this);\n  }\n\n","sourceOld":"  ResultSetImpl(StatementImpl statement) {\n    this.statement = statement;\n    this.solrStream = new PushBackStream(statement.getSolrStream());\n\n    // Read the first tuple so that metadata can be gathered\n    try {\n      this.metadataTuple = this.solrStream.read();\n\n      Object isMetadata = this.metadataTuple.get(\"isMetadata\");\n      if(isMetadata == null || !isMetadata.equals(true)) {\n        throw new RuntimeException(\"First tuple is not a metadata tuple\");\n      }\n\n      this.firstTuple = this.solrStream.read();\n      this.solrStream.pushBack(firstTuple);\n    } catch (IOException e) {\n      throw new RuntimeException(\"Couldn't read first tuple\", e);\n    }\n\n    this.resultSetMetaData = new ResultSetMetaDataImpl(this);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1e6acbaae7af722f17204ceccf0f7db5753eccf3","date":1454775255,"type":0,"author":"Mike McCandless","isMerge":true,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/io/sql/ResultSetImpl#ResultSetImpl(StatementImpl,SolrStream).mjava","pathOld":"/dev/null","sourceNew":"  ResultSetImpl(StatementImpl statement, SolrStream solrStream) throws SQLException {\n    this.statement = statement;\n\n    try {\n      this.solrStream = new PushBackStream(solrStream);\n\n      StreamContext context = new StreamContext();\n      context.setSolrClientCache(((ConnectionImpl)this.statement.getConnection()).getSolrClientCache());\n      this.solrStream.setStreamContext(context);\n\n      this.solrStream.open();\n\n      this.metadataTuple = this.solrStream.read();\n\n      Object isMetadata = this.metadataTuple.get(\"isMetadata\");\n      if(isMetadata == null || !isMetadata.equals(true)) {\n        throw new RuntimeException(\"First tuple is not a metadata tuple\");\n      }\n\n      this.firstTuple = this.solrStream.read();\n      this.solrStream.pushBack(firstTuple);\n    } catch (IOException e) {\n      throw new SQLException(\"Couldn't read first tuple\", e);\n    }\n\n    this.resultSetMetaData = new ResultSetMetaDataImpl(this);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2e7674538df4df2e37f827f2aa46675cb1c7c3e4","date":1457468562,"type":3,"author":"jbernste","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/io/sql/ResultSetImpl#ResultSetImpl(StatementImpl,SolrStream).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/io/sql/ResultSetImpl#ResultSetImpl(StatementImpl,SolrStream).mjava","sourceNew":"  ResultSetImpl(StatementImpl statement, SolrStream solrStream) throws SQLException {\n    this.statement = statement;\n\n    try {\n      this.solrStream = new PushBackStream(solrStream);\n\n      StreamContext context = new StreamContext();\n      context.setSolrClientCache(((ConnectionImpl)this.statement.getConnection()).getSolrClientCache());\n      this.solrStream.setStreamContext(context);\n\n      this.solrStream.open();\n\n      this.metadataTuple = this.solrStream.read();\n\n      Object isMetadata = this.metadataTuple.get(\"isMetadata\");\n      if(isMetadata == null || !isMetadata.equals(true)) {\n        throw new RuntimeException(\"First tuple is not a metadata tuple\");\n      }\n\n      this.firstTuple = this.solrStream.read();\n      this.solrStream.pushBack(firstTuple);\n    } catch (IOException e) {\n      throw new SQLException(e);\n    }\n\n    this.resultSetMetaData = new ResultSetMetaDataImpl(this);\n  }\n\n","sourceOld":"  ResultSetImpl(StatementImpl statement, SolrStream solrStream) throws SQLException {\n    this.statement = statement;\n\n    try {\n      this.solrStream = new PushBackStream(solrStream);\n\n      StreamContext context = new StreamContext();\n      context.setSolrClientCache(((ConnectionImpl)this.statement.getConnection()).getSolrClientCache());\n      this.solrStream.setStreamContext(context);\n\n      this.solrStream.open();\n\n      this.metadataTuple = this.solrStream.read();\n\n      Object isMetadata = this.metadataTuple.get(\"isMetadata\");\n      if(isMetadata == null || !isMetadata.equals(true)) {\n        throw new RuntimeException(\"First tuple is not a metadata tuple\");\n      }\n\n      this.firstTuple = this.solrStream.read();\n      this.solrStream.pushBack(firstTuple);\n    } catch (IOException e) {\n      throw new SQLException(\"Couldn't read first tuple\", e);\n    }\n\n    this.resultSetMetaData = new ResultSetMetaDataImpl(this);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"2e7674538df4df2e37f827f2aa46675cb1c7c3e4":["d2af3708aa5f155e8f27905be60c119be0e39be8"],"d2af3708aa5f155e8f27905be60c119be0e39be8":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"1e6acbaae7af722f17204ceccf0f7db5753eccf3":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","d2af3708aa5f155e8f27905be60c119be0e39be8"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["2e7674538df4df2e37f827f2aa46675cb1c7c3e4"]},"commit2Childs":{"2e7674538df4df2e37f827f2aa46675cb1c7c3e4":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"d2af3708aa5f155e8f27905be60c119be0e39be8":["2e7674538df4df2e37f827f2aa46675cb1c7c3e4","1e6acbaae7af722f17204ceccf0f7db5753eccf3"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["d2af3708aa5f155e8f27905be60c119be0e39be8","1e6acbaae7af722f17204ceccf0f7db5753eccf3"],"1e6acbaae7af722f17204ceccf0f7db5753eccf3":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["1e6acbaae7af722f17204ceccf0f7db5753eccf3","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}