{"path":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriterExceptions#testLegalbutVeryLargePositions().mjava","commits":[{"id":"877cc2c5a8035f48e78b21f0814a79e6607df85d","date":1331901478,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriterExceptions#testLegalbutVeryLargePositions().mjava","pathOld":"/dev/null","sourceNew":"  public void testLegalbutVeryLargePositions() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter iw = new IndexWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT, null));\n    Document doc = new Document();\n    Token t1 = new Token(\"foo\", 0, 3);\n    t1.setPositionIncrement(Integer.MAX_VALUE-500);\n    TokenStream overflowingTokenStream = new CannedTokenStream(\n        new Token[] { t1 }\n    );\n    Field field = new TextField(\"foo\", overflowingTokenStream);\n    doc.add(field);\n    iw.addDocument(doc);\n    iw.close();\n    dir.close();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1860eebb3dff901d87a6c00a35d93e4966155ad1","date":1331907824,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriterExceptions#testLegalbutVeryLargePositions().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriterExceptions#testLegalbutVeryLargePositions().mjava","sourceNew":"  public void testLegalbutVeryLargePositions() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter iw = new IndexWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT, null));\n    Document doc = new Document();\n    Token t1 = new Token(\"foo\", 0, 3);\n    t1.setPositionIncrement(Integer.MAX_VALUE-500);\n    if (random.nextBoolean()) {\n      t1.setPayload(new Payload(new byte[] { 0x1 } ));\n    }\n    TokenStream overflowingTokenStream = new CannedTokenStream(\n        new Token[] { t1 }\n    );\n    Field field = new TextField(\"foo\", overflowingTokenStream);\n    doc.add(field);\n    iw.addDocument(doc);\n    iw.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testLegalbutVeryLargePositions() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter iw = new IndexWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT, null));\n    Document doc = new Document();\n    Token t1 = new Token(\"foo\", 0, 3);\n    t1.setPositionIncrement(Integer.MAX_VALUE-500);\n    TokenStream overflowingTokenStream = new CannedTokenStream(\n        new Token[] { t1 }\n    );\n    Field field = new TextField(\"foo\", overflowingTokenStream);\n    doc.add(field);\n    iw.addDocument(doc);\n    iw.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"629c38c4ae4e303d0617e05fbfe508140b32f0a3","date":1334500904,"type":3,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriterExceptions#testLegalbutVeryLargePositions().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriterExceptions#testLegalbutVeryLargePositions().mjava","sourceNew":"  public void testLegalbutVeryLargePositions() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter iw = new IndexWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT, null));\n    Document doc = new Document();\n    Token t1 = new Token(\"foo\", 0, 3);\n    t1.setPositionIncrement(Integer.MAX_VALUE-500);\n    if (random().nextBoolean()) {\n      t1.setPayload(new Payload(new byte[] { 0x1 } ));\n    }\n    TokenStream overflowingTokenStream = new CannedTokenStream(\n        new Token[] { t1 }\n    );\n    Field field = new TextField(\"foo\", overflowingTokenStream);\n    doc.add(field);\n    iw.addDocument(doc);\n    iw.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testLegalbutVeryLargePositions() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter iw = new IndexWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT, null));\n    Document doc = new Document();\n    Token t1 = new Token(\"foo\", 0, 3);\n    t1.setPositionIncrement(Integer.MAX_VALUE-500);\n    if (random.nextBoolean()) {\n      t1.setPayload(new Payload(new byte[] { 0x1 } ));\n    }\n    TokenStream overflowingTokenStream = new CannedTokenStream(\n        new Token[] { t1 }\n    );\n    Field field = new TextField(\"foo\", overflowingTokenStream);\n    doc.add(field);\n    iw.addDocument(doc);\n    iw.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"76fa9933adb0556e752e8af9734c4d0ae14622ff","date":1339178321,"type":3,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriterExceptions#testLegalbutVeryLargePositions().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriterExceptions#testLegalbutVeryLargePositions().mjava","sourceNew":"  public void testLegalbutVeryLargePositions() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter iw = new IndexWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT, null));\n    Document doc = new Document();\n    Token t1 = new Token(\"foo\", 0, 3);\n    t1.setPositionIncrement(Integer.MAX_VALUE-500);\n    if (random().nextBoolean()) {\n      t1.setPayload(new BytesRef(new byte[] { 0x1 } ));\n    }\n    TokenStream overflowingTokenStream = new CannedTokenStream(\n        new Token[] { t1 }\n    );\n    Field field = new TextField(\"foo\", overflowingTokenStream);\n    doc.add(field);\n    iw.addDocument(doc);\n    iw.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testLegalbutVeryLargePositions() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter iw = new IndexWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT, null));\n    Document doc = new Document();\n    Token t1 = new Token(\"foo\", 0, 3);\n    t1.setPositionIncrement(Integer.MAX_VALUE-500);\n    if (random().nextBoolean()) {\n      t1.setPayload(new Payload(new byte[] { 0x1 } ));\n    }\n    TokenStream overflowingTokenStream = new CannedTokenStream(\n        new Token[] { t1 }\n    );\n    Field field = new TextField(\"foo\", overflowingTokenStream);\n    doc.add(field);\n    iw.addDocument(doc);\n    iw.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ae14298f4eec6d5faee6a149f88ba57d14a6f21a","date":1396971290,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriterExceptions#testLegalbutVeryLargePositions().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriterExceptions#testLegalbutVeryLargePositions().mjava","sourceNew":"  public void testLegalbutVeryLargePositions() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter iw = new IndexWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT, null));\n    Document doc = new Document();\n    Token t1 = new Token(\"foo\", 0, 3);\n    t1.setPositionIncrement(Integer.MAX_VALUE-500);\n    if (random().nextBoolean()) {\n      t1.setPayload(new BytesRef(new byte[] { 0x1 } ));\n    }\n    TokenStream overflowingTokenStream = new CannedTokenStream(\n        new Token[] { t1 }\n    );\n    Field field = new TextField(\"foo\", overflowingTokenStream);\n    doc.add(field);\n    iw.addDocument(doc);\n    iw.shutdown();\n    dir.close();\n  }\n\n","sourceOld":"  public void testLegalbutVeryLargePositions() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter iw = new IndexWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT, null));\n    Document doc = new Document();\n    Token t1 = new Token(\"foo\", 0, 3);\n    t1.setPositionIncrement(Integer.MAX_VALUE-500);\n    if (random().nextBoolean()) {\n      t1.setPayload(new BytesRef(new byte[] { 0x1 } ));\n    }\n    TokenStream overflowingTokenStream = new CannedTokenStream(\n        new Token[] { t1 }\n    );\n    Field field = new TextField(\"foo\", overflowingTokenStream);\n    doc.add(field);\n    iw.addDocument(doc);\n    iw.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"54a6bea0b991120a99ad0e2f72ae853fd5ecae0e","date":1406737224,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriterExceptions#testLegalbutVeryLargePositions().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriterExceptions#testLegalbutVeryLargePositions().mjava","sourceNew":"  public void testLegalbutVeryLargePositions() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter iw = new IndexWriter(dir, newIndexWriterConfig(null));\n    Document doc = new Document();\n    Token t1 = new Token(\"foo\", 0, 3);\n    t1.setPositionIncrement(Integer.MAX_VALUE-500);\n    if (random().nextBoolean()) {\n      t1.setPayload(new BytesRef(new byte[] { 0x1 } ));\n    }\n    TokenStream overflowingTokenStream = new CannedTokenStream(\n        new Token[] { t1 }\n    );\n    Field field = new TextField(\"foo\", overflowingTokenStream);\n    doc.add(field);\n    iw.addDocument(doc);\n    iw.shutdown();\n    dir.close();\n  }\n\n","sourceOld":"  public void testLegalbutVeryLargePositions() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter iw = new IndexWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT, null));\n    Document doc = new Document();\n    Token t1 = new Token(\"foo\", 0, 3);\n    t1.setPositionIncrement(Integer.MAX_VALUE-500);\n    if (random().nextBoolean()) {\n      t1.setPayload(new BytesRef(new byte[] { 0x1 } ));\n    }\n    TokenStream overflowingTokenStream = new CannedTokenStream(\n        new Token[] { t1 }\n    );\n    Field field = new TextField(\"foo\", overflowingTokenStream);\n    doc.add(field);\n    iw.addDocument(doc);\n    iw.shutdown();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d0ef034a4f10871667ae75181537775ddcf8ade4","date":1407610475,"type":3,"author":"Ryan Ernst","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriterExceptions#testLegalbutVeryLargePositions().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriterExceptions#testLegalbutVeryLargePositions().mjava","sourceNew":"  public void testLegalbutVeryLargePositions() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter iw = new IndexWriter(dir, newIndexWriterConfig(null));\n    Document doc = new Document();\n    Token t1 = new Token(\"foo\", 0, 3);\n    t1.setPositionIncrement(Integer.MAX_VALUE-500);\n    if (random().nextBoolean()) {\n      t1.setPayload(new BytesRef(new byte[] { 0x1 } ));\n    }\n    TokenStream overflowingTokenStream = new CannedTokenStream(\n        new Token[] { t1 }\n    );\n    Field field = new TextField(\"foo\", overflowingTokenStream);\n    doc.add(field);\n    iw.addDocument(doc);\n    iw.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testLegalbutVeryLargePositions() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter iw = new IndexWriter(dir, newIndexWriterConfig(null));\n    Document doc = new Document();\n    Token t1 = new Token(\"foo\", 0, 3);\n    t1.setPositionIncrement(Integer.MAX_VALUE-500);\n    if (random().nextBoolean()) {\n      t1.setPayload(new BytesRef(new byte[] { 0x1 } ));\n    }\n    TokenStream overflowingTokenStream = new CannedTokenStream(\n        new Token[] { t1 }\n    );\n    Field field = new TextField(\"foo\", overflowingTokenStream);\n    doc.add(field);\n    iw.addDocument(doc);\n    iw.shutdown();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"35fb92999b9df7df2ce2b35b83a044cbede61f45","date":1429037650,"type":5,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestMaxPosition#testTooBigPosition().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriterExceptions#testLegalbutVeryLargePositions().mjava","sourceNew":"  public void testTooBigPosition() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter iw = new IndexWriter(dir, newIndexWriterConfig(null));\n    Document doc = new Document();\n    // This is at position 1:\n    Token t1 = new Token(\"foo\", 0, 3);\n    t1.setPositionIncrement(2);\n    if (random().nextBoolean()) {\n      t1.setPayload(new BytesRef(new byte[] { 0x1 } ));\n    }\n    Token t2 = new Token(\"foo\", 4, 7);\n    // This should overflow max:\n    t2.setPositionIncrement(IndexWriter.MAX_POSITION);\n    if (random().nextBoolean()) {\n      t2.setPayload(new BytesRef(new byte[] { 0x1 } ));\n    }\n    doc.add(new TextField(\"foo\", new CannedTokenStream(new Token[] {t1, t2})));\n    try {\n      iw.addDocument(doc);\n      fail(\"did not hit exception\");\n    } catch (IllegalArgumentException iae) {\n      // expected\n    }\n\n    // Document should not be visible:\n    IndexReader r = DirectoryReader.open(iw, true);\n    assertEquals(0, r.numDocs());\n    r.close();\n\n    iw.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testLegalbutVeryLargePositions() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter iw = new IndexWriter(dir, newIndexWriterConfig(null));\n    Document doc = new Document();\n    Token t1 = new Token(\"foo\", 0, 3);\n    t1.setPositionIncrement(Integer.MAX_VALUE-500);\n    if (random().nextBoolean()) {\n      t1.setPayload(new BytesRef(new byte[] { 0x1 } ));\n    }\n    TokenStream overflowingTokenStream = new CannedTokenStream(\n        new Token[] { t1 }\n    );\n    Field field = new TextField(\"foo\", overflowingTokenStream);\n    doc.add(field);\n    iw.addDocument(doc);\n    iw.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":["05fe562aa248790944d43cdd478f512572835ba0"],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"877cc2c5a8035f48e78b21f0814a79e6607df85d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"54a6bea0b991120a99ad0e2f72ae853fd5ecae0e":["ae14298f4eec6d5faee6a149f88ba57d14a6f21a"],"35fb92999b9df7df2ce2b35b83a044cbede61f45":["d0ef034a4f10871667ae75181537775ddcf8ade4"],"1860eebb3dff901d87a6c00a35d93e4966155ad1":["877cc2c5a8035f48e78b21f0814a79e6607df85d"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"d0ef034a4f10871667ae75181537775ddcf8ade4":["54a6bea0b991120a99ad0e2f72ae853fd5ecae0e"],"ae14298f4eec6d5faee6a149f88ba57d14a6f21a":["76fa9933adb0556e752e8af9734c4d0ae14622ff"],"76fa9933adb0556e752e8af9734c4d0ae14622ff":["629c38c4ae4e303d0617e05fbfe508140b32f0a3"],"629c38c4ae4e303d0617e05fbfe508140b32f0a3":["1860eebb3dff901d87a6c00a35d93e4966155ad1"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["35fb92999b9df7df2ce2b35b83a044cbede61f45"]},"commit2Childs":{"877cc2c5a8035f48e78b21f0814a79e6607df85d":["1860eebb3dff901d87a6c00a35d93e4966155ad1"],"54a6bea0b991120a99ad0e2f72ae853fd5ecae0e":["d0ef034a4f10871667ae75181537775ddcf8ade4"],"35fb92999b9df7df2ce2b35b83a044cbede61f45":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"1860eebb3dff901d87a6c00a35d93e4966155ad1":["629c38c4ae4e303d0617e05fbfe508140b32f0a3"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["877cc2c5a8035f48e78b21f0814a79e6607df85d"],"d0ef034a4f10871667ae75181537775ddcf8ade4":["35fb92999b9df7df2ce2b35b83a044cbede61f45"],"ae14298f4eec6d5faee6a149f88ba57d14a6f21a":["54a6bea0b991120a99ad0e2f72ae853fd5ecae0e"],"76fa9933adb0556e752e8af9734c4d0ae14622ff":["ae14298f4eec6d5faee6a149f88ba57d14a6f21a"],"629c38c4ae4e303d0617e05fbfe508140b32f0a3":["76fa9933adb0556e752e8af9734c4d0ae14622ff"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}