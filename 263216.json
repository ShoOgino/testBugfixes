{"path":"solr/core/src/test/org/apache/solr/cloud/CollectionsAPIDistributedZkTest#grabNewReplica(CollectionAdminResponse,DocCollection).mjava","commits":[{"id":"9f100e4a037a938ee4b027674f1ca80fc208badf","date":1500526196,"type":0,"author":"Cao Manh Dat","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/CollectionsAPIDistributedZkTest#grabNewReplica(CollectionAdminResponse,DocCollection).mjava","pathOld":"/dev/null","sourceNew":"  private Replica grabNewReplica(CollectionAdminResponse response, DocCollection docCollection) {\n    String replicaName = response.getCollectionCoresStatus().keySet().iterator().next();\n    Optional<Replica> optional = docCollection.getReplicas().stream()\n        .filter(replica -> replicaName.equals(replica.getCoreName()))\n        .findAny();\n    if (optional.isPresent()) {\n      return optional.get();\n    }\n    throw new AssertionError(\"Can not find \" + replicaName + \" from \" + docCollection);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"936cdd5882761db3b844afd6f84ab81cbb011a75","date":1500973524,"type":0,"author":"Cao Manh Dat","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/cloud/CollectionsAPIDistributedZkTest#grabNewReplica(CollectionAdminResponse,DocCollection).mjava","pathOld":"/dev/null","sourceNew":"  private Replica grabNewReplica(CollectionAdminResponse response, DocCollection docCollection) {\n    String replicaName = response.getCollectionCoresStatus().keySet().iterator().next();\n    Optional<Replica> optional = docCollection.getReplicas().stream()\n        .filter(replica -> replicaName.equals(replica.getCoreName()))\n        .findAny();\n    if (optional.isPresent()) {\n      return optional.get();\n    }\n    throw new AssertionError(\"Can not find \" + replicaName + \" from \" + docCollection);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6146c07c0dee1ae1e42926167acd127fed5ef59d","date":1516129420,"type":5,"author":"Varun Thacker","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/api/collections/CollectionsAPIDistributedZkTest#grabNewReplica(CollectionAdminResponse,DocCollection).mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/CollectionsAPIDistributedZkTest#grabNewReplica(CollectionAdminResponse,DocCollection).mjava","sourceNew":"  private Replica grabNewReplica(CollectionAdminResponse response, DocCollection docCollection) {\n    String replicaName = response.getCollectionCoresStatus().keySet().iterator().next();\n    Optional<Replica> optional = docCollection.getReplicas().stream()\n        .filter(replica -> replicaName.equals(replica.getCoreName()))\n        .findAny();\n    if (optional.isPresent()) {\n      return optional.get();\n    }\n    throw new AssertionError(\"Can not find \" + replicaName + \" from \" + docCollection);\n  }\n\n","sourceOld":"  private Replica grabNewReplica(CollectionAdminResponse response, DocCollection docCollection) {\n    String replicaName = response.getCollectionCoresStatus().keySet().iterator().next();\n    Optional<Replica> optional = docCollection.getReplicas().stream()\n        .filter(replica -> replicaName.equals(replica.getCoreName()))\n        .findAny();\n    if (optional.isPresent()) {\n      return optional.get();\n    }\n    throw new AssertionError(\"Can not find \" + replicaName + \" from \" + docCollection);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b94236357aaa22b76c10629851fe4e376e0cea82","date":1516710914,"type":5,"author":"Karl Wright","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/cloud/api/collections/CollectionsAPIDistributedZkTest#grabNewReplica(CollectionAdminResponse,DocCollection).mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/CollectionsAPIDistributedZkTest#grabNewReplica(CollectionAdminResponse,DocCollection).mjava","sourceNew":"  private Replica grabNewReplica(CollectionAdminResponse response, DocCollection docCollection) {\n    String replicaName = response.getCollectionCoresStatus().keySet().iterator().next();\n    Optional<Replica> optional = docCollection.getReplicas().stream()\n        .filter(replica -> replicaName.equals(replica.getCoreName()))\n        .findAny();\n    if (optional.isPresent()) {\n      return optional.get();\n    }\n    throw new AssertionError(\"Can not find \" + replicaName + \" from \" + docCollection);\n  }\n\n","sourceOld":"  private Replica grabNewReplica(CollectionAdminResponse response, DocCollection docCollection) {\n    String replicaName = response.getCollectionCoresStatus().keySet().iterator().next();\n    Optional<Replica> optional = docCollection.getReplicas().stream()\n        .filter(replica -> replicaName.equals(replica.getCoreName()))\n        .findAny();\n    if (optional.isPresent()) {\n      return optional.get();\n    }\n    throw new AssertionError(\"Can not find \" + replicaName + \" from \" + docCollection);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b94236357aaa22b76c10629851fe4e376e0cea82":["9f100e4a037a938ee4b027674f1ca80fc208badf","6146c07c0dee1ae1e42926167acd127fed5ef59d"],"9f100e4a037a938ee4b027674f1ca80fc208badf":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"936cdd5882761db3b844afd6f84ab81cbb011a75":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","9f100e4a037a938ee4b027674f1ca80fc208badf"],"6146c07c0dee1ae1e42926167acd127fed5ef59d":["9f100e4a037a938ee4b027674f1ca80fc208badf"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b94236357aaa22b76c10629851fe4e376e0cea82"]},"commit2Childs":{"b94236357aaa22b76c10629851fe4e376e0cea82":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"9f100e4a037a938ee4b027674f1ca80fc208badf":["b94236357aaa22b76c10629851fe4e376e0cea82","936cdd5882761db3b844afd6f84ab81cbb011a75","6146c07c0dee1ae1e42926167acd127fed5ef59d"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9f100e4a037a938ee4b027674f1ca80fc208badf","936cdd5882761db3b844afd6f84ab81cbb011a75"],"936cdd5882761db3b844afd6f84ab81cbb011a75":[],"6146c07c0dee1ae1e42926167acd127fed5ef59d":["b94236357aaa22b76c10629851fe4e376e0cea82"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["936cdd5882761db3b844afd6f84ab81cbb011a75","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}