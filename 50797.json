{"path":"lucene/core/src/java/org/apache/lucene/codecs/lucene410/Lucene410DocValuesProducer#getOrdIndexInstance(IndexInput,FieldInfo,NumericEntry).mjava","commits":[{"id":"0ce5e7f280a7b3f0f96f2623d9f0ce70f742b793","date":1408030244,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/lucene410/Lucene410DocValuesProducer#getOrdIndexInstance(IndexInput,FieldInfo,NumericEntry).mjava","pathOld":"/dev/null","sourceNew":"  /** returns an address instance for sortedset ordinal lists */\n  private MonotonicBlockPackedReader getOrdIndexInstance(IndexInput data, FieldInfo field, NumericEntry entry) throws IOException {\n    final MonotonicBlockPackedReader ordIndex;\n    synchronized (ordIndexInstances) {\n      MonotonicBlockPackedReader ordIndexInstance = ordIndexInstances.get(field.number);\n      if (ordIndexInstance == null) {\n        data.seek(entry.offset);\n        ordIndexInstance = MonotonicBlockPackedReader.of(data, entry.packedIntsVersion, entry.blockSize, entry.count+1, false);\n        ordIndexInstances.put(field.number, ordIndexInstance);\n        ramBytesUsed.addAndGet(ordIndexInstance.ramBytesUsed() + RamUsageEstimator.NUM_BYTES_INT);\n      }\n      ordIndex = ordIndexInstance;\n    }\n    return ordIndex;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b873e6a2036c1deda886d1fcf6ba42c995dd15a0","date":1408410832,"type":4,"author":"Robert Muir","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/lucene410/Lucene410DocValuesProducer#getOrdIndexInstance(IndexInput,FieldInfo,NumericEntry).mjava","sourceNew":null,"sourceOld":"  /** returns an address instance for sortedset ordinal lists */\n  private MonotonicBlockPackedReader getOrdIndexInstance(IndexInput data, FieldInfo field, NumericEntry entry) throws IOException {\n    final MonotonicBlockPackedReader ordIndex;\n    synchronized (ordIndexInstances) {\n      MonotonicBlockPackedReader ordIndexInstance = ordIndexInstances.get(field.number);\n      if (ordIndexInstance == null) {\n        data.seek(entry.offset);\n        ordIndexInstance = MonotonicBlockPackedReader.of(data, entry.packedIntsVersion, entry.blockSize, entry.count+1, false);\n        ordIndexInstances.put(field.number, ordIndexInstance);\n        ramBytesUsed.addAndGet(ordIndexInstance.ramBytesUsed() + RamUsageEstimator.NUM_BYTES_INT);\n      }\n      ordIndex = ordIndexInstance;\n    }\n    return ordIndex;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b873e6a2036c1deda886d1fcf6ba42c995dd15a0":["0ce5e7f280a7b3f0f96f2623d9f0ce70f742b793"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"0ce5e7f280a7b3f0f96f2623d9f0ce70f742b793":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b873e6a2036c1deda886d1fcf6ba42c995dd15a0"]},"commit2Childs":{"b873e6a2036c1deda886d1fcf6ba42c995dd15a0":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["0ce5e7f280a7b3f0f96f2623d9f0ce70f742b793"],"0ce5e7f280a7b3f0f96f2623d9f0ce70f742b793":["b873e6a2036c1deda886d1fcf6ba42c995dd15a0"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}