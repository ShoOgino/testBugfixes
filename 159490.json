{"path":"lucene/src/java/org/apache/lucene/search/NumericRangeQuery.NumericRangeTermsEnum#accept(BytesRef).mjava","commits":[{"id":"955c32f886db6f6356c9fcdea6b1f1cb4effda24","date":1270581567,"type":0,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/search/NumericRangeQuery.NumericRangeTermsEnum#accept(BytesRef).mjava","pathOld":"/dev/null","sourceNew":"    @Override\n    protected AcceptStatus accept(BytesRef term) {\n      return (currentUpperBound != null && termComp.compare(term, currentUpperBound) <= 0) ?\n        AcceptStatus.YES : AcceptStatus.NO_AND_SEEK;\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"449aa3166f747982f507c48782901cde8693b608","date":1285560445,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/search/NumericRangeQuery.NumericRangeTermsEnum#accept(BytesRef).mjava","pathOld":"lucene/src/java/org/apache/lucene/search/NumericRangeQuery.NumericRangeTermsEnum#accept(BytesRef).mjava","sourceNew":"    @Override\n    protected final AcceptStatus accept(BytesRef term) {\n      while (currentUpperBound == null || termComp.compare(term, currentUpperBound) > 0) {\n        if (rangeBounds.isEmpty())\n          return AcceptStatus.END;\n        // peek next sub-range, only seek if the current term is smaller than next lower bound\n        if (termComp.compare(term, rangeBounds.getFirst()) < 0)\n          return AcceptStatus.NO_AND_SEEK;\n        // step forward to next range without seeking, as next lower range bound is less or equal current term\n        nextRange();\n      }\n      return AcceptStatus.YES;\n    }\n\n","sourceOld":"    @Override\n    protected AcceptStatus accept(BytesRef term) {\n      return (currentUpperBound != null && termComp.compare(term, currentUpperBound) <= 0) ?\n        AcceptStatus.YES : AcceptStatus.NO_AND_SEEK;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","date":1292920096,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/search/NumericRangeQuery.NumericRangeTermsEnum#accept(BytesRef).mjava","pathOld":"lucene/src/java/org/apache/lucene/search/NumericRangeQuery.NumericRangeTermsEnum#accept(BytesRef).mjava","sourceNew":"    @Override\n    protected final AcceptStatus accept(BytesRef term) {\n      while (currentUpperBound == null || termComp.compare(term, currentUpperBound) > 0) {\n        if (rangeBounds.isEmpty())\n          return AcceptStatus.END;\n        // peek next sub-range, only seek if the current term is smaller than next lower bound\n        if (termComp.compare(term, rangeBounds.getFirst()) < 0)\n          return AcceptStatus.NO_AND_SEEK;\n        // step forward to next range without seeking, as next lower range bound is less or equal current term\n        nextRange();\n      }\n      return AcceptStatus.YES;\n    }\n\n","sourceOld":"    @Override\n    protected AcceptStatus accept(BytesRef term) {\n      return (currentUpperBound != null && termComp.compare(term, currentUpperBound) <= 0) ?\n        AcceptStatus.YES : AcceptStatus.NO_AND_SEEK;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":5,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/NumericRangeQuery.NumericRangeTermsEnum#accept(BytesRef).mjava","pathOld":"lucene/src/java/org/apache/lucene/search/NumericRangeQuery.NumericRangeTermsEnum#accept(BytesRef).mjava","sourceNew":"    @Override\n    protected final AcceptStatus accept(BytesRef term) {\n      while (currentUpperBound == null || termComp.compare(term, currentUpperBound) > 0) {\n        if (rangeBounds.isEmpty())\n          return AcceptStatus.END;\n        // peek next sub-range, only seek if the current term is smaller than next lower bound\n        if (termComp.compare(term, rangeBounds.getFirst()) < 0)\n          return AcceptStatus.NO_AND_SEEK;\n        // step forward to next range without seeking, as next lower range bound is less or equal current term\n        nextRange();\n      }\n      return AcceptStatus.YES;\n    }\n\n","sourceOld":"    @Override\n    protected final AcceptStatus accept(BytesRef term) {\n      while (currentUpperBound == null || termComp.compare(term, currentUpperBound) > 0) {\n        if (rangeBounds.isEmpty())\n          return AcceptStatus.END;\n        // peek next sub-range, only seek if the current term is smaller than next lower bound\n        if (termComp.compare(term, rangeBounds.getFirst()) < 0)\n          return AcceptStatus.NO_AND_SEEK;\n        // step forward to next range without seeking, as next lower range bound is less or equal current term\n        nextRange();\n      }\n      return AcceptStatus.YES;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"449aa3166f747982f507c48782901cde8693b608":["955c32f886db6f6356c9fcdea6b1f1cb4effda24"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["449aa3166f747982f507c48782901cde8693b608"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"955c32f886db6f6356c9fcdea6b1f1cb4effda24":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["955c32f886db6f6356c9fcdea6b1f1cb4effda24","449aa3166f747982f507c48782901cde8693b608"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"]},"commit2Childs":{"449aa3166f747982f507c48782901cde8693b608":["3a119bbc8703c10faa329ec201c654b3a35a1e3e","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["955c32f886db6f6356c9fcdea6b1f1cb4effda24"],"955c32f886db6f6356c9fcdea6b1f1cb4effda24":["449aa3166f747982f507c48782901cde8693b608","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}