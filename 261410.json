{"path":"solr/core/src/test/org/apache/solr/search/facet/TestCloudJSONFacetSKGEquiv.TermFacet#randomAllBucketsParam(Random,String).mjava","commits":[{"id":"22d2c45da6e47ff0ada29a8f98566b76f0b278de","date":1591372739,"type":1,"author":"Chris Hostetter","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/search/facet/TestCloudJSONFacetSKGEquiv.TermFacet#randomAllBucketsParam(Random,String).mjava","pathOld":"solr/core/src/test/org/apache/solr/search/facet/TestCloudJSONFacetSKGEquiv.TermFacet#randomAllBucketsParam(Random).mjava","sourceNew":"    /**\n     * picks a random value for the \"allBuckets\" param, biased in favor of interesting test cases\n     * This bucket should be ignored by relatedness, but inclusion should not cause any problems \n     * (or change the results)\n     *\n     * <p>\n     * <b>NOTE:</b> allBuckets is meaningless in conjunction with the <code>STREAM</code> processor, so\n     * this method always returns null if sort is <code>index asc</code>.\n     * </p>\n     *\n     * @return a Boolean, may be null\n     * @see <a href=\"https://issues.apache.org/jira/browse/SOLR-14514\">SOLR-14514: allBuckets ignored by method:stream</a>\n     */\n    public static Boolean randomAllBucketsParam(final Random r, final String sort) {\n\n      if (\"index asc\".equals(sort)) {\n        return null;\n      }\n      \n      switch(r.nextInt(4)) {\n        case 0: return true;\n        case 1: return false;\n        case 2: \n        case 3: return null;\n        default: throw new RuntimeException(\"Broken case statement\");\n      }\n    }\n\n","sourceOld":"    /**\n     * picks a random value for the \"allBuckets\" param, biased in favor of interesting test cases\n     *\n     * @return a Boolean, may be null\n     * @see #testBespokeAllBuckets\n     */\n    public static Boolean randomAllBucketsParam(final Random r) {\n\n      switch(r.nextInt(4)) {\n        case 0: return true;\n        case 1: return false;\n        case 2: \n        case 3: return null;\n        default: throw new RuntimeException(\"Broken case statement\");\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"22d2c45da6e47ff0ada29a8f98566b76f0b278de":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["22d2c45da6e47ff0ada29a8f98566b76f0b278de"]},"commit2Childs":{"22d2c45da6e47ff0ada29a8f98566b76f0b278de":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["22d2c45da6e47ff0ada29a8f98566b76f0b278de"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}