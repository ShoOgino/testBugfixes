{"path":"lucene/src/test/org/apache/lucene/util/LuceneTestCase#swapCodec(Codec).mjava","commits":[{"id":"43b04c27924fe393e38e9f0986e32c634f261859","date":1284399440,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/util/LuceneTestCase#swapCodec(Codec).mjava","pathOld":"lucene/src/test/org/apache/lucene/util/LuceneTestCaseJ4#swapCodec(Codec).mjava","sourceNew":"  private static void swapCodec(Codec c) {\n    final CodecProvider cp = CodecProvider.getDefault();\n    Codec prior = null;\n    try {\n      prior = cp.lookup(c.name);\n    } catch (IllegalArgumentException iae) {\n    }\n    if (prior != null) {\n      cp.unregister(prior);\n    }\n    cp.register(c);\n  }\n\n","sourceOld":"  private static void swapCodec(Codec c) {\n    final CodecProvider cp = CodecProvider.getDefault();\n    Codec prior = null;\n    try {\n      prior = cp.lookup(c.name);\n    } catch (IllegalArgumentException iae) {\n    }\n    if (prior != null) {\n      cp.unregister(prior);\n    }\n    cp.register(c);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"182cfc5b92d5da17fd74fc41c8091ed157d80ff4","date":1290263949,"type":5,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/util/LuceneTestCase#swapCodec(Codec,CodecProvider).mjava","pathOld":"lucene/src/test/org/apache/lucene/util/LuceneTestCase#swapCodec(Codec).mjava","sourceNew":"  private static void swapCodec(Codec c, CodecProvider cp) {\n    Codec prior = null;\n    try {\n      prior = cp.lookup(c.name);\n    } catch (IllegalArgumentException iae) {\n    }\n    if (prior != null) {\n      cp.unregister(prior);\n    }\n    cp.register(c);\n  }\n\n","sourceOld":"  private static void swapCodec(Codec c) {\n    final CodecProvider cp = CodecProvider.getDefault();\n    Codec prior = null;\n    try {\n      prior = cp.lookup(c.name);\n    } catch (IllegalArgumentException iae) {\n    }\n    if (prior != null) {\n      cp.unregister(prior);\n    }\n    cp.register(c);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3bb13258feba31ab676502787ab2e1779f129b7a","date":1291596436,"type":4,"author":"Simon Willnauer","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/src/test/org/apache/lucene/util/LuceneTestCase#swapCodec(Codec).mjava","sourceNew":null,"sourceOld":"  private static void swapCodec(Codec c) {\n    final CodecProvider cp = CodecProvider.getDefault();\n    Codec prior = null;\n    try {\n      prior = cp.lookup(c.name);\n    } catch (IllegalArgumentException iae) {\n    }\n    if (prior != null) {\n      cp.unregister(prior);\n    }\n    cp.register(c);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"182cfc5b92d5da17fd74fc41c8091ed157d80ff4":["43b04c27924fe393e38e9f0986e32c634f261859"],"43b04c27924fe393e38e9f0986e32c634f261859":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"3bb13258feba31ab676502787ab2e1779f129b7a":["43b04c27924fe393e38e9f0986e32c634f261859","182cfc5b92d5da17fd74fc41c8091ed157d80ff4"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["182cfc5b92d5da17fd74fc41c8091ed157d80ff4"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["43b04c27924fe393e38e9f0986e32c634f261859"],"182cfc5b92d5da17fd74fc41c8091ed157d80ff4":["3bb13258feba31ab676502787ab2e1779f129b7a","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"43b04c27924fe393e38e9f0986e32c634f261859":["182cfc5b92d5da17fd74fc41c8091ed157d80ff4","3bb13258feba31ab676502787ab2e1779f129b7a"],"3bb13258feba31ab676502787ab2e1779f129b7a":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["3bb13258feba31ab676502787ab2e1779f129b7a","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}