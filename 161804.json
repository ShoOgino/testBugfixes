{"path":"lucene/core/src/java/org/apache/lucene/search/similarities/DFISimilarity#score(BasicStats,float,float).mjava","commits":[{"id":"a836deab3a09546740b8ee2f1f776e83062f39e7","date":1453109062,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/similarities/DFISimilarity#score(BasicStats,float,float).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  protected float score(BasicStats stats, float freq, float docLen) {\n\n    final float expected = (stats.getTotalTermFreq() + 1) * docLen / (stats.getNumberOfFieldTokens() + 1);\n\n    // if the observed frequency is less than or equal to the expected value, then return zero.\n    if (freq <= expected) return 0;\n\n    final float chiSquare = (freq - expected) * (freq - expected) / expected;\n\n    return stats.getBoost() * (float) log2(chiSquare + 1);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7dd5c7feba82d3857622c10a26e9391ffcebe04a","date":1453469412,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/similarities/DFISimilarity#score(BasicStats,float,float).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/similarities/DFISimilarity#score(BasicStats,float,float).mjava","sourceNew":"  @Override\n  protected float score(BasicStats stats, float freq, float docLen) {\n\n    final float expected = (stats.getTotalTermFreq() + 1) * docLen / (stats.getNumberOfFieldTokens() + 1);\n\n    // if the observed frequency is less than or equal to the expected value, then return zero.\n    if (freq <= expected) return 0;\n\n    final float measure = independence.score(freq, expected);\n\n    return stats.getBoost() * (float) log2(measure + 1);\n  }\n\n","sourceOld":"  @Override\n  protected float score(BasicStats stats, float freq, float docLen) {\n\n    final float expected = (stats.getTotalTermFreq() + 1) * docLen / (stats.getNumberOfFieldTokens() + 1);\n\n    // if the observed frequency is less than or equal to the expected value, then return zero.\n    if (freq <= expected) return 0;\n\n    final float chiSquare = (freq - expected) * (freq - expected) / expected;\n\n    return stats.getBoost() * (float) log2(chiSquare + 1);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ad1dc49b5314cfdb82a7ea40d2f92f07fe8cee46","date":1508899684,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/similarities/DFISimilarity#score(BasicStats,double,double).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/similarities/DFISimilarity#score(BasicStats,float,float).mjava","sourceNew":"  @Override\n  protected double score(BasicStats stats, double freq, double docLen) {\n\n    final double expected = (stats.getTotalTermFreq() + 1) * docLen / (stats.getNumberOfFieldTokens() + 1);\n\n    // if the observed frequency is less than or equal to the expected value, then return zero.\n    if (freq <= expected) return 0;\n\n    final double measure = independence.score(freq, expected);\n\n    return stats.getBoost() * log2(measure + 1);\n  }\n\n","sourceOld":"  @Override\n  protected float score(BasicStats stats, float freq, float docLen) {\n\n    final float expected = (stats.getTotalTermFreq() + 1) * docLen / (stats.getNumberOfFieldTokens() + 1);\n\n    // if the observed frequency is less than or equal to the expected value, then return zero.\n    if (freq <= expected) return 0;\n\n    final float measure = independence.score(freq, expected);\n\n    return stats.getBoost() * (float) log2(measure + 1);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"7dd5c7feba82d3857622c10a26e9391ffcebe04a":["a836deab3a09546740b8ee2f1f776e83062f39e7"],"ad1dc49b5314cfdb82a7ea40d2f92f07fe8cee46":["7dd5c7feba82d3857622c10a26e9391ffcebe04a"],"a836deab3a09546740b8ee2f1f776e83062f39e7":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["ad1dc49b5314cfdb82a7ea40d2f92f07fe8cee46"]},"commit2Childs":{"7dd5c7feba82d3857622c10a26e9391ffcebe04a":["ad1dc49b5314cfdb82a7ea40d2f92f07fe8cee46"],"ad1dc49b5314cfdb82a7ea40d2f92f07fe8cee46":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a836deab3a09546740b8ee2f1f776e83062f39e7":["7dd5c7feba82d3857622c10a26e9391ffcebe04a"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["a836deab3a09546740b8ee2f1f776e83062f39e7"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}