{"path":"src/java/org/apache/lucene/index/FieldsWriter#flushDocument(RAMOutputStream).mjava","commits":[{"id":"4350b17bd363cd13a95171b8df1ca62ea4c3e71c","date":1183562198,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/FieldsWriter#flushDocument(RAMOutputStream).mjava","pathOld":"/dev/null","sourceNew":"    // Writes the contents of buffer into the fields stream\n    // and adds a new entry for this document into the index\n    // stream.  This assumes the buffer was already written\n    // in the correct fields format.\n    void flushDocument(RAMOutputStream buffer) throws IOException {\n      indexStream.writeLong(fieldsStream.getFilePointer());\n      buffer.writeTo(fieldsStream);\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c9a0deca56efc5191d6b3c41047fd538f3fae1d8","date":1198156049,"type":5,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/FieldsWriter#flushDocument(int,RAMOutputStream).mjava","pathOld":"src/java/org/apache/lucene/index/FieldsWriter#flushDocument(RAMOutputStream).mjava","sourceNew":"    // Writes the contents of buffer into the fields stream\n    // and adds a new entry for this document into the index\n    // stream.  This assumes the buffer was already written\n    // in the correct fields format.\n    void flushDocument(int numStoredFields, RAMOutputStream buffer) throws IOException {\n      indexStream.writeLong(fieldsStream.getFilePointer());\n      fieldsStream.writeVInt(numStoredFields);\n      buffer.writeTo(fieldsStream);\n    }\n\n","sourceOld":"    // Writes the contents of buffer into the fields stream\n    // and adds a new entry for this document into the index\n    // stream.  This assumes the buffer was already written\n    // in the correct fields format.\n    void flushDocument(RAMOutputStream buffer) throws IOException {\n      indexStream.writeLong(fieldsStream.getFilePointer());\n      buffer.writeTo(fieldsStream);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"c9a0deca56efc5191d6b3c41047fd538f3fae1d8":["4350b17bd363cd13a95171b8df1ca62ea4c3e71c"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"4350b17bd363cd13a95171b8df1ca62ea4c3e71c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["c9a0deca56efc5191d6b3c41047fd538f3fae1d8"]},"commit2Childs":{"c9a0deca56efc5191d6b3c41047fd538f3fae1d8":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["4350b17bd363cd13a95171b8df1ca62ea4c3e71c"],"4350b17bd363cd13a95171b8df1ca62ea4c3e71c":["c9a0deca56efc5191d6b3c41047fd538f3fae1d8"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}