{"path":"lucene/src/java/org/apache/lucene/codecs/lucene3x/Lucene3xNormsProducer#separateFiles(Directory,SegmentInfo,Set[String]).mjava","commits":[{"id":"f6e3376a314fcc2b31bc46d399c2ff23552b78d6","date":1325780477,"type":1,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/codecs/lucene3x/Lucene3xNormsProducer#separateFiles(Directory,SegmentInfo,Set[String]).mjava","pathOld":"lucene/src/java/org/apache/lucene/codecs/lucene40/Lucene40NormsReader#separateFiles(Directory,SegmentInfo,Set[String]).mjava","sourceNew":"  /** @deprecated */\n  @Deprecated\n  static void separateFiles(Directory dir, SegmentInfo info, Set<String> files) throws IOException {\n    Map<Integer,Long> normGen = info.getNormGen();\n    if (normGen != null) {\n      for (Entry<Integer,Long> entry : normGen.entrySet()) {\n        long gen = entry.getValue();\n        if (gen >= SegmentInfo.YES) {\n          // Definitely a separate norm file, with generation:\n          files.add(IndexFileNames.fileNameFromGeneration(info.name, SEPARATE_NORMS_EXTENSION + entry.getKey(), gen));\n        }\n      }\n    }\n  }\n\n","sourceOld":"  /** @deprecated */\n  @Deprecated\n  static void separateFiles(Directory dir, SegmentInfo info, Set<String> files) throws IOException {\n    Map<Integer,Long> normGen = info.getNormGen();\n    if (normGen != null) {\n      for (Entry<Integer,Long> entry : normGen.entrySet()) {\n        long gen = entry.getValue();\n        if (gen >= SegmentInfo.YES) {\n          // Definitely a separate norm file, with generation:\n          files.add(IndexFileNames.fileNameFromGeneration(info.name, Lucene40NormsWriter.SEPARATE_NORMS_EXTENSION + entry.getKey(), gen));\n        }\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"78977ccc47b451a8e645b77504e2ef0a05e4b1a3","date":1327846052,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/codecs/lucene3x/Lucene3xNormsProducer#separateFiles(SegmentInfo,Set[String]).mjava","pathOld":"lucene/src/java/org/apache/lucene/codecs/lucene3x/Lucene3xNormsProducer#separateFiles(Directory,SegmentInfo,Set[String]).mjava","sourceNew":"  /** @deprecated */\n  @Deprecated\n  static void separateFiles(SegmentInfo info, Set<String> files) throws IOException {\n    Map<Integer,Long> normGen = info.getNormGen();\n    if (normGen != null) {\n      for (Entry<Integer,Long> entry : normGen.entrySet()) {\n        long gen = entry.getValue();\n        if (gen >= SegmentInfo.YES) {\n          // Definitely a separate norm file, with generation:\n          files.add(IndexFileNames.fileNameFromGeneration(info.name, SEPARATE_NORMS_EXTENSION + entry.getKey(), gen));\n        }\n      }\n    }\n  }\n\n","sourceOld":"  /** @deprecated */\n  @Deprecated\n  static void separateFiles(Directory dir, SegmentInfo info, Set<String> files) throws IOException {\n    Map<Integer,Long> normGen = info.getNormGen();\n    if (normGen != null) {\n      for (Entry<Integer,Long> entry : normGen.entrySet()) {\n        long gen = entry.getValue();\n        if (gen >= SegmentInfo.YES) {\n          // Definitely a separate norm file, with generation:\n          files.add(IndexFileNames.fileNameFromGeneration(info.name, SEPARATE_NORMS_EXTENSION + entry.getKey(), gen));\n        }\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"296df632fd63421ea20756fa11ad36fbc6f4c8a9","date":1327957998,"type":5,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/codecs/lucene3x/Lucene3xNormsProducer#separateFiles(SegmentInfo,Set[String]).mjava","pathOld":"lucene/src/java/org/apache/lucene/codecs/lucene3x/Lucene3xNormsProducer#separateFiles(Directory,SegmentInfo,Set[String]).mjava","sourceNew":"  static void separateFiles(SegmentInfo info, Set<String> files) throws IOException {\n    Map<Integer,Long> normGen = info.getNormGen();\n    if (normGen != null) {\n      for (Entry<Integer,Long> entry : normGen.entrySet()) {\n        long gen = entry.getValue();\n        if (gen >= SegmentInfo.YES) {\n          // Definitely a separate norm file, with generation:\n          files.add(IndexFileNames.fileNameFromGeneration(info.name, SEPARATE_NORMS_EXTENSION + entry.getKey(), gen));\n        }\n      }\n    }\n  }\n\n","sourceOld":"  /** @deprecated */\n  @Deprecated\n  static void separateFiles(Directory dir, SegmentInfo info, Set<String> files) throws IOException {\n    Map<Integer,Long> normGen = info.getNormGen();\n    if (normGen != null) {\n      for (Entry<Integer,Long> entry : normGen.entrySet()) {\n        long gen = entry.getValue();\n        if (gen >= SegmentInfo.YES) {\n          // Definitely a separate norm file, with generation:\n          files.add(IndexFileNames.fileNameFromGeneration(info.name, SEPARATE_NORMS_EXTENSION + entry.getKey(), gen));\n        }\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"410e066f093e407222d9681429d209084e783149","date":1327958394,"type":5,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/codecs/lucene3x/Lucene3xNormsProducer#separateFiles(SegmentInfo,Set[String]).mjava","pathOld":"lucene/src/java/org/apache/lucene/codecs/lucene3x/Lucene3xNormsProducer#separateFiles(Directory,SegmentInfo,Set[String]).mjava","sourceNew":"  static void separateFiles(SegmentInfo info, Set<String> files) throws IOException {\n    Map<Integer,Long> normGen = info.getNormGen();\n    if (normGen != null) {\n      for (Entry<Integer,Long> entry : normGen.entrySet()) {\n        long gen = entry.getValue();\n        if (gen >= SegmentInfo.YES) {\n          // Definitely a separate norm file, with generation:\n          files.add(IndexFileNames.fileNameFromGeneration(info.name, SEPARATE_NORMS_EXTENSION + entry.getKey(), gen));\n        }\n      }\n    }\n  }\n\n","sourceOld":"  /** @deprecated */\n  @Deprecated\n  static void separateFiles(Directory dir, SegmentInfo info, Set<String> files) throws IOException {\n    Map<Integer,Long> normGen = info.getNormGen();\n    if (normGen != null) {\n      for (Entry<Integer,Long> entry : normGen.entrySet()) {\n        long gen = entry.getValue();\n        if (gen >= SegmentInfo.YES) {\n          // Definitely a separate norm file, with generation:\n          files.add(IndexFileNames.fileNameFromGeneration(info.name, SEPARATE_NORMS_EXTENSION + entry.getKey(), gen));\n        }\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"410e066f093e407222d9681429d209084e783149":["f6e3376a314fcc2b31bc46d399c2ff23552b78d6","296df632fd63421ea20756fa11ad36fbc6f4c8a9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"78977ccc47b451a8e645b77504e2ef0a05e4b1a3":["f6e3376a314fcc2b31bc46d399c2ff23552b78d6"],"f6e3376a314fcc2b31bc46d399c2ff23552b78d6":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"296df632fd63421ea20756fa11ad36fbc6f4c8a9":["f6e3376a314fcc2b31bc46d399c2ff23552b78d6","78977ccc47b451a8e645b77504e2ef0a05e4b1a3"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["296df632fd63421ea20756fa11ad36fbc6f4c8a9"]},"commit2Childs":{"410e066f093e407222d9681429d209084e783149":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["f6e3376a314fcc2b31bc46d399c2ff23552b78d6"],"78977ccc47b451a8e645b77504e2ef0a05e4b1a3":["296df632fd63421ea20756fa11ad36fbc6f4c8a9"],"f6e3376a314fcc2b31bc46d399c2ff23552b78d6":["410e066f093e407222d9681429d209084e783149","78977ccc47b451a8e645b77504e2ef0a05e4b1a3","296df632fd63421ea20756fa11ad36fbc6f4c8a9"],"296df632fd63421ea20756fa11ad36fbc6f4c8a9":["410e066f093e407222d9681429d209084e783149","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["410e066f093e407222d9681429d209084e783149","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}