{"path":"lucene/src/java/org/apache/lucene/codecs/lucene40/Lucene40LiveDocsFormat#writeLiveDocs(MutableBits,Directory,SegmentInfo,IOContext).mjava","commits":[{"id":"e3a73b15d807e41306466aec106b4cb85b8d5335","date":1326993385,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/codecs/lucene40/Lucene40LiveDocsFormat#writeLiveDocs(MutableBits,Directory,SegmentInfo,IOContext).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public void writeLiveDocs(MutableBits bits, Directory dir, SegmentInfo info, IOContext context) throws IOException {\n    // nocommit: compute filename here\n    // nocommit: this api is ugly...\n    ((BitVector)bits).write(dir, info.getDelFileName(), context);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c01bf951751b6dabfd53cb1429a659b28cd6ab4b","date":1327023967,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/codecs/lucene40/Lucene40LiveDocsFormat#writeLiveDocs(MutableBits,Directory,SegmentInfo,IOContext).mjava","pathOld":"lucene/src/java/org/apache/lucene/codecs/lucene40/Lucene40LiveDocsFormat#writeLiveDocs(MutableBits,Directory,SegmentInfo,IOContext).mjava","sourceNew":"  @Override\n  public void writeLiveDocs(MutableBits bits, Directory dir, SegmentInfo info, IOContext context) throws IOException {\n    // nocommit: this api is ugly...\n    String filename = IndexFileNames.fileNameFromGeneration(info.name, IndexFileNames.DELETES_EXTENSION, info.getDelGen());\n    \n    // nocommit: is it somehow cleaner to still have IW do this try/finally/delete stuff and add abort() instead?\n    boolean success = false;\n    try {\n      ((BitVector)bits).write(dir, filename, context);\n      success = true;\n    } finally {\n      if (!success) {\n        try {\n          dir.deleteFile(filename);\n        } catch (Throwable t) {\n          // suppress this so we keep throwing the\n          // original exception\n        }\n      }\n    }\n  }\n\n","sourceOld":"  @Override\n  public void writeLiveDocs(MutableBits bits, Directory dir, SegmentInfo info, IOContext context) throws IOException {\n    // nocommit: compute filename here\n    // nocommit: this api is ugly...\n    ((BitVector)bits).write(dir, info.getDelFileName(), context);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ee7817a665237cb0657ed2bd7ae2a2b91ce6aaf9","date":1327025939,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/codecs/lucene40/Lucene40LiveDocsFormat#writeLiveDocs(MutableBits,Directory,SegmentInfo,IOContext).mjava","pathOld":"lucene/src/java/org/apache/lucene/codecs/lucene40/Lucene40LiveDocsFormat#writeLiveDocs(MutableBits,Directory,SegmentInfo,IOContext).mjava","sourceNew":"  @Override\n  public void writeLiveDocs(MutableBits bits, Directory dir, SegmentInfo info, IOContext context) throws IOException {\n    // nocommit: this api is ugly...\n    String filename = IndexFileNames.fileNameFromGeneration(info.name, DELETES_EXTENSION, info.getDelGen());\n    \n    // nocommit: is it somehow cleaner to still have IW do this try/finally/delete stuff and add abort() instead?\n    boolean success = false;\n    try {\n      ((BitVector)bits).write(dir, filename, context);\n      success = true;\n    } finally {\n      if (!success) {\n        try {\n          dir.deleteFile(filename);\n        } catch (Throwable t) {\n          // suppress this so we keep throwing the\n          // original exception\n        }\n      }\n    }\n  }\n\n","sourceOld":"  @Override\n  public void writeLiveDocs(MutableBits bits, Directory dir, SegmentInfo info, IOContext context) throws IOException {\n    // nocommit: this api is ugly...\n    String filename = IndexFileNames.fileNameFromGeneration(info.name, IndexFileNames.DELETES_EXTENSION, info.getDelGen());\n    \n    // nocommit: is it somehow cleaner to still have IW do this try/finally/delete stuff and add abort() instead?\n    boolean success = false;\n    try {\n      ((BitVector)bits).write(dir, filename, context);\n      success = true;\n    } finally {\n      if (!success) {\n        try {\n          dir.deleteFile(filename);\n        } catch (Throwable t) {\n          // suppress this so we keep throwing the\n          // original exception\n        }\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2a1f9764aef15e33686d980dcd7f51aec4b7e17a","date":1327072454,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/codecs/lucene40/Lucene40LiveDocsFormat#writeLiveDocs(MutableBits,Directory,SegmentInfo,IOContext).mjava","pathOld":"lucene/src/java/org/apache/lucene/codecs/lucene40/Lucene40LiveDocsFormat#writeLiveDocs(MutableBits,Directory,SegmentInfo,IOContext).mjava","sourceNew":"  @Override\n  public void writeLiveDocs(MutableBits bits, Directory dir, SegmentInfo info, IOContext context) throws IOException {\n    // nocommit: this api is ugly...\n    String filename = IndexFileNames.fileNameFromGeneration(info.name, DELETES_EXTENSION, info.getDelGen());\n    \n    // nocommit: test if we really need this\n    boolean success = false;\n    try {\n      ((BitVector)bits).write(dir, filename, context);\n      success = true;\n    } finally {\n      if (!success) {\n        IOUtils.deleteFilesIgnoringExceptions(dir, filename);\n      }\n    }\n  }\n\n","sourceOld":"  @Override\n  public void writeLiveDocs(MutableBits bits, Directory dir, SegmentInfo info, IOContext context) throws IOException {\n    // nocommit: this api is ugly...\n    String filename = IndexFileNames.fileNameFromGeneration(info.name, DELETES_EXTENSION, info.getDelGen());\n    \n    // nocommit: is it somehow cleaner to still have IW do this try/finally/delete stuff and add abort() instead?\n    boolean success = false;\n    try {\n      ((BitVector)bits).write(dir, filename, context);\n      success = true;\n    } finally {\n      if (!success) {\n        try {\n          dir.deleteFile(filename);\n        } catch (Throwable t) {\n          // suppress this so we keep throwing the\n          // original exception\n        }\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3df3d3a3cd2806a8405b2b8ecbb73d62fd2a60e4","date":1327162691,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/codecs/lucene40/Lucene40LiveDocsFormat#writeLiveDocs(MutableBits,Directory,SegmentInfo,IOContext).mjava","pathOld":"lucene/src/java/org/apache/lucene/codecs/lucene40/Lucene40LiveDocsFormat#writeLiveDocs(MutableBits,Directory,SegmentInfo,IOContext).mjava","sourceNew":"  @Override\n  public void writeLiveDocs(MutableBits bits, Directory dir, SegmentInfo info, IOContext context) throws IOException {\n    // nocommit: this api is ugly...\n    String filename = IndexFileNames.fileNameFromGeneration(info.name, DELETES_EXTENSION, info.getDelGen());\n    ((BitVector)bits).write(dir, filename, context);\n  }\n\n","sourceOld":"  @Override\n  public void writeLiveDocs(MutableBits bits, Directory dir, SegmentInfo info, IOContext context) throws IOException {\n    // nocommit: this api is ugly...\n    String filename = IndexFileNames.fileNameFromGeneration(info.name, DELETES_EXTENSION, info.getDelGen());\n    \n    // nocommit: test if we really need this\n    boolean success = false;\n    try {\n      ((BitVector)bits).write(dir, filename, context);\n      success = true;\n    } finally {\n      if (!success) {\n        IOUtils.deleteFilesIgnoringExceptions(dir, filename);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d3d53ad7b9687e0dfaacaab099d3c7e98bfbe78e","date":1327757020,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/codecs/lucene40/Lucene40LiveDocsFormat#writeLiveDocs(MutableBits,Directory,SegmentInfo,IOContext).mjava","pathOld":"lucene/src/java/org/apache/lucene/codecs/lucene40/Lucene40LiveDocsFormat#writeLiveDocs(MutableBits,Directory,SegmentInfo,IOContext).mjava","sourceNew":"  @Override\n  public void writeLiveDocs(MutableBits bits, Directory dir, SegmentInfo info, IOContext context) throws IOException {\n    // nocommit: this api is ugly...\n    String filename = IndexFileNames.fileNameFromGeneration(info.name, DELETES_EXTENSION, info.getDelGen());\n    final BitVector liveDocs = (BitVector) bits;\n    assert liveDocs.count() == info.docCount - info.getDelCount();\n    assert liveDocs.length() == info.docCount;\n    liveDocs.write(dir, filename, context);\n  }\n\n","sourceOld":"  @Override\n  public void writeLiveDocs(MutableBits bits, Directory dir, SegmentInfo info, IOContext context) throws IOException {\n    // nocommit: this api is ugly...\n    String filename = IndexFileNames.fileNameFromGeneration(info.name, DELETES_EXTENSION, info.getDelGen());\n    ((BitVector)bits).write(dir, filename, context);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c242113cb03b9c717863e1c1390c2f9350abc01b","date":1327761258,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/codecs/lucene40/Lucene40LiveDocsFormat#writeLiveDocs(MutableBits,Directory,SegmentInfo,IOContext).mjava","pathOld":"lucene/src/java/org/apache/lucene/codecs/lucene40/Lucene40LiveDocsFormat#writeLiveDocs(MutableBits,Directory,SegmentInfo,IOContext).mjava","sourceNew":"  @Override\n  public void writeLiveDocs(MutableBits bits, Directory dir, SegmentInfo info, IOContext context) throws IOException {\n    String filename = IndexFileNames.fileNameFromGeneration(info.name, DELETES_EXTENSION, info.getDelGen());\n    final BitVector liveDocs = (BitVector) bits;\n    assert liveDocs.count() == info.docCount - info.getDelCount();\n    assert liveDocs.length() == info.docCount;\n    liveDocs.write(dir, filename, context);\n  }\n\n","sourceOld":"  @Override\n  public void writeLiveDocs(MutableBits bits, Directory dir, SegmentInfo info, IOContext context) throws IOException {\n    // nocommit: this api is ugly...\n    String filename = IndexFileNames.fileNameFromGeneration(info.name, DELETES_EXTENSION, info.getDelGen());\n    final BitVector liveDocs = (BitVector) bits;\n    assert liveDocs.count() == info.docCount - info.getDelCount();\n    assert liveDocs.length() == info.docCount;\n    liveDocs.write(dir, filename, context);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c9f2d6bb11ccaac366d9b7652b2feb0c715d9c31","date":1327836826,"type":0,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/codecs/lucene40/Lucene40LiveDocsFormat#writeLiveDocs(MutableBits,Directory,SegmentInfo,IOContext).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public void writeLiveDocs(MutableBits bits, Directory dir, SegmentInfo info, IOContext context) throws IOException {\n    String filename = IndexFileNames.fileNameFromGeneration(info.name, DELETES_EXTENSION, info.getDelGen());\n    final BitVector liveDocs = (BitVector) bits;\n    assert liveDocs.count() == info.docCount - info.getDelCount();\n    assert liveDocs.length() == info.docCount;\n    liveDocs.write(dir, filename, context);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fd92b8bcc88e969302510acf77bd6970da3994c4","date":1327839530,"type":0,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/codecs/lucene40/Lucene40LiveDocsFormat#writeLiveDocs(MutableBits,Directory,SegmentInfo,IOContext).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public void writeLiveDocs(MutableBits bits, Directory dir, SegmentInfo info, IOContext context) throws IOException {\n    String filename = IndexFileNames.fileNameFromGeneration(info.name, DELETES_EXTENSION, info.getDelGen());\n    final BitVector liveDocs = (BitVector) bits;\n    assert liveDocs.count() == info.docCount - info.getDelCount();\n    assert liveDocs.length() == info.docCount;\n    liveDocs.write(dir, filename, context);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":5,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/lucene40/Lucene40LiveDocsFormat#writeLiveDocs(MutableBits,Directory,SegmentInfo,IOContext).mjava","pathOld":"lucene/src/java/org/apache/lucene/codecs/lucene40/Lucene40LiveDocsFormat#writeLiveDocs(MutableBits,Directory,SegmentInfo,IOContext).mjava","sourceNew":"  @Override\n  public void writeLiveDocs(MutableBits bits, Directory dir, SegmentInfo info, IOContext context) throws IOException {\n    String filename = IndexFileNames.fileNameFromGeneration(info.name, DELETES_EXTENSION, info.getDelGen());\n    final BitVector liveDocs = (BitVector) bits;\n    assert liveDocs.count() == info.docCount - info.getDelCount();\n    assert liveDocs.length() == info.docCount;\n    liveDocs.write(dir, filename, context);\n  }\n\n","sourceOld":"  @Override\n  public void writeLiveDocs(MutableBits bits, Directory dir, SegmentInfo info, IOContext context) throws IOException {\n    String filename = IndexFileNames.fileNameFromGeneration(info.name, DELETES_EXTENSION, info.getDelGen());\n    final BitVector liveDocs = (BitVector) bits;\n    assert liveDocs.count() == info.docCount - info.getDelCount();\n    assert liveDocs.length() == info.docCount;\n    liveDocs.write(dir, filename, context);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"c242113cb03b9c717863e1c1390c2f9350abc01b":["d3d53ad7b9687e0dfaacaab099d3c7e98bfbe78e"],"2a1f9764aef15e33686d980dcd7f51aec4b7e17a":["ee7817a665237cb0657ed2bd7ae2a2b91ce6aaf9"],"ee7817a665237cb0657ed2bd7ae2a2b91ce6aaf9":["c01bf951751b6dabfd53cb1429a659b28cd6ab4b"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["c9f2d6bb11ccaac366d9b7652b2feb0c715d9c31"],"3df3d3a3cd2806a8405b2b8ecbb73d62fd2a60e4":["2a1f9764aef15e33686d980dcd7f51aec4b7e17a"],"e3a73b15d807e41306466aec106b4cb85b8d5335":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"d3d53ad7b9687e0dfaacaab099d3c7e98bfbe78e":["3df3d3a3cd2806a8405b2b8ecbb73d62fd2a60e4"],"fd92b8bcc88e969302510acf77bd6970da3994c4":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","c9f2d6bb11ccaac366d9b7652b2feb0c715d9c31"],"c9f2d6bb11ccaac366d9b7652b2feb0c715d9c31":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","c242113cb03b9c717863e1c1390c2f9350abc01b"],"c01bf951751b6dabfd53cb1429a659b28cd6ab4b":["e3a73b15d807e41306466aec106b4cb85b8d5335"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"]},"commit2Childs":{"c242113cb03b9c717863e1c1390c2f9350abc01b":["c9f2d6bb11ccaac366d9b7652b2feb0c715d9c31"],"2a1f9764aef15e33686d980dcd7f51aec4b7e17a":["3df3d3a3cd2806a8405b2b8ecbb73d62fd2a60e4"],"ee7817a665237cb0657ed2bd7ae2a2b91ce6aaf9":["2a1f9764aef15e33686d980dcd7f51aec4b7e17a"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3df3d3a3cd2806a8405b2b8ecbb73d62fd2a60e4":["d3d53ad7b9687e0dfaacaab099d3c7e98bfbe78e"],"e3a73b15d807e41306466aec106b4cb85b8d5335":["c01bf951751b6dabfd53cb1429a659b28cd6ab4b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["e3a73b15d807e41306466aec106b4cb85b8d5335","fd92b8bcc88e969302510acf77bd6970da3994c4","c9f2d6bb11ccaac366d9b7652b2feb0c715d9c31"],"d3d53ad7b9687e0dfaacaab099d3c7e98bfbe78e":["c242113cb03b9c717863e1c1390c2f9350abc01b"],"fd92b8bcc88e969302510acf77bd6970da3994c4":[],"c9f2d6bb11ccaac366d9b7652b2feb0c715d9c31":["3a119bbc8703c10faa329ec201c654b3a35a1e3e","fd92b8bcc88e969302510acf77bd6970da3994c4"],"c01bf951751b6dabfd53cb1429a659b28cd6ab4b":["ee7817a665237cb0657ed2bd7ae2a2b91ce6aaf9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["fd92b8bcc88e969302510acf77bd6970da3994c4","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}