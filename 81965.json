{"path":"lucene/grouping/src/java/org/apache/lucene/search/grouping/TopGroups#nonNANmax(float,float).mjava","commits":[{"id":"1ea80da8756bb282c46782b7a5027eb59802c436","date":1571828922,"type":0,"author":"Christine Poerschke","isMerge":false,"pathNew":"lucene/grouping/src/java/org/apache/lucene/search/grouping/TopGroups#nonNANmax(float,float).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * If either value is NaN then return the other value, otherwise\n   * return the greater of the two values by calling Math.max.\n   * @param a - one value\n   * @param b - another value\n   * @return ignoring any NaN return the greater of a and b\n   */\n  private static float nonNANmax(float a, float b) {\n    if (Float.isNaN(a)) return b;\n    if (Float.isNaN(b)) return a;\n    return Math.max(a, b);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"94376748c9c736515a6f26c0fb1e5986d315b843","date":1571850798,"type":4,"author":"Christine Poerschke","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/grouping/src/java/org/apache/lucene/search/grouping/TopGroups#nonNANmax(float,float).mjava","sourceNew":null,"sourceOld":"  /**\n   * If either value is NaN then return the other value, otherwise\n   * return the greater of the two values by calling Math.max.\n   * @param a - one value\n   * @param b - another value\n   * @return ignoring any NaN return the greater of a and b\n   */\n  private static float nonNANmax(float a, float b) {\n    if (Float.isNaN(a)) return b;\n    if (Float.isNaN(b)) return a;\n    return Math.max(a, b);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2eb9dcbcff763b925aeaf51efba4dabd996ec69a","date":1575896984,"type":0,"author":"Christine Poerschke","isMerge":false,"pathNew":"lucene/grouping/src/java/org/apache/lucene/search/grouping/TopGroups#nonNANmax(float,float).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * If either value is NaN then return the other value, otherwise\n   * return the greater of the two values by calling Math.max.\n   * @param a - one value\n   * @param b - another value\n   * @return ignoring any NaN return the greater of a and b\n   */\n  private static float nonNANmax(float a, float b) {\n    if (Float.isNaN(a)) return b;\n    if (Float.isNaN(b)) return a;\n    return Math.max(a, b);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"df3f594d6024cc3f64b0d0932c5efc80dfbe64bb","date":1575906501,"type":0,"author":"Dawid Weiss","isMerge":true,"pathNew":"lucene/grouping/src/java/org/apache/lucene/search/grouping/TopGroups#nonNANmax(float,float).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * If either value is NaN then return the other value, otherwise\n   * return the greater of the two values by calling Math.max.\n   * @param a - one value\n   * @param b - another value\n   * @return ignoring any NaN return the greater of a and b\n   */\n  private static float nonNANmax(float a, float b) {\n    if (Float.isNaN(a)) return b;\n    if (Float.isNaN(b)) return a;\n    return Math.max(a, b);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"df3f594d6024cc3f64b0d0932c5efc80dfbe64bb":["94376748c9c736515a6f26c0fb1e5986d315b843","2eb9dcbcff763b925aeaf51efba4dabd996ec69a"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"1ea80da8756bb282c46782b7a5027eb59802c436":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"2eb9dcbcff763b925aeaf51efba4dabd996ec69a":["94376748c9c736515a6f26c0fb1e5986d315b843"],"94376748c9c736515a6f26c0fb1e5986d315b843":["1ea80da8756bb282c46782b7a5027eb59802c436"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["2eb9dcbcff763b925aeaf51efba4dabd996ec69a"]},"commit2Childs":{"df3f594d6024cc3f64b0d0932c5efc80dfbe64bb":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["1ea80da8756bb282c46782b7a5027eb59802c436"],"1ea80da8756bb282c46782b7a5027eb59802c436":["94376748c9c736515a6f26c0fb1e5986d315b843"],"2eb9dcbcff763b925aeaf51efba4dabd996ec69a":["df3f594d6024cc3f64b0d0932c5efc80dfbe64bb","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"94376748c9c736515a6f26c0fb1e5986d315b843":["df3f594d6024cc3f64b0d0932c5efc80dfbe64bb","2eb9dcbcff763b925aeaf51efba4dabd996ec69a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["df3f594d6024cc3f64b0d0932c5efc80dfbe64bb","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}