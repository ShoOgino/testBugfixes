{"path":"lucene/core/src/java/org/apache/lucene/codecs/BlockTreeTermsWriter.TermsWriter#TermsWriter(FieldInfo).mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/BlockTreeTermsWriter.TermsWriter#TermsWriter(FieldInfo).mjava","pathOld":"lucene/src/java/org/apache/lucene/codecs/BlockTreeTermsWriter.TermsWriter#TermsWriter(FieldInfo).mjava","sourceNew":"    TermsWriter(FieldInfo fieldInfo) {\n      this.fieldInfo = fieldInfo;\n\n      noOutputs = NoOutputs.getSingleton();\n\n      // This Builder is just used transiently to fragment\n      // terms into \"good\" blocks; we don't save the\n      // resulting FST:\n      blockBuilder = new Builder<Object>(FST.INPUT_TYPE.BYTE1,\n                                         0, 0, true,\n                                         true, Integer.MAX_VALUE,\n                                         noOutputs,\n                                         new FindBlocks(), false);\n\n      postingsWriter.setField(fieldInfo);\n    }\n\n","sourceOld":"    TermsWriter(FieldInfo fieldInfo) {\n      this.fieldInfo = fieldInfo;\n\n      noOutputs = NoOutputs.getSingleton();\n\n      // This Builder is just used transiently to fragment\n      // terms into \"good\" blocks; we don't save the\n      // resulting FST:\n      blockBuilder = new Builder<Object>(FST.INPUT_TYPE.BYTE1,\n                                         0, 0, true,\n                                         true, Integer.MAX_VALUE,\n                                         noOutputs,\n                                         new FindBlocks(), false);\n\n      postingsWriter.setField(fieldInfo);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fb8af2aec0a8574cf50cad6939d4475179595eca","date":1357675799,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/BlockTreeTermsWriter.TermsWriter#TermsWriter(FieldInfo).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/BlockTreeTermsWriter.TermsWriter#TermsWriter(FieldInfo).mjava","sourceNew":"    TermsWriter(FieldInfo fieldInfo) {\n      this.fieldInfo = fieldInfo;\n\n      noOutputs = NoOutputs.getSingleton();\n\n      // This Builder is just used transiently to fragment\n      // terms into \"good\" blocks; we don't save the\n      // resulting FST:\n      blockBuilder = new Builder<Object>(FST.INPUT_TYPE.BYTE1,\n                                         0, 0, true,\n                                         true, Integer.MAX_VALUE,\n                                         noOutputs,\n                                         new FindBlocks(), false, true);\n\n      postingsWriter.setField(fieldInfo);\n    }\n\n","sourceOld":"    TermsWriter(FieldInfo fieldInfo) {\n      this.fieldInfo = fieldInfo;\n\n      noOutputs = NoOutputs.getSingleton();\n\n      // This Builder is just used transiently to fragment\n      // terms into \"good\" blocks; we don't save the\n      // resulting FST:\n      blockBuilder = new Builder<Object>(FST.INPUT_TYPE.BYTE1,\n                                         0, 0, true,\n                                         true, Integer.MAX_VALUE,\n                                         noOutputs,\n                                         new FindBlocks(), false);\n\n      postingsWriter.setField(fieldInfo);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4e6354dd7c71fe122926fc53d7d29f715b1283db","date":1357915185,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/BlockTreeTermsWriter.TermsWriter#TermsWriter(FieldInfo).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/BlockTreeTermsWriter.TermsWriter#TermsWriter(FieldInfo).mjava","sourceNew":"    TermsWriter(FieldInfo fieldInfo) {\n      this.fieldInfo = fieldInfo;\n\n      noOutputs = NoOutputs.getSingleton();\n\n      // This Builder is just used transiently to fragment\n      // terms into \"good\" blocks; we don't save the\n      // resulting FST:\n      blockBuilder = new Builder<Object>(FST.INPUT_TYPE.BYTE1,\n                                         0, 0, true,\n                                         true, Integer.MAX_VALUE,\n                                         noOutputs,\n                                         new FindBlocks(), false, true);\n\n      postingsWriter.setField(fieldInfo);\n    }\n\n","sourceOld":"    TermsWriter(FieldInfo fieldInfo) {\n      this.fieldInfo = fieldInfo;\n\n      noOutputs = NoOutputs.getSingleton();\n\n      // This Builder is just used transiently to fragment\n      // terms into \"good\" blocks; we don't save the\n      // resulting FST:\n      blockBuilder = new Builder<Object>(FST.INPUT_TYPE.BYTE1,\n                                         0, 0, true,\n                                         true, Integer.MAX_VALUE,\n                                         noOutputs,\n                                         new FindBlocks(), false);\n\n      postingsWriter.setField(fieldInfo);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d3c397b1515e745d8b12d70edfc0e17cb7eac7f0","date":1358188277,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/BlockTreeTermsWriter.TermsWriter#TermsWriter(FieldInfo).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/BlockTreeTermsWriter.TermsWriter#TermsWriter(FieldInfo).mjava","sourceNew":"    TermsWriter(FieldInfo fieldInfo) {\n      this.fieldInfo = fieldInfo;\n\n      noOutputs = NoOutputs.getSingleton();\n\n      // This Builder is just used transiently to fragment\n      // terms into \"good\" blocks; we don't save the\n      // resulting FST:\n      blockBuilder = new Builder<Object>(FST.INPUT_TYPE.BYTE1,\n                                         0, 0, true,\n                                         true, Integer.MAX_VALUE,\n                                         noOutputs,\n                                         new FindBlocks(), false,\n                                         PackedInts.COMPACT,\n                                         true, 15);\n\n      postingsWriter.setField(fieldInfo);\n    }\n\n","sourceOld":"    TermsWriter(FieldInfo fieldInfo) {\n      this.fieldInfo = fieldInfo;\n\n      noOutputs = NoOutputs.getSingleton();\n\n      // This Builder is just used transiently to fragment\n      // terms into \"good\" blocks; we don't save the\n      // resulting FST:\n      blockBuilder = new Builder<Object>(FST.INPUT_TYPE.BYTE1,\n                                         0, 0, true,\n                                         true, Integer.MAX_VALUE,\n                                         noOutputs,\n                                         new FindBlocks(), false, true);\n\n      postingsWriter.setField(fieldInfo);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8917bfede3b4ca30f4305c1e391e9218959cd723","date":1358189662,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/BlockTreeTermsWriter.TermsWriter#TermsWriter(FieldInfo).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/BlockTreeTermsWriter.TermsWriter#TermsWriter(FieldInfo).mjava","sourceNew":"    TermsWriter(FieldInfo fieldInfo) {\n      this.fieldInfo = fieldInfo;\n\n      noOutputs = NoOutputs.getSingleton();\n\n      // This Builder is just used transiently to fragment\n      // terms into \"good\" blocks; we don't save the\n      // resulting FST:\n      blockBuilder = new Builder<Object>(FST.INPUT_TYPE.BYTE1,\n                                         0, 0, true,\n                                         true, Integer.MAX_VALUE,\n                                         noOutputs,\n                                         new FindBlocks(), false,\n                                         PackedInts.COMPACT,\n                                         true, 15);\n\n      postingsWriter.setField(fieldInfo);\n    }\n\n","sourceOld":"    TermsWriter(FieldInfo fieldInfo) {\n      this.fieldInfo = fieldInfo;\n\n      noOutputs = NoOutputs.getSingleton();\n\n      // This Builder is just used transiently to fragment\n      // terms into \"good\" blocks; we don't save the\n      // resulting FST:\n      blockBuilder = new Builder<Object>(FST.INPUT_TYPE.BYTE1,\n                                         0, 0, true,\n                                         true, Integer.MAX_VALUE,\n                                         noOutputs,\n                                         new FindBlocks(), false, true);\n\n      postingsWriter.setField(fieldInfo);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1a88d7b0899b7d22dcbd4cf8ca35d9ec9850ab98","date":1377268487,"type":3,"author":"Han Jiang","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/BlockTreeTermsWriter.TermsWriter#TermsWriter(FieldInfo).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/BlockTreeTermsWriter.TermsWriter#TermsWriter(FieldInfo).mjava","sourceNew":"    TermsWriter(FieldInfo fieldInfo) {\n      this.fieldInfo = fieldInfo;\n\n      noOutputs = NoOutputs.getSingleton();\n\n      // This Builder is just used transiently to fragment\n      // terms into \"good\" blocks; we don't save the\n      // resulting FST:\n      blockBuilder = new Builder<Object>(FST.INPUT_TYPE.BYTE1,\n                                         0, 0, true,\n                                         true, Integer.MAX_VALUE,\n                                         noOutputs,\n                                         new FindBlocks(), false,\n                                         PackedInts.COMPACT,\n                                         true, 15);\n\n      this.longsSize = postingsWriter.setField(fieldInfo);\n    }\n\n","sourceOld":"    TermsWriter(FieldInfo fieldInfo) {\n      this.fieldInfo = fieldInfo;\n\n      noOutputs = NoOutputs.getSingleton();\n\n      // This Builder is just used transiently to fragment\n      // terms into \"good\" blocks; we don't save the\n      // resulting FST:\n      blockBuilder = new Builder<Object>(FST.INPUT_TYPE.BYTE1,\n                                         0, 0, true,\n                                         true, Integer.MAX_VALUE,\n                                         noOutputs,\n                                         new FindBlocks(), false,\n                                         PackedInts.COMPACT,\n                                         true, 15);\n\n      postingsWriter.setField(fieldInfo);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2f948dd442d23baa6cbb28daf77c8db78b351329","date":1378742876,"type":3,"author":"Han Jiang","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/BlockTreeTermsWriter.TermsWriter#TermsWriter(FieldInfo).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/BlockTreeTermsWriter.TermsWriter#TermsWriter(FieldInfo).mjava","sourceNew":"    TermsWriter(FieldInfo fieldInfo) {\n      this.fieldInfo = fieldInfo;\n\n      noOutputs = NoOutputs.getSingleton();\n\n      // This Builder is just used transiently to fragment\n      // terms into \"good\" blocks; we don't save the\n      // resulting FST:\n      blockBuilder = new Builder<Object>(FST.INPUT_TYPE.BYTE1,\n                                         0, 0, true,\n                                         true, Integer.MAX_VALUE,\n                                         noOutputs,\n                                         new FindBlocks(), false,\n                                         PackedInts.COMPACT,\n                                         true, 15);\n\n      this.longsSize = postingsWriter.setField(fieldInfo);\n    }\n\n","sourceOld":"    TermsWriter(FieldInfo fieldInfo) {\n      this.fieldInfo = fieldInfo;\n\n      noOutputs = NoOutputs.getSingleton();\n\n      // This Builder is just used transiently to fragment\n      // terms into \"good\" blocks; we don't save the\n      // resulting FST:\n      blockBuilder = new Builder<Object>(FST.INPUT_TYPE.BYTE1,\n                                         0, 0, true,\n                                         true, Integer.MAX_VALUE,\n                                         noOutputs,\n                                         new FindBlocks(), false,\n                                         PackedInts.COMPACT,\n                                         true, 15);\n\n      postingsWriter.setField(fieldInfo);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fa80a35d7c4b2b1e83082b275e3e8328ab93db52","date":1381766157,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/BlockTreeTermsWriter.TermsWriter#TermsWriter(FieldInfo).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/BlockTreeTermsWriter.TermsWriter#TermsWriter(FieldInfo).mjava","sourceNew":"    TermsWriter(FieldInfo fieldInfo) {\n      this.fieldInfo = fieldInfo;\n      docsSeen = new FixedBitSet(maxDoc);\n\n      noOutputs = NoOutputs.getSingleton();\n\n      // This Builder is just used transiently to fragment\n      // terms into \"good\" blocks; we don't save the\n      // resulting FST:\n      blockBuilder = new Builder<Object>(FST.INPUT_TYPE.BYTE1,\n                                         0, 0, true,\n                                         true, Integer.MAX_VALUE,\n                                         noOutputs,\n                                         new FindBlocks(), false,\n                                         PackedInts.COMPACT,\n                                         true, 15);\n\n      this.longsSize = postingsWriter.setField(fieldInfo);\n    }\n\n","sourceOld":"    TermsWriter(FieldInfo fieldInfo) {\n      this.fieldInfo = fieldInfo;\n\n      noOutputs = NoOutputs.getSingleton();\n\n      // This Builder is just used transiently to fragment\n      // terms into \"good\" blocks; we don't save the\n      // resulting FST:\n      blockBuilder = new Builder<Object>(FST.INPUT_TYPE.BYTE1,\n                                         0, 0, true,\n                                         true, Integer.MAX_VALUE,\n                                         noOutputs,\n                                         new FindBlocks(), false,\n                                         PackedInts.COMPACT,\n                                         true, 15);\n\n      this.longsSize = postingsWriter.setField(fieldInfo);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"634f330c54fd3f9f491d52036dc3f40b4f4d8934","date":1394635157,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/BlockTreeTermsWriter.TermsWriter#TermsWriter(FieldInfo).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/BlockTreeTermsWriter.TermsWriter#TermsWriter(FieldInfo).mjava","sourceNew":"    TermsWriter(FieldInfo fieldInfo) {\n      this.fieldInfo = fieldInfo;\n      docsSeen = new FixedBitSet(maxDoc);\n\n      noOutputs = NoOutputs.getSingleton();\n\n      // This Builder is just used transiently to fragment\n      // terms into \"good\" blocks; we don't save the\n      // resulting FST:\n      blockBuilder = new Builder<>(FST.INPUT_TYPE.BYTE1,\n                                         0, 0, true,\n                                         true, Integer.MAX_VALUE,\n                                         noOutputs,\n                                         new FindBlocks(), false,\n                                         PackedInts.COMPACT,\n                                         true, 15);\n\n      this.longsSize = postingsWriter.setField(fieldInfo);\n    }\n\n","sourceOld":"    TermsWriter(FieldInfo fieldInfo) {\n      this.fieldInfo = fieldInfo;\n      docsSeen = new FixedBitSet(maxDoc);\n\n      noOutputs = NoOutputs.getSingleton();\n\n      // This Builder is just used transiently to fragment\n      // terms into \"good\" blocks; we don't save the\n      // resulting FST:\n      blockBuilder = new Builder<Object>(FST.INPUT_TYPE.BYTE1,\n                                         0, 0, true,\n                                         true, Integer.MAX_VALUE,\n                                         noOutputs,\n                                         new FindBlocks(), false,\n                                         PackedInts.COMPACT,\n                                         true, 15);\n\n      this.longsSize = postingsWriter.setField(fieldInfo);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5ad80176d91a6f70fe93880e43dfd697dc4e63ed","date":1400176913,"type":5,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/blocktree/BlockTreeTermsWriter.TermsWriter#TermsWriter(FieldInfo).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/BlockTreeTermsWriter.TermsWriter#TermsWriter(FieldInfo).mjava","sourceNew":"    TermsWriter(FieldInfo fieldInfo) {\n      this.fieldInfo = fieldInfo;\n      docsSeen = new FixedBitSet(maxDoc);\n\n      noOutputs = NoOutputs.getSingleton();\n\n      // This Builder is just used transiently to fragment\n      // terms into \"good\" blocks; we don't save the\n      // resulting FST:\n      blockBuilder = new Builder<>(FST.INPUT_TYPE.BYTE1,\n                                         0, 0, true,\n                                         true, Integer.MAX_VALUE,\n                                         noOutputs,\n                                         new FindBlocks(), false,\n                                         PackedInts.COMPACT,\n                                         true, 15);\n\n      this.longsSize = postingsWriter.setField(fieldInfo);\n    }\n\n","sourceOld":"    TermsWriter(FieldInfo fieldInfo) {\n      this.fieldInfo = fieldInfo;\n      docsSeen = new FixedBitSet(maxDoc);\n\n      noOutputs = NoOutputs.getSingleton();\n\n      // This Builder is just used transiently to fragment\n      // terms into \"good\" blocks; we don't save the\n      // resulting FST:\n      blockBuilder = new Builder<>(FST.INPUT_TYPE.BYTE1,\n                                         0, 0, true,\n                                         true, Integer.MAX_VALUE,\n                                         noOutputs,\n                                         new FindBlocks(), false,\n                                         PackedInts.COMPACT,\n                                         true, 15);\n\n      this.longsSize = postingsWriter.setField(fieldInfo);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4d637064d608752565d4f9f41b2497dfdfdde50e","date":1400798123,"type":5,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/blocktree/BlockTreeTermsWriter.TermsWriter#TermsWriter(FieldInfo).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/BlockTreeTermsWriter.TermsWriter#TermsWriter(FieldInfo).mjava","sourceNew":"    TermsWriter(FieldInfo fieldInfo) {\n      this.fieldInfo = fieldInfo;\n      docsSeen = new FixedBitSet(maxDoc);\n\n      noOutputs = NoOutputs.getSingleton();\n\n      // This Builder is just used transiently to fragment\n      // terms into \"good\" blocks; we don't save the\n      // resulting FST:\n      blockBuilder = new Builder<>(FST.INPUT_TYPE.BYTE1,\n                                   0, 0, true,\n                                   true, Integer.MAX_VALUE,\n                                   noOutputs,\n                                   new FindBlocks(), false,\n                                   PackedInts.COMPACT,\n                                   true, 15);\n\n      this.longsSize = postingsWriter.setField(fieldInfo);\n    }\n\n","sourceOld":"    TermsWriter(FieldInfo fieldInfo) {\n      this.fieldInfo = fieldInfo;\n      docsSeen = new FixedBitSet(maxDoc);\n\n      noOutputs = NoOutputs.getSingleton();\n\n      // This Builder is just used transiently to fragment\n      // terms into \"good\" blocks; we don't save the\n      // resulting FST:\n      blockBuilder = new Builder<>(FST.INPUT_TYPE.BYTE1,\n                                         0, 0, true,\n                                         true, Integer.MAX_VALUE,\n                                         noOutputs,\n                                         new FindBlocks(), false,\n                                         PackedInts.COMPACT,\n                                         true, 15);\n\n      this.longsSize = postingsWriter.setField(fieldInfo);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4d637064d608752565d4f9f41b2497dfdfdde50e","date":1400798123,"type":6,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/sandbox/src/java/org/apache/lucene/codecs/idversion/VersionBlockTreeTermsWriter.TermsWriter#TermsWriter(FieldInfo).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/BlockTreeTermsWriter.TermsWriter#TermsWriter(FieldInfo).mjava","sourceNew":"    TermsWriter(FieldInfo fieldInfo) {\n      this.fieldInfo = fieldInfo;\n      docsSeen = new FixedBitSet(maxDoc);\n\n      noOutputs = NoOutputs.getSingleton();\n\n      // This Builder is just used transiently to fragment\n      // terms into \"good\" blocks; we don't save the\n      // resulting FST:\n      blockBuilder = new Builder<>(FST.INPUT_TYPE.BYTE1,\n                                   0, 0, true,\n                                   true, Integer.MAX_VALUE,\n                                   noOutputs,\n                                   new FindBlocks(), false,\n                                   PackedInts.COMPACT,\n                                   true, 15);\n\n      this.longsSize = postingsWriter.setField(fieldInfo);\n    }\n\n","sourceOld":"    TermsWriter(FieldInfo fieldInfo) {\n      this.fieldInfo = fieldInfo;\n      docsSeen = new FixedBitSet(maxDoc);\n\n      noOutputs = NoOutputs.getSingleton();\n\n      // This Builder is just used transiently to fragment\n      // terms into \"good\" blocks; we don't save the\n      // resulting FST:\n      blockBuilder = new Builder<>(FST.INPUT_TYPE.BYTE1,\n                                         0, 0, true,\n                                         true, Integer.MAX_VALUE,\n                                         noOutputs,\n                                         new FindBlocks(), false,\n                                         PackedInts.COMPACT,\n                                         true, 15);\n\n      this.longsSize = postingsWriter.setField(fieldInfo);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"634f330c54fd3f9f491d52036dc3f40b4f4d8934":["fa80a35d7c4b2b1e83082b275e3e8328ab93db52"],"5ad80176d91a6f70fe93880e43dfd697dc4e63ed":["634f330c54fd3f9f491d52036dc3f40b4f4d8934"],"d3c397b1515e745d8b12d70edfc0e17cb7eac7f0":["fb8af2aec0a8574cf50cad6939d4475179595eca"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"8917bfede3b4ca30f4305c1e391e9218959cd723":["4e6354dd7c71fe122926fc53d7d29f715b1283db","d3c397b1515e745d8b12d70edfc0e17cb7eac7f0"],"fa80a35d7c4b2b1e83082b275e3e8328ab93db52":["2f948dd442d23baa6cbb28daf77c8db78b351329"],"fb8af2aec0a8574cf50cad6939d4475179595eca":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"1a88d7b0899b7d22dcbd4cf8ca35d9ec9850ab98":["d3c397b1515e745d8b12d70edfc0e17cb7eac7f0"],"4d637064d608752565d4f9f41b2497dfdfdde50e":["634f330c54fd3f9f491d52036dc3f40b4f4d8934","5ad80176d91a6f70fe93880e43dfd697dc4e63ed"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"2f948dd442d23baa6cbb28daf77c8db78b351329":["d3c397b1515e745d8b12d70edfc0e17cb7eac7f0","1a88d7b0899b7d22dcbd4cf8ca35d9ec9850ab98"],"4e6354dd7c71fe122926fc53d7d29f715b1283db":["3a119bbc8703c10faa329ec201c654b3a35a1e3e","fb8af2aec0a8574cf50cad6939d4475179595eca"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["4d637064d608752565d4f9f41b2497dfdfdde50e"]},"commit2Childs":{"634f330c54fd3f9f491d52036dc3f40b4f4d8934":["5ad80176d91a6f70fe93880e43dfd697dc4e63ed","4d637064d608752565d4f9f41b2497dfdfdde50e"],"5ad80176d91a6f70fe93880e43dfd697dc4e63ed":["4d637064d608752565d4f9f41b2497dfdfdde50e"],"d3c397b1515e745d8b12d70edfc0e17cb7eac7f0":["8917bfede3b4ca30f4305c1e391e9218959cd723","1a88d7b0899b7d22dcbd4cf8ca35d9ec9850ab98","2f948dd442d23baa6cbb28daf77c8db78b351329"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["fb8af2aec0a8574cf50cad6939d4475179595eca","4e6354dd7c71fe122926fc53d7d29f715b1283db"],"8917bfede3b4ca30f4305c1e391e9218959cd723":[],"fa80a35d7c4b2b1e83082b275e3e8328ab93db52":["634f330c54fd3f9f491d52036dc3f40b4f4d8934"],"fb8af2aec0a8574cf50cad6939d4475179595eca":["d3c397b1515e745d8b12d70edfc0e17cb7eac7f0","4e6354dd7c71fe122926fc53d7d29f715b1283db"],"1a88d7b0899b7d22dcbd4cf8ca35d9ec9850ab98":["2f948dd442d23baa6cbb28daf77c8db78b351329"],"4d637064d608752565d4f9f41b2497dfdfdde50e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"4e6354dd7c71fe122926fc53d7d29f715b1283db":["8917bfede3b4ca30f4305c1e391e9218959cd723"],"2f948dd442d23baa6cbb28daf77c8db78b351329":["fa80a35d7c4b2b1e83082b275e3e8328ab93db52"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["8917bfede3b4ca30f4305c1e391e9218959cd723","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}