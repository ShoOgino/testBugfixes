{"path":"src/java/org/apache/lucene/search/NumericRangeQuery#equals(Object).mjava","commits":[{"id":"53b6c192847de8643a5da505cc433cbf8476a175","date":1245413392,"type":0,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/java/org/apache/lucene/search/NumericRangeQuery#equals(Object).mjava","pathOld":"/dev/null","sourceNew":"  //@Override\n  public final boolean equals(final Object o) {\n    if (o==this) return true;\n    if (o==null) return false;\n    if (o instanceof NumericRangeQuery) {\n      final NumericRangeQuery q=(NumericRangeQuery)o;\n      return (\n        field==q.field &&\n        (q.min == null ? min == null : q.min.equals(min)) &&\n        (q.max == null ? max == null : q.max.equals(max)) &&\n        minInclusive == q.minInclusive &&\n        maxInclusive == q.maxInclusive &&\n        precisionStep == q.precisionStep &&\n        getBoost() == q.getBoost()\n      );\n    }\n    return false;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"45ede1fd11bf564bb5c8c195d421782675d1e61c","date":1246809712,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/java/org/apache/lucene/search/NumericRangeQuery#equals(Object).mjava","pathOld":"src/java/org/apache/lucene/search/NumericRangeQuery#equals(Object).mjava","sourceNew":"  //@Override\n  public final boolean equals(final Object o) {\n    if (o==this) return true;\n    if (!super.equals(o))\n      return false;\n    if (o instanceof NumericRangeQuery) {\n      final NumericRangeQuery q=(NumericRangeQuery)o;\n      return (\n        field==q.field &&\n        (q.min == null ? min == null : q.min.equals(min)) &&\n        (q.max == null ? max == null : q.max.equals(max)) &&\n        minInclusive == q.minInclusive &&\n        maxInclusive == q.maxInclusive &&\n        precisionStep == q.precisionStep\n      );\n    }\n    return false;\n  }\n\n","sourceOld":"  //@Override\n  public final boolean equals(final Object o) {\n    if (o==this) return true;\n    if (o==null) return false;\n    if (o instanceof NumericRangeQuery) {\n      final NumericRangeQuery q=(NumericRangeQuery)o;\n      return (\n        field==q.field &&\n        (q.min == null ? min == null : q.min.equals(min)) &&\n        (q.max == null ? max == null : q.max.equals(max)) &&\n        minInclusive == q.minInclusive &&\n        maxInclusive == q.maxInclusive &&\n        precisionStep == q.precisionStep &&\n        getBoost() == q.getBoost()\n      );\n    }\n    return false;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"70a9e462a51fd525218b83cdc33329f5ee00ca20","date":1254431499,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/java/org/apache/lucene/search/NumericRangeQuery#equals(Object).mjava","pathOld":"src/java/org/apache/lucene/search/NumericRangeQuery#equals(Object).mjava","sourceNew":"  @Override\n  public final boolean equals(final Object o) {\n    if (o==this) return true;\n    if (!super.equals(o))\n      return false;\n    if (o instanceof NumericRangeQuery) {\n      final NumericRangeQuery q=(NumericRangeQuery)o;\n      return (\n        field==q.field &&\n        (q.min == null ? min == null : q.min.equals(min)) &&\n        (q.max == null ? max == null : q.max.equals(max)) &&\n        minInclusive == q.minInclusive &&\n        maxInclusive == q.maxInclusive &&\n        precisionStep == q.precisionStep\n      );\n    }\n    return false;\n  }\n\n","sourceOld":"  //@Override\n  public final boolean equals(final Object o) {\n    if (o==this) return true;\n    if (!super.equals(o))\n      return false;\n    if (o instanceof NumericRangeQuery) {\n      final NumericRangeQuery q=(NumericRangeQuery)o;\n      return (\n        field==q.field &&\n        (q.min == null ? min == null : q.min.equals(min)) &&\n        (q.max == null ? max == null : q.max.equals(max)) &&\n        minInclusive == q.minInclusive &&\n        maxInclusive == q.maxInclusive &&\n        precisionStep == q.precisionStep\n      );\n    }\n    return false;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/search/NumericRangeQuery#equals(Object).mjava","pathOld":"src/java/org/apache/lucene/search/NumericRangeQuery#equals(Object).mjava","sourceNew":"  @Override\n  public final boolean equals(final Object o) {\n    if (o==this) return true;\n    if (!super.equals(o))\n      return false;\n    if (o instanceof NumericRangeQuery) {\n      final NumericRangeQuery q=(NumericRangeQuery)o;\n      return (\n        field==q.field &&\n        (q.min == null ? min == null : q.min.equals(min)) &&\n        (q.max == null ? max == null : q.max.equals(max)) &&\n        minInclusive == q.minInclusive &&\n        maxInclusive == q.maxInclusive &&\n        precisionStep == q.precisionStep\n      );\n    }\n    return false;\n  }\n\n","sourceOld":"  @Override\n  public final boolean equals(final Object o) {\n    if (o==this) return true;\n    if (!super.equals(o))\n      return false;\n    if (o instanceof NumericRangeQuery) {\n      final NumericRangeQuery q=(NumericRangeQuery)o;\n      return (\n        field==q.field &&\n        (q.min == null ? min == null : q.min.equals(min)) &&\n        (q.max == null ? max == null : q.max.equals(max)) &&\n        minInclusive == q.minInclusive &&\n        maxInclusive == q.maxInclusive &&\n        precisionStep == q.precisionStep\n      );\n    }\n    return false;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"45ede1fd11bf564bb5c8c195d421782675d1e61c":["53b6c192847de8643a5da505cc433cbf8476a175"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"70a9e462a51fd525218b83cdc33329f5ee00ca20":["45ede1fd11bf564bb5c8c195d421782675d1e61c"],"53b6c192847de8643a5da505cc433cbf8476a175":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["70a9e462a51fd525218b83cdc33329f5ee00ca20"]},"commit2Childs":{"45ede1fd11bf564bb5c8c195d421782675d1e61c":["70a9e462a51fd525218b83cdc33329f5ee00ca20"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["53b6c192847de8643a5da505cc433cbf8476a175"],"53b6c192847de8643a5da505cc433cbf8476a175":["45ede1fd11bf564bb5c8c195d421782675d1e61c"],"70a9e462a51fd525218b83cdc33329f5ee00ca20":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}