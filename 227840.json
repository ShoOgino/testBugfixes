{"path":"lucene/src/test/org/apache/lucene/search/TestQueryTermVector#checkGold(String[],String[],int[],int[]).mjava","commits":[{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/search/TestQueryTermVector#checkGold(String[],String[],int[],int[]).mjava","pathOld":"src/test/org/apache/lucene/search/TestQueryTermVector#checkGold(String[],String[],int[],int[]).mjava","sourceNew":"  private void checkGold(String[] terms, String[] gold, int[] freq, int[] goldFreqs) {\n    for (int i = 0; i < terms.length; i++) {\n      assertTrue(terms[i].equals(gold[i]));\n      assertTrue(freq[i] == goldFreqs[i]);\n    }\n  }\n\n","sourceOld":"  private void checkGold(String[] terms, String[] gold, int[] freq, int[] goldFreqs) {\n    for (int i = 0; i < terms.length; i++) {\n      assertTrue(terms[i].equals(gold[i]));\n      assertTrue(freq[i] == goldFreqs[i]);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4f29ba80b723649f5feb7e37afe1a558dd2c1304","date":1278318805,"type":5,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/search/TestQueryTermVector#checkGold(BytesRef[],BytesRef[],int[],int[]).mjava","pathOld":"lucene/src/test/org/apache/lucene/search/TestQueryTermVector#checkGold(String[],String[],int[],int[]).mjava","sourceNew":"  private void checkGold(BytesRef[] terms, BytesRef[] gold, int[] freq, int[] goldFreqs) {\n    for (int i = 0; i < terms.length; i++) {\n      assertTrue(terms[i].equals(gold[i]));\n      assertTrue(freq[i] == goldFreqs[i]);\n    }\n  }\n\n","sourceOld":"  private void checkGold(String[] terms, String[] gold, int[] freq, int[] goldFreqs) {\n    for (int i = 0; i < terms.length; i++) {\n      assertTrue(terms[i].equals(gold[i]));\n      assertTrue(freq[i] == goldFreqs[i]);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5f4e87790277826a2aea119328600dfb07761f32","date":1279827275,"type":4,"author":"Michael Busch","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/src/test/org/apache/lucene/search/TestQueryTermVector#checkGold(String[],String[],int[],int[]).mjava","sourceNew":null,"sourceOld":"  private void checkGold(String[] terms, String[] gold, int[] freq, int[] goldFreqs) {\n    for (int i = 0; i < terms.length; i++) {\n      assertTrue(terms[i].equals(gold[i]));\n      assertTrue(freq[i] == goldFreqs[i]);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"4f29ba80b723649f5feb7e37afe1a558dd2c1304":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"5f4e87790277826a2aea119328600dfb07761f32":["9454a6510e2db155fb01faa5c049b06ece95fab9","4f29ba80b723649f5feb7e37afe1a558dd2c1304"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["4f29ba80b723649f5feb7e37afe1a558dd2c1304"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"4f29ba80b723649f5feb7e37afe1a558dd2c1304":["5f4e87790277826a2aea119328600dfb07761f32","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"5f4e87790277826a2aea119328600dfb07761f32":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["4f29ba80b723649f5feb7e37afe1a558dd2c1304","5f4e87790277826a2aea119328600dfb07761f32"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["5f4e87790277826a2aea119328600dfb07761f32","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}