{"path":"modules/analysis/common/src/java/org/tartarus/snowball/ext/CatalanStemmer#stem().mjava","commits":[{"id":"a4193dd6874631c7088239f186fb6e5b2f02eeb1","date":1283035345,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"modules/analysis/common/src/java/org/tartarus/snowball/ext/CatalanStemmer#stem().mjava","pathOld":"/dev/null","sourceNew":"                public boolean stem() {\n            int v_1;\n            int v_2;\n            int v_3;\n            int v_4;\n            int v_5;\n            int v_6;\n                    // (, line 190\n                    // do, line 191\n                    v_1 = cursor;\n                    lab0: do {\n                        // call mark_regions, line 191\n                        if (!r_mark_regions())\n                        {\n                            break lab0;\n                        }\n                    } while (false);\n                    cursor = v_1;\n                    // backwards, line 192\n                    limit_backward = cursor; cursor = limit;\n                    // (, line 192\n                    // do, line 193\n                    v_2 = limit - cursor;\n                    lab1: do {\n                        // call attached_pronoun, line 193\n                        if (!r_attached_pronoun())\n                        {\n                            break lab1;\n                        }\n                    } while (false);\n                    cursor = limit - v_2;\n                    // do, line 194\n                    v_3 = limit - cursor;\n                    lab2: do {\n                        // (, line 194\n                        // or, line 194\n                        lab3: do {\n                            v_4 = limit - cursor;\n                            lab4: do {\n                                // call standard_suffix, line 194\n                                if (!r_standard_suffix())\n                                {\n                                    break lab4;\n                                }\n                                break lab3;\n                            } while (false);\n                            cursor = limit - v_4;\n                            // call verb_suffix, line 195\n                            if (!r_verb_suffix())\n                            {\n                                break lab2;\n                            }\n                        } while (false);\n                    } while (false);\n                    cursor = limit - v_3;\n                    // do, line 197\n                    v_5 = limit - cursor;\n                    lab5: do {\n                        // call residual_suffix, line 197\n                        if (!r_residual_suffix())\n                        {\n                            break lab5;\n                        }\n                    } while (false);\n                    cursor = limit - v_5;\n                    cursor = limit_backward;                    // do, line 199\n                    v_6 = cursor;\n                    lab6: do {\n                        // call cleaning, line 199\n                        if (!r_cleaning())\n                        {\n                            break lab6;\n                        }\n                    } while (false);\n                    cursor = v_6;\n                    return true;\n                }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","date":1292920096,"type":0,"author":"Michael Busch","isMerge":true,"pathNew":"modules/analysis/common/src/java/org/tartarus/snowball/ext/CatalanStemmer#stem().mjava","pathOld":"/dev/null","sourceNew":"                public boolean stem() {\n            int v_1;\n            int v_2;\n            int v_3;\n            int v_4;\n            int v_5;\n            int v_6;\n                    // (, line 190\n                    // do, line 191\n                    v_1 = cursor;\n                    lab0: do {\n                        // call mark_regions, line 191\n                        if (!r_mark_regions())\n                        {\n                            break lab0;\n                        }\n                    } while (false);\n                    cursor = v_1;\n                    // backwards, line 192\n                    limit_backward = cursor; cursor = limit;\n                    // (, line 192\n                    // do, line 193\n                    v_2 = limit - cursor;\n                    lab1: do {\n                        // call attached_pronoun, line 193\n                        if (!r_attached_pronoun())\n                        {\n                            break lab1;\n                        }\n                    } while (false);\n                    cursor = limit - v_2;\n                    // do, line 194\n                    v_3 = limit - cursor;\n                    lab2: do {\n                        // (, line 194\n                        // or, line 194\n                        lab3: do {\n                            v_4 = limit - cursor;\n                            lab4: do {\n                                // call standard_suffix, line 194\n                                if (!r_standard_suffix())\n                                {\n                                    break lab4;\n                                }\n                                break lab3;\n                            } while (false);\n                            cursor = limit - v_4;\n                            // call verb_suffix, line 195\n                            if (!r_verb_suffix())\n                            {\n                                break lab2;\n                            }\n                        } while (false);\n                    } while (false);\n                    cursor = limit - v_3;\n                    // do, line 197\n                    v_5 = limit - cursor;\n                    lab5: do {\n                        // call residual_suffix, line 197\n                        if (!r_residual_suffix())\n                        {\n                            break lab5;\n                        }\n                    } while (false);\n                    cursor = limit - v_5;\n                    cursor = limit_backward;                    // do, line 199\n                    v_6 = cursor;\n                    lab6: do {\n                        // call cleaning, line 199\n                        if (!r_cleaning())\n                        {\n                            break lab6;\n                        }\n                    } while (false);\n                    cursor = v_6;\n                    return true;\n                }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/common/src/java/org/tartarus/snowball/ext/CatalanStemmer#stem().mjava","pathOld":"modules/analysis/common/src/java/org/tartarus/snowball/ext/CatalanStemmer#stem().mjava","sourceNew":"                public boolean stem() {\n            int v_1;\n            int v_2;\n            int v_3;\n            int v_4;\n            int v_5;\n            int v_6;\n                    // (, line 190\n                    // do, line 191\n                    v_1 = cursor;\n                    lab0: do {\n                        // call mark_regions, line 191\n                        if (!r_mark_regions())\n                        {\n                            break lab0;\n                        }\n                    } while (false);\n                    cursor = v_1;\n                    // backwards, line 192\n                    limit_backward = cursor; cursor = limit;\n                    // (, line 192\n                    // do, line 193\n                    v_2 = limit - cursor;\n                    lab1: do {\n                        // call attached_pronoun, line 193\n                        if (!r_attached_pronoun())\n                        {\n                            break lab1;\n                        }\n                    } while (false);\n                    cursor = limit - v_2;\n                    // do, line 194\n                    v_3 = limit - cursor;\n                    lab2: do {\n                        // (, line 194\n                        // or, line 194\n                        lab3: do {\n                            v_4 = limit - cursor;\n                            lab4: do {\n                                // call standard_suffix, line 194\n                                if (!r_standard_suffix())\n                                {\n                                    break lab4;\n                                }\n                                break lab3;\n                            } while (false);\n                            cursor = limit - v_4;\n                            // call verb_suffix, line 195\n                            if (!r_verb_suffix())\n                            {\n                                break lab2;\n                            }\n                        } while (false);\n                    } while (false);\n                    cursor = limit - v_3;\n                    // do, line 197\n                    v_5 = limit - cursor;\n                    lab5: do {\n                        // call residual_suffix, line 197\n                        if (!r_residual_suffix())\n                        {\n                            break lab5;\n                        }\n                    } while (false);\n                    cursor = limit - v_5;\n                    cursor = limit_backward;                    // do, line 199\n                    v_6 = cursor;\n                    lab6: do {\n                        // call cleaning, line 199\n                        if (!r_cleaning())\n                        {\n                            break lab6;\n                        }\n                    } while (false);\n                    cursor = v_6;\n                    return true;\n                }\n\n","sourceOld":"                public boolean stem() {\n            int v_1;\n            int v_2;\n            int v_3;\n            int v_4;\n            int v_5;\n            int v_6;\n                    // (, line 190\n                    // do, line 191\n                    v_1 = cursor;\n                    lab0: do {\n                        // call mark_regions, line 191\n                        if (!r_mark_regions())\n                        {\n                            break lab0;\n                        }\n                    } while (false);\n                    cursor = v_1;\n                    // backwards, line 192\n                    limit_backward = cursor; cursor = limit;\n                    // (, line 192\n                    // do, line 193\n                    v_2 = limit - cursor;\n                    lab1: do {\n                        // call attached_pronoun, line 193\n                        if (!r_attached_pronoun())\n                        {\n                            break lab1;\n                        }\n                    } while (false);\n                    cursor = limit - v_2;\n                    // do, line 194\n                    v_3 = limit - cursor;\n                    lab2: do {\n                        // (, line 194\n                        // or, line 194\n                        lab3: do {\n                            v_4 = limit - cursor;\n                            lab4: do {\n                                // call standard_suffix, line 194\n                                if (!r_standard_suffix())\n                                {\n                                    break lab4;\n                                }\n                                break lab3;\n                            } while (false);\n                            cursor = limit - v_4;\n                            // call verb_suffix, line 195\n                            if (!r_verb_suffix())\n                            {\n                                break lab2;\n                            }\n                        } while (false);\n                    } while (false);\n                    cursor = limit - v_3;\n                    // do, line 197\n                    v_5 = limit - cursor;\n                    lab5: do {\n                        // call residual_suffix, line 197\n                        if (!r_residual_suffix())\n                        {\n                            break lab5;\n                        }\n                    } while (false);\n                    cursor = limit - v_5;\n                    cursor = limit_backward;                    // do, line 199\n                    v_6 = cursor;\n                    lab6: do {\n                        // call cleaning, line 199\n                        if (!r_cleaning())\n                        {\n                            break lab6;\n                        }\n                    } while (false);\n                    cursor = v_6;\n                    return true;\n                }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a4193dd6874631c7088239f186fb6e5b2f02eeb1":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["a4193dd6874631c7088239f186fb6e5b2f02eeb1"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","a4193dd6874631c7088239f186fb6e5b2f02eeb1"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b89678825b68eccaf09e6ab71675fc0b0af1e099"]},"commit2Childs":{"a4193dd6874631c7088239f186fb6e5b2f02eeb1":["b89678825b68eccaf09e6ab71675fc0b0af1e099","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["a4193dd6874631c7088239f186fb6e5b2f02eeb1","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}