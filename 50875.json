{"path":"lucene/src/java/org/apache/lucene/search/Collector#setNextReader(AtomicReaderContext).mjava","commits":[{"id":"323f871ffe96b871d8c534a614be60751bb023c2","date":1294820532,"type":0,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/search/Collector#setNextReader(AtomicReaderContext).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Called before collecting from each {@link AtomicReaderContext}. All doc ids in\n   * {@link #collect(int)} will correspond to {@link ReaderContext#reader}.\n   * \n   * Add {@link AtomicReaderContext#docBase} to the current  {@link ReaderContext#reader}'s\n   * internal document id to re-base ids in {@link #collect(int)}.\n   * \n   * @param context\n   *          next atomic reader context\n   */\n  public abstract void setNextReader(AtomicReaderContext context) throws IOException;\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"868da859b43505d9d2a023bfeae6dd0c795f5295","date":1294948401,"type":0,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/search/Collector#setNextReader(AtomicReaderContext).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Called before collecting from each {@link AtomicReaderContext}. All doc ids in\n   * {@link #collect(int)} will correspond to {@link ReaderContext#reader}.\n   * \n   * Add {@link AtomicReaderContext#docBase} to the current  {@link ReaderContext#reader}'s\n   * internal document id to re-base ids in {@link #collect(int)}.\n   * \n   * @param context\n   *          next atomic reader context\n   */\n  public abstract void setNextReader(AtomicReaderContext context) throws IOException;\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"29ef99d61cda9641b6250bf9567329a6e65f901d","date":1297244127,"type":0,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/search/Collector#setNextReader(AtomicReaderContext).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Called before collecting from each {@link AtomicReaderContext}. All doc ids in\n   * {@link #collect(int)} will correspond to {@link ReaderContext#reader}.\n   * \n   * Add {@link AtomicReaderContext#docBase} to the current  {@link ReaderContext#reader}'s\n   * internal document id to re-base ids in {@link #collect(int)}.\n   * \n   * @param context\n   *          next atomic reader context\n   */\n  public abstract void setNextReader(AtomicReaderContext context) throws IOException;\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8493985e6883b3fa8231d172694d2aa3a85cb182","date":1327920390,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/search/Collector#setNextReader(AtomicReaderContext).mjava","pathOld":"lucene/src/java/org/apache/lucene/search/Collector#setNextReader(AtomicReaderContext).mjava","sourceNew":"  /**\n   * Called before collecting from each {@link AtomicReaderContext}. All doc ids in\n   * {@link #collect(int)} will correspond to {@link IndexReaderContext#reader}.\n   * \n   * Add {@link AtomicReaderContext#docBase} to the current  {@link IndexReaderContext#reader}'s\n   * internal document id to re-base ids in {@link #collect(int)}.\n   * \n   * @param context\n   *          next atomic reader context\n   */\n  public abstract void setNextReader(AtomicReaderContext context) throws IOException;\n\n","sourceOld":"  /**\n   * Called before collecting from each {@link AtomicReaderContext}. All doc ids in\n   * {@link #collect(int)} will correspond to {@link ReaderContext#reader}.\n   * \n   * Add {@link AtomicReaderContext#docBase} to the current  {@link ReaderContext#reader}'s\n   * internal document id to re-base ids in {@link #collect(int)}.\n   * \n   * @param context\n   *          next atomic reader context\n   */\n  public abstract void setNextReader(AtomicReaderContext context) throws IOException;\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5cab9a86bd67202d20b6adc463008c8e982b070a","date":1327966443,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/search/Collector#setNextReader(AtomicReaderContext).mjava","pathOld":"lucene/src/java/org/apache/lucene/search/Collector#setNextReader(AtomicReaderContext).mjava","sourceNew":"  /**\n   * Called before collecting from each {@link AtomicReaderContext}. All doc ids in\n   * {@link #collect(int)} will correspond to {@link IndexReaderContext#reader}.\n   * \n   * Add {@link AtomicReaderContext#docBase} to the current  {@link IndexReaderContext#reader}'s\n   * internal document id to re-base ids in {@link #collect(int)}.\n   * \n   * @param context\n   *          next atomic reader context\n   */\n  public abstract void setNextReader(AtomicReaderContext context) throws IOException;\n\n","sourceOld":"  /**\n   * Called before collecting from each {@link AtomicReaderContext}. All doc ids in\n   * {@link #collect(int)} will correspond to {@link ReaderContext#reader}.\n   * \n   * Add {@link AtomicReaderContext#docBase} to the current  {@link ReaderContext#reader}'s\n   * internal document id to re-base ids in {@link #collect(int)}.\n   * \n   * @param context\n   *          next atomic reader context\n   */\n  public abstract void setNextReader(AtomicReaderContext context) throws IOException;\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":5,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/Collector#setNextReader(AtomicReaderContext).mjava","pathOld":"lucene/src/java/org/apache/lucene/search/Collector#setNextReader(AtomicReaderContext).mjava","sourceNew":"  /**\n   * Called before collecting from each {@link AtomicReaderContext}. All doc ids in\n   * {@link #collect(int)} will correspond to {@link IndexReaderContext#reader}.\n   * \n   * Add {@link AtomicReaderContext#docBase} to the current  {@link IndexReaderContext#reader}'s\n   * internal document id to re-base ids in {@link #collect(int)}.\n   * \n   * @param context\n   *          next atomic reader context\n   */\n  public abstract void setNextReader(AtomicReaderContext context) throws IOException;\n\n","sourceOld":"  /**\n   * Called before collecting from each {@link AtomicReaderContext}. All doc ids in\n   * {@link #collect(int)} will correspond to {@link IndexReaderContext#reader}.\n   * \n   * Add {@link AtomicReaderContext#docBase} to the current  {@link IndexReaderContext#reader}'s\n   * internal document id to re-base ids in {@link #collect(int)}.\n   * \n   * @param context\n   *          next atomic reader context\n   */\n  public abstract void setNextReader(AtomicReaderContext context) throws IOException;\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"8493985e6883b3fa8231d172694d2aa3a85cb182":["323f871ffe96b871d8c534a614be60751bb023c2"],"323f871ffe96b871d8c534a614be60751bb023c2":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["5cab9a86bd67202d20b6adc463008c8e982b070a"],"29ef99d61cda9641b6250bf9567329a6e65f901d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","323f871ffe96b871d8c534a614be60751bb023c2"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"868da859b43505d9d2a023bfeae6dd0c795f5295":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","323f871ffe96b871d8c534a614be60751bb023c2"],"5cab9a86bd67202d20b6adc463008c8e982b070a":["323f871ffe96b871d8c534a614be60751bb023c2","8493985e6883b3fa8231d172694d2aa3a85cb182"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"]},"commit2Childs":{"8493985e6883b3fa8231d172694d2aa3a85cb182":["5cab9a86bd67202d20b6adc463008c8e982b070a"],"323f871ffe96b871d8c534a614be60751bb023c2":["8493985e6883b3fa8231d172694d2aa3a85cb182","29ef99d61cda9641b6250bf9567329a6e65f901d","868da859b43505d9d2a023bfeae6dd0c795f5295","5cab9a86bd67202d20b6adc463008c8e982b070a"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"29ef99d61cda9641b6250bf9567329a6e65f901d":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["323f871ffe96b871d8c534a614be60751bb023c2","29ef99d61cda9641b6250bf9567329a6e65f901d","868da859b43505d9d2a023bfeae6dd0c795f5295"],"868da859b43505d9d2a023bfeae6dd0c795f5295":[],"5cab9a86bd67202d20b6adc463008c8e982b070a":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["29ef99d61cda9641b6250bf9567329a6e65f901d","868da859b43505d9d2a023bfeae6dd0c795f5295","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}