{"path":"lucene/expressions/src/java/org/apache/lucene/expressions/js/VariableContext#parse(String).mjava","commits":[{"id":"5b6aa541ae5bb3c0260e1c263d6897a7925fa00c","date":1404947938,"type":0,"author":"Ryan Ernst","isMerge":false,"pathNew":"lucene/expressions/src/java/org/apache/lucene/expressions/js/VariableContext#parse(String).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Parses a normalized javascript variable. All strings in the variable should be single quoted,\n   * and no spaces (except possibly within strings).\n   */\n  public static final VariableContext[] parse(String variable) {\n    char[] text = variable.toCharArray();\n    List<VariableContext> contexts = new ArrayList<>();\n    int i = addMember(text, 0, contexts); // base variable is a \"member\" of the global namespace\n    while (i < text.length) {\n      if (text[i] == '[') {\n        if (text[++i] == '\\'') {\n          i = addStringIndex(text, i, contexts);\n        } else {\n          i = addIntIndex(text, i, contexts);\n        }\n        ++i; // move past end bracket\n      } else { // text[i] == '.', ie object member\n        i = addMember(text, i + 1, contexts);\n      }\n    }\n    return contexts.toArray(new VariableContext[contexts.size()]);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"5b6aa541ae5bb3c0260e1c263d6897a7925fa00c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["5b6aa541ae5bb3c0260e1c263d6897a7925fa00c"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["5b6aa541ae5bb3c0260e1c263d6897a7925fa00c"],"5b6aa541ae5bb3c0260e1c263d6897a7925fa00c":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}