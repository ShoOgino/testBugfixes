{"path":"lucene/core/src/java/org/apache/lucene/util/BitUtil#zigZagEncode(long).mjava","commits":[{"id":"1995eb2e4c2ebf223c9eeefc5cbab3992bc1530b","date":1397228189,"type":0,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/BitUtil#zigZagEncode(long).mjava","pathOld":"/dev/null","sourceNew":"   /**\n    * <a href=\"https://developers.google.com/protocol-buffers/docs/encoding#types\">Zig-zag</a>\n    * encode the provided long. Assuming the input is a signed long whose\n    * absolute value can be stored on <tt>n</tt> bits, the returned value will\n    * be an unsigned long that can be stored on <tt>n+1</tt> bits.\n    */\n   public static long zigZagEncode(long l) {\n     return (l >> 63) ^ (l << 1);\n   }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9e3751ad4cc85eb979419cf5469dfba266eae56a","date":1581046252,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/BitUtil#zigZagEncode(long).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/BitUtil#zigZagEncode(long).mjava","sourceNew":"   /**\n    * <a href=\"https://developers.google.com/protocol-buffers/docs/encoding#types\">Zig-zag</a>\n    * encode the provided long. Assuming the input is a signed long whose\n    * absolute value can be stored on <code>n</code> bits, the returned value will\n    * be an unsigned long that can be stored on <code>n+1</code> bits.\n    */\n   public static long zigZagEncode(long l) {\n     return (l >> 63) ^ (l << 1);\n   }\n\n","sourceOld":"   /**\n    * <a href=\"https://developers.google.com/protocol-buffers/docs/encoding#types\">Zig-zag</a>\n    * encode the provided long. Assuming the input is a signed long whose\n    * absolute value can be stored on <tt>n</tt> bits, the returned value will\n    * be an unsigned long that can be stored on <tt>n+1</tt> bits.\n    */\n   public static long zigZagEncode(long l) {\n     return (l >> 63) ^ (l << 1);\n   }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"9e3751ad4cc85eb979419cf5469dfba266eae56a":["1995eb2e4c2ebf223c9eeefc5cbab3992bc1530b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9e3751ad4cc85eb979419cf5469dfba266eae56a"],"1995eb2e4c2ebf223c9eeefc5cbab3992bc1530b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"9e3751ad4cc85eb979419cf5469dfba266eae56a":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["1995eb2e4c2ebf223c9eeefc5cbab3992bc1530b"],"1995eb2e4c2ebf223c9eeefc5cbab3992bc1530b":["9e3751ad4cc85eb979419cf5469dfba266eae56a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}