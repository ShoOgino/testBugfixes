{"path":"solr/core/src/java/org/apache/solr/cloud/LeaderElector#getSeqs(List[String]).mjava","commits":[{"id":"2c007e7c4cf8c55bc2a5884e315123afaaeec87f","date":1327520966,"type":0,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/LeaderElector#getSeqs(List[String]).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Returns int list given list of form n_0000000001, n_0000000003, etc.\n   * \n   * @param seqs\n   * @return\n   */\n  private List<Integer> getSeqs(List<String> seqs) {\n    List<Integer> intSeqs = new ArrayList<Integer>(seqs.size());\n    for (String seq : seqs) {\n      intSeqs.add(getSeq(seq));\n    }\n    return intSeqs;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a3c68e20c73359a10cf3eb4a35c9fa7ab1f3c30d","date":1327523564,"type":0,"author":"Robert Muir","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/cloud/LeaderElector#getSeqs(List[String]).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Returns int list given list of form n_0000000001, n_0000000003, etc.\n   * \n   * @param seqs\n   * @return\n   */\n  private List<Integer> getSeqs(List<String> seqs) {\n    List<Integer> intSeqs = new ArrayList<Integer>(seqs.size());\n    for (String seq : seqs) {\n      intSeqs.add(getSeq(seq));\n    }\n    return intSeqs;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0d22ac6a4146774c1bc8400160fc0b6150294e92","date":1327528604,"type":0,"author":"Uwe Schindler","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/cloud/LeaderElector#getSeqs(List[String]).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Returns int list given list of form n_0000000001, n_0000000003, etc.\n   * \n   * @param seqs\n   * @return\n   */\n  private List<Integer> getSeqs(List<String> seqs) {\n    List<Integer> intSeqs = new ArrayList<Integer>(seqs.size());\n    for (String seq : seqs) {\n      intSeqs.add(getSeq(seq));\n    }\n    return intSeqs;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f42adde674c3832964de02a512782c0d752a1ff7","date":1347295064,"type":3,"author":"Steven Rowe","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/LeaderElector#getSeqs(List[String]).mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/LeaderElector#getSeqs(List[String]).mjava","sourceNew":"  /**\n   * Returns int list given list of form n_0000000001, n_0000000003, etc.\n   */\n  private List<Integer> getSeqs(List<String> seqs) {\n    List<Integer> intSeqs = new ArrayList<Integer>(seqs.size());\n    for (String seq : seqs) {\n      intSeqs.add(getSeq(seq));\n    }\n    return intSeqs;\n  }\n\n","sourceOld":"  /**\n   * Returns int list given list of form n_0000000001, n_0000000003, etc.\n   * \n   * @param seqs\n   * @return\n   */\n  private List<Integer> getSeqs(List<String> seqs) {\n    List<Integer> intSeqs = new ArrayList<Integer>(seqs.size());\n    for (String seq : seqs) {\n      intSeqs.add(getSeq(seq));\n    }\n    return intSeqs;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a6378064655e76cd7b908b1cab4ce425b384b508","date":1347656715,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/LeaderElector#getSeqs(List[String]).mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/LeaderElector#getSeqs(List[String]).mjava","sourceNew":"  /**\n   * Returns int list given list of form n_0000000001, n_0000000003, etc.\n   * \n   * @param seqs\n   * @return\n   */\n  private List<Integer> getSeqs(List<String> seqs) {\n    List<Integer> intSeqs = new ArrayList<Integer>(seqs.size());\n    for (String seq : seqs) {\n      intSeqs.add(getSeq(seq));\n    }\n    return intSeqs;\n  }\n\n","sourceOld":"  /**\n   * Returns int list given list of form n_0000000001, n_0000000003, etc.\n   */\n  private List<Integer> getSeqs(List<String> seqs) {\n    List<Integer> intSeqs = new ArrayList<Integer>(seqs.size());\n    for (String seq : seqs) {\n      intSeqs.add(getSeq(seq));\n    }\n    return intSeqs;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"df77b4a17aa6597ad6819c24a5b6d184455d7623","date":1347760545,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/LeaderElector#getSeqs(List[String]).mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/LeaderElector#getSeqs(List[String]).mjava","sourceNew":"  /**\n   * Returns int list given list of form n_0000000001, n_0000000003, etc.\n   * \n   * @param string seqs\n   * @return int seqs\n   */\n  private List<Integer> getSeqs(List<String> seqs) {\n    List<Integer> intSeqs = new ArrayList<Integer>(seqs.size());\n    for (String seq : seqs) {\n      intSeqs.add(getSeq(seq));\n    }\n    return intSeqs;\n  }\n\n","sourceOld":"  /**\n   * Returns int list given list of form n_0000000001, n_0000000003, etc.\n   * \n   * @param seqs\n   * @return\n   */\n  private List<Integer> getSeqs(List<String> seqs) {\n    List<Integer> intSeqs = new ArrayList<Integer>(seqs.size());\n    for (String seq : seqs) {\n      intSeqs.add(getSeq(seq));\n    }\n    return intSeqs;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"cb89814ad85fb3340f275e6b76a0bc319a6cc02b","date":1348100270,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/LeaderElector#getSeqs(List[String]).mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/LeaderElector#getSeqs(List[String]).mjava","sourceNew":"  /**\n   * Returns int list given list of form n_0000000001, n_0000000003, etc.\n   * \n   * @return int seqs\n   */\n  private List<Integer> getSeqs(List<String> seqs) {\n    List<Integer> intSeqs = new ArrayList<Integer>(seqs.size());\n    for (String seq : seqs) {\n      intSeqs.add(getSeq(seq));\n    }\n    return intSeqs;\n  }\n\n","sourceOld":"  /**\n   * Returns int list given list of form n_0000000001, n_0000000003, etc.\n   * \n   * @param string seqs\n   * @return int seqs\n   */\n  private List<Integer> getSeqs(List<String> seqs) {\n    List<Integer> intSeqs = new ArrayList<Integer>(seqs.size());\n    for (String seq : seqs) {\n      intSeqs.add(getSeq(seq));\n    }\n    return intSeqs;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"634f330c54fd3f9f491d52036dc3f40b4f4d8934","date":1394635157,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/LeaderElector#getSeqs(List[String]).mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/LeaderElector#getSeqs(List[String]).mjava","sourceNew":"  /**\n   * Returns int list given list of form n_0000000001, n_0000000003, etc.\n   * \n   * @return int seqs\n   */\n  private List<Integer> getSeqs(List<String> seqs) {\n    List<Integer> intSeqs = new ArrayList<>(seqs.size());\n    for (String seq : seqs) {\n      intSeqs.add(getSeq(seq));\n    }\n    return intSeqs;\n  }\n\n","sourceOld":"  /**\n   * Returns int list given list of form n_0000000001, n_0000000003, etc.\n   * \n   * @return int seqs\n   */\n  private List<Integer> getSeqs(List<String> seqs) {\n    List<Integer> intSeqs = new ArrayList<Integer>(seqs.size());\n    for (String seq : seqs) {\n      intSeqs.add(getSeq(seq));\n    }\n    return intSeqs;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a1ea01e15f477524516b07b300a3ae03d1bec9bc","date":1455919598,"type":4,"author":"markrmiller","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/core/src/java/org/apache/solr/cloud/LeaderElector#getSeqs(List[String]).mjava","sourceNew":null,"sourceOld":"  /**\n   * Returns int list given list of form n_0000000001, n_0000000003, etc.\n   * \n   * @return int seqs\n   */\n  private List<Integer> getSeqs(List<String> seqs) {\n    List<Integer> intSeqs = new ArrayList<>(seqs.size());\n    for (String seq : seqs) {\n      intSeqs.add(getSeq(seq));\n    }\n    return intSeqs;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"634f330c54fd3f9f491d52036dc3f40b4f4d8934":["cb89814ad85fb3340f275e6b76a0bc319a6cc02b"],"cb89814ad85fb3340f275e6b76a0bc319a6cc02b":["df77b4a17aa6597ad6819c24a5b6d184455d7623"],"0d22ac6a4146774c1bc8400160fc0b6150294e92":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","2c007e7c4cf8c55bc2a5884e315123afaaeec87f"],"a6378064655e76cd7b908b1cab4ce425b384b508":["f42adde674c3832964de02a512782c0d752a1ff7"],"f42adde674c3832964de02a512782c0d752a1ff7":["2c007e7c4cf8c55bc2a5884e315123afaaeec87f"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a3c68e20c73359a10cf3eb4a35c9fa7ab1f3c30d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","2c007e7c4cf8c55bc2a5884e315123afaaeec87f"],"2c007e7c4cf8c55bc2a5884e315123afaaeec87f":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"df77b4a17aa6597ad6819c24a5b6d184455d7623":["a6378064655e76cd7b908b1cab4ce425b384b508"],"a1ea01e15f477524516b07b300a3ae03d1bec9bc":["634f330c54fd3f9f491d52036dc3f40b4f4d8934"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a1ea01e15f477524516b07b300a3ae03d1bec9bc"]},"commit2Childs":{"634f330c54fd3f9f491d52036dc3f40b4f4d8934":["a1ea01e15f477524516b07b300a3ae03d1bec9bc"],"cb89814ad85fb3340f275e6b76a0bc319a6cc02b":["634f330c54fd3f9f491d52036dc3f40b4f4d8934"],"0d22ac6a4146774c1bc8400160fc0b6150294e92":[],"a6378064655e76cd7b908b1cab4ce425b384b508":["df77b4a17aa6597ad6819c24a5b6d184455d7623"],"f42adde674c3832964de02a512782c0d752a1ff7":["a6378064655e76cd7b908b1cab4ce425b384b508"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["0d22ac6a4146774c1bc8400160fc0b6150294e92","a3c68e20c73359a10cf3eb4a35c9fa7ab1f3c30d","2c007e7c4cf8c55bc2a5884e315123afaaeec87f"],"a3c68e20c73359a10cf3eb4a35c9fa7ab1f3c30d":[],"2c007e7c4cf8c55bc2a5884e315123afaaeec87f":["0d22ac6a4146774c1bc8400160fc0b6150294e92","f42adde674c3832964de02a512782c0d752a1ff7","a3c68e20c73359a10cf3eb4a35c9fa7ab1f3c30d"],"df77b4a17aa6597ad6819c24a5b6d184455d7623":["cb89814ad85fb3340f275e6b76a0bc319a6cc02b"],"a1ea01e15f477524516b07b300a3ae03d1bec9bc":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["0d22ac6a4146774c1bc8400160fc0b6150294e92","a3c68e20c73359a10cf3eb4a35c9fa7ab1f3c30d","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}