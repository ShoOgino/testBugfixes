{"path":"lucene/facet/src/test/org/apache/lucene/facet/taxonomy/directory/TestAddTaxonomy#testSimple().mjava","commits":[{"id":"0cebe7d662ef6b6c677383085b295b9878ba1795","date":1337155300,"type":0,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/taxonomy/directory/TestAddTaxonomy#testSimple().mjava","pathOld":"/dev/null","sourceNew":"  public void testSimple() throws Exception {\n    Directory dest = newDirectory();\n    DirectoryTaxonomyWriter tw1 = new DirectoryTaxonomyWriter(dest);\n    tw1.addCategory(new CategoryPath(\"Author\", \"Mark Twain\"));\n    tw1.addCategory(new CategoryPath(\"Animals\", \"Dog\"));\n    tw1.addCategory(new CategoryPath(\"Author\", \"Rob Pike\"));\n    \n    Directory src = newDirectory();\n    DirectoryTaxonomyWriter tw2 = new DirectoryTaxonomyWriter(src);\n    tw2.addCategory(new CategoryPath(\"Author\", \"Rob Pike\"));\n    tw2.addCategory(new CategoryPath(\"Aardvarks\", \"Bob\"));\n    tw2.close();\n\n    OrdinalMap map = randomOrdinalMap();\n\n    tw1.addTaxonomy(src, map);\n    tw1.close();\n\n    validate(dest, src, map);\n    \n    IOUtils.close(dest, src);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ef0d8a69209261514c5739c770bba706c2308450","date":1337607597,"type":0,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/taxonomy/directory/TestAddTaxonomy#testSimple().mjava","pathOld":"/dev/null","sourceNew":"  public void testSimple() throws Exception {\n    Directory dest = newDirectory();\n    DirectoryTaxonomyWriter tw1 = new DirectoryTaxonomyWriter(dest);\n    tw1.addCategory(new CategoryPath(\"Author\", \"Mark Twain\"));\n    tw1.addCategory(new CategoryPath(\"Animals\", \"Dog\"));\n    tw1.addCategory(new CategoryPath(\"Author\", \"Rob Pike\"));\n    \n    Directory src = newDirectory();\n    DirectoryTaxonomyWriter tw2 = new DirectoryTaxonomyWriter(src);\n    tw2.addCategory(new CategoryPath(\"Author\", \"Rob Pike\"));\n    tw2.addCategory(new CategoryPath(\"Aardvarks\", \"Bob\"));\n    tw2.close();\n\n    OrdinalMap map = randomOrdinalMap();\n\n    tw1.addTaxonomy(src, map);\n    tw1.close();\n\n    validate(dest, src, map);\n    \n    IOUtils.close(dest, src);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c190847801a50f4dd20fd639bdc29b54ea3b288b","date":1384461522,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/taxonomy/directory/TestAddTaxonomy#testSimple().mjava","pathOld":"lucene/facet/src/test/org/apache/lucene/facet/taxonomy/directory/TestAddTaxonomy#testSimple().mjava","sourceNew":"  public void testSimple() throws Exception {\n    Directory dest = newDirectory();\n    DirectoryTaxonomyWriter tw1 = new DirectoryTaxonomyWriter(dest);\n    tw1.addCategory(new FacetLabel(\"Author\", \"Mark Twain\"));\n    tw1.addCategory(new FacetLabel(\"Animals\", \"Dog\"));\n    tw1.addCategory(new FacetLabel(\"Author\", \"Rob Pike\"));\n    \n    Directory src = newDirectory();\n    DirectoryTaxonomyWriter tw2 = new DirectoryTaxonomyWriter(src);\n    tw2.addCategory(new FacetLabel(\"Author\", \"Rob Pike\"));\n    tw2.addCategory(new FacetLabel(\"Aardvarks\", \"Bob\"));\n    tw2.close();\n\n    OrdinalMap map = randomOrdinalMap();\n\n    tw1.addTaxonomy(src, map);\n    tw1.close();\n\n    validate(dest, src, map);\n    \n    IOUtils.close(dest, src);\n  }\n\n","sourceOld":"  public void testSimple() throws Exception {\n    Directory dest = newDirectory();\n    DirectoryTaxonomyWriter tw1 = new DirectoryTaxonomyWriter(dest);\n    tw1.addCategory(new CategoryPath(\"Author\", \"Mark Twain\"));\n    tw1.addCategory(new CategoryPath(\"Animals\", \"Dog\"));\n    tw1.addCategory(new CategoryPath(\"Author\", \"Rob Pike\"));\n    \n    Directory src = newDirectory();\n    DirectoryTaxonomyWriter tw2 = new DirectoryTaxonomyWriter(src);\n    tw2.addCategory(new CategoryPath(\"Author\", \"Rob Pike\"));\n    tw2.addCategory(new CategoryPath(\"Aardvarks\", \"Bob\"));\n    tw2.close();\n\n    OrdinalMap map = randomOrdinalMap();\n\n    tw1.addTaxonomy(src, map);\n    tw1.close();\n\n    validate(dest, src, map);\n    \n    IOUtils.close(dest, src);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3cc728b07df73b197e6d940d27f9b08b63918f13","date":1388834348,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/taxonomy/directory/TestAddTaxonomy#testSimple().mjava","pathOld":"lucene/facet/src/test/org/apache/lucene/facet/taxonomy/directory/TestAddTaxonomy#testSimple().mjava","sourceNew":"  public void testSimple() throws Exception {\n    Directory dest = newDirectory();\n    DirectoryTaxonomyWriter tw1 = new DirectoryTaxonomyWriter(dest);\n    tw1.addCategory(new FacetLabel(\"Author\", \"Mark Twain\"));\n    tw1.addCategory(new FacetLabel(\"Animals\", \"Dog\"));\n    tw1.addCategory(new FacetLabel(\"Author\", \"Rob Pike\"));\n    \n    Directory src = newDirectory();\n    DirectoryTaxonomyWriter tw2 = new DirectoryTaxonomyWriter(src);\n    tw2.addCategory(new FacetLabel(\"Author\", \"Rob Pike\"));\n    tw2.addCategory(new FacetLabel(\"Aardvarks\", \"Bob\"));\n    tw2.close();\n\n    OrdinalMap map = randomOrdinalMap();\n\n    tw1.addTaxonomy(src, map);\n    tw1.close();\n\n    validate(dest, src, map);\n    \n    IOUtils.close(dest, src);\n  }\n\n","sourceOld":"  public void testSimple() throws Exception {\n    Directory dest = newDirectory();\n    DirectoryTaxonomyWriter tw1 = new DirectoryTaxonomyWriter(dest);\n    tw1.addCategory(new CategoryPath(\"Author\", \"Mark Twain\"));\n    tw1.addCategory(new CategoryPath(\"Animals\", \"Dog\"));\n    tw1.addCategory(new CategoryPath(\"Author\", \"Rob Pike\"));\n    \n    Directory src = newDirectory();\n    DirectoryTaxonomyWriter tw2 = new DirectoryTaxonomyWriter(src);\n    tw2.addCategory(new CategoryPath(\"Author\", \"Rob Pike\"));\n    tw2.addCategory(new CategoryPath(\"Aardvarks\", \"Bob\"));\n    tw2.close();\n\n    OrdinalMap map = randomOrdinalMap();\n\n    tw1.addTaxonomy(src, map);\n    tw1.close();\n\n    validate(dest, src, map);\n    \n    IOUtils.close(dest, src);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"0cebe7d662ef6b6c677383085b295b9878ba1795":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"3cc728b07df73b197e6d940d27f9b08b63918f13":["0cebe7d662ef6b6c677383085b295b9878ba1795","c190847801a50f4dd20fd639bdc29b54ea3b288b"],"ef0d8a69209261514c5739c770bba706c2308450":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","0cebe7d662ef6b6c677383085b295b9878ba1795"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3cc728b07df73b197e6d940d27f9b08b63918f13"],"c190847801a50f4dd20fd639bdc29b54ea3b288b":["0cebe7d662ef6b6c677383085b295b9878ba1795"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["0cebe7d662ef6b6c677383085b295b9878ba1795","ef0d8a69209261514c5739c770bba706c2308450"],"0cebe7d662ef6b6c677383085b295b9878ba1795":["3cc728b07df73b197e6d940d27f9b08b63918f13","ef0d8a69209261514c5739c770bba706c2308450","c190847801a50f4dd20fd639bdc29b54ea3b288b"],"3cc728b07df73b197e6d940d27f9b08b63918f13":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"ef0d8a69209261514c5739c770bba706c2308450":[],"c190847801a50f4dd20fd639bdc29b54ea3b288b":["3cc728b07df73b197e6d940d27f9b08b63918f13"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["ef0d8a69209261514c5739c770bba706c2308450","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}