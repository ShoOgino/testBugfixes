{"path":"lucene/core/src/test/org/apache/lucene/search/TestFuzzyQuery#testPrefixLengthEqualStringLength().mjava","commits":[{"id":"c5ad69699c50bdc694006291c11e9d3a195e5aa1","date":1588860600,"type":0,"author":"markharwood","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestFuzzyQuery#testPrefixLengthEqualStringLength().mjava","pathOld":"/dev/null","sourceNew":"  public void testPrefixLengthEqualStringLength() throws Exception {\n    Directory directory = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random(), directory);\n    addDoc(\"bbab\", writer);\n    addDoc(\"bbabc\", writer);\n    addDoc(\"bbabcd\", writer);\n    IndexReader reader = writer.getReader();\n    IndexSearcher searcher = newSearcher(reader);\n    writer.close();\n\n    int maxEdits = 1;\n    int prefixLength = 3;\n    FuzzyQuery query = new FuzzyQuery(new Term(\"field\", \"bba\"), maxEdits, prefixLength);\n    ScoreDoc[] hits = searcher.search(query, 1000).scoreDocs;\n    assertEquals(1, hits.length);\n\n    maxEdits = 2;\n    query = new FuzzyQuery(new Term(\"field\", \"bba\"), maxEdits, prefixLength);\n    hits = searcher.search(query, 1000).scoreDocs;\n    assertEquals(2, hits.length);\n\n    \n    reader.close();\n    directory.close();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8f163061e60fd2090f36724344812460ef9de32a","date":1588865299,"type":4,"author":"markharwood","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestFuzzyQuery#testPrefixLengthEqualStringLength().mjava","sourceNew":null,"sourceOld":"  public void testPrefixLengthEqualStringLength() throws Exception {\n    Directory directory = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random(), directory);\n    addDoc(\"bbab\", writer);\n    addDoc(\"bbabc\", writer);\n    addDoc(\"bbabcd\", writer);\n    IndexReader reader = writer.getReader();\n    IndexSearcher searcher = newSearcher(reader);\n    writer.close();\n\n    int maxEdits = 1;\n    int prefixLength = 3;\n    FuzzyQuery query = new FuzzyQuery(new Term(\"field\", \"bba\"), maxEdits, prefixLength);\n    ScoreDoc[] hits = searcher.search(query, 1000).scoreDocs;\n    assertEquals(1, hits.length);\n\n    maxEdits = 2;\n    query = new FuzzyQuery(new Term(\"field\", \"bba\"), maxEdits, prefixLength);\n    hits = searcher.search(query, 1000).scoreDocs;\n    assertEquals(2, hits.length);\n\n    \n    reader.close();\n    directory.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"053cf7ba50bf1e4ce3e6a8f92a24a016fb7a72a5","date":1591215570,"type":0,"author":"Mike Drob","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestFuzzyQuery#testPrefixLengthEqualStringLength().mjava","pathOld":"/dev/null","sourceNew":"  public void testPrefixLengthEqualStringLength() throws Exception {\n    Directory directory = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random(), directory);\n    addDoc(\"b*a\", writer);\n    addDoc(\"b*ab\", writer);\n    addDoc(\"b*abc\", writer);\n    addDoc(\"b*abcd\", writer);\n    String multibyte = \"아프리카코끼리속\";\n    addDoc(multibyte, writer);\n    IndexReader reader = writer.getReader();\n    IndexSearcher searcher = newSearcher(reader);\n    writer.close();\n\n    int maxEdits = 0;\n    int prefixLength = 3;\n    FuzzyQuery query = new FuzzyQuery(new Term(\"field\", \"b*a\"), maxEdits, prefixLength);\n    ScoreDoc[] hits = searcher.search(query, 1000).scoreDocs;\n    assertEquals(1, hits.length);\n\n    maxEdits = 1;\n    query = new FuzzyQuery(new Term(\"field\", \"b*a\"), maxEdits, prefixLength);\n    hits = searcher.search(query, 1000).scoreDocs;\n    assertEquals(2, hits.length);\n\n    maxEdits = 2;\n    query = new FuzzyQuery(new Term(\"field\", \"b*a\"), maxEdits, prefixLength);\n    hits = searcher.search(query, 1000).scoreDocs;\n    assertEquals(3, hits.length);\n\n    maxEdits = 1;\n    prefixLength = multibyte.length() - 1;\n    query = new FuzzyQuery(new Term(\"field\", multibyte.substring(0, prefixLength)), maxEdits, prefixLength);\n    hits = searcher.search(query, 1000).scoreDocs;\n    assertEquals(1, hits.length);\n\n    reader.close();\n    directory.close();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"053cf7ba50bf1e4ce3e6a8f92a24a016fb7a72a5":["8f163061e60fd2090f36724344812460ef9de32a"],"8f163061e60fd2090f36724344812460ef9de32a":["c5ad69699c50bdc694006291c11e9d3a195e5aa1"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"c5ad69699c50bdc694006291c11e9d3a195e5aa1":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["053cf7ba50bf1e4ce3e6a8f92a24a016fb7a72a5"]},"commit2Childs":{"053cf7ba50bf1e4ce3e6a8f92a24a016fb7a72a5":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"8f163061e60fd2090f36724344812460ef9de32a":["053cf7ba50bf1e4ce3e6a8f92a24a016fb7a72a5"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c5ad69699c50bdc694006291c11e9d3a195e5aa1"],"c5ad69699c50bdc694006291c11e9d3a195e5aa1":["8f163061e60fd2090f36724344812460ef9de32a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}