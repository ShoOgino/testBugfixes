{"path":"lucene/core/src/java/org/apache/lucene/index/DocumentsWriterDeleteQueue#skipSequenceNumbers(long).mjava","commits":[{"id":"16ebfabc294f23b88b6a39722a02c9d39b353195","date":1464343867,"type":0,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/DocumentsWriterDeleteQueue#skipSequenceNumbers(long).mjava","pathOld":"/dev/null","sourceNew":"  public void skipSequenceNumbers(long jump) {\n    nextSeqNo.addAndGet(jump);\n  }  \n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"122251c49e5a9fa95f056ea257ae3ab452099fc7","date":1464820065,"type":3,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/DocumentsWriterDeleteQueue#skipSequenceNumbers(long).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/DocumentsWriterDeleteQueue#skipSequenceNumbers(long).mjava","sourceNew":"  /** Inserts a gap in the sequence numbers.  This is used by IW during flush or commit to ensure any in-flight threads get sequence numbers\n   *  inside the gap */\n  public void skipSequenceNumbers(long jump) {\n    nextSeqNo.addAndGet(jump);\n  }  \n\n","sourceOld":"  public void skipSequenceNumbers(long jump) {\n    nextSeqNo.addAndGet(jump);\n  }  \n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b40b1a0adcc6bdcda63b0fbd75dfa2ddd8777e77","date":1464821470,"type":3,"author":"Mike McCandless","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/DocumentsWriterDeleteQueue#skipSequenceNumbers(long).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/DocumentsWriterDeleteQueue#skipSequenceNumbers(long).mjava","sourceNew":"  /** Inserts a gap in the sequence numbers.  This is used by IW during flush or commit to ensure any in-flight threads get sequence numbers\n   *  inside the gap */\n  public void skipSequenceNumbers(long jump) {\n    nextSeqNo.addAndGet(jump);\n  }  \n\n","sourceOld":"  public void skipSequenceNumbers(long jump) {\n    nextSeqNo.addAndGet(jump);\n  }  \n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6483e4260c08168709c02238ae083a51519a28dd","date":1465117546,"type":0,"author":"Mike McCandless","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/DocumentsWriterDeleteQueue#skipSequenceNumbers(long).mjava","pathOld":"/dev/null","sourceNew":"  /** Inserts a gap in the sequence numbers.  This is used by IW during flush or commit to ensure any in-flight threads get sequence numbers\n   *  inside the gap */\n  public void skipSequenceNumbers(long jump) {\n    nextSeqNo.addAndGet(jump);\n  }  \n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"191128ac5b85671b1671e2c857437694283b6ebf","date":1465297861,"type":0,"author":"Karl Wright","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/DocumentsWriterDeleteQueue#skipSequenceNumbers(long).mjava","pathOld":"/dev/null","sourceNew":"  /** Inserts a gap in the sequence numbers.  This is used by IW during flush or commit to ensure any in-flight threads get sequence numbers\n   *  inside the gap */\n  public void skipSequenceNumbers(long jump) {\n    nextSeqNo.addAndGet(jump);\n  }  \n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":0,"author":"Kevin Risden","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/DocumentsWriterDeleteQueue#skipSequenceNumbers(long).mjava","pathOld":"/dev/null","sourceNew":"  /** Inserts a gap in the sequence numbers.  This is used by IW during flush or commit to ensure any in-flight threads get sequence numbers\n   *  inside the gap */\n  public void skipSequenceNumbers(long jump) {\n    nextSeqNo.addAndGet(jump);\n  }  \n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b07024a7318c25225dc4d070cf6d047315b73aaf","date":1586885963,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/DocumentsWriterDeleteQueue#skipSequenceNumbers(long).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/DocumentsWriterDeleteQueue#skipSequenceNumbers(long).mjava","sourceNew":"  /** Inserts a gap in the sequence numbers.  This is used by IW during flush or commit to ensure any in-flight threads get sequence numbers\n   *  inside the gap */\n  void skipSequenceNumbers(long jump) {\n    nextSeqNo.addAndGet(jump);\n  }\n\n","sourceOld":"  /** Inserts a gap in the sequence numbers.  This is used by IW during flush or commit to ensure any in-flight threads get sequence numbers\n   *  inside the gap */\n  public void skipSequenceNumbers(long jump) {\n    nextSeqNo.addAndGet(jump);\n  }  \n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b07024a7318c25225dc4d070cf6d047315b73aaf":["191128ac5b85671b1671e2c857437694283b6ebf"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"6483e4260c08168709c02238ae083a51519a28dd":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","b40b1a0adcc6bdcda63b0fbd75dfa2ddd8777e77"],"191128ac5b85671b1671e2c857437694283b6ebf":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","6483e4260c08168709c02238ae083a51519a28dd"],"16ebfabc294f23b88b6a39722a02c9d39b353195":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"b40b1a0adcc6bdcda63b0fbd75dfa2ddd8777e77":["16ebfabc294f23b88b6a39722a02c9d39b353195","122251c49e5a9fa95f056ea257ae3ab452099fc7"],"122251c49e5a9fa95f056ea257ae3ab452099fc7":["16ebfabc294f23b88b6a39722a02c9d39b353195"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","191128ac5b85671b1671e2c857437694283b6ebf"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b07024a7318c25225dc4d070cf6d047315b73aaf"]},"commit2Childs":{"b07024a7318c25225dc4d070cf6d047315b73aaf":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["6483e4260c08168709c02238ae083a51519a28dd","191128ac5b85671b1671e2c857437694283b6ebf","16ebfabc294f23b88b6a39722a02c9d39b353195","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"6483e4260c08168709c02238ae083a51519a28dd":["191128ac5b85671b1671e2c857437694283b6ebf"],"191128ac5b85671b1671e2c857437694283b6ebf":["b07024a7318c25225dc4d070cf6d047315b73aaf","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"16ebfabc294f23b88b6a39722a02c9d39b353195":["b40b1a0adcc6bdcda63b0fbd75dfa2ddd8777e77","122251c49e5a9fa95f056ea257ae3ab452099fc7"],"b40b1a0adcc6bdcda63b0fbd75dfa2ddd8777e77":["6483e4260c08168709c02238ae083a51519a28dd"],"122251c49e5a9fa95f056ea257ae3ab452099fc7":["b40b1a0adcc6bdcda63b0fbd75dfa2ddd8777e77"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}