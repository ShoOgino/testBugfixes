{"path":"lucene/src/java/org/apache/lucene/index/IndexWriter#getLiveDocsClone(SegmentInfo,SegmentReader).mjava","commits":[{"id":"0061262413ecc163d6eebba1b5c43ab91a0c2dc5","date":1311195279,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/IndexWriter#getLiveDocsClone(SegmentInfo,SegmentReader).mjava","pathOld":"/dev/null","sourceNew":"  private synchronized BitVector getLiveDocsClone(SegmentInfo info, SegmentReader other) throws IOException {\n    final SegmentReader delReader = readerPool.getIfExists(info, IOContext.Context.READ);\n    BitVector liveDocs;\n    if (delReader != null) {\n      liveDocs = (BitVector) delReader.getLiveDocs();\n      readerPool.release(delReader, false, IOContext.Context.READ);\n      if (liveDocs != null) {\n        // We clone the del docs because other\n        // deletes may come in while we're merging.  We\n        // need frozen deletes while merging, and then\n        // we carry over any new deletions in\n        // commitMergedDeletes.\n        liveDocs = (BitVector) liveDocs.clone();\n      }\n    } else {\n      liveDocs = (BitVector) other.getLiveDocs();\n    }\n\n    return liveDocs;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9ce667c6d3400b22523701c549c0d35e26da8b46","date":1324405053,"type":4,"author":"Michael McCandless","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/src/java/org/apache/lucene/index/IndexWriter#getLiveDocsClone(SegmentInfo,SegmentReader).mjava","sourceNew":null,"sourceOld":"  private synchronized BitVector getLiveDocsClone(SegmentInfo info, SegmentReader other) throws IOException {\n    final SegmentReader delReader = readerPool.getIfExists(info, IOContext.Context.READ);\n    BitVector liveDocs;\n    if (delReader != null) {\n      liveDocs = (BitVector) delReader.getLiveDocs();\n      readerPool.release(delReader, false, IOContext.Context.READ);\n      if (liveDocs != null) {\n        // We clone the del docs because other\n        // deletes may come in while we're merging.  We\n        // need frozen deletes while merging, and then\n        // we carry over any new deletions in\n        // commitMergedDeletes.\n        liveDocs = (BitVector) liveDocs.clone();\n      }\n    } else {\n      liveDocs = (BitVector) other.getLiveDocs();\n    }\n\n    return liveDocs;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"0061262413ecc163d6eebba1b5c43ab91a0c2dc5":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"9ce667c6d3400b22523701c549c0d35e26da8b46":["0061262413ecc163d6eebba1b5c43ab91a0c2dc5"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9ce667c6d3400b22523701c549c0d35e26da8b46"]},"commit2Childs":{"0061262413ecc163d6eebba1b5c43ab91a0c2dc5":["9ce667c6d3400b22523701c549c0d35e26da8b46"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["0061262413ecc163d6eebba1b5c43ab91a0c2dc5"],"9ce667c6d3400b22523701c549c0d35e26da8b46":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}