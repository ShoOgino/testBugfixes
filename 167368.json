{"path":"solr/core/src/java/org/apache/solr/search/function/distance/GeoDistValueSourceParser#parseSfield(FunctionQParser).mjava","commits":[{"id":"464f6dced2dddb86ebb65fba95eb05169c1b2f7e","date":1372221866,"type":1,"author":"David Wayne Smiley","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/function/distance/GeoDistValueSourceParser#parseSfield(FunctionQParser).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/function/distance/HaversineConstFunction#parseSfield(FunctionQParser).mjava","sourceNew":"  private MultiValueSource parseSfield(FunctionQParser fp) throws SyntaxError {\n    String sfield = fp.getParam(SpatialParams.FIELD);\n    if (sfield == null) return null;\n    SchemaField sf = fp.getReq().getSchema().getField(sfield);\n    ValueSource vs = sf.getType().getValueSource(sf, fp);\n    if (!(vs instanceof MultiValueSource)) {\n      throw new SyntaxError(\"Spatial field must implement MultiValueSource:\" + sf);\n    }\n    return (MultiValueSource)vs;\n  }\n\n","sourceOld":"  private static MultiValueSource parseSfield(FunctionQParser fp) throws SyntaxError {\n    String sfield = fp.getParam(SpatialParams.FIELD);\n    if (sfield == null) return null;\n    SchemaField sf = fp.getReq().getSchema().getField(sfield);\n    ValueSource vs = sf.getType().getValueSource(sf, fp);\n    if (!(vs instanceof MultiValueSource)) {\n      throw new SyntaxError(\"Spatial field must implement MultiValueSource:\" + sf);\n    }\n    return (MultiValueSource)vs;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"37a0f60745e53927c4c876cfe5b5a58170f0646c","date":1373994005,"type":0,"author":"Han Jiang","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/search/function/distance/GeoDistValueSourceParser#parseSfield(FunctionQParser).mjava","pathOld":"/dev/null","sourceNew":"  private MultiValueSource parseSfield(FunctionQParser fp) throws SyntaxError {\n    String sfield = fp.getParam(SpatialParams.FIELD);\n    if (sfield == null) return null;\n    SchemaField sf = fp.getReq().getSchema().getField(sfield);\n    ValueSource vs = sf.getType().getValueSource(sf, fp);\n    if (!(vs instanceof MultiValueSource)) {\n      throw new SyntaxError(\"Spatial field must implement MultiValueSource:\" + sf);\n    }\n    return (MultiValueSource)vs;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a6220c823b73c9a8987debfba6a43b4b9dd10d0c","date":1374867434,"type":3,"author":"David Wayne Smiley","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/function/distance/GeoDistValueSourceParser#parseSfield(FunctionQParser).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/function/distance/GeoDistValueSourceParser#parseSfield(FunctionQParser).mjava","sourceNew":"  private MultiValueSource parseSfield(FunctionQParser fp) throws SyntaxError {\n    String sfield = fp.getParam(SpatialParams.FIELD);\n    if (sfield == null) return null;\n    SchemaField sf = fp.getReq().getSchema().getField(sfield);\n    FieldType type = sf.getType();\n    if (type instanceof AbstractSpatialFieldType) {\n      AbstractSpatialFieldType asft = (AbstractSpatialFieldType) type;\n      return new SpatialStrategyMultiValueSource(asft.getStrategy(sfield));\n    }\n    ValueSource vs = type.getValueSource(sf, fp);\n    if (vs instanceof MultiValueSource) {\n      return (MultiValueSource)vs;\n    }\n    throw new SyntaxError(\"Spatial field must implement MultiValueSource or extend AbstractSpatialFieldType:\" + sf);\n  }\n\n","sourceOld":"  private MultiValueSource parseSfield(FunctionQParser fp) throws SyntaxError {\n    String sfield = fp.getParam(SpatialParams.FIELD);\n    if (sfield == null) return null;\n    SchemaField sf = fp.getReq().getSchema().getField(sfield);\n    ValueSource vs = sf.getType().getValueSource(sf, fp);\n    if (!(vs instanceof MultiValueSource)) {\n      throw new SyntaxError(\"Spatial field must implement MultiValueSource:\" + sf);\n    }\n    return (MultiValueSource)vs;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"716d18f3a9b0993bc679d7fa7abdc9bfb03411ec","date":1376375609,"type":3,"author":"Han Jiang","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/search/function/distance/GeoDistValueSourceParser#parseSfield(FunctionQParser).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/function/distance/GeoDistValueSourceParser#parseSfield(FunctionQParser).mjava","sourceNew":"  private MultiValueSource parseSfield(FunctionQParser fp) throws SyntaxError {\n    String sfield = fp.getParam(SpatialParams.FIELD);\n    if (sfield == null) return null;\n    SchemaField sf = fp.getReq().getSchema().getField(sfield);\n    FieldType type = sf.getType();\n    if (type instanceof AbstractSpatialFieldType) {\n      AbstractSpatialFieldType asft = (AbstractSpatialFieldType) type;\n      return new SpatialStrategyMultiValueSource(asft.getStrategy(sfield));\n    }\n    ValueSource vs = type.getValueSource(sf, fp);\n    if (vs instanceof MultiValueSource) {\n      return (MultiValueSource)vs;\n    }\n    throw new SyntaxError(\"Spatial field must implement MultiValueSource or extend AbstractSpatialFieldType:\" + sf);\n  }\n\n","sourceOld":"  private MultiValueSource parseSfield(FunctionQParser fp) throws SyntaxError {\n    String sfield = fp.getParam(SpatialParams.FIELD);\n    if (sfield == null) return null;\n    SchemaField sf = fp.getReq().getSchema().getField(sfield);\n    ValueSource vs = sf.getType().getValueSource(sf, fp);\n    if (!(vs instanceof MultiValueSource)) {\n      throw new SyntaxError(\"Spatial field must implement MultiValueSource:\" + sf);\n    }\n    return (MultiValueSource)vs;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"167133992e7b384ce97f83ddb1dd2ddd09daf7aa","date":1420315776,"type":3,"author":"David Wayne Smiley","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/function/distance/GeoDistValueSourceParser#parseSfield(FunctionQParser).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/function/distance/GeoDistValueSourceParser#parseSfield(FunctionQParser).mjava","sourceNew":"  private MultiValueSource parseSfield(FunctionQParser fp) throws SyntaxError {\n    String sfield = fp.getParam(SpatialParams.FIELD);\n    if (sfield == null) return null;\n    SchemaField sf = fp.getReq().getSchema().getField(sfield);\n    FieldType type = sf.getType();\n    if (type instanceof AbstractSpatialFieldType) {\n      AbstractSpatialFieldType asft = (AbstractSpatialFieldType) type;\n      return new SpatialStrategyMultiValueSource(asft.getStrategy(sfield), asft.getDistanceUnits());\n    }\n    ValueSource vs = type.getValueSource(sf, fp);\n    if (vs instanceof MultiValueSource) {\n      return (MultiValueSource)vs;\n    }\n    throw new SyntaxError(\"Spatial field must implement MultiValueSource or extend AbstractSpatialFieldType:\" + sf);\n  }\n\n","sourceOld":"  private MultiValueSource parseSfield(FunctionQParser fp) throws SyntaxError {\n    String sfield = fp.getParam(SpatialParams.FIELD);\n    if (sfield == null) return null;\n    SchemaField sf = fp.getReq().getSchema().getField(sfield);\n    FieldType type = sf.getType();\n    if (type instanceof AbstractSpatialFieldType) {\n      AbstractSpatialFieldType asft = (AbstractSpatialFieldType) type;\n      return new SpatialStrategyMultiValueSource(asft.getStrategy(sfield));\n    }\n    ValueSource vs = type.getValueSource(sf, fp);\n    if (vs instanceof MultiValueSource) {\n      return (MultiValueSource)vs;\n    }\n    throw new SyntaxError(\"Spatial field must implement MultiValueSource or extend AbstractSpatialFieldType:\" + sf);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ad85d58ffbb1e2cee380ba2a1bf78528ad0174ed","date":1590169220,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/function/distance/GeoDistValueSourceParser#parseSfield(FunctionQParser).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/function/distance/GeoDistValueSourceParser#parseSfield(FunctionQParser).mjava","sourceNew":"  private MultiValueSource parseSfield(FunctionQParser fp) throws SyntaxError {\n    String sfield = fp.getParam(SpatialParams.FIELD);\n    if (sfield == null) return null;\n    SchemaField sf = fp.getReq().getSchema().getField(sfield);\n    FieldType type = sf.getType();\n    if (type instanceof AbstractSpatialFieldType) {\n      @SuppressWarnings({\"rawtypes\"})\n      AbstractSpatialFieldType asft = (AbstractSpatialFieldType) type;\n      return new SpatialStrategyMultiValueSource(asft.getStrategy(sfield), asft.getDistanceUnits());\n    }\n    ValueSource vs = type.getValueSource(sf, fp);\n    if (vs instanceof MultiValueSource) {\n      return (MultiValueSource)vs;\n    }\n    throw new SyntaxError(\"Spatial field must implement MultiValueSource or extend AbstractSpatialFieldType:\" + sf);\n  }\n\n","sourceOld":"  private MultiValueSource parseSfield(FunctionQParser fp) throws SyntaxError {\n    String sfield = fp.getParam(SpatialParams.FIELD);\n    if (sfield == null) return null;\n    SchemaField sf = fp.getReq().getSchema().getField(sfield);\n    FieldType type = sf.getType();\n    if (type instanceof AbstractSpatialFieldType) {\n      AbstractSpatialFieldType asft = (AbstractSpatialFieldType) type;\n      return new SpatialStrategyMultiValueSource(asft.getStrategy(sfield), asft.getDistanceUnits());\n    }\n    ValueSource vs = type.getValueSource(sf, fp);\n    if (vs instanceof MultiValueSource) {\n      return (MultiValueSource)vs;\n    }\n    throw new SyntaxError(\"Spatial field must implement MultiValueSource or extend AbstractSpatialFieldType:\" + sf);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"254ec3078340f6312bb97bed5b76742a18079ec8","date":1600658388,"type":3,"author":"Tom Edge","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/function/distance/GeoDistValueSourceParser#parseSfield(FunctionQParser).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/function/distance/GeoDistValueSourceParser#parseSfield(FunctionQParser).mjava","sourceNew":"  private MultiValueSource parseSfield(FunctionQParser fp) throws SyntaxError {\n    String sfield = fp.getParam(SpatialParams.FIELD);\n    if (sfield == null) return null;\n    return getMultiValueSource(fp, sfield);\n  }\n\n","sourceOld":"  private MultiValueSource parseSfield(FunctionQParser fp) throws SyntaxError {\n    String sfield = fp.getParam(SpatialParams.FIELD);\n    if (sfield == null) return null;\n    SchemaField sf = fp.getReq().getSchema().getField(sfield);\n    FieldType type = sf.getType();\n    if (type instanceof AbstractSpatialFieldType) {\n      @SuppressWarnings({\"rawtypes\"})\n      AbstractSpatialFieldType asft = (AbstractSpatialFieldType) type;\n      return new SpatialStrategyMultiValueSource(asft.getStrategy(sfield), asft.getDistanceUnits());\n    }\n    ValueSource vs = type.getValueSource(sf, fp);\n    if (vs instanceof MultiValueSource) {\n      return (MultiValueSource)vs;\n    }\n    throw new SyntaxError(\"Spatial field must implement MultiValueSource or extend AbstractSpatialFieldType:\" + sf);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"464f6dced2dddb86ebb65fba95eb05169c1b2f7e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"716d18f3a9b0993bc679d7fa7abdc9bfb03411ec":["37a0f60745e53927c4c876cfe5b5a58170f0646c","a6220c823b73c9a8987debfba6a43b4b9dd10d0c"],"37a0f60745e53927c4c876cfe5b5a58170f0646c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","464f6dced2dddb86ebb65fba95eb05169c1b2f7e"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a6220c823b73c9a8987debfba6a43b4b9dd10d0c":["464f6dced2dddb86ebb65fba95eb05169c1b2f7e"],"ad85d58ffbb1e2cee380ba2a1bf78528ad0174ed":["167133992e7b384ce97f83ddb1dd2ddd09daf7aa"],"167133992e7b384ce97f83ddb1dd2ddd09daf7aa":["a6220c823b73c9a8987debfba6a43b4b9dd10d0c"],"254ec3078340f6312bb97bed5b76742a18079ec8":["ad85d58ffbb1e2cee380ba2a1bf78528ad0174ed"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["254ec3078340f6312bb97bed5b76742a18079ec8"]},"commit2Childs":{"464f6dced2dddb86ebb65fba95eb05169c1b2f7e":["37a0f60745e53927c4c876cfe5b5a58170f0646c","a6220c823b73c9a8987debfba6a43b4b9dd10d0c"],"716d18f3a9b0993bc679d7fa7abdc9bfb03411ec":[],"37a0f60745e53927c4c876cfe5b5a58170f0646c":["716d18f3a9b0993bc679d7fa7abdc9bfb03411ec"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["464f6dced2dddb86ebb65fba95eb05169c1b2f7e","37a0f60745e53927c4c876cfe5b5a58170f0646c"],"a6220c823b73c9a8987debfba6a43b4b9dd10d0c":["716d18f3a9b0993bc679d7fa7abdc9bfb03411ec","167133992e7b384ce97f83ddb1dd2ddd09daf7aa"],"ad85d58ffbb1e2cee380ba2a1bf78528ad0174ed":["254ec3078340f6312bb97bed5b76742a18079ec8"],"167133992e7b384ce97f83ddb1dd2ddd09daf7aa":["ad85d58ffbb1e2cee380ba2a1bf78528ad0174ed"],"254ec3078340f6312bb97bed5b76742a18079ec8":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["716d18f3a9b0993bc679d7fa7abdc9bfb03411ec","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}