{"path":"lucene/core/src/java/org/apache/lucene/search/spans/SpanWeight#buildSimWeight(SpanQuery,IndexSearcher,Map[Term,TermContext],float).mjava","commits":[{"id":"02e175abd2c4c1611c5a9647486ae8ba249a94c1","date":1468327116,"type":1,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/spans/SpanWeight#buildSimWeight(SpanQuery,IndexSearcher,Map[Term,TermContext],float).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/spans/SpanWeight#buildSimWeight(SpanQuery,IndexSearcher,Map[Term,TermContext]).mjava","sourceNew":"  private Similarity.SimWeight buildSimWeight(SpanQuery query, IndexSearcher searcher, Map<Term, TermContext> termContexts, float boost) throws IOException {\n    if (termContexts == null || termContexts.size() == 0 || query.getField() == null)\n      return null;\n    TermStatistics[] termStats = new TermStatistics[termContexts.size()];\n    int i = 0;\n    for (Term term : termContexts.keySet()) {\n      termStats[i] = searcher.termStatistics(term, termContexts.get(term));\n      i++;\n    }\n    CollectionStatistics collectionStats = searcher.collectionStatistics(query.getField());\n    return searcher.getSimilarity(true).computeWeight(boost, collectionStats, termStats);\n  }\n\n","sourceOld":"  private Similarity.SimWeight buildSimWeight(SpanQuery query, IndexSearcher searcher, Map<Term, TermContext> termContexts) throws IOException {\n    if (termContexts == null || termContexts.size() == 0 || query.getField() == null)\n      return null;\n    TermStatistics[] termStats = new TermStatistics[termContexts.size()];\n    int i = 0;\n    for (Term term : termContexts.keySet()) {\n      termStats[i] = searcher.termStatistics(term, termContexts.get(term));\n      i++;\n    }\n    CollectionStatistics collectionStats = searcher.collectionStatistics(query.getField());\n    return searcher.getSimilarity(true).computeWeight(collectionStats, termStats);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ef6e1b3d12ef189242ed21db6570bbdf40070e77","date":1468946728,"type":3,"author":"David Smiley","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/spans/SpanWeight#buildSimWeight(SpanQuery,IndexSearcher,Map[Term,TermContext],float).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/spans/SpanWeight#buildSimWeight(SpanQuery,IndexSearcher,Map[Term,TermContext],float).mjava","sourceNew":"  private Similarity.SimWeight buildSimWeight(SpanQuery query, IndexSearcher searcher, Map<Term, TermContext> termContexts, float boost) throws IOException {\n    if (termContexts == null || termContexts.size() == 0 || query.getField() == null)\n      return null;\n    TermStatistics[] termStats = new TermStatistics[termContexts.size()];\n    int i = 0;\n    for (Term term : termContexts.keySet()) {\n      termStats[i] = searcher.termStatistics(term, termContexts.get(term));\n      i++;\n    }\n    CollectionStatistics collectionStats = searcher.collectionStatistics(query.getField());\n    return similarity.computeWeight(boost, collectionStats, termStats);\n  }\n\n","sourceOld":"  private Similarity.SimWeight buildSimWeight(SpanQuery query, IndexSearcher searcher, Map<Term, TermContext> termContexts, float boost) throws IOException {\n    if (termContexts == null || termContexts.size() == 0 || query.getField() == null)\n      return null;\n    TermStatistics[] termStats = new TermStatistics[termContexts.size()];\n    int i = 0;\n    for (Term term : termContexts.keySet()) {\n      termStats[i] = searcher.termStatistics(term, termContexts.get(term));\n      i++;\n    }\n    CollectionStatistics collectionStats = searcher.collectionStatistics(query.getField());\n    return searcher.getSimilarity(true).computeWeight(boost, collectionStats, termStats);\n  }\n\n","bugFix":null,"bugIntro":["c3119ed4143b91eaf5ac74a4dc4625f5036d472c"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":0,"author":"Kevin Risden","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/search/spans/SpanWeight#buildSimWeight(SpanQuery,IndexSearcher,Map[Term,TermContext],float).mjava","pathOld":"/dev/null","sourceNew":"  private Similarity.SimWeight buildSimWeight(SpanQuery query, IndexSearcher searcher, Map<Term, TermContext> termContexts, float boost) throws IOException {\n    if (termContexts == null || termContexts.size() == 0 || query.getField() == null)\n      return null;\n    TermStatistics[] termStats = new TermStatistics[termContexts.size()];\n    int i = 0;\n    for (Term term : termContexts.keySet()) {\n      termStats[i] = searcher.termStatistics(term, termContexts.get(term));\n      i++;\n    }\n    CollectionStatistics collectionStats = searcher.collectionStatistics(query.getField());\n    return similarity.computeWeight(boost, collectionStats, termStats);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c3119ed4143b91eaf5ac74a4dc4625f5036d472c","date":1509409932,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/spans/SpanWeight#buildSimWeight(SpanQuery,IndexSearcher,Map[Term,TermContext],float).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/spans/SpanWeight#buildSimWeight(SpanQuery,IndexSearcher,Map[Term,TermContext],float).mjava","sourceNew":"  private Similarity.SimWeight buildSimWeight(SpanQuery query, IndexSearcher searcher, Map<Term, TermContext> termContexts, float boost) throws IOException {\n    if (termContexts == null || termContexts.size() == 0 || query.getField() == null)\n      return null;\n    TermStatistics[] termStats = new TermStatistics[termContexts.size()];\n    int termUpTo = 0;\n    for (Term term : termContexts.keySet()) {\n      TermStatistics termStatistics = searcher.termStatistics(term, termContexts.get(term));\n      if (termStatistics != null) {\n        termStats[termUpTo++] = termStatistics;\n      }\n    }\n    CollectionStatistics collectionStats = searcher.collectionStatistics(query.getField());\n    if (termUpTo > 0) {\n      return similarity.computeWeight(boost, collectionStats, Arrays.copyOf(termStats, termUpTo));\n    } else {\n      return null; // no terms at all exist, we won't use similarity\n    }\n  }\n\n","sourceOld":"  private Similarity.SimWeight buildSimWeight(SpanQuery query, IndexSearcher searcher, Map<Term, TermContext> termContexts, float boost) throws IOException {\n    if (termContexts == null || termContexts.size() == 0 || query.getField() == null)\n      return null;\n    TermStatistics[] termStats = new TermStatistics[termContexts.size()];\n    int i = 0;\n    for (Term term : termContexts.keySet()) {\n      termStats[i] = searcher.termStatistics(term, termContexts.get(term));\n      i++;\n    }\n    CollectionStatistics collectionStats = searcher.collectionStatistics(query.getField());\n    return similarity.computeWeight(boost, collectionStats, termStats);\n  }\n\n","bugFix":["02e175abd2c4c1611c5a9647486ae8ba249a94c1","ef6e1b3d12ef189242ed21db6570bbdf40070e77"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"68d6cb7f0f019661a784bd0e5a21e85b5f812af6","date":1515075216,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/spans/SpanWeight#buildSimWeight(SpanQuery,IndexSearcher,Map[Term,TermContext],float).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/spans/SpanWeight#buildSimWeight(SpanQuery,IndexSearcher,Map[Term,TermContext],float).mjava","sourceNew":"  private Similarity.SimScorer buildSimWeight(SpanQuery query, IndexSearcher searcher, Map<Term, TermContext> termContexts, float boost) throws IOException {\n    if (termContexts == null || termContexts.size() == 0 || query.getField() == null)\n      return null;\n    TermStatistics[] termStats = new TermStatistics[termContexts.size()];\n    int termUpTo = 0;\n    for (Term term : termContexts.keySet()) {\n      TermStatistics termStatistics = searcher.termStatistics(term, termContexts.get(term));\n      if (termStatistics != null) {\n        termStats[termUpTo++] = termStatistics;\n      }\n    }\n    CollectionStatistics collectionStats = searcher.collectionStatistics(query.getField());\n    if (termUpTo > 0) {\n      return similarity.scorer(boost, collectionStats, Arrays.copyOf(termStats, termUpTo));\n    } else {\n      return null; // no terms at all exist, we won't use similarity\n    }\n  }\n\n","sourceOld":"  private Similarity.SimWeight buildSimWeight(SpanQuery query, IndexSearcher searcher, Map<Term, TermContext> termContexts, float boost) throws IOException {\n    if (termContexts == null || termContexts.size() == 0 || query.getField() == null)\n      return null;\n    TermStatistics[] termStats = new TermStatistics[termContexts.size()];\n    int termUpTo = 0;\n    for (Term term : termContexts.keySet()) {\n      TermStatistics termStatistics = searcher.termStatistics(term, termContexts.get(term));\n      if (termStatistics != null) {\n        termStats[termUpTo++] = termStatistics;\n      }\n    }\n    CollectionStatistics collectionStats = searcher.collectionStatistics(query.getField());\n    if (termUpTo > 0) {\n      return similarity.computeWeight(boost, collectionStats, Arrays.copyOf(termStats, termUpTo));\n    } else {\n      return null; // no terms at all exist, we won't use similarity\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a6e9f769521480a623f897c0d59089b919fa4239","date":1515161835,"type":5,"author":"Alan Woodward","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/spans/SpanWeight#buildSimWeight(SpanQuery,IndexSearcher,Map[Term,TermStates],float).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/spans/SpanWeight#buildSimWeight(SpanQuery,IndexSearcher,Map[Term,TermContext],float).mjava","sourceNew":"  private Similarity.SimScorer buildSimWeight(SpanQuery query, IndexSearcher searcher, Map<Term, TermStates> termStates, float boost) throws IOException {\n    if (termStates == null || termStates.size() == 0 || query.getField() == null)\n      return null;\n    TermStatistics[] termStats = new TermStatistics[termStates.size()];\n    int termUpTo = 0;\n    for (Term term : termStates.keySet()) {\n      TermStatistics termStatistics = searcher.termStatistics(term, termStates.get(term));\n      if (termStatistics != null) {\n        termStats[termUpTo++] = termStatistics;\n      }\n    }\n    CollectionStatistics collectionStats = searcher.collectionStatistics(query.getField());\n    if (termUpTo > 0) {\n      return similarity.scorer(boost, collectionStats, Arrays.copyOf(termStats, termUpTo));\n    } else {\n      return null; // no terms at all exist, we won't use similarity\n    }\n  }\n\n","sourceOld":"  private Similarity.SimScorer buildSimWeight(SpanQuery query, IndexSearcher searcher, Map<Term, TermContext> termContexts, float boost) throws IOException {\n    if (termContexts == null || termContexts.size() == 0 || query.getField() == null)\n      return null;\n    TermStatistics[] termStats = new TermStatistics[termContexts.size()];\n    int termUpTo = 0;\n    for (Term term : termContexts.keySet()) {\n      TermStatistics termStatistics = searcher.termStatistics(term, termContexts.get(term));\n      if (termStatistics != null) {\n        termStats[termUpTo++] = termStatistics;\n      }\n    }\n    CollectionStatistics collectionStats = searcher.collectionStatistics(query.getField());\n    if (termUpTo > 0) {\n      return similarity.scorer(boost, collectionStats, Arrays.copyOf(termStats, termUpTo));\n    } else {\n      return null; // no terms at all exist, we won't use similarity\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b94236357aaa22b76c10629851fe4e376e0cea82","date":1516710914,"type":4,"author":"Karl Wright","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/search/spans/SpanWeight#buildSimWeight(SpanQuery,IndexSearcher,Map[Term,TermContext],float).mjava","sourceNew":null,"sourceOld":"  private Similarity.SimWeight buildSimWeight(SpanQuery query, IndexSearcher searcher, Map<Term, TermContext> termContexts, float boost) throws IOException {\n    if (termContexts == null || termContexts.size() == 0 || query.getField() == null)\n      return null;\n    TermStatistics[] termStats = new TermStatistics[termContexts.size()];\n    int termUpTo = 0;\n    for (Term term : termContexts.keySet()) {\n      TermStatistics termStatistics = searcher.termStatistics(term, termContexts.get(term));\n      if (termStatistics != null) {\n        termStats[termUpTo++] = termStatistics;\n      }\n    }\n    CollectionStatistics collectionStats = searcher.collectionStatistics(query.getField());\n    if (termUpTo > 0) {\n      return similarity.computeWeight(boost, collectionStats, Arrays.copyOf(termStats, termUpTo));\n    } else {\n      return null; // no terms at all exist, we won't use similarity\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b94236357aaa22b76c10629851fe4e376e0cea82":["c3119ed4143b91eaf5ac74a4dc4625f5036d472c","a6e9f769521480a623f897c0d59089b919fa4239"],"68d6cb7f0f019661a784bd0e5a21e85b5f812af6":["c3119ed4143b91eaf5ac74a4dc4625f5036d472c"],"a6e9f769521480a623f897c0d59089b919fa4239":["68d6cb7f0f019661a784bd0e5a21e85b5f812af6"],"ef6e1b3d12ef189242ed21db6570bbdf40070e77":["02e175abd2c4c1611c5a9647486ae8ba249a94c1"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"02e175abd2c4c1611c5a9647486ae8ba249a94c1":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","ef6e1b3d12ef189242ed21db6570bbdf40070e77"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b94236357aaa22b76c10629851fe4e376e0cea82"],"c3119ed4143b91eaf5ac74a4dc4625f5036d472c":["ef6e1b3d12ef189242ed21db6570bbdf40070e77"]},"commit2Childs":{"b94236357aaa22b76c10629851fe4e376e0cea82":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"68d6cb7f0f019661a784bd0e5a21e85b5f812af6":["a6e9f769521480a623f897c0d59089b919fa4239"],"a6e9f769521480a623f897c0d59089b919fa4239":["b94236357aaa22b76c10629851fe4e376e0cea82"],"ef6e1b3d12ef189242ed21db6570bbdf40070e77":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","c3119ed4143b91eaf5ac74a4dc4625f5036d472c"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["02e175abd2c4c1611c5a9647486ae8ba249a94c1","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"02e175abd2c4c1611c5a9647486ae8ba249a94c1":["ef6e1b3d12ef189242ed21db6570bbdf40070e77"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"c3119ed4143b91eaf5ac74a4dc4625f5036d472c":["b94236357aaa22b76c10629851fe4e376e0cea82","68d6cb7f0f019661a784bd0e5a21e85b5f812af6"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}