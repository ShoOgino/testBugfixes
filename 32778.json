{"path":"solr/src/java/org/apache/solr/search/Phase2GroupCollector[Grouping]#Phase2GroupCollector(TopGroupCollector,ValueSource,Map,Sort,int,boolean,int).mjava","commits":[{"id":"ddd83ce02b85f7d0c728af48e14e0eeb42de813a","date":1288533972,"type":1,"author":"Yonik Seeley","isMerge":false,"pathNew":"solr/src/java/org/apache/solr/search/Phase2GroupCollector[Grouping]#Phase2GroupCollector(TopGroupCollector,ValueSource,Map,Sort,int,boolean,int).mjava","pathOld":"solr/src/java/org/apache/solr/search/Phase2GroupCollector[Grouping]#Phase2GroupCollector(TopGroupCollector,ValueSource,Map,Sort,int,boolean).mjava","sourceNew":"  // TODO: may want to decouple from the phase1 collector\n  public Phase2GroupCollector(TopGroupCollector topGroups, ValueSource groupByVS, Map vsContext, Sort sort, int docsPerGroup, boolean getScores, int offset) throws IOException {\n    boolean getSortFields = false;\n\n    if (topGroups.orderedGroups == null)\n      topGroups.buildSet();\n\n    groupMap = new HashMap<MutableValue, SearchGroupDocs>(topGroups.groupMap.size());\n    for (SearchGroup group : topGroups.orderedGroups) {\n      if (offset > 0) {\n        offset--;\n        continue;\n      }\n      SearchGroupDocs groupDocs = new SearchGroupDocs();\n      groupDocs.groupValue = group.groupValue;\n      groupDocs.collector = TopFieldCollector.create(sort, docsPerGroup, getSortFields, getScores, getScores, true);\n      groupMap.put(groupDocs.groupValue, groupDocs);\n    }\n\n    this.vs = groupByVS;\n    this.context = vsContext;\n  }\n\n","sourceOld":"  // TODO: may want to decouple from the phase1 collector\n  public Phase2GroupCollector(TopGroupCollector topGroups, ValueSource groupByVS, Map vsContext, Sort sort, int docsPerGroup, boolean getScores) throws IOException {\n    boolean getSortFields = false;\n\n    groupMap = new HashMap<MutableValue, SearchGroupDocs>(topGroups.groupMap.size());\n    for (SearchGroup group : topGroups.groupMap.values()) {\n      SearchGroupDocs groupDocs = new SearchGroupDocs();\n      groupDocs.groupValue = group.groupValue;\n      groupDocs.collector = TopFieldCollector.create(sort, docsPerGroup, getSortFields, getScores, getScores, true);\n      groupMap.put(groupDocs.groupValue, groupDocs);\n    }\n\n    this.vs = groupByVS;\n    this.context = vsContext;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4bf528aa2b9571ce1ec892ecf726201ef1e404e3","date":1288732150,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"solr/src/java/org/apache/solr/search/Phase2GroupCollector[Grouping]#Phase2GroupCollector(TopGroupCollector,ValueSource,Map,Sort,int,boolean,int).mjava","pathOld":"solr/src/java/org/apache/solr/search/Phase2GroupCollector[Grouping]#Phase2GroupCollector(TopGroupCollector,ValueSource,Map,Sort,int,boolean,int).mjava","sourceNew":"  // TODO: may want to decouple from the phase1 collector\n  public Phase2GroupCollector(TopGroupCollector topGroups, ValueSource groupByVS, Map vsContext, Sort sort, int docsPerGroup, boolean getScores, int offset) throws IOException {\n    boolean getSortFields = false;\n\n    if (topGroups.orderedGroups == null)\n      topGroups.buildSet();\n\n    groupMap = new HashMap<MutableValue, SearchGroupDocs>(topGroups.groupMap.size());\n    for (SearchGroup group : topGroups.orderedGroups) {\n      if (offset > 0) {\n        offset--;\n        continue;\n      }\n      SearchGroupDocs groupDocs = new SearchGroupDocs();\n      groupDocs.groupValue = group.groupValue;\n      if (sort==null)\n        groupDocs.collector = TopScoreDocCollector.create(docsPerGroup, true);        \n      else\n        groupDocs.collector = TopFieldCollector.create(sort, docsPerGroup, getSortFields, getScores, getScores, true);\n      groupMap.put(groupDocs.groupValue, groupDocs);\n    }\n\n    this.vs = groupByVS;\n    this.context = vsContext;\n  }\n\n","sourceOld":"  // TODO: may want to decouple from the phase1 collector\n  public Phase2GroupCollector(TopGroupCollector topGroups, ValueSource groupByVS, Map vsContext, Sort sort, int docsPerGroup, boolean getScores, int offset) throws IOException {\n    boolean getSortFields = false;\n\n    if (topGroups.orderedGroups == null)\n      topGroups.buildSet();\n\n    groupMap = new HashMap<MutableValue, SearchGroupDocs>(topGroups.groupMap.size());\n    for (SearchGroup group : topGroups.orderedGroups) {\n      if (offset > 0) {\n        offset--;\n        continue;\n      }\n      SearchGroupDocs groupDocs = new SearchGroupDocs();\n      groupDocs.groupValue = group.groupValue;\n      groupDocs.collector = TopFieldCollector.create(sort, docsPerGroup, getSortFields, getScores, getScores, true);\n      groupMap.put(groupDocs.groupValue, groupDocs);\n    }\n\n    this.vs = groupByVS;\n    this.context = vsContext;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"85a883878c0af761245ab048babc63d099f835f3","date":1289553330,"type":1,"author":"Simon Willnauer","isMerge":true,"pathNew":"solr/src/java/org/apache/solr/search/Phase2GroupCollector[Grouping]#Phase2GroupCollector(TopGroupCollector,ValueSource,Map,Sort,int,boolean,int).mjava","pathOld":"solr/src/java/org/apache/solr/search/Phase2GroupCollector[Grouping]#Phase2GroupCollector(TopGroupCollector,ValueSource,Map,Sort,int,boolean).mjava","sourceNew":"  // TODO: may want to decouple from the phase1 collector\n  public Phase2GroupCollector(TopGroupCollector topGroups, ValueSource groupByVS, Map vsContext, Sort sort, int docsPerGroup, boolean getScores, int offset) throws IOException {\n    boolean getSortFields = false;\n\n    if (topGroups.orderedGroups == null)\n      topGroups.buildSet();\n\n    groupMap = new HashMap<MutableValue, SearchGroupDocs>(topGroups.groupMap.size());\n    for (SearchGroup group : topGroups.orderedGroups) {\n      if (offset > 0) {\n        offset--;\n        continue;\n      }\n      SearchGroupDocs groupDocs = new SearchGroupDocs();\n      groupDocs.groupValue = group.groupValue;\n      if (sort==null)\n        groupDocs.collector = TopScoreDocCollector.create(docsPerGroup, true);        \n      else\n        groupDocs.collector = TopFieldCollector.create(sort, docsPerGroup, getSortFields, getScores, getScores, true);\n      groupMap.put(groupDocs.groupValue, groupDocs);\n    }\n\n    this.vs = groupByVS;\n    this.context = vsContext;\n  }\n\n","sourceOld":"  // TODO: may want to decouple from the phase1 collector\n  public Phase2GroupCollector(TopGroupCollector topGroups, ValueSource groupByVS, Map vsContext, Sort sort, int docsPerGroup, boolean getScores) throws IOException {\n    boolean getSortFields = false;\n\n    groupMap = new HashMap<MutableValue, SearchGroupDocs>(topGroups.groupMap.size());\n    for (SearchGroup group : topGroups.groupMap.values()) {\n      SearchGroupDocs groupDocs = new SearchGroupDocs();\n      groupDocs.groupValue = group.groupValue;\n      groupDocs.collector = TopFieldCollector.create(sort, docsPerGroup, getSortFields, getScores, getScores, true);\n      groupMap.put(groupDocs.groupValue, groupDocs);\n    }\n\n    this.vs = groupByVS;\n    this.context = vsContext;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","date":1292920096,"type":0,"author":"Michael Busch","isMerge":true,"pathNew":"solr/src/java/org/apache/solr/search/Phase2GroupCollector[Grouping]#Phase2GroupCollector(TopGroupCollector,ValueSource,Map,Sort,int,boolean,int).mjava","pathOld":"/dev/null","sourceNew":"  // TODO: may want to decouple from the phase1 collector\n  public Phase2GroupCollector(TopGroupCollector topGroups, ValueSource groupByVS, Map vsContext, Sort sort, int docsPerGroup, boolean getScores, int offset) throws IOException {\n    boolean getSortFields = false;\n\n    if (topGroups.orderedGroups == null)\n      topGroups.buildSet();\n\n    groupMap = new HashMap<MutableValue, SearchGroupDocs>(topGroups.groupMap.size());\n    for (SearchGroup group : topGroups.orderedGroups) {\n      if (offset > 0) {\n        offset--;\n        continue;\n      }\n      SearchGroupDocs groupDocs = new SearchGroupDocs();\n      groupDocs.groupValue = group.groupValue;\n      if (sort==null)\n        groupDocs.collector = TopScoreDocCollector.create(docsPerGroup, true);        \n      else\n        groupDocs.collector = TopFieldCollector.create(sort, docsPerGroup, getSortFields, getScores, getScores, true);\n      groupMap.put(groupDocs.groupValue, groupDocs);\n    }\n\n    this.vs = groupByVS;\n    this.context = vsContext;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"771281b4c7dc712b48ba338b970b49007ca402a1","date":1295480908,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"solr/src/java/org/apache/solr/search/Phase2GroupCollector[Grouping]#Phase2GroupCollector(TopGroupCollector,ValueSource,Map,Sort,int,boolean,int).mjava","pathOld":"solr/src/java/org/apache/solr/search/Phase2GroupCollector[Grouping]#Phase2GroupCollector(TopGroupCollector,ValueSource,Map,Sort,int,boolean,int).mjava","sourceNew":"  // TODO: may want to decouple from the phase1 collector\n  public Phase2GroupCollector(TopGroupCollector topGroups, ValueSource groupByVS, Map vsContext, Sort weightedSort, int docsPerGroup, boolean getScores, int offset) throws IOException {\n    boolean getSortFields = false;\n\n    if (topGroups.orderedGroups == null)\n      topGroups.buildSet();\n\n    groupMap = new HashMap<MutableValue, SearchGroupDocs>(topGroups.groupMap.size());\n    for (SearchGroup group : topGroups.orderedGroups) {\n      if (offset > 0) {\n        offset--;\n        continue;\n      }\n      SearchGroupDocs groupDocs = new SearchGroupDocs();\n      groupDocs.groupValue = group.groupValue;\n      if (weightedSort==null)\n        groupDocs.collector = TopScoreDocCollector.create(docsPerGroup, true);        \n      else\n        groupDocs.collector = TopFieldCollector.create(weightedSort, docsPerGroup, getSortFields, getScores, getScores, true);\n      groupMap.put(groupDocs.groupValue, groupDocs);\n    }\n\n    this.vs = groupByVS;\n    this.context = vsContext;\n  }\n\n","sourceOld":"  // TODO: may want to decouple from the phase1 collector\n  public Phase2GroupCollector(TopGroupCollector topGroups, ValueSource groupByVS, Map vsContext, Sort sort, int docsPerGroup, boolean getScores, int offset) throws IOException {\n    boolean getSortFields = false;\n\n    if (topGroups.orderedGroups == null)\n      topGroups.buildSet();\n\n    groupMap = new HashMap<MutableValue, SearchGroupDocs>(topGroups.groupMap.size());\n    for (SearchGroup group : topGroups.orderedGroups) {\n      if (offset > 0) {\n        offset--;\n        continue;\n      }\n      SearchGroupDocs groupDocs = new SearchGroupDocs();\n      groupDocs.groupValue = group.groupValue;\n      if (sort==null)\n        groupDocs.collector = TopScoreDocCollector.create(docsPerGroup, true);        \n      else\n        groupDocs.collector = TopFieldCollector.create(sort, docsPerGroup, getSortFields, getScores, getScores, true);\n      groupMap.put(groupDocs.groupValue, groupDocs);\n    }\n\n    this.vs = groupByVS;\n    this.context = vsContext;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e79a6d080bdd5b2a8f56342cf571b5476de04180","date":1295638686,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"solr/src/java/org/apache/solr/search/Phase2GroupCollector[Grouping]#Phase2GroupCollector(TopGroupCollector,ValueSource,Map,Sort,int,boolean,int).mjava","pathOld":"solr/src/java/org/apache/solr/search/Phase2GroupCollector[Grouping]#Phase2GroupCollector(TopGroupCollector,ValueSource,Map,Sort,int,boolean,int).mjava","sourceNew":"  // TODO: may want to decouple from the phase1 collector\n  public Phase2GroupCollector(TopGroupCollector topGroups, ValueSource groupByVS, Map vsContext, Sort weightedSort, int docsPerGroup, boolean getScores, int offset) throws IOException {\n    boolean getSortFields = false;\n\n    if (topGroups.orderedGroups == null)\n      topGroups.buildSet();\n\n    groupMap = new HashMap<MutableValue, SearchGroupDocs>(topGroups.groupMap.size());\n    for (SearchGroup group : topGroups.orderedGroups) {\n      if (offset > 0) {\n        offset--;\n        continue;\n      }\n      SearchGroupDocs groupDocs = new SearchGroupDocs();\n      groupDocs.groupValue = group.groupValue;\n      if (weightedSort==null)\n        groupDocs.collector = TopScoreDocCollector.create(docsPerGroup, true);        \n      else\n        groupDocs.collector = TopFieldCollector.create(weightedSort, docsPerGroup, getSortFields, getScores, getScores, true);\n      groupMap.put(groupDocs.groupValue, groupDocs);\n    }\n\n    this.vs = groupByVS;\n    this.context = vsContext;\n  }\n\n","sourceOld":"  // TODO: may want to decouple from the phase1 collector\n  public Phase2GroupCollector(TopGroupCollector topGroups, ValueSource groupByVS, Map vsContext, Sort sort, int docsPerGroup, boolean getScores, int offset) throws IOException {\n    boolean getSortFields = false;\n\n    if (topGroups.orderedGroups == null)\n      topGroups.buildSet();\n\n    groupMap = new HashMap<MutableValue, SearchGroupDocs>(topGroups.groupMap.size());\n    for (SearchGroup group : topGroups.orderedGroups) {\n      if (offset > 0) {\n        offset--;\n        continue;\n      }\n      SearchGroupDocs groupDocs = new SearchGroupDocs();\n      groupDocs.groupValue = group.groupValue;\n      if (sort==null)\n        groupDocs.collector = TopScoreDocCollector.create(docsPerGroup, true);        \n      else\n        groupDocs.collector = TopFieldCollector.create(sort, docsPerGroup, getSortFields, getScores, getScores, true);\n      groupMap.put(groupDocs.groupValue, groupDocs);\n    }\n\n    this.vs = groupByVS;\n    this.context = vsContext;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"29ef99d61cda9641b6250bf9567329a6e65f901d","date":1297244127,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"solr/src/java/org/apache/solr/search/Phase2GroupCollector[Grouping]#Phase2GroupCollector(TopGroupCollector,ValueSource,Map,Sort,int,boolean,int).mjava","pathOld":"solr/src/java/org/apache/solr/search/Phase2GroupCollector[Grouping]#Phase2GroupCollector(TopGroupCollector,ValueSource,Map,Sort,int,boolean,int).mjava","sourceNew":"  // TODO: may want to decouple from the phase1 collector\n  public Phase2GroupCollector(TopGroupCollector topGroups, ValueSource groupByVS, Map vsContext, Sort weightedSort, int docsPerGroup, boolean getScores, int offset) throws IOException {\n    boolean getSortFields = false;\n\n    if (topGroups.orderedGroups == null)\n      topGroups.buildSet();\n\n    groupMap = new HashMap<MutableValue, SearchGroupDocs>(topGroups.groupMap.size());\n    for (SearchGroup group : topGroups.orderedGroups) {\n      if (offset > 0) {\n        offset--;\n        continue;\n      }\n      SearchGroupDocs groupDocs = new SearchGroupDocs();\n      groupDocs.groupValue = group.groupValue;\n      if (weightedSort==null)\n        groupDocs.collector = TopScoreDocCollector.create(docsPerGroup, true);        \n      else\n        groupDocs.collector = TopFieldCollector.create(weightedSort, docsPerGroup, getSortFields, getScores, getScores, true);\n      groupMap.put(groupDocs.groupValue, groupDocs);\n    }\n\n    this.vs = groupByVS;\n    this.context = vsContext;\n  }\n\n","sourceOld":"  // TODO: may want to decouple from the phase1 collector\n  public Phase2GroupCollector(TopGroupCollector topGroups, ValueSource groupByVS, Map vsContext, Sort sort, int docsPerGroup, boolean getScores, int offset) throws IOException {\n    boolean getSortFields = false;\n\n    if (topGroups.orderedGroups == null)\n      topGroups.buildSet();\n\n    groupMap = new HashMap<MutableValue, SearchGroupDocs>(topGroups.groupMap.size());\n    for (SearchGroup group : topGroups.orderedGroups) {\n      if (offset > 0) {\n        offset--;\n        continue;\n      }\n      SearchGroupDocs groupDocs = new SearchGroupDocs();\n      groupDocs.groupValue = group.groupValue;\n      if (sort==null)\n        groupDocs.collector = TopScoreDocCollector.create(docsPerGroup, true);        \n      else\n        groupDocs.collector = TopFieldCollector.create(sort, docsPerGroup, getSortFields, getScores, getScores, true);\n      groupMap.put(groupDocs.groupValue, groupDocs);\n    }\n\n    this.vs = groupByVS;\n    this.context = vsContext;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9c7cdfe5a1ea9db97faa404b251fa644faa73597","date":1308345959,"type":4,"author":"Martijn van Groningen","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/src/java/org/apache/solr/search/Phase2GroupCollector[Grouping]#Phase2GroupCollector(TopGroupCollector,ValueSource,Map,Sort,int,boolean,int).mjava","sourceNew":null,"sourceOld":"  // TODO: may want to decouple from the phase1 collector\n  public Phase2GroupCollector(TopGroupCollector topGroups, ValueSource groupByVS, Map vsContext, Sort weightedSort, int docsPerGroup, boolean getScores, int offset) throws IOException {\n    boolean getSortFields = false;\n\n    if (topGroups.orderedGroups == null)\n      topGroups.buildSet();\n\n    groupMap = new HashMap<MutableValue, SearchGroupDocs>(topGroups.groupMap.size());\n    for (SearchGroup group : topGroups.orderedGroups) {\n      if (offset > 0) {\n        offset--;\n        continue;\n      }\n      SearchGroupDocs groupDocs = new SearchGroupDocs();\n      groupDocs.groupValue = group.groupValue;\n      if (weightedSort==null)\n        groupDocs.collector = TopScoreDocCollector.create(docsPerGroup, true);        \n      else\n        groupDocs.collector = TopFieldCollector.create(weightedSort, docsPerGroup, getSortFields, getScores, getScores, true);\n      groupMap.put(groupDocs.groupValue, groupDocs);\n    }\n\n    this.vs = groupByVS;\n    this.context = vsContext;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7edfc3f7caa7b49a18fe367692768b33b018e9db","date":1308374217,"type":4,"author":"Steven Rowe","isMerge":true,"pathNew":"/dev/null","pathOld":"solr/src/java/org/apache/solr/search/Phase2GroupCollector[Grouping]#Phase2GroupCollector(TopGroupCollector,ValueSource,Map,Sort,int,boolean,int).mjava","sourceNew":null,"sourceOld":"  // TODO: may want to decouple from the phase1 collector\n  public Phase2GroupCollector(TopGroupCollector topGroups, ValueSource groupByVS, Map vsContext, Sort weightedSort, int docsPerGroup, boolean getScores, int offset) throws IOException {\n    boolean getSortFields = false;\n\n    if (topGroups.orderedGroups == null)\n      topGroups.buildSet();\n\n    groupMap = new HashMap<MutableValue, SearchGroupDocs>(topGroups.groupMap.size());\n    for (SearchGroup group : topGroups.orderedGroups) {\n      if (offset > 0) {\n        offset--;\n        continue;\n      }\n      SearchGroupDocs groupDocs = new SearchGroupDocs();\n      groupDocs.groupValue = group.groupValue;\n      if (weightedSort==null)\n        groupDocs.collector = TopScoreDocCollector.create(docsPerGroup, true);        \n      else\n        groupDocs.collector = TopFieldCollector.create(weightedSort, docsPerGroup, getSortFields, getScores, getScores, true);\n      groupMap.put(groupDocs.groupValue, groupDocs);\n    }\n\n    this.vs = groupByVS;\n    this.context = vsContext;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"4bf528aa2b9571ce1ec892ecf726201ef1e404e3":["ddd83ce02b85f7d0c728af48e14e0eeb42de813a"],"7edfc3f7caa7b49a18fe367692768b33b018e9db":["771281b4c7dc712b48ba338b970b49007ca402a1","9c7cdfe5a1ea9db97faa404b251fa644faa73597"],"29ef99d61cda9641b6250bf9567329a6e65f901d":["85a883878c0af761245ab048babc63d099f835f3","771281b4c7dc712b48ba338b970b49007ca402a1"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"85a883878c0af761245ab048babc63d099f835f3":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","4bf528aa2b9571ce1ec892ecf726201ef1e404e3"],"9c7cdfe5a1ea9db97faa404b251fa644faa73597":["771281b4c7dc712b48ba338b970b49007ca402a1"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","4bf528aa2b9571ce1ec892ecf726201ef1e404e3"],"ddd83ce02b85f7d0c728af48e14e0eeb42de813a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"e79a6d080bdd5b2a8f56342cf571b5476de04180":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","771281b4c7dc712b48ba338b970b49007ca402a1"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9c7cdfe5a1ea9db97faa404b251fa644faa73597"],"771281b4c7dc712b48ba338b970b49007ca402a1":["4bf528aa2b9571ce1ec892ecf726201ef1e404e3"]},"commit2Childs":{"4bf528aa2b9571ce1ec892ecf726201ef1e404e3":["85a883878c0af761245ab048babc63d099f835f3","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","771281b4c7dc712b48ba338b970b49007ca402a1"],"7edfc3f7caa7b49a18fe367692768b33b018e9db":[],"29ef99d61cda9641b6250bf9567329a6e65f901d":[],"85a883878c0af761245ab048babc63d099f835f3":["29ef99d61cda9641b6250bf9567329a6e65f901d"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["85a883878c0af761245ab048babc63d099f835f3","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","ddd83ce02b85f7d0c728af48e14e0eeb42de813a"],"9c7cdfe5a1ea9db97faa404b251fa644faa73597":["7edfc3f7caa7b49a18fe367692768b33b018e9db","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["e79a6d080bdd5b2a8f56342cf571b5476de04180"],"ddd83ce02b85f7d0c728af48e14e0eeb42de813a":["4bf528aa2b9571ce1ec892ecf726201ef1e404e3"],"e79a6d080bdd5b2a8f56342cf571b5476de04180":[],"771281b4c7dc712b48ba338b970b49007ca402a1":["7edfc3f7caa7b49a18fe367692768b33b018e9db","29ef99d61cda9641b6250bf9567329a6e65f901d","9c7cdfe5a1ea9db97faa404b251fa644faa73597","e79a6d080bdd5b2a8f56342cf571b5476de04180"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["7edfc3f7caa7b49a18fe367692768b33b018e9db","29ef99d61cda9641b6250bf9567329a6e65f901d","e79a6d080bdd5b2a8f56342cf571b5476de04180","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}