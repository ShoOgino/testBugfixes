{"path":"lucene/core/src/java/org/apache/lucene/index/DocValuesProcessor#addNumericField(FieldInfo,int,float).mjava","commits":[{"id":"127981e5a1e1d1425c5fdc816ceacf753ca70ee4","date":1354205321,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/DocValuesProcessor#addNumericField(FieldInfo,int,float).mjava","pathOld":"/dev/null","sourceNew":"  void addNumericField(FieldInfo fieldInfo, int docID, float value) {\n    DocValuesWriter writer = writers.get(fieldInfo.name);\n    NumberDVWriter numericWriter;\n    if (writer == null) {\n      numericWriter = new NumberDVWriter(fieldInfo, bytesUsed);\n      writers.put(fieldInfo.name, numericWriter);\n    } else if (!(writer instanceof NumberDVWriter)) {\n      throw new IllegalArgumentException(\"Incompatible DocValues type: field \\\"\" + fieldInfo.name + \"\\\" changed from \" + getTypeDesc(writer) + \" to numeric\");\n    } else {\n      numericWriter = (NumberDVWriter) writer;\n    }\n    numericWriter.addValue(docID, Float.floatToRawIntBits(value));\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"423d89a2b3cc419b647c07c2b3fdbc54311d07f9","date":1358836612,"type":4,"author":"Robert Muir","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/index/DocValuesProcessor#addNumericField(FieldInfo,int,float).mjava","sourceNew":null,"sourceOld":"  void addNumericField(FieldInfo fieldInfo, int docID, float value) {\n    DocValuesWriter writer = writers.get(fieldInfo.name);\n    NumberDVWriter numericWriter;\n    if (writer == null) {\n      numericWriter = new NumberDVWriter(fieldInfo, bytesUsed);\n      writers.put(fieldInfo.name, numericWriter);\n    } else if (!(writer instanceof NumberDVWriter)) {\n      throw new IllegalArgumentException(\"Incompatible DocValues type: field \\\"\" + fieldInfo.name + \"\\\" changed from \" + getTypeDesc(writer) + \" to numeric\");\n    } else {\n      numericWriter = (NumberDVWriter) writer;\n    }\n    numericWriter.addValue(docID, Float.floatToRawIntBits(value));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"127981e5a1e1d1425c5fdc816ceacf753ca70ee4":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"423d89a2b3cc419b647c07c2b3fdbc54311d07f9":["127981e5a1e1d1425c5fdc816ceacf753ca70ee4"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["127981e5a1e1d1425c5fdc816ceacf753ca70ee4","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"127981e5a1e1d1425c5fdc816ceacf753ca70ee4":["423d89a2b3cc419b647c07c2b3fdbc54311d07f9"],"423d89a2b3cc419b647c07c2b3fdbc54311d07f9":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["423d89a2b3cc419b647c07c2b3fdbc54311d07f9","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}