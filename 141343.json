{"path":"lucene/analysis/common/src/java/org/tartarus/snowball/ext/DanishStemmer#r_other_suffix().mjava","commits":[{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/common/src/java/org/tartarus/snowball/ext/DanishStemmer#r_other_suffix().mjava","pathOld":"modules/analysis/common/src/java/org/tartarus/snowball/ext/DanishStemmer#r_other_suffix().mjava","sourceNew":"        private boolean r_other_suffix() {\n            int among_var;\n            int v_1;\n            int v_2;\n            int v_3;\n            int v_4;\n            // (, line 65\n            // do, line 66\n            v_1 = limit - cursor;\n            lab0: do {\n                // (, line 66\n                // [, line 66\n                ket = cursor;\n                // literal, line 66\n                if (!(eq_s_b(2, \"st\")))\n                {\n                    break lab0;\n                }\n                // ], line 66\n                bra = cursor;\n                // literal, line 66\n                if (!(eq_s_b(2, \"ig\")))\n                {\n                    break lab0;\n                }\n                // delete, line 66\n                slice_del();\n            } while (false);\n            cursor = limit - v_1;\n            // setlimit, line 67\n            v_2 = limit - cursor;\n            // tomark, line 67\n            if (cursor < I_p1)\n            {\n                return false;\n            }\n            cursor = I_p1;\n            v_3 = limit_backward;\n            limit_backward = cursor;\n            cursor = limit - v_2;\n            // (, line 67\n            // [, line 67\n            ket = cursor;\n            // substring, line 67\n            among_var = find_among_b(a_2, 5);\n            if (among_var == 0)\n            {\n                limit_backward = v_3;\n                return false;\n            }\n            // ], line 67\n            bra = cursor;\n            limit_backward = v_3;\n            switch(among_var) {\n                case 0:\n                    return false;\n                case 1:\n                    // (, line 70\n                    // delete, line 70\n                    slice_del();\n                    // do, line 70\n                    v_4 = limit - cursor;\n                    lab1: do {\n                        // call consonant_pair, line 70\n                        if (!r_consonant_pair())\n                        {\n                            break lab1;\n                        }\n                    } while (false);\n                    cursor = limit - v_4;\n                    break;\n                case 2:\n                    // (, line 72\n                    // <-, line 72\n                    slice_from(\"l\\u00F8s\");\n                    break;\n            }\n            return true;\n        }\n\n","sourceOld":"        private boolean r_other_suffix() {\n            int among_var;\n            int v_1;\n            int v_2;\n            int v_3;\n            int v_4;\n            // (, line 65\n            // do, line 66\n            v_1 = limit - cursor;\n            lab0: do {\n                // (, line 66\n                // [, line 66\n                ket = cursor;\n                // literal, line 66\n                if (!(eq_s_b(2, \"st\")))\n                {\n                    break lab0;\n                }\n                // ], line 66\n                bra = cursor;\n                // literal, line 66\n                if (!(eq_s_b(2, \"ig\")))\n                {\n                    break lab0;\n                }\n                // delete, line 66\n                slice_del();\n            } while (false);\n            cursor = limit - v_1;\n            // setlimit, line 67\n            v_2 = limit - cursor;\n            // tomark, line 67\n            if (cursor < I_p1)\n            {\n                return false;\n            }\n            cursor = I_p1;\n            v_3 = limit_backward;\n            limit_backward = cursor;\n            cursor = limit - v_2;\n            // (, line 67\n            // [, line 67\n            ket = cursor;\n            // substring, line 67\n            among_var = find_among_b(a_2, 5);\n            if (among_var == 0)\n            {\n                limit_backward = v_3;\n                return false;\n            }\n            // ], line 67\n            bra = cursor;\n            limit_backward = v_3;\n            switch(among_var) {\n                case 0:\n                    return false;\n                case 1:\n                    // (, line 70\n                    // delete, line 70\n                    slice_del();\n                    // do, line 70\n                    v_4 = limit - cursor;\n                    lab1: do {\n                        // call consonant_pair, line 70\n                        if (!r_consonant_pair())\n                        {\n                            break lab1;\n                        }\n                    } while (false);\n                    cursor = limit - v_4;\n                    break;\n                case 2:\n                    // (, line 72\n                    // <-, line 72\n                    slice_from(\"l\\u00F8s\");\n                    break;\n            }\n            return true;\n        }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b6a6a9e301c12ab07b1d0428b5aad813fff317b3","date":1343846505,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/common/src/java/org/tartarus/snowball/ext/DanishStemmer#r_other_suffix().mjava","pathOld":"lucene/analysis/common/src/java/org/tartarus/snowball/ext/DanishStemmer#r_other_suffix().mjava","sourceNew":"                private boolean r_other_suffix() {\n            int among_var;\n            int v_1;\n            int v_2;\n            int v_3;\n            int v_4;\n                    // (, line 65\n                    // do, line 66\n                    v_1 = limit - cursor;\n                    lab0: do {\n                        // (, line 66\n                        // [, line 66\n                        ket = cursor;\n                        // literal, line 66\n                        if (!(eq_s_b(2, \"st\")))\n                        {\n                            break lab0;\n                        }\n                        // ], line 66\n                        bra = cursor;\n                        // literal, line 66\n                        if (!(eq_s_b(2, \"ig\")))\n                        {\n                            break lab0;\n                        }\n                        // delete, line 66\n                        slice_del();\n                    } while (false);\n                    cursor = limit - v_1;\n                    // setlimit, line 67\n                    v_2 = limit - cursor;\n                    // tomark, line 67\n                    if (cursor < I_p1)\n                    {\n                        return false;\n                    }\n                    cursor = I_p1;\n                    v_3 = limit_backward;\n                    limit_backward = cursor;\n                    cursor = limit - v_2;\n                    // (, line 67\n                    // [, line 67\n                    ket = cursor;\n                    // substring, line 67\n                    among_var = find_among_b(a_2, 5);\n                    if (among_var == 0)\n                    {\n                        limit_backward = v_3;\n                        return false;\n                    }\n                    // ], line 67\n                    bra = cursor;\n                    limit_backward = v_3;\n                    switch(among_var) {\n                        case 0:\n                            return false;\n                        case 1:\n                            // (, line 70\n                            // delete, line 70\n                            slice_del();\n                            // do, line 70\n                            v_4 = limit - cursor;\n                            lab1: do {\n                                // call consonant_pair, line 70\n                                if (!r_consonant_pair())\n                                {\n                                    break lab1;\n                                }\n                            } while (false);\n                            cursor = limit - v_4;\n                            break;\n                        case 2:\n                            // (, line 72\n                            // <-, line 72\n                            slice_from(\"l\\u00F8s\");\n                            break;\n                    }\n                    return true;\n                }\n\n","sourceOld":"        private boolean r_other_suffix() {\n            int among_var;\n            int v_1;\n            int v_2;\n            int v_3;\n            int v_4;\n            // (, line 65\n            // do, line 66\n            v_1 = limit - cursor;\n            lab0: do {\n                // (, line 66\n                // [, line 66\n                ket = cursor;\n                // literal, line 66\n                if (!(eq_s_b(2, \"st\")))\n                {\n                    break lab0;\n                }\n                // ], line 66\n                bra = cursor;\n                // literal, line 66\n                if (!(eq_s_b(2, \"ig\")))\n                {\n                    break lab0;\n                }\n                // delete, line 66\n                slice_del();\n            } while (false);\n            cursor = limit - v_1;\n            // setlimit, line 67\n            v_2 = limit - cursor;\n            // tomark, line 67\n            if (cursor < I_p1)\n            {\n                return false;\n            }\n            cursor = I_p1;\n            v_3 = limit_backward;\n            limit_backward = cursor;\n            cursor = limit - v_2;\n            // (, line 67\n            // [, line 67\n            ket = cursor;\n            // substring, line 67\n            among_var = find_among_b(a_2, 5);\n            if (among_var == 0)\n            {\n                limit_backward = v_3;\n                return false;\n            }\n            // ], line 67\n            bra = cursor;\n            limit_backward = v_3;\n            switch(among_var) {\n                case 0:\n                    return false;\n                case 1:\n                    // (, line 70\n                    // delete, line 70\n                    slice_del();\n                    // do, line 70\n                    v_4 = limit - cursor;\n                    lab1: do {\n                        // call consonant_pair, line 70\n                        if (!r_consonant_pair())\n                        {\n                            break lab1;\n                        }\n                    } while (false);\n                    cursor = limit - v_4;\n                    break;\n                case 2:\n                    // (, line 72\n                    // <-, line 72\n                    slice_from(\"l\\u00F8s\");\n                    break;\n            }\n            return true;\n        }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8fd5be977c105554c6a7b68afcdbc511439723ab","date":1344115570,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/analysis/common/src/java/org/tartarus/snowball/ext/DanishStemmer#r_other_suffix().mjava","pathOld":"lucene/analysis/common/src/java/org/tartarus/snowball/ext/DanishStemmer#r_other_suffix().mjava","sourceNew":"                private boolean r_other_suffix() {\n            int among_var;\n            int v_1;\n            int v_2;\n            int v_3;\n            int v_4;\n                    // (, line 65\n                    // do, line 66\n                    v_1 = limit - cursor;\n                    lab0: do {\n                        // (, line 66\n                        // [, line 66\n                        ket = cursor;\n                        // literal, line 66\n                        if (!(eq_s_b(2, \"st\")))\n                        {\n                            break lab0;\n                        }\n                        // ], line 66\n                        bra = cursor;\n                        // literal, line 66\n                        if (!(eq_s_b(2, \"ig\")))\n                        {\n                            break lab0;\n                        }\n                        // delete, line 66\n                        slice_del();\n                    } while (false);\n                    cursor = limit - v_1;\n                    // setlimit, line 67\n                    v_2 = limit - cursor;\n                    // tomark, line 67\n                    if (cursor < I_p1)\n                    {\n                        return false;\n                    }\n                    cursor = I_p1;\n                    v_3 = limit_backward;\n                    limit_backward = cursor;\n                    cursor = limit - v_2;\n                    // (, line 67\n                    // [, line 67\n                    ket = cursor;\n                    // substring, line 67\n                    among_var = find_among_b(a_2, 5);\n                    if (among_var == 0)\n                    {\n                        limit_backward = v_3;\n                        return false;\n                    }\n                    // ], line 67\n                    bra = cursor;\n                    limit_backward = v_3;\n                    switch(among_var) {\n                        case 0:\n                            return false;\n                        case 1:\n                            // (, line 70\n                            // delete, line 70\n                            slice_del();\n                            // do, line 70\n                            v_4 = limit - cursor;\n                            lab1: do {\n                                // call consonant_pair, line 70\n                                if (!r_consonant_pair())\n                                {\n                                    break lab1;\n                                }\n                            } while (false);\n                            cursor = limit - v_4;\n                            break;\n                        case 2:\n                            // (, line 72\n                            // <-, line 72\n                            slice_from(\"l\\u00F8s\");\n                            break;\n                    }\n                    return true;\n                }\n\n","sourceOld":"        private boolean r_other_suffix() {\n            int among_var;\n            int v_1;\n            int v_2;\n            int v_3;\n            int v_4;\n            // (, line 65\n            // do, line 66\n            v_1 = limit - cursor;\n            lab0: do {\n                // (, line 66\n                // [, line 66\n                ket = cursor;\n                // literal, line 66\n                if (!(eq_s_b(2, \"st\")))\n                {\n                    break lab0;\n                }\n                // ], line 66\n                bra = cursor;\n                // literal, line 66\n                if (!(eq_s_b(2, \"ig\")))\n                {\n                    break lab0;\n                }\n                // delete, line 66\n                slice_del();\n            } while (false);\n            cursor = limit - v_1;\n            // setlimit, line 67\n            v_2 = limit - cursor;\n            // tomark, line 67\n            if (cursor < I_p1)\n            {\n                return false;\n            }\n            cursor = I_p1;\n            v_3 = limit_backward;\n            limit_backward = cursor;\n            cursor = limit - v_2;\n            // (, line 67\n            // [, line 67\n            ket = cursor;\n            // substring, line 67\n            among_var = find_among_b(a_2, 5);\n            if (among_var == 0)\n            {\n                limit_backward = v_3;\n                return false;\n            }\n            // ], line 67\n            bra = cursor;\n            limit_backward = v_3;\n            switch(among_var) {\n                case 0:\n                    return false;\n                case 1:\n                    // (, line 70\n                    // delete, line 70\n                    slice_del();\n                    // do, line 70\n                    v_4 = limit - cursor;\n                    lab1: do {\n                        // call consonant_pair, line 70\n                        if (!r_consonant_pair())\n                        {\n                            break lab1;\n                        }\n                    } while (false);\n                    cursor = limit - v_4;\n                    break;\n                case 2:\n                    // (, line 72\n                    // <-, line 72\n                    slice_from(\"l\\u00F8s\");\n                    break;\n            }\n            return true;\n        }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d6f074e73200c07d54f242d3880a8da5a35ff97b","date":1344507653,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/analysis/common/src/java/org/tartarus/snowball/ext/DanishStemmer#r_other_suffix().mjava","pathOld":"lucene/analysis/common/src/java/org/tartarus/snowball/ext/DanishStemmer#r_other_suffix().mjava","sourceNew":"                private boolean r_other_suffix() {\n            int among_var;\n            int v_1;\n            int v_2;\n            int v_3;\n            int v_4;\n                    // (, line 65\n                    // do, line 66\n                    v_1 = limit - cursor;\n                    lab0: do {\n                        // (, line 66\n                        // [, line 66\n                        ket = cursor;\n                        // literal, line 66\n                        if (!(eq_s_b(2, \"st\")))\n                        {\n                            break lab0;\n                        }\n                        // ], line 66\n                        bra = cursor;\n                        // literal, line 66\n                        if (!(eq_s_b(2, \"ig\")))\n                        {\n                            break lab0;\n                        }\n                        // delete, line 66\n                        slice_del();\n                    } while (false);\n                    cursor = limit - v_1;\n                    // setlimit, line 67\n                    v_2 = limit - cursor;\n                    // tomark, line 67\n                    if (cursor < I_p1)\n                    {\n                        return false;\n                    }\n                    cursor = I_p1;\n                    v_3 = limit_backward;\n                    limit_backward = cursor;\n                    cursor = limit - v_2;\n                    // (, line 67\n                    // [, line 67\n                    ket = cursor;\n                    // substring, line 67\n                    among_var = find_among_b(a_2, 5);\n                    if (among_var == 0)\n                    {\n                        limit_backward = v_3;\n                        return false;\n                    }\n                    // ], line 67\n                    bra = cursor;\n                    limit_backward = v_3;\n                    switch(among_var) {\n                        case 0:\n                            return false;\n                        case 1:\n                            // (, line 70\n                            // delete, line 70\n                            slice_del();\n                            // do, line 70\n                            v_4 = limit - cursor;\n                            lab1: do {\n                                // call consonant_pair, line 70\n                                if (!r_consonant_pair())\n                                {\n                                    break lab1;\n                                }\n                            } while (false);\n                            cursor = limit - v_4;\n                            break;\n                        case 2:\n                            // (, line 72\n                            // <-, line 72\n                            slice_from(\"l\\u00F8s\");\n                            break;\n                    }\n                    return true;\n                }\n\n","sourceOld":"        private boolean r_other_suffix() {\n            int among_var;\n            int v_1;\n            int v_2;\n            int v_3;\n            int v_4;\n            // (, line 65\n            // do, line 66\n            v_1 = limit - cursor;\n            lab0: do {\n                // (, line 66\n                // [, line 66\n                ket = cursor;\n                // literal, line 66\n                if (!(eq_s_b(2, \"st\")))\n                {\n                    break lab0;\n                }\n                // ], line 66\n                bra = cursor;\n                // literal, line 66\n                if (!(eq_s_b(2, \"ig\")))\n                {\n                    break lab0;\n                }\n                // delete, line 66\n                slice_del();\n            } while (false);\n            cursor = limit - v_1;\n            // setlimit, line 67\n            v_2 = limit - cursor;\n            // tomark, line 67\n            if (cursor < I_p1)\n            {\n                return false;\n            }\n            cursor = I_p1;\n            v_3 = limit_backward;\n            limit_backward = cursor;\n            cursor = limit - v_2;\n            // (, line 67\n            // [, line 67\n            ket = cursor;\n            // substring, line 67\n            among_var = find_among_b(a_2, 5);\n            if (among_var == 0)\n            {\n                limit_backward = v_3;\n                return false;\n            }\n            // ], line 67\n            bra = cursor;\n            limit_backward = v_3;\n            switch(among_var) {\n                case 0:\n                    return false;\n                case 1:\n                    // (, line 70\n                    // delete, line 70\n                    slice_del();\n                    // do, line 70\n                    v_4 = limit - cursor;\n                    lab1: do {\n                        // call consonant_pair, line 70\n                        if (!r_consonant_pair())\n                        {\n                            break lab1;\n                        }\n                    } while (false);\n                    cursor = limit - v_4;\n                    break;\n                case 2:\n                    // (, line 72\n                    // <-, line 72\n                    slice_from(\"l\\u00F8s\");\n                    break;\n            }\n            return true;\n        }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"09479cd2de06c67a115b7346a8e5de8af4d62e81","date":1581961081,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/common/src/java/org/tartarus/snowball/ext/DanishStemmer#r_other_suffix().mjava","pathOld":"lucene/analysis/common/src/java/org/tartarus/snowball/ext/DanishStemmer#r_other_suffix().mjava","sourceNew":"private boolean r_other_suffix() {\n  int among_var;\n  int v_1 = limit - cursor;\n  lab0: {\n    ket = cursor;\n    if (!(eq_s_b(\"st\")))\n    {\n      break lab0;\n    }\n    bra = cursor;\n    if (!(eq_s_b(\"ig\")))\n    {\n      break lab0;\n    }\n    slice_del();\n  }\n  cursor = limit - v_1;\n  if (cursor < I_p1)\n  {\n    return false;\n  }\n  int v_3 = limit_backward;\n  limit_backward = I_p1;\n  ket = cursor;\n  among_var = find_among_b(a_2);\n  if (among_var == 0)\n  {\n    limit_backward = v_3;\n    return false;\n  }\n  bra = cursor;\n  limit_backward = v_3;\n  switch (among_var) {\n    case 1:\n      slice_del();\n      int v_4 = limit - cursor;\n      r_consonant_pair();\n      cursor = limit - v_4;\n      break;\n    case 2:\n      slice_from(\"l\\u00F8s\");\n      break;\n  }\n  return true;\n}\n\n","sourceOld":"                private boolean r_other_suffix() {\n            int among_var;\n            int v_1;\n            int v_2;\n            int v_3;\n            int v_4;\n                    // (, line 65\n                    // do, line 66\n                    v_1 = limit - cursor;\n                    lab0: do {\n                        // (, line 66\n                        // [, line 66\n                        ket = cursor;\n                        // literal, line 66\n                        if (!(eq_s_b(2, \"st\")))\n                        {\n                            break lab0;\n                        }\n                        // ], line 66\n                        bra = cursor;\n                        // literal, line 66\n                        if (!(eq_s_b(2, \"ig\")))\n                        {\n                            break lab0;\n                        }\n                        // delete, line 66\n                        slice_del();\n                    } while (false);\n                    cursor = limit - v_1;\n                    // setlimit, line 67\n                    v_2 = limit - cursor;\n                    // tomark, line 67\n                    if (cursor < I_p1)\n                    {\n                        return false;\n                    }\n                    cursor = I_p1;\n                    v_3 = limit_backward;\n                    limit_backward = cursor;\n                    cursor = limit - v_2;\n                    // (, line 67\n                    // [, line 67\n                    ket = cursor;\n                    // substring, line 67\n                    among_var = find_among_b(a_2, 5);\n                    if (among_var == 0)\n                    {\n                        limit_backward = v_3;\n                        return false;\n                    }\n                    // ], line 67\n                    bra = cursor;\n                    limit_backward = v_3;\n                    switch(among_var) {\n                        case 0:\n                            return false;\n                        case 1:\n                            // (, line 70\n                            // delete, line 70\n                            slice_del();\n                            // do, line 70\n                            v_4 = limit - cursor;\n                            lab1: do {\n                                // call consonant_pair, line 70\n                                if (!r_consonant_pair())\n                                {\n                                    break lab1;\n                                }\n                            } while (false);\n                            cursor = limit - v_4;\n                            break;\n                        case 2:\n                            // (, line 72\n                            // <-, line 72\n                            slice_from(\"l\\u00F8s\");\n                            break;\n                    }\n                    return true;\n                }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"d6f074e73200c07d54f242d3880a8da5a35ff97b":["b89678825b68eccaf09e6ab71675fc0b0af1e099","b6a6a9e301c12ab07b1d0428b5aad813fff317b3"],"b6a6a9e301c12ab07b1d0428b5aad813fff317b3":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"8fd5be977c105554c6a7b68afcdbc511439723ab":["b89678825b68eccaf09e6ab71675fc0b0af1e099","b6a6a9e301c12ab07b1d0428b5aad813fff317b3"],"09479cd2de06c67a115b7346a8e5de8af4d62e81":["b6a6a9e301c12ab07b1d0428b5aad813fff317b3"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["09479cd2de06c67a115b7346a8e5de8af4d62e81"]},"commit2Childs":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["d6f074e73200c07d54f242d3880a8da5a35ff97b","b6a6a9e301c12ab07b1d0428b5aad813fff317b3","8fd5be977c105554c6a7b68afcdbc511439723ab"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"d6f074e73200c07d54f242d3880a8da5a35ff97b":[],"b6a6a9e301c12ab07b1d0428b5aad813fff317b3":["d6f074e73200c07d54f242d3880a8da5a35ff97b","8fd5be977c105554c6a7b68afcdbc511439723ab","09479cd2de06c67a115b7346a8e5de8af4d62e81"],"8fd5be977c105554c6a7b68afcdbc511439723ab":[],"09479cd2de06c67a115b7346a8e5de8af4d62e81":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["d6f074e73200c07d54f242d3880a8da5a35ff97b","8fd5be977c105554c6a7b68afcdbc511439723ab","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}