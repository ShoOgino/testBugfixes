{"path":"solr/src/test/org/apache/solr/cloud/AbstractZkTestCase#setUp().mjava","commits":[{"id":"43adc163640856c8b07e4cf1b2046c9af56d3ae7","date":1286989273,"type":0,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/src/test/org/apache/solr/cloud/AbstractZkTestCase#setUp().mjava","pathOld":"/dev/null","sourceNew":"  @Override\r\n  public void setUp() throws Exception {\r\n\r\n    super.setUp();\r\n    \r\n    zkDir = dataDir.getAbsolutePath() + File.separator\r\n        + \"zookeeper/server1/data\";\r\n    zkServer = new ZkTestServer(zkDir);\r\n    zkServer.run();\r\n    System.setProperty(\"zkHost\", zkServer.getZkAddress());\r\n    buildZooKeeper(zkServer.getZkHost(), zkServer.getZkAddress(),\r\n        getSolrConfigFile(), getSchemaFile());\r\n    \r\n    log.info(\"####SETUP_START \" + getName());\r\n\r\n    dataDir.mkdirs();\r\n    \r\n    // set some system properties for use by tests\r\n    System.setProperty(\"solr.test.sys.prop1\", \"propone\");\r\n    System.setProperty(\"solr.test.sys.prop2\", \"proptwo\");\r\n    \r\n    CoreContainer.Initializer init = new CoreContainer.Initializer() {\r\n      {\r\n        this.dataDir = AbstractZkTestCase.dataDir.getAbsolutePath();\r\n      }\r\n    };\r\n    \r\n    h = new TestHarness(\"\", init);\r\n    lrf = h.getRequestFactory(\"standard\", 0, 20, \"version\", \"2.2\");\r\n    \r\n    log.info(\"####SETUP_END \" + getName());\r\n    \r\n  }\r\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cc145d7052768686b17759377b4edc673d3a6ee","date":1287373626,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"solr/src/test/org/apache/solr/cloud/AbstractZkTestCase#setUp().mjava","pathOld":"solr/src/test/org/apache/solr/cloud/AbstractZkTestCase#setUp().mjava","sourceNew":"  @Override\r\n  public void setUp() throws Exception {\r\n    super.setUp();\r\n\r\n    if (h != null) {\r\n      log.warn(\"HACK: closing previous test harness\");     \r\n      h.close();\r\n      h=null;\r\n    }\r\n\r\n    zkDir = dataDir.getAbsolutePath() + File.separator\r\n        + \"zookeeper/server1/data\";\r\n    zkServer = new ZkTestServer(zkDir);\r\n    zkServer.run();\r\n    System.setProperty(\"zkHost\", zkServer.getZkAddress());\r\n    buildZooKeeper(zkServer.getZkHost(), zkServer.getZkAddress(),\r\n        getSolrConfigFile(), getSchemaFile());\r\n    \r\n    log.info(\"####SETUP_START \" + getName());\r\n\r\n    dataDir.mkdirs();\r\n    \r\n    // set some system properties for use by tests\r\n    System.setProperty(\"solr.test.sys.prop1\", \"propone\");\r\n    System.setProperty(\"solr.test.sys.prop2\", \"proptwo\");\r\n    \r\n    CoreContainer.Initializer init = new CoreContainer.Initializer() {\r\n      {\r\n        this.dataDir = AbstractZkTestCase.dataDir.getAbsolutePath();\r\n      }\r\n    };\r\n\r\n    h = new TestHarness(\"\", init);\r\n    lrf = h.getRequestFactory(\"standard\", 0, 20, \"version\", \"2.2\");\r\n    \r\n    log.info(\"####SETUP_END \" + getName());\r\n    \r\n  }\r\n\n","sourceOld":"  @Override\r\n  public void setUp() throws Exception {\r\n\r\n    super.setUp();\r\n    \r\n    zkDir = dataDir.getAbsolutePath() + File.separator\r\n        + \"zookeeper/server1/data\";\r\n    zkServer = new ZkTestServer(zkDir);\r\n    zkServer.run();\r\n    System.setProperty(\"zkHost\", zkServer.getZkAddress());\r\n    buildZooKeeper(zkServer.getZkHost(), zkServer.getZkAddress(),\r\n        getSolrConfigFile(), getSchemaFile());\r\n    \r\n    log.info(\"####SETUP_START \" + getName());\r\n\r\n    dataDir.mkdirs();\r\n    \r\n    // set some system properties for use by tests\r\n    System.setProperty(\"solr.test.sys.prop1\", \"propone\");\r\n    System.setProperty(\"solr.test.sys.prop2\", \"proptwo\");\r\n    \r\n    CoreContainer.Initializer init = new CoreContainer.Initializer() {\r\n      {\r\n        this.dataDir = AbstractZkTestCase.dataDir.getAbsolutePath();\r\n      }\r\n    };\r\n    \r\n    h = new TestHarness(\"\", init);\r\n    lrf = h.getRequestFactory(\"standard\", 0, 20, \"version\", \"2.2\");\r\n    \r\n    log.info(\"####SETUP_END \" + getName());\r\n    \r\n  }\r\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3d27fdb664de1d2da1efdddf2ccf6973dd072c69","date":1287419521,"type":4,"author":"Mark Robert Miller","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/src/test/org/apache/solr/cloud/AbstractZkTestCase#setUp().mjava","sourceNew":null,"sourceOld":"  @Override\r\n  public void setUp() throws Exception {\r\n    super.setUp();\r\n\r\n    if (h != null) {\r\n      log.warn(\"HACK: closing previous test harness\");     \r\n      h.close();\r\n      h=null;\r\n    }\r\n\r\n    zkDir = dataDir.getAbsolutePath() + File.separator\r\n        + \"zookeeper/server1/data\";\r\n    zkServer = new ZkTestServer(zkDir);\r\n    zkServer.run();\r\n    System.setProperty(\"zkHost\", zkServer.getZkAddress());\r\n    buildZooKeeper(zkServer.getZkHost(), zkServer.getZkAddress(),\r\n        getSolrConfigFile(), getSchemaFile());\r\n    \r\n    log.info(\"####SETUP_START \" + getName());\r\n\r\n    dataDir.mkdirs();\r\n    \r\n    // set some system properties for use by tests\r\n    System.setProperty(\"solr.test.sys.prop1\", \"propone\");\r\n    System.setProperty(\"solr.test.sys.prop2\", \"proptwo\");\r\n    \r\n    CoreContainer.Initializer init = new CoreContainer.Initializer() {\r\n      {\r\n        this.dataDir = AbstractZkTestCase.dataDir.getAbsolutePath();\r\n      }\r\n    };\r\n\r\n    h = new TestHarness(\"\", init);\r\n    lrf = h.getRequestFactory(\"standard\", 0, 20, \"version\", \"2.2\");\r\n    \r\n    log.info(\"####SETUP_END \" + getName());\r\n    \r\n  }\r\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"43adc163640856c8b07e4cf1b2046c9af56d3ae7":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3d27fdb664de1d2da1efdddf2ccf6973dd072c69":["4cc145d7052768686b17759377b4edc673d3a6ee"],"4cc145d7052768686b17759377b4edc673d3a6ee":["43adc163640856c8b07e4cf1b2046c9af56d3ae7"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3d27fdb664de1d2da1efdddf2ccf6973dd072c69"]},"commit2Childs":{"43adc163640856c8b07e4cf1b2046c9af56d3ae7":["4cc145d7052768686b17759377b4edc673d3a6ee"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["43adc163640856c8b07e4cf1b2046c9af56d3ae7"],"3d27fdb664de1d2da1efdddf2ccf6973dd072c69":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"4cc145d7052768686b17759377b4edc673d3a6ee":["3d27fdb664de1d2da1efdddf2ccf6973dd072c69"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}