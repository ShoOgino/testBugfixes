{"path":"lucene/highlighter/src/test/org/apache/lucene/search/postingshighlight/TestPostingsHighlighter#testCuriousGeorge().mjava","commits":[{"id":"86b90b0ece36c02b9f8b3a26374109d04b76274d","date":1361915620,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/highlighter/src/test/org/apache/lucene/search/postingshighlight/TestPostingsHighlighter#testCuriousGeorge().mjava","pathOld":"/dev/null","sourceNew":"  public void testCuriousGeorge() throws Exception {\n    String text = \"It’s the formula for success for preschoolers—Curious George and fire trucks! \" + \n                  \"Curious George and the Firefighters is a story based on H. A. and Margret Rey’s \" +\n                  \"popular primate and painted in the original watercolor and charcoal style. \" + \n                  \"Firefighters are a famously brave lot, but can they withstand a visit from one curious monkey?\";\n    Directory dir = newDirectory();\n    Analyzer analyzer = new MockAnalyzer(random(), MockTokenizer.SIMPLE, true);\n    RandomIndexWriter iw = new RandomIndexWriter(random(), dir, analyzer);\n    FieldType positionsType = new FieldType(TextField.TYPE_STORED);\n    positionsType.setIndexOptions(IndexOptions.DOCS_AND_FREQS_AND_POSITIONS_AND_OFFSETS);\n    Field body = new Field(\"body\", text, positionsType);\n    Document document = new Document();\n    document.add(body);\n    iw.addDocument(document);\n    IndexReader ir = iw.getReader();\n    iw.close();\n    IndexSearcher searcher = newSearcher(ir);\n    PhraseQuery query = new PhraseQuery();\n    query.add(new Term(\"body\", \"curious\"));\n    query.add(new Term(\"body\", \"george\"));\n    TopDocs topDocs = searcher.search(query, 10);\n    assertEquals(1, topDocs.totalHits);\n    PostingsHighlighter highlighter = new PostingsHighlighter();\n    String snippets[] = highlighter.highlight(\"body\", query, searcher, topDocs, 2);\n    assertEquals(1, snippets.length);\n    assertFalse(snippets[0].contains(\"<b>Curious</b>Curious\"));\n    ir.close();\n    dir.close();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ae14298f4eec6d5faee6a149f88ba57d14a6f21a","date":1396971290,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/highlighter/src/test/org/apache/lucene/search/postingshighlight/TestPostingsHighlighter#testCuriousGeorge().mjava","pathOld":"lucene/highlighter/src/test/org/apache/lucene/search/postingshighlight/TestPostingsHighlighter#testCuriousGeorge().mjava","sourceNew":"  public void testCuriousGeorge() throws Exception {\n    String text = \"It’s the formula for success for preschoolers—Curious George and fire trucks! \" + \n                  \"Curious George and the Firefighters is a story based on H. A. and Margret Rey’s \" +\n                  \"popular primate and painted in the original watercolor and charcoal style. \" + \n                  \"Firefighters are a famously brave lot, but can they withstand a visit from one curious monkey?\";\n    Directory dir = newDirectory();\n    Analyzer analyzer = new MockAnalyzer(random(), MockTokenizer.SIMPLE, true);\n    RandomIndexWriter iw = new RandomIndexWriter(random(), dir, analyzer);\n    FieldType positionsType = new FieldType(TextField.TYPE_STORED);\n    positionsType.setIndexOptions(IndexOptions.DOCS_AND_FREQS_AND_POSITIONS_AND_OFFSETS);\n    Field body = new Field(\"body\", text, positionsType);\n    Document document = new Document();\n    document.add(body);\n    iw.addDocument(document);\n    IndexReader ir = iw.getReader();\n    iw.shutdown();\n    IndexSearcher searcher = newSearcher(ir);\n    PhraseQuery query = new PhraseQuery();\n    query.add(new Term(\"body\", \"curious\"));\n    query.add(new Term(\"body\", \"george\"));\n    TopDocs topDocs = searcher.search(query, 10);\n    assertEquals(1, topDocs.totalHits);\n    PostingsHighlighter highlighter = new PostingsHighlighter();\n    String snippets[] = highlighter.highlight(\"body\", query, searcher, topDocs, 2);\n    assertEquals(1, snippets.length);\n    assertFalse(snippets[0].contains(\"<b>Curious</b>Curious\"));\n    ir.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testCuriousGeorge() throws Exception {\n    String text = \"It’s the formula for success for preschoolers—Curious George and fire trucks! \" + \n                  \"Curious George and the Firefighters is a story based on H. A. and Margret Rey’s \" +\n                  \"popular primate and painted in the original watercolor and charcoal style. \" + \n                  \"Firefighters are a famously brave lot, but can they withstand a visit from one curious monkey?\";\n    Directory dir = newDirectory();\n    Analyzer analyzer = new MockAnalyzer(random(), MockTokenizer.SIMPLE, true);\n    RandomIndexWriter iw = new RandomIndexWriter(random(), dir, analyzer);\n    FieldType positionsType = new FieldType(TextField.TYPE_STORED);\n    positionsType.setIndexOptions(IndexOptions.DOCS_AND_FREQS_AND_POSITIONS_AND_OFFSETS);\n    Field body = new Field(\"body\", text, positionsType);\n    Document document = new Document();\n    document.add(body);\n    iw.addDocument(document);\n    IndexReader ir = iw.getReader();\n    iw.close();\n    IndexSearcher searcher = newSearcher(ir);\n    PhraseQuery query = new PhraseQuery();\n    query.add(new Term(\"body\", \"curious\"));\n    query.add(new Term(\"body\", \"george\"));\n    TopDocs topDocs = searcher.search(query, 10);\n    assertEquals(1, topDocs.totalHits);\n    PostingsHighlighter highlighter = new PostingsHighlighter();\n    String snippets[] = highlighter.highlight(\"body\", query, searcher, topDocs, 2);\n    assertEquals(1, snippets.length);\n    assertFalse(snippets[0].contains(\"<b>Curious</b>Curious\"));\n    ir.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d0ef034a4f10871667ae75181537775ddcf8ade4","date":1407610475,"type":3,"author":"Ryan Ernst","isMerge":false,"pathNew":"lucene/highlighter/src/test/org/apache/lucene/search/postingshighlight/TestPostingsHighlighter#testCuriousGeorge().mjava","pathOld":"lucene/highlighter/src/test/org/apache/lucene/search/postingshighlight/TestPostingsHighlighter#testCuriousGeorge().mjava","sourceNew":"  public void testCuriousGeorge() throws Exception {\n    String text = \"It’s the formula for success for preschoolers—Curious George and fire trucks! \" + \n                  \"Curious George and the Firefighters is a story based on H. A. and Margret Rey’s \" +\n                  \"popular primate and painted in the original watercolor and charcoal style. \" + \n                  \"Firefighters are a famously brave lot, but can they withstand a visit from one curious monkey?\";\n    Directory dir = newDirectory();\n    Analyzer analyzer = new MockAnalyzer(random(), MockTokenizer.SIMPLE, true);\n    RandomIndexWriter iw = new RandomIndexWriter(random(), dir, analyzer);\n    FieldType positionsType = new FieldType(TextField.TYPE_STORED);\n    positionsType.setIndexOptions(IndexOptions.DOCS_AND_FREQS_AND_POSITIONS_AND_OFFSETS);\n    Field body = new Field(\"body\", text, positionsType);\n    Document document = new Document();\n    document.add(body);\n    iw.addDocument(document);\n    IndexReader ir = iw.getReader();\n    iw.close();\n    IndexSearcher searcher = newSearcher(ir);\n    PhraseQuery query = new PhraseQuery();\n    query.add(new Term(\"body\", \"curious\"));\n    query.add(new Term(\"body\", \"george\"));\n    TopDocs topDocs = searcher.search(query, 10);\n    assertEquals(1, topDocs.totalHits);\n    PostingsHighlighter highlighter = new PostingsHighlighter();\n    String snippets[] = highlighter.highlight(\"body\", query, searcher, topDocs, 2);\n    assertEquals(1, snippets.length);\n    assertFalse(snippets[0].contains(\"<b>Curious</b>Curious\"));\n    ir.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testCuriousGeorge() throws Exception {\n    String text = \"It’s the formula for success for preschoolers—Curious George and fire trucks! \" + \n                  \"Curious George and the Firefighters is a story based on H. A. and Margret Rey’s \" +\n                  \"popular primate and painted in the original watercolor and charcoal style. \" + \n                  \"Firefighters are a famously brave lot, but can they withstand a visit from one curious monkey?\";\n    Directory dir = newDirectory();\n    Analyzer analyzer = new MockAnalyzer(random(), MockTokenizer.SIMPLE, true);\n    RandomIndexWriter iw = new RandomIndexWriter(random(), dir, analyzer);\n    FieldType positionsType = new FieldType(TextField.TYPE_STORED);\n    positionsType.setIndexOptions(IndexOptions.DOCS_AND_FREQS_AND_POSITIONS_AND_OFFSETS);\n    Field body = new Field(\"body\", text, positionsType);\n    Document document = new Document();\n    document.add(body);\n    iw.addDocument(document);\n    IndexReader ir = iw.getReader();\n    iw.shutdown();\n    IndexSearcher searcher = newSearcher(ir);\n    PhraseQuery query = new PhraseQuery();\n    query.add(new Term(\"body\", \"curious\"));\n    query.add(new Term(\"body\", \"george\"));\n    TopDocs topDocs = searcher.search(query, 10);\n    assertEquals(1, topDocs.totalHits);\n    PostingsHighlighter highlighter = new PostingsHighlighter();\n    String snippets[] = highlighter.highlight(\"body\", query, searcher, topDocs, 2);\n    assertEquals(1, snippets.length);\n    assertFalse(snippets[0].contains(\"<b>Curious</b>Curious\"));\n    ir.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e9e1499c5d26c936238506df90a3c02c76707722","date":1434449920,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/highlighter/src/test/org/apache/lucene/search/postingshighlight/TestPostingsHighlighter#testCuriousGeorge().mjava","pathOld":"lucene/highlighter/src/test/org/apache/lucene/search/postingshighlight/TestPostingsHighlighter#testCuriousGeorge().mjava","sourceNew":"  public void testCuriousGeorge() throws Exception {\n    String text = \"It’s the formula for success for preschoolers—Curious George and fire trucks! \" + \n                  \"Curious George and the Firefighters is a story based on H. A. and Margret Rey’s \" +\n                  \"popular primate and painted in the original watercolor and charcoal style. \" + \n                  \"Firefighters are a famously brave lot, but can they withstand a visit from one curious monkey?\";\n    Directory dir = newDirectory();\n    Analyzer analyzer = new MockAnalyzer(random(), MockTokenizer.SIMPLE, true);\n    RandomIndexWriter iw = new RandomIndexWriter(random(), dir, analyzer);\n    FieldType positionsType = new FieldType(TextField.TYPE_STORED);\n    positionsType.setIndexOptions(IndexOptions.DOCS_AND_FREQS_AND_POSITIONS_AND_OFFSETS);\n    Field body = new Field(\"body\", text, positionsType);\n    Document document = new Document();\n    document.add(body);\n    iw.addDocument(document);\n    IndexReader ir = iw.getReader();\n    iw.close();\n    IndexSearcher searcher = newSearcher(ir);\n    PhraseQuery query = new PhraseQuery(\"body\", \"curious\", \"george\");\n    TopDocs topDocs = searcher.search(query, 10);\n    assertEquals(1, topDocs.totalHits);\n    PostingsHighlighter highlighter = new PostingsHighlighter();\n    String snippets[] = highlighter.highlight(\"body\", query, searcher, topDocs, 2);\n    assertEquals(1, snippets.length);\n    assertFalse(snippets[0].contains(\"<b>Curious</b>Curious\"));\n    ir.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testCuriousGeorge() throws Exception {\n    String text = \"It’s the formula for success for preschoolers—Curious George and fire trucks! \" + \n                  \"Curious George and the Firefighters is a story based on H. A. and Margret Rey’s \" +\n                  \"popular primate and painted in the original watercolor and charcoal style. \" + \n                  \"Firefighters are a famously brave lot, but can they withstand a visit from one curious monkey?\";\n    Directory dir = newDirectory();\n    Analyzer analyzer = new MockAnalyzer(random(), MockTokenizer.SIMPLE, true);\n    RandomIndexWriter iw = new RandomIndexWriter(random(), dir, analyzer);\n    FieldType positionsType = new FieldType(TextField.TYPE_STORED);\n    positionsType.setIndexOptions(IndexOptions.DOCS_AND_FREQS_AND_POSITIONS_AND_OFFSETS);\n    Field body = new Field(\"body\", text, positionsType);\n    Document document = new Document();\n    document.add(body);\n    iw.addDocument(document);\n    IndexReader ir = iw.getReader();\n    iw.close();\n    IndexSearcher searcher = newSearcher(ir);\n    PhraseQuery query = new PhraseQuery();\n    query.add(new Term(\"body\", \"curious\"));\n    query.add(new Term(\"body\", \"george\"));\n    TopDocs topDocs = searcher.search(query, 10);\n    assertEquals(1, topDocs.totalHits);\n    PostingsHighlighter highlighter = new PostingsHighlighter();\n    String snippets[] = highlighter.highlight(\"body\", query, searcher, topDocs, 2);\n    assertEquals(1, snippets.length);\n    assertFalse(snippets[0].contains(\"<b>Curious</b>Curious\"));\n    ir.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"381618eac2691bb34ab9a3fca76ad55c6274517e","date":1495564791,"type":4,"author":"David Smiley","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/highlighter/src/test/org/apache/lucene/search/postingshighlight/TestPostingsHighlighter#testCuriousGeorge().mjava","sourceNew":null,"sourceOld":"  public void testCuriousGeorge() throws Exception {\n    String text = \"It’s the formula for success for preschoolers—Curious George and fire trucks! \" + \n                  \"Curious George and the Firefighters is a story based on H. A. and Margret Rey’s \" +\n                  \"popular primate and painted in the original watercolor and charcoal style. \" + \n                  \"Firefighters are a famously brave lot, but can they withstand a visit from one curious monkey?\";\n    Directory dir = newDirectory();\n    Analyzer analyzer = new MockAnalyzer(random(), MockTokenizer.SIMPLE, true);\n    RandomIndexWriter iw = new RandomIndexWriter(random(), dir, analyzer);\n    FieldType positionsType = new FieldType(TextField.TYPE_STORED);\n    positionsType.setIndexOptions(IndexOptions.DOCS_AND_FREQS_AND_POSITIONS_AND_OFFSETS);\n    Field body = new Field(\"body\", text, positionsType);\n    Document document = new Document();\n    document.add(body);\n    iw.addDocument(document);\n    IndexReader ir = iw.getReader();\n    iw.close();\n    IndexSearcher searcher = newSearcher(ir);\n    PhraseQuery query = new PhraseQuery(\"body\", \"curious\", \"george\");\n    TopDocs topDocs = searcher.search(query, 10);\n    assertEquals(1, topDocs.totalHits);\n    PostingsHighlighter highlighter = new PostingsHighlighter();\n    String snippets[] = highlighter.highlight(\"body\", query, searcher, topDocs, 2);\n    assertEquals(1, snippets.length);\n    assertFalse(snippets[0].contains(\"<b>Curious</b>Curious\"));\n    ir.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e9017cf144952056066919f1ebc7897ff9bd71b1","date":1496757600,"type":4,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/highlighter/src/test/org/apache/lucene/search/postingshighlight/TestPostingsHighlighter#testCuriousGeorge().mjava","sourceNew":null,"sourceOld":"  public void testCuriousGeorge() throws Exception {\n    String text = \"It’s the formula for success for preschoolers—Curious George and fire trucks! \" + \n                  \"Curious George and the Firefighters is a story based on H. A. and Margret Rey’s \" +\n                  \"popular primate and painted in the original watercolor and charcoal style. \" + \n                  \"Firefighters are a famously brave lot, but can they withstand a visit from one curious monkey?\";\n    Directory dir = newDirectory();\n    Analyzer analyzer = new MockAnalyzer(random(), MockTokenizer.SIMPLE, true);\n    RandomIndexWriter iw = new RandomIndexWriter(random(), dir, analyzer);\n    FieldType positionsType = new FieldType(TextField.TYPE_STORED);\n    positionsType.setIndexOptions(IndexOptions.DOCS_AND_FREQS_AND_POSITIONS_AND_OFFSETS);\n    Field body = new Field(\"body\", text, positionsType);\n    Document document = new Document();\n    document.add(body);\n    iw.addDocument(document);\n    IndexReader ir = iw.getReader();\n    iw.close();\n    IndexSearcher searcher = newSearcher(ir);\n    PhraseQuery query = new PhraseQuery(\"body\", \"curious\", \"george\");\n    TopDocs topDocs = searcher.search(query, 10);\n    assertEquals(1, topDocs.totalHits);\n    PostingsHighlighter highlighter = new PostingsHighlighter();\n    String snippets[] = highlighter.highlight(\"body\", query, searcher, topDocs, 2);\n    assertEquals(1, snippets.length);\n    assertFalse(snippets[0].contains(\"<b>Curious</b>Curious\"));\n    ir.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"381618eac2691bb34ab9a3fca76ad55c6274517e":["e9e1499c5d26c936238506df90a3c02c76707722"],"e9017cf144952056066919f1ebc7897ff9bd71b1":["e9e1499c5d26c936238506df90a3c02c76707722","381618eac2691bb34ab9a3fca76ad55c6274517e"],"e9e1499c5d26c936238506df90a3c02c76707722":["d0ef034a4f10871667ae75181537775ddcf8ade4"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"d0ef034a4f10871667ae75181537775ddcf8ade4":["ae14298f4eec6d5faee6a149f88ba57d14a6f21a"],"86b90b0ece36c02b9f8b3a26374109d04b76274d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"ae14298f4eec6d5faee6a149f88ba57d14a6f21a":["86b90b0ece36c02b9f8b3a26374109d04b76274d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["381618eac2691bb34ab9a3fca76ad55c6274517e"]},"commit2Childs":{"381618eac2691bb34ab9a3fca76ad55c6274517e":["e9017cf144952056066919f1ebc7897ff9bd71b1","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"e9017cf144952056066919f1ebc7897ff9bd71b1":[],"e9e1499c5d26c936238506df90a3c02c76707722":["381618eac2691bb34ab9a3fca76ad55c6274517e","e9017cf144952056066919f1ebc7897ff9bd71b1"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["86b90b0ece36c02b9f8b3a26374109d04b76274d"],"d0ef034a4f10871667ae75181537775ddcf8ade4":["e9e1499c5d26c936238506df90a3c02c76707722"],"86b90b0ece36c02b9f8b3a26374109d04b76274d":["ae14298f4eec6d5faee6a149f88ba57d14a6f21a"],"ae14298f4eec6d5faee6a149f88ba57d14a6f21a":["d0ef034a4f10871667ae75181537775ddcf8ade4"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["e9017cf144952056066919f1ebc7897ff9bd71b1","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}