{"path":"solr/core/src/test/org/apache/solr/analytics/NoFacetTest#stddevTest().mjava","commits":[{"id":"ff403346522eaa9de75403763e297e83a3ea585c","date":1384904731,"type":0,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/analytics/NoFacetTest#stddevTest().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void stddevTest() throws Exception { \n    //Int\n    Double intResult = (Double)getStatResult(response, \"str\", \"double\", \"int_id\");\n    Double intTest = (Double)calculateNumberStat(intTestStart, \"stddev\");\n    assertTrue(Math.abs(intResult-intTest)<.00000000001);\n    \n    //Long\n    Double longResult = (Double)getStatResult(response, \"str\", \"double\", \"long_ld\");\n    Double longTest = (Double)calculateNumberStat(longTestStart, \"stddev\");\n    assertTrue(Math.abs(longResult-longTest)<.00000000001);\n    \n    //Float\n    Double floatResult = (Double)getStatResult(response, \"str\", \"double\", \"float_fd\");\n    Double floatTest = (Double)calculateNumberStat(floatTestStart, \"stddev\");\n    assertTrue(Math.abs(floatResult-floatTest)<.00000000001);\n    \n    //Double\n    Double doubleResult = (Double)getStatResult(response, \"str\", \"double\", \"double_dd\");\n    Double doubleTest = (Double)calculateNumberStat(doubleTestStart, \"stddev\");\n    assertTrue(Math.abs(doubleResult-doubleTest)<.00000000001);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"00da927aadb6d5901b42abc84803ddc88dab8672","date":1384949364,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/analytics/NoFacetTest#stddevTest().mjava","pathOld":"solr/core/src/test/org/apache/solr/analytics/NoFacetTest#stddevTest().mjava","sourceNew":"  @Test\n  public void stddevTest() throws Exception { \n    //Int\n    Double intResult = (Double)getStatResult(response, \"str\", \"double\", \"int_id\");\n    Double intTest = (Double)calculateNumberStat(intTestStart, \"stddev\");\n    assertTrue(Math.abs(intResult-intTest)<.00000000001);\n    \n    //Long\n    Double longResult = (Double)getStatResult(response, \"str\", \"double\", \"long_ld\");\n    Double longTest = (Double)calculateNumberStat(longTestStart, \"stddev\");\n    assertTrue(Math.abs(longResult-longTest)<.00000000001);\n    \n    //Float\n    Double floatResult = (Double)getStatResult(response, \"str\", \"double\", \"float_fd\");\n    Double floatTest = (Double)calculateNumberStat(floatTestStart, \"stddev\");\n    assertTrue(Math.abs(floatResult-floatTest)<.00000000001);\n\n    assertTrue(\"Oops: (double raws) \" + Double.doubleToRawLongBits(floatResult) + \" - \"\n        + Double.doubleToRawLongBits(floatTest) + \" < \" + Double.doubleToRawLongBits(.00000000001) +\n        \" Calculated diff \" + Double.doubleToRawLongBits(floatResult - floatTest),\n        Math.abs(floatResult - floatTest) < .00000000001);\n\n\n    //Double\n    Double doubleResult = (Double)getStatResult(response, \"str\", \"double\", \"double_dd\");\n    Double doubleTest = (Double)calculateNumberStat(doubleTestStart, \"stddev\");\n    assertTrue(Math.abs(doubleResult-doubleTest)<.00000000001);\n  }\n\n","sourceOld":"  @Test\n  public void stddevTest() throws Exception { \n    //Int\n    Double intResult = (Double)getStatResult(response, \"str\", \"double\", \"int_id\");\n    Double intTest = (Double)calculateNumberStat(intTestStart, \"stddev\");\n    assertTrue(Math.abs(intResult-intTest)<.00000000001);\n    \n    //Long\n    Double longResult = (Double)getStatResult(response, \"str\", \"double\", \"long_ld\");\n    Double longTest = (Double)calculateNumberStat(longTestStart, \"stddev\");\n    assertTrue(Math.abs(longResult-longTest)<.00000000001);\n    \n    //Float\n    Double floatResult = (Double)getStatResult(response, \"str\", \"double\", \"float_fd\");\n    Double floatTest = (Double)calculateNumberStat(floatTestStart, \"stddev\");\n    assertTrue(Math.abs(floatResult-floatTest)<.00000000001);\n    \n    //Double\n    Double doubleResult = (Double)getStatResult(response, \"str\", \"double\", \"double_dd\");\n    Double doubleTest = (Double)calculateNumberStat(doubleTestStart, \"stddev\");\n    assertTrue(Math.abs(doubleResult-doubleTest)<.00000000001);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0bd4ca3dd90ed5c702e2d81f7c1c16e9bc8ca84c","date":1385036385,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/analytics/NoFacetTest#stddevTest().mjava","pathOld":"solr/core/src/test/org/apache/solr/analytics/NoFacetTest#stddevTest().mjava","sourceNew":"  @Test\n  public void stddevTest() throws Exception { \n    //Int\n    Double intResult = (Double)getStatResult(response, \"str\", \"double\", \"int_id\");\n    Double intTest = (Double)calculateNumberStat(intTestStart, \"stddev\");\n    assertTrue(Math.abs(intResult-intTest)<.00000000001);\n    \n    //Long\n    Double longResult = (Double)getStatResult(response, \"str\", \"double\", \"long_ld\");\n    Double longTest = (Double)calculateNumberStat(longTestStart, \"stddev\");\n    assertTrue(Math.abs(longResult-longTest)<.00000000001);\n    \n    //Float\n    Double floatResult = (Double)getStatResult(response, \"str\", \"double\", \"float_fd\");\n    Double floatTest = (Double)calculateNumberStat(floatTestStart, \"stddev\");\n    assertTrue(\"Oops: (double raws) \" + Double.doubleToRawLongBits(floatResult) + \" - \"\n        + Double.doubleToRawLongBits(floatTest) + \" < \" + Double.doubleToRawLongBits(.00000000001) +\n        \" Calculated diff \" + Double.doubleToRawLongBits(floatResult - floatTest),\n        Math.abs(floatResult - floatTest) < .00000000001);\n\n\n    //Double\n    Double doubleResult = (Double)getStatResult(response, \"str\", \"double\", \"double_dd\");\n    Double doubleTest = (Double)calculateNumberStat(doubleTestStart, \"stddev\");\n    assertTrue(Math.abs(doubleResult-doubleTest)<.00000000001);\n  }\n\n","sourceOld":"  @Test\n  public void stddevTest() throws Exception { \n    //Int\n    Double intResult = (Double)getStatResult(response, \"str\", \"double\", \"int_id\");\n    Double intTest = (Double)calculateNumberStat(intTestStart, \"stddev\");\n    assertTrue(Math.abs(intResult-intTest)<.00000000001);\n    \n    //Long\n    Double longResult = (Double)getStatResult(response, \"str\", \"double\", \"long_ld\");\n    Double longTest = (Double)calculateNumberStat(longTestStart, \"stddev\");\n    assertTrue(Math.abs(longResult-longTest)<.00000000001);\n    \n    //Float\n    Double floatResult = (Double)getStatResult(response, \"str\", \"double\", \"float_fd\");\n    Double floatTest = (Double)calculateNumberStat(floatTestStart, \"stddev\");\n    assertTrue(Math.abs(floatResult-floatTest)<.00000000001);\n\n    assertTrue(\"Oops: (double raws) \" + Double.doubleToRawLongBits(floatResult) + \" - \"\n        + Double.doubleToRawLongBits(floatTest) + \" < \" + Double.doubleToRawLongBits(.00000000001) +\n        \" Calculated diff \" + Double.doubleToRawLongBits(floatResult - floatTest),\n        Math.abs(floatResult - floatTest) < .00000000001);\n\n\n    //Double\n    Double doubleResult = (Double)getStatResult(response, \"str\", \"double\", \"double_dd\");\n    Double doubleTest = (Double)calculateNumberStat(doubleTestStart, \"stddev\");\n    assertTrue(Math.abs(doubleResult-doubleTest)<.00000000001);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d2b292ac7ef1c22274c8c2bd103b0799d9f09f78","date":1385122081,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/analytics/NoFacetTest#stddevTest().mjava","pathOld":"solr/core/src/test/org/apache/solr/analytics/NoFacetTest#stddevTest().mjava","sourceNew":"  @Test\n  public void stddevTest() throws Exception { \n    //Int\n    Double intResult = (Double)getStatResult(response, \"str\", \"double\", \"int_id\");\n    Double intTest = (Double)calculateNumberStat(intTestStart, \"stddev\");\n    assertTrue(Math.abs(intResult-intTest)<.00000000001);\n    \n    //Long\n    Double longResult = (Double)getStatResult(response, \"str\", \"double\", \"long_ld\");\n    Double longTest = (Double)calculateNumberStat(longTestStart, \"stddev\");\n    assertTrue(Math.abs(longResult-longTest)<.00000000001);\n    \n    //Float\n    Double floatResult = (Double)getStatResult(response, \"str\", \"double\", \"float_fd\");\n    Double floatTest = (Double)calculateNumberStat(floatTestStart, \"stddev\");\n    assertTrue(\"Oops: (double raws) \" + Double.doubleToRawLongBits(floatResult) + \" - \"\n        + Double.doubleToRawLongBits(floatTest) + \" < \" + Double.doubleToRawLongBits(.00000000001) +\n        \" Calculated diff \" + Double.doubleToRawLongBits(floatResult - floatTest)\n        + \" Let's see what the JVM thinks these bits are. FloatResult:  \" + floatResult.toString() +\n        \" floatTest: \" + floatTest.toString() + \" Diff \" + Double.toString(floatResult - floatTest),\n        Math.abs(floatResult - floatTest) < .00000000001);\n\n\n    //Double\n    Double doubleResult = (Double)getStatResult(response, \"str\", \"double\", \"double_dd\");\n    Double doubleTest = (Double)calculateNumberStat(doubleTestStart, \"stddev\");\n    assertTrue(Math.abs(doubleResult-doubleTest)<.00000000001);\n  }\n\n","sourceOld":"  @Test\n  public void stddevTest() throws Exception { \n    //Int\n    Double intResult = (Double)getStatResult(response, \"str\", \"double\", \"int_id\");\n    Double intTest = (Double)calculateNumberStat(intTestStart, \"stddev\");\n    assertTrue(Math.abs(intResult-intTest)<.00000000001);\n    \n    //Long\n    Double longResult = (Double)getStatResult(response, \"str\", \"double\", \"long_ld\");\n    Double longTest = (Double)calculateNumberStat(longTestStart, \"stddev\");\n    assertTrue(Math.abs(longResult-longTest)<.00000000001);\n    \n    //Float\n    Double floatResult = (Double)getStatResult(response, \"str\", \"double\", \"float_fd\");\n    Double floatTest = (Double)calculateNumberStat(floatTestStart, \"stddev\");\n    assertTrue(\"Oops: (double raws) \" + Double.doubleToRawLongBits(floatResult) + \" - \"\n        + Double.doubleToRawLongBits(floatTest) + \" < \" + Double.doubleToRawLongBits(.00000000001) +\n        \" Calculated diff \" + Double.doubleToRawLongBits(floatResult - floatTest),\n        Math.abs(floatResult - floatTest) < .00000000001);\n\n\n    //Double\n    Double doubleResult = (Double)getStatResult(response, \"str\", \"double\", \"double_dd\");\n    Double doubleTest = (Double)calculateNumberStat(doubleTestStart, \"stddev\");\n    assertTrue(Math.abs(doubleResult-doubleTest)<.00000000001);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"12cca82631e63d106c3d460b573bcdc099e8248c","date":1385321024,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/analytics/NoFacetTest#stddevTest().mjava","pathOld":"solr/core/src/test/org/apache/solr/analytics/NoFacetTest#stddevTest().mjava","sourceNew":"  @Test @Ignore() // See \"SOLR-5488\"\n  public void stddevTest() throws Exception { \n    //Int\n    Double intResult = (Double)getStatResult(response, \"str\", \"double\", \"int_id\");\n    Double intTest = (Double)calculateNumberStat(intTestStart, \"stddev\");\n    assertTrue(Math.abs(intResult-intTest)<.00000000001);\n    \n    //Long\n    Double longResult = (Double)getStatResult(response, \"str\", \"double\", \"long_ld\");\n    Double longTest = (Double)calculateNumberStat(longTestStart, \"stddev\");\n    assertTrue(Math.abs(longResult-longTest)<.00000000001);\n    \n    //Float\n    Double floatResult = (Double)getStatResult(response, \"str\", \"double\", \"float_fd\");\n    Double floatTest = (Double)calculateNumberStat(floatTestStart, \"stddev\");\n    assertTrue(\"Oops: (double raws) \" + Double.doubleToRawLongBits(floatResult) + \" - \"\n        + Double.doubleToRawLongBits(floatTest) + \" < \" + Double.doubleToRawLongBits(.00000000001) +\n        \" Calculated diff \" + Double.doubleToRawLongBits(floatResult - floatTest)\n        + \" Let's see what the JVM thinks these bits are. FloatResult:  \" + floatResult.toString() +\n        \" floatTest: \" + floatTest.toString() + \" Diff \" + Double.toString(floatResult - floatTest),\n        Math.abs(floatResult - floatTest) < .00000000001);\n\n\n    //Double\n    Double doubleResult = (Double)getStatResult(response, \"str\", \"double\", \"double_dd\");\n    Double doubleTest = (Double)calculateNumberStat(doubleTestStart, \"stddev\");\n    assertTrue(Math.abs(doubleResult-doubleTest)<.00000000001);\n  }\n\n","sourceOld":"  @Test\n  public void stddevTest() throws Exception { \n    //Int\n    Double intResult = (Double)getStatResult(response, \"str\", \"double\", \"int_id\");\n    Double intTest = (Double)calculateNumberStat(intTestStart, \"stddev\");\n    assertTrue(Math.abs(intResult-intTest)<.00000000001);\n    \n    //Long\n    Double longResult = (Double)getStatResult(response, \"str\", \"double\", \"long_ld\");\n    Double longTest = (Double)calculateNumberStat(longTestStart, \"stddev\");\n    assertTrue(Math.abs(longResult-longTest)<.00000000001);\n    \n    //Float\n    Double floatResult = (Double)getStatResult(response, \"str\", \"double\", \"float_fd\");\n    Double floatTest = (Double)calculateNumberStat(floatTestStart, \"stddev\");\n    assertTrue(\"Oops: (double raws) \" + Double.doubleToRawLongBits(floatResult) + \" - \"\n        + Double.doubleToRawLongBits(floatTest) + \" < \" + Double.doubleToRawLongBits(.00000000001) +\n        \" Calculated diff \" + Double.doubleToRawLongBits(floatResult - floatTest)\n        + \" Let's see what the JVM thinks these bits are. FloatResult:  \" + floatResult.toString() +\n        \" floatTest: \" + floatTest.toString() + \" Diff \" + Double.toString(floatResult - floatTest),\n        Math.abs(floatResult - floatTest) < .00000000001);\n\n\n    //Double\n    Double doubleResult = (Double)getStatResult(response, \"str\", \"double\", \"double_dd\");\n    Double doubleTest = (Double)calculateNumberStat(doubleTestStart, \"stddev\");\n    assertTrue(Math.abs(doubleResult-doubleTest)<.00000000001);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7eaff7383da130b6244f6e6d9848fde78f725b1f","date":1385321143,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/analytics/NoFacetTest#stddevTest().mjava","pathOld":"solr/core/src/test/org/apache/solr/analytics/NoFacetTest#stddevTest().mjava","sourceNew":"  @Test @Ignore(\"SOLR-5488\") \n  public void stddevTest() throws Exception { \n    //Int\n    Double intResult = (Double)getStatResult(response, \"str\", \"double\", \"int_id\");\n    Double intTest = (Double)calculateNumberStat(intTestStart, \"stddev\");\n    assertTrue(Math.abs(intResult-intTest)<.00000000001);\n    \n    //Long\n    Double longResult = (Double)getStatResult(response, \"str\", \"double\", \"long_ld\");\n    Double longTest = (Double)calculateNumberStat(longTestStart, \"stddev\");\n    assertTrue(Math.abs(longResult-longTest)<.00000000001);\n    \n    //Float\n    Double floatResult = (Double)getStatResult(response, \"str\", \"double\", \"float_fd\");\n    Double floatTest = (Double)calculateNumberStat(floatTestStart, \"stddev\");\n    assertTrue(\"Oops: (double raws) \" + Double.doubleToRawLongBits(floatResult) + \" - \"\n        + Double.doubleToRawLongBits(floatTest) + \" < \" + Double.doubleToRawLongBits(.00000000001) +\n        \" Calculated diff \" + Double.doubleToRawLongBits(floatResult - floatTest)\n        + \" Let's see what the JVM thinks these bits are. FloatResult:  \" + floatResult.toString() +\n        \" floatTest: \" + floatTest.toString() + \" Diff \" + Double.toString(floatResult - floatTest),\n        Math.abs(floatResult - floatTest) < .00000000001);\n\n\n    //Double\n    Double doubleResult = (Double)getStatResult(response, \"str\", \"double\", \"double_dd\");\n    Double doubleTest = (Double)calculateNumberStat(doubleTestStart, \"stddev\");\n    assertTrue(Math.abs(doubleResult-doubleTest)<.00000000001);\n  }\n\n","sourceOld":"  @Test @Ignore() // See \"SOLR-5488\"\n  public void stddevTest() throws Exception { \n    //Int\n    Double intResult = (Double)getStatResult(response, \"str\", \"double\", \"int_id\");\n    Double intTest = (Double)calculateNumberStat(intTestStart, \"stddev\");\n    assertTrue(Math.abs(intResult-intTest)<.00000000001);\n    \n    //Long\n    Double longResult = (Double)getStatResult(response, \"str\", \"double\", \"long_ld\");\n    Double longTest = (Double)calculateNumberStat(longTestStart, \"stddev\");\n    assertTrue(Math.abs(longResult-longTest)<.00000000001);\n    \n    //Float\n    Double floatResult = (Double)getStatResult(response, \"str\", \"double\", \"float_fd\");\n    Double floatTest = (Double)calculateNumberStat(floatTestStart, \"stddev\");\n    assertTrue(\"Oops: (double raws) \" + Double.doubleToRawLongBits(floatResult) + \" - \"\n        + Double.doubleToRawLongBits(floatTest) + \" < \" + Double.doubleToRawLongBits(.00000000001) +\n        \" Calculated diff \" + Double.doubleToRawLongBits(floatResult - floatTest)\n        + \" Let's see what the JVM thinks these bits are. FloatResult:  \" + floatResult.toString() +\n        \" floatTest: \" + floatTest.toString() + \" Diff \" + Double.toString(floatResult - floatTest),\n        Math.abs(floatResult - floatTest) < .00000000001);\n\n\n    //Double\n    Double doubleResult = (Double)getStatResult(response, \"str\", \"double\", \"double_dd\");\n    Double doubleTest = (Double)calculateNumberStat(doubleTestStart, \"stddev\");\n    assertTrue(Math.abs(doubleResult-doubleTest)<.00000000001);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2408d2a60b59b9f5d910383ce065127078892c04","date":1385328825,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/analytics/NoFacetTest#stddevTest().mjava","pathOld":"solr/core/src/test/org/apache/solr/analytics/NoFacetTest#stddevTest().mjava","sourceNew":"  @Test @Ignore(\"SOLR-5488\") \n  public void stddevTest() throws Exception { \n    //Int\n    Double intResult = (Double)getStatResult(\"str\", \"int_id\", VAL_TYPE.DOUBLE);\n    Double intTest = (Double)calculateNumberStat(intTestStart, \"stddev\");\n    assertTrue(Math.abs(intResult-intTest)<.00000000001);\n    \n    //Long\n    Double longResult = (Double)getStatResult(\"str\", \"long_ld\", VAL_TYPE.DOUBLE);\n    Double longTest = (Double)calculateNumberStat(longTestStart, \"stddev\");\n    assertTrue(Math.abs(longResult-longTest)<.00000000001);\n    \n    //Float\n    Double floatResult = (Double)getStatResult(\"str\", \"float_fd\", VAL_TYPE.DOUBLE);\n    Double floatTest = (Double)calculateNumberStat(floatTestStart, \"stddev\");\n    assertTrue(\"Oops: (double raws) \" + Double.doubleToRawLongBits(floatResult) + \" - \"\n        + Double.doubleToRawLongBits(floatTest) + \" < \" + Double.doubleToRawLongBits(.00000000001) +\n        \" Calculated diff \" + Double.doubleToRawLongBits(floatResult - floatTest)\n        + \" Let's see what the JVM thinks these bits are. FloatResult:  \" + floatResult.toString() +\n        \" floatTest: \" + floatTest.toString() + \" Diff \" + Double.toString(floatResult - floatTest),\n        Math.abs(floatResult - floatTest) < .00000000001);\n\n\n    //Double\n    Double doubleResult = (Double)getStatResult(\"str\", \"double_dd\", VAL_TYPE.DOUBLE);\n    Double doubleTest = (Double)calculateNumberStat(doubleTestStart, \"stddev\");\n    assertTrue(Math.abs(doubleResult-doubleTest)<.00000000001);\n  }\n\n","sourceOld":"  @Test @Ignore(\"SOLR-5488\") \n  public void stddevTest() throws Exception { \n    //Int\n    Double intResult = (Double)getStatResult(response, \"str\", \"double\", \"int_id\");\n    Double intTest = (Double)calculateNumberStat(intTestStart, \"stddev\");\n    assertTrue(Math.abs(intResult-intTest)<.00000000001);\n    \n    //Long\n    Double longResult = (Double)getStatResult(response, \"str\", \"double\", \"long_ld\");\n    Double longTest = (Double)calculateNumberStat(longTestStart, \"stddev\");\n    assertTrue(Math.abs(longResult-longTest)<.00000000001);\n    \n    //Float\n    Double floatResult = (Double)getStatResult(response, \"str\", \"double\", \"float_fd\");\n    Double floatTest = (Double)calculateNumberStat(floatTestStart, \"stddev\");\n    assertTrue(\"Oops: (double raws) \" + Double.doubleToRawLongBits(floatResult) + \" - \"\n        + Double.doubleToRawLongBits(floatTest) + \" < \" + Double.doubleToRawLongBits(.00000000001) +\n        \" Calculated diff \" + Double.doubleToRawLongBits(floatResult - floatTest)\n        + \" Let's see what the JVM thinks these bits are. FloatResult:  \" + floatResult.toString() +\n        \" floatTest: \" + floatTest.toString() + \" Diff \" + Double.toString(floatResult - floatTest),\n        Math.abs(floatResult - floatTest) < .00000000001);\n\n\n    //Double\n    Double doubleResult = (Double)getStatResult(response, \"str\", \"double\", \"double_dd\");\n    Double doubleTest = (Double)calculateNumberStat(doubleTestStart, \"stddev\");\n    assertTrue(Math.abs(doubleResult-doubleTest)<.00000000001);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c38de7fccba85ce7e002b575cb4efae36a598c90","date":1385416749,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/analytics/NoFacetTest#stddevTest().mjava","pathOld":"solr/core/src/test/org/apache/solr/analytics/NoFacetTest#stddevTest().mjava","sourceNew":"  @Test\n  public void stddevTest() throws Exception { \n    //Int\n    Double intResult = (Double)getStatResult(\"str\", \"int_id\", VAL_TYPE.DOUBLE);\n    Double intTest = (Double)calculateNumberStat(intTestStart, \"stddev\");\n    assertTrue(Math.abs(intResult-intTest)<.00000000001);\n    \n    //Long\n    Double longResult = (Double)getStatResult(\"str\", \"long_ld\", VAL_TYPE.DOUBLE);\n    Double longTest = (Double)calculateNumberStat(longTestStart, \"stddev\");\n    assertTrue(Math.abs(longResult-longTest)<.00000000001);\n    \n    //Float\n    Double floatResult = (Double)getStatResult(\"str\", \"float_fd\", VAL_TYPE.DOUBLE);\n    Double floatTest = (Double)calculateNumberStat(floatTestStart, \"stddev\");\n    assertTrue(\"Oops: (double raws) \" + Double.doubleToRawLongBits(floatResult) + \" - \"\n        + Double.doubleToRawLongBits(floatTest) + \" < \" + Double.doubleToRawLongBits(.00000000001) +\n        \" Calculated diff \" + Double.doubleToRawLongBits(floatResult - floatTest)\n        + \" Let's see what the JVM thinks these bits are. FloatResult:  \" + floatResult.toString() +\n        \" floatTest: \" + floatTest.toString() + \" Diff \" + Double.toString(floatResult - floatTest),\n        Math.abs(floatResult - floatTest) < .00000000001);\n\n\n    //Double\n    Double doubleResult = (Double)getStatResult(\"str\", \"double_dd\", VAL_TYPE.DOUBLE);\n    Double doubleTest = (Double)calculateNumberStat(doubleTestStart, \"stddev\");\n    assertTrue(Math.abs(doubleResult-doubleTest)<.00000000001);\n  }\n\n","sourceOld":"  @Test @Ignore(\"SOLR-5488\") \n  public void stddevTest() throws Exception { \n    //Int\n    Double intResult = (Double)getStatResult(\"str\", \"int_id\", VAL_TYPE.DOUBLE);\n    Double intTest = (Double)calculateNumberStat(intTestStart, \"stddev\");\n    assertTrue(Math.abs(intResult-intTest)<.00000000001);\n    \n    //Long\n    Double longResult = (Double)getStatResult(\"str\", \"long_ld\", VAL_TYPE.DOUBLE);\n    Double longTest = (Double)calculateNumberStat(longTestStart, \"stddev\");\n    assertTrue(Math.abs(longResult-longTest)<.00000000001);\n    \n    //Float\n    Double floatResult = (Double)getStatResult(\"str\", \"float_fd\", VAL_TYPE.DOUBLE);\n    Double floatTest = (Double)calculateNumberStat(floatTestStart, \"stddev\");\n    assertTrue(\"Oops: (double raws) \" + Double.doubleToRawLongBits(floatResult) + \" - \"\n        + Double.doubleToRawLongBits(floatTest) + \" < \" + Double.doubleToRawLongBits(.00000000001) +\n        \" Calculated diff \" + Double.doubleToRawLongBits(floatResult - floatTest)\n        + \" Let's see what the JVM thinks these bits are. FloatResult:  \" + floatResult.toString() +\n        \" floatTest: \" + floatTest.toString() + \" Diff \" + Double.toString(floatResult - floatTest),\n        Math.abs(floatResult - floatTest) < .00000000001);\n\n\n    //Double\n    Double doubleResult = (Double)getStatResult(\"str\", \"double_dd\", VAL_TYPE.DOUBLE);\n    Double doubleTest = (Double)calculateNumberStat(doubleTestStart, \"stddev\");\n    assertTrue(Math.abs(doubleResult-doubleTest)<.00000000001);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2d840db4e4ec73c3ff5d5457046c6854cc630e26","date":1385608650,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/analytics/NoFacetTest#stddevTest().mjava","pathOld":"solr/core/src/test/org/apache/solr/analytics/NoFacetTest#stddevTest().mjava","sourceNew":"  @Test\n  public void stddevTest() throws Exception { \n    //Int\n    Double intResult = (Double)getStatResult(\"str\", \"int_id\", VAL_TYPE.DOUBLE);\n    Double intTest = (Double)calculateNumberStat(intTestStart, \"stddev\");\n    assertEquals(getRawResponse(), intResult, intTest, 0.00000000001);\n    \n    //Long\n    Double longResult = (Double)getStatResult(\"str\", \"long_ld\", VAL_TYPE.DOUBLE);\n    Double longTest = (Double)calculateNumberStat(longTestStart, \"stddev\");\n    assertEquals(getRawResponse(), longResult, longTest, 0.00000000001);\n    \n    //Float\n    Double floatResult = (Double)getStatResult(\"str\", \"float_fd\", VAL_TYPE.DOUBLE);\n    Double floatTest = (Double)calculateNumberStat(floatTestStart, \"stddev\");\n    assertEquals(getRawResponse(), floatResult, floatTest, 0.00000000001);\n\n\n    //Double\n    Double doubleResult = (Double)getStatResult(\"str\", \"double_dd\", VAL_TYPE.DOUBLE);\n    Double doubleTest = (Double)calculateNumberStat(doubleTestStart, \"stddev\");\n    assertEquals(getRawResponse(), doubleResult, doubleTest, 0.00000000001);\n  }\n\n","sourceOld":"  @Test\n  public void stddevTest() throws Exception { \n    //Int\n    Double intResult = (Double)getStatResult(\"str\", \"int_id\", VAL_TYPE.DOUBLE);\n    Double intTest = (Double)calculateNumberStat(intTestStart, \"stddev\");\n    assertTrue(Math.abs(intResult-intTest)<.00000000001);\n    \n    //Long\n    Double longResult = (Double)getStatResult(\"str\", \"long_ld\", VAL_TYPE.DOUBLE);\n    Double longTest = (Double)calculateNumberStat(longTestStart, \"stddev\");\n    assertTrue(Math.abs(longResult-longTest)<.00000000001);\n    \n    //Float\n    Double floatResult = (Double)getStatResult(\"str\", \"float_fd\", VAL_TYPE.DOUBLE);\n    Double floatTest = (Double)calculateNumberStat(floatTestStart, \"stddev\");\n    assertTrue(\"Oops: (double raws) \" + Double.doubleToRawLongBits(floatResult) + \" - \"\n        + Double.doubleToRawLongBits(floatTest) + \" < \" + Double.doubleToRawLongBits(.00000000001) +\n        \" Calculated diff \" + Double.doubleToRawLongBits(floatResult - floatTest)\n        + \" Let's see what the JVM thinks these bits are. FloatResult:  \" + floatResult.toString() +\n        \" floatTest: \" + floatTest.toString() + \" Diff \" + Double.toString(floatResult - floatTest),\n        Math.abs(floatResult - floatTest) < .00000000001);\n\n\n    //Double\n    Double doubleResult = (Double)getStatResult(\"str\", \"double_dd\", VAL_TYPE.DOUBLE);\n    Double doubleTest = (Double)calculateNumberStat(doubleTestStart, \"stddev\");\n    assertTrue(Math.abs(doubleResult-doubleTest)<.00000000001);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"74f45af4339b0daf7a95c820ab88c1aea74fbce0","date":1387475327,"type":0,"author":"Michael McCandless","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/analytics/NoFacetTest#stddevTest().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void stddevTest() throws Exception { \n    //Int\n    Double intResult = (Double)getStatResult(\"str\", \"int_id\", VAL_TYPE.DOUBLE);\n    Double intTest = (Double)calculateNumberStat(intTestStart, \"stddev\");\n    assertEquals(getRawResponse(), intResult, intTest, 0.00000000001);\n    \n    //Long\n    Double longResult = (Double)getStatResult(\"str\", \"long_ld\", VAL_TYPE.DOUBLE);\n    Double longTest = (Double)calculateNumberStat(longTestStart, \"stddev\");\n    assertEquals(getRawResponse(), longResult, longTest, 0.00000000001);\n    \n    //Float\n    Double floatResult = (Double)getStatResult(\"str\", \"float_fd\", VAL_TYPE.DOUBLE);\n    Double floatTest = (Double)calculateNumberStat(floatTestStart, \"stddev\");\n    assertEquals(getRawResponse(), floatResult, floatTest, 0.00000000001);\n\n\n    //Double\n    Double doubleResult = (Double)getStatResult(\"str\", \"double_dd\", VAL_TYPE.DOUBLE);\n    Double doubleTest = (Double)calculateNumberStat(doubleTestStart, \"stddev\");\n    assertEquals(getRawResponse(), doubleResult, doubleTest, 0.00000000001);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0f719faa74f7213d4a395510dbc1f1b7cb178484","date":1410881394,"type":5,"author":"Yonik Seeley","isMerge":false,"pathNew":"solr/contrib/analytics/src/test/org/apache/solr/analytics/NoFacetTest#stddevTest().mjava","pathOld":"solr/core/src/test/org/apache/solr/analytics/NoFacetTest#stddevTest().mjava","sourceNew":"  @Test\n  public void stddevTest() throws Exception { \n    //Int\n    Double intResult = (Double)getStatResult(\"str\", \"int_id\", VAL_TYPE.DOUBLE);\n    Double intTest = (Double)calculateNumberStat(intTestStart, \"stddev\");\n    assertEquals(getRawResponse(), intResult, intTest, 0.00000000001);\n    \n    //Long\n    Double longResult = (Double)getStatResult(\"str\", \"long_ld\", VAL_TYPE.DOUBLE);\n    Double longTest = (Double)calculateNumberStat(longTestStart, \"stddev\");\n    assertEquals(getRawResponse(), longResult, longTest, 0.00000000001);\n    \n    //Float\n    Double floatResult = (Double)getStatResult(\"str\", \"float_fd\", VAL_TYPE.DOUBLE);\n    Double floatTest = (Double)calculateNumberStat(floatTestStart, \"stddev\");\n    assertEquals(getRawResponse(), floatResult, floatTest, 0.00000000001);\n\n\n    //Double\n    Double doubleResult = (Double)getStatResult(\"str\", \"double_dd\", VAL_TYPE.DOUBLE);\n    Double doubleTest = (Double)calculateNumberStat(doubleTestStart, \"stddev\");\n    assertEquals(getRawResponse(), doubleResult, doubleTest, 0.00000000001);\n  }\n\n","sourceOld":"  @Test\n  public void stddevTest() throws Exception { \n    //Int\n    Double intResult = (Double)getStatResult(\"str\", \"int_id\", VAL_TYPE.DOUBLE);\n    Double intTest = (Double)calculateNumberStat(intTestStart, \"stddev\");\n    assertEquals(getRawResponse(), intResult, intTest, 0.00000000001);\n    \n    //Long\n    Double longResult = (Double)getStatResult(\"str\", \"long_ld\", VAL_TYPE.DOUBLE);\n    Double longTest = (Double)calculateNumberStat(longTestStart, \"stddev\");\n    assertEquals(getRawResponse(), longResult, longTest, 0.00000000001);\n    \n    //Float\n    Double floatResult = (Double)getStatResult(\"str\", \"float_fd\", VAL_TYPE.DOUBLE);\n    Double floatTest = (Double)calculateNumberStat(floatTestStart, \"stddev\");\n    assertEquals(getRawResponse(), floatResult, floatTest, 0.00000000001);\n\n\n    //Double\n    Double doubleResult = (Double)getStatResult(\"str\", \"double_dd\", VAL_TYPE.DOUBLE);\n    Double doubleTest = (Double)calculateNumberStat(doubleTestStart, \"stddev\");\n    assertEquals(getRawResponse(), doubleResult, doubleTest, 0.00000000001);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"12cca82631e63d106c3d460b573bcdc099e8248c":["d2b292ac7ef1c22274c8c2bd103b0799d9f09f78"],"2408d2a60b59b9f5d910383ce065127078892c04":["7eaff7383da130b6244f6e6d9848fde78f725b1f"],"0f719faa74f7213d4a395510dbc1f1b7cb178484":["2d840db4e4ec73c3ff5d5457046c6854cc630e26"],"7eaff7383da130b6244f6e6d9848fde78f725b1f":["12cca82631e63d106c3d460b573bcdc099e8248c"],"c38de7fccba85ce7e002b575cb4efae36a598c90":["2408d2a60b59b9f5d910383ce065127078892c04"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"d2b292ac7ef1c22274c8c2bd103b0799d9f09f78":["0bd4ca3dd90ed5c702e2d81f7c1c16e9bc8ca84c"],"0bd4ca3dd90ed5c702e2d81f7c1c16e9bc8ca84c":["00da927aadb6d5901b42abc84803ddc88dab8672"],"00da927aadb6d5901b42abc84803ddc88dab8672":["ff403346522eaa9de75403763e297e83a3ea585c"],"74f45af4339b0daf7a95c820ab88c1aea74fbce0":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","2d840db4e4ec73c3ff5d5457046c6854cc630e26"],"ff403346522eaa9de75403763e297e83a3ea585c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"2d840db4e4ec73c3ff5d5457046c6854cc630e26":["c38de7fccba85ce7e002b575cb4efae36a598c90"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["0f719faa74f7213d4a395510dbc1f1b7cb178484"]},"commit2Childs":{"12cca82631e63d106c3d460b573bcdc099e8248c":["7eaff7383da130b6244f6e6d9848fde78f725b1f"],"2408d2a60b59b9f5d910383ce065127078892c04":["c38de7fccba85ce7e002b575cb4efae36a598c90"],"0f719faa74f7213d4a395510dbc1f1b7cb178484":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"7eaff7383da130b6244f6e6d9848fde78f725b1f":["2408d2a60b59b9f5d910383ce065127078892c04"],"c38de7fccba85ce7e002b575cb4efae36a598c90":["2d840db4e4ec73c3ff5d5457046c6854cc630e26"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["74f45af4339b0daf7a95c820ab88c1aea74fbce0","ff403346522eaa9de75403763e297e83a3ea585c"],"d2b292ac7ef1c22274c8c2bd103b0799d9f09f78":["12cca82631e63d106c3d460b573bcdc099e8248c"],"0bd4ca3dd90ed5c702e2d81f7c1c16e9bc8ca84c":["d2b292ac7ef1c22274c8c2bd103b0799d9f09f78"],"00da927aadb6d5901b42abc84803ddc88dab8672":["0bd4ca3dd90ed5c702e2d81f7c1c16e9bc8ca84c"],"74f45af4339b0daf7a95c820ab88c1aea74fbce0":[],"ff403346522eaa9de75403763e297e83a3ea585c":["00da927aadb6d5901b42abc84803ddc88dab8672"],"2d840db4e4ec73c3ff5d5457046c6854cc630e26":["0f719faa74f7213d4a395510dbc1f1b7cb178484","74f45af4339b0daf7a95c820ab88c1aea74fbce0"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["74f45af4339b0daf7a95c820ab88c1aea74fbce0","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}