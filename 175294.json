{"path":"solr/test-framework/src/java/org/apache/solr/SolrTestCaseJ4#setupNoCoreTest(File,String).mjava","commits":[{"id":"90164923c8d1612badfdbea3fadc987a4e5bc7e6","date":1373121947,"type":0,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/SolrTestCaseJ4#setupNoCoreTest(File,String).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Call this from @BeforeClass to set up the test harness and update handler with no cores.\n   *\n   * @param solrHome The solr home directory.\n   * @param xmlStr - the text of an XML file to use. If null, use the what's the absolute minimal file.\n   * @throws Exception Lost of file-type things can go wrong.\n   */\n  public static void setupNoCoreTest(File solrHome, String xmlStr) throws Exception {\n\n    File tmpFile = new File(solrHome, ConfigSolr.SOLR_XML_FILE);\n    if (xmlStr == null) {\n      xmlStr = \"<solr></solr>\";\n    }\n    FileUtils.write(tmpFile, xmlStr, IOUtils.CHARSET_UTF_8.toString());\n\n    SolrResourceLoader loader = new SolrResourceLoader(solrHome.getAbsolutePath());\n    h = new TestHarness(loader, ConfigSolr.fromFile(loader, new File(solrHome, \"solr.xml\")));\n    lrf = h.getRequestFactory(\"standard\", 0, 20, CommonParams.VERSION, \"2.2\");\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"37a0f60745e53927c4c876cfe5b5a58170f0646c","date":1373994005,"type":0,"author":"Han Jiang","isMerge":true,"pathNew":"solr/test-framework/src/java/org/apache/solr/SolrTestCaseJ4#setupNoCoreTest(File,String).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Call this from @BeforeClass to set up the test harness and update handler with no cores.\n   *\n   * @param solrHome The solr home directory.\n   * @param xmlStr - the text of an XML file to use. If null, use the what's the absolute minimal file.\n   * @throws Exception Lost of file-type things can go wrong.\n   */\n  public static void setupNoCoreTest(File solrHome, String xmlStr) throws Exception {\n\n    File tmpFile = new File(solrHome, ConfigSolr.SOLR_XML_FILE);\n    if (xmlStr == null) {\n      xmlStr = \"<solr></solr>\";\n    }\n    FileUtils.write(tmpFile, xmlStr, IOUtils.CHARSET_UTF_8.toString());\n\n    SolrResourceLoader loader = new SolrResourceLoader(solrHome.getAbsolutePath());\n    h = new TestHarness(loader, ConfigSolr.fromFile(loader, new File(solrHome, \"solr.xml\")));\n    lrf = h.getRequestFactory(\"standard\", 0, 20, CommonParams.VERSION, \"2.2\");\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"19275ba31e621f6da1b83bf13af75233876fd3d4","date":1374846698,"type":3,"author":"Han Jiang","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/SolrTestCaseJ4#setupNoCoreTest(File,String).mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/SolrTestCaseJ4#setupNoCoreTest(File,String).mjava","sourceNew":"  /**\n   * Call this from @BeforeClass to set up the test harness and update handler with no cores.\n   *\n   * @param solrHome The solr home directory.\n   * @param xmlStr - the text of an XML file to use. If null, use the what's the absolute minimal file.\n   * @throws Exception Lost of file-type things can go wrong.\n   */\n  public static void setupNoCoreTest(File solrHome, String xmlStr) throws Exception {\n\n    File tmpFile = new File(solrHome, ConfigSolr.SOLR_XML_FILE);\n    if (xmlStr == null) {\n      xmlStr = \"<solr></solr>\";\n    }\n    FileUtils.write(tmpFile, xmlStr, IOUtils.CHARSET_UTF_8.toString());\n\n    SolrResourceLoader loader = new SolrResourceLoader(solrHome.getAbsolutePath());\n    h = new TestHarness(loader, ConfigSolr.fromFile(loader, new File(solrHome, \"solr.xml\")));\n    lrf = h.getRequestFactory(\"standard\", 0, 20, CommonParams.VERSION, \"2.2\");\n  }\n\n","sourceOld":"  /**\n   * Call this from @BeforeClass to set up the test harness and update handler with no cores.\n   *\n   * @param solrHome The solr home directory.\n   * @param xmlStr - the text of an XML file to use. If null, use the what's the absolute minimal file.\n   * @throws Exception Lost of file-type things can go wrong.\n   */\n  public static void setupNoCoreTest(File solrHome, String xmlStr) throws Exception {\n\n    File tmpFile = new File(solrHome, ConfigSolr.SOLR_XML_FILE);\n    if (xmlStr == null) {\n      xmlStr = \"<solr></solr>\";\n    }\n    FileUtils.write(tmpFile, xmlStr, IOUtils.CHARSET_UTF_8.toString());\n\n    SolrResourceLoader loader = new SolrResourceLoader(solrHome.getAbsolutePath());\n    h = new TestHarness(loader, ConfigSolr.fromFile(loader, new File(solrHome, \"solr.xml\")));\n    lrf = h.getRequestFactory(\"standard\", 0, 20, CommonParams.VERSION, \"2.2\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"716d18f3a9b0993bc679d7fa7abdc9bfb03411ec","date":1376375609,"type":3,"author":"Han Jiang","isMerge":true,"pathNew":"solr/test-framework/src/java/org/apache/solr/SolrTestCaseJ4#setupNoCoreTest(File,String).mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/SolrTestCaseJ4#setupNoCoreTest(File,String).mjava","sourceNew":"  /**\n   * Call this from @BeforeClass to set up the test harness and update handler with no cores.\n   *\n   * @param solrHome The solr home directory.\n   * @param xmlStr - the text of an XML file to use. If null, use the what's the absolute minimal file.\n   * @throws Exception Lost of file-type things can go wrong.\n   */\n  public static void setupNoCoreTest(File solrHome, String xmlStr) throws Exception {\n\n    File tmpFile = new File(solrHome, ConfigSolr.SOLR_XML_FILE);\n    if (xmlStr == null) {\n      xmlStr = \"<solr></solr>\";\n    }\n    FileUtils.write(tmpFile, xmlStr, IOUtils.CHARSET_UTF_8.toString());\n\n    SolrResourceLoader loader = new SolrResourceLoader(solrHome.getAbsolutePath());\n    h = new TestHarness(loader, ConfigSolr.fromFile(loader, new File(solrHome, \"solr.xml\")));\n    lrf = h.getRequestFactory(\"standard\", 0, 20, CommonParams.VERSION, \"2.2\");\n  }\n\n","sourceOld":"  /**\n   * Call this from @BeforeClass to set up the test harness and update handler with no cores.\n   *\n   * @param solrHome The solr home directory.\n   * @param xmlStr - the text of an XML file to use. If null, use the what's the absolute minimal file.\n   * @throws Exception Lost of file-type things can go wrong.\n   */\n  public static void setupNoCoreTest(File solrHome, String xmlStr) throws Exception {\n\n    File tmpFile = new File(solrHome, ConfigSolr.SOLR_XML_FILE);\n    if (xmlStr == null) {\n      xmlStr = \"<solr></solr>\";\n    }\n    FileUtils.write(tmpFile, xmlStr, IOUtils.CHARSET_UTF_8.toString());\n\n    SolrResourceLoader loader = new SolrResourceLoader(solrHome.getAbsolutePath());\n    h = new TestHarness(loader, ConfigSolr.fromFile(loader, new File(solrHome, \"solr.xml\")));\n    lrf = h.getRequestFactory(\"standard\", 0, 20, CommonParams.VERSION, \"2.2\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7d89d7e4e5101347833eea558851bf4209218619","date":1396265641,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/SolrTestCaseJ4#setupNoCoreTest(File,String).mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/SolrTestCaseJ4#setupNoCoreTest(File,String).mjava","sourceNew":"  /**\n   * Call this from @BeforeClass to set up the test harness and update handler with no cores.\n   *\n   * @param solrHome The solr home directory.\n   * @param xmlStr - the text of an XML file to use. If null, use the what's the absolute minimal file.\n   * @throws Exception Lost of file-type things can go wrong.\n   */\n  public static void setupNoCoreTest(File solrHome, String xmlStr) throws Exception {\n\n    File tmpFile = new File(solrHome, ConfigSolr.SOLR_XML_FILE);\n    if (xmlStr == null) {\n      xmlStr = \"<solr></solr>\";\n    }\n    FileUtils.write(tmpFile, xmlStr, IOUtils.UTF_8);\n\n    SolrResourceLoader loader = new SolrResourceLoader(solrHome.getAbsolutePath());\n    h = new TestHarness(loader, ConfigSolr.fromFile(loader, new File(solrHome, \"solr.xml\")));\n    lrf = h.getRequestFactory(\"standard\", 0, 20, CommonParams.VERSION, \"2.2\");\n  }\n\n","sourceOld":"  /**\n   * Call this from @BeforeClass to set up the test harness and update handler with no cores.\n   *\n   * @param solrHome The solr home directory.\n   * @param xmlStr - the text of an XML file to use. If null, use the what's the absolute minimal file.\n   * @throws Exception Lost of file-type things can go wrong.\n   */\n  public static void setupNoCoreTest(File solrHome, String xmlStr) throws Exception {\n\n    File tmpFile = new File(solrHome, ConfigSolr.SOLR_XML_FILE);\n    if (xmlStr == null) {\n      xmlStr = \"<solr></solr>\";\n    }\n    FileUtils.write(tmpFile, xmlStr, IOUtils.CHARSET_UTF_8.toString());\n\n    SolrResourceLoader loader = new SolrResourceLoader(solrHome.getAbsolutePath());\n    h = new TestHarness(loader, ConfigSolr.fromFile(loader, new File(solrHome, \"solr.xml\")));\n    lrf = h.getRequestFactory(\"standard\", 0, 20, CommonParams.VERSION, \"2.2\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5eb2511ababf862ea11e10761c70ee560cd84510","date":1396607225,"type":3,"author":"Dawid Weiss","isMerge":true,"pathNew":"solr/test-framework/src/java/org/apache/solr/SolrTestCaseJ4#setupNoCoreTest(File,String).mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/SolrTestCaseJ4#setupNoCoreTest(File,String).mjava","sourceNew":"  /**\n   * Call this from @BeforeClass to set up the test harness and update handler with no cores.\n   *\n   * @param solrHome The solr home directory.\n   * @param xmlStr - the text of an XML file to use. If null, use the what's the absolute minimal file.\n   * @throws Exception Lost of file-type things can go wrong.\n   */\n  public static void setupNoCoreTest(File solrHome, String xmlStr) throws Exception {\n\n    File tmpFile = new File(solrHome, ConfigSolr.SOLR_XML_FILE);\n    if (xmlStr == null) {\n      xmlStr = \"<solr></solr>\";\n    }\n    FileUtils.write(tmpFile, xmlStr, IOUtils.UTF_8);\n\n    SolrResourceLoader loader = new SolrResourceLoader(solrHome.getAbsolutePath());\n    h = new TestHarness(loader, ConfigSolr.fromFile(loader, new File(solrHome, \"solr.xml\")));\n    lrf = h.getRequestFactory(\"standard\", 0, 20, CommonParams.VERSION, \"2.2\");\n  }\n\n","sourceOld":"  /**\n   * Call this from @BeforeClass to set up the test harness and update handler with no cores.\n   *\n   * @param solrHome The solr home directory.\n   * @param xmlStr - the text of an XML file to use. If null, use the what's the absolute minimal file.\n   * @throws Exception Lost of file-type things can go wrong.\n   */\n  public static void setupNoCoreTest(File solrHome, String xmlStr) throws Exception {\n\n    File tmpFile = new File(solrHome, ConfigSolr.SOLR_XML_FILE);\n    if (xmlStr == null) {\n      xmlStr = \"<solr></solr>\";\n    }\n    FileUtils.write(tmpFile, xmlStr, IOUtils.CHARSET_UTF_8.toString());\n\n    SolrResourceLoader loader = new SolrResourceLoader(solrHome.getAbsolutePath());\n    h = new TestHarness(loader, ConfigSolr.fromFile(loader, new File(solrHome, \"solr.xml\")));\n    lrf = h.getRequestFactory(\"standard\", 0, 20, CommonParams.VERSION, \"2.2\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fd44bec977a26a118d9e809e2de6f7edb5ca0f39","date":1421673929,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/SolrTestCaseJ4#setupNoCoreTest(File,String).mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/SolrTestCaseJ4#setupNoCoreTest(File,String).mjava","sourceNew":"  /**\n   * Call this from @BeforeClass to set up the test harness and update handler with no cores.\n   *\n   * @param solrHome The solr home directory.\n   * @param xmlStr - the text of an XML file to use. If null, use the what's the absolute minimal file.\n   * @throws Exception Lost of file-type things can go wrong.\n   */\n  public static void setupNoCoreTest(File solrHome, String xmlStr) throws Exception {\n\n    File tmpFile = new File(solrHome, ConfigSolr.SOLR_XML_FILE);\n    if (xmlStr == null) {\n      xmlStr = \"<solr></solr>\";\n    }\n    FileUtils.write(tmpFile, xmlStr, IOUtils.UTF_8);\n\n    SolrResourceLoader loader = new SolrResourceLoader(solrHome.getAbsolutePath());\n    h = new TestHarness(ConfigSolr.fromFile(loader, new File(solrHome, \"solr.xml\")));\n    lrf = h.getRequestFactory(\"standard\", 0, 20, CommonParams.VERSION, \"2.2\");\n  }\n\n","sourceOld":"  /**\n   * Call this from @BeforeClass to set up the test harness and update handler with no cores.\n   *\n   * @param solrHome The solr home directory.\n   * @param xmlStr - the text of an XML file to use. If null, use the what's the absolute minimal file.\n   * @throws Exception Lost of file-type things can go wrong.\n   */\n  public static void setupNoCoreTest(File solrHome, String xmlStr) throws Exception {\n\n    File tmpFile = new File(solrHome, ConfigSolr.SOLR_XML_FILE);\n    if (xmlStr == null) {\n      xmlStr = \"<solr></solr>\";\n    }\n    FileUtils.write(tmpFile, xmlStr, IOUtils.UTF_8);\n\n    SolrResourceLoader loader = new SolrResourceLoader(solrHome.getAbsolutePath());\n    h = new TestHarness(loader, ConfigSolr.fromFile(loader, new File(solrHome, \"solr.xml\")));\n    lrf = h.getRequestFactory(\"standard\", 0, 20, CommonParams.VERSION, \"2.2\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e15199583d3635cb940942caed05132dd6c4c7c6","date":1424875551,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/SolrTestCaseJ4#setupNoCoreTest(File,String).mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/SolrTestCaseJ4#setupNoCoreTest(File,String).mjava","sourceNew":"  /**\n   * Call this from @BeforeClass to set up the test harness and update handler with no cores.\n   *\n   * @param solrHome The solr home directory.\n   * @param xmlStr - the text of an XML file to use. If null, use the what's the absolute minimal file.\n   * @throws Exception Lost of file-type things can go wrong.\n   */\n  public static void setupNoCoreTest(File solrHome, String xmlStr) throws Exception {\n\n    File tmpFile = new File(solrHome, SolrXmlConfig.SOLR_XML_FILE);\n    if (xmlStr == null) {\n      xmlStr = \"<solr></solr>\";\n    }\n    FileUtils.write(tmpFile, xmlStr, IOUtils.UTF_8);\n\n    SolrResourceLoader loader = new SolrResourceLoader(solrHome.getAbsolutePath());\n    h = new TestHarness(SolrXmlConfig.fromFile(loader, new File(solrHome, \"solr.xml\")));\n    lrf = h.getRequestFactory(\"standard\", 0, 20, CommonParams.VERSION, \"2.2\");\n  }\n\n","sourceOld":"  /**\n   * Call this from @BeforeClass to set up the test harness and update handler with no cores.\n   *\n   * @param solrHome The solr home directory.\n   * @param xmlStr - the text of an XML file to use. If null, use the what's the absolute minimal file.\n   * @throws Exception Lost of file-type things can go wrong.\n   */\n  public static void setupNoCoreTest(File solrHome, String xmlStr) throws Exception {\n\n    File tmpFile = new File(solrHome, ConfigSolr.SOLR_XML_FILE);\n    if (xmlStr == null) {\n      xmlStr = \"<solr></solr>\";\n    }\n    FileUtils.write(tmpFile, xmlStr, IOUtils.UTF_8);\n\n    SolrResourceLoader loader = new SolrResourceLoader(solrHome.getAbsolutePath());\n    h = new TestHarness(ConfigSolr.fromFile(loader, new File(solrHome, \"solr.xml\")));\n    lrf = h.getRequestFactory(\"standard\", 0, 20, CommonParams.VERSION, \"2.2\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","date":1427779360,"type":3,"author":"Ryan Ernst","isMerge":true,"pathNew":"solr/test-framework/src/java/org/apache/solr/SolrTestCaseJ4#setupNoCoreTest(File,String).mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/SolrTestCaseJ4#setupNoCoreTest(File,String).mjava","sourceNew":"  /**\n   * Call this from @BeforeClass to set up the test harness and update handler with no cores.\n   *\n   * @param solrHome The solr home directory.\n   * @param xmlStr - the text of an XML file to use. If null, use the what's the absolute minimal file.\n   * @throws Exception Lost of file-type things can go wrong.\n   */\n  public static void setupNoCoreTest(File solrHome, String xmlStr) throws Exception {\n\n    File tmpFile = new File(solrHome, SolrXmlConfig.SOLR_XML_FILE);\n    if (xmlStr == null) {\n      xmlStr = \"<solr></solr>\";\n    }\n    FileUtils.write(tmpFile, xmlStr, IOUtils.UTF_8);\n\n    SolrResourceLoader loader = new SolrResourceLoader(solrHome.getAbsolutePath());\n    h = new TestHarness(SolrXmlConfig.fromFile(loader, new File(solrHome, \"solr.xml\")));\n    lrf = h.getRequestFactory(\"standard\", 0, 20, CommonParams.VERSION, \"2.2\");\n  }\n\n","sourceOld":"  /**\n   * Call this from @BeforeClass to set up the test harness and update handler with no cores.\n   *\n   * @param solrHome The solr home directory.\n   * @param xmlStr - the text of an XML file to use. If null, use the what's the absolute minimal file.\n   * @throws Exception Lost of file-type things can go wrong.\n   */\n  public static void setupNoCoreTest(File solrHome, String xmlStr) throws Exception {\n\n    File tmpFile = new File(solrHome, ConfigSolr.SOLR_XML_FILE);\n    if (xmlStr == null) {\n      xmlStr = \"<solr></solr>\";\n    }\n    FileUtils.write(tmpFile, xmlStr, IOUtils.UTF_8);\n\n    SolrResourceLoader loader = new SolrResourceLoader(solrHome.getAbsolutePath());\n    h = new TestHarness(ConfigSolr.fromFile(loader, new File(solrHome, \"solr.xml\")));\n    lrf = h.getRequestFactory(\"standard\", 0, 20, CommonParams.VERSION, \"2.2\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a626ec4d1c92e59fe390724d6220081047b03ce7","date":1448021525,"type":5,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/SolrTestCaseJ4#setupNoCoreTest(Path,String).mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/SolrTestCaseJ4#setupNoCoreTest(File,String).mjava","sourceNew":"  /**\n   * Call this from @BeforeClass to set up the test harness and update handler with no cores.\n   *\n   * @param solrHome The solr home directory.\n   * @param xmlStr - the text of an XML file to use. If null, use the what's the absolute minimal file.\n   * @throws Exception Lost of file-type things can go wrong.\n   */\n  public static void setupNoCoreTest(Path solrHome, String xmlStr) throws Exception {\n\n    if (xmlStr == null)\n      xmlStr = \"<solr></solr>\";\n    Files.write(solrHome.resolve(SolrXmlConfig.SOLR_XML_FILE), xmlStr.getBytes(StandardCharsets.UTF_8));\n    h = new TestHarness(SolrXmlConfig.fromSolrHome(solrHome));\n    lrf = h.getRequestFactory(\"standard\", 0, 20, CommonParams.VERSION, \"2.2\");\n  }\n\n","sourceOld":"  /**\n   * Call this from @BeforeClass to set up the test harness and update handler with no cores.\n   *\n   * @param solrHome The solr home directory.\n   * @param xmlStr - the text of an XML file to use. If null, use the what's the absolute minimal file.\n   * @throws Exception Lost of file-type things can go wrong.\n   */\n  public static void setupNoCoreTest(File solrHome, String xmlStr) throws Exception {\n\n    File tmpFile = new File(solrHome, SolrXmlConfig.SOLR_XML_FILE);\n    if (xmlStr == null) {\n      xmlStr = \"<solr></solr>\";\n    }\n    FileUtils.write(tmpFile, xmlStr, IOUtils.UTF_8);\n\n    SolrResourceLoader loader = new SolrResourceLoader(solrHome.getAbsolutePath());\n    h = new TestHarness(SolrXmlConfig.fromFile(loader, new File(solrHome, \"solr.xml\")));\n    lrf = h.getRequestFactory(\"standard\", 0, 20, CommonParams.VERSION, \"2.2\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"5eb2511ababf862ea11e10761c70ee560cd84510":["19275ba31e621f6da1b83bf13af75233876fd3d4","7d89d7e4e5101347833eea558851bf4209218619"],"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":["fd44bec977a26a118d9e809e2de6f7edb5ca0f39","e15199583d3635cb940942caed05132dd6c4c7c6"],"716d18f3a9b0993bc679d7fa7abdc9bfb03411ec":["37a0f60745e53927c4c876cfe5b5a58170f0646c","19275ba31e621f6da1b83bf13af75233876fd3d4"],"a626ec4d1c92e59fe390724d6220081047b03ce7":["e15199583d3635cb940942caed05132dd6c4c7c6"],"37a0f60745e53927c4c876cfe5b5a58170f0646c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","90164923c8d1612badfdbea3fadc987a4e5bc7e6"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"fd44bec977a26a118d9e809e2de6f7edb5ca0f39":["7d89d7e4e5101347833eea558851bf4209218619"],"19275ba31e621f6da1b83bf13af75233876fd3d4":["90164923c8d1612badfdbea3fadc987a4e5bc7e6"],"90164923c8d1612badfdbea3fadc987a4e5bc7e6":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"7d89d7e4e5101347833eea558851bf4209218619":["19275ba31e621f6da1b83bf13af75233876fd3d4"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a626ec4d1c92e59fe390724d6220081047b03ce7"],"e15199583d3635cb940942caed05132dd6c4c7c6":["fd44bec977a26a118d9e809e2de6f7edb5ca0f39"]},"commit2Childs":{"5eb2511ababf862ea11e10761c70ee560cd84510":[],"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":[],"716d18f3a9b0993bc679d7fa7abdc9bfb03411ec":[],"37a0f60745e53927c4c876cfe5b5a58170f0646c":["716d18f3a9b0993bc679d7fa7abdc9bfb03411ec"],"a626ec4d1c92e59fe390724d6220081047b03ce7":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["37a0f60745e53927c4c876cfe5b5a58170f0646c","90164923c8d1612badfdbea3fadc987a4e5bc7e6"],"fd44bec977a26a118d9e809e2de6f7edb5ca0f39":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","e15199583d3635cb940942caed05132dd6c4c7c6"],"19275ba31e621f6da1b83bf13af75233876fd3d4":["5eb2511ababf862ea11e10761c70ee560cd84510","716d18f3a9b0993bc679d7fa7abdc9bfb03411ec","7d89d7e4e5101347833eea558851bf4209218619"],"90164923c8d1612badfdbea3fadc987a4e5bc7e6":["37a0f60745e53927c4c876cfe5b5a58170f0646c","19275ba31e621f6da1b83bf13af75233876fd3d4"],"7d89d7e4e5101347833eea558851bf4209218619":["5eb2511ababf862ea11e10761c70ee560cd84510","fd44bec977a26a118d9e809e2de6f7edb5ca0f39"],"e15199583d3635cb940942caed05132dd6c4c7c6":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","a626ec4d1c92e59fe390724d6220081047b03ce7"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["5eb2511ababf862ea11e10761c70ee560cd84510","a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","716d18f3a9b0993bc679d7fa7abdc9bfb03411ec","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}