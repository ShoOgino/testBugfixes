{"path":"lucene/backwards/src/test/org/apache/lucene/search/TestSort#getFullStrings().mjava","commits":[{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/backwards/src/test/org/apache/lucene/search/TestSort#getFullStrings().mjava","pathOld":"backwards/src/test/org/apache/lucene/search/TestSort#getFullStrings().mjava","sourceNew":"  private IndexSearcher getFullStrings() throws CorruptIndexException, LockObtainFailedException, IOException {\n    RAMDirectory indexStore = new RAMDirectory ();\n    IndexWriter writer = new IndexWriter (indexStore, new SimpleAnalyzer(), true, IndexWriter.MaxFieldLength.LIMITED);\n    writer.setMaxBufferedDocs(4);\n    writer.setMergeFactor(97);\n    for (int i=0; i<NUM_STRINGS; i++) {\n        Document doc = new Document();\n        String num = getRandomCharString(getRandomNumber(2, 8), 48, 52);\n        doc.add (new Field (\"tracer\", num, Field.Store.YES, Field.Index.NO));\n        //doc.add (new Field (\"contents\", Integer.toString(i), Field.Store.NO, Field.Index.ANALYZED));\n        doc.add (new Field (\"string\", num, Field.Store.NO, Field.Index.NOT_ANALYZED));\n        String num2 = getRandomCharString(getRandomNumber(1, 4), 48, 50);\n        doc.add (new Field (\"string2\", num2, Field.Store.NO, Field.Index.NOT_ANALYZED));\n        doc.add (new Field (\"tracer2\", num2, Field.Store.YES, Field.Index.NO));\n        doc.setBoost(2);  // produce some scores above 1.0\n        writer.setMaxBufferedDocs(getRandomNumber(2, 12));\n        writer.addDocument (doc);\n      \n    }\n    //writer.optimize ();\n    //System.out.println(writer.getSegmentCount());\n    writer.close ();\n    return new IndexSearcher (indexStore, true);\n  }\n\n","sourceOld":"  private IndexSearcher getFullStrings() throws CorruptIndexException, LockObtainFailedException, IOException {\n    RAMDirectory indexStore = new RAMDirectory ();\n    IndexWriter writer = new IndexWriter (indexStore, new SimpleAnalyzer(), true, IndexWriter.MaxFieldLength.LIMITED);\n    writer.setMaxBufferedDocs(4);\n    writer.setMergeFactor(97);\n    for (int i=0; i<NUM_STRINGS; i++) {\n        Document doc = new Document();\n        String num = getRandomCharString(getRandomNumber(2, 8), 48, 52);\n        doc.add (new Field (\"tracer\", num, Field.Store.YES, Field.Index.NO));\n        //doc.add (new Field (\"contents\", Integer.toString(i), Field.Store.NO, Field.Index.ANALYZED));\n        doc.add (new Field (\"string\", num, Field.Store.NO, Field.Index.NOT_ANALYZED));\n        String num2 = getRandomCharString(getRandomNumber(1, 4), 48, 50);\n        doc.add (new Field (\"string2\", num2, Field.Store.NO, Field.Index.NOT_ANALYZED));\n        doc.add (new Field (\"tracer2\", num2, Field.Store.YES, Field.Index.NO));\n        doc.setBoost(2);  // produce some scores above 1.0\n        writer.setMaxBufferedDocs(getRandomNumber(2, 12));\n        writer.addDocument (doc);\n      \n    }\n    //writer.optimize ();\n    //System.out.println(writer.getSegmentCount());\n    writer.close ();\n    return new IndexSearcher (indexStore, true);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"90eca6fcb6635ca73ea4fdbe2f57d2033b66d3b6","date":1272983566,"type":4,"author":"Uwe Schindler","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/backwards/src/test/org/apache/lucene/search/TestSort#getFullStrings().mjava","sourceNew":null,"sourceOld":"  private IndexSearcher getFullStrings() throws CorruptIndexException, LockObtainFailedException, IOException {\n    RAMDirectory indexStore = new RAMDirectory ();\n    IndexWriter writer = new IndexWriter (indexStore, new SimpleAnalyzer(), true, IndexWriter.MaxFieldLength.LIMITED);\n    writer.setMaxBufferedDocs(4);\n    writer.setMergeFactor(97);\n    for (int i=0; i<NUM_STRINGS; i++) {\n        Document doc = new Document();\n        String num = getRandomCharString(getRandomNumber(2, 8), 48, 52);\n        doc.add (new Field (\"tracer\", num, Field.Store.YES, Field.Index.NO));\n        //doc.add (new Field (\"contents\", Integer.toString(i), Field.Store.NO, Field.Index.ANALYZED));\n        doc.add (new Field (\"string\", num, Field.Store.NO, Field.Index.NOT_ANALYZED));\n        String num2 = getRandomCharString(getRandomNumber(1, 4), 48, 50);\n        doc.add (new Field (\"string2\", num2, Field.Store.NO, Field.Index.NOT_ANALYZED));\n        doc.add (new Field (\"tracer2\", num2, Field.Store.YES, Field.Index.NO));\n        doc.setBoost(2);  // produce some scores above 1.0\n        writer.setMaxBufferedDocs(getRandomNumber(2, 12));\n        writer.addDocument (doc);\n      \n    }\n    //writer.optimize ();\n    //System.out.println(writer.getSegmentCount());\n    writer.close ();\n    return new IndexSearcher (indexStore, true);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"90eca6fcb6635ca73ea4fdbe2f57d2033b66d3b6":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["90eca6fcb6635ca73ea4fdbe2f57d2033b66d3b6"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"90eca6fcb6635ca73ea4fdbe2f57d2033b66d3b6":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["90eca6fcb6635ca73ea4fdbe2f57d2033b66d3b6"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}