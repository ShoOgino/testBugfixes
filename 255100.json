{"path":"lucene/core/src/test/org/apache/lucene/document/BaseShapeEncodingTestCase#verifyEncodingPermutations(int,int,int,int,int,int).mjava","commits":[{"id":"09c1e6d465800c73af60624bf9d4459a19f7940c","date":1579293280,"type":1,"author":"Nicholas Knize","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/document/BaseShapeEncodingTestCase#verifyEncodingPermutations(int,int,int,int,int,int).mjava","pathOld":"lucene/sandbox/src/test/org/apache/lucene/document/BaseShapeEncodingTestCase#verifyEncodingPermutations(int,int,int,int,int,int).mjava","sourceNew":"  //[a,b,c] == [c,a,b] == [b,c,a] == [c,b,a] == [b,a,c] == [a,c,b]\n  public void verifyEncodingPermutations(int ayEnc, int axEnc, int byEnc, int bxEnc, int cyEnc, int cxEnc) {\n    //this is only valid when points are not co-planar\n    assertTrue(GeoUtils.orient(ayEnc, axEnc, byEnc, bxEnc, cyEnc, cxEnc) != 0);\n    byte[] b = new byte[7 * ShapeField.BYTES];\n    //[a,b,c]\n    ShapeField.encodeTriangle(b, ayEnc, axEnc, true, byEnc, bxEnc, true, cyEnc, cxEnc, false);\n    ShapeField.DecodedTriangle encodedABC = new ShapeField.DecodedTriangle();\n    ShapeField.decodeTriangle(b, encodedABC);\n    //[c,a,b]\n    ShapeField.encodeTriangle(b, cyEnc, cxEnc, false, ayEnc, axEnc, true, byEnc, bxEnc, true);\n    ShapeField.DecodedTriangle encodedCAB = new ShapeField.DecodedTriangle();\n    ShapeField.decodeTriangle(b, encodedCAB);\n    assertEquals(encodedABC, encodedCAB);\n    //[b,c,a]\n    ShapeField.encodeTriangle(b, byEnc, bxEnc, true, cyEnc, cxEnc, false, ayEnc, axEnc, true);\n    ShapeField.DecodedTriangle encodedBCA = new ShapeField.DecodedTriangle();\n    ShapeField.decodeTriangle(b, encodedBCA);\n    assertEquals(encodedABC, encodedBCA);\n    //[c,b,a]\n    ShapeField.encodeTriangle(b, cyEnc, cxEnc, true, byEnc, bxEnc, true, ayEnc, axEnc, false);\n    ShapeField.DecodedTriangle encodedCBA= new ShapeField.DecodedTriangle();\n    ShapeField.decodeTriangle(b, encodedCBA);\n    assertEquals(encodedABC, encodedCBA);\n    //[b,a,c]\n    ShapeField.encodeTriangle(b, byEnc, bxEnc, true, ayEnc, axEnc, false, cyEnc, cxEnc, true);\n    ShapeField.DecodedTriangle encodedBAC= new ShapeField.DecodedTriangle();\n    ShapeField.decodeTriangle(b, encodedBAC);\n    assertEquals(encodedABC, encodedBAC);\n    //[a,c,b]\n    ShapeField.encodeTriangle(b, ayEnc, axEnc, false, cyEnc, cxEnc, true, byEnc, bxEnc, true);\n    ShapeField.DecodedTriangle encodedACB= new ShapeField.DecodedTriangle();\n    ShapeField.decodeTriangle(b, encodedACB);\n    assertEquals(encodedABC, encodedACB);\n  }\n\n","sourceOld":"  //[a,b,c] == [c,a,b] == [b,c,a] == [c,b,a] == [b,a,c] == [a,c,b]\n  public void verifyEncodingPermutations(int ayEnc, int axEnc, int byEnc, int bxEnc, int cyEnc, int cxEnc) {\n    //this is only valid when points are not co-planar\n    assertTrue(GeoUtils.orient(ayEnc, axEnc, byEnc, bxEnc, cyEnc, cxEnc) != 0);\n    byte[] b = new byte[7 * ShapeField.BYTES];\n    //[a,b,c]\n    ShapeField.encodeTriangle(b, ayEnc, axEnc, true, byEnc, bxEnc, true, cyEnc, cxEnc, false);\n    ShapeField.DecodedTriangle encodedABC = new ShapeField.DecodedTriangle();\n    ShapeField.decodeTriangle(b, encodedABC);\n    //[c,a,b]\n    ShapeField.encodeTriangle(b, cyEnc, cxEnc, false, ayEnc, axEnc, true, byEnc, bxEnc, true);\n    ShapeField.DecodedTriangle encodedCAB = new ShapeField.DecodedTriangle();\n    ShapeField.decodeTriangle(b, encodedCAB);\n    assertEquals(encodedABC, encodedCAB);\n    //[b,c,a]\n    ShapeField.encodeTriangle(b, byEnc, bxEnc, true, cyEnc, cxEnc, false, ayEnc, axEnc, true);\n    ShapeField.DecodedTriangle encodedBCA = new ShapeField.DecodedTriangle();\n    ShapeField.decodeTriangle(b, encodedBCA);\n    assertEquals(encodedABC, encodedBCA);\n    //[c,b,a]\n    ShapeField.encodeTriangle(b, cyEnc, cxEnc, true, byEnc, bxEnc, true, ayEnc, axEnc, false);\n    ShapeField.DecodedTriangle encodedCBA= new ShapeField.DecodedTriangle();\n    ShapeField.decodeTriangle(b, encodedCBA);\n    assertEquals(encodedABC, encodedCBA);\n    //[b,a,c]\n    ShapeField.encodeTriangle(b, byEnc, bxEnc, true, ayEnc, axEnc, false, cyEnc, cxEnc, true);\n    ShapeField.DecodedTriangle encodedBAC= new ShapeField.DecodedTriangle();\n    ShapeField.decodeTriangle(b, encodedBAC);\n    assertEquals(encodedABC, encodedBAC);\n    //[a,c,b]\n    ShapeField.encodeTriangle(b, ayEnc, axEnc, false, cyEnc, cxEnc, true, byEnc, bxEnc, true);\n    ShapeField.DecodedTriangle encodedACB= new ShapeField.DecodedTriangle();\n    ShapeField.decodeTriangle(b, encodedACB);\n    assertEquals(encodedABC, encodedACB);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"09c1e6d465800c73af60624bf9d4459a19f7940c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["09c1e6d465800c73af60624bf9d4459a19f7940c"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["09c1e6d465800c73af60624bf9d4459a19f7940c"],"09c1e6d465800c73af60624bf9d4459a19f7940c":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}