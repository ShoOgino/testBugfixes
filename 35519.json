{"path":"solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/DebugLogger#log(int,String,Object).mjava","commits":[{"id":"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91","date":1306767085,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/DebugLogger#log(int,String,Object).mjava","pathOld":"solr/contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/DebugLogger#log(int,String,Object).mjava","sourceNew":"  public void log(int event, String name, Object row) {\n    if (event == SolrWriter.DISABLE_LOGGING) {\n      enabled = false;\n      return;\n    } else if (event == SolrWriter.ENABLE_LOGGING) {\n      enabled = true;\n      return;\n    }\n\n    if (!enabled && event != SolrWriter.START_ENTITY\n            && event != SolrWriter.END_ENTITY) {\n      return;\n    }\n\n    if (event == SolrWriter.START_DOC) {\n      debugStack.push(new DebugInfo(null, SolrWriter.START_DOC, peekStack()));\n    } else if (SolrWriter.START_ENTITY == event) {\n      debugStack\n              .push(new DebugInfo(name, SolrWriter.START_ENTITY, peekStack()));\n    } else if (SolrWriter.ENTITY_OUT == event\n            || SolrWriter.PRE_TRANSFORMER_ROW == event) {\n      if (debugStack.peek().type == SolrWriter.START_ENTITY\n              || debugStack.peek().type == SolrWriter.START_DOC) {\n        debugStack.peek().lst.add(null, fmt.format(new Object[]{++debugStack\n                .peek().rowCount}));\n        addToNamedList(debugStack.peek().lst, row);\n        debugStack.peek().lst.add(null, LINE);\n      }\n    } else if (event == SolrWriter.ROW_END) {\n      popAllTransformers();\n    } else if (SolrWriter.END_ENTITY == event) {\n      while (debugStack.pop().type != SolrWriter.START_ENTITY)\n        ;\n    } else if (SolrWriter.END_DOC == event) {\n      while (debugStack.pop().type != SolrWriter.START_DOC)\n        ;\n    } else if (event == SolrWriter.TRANSFORMER_EXCEPTION) {\n      debugStack.push(new DebugInfo(name, event, peekStack()));\n      debugStack.peek().lst.add(\"EXCEPTION\",\n              getStacktraceString((Exception) row));\n    } else if (SolrWriter.TRANSFORMED_ROW == event) {\n      debugStack.push(new DebugInfo(name, event, peekStack()));\n      debugStack.peek().lst.add(null, LINE);\n      addToNamedList(debugStack.peek().lst, row);\n      debugStack.peek().lst.add(null, LINE);\n      if (row instanceof DataImportHandlerException) {\n        DataImportHandlerException dataImportHandlerException = (DataImportHandlerException) row;\n        dataImportHandlerException.debugged = true;\n      }\n    } else if (SolrWriter.ENTITY_META == event) {\n      popAllTransformers();\n      debugStack.peek().lst.add(name, row);\n    } else if (SolrWriter.ENTITY_EXCEPTION == event) {\n      if (row instanceof DataImportHandlerException) {\n        DataImportHandlerException dihe = (DataImportHandlerException) row;\n        if (dihe.debugged)\n          return;\n        dihe.debugged = true;\n      }\n\n      popAllTransformers();\n      debugStack.peek().lst.add(\"EXCEPTION\",\n              getStacktraceString((Exception) row));\n    }\n  }\n\n","sourceOld":"  public void log(int event, String name, Object row) {\n    if (event == SolrWriter.DISABLE_LOGGING) {\n      enabled = false;\n      return;\n    } else if (event == SolrWriter.ENABLE_LOGGING) {\n      enabled = true;\n      return;\n    }\n\n    if (!enabled && event != SolrWriter.START_ENTITY\n            && event != SolrWriter.END_ENTITY) {\n      return;\n    }\n\n    if (event == SolrWriter.START_DOC) {\n      debugStack.push(new DebugInfo(null, SolrWriter.START_DOC, peekStack()));\n    } else if (SolrWriter.START_ENTITY == event) {\n      debugStack\n              .push(new DebugInfo(name, SolrWriter.START_ENTITY, peekStack()));\n    } else if (SolrWriter.ENTITY_OUT == event\n            || SolrWriter.PRE_TRANSFORMER_ROW == event) {\n      if (debugStack.peek().type == SolrWriter.START_ENTITY\n              || debugStack.peek().type == SolrWriter.START_DOC) {\n        debugStack.peek().lst.add(null, fmt.format(new Object[]{++debugStack\n                .peek().rowCount}));\n        addToNamedList(debugStack.peek().lst, row);\n        debugStack.peek().lst.add(null, LINE);\n      }\n    } else if (event == SolrWriter.ROW_END) {\n      popAllTransformers();\n    } else if (SolrWriter.END_ENTITY == event) {\n      while (debugStack.pop().type != SolrWriter.START_ENTITY)\n        ;\n    } else if (SolrWriter.END_DOC == event) {\n      while (debugStack.pop().type != SolrWriter.START_DOC)\n        ;\n    } else if (event == SolrWriter.TRANSFORMER_EXCEPTION) {\n      debugStack.push(new DebugInfo(name, event, peekStack()));\n      debugStack.peek().lst.add(\"EXCEPTION\",\n              getStacktraceString((Exception) row));\n    } else if (SolrWriter.TRANSFORMED_ROW == event) {\n      debugStack.push(new DebugInfo(name, event, peekStack()));\n      debugStack.peek().lst.add(null, LINE);\n      addToNamedList(debugStack.peek().lst, row);\n      debugStack.peek().lst.add(null, LINE);\n      if (row instanceof DataImportHandlerException) {\n        DataImportHandlerException dataImportHandlerException = (DataImportHandlerException) row;\n        dataImportHandlerException.debugged = true;\n      }\n    } else if (SolrWriter.ENTITY_META == event) {\n      popAllTransformers();\n      debugStack.peek().lst.add(name, row);\n    } else if (SolrWriter.ENTITY_EXCEPTION == event) {\n      if (row instanceof DataImportHandlerException) {\n        DataImportHandlerException dihe = (DataImportHandlerException) row;\n        if (dihe.debugged)\n          return;\n        dihe.debugged = true;\n      }\n\n      popAllTransformers();\n      debugStack.peek().lst.add(\"EXCEPTION\",\n              getStacktraceString((Exception) row));\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/DebugLogger#log(int,String,Object).mjava","pathOld":"solr/contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/DebugLogger#log(int,String,Object).mjava","sourceNew":"  public void log(int event, String name, Object row) {\n    if (event == SolrWriter.DISABLE_LOGGING) {\n      enabled = false;\n      return;\n    } else if (event == SolrWriter.ENABLE_LOGGING) {\n      enabled = true;\n      return;\n    }\n\n    if (!enabled && event != SolrWriter.START_ENTITY\n            && event != SolrWriter.END_ENTITY) {\n      return;\n    }\n\n    if (event == SolrWriter.START_DOC) {\n      debugStack.push(new DebugInfo(null, SolrWriter.START_DOC, peekStack()));\n    } else if (SolrWriter.START_ENTITY == event) {\n      debugStack\n              .push(new DebugInfo(name, SolrWriter.START_ENTITY, peekStack()));\n    } else if (SolrWriter.ENTITY_OUT == event\n            || SolrWriter.PRE_TRANSFORMER_ROW == event) {\n      if (debugStack.peek().type == SolrWriter.START_ENTITY\n              || debugStack.peek().type == SolrWriter.START_DOC) {\n        debugStack.peek().lst.add(null, fmt.format(new Object[]{++debugStack\n                .peek().rowCount}));\n        addToNamedList(debugStack.peek().lst, row);\n        debugStack.peek().lst.add(null, LINE);\n      }\n    } else if (event == SolrWriter.ROW_END) {\n      popAllTransformers();\n    } else if (SolrWriter.END_ENTITY == event) {\n      while (debugStack.pop().type != SolrWriter.START_ENTITY)\n        ;\n    } else if (SolrWriter.END_DOC == event) {\n      while (debugStack.pop().type != SolrWriter.START_DOC)\n        ;\n    } else if (event == SolrWriter.TRANSFORMER_EXCEPTION) {\n      debugStack.push(new DebugInfo(name, event, peekStack()));\n      debugStack.peek().lst.add(\"EXCEPTION\",\n              getStacktraceString((Exception) row));\n    } else if (SolrWriter.TRANSFORMED_ROW == event) {\n      debugStack.push(new DebugInfo(name, event, peekStack()));\n      debugStack.peek().lst.add(null, LINE);\n      addToNamedList(debugStack.peek().lst, row);\n      debugStack.peek().lst.add(null, LINE);\n      if (row instanceof DataImportHandlerException) {\n        DataImportHandlerException dataImportHandlerException = (DataImportHandlerException) row;\n        dataImportHandlerException.debugged = true;\n      }\n    } else if (SolrWriter.ENTITY_META == event) {\n      popAllTransformers();\n      debugStack.peek().lst.add(name, row);\n    } else if (SolrWriter.ENTITY_EXCEPTION == event) {\n      if (row instanceof DataImportHandlerException) {\n        DataImportHandlerException dihe = (DataImportHandlerException) row;\n        if (dihe.debugged)\n          return;\n        dihe.debugged = true;\n      }\n\n      popAllTransformers();\n      debugStack.peek().lst.add(\"EXCEPTION\",\n              getStacktraceString((Exception) row));\n    }\n  }\n\n","sourceOld":"  public void log(int event, String name, Object row) {\n    if (event == SolrWriter.DISABLE_LOGGING) {\n      enabled = false;\n      return;\n    } else if (event == SolrWriter.ENABLE_LOGGING) {\n      enabled = true;\n      return;\n    }\n\n    if (!enabled && event != SolrWriter.START_ENTITY\n            && event != SolrWriter.END_ENTITY) {\n      return;\n    }\n\n    if (event == SolrWriter.START_DOC) {\n      debugStack.push(new DebugInfo(null, SolrWriter.START_DOC, peekStack()));\n    } else if (SolrWriter.START_ENTITY == event) {\n      debugStack\n              .push(new DebugInfo(name, SolrWriter.START_ENTITY, peekStack()));\n    } else if (SolrWriter.ENTITY_OUT == event\n            || SolrWriter.PRE_TRANSFORMER_ROW == event) {\n      if (debugStack.peek().type == SolrWriter.START_ENTITY\n              || debugStack.peek().type == SolrWriter.START_DOC) {\n        debugStack.peek().lst.add(null, fmt.format(new Object[]{++debugStack\n                .peek().rowCount}));\n        addToNamedList(debugStack.peek().lst, row);\n        debugStack.peek().lst.add(null, LINE);\n      }\n    } else if (event == SolrWriter.ROW_END) {\n      popAllTransformers();\n    } else if (SolrWriter.END_ENTITY == event) {\n      while (debugStack.pop().type != SolrWriter.START_ENTITY)\n        ;\n    } else if (SolrWriter.END_DOC == event) {\n      while (debugStack.pop().type != SolrWriter.START_DOC)\n        ;\n    } else if (event == SolrWriter.TRANSFORMER_EXCEPTION) {\n      debugStack.push(new DebugInfo(name, event, peekStack()));\n      debugStack.peek().lst.add(\"EXCEPTION\",\n              getStacktraceString((Exception) row));\n    } else if (SolrWriter.TRANSFORMED_ROW == event) {\n      debugStack.push(new DebugInfo(name, event, peekStack()));\n      debugStack.peek().lst.add(null, LINE);\n      addToNamedList(debugStack.peek().lst, row);\n      debugStack.peek().lst.add(null, LINE);\n      if (row instanceof DataImportHandlerException) {\n        DataImportHandlerException dataImportHandlerException = (DataImportHandlerException) row;\n        dataImportHandlerException.debugged = true;\n      }\n    } else if (SolrWriter.ENTITY_META == event) {\n      popAllTransformers();\n      debugStack.peek().lst.add(name, row);\n    } else if (SolrWriter.ENTITY_EXCEPTION == event) {\n      if (row instanceof DataImportHandlerException) {\n        DataImportHandlerException dihe = (DataImportHandlerException) row;\n        if (dihe.debugged)\n          return;\n        dihe.debugged = true;\n      }\n\n      popAllTransformers();\n      debugStack.peek().lst.add(\"EXCEPTION\",\n              getStacktraceString((Exception) row));\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7a136026dd5340a1feb1e3efd8cafe390616c1d8","date":1311317263,"type":5,"author":"Noble Paul","isMerge":false,"pathNew":"solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/DebugLogger#log(DIHLogLevels,String,Object).mjava","pathOld":"solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/DebugLogger#log(int,String,Object).mjava","sourceNew":"  public void log(DIHLogLevels event, String name, Object row) {\n    if (event == DIHLogLevels.DISABLE_LOGGING) {\n      enabled = false;\n      return;\n    } else if (event == DIHLogLevels.ENABLE_LOGGING) {\n      enabled = true;\n      return;\n    }\n\n    if (!enabled && event != DIHLogLevels.START_ENTITY\n            && event != DIHLogLevels.END_ENTITY) {\n      return;\n    }\n\n    if (event == DIHLogLevels.START_DOC) {\n      debugStack.push(new DebugInfo(null, DIHLogLevels.START_DOC, peekStack()));\n    } else if (DIHLogLevels.START_ENTITY == event) {\n      debugStack\n              .push(new DebugInfo(name, DIHLogLevels.START_ENTITY, peekStack()));\n    } else if (DIHLogLevels.ENTITY_OUT == event\n            || DIHLogLevels.PRE_TRANSFORMER_ROW == event) {\n      if (debugStack.peek().type == DIHLogLevels.START_ENTITY\n              || debugStack.peek().type == DIHLogLevels.START_DOC) {\n        debugStack.peek().lst.add(null, fmt.format(new Object[]{++debugStack\n                .peek().rowCount}));\n        addToNamedList(debugStack.peek().lst, row);\n        debugStack.peek().lst.add(null, LINE);\n      }\n    } else if (event == DIHLogLevels.ROW_END) {\n      popAllTransformers();\n    } else if (DIHLogLevels.END_ENTITY == event) {\n      while (debugStack.pop().type != DIHLogLevels.START_ENTITY)\n        ;\n    } else if (DIHLogLevels.END_DOC == event) {\n      while (debugStack.pop().type != DIHLogLevels.START_DOC)\n        ;\n    } else if (event == DIHLogLevels.TRANSFORMER_EXCEPTION) {\n      debugStack.push(new DebugInfo(name, event, peekStack()));\n      debugStack.peek().lst.add(\"EXCEPTION\",\n              getStacktraceString((Exception) row));\n    } else if (DIHLogLevels.TRANSFORMED_ROW == event) {\n      debugStack.push(new DebugInfo(name, event, peekStack()));\n      debugStack.peek().lst.add(null, LINE);\n      addToNamedList(debugStack.peek().lst, row);\n      debugStack.peek().lst.add(null, LINE);\n      if (row instanceof DataImportHandlerException) {\n        DataImportHandlerException dataImportHandlerException = (DataImportHandlerException) row;\n        dataImportHandlerException.debugged = true;\n      }\n    } else if (DIHLogLevels.ENTITY_META == event) {\n      popAllTransformers();\n      debugStack.peek().lst.add(name, row);\n    } else if (DIHLogLevels.ENTITY_EXCEPTION == event) {\n      if (row instanceof DataImportHandlerException) {\n        DataImportHandlerException dihe = (DataImportHandlerException) row;\n        if (dihe.debugged)\n          return;\n        dihe.debugged = true;\n      }\n\n      popAllTransformers();\n      debugStack.peek().lst.add(\"EXCEPTION\",\n              getStacktraceString((Exception) row));\n    }\n  }\n\n","sourceOld":"  public void log(int event, String name, Object row) {\n    if (event == SolrWriter.DISABLE_LOGGING) {\n      enabled = false;\n      return;\n    } else if (event == SolrWriter.ENABLE_LOGGING) {\n      enabled = true;\n      return;\n    }\n\n    if (!enabled && event != SolrWriter.START_ENTITY\n            && event != SolrWriter.END_ENTITY) {\n      return;\n    }\n\n    if (event == SolrWriter.START_DOC) {\n      debugStack.push(new DebugInfo(null, SolrWriter.START_DOC, peekStack()));\n    } else if (SolrWriter.START_ENTITY == event) {\n      debugStack\n              .push(new DebugInfo(name, SolrWriter.START_ENTITY, peekStack()));\n    } else if (SolrWriter.ENTITY_OUT == event\n            || SolrWriter.PRE_TRANSFORMER_ROW == event) {\n      if (debugStack.peek().type == SolrWriter.START_ENTITY\n              || debugStack.peek().type == SolrWriter.START_DOC) {\n        debugStack.peek().lst.add(null, fmt.format(new Object[]{++debugStack\n                .peek().rowCount}));\n        addToNamedList(debugStack.peek().lst, row);\n        debugStack.peek().lst.add(null, LINE);\n      }\n    } else if (event == SolrWriter.ROW_END) {\n      popAllTransformers();\n    } else if (SolrWriter.END_ENTITY == event) {\n      while (debugStack.pop().type != SolrWriter.START_ENTITY)\n        ;\n    } else if (SolrWriter.END_DOC == event) {\n      while (debugStack.pop().type != SolrWriter.START_DOC)\n        ;\n    } else if (event == SolrWriter.TRANSFORMER_EXCEPTION) {\n      debugStack.push(new DebugInfo(name, event, peekStack()));\n      debugStack.peek().lst.add(\"EXCEPTION\",\n              getStacktraceString((Exception) row));\n    } else if (SolrWriter.TRANSFORMED_ROW == event) {\n      debugStack.push(new DebugInfo(name, event, peekStack()));\n      debugStack.peek().lst.add(null, LINE);\n      addToNamedList(debugStack.peek().lst, row);\n      debugStack.peek().lst.add(null, LINE);\n      if (row instanceof DataImportHandlerException) {\n        DataImportHandlerException dataImportHandlerException = (DataImportHandlerException) row;\n        dataImportHandlerException.debugged = true;\n      }\n    } else if (SolrWriter.ENTITY_META == event) {\n      popAllTransformers();\n      debugStack.peek().lst.add(name, row);\n    } else if (SolrWriter.ENTITY_EXCEPTION == event) {\n      if (row instanceof DataImportHandlerException) {\n        DataImportHandlerException dihe = (DataImportHandlerException) row;\n        if (dihe.debugged)\n          return;\n        dihe.debugged = true;\n      }\n\n      popAllTransformers();\n      debugStack.peek().lst.add(\"EXCEPTION\",\n              getStacktraceString((Exception) row));\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"c26f00b574427b55127e869b935845554afde1fa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","5128b7b3b73fedff05fdc5ea2e6be53c1020bb91"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"7a136026dd5340a1feb1e3efd8cafe390616c1d8":["c26f00b574427b55127e869b935845554afde1fa"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["7a136026dd5340a1feb1e3efd8cafe390616c1d8"]},"commit2Childs":{"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91":["c26f00b574427b55127e869b935845554afde1fa"],"c26f00b574427b55127e869b935845554afde1fa":["7a136026dd5340a1feb1e3efd8cafe390616c1d8"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["5128b7b3b73fedff05fdc5ea2e6be53c1020bb91","c26f00b574427b55127e869b935845554afde1fa"],"7a136026dd5340a1feb1e3efd8cafe390616c1d8":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}