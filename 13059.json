{"path":"lucene/spatial/src/test/org/apache/lucene/spatial/geopoint/search/TestGeoPointQuery#testPacManPolyQuery().mjava","commits":[{"id":"8a093d23e938d132b81b5f2de3d6b168afe3608e","date":1455076308,"type":1,"author":"nknize","isMerge":false,"pathNew":"lucene/spatial/src/test/org/apache/lucene/spatial/geopoint/search/TestGeoPointQuery#testPacManPolyQuery().mjava","pathOld":"lucene/spatial/src/test/org/apache/lucene/spatial/search/TestGeoPointQuery#testPacManPolyQuery().mjava","sourceNew":"  public void testPacManPolyQuery() throws Exception {\n    // pacman\n    double[] px = {0, 10, 10, 0, -8, -10, -8, 0, 10, 10, 0};\n    double[] py = {0, 5, 9, 10, 9, 0, -9, -10, -9, -5, 0};\n\n    // shape bbox\n    double xMinA = -10;\n    double xMaxA = 10;\n    double yMinA = -10;\n    double yMaxA = 10;\n\n    // candidate crosses cell\n    double xMin = 2;//-5;\n    double xMax = 11;//0.000001;\n    double yMin = -1;//0;\n    double yMax = 1;//5;\n\n    // test cell crossing poly\n    assertTrue(GeoRelationUtils.rectCrossesPolyApprox(xMin, yMin, xMax, yMax, px, py, xMinA, yMinA, xMaxA, yMaxA));\n    assertFalse(GeoRelationUtils.rectCrossesPolyApprox(-5, 0,  0.000001, 5, px, py, xMin, yMin, xMax, yMax));\n    assertTrue(GeoRelationUtils.rectWithinPolyApprox(-5, 0, -2, 5, px, py, xMin, yMin, xMax, yMax));\n  }\n\n","sourceOld":"  public void testPacManPolyQuery() throws Exception {\n    // pacman\n    double[] px = {0, 10, 10, 0, -8, -10, -8, 0, 10, 10, 0};\n    double[] py = {0, 5, 9, 10, 9, 0, -9, -10, -9, -5, 0};\n\n    // shape bbox\n    double xMinA = -10;\n    double xMaxA = 10;\n    double yMinA = -10;\n    double yMaxA = 10;\n\n    // candidate crosses cell\n    double xMin = 2;//-5;\n    double xMax = 11;//0.000001;\n    double yMin = -1;//0;\n    double yMax = 1;//5;\n\n    // test cell crossing poly\n    assertTrue(GeoRelationUtils.rectCrossesPolyApprox(xMin, yMin, xMax, yMax, px, py, xMinA, yMinA, xMaxA, yMaxA));\n    assertFalse(GeoRelationUtils.rectCrossesPolyApprox(-5, 0,  0.000001, 5, px, py, xMin, yMin, xMax, yMax));\n    assertTrue(GeoRelationUtils.rectWithinPolyApprox(-5, 0, -2, 5, px, py, xMin, yMin, xMax, yMax));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f68e65f04a6bec2d9a08a7d70811205341af74db","date":1458618250,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/spatial/src/test/org/apache/lucene/spatial/geopoint/search/TestGeoPointField#testPacManPolyQuery().mjava","pathOld":"lucene/spatial/src/test/org/apache/lucene/spatial/geopoint/search/TestGeoPointQuery#testPacManPolyQuery().mjava","sourceNew":"  public void testPacManPolyQuery() throws Exception {\n    // pacman\n    double[] px = {0, 10, 10, 0, -8, -10, -8, 0, 10, 10, 0};\n    double[] py = {0, 5, 9, 10, 9, 0, -9, -10, -9, -5, 0};\n\n    // shape bbox\n    double xMinA = -10;\n    double xMaxA = 10;\n    double yMinA = -10;\n    double yMaxA = 10;\n\n    // candidate crosses cell\n    double xMin = 2;//-5;\n    double xMax = 11;//0.000001;\n    double yMin = -1;//0;\n    double yMax = 1;//5;\n\n    // test cell crossing poly\n    assertTrue(GeoRelationUtils.rectCrossesPolyApprox(xMin, yMin, xMax, yMax, px, py, xMinA, yMinA, xMaxA, yMaxA));\n    assertFalse(GeoRelationUtils.rectCrossesPolyApprox(-5, 0,  0.000001, 5, px, py, xMin, yMin, xMax, yMax));\n    assertTrue(GeoRelationUtils.rectWithinPolyApprox(-5, 0, -2, 5, px, py, xMin, yMin, xMax, yMax));\n  }\n\n","sourceOld":"  public void testPacManPolyQuery() throws Exception {\n    // pacman\n    double[] px = {0, 10, 10, 0, -8, -10, -8, 0, 10, 10, 0};\n    double[] py = {0, 5, 9, 10, 9, 0, -9, -10, -9, -5, 0};\n\n    // shape bbox\n    double xMinA = -10;\n    double xMaxA = 10;\n    double yMinA = -10;\n    double yMaxA = 10;\n\n    // candidate crosses cell\n    double xMin = 2;//-5;\n    double xMax = 11;//0.000001;\n    double yMin = -1;//0;\n    double yMax = 1;//5;\n\n    // test cell crossing poly\n    assertTrue(GeoRelationUtils.rectCrossesPolyApprox(xMin, yMin, xMax, yMax, px, py, xMinA, yMinA, xMaxA, yMaxA));\n    assertFalse(GeoRelationUtils.rectCrossesPolyApprox(-5, 0,  0.000001, 5, px, py, xMin, yMin, xMax, yMax));\n    assertTrue(GeoRelationUtils.rectWithinPolyApprox(-5, 0, -2, 5, px, py, xMin, yMin, xMax, yMax));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f68e65f04a6bec2d9a08a7d70811205341af74db","date":1458618250,"type":6,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/spatial/src/test/org/apache/lucene/spatial/geopoint/search/TestLegacyGeoPointField#testPacManPolyQuery().mjava","pathOld":"lucene/spatial/src/test/org/apache/lucene/spatial/geopoint/search/TestGeoPointQuery#testPacManPolyQuery().mjava","sourceNew":"  public void testPacManPolyQuery() throws Exception {\n    // pacman\n    double[] px = {0, 10, 10, 0, -8, -10, -8, 0, 10, 10, 0};\n    double[] py = {0, 5, 9, 10, 9, 0, -9, -10, -9, -5, 0};\n\n    // shape bbox\n    double xMinA = -10;\n    double xMaxA = 10;\n    double yMinA = -10;\n    double yMaxA = 10;\n\n    // candidate crosses cell\n    double xMin = 2;//-5;\n    double xMax = 11;//0.000001;\n    double yMin = -1;//0;\n    double yMax = 1;//5;\n\n    // test cell crossing poly\n    assertTrue(GeoRelationUtils.rectCrossesPolyApprox(xMin, yMin, xMax, yMax, px, py, xMinA, yMinA, xMaxA, yMaxA));\n    assertFalse(GeoRelationUtils.rectCrossesPolyApprox(-5, 0,  0.000001, 5, px, py, xMin, yMin, xMax, yMax));\n    assertTrue(GeoRelationUtils.rectWithinPolyApprox(-5, 0, -2, 5, px, py, xMin, yMin, xMax, yMax));\n  }\n\n","sourceOld":"  public void testPacManPolyQuery() throws Exception {\n    // pacman\n    double[] px = {0, 10, 10, 0, -8, -10, -8, 0, 10, 10, 0};\n    double[] py = {0, 5, 9, 10, 9, 0, -9, -10, -9, -5, 0};\n\n    // shape bbox\n    double xMinA = -10;\n    double xMaxA = 10;\n    double yMinA = -10;\n    double yMaxA = 10;\n\n    // candidate crosses cell\n    double xMin = 2;//-5;\n    double xMax = 11;//0.000001;\n    double yMin = -1;//0;\n    double yMax = 1;//5;\n\n    // test cell crossing poly\n    assertTrue(GeoRelationUtils.rectCrossesPolyApprox(xMin, yMin, xMax, yMax, px, py, xMinA, yMinA, xMaxA, yMaxA));\n    assertFalse(GeoRelationUtils.rectCrossesPolyApprox(-5, 0,  0.000001, 5, px, py, xMin, yMin, xMax, yMax));\n    assertTrue(GeoRelationUtils.rectWithinPolyApprox(-5, 0, -2, 5, px, py, xMin, yMin, xMax, yMax));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"f68e65f04a6bec2d9a08a7d70811205341af74db":["8a093d23e938d132b81b5f2de3d6b168afe3608e"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"8a093d23e938d132b81b5f2de3d6b168afe3608e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["f68e65f04a6bec2d9a08a7d70811205341af74db"]},"commit2Childs":{"f68e65f04a6bec2d9a08a7d70811205341af74db":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["8a093d23e938d132b81b5f2de3d6b168afe3608e"],"8a093d23e938d132b81b5f2de3d6b168afe3608e":["f68e65f04a6bec2d9a08a7d70811205341af74db"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}