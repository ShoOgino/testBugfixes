{"path":"lucene/core/src/java/org/apache/lucene/search/BooleanQuery.BooleanWeight#scoresDocsOutOfOrder().mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/BooleanQuery.BooleanWeight#scoresDocsOutOfOrder().mjava","pathOld":"lucene/src/java/org/apache/lucene/search/BooleanQuery.BooleanWeight#scoresDocsOutOfOrder().mjava","sourceNew":"    @Override\n    public boolean scoresDocsOutOfOrder() {\n      for (BooleanClause c : clauses) {\n        if (c.isRequired()) {\n          return false; // BS2 (in-order) will be used by scorer()\n        }\n      }\n      \n      // scorer() will return an out-of-order scorer if requested.\n      return true;\n    }\n\n","sourceOld":"    @Override\n    public boolean scoresDocsOutOfOrder() {\n      for (BooleanClause c : clauses) {\n        if (c.isRequired()) {\n          return false; // BS2 (in-order) will be used by scorer()\n        }\n      }\n      \n      // scorer() will return an out-of-order scorer if requested.\n      return true;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c307d500c43658a83e788edf36022a20fa30c15b","date":1394481241,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/BooleanQuery.BooleanWeight#scoresDocsOutOfOrder().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/BooleanQuery.BooleanWeight#scoresDocsOutOfOrder().mjava","sourceNew":"    @Override\n    public boolean scoresDocsOutOfOrder() {\n      if (minNrShouldMatch > 1) {\n        // BS2 (in-order) will be used by scorer()\n        return false;\n      }\n      for (BooleanClause c : clauses) {\n        if (c.isRequired()) {\n          // BS2 (in-order) will be used by scorer()\n          return false;\n        }\n      }\n      \n      // scorer() will return an out-of-order scorer if requested.\n      return true;\n    }\n\n","sourceOld":"    @Override\n    public boolean scoresDocsOutOfOrder() {\n      for (BooleanClause c : clauses) {\n        if (c.isRequired()) {\n          return false; // BS2 (in-order) will be used by scorer()\n        }\n      }\n      \n      // scorer() will return an out-of-order scorer if requested.\n      return true;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"acf00221f44c5f08ccea014f2492b53af15ecd66","date":1394568293,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/search/BooleanQuery.BooleanWeight#scoresDocsOutOfOrder().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/BooleanQuery.BooleanWeight#scoresDocsOutOfOrder().mjava","sourceNew":"    @Override\n    public boolean scoresDocsOutOfOrder() {\n      if (minNrShouldMatch > 1) {\n        // BS2 (in-order) will be used by scorer()\n        return false;\n      }\n      for (BooleanClause c : clauses) {\n        if (c.isRequired()) {\n          // BS2 (in-order) will be used by scorer()\n          return false;\n        }\n      }\n      \n      // scorer() will return an out-of-order scorer if requested.\n      return true;\n    }\n\n","sourceOld":"    @Override\n    public boolean scoresDocsOutOfOrder() {\n      for (BooleanClause c : clauses) {\n        if (c.isRequired()) {\n          return false; // BS2 (in-order) will be used by scorer()\n        }\n      }\n      \n      // scorer() will return an out-of-order scorer if requested.\n      return true;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d9c2895bfaa94bdbd1fd5a1b1522f6310c91d240","date":1400613895,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/BooleanQuery.BooleanWeight#scoresDocsOutOfOrder().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/BooleanQuery.BooleanWeight#scoresDocsOutOfOrder().mjava","sourceNew":"    // nocommit: double-check all this\n    @Override\n    public boolean scoresDocsOutOfOrder() {\n      if (minNrShouldMatch > 1) {\n        // BS2 (in-order) will be used by scorer()\n        return false;\n      }\n      int optionalCount = 0;\n      for (BooleanClause c : clauses) {\n        if (c.isRequired()) {\n          // BS2 (in-order) will be used by scorer()\n          return false;\n        } else if (!c.isProhibited()) {\n          optionalCount++;\n        }\n      }\n      \n      // nocommit: maybe dont do this optionalCount stuff and just check minNR >= 1 instead?\n      // we do fancy things in BS2 here anyway\n      if (optionalCount == minNrShouldMatch) {\n        return false; // BS2 (in-order) will be used, as this means we have mandatory clauses\n      }\n      \n      // scorer() will return an out-of-order scorer if requested.\n      return true;\n    }\n\n","sourceOld":"    @Override\n    public boolean scoresDocsOutOfOrder() {\n      if (minNrShouldMatch > 1) {\n        // BS2 (in-order) will be used by scorer()\n        return false;\n      }\n      for (BooleanClause c : clauses) {\n        if (c.isRequired()) {\n          // BS2 (in-order) will be used by scorer()\n          return false;\n        }\n      }\n      \n      // scorer() will return an out-of-order scorer if requested.\n      return true;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2cdc8a177cc608482424e349819a116a88f53152","date":1400638515,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/BooleanQuery.BooleanWeight#scoresDocsOutOfOrder().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/BooleanQuery.BooleanWeight#scoresDocsOutOfOrder().mjava","sourceNew":"    // nocommit: double-check all this\n    @Override\n    public boolean scoresDocsOutOfOrder() {\n      if (minNrShouldMatch > 1) {\n        // BS2 (in-order) will be used by scorer()\n        return false;\n      }\n      int optionalCount = 0;\n      for (BooleanClause c : clauses) {\n        if (c.isRequired()) {\n          // BS2 (in-order) will be used by scorer()\n          return false;\n        } else if (!c.isProhibited()) {\n          optionalCount++;\n        }\n      }\n      \n      if (optionalCount == minNrShouldMatch) {\n        return false; // BS2 (in-order) will be used, as this means conjunction\n      }\n      \n      // scorer() will return an out-of-order scorer if requested.\n      return true;\n    }\n\n","sourceOld":"    // nocommit: double-check all this\n    @Override\n    public boolean scoresDocsOutOfOrder() {\n      if (minNrShouldMatch > 1) {\n        // BS2 (in-order) will be used by scorer()\n        return false;\n      }\n      int optionalCount = 0;\n      for (BooleanClause c : clauses) {\n        if (c.isRequired()) {\n          // BS2 (in-order) will be used by scorer()\n          return false;\n        } else if (!c.isProhibited()) {\n          optionalCount++;\n        }\n      }\n      \n      // nocommit: maybe dont do this optionalCount stuff and just check minNR >= 1 instead?\n      // we do fancy things in BS2 here anyway\n      if (optionalCount == minNrShouldMatch) {\n        return false; // BS2 (in-order) will be used, as this means we have mandatory clauses\n      }\n      \n      // scorer() will return an out-of-order scorer if requested.\n      return true;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"060a4836b54f1e7e79ea6493cda5dc3030d3fb0e","date":1400639845,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/BooleanQuery.BooleanWeight#scoresDocsOutOfOrder().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/BooleanQuery.BooleanWeight#scoresDocsOutOfOrder().mjava","sourceNew":"    @Override\n    public boolean scoresDocsOutOfOrder() {\n      if (minNrShouldMatch > 1) {\n        // BS2 (in-order) will be used by scorer()\n        return false;\n      }\n      int optionalCount = 0;\n      for (BooleanClause c : clauses) {\n        if (c.isRequired()) {\n          // BS2 (in-order) will be used by scorer()\n          return false;\n        } else if (!c.isProhibited()) {\n          optionalCount++;\n        }\n      }\n      \n      if (optionalCount == minNrShouldMatch) {\n        return false; // BS2 (in-order) will be used, as this means conjunction\n      }\n      \n      // scorer() will return an out-of-order scorer if requested.\n      return true;\n    }\n\n","sourceOld":"    // nocommit: double-check all this\n    @Override\n    public boolean scoresDocsOutOfOrder() {\n      if (minNrShouldMatch > 1) {\n        // BS2 (in-order) will be used by scorer()\n        return false;\n      }\n      int optionalCount = 0;\n      for (BooleanClause c : clauses) {\n        if (c.isRequired()) {\n          // BS2 (in-order) will be used by scorer()\n          return false;\n        } else if (!c.isProhibited()) {\n          optionalCount++;\n        }\n      }\n      \n      if (optionalCount == minNrShouldMatch) {\n        return false; // BS2 (in-order) will be used, as this means conjunction\n      }\n      \n      // scorer() will return an out-of-order scorer if requested.\n      return true;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"38fa8e2c4105a7dd15d7e9260afa3b41a560d51d","date":1400696679,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/search/BooleanQuery.BooleanWeight#scoresDocsOutOfOrder().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/BooleanQuery.BooleanWeight#scoresDocsOutOfOrder().mjava","sourceNew":"    @Override\n    public boolean scoresDocsOutOfOrder() {\n      if (minNrShouldMatch > 1) {\n        // BS2 (in-order) will be used by scorer()\n        return false;\n      }\n      int optionalCount = 0;\n      for (BooleanClause c : clauses) {\n        if (c.isRequired()) {\n          // BS2 (in-order) will be used by scorer()\n          return false;\n        } else if (!c.isProhibited()) {\n          optionalCount++;\n        }\n      }\n      \n      if (optionalCount == minNrShouldMatch) {\n        return false; // BS2 (in-order) will be used, as this means conjunction\n      }\n      \n      // scorer() will return an out-of-order scorer if requested.\n      return true;\n    }\n\n","sourceOld":"    @Override\n    public boolean scoresDocsOutOfOrder() {\n      if (minNrShouldMatch > 1) {\n        // BS2 (in-order) will be used by scorer()\n        return false;\n      }\n      for (BooleanClause c : clauses) {\n        if (c.isRequired()) {\n          // BS2 (in-order) will be used by scorer()\n          return false;\n        }\n      }\n      \n      // scorer() will return an out-of-order scorer if requested.\n      return true;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b7605579001505896d48b07160075a5c8b8e128e","date":1400758727,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/search/BooleanQuery.BooleanWeight#scoresDocsOutOfOrder().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/BooleanQuery.BooleanWeight#scoresDocsOutOfOrder().mjava","sourceNew":"    @Override\n    public boolean scoresDocsOutOfOrder() {\n      if (minNrShouldMatch > 1) {\n        // BS2 (in-order) will be used by scorer()\n        return false;\n      }\n      int optionalCount = 0;\n      for (BooleanClause c : clauses) {\n        if (c.isRequired()) {\n          // BS2 (in-order) will be used by scorer()\n          return false;\n        } else if (!c.isProhibited()) {\n          optionalCount++;\n        }\n      }\n      \n      if (optionalCount == minNrShouldMatch) {\n        return false; // BS2 (in-order) will be used, as this means conjunction\n      }\n      \n      // scorer() will return an out-of-order scorer if requested.\n      return true;\n    }\n\n","sourceOld":"    @Override\n    public boolean scoresDocsOutOfOrder() {\n      if (minNrShouldMatch > 1) {\n        // BS2 (in-order) will be used by scorer()\n        return false;\n      }\n      for (BooleanClause c : clauses) {\n        if (c.isRequired()) {\n          // BS2 (in-order) will be used by scorer()\n          return false;\n        }\n      }\n      \n      // scorer() will return an out-of-order scorer if requested.\n      return true;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f582f18c13d4852b01d4fe0a0196432c5c6f2b7f","date":1421314520,"type":4,"author":"Adrien Grand","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/search/BooleanQuery.BooleanWeight#scoresDocsOutOfOrder().mjava","sourceNew":null,"sourceOld":"    @Override\n    public boolean scoresDocsOutOfOrder() {\n      if (minNrShouldMatch > 1) {\n        // BS2 (in-order) will be used by scorer()\n        return false;\n      }\n      int optionalCount = 0;\n      for (BooleanClause c : clauses) {\n        if (c.isRequired()) {\n          // BS2 (in-order) will be used by scorer()\n          return false;\n        } else if (!c.isProhibited()) {\n          optionalCount++;\n        }\n      }\n      \n      if (optionalCount == minNrShouldMatch) {\n        return false; // BS2 (in-order) will be used, as this means conjunction\n      }\n      \n      // scorer() will return an out-of-order scorer if requested.\n      return true;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"c307d500c43658a83e788edf36022a20fa30c15b":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"d9c2895bfaa94bdbd1fd5a1b1522f6310c91d240":["acf00221f44c5f08ccea014f2492b53af15ecd66"],"f582f18c13d4852b01d4fe0a0196432c5c6f2b7f":["38fa8e2c4105a7dd15d7e9260afa3b41a560d51d"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"2cdc8a177cc608482424e349819a116a88f53152":["d9c2895bfaa94bdbd1fd5a1b1522f6310c91d240"],"b7605579001505896d48b07160075a5c8b8e128e":["acf00221f44c5f08ccea014f2492b53af15ecd66","38fa8e2c4105a7dd15d7e9260afa3b41a560d51d"],"acf00221f44c5f08ccea014f2492b53af15ecd66":["3a119bbc8703c10faa329ec201c654b3a35a1e3e","c307d500c43658a83e788edf36022a20fa30c15b"],"060a4836b54f1e7e79ea6493cda5dc3030d3fb0e":["2cdc8a177cc608482424e349819a116a88f53152"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["f582f18c13d4852b01d4fe0a0196432c5c6f2b7f"],"38fa8e2c4105a7dd15d7e9260afa3b41a560d51d":["acf00221f44c5f08ccea014f2492b53af15ecd66","060a4836b54f1e7e79ea6493cda5dc3030d3fb0e"]},"commit2Childs":{"c307d500c43658a83e788edf36022a20fa30c15b":["acf00221f44c5f08ccea014f2492b53af15ecd66"],"d9c2895bfaa94bdbd1fd5a1b1522f6310c91d240":["2cdc8a177cc608482424e349819a116a88f53152"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["c307d500c43658a83e788edf36022a20fa30c15b","acf00221f44c5f08ccea014f2492b53af15ecd66"],"f582f18c13d4852b01d4fe0a0196432c5c6f2b7f":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"2cdc8a177cc608482424e349819a116a88f53152":["060a4836b54f1e7e79ea6493cda5dc3030d3fb0e"],"b7605579001505896d48b07160075a5c8b8e128e":[],"acf00221f44c5f08ccea014f2492b53af15ecd66":["d9c2895bfaa94bdbd1fd5a1b1522f6310c91d240","b7605579001505896d48b07160075a5c8b8e128e","38fa8e2c4105a7dd15d7e9260afa3b41a560d51d"],"060a4836b54f1e7e79ea6493cda5dc3030d3fb0e":["38fa8e2c4105a7dd15d7e9260afa3b41a560d51d"],"38fa8e2c4105a7dd15d7e9260afa3b41a560d51d":["f582f18c13d4852b01d4fe0a0196432c5c6f2b7f","b7605579001505896d48b07160075a5c8b8e128e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["b7605579001505896d48b07160075a5c8b8e128e","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}