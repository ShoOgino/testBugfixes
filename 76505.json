{"path":"contrib/analyzers/src/test/org/apache/lucene/analysis/payloads/DelimitedPayloadTokenFilterTest#assertTermEquals(String,TokenStream,TermAttribute,PayloadAttribute,byte[]).mjava","commits":[{"id":"7d17e89cf704a29ea5d627f86a66bb0ad595ee2c","date":1244845561,"type":0,"author":"Grant Ingersoll","isMerge":false,"pathNew":"contrib/analyzers/src/test/org/apache/lucene/analysis/payloads/DelimitedPayloadTokenFilterTest#assertTermEquals(String,TokenStream,TermAttribute,PayloadAttribute,byte[]).mjava","pathOld":"/dev/null","sourceNew":"  void assertTermEquals(String expected, TokenStream stream, TermAttribute termAtt, PayloadAttribute payAtt, byte[] expectPay) throws Exception {\n    assertTrue(stream.incrementToken());\n    assertEquals(expected, termAtt.term());\n    Payload payload = payAtt.getPayload();\n    if (payload != null) {\n      assertTrue(payload.length() + \" does not equal: \" + expectPay.length, payload.length() == expectPay.length);\n      for (int i = 0; i < expectPay.length; i++) {\n        assertTrue(expectPay[i] + \" does not equal: \" + payload.byteAt(i), expectPay[i] == payload.byteAt(i));\n\n      }\n    } else {\n      assertTrue(\"expectPay is not null and it should be\", expectPay == null);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"dd745d580729e528151b58aeda87ef82f1b95c9b","date":1248369082,"type":5,"author":"Simon Willnauer","isMerge":false,"pathNew":"contrib/analyzers/common/src/test/org/apache/lucene/analysis/payloads/DelimitedPayloadTokenFilterTest#assertTermEquals(String,TokenStream,TermAttribute,PayloadAttribute,byte[]).mjava","pathOld":"contrib/analyzers/src/test/org/apache/lucene/analysis/payloads/DelimitedPayloadTokenFilterTest#assertTermEquals(String,TokenStream,TermAttribute,PayloadAttribute,byte[]).mjava","sourceNew":"  void assertTermEquals(String expected, TokenStream stream, TermAttribute termAtt, PayloadAttribute payAtt, byte[] expectPay) throws Exception {\n    assertTrue(stream.incrementToken());\n    assertEquals(expected, termAtt.term());\n    Payload payload = payAtt.getPayload();\n    if (payload != null) {\n      assertTrue(payload.length() + \" does not equal: \" + expectPay.length, payload.length() == expectPay.length);\n      for (int i = 0; i < expectPay.length; i++) {\n        assertTrue(expectPay[i] + \" does not equal: \" + payload.byteAt(i), expectPay[i] == payload.byteAt(i));\n\n      }\n    } else {\n      assertTrue(\"expectPay is not null and it should be\", expectPay == null);\n    }\n  }\n\n","sourceOld":"  void assertTermEquals(String expected, TokenStream stream, TermAttribute termAtt, PayloadAttribute payAtt, byte[] expectPay) throws Exception {\n    assertTrue(stream.incrementToken());\n    assertEquals(expected, termAtt.term());\n    Payload payload = payAtt.getPayload();\n    if (payload != null) {\n      assertTrue(payload.length() + \" does not equal: \" + expectPay.length, payload.length() == expectPay.length);\n      for (int i = 0; i < expectPay.length; i++) {\n        assertTrue(expectPay[i] + \" does not equal: \" + payload.byteAt(i), expectPay[i] == payload.byteAt(i));\n\n      }\n    } else {\n      assertTrue(\"expectPay is not null and it should be\", expectPay == null);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"dd745d580729e528151b58aeda87ef82f1b95c9b":["7d17e89cf704a29ea5d627f86a66bb0ad595ee2c"],"7d17e89cf704a29ea5d627f86a66bb0ad595ee2c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["dd745d580729e528151b58aeda87ef82f1b95c9b"]},"commit2Childs":{"dd745d580729e528151b58aeda87ef82f1b95c9b":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"7d17e89cf704a29ea5d627f86a66bb0ad595ee2c":["dd745d580729e528151b58aeda87ef82f1b95c9b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["7d17e89cf704a29ea5d627f86a66bb0ad595ee2c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}