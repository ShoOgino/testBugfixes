{"path":"lucene/sandbox/src/test/org/apache/lucene/sandbox/postingshighlight/TestPostingsHighlighterRanking#newSentence(Random,int).mjava","commits":[{"id":"43ff047e697f5b71d06c7eec1406226951c59b80","date":1356561472,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/sandbox/src/test/org/apache/lucene/sandbox/postingshighlight/TestPostingsHighlighterRanking#newSentence(Random,int).mjava","pathOld":"/dev/null","sourceNew":"  /** \n   * returns a new random sentence, up to maxSentenceLength \"words\" in length.\n   * each word is a single character (a-z). The first one is capitalized.\n   */\n  private String newSentence(Random r, int maxSentenceLength) {\n    StringBuilder sb = new StringBuilder();\n    int numElements = _TestUtil.nextInt(r, 1, maxSentenceLength);\n    for (int i = 0; i < numElements; i++) {\n      if (sb.length() > 0) {\n        sb.append(' ');\n        sb.append((char)_TestUtil.nextInt(r, 'a', 'z'));\n      } else {\n        // capitalize the first word to help breakiterator\n        sb.append((char)_TestUtil.nextInt(r, 'A', 'Z'));\n      }\n    }\n    sb.append(\". \"); // finalize sentence\n    return sb.toString();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4b3d16cba9355e2e97962eb1c441bbd0b6735c15","date":1357426290,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/highlighter/src/test/org/apache/lucene/search/postingshighlight/TestPostingsHighlighterRanking#newSentence(Random,int).mjava","pathOld":"lucene/sandbox/src/test/org/apache/lucene/sandbox/postingshighlight/TestPostingsHighlighterRanking#newSentence(Random,int).mjava","sourceNew":"  /** \n   * returns a new random sentence, up to maxSentenceLength \"words\" in length.\n   * each word is a single character (a-z). The first one is capitalized.\n   */\n  private String newSentence(Random r, int maxSentenceLength) {\n    StringBuilder sb = new StringBuilder();\n    int numElements = _TestUtil.nextInt(r, 1, maxSentenceLength);\n    for (int i = 0; i < numElements; i++) {\n      if (sb.length() > 0) {\n        sb.append(' ');\n        sb.append((char)_TestUtil.nextInt(r, 'a', 'z'));\n      } else {\n        // capitalize the first word to help breakiterator\n        sb.append((char)_TestUtil.nextInt(r, 'A', 'Z'));\n      }\n    }\n    sb.append(\". \"); // finalize sentence\n    return sb.toString();\n  }\n\n","sourceOld":"  /** \n   * returns a new random sentence, up to maxSentenceLength \"words\" in length.\n   * each word is a single character (a-z). The first one is capitalized.\n   */\n  private String newSentence(Random r, int maxSentenceLength) {\n    StringBuilder sb = new StringBuilder();\n    int numElements = _TestUtil.nextInt(r, 1, maxSentenceLength);\n    for (int i = 0; i < numElements; i++) {\n      if (sb.length() > 0) {\n        sb.append(' ');\n        sb.append((char)_TestUtil.nextInt(r, 'a', 'z'));\n      } else {\n        // capitalize the first word to help breakiterator\n        sb.append((char)_TestUtil.nextInt(r, 'A', 'Z'));\n      }\n    }\n    sb.append(\". \"); // finalize sentence\n    return sb.toString();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"4b3d16cba9355e2e97962eb1c441bbd0b6735c15":["43ff047e697f5b71d06c7eec1406226951c59b80"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"43ff047e697f5b71d06c7eec1406226951c59b80":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["4b3d16cba9355e2e97962eb1c441bbd0b6735c15"]},"commit2Childs":{"4b3d16cba9355e2e97962eb1c441bbd0b6735c15":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["43ff047e697f5b71d06c7eec1406226951c59b80"],"43ff047e697f5b71d06c7eec1406226951c59b80":["4b3d16cba9355e2e97962eb1c441bbd0b6735c15"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}