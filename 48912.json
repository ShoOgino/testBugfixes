{"path":"lucene/core/src/java/org/apache/lucene/index/DefaultIndexingChain#fillStoredFields(int).mjava","commits":[{"id":"52c7e49be259508735752fba88085255014a6ecf","date":1398706273,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/DefaultIndexingChain#fillStoredFields(int).mjava","pathOld":"/dev/null","sourceNew":"  /** Catch up for all docs before us that had no stored\n   *  fields, or hit non-aborting exceptions before writing\n   *  stored fields. */\n  private void fillStoredFields(int docID) throws IOException {\n    while (lastStoredDocID < docID) {\n      storedFieldsWriter.startDocument();\n      lastStoredDocID++;\n      storedFieldsWriter.finishDocument();\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3394716f52b34ab259ad5247e7595d9f9db6e935","date":1398791921,"type":0,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/DefaultIndexingChain#fillStoredFields(int).mjava","pathOld":"/dev/null","sourceNew":"  /** Catch up for all docs before us that had no stored\n   *  fields, or hit non-aborting exceptions before writing\n   *  stored fields. */\n  private void fillStoredFields(int docID) throws IOException {\n    while (lastStoredDocID < docID) {\n      storedFieldsWriter.startDocument();\n      lastStoredDocID++;\n      storedFieldsWriter.finishDocument();\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c0cd85fde84cb318b4dc97710dcf15e2959a1bbe","date":1398844771,"type":0,"author":"Dawid Weiss","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/DefaultIndexingChain#fillStoredFields(int).mjava","pathOld":"/dev/null","sourceNew":"  /** Catch up for all docs before us that had no stored\n   *  fields, or hit non-aborting exceptions before writing\n   *  stored fields. */\n  private void fillStoredFields(int docID) throws IOException {\n    while (lastStoredDocID < docID) {\n      storedFieldsWriter.startDocument();\n      lastStoredDocID++;\n      storedFieldsWriter.finishDocument();\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"96eb3a8dfc7a77ec7e482c2c00272d0b428441b6","date":1398951151,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/DefaultIndexingChain#fillStoredFields(int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/DefaultIndexingChain#fillStoredFields(int).mjava","sourceNew":"  /** Catch up for all docs before us that had no stored\n   *  fields, or hit non-aborting exceptions before writing\n   *  stored fields. */\n  private void fillStoredFields(int docID) throws IOException {\n    while (lastStoredDocID < docID) {\n      startStoredFields();\n      finishStoredFields();\n    }\n  }\n\n","sourceOld":"  /** Catch up for all docs before us that had no stored\n   *  fields, or hit non-aborting exceptions before writing\n   *  stored fields. */\n  private void fillStoredFields(int docID) throws IOException {\n    while (lastStoredDocID < docID) {\n      storedFieldsWriter.startDocument();\n      lastStoredDocID++;\n      storedFieldsWriter.finishDocument();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9299079153fd7895bf3cf6835cf7019af2ba89b3","date":1417813477,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/DefaultIndexingChain#fillStoredFields(int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/DefaultIndexingChain#fillStoredFields(int).mjava","sourceNew":"  /** Catch up for all docs before us that had no stored\n   *  fields, or hit non-aborting exceptions before writing\n   *  stored fields. */\n  private void fillStoredFields(int docID) throws IOException, AbortingException {\n    while (lastStoredDocID < docID) {\n      startStoredFields();\n      finishStoredFields();\n    }\n  }\n\n","sourceOld":"  /** Catch up for all docs before us that had no stored\n   *  fields, or hit non-aborting exceptions before writing\n   *  stored fields. */\n  private void fillStoredFields(int docID) throws IOException {\n    while (lastStoredDocID < docID) {\n      startStoredFields();\n      finishStoredFields();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"86a0a50d2d14aaee1e635bbec914468551f7f9a2","date":1482234306,"type":4,"author":"Mike McCandless","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/index/DefaultIndexingChain#fillStoredFields(int).mjava","sourceNew":null,"sourceOld":"  /** Catch up for all docs before us that had no stored\n   *  fields, or hit non-aborting exceptions before writing\n   *  stored fields. */\n  private void fillStoredFields(int docID) throws IOException, AbortingException {\n    while (lastStoredDocID < docID) {\n      startStoredFields();\n      finishStoredFields();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5acd68c5f07f7ee604c2eeffe801f4a2d7a1a5bf","date":1482251961,"type":4,"author":"Kevin Risden","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/index/DefaultIndexingChain#fillStoredFields(int).mjava","sourceNew":null,"sourceOld":"  /** Catch up for all docs before us that had no stored\n   *  fields, or hit non-aborting exceptions before writing\n   *  stored fields. */\n  private void fillStoredFields(int docID) throws IOException, AbortingException {\n    while (lastStoredDocID < docID) {\n      startStoredFields();\n      finishStoredFields();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3394716f52b34ab259ad5247e7595d9f9db6e935":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","52c7e49be259508735752fba88085255014a6ecf"],"c0cd85fde84cb318b4dc97710dcf15e2959a1bbe":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","3394716f52b34ab259ad5247e7595d9f9db6e935"],"5acd68c5f07f7ee604c2eeffe801f4a2d7a1a5bf":["9299079153fd7895bf3cf6835cf7019af2ba89b3","86a0a50d2d14aaee1e635bbec914468551f7f9a2"],"96eb3a8dfc7a77ec7e482c2c00272d0b428441b6":["3394716f52b34ab259ad5247e7595d9f9db6e935"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"9299079153fd7895bf3cf6835cf7019af2ba89b3":["96eb3a8dfc7a77ec7e482c2c00272d0b428441b6"],"86a0a50d2d14aaee1e635bbec914468551f7f9a2":["9299079153fd7895bf3cf6835cf7019af2ba89b3"],"52c7e49be259508735752fba88085255014a6ecf":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["86a0a50d2d14aaee1e635bbec914468551f7f9a2"]},"commit2Childs":{"3394716f52b34ab259ad5247e7595d9f9db6e935":["c0cd85fde84cb318b4dc97710dcf15e2959a1bbe","96eb3a8dfc7a77ec7e482c2c00272d0b428441b6"],"c0cd85fde84cb318b4dc97710dcf15e2959a1bbe":[],"5acd68c5f07f7ee604c2eeffe801f4a2d7a1a5bf":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3394716f52b34ab259ad5247e7595d9f9db6e935","c0cd85fde84cb318b4dc97710dcf15e2959a1bbe","52c7e49be259508735752fba88085255014a6ecf"],"96eb3a8dfc7a77ec7e482c2c00272d0b428441b6":["9299079153fd7895bf3cf6835cf7019af2ba89b3"],"9299079153fd7895bf3cf6835cf7019af2ba89b3":["5acd68c5f07f7ee604c2eeffe801f4a2d7a1a5bf","86a0a50d2d14aaee1e635bbec914468551f7f9a2"],"52c7e49be259508735752fba88085255014a6ecf":["3394716f52b34ab259ad5247e7595d9f9db6e935"],"86a0a50d2d14aaee1e635bbec914468551f7f9a2":["5acd68c5f07f7ee604c2eeffe801f4a2d7a1a5bf","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["c0cd85fde84cb318b4dc97710dcf15e2959a1bbe","5acd68c5f07f7ee604c2eeffe801f4a2d7a1a5bf","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}