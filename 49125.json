{"path":"solr/contrib/dataimporthandler/src/test/java/org/apache/solr/handler/dataimport/TestXPathRecordReader#testElems2LevelWithAttrib().mjava","commits":[{"id":"fcd6cfe8abcb5337766abe79cabfff7f9c1f6ead","date":1286986267,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"solr/contrib/dataimporthandler/src/test/java/org/apache/solr/handler/dataimport/TestXPathRecordReader#testElems2LevelWithAttrib().mjava","pathOld":"solr/contrib/dataimporthandler/src/test/java/org/apache/solr/handler/dataimport/TestXPathRecordReader#elems2LevelWithAttrib().mjava","sourceNew":"  @Test\n  public void testElems2LevelWithAttrib() {\n    String xml = \"<root>\\n\\t<a>\\n\\t   <b k=\\\"x\\\">\\n\"\n            + \"\\t                        <x>x0</x>\\n\"\n            + \"\\t                        <y>y0</y>\\n\"\n            + \"\\t                        </b>\\n\"\n            + \"\\t                     <b k=\\\"y\\\">\\n\"\n            + \"\\t                        <x>x1</x>\\n\"\n            + \"\\t                        <y>y1</y>\\n\"\n            + \"\\t                        </b>\\n\"\n            + \"\\t                </a>\\n\"\n            + \"\\t           <a>\\n\\t   <b>\\n\"\n            + \"\\t                        <x>x3</x>\\n\"\n            + \"\\t                        </b>\\n\"\n            + \"\\t                     <b>\\n\"\n            + \"\\t                     <y>y4</y>\\n\"\n            + \"\\t                        </b>\\n\"\n            + \"\\t               </a>\\n\"\n            + \"</root>\";\n    XPathRecordReader rr = new XPathRecordReader(\"/root/a\");\n    rr.addField(\"x\", \"/root/a/b[@k]/x\", true);\n    rr.addField(\"y\", \"/root/a/b[@k]/y\", true);\n    List<Map<String, Object>> l = rr.getAllRecords(new StringReader(xml));\n    assertEquals(2, l.size());\n    assertEquals(2, ((List) l.get(0).get(\"x\")).size());\n    assertEquals(2, ((List) l.get(0).get(\"y\")).size());\n    assertEquals(0, l.get(1).size());\n  }\n\n","sourceOld":"  @Test\n  public void elems2LevelWithAttrib() {\n    String xml = \"<root>\\n\\t<a>\\n\\t   <b k=\\\"x\\\">\\n\"\n            + \"\\t                        <x>x0</x>\\n\"\n            + \"\\t                        <y>y0</y>\\n\"\n            + \"\\t                        </b>\\n\"\n            + \"\\t                     <b k=\\\"y\\\">\\n\"\n            + \"\\t                        <x>x1</x>\\n\"\n            + \"\\t                        <y>y1</y>\\n\"\n            + \"\\t                        </b>\\n\"\n            + \"\\t                </a>\\n\"\n            + \"\\t           <a>\\n\\t   <b>\\n\"\n            + \"\\t                        <x>x3</x>\\n\"\n            + \"\\t                        </b>\\n\"\n            + \"\\t                     <b>\\n\"\n            + \"\\t                     <y>y4</y>\\n\"\n            + \"\\t                        </b>\\n\"\n            + \"\\t               </a>\\n\"\n            + \"</root>\";\n    XPathRecordReader rr = new XPathRecordReader(\"/root/a\");\n    rr.addField(\"x\", \"/root/a/b[@k]/x\", true);\n    rr.addField(\"y\", \"/root/a/b[@k]/y\", true);\n    List<Map<String, Object>> l = rr.getAllRecords(new StringReader(xml));\n    Assert.assertEquals(2, l.size());\n    Assert.assertEquals(2, ((List) l.get(0).get(\"x\")).size());\n    Assert.assertEquals(2, ((List) l.get(0).get(\"y\")).size());\n    Assert.assertEquals(0, l.get(1).size());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4ecea1664e8617d82eca3b8055a3c37cb4da8511","date":1287578668,"type":1,"author":"Simon Willnauer","isMerge":true,"pathNew":"solr/contrib/dataimporthandler/src/test/java/org/apache/solr/handler/dataimport/TestXPathRecordReader#testElems2LevelWithAttrib().mjava","pathOld":"solr/contrib/dataimporthandler/src/test/java/org/apache/solr/handler/dataimport/TestXPathRecordReader#elems2LevelWithAttrib().mjava","sourceNew":"  @Test\n  public void testElems2LevelWithAttrib() {\n    String xml = \"<root>\\n\\t<a>\\n\\t   <b k=\\\"x\\\">\\n\"\n            + \"\\t                        <x>x0</x>\\n\"\n            + \"\\t                        <y>y0</y>\\n\"\n            + \"\\t                        </b>\\n\"\n            + \"\\t                     <b k=\\\"y\\\">\\n\"\n            + \"\\t                        <x>x1</x>\\n\"\n            + \"\\t                        <y>y1</y>\\n\"\n            + \"\\t                        </b>\\n\"\n            + \"\\t                </a>\\n\"\n            + \"\\t           <a>\\n\\t   <b>\\n\"\n            + \"\\t                        <x>x3</x>\\n\"\n            + \"\\t                        </b>\\n\"\n            + \"\\t                     <b>\\n\"\n            + \"\\t                     <y>y4</y>\\n\"\n            + \"\\t                        </b>\\n\"\n            + \"\\t               </a>\\n\"\n            + \"</root>\";\n    XPathRecordReader rr = new XPathRecordReader(\"/root/a\");\n    rr.addField(\"x\", \"/root/a/b[@k]/x\", true);\n    rr.addField(\"y\", \"/root/a/b[@k]/y\", true);\n    List<Map<String, Object>> l = rr.getAllRecords(new StringReader(xml));\n    assertEquals(2, l.size());\n    assertEquals(2, ((List) l.get(0).get(\"x\")).size());\n    assertEquals(2, ((List) l.get(0).get(\"y\")).size());\n    assertEquals(0, l.get(1).size());\n  }\n\n","sourceOld":"  @Test\n  public void elems2LevelWithAttrib() {\n    String xml = \"<root>\\n\\t<a>\\n\\t   <b k=\\\"x\\\">\\n\"\n            + \"\\t                        <x>x0</x>\\n\"\n            + \"\\t                        <y>y0</y>\\n\"\n            + \"\\t                        </b>\\n\"\n            + \"\\t                     <b k=\\\"y\\\">\\n\"\n            + \"\\t                        <x>x1</x>\\n\"\n            + \"\\t                        <y>y1</y>\\n\"\n            + \"\\t                        </b>\\n\"\n            + \"\\t                </a>\\n\"\n            + \"\\t           <a>\\n\\t   <b>\\n\"\n            + \"\\t                        <x>x3</x>\\n\"\n            + \"\\t                        </b>\\n\"\n            + \"\\t                     <b>\\n\"\n            + \"\\t                     <y>y4</y>\\n\"\n            + \"\\t                        </b>\\n\"\n            + \"\\t               </a>\\n\"\n            + \"</root>\";\n    XPathRecordReader rr = new XPathRecordReader(\"/root/a\");\n    rr.addField(\"x\", \"/root/a/b[@k]/x\", true);\n    rr.addField(\"y\", \"/root/a/b[@k]/y\", true);\n    List<Map<String, Object>> l = rr.getAllRecords(new StringReader(xml));\n    Assert.assertEquals(2, l.size());\n    Assert.assertEquals(2, ((List) l.get(0).get(\"x\")).size());\n    Assert.assertEquals(2, ((List) l.get(0).get(\"y\")).size());\n    Assert.assertEquals(0, l.get(1).size());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ef68eed598a8494abdcad4ef076d62b12c4d89f4","date":1289177911,"type":3,"author":"Koji Sekiguchi","isMerge":false,"pathNew":"solr/contrib/dataimporthandler/src/test/java/org/apache/solr/handler/dataimport/TestXPathRecordReader#testElems2LevelWithAttrib().mjava","pathOld":"solr/contrib/dataimporthandler/src/test/java/org/apache/solr/handler/dataimport/TestXPathRecordReader#testElems2LevelWithAttrib().mjava","sourceNew":"  @Test\n  public void testElems2LevelWithAttrib() {\n    String xml = \"<root>\\n\\t<a>\\n\\t   <b k=\\\"x\\\">\\n\"\n            + \"\\t                        <x>x0</x>\\n\"\n            + \"\\t                        <y></y>\\n\"  // empty\n            + \"\\t                        </b>\\n\"\n            + \"\\t                     <b k=\\\"y\\\">\\n\"\n            + \"\\t                        <x></x>\\n\"  // empty\n            + \"\\t                        <y>y1</y>\\n\"\n            + \"\\t                        </b>\\n\"\n            + \"\\t                     <b k=\\\"z\\\">\\n\"\n            + \"\\t                        <x>x2</x>\\n\"\n            + \"\\t                        <y>y2</y>\\n\"\n            + \"\\t                        </b>\\n\"\n            + \"\\t                </a>\\n\"\n            + \"\\t           <a>\\n\\t   <b>\\n\"\n            + \"\\t                        <x>x3</x>\\n\"\n            + \"\\t                        </b>\\n\"\n            + \"\\t                     <b>\\n\"\n            + \"\\t                     <y>y4</y>\\n\"\n            + \"\\t                        </b>\\n\"\n            + \"\\t               </a>\\n\"\n            + \"</root>\";\n    XPathRecordReader rr = new XPathRecordReader(\"/root/a\");\n    rr.addField(\"x\", \"/root/a/b[@k]/x\", true);\n    rr.addField(\"y\", \"/root/a/b[@k]/y\", true);\n    List<Map<String, Object>> l = rr.getAllRecords(new StringReader(xml));\n    assertEquals(2, l.size());\n    assertEquals(3, ((List) l.get(0).get(\"x\")).size());\n    assertEquals(3, ((List) l.get(0).get(\"y\")).size());\n    assertEquals(\"x0\", ((List) l.get(0).get(\"x\")).get(0));\n    assertEquals(\"\", ((List) l.get(0).get(\"y\")).get(0));\n    assertEquals(\"\", ((List) l.get(0).get(\"x\")).get(1));\n    assertEquals(\"y1\", ((List) l.get(0).get(\"y\")).get(1));\n    assertEquals(\"x2\", ((List) l.get(0).get(\"x\")).get(2));\n    assertEquals(\"y2\", ((List) l.get(0).get(\"y\")).get(2));\n    assertEquals(0, l.get(1).size());\n  }\n\n","sourceOld":"  @Test\n  public void testElems2LevelWithAttrib() {\n    String xml = \"<root>\\n\\t<a>\\n\\t   <b k=\\\"x\\\">\\n\"\n            + \"\\t                        <x>x0</x>\\n\"\n            + \"\\t                        <y>y0</y>\\n\"\n            + \"\\t                        </b>\\n\"\n            + \"\\t                     <b k=\\\"y\\\">\\n\"\n            + \"\\t                        <x>x1</x>\\n\"\n            + \"\\t                        <y>y1</y>\\n\"\n            + \"\\t                        </b>\\n\"\n            + \"\\t                </a>\\n\"\n            + \"\\t           <a>\\n\\t   <b>\\n\"\n            + \"\\t                        <x>x3</x>\\n\"\n            + \"\\t                        </b>\\n\"\n            + \"\\t                     <b>\\n\"\n            + \"\\t                     <y>y4</y>\\n\"\n            + \"\\t                        </b>\\n\"\n            + \"\\t               </a>\\n\"\n            + \"</root>\";\n    XPathRecordReader rr = new XPathRecordReader(\"/root/a\");\n    rr.addField(\"x\", \"/root/a/b[@k]/x\", true);\n    rr.addField(\"y\", \"/root/a/b[@k]/y\", true);\n    List<Map<String, Object>> l = rr.getAllRecords(new StringReader(xml));\n    assertEquals(2, l.size());\n    assertEquals(2, ((List) l.get(0).get(\"x\")).size());\n    assertEquals(2, ((List) l.get(0).get(\"y\")).size());\n    assertEquals(0, l.get(1).size());\n  }\n\n","bugFix":["7f2a93a28913071a0b713be1d4b8a1181388d550","fcd6cfe8abcb5337766abe79cabfff7f9c1f6ead"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"85a883878c0af761245ab048babc63d099f835f3","date":1289553330,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"solr/contrib/dataimporthandler/src/test/java/org/apache/solr/handler/dataimport/TestXPathRecordReader#testElems2LevelWithAttrib().mjava","pathOld":"solr/contrib/dataimporthandler/src/test/java/org/apache/solr/handler/dataimport/TestXPathRecordReader#testElems2LevelWithAttrib().mjava","sourceNew":"  @Test\n  public void testElems2LevelWithAttrib() {\n    String xml = \"<root>\\n\\t<a>\\n\\t   <b k=\\\"x\\\">\\n\"\n            + \"\\t                        <x>x0</x>\\n\"\n            + \"\\t                        <y></y>\\n\"  // empty\n            + \"\\t                        </b>\\n\"\n            + \"\\t                     <b k=\\\"y\\\">\\n\"\n            + \"\\t                        <x></x>\\n\"  // empty\n            + \"\\t                        <y>y1</y>\\n\"\n            + \"\\t                        </b>\\n\"\n            + \"\\t                     <b k=\\\"z\\\">\\n\"\n            + \"\\t                        <x>x2</x>\\n\"\n            + \"\\t                        <y>y2</y>\\n\"\n            + \"\\t                        </b>\\n\"\n            + \"\\t                </a>\\n\"\n            + \"\\t           <a>\\n\\t   <b>\\n\"\n            + \"\\t                        <x>x3</x>\\n\"\n            + \"\\t                        </b>\\n\"\n            + \"\\t                     <b>\\n\"\n            + \"\\t                     <y>y4</y>\\n\"\n            + \"\\t                        </b>\\n\"\n            + \"\\t               </a>\\n\"\n            + \"</root>\";\n    XPathRecordReader rr = new XPathRecordReader(\"/root/a\");\n    rr.addField(\"x\", \"/root/a/b[@k]/x\", true);\n    rr.addField(\"y\", \"/root/a/b[@k]/y\", true);\n    List<Map<String, Object>> l = rr.getAllRecords(new StringReader(xml));\n    assertEquals(2, l.size());\n    assertEquals(3, ((List) l.get(0).get(\"x\")).size());\n    assertEquals(3, ((List) l.get(0).get(\"y\")).size());\n    assertEquals(\"x0\", ((List) l.get(0).get(\"x\")).get(0));\n    assertEquals(\"\", ((List) l.get(0).get(\"y\")).get(0));\n    assertEquals(\"\", ((List) l.get(0).get(\"x\")).get(1));\n    assertEquals(\"y1\", ((List) l.get(0).get(\"y\")).get(1));\n    assertEquals(\"x2\", ((List) l.get(0).get(\"x\")).get(2));\n    assertEquals(\"y2\", ((List) l.get(0).get(\"y\")).get(2));\n    assertEquals(0, l.get(1).size());\n  }\n\n","sourceOld":"  @Test\n  public void testElems2LevelWithAttrib() {\n    String xml = \"<root>\\n\\t<a>\\n\\t   <b k=\\\"x\\\">\\n\"\n            + \"\\t                        <x>x0</x>\\n\"\n            + \"\\t                        <y>y0</y>\\n\"\n            + \"\\t                        </b>\\n\"\n            + \"\\t                     <b k=\\\"y\\\">\\n\"\n            + \"\\t                        <x>x1</x>\\n\"\n            + \"\\t                        <y>y1</y>\\n\"\n            + \"\\t                        </b>\\n\"\n            + \"\\t                </a>\\n\"\n            + \"\\t           <a>\\n\\t   <b>\\n\"\n            + \"\\t                        <x>x3</x>\\n\"\n            + \"\\t                        </b>\\n\"\n            + \"\\t                     <b>\\n\"\n            + \"\\t                     <y>y4</y>\\n\"\n            + \"\\t                        </b>\\n\"\n            + \"\\t               </a>\\n\"\n            + \"</root>\";\n    XPathRecordReader rr = new XPathRecordReader(\"/root/a\");\n    rr.addField(\"x\", \"/root/a/b[@k]/x\", true);\n    rr.addField(\"y\", \"/root/a/b[@k]/y\", true);\n    List<Map<String, Object>> l = rr.getAllRecords(new StringReader(xml));\n    assertEquals(2, l.size());\n    assertEquals(2, ((List) l.get(0).get(\"x\")).size());\n    assertEquals(2, ((List) l.get(0).get(\"y\")).size());\n    assertEquals(0, l.get(1).size());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","date":1292920096,"type":0,"author":"Michael Busch","isMerge":true,"pathNew":"solr/contrib/dataimporthandler/src/test/java/org/apache/solr/handler/dataimport/TestXPathRecordReader#testElems2LevelWithAttrib().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testElems2LevelWithAttrib() {\n    String xml = \"<root>\\n\\t<a>\\n\\t   <b k=\\\"x\\\">\\n\"\n            + \"\\t                        <x>x0</x>\\n\"\n            + \"\\t                        <y></y>\\n\"  // empty\n            + \"\\t                        </b>\\n\"\n            + \"\\t                     <b k=\\\"y\\\">\\n\"\n            + \"\\t                        <x></x>\\n\"  // empty\n            + \"\\t                        <y>y1</y>\\n\"\n            + \"\\t                        </b>\\n\"\n            + \"\\t                     <b k=\\\"z\\\">\\n\"\n            + \"\\t                        <x>x2</x>\\n\"\n            + \"\\t                        <y>y2</y>\\n\"\n            + \"\\t                        </b>\\n\"\n            + \"\\t                </a>\\n\"\n            + \"\\t           <a>\\n\\t   <b>\\n\"\n            + \"\\t                        <x>x3</x>\\n\"\n            + \"\\t                        </b>\\n\"\n            + \"\\t                     <b>\\n\"\n            + \"\\t                     <y>y4</y>\\n\"\n            + \"\\t                        </b>\\n\"\n            + \"\\t               </a>\\n\"\n            + \"</root>\";\n    XPathRecordReader rr = new XPathRecordReader(\"/root/a\");\n    rr.addField(\"x\", \"/root/a/b[@k]/x\", true);\n    rr.addField(\"y\", \"/root/a/b[@k]/y\", true);\n    List<Map<String, Object>> l = rr.getAllRecords(new StringReader(xml));\n    assertEquals(2, l.size());\n    assertEquals(3, ((List) l.get(0).get(\"x\")).size());\n    assertEquals(3, ((List) l.get(0).get(\"y\")).size());\n    assertEquals(\"x0\", ((List) l.get(0).get(\"x\")).get(0));\n    assertEquals(\"\", ((List) l.get(0).get(\"y\")).get(0));\n    assertEquals(\"\", ((List) l.get(0).get(\"x\")).get(1));\n    assertEquals(\"y1\", ((List) l.get(0).get(\"y\")).get(1));\n    assertEquals(\"x2\", ((List) l.get(0).get(\"x\")).get(2));\n    assertEquals(\"y2\", ((List) l.get(0).get(\"y\")).get(2));\n    assertEquals(0, l.get(1).size());\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91","date":1306767085,"type":5,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/TestXPathRecordReader#testElems2LevelWithAttrib().mjava","pathOld":"solr/contrib/dataimporthandler/src/test/java/org/apache/solr/handler/dataimport/TestXPathRecordReader#testElems2LevelWithAttrib().mjava","sourceNew":"  @Test\n  public void testElems2LevelWithAttrib() {\n    String xml = \"<root>\\n\\t<a>\\n\\t   <b k=\\\"x\\\">\\n\"\n            + \"\\t                        <x>x0</x>\\n\"\n            + \"\\t                        <y></y>\\n\"  // empty\n            + \"\\t                        </b>\\n\"\n            + \"\\t                     <b k=\\\"y\\\">\\n\"\n            + \"\\t                        <x></x>\\n\"  // empty\n            + \"\\t                        <y>y1</y>\\n\"\n            + \"\\t                        </b>\\n\"\n            + \"\\t                     <b k=\\\"z\\\">\\n\"\n            + \"\\t                        <x>x2</x>\\n\"\n            + \"\\t                        <y>y2</y>\\n\"\n            + \"\\t                        </b>\\n\"\n            + \"\\t                </a>\\n\"\n            + \"\\t           <a>\\n\\t   <b>\\n\"\n            + \"\\t                        <x>x3</x>\\n\"\n            + \"\\t                        </b>\\n\"\n            + \"\\t                     <b>\\n\"\n            + \"\\t                     <y>y4</y>\\n\"\n            + \"\\t                        </b>\\n\"\n            + \"\\t               </a>\\n\"\n            + \"</root>\";\n    XPathRecordReader rr = new XPathRecordReader(\"/root/a\");\n    rr.addField(\"x\", \"/root/a/b[@k]/x\", true);\n    rr.addField(\"y\", \"/root/a/b[@k]/y\", true);\n    List<Map<String, Object>> l = rr.getAllRecords(new StringReader(xml));\n    assertEquals(2, l.size());\n    assertEquals(3, ((List) l.get(0).get(\"x\")).size());\n    assertEquals(3, ((List) l.get(0).get(\"y\")).size());\n    assertEquals(\"x0\", ((List) l.get(0).get(\"x\")).get(0));\n    assertEquals(\"\", ((List) l.get(0).get(\"y\")).get(0));\n    assertEquals(\"\", ((List) l.get(0).get(\"x\")).get(1));\n    assertEquals(\"y1\", ((List) l.get(0).get(\"y\")).get(1));\n    assertEquals(\"x2\", ((List) l.get(0).get(\"x\")).get(2));\n    assertEquals(\"y2\", ((List) l.get(0).get(\"y\")).get(2));\n    assertEquals(0, l.get(1).size());\n  }\n\n","sourceOld":"  @Test\n  public void testElems2LevelWithAttrib() {\n    String xml = \"<root>\\n\\t<a>\\n\\t   <b k=\\\"x\\\">\\n\"\n            + \"\\t                        <x>x0</x>\\n\"\n            + \"\\t                        <y></y>\\n\"  // empty\n            + \"\\t                        </b>\\n\"\n            + \"\\t                     <b k=\\\"y\\\">\\n\"\n            + \"\\t                        <x></x>\\n\"  // empty\n            + \"\\t                        <y>y1</y>\\n\"\n            + \"\\t                        </b>\\n\"\n            + \"\\t                     <b k=\\\"z\\\">\\n\"\n            + \"\\t                        <x>x2</x>\\n\"\n            + \"\\t                        <y>y2</y>\\n\"\n            + \"\\t                        </b>\\n\"\n            + \"\\t                </a>\\n\"\n            + \"\\t           <a>\\n\\t   <b>\\n\"\n            + \"\\t                        <x>x3</x>\\n\"\n            + \"\\t                        </b>\\n\"\n            + \"\\t                     <b>\\n\"\n            + \"\\t                     <y>y4</y>\\n\"\n            + \"\\t                        </b>\\n\"\n            + \"\\t               </a>\\n\"\n            + \"</root>\";\n    XPathRecordReader rr = new XPathRecordReader(\"/root/a\");\n    rr.addField(\"x\", \"/root/a/b[@k]/x\", true);\n    rr.addField(\"y\", \"/root/a/b[@k]/y\", true);\n    List<Map<String, Object>> l = rr.getAllRecords(new StringReader(xml));\n    assertEquals(2, l.size());\n    assertEquals(3, ((List) l.get(0).get(\"x\")).size());\n    assertEquals(3, ((List) l.get(0).get(\"y\")).size());\n    assertEquals(\"x0\", ((List) l.get(0).get(\"x\")).get(0));\n    assertEquals(\"\", ((List) l.get(0).get(\"y\")).get(0));\n    assertEquals(\"\", ((List) l.get(0).get(\"x\")).get(1));\n    assertEquals(\"y1\", ((List) l.get(0).get(\"y\")).get(1));\n    assertEquals(\"x2\", ((List) l.get(0).get(\"x\")).get(2));\n    assertEquals(\"y2\", ((List) l.get(0).get(\"y\")).get(2));\n    assertEquals(0, l.get(1).size());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":5,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/TestXPathRecordReader#testElems2LevelWithAttrib().mjava","pathOld":"solr/contrib/dataimporthandler/src/test/java/org/apache/solr/handler/dataimport/TestXPathRecordReader#testElems2LevelWithAttrib().mjava","sourceNew":"  @Test\n  public void testElems2LevelWithAttrib() {\n    String xml = \"<root>\\n\\t<a>\\n\\t   <b k=\\\"x\\\">\\n\"\n            + \"\\t                        <x>x0</x>\\n\"\n            + \"\\t                        <y></y>\\n\"  // empty\n            + \"\\t                        </b>\\n\"\n            + \"\\t                     <b k=\\\"y\\\">\\n\"\n            + \"\\t                        <x></x>\\n\"  // empty\n            + \"\\t                        <y>y1</y>\\n\"\n            + \"\\t                        </b>\\n\"\n            + \"\\t                     <b k=\\\"z\\\">\\n\"\n            + \"\\t                        <x>x2</x>\\n\"\n            + \"\\t                        <y>y2</y>\\n\"\n            + \"\\t                        </b>\\n\"\n            + \"\\t                </a>\\n\"\n            + \"\\t           <a>\\n\\t   <b>\\n\"\n            + \"\\t                        <x>x3</x>\\n\"\n            + \"\\t                        </b>\\n\"\n            + \"\\t                     <b>\\n\"\n            + \"\\t                     <y>y4</y>\\n\"\n            + \"\\t                        </b>\\n\"\n            + \"\\t               </a>\\n\"\n            + \"</root>\";\n    XPathRecordReader rr = new XPathRecordReader(\"/root/a\");\n    rr.addField(\"x\", \"/root/a/b[@k]/x\", true);\n    rr.addField(\"y\", \"/root/a/b[@k]/y\", true);\n    List<Map<String, Object>> l = rr.getAllRecords(new StringReader(xml));\n    assertEquals(2, l.size());\n    assertEquals(3, ((List) l.get(0).get(\"x\")).size());\n    assertEquals(3, ((List) l.get(0).get(\"y\")).size());\n    assertEquals(\"x0\", ((List) l.get(0).get(\"x\")).get(0));\n    assertEquals(\"\", ((List) l.get(0).get(\"y\")).get(0));\n    assertEquals(\"\", ((List) l.get(0).get(\"x\")).get(1));\n    assertEquals(\"y1\", ((List) l.get(0).get(\"y\")).get(1));\n    assertEquals(\"x2\", ((List) l.get(0).get(\"x\")).get(2));\n    assertEquals(\"y2\", ((List) l.get(0).get(\"y\")).get(2));\n    assertEquals(0, l.get(1).size());\n  }\n\n","sourceOld":"  @Test\n  public void testElems2LevelWithAttrib() {\n    String xml = \"<root>\\n\\t<a>\\n\\t   <b k=\\\"x\\\">\\n\"\n            + \"\\t                        <x>x0</x>\\n\"\n            + \"\\t                        <y></y>\\n\"  // empty\n            + \"\\t                        </b>\\n\"\n            + \"\\t                     <b k=\\\"y\\\">\\n\"\n            + \"\\t                        <x></x>\\n\"  // empty\n            + \"\\t                        <y>y1</y>\\n\"\n            + \"\\t                        </b>\\n\"\n            + \"\\t                     <b k=\\\"z\\\">\\n\"\n            + \"\\t                        <x>x2</x>\\n\"\n            + \"\\t                        <y>y2</y>\\n\"\n            + \"\\t                        </b>\\n\"\n            + \"\\t                </a>\\n\"\n            + \"\\t           <a>\\n\\t   <b>\\n\"\n            + \"\\t                        <x>x3</x>\\n\"\n            + \"\\t                        </b>\\n\"\n            + \"\\t                     <b>\\n\"\n            + \"\\t                     <y>y4</y>\\n\"\n            + \"\\t                        </b>\\n\"\n            + \"\\t               </a>\\n\"\n            + \"</root>\";\n    XPathRecordReader rr = new XPathRecordReader(\"/root/a\");\n    rr.addField(\"x\", \"/root/a/b[@k]/x\", true);\n    rr.addField(\"y\", \"/root/a/b[@k]/y\", true);\n    List<Map<String, Object>> l = rr.getAllRecords(new StringReader(xml));\n    assertEquals(2, l.size());\n    assertEquals(3, ((List) l.get(0).get(\"x\")).size());\n    assertEquals(3, ((List) l.get(0).get(\"y\")).size());\n    assertEquals(\"x0\", ((List) l.get(0).get(\"x\")).get(0));\n    assertEquals(\"\", ((List) l.get(0).get(\"y\")).get(0));\n    assertEquals(\"\", ((List) l.get(0).get(\"x\")).get(1));\n    assertEquals(\"y1\", ((List) l.get(0).get(\"y\")).get(1));\n    assertEquals(\"x2\", ((List) l.get(0).get(\"x\")).get(2));\n    assertEquals(\"y2\", ((List) l.get(0).get(\"y\")).get(2));\n    assertEquals(0, l.get(1).size());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91":["ef68eed598a8494abdcad4ef076d62b12c4d89f4","ef68eed598a8494abdcad4ef076d62b12c4d89f4"],"c26f00b574427b55127e869b935845554afde1fa":["ef68eed598a8494abdcad4ef076d62b12c4d89f4","5128b7b3b73fedff05fdc5ea2e6be53c1020bb91"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"85a883878c0af761245ab048babc63d099f835f3":["4ecea1664e8617d82eca3b8055a3c37cb4da8511","ef68eed598a8494abdcad4ef076d62b12c4d89f4"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","ef68eed598a8494abdcad4ef076d62b12c4d89f4"],"ef68eed598a8494abdcad4ef076d62b12c4d89f4":["fcd6cfe8abcb5337766abe79cabfff7f9c1f6ead"],"fcd6cfe8abcb5337766abe79cabfff7f9c1f6ead":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"4ecea1664e8617d82eca3b8055a3c37cb4da8511":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","fcd6cfe8abcb5337766abe79cabfff7f9c1f6ead"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["c26f00b574427b55127e869b935845554afde1fa"]},"commit2Childs":{"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91":["c26f00b574427b55127e869b935845554afde1fa"],"c26f00b574427b55127e869b935845554afde1fa":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","fcd6cfe8abcb5337766abe79cabfff7f9c1f6ead","4ecea1664e8617d82eca3b8055a3c37cb4da8511"],"85a883878c0af761245ab048babc63d099f835f3":[],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":[],"ef68eed598a8494abdcad4ef076d62b12c4d89f4":["5128b7b3b73fedff05fdc5ea2e6be53c1020bb91","c26f00b574427b55127e869b935845554afde1fa","85a883878c0af761245ab048babc63d099f835f3","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a"],"4ecea1664e8617d82eca3b8055a3c37cb4da8511":["85a883878c0af761245ab048babc63d099f835f3"],"fcd6cfe8abcb5337766abe79cabfff7f9c1f6ead":["ef68eed598a8494abdcad4ef076d62b12c4d89f4","4ecea1664e8617d82eca3b8055a3c37cb4da8511"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["85a883878c0af761245ab048babc63d099f835f3","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}