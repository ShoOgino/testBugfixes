{"path":"lucene/core/src/test/org/apache/lucene/util/fst/TestFstDirect#buildFST(List[String],boolean).mjava","commits":[{"id":"ae67e1f82a53594208ca929f382ee861dad3d7a8","date":1557134375,"type":0,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/util/fst/TestFstDirect#buildFST(List[String],boolean).mjava","pathOld":"/dev/null","sourceNew":"  private FST<Object> buildFST(List<String> words, boolean useDirectAddressing) throws Exception {\n    long start = System.nanoTime();\n    final Outputs<Object> outputs = NoOutputs.getSingleton();\n    final Builder<Object> b = new Builder<>(FST.INPUT_TYPE.BYTE1, 0, 0, true, true, Integer.MAX_VALUE, outputs, true, 15, useDirectAddressing);\n\n    for (String word : words) {\n      b.add(Util.toIntsRef(new BytesRef(word), new IntsRefBuilder()), outputs.getNoOutput());\n    }\n    FST<Object> fst = b.finish();\n    long t = System.nanoTime();\n    printf(\"Built FST of %d bytes in %d ms\", fst.ramBytesUsed(), nsToMs(t - start));\n    return fst;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"59a1204a92958bea883656169000a87a6c55c2d0","date":1562106073,"type":5,"author":"Michael Sokolov","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/util/fst/TestFstDirect#buildFST(List[String]).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/util/fst/TestFstDirect#buildFST(List[String],boolean).mjava","sourceNew":"  private FST<Object> buildFST(List<String> words) throws Exception {\n    long start = System.nanoTime();\n    final Outputs<Object> outputs = NoOutputs.getSingleton();\n    final Builder<Object> b = new Builder<>(FST.INPUT_TYPE.BYTE1, 0, 0, true, true, Integer.MAX_VALUE, outputs, true, 15);\n\n    for (String word : words) {\n      b.add(Util.toIntsRef(new BytesRef(word), new IntsRefBuilder()), outputs.getNoOutput());\n    }\n    FST<Object> fst = b.finish();\n    long t = System.nanoTime();\n    printf(\"Built FST of %d bytes in %d ms\", fst.ramBytesUsed(), nsToMs(t - start));\n    return fst;\n  }\n\n","sourceOld":"  private FST<Object> buildFST(List<String> words, boolean useDirectAddressing) throws Exception {\n    long start = System.nanoTime();\n    final Outputs<Object> outputs = NoOutputs.getSingleton();\n    final Builder<Object> b = new Builder<>(FST.INPUT_TYPE.BYTE1, 0, 0, true, true, Integer.MAX_VALUE, outputs, true, 15, useDirectAddressing);\n\n    for (String word : words) {\n      b.add(Util.toIntsRef(new BytesRef(word), new IntsRefBuilder()), outputs.getNoOutput());\n    }\n    FST<Object> fst = b.finish();\n    long t = System.nanoTime();\n    printf(\"Built FST of %d bytes in %d ms\", fst.ramBytesUsed(), nsToMs(t - start));\n    return fst;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"59a1204a92958bea883656169000a87a6c55c2d0":["ae67e1f82a53594208ca929f382ee861dad3d7a8"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"ae67e1f82a53594208ca929f382ee861dad3d7a8":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["59a1204a92958bea883656169000a87a6c55c2d0"]},"commit2Childs":{"59a1204a92958bea883656169000a87a6c55c2d0":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["ae67e1f82a53594208ca929f382ee861dad3d7a8"],"ae67e1f82a53594208ca929f382ee861dad3d7a8":["59a1204a92958bea883656169000a87a6c55c2d0"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}