{"path":"src/java/org/apache/lucene/index/IndexReader#commit(Map[String,String]).mjava","commits":[{"id":"f011f01db72fa6f556a9a0843944ecee2de4aaa8","date":1255806907,"type":1,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/IndexReader#commit(Map[String,String]).mjava","pathOld":"src/java/org/apache/lucene/index/IndexReader#commit(Map).mjava","sourceNew":"  /**\n   * Commit changes resulting from delete, undeleteAll, or\n   * setNorm operations\n   *\n   * If an exception is hit, then either no changes or all\n   * changes will have been committed to the index\n   * (transactional semantics).\n   * @throws IOException if there is a low-level IO error\n   */\n  protected final synchronized void commit(Map<String, String> commitUserData) throws IOException {\n    if (hasChanges) {\n      doCommit(commitUserData);\n    }\n    hasChanges = false;\n  }\n\n","sourceOld":"  /**\n   * Commit changes resulting from delete, undeleteAll, or\n   * setNorm operations\n   *\n   * If an exception is hit, then either no changes or all\n   * changes will have been committed to the index\n   * (transactional semantics).\n   * @throws IOException if there is a low-level IO error\n   */\n  protected final synchronized void commit(Map commitUserData) throws IOException {\n    if (hasChanges) {\n      doCommit(commitUserData);\n    }\n    hasChanges = false;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"66013fbe33472e75d156962188d0547a0f32b3ca","date":1257628332,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/IndexReader#commit(Map[String,String]).mjava","pathOld":"src/java/org/apache/lucene/index/IndexReader#commit(Map[String,String]).mjava","sourceNew":"  /**\n   * Commit changes resulting from delete, undeleteAll, or\n   * setNorm operations\n   *\n   * If an exception is hit, then either no changes or all\n   * changes will have been committed to the index\n   * (transactional semantics).\n   * @throws IOException if there is a low-level IO error\n   */\n  public final synchronized void commit(Map<String, String> commitUserData) throws IOException {\n    if (hasChanges) {\n      doCommit(commitUserData);\n    }\n    hasChanges = false;\n  }\n\n","sourceOld":"  /**\n   * Commit changes resulting from delete, undeleteAll, or\n   * setNorm operations\n   *\n   * If an exception is hit, then either no changes or all\n   * changes will have been committed to the index\n   * (transactional semantics).\n   * @throws IOException if there is a low-level IO error\n   */\n  protected final synchronized void commit(Map<String, String> commitUserData) throws IOException {\n    if (hasChanges) {\n      doCommit(commitUserData);\n    }\n    hasChanges = false;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/IndexReader#commit(Map[String,String]).mjava","pathOld":"src/java/org/apache/lucene/index/IndexReader#commit(Map[String,String]).mjava","sourceNew":"  /**\n   * Commit changes resulting from delete, undeleteAll, or\n   * setNorm operations\n   *\n   * If an exception is hit, then either no changes or all\n   * changes will have been committed to the index\n   * (transactional semantics).\n   * @throws IOException if there is a low-level IO error\n   */\n  public final synchronized void commit(Map<String, String> commitUserData) throws IOException {\n    if (hasChanges) {\n      doCommit(commitUserData);\n    }\n    hasChanges = false;\n  }\n\n","sourceOld":"  /**\n   * Commit changes resulting from delete, undeleteAll, or\n   * setNorm operations\n   *\n   * If an exception is hit, then either no changes or all\n   * changes will have been committed to the index\n   * (transactional semantics).\n   * @throws IOException if there is a low-level IO error\n   */\n  public final synchronized void commit(Map<String, String> commitUserData) throws IOException {\n    if (hasChanges) {\n      doCommit(commitUserData);\n    }\n    hasChanges = false;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"f011f01db72fa6f556a9a0843944ecee2de4aaa8":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"66013fbe33472e75d156962188d0547a0f32b3ca":["f011f01db72fa6f556a9a0843944ecee2de4aaa8"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["66013fbe33472e75d156962188d0547a0f32b3ca"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["f011f01db72fa6f556a9a0843944ecee2de4aaa8"],"f011f01db72fa6f556a9a0843944ecee2de4aaa8":["66013fbe33472e75d156962188d0547a0f32b3ca"],"66013fbe33472e75d156962188d0547a0f32b3ca":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}