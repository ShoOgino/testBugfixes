{"path":"lucene/misc/src/java/org/apache/lucene/index/SortingMergePolicy#isSorted(LeafReader).mjava","commits":[{"id":"d17901785875f5d523c1f729cd7898d2ab907c69","date":1419959847,"type":1,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/misc/src/java/org/apache/lucene/index/SortingMergePolicy#isSorted(LeafReader).mjava","pathOld":"lucene/misc/src/java/org/apache/lucene/index/SortingMergePolicy#isSorted(LeafReader,Sort).mjava","sourceNew":"  /** Returns {@code true} if the given {@code reader} is sorted by the\n   *  {@code sort} order of this {@link SortingMergePolicy}. */\n  public boolean isSorted(LeafReader reader) {\n    String description = getSortDescription(reader);\n    if (description != null && description.equals(sort.toString())) {\n      return true;\n    }\n    return false;\n  }\n\n","sourceOld":"  /** Returns {@code true} if the given {@code reader} is sorted by the specified {@code sort}. */\n  public static boolean isSorted(LeafReader reader, Sort sort) {\n    String description = getSortDescription(reader);\n    if (description != null && description.equals(sort.toString())) {\n      return true;\n    }\n    return false;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5732fca7cb88bd0841ccc6f8c8901b9cc1a7ce76","date":1435865633,"type":5,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/misc/src/java/org/apache/lucene/index/SortingMergePolicy#isSorted(LeafReader,Sort).mjava","pathOld":"lucene/misc/src/java/org/apache/lucene/index/SortingMergePolicy#isSorted(LeafReader).mjava","sourceNew":"  /** Returns {@code true} if the given {@code reader} is sorted by the\n   *  {@code sort} given. Typically the given {@code sort} would be the\n   *  {@link SortingMergePolicy#getSort()} order of a {@link SortingMergePolicy}. */\n  public static boolean isSorted(LeafReader reader, Sort sort) {\n    String description = getSortDescription(reader);\n    if (description != null && description.equals(sort.toString())) {\n      return true;\n    }\n    return false;\n  }\n\n","sourceOld":"  /** Returns {@code true} if the given {@code reader} is sorted by the\n   *  {@code sort} order of this {@link SortingMergePolicy}. */\n  public boolean isSorted(LeafReader reader) {\n    String description = getSortDescription(reader);\n    if (description != null && description.equals(sort.toString())) {\n      return true;\n    }\n    return false;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"d17901785875f5d523c1f729cd7898d2ab907c69":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"5732fca7cb88bd0841ccc6f8c8901b9cc1a7ce76":["d17901785875f5d523c1f729cd7898d2ab907c69"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["5732fca7cb88bd0841ccc6f8c8901b9cc1a7ce76"]},"commit2Childs":{"d17901785875f5d523c1f729cd7898d2ab907c69":["5732fca7cb88bd0841ccc6f8c8901b9cc1a7ce76"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["d17901785875f5d523c1f729cd7898d2ab907c69"],"5732fca7cb88bd0841ccc6f8c8901b9cc1a7ce76":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}