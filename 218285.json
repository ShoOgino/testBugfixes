{"path":"backwards/src/java/org/apache/lucene/search/spans/SpanNotQuery#rewrite(IndexReader).mjava","commits":[{"id":"480d01e5b0ef8efb136d51670fec297ae5ae2c9c","date":1268821447,"type":0,"author":"Uwe Schindler","isMerge":false,"pathNew":"backwards/src/java/org/apache/lucene/search/spans/SpanNotQuery#rewrite(IndexReader).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public Query rewrite(IndexReader reader) throws IOException {\n    SpanNotQuery clone = null;\n\n    SpanQuery rewrittenInclude = (SpanQuery) include.rewrite(reader);\n    if (rewrittenInclude != include) {\n      clone = (SpanNotQuery) this.clone();\n      clone.include = rewrittenInclude;\n    }\n    SpanQuery rewrittenExclude = (SpanQuery) exclude.rewrite(reader);\n    if (rewrittenExclude != exclude) {\n      if (clone == null) clone = (SpanNotQuery) this.clone();\n      clone.exclude = rewrittenExclude;\n    }\n\n    if (clone != null) {\n      return clone;                        // some clauses rewrote\n    } else {\n      return this;                         // no clauses rewrote\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/backwards/src/java/org/apache/lucene/search/spans/SpanNotQuery#rewrite(IndexReader).mjava","pathOld":"backwards/src/java/org/apache/lucene/search/spans/SpanNotQuery#rewrite(IndexReader).mjava","sourceNew":"  @Override\n  public Query rewrite(IndexReader reader) throws IOException {\n    SpanNotQuery clone = null;\n\n    SpanQuery rewrittenInclude = (SpanQuery) include.rewrite(reader);\n    if (rewrittenInclude != include) {\n      clone = (SpanNotQuery) this.clone();\n      clone.include = rewrittenInclude;\n    }\n    SpanQuery rewrittenExclude = (SpanQuery) exclude.rewrite(reader);\n    if (rewrittenExclude != exclude) {\n      if (clone == null) clone = (SpanNotQuery) this.clone();\n      clone.exclude = rewrittenExclude;\n    }\n\n    if (clone != null) {\n      return clone;                        // some clauses rewrote\n    } else {\n      return this;                         // no clauses rewrote\n    }\n  }\n\n","sourceOld":"  @Override\n  public Query rewrite(IndexReader reader) throws IOException {\n    SpanNotQuery clone = null;\n\n    SpanQuery rewrittenInclude = (SpanQuery) include.rewrite(reader);\n    if (rewrittenInclude != include) {\n      clone = (SpanNotQuery) this.clone();\n      clone.include = rewrittenInclude;\n    }\n    SpanQuery rewrittenExclude = (SpanQuery) exclude.rewrite(reader);\n    if (rewrittenExclude != exclude) {\n      if (clone == null) clone = (SpanNotQuery) this.clone();\n      clone.exclude = rewrittenExclude;\n    }\n\n    if (clone != null) {\n      return clone;                        // some clauses rewrote\n    } else {\n      return this;                         // no clauses rewrote\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"480d01e5b0ef8efb136d51670fec297ae5ae2c9c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["480d01e5b0ef8efb136d51670fec297ae5ae2c9c"]},"commit2Childs":{"480d01e5b0ef8efb136d51670fec297ae5ae2c9c":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["480d01e5b0ef8efb136d51670fec297ae5ae2c9c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}