{"path":"lucene/core/src/java/org/apache/lucene/search/DisjunctionMaxScorer#freq(int,int,int).mjava","commits":[{"id":"ea8268d5f00bb25a4ea1d0bac6e2ffe238712c45","date":1342645458,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/DisjunctionMaxScorer#freq(int,int,int).mjava","pathOld":"/dev/null","sourceNew":"  // Recursively iterate all subScorers that generated last doc computing sum and max\n  private int freq(int root, int size, int doc) throws IOException {\n    int freq = 0;\n    if (root < size && subScorers[root].docID() == doc) {\n      freq++;\n      freq += freq((root<<1)+1, size, doc);\n      freq += freq((root<<1)+2, size, doc);\n    }\n    return freq;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fe33227f6805edab2036cbb80645cc4e2d1fa424","date":1342713534,"type":0,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/search/DisjunctionMaxScorer#freq(int,int,int).mjava","pathOld":"/dev/null","sourceNew":"  // Recursively iterate all subScorers that generated last doc computing sum and max\n  private int freq(int root, int size, int doc) throws IOException {\n    int freq = 0;\n    if (root < size && subScorers[root].docID() == doc) {\n      freq++;\n      freq += freq((root<<1)+1, size, doc);\n      freq += freq((root<<1)+2, size, doc);\n    }\n    return freq;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"aba371508186796cc6151d8223a5b4e16d02e26e","date":1343474871,"type":0,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/search/DisjunctionMaxScorer#freq(int,int,int).mjava","pathOld":"/dev/null","sourceNew":"  // Recursively iterate all subScorers that generated last doc computing sum and max\n  private int freq(int root, int size, int doc) throws IOException {\n    int freq = 0;\n    if (root < size && subScorers[root].docID() == doc) {\n      freq++;\n      freq += freq((root<<1)+1, size, doc);\n      freq += freq((root<<1)+2, size, doc);\n    }\n    return freq;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0e354c63cdcc974a17c9f8531cecc001229c0952","date":1365702197,"type":4,"author":"Robert Muir","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/search/DisjunctionMaxScorer#freq(int,int,int).mjava","sourceNew":null,"sourceOld":"  // Recursively iterate all subScorers that generated last doc computing sum and max\n  private int freq(int root, int size, int doc) throws IOException {\n    int freq = 0;\n    if (root < size && subScorers[root].docID() == doc) {\n      freq++;\n      freq += freq((root<<1)+1, size, doc);\n      freq += freq((root<<1)+2, size, doc);\n    }\n    return freq;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"aba371508186796cc6151d8223a5b4e16d02e26e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","ea8268d5f00bb25a4ea1d0bac6e2ffe238712c45"],"ea8268d5f00bb25a4ea1d0bac6e2ffe238712c45":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"fe33227f6805edab2036cbb80645cc4e2d1fa424":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","ea8268d5f00bb25a4ea1d0bac6e2ffe238712c45"],"0e354c63cdcc974a17c9f8531cecc001229c0952":["ea8268d5f00bb25a4ea1d0bac6e2ffe238712c45"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["0e354c63cdcc974a17c9f8531cecc001229c0952"]},"commit2Childs":{"aba371508186796cc6151d8223a5b4e16d02e26e":[],"ea8268d5f00bb25a4ea1d0bac6e2ffe238712c45":["aba371508186796cc6151d8223a5b4e16d02e26e","fe33227f6805edab2036cbb80645cc4e2d1fa424","0e354c63cdcc974a17c9f8531cecc001229c0952"],"fe33227f6805edab2036cbb80645cc4e2d1fa424":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["aba371508186796cc6151d8223a5b4e16d02e26e","ea8268d5f00bb25a4ea1d0bac6e2ffe238712c45","fe33227f6805edab2036cbb80645cc4e2d1fa424"],"0e354c63cdcc974a17c9f8531cecc001229c0952":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["aba371508186796cc6151d8223a5b4e16d02e26e","fe33227f6805edab2036cbb80645cc4e2d1fa424","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}