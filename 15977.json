{"path":"solr/core/src/test/org/apache/solr/TestTrie#testTrieDateRangeSearch().mjava","commits":[{"id":"c903c3d15906a3da96b8c0c2fb704491005fdbdb","date":1453508227,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/TestTrie#testTrieDateRangeSearch().mjava","pathOld":"solr/src/test/org/apache/solr/TestTrie#testTrieDateRangeSearch().mjava","sourceNew":"  @Test\n  public void testTrieDateRangeSearch() throws Exception {\n    for (int i = 0; i < 10; i++) {\n      assertU(adoc(\"id\", String.valueOf(i), \"tdate\", \"1995-12-31T23:\" + (i < 10 ? \"0\" + i : i) + \":59.999Z\"));\n    }\n    assertU(commit());\n    SolrQueryRequest req = req(\"q\", \"*:*\", \"fq\", \"tdate:[1995-12-31T23:00:59.999Z TO 1995-12-31T23:04:59.999Z]\");\n    assertQ(\"Range filter must match only 5 documents\", req, \"//*[@numFound='5']\");\n\n    // Test open ended range searches\n    assertQ(\"Range filter tint:[1995-12-31T23:00:59.999Z to *] must match 10 documents\", req(\"q\", \"*:*\", \"fq\", \"tdate:[1995-12-31T23:00:59.999Z TO *]\"), \"//*[@numFound='10']\");\n    assertQ(\"Range filter tint:[* to 1995-12-31T23:09:59.999Z] must match 10 documents\", req(\"q\", \"*:*\", \"fq\", \"tdate:[* TO 1995-12-31T23:09:59.999Z]\"), \"//*[@numFound='10']\");\n    assertQ(\"Range filter tint:[* to *] must match 10 documents\", req(\"q\", \"*:*\", \"fq\", \"tdate:[* TO *]\"), \"//*[@numFound='10']\");\n\n    // Test date math syntax\n    SimpleDateFormat format = new SimpleDateFormat(\"yyyy-MM-dd'T'HH:mm:ss'Z'\", Locale.US);\n    format.setTimeZone(TimeZone.getTimeZone(\"UTC\"));\n\n    assertU(delQ(\"*:*\"));\n    DateMathParser dmp = new DateMathParser(DateField.UTC, Locale.US);\n    String largestDate = \"\";\n    for (int i = 0; i < 10; i++) {\n      // index 10 days starting with today\n      String d = format.format(i == 0 ? dmp.parseMath(\"/DAY\") : dmp.parseMath(\"/DAY+\" + i + \"DAYS\"));\n      assertU(adoc(\"id\", String.valueOf(i), \"tdate\", d));\n      if (i == 9) largestDate = d;\n    }\n    assertU(commit());\n    assertQ(\"Range filter must match only 10 documents\", req(\"q\", \"*:*\", \"fq\", \"tdate:[* TO *]\"), \"//*[@numFound='10']\");\n    req = req(\"q\", \"*:*\", \"fq\", \"tdate:[NOW/DAY TO NOW/DAY+5DAYS]\");\n    assertQ(\"Range filter must match only 6 documents\", req, \"//*[@numFound='6']\");\n\n    // Test Term Queries\n    assertU(adoc(\"id\", \"11\", \"tdate\", \"1995-12-31T23:59:59.999Z\"));\n    assertU(commit());\n    assertQ(\"Term query must match only 1 document\", req(\"q\", \"tdate:1995-12-31T23\\\\:59\\\\:59.999Z\"), \"//*[@numFound='1']\");\n    assertQ(\"Term query must match only 1 document\", req(\"q\", \"*:*\", \"fq\", \"tdate:1995-12-31T23\\\\:59\\\\:59.999Z\"), \"//*[@numFound='1']\");\n\n    // Sorting\n    assertQ(\"Sort descending does not work correctly on tdate fields\", req(\"q\", \"*:*\", \"sort\", \"tdate desc\"), \"//*[@numFound='11']\", \"//date[@name='tdate'][.='\" + largestDate + \"']\");\n    assertQ(\"Sort ascending does not work correctly on tdate fields\", req(\"q\", \"*:*\", \"sort\", \"tdate asc\"), \"//*[@numFound='11']\", \"//date[@name='tdate'][.='1995-12-31T23:59:59.999Z']\");\n\n    // Function queries\n    assertQ(\"Function queries does not work correctly on tdate fields\", req(\"q\", \"_val_:\\\"sum(tdate,1.0)\\\"\"), \"//*[@numFound='11']\", \"//date[@name='tdate'][.='\" + largestDate + \"']\");\n  }\n\n","sourceOld":"  @Test\n  public void testTrieDateRangeSearch() throws Exception {\n    for (int i = 0; i < 10; i++) {\n      assertU(adoc(\"id\", String.valueOf(i), \"tdate\", \"1995-12-31T23:\" + (i < 10 ? \"0\" + i : i) + \":59.999Z\"));\n    }\n    assertU(commit());\n    SolrQueryRequest req = req(\"q\", \"*:*\", \"fq\", \"tdate:[1995-12-31T23:00:59.999Z TO 1995-12-31T23:04:59.999Z]\");\n    assertQ(\"Range filter must match only 5 documents\", req, \"//*[@numFound='5']\");\n\n    // Test open ended range searches\n    assertQ(\"Range filter tint:[1995-12-31T23:00:59.999Z to *] must match 10 documents\", req(\"q\", \"*:*\", \"fq\", \"tdate:[1995-12-31T23:00:59.999Z TO *]\"), \"//*[@numFound='10']\");\n    assertQ(\"Range filter tint:[* to 1995-12-31T23:09:59.999Z] must match 10 documents\", req(\"q\", \"*:*\", \"fq\", \"tdate:[* TO 1995-12-31T23:09:59.999Z]\"), \"//*[@numFound='10']\");\n    assertQ(\"Range filter tint:[* to *] must match 10 documents\", req(\"q\", \"*:*\", \"fq\", \"tdate:[* TO *]\"), \"//*[@numFound='10']\");\n\n    // Test date math syntax\n    SimpleDateFormat format = new SimpleDateFormat(\"yyyy-MM-dd'T'HH:mm:ss'Z'\", Locale.US);\n    format.setTimeZone(TimeZone.getTimeZone(\"UTC\"));\n\n    assertU(delQ(\"*:*\"));\n    DateMathParser dmp = new DateMathParser(DateField.UTC, Locale.US);\n    String largestDate = \"\";\n    for (int i = 0; i < 10; i++) {\n      // index 10 days starting with today\n      String d = format.format(i == 0 ? dmp.parseMath(\"/DAY\") : dmp.parseMath(\"/DAY+\" + i + \"DAYS\"));\n      assertU(adoc(\"id\", String.valueOf(i), \"tdate\", d));\n      if (i == 9) largestDate = d;\n    }\n    assertU(commit());\n    assertQ(\"Range filter must match only 10 documents\", req(\"q\", \"*:*\", \"fq\", \"tdate:[* TO *]\"), \"//*[@numFound='10']\");\n    req = req(\"q\", \"*:*\", \"fq\", \"tdate:[NOW/DAY TO NOW/DAY+5DAYS]\");\n    assertQ(\"Range filter must match only 6 documents\", req, \"//*[@numFound='6']\");\n\n    // Test Term Queries\n    assertU(adoc(\"id\", \"11\", \"tdate\", \"1995-12-31T23:59:59.999Z\"));\n    assertU(commit());\n    assertQ(\"Term query must match only 1 document\", req(\"q\", \"tdate:1995-12-31T23\\\\:59\\\\:59.999Z\"), \"//*[@numFound='1']\");\n    assertQ(\"Term query must match only 1 document\", req(\"q\", \"*:*\", \"fq\", \"tdate:1995-12-31T23\\\\:59\\\\:59.999Z\"), \"//*[@numFound='1']\");\n\n    // Sorting\n    assertQ(\"Sort descending does not work correctly on tdate fields\", req(\"q\", \"*:*\", \"sort\", \"tdate desc\"), \"//*[@numFound='11']\", \"//date[@name='tdate'][.='\" + largestDate + \"']\");\n    assertQ(\"Sort ascending does not work correctly on tdate fields\", req(\"q\", \"*:*\", \"sort\", \"tdate asc\"), \"//*[@numFound='11']\", \"//date[@name='tdate'][.='1995-12-31T23:59:59.999Z']\");\n\n    // Function queries\n    assertQ(\"Function queries does not work correctly on tdate fields\", req(\"q\", \"_val_:\\\"sum(tdate,1.0)\\\"\"), \"//*[@numFound='11']\", \"//date[@name='tdate'][.='\" + largestDate + \"']\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a258fbb26824fd104ed795e5d9033d2d040049ee","date":1453508252,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/TestTrie#testTrieDateRangeSearch().mjava","pathOld":"solr/src/test/org/apache/solr/TestTrie#testTrieDateRangeSearch().mjava","sourceNew":"  @Test\n  public void testTrieDateRangeSearch() throws Exception {\n    for (int i = 0; i < 10; i++) {\n      assertU(adoc(\"id\", String.valueOf(i), \"tdate\", \"1995-12-31T23:\" + (i < 10 ? \"0\" + i : i) + \":59.999Z\"));\n    }\n    assertU(commit());\n    SolrQueryRequest req = req(\"q\", \"*:*\", \"fq\", \"tdate:[1995-12-31T23:00:59.999Z TO 1995-12-31T23:04:59.999Z]\");\n    assertQ(\"Range filter must match only 5 documents\", req, \"//*[@numFound='5']\");\n\n    // Test open ended range searches\n    assertQ(\"Range filter tint:[1995-12-31T23:00:59.999Z to *] must match 10 documents\", req(\"q\", \"*:*\", \"fq\", \"tdate:[1995-12-31T23:00:59.999Z TO *]\"), \"//*[@numFound='10']\");\n    assertQ(\"Range filter tint:[* to 1995-12-31T23:09:59.999Z] must match 10 documents\", req(\"q\", \"*:*\", \"fq\", \"tdate:[* TO 1995-12-31T23:09:59.999Z]\"), \"//*[@numFound='10']\");\n    assertQ(\"Range filter tint:[* to *] must match 10 documents\", req(\"q\", \"*:*\", \"fq\", \"tdate:[* TO *]\"), \"//*[@numFound='10']\");\n\n    // Test date math syntax\n    SimpleDateFormat format = new SimpleDateFormat(\"yyyy-MM-dd'T'HH:mm:ss'Z'\", Locale.US);\n    format.setTimeZone(TimeZone.getTimeZone(\"UTC\"));\n\n    assertU(delQ(\"*:*\"));\n    DateMathParser dmp = new DateMathParser(DateField.UTC, Locale.US);\n    String largestDate = \"\";\n    for (int i = 0; i < 10; i++) {\n      // index 10 days starting with today\n      String d = format.format(i == 0 ? dmp.parseMath(\"/DAY\") : dmp.parseMath(\"/DAY+\" + i + \"DAYS\"));\n      assertU(adoc(\"id\", String.valueOf(i), \"tdate\", d));\n      if (i == 9) largestDate = d;\n    }\n    assertU(commit());\n    assertQ(\"Range filter must match only 10 documents\", req(\"q\", \"*:*\", \"fq\", \"tdate:[* TO *]\"), \"//*[@numFound='10']\");\n    req = req(\"q\", \"*:*\", \"fq\", \"tdate:[NOW/DAY TO NOW/DAY+5DAYS]\");\n    assertQ(\"Range filter must match only 6 documents\", req, \"//*[@numFound='6']\");\n\n    // Test Term Queries\n    assertU(adoc(\"id\", \"11\", \"tdate\", \"1995-12-31T23:59:59.999Z\"));\n    assertU(commit());\n    assertQ(\"Term query must match only 1 document\", req(\"q\", \"tdate:1995-12-31T23\\\\:59\\\\:59.999Z\"), \"//*[@numFound='1']\");\n    assertQ(\"Term query must match only 1 document\", req(\"q\", \"*:*\", \"fq\", \"tdate:1995-12-31T23\\\\:59\\\\:59.999Z\"), \"//*[@numFound='1']\");\n\n    // Sorting\n    assertQ(\"Sort descending does not work correctly on tdate fields\", req(\"q\", \"*:*\", \"sort\", \"tdate desc\"), \"//*[@numFound='11']\", \"//date[@name='tdate'][.='\" + largestDate + \"']\");\n    assertQ(\"Sort ascending does not work correctly on tdate fields\", req(\"q\", \"*:*\", \"sort\", \"tdate asc\"), \"//*[@numFound='11']\", \"//date[@name='tdate'][.='1995-12-31T23:59:59.999Z']\");\n\n    // Function queries\n    assertQ(\"Function queries does not work correctly on tdate fields\", req(\"q\", \"_val_:\\\"sum(tdate,1.0)\\\"\"), \"//*[@numFound='11']\", \"//date[@name='tdate'][.='\" + largestDate + \"']\");\n  }\n\n","sourceOld":"  @Test\n  public void testTrieDateRangeSearch() throws Exception {\n    for (int i = 0; i < 10; i++) {\n      assertU(adoc(\"id\", String.valueOf(i), \"tdate\", \"1995-12-31T23:\" + (i < 10 ? \"0\" + i : i) + \":59.999Z\"));\n    }\n    assertU(commit());\n    SolrQueryRequest req = req(\"q\", \"*:*\", \"fq\", \"tdate:[1995-12-31T23:00:59.999Z TO 1995-12-31T23:04:59.999Z]\");\n    assertQ(\"Range filter must match only 5 documents\", req, \"//*[@numFound='5']\");\n\n    // Test open ended range searches\n    assertQ(\"Range filter tint:[1995-12-31T23:00:59.999Z to *] must match 10 documents\", req(\"q\", \"*:*\", \"fq\", \"tdate:[1995-12-31T23:00:59.999Z TO *]\"), \"//*[@numFound='10']\");\n    assertQ(\"Range filter tint:[* to 1995-12-31T23:09:59.999Z] must match 10 documents\", req(\"q\", \"*:*\", \"fq\", \"tdate:[* TO 1995-12-31T23:09:59.999Z]\"), \"//*[@numFound='10']\");\n    assertQ(\"Range filter tint:[* to *] must match 10 documents\", req(\"q\", \"*:*\", \"fq\", \"tdate:[* TO *]\"), \"//*[@numFound='10']\");\n\n    // Test date math syntax\n    SimpleDateFormat format = new SimpleDateFormat(\"yyyy-MM-dd'T'HH:mm:ss'Z'\", Locale.US);\n    format.setTimeZone(TimeZone.getTimeZone(\"UTC\"));\n\n    assertU(delQ(\"*:*\"));\n    DateMathParser dmp = new DateMathParser(DateField.UTC, Locale.US);\n    String largestDate = \"\";\n    for (int i = 0; i < 10; i++) {\n      // index 10 days starting with today\n      String d = format.format(i == 0 ? dmp.parseMath(\"/DAY\") : dmp.parseMath(\"/DAY+\" + i + \"DAYS\"));\n      assertU(adoc(\"id\", String.valueOf(i), \"tdate\", d));\n      if (i == 9) largestDate = d;\n    }\n    assertU(commit());\n    assertQ(\"Range filter must match only 10 documents\", req(\"q\", \"*:*\", \"fq\", \"tdate:[* TO *]\"), \"//*[@numFound='10']\");\n    req = req(\"q\", \"*:*\", \"fq\", \"tdate:[NOW/DAY TO NOW/DAY+5DAYS]\");\n    assertQ(\"Range filter must match only 6 documents\", req, \"//*[@numFound='6']\");\n\n    // Test Term Queries\n    assertU(adoc(\"id\", \"11\", \"tdate\", \"1995-12-31T23:59:59.999Z\"));\n    assertU(commit());\n    assertQ(\"Term query must match only 1 document\", req(\"q\", \"tdate:1995-12-31T23\\\\:59\\\\:59.999Z\"), \"//*[@numFound='1']\");\n    assertQ(\"Term query must match only 1 document\", req(\"q\", \"*:*\", \"fq\", \"tdate:1995-12-31T23\\\\:59\\\\:59.999Z\"), \"//*[@numFound='1']\");\n\n    // Sorting\n    assertQ(\"Sort descending does not work correctly on tdate fields\", req(\"q\", \"*:*\", \"sort\", \"tdate desc\"), \"//*[@numFound='11']\", \"//date[@name='tdate'][.='\" + largestDate + \"']\");\n    assertQ(\"Sort ascending does not work correctly on tdate fields\", req(\"q\", \"*:*\", \"sort\", \"tdate asc\"), \"//*[@numFound='11']\", \"//date[@name='tdate'][.='1995-12-31T23:59:59.999Z']\");\n\n    // Function queries\n    assertQ(\"Function queries does not work correctly on tdate fields\", req(\"q\", \"_val_:\\\"sum(tdate,1.0)\\\"\"), \"//*[@numFound='11']\", \"//date[@name='tdate'][.='\" + largestDate + \"']\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/TestTrie#testTrieDateRangeSearch().mjava","pathOld":"solr/src/test/org/apache/solr/TestTrie#testTrieDateRangeSearch().mjava","sourceNew":"  @Test\n  public void testTrieDateRangeSearch() throws Exception {\n    for (int i = 0; i < 10; i++) {\n      assertU(adoc(\"id\", String.valueOf(i), \"tdate\", \"1995-12-31T23:\" + (i < 10 ? \"0\" + i : i) + \":59.999Z\"));\n    }\n    assertU(commit());\n    SolrQueryRequest req = req(\"q\", \"*:*\", \"fq\", \"tdate:[1995-12-31T23:00:59.999Z TO 1995-12-31T23:04:59.999Z]\");\n    assertQ(\"Range filter must match only 5 documents\", req, \"//*[@numFound='5']\");\n\n    // Test open ended range searches\n    assertQ(\"Range filter tint:[1995-12-31T23:00:59.999Z to *] must match 10 documents\", req(\"q\", \"*:*\", \"fq\", \"tdate:[1995-12-31T23:00:59.999Z TO *]\"), \"//*[@numFound='10']\");\n    assertQ(\"Range filter tint:[* to 1995-12-31T23:09:59.999Z] must match 10 documents\", req(\"q\", \"*:*\", \"fq\", \"tdate:[* TO 1995-12-31T23:09:59.999Z]\"), \"//*[@numFound='10']\");\n    assertQ(\"Range filter tint:[* to *] must match 10 documents\", req(\"q\", \"*:*\", \"fq\", \"tdate:[* TO *]\"), \"//*[@numFound='10']\");\n\n    // Test date math syntax\n    SimpleDateFormat format = new SimpleDateFormat(\"yyyy-MM-dd'T'HH:mm:ss'Z'\", Locale.US);\n    format.setTimeZone(TimeZone.getTimeZone(\"UTC\"));\n\n    assertU(delQ(\"*:*\"));\n    DateMathParser dmp = new DateMathParser(DateField.UTC, Locale.US);\n    String largestDate = \"\";\n    for (int i = 0; i < 10; i++) {\n      // index 10 days starting with today\n      String d = format.format(i == 0 ? dmp.parseMath(\"/DAY\") : dmp.parseMath(\"/DAY+\" + i + \"DAYS\"));\n      assertU(adoc(\"id\", String.valueOf(i), \"tdate\", d));\n      if (i == 9) largestDate = d;\n    }\n    assertU(commit());\n    assertQ(\"Range filter must match only 10 documents\", req(\"q\", \"*:*\", \"fq\", \"tdate:[* TO *]\"), \"//*[@numFound='10']\");\n    req = req(\"q\", \"*:*\", \"fq\", \"tdate:[NOW/DAY TO NOW/DAY+5DAYS]\");\n    assertQ(\"Range filter must match only 6 documents\", req, \"//*[@numFound='6']\");\n\n    // Test Term Queries\n    assertU(adoc(\"id\", \"11\", \"tdate\", \"1995-12-31T23:59:59.999Z\"));\n    assertU(commit());\n    assertQ(\"Term query must match only 1 document\", req(\"q\", \"tdate:1995-12-31T23\\\\:59\\\\:59.999Z\"), \"//*[@numFound='1']\");\n    assertQ(\"Term query must match only 1 document\", req(\"q\", \"*:*\", \"fq\", \"tdate:1995-12-31T23\\\\:59\\\\:59.999Z\"), \"//*[@numFound='1']\");\n\n    // Sorting\n    assertQ(\"Sort descending does not work correctly on tdate fields\", req(\"q\", \"*:*\", \"sort\", \"tdate desc\"), \"//*[@numFound='11']\", \"//date[@name='tdate'][.='\" + largestDate + \"']\");\n    assertQ(\"Sort ascending does not work correctly on tdate fields\", req(\"q\", \"*:*\", \"sort\", \"tdate asc\"), \"//*[@numFound='11']\", \"//date[@name='tdate'][.='1995-12-31T23:59:59.999Z']\");\n\n    // Function queries\n    assertQ(\"Function queries does not work correctly on tdate fields\", req(\"q\", \"_val_:\\\"sum(tdate,1.0)\\\"\"), \"//*[@numFound='11']\", \"//date[@name='tdate'][.='\" + largestDate + \"']\");\n  }\n\n","sourceOld":"  @Test\n  public void testTrieDateRangeSearch() throws Exception {\n    for (int i = 0; i < 10; i++) {\n      assertU(adoc(\"id\", String.valueOf(i), \"tdate\", \"1995-12-31T23:\" + (i < 10 ? \"0\" + i : i) + \":59.999Z\"));\n    }\n    assertU(commit());\n    SolrQueryRequest req = req(\"q\", \"*:*\", \"fq\", \"tdate:[1995-12-31T23:00:59.999Z TO 1995-12-31T23:04:59.999Z]\");\n    assertQ(\"Range filter must match only 5 documents\", req, \"//*[@numFound='5']\");\n\n    // Test open ended range searches\n    assertQ(\"Range filter tint:[1995-12-31T23:00:59.999Z to *] must match 10 documents\", req(\"q\", \"*:*\", \"fq\", \"tdate:[1995-12-31T23:00:59.999Z TO *]\"), \"//*[@numFound='10']\");\n    assertQ(\"Range filter tint:[* to 1995-12-31T23:09:59.999Z] must match 10 documents\", req(\"q\", \"*:*\", \"fq\", \"tdate:[* TO 1995-12-31T23:09:59.999Z]\"), \"//*[@numFound='10']\");\n    assertQ(\"Range filter tint:[* to *] must match 10 documents\", req(\"q\", \"*:*\", \"fq\", \"tdate:[* TO *]\"), \"//*[@numFound='10']\");\n\n    // Test date math syntax\n    SimpleDateFormat format = new SimpleDateFormat(\"yyyy-MM-dd'T'HH:mm:ss'Z'\", Locale.US);\n    format.setTimeZone(TimeZone.getTimeZone(\"UTC\"));\n\n    assertU(delQ(\"*:*\"));\n    DateMathParser dmp = new DateMathParser(DateField.UTC, Locale.US);\n    String largestDate = \"\";\n    for (int i = 0; i < 10; i++) {\n      // index 10 days starting with today\n      String d = format.format(i == 0 ? dmp.parseMath(\"/DAY\") : dmp.parseMath(\"/DAY+\" + i + \"DAYS\"));\n      assertU(adoc(\"id\", String.valueOf(i), \"tdate\", d));\n      if (i == 9) largestDate = d;\n    }\n    assertU(commit());\n    assertQ(\"Range filter must match only 10 documents\", req(\"q\", \"*:*\", \"fq\", \"tdate:[* TO *]\"), \"//*[@numFound='10']\");\n    req = req(\"q\", \"*:*\", \"fq\", \"tdate:[NOW/DAY TO NOW/DAY+5DAYS]\");\n    assertQ(\"Range filter must match only 6 documents\", req, \"//*[@numFound='6']\");\n\n    // Test Term Queries\n    assertU(adoc(\"id\", \"11\", \"tdate\", \"1995-12-31T23:59:59.999Z\"));\n    assertU(commit());\n    assertQ(\"Term query must match only 1 document\", req(\"q\", \"tdate:1995-12-31T23\\\\:59\\\\:59.999Z\"), \"//*[@numFound='1']\");\n    assertQ(\"Term query must match only 1 document\", req(\"q\", \"*:*\", \"fq\", \"tdate:1995-12-31T23\\\\:59\\\\:59.999Z\"), \"//*[@numFound='1']\");\n\n    // Sorting\n    assertQ(\"Sort descending does not work correctly on tdate fields\", req(\"q\", \"*:*\", \"sort\", \"tdate desc\"), \"//*[@numFound='11']\", \"//date[@name='tdate'][.='\" + largestDate + \"']\");\n    assertQ(\"Sort ascending does not work correctly on tdate fields\", req(\"q\", \"*:*\", \"sort\", \"tdate asc\"), \"//*[@numFound='11']\", \"//date[@name='tdate'][.='1995-12-31T23:59:59.999Z']\");\n\n    // Function queries\n    assertQ(\"Function queries does not work correctly on tdate fields\", req(\"q\", \"_val_:\\\"sum(tdate,1.0)\\\"\"), \"//*[@numFound='11']\", \"//date[@name='tdate'][.='\" + largestDate + \"']\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9279c7cd47f17e1e8b674a3741ff5f040bc680be","date":1341675760,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/TestTrie#testTrieDateRangeSearch().mjava","pathOld":"solr/core/src/test/org/apache/solr/TestTrie#testTrieDateRangeSearch().mjava","sourceNew":"  @Test\n  public void testTrieDateRangeSearch() throws Exception {\n    for (int i = 0; i < 10; i++) {\n      assertU(adoc(\"id\", String.valueOf(i), \"tdate\", \"1995-12-31T23:\" + (i < 10 ? \"0\" + i : i) + \":59.999Z\"));\n    }\n    assertU(commit());\n    SolrQueryRequest req = req(\"q\", \"*:*\", \"fq\", \"tdate:[1995-12-31T23:00:59.999Z TO 1995-12-31T23:04:59.999Z]\");\n    assertQ(\"Range filter must match only 5 documents\", req, \"//*[@numFound='5']\");\n\n    // Test open ended range searches\n    assertQ(\"Range filter tint:[1995-12-31T23:00:59.999Z to *] must match 10 documents\", req(\"q\", \"*:*\", \"fq\", \"tdate:[1995-12-31T23:00:59.999Z TO *]\"), \"//*[@numFound='10']\");\n    assertQ(\"Range filter tint:[* to 1995-12-31T23:09:59.999Z] must match 10 documents\", req(\"q\", \"*:*\", \"fq\", \"tdate:[* TO 1995-12-31T23:09:59.999Z]\"), \"//*[@numFound='10']\");\n    assertQ(\"Range filter tint:[* to *] must match 10 documents\", req(\"q\", \"*:*\", \"fq\", \"tdate:[* TO *]\"), \"//*[@numFound='10']\");\n\n    // Test date math syntax\n    SimpleDateFormat format = new SimpleDateFormat(\"yyyy-MM-dd'T'HH:mm:ss'Z'\", Locale.ROOT);\n    format.setTimeZone(TimeZone.getTimeZone(\"UTC\"));\n\n    assertU(delQ(\"*:*\"));\n    DateMathParser dmp = new DateMathParser(DateField.UTC, Locale.ROOT);\n    String largestDate = \"\";\n    for (int i = 0; i < 10; i++) {\n      // index 10 days starting with today\n      String d = format.format(i == 0 ? dmp.parseMath(\"/DAY\") : dmp.parseMath(\"/DAY+\" + i + \"DAYS\"));\n      assertU(adoc(\"id\", String.valueOf(i), \"tdate\", d));\n      if (i == 9) largestDate = d;\n    }\n    assertU(commit());\n    assertQ(\"Range filter must match only 10 documents\", req(\"q\", \"*:*\", \"fq\", \"tdate:[* TO *]\"), \"//*[@numFound='10']\");\n    req = req(\"q\", \"*:*\", \"fq\", \"tdate:[NOW/DAY TO NOW/DAY+5DAYS]\");\n    assertQ(\"Range filter must match only 6 documents\", req, \"//*[@numFound='6']\");\n\n    // Test Term Queries\n    assertU(adoc(\"id\", \"11\", \"tdate\", \"1995-12-31T23:59:59.999Z\"));\n    assertU(commit());\n    assertQ(\"Term query must match only 1 document\", req(\"q\", \"tdate:1995-12-31T23\\\\:59\\\\:59.999Z\"), \"//*[@numFound='1']\");\n    assertQ(\"Term query must match only 1 document\", req(\"q\", \"*:*\", \"fq\", \"tdate:1995-12-31T23\\\\:59\\\\:59.999Z\"), \"//*[@numFound='1']\");\n\n    // Sorting\n    assertQ(\"Sort descending does not work correctly on tdate fields\", req(\"q\", \"*:*\", \"sort\", \"tdate desc\"), \"//*[@numFound='11']\", \"//date[@name='tdate'][.='\" + largestDate + \"']\");\n    assertQ(\"Sort ascending does not work correctly on tdate fields\", req(\"q\", \"*:*\", \"sort\", \"tdate asc\"), \"//*[@numFound='11']\", \"//date[@name='tdate'][.='1995-12-31T23:59:59.999Z']\");\n\n    // Function queries\n    assertQ(\"Function queries does not work correctly on tdate fields\", req(\"q\", \"_val_:\\\"sum(tdate,1.0)\\\"\"), \"//*[@numFound='11']\", \"//date[@name='tdate'][.='\" + largestDate + \"']\");\n  }\n\n","sourceOld":"  @Test\n  public void testTrieDateRangeSearch() throws Exception {\n    for (int i = 0; i < 10; i++) {\n      assertU(adoc(\"id\", String.valueOf(i), \"tdate\", \"1995-12-31T23:\" + (i < 10 ? \"0\" + i : i) + \":59.999Z\"));\n    }\n    assertU(commit());\n    SolrQueryRequest req = req(\"q\", \"*:*\", \"fq\", \"tdate:[1995-12-31T23:00:59.999Z TO 1995-12-31T23:04:59.999Z]\");\n    assertQ(\"Range filter must match only 5 documents\", req, \"//*[@numFound='5']\");\n\n    // Test open ended range searches\n    assertQ(\"Range filter tint:[1995-12-31T23:00:59.999Z to *] must match 10 documents\", req(\"q\", \"*:*\", \"fq\", \"tdate:[1995-12-31T23:00:59.999Z TO *]\"), \"//*[@numFound='10']\");\n    assertQ(\"Range filter tint:[* to 1995-12-31T23:09:59.999Z] must match 10 documents\", req(\"q\", \"*:*\", \"fq\", \"tdate:[* TO 1995-12-31T23:09:59.999Z]\"), \"//*[@numFound='10']\");\n    assertQ(\"Range filter tint:[* to *] must match 10 documents\", req(\"q\", \"*:*\", \"fq\", \"tdate:[* TO *]\"), \"//*[@numFound='10']\");\n\n    // Test date math syntax\n    SimpleDateFormat format = new SimpleDateFormat(\"yyyy-MM-dd'T'HH:mm:ss'Z'\", Locale.US);\n    format.setTimeZone(TimeZone.getTimeZone(\"UTC\"));\n\n    assertU(delQ(\"*:*\"));\n    DateMathParser dmp = new DateMathParser(DateField.UTC, Locale.US);\n    String largestDate = \"\";\n    for (int i = 0; i < 10; i++) {\n      // index 10 days starting with today\n      String d = format.format(i == 0 ? dmp.parseMath(\"/DAY\") : dmp.parseMath(\"/DAY+\" + i + \"DAYS\"));\n      assertU(adoc(\"id\", String.valueOf(i), \"tdate\", d));\n      if (i == 9) largestDate = d;\n    }\n    assertU(commit());\n    assertQ(\"Range filter must match only 10 documents\", req(\"q\", \"*:*\", \"fq\", \"tdate:[* TO *]\"), \"//*[@numFound='10']\");\n    req = req(\"q\", \"*:*\", \"fq\", \"tdate:[NOW/DAY TO NOW/DAY+5DAYS]\");\n    assertQ(\"Range filter must match only 6 documents\", req, \"//*[@numFound='6']\");\n\n    // Test Term Queries\n    assertU(adoc(\"id\", \"11\", \"tdate\", \"1995-12-31T23:59:59.999Z\"));\n    assertU(commit());\n    assertQ(\"Term query must match only 1 document\", req(\"q\", \"tdate:1995-12-31T23\\\\:59\\\\:59.999Z\"), \"//*[@numFound='1']\");\n    assertQ(\"Term query must match only 1 document\", req(\"q\", \"*:*\", \"fq\", \"tdate:1995-12-31T23\\\\:59\\\\:59.999Z\"), \"//*[@numFound='1']\");\n\n    // Sorting\n    assertQ(\"Sort descending does not work correctly on tdate fields\", req(\"q\", \"*:*\", \"sort\", \"tdate desc\"), \"//*[@numFound='11']\", \"//date[@name='tdate'][.='\" + largestDate + \"']\");\n    assertQ(\"Sort ascending does not work correctly on tdate fields\", req(\"q\", \"*:*\", \"sort\", \"tdate asc\"), \"//*[@numFound='11']\", \"//date[@name='tdate'][.='1995-12-31T23:59:59.999Z']\");\n\n    // Function queries\n    assertQ(\"Function queries does not work correctly on tdate fields\", req(\"q\", \"_val_:\\\"sum(tdate,1.0)\\\"\"), \"//*[@numFound='11']\", \"//date[@name='tdate'][.='\" + largestDate + \"']\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2acf500f78aa12b92e371fd89c719291986b6b90","date":1341846236,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/TestTrie#testTrieDateRangeSearch().mjava","pathOld":"solr/core/src/test/org/apache/solr/TestTrie#testTrieDateRangeSearch().mjava","sourceNew":"  @Test\n  public void testTrieDateRangeSearch() throws Exception {\n    for (int i = 0; i < 10; i++) {\n      assertU(adoc(\"id\", String.valueOf(i), \"tdate\", \"1995-12-31T23:\" + (i < 10 ? \"0\" + i : i) + \":59.999Z\"));\n    }\n    assertU(commit());\n    SolrQueryRequest req = req(\"q\", \"*:*\", \"fq\", \"tdate:[1995-12-31T23:00:59.999Z TO 1995-12-31T23:04:59.999Z]\");\n    assertQ(\"Range filter must match only 5 documents\", req, \"//*[@numFound='5']\");\n\n    // Test open ended range searches\n    assertQ(\"Range filter tint:[1995-12-31T23:00:59.999Z to *] must match 10 documents\", req(\"q\", \"*:*\", \"fq\", \"tdate:[1995-12-31T23:00:59.999Z TO *]\"), \"//*[@numFound='10']\");\n    assertQ(\"Range filter tint:[* to 1995-12-31T23:09:59.999Z] must match 10 documents\", req(\"q\", \"*:*\", \"fq\", \"tdate:[* TO 1995-12-31T23:09:59.999Z]\"), \"//*[@numFound='10']\");\n    assertQ(\"Range filter tint:[* to *] must match 10 documents\", req(\"q\", \"*:*\", \"fq\", \"tdate:[* TO *]\"), \"//*[@numFound='10']\");\n\n    // Test date math syntax\n    SimpleDateFormat format = new SimpleDateFormat(\"yyyy-MM-dd'T'HH:mm:ss'Z'\", Locale.ROOT);\n    format.setTimeZone(TimeZone.getTimeZone(\"UTC\"));\n\n    assertU(delQ(\"*:*\"));\n    DateMathParser dmp = new DateMathParser(DateField.UTC, Locale.ROOT);\n    String largestDate = \"\";\n    for (int i = 0; i < 10; i++) {\n      // index 10 days starting with today\n      String d = format.format(i == 0 ? dmp.parseMath(\"/DAY\") : dmp.parseMath(\"/DAY+\" + i + \"DAYS\"));\n      assertU(adoc(\"id\", String.valueOf(i), \"tdate\", d));\n      if (i == 9) largestDate = d;\n    }\n    assertU(commit());\n    assertQ(\"Range filter must match only 10 documents\", req(\"q\", \"*:*\", \"fq\", \"tdate:[* TO *]\"), \"//*[@numFound='10']\");\n    req = req(\"q\", \"*:*\", \"fq\", \"tdate:[NOW/DAY TO NOW/DAY+5DAYS]\");\n    assertQ(\"Range filter must match only 6 documents\", req, \"//*[@numFound='6']\");\n\n    // Test Term Queries\n    assertU(adoc(\"id\", \"11\", \"tdate\", \"1995-12-31T23:59:59.999Z\"));\n    assertU(commit());\n    assertQ(\"Term query must match only 1 document\", req(\"q\", \"tdate:1995-12-31T23\\\\:59\\\\:59.999Z\"), \"//*[@numFound='1']\");\n    assertQ(\"Term query must match only 1 document\", req(\"q\", \"*:*\", \"fq\", \"tdate:1995-12-31T23\\\\:59\\\\:59.999Z\"), \"//*[@numFound='1']\");\n\n    // Sorting\n    assertQ(\"Sort descending does not work correctly on tdate fields\", req(\"q\", \"*:*\", \"sort\", \"tdate desc\"), \"//*[@numFound='11']\", \"//date[@name='tdate'][.='\" + largestDate + \"']\");\n    assertQ(\"Sort ascending does not work correctly on tdate fields\", req(\"q\", \"*:*\", \"sort\", \"tdate asc\"), \"//*[@numFound='11']\", \"//date[@name='tdate'][.='1995-12-31T23:59:59.999Z']\");\n\n    // Function queries\n    assertQ(\"Function queries does not work correctly on tdate fields\", req(\"q\", \"_val_:\\\"sum(tdate,1.0)\\\"\"), \"//*[@numFound='11']\", \"//date[@name='tdate'][.='\" + largestDate + \"']\");\n  }\n\n","sourceOld":"  @Test\n  public void testTrieDateRangeSearch() throws Exception {\n    for (int i = 0; i < 10; i++) {\n      assertU(adoc(\"id\", String.valueOf(i), \"tdate\", \"1995-12-31T23:\" + (i < 10 ? \"0\" + i : i) + \":59.999Z\"));\n    }\n    assertU(commit());\n    SolrQueryRequest req = req(\"q\", \"*:*\", \"fq\", \"tdate:[1995-12-31T23:00:59.999Z TO 1995-12-31T23:04:59.999Z]\");\n    assertQ(\"Range filter must match only 5 documents\", req, \"//*[@numFound='5']\");\n\n    // Test open ended range searches\n    assertQ(\"Range filter tint:[1995-12-31T23:00:59.999Z to *] must match 10 documents\", req(\"q\", \"*:*\", \"fq\", \"tdate:[1995-12-31T23:00:59.999Z TO *]\"), \"//*[@numFound='10']\");\n    assertQ(\"Range filter tint:[* to 1995-12-31T23:09:59.999Z] must match 10 documents\", req(\"q\", \"*:*\", \"fq\", \"tdate:[* TO 1995-12-31T23:09:59.999Z]\"), \"//*[@numFound='10']\");\n    assertQ(\"Range filter tint:[* to *] must match 10 documents\", req(\"q\", \"*:*\", \"fq\", \"tdate:[* TO *]\"), \"//*[@numFound='10']\");\n\n    // Test date math syntax\n    SimpleDateFormat format = new SimpleDateFormat(\"yyyy-MM-dd'T'HH:mm:ss'Z'\", Locale.US);\n    format.setTimeZone(TimeZone.getTimeZone(\"UTC\"));\n\n    assertU(delQ(\"*:*\"));\n    DateMathParser dmp = new DateMathParser(DateField.UTC, Locale.US);\n    String largestDate = \"\";\n    for (int i = 0; i < 10; i++) {\n      // index 10 days starting with today\n      String d = format.format(i == 0 ? dmp.parseMath(\"/DAY\") : dmp.parseMath(\"/DAY+\" + i + \"DAYS\"));\n      assertU(adoc(\"id\", String.valueOf(i), \"tdate\", d));\n      if (i == 9) largestDate = d;\n    }\n    assertU(commit());\n    assertQ(\"Range filter must match only 10 documents\", req(\"q\", \"*:*\", \"fq\", \"tdate:[* TO *]\"), \"//*[@numFound='10']\");\n    req = req(\"q\", \"*:*\", \"fq\", \"tdate:[NOW/DAY TO NOW/DAY+5DAYS]\");\n    assertQ(\"Range filter must match only 6 documents\", req, \"//*[@numFound='6']\");\n\n    // Test Term Queries\n    assertU(adoc(\"id\", \"11\", \"tdate\", \"1995-12-31T23:59:59.999Z\"));\n    assertU(commit());\n    assertQ(\"Term query must match only 1 document\", req(\"q\", \"tdate:1995-12-31T23\\\\:59\\\\:59.999Z\"), \"//*[@numFound='1']\");\n    assertQ(\"Term query must match only 1 document\", req(\"q\", \"*:*\", \"fq\", \"tdate:1995-12-31T23\\\\:59\\\\:59.999Z\"), \"//*[@numFound='1']\");\n\n    // Sorting\n    assertQ(\"Sort descending does not work correctly on tdate fields\", req(\"q\", \"*:*\", \"sort\", \"tdate desc\"), \"//*[@numFound='11']\", \"//date[@name='tdate'][.='\" + largestDate + \"']\");\n    assertQ(\"Sort ascending does not work correctly on tdate fields\", req(\"q\", \"*:*\", \"sort\", \"tdate asc\"), \"//*[@numFound='11']\", \"//date[@name='tdate'][.='1995-12-31T23:59:59.999Z']\");\n\n    // Function queries\n    assertQ(\"Function queries does not work correctly on tdate fields\", req(\"q\", \"_val_:\\\"sum(tdate,1.0)\\\"\"), \"//*[@numFound='11']\", \"//date[@name='tdate'][.='\" + largestDate + \"']\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"46d8ada1fff8d18cb197c38c7983225162599948","date":1341853497,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/TestTrie#testTrieDateRangeSearch().mjava","pathOld":"solr/core/src/test/org/apache/solr/TestTrie#testTrieDateRangeSearch().mjava","sourceNew":"  @Test\n  public void testTrieDateRangeSearch() throws Exception {\n    for (int i = 0; i < 10; i++) {\n      assertU(adoc(\"id\", String.valueOf(i), \"tdate\", \"1995-12-31T23:\" + (i < 10 ? \"0\" + i : i) + \":59.999Z\"));\n    }\n    assertU(commit());\n    SolrQueryRequest req = req(\"q\", \"*:*\", \"fq\", \"tdate:[1995-12-31T23:00:59.999Z TO 1995-12-31T23:04:59.999Z]\");\n    assertQ(\"Range filter must match only 5 documents\", req, \"//*[@numFound='5']\");\n\n    // Test open ended range searches\n    assertQ(\"Range filter tint:[1995-12-31T23:00:59.999Z to *] must match 10 documents\", req(\"q\", \"*:*\", \"fq\", \"tdate:[1995-12-31T23:00:59.999Z TO *]\"), \"//*[@numFound='10']\");\n    assertQ(\"Range filter tint:[* to 1995-12-31T23:09:59.999Z] must match 10 documents\", req(\"q\", \"*:*\", \"fq\", \"tdate:[* TO 1995-12-31T23:09:59.999Z]\"), \"//*[@numFound='10']\");\n    assertQ(\"Range filter tint:[* to *] must match 10 documents\", req(\"q\", \"*:*\", \"fq\", \"tdate:[* TO *]\"), \"//*[@numFound='10']\");\n\n    // Test date math syntax\n    SimpleDateFormat format = new SimpleDateFormat(\"yyyy-MM-dd'T'HH:mm:ss'Z'\", Locale.ROOT);\n    format.setTimeZone(TimeZone.getTimeZone(\"UTC\"));\n\n    assertU(delQ(\"*:*\"));\n    DateMathParser dmp = new DateMathParser(DateField.UTC, Locale.ROOT);\n    String largestDate = \"\";\n    for (int i = 0; i < 10; i++) {\n      // index 10 days starting with today\n      String d = format.format(i == 0 ? dmp.parseMath(\"/DAY\") : dmp.parseMath(\"/DAY+\" + i + \"DAYS\"));\n      assertU(adoc(\"id\", String.valueOf(i), \"tdate\", d));\n      if (i == 9) largestDate = d;\n    }\n    assertU(commit());\n    assertQ(\"Range filter must match only 10 documents\", req(\"q\", \"*:*\", \"fq\", \"tdate:[* TO *]\"), \"//*[@numFound='10']\");\n    req = req(\"q\", \"*:*\", \"fq\", \"tdate:[NOW/DAY TO NOW/DAY+5DAYS]\");\n    assertQ(\"Range filter must match only 6 documents\", req, \"//*[@numFound='6']\");\n\n    // Test Term Queries\n    assertU(adoc(\"id\", \"11\", \"tdate\", \"1995-12-31T23:59:59.999Z\"));\n    assertU(commit());\n    assertQ(\"Term query must match only 1 document\", req(\"q\", \"tdate:1995-12-31T23\\\\:59\\\\:59.999Z\"), \"//*[@numFound='1']\");\n    assertQ(\"Term query must match only 1 document\", req(\"q\", \"*:*\", \"fq\", \"tdate:1995-12-31T23\\\\:59\\\\:59.999Z\"), \"//*[@numFound='1']\");\n\n    // Sorting\n    assertQ(\"Sort descending does not work correctly on tdate fields\", req(\"q\", \"*:*\", \"sort\", \"tdate desc\"), \"//*[@numFound='11']\", \"//date[@name='tdate'][.='\" + largestDate + \"']\");\n    assertQ(\"Sort ascending does not work correctly on tdate fields\", req(\"q\", \"*:*\", \"sort\", \"tdate asc\"), \"//*[@numFound='11']\", \"//date[@name='tdate'][.='1995-12-31T23:59:59.999Z']\");\n\n    // Function queries\n    assertQ(\"Function queries does not work correctly on tdate fields\", req(\"q\", \"_val_:\\\"sum(tdate,1.0)\\\"\"), \"//*[@numFound='11']\", \"//date[@name='tdate'][.='\" + largestDate + \"']\");\n  }\n\n","sourceOld":"  @Test\n  public void testTrieDateRangeSearch() throws Exception {\n    for (int i = 0; i < 10; i++) {\n      assertU(adoc(\"id\", String.valueOf(i), \"tdate\", \"1995-12-31T23:\" + (i < 10 ? \"0\" + i : i) + \":59.999Z\"));\n    }\n    assertU(commit());\n    SolrQueryRequest req = req(\"q\", \"*:*\", \"fq\", \"tdate:[1995-12-31T23:00:59.999Z TO 1995-12-31T23:04:59.999Z]\");\n    assertQ(\"Range filter must match only 5 documents\", req, \"//*[@numFound='5']\");\n\n    // Test open ended range searches\n    assertQ(\"Range filter tint:[1995-12-31T23:00:59.999Z to *] must match 10 documents\", req(\"q\", \"*:*\", \"fq\", \"tdate:[1995-12-31T23:00:59.999Z TO *]\"), \"//*[@numFound='10']\");\n    assertQ(\"Range filter tint:[* to 1995-12-31T23:09:59.999Z] must match 10 documents\", req(\"q\", \"*:*\", \"fq\", \"tdate:[* TO 1995-12-31T23:09:59.999Z]\"), \"//*[@numFound='10']\");\n    assertQ(\"Range filter tint:[* to *] must match 10 documents\", req(\"q\", \"*:*\", \"fq\", \"tdate:[* TO *]\"), \"//*[@numFound='10']\");\n\n    // Test date math syntax\n    SimpleDateFormat format = new SimpleDateFormat(\"yyyy-MM-dd'T'HH:mm:ss'Z'\", Locale.US);\n    format.setTimeZone(TimeZone.getTimeZone(\"UTC\"));\n\n    assertU(delQ(\"*:*\"));\n    DateMathParser dmp = new DateMathParser(DateField.UTC, Locale.US);\n    String largestDate = \"\";\n    for (int i = 0; i < 10; i++) {\n      // index 10 days starting with today\n      String d = format.format(i == 0 ? dmp.parseMath(\"/DAY\") : dmp.parseMath(\"/DAY+\" + i + \"DAYS\"));\n      assertU(adoc(\"id\", String.valueOf(i), \"tdate\", d));\n      if (i == 9) largestDate = d;\n    }\n    assertU(commit());\n    assertQ(\"Range filter must match only 10 documents\", req(\"q\", \"*:*\", \"fq\", \"tdate:[* TO *]\"), \"//*[@numFound='10']\");\n    req = req(\"q\", \"*:*\", \"fq\", \"tdate:[NOW/DAY TO NOW/DAY+5DAYS]\");\n    assertQ(\"Range filter must match only 6 documents\", req, \"//*[@numFound='6']\");\n\n    // Test Term Queries\n    assertU(adoc(\"id\", \"11\", \"tdate\", \"1995-12-31T23:59:59.999Z\"));\n    assertU(commit());\n    assertQ(\"Term query must match only 1 document\", req(\"q\", \"tdate:1995-12-31T23\\\\:59\\\\:59.999Z\"), \"//*[@numFound='1']\");\n    assertQ(\"Term query must match only 1 document\", req(\"q\", \"*:*\", \"fq\", \"tdate:1995-12-31T23\\\\:59\\\\:59.999Z\"), \"//*[@numFound='1']\");\n\n    // Sorting\n    assertQ(\"Sort descending does not work correctly on tdate fields\", req(\"q\", \"*:*\", \"sort\", \"tdate desc\"), \"//*[@numFound='11']\", \"//date[@name='tdate'][.='\" + largestDate + \"']\");\n    assertQ(\"Sort ascending does not work correctly on tdate fields\", req(\"q\", \"*:*\", \"sort\", \"tdate asc\"), \"//*[@numFound='11']\", \"//date[@name='tdate'][.='1995-12-31T23:59:59.999Z']\");\n\n    // Function queries\n    assertQ(\"Function queries does not work correctly on tdate fields\", req(\"q\", \"_val_:\\\"sum(tdate,1.0)\\\"\"), \"//*[@numFound='11']\", \"//date[@name='tdate'][.='\" + largestDate + \"']\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fe33227f6805edab2036cbb80645cc4e2d1fa424","date":1342713534,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/TestTrie#testTrieDateRangeSearch().mjava","pathOld":"solr/core/src/test/org/apache/solr/TestTrie#testTrieDateRangeSearch().mjava","sourceNew":"  @Test\n  public void testTrieDateRangeSearch() throws Exception {\n    for (int i = 0; i < 10; i++) {\n      assertU(adoc(\"id\", String.valueOf(i), \"tdate\", \"1995-12-31T23:\" + (i < 10 ? \"0\" + i : i) + \":59.999Z\"));\n    }\n    assertU(commit());\n    SolrQueryRequest req = req(\"q\", \"*:*\", \"fq\", \"tdate:[1995-12-31T23:00:59.999Z TO 1995-12-31T23:04:59.999Z]\");\n    assertQ(\"Range filter must match only 5 documents\", req, \"//*[@numFound='5']\");\n\n    // Test open ended range searches\n    assertQ(\"Range filter tint:[1995-12-31T23:00:59.999Z to *] must match 10 documents\", req(\"q\", \"*:*\", \"fq\", \"tdate:[1995-12-31T23:00:59.999Z TO *]\"), \"//*[@numFound='10']\");\n    assertQ(\"Range filter tint:[* to 1995-12-31T23:09:59.999Z] must match 10 documents\", req(\"q\", \"*:*\", \"fq\", \"tdate:[* TO 1995-12-31T23:09:59.999Z]\"), \"//*[@numFound='10']\");\n    assertQ(\"Range filter tint:[* to *] must match 10 documents\", req(\"q\", \"*:*\", \"fq\", \"tdate:[* TO *]\"), \"//*[@numFound='10']\");\n\n    // Test date math syntax\n    SimpleDateFormat format = new SimpleDateFormat(\"yyyy-MM-dd'T'HH:mm:ss'Z'\", Locale.ROOT);\n    format.setTimeZone(TimeZone.getTimeZone(\"UTC\"));\n\n    assertU(delQ(\"*:*\"));\n    DateMathParser dmp = new DateMathParser(DateField.UTC, Locale.ROOT);\n    String largestDate = \"\";\n    for (int i = 0; i < 10; i++) {\n      // index 10 days starting with today\n      String d = format.format(i == 0 ? dmp.parseMath(\"/DAY\") : dmp.parseMath(\"/DAY+\" + i + \"DAYS\"));\n      assertU(adoc(\"id\", String.valueOf(i), \"tdate\", d));\n      if (i == 9) largestDate = d;\n    }\n    assertU(commit());\n    assertQ(\"Range filter must match only 10 documents\", req(\"q\", \"*:*\", \"fq\", \"tdate:[* TO *]\"), \"//*[@numFound='10']\");\n    req = req(\"q\", \"*:*\", \"fq\", \"tdate:[NOW/DAY TO NOW/DAY+5DAYS]\");\n    assertQ(\"Range filter must match only 6 documents\", req, \"//*[@numFound='6']\");\n\n    // Test Term Queries\n    assertU(adoc(\"id\", \"11\", \"tdate\", \"1995-12-31T23:59:59.999Z\"));\n    assertU(commit());\n    assertQ(\"Term query must match only 1 document\", req(\"q\", \"tdate:1995-12-31T23\\\\:59\\\\:59.999Z\"), \"//*[@numFound='1']\");\n    assertQ(\"Term query must match only 1 document\", req(\"q\", \"*:*\", \"fq\", \"tdate:1995-12-31T23\\\\:59\\\\:59.999Z\"), \"//*[@numFound='1']\");\n\n    // Sorting\n    assertQ(\"Sort descending does not work correctly on tdate fields\", req(\"q\", \"*:*\", \"sort\", \"tdate desc\"), \"//*[@numFound='11']\", \"//date[@name='tdate'][.='\" + largestDate + \"']\");\n    assertQ(\"Sort ascending does not work correctly on tdate fields\", req(\"q\", \"*:*\", \"sort\", \"tdate asc\"), \"//*[@numFound='11']\", \"//date[@name='tdate'][.='1995-12-31T23:59:59.999Z']\");\n\n    // Function queries\n    assertQ(\"Function queries does not work correctly on tdate fields\", req(\"q\", \"_val_:\\\"sum(tdate,1.0)\\\"\"), \"//*[@numFound='11']\", \"//date[@name='tdate'][.='\" + largestDate + \"']\");\n  }\n\n","sourceOld":"  @Test\n  public void testTrieDateRangeSearch() throws Exception {\n    for (int i = 0; i < 10; i++) {\n      assertU(adoc(\"id\", String.valueOf(i), \"tdate\", \"1995-12-31T23:\" + (i < 10 ? \"0\" + i : i) + \":59.999Z\"));\n    }\n    assertU(commit());\n    SolrQueryRequest req = req(\"q\", \"*:*\", \"fq\", \"tdate:[1995-12-31T23:00:59.999Z TO 1995-12-31T23:04:59.999Z]\");\n    assertQ(\"Range filter must match only 5 documents\", req, \"//*[@numFound='5']\");\n\n    // Test open ended range searches\n    assertQ(\"Range filter tint:[1995-12-31T23:00:59.999Z to *] must match 10 documents\", req(\"q\", \"*:*\", \"fq\", \"tdate:[1995-12-31T23:00:59.999Z TO *]\"), \"//*[@numFound='10']\");\n    assertQ(\"Range filter tint:[* to 1995-12-31T23:09:59.999Z] must match 10 documents\", req(\"q\", \"*:*\", \"fq\", \"tdate:[* TO 1995-12-31T23:09:59.999Z]\"), \"//*[@numFound='10']\");\n    assertQ(\"Range filter tint:[* to *] must match 10 documents\", req(\"q\", \"*:*\", \"fq\", \"tdate:[* TO *]\"), \"//*[@numFound='10']\");\n\n    // Test date math syntax\n    SimpleDateFormat format = new SimpleDateFormat(\"yyyy-MM-dd'T'HH:mm:ss'Z'\", Locale.US);\n    format.setTimeZone(TimeZone.getTimeZone(\"UTC\"));\n\n    assertU(delQ(\"*:*\"));\n    DateMathParser dmp = new DateMathParser(DateField.UTC, Locale.US);\n    String largestDate = \"\";\n    for (int i = 0; i < 10; i++) {\n      // index 10 days starting with today\n      String d = format.format(i == 0 ? dmp.parseMath(\"/DAY\") : dmp.parseMath(\"/DAY+\" + i + \"DAYS\"));\n      assertU(adoc(\"id\", String.valueOf(i), \"tdate\", d));\n      if (i == 9) largestDate = d;\n    }\n    assertU(commit());\n    assertQ(\"Range filter must match only 10 documents\", req(\"q\", \"*:*\", \"fq\", \"tdate:[* TO *]\"), \"//*[@numFound='10']\");\n    req = req(\"q\", \"*:*\", \"fq\", \"tdate:[NOW/DAY TO NOW/DAY+5DAYS]\");\n    assertQ(\"Range filter must match only 6 documents\", req, \"//*[@numFound='6']\");\n\n    // Test Term Queries\n    assertU(adoc(\"id\", \"11\", \"tdate\", \"1995-12-31T23:59:59.999Z\"));\n    assertU(commit());\n    assertQ(\"Term query must match only 1 document\", req(\"q\", \"tdate:1995-12-31T23\\\\:59\\\\:59.999Z\"), \"//*[@numFound='1']\");\n    assertQ(\"Term query must match only 1 document\", req(\"q\", \"*:*\", \"fq\", \"tdate:1995-12-31T23\\\\:59\\\\:59.999Z\"), \"//*[@numFound='1']\");\n\n    // Sorting\n    assertQ(\"Sort descending does not work correctly on tdate fields\", req(\"q\", \"*:*\", \"sort\", \"tdate desc\"), \"//*[@numFound='11']\", \"//date[@name='tdate'][.='\" + largestDate + \"']\");\n    assertQ(\"Sort ascending does not work correctly on tdate fields\", req(\"q\", \"*:*\", \"sort\", \"tdate asc\"), \"//*[@numFound='11']\", \"//date[@name='tdate'][.='1995-12-31T23:59:59.999Z']\");\n\n    // Function queries\n    assertQ(\"Function queries does not work correctly on tdate fields\", req(\"q\", \"_val_:\\\"sum(tdate,1.0)\\\"\"), \"//*[@numFound='11']\", \"//date[@name='tdate'][.='\" + largestDate + \"']\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2106271e380c198349e0f6eac0395bb462913fab","date":1397072894,"type":3,"author":"Steven Rowe","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/TestTrie#testTrieDateRangeSearch().mjava","pathOld":"solr/core/src/test/org/apache/solr/TestTrie#testTrieDateRangeSearch().mjava","sourceNew":"  @Test\n  public void testTrieDateRangeSearch() throws Exception {\n    for (int i = 0; i < 10; i++) {\n      assertU(adoc(\"id\", String.valueOf(i), \"tdate\", \"1995-12-31T23:\" + (i < 10 ? \"0\" + i : i) + \":59.999Z\"));\n    }\n    assertU(commit());\n    SolrQueryRequest req = req(\"q\", \"*:*\", \"fq\", \"tdate:[1995-12-31T23:00:59.999Z TO 1995-12-31T23:04:59.999Z]\");\n    assertQ(\"Range filter must match only 5 documents\", req, \"//*[@numFound='5']\");\n\n    // Test open ended range searches\n    assertQ(\"Range filter tint:[1995-12-31T23:00:59.999Z to *] must match 10 documents\", req(\"q\", \"*:*\", \"fq\", \"tdate:[1995-12-31T23:00:59.999Z TO *]\"), \"//*[@numFound='10']\");\n    assertQ(\"Range filter tint:[* to 1995-12-31T23:09:59.999Z] must match 10 documents\", req(\"q\", \"*:*\", \"fq\", \"tdate:[* TO 1995-12-31T23:09:59.999Z]\"), \"//*[@numFound='10']\");\n    assertQ(\"Range filter tint:[* to *] must match 10 documents\", req(\"q\", \"*:*\", \"fq\", \"tdate:[* TO *]\"), \"//*[@numFound='10']\");\n\n    // Test date math syntax\n    SimpleDateFormat format = new SimpleDateFormat(\"yyyy-MM-dd'T'HH:mm:ss'Z'\", Locale.ROOT);\n    format.setTimeZone(TimeZone.getTimeZone(\"UTC\"));\n\n    assertU(delQ(\"*:*\"));\n    DateMathParser dmp = new DateMathParser(TrieDateField.UTC, Locale.ROOT);\n    String largestDate = \"\";\n    for (int i = 0; i < 10; i++) {\n      // index 10 days starting with today\n      String d = format.format(i == 0 ? dmp.parseMath(\"/DAY\") : dmp.parseMath(\"/DAY+\" + i + \"DAYS\"));\n      assertU(adoc(\"id\", String.valueOf(i), \"tdate\", d));\n      if (i == 9) largestDate = d;\n    }\n    assertU(commit());\n    assertQ(\"Range filter must match only 10 documents\", req(\"q\", \"*:*\", \"fq\", \"tdate:[* TO *]\"), \"//*[@numFound='10']\");\n    req = req(\"q\", \"*:*\", \"fq\", \"tdate:[NOW/DAY TO NOW/DAY+5DAYS]\");\n    assertQ(\"Range filter must match only 6 documents\", req, \"//*[@numFound='6']\");\n\n    // Test Term Queries\n    assertU(adoc(\"id\", \"11\", \"tdate\", \"1995-12-31T23:59:59.999Z\"));\n    assertU(commit());\n    assertQ(\"Term query must match only 1 document\", req(\"q\", \"tdate:1995-12-31T23\\\\:59\\\\:59.999Z\"), \"//*[@numFound='1']\");\n    assertQ(\"Term query must match only 1 document\", req(\"q\", \"*:*\", \"fq\", \"tdate:1995-12-31T23\\\\:59\\\\:59.999Z\"), \"//*[@numFound='1']\");\n\n    // Sorting\n    assertQ(\"Sort descending does not work correctly on tdate fields\", req(\"q\", \"*:*\", \"sort\", \"tdate desc\"), \"//*[@numFound='11']\", \"//date[@name='tdate'][.='\" + largestDate + \"']\");\n    assertQ(\"Sort ascending does not work correctly on tdate fields\", req(\"q\", \"*:*\", \"sort\", \"tdate asc\"), \"//*[@numFound='11']\", \"//date[@name='tdate'][.='1995-12-31T23:59:59.999Z']\");\n\n    // Function queries\n    assertQ(\"Function queries does not work correctly on tdate fields\", req(\"q\", \"_val_:\\\"sum(tdate,1.0)\\\"\"), \"//*[@numFound='11']\", \"//date[@name='tdate'][.='\" + largestDate + \"']\");\n  }\n\n","sourceOld":"  @Test\n  public void testTrieDateRangeSearch() throws Exception {\n    for (int i = 0; i < 10; i++) {\n      assertU(adoc(\"id\", String.valueOf(i), \"tdate\", \"1995-12-31T23:\" + (i < 10 ? \"0\" + i : i) + \":59.999Z\"));\n    }\n    assertU(commit());\n    SolrQueryRequest req = req(\"q\", \"*:*\", \"fq\", \"tdate:[1995-12-31T23:00:59.999Z TO 1995-12-31T23:04:59.999Z]\");\n    assertQ(\"Range filter must match only 5 documents\", req, \"//*[@numFound='5']\");\n\n    // Test open ended range searches\n    assertQ(\"Range filter tint:[1995-12-31T23:00:59.999Z to *] must match 10 documents\", req(\"q\", \"*:*\", \"fq\", \"tdate:[1995-12-31T23:00:59.999Z TO *]\"), \"//*[@numFound='10']\");\n    assertQ(\"Range filter tint:[* to 1995-12-31T23:09:59.999Z] must match 10 documents\", req(\"q\", \"*:*\", \"fq\", \"tdate:[* TO 1995-12-31T23:09:59.999Z]\"), \"//*[@numFound='10']\");\n    assertQ(\"Range filter tint:[* to *] must match 10 documents\", req(\"q\", \"*:*\", \"fq\", \"tdate:[* TO *]\"), \"//*[@numFound='10']\");\n\n    // Test date math syntax\n    SimpleDateFormat format = new SimpleDateFormat(\"yyyy-MM-dd'T'HH:mm:ss'Z'\", Locale.ROOT);\n    format.setTimeZone(TimeZone.getTimeZone(\"UTC\"));\n\n    assertU(delQ(\"*:*\"));\n    DateMathParser dmp = new DateMathParser(DateField.UTC, Locale.ROOT);\n    String largestDate = \"\";\n    for (int i = 0; i < 10; i++) {\n      // index 10 days starting with today\n      String d = format.format(i == 0 ? dmp.parseMath(\"/DAY\") : dmp.parseMath(\"/DAY+\" + i + \"DAYS\"));\n      assertU(adoc(\"id\", String.valueOf(i), \"tdate\", d));\n      if (i == 9) largestDate = d;\n    }\n    assertU(commit());\n    assertQ(\"Range filter must match only 10 documents\", req(\"q\", \"*:*\", \"fq\", \"tdate:[* TO *]\"), \"//*[@numFound='10']\");\n    req = req(\"q\", \"*:*\", \"fq\", \"tdate:[NOW/DAY TO NOW/DAY+5DAYS]\");\n    assertQ(\"Range filter must match only 6 documents\", req, \"//*[@numFound='6']\");\n\n    // Test Term Queries\n    assertU(adoc(\"id\", \"11\", \"tdate\", \"1995-12-31T23:59:59.999Z\"));\n    assertU(commit());\n    assertQ(\"Term query must match only 1 document\", req(\"q\", \"tdate:1995-12-31T23\\\\:59\\\\:59.999Z\"), \"//*[@numFound='1']\");\n    assertQ(\"Term query must match only 1 document\", req(\"q\", \"*:*\", \"fq\", \"tdate:1995-12-31T23\\\\:59\\\\:59.999Z\"), \"//*[@numFound='1']\");\n\n    // Sorting\n    assertQ(\"Sort descending does not work correctly on tdate fields\", req(\"q\", \"*:*\", \"sort\", \"tdate desc\"), \"//*[@numFound='11']\", \"//date[@name='tdate'][.='\" + largestDate + \"']\");\n    assertQ(\"Sort ascending does not work correctly on tdate fields\", req(\"q\", \"*:*\", \"sort\", \"tdate asc\"), \"//*[@numFound='11']\", \"//date[@name='tdate'][.='1995-12-31T23:59:59.999Z']\");\n\n    // Function queries\n    assertQ(\"Function queries does not work correctly on tdate fields\", req(\"q\", \"_val_:\\\"sum(tdate,1.0)\\\"\"), \"//*[@numFound='11']\", \"//date[@name='tdate'][.='\" + largestDate + \"']\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0c38a05f7a7b43c2dabbd25f12f9941c64bb2331","date":1437383270,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/TestTrie#testTrieDateRangeSearch().mjava","pathOld":"solr/core/src/test/org/apache/solr/TestTrie#testTrieDateRangeSearch().mjava","sourceNew":"  @Test\n  public void testTrieDateRangeSearch() throws Exception {\n    for (int i = 0; i < 10; i++) {\n      assertU(adoc(\"id\", String.valueOf(i), \"tdate\", \"1995-12-31T23:\" + (i < 10 ? \"0\" + i : i) + \":59.999Z\"));\n    }\n    assertU(commit());\n    SolrQueryRequest req = req(\"q\", \"*:*\", \"fq\", \"tdate:[1995-12-31T23:00:59.999Z TO 1995-12-31T23:04:59.999Z]\");\n    assertQ(\"Range filter must match only 5 documents\", req, \"//*[@numFound='5']\");\n\n    // Test open ended range searches\n    assertQ(\"Range filter tint:[1995-12-31T23:00:59.999Z to *] must match 10 documents\", req(\"q\", \"*:*\", \"fq\", \"tdate:[1995-12-31T23:00:59.999Z TO *]\"), \"//*[@numFound='10']\");\n    assertQ(\"Range filter tint:[* to 1995-12-31T23:09:59.999Z] must match 10 documents\", req(\"q\", \"*:*\", \"fq\", \"tdate:[* TO 1995-12-31T23:09:59.999Z]\"), \"//*[@numFound='10']\");\n    assertQ(\"Range filter tint:[* to *] must match 10 documents\", req(\"q\", \"*:*\", \"fq\", \"tdate:[* TO *]\"), \"//*[@numFound='10']\");\n\n    // Test date math syntax\n    SimpleDateFormat format = new SimpleDateFormat(\"yyyy-MM-dd'T'HH:mm:ss'Z'\", Locale.ROOT);\n    format.setTimeZone(TimeZone.getTimeZone(\"UTC\"));\n\n    assertU(delQ(\"*:*\"));\n    DateMathParser dmp = new DateMathParser(DateFormatUtil.UTC, Locale.ROOT);\n    String largestDate = \"\";\n    for (int i = 0; i < 10; i++) {\n      // index 10 days starting with today\n      String d = format.format(i == 0 ? dmp.parseMath(\"/DAY\") : dmp.parseMath(\"/DAY+\" + i + \"DAYS\"));\n      assertU(adoc(\"id\", String.valueOf(i), \"tdate\", d));\n      if (i == 9) largestDate = d;\n    }\n    assertU(commit());\n    assertQ(\"Range filter must match only 10 documents\", req(\"q\", \"*:*\", \"fq\", \"tdate:[* TO *]\"), \"//*[@numFound='10']\");\n    req = req(\"q\", \"*:*\", \"fq\", \"tdate:[NOW/DAY TO NOW/DAY+5DAYS]\");\n    assertQ(\"Range filter must match only 6 documents\", req, \"//*[@numFound='6']\");\n\n    // Test Term Queries\n    assertU(adoc(\"id\", \"11\", \"tdate\", \"1995-12-31T23:59:59.999Z\"));\n    assertU(commit());\n    assertQ(\"Term query must match only 1 document\", req(\"q\", \"tdate:1995-12-31T23\\\\:59\\\\:59.999Z\"), \"//*[@numFound='1']\");\n    assertQ(\"Term query must match only 1 document\", req(\"q\", \"*:*\", \"fq\", \"tdate:1995-12-31T23\\\\:59\\\\:59.999Z\"), \"//*[@numFound='1']\");\n\n    // Sorting\n    assertQ(\"Sort descending does not work correctly on tdate fields\", req(\"q\", \"*:*\", \"sort\", \"tdate desc\"), \"//*[@numFound='11']\", \"//date[@name='tdate'][.='\" + largestDate + \"']\");\n    assertQ(\"Sort ascending does not work correctly on tdate fields\", req(\"q\", \"*:*\", \"sort\", \"tdate asc\"), \"//*[@numFound='11']\", \"//date[@name='tdate'][.='1995-12-31T23:59:59.999Z']\");\n\n    // Function queries\n    assertQ(\"Function queries does not work correctly on tdate fields\", req(\"q\", \"_val_:\\\"sum(tdate,1.0)\\\"\"), \"//*[@numFound='11']\", \"//date[@name='tdate'][.='\" + largestDate + \"']\");\n  }\n\n","sourceOld":"  @Test\n  public void testTrieDateRangeSearch() throws Exception {\n    for (int i = 0; i < 10; i++) {\n      assertU(adoc(\"id\", String.valueOf(i), \"tdate\", \"1995-12-31T23:\" + (i < 10 ? \"0\" + i : i) + \":59.999Z\"));\n    }\n    assertU(commit());\n    SolrQueryRequest req = req(\"q\", \"*:*\", \"fq\", \"tdate:[1995-12-31T23:00:59.999Z TO 1995-12-31T23:04:59.999Z]\");\n    assertQ(\"Range filter must match only 5 documents\", req, \"//*[@numFound='5']\");\n\n    // Test open ended range searches\n    assertQ(\"Range filter tint:[1995-12-31T23:00:59.999Z to *] must match 10 documents\", req(\"q\", \"*:*\", \"fq\", \"tdate:[1995-12-31T23:00:59.999Z TO *]\"), \"//*[@numFound='10']\");\n    assertQ(\"Range filter tint:[* to 1995-12-31T23:09:59.999Z] must match 10 documents\", req(\"q\", \"*:*\", \"fq\", \"tdate:[* TO 1995-12-31T23:09:59.999Z]\"), \"//*[@numFound='10']\");\n    assertQ(\"Range filter tint:[* to *] must match 10 documents\", req(\"q\", \"*:*\", \"fq\", \"tdate:[* TO *]\"), \"//*[@numFound='10']\");\n\n    // Test date math syntax\n    SimpleDateFormat format = new SimpleDateFormat(\"yyyy-MM-dd'T'HH:mm:ss'Z'\", Locale.ROOT);\n    format.setTimeZone(TimeZone.getTimeZone(\"UTC\"));\n\n    assertU(delQ(\"*:*\"));\n    DateMathParser dmp = new DateMathParser(TrieDateField.UTC, Locale.ROOT);\n    String largestDate = \"\";\n    for (int i = 0; i < 10; i++) {\n      // index 10 days starting with today\n      String d = format.format(i == 0 ? dmp.parseMath(\"/DAY\") : dmp.parseMath(\"/DAY+\" + i + \"DAYS\"));\n      assertU(adoc(\"id\", String.valueOf(i), \"tdate\", d));\n      if (i == 9) largestDate = d;\n    }\n    assertU(commit());\n    assertQ(\"Range filter must match only 10 documents\", req(\"q\", \"*:*\", \"fq\", \"tdate:[* TO *]\"), \"//*[@numFound='10']\");\n    req = req(\"q\", \"*:*\", \"fq\", \"tdate:[NOW/DAY TO NOW/DAY+5DAYS]\");\n    assertQ(\"Range filter must match only 6 documents\", req, \"//*[@numFound='6']\");\n\n    // Test Term Queries\n    assertU(adoc(\"id\", \"11\", \"tdate\", \"1995-12-31T23:59:59.999Z\"));\n    assertU(commit());\n    assertQ(\"Term query must match only 1 document\", req(\"q\", \"tdate:1995-12-31T23\\\\:59\\\\:59.999Z\"), \"//*[@numFound='1']\");\n    assertQ(\"Term query must match only 1 document\", req(\"q\", \"*:*\", \"fq\", \"tdate:1995-12-31T23\\\\:59\\\\:59.999Z\"), \"//*[@numFound='1']\");\n\n    // Sorting\n    assertQ(\"Sort descending does not work correctly on tdate fields\", req(\"q\", \"*:*\", \"sort\", \"tdate desc\"), \"//*[@numFound='11']\", \"//date[@name='tdate'][.='\" + largestDate + \"']\");\n    assertQ(\"Sort ascending does not work correctly on tdate fields\", req(\"q\", \"*:*\", \"sort\", \"tdate asc\"), \"//*[@numFound='11']\", \"//date[@name='tdate'][.='1995-12-31T23:59:59.999Z']\");\n\n    // Function queries\n    assertQ(\"Function queries does not work correctly on tdate fields\", req(\"q\", \"_val_:\\\"sum(tdate,1.0)\\\"\"), \"//*[@numFound='11']\", \"//date[@name='tdate'][.='\" + largestDate + \"']\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d3f6c7717a0f1decd1668144537943efcc70cd95","date":1459359762,"type":3,"author":"David Smiley","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/TestTrie#testTrieDateRangeSearch().mjava","pathOld":"solr/core/src/test/org/apache/solr/TestTrie#testTrieDateRangeSearch().mjava","sourceNew":"  @Test\n  public void testTrieDateRangeSearch() throws Exception {\n    for (int i = 0; i < 10; i++) {\n      assertU(adoc(\"id\", String.valueOf(i), \"tdate\", \"1995-12-31T23:\" + (i < 10 ? \"0\" + i : i) + \":59.999Z\"));\n    }\n    assertU(commit());\n    SolrQueryRequest req = req(\"q\", \"*:*\", \"fq\", \"tdate:[1995-12-31T23:00:59.999Z TO 1995-12-31T23:04:59.999Z]\");\n    assertQ(\"Range filter must match only 5 documents\", req, \"//*[@numFound='5']\");\n\n    // Test open ended range searches\n    assertQ(\"Range filter tint:[1995-12-31T23:00:59.999Z to *] must match 10 documents\", req(\"q\", \"*:*\", \"fq\", \"tdate:[1995-12-31T23:00:59.999Z TO *]\"), \"//*[@numFound='10']\");\n    assertQ(\"Range filter tint:[* to 1995-12-31T23:09:59.999Z] must match 10 documents\", req(\"q\", \"*:*\", \"fq\", \"tdate:[* TO 1995-12-31T23:09:59.999Z]\"), \"//*[@numFound='10']\");\n    assertQ(\"Range filter tint:[* to *] must match 10 documents\", req(\"q\", \"*:*\", \"fq\", \"tdate:[* TO *]\"), \"//*[@numFound='10']\");\n\n    // Test date math syntax\n    SimpleDateFormat format = new SimpleDateFormat(\"yyyy-MM-dd'T'HH:mm:ss'Z'\", Locale.ROOT);\n    format.setTimeZone(TimeZone.getTimeZone(\"UTC\"));\n\n    assertU(delQ(\"*:*\"));\n    DateMathParser dmp = new DateMathParser(DateMathParser.UTC, Locale.ROOT);\n    String largestDate = \"\";\n    for (int i = 0; i < 10; i++) {\n      // index 10 days starting with today\n      String d = format.format(i == 0 ? dmp.parseMath(\"/DAY\") : dmp.parseMath(\"/DAY+\" + i + \"DAYS\"));\n      assertU(adoc(\"id\", String.valueOf(i), \"tdate\", d));\n      if (i == 9) largestDate = d;\n    }\n    assertU(commit());\n    assertQ(\"Range filter must match only 10 documents\", req(\"q\", \"*:*\", \"fq\", \"tdate:[* TO *]\"), \"//*[@numFound='10']\");\n    req = req(\"q\", \"*:*\", \"fq\", \"tdate:[NOW/DAY TO NOW/DAY+5DAYS]\");\n    assertQ(\"Range filter must match only 6 documents\", req, \"//*[@numFound='6']\");\n\n    // Test Term Queries\n    assertU(adoc(\"id\", \"11\", \"tdate\", \"1995-12-31T23:59:59.999Z\"));\n    assertU(commit());\n    assertQ(\"Term query must match only 1 document\", req(\"q\", \"tdate:1995-12-31T23\\\\:59\\\\:59.999Z\"), \"//*[@numFound='1']\");\n    assertQ(\"Term query must match only 1 document\", req(\"q\", \"*:*\", \"fq\", \"tdate:1995-12-31T23\\\\:59\\\\:59.999Z\"), \"//*[@numFound='1']\");\n\n    // Sorting\n    assertQ(\"Sort descending does not work correctly on tdate fields\", req(\"q\", \"*:*\", \"sort\", \"tdate desc\"), \"//*[@numFound='11']\", \"//date[@name='tdate'][.='\" + largestDate + \"']\");\n    assertQ(\"Sort ascending does not work correctly on tdate fields\", req(\"q\", \"*:*\", \"sort\", \"tdate asc\"), \"//*[@numFound='11']\", \"//date[@name='tdate'][.='1995-12-31T23:59:59.999Z']\");\n\n    // Function queries\n    assertQ(\"Function queries does not work correctly on tdate fields\", req(\"q\", \"_val_:\\\"sum(tdate,1.0)\\\"\"), \"//*[@numFound='11']\", \"//date[@name='tdate'][.='\" + largestDate + \"']\");\n  }\n\n","sourceOld":"  @Test\n  public void testTrieDateRangeSearch() throws Exception {\n    for (int i = 0; i < 10; i++) {\n      assertU(adoc(\"id\", String.valueOf(i), \"tdate\", \"1995-12-31T23:\" + (i < 10 ? \"0\" + i : i) + \":59.999Z\"));\n    }\n    assertU(commit());\n    SolrQueryRequest req = req(\"q\", \"*:*\", \"fq\", \"tdate:[1995-12-31T23:00:59.999Z TO 1995-12-31T23:04:59.999Z]\");\n    assertQ(\"Range filter must match only 5 documents\", req, \"//*[@numFound='5']\");\n\n    // Test open ended range searches\n    assertQ(\"Range filter tint:[1995-12-31T23:00:59.999Z to *] must match 10 documents\", req(\"q\", \"*:*\", \"fq\", \"tdate:[1995-12-31T23:00:59.999Z TO *]\"), \"//*[@numFound='10']\");\n    assertQ(\"Range filter tint:[* to 1995-12-31T23:09:59.999Z] must match 10 documents\", req(\"q\", \"*:*\", \"fq\", \"tdate:[* TO 1995-12-31T23:09:59.999Z]\"), \"//*[@numFound='10']\");\n    assertQ(\"Range filter tint:[* to *] must match 10 documents\", req(\"q\", \"*:*\", \"fq\", \"tdate:[* TO *]\"), \"//*[@numFound='10']\");\n\n    // Test date math syntax\n    SimpleDateFormat format = new SimpleDateFormat(\"yyyy-MM-dd'T'HH:mm:ss'Z'\", Locale.ROOT);\n    format.setTimeZone(TimeZone.getTimeZone(\"UTC\"));\n\n    assertU(delQ(\"*:*\"));\n    DateMathParser dmp = new DateMathParser(DateFormatUtil.UTC, Locale.ROOT);\n    String largestDate = \"\";\n    for (int i = 0; i < 10; i++) {\n      // index 10 days starting with today\n      String d = format.format(i == 0 ? dmp.parseMath(\"/DAY\") : dmp.parseMath(\"/DAY+\" + i + \"DAYS\"));\n      assertU(adoc(\"id\", String.valueOf(i), \"tdate\", d));\n      if (i == 9) largestDate = d;\n    }\n    assertU(commit());\n    assertQ(\"Range filter must match only 10 documents\", req(\"q\", \"*:*\", \"fq\", \"tdate:[* TO *]\"), \"//*[@numFound='10']\");\n    req = req(\"q\", \"*:*\", \"fq\", \"tdate:[NOW/DAY TO NOW/DAY+5DAYS]\");\n    assertQ(\"Range filter must match only 6 documents\", req, \"//*[@numFound='6']\");\n\n    // Test Term Queries\n    assertU(adoc(\"id\", \"11\", \"tdate\", \"1995-12-31T23:59:59.999Z\"));\n    assertU(commit());\n    assertQ(\"Term query must match only 1 document\", req(\"q\", \"tdate:1995-12-31T23\\\\:59\\\\:59.999Z\"), \"//*[@numFound='1']\");\n    assertQ(\"Term query must match only 1 document\", req(\"q\", \"*:*\", \"fq\", \"tdate:1995-12-31T23\\\\:59\\\\:59.999Z\"), \"//*[@numFound='1']\");\n\n    // Sorting\n    assertQ(\"Sort descending does not work correctly on tdate fields\", req(\"q\", \"*:*\", \"sort\", \"tdate desc\"), \"//*[@numFound='11']\", \"//date[@name='tdate'][.='\" + largestDate + \"']\");\n    assertQ(\"Sort ascending does not work correctly on tdate fields\", req(\"q\", \"*:*\", \"sort\", \"tdate asc\"), \"//*[@numFound='11']\", \"//date[@name='tdate'][.='1995-12-31T23:59:59.999Z']\");\n\n    // Function queries\n    assertQ(\"Function queries does not work correctly on tdate fields\", req(\"q\", \"_val_:\\\"sum(tdate,1.0)\\\"\"), \"//*[@numFound='11']\", \"//date[@name='tdate'][.='\" + largestDate + \"']\");\n  }\n\n","bugFix":null,"bugIntro":["ba0bb1c61dbf71a82da9a3ea8cda3d481f703d29"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"ba0bb1c61dbf71a82da9a3ea8cda3d481f703d29","date":1463148204,"type":3,"author":"David Smiley","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/TestTrie#testTrieDateRangeSearch().mjava","pathOld":"solr/core/src/test/org/apache/solr/TestTrie#testTrieDateRangeSearch().mjava","sourceNew":"  @Test\n  public void testTrieDateRangeSearch() throws Exception {\n    for (int i = 0; i < 10; i++) {\n      assertU(adoc(\"id\", String.valueOf(i), \"tdate\", \"1995-12-31T23:\" + (i < 10 ? \"0\" + i : i) + \":59.999Z\"));\n    }\n    assertU(commit());\n    SolrQueryRequest req = req(\"q\", \"*:*\", \"fq\", \"tdate:[1995-12-31T23:00:59.999Z TO 1995-12-31T23:04:59.999Z]\");\n    assertQ(\"Range filter must match only 5 documents\", req, \"//*[@numFound='5']\");\n\n    // Test open ended range searches\n    assertQ(\"Range filter tint:[1995-12-31T23:00:59.999Z to *] must match 10 documents\", req(\"q\", \"*:*\", \"fq\", \"tdate:[1995-12-31T23:00:59.999Z TO *]\"), \"//*[@numFound='10']\");\n    assertQ(\"Range filter tint:[* to 1995-12-31T23:09:59.999Z] must match 10 documents\", req(\"q\", \"*:*\", \"fq\", \"tdate:[* TO 1995-12-31T23:09:59.999Z]\"), \"//*[@numFound='10']\");\n    assertQ(\"Range filter tint:[* to *] must match 10 documents\", req(\"q\", \"*:*\", \"fq\", \"tdate:[* TO *]\"), \"//*[@numFound='10']\");\n\n    // Test date math syntax\n    SimpleDateFormat format = new SimpleDateFormat(\"yyyy-MM-dd'T'HH:mm:ss'Z'\", Locale.ROOT);\n    format.setTimeZone(TimeZone.getTimeZone(\"UTC\"));\n\n    assertU(delQ(\"*:*\"));\n    DateMathParser dmp = new DateMathParser(DateMathParser.UTC);\n    String largestDate = \"\";\n    for (int i = 0; i < 10; i++) {\n      // index 10 days starting with today\n      String d = format.format(i == 0 ? dmp.parseMath(\"/DAY\") : dmp.parseMath(\"/DAY+\" + i + \"DAYS\"));\n      assertU(adoc(\"id\", String.valueOf(i), \"tdate\", d));\n      if (i == 9) largestDate = d;\n    }\n    assertU(commit());\n    assertQ(\"Range filter must match only 10 documents\", req(\"q\", \"*:*\", \"fq\", \"tdate:[* TO *]\"), \"//*[@numFound='10']\");\n    req = req(\"q\", \"*:*\", \"fq\", \"tdate:[NOW/DAY TO NOW/DAY+5DAYS]\");\n    assertQ(\"Range filter must match only 6 documents\", req, \"//*[@numFound='6']\");\n\n    // Test Term Queries\n    assertU(adoc(\"id\", \"11\", \"tdate\", \"1995-12-31T23:59:59.999Z\"));\n    assertU(commit());\n    assertQ(\"Term query must match only 1 document\", req(\"q\", \"tdate:1995-12-31T23\\\\:59\\\\:59.999Z\"), \"//*[@numFound='1']\");\n    assertQ(\"Term query must match only 1 document\", req(\"q\", \"*:*\", \"fq\", \"tdate:1995-12-31T23\\\\:59\\\\:59.999Z\"), \"//*[@numFound='1']\");\n\n    // Sorting\n    assertQ(\"Sort descending does not work correctly on tdate fields\", req(\"q\", \"*:*\", \"sort\", \"tdate desc\"), \"//*[@numFound='11']\", \"//date[@name='tdate'][.='\" + largestDate + \"']\");\n    assertQ(\"Sort ascending does not work correctly on tdate fields\", req(\"q\", \"*:*\", \"sort\", \"tdate asc\"), \"//*[@numFound='11']\", \"//date[@name='tdate'][.='1995-12-31T23:59:59.999Z']\");\n\n    // Function queries\n    assertQ(\"Function queries does not work correctly on tdate fields\", req(\"q\", \"_val_:\\\"sum(tdate,1.0)\\\"\"), \"//*[@numFound='11']\", \"//date[@name='tdate'][.='\" + largestDate + \"']\");\n  }\n\n","sourceOld":"  @Test\n  public void testTrieDateRangeSearch() throws Exception {\n    for (int i = 0; i < 10; i++) {\n      assertU(adoc(\"id\", String.valueOf(i), \"tdate\", \"1995-12-31T23:\" + (i < 10 ? \"0\" + i : i) + \":59.999Z\"));\n    }\n    assertU(commit());\n    SolrQueryRequest req = req(\"q\", \"*:*\", \"fq\", \"tdate:[1995-12-31T23:00:59.999Z TO 1995-12-31T23:04:59.999Z]\");\n    assertQ(\"Range filter must match only 5 documents\", req, \"//*[@numFound='5']\");\n\n    // Test open ended range searches\n    assertQ(\"Range filter tint:[1995-12-31T23:00:59.999Z to *] must match 10 documents\", req(\"q\", \"*:*\", \"fq\", \"tdate:[1995-12-31T23:00:59.999Z TO *]\"), \"//*[@numFound='10']\");\n    assertQ(\"Range filter tint:[* to 1995-12-31T23:09:59.999Z] must match 10 documents\", req(\"q\", \"*:*\", \"fq\", \"tdate:[* TO 1995-12-31T23:09:59.999Z]\"), \"//*[@numFound='10']\");\n    assertQ(\"Range filter tint:[* to *] must match 10 documents\", req(\"q\", \"*:*\", \"fq\", \"tdate:[* TO *]\"), \"//*[@numFound='10']\");\n\n    // Test date math syntax\n    SimpleDateFormat format = new SimpleDateFormat(\"yyyy-MM-dd'T'HH:mm:ss'Z'\", Locale.ROOT);\n    format.setTimeZone(TimeZone.getTimeZone(\"UTC\"));\n\n    assertU(delQ(\"*:*\"));\n    DateMathParser dmp = new DateMathParser(DateMathParser.UTC, Locale.ROOT);\n    String largestDate = \"\";\n    for (int i = 0; i < 10; i++) {\n      // index 10 days starting with today\n      String d = format.format(i == 0 ? dmp.parseMath(\"/DAY\") : dmp.parseMath(\"/DAY+\" + i + \"DAYS\"));\n      assertU(adoc(\"id\", String.valueOf(i), \"tdate\", d));\n      if (i == 9) largestDate = d;\n    }\n    assertU(commit());\n    assertQ(\"Range filter must match only 10 documents\", req(\"q\", \"*:*\", \"fq\", \"tdate:[* TO *]\"), \"//*[@numFound='10']\");\n    req = req(\"q\", \"*:*\", \"fq\", \"tdate:[NOW/DAY TO NOW/DAY+5DAYS]\");\n    assertQ(\"Range filter must match only 6 documents\", req, \"//*[@numFound='6']\");\n\n    // Test Term Queries\n    assertU(adoc(\"id\", \"11\", \"tdate\", \"1995-12-31T23:59:59.999Z\"));\n    assertU(commit());\n    assertQ(\"Term query must match only 1 document\", req(\"q\", \"tdate:1995-12-31T23\\\\:59\\\\:59.999Z\"), \"//*[@numFound='1']\");\n    assertQ(\"Term query must match only 1 document\", req(\"q\", \"*:*\", \"fq\", \"tdate:1995-12-31T23\\\\:59\\\\:59.999Z\"), \"//*[@numFound='1']\");\n\n    // Sorting\n    assertQ(\"Sort descending does not work correctly on tdate fields\", req(\"q\", \"*:*\", \"sort\", \"tdate desc\"), \"//*[@numFound='11']\", \"//date[@name='tdate'][.='\" + largestDate + \"']\");\n    assertQ(\"Sort ascending does not work correctly on tdate fields\", req(\"q\", \"*:*\", \"sort\", \"tdate asc\"), \"//*[@numFound='11']\", \"//date[@name='tdate'][.='1995-12-31T23:59:59.999Z']\");\n\n    // Function queries\n    assertQ(\"Function queries does not work correctly on tdate fields\", req(\"q\", \"_val_:\\\"sum(tdate,1.0)\\\"\"), \"//*[@numFound='11']\", \"//date[@name='tdate'][.='\" + largestDate + \"']\");\n  }\n\n","bugFix":["d3f6c7717a0f1decd1668144537943efcc70cd95"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0ad30c6a479e764150a3316e57263319775f1df2","date":1463395403,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/TestTrie#testTrieDateRangeSearch().mjava","pathOld":"solr/core/src/test/org/apache/solr/TestTrie#testTrieDateRangeSearch().mjava","sourceNew":"  @Test\n  public void testTrieDateRangeSearch() throws Exception {\n    for (int i = 0; i < 10; i++) {\n      assertU(adoc(\"id\", String.valueOf(i), \"tdate\", \"1995-12-31T23:\" + (i < 10 ? \"0\" + i : i) + \":59.999Z\"));\n    }\n    assertU(commit());\n    SolrQueryRequest req = req(\"q\", \"*:*\", \"fq\", \"tdate:[1995-12-31T23:00:59.999Z TO 1995-12-31T23:04:59.999Z]\");\n    assertQ(\"Range filter must match only 5 documents\", req, \"//*[@numFound='5']\");\n\n    // Test open ended range searches\n    assertQ(\"Range filter tint:[1995-12-31T23:00:59.999Z to *] must match 10 documents\", req(\"q\", \"*:*\", \"fq\", \"tdate:[1995-12-31T23:00:59.999Z TO *]\"), \"//*[@numFound='10']\");\n    assertQ(\"Range filter tint:[* to 1995-12-31T23:09:59.999Z] must match 10 documents\", req(\"q\", \"*:*\", \"fq\", \"tdate:[* TO 1995-12-31T23:09:59.999Z]\"), \"//*[@numFound='10']\");\n    assertQ(\"Range filter tint:[* to *] must match 10 documents\", req(\"q\", \"*:*\", \"fq\", \"tdate:[* TO *]\"), \"//*[@numFound='10']\");\n\n    // Test date math syntax\n    SimpleDateFormat format = new SimpleDateFormat(\"yyyy-MM-dd'T'HH:mm:ss'Z'\", Locale.ROOT);\n    format.setTimeZone(TimeZone.getTimeZone(\"UTC\"));\n\n    assertU(delQ(\"*:*\"));\n    DateMathParser dmp = new DateMathParser(DateMathParser.UTC);\n    String largestDate = \"\";\n    for (int i = 0; i < 10; i++) {\n      // index 10 days starting with today\n      String d = format.format(i == 0 ? dmp.parseMath(\"/DAY\") : dmp.parseMath(\"/DAY+\" + i + \"DAYS\"));\n      assertU(adoc(\"id\", String.valueOf(i), \"tdate\", d));\n      if (i == 9) largestDate = d;\n    }\n    assertU(commit());\n    assertQ(\"Range filter must match only 10 documents\", req(\"q\", \"*:*\", \"fq\", \"tdate:[* TO *]\"), \"//*[@numFound='10']\");\n    req = req(\"q\", \"*:*\", \"fq\", \"tdate:[NOW/DAY TO NOW/DAY+5DAYS]\");\n    assertQ(\"Range filter must match only 6 documents\", req, \"//*[@numFound='6']\");\n\n    // Test Term Queries\n    assertU(adoc(\"id\", \"11\", \"tdate\", \"1995-12-31T23:59:59.999Z\"));\n    assertU(commit());\n    assertQ(\"Term query must match only 1 document\", req(\"q\", \"tdate:1995-12-31T23\\\\:59\\\\:59.999Z\"), \"//*[@numFound='1']\");\n    assertQ(\"Term query must match only 1 document\", req(\"q\", \"*:*\", \"fq\", \"tdate:1995-12-31T23\\\\:59\\\\:59.999Z\"), \"//*[@numFound='1']\");\n\n    // Sorting\n    assertQ(\"Sort descending does not work correctly on tdate fields\", req(\"q\", \"*:*\", \"sort\", \"tdate desc\"), \"//*[@numFound='11']\", \"//date[@name='tdate'][.='\" + largestDate + \"']\");\n    assertQ(\"Sort ascending does not work correctly on tdate fields\", req(\"q\", \"*:*\", \"sort\", \"tdate asc\"), \"//*[@numFound='11']\", \"//date[@name='tdate'][.='1995-12-31T23:59:59.999Z']\");\n\n    // Function queries\n    assertQ(\"Function queries does not work correctly on tdate fields\", req(\"q\", \"_val_:\\\"sum(tdate,1.0)\\\"\"), \"//*[@numFound='11']\", \"//date[@name='tdate'][.='\" + largestDate + \"']\");\n  }\n\n","sourceOld":"  @Test\n  public void testTrieDateRangeSearch() throws Exception {\n    for (int i = 0; i < 10; i++) {\n      assertU(adoc(\"id\", String.valueOf(i), \"tdate\", \"1995-12-31T23:\" + (i < 10 ? \"0\" + i : i) + \":59.999Z\"));\n    }\n    assertU(commit());\n    SolrQueryRequest req = req(\"q\", \"*:*\", \"fq\", \"tdate:[1995-12-31T23:00:59.999Z TO 1995-12-31T23:04:59.999Z]\");\n    assertQ(\"Range filter must match only 5 documents\", req, \"//*[@numFound='5']\");\n\n    // Test open ended range searches\n    assertQ(\"Range filter tint:[1995-12-31T23:00:59.999Z to *] must match 10 documents\", req(\"q\", \"*:*\", \"fq\", \"tdate:[1995-12-31T23:00:59.999Z TO *]\"), \"//*[@numFound='10']\");\n    assertQ(\"Range filter tint:[* to 1995-12-31T23:09:59.999Z] must match 10 documents\", req(\"q\", \"*:*\", \"fq\", \"tdate:[* TO 1995-12-31T23:09:59.999Z]\"), \"//*[@numFound='10']\");\n    assertQ(\"Range filter tint:[* to *] must match 10 documents\", req(\"q\", \"*:*\", \"fq\", \"tdate:[* TO *]\"), \"//*[@numFound='10']\");\n\n    // Test date math syntax\n    SimpleDateFormat format = new SimpleDateFormat(\"yyyy-MM-dd'T'HH:mm:ss'Z'\", Locale.ROOT);\n    format.setTimeZone(TimeZone.getTimeZone(\"UTC\"));\n\n    assertU(delQ(\"*:*\"));\n    DateMathParser dmp = new DateMathParser(DateMathParser.UTC, Locale.ROOT);\n    String largestDate = \"\";\n    for (int i = 0; i < 10; i++) {\n      // index 10 days starting with today\n      String d = format.format(i == 0 ? dmp.parseMath(\"/DAY\") : dmp.parseMath(\"/DAY+\" + i + \"DAYS\"));\n      assertU(adoc(\"id\", String.valueOf(i), \"tdate\", d));\n      if (i == 9) largestDate = d;\n    }\n    assertU(commit());\n    assertQ(\"Range filter must match only 10 documents\", req(\"q\", \"*:*\", \"fq\", \"tdate:[* TO *]\"), \"//*[@numFound='10']\");\n    req = req(\"q\", \"*:*\", \"fq\", \"tdate:[NOW/DAY TO NOW/DAY+5DAYS]\");\n    assertQ(\"Range filter must match only 6 documents\", req, \"//*[@numFound='6']\");\n\n    // Test Term Queries\n    assertU(adoc(\"id\", \"11\", \"tdate\", \"1995-12-31T23:59:59.999Z\"));\n    assertU(commit());\n    assertQ(\"Term query must match only 1 document\", req(\"q\", \"tdate:1995-12-31T23\\\\:59\\\\:59.999Z\"), \"//*[@numFound='1']\");\n    assertQ(\"Term query must match only 1 document\", req(\"q\", \"*:*\", \"fq\", \"tdate:1995-12-31T23\\\\:59\\\\:59.999Z\"), \"//*[@numFound='1']\");\n\n    // Sorting\n    assertQ(\"Sort descending does not work correctly on tdate fields\", req(\"q\", \"*:*\", \"sort\", \"tdate desc\"), \"//*[@numFound='11']\", \"//date[@name='tdate'][.='\" + largestDate + \"']\");\n    assertQ(\"Sort ascending does not work correctly on tdate fields\", req(\"q\", \"*:*\", \"sort\", \"tdate asc\"), \"//*[@numFound='11']\", \"//date[@name='tdate'][.='1995-12-31T23:59:59.999Z']\");\n\n    // Function queries\n    assertQ(\"Function queries does not work correctly on tdate fields\", req(\"q\", \"_val_:\\\"sum(tdate,1.0)\\\"\"), \"//*[@numFound='11']\", \"//date[@name='tdate'][.='\" + largestDate + \"']\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d470c8182e92b264680e34081b75e70a9f2b3c89","date":1463985353,"type":3,"author":"Noble Paul","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/TestTrie#testTrieDateRangeSearch().mjava","pathOld":"solr/core/src/test/org/apache/solr/TestTrie#testTrieDateRangeSearch().mjava","sourceNew":"  @Test\n  public void testTrieDateRangeSearch() throws Exception {\n    for (int i = 0; i < 10; i++) {\n      assertU(adoc(\"id\", String.valueOf(i), \"tdate\", \"1995-12-31T23:\" + (i < 10 ? \"0\" + i : i) + \":59.999Z\"));\n    }\n    assertU(commit());\n    SolrQueryRequest req = req(\"q\", \"*:*\", \"fq\", \"tdate:[1995-12-31T23:00:59.999Z TO 1995-12-31T23:04:59.999Z]\");\n    assertQ(\"Range filter must match only 5 documents\", req, \"//*[@numFound='5']\");\n\n    // Test open ended range searches\n    assertQ(\"Range filter tint:[1995-12-31T23:00:59.999Z to *] must match 10 documents\", req(\"q\", \"*:*\", \"fq\", \"tdate:[1995-12-31T23:00:59.999Z TO *]\"), \"//*[@numFound='10']\");\n    assertQ(\"Range filter tint:[* to 1995-12-31T23:09:59.999Z] must match 10 documents\", req(\"q\", \"*:*\", \"fq\", \"tdate:[* TO 1995-12-31T23:09:59.999Z]\"), \"//*[@numFound='10']\");\n    assertQ(\"Range filter tint:[* to *] must match 10 documents\", req(\"q\", \"*:*\", \"fq\", \"tdate:[* TO *]\"), \"//*[@numFound='10']\");\n\n    // Test date math syntax\n    SimpleDateFormat format = new SimpleDateFormat(\"yyyy-MM-dd'T'HH:mm:ss'Z'\", Locale.ROOT);\n    format.setTimeZone(TimeZone.getTimeZone(\"UTC\"));\n\n    assertU(delQ(\"*:*\"));\n    DateMathParser dmp = new DateMathParser(DateMathParser.UTC);\n    String largestDate = \"\";\n    for (int i = 0; i < 10; i++) {\n      // index 10 days starting with today\n      String d = format.format(i == 0 ? dmp.parseMath(\"/DAY\") : dmp.parseMath(\"/DAY+\" + i + \"DAYS\"));\n      assertU(adoc(\"id\", String.valueOf(i), \"tdate\", d));\n      if (i == 9) largestDate = d;\n    }\n    assertU(commit());\n    assertQ(\"Range filter must match only 10 documents\", req(\"q\", \"*:*\", \"fq\", \"tdate:[* TO *]\"), \"//*[@numFound='10']\");\n    req = req(\"q\", \"*:*\", \"fq\", \"tdate:[NOW/DAY TO NOW/DAY+5DAYS]\");\n    assertQ(\"Range filter must match only 6 documents\", req, \"//*[@numFound='6']\");\n\n    // Test Term Queries\n    assertU(adoc(\"id\", \"11\", \"tdate\", \"1995-12-31T23:59:59.999Z\"));\n    assertU(commit());\n    assertQ(\"Term query must match only 1 document\", req(\"q\", \"tdate:1995-12-31T23\\\\:59\\\\:59.999Z\"), \"//*[@numFound='1']\");\n    assertQ(\"Term query must match only 1 document\", req(\"q\", \"*:*\", \"fq\", \"tdate:1995-12-31T23\\\\:59\\\\:59.999Z\"), \"//*[@numFound='1']\");\n\n    // Sorting\n    assertQ(\"Sort descending does not work correctly on tdate fields\", req(\"q\", \"*:*\", \"sort\", \"tdate desc\"), \"//*[@numFound='11']\", \"//date[@name='tdate'][.='\" + largestDate + \"']\");\n    assertQ(\"Sort ascending does not work correctly on tdate fields\", req(\"q\", \"*:*\", \"sort\", \"tdate asc\"), \"//*[@numFound='11']\", \"//date[@name='tdate'][.='1995-12-31T23:59:59.999Z']\");\n\n    // Function queries\n    assertQ(\"Function queries does not work correctly on tdate fields\", req(\"q\", \"_val_:\\\"sum(tdate,1.0)\\\"\"), \"//*[@numFound='11']\", \"//date[@name='tdate'][.='\" + largestDate + \"']\");\n  }\n\n","sourceOld":"  @Test\n  public void testTrieDateRangeSearch() throws Exception {\n    for (int i = 0; i < 10; i++) {\n      assertU(adoc(\"id\", String.valueOf(i), \"tdate\", \"1995-12-31T23:\" + (i < 10 ? \"0\" + i : i) + \":59.999Z\"));\n    }\n    assertU(commit());\n    SolrQueryRequest req = req(\"q\", \"*:*\", \"fq\", \"tdate:[1995-12-31T23:00:59.999Z TO 1995-12-31T23:04:59.999Z]\");\n    assertQ(\"Range filter must match only 5 documents\", req, \"//*[@numFound='5']\");\n\n    // Test open ended range searches\n    assertQ(\"Range filter tint:[1995-12-31T23:00:59.999Z to *] must match 10 documents\", req(\"q\", \"*:*\", \"fq\", \"tdate:[1995-12-31T23:00:59.999Z TO *]\"), \"//*[@numFound='10']\");\n    assertQ(\"Range filter tint:[* to 1995-12-31T23:09:59.999Z] must match 10 documents\", req(\"q\", \"*:*\", \"fq\", \"tdate:[* TO 1995-12-31T23:09:59.999Z]\"), \"//*[@numFound='10']\");\n    assertQ(\"Range filter tint:[* to *] must match 10 documents\", req(\"q\", \"*:*\", \"fq\", \"tdate:[* TO *]\"), \"//*[@numFound='10']\");\n\n    // Test date math syntax\n    SimpleDateFormat format = new SimpleDateFormat(\"yyyy-MM-dd'T'HH:mm:ss'Z'\", Locale.ROOT);\n    format.setTimeZone(TimeZone.getTimeZone(\"UTC\"));\n\n    assertU(delQ(\"*:*\"));\n    DateMathParser dmp = new DateMathParser(DateMathParser.UTC, Locale.ROOT);\n    String largestDate = \"\";\n    for (int i = 0; i < 10; i++) {\n      // index 10 days starting with today\n      String d = format.format(i == 0 ? dmp.parseMath(\"/DAY\") : dmp.parseMath(\"/DAY+\" + i + \"DAYS\"));\n      assertU(adoc(\"id\", String.valueOf(i), \"tdate\", d));\n      if (i == 9) largestDate = d;\n    }\n    assertU(commit());\n    assertQ(\"Range filter must match only 10 documents\", req(\"q\", \"*:*\", \"fq\", \"tdate:[* TO *]\"), \"//*[@numFound='10']\");\n    req = req(\"q\", \"*:*\", \"fq\", \"tdate:[NOW/DAY TO NOW/DAY+5DAYS]\");\n    assertQ(\"Range filter must match only 6 documents\", req, \"//*[@numFound='6']\");\n\n    // Test Term Queries\n    assertU(adoc(\"id\", \"11\", \"tdate\", \"1995-12-31T23:59:59.999Z\"));\n    assertU(commit());\n    assertQ(\"Term query must match only 1 document\", req(\"q\", \"tdate:1995-12-31T23\\\\:59\\\\:59.999Z\"), \"//*[@numFound='1']\");\n    assertQ(\"Term query must match only 1 document\", req(\"q\", \"*:*\", \"fq\", \"tdate:1995-12-31T23\\\\:59\\\\:59.999Z\"), \"//*[@numFound='1']\");\n\n    // Sorting\n    assertQ(\"Sort descending does not work correctly on tdate fields\", req(\"q\", \"*:*\", \"sort\", \"tdate desc\"), \"//*[@numFound='11']\", \"//date[@name='tdate'][.='\" + largestDate + \"']\");\n    assertQ(\"Sort ascending does not work correctly on tdate fields\", req(\"q\", \"*:*\", \"sort\", \"tdate asc\"), \"//*[@numFound='11']\", \"//date[@name='tdate'][.='1995-12-31T23:59:59.999Z']\");\n\n    // Function queries\n    assertQ(\"Function queries does not work correctly on tdate fields\", req(\"q\", \"_val_:\\\"sum(tdate,1.0)\\\"\"), \"//*[@numFound='11']\", \"//date[@name='tdate'][.='\" + largestDate + \"']\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/TestTrie#testTrieDateRangeSearch().mjava","pathOld":"solr/core/src/test/org/apache/solr/TestTrie#testTrieDateRangeSearch().mjava","sourceNew":"  @Test\n  public void testTrieDateRangeSearch() throws Exception {\n    for (int i = 0; i < 10; i++) {\n      assertU(adoc(\"id\", String.valueOf(i), \"tdate\", \"1995-12-31T23:\" + (i < 10 ? \"0\" + i : i) + \":59.999Z\"));\n    }\n    assertU(commit());\n    SolrQueryRequest req = req(\"q\", \"*:*\", \"fq\", \"tdate:[1995-12-31T23:00:59.999Z TO 1995-12-31T23:04:59.999Z]\");\n    assertQ(\"Range filter must match only 5 documents\", req, \"//*[@numFound='5']\");\n\n    // Test open ended range searches\n    assertQ(\"Range filter tint:[1995-12-31T23:00:59.999Z to *] must match 10 documents\", req(\"q\", \"*:*\", \"fq\", \"tdate:[1995-12-31T23:00:59.999Z TO *]\"), \"//*[@numFound='10']\");\n    assertQ(\"Range filter tint:[* to 1995-12-31T23:09:59.999Z] must match 10 documents\", req(\"q\", \"*:*\", \"fq\", \"tdate:[* TO 1995-12-31T23:09:59.999Z]\"), \"//*[@numFound='10']\");\n    assertQ(\"Range filter tint:[* to *] must match 10 documents\", req(\"q\", \"*:*\", \"fq\", \"tdate:[* TO *]\"), \"//*[@numFound='10']\");\n\n    // Test date math syntax\n    SimpleDateFormat format = new SimpleDateFormat(\"yyyy-MM-dd'T'HH:mm:ss'Z'\", Locale.ROOT);\n    format.setTimeZone(TimeZone.getTimeZone(\"UTC\"));\n\n    assertU(delQ(\"*:*\"));\n    DateMathParser dmp = new DateMathParser(DateMathParser.UTC);\n    String largestDate = \"\";\n    for (int i = 0; i < 10; i++) {\n      // index 10 days starting with today\n      String d = format.format(i == 0 ? dmp.parseMath(\"/DAY\") : dmp.parseMath(\"/DAY+\" + i + \"DAYS\"));\n      assertU(adoc(\"id\", String.valueOf(i), \"tdate\", d));\n      if (i == 9) largestDate = d;\n    }\n    assertU(commit());\n    assertQ(\"Range filter must match only 10 documents\", req(\"q\", \"*:*\", \"fq\", \"tdate:[* TO *]\"), \"//*[@numFound='10']\");\n    req = req(\"q\", \"*:*\", \"fq\", \"tdate:[NOW/DAY TO NOW/DAY+5DAYS]\");\n    assertQ(\"Range filter must match only 6 documents\", req, \"//*[@numFound='6']\");\n\n    // Test Term Queries\n    assertU(adoc(\"id\", \"11\", \"tdate\", \"1995-12-31T23:59:59.999Z\"));\n    assertU(commit());\n    assertQ(\"Term query must match only 1 document\", req(\"q\", \"tdate:1995-12-31T23\\\\:59\\\\:59.999Z\"), \"//*[@numFound='1']\");\n    assertQ(\"Term query must match only 1 document\", req(\"q\", \"*:*\", \"fq\", \"tdate:1995-12-31T23\\\\:59\\\\:59.999Z\"), \"//*[@numFound='1']\");\n\n    // Sorting\n    assertQ(\"Sort descending does not work correctly on tdate fields\", req(\"q\", \"*:*\", \"sort\", \"tdate desc\"), \"//*[@numFound='11']\", \"//date[@name='tdate'][.='\" + largestDate + \"']\");\n    assertQ(\"Sort ascending does not work correctly on tdate fields\", req(\"q\", \"*:*\", \"sort\", \"tdate asc\"), \"//*[@numFound='11']\", \"//date[@name='tdate'][.='1995-12-31T23:59:59.999Z']\");\n\n    // Function queries\n    assertQ(\"Function queries does not work correctly on tdate fields\", req(\"q\", \"_val_:\\\"sum(tdate,1.0)\\\"\"), \"//*[@numFound='11']\", \"//date[@name='tdate'][.='\" + largestDate + \"']\");\n  }\n\n","sourceOld":"  @Test\n  public void testTrieDateRangeSearch() throws Exception {\n    for (int i = 0; i < 10; i++) {\n      assertU(adoc(\"id\", String.valueOf(i), \"tdate\", \"1995-12-31T23:\" + (i < 10 ? \"0\" + i : i) + \":59.999Z\"));\n    }\n    assertU(commit());\n    SolrQueryRequest req = req(\"q\", \"*:*\", \"fq\", \"tdate:[1995-12-31T23:00:59.999Z TO 1995-12-31T23:04:59.999Z]\");\n    assertQ(\"Range filter must match only 5 documents\", req, \"//*[@numFound='5']\");\n\n    // Test open ended range searches\n    assertQ(\"Range filter tint:[1995-12-31T23:00:59.999Z to *] must match 10 documents\", req(\"q\", \"*:*\", \"fq\", \"tdate:[1995-12-31T23:00:59.999Z TO *]\"), \"//*[@numFound='10']\");\n    assertQ(\"Range filter tint:[* to 1995-12-31T23:09:59.999Z] must match 10 documents\", req(\"q\", \"*:*\", \"fq\", \"tdate:[* TO 1995-12-31T23:09:59.999Z]\"), \"//*[@numFound='10']\");\n    assertQ(\"Range filter tint:[* to *] must match 10 documents\", req(\"q\", \"*:*\", \"fq\", \"tdate:[* TO *]\"), \"//*[@numFound='10']\");\n\n    // Test date math syntax\n    SimpleDateFormat format = new SimpleDateFormat(\"yyyy-MM-dd'T'HH:mm:ss'Z'\", Locale.ROOT);\n    format.setTimeZone(TimeZone.getTimeZone(\"UTC\"));\n\n    assertU(delQ(\"*:*\"));\n    DateMathParser dmp = new DateMathParser(DateMathParser.UTC, Locale.ROOT);\n    String largestDate = \"\";\n    for (int i = 0; i < 10; i++) {\n      // index 10 days starting with today\n      String d = format.format(i == 0 ? dmp.parseMath(\"/DAY\") : dmp.parseMath(\"/DAY+\" + i + \"DAYS\"));\n      assertU(adoc(\"id\", String.valueOf(i), \"tdate\", d));\n      if (i == 9) largestDate = d;\n    }\n    assertU(commit());\n    assertQ(\"Range filter must match only 10 documents\", req(\"q\", \"*:*\", \"fq\", \"tdate:[* TO *]\"), \"//*[@numFound='10']\");\n    req = req(\"q\", \"*:*\", \"fq\", \"tdate:[NOW/DAY TO NOW/DAY+5DAYS]\");\n    assertQ(\"Range filter must match only 6 documents\", req, \"//*[@numFound='6']\");\n\n    // Test Term Queries\n    assertU(adoc(\"id\", \"11\", \"tdate\", \"1995-12-31T23:59:59.999Z\"));\n    assertU(commit());\n    assertQ(\"Term query must match only 1 document\", req(\"q\", \"tdate:1995-12-31T23\\\\:59\\\\:59.999Z\"), \"//*[@numFound='1']\");\n    assertQ(\"Term query must match only 1 document\", req(\"q\", \"*:*\", \"fq\", \"tdate:1995-12-31T23\\\\:59\\\\:59.999Z\"), \"//*[@numFound='1']\");\n\n    // Sorting\n    assertQ(\"Sort descending does not work correctly on tdate fields\", req(\"q\", \"*:*\", \"sort\", \"tdate desc\"), \"//*[@numFound='11']\", \"//date[@name='tdate'][.='\" + largestDate + \"']\");\n    assertQ(\"Sort ascending does not work correctly on tdate fields\", req(\"q\", \"*:*\", \"sort\", \"tdate asc\"), \"//*[@numFound='11']\", \"//date[@name='tdate'][.='1995-12-31T23:59:59.999Z']\");\n\n    // Function queries\n    assertQ(\"Function queries does not work correctly on tdate fields\", req(\"q\", \"_val_:\\\"sum(tdate,1.0)\\\"\"), \"//*[@numFound='11']\", \"//date[@name='tdate'][.='\" + largestDate + \"']\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"d3f6c7717a0f1decd1668144537943efcc70cd95":["0c38a05f7a7b43c2dabbd25f12f9941c64bb2331"],"c26f00b574427b55127e869b935845554afde1fa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","c903c3d15906a3da96b8c0c2fb704491005fdbdb"],"9279c7cd47f17e1e8b674a3741ff5f040bc680be":["c26f00b574427b55127e869b935845554afde1fa"],"0ad30c6a479e764150a3316e57263319775f1df2":["d3f6c7717a0f1decd1668144537943efcc70cd95","ba0bb1c61dbf71a82da9a3ea8cda3d481f703d29"],"2acf500f78aa12b92e371fd89c719291986b6b90":["c26f00b574427b55127e869b935845554afde1fa","9279c7cd47f17e1e8b674a3741ff5f040bc680be"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["d3f6c7717a0f1decd1668144537943efcc70cd95","d470c8182e92b264680e34081b75e70a9f2b3c89"],"0c38a05f7a7b43c2dabbd25f12f9941c64bb2331":["2106271e380c198349e0f6eac0395bb462913fab"],"d470c8182e92b264680e34081b75e70a9f2b3c89":["d3f6c7717a0f1decd1668144537943efcc70cd95","0ad30c6a479e764150a3316e57263319775f1df2"],"46d8ada1fff8d18cb197c38c7983225162599948":["c26f00b574427b55127e869b935845554afde1fa","2acf500f78aa12b92e371fd89c719291986b6b90"],"ba0bb1c61dbf71a82da9a3ea8cda3d481f703d29":["d3f6c7717a0f1decd1668144537943efcc70cd95"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"2106271e380c198349e0f6eac0395bb462913fab":["2acf500f78aa12b92e371fd89c719291986b6b90"],"fe33227f6805edab2036cbb80645cc4e2d1fa424":["c26f00b574427b55127e869b935845554afde1fa","2acf500f78aa12b92e371fd89c719291986b6b90"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a258fbb26824fd104ed795e5d9033d2d040049ee":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["d470c8182e92b264680e34081b75e70a9f2b3c89"]},"commit2Childs":{"d3f6c7717a0f1decd1668144537943efcc70cd95":["0ad30c6a479e764150a3316e57263319775f1df2","4cce5816ef15a48a0bc11e5d400497ee4301dd3b","d470c8182e92b264680e34081b75e70a9f2b3c89","ba0bb1c61dbf71a82da9a3ea8cda3d481f703d29"],"c26f00b574427b55127e869b935845554afde1fa":["9279c7cd47f17e1e8b674a3741ff5f040bc680be","2acf500f78aa12b92e371fd89c719291986b6b90","46d8ada1fff8d18cb197c38c7983225162599948","fe33227f6805edab2036cbb80645cc4e2d1fa424"],"9279c7cd47f17e1e8b674a3741ff5f040bc680be":["2acf500f78aa12b92e371fd89c719291986b6b90"],"0ad30c6a479e764150a3316e57263319775f1df2":["d470c8182e92b264680e34081b75e70a9f2b3c89"],"2acf500f78aa12b92e371fd89c719291986b6b90":["46d8ada1fff8d18cb197c38c7983225162599948","2106271e380c198349e0f6eac0395bb462913fab","fe33227f6805edab2036cbb80645cc4e2d1fa424"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"0c38a05f7a7b43c2dabbd25f12f9941c64bb2331":["d3f6c7717a0f1decd1668144537943efcc70cd95"],"d470c8182e92b264680e34081b75e70a9f2b3c89":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"46d8ada1fff8d18cb197c38c7983225162599948":[],"ba0bb1c61dbf71a82da9a3ea8cda3d481f703d29":["0ad30c6a479e764150a3316e57263319775f1df2"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["c26f00b574427b55127e869b935845554afde1fa"],"2106271e380c198349e0f6eac0395bb462913fab":["0c38a05f7a7b43c2dabbd25f12f9941c64bb2331"],"fe33227f6805edab2036cbb80645cc4e2d1fa424":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c26f00b574427b55127e869b935845554afde1fa","c903c3d15906a3da96b8c0c2fb704491005fdbdb","a258fbb26824fd104ed795e5d9033d2d040049ee"],"a258fbb26824fd104ed795e5d9033d2d040049ee":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","46d8ada1fff8d18cb197c38c7983225162599948","fe33227f6805edab2036cbb80645cc4e2d1fa424","a258fbb26824fd104ed795e5d9033d2d040049ee","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}