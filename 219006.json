{"path":"modules/suggest/src/java/org/apache/lucene/search/suggest/fst/FSTCompletion#collect(List[Completion],int,int,BytesRef,Arc[Object]).mjava","commits":[{"id":"7bf07f4ebadc7539de83a531e64678350d78ca26","date":1322776167,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"modules/suggest/src/java/org/apache/lucene/search/suggest/fst/FSTCompletion#collect(List[Completion],int,int,BytesRef,Arc[Object]).mjava","pathOld":"modules/suggest/src/java/org/apache/lucene/search/suggest/fst/FSTLookup#collect(List[LookupResult],int,float,StringBuilder,Arc[Object]).mjava","sourceNew":"  /**\n   * Recursive collect lookup results from the automaton subgraph starting at\n   * <code>arc</code>.\n   * \n   * @param num\n   *          Maximum number of results needed (early termination).\n   */\n  private boolean collect(List<Completion> res, int num, int bucket,\n      BytesRef output, Arc<Object> arc) throws IOException {\n    if (output.length == output.bytes.length) {\n      output.bytes = ArrayUtil.grow(output.bytes);\n    }\n    assert output.offset == 0;\n    output.bytes[output.length++] = (byte) arc.label;\n    \n    automaton.readFirstTargetArc(arc, arc);\n    while (true) {\n      if (arc.label == FST.END_LABEL) {\n        res.add(new Completion(output, bucket));\n        if (res.size() >= num) return true;\n      } else {\n        int save = output.length;\n        if (collect(res, num, bucket, output, new Arc<Object>().copyFrom(arc))) {\n          return true;\n        }\n        output.length = save;\n      }\n      \n      if (arc.isLast()) {\n        break;\n      }\n      automaton.readNextArc(arc);\n    }\n    return false;\n  }\n\n","sourceOld":"  /**\n   * Recursive collect lookup results from the automaton subgraph starting at <code>arc</code>.\n   * \n   * @param num Maximum number of results needed (early termination).\n   * @param weight Weight of all results found during this collection.\n   */\n  private boolean collect(List<LookupResult> res, int num, float weight, StringBuilder output, Arc<Object> arc) throws IOException {\n    output.append((char) arc.label);\n\n    automaton.readFirstTargetArc(arc, arc);\n    while (true) {\n      if (arc.label == FST.END_LABEL) {\n        res.add(new LookupResult(output.toString(), weight));\n        if (res.size() >= num)\n          return true;\n      } else {\n        int save = output.length();\n        if (collect(res, num, weight, output, new Arc<Object>().copyFrom(arc))) {\n          return true;\n        }\n        output.setLength(save);\n      }\n\n      if (arc.isLast()) {\n        break;\n      }\n      automaton.readNextArc(arc);        \n    }\n    return false;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/suggest/src/java/org/apache/lucene/search/suggest/fst/FSTCompletion#collect(List[Completion],int,int,BytesRef,Arc[Object]).mjava","pathOld":"modules/suggest/src/java/org/apache/lucene/search/suggest/fst/FSTCompletion#collect(List[Completion],int,int,BytesRef,Arc[Object]).mjava","sourceNew":"  /**\n   * Recursive collect lookup results from the automaton subgraph starting at\n   * <code>arc</code>.\n   * \n   * @param num\n   *          Maximum number of results needed (early termination).\n   */\n  private boolean collect(List<Completion> res, int num, int bucket,\n      BytesRef output, Arc<Object> arc) throws IOException {\n    if (output.length == output.bytes.length) {\n      output.bytes = ArrayUtil.grow(output.bytes);\n    }\n    assert output.offset == 0;\n    output.bytes[output.length++] = (byte) arc.label;\n    \n    automaton.readFirstTargetArc(arc, arc);\n    while (true) {\n      if (arc.label == FST.END_LABEL) {\n        res.add(new Completion(output, bucket));\n        if (res.size() >= num) return true;\n      } else {\n        int save = output.length;\n        if (collect(res, num, bucket, output, new Arc<Object>().copyFrom(arc))) {\n          return true;\n        }\n        output.length = save;\n      }\n      \n      if (arc.isLast()) {\n        break;\n      }\n      automaton.readNextArc(arc);\n    }\n    return false;\n  }\n\n","sourceOld":"  /**\n   * Recursive collect lookup results from the automaton subgraph starting at\n   * <code>arc</code>.\n   * \n   * @param num\n   *          Maximum number of results needed (early termination).\n   */\n  private boolean collect(List<Completion> res, int num, int bucket,\n      BytesRef output, Arc<Object> arc) throws IOException {\n    if (output.length == output.bytes.length) {\n      output.bytes = ArrayUtil.grow(output.bytes);\n    }\n    assert output.offset == 0;\n    output.bytes[output.length++] = (byte) arc.label;\n    \n    automaton.readFirstTargetArc(arc, arc);\n    while (true) {\n      if (arc.label == FST.END_LABEL) {\n        res.add(new Completion(output, bucket));\n        if (res.size() >= num) return true;\n      } else {\n        int save = output.length;\n        if (collect(res, num, bucket, output, new Arc<Object>().copyFrom(arc))) {\n          return true;\n        }\n        output.length = save;\n      }\n      \n      if (arc.isLast()) {\n        break;\n      }\n      automaton.readNextArc(arc);\n    }\n    return false;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["7bf07f4ebadc7539de83a531e64678350d78ca26"],"7bf07f4ebadc7539de83a531e64678350d78ca26":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b89678825b68eccaf09e6ab71675fc0b0af1e099"]},"commit2Childs":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"7bf07f4ebadc7539de83a531e64678350d78ca26":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["7bf07f4ebadc7539de83a531e64678350d78ca26"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}