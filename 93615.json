{"path":"solr/core/src/test/org/apache/solr/search/similarities/TestDefaultSimilarityFactory#testParams().mjava","commits":[{"id":"8aec175aa53c7af1baf595a8a4d333e670bfe94b","date":1340675955,"type":0,"author":"Chris M. Hostetter","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/search/similarities/TestDefaultSimilarityFactory#testParams().mjava","pathOld":"/dev/null","sourceNew":"  /** explicit params */\n  public void testParams() throws Exception {\n    Similarity sim = getSimilarity(\"text_overlap\");\n    assertEquals(DefaultSimilarity.class, sim.getClass());\n    assertEquals(false, ((DefaultSimilarity)sim).getDiscountOverlaps());\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fe33227f6805edab2036cbb80645cc4e2d1fa424","date":1342713534,"type":0,"author":"Michael McCandless","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/search/similarities/TestDefaultSimilarityFactory#testParams().mjava","pathOld":"/dev/null","sourceNew":"  /** explicit params */\n  public void testParams() throws Exception {\n    Similarity sim = getSimilarity(\"text_overlap\");\n    assertEquals(DefaultSimilarity.class, sim.getClass());\n    assertEquals(false, ((DefaultSimilarity)sim).getDiscountOverlaps());\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"81d0720146de53dd3a4a023d2a3d1089d86d748d","date":1442268215,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/search/similarities/TestDefaultSimilarityFactory#testParams().mjava","pathOld":"solr/core/src/test/org/apache/solr/search/similarities/TestDefaultSimilarityFactory#testParams().mjava","sourceNew":"  /** explicit params */\n  public void testParams() throws Exception {\n    Similarity sim = getSimilarity(\"text_overlap\");\n    assertEquals(ClassicSimilarity.class, sim.getClass());\n    assertEquals(false, ((ClassicSimilarity)sim).getDiscountOverlaps());\n  }\n\n","sourceOld":"  /** explicit params */\n  public void testParams() throws Exception {\n    Similarity sim = getSimilarity(\"text_overlap\");\n    assertEquals(DefaultSimilarity.class, sim.getClass());\n    assertEquals(false, ((DefaultSimilarity)sim).getDiscountOverlaps());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0d340859910d4dceee54b4c948c16d82109476e9","date":1446747594,"type":4,"author":"Chris M. Hostetter","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/core/src/test/org/apache/solr/search/similarities/TestDefaultSimilarityFactory#testParams().mjava","sourceNew":null,"sourceOld":"  /** explicit params */\n  public void testParams() throws Exception {\n    Similarity sim = getSimilarity(\"text_overlap\");\n    assertEquals(ClassicSimilarity.class, sim.getClass());\n    assertEquals(false, ((ClassicSimilarity)sim).getDiscountOverlaps());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b4d385347f072fe4bec27fd10aa036fb43648b98","date":1446749053,"type":0,"author":"Chris M. Hostetter","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/search/similarities/TestDefaultSimilarityFactory#testParams().mjava","pathOld":"/dev/null","sourceNew":"  /** explicit params */\n  public void testParams() throws Exception {\n    Similarity sim = getSimilarity(\"text_overlap\");\n    assertEquals(ClassicSimilarity.class, sim.getClass());\n    assertEquals(false, ((ClassicSimilarity)sim).getDiscountOverlaps());\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2f74cac9b012a2a02d55bf0b9497c963ced51b41","date":1446824750,"type":4,"author":"Chris M. Hostetter","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/core/src/test/org/apache/solr/search/similarities/TestDefaultSimilarityFactory#testParams().mjava","sourceNew":null,"sourceOld":"  /** explicit params */\n  public void testParams() throws Exception {\n    Similarity sim = getSimilarity(\"text_overlap\");\n    assertEquals(ClassicSimilarity.class, sim.getClass());\n    assertEquals(false, ((ClassicSimilarity)sim).getDiscountOverlaps());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"0d340859910d4dceee54b4c948c16d82109476e9":["81d0720146de53dd3a4a023d2a3d1089d86d748d"],"fe33227f6805edab2036cbb80645cc4e2d1fa424":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","8aec175aa53c7af1baf595a8a4d333e670bfe94b"],"b4d385347f072fe4bec27fd10aa036fb43648b98":["0d340859910d4dceee54b4c948c16d82109476e9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"2f74cac9b012a2a02d55bf0b9497c963ced51b41":["b4d385347f072fe4bec27fd10aa036fb43648b98"],"8aec175aa53c7af1baf595a8a4d333e670bfe94b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"81d0720146de53dd3a4a023d2a3d1089d86d748d":["8aec175aa53c7af1baf595a8a4d333e670bfe94b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["2f74cac9b012a2a02d55bf0b9497c963ced51b41"]},"commit2Childs":{"0d340859910d4dceee54b4c948c16d82109476e9":["b4d385347f072fe4bec27fd10aa036fb43648b98"],"fe33227f6805edab2036cbb80645cc4e2d1fa424":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["fe33227f6805edab2036cbb80645cc4e2d1fa424","8aec175aa53c7af1baf595a8a4d333e670bfe94b"],"b4d385347f072fe4bec27fd10aa036fb43648b98":["2f74cac9b012a2a02d55bf0b9497c963ced51b41"],"2f74cac9b012a2a02d55bf0b9497c963ced51b41":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"8aec175aa53c7af1baf595a8a4d333e670bfe94b":["fe33227f6805edab2036cbb80645cc4e2d1fa424","81d0720146de53dd3a4a023d2a3d1089d86d748d"],"81d0720146de53dd3a4a023d2a3d1089d86d748d":["0d340859910d4dceee54b4c948c16d82109476e9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["fe33227f6805edab2036cbb80645cc4e2d1fa424","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}