{"path":"solr/core/src/test/org/apache/solr/cloud/ChaosMonkeyNothingIsSafeTest.FullThrottleStoppableIndexingThread#FullThrottleStoppableIndexingThread(List[SolrClient],String,boolean).mjava","commits":[{"id":"98287baa2c8d136e801f366a73e27a23285b7b98","date":1427241813,"type":1,"author":"Ramkumar Aiyengar","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/ChaosMonkeyNothingIsSafeTest.FullThrottleStoppableIndexingThread#FullThrottleStoppableIndexingThread(List[SolrClient],String,boolean).mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/ChaosMonkeyNothingIsSafeTest.FullThrottleStopableIndexingThread#FullThrottleStopableIndexingThread(List[SolrClient],String,boolean).mjava","sourceNew":"    public FullThrottleStoppableIndexingThread(List<SolrClient> clients,\n                                               String id, boolean doDeletes) {\n      super(controlClient, cloudClient, id, doDeletes);\n      setName(\"FullThrottleStopableIndexingThread\");\n      setDaemon(true);\n      this.clients = clients;\n      HttpClientUtil.setConnectionTimeout(httpClient, clientConnectionTimeout);\n      HttpClientUtil.setSoTimeout(httpClient, clientSoTimeout);\n      cusc = new ConcurrentUpdateSolrClient(\n          ((HttpSolrClient) clients.get(0)).getBaseURL(), httpClient, 8,\n          2) {\n        @Override\n        public void handleError(Throwable ex) {\n          log.warn(\"cusc error\", ex);\n        }\n      };\n    }\n\n","sourceOld":"    public FullThrottleStopableIndexingThread(List<SolrClient> clients,\n        String id, boolean doDeletes) {\n      super(controlClient, cloudClient, id, doDeletes);\n      setName(\"FullThrottleStopableIndexingThread\");\n      setDaemon(true);\n      this.clients = clients;\n      HttpClientUtil.setConnectionTimeout(httpClient, 15000);\n      HttpClientUtil.setSoTimeout(httpClient, 15000);\n      cusc = new ConcurrentUpdateSolrClient(\n          ((HttpSolrClient) clients.get(0)).getBaseURL(), httpClient, 8,\n          2) {\n        @Override\n        public void handleError(Throwable ex) {\n          log.warn(\"cusc error\", ex);\n        }\n      };\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","date":1427779360,"type":0,"author":"Ryan Ernst","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/cloud/ChaosMonkeyNothingIsSafeTest.FullThrottleStoppableIndexingThread#FullThrottleStoppableIndexingThread(List[SolrClient],String,boolean).mjava","pathOld":"/dev/null","sourceNew":"    public FullThrottleStoppableIndexingThread(List<SolrClient> clients,\n                                               String id, boolean doDeletes) {\n      super(controlClient, cloudClient, id, doDeletes);\n      setName(\"FullThrottleStopableIndexingThread\");\n      setDaemon(true);\n      this.clients = clients;\n      HttpClientUtil.setConnectionTimeout(httpClient, clientConnectionTimeout);\n      HttpClientUtil.setSoTimeout(httpClient, clientSoTimeout);\n      cusc = new ConcurrentUpdateSolrClient(\n          ((HttpSolrClient) clients.get(0)).getBaseURL(), httpClient, 8,\n          2) {\n        @Override\n        public void handleError(Throwable ex) {\n          log.warn(\"cusc error\", ex);\n        }\n      };\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"859081acf00749f5dd462772c571d611d4a4d2db","date":1459527719,"type":3,"author":"markrmiller","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/ChaosMonkeyNothingIsSafeTest.FullThrottleStoppableIndexingThread#FullThrottleStoppableIndexingThread(List[SolrClient],String,boolean).mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/ChaosMonkeyNothingIsSafeTest.FullThrottleStoppableIndexingThread#FullThrottleStoppableIndexingThread(List[SolrClient],String,boolean).mjava","sourceNew":"    public FullThrottleStoppableIndexingThread(List<SolrClient> clients,\n                                               String id, boolean doDeletes) {\n      super(controlClient, cloudClient, id, doDeletes);\n      setName(\"FullThrottleStopableIndexingThread\");\n      setDaemon(true);\n      this.clients = clients;\n\n      cusc = new ConcurrentUpdateSolrClient(\n          ((HttpSolrClient) clients.get(0)).getBaseURL(), httpClient, 8,\n          2) {\n        @Override\n        public void handleError(Throwable ex) {\n          log.warn(\"cusc error\", ex);\n        }\n      };\n      cusc.setConnectionTimeout(10000);\n      cusc.setSoTimeout(clientSoTimeout);\n    }\n\n","sourceOld":"    public FullThrottleStoppableIndexingThread(List<SolrClient> clients,\n                                               String id, boolean doDeletes) {\n      super(controlClient, cloudClient, id, doDeletes);\n      setName(\"FullThrottleStopableIndexingThread\");\n      setDaemon(true);\n      this.clients = clients;\n      HttpClientUtil.setConnectionTimeout(httpClient, clientConnectionTimeout);\n      HttpClientUtil.setSoTimeout(httpClient, clientSoTimeout);\n      cusc = new ConcurrentUpdateSolrClient(\n          ((HttpSolrClient) clients.get(0)).getBaseURL(), httpClient, 8,\n          2) {\n        @Override\n        public void handleError(Throwable ex) {\n          log.warn(\"cusc error\", ex);\n        }\n      };\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e3c94a8b8bf47db4f968d9ae510ec8bbe1372088","date":1460069869,"type":3,"author":"Anshum Gupta","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/ChaosMonkeyNothingIsSafeTest.FullThrottleStoppableIndexingThread#FullThrottleStoppableIndexingThread(List[SolrClient],String,boolean).mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/ChaosMonkeyNothingIsSafeTest.FullThrottleStoppableIndexingThread#FullThrottleStoppableIndexingThread(List[SolrClient],String,boolean).mjava","sourceNew":"    public FullThrottleStoppableIndexingThread(List<SolrClient> clients,\n                                               String id, boolean doDeletes) {\n      super(controlClient, cloudClient, id, doDeletes);\n      setName(\"FullThrottleStopableIndexingThread\");\n      setDaemon(true);\n      this.clients = clients;\n\n      cusc = new ErrorLoggingConcurrentUpdateSolrClient(((HttpSolrClient) clients.get(0)).getBaseURL(), httpClient, 8, 2);\n      cusc.setConnectionTimeout(10000);\n      cusc.setSoTimeout(clientSoTimeout);\n    }\n\n","sourceOld":"    public FullThrottleStoppableIndexingThread(List<SolrClient> clients,\n                                               String id, boolean doDeletes) {\n      super(controlClient, cloudClient, id, doDeletes);\n      setName(\"FullThrottleStopableIndexingThread\");\n      setDaemon(true);\n      this.clients = clients;\n\n      cusc = new ConcurrentUpdateSolrClient(\n          ((HttpSolrClient) clients.get(0)).getBaseURL(), httpClient, 8,\n          2) {\n        @Override\n        public void handleError(Throwable ex) {\n          log.warn(\"cusc error\", ex);\n        }\n      };\n      cusc.setConnectionTimeout(10000);\n      cusc.setSoTimeout(clientSoTimeout);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5bdaf2cee03ff78b0a0cbf23df0095a3590b493b","date":1460110033,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/cloud/ChaosMonkeyNothingIsSafeTest.FullThrottleStoppableIndexingThread#FullThrottleStoppableIndexingThread(List[SolrClient],String,boolean).mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/ChaosMonkeyNothingIsSafeTest.FullThrottleStoppableIndexingThread#FullThrottleStoppableIndexingThread(List[SolrClient],String,boolean).mjava","sourceNew":"    public FullThrottleStoppableIndexingThread(List<SolrClient> clients,\n                                               String id, boolean doDeletes) {\n      super(controlClient, cloudClient, id, doDeletes);\n      setName(\"FullThrottleStopableIndexingThread\");\n      setDaemon(true);\n      this.clients = clients;\n\n      cusc = new ErrorLoggingConcurrentUpdateSolrClient(((HttpSolrClient) clients.get(0)).getBaseURL(), httpClient, 8, 2);\n      cusc.setConnectionTimeout(10000);\n      cusc.setSoTimeout(clientSoTimeout);\n    }\n\n","sourceOld":"    public FullThrottleStoppableIndexingThread(List<SolrClient> clients,\n                                               String id, boolean doDeletes) {\n      super(controlClient, cloudClient, id, doDeletes);\n      setName(\"FullThrottleStopableIndexingThread\");\n      setDaemon(true);\n      this.clients = clients;\n\n      cusc = new ConcurrentUpdateSolrClient(\n          ((HttpSolrClient) clients.get(0)).getBaseURL(), httpClient, 8,\n          2) {\n        @Override\n        public void handleError(Throwable ex) {\n          log.warn(\"cusc error\", ex);\n        }\n      };\n      cusc.setConnectionTimeout(10000);\n      cusc.setSoTimeout(clientSoTimeout);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"61c45e99cf6676da48f19d7511c73712ad39402b","date":1495508331,"type":4,"author":"Tomas Fernandez Lobbe","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/core/src/test/org/apache/solr/cloud/ChaosMonkeyNothingIsSafeTest.FullThrottleStoppableIndexingThread#FullThrottleStoppableIndexingThread(List[SolrClient],String,boolean).mjava","sourceNew":null,"sourceOld":"    public FullThrottleStoppableIndexingThread(List<SolrClient> clients,\n                                               String id, boolean doDeletes) {\n      super(controlClient, cloudClient, id, doDeletes);\n      setName(\"FullThrottleStopableIndexingThread\");\n      setDaemon(true);\n      this.clients = clients;\n\n      cusc = new ErrorLoggingConcurrentUpdateSolrClient(((HttpSolrClient) clients.get(0)).getBaseURL(), httpClient, 8, 2);\n      cusc.setConnectionTimeout(10000);\n      cusc.setSoTimeout(clientSoTimeout);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e9017cf144952056066919f1ebc7897ff9bd71b1","date":1496757600,"type":4,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"/dev/null","pathOld":"solr/core/src/test/org/apache/solr/cloud/ChaosMonkeyNothingIsSafeTest.FullThrottleStoppableIndexingThread#FullThrottleStoppableIndexingThread(List[SolrClient],String,boolean).mjava","sourceNew":null,"sourceOld":"    public FullThrottleStoppableIndexingThread(List<SolrClient> clients,\n                                               String id, boolean doDeletes) {\n      super(controlClient, cloudClient, id, doDeletes);\n      setName(\"FullThrottleStopableIndexingThread\");\n      setDaemon(true);\n      this.clients = clients;\n\n      cusc = new ErrorLoggingConcurrentUpdateSolrClient(((HttpSolrClient) clients.get(0)).getBaseURL(), httpClient, 8, 2);\n      cusc.setConnectionTimeout(10000);\n      cusc.setSoTimeout(clientSoTimeout);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"e9017cf144952056066919f1ebc7897ff9bd71b1":["5bdaf2cee03ff78b0a0cbf23df0095a3590b493b","61c45e99cf6676da48f19d7511c73712ad39402b"],"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","98287baa2c8d136e801f366a73e27a23285b7b98"],"859081acf00749f5dd462772c571d611d4a4d2db":["98287baa2c8d136e801f366a73e27a23285b7b98"],"61c45e99cf6676da48f19d7511c73712ad39402b":["5bdaf2cee03ff78b0a0cbf23df0095a3590b493b"],"e3c94a8b8bf47db4f968d9ae510ec8bbe1372088":["859081acf00749f5dd462772c571d611d4a4d2db"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"98287baa2c8d136e801f366a73e27a23285b7b98":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"5bdaf2cee03ff78b0a0cbf23df0095a3590b493b":["859081acf00749f5dd462772c571d611d4a4d2db","e3c94a8b8bf47db4f968d9ae510ec8bbe1372088"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["61c45e99cf6676da48f19d7511c73712ad39402b"]},"commit2Childs":{"e9017cf144952056066919f1ebc7897ff9bd71b1":[],"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":[],"859081acf00749f5dd462772c571d611d4a4d2db":["e3c94a8b8bf47db4f968d9ae510ec8bbe1372088","5bdaf2cee03ff78b0a0cbf23df0095a3590b493b"],"61c45e99cf6676da48f19d7511c73712ad39402b":["e9017cf144952056066919f1ebc7897ff9bd71b1","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"e3c94a8b8bf47db4f968d9ae510ec8bbe1372088":["5bdaf2cee03ff78b0a0cbf23df0095a3590b493b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","98287baa2c8d136e801f366a73e27a23285b7b98"],"5bdaf2cee03ff78b0a0cbf23df0095a3590b493b":["e9017cf144952056066919f1ebc7897ff9bd71b1","61c45e99cf6676da48f19d7511c73712ad39402b"],"98287baa2c8d136e801f366a73e27a23285b7b98":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","859081acf00749f5dd462772c571d611d4a4d2db"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["e9017cf144952056066919f1ebc7897ff9bd71b1","a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}