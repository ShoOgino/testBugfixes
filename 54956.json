{"path":"lucene/core/src/test/org/apache/lucene/document/TestDocument#testGetFieldsImmutable().mjava","commits":[{"id":"409324b31a1419d7c05a38211168cf317e39be77","date":1344866765,"type":0,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/document/TestDocument#testGetFieldsImmutable().mjava","pathOld":"/dev/null","sourceNew":"  public void testGetFieldsImmutable() {\n    Document doc = makeDocumentWithFields();\n    assertEquals(8, doc.getFields().size());\n    List<Field> fields = doc.getFields();\n    try {\n      fields.add( new StringField(\"name\", \"value\", Field.Store.NO) );\n      fail(\"Document.getFields() should return immutable List\");\n    }\n    catch (UnsupportedOperationException e) {\n      // OK\n    }\n\n    try {\n      fields.clear();\n      fail(\"Document.getFields() should return immutable List\");\n    }\n    catch (UnsupportedOperationException e) {\n      // OK\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["05fe562aa248790944d43cdd478f512572835ba0","8ff728f0ac9112fac26f50ef2a8e7580c2525e6c"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"1d028314cced5858683a1bb4741423d0f934257b","date":1346596535,"type":0,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/document/TestDocument#testGetFieldsImmutable().mjava","pathOld":"/dev/null","sourceNew":"  public void testGetFieldsImmutable() {\n    Document doc = makeDocumentWithFields();\n    assertEquals(8, doc.getFields().size());\n    List<Field> fields = doc.getFields();\n    try {\n      fields.add( new StringField(\"name\", \"value\", Field.Store.NO) );\n      fail(\"Document.getFields() should return immutable List\");\n    }\n    catch (UnsupportedOperationException e) {\n      // OK\n    }\n\n    try {\n      fields.clear();\n      fail(\"Document.getFields() should return immutable List\");\n    }\n    catch (UnsupportedOperationException e) {\n      // OK\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"8ff728f0ac9112fac26f50ef2a8e7580c2525e6c","date":1389897879,"type":3,"author":"Michael Busch","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/document/TestDocument#testGetFieldsImmutable().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/document/TestDocument#testGetFieldsImmutable().mjava","sourceNew":"  public void testGetFieldsImmutable() {\n    Document doc = makeDocumentWithFields();\n    assertEquals(10, doc.getFields().size());\n    List<Field> fields = doc.getFields();\n    try {\n      fields.add( new StringField(\"name\", \"value\", Field.Store.NO) );\n      fail(\"Document.getFields() should return immutable List\");\n    }\n    catch (UnsupportedOperationException e) {\n      // OK\n    }\n\n    try {\n      fields.clear();\n      fail(\"Document.getFields() should return immutable List\");\n    }\n    catch (UnsupportedOperationException e) {\n      // OK\n    }\n  }\n\n","sourceOld":"  public void testGetFieldsImmutable() {\n    Document doc = makeDocumentWithFields();\n    assertEquals(8, doc.getFields().size());\n    List<Field> fields = doc.getFields();\n    try {\n      fields.add( new StringField(\"name\", \"value\", Field.Store.NO) );\n      fail(\"Document.getFields() should return immutable List\");\n    }\n    catch (UnsupportedOperationException e) {\n      // OK\n    }\n\n    try {\n      fields.clear();\n      fail(\"Document.getFields() should return immutable List\");\n    }\n    catch (UnsupportedOperationException e) {\n      // OK\n    }\n  }\n\n","bugFix":["409324b31a1419d7c05a38211168cf317e39be77"],"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"6654c5f3ec2e4a84ef867c82d4eec872c2372c8c","date":1453060490,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/document/TestDocument#testGetFieldsImmutable().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/document/TestDocument#testGetFieldsImmutable().mjava","sourceNew":"  public void testGetFieldsImmutable() {\n    Document doc = makeDocumentWithFields();\n    assertEquals(10, doc.getFields().size());\n    List<IndexableField> fields = doc.getFields();\n    try {\n      fields.add( new StringField(\"name\", \"value\", Field.Store.NO) );\n      fail(\"Document.getFields() should return immutable List\");\n    }\n    catch (UnsupportedOperationException e) {\n      // OK\n    }\n\n    try {\n      fields.clear();\n      fail(\"Document.getFields() should return immutable List\");\n    }\n    catch (UnsupportedOperationException e) {\n      // OK\n    }\n  }\n\n","sourceOld":"  public void testGetFieldsImmutable() {\n    Document doc = makeDocumentWithFields();\n    assertEquals(10, doc.getFields().size());\n    List<Field> fields = doc.getFields();\n    try {\n      fields.add( new StringField(\"name\", \"value\", Field.Store.NO) );\n      fail(\"Document.getFields() should return immutable List\");\n    }\n    catch (UnsupportedOperationException e) {\n      // OK\n    }\n\n    try {\n      fields.clear();\n      fail(\"Document.getFields() should return immutable List\");\n    }\n    catch (UnsupportedOperationException e) {\n      // OK\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"05fe562aa248790944d43cdd478f512572835ba0","date":1455901667,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/document/TestDocument#testGetFieldsImmutable().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/document/TestDocument#testGetFieldsImmutable().mjava","sourceNew":"  /** test that Document.getFields() actually returns an immutable list */\n  public void testGetFieldsImmutable() {\n    Document doc = makeDocumentWithFields();\n    assertEquals(10, doc.getFields().size());\n    List<IndexableField> fields = doc.getFields();\n    expectThrows(UnsupportedOperationException.class, () -> {\n      fields.add(new StringField(\"name\", \"value\", Field.Store.NO));\n    });\n\n    expectThrows(UnsupportedOperationException.class, () -> {\n      fields.clear();\n    });\n  }\n\n","sourceOld":"  public void testGetFieldsImmutable() {\n    Document doc = makeDocumentWithFields();\n    assertEquals(10, doc.getFields().size());\n    List<IndexableField> fields = doc.getFields();\n    try {\n      fields.add( new StringField(\"name\", \"value\", Field.Store.NO) );\n      fail(\"Document.getFields() should return immutable List\");\n    }\n    catch (UnsupportedOperationException e) {\n      // OK\n    }\n\n    try {\n      fields.clear();\n      fail(\"Document.getFields() should return immutable List\");\n    }\n    catch (UnsupportedOperationException e) {\n      // OK\n    }\n  }\n\n","bugFix":["409324b31a1419d7c05a38211168cf317e39be77"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"409324b31a1419d7c05a38211168cf317e39be77":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"1d028314cced5858683a1bb4741423d0f934257b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","409324b31a1419d7c05a38211168cf317e39be77"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"05fe562aa248790944d43cdd478f512572835ba0":["6654c5f3ec2e4a84ef867c82d4eec872c2372c8c"],"8ff728f0ac9112fac26f50ef2a8e7580c2525e6c":["1d028314cced5858683a1bb4741423d0f934257b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["05fe562aa248790944d43cdd478f512572835ba0"],"6654c5f3ec2e4a84ef867c82d4eec872c2372c8c":["8ff728f0ac9112fac26f50ef2a8e7580c2525e6c"]},"commit2Childs":{"409324b31a1419d7c05a38211168cf317e39be77":["1d028314cced5858683a1bb4741423d0f934257b"],"1d028314cced5858683a1bb4741423d0f934257b":["8ff728f0ac9112fac26f50ef2a8e7580c2525e6c"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["409324b31a1419d7c05a38211168cf317e39be77","1d028314cced5858683a1bb4741423d0f934257b"],"05fe562aa248790944d43cdd478f512572835ba0":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"8ff728f0ac9112fac26f50ef2a8e7580c2525e6c":["6654c5f3ec2e4a84ef867c82d4eec872c2372c8c"],"6654c5f3ec2e4a84ef867c82d4eec872c2372c8c":["05fe562aa248790944d43cdd478f512572835ba0"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}