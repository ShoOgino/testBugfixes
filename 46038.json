{"path":"modules/benchmark/src/java/org/apache/lucene/benchmark/byTask/utils/Config#newRound().mjava","commits":[{"id":"ecc11368dc265bfdad90214f8bf5da99016ab1e2","date":1294144090,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"modules/benchmark/src/java/org/apache/lucene/benchmark/byTask/utils/Config#newRound().mjava","pathOld":"lucene/contrib/benchmark/src/java/org/apache/lucene/benchmark/byTask/utils/Config#newRound().mjava","sourceNew":"  /**\n   * Increment the round number, for config values that are extracted by round number.\n   *\n   * @return the new round number.\n   */\n  public int newRound() {\n    roundNumber++;\n\n    StringBuilder sb = new StringBuilder(\"--> Round \").append(roundNumber - 1).append(\"-->\").append(roundNumber);\n\n    // log changes in values\n    if (valByRound.size() > 0) {\n      sb.append(\": \");\n      for (final String name : valByRound.keySet()) {\n        Object a = valByRound.get(name);\n        if (a instanceof int[]) {\n          int ai[] = (int[]) a;\n          int n1 = (roundNumber - 1) % ai.length;\n          int n2 = roundNumber % ai.length;\n          sb.append(\"  \").append(name).append(\":\").append(ai[n1]).append(\"-->\").append(ai[n2]);\n        } else if (a instanceof double[]) {\n          double ad[] = (double[]) a;\n          int n1 = (roundNumber - 1) % ad.length;\n          int n2 = roundNumber % ad.length;\n          sb.append(\"  \").append(name).append(\":\").append(ad[n1]).append(\"-->\").append(ad[n2]);\n        } else if (a instanceof String[]) {\n          String ad[] = (String[]) a;\n          int n1 = (roundNumber - 1) % ad.length;\n          int n2 = roundNumber % ad.length;\n          sb.append(\"  \").append(name).append(\":\").append(ad[n1]).append(\"-->\").append(ad[n2]);\n        } else {\n          boolean ab[] = (boolean[]) a;\n          int n1 = (roundNumber - 1) % ab.length;\n          int n2 = roundNumber % ab.length;\n          sb.append(\"  \").append(name).append(\":\").append(ab[n1]).append(\"-->\").append(ab[n2]);\n        }\n      }\n    }\n\n    System.out.println();\n    System.out.println(sb.toString());\n    System.out.println();\n\n    return roundNumber;\n  }\n\n","sourceOld":"  /**\n   * Increment the round number, for config values that are extracted by round number.\n   *\n   * @return the new round number.\n   */\n  public int newRound() {\n    roundNumber++;\n\n    StringBuilder sb = new StringBuilder(\"--> Round \").append(roundNumber - 1).append(\"-->\").append(roundNumber);\n\n    // log changes in values\n    if (valByRound.size() > 0) {\n      sb.append(\": \");\n      for (final String name : valByRound.keySet()) {\n        Object a = valByRound.get(name);\n        if (a instanceof int[]) {\n          int ai[] = (int[]) a;\n          int n1 = (roundNumber - 1) % ai.length;\n          int n2 = roundNumber % ai.length;\n          sb.append(\"  \").append(name).append(\":\").append(ai[n1]).append(\"-->\").append(ai[n2]);\n        } else if (a instanceof double[]) {\n          double ad[] = (double[]) a;\n          int n1 = (roundNumber - 1) % ad.length;\n          int n2 = roundNumber % ad.length;\n          sb.append(\"  \").append(name).append(\":\").append(ad[n1]).append(\"-->\").append(ad[n2]);\n        } else if (a instanceof String[]) {\n          String ad[] = (String[]) a;\n          int n1 = (roundNumber - 1) % ad.length;\n          int n2 = roundNumber % ad.length;\n          sb.append(\"  \").append(name).append(\":\").append(ad[n1]).append(\"-->\").append(ad[n2]);\n        } else {\n          boolean ab[] = (boolean[]) a;\n          int n1 = (roundNumber - 1) % ab.length;\n          int n2 = roundNumber % ab.length;\n          sb.append(\"  \").append(name).append(\":\").append(ab[n1]).append(\"-->\").append(ab[n2]);\n        }\n      }\n    }\n\n    System.out.println();\n    System.out.println(sb.toString());\n    System.out.println();\n\n    return roundNumber;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"70ad682703b8585f5d0a637efec044d57ec05efb","date":1294259117,"type":0,"author":"Simon Willnauer","isMerge":true,"pathNew":"modules/benchmark/src/java/org/apache/lucene/benchmark/byTask/utils/Config#newRound().mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Increment the round number, for config values that are extracted by round number.\n   *\n   * @return the new round number.\n   */\n  public int newRound() {\n    roundNumber++;\n\n    StringBuilder sb = new StringBuilder(\"--> Round \").append(roundNumber - 1).append(\"-->\").append(roundNumber);\n\n    // log changes in values\n    if (valByRound.size() > 0) {\n      sb.append(\": \");\n      for (final String name : valByRound.keySet()) {\n        Object a = valByRound.get(name);\n        if (a instanceof int[]) {\n          int ai[] = (int[]) a;\n          int n1 = (roundNumber - 1) % ai.length;\n          int n2 = roundNumber % ai.length;\n          sb.append(\"  \").append(name).append(\":\").append(ai[n1]).append(\"-->\").append(ai[n2]);\n        } else if (a instanceof double[]) {\n          double ad[] = (double[]) a;\n          int n1 = (roundNumber - 1) % ad.length;\n          int n2 = roundNumber % ad.length;\n          sb.append(\"  \").append(name).append(\":\").append(ad[n1]).append(\"-->\").append(ad[n2]);\n        } else if (a instanceof String[]) {\n          String ad[] = (String[]) a;\n          int n1 = (roundNumber - 1) % ad.length;\n          int n2 = roundNumber % ad.length;\n          sb.append(\"  \").append(name).append(\":\").append(ad[n1]).append(\"-->\").append(ad[n2]);\n        } else {\n          boolean ab[] = (boolean[]) a;\n          int n1 = (roundNumber - 1) % ab.length;\n          int n2 = roundNumber % ab.length;\n          sb.append(\"  \").append(name).append(\":\").append(ab[n1]).append(\"-->\").append(ab[n2]);\n        }\n      }\n    }\n\n    System.out.println();\n    System.out.println(sb.toString());\n    System.out.println();\n\n    return roundNumber;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"868da859b43505d9d2a023bfeae6dd0c795f5295","date":1294948401,"type":1,"author":"Michael Busch","isMerge":true,"pathNew":"modules/benchmark/src/java/org/apache/lucene/benchmark/byTask/utils/Config#newRound().mjava","pathOld":"lucene/contrib/benchmark/src/java/org/apache/lucene/benchmark/byTask/utils/Config#newRound().mjava","sourceNew":"  /**\n   * Increment the round number, for config values that are extracted by round number.\n   *\n   * @return the new round number.\n   */\n  public int newRound() {\n    roundNumber++;\n\n    StringBuilder sb = new StringBuilder(\"--> Round \").append(roundNumber - 1).append(\"-->\").append(roundNumber);\n\n    // log changes in values\n    if (valByRound.size() > 0) {\n      sb.append(\": \");\n      for (final String name : valByRound.keySet()) {\n        Object a = valByRound.get(name);\n        if (a instanceof int[]) {\n          int ai[] = (int[]) a;\n          int n1 = (roundNumber - 1) % ai.length;\n          int n2 = roundNumber % ai.length;\n          sb.append(\"  \").append(name).append(\":\").append(ai[n1]).append(\"-->\").append(ai[n2]);\n        } else if (a instanceof double[]) {\n          double ad[] = (double[]) a;\n          int n1 = (roundNumber - 1) % ad.length;\n          int n2 = roundNumber % ad.length;\n          sb.append(\"  \").append(name).append(\":\").append(ad[n1]).append(\"-->\").append(ad[n2]);\n        } else if (a instanceof String[]) {\n          String ad[] = (String[]) a;\n          int n1 = (roundNumber - 1) % ad.length;\n          int n2 = roundNumber % ad.length;\n          sb.append(\"  \").append(name).append(\":\").append(ad[n1]).append(\"-->\").append(ad[n2]);\n        } else {\n          boolean ab[] = (boolean[]) a;\n          int n1 = (roundNumber - 1) % ab.length;\n          int n2 = roundNumber % ab.length;\n          sb.append(\"  \").append(name).append(\":\").append(ab[n1]).append(\"-->\").append(ab[n2]);\n        }\n      }\n    }\n\n    System.out.println();\n    System.out.println(sb.toString());\n    System.out.println();\n\n    return roundNumber;\n  }\n\n","sourceOld":"  /**\n   * Increment the round number, for config values that are extracted by round number.\n   *\n   * @return the new round number.\n   */\n  public int newRound() {\n    roundNumber++;\n\n    StringBuilder sb = new StringBuilder(\"--> Round \").append(roundNumber - 1).append(\"-->\").append(roundNumber);\n\n    // log changes in values\n    if (valByRound.size() > 0) {\n      sb.append(\": \");\n      for (final String name : valByRound.keySet()) {\n        Object a = valByRound.get(name);\n        if (a instanceof int[]) {\n          int ai[] = (int[]) a;\n          int n1 = (roundNumber - 1) % ai.length;\n          int n2 = roundNumber % ai.length;\n          sb.append(\"  \").append(name).append(\":\").append(ai[n1]).append(\"-->\").append(ai[n2]);\n        } else if (a instanceof double[]) {\n          double ad[] = (double[]) a;\n          int n1 = (roundNumber - 1) % ad.length;\n          int n2 = roundNumber % ad.length;\n          sb.append(\"  \").append(name).append(\":\").append(ad[n1]).append(\"-->\").append(ad[n2]);\n        } else if (a instanceof String[]) {\n          String ad[] = (String[]) a;\n          int n1 = (roundNumber - 1) % ad.length;\n          int n2 = roundNumber % ad.length;\n          sb.append(\"  \").append(name).append(\":\").append(ad[n1]).append(\"-->\").append(ad[n2]);\n        } else {\n          boolean ab[] = (boolean[]) a;\n          int n1 = (roundNumber - 1) % ab.length;\n          int n2 = roundNumber % ab.length;\n          sb.append(\"  \").append(name).append(\":\").append(ab[n1]).append(\"-->\").append(ab[n2]);\n        }\n      }\n    }\n\n    System.out.println();\n    System.out.println(sb.toString());\n    System.out.println();\n\n    return roundNumber;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/benchmark/src/java/org/apache/lucene/benchmark/byTask/utils/Config#newRound().mjava","pathOld":"modules/benchmark/src/java/org/apache/lucene/benchmark/byTask/utils/Config#newRound().mjava","sourceNew":"  /**\n   * Increment the round number, for config values that are extracted by round number.\n   *\n   * @return the new round number.\n   */\n  public int newRound() {\n    roundNumber++;\n\n    StringBuilder sb = new StringBuilder(\"--> Round \").append(roundNumber - 1).append(\"-->\").append(roundNumber);\n\n    // log changes in values\n    if (valByRound.size() > 0) {\n      sb.append(\": \");\n      for (final String name : valByRound.keySet()) {\n        Object a = valByRound.get(name);\n        if (a instanceof int[]) {\n          int ai[] = (int[]) a;\n          int n1 = (roundNumber - 1) % ai.length;\n          int n2 = roundNumber % ai.length;\n          sb.append(\"  \").append(name).append(\":\").append(ai[n1]).append(\"-->\").append(ai[n2]);\n        } else if (a instanceof double[]) {\n          double ad[] = (double[]) a;\n          int n1 = (roundNumber - 1) % ad.length;\n          int n2 = roundNumber % ad.length;\n          sb.append(\"  \").append(name).append(\":\").append(ad[n1]).append(\"-->\").append(ad[n2]);\n        } else if (a instanceof String[]) {\n          String ad[] = (String[]) a;\n          int n1 = (roundNumber - 1) % ad.length;\n          int n2 = roundNumber % ad.length;\n          sb.append(\"  \").append(name).append(\":\").append(ad[n1]).append(\"-->\").append(ad[n2]);\n        } else {\n          boolean ab[] = (boolean[]) a;\n          int n1 = (roundNumber - 1) % ab.length;\n          int n2 = roundNumber % ab.length;\n          sb.append(\"  \").append(name).append(\":\").append(ab[n1]).append(\"-->\").append(ab[n2]);\n        }\n      }\n    }\n\n    System.out.println();\n    System.out.println(sb.toString());\n    System.out.println();\n\n    return roundNumber;\n  }\n\n","sourceOld":"  /**\n   * Increment the round number, for config values that are extracted by round number.\n   *\n   * @return the new round number.\n   */\n  public int newRound() {\n    roundNumber++;\n\n    StringBuilder sb = new StringBuilder(\"--> Round \").append(roundNumber - 1).append(\"-->\").append(roundNumber);\n\n    // log changes in values\n    if (valByRound.size() > 0) {\n      sb.append(\": \");\n      for (final String name : valByRound.keySet()) {\n        Object a = valByRound.get(name);\n        if (a instanceof int[]) {\n          int ai[] = (int[]) a;\n          int n1 = (roundNumber - 1) % ai.length;\n          int n2 = roundNumber % ai.length;\n          sb.append(\"  \").append(name).append(\":\").append(ai[n1]).append(\"-->\").append(ai[n2]);\n        } else if (a instanceof double[]) {\n          double ad[] = (double[]) a;\n          int n1 = (roundNumber - 1) % ad.length;\n          int n2 = roundNumber % ad.length;\n          sb.append(\"  \").append(name).append(\":\").append(ad[n1]).append(\"-->\").append(ad[n2]);\n        } else if (a instanceof String[]) {\n          String ad[] = (String[]) a;\n          int n1 = (roundNumber - 1) % ad.length;\n          int n2 = roundNumber % ad.length;\n          sb.append(\"  \").append(name).append(\":\").append(ad[n1]).append(\"-->\").append(ad[n2]);\n        } else {\n          boolean ab[] = (boolean[]) a;\n          int n1 = (roundNumber - 1) % ab.length;\n          int n2 = roundNumber % ab.length;\n          sb.append(\"  \").append(name).append(\":\").append(ab[n1]).append(\"-->\").append(ab[n2]);\n        }\n      }\n    }\n\n    System.out.println();\n    System.out.println(sb.toString());\n    System.out.println();\n\n    return roundNumber;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"70ad682703b8585f5d0a637efec044d57ec05efb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","ecc11368dc265bfdad90214f8bf5da99016ab1e2"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["ecc11368dc265bfdad90214f8bf5da99016ab1e2"],"ecc11368dc265bfdad90214f8bf5da99016ab1e2":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"868da859b43505d9d2a023bfeae6dd0c795f5295":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","ecc11368dc265bfdad90214f8bf5da99016ab1e2"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b89678825b68eccaf09e6ab71675fc0b0af1e099"]},"commit2Childs":{"70ad682703b8585f5d0a637efec044d57ec05efb":[],"ecc11368dc265bfdad90214f8bf5da99016ab1e2":["70ad682703b8585f5d0a637efec044d57ec05efb","b89678825b68eccaf09e6ab71675fc0b0af1e099","868da859b43505d9d2a023bfeae6dd0c795f5295"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["70ad682703b8585f5d0a637efec044d57ec05efb","ecc11368dc265bfdad90214f8bf5da99016ab1e2","868da859b43505d9d2a023bfeae6dd0c795f5295"],"868da859b43505d9d2a023bfeae6dd0c795f5295":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["70ad682703b8585f5d0a637efec044d57ec05efb","868da859b43505d9d2a023bfeae6dd0c795f5295","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}