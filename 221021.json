{"path":"lucene/queries/src/java/org/apache/lucene/queries/CommonTermsQuery#equals(Object).mjava","commits":[{"id":"a194d3ac4639a7909ea614667b9a7632a6aa14d1","date":1355475351,"type":0,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/queries/src/java/org/apache/lucene/queries/CommonTermsQuery#equals(Object).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public boolean equals(Object obj) {\n    if (this == obj) return true;\n    if (!super.equals(obj)) return false;\n    if (getClass() != obj.getClass()) return false;\n    CommonTermsQuery other = (CommonTermsQuery) obj;\n    if (disableCoord != other.disableCoord) return false;\n    if (Float.floatToIntBits(highFreqBoost) != Float\n        .floatToIntBits(other.highFreqBoost)) return false;\n    if (highFreqOccur != other.highFreqOccur) return false;\n    if (Float.floatToIntBits(lowFreqBoost) != Float\n        .floatToIntBits(other.lowFreqBoost)) return false;\n    if (lowFreqOccur != other.lowFreqOccur) return false;\n    if (Float.floatToIntBits(maxTermFrequency) != Float\n        .floatToIntBits(other.maxTermFrequency)) return false;\n    if (minNrShouldMatch != other.minNrShouldMatch) return false;\n    if (terms == null) {\n      if (other.terms != null) return false;\n    } else if (!terms.equals(other.terms)) return false;\n    return true;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d3fcb70cf561547c7bb1506e0cf32ca7b1287064","date":1357616416,"type":0,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/queries/src/java/org/apache/lucene/queries/CommonTermsQuery#equals(Object).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public boolean equals(Object obj) {\n    if (this == obj) return true;\n    if (!super.equals(obj)) return false;\n    if (getClass() != obj.getClass()) return false;\n    CommonTermsQuery other = (CommonTermsQuery) obj;\n    if (disableCoord != other.disableCoord) return false;\n    if (Float.floatToIntBits(highFreqBoost) != Float\n        .floatToIntBits(other.highFreqBoost)) return false;\n    if (highFreqOccur != other.highFreqOccur) return false;\n    if (Float.floatToIntBits(lowFreqBoost) != Float\n        .floatToIntBits(other.lowFreqBoost)) return false;\n    if (lowFreqOccur != other.lowFreqOccur) return false;\n    if (Float.floatToIntBits(maxTermFrequency) != Float\n        .floatToIntBits(other.maxTermFrequency)) return false;\n    if (minNrShouldMatch != other.minNrShouldMatch) return false;\n    if (terms == null) {\n      if (other.terms != null) return false;\n    } else if (!terms.equals(other.terms)) return false;\n    return true;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"620f2c9cd3df8f77948c19b3165b5dc20700a5d5","date":1375193294,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/queries/src/java/org/apache/lucene/queries/CommonTermsQuery#equals(Object).mjava","pathOld":"lucene/queries/src/java/org/apache/lucene/queries/CommonTermsQuery#equals(Object).mjava","sourceNew":"  @Override\n  public boolean equals(Object obj) {\n    if (this == obj) return true;\n    if (!super.equals(obj)) return false;\n    if (getClass() != obj.getClass()) return false;\n    CommonTermsQuery other = (CommonTermsQuery) obj;\n    if (disableCoord != other.disableCoord) return false;\n    if (Float.floatToIntBits(highFreqBoost) != Float\n        .floatToIntBits(other.highFreqBoost)) return false;\n    if (highFreqOccur != other.highFreqOccur) return false;\n    if (Float.floatToIntBits(lowFreqBoost) != Float\n        .floatToIntBits(other.lowFreqBoost)) return false;\n    if (lowFreqOccur != other.lowFreqOccur) return false;\n    if (Float.floatToIntBits(maxTermFrequency) != Float\n        .floatToIntBits(other.maxTermFrequency)) return false;\n    if (lowFreqMinNrShouldMatch != other.lowFreqMinNrShouldMatch) return false;\n    if (highFreqMinNrShouldMatch != other.highFreqMinNrShouldMatch) return false;\n    if (terms == null) {\n      if (other.terms != null) return false;\n    } else if (!terms.equals(other.terms)) return false;\n    return true;\n  }\n\n","sourceOld":"  @Override\n  public boolean equals(Object obj) {\n    if (this == obj) return true;\n    if (!super.equals(obj)) return false;\n    if (getClass() != obj.getClass()) return false;\n    CommonTermsQuery other = (CommonTermsQuery) obj;\n    if (disableCoord != other.disableCoord) return false;\n    if (Float.floatToIntBits(highFreqBoost) != Float\n        .floatToIntBits(other.highFreqBoost)) return false;\n    if (highFreqOccur != other.highFreqOccur) return false;\n    if (Float.floatToIntBits(lowFreqBoost) != Float\n        .floatToIntBits(other.lowFreqBoost)) return false;\n    if (lowFreqOccur != other.lowFreqOccur) return false;\n    if (Float.floatToIntBits(maxTermFrequency) != Float\n        .floatToIntBits(other.maxTermFrequency)) return false;\n    if (minNrShouldMatch != other.minNrShouldMatch) return false;\n    if (terms == null) {\n      if (other.terms != null) return false;\n    } else if (!terms.equals(other.terms)) return false;\n    return true;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee","date":1376366778,"type":3,"author":"Han Jiang","isMerge":false,"pathNew":"lucene/queries/src/java/org/apache/lucene/queries/CommonTermsQuery#equals(Object).mjava","pathOld":"lucene/queries/src/java/org/apache/lucene/queries/CommonTermsQuery#equals(Object).mjava","sourceNew":"  @Override\n  public boolean equals(Object obj) {\n    if (this == obj) return true;\n    if (!super.equals(obj)) return false;\n    if (getClass() != obj.getClass()) return false;\n    CommonTermsQuery other = (CommonTermsQuery) obj;\n    if (disableCoord != other.disableCoord) return false;\n    if (Float.floatToIntBits(highFreqBoost) != Float\n        .floatToIntBits(other.highFreqBoost)) return false;\n    if (highFreqOccur != other.highFreqOccur) return false;\n    if (Float.floatToIntBits(lowFreqBoost) != Float\n        .floatToIntBits(other.lowFreqBoost)) return false;\n    if (lowFreqOccur != other.lowFreqOccur) return false;\n    if (Float.floatToIntBits(maxTermFrequency) != Float\n        .floatToIntBits(other.maxTermFrequency)) return false;\n    if (lowFreqMinNrShouldMatch != other.lowFreqMinNrShouldMatch) return false;\n    if (highFreqMinNrShouldMatch != other.highFreqMinNrShouldMatch) return false;\n    if (terms == null) {\n      if (other.terms != null) return false;\n    } else if (!terms.equals(other.terms)) return false;\n    return true;\n  }\n\n","sourceOld":"  @Override\n  public boolean equals(Object obj) {\n    if (this == obj) return true;\n    if (!super.equals(obj)) return false;\n    if (getClass() != obj.getClass()) return false;\n    CommonTermsQuery other = (CommonTermsQuery) obj;\n    if (disableCoord != other.disableCoord) return false;\n    if (Float.floatToIntBits(highFreqBoost) != Float\n        .floatToIntBits(other.highFreqBoost)) return false;\n    if (highFreqOccur != other.highFreqOccur) return false;\n    if (Float.floatToIntBits(lowFreqBoost) != Float\n        .floatToIntBits(other.lowFreqBoost)) return false;\n    if (lowFreqOccur != other.lowFreqOccur) return false;\n    if (Float.floatToIntBits(maxTermFrequency) != Float\n        .floatToIntBits(other.maxTermFrequency)) return false;\n    if (minNrShouldMatch != other.minNrShouldMatch) return false;\n    if (terms == null) {\n      if (other.terms != null) return false;\n    } else if (!terms.equals(other.terms)) return false;\n    return true;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0e7bc21595222ae4f75509300fbb7726691f387f","date":1464078795,"type":3,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/queries/src/java/org/apache/lucene/queries/CommonTermsQuery#equals(Object).mjava","pathOld":"lucene/queries/src/java/org/apache/lucene/queries/CommonTermsQuery#equals(Object).mjava","sourceNew":"  @Override\n  public boolean equals(Object other) {\n    return sameClassAs(other) &&\n           equalsTo(getClass().cast(other));\n  }\n\n","sourceOld":"  @Override\n  public boolean equals(Object obj) {\n    if (this == obj) return true;\n    if (!super.equals(obj)) return false;\n    if (getClass() != obj.getClass()) return false;\n    CommonTermsQuery other = (CommonTermsQuery) obj;\n    if (disableCoord != other.disableCoord) return false;\n    if (Float.floatToIntBits(highFreqBoost) != Float\n        .floatToIntBits(other.highFreqBoost)) return false;\n    if (highFreqOccur != other.highFreqOccur) return false;\n    if (Float.floatToIntBits(lowFreqBoost) != Float\n        .floatToIntBits(other.lowFreqBoost)) return false;\n    if (lowFreqOccur != other.lowFreqOccur) return false;\n    if (Float.floatToIntBits(maxTermFrequency) != Float\n        .floatToIntBits(other.maxTermFrequency)) return false;\n    if (lowFreqMinNrShouldMatch != other.lowFreqMinNrShouldMatch) return false;\n    if (highFreqMinNrShouldMatch != other.highFreqMinNrShouldMatch) return false;\n    if (terms == null) {\n      if (other.terms != null) return false;\n    } else if (!terms.equals(other.terms)) return false;\n    return true;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"lucene/queries/src/java/org/apache/lucene/queries/CommonTermsQuery#equals(Object).mjava","pathOld":"lucene/queries/src/java/org/apache/lucene/queries/CommonTermsQuery#equals(Object).mjava","sourceNew":"  @Override\n  public boolean equals(Object other) {\n    return sameClassAs(other) &&\n           equalsTo(getClass().cast(other));\n  }\n\n","sourceOld":"  @Override\n  public boolean equals(Object obj) {\n    if (this == obj) return true;\n    if (!super.equals(obj)) return false;\n    if (getClass() != obj.getClass()) return false;\n    CommonTermsQuery other = (CommonTermsQuery) obj;\n    if (disableCoord != other.disableCoord) return false;\n    if (Float.floatToIntBits(highFreqBoost) != Float\n        .floatToIntBits(other.highFreqBoost)) return false;\n    if (highFreqOccur != other.highFreqOccur) return false;\n    if (Float.floatToIntBits(lowFreqBoost) != Float\n        .floatToIntBits(other.lowFreqBoost)) return false;\n    if (lowFreqOccur != other.lowFreqOccur) return false;\n    if (Float.floatToIntBits(maxTermFrequency) != Float\n        .floatToIntBits(other.maxTermFrequency)) return false;\n    if (lowFreqMinNrShouldMatch != other.lowFreqMinNrShouldMatch) return false;\n    if (highFreqMinNrShouldMatch != other.highFreqMinNrShouldMatch) return false;\n    if (terms == null) {\n      if (other.terms != null) return false;\n    } else if (!terms.equals(other.terms)) return false;\n    return true;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"d3fcb70cf561547c7bb1506e0cf32ca7b1287064":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","a194d3ac4639a7909ea614667b9a7632a6aa14d1"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"0e7bc21595222ae4f75509300fbb7726691f387f":["620f2c9cd3df8f77948c19b3165b5dc20700a5d5"],"620f2c9cd3df8f77948c19b3165b5dc20700a5d5":["a194d3ac4639a7909ea614667b9a7632a6aa14d1"],"8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee":["a194d3ac4639a7909ea614667b9a7632a6aa14d1"],"a194d3ac4639a7909ea614667b9a7632a6aa14d1":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["620f2c9cd3df8f77948c19b3165b5dc20700a5d5","0e7bc21595222ae4f75509300fbb7726691f387f"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["0e7bc21595222ae4f75509300fbb7726691f387f"]},"commit2Childs":{"d3fcb70cf561547c7bb1506e0cf32ca7b1287064":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","a194d3ac4639a7909ea614667b9a7632a6aa14d1"],"0e7bc21595222ae4f75509300fbb7726691f387f":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"620f2c9cd3df8f77948c19b3165b5dc20700a5d5":["0e7bc21595222ae4f75509300fbb7726691f387f","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee":[],"a194d3ac4639a7909ea614667b9a7632a6aa14d1":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","620f2c9cd3df8f77948c19b3165b5dc20700a5d5","8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee","4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}