{"path":"solr/core/src/test/org/apache/solr/request/SimpleFacetsTest#testSimpleGroupedFacets(String).mjava","commits":[{"id":"3685dcafc9195b0631414aa4d422f788479e62b7","date":1364492243,"type":0,"author":"Chris M. Hostetter","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/request/SimpleFacetsTest#testSimpleGroupedFacets(String).mjava","pathOld":"/dev/null","sourceNew":"  private void testSimpleGroupedFacets(String facetLimit) throws Exception {\n    assertQ(\n        \"Return 5 docs with id range 1937 till 1940\",\n         req(\"id:[2000 TO 2004]\"),\n        \"*[count(//doc)=5]\"\n    );\n    assertQ(\n        \"Return two facet counts for field airport_a\",\n         req(\n             \"q\", \"*:*\",\n             \"fq\", \"id:[2000 TO 2004]\",\n             \"group\", \"true\",\n             \"group.facet\", \"true\",\n             \"group.field\", \"hotel_s1\",\n             \"facet\", \"true\",\n             \"facet.limit\", facetLimit, \n             \"facet.field\", \"airport_s1\"\n         ),\n        \"//lst[@name='facet_fields']/lst[@name='airport_s1']\",\n        \"*[count(//lst[@name='airport_s1']/int)=2]\",\n        \"//lst[@name='airport_s1']/int[@name='ams'][.='2']\",\n        \"//lst[@name='airport_s1']/int[@name='dus'][.='1']\"\n    );\n    assertQ(\n        \"Return one facet count for field airport_a using facet.offset\",\n         req(\n             \"q\", \"*:*\",\n             \"fq\", \"id:[2000 TO 2004]\",\n             \"group\", \"true\",\n             \"group.facet\", \"true\",\n             \"group.field\", \"hotel_s1\",\n             \"facet\", \"true\",\n             \"facet.offset\", \"1\", \n             \"facet.limit\", facetLimit, \n             \"facet.field\", \"airport_s1\"\n         ),\n        \"//lst[@name='facet_fields']/lst[@name='airport_s1']\",\n        \"*[count(//lst[@name='airport_s1']/int)=1]\",\n        \"//lst[@name='airport_s1']/int[@name='dus'][.='1']\"\n    );\n    assertQ(\n        \"Return two facet counts for field airport_a with fq\",\n         req(\n             \"q\", \"*:*\",\n             \"fq\", \"id:[2000 TO 2004]\",\n             \"fq\", \"duration_i1:5\",\n             \"group\", \"true\",\n             \"group.facet\", \"true\",\n             \"group.field\", \"hotel_s1\",\n             \"facet\", \"true\",\n             \"facet.limit\", facetLimit, \n             \"facet.field\", \"airport_s1\"\n         ),\n        \"//lst[@name='facet_fields']/lst[@name='airport_s1']\",\n        \"*[count(//lst[@name='airport_s1']/int)=2]\",\n        \"//lst[@name='airport_s1']/int[@name='ams'][.='2']\",\n        \"//lst[@name='airport_s1']/int[@name='dus'][.='0']\"\n    );\n    assertQ(\n        \"Return one facet count for field airport_s1 with prefix a\",\n         req(\n             \"q\", \"*:*\",\n             \"fq\", \"id:[2000 TO 2004]\",\n             \"group\", \"true\",\n             \"group.facet\", \"true\",\n             \"group.field\", \"hotel_s1\",\n             \"facet\", \"true\",\n             \"facet.field\", \"airport_s1\",\n             \"facet.limit\", facetLimit, \n             \"facet.prefix\", \"a\"\n         ),\n        \"//lst[@name='facet_fields']/lst[@name='airport_s1']\",\n        \"*[count(//lst[@name='airport_s1']/int)=1]\",\n        \"//lst[@name='airport_s1']/int[@name='ams'][.='2']\"\n    );\n    \n    try {\n      h.query(\n           req(\n               \"q\", \"*:*\",\n               \"fq\", \"id:[2000 TO 2004]\",\n               \"group.facet\", \"true\",\n               \"facet\", \"true\",\n               \"facet.field\", \"airport_s1\",\n               \"facet.prefix\", \"a\"\n           )\n      );\n      fail(\"Exception should have been thrown\");\n    } catch (SolrException e) {\n      assertEquals(SolrException.ErrorCode.BAD_REQUEST.code, e.code());\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["7de000bbb5f66603221a528f0fe972afe72a6b97","aa62c79a7afa4d7f22e1f71b883659f3213d7db1"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"aa62c79a7afa4d7f22e1f71b883659f3213d7db1","date":1435334422,"type":3,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/request/SimpleFacetsTest#testSimpleGroupedFacets(String).mjava","pathOld":"solr/core/src/test/org/apache/solr/request/SimpleFacetsTest#testSimpleGroupedFacets(String).mjava","sourceNew":"  private void testSimpleGroupedFacets(String facetLimit) throws Exception {\n    assertQ(\n        \"Return 5 docs with id range 1937 till 1940\",\n         req(\"id:[2000 TO 2004]\"),\n        \"*[count(//doc)=5]\"\n    );\n    assertQ(\n        \"Return two facet counts for field airport_a\",\n         req(\n             \"q\", \"*:*\",\n             \"fq\", \"id:[2000 TO 2004]\",\n             \"group\", \"true\",\n             \"group.facet\", \"true\",\n             \"group.field\", \"hotel_s1\",\n             \"facet\", \"true\",\n             \"facet.limit\", facetLimit,\n             \"facet.field\", \"airport_s1\"\n         ),\n        \"//lst[@name='facet_fields']/lst[@name='airport_s1']\",\n        \"*[count(//lst[@name='airport_s1']/int)=2]\",\n        \"//lst[@name='airport_s1']/int[@name='ams'][.='2']\",\n        \"//lst[@name='airport_s1']/int[@name='dus'][.='1']\"\n    );\n    assertQ(\n        \"Return one facet count for field airport_a using facet.offset\",\n         req(\n             \"q\", \"*:*\",\n             \"fq\", \"id:[2000 TO 2004]\",\n             \"group\", \"true\",\n             \"group.facet\", \"true\",\n             \"group.field\", \"hotel_s1\",\n             \"facet\", \"true\",\n             \"facet.offset\", \"1\",\n             \"facet.limit\", facetLimit,\n             \"facet.field\", \"airport_s1\"\n         ),\n        \"//lst[@name='facet_fields']/lst[@name='airport_s1']\",\n        \"*[count(//lst[@name='airport_s1']/int)=1]\",\n        \"//lst[@name='airport_s1']/int[@name='dus'][.='1']\"\n    );\n    assertQ(\n        \"Return two facet counts for field airport_a with fq\",\n         req(\n             \"q\", \"*:*\",\n             \"fq\", \"id:[2000 TO 2004]\",\n             \"fq\", \"duration_i1:5\",\n             \"group\", \"true\",\n             \"group.facet\", \"true\",\n             \"group.field\", \"hotel_s1\",\n             \"facet\", \"true\",\n             \"facet.limit\", facetLimit,\n             \"facet.field\", \"airport_s1\"\n         ),\n        \"//lst[@name='facet_fields']/lst[@name='airport_s1']\",\n        \"*[count(//lst[@name='airport_s1']/int)=2]\",\n        \"//lst[@name='airport_s1']/int[@name='ams'][.='2']\",\n        \"//lst[@name='airport_s1']/int[@name='dus'][.='0']\"\n    );\n    assertQ(\n        \"Return one facet count for field airport_s1 with prefix a\",\n         req(\n             \"q\", \"*:*\",\n             \"fq\", \"id:[2000 TO 2004]\",\n             \"group\", \"true\",\n             \"group.facet\", \"true\",\n             \"group.field\", \"hotel_s1\",\n             \"facet\", \"true\",\n             \"facet.field\", \"airport_s1\",\n             \"facet.limit\", facetLimit,\n             \"facet.prefix\", \"a\"\n         ),\n        \"//lst[@name='facet_fields']/lst[@name='airport_s1']\",\n        \"*[count(//lst[@name='airport_s1']/int)=1]\",\n        \"//lst[@name='airport_s1']/int[@name='ams'][.='2']\"\n    );\n    \n    try {\n      h.query(\n           req(\n               \"q\", \"*:*\",\n               \"fq\", \"id:[2000 TO 2004]\",\n               \"group.facet\", \"true\",\n               \"facet\", \"true\",\n               \"facet.field\", \"airport_s1\",\n               \"facet.prefix\", \"a\"\n           )\n      );\n      fail(\"Exception should have been thrown\");\n    } catch (SolrException e) {\n      assertEquals(SolrException.ErrorCode.BAD_REQUEST.code, e.code());\n    }\n  }\n\n","sourceOld":"  private void testSimpleGroupedFacets(String facetLimit) throws Exception {\n    assertQ(\n        \"Return 5 docs with id range 1937 till 1940\",\n         req(\"id:[2000 TO 2004]\"),\n        \"*[count(//doc)=5]\"\n    );\n    assertQ(\n        \"Return two facet counts for field airport_a\",\n         req(\n             \"q\", \"*:*\",\n             \"fq\", \"id:[2000 TO 2004]\",\n             \"group\", \"true\",\n             \"group.facet\", \"true\",\n             \"group.field\", \"hotel_s1\",\n             \"facet\", \"true\",\n             \"facet.limit\", facetLimit, \n             \"facet.field\", \"airport_s1\"\n         ),\n        \"//lst[@name='facet_fields']/lst[@name='airport_s1']\",\n        \"*[count(//lst[@name='airport_s1']/int)=2]\",\n        \"//lst[@name='airport_s1']/int[@name='ams'][.='2']\",\n        \"//lst[@name='airport_s1']/int[@name='dus'][.='1']\"\n    );\n    assertQ(\n        \"Return one facet count for field airport_a using facet.offset\",\n         req(\n             \"q\", \"*:*\",\n             \"fq\", \"id:[2000 TO 2004]\",\n             \"group\", \"true\",\n             \"group.facet\", \"true\",\n             \"group.field\", \"hotel_s1\",\n             \"facet\", \"true\",\n             \"facet.offset\", \"1\", \n             \"facet.limit\", facetLimit, \n             \"facet.field\", \"airport_s1\"\n         ),\n        \"//lst[@name='facet_fields']/lst[@name='airport_s1']\",\n        \"*[count(//lst[@name='airport_s1']/int)=1]\",\n        \"//lst[@name='airport_s1']/int[@name='dus'][.='1']\"\n    );\n    assertQ(\n        \"Return two facet counts for field airport_a with fq\",\n         req(\n             \"q\", \"*:*\",\n             \"fq\", \"id:[2000 TO 2004]\",\n             \"fq\", \"duration_i1:5\",\n             \"group\", \"true\",\n             \"group.facet\", \"true\",\n             \"group.field\", \"hotel_s1\",\n             \"facet\", \"true\",\n             \"facet.limit\", facetLimit, \n             \"facet.field\", \"airport_s1\"\n         ),\n        \"//lst[@name='facet_fields']/lst[@name='airport_s1']\",\n        \"*[count(//lst[@name='airport_s1']/int)=2]\",\n        \"//lst[@name='airport_s1']/int[@name='ams'][.='2']\",\n        \"//lst[@name='airport_s1']/int[@name='dus'][.='0']\"\n    );\n    assertQ(\n        \"Return one facet count for field airport_s1 with prefix a\",\n         req(\n             \"q\", \"*:*\",\n             \"fq\", \"id:[2000 TO 2004]\",\n             \"group\", \"true\",\n             \"group.facet\", \"true\",\n             \"group.field\", \"hotel_s1\",\n             \"facet\", \"true\",\n             \"facet.field\", \"airport_s1\",\n             \"facet.limit\", facetLimit, \n             \"facet.prefix\", \"a\"\n         ),\n        \"//lst[@name='facet_fields']/lst[@name='airport_s1']\",\n        \"*[count(//lst[@name='airport_s1']/int)=1]\",\n        \"//lst[@name='airport_s1']/int[@name='ams'][.='2']\"\n    );\n    \n    try {\n      h.query(\n           req(\n               \"q\", \"*:*\",\n               \"fq\", \"id:[2000 TO 2004]\",\n               \"group.facet\", \"true\",\n               \"facet\", \"true\",\n               \"facet.field\", \"airport_s1\",\n               \"facet.prefix\", \"a\"\n           )\n      );\n      fail(\"Exception should have been thrown\");\n    } catch (SolrException e) {\n      assertEquals(SolrException.ErrorCode.BAD_REQUEST.code, e.code());\n    }\n  }\n\n","bugFix":["3685dcafc9195b0631414aa4d422f788479e62b7"],"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"7de000bbb5f66603221a528f0fe972afe72a6b97","date":1483586729,"type":3,"author":"Dennis Gove","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/request/SimpleFacetsTest#testSimpleGroupedFacets(String).mjava","pathOld":"solr/core/src/test/org/apache/solr/request/SimpleFacetsTest#testSimpleGroupedFacets(String).mjava","sourceNew":"  private void testSimpleGroupedFacets(String facetLimit) throws Exception {\n    assertQ(\n        \"Return 5 docs with id range 1937 till 1940\",\n         req(\"id:[2000 TO 2004]\"),\n        \"*[count(//doc)=5]\"\n    );\n    assertQ(\n        \"Return two facet counts for field airport_a and duration_i1\",\n         req(\n             \"q\", \"*:*\",\n             \"fq\", \"id:[2000 TO 2004]\",\n             \"group\", \"true\",\n             \"group.facet\", \"true\",\n             \"group.field\", \"hotel_s1\",\n             \"facet\", \"true\",\n             \"facet.limit\", facetLimit,\n             \"facet.field\", \"airport_s1\",\n             \"facet.field\", \"duration_i1\"\n         ),\n        \"//lst[@name='facet_fields']/lst[@name='airport_s1']\",\n        \"*[count(//lst[@name='airport_s1']/int)=2]\",\n        \"//lst[@name='airport_s1']/int[@name='ams'][.='2']\",\n        \"//lst[@name='airport_s1']/int[@name='dus'][.='1']\",\n\n        \"//lst[@name='facet_fields']/lst[@name='duration_i1']\",\n        \"*[count(//lst[@name='duration_i1']/int)=2]\",\n        \"//lst[@name='duration_i1']/int[@name='5'][.='2']\",\n        \"//lst[@name='duration_i1']/int[@name='10'][.='2']\"\n    );\n    assertQ(\n        \"Return one facet count for field airport_a using facet.offset\",\n         req(\n             \"q\", \"*:*\",\n             \"fq\", \"id:[2000 TO 2004]\",\n             \"group\", \"true\",\n             \"group.facet\", \"true\",\n             \"group.field\", \"hotel_s1\",\n             \"facet\", \"true\",\n             \"facet.offset\", \"1\",\n             \"facet.limit\", facetLimit,\n             \"facet.field\", \"airport_s1\"\n         ),\n        \"//lst[@name='facet_fields']/lst[@name='airport_s1']\",\n        \"*[count(//lst[@name='airport_s1']/int)=1]\",\n        \"//lst[@name='airport_s1']/int[@name='dus'][.='1']\"\n    );\n    assertQ(\n        \"Return two facet counts for field airport_a with fq\",\n         req(\n             \"q\", \"*:*\",\n             \"fq\", \"id:[2000 TO 2004]\",\n             \"fq\", \"duration_i1:5\",\n             \"group\", \"true\",\n             \"group.facet\", \"true\",\n             \"group.field\", \"hotel_s1\",\n             \"facet\", \"true\",\n             \"facet.limit\", facetLimit,\n             \"facet.field\", \"airport_s1\"\n         ),\n        \"//lst[@name='facet_fields']/lst[@name='airport_s1']\",\n        \"*[count(//lst[@name='airport_s1']/int)=2]\",\n        \"//lst[@name='airport_s1']/int[@name='ams'][.='2']\",\n        \"//lst[@name='airport_s1']/int[@name='dus'][.='0']\"\n    );\n    assertQ(\n        \"Return one facet count for field airport_s1 with prefix a\",\n         req(\n             \"q\", \"*:*\",\n             \"fq\", \"id:[2000 TO 2004]\",\n             \"group\", \"true\",\n             \"group.facet\", \"true\",\n             \"group.field\", \"hotel_s1\",\n             \"facet\", \"true\",\n             \"facet.field\", \"airport_s1\",\n             \"facet.limit\", facetLimit,\n             \"facet.prefix\", \"a\"\n         ),\n        \"//lst[@name='facet_fields']/lst[@name='airport_s1']\",\n        \"*[count(//lst[@name='airport_s1']/int)=1]\",\n        \"//lst[@name='airport_s1']/int[@name='ams'][.='2']\"\n    );\n    \n    try {\n      h.query(\n           req(\n               \"q\", \"*:*\",\n               \"fq\", \"id:[2000 TO 2004]\",\n               \"group.facet\", \"true\",\n               \"facet\", \"true\",\n               \"facet.field\", \"airport_s1\",\n               \"facet.prefix\", \"a\"\n           )\n      );\n      fail(\"Exception should have been thrown\");\n    } catch (SolrException e) {\n      assertEquals(SolrException.ErrorCode.BAD_REQUEST.code, e.code());\n    }\n  }\n\n","sourceOld":"  private void testSimpleGroupedFacets(String facetLimit) throws Exception {\n    assertQ(\n        \"Return 5 docs with id range 1937 till 1940\",\n         req(\"id:[2000 TO 2004]\"),\n        \"*[count(//doc)=5]\"\n    );\n    assertQ(\n        \"Return two facet counts for field airport_a\",\n         req(\n             \"q\", \"*:*\",\n             \"fq\", \"id:[2000 TO 2004]\",\n             \"group\", \"true\",\n             \"group.facet\", \"true\",\n             \"group.field\", \"hotel_s1\",\n             \"facet\", \"true\",\n             \"facet.limit\", facetLimit,\n             \"facet.field\", \"airport_s1\"\n         ),\n        \"//lst[@name='facet_fields']/lst[@name='airport_s1']\",\n        \"*[count(//lst[@name='airport_s1']/int)=2]\",\n        \"//lst[@name='airport_s1']/int[@name='ams'][.='2']\",\n        \"//lst[@name='airport_s1']/int[@name='dus'][.='1']\"\n    );\n    assertQ(\n        \"Return one facet count for field airport_a using facet.offset\",\n         req(\n             \"q\", \"*:*\",\n             \"fq\", \"id:[2000 TO 2004]\",\n             \"group\", \"true\",\n             \"group.facet\", \"true\",\n             \"group.field\", \"hotel_s1\",\n             \"facet\", \"true\",\n             \"facet.offset\", \"1\",\n             \"facet.limit\", facetLimit,\n             \"facet.field\", \"airport_s1\"\n         ),\n        \"//lst[@name='facet_fields']/lst[@name='airport_s1']\",\n        \"*[count(//lst[@name='airport_s1']/int)=1]\",\n        \"//lst[@name='airport_s1']/int[@name='dus'][.='1']\"\n    );\n    assertQ(\n        \"Return two facet counts for field airport_a with fq\",\n         req(\n             \"q\", \"*:*\",\n             \"fq\", \"id:[2000 TO 2004]\",\n             \"fq\", \"duration_i1:5\",\n             \"group\", \"true\",\n             \"group.facet\", \"true\",\n             \"group.field\", \"hotel_s1\",\n             \"facet\", \"true\",\n             \"facet.limit\", facetLimit,\n             \"facet.field\", \"airport_s1\"\n         ),\n        \"//lst[@name='facet_fields']/lst[@name='airport_s1']\",\n        \"*[count(//lst[@name='airport_s1']/int)=2]\",\n        \"//lst[@name='airport_s1']/int[@name='ams'][.='2']\",\n        \"//lst[@name='airport_s1']/int[@name='dus'][.='0']\"\n    );\n    assertQ(\n        \"Return one facet count for field airport_s1 with prefix a\",\n         req(\n             \"q\", \"*:*\",\n             \"fq\", \"id:[2000 TO 2004]\",\n             \"group\", \"true\",\n             \"group.facet\", \"true\",\n             \"group.field\", \"hotel_s1\",\n             \"facet\", \"true\",\n             \"facet.field\", \"airport_s1\",\n             \"facet.limit\", facetLimit,\n             \"facet.prefix\", \"a\"\n         ),\n        \"//lst[@name='facet_fields']/lst[@name='airport_s1']\",\n        \"*[count(//lst[@name='airport_s1']/int)=1]\",\n        \"//lst[@name='airport_s1']/int[@name='ams'][.='2']\"\n    );\n    \n    try {\n      h.query(\n           req(\n               \"q\", \"*:*\",\n               \"fq\", \"id:[2000 TO 2004]\",\n               \"group.facet\", \"true\",\n               \"facet\", \"true\",\n               \"facet.field\", \"airport_s1\",\n               \"facet.prefix\", \"a\"\n           )\n      );\n      fail(\"Exception should have been thrown\");\n    } catch (SolrException e) {\n      assertEquals(SolrException.ErrorCode.BAD_REQUEST.code, e.code());\n    }\n  }\n\n","bugFix":["3685dcafc9195b0631414aa4d422f788479e62b7"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"491c9672ec42582fe43960452dbd37f1c80fe0f0","date":1483739222,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/request/SimpleFacetsTest#testSimpleGroupedFacets(String).mjava","pathOld":"solr/core/src/test/org/apache/solr/request/SimpleFacetsTest#testSimpleGroupedFacets(String).mjava","sourceNew":"  private void testSimpleGroupedFacets(String facetLimit) throws Exception {\n    assertQ(\n        \"Return 5 docs with id range 1937 till 1940\",\n         req(\"id:[2000 TO 2004]\"),\n        \"*[count(//doc)=5]\"\n    );\n    assertQ(\n        \"Return two facet counts for field airport_a and duration_i1\",\n         req(\n             \"q\", \"*:*\",\n             \"fq\", \"id:[2000 TO 2004]\",\n             \"group\", \"true\",\n             \"group.facet\", \"true\",\n             \"group.field\", \"hotel_s1\",\n             \"facet\", \"true\",\n             \"facet.limit\", facetLimit,\n             \"facet.field\", \"airport_s1\",\n             \"facet.field\", \"duration_i1\"\n         ),\n        \"//lst[@name='facet_fields']/lst[@name='airport_s1']\",\n        \"*[count(//lst[@name='airport_s1']/int)=2]\",\n        \"//lst[@name='airport_s1']/int[@name='ams'][.='2']\",\n        \"//lst[@name='airport_s1']/int[@name='dus'][.='1']\",\n\n        \"//lst[@name='facet_fields']/lst[@name='duration_i1']\",\n        \"*[count(//lst[@name='duration_i1']/int)=2]\",\n        \"//lst[@name='duration_i1']/int[@name='5'][.='2']\",\n        \"//lst[@name='duration_i1']/int[@name='10'][.='2']\"\n    );\n    assertQ(\n        \"Return one facet count for field airport_a using facet.offset\",\n         req(\n             \"q\", \"*:*\",\n             \"fq\", \"id:[2000 TO 2004]\",\n             \"group\", \"true\",\n             \"group.facet\", \"true\",\n             \"group.field\", \"hotel_s1\",\n             \"facet\", \"true\",\n             \"facet.offset\", \"1\",\n             \"facet.limit\", facetLimit,\n             \"facet.field\", \"airport_s1\"\n         ),\n        \"//lst[@name='facet_fields']/lst[@name='airport_s1']\",\n        \"*[count(//lst[@name='airport_s1']/int)=1]\",\n        \"//lst[@name='airport_s1']/int[@name='dus'][.='1']\"\n    );\n    assertQ(\n        \"Return two facet counts for field airport_a with fq\",\n         req(\n             \"q\", \"*:*\",\n             \"fq\", \"id:[2000 TO 2004]\",\n             \"fq\", \"duration_i1:5\",\n             \"group\", \"true\",\n             \"group.facet\", \"true\",\n             \"group.field\", \"hotel_s1\",\n             \"facet\", \"true\",\n             \"facet.limit\", facetLimit,\n             \"facet.field\", \"airport_s1\"\n         ),\n        \"//lst[@name='facet_fields']/lst[@name='airport_s1']\",\n        \"*[count(//lst[@name='airport_s1']/int)=2]\",\n        \"//lst[@name='airport_s1']/int[@name='ams'][.='2']\",\n        \"//lst[@name='airport_s1']/int[@name='dus'][.='0']\"\n    );\n    assertQ(\n        \"Return one facet count for field airport_s1 with prefix a\",\n         req(\n             \"q\", \"*:*\",\n             \"fq\", \"id:[2000 TO 2004]\",\n             \"group\", \"true\",\n             \"group.facet\", \"true\",\n             \"group.field\", \"hotel_s1\",\n             \"facet\", \"true\",\n             \"facet.field\", \"airport_s1\",\n             \"facet.limit\", facetLimit,\n             \"facet.prefix\", \"a\"\n         ),\n        \"//lst[@name='facet_fields']/lst[@name='airport_s1']\",\n        \"*[count(//lst[@name='airport_s1']/int)=1]\",\n        \"//lst[@name='airport_s1']/int[@name='ams'][.='2']\"\n    );\n    \n    try {\n      h.query(\n           req(\n               \"q\", \"*:*\",\n               \"fq\", \"id:[2000 TO 2004]\",\n               \"group.facet\", \"true\",\n               \"facet\", \"true\",\n               \"facet.field\", \"airport_s1\",\n               \"facet.prefix\", \"a\"\n           )\n      );\n      fail(\"Exception should have been thrown\");\n    } catch (SolrException e) {\n      assertEquals(SolrException.ErrorCode.BAD_REQUEST.code, e.code());\n    }\n  }\n\n","sourceOld":"  private void testSimpleGroupedFacets(String facetLimit) throws Exception {\n    assertQ(\n        \"Return 5 docs with id range 1937 till 1940\",\n         req(\"id:[2000 TO 2004]\"),\n        \"*[count(//doc)=5]\"\n    );\n    assertQ(\n        \"Return two facet counts for field airport_a\",\n         req(\n             \"q\", \"*:*\",\n             \"fq\", \"id:[2000 TO 2004]\",\n             \"group\", \"true\",\n             \"group.facet\", \"true\",\n             \"group.field\", \"hotel_s1\",\n             \"facet\", \"true\",\n             \"facet.limit\", facetLimit,\n             \"facet.field\", \"airport_s1\"\n         ),\n        \"//lst[@name='facet_fields']/lst[@name='airport_s1']\",\n        \"*[count(//lst[@name='airport_s1']/int)=2]\",\n        \"//lst[@name='airport_s1']/int[@name='ams'][.='2']\",\n        \"//lst[@name='airport_s1']/int[@name='dus'][.='1']\"\n    );\n    assertQ(\n        \"Return one facet count for field airport_a using facet.offset\",\n         req(\n             \"q\", \"*:*\",\n             \"fq\", \"id:[2000 TO 2004]\",\n             \"group\", \"true\",\n             \"group.facet\", \"true\",\n             \"group.field\", \"hotel_s1\",\n             \"facet\", \"true\",\n             \"facet.offset\", \"1\",\n             \"facet.limit\", facetLimit,\n             \"facet.field\", \"airport_s1\"\n         ),\n        \"//lst[@name='facet_fields']/lst[@name='airport_s1']\",\n        \"*[count(//lst[@name='airport_s1']/int)=1]\",\n        \"//lst[@name='airport_s1']/int[@name='dus'][.='1']\"\n    );\n    assertQ(\n        \"Return two facet counts for field airport_a with fq\",\n         req(\n             \"q\", \"*:*\",\n             \"fq\", \"id:[2000 TO 2004]\",\n             \"fq\", \"duration_i1:5\",\n             \"group\", \"true\",\n             \"group.facet\", \"true\",\n             \"group.field\", \"hotel_s1\",\n             \"facet\", \"true\",\n             \"facet.limit\", facetLimit,\n             \"facet.field\", \"airport_s1\"\n         ),\n        \"//lst[@name='facet_fields']/lst[@name='airport_s1']\",\n        \"*[count(//lst[@name='airport_s1']/int)=2]\",\n        \"//lst[@name='airport_s1']/int[@name='ams'][.='2']\",\n        \"//lst[@name='airport_s1']/int[@name='dus'][.='0']\"\n    );\n    assertQ(\n        \"Return one facet count for field airport_s1 with prefix a\",\n         req(\n             \"q\", \"*:*\",\n             \"fq\", \"id:[2000 TO 2004]\",\n             \"group\", \"true\",\n             \"group.facet\", \"true\",\n             \"group.field\", \"hotel_s1\",\n             \"facet\", \"true\",\n             \"facet.field\", \"airport_s1\",\n             \"facet.limit\", facetLimit,\n             \"facet.prefix\", \"a\"\n         ),\n        \"//lst[@name='facet_fields']/lst[@name='airport_s1']\",\n        \"*[count(//lst[@name='airport_s1']/int)=1]\",\n        \"//lst[@name='airport_s1']/int[@name='ams'][.='2']\"\n    );\n    \n    try {\n      h.query(\n           req(\n               \"q\", \"*:*\",\n               \"fq\", \"id:[2000 TO 2004]\",\n               \"group.facet\", \"true\",\n               \"facet\", \"true\",\n               \"facet.field\", \"airport_s1\",\n               \"facet.prefix\", \"a\"\n           )\n      );\n      fail(\"Exception should have been thrown\");\n    } catch (SolrException e) {\n      assertEquals(SolrException.ErrorCode.BAD_REQUEST.code, e.code());\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a71f63026529f3c1f03cfdd664910873ab2369ae","date":1497543264,"type":3,"author":"Chris Hostetter","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/request/SimpleFacetsTest#testSimpleGroupedFacets(String).mjava","pathOld":"solr/core/src/test/org/apache/solr/request/SimpleFacetsTest#testSimpleGroupedFacets(String).mjava","sourceNew":"  private void testSimpleGroupedFacets(String facetLimit) throws Exception {\n    assertQ(\n        \"Return 5 docs with id range 1937 till 1940\",\n         req(\"id_i1:[2000 TO 2004]\"),\n        \"*[count(//doc)=5]\"\n    );\n    assertQ(\n        \"Return two facet counts for field airport_a and duration_i1\",\n         req(\n             \"q\", \"*:*\",\n             \"fq\", \"id_i1:[2000 TO 2004]\",\n             \"group\", \"true\",\n             \"group.facet\", \"true\",\n             \"group.field\", \"hotel_s1\",\n             \"facet\", \"true\",\n             \"facet.limit\", facetLimit,\n             \"facet.field\", \"airport_s1\",\n             \"facet.field\", \"duration_i1\"\n         ),\n        \"//lst[@name='facet_fields']/lst[@name='airport_s1']\",\n        \"*[count(//lst[@name='airport_s1']/int)=2]\",\n        \"//lst[@name='airport_s1']/int[@name='ams'][.='2']\",\n        \"//lst[@name='airport_s1']/int[@name='dus'][.='1']\",\n\n        \"//lst[@name='facet_fields']/lst[@name='duration_i1']\",\n        \"*[count(//lst[@name='duration_i1']/int)=2]\",\n        \"//lst[@name='duration_i1']/int[@name='5'][.='2']\",\n        \"//lst[@name='duration_i1']/int[@name='10'][.='2']\"\n    );\n    assertQ(\n        \"Return one facet count for field airport_a using facet.offset\",\n         req(\n             \"q\", \"*:*\",\n             \"fq\", \"id_i1:[2000 TO 2004]\",\n             \"group\", \"true\",\n             \"group.facet\", \"true\",\n             \"group.field\", \"hotel_s1\",\n             \"facet\", \"true\",\n             \"facet.offset\", \"1\",\n             \"facet.limit\", facetLimit,\n             \"facet.field\", \"airport_s1\"\n         ),\n        \"//lst[@name='facet_fields']/lst[@name='airport_s1']\",\n        \"*[count(//lst[@name='airport_s1']/int)=1]\",\n        \"//lst[@name='airport_s1']/int[@name='dus'][.='1']\"\n    );\n    assertQ(\n        \"Return two facet counts for field airport_a with fq\",\n         req(\n             \"q\", \"*:*\",\n             \"fq\", \"id_i1:[2000 TO 2004]\",\n             \"fq\", \"duration_i1:5\",\n             \"group\", \"true\",\n             \"group.facet\", \"true\",\n             \"group.field\", \"hotel_s1\",\n             \"facet\", \"true\",\n             \"facet.limit\", facetLimit,\n             \"facet.field\", \"airport_s1\"\n         ),\n        \"//lst[@name='facet_fields']/lst[@name='airport_s1']\",\n        \"*[count(//lst[@name='airport_s1']/int)=2]\",\n        \"//lst[@name='airport_s1']/int[@name='ams'][.='2']\",\n        \"//lst[@name='airport_s1']/int[@name='dus'][.='0']\"\n    );\n    assertQ(\n        \"Return one facet count for field airport_s1 with prefix a\",\n         req(\n             \"q\", \"*:*\",\n             \"fq\", \"id_i1:[2000 TO 2004]\",\n             \"group\", \"true\",\n             \"group.facet\", \"true\",\n             \"group.field\", \"hotel_s1\",\n             \"facet\", \"true\",\n             \"facet.field\", \"airport_s1\",\n             \"facet.limit\", facetLimit,\n             \"facet.prefix\", \"a\"\n         ),\n        \"//lst[@name='facet_fields']/lst[@name='airport_s1']\",\n        \"*[count(//lst[@name='airport_s1']/int)=1]\",\n        \"//lst[@name='airport_s1']/int[@name='ams'][.='2']\"\n    );\n    \n    try {\n      h.query(\n           req(\n               \"q\", \"*:*\",\n               \"fq\", \"id_i1:[2000 TO 2004]\",\n               \"group.facet\", \"true\",\n               \"facet\", \"true\",\n               \"facet.field\", \"airport_s1\",\n               \"facet.prefix\", \"a\"\n           )\n      );\n      fail(\"Exception should have been thrown\");\n    } catch (SolrException e) {\n      assertEquals(SolrException.ErrorCode.BAD_REQUEST.code, e.code());\n    }\n  }\n\n","sourceOld":"  private void testSimpleGroupedFacets(String facetLimit) throws Exception {\n    assertQ(\n        \"Return 5 docs with id range 1937 till 1940\",\n         req(\"id:[2000 TO 2004]\"),\n        \"*[count(//doc)=5]\"\n    );\n    assertQ(\n        \"Return two facet counts for field airport_a and duration_i1\",\n         req(\n             \"q\", \"*:*\",\n             \"fq\", \"id:[2000 TO 2004]\",\n             \"group\", \"true\",\n             \"group.facet\", \"true\",\n             \"group.field\", \"hotel_s1\",\n             \"facet\", \"true\",\n             \"facet.limit\", facetLimit,\n             \"facet.field\", \"airport_s1\",\n             \"facet.field\", \"duration_i1\"\n         ),\n        \"//lst[@name='facet_fields']/lst[@name='airport_s1']\",\n        \"*[count(//lst[@name='airport_s1']/int)=2]\",\n        \"//lst[@name='airport_s1']/int[@name='ams'][.='2']\",\n        \"//lst[@name='airport_s1']/int[@name='dus'][.='1']\",\n\n        \"//lst[@name='facet_fields']/lst[@name='duration_i1']\",\n        \"*[count(//lst[@name='duration_i1']/int)=2]\",\n        \"//lst[@name='duration_i1']/int[@name='5'][.='2']\",\n        \"//lst[@name='duration_i1']/int[@name='10'][.='2']\"\n    );\n    assertQ(\n        \"Return one facet count for field airport_a using facet.offset\",\n         req(\n             \"q\", \"*:*\",\n             \"fq\", \"id:[2000 TO 2004]\",\n             \"group\", \"true\",\n             \"group.facet\", \"true\",\n             \"group.field\", \"hotel_s1\",\n             \"facet\", \"true\",\n             \"facet.offset\", \"1\",\n             \"facet.limit\", facetLimit,\n             \"facet.field\", \"airport_s1\"\n         ),\n        \"//lst[@name='facet_fields']/lst[@name='airport_s1']\",\n        \"*[count(//lst[@name='airport_s1']/int)=1]\",\n        \"//lst[@name='airport_s1']/int[@name='dus'][.='1']\"\n    );\n    assertQ(\n        \"Return two facet counts for field airport_a with fq\",\n         req(\n             \"q\", \"*:*\",\n             \"fq\", \"id:[2000 TO 2004]\",\n             \"fq\", \"duration_i1:5\",\n             \"group\", \"true\",\n             \"group.facet\", \"true\",\n             \"group.field\", \"hotel_s1\",\n             \"facet\", \"true\",\n             \"facet.limit\", facetLimit,\n             \"facet.field\", \"airport_s1\"\n         ),\n        \"//lst[@name='facet_fields']/lst[@name='airport_s1']\",\n        \"*[count(//lst[@name='airport_s1']/int)=2]\",\n        \"//lst[@name='airport_s1']/int[@name='ams'][.='2']\",\n        \"//lst[@name='airport_s1']/int[@name='dus'][.='0']\"\n    );\n    assertQ(\n        \"Return one facet count for field airport_s1 with prefix a\",\n         req(\n             \"q\", \"*:*\",\n             \"fq\", \"id:[2000 TO 2004]\",\n             \"group\", \"true\",\n             \"group.facet\", \"true\",\n             \"group.field\", \"hotel_s1\",\n             \"facet\", \"true\",\n             \"facet.field\", \"airport_s1\",\n             \"facet.limit\", facetLimit,\n             \"facet.prefix\", \"a\"\n         ),\n        \"//lst[@name='facet_fields']/lst[@name='airport_s1']\",\n        \"*[count(//lst[@name='airport_s1']/int)=1]\",\n        \"//lst[@name='airport_s1']/int[@name='ams'][.='2']\"\n    );\n    \n    try {\n      h.query(\n           req(\n               \"q\", \"*:*\",\n               \"fq\", \"id:[2000 TO 2004]\",\n               \"group.facet\", \"true\",\n               \"facet\", \"true\",\n               \"facet.field\", \"airport_s1\",\n               \"facet.prefix\", \"a\"\n           )\n      );\n      fail(\"Exception should have been thrown\");\n    } catch (SolrException e) {\n      assertEquals(SolrException.ErrorCode.BAD_REQUEST.code, e.code());\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2a3ed3f77cdd034e789d00d1ca8bb7054c9fb8e9","date":1498028748,"type":3,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/request/SimpleFacetsTest#testSimpleGroupedFacets(String).mjava","pathOld":"solr/core/src/test/org/apache/solr/request/SimpleFacetsTest#testSimpleGroupedFacets(String).mjava","sourceNew":"  private void testSimpleGroupedFacets(String facetLimit) throws Exception {\n    assertQ(\n        \"Return 5 docs with id range 1937 till 1940\",\n         req(\"id_i1:[2000 TO 2004]\"),\n        \"*[count(//doc)=5]\"\n    );\n    assertQ(\n        \"Return two facet counts for field airport_a and duration_i1\",\n         req(\n             \"q\", \"*:*\",\n             \"fq\", \"id_i1:[2000 TO 2004]\",\n             \"group\", \"true\",\n             \"group.facet\", \"true\",\n             \"group.field\", \"hotel_s1\",\n             \"facet\", \"true\",\n             \"facet.limit\", facetLimit,\n             \"facet.field\", \"airport_s1\",\n             \"facet.field\", \"duration_i1\"\n         ),\n        \"//lst[@name='facet_fields']/lst[@name='airport_s1']\",\n        \"*[count(//lst[@name='airport_s1']/int)=2]\",\n        \"//lst[@name='airport_s1']/int[@name='ams'][.='2']\",\n        \"//lst[@name='airport_s1']/int[@name='dus'][.='1']\",\n\n        \"//lst[@name='facet_fields']/lst[@name='duration_i1']\",\n        \"*[count(//lst[@name='duration_i1']/int)=2]\",\n        \"//lst[@name='duration_i1']/int[@name='5'][.='2']\",\n        \"//lst[@name='duration_i1']/int[@name='10'][.='2']\"\n    );\n    assertQ(\n        \"Return one facet count for field airport_a using facet.offset\",\n         req(\n             \"q\", \"*:*\",\n             \"fq\", \"id_i1:[2000 TO 2004]\",\n             \"group\", \"true\",\n             \"group.facet\", \"true\",\n             \"group.field\", \"hotel_s1\",\n             \"facet\", \"true\",\n             \"facet.offset\", \"1\",\n             \"facet.limit\", facetLimit,\n             \"facet.field\", \"airport_s1\"\n         ),\n        \"//lst[@name='facet_fields']/lst[@name='airport_s1']\",\n        \"*[count(//lst[@name='airport_s1']/int)=1]\",\n        \"//lst[@name='airport_s1']/int[@name='dus'][.='1']\"\n    );\n    assertQ(\n        \"Return two facet counts for field airport_a with fq\",\n         req(\n             \"q\", \"*:*\",\n             \"fq\", \"id_i1:[2000 TO 2004]\",\n             \"fq\", \"duration_i1:5\",\n             \"group\", \"true\",\n             \"group.facet\", \"true\",\n             \"group.field\", \"hotel_s1\",\n             \"facet\", \"true\",\n             \"facet.limit\", facetLimit,\n             \"facet.field\", \"airport_s1\"\n         ),\n        \"//lst[@name='facet_fields']/lst[@name='airport_s1']\",\n        \"*[count(//lst[@name='airport_s1']/int)=2]\",\n        \"//lst[@name='airport_s1']/int[@name='ams'][.='2']\",\n        \"//lst[@name='airport_s1']/int[@name='dus'][.='0']\"\n    );\n    assertQ(\n        \"Return one facet count for field airport_s1 with prefix a\",\n         req(\n             \"q\", \"*:*\",\n             \"fq\", \"id_i1:[2000 TO 2004]\",\n             \"group\", \"true\",\n             \"group.facet\", \"true\",\n             \"group.field\", \"hotel_s1\",\n             \"facet\", \"true\",\n             \"facet.field\", \"airport_s1\",\n             \"facet.limit\", facetLimit,\n             \"facet.prefix\", \"a\"\n         ),\n        \"//lst[@name='facet_fields']/lst[@name='airport_s1']\",\n        \"*[count(//lst[@name='airport_s1']/int)=1]\",\n        \"//lst[@name='airport_s1']/int[@name='ams'][.='2']\"\n    );\n    \n    try {\n      h.query(\n           req(\n               \"q\", \"*:*\",\n               \"fq\", \"id_i1:[2000 TO 2004]\",\n               \"group.facet\", \"true\",\n               \"facet\", \"true\",\n               \"facet.field\", \"airport_s1\",\n               \"facet.prefix\", \"a\"\n           )\n      );\n      fail(\"Exception should have been thrown\");\n    } catch (SolrException e) {\n      assertEquals(SolrException.ErrorCode.BAD_REQUEST.code, e.code());\n    }\n  }\n\n","sourceOld":"  private void testSimpleGroupedFacets(String facetLimit) throws Exception {\n    assertQ(\n        \"Return 5 docs with id range 1937 till 1940\",\n         req(\"id:[2000 TO 2004]\"),\n        \"*[count(//doc)=5]\"\n    );\n    assertQ(\n        \"Return two facet counts for field airport_a and duration_i1\",\n         req(\n             \"q\", \"*:*\",\n             \"fq\", \"id:[2000 TO 2004]\",\n             \"group\", \"true\",\n             \"group.facet\", \"true\",\n             \"group.field\", \"hotel_s1\",\n             \"facet\", \"true\",\n             \"facet.limit\", facetLimit,\n             \"facet.field\", \"airport_s1\",\n             \"facet.field\", \"duration_i1\"\n         ),\n        \"//lst[@name='facet_fields']/lst[@name='airport_s1']\",\n        \"*[count(//lst[@name='airport_s1']/int)=2]\",\n        \"//lst[@name='airport_s1']/int[@name='ams'][.='2']\",\n        \"//lst[@name='airport_s1']/int[@name='dus'][.='1']\",\n\n        \"//lst[@name='facet_fields']/lst[@name='duration_i1']\",\n        \"*[count(//lst[@name='duration_i1']/int)=2]\",\n        \"//lst[@name='duration_i1']/int[@name='5'][.='2']\",\n        \"//lst[@name='duration_i1']/int[@name='10'][.='2']\"\n    );\n    assertQ(\n        \"Return one facet count for field airport_a using facet.offset\",\n         req(\n             \"q\", \"*:*\",\n             \"fq\", \"id:[2000 TO 2004]\",\n             \"group\", \"true\",\n             \"group.facet\", \"true\",\n             \"group.field\", \"hotel_s1\",\n             \"facet\", \"true\",\n             \"facet.offset\", \"1\",\n             \"facet.limit\", facetLimit,\n             \"facet.field\", \"airport_s1\"\n         ),\n        \"//lst[@name='facet_fields']/lst[@name='airport_s1']\",\n        \"*[count(//lst[@name='airport_s1']/int)=1]\",\n        \"//lst[@name='airport_s1']/int[@name='dus'][.='1']\"\n    );\n    assertQ(\n        \"Return two facet counts for field airport_a with fq\",\n         req(\n             \"q\", \"*:*\",\n             \"fq\", \"id:[2000 TO 2004]\",\n             \"fq\", \"duration_i1:5\",\n             \"group\", \"true\",\n             \"group.facet\", \"true\",\n             \"group.field\", \"hotel_s1\",\n             \"facet\", \"true\",\n             \"facet.limit\", facetLimit,\n             \"facet.field\", \"airport_s1\"\n         ),\n        \"//lst[@name='facet_fields']/lst[@name='airport_s1']\",\n        \"*[count(//lst[@name='airport_s1']/int)=2]\",\n        \"//lst[@name='airport_s1']/int[@name='ams'][.='2']\",\n        \"//lst[@name='airport_s1']/int[@name='dus'][.='0']\"\n    );\n    assertQ(\n        \"Return one facet count for field airport_s1 with prefix a\",\n         req(\n             \"q\", \"*:*\",\n             \"fq\", \"id:[2000 TO 2004]\",\n             \"group\", \"true\",\n             \"group.facet\", \"true\",\n             \"group.field\", \"hotel_s1\",\n             \"facet\", \"true\",\n             \"facet.field\", \"airport_s1\",\n             \"facet.limit\", facetLimit,\n             \"facet.prefix\", \"a\"\n         ),\n        \"//lst[@name='facet_fields']/lst[@name='airport_s1']\",\n        \"*[count(//lst[@name='airport_s1']/int)=1]\",\n        \"//lst[@name='airport_s1']/int[@name='ams'][.='2']\"\n    );\n    \n    try {\n      h.query(\n           req(\n               \"q\", \"*:*\",\n               \"fq\", \"id:[2000 TO 2004]\",\n               \"group.facet\", \"true\",\n               \"facet\", \"true\",\n               \"facet.field\", \"airport_s1\",\n               \"facet.prefix\", \"a\"\n           )\n      );\n      fail(\"Exception should have been thrown\");\n    } catch (SolrException e) {\n      assertEquals(SolrException.ErrorCode.BAD_REQUEST.code, e.code());\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"28288370235ed02234a64753cdbf0c6ec096304a","date":1498726817,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/request/SimpleFacetsTest#testSimpleGroupedFacets(String).mjava","pathOld":"solr/core/src/test/org/apache/solr/request/SimpleFacetsTest#testSimpleGroupedFacets(String).mjava","sourceNew":"  private void testSimpleGroupedFacets(String facetLimit) throws Exception {\n    assertQ(\n        \"Return 5 docs with id range 1937 till 1940\",\n         req(\"id_i1:[2000 TO 2004]\"),\n        \"*[count(//doc)=5]\"\n    );\n    assertQ(\n        \"Return two facet counts for field airport_a and duration_i1\",\n         req(\n             \"q\", \"*:*\",\n             \"fq\", \"id_i1:[2000 TO 2004]\",\n             \"group\", \"true\",\n             \"group.facet\", \"true\",\n             \"group.field\", \"hotel_s1\",\n             \"facet\", \"true\",\n             \"facet.limit\", facetLimit,\n             \"facet.field\", \"airport_s1\",\n             \"facet.field\", \"duration_i1\"\n         ),\n        \"//lst[@name='facet_fields']/lst[@name='airport_s1']\",\n        \"*[count(//lst[@name='airport_s1']/int)=2]\",\n        \"//lst[@name='airport_s1']/int[@name='ams'][.='2']\",\n        \"//lst[@name='airport_s1']/int[@name='dus'][.='1']\",\n\n        \"//lst[@name='facet_fields']/lst[@name='duration_i1']\",\n        \"*[count(//lst[@name='duration_i1']/int)=2]\",\n        \"//lst[@name='duration_i1']/int[@name='5'][.='2']\",\n        \"//lst[@name='duration_i1']/int[@name='10'][.='2']\"\n    );\n    assertQ(\n        \"Return one facet count for field airport_a using facet.offset\",\n         req(\n             \"q\", \"*:*\",\n             \"fq\", \"id_i1:[2000 TO 2004]\",\n             \"group\", \"true\",\n             \"group.facet\", \"true\",\n             \"group.field\", \"hotel_s1\",\n             \"facet\", \"true\",\n             \"facet.offset\", \"1\",\n             \"facet.limit\", facetLimit,\n             \"facet.field\", \"airport_s1\"\n         ),\n        \"//lst[@name='facet_fields']/lst[@name='airport_s1']\",\n        \"*[count(//lst[@name='airport_s1']/int)=1]\",\n        \"//lst[@name='airport_s1']/int[@name='dus'][.='1']\"\n    );\n    assertQ(\n        \"Return two facet counts for field airport_a with fq\",\n         req(\n             \"q\", \"*:*\",\n             \"fq\", \"id_i1:[2000 TO 2004]\",\n             \"fq\", \"duration_i1:5\",\n             \"group\", \"true\",\n             \"group.facet\", \"true\",\n             \"group.field\", \"hotel_s1\",\n             \"facet\", \"true\",\n             \"facet.limit\", facetLimit,\n             \"facet.field\", \"airport_s1\"\n         ),\n        \"//lst[@name='facet_fields']/lst[@name='airport_s1']\",\n        \"*[count(//lst[@name='airport_s1']/int)=2]\",\n        \"//lst[@name='airport_s1']/int[@name='ams'][.='2']\",\n        \"//lst[@name='airport_s1']/int[@name='dus'][.='0']\"\n    );\n    assertQ(\n        \"Return one facet count for field airport_s1 with prefix a\",\n         req(\n             \"q\", \"*:*\",\n             \"fq\", \"id_i1:[2000 TO 2004]\",\n             \"group\", \"true\",\n             \"group.facet\", \"true\",\n             \"group.field\", \"hotel_s1\",\n             \"facet\", \"true\",\n             \"facet.field\", \"airport_s1\",\n             \"facet.limit\", facetLimit,\n             \"facet.prefix\", \"a\"\n         ),\n        \"//lst[@name='facet_fields']/lst[@name='airport_s1']\",\n        \"*[count(//lst[@name='airport_s1']/int)=1]\",\n        \"//lst[@name='airport_s1']/int[@name='ams'][.='2']\"\n    );\n    \n    try {\n      h.query(\n           req(\n               \"q\", \"*:*\",\n               \"fq\", \"id_i1:[2000 TO 2004]\",\n               \"group.facet\", \"true\",\n               \"facet\", \"true\",\n               \"facet.field\", \"airport_s1\",\n               \"facet.prefix\", \"a\"\n           )\n      );\n      fail(\"Exception should have been thrown\");\n    } catch (SolrException e) {\n      assertEquals(SolrException.ErrorCode.BAD_REQUEST.code, e.code());\n    }\n  }\n\n","sourceOld":"  private void testSimpleGroupedFacets(String facetLimit) throws Exception {\n    assertQ(\n        \"Return 5 docs with id range 1937 till 1940\",\n         req(\"id:[2000 TO 2004]\"),\n        \"*[count(//doc)=5]\"\n    );\n    assertQ(\n        \"Return two facet counts for field airport_a and duration_i1\",\n         req(\n             \"q\", \"*:*\",\n             \"fq\", \"id:[2000 TO 2004]\",\n             \"group\", \"true\",\n             \"group.facet\", \"true\",\n             \"group.field\", \"hotel_s1\",\n             \"facet\", \"true\",\n             \"facet.limit\", facetLimit,\n             \"facet.field\", \"airport_s1\",\n             \"facet.field\", \"duration_i1\"\n         ),\n        \"//lst[@name='facet_fields']/lst[@name='airport_s1']\",\n        \"*[count(//lst[@name='airport_s1']/int)=2]\",\n        \"//lst[@name='airport_s1']/int[@name='ams'][.='2']\",\n        \"//lst[@name='airport_s1']/int[@name='dus'][.='1']\",\n\n        \"//lst[@name='facet_fields']/lst[@name='duration_i1']\",\n        \"*[count(//lst[@name='duration_i1']/int)=2]\",\n        \"//lst[@name='duration_i1']/int[@name='5'][.='2']\",\n        \"//lst[@name='duration_i1']/int[@name='10'][.='2']\"\n    );\n    assertQ(\n        \"Return one facet count for field airport_a using facet.offset\",\n         req(\n             \"q\", \"*:*\",\n             \"fq\", \"id:[2000 TO 2004]\",\n             \"group\", \"true\",\n             \"group.facet\", \"true\",\n             \"group.field\", \"hotel_s1\",\n             \"facet\", \"true\",\n             \"facet.offset\", \"1\",\n             \"facet.limit\", facetLimit,\n             \"facet.field\", \"airport_s1\"\n         ),\n        \"//lst[@name='facet_fields']/lst[@name='airport_s1']\",\n        \"*[count(//lst[@name='airport_s1']/int)=1]\",\n        \"//lst[@name='airport_s1']/int[@name='dus'][.='1']\"\n    );\n    assertQ(\n        \"Return two facet counts for field airport_a with fq\",\n         req(\n             \"q\", \"*:*\",\n             \"fq\", \"id:[2000 TO 2004]\",\n             \"fq\", \"duration_i1:5\",\n             \"group\", \"true\",\n             \"group.facet\", \"true\",\n             \"group.field\", \"hotel_s1\",\n             \"facet\", \"true\",\n             \"facet.limit\", facetLimit,\n             \"facet.field\", \"airport_s1\"\n         ),\n        \"//lst[@name='facet_fields']/lst[@name='airport_s1']\",\n        \"*[count(//lst[@name='airport_s1']/int)=2]\",\n        \"//lst[@name='airport_s1']/int[@name='ams'][.='2']\",\n        \"//lst[@name='airport_s1']/int[@name='dus'][.='0']\"\n    );\n    assertQ(\n        \"Return one facet count for field airport_s1 with prefix a\",\n         req(\n             \"q\", \"*:*\",\n             \"fq\", \"id:[2000 TO 2004]\",\n             \"group\", \"true\",\n             \"group.facet\", \"true\",\n             \"group.field\", \"hotel_s1\",\n             \"facet\", \"true\",\n             \"facet.field\", \"airport_s1\",\n             \"facet.limit\", facetLimit,\n             \"facet.prefix\", \"a\"\n         ),\n        \"//lst[@name='facet_fields']/lst[@name='airport_s1']\",\n        \"*[count(//lst[@name='airport_s1']/int)=1]\",\n        \"//lst[@name='airport_s1']/int[@name='ams'][.='2']\"\n    );\n    \n    try {\n      h.query(\n           req(\n               \"q\", \"*:*\",\n               \"fq\", \"id:[2000 TO 2004]\",\n               \"group.facet\", \"true\",\n               \"facet\", \"true\",\n               \"facet.field\", \"airport_s1\",\n               \"facet.prefix\", \"a\"\n           )\n      );\n      fail(\"Exception should have been thrown\");\n    } catch (SolrException e) {\n      assertEquals(SolrException.ErrorCode.BAD_REQUEST.code, e.code());\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d1a307447328c95a00248512b40d7a5ff12ecd6a","date":1564817449,"type":3,"author":"Munendra S N","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/request/SimpleFacetsTest#testSimpleGroupedFacets(String).mjava","pathOld":"solr/core/src/test/org/apache/solr/request/SimpleFacetsTest#testSimpleGroupedFacets(String).mjava","sourceNew":"  private void testSimpleGroupedFacets(String facetLimit) throws Exception {\n    assertQ(\n        \"Return 5 docs with id range 1937 till 1940\",\n         req(\"id_i1:[2000 TO 2004]\"),\n        \"*[count(//doc)=5]\"\n    );\n    assertQ(\n        \"Return two facet counts for field airport_a and duration_i1\",\n         req(\n             \"q\", \"*:*\",\n             \"fq\", \"id_i1:[2000 TO 2004]\",\n             \"group\", \"true\",\n             \"group.facet\", \"true\",\n             \"group.field\", \"hotel_s1\",\n             \"facet\", \"true\",\n             \"facet.limit\", facetLimit,\n             \"facet.field\", \"airport_s1\",\n             \"facet.field\", \"duration_i1\"\n         ),\n        \"//lst[@name='facet_fields']/lst[@name='airport_s1']\",\n        \"*[count(//lst[@name='airport_s1']/int)=2]\",\n        \"//lst[@name='airport_s1']/int[@name='ams'][.='2']\",\n        \"//lst[@name='airport_s1']/int[@name='dus'][.='1']\",\n\n        \"//lst[@name='facet_fields']/lst[@name='duration_i1']\",\n        \"*[count(//lst[@name='duration_i1']/int)=2]\",\n        \"//lst[@name='duration_i1']/int[@name='5'][.='2']\",\n        \"//lst[@name='duration_i1']/int[@name='10'][.='2']\"\n    );\n    assertQ(\n        \"Return one facet count for field airport_a using facet.offset\",\n         req(\n             \"q\", \"*:*\",\n             \"fq\", \"id_i1:[2000 TO 2004]\",\n             \"group\", \"true\",\n             \"group.facet\", \"true\",\n             \"group.field\", \"hotel_s1\",\n             \"facet\", \"true\",\n             \"facet.offset\", \"1\",\n             \"facet.limit\", facetLimit,\n             \"facet.field\", \"airport_s1\"\n         ),\n        \"//lst[@name='facet_fields']/lst[@name='airport_s1']\",\n        \"*[count(//lst[@name='airport_s1']/int)=1]\",\n        \"//lst[@name='airport_s1']/int[@name='dus'][.='1']\"\n    );\n    assertQ(\n        \"Return two facet counts for field airport_a with fq\",\n         req(\n             \"q\", \"*:*\",\n             \"fq\", \"id_i1:[2000 TO 2004]\",\n             \"fq\", \"duration_i1:5\",\n             \"group\", \"true\",\n             \"group.facet\", \"true\",\n             \"group.field\", \"hotel_s1\",\n             \"facet\", \"true\",\n             \"facet.limit\", facetLimit,\n             \"facet.field\", \"airport_s1\"\n         ),\n        \"//lst[@name='facet_fields']/lst[@name='airport_s1']\",\n        \"*[count(//lst[@name='airport_s1']/int)=2]\",\n        \"//lst[@name='airport_s1']/int[@name='ams'][.='2']\",\n        \"//lst[@name='airport_s1']/int[@name='dus'][.='0']\"\n    );\n    assertQ(\n        \"Return one facet count for field airport_s1 with prefix a\",\n         req(\n             \"q\", \"*:*\",\n             \"fq\", \"id_i1:[2000 TO 2004]\",\n             \"group\", \"true\",\n             \"group.facet\", \"true\",\n             \"group.field\", \"hotel_s1\",\n             \"facet\", \"true\",\n             \"facet.field\", \"airport_s1\",\n             \"facet.limit\", facetLimit,\n             \"facet.prefix\", \"a\"\n         ),\n        \"//lst[@name='facet_fields']/lst[@name='airport_s1']\",\n        \"*[count(//lst[@name='airport_s1']/int)=1]\",\n        \"//lst[@name='airport_s1']/int[@name='ams'][.='2']\"\n    );\n\n    SolrException e = expectThrows(SolrException.class, () -> {\n      h.query(\n          req(\n              \"q\", \"*:*\",\n              \"fq\", \"id_i1:[2000 TO 2004]\",\n              \"group.facet\", \"true\",\n              \"facet\", \"true\",\n              \"facet.field\", \"airport_s1\",\n              \"facet.prefix\", \"a\"\n          )\n      );\n    });\n    assertEquals(SolrException.ErrorCode.BAD_REQUEST.code, e.code());\n  }\n\n","sourceOld":"  private void testSimpleGroupedFacets(String facetLimit) throws Exception {\n    assertQ(\n        \"Return 5 docs with id range 1937 till 1940\",\n         req(\"id_i1:[2000 TO 2004]\"),\n        \"*[count(//doc)=5]\"\n    );\n    assertQ(\n        \"Return two facet counts for field airport_a and duration_i1\",\n         req(\n             \"q\", \"*:*\",\n             \"fq\", \"id_i1:[2000 TO 2004]\",\n             \"group\", \"true\",\n             \"group.facet\", \"true\",\n             \"group.field\", \"hotel_s1\",\n             \"facet\", \"true\",\n             \"facet.limit\", facetLimit,\n             \"facet.field\", \"airport_s1\",\n             \"facet.field\", \"duration_i1\"\n         ),\n        \"//lst[@name='facet_fields']/lst[@name='airport_s1']\",\n        \"*[count(//lst[@name='airport_s1']/int)=2]\",\n        \"//lst[@name='airport_s1']/int[@name='ams'][.='2']\",\n        \"//lst[@name='airport_s1']/int[@name='dus'][.='1']\",\n\n        \"//lst[@name='facet_fields']/lst[@name='duration_i1']\",\n        \"*[count(//lst[@name='duration_i1']/int)=2]\",\n        \"//lst[@name='duration_i1']/int[@name='5'][.='2']\",\n        \"//lst[@name='duration_i1']/int[@name='10'][.='2']\"\n    );\n    assertQ(\n        \"Return one facet count for field airport_a using facet.offset\",\n         req(\n             \"q\", \"*:*\",\n             \"fq\", \"id_i1:[2000 TO 2004]\",\n             \"group\", \"true\",\n             \"group.facet\", \"true\",\n             \"group.field\", \"hotel_s1\",\n             \"facet\", \"true\",\n             \"facet.offset\", \"1\",\n             \"facet.limit\", facetLimit,\n             \"facet.field\", \"airport_s1\"\n         ),\n        \"//lst[@name='facet_fields']/lst[@name='airport_s1']\",\n        \"*[count(//lst[@name='airport_s1']/int)=1]\",\n        \"//lst[@name='airport_s1']/int[@name='dus'][.='1']\"\n    );\n    assertQ(\n        \"Return two facet counts for field airport_a with fq\",\n         req(\n             \"q\", \"*:*\",\n             \"fq\", \"id_i1:[2000 TO 2004]\",\n             \"fq\", \"duration_i1:5\",\n             \"group\", \"true\",\n             \"group.facet\", \"true\",\n             \"group.field\", \"hotel_s1\",\n             \"facet\", \"true\",\n             \"facet.limit\", facetLimit,\n             \"facet.field\", \"airport_s1\"\n         ),\n        \"//lst[@name='facet_fields']/lst[@name='airport_s1']\",\n        \"*[count(//lst[@name='airport_s1']/int)=2]\",\n        \"//lst[@name='airport_s1']/int[@name='ams'][.='2']\",\n        \"//lst[@name='airport_s1']/int[@name='dus'][.='0']\"\n    );\n    assertQ(\n        \"Return one facet count for field airport_s1 with prefix a\",\n         req(\n             \"q\", \"*:*\",\n             \"fq\", \"id_i1:[2000 TO 2004]\",\n             \"group\", \"true\",\n             \"group.facet\", \"true\",\n             \"group.field\", \"hotel_s1\",\n             \"facet\", \"true\",\n             \"facet.field\", \"airport_s1\",\n             \"facet.limit\", facetLimit,\n             \"facet.prefix\", \"a\"\n         ),\n        \"//lst[@name='facet_fields']/lst[@name='airport_s1']\",\n        \"*[count(//lst[@name='airport_s1']/int)=1]\",\n        \"//lst[@name='airport_s1']/int[@name='ams'][.='2']\"\n    );\n    \n    try {\n      h.query(\n           req(\n               \"q\", \"*:*\",\n               \"fq\", \"id_i1:[2000 TO 2004]\",\n               \"group.facet\", \"true\",\n               \"facet\", \"true\",\n               \"facet.field\", \"airport_s1\",\n               \"facet.prefix\", \"a\"\n           )\n      );\n      fail(\"Exception should have been thrown\");\n    } catch (SolrException e) {\n      assertEquals(SolrException.ErrorCode.BAD_REQUEST.code, e.code());\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f8061ddd97f3352007d927dae445884a6f3d857b","date":1564988276,"type":3,"author":"Atri Sharma","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/request/SimpleFacetsTest#testSimpleGroupedFacets(String).mjava","pathOld":"solr/core/src/test/org/apache/solr/request/SimpleFacetsTest#testSimpleGroupedFacets(String).mjava","sourceNew":"  private void testSimpleGroupedFacets(String facetLimit) throws Exception {\n    assertQ(\n        \"Return 5 docs with id range 1937 till 1940\",\n         req(\"id_i1:[2000 TO 2004]\"),\n        \"*[count(//doc)=5]\"\n    );\n    assertQ(\n        \"Return two facet counts for field airport_a and duration_i1\",\n         req(\n             \"q\", \"*:*\",\n             \"fq\", \"id_i1:[2000 TO 2004]\",\n             \"group\", \"true\",\n             \"group.facet\", \"true\",\n             \"group.field\", \"hotel_s1\",\n             \"facet\", \"true\",\n             \"facet.limit\", facetLimit,\n             \"facet.field\", \"airport_s1\",\n             \"facet.field\", \"duration_i1\"\n         ),\n        \"//lst[@name='facet_fields']/lst[@name='airport_s1']\",\n        \"*[count(//lst[@name='airport_s1']/int)=2]\",\n        \"//lst[@name='airport_s1']/int[@name='ams'][.='2']\",\n        \"//lst[@name='airport_s1']/int[@name='dus'][.='1']\",\n\n        \"//lst[@name='facet_fields']/lst[@name='duration_i1']\",\n        \"*[count(//lst[@name='duration_i1']/int)=2]\",\n        \"//lst[@name='duration_i1']/int[@name='5'][.='2']\",\n        \"//lst[@name='duration_i1']/int[@name='10'][.='2']\"\n    );\n    assertQ(\n        \"Return one facet count for field airport_a using facet.offset\",\n         req(\n             \"q\", \"*:*\",\n             \"fq\", \"id_i1:[2000 TO 2004]\",\n             \"group\", \"true\",\n             \"group.facet\", \"true\",\n             \"group.field\", \"hotel_s1\",\n             \"facet\", \"true\",\n             \"facet.offset\", \"1\",\n             \"facet.limit\", facetLimit,\n             \"facet.field\", \"airport_s1\"\n         ),\n        \"//lst[@name='facet_fields']/lst[@name='airport_s1']\",\n        \"*[count(//lst[@name='airport_s1']/int)=1]\",\n        \"//lst[@name='airport_s1']/int[@name='dus'][.='1']\"\n    );\n    assertQ(\n        \"Return two facet counts for field airport_a with fq\",\n         req(\n             \"q\", \"*:*\",\n             \"fq\", \"id_i1:[2000 TO 2004]\",\n             \"fq\", \"duration_i1:5\",\n             \"group\", \"true\",\n             \"group.facet\", \"true\",\n             \"group.field\", \"hotel_s1\",\n             \"facet\", \"true\",\n             \"facet.limit\", facetLimit,\n             \"facet.field\", \"airport_s1\"\n         ),\n        \"//lst[@name='facet_fields']/lst[@name='airport_s1']\",\n        \"*[count(//lst[@name='airport_s1']/int)=2]\",\n        \"//lst[@name='airport_s1']/int[@name='ams'][.='2']\",\n        \"//lst[@name='airport_s1']/int[@name='dus'][.='0']\"\n    );\n    assertQ(\n        \"Return one facet count for field airport_s1 with prefix a\",\n         req(\n             \"q\", \"*:*\",\n             \"fq\", \"id_i1:[2000 TO 2004]\",\n             \"group\", \"true\",\n             \"group.facet\", \"true\",\n             \"group.field\", \"hotel_s1\",\n             \"facet\", \"true\",\n             \"facet.field\", \"airport_s1\",\n             \"facet.limit\", facetLimit,\n             \"facet.prefix\", \"a\"\n         ),\n        \"//lst[@name='facet_fields']/lst[@name='airport_s1']\",\n        \"*[count(//lst[@name='airport_s1']/int)=1]\",\n        \"//lst[@name='airport_s1']/int[@name='ams'][.='2']\"\n    );\n\n    SolrException e = expectThrows(SolrException.class, () -> {\n      h.query(\n          req(\n              \"q\", \"*:*\",\n              \"fq\", \"id_i1:[2000 TO 2004]\",\n              \"group.facet\", \"true\",\n              \"facet\", \"true\",\n              \"facet.field\", \"airport_s1\",\n              \"facet.prefix\", \"a\"\n          )\n      );\n    });\n    assertEquals(SolrException.ErrorCode.BAD_REQUEST.code, e.code());\n  }\n\n","sourceOld":"  private void testSimpleGroupedFacets(String facetLimit) throws Exception {\n    assertQ(\n        \"Return 5 docs with id range 1937 till 1940\",\n         req(\"id_i1:[2000 TO 2004]\"),\n        \"*[count(//doc)=5]\"\n    );\n    assertQ(\n        \"Return two facet counts for field airport_a and duration_i1\",\n         req(\n             \"q\", \"*:*\",\n             \"fq\", \"id_i1:[2000 TO 2004]\",\n             \"group\", \"true\",\n             \"group.facet\", \"true\",\n             \"group.field\", \"hotel_s1\",\n             \"facet\", \"true\",\n             \"facet.limit\", facetLimit,\n             \"facet.field\", \"airport_s1\",\n             \"facet.field\", \"duration_i1\"\n         ),\n        \"//lst[@name='facet_fields']/lst[@name='airport_s1']\",\n        \"*[count(//lst[@name='airport_s1']/int)=2]\",\n        \"//lst[@name='airport_s1']/int[@name='ams'][.='2']\",\n        \"//lst[@name='airport_s1']/int[@name='dus'][.='1']\",\n\n        \"//lst[@name='facet_fields']/lst[@name='duration_i1']\",\n        \"*[count(//lst[@name='duration_i1']/int)=2]\",\n        \"//lst[@name='duration_i1']/int[@name='5'][.='2']\",\n        \"//lst[@name='duration_i1']/int[@name='10'][.='2']\"\n    );\n    assertQ(\n        \"Return one facet count for field airport_a using facet.offset\",\n         req(\n             \"q\", \"*:*\",\n             \"fq\", \"id_i1:[2000 TO 2004]\",\n             \"group\", \"true\",\n             \"group.facet\", \"true\",\n             \"group.field\", \"hotel_s1\",\n             \"facet\", \"true\",\n             \"facet.offset\", \"1\",\n             \"facet.limit\", facetLimit,\n             \"facet.field\", \"airport_s1\"\n         ),\n        \"//lst[@name='facet_fields']/lst[@name='airport_s1']\",\n        \"*[count(//lst[@name='airport_s1']/int)=1]\",\n        \"//lst[@name='airport_s1']/int[@name='dus'][.='1']\"\n    );\n    assertQ(\n        \"Return two facet counts for field airport_a with fq\",\n         req(\n             \"q\", \"*:*\",\n             \"fq\", \"id_i1:[2000 TO 2004]\",\n             \"fq\", \"duration_i1:5\",\n             \"group\", \"true\",\n             \"group.facet\", \"true\",\n             \"group.field\", \"hotel_s1\",\n             \"facet\", \"true\",\n             \"facet.limit\", facetLimit,\n             \"facet.field\", \"airport_s1\"\n         ),\n        \"//lst[@name='facet_fields']/lst[@name='airport_s1']\",\n        \"*[count(//lst[@name='airport_s1']/int)=2]\",\n        \"//lst[@name='airport_s1']/int[@name='ams'][.='2']\",\n        \"//lst[@name='airport_s1']/int[@name='dus'][.='0']\"\n    );\n    assertQ(\n        \"Return one facet count for field airport_s1 with prefix a\",\n         req(\n             \"q\", \"*:*\",\n             \"fq\", \"id_i1:[2000 TO 2004]\",\n             \"group\", \"true\",\n             \"group.facet\", \"true\",\n             \"group.field\", \"hotel_s1\",\n             \"facet\", \"true\",\n             \"facet.field\", \"airport_s1\",\n             \"facet.limit\", facetLimit,\n             \"facet.prefix\", \"a\"\n         ),\n        \"//lst[@name='facet_fields']/lst[@name='airport_s1']\",\n        \"*[count(//lst[@name='airport_s1']/int)=1]\",\n        \"//lst[@name='airport_s1']/int[@name='ams'][.='2']\"\n    );\n    \n    try {\n      h.query(\n           req(\n               \"q\", \"*:*\",\n               \"fq\", \"id_i1:[2000 TO 2004]\",\n               \"group.facet\", \"true\",\n               \"facet\", \"true\",\n               \"facet.field\", \"airport_s1\",\n               \"facet.prefix\", \"a\"\n           )\n      );\n      fail(\"Exception should have been thrown\");\n    } catch (SolrException e) {\n      assertEquals(SolrException.ErrorCode.BAD_REQUEST.code, e.code());\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d8daa7a1d5d0c033d73962d5ca3bf3f9c9687693","date":1565097295,"type":3,"author":"Jan Høydahl","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/request/SimpleFacetsTest#testSimpleGroupedFacets(String).mjava","pathOld":"solr/core/src/test/org/apache/solr/request/SimpleFacetsTest#testSimpleGroupedFacets(String).mjava","sourceNew":"  private void testSimpleGroupedFacets(String facetLimit) throws Exception {\n    assertQ(\n        \"Return 5 docs with id range 1937 till 1940\",\n         req(\"id_i1:[2000 TO 2004]\"),\n        \"*[count(//doc)=5]\"\n    );\n    assertQ(\n        \"Return two facet counts for field airport_a and duration_i1\",\n         req(\n             \"q\", \"*:*\",\n             \"fq\", \"id_i1:[2000 TO 2004]\",\n             \"group\", \"true\",\n             \"group.facet\", \"true\",\n             \"group.field\", \"hotel_s1\",\n             \"facet\", \"true\",\n             \"facet.limit\", facetLimit,\n             \"facet.field\", \"airport_s1\",\n             \"facet.field\", \"duration_i1\"\n         ),\n        \"//lst[@name='facet_fields']/lst[@name='airport_s1']\",\n        \"*[count(//lst[@name='airport_s1']/int)=2]\",\n        \"//lst[@name='airport_s1']/int[@name='ams'][.='2']\",\n        \"//lst[@name='airport_s1']/int[@name='dus'][.='1']\",\n\n        \"//lst[@name='facet_fields']/lst[@name='duration_i1']\",\n        \"*[count(//lst[@name='duration_i1']/int)=2]\",\n        \"//lst[@name='duration_i1']/int[@name='5'][.='2']\",\n        \"//lst[@name='duration_i1']/int[@name='10'][.='2']\"\n    );\n    assertQ(\n        \"Return one facet count for field airport_a using facet.offset\",\n         req(\n             \"q\", \"*:*\",\n             \"fq\", \"id_i1:[2000 TO 2004]\",\n             \"group\", \"true\",\n             \"group.facet\", \"true\",\n             \"group.field\", \"hotel_s1\",\n             \"facet\", \"true\",\n             \"facet.offset\", \"1\",\n             \"facet.limit\", facetLimit,\n             \"facet.field\", \"airport_s1\"\n         ),\n        \"//lst[@name='facet_fields']/lst[@name='airport_s1']\",\n        \"*[count(//lst[@name='airport_s1']/int)=1]\",\n        \"//lst[@name='airport_s1']/int[@name='dus'][.='1']\"\n    );\n    assertQ(\n        \"Return two facet counts for field airport_a with fq\",\n         req(\n             \"q\", \"*:*\",\n             \"fq\", \"id_i1:[2000 TO 2004]\",\n             \"fq\", \"duration_i1:5\",\n             \"group\", \"true\",\n             \"group.facet\", \"true\",\n             \"group.field\", \"hotel_s1\",\n             \"facet\", \"true\",\n             \"facet.limit\", facetLimit,\n             \"facet.field\", \"airport_s1\"\n         ),\n        \"//lst[@name='facet_fields']/lst[@name='airport_s1']\",\n        \"*[count(//lst[@name='airport_s1']/int)=2]\",\n        \"//lst[@name='airport_s1']/int[@name='ams'][.='2']\",\n        \"//lst[@name='airport_s1']/int[@name='dus'][.='0']\"\n    );\n    assertQ(\n        \"Return one facet count for field airport_s1 with prefix a\",\n         req(\n             \"q\", \"*:*\",\n             \"fq\", \"id_i1:[2000 TO 2004]\",\n             \"group\", \"true\",\n             \"group.facet\", \"true\",\n             \"group.field\", \"hotel_s1\",\n             \"facet\", \"true\",\n             \"facet.field\", \"airport_s1\",\n             \"facet.limit\", facetLimit,\n             \"facet.prefix\", \"a\"\n         ),\n        \"//lst[@name='facet_fields']/lst[@name='airport_s1']\",\n        \"*[count(//lst[@name='airport_s1']/int)=1]\",\n        \"//lst[@name='airport_s1']/int[@name='ams'][.='2']\"\n    );\n\n    SolrException e = expectThrows(SolrException.class, () -> {\n      h.query(\n          req(\n              \"q\", \"*:*\",\n              \"fq\", \"id_i1:[2000 TO 2004]\",\n              \"group.facet\", \"true\",\n              \"facet\", \"true\",\n              \"facet.field\", \"airport_s1\",\n              \"facet.prefix\", \"a\"\n          )\n      );\n    });\n    assertEquals(SolrException.ErrorCode.BAD_REQUEST.code, e.code());\n  }\n\n","sourceOld":"  private void testSimpleGroupedFacets(String facetLimit) throws Exception {\n    assertQ(\n        \"Return 5 docs with id range 1937 till 1940\",\n         req(\"id_i1:[2000 TO 2004]\"),\n        \"*[count(//doc)=5]\"\n    );\n    assertQ(\n        \"Return two facet counts for field airport_a and duration_i1\",\n         req(\n             \"q\", \"*:*\",\n             \"fq\", \"id_i1:[2000 TO 2004]\",\n             \"group\", \"true\",\n             \"group.facet\", \"true\",\n             \"group.field\", \"hotel_s1\",\n             \"facet\", \"true\",\n             \"facet.limit\", facetLimit,\n             \"facet.field\", \"airport_s1\",\n             \"facet.field\", \"duration_i1\"\n         ),\n        \"//lst[@name='facet_fields']/lst[@name='airport_s1']\",\n        \"*[count(//lst[@name='airport_s1']/int)=2]\",\n        \"//lst[@name='airport_s1']/int[@name='ams'][.='2']\",\n        \"//lst[@name='airport_s1']/int[@name='dus'][.='1']\",\n\n        \"//lst[@name='facet_fields']/lst[@name='duration_i1']\",\n        \"*[count(//lst[@name='duration_i1']/int)=2]\",\n        \"//lst[@name='duration_i1']/int[@name='5'][.='2']\",\n        \"//lst[@name='duration_i1']/int[@name='10'][.='2']\"\n    );\n    assertQ(\n        \"Return one facet count for field airport_a using facet.offset\",\n         req(\n             \"q\", \"*:*\",\n             \"fq\", \"id_i1:[2000 TO 2004]\",\n             \"group\", \"true\",\n             \"group.facet\", \"true\",\n             \"group.field\", \"hotel_s1\",\n             \"facet\", \"true\",\n             \"facet.offset\", \"1\",\n             \"facet.limit\", facetLimit,\n             \"facet.field\", \"airport_s1\"\n         ),\n        \"//lst[@name='facet_fields']/lst[@name='airport_s1']\",\n        \"*[count(//lst[@name='airport_s1']/int)=1]\",\n        \"//lst[@name='airport_s1']/int[@name='dus'][.='1']\"\n    );\n    assertQ(\n        \"Return two facet counts for field airport_a with fq\",\n         req(\n             \"q\", \"*:*\",\n             \"fq\", \"id_i1:[2000 TO 2004]\",\n             \"fq\", \"duration_i1:5\",\n             \"group\", \"true\",\n             \"group.facet\", \"true\",\n             \"group.field\", \"hotel_s1\",\n             \"facet\", \"true\",\n             \"facet.limit\", facetLimit,\n             \"facet.field\", \"airport_s1\"\n         ),\n        \"//lst[@name='facet_fields']/lst[@name='airport_s1']\",\n        \"*[count(//lst[@name='airport_s1']/int)=2]\",\n        \"//lst[@name='airport_s1']/int[@name='ams'][.='2']\",\n        \"//lst[@name='airport_s1']/int[@name='dus'][.='0']\"\n    );\n    assertQ(\n        \"Return one facet count for field airport_s1 with prefix a\",\n         req(\n             \"q\", \"*:*\",\n             \"fq\", \"id_i1:[2000 TO 2004]\",\n             \"group\", \"true\",\n             \"group.facet\", \"true\",\n             \"group.field\", \"hotel_s1\",\n             \"facet\", \"true\",\n             \"facet.field\", \"airport_s1\",\n             \"facet.limit\", facetLimit,\n             \"facet.prefix\", \"a\"\n         ),\n        \"//lst[@name='facet_fields']/lst[@name='airport_s1']\",\n        \"*[count(//lst[@name='airport_s1']/int)=1]\",\n        \"//lst[@name='airport_s1']/int[@name='ams'][.='2']\"\n    );\n    \n    try {\n      h.query(\n           req(\n               \"q\", \"*:*\",\n               \"fq\", \"id_i1:[2000 TO 2004]\",\n               \"group.facet\", \"true\",\n               \"facet\", \"true\",\n               \"facet.field\", \"airport_s1\",\n               \"facet.prefix\", \"a\"\n           )\n      );\n      fail(\"Exception should have been thrown\");\n    } catch (SolrException e) {\n      assertEquals(SolrException.ErrorCode.BAD_REQUEST.code, e.code());\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"7de000bbb5f66603221a528f0fe972afe72a6b97":["aa62c79a7afa4d7f22e1f71b883659f3213d7db1"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a71f63026529f3c1f03cfdd664910873ab2369ae":["7de000bbb5f66603221a528f0fe972afe72a6b97"],"d1a307447328c95a00248512b40d7a5ff12ecd6a":["28288370235ed02234a64753cdbf0c6ec096304a"],"d8daa7a1d5d0c033d73962d5ca3bf3f9c9687693":["28288370235ed02234a64753cdbf0c6ec096304a","d1a307447328c95a00248512b40d7a5ff12ecd6a"],"aa62c79a7afa4d7f22e1f71b883659f3213d7db1":["3685dcafc9195b0631414aa4d422f788479e62b7"],"3685dcafc9195b0631414aa4d422f788479e62b7":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"28288370235ed02234a64753cdbf0c6ec096304a":["7de000bbb5f66603221a528f0fe972afe72a6b97","a71f63026529f3c1f03cfdd664910873ab2369ae"],"f8061ddd97f3352007d927dae445884a6f3d857b":["28288370235ed02234a64753cdbf0c6ec096304a","d1a307447328c95a00248512b40d7a5ff12ecd6a"],"2a3ed3f77cdd034e789d00d1ca8bb7054c9fb8e9":["7de000bbb5f66603221a528f0fe972afe72a6b97","a71f63026529f3c1f03cfdd664910873ab2369ae"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["d1a307447328c95a00248512b40d7a5ff12ecd6a"],"491c9672ec42582fe43960452dbd37f1c80fe0f0":["aa62c79a7afa4d7f22e1f71b883659f3213d7db1","7de000bbb5f66603221a528f0fe972afe72a6b97"]},"commit2Childs":{"7de000bbb5f66603221a528f0fe972afe72a6b97":["a71f63026529f3c1f03cfdd664910873ab2369ae","28288370235ed02234a64753cdbf0c6ec096304a","2a3ed3f77cdd034e789d00d1ca8bb7054c9fb8e9","491c9672ec42582fe43960452dbd37f1c80fe0f0"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3685dcafc9195b0631414aa4d422f788479e62b7"],"a71f63026529f3c1f03cfdd664910873ab2369ae":["28288370235ed02234a64753cdbf0c6ec096304a","2a3ed3f77cdd034e789d00d1ca8bb7054c9fb8e9"],"d1a307447328c95a00248512b40d7a5ff12ecd6a":["d8daa7a1d5d0c033d73962d5ca3bf3f9c9687693","f8061ddd97f3352007d927dae445884a6f3d857b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"d8daa7a1d5d0c033d73962d5ca3bf3f9c9687693":[],"aa62c79a7afa4d7f22e1f71b883659f3213d7db1":["7de000bbb5f66603221a528f0fe972afe72a6b97","491c9672ec42582fe43960452dbd37f1c80fe0f0"],"28288370235ed02234a64753cdbf0c6ec096304a":["d1a307447328c95a00248512b40d7a5ff12ecd6a","d8daa7a1d5d0c033d73962d5ca3bf3f9c9687693","f8061ddd97f3352007d927dae445884a6f3d857b"],"3685dcafc9195b0631414aa4d422f788479e62b7":["aa62c79a7afa4d7f22e1f71b883659f3213d7db1"],"f8061ddd97f3352007d927dae445884a6f3d857b":[],"2a3ed3f77cdd034e789d00d1ca8bb7054c9fb8e9":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"491c9672ec42582fe43960452dbd37f1c80fe0f0":[]},"heads":["d8daa7a1d5d0c033d73962d5ca3bf3f9c9687693","f8061ddd97f3352007d927dae445884a6f3d857b","2a3ed3f77cdd034e789d00d1ca8bb7054c9fb8e9","cd5edd1f2b162a5cfa08efd17851a07373a96817","491c9672ec42582fe43960452dbd37f1c80fe0f0"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}