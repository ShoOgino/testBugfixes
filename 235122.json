{"path":"solr/core/src/java/org/apache/solr/schema/AbstractSpatialFieldType#getValueSourceFromSpatialArgs(QParser,SchemaField,SpatialArgs,String,T).mjava","commits":[{"id":"7dc82330b4d56ad46d05e79f14faf1aa5152843d","date":1404872659,"type":0,"author":"David Wayne Smiley","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/schema/AbstractSpatialFieldType#getValueSourceFromSpatialArgs(QParser,SchemaField,SpatialArgs,String,T).mjava","pathOld":"/dev/null","sourceNew":"  protected ValueSource getValueSourceFromSpatialArgs(QParser parser, SchemaField field, SpatialArgs spatialArgs, String score, T strategy) {\n    if (score == null || \"none\".equals(score) || \"\".equals(score)) {\n      return null;\n    } else if (\"distance\".equals(score)) {\n      double multiplier = 1.0;//TODO support units=kilometers\n      return strategy.makeDistanceValueSource(spatialArgs.getShape().getCenter(), multiplier);\n    } else if (\"recipDistance\".equals(score)) {\n      return strategy.makeRecipDistanceValueSource(spatialArgs.getShape());\n    } else {\n      throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \"'score' local-param must be one of 'none', 'distance', or 'recipDistance'\");\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["17727014530f6432ae28e319a0242b6030d3f18a"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"17727014530f6432ae28e319a0242b6030d3f18a","date":1416941348,"type":3,"author":"David Wayne Smiley","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/schema/AbstractSpatialFieldType#getValueSourceFromSpatialArgs(QParser,SchemaField,SpatialArgs,String,T).mjava","pathOld":"solr/core/src/java/org/apache/solr/schema/AbstractSpatialFieldType#getValueSourceFromSpatialArgs(QParser,SchemaField,SpatialArgs,String,T).mjava","sourceNew":"  protected ValueSource getValueSourceFromSpatialArgs(QParser parser, SchemaField field, SpatialArgs spatialArgs, String score, T strategy) {\n    if (score == null) {\n      return null;\n    }\n    switch (score) {\n      case NONE:\n      case \"\":\n        return null;\n      case DISTANCE:\n        double multiplier = 1.0;//TODO support units=kilometers\n        return strategy.makeDistanceValueSource(spatialArgs.getShape().getCenter(), multiplier);\n      case RECIP_DISTANCE:\n        return strategy.makeRecipDistanceValueSource(spatialArgs.getShape());\n      default:\n        throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,\n            \"'score' local-param must be one of \" + supportedScoreModes);\n    }\n  }\n\n","sourceOld":"  protected ValueSource getValueSourceFromSpatialArgs(QParser parser, SchemaField field, SpatialArgs spatialArgs, String score, T strategy) {\n    if (score == null || \"none\".equals(score) || \"\".equals(score)) {\n      return null;\n    } else if (\"distance\".equals(score)) {\n      double multiplier = 1.0;//TODO support units=kilometers\n      return strategy.makeDistanceValueSource(spatialArgs.getShape().getCenter(), multiplier);\n    } else if (\"recipDistance\".equals(score)) {\n      return strategy.makeRecipDistanceValueSource(spatialArgs.getShape());\n    } else {\n      throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \"'score' local-param must be one of 'none', 'distance', or 'recipDistance'\");\n    }\n  }\n\n","bugFix":["7dc82330b4d56ad46d05e79f14faf1aa5152843d"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"167133992e7b384ce97f83ddb1dd2ddd09daf7aa","date":1420315776,"type":3,"author":"David Wayne Smiley","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/schema/AbstractSpatialFieldType#getValueSourceFromSpatialArgs(QParser,SchemaField,SpatialArgs,String,T).mjava","pathOld":"solr/core/src/java/org/apache/solr/schema/AbstractSpatialFieldType#getValueSourceFromSpatialArgs(QParser,SchemaField,SpatialArgs,String,T).mjava","sourceNew":"  protected ValueSource getValueSourceFromSpatialArgs(QParser parser, SchemaField field, SpatialArgs spatialArgs, String score, T strategy) {\n    if (score == null) {\n      return null;\n    }\n\n    final double multiplier; // default multiplier for degrees\n\n    switch(score) {\n      case \"\":\n      case NONE:\n        return null;\n      case RECIP_DISTANCE:\n        return strategy.makeRecipDistanceValueSource(spatialArgs.getShape());\n      case DISTANCE:\n        multiplier = distanceUnits.multiplierFromDegreesToThisUnit();\n        break;\n      default:\n        DistanceUnits du = parseDistanceUnits(score);\n        if (du != null) {\n          multiplier = du.multiplierFromDegreesToThisUnit();\n        } else {\n        throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,\n              \"'score' local-param must be one of \" + supportedScoreModes + \", it was: \" + score);\n    }\n  }\n\n    return strategy.makeDistanceValueSource(spatialArgs.getShape().getCenter(), multiplier);\n  }\n\n","sourceOld":"  protected ValueSource getValueSourceFromSpatialArgs(QParser parser, SchemaField field, SpatialArgs spatialArgs, String score, T strategy) {\n    if (score == null) {\n      return null;\n    }\n    switch (score) {\n      case NONE:\n      case \"\":\n        return null;\n      case DISTANCE:\n        double multiplier = 1.0;//TODO support units=kilometers\n        return strategy.makeDistanceValueSource(spatialArgs.getShape().getCenter(), multiplier);\n      case RECIP_DISTANCE:\n        return strategy.makeRecipDistanceValueSource(spatialArgs.getShape());\n      default:\n        throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,\n            \"'score' local-param must be one of \" + supportedScoreModes);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6654c5f3ec2e4a84ef867c82d4eec872c2372c8c","date":1453060490,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/schema/AbstractSpatialFieldType#getValueSourceFromSpatialArgs(QParser,SchemaField,SpatialArgs,String,T).mjava","pathOld":"solr/core/src/java/org/apache/solr/schema/AbstractSpatialFieldType#getValueSourceFromSpatialArgs(QParser,SchemaField,SpatialArgs,String,T).mjava","sourceNew":"  protected ValueSource getValueSourceFromSpatialArgs(QParser parser, SchemaField field, SpatialArgs spatialArgs, String score, T strategy) {\n    if (score == null) {\n      return null;\n    }\n\n    final double multiplier; // default multiplier for degrees\n\n    switch(score) {\n      case \"\":\n      case NONE:\n        return null;\n      case RECIP_DISTANCE:\n        return strategy.makeRecipDistanceValueSource(spatialArgs.getShape());\n      case DISTANCE:\n        multiplier = distanceUnits.multiplierFromDegreesToThisUnit();\n        break;\n      default:\n        DistanceUnits du = parseDistanceUnits(score);\n        if (du != null) {\n          multiplier = du.multiplierFromDegreesToThisUnit();\n        } else {\n          throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,\n                                  \"'score' local-param must be one of \" + supportedScoreModes + \", it was: \" + score);\n        }\n    }\n\n    return strategy.makeDistanceValueSource(spatialArgs.getShape().getCenter(), multiplier);\n  }\n\n","sourceOld":"  protected ValueSource getValueSourceFromSpatialArgs(QParser parser, SchemaField field, SpatialArgs spatialArgs, String score, T strategy) {\n    if (score == null) {\n      return null;\n    }\n\n    final double multiplier; // default multiplier for degrees\n\n    switch(score) {\n      case \"\":\n      case NONE:\n        return null;\n      case RECIP_DISTANCE:\n        return strategy.makeRecipDistanceValueSource(spatialArgs.getShape());\n      case DISTANCE:\n        multiplier = distanceUnits.multiplierFromDegreesToThisUnit();\n        break;\n      default:\n        DistanceUnits du = parseDistanceUnits(score);\n        if (du != null) {\n          multiplier = du.multiplierFromDegreesToThisUnit();\n        } else {\n        throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,\n              \"'score' local-param must be one of \" + supportedScoreModes + \", it was: \" + score);\n    }\n  }\n\n    return strategy.makeDistanceValueSource(spatialArgs.getShape().getCenter(), multiplier);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"32b9119890a8e82252b6cc341ac491d18fa1e49b","date":1498575219,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/schema/AbstractSpatialFieldType#getValueSourceFromSpatialArgs(QParser,SchemaField,SpatialArgs,String,T).mjava","pathOld":"solr/core/src/java/org/apache/solr/schema/AbstractSpatialFieldType#getValueSourceFromSpatialArgs(QParser,SchemaField,SpatialArgs,String,T).mjava","sourceNew":"  protected DoubleValuesSource getValueSourceFromSpatialArgs(QParser parser, SchemaField field, SpatialArgs spatialArgs, String score, T strategy) {\n    if (score == null) {\n      return null;\n    }\n\n    final double multiplier; // default multiplier for degrees\n\n    switch(score) {\n      case \"\":\n      case NONE:\n        return null;\n      case RECIP_DISTANCE:\n        return strategy.makeRecipDistanceValueSource(spatialArgs.getShape());\n      case DISTANCE:\n        multiplier = distanceUnits.multiplierFromDegreesToThisUnit();\n        break;\n      default:\n        DistanceUnits du = parseDistanceUnits(score);\n        if (du != null) {\n          multiplier = du.multiplierFromDegreesToThisUnit();\n        } else {\n          throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,\n                                  \"'score' local-param must be one of \" + supportedScoreModes + \", it was: \" + score);\n        }\n    }\n\n    return strategy.makeDistanceValueSource(spatialArgs.getShape().getCenter(), multiplier);\n  }\n\n","sourceOld":"  protected ValueSource getValueSourceFromSpatialArgs(QParser parser, SchemaField field, SpatialArgs spatialArgs, String score, T strategy) {\n    if (score == null) {\n      return null;\n    }\n\n    final double multiplier; // default multiplier for degrees\n\n    switch(score) {\n      case \"\":\n      case NONE:\n        return null;\n      case RECIP_DISTANCE:\n        return strategy.makeRecipDistanceValueSource(spatialArgs.getShape());\n      case DISTANCE:\n        multiplier = distanceUnits.multiplierFromDegreesToThisUnit();\n        break;\n      default:\n        DistanceUnits du = parseDistanceUnits(score);\n        if (du != null) {\n          multiplier = du.multiplierFromDegreesToThisUnit();\n        } else {\n          throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,\n                                  \"'score' local-param must be one of \" + supportedScoreModes + \", it was: \" + score);\n        }\n    }\n\n    return strategy.makeDistanceValueSource(spatialArgs.getShape().getCenter(), multiplier);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"98f11c416d30e556e0004a9a84960702d12d35b1","date":1498628359,"type":3,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/schema/AbstractSpatialFieldType#getValueSourceFromSpatialArgs(QParser,SchemaField,SpatialArgs,String,T).mjava","pathOld":"solr/core/src/java/org/apache/solr/schema/AbstractSpatialFieldType#getValueSourceFromSpatialArgs(QParser,SchemaField,SpatialArgs,String,T).mjava","sourceNew":"  protected DoubleValuesSource getValueSourceFromSpatialArgs(QParser parser, SchemaField field, SpatialArgs spatialArgs, String score, T strategy) {\n    if (score == null) {\n      return null;\n    }\n\n    final double multiplier; // default multiplier for degrees\n\n    switch(score) {\n      case \"\":\n      case NONE:\n        return null;\n      case RECIP_DISTANCE:\n        return strategy.makeRecipDistanceValueSource(spatialArgs.getShape());\n      case DISTANCE:\n        multiplier = distanceUnits.multiplierFromDegreesToThisUnit();\n        break;\n      default:\n        DistanceUnits du = parseDistanceUnits(score);\n        if (du != null) {\n          multiplier = du.multiplierFromDegreesToThisUnit();\n        } else {\n          throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,\n                                  \"'score' local-param must be one of \" + supportedScoreModes + \", it was: \" + score);\n        }\n    }\n\n    return strategy.makeDistanceValueSource(spatialArgs.getShape().getCenter(), multiplier);\n  }\n\n","sourceOld":"  protected ValueSource getValueSourceFromSpatialArgs(QParser parser, SchemaField field, SpatialArgs spatialArgs, String score, T strategy) {\n    if (score == null) {\n      return null;\n    }\n\n    final double multiplier; // default multiplier for degrees\n\n    switch(score) {\n      case \"\":\n      case NONE:\n        return null;\n      case RECIP_DISTANCE:\n        return strategy.makeRecipDistanceValueSource(spatialArgs.getShape());\n      case DISTANCE:\n        multiplier = distanceUnits.multiplierFromDegreesToThisUnit();\n        break;\n      default:\n        DistanceUnits du = parseDistanceUnits(score);\n        if (du != null) {\n          multiplier = du.multiplierFromDegreesToThisUnit();\n        } else {\n          throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,\n                                  \"'score' local-param must be one of \" + supportedScoreModes + \", it was: \" + score);\n        }\n    }\n\n    return strategy.makeDistanceValueSource(spatialArgs.getShape().getCenter(), multiplier);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"28288370235ed02234a64753cdbf0c6ec096304a","date":1498726817,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/schema/AbstractSpatialFieldType#getValueSourceFromSpatialArgs(QParser,SchemaField,SpatialArgs,String,T).mjava","pathOld":"solr/core/src/java/org/apache/solr/schema/AbstractSpatialFieldType#getValueSourceFromSpatialArgs(QParser,SchemaField,SpatialArgs,String,T).mjava","sourceNew":"  protected DoubleValuesSource getValueSourceFromSpatialArgs(QParser parser, SchemaField field, SpatialArgs spatialArgs, String score, T strategy) {\n    if (score == null) {\n      return null;\n    }\n\n    final double multiplier; // default multiplier for degrees\n\n    switch(score) {\n      case \"\":\n      case NONE:\n        return null;\n      case RECIP_DISTANCE:\n        return strategy.makeRecipDistanceValueSource(spatialArgs.getShape());\n      case DISTANCE:\n        multiplier = distanceUnits.multiplierFromDegreesToThisUnit();\n        break;\n      default:\n        DistanceUnits du = parseDistanceUnits(score);\n        if (du != null) {\n          multiplier = du.multiplierFromDegreesToThisUnit();\n        } else {\n          throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,\n                                  \"'score' local-param must be one of \" + supportedScoreModes + \", it was: \" + score);\n        }\n    }\n\n    return strategy.makeDistanceValueSource(spatialArgs.getShape().getCenter(), multiplier);\n  }\n\n","sourceOld":"  protected ValueSource getValueSourceFromSpatialArgs(QParser parser, SchemaField field, SpatialArgs spatialArgs, String score, T strategy) {\n    if (score == null) {\n      return null;\n    }\n\n    final double multiplier; // default multiplier for degrees\n\n    switch(score) {\n      case \"\":\n      case NONE:\n        return null;\n      case RECIP_DISTANCE:\n        return strategy.makeRecipDistanceValueSource(spatialArgs.getShape());\n      case DISTANCE:\n        multiplier = distanceUnits.multiplierFromDegreesToThisUnit();\n        break;\n      default:\n        DistanceUnits du = parseDistanceUnits(score);\n        if (du != null) {\n          multiplier = du.multiplierFromDegreesToThisUnit();\n        } else {\n          throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,\n                                  \"'score' local-param must be one of \" + supportedScoreModes + \", it was: \" + score);\n        }\n    }\n\n    return strategy.makeDistanceValueSource(spatialArgs.getShape().getCenter(), multiplier);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"32b9119890a8e82252b6cc341ac491d18fa1e49b":["6654c5f3ec2e4a84ef867c82d4eec872c2372c8c"],"17727014530f6432ae28e319a0242b6030d3f18a":["7dc82330b4d56ad46d05e79f14faf1aa5152843d"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"7dc82330b4d56ad46d05e79f14faf1aa5152843d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"167133992e7b384ce97f83ddb1dd2ddd09daf7aa":["17727014530f6432ae28e319a0242b6030d3f18a"],"28288370235ed02234a64753cdbf0c6ec096304a":["6654c5f3ec2e4a84ef867c82d4eec872c2372c8c","32b9119890a8e82252b6cc341ac491d18fa1e49b"],"98f11c416d30e556e0004a9a84960702d12d35b1":["6654c5f3ec2e4a84ef867c82d4eec872c2372c8c","32b9119890a8e82252b6cc341ac491d18fa1e49b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["28288370235ed02234a64753cdbf0c6ec096304a"],"6654c5f3ec2e4a84ef867c82d4eec872c2372c8c":["167133992e7b384ce97f83ddb1dd2ddd09daf7aa"]},"commit2Childs":{"32b9119890a8e82252b6cc341ac491d18fa1e49b":["28288370235ed02234a64753cdbf0c6ec096304a","98f11c416d30e556e0004a9a84960702d12d35b1"],"17727014530f6432ae28e319a0242b6030d3f18a":["167133992e7b384ce97f83ddb1dd2ddd09daf7aa"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["7dc82330b4d56ad46d05e79f14faf1aa5152843d"],"7dc82330b4d56ad46d05e79f14faf1aa5152843d":["17727014530f6432ae28e319a0242b6030d3f18a"],"167133992e7b384ce97f83ddb1dd2ddd09daf7aa":["6654c5f3ec2e4a84ef867c82d4eec872c2372c8c"],"28288370235ed02234a64753cdbf0c6ec096304a":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"98f11c416d30e556e0004a9a84960702d12d35b1":[],"6654c5f3ec2e4a84ef867c82d4eec872c2372c8c":["32b9119890a8e82252b6cc341ac491d18fa1e49b","28288370235ed02234a64753cdbf0c6ec096304a","98f11c416d30e556e0004a9a84960702d12d35b1"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["98f11c416d30e556e0004a9a84960702d12d35b1","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}