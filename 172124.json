{"path":"lucene/facet/src/test/org/apache/lucene/facet/TestDrillSideways.Counters#inc(int[],int[],int).mjava","commits":[{"id":"21d36d0db865f7b84026b447bec653469a6e66df","date":1385495602,"type":1,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/TestDrillSideways.Counters#inc(int[],int[],int).mjava","pathOld":"lucene/facet/src/test/org/apache/lucene/facet/simple/TestSimpleDrillSideways.Counters#inc(int[],int[],int).mjava","sourceNew":"    public void inc(int[] dims, int[] dims2, int onlyDim) {\n      assert dims.length == counts.length;\n      assert dims2.length == counts.length;\n      for(int dim=0;dim<dims.length;dim++) {\n        if (onlyDim == -1 || dim == onlyDim) {\n          if (dims[dim] != -1) {\n            counts[dim][dims[dim]]++;\n          }\n          if (dims2[dim] != -1 && dims2[dim] != dims[dim]) {\n            counts[dim][dims2[dim]]++;\n          }\n        }\n      }\n    }\n\n","sourceOld":"    public void inc(int[] dims, int[] dims2, int onlyDim) {\n      assert dims.length == counts.length;\n      assert dims2.length == counts.length;\n      for(int dim=0;dim<dims.length;dim++) {\n        if (onlyDim == -1 || dim == onlyDim) {\n          if (dims[dim] != -1) {\n            counts[dim][dims[dim]]++;\n          }\n          if (dims2[dim] != -1 && dims2[dim] != dims[dim]) {\n            counts[dim][dims2[dim]]++;\n          }\n        }\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3cc728b07df73b197e6d940d27f9b08b63918f13","date":1388834348,"type":1,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/TestDrillSideways.Counters#inc(int[],int[],int).mjava","pathOld":"lucene/facet/src/test/org/apache/lucene/facet/search/TestDrillSideways.Counters#inc(int[],int[],int).mjava","sourceNew":"    public void inc(int[] dims, int[] dims2, int onlyDim) {\n      assert dims.length == counts.length;\n      assert dims2.length == counts.length;\n      for(int dim=0;dim<dims.length;dim++) {\n        if (onlyDim == -1 || dim == onlyDim) {\n          if (dims[dim] != -1) {\n            counts[dim][dims[dim]]++;\n          }\n          if (dims2[dim] != -1 && dims2[dim] != dims[dim]) {\n            counts[dim][dims2[dim]]++;\n          }\n        }\n      }\n    }\n\n","sourceOld":"    public void inc(int[] dims, int[] dims2, int onlyDim) {\n      assert dims.length == counts.length;\n      assert dims2.length == counts.length;\n      for(int dim=0;dim<dims.length;dim++) {\n        if (onlyDim == -1 || dim == onlyDim) {\n          if (dims[dim] != -1) {\n            counts[dim][dims[dim]]++;\n          }\n          if (dims2[dim] != -1 && dims2[dim] != dims[dim]) {\n            counts[dim][dims2[dim]]++;\n          }\n        }\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"91eb857a56b1a3a6659c666f88e2398347fc1c5a","date":1483442809,"type":3,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/TestDrillSideways.Counters#inc(int[],int[],int).mjava","pathOld":"lucene/facet/src/test/org/apache/lucene/facet/TestDrillSideways.Counters#inc(int[],int[],int).mjava","sourceNew":"    public void inc(int[] dims, int[] dims2, int onlyDim) {\n      assert dims.length == counts.length;\n      assert dims2.length == counts.length;\n      for (int dim = 0; dim < dims.length; dim++) {\n        if (onlyDim == -1 || dim == onlyDim) {\n          if (dims[dim] != -1) {\n            counts[dim][dims[dim]]++;\n          }\n          if (dims2[dim] != -1 && dims2[dim] != dims[dim]) {\n            counts[dim][dims2[dim]]++;\n          }\n        }\n      }\n    }\n\n","sourceOld":"    public void inc(int[] dims, int[] dims2, int onlyDim) {\n      assert dims.length == counts.length;\n      assert dims2.length == counts.length;\n      for(int dim=0;dim<dims.length;dim++) {\n        if (onlyDim == -1 || dim == onlyDim) {\n          if (dims[dim] != -1) {\n            counts[dim][dims[dim]]++;\n          }\n          if (dims2[dim] != -1 && dims2[dim] != dims[dim]) {\n            counts[dim][dims2[dim]]++;\n          }\n        }\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f03e4bed5023ec3ef93a771b8888cae991cf448d","date":1483469262,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/TestDrillSideways.Counters#inc(int[],int[],int).mjava","pathOld":"lucene/facet/src/test/org/apache/lucene/facet/TestDrillSideways.Counters#inc(int[],int[],int).mjava","sourceNew":"    public void inc(int[] dims, int[] dims2, int onlyDim) {\n      assert dims.length == counts.length;\n      assert dims2.length == counts.length;\n      for (int dim = 0; dim < dims.length; dim++) {\n        if (onlyDim == -1 || dim == onlyDim) {\n          if (dims[dim] != -1) {\n            counts[dim][dims[dim]]++;\n          }\n          if (dims2[dim] != -1 && dims2[dim] != dims[dim]) {\n            counts[dim][dims2[dim]]++;\n          }\n        }\n      }\n    }\n\n","sourceOld":"    public void inc(int[] dims, int[] dims2, int onlyDim) {\n      assert dims.length == counts.length;\n      assert dims2.length == counts.length;\n      for(int dim=0;dim<dims.length;dim++) {\n        if (onlyDim == -1 || dim == onlyDim) {\n          if (dims[dim] != -1) {\n            counts[dim][dims[dim]]++;\n          }\n          if (dims2[dim] != -1 && dims2[dim] != dims[dim]) {\n            counts[dim][dims2[dim]]++;\n          }\n        }\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"21d36d0db865f7b84026b447bec653469a6e66df":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"91eb857a56b1a3a6659c666f88e2398347fc1c5a":["3cc728b07df73b197e6d940d27f9b08b63918f13"],"3cc728b07df73b197e6d940d27f9b08b63918f13":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","21d36d0db865f7b84026b447bec653469a6e66df"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["91eb857a56b1a3a6659c666f88e2398347fc1c5a"],"f03e4bed5023ec3ef93a771b8888cae991cf448d":["3cc728b07df73b197e6d940d27f9b08b63918f13","91eb857a56b1a3a6659c666f88e2398347fc1c5a"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["21d36d0db865f7b84026b447bec653469a6e66df","3cc728b07df73b197e6d940d27f9b08b63918f13"],"21d36d0db865f7b84026b447bec653469a6e66df":["3cc728b07df73b197e6d940d27f9b08b63918f13"],"91eb857a56b1a3a6659c666f88e2398347fc1c5a":["cd5edd1f2b162a5cfa08efd17851a07373a96817","f03e4bed5023ec3ef93a771b8888cae991cf448d"],"3cc728b07df73b197e6d940d27f9b08b63918f13":["91eb857a56b1a3a6659c666f88e2398347fc1c5a","f03e4bed5023ec3ef93a771b8888cae991cf448d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"f03e4bed5023ec3ef93a771b8888cae991cf448d":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817","f03e4bed5023ec3ef93a771b8888cae991cf448d"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}