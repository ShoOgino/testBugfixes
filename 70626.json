{"path":"solr/core/src/java/org/apache/solr/handler/IndexFetcher.FileFetcher#FileFetcher(FileInterface,Map[String,Object],String,String,long).mjava","commits":[{"id":"86290366cefc1b9d4eced13b430858c4a4c0421d","date":1432321109,"type":1,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/IndexFetcher.FileFetcher#FileFetcher(FileInterface,Map[String,Object],String,String,long).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/IndexFetcher.FileFetcher#FileFetcher(FileInterface,Map[String,Object],String,boolean,long).mjava","sourceNew":"    FileFetcher(FileInterface file, Map<String, Object> fileDetails, String saveAs,\n                String solrParamOutput, long latestGen) throws IOException {\n      this.file = file;\n      this.fileName = (String) fileDetails.get(NAME);\n      this.size = (Long) fileDetails.get(SIZE);\n      this.solrParamOutput = solrParamOutput;\n      this.saveAs = saveAs;\n      indexGen = latestGen;\n      if (includeChecksum)\n        checksum = new Adler32();\n    }\n\n","sourceOld":"    FileFetcher(FileInterface file, Map<String, Object> fileDetails, String saveAs,\n                boolean isConf, long latestGen) throws IOException {\n      this.file = file;\n      this.fileName = (String) fileDetails.get(NAME);\n      this.size = (Long) fileDetails.get(SIZE);\n      this.isConf = isConf;\n      this.saveAs = saveAs;\n      indexGen = latestGen;\n      if (includeChecksum)\n        checksum = new Adler32();\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ad28156288ac00b91352582904d97e6653205757","date":1486850922,"type":3,"author":"markrmiller","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/IndexFetcher.FileFetcher#FileFetcher(FileInterface,Map[String,Object],String,String,long).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/IndexFetcher.FileFetcher#FileFetcher(FileInterface,Map[String,Object],String,String,long).mjava","sourceNew":"    FileFetcher(FileInterface file, Map<String, Object> fileDetails, String saveAs,\n                String solrParamOutput, long latestGen) throws IOException {\n      this.file = file;\n      this.fileName = (String) fileDetails.get(NAME);\n      this.size = (Long) fileDetails.get(SIZE);\n      this.solrParamOutput = solrParamOutput;\n      this.saveAs = saveAs;\n      indexGen = latestGen;\n      if (includeChecksum) {\n        checksum = new Adler32();\n      } else {\n        checksum = null;\n      }\n    }\n\n","sourceOld":"    FileFetcher(FileInterface file, Map<String, Object> fileDetails, String saveAs,\n                String solrParamOutput, long latestGen) throws IOException {\n      this.file = file;\n      this.fileName = (String) fileDetails.get(NAME);\n      this.size = (Long) fileDetails.get(SIZE);\n      this.solrParamOutput = solrParamOutput;\n      this.saveAs = saveAs;\n      indexGen = latestGen;\n      if (includeChecksum)\n        checksum = new Adler32();\n    }\n\n","bugFix":["86290366cefc1b9d4eced13b430858c4a4c0421d"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"101298ef523a301dde1044db3ed0f0521115c11a","date":1525719251,"type":3,"author":"David Smiley","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/IndexFetcher.FileFetcher#FileFetcher(FileInterface,Map[String,Object],String,String,long).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/IndexFetcher.FileFetcher#FileFetcher(FileInterface,Map[String,Object],String,String,long).mjava","sourceNew":"    FileFetcher(FileInterface file, Map<String, Object> fileDetails, String saveAs,\n                String solrParamOutput, long latestGen) throws IOException {\n      this.file = file;\n      this.fileName = (String) fileDetails.get(NAME);\n      this.size = (Long) fileDetails.get(SIZE);\n      buf = new byte[(int)Math.min(this.size, ReplicationHandler.PACKET_SZ)];\n      this.solrParamOutput = solrParamOutput;\n      this.saveAs = saveAs;\n      indexGen = latestGen;\n      if (includeChecksum) {\n        checksum = new Adler32();\n      } else {\n        checksum = null;\n      }\n    }\n\n","sourceOld":"    FileFetcher(FileInterface file, Map<String, Object> fileDetails, String saveAs,\n                String solrParamOutput, long latestGen) throws IOException {\n      this.file = file;\n      this.fileName = (String) fileDetails.get(NAME);\n      this.size = (Long) fileDetails.get(SIZE);\n      this.solrParamOutput = solrParamOutput;\n      this.saveAs = saveAs;\n      indexGen = latestGen;\n      if (includeChecksum) {\n        checksum = new Adler32();\n      } else {\n        checksum = null;\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"ad28156288ac00b91352582904d97e6653205757":["86290366cefc1b9d4eced13b430858c4a4c0421d"],"86290366cefc1b9d4eced13b430858c4a4c0421d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"101298ef523a301dde1044db3ed0f0521115c11a":["ad28156288ac00b91352582904d97e6653205757"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["101298ef523a301dde1044db3ed0f0521115c11a"]},"commit2Childs":{"ad28156288ac00b91352582904d97e6653205757":["101298ef523a301dde1044db3ed0f0521115c11a"],"86290366cefc1b9d4eced13b430858c4a4c0421d":["ad28156288ac00b91352582904d97e6653205757"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["86290366cefc1b9d4eced13b430858c4a4c0421d"],"101298ef523a301dde1044db3ed0f0521115c11a":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}