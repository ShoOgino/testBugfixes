{"path":"solr/solrj/src/java/org/apache/solr/client/solrj/impl/Http2SolrClient#getDefaultSslContextFactory().mjava","commits":[{"id":"1a77e5e21cbd575a8240b0e3926164f15295f4e8","date":1544979500,"type":0,"author":"Cao Manh Dat","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/impl/Http2SolrClient#getDefaultSslContextFactory().mjava","pathOld":"/dev/null","sourceNew":"  private static SslContextFactory getDefaultSslContextFactory() {\n    SslContextFactory sslContextFactory = new SslContextFactory(false);\n\n    if (null != System.getProperty(\"javax.net.ssl.keyStore\")) {\n      sslContextFactory.setKeyStorePath\n          (System.getProperty(\"javax.net.ssl.keyStore\"));\n    }\n    if (null != System.getProperty(\"javax.net.ssl.keyStorePassword\")) {\n      sslContextFactory.setKeyStorePassword\n          (System.getProperty(\"javax.net.ssl.keyStorePassword\"));\n    }\n    if (null != System.getProperty(\"javax.net.ssl.trustStore\")) {\n      sslContextFactory.setTrustStorePath\n          (System.getProperty(\"javax.net.ssl.trustStore\"));\n    }\n    if (null != System.getProperty(\"javax.net.ssl.trustStorePassword\")) {\n      sslContextFactory.setTrustStorePassword\n          (System.getProperty(\"javax.net.ssl.trustStorePassword\"));\n    }\n\n    String checkPeerNameStr = System.getProperty(HttpClientUtil.SYS_PROP_CHECK_PEER_NAME);\n    boolean sslCheckPeerName = true;\n    if (checkPeerNameStr == null || \"false\".equalsIgnoreCase(checkPeerNameStr)) {\n      sslCheckPeerName = false;\n    }\n\n    if (System.getProperty(\"tests.jettySsl.clientAuth\") != null) {\n      sslCheckPeerName = sslCheckPeerName || Boolean.getBoolean(\"tests.jettySsl.clientAuth\");\n    }\n\n    sslContextFactory.setNeedClientAuth(sslCheckPeerName);\n    return sslContextFactory;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["ea0f43f20834b3c8930e074b144aba27a935fee8"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"fc9b97d0316c4bdce70fd83fa5b21a003e7bd745","date":1560523579,"type":3,"author":"Cao Manh Dat","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/impl/Http2SolrClient#getDefaultSslContextFactory().mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/impl/Http2SolrClient#getDefaultSslContextFactory().mjava","sourceNew":"  private static SslContextFactory getDefaultSslContextFactory() {\n    String checkPeerNameStr = System.getProperty(HttpClientUtil.SYS_PROP_CHECK_PEER_NAME);\n    boolean sslCheckPeerName = true;\n    if (checkPeerNameStr == null || \"false\".equalsIgnoreCase(checkPeerNameStr)) {\n      sslCheckPeerName = false;\n    }\n\n    SslContextFactory.Client sslContextFactory = new SslContextFactory.Client(!sslCheckPeerName);\n\n    if (null != System.getProperty(\"javax.net.ssl.keyStore\")) {\n      sslContextFactory.setKeyStorePath\n          (System.getProperty(\"javax.net.ssl.keyStore\"));\n    }\n    if (null != System.getProperty(\"javax.net.ssl.keyStorePassword\")) {\n      sslContextFactory.setKeyStorePassword\n          (System.getProperty(\"javax.net.ssl.keyStorePassword\"));\n    }\n    if (null != System.getProperty(\"javax.net.ssl.trustStore\")) {\n      sslContextFactory.setTrustStorePath\n          (System.getProperty(\"javax.net.ssl.trustStore\"));\n    }\n    if (null != System.getProperty(\"javax.net.ssl.trustStorePassword\")) {\n      sslContextFactory.setTrustStorePassword\n          (System.getProperty(\"javax.net.ssl.trustStorePassword\"));\n    }\n\n    return sslContextFactory;\n  }\n\n","sourceOld":"  private static SslContextFactory getDefaultSslContextFactory() {\n    SslContextFactory sslContextFactory = new SslContextFactory(false);\n\n    if (null != System.getProperty(\"javax.net.ssl.keyStore\")) {\n      sslContextFactory.setKeyStorePath\n          (System.getProperty(\"javax.net.ssl.keyStore\"));\n    }\n    if (null != System.getProperty(\"javax.net.ssl.keyStorePassword\")) {\n      sslContextFactory.setKeyStorePassword\n          (System.getProperty(\"javax.net.ssl.keyStorePassword\"));\n    }\n    if (null != System.getProperty(\"javax.net.ssl.trustStore\")) {\n      sslContextFactory.setTrustStorePath\n          (System.getProperty(\"javax.net.ssl.trustStore\"));\n    }\n    if (null != System.getProperty(\"javax.net.ssl.trustStorePassword\")) {\n      sslContextFactory.setTrustStorePassword\n          (System.getProperty(\"javax.net.ssl.trustStorePassword\"));\n    }\n\n    String checkPeerNameStr = System.getProperty(HttpClientUtil.SYS_PROP_CHECK_PEER_NAME);\n    boolean sslCheckPeerName = true;\n    if (checkPeerNameStr == null || \"false\".equalsIgnoreCase(checkPeerNameStr)) {\n      sslCheckPeerName = false;\n    }\n\n    if (System.getProperty(\"tests.jettySsl.clientAuth\") != null) {\n      sslCheckPeerName = sslCheckPeerName || Boolean.getBoolean(\"tests.jettySsl.clientAuth\");\n    }\n\n    sslContextFactory.setNeedClientAuth(sslCheckPeerName);\n    return sslContextFactory;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"ea0f43f20834b3c8930e074b144aba27a935fee8","date":1576814747,"type":3,"author":"Kevin Risden","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/impl/Http2SolrClient#getDefaultSslContextFactory().mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/impl/Http2SolrClient#getDefaultSslContextFactory().mjava","sourceNew":"  private static SslContextFactory.Client getDefaultSslContextFactory() {\n    String checkPeerNameStr = System.getProperty(HttpClientUtil.SYS_PROP_CHECK_PEER_NAME);\n    boolean sslCheckPeerName = true;\n    if (checkPeerNameStr == null || \"false\".equalsIgnoreCase(checkPeerNameStr)) {\n      sslCheckPeerName = false;\n    }\n\n    SslContextFactory.Client sslContextFactory = new SslContextFactory.Client(!sslCheckPeerName);\n\n    if (null != System.getProperty(\"javax.net.ssl.keyStore\")) {\n      sslContextFactory.setKeyStorePath\n          (System.getProperty(\"javax.net.ssl.keyStore\"));\n    }\n    if (null != System.getProperty(\"javax.net.ssl.keyStorePassword\")) {\n      sslContextFactory.setKeyStorePassword\n          (System.getProperty(\"javax.net.ssl.keyStorePassword\"));\n    }\n    if (null != System.getProperty(\"javax.net.ssl.trustStore\")) {\n      sslContextFactory.setTrustStorePath\n          (System.getProperty(\"javax.net.ssl.trustStore\"));\n    }\n    if (null != System.getProperty(\"javax.net.ssl.trustStorePassword\")) {\n      sslContextFactory.setTrustStorePassword\n          (System.getProperty(\"javax.net.ssl.trustStorePassword\"));\n    }\n\n    return sslContextFactory;\n  }\n\n","sourceOld":"  private static SslContextFactory getDefaultSslContextFactory() {\n    String checkPeerNameStr = System.getProperty(HttpClientUtil.SYS_PROP_CHECK_PEER_NAME);\n    boolean sslCheckPeerName = true;\n    if (checkPeerNameStr == null || \"false\".equalsIgnoreCase(checkPeerNameStr)) {\n      sslCheckPeerName = false;\n    }\n\n    SslContextFactory.Client sslContextFactory = new SslContextFactory.Client(!sslCheckPeerName);\n\n    if (null != System.getProperty(\"javax.net.ssl.keyStore\")) {\n      sslContextFactory.setKeyStorePath\n          (System.getProperty(\"javax.net.ssl.keyStore\"));\n    }\n    if (null != System.getProperty(\"javax.net.ssl.keyStorePassword\")) {\n      sslContextFactory.setKeyStorePassword\n          (System.getProperty(\"javax.net.ssl.keyStorePassword\"));\n    }\n    if (null != System.getProperty(\"javax.net.ssl.trustStore\")) {\n      sslContextFactory.setTrustStorePath\n          (System.getProperty(\"javax.net.ssl.trustStore\"));\n    }\n    if (null != System.getProperty(\"javax.net.ssl.trustStorePassword\")) {\n      sslContextFactory.setTrustStorePassword\n          (System.getProperty(\"javax.net.ssl.trustStorePassword\"));\n    }\n\n    return sslContextFactory;\n  }\n\n","bugFix":["1a77e5e21cbd575a8240b0e3926164f15295f4e8"],"bugIntro":["3ebad754145f827052746b3889a852fb0de5a053"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"4c66470e527299cc148ad0b3441d08dfb7cb9e03","date":1576859740,"type":3,"author":"Dawid Weiss","isMerge":true,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/impl/Http2SolrClient#getDefaultSslContextFactory().mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/impl/Http2SolrClient#getDefaultSslContextFactory().mjava","sourceNew":"  private static SslContextFactory.Client getDefaultSslContextFactory() {\n    String checkPeerNameStr = System.getProperty(HttpClientUtil.SYS_PROP_CHECK_PEER_NAME);\n    boolean sslCheckPeerName = true;\n    if (checkPeerNameStr == null || \"false\".equalsIgnoreCase(checkPeerNameStr)) {\n      sslCheckPeerName = false;\n    }\n\n    SslContextFactory.Client sslContextFactory = new SslContextFactory.Client(!sslCheckPeerName);\n\n    if (null != System.getProperty(\"javax.net.ssl.keyStore\")) {\n      sslContextFactory.setKeyStorePath\n          (System.getProperty(\"javax.net.ssl.keyStore\"));\n    }\n    if (null != System.getProperty(\"javax.net.ssl.keyStorePassword\")) {\n      sslContextFactory.setKeyStorePassword\n          (System.getProperty(\"javax.net.ssl.keyStorePassword\"));\n    }\n    if (null != System.getProperty(\"javax.net.ssl.trustStore\")) {\n      sslContextFactory.setTrustStorePath\n          (System.getProperty(\"javax.net.ssl.trustStore\"));\n    }\n    if (null != System.getProperty(\"javax.net.ssl.trustStorePassword\")) {\n      sslContextFactory.setTrustStorePassword\n          (System.getProperty(\"javax.net.ssl.trustStorePassword\"));\n    }\n\n    return sslContextFactory;\n  }\n\n","sourceOld":"  private static SslContextFactory getDefaultSslContextFactory() {\n    String checkPeerNameStr = System.getProperty(HttpClientUtil.SYS_PROP_CHECK_PEER_NAME);\n    boolean sslCheckPeerName = true;\n    if (checkPeerNameStr == null || \"false\".equalsIgnoreCase(checkPeerNameStr)) {\n      sslCheckPeerName = false;\n    }\n\n    SslContextFactory.Client sslContextFactory = new SslContextFactory.Client(!sslCheckPeerName);\n\n    if (null != System.getProperty(\"javax.net.ssl.keyStore\")) {\n      sslContextFactory.setKeyStorePath\n          (System.getProperty(\"javax.net.ssl.keyStore\"));\n    }\n    if (null != System.getProperty(\"javax.net.ssl.keyStorePassword\")) {\n      sslContextFactory.setKeyStorePassword\n          (System.getProperty(\"javax.net.ssl.keyStorePassword\"));\n    }\n    if (null != System.getProperty(\"javax.net.ssl.trustStore\")) {\n      sslContextFactory.setTrustStorePath\n          (System.getProperty(\"javax.net.ssl.trustStore\"));\n    }\n    if (null != System.getProperty(\"javax.net.ssl.trustStorePassword\")) {\n      sslContextFactory.setTrustStorePassword\n          (System.getProperty(\"javax.net.ssl.trustStorePassword\"));\n    }\n\n    return sslContextFactory;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"3ebad754145f827052746b3889a852fb0de5a053","date":1578583715,"type":3,"author":"Kevin Risden","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/impl/Http2SolrClient#getDefaultSslContextFactory().mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/impl/Http2SolrClient#getDefaultSslContextFactory().mjava","sourceNew":"  /* package-private for testing */\n  static SslContextFactory.Client getDefaultSslContextFactory() {\n    String checkPeerNameStr = System.getProperty(HttpClientUtil.SYS_PROP_CHECK_PEER_NAME);\n    boolean sslCheckPeerName = true;\n    if (checkPeerNameStr == null || \"false\".equalsIgnoreCase(checkPeerNameStr)) {\n      sslCheckPeerName = false;\n    }\n\n    SslContextFactory.Client sslContextFactory = new SslContextFactory.Client(!sslCheckPeerName);\n\n    if (null != System.getProperty(\"javax.net.ssl.keyStore\")) {\n      sslContextFactory.setKeyStorePath\n          (System.getProperty(\"javax.net.ssl.keyStore\"));\n    }\n    if (null != System.getProperty(\"javax.net.ssl.keyStorePassword\")) {\n      sslContextFactory.setKeyStorePassword\n          (System.getProperty(\"javax.net.ssl.keyStorePassword\"));\n    }\n    if (null != System.getProperty(\"javax.net.ssl.trustStore\")) {\n      sslContextFactory.setTrustStorePath\n          (System.getProperty(\"javax.net.ssl.trustStore\"));\n    }\n    if (null != System.getProperty(\"javax.net.ssl.trustStorePassword\")) {\n      sslContextFactory.setTrustStorePassword\n          (System.getProperty(\"javax.net.ssl.trustStorePassword\"));\n    }\n\n    sslContextFactory.setEndpointIdentificationAlgorithm(System.getProperty(\"solr.jetty.ssl.verifyClientHostName\"));\n\n    return sslContextFactory;\n  }\n\n","sourceOld":"  private static SslContextFactory.Client getDefaultSslContextFactory() {\n    String checkPeerNameStr = System.getProperty(HttpClientUtil.SYS_PROP_CHECK_PEER_NAME);\n    boolean sslCheckPeerName = true;\n    if (checkPeerNameStr == null || \"false\".equalsIgnoreCase(checkPeerNameStr)) {\n      sslCheckPeerName = false;\n    }\n\n    SslContextFactory.Client sslContextFactory = new SslContextFactory.Client(!sslCheckPeerName);\n\n    if (null != System.getProperty(\"javax.net.ssl.keyStore\")) {\n      sslContextFactory.setKeyStorePath\n          (System.getProperty(\"javax.net.ssl.keyStore\"));\n    }\n    if (null != System.getProperty(\"javax.net.ssl.keyStorePassword\")) {\n      sslContextFactory.setKeyStorePassword\n          (System.getProperty(\"javax.net.ssl.keyStorePassword\"));\n    }\n    if (null != System.getProperty(\"javax.net.ssl.trustStore\")) {\n      sslContextFactory.setTrustStorePath\n          (System.getProperty(\"javax.net.ssl.trustStore\"));\n    }\n    if (null != System.getProperty(\"javax.net.ssl.trustStorePassword\")) {\n      sslContextFactory.setTrustStorePassword\n          (System.getProperty(\"javax.net.ssl.trustStorePassword\"));\n    }\n\n    return sslContextFactory;\n  }\n\n","bugFix":["ea0f43f20834b3c8930e074b144aba27a935fee8"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"24dab91095bdf34d602ca5a18f81df6cb308709f","date":1578594129,"type":3,"author":"Dawid Weiss","isMerge":true,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/impl/Http2SolrClient#getDefaultSslContextFactory().mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/impl/Http2SolrClient#getDefaultSslContextFactory().mjava","sourceNew":"  /* package-private for testing */\n  static SslContextFactory.Client getDefaultSslContextFactory() {\n    String checkPeerNameStr = System.getProperty(HttpClientUtil.SYS_PROP_CHECK_PEER_NAME);\n    boolean sslCheckPeerName = true;\n    if (checkPeerNameStr == null || \"false\".equalsIgnoreCase(checkPeerNameStr)) {\n      sslCheckPeerName = false;\n    }\n\n    SslContextFactory.Client sslContextFactory = new SslContextFactory.Client(!sslCheckPeerName);\n\n    if (null != System.getProperty(\"javax.net.ssl.keyStore\")) {\n      sslContextFactory.setKeyStorePath\n          (System.getProperty(\"javax.net.ssl.keyStore\"));\n    }\n    if (null != System.getProperty(\"javax.net.ssl.keyStorePassword\")) {\n      sslContextFactory.setKeyStorePassword\n          (System.getProperty(\"javax.net.ssl.keyStorePassword\"));\n    }\n    if (null != System.getProperty(\"javax.net.ssl.trustStore\")) {\n      sslContextFactory.setTrustStorePath\n          (System.getProperty(\"javax.net.ssl.trustStore\"));\n    }\n    if (null != System.getProperty(\"javax.net.ssl.trustStorePassword\")) {\n      sslContextFactory.setTrustStorePassword\n          (System.getProperty(\"javax.net.ssl.trustStorePassword\"));\n    }\n\n    sslContextFactory.setEndpointIdentificationAlgorithm(System.getProperty(\"solr.jetty.ssl.verifyClientHostName\"));\n\n    return sslContextFactory;\n  }\n\n","sourceOld":"  private static SslContextFactory.Client getDefaultSslContextFactory() {\n    String checkPeerNameStr = System.getProperty(HttpClientUtil.SYS_PROP_CHECK_PEER_NAME);\n    boolean sslCheckPeerName = true;\n    if (checkPeerNameStr == null || \"false\".equalsIgnoreCase(checkPeerNameStr)) {\n      sslCheckPeerName = false;\n    }\n\n    SslContextFactory.Client sslContextFactory = new SslContextFactory.Client(!sslCheckPeerName);\n\n    if (null != System.getProperty(\"javax.net.ssl.keyStore\")) {\n      sslContextFactory.setKeyStorePath\n          (System.getProperty(\"javax.net.ssl.keyStore\"));\n    }\n    if (null != System.getProperty(\"javax.net.ssl.keyStorePassword\")) {\n      sslContextFactory.setKeyStorePassword\n          (System.getProperty(\"javax.net.ssl.keyStorePassword\"));\n    }\n    if (null != System.getProperty(\"javax.net.ssl.trustStore\")) {\n      sslContextFactory.setTrustStorePath\n          (System.getProperty(\"javax.net.ssl.trustStore\"));\n    }\n    if (null != System.getProperty(\"javax.net.ssl.trustStorePassword\")) {\n      sslContextFactory.setTrustStorePassword\n          (System.getProperty(\"javax.net.ssl.trustStorePassword\"));\n    }\n\n    return sslContextFactory;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"1a77e5e21cbd575a8240b0e3926164f15295f4e8":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"ea0f43f20834b3c8930e074b144aba27a935fee8":["fc9b97d0316c4bdce70fd83fa5b21a003e7bd745"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"24dab91095bdf34d602ca5a18f81df6cb308709f":["4c66470e527299cc148ad0b3441d08dfb7cb9e03","3ebad754145f827052746b3889a852fb0de5a053"],"fc9b97d0316c4bdce70fd83fa5b21a003e7bd745":["1a77e5e21cbd575a8240b0e3926164f15295f4e8"],"4c66470e527299cc148ad0b3441d08dfb7cb9e03":["fc9b97d0316c4bdce70fd83fa5b21a003e7bd745","ea0f43f20834b3c8930e074b144aba27a935fee8"],"3ebad754145f827052746b3889a852fb0de5a053":["ea0f43f20834b3c8930e074b144aba27a935fee8"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3ebad754145f827052746b3889a852fb0de5a053"]},"commit2Childs":{"1a77e5e21cbd575a8240b0e3926164f15295f4e8":["fc9b97d0316c4bdce70fd83fa5b21a003e7bd745"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["1a77e5e21cbd575a8240b0e3926164f15295f4e8"],"ea0f43f20834b3c8930e074b144aba27a935fee8":["4c66470e527299cc148ad0b3441d08dfb7cb9e03","3ebad754145f827052746b3889a852fb0de5a053"],"24dab91095bdf34d602ca5a18f81df6cb308709f":[],"fc9b97d0316c4bdce70fd83fa5b21a003e7bd745":["ea0f43f20834b3c8930e074b144aba27a935fee8","4c66470e527299cc148ad0b3441d08dfb7cb9e03"],"4c66470e527299cc148ad0b3441d08dfb7cb9e03":["24dab91095bdf34d602ca5a18f81df6cb308709f"],"3ebad754145f827052746b3889a852fb0de5a053":["24dab91095bdf34d602ca5a18f81df6cb308709f","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["24dab91095bdf34d602ca5a18f81df6cb308709f","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}