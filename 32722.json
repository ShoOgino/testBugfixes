{"path":"lucene/core/src/java/org/apache/lucene/store/Directory.SlicedIndexInput#readInternal(byte[],int,int).mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/store/Directory.SlicedIndexInput#readInternal(byte[],int,int).mjava","pathOld":"lucene/src/java/org/apache/lucene/store/Directory.SlicedIndexInput#readInternal(byte[],int,int).mjava","sourceNew":"    /** Expert: implements buffer refill.  Reads bytes from the current\n     *  position in the input.\n     * @param b the array to read bytes into\n     * @param offset the offset in the array to start storing bytes\n     * @param len the number of bytes to read\n     */\n    @Override\n    protected void readInternal(byte[] b, int offset, int len) throws IOException {\n      long start = getFilePointer();\n      if(start + len > length)\n        throw new EOFException(\"read past EOF: \" + this);\n      base.seek(fileOffset + start);\n      base.readBytes(b, offset, len, false);\n    }\n\n","sourceOld":"    /** Expert: implements buffer refill.  Reads bytes from the current\n     *  position in the input.\n     * @param b the array to read bytes into\n     * @param offset the offset in the array to start storing bytes\n     * @param len the number of bytes to read\n     */\n    @Override\n    protected void readInternal(byte[] b, int offset, int len) throws IOException {\n      long start = getFilePointer();\n      if(start + len > length)\n        throw new EOFException(\"read past EOF: \" + this);\n      base.seek(fileOffset + start);\n      base.readBytes(b, offset, len, false);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e7db8f2ddb77c9e36f948c8283a3b61bdfb6c2f3","date":1400334249,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/store/BufferedIndexInput.SlicedIndexInput#readInternal(byte[],int,int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/store/Directory.SlicedIndexInput#readInternal(byte[],int,int).mjava","sourceNew":"    @Override\n    protected void readInternal(byte[] b, int offset, int len) throws IOException {\n      long start = getFilePointer();\n      if (start + len > length) {\n        throw new EOFException(\"read past EOF: \" + this);\n      }\n      base.seek(fileOffset + start);\n      base.readBytes(b, offset, len, false);\n    }\n\n","sourceOld":"    /** Expert: implements buffer refill.  Reads bytes from the current\n     *  position in the input.\n     * @param b the array to read bytes into\n     * @param offset the offset in the array to start storing bytes\n     * @param len the number of bytes to read\n     */\n    @Override\n    protected void readInternal(byte[] b, int offset, int len) throws IOException {\n      long start = getFilePointer();\n      if(start + len > length)\n        throw new EOFException(\"read past EOF: \" + this);\n      base.seek(fileOffset + start);\n      base.readBytes(b, offset, len, false);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"56572ec06f1407c066d6b7399413178b33176cd8","date":1400495675,"type":5,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/store/BufferedIndexInput.SlicedIndexInput#readInternal(byte[],int,int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/store/Directory.SlicedIndexInput#readInternal(byte[],int,int).mjava","sourceNew":"    @Override\n    protected void readInternal(byte[] b, int offset, int len) throws IOException {\n      long start = getFilePointer();\n      if (start + len > length) {\n        throw new EOFException(\"read past EOF: \" + this);\n      }\n      base.seek(fileOffset + start);\n      base.readBytes(b, offset, len, false);\n    }\n\n","sourceOld":"    /** Expert: implements buffer refill.  Reads bytes from the current\n     *  position in the input.\n     * @param b the array to read bytes into\n     * @param offset the offset in the array to start storing bytes\n     * @param len the number of bytes to read\n     */\n    @Override\n    protected void readInternal(byte[] b, int offset, int len) throws IOException {\n      long start = getFilePointer();\n      if(start + len > length)\n        throw new EOFException(\"read past EOF: \" + this);\n      base.seek(fileOffset + start);\n      base.readBytes(b, offset, len, false);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"e7db8f2ddb77c9e36f948c8283a3b61bdfb6c2f3":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"56572ec06f1407c066d6b7399413178b33176cd8":["3a119bbc8703c10faa329ec201c654b3a35a1e3e","e7db8f2ddb77c9e36f948c8283a3b61bdfb6c2f3"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["e7db8f2ddb77c9e36f948c8283a3b61bdfb6c2f3"]},"commit2Childs":{"e7db8f2ddb77c9e36f948c8283a3b61bdfb6c2f3":["56572ec06f1407c066d6b7399413178b33176cd8","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["e7db8f2ddb77c9e36f948c8283a3b61bdfb6c2f3","56572ec06f1407c066d6b7399413178b33176cd8"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"56572ec06f1407c066d6b7399413178b33176cd8":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["56572ec06f1407c066d6b7399413178b33176cd8","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}