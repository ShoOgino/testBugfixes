{"path":"contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/FileListEntityProcessor#init(Context).mjava","commits":[{"id":"4d4f1b2c5601680b01c4bb95a43fe6fb73f03103","date":1217446558,"type":0,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/FileListEntityProcessor#init(Context).mjava","pathOld":"/dev/null","sourceNew":"  public void init(Context context) {\n    super.init(context);\n    fileName = context.getEntityAttribute(FILE_NAME);\n    if (fileName != null) {\n      fileName = resolver.replaceTokens(fileName);\n      fileNamePattern = Pattern.compile(fileName);\n    }\n    baseDir = context.getEntityAttribute(BASE_DIR);\n    if (baseDir == null)\n      throw new DataImportHandlerException(DataImportHandlerException.SEVERE,\n              \"'baseDir' is a required attribute\");\n    baseDir = resolver.replaceTokens(baseDir);\n    File dir = new File(baseDir);\n    if (!dir.isDirectory())\n      throw new DataImportHandlerException(DataImportHandlerException.SEVERE,\n              \"'baseDir' should point to a directory\");\n    String r = context.getEntityAttribute(RECURSIVE);\n    if (r != null)\n      recursive = Boolean.parseBoolean(r);\n    excludes = context.getEntityAttribute(EXCLUDES);\n    if (excludes != null)\n      excludes = resolver.replaceTokens(excludes);\n    if (excludes != null)\n      excludesPattern = Pattern.compile(excludes);\n\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7b8b1f5c3c79134c264c2a6688f376c8e6573104","date":1222976310,"type":3,"author":"Grant Ingersoll","isMerge":false,"pathNew":"contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/FileListEntityProcessor#init(Context).mjava","pathOld":"contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/FileListEntityProcessor#init(Context).mjava","sourceNew":"  public void init(Context context) {\n    super.init(context);\n    fileName = context.getEntityAttribute(FILE_NAME);\n    if (fileName != null) {\n      fileName = resolver.replaceTokens(fileName);\n      fileNamePattern = Pattern.compile(fileName);\n    }\n    baseDir = context.getEntityAttribute(BASE_DIR);\n    if (baseDir == null)\n      throw new DataImportHandlerException(DataImportHandlerException.SEVERE,\n              \"'baseDir' is a required attribute\");\n    baseDir = resolver.replaceTokens(baseDir);\n    File dir = new File(baseDir);\n    if (!dir.isDirectory())\n      throw new DataImportHandlerException(DataImportHandlerException.SEVERE,\n              \"'baseDir' value: \" + baseDir + \" is not a directory\");\n\n    String r = context.getEntityAttribute(RECURSIVE);\n    if (r != null)\n      recursive = Boolean.parseBoolean(r);\n    excludes = context.getEntityAttribute(EXCLUDES);\n    if (excludes != null)\n      excludes = resolver.replaceTokens(excludes);\n    if (excludes != null)\n      excludesPattern = Pattern.compile(excludes);\n\n  }\n\n","sourceOld":"  public void init(Context context) {\n    super.init(context);\n    fileName = context.getEntityAttribute(FILE_NAME);\n    if (fileName != null) {\n      fileName = resolver.replaceTokens(fileName);\n      fileNamePattern = Pattern.compile(fileName);\n    }\n    baseDir = context.getEntityAttribute(BASE_DIR);\n    if (baseDir == null)\n      throw new DataImportHandlerException(DataImportHandlerException.SEVERE,\n              \"'baseDir' is a required attribute\");\n    baseDir = resolver.replaceTokens(baseDir);\n    File dir = new File(baseDir);\n    if (!dir.isDirectory())\n      throw new DataImportHandlerException(DataImportHandlerException.SEVERE,\n              \"'baseDir' should point to a directory\");\n    String r = context.getEntityAttribute(RECURSIVE);\n    if (r != null)\n      recursive = Boolean.parseBoolean(r);\n    excludes = context.getEntityAttribute(EXCLUDES);\n    if (excludes != null)\n      excludes = resolver.replaceTokens(excludes);\n    if (excludes != null)\n      excludesPattern = Pattern.compile(excludes);\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d241a0d7846c11e0602e9ade2311edaa6e833c9a","date":1233693200,"type":3,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/FileListEntityProcessor#init(Context).mjava","pathOld":"contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/FileListEntityProcessor#init(Context).mjava","sourceNew":"  public void init(Context context) {\n    super.init(context);\n    fileName = context.getEntityAttribute(FILE_NAME);\n    if (fileName != null) {\n      fileName = resolver.replaceTokens(fileName);\n      fileNamePattern = Pattern.compile(fileName);\n    }\n    baseDir = context.getEntityAttribute(BASE_DIR);\n    if (baseDir == null)\n      throw new DataImportHandlerException(DataImportHandlerException.SEVERE,\n              \"'baseDir' is a required attribute\");\n    baseDir = resolver.replaceTokens(baseDir);\n    File dir = new File(baseDir);\n    if (!dir.isDirectory())\n      throw new DataImportHandlerException(DataImportHandlerException.SEVERE,\n              \"'baseDir' value: \" + baseDir + \" is not a directory\");\n\n    String r = context.getEntityAttribute(RECURSIVE);\n    if (r != null)\n      recursive = Boolean.parseBoolean(r);\n    excludes = context.getEntityAttribute(EXCLUDES);\n    if (excludes != null) {\n      excludes = resolver.replaceTokens(excludes);\n      excludesPattern = Pattern.compile(excludes);\n    }\n  }\n\n","sourceOld":"  public void init(Context context) {\n    super.init(context);\n    fileName = context.getEntityAttribute(FILE_NAME);\n    if (fileName != null) {\n      fileName = resolver.replaceTokens(fileName);\n      fileNamePattern = Pattern.compile(fileName);\n    }\n    baseDir = context.getEntityAttribute(BASE_DIR);\n    if (baseDir == null)\n      throw new DataImportHandlerException(DataImportHandlerException.SEVERE,\n              \"'baseDir' is a required attribute\");\n    baseDir = resolver.replaceTokens(baseDir);\n    File dir = new File(baseDir);\n    if (!dir.isDirectory())\n      throw new DataImportHandlerException(DataImportHandlerException.SEVERE,\n              \"'baseDir' value: \" + baseDir + \" is not a directory\");\n\n    String r = context.getEntityAttribute(RECURSIVE);\n    if (r != null)\n      recursive = Boolean.parseBoolean(r);\n    excludes = context.getEntityAttribute(EXCLUDES);\n    if (excludes != null)\n      excludes = resolver.replaceTokens(excludes);\n    if (excludes != null)\n      excludesPattern = Pattern.compile(excludes);\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"153cc06382fdc94d0ea3db127eab860ae4310525","date":1260181667,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/FileListEntityProcessor#init(Context).mjava","pathOld":"contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/FileListEntityProcessor#init(Context).mjava","sourceNew":"  public void init(Context context) {\n    super.init(context);\n    fileName = context.getEntityAttribute(FILE_NAME);\n    if (fileName != null) {\n      fileName = context.replaceTokens(fileName);\n      fileNamePattern = Pattern.compile(fileName);\n    }\n    baseDir = context.getEntityAttribute(BASE_DIR);\n    if (baseDir == null)\n      throw new DataImportHandlerException(DataImportHandlerException.SEVERE,\n              \"'baseDir' is a required attribute\");\n    baseDir = context.replaceTokens(baseDir);\n    File dir = new File(baseDir);\n    if (!dir.isDirectory())\n      throw new DataImportHandlerException(DataImportHandlerException.SEVERE,\n              \"'baseDir' value: \" + baseDir + \" is not a directory\");\n\n    String r = context.getEntityAttribute(RECURSIVE);\n    if (r != null)\n      recursive = Boolean.parseBoolean(r);\n    excludes = context.getEntityAttribute(EXCLUDES);\n    if (excludes != null) {\n      excludes = context.replaceTokens(excludes);\n      excludesPattern = Pattern.compile(excludes);\n    }\n  }\n\n","sourceOld":"  public void init(Context context) {\n    super.init(context);\n    fileName = context.getEntityAttribute(FILE_NAME);\n    if (fileName != null) {\n      fileName = resolver.replaceTokens(fileName);\n      fileNamePattern = Pattern.compile(fileName);\n    }\n    baseDir = context.getEntityAttribute(BASE_DIR);\n    if (baseDir == null)\n      throw new DataImportHandlerException(DataImportHandlerException.SEVERE,\n              \"'baseDir' is a required attribute\");\n    baseDir = resolver.replaceTokens(baseDir);\n    File dir = new File(baseDir);\n    if (!dir.isDirectory())\n      throw new DataImportHandlerException(DataImportHandlerException.SEVERE,\n              \"'baseDir' value: \" + baseDir + \" is not a directory\");\n\n    String r = context.getEntityAttribute(RECURSIVE);\n    if (r != null)\n      recursive = Boolean.parseBoolean(r);\n    excludes = context.getEntityAttribute(EXCLUDES);\n    if (excludes != null) {\n      excludes = resolver.replaceTokens(excludes);\n      excludesPattern = Pattern.compile(excludes);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ad94625fb8d088209f46650c8097196fec67f00c","date":1453508319,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/FileListEntityProcessor#init(Context).mjava","pathOld":"contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/FileListEntityProcessor#init(Context).mjava","sourceNew":"  public void init(Context context) {\n    super.init(context);\n    fileName = context.getEntityAttribute(FILE_NAME);\n    if (fileName != null) {\n      fileName = context.replaceTokens(fileName);\n      fileNamePattern = Pattern.compile(fileName);\n    }\n    baseDir = context.getEntityAttribute(BASE_DIR);\n    if (baseDir == null)\n      throw new DataImportHandlerException(DataImportHandlerException.SEVERE,\n              \"'baseDir' is a required attribute\");\n    baseDir = context.replaceTokens(baseDir);\n    File dir = new File(baseDir);\n    if (!dir.isDirectory())\n      throw new DataImportHandlerException(DataImportHandlerException.SEVERE,\n              \"'baseDir' value: \" + baseDir + \" is not a directory\");\n\n    String r = context.getEntityAttribute(RECURSIVE);\n    if (r != null)\n      recursive = Boolean.parseBoolean(r);\n    excludes = context.getEntityAttribute(EXCLUDES);\n    if (excludes != null) {\n      excludes = context.replaceTokens(excludes);\n      excludesPattern = Pattern.compile(excludes);\n    }\n  }\n\n","sourceOld":"  public void init(Context context) {\n    super.init(context);\n    fileName = context.getEntityAttribute(FILE_NAME);\n    if (fileName != null) {\n      fileName = context.replaceTokens(fileName);\n      fileNamePattern = Pattern.compile(fileName);\n    }\n    baseDir = context.getEntityAttribute(BASE_DIR);\n    if (baseDir == null)\n      throw new DataImportHandlerException(DataImportHandlerException.SEVERE,\n              \"'baseDir' is a required attribute\");\n    baseDir = context.replaceTokens(baseDir);\n    File dir = new File(baseDir);\n    if (!dir.isDirectory())\n      throw new DataImportHandlerException(DataImportHandlerException.SEVERE,\n              \"'baseDir' value: \" + baseDir + \" is not a directory\");\n\n    String r = context.getEntityAttribute(RECURSIVE);\n    if (r != null)\n      recursive = Boolean.parseBoolean(r);\n    excludes = context.getEntityAttribute(EXCLUDES);\n    if (excludes != null) {\n      excludes = context.replaceTokens(excludes);\n      excludesPattern = Pattern.compile(excludes);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"4d4f1b2c5601680b01c4bb95a43fe6fb73f03103":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"ad94625fb8d088209f46650c8097196fec67f00c":["153cc06382fdc94d0ea3db127eab860ae4310525"],"7b8b1f5c3c79134c264c2a6688f376c8e6573104":["4d4f1b2c5601680b01c4bb95a43fe6fb73f03103"],"153cc06382fdc94d0ea3db127eab860ae4310525":["d241a0d7846c11e0602e9ade2311edaa6e833c9a"],"d241a0d7846c11e0602e9ade2311edaa6e833c9a":["7b8b1f5c3c79134c264c2a6688f376c8e6573104"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"4d4f1b2c5601680b01c4bb95a43fe6fb73f03103":["7b8b1f5c3c79134c264c2a6688f376c8e6573104"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["4d4f1b2c5601680b01c4bb95a43fe6fb73f03103"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"ad94625fb8d088209f46650c8097196fec67f00c":[],"7b8b1f5c3c79134c264c2a6688f376c8e6573104":["d241a0d7846c11e0602e9ade2311edaa6e833c9a"],"153cc06382fdc94d0ea3db127eab860ae4310525":["ad94625fb8d088209f46650c8097196fec67f00c"],"d241a0d7846c11e0602e9ade2311edaa6e833c9a":["153cc06382fdc94d0ea3db127eab860ae4310525"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["ad94625fb8d088209f46650c8097196fec67f00c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b","a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}