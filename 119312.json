{"path":"solr/solrj/src/java/org/apache/solr/client/solrj/request/CoreAdminRequest.WaitForState#getParams().mjava","commits":[{"id":"3a80994db3380cd78c6f65b84515e2e931b6b3da","date":1329530403,"type":1,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/request/CoreAdminRequest.WaitForState#getParams().mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/request/CoreAdminRequest.PrepRecovery#getParams().mjava","sourceNew":"    @Override\n    public SolrParams getParams() {\n      if( action == null ) {\n        throw new RuntimeException( \"no action specified!\" );\n      }\n      ModifiableSolrParams params = new ModifiableSolrParams();\n      params.set( CoreAdminParams.ACTION, action.toString() );\n \n      params.set( CoreAdminParams.CORE, core );\n      \n      if (nodeName != null) {\n        params.set( \"nodeName\", nodeName);\n      }\n      \n      if (coreNodeName != null) {\n        params.set( \"coreNodeName\", coreNodeName);\n      }\n      \n      if (state != null) {\n        params.set( \"state\", state);\n      }\n      \n      if (checkLive != null) {\n        params.set( \"checkLive\", checkLive);\n      }\n      \n      if (pauseFor != null) {\n        params.set( \"pauseFor\", pauseFor);\n      }\n\n      return params;\n    }\n\n","sourceOld":"    @Override\n    public SolrParams getParams() {\n      if( action == null ) {\n        throw new RuntimeException( \"no action specified!\" );\n      }\n      ModifiableSolrParams params = new ModifiableSolrParams();\n      params.set( CoreAdminParams.ACTION, action.toString() );\n \n      params.set( CoreAdminParams.CORE, core );\n      \n      if (nodeName != null) {\n        params.set( \"nodeName\", nodeName);\n      }\n      \n      if (coreNodeName != null) {\n        params.set( \"coreNodeName\", coreNodeName);\n      }\n\n      return params;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6013b4c7388f1627659c8f96c44abd10a294d3a6","date":1346343796,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/request/CoreAdminRequest.WaitForState#getParams().mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/request/CoreAdminRequest.WaitForState#getParams().mjava","sourceNew":"    @Override\n    public SolrParams getParams() {\n      if( action == null ) {\n        throw new RuntimeException( \"no action specified!\" );\n      }\n      ModifiableSolrParams params = new ModifiableSolrParams();\n      params.set( CoreAdminParams.ACTION, action.toString() );\n \n      params.set( CoreAdminParams.CORE, core );\n      \n      if (nodeName != null) {\n        params.set( \"nodeName\", nodeName);\n      }\n      \n      if (coreNodeName != null) {\n        params.set( \"coreNodeName\", coreNodeName);\n      }\n      \n      if (state != null) {\n        params.set( \"state\", state);\n      }\n      \n      if (checkLive != null) {\n        params.set( \"checkLive\", checkLive);\n      }\n      \n      if (pauseFor != null) {\n        params.set( \"pauseFor\", pauseFor);\n      }\n      \n      if (onlyIfLeader != null) {\n        params.set( \"onlyIfLeader\", onlyIfLeader);\n      }\n\n      return params;\n    }\n\n","sourceOld":"    @Override\n    public SolrParams getParams() {\n      if( action == null ) {\n        throw new RuntimeException( \"no action specified!\" );\n      }\n      ModifiableSolrParams params = new ModifiableSolrParams();\n      params.set( CoreAdminParams.ACTION, action.toString() );\n \n      params.set( CoreAdminParams.CORE, core );\n      \n      if (nodeName != null) {\n        params.set( \"nodeName\", nodeName);\n      }\n      \n      if (coreNodeName != null) {\n        params.set( \"coreNodeName\", coreNodeName);\n      }\n      \n      if (state != null) {\n        params.set( \"state\", state);\n      }\n      \n      if (checkLive != null) {\n        params.set( \"checkLive\", checkLive);\n      }\n      \n      if (pauseFor != null) {\n        params.set( \"pauseFor\", pauseFor);\n      }\n\n      return params;\n    }\n\n","bugFix":null,"bugIntro":["a6378064655e76cd7b908b1cab4ce425b384b508"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"05a14b2611ead08655a2b2bdc61632eb31316e57","date":1346366621,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/request/CoreAdminRequest.WaitForState#getParams().mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/request/CoreAdminRequest.WaitForState#getParams().mjava","sourceNew":"    @Override\n    public SolrParams getParams() {\n      if( action == null ) {\n        throw new RuntimeException( \"no action specified!\" );\n      }\n      ModifiableSolrParams params = new ModifiableSolrParams();\n      params.set( CoreAdminParams.ACTION, action.toString() );\n \n      params.set( CoreAdminParams.CORE, core );\n      \n      if (nodeName != null) {\n        params.set( \"nodeName\", nodeName);\n      }\n      \n      if (coreNodeName != null) {\n        params.set( \"coreNodeName\", coreNodeName);\n      }\n      \n      if (state != null) {\n        params.set( \"state\", state);\n      }\n      \n      if (checkLive != null) {\n        params.set( \"checkLive\", checkLive);\n      }\n      \n      if (pauseFor != null) {\n        params.set( \"pauseFor\", pauseFor);\n      }\n      \n      if (onlyIfLeader != null) {\n        params.set( \"onlyIfLeader\", onlyIfLeader);\n      }\n\n      return params;\n    }\n\n","sourceOld":"    @Override\n    public SolrParams getParams() {\n      if( action == null ) {\n        throw new RuntimeException( \"no action specified!\" );\n      }\n      ModifiableSolrParams params = new ModifiableSolrParams();\n      params.set( CoreAdminParams.ACTION, action.toString() );\n \n      params.set( CoreAdminParams.CORE, core );\n      \n      if (nodeName != null) {\n        params.set( \"nodeName\", nodeName);\n      }\n      \n      if (coreNodeName != null) {\n        params.set( \"coreNodeName\", coreNodeName);\n      }\n      \n      if (state != null) {\n        params.set( \"state\", state);\n      }\n      \n      if (checkLive != null) {\n        params.set( \"checkLive\", checkLive);\n      }\n      \n      if (pauseFor != null) {\n        params.set( \"pauseFor\", pauseFor);\n      }\n\n      return params;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a6378064655e76cd7b908b1cab4ce425b384b508","date":1347656715,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/request/CoreAdminRequest.WaitForState#getParams().mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/request/CoreAdminRequest.WaitForState#getParams().mjava","sourceNew":"    @Override\n    public SolrParams getParams() {\n      if( action == null ) {\n        throw new RuntimeException( \"no action specified!\" );\n      }\n      ModifiableSolrParams params = new ModifiableSolrParams();\n      params.set( CoreAdminParams.ACTION, action.toString() );\n \n      params.set( CoreAdminParams.CORE, core );\n      \n      if (nodeName != null) {\n        params.set( \"nodeName\", nodeName);\n      }\n      \n      if (coreNodeName != null) {\n        params.set( \"coreNodeName\", coreNodeName);\n      }\n      \n      if (state != null) {\n        params.set( \"state\", state);\n      }\n      \n      if (checkLive != null) {\n        params.set( \"checkLive\", checkLive);\n      }\n      \n      if (onlyIfLeader != null) {\n        params.set( \"onlyIfLeader\", onlyIfLeader);\n      }\n\n      return params;\n    }\n\n","sourceOld":"    @Override\n    public SolrParams getParams() {\n      if( action == null ) {\n        throw new RuntimeException( \"no action specified!\" );\n      }\n      ModifiableSolrParams params = new ModifiableSolrParams();\n      params.set( CoreAdminParams.ACTION, action.toString() );\n \n      params.set( CoreAdminParams.CORE, core );\n      \n      if (nodeName != null) {\n        params.set( \"nodeName\", nodeName);\n      }\n      \n      if (coreNodeName != null) {\n        params.set( \"coreNodeName\", coreNodeName);\n      }\n      \n      if (state != null) {\n        params.set( \"state\", state);\n      }\n      \n      if (checkLive != null) {\n        params.set( \"checkLive\", checkLive);\n      }\n      \n      if (pauseFor != null) {\n        params.set( \"pauseFor\", pauseFor);\n      }\n      \n      if (onlyIfLeader != null) {\n        params.set( \"onlyIfLeader\", onlyIfLeader);\n      }\n\n      return params;\n    }\n\n","bugFix":["6013b4c7388f1627659c8f96c44abd10a294d3a6","3a80994db3380cd78c6f65b84515e2e931b6b3da"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"97bd2b0da4beced82821b752b29576be986cf1ff","date":1387747012,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/request/CoreAdminRequest.WaitForState#getParams().mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/request/CoreAdminRequest.WaitForState#getParams().mjava","sourceNew":"    @Override\n    public SolrParams getParams() {\n      if( action == null ) {\n        throw new RuntimeException( \"no action specified!\" );\n      }\n      ModifiableSolrParams params = new ModifiableSolrParams();\n      params.set( CoreAdminParams.ACTION, action.toString() );\n \n      params.set( CoreAdminParams.CORE, core );\n      \n      if (nodeName != null) {\n        params.set( \"nodeName\", nodeName);\n      }\n      \n      if (coreNodeName != null) {\n        params.set( \"coreNodeName\", coreNodeName);\n      }\n      \n      if (state != null) {\n        params.set( \"state\", state);\n      }\n      \n      if (checkLive != null) {\n        params.set( \"checkLive\", checkLive);\n      }\n      \n      if (onlyIfLeader != null) {\n        params.set( \"onlyIfLeader\", onlyIfLeader);\n      }\n      \n      if (onlyIfLeaderActive != null) {\n        params.set( \"onlyIfLeaderActive\", onlyIfLeaderActive);\n      }\n\n      return params;\n    }\n\n","sourceOld":"    @Override\n    public SolrParams getParams() {\n      if( action == null ) {\n        throw new RuntimeException( \"no action specified!\" );\n      }\n      ModifiableSolrParams params = new ModifiableSolrParams();\n      params.set( CoreAdminParams.ACTION, action.toString() );\n \n      params.set( CoreAdminParams.CORE, core );\n      \n      if (nodeName != null) {\n        params.set( \"nodeName\", nodeName);\n      }\n      \n      if (coreNodeName != null) {\n        params.set( \"coreNodeName\", coreNodeName);\n      }\n      \n      if (state != null) {\n        params.set( \"state\", state);\n      }\n      \n      if (checkLive != null) {\n        params.set( \"checkLive\", checkLive);\n      }\n      \n      if (onlyIfLeader != null) {\n        params.set( \"onlyIfLeader\", onlyIfLeader);\n      }\n\n      return params;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a219f1dcad1700e84807666bdbd2b573e8de7021","date":1428130940,"type":3,"author":"Shai Erera","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/request/CoreAdminRequest.WaitForState#getParams().mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/request/CoreAdminRequest.WaitForState#getParams().mjava","sourceNew":"    @Override\n    public SolrParams getParams() {\n      if( action == null ) {\n        throw new RuntimeException( \"no action specified!\" );\n      }\n      ModifiableSolrParams params = new ModifiableSolrParams();\n      params.set( CoreAdminParams.ACTION, action.toString() );\n \n      params.set( CoreAdminParams.CORE, core );\n      \n      if (nodeName != null) {\n        params.set( \"nodeName\", nodeName);\n      }\n      \n      if (coreNodeName != null) {\n        params.set( \"coreNodeName\", coreNodeName);\n      }\n      \n      if (state != null) {\n        params.set(ZkStateReader.STATE_PROP, state.toString());\n      }\n      \n      if (checkLive != null) {\n        params.set( \"checkLive\", checkLive);\n      }\n      \n      if (onlyIfLeader != null) {\n        params.set( \"onlyIfLeader\", onlyIfLeader);\n      }\n      \n      if (onlyIfLeaderActive != null) {\n        params.set( \"onlyIfLeaderActive\", onlyIfLeaderActive);\n      }\n\n      return params;\n    }\n\n","sourceOld":"    @Override\n    public SolrParams getParams() {\n      if( action == null ) {\n        throw new RuntimeException( \"no action specified!\" );\n      }\n      ModifiableSolrParams params = new ModifiableSolrParams();\n      params.set( CoreAdminParams.ACTION, action.toString() );\n \n      params.set( CoreAdminParams.CORE, core );\n      \n      if (nodeName != null) {\n        params.set( \"nodeName\", nodeName);\n      }\n      \n      if (coreNodeName != null) {\n        params.set( \"coreNodeName\", coreNodeName);\n      }\n      \n      if (state != null) {\n        params.set( \"state\", state);\n      }\n      \n      if (checkLive != null) {\n        params.set( \"checkLive\", checkLive);\n      }\n      \n      if (onlyIfLeader != null) {\n        params.set( \"onlyIfLeader\", onlyIfLeader);\n      }\n      \n      if (onlyIfLeaderActive != null) {\n        params.set( \"onlyIfLeaderActive\", onlyIfLeaderActive);\n      }\n\n      return params;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a219f1dcad1700e84807666bdbd2b573e8de7021":["97bd2b0da4beced82821b752b29576be986cf1ff"],"97bd2b0da4beced82821b752b29576be986cf1ff":["a6378064655e76cd7b908b1cab4ce425b384b508"],"a6378064655e76cd7b908b1cab4ce425b384b508":["6013b4c7388f1627659c8f96c44abd10a294d3a6"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"05a14b2611ead08655a2b2bdc61632eb31316e57":["3a80994db3380cd78c6f65b84515e2e931b6b3da","6013b4c7388f1627659c8f96c44abd10a294d3a6"],"3a80994db3380cd78c6f65b84515e2e931b6b3da":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a219f1dcad1700e84807666bdbd2b573e8de7021"],"6013b4c7388f1627659c8f96c44abd10a294d3a6":["3a80994db3380cd78c6f65b84515e2e931b6b3da"]},"commit2Childs":{"a219f1dcad1700e84807666bdbd2b573e8de7021":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"97bd2b0da4beced82821b752b29576be986cf1ff":["a219f1dcad1700e84807666bdbd2b573e8de7021"],"a6378064655e76cd7b908b1cab4ce425b384b508":["97bd2b0da4beced82821b752b29576be986cf1ff"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a80994db3380cd78c6f65b84515e2e931b6b3da"],"05a14b2611ead08655a2b2bdc61632eb31316e57":[],"3a80994db3380cd78c6f65b84515e2e931b6b3da":["05a14b2611ead08655a2b2bdc61632eb31316e57","6013b4c7388f1627659c8f96c44abd10a294d3a6"],"6013b4c7388f1627659c8f96c44abd10a294d3a6":["a6378064655e76cd7b908b1cab4ce425b384b508","05a14b2611ead08655a2b2bdc61632eb31316e57"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["05a14b2611ead08655a2b2bdc61632eb31316e57","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}