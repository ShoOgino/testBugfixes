{"path":"solr/core/src/test/org/apache/solr/cloud/TestClusterProperties#testClusterProperties().mjava","commits":[{"id":"a4efd3fffdd7acd625bb88e455c8097e17f75735","date":1477647201,"type":0,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/TestClusterProperties#testClusterProperties().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testClusterProperties() throws Exception {\n    ClusterProperties props = new ClusterProperties(zkClient());\n    assertEquals(\"false\", props.getClusterProperty(ZkStateReader.LEGACY_CLOUD, \"false\"));\n\n    CollectionAdminRequest.setClusterProperty(ZkStateReader.LEGACY_CLOUD, \"true\").process(cluster.getSolrClient());\n    assertEquals(\"true\", props.getClusterProperty(ZkStateReader.LEGACY_CLOUD, \"false\"));\n\n    CollectionAdminRequest.setClusterProperty(ZkStateReader.LEGACY_CLOUD, \"false\").process(cluster.getSolrClient());\n    assertEquals(\"false\", props.getClusterProperty(ZkStateReader.LEGACY_CLOUD, \"true\"));\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["5ad9c35f926b4bf8da0336d1300efc709c8d5a56"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"59dce44d6a0b58c171de1d47ad8c0a75831f94fd","date":1477668573,"type":0,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/cloud/TestClusterProperties#testClusterProperties().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testClusterProperties() throws Exception {\n    ClusterProperties props = new ClusterProperties(zkClient());\n    assertEquals(\"false\", props.getClusterProperty(ZkStateReader.LEGACY_CLOUD, \"false\"));\n\n    CollectionAdminRequest.setClusterProperty(ZkStateReader.LEGACY_CLOUD, \"true\").process(cluster.getSolrClient());\n    assertEquals(\"true\", props.getClusterProperty(ZkStateReader.LEGACY_CLOUD, \"false\"));\n\n    CollectionAdminRequest.setClusterProperty(ZkStateReader.LEGACY_CLOUD, \"false\").process(cluster.getSolrClient());\n    assertEquals(\"false\", props.getClusterProperty(ZkStateReader.LEGACY_CLOUD, \"true\"));\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b05bdfd8f98d94e517783777949c13ec59c76ed8","date":1536268050,"type":3,"author":"Tomas Fernandez Lobbe","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/TestClusterProperties#testClusterProperties().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/TestClusterProperties#testClusterProperties().mjava","sourceNew":"  @Test\n  public void testClusterProperties() throws Exception {\n    assertEquals(\"false\", props.getClusterProperty(ZkStateReader.LEGACY_CLOUD, \"false\"));\n\n    CollectionAdminRequest.setClusterProperty(ZkStateReader.LEGACY_CLOUD, \"true\").process(cluster.getSolrClient());\n    assertEquals(\"true\", props.getClusterProperty(ZkStateReader.LEGACY_CLOUD, \"false\"));\n\n    CollectionAdminRequest.setClusterProperty(ZkStateReader.LEGACY_CLOUD, \"false\").process(cluster.getSolrClient());\n    assertEquals(\"false\", props.getClusterProperty(ZkStateReader.LEGACY_CLOUD, \"true\"));\n  }\n\n","sourceOld":"  @Test\n  public void testClusterProperties() throws Exception {\n    ClusterProperties props = new ClusterProperties(zkClient());\n    assertEquals(\"false\", props.getClusterProperty(ZkStateReader.LEGACY_CLOUD, \"false\"));\n\n    CollectionAdminRequest.setClusterProperty(ZkStateReader.LEGACY_CLOUD, \"true\").process(cluster.getSolrClient());\n    assertEquals(\"true\", props.getClusterProperty(ZkStateReader.LEGACY_CLOUD, \"false\"));\n\n    CollectionAdminRequest.setClusterProperty(ZkStateReader.LEGACY_CLOUD, \"false\").process(cluster.getSolrClient());\n    assertEquals(\"false\", props.getClusterProperty(ZkStateReader.LEGACY_CLOUD, \"true\"));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"5ad9c35f926b4bf8da0336d1300efc709c8d5a56","date":1591729157,"type":3,"author":"murblanc","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/TestClusterProperties#testClusterProperties().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/TestClusterProperties#testClusterProperties().mjava","sourceNew":"  @Test\n  public void testClusterProperties() throws Exception {\n    assertEquals(\"false\", props.getClusterProperty(ZkStateReader.AUTO_ADD_REPLICAS, \"false\"));\n\n    CollectionAdminRequest.setClusterProperty(ZkStateReader.AUTO_ADD_REPLICAS, \"true\").process(cluster.getSolrClient());\n    assertEquals(\"true\", props.getClusterProperty(ZkStateReader.AUTO_ADD_REPLICAS, \"false\"));\n\n    CollectionAdminRequest.setClusterProperty(ZkStateReader.AUTO_ADD_REPLICAS, \"false\").process(cluster.getSolrClient());\n    assertEquals(\"false\", props.getClusterProperty(ZkStateReader.AUTO_ADD_REPLICAS, \"true\"));\n  }\n\n","sourceOld":"  @Test\n  public void testClusterProperties() throws Exception {\n    assertEquals(\"false\", props.getClusterProperty(ZkStateReader.LEGACY_CLOUD, \"false\"));\n\n    CollectionAdminRequest.setClusterProperty(ZkStateReader.LEGACY_CLOUD, \"true\").process(cluster.getSolrClient());\n    assertEquals(\"true\", props.getClusterProperty(ZkStateReader.LEGACY_CLOUD, \"false\"));\n\n    CollectionAdminRequest.setClusterProperty(ZkStateReader.LEGACY_CLOUD, \"false\").process(cluster.getSolrClient());\n    assertEquals(\"false\", props.getClusterProperty(ZkStateReader.LEGACY_CLOUD, \"true\"));\n  }\n\n","bugFix":["a4efd3fffdd7acd625bb88e455c8097e17f75735"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3f504512a03d978990cbff30db0522b354e846db","date":1595247421,"type":4,"author":"Ishan Chattopadhyaya","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/core/src/test/org/apache/solr/cloud/TestClusterProperties#testClusterProperties().mjava","sourceNew":null,"sourceOld":"  @Test\n  public void testClusterProperties() throws Exception {\n    assertEquals(\"false\", props.getClusterProperty(ZkStateReader.AUTO_ADD_REPLICAS, \"false\"));\n\n    CollectionAdminRequest.setClusterProperty(ZkStateReader.AUTO_ADD_REPLICAS, \"true\").process(cluster.getSolrClient());\n    assertEquals(\"true\", props.getClusterProperty(ZkStateReader.AUTO_ADD_REPLICAS, \"false\"));\n\n    CollectionAdminRequest.setClusterProperty(ZkStateReader.AUTO_ADD_REPLICAS, \"false\").process(cluster.getSolrClient());\n    assertEquals(\"false\", props.getClusterProperty(ZkStateReader.AUTO_ADD_REPLICAS, \"true\"));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a4efd3fffdd7acd625bb88e455c8097e17f75735":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"5ad9c35f926b4bf8da0336d1300efc709c8d5a56":["b05bdfd8f98d94e517783777949c13ec59c76ed8"],"59dce44d6a0b58c171de1d47ad8c0a75831f94fd":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","a4efd3fffdd7acd625bb88e455c8097e17f75735"],"3f504512a03d978990cbff30db0522b354e846db":["5ad9c35f926b4bf8da0336d1300efc709c8d5a56"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"b05bdfd8f98d94e517783777949c13ec59c76ed8":["a4efd3fffdd7acd625bb88e455c8097e17f75735"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3f504512a03d978990cbff30db0522b354e846db"]},"commit2Childs":{"a4efd3fffdd7acd625bb88e455c8097e17f75735":["59dce44d6a0b58c171de1d47ad8c0a75831f94fd","b05bdfd8f98d94e517783777949c13ec59c76ed8"],"5ad9c35f926b4bf8da0336d1300efc709c8d5a56":["3f504512a03d978990cbff30db0522b354e846db"],"59dce44d6a0b58c171de1d47ad8c0a75831f94fd":[],"3f504512a03d978990cbff30db0522b354e846db":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["a4efd3fffdd7acd625bb88e455c8097e17f75735","59dce44d6a0b58c171de1d47ad8c0a75831f94fd"],"b05bdfd8f98d94e517783777949c13ec59c76ed8":["5ad9c35f926b4bf8da0336d1300efc709c8d5a56"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["59dce44d6a0b58c171de1d47ad8c0a75831f94fd","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}