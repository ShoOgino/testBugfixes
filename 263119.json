{"path":"src/java/org/apache/lucene/util/ArrayUtil#parse(char[],int,int,int,boolean).mjava","commits":[{"id":"7d17e89cf704a29ea5d627f86a66bb0ad595ee2c","date":1244845561,"type":0,"author":"Grant Ingersoll","isMerge":false,"pathNew":"src/java/org/apache/lucene/util/ArrayUtil#parse(char[],int,int,int,boolean).mjava","pathOld":"/dev/null","sourceNew":"  private static int parse(char[] chars, int offset, int len, int radix,\n                           boolean negative) throws NumberFormatException {\n    int max = Integer.MIN_VALUE / radix;\n    int result = 0;\n    for (int i = 0; i < len; i++){\n      int digit = Character.digit(chars[i + offset], radix);\n      if (digit == -1) {\n        throw new NumberFormatException(\"Unable to parse\");\n      }\n      if (max > result) {\n        throw new NumberFormatException(\"Unable to parse\");\n      }\n      int next = result * radix - digit;\n      if (next > result) {\n        throw new NumberFormatException(\"Unable to parse\");\n      }\n      result = next;\n    }\n    /*while (offset < len) {\n\n    }*/\n    if (!negative) {\n      result = -result;\n      if (result < 0) {\n        throw new NumberFormatException(\"Unable to parse\");\n      }\n    }\n    return result;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/util/ArrayUtil#parse(char[],int,int,int,boolean).mjava","pathOld":"src/java/org/apache/lucene/util/ArrayUtil#parse(char[],int,int,int,boolean).mjava","sourceNew":"  private static int parse(char[] chars, int offset, int len, int radix,\n                           boolean negative) throws NumberFormatException {\n    int max = Integer.MIN_VALUE / radix;\n    int result = 0;\n    for (int i = 0; i < len; i++){\n      int digit = Character.digit(chars[i + offset], radix);\n      if (digit == -1) {\n        throw new NumberFormatException(\"Unable to parse\");\n      }\n      if (max > result) {\n        throw new NumberFormatException(\"Unable to parse\");\n      }\n      int next = result * radix - digit;\n      if (next > result) {\n        throw new NumberFormatException(\"Unable to parse\");\n      }\n      result = next;\n    }\n    /*while (offset < len) {\n\n    }*/\n    if (!negative) {\n      result = -result;\n      if (result < 0) {\n        throw new NumberFormatException(\"Unable to parse\");\n      }\n    }\n    return result;\n  }\n\n","sourceOld":"  private static int parse(char[] chars, int offset, int len, int radix,\n                           boolean negative) throws NumberFormatException {\n    int max = Integer.MIN_VALUE / radix;\n    int result = 0;\n    for (int i = 0; i < len; i++){\n      int digit = Character.digit(chars[i + offset], radix);\n      if (digit == -1) {\n        throw new NumberFormatException(\"Unable to parse\");\n      }\n      if (max > result) {\n        throw new NumberFormatException(\"Unable to parse\");\n      }\n      int next = result * radix - digit;\n      if (next > result) {\n        throw new NumberFormatException(\"Unable to parse\");\n      }\n      result = next;\n    }\n    /*while (offset < len) {\n\n    }*/\n    if (!negative) {\n      result = -result;\n      if (result < 0) {\n        throw new NumberFormatException(\"Unable to parse\");\n      }\n    }\n    return result;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"7d17e89cf704a29ea5d627f86a66bb0ad595ee2c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["7d17e89cf704a29ea5d627f86a66bb0ad595ee2c"]},"commit2Childs":{"7d17e89cf704a29ea5d627f86a66bb0ad595ee2c":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["7d17e89cf704a29ea5d627f86a66bb0ad595ee2c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}