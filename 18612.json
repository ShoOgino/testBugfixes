{"path":"lucene/test-framework/src/java/org/apache/lucene/codecs/lucene40/Temp40PostingsWriter#Temp40PostingsWriter(SegmentWriteState,int).mjava","commits":[{"id":"38f154048324ef4d19e56e818d0621cafb4fd453","date":1377246558,"type":0,"author":"Han Jiang","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/codecs/lucene40/Temp40PostingsWriter#Temp40PostingsWriter(SegmentWriteState,int).mjava","pathOld":"/dev/null","sourceNew":"  /** Creates a {@link Temp40PostingsWriter}, with the\n   *  specified {@code skipInterval}. */\n  public Temp40PostingsWriter(SegmentWriteState state, int skipInterval) throws IOException {\n    super();\n    this.skipInterval = skipInterval;\n    this.skipMinimum = skipInterval; /* set to the same for now */\n    // this.segment = state.segmentName;\n    String fileName = IndexFileNames.segmentFileName(state.segmentInfo.name, state.segmentSuffix, Temp40RWPostingsFormat.FREQ_EXTENSION);\n    freqOut = state.directory.createOutput(fileName, state.context);\n    boolean success = false;\n    IndexOutput proxOut = null;\n    try {\n      CodecUtil.writeHeader(freqOut, Temp40PostingsReader.FRQ_CODEC, Temp40PostingsReader.VERSION_CURRENT);\n      // TODO: this is a best effort, if one of these fields has no postings\n      // then we make an empty prx file, same as if we are wrapped in \n      // per-field postingsformat. maybe... we shouldn't\n      // bother w/ this opto?  just create empty prx file...?\n      if (state.fieldInfos.hasProx()) {\n        // At least one field does not omit TF, so create the\n        // prox file\n        fileName = IndexFileNames.segmentFileName(state.segmentInfo.name, state.segmentSuffix, Temp40RWPostingsFormat.PROX_EXTENSION);\n        proxOut = state.directory.createOutput(fileName, state.context);\n        CodecUtil.writeHeader(proxOut, Temp40PostingsReader.PRX_CODEC, Temp40PostingsReader.VERSION_CURRENT);\n      } else {\n        // Every field omits TF so we will write no prox file\n        proxOut = null;\n      }\n      this.proxOut = proxOut;\n      success = true;\n    } finally {\n      if (!success) {\n        IOUtils.closeWhileHandlingException(freqOut, proxOut);\n      }\n    }\n\n    totalNumDocs = state.segmentInfo.getDocCount();\n\n    skipListWriter = new Lucene40SkipListWriter(skipInterval,\n                                               maxSkipLevels,\n                                               totalNumDocs,\n                                               freqOut,\n                                               proxOut);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e6904bcc97d8afa27bd72ee29ac01e525e327ad4","date":1377958787,"type":4,"author":"Han Jiang","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/test-framework/src/java/org/apache/lucene/codecs/lucene40/Temp40PostingsWriter#Temp40PostingsWriter(SegmentWriteState,int).mjava","sourceNew":null,"sourceOld":"  /** Creates a {@link Temp40PostingsWriter}, with the\n   *  specified {@code skipInterval}. */\n  public Temp40PostingsWriter(SegmentWriteState state, int skipInterval) throws IOException {\n    super();\n    this.skipInterval = skipInterval;\n    this.skipMinimum = skipInterval; /* set to the same for now */\n    // this.segment = state.segmentName;\n    String fileName = IndexFileNames.segmentFileName(state.segmentInfo.name, state.segmentSuffix, Temp40RWPostingsFormat.FREQ_EXTENSION);\n    freqOut = state.directory.createOutput(fileName, state.context);\n    boolean success = false;\n    IndexOutput proxOut = null;\n    try {\n      CodecUtil.writeHeader(freqOut, Temp40PostingsReader.FRQ_CODEC, Temp40PostingsReader.VERSION_CURRENT);\n      // TODO: this is a best effort, if one of these fields has no postings\n      // then we make an empty prx file, same as if we are wrapped in \n      // per-field postingsformat. maybe... we shouldn't\n      // bother w/ this opto?  just create empty prx file...?\n      if (state.fieldInfos.hasProx()) {\n        // At least one field does not omit TF, so create the\n        // prox file\n        fileName = IndexFileNames.segmentFileName(state.segmentInfo.name, state.segmentSuffix, Temp40RWPostingsFormat.PROX_EXTENSION);\n        proxOut = state.directory.createOutput(fileName, state.context);\n        CodecUtil.writeHeader(proxOut, Temp40PostingsReader.PRX_CODEC, Temp40PostingsReader.VERSION_CURRENT);\n      } else {\n        // Every field omits TF so we will write no prox file\n        proxOut = null;\n      }\n      this.proxOut = proxOut;\n      success = true;\n    } finally {\n      if (!success) {\n        IOUtils.closeWhileHandlingException(freqOut, proxOut);\n      }\n    }\n\n    totalNumDocs = state.segmentInfo.getDocCount();\n\n    skipListWriter = new Lucene40SkipListWriter(skipInterval,\n                                               maxSkipLevels,\n                                               totalNumDocs,\n                                               freqOut,\n                                               proxOut);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"38f154048324ef4d19e56e818d0621cafb4fd453":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"e6904bcc97d8afa27bd72ee29ac01e525e327ad4":["38f154048324ef4d19e56e818d0621cafb4fd453"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"38f154048324ef4d19e56e818d0621cafb4fd453":["e6904bcc97d8afa27bd72ee29ac01e525e327ad4"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["38f154048324ef4d19e56e818d0621cafb4fd453","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"e6904bcc97d8afa27bd72ee29ac01e525e327ad4":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["e6904bcc97d8afa27bd72ee29ac01e525e327ad4","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}