{"path":"contrib/analyzers/src/java/org/apache/lucene/analysis/de/GermanStemFilter#next().mjava","commits":[{"id":"043c298cb215f13ba7b9b81d20760704e8f93d66","date":1107566743,"type":1,"author":"Erik Hatcher","isMerge":false,"pathNew":"contrib/analyzers/src/java/org/apache/lucene/analysis/de/GermanStemFilter#next().mjava","pathOld":"sandbox/contributions/analyzers/src/java/org/apache/lucene/analysis/de/GermanStemFilter#next().mjava","sourceNew":"    /**\n     * @return  Returns the next token in the stream, or null at EOS\n     */\n    public final Token next()\n      throws IOException\n    {\n      if ( ( token = input.next() ) == null ) {\n        return null;\n      }\n      // Check the exclusiontable\n      else if ( exclusionSet != null && exclusionSet.contains( token.termText() ) ) {\n        return token;\n      }\n      else {\n        String s = stemmer.stem( token.termText() );\n        // If not stemmed, dont waste the time creating a new token\n        if ( !s.equals( token.termText() ) ) {\n          return new Token( s, token.startOffset(),\n            token.endOffset(), token.type() );\n        }\n        return token;\n      }\n    }\n\n","sourceOld":"    /**\n     * @return  Returns the next token in the stream, or null at EOS\n     */\n    public final Token next()\n      throws IOException\n    {\n      if ( ( token = input.next() ) == null ) {\n        return null;\n      }\n      // Check the exclusiontable\n      else if ( exclusionSet != null && exclusionSet.contains( token.termText() ) ) {\n        return token;\n      }\n      else {\n        String s = stemmer.stem( token.termText() );\n        // If not stemmed, dont waste the time creating a new token\n        if ( !s.equals( token.termText() ) ) {\n          return new Token( s, token.startOffset(),\n            token.endOffset(), token.type() );\n        }\n        return token;\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7e2cb543b41c145f33390f460ee743d6693c9c6c","date":1219243087,"type":4,"author":"Michael McCandless","isMerge":false,"pathNew":"/dev/null","pathOld":"contrib/analyzers/src/java/org/apache/lucene/analysis/de/GermanStemFilter#next().mjava","sourceNew":null,"sourceOld":"    /**\n     * @return  Returns the next token in the stream, or null at EOS\n     */\n    public final Token next()\n      throws IOException\n    {\n      if ( ( token = input.next() ) == null ) {\n        return null;\n      }\n      // Check the exclusiontable\n      else if ( exclusionSet != null && exclusionSet.contains( token.termText() ) ) {\n        return token;\n      }\n      else {\n        String s = stemmer.stem( token.termText() );\n        // If not stemmed, dont waste the time creating a new token\n        if ( !s.equals( token.termText() ) ) {\n          return new Token( s, token.startOffset(),\n            token.endOffset(), token.type() );\n        }\n        return token;\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"7e2cb543b41c145f33390f460ee743d6693c9c6c":["043c298cb215f13ba7b9b81d20760704e8f93d66"],"043c298cb215f13ba7b9b81d20760704e8f93d66":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["7e2cb543b41c145f33390f460ee743d6693c9c6c"]},"commit2Childs":{"7e2cb543b41c145f33390f460ee743d6693c9c6c":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"043c298cb215f13ba7b9b81d20760704e8f93d66":["7e2cb543b41c145f33390f460ee743d6693c9c6c"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["043c298cb215f13ba7b9b81d20760704e8f93d66"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}