{"path":"src/java/org/apache/lucene/search/spans/SpanNotQuery#toString(String).mjava","commits":[{"id":"0bcbf4ed0baed877c8b36d024e17a99bedfdd904","date":1075500600,"type":0,"author":"Doug Cutting","isMerge":false,"pathNew":"src/java/org/apache/lucene/search/spans/SpanNotQuery#toString(String).mjava","pathOld":"/dev/null","sourceNew":"  public String toString(String field) {\n    StringBuffer buffer = new StringBuffer();\n    buffer.append(\"spanNot(\");\n    buffer.append(include.toString(field));\n    buffer.append(\", \");\n    buffer.append(exclude.toString(field));\n    buffer.append(\")\");\n    return buffer.toString();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"df8dadf22de84eeb1294e70792e292ecf8ded564","date":1130577981,"type":3,"author":"Erik Hatcher","isMerge":false,"pathNew":"src/java/org/apache/lucene/search/spans/SpanNotQuery#toString(String).mjava","pathOld":"src/java/org/apache/lucene/search/spans/SpanNotQuery#toString(String).mjava","sourceNew":"  public String toString(String field) {\n    StringBuffer buffer = new StringBuffer();\n    buffer.append(\"spanNot(\");\n    buffer.append(include.toString(field));\n    buffer.append(\", \");\n    buffer.append(exclude.toString(field));\n    buffer.append(\")\");\n    buffer.append(ToStringUtils.boost(getBoost()));\n    return buffer.toString();\n  }\n\n","sourceOld":"  public String toString(String field) {\n    StringBuffer buffer = new StringBuffer();\n    buffer.append(\"spanNot(\");\n    buffer.append(include.toString(field));\n    buffer.append(\", \");\n    buffer.append(exclude.toString(field));\n    buffer.append(\")\");\n    return buffer.toString();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4625cb7ffd7c9caaf2d62b206ba9a382d68da82c","date":1254521470,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/java/org/apache/lucene/search/spans/SpanNotQuery#toString(String).mjava","pathOld":"src/java/org/apache/lucene/search/spans/SpanNotQuery#toString(String).mjava","sourceNew":"  public String toString(String field) {\n    StringBuilder buffer = new StringBuilder();\n    buffer.append(\"spanNot(\");\n    buffer.append(include.toString(field));\n    buffer.append(\", \");\n    buffer.append(exclude.toString(field));\n    buffer.append(\")\");\n    buffer.append(ToStringUtils.boost(getBoost()));\n    return buffer.toString();\n  }\n\n","sourceOld":"  public String toString(String field) {\n    StringBuffer buffer = new StringBuffer();\n    buffer.append(\"spanNot(\");\n    buffer.append(include.toString(field));\n    buffer.append(\", \");\n    buffer.append(exclude.toString(field));\n    buffer.append(\")\");\n    buffer.append(ToStringUtils.boost(getBoost()));\n    return buffer.toString();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8a9e385641d717e641408d8fbbc62be8fc766357","date":1256746606,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/java/org/apache/lucene/search/spans/SpanNotQuery#toString(String).mjava","pathOld":"src/java/org/apache/lucene/search/spans/SpanNotQuery#toString(String).mjava","sourceNew":"  @Override\n  public String toString(String field) {\n    StringBuilder buffer = new StringBuilder();\n    buffer.append(\"spanNot(\");\n    buffer.append(include.toString(field));\n    buffer.append(\", \");\n    buffer.append(exclude.toString(field));\n    buffer.append(\")\");\n    buffer.append(ToStringUtils.boost(getBoost()));\n    return buffer.toString();\n  }\n\n","sourceOld":"  public String toString(String field) {\n    StringBuilder buffer = new StringBuilder();\n    buffer.append(\"spanNot(\");\n    buffer.append(include.toString(field));\n    buffer.append(\", \");\n    buffer.append(exclude.toString(field));\n    buffer.append(\")\");\n    buffer.append(ToStringUtils.boost(getBoost()));\n    return buffer.toString();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/search/spans/SpanNotQuery#toString(String).mjava","pathOld":"src/java/org/apache/lucene/search/spans/SpanNotQuery#toString(String).mjava","sourceNew":"  @Override\n  public String toString(String field) {\n    StringBuilder buffer = new StringBuilder();\n    buffer.append(\"spanNot(\");\n    buffer.append(include.toString(field));\n    buffer.append(\", \");\n    buffer.append(exclude.toString(field));\n    buffer.append(\")\");\n    buffer.append(ToStringUtils.boost(getBoost()));\n    return buffer.toString();\n  }\n\n","sourceOld":"  @Override\n  public String toString(String field) {\n    StringBuilder buffer = new StringBuilder();\n    buffer.append(\"spanNot(\");\n    buffer.append(include.toString(field));\n    buffer.append(\", \");\n    buffer.append(exclude.toString(field));\n    buffer.append(\")\");\n    buffer.append(ToStringUtils.boost(getBoost()));\n    return buffer.toString();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"df8dadf22de84eeb1294e70792e292ecf8ded564":["0bcbf4ed0baed877c8b36d024e17a99bedfdd904"],"8a9e385641d717e641408d8fbbc62be8fc766357":["4625cb7ffd7c9caaf2d62b206ba9a382d68da82c"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"4625cb7ffd7c9caaf2d62b206ba9a382d68da82c":["df8dadf22de84eeb1294e70792e292ecf8ded564"],"0bcbf4ed0baed877c8b36d024e17a99bedfdd904":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["8a9e385641d717e641408d8fbbc62be8fc766357"]},"commit2Childs":{"df8dadf22de84eeb1294e70792e292ecf8ded564":["4625cb7ffd7c9caaf2d62b206ba9a382d68da82c"],"8a9e385641d717e641408d8fbbc62be8fc766357":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["0bcbf4ed0baed877c8b36d024e17a99bedfdd904"],"0bcbf4ed0baed877c8b36d024e17a99bedfdd904":["df8dadf22de84eeb1294e70792e292ecf8ded564"],"4625cb7ffd7c9caaf2d62b206ba9a382d68da82c":["8a9e385641d717e641408d8fbbc62be8fc766357"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}