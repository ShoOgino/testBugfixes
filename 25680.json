{"path":"modules/analysis/morfologik/src/java/org/apache/lucene/analysis/morfologik/MorfologikAnalyzer#createComponents(String,Reader).mjava","commits":[{"id":"da49a6f983059bd3fb6ce68ad058fb6258d8c5e9","date":1309339454,"type":0,"author":"Dawid Weiss","isMerge":false,"pathNew":"modules/analysis/morfologik/src/java/org/apache/lucene/analysis/morfologik/MorfologikAnalyzer#createComponents(String,Reader).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Creates a\n   * {@link ReusableAnalyzerBase.TokenStreamComponents}\n   * which tokenizes all the text in the provided {@link Reader}.\n   * \n   * @param field ignored field name\n   * @param reader source of tokens\n   * \n   * @return A\n   *         {@link ReusableAnalyzerBase.TokenStreamComponents}\n   *         built from an {@link StandardTokenizer} filtered with\n   *         {@link StandardFilter} and {@link MorfologikFilter}.\n   */\n  @Override\n  protected TokenStreamComponents createComponents(final String field, final Reader reader) {\n    final Tokenizer src = new StandardTokenizer(this.version, reader);\n    \n    return new TokenStreamComponents(\n      src,\n      new MorfologikFilter(new StandardFilter(this.version, src), this.dictionary, this.version));\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9756567a078125be9a0791e46f79fa0ab190d5c1","date":1309341636,"type":4,"author":"Dawid Weiss","isMerge":false,"pathNew":"/dev/null","pathOld":"modules/analysis/morfologik/src/java/org/apache/lucene/analysis/morfologik/MorfologikAnalyzer#createComponents(String,Reader).mjava","sourceNew":null,"sourceOld":"  /**\n   * Creates a\n   * {@link ReusableAnalyzerBase.TokenStreamComponents}\n   * which tokenizes all the text in the provided {@link Reader}.\n   * \n   * @param field ignored field name\n   * @param reader source of tokens\n   * \n   * @return A\n   *         {@link ReusableAnalyzerBase.TokenStreamComponents}\n   *         built from an {@link StandardTokenizer} filtered with\n   *         {@link StandardFilter} and {@link MorfologikFilter}.\n   */\n  @Override\n  protected TokenStreamComponents createComponents(final String field, final Reader reader) {\n    final Tokenizer src = new StandardTokenizer(this.version, reader);\n    \n    return new TokenStreamComponents(\n      src,\n      new MorfologikFilter(new StandardFilter(this.version, src), this.dictionary, this.version));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c9372469b09ed273740e18f76520c99aa075358b","date":1309461174,"type":0,"author":"Dawid Weiss","isMerge":false,"pathNew":"modules/analysis/morfologik/src/java/org/apache/lucene/analysis/morfologik/MorfologikAnalyzer#createComponents(String,Reader).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Creates a\n   * {@link ReusableAnalyzerBase.TokenStreamComponents}\n   * which tokenizes all the text in the provided {@link Reader}.\n   * \n   * @param field ignored field name\n   * @param reader source of tokens\n   * \n   * @return A\n   *         {@link ReusableAnalyzerBase.TokenStreamComponents}\n   *         built from an {@link StandardTokenizer} filtered with\n   *         {@link StandardFilter} and {@link MorfologikFilter}.\n   */\n  @Override\n  protected TokenStreamComponents createComponents(final String field, final Reader reader) {\n    final Tokenizer src = new StandardTokenizer(this.version, reader);\n    \n    return new TokenStreamComponents(\n      src,\n      new MorfologikFilter(new StandardFilter(this.version, src), this.dictionary, this.version));\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6ed03b279d8e78ef300d3d8d0e889889907a053a","date":1309463551,"type":3,"author":"Dawid Weiss","isMerge":false,"pathNew":"modules/analysis/morfologik/src/java/org/apache/lucene/analysis/morfologik/MorfologikAnalyzer#createComponents(String,Reader).mjava","pathOld":"modules/analysis/morfologik/src/java/org/apache/lucene/analysis/morfologik/MorfologikAnalyzer#createComponents(String,Reader).mjava","sourceNew":"  /**\n   * Creates a\n   * {@link org.apache.lucene.analysis.util.ReusableAnalyzerBase.TokenStreamComponents}\n   * which tokenizes all the text in the provided {@link Reader}.\n   * \n   * @param field ignored field name\n   * @param reader source of tokens\n   * \n   * @return A\n   *         {@link org.apache.lucene.analysis.util.ReusableAnalyzerBase.TokenStreamComponents}\n   *         built from an {@link StandardTokenizer} filtered with\n   *         {@link StandardFilter} and {@link MorfologikFilter}.\n   */\n  @Override\n  protected TokenStreamComponents createComponents(final String field, final Reader reader) {\n    final Tokenizer src = new StandardTokenizer(this.version, reader);\n    \n    return new TokenStreamComponents(\n      src,\n      new MorfologikFilter(new StandardFilter(this.version, src), this.dictionary, this.version));\n  }\n\n","sourceOld":"  /**\n   * Creates a\n   * {@link ReusableAnalyzerBase.TokenStreamComponents}\n   * which tokenizes all the text in the provided {@link Reader}.\n   * \n   * @param field ignored field name\n   * @param reader source of tokens\n   * \n   * @return A\n   *         {@link ReusableAnalyzerBase.TokenStreamComponents}\n   *         built from an {@link StandardTokenizer} filtered with\n   *         {@link StandardFilter} and {@link MorfologikFilter}.\n   */\n  @Override\n  protected TokenStreamComponents createComponents(final String field, final Reader reader) {\n    final Tokenizer src = new StandardTokenizer(this.version, reader);\n    \n    return new TokenStreamComponents(\n      src,\n      new MorfologikFilter(new StandardFilter(this.version, src), this.dictionary, this.version));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"817d8435e9135b756f08ce6710ab0baac51bdf88","date":1309986993,"type":0,"author":"Steven Rowe","isMerge":true,"pathNew":"modules/analysis/morfologik/src/java/org/apache/lucene/analysis/morfologik/MorfologikAnalyzer#createComponents(String,Reader).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Creates a\n   * {@link org.apache.lucene.analysis.util.ReusableAnalyzerBase.TokenStreamComponents}\n   * which tokenizes all the text in the provided {@link Reader}.\n   * \n   * @param field ignored field name\n   * @param reader source of tokens\n   * \n   * @return A\n   *         {@link org.apache.lucene.analysis.util.ReusableAnalyzerBase.TokenStreamComponents}\n   *         built from an {@link StandardTokenizer} filtered with\n   *         {@link StandardFilter} and {@link MorfologikFilter}.\n   */\n  @Override\n  protected TokenStreamComponents createComponents(final String field, final Reader reader) {\n    final Tokenizer src = new StandardTokenizer(this.version, reader);\n    \n    return new TokenStreamComponents(\n      src,\n      new MorfologikFilter(new StandardFilter(this.version, src), this.dictionary, this.version));\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d083e83f225b11e5fdd900e83d26ddb385b6955c","date":1310029438,"type":0,"author":"Simon Willnauer","isMerge":true,"pathNew":"modules/analysis/morfologik/src/java/org/apache/lucene/analysis/morfologik/MorfologikAnalyzer#createComponents(String,Reader).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Creates a\n   * {@link org.apache.lucene.analysis.util.ReusableAnalyzerBase.TokenStreamComponents}\n   * which tokenizes all the text in the provided {@link Reader}.\n   * \n   * @param field ignored field name\n   * @param reader source of tokens\n   * \n   * @return A\n   *         {@link org.apache.lucene.analysis.util.ReusableAnalyzerBase.TokenStreamComponents}\n   *         built from an {@link StandardTokenizer} filtered with\n   *         {@link StandardFilter} and {@link MorfologikFilter}.\n   */\n  @Override\n  protected TokenStreamComponents createComponents(final String field, final Reader reader) {\n    final Tokenizer src = new StandardTokenizer(this.version, reader);\n    \n    return new TokenStreamComponents(\n      src,\n      new MorfologikFilter(new StandardFilter(this.version, src), this.dictionary, this.version));\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b8f1fd760e2a7a87de661158ca069c8dacab8360","date":1313992891,"type":3,"author":"Christopher John Male","isMerge":false,"pathNew":"modules/analysis/morfologik/src/java/org/apache/lucene/analysis/morfologik/MorfologikAnalyzer#createComponents(String,Reader).mjava","pathOld":"modules/analysis/morfologik/src/java/org/apache/lucene/analysis/morfologik/MorfologikAnalyzer#createComponents(String,Reader).mjava","sourceNew":"  /**\n   * Creates a\n   * {@link org.apache.lucene.analysis.ReusableAnalyzerBase.TokenStreamComponents}\n   * which tokenizes all the text in the provided {@link Reader}.\n   * \n   * @param field ignored field name\n   * @param reader source of tokens\n   * \n   * @return A\n   *         {@link org.apache.lucene.analysis.ReusableAnalyzerBase.TokenStreamComponents}\n   *         built from an {@link StandardTokenizer} filtered with\n   *         {@link StandardFilter} and {@link MorfologikFilter}.\n   */\n  @Override\n  protected TokenStreamComponents createComponents(final String field, final Reader reader) {\n    final Tokenizer src = new StandardTokenizer(this.version, reader);\n    \n    return new TokenStreamComponents(\n      src,\n      new MorfologikFilter(new StandardFilter(this.version, src), this.dictionary, this.version));\n  }\n\n","sourceOld":"  /**\n   * Creates a\n   * {@link org.apache.lucene.analysis.util.ReusableAnalyzerBase.TokenStreamComponents}\n   * which tokenizes all the text in the provided {@link Reader}.\n   * \n   * @param field ignored field name\n   * @param reader source of tokens\n   * \n   * @return A\n   *         {@link org.apache.lucene.analysis.util.ReusableAnalyzerBase.TokenStreamComponents}\n   *         built from an {@link StandardTokenizer} filtered with\n   *         {@link StandardFilter} and {@link MorfologikFilter}.\n   */\n  @Override\n  protected TokenStreamComponents createComponents(final String field, final Reader reader) {\n    final Tokenizer src = new StandardTokenizer(this.version, reader);\n    \n    return new TokenStreamComponents(\n      src,\n      new MorfologikFilter(new StandardFilter(this.version, src), this.dictionary, this.version));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2f49143da0a5d278a72f741432047fcfa6da996e","date":1316927425,"type":3,"author":"Christopher John Male","isMerge":false,"pathNew":"modules/analysis/morfologik/src/java/org/apache/lucene/analysis/morfologik/MorfologikAnalyzer#createComponents(String,Reader).mjava","pathOld":"modules/analysis/morfologik/src/java/org/apache/lucene/analysis/morfologik/MorfologikAnalyzer#createComponents(String,Reader).mjava","sourceNew":"  /**\n   * Creates a\n   * {@link org.apache.lucene.analysis.Analyzer.TokenStreamComponents}\n   * which tokenizes all the text in the provided {@link Reader}.\n   * \n   * @param field ignored field name\n   * @param reader source of tokens\n   * \n   * @return A\n   *         {@link org.apache.lucene.analysis.Analyzer.TokenStreamComponents}\n   *         built from an {@link StandardTokenizer} filtered with\n   *         {@link StandardFilter} and {@link MorfologikFilter}.\n   */\n  @Override\n  protected TokenStreamComponents createComponents(final String field, final Reader reader) {\n    final Tokenizer src = new StandardTokenizer(this.version, reader);\n    \n    return new TokenStreamComponents(\n      src,\n      new MorfologikFilter(new StandardFilter(this.version, src), this.dictionary, this.version));\n  }\n\n","sourceOld":"  /**\n   * Creates a\n   * {@link org.apache.lucene.analysis.ReusableAnalyzerBase.TokenStreamComponents}\n   * which tokenizes all the text in the provided {@link Reader}.\n   * \n   * @param field ignored field name\n   * @param reader source of tokens\n   * \n   * @return A\n   *         {@link org.apache.lucene.analysis.ReusableAnalyzerBase.TokenStreamComponents}\n   *         built from an {@link StandardTokenizer} filtered with\n   *         {@link StandardFilter} and {@link MorfologikFilter}.\n   */\n  @Override\n  protected TokenStreamComponents createComponents(final String field, final Reader reader) {\n    final Tokenizer src = new StandardTokenizer(this.version, reader);\n    \n    return new TokenStreamComponents(\n      src,\n      new MorfologikFilter(new StandardFilter(this.version, src), this.dictionary, this.version));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/morfologik/src/java/org/apache/lucene/analysis/morfologik/MorfologikAnalyzer#createComponents(String,Reader).mjava","pathOld":"modules/analysis/morfologik/src/java/org/apache/lucene/analysis/morfologik/MorfologikAnalyzer#createComponents(String,Reader).mjava","sourceNew":"  /**\n   * Creates a\n   * {@link org.apache.lucene.analysis.Analyzer.TokenStreamComponents}\n   * which tokenizes all the text in the provided {@link Reader}.\n   * \n   * @param field ignored field name\n   * @param reader source of tokens\n   * \n   * @return A\n   *         {@link org.apache.lucene.analysis.Analyzer.TokenStreamComponents}\n   *         built from an {@link StandardTokenizer} filtered with\n   *         {@link StandardFilter} and {@link MorfologikFilter}.\n   */\n  @Override\n  protected TokenStreamComponents createComponents(final String field, final Reader reader) {\n    final Tokenizer src = new StandardTokenizer(this.version, reader);\n    \n    return new TokenStreamComponents(\n      src,\n      new MorfologikFilter(new StandardFilter(this.version, src), this.dictionary, this.version));\n  }\n\n","sourceOld":"  /**\n   * Creates a\n   * {@link org.apache.lucene.analysis.Analyzer.TokenStreamComponents}\n   * which tokenizes all the text in the provided {@link Reader}.\n   * \n   * @param field ignored field name\n   * @param reader source of tokens\n   * \n   * @return A\n   *         {@link org.apache.lucene.analysis.Analyzer.TokenStreamComponents}\n   *         built from an {@link StandardTokenizer} filtered with\n   *         {@link StandardFilter} and {@link MorfologikFilter}.\n   */\n  @Override\n  protected TokenStreamComponents createComponents(final String field, final Reader reader) {\n    final Tokenizer src = new StandardTokenizer(this.version, reader);\n    \n    return new TokenStreamComponents(\n      src,\n      new MorfologikFilter(new StandardFilter(this.version, src), this.dictionary, this.version));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["2f49143da0a5d278a72f741432047fcfa6da996e"],"c9372469b09ed273740e18f76520c99aa075358b":["9756567a078125be9a0791e46f79fa0ab190d5c1"],"6ed03b279d8e78ef300d3d8d0e889889907a053a":["c9372469b09ed273740e18f76520c99aa075358b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"2f49143da0a5d278a72f741432047fcfa6da996e":["b8f1fd760e2a7a87de661158ca069c8dacab8360"],"da49a6f983059bd3fb6ce68ad058fb6258d8c5e9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"b8f1fd760e2a7a87de661158ca069c8dacab8360":["6ed03b279d8e78ef300d3d8d0e889889907a053a"],"d083e83f225b11e5fdd900e83d26ddb385b6955c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","6ed03b279d8e78ef300d3d8d0e889889907a053a"],"9756567a078125be9a0791e46f79fa0ab190d5c1":["da49a6f983059bd3fb6ce68ad058fb6258d8c5e9"],"817d8435e9135b756f08ce6710ab0baac51bdf88":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","6ed03b279d8e78ef300d3d8d0e889889907a053a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b89678825b68eccaf09e6ab71675fc0b0af1e099"]},"commit2Childs":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"c9372469b09ed273740e18f76520c99aa075358b":["6ed03b279d8e78ef300d3d8d0e889889907a053a"],"6ed03b279d8e78ef300d3d8d0e889889907a053a":["b8f1fd760e2a7a87de661158ca069c8dacab8360","d083e83f225b11e5fdd900e83d26ddb385b6955c","817d8435e9135b756f08ce6710ab0baac51bdf88"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["da49a6f983059bd3fb6ce68ad058fb6258d8c5e9","d083e83f225b11e5fdd900e83d26ddb385b6955c","817d8435e9135b756f08ce6710ab0baac51bdf88"],"2f49143da0a5d278a72f741432047fcfa6da996e":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"da49a6f983059bd3fb6ce68ad058fb6258d8c5e9":["9756567a078125be9a0791e46f79fa0ab190d5c1"],"b8f1fd760e2a7a87de661158ca069c8dacab8360":["2f49143da0a5d278a72f741432047fcfa6da996e"],"d083e83f225b11e5fdd900e83d26ddb385b6955c":[],"9756567a078125be9a0791e46f79fa0ab190d5c1":["c9372469b09ed273740e18f76520c99aa075358b"],"817d8435e9135b756f08ce6710ab0baac51bdf88":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["d083e83f225b11e5fdd900e83d26ddb385b6955c","817d8435e9135b756f08ce6710ab0baac51bdf88","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}