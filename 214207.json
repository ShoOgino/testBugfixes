{"path":"lucene/core/src/test/org/apache/lucene/search/spans/TestBasics#testTerm().mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/spans/TestBasics#testTerm().mjava","pathOld":"lucene/src/test/org/apache/lucene/search/spans/TestBasics#testTerm().mjava","sourceNew":"  @Test\n  public void testTerm() throws Exception {\n    Query query = new TermQuery(new Term(\"field\", \"seventy\"));\n    checkHits(query, new int[]\n      {70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 170, 171, 172, 173, 174, 175,\n              176, 177, 178, 179, 270, 271, 272, 273, 274, 275, 276, 277, 278,\n              279, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 470, 471,\n              472, 473, 474, 475, 476, 477, 478, 479, 570, 571, 572, 573, 574,\n              575, 576, 577, 578, 579, 670, 671, 672, 673, 674, 675, 676, 677,\n              678, 679, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 870,\n              871, 872, 873, 874, 875, 876, 877, 878, 879, 970, 971, 972, 973,\n              974, 975, 976, 977, 978, 979, 1070, 1071, 1072, 1073, 1074, 1075,\n              1076, 1077, 1078, 1079, 1170, 1171, 1172, 1173, 1174, 1175, 1176,\n              1177, 1178, 1179, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277,\n              1278, 1279, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378,\n              1379, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479,\n              1570, 1571, 1572, 1573, 1574, 1575, 1576, 1577, 1578, 1579, 1670,\n              1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1770, 1771,\n              1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1870, 1871, 1872,\n              1873, 1874, 1875, 1876, 1877,\n              1878, 1879, 1970, 1971, 1972, 1973, 1974, 1975, 1976, 1977, 1978,\n              1979});\n    }\n\n","sourceOld":"  @Test\n  public void testTerm() throws Exception {\n    Query query = new TermQuery(new Term(\"field\", \"seventy\"));\n    checkHits(query, new int[]\n      {70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 170, 171, 172, 173, 174, 175,\n              176, 177, 178, 179, 270, 271, 272, 273, 274, 275, 276, 277, 278,\n              279, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 470, 471,\n              472, 473, 474, 475, 476, 477, 478, 479, 570, 571, 572, 573, 574,\n              575, 576, 577, 578, 579, 670, 671, 672, 673, 674, 675, 676, 677,\n              678, 679, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 870,\n              871, 872, 873, 874, 875, 876, 877, 878, 879, 970, 971, 972, 973,\n              974, 975, 976, 977, 978, 979, 1070, 1071, 1072, 1073, 1074, 1075,\n              1076, 1077, 1078, 1079, 1170, 1171, 1172, 1173, 1174, 1175, 1176,\n              1177, 1178, 1179, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277,\n              1278, 1279, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378,\n              1379, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479,\n              1570, 1571, 1572, 1573, 1574, 1575, 1576, 1577, 1578, 1579, 1670,\n              1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1770, 1771,\n              1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1870, 1871, 1872,\n              1873, 1874, 1875, 1876, 1877,\n              1878, 1879, 1970, 1971, 1972, 1973, 1974, 1975, 1976, 1977, 1978,\n              1979});\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c4f600f812447b5512daeaf8e5c9df5dbcc4a254","date":1428874774,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/spans/TestBasics#testTerm().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/spans/TestBasics#testTerm().mjava","sourceNew":"  public void testTerm() throws Exception {\n    Query query = new TermQuery(new Term(\"field\", \"seventy\"));\n    checkHits(query, new int[]\n      {70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 170, 171, 172, 173, 174, 175,\n              176, 177, 178, 179, 270, 271, 272, 273, 274, 275, 276, 277, 278,\n              279, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 470, 471,\n              472, 473, 474, 475, 476, 477, 478, 479, 570, 571, 572, 573, 574,\n              575, 576, 577, 578, 579, 670, 671, 672, 673, 674, 675, 676, 677,\n              678, 679, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 870,\n              871, 872, 873, 874, 875, 876, 877, 878, 879, 970, 971, 972, 973,\n              974, 975, 976, 977, 978, 979, 1070, 1071, 1072, 1073, 1074, 1075,\n              1076, 1077, 1078, 1079, 1170, 1171, 1172, 1173, 1174, 1175, 1176,\n              1177, 1178, 1179, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277,\n              1278, 1279, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378,\n              1379, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479,\n              1570, 1571, 1572, 1573, 1574, 1575, 1576, 1577, 1578, 1579, 1670,\n              1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1770, 1771,\n              1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1870, 1871, 1872,\n              1873, 1874, 1875, 1876, 1877,\n              1878, 1879, 1970, 1971, 1972, 1973, 1974, 1975, 1976, 1977, 1978,\n              1979});\n    }\n\n","sourceOld":"  @Test\n  public void testTerm() throws Exception {\n    Query query = new TermQuery(new Term(\"field\", \"seventy\"));\n    checkHits(query, new int[]\n      {70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 170, 171, 172, 173, 174, 175,\n              176, 177, 178, 179, 270, 271, 272, 273, 274, 275, 276, 277, 278,\n              279, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 470, 471,\n              472, 473, 474, 475, 476, 477, 478, 479, 570, 571, 572, 573, 574,\n              575, 576, 577, 578, 579, 670, 671, 672, 673, 674, 675, 676, 677,\n              678, 679, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 870,\n              871, 872, 873, 874, 875, 876, 877, 878, 879, 970, 971, 972, 973,\n              974, 975, 976, 977, 978, 979, 1070, 1071, 1072, 1073, 1074, 1075,\n              1076, 1077, 1078, 1079, 1170, 1171, 1172, 1173, 1174, 1175, 1176,\n              1177, 1178, 1179, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277,\n              1278, 1279, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378,\n              1379, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479,\n              1570, 1571, 1572, 1573, 1574, 1575, 1576, 1577, 1578, 1579, 1670,\n              1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1770, 1771,\n              1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1870, 1871, 1872,\n              1873, 1874, 1875, 1876, 1877,\n              1878, 1879, 1970, 1971, 1972, 1973, 1974, 1975, 1976, 1977, 1978,\n              1979});\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"c4f600f812447b5512daeaf8e5c9df5dbcc4a254":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["c4f600f812447b5512daeaf8e5c9df5dbcc4a254"]},"commit2Childs":{"c4f600f812447b5512daeaf8e5c9df5dbcc4a254":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["c4f600f812447b5512daeaf8e5c9df5dbcc4a254"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}