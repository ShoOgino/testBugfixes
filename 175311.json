{"path":"solr/core/src/java/org/apache/solr/update/SolrCmdDistributor#distribDelete(DeleteUpdateCommand,List[Node],ModifiableSolrParams,boolean,RollupRequestReplicationTracker,LeaderRequestReplicationTracker).mjava","commits":[{"id":"615bf5b56d95ed8c9bf06a402db6c817d6bff21a","date":1509492118,"type":1,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/update/SolrCmdDistributor#distribDelete(DeleteUpdateCommand,List[Node],ModifiableSolrParams,boolean,RollupRequestReplicationTracker,LeaderRequestReplicationTracker).mjava","pathOld":"solr/core/src/java/org/apache/solr/update/SolrCmdDistributor#distribDelete(DeleteUpdateCommand,List[Node],ModifiableSolrParams,boolean).mjava","sourceNew":"  public void distribDelete(DeleteUpdateCommand cmd, List<Node> nodes, ModifiableSolrParams params, boolean sync,\n                            RollupRequestReplicationTracker rollupTracker,\n                            LeaderRequestReplicationTracker leaderTracker) throws IOException {\n    \n    for (Node node : nodes) {\n      UpdateRequest uReq = new UpdateRequest();\n      uReq.setParams(params);\n      uReq.setCommitWithin(cmd.commitWithin);\n      if (cmd.isDeleteById()) {\n        uReq.deleteById(cmd.getId(), cmd.getRoute(), cmd.getVersion());\n      } else {\n        uReq.deleteByQuery(cmd.query);\n      }\n\n      submit(new Req(cmd, node, uReq, sync, rollupTracker, leaderTracker), false);\n    }\n  }\n\n","sourceOld":"  public void distribDelete(DeleteUpdateCommand cmd, List<Node> nodes, ModifiableSolrParams params, boolean sync) throws IOException {\n    \n    for (Node node : nodes) {\n      UpdateRequest uReq = new UpdateRequest();\n      uReq.setParams(params);\n      uReq.setCommitWithin(cmd.commitWithin);\n      if (cmd.isDeleteById()) {\n        uReq.deleteById(cmd.getId(), cmd.getRoute(), cmd.getVersion());\n      } else {\n        uReq.deleteByQuery(cmd.query);\n      }\n      \n      submit(new Req(cmd, node, uReq, sync), false);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c0cf9c2ec975506bab465b6b2be92cb9bffc84d3","date":1533596209,"type":3,"author":"Tomas Fernandez Lobbe","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/update/SolrCmdDistributor#distribDelete(DeleteUpdateCommand,List[Node],ModifiableSolrParams,boolean,RollupRequestReplicationTracker,LeaderRequestReplicationTracker).mjava","pathOld":"solr/core/src/java/org/apache/solr/update/SolrCmdDistributor#distribDelete(DeleteUpdateCommand,List[Node],ModifiableSolrParams,boolean,RollupRequestReplicationTracker,LeaderRequestReplicationTracker).mjava","sourceNew":"  public void distribDelete(DeleteUpdateCommand cmd, List<Node> nodes, ModifiableSolrParams params, boolean sync,\n                            RollupRequestReplicationTracker rollupTracker,\n                            LeaderRequestReplicationTracker leaderTracker) throws IOException {\n    \n    if (!cmd.isDeleteById()) {\n      blockAndDoRetries(); // For DBQ, flush all writes before submitting\n    }\n    \n    for (Node node : nodes) {\n      UpdateRequest uReq = new UpdateRequest();\n      uReq.setParams(params);\n      uReq.setCommitWithin(cmd.commitWithin);\n      if (cmd.isDeleteById()) {\n        uReq.deleteById(cmd.getId(), cmd.getRoute(), cmd.getVersion());\n      } else {\n        uReq.deleteByQuery(cmd.query);\n      }\n      submit(new Req(cmd, node, uReq, sync, rollupTracker, leaderTracker), false);\n    }\n  }\n\n","sourceOld":"  public void distribDelete(DeleteUpdateCommand cmd, List<Node> nodes, ModifiableSolrParams params, boolean sync,\n                            RollupRequestReplicationTracker rollupTracker,\n                            LeaderRequestReplicationTracker leaderTracker) throws IOException {\n    \n    for (Node node : nodes) {\n      UpdateRequest uReq = new UpdateRequest();\n      uReq.setParams(params);\n      uReq.setCommitWithin(cmd.commitWithin);\n      if (cmd.isDeleteById()) {\n        uReq.deleteById(cmd.getId(), cmd.getRoute(), cmd.getVersion());\n      } else {\n        uReq.deleteByQuery(cmd.query);\n      }\n\n      submit(new Req(cmd, node, uReq, sync, rollupTracker, leaderTracker), false);\n    }\n  }\n\n","bugFix":["615bf5b56d95ed8c9bf06a402db6c817d6bff21a"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"615bf5b56d95ed8c9bf06a402db6c817d6bff21a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["c0cf9c2ec975506bab465b6b2be92cb9bffc84d3"],"c0cf9c2ec975506bab465b6b2be92cb9bffc84d3":["615bf5b56d95ed8c9bf06a402db6c817d6bff21a"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["615bf5b56d95ed8c9bf06a402db6c817d6bff21a"],"615bf5b56d95ed8c9bf06a402db6c817d6bff21a":["c0cf9c2ec975506bab465b6b2be92cb9bffc84d3"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"c0cf9c2ec975506bab465b6b2be92cb9bffc84d3":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}