{"path":"lucene/sandbox/src/java/org/apache/lucene/search/intervals/DisjunctionIntervalsSource.DisjunctionIntervalIterator#DisjunctionIntervalIterator(List[IntervalIterator]).mjava","commits":[{"id":"361b1afc99f68598c73d37074aec089c9c951586","date":1522744632,"type":0,"author":"Alan Woodward","isMerge":false,"pathNew":"lucene/sandbox/src/java/org/apache/lucene/search/intervals/DisjunctionIntervalsSource.DisjunctionIntervalIterator#DisjunctionIntervalIterator(List[IntervalIterator]).mjava","pathOld":"/dev/null","sourceNew":"    DisjunctionIntervalIterator(List<IntervalIterator> iterators) {\n      this.disiQueue = new DisiPriorityQueue(iterators.size());\n      for (IntervalIterator it : iterators) {\n        disiQueue.add(new DisiWrapper(it));\n      }\n      this.approximation = new DisjunctionDISIApproximation(disiQueue);\n      this.iterators = iterators;\n      this.intervalQueue = new PriorityQueue<IntervalIterator>(iterators.size()) {\n        @Override\n        protected boolean lessThan(IntervalIterator a, IntervalIterator b) {\n          return a.end() < b.end() || (a.end() == b.end() && a.start() >= b.start());\n        }\n      };\n      float costsum = 0;\n      for (IntervalIterator it : iterators) {\n        costsum += it.cost();\n      }\n      this.matchCost = costsum;\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"97ee2282ff806e9bc9d705f389cf40451ab81c3e","date":1561721333,"type":5,"author":"Alan Woodward","isMerge":false,"pathNew":"lucene/queries/src/java/org/apache/lucene/queries/intervals/DisjunctionIntervalsSource.DisjunctionIntervalIterator#DisjunctionIntervalIterator(List[IntervalIterator]).mjava","pathOld":"lucene/sandbox/src/java/org/apache/lucene/search/intervals/DisjunctionIntervalsSource.DisjunctionIntervalIterator#DisjunctionIntervalIterator(List[IntervalIterator]).mjava","sourceNew":"    DisjunctionIntervalIterator(List<IntervalIterator> iterators) {\n      this.disiQueue = new DisiPriorityQueue(iterators.size());\n      for (IntervalIterator it : iterators) {\n        disiQueue.add(new DisiWrapper(it));\n      }\n      this.approximation = new DisjunctionDISIApproximation(disiQueue);\n      this.iterators = iterators;\n      this.intervalQueue = new PriorityQueue<IntervalIterator>(iterators.size()) {\n        @Override\n        protected boolean lessThan(IntervalIterator a, IntervalIterator b) {\n          return a.end() < b.end() || (a.end() == b.end() && a.start() >= b.start());\n        }\n      };\n      float costsum = 0;\n      for (IntervalIterator it : iterators) {\n        costsum += it.cost();\n      }\n      this.matchCost = costsum;\n    }\n\n","sourceOld":"    DisjunctionIntervalIterator(List<IntervalIterator> iterators) {\n      this.disiQueue = new DisiPriorityQueue(iterators.size());\n      for (IntervalIterator it : iterators) {\n        disiQueue.add(new DisiWrapper(it));\n      }\n      this.approximation = new DisjunctionDISIApproximation(disiQueue);\n      this.iterators = iterators;\n      this.intervalQueue = new PriorityQueue<IntervalIterator>(iterators.size()) {\n        @Override\n        protected boolean lessThan(IntervalIterator a, IntervalIterator b) {\n          return a.end() < b.end() || (a.end() == b.end() && a.start() >= b.start());\n        }\n      };\n      float costsum = 0;\n      for (IntervalIterator it : iterators) {\n        costsum += it.cost();\n      }\n      this.matchCost = costsum;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"97ee2282ff806e9bc9d705f389cf40451ab81c3e":["361b1afc99f68598c73d37074aec089c9c951586"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"361b1afc99f68598c73d37074aec089c9c951586":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["97ee2282ff806e9bc9d705f389cf40451ab81c3e"]},"commit2Childs":{"97ee2282ff806e9bc9d705f389cf40451ab81c3e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["361b1afc99f68598c73d37074aec089c9c951586"],"361b1afc99f68598c73d37074aec089c9c951586":["97ee2282ff806e9bc9d705f389cf40451ab81c3e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}