{"path":"lucene/src/java/org/apache/lucene/util/automaton/Automaton#Automaton(State).mjava","commits":[{"id":"5acb0ee59cc50caf85402e92d148fdb2af61bc19","date":1272929037,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/util/automaton/Automaton#Automaton(State).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Constructs a new automaton that accepts the empty language. Using this\n   * constructor, automata can be constructed manually from {@link State} and\n   * {@link Transition} objects.\n   * \n   * @see #setInitialState(State)\n   * @see State\n   * @see Transition\n   */\n  public Automaton(State initial) {\n    this.initial = initial;\n    deterministic = true;\n    singleton = null;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"444ad7e7387cb262e7c9515d0847b4082e7227a3","date":1283181885,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/util/automaton/Automaton#Automaton(State).mjava","pathOld":"lucene/src/java/org/apache/lucene/util/automaton/Automaton#Automaton(State).mjava","sourceNew":"  /**\n   * Constructs a new automaton that accepts the empty language. Using this\n   * constructor, automata can be constructed manually from {@link State} and\n   * {@link Transition} objects.\n   * \n   * @see State\n   * @see Transition\n   */\n  public Automaton(State initial) {\n    this.initial = initial;\n    deterministic = true;\n    singleton = null;\n  }\n\n","sourceOld":"  /**\n   * Constructs a new automaton that accepts the empty language. Using this\n   * constructor, automata can be constructed manually from {@link State} and\n   * {@link Transition} objects.\n   * \n   * @see #setInitialState(State)\n   * @see State\n   * @see Transition\n   */\n  public Automaton(State initial) {\n    this.initial = initial;\n    deterministic = true;\n    singleton = null;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","date":1292920096,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/util/automaton/Automaton#Automaton(State).mjava","pathOld":"lucene/src/java/org/apache/lucene/util/automaton/Automaton#Automaton(State).mjava","sourceNew":"  /**\n   * Constructs a new automaton that accepts the empty language. Using this\n   * constructor, automata can be constructed manually from {@link State} and\n   * {@link Transition} objects.\n   * \n   * @see State\n   * @see Transition\n   */\n  public Automaton(State initial) {\n    this.initial = initial;\n    deterministic = true;\n    singleton = null;\n  }\n\n","sourceOld":"  /**\n   * Constructs a new automaton that accepts the empty language. Using this\n   * constructor, automata can be constructed manually from {@link State} and\n   * {@link Transition} objects.\n   * \n   * @see #setInitialState(State)\n   * @see State\n   * @see Transition\n   */\n  public Automaton(State initial) {\n    this.initial = initial;\n    deterministic = true;\n    singleton = null;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":5,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/automaton/Automaton#Automaton(State).mjava","pathOld":"lucene/src/java/org/apache/lucene/util/automaton/Automaton#Automaton(State).mjava","sourceNew":"  /**\n   * Constructs a new automaton that accepts the empty language. Using this\n   * constructor, automata can be constructed manually from {@link State} and\n   * {@link Transition} objects.\n   * \n   * @see State\n   * @see Transition\n   */\n  public Automaton(State initial) {\n    this.initial = initial;\n    deterministic = true;\n    singleton = null;\n  }\n\n","sourceOld":"  /**\n   * Constructs a new automaton that accepts the empty language. Using this\n   * constructor, automata can be constructed manually from {@link State} and\n   * {@link Transition} objects.\n   * \n   * @see State\n   * @see Transition\n   */\n  public Automaton(State initial) {\n    this.initial = initial;\n    deterministic = true;\n    singleton = null;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"444ad7e7387cb262e7c9515d0847b4082e7227a3":["5acb0ee59cc50caf85402e92d148fdb2af61bc19"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["444ad7e7387cb262e7c9515d0847b4082e7227a3"],"5acb0ee59cc50caf85402e92d148fdb2af61bc19":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["5acb0ee59cc50caf85402e92d148fdb2af61bc19","444ad7e7387cb262e7c9515d0847b4082e7227a3"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"]},"commit2Childs":{"444ad7e7387cb262e7c9515d0847b4082e7227a3":["3a119bbc8703c10faa329ec201c654b3a35a1e3e","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"5acb0ee59cc50caf85402e92d148fdb2af61bc19":["444ad7e7387cb262e7c9515d0847b4082e7227a3","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["5acb0ee59cc50caf85402e92d148fdb2af61bc19"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}