{"path":"lucene/core/src/test/org/apache/lucene/index/TestPostingsOffsets#checkTokens(Token[],Token[]).mjava","commits":[{"id":"b1e9f55cd548ce59174edc2a6e3df3bd8eece7c8","date":1412000835,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestPostingsOffsets#checkTokens(Token[],Token[]).mjava","pathOld":"/dev/null","sourceNew":"  private void checkTokens(Token[] field1, Token[] field2) throws IOException {\n    Directory dir = newDirectory();\n    RandomIndexWriter riw = new RandomIndexWriter(random(), dir, iwc);\n    boolean success = false;\n    try {\n      FieldType ft = new FieldType(TextField.TYPE_NOT_STORED);\n      ft.setIndexOptions(IndexOptions.DOCS_AND_FREQS_AND_POSITIONS_AND_OFFSETS);\n      // store some term vectors for the checkindex cross-check\n      ft.setStoreTermVectors(true);\n      ft.setStoreTermVectorPositions(true);\n      ft.setStoreTermVectorOffsets(true);\n     \n      Document doc = new Document();\n      doc.add(new Field(\"body\", new CannedTokenStream(field1), ft));\n      doc.add(new Field(\"body\", new CannedTokenStream(field2), ft));\n      riw.addDocument(doc);\n      riw.close();\n      success = true;\n    } finally {\n      if (success) {\n        IOUtils.close(dir);\n      } else {\n        IOUtils.closeWhileHandlingException(riw, dir);\n      }\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d9a47902d6207303f5ed3e7aaca62ca33433af66","date":1412435312,"type":0,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestPostingsOffsets#checkTokens(Token[],Token[]).mjava","pathOld":"/dev/null","sourceNew":"  private void checkTokens(Token[] field1, Token[] field2) throws IOException {\n    Directory dir = newDirectory();\n    RandomIndexWriter riw = new RandomIndexWriter(random(), dir, iwc);\n    boolean success = false;\n    try {\n      FieldType ft = new FieldType(TextField.TYPE_NOT_STORED);\n      ft.setIndexOptions(IndexOptions.DOCS_AND_FREQS_AND_POSITIONS_AND_OFFSETS);\n      // store some term vectors for the checkindex cross-check\n      ft.setStoreTermVectors(true);\n      ft.setStoreTermVectorPositions(true);\n      ft.setStoreTermVectorOffsets(true);\n     \n      Document doc = new Document();\n      doc.add(new Field(\"body\", new CannedTokenStream(field1), ft));\n      doc.add(new Field(\"body\", new CannedTokenStream(field2), ft));\n      riw.addDocument(doc);\n      riw.close();\n      success = true;\n    } finally {\n      if (success) {\n        IOUtils.close(dir);\n      } else {\n        IOUtils.closeWhileHandlingException(riw, dir);\n      }\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"b1e9f55cd548ce59174edc2a6e3df3bd8eece7c8":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"d9a47902d6207303f5ed3e7aaca62ca33433af66":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","b1e9f55cd548ce59174edc2a6e3df3bd8eece7c8"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b1e9f55cd548ce59174edc2a6e3df3bd8eece7c8"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b1e9f55cd548ce59174edc2a6e3df3bd8eece7c8","d9a47902d6207303f5ed3e7aaca62ca33433af66"],"b1e9f55cd548ce59174edc2a6e3df3bd8eece7c8":["d9a47902d6207303f5ed3e7aaca62ca33433af66","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"d9a47902d6207303f5ed3e7aaca62ca33433af66":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["d9a47902d6207303f5ed3e7aaca62ca33433af66","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}