{"path":"contrib/gdata-server/src/java/org/apache/lucene/gdata/storage/db4o/DB4oStorage#setUpdated(ServerBaseEntry,DB4oEntry).mjava","commits":[{"id":"bf1c3e657b66c65904354d158dd1cebb302dc8f9","date":1153873200,"type":0,"author":"Yonik Seeley","isMerge":false,"pathNew":"contrib/gdata-server/src/java/org/apache/lucene/gdata/storage/db4o/DB4oStorage#setUpdated(ServerBaseEntry,DB4oEntry).mjava","pathOld":"/dev/null","sourceNew":"    private void setUpdated(ServerBaseEntry entry, DB4oEntry intEntry) {\n        if (entry.getUpdated().compareTo(intEntry.getEntry().getUpdated()) <= 0) {\n            if (LOG.isDebugEnabled())\n                LOG\n                        .debug(\"Set new UpdateTime to entry new entry time is less or equal the time of the stored entry -- old Entry: \"\n                                + intEntry.getEntry().getUpdated()\n                                + \"; new Entry: \" + entry.getUpdated());\n            entry.setUpdated(new DateTime(System.currentTimeMillis(), entry\n                    .getUpdated().getTzShift()));\n        }\n\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5824af871ba6863399636aa5989bfc0ef2ea448c","date":1166013128,"type":5,"author":"Simon Willnauer","isMerge":false,"pathNew":"contrib/gdata-server/src/core/java/org/apache/lucene/gdata/storage/db4o/DB4oStorage#setUpdated(ServerBaseEntry,DB4oEntry).mjava","pathOld":"contrib/gdata-server/src/java/org/apache/lucene/gdata/storage/db4o/DB4oStorage#setUpdated(ServerBaseEntry,DB4oEntry).mjava","sourceNew":"    private void setUpdated(ServerBaseEntry entry, DB4oEntry intEntry) {\n        if (entry.getUpdated().compareTo(intEntry.getEntry().getUpdated()) <= 0) {\n            if (LOG.isDebugEnabled())\n                LOG\n                        .debug(\"Set new UpdateTime to entry new entry time is less or equal the time of the stored entry -- old Entry: \"\n                                + intEntry.getEntry().getUpdated()\n                                + \"; new Entry: \" + entry.getUpdated());\n            entry.setUpdated(new DateTime(System.currentTimeMillis(), entry\n                    .getUpdated().getTzShift()));\n        }\n\n    }\n\n","sourceOld":"    private void setUpdated(ServerBaseEntry entry, DB4oEntry intEntry) {\n        if (entry.getUpdated().compareTo(intEntry.getEntry().getUpdated()) <= 0) {\n            if (LOG.isDebugEnabled())\n                LOG\n                        .debug(\"Set new UpdateTime to entry new entry time is less or equal the time of the stored entry -- old Entry: \"\n                                + intEntry.getEntry().getUpdated()\n                                + \"; new Entry: \" + entry.getUpdated());\n            entry.setUpdated(new DateTime(System.currentTimeMillis(), entry\n                    .getUpdated().getTzShift()));\n        }\n\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"bf1c3e657b66c65904354d158dd1cebb302dc8f9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"5824af871ba6863399636aa5989bfc0ef2ea448c":["bf1c3e657b66c65904354d158dd1cebb302dc8f9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["5824af871ba6863399636aa5989bfc0ef2ea448c"]},"commit2Childs":{"bf1c3e657b66c65904354d158dd1cebb302dc8f9":["5824af871ba6863399636aa5989bfc0ef2ea448c"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["bf1c3e657b66c65904354d158dd1cebb302dc8f9"],"5824af871ba6863399636aa5989bfc0ef2ea448c":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}