{"path":"lucene/src/test/org/apache/lucene/index/TestIndexReaderReopen#testCommitReopenFS().mjava","commits":[{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexReaderReopen#testCommitReopenFS().mjava","pathOld":"src/test/org/apache/lucene/index/TestIndexReaderReopen#testCommitReopenFS().mjava","sourceNew":"  // LUCENE-1228: IndexWriter.commit() does not update the index version\n  // populate an index in iterations.\n  // at the end of every iteration, commit the index and reopen/recreate the reader.\n  // in each iteration verify the work of previous iteration. \n  // try this once with reopen once recreate, on both RAMDir and FSDir.\n  public void testCommitReopenFS () throws IOException {\n    Directory dir = FSDirectory.open(indexDir);\n    doTestReopenWithCommit(dir, true);\n    dir.close();\n  }\n\n","sourceOld":"  // LUCENE-1228: IndexWriter.commit() does not update the index version\n  // populate an index in iterations.\n  // at the end of every iteration, commit the index and reopen/recreate the reader.\n  // in each iteration verify the work of previous iteration. \n  // try this once with reopen once recreate, on both RAMDir and FSDir.\n  public void testCommitReopenFS () throws IOException {\n    Directory dir = FSDirectory.open(indexDir);\n    doTestReopenWithCommit(dir, true);\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b21422ff1d1d56499dec481f193b402e5e8def5b","date":1281472367,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexReaderReopen#testCommitReopenFS().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexReaderReopen#testCommitReopenFS().mjava","sourceNew":"  // LUCENE-1228: IndexWriter.commit() does not update the index version\n  // populate an index in iterations.\n  // at the end of every iteration, commit the index and reopen/recreate the reader.\n  // in each iteration verify the work of previous iteration. \n  // try this once with reopen once recreate, on both RAMDir and FSDir.\n  public void testCommitReopenFS () throws IOException {\n    Directory dir = FSDirectory.open(indexDir);\n    doTestReopenWithCommit(newRandom(), dir, true);\n    dir.close();\n  }\n\n","sourceOld":"  // LUCENE-1228: IndexWriter.commit() does not update the index version\n  // populate an index in iterations.\n  // at the end of every iteration, commit the index and reopen/recreate the reader.\n  // in each iteration verify the work of previous iteration. \n  // try this once with reopen once recreate, on both RAMDir and FSDir.\n  public void testCommitReopenFS () throws IOException {\n    Directory dir = FSDirectory.open(indexDir);\n    doTestReopenWithCommit(dir, true);\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1f653cfcf159baeaafe5d01682a911e95bba4012","date":1284122058,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexReaderReopen#testCommitReopenFS().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexReaderReopen#testCommitReopenFS().mjava","sourceNew":"  // LUCENE-1228: IndexWriter.commit() does not update the index version\n  // populate an index in iterations.\n  // at the end of every iteration, commit the index and reopen/recreate the reader.\n  // in each iteration verify the work of previous iteration. \n  // try this once with reopen once recreate, on both RAMDir and FSDir.\n  public void testCommitReopenFS () throws IOException {\n    Directory dir = FSDirectory.open(indexDir);\n    doTestReopenWithCommit(random, dir, true);\n    dir.close();\n  }\n\n","sourceOld":"  // LUCENE-1228: IndexWriter.commit() does not update the index version\n  // populate an index in iterations.\n  // at the end of every iteration, commit the index and reopen/recreate the reader.\n  // in each iteration verify the work of previous iteration. \n  // try this once with reopen once recreate, on both RAMDir and FSDir.\n  public void testCommitReopenFS () throws IOException {\n    Directory dir = FSDirectory.open(indexDir);\n    doTestReopenWithCommit(newRandom(), dir, true);\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a13a126d15299d5c1e117ea99ddae6fb0fa3f209","date":1291909583,"type":3,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexReaderReopen#testCommitReopenFS().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexReaderReopen#testCommitReopenFS().mjava","sourceNew":"  // LUCENE-1228: IndexWriter.commit() does not update the index version\n  // populate an index in iterations.\n  // at the end of every iteration, commit the index and reopen/recreate the reader.\n  // in each iteration verify the work of previous iteration. \n  // try this once with reopen once recreate, on both RAMDir and FSDir.\n  public void testCommitReopenFS () throws IOException {\n    Directory dir = newFSDirectory(indexDir);\n    doTestReopenWithCommit(random, dir, true);\n    dir.close();\n  }\n\n","sourceOld":"  // LUCENE-1228: IndexWriter.commit() does not update the index version\n  // populate an index in iterations.\n  // at the end of every iteration, commit the index and reopen/recreate the reader.\n  // in each iteration verify the work of previous iteration. \n  // try this once with reopen once recreate, on both RAMDir and FSDir.\n  public void testCommitReopenFS () throws IOException {\n    Directory dir = FSDirectory.open(indexDir);\n    doTestReopenWithCommit(random, dir, true);\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ab5cb6a74aefb78aa0569857970b9151dfe2e787","date":1292842407,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexReaderReopen#testCommitReopenFS().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexReaderReopen#testCommitReopenFS().mjava","sourceNew":"  // LUCENE-1228: IndexWriter.commit() does not update the index version\n  // populate an index in iterations.\n  // at the end of every iteration, commit the index and reopen/recreate the reader.\n  // in each iteration verify the work of previous iteration. \n  // try this once with reopen once recreate, on both RAMDir and FSDir.\n  public void testCommitReopenFS () throws IOException {\n    Directory dir = newFSDirectory(indexDir);\n    doTestReopenWithCommit(random, dir, true);\n    dir.close();\n  }\n\n","sourceOld":"  // LUCENE-1228: IndexWriter.commit() does not update the index version\n  // populate an index in iterations.\n  // at the end of every iteration, commit the index and reopen/recreate the reader.\n  // in each iteration verify the work of previous iteration. \n  // try this once with reopen once recreate, on both RAMDir and FSDir.\n  public void testCommitReopenFS () throws IOException {\n    Directory dir = FSDirectory.open(indexDir);\n    doTestReopenWithCommit(random, dir, true);\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","date":1292920096,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexReaderReopen#testCommitReopenFS().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexReaderReopen#testCommitReopenFS().mjava","sourceNew":"  // LUCENE-1228: IndexWriter.commit() does not update the index version\n  // populate an index in iterations.\n  // at the end of every iteration, commit the index and reopen/recreate the reader.\n  // in each iteration verify the work of previous iteration. \n  // try this once with reopen once recreate, on both RAMDir and FSDir.\n  public void testCommitReopenFS () throws IOException {\n    Directory dir = newFSDirectory(indexDir);\n    doTestReopenWithCommit(random, dir, true);\n    dir.close();\n  }\n\n","sourceOld":"  // LUCENE-1228: IndexWriter.commit() does not update the index version\n  // populate an index in iterations.\n  // at the end of every iteration, commit the index and reopen/recreate the reader.\n  // in each iteration verify the work of previous iteration. \n  // try this once with reopen once recreate, on both RAMDir and FSDir.\n  public void testCommitReopenFS () throws IOException {\n    Directory dir = FSDirectory.open(indexDir);\n    doTestReopenWithCommit(dir, true);\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"cca56866c19997e28ef073622656669c15210540","date":1307449014,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexReaderReopen#testCommitReopen().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexReaderReopen#testCommitReopenFS().mjava","sourceNew":"  // LUCENE-1228: IndexWriter.commit() does not update the index version\n  // populate an index in iterations.\n  // at the end of every iteration, commit the index and reopen/recreate the reader.\n  // in each iteration verify the work of previous iteration. \n  // try this once with reopen once recreate, on both RAMDir and FSDir.\n  public void testCommitReopen () throws IOException {\n    Directory dir = newDirectory();\n    doTestReopenWithCommit(random, dir, true);\n    dir.close();\n  }\n\n","sourceOld":"  // LUCENE-1228: IndexWriter.commit() does not update the index version\n  // populate an index in iterations.\n  // at the end of every iteration, commit the index and reopen/recreate the reader.\n  // in each iteration verify the work of previous iteration. \n  // try this once with reopen once recreate, on both RAMDir and FSDir.\n  public void testCommitReopenFS () throws IOException {\n    Directory dir = newFSDirectory(indexDir);\n    doTestReopenWithCommit(random, dir, true);\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"77cf4379b2824f6ea34b091c495d6e95c38ff9e2","date":1307610475,"type":5,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexReaderReopen#testCommitReopen().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexReaderReopen#testCommitReopenFS().mjava","sourceNew":"  // LUCENE-1228: IndexWriter.commit() does not update the index version\n  // populate an index in iterations.\n  // at the end of every iteration, commit the index and reopen/recreate the reader.\n  // in each iteration verify the work of previous iteration. \n  // try this once with reopen once recreate, on both RAMDir and FSDir.\n  public void testCommitReopen () throws IOException {\n    Directory dir = newDirectory();\n    doTestReopenWithCommit(random, dir, true);\n    dir.close();\n  }\n\n","sourceOld":"  // LUCENE-1228: IndexWriter.commit() does not update the index version\n  // populate an index in iterations.\n  // at the end of every iteration, commit the index and reopen/recreate the reader.\n  // in each iteration verify the work of previous iteration. \n  // try this once with reopen once recreate, on both RAMDir and FSDir.\n  public void testCommitReopenFS () throws IOException {\n    Directory dir = newFSDirectory(indexDir);\n    doTestReopenWithCommit(random, dir, true);\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a02058e0eaba4bbd5d05e6b06b9522c0acfd1655","date":1307729864,"type":4,"author":"Steven Rowe","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexReaderReopen#testCommitReopenFS().mjava","sourceNew":null,"sourceOld":"  // LUCENE-1228: IndexWriter.commit() does not update the index version\n  // populate an index in iterations.\n  // at the end of every iteration, commit the index and reopen/recreate the reader.\n  // in each iteration verify the work of previous iteration. \n  // try this once with reopen once recreate, on both RAMDir and FSDir.\n  public void testCommitReopenFS () throws IOException {\n    Directory dir = newFSDirectory(indexDir);\n    doTestReopenWithCommit(random, dir, true);\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a02058e0eaba4bbd5d05e6b06b9522c0acfd1655":["a13a126d15299d5c1e117ea99ddae6fb0fa3f209","cca56866c19997e28ef073622656669c15210540"],"a13a126d15299d5c1e117ea99ddae6fb0fa3f209":["1f653cfcf159baeaafe5d01682a911e95bba4012"],"1f653cfcf159baeaafe5d01682a911e95bba4012":["b21422ff1d1d56499dec481f193b402e5e8def5b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"77cf4379b2824f6ea34b091c495d6e95c38ff9e2":["ab5cb6a74aefb78aa0569857970b9151dfe2e787","cca56866c19997e28ef073622656669c15210540"],"ab5cb6a74aefb78aa0569857970b9151dfe2e787":["1f653cfcf159baeaafe5d01682a911e95bba4012","a13a126d15299d5c1e117ea99ddae6fb0fa3f209"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["9454a6510e2db155fb01faa5c049b06ece95fab9","a13a126d15299d5c1e117ea99ddae6fb0fa3f209"],"cca56866c19997e28ef073622656669c15210540":["a13a126d15299d5c1e117ea99ddae6fb0fa3f209"],"b21422ff1d1d56499dec481f193b402e5e8def5b":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["cca56866c19997e28ef073622656669c15210540"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"a02058e0eaba4bbd5d05e6b06b9522c0acfd1655":[],"a13a126d15299d5c1e117ea99ddae6fb0fa3f209":["a02058e0eaba4bbd5d05e6b06b9522c0acfd1655","ab5cb6a74aefb78aa0569857970b9151dfe2e787","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","cca56866c19997e28ef073622656669c15210540"],"1f653cfcf159baeaafe5d01682a911e95bba4012":["a13a126d15299d5c1e117ea99ddae6fb0fa3f209","ab5cb6a74aefb78aa0569857970b9151dfe2e787"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"77cf4379b2824f6ea34b091c495d6e95c38ff9e2":[],"ab5cb6a74aefb78aa0569857970b9151dfe2e787":["77cf4379b2824f6ea34b091c495d6e95c38ff9e2"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":[],"cca56866c19997e28ef073622656669c15210540":["a02058e0eaba4bbd5d05e6b06b9522c0acfd1655","77cf4379b2824f6ea34b091c495d6e95c38ff9e2","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"b21422ff1d1d56499dec481f193b402e5e8def5b":["1f653cfcf159baeaafe5d01682a911e95bba4012"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","b21422ff1d1d56499dec481f193b402e5e8def5b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a02058e0eaba4bbd5d05e6b06b9522c0acfd1655","77cf4379b2824f6ea34b091c495d6e95c38ff9e2","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}