{"path":"src/java/org/apache/solr/core/SolrResourceLoader#SolrResourceLoader(String,ClassLoader,Properties).mjava","commits":[{"id":"1ddc2fd411184c85d1baed1e8d24840a151d6ba1","date":1219508719,"type":0,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"src/java/org/apache/solr/core/SolrResourceLoader#SolrResourceLoader(String,ClassLoader,Properties).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * <p>\n   * This loader will delegate to the context classloader when possible,\n   * otherwise it will attempt to resolve resources using any jar files\n   * found in the \"lib/\" directory in the specified instance directory.\n   * If the instance directory is not specified (=null), SolrResourceLoader#locateInstanceDir will provide one.\n   * <p>\n   */\n  public SolrResourceLoader( String instanceDir, ClassLoader parent, Properties coreProperties )\n  {\n    if( instanceDir == null ) {\n      this.instanceDir = SolrResourceLoader.locateInstanceDir();\n    } else{\n      this.instanceDir = normalizeDir(instanceDir);\n    }\n    log.info(\"Solr home set to '\" + this.instanceDir + \"'\");\n    this.classLoader = createClassLoader(new File(this.instanceDir + \"lib/\"), parent);\n    this.coreProperties = coreProperties;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["083df6f7d2115772bdcf0f53c63aa859e664c69e","083df6f7d2115772bdcf0f53c63aa859e664c69e","083df6f7d2115772bdcf0f53c63aa859e664c69e"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"baf5396191fd3f561aa9c6af0633bae3500799ba","date":1245405538,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"src/java/org/apache/solr/core/SolrResourceLoader#SolrResourceLoader(String,ClassLoader,Properties).mjava","pathOld":"src/java/org/apache/solr/core/SolrResourceLoader#SolrResourceLoader(String,ClassLoader,Properties).mjava","sourceNew":"  /**\n   * <p>\n   * This loader will delegate to the context classloader when possible,\n   * otherwise it will attempt to resolve resources using any jar files\n   * found in the \"lib/\" directory in the specified instance directory.\n   * If the instance directory is not specified (=null), SolrResourceLoader#locateInstanceDir will provide one.\n   * <p>\n   */\n  public SolrResourceLoader( String instanceDir, ClassLoader parent, Properties coreProperties )\n  {\n    if( instanceDir == null ) {\n      this.instanceDir = SolrResourceLoader.locateSolrHome();\n    } else{\n      this.instanceDir = normalizeDir(instanceDir);\n    }\n    log.info(\"Solr home set to '\" + this.instanceDir + \"'\");\n    this.classLoader = createClassLoader(new File(this.instanceDir + \"lib/\"), parent);\n    this.coreProperties = coreProperties;\n  }\n\n","sourceOld":"  /**\n   * <p>\n   * This loader will delegate to the context classloader when possible,\n   * otherwise it will attempt to resolve resources using any jar files\n   * found in the \"lib/\" directory in the specified instance directory.\n   * If the instance directory is not specified (=null), SolrResourceLoader#locateInstanceDir will provide one.\n   * <p>\n   */\n  public SolrResourceLoader( String instanceDir, ClassLoader parent, Properties coreProperties )\n  {\n    if( instanceDir == null ) {\n      this.instanceDir = SolrResourceLoader.locateInstanceDir();\n    } else{\n      this.instanceDir = normalizeDir(instanceDir);\n    }\n    log.info(\"Solr home set to '\" + this.instanceDir + \"'\");\n    this.classLoader = createClassLoader(new File(this.instanceDir + \"lib/\"), parent);\n    this.coreProperties = coreProperties;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"5dc524639edfdfa4edfb67ae889c2b6029f9314c","date":1255358511,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"src/java/org/apache/solr/core/SolrResourceLoader#SolrResourceLoader(String,ClassLoader,Properties).mjava","pathOld":"src/java/org/apache/solr/core/SolrResourceLoader#SolrResourceLoader(String,ClassLoader,Properties).mjava","sourceNew":"  /**\n   * <p>\n   * This loader will delegate to the context classloader when possible,\n   * otherwise it will attempt to resolve resources using any jar files\n   * found in the \"lib/\" directory in the specified instance directory.\n   * If the instance directory is not specified (=null), SolrResourceLoader#locateInstanceDir will provide one.\n   * <p>\n   */\n  public SolrResourceLoader( String instanceDir, ClassLoader parent, Properties coreProperties )\n  {\n    if( instanceDir == null ) {\n      this.instanceDir = SolrResourceLoader.locateSolrHome();\n    } else{\n      this.instanceDir = normalizeDir(instanceDir);\n    }\n    log.info(\"Solr home set to '\" + this.instanceDir + \"'\");\n    \n    this.classLoader = createClassLoader(null, parent);\n    addToClassLoader(\"./lib/\", null);\n    \n    this.coreProperties = coreProperties;\n  }\n\n","sourceOld":"  /**\n   * <p>\n   * This loader will delegate to the context classloader when possible,\n   * otherwise it will attempt to resolve resources using any jar files\n   * found in the \"lib/\" directory in the specified instance directory.\n   * If the instance directory is not specified (=null), SolrResourceLoader#locateInstanceDir will provide one.\n   * <p>\n   */\n  public SolrResourceLoader( String instanceDir, ClassLoader parent, Properties coreProperties )\n  {\n    if( instanceDir == null ) {\n      this.instanceDir = SolrResourceLoader.locateSolrHome();\n    } else{\n      this.instanceDir = normalizeDir(instanceDir);\n    }\n    log.info(\"Solr home set to '\" + this.instanceDir + \"'\");\n    this.classLoader = createClassLoader(new File(this.instanceDir + \"lib/\"), parent);\n    this.coreProperties = coreProperties;\n  }\n\n","bugFix":null,"bugIntro":["33dd2fc33a7c6ae46d3decff17689539385ef33f","33dd2fc33a7c6ae46d3decff17689539385ef33f","33dd2fc33a7c6ae46d3decff17689539385ef33f"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"ad94625fb8d088209f46650c8097196fec67f00c","date":1453508319,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/src/java/org/apache/solr/core/SolrResourceLoader#SolrResourceLoader(String,ClassLoader,Properties).mjava","pathOld":"src/java/org/apache/solr/core/SolrResourceLoader#SolrResourceLoader(String,ClassLoader,Properties).mjava","sourceNew":"  /**\n   * <p>\n   * This loader will delegate to the context classloader when possible,\n   * otherwise it will attempt to resolve resources using any jar files\n   * found in the \"lib/\" directory in the specified instance directory.\n   * If the instance directory is not specified (=null), SolrResourceLoader#locateInstanceDir will provide one.\n   * <p>\n   */\n  public SolrResourceLoader( String instanceDir, ClassLoader parent, Properties coreProperties )\n  {\n    if( instanceDir == null ) {\n      this.instanceDir = SolrResourceLoader.locateSolrHome();\n    } else{\n      this.instanceDir = normalizeDir(instanceDir);\n    }\n    log.info(\"Solr home set to '\" + this.instanceDir + \"'\");\n    \n    this.classLoader = createClassLoader(null, parent);\n    addToClassLoader(\"./lib/\", null);\n    \n    this.coreProperties = coreProperties;\n  }\n\n","sourceOld":"  /**\n   * <p>\n   * This loader will delegate to the context classloader when possible,\n   * otherwise it will attempt to resolve resources using any jar files\n   * found in the \"lib/\" directory in the specified instance directory.\n   * If the instance directory is not specified (=null), SolrResourceLoader#locateInstanceDir will provide one.\n   * <p>\n   */\n  public SolrResourceLoader( String instanceDir, ClassLoader parent, Properties coreProperties )\n  {\n    if( instanceDir == null ) {\n      this.instanceDir = SolrResourceLoader.locateSolrHome();\n    } else{\n      this.instanceDir = normalizeDir(instanceDir);\n    }\n    log.info(\"Solr home set to '\" + this.instanceDir + \"'\");\n    \n    this.classLoader = createClassLoader(null, parent);\n    addToClassLoader(\"./lib/\", null);\n    \n    this.coreProperties = coreProperties;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"5dc524639edfdfa4edfb67ae889c2b6029f9314c":["baf5396191fd3f561aa9c6af0633bae3500799ba"],"baf5396191fd3f561aa9c6af0633bae3500799ba":["1ddc2fd411184c85d1baed1e8d24840a151d6ba1"],"ad94625fb8d088209f46650c8097196fec67f00c":["5dc524639edfdfa4edfb67ae889c2b6029f9314c"],"1ddc2fd411184c85d1baed1e8d24840a151d6ba1":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["1ddc2fd411184c85d1baed1e8d24840a151d6ba1"],"5dc524639edfdfa4edfb67ae889c2b6029f9314c":["ad94625fb8d088209f46650c8097196fec67f00c"],"baf5396191fd3f561aa9c6af0633bae3500799ba":["5dc524639edfdfa4edfb67ae889c2b6029f9314c"],"ad94625fb8d088209f46650c8097196fec67f00c":[],"1ddc2fd411184c85d1baed1e8d24840a151d6ba1":["baf5396191fd3f561aa9c6af0633bae3500799ba"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["ad94625fb8d088209f46650c8097196fec67f00c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"pathCommit":null}