{"path":"solr/core/src/java/org/apache/solr/handler/admin/SolrInfoMBeanHandler#diffNamedList(NamedList,NamedList).mjava","commits":[{"id":"2396be4785ec8ca6c942dff4d20c1c93dd03db6d","date":1333735663,"type":0,"author":"Ryan McKinley","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/admin/SolrInfoMBeanHandler#diffNamedList(NamedList,NamedList).mjava","pathOld":"/dev/null","sourceNew":"  public NamedList diffNamedList(NamedList ref, NamedList now) {\n    NamedList out = new NamedList();\n    for(int i=0; i<ref.size(); i++) {\n      String name = ref.getName(i);\n      Object r = ref.getVal(i);\n      Object n = now.remove(name);\n      if(n == null) {\n        if(r!=null) {\n          out.add(\"REMOVE \"+name, r);\n        }\n      }\n      else {\n        out.add(name, diffObject(r,n));\n      }\n    }\n    \n    for(int i=0; i<now.size(); i++) {\n      String name = now.getName(i);\n      Object v = now.getVal(i);\n      if(v!=null) {\n        out.add(\"ADD \"+name, v);\n      }\n    }\n    return out;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8836f7d701b0a696ac371f1df42b61e6070e3de7","date":1333987077,"type":3,"author":"Ryan McKinley","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/admin/SolrInfoMBeanHandler#diffNamedList(NamedList,NamedList).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/admin/SolrInfoMBeanHandler#diffNamedList(NamedList,NamedList).mjava","sourceNew":"  public NamedList diffNamedList(NamedList ref, NamedList now) {\n    NamedList out = new SimpleOrderedMap();\n    for(int i=0; i<ref.size(); i++) {\n      String name = ref.getName(i);\n      Object r = ref.getVal(i);\n      Object n = now.remove(name);\n      if(n == null) {\n        if(r!=null) {\n          out.add(\"REMOVE \"+name, r);\n        }\n      }\n      else {\n        out.add(name, diffObject(r,n));\n      }\n    }\n    \n    for(int i=0; i<now.size(); i++) {\n      String name = now.getName(i);\n      Object v = now.getVal(i);\n      if(v!=null) {\n        out.add(\"ADD \"+name, v);\n      }\n    }\n    return out;\n  }\n\n","sourceOld":"  public NamedList diffNamedList(NamedList ref, NamedList now) {\n    NamedList out = new NamedList();\n    for(int i=0; i<ref.size(); i++) {\n      String name = ref.getName(i);\n      Object r = ref.getVal(i);\n      Object n = now.remove(name);\n      if(n == null) {\n        if(r!=null) {\n          out.add(\"REMOVE \"+name, r);\n        }\n      }\n      else {\n        out.add(name, diffObject(r,n));\n      }\n    }\n    \n    for(int i=0; i<now.size(); i++) {\n      String name = now.getName(i);\n      Object v = now.getVal(i);\n      if(v!=null) {\n        out.add(\"ADD \"+name, v);\n      }\n    }\n    return out;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5a238fc456663f685a9db1ed8d680e348bb45171","date":1334173266,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/handler/admin/SolrInfoMBeanHandler#diffNamedList(NamedList,NamedList).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/admin/SolrInfoMBeanHandler#diffNamedList(NamedList,NamedList).mjava","sourceNew":"  public NamedList diffNamedList(NamedList ref, NamedList now) {\n    NamedList out = new SimpleOrderedMap();\n    for(int i=0; i<ref.size(); i++) {\n      String name = ref.getName(i);\n      Object r = ref.getVal(i);\n      Object n = now.remove(name);\n      if(n == null) {\n        if(r!=null) {\n          out.add(\"REMOVE \"+name, r);\n        }\n      }\n      else {\n        out.add(name, diffObject(r,n));\n      }\n    }\n    \n    for(int i=0; i<now.size(); i++) {\n      String name = now.getName(i);\n      Object v = now.getVal(i);\n      if(v!=null) {\n        out.add(\"ADD \"+name, v);\n      }\n    }\n    return out;\n  }\n\n","sourceOld":"  public NamedList diffNamedList(NamedList ref, NamedList now) {\n    NamedList out = new NamedList();\n    for(int i=0; i<ref.size(); i++) {\n      String name = ref.getName(i);\n      Object r = ref.getVal(i);\n      Object n = now.remove(name);\n      if(n == null) {\n        if(r!=null) {\n          out.add(\"REMOVE \"+name, r);\n        }\n      }\n      else {\n        out.add(name, diffObject(r,n));\n      }\n    }\n    \n    for(int i=0; i<now.size(); i++) {\n      String name = now.getName(i);\n      Object v = now.getVal(i);\n      if(v!=null) {\n        out.add(\"ADD \"+name, v);\n      }\n    }\n    return out;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b889bd7ef86fb42e16e0788cef9c9ed4201d222e","date":1501086062,"type":3,"author":"Steve Rowe","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/admin/SolrInfoMBeanHandler#diffNamedList(NamedList,NamedList).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/admin/SolrInfoMBeanHandler#diffNamedList(NamedList,NamedList).mjava","sourceNew":"  public NamedList diffNamedList(NamedList ref, NamedList now) {\n    NamedList out = new SimpleOrderedMap();\n    for(int i=0; i<ref.size(); i++) {\n      String name = ref.getName(i);\n      Object r = ref.getVal(i);\n      Object n = now.get(name);\n      if (n == null) {\n        if (r != null) {\n          out.add(\"REMOVE \" + name, r);\n          now.remove(name);\n        }\n      }\n      else if (r != null) {\n        out.add(name, diffObject(r, n));\n        now.remove(name);\n      }\n    }\n    \n    for(int i=0; i<now.size(); i++) {\n      String name = now.getName(i);\n      Object v = now.getVal(i);\n      if(v!=null) {\n        out.add(\"ADD \"+name, v);\n      }\n    }\n    return out;\n  }\n\n","sourceOld":"  public NamedList diffNamedList(NamedList ref, NamedList now) {\n    NamedList out = new SimpleOrderedMap();\n    for(int i=0; i<ref.size(); i++) {\n      String name = ref.getName(i);\n      Object r = ref.getVal(i);\n      Object n = now.remove(name);\n      if(n == null) {\n        if(r!=null) {\n          out.add(\"REMOVE \"+name, r);\n        }\n      }\n      else {\n        out.add(name, diffObject(r,n));\n      }\n    }\n    \n    for(int i=0; i<now.size(); i++) {\n      String name = now.getName(i);\n      Object v = now.getVal(i);\n      if(v!=null) {\n        out.add(\"ADD \"+name, v);\n      }\n    }\n    return out;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7a23cf16c8fa265dc0a564adcabb55e3f054e0ac","date":1502192746,"type":3,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/handler/admin/SolrInfoMBeanHandler#diffNamedList(NamedList,NamedList).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/admin/SolrInfoMBeanHandler#diffNamedList(NamedList,NamedList).mjava","sourceNew":"  public NamedList diffNamedList(NamedList ref, NamedList now) {\n    NamedList out = new SimpleOrderedMap();\n    for(int i=0; i<ref.size(); i++) {\n      String name = ref.getName(i);\n      Object r = ref.getVal(i);\n      Object n = now.get(name);\n      if (n == null) {\n        if (r != null) {\n          out.add(\"REMOVE \" + name, r);\n          now.remove(name);\n        }\n      }\n      else if (r != null) {\n        out.add(name, diffObject(r, n));\n        now.remove(name);\n      }\n    }\n    \n    for(int i=0; i<now.size(); i++) {\n      String name = now.getName(i);\n      Object v = now.getVal(i);\n      if(v!=null) {\n        out.add(\"ADD \"+name, v);\n      }\n    }\n    return out;\n  }\n\n","sourceOld":"  public NamedList diffNamedList(NamedList ref, NamedList now) {\n    NamedList out = new SimpleOrderedMap();\n    for(int i=0; i<ref.size(); i++) {\n      String name = ref.getName(i);\n      Object r = ref.getVal(i);\n      Object n = now.remove(name);\n      if(n == null) {\n        if(r!=null) {\n          out.add(\"REMOVE \"+name, r);\n        }\n      }\n      else {\n        out.add(name, diffObject(r,n));\n      }\n    }\n    \n    for(int i=0; i<now.size(); i++) {\n      String name = now.getName(i);\n      Object v = now.getVal(i);\n      if(v!=null) {\n        out.add(\"ADD \"+name, v);\n      }\n    }\n    return out;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ba055e19afc289adcb5bedaf68513793a7254012","date":1591268575,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/admin/SolrInfoMBeanHandler#diffNamedList(NamedList,NamedList).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/admin/SolrInfoMBeanHandler#diffNamedList(NamedList,NamedList).mjava","sourceNew":"  @SuppressWarnings({\"rawtypes\"})\n  public NamedList diffNamedList(NamedList ref, NamedList now) {\n    NamedList out = new SimpleOrderedMap();\n    for(int i=0; i<ref.size(); i++) {\n      String name = ref.getName(i);\n      Object r = ref.getVal(i);\n      Object n = now.get(name);\n      if (n == null) {\n        if (r != null) {\n          out.add(\"REMOVE \" + name, r);\n          now.remove(name);\n        }\n      }\n      else if (r != null) {\n        out.add(name, diffObject(r, n));\n        now.remove(name);\n      }\n    }\n    \n    for(int i=0; i<now.size(); i++) {\n      String name = now.getName(i);\n      Object v = now.getVal(i);\n      if(v!=null) {\n        out.add(\"ADD \"+name, v);\n      }\n    }\n    return out;\n  }\n\n","sourceOld":"  public NamedList diffNamedList(NamedList ref, NamedList now) {\n    NamedList out = new SimpleOrderedMap();\n    for(int i=0; i<ref.size(); i++) {\n      String name = ref.getName(i);\n      Object r = ref.getVal(i);\n      Object n = now.get(name);\n      if (n == null) {\n        if (r != null) {\n          out.add(\"REMOVE \" + name, r);\n          now.remove(name);\n        }\n      }\n      else if (r != null) {\n        out.add(name, diffObject(r, n));\n        now.remove(name);\n      }\n    }\n    \n    for(int i=0; i<now.size(); i++) {\n      String name = now.getName(i);\n      Object v = now.getVal(i);\n      if(v!=null) {\n        out.add(\"ADD \"+name, v);\n      }\n    }\n    return out;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"8836f7d701b0a696ac371f1df42b61e6070e3de7":["2396be4785ec8ca6c942dff4d20c1c93dd03db6d"],"7a23cf16c8fa265dc0a564adcabb55e3f054e0ac":["8836f7d701b0a696ac371f1df42b61e6070e3de7","b889bd7ef86fb42e16e0788cef9c9ed4201d222e"],"5a238fc456663f685a9db1ed8d680e348bb45171":["2396be4785ec8ca6c942dff4d20c1c93dd03db6d","8836f7d701b0a696ac371f1df42b61e6070e3de7"],"ba055e19afc289adcb5bedaf68513793a7254012":["b889bd7ef86fb42e16e0788cef9c9ed4201d222e"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"2396be4785ec8ca6c942dff4d20c1c93dd03db6d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"b889bd7ef86fb42e16e0788cef9c9ed4201d222e":["8836f7d701b0a696ac371f1df42b61e6070e3de7"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["ba055e19afc289adcb5bedaf68513793a7254012"]},"commit2Childs":{"8836f7d701b0a696ac371f1df42b61e6070e3de7":["7a23cf16c8fa265dc0a564adcabb55e3f054e0ac","5a238fc456663f685a9db1ed8d680e348bb45171","b889bd7ef86fb42e16e0788cef9c9ed4201d222e"],"7a23cf16c8fa265dc0a564adcabb55e3f054e0ac":[],"5a238fc456663f685a9db1ed8d680e348bb45171":[],"ba055e19afc289adcb5bedaf68513793a7254012":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["2396be4785ec8ca6c942dff4d20c1c93dd03db6d"],"2396be4785ec8ca6c942dff4d20c1c93dd03db6d":["8836f7d701b0a696ac371f1df42b61e6070e3de7","5a238fc456663f685a9db1ed8d680e348bb45171"],"b889bd7ef86fb42e16e0788cef9c9ed4201d222e":["7a23cf16c8fa265dc0a564adcabb55e3f054e0ac","ba055e19afc289adcb5bedaf68513793a7254012"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["7a23cf16c8fa265dc0a564adcabb55e3f054e0ac","5a238fc456663f685a9db1ed8d680e348bb45171","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}