{"path":"lucene/core/src/test/org/apache/lucene/document/TestField#testFloatField().mjava","commits":[{"id":"3a3635dad24b0681f0088f2ef680456482cdb451","date":1344025573,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/document/TestField#testFloatField().mjava","pathOld":"/dev/null","sourceNew":"  public void testFloatField() throws Exception {\n    Field fields[] = new Field[] {\n        new FloatField(\"foo\", 5f, Field.Store.NO),\n        new FloatField(\"foo\", 5f, Field.Store.YES)\n    };\n\n    for (Field field : fields) {\n      trySetBoost(field);\n      trySetByteValue(field);\n      trySetBytesValue(field);\n      trySetBytesRefValue(field);\n      trySetDoubleValue(field);\n      trySetIntValue(field);\n      field.setFloatValue(6f); // ok\n      trySetLongValue(field);\n      trySetReaderValue(field);\n      trySetShortValue(field);\n      trySetStringValue(field);\n      trySetTokenStreamValue(field);\n      \n      assertEquals(6f, field.numericValue().floatValue(), 0.0f);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8fd5be977c105554c6a7b68afcdbc511439723ab","date":1344115570,"type":0,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/document/TestField#testFloatField().mjava","pathOld":"/dev/null","sourceNew":"  public void testFloatField() throws Exception {\n    Field fields[] = new Field[] {\n        new FloatField(\"foo\", 5f, Field.Store.NO),\n        new FloatField(\"foo\", 5f, Field.Store.YES)\n    };\n\n    for (Field field : fields) {\n      trySetBoost(field);\n      trySetByteValue(field);\n      trySetBytesValue(field);\n      trySetBytesRefValue(field);\n      trySetDoubleValue(field);\n      trySetIntValue(field);\n      field.setFloatValue(6f); // ok\n      trySetLongValue(field);\n      trySetReaderValue(field);\n      trySetShortValue(field);\n      trySetStringValue(field);\n      trySetTokenStreamValue(field);\n      \n      assertEquals(6f, field.numericValue().floatValue(), 0.0f);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d6f074e73200c07d54f242d3880a8da5a35ff97b","date":1344507653,"type":0,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/document/TestField#testFloatField().mjava","pathOld":"/dev/null","sourceNew":"  public void testFloatField() throws Exception {\n    Field fields[] = new Field[] {\n        new FloatField(\"foo\", 5f, Field.Store.NO),\n        new FloatField(\"foo\", 5f, Field.Store.YES)\n    };\n\n    for (Field field : fields) {\n      trySetBoost(field);\n      trySetByteValue(field);\n      trySetBytesValue(field);\n      trySetBytesRefValue(field);\n      trySetDoubleValue(field);\n      trySetIntValue(field);\n      field.setFloatValue(6f); // ok\n      trySetLongValue(field);\n      trySetReaderValue(field);\n      trySetShortValue(field);\n      trySetStringValue(field);\n      trySetTokenStreamValue(field);\n      \n      assertEquals(6f, field.numericValue().floatValue(), 0.0f);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"770342641f7b505eaa8dccdc666158bff2419109","date":1449868421,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/document/TestField#testFloatField().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/document/TestField#testFloatField().mjava","sourceNew":"  public void testFloatField() throws Exception {\n    Field fields[] = new Field[] {\n        new LegacyFloatField(\"foo\", 5f, Field.Store.NO),\n        new LegacyFloatField(\"foo\", 5f, Field.Store.YES)\n    };\n\n    for (Field field : fields) {\n      trySetBoost(field);\n      trySetByteValue(field);\n      trySetBytesValue(field);\n      trySetBytesRefValue(field);\n      trySetDoubleValue(field);\n      trySetIntValue(field);\n      field.setFloatValue(6f); // ok\n      trySetLongValue(field);\n      trySetReaderValue(field);\n      trySetShortValue(field);\n      trySetStringValue(field);\n      trySetTokenStreamValue(field);\n      \n      assertEquals(6f, field.numericValue().floatValue(), 0.0f);\n    }\n  }\n\n","sourceOld":"  public void testFloatField() throws Exception {\n    Field fields[] = new Field[] {\n        new FloatField(\"foo\", 5f, Field.Store.NO),\n        new FloatField(\"foo\", 5f, Field.Store.YES)\n    };\n\n    for (Field field : fields) {\n      trySetBoost(field);\n      trySetByteValue(field);\n      trySetBytesValue(field);\n      trySetBytesRefValue(field);\n      trySetDoubleValue(field);\n      trySetIntValue(field);\n      field.setFloatValue(6f); // ok\n      trySetLongValue(field);\n      trySetReaderValue(field);\n      trySetShortValue(field);\n      trySetStringValue(field);\n      trySetTokenStreamValue(field);\n      \n      assertEquals(6f, field.numericValue().floatValue(), 0.0f);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"dd4aa10c3623b9da92a555b8d04677af8fe86877","date":1456230278,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/document/TestField#testLegacyFloatField().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/document/TestField#testFloatField().mjava","sourceNew":"  public void testLegacyFloatField() throws Exception {\n    Field fields[] = new Field[] {\n        new LegacyFloatField(\"foo\", 5f, Field.Store.NO),\n        new LegacyFloatField(\"foo\", 5f, Field.Store.YES)\n    };\n\n    for (Field field : fields) {\n      trySetBoost(field);\n      trySetByteValue(field);\n      trySetBytesValue(field);\n      trySetBytesRefValue(field);\n      trySetDoubleValue(field);\n      trySetIntValue(field);\n      field.setFloatValue(6f); // ok\n      trySetLongValue(field);\n      trySetReaderValue(field);\n      trySetShortValue(field);\n      trySetStringValue(field);\n      trySetTokenStreamValue(field);\n      \n      assertEquals(6f, field.numericValue().floatValue(), 0.0f);\n    }\n  }\n\n","sourceOld":"  public void testFloatField() throws Exception {\n    Field fields[] = new Field[] {\n        new LegacyFloatField(\"foo\", 5f, Field.Store.NO),\n        new LegacyFloatField(\"foo\", 5f, Field.Store.YES)\n    };\n\n    for (Field field : fields) {\n      trySetBoost(field);\n      trySetByteValue(field);\n      trySetBytesValue(field);\n      trySetBytesRefValue(field);\n      trySetDoubleValue(field);\n      trySetIntValue(field);\n      field.setFloatValue(6f); // ok\n      trySetLongValue(field);\n      trySetReaderValue(field);\n      trySetShortValue(field);\n      trySetStringValue(field);\n      trySetTokenStreamValue(field);\n      \n      assertEquals(6f, field.numericValue().floatValue(), 0.0f);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a5296efc4b319f5647b606629c093a94b23692c6","date":1456267155,"type":5,"author":"Mike McCandless","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/document/TestField#testLegacyFloatField().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/document/TestField#testFloatField().mjava","sourceNew":"  public void testLegacyFloatField() throws Exception {\n    Field fields[] = new Field[] {\n        new LegacyFloatField(\"foo\", 5f, Field.Store.NO),\n        new LegacyFloatField(\"foo\", 5f, Field.Store.YES)\n    };\n\n    for (Field field : fields) {\n      trySetBoost(field);\n      trySetByteValue(field);\n      trySetBytesValue(field);\n      trySetBytesRefValue(field);\n      trySetDoubleValue(field);\n      trySetIntValue(field);\n      field.setFloatValue(6f); // ok\n      trySetLongValue(field);\n      trySetReaderValue(field);\n      trySetShortValue(field);\n      trySetStringValue(field);\n      trySetTokenStreamValue(field);\n      \n      assertEquals(6f, field.numericValue().floatValue(), 0.0f);\n    }\n  }\n\n","sourceOld":"  public void testFloatField() throws Exception {\n    Field fields[] = new Field[] {\n        new LegacyFloatField(\"foo\", 5f, Field.Store.NO),\n        new LegacyFloatField(\"foo\", 5f, Field.Store.YES)\n    };\n\n    for (Field field : fields) {\n      trySetBoost(field);\n      trySetByteValue(field);\n      trySetBytesValue(field);\n      trySetBytesRefValue(field);\n      trySetDoubleValue(field);\n      trySetIntValue(field);\n      field.setFloatValue(6f); // ok\n      trySetLongValue(field);\n      trySetReaderValue(field);\n      trySetShortValue(field);\n      trySetStringValue(field);\n      trySetTokenStreamValue(field);\n      \n      assertEquals(6f, field.numericValue().floatValue(), 0.0f);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1ff4a3d0540c1b0f828f19adccd01d1b33c996a6","date":1456306182,"type":5,"author":"Noble Paul","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/document/TestField#testLegacyFloatField().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/document/TestField#testFloatField().mjava","sourceNew":"  public void testLegacyFloatField() throws Exception {\n    Field fields[] = new Field[] {\n        new LegacyFloatField(\"foo\", 5f, Field.Store.NO),\n        new LegacyFloatField(\"foo\", 5f, Field.Store.YES)\n    };\n\n    for (Field field : fields) {\n      trySetBoost(field);\n      trySetByteValue(field);\n      trySetBytesValue(field);\n      trySetBytesRefValue(field);\n      trySetDoubleValue(field);\n      trySetIntValue(field);\n      field.setFloatValue(6f); // ok\n      trySetLongValue(field);\n      trySetReaderValue(field);\n      trySetShortValue(field);\n      trySetStringValue(field);\n      trySetTokenStreamValue(field);\n      \n      assertEquals(6f, field.numericValue().floatValue(), 0.0f);\n    }\n  }\n\n","sourceOld":"  public void testFloatField() throws Exception {\n    Field fields[] = new Field[] {\n        new LegacyFloatField(\"foo\", 5f, Field.Store.NO),\n        new LegacyFloatField(\"foo\", 5f, Field.Store.YES)\n    };\n\n    for (Field field : fields) {\n      trySetBoost(field);\n      trySetByteValue(field);\n      trySetBytesValue(field);\n      trySetBytesRefValue(field);\n      trySetDoubleValue(field);\n      trySetIntValue(field);\n      field.setFloatValue(6f); // ok\n      trySetLongValue(field);\n      trySetReaderValue(field);\n      trySetShortValue(field);\n      trySetStringValue(field);\n      trySetTokenStreamValue(field);\n      \n      assertEquals(6f, field.numericValue().floatValue(), 0.0f);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"dd4aa10c3623b9da92a555b8d04677af8fe86877":["770342641f7b505eaa8dccdc666158bff2419109"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"d6f074e73200c07d54f242d3880a8da5a35ff97b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","3a3635dad24b0681f0088f2ef680456482cdb451"],"1ff4a3d0540c1b0f828f19adccd01d1b33c996a6":["770342641f7b505eaa8dccdc666158bff2419109","a5296efc4b319f5647b606629c093a94b23692c6"],"a5296efc4b319f5647b606629c093a94b23692c6":["770342641f7b505eaa8dccdc666158bff2419109","dd4aa10c3623b9da92a555b8d04677af8fe86877"],"8fd5be977c105554c6a7b68afcdbc511439723ab":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","3a3635dad24b0681f0088f2ef680456482cdb451"],"3a3635dad24b0681f0088f2ef680456482cdb451":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"770342641f7b505eaa8dccdc666158bff2419109":["3a3635dad24b0681f0088f2ef680456482cdb451"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["1ff4a3d0540c1b0f828f19adccd01d1b33c996a6"]},"commit2Childs":{"dd4aa10c3623b9da92a555b8d04677af8fe86877":["a5296efc4b319f5647b606629c093a94b23692c6"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["d6f074e73200c07d54f242d3880a8da5a35ff97b","8fd5be977c105554c6a7b68afcdbc511439723ab","3a3635dad24b0681f0088f2ef680456482cdb451"],"d6f074e73200c07d54f242d3880a8da5a35ff97b":[],"1ff4a3d0540c1b0f828f19adccd01d1b33c996a6":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a5296efc4b319f5647b606629c093a94b23692c6":["1ff4a3d0540c1b0f828f19adccd01d1b33c996a6"],"8fd5be977c105554c6a7b68afcdbc511439723ab":[],"3a3635dad24b0681f0088f2ef680456482cdb451":["d6f074e73200c07d54f242d3880a8da5a35ff97b","8fd5be977c105554c6a7b68afcdbc511439723ab","770342641f7b505eaa8dccdc666158bff2419109"],"770342641f7b505eaa8dccdc666158bff2419109":["dd4aa10c3623b9da92a555b8d04677af8fe86877","1ff4a3d0540c1b0f828f19adccd01d1b33c996a6","a5296efc4b319f5647b606629c093a94b23692c6"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["d6f074e73200c07d54f242d3880a8da5a35ff97b","8fd5be977c105554c6a7b68afcdbc511439723ab","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}