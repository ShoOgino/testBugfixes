{"path":"src/demo/org/apache/lucene/demo/html/Test#parse(File).mjava","commits":[{"id":"6585acee8c9458b9745b49462abd05c2aa4f23d5","date":1012057292,"type":1,"author":"Andrew C. Oliver","isMerge":false,"pathNew":"src/demo/org/apache/lucene/demo/html/Test#parse(File).mjava","pathOld":"src/demo/org/apache/lucene/HTMLParser/Test#parse(File).mjava","sourceNew":"  public static void parse(File file) throws Exception {\n    HTMLParser parser = new HTMLParser(file);\n    System.out.println(\"Title: \" + Entities.encode(parser.getTitle()));\n    System.out.println(\"Summary: \" + Entities.encode(parser.getSummary()));\n    LineNumberReader reader = new LineNumberReader(parser.getReader());\n    for (String l = reader.readLine(); l != null; l = reader.readLine())\n      System.out.println(l);\n  }\n\n","sourceOld":"  public static void parse(File file) throws Exception {\n    HTMLParser parser = new HTMLParser(file);\n    System.out.println(\"Title: \" + Entities.encode(parser.getTitle()));\n    System.out.println(\"Summary: \" + Entities.encode(parser.getSummary()));\n    LineNumberReader reader = new LineNumberReader(parser.getReader());\n    for (String l = reader.readLine(); l != null; l = reader.readLine())\n      System.out.println(l);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b6de170521ead9f8869e3eff5042162b2af6183a","date":1091820376,"type":3,"author":"Daniel Naber","isMerge":false,"pathNew":"src/demo/org/apache/lucene/demo/html/Test#parse(File).mjava","pathOld":"src/demo/org/apache/lucene/demo/html/Test#parse(File).mjava","sourceNew":"  public static void parse(File file) throws IOException, InterruptedException {\n    FileInputStream fis = null;\n    try {\n      fis = new FileInputStream(file);\n      HTMLParser parser = new HTMLParser(fis);\n      System.out.println(\"Title: \" + Entities.encode(parser.getTitle()));\n      System.out.println(\"Summary: \" + Entities.encode(parser.getSummary()));\n      System.out.println(\"Content:\");\n      LineNumberReader reader = new LineNumberReader(parser.getReader());\n      for (String l = reader.readLine(); l != null; l = reader.readLine())\n        System.out.println(l);\n    } finally {\n      if (fis != null) fis.close();\n    }\n  }\n\n","sourceOld":"  public static void parse(File file) throws Exception {\n    HTMLParser parser = new HTMLParser(file);\n    System.out.println(\"Title: \" + Entities.encode(parser.getTitle()));\n    System.out.println(\"Summary: \" + Entities.encode(parser.getSummary()));\n    LineNumberReader reader = new LineNumberReader(parser.getReader());\n    for (String l = reader.readLine(); l != null; l = reader.readLine())\n      System.out.println(l);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/demo/org/apache/lucene/demo/html/Test#parse(File).mjava","pathOld":"src/demo/org/apache/lucene/demo/html/Test#parse(File).mjava","sourceNew":"  public static void parse(File file) throws IOException, InterruptedException {\n    FileInputStream fis = null;\n    try {\n      fis = new FileInputStream(file);\n      HTMLParser parser = new HTMLParser(fis);\n      System.out.println(\"Title: \" + Entities.encode(parser.getTitle()));\n      System.out.println(\"Summary: \" + Entities.encode(parser.getSummary()));\n      System.out.println(\"Content:\");\n      LineNumberReader reader = new LineNumberReader(parser.getReader());\n      for (String l = reader.readLine(); l != null; l = reader.readLine())\n        System.out.println(l);\n    } finally {\n      if (fis != null) fis.close();\n    }\n  }\n\n","sourceOld":"  public static void parse(File file) throws IOException, InterruptedException {\n    FileInputStream fis = null;\n    try {\n      fis = new FileInputStream(file);\n      HTMLParser parser = new HTMLParser(fis);\n      System.out.println(\"Title: \" + Entities.encode(parser.getTitle()));\n      System.out.println(\"Summary: \" + Entities.encode(parser.getSummary()));\n      System.out.println(\"Content:\");\n      LineNumberReader reader = new LineNumberReader(parser.getReader());\n      for (String l = reader.readLine(); l != null; l = reader.readLine())\n        System.out.println(l);\n    } finally {\n      if (fis != null) fis.close();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b6de170521ead9f8869e3eff5042162b2af6183a":["6585acee8c9458b9745b49462abd05c2aa4f23d5"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"6585acee8c9458b9745b49462abd05c2aa4f23d5":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["b6de170521ead9f8869e3eff5042162b2af6183a"]},"commit2Childs":{"b6de170521ead9f8869e3eff5042162b2af6183a":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["6585acee8c9458b9745b49462abd05c2aa4f23d5"],"6585acee8c9458b9745b49462abd05c2aa4f23d5":["b6de170521ead9f8869e3eff5042162b2af6183a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}