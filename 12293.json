{"path":"lucene/core/src/test/org/apache/lucene/store/TestFileSwitchDirectory#testCompoundFileAppendTwice().mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/store/TestFileSwitchDirectory#testCompoundFileAppendTwice().mjava","pathOld":"lucene/src/test/org/apache/lucene/store/TestFileSwitchDirectory#testCompoundFileAppendTwice().mjava","sourceNew":"  // LUCENE-3380 test that delegate compound files correctly.\n  public void testCompoundFileAppendTwice() throws IOException {\n    Directory newDir = newFSSwitchDirectory(Collections.singleton(\"cfs\"));\n    CompoundFileDirectory csw = new CompoundFileDirectory(newDir, \"d.cfs\", newIOContext(random), true);\n    createSequenceFile(newDir, \"d1\", (byte) 0, 15);\n    IndexOutput out = csw.createOutput(\"d.xyz\", newIOContext(random));\n    out.writeInt(0);\n    try {\n      newDir.copy(csw, \"d1\", \"d1\", newIOContext(random));\n      fail(\"file does already exist\");\n    } catch (IOException e) {\n      //\n    }\n    out.close();\n    assertEquals(1, csw.listAll().length);\n    assertEquals(\"d.xyz\", csw.listAll()[0]);\n   \n    csw.close();\n\n    CompoundFileDirectory cfr = new CompoundFileDirectory(newDir, \"d.cfs\", newIOContext(random), false);\n    assertEquals(1, cfr.listAll().length);\n    assertEquals(\"d.xyz\", cfr.listAll()[0]);\n    cfr.close();\n    newDir.close();\n  }\n\n","sourceOld":"  // LUCENE-3380 test that delegate compound files correctly.\n  public void testCompoundFileAppendTwice() throws IOException {\n    Directory newDir = newFSSwitchDirectory(Collections.singleton(\"cfs\"));\n    CompoundFileDirectory csw = new CompoundFileDirectory(newDir, \"d.cfs\", newIOContext(random), true);\n    createSequenceFile(newDir, \"d1\", (byte) 0, 15);\n    IndexOutput out = csw.createOutput(\"d.xyz\", newIOContext(random));\n    out.writeInt(0);\n    try {\n      newDir.copy(csw, \"d1\", \"d1\", newIOContext(random));\n      fail(\"file does already exist\");\n    } catch (IOException e) {\n      //\n    }\n    out.close();\n    assertEquals(1, csw.listAll().length);\n    assertEquals(\"d.xyz\", csw.listAll()[0]);\n   \n    csw.close();\n\n    CompoundFileDirectory cfr = new CompoundFileDirectory(newDir, \"d.cfs\", newIOContext(random), false);\n    assertEquals(1, cfr.listAll().length);\n    assertEquals(\"d.xyz\", cfr.listAll()[0]);\n    cfr.close();\n    newDir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0451c421afa567194fd4312af9389e07003a7941","date":1331317047,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/store/TestFileSwitchDirectory#testCompoundFileAppendTwice().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/store/TestFileSwitchDirectory#testCompoundFileAppendTwice().mjava","sourceNew":"  // LUCENE-3380 test that delegate compound files correctly.\n  public void testCompoundFileAppendTwice() throws IOException {\n    Directory newDir = newFSSwitchDirectory(Collections.singleton(\"cfs\"));\n    CompoundFileDirectory csw = new CompoundFileDirectory(newDir, \"d.cfs\", newIOContext(random), true);\n    createSequenceFile(newDir, \"d1\", (byte) 0, 15);\n    IndexOutput out = csw.createOutput(\"d.xyz\", newIOContext(random));\n    out.writeInt(0);\n    try {\n      newDir.copy(csw, \"d1\", \"d1\", newIOContext(random));\n      fail(\"file does already exist\");\n    } catch (IllegalArgumentException e) {\n      //\n    }\n    out.close();\n    assertEquals(1, csw.listAll().length);\n    assertEquals(\"d.xyz\", csw.listAll()[0]);\n   \n    csw.close();\n\n    CompoundFileDirectory cfr = new CompoundFileDirectory(newDir, \"d.cfs\", newIOContext(random), false);\n    assertEquals(1, cfr.listAll().length);\n    assertEquals(\"d.xyz\", cfr.listAll()[0]);\n    cfr.close();\n    newDir.close();\n  }\n\n","sourceOld":"  // LUCENE-3380 test that delegate compound files correctly.\n  public void testCompoundFileAppendTwice() throws IOException {\n    Directory newDir = newFSSwitchDirectory(Collections.singleton(\"cfs\"));\n    CompoundFileDirectory csw = new CompoundFileDirectory(newDir, \"d.cfs\", newIOContext(random), true);\n    createSequenceFile(newDir, \"d1\", (byte) 0, 15);\n    IndexOutput out = csw.createOutput(\"d.xyz\", newIOContext(random));\n    out.writeInt(0);\n    try {\n      newDir.copy(csw, \"d1\", \"d1\", newIOContext(random));\n      fail(\"file does already exist\");\n    } catch (IOException e) {\n      //\n    }\n    out.close();\n    assertEquals(1, csw.listAll().length);\n    assertEquals(\"d.xyz\", csw.listAll()[0]);\n   \n    csw.close();\n\n    CompoundFileDirectory cfr = new CompoundFileDirectory(newDir, \"d.cfs\", newIOContext(random), false);\n    assertEquals(1, cfr.listAll().length);\n    assertEquals(\"d.xyz\", cfr.listAll()[0]);\n    cfr.close();\n    newDir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"38e3b736c7ca086d61b7dbb841c905ee115490da","date":1331657018,"type":3,"author":"Ryan McKinley","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/store/TestFileSwitchDirectory#testCompoundFileAppendTwice().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/store/TestFileSwitchDirectory#testCompoundFileAppendTwice().mjava","sourceNew":"  // LUCENE-3380 test that delegate compound files correctly.\n  public void testCompoundFileAppendTwice() throws IOException {\n    Directory newDir = newFSSwitchDirectory(Collections.singleton(\"cfs\"));\n    CompoundFileDirectory csw = new CompoundFileDirectory(newDir, \"d.cfs\", newIOContext(random), true);\n    createSequenceFile(newDir, \"d1\", (byte) 0, 15);\n    IndexOutput out = csw.createOutput(\"d.xyz\", newIOContext(random));\n    out.writeInt(0);\n    try {\n      newDir.copy(csw, \"d1\", \"d1\", newIOContext(random));\n      fail(\"file does already exist\");\n    } catch (IllegalArgumentException e) {\n      //\n    }\n    out.close();\n    assertEquals(1, csw.listAll().length);\n    assertEquals(\"d.xyz\", csw.listAll()[0]);\n   \n    csw.close();\n\n    CompoundFileDirectory cfr = new CompoundFileDirectory(newDir, \"d.cfs\", newIOContext(random), false);\n    assertEquals(1, cfr.listAll().length);\n    assertEquals(\"d.xyz\", cfr.listAll()[0]);\n    cfr.close();\n    newDir.close();\n  }\n\n","sourceOld":"  // LUCENE-3380 test that delegate compound files correctly.\n  public void testCompoundFileAppendTwice() throws IOException {\n    Directory newDir = newFSSwitchDirectory(Collections.singleton(\"cfs\"));\n    CompoundFileDirectory csw = new CompoundFileDirectory(newDir, \"d.cfs\", newIOContext(random), true);\n    createSequenceFile(newDir, \"d1\", (byte) 0, 15);\n    IndexOutput out = csw.createOutput(\"d.xyz\", newIOContext(random));\n    out.writeInt(0);\n    try {\n      newDir.copy(csw, \"d1\", \"d1\", newIOContext(random));\n      fail(\"file does already exist\");\n    } catch (IOException e) {\n      //\n    }\n    out.close();\n    assertEquals(1, csw.listAll().length);\n    assertEquals(\"d.xyz\", csw.listAll()[0]);\n   \n    csw.close();\n\n    CompoundFileDirectory cfr = new CompoundFileDirectory(newDir, \"d.cfs\", newIOContext(random), false);\n    assertEquals(1, cfr.listAll().length);\n    assertEquals(\"d.xyz\", cfr.listAll()[0]);\n    cfr.close();\n    newDir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"629c38c4ae4e303d0617e05fbfe508140b32f0a3","date":1334500904,"type":3,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/store/TestFileSwitchDirectory#testCompoundFileAppendTwice().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/store/TestFileSwitchDirectory#testCompoundFileAppendTwice().mjava","sourceNew":"  // LUCENE-3380 test that delegate compound files correctly.\n  public void testCompoundFileAppendTwice() throws IOException {\n    Directory newDir = newFSSwitchDirectory(Collections.singleton(\"cfs\"));\n    CompoundFileDirectory csw = new CompoundFileDirectory(newDir, \"d.cfs\", newIOContext(random()), true);\n    createSequenceFile(newDir, \"d1\", (byte) 0, 15);\n    IndexOutput out = csw.createOutput(\"d.xyz\", newIOContext(random()));\n    out.writeInt(0);\n    try {\n      newDir.copy(csw, \"d1\", \"d1\", newIOContext(random()));\n      fail(\"file does already exist\");\n    } catch (IllegalArgumentException e) {\n      //\n    }\n    out.close();\n    assertEquals(1, csw.listAll().length);\n    assertEquals(\"d.xyz\", csw.listAll()[0]);\n   \n    csw.close();\n\n    CompoundFileDirectory cfr = new CompoundFileDirectory(newDir, \"d.cfs\", newIOContext(random()), false);\n    assertEquals(1, cfr.listAll().length);\n    assertEquals(\"d.xyz\", cfr.listAll()[0]);\n    cfr.close();\n    newDir.close();\n  }\n\n","sourceOld":"  // LUCENE-3380 test that delegate compound files correctly.\n  public void testCompoundFileAppendTwice() throws IOException {\n    Directory newDir = newFSSwitchDirectory(Collections.singleton(\"cfs\"));\n    CompoundFileDirectory csw = new CompoundFileDirectory(newDir, \"d.cfs\", newIOContext(random), true);\n    createSequenceFile(newDir, \"d1\", (byte) 0, 15);\n    IndexOutput out = csw.createOutput(\"d.xyz\", newIOContext(random));\n    out.writeInt(0);\n    try {\n      newDir.copy(csw, \"d1\", \"d1\", newIOContext(random));\n      fail(\"file does already exist\");\n    } catch (IllegalArgumentException e) {\n      //\n    }\n    out.close();\n    assertEquals(1, csw.listAll().length);\n    assertEquals(\"d.xyz\", csw.listAll()[0]);\n   \n    csw.close();\n\n    CompoundFileDirectory cfr = new CompoundFileDirectory(newDir, \"d.cfs\", newIOContext(random), false);\n    assertEquals(1, cfr.listAll().length);\n    assertEquals(\"d.xyz\", cfr.listAll()[0]);\n    cfr.close();\n    newDir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"cd4e13d997cf4fb810398a20a299c2c5a9f6b796","date":1395594336,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/store/TestFileSwitchDirectory#testCompoundFileAppendTwice().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/store/TestFileSwitchDirectory#testCompoundFileAppendTwice().mjava","sourceNew":"  // LUCENE-3380 test that delegate compound files correctly.\n  public void testCompoundFileAppendTwice() throws IOException {\n    Directory newDir = newFSSwitchDirectory(Collections.singleton(\"cfs\"));\n    CompoundFileDirectory csw = new CompoundFileDirectory(newDir, \"d.cfs\", newIOContext(random()), true);\n    createSequenceFile(newDir, \"d1\", (byte) 0, 15);\n    IndexOutput out = csw.createOutput(\"d.xyz\", newIOContext(random()));\n    out.writeInt(0);\n    out.close();\n    assertEquals(1, csw.listAll().length);\n    assertEquals(\"d.xyz\", csw.listAll()[0]);\n   \n    csw.close();\n\n    CompoundFileDirectory cfr = new CompoundFileDirectory(newDir, \"d.cfs\", newIOContext(random()), false);\n    assertEquals(1, cfr.listAll().length);\n    assertEquals(\"d.xyz\", cfr.listAll()[0]);\n    cfr.close();\n    newDir.close();\n  }\n\n","sourceOld":"  // LUCENE-3380 test that delegate compound files correctly.\n  public void testCompoundFileAppendTwice() throws IOException {\n    Directory newDir = newFSSwitchDirectory(Collections.singleton(\"cfs\"));\n    CompoundFileDirectory csw = new CompoundFileDirectory(newDir, \"d.cfs\", newIOContext(random()), true);\n    createSequenceFile(newDir, \"d1\", (byte) 0, 15);\n    IndexOutput out = csw.createOutput(\"d.xyz\", newIOContext(random()));\n    out.writeInt(0);\n    try {\n      newDir.copy(csw, \"d1\", \"d1\", newIOContext(random()));\n      fail(\"file does already exist\");\n    } catch (IllegalArgumentException e) {\n      //\n    }\n    out.close();\n    assertEquals(1, csw.listAll().length);\n    assertEquals(\"d.xyz\", csw.listAll()[0]);\n   \n    csw.close();\n\n    CompoundFileDirectory cfr = new CompoundFileDirectory(newDir, \"d.cfs\", newIOContext(random()), false);\n    assertEquals(1, cfr.listAll().length);\n    assertEquals(\"d.xyz\", cfr.listAll()[0]);\n    cfr.close();\n    newDir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c15a75016387504d70a40cba6e9314b8885307f0","date":1397542349,"type":4,"author":"Robert Muir","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/core/src/test/org/apache/lucene/store/TestFileSwitchDirectory#testCompoundFileAppendTwice().mjava","sourceNew":null,"sourceOld":"  // LUCENE-3380 test that delegate compound files correctly.\n  public void testCompoundFileAppendTwice() throws IOException {\n    Directory newDir = newFSSwitchDirectory(Collections.singleton(\"cfs\"));\n    CompoundFileDirectory csw = new CompoundFileDirectory(newDir, \"d.cfs\", newIOContext(random()), true);\n    createSequenceFile(newDir, \"d1\", (byte) 0, 15);\n    IndexOutput out = csw.createOutput(\"d.xyz\", newIOContext(random()));\n    out.writeInt(0);\n    out.close();\n    assertEquals(1, csw.listAll().length);\n    assertEquals(\"d.xyz\", csw.listAll()[0]);\n   \n    csw.close();\n\n    CompoundFileDirectory cfr = new CompoundFileDirectory(newDir, \"d.cfs\", newIOContext(random()), false);\n    assertEquals(1, cfr.listAll().length);\n    assertEquals(\"d.xyz\", cfr.listAll()[0]);\n    cfr.close();\n    newDir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"38e3b736c7ca086d61b7dbb841c905ee115490da":["3a119bbc8703c10faa329ec201c654b3a35a1e3e","0451c421afa567194fd4312af9389e07003a7941"],"cd4e13d997cf4fb810398a20a299c2c5a9f6b796":["629c38c4ae4e303d0617e05fbfe508140b32f0a3"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"c15a75016387504d70a40cba6e9314b8885307f0":["cd4e13d997cf4fb810398a20a299c2c5a9f6b796"],"629c38c4ae4e303d0617e05fbfe508140b32f0a3":["0451c421afa567194fd4312af9389e07003a7941"],"0451c421afa567194fd4312af9389e07003a7941":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["c15a75016387504d70a40cba6e9314b8885307f0"]},"commit2Childs":{"38e3b736c7ca086d61b7dbb841c905ee115490da":[],"cd4e13d997cf4fb810398a20a299c2c5a9f6b796":["c15a75016387504d70a40cba6e9314b8885307f0"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["38e3b736c7ca086d61b7dbb841c905ee115490da","0451c421afa567194fd4312af9389e07003a7941"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"c15a75016387504d70a40cba6e9314b8885307f0":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"629c38c4ae4e303d0617e05fbfe508140b32f0a3":["cd4e13d997cf4fb810398a20a299c2c5a9f6b796"],"0451c421afa567194fd4312af9389e07003a7941":["38e3b736c7ca086d61b7dbb841c905ee115490da","629c38c4ae4e303d0617e05fbfe508140b32f0a3"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["38e3b736c7ca086d61b7dbb841c905ee115490da","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}