{"path":"solr/core/src/java/org/apache/solr/logging/log4j/Log4jWatcher#registerListener(ListenerConfig).mjava","commits":[{"id":"85a757d77b8686d261b25acf542b0037bf65d8fa","date":1367436352,"type":1,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/logging/log4j/Log4jWatcher#registerListener(ListenerConfig).mjava","pathOld":"solr/core/src/java/org/apache/solr/logging/log4j/Log4jWatcher#registerListener(ListenerConfig,CoreContainer).mjava","sourceNew":"  @Override\n  public void registerListener(ListenerConfig cfg) {\n    if(history!=null) {\n      throw new IllegalStateException(\"History already registered\");\n    }\n    history = new CircularList<LoggingEvent>(cfg.size);\n\n    appender = new EventAppender(this);\n    if(cfg.threshold != null) {\n      appender.setThreshold(Level.toLevel(cfg.threshold));\n    }\n    else {\n      appender.setThreshold(Level.WARN);\n    }\n    Logger log = org.apache.log4j.LogManager.getRootLogger();\n    log.addAppender(appender);\n  }\n\n","sourceOld":"  @Override\n  public void registerListener(ListenerConfig cfg, CoreContainer container) {\n    if(history!=null) {\n      throw new IllegalStateException(\"History already registered\");\n    }\n    history = new CircularList<LoggingEvent>(cfg.size);\n\n    appender = new EventAppender(this);\n    if(cfg.threshold != null) {\n      appender.setThreshold(Level.toLevel(cfg.threshold));\n    }\n    else {\n      appender.setThreshold(Level.WARN);\n    }\n    Logger log = org.apache.log4j.LogManager.getRootLogger();\n    log.addAppender(appender);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"634f330c54fd3f9f491d52036dc3f40b4f4d8934","date":1394635157,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/logging/log4j/Log4jWatcher#registerListener(ListenerConfig).mjava","pathOld":"solr/core/src/java/org/apache/solr/logging/log4j/Log4jWatcher#registerListener(ListenerConfig).mjava","sourceNew":"  @Override\n  public void registerListener(ListenerConfig cfg) {\n    if(history!=null) {\n      throw new IllegalStateException(\"History already registered\");\n    }\n    history = new CircularList<>(cfg.size);\n\n    appender = new EventAppender(this);\n    if(cfg.threshold != null) {\n      appender.setThreshold(Level.toLevel(cfg.threshold));\n    }\n    else {\n      appender.setThreshold(Level.WARN);\n    }\n    Logger log = org.apache.log4j.LogManager.getRootLogger();\n    log.addAppender(appender);\n  }\n\n","sourceOld":"  @Override\n  public void registerListener(ListenerConfig cfg) {\n    if(history!=null) {\n      throw new IllegalStateException(\"History already registered\");\n    }\n    history = new CircularList<LoggingEvent>(cfg.size);\n\n    appender = new EventAppender(this);\n    if(cfg.threshold != null) {\n      appender.setThreshold(Level.toLevel(cfg.threshold));\n    }\n    else {\n      appender.setThreshold(Level.WARN);\n    }\n    Logger log = org.apache.log4j.LogManager.getRootLogger();\n    log.addAppender(appender);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"93baf46bd12096e0de407258b3b32cfaaf58e448","date":1522030569,"type":4,"author":"Erick Erickson","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/core/src/java/org/apache/solr/logging/log4j/Log4jWatcher#registerListener(ListenerConfig).mjava","sourceNew":null,"sourceOld":"  @Override\n  public void registerListener(ListenerConfig cfg) {\n    if(history!=null) {\n      throw new IllegalStateException(\"History already registered\");\n    }\n    history = new CircularList<>(cfg.size);\n\n    appender = new EventAppender(this);\n    if(cfg.threshold != null) {\n      appender.setThreshold(Level.toLevel(cfg.threshold));\n    }\n    else {\n      appender.setThreshold(Level.WARN);\n    }\n    Logger log = org.apache.log4j.LogManager.getRootLogger();\n    log.addAppender(appender);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f67a921f6ec5ab488ce397cf05f95fcd8ce631b6","date":1522059649,"type":4,"author":"Karl Wright","isMerge":true,"pathNew":"/dev/null","pathOld":"solr/core/src/java/org/apache/solr/logging/log4j/Log4jWatcher#registerListener(ListenerConfig).mjava","sourceNew":null,"sourceOld":"  @Override\n  public void registerListener(ListenerConfig cfg) {\n    if(history!=null) {\n      throw new IllegalStateException(\"History already registered\");\n    }\n    history = new CircularList<>(cfg.size);\n\n    appender = new EventAppender(this);\n    if(cfg.threshold != null) {\n      appender.setThreshold(Level.toLevel(cfg.threshold));\n    }\n    else {\n      appender.setThreshold(Level.WARN);\n    }\n    Logger log = org.apache.log4j.LogManager.getRootLogger();\n    log.addAppender(appender);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"634f330c54fd3f9f491d52036dc3f40b4f4d8934":["85a757d77b8686d261b25acf542b0037bf65d8fa"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"93baf46bd12096e0de407258b3b32cfaaf58e448":["634f330c54fd3f9f491d52036dc3f40b4f4d8934"],"85a757d77b8686d261b25acf542b0037bf65d8fa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["f67a921f6ec5ab488ce397cf05f95fcd8ce631b6"],"f67a921f6ec5ab488ce397cf05f95fcd8ce631b6":["634f330c54fd3f9f491d52036dc3f40b4f4d8934","93baf46bd12096e0de407258b3b32cfaaf58e448"]},"commit2Childs":{"634f330c54fd3f9f491d52036dc3f40b4f4d8934":["93baf46bd12096e0de407258b3b32cfaaf58e448","f67a921f6ec5ab488ce397cf05f95fcd8ce631b6"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["85a757d77b8686d261b25acf542b0037bf65d8fa"],"93baf46bd12096e0de407258b3b32cfaaf58e448":["f67a921f6ec5ab488ce397cf05f95fcd8ce631b6"],"85a757d77b8686d261b25acf542b0037bf65d8fa":["634f330c54fd3f9f491d52036dc3f40b4f4d8934"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"f67a921f6ec5ab488ce397cf05f95fcd8ce631b6":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}