{"path":"lucene/src/test/org/apache/lucene/index/TestSegmentReader#checkNorms(AtomicIndexReader).mjava","commits":[{"id":"bd328b3cdb3f944c5c765d81bb246545f85932dd","date":1327857991,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestSegmentReader#checkNorms(AtomicIndexReader).mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestSegmentReader#checkNorms(IndexReader).mjava","sourceNew":"  public static void checkNorms(AtomicIndexReader reader) throws IOException {\n        // test omit norms\n    for (int i=0; i<DocHelper.fields.length; i++) {\n      IndexableField f = DocHelper.fields[i];\n      if (f.fieldType().indexed()) {\n        assertEquals(reader.hasNorms(f.name()), !f.fieldType().omitNorms());\n        assertEquals(reader.hasNorms(f.name()), !DocHelper.noNorms.containsKey(f.name()));\n        if (!reader.hasNorms(f.name())) {\n          // test for norms of null\n          DocValues norms = MultiDocValues.getNormDocValues(reader, f.name());\n          assertNull(norms);\n        }\n      }\n    }\n  }\n\n","sourceOld":"  public static void checkNorms(IndexReader reader) throws IOException {\n        // test omit norms\n    for (int i=0; i<DocHelper.fields.length; i++) {\n      IndexableField f = DocHelper.fields[i];\n      if (f.fieldType().indexed()) {\n        assertEquals(reader.hasNorms(f.name()), !f.fieldType().omitNorms());\n        assertEquals(reader.hasNorms(f.name()), !DocHelper.noNorms.containsKey(f.name()));\n        if (!reader.hasNorms(f.name())) {\n          // test for norms of null\n          DocValues norms = MultiDocValues.getNormDocValues(reader, f.name());\n          assertNull(norms);\n        }\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"da6d5ac19a80d65b1e864251f155d30960353b7e","date":1327881054,"type":5,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestSegmentReader#checkNorms(AtomicReader).mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestSegmentReader#checkNorms(AtomicIndexReader).mjava","sourceNew":"  public static void checkNorms(AtomicReader reader) throws IOException {\n        // test omit norms\n    for (int i=0; i<DocHelper.fields.length; i++) {\n      IndexableField f = DocHelper.fields[i];\n      if (f.fieldType().indexed()) {\n        assertEquals(reader.hasNorms(f.name()), !f.fieldType().omitNorms());\n        assertEquals(reader.hasNorms(f.name()), !DocHelper.noNorms.containsKey(f.name()));\n        if (!reader.hasNorms(f.name())) {\n          // test for norms of null\n          DocValues norms = MultiDocValues.getNormDocValues(reader, f.name());\n          assertNull(norms);\n        }\n      }\n    }\n  }\n\n","sourceOld":"  public static void checkNorms(AtomicIndexReader reader) throws IOException {\n        // test omit norms\n    for (int i=0; i<DocHelper.fields.length; i++) {\n      IndexableField f = DocHelper.fields[i];\n      if (f.fieldType().indexed()) {\n        assertEquals(reader.hasNorms(f.name()), !f.fieldType().omitNorms());\n        assertEquals(reader.hasNorms(f.name()), !DocHelper.noNorms.containsKey(f.name()));\n        if (!reader.hasNorms(f.name())) {\n          // test for norms of null\n          DocValues norms = MultiDocValues.getNormDocValues(reader, f.name());\n          assertNull(norms);\n        }\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"bd328b3cdb3f944c5c765d81bb246545f85932dd":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"da6d5ac19a80d65b1e864251f155d30960353b7e":["bd328b3cdb3f944c5c765d81bb246545f85932dd"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"bd328b3cdb3f944c5c765d81bb246545f85932dd":["da6d5ac19a80d65b1e864251f155d30960353b7e"],"da6d5ac19a80d65b1e864251f155d30960353b7e":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["bd328b3cdb3f944c5c765d81bb246545f85932dd","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["da6d5ac19a80d65b1e864251f155d30960353b7e","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}