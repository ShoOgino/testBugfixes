{"path":"src/test/org/apache/solr/util/DateMathParserTest#testParseMath().mjava","commits":[{"id":"183ba46e9837e95333f35c590df5d02d0071c076","date":1164074105,"type":0,"author":"Chris M. Hostetter","isMerge":false,"pathNew":"src/test/org/apache/solr/util/DateMathParserTest#testParseMath().mjava","pathOld":"/dev/null","sourceNew":"  public void testParseMath() throws Exception {\n\n    DateMathParser p = new DateMathParser(UTC, Locale.US);\n    p.setNow(parser.parse(\"2001-07-04T12:08:56.235\"));\n\n    // No-Op\n    assertMath(\"2001-07-04T12:08:56.235\", p, \"\");\n    \n    // simple round\n    assertMath(\"2001-07-04T12:08:56.000\", p, \"/SECOND\");\n    assertMath(\"2001-07-04T12:08:00.000\", p, \"/MINUTE\");\n    assertMath(\"2001-07-04T12:00:00.000\", p, \"/HOUR\");\n    assertMath(\"2001-07-04T00:00:00.000\", p, \"/DAY\");\n    assertMath(\"2001-07-01T00:00:00.000\", p, \"/MONTH\");\n    assertMath(\"2001-01-01T00:00:00.000\", p, \"/YEAR\");\n\n    // simple addition\n    assertMath(\"2001-07-04T12:08:56.236\", p, \"+1MILLISECOND\");\n    assertMath(\"2001-07-04T12:08:57.235\", p, \"+1SECOND\");\n    assertMath(\"2001-07-04T12:09:56.235\", p, \"+1MINUTE\");\n    assertMath(\"2001-07-04T13:08:56.235\", p, \"+1HOUR\");\n    assertMath(\"2001-07-05T12:08:56.235\", p, \"+1DAY\");\n    assertMath(\"2001-08-04T12:08:56.235\", p, \"+1MONTH\");\n    assertMath(\"2002-07-04T12:08:56.235\", p, \"+1YEAR\");\n\n    // simple subtraction\n    assertMath(\"2001-07-04T12:08:56.234\", p, \"-1MILLISECOND\");\n    assertMath(\"2001-07-04T12:08:55.235\", p, \"-1SECOND\");\n    assertMath(\"2001-07-04T12:07:56.235\", p, \"-1MINUTE\");\n    assertMath(\"2001-07-04T11:08:56.235\", p, \"-1HOUR\");\n    assertMath(\"2001-07-03T12:08:56.235\", p, \"-1DAY\");\n    assertMath(\"2001-06-04T12:08:56.235\", p, \"-1MONTH\");\n    assertMath(\"2000-07-04T12:08:56.235\", p, \"-1YEAR\");\n\n    // simple '+/-'\n    assertMath(\"2001-07-04T12:08:56.235\", p, \"+1MILLISECOND-1MILLISECOND\");\n    assertMath(\"2001-07-04T12:08:56.235\", p, \"+1SECOND-1SECOND\");\n    assertMath(\"2001-07-04T12:08:56.235\", p, \"+1MINUTE-1MINUTE\");\n    assertMath(\"2001-07-04T12:08:56.235\", p, \"+1HOUR-1HOUR\");\n    assertMath(\"2001-07-04T12:08:56.235\", p, \"+1DAY-1DAY\");\n    assertMath(\"2001-07-04T12:08:56.235\", p, \"+1MONTH-1MONTH\");\n    assertMath(\"2001-07-04T12:08:56.235\", p, \"+1YEAR-1YEAR\");\n\n    // simple '-/+'\n    assertMath(\"2001-07-04T12:08:56.235\", p, \"-1MILLISECOND+1MILLISECOND\");\n    assertMath(\"2001-07-04T12:08:56.235\", p, \"-1SECOND+1SECOND\");\n    assertMath(\"2001-07-04T12:08:56.235\", p, \"-1MINUTE+1MINUTE\");\n    assertMath(\"2001-07-04T12:08:56.235\", p, \"-1HOUR+1HOUR\");\n    assertMath(\"2001-07-04T12:08:56.235\", p, \"-1DAY+1DAY\");\n    assertMath(\"2001-07-04T12:08:56.235\", p, \"-1MONTH+1MONTH\");\n    assertMath(\"2001-07-04T12:08:56.235\", p, \"-1YEAR+1YEAR\");\n\n    // more complex stuff\n    assertMath(\"2000-07-04T12:08:56.236\", p, \"+1MILLISECOND-1YEAR\");\n    assertMath(\"2000-07-04T12:08:57.235\", p, \"+1SECOND-1YEAR\");\n    assertMath(\"2000-07-04T12:09:56.235\", p, \"+1MINUTE-1YEAR\");\n    assertMath(\"2000-07-04T13:08:56.235\", p, \"+1HOUR-1YEAR\");\n    assertMath(\"2000-07-05T12:08:56.235\", p, \"+1DAY-1YEAR\");\n    assertMath(\"2000-08-04T12:08:56.235\", p, \"+1MONTH-1YEAR\");\n    assertMath(\"2000-07-04T12:08:56.236\", p, \"-1YEAR+1MILLISECOND\");\n    assertMath(\"2000-07-04T12:08:57.235\", p, \"-1YEAR+1SECOND\");\n    assertMath(\"2000-07-04T12:09:56.235\", p, \"-1YEAR+1MINUTE\");\n    assertMath(\"2000-07-04T13:08:56.235\", p, \"-1YEAR+1HOUR\");\n    assertMath(\"2000-07-05T12:08:56.235\", p, \"-1YEAR+1DAY\");\n    assertMath(\"2000-08-04T12:08:56.235\", p, \"-1YEAR+1MONTH\");\n    assertMath(\"2000-07-01T00:00:00.000\", p, \"-1YEAR+1MILLISECOND/MONTH\");\n    assertMath(\"2000-07-04T00:00:00.000\", p, \"-1YEAR+1SECOND/DAY\");\n    assertMath(\"2000-07-04T00:00:00.000\", p, \"-1YEAR+1MINUTE/DAY\");\n    assertMath(\"2000-07-04T13:00:00.000\", p, \"-1YEAR+1HOUR/HOUR\");\n    assertMath(\"2000-07-05T12:08:56.000\", p, \"-1YEAR+1DAY/SECOND\");\n    assertMath(\"2000-08-04T12:08:56.000\", p, \"-1YEAR+1MONTH/SECOND\");\n\n    // \"tricky\" cases\n    p.setNow(parser.parse(\"2006-01-31T17:09:59.999\"));\n    assertMath(\"2006-02-28T17:09:59.999\", p, \"+1MONTH\");\n    assertMath(\"2008-02-29T17:09:59.999\", p, \"+25MONTH\");\n    assertMath(\"2006-02-01T00:00:00.000\", p, \"/MONTH+35DAYS/MONTH\");\n    assertMath(\"2006-01-31T17:10:00.000\", p, \"+3MILLIS/MINUTE\");\n\n    \n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["ba0bb1c61dbf71a82da9a3ea8cda3d481f703d29","ba0bb1c61dbf71a82da9a3ea8cda3d481f703d29","ba0bb1c61dbf71a82da9a3ea8cda3d481f703d29"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"ad94625fb8d088209f46650c8097196fec67f00c","date":1453508319,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/src/test/org/apache/solr/util/DateMathParserTest#testParseMath().mjava","pathOld":"src/test/org/apache/solr/util/DateMathParserTest#testParseMath().mjava","sourceNew":"  public void testParseMath() throws Exception {\n\n    DateMathParser p = new DateMathParser(UTC, Locale.US);\n    p.setNow(parser.parse(\"2001-07-04T12:08:56.235\"));\n\n    // No-Op\n    assertMath(\"2001-07-04T12:08:56.235\", p, \"\");\n    \n    // simple round\n    assertMath(\"2001-07-04T12:08:56.000\", p, \"/SECOND\");\n    assertMath(\"2001-07-04T12:08:00.000\", p, \"/MINUTE\");\n    assertMath(\"2001-07-04T12:00:00.000\", p, \"/HOUR\");\n    assertMath(\"2001-07-04T00:00:00.000\", p, \"/DAY\");\n    assertMath(\"2001-07-01T00:00:00.000\", p, \"/MONTH\");\n    assertMath(\"2001-01-01T00:00:00.000\", p, \"/YEAR\");\n\n    // simple addition\n    assertMath(\"2001-07-04T12:08:56.236\", p, \"+1MILLISECOND\");\n    assertMath(\"2001-07-04T12:08:57.235\", p, \"+1SECOND\");\n    assertMath(\"2001-07-04T12:09:56.235\", p, \"+1MINUTE\");\n    assertMath(\"2001-07-04T13:08:56.235\", p, \"+1HOUR\");\n    assertMath(\"2001-07-05T12:08:56.235\", p, \"+1DAY\");\n    assertMath(\"2001-08-04T12:08:56.235\", p, \"+1MONTH\");\n    assertMath(\"2002-07-04T12:08:56.235\", p, \"+1YEAR\");\n\n    // simple subtraction\n    assertMath(\"2001-07-04T12:08:56.234\", p, \"-1MILLISECOND\");\n    assertMath(\"2001-07-04T12:08:55.235\", p, \"-1SECOND\");\n    assertMath(\"2001-07-04T12:07:56.235\", p, \"-1MINUTE\");\n    assertMath(\"2001-07-04T11:08:56.235\", p, \"-1HOUR\");\n    assertMath(\"2001-07-03T12:08:56.235\", p, \"-1DAY\");\n    assertMath(\"2001-06-04T12:08:56.235\", p, \"-1MONTH\");\n    assertMath(\"2000-07-04T12:08:56.235\", p, \"-1YEAR\");\n\n    // simple '+/-'\n    assertMath(\"2001-07-04T12:08:56.235\", p, \"+1MILLISECOND-1MILLISECOND\");\n    assertMath(\"2001-07-04T12:08:56.235\", p, \"+1SECOND-1SECOND\");\n    assertMath(\"2001-07-04T12:08:56.235\", p, \"+1MINUTE-1MINUTE\");\n    assertMath(\"2001-07-04T12:08:56.235\", p, \"+1HOUR-1HOUR\");\n    assertMath(\"2001-07-04T12:08:56.235\", p, \"+1DAY-1DAY\");\n    assertMath(\"2001-07-04T12:08:56.235\", p, \"+1MONTH-1MONTH\");\n    assertMath(\"2001-07-04T12:08:56.235\", p, \"+1YEAR-1YEAR\");\n\n    // simple '-/+'\n    assertMath(\"2001-07-04T12:08:56.235\", p, \"-1MILLISECOND+1MILLISECOND\");\n    assertMath(\"2001-07-04T12:08:56.235\", p, \"-1SECOND+1SECOND\");\n    assertMath(\"2001-07-04T12:08:56.235\", p, \"-1MINUTE+1MINUTE\");\n    assertMath(\"2001-07-04T12:08:56.235\", p, \"-1HOUR+1HOUR\");\n    assertMath(\"2001-07-04T12:08:56.235\", p, \"-1DAY+1DAY\");\n    assertMath(\"2001-07-04T12:08:56.235\", p, \"-1MONTH+1MONTH\");\n    assertMath(\"2001-07-04T12:08:56.235\", p, \"-1YEAR+1YEAR\");\n\n    // more complex stuff\n    assertMath(\"2000-07-04T12:08:56.236\", p, \"+1MILLISECOND-1YEAR\");\n    assertMath(\"2000-07-04T12:08:57.235\", p, \"+1SECOND-1YEAR\");\n    assertMath(\"2000-07-04T12:09:56.235\", p, \"+1MINUTE-1YEAR\");\n    assertMath(\"2000-07-04T13:08:56.235\", p, \"+1HOUR-1YEAR\");\n    assertMath(\"2000-07-05T12:08:56.235\", p, \"+1DAY-1YEAR\");\n    assertMath(\"2000-08-04T12:08:56.235\", p, \"+1MONTH-1YEAR\");\n    assertMath(\"2000-07-04T12:08:56.236\", p, \"-1YEAR+1MILLISECOND\");\n    assertMath(\"2000-07-04T12:08:57.235\", p, \"-1YEAR+1SECOND\");\n    assertMath(\"2000-07-04T12:09:56.235\", p, \"-1YEAR+1MINUTE\");\n    assertMath(\"2000-07-04T13:08:56.235\", p, \"-1YEAR+1HOUR\");\n    assertMath(\"2000-07-05T12:08:56.235\", p, \"-1YEAR+1DAY\");\n    assertMath(\"2000-08-04T12:08:56.235\", p, \"-1YEAR+1MONTH\");\n    assertMath(\"2000-07-01T00:00:00.000\", p, \"-1YEAR+1MILLISECOND/MONTH\");\n    assertMath(\"2000-07-04T00:00:00.000\", p, \"-1YEAR+1SECOND/DAY\");\n    assertMath(\"2000-07-04T00:00:00.000\", p, \"-1YEAR+1MINUTE/DAY\");\n    assertMath(\"2000-07-04T13:00:00.000\", p, \"-1YEAR+1HOUR/HOUR\");\n    assertMath(\"2000-07-05T12:08:56.000\", p, \"-1YEAR+1DAY/SECOND\");\n    assertMath(\"2000-08-04T12:08:56.000\", p, \"-1YEAR+1MONTH/SECOND\");\n\n    // \"tricky\" cases\n    p.setNow(parser.parse(\"2006-01-31T17:09:59.999\"));\n    assertMath(\"2006-02-28T17:09:59.999\", p, \"+1MONTH\");\n    assertMath(\"2008-02-29T17:09:59.999\", p, \"+25MONTH\");\n    assertMath(\"2006-02-01T00:00:00.000\", p, \"/MONTH+35DAYS/MONTH\");\n    assertMath(\"2006-01-31T17:10:00.000\", p, \"+3MILLIS/MINUTE\");\n\n    \n  }\n\n","sourceOld":"  public void testParseMath() throws Exception {\n\n    DateMathParser p = new DateMathParser(UTC, Locale.US);\n    p.setNow(parser.parse(\"2001-07-04T12:08:56.235\"));\n\n    // No-Op\n    assertMath(\"2001-07-04T12:08:56.235\", p, \"\");\n    \n    // simple round\n    assertMath(\"2001-07-04T12:08:56.000\", p, \"/SECOND\");\n    assertMath(\"2001-07-04T12:08:00.000\", p, \"/MINUTE\");\n    assertMath(\"2001-07-04T12:00:00.000\", p, \"/HOUR\");\n    assertMath(\"2001-07-04T00:00:00.000\", p, \"/DAY\");\n    assertMath(\"2001-07-01T00:00:00.000\", p, \"/MONTH\");\n    assertMath(\"2001-01-01T00:00:00.000\", p, \"/YEAR\");\n\n    // simple addition\n    assertMath(\"2001-07-04T12:08:56.236\", p, \"+1MILLISECOND\");\n    assertMath(\"2001-07-04T12:08:57.235\", p, \"+1SECOND\");\n    assertMath(\"2001-07-04T12:09:56.235\", p, \"+1MINUTE\");\n    assertMath(\"2001-07-04T13:08:56.235\", p, \"+1HOUR\");\n    assertMath(\"2001-07-05T12:08:56.235\", p, \"+1DAY\");\n    assertMath(\"2001-08-04T12:08:56.235\", p, \"+1MONTH\");\n    assertMath(\"2002-07-04T12:08:56.235\", p, \"+1YEAR\");\n\n    // simple subtraction\n    assertMath(\"2001-07-04T12:08:56.234\", p, \"-1MILLISECOND\");\n    assertMath(\"2001-07-04T12:08:55.235\", p, \"-1SECOND\");\n    assertMath(\"2001-07-04T12:07:56.235\", p, \"-1MINUTE\");\n    assertMath(\"2001-07-04T11:08:56.235\", p, \"-1HOUR\");\n    assertMath(\"2001-07-03T12:08:56.235\", p, \"-1DAY\");\n    assertMath(\"2001-06-04T12:08:56.235\", p, \"-1MONTH\");\n    assertMath(\"2000-07-04T12:08:56.235\", p, \"-1YEAR\");\n\n    // simple '+/-'\n    assertMath(\"2001-07-04T12:08:56.235\", p, \"+1MILLISECOND-1MILLISECOND\");\n    assertMath(\"2001-07-04T12:08:56.235\", p, \"+1SECOND-1SECOND\");\n    assertMath(\"2001-07-04T12:08:56.235\", p, \"+1MINUTE-1MINUTE\");\n    assertMath(\"2001-07-04T12:08:56.235\", p, \"+1HOUR-1HOUR\");\n    assertMath(\"2001-07-04T12:08:56.235\", p, \"+1DAY-1DAY\");\n    assertMath(\"2001-07-04T12:08:56.235\", p, \"+1MONTH-1MONTH\");\n    assertMath(\"2001-07-04T12:08:56.235\", p, \"+1YEAR-1YEAR\");\n\n    // simple '-/+'\n    assertMath(\"2001-07-04T12:08:56.235\", p, \"-1MILLISECOND+1MILLISECOND\");\n    assertMath(\"2001-07-04T12:08:56.235\", p, \"-1SECOND+1SECOND\");\n    assertMath(\"2001-07-04T12:08:56.235\", p, \"-1MINUTE+1MINUTE\");\n    assertMath(\"2001-07-04T12:08:56.235\", p, \"-1HOUR+1HOUR\");\n    assertMath(\"2001-07-04T12:08:56.235\", p, \"-1DAY+1DAY\");\n    assertMath(\"2001-07-04T12:08:56.235\", p, \"-1MONTH+1MONTH\");\n    assertMath(\"2001-07-04T12:08:56.235\", p, \"-1YEAR+1YEAR\");\n\n    // more complex stuff\n    assertMath(\"2000-07-04T12:08:56.236\", p, \"+1MILLISECOND-1YEAR\");\n    assertMath(\"2000-07-04T12:08:57.235\", p, \"+1SECOND-1YEAR\");\n    assertMath(\"2000-07-04T12:09:56.235\", p, \"+1MINUTE-1YEAR\");\n    assertMath(\"2000-07-04T13:08:56.235\", p, \"+1HOUR-1YEAR\");\n    assertMath(\"2000-07-05T12:08:56.235\", p, \"+1DAY-1YEAR\");\n    assertMath(\"2000-08-04T12:08:56.235\", p, \"+1MONTH-1YEAR\");\n    assertMath(\"2000-07-04T12:08:56.236\", p, \"-1YEAR+1MILLISECOND\");\n    assertMath(\"2000-07-04T12:08:57.235\", p, \"-1YEAR+1SECOND\");\n    assertMath(\"2000-07-04T12:09:56.235\", p, \"-1YEAR+1MINUTE\");\n    assertMath(\"2000-07-04T13:08:56.235\", p, \"-1YEAR+1HOUR\");\n    assertMath(\"2000-07-05T12:08:56.235\", p, \"-1YEAR+1DAY\");\n    assertMath(\"2000-08-04T12:08:56.235\", p, \"-1YEAR+1MONTH\");\n    assertMath(\"2000-07-01T00:00:00.000\", p, \"-1YEAR+1MILLISECOND/MONTH\");\n    assertMath(\"2000-07-04T00:00:00.000\", p, \"-1YEAR+1SECOND/DAY\");\n    assertMath(\"2000-07-04T00:00:00.000\", p, \"-1YEAR+1MINUTE/DAY\");\n    assertMath(\"2000-07-04T13:00:00.000\", p, \"-1YEAR+1HOUR/HOUR\");\n    assertMath(\"2000-07-05T12:08:56.000\", p, \"-1YEAR+1DAY/SECOND\");\n    assertMath(\"2000-08-04T12:08:56.000\", p, \"-1YEAR+1MONTH/SECOND\");\n\n    // \"tricky\" cases\n    p.setNow(parser.parse(\"2006-01-31T17:09:59.999\"));\n    assertMath(\"2006-02-28T17:09:59.999\", p, \"+1MONTH\");\n    assertMath(\"2008-02-29T17:09:59.999\", p, \"+25MONTH\");\n    assertMath(\"2006-02-01T00:00:00.000\", p, \"/MONTH+35DAYS/MONTH\");\n    assertMath(\"2006-01-31T17:10:00.000\", p, \"+3MILLIS/MINUTE\");\n\n    \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"183ba46e9837e95333f35c590df5d02d0071c076":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"ad94625fb8d088209f46650c8097196fec67f00c":["183ba46e9837e95333f35c590df5d02d0071c076"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"183ba46e9837e95333f35c590df5d02d0071c076":["ad94625fb8d088209f46650c8097196fec67f00c"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["183ba46e9837e95333f35c590df5d02d0071c076"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"ad94625fb8d088209f46650c8097196fec67f00c":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["ad94625fb8d088209f46650c8097196fec67f00c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b","a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}