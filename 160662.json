{"path":"src/java/org/apache/lucene/search/TopFieldCollector#populateResults(ScoreDoc[],int).mjava","commits":[{"id":"64714133cf5ec732e3bbceee63351bb9af0117dc","date":1239647636,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/search/TopFieldCollector#populateResults(ScoreDoc[],int).mjava","pathOld":"/dev/null","sourceNew":"  protected void populateResults(ScoreDoc[] results, int howMany) {\n    FieldValueHitQueue queue = (FieldValueHitQueue) pq;\n    if (fillFields) {\n      for (int i = queue.size() - 1; i >= 0; i--) {\n        results[i] = queue.fillFields((FieldValueHitQueue.Entry) queue.pop());\n      }\n    } else {\n      for (int i = queue.size() - 1; i >= 0; i--) {\n        Entry entry = (FieldValueHitQueue.Entry) queue.pop();\n        results[i] = new FieldDoc(entry.docID, entry.score);\n      }\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["1c8ed50c3dc8a2400a303593e8ce6616be9d8429"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"17563f8c3ca7e14d56ce4dcbb3fe9b042ba613cc","date":1241865401,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/search/TopFieldCollector#populateResults(ScoreDoc[],int).mjava","pathOld":"src/java/org/apache/lucene/search/TopFieldCollector#populateResults(ScoreDoc[],int).mjava","sourceNew":"  protected void populateResults(ScoreDoc[] results, int howMany) {\n    if (fillFields) {\n      // avoid casting if unnecessary.\n      FieldValueHitQueue queue = (FieldValueHitQueue) pq;\n      for (int i = howMany - 1; i >= 0; i--) {\n        results[i] = queue.fillFields((Entry) queue.pop());\n      }\n    } else {\n      for (int i = howMany - 1; i >= 0; i--) {\n        Entry entry = (Entry) pq.pop();\n        results[i] = new FieldDoc(entry.docID, entry.score);\n      }\n    }\n  }\n\n","sourceOld":"  protected void populateResults(ScoreDoc[] results, int howMany) {\n    FieldValueHitQueue queue = (FieldValueHitQueue) pq;\n    if (fillFields) {\n      for (int i = queue.size() - 1; i >= 0; i--) {\n        results[i] = queue.fillFields((FieldValueHitQueue.Entry) queue.pop());\n      }\n    } else {\n      for (int i = queue.size() - 1; i >= 0; i--) {\n        Entry entry = (FieldValueHitQueue.Entry) queue.pop();\n        results[i] = new FieldDoc(entry.docID, entry.score);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"20ff1ff2aa6f91149e9cd75f65a56fbdda5266ce","date":1255993146,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/java/org/apache/lucene/search/TopFieldCollector#populateResults(ScoreDoc[],int).mjava","pathOld":"src/java/org/apache/lucene/search/TopFieldCollector#populateResults(ScoreDoc[],int).mjava","sourceNew":"  protected void populateResults(ScoreDoc[] results, int howMany) {\n    if (fillFields) {\n      // avoid casting if unnecessary.\n      FieldValueHitQueue queue = (FieldValueHitQueue) pq;\n      for (int i = howMany - 1; i >= 0; i--) {\n        results[i] = queue.fillFields((Entry) queue.pop());\n      }\n    } else {\n      for (int i = howMany - 1; i >= 0; i--) {\n        Entry entry = pq.pop();\n        results[i] = new FieldDoc(entry.docID, entry.score);\n      }\n    }\n  }\n\n","sourceOld":"  protected void populateResults(ScoreDoc[] results, int howMany) {\n    if (fillFields) {\n      // avoid casting if unnecessary.\n      FieldValueHitQueue queue = (FieldValueHitQueue) pq;\n      for (int i = howMany - 1; i >= 0; i--) {\n        results[i] = queue.fillFields((Entry) queue.pop());\n      }\n    } else {\n      for (int i = howMany - 1; i >= 0; i--) {\n        Entry entry = (Entry) pq.pop();\n        results[i] = new FieldDoc(entry.docID, entry.score);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"20645c714ca2a7b7707c2707d58ee9fa384c7362","date":1256074979,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/java/org/apache/lucene/search/TopFieldCollector#populateResults(ScoreDoc[],int).mjava","pathOld":"src/java/org/apache/lucene/search/TopFieldCollector#populateResults(ScoreDoc[],int).mjava","sourceNew":"  protected void populateResults(ScoreDoc[] results, int howMany) {\n    if (fillFields) {\n      // avoid casting if unnecessary.\n      FieldValueHitQueue queue = (FieldValueHitQueue) pq;\n      for (int i = howMany - 1; i >= 0; i--) {\n        results[i] = queue.fillFields(queue.pop());\n      }\n    } else {\n      for (int i = howMany - 1; i >= 0; i--) {\n        Entry entry = pq.pop();\n        results[i] = new FieldDoc(entry.docID, entry.score);\n      }\n    }\n  }\n\n","sourceOld":"  protected void populateResults(ScoreDoc[] results, int howMany) {\n    if (fillFields) {\n      // avoid casting if unnecessary.\n      FieldValueHitQueue queue = (FieldValueHitQueue) pq;\n      for (int i = howMany - 1; i >= 0; i--) {\n        results[i] = queue.fillFields((Entry) queue.pop());\n      }\n    } else {\n      for (int i = howMany - 1; i >= 0; i--) {\n        Entry entry = pq.pop();\n        results[i] = new FieldDoc(entry.docID, entry.score);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"8a9e385641d717e641408d8fbbc62be8fc766357","date":1256746606,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/java/org/apache/lucene/search/TopFieldCollector#populateResults(ScoreDoc[],int).mjava","pathOld":"src/java/org/apache/lucene/search/TopFieldCollector#populateResults(ScoreDoc[],int).mjava","sourceNew":"  @Override\n  protected void populateResults(ScoreDoc[] results, int howMany) {\n    if (fillFields) {\n      // avoid casting if unnecessary.\n      FieldValueHitQueue queue = (FieldValueHitQueue) pq;\n      for (int i = howMany - 1; i >= 0; i--) {\n        results[i] = queue.fillFields(queue.pop());\n      }\n    } else {\n      for (int i = howMany - 1; i >= 0; i--) {\n        Entry entry = pq.pop();\n        results[i] = new FieldDoc(entry.docID, entry.score);\n      }\n    }\n  }\n\n","sourceOld":"  protected void populateResults(ScoreDoc[] results, int howMany) {\n    if (fillFields) {\n      // avoid casting if unnecessary.\n      FieldValueHitQueue queue = (FieldValueHitQueue) pq;\n      for (int i = howMany - 1; i >= 0; i--) {\n        results[i] = queue.fillFields(queue.pop());\n      }\n    } else {\n      for (int i = howMany - 1; i >= 0; i--) {\n        Entry entry = pq.pop();\n        results[i] = new FieldDoc(entry.docID, entry.score);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"1c8ed50c3dc8a2400a303593e8ce6616be9d8429","date":1257976685,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/java/org/apache/lucene/search/TopFieldCollector#populateResults(ScoreDoc[],int).mjava","pathOld":"src/java/org/apache/lucene/search/TopFieldCollector#populateResults(ScoreDoc[],int).mjava","sourceNew":"  @Override\n  protected void populateResults(ScoreDoc[] results, int howMany) {\n    if (fillFields) {\n      // avoid casting if unnecessary.\n      FieldValueHitQueue queue = (FieldValueHitQueue) pq;\n      for (int i = howMany - 1; i >= 0; i--) {\n        results[i] = queue.fillFields(queue.pop());\n      }\n    } else {\n      for (int i = howMany - 1; i >= 0; i--) {\n        Entry entry = pq.pop();\n        results[i] = new FieldDoc(entry.doc, entry.score);\n      }\n    }\n  }\n\n","sourceOld":"  @Override\n  protected void populateResults(ScoreDoc[] results, int howMany) {\n    if (fillFields) {\n      // avoid casting if unnecessary.\n      FieldValueHitQueue queue = (FieldValueHitQueue) pq;\n      for (int i = howMany - 1; i >= 0; i--) {\n        results[i] = queue.fillFields(queue.pop());\n      }\n    } else {\n      for (int i = howMany - 1; i >= 0; i--) {\n        Entry entry = pq.pop();\n        results[i] = new FieldDoc(entry.docID, entry.score);\n      }\n    }\n  }\n\n","bugFix":["64714133cf5ec732e3bbceee63351bb9af0117dc"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/search/TopFieldCollector#populateResults(ScoreDoc[],int).mjava","pathOld":"src/java/org/apache/lucene/search/TopFieldCollector#populateResults(ScoreDoc[],int).mjava","sourceNew":"  @Override\n  protected void populateResults(ScoreDoc[] results, int howMany) {\n    if (fillFields) {\n      // avoid casting if unnecessary.\n      FieldValueHitQueue queue = (FieldValueHitQueue) pq;\n      for (int i = howMany - 1; i >= 0; i--) {\n        results[i] = queue.fillFields(queue.pop());\n      }\n    } else {\n      for (int i = howMany - 1; i >= 0; i--) {\n        Entry entry = pq.pop();\n        results[i] = new FieldDoc(entry.doc, entry.score);\n      }\n    }\n  }\n\n","sourceOld":"  @Override\n  protected void populateResults(ScoreDoc[] results, int howMany) {\n    if (fillFields) {\n      // avoid casting if unnecessary.\n      FieldValueHitQueue queue = (FieldValueHitQueue) pq;\n      for (int i = howMany - 1; i >= 0; i--) {\n        results[i] = queue.fillFields(queue.pop());\n      }\n    } else {\n      for (int i = howMany - 1; i >= 0; i--) {\n        Entry entry = pq.pop();\n        results[i] = new FieldDoc(entry.doc, entry.score);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"17563f8c3ca7e14d56ce4dcbb3fe9b042ba613cc":["64714133cf5ec732e3bbceee63351bb9af0117dc"],"64714133cf5ec732e3bbceee63351bb9af0117dc":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"1c8ed50c3dc8a2400a303593e8ce6616be9d8429":["8a9e385641d717e641408d8fbbc62be8fc766357"],"8a9e385641d717e641408d8fbbc62be8fc766357":["20645c714ca2a7b7707c2707d58ee9fa384c7362"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"20645c714ca2a7b7707c2707d58ee9fa384c7362":["20ff1ff2aa6f91149e9cd75f65a56fbdda5266ce"],"20ff1ff2aa6f91149e9cd75f65a56fbdda5266ce":["17563f8c3ca7e14d56ce4dcbb3fe9b042ba613cc"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["1c8ed50c3dc8a2400a303593e8ce6616be9d8429"]},"commit2Childs":{"17563f8c3ca7e14d56ce4dcbb3fe9b042ba613cc":["20ff1ff2aa6f91149e9cd75f65a56fbdda5266ce"],"64714133cf5ec732e3bbceee63351bb9af0117dc":["17563f8c3ca7e14d56ce4dcbb3fe9b042ba613cc"],"1c8ed50c3dc8a2400a303593e8ce6616be9d8429":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["64714133cf5ec732e3bbceee63351bb9af0117dc"],"8a9e385641d717e641408d8fbbc62be8fc766357":["1c8ed50c3dc8a2400a303593e8ce6616be9d8429"],"20645c714ca2a7b7707c2707d58ee9fa384c7362":["8a9e385641d717e641408d8fbbc62be8fc766357"],"20ff1ff2aa6f91149e9cd75f65a56fbdda5266ce":["20645c714ca2a7b7707c2707d58ee9fa384c7362"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}