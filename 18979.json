{"path":"lucene/core/src/java/org/apache/lucene/index/DocumentsWriterPerThreadPool#initialize(DocumentsWriter,FieldNumberBiMap,IndexWriterConfig).mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/DocumentsWriterPerThreadPool#initialize(DocumentsWriter,FieldNumberBiMap,IndexWriterConfig).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/DocumentsWriterPerThreadPool#initialize(DocumentsWriter,FieldNumberBiMap,IndexWriterConfig).mjava","sourceNew":"  public void initialize(DocumentsWriter documentsWriter, FieldNumberBiMap globalFieldMap, IndexWriterConfig config) {\n    this.documentsWriter.set(documentsWriter); // thread pool is bound to DW\n    this.globalFieldMap = globalFieldMap;\n    for (int i = 0; i < perThreads.length; i++) {\n      final FieldInfos infos = new FieldInfos(globalFieldMap);\n      perThreads[i] = new ThreadState(new DocumentsWriterPerThread(documentsWriter.directory, documentsWriter, infos, documentsWriter.chain));\n    }\n  }\n\n","sourceOld":"  public void initialize(DocumentsWriter documentsWriter, FieldNumberBiMap globalFieldMap, IndexWriterConfig config) {\n    this.documentsWriter.set(documentsWriter); // thread pool is bound to DW\n    this.globalFieldMap = globalFieldMap;\n    for (int i = 0; i < perThreads.length; i++) {\n      final FieldInfos infos = new FieldInfos(globalFieldMap);\n      perThreads[i] = new ThreadState(new DocumentsWriterPerThread(documentsWriter.directory, documentsWriter, infos, documentsWriter.chain));\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f64b5c281a42c5a4634b39a4fcb8f21a0cba1600","date":1329061481,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/DocumentsWriterPerThreadPool#initialize(DocumentsWriter,FieldNumberBiMap,IndexWriterConfig).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/DocumentsWriterPerThreadPool#initialize(DocumentsWriter,FieldNumberBiMap,IndexWriterConfig).mjava","sourceNew":"  public void initialize(DocumentsWriter documentsWriter, FieldNumberBiMap globalFieldMap, IndexWriterConfig config) {\n    this.documentsWriter.set(documentsWriter); // thread pool is bound to DW\n    this.globalFieldMap.set(globalFieldMap);\n    for (int i = 0; i < threadStates.length; i++) {\n      final FieldInfos infos = new FieldInfos(globalFieldMap);\n      threadStates[i] = new ThreadState(new DocumentsWriterPerThread(documentsWriter.directory, documentsWriter, infos, documentsWriter.chain));\n    }\n  }\n\n","sourceOld":"  public void initialize(DocumentsWriter documentsWriter, FieldNumberBiMap globalFieldMap, IndexWriterConfig config) {\n    this.documentsWriter.set(documentsWriter); // thread pool is bound to DW\n    this.globalFieldMap = globalFieldMap;\n    for (int i = 0; i < perThreads.length; i++) {\n      final FieldInfos infos = new FieldInfos(globalFieldMap);\n      perThreads[i] = new ThreadState(new DocumentsWriterPerThread(documentsWriter.directory, documentsWriter, infos, documentsWriter.chain));\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8b074647cedb968eae4bb8f4e7ec83bdd5a1cc7d","date":1335212037,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/DocumentsWriterPerThreadPool#initialize(DocumentsWriter,FieldNumberBiMap,IndexWriterConfig).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/DocumentsWriterPerThreadPool#initialize(DocumentsWriter,FieldNumberBiMap,IndexWriterConfig).mjava","sourceNew":"  void initialize(DocumentsWriter documentsWriter, FieldNumberBiMap globalFieldMap, IndexWriterConfig config) {\n    this.documentsWriter.set(documentsWriter); // thread pool is bound to DW\n    this.globalFieldMap.set(globalFieldMap);\n    for (int i = 0; i < threadStates.length; i++) {\n      final FieldInfos infos = new FieldInfos(globalFieldMap);\n      threadStates[i] = new ThreadState(new DocumentsWriterPerThread(documentsWriter.directory, documentsWriter, infos, documentsWriter.chain));\n    }\n  }\n\n","sourceOld":"  public void initialize(DocumentsWriter documentsWriter, FieldNumberBiMap globalFieldMap, IndexWriterConfig config) {\n    this.documentsWriter.set(documentsWriter); // thread pool is bound to DW\n    this.globalFieldMap.set(globalFieldMap);\n    for (int i = 0; i < threadStates.length; i++) {\n      final FieldInfos infos = new FieldInfos(globalFieldMap);\n      threadStates[i] = new ThreadState(new DocumentsWriterPerThread(documentsWriter.directory, documentsWriter, infos, documentsWriter.chain));\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f6eee1e5a8555d83dd8f2f2e3c0a4ccec8e7cf9b","date":1337136355,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/DocumentsWriterPerThreadPool#initialize(DocumentsWriter,FieldNumberBiMap,IndexWriterConfig).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/DocumentsWriterPerThreadPool#initialize(DocumentsWriter,FieldNumberBiMap,IndexWriterConfig).mjava","sourceNew":"  void initialize(DocumentsWriter documentsWriter, FieldNumberBiMap globalFieldMap, IndexWriterConfig config) {\n    this.documentsWriter.set(documentsWriter); // thread pool is bound to DW\n    this.globalFieldMap.set(globalFieldMap);\n    for (int i = 0; i < threadStates.length; i++) {\n      final MutableFieldInfos infos = new MutableFieldInfos(globalFieldMap);\n      threadStates[i] = new ThreadState(new DocumentsWriterPerThread(documentsWriter.directory, documentsWriter, infos, documentsWriter.chain));\n    }\n  }\n\n","sourceOld":"  void initialize(DocumentsWriter documentsWriter, FieldNumberBiMap globalFieldMap, IndexWriterConfig config) {\n    this.documentsWriter.set(documentsWriter); // thread pool is bound to DW\n    this.globalFieldMap.set(globalFieldMap);\n    for (int i = 0; i < threadStates.length; i++) {\n      final FieldInfos infos = new FieldInfos(globalFieldMap);\n      threadStates[i] = new ThreadState(new DocumentsWriterPerThread(documentsWriter.directory, documentsWriter, infos, documentsWriter.chain));\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a851824c09818632c94eba41e60ef5e72e323c8e","date":1337355760,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/DocumentsWriterPerThreadPool#initialize(DocumentsWriter,FieldNumberBiMap,IndexWriterConfig).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/DocumentsWriterPerThreadPool#initialize(DocumentsWriter,FieldNumberBiMap,IndexWriterConfig).mjava","sourceNew":"  void initialize(DocumentsWriter documentsWriter, FieldNumberBiMap globalFieldMap, IndexWriterConfig config) {\n    this.documentsWriter.set(documentsWriter); // thread pool is bound to DW\n    this.globalFieldMap.set(globalFieldMap);\n    for (int i = 0; i < threadStates.length; i++) {\n      final FieldInfos.Builder infos = new FieldInfos.Builder(globalFieldMap);\n      threadStates[i] = new ThreadState(new DocumentsWriterPerThread(documentsWriter.directory, documentsWriter, infos, documentsWriter.chain));\n    }\n  }\n\n","sourceOld":"  void initialize(DocumentsWriter documentsWriter, FieldNumberBiMap globalFieldMap, IndexWriterConfig config) {\n    this.documentsWriter.set(documentsWriter); // thread pool is bound to DW\n    this.globalFieldMap.set(globalFieldMap);\n    for (int i = 0; i < threadStates.length; i++) {\n      final MutableFieldInfos infos = new MutableFieldInfos(globalFieldMap);\n      threadStates[i] = new ThreadState(new DocumentsWriterPerThread(documentsWriter.directory, documentsWriter, infos, documentsWriter.chain));\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4e84d639980c2b2eb5d41330d5ff68d143239495","date":1337729749,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/DocumentsWriterPerThreadPool#initialize(DocumentsWriter,FieldNumbers,IndexWriterConfig).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/DocumentsWriterPerThreadPool#initialize(DocumentsWriter,FieldNumberBiMap,IndexWriterConfig).mjava","sourceNew":"  void initialize(DocumentsWriter documentsWriter, FieldNumbers globalFieldMap, IndexWriterConfig config) {\n    this.documentsWriter.set(documentsWriter); // thread pool is bound to DW\n    this.globalFieldMap.set(globalFieldMap);\n    for (int i = 0; i < threadStates.length; i++) {\n      final FieldInfos.Builder infos = new FieldInfos.Builder(globalFieldMap);\n      threadStates[i] = new ThreadState(new DocumentsWriterPerThread(documentsWriter.directory, documentsWriter, infos, documentsWriter.chain));\n    }\n  }\n\n","sourceOld":"  void initialize(DocumentsWriter documentsWriter, FieldNumberBiMap globalFieldMap, IndexWriterConfig config) {\n    this.documentsWriter.set(documentsWriter); // thread pool is bound to DW\n    this.globalFieldMap.set(globalFieldMap);\n    for (int i = 0; i < threadStates.length; i++) {\n      final FieldInfos.Builder infos = new FieldInfos.Builder(globalFieldMap);\n      threadStates[i] = new ThreadState(new DocumentsWriterPerThread(documentsWriter.directory, documentsWriter, infos, documentsWriter.chain));\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"615ddbd81799980d0fdd95e0238e1c498b6f47b0","date":1338233290,"type":5,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/DocumentsWriterPerThreadPool#initialize(DocumentsWriter,FieldNumbers,IndexWriterConfig).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/DocumentsWriterPerThreadPool#initialize(DocumentsWriter,FieldNumberBiMap,IndexWriterConfig).mjava","sourceNew":"  void initialize(DocumentsWriter documentsWriter, FieldNumbers globalFieldMap, IndexWriterConfig config) {\n    this.documentsWriter.set(documentsWriter); // thread pool is bound to DW\n    this.globalFieldMap.set(globalFieldMap);\n    for (int i = 0; i < threadStates.length; i++) {\n      final FieldInfos.Builder infos = new FieldInfos.Builder(globalFieldMap);\n      threadStates[i] = new ThreadState(new DocumentsWriterPerThread(documentsWriter.directory, documentsWriter, infos, documentsWriter.chain));\n    }\n  }\n\n","sourceOld":"  void initialize(DocumentsWriter documentsWriter, FieldNumberBiMap globalFieldMap, IndexWriterConfig config) {\n    this.documentsWriter.set(documentsWriter); // thread pool is bound to DW\n    this.globalFieldMap.set(globalFieldMap);\n    for (int i = 0; i < threadStates.length; i++) {\n      final FieldInfos infos = new FieldInfos(globalFieldMap);\n      threadStates[i] = new ThreadState(new DocumentsWriterPerThread(documentsWriter.directory, documentsWriter, infos, documentsWriter.chain));\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"615ddbd81799980d0fdd95e0238e1c498b6f47b0":["8b074647cedb968eae4bb8f4e7ec83bdd5a1cc7d","4e84d639980c2b2eb5d41330d5ff68d143239495"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a851824c09818632c94eba41e60ef5e72e323c8e":["f6eee1e5a8555d83dd8f2f2e3c0a4ccec8e7cf9b"],"4e84d639980c2b2eb5d41330d5ff68d143239495":["a851824c09818632c94eba41e60ef5e72e323c8e"],"f6eee1e5a8555d83dd8f2f2e3c0a4ccec8e7cf9b":["8b074647cedb968eae4bb8f4e7ec83bdd5a1cc7d"],"8b074647cedb968eae4bb8f4e7ec83bdd5a1cc7d":["f64b5c281a42c5a4634b39a4fcb8f21a0cba1600"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["615ddbd81799980d0fdd95e0238e1c498b6f47b0"],"f64b5c281a42c5a4634b39a4fcb8f21a0cba1600":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"]},"commit2Childs":{"615ddbd81799980d0fdd95e0238e1c498b6f47b0":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["f64b5c281a42c5a4634b39a4fcb8f21a0cba1600"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"a851824c09818632c94eba41e60ef5e72e323c8e":["4e84d639980c2b2eb5d41330d5ff68d143239495"],"4e84d639980c2b2eb5d41330d5ff68d143239495":["615ddbd81799980d0fdd95e0238e1c498b6f47b0"],"f6eee1e5a8555d83dd8f2f2e3c0a4ccec8e7cf9b":["a851824c09818632c94eba41e60ef5e72e323c8e"],"8b074647cedb968eae4bb8f4e7ec83bdd5a1cc7d":["615ddbd81799980d0fdd95e0238e1c498b6f47b0","f6eee1e5a8555d83dd8f2f2e3c0a4ccec8e7cf9b"],"f64b5c281a42c5a4634b39a4fcb8f21a0cba1600":["8b074647cedb968eae4bb8f4e7ec83bdd5a1cc7d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}