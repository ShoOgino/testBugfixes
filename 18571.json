{"path":"lucene/src/java/org/apache/lucene/document/DocValuesField#toString().mjava","commits":[{"id":"1e59c344a45b9502f40ec44f5fe4e20ed2291dbe","date":1323449025,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/document/DocValuesField#toString().mjava","pathOld":"lucene/src/java/org/apache/lucene/document/IndexDocValuesField#toString().mjava","sourceNew":"  @Override\n  public String toString() {\n    final String value;\n    switch (type) {\n    case BYTES_FIXED_DEREF:\n    case BYTES_FIXED_STRAIGHT:\n    case BYTES_VAR_DEREF:\n    case BYTES_VAR_STRAIGHT:\n    case BYTES_FIXED_SORTED:\n    case BYTES_VAR_SORTED:\n      // don't use to unicode string this is not necessarily unicode here\n      value = \"bytes: \" + bytes.toString();\n      break;\n    case FIXED_INTS_16:\n      value = \"int16: \" + longValue;\n      break;\n    case FIXED_INTS_32:\n      value = \"int32: \" + longValue;\n      break;\n    case FIXED_INTS_64:\n      value = \"int64: \" + longValue;\n      break;\n    case FIXED_INTS_8:\n      value = \"int8: \" + longValue;\n      break;\n    case VAR_INTS:\n      value = \"vint: \" + longValue;\n      break;\n    case FLOAT_32:\n      value = \"float32: \" + doubleValue;\n      break;\n    case FLOAT_64:\n      value = \"float64: \" + doubleValue;\n      break;\n    default:\n      throw new IllegalArgumentException(\"unknown type: \" + type);\n    }\n    return \"<\" + name() + \": DocValuesField \" + value + \">\";\n  }\n\n","sourceOld":"  @Override\n  public String toString() {\n    final String value;\n    switch (type) {\n    case BYTES_FIXED_DEREF:\n    case BYTES_FIXED_STRAIGHT:\n    case BYTES_VAR_DEREF:\n    case BYTES_VAR_STRAIGHT:\n    case BYTES_FIXED_SORTED:\n    case BYTES_VAR_SORTED:\n      // don't use to unicode string this is not necessarily unicode here\n      value = \"bytes: \" + bytes.toString();\n      break;\n    case FIXED_INTS_16:\n      value = \"int16: \" + longValue;\n      break;\n    case FIXED_INTS_32:\n      value = \"int32: \" + longValue;\n      break;\n    case FIXED_INTS_64:\n      value = \"int64: \" + longValue;\n      break;\n    case FIXED_INTS_8:\n      value = \"int8: \" + longValue;\n      break;\n    case VAR_INTS:\n      value = \"vint: \" + longValue;\n      break;\n    case FLOAT_32:\n      value = \"float32: \" + doubleValue;\n      break;\n    case FLOAT_64:\n      value = \"float64: \" + doubleValue;\n      break;\n    default:\n      throw new IllegalArgumentException(\"unknown type: \" + type);\n    }\n    return \"<\" + name() + \": IndexDocValuesField \" + value + \">\";\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d638301ad1cfcae567b681b893bc8781f0ee48a5","date":1323801546,"type":1,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/document/DocValuesField#toString().mjava","pathOld":"lucene/src/java/org/apache/lucene/document/IndexDocValuesField#toString().mjava","sourceNew":"  @Override\n  public String toString() {\n    final String value;\n    switch (type) {\n    case BYTES_FIXED_DEREF:\n    case BYTES_FIXED_STRAIGHT:\n    case BYTES_VAR_DEREF:\n    case BYTES_VAR_STRAIGHT:\n    case BYTES_FIXED_SORTED:\n    case BYTES_VAR_SORTED:\n      // don't use to unicode string this is not necessarily unicode here\n      value = \"bytes: \" + bytes.toString();\n      break;\n    case FIXED_INTS_16:\n      value = \"int16: \" + longValue;\n      break;\n    case FIXED_INTS_32:\n      value = \"int32: \" + longValue;\n      break;\n    case FIXED_INTS_64:\n      value = \"int64: \" + longValue;\n      break;\n    case FIXED_INTS_8:\n      value = \"int8: \" + longValue;\n      break;\n    case VAR_INTS:\n      value = \"vint: \" + longValue;\n      break;\n    case FLOAT_32:\n      value = \"float32: \" + doubleValue;\n      break;\n    case FLOAT_64:\n      value = \"float64: \" + doubleValue;\n      break;\n    default:\n      throw new IllegalArgumentException(\"unknown type: \" + type);\n    }\n    return \"<\" + name() + \": DocValuesField \" + value + \">\";\n  }\n\n","sourceOld":"  @Override\n  public String toString() {\n    final String value;\n    switch (type) {\n    case BYTES_FIXED_DEREF:\n    case BYTES_FIXED_STRAIGHT:\n    case BYTES_VAR_DEREF:\n    case BYTES_VAR_STRAIGHT:\n    case BYTES_FIXED_SORTED:\n    case BYTES_VAR_SORTED:\n      // don't use to unicode string this is not necessarily unicode here\n      value = \"bytes: \" + bytes.toString();\n      break;\n    case FIXED_INTS_16:\n      value = \"int16: \" + longValue;\n      break;\n    case FIXED_INTS_32:\n      value = \"int32: \" + longValue;\n      break;\n    case FIXED_INTS_64:\n      value = \"int64: \" + longValue;\n      break;\n    case FIXED_INTS_8:\n      value = \"int8: \" + longValue;\n      break;\n    case VAR_INTS:\n      value = \"vint: \" + longValue;\n      break;\n    case FLOAT_32:\n      value = \"float32: \" + doubleValue;\n      break;\n    case FLOAT_64:\n      value = \"float64: \" + doubleValue;\n      break;\n    default:\n      throw new IllegalArgumentException(\"unknown type: \" + type);\n    }\n    return \"<\" + name() + \": IndexDocValuesField \" + value + \">\";\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fa0f44f887719e97183771e977cfc4bfb485b766","date":1326668713,"type":4,"author":"Michael McCandless","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/src/java/org/apache/lucene/document/DocValuesField#toString().mjava","sourceNew":null,"sourceOld":"  @Override\n  public String toString() {\n    final String value;\n    switch (type) {\n    case BYTES_FIXED_DEREF:\n    case BYTES_FIXED_STRAIGHT:\n    case BYTES_VAR_DEREF:\n    case BYTES_VAR_STRAIGHT:\n    case BYTES_FIXED_SORTED:\n    case BYTES_VAR_SORTED:\n      // don't use to unicode string this is not necessarily unicode here\n      value = \"bytes: \" + bytes.toString();\n      break;\n    case FIXED_INTS_16:\n      value = \"int16: \" + longValue;\n      break;\n    case FIXED_INTS_32:\n      value = \"int32: \" + longValue;\n      break;\n    case FIXED_INTS_64:\n      value = \"int64: \" + longValue;\n      break;\n    case FIXED_INTS_8:\n      value = \"int8: \" + longValue;\n      break;\n    case VAR_INTS:\n      value = \"vint: \" + longValue;\n      break;\n    case FLOAT_32:\n      value = \"float32: \" + doubleValue;\n      break;\n    case FLOAT_64:\n      value = \"float64: \" + doubleValue;\n      break;\n    default:\n      throw new IllegalArgumentException(\"unknown type: \" + type);\n    }\n    return \"<\" + name() + \": DocValuesField \" + value + \">\";\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"1e59c344a45b9502f40ec44f5fe4e20ed2291dbe":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"fa0f44f887719e97183771e977cfc4bfb485b766":["d638301ad1cfcae567b681b893bc8781f0ee48a5"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["fa0f44f887719e97183771e977cfc4bfb485b766"],"d638301ad1cfcae567b681b893bc8781f0ee48a5":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","1e59c344a45b9502f40ec44f5fe4e20ed2291dbe"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["1e59c344a45b9502f40ec44f5fe4e20ed2291dbe","d638301ad1cfcae567b681b893bc8781f0ee48a5"],"1e59c344a45b9502f40ec44f5fe4e20ed2291dbe":["d638301ad1cfcae567b681b893bc8781f0ee48a5"],"fa0f44f887719e97183771e977cfc4bfb485b766":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"d638301ad1cfcae567b681b893bc8781f0ee48a5":["fa0f44f887719e97183771e977cfc4bfb485b766"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}