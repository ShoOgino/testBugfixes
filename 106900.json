{"path":"lucene/core/src/test/org/apache/lucene/analysis/TestStopFilter#generateTestSetWithStopwordsAndStopwordPositions(int,StringBuilder,List[String],List[Integer]).mjava","commits":[{"id":"cb5529b83dfe8f452a536b7afe14b0f26b33033c","date":1544111330,"type":0,"author":"Diego Ceccarelli","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/analysis/TestStopFilter#generateTestSetWithStopwordsAndStopwordPositions(int,StringBuilder,List[String],List[Integer]).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Randomly generate a document and a list of stopwords to apply\n   * @param numberOfTokens max number of tokens in the document\n   * @param sb will contain the text at the end of the method\n   * @param stopwords will contain the list of the stopwords at the end of the method\n   * @param stopwordPositions will contain the position of the stopwords at the end of the method\n   */\n  private static void generateTestSetWithStopwordsAndStopwordPositions(int numberOfTokens, StringBuilder sb, List<String> stopwords, List<Integer> stopwordPositions){\n    Random rand = random();\n    for (int i = 0; i < numberOfTokens; i++) {\n      String token = English.intToEnglish(i).trim();\n      sb.append(token).append(' ');\n      if (i == 0 || rand.nextBoolean()) {\n        // with probability 0.5 will tell if this is a stopword or\n        // no - adding always the first token to make sure that the\n        // list of stopwords is not empty;\n        stopwords.add(token);\n        stopwordPositions.add(i);\n      }\n    }\n    log(\"Number of tokens : \"+numberOfTokens);\n    log(\"Document : \"+sb.toString());\n    logStopwords(\"Stopwords\", stopwords);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"cb5529b83dfe8f452a536b7afe14b0f26b33033c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["cb5529b83dfe8f452a536b7afe14b0f26b33033c"]},"commit2Childs":{"cb5529b83dfe8f452a536b7afe14b0f26b33033c":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cb5529b83dfe8f452a536b7afe14b0f26b33033c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}