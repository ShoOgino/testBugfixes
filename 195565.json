{"path":"solr/solrj/src/java/org/apache/solr/common/cloud/Slice#makeReplicas(Map[String,Object]).mjava","commits":[{"id":"fa64435b5902ce266c23755a4a00691a3285dab8","date":1347243290,"type":0,"author":"Yonik Seeley","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/common/cloud/Slice#makeReplicas(Map[String,Object]).mjava","pathOld":"/dev/null","sourceNew":"  private Map<String,Replica> makeReplicas(Map<String,Object> genericReplicas) {\n    if (genericReplicas == null) return new HashMap<String,Replica>(1);\n    Map<String,Replica> result = new LinkedHashMap<String, Replica>(genericReplicas.size());\n    for (Map.Entry<String,Object> entry : genericReplicas.entrySet()) {\n      String name = entry.getKey();\n      Object val = entry.getValue();\n      Replica r;\n      if (val instanceof Replica) {\n        r = (Replica)val;\n      } else {\n        r = new Replica(name, (Map<String,Object>)val);\n      }\n      result.put(name, r);\n    }\n    return result;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"634f330c54fd3f9f491d52036dc3f40b4f4d8934","date":1394635157,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/common/cloud/Slice#makeReplicas(Map[String,Object]).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/common/cloud/Slice#makeReplicas(Map[String,Object]).mjava","sourceNew":"  private Map<String,Replica> makeReplicas(Map<String,Object> genericReplicas) {\n    if (genericReplicas == null) return new HashMap<>(1);\n    Map<String,Replica> result = new LinkedHashMap<>(genericReplicas.size());\n    for (Map.Entry<String,Object> entry : genericReplicas.entrySet()) {\n      String name = entry.getKey();\n      Object val = entry.getValue();\n      Replica r;\n      if (val instanceof Replica) {\n        r = (Replica)val;\n      } else {\n        r = new Replica(name, (Map<String,Object>)val);\n      }\n      result.put(name, r);\n    }\n    return result;\n  }\n\n","sourceOld":"  private Map<String,Replica> makeReplicas(Map<String,Object> genericReplicas) {\n    if (genericReplicas == null) return new HashMap<String,Replica>(1);\n    Map<String,Replica> result = new LinkedHashMap<String, Replica>(genericReplicas.size());\n    for (Map.Entry<String,Object> entry : genericReplicas.entrySet()) {\n      String name = entry.getKey();\n      Object val = entry.getValue();\n      Replica r;\n      if (val instanceof Replica) {\n        r = (Replica)val;\n      } else {\n        r = new Replica(name, (Map<String,Object>)val);\n      }\n      result.put(name, r);\n    }\n    return result;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6681d02f2302c363be938426e68f8dfd090cc1bf","date":1575339019,"type":5,"author":"Noble Paul","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/common/cloud/Slice#makeReplicas(String,String,Map[String,Object]).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/common/cloud/Slice#makeReplicas(Map[String,Object]).mjava","sourceNew":"  private Map<String,Replica> makeReplicas(String collection, String slice,Map<String,Object> genericReplicas) {\n    if (genericReplicas == null) return new HashMap<>(1);\n    Map<String,Replica> result = new LinkedHashMap<>(genericReplicas.size());\n    for (Map.Entry<String,Object> entry : genericReplicas.entrySet()) {\n      String name = entry.getKey();\n      Object val = entry.getValue();\n      Replica r;\n      if (val instanceof Replica) {\n        r = (Replica)val;\n      } else {\n        r = new Replica(name, (Map<String,Object>)val, collection, slice);\n      }\n      result.put(name, r);\n    }\n    return result;\n  }\n\n","sourceOld":"  private Map<String,Replica> makeReplicas(Map<String,Object> genericReplicas) {\n    if (genericReplicas == null) return new HashMap<>(1);\n    Map<String,Replica> result = new LinkedHashMap<>(genericReplicas.size());\n    for (Map.Entry<String,Object> entry : genericReplicas.entrySet()) {\n      String name = entry.getKey();\n      Object val = entry.getValue();\n      Replica r;\n      if (val instanceof Replica) {\n        r = (Replica)val;\n      } else {\n        r = new Replica(name, (Map<String,Object>)val);\n      }\n      result.put(name, r);\n    }\n    return result;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d3aa683bba99315838c968fefedf3d74f44aa993","date":1575395112,"type":5,"author":"Dawid Weiss","isMerge":true,"pathNew":"solr/solrj/src/java/org/apache/solr/common/cloud/Slice#makeReplicas(String,String,Map[String,Object]).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/common/cloud/Slice#makeReplicas(Map[String,Object]).mjava","sourceNew":"  private Map<String,Replica> makeReplicas(String collection, String slice,Map<String,Object> genericReplicas) {\n    if (genericReplicas == null) return new HashMap<>(1);\n    Map<String,Replica> result = new LinkedHashMap<>(genericReplicas.size());\n    for (Map.Entry<String,Object> entry : genericReplicas.entrySet()) {\n      String name = entry.getKey();\n      Object val = entry.getValue();\n      Replica r;\n      if (val instanceof Replica) {\n        r = (Replica)val;\n      } else {\n        r = new Replica(name, (Map<String,Object>)val, collection, slice);\n      }\n      result.put(name, r);\n    }\n    return result;\n  }\n\n","sourceOld":"  private Map<String,Replica> makeReplicas(Map<String,Object> genericReplicas) {\n    if (genericReplicas == null) return new HashMap<>(1);\n    Map<String,Replica> result = new LinkedHashMap<>(genericReplicas.size());\n    for (Map.Entry<String,Object> entry : genericReplicas.entrySet()) {\n      String name = entry.getKey();\n      Object val = entry.getValue();\n      Replica r;\n      if (val instanceof Replica) {\n        r = (Replica)val;\n      } else {\n        r = new Replica(name, (Map<String,Object>)val);\n      }\n      result.put(name, r);\n    }\n    return result;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"d3aa683bba99315838c968fefedf3d74f44aa993":["634f330c54fd3f9f491d52036dc3f40b4f4d8934","6681d02f2302c363be938426e68f8dfd090cc1bf"],"634f330c54fd3f9f491d52036dc3f40b4f4d8934":["fa64435b5902ce266c23755a4a00691a3285dab8"],"fa64435b5902ce266c23755a4a00691a3285dab8":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["6681d02f2302c363be938426e68f8dfd090cc1bf"],"6681d02f2302c363be938426e68f8dfd090cc1bf":["634f330c54fd3f9f491d52036dc3f40b4f4d8934"]},"commit2Childs":{"d3aa683bba99315838c968fefedf3d74f44aa993":[],"634f330c54fd3f9f491d52036dc3f40b4f4d8934":["d3aa683bba99315838c968fefedf3d74f44aa993","6681d02f2302c363be938426e68f8dfd090cc1bf"],"fa64435b5902ce266c23755a4a00691a3285dab8":["634f330c54fd3f9f491d52036dc3f40b4f4d8934"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["fa64435b5902ce266c23755a4a00691a3285dab8"],"6681d02f2302c363be938426e68f8dfd090cc1bf":["d3aa683bba99315838c968fefedf3d74f44aa993","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["d3aa683bba99315838c968fefedf3d74f44aa993","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}