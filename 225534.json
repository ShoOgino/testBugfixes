{"path":"lucene/src/java/org/apache/lucene/codecs/perfield/PerFieldPostingsFormat#files(SegmentInfo,String,Set[String]).mjava","commits":[{"id":"78977ccc47b451a8e645b77504e2ef0a05e4b1a3","date":1327846052,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/codecs/perfield/PerFieldPostingsFormat#files(SegmentInfo,String,Set[String]).mjava","pathOld":"lucene/src/java/org/apache/lucene/codecs/perfield/PerFieldPostingsFormat#files(Directory,SegmentInfo,String,Set[String]).mjava","sourceNew":"  @Override\n  public void files(final SegmentInfo info, String segmentSuffix, final Set<String> files) throws IOException {\n    final Directory dir = info.dir;\n\n    final String mapFileName = IndexFileNames.segmentFileName(info.name, segmentSuffix, PER_FIELD_EXTENSION);\n    files.add(mapFileName);\n\n    try {\n      new VisitPerFieldFile(dir, info.name, segmentSuffix) {\n        @Override\n        protected void visitOneFormat(String segmentSuffix, PostingsFormat format) throws IOException {\n          format.files(info, segmentSuffix, files);\n        }\n\n        @Override\n          protected void visitOneField(String field, PostingsFormat format) {\n        }\n      };\n    } catch (FileNotFoundException fnfe) {\n      // TODO: this is somewhat shady... if we can't open\n      // the .per file then most likely someone is calling\n      // .files() after this segment was deleted, so, they\n      // wouldn't be able to do anything with the files even\n      // if we could return them, so we don't add any files\n      // in this case.\n    }\n  }\n\n","sourceOld":"  @Override\n  public void files(final Directory dir, final SegmentInfo info, String segmentSuffix, final Set<String> files)\n      throws IOException {\n\n    final String mapFileName = IndexFileNames.segmentFileName(info.name, segmentSuffix, PER_FIELD_EXTENSION);\n    files.add(mapFileName);\n\n    try {\n      new VisitPerFieldFile(dir, info.name, segmentSuffix) {\n        @Override\n        protected void visitOneFormat(String segmentSuffix, PostingsFormat format) throws IOException {\n          format.files(dir, info, segmentSuffix, files);\n        }\n\n        @Override\n          protected void visitOneField(String field, PostingsFormat format) {\n        }\n      };\n    } catch (FileNotFoundException fnfe) {\n      // TODO: this is somewhat shady... if we can't open\n      // the .per file then most likely someone is calling\n      // .files() after this segment was deleted, so, they\n      // wouldn't be able to do anything with the files even\n      // if we could return them, so we don't add any files\n      // in this case.\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"296df632fd63421ea20756fa11ad36fbc6f4c8a9","date":1327957998,"type":1,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/codecs/perfield/PerFieldPostingsFormat#files(SegmentInfo,String,Set[String]).mjava","pathOld":"lucene/src/java/org/apache/lucene/codecs/perfield/PerFieldPostingsFormat#files(Directory,SegmentInfo,String,Set[String]).mjava","sourceNew":"  @Override\n  public void files(final SegmentInfo info, String segmentSuffix, final Set<String> files) throws IOException {\n    final Directory dir = info.dir;\n\n    final String mapFileName = IndexFileNames.segmentFileName(info.name, segmentSuffix, PER_FIELD_EXTENSION);\n    files.add(mapFileName);\n\n    try {\n      new VisitPerFieldFile(dir, info.name, segmentSuffix) {\n        @Override\n        protected void visitOneFormat(String segmentSuffix, PostingsFormat format) throws IOException {\n          format.files(info, segmentSuffix, files);\n        }\n\n        @Override\n          protected void visitOneField(String field, PostingsFormat format) {\n        }\n      };\n    } catch (FileNotFoundException fnfe) {\n      // TODO: this is somewhat shady... if we can't open\n      // the .per file then most likely someone is calling\n      // .files() after this segment was deleted, so, they\n      // wouldn't be able to do anything with the files even\n      // if we could return them, so we don't add any files\n      // in this case.\n    }\n  }\n\n","sourceOld":"  @Override\n  public void files(final Directory dir, final SegmentInfo info, String segmentSuffix, final Set<String> files)\n      throws IOException {\n\n    final String mapFileName = IndexFileNames.segmentFileName(info.name, segmentSuffix, PER_FIELD_EXTENSION);\n    files.add(mapFileName);\n\n    try {\n      new VisitPerFieldFile(dir, info.name, segmentSuffix) {\n        @Override\n        protected void visitOneFormat(String segmentSuffix, PostingsFormat format) throws IOException {\n          format.files(dir, info, segmentSuffix, files);\n        }\n\n        @Override\n          protected void visitOneField(String field, PostingsFormat format) {\n        }\n      };\n    } catch (FileNotFoundException fnfe) {\n      // TODO: this is somewhat shady... if we can't open\n      // the .per file then most likely someone is calling\n      // .files() after this segment was deleted, so, they\n      // wouldn't be able to do anything with the files even\n      // if we could return them, so we don't add any files\n      // in this case.\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"410e066f093e407222d9681429d209084e783149","date":1327958394,"type":1,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/codecs/perfield/PerFieldPostingsFormat#files(SegmentInfo,String,Set[String]).mjava","pathOld":"lucene/src/java/org/apache/lucene/codecs/perfield/PerFieldPostingsFormat#files(Directory,SegmentInfo,String,Set[String]).mjava","sourceNew":"  @Override\n  public void files(final SegmentInfo info, String segmentSuffix, final Set<String> files) throws IOException {\n    final Directory dir = info.dir;\n\n    final String mapFileName = IndexFileNames.segmentFileName(info.name, segmentSuffix, PER_FIELD_EXTENSION);\n    files.add(mapFileName);\n\n    try {\n      new VisitPerFieldFile(dir, info.name, segmentSuffix) {\n        @Override\n        protected void visitOneFormat(String segmentSuffix, PostingsFormat format) throws IOException {\n          format.files(info, segmentSuffix, files);\n        }\n\n        @Override\n          protected void visitOneField(String field, PostingsFormat format) {\n        }\n      };\n    } catch (FileNotFoundException fnfe) {\n      // TODO: this is somewhat shady... if we can't open\n      // the .per file then most likely someone is calling\n      // .files() after this segment was deleted, so, they\n      // wouldn't be able to do anything with the files even\n      // if we could return them, so we don't add any files\n      // in this case.\n    }\n  }\n\n","sourceOld":"  @Override\n  public void files(final Directory dir, final SegmentInfo info, String segmentSuffix, final Set<String> files)\n      throws IOException {\n\n    final String mapFileName = IndexFileNames.segmentFileName(info.name, segmentSuffix, PER_FIELD_EXTENSION);\n    files.add(mapFileName);\n\n    try {\n      new VisitPerFieldFile(dir, info.name, segmentSuffix) {\n        @Override\n        protected void visitOneFormat(String segmentSuffix, PostingsFormat format) throws IOException {\n          format.files(dir, info, segmentSuffix, files);\n        }\n\n        @Override\n          protected void visitOneField(String field, PostingsFormat format) {\n        }\n      };\n    } catch (FileNotFoundException fnfe) {\n      // TODO: this is somewhat shady... if we can't open\n      // the .per file then most likely someone is calling\n      // .files() after this segment was deleted, so, they\n      // wouldn't be able to do anything with the files even\n      // if we could return them, so we don't add any files\n      // in this case.\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":5,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/perfield/PerFieldPostingsFormat#files(SegmentInfo,String,Set[String]).mjava","pathOld":"lucene/src/java/org/apache/lucene/codecs/perfield/PerFieldPostingsFormat#files(SegmentInfo,String,Set[String]).mjava","sourceNew":"  @Override\n  public void files(final SegmentInfo info, String segmentSuffix, final Set<String> files) throws IOException {\n    final Directory dir = info.dir;\n\n    final String mapFileName = IndexFileNames.segmentFileName(info.name, segmentSuffix, PER_FIELD_EXTENSION);\n    files.add(mapFileName);\n\n    try {\n      new VisitPerFieldFile(dir, info.name, segmentSuffix) {\n        @Override\n        protected void visitOneFormat(String segmentSuffix, PostingsFormat format) throws IOException {\n          format.files(info, segmentSuffix, files);\n        }\n\n        @Override\n          protected void visitOneField(String field, PostingsFormat format) {\n        }\n      };\n    } catch (FileNotFoundException fnfe) {\n      // TODO: this is somewhat shady... if we can't open\n      // the .per file then most likely someone is calling\n      // .files() after this segment was deleted, so, they\n      // wouldn't be able to do anything with the files even\n      // if we could return them, so we don't add any files\n      // in this case.\n    }\n  }\n\n","sourceOld":"  @Override\n  public void files(final SegmentInfo info, String segmentSuffix, final Set<String> files) throws IOException {\n    final Directory dir = info.dir;\n\n    final String mapFileName = IndexFileNames.segmentFileName(info.name, segmentSuffix, PER_FIELD_EXTENSION);\n    files.add(mapFileName);\n\n    try {\n      new VisitPerFieldFile(dir, info.name, segmentSuffix) {\n        @Override\n        protected void visitOneFormat(String segmentSuffix, PostingsFormat format) throws IOException {\n          format.files(info, segmentSuffix, files);\n        }\n\n        @Override\n          protected void visitOneField(String field, PostingsFormat format) {\n        }\n      };\n    } catch (FileNotFoundException fnfe) {\n      // TODO: this is somewhat shady... if we can't open\n      // the .per file then most likely someone is calling\n      // .files() after this segment was deleted, so, they\n      // wouldn't be able to do anything with the files even\n      // if we could return them, so we don't add any files\n      // in this case.\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"410e066f093e407222d9681429d209084e783149":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","296df632fd63421ea20756fa11ad36fbc6f4c8a9"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["296df632fd63421ea20756fa11ad36fbc6f4c8a9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"78977ccc47b451a8e645b77504e2ef0a05e4b1a3":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"296df632fd63421ea20756fa11ad36fbc6f4c8a9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","78977ccc47b451a8e645b77504e2ef0a05e4b1a3"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"]},"commit2Childs":{"410e066f093e407222d9681429d209084e783149":[],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["410e066f093e407222d9681429d209084e783149","78977ccc47b451a8e645b77504e2ef0a05e4b1a3","296df632fd63421ea20756fa11ad36fbc6f4c8a9"],"78977ccc47b451a8e645b77504e2ef0a05e4b1a3":["296df632fd63421ea20756fa11ad36fbc6f4c8a9"],"296df632fd63421ea20756fa11ad36fbc6f4c8a9":["410e066f093e407222d9681429d209084e783149","3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["410e066f093e407222d9681429d209084e783149","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}