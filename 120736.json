{"path":"solr/core/src/test/org/apache/solr/request/SimpleFacetsTest#getRandomParamsInt().mjava","commits":[{"id":"e135e47842b3fd6a4797b7e4787241b06817efa2","date":1429817254,"type":0,"author":"Tomas Eduardo Fernandez Lobbe","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/request/SimpleFacetsTest#getRandomParamsInt().mjava","pathOld":"/dev/null","sourceNew":"  private ModifiableSolrParams getRandomParamsInt() {\n    String field = new String[]{\"range_facet_l_dv\", \"range_facet_i_dv\", \"range_facet_l\", \"duration_i1\", \"id\"}[random().nextInt(5)];\n    ModifiableSolrParams params = new ModifiableSolrParams();\n    Integer[] values = new Integer[2];\n    do {\n      values[0] = random().nextInt(3000);\n      values[1] = random().nextInt(3000);\n    } while (values[0].equals(values[1]));\n    Arrays.sort(values);\n    long gapNum = Math.max(1, random().nextInt(3000));\n    \n    params.add(FacetParams.FACET_RANGE_START, String.valueOf(values[0]));\n    params.add(FacetParams.FACET_RANGE_END, String.valueOf(values[1]));\n    params.add(FacetParams.FACET_RANGE_GAP, String.format(Locale.ROOT, \"+%d\", gapNum));\n    addCommonRandomRangeParams(params);\n    params.add(FacetParams.FACET_RANGE, field);\n    return params;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a71f63026529f3c1f03cfdd664910873ab2369ae","date":1497543264,"type":3,"author":"Chris Hostetter","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/request/SimpleFacetsTest#getRandomParamsInt().mjava","pathOld":"solr/core/src/test/org/apache/solr/request/SimpleFacetsTest#getRandomParamsInt().mjava","sourceNew":"  private ModifiableSolrParams getRandomParamsInt() {\n    String field = new String[]{\"range_facet_l_dv\", \"range_facet_i_dv\", \"range_facet_l\", \"duration_i1\", \"id_i1\"}[random().nextInt(5)];\n    ModifiableSolrParams params = new ModifiableSolrParams();\n    Integer[] values = new Integer[2];\n    do {\n      values[0] = random().nextInt(3000);\n      values[1] = random().nextInt(3000);\n    } while (values[0].equals(values[1]));\n    Arrays.sort(values);\n    long gapNum = Math.max(1, random().nextInt(3000));\n    \n    params.add(FacetParams.FACET_RANGE_START, String.valueOf(values[0]));\n    params.add(FacetParams.FACET_RANGE_END, String.valueOf(values[1]));\n    params.add(FacetParams.FACET_RANGE_GAP, String.format(Locale.ROOT, \"+%d\", gapNum));\n    addCommonRandomRangeParams(params);\n    params.add(FacetParams.FACET_RANGE, field);\n    return params;\n  }\n\n","sourceOld":"  private ModifiableSolrParams getRandomParamsInt() {\n    String field = new String[]{\"range_facet_l_dv\", \"range_facet_i_dv\", \"range_facet_l\", \"duration_i1\", \"id\"}[random().nextInt(5)];\n    ModifiableSolrParams params = new ModifiableSolrParams();\n    Integer[] values = new Integer[2];\n    do {\n      values[0] = random().nextInt(3000);\n      values[1] = random().nextInt(3000);\n    } while (values[0].equals(values[1]));\n    Arrays.sort(values);\n    long gapNum = Math.max(1, random().nextInt(3000));\n    \n    params.add(FacetParams.FACET_RANGE_START, String.valueOf(values[0]));\n    params.add(FacetParams.FACET_RANGE_END, String.valueOf(values[1]));\n    params.add(FacetParams.FACET_RANGE_GAP, String.format(Locale.ROOT, \"+%d\", gapNum));\n    addCommonRandomRangeParams(params);\n    params.add(FacetParams.FACET_RANGE, field);\n    return params;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2a3ed3f77cdd034e789d00d1ca8bb7054c9fb8e9","date":1498028748,"type":3,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/request/SimpleFacetsTest#getRandomParamsInt().mjava","pathOld":"solr/core/src/test/org/apache/solr/request/SimpleFacetsTest#getRandomParamsInt().mjava","sourceNew":"  private ModifiableSolrParams getRandomParamsInt() {\n    String field = new String[]{\"range_facet_l_dv\", \"range_facet_i_dv\", \"range_facet_l\", \"duration_i1\", \"id_i1\"}[random().nextInt(5)];\n    ModifiableSolrParams params = new ModifiableSolrParams();\n    Integer[] values = new Integer[2];\n    do {\n      values[0] = random().nextInt(3000);\n      values[1] = random().nextInt(3000);\n    } while (values[0].equals(values[1]));\n    Arrays.sort(values);\n    long gapNum = Math.max(1, random().nextInt(3000));\n    \n    params.add(FacetParams.FACET_RANGE_START, String.valueOf(values[0]));\n    params.add(FacetParams.FACET_RANGE_END, String.valueOf(values[1]));\n    params.add(FacetParams.FACET_RANGE_GAP, String.format(Locale.ROOT, \"+%d\", gapNum));\n    addCommonRandomRangeParams(params);\n    params.add(FacetParams.FACET_RANGE, field);\n    return params;\n  }\n\n","sourceOld":"  private ModifiableSolrParams getRandomParamsInt() {\n    String field = new String[]{\"range_facet_l_dv\", \"range_facet_i_dv\", \"range_facet_l\", \"duration_i1\", \"id\"}[random().nextInt(5)];\n    ModifiableSolrParams params = new ModifiableSolrParams();\n    Integer[] values = new Integer[2];\n    do {\n      values[0] = random().nextInt(3000);\n      values[1] = random().nextInt(3000);\n    } while (values[0].equals(values[1]));\n    Arrays.sort(values);\n    long gapNum = Math.max(1, random().nextInt(3000));\n    \n    params.add(FacetParams.FACET_RANGE_START, String.valueOf(values[0]));\n    params.add(FacetParams.FACET_RANGE_END, String.valueOf(values[1]));\n    params.add(FacetParams.FACET_RANGE_GAP, String.format(Locale.ROOT, \"+%d\", gapNum));\n    addCommonRandomRangeParams(params);\n    params.add(FacetParams.FACET_RANGE, field);\n    return params;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"28288370235ed02234a64753cdbf0c6ec096304a","date":1498726817,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/request/SimpleFacetsTest#getRandomParamsInt().mjava","pathOld":"solr/core/src/test/org/apache/solr/request/SimpleFacetsTest#getRandomParamsInt().mjava","sourceNew":"  private ModifiableSolrParams getRandomParamsInt() {\n    String field = new String[]{\"range_facet_l_dv\", \"range_facet_i_dv\", \"range_facet_l\", \"duration_i1\", \"id_i1\"}[random().nextInt(5)];\n    ModifiableSolrParams params = new ModifiableSolrParams();\n    Integer[] values = new Integer[2];\n    do {\n      values[0] = random().nextInt(3000);\n      values[1] = random().nextInt(3000);\n    } while (values[0].equals(values[1]));\n    Arrays.sort(values);\n    long gapNum = Math.max(1, random().nextInt(3000));\n    \n    params.add(FacetParams.FACET_RANGE_START, String.valueOf(values[0]));\n    params.add(FacetParams.FACET_RANGE_END, String.valueOf(values[1]));\n    params.add(FacetParams.FACET_RANGE_GAP, String.format(Locale.ROOT, \"+%d\", gapNum));\n    addCommonRandomRangeParams(params);\n    params.add(FacetParams.FACET_RANGE, field);\n    return params;\n  }\n\n","sourceOld":"  private ModifiableSolrParams getRandomParamsInt() {\n    String field = new String[]{\"range_facet_l_dv\", \"range_facet_i_dv\", \"range_facet_l\", \"duration_i1\", \"id\"}[random().nextInt(5)];\n    ModifiableSolrParams params = new ModifiableSolrParams();\n    Integer[] values = new Integer[2];\n    do {\n      values[0] = random().nextInt(3000);\n      values[1] = random().nextInt(3000);\n    } while (values[0].equals(values[1]));\n    Arrays.sort(values);\n    long gapNum = Math.max(1, random().nextInt(3000));\n    \n    params.add(FacetParams.FACET_RANGE_START, String.valueOf(values[0]));\n    params.add(FacetParams.FACET_RANGE_END, String.valueOf(values[1]));\n    params.add(FacetParams.FACET_RANGE_GAP, String.format(Locale.ROOT, \"+%d\", gapNum));\n    addCommonRandomRangeParams(params);\n    params.add(FacetParams.FACET_RANGE, field);\n    return params;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d0a64ffcef6ae839baf314a48817008c796b053d","date":1499974056,"type":3,"author":"Tomas Fernandez Lobbe","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/request/SimpleFacetsTest#getRandomParamsInt().mjava","pathOld":"solr/core/src/test/org/apache/solr/request/SimpleFacetsTest#getRandomParamsInt().mjava","sourceNew":"  private ModifiableSolrParams getRandomParamsInt() {\n    String field = new String[]{\"range_facet_l_dv\", \"range_facet_i_dv\", \"range_facet_l\", \"duration_i1\", \"id_i1\"}[random().nextInt(5)];\n    ModifiableSolrParams params = new ModifiableSolrParams();\n    Integer[] values = new Integer[2];\n    do {\n      values[0] = random().nextInt(3000) * (random().nextBoolean()?-1:1);\n      values[1] = random().nextInt(3000) * (random().nextBoolean()?-1:1);\n    } while (values[0].equals(values[1]));\n    Arrays.sort(values);\n    long gapNum = Math.max(1, random().nextInt(3000));\n    \n    params.add(FacetParams.FACET_RANGE_START, String.valueOf(values[0]));\n    params.add(FacetParams.FACET_RANGE_END, String.valueOf(values[1]));\n    params.add(FacetParams.FACET_RANGE_GAP, String.format(Locale.ROOT, \"+%d\", gapNum));\n    addCommonRandomRangeParams(params);\n    params.add(FacetParams.FACET_RANGE, field);\n    return params;\n  }\n\n","sourceOld":"  private ModifiableSolrParams getRandomParamsInt() {\n    String field = new String[]{\"range_facet_l_dv\", \"range_facet_i_dv\", \"range_facet_l\", \"duration_i1\", \"id_i1\"}[random().nextInt(5)];\n    ModifiableSolrParams params = new ModifiableSolrParams();\n    Integer[] values = new Integer[2];\n    do {\n      values[0] = random().nextInt(3000);\n      values[1] = random().nextInt(3000);\n    } while (values[0].equals(values[1]));\n    Arrays.sort(values);\n    long gapNum = Math.max(1, random().nextInt(3000));\n    \n    params.add(FacetParams.FACET_RANGE_START, String.valueOf(values[0]));\n    params.add(FacetParams.FACET_RANGE_END, String.valueOf(values[1]));\n    params.add(FacetParams.FACET_RANGE_GAP, String.format(Locale.ROOT, \"+%d\", gapNum));\n    addCommonRandomRangeParams(params);\n    params.add(FacetParams.FACET_RANGE, field);\n    return params;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"aaf90fc29510e72665ac7934f34c3d1c25efad64","date":1500354819,"type":3,"author":"Cao Manh Dat","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/request/SimpleFacetsTest#getRandomParamsInt().mjava","pathOld":"solr/core/src/test/org/apache/solr/request/SimpleFacetsTest#getRandomParamsInt().mjava","sourceNew":"  private ModifiableSolrParams getRandomParamsInt() {\n    String field = new String[]{\"range_facet_l_dv\", \"range_facet_i_dv\", \"range_facet_l\", \"duration_i1\", \"id_i1\"}[random().nextInt(5)];\n    ModifiableSolrParams params = new ModifiableSolrParams();\n    Integer[] values = new Integer[2];\n    do {\n      values[0] = random().nextInt(3000) * (random().nextBoolean()?-1:1);\n      values[1] = random().nextInt(3000) * (random().nextBoolean()?-1:1);\n    } while (values[0].equals(values[1]));\n    Arrays.sort(values);\n    long gapNum = Math.max(1, random().nextInt(3000));\n    \n    params.add(FacetParams.FACET_RANGE_START, String.valueOf(values[0]));\n    params.add(FacetParams.FACET_RANGE_END, String.valueOf(values[1]));\n    params.add(FacetParams.FACET_RANGE_GAP, String.format(Locale.ROOT, \"+%d\", gapNum));\n    addCommonRandomRangeParams(params);\n    params.add(FacetParams.FACET_RANGE, field);\n    return params;\n  }\n\n","sourceOld":"  private ModifiableSolrParams getRandomParamsInt() {\n    String field = new String[]{\"range_facet_l_dv\", \"range_facet_i_dv\", \"range_facet_l\", \"duration_i1\", \"id_i1\"}[random().nextInt(5)];\n    ModifiableSolrParams params = new ModifiableSolrParams();\n    Integer[] values = new Integer[2];\n    do {\n      values[0] = random().nextInt(3000);\n      values[1] = random().nextInt(3000);\n    } while (values[0].equals(values[1]));\n    Arrays.sort(values);\n    long gapNum = Math.max(1, random().nextInt(3000));\n    \n    params.add(FacetParams.FACET_RANGE_START, String.valueOf(values[0]));\n    params.add(FacetParams.FACET_RANGE_END, String.valueOf(values[1]));\n    params.add(FacetParams.FACET_RANGE_GAP, String.format(Locale.ROOT, \"+%d\", gapNum));\n    addCommonRandomRangeParams(params);\n    params.add(FacetParams.FACET_RANGE, field);\n    return params;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"e135e47842b3fd6a4797b7e4787241b06817efa2":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"aaf90fc29510e72665ac7934f34c3d1c25efad64":["2a3ed3f77cdd034e789d00d1ca8bb7054c9fb8e9","d0a64ffcef6ae839baf314a48817008c796b053d"],"d0a64ffcef6ae839baf314a48817008c796b053d":["28288370235ed02234a64753cdbf0c6ec096304a"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a71f63026529f3c1f03cfdd664910873ab2369ae":["e135e47842b3fd6a4797b7e4787241b06817efa2"],"28288370235ed02234a64753cdbf0c6ec096304a":["e135e47842b3fd6a4797b7e4787241b06817efa2","a71f63026529f3c1f03cfdd664910873ab2369ae"],"2a3ed3f77cdd034e789d00d1ca8bb7054c9fb8e9":["e135e47842b3fd6a4797b7e4787241b06817efa2","a71f63026529f3c1f03cfdd664910873ab2369ae"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["d0a64ffcef6ae839baf314a48817008c796b053d"]},"commit2Childs":{"e135e47842b3fd6a4797b7e4787241b06817efa2":["a71f63026529f3c1f03cfdd664910873ab2369ae","28288370235ed02234a64753cdbf0c6ec096304a","2a3ed3f77cdd034e789d00d1ca8bb7054c9fb8e9"],"aaf90fc29510e72665ac7934f34c3d1c25efad64":[],"d0a64ffcef6ae839baf314a48817008c796b053d":["aaf90fc29510e72665ac7934f34c3d1c25efad64","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["e135e47842b3fd6a4797b7e4787241b06817efa2"],"a71f63026529f3c1f03cfdd664910873ab2369ae":["28288370235ed02234a64753cdbf0c6ec096304a","2a3ed3f77cdd034e789d00d1ca8bb7054c9fb8e9"],"2a3ed3f77cdd034e789d00d1ca8bb7054c9fb8e9":["aaf90fc29510e72665ac7934f34c3d1c25efad64"],"28288370235ed02234a64753cdbf0c6ec096304a":["d0a64ffcef6ae839baf314a48817008c796b053d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["aaf90fc29510e72665ac7934f34c3d1c25efad64","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}