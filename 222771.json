{"path":"solr/core/src/java/org/apache/solr/search/facet/RelatednessAgg.SKGSlotAcc#SKGSlotAcc(RelatednessAgg,FacetContext,int,DocSet,DocSet).mjava","commits":[{"id":"42009f1fefcc8f4d9e07b158e9415cbd6ca7247c","date":1532538390,"type":1,"author":"Chris Hostetter","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/facet/RelatednessAgg.SKGSlotAcc#SKGSlotAcc(RelatednessAgg,FacetContext,int,DocSet,DocSet).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/facet/RelatednessAgg.SKGSlotAcc#SKGSlotAcc(FacetContext,int,DocSet,DocSet).mjava","sourceNew":"    public SKGSlotAcc(final RelatednessAgg agg, final FacetContext fcontext, final int numSlots,\n                      final DocSet fgSet, final DocSet bgSet) throws IOException {\n      super(fcontext);\n      this.agg = agg;\n      this.fgSet = fgSet;\n      this.bgSet = bgSet;\n      // cache the set sizes for frequent re-use on every slot\n      this.fgSize = fgSet.size();\n      this.bgSize = bgSet.size();\n      this.slotvalues = new BucketData[numSlots];\n      reset();\n    }\n\n","sourceOld":"    public SKGSlotAcc(final FacetContext fcontext, final int numSlots,\n                      final DocSet fgSet, final DocSet bgSet) throws IOException {\n      super(fcontext);\n      this.fgSet = fgSet;\n      this.bgSet = bgSet;\n      // cache the set sizes for frequent re-use on every slot\n      this.fgSize = fgSet.size();\n      this.bgSize = bgSet.size();\n      this.slotvalues = new BucketData[numSlots];\n      reset();\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"248f6ecc900c3a5633fd5ca6f564ea8b717720da","date":1588863846,"type":4,"author":"Mike Drob","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/core/src/java/org/apache/solr/search/facet/RelatednessAgg.SKGSlotAcc#SKGSlotAcc(RelatednessAgg,FacetContext,int,DocSet,DocSet).mjava","sourceNew":null,"sourceOld":"    public SKGSlotAcc(final RelatednessAgg agg, final FacetContext fcontext, final int numSlots,\n                      final DocSet fgSet, final DocSet bgSet) throws IOException {\n      super(fcontext);\n      this.agg = agg;\n      this.fgSet = fgSet;\n      this.bgSet = bgSet;\n      // cache the set sizes for frequent re-use on every slot\n      this.fgSize = fgSet.size();\n      this.bgSize = bgSet.size();\n      this.slotvalues = new BucketData[numSlots];\n      reset();\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a56a9893014b284af4d1af451e6c02e7ffdf5b6e","date":1590065972,"type":1,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/facet/RelatednessAgg.SKGSlotAcc#SKGSlotAcc(RelatednessAgg,FacetContext,int,DocSet,DocSet).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/facet/RelatednessAgg.SKGSlotAcc#SKGSlotAcc(RelatednessAgg,FacetRequest.FacetContext,int,DocSet,DocSet).mjava","sourceNew":"    public SKGSlotAcc(final RelatednessAgg agg, final FacetContext fcontext, final int numSlots,\n                      final DocSet fgSet, final DocSet bgSet) throws IOException {\n      super(fcontext);\n      this.agg = agg;\n      this.fgSet = fgSet;\n      this.bgSet = bgSet;\n      // cache the set sizes for frequent re-use on every slot\n      this.fgSize = fgSet.size();\n      this.bgSize = bgSet.size();\n      this.slotvalues = new BucketData[numSlots];\n      reset();\n    }\n\n","sourceOld":"    public SKGSlotAcc(final RelatednessAgg agg, final FacetRequest.FacetContext fcontext, final int numSlots,\n                      final DocSet fgSet, final DocSet bgSet) throws IOException {\n      super(fcontext);\n      this.agg = agg;\n      this.fgSet = fgSet;\n      this.bgSet = bgSet;\n      // cache the set sizes for frequent re-use on every slot\n      this.fgSize = fgSet.size();\n      this.bgSize = bgSet.size();\n      this.slotvalues = new BucketData[numSlots];\n      reset();\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2f9e4bd10604489b5817ee29e35ac96a3148cbec","date":1594345357,"type":3,"author":"Michael Gibney","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/facet/RelatednessAgg.SKGSlotAcc#SKGSlotAcc(RelatednessAgg,FacetContext,int,DocSet,DocSet).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/facet/RelatednessAgg.SKGSlotAcc#SKGSlotAcc(RelatednessAgg,FacetContext,int,DocSet,DocSet).mjava","sourceNew":"    public SKGSlotAcc(final RelatednessAgg agg, final FacetContext fcontext, final int numSlots,\n                      final DocSet fgSet, final DocSet bgSet) throws IOException {\n      super(fcontext);\n      this.agg = agg;\n      this.fgSet = fgSet;\n      this.bgSet = bgSet;\n      // cache the set sizes for frequent re-use on every slot\n      this.fgSize = fgSet.size();\n      this.bgSize = bgSet.size();\n      this.slotvalues = new BucketData[numSlots]; //TODO: avoid initializing array until we know we're not doing sweep collection?\n      reset();\n    }\n\n","sourceOld":"    public SKGSlotAcc(final RelatednessAgg agg, final FacetContext fcontext, final int numSlots,\n                      final DocSet fgSet, final DocSet bgSet) throws IOException {\n      super(fcontext);\n      this.agg = agg;\n      this.fgSet = fgSet;\n      this.bgSet = bgSet;\n      // cache the set sizes for frequent re-use on every slot\n      this.fgSize = fgSet.size();\n      this.bgSize = bgSet.size();\n      this.slotvalues = new BucketData[numSlots];\n      reset();\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"2f9e4bd10604489b5817ee29e35ac96a3148cbec":["a56a9893014b284af4d1af451e6c02e7ffdf5b6e"],"a56a9893014b284af4d1af451e6c02e7ffdf5b6e":["248f6ecc900c3a5633fd5ca6f564ea8b717720da"],"248f6ecc900c3a5633fd5ca6f564ea8b717720da":["42009f1fefcc8f4d9e07b158e9415cbd6ca7247c"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"42009f1fefcc8f4d9e07b158e9415cbd6ca7247c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["2f9e4bd10604489b5817ee29e35ac96a3148cbec"]},"commit2Childs":{"2f9e4bd10604489b5817ee29e35ac96a3148cbec":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a56a9893014b284af4d1af451e6c02e7ffdf5b6e":["2f9e4bd10604489b5817ee29e35ac96a3148cbec"],"248f6ecc900c3a5633fd5ca6f564ea8b717720da":["a56a9893014b284af4d1af451e6c02e7ffdf5b6e"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["42009f1fefcc8f4d9e07b158e9415cbd6ca7247c"],"42009f1fefcc8f4d9e07b158e9415cbd6ca7247c":["248f6ecc900c3a5633fd5ca6f564ea8b717720da"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}