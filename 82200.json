{"path":"src/java/org/apache/lucene/util/VirtualMethod#[C]_compareImplementationDistance(Class[#-extends-C],VirtualMethod[C],VirtualMethod[C]).mjava","commits":[{"id":"24c1288acaee3fa0fa246aa45f305b8d7fb0ac5e","date":1263329721,"type":0,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/java/org/apache/lucene/util/VirtualMethod#[C]_compareImplementationDistance(Class[#-extends-C],VirtualMethod[C],VirtualMethod[C]).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Utility method that compares the implementation/override distance of two methods.\n   * @return <ul>\n   *  <li>&gt; 1, iff {@code m1} is overridden/implemented in a subclass of the class overriding/declaring {@code m2}\n   *  <li>&lt; 1, iff {@code m2} is overridden in a subclass of the class overriding/declaring {@code m1}\n   *  <li>0, iff both methods are overridden in the same class (or are not overridden at all)\n   * </ul>\n   */\n  public static <C> int compareImplementationDistance(final Class<? extends C> clazz,\n    final VirtualMethod<C> m1, final VirtualMethod<C> m2)\n  {\n    return Integer.valueOf(m1.getImplementationDistance(clazz)).compareTo(m2.getImplementationDistance(clazz));\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/util/VirtualMethod#[C]_compareImplementationDistance(Class[#-extends-C],VirtualMethod[C],VirtualMethod[C]).mjava","pathOld":"src/java/org/apache/lucene/util/VirtualMethod#[C]_compareImplementationDistance(Class[#-extends-C],VirtualMethod[C],VirtualMethod[C]).mjava","sourceNew":"  /**\n   * Utility method that compares the implementation/override distance of two methods.\n   * @return <ul>\n   *  <li>&gt; 1, iff {@code m1} is overridden/implemented in a subclass of the class overriding/declaring {@code m2}\n   *  <li>&lt; 1, iff {@code m2} is overridden in a subclass of the class overriding/declaring {@code m1}\n   *  <li>0, iff both methods are overridden in the same class (or are not overridden at all)\n   * </ul>\n   */\n  public static <C> int compareImplementationDistance(final Class<? extends C> clazz,\n    final VirtualMethod<C> m1, final VirtualMethod<C> m2)\n  {\n    return Integer.valueOf(m1.getImplementationDistance(clazz)).compareTo(m2.getImplementationDistance(clazz));\n  }\n\n","sourceOld":"  /**\n   * Utility method that compares the implementation/override distance of two methods.\n   * @return <ul>\n   *  <li>&gt; 1, iff {@code m1} is overridden/implemented in a subclass of the class overriding/declaring {@code m2}\n   *  <li>&lt; 1, iff {@code m2} is overridden in a subclass of the class overriding/declaring {@code m1}\n   *  <li>0, iff both methods are overridden in the same class (or are not overridden at all)\n   * </ul>\n   */\n  public static <C> int compareImplementationDistance(final Class<? extends C> clazz,\n    final VirtualMethod<C> m1, final VirtualMethod<C> m2)\n  {\n    return Integer.valueOf(m1.getImplementationDistance(clazz)).compareTo(m2.getImplementationDistance(clazz));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"24c1288acaee3fa0fa246aa45f305b8d7fb0ac5e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["24c1288acaee3fa0fa246aa45f305b8d7fb0ac5e"]},"commit2Childs":{"24c1288acaee3fa0fa246aa45f305b8d7fb0ac5e":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["24c1288acaee3fa0fa246aa45f305b8d7fb0ac5e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}