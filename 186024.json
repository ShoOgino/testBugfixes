{"path":"lucene/core/src/java/org/apache/lucene/util/fst/Builder.UnCompiledNode#replaceLast(int,Node,T,boolean).mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/fst/Builder.UnCompiledNode#replaceLast(int,Node,T,boolean).mjava","pathOld":"lucene/src/java/org/apache/lucene/util/fst/Builder.UnCompiledNode#replaceLast(int,Node,T,boolean).mjava","sourceNew":"    public void replaceLast(int labelToMatch, Node target, T nextFinalOutput, boolean isFinal) {\n      assert numArcs > 0;\n      final Arc<T> arc = arcs[numArcs-1];\n      assert arc.label == labelToMatch: \"arc.label=\" + arc.label + \" vs \" + labelToMatch;\n      arc.target = target;\n      //assert target.node != -2;\n      arc.nextFinalOutput = nextFinalOutput;\n      arc.isFinal = isFinal;\n    }\n\n","sourceOld":"    public void replaceLast(int labelToMatch, Node target, T nextFinalOutput, boolean isFinal) {\n      assert numArcs > 0;\n      final Arc<T> arc = arcs[numArcs-1];\n      assert arc.label == labelToMatch: \"arc.label=\" + arc.label + \" vs \" + labelToMatch;\n      arc.target = target;\n      //assert target.node != -2;\n      arc.nextFinalOutput = nextFinalOutput;\n      arc.isFinal = isFinal;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0f5661e6a04d3172e262ad741b717924f2f1b6a5","date":1576244274,"type":5,"author":"Bruno Roustant","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/fst/FSTCompiler.UnCompiledNode#replaceLast(int,Node,T,boolean).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/fst/Builder.UnCompiledNode#replaceLast(int,Node,T,boolean).mjava","sourceNew":"    void replaceLast(int labelToMatch, Node target, T nextFinalOutput, boolean isFinal) {\n      assert numArcs > 0;\n      final Arc<T> arc = arcs[numArcs-1];\n      assert arc.label == labelToMatch: \"arc.label=\" + arc.label + \" vs \" + labelToMatch;\n      arc.target = target;\n      //assert target.node != -2;\n      arc.nextFinalOutput = nextFinalOutput;\n      arc.isFinal = isFinal;\n    }\n\n","sourceOld":"    public void replaceLast(int labelToMatch, Node target, T nextFinalOutput, boolean isFinal) {\n      assert numArcs > 0;\n      final Arc<T> arc = arcs[numArcs-1];\n      assert arc.label == labelToMatch: \"arc.label=\" + arc.label + \" vs \" + labelToMatch;\n      arc.target = target;\n      //assert target.node != -2;\n      arc.nextFinalOutput = nextFinalOutput;\n      arc.isFinal = isFinal;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c5db9bff3aeb942c848a2ab8fa4b8b0737377deb","date":1576247714,"type":5,"author":"Dawid Weiss","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/util/fst/FSTCompiler.UnCompiledNode#replaceLast(int,Node,T,boolean).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/fst/Builder.UnCompiledNode#replaceLast(int,Node,T,boolean).mjava","sourceNew":"    void replaceLast(int labelToMatch, Node target, T nextFinalOutput, boolean isFinal) {\n      assert numArcs > 0;\n      final Arc<T> arc = arcs[numArcs-1];\n      assert arc.label == labelToMatch: \"arc.label=\" + arc.label + \" vs \" + labelToMatch;\n      arc.target = target;\n      //assert target.node != -2;\n      arc.nextFinalOutput = nextFinalOutput;\n      arc.isFinal = isFinal;\n    }\n\n","sourceOld":"    public void replaceLast(int labelToMatch, Node target, T nextFinalOutput, boolean isFinal) {\n      assert numArcs > 0;\n      final Arc<T> arc = arcs[numArcs-1];\n      assert arc.label == labelToMatch: \"arc.label=\" + arc.label + \" vs \" + labelToMatch;\n      arc.target = target;\n      //assert target.node != -2;\n      arc.nextFinalOutput = nextFinalOutput;\n      arc.isFinal = isFinal;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"c5db9bff3aeb942c848a2ab8fa4b8b0737377deb":["3a119bbc8703c10faa329ec201c654b3a35a1e3e","0f5661e6a04d3172e262ad741b717924f2f1b6a5"],"0f5661e6a04d3172e262ad741b717924f2f1b6a5":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["0f5661e6a04d3172e262ad741b717924f2f1b6a5"]},"commit2Childs":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["c5db9bff3aeb942c848a2ab8fa4b8b0737377deb","0f5661e6a04d3172e262ad741b717924f2f1b6a5"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"c5db9bff3aeb942c848a2ab8fa4b8b0737377deb":[],"0f5661e6a04d3172e262ad741b717924f2f1b6a5":["c5db9bff3aeb942c848a2ab8fa4b8b0737377deb","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["c5db9bff3aeb942c848a2ab8fa4b8b0737377deb","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}