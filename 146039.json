{"path":"solr/core/src/java/org/apache/solr/util/stats/TimerUtils#addMetrics(NamedList[Object],Timer).mjava","commits":[{"id":"0f3e7752e8a5e963c6939aaa99c36134147a5ece","date":1479805653,"type":0,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/util/stats/TimerUtils#addMetrics(NamedList[Object],Timer).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Adds metrics from a Timer to a NamedList, using well-known names.\n   * @param lst The NamedList to add the metrics data to\n   * @param timer The Timer to extract the metrics from\n   */\n  public static void addMetrics(NamedList<Object> lst, Timer timer) {\n    Snapshot snapshot = timer.getSnapshot();\n    lst.add(\"avgRequestsPerMinute\", timer.getMeanRate());\n    lst.add(\"5minRateRequestsPerMinute\", timer.getFiveMinuteRate());\n    lst.add(\"15minRateRequestsPerMinute\", timer.getFifteenMinuteRate());\n    lst.add(\"avgTimePerRequest\", nsToMs(snapshot.getMean()));\n    lst.add(\"medianRequestTime\", nsToMs(snapshot.getMedian()));\n    lst.add(\"75thPcRequestTime\", nsToMs(snapshot.get75thPercentile()));\n    lst.add(\"95thPcRequestTime\", nsToMs(snapshot.get95thPercentile()));\n    lst.add(\"99thPcRequestTime\", nsToMs(snapshot.get99thPercentile()));\n    lst.add(\"999thPcRequestTime\", nsToMs(snapshot.get999thPercentile()));\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4eb5edf90df93f00e2f9bfe2628dfb058c2c81a3","date":1479922896,"type":3,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/util/stats/TimerUtils#addMetrics(NamedList[Object],Timer).mjava","pathOld":"solr/core/src/java/org/apache/solr/util/stats/TimerUtils#addMetrics(NamedList[Object],Timer).mjava","sourceNew":"  /**\n   * Adds metrics from a Timer to a NamedList, using well-known names.\n   * @param lst The NamedList to add the metrics data to\n   * @param timer The Timer to extract the metrics from\n   */\n  public static void addMetrics(NamedList<Object> lst, Timer timer) {\n    Snapshot snapshot = timer.getSnapshot();\n    lst.add(\"avgRequestsPerMinute\", convertRateToPerMinute(timer.getMeanRate()));\n    lst.add(\"5minRateRequestsPerMinute\", convertRateToPerMinute(timer.getFiveMinuteRate()));\n    lst.add(\"15minRateRequestsPerMinute\", convertRateToPerMinute(timer.getFifteenMinuteRate()));\n    lst.add(\"avgTimePerRequest\", nsToMs(snapshot.getMean()));\n    lst.add(\"medianRequestTime\", nsToMs(snapshot.getMedian()));\n    lst.add(\"75thPcRequestTime\", nsToMs(snapshot.get75thPercentile()));\n    lst.add(\"95thPcRequestTime\", nsToMs(snapshot.get95thPercentile()));\n    lst.add(\"99thPcRequestTime\", nsToMs(snapshot.get99thPercentile()));\n    lst.add(\"999thPcRequestTime\", nsToMs(snapshot.get999thPercentile()));\n  }\n\n","sourceOld":"  /**\n   * Adds metrics from a Timer to a NamedList, using well-known names.\n   * @param lst The NamedList to add the metrics data to\n   * @param timer The Timer to extract the metrics from\n   */\n  public static void addMetrics(NamedList<Object> lst, Timer timer) {\n    Snapshot snapshot = timer.getSnapshot();\n    lst.add(\"avgRequestsPerMinute\", timer.getMeanRate());\n    lst.add(\"5minRateRequestsPerMinute\", timer.getFiveMinuteRate());\n    lst.add(\"15minRateRequestsPerMinute\", timer.getFifteenMinuteRate());\n    lst.add(\"avgTimePerRequest\", nsToMs(snapshot.getMean()));\n    lst.add(\"medianRequestTime\", nsToMs(snapshot.getMedian()));\n    lst.add(\"75thPcRequestTime\", nsToMs(snapshot.get75thPercentile()));\n    lst.add(\"95thPcRequestTime\", nsToMs(snapshot.get95thPercentile()));\n    lst.add(\"99thPcRequestTime\", nsToMs(snapshot.get99thPercentile()));\n    lst.add(\"999thPcRequestTime\", nsToMs(snapshot.get999thPercentile()));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"226fc770efccd9e2012263fe97ee25f9d68e28f3","date":1479923448,"type":3,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/util/stats/TimerUtils#addMetrics(NamedList[Object],Timer).mjava","pathOld":"solr/core/src/java/org/apache/solr/util/stats/TimerUtils#addMetrics(NamedList[Object],Timer).mjava","sourceNew":"  /**\n   * Adds metrics from a Timer to a NamedList, using well-known names.\n   * @param lst The NamedList to add the metrics data to\n   * @param timer The Timer to extract the metrics from\n   */\n  public static void addMetrics(NamedList<Object> lst, Timer timer) {\n    Snapshot snapshot = timer.getSnapshot();\n    lst.add(\"avgRequestsPerSecond\", timer.getMeanRate());\n    lst.add(\"5minRateRequestsPerSecond\", timer.getFiveMinuteRate());\n    lst.add(\"15minRateRequestsPerSecond\", timer.getFifteenMinuteRate());\n    lst.add(\"avgTimePerRequest\", nsToMs(snapshot.getMean()));\n    lst.add(\"medianRequestTime\", nsToMs(snapshot.getMedian()));\n    lst.add(\"75thPcRequestTime\", nsToMs(snapshot.get75thPercentile()));\n    lst.add(\"95thPcRequestTime\", nsToMs(snapshot.get95thPercentile()));\n    lst.add(\"99thPcRequestTime\", nsToMs(snapshot.get99thPercentile()));\n    lst.add(\"999thPcRequestTime\", nsToMs(snapshot.get999thPercentile()));\n  }\n\n","sourceOld":"  /**\n   * Adds metrics from a Timer to a NamedList, using well-known names.\n   * @param lst The NamedList to add the metrics data to\n   * @param timer The Timer to extract the metrics from\n   */\n  public static void addMetrics(NamedList<Object> lst, Timer timer) {\n    Snapshot snapshot = timer.getSnapshot();\n    lst.add(\"avgRequestsPerMinute\", convertRateToPerMinute(timer.getMeanRate()));\n    lst.add(\"5minRateRequestsPerMinute\", convertRateToPerMinute(timer.getFiveMinuteRate()));\n    lst.add(\"15minRateRequestsPerMinute\", convertRateToPerMinute(timer.getFifteenMinuteRate()));\n    lst.add(\"avgTimePerRequest\", nsToMs(snapshot.getMean()));\n    lst.add(\"medianRequestTime\", nsToMs(snapshot.getMedian()));\n    lst.add(\"75thPcRequestTime\", nsToMs(snapshot.get75thPercentile()));\n    lst.add(\"95thPcRequestTime\", nsToMs(snapshot.get95thPercentile()));\n    lst.add(\"99thPcRequestTime\", nsToMs(snapshot.get99thPercentile()));\n    lst.add(\"999thPcRequestTime\", nsToMs(snapshot.get999thPercentile()));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"727bb765ff2542275f6d31f67be18d7104bae148","date":1480353976,"type":0,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/util/stats/TimerUtils#addMetrics(NamedList[Object],Timer).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Adds metrics from a Timer to a NamedList, using well-known names.\n   * @param lst The NamedList to add the metrics data to\n   * @param timer The Timer to extract the metrics from\n   */\n  public static void addMetrics(NamedList<Object> lst, Timer timer) {\n    Snapshot snapshot = timer.getSnapshot();\n    lst.add(\"avgRequestsPerSecond\", timer.getMeanRate());\n    lst.add(\"5minRateRequestsPerSecond\", timer.getFiveMinuteRate());\n    lst.add(\"15minRateRequestsPerSecond\", timer.getFifteenMinuteRate());\n    lst.add(\"avgTimePerRequest\", nsToMs(snapshot.getMean()));\n    lst.add(\"medianRequestTime\", nsToMs(snapshot.getMedian()));\n    lst.add(\"75thPcRequestTime\", nsToMs(snapshot.get75thPercentile()));\n    lst.add(\"95thPcRequestTime\", nsToMs(snapshot.get95thPercentile()));\n    lst.add(\"99thPcRequestTime\", nsToMs(snapshot.get99thPercentile()));\n    lst.add(\"999thPcRequestTime\", nsToMs(snapshot.get999thPercentile()));\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0265144286422ad99682a00904cc2536b79c8535","date":1482222684,"type":5,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/util/stats/MetricUtils#addMetrics(NamedList[Object],Timer).mjava","pathOld":"solr/core/src/java/org/apache/solr/util/stats/TimerUtils#addMetrics(NamedList[Object],Timer).mjava","sourceNew":"  /**\n   * Adds metrics from a Timer to a NamedList, using well-known names.\n   * @param lst The NamedList to add the metrics data to\n   * @param timer The Timer to extract the metrics from\n   */\n  public static void addMetrics(NamedList<Object> lst, Timer timer) {\n    Snapshot snapshot = timer.getSnapshot();\n    lst.add(\"avgRequestsPerSecond\", timer.getMeanRate());\n    lst.add(\"5minRateRequestsPerSecond\", timer.getFiveMinuteRate());\n    lst.add(\"15minRateRequestsPerSecond\", timer.getFifteenMinuteRate());\n    lst.add(\"avgTimePerRequest\", nsToMs(snapshot.getMean()));\n    lst.add(\"medianRequestTime\", nsToMs(snapshot.getMedian()));\n    lst.add(\"75thPcRequestTime\", nsToMs(snapshot.get75thPercentile()));\n    lst.add(\"95thPcRequestTime\", nsToMs(snapshot.get95thPercentile()));\n    lst.add(\"99thPcRequestTime\", nsToMs(snapshot.get99thPercentile()));\n    lst.add(\"999thPcRequestTime\", nsToMs(snapshot.get999thPercentile()));\n  }\n\n","sourceOld":"  /**\n   * Adds metrics from a Timer to a NamedList, using well-known names.\n   * @param lst The NamedList to add the metrics data to\n   * @param timer The Timer to extract the metrics from\n   */\n  public static void addMetrics(NamedList<Object> lst, Timer timer) {\n    Snapshot snapshot = timer.getSnapshot();\n    lst.add(\"avgRequestsPerSecond\", timer.getMeanRate());\n    lst.add(\"5minRateRequestsPerSecond\", timer.getFiveMinuteRate());\n    lst.add(\"15minRateRequestsPerSecond\", timer.getFifteenMinuteRate());\n    lst.add(\"avgTimePerRequest\", nsToMs(snapshot.getMean()));\n    lst.add(\"medianRequestTime\", nsToMs(snapshot.getMedian()));\n    lst.add(\"75thPcRequestTime\", nsToMs(snapshot.get75thPercentile()));\n    lst.add(\"95thPcRequestTime\", nsToMs(snapshot.get95thPercentile()));\n    lst.add(\"99thPcRequestTime\", nsToMs(snapshot.get99thPercentile()));\n    lst.add(\"999thPcRequestTime\", nsToMs(snapshot.get999thPercentile()));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5acd68c5f07f7ee604c2eeffe801f4a2d7a1a5bf","date":1482251961,"type":5,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/util/stats/MetricUtils#addMetrics(NamedList[Object],Timer).mjava","pathOld":"solr/core/src/java/org/apache/solr/util/stats/TimerUtils#addMetrics(NamedList[Object],Timer).mjava","sourceNew":"  /**\n   * Adds metrics from a Timer to a NamedList, using well-known names.\n   * @param lst The NamedList to add the metrics data to\n   * @param timer The Timer to extract the metrics from\n   */\n  public static void addMetrics(NamedList<Object> lst, Timer timer) {\n    Snapshot snapshot = timer.getSnapshot();\n    lst.add(\"avgRequestsPerSecond\", timer.getMeanRate());\n    lst.add(\"5minRateRequestsPerSecond\", timer.getFiveMinuteRate());\n    lst.add(\"15minRateRequestsPerSecond\", timer.getFifteenMinuteRate());\n    lst.add(\"avgTimePerRequest\", nsToMs(snapshot.getMean()));\n    lst.add(\"medianRequestTime\", nsToMs(snapshot.getMedian()));\n    lst.add(\"75thPcRequestTime\", nsToMs(snapshot.get75thPercentile()));\n    lst.add(\"95thPcRequestTime\", nsToMs(snapshot.get95thPercentile()));\n    lst.add(\"99thPcRequestTime\", nsToMs(snapshot.get99thPercentile()));\n    lst.add(\"999thPcRequestTime\", nsToMs(snapshot.get999thPercentile()));\n  }\n\n","sourceOld":"  /**\n   * Adds metrics from a Timer to a NamedList, using well-known names.\n   * @param lst The NamedList to add the metrics data to\n   * @param timer The Timer to extract the metrics from\n   */\n  public static void addMetrics(NamedList<Object> lst, Timer timer) {\n    Snapshot snapshot = timer.getSnapshot();\n    lst.add(\"avgRequestsPerSecond\", timer.getMeanRate());\n    lst.add(\"5minRateRequestsPerSecond\", timer.getFiveMinuteRate());\n    lst.add(\"15minRateRequestsPerSecond\", timer.getFifteenMinuteRate());\n    lst.add(\"avgTimePerRequest\", nsToMs(snapshot.getMean()));\n    lst.add(\"medianRequestTime\", nsToMs(snapshot.getMedian()));\n    lst.add(\"75thPcRequestTime\", nsToMs(snapshot.get75thPercentile()));\n    lst.add(\"95thPcRequestTime\", nsToMs(snapshot.get95thPercentile()));\n    lst.add(\"99thPcRequestTime\", nsToMs(snapshot.get99thPercentile()));\n    lst.add(\"999thPcRequestTime\", nsToMs(snapshot.get999thPercentile()));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"0265144286422ad99682a00904cc2536b79c8535":["226fc770efccd9e2012263fe97ee25f9d68e28f3"],"0f3e7752e8a5e963c6939aaa99c36134147a5ece":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"727bb765ff2542275f6d31f67be18d7104bae148":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","226fc770efccd9e2012263fe97ee25f9d68e28f3"],"5acd68c5f07f7ee604c2eeffe801f4a2d7a1a5bf":["727bb765ff2542275f6d31f67be18d7104bae148","0265144286422ad99682a00904cc2536b79c8535"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"4eb5edf90df93f00e2f9bfe2628dfb058c2c81a3":["0f3e7752e8a5e963c6939aaa99c36134147a5ece"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["0265144286422ad99682a00904cc2536b79c8535"],"226fc770efccd9e2012263fe97ee25f9d68e28f3":["4eb5edf90df93f00e2f9bfe2628dfb058c2c81a3"]},"commit2Childs":{"0265144286422ad99682a00904cc2536b79c8535":["5acd68c5f07f7ee604c2eeffe801f4a2d7a1a5bf","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"0f3e7752e8a5e963c6939aaa99c36134147a5ece":["4eb5edf90df93f00e2f9bfe2628dfb058c2c81a3"],"727bb765ff2542275f6d31f67be18d7104bae148":["5acd68c5f07f7ee604c2eeffe801f4a2d7a1a5bf"],"5acd68c5f07f7ee604c2eeffe801f4a2d7a1a5bf":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["0f3e7752e8a5e963c6939aaa99c36134147a5ece","727bb765ff2542275f6d31f67be18d7104bae148"],"4eb5edf90df93f00e2f9bfe2628dfb058c2c81a3":["226fc770efccd9e2012263fe97ee25f9d68e28f3"],"226fc770efccd9e2012263fe97ee25f9d68e28f3":["0265144286422ad99682a00904cc2536b79c8535","727bb765ff2542275f6d31f67be18d7104bae148"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["5acd68c5f07f7ee604c2eeffe801f4a2d7a1a5bf","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}