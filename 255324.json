{"path":"solr/core/src/test/org/apache/solr/rest/schema/TestFieldCollectionResource#testGetAllFields().mjava","commits":[{"id":"d2fa053a06c9c158f82d8e8b53b9a95031f43ebd","date":1364185773,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/rest/schema/TestFieldCollectionResource#testGetAllFields().mjava","pathOld":"solr/core/src/test/org/apache/solr/rest/TestFieldCollectionResource#testGetAllFields().mjava","sourceNew":"  @Test\n  public void testGetAllFields() throws Exception {\n    assertQ(\"/schema/fields?indent=on&wt=xml\",\n            \"(/response/arr[@name='fields']/lst/str[@name='name'])[1] = 'HTMLstandardtok'\",\n            \"(/response/arr[@name='fields']/lst/str[@name='name'])[2] = 'HTMLwhitetok'\",\n            \"(/response/arr[@name='fields']/lst/str[@name='name'])[3] = '_version_'\");\n  }\n\n","sourceOld":"  @Test\n  public void testGetAllFields() throws Exception {\n    assertQ(\"/schema/fields?indent=on&wt=xml\",\n            \"(/response/arr[@name='fields']/lst/str[@name='name'])[1] = 'HTMLstandardtok'\",\n            \"(/response/arr[@name='fields']/lst/str[@name='name'])[2] = 'HTMLwhitetok'\",\n            \"(/response/arr[@name='fields']/lst/str[@name='name'])[3] = '_version_'\",\n            \"count(//copySources/str) = count(//copyDests/str)\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ac1e7fa558287a811ea07634d815ee7b1c541284","date":1500910922,"type":3,"author":"Chris Hostetter","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/rest/schema/TestFieldCollectionResource#testGetAllFields().mjava","pathOld":"solr/core/src/test/org/apache/solr/rest/schema/TestFieldCollectionResource#testGetAllFields().mjava","sourceNew":"  @Test\n  public void testGetAllFields() throws Exception {\n    assertJQ(\"/schema/fields\",\n             \"/fields/[0]/name=='HTMLstandardtok'\",\n             \"/fields/[1]/name=='HTMLwhitetok'\",\n             \"/fields/[2]/name=='_version_'\");\n  }\n\n","sourceOld":"  @Test\n  public void testGetAllFields() throws Exception {\n    assertQ(\"/schema/fields?indent=on&wt=xml\",\n            \"(/response/arr[@name='fields']/lst/str[@name='name'])[1] = 'HTMLstandardtok'\",\n            \"(/response/arr[@name='fields']/lst/str[@name='name'])[2] = 'HTMLwhitetok'\",\n            \"(/response/arr[@name='fields']/lst/str[@name='name'])[3] = '_version_'\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"936cdd5882761db3b844afd6f84ab81cbb011a75","date":1500973524,"type":3,"author":"Cao Manh Dat","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/rest/schema/TestFieldCollectionResource#testGetAllFields().mjava","pathOld":"solr/core/src/test/org/apache/solr/rest/schema/TestFieldCollectionResource#testGetAllFields().mjava","sourceNew":"  @Test\n  public void testGetAllFields() throws Exception {\n    assertJQ(\"/schema/fields\",\n             \"/fields/[0]/name=='HTMLstandardtok'\",\n             \"/fields/[1]/name=='HTMLwhitetok'\",\n             \"/fields/[2]/name=='_version_'\");\n  }\n\n","sourceOld":"  @Test\n  public void testGetAllFields() throws Exception {\n    assertQ(\"/schema/fields?indent=on&wt=xml\",\n            \"(/response/arr[@name='fields']/lst/str[@name='name'])[1] = 'HTMLstandardtok'\",\n            \"(/response/arr[@name='fields']/lst/str[@name='name'])[2] = 'HTMLwhitetok'\",\n            \"(/response/arr[@name='fields']/lst/str[@name='name'])[3] = '_version_'\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a52341299179de5479672f7cf518bf4b173f34b3","date":1501079746,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/rest/schema/TestFieldCollectionResource#testGetAllFields().mjava","pathOld":"solr/core/src/test/org/apache/solr/rest/schema/TestFieldCollectionResource#testGetAllFields().mjava","sourceNew":"  @Test\n  public void testGetAllFields() throws Exception {\n    assertJQ(\"/schema/fields\",\n             \"/fields/[0]/name=='HTMLstandardtok'\",\n             \"/fields/[1]/name=='HTMLwhitetok'\",\n             \"/fields/[2]/name=='_version_'\");\n  }\n\n","sourceOld":"  @Test\n  public void testGetAllFields() throws Exception {\n    assertQ(\"/schema/fields?indent=on&wt=xml\",\n            \"(/response/arr[@name='fields']/lst/str[@name='name'])[1] = 'HTMLstandardtok'\",\n            \"(/response/arr[@name='fields']/lst/str[@name='name'])[2] = 'HTMLwhitetok'\",\n            \"(/response/arr[@name='fields']/lst/str[@name='name'])[3] = '_version_'\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a52341299179de5479672f7cf518bf4b173f34b3":["d2fa053a06c9c158f82d8e8b53b9a95031f43ebd","ac1e7fa558287a811ea07634d815ee7b1c541284"],"d2fa053a06c9c158f82d8e8b53b9a95031f43ebd":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"936cdd5882761db3b844afd6f84ab81cbb011a75":["d2fa053a06c9c158f82d8e8b53b9a95031f43ebd","ac1e7fa558287a811ea07634d815ee7b1c541284"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a52341299179de5479672f7cf518bf4b173f34b3"],"ac1e7fa558287a811ea07634d815ee7b1c541284":["d2fa053a06c9c158f82d8e8b53b9a95031f43ebd"]},"commit2Childs":{"a52341299179de5479672f7cf518bf4b173f34b3":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"d2fa053a06c9c158f82d8e8b53b9a95031f43ebd":["a52341299179de5479672f7cf518bf4b173f34b3","936cdd5882761db3b844afd6f84ab81cbb011a75","ac1e7fa558287a811ea07634d815ee7b1c541284"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["d2fa053a06c9c158f82d8e8b53b9a95031f43ebd"],"936cdd5882761db3b844afd6f84ab81cbb011a75":[],"ac1e7fa558287a811ea07634d815ee7b1c541284":["a52341299179de5479672f7cf518bf4b173f34b3","936cdd5882761db3b844afd6f84ab81cbb011a75"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["936cdd5882761db3b844afd6f84ab81cbb011a75","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}