{"path":"solr/solrj/src/java/org/apache/solr/cloud/autoscaling/Clause.Violation#Violation(String,String,String,Object,Integer,Object).mjava","commits":[{"id":"901d2a2f2fe0ff00c1c8578904e1f42e6ccbb21b","date":1495756308,"type":1,"author":"Noble Paul","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/cloud/autoscaling/Clause.Violation#Violation(String,String,String,Object,Integer,Object).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/cloud/autoscaling/Clause.Violation#Violation(String,String,String,Object,Integer).mjava","sourceNew":"    private Violation(String coll, String shard, String node, Object actualVal, Integer delta, Object tagKey) {\n      this.shard = shard;\n      this.coll = coll;\n      this.node = node;\n      this.delta = delta;\n      this.actualVal = actualVal;\n      this.tagKey = tagKey;\n      hash = (\"\" + coll + \" \" + shard + \" \" + node + \" \" + String.valueOf(tagKey) + \" \" + Utils.toJSONString(getClause().toMap(new HashMap<>()))).hashCode();\n    }\n\n","sourceOld":"    private Violation(String coll, String shard, String node, Object actualVal, Integer delta ) {\n      this.shard = shard;\n      this.coll = coll;\n      this.node = node;\n      this.delta = delta;\n      this.actualVal = actualVal;\n      hash = (\"\" + coll + \" \" + shard + \" \" + node + \" \" + Utils.toJSONString(getClause().toMap(new HashMap<>()))).hashCode();\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a513b6a92751e54c76fb5447948c9e7d437163a7","date":1496136565,"type":0,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/cloud/autoscaling/Clause.Violation#Violation(String,String,String,Object,Integer,Object).mjava","pathOld":"/dev/null","sourceNew":"    private Violation(String coll, String shard, String node, Object actualVal, Integer delta, Object tagKey) {\n      this.shard = shard;\n      this.coll = coll;\n      this.node = node;\n      this.delta = delta;\n      this.actualVal = actualVal;\n      this.tagKey = tagKey;\n      hash = (\"\" + coll + \" \" + shard + \" \" + node + \" \" + String.valueOf(tagKey) + \" \" + Utils.toJSONString(getClause().toMap(new HashMap<>()))).hashCode();\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"74aea047dff7f7c38a2d766827bd20d356f98c6a","date":1496721416,"type":0,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"solr/solrj/src/java/org/apache/solr/cloud/autoscaling/Clause.Violation#Violation(String,String,String,Object,Integer,Object).mjava","pathOld":"/dev/null","sourceNew":"    private Violation(String coll, String shard, String node, Object actualVal, Integer delta, Object tagKey) {\n      this.shard = shard;\n      this.coll = coll;\n      this.node = node;\n      this.delta = delta;\n      this.actualVal = actualVal;\n      this.tagKey = tagKey;\n      hash = (\"\" + coll + \" \" + shard + \" \" + node + \" \" + String.valueOf(tagKey) + \" \" + Utils.toJSONString(getClause().toMap(new HashMap<>()))).hashCode();\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1852ff897aecd2f7c8376a02aedfd44104533f28","date":1498224361,"type":5,"author":"Noble Paul","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/cloud/autoscaling/Clause.Violation#Violation(String,String,String,Object,Long,Object).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/cloud/autoscaling/Clause.Violation#Violation(String,String,String,Object,Integer,Object).mjava","sourceNew":"    private Violation(String coll, String shard, String node, Object actualVal, Long delta, Object tagKey) {\n      this.shard = shard;\n      this.coll = coll;\n      this.node = node;\n      this.delta = delta;\n      this.actualVal = actualVal;\n      this.tagKey = tagKey;\n      hash = (\"\" + coll + \" \" + shard + \" \" + node + \" \" + String.valueOf(tagKey) + \" \" + Utils.toJSONString(getClause().toMap(new HashMap<>()))).hashCode();\n    }\n\n","sourceOld":"    private Violation(String coll, String shard, String node, Object actualVal, Integer delta, Object tagKey) {\n      this.shard = shard;\n      this.coll = coll;\n      this.node = node;\n      this.delta = delta;\n      this.actualVal = actualVal;\n      this.tagKey = tagKey;\n      hash = (\"\" + coll + \" \" + shard + \" \" + node + \" \" + String.valueOf(tagKey) + \" \" + Utils.toJSONString(getClause().toMap(new HashMap<>()))).hashCode();\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6249f3a9e6b3580715fd7ab5f4da0bf6e096f8f2","date":1498616740,"type":5,"author":"Ishan Chattopadhyaya","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/cloud/autoscaling/Clause.Violation#Violation(String,String,String,Object,Integer,Object).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/cloud/autoscaling/Clause.Violation#Violation(String,String,String,Object,Integer,Object).mjava","sourceNew":"    private Violation(String coll, String shard, String node, Object actualVal, Integer delta, Object tagKey) {\n      this.shard = shard;\n      this.coll = coll;\n      this.node = node;\n      this.delta = delta;\n      this.actualVal = actualVal;\n      this.tagKey = tagKey;\n      hash = (\"\" + coll + \" \" + shard + \" \" + node + \" \" + String.valueOf(tagKey) + \" \" + Utils.toJSONString(getClause().toMap(new HashMap<>()))).hashCode();\n    }\n\n","sourceOld":"    private Violation(String coll, String shard, String node, Object actualVal, Integer delta, Object tagKey) {\n      this.shard = shard;\n      this.coll = coll;\n      this.node = node;\n      this.delta = delta;\n      this.actualVal = actualVal;\n      this.tagKey = tagKey;\n      hash = (\"\" + coll + \" \" + shard + \" \" + node + \" \" + String.valueOf(tagKey) + \" \" + Utils.toJSONString(getClause().toMap(new HashMap<>()))).hashCode();\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"901d2a2f2fe0ff00c1c8578904e1f42e6ccbb21b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"6249f3a9e6b3580715fd7ab5f4da0bf6e096f8f2":["74aea047dff7f7c38a2d766827bd20d356f98c6a"],"1852ff897aecd2f7c8376a02aedfd44104533f28":["901d2a2f2fe0ff00c1c8578904e1f42e6ccbb21b"],"74aea047dff7f7c38a2d766827bd20d356f98c6a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","a513b6a92751e54c76fb5447948c9e7d437163a7"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a513b6a92751e54c76fb5447948c9e7d437163a7":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"901d2a2f2fe0ff00c1c8578904e1f42e6ccbb21b":["1852ff897aecd2f7c8376a02aedfd44104533f28"],"6249f3a9e6b3580715fd7ab5f4da0bf6e096f8f2":[],"1852ff897aecd2f7c8376a02aedfd44104533f28":[],"74aea047dff7f7c38a2d766827bd20d356f98c6a":["6249f3a9e6b3580715fd7ab5f4da0bf6e096f8f2"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["901d2a2f2fe0ff00c1c8578904e1f42e6ccbb21b","74aea047dff7f7c38a2d766827bd20d356f98c6a","a513b6a92751e54c76fb5447948c9e7d437163a7","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a513b6a92751e54c76fb5447948c9e7d437163a7":["74aea047dff7f7c38a2d766827bd20d356f98c6a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["6249f3a9e6b3580715fd7ab5f4da0bf6e096f8f2","1852ff897aecd2f7c8376a02aedfd44104533f28","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}