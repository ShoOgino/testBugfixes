{"path":"solr/core/src/java/org/apache/solr/handler/ReplicationHandler#getFileStream(SolrParams,SolrQueryResponse).mjava","commits":[{"id":"c903c3d15906a3da96b8c0c2fb704491005fdbdb","date":1453508227,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/ReplicationHandler#getFileStream(SolrParams,SolrQueryResponse).mjava","pathOld":"solr/src/java/org/apache/solr/handler/ReplicationHandler#getFileStream(SolrParams,SolrQueryResponse).mjava","sourceNew":"  /**\n   * This method adds an Object of FileStream to the resposnse . The FileStream implements a custom protocol which is\n   * understood by SnapPuller.FileFetcher\n   *\n   * @see org.apache.solr.handler.SnapPuller.FileFetcher\n   */\n  private void getFileStream(SolrParams solrParams, SolrQueryResponse rsp) {\n    ModifiableSolrParams rawParams = new ModifiableSolrParams(solrParams);\n    rawParams.set(CommonParams.WT, FILE_STREAM);\n    rsp.add(FILE_STREAM, new FileStream(solrParams));\n  }\n\n","sourceOld":"  /**\n   * This method adds an Object of FileStream to the resposnse . The FileStream implements a custom protocol which is\n   * understood by SnapPuller.FileFetcher\n   *\n   * @see org.apache.solr.handler.SnapPuller.FileFetcher\n   */\n  private void getFileStream(SolrParams solrParams, SolrQueryResponse rsp) {\n    ModifiableSolrParams rawParams = new ModifiableSolrParams(solrParams);\n    rawParams.set(CommonParams.WT, FILE_STREAM);\n    rsp.add(FILE_STREAM, new FileStream(solrParams));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a258fbb26824fd104ed795e5d9033d2d040049ee","date":1453508252,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/ReplicationHandler#getFileStream(SolrParams,SolrQueryResponse).mjava","pathOld":"solr/src/java/org/apache/solr/handler/ReplicationHandler#getFileStream(SolrParams,SolrQueryResponse).mjava","sourceNew":"  /**\n   * This method adds an Object of FileStream to the resposnse . The FileStream implements a custom protocol which is\n   * understood by SnapPuller.FileFetcher\n   *\n   * @see org.apache.solr.handler.SnapPuller.FileFetcher\n   */\n  private void getFileStream(SolrParams solrParams, SolrQueryResponse rsp) {\n    ModifiableSolrParams rawParams = new ModifiableSolrParams(solrParams);\n    rawParams.set(CommonParams.WT, FILE_STREAM);\n    rsp.add(FILE_STREAM, new FileStream(solrParams));\n  }\n\n","sourceOld":"  /**\n   * This method adds an Object of FileStream to the resposnse . The FileStream implements a custom protocol which is\n   * understood by SnapPuller.FileFetcher\n   *\n   * @see org.apache.solr.handler.SnapPuller.FileFetcher\n   */\n  private void getFileStream(SolrParams solrParams, SolrQueryResponse rsp) {\n    ModifiableSolrParams rawParams = new ModifiableSolrParams(solrParams);\n    rawParams.set(CommonParams.WT, FILE_STREAM);\n    rsp.add(FILE_STREAM, new FileStream(solrParams));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/handler/ReplicationHandler#getFileStream(SolrParams,SolrQueryResponse).mjava","pathOld":"solr/src/java/org/apache/solr/handler/ReplicationHandler#getFileStream(SolrParams,SolrQueryResponse).mjava","sourceNew":"  /**\n   * This method adds an Object of FileStream to the resposnse . The FileStream implements a custom protocol which is\n   * understood by SnapPuller.FileFetcher\n   *\n   * @see org.apache.solr.handler.SnapPuller.FileFetcher\n   */\n  private void getFileStream(SolrParams solrParams, SolrQueryResponse rsp) {\n    ModifiableSolrParams rawParams = new ModifiableSolrParams(solrParams);\n    rawParams.set(CommonParams.WT, FILE_STREAM);\n    rsp.add(FILE_STREAM, new FileStream(solrParams));\n  }\n\n","sourceOld":"  /**\n   * This method adds an Object of FileStream to the resposnse . The FileStream implements a custom protocol which is\n   * understood by SnapPuller.FileFetcher\n   *\n   * @see org.apache.solr.handler.SnapPuller.FileFetcher\n   */\n  private void getFileStream(SolrParams solrParams, SolrQueryResponse rsp) {\n    ModifiableSolrParams rawParams = new ModifiableSolrParams(solrParams);\n    rawParams.set(CommonParams.WT, FILE_STREAM);\n    rsp.add(FILE_STREAM, new FileStream(solrParams));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d9405f486872f1e416304dfe389741f4ee2f8a4d","date":1351276739,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/ReplicationHandler#getFileStream(SolrParams,SolrQueryResponse).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/ReplicationHandler#getFileStream(SolrParams,SolrQueryResponse).mjava","sourceNew":"  /**\n   * This method adds an Object of FileStream to the response . The FileStream implements a custom protocol which is\n   * understood by SnapPuller.FileFetcher\n   *\n   * @see org.apache.solr.handler.SnapPuller.LocalFsFileFetcher\n   * @see org.apache.solr.handler.SnapPuller.DirectoryFileFetcher\n   */\n  private void getFileStream(SolrParams solrParams, SolrQueryResponse rsp) {\n    ModifiableSolrParams rawParams = new ModifiableSolrParams(solrParams);\n    rawParams.set(CommonParams.WT, FILE_STREAM);\n    \n    String cfileName = solrParams.get(CONF_FILE_SHORT);\n    if (cfileName != null) {\n      rsp.add(FILE_STREAM, new LocalFsFileStream(solrParams));\n    } else {\n      rsp.add(FILE_STREAM, new DirectoryFileStream(solrParams));\n    }\n  }\n\n","sourceOld":"  /**\n   * This method adds an Object of FileStream to the resposnse . The FileStream implements a custom protocol which is\n   * understood by SnapPuller.FileFetcher\n   *\n   * @see org.apache.solr.handler.SnapPuller.FileFetcher\n   */\n  private void getFileStream(SolrParams solrParams, SolrQueryResponse rsp) {\n    ModifiableSolrParams rawParams = new ModifiableSolrParams(solrParams);\n    rawParams.set(CommonParams.WT, FILE_STREAM);\n    rsp.add(FILE_STREAM, new FileStream(solrParams));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f2126b84bd093fa3d921582a109a0ee578c28126","date":1351522501,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/handler/ReplicationHandler#getFileStream(SolrParams,SolrQueryResponse).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/ReplicationHandler#getFileStream(SolrParams,SolrQueryResponse).mjava","sourceNew":"  /**\n   * This method adds an Object of FileStream to the response . The FileStream implements a custom protocol which is\n   * understood by SnapPuller.FileFetcher\n   *\n   * @see org.apache.solr.handler.SnapPuller.LocalFsFileFetcher\n   * @see org.apache.solr.handler.SnapPuller.DirectoryFileFetcher\n   */\n  private void getFileStream(SolrParams solrParams, SolrQueryResponse rsp) {\n    ModifiableSolrParams rawParams = new ModifiableSolrParams(solrParams);\n    rawParams.set(CommonParams.WT, FILE_STREAM);\n    \n    String cfileName = solrParams.get(CONF_FILE_SHORT);\n    if (cfileName != null) {\n      rsp.add(FILE_STREAM, new LocalFsFileStream(solrParams));\n    } else {\n      rsp.add(FILE_STREAM, new DirectoryFileStream(solrParams));\n    }\n  }\n\n","sourceOld":"  /**\n   * This method adds an Object of FileStream to the resposnse . The FileStream implements a custom protocol which is\n   * understood by SnapPuller.FileFetcher\n   *\n   * @see org.apache.solr.handler.SnapPuller.FileFetcher\n   */\n  private void getFileStream(SolrParams solrParams, SolrQueryResponse rsp) {\n    ModifiableSolrParams rawParams = new ModifiableSolrParams(solrParams);\n    rawParams.set(CommonParams.WT, FILE_STREAM);\n    rsp.add(FILE_STREAM, new FileStream(solrParams));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"20f6b7cff3771384f27af0f059795d7e64aff6b9","date":1425498309,"type":3,"author":"Ramkumar Aiyengar","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/ReplicationHandler#getFileStream(SolrParams,SolrQueryResponse).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/ReplicationHandler#getFileStream(SolrParams,SolrQueryResponse).mjava","sourceNew":"  /**\n   * This method adds an Object of FileStream to the response . The FileStream implements a custom protocol which is\n   * understood by IndexFetcher.FileFetcher\n   *\n   * @see IndexFetcher.LocalFsFileFetcher\n   * @see IndexFetcher.DirectoryFileFetcher\n   */\n  private void getFileStream(SolrParams solrParams, SolrQueryResponse rsp) {\n    ModifiableSolrParams rawParams = new ModifiableSolrParams(solrParams);\n    rawParams.set(CommonParams.WT, FILE_STREAM);\n    \n    String cfileName = solrParams.get(CONF_FILE_SHORT);\n    if (cfileName != null) {\n      rsp.add(FILE_STREAM, new LocalFsFileStream(solrParams));\n    } else {\n      rsp.add(FILE_STREAM, new DirectoryFileStream(solrParams));\n    }\n  }\n\n","sourceOld":"  /**\n   * This method adds an Object of FileStream to the response . The FileStream implements a custom protocol which is\n   * understood by SnapPuller.FileFetcher\n   *\n   * @see org.apache.solr.handler.SnapPuller.LocalFsFileFetcher\n   * @see org.apache.solr.handler.SnapPuller.DirectoryFileFetcher\n   */\n  private void getFileStream(SolrParams solrParams, SolrQueryResponse rsp) {\n    ModifiableSolrParams rawParams = new ModifiableSolrParams(solrParams);\n    rawParams.set(CommonParams.WT, FILE_STREAM);\n    \n    String cfileName = solrParams.get(CONF_FILE_SHORT);\n    if (cfileName != null) {\n      rsp.add(FILE_STREAM, new LocalFsFileStream(solrParams));\n    } else {\n      rsp.add(FILE_STREAM, new DirectoryFileStream(solrParams));\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","date":1427779360,"type":3,"author":"Ryan Ernst","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/handler/ReplicationHandler#getFileStream(SolrParams,SolrQueryResponse).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/ReplicationHandler#getFileStream(SolrParams,SolrQueryResponse).mjava","sourceNew":"  /**\n   * This method adds an Object of FileStream to the response . The FileStream implements a custom protocol which is\n   * understood by IndexFetcher.FileFetcher\n   *\n   * @see IndexFetcher.LocalFsFileFetcher\n   * @see IndexFetcher.DirectoryFileFetcher\n   */\n  private void getFileStream(SolrParams solrParams, SolrQueryResponse rsp) {\n    ModifiableSolrParams rawParams = new ModifiableSolrParams(solrParams);\n    rawParams.set(CommonParams.WT, FILE_STREAM);\n    \n    String cfileName = solrParams.get(CONF_FILE_SHORT);\n    if (cfileName != null) {\n      rsp.add(FILE_STREAM, new LocalFsFileStream(solrParams));\n    } else {\n      rsp.add(FILE_STREAM, new DirectoryFileStream(solrParams));\n    }\n  }\n\n","sourceOld":"  /**\n   * This method adds an Object of FileStream to the response . The FileStream implements a custom protocol which is\n   * understood by SnapPuller.FileFetcher\n   *\n   * @see org.apache.solr.handler.SnapPuller.LocalFsFileFetcher\n   * @see org.apache.solr.handler.SnapPuller.DirectoryFileFetcher\n   */\n  private void getFileStream(SolrParams solrParams, SolrQueryResponse rsp) {\n    ModifiableSolrParams rawParams = new ModifiableSolrParams(solrParams);\n    rawParams.set(CommonParams.WT, FILE_STREAM);\n    \n    String cfileName = solrParams.get(CONF_FILE_SHORT);\n    if (cfileName != null) {\n      rsp.add(FILE_STREAM, new LocalFsFileStream(solrParams));\n    } else {\n      rsp.add(FILE_STREAM, new DirectoryFileStream(solrParams));\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7b13106276bb5ea342253dbf6aae7b675adb38d3","date":1428054414,"type":3,"author":"Varun Thacker","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/ReplicationHandler#getFileStream(SolrParams,SolrQueryResponse).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/ReplicationHandler#getFileStream(SolrParams,SolrQueryResponse).mjava","sourceNew":"  /**\n   * This method adds an Object of FileStream to the response . The FileStream implements a custom protocol which is\n   * understood by IndexFetcher.FileFetcher\n   *\n   * @see IndexFetcher.LocalFsFileFetcher\n   * @see IndexFetcher.DirectoryFileFetcher\n   */\n  private void getFileStream(SolrParams solrParams, SolrQueryResponse rsp) {\n    ModifiableSolrParams rawParams = new ModifiableSolrParams(solrParams);\n    rawParams.set(CommonParams.WT, FILE_STREAM);\n\n    String cfileName = solrParams.get(CONF_FILE_SHORT);\n    if (cfileName != null) {\n      rsp.add(FILE_STREAM, new LocalFsFileStream(solrParams));\n    } else {\n      rsp.add(FILE_STREAM, new DirectoryFileStream(solrParams));\n    }\n  }\n\n","sourceOld":"  /**\n   * This method adds an Object of FileStream to the response . The FileStream implements a custom protocol which is\n   * understood by IndexFetcher.FileFetcher\n   *\n   * @see IndexFetcher.LocalFsFileFetcher\n   * @see IndexFetcher.DirectoryFileFetcher\n   */\n  private void getFileStream(SolrParams solrParams, SolrQueryResponse rsp) {\n    ModifiableSolrParams rawParams = new ModifiableSolrParams(solrParams);\n    rawParams.set(CommonParams.WT, FILE_STREAM);\n    \n    String cfileName = solrParams.get(CONF_FILE_SHORT);\n    if (cfileName != null) {\n      rsp.add(FILE_STREAM, new LocalFsFileStream(solrParams));\n    } else {\n      rsp.add(FILE_STREAM, new DirectoryFileStream(solrParams));\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6c757ac42dd1f3f893db5c4d89c61cbe1a9fab6c","date":1428091986,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/handler/ReplicationHandler#getFileStream(SolrParams,SolrQueryResponse).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/ReplicationHandler#getFileStream(SolrParams,SolrQueryResponse).mjava","sourceNew":"  /**\n   * This method adds an Object of FileStream to the response . The FileStream implements a custom protocol which is\n   * understood by IndexFetcher.FileFetcher\n   *\n   * @see IndexFetcher.LocalFsFileFetcher\n   * @see IndexFetcher.DirectoryFileFetcher\n   */\n  private void getFileStream(SolrParams solrParams, SolrQueryResponse rsp) {\n    ModifiableSolrParams rawParams = new ModifiableSolrParams(solrParams);\n    rawParams.set(CommonParams.WT, FILE_STREAM);\n\n    String cfileName = solrParams.get(CONF_FILE_SHORT);\n    if (cfileName != null) {\n      rsp.add(FILE_STREAM, new LocalFsFileStream(solrParams));\n    } else {\n      rsp.add(FILE_STREAM, new DirectoryFileStream(solrParams));\n    }\n  }\n\n","sourceOld":"  /**\n   * This method adds an Object of FileStream to the response . The FileStream implements a custom protocol which is\n   * understood by IndexFetcher.FileFetcher\n   *\n   * @see IndexFetcher.LocalFsFileFetcher\n   * @see IndexFetcher.DirectoryFileFetcher\n   */\n  private void getFileStream(SolrParams solrParams, SolrQueryResponse rsp) {\n    ModifiableSolrParams rawParams = new ModifiableSolrParams(solrParams);\n    rawParams.set(CommonParams.WT, FILE_STREAM);\n    \n    String cfileName = solrParams.get(CONF_FILE_SHORT);\n    if (cfileName != null) {\n      rsp.add(FILE_STREAM, new LocalFsFileStream(solrParams));\n    } else {\n      rsp.add(FILE_STREAM, new DirectoryFileStream(solrParams));\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"86290366cefc1b9d4eced13b430858c4a4c0421d","date":1432321109,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/ReplicationHandler#getFileStream(SolrParams,SolrQueryResponse).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/ReplicationHandler#getFileStream(SolrParams,SolrQueryResponse).mjava","sourceNew":"  /**\n   * This method adds an Object of FileStream to the response . The FileStream implements a custom protocol which is\n   * understood by IndexFetcher.FileFetcher\n   *\n   * @see IndexFetcher.LocalFsFileFetcher\n   * @see IndexFetcher.DirectoryFileFetcher\n   */\n  private void getFileStream(SolrParams solrParams, SolrQueryResponse rsp) {\n    ModifiableSolrParams rawParams = new ModifiableSolrParams(solrParams);\n    rawParams.set(CommonParams.WT, FILE_STREAM);\n\n    String cfileName = solrParams.get(CONF_FILE_SHORT);\n    String tlogFileName = solrParams.get(TLOG_FILE);\n    if (cfileName != null) {\n      rsp.add(FILE_STREAM, new LocalFsConfFileStream(solrParams));\n    } else if (tlogFileName != null) {\n      rsp.add(FILE_STREAM, new LocalFsTlogFileStream(solrParams));\n    } else {\n      rsp.add(FILE_STREAM, new DirectoryFileStream(solrParams));\n    }\n  }\n\n","sourceOld":"  /**\n   * This method adds an Object of FileStream to the response . The FileStream implements a custom protocol which is\n   * understood by IndexFetcher.FileFetcher\n   *\n   * @see IndexFetcher.LocalFsFileFetcher\n   * @see IndexFetcher.DirectoryFileFetcher\n   */\n  private void getFileStream(SolrParams solrParams, SolrQueryResponse rsp) {\n    ModifiableSolrParams rawParams = new ModifiableSolrParams(solrParams);\n    rawParams.set(CommonParams.WT, FILE_STREAM);\n\n    String cfileName = solrParams.get(CONF_FILE_SHORT);\n    if (cfileName != null) {\n      rsp.add(FILE_STREAM, new LocalFsFileStream(solrParams));\n    } else {\n      rsp.add(FILE_STREAM, new DirectoryFileStream(solrParams));\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5cb65c1c2f90852e718f86c8be09beb1c4dba408","date":1543785784,"type":3,"author":"Jason Gerlowski","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/ReplicationHandler#getFileStream(SolrParams,SolrQueryResponse).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/ReplicationHandler#getFileStream(SolrParams,SolrQueryResponse).mjava","sourceNew":"  /**\n   * This method adds an Object of FileStream to the response . The FileStream implements a custom protocol which is\n   * understood by IndexFetcher.FileFetcher\n   *\n   * @see IndexFetcher.LocalFsFileFetcher\n   * @see IndexFetcher.DirectoryFileFetcher\n   */\n  private void getFileStream(SolrParams solrParams, SolrQueryResponse rsp) {\n    ModifiableSolrParams rawParams = new ModifiableSolrParams(solrParams);\n    rawParams.set(CommonParams.WT, FILE_STREAM);\n\n    String cfileName = solrParams.get(CONF_FILE_SHORT);\n    String tlogFileName = solrParams.get(TLOG_FILE);\n    if (cfileName != null) {\n      rsp.add(FILE_STREAM, new LocalFsConfFileStream(solrParams));\n    } else if (tlogFileName != null) {\n      rsp.add(FILE_STREAM, new LocalFsTlogFileStream(solrParams));\n    } else {\n      rsp.add(FILE_STREAM, new DirectoryFileStream(solrParams));\n    }\n    rsp.add(STATUS, OK_STATUS);\n  }\n\n","sourceOld":"  /**\n   * This method adds an Object of FileStream to the response . The FileStream implements a custom protocol which is\n   * understood by IndexFetcher.FileFetcher\n   *\n   * @see IndexFetcher.LocalFsFileFetcher\n   * @see IndexFetcher.DirectoryFileFetcher\n   */\n  private void getFileStream(SolrParams solrParams, SolrQueryResponse rsp) {\n    ModifiableSolrParams rawParams = new ModifiableSolrParams(solrParams);\n    rawParams.set(CommonParams.WT, FILE_STREAM);\n\n    String cfileName = solrParams.get(CONF_FILE_SHORT);\n    String tlogFileName = solrParams.get(TLOG_FILE);\n    if (cfileName != null) {\n      rsp.add(FILE_STREAM, new LocalFsConfFileStream(solrParams));\n    } else if (tlogFileName != null) {\n      rsp.add(FILE_STREAM, new LocalFsTlogFileStream(solrParams));\n    } else {\n      rsp.add(FILE_STREAM, new DirectoryFileStream(solrParams));\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"c26f00b574427b55127e869b935845554afde1fa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","c903c3d15906a3da96b8c0c2fb704491005fdbdb"],"d9405f486872f1e416304dfe389741f4ee2f8a4d":["c26f00b574427b55127e869b935845554afde1fa"],"86290366cefc1b9d4eced13b430858c4a4c0421d":["7b13106276bb5ea342253dbf6aae7b675adb38d3"],"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":["d9405f486872f1e416304dfe389741f4ee2f8a4d","20f6b7cff3771384f27af0f059795d7e64aff6b9"],"20f6b7cff3771384f27af0f059795d7e64aff6b9":["d9405f486872f1e416304dfe389741f4ee2f8a4d"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"6c757ac42dd1f3f893db5c4d89c61cbe1a9fab6c":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","7b13106276bb5ea342253dbf6aae7b675adb38d3"],"a258fbb26824fd104ed795e5d9033d2d040049ee":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"f2126b84bd093fa3d921582a109a0ee578c28126":["c26f00b574427b55127e869b935845554afde1fa","d9405f486872f1e416304dfe389741f4ee2f8a4d"],"5cb65c1c2f90852e718f86c8be09beb1c4dba408":["86290366cefc1b9d4eced13b430858c4a4c0421d"],"7b13106276bb5ea342253dbf6aae7b675adb38d3":["20f6b7cff3771384f27af0f059795d7e64aff6b9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["5cb65c1c2f90852e718f86c8be09beb1c4dba408"]},"commit2Childs":{"c26f00b574427b55127e869b935845554afde1fa":["d9405f486872f1e416304dfe389741f4ee2f8a4d","f2126b84bd093fa3d921582a109a0ee578c28126"],"d9405f486872f1e416304dfe389741f4ee2f8a4d":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","20f6b7cff3771384f27af0f059795d7e64aff6b9","f2126b84bd093fa3d921582a109a0ee578c28126"],"86290366cefc1b9d4eced13b430858c4a4c0421d":["5cb65c1c2f90852e718f86c8be09beb1c4dba408"],"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":["6c757ac42dd1f3f893db5c4d89c61cbe1a9fab6c"],"20f6b7cff3771384f27af0f059795d7e64aff6b9":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","7b13106276bb5ea342253dbf6aae7b675adb38d3"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["c26f00b574427b55127e869b935845554afde1fa"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c26f00b574427b55127e869b935845554afde1fa","c903c3d15906a3da96b8c0c2fb704491005fdbdb","a258fbb26824fd104ed795e5d9033d2d040049ee"],"6c757ac42dd1f3f893db5c4d89c61cbe1a9fab6c":[],"a258fbb26824fd104ed795e5d9033d2d040049ee":[],"f2126b84bd093fa3d921582a109a0ee578c28126":[],"5cb65c1c2f90852e718f86c8be09beb1c4dba408":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"7b13106276bb5ea342253dbf6aae7b675adb38d3":["86290366cefc1b9d4eced13b430858c4a4c0421d","6c757ac42dd1f3f893db5c4d89c61cbe1a9fab6c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["6c757ac42dd1f3f893db5c4d89c61cbe1a9fab6c","a258fbb26824fd104ed795e5d9033d2d040049ee","f2126b84bd093fa3d921582a109a0ee578c28126","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}