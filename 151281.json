{"path":"lucene/test-framework/src/java/org/apache/lucene/codecs/mockrandom/MockRandomPostingsFormat.MockIntStreamFactory#MockIntStreamFactory(Random).mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/codecs/mockrandom/MockRandomPostingsFormat.MockIntStreamFactory#MockIntStreamFactory(Random).mjava","pathOld":"lucene/src/test-framework/java/org/apache/lucene/codecs/mockrandom/MockRandomPostingsFormat.MockIntStreamFactory#MockIntStreamFactory(Random).mjava","sourceNew":"    public MockIntStreamFactory(Random random) {\n      salt = random.nextInt();\n      delegates.add(new MockSingleIntFactory());\n      final int blockSize = _TestUtil.nextInt(random, 1, 2000);\n      delegates.add(new MockFixedIntBlockPostingsFormat.MockIntFactory(blockSize));\n      final int baseBlockSize = _TestUtil.nextInt(random, 1, 127);\n      delegates.add(new MockVariableIntBlockPostingsFormat.MockIntFactory(baseBlockSize));\n      // TODO: others\n    }\n\n","sourceOld":"    public MockIntStreamFactory(Random random) {\n      salt = random.nextInt();\n      delegates.add(new MockSingleIntFactory());\n      final int blockSize = _TestUtil.nextInt(random, 1, 2000);\n      delegates.add(new MockFixedIntBlockPostingsFormat.MockIntFactory(blockSize));\n      final int baseBlockSize = _TestUtil.nextInt(random, 1, 127);\n      delegates.add(new MockVariableIntBlockPostingsFormat.MockIntFactory(baseBlockSize));\n      // TODO: others\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2c16b44289b3660573e653fe771c1528f4e2774f","date":1340208824,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/codecs/mockrandom/MockRandomPostingsFormat.MockIntStreamFactory#MockIntStreamFactory(Random).mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/codecs/mockrandom/MockRandomPostingsFormat.MockIntStreamFactory#MockIntStreamFactory(Random).mjava","sourceNew":"    public MockIntStreamFactory(Random random) {\n      salt = random.nextInt();\n      delegates.add(new MockSingleIntFactory());\n      final int blockSize = _TestUtil.nextInt(random, 1, 2000);\n      delegates.add(new MockFixedIntBlockPostingsFormat.MockIntFactory(blockSize));\n      final int baseBlockSize = _TestUtil.nextInt(random, 1, 127);\n      delegates.add(new MockVariableIntBlockPostingsFormat.MockIntFactory(baseBlockSize));\n      // TODO: others\n      delegates.add(new ForFactory());\n    }\n\n","sourceOld":"    public MockIntStreamFactory(Random random) {\n      salt = random.nextInt();\n      delegates.add(new MockSingleIntFactory());\n      final int blockSize = _TestUtil.nextInt(random, 1, 2000);\n      delegates.add(new MockFixedIntBlockPostingsFormat.MockIntFactory(blockSize));\n      final int baseBlockSize = _TestUtil.nextInt(random, 1, 127);\n      delegates.add(new MockVariableIntBlockPostingsFormat.MockIntFactory(baseBlockSize));\n      // TODO: others\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"824ab25acd22f2eca198755bafab3cb8b7878493","date":1341276186,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/codecs/mockrandom/MockRandomPostingsFormat.MockIntStreamFactory#MockIntStreamFactory(Random).mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/codecs/mockrandom/MockRandomPostingsFormat.MockIntStreamFactory#MockIntStreamFactory(Random).mjava","sourceNew":"    public MockIntStreamFactory(Random random) {\n      salt = random.nextInt();\n      delegates.add(new MockSingleIntFactory());\n      final int blockSize = _TestUtil.nextInt(random, 1, 2000);\n      delegates.add(new MockFixedIntBlockPostingsFormat.MockIntFactory(blockSize));\n      final int baseBlockSize = _TestUtil.nextInt(random, 1, 127);\n      delegates.add(new MockVariableIntBlockPostingsFormat.MockIntFactory(baseBlockSize));\n      // TODO: others\n      delegates.add(new ForFactory());\n      delegates.add(new PForFactory());\n    }\n\n","sourceOld":"    public MockIntStreamFactory(Random random) {\n      salt = random.nextInt();\n      delegates.add(new MockSingleIntFactory());\n      final int blockSize = _TestUtil.nextInt(random, 1, 2000);\n      delegates.add(new MockFixedIntBlockPostingsFormat.MockIntFactory(blockSize));\n      final int baseBlockSize = _TestUtil.nextInt(random, 1, 127);\n      delegates.add(new MockVariableIntBlockPostingsFormat.MockIntFactory(baseBlockSize));\n      // TODO: others\n      delegates.add(new ForFactory());\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7250f5f8fbbaeebf817404fb2b3ce3b26161d5df","date":1343686506,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/codecs/mockrandom/MockRandomPostingsFormat.MockIntStreamFactory#MockIntStreamFactory(Random).mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/codecs/mockrandom/MockRandomPostingsFormat.MockIntStreamFactory#MockIntStreamFactory(Random).mjava","sourceNew":"    public MockIntStreamFactory(Random random) {\n      salt = random.nextInt();\n      delegates.add(new MockSingleIntFactory());\n      final int blockSize = _TestUtil.nextInt(random, 1, 2000);\n      delegates.add(new MockFixedIntBlockPostingsFormat.MockIntFactory(blockSize));\n      final int baseBlockSize = _TestUtil.nextInt(random, 1, 127);\n      delegates.add(new MockVariableIntBlockPostingsFormat.MockIntFactory(baseBlockSize));\n      // TODO: others\n    }\n\n","sourceOld":"    public MockIntStreamFactory(Random random) {\n      salt = random.nextInt();\n      delegates.add(new MockSingleIntFactory());\n      final int blockSize = _TestUtil.nextInt(random, 1, 2000);\n      delegates.add(new MockFixedIntBlockPostingsFormat.MockIntFactory(blockSize));\n      final int baseBlockSize = _TestUtil.nextInt(random, 1, 127);\n      delegates.add(new MockVariableIntBlockPostingsFormat.MockIntFactory(baseBlockSize));\n      // TODO: others\n      delegates.add(new ForFactory());\n      delegates.add(new PForFactory());\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6613659748fe4411a7dcf85266e55db1f95f7315","date":1392773913,"type":3,"author":"Benson Margulies","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/codecs/mockrandom/MockRandomPostingsFormat.MockIntStreamFactory#MockIntStreamFactory(Random).mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/codecs/mockrandom/MockRandomPostingsFormat.MockIntStreamFactory#MockIntStreamFactory(Random).mjava","sourceNew":"    public MockIntStreamFactory(Random random) {\n      salt = random.nextInt();\n      delegates.add(new MockSingleIntFactory());\n      final int blockSize = TestUtil.nextInt(random, 1, 2000);\n      delegates.add(new MockFixedIntBlockPostingsFormat.MockIntFactory(blockSize));\n      final int baseBlockSize = TestUtil.nextInt(random, 1, 127);\n      delegates.add(new MockVariableIntBlockPostingsFormat.MockIntFactory(baseBlockSize));\n      // TODO: others\n    }\n\n","sourceOld":"    public MockIntStreamFactory(Random random) {\n      salt = random.nextInt();\n      delegates.add(new MockSingleIntFactory());\n      final int blockSize = _TestUtil.nextInt(random, 1, 2000);\n      delegates.add(new MockFixedIntBlockPostingsFormat.MockIntFactory(blockSize));\n      final int baseBlockSize = _TestUtil.nextInt(random, 1, 127);\n      delegates.add(new MockVariableIntBlockPostingsFormat.MockIntFactory(baseBlockSize));\n      // TODO: others\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"91d86ebcdb45ce6a1b2584e2603f76db47523d0a","date":1396466913,"type":4,"author":"Robert Muir","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/test-framework/src/java/org/apache/lucene/codecs/mockrandom/MockRandomPostingsFormat.MockIntStreamFactory#MockIntStreamFactory(Random).mjava","sourceNew":null,"sourceOld":"    public MockIntStreamFactory(Random random) {\n      salt = random.nextInt();\n      delegates.add(new MockSingleIntFactory());\n      final int blockSize = TestUtil.nextInt(random, 1, 2000);\n      delegates.add(new MockFixedIntBlockPostingsFormat.MockIntFactory(blockSize));\n      final int baseBlockSize = TestUtil.nextInt(random, 1, 127);\n      delegates.add(new MockVariableIntBlockPostingsFormat.MockIntFactory(baseBlockSize));\n      // TODO: others\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5eb2511ababf862ea11e10761c70ee560cd84510","date":1396607225,"type":4,"author":"Dawid Weiss","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/test-framework/src/java/org/apache/lucene/codecs/mockrandom/MockRandomPostingsFormat.MockIntStreamFactory#MockIntStreamFactory(Random).mjava","sourceNew":null,"sourceOld":"    public MockIntStreamFactory(Random random) {\n      salt = random.nextInt();\n      delegates.add(new MockSingleIntFactory());\n      final int blockSize = TestUtil.nextInt(random, 1, 2000);\n      delegates.add(new MockFixedIntBlockPostingsFormat.MockIntFactory(blockSize));\n      final int baseBlockSize = TestUtil.nextInt(random, 1, 127);\n      delegates.add(new MockVariableIntBlockPostingsFormat.MockIntFactory(baseBlockSize));\n      // TODO: others\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"5eb2511ababf862ea11e10761c70ee560cd84510":["6613659748fe4411a7dcf85266e55db1f95f7315","91d86ebcdb45ce6a1b2584e2603f76db47523d0a"],"2c16b44289b3660573e653fe771c1528f4e2774f":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"824ab25acd22f2eca198755bafab3cb8b7878493":["2c16b44289b3660573e653fe771c1528f4e2774f"],"7250f5f8fbbaeebf817404fb2b3ce3b26161d5df":["824ab25acd22f2eca198755bafab3cb8b7878493"],"91d86ebcdb45ce6a1b2584e2603f76db47523d0a":["6613659748fe4411a7dcf85266e55db1f95f7315"],"6613659748fe4411a7dcf85266e55db1f95f7315":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["91d86ebcdb45ce6a1b2584e2603f76db47523d0a"]},"commit2Childs":{"5eb2511ababf862ea11e10761c70ee560cd84510":[],"2c16b44289b3660573e653fe771c1528f4e2774f":["824ab25acd22f2eca198755bafab3cb8b7878493"],"824ab25acd22f2eca198755bafab3cb8b7878493":["7250f5f8fbbaeebf817404fb2b3ce3b26161d5df"],"7250f5f8fbbaeebf817404fb2b3ce3b26161d5df":[],"91d86ebcdb45ce6a1b2584e2603f76db47523d0a":["5eb2511ababf862ea11e10761c70ee560cd84510","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"6613659748fe4411a7dcf85266e55db1f95f7315":["5eb2511ababf862ea11e10761c70ee560cd84510","91d86ebcdb45ce6a1b2584e2603f76db47523d0a"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["2c16b44289b3660573e653fe771c1528f4e2774f","6613659748fe4411a7dcf85266e55db1f95f7315"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["5eb2511ababf862ea11e10761c70ee560cd84510","7250f5f8fbbaeebf817404fb2b3ce3b26161d5df","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}