{"path":"modules/facet/src/test/org/apache/lucene/facet/taxonomy/TestTaxonomyCombined#testWriterParent1().mjava","commits":[{"id":"89f15687f60bd49cd3d9de427e85c17fd9397d61","date":1309381327,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"modules/facet/src/test/org/apache/lucene/facet/taxonomy/TestTaxonomyCombined#testWriterParent1().mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Tests for TaxonomyWriter's getParent() method. We check it by comparing\n   * its results to those we could have gotten by looking at the category\n   * string paths using a TaxonomyReader (where the parentage is obvious).\n   * Note that after testReaderBasic(), we already know we can trust the\n   * ordinal <=> category conversions from TaxonomyReader.\n   *\n   * The difference between testWriterParent1 and testWriterParent2 is that\n   * the former closes the taxonomy writer before reopening it, while the\n   * latter does not.\n   * \n   * This test code is virtually identical to that of testReaderParent().\n   */\n  @Test\n  public void testWriterParent1() throws Exception {\n    Directory indexDir = new RAMDirectory();\n    TaxonomyWriter tw = new LuceneTaxonomyWriter(indexDir);\n    fillTaxonomy(tw);\n    tw.close();\n    tw = new LuceneTaxonomyWriter(indexDir);\n    TaxonomyReader tr = new LuceneTaxonomyReader(indexDir);\n    \n    checkWriterParent(tr, tw);\n    \n    tw.close();\n    tr.close();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7a4df66e06e0c3b520d7d5941e1c043076f06f17","date":1309454196,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"modules/facet/src/test/org/apache/lucene/facet/taxonomy/TestTaxonomyCombined#testWriterParent1().mjava","pathOld":"modules/facet/src/test/org/apache/lucene/facet/taxonomy/TestTaxonomyCombined#testWriterParent1().mjava","sourceNew":"  /**\n   * Tests for TaxonomyWriter's getParent() method. We check it by comparing\n   * its results to those we could have gotten by looking at the category\n   * string paths using a TaxonomyReader (where the parentage is obvious).\n   * Note that after testReaderBasic(), we already know we can trust the\n   * ordinal <=> category conversions from TaxonomyReader.\n   *\n   * The difference between testWriterParent1 and testWriterParent2 is that\n   * the former closes the taxonomy writer before reopening it, while the\n   * latter does not.\n   * \n   * This test code is virtually identical to that of testReaderParent().\n   */\n  @Test\n  public void testWriterParent1() throws Exception {\n    Directory indexDir = newDirectory();\n    TaxonomyWriter tw = new LuceneTaxonomyWriter(indexDir);\n    fillTaxonomy(tw);\n    tw.close();\n    tw = new LuceneTaxonomyWriter(indexDir);\n    TaxonomyReader tr = new LuceneTaxonomyReader(indexDir);\n    \n    checkWriterParent(tr, tw);\n    \n    tw.close();\n    tr.close();\n    indexDir.close();\n  }\n\n","sourceOld":"  /**\n   * Tests for TaxonomyWriter's getParent() method. We check it by comparing\n   * its results to those we could have gotten by looking at the category\n   * string paths using a TaxonomyReader (where the parentage is obvious).\n   * Note that after testReaderBasic(), we already know we can trust the\n   * ordinal <=> category conversions from TaxonomyReader.\n   *\n   * The difference between testWriterParent1 and testWriterParent2 is that\n   * the former closes the taxonomy writer before reopening it, while the\n   * latter does not.\n   * \n   * This test code is virtually identical to that of testReaderParent().\n   */\n  @Test\n  public void testWriterParent1() throws Exception {\n    Directory indexDir = new RAMDirectory();\n    TaxonomyWriter tw = new LuceneTaxonomyWriter(indexDir);\n    fillTaxonomy(tw);\n    tw.close();\n    tw = new LuceneTaxonomyWriter(indexDir);\n    TaxonomyReader tr = new LuceneTaxonomyReader(indexDir);\n    \n    checkWriterParent(tr, tw);\n    \n    tw.close();\n    tr.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"817d8435e9135b756f08ce6710ab0baac51bdf88","date":1309986993,"type":0,"author":"Steven Rowe","isMerge":true,"pathNew":"modules/facet/src/test/org/apache/lucene/facet/taxonomy/TestTaxonomyCombined#testWriterParent1().mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Tests for TaxonomyWriter's getParent() method. We check it by comparing\n   * its results to those we could have gotten by looking at the category\n   * string paths using a TaxonomyReader (where the parentage is obvious).\n   * Note that after testReaderBasic(), we already know we can trust the\n   * ordinal <=> category conversions from TaxonomyReader.\n   *\n   * The difference between testWriterParent1 and testWriterParent2 is that\n   * the former closes the taxonomy writer before reopening it, while the\n   * latter does not.\n   * \n   * This test code is virtually identical to that of testReaderParent().\n   */\n  @Test\n  public void testWriterParent1() throws Exception {\n    Directory indexDir = newDirectory();\n    TaxonomyWriter tw = new LuceneTaxonomyWriter(indexDir);\n    fillTaxonomy(tw);\n    tw.close();\n    tw = new LuceneTaxonomyWriter(indexDir);\n    TaxonomyReader tr = new LuceneTaxonomyReader(indexDir);\n    \n    checkWriterParent(tr, tw);\n    \n    tw.close();\n    tr.close();\n    indexDir.close();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d083e83f225b11e5fdd900e83d26ddb385b6955c","date":1310029438,"type":0,"author":"Simon Willnauer","isMerge":true,"pathNew":"modules/facet/src/test/org/apache/lucene/facet/taxonomy/TestTaxonomyCombined#testWriterParent1().mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Tests for TaxonomyWriter's getParent() method. We check it by comparing\n   * its results to those we could have gotten by looking at the category\n   * string paths using a TaxonomyReader (where the parentage is obvious).\n   * Note that after testReaderBasic(), we already know we can trust the\n   * ordinal <=> category conversions from TaxonomyReader.\n   *\n   * The difference between testWriterParent1 and testWriterParent2 is that\n   * the former closes the taxonomy writer before reopening it, while the\n   * latter does not.\n   * \n   * This test code is virtually identical to that of testReaderParent().\n   */\n  @Test\n  public void testWriterParent1() throws Exception {\n    Directory indexDir = newDirectory();\n    TaxonomyWriter tw = new LuceneTaxonomyWriter(indexDir);\n    fillTaxonomy(tw);\n    tw.close();\n    tw = new LuceneTaxonomyWriter(indexDir);\n    TaxonomyReader tr = new LuceneTaxonomyReader(indexDir);\n    \n    checkWriterParent(tr, tw);\n    \n    tw.close();\n    tr.close();\n    indexDir.close();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ea469eab8fd0f3032f4fcde1c644a721e8309d3b","date":1320301582,"type":3,"author":"Shai Erera","isMerge":false,"pathNew":"modules/facet/src/test/org/apache/lucene/facet/taxonomy/TestTaxonomyCombined#testWriterParent1().mjava","pathOld":"modules/facet/src/test/org/apache/lucene/facet/taxonomy/TestTaxonomyCombined#testWriterParent1().mjava","sourceNew":"  /**\n   * Tests for TaxonomyWriter's getParent() method. We check it by comparing\n   * its results to those we could have gotten by looking at the category\n   * string paths using a TaxonomyReader (where the parentage is obvious).\n   * Note that after testReaderBasic(), we already know we can trust the\n   * ordinal <=> category conversions from TaxonomyReader.\n   *\n   * The difference between testWriterParent1 and testWriterParent2 is that\n   * the former closes the taxonomy writer before reopening it, while the\n   * latter does not.\n   * \n   * This test code is virtually identical to that of testReaderParent().\n   */\n  @Test\n  public void testWriterParent1() throws Exception {\n    Directory indexDir = newDirectory();\n    TaxonomyWriter tw = new DirectoryTaxonomyWriter(indexDir);\n    fillTaxonomy(tw);\n    tw.close();\n    tw = new DirectoryTaxonomyWriter(indexDir);\n    TaxonomyReader tr = new DirectoryTaxonomyReader(indexDir);\n    \n    checkWriterParent(tr, tw);\n    \n    tw.close();\n    tr.close();\n    indexDir.close();\n  }\n\n","sourceOld":"  /**\n   * Tests for TaxonomyWriter's getParent() method. We check it by comparing\n   * its results to those we could have gotten by looking at the category\n   * string paths using a TaxonomyReader (where the parentage is obvious).\n   * Note that after testReaderBasic(), we already know we can trust the\n   * ordinal <=> category conversions from TaxonomyReader.\n   *\n   * The difference between testWriterParent1 and testWriterParent2 is that\n   * the former closes the taxonomy writer before reopening it, while the\n   * latter does not.\n   * \n   * This test code is virtually identical to that of testReaderParent().\n   */\n  @Test\n  public void testWriterParent1() throws Exception {\n    Directory indexDir = newDirectory();\n    TaxonomyWriter tw = new LuceneTaxonomyWriter(indexDir);\n    fillTaxonomy(tw);\n    tw.close();\n    tw = new LuceneTaxonomyWriter(indexDir);\n    TaxonomyReader tr = new LuceneTaxonomyReader(indexDir);\n    \n    checkWriterParent(tr, tw);\n    \n    tw.close();\n    tr.close();\n    indexDir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/taxonomy/TestTaxonomyCombined#testWriterParent1().mjava","pathOld":"modules/facet/src/test/org/apache/lucene/facet/taxonomy/TestTaxonomyCombined#testWriterParent1().mjava","sourceNew":"  /**\n   * Tests for TaxonomyWriter's getParent() method. We check it by comparing\n   * its results to those we could have gotten by looking at the category\n   * string paths using a TaxonomyReader (where the parentage is obvious).\n   * Note that after testReaderBasic(), we already know we can trust the\n   * ordinal <=> category conversions from TaxonomyReader.\n   *\n   * The difference between testWriterParent1 and testWriterParent2 is that\n   * the former closes the taxonomy writer before reopening it, while the\n   * latter does not.\n   * \n   * This test code is virtually identical to that of testReaderParent().\n   */\n  @Test\n  public void testWriterParent1() throws Exception {\n    Directory indexDir = newDirectory();\n    TaxonomyWriter tw = new DirectoryTaxonomyWriter(indexDir);\n    fillTaxonomy(tw);\n    tw.close();\n    tw = new DirectoryTaxonomyWriter(indexDir);\n    TaxonomyReader tr = new DirectoryTaxonomyReader(indexDir);\n    \n    checkWriterParent(tr, tw);\n    \n    tw.close();\n    tr.close();\n    indexDir.close();\n  }\n\n","sourceOld":"  /**\n   * Tests for TaxonomyWriter's getParent() method. We check it by comparing\n   * its results to those we could have gotten by looking at the category\n   * string paths using a TaxonomyReader (where the parentage is obvious).\n   * Note that after testReaderBasic(), we already know we can trust the\n   * ordinal <=> category conversions from TaxonomyReader.\n   *\n   * The difference between testWriterParent1 and testWriterParent2 is that\n   * the former closes the taxonomy writer before reopening it, while the\n   * latter does not.\n   * \n   * This test code is virtually identical to that of testReaderParent().\n   */\n  @Test\n  public void testWriterParent1() throws Exception {\n    Directory indexDir = newDirectory();\n    TaxonomyWriter tw = new DirectoryTaxonomyWriter(indexDir);\n    fillTaxonomy(tw);\n    tw.close();\n    tw = new DirectoryTaxonomyWriter(indexDir);\n    TaxonomyReader tr = new DirectoryTaxonomyReader(indexDir);\n    \n    checkWriterParent(tr, tw);\n    \n    tw.close();\n    tr.close();\n    indexDir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["ea469eab8fd0f3032f4fcde1c644a721e8309d3b"],"ea469eab8fd0f3032f4fcde1c644a721e8309d3b":["7a4df66e06e0c3b520d7d5941e1c043076f06f17"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"7a4df66e06e0c3b520d7d5941e1c043076f06f17":["89f15687f60bd49cd3d9de427e85c17fd9397d61"],"d083e83f225b11e5fdd900e83d26ddb385b6955c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","7a4df66e06e0c3b520d7d5941e1c043076f06f17"],"89f15687f60bd49cd3d9de427e85c17fd9397d61":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"817d8435e9135b756f08ce6710ab0baac51bdf88":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","7a4df66e06e0c3b520d7d5941e1c043076f06f17"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b89678825b68eccaf09e6ab71675fc0b0af1e099"]},"commit2Childs":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"ea469eab8fd0f3032f4fcde1c644a721e8309d3b":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["d083e83f225b11e5fdd900e83d26ddb385b6955c","89f15687f60bd49cd3d9de427e85c17fd9397d61","817d8435e9135b756f08ce6710ab0baac51bdf88"],"7a4df66e06e0c3b520d7d5941e1c043076f06f17":["ea469eab8fd0f3032f4fcde1c644a721e8309d3b","d083e83f225b11e5fdd900e83d26ddb385b6955c","817d8435e9135b756f08ce6710ab0baac51bdf88"],"d083e83f225b11e5fdd900e83d26ddb385b6955c":[],"89f15687f60bd49cd3d9de427e85c17fd9397d61":["7a4df66e06e0c3b520d7d5941e1c043076f06f17"],"817d8435e9135b756f08ce6710ab0baac51bdf88":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["d083e83f225b11e5fdd900e83d26ddb385b6955c","817d8435e9135b756f08ce6710ab0baac51bdf88","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}