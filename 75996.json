{"path":"lucene/core/src/test/org/apache/lucene/geo/TestCircle2D#testTriangleDateLineIntersects().mjava","commits":[{"id":"ded0ce8b083477f59a4cfe486b2e53c7e6fa79e1","date":1582881747,"type":0,"author":"Ignacio Vera","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/geo/TestCircle2D#testTriangleDateLineIntersects().mjava","pathOld":"/dev/null","sourceNew":"  public void testTriangleDateLineIntersects() {\n    Component2D circle2D = LatLonGeometry.create(new Circle(0, 179, 222400));\n    double ax = -179;\n    double ay = 1;\n    double bx = -179;\n    double by = -1;\n    double cx = -178;\n    double cy = 0;\n    // we just touch the edge from the dateline\n    assertEquals(PointValues.Relation.CELL_CROSSES_QUERY, circle2D.relateTriangle(ax, ay, bx, by , cx, cy));\n    assertEquals(Component2D.WithinRelation.NOTWITHIN, circle2D.withinTriangle(ax, ay, true, bx, by, true, cx, cy, true));\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c568a1e2a5125c2245150eebb030a81baa158b31","date":1587403489,"type":3,"author":"Ignacio Vera","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/geo/TestCircle2D#testTriangleDateLineIntersects().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/geo/TestCircle2D#testTriangleDateLineIntersects().mjava","sourceNew":"  public void testTriangleDateLineIntersects() {\n    Component2D circle2D = LatLonGeometry.create(new Circle(0, 179, 222400));\n    double ax = -179;\n    double ay = 1;\n    double bx = -179;\n    double by = -1;\n    double cx = -178;\n    double cy = 0;\n    // we just touch the edge from the dateline\n    assertTrue(circle2D.intersectsTriangle(ax, ay, bx, by, cx, cy));\n    assertTrue(circle2D.intersectsLine(ax, ay, bx, by));\n    assertFalse(circle2D.containsTriangle(ax, ay, bx, by , cx, cy));\n    assertFalse(circle2D.containsLine(ax, ay, bx, by));\n    assertEquals(Component2D.WithinRelation.NOTWITHIN, circle2D.withinTriangle(ax, ay, true, bx, by, true, cx, cy, true));\n  }\n\n","sourceOld":"  public void testTriangleDateLineIntersects() {\n    Component2D circle2D = LatLonGeometry.create(new Circle(0, 179, 222400));\n    double ax = -179;\n    double ay = 1;\n    double bx = -179;\n    double by = -1;\n    double cx = -178;\n    double cy = 0;\n    // we just touch the edge from the dateline\n    assertEquals(PointValues.Relation.CELL_CROSSES_QUERY, circle2D.relateTriangle(ax, ay, bx, by , cx, cy));\n    assertEquals(Component2D.WithinRelation.NOTWITHIN, circle2D.withinTriangle(ax, ay, true, bx, by, true, cx, cy, true));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"ded0ce8b083477f59a4cfe486b2e53c7e6fa79e1":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"c568a1e2a5125c2245150eebb030a81baa158b31":["ded0ce8b083477f59a4cfe486b2e53c7e6fa79e1"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["c568a1e2a5125c2245150eebb030a81baa158b31"]},"commit2Childs":{"ded0ce8b083477f59a4cfe486b2e53c7e6fa79e1":["c568a1e2a5125c2245150eebb030a81baa158b31"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["ded0ce8b083477f59a4cfe486b2e53c7e6fa79e1"],"c568a1e2a5125c2245150eebb030a81baa158b31":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}