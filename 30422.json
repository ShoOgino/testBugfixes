{"path":"lucene/src/test-framework/org/apache/lucene/validation/DependencyChecker#getLicenseFile(File,Map[String,UpdateableInt]).mjava","commits":[{"id":"3a927cd1ea78b52305eb3092a878a993c89c84b0","date":1300473602,"type":1,"author":"Grant Ingersoll","isMerge":false,"pathNew":"lucene/src/test-framework/org/apache/lucene/validation/DependencyChecker#getLicenseFile(File,Map[String,UpdateableInt]).mjava","pathOld":"dev-tools/validation/src/main/java/org/apache/lucene/validation/DependencyChecker#getLicenseFile(File,Map[String,UpdateableInt]).mjava","sourceNew":"  private static File getLicenseFile(File file, Map<String, UpdateableInt> licenseNames) {\n    File result = null;\n    String filename = file.getName();\n    int length = 0;\n    for (String licName : licenseNames.keySet()) {\n      String prefix = licName.substring(0, licName.indexOf(\"-LICENSE\"));\n      String name = null;\n      //System.out.println(\"prefix: \" + prefix + \" lic name: \" + licName);\n      if (filename.toLowerCase().startsWith(prefix.toLowerCase())) {\n        result = new File(file.getParentFile(), licName);\n        UpdateableInt ui = licenseNames.get(licName);\n        ui.theInt++;\n      } else {\n      }\n\n    }\n    //System.out.println(\"License File: \" + result + \" for file: \" + file);\n\n    return result;\n  }\n\n","sourceOld":"  private static File getLicenseFile(File file, Map<String, UpdateableInt> licenseNames) {\n    File result = null;\n    String filename = file.getName();\n    int length = 0;\n    for (String licName : licenseNames.keySet()) {\n      String prefix = licName.substring(0, licName.indexOf(\"-LICENSE\"));\n      String name = null;\n      //System.out.println(\"prefix: \" + prefix + \" lic name: \" + licName);\n      if (filename.toLowerCase().startsWith(prefix.toLowerCase())) {\n        result = new File(file.getParentFile(), licName);\n        UpdateableInt ui = licenseNames.get(licName);\n        ui.theInt++;\n      } else {\n      }\n\n    }\n    //System.out.println(\"License File: \" + result + \" for file: \" + file);\n\n    return result;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f3e6224692d757db33136ebfbea31015f8b60fd0","date":1300817037,"type":5,"author":"Grant Ingersoll","isMerge":false,"pathNew":"lucene/src/tools/java/org/apache/lucene/validation/DependencyChecker#getLicenseFile(File,Map[String,UpdateableInt]).mjava","pathOld":"lucene/src/test-framework/org/apache/lucene/validation/DependencyChecker#getLicenseFile(File,Map[String,UpdateableInt]).mjava","sourceNew":"  private static File getLicenseFile(File file, Map<String, UpdateableInt> licenseNames) {\n    File result = null;\n    String filename = file.getName();\n    int length = 0;\n    for (String licName : licenseNames.keySet()) {\n      String prefix = licName.substring(0, licName.indexOf(\"-LICENSE\"));\n      String name = null;\n      //System.out.println(\"prefix: \" + prefix + \" lic name: \" + licName);\n      if (filename.toLowerCase().startsWith(prefix.toLowerCase())) {\n        result = new File(file.getParentFile(), licName);\n        UpdateableInt ui = licenseNames.get(licName);\n        ui.theInt++;\n      } else {\n      }\n\n    }\n    //System.out.println(\"License File: \" + result + \" for file: \" + file);\n\n    return result;\n  }\n\n","sourceOld":"  private static File getLicenseFile(File file, Map<String, UpdateableInt> licenseNames) {\n    File result = null;\n    String filename = file.getName();\n    int length = 0;\n    for (String licName : licenseNames.keySet()) {\n      String prefix = licName.substring(0, licName.indexOf(\"-LICENSE\"));\n      String name = null;\n      //System.out.println(\"prefix: \" + prefix + \" lic name: \" + licName);\n      if (filename.toLowerCase().startsWith(prefix.toLowerCase())) {\n        result = new File(file.getParentFile(), licName);\n        UpdateableInt ui = licenseNames.get(licName);\n        ui.theInt++;\n      } else {\n      }\n\n    }\n    //System.out.println(\"License File: \" + result + \" for file: \" + file);\n\n    return result;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"f3e6224692d757db33136ebfbea31015f8b60fd0":["3a927cd1ea78b52305eb3092a878a993c89c84b0"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3a927cd1ea78b52305eb3092a878a993c89c84b0":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["f3e6224692d757db33136ebfbea31015f8b60fd0"]},"commit2Childs":{"f3e6224692d757db33136ebfbea31015f8b60fd0":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a927cd1ea78b52305eb3092a878a993c89c84b0"],"3a927cd1ea78b52305eb3092a878a993c89c84b0":["f3e6224692d757db33136ebfbea31015f8b60fd0"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}