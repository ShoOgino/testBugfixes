{"path":"src/java/org/apache/lucene/util/BitVector#getAndSet(int).mjava","commits":[{"id":"34e2c71b6406443562df54db233fde0728502f64","date":1209294850,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/util/BitVector#getAndSet(int).mjava","pathOld":"/dev/null","sourceNew":"  /** Sets the value of <code>bit</code> to true, and\n   *  returns true if bit was already set */\n  public final boolean getAndSet(int bit) {\n    if (bit >= size) {\n      throw new ArrayIndexOutOfBoundsException(bit);\n    }\n    final int pos = bit >> 3;\n    final int v = bits[pos];\n    final int flag = 1 << (bit & 7);\n    if ((flag & v) != 0)\n      return true;\n    else {\n      bits[pos] = (byte) (v | flag);\n      if (count != -1)\n        count++;\n      return false;\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d28fc88c40c08a36c52720dae60beee72d91b031","date":1265661085,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/util/BitVector#getAndSet(int).mjava","pathOld":"src/java/org/apache/lucene/util/BitVector#getAndSet(int).mjava","sourceNew":"  /** Sets the value of <code>bit</code> to true, and\n   *  returns true if bit was already set */\n  public final boolean getAndSet(int bit) {\n    if (bit >= size) {\n      throw new ArrayIndexOutOfBoundsException(\"bit=\" + bit + \" size=\" + size);\n    }\n    final int pos = bit >> 3;\n    final int v = bits[pos];\n    final int flag = 1 << (bit & 7);\n    if ((flag & v) != 0)\n      return true;\n    else {\n      bits[pos] = (byte) (v | flag);\n      if (count != -1)\n        count++;\n      return false;\n    }\n  }\n\n","sourceOld":"  /** Sets the value of <code>bit</code> to true, and\n   *  returns true if bit was already set */\n  public final boolean getAndSet(int bit) {\n    if (bit >= size) {\n      throw new ArrayIndexOutOfBoundsException(bit);\n    }\n    final int pos = bit >> 3;\n    final int v = bits[pos];\n    final int flag = 1 << (bit & 7);\n    if ((flag & v) != 0)\n      return true;\n    else {\n      bits[pos] = (byte) (v | flag);\n      if (count != -1)\n        count++;\n      return false;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/util/BitVector#getAndSet(int).mjava","pathOld":"src/java/org/apache/lucene/util/BitVector#getAndSet(int).mjava","sourceNew":"  /** Sets the value of <code>bit</code> to true, and\n   *  returns true if bit was already set */\n  public final boolean getAndSet(int bit) {\n    if (bit >= size) {\n      throw new ArrayIndexOutOfBoundsException(\"bit=\" + bit + \" size=\" + size);\n    }\n    final int pos = bit >> 3;\n    final int v = bits[pos];\n    final int flag = 1 << (bit & 7);\n    if ((flag & v) != 0)\n      return true;\n    else {\n      bits[pos] = (byte) (v | flag);\n      if (count != -1)\n        count++;\n      return false;\n    }\n  }\n\n","sourceOld":"  /** Sets the value of <code>bit</code> to true, and\n   *  returns true if bit was already set */\n  public final boolean getAndSet(int bit) {\n    if (bit >= size) {\n      throw new ArrayIndexOutOfBoundsException(\"bit=\" + bit + \" size=\" + size);\n    }\n    final int pos = bit >> 3;\n    final int v = bits[pos];\n    final int flag = 1 << (bit & 7);\n    if ((flag & v) != 0)\n      return true;\n    else {\n      bits[pos] = (byte) (v | flag);\n      if (count != -1)\n        count++;\n      return false;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"34e2c71b6406443562df54db233fde0728502f64":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["d28fc88c40c08a36c52720dae60beee72d91b031"],"d28fc88c40c08a36c52720dae60beee72d91b031":["34e2c71b6406443562df54db233fde0728502f64"]},"commit2Childs":{"34e2c71b6406443562df54db233fde0728502f64":["d28fc88c40c08a36c52720dae60beee72d91b031"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["34e2c71b6406443562df54db233fde0728502f64"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"d28fc88c40c08a36c52720dae60beee72d91b031":["9454a6510e2db155fb01faa5c049b06ece95fab9"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}