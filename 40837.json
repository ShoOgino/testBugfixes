{"path":"src/java/org/apache/lucene/index/SegmentReader#getTermFreqVector(int,String,TermVectorMapper).mjava","commits":[{"id":"352bfe1fae83b92d1562f01c057bfbe6f5af3ddb","date":1185160645,"type":0,"author":"Grant Ingersoll","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/SegmentReader#getTermFreqVector(int,String,TermVectorMapper).mjava","pathOld":"/dev/null","sourceNew":"  public void getTermFreqVector(int docNumber, String field, TermVectorMapper mapper) throws IOException {\n    ensureOpen();\n    FieldInfo fi = fieldInfos.fieldInfo(field);\n    if (fi == null || !fi.storeTermVector || termVectorsReaderOrig == null)\n      throw new IOException(\"field does not contain term vectors\");\n\n    TermVectorsReader termVectorsReader = getTermVectorsReader();\n    if (termVectorsReader == null)\n    {\n      throw new IOException(\"Cannot open a reader for the term vectors\");\n    }\n\n\n    termVectorsReader.get(docNumber, field, mapper);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["14f9a4aa04cd68f73b240dec63343061922f749a"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"14f9a4aa04cd68f73b240dec63343061922f749a","date":1197323381,"type":3,"author":"Grant Ingersoll","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/SegmentReader#getTermFreqVector(int,String,TermVectorMapper).mjava","pathOld":"src/java/org/apache/lucene/index/SegmentReader#getTermFreqVector(int,String,TermVectorMapper).mjava","sourceNew":"  public void getTermFreqVector(int docNumber, String field, TermVectorMapper mapper) throws IOException {\n    ensureOpen();\n    FieldInfo fi = fieldInfos.fieldInfo(field);\n    if (fi == null || !fi.storeTermVector || termVectorsReaderOrig == null)\n      return;\n\n    TermVectorsReader termVectorsReader = getTermVectorsReader();\n    if (termVectorsReader == null)\n    {\n      return;\n    }\n\n\n    termVectorsReader.get(docNumber, field, mapper);\n  }\n\n","sourceOld":"  public void getTermFreqVector(int docNumber, String field, TermVectorMapper mapper) throws IOException {\n    ensureOpen();\n    FieldInfo fi = fieldInfos.fieldInfo(field);\n    if (fi == null || !fi.storeTermVector || termVectorsReaderOrig == null)\n      throw new IOException(\"field does not contain term vectors\");\n\n    TermVectorsReader termVectorsReader = getTermVectorsReader();\n    if (termVectorsReader == null)\n    {\n      throw new IOException(\"Cannot open a reader for the term vectors\");\n    }\n\n\n    termVectorsReader.get(docNumber, field, mapper);\n  }\n\n","bugFix":["352bfe1fae83b92d1562f01c057bfbe6f5af3ddb"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"66f3dadb253a44f4cccc81c8a21b685b18b201fb","date":1247245699,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/SegmentReader#getTermFreqVector(int,String,TermVectorMapper).mjava","pathOld":"src/java/org/apache/lucene/index/SegmentReader#getTermFreqVector(int,String,TermVectorMapper).mjava","sourceNew":"  public void getTermFreqVector(int docNumber, String field, TermVectorMapper mapper) throws IOException {\n    ensureOpen();\n    FieldInfo fi = core.fieldInfos.fieldInfo(field);\n    if (fi == null || !fi.storeTermVector)\n      return;\n\n    TermVectorsReader termVectorsReader = getTermVectorsReader();\n    if (termVectorsReader == null) {\n      return;\n    }\n\n\n    termVectorsReader.get(docNumber, field, mapper);\n  }\n\n","sourceOld":"  public void getTermFreqVector(int docNumber, String field, TermVectorMapper mapper) throws IOException {\n    ensureOpen();\n    FieldInfo fi = fieldInfos.fieldInfo(field);\n    if (fi == null || !fi.storeTermVector || termVectorsReaderOrig == null)\n      return;\n\n    TermVectorsReader termVectorsReader = getTermVectorsReader();\n    if (termVectorsReader == null)\n    {\n      return;\n    }\n\n\n    termVectorsReader.get(docNumber, field, mapper);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8a9e385641d717e641408d8fbbc62be8fc766357","date":1256746606,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/SegmentReader#getTermFreqVector(int,String,TermVectorMapper).mjava","pathOld":"src/java/org/apache/lucene/index/SegmentReader#getTermFreqVector(int,String,TermVectorMapper).mjava","sourceNew":"  @Override\n  public void getTermFreqVector(int docNumber, String field, TermVectorMapper mapper) throws IOException {\n    ensureOpen();\n    FieldInfo fi = core.fieldInfos.fieldInfo(field);\n    if (fi == null || !fi.storeTermVector)\n      return;\n\n    TermVectorsReader termVectorsReader = getTermVectorsReader();\n    if (termVectorsReader == null) {\n      return;\n    }\n\n\n    termVectorsReader.get(docNumber, field, mapper);\n  }\n\n","sourceOld":"  public void getTermFreqVector(int docNumber, String field, TermVectorMapper mapper) throws IOException {\n    ensureOpen();\n    FieldInfo fi = core.fieldInfos.fieldInfo(field);\n    if (fi == null || !fi.storeTermVector)\n      return;\n\n    TermVectorsReader termVectorsReader = getTermVectorsReader();\n    if (termVectorsReader == null) {\n      return;\n    }\n\n\n    termVectorsReader.get(docNumber, field, mapper);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/SegmentReader#getTermFreqVector(int,String,TermVectorMapper).mjava","pathOld":"src/java/org/apache/lucene/index/SegmentReader#getTermFreqVector(int,String,TermVectorMapper).mjava","sourceNew":"  @Override\n  public void getTermFreqVector(int docNumber, String field, TermVectorMapper mapper) throws IOException {\n    ensureOpen();\n    FieldInfo fi = core.fieldInfos.fieldInfo(field);\n    if (fi == null || !fi.storeTermVector)\n      return;\n\n    TermVectorsReader termVectorsReader = getTermVectorsReader();\n    if (termVectorsReader == null) {\n      return;\n    }\n\n\n    termVectorsReader.get(docNumber, field, mapper);\n  }\n\n","sourceOld":"  @Override\n  public void getTermFreqVector(int docNumber, String field, TermVectorMapper mapper) throws IOException {\n    ensureOpen();\n    FieldInfo fi = core.fieldInfos.fieldInfo(field);\n    if (fi == null || !fi.storeTermVector)\n      return;\n\n    TermVectorsReader termVectorsReader = getTermVectorsReader();\n    if (termVectorsReader == null) {\n      return;\n    }\n\n\n    termVectorsReader.get(docNumber, field, mapper);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"14f9a4aa04cd68f73b240dec63343061922f749a":["352bfe1fae83b92d1562f01c057bfbe6f5af3ddb"],"352bfe1fae83b92d1562f01c057bfbe6f5af3ddb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"8a9e385641d717e641408d8fbbc62be8fc766357":["66f3dadb253a44f4cccc81c8a21b685b18b201fb"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["8a9e385641d717e641408d8fbbc62be8fc766357"],"66f3dadb253a44f4cccc81c8a21b685b18b201fb":["14f9a4aa04cd68f73b240dec63343061922f749a"]},"commit2Childs":{"14f9a4aa04cd68f73b240dec63343061922f749a":["66f3dadb253a44f4cccc81c8a21b685b18b201fb"],"352bfe1fae83b92d1562f01c057bfbe6f5af3ddb":["14f9a4aa04cd68f73b240dec63343061922f749a"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["352bfe1fae83b92d1562f01c057bfbe6f5af3ddb"],"8a9e385641d717e641408d8fbbc62be8fc766357":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"66f3dadb253a44f4cccc81c8a21b685b18b201fb":["8a9e385641d717e641408d8fbbc62be8fc766357"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}