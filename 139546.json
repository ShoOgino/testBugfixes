{"path":"solr/contrib/map-reduce/src/test/org/apache/solr/hadoop/MorphlineGoLiveMiniMRTest#createJetty(File,String,String,String,String).mjava","commits":[{"id":"70f91c8322fbffe3a3a897ef20ea19119cac10cd","date":1386170124,"type":1,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/contrib/map-reduce/src/test/org/apache/solr/hadoop/MorphlineGoLiveMiniMRTest#createJetty(File,String,String,String,String).mjava","pathOld":"solr/contrib/solr-mr/src/test/org/apache/solr/hadoop/MorphlineGoLiveMiniMRTest#createJetty(File,String,String,String,String).mjava","sourceNew":"  @Override\n  public JettySolrRunner createJetty(File solrHome, String dataDir,\n      String shardList, String solrConfigOverride, String schemaOverride)\n      throws Exception {\n    \n    JettySolrRunner jetty = new JettySolrRunner(solrHome.getAbsolutePath(),\n        context, 0, solrConfigOverride, schemaOverride);\n\n    jetty.setShards(shardList);\n    \n    if (System.getProperty(\"collection\") == null) {\n      System.setProperty(\"collection\", \"collection1\");\n    }\n    \n    jetty.start();\n    \n    System.clearProperty(\"collection\");\n    \n    return jetty;\n  }\n\n","sourceOld":"  @Override\n  public JettySolrRunner createJetty(File solrHome, String dataDir,\n      String shardList, String solrConfigOverride, String schemaOverride)\n      throws Exception {\n    \n    JettySolrRunner jetty = new JettySolrRunner(solrHome.getAbsolutePath(),\n        context, 0, solrConfigOverride, schemaOverride);\n\n    jetty.setShards(shardList);\n    \n    if (System.getProperty(\"collection\") == null) {\n      System.setProperty(\"collection\", \"collection1\");\n    }\n    \n    jetty.start();\n    \n    System.clearProperty(\"collection\");\n    \n    return jetty;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"74f45af4339b0daf7a95c820ab88c1aea74fbce0","date":1387475327,"type":0,"author":"Michael McCandless","isMerge":true,"pathNew":"solr/contrib/map-reduce/src/test/org/apache/solr/hadoop/MorphlineGoLiveMiniMRTest#createJetty(File,String,String,String,String).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public JettySolrRunner createJetty(File solrHome, String dataDir,\n      String shardList, String solrConfigOverride, String schemaOverride)\n      throws Exception {\n    \n    JettySolrRunner jetty = new JettySolrRunner(solrHome.getAbsolutePath(),\n        context, 0, solrConfigOverride, schemaOverride);\n\n    jetty.setShards(shardList);\n    \n    if (System.getProperty(\"collection\") == null) {\n      System.setProperty(\"collection\", \"collection1\");\n    }\n    \n    jetty.start();\n    \n    System.clearProperty(\"collection\");\n    \n    return jetty;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c859c41d7439e804c53db4bdfc08320837b088da","date":1392226990,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/contrib/map-reduce/src/test/org/apache/solr/hadoop/MorphlineGoLiveMiniMRTest#createJetty(File,String,String,String,String).mjava","pathOld":"solr/contrib/map-reduce/src/test/org/apache/solr/hadoop/MorphlineGoLiveMiniMRTest#createJetty(File,String,String,String,String).mjava","sourceNew":"  @Override\n  public JettySolrRunner createJetty(File solrHome, String dataDir,\n      String shardList, String solrConfigOverride, String schemaOverride)\n      throws Exception {\n    \n    JettySolrRunner jetty = new JettySolrRunner(solrHome.getAbsolutePath(),\n        context, 0, solrConfigOverride, schemaOverride, true, null, sslConfig);\n\n    jetty.setShards(shardList);\n    \n    if (System.getProperty(\"collection\") == null) {\n      System.setProperty(\"collection\", \"collection1\");\n    }\n    \n    jetty.start();\n    \n    System.clearProperty(\"collection\");\n    \n    return jetty;\n  }\n\n","sourceOld":"  @Override\n  public JettySolrRunner createJetty(File solrHome, String dataDir,\n      String shardList, String solrConfigOverride, String schemaOverride)\n      throws Exception {\n    \n    JettySolrRunner jetty = new JettySolrRunner(solrHome.getAbsolutePath(),\n        context, 0, solrConfigOverride, schemaOverride);\n\n    jetty.setShards(shardList);\n    \n    if (System.getProperty(\"collection\") == null) {\n      System.setProperty(\"collection\", \"collection1\");\n    }\n    \n    jetty.start();\n    \n    System.clearProperty(\"collection\");\n    \n    return jetty;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c66158bb16e902a21272772f1b911f04b1a55abb","date":1424959524,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/contrib/map-reduce/src/test/org/apache/solr/hadoop/MorphlineGoLiveMiniMRTest#createJetty(File,String,String,String,String).mjava","pathOld":"solr/contrib/map-reduce/src/test/org/apache/solr/hadoop/MorphlineGoLiveMiniMRTest#createJetty(File,String,String,String,String).mjava","sourceNew":"  @Override\n  public JettySolrRunner createJetty(File solrHome, String dataDir,\n      String shardList, String solrConfigOverride, String schemaOverride)\n      throws Exception {\n\n    JettySolrRunner jetty\n        = new JettySolrRunner(solrHome.getAbsolutePath(), solrConfigOverride, schemaOverride, buildJettyConfig(context));\n\n    jetty.setShards(shardList);\n    \n    if (System.getProperty(\"collection\") == null) {\n      System.setProperty(\"collection\", \"collection1\");\n    }\n    \n    jetty.start();\n    \n    System.clearProperty(\"collection\");\n    \n    return jetty;\n  }\n\n","sourceOld":"  @Override\n  public JettySolrRunner createJetty(File solrHome, String dataDir,\n      String shardList, String solrConfigOverride, String schemaOverride)\n      throws Exception {\n    \n    JettySolrRunner jetty = new JettySolrRunner(solrHome.getAbsolutePath(),\n        context, 0, solrConfigOverride, schemaOverride, true, null, sslConfig);\n\n    jetty.setShards(shardList);\n    \n    if (System.getProperty(\"collection\") == null) {\n      System.setProperty(\"collection\", \"collection1\");\n    }\n    \n    jetty.start();\n    \n    System.clearProperty(\"collection\");\n    \n    return jetty;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9bc766d645fa848f86c381c7f6acf2c881c99399","date":1425549246,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/contrib/map-reduce/src/test/org/apache/solr/hadoop/MorphlineGoLiveMiniMRTest#createJetty(File,String,String,String,String).mjava","pathOld":"solr/contrib/map-reduce/src/test/org/apache/solr/hadoop/MorphlineGoLiveMiniMRTest#createJetty(File,String,String,String,String).mjava","sourceNew":"  @Override\n  public JettySolrRunner createJetty(File solrHome, String dataDir,\n      String shardList, String solrConfigOverride, String schemaOverride)\n      throws Exception {\n\n    Properties props = new Properties();\n    if (solrConfigOverride != null)\n      props.setProperty(\"solrconfig\", solrConfigOverride);\n    if (schemaOverride != null)\n      props.setProperty(\"schema\", schemaOverride);\n    props.setProperty(\"shards\", shardList);\n\n    String collection = System.getProperty(\"collection\");\n    if (collection == null)\n      collection = \"collection1\";\n    props.setProperty(\"collection\", collection);\n\n    JettySolrRunner jetty = new JettySolrRunner(solrHome.getAbsolutePath(), props, buildJettyConfig(context));\n    jetty.start();\n    \n    return jetty;\n  }\n\n","sourceOld":"  @Override\n  public JettySolrRunner createJetty(File solrHome, String dataDir,\n      String shardList, String solrConfigOverride, String schemaOverride)\n      throws Exception {\n\n    JettySolrRunner jetty\n        = new JettySolrRunner(solrHome.getAbsolutePath(), solrConfigOverride, schemaOverride, buildJettyConfig(context));\n\n    jetty.setShards(shardList);\n    \n    if (System.getProperty(\"collection\") == null) {\n      System.setProperty(\"collection\", \"collection1\");\n    }\n    \n    jetty.start();\n    \n    System.clearProperty(\"collection\");\n    \n    return jetty;\n  }\n\n","bugFix":null,"bugIntro":["da59c6d3748d1a2a9d1a58a69f70383622d68379"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","date":1427779360,"type":3,"author":"Ryan Ernst","isMerge":true,"pathNew":"solr/contrib/map-reduce/src/test/org/apache/solr/hadoop/MorphlineGoLiveMiniMRTest#createJetty(File,String,String,String,String).mjava","pathOld":"solr/contrib/map-reduce/src/test/org/apache/solr/hadoop/MorphlineGoLiveMiniMRTest#createJetty(File,String,String,String,String).mjava","sourceNew":"  @Override\n  public JettySolrRunner createJetty(File solrHome, String dataDir,\n      String shardList, String solrConfigOverride, String schemaOverride)\n      throws Exception {\n\n    Properties props = new Properties();\n    if (solrConfigOverride != null)\n      props.setProperty(\"solrconfig\", solrConfigOverride);\n    if (schemaOverride != null)\n      props.setProperty(\"schema\", schemaOverride);\n    props.setProperty(\"shards\", shardList);\n\n    String collection = System.getProperty(\"collection\");\n    if (collection == null)\n      collection = \"collection1\";\n    props.setProperty(\"collection\", collection);\n\n    JettySolrRunner jetty = new JettySolrRunner(solrHome.getAbsolutePath(), props, buildJettyConfig(context));\n    jetty.start();\n    \n    return jetty;\n  }\n\n","sourceOld":"  @Override\n  public JettySolrRunner createJetty(File solrHome, String dataDir,\n      String shardList, String solrConfigOverride, String schemaOverride)\n      throws Exception {\n    \n    JettySolrRunner jetty = new JettySolrRunner(solrHome.getAbsolutePath(),\n        context, 0, solrConfigOverride, schemaOverride, true, null, sslConfig);\n\n    jetty.setShards(shardList);\n    \n    if (System.getProperty(\"collection\") == null) {\n      System.setProperty(\"collection\", \"collection1\");\n    }\n    \n    jetty.start();\n    \n    System.clearProperty(\"collection\");\n    \n    return jetty;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"da59c6d3748d1a2a9d1a58a69f70383622d68379","date":1433873890,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/contrib/map-reduce/src/test/org/apache/solr/hadoop/MorphlineGoLiveMiniMRTest#createJetty(File,String,String,String,String).mjava","pathOld":"solr/contrib/map-reduce/src/test/org/apache/solr/hadoop/MorphlineGoLiveMiniMRTest#createJetty(File,String,String,String,String).mjava","sourceNew":"  @Override\n  public JettySolrRunner createJetty(File solrHome, String dataDir,\n      String shardList, String solrConfigOverride, String schemaOverride)\n      throws Exception {\n\n    Properties props = new Properties();\n    if (solrConfigOverride != null)\n      props.setProperty(\"solrconfig\", solrConfigOverride);\n    if (schemaOverride != null)\n      props.setProperty(\"schema\", schemaOverride);\n    if (shardList != null) \n      props.setProperty(\"shards\", shardList);\n\n    String collection = System.getProperty(\"collection\");\n    if (collection == null)\n      collection = \"collection1\";\n    props.setProperty(\"collection\", collection);\n\n    JettySolrRunner jetty = new JettySolrRunner(solrHome.getAbsolutePath(), props, buildJettyConfig(context));\n    jetty.start();\n    \n    return jetty;\n  }\n\n","sourceOld":"  @Override\n  public JettySolrRunner createJetty(File solrHome, String dataDir,\n      String shardList, String solrConfigOverride, String schemaOverride)\n      throws Exception {\n\n    Properties props = new Properties();\n    if (solrConfigOverride != null)\n      props.setProperty(\"solrconfig\", solrConfigOverride);\n    if (schemaOverride != null)\n      props.setProperty(\"schema\", schemaOverride);\n    props.setProperty(\"shards\", shardList);\n\n    String collection = System.getProperty(\"collection\");\n    if (collection == null)\n      collection = \"collection1\";\n    props.setProperty(\"collection\", collection);\n\n    JettySolrRunner jetty = new JettySolrRunner(solrHome.getAbsolutePath(), props, buildJettyConfig(context));\n    jetty.start();\n    \n    return jetty;\n  }\n\n","bugFix":["9bc766d645fa848f86c381c7f6acf2c881c99399"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"12109b652e9210b8d58fca47f6c4a725d058a58e","date":1490373076,"type":4,"author":"Steve Rowe","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/contrib/map-reduce/src/test/org/apache/solr/hadoop/MorphlineGoLiveMiniMRTest#createJetty(File,String,String,String,String).mjava","sourceNew":null,"sourceOld":"  @Override\n  public JettySolrRunner createJetty(File solrHome, String dataDir,\n      String shardList, String solrConfigOverride, String schemaOverride)\n      throws Exception {\n\n    Properties props = new Properties();\n    if (solrConfigOverride != null)\n      props.setProperty(\"solrconfig\", solrConfigOverride);\n    if (schemaOverride != null)\n      props.setProperty(\"schema\", schemaOverride);\n    if (shardList != null) \n      props.setProperty(\"shards\", shardList);\n\n    String collection = System.getProperty(\"collection\");\n    if (collection == null)\n      collection = \"collection1\";\n    props.setProperty(\"collection\", collection);\n\n    JettySolrRunner jetty = new JettySolrRunner(solrHome.getAbsolutePath(), props, buildJettyConfig(context));\n    jetty.start();\n    \n    return jetty;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fe1c4aa9af769a38e878f608070f672efbeac27f","date":1490594650,"type":4,"author":"Steve Rowe","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/contrib/map-reduce/src/test/org/apache/solr/hadoop/MorphlineGoLiveMiniMRTest#createJetty(File,String,String,String,String).mjava","sourceNew":null,"sourceOld":"  @Override\n  public JettySolrRunner createJetty(File solrHome, String dataDir,\n      String shardList, String solrConfigOverride, String schemaOverride)\n      throws Exception {\n\n    Properties props = new Properties();\n    if (solrConfigOverride != null)\n      props.setProperty(\"solrconfig\", solrConfigOverride);\n    if (schemaOverride != null)\n      props.setProperty(\"schema\", schemaOverride);\n    if (shardList != null) \n      props.setProperty(\"shards\", shardList);\n\n    String collection = System.getProperty(\"collection\");\n    if (collection == null)\n      collection = \"collection1\";\n    props.setProperty(\"collection\", collection);\n\n    JettySolrRunner jetty = new JettySolrRunner(solrHome.getAbsolutePath(), props, buildJettyConfig(context));\n    jetty.start();\n    \n    return jetty;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"70f91c8322fbffe3a3a897ef20ea19119cac10cd":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":["c859c41d7439e804c53db4bdfc08320837b088da","9bc766d645fa848f86c381c7f6acf2c881c99399"],"12109b652e9210b8d58fca47f6c4a725d058a58e":["da59c6d3748d1a2a9d1a58a69f70383622d68379"],"da59c6d3748d1a2a9d1a58a69f70383622d68379":["9bc766d645fa848f86c381c7f6acf2c881c99399"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"9bc766d645fa848f86c381c7f6acf2c881c99399":["c66158bb16e902a21272772f1b911f04b1a55abb"],"74f45af4339b0daf7a95c820ab88c1aea74fbce0":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","70f91c8322fbffe3a3a897ef20ea19119cac10cd"],"fe1c4aa9af769a38e878f608070f672efbeac27f":["da59c6d3748d1a2a9d1a58a69f70383622d68379"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["12109b652e9210b8d58fca47f6c4a725d058a58e"],"c66158bb16e902a21272772f1b911f04b1a55abb":["c859c41d7439e804c53db4bdfc08320837b088da"],"c859c41d7439e804c53db4bdfc08320837b088da":["70f91c8322fbffe3a3a897ef20ea19119cac10cd"]},"commit2Childs":{"70f91c8322fbffe3a3a897ef20ea19119cac10cd":["74f45af4339b0daf7a95c820ab88c1aea74fbce0","c859c41d7439e804c53db4bdfc08320837b088da"],"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":[],"12109b652e9210b8d58fca47f6c4a725d058a58e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"da59c6d3748d1a2a9d1a58a69f70383622d68379":["12109b652e9210b8d58fca47f6c4a725d058a58e","fe1c4aa9af769a38e878f608070f672efbeac27f"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["70f91c8322fbffe3a3a897ef20ea19119cac10cd","74f45af4339b0daf7a95c820ab88c1aea74fbce0"],"9bc766d645fa848f86c381c7f6acf2c881c99399":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","da59c6d3748d1a2a9d1a58a69f70383622d68379"],"74f45af4339b0daf7a95c820ab88c1aea74fbce0":[],"fe1c4aa9af769a38e878f608070f672efbeac27f":[],"c859c41d7439e804c53db4bdfc08320837b088da":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","c66158bb16e902a21272772f1b911f04b1a55abb"],"c66158bb16e902a21272772f1b911f04b1a55abb":["9bc766d645fa848f86c381c7f6acf2c881c99399"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","74f45af4339b0daf7a95c820ab88c1aea74fbce0","fe1c4aa9af769a38e878f608070f672efbeac27f","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}