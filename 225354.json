{"path":"lucene/core/src/test/org/apache/lucene/index/TestConcurrentMergeScheduler#testNoStallMergeThreads().mjava","commits":[{"id":"c6cc2915889370c9313ee1741da315e976bdd574","date":1422111819,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestConcurrentMergeScheduler#testNoStallMergeThreads().mjava","pathOld":"/dev/null","sourceNew":"  // LUCENE-6197\n  public void testNoStallMergeThreads() throws Exception {\n    MockDirectoryWrapper dir = newMockDirectory();\n\n    IndexWriterConfig iwc = newIndexWriterConfig(new MockAnalyzer(random()));\n    iwc.setMergePolicy(NoMergePolicy.INSTANCE);\n    iwc.setMaxBufferedDocs(2);\n    IndexWriter w = new IndexWriter(dir, iwc);\n    for(int i=0;i<1000;i++) {\n      Document doc = new Document();\n      doc.add(newStringField(\"field\", \"\"+i, Field.Store.YES));\n      w.addDocument(doc);\n    }\n    w.close();\n\n    iwc = newIndexWriterConfig(new MockAnalyzer(random()));\n    AtomicBoolean failed = new AtomicBoolean();\n    ConcurrentMergeScheduler cms = new ConcurrentMergeScheduler() {\n        @Override\n        protected void doStall() {\n          if (Thread.currentThread().getName().startsWith(\"Lucene Merge Thread\")) {\n            failed.set(true);\n          }\n          super.doStall();\n        }\n      };\n    cms.setMaxMergesAndThreads(2, 1);\n    iwc.setMergeScheduler(cms);\n    iwc.setMaxBufferedDocs(2);\n\n    w = new IndexWriter(dir, iwc);\n    w.forceMerge(1);\n    w.close();\n    dir.close();\n\n    assertFalse(failed.get());\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4208ed8e426ae5f75a41d8b4ae53f4587e413061","date":1580475454,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestConcurrentMergeScheduler#testNoStallMergeThreads().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestConcurrentMergeScheduler#testNoStallMergeThreads().mjava","sourceNew":"  // LUCENE-6197\n  public void testNoStallMergeThreads() throws Exception {\n    MockDirectoryWrapper dir = newMockDirectory();\n\n    IndexWriterConfig iwc = newIndexWriterConfig(new MockAnalyzer(random()));\n    iwc.setMergePolicy(NoMergePolicy.INSTANCE);\n    iwc.setMaxBufferedDocs(2);\n    IndexWriter w = new IndexWriter(dir, iwc);\n    int numDocs = TEST_NIGHTLY ? 1000 : 100;\n    for(int i=0;i<numDocs;i++) {\n      Document doc = new Document();\n      doc.add(newStringField(\"field\", \"\"+i, Field.Store.YES));\n      w.addDocument(doc);\n    }\n    w.close();\n\n    iwc = newIndexWriterConfig(new MockAnalyzer(random()));\n    AtomicBoolean failed = new AtomicBoolean();\n    ConcurrentMergeScheduler cms = new ConcurrentMergeScheduler() {\n        @Override\n        protected void doStall() {\n          if (Thread.currentThread().getName().startsWith(\"Lucene Merge Thread\")) {\n            failed.set(true);\n          }\n          super.doStall();\n        }\n      };\n    cms.setMaxMergesAndThreads(2, 1);\n    iwc.setMergeScheduler(cms);\n    iwc.setMaxBufferedDocs(2);\n\n    w = new IndexWriter(dir, iwc);\n    w.forceMerge(1);\n    w.close();\n    dir.close();\n\n    assertFalse(failed.get());\n  }\n\n","sourceOld":"  // LUCENE-6197\n  public void testNoStallMergeThreads() throws Exception {\n    MockDirectoryWrapper dir = newMockDirectory();\n\n    IndexWriterConfig iwc = newIndexWriterConfig(new MockAnalyzer(random()));\n    iwc.setMergePolicy(NoMergePolicy.INSTANCE);\n    iwc.setMaxBufferedDocs(2);\n    IndexWriter w = new IndexWriter(dir, iwc);\n    for(int i=0;i<1000;i++) {\n      Document doc = new Document();\n      doc.add(newStringField(\"field\", \"\"+i, Field.Store.YES));\n      w.addDocument(doc);\n    }\n    w.close();\n\n    iwc = newIndexWriterConfig(new MockAnalyzer(random()));\n    AtomicBoolean failed = new AtomicBoolean();\n    ConcurrentMergeScheduler cms = new ConcurrentMergeScheduler() {\n        @Override\n        protected void doStall() {\n          if (Thread.currentThread().getName().startsWith(\"Lucene Merge Thread\")) {\n            failed.set(true);\n          }\n          super.doStall();\n        }\n      };\n    cms.setMaxMergesAndThreads(2, 1);\n    iwc.setMergeScheduler(cms);\n    iwc.setMaxBufferedDocs(2);\n\n    w = new IndexWriter(dir, iwc);\n    w.forceMerge(1);\n    w.close();\n    dir.close();\n\n    assertFalse(failed.get());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"c6cc2915889370c9313ee1741da315e976bdd574":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"4208ed8e426ae5f75a41d8b4ae53f4587e413061":["c6cc2915889370c9313ee1741da315e976bdd574"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["4208ed8e426ae5f75a41d8b4ae53f4587e413061"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c6cc2915889370c9313ee1741da315e976bdd574"],"c6cc2915889370c9313ee1741da315e976bdd574":["4208ed8e426ae5f75a41d8b4ae53f4587e413061"],"4208ed8e426ae5f75a41d8b4ae53f4587e413061":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}