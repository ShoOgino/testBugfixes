{"path":"lucene/src/java/org/apache/lucene/index/IntBlockPool#reset().mjava","commits":[{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/IntBlockPool#reset().mjava","pathOld":"src/java/org/apache/lucene/index/IntBlockPool#reset().mjava","sourceNew":"  public void reset() {\n    if (bufferUpto != -1) {\n      if (bufferUpto > 0)\n        // Recycle all but the first buffer\n        docWriter.recycleIntBlocks(buffers, 1, 1+bufferUpto);\n\n      // Reuse first buffer\n      bufferUpto = 0;\n      intUpto = 0;\n      intOffset = 0;\n      buffer = buffers[0];\n    }\n  }\n\n","sourceOld":"  public void reset() {\n    if (bufferUpto != -1) {\n      if (bufferUpto > 0)\n        // Recycle all but the first buffer\n        docWriter.recycleIntBlocks(buffers, 1, 1+bufferUpto);\n\n      // Reuse first buffer\n      bufferUpto = 0;\n      intUpto = 0;\n      intOffset = 0;\n      buffer = buffers[0];\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6c18273ea5b3974d2f30117f46f1ae416c28f727","date":1279708040,"type":3,"author":"Michael Busch","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/IntBlockPool#reset().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/IntBlockPool#reset().mjava","sourceNew":"  public void reset() {\n    if (bufferUpto != -1) {\n      if (bufferUpto > 0)\n        // Recycle all but the first buffer\n        docWriter.ramAllocator.recycleIntBlocks(buffers, 1, 1+bufferUpto);\n\n      // Reuse first buffer\n      bufferUpto = 0;\n      intUpto = 0;\n      intOffset = 0;\n      buffer = buffers[0];\n    }\n  }\n\n","sourceOld":"  public void reset() {\n    if (bufferUpto != -1) {\n      if (bufferUpto > 0)\n        // Recycle all but the first buffer\n        docWriter.recycleIntBlocks(buffers, 1, 1+bufferUpto);\n\n      // Reuse first buffer\n      bufferUpto = 0;\n      intUpto = 0;\n      intOffset = 0;\n      buffer = buffers[0];\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","date":1292920096,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/IntBlockPool#reset().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/IntBlockPool#reset().mjava","sourceNew":"  public void reset() {\n    if (bufferUpto != -1) {\n      if (bufferUpto > 0)\n        // Recycle all but the first buffer\n        docWriter.recycleIntBlocks(buffers, 1, 1+bufferUpto);\n\n      // Reuse first buffer\n      bufferUpto = 0;\n      intUpto = 0;\n      intOffset = 0;\n      buffer = buffers[0];\n    }\n  }\n\n","sourceOld":"  public void reset() {\n    if (bufferUpto != -1) {\n      if (bufferUpto > 0)\n        // Recycle all but the first buffer\n        docWriter.ramAllocator.recycleIntBlocks(buffers, 1, 1+bufferUpto);\n\n      // Reuse first buffer\n      bufferUpto = 0;\n      intUpto = 0;\n      intOffset = 0;\n      buffer = buffers[0];\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"54cdb3f871937873dd85ae388202af7a5efd5584","date":1294960319,"type":3,"author":"Michael Busch","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/IntBlockPool#reset().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/IntBlockPool#reset().mjava","sourceNew":"  public void reset() {\n    if (bufferUpto != -1) {\n      // Reuse first buffer\n      bufferUpto = 0;\n      intUpto = 0;\n      intOffset = 0;\n      buffer = buffers[0];\n    }\n  }\n\n","sourceOld":"  public void reset() {\n    if (bufferUpto != -1) {\n      if (bufferUpto > 0)\n        // Recycle all but the first buffer\n        docWriter.recycleIntBlocks(buffers, 1, 1+bufferUpto);\n\n      // Reuse first buffer\n      bufferUpto = 0;\n      intUpto = 0;\n      intOffset = 0;\n      buffer = buffers[0];\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d2ed1b9b7b46829fe3199afe9a8bc203f201b175","date":1301491807,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/IntBlockPool#reset().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/IntBlockPool#reset().mjava","sourceNew":"  public void reset() {\n    if (bufferUpto != -1) {\n      // Reuse first buffer\n      if (bufferUpto > 0) {\n        docWriter.recycleIntBlocks(buffers, 1, bufferUpto-1);\n        Arrays.fill(buffers, 1, bufferUpto, null);\n      }\n      bufferUpto = 0;\n      intUpto = 0;\n      intOffset = 0;\n      buffer = buffers[0];\n    }\n  }\n\n","sourceOld":"  public void reset() {\n    if (bufferUpto != -1) {\n      // Reuse first buffer\n      bufferUpto = 0;\n      intUpto = 0;\n      intOffset = 0;\n      buffer = buffers[0];\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b3e06be49006ecac364d39d12b9c9f74882f9b9f","date":1304289513,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/IntBlockPool#reset().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/IntBlockPool#reset().mjava","sourceNew":"  public void reset() {\n    if (bufferUpto != -1) {\n      // Reuse first buffer\n      if (bufferUpto > 0) {\n        docWriter.recycleIntBlocks(buffers, 1, bufferUpto-1);\n        Arrays.fill(buffers, 1, bufferUpto, null);\n      }\n      bufferUpto = 0;\n      intUpto = 0;\n      intOffset = 0;\n      buffer = buffers[0];\n    }\n  }\n\n","sourceOld":"  public void reset() {\n    if (bufferUpto != -1) {\n      if (bufferUpto > 0)\n        // Recycle all but the first buffer\n        docWriter.recycleIntBlocks(buffers, 1, 1+bufferUpto);\n\n      // Reuse first buffer\n      bufferUpto = 0;\n      intUpto = 0;\n      intOffset = 0;\n      buffer = buffers[0];\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"135621f3a0670a9394eb563224a3b76cc4dddc0f","date":1304344257,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/IntBlockPool#reset().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/IntBlockPool#reset().mjava","sourceNew":"  public void reset() {\n    if (bufferUpto != -1) {\n      // Reuse first buffer\n      if (bufferUpto > 0) {\n        docWriter.recycleIntBlocks(buffers, 1, bufferUpto-1);\n        Arrays.fill(buffers, 1, bufferUpto, null);\n      }\n      bufferUpto = 0;\n      intUpto = 0;\n      intOffset = 0;\n      buffer = buffers[0];\n    }\n  }\n\n","sourceOld":"  public void reset() {\n    if (bufferUpto != -1) {\n      if (bufferUpto > 0)\n        // Recycle all but the first buffer\n        docWriter.recycleIntBlocks(buffers, 1, 1+bufferUpto);\n\n      // Reuse first buffer\n      bufferUpto = 0;\n      intUpto = 0;\n      intOffset = 0;\n      buffer = buffers[0];\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a3776dccca01c11e7046323cfad46a3b4a471233","date":1306100719,"type":3,"author":"Steven Rowe","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/IntBlockPool#reset().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/IntBlockPool#reset().mjava","sourceNew":"  public void reset() {\n    if (bufferUpto != -1) {\n      // Reuse first buffer\n      if (bufferUpto > 0) {\n        docWriter.recycleIntBlocks(buffers, 1, bufferUpto-1);\n        Arrays.fill(buffers, 1, bufferUpto, null);\n      }\n      bufferUpto = 0;\n      intUpto = 0;\n      intOffset = 0;\n      buffer = buffers[0];\n    }\n  }\n\n","sourceOld":"  public void reset() {\n    if (bufferUpto != -1) {\n      if (bufferUpto > 0)\n        // Recycle all but the first buffer\n        docWriter.recycleIntBlocks(buffers, 1, 1+bufferUpto);\n\n      // Reuse first buffer\n      bufferUpto = 0;\n      intUpto = 0;\n      intOffset = 0;\n      buffer = buffers[0];\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":5,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/IntBlockPool#reset().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/IntBlockPool#reset().mjava","sourceNew":"  public void reset() {\n    if (bufferUpto != -1) {\n      // Reuse first buffer\n      if (bufferUpto > 0) {\n        docWriter.recycleIntBlocks(buffers, 1, bufferUpto-1);\n        Arrays.fill(buffers, 1, bufferUpto, null);\n      }\n      bufferUpto = 0;\n      intUpto = 0;\n      intOffset = 0;\n      buffer = buffers[0];\n    }\n  }\n\n","sourceOld":"  public void reset() {\n    if (bufferUpto != -1) {\n      // Reuse first buffer\n      if (bufferUpto > 0) {\n        docWriter.recycleIntBlocks(buffers, 1, bufferUpto-1);\n        Arrays.fill(buffers, 1, bufferUpto, null);\n      }\n      bufferUpto = 0;\n      intUpto = 0;\n      intOffset = 0;\n      buffer = buffers[0];\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"d2ed1b9b7b46829fe3199afe9a8bc203f201b175":["54cdb3f871937873dd85ae388202af7a5efd5584"],"6c18273ea5b3974d2f30117f46f1ae416c28f727":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["b3e06be49006ecac364d39d12b9c9f74882f9b9f"],"54cdb3f871937873dd85ae388202af7a5efd5584":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a"],"a3776dccca01c11e7046323cfad46a3b4a471233":["9454a6510e2db155fb01faa5c049b06ece95fab9","b3e06be49006ecac364d39d12b9c9f74882f9b9f"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"135621f3a0670a9394eb563224a3b76cc4dddc0f":["9454a6510e2db155fb01faa5c049b06ece95fab9","b3e06be49006ecac364d39d12b9c9f74882f9b9f"],"b3e06be49006ecac364d39d12b9c9f74882f9b9f":["9454a6510e2db155fb01faa5c049b06ece95fab9","d2ed1b9b7b46829fe3199afe9a8bc203f201b175"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["6c18273ea5b3974d2f30117f46f1ae416c28f727","9454a6510e2db155fb01faa5c049b06ece95fab9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"d2ed1b9b7b46829fe3199afe9a8bc203f201b175":["b3e06be49006ecac364d39d12b9c9f74882f9b9f"],"6c18273ea5b3974d2f30117f46f1ae416c28f727":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a"],"54cdb3f871937873dd85ae388202af7a5efd5584":["d2ed1b9b7b46829fe3199afe9a8bc203f201b175"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a3776dccca01c11e7046323cfad46a3b4a471233":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"135621f3a0670a9394eb563224a3b76cc4dddc0f":[],"b3e06be49006ecac364d39d12b9c9f74882f9b9f":["3a119bbc8703c10faa329ec201c654b3a35a1e3e","a3776dccca01c11e7046323cfad46a3b4a471233","135621f3a0670a9394eb563224a3b76cc4dddc0f"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["54cdb3f871937873dd85ae388202af7a5efd5584"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["6c18273ea5b3974d2f30117f46f1ae416c28f727","a3776dccca01c11e7046323cfad46a3b4a471233","135621f3a0670a9394eb563224a3b76cc4dddc0f","b3e06be49006ecac364d39d12b9c9f74882f9b9f","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a3776dccca01c11e7046323cfad46a3b4a471233","135621f3a0670a9394eb563224a3b76cc4dddc0f","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}