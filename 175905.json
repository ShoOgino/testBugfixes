{"path":"lucene/test-framework/src/java/org/apache/lucene/index/BasePointsFormatTestCase#verify(byte[][][],int[],int,int).mjava","commits":[{"id":"4522ffca5a1f420c6a02198c9332d7c596a30ca5","date":1457270822,"type":1,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/index/BasePointsFormatTestCase#verify(byte[][][],int[],int,int).mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/index/BasePointFormatTestCase#verify(byte[][][],int[],int,int).mjava","sourceNew":"  /** docIDs can be null, for the single valued case, else it maps value to docID, but all values for one doc must be adjacent */\n  private void verify(byte[][][] docValues, int[] docIDs, int numDims, int numBytesPerDim) throws Exception {\n    try (Directory dir = getDirectory(docValues.length)) {\n      while (true) {\n        try {\n          verify(dir, docValues, docIDs, numDims, numBytesPerDim, false);\n          return;\n        } catch (IllegalArgumentException iae) {\n          // This just means we got a too-small maxMB for the maxPointsInLeafNode; just retry\n          assertTrue(iae.getMessage().contains(\"either increase maxMBSortInHeap or decrease maxPointsInLeafNode\"));\n        }\n      }\n    }\n  }\n\n","sourceOld":"  /** docIDs can be null, for the single valued case, else it maps value to docID, but all values for one doc must be adjacent */\n  private void verify(byte[][][] docValues, int[] docIDs, int numDims, int numBytesPerDim) throws Exception {\n    try (Directory dir = getDirectory(docValues.length)) {\n      while (true) {\n        try {\n          verify(dir, docValues, docIDs, numDims, numBytesPerDim, false);\n          return;\n        } catch (IllegalArgumentException iae) {\n          // This just means we got a too-small maxMB for the maxPointsInLeafNode; just retry\n          assertTrue(iae.getMessage().contains(\"either increase maxMBSortInHeap or decrease maxPointsInLeafNode\"));\n        }\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f6652c943595e92c187ee904c382863013eae28f","date":1539042663,"type":3,"author":"Nicholas Knize","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/index/BasePointsFormatTestCase#verify(byte[][][],int[],int,int).mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/index/BasePointsFormatTestCase#verify(byte[][][],int[],int,int).mjava","sourceNew":"  private void verify(byte[][][] docValues, int[] docIDs, int numDims, int numBytesPerDim) throws Exception {\n    verify(docValues, docIDs, numDims, numDims, numBytesPerDim);\n  }\n\n","sourceOld":"  /** docIDs can be null, for the single valued case, else it maps value to docID, but all values for one doc must be adjacent */\n  private void verify(byte[][][] docValues, int[] docIDs, int numDims, int numBytesPerDim) throws Exception {\n    try (Directory dir = getDirectory(docValues.length)) {\n      while (true) {\n        try {\n          verify(dir, docValues, docIDs, numDims, numBytesPerDim, false);\n          return;\n        } catch (IllegalArgumentException iae) {\n          // This just means we got a too-small maxMB for the maxPointsInLeafNode; just retry\n          assertTrue(iae.getMessage().contains(\"either increase maxMBSortInHeap or decrease maxPointsInLeafNode\"));\n        }\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"4522ffca5a1f420c6a02198c9332d7c596a30ca5":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"f6652c943595e92c187ee904c382863013eae28f":["4522ffca5a1f420c6a02198c9332d7c596a30ca5"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["f6652c943595e92c187ee904c382863013eae28f"]},"commit2Childs":{"4522ffca5a1f420c6a02198c9332d7c596a30ca5":["f6652c943595e92c187ee904c382863013eae28f"],"f6652c943595e92c187ee904c382863013eae28f":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["4522ffca5a1f420c6a02198c9332d7c596a30ca5"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}