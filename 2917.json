{"path":"lucene/src/java/org/apache/lucene/index/values/Floats.FloatsReader#FloatsReader(Directory,String,int).mjava","commits":[{"id":"01f60198ece724a6e96cd0b45f289cf42ff83d4f","date":1286864103,"type":0,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/values/Floats.FloatsReader#FloatsReader(Directory,String,int).mjava","pathOld":"/dev/null","sourceNew":"    protected FloatsReader(Directory dir, String id, int maxDoc)\n        throws IOException {\n      datIn = dir.openInput(IndexFileNames.segmentFileName(id, \"\",\n          IndexFileNames.CSF_DATA_EXTENSION));\n      CodecUtil.checkHeader(datIn, CODEC_NAME, VERSION_START, VERSION_START);\n      precisionBytes = datIn.readByte();\n      assert precisionBytes == 4 || precisionBytes == 8;\n      this.maxDoc = maxDoc;\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2d84736c4614acce6720851cbd2c823d7cd516e4","date":1290551630,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/values/Floats.FloatsReader#FloatsReader(Directory,String,int).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/values/Floats.FloatsReader#FloatsReader(Directory,String,int).mjava","sourceNew":"    protected FloatsReader(Directory dir, String id, int maxDoc)\n        throws IOException {\n      datIn = dir.openInput(IndexFileNames.segmentFileName(id, \"\",\n          Writer.DATA_EXTENSION));\n      CodecUtil.checkHeader(datIn, CODEC_NAME, VERSION_START, VERSION_START);\n      precisionBytes = datIn.readByte();\n      assert precisionBytes == 4 || precisionBytes == 8;\n      this.maxDoc = maxDoc;\n    }\n\n","sourceOld":"    protected FloatsReader(Directory dir, String id, int maxDoc)\n        throws IOException {\n      datIn = dir.openInput(IndexFileNames.segmentFileName(id, \"\",\n          IndexFileNames.CSF_DATA_EXTENSION));\n      CodecUtil.checkHeader(datIn, CODEC_NAME, VERSION_START, VERSION_START);\n      precisionBytes = datIn.readByte();\n      assert precisionBytes == 4 || precisionBytes == 8;\n      this.maxDoc = maxDoc;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2e8d7ba2175f47e280231533f7d3016249cea88b","date":1307711934,"type":0,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/values/Floats.FloatsReader#FloatsReader(Directory,String,int).mjava","pathOld":"/dev/null","sourceNew":"    protected FloatsReader(Directory dir, String id, int maxDoc)\n        throws IOException {\n      datIn = dir.openInput(IndexFileNames.segmentFileName(id, \"\",\n          Writer.DATA_EXTENSION));\n      CodecUtil.checkHeader(datIn, CODEC_NAME, VERSION_START, VERSION_START);\n      precisionBytes = datIn.readByte();\n      assert precisionBytes == 4 || precisionBytes == 8;\n      this.maxDoc = maxDoc;\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a02058e0eaba4bbd5d05e6b06b9522c0acfd1655","date":1307729864,"type":0,"author":"Steven Rowe","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/values/Floats.FloatsReader#FloatsReader(Directory,String,int).mjava","pathOld":"/dev/null","sourceNew":"    protected FloatsReader(Directory dir, String id, int maxDoc)\n        throws IOException {\n      datIn = dir.openInput(IndexFileNames.segmentFileName(id, \"\",\n          Writer.DATA_EXTENSION));\n      CodecUtil.checkHeader(datIn, CODEC_NAME, VERSION_START, VERSION_START);\n      precisionBytes = datIn.readByte();\n      assert precisionBytes == 4 || precisionBytes == 8;\n      this.maxDoc = maxDoc;\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"639c36565ce03aed5b0fce7c9e4448e53a1f7efd","date":1308580104,"type":5,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/values/Floats.FloatsReader#FloatsReader(Directory,String,int,IOContext).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/values/Floats.FloatsReader#FloatsReader(Directory,String,int).mjava","sourceNew":"    protected FloatsReader(Directory dir, String id, int maxDoc, IOContext context)\n        throws IOException {\n      datIn = dir.openInput(IndexFileNames.segmentFileName(id, \"\",\n          Writer.DATA_EXTENSION), context);\n      CodecUtil.checkHeader(datIn, CODEC_NAME, VERSION_START, VERSION_START);\n      precisionBytes = datIn.readByte();\n      assert precisionBytes == 4 || precisionBytes == 8;\n      this.maxDoc = maxDoc;\n    }\n\n","sourceOld":"    protected FloatsReader(Directory dir, String id, int maxDoc)\n        throws IOException {\n      datIn = dir.openInput(IndexFileNames.segmentFileName(id, \"\",\n          Writer.DATA_EXTENSION));\n      CodecUtil.checkHeader(datIn, CODEC_NAME, VERSION_START, VERSION_START);\n      precisionBytes = datIn.readByte();\n      assert precisionBytes == 4 || precisionBytes == 8;\n      this.maxDoc = maxDoc;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ddc4c914be86e34b54f70023f45a60fa7f04e929","date":1310115160,"type":5,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/values/Floats.FloatsReader#FloatsReader(Directory,String,int,IOContext).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/values/Floats.FloatsReader#FloatsReader(Directory,String,int).mjava","sourceNew":"    protected FloatsReader(Directory dir, String id, int maxDoc, IOContext context)\n        throws IOException {\n      datIn = dir.openInput(IndexFileNames.segmentFileName(id, \"\",\n          Writer.DATA_EXTENSION), context);\n      CodecUtil.checkHeader(datIn, CODEC_NAME, VERSION_START, VERSION_START);\n      precisionBytes = datIn.readByte();\n      assert precisionBytes == 4 || precisionBytes == 8;\n      this.maxDoc = maxDoc;\n    }\n\n","sourceOld":"    protected FloatsReader(Directory dir, String id, int maxDoc)\n        throws IOException {\n      datIn = dir.openInput(IndexFileNames.segmentFileName(id, \"\",\n          Writer.DATA_EXTENSION));\n      CodecUtil.checkHeader(datIn, CODEC_NAME, VERSION_START, VERSION_START);\n      precisionBytes = datIn.readByte();\n      assert precisionBytes == 4 || precisionBytes == 8;\n      this.maxDoc = maxDoc;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5d004d0e0b3f65bb40da76d476d659d7888270e8","date":1310158940,"type":5,"author":"Steven Rowe","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/values/Floats.FloatsReader#FloatsReader(Directory,String,int,IOContext).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/values/Floats.FloatsReader#FloatsReader(Directory,String,int).mjava","sourceNew":"    protected FloatsReader(Directory dir, String id, int maxDoc, IOContext context)\n        throws IOException {\n      datIn = dir.openInput(IndexFileNames.segmentFileName(id, \"\",\n          Writer.DATA_EXTENSION), context);\n      CodecUtil.checkHeader(datIn, CODEC_NAME, VERSION_START, VERSION_START);\n      precisionBytes = datIn.readByte();\n      assert precisionBytes == 4 || precisionBytes == 8;\n      this.maxDoc = maxDoc;\n    }\n\n","sourceOld":"    protected FloatsReader(Directory dir, String id, int maxDoc)\n        throws IOException {\n      datIn = dir.openInput(IndexFileNames.segmentFileName(id, \"\",\n          Writer.DATA_EXTENSION));\n      CodecUtil.checkHeader(datIn, CODEC_NAME, VERSION_START, VERSION_START);\n      precisionBytes = datIn.readByte();\n      assert precisionBytes == 4 || precisionBytes == 8;\n      this.maxDoc = maxDoc;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a02058e0eaba4bbd5d05e6b06b9522c0acfd1655":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","2e8d7ba2175f47e280231533f7d3016249cea88b"],"2d84736c4614acce6720851cbd2c823d7cd516e4":["01f60198ece724a6e96cd0b45f289cf42ff83d4f"],"2e8d7ba2175f47e280231533f7d3016249cea88b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","2d84736c4614acce6720851cbd2c823d7cd516e4"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"639c36565ce03aed5b0fce7c9e4448e53a1f7efd":["2e8d7ba2175f47e280231533f7d3016249cea88b"],"5d004d0e0b3f65bb40da76d476d659d7888270e8":["a02058e0eaba4bbd5d05e6b06b9522c0acfd1655","ddc4c914be86e34b54f70023f45a60fa7f04e929"],"ddc4c914be86e34b54f70023f45a60fa7f04e929":["2e8d7ba2175f47e280231533f7d3016249cea88b","639c36565ce03aed5b0fce7c9e4448e53a1f7efd"],"01f60198ece724a6e96cd0b45f289cf42ff83d4f":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["ddc4c914be86e34b54f70023f45a60fa7f04e929"]},"commit2Childs":{"a02058e0eaba4bbd5d05e6b06b9522c0acfd1655":["5d004d0e0b3f65bb40da76d476d659d7888270e8"],"2d84736c4614acce6720851cbd2c823d7cd516e4":["2e8d7ba2175f47e280231533f7d3016249cea88b"],"2e8d7ba2175f47e280231533f7d3016249cea88b":["a02058e0eaba4bbd5d05e6b06b9522c0acfd1655","639c36565ce03aed5b0fce7c9e4448e53a1f7efd","ddc4c914be86e34b54f70023f45a60fa7f04e929"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["a02058e0eaba4bbd5d05e6b06b9522c0acfd1655","2e8d7ba2175f47e280231533f7d3016249cea88b","01f60198ece724a6e96cd0b45f289cf42ff83d4f"],"639c36565ce03aed5b0fce7c9e4448e53a1f7efd":["ddc4c914be86e34b54f70023f45a60fa7f04e929"],"5d004d0e0b3f65bb40da76d476d659d7888270e8":[],"ddc4c914be86e34b54f70023f45a60fa7f04e929":["5d004d0e0b3f65bb40da76d476d659d7888270e8","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"01f60198ece724a6e96cd0b45f289cf42ff83d4f":["2d84736c4614acce6720851cbd2c823d7cd516e4"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["5d004d0e0b3f65bb40da76d476d659d7888270e8","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}