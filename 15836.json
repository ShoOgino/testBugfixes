{"path":"lucene/luke/src/java/org/apache/lucene/luke/app/desktop/components/AnalysisPanelProvider.TokensTableModel#TokensTableModel(List[Analysis.Token]).mjava","commits":[{"id":"f554f2d9b5456248ab6467b9d4f6015686797a6c","date":1554891357,"type":0,"author":"Tomoko Uchida","isMerge":false,"pathNew":"lucene/luke/src/java/org/apache/lucene/luke/app/desktop/components/AnalysisPanelProvider.TokensTableModel#TokensTableModel(List[Analysis.Token]).mjava","pathOld":"/dev/null","sourceNew":"    TokensTableModel(List<Analysis.Token> tokens) {\n      super(tokens.size());\n      for (int i = 0; i < tokens.size(); i++) {\n        Analysis.Token token = tokens.get(i);\n        data[i][Column.TERM.getIndex()] = token.getTerm();\n        List<String> attValues = token.getAttributes().stream()\n            .flatMap(att -> att.getAttValues().entrySet().stream()\n                .map(e -> e.getKey() + \"=\" + e.getValue()))\n            .collect(Collectors.toList());\n        data[i][Column.ATTR.getIndex()] = String.join(\",\", attValues);\n      }\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7b7dac0d1d148a67a2728aa772cf93b6a3ef6e77","date":1561188146,"type":5,"author":"Tomoko Uchida","isMerge":false,"pathNew":"lucene/luke/src/java/org/apache/lucene/luke/app/desktop/components/fragments/analysis/SimpleAnalyzeResultPanelProvider.TokensTableModel#TokensTableModel(List[Analysis.Token]).mjava","pathOld":"lucene/luke/src/java/org/apache/lucene/luke/app/desktop/components/AnalysisPanelProvider.TokensTableModel#TokensTableModel(List[Analysis.Token]).mjava","sourceNew":"    TokensTableModel(List<Analysis.Token> tokens) {\n      super(tokens.size());\n      for (int i = 0; i < tokens.size(); i++) {\n        Analysis.Token token = tokens.get(i);\n        data[i][Column.TERM.getIndex()] = token.getTerm();\n        List<String> attValues = token.getAttributes().stream()\n            .flatMap(att -> att.getAttValues().entrySet().stream()\n                .map(e -> e.getKey() + \"=\" + e.getValue()))\n            .collect(Collectors.toList());\n        data[i][Column.ATTR.getIndex()] = String.join(\",\", attValues);\n      }\n    }\n\n","sourceOld":"    TokensTableModel(List<Analysis.Token> tokens) {\n      super(tokens.size());\n      for (int i = 0; i < tokens.size(); i++) {\n        Analysis.Token token = tokens.get(i);\n        data[i][Column.TERM.getIndex()] = token.getTerm();\n        List<String> attValues = token.getAttributes().stream()\n            .flatMap(att -> att.getAttValues().entrySet().stream()\n                .map(e -> e.getKey() + \"=\" + e.getValue()))\n            .collect(Collectors.toList());\n        data[i][Column.ATTR.getIndex()] = String.join(\",\", attValues);\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"dde00f8ce3ea6870a348e607a273123f0895ec87","date":1561189287,"type":5,"author":"Tomoko Uchida","isMerge":true,"pathNew":"lucene/luke/src/java/org/apache/lucene/luke/app/desktop/components/fragments/analysis/SimpleAnalyzeResultPanelProvider.TokensTableModel#TokensTableModel(List[Analysis.Token]).mjava","pathOld":"lucene/luke/src/java/org/apache/lucene/luke/app/desktop/components/AnalysisPanelProvider.TokensTableModel#TokensTableModel(List[Analysis.Token]).mjava","sourceNew":"    TokensTableModel(List<Analysis.Token> tokens) {\n      super(tokens.size());\n      for (int i = 0; i < tokens.size(); i++) {\n        Analysis.Token token = tokens.get(i);\n        data[i][Column.TERM.getIndex()] = token.getTerm();\n        List<String> attValues = token.getAttributes().stream()\n            .flatMap(att -> att.getAttValues().entrySet().stream()\n                .map(e -> e.getKey() + \"=\" + e.getValue()))\n            .collect(Collectors.toList());\n        data[i][Column.ATTR.getIndex()] = String.join(\",\", attValues);\n      }\n    }\n\n","sourceOld":"    TokensTableModel(List<Analysis.Token> tokens) {\n      super(tokens.size());\n      for (int i = 0; i < tokens.size(); i++) {\n        Analysis.Token token = tokens.get(i);\n        data[i][Column.TERM.getIndex()] = token.getTerm();\n        List<String> attValues = token.getAttributes().stream()\n            .flatMap(att -> att.getAttValues().entrySet().stream()\n                .map(e -> e.getKey() + \"=\" + e.getValue()))\n            .collect(Collectors.toList());\n        data[i][Column.ATTR.getIndex()] = String.join(\",\", attValues);\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"f554f2d9b5456248ab6467b9d4f6015686797a6c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"dde00f8ce3ea6870a348e607a273123f0895ec87":["f554f2d9b5456248ab6467b9d4f6015686797a6c","7b7dac0d1d148a67a2728aa772cf93b6a3ef6e77"],"7b7dac0d1d148a67a2728aa772cf93b6a3ef6e77":["f554f2d9b5456248ab6467b9d4f6015686797a6c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["dde00f8ce3ea6870a348e607a273123f0895ec87"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["f554f2d9b5456248ab6467b9d4f6015686797a6c"],"f554f2d9b5456248ab6467b9d4f6015686797a6c":["dde00f8ce3ea6870a348e607a273123f0895ec87","7b7dac0d1d148a67a2728aa772cf93b6a3ef6e77"],"dde00f8ce3ea6870a348e607a273123f0895ec87":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"7b7dac0d1d148a67a2728aa772cf93b6a3ef6e77":["dde00f8ce3ea6870a348e607a273123f0895ec87"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}