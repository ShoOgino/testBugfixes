{"path":"contrib/queryparser/src/java/org/apache/lucene/queryParser/standard/parser/EscapeQuerySyntaxImpl#hexToInt(char).mjava","commits":[{"id":"e8a848e758754282137f42bf85793c278e250390","date":1249640668,"type":1,"author":"Michael McCandless","isMerge":false,"pathNew":"contrib/queryparser/src/java/org/apache/lucene/queryParser/standard/parser/EscapeQuerySyntaxImpl#hexToInt(char).mjava","pathOld":"contrib/queryparser/src/java/org/apache/lucene/queryParser/original/parser/EscapeQuerySyntaxImpl#hexToInt(char).mjava","sourceNew":"  /** Returns the numeric value of the hexadecimal character */\n  private static final int hexToInt(char c) throws ParseException {\n    if ('0' <= c && c <= '9') {\n      return c - '0';\n    } else if ('a' <= c && c <= 'f') {\n      return c - 'a' + 10;\n    } else if ('A' <= c && c <= 'F') {\n      return c - 'A' + 10;\n    } else {\n      throw new ParseException(new MessageImpl(\n          QueryParserMessages.INVALID_SYNTAX_ESCAPE_NONE_HEX_UNICODE, c));\n    }\n  }\n\n","sourceOld":"  /** Returns the numeric value of the hexadecimal character */\n  private static final int hexToInt(char c) throws ParseException {\n    if ('0' <= c && c <= '9') {\n      return c - '0';\n    } else if ('a' <= c && c <= 'f') {\n      return c - 'a' + 10;\n    } else if ('A' <= c && c <= 'F') {\n      return c - 'A' + 10;\n    } else {\n      throw new ParseException(new MessageImpl(\n          QueryParserMessages.INVALID_SYNTAX_ESCAPE_NONE_HEX_UNICODE, c));\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9a9a95db9416e75497c862dda290648d8dfdc83f","date":1252550690,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"contrib/queryparser/src/java/org/apache/lucene/queryParser/standard/parser/EscapeQuerySyntaxImpl#hexToInt(char).mjava","pathOld":"contrib/queryparser/src/java/org/apache/lucene/queryParser/standard/parser/EscapeQuerySyntaxImpl#hexToInt(char).mjava","sourceNew":"  /** Returns the numeric value of the hexadecimal character */\n  private static final int hexToInt(char c) throws ParseException {\n    if ('0' <= c && c <= '9') {\n      return c - '0';\n    } else if ('a' <= c && c <= 'f') {\n      return c - 'a' + 10;\n    } else if ('A' <= c && c <= 'F') {\n      return c - 'A' + 10;\n    } else {\n      throw new ParseException(new MessageImpl(\n          QueryParserMessages.INVALID_SYNTAX_ESCAPE_NONE_HEX_UNICODE, new Object[]{c}));\n    }\n  }\n\n","sourceOld":"  /** Returns the numeric value of the hexadecimal character */\n  private static final int hexToInt(char c) throws ParseException {\n    if ('0' <= c && c <= '9') {\n      return c - '0';\n    } else if ('a' <= c && c <= 'f') {\n      return c - 'a' + 10;\n    } else if ('A' <= c && c <= 'F') {\n      return c - 'A' + 10;\n    } else {\n      throw new ParseException(new MessageImpl(\n          QueryParserMessages.INVALID_SYNTAX_ESCAPE_NONE_HEX_UNICODE, c));\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c7dd1ffd1851fd665236d9e4c5663ca9ecf14f08","date":1254612983,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"contrib/queryparser/src/java/org/apache/lucene/queryParser/standard/parser/EscapeQuerySyntaxImpl#hexToInt(char).mjava","pathOld":"contrib/queryparser/src/java/org/apache/lucene/queryParser/standard/parser/EscapeQuerySyntaxImpl#hexToInt(char).mjava","sourceNew":"  /** Returns the numeric value of the hexadecimal character */\n  private static final int hexToInt(char c) throws ParseException {\n    if ('0' <= c && c <= '9') {\n      return c - '0';\n    } else if ('a' <= c && c <= 'f') {\n      return c - 'a' + 10;\n    } else if ('A' <= c && c <= 'F') {\n      return c - 'A' + 10;\n    } else {\n      throw new ParseException(new MessageImpl(\n          QueryParserMessages.INVALID_SYNTAX_ESCAPE_NONE_HEX_UNICODE, c));\n    }\n  }\n\n","sourceOld":"  /** Returns the numeric value of the hexadecimal character */\n  private static final int hexToInt(char c) throws ParseException {\n    if ('0' <= c && c <= '9') {\n      return c - '0';\n    } else if ('a' <= c && c <= 'f') {\n      return c - 'a' + 10;\n    } else if ('A' <= c && c <= 'F') {\n      return c - 'A' + 10;\n    } else {\n      throw new ParseException(new MessageImpl(\n          QueryParserMessages.INVALID_SYNTAX_ESCAPE_NONE_HEX_UNICODE, new Object[]{c}));\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/contrib/queryparser/src/java/org/apache/lucene/queryParser/standard/parser/EscapeQuerySyntaxImpl#hexToInt(char).mjava","pathOld":"contrib/queryparser/src/java/org/apache/lucene/queryParser/standard/parser/EscapeQuerySyntaxImpl#hexToInt(char).mjava","sourceNew":"  /** Returns the numeric value of the hexadecimal character */\n  private static final int hexToInt(char c) throws ParseException {\n    if ('0' <= c && c <= '9') {\n      return c - '0';\n    } else if ('a' <= c && c <= 'f') {\n      return c - 'a' + 10;\n    } else if ('A' <= c && c <= 'F') {\n      return c - 'A' + 10;\n    } else {\n      throw new ParseException(new MessageImpl(\n          QueryParserMessages.INVALID_SYNTAX_ESCAPE_NONE_HEX_UNICODE, c));\n    }\n  }\n\n","sourceOld":"  /** Returns the numeric value of the hexadecimal character */\n  private static final int hexToInt(char c) throws ParseException {\n    if ('0' <= c && c <= '9') {\n      return c - '0';\n    } else if ('a' <= c && c <= 'f') {\n      return c - 'a' + 10;\n    } else if ('A' <= c && c <= 'F') {\n      return c - 'A' + 10;\n    } else {\n      throw new ParseException(new MessageImpl(\n          QueryParserMessages.INVALID_SYNTAX_ESCAPE_NONE_HEX_UNICODE, c));\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"9a9a95db9416e75497c862dda290648d8dfdc83f":["e8a848e758754282137f42bf85793c278e250390"],"e8a848e758754282137f42bf85793c278e250390":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"c7dd1ffd1851fd665236d9e4c5663ca9ecf14f08":["9a9a95db9416e75497c862dda290648d8dfdc83f"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["c7dd1ffd1851fd665236d9e4c5663ca9ecf14f08"]},"commit2Childs":{"9a9a95db9416e75497c862dda290648d8dfdc83f":["c7dd1ffd1851fd665236d9e4c5663ca9ecf14f08"],"e8a848e758754282137f42bf85793c278e250390":["9a9a95db9416e75497c862dda290648d8dfdc83f"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["e8a848e758754282137f42bf85793c278e250390"],"c7dd1ffd1851fd665236d9e4c5663ca9ecf14f08":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}