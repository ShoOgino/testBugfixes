{"path":"lucene/core/src/java/org/apache/lucene/codecs/compressing/CompressingStoredFieldsReader#CompressingStoredFieldsReader(CompressingStoredFieldsReader,boolean).mjava","commits":[{"id":"1f09f483a0844bb9dc34fb10380cb053aa96219b","date":1418894001,"type":1,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/compressing/CompressingStoredFieldsReader#CompressingStoredFieldsReader(CompressingStoredFieldsReader,boolean).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/compressing/CompressingStoredFieldsReader#CompressingStoredFieldsReader(CompressingStoredFieldsReader).mjava","sourceNew":"  // used by clone\n  private CompressingStoredFieldsReader(CompressingStoredFieldsReader reader, boolean merging) {\n    this.version = reader.version;\n    this.fieldInfos = reader.fieldInfos;\n    this.fieldsStream = reader.fieldsStream.clone();\n    this.indexReader = reader.indexReader.clone();\n    this.maxPointer = reader.maxPointer;\n    this.chunkSize = reader.chunkSize;\n    this.packedIntsVersion = reader.packedIntsVersion;\n    this.compressionMode = reader.compressionMode;\n    this.decompressor = reader.decompressor.clone();\n    this.numDocs = reader.numDocs;\n    this.merging = merging;\n    this.state = new BlockState();\n    this.closed = false;\n  }\n\n","sourceOld":"  // used by clone\n  private CompressingStoredFieldsReader(CompressingStoredFieldsReader reader) {\n    this.version = reader.version;\n    this.fieldInfos = reader.fieldInfos;\n    this.fieldsStream = reader.fieldsStream.clone();\n    this.indexReader = reader.indexReader.clone();\n    this.maxPointer = reader.maxPointer;\n    this.chunkSize = reader.chunkSize;\n    this.packedIntsVersion = reader.packedIntsVersion;\n    this.compressionMode = reader.compressionMode;\n    this.decompressor = reader.decompressor.clone();\n    this.numDocs = reader.numDocs;\n    this.bytes = new BytesRef(reader.bytes.bytes.length);\n    this.closed = false;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bd7962f4da329a4e559727022b752c5cefaee5da","date":1421356185,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/compressing/CompressingStoredFieldsReader#CompressingStoredFieldsReader(CompressingStoredFieldsReader,boolean).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/compressing/CompressingStoredFieldsReader#CompressingStoredFieldsReader(CompressingStoredFieldsReader,boolean).mjava","sourceNew":"  // used by clone\n  private CompressingStoredFieldsReader(CompressingStoredFieldsReader reader, boolean merging) {\n    this.version = reader.version;\n    this.fieldInfos = reader.fieldInfos;\n    this.fieldsStream = reader.fieldsStream.clone();\n    this.indexReader = reader.indexReader.clone();\n    this.maxPointer = reader.maxPointer;\n    this.chunkSize = reader.chunkSize;\n    this.packedIntsVersion = reader.packedIntsVersion;\n    this.compressionMode = reader.compressionMode;\n    this.decompressor = reader.decompressor.clone();\n    this.numDocs = reader.numDocs;\n    this.numChunks = reader.numChunks;\n    this.numDirtyChunks = reader.numDirtyChunks;\n    this.merging = merging;\n    this.state = new BlockState();\n    this.closed = false;\n  }\n\n","sourceOld":"  // used by clone\n  private CompressingStoredFieldsReader(CompressingStoredFieldsReader reader, boolean merging) {\n    this.version = reader.version;\n    this.fieldInfos = reader.fieldInfos;\n    this.fieldsStream = reader.fieldsStream.clone();\n    this.indexReader = reader.indexReader.clone();\n    this.maxPointer = reader.maxPointer;\n    this.chunkSize = reader.chunkSize;\n    this.packedIntsVersion = reader.packedIntsVersion;\n    this.compressionMode = reader.compressionMode;\n    this.decompressor = reader.decompressor.clone();\n    this.numDocs = reader.numDocs;\n    this.merging = merging;\n    this.state = new BlockState();\n    this.closed = false;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"45264aed0cfa8a8a55ae1292b0e336d29cd88401","date":1600361948,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/compressing/CompressingStoredFieldsReader#CompressingStoredFieldsReader(CompressingStoredFieldsReader,boolean).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/compressing/CompressingStoredFieldsReader#CompressingStoredFieldsReader(CompressingStoredFieldsReader,boolean).mjava","sourceNew":"  // used by clone\n  private CompressingStoredFieldsReader(CompressingStoredFieldsReader reader, boolean merging) {\n    this.version = reader.version;\n    this.fieldInfos = reader.fieldInfos;\n    this.fieldsStream = reader.fieldsStream.clone();\n    this.indexReader = reader.indexReader.clone();\n    this.maxPointer = reader.maxPointer;\n    this.chunkSize = reader.chunkSize;\n    this.packedIntsVersion = reader.packedIntsVersion;\n    this.compressionMode = reader.compressionMode;\n    this.decompressor = reader.decompressor.clone();\n    this.numDocs = reader.numDocs;\n    this.numDirtyChunks = reader.numDirtyChunks;\n    this.numDirtyDocs = reader.numDirtyDocs;\n    this.merging = merging;\n    this.state = new BlockState();\n    this.closed = false;\n  }\n\n","sourceOld":"  // used by clone\n  private CompressingStoredFieldsReader(CompressingStoredFieldsReader reader, boolean merging) {\n    this.version = reader.version;\n    this.fieldInfos = reader.fieldInfos;\n    this.fieldsStream = reader.fieldsStream.clone();\n    this.indexReader = reader.indexReader.clone();\n    this.maxPointer = reader.maxPointer;\n    this.chunkSize = reader.chunkSize;\n    this.packedIntsVersion = reader.packedIntsVersion;\n    this.compressionMode = reader.compressionMode;\n    this.decompressor = reader.decompressor.clone();\n    this.numDocs = reader.numDocs;\n    this.numChunks = reader.numChunks;\n    this.numDirtyChunks = reader.numDirtyChunks;\n    this.merging = merging;\n    this.state = new BlockState();\n    this.closed = false;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"1f09f483a0844bb9dc34fb10380cb053aa96219b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"bd7962f4da329a4e559727022b752c5cefaee5da":["1f09f483a0844bb9dc34fb10380cb053aa96219b"],"45264aed0cfa8a8a55ae1292b0e336d29cd88401":["bd7962f4da329a4e559727022b752c5cefaee5da"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["45264aed0cfa8a8a55ae1292b0e336d29cd88401"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["1f09f483a0844bb9dc34fb10380cb053aa96219b"],"1f09f483a0844bb9dc34fb10380cb053aa96219b":["bd7962f4da329a4e559727022b752c5cefaee5da"],"bd7962f4da329a4e559727022b752c5cefaee5da":["45264aed0cfa8a8a55ae1292b0e336d29cd88401"],"45264aed0cfa8a8a55ae1292b0e336d29cd88401":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}