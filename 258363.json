{"path":"solr/core/src/java/org/apache/solr/schema/TrieField#createFields(SchemaField,Object).mjava","commits":[{"id":"acd9883560fd89e6448b2b447302fe543040cd4f","date":1488478696,"type":1,"author":"Adrien Grand","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/schema/TrieField#createFields(SchemaField,Object).mjava","pathOld":"solr/core/src/java/org/apache/solr/schema/TrieField#createFields(SchemaField,Object,float).mjava","sourceNew":"  @Override\n  public List<IndexableField> createFields(SchemaField sf, Object value) {\n    if (sf.hasDocValues()) {\n      List<IndexableField> fields = new ArrayList<>();\n      final IndexableField field = createField(sf, value);\n      fields.add(field);\n      \n      if (sf.multiValued()) {\n        BytesRefBuilder bytes = new BytesRefBuilder();\n        storedToIndexed(field, bytes);\n        fields.add(new SortedSetDocValuesField(sf.getName(), bytes.get()));\n      } else {\n        final long bits;\n        if (field.numericValue() instanceof Integer || field.numericValue() instanceof Long) {\n          bits = field.numericValue().longValue();\n        } else if (field.numericValue() instanceof Float) {\n          bits = Float.floatToIntBits(field.numericValue().floatValue());\n        } else {\n          assert field.numericValue() instanceof Double;\n          bits = Double.doubleToLongBits(field.numericValue().doubleValue());\n        }\n        fields.add(new NumericDocValuesField(sf.getName(), bits));\n      }\n      \n      return fields;\n    } else {\n      return Collections.singletonList(createField(sf, value));\n    }\n  }\n\n","sourceOld":"  @Override\n  public List<IndexableField> createFields(SchemaField sf, Object value, float boost) {\n    if (sf.hasDocValues()) {\n      List<IndexableField> fields = new ArrayList<>();\n      final IndexableField field = createField(sf, value, boost);\n      fields.add(field);\n      \n      if (sf.multiValued()) {\n        BytesRefBuilder bytes = new BytesRefBuilder();\n        storedToIndexed(field, bytes);\n        fields.add(new SortedSetDocValuesField(sf.getName(), bytes.get()));\n      } else {\n        final long bits;\n        if (field.numericValue() instanceof Integer || field.numericValue() instanceof Long) {\n          bits = field.numericValue().longValue();\n        } else if (field.numericValue() instanceof Float) {\n          bits = Float.floatToIntBits(field.numericValue().floatValue());\n        } else {\n          assert field.numericValue() instanceof Double;\n          bits = Double.doubleToLongBits(field.numericValue().doubleValue());\n        }\n        fields.add(new NumericDocValuesField(sf.getName(), bits));\n      }\n      \n      return fields;\n    } else {\n      return Collections.singletonList(createField(sf, value, boost));\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"acd9883560fd89e6448b2b447302fe543040cd4f":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["acd9883560fd89e6448b2b447302fe543040cd4f"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["acd9883560fd89e6448b2b447302fe543040cd4f"],"acd9883560fd89e6448b2b447302fe543040cd4f":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}