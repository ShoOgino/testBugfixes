{"path":"solr/core/src/test/org/apache/solr/response/TestCustomDocTransformer.CustomTransformer#transform(SolrDocument,int).mjava","commits":[{"id":"97054ceae268680b440507fbba9c4e80fd86125f","date":1433272560,"type":0,"author":"Ryan McKinley","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/response/TestCustomDocTransformer.CustomTransformer#transform(SolrDocument,int).mjava","pathOld":"/dev/null","sourceNew":"    /**\n     * This transformer simply concatinates the values of multipe fields\n     */\n    @Override\n    public void transform(SolrDocument doc, int docid) throws IOException {\n      str.setLength(0);\n      for(String s : extra) {\n        String v = ResponseWriterUtil.getAsString(s, doc);\n        str.append(v).append('#');\n      }\n      System.out.println( \"HELLO: \"+str );\n      doc.setField(name, str.toString());\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b263a3dc926f93ae0dadfc542cdcaa2f8c5a95c9","date":1434467834,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/response/TestCustomDocTransformer.CustomTransformer#transform(SolrDocument,int).mjava","pathOld":"solr/core/src/test/org/apache/solr/response/TestCustomDocTransformer.CustomTransformer#transform(SolrDocument,int).mjava","sourceNew":"    /**\n     * This transformer simply concatinates the values of multipe fields\n     */\n    @Override\n    public void transform(SolrDocument doc, int docid) throws IOException {\n      str.setLength(0);\n      for(String s : extra) {\n        String v = getAsString(s, doc);\n        str.append(v).append('#');\n      }\n      System.out.println( \"HELLO: \"+str );\n      doc.setField(name, str.toString());\n    }\n\n","sourceOld":"    /**\n     * This transformer simply concatinates the values of multipe fields\n     */\n    @Override\n    public void transform(SolrDocument doc, int docid) throws IOException {\n      str.setLength(0);\n      for(String s : extra) {\n        String v = ResponseWriterUtil.getAsString(s, doc);\n        str.append(v).append('#');\n      }\n      System.out.println( \"HELLO: \"+str );\n      doc.setField(name, str.toString());\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7b8f0dc1dfedc7fda86aefc0cdabde0efae2d1dc","date":1440797084,"type":5,"author":"Yonik Seeley","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/response/TestCustomDocTransformer.CustomTransformer#transform(SolrDocument,int,float).mjava","pathOld":"solr/core/src/test/org/apache/solr/response/TestCustomDocTransformer.CustomTransformer#transform(SolrDocument,int).mjava","sourceNew":"    /**\n     * This transformer simply concatinates the values of multipe fields\n     */\n    @Override\n    public void transform(SolrDocument doc, int docid, float score) throws IOException {\n      str.setLength(0);\n      for(String s : extra) {\n        String v = getAsString(s, doc);\n        str.append(v).append('#');\n      }\n      System.out.println( \"HELLO: \"+str );\n      doc.setField(name, str.toString());\n    }\n\n","sourceOld":"    /**\n     * This transformer simply concatinates the values of multipe fields\n     */\n    @Override\n    public void transform(SolrDocument doc, int docid) throws IOException {\n      str.setLength(0);\n      for(String s : extra) {\n        String v = getAsString(s, doc);\n        str.append(v).append('#');\n      }\n      System.out.println( \"HELLO: \"+str );\n      doc.setField(name, str.toString());\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"320eec6599df6f97f2461a5d1ad49cd93b324a14","date":1503502574,"type":1,"author":"Christine Poerschke","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/response/TestCustomDocTransformer.CustomTransformer#transform(SolrDocument,int).mjava","pathOld":"solr/core/src/test/org/apache/solr/response/TestCustomDocTransformer.CustomTransformer#transform(SolrDocument,int,float).mjava","sourceNew":"    /**\n     * This transformer simply concatenates the values of multiple fields\n     */\n    @Override\n    public void transform(SolrDocument doc, int docid) throws IOException {\n      str.setLength(0);\n      for(String s : extra) {\n        String v = getAsString(s, doc);\n        str.append(v).append('#');\n      }\n      System.out.println( \"HELLO: \"+str );\n      doc.setField(name, str.toString());\n    }\n\n","sourceOld":"    /**\n     * This transformer simply concatenates the values of multiple fields\n     */\n    @Override\n    public void transform(SolrDocument doc, int docid, float score) throws IOException {\n      str.setLength(0);\n      for(String s : extra) {\n        String v = getAsString(s, doc);\n        str.append(v).append('#');\n      }\n      System.out.println( \"HELLO: \"+str );\n      doc.setField(name, str.toString());\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"182384b20c064aa16998ddebe9f36e649279c5a6","date":1503596494,"type":1,"author":"Karl Wright","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/response/TestCustomDocTransformer.CustomTransformer#transform(SolrDocument,int).mjava","pathOld":"solr/core/src/test/org/apache/solr/response/TestCustomDocTransformer.CustomTransformer#transform(SolrDocument,int,float).mjava","sourceNew":"    /**\n     * This transformer simply concatenates the values of multiple fields\n     */\n    @Override\n    public void transform(SolrDocument doc, int docid) throws IOException {\n      str.setLength(0);\n      for(String s : extra) {\n        String v = getAsString(s, doc);\n        str.append(v).append('#');\n      }\n      System.out.println( \"HELLO: \"+str );\n      doc.setField(name, str.toString());\n    }\n\n","sourceOld":"    /**\n     * This transformer simply concatenates the values of multiple fields\n     */\n    @Override\n    public void transform(SolrDocument doc, int docid, float score) throws IOException {\n      str.setLength(0);\n      for(String s : extra) {\n        String v = getAsString(s, doc);\n        str.append(v).append('#');\n      }\n      System.out.println( \"HELLO: \"+str );\n      doc.setField(name, str.toString());\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3a7809d1d753b67f48b1a706e17034bf8b624ea3","date":1504366927,"type":1,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/response/TestCustomDocTransformer.CustomTransformer#transform(SolrDocument,int).mjava","pathOld":"solr/core/src/test/org/apache/solr/response/TestCustomDocTransformer.CustomTransformer#transform(SolrDocument,int,float).mjava","sourceNew":"    /**\n     * This transformer simply concatenates the values of multiple fields\n     */\n    @Override\n    public void transform(SolrDocument doc, int docid) throws IOException {\n      str.setLength(0);\n      for(String s : extra) {\n        String v = getAsString(s, doc);\n        str.append(v).append('#');\n      }\n      System.out.println( \"HELLO: \"+str );\n      doc.setField(name, str.toString());\n    }\n\n","sourceOld":"    /**\n     * This transformer simply concatenates the values of multiple fields\n     */\n    @Override\n    public void transform(SolrDocument doc, int docid, float score) throws IOException {\n      str.setLength(0);\n      for(String s : extra) {\n        String v = getAsString(s, doc);\n        str.append(v).append('#');\n      }\n      System.out.println( \"HELLO: \"+str );\n      doc.setField(name, str.toString());\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3a7809d1d753b67f48b1a706e17034bf8b624ea3":["7b8f0dc1dfedc7fda86aefc0cdabde0efae2d1dc","182384b20c064aa16998ddebe9f36e649279c5a6"],"320eec6599df6f97f2461a5d1ad49cd93b324a14":["7b8f0dc1dfedc7fda86aefc0cdabde0efae2d1dc"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"182384b20c064aa16998ddebe9f36e649279c5a6":["7b8f0dc1dfedc7fda86aefc0cdabde0efae2d1dc","320eec6599df6f97f2461a5d1ad49cd93b324a14"],"97054ceae268680b440507fbba9c4e80fd86125f":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"7b8f0dc1dfedc7fda86aefc0cdabde0efae2d1dc":["b263a3dc926f93ae0dadfc542cdcaa2f8c5a95c9"],"b263a3dc926f93ae0dadfc542cdcaa2f8c5a95c9":["97054ceae268680b440507fbba9c4e80fd86125f"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["182384b20c064aa16998ddebe9f36e649279c5a6"]},"commit2Childs":{"3a7809d1d753b67f48b1a706e17034bf8b624ea3":[],"320eec6599df6f97f2461a5d1ad49cd93b324a14":["182384b20c064aa16998ddebe9f36e649279c5a6"],"182384b20c064aa16998ddebe9f36e649279c5a6":["3a7809d1d753b67f48b1a706e17034bf8b624ea3","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["97054ceae268680b440507fbba9c4e80fd86125f"],"97054ceae268680b440507fbba9c4e80fd86125f":["b263a3dc926f93ae0dadfc542cdcaa2f8c5a95c9"],"7b8f0dc1dfedc7fda86aefc0cdabde0efae2d1dc":["3a7809d1d753b67f48b1a706e17034bf8b624ea3","320eec6599df6f97f2461a5d1ad49cd93b324a14","182384b20c064aa16998ddebe9f36e649279c5a6"],"b263a3dc926f93ae0dadfc542cdcaa2f8c5a95c9":["7b8f0dc1dfedc7fda86aefc0cdabde0efae2d1dc"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["3a7809d1d753b67f48b1a706e17034bf8b624ea3","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}