{"path":"contrib/instantiated/src/test/org/apache/lucene/store/instantiated/TestEmptyIndex#testNorms().mjava","commits":[{"id":"be875c478b2c2388441e3d19726f9fb754a3397a","date":1231406922,"type":0,"author":"Karl-Johan Wettin","isMerge":false,"pathNew":"contrib/instantiated/src/test/org/apache/lucene/store/instantiated/TestEmptyIndex#testNorms().mjava","pathOld":"/dev/null","sourceNew":"  public void testNorms() throws Exception {\n\n    InstantiatedIndex ii = new InstantiatedIndex();\n    IndexReader r = new InstantiatedIndexReader(ii);\n    testNorms(r);\n    r.close();\n    ii.close();\n\n    // make sure a Directory acts the same\n\n    Directory d = new RAMDirectory();\n    new IndexWriter(d, null, true, IndexWriter.MaxFieldLength.UNLIMITED).close();\n    r = IndexReader.open(d);\n    testNorms(r);\n    r.close();\n    d.close();\n\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4256bc1b3c94786287ccdfc751230374521843cf","date":1254612273,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"contrib/instantiated/src/test/org/apache/lucene/store/instantiated/TestEmptyIndex#testNorms().mjava","pathOld":"contrib/instantiated/src/test/org/apache/lucene/store/instantiated/TestEmptyIndex#testNorms().mjava","sourceNew":"  public void testNorms() throws Exception {\n\n    InstantiatedIndex ii = new InstantiatedIndex();\n    IndexReader r = new InstantiatedIndexReader(ii);\n    testNorms(r);\n    r.close();\n    ii.close();\n\n    // make sure a Directory acts the same\n\n    Directory d = new RAMDirectory();\n    new IndexWriter(d, null, true, IndexWriter.MaxFieldLength.UNLIMITED).close();\n    r = IndexReader.open(d, false);\n    testNorms(r);\n    r.close();\n    d.close();\n\n  }\n\n","sourceOld":"  public void testNorms() throws Exception {\n\n    InstantiatedIndex ii = new InstantiatedIndex();\n    IndexReader r = new InstantiatedIndexReader(ii);\n    testNorms(r);\n    r.close();\n    ii.close();\n\n    // make sure a Directory acts the same\n\n    Directory d = new RAMDirectory();\n    new IndexWriter(d, null, true, IndexWriter.MaxFieldLength.UNLIMITED).close();\n    r = IndexReader.open(d);\n    testNorms(r);\n    r.close();\n    d.close();\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1cedb00d2dd44640194401179358a2e3ba6051bf","date":1268243626,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"contrib/instantiated/src/test/org/apache/lucene/store/instantiated/TestEmptyIndex#testNorms().mjava","pathOld":"contrib/instantiated/src/test/org/apache/lucene/store/instantiated/TestEmptyIndex#testNorms().mjava","sourceNew":"  public void testNorms() throws Exception {\n\n    InstantiatedIndex ii = new InstantiatedIndex();\n    IndexReader r = new InstantiatedIndexReader(ii);\n    testNorms(r);\n    r.close();\n    ii.close();\n\n    // make sure a Directory acts the same\n\n    Directory d = new RAMDirectory();\n    new IndexWriter(d, new IndexWriterConfig(TEST_VERSION_CURRENT)).close();\n    r = IndexReader.open(d, false);\n    testNorms(r);\n    r.close();\n    d.close();\n\n  }\n\n","sourceOld":"  public void testNorms() throws Exception {\n\n    InstantiatedIndex ii = new InstantiatedIndex();\n    IndexReader r = new InstantiatedIndexReader(ii);\n    testNorms(r);\n    r.close();\n    ii.close();\n\n    // make sure a Directory acts the same\n\n    Directory d = new RAMDirectory();\n    new IndexWriter(d, null, true, IndexWriter.MaxFieldLength.UNLIMITED).close();\n    r = IndexReader.open(d, false);\n    testNorms(r);\n    r.close();\n    d.close();\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e52fea2c4081a1e552b98506691990be59503168","date":1268250331,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"contrib/instantiated/src/test/org/apache/lucene/store/instantiated/TestEmptyIndex#testNorms().mjava","pathOld":"contrib/instantiated/src/test/org/apache/lucene/store/instantiated/TestEmptyIndex#testNorms().mjava","sourceNew":"  public void testNorms() throws Exception {\n\n    InstantiatedIndex ii = new InstantiatedIndex();\n    IndexReader r = new InstantiatedIndexReader(ii);\n    testNorms(r);\n    r.close();\n    ii.close();\n\n    // make sure a Directory acts the same\n\n    Directory d = new RAMDirectory();\n    new IndexWriter(d, null, true, IndexWriter.MaxFieldLength.UNLIMITED).close();\n    r = IndexReader.open(d, false);\n    testNorms(r);\n    r.close();\n    d.close();\n\n  }\n\n","sourceOld":"  public void testNorms() throws Exception {\n\n    InstantiatedIndex ii = new InstantiatedIndex();\n    IndexReader r = new InstantiatedIndexReader(ii);\n    testNorms(r);\n    r.close();\n    ii.close();\n\n    // make sure a Directory acts the same\n\n    Directory d = new RAMDirectory();\n    new IndexWriter(d, new IndexWriterConfig(TEST_VERSION_CURRENT)).close();\n    r = IndexReader.open(d, false);\n    testNorms(r);\n    r.close();\n    d.close();\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"84080a7d7dbdaa3e6a4a1c9f1bb6221be40f47e8","date":1268494368,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"contrib/instantiated/src/test/org/apache/lucene/store/instantiated/TestEmptyIndex#testNorms().mjava","pathOld":"contrib/instantiated/src/test/org/apache/lucene/store/instantiated/TestEmptyIndex#testNorms().mjava","sourceNew":"  public void testNorms() throws Exception {\n\n    InstantiatedIndex ii = new InstantiatedIndex();\n    IndexReader r = new InstantiatedIndexReader(ii);\n    testNorms(r);\n    r.close();\n    ii.close();\n\n    // make sure a Directory acts the same\n\n    Directory d = new RAMDirectory();\n    new IndexWriter(d, new IndexWriterConfig(TEST_VERSION_CURRENT, new WhitespaceAnalyzer(TEST_VERSION_CURRENT))).close();\n    r = IndexReader.open(d, false);\n    testNorms(r);\n    r.close();\n    d.close();\n\n  }\n\n","sourceOld":"  public void testNorms() throws Exception {\n\n    InstantiatedIndex ii = new InstantiatedIndex();\n    IndexReader r = new InstantiatedIndexReader(ii);\n    testNorms(r);\n    r.close();\n    ii.close();\n\n    // make sure a Directory acts the same\n\n    Directory d = new RAMDirectory();\n    new IndexWriter(d, null, true, IndexWriter.MaxFieldLength.UNLIMITED).close();\n    r = IndexReader.open(d, false);\n    testNorms(r);\n    r.close();\n    d.close();\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/contrib/instantiated/src/test/org/apache/lucene/store/instantiated/TestEmptyIndex#testNorms().mjava","pathOld":"contrib/instantiated/src/test/org/apache/lucene/store/instantiated/TestEmptyIndex#testNorms().mjava","sourceNew":"  public void testNorms() throws Exception {\n\n    InstantiatedIndex ii = new InstantiatedIndex();\n    IndexReader r = new InstantiatedIndexReader(ii);\n    testNorms(r);\n    r.close();\n    ii.close();\n\n    // make sure a Directory acts the same\n\n    Directory d = new RAMDirectory();\n    new IndexWriter(d, new IndexWriterConfig(TEST_VERSION_CURRENT, new WhitespaceAnalyzer(TEST_VERSION_CURRENT))).close();\n    r = IndexReader.open(d, false);\n    testNorms(r);\n    r.close();\n    d.close();\n\n  }\n\n","sourceOld":"  public void testNorms() throws Exception {\n\n    InstantiatedIndex ii = new InstantiatedIndex();\n    IndexReader r = new InstantiatedIndexReader(ii);\n    testNorms(r);\n    r.close();\n    ii.close();\n\n    // make sure a Directory acts the same\n\n    Directory d = new RAMDirectory();\n    new IndexWriter(d, new IndexWriterConfig(TEST_VERSION_CURRENT, new WhitespaceAnalyzer(TEST_VERSION_CURRENT))).close();\n    r = IndexReader.open(d, false);\n    testNorms(r);\n    r.close();\n    d.close();\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"84080a7d7dbdaa3e6a4a1c9f1bb6221be40f47e8":["e52fea2c4081a1e552b98506691990be59503168"],"be875c478b2c2388441e3d19726f9fb754a3397a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"1cedb00d2dd44640194401179358a2e3ba6051bf":["4256bc1b3c94786287ccdfc751230374521843cf"],"e52fea2c4081a1e552b98506691990be59503168":["1cedb00d2dd44640194401179358a2e3ba6051bf"],"4256bc1b3c94786287ccdfc751230374521843cf":["be875c478b2c2388441e3d19726f9fb754a3397a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["84080a7d7dbdaa3e6a4a1c9f1bb6221be40f47e8"]},"commit2Childs":{"84080a7d7dbdaa3e6a4a1c9f1bb6221be40f47e8":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"be875c478b2c2388441e3d19726f9fb754a3397a":["4256bc1b3c94786287ccdfc751230374521843cf"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["be875c478b2c2388441e3d19726f9fb754a3397a"],"1cedb00d2dd44640194401179358a2e3ba6051bf":["e52fea2c4081a1e552b98506691990be59503168"],"e52fea2c4081a1e552b98506691990be59503168":["84080a7d7dbdaa3e6a4a1c9f1bb6221be40f47e8"],"4256bc1b3c94786287ccdfc751230374521843cf":["1cedb00d2dd44640194401179358a2e3ba6051bf"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}