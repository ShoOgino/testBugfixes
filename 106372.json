{"path":"solr/contrib/dataimporthandler-extras/src/main/java/org/apache/solr/handler/dataimport/MailEntityProcessor#getNextMail().mjava","commits":[{"id":"d20d5e40789b1c42f4f926e3174b271256c43657","date":1301641092,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"solr/contrib/dataimporthandler-extras/src/main/java/org/apache/solr/handler/dataimport/MailEntityProcessor#getNextMail().mjava","pathOld":"solr/contrib/dataimporthandler/src/extras/main/java/org/apache/solr/handler/dataimport/MailEntityProcessor#getNextMail().mjava","sourceNew":"  private Message getNextMail() {\n    if (!connected) {\n      if (!connectToMailBox())\n        return null;\n      connected = true;\n    }\n    if (folderIter == null) {\n      createFilters();\n      folderIter = new FolderIterator(mailbox);\n    }\n    // get next message from the folder\n    // if folder is exhausted get next folder\n    // loop till a valid mail or all folders exhausted.\n    while (msgIter == null || !msgIter.hasNext()) {\n      Folder next = folderIter.hasNext() ? folderIter.next() : null;\n      if (next == null) {\n        return null;\n      }\n      msgIter = new MessageIterator(next, batchSize);\n    }\n    return msgIter.next();\n  }\n\n","sourceOld":"  private Message getNextMail() {\n    if (!connected) {\n      if (!connectToMailBox())\n        return null;\n      connected = true;\n    }\n    if (folderIter == null) {\n      createFilters();\n      folderIter = new FolderIterator(mailbox);\n    }\n    // get next message from the folder\n    // if folder is exhausted get next folder\n    // loop till a valid mail or all folders exhausted.\n    while (msgIter == null || !msgIter.hasNext()) {\n      Folder next = folderIter.hasNext() ? folderIter.next() : null;\n      if (next == null) {\n        return null;\n      }\n      msgIter = new MessageIterator(next, batchSize);\n    }\n    return msgIter.next();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91","date":1306767085,"type":5,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/contrib/dataimporthandler-extras/src/java/org/apache/solr/handler/dataimport/MailEntityProcessor#getNextMail().mjava","pathOld":"solr/contrib/dataimporthandler-extras/src/main/java/org/apache/solr/handler/dataimport/MailEntityProcessor#getNextMail().mjava","sourceNew":"  private Message getNextMail() {\n    if (!connected) {\n      if (!connectToMailBox())\n        return null;\n      connected = true;\n    }\n    if (folderIter == null) {\n      createFilters();\n      folderIter = new FolderIterator(mailbox);\n    }\n    // get next message from the folder\n    // if folder is exhausted get next folder\n    // loop till a valid mail or all folders exhausted.\n    while (msgIter == null || !msgIter.hasNext()) {\n      Folder next = folderIter.hasNext() ? folderIter.next() : null;\n      if (next == null) {\n        return null;\n      }\n      msgIter = new MessageIterator(next, batchSize);\n    }\n    return msgIter.next();\n  }\n\n","sourceOld":"  private Message getNextMail() {\n    if (!connected) {\n      if (!connectToMailBox())\n        return null;\n      connected = true;\n    }\n    if (folderIter == null) {\n      createFilters();\n      folderIter = new FolderIterator(mailbox);\n    }\n    // get next message from the folder\n    // if folder is exhausted get next folder\n    // loop till a valid mail or all folders exhausted.\n    while (msgIter == null || !msgIter.hasNext()) {\n      Folder next = folderIter.hasNext() ? folderIter.next() : null;\n      if (next == null) {\n        return null;\n      }\n      msgIter = new MessageIterator(next, batchSize);\n    }\n    return msgIter.next();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91":["d20d5e40789b1c42f4f926e3174b271256c43657","a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"d20d5e40789b1c42f4f926e3174b271256c43657":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["5128b7b3b73fedff05fdc5ea2e6be53c1020bb91","d20d5e40789b1c42f4f926e3174b271256c43657","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"d20d5e40789b1c42f4f926e3174b271256c43657":["5128b7b3b73fedff05fdc5ea2e6be53c1020bb91"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["5128b7b3b73fedff05fdc5ea2e6be53c1020bb91","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}