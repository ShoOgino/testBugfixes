{"path":"src/java/org/apache/lucene/index/CompoundFileWriter#CompoundFileWriter(Directory,String,SegmentMerger.CheckAbort).mjava","commits":[{"id":"346d5897e4c4e77ed5dbd31f7730ff30973d5971","date":1198317988,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/CompoundFileWriter#CompoundFileWriter(Directory,String,SegmentMerger.CheckAbort).mjava","pathOld":"/dev/null","sourceNew":"    CompoundFileWriter(Directory dir, String name, SegmentMerger.CheckAbort checkAbort) {\n        if (dir == null)\n            throw new NullPointerException(\"directory cannot be null\");\n        if (name == null)\n            throw new NullPointerException(\"name cannot be null\");\n        this.checkAbort = checkAbort;\n        directory = dir;\n        fileName = name;\n        ids = new HashSet();\n        entries = new LinkedList();\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f011f01db72fa6f556a9a0843944ecee2de4aaa8","date":1255806907,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/CompoundFileWriter#CompoundFileWriter(Directory,String,SegmentMerger.CheckAbort).mjava","pathOld":"src/java/org/apache/lucene/index/CompoundFileWriter#CompoundFileWriter(Directory,String,SegmentMerger.CheckAbort).mjava","sourceNew":"    CompoundFileWriter(Directory dir, String name, SegmentMerger.CheckAbort checkAbort) {\n        if (dir == null)\n            throw new NullPointerException(\"directory cannot be null\");\n        if (name == null)\n            throw new NullPointerException(\"name cannot be null\");\n        this.checkAbort = checkAbort;\n        directory = dir;\n        fileName = name;\n        ids = new HashSet<String>();\n        entries = new LinkedList<FileEntry>();\n    }\n\n","sourceOld":"    CompoundFileWriter(Directory dir, String name, SegmentMerger.CheckAbort checkAbort) {\n        if (dir == null)\n            throw new NullPointerException(\"directory cannot be null\");\n        if (name == null)\n            throw new NullPointerException(\"name cannot be null\");\n        this.checkAbort = checkAbort;\n        directory = dir;\n        fileName = name;\n        ids = new HashSet();\n        entries = new LinkedList();\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/CompoundFileWriter#CompoundFileWriter(Directory,String,SegmentMerger.CheckAbort).mjava","pathOld":"src/java/org/apache/lucene/index/CompoundFileWriter#CompoundFileWriter(Directory,String,SegmentMerger.CheckAbort).mjava","sourceNew":"    CompoundFileWriter(Directory dir, String name, SegmentMerger.CheckAbort checkAbort) {\n        if (dir == null)\n            throw new NullPointerException(\"directory cannot be null\");\n        if (name == null)\n            throw new NullPointerException(\"name cannot be null\");\n        this.checkAbort = checkAbort;\n        directory = dir;\n        fileName = name;\n        ids = new HashSet<String>();\n        entries = new LinkedList<FileEntry>();\n    }\n\n","sourceOld":"    CompoundFileWriter(Directory dir, String name, SegmentMerger.CheckAbort checkAbort) {\n        if (dir == null)\n            throw new NullPointerException(\"directory cannot be null\");\n        if (name == null)\n            throw new NullPointerException(\"name cannot be null\");\n        this.checkAbort = checkAbort;\n        directory = dir;\n        fileName = name;\n        ids = new HashSet<String>();\n        entries = new LinkedList<FileEntry>();\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"346d5897e4c4e77ed5dbd31f7730ff30973d5971":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"f011f01db72fa6f556a9a0843944ecee2de4aaa8":["346d5897e4c4e77ed5dbd31f7730ff30973d5971"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["f011f01db72fa6f556a9a0843944ecee2de4aaa8"]},"commit2Childs":{"346d5897e4c4e77ed5dbd31f7730ff30973d5971":["f011f01db72fa6f556a9a0843944ecee2de4aaa8"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["346d5897e4c4e77ed5dbd31f7730ff30973d5971"],"f011f01db72fa6f556a9a0843944ecee2de4aaa8":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}