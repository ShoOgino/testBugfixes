{"path":"solr/core/src/java/org/apache/solr/metrics/SolrMetricsContext#gauge(Gauge[#],boolean,String,String...).mjava","commits":[{"id":"7c2af5a711bd6e2d33e0221ced0f47ac596ed275","date":1572877903,"type":0,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/metrics/SolrMetricsContext#gauge(Gauge[#],boolean,String,String...).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Convenience method for {@link SolrMetricManager#registerGauge(SolrMetricsContext, String, Gauge, String, boolean, String, String...)}.\n   */\n  public void gauge(Gauge<?> gauge, boolean force, String metricName, String... metricPath) {\n    metricManager.registerGauge(this, registryName, gauge, tag, force, metricName, metricPath);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bad14379f15be20a5f4871be82a276e5e69731fc","date":1599578304,"type":3,"author":"Mike Drob","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/metrics/SolrMetricsContext#gauge(Gauge[#],boolean,String,String...).mjava","pathOld":"solr/core/src/java/org/apache/solr/metrics/SolrMetricsContext#gauge(Gauge[#],boolean,String,String...).mjava","sourceNew":"  /**\n   * Convenience method for {@link SolrMetricManager#registerGauge(SolrMetricsContext, String, Gauge, String, SolrMetricManager.ResolutionStrategy, String, String...)}.\n   */\n  public void gauge(Gauge<?> gauge, boolean force, String metricName, String... metricPath) {\n    metricManager.registerGauge(this, registryName, gauge, tag, force ? SolrMetricManager.ResolutionStrategy.REPLACE : SolrMetricManager.ResolutionStrategy.ERROR, metricName, metricPath);\n  }\n\n","sourceOld":"  /**\n   * Convenience method for {@link SolrMetricManager#registerGauge(SolrMetricsContext, String, Gauge, String, boolean, String, String...)}.\n   */\n  public void gauge(Gauge<?> gauge, boolean force, String metricName, String... metricPath) {\n    metricManager.registerGauge(this, registryName, gauge, tag, force, metricName, metricPath);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"7c2af5a711bd6e2d33e0221ced0f47ac596ed275":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"bad14379f15be20a5f4871be82a276e5e69731fc":["7c2af5a711bd6e2d33e0221ced0f47ac596ed275"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["bad14379f15be20a5f4871be82a276e5e69731fc"]},"commit2Childs":{"7c2af5a711bd6e2d33e0221ced0f47ac596ed275":["bad14379f15be20a5f4871be82a276e5e69731fc"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["7c2af5a711bd6e2d33e0221ced0f47ac596ed275"],"bad14379f15be20a5f4871be82a276e5e69731fc":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}