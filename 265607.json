{"path":"lucene/core/src/java/org/apache/lucene/util/fst/FST#readNextArc(Arc[T],BytesReader).mjava","commits":[{"id":"8b9fb5afeea0288262bffcc55bdcda8b5fa272c8","date":1339238489,"type":1,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/fst/FST#readNextArc(Arc[T],BytesReader).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/fst/FST#readNextArc(Arc[T]).mjava","sourceNew":"  /** In-place read; returns the arc. */\n  public Arc<T> readNextArc(Arc<T> arc, BytesReader in) throws IOException {\n    if (arc.label == END_LABEL) {\n      // This was a fake inserted \"final\" arc\n      if (arc.nextArc <= 0) {\n        throw new IllegalArgumentException(\"cannot readNextArc when arc.isLast()=true\");\n      }\n      return readFirstRealTargetArc(arc.nextArc, arc, in);\n    } else {\n      return readNextRealArc(arc, in);\n    }\n  }\n\n","sourceOld":"  /** In-place read; returns the arc. */\n  public Arc<T> readNextArc(Arc<T> arc) throws IOException {\n    if (arc.label == END_LABEL) {\n      // This was a fake inserted \"final\" arc\n      if (arc.nextArc <= 0) {\n        throw new IllegalArgumentException(\"cannot readNextArc when arc.isLast()=true\");\n      }\n      return readFirstRealTargetArc(arc.nextArc, arc, getBytesReader(0));\n    } else {\n      return readNextRealArc(arc, getBytesReader(0));\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"54204c8a3ca26aeafd273139fc29baf70d0f6786","date":1564170395,"type":3,"author":"Michael Sokolov","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/fst/FST#readNextArc(Arc[T],BytesReader).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/fst/FST#readNextArc(Arc[T],BytesReader).mjava","sourceNew":"  /** In-place read; returns the arc. */\n  public Arc<T> readNextArc(Arc<T> arc, BytesReader in) throws IOException {\n    if (arc.label() == END_LABEL) {\n      // This was a fake inserted \"final\" arc\n      if (arc.nextArc() <= 0) {\n        throw new IllegalArgumentException(\"cannot readNextArc when arc.isLast()=true\");\n      }\n      return readFirstRealTargetArc(arc.nextArc(), arc, in);\n    } else {\n      return readNextRealArc(arc, in);\n    }\n  }\n\n","sourceOld":"  /** In-place read; returns the arc. */\n  public Arc<T> readNextArc(Arc<T> arc, BytesReader in) throws IOException {\n    if (arc.label == END_LABEL) {\n      // This was a fake inserted \"final\" arc\n      if (arc.nextArc <= 0) {\n        throw new IllegalArgumentException(\"cannot readNextArc when arc.isLast()=true\");\n      }\n      return readFirstRealTargetArc(arc.nextArc, arc, in);\n    } else {\n      return readNextRealArc(arc, in);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f8061ddd97f3352007d927dae445884a6f3d857b","date":1564988276,"type":3,"author":"Atri Sharma","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/util/fst/FST#readNextArc(Arc[T],BytesReader).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/fst/FST#readNextArc(Arc[T],BytesReader).mjava","sourceNew":"  /** In-place read; returns the arc. */\n  public Arc<T> readNextArc(Arc<T> arc, BytesReader in) throws IOException {\n    if (arc.label() == END_LABEL) {\n      // This was a fake inserted \"final\" arc\n      if (arc.nextArc() <= 0) {\n        throw new IllegalArgumentException(\"cannot readNextArc when arc.isLast()=true\");\n      }\n      return readFirstRealTargetArc(arc.nextArc(), arc, in);\n    } else {\n      return readNextRealArc(arc, in);\n    }\n  }\n\n","sourceOld":"  /** In-place read; returns the arc. */\n  public Arc<T> readNextArc(Arc<T> arc, BytesReader in) throws IOException {\n    if (arc.label == END_LABEL) {\n      // This was a fake inserted \"final\" arc\n      if (arc.nextArc <= 0) {\n        throw new IllegalArgumentException(\"cannot readNextArc when arc.isLast()=true\");\n      }\n      return readFirstRealTargetArc(arc.nextArc, arc, in);\n    } else {\n      return readNextRealArc(arc, in);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"54204c8a3ca26aeafd273139fc29baf70d0f6786":["8b9fb5afeea0288262bffcc55bdcda8b5fa272c8"],"8b9fb5afeea0288262bffcc55bdcda8b5fa272c8":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"f8061ddd97f3352007d927dae445884a6f3d857b":["8b9fb5afeea0288262bffcc55bdcda8b5fa272c8","54204c8a3ca26aeafd273139fc29baf70d0f6786"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["54204c8a3ca26aeafd273139fc29baf70d0f6786"]},"commit2Childs":{"54204c8a3ca26aeafd273139fc29baf70d0f6786":["f8061ddd97f3352007d927dae445884a6f3d857b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"8b9fb5afeea0288262bffcc55bdcda8b5fa272c8":["54204c8a3ca26aeafd273139fc29baf70d0f6786","f8061ddd97f3352007d927dae445884a6f3d857b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["8b9fb5afeea0288262bffcc55bdcda8b5fa272c8"],"f8061ddd97f3352007d927dae445884a6f3d857b":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["f8061ddd97f3352007d927dae445884a6f3d857b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}