{"path":"lucene/facet/src/java/org/apache/lucene/facet/simple/TaxonomyFacetCounts#getSpecificValue(String,String...).mjava","commits":[{"id":"93bee32f95de853915b2f9402e76ed24ef97f43e","date":1384460894,"type":1,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/simple/TaxonomyFacetCounts#getSpecificValue(String,String...).mjava","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/simple/TaxonomyFacetCounts#getSpecificCount(CategoryPath).mjava","sourceNew":"  /** Return the count for a specific path.  Returns -1 if\n   *  this path doesn't exist, else the count. */\n  @Override\n  public Number getSpecificValue(String dim, String... path) throws IOException {\n    int ord = taxoReader.getOrdinal(CategoryPath.create(dim, path));\n    if (ord < 0) {\n      return -1;\n    }\n    return counts[ord];\n  }\n\n","sourceOld":"  /** Return the count for a specific path.  Returns -1 if\n   *  this path doesn't exist, else the count. */\n  public int getSpecificCount(CategoryPath path) throws IOException {\n    int ord = taxoReader.getOrdinal(path);\n    if (ord < 0) {\n      return -1;\n    }\n    return counts[ord];\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c190847801a50f4dd20fd639bdc29b54ea3b288b","date":1384461522,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/simple/TaxonomyFacetCounts#getSpecificValue(String,String...).mjava","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/simple/TaxonomyFacetCounts#getSpecificValue(String,String...).mjava","sourceNew":"  /** Return the count for a specific path.  Returns -1 if\n   *  this path doesn't exist, else the count. */\n  @Override\n  public Number getSpecificValue(String dim, String... path) throws IOException {\n    int ord = taxoReader.getOrdinal(FacetLabel.create(dim, path));\n    if (ord < 0) {\n      return -1;\n    }\n    return counts[ord];\n  }\n\n","sourceOld":"  /** Return the count for a specific path.  Returns -1 if\n   *  this path doesn't exist, else the count. */\n  @Override\n  public Number getSpecificValue(String dim, String... path) throws IOException {\n    int ord = taxoReader.getOrdinal(CategoryPath.create(dim, path));\n    if (ord < 0) {\n      return -1;\n    }\n    return counts[ord];\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"18edd2e3f5560087a37442fa424cbbed7c295ebc","date":1384813900,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/simple/TaxonomyFacetCounts#getSpecificValue(String,String...).mjava","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/simple/TaxonomyFacetCounts#getSpecificValue(String,String...).mjava","sourceNew":"  /** Return the count for a specific path.  Returns -1 if\n   *  this path doesn't exist, else the count. */\n  @Override\n  public Number getSpecificValue(String dim, String... path) throws IOException {\n    verifyDim(dim);\n    int ord = taxoReader.getOrdinal(FacetLabel.create(dim, path));\n    if (ord < 0) {\n      return -1;\n    }\n    return counts[ord];\n  }\n\n","sourceOld":"  /** Return the count for a specific path.  Returns -1 if\n   *  this path doesn't exist, else the count. */\n  @Override\n  public Number getSpecificValue(String dim, String... path) throws IOException {\n    int ord = taxoReader.getOrdinal(FacetLabel.create(dim, path));\n    if (ord < 0) {\n      return -1;\n    }\n    return counts[ord];\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"21d36d0db865f7b84026b447bec653469a6e66df","date":1385495602,"type":5,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/TaxonomyFacetCounts#getSpecificValue(String,String...).mjava","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/simple/TaxonomyFacetCounts#getSpecificValue(String,String...).mjava","sourceNew":"  /** Return the count for a specific path.  Returns -1 if\n   *  this path doesn't exist, else the count. */\n  @Override\n  public Number getSpecificValue(String dim, String... path) throws IOException {\n    verifyDim(dim);\n    int ord = taxoReader.getOrdinal(FacetLabel.create(dim, path));\n    if (ord < 0) {\n      return -1;\n    }\n    return counts[ord];\n  }\n\n","sourceOld":"  /** Return the count for a specific path.  Returns -1 if\n   *  this path doesn't exist, else the count. */\n  @Override\n  public Number getSpecificValue(String dim, String... path) throws IOException {\n    verifyDim(dim);\n    int ord = taxoReader.getOrdinal(FacetLabel.create(dim, path));\n    if (ord < 0) {\n      return -1;\n    }\n    return counts[ord];\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"18edd2e3f5560087a37442fa424cbbed7c295ebc":["c190847801a50f4dd20fd639bdc29b54ea3b288b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"21d36d0db865f7b84026b447bec653469a6e66df":["18edd2e3f5560087a37442fa424cbbed7c295ebc"],"93bee32f95de853915b2f9402e76ed24ef97f43e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"c190847801a50f4dd20fd639bdc29b54ea3b288b":["93bee32f95de853915b2f9402e76ed24ef97f43e"]},"commit2Childs":{"18edd2e3f5560087a37442fa424cbbed7c295ebc":["21d36d0db865f7b84026b447bec653469a6e66df"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["93bee32f95de853915b2f9402e76ed24ef97f43e","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"21d36d0db865f7b84026b447bec653469a6e66df":[],"93bee32f95de853915b2f9402e76ed24ef97f43e":["c190847801a50f4dd20fd639bdc29b54ea3b288b"],"c190847801a50f4dd20fd639bdc29b54ea3b288b":["18edd2e3f5560087a37442fa424cbbed7c295ebc"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["21d36d0db865f7b84026b447bec653469a6e66df","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}