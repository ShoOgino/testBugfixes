{"path":"solr/core/src/java/org/apache/solr/cloud/OverseerSolrResponseSerializer#serialize(OverseerSolrResponse).mjava","commits":[{"id":"b6a4045268caa5f6094d5a8d80519a1c152295f3","date":1580840817,"type":1,"author":"Tomas Fernandez Lobbe","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/OverseerSolrResponseSerializer#serialize(OverseerSolrResponse).mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/OverseerSolrResponse#serialize(OverseerSolrResponse).mjava","sourceNew":"  /**\n   * This method serializes the content of an {@code OverseerSolrResponse}. Note that:\n   * <ul>\n   * <li>The elapsed time is not serialized</li>\n   * <li>\"Unknown\" elements for the Javabin format will be serialized as Strings. See {@link org.apache.solr.common.util.JavaBinCodec#writeVal}</li>\n   * </ul>\n   */\n  @SuppressWarnings(\"deprecation\")\n  public static byte[] serialize(OverseerSolrResponse responseObject) {\n    Objects.requireNonNull(responseObject);\n    if (useUnsafeSerialization()) {\n      return SolrResponse.serializable(responseObject);\n    }\n    try {\n      return Utils.toJavabin(responseObject.getResponse()).readAllBytes();\n    } catch (IOException|RuntimeException e) {\n      throw new SolrException(ErrorCode.SERVER_ERROR, \"Exception serializing response to Javabin\", e);\n    }\n  }\n\n","sourceOld":"  /**\n   * This method serializes the content of an {@code OverseerSolrResponse}. Note that:\n   * <ul>\n   * <li>The elapsed time is not serialized</li>\n   * <li>\"Unknown\" elements for the Javabin format will be serialized as Strings. See {@link org.apache.solr.common.util.JavaBinCodec#writeVal}</li>\n   * </ul>\n   */\n  @SuppressWarnings(\"deprecation\")\n  public static byte[] serialize(OverseerSolrResponse responseObject) {\n    Objects.requireNonNull(responseObject);\n    if (useUnsafeSerialization()) {\n      return SolrResponse.serializable(responseObject);\n    }\n    try {\n      return Utils.toJavabin(responseObject.getResponse()).readAllBytes();\n    } catch (IOException|RuntimeException e) {\n      throw new SolrException(ErrorCode.SERVER_ERROR, \"Exception serializing response to Javabin\", e);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b6a4045268caa5f6094d5a8d80519a1c152295f3":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b6a4045268caa5f6094d5a8d80519a1c152295f3"]},"commit2Childs":{"b6a4045268caa5f6094d5a8d80519a1c152295f3":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b6a4045268caa5f6094d5a8d80519a1c152295f3"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}