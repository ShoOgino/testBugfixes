{"path":"solr/solrj/src/java/org/apache/solr/common/util/PathTrie.Node#lookupNode(List[String],int,Map[String,String],Set[String]).mjava","commits":[{"id":"650b520f2a4daa4b0712e2393dc29ae7f21f10ac","date":1593054531,"type":0,"author":"Noble Paul","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/common/util/PathTrie.Node#lookupNode(List[String],int,Map[String,String],Set[String]).mjava","pathOld":"/dev/null","sourceNew":"    Node lookupNode(List<String> pathSegments, int index, Map<String, String> templateVariables, Set<String> availableSubPaths) {\n      if (templateName != null && templateVariables != null)\n        templateVariables.put(templateName, pathSegments.get(index - 1));\n      if (pathSegments.size() < index + 1) {\n        findAvailableChildren(\"\", availableSubPaths);\n        if (obj == null) {//this is not a leaf node\n          Node n = children.get(\"*\");\n          if (n != null) {\n            return n;\n          }\n\n        }\n        return this;\n      }\n      String piece = pathSegments.get(index);\n      if (children == null) {\n        return null;\n      }\n      Node n = children.get(piece);\n      if (n == null && !reserved.contains(piece)) n = children.get(\"\");\n      if (n == null) {\n        n = children.get(\"*\");\n        if (n != null) {\n          StringBuffer sb = new StringBuffer();\n          for (int i = index; i < pathSegments.size(); i++) {\n            sb.append(\"/\").append(pathSegments.get(i));\n          }\n          if (templateVariables != null) templateVariables.put(\"*\", sb.toString());\n          return n;\n\n        }\n      }\n      if (n == null) {\n        return null;\n      }\n      return n.lookupNode(pathSegments, index + 1, templateVariables, availableSubPaths);\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"650b520f2a4daa4b0712e2393dc29ae7f21f10ac":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["650b520f2a4daa4b0712e2393dc29ae7f21f10ac"]},"commit2Childs":{"650b520f2a4daa4b0712e2393dc29ae7f21f10ac":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["650b520f2a4daa4b0712e2393dc29ae7f21f10ac"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}