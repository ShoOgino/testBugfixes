{"path":"lucene/test-framework/src/java/org/apache/lucene/search/AssertingScorer#wrap(Random,Scorer).mjava","commits":[{"id":"2e18c86f811939bfa8cd24046c96ed026f2e9b34","date":1393893071,"type":1,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/search/AssertingScorer#wrap(Random,Scorer).mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/search/AssertingScorer#wrap(Random,Scorer,TopScorer,boolean).mjava","sourceNew":"  public static Scorer wrap(Random random, Scorer other) {\n    if (other == null || other instanceof AssertingScorer) {\n      return other;\n    }\n    final AssertingScorer assertScorer = new AssertingScorer(random, other);\n    ASSERTING_INSTANCES.put(other, new WeakReference<AssertingScorer>(assertScorer));\n    return assertScorer;\n  }\n\n","sourceOld":"  private static Scorer wrap(Random random, Scorer other, TopScorer topScorer, boolean inOrder) {\n    if (other == null || other instanceof AssertingScorer) {\n      return other;\n    }\n    final AssertingScorer assertScorer = new AssertingScorer(random, other, topScorer, inOrder);\n    ASSERTING_INSTANCES.put(other, new WeakReference<AssertingScorer>(assertScorer));\n    return assertScorer;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"acf00221f44c5f08ccea014f2492b53af15ecd66","date":1394568293,"type":1,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/search/AssertingScorer#wrap(Random,Scorer).mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/search/AssertingScorer#wrap(Random,Scorer,TopScorer,boolean).mjava","sourceNew":"  public static Scorer wrap(Random random, Scorer other) {\n    if (other == null || other instanceof AssertingScorer) {\n      return other;\n    }\n    final AssertingScorer assertScorer = new AssertingScorer(random, other);\n    ASSERTING_INSTANCES.put(other, new WeakReference<AssertingScorer>(assertScorer));\n    return assertScorer;\n  }\n\n","sourceOld":"  private static Scorer wrap(Random random, Scorer other, TopScorer topScorer, boolean inOrder) {\n    if (other == null || other instanceof AssertingScorer) {\n      return other;\n    }\n    final AssertingScorer assertScorer = new AssertingScorer(random, other, topScorer, inOrder);\n    ASSERTING_INSTANCES.put(other, new WeakReference<AssertingScorer>(assertScorer));\n    return assertScorer;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"634f330c54fd3f9f491d52036dc3f40b4f4d8934","date":1394635157,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/search/AssertingScorer#wrap(Random,Scorer).mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/search/AssertingScorer#wrap(Random,Scorer).mjava","sourceNew":"  public static Scorer wrap(Random random, Scorer other) {\n    if (other == null || other instanceof AssertingScorer) {\n      return other;\n    }\n    final AssertingScorer assertScorer = new AssertingScorer(random, other);\n    ASSERTING_INSTANCES.put(other, new WeakReference<>(assertScorer));\n    return assertScorer;\n  }\n\n","sourceOld":"  public static Scorer wrap(Random random, Scorer other) {\n    if (other == null || other instanceof AssertingScorer) {\n      return other;\n    }\n    final AssertingScorer assertScorer = new AssertingScorer(random, other);\n    ASSERTING_INSTANCES.put(other, new WeakReference<AssertingScorer>(assertScorer));\n    return assertScorer;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ac499dbbdb250b9bf6a4846ff4db7b1cb304f9c5","date":1429083443,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/search/AssertingScorer#wrap(Random,Scorer).mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/search/AssertingScorer#wrap(Random,Scorer).mjava","sourceNew":"  public static Scorer wrap(Random random, Scorer other) {\n    if (other == null || other instanceof AssertingScorer) {\n      return other;\n    }\n    return new AssertingScorer(random, other);\n  }\n\n","sourceOld":"  public static Scorer wrap(Random random, Scorer other) {\n    if (other == null || other instanceof AssertingScorer) {\n      return other;\n    }\n    final AssertingScorer assertScorer = new AssertingScorer(random, other);\n    ASSERTING_INSTANCES.put(other, new WeakReference<>(assertScorer));\n    return assertScorer;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0ab7a7b7d9840c6df78aaf2d36b9e8765da1069c","date":1433506692,"type":4,"author":"Adrien Grand","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/test-framework/src/java/org/apache/lucene/search/AssertingScorer#wrap(Random,Scorer).mjava","sourceNew":null,"sourceOld":"  public static Scorer wrap(Random random, Scorer other) {\n    if (other == null || other instanceof AssertingScorer) {\n      return other;\n    }\n    return new AssertingScorer(random, other);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"2e18c86f811939bfa8cd24046c96ed026f2e9b34":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"634f330c54fd3f9f491d52036dc3f40b4f4d8934":["acf00221f44c5f08ccea014f2492b53af15ecd66"],"ac499dbbdb250b9bf6a4846ff4db7b1cb304f9c5":["634f330c54fd3f9f491d52036dc3f40b4f4d8934"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"0ab7a7b7d9840c6df78aaf2d36b9e8765da1069c":["ac499dbbdb250b9bf6a4846ff4db7b1cb304f9c5"],"acf00221f44c5f08ccea014f2492b53af15ecd66":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","2e18c86f811939bfa8cd24046c96ed026f2e9b34"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["0ab7a7b7d9840c6df78aaf2d36b9e8765da1069c"]},"commit2Childs":{"2e18c86f811939bfa8cd24046c96ed026f2e9b34":["acf00221f44c5f08ccea014f2492b53af15ecd66"],"634f330c54fd3f9f491d52036dc3f40b4f4d8934":["ac499dbbdb250b9bf6a4846ff4db7b1cb304f9c5"],"ac499dbbdb250b9bf6a4846ff4db7b1cb304f9c5":["0ab7a7b7d9840c6df78aaf2d36b9e8765da1069c"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["2e18c86f811939bfa8cd24046c96ed026f2e9b34","acf00221f44c5f08ccea014f2492b53af15ecd66"],"0ab7a7b7d9840c6df78aaf2d36b9e8765da1069c":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"acf00221f44c5f08ccea014f2492b53af15ecd66":["634f330c54fd3f9f491d52036dc3f40b4f4d8934"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}