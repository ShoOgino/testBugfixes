{"path":"lucene/codecs/src/java/org/apache/lucene/codecs/memory/LegacyDocValuesIterables#sortedSetOrdCountIterable(DocValuesProducer,FieldInfo,int).mjava","commits":[{"id":"701377879d61cf6e2de072d11c76089338c0c3b2","date":1542374674,"type":1,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/codecs/src/java/org/apache/lucene/codecs/memory/LegacyDocValuesIterables#sortedSetOrdCountIterable(DocValuesProducer,FieldInfo,int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/LegacyDocValuesIterables#sortedSetOrdCountIterable(DocValuesProducer,FieldInfo,int).mjava","sourceNew":"  /** Converts number-of-ords per document from {@link SortedSetDocValues} into {@code Iterable&lt;Number&gt;}.\n   *\n   * @deprecated Consume {@link SortedSetDocValues} instead. */\n  @Deprecated\n  public static Iterable<Number> sortedSetOrdCountIterable(final DocValuesProducer valuesProducer, final FieldInfo fieldInfo, final int maxDoc) {\n\n    return new Iterable<Number>() {\n\n      @Override\n      public Iterator<Number> iterator() {\n\n        final SortedSetDocValues values;\n        try {\n          values = valuesProducer.getSortedSet(fieldInfo);\n        } catch (IOException ioe) {\n          throw new RuntimeException(ioe);\n        }\n\n        return new Iterator<Number>() {\n          private int nextDocID;\n          private int ordCount;\n          \n          @Override\n          public boolean hasNext() {\n            return nextDocID < maxDoc;\n          }\n\n          @Override\n          public Number next() {\n            try {\n              if (nextDocID > values.docID()) {\n                if (values.nextDoc() != NO_MORE_DOCS) {\n                  ordCount = 0;\n                  while (values.nextOrd() != NO_MORE_ORDS) {\n                    ordCount++;\n                  }\n                }\n              }\n              int result;\n              if (nextDocID == values.docID()) {\n                result = ordCount;\n              } else {\n                result = 0;\n              }\n              nextDocID++;\n              return result;\n            } catch (IOException ioe) {\n              throw new RuntimeException(ioe);\n            }\n          }\n        };\n      }\n    };\n  }\n\n","sourceOld":"  /** Converts number-of-ords per document from {@link SortedSetDocValues} into {@code Iterable&lt;Number&gt;}.\n   *\n   * @deprecated Consume {@link SortedSetDocValues} instead. */\n  @Deprecated\n  public static Iterable<Number> sortedSetOrdCountIterable(final DocValuesProducer valuesProducer, final FieldInfo fieldInfo, final int maxDoc) {\n\n    return new Iterable<Number>() {\n\n      @Override\n      public Iterator<Number> iterator() {\n\n        final SortedSetDocValues values;\n        try {\n          values = valuesProducer.getSortedSet(fieldInfo);\n        } catch (IOException ioe) {\n          throw new RuntimeException(ioe);\n        }\n\n        return new Iterator<Number>() {\n          private int nextDocID;\n          private int ordCount;\n          \n          @Override\n          public boolean hasNext() {\n            return nextDocID < maxDoc;\n          }\n\n          @Override\n          public Number next() {\n            try {\n              if (nextDocID > values.docID()) {\n                if (values.nextDoc() != NO_MORE_DOCS) {\n                  ordCount = 0;\n                  while (values.nextOrd() != NO_MORE_ORDS) {\n                    ordCount++;\n                  }\n                }\n              }\n              int result;\n              if (nextDocID == values.docID()) {\n                result = ordCount;\n              } else {\n                result = 0;\n              }\n              nextDocID++;\n              return result;\n            } catch (IOException ioe) {\n              throw new RuntimeException(ioe);\n            }\n          }\n        };\n      }\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"701377879d61cf6e2de072d11c76089338c0c3b2":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["701377879d61cf6e2de072d11c76089338c0c3b2"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["701377879d61cf6e2de072d11c76089338c0c3b2"],"701377879d61cf6e2de072d11c76089338c0c3b2":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}