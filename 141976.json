{"path":"contrib/benchmark/src/java/org/apache/lucene/benchmark/byTask/feeds/ContentSource#collectFiles(File,ArrayList).mjava","commits":[{"id":"6944b9fa6d8ef96b83ae2d3a4332d03b3857355b","date":1245355139,"type":0,"author":"Mark Robert Miller","isMerge":false,"pathNew":"contrib/benchmark/src/java/org/apache/lucene/benchmark/byTask/feeds/ContentSource#collectFiles(File,ArrayList).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * A convenience method for collecting all the files of a content source from\n   * a given directory. The collected {@link File} instances are stored in the\n   * given <code>files</code>.\n   */\n  protected final void collectFiles(File dir, ArrayList files) {\n    if (!dir.canRead()) {\n      return;\n    }\n    \n    File[] dirFiles = dir.listFiles();\n    Arrays.sort(dirFiles);\n    for (int i = 0; i < dirFiles.length; i++) {\n      File file = dirFiles[i];\n      if (file.isDirectory()) {\n        collectFiles(file, files);\n      } else if (file.canRead()) {\n        files.add(file);\n      }\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ffdf794cee8d43eb612df752c592cef2dc3e75ae","date":1256465578,"type":5,"author":"Uwe Schindler","isMerge":false,"pathNew":"contrib/benchmark/src/java/org/apache/lucene/benchmark/byTask/feeds/ContentSource#collectFiles(File,ArrayList[File]).mjava","pathOld":"contrib/benchmark/src/java/org/apache/lucene/benchmark/byTask/feeds/ContentSource#collectFiles(File,ArrayList).mjava","sourceNew":"  /**\n   * A convenience method for collecting all the files of a content source from\n   * a given directory. The collected {@link File} instances are stored in the\n   * given <code>files</code>.\n   */\n  protected final void collectFiles(File dir, ArrayList<File> files) {\n    if (!dir.canRead()) {\n      return;\n    }\n    \n    File[] dirFiles = dir.listFiles();\n    Arrays.sort(dirFiles);\n    for (int i = 0; i < dirFiles.length; i++) {\n      File file = dirFiles[i];\n      if (file.isDirectory()) {\n        collectFiles(file, files);\n      } else if (file.canRead()) {\n        files.add(file);\n      }\n    }\n  }\n\n","sourceOld":"  /**\n   * A convenience method for collecting all the files of a content source from\n   * a given directory. The collected {@link File} instances are stored in the\n   * given <code>files</code>.\n   */\n  protected final void collectFiles(File dir, ArrayList files) {\n    if (!dir.canRead()) {\n      return;\n    }\n    \n    File[] dirFiles = dir.listFiles();\n    Arrays.sort(dirFiles);\n    for (int i = 0; i < dirFiles.length; i++) {\n      File file = dirFiles[i];\n      if (file.isDirectory()) {\n        collectFiles(file, files);\n      } else if (file.canRead()) {\n        files.add(file);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"ffdf794cee8d43eb612df752c592cef2dc3e75ae":["6944b9fa6d8ef96b83ae2d3a4332d03b3857355b"],"6944b9fa6d8ef96b83ae2d3a4332d03b3857355b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["ffdf794cee8d43eb612df752c592cef2dc3e75ae"]},"commit2Childs":{"ffdf794cee8d43eb612df752c592cef2dc3e75ae":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"6944b9fa6d8ef96b83ae2d3a4332d03b3857355b":["ffdf794cee8d43eb612df752c592cef2dc3e75ae"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["6944b9fa6d8ef96b83ae2d3a4332d03b3857355b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}