{"path":"lucene/core/src/java/org/apache/lucene/util/bkd/BKDReader#readMinMax(int[],byte[],byte[],IndexInput).mjava","commits":[{"id":"d774afea15a18cc375fae2ffaa8319935d0a7b2a","date":1536414150,"type":0,"author":"iverase","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/bkd/BKDReader#readMinMax(int[],byte[],byte[],IndexInput).mjava","pathOld":"/dev/null","sourceNew":"    private void readMinMax(int[] commonPrefixLengths, byte[] minPackedValue, byte[] maxPackedValue, IndexInput in) throws IOException {\n      for (int dim = 0; dim < numDims; dim++) {\n        int prefix = commonPrefixLengths[dim];\n        in.readBytes(minPackedValue, dim * bytesPerDim + prefix, bytesPerDim - prefix);\n        in.readBytes(maxPackedValue, dim * bytesPerDim + prefix, bytesPerDim - prefix);\n      }\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f6652c943595e92c187ee904c382863013eae28f","date":1539042663,"type":3,"author":"Nicholas Knize","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/bkd/BKDReader#readMinMax(int[],byte[],byte[],IndexInput).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/bkd/BKDReader#readMinMax(int[],byte[],byte[],IndexInput).mjava","sourceNew":"  private void readMinMax(int[] commonPrefixLengths, byte[] minPackedValue, byte[] maxPackedValue, IndexInput in) throws IOException {\n    for (int dim = 0; dim < numIndexDims; dim++) {\n      int prefix = commonPrefixLengths[dim];\n      in.readBytes(minPackedValue, dim * bytesPerDim + prefix, bytesPerDim - prefix);\n      in.readBytes(maxPackedValue, dim * bytesPerDim + prefix, bytesPerDim - prefix);\n    }\n  }\n\n","sourceOld":"    private void readMinMax(int[] commonPrefixLengths, byte[] minPackedValue, byte[] maxPackedValue, IndexInput in) throws IOException {\n      for (int dim = 0; dim < numDims; dim++) {\n        int prefix = commonPrefixLengths[dim];\n        in.readBytes(minPackedValue, dim * bytesPerDim + prefix, bytesPerDim - prefix);\n        in.readBytes(maxPackedValue, dim * bytesPerDim + prefix, bytesPerDim - prefix);\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bb94bf667d51f9c390c99d97afb36b7caab6b6e9","date":1599548621,"type":3,"author":"Ignacio Vera","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/bkd/BKDReader#readMinMax(int[],byte[],byte[],IndexInput).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/bkd/BKDReader#readMinMax(int[],byte[],byte[],IndexInput).mjava","sourceNew":"  private void readMinMax(int[] commonPrefixLengths, byte[] minPackedValue, byte[] maxPackedValue, IndexInput in) throws IOException {\n    for (int dim = 0; dim < config.numIndexDims; dim++) {\n      int prefix = commonPrefixLengths[dim];\n      in.readBytes(minPackedValue, dim * config.bytesPerDim + prefix, config.bytesPerDim - prefix);\n      in.readBytes(maxPackedValue, dim * config.bytesPerDim + prefix, config.bytesPerDim - prefix);\n    }\n  }\n\n","sourceOld":"  private void readMinMax(int[] commonPrefixLengths, byte[] minPackedValue, byte[] maxPackedValue, IndexInput in) throws IOException {\n    for (int dim = 0; dim < numIndexDims; dim++) {\n      int prefix = commonPrefixLengths[dim];\n      in.readBytes(minPackedValue, dim * bytesPerDim + prefix, bytesPerDim - prefix);\n      in.readBytes(maxPackedValue, dim * bytesPerDim + prefix, bytesPerDim - prefix);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"bb94bf667d51f9c390c99d97afb36b7caab6b6e9":["f6652c943595e92c187ee904c382863013eae28f"],"f6652c943595e92c187ee904c382863013eae28f":["d774afea15a18cc375fae2ffaa8319935d0a7b2a"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"d774afea15a18cc375fae2ffaa8319935d0a7b2a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["bb94bf667d51f9c390c99d97afb36b7caab6b6e9"]},"commit2Childs":{"bb94bf667d51f9c390c99d97afb36b7caab6b6e9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"f6652c943595e92c187ee904c382863013eae28f":["bb94bf667d51f9c390c99d97afb36b7caab6b6e9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["d774afea15a18cc375fae2ffaa8319935d0a7b2a"],"d774afea15a18cc375fae2ffaa8319935d0a7b2a":["f6652c943595e92c187ee904c382863013eae28f"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}