{"path":"lucene/analysis/common/src/java/org/apache/lucene/analysis/hunspell/HunspellStemFilter#HunspellStemFilter(TokenStream,HunspellDictionary,int).mjava","commits":[{"id":"765dd1af5470eb0ccafa626a8442dec4b7495a19","date":1374166958,"type":0,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/analysis/common/src/java/org/apache/lucene/analysis/hunspell/HunspellStemFilter#HunspellStemFilter(TokenStream,HunspellDictionary,int).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Creates a new HunspellStemFilter that will stem tokens from the given TokenStream using affix rules in the provided\n   * HunspellDictionary\n   *\n   * @param input TokenStream whose tokens will be stemmed\n   * @param dictionary HunspellDictionary containing the affix rules and words that will be used to stem the tokens\n   * @param recursionCap maximum level of recursion stemmer can go into, defaults to <code>2</code>\n   */\n  public HunspellStemFilter(TokenStream input, HunspellDictionary dictionary, int recursionCap) {\n    this(input, dictionary, true, recursionCap);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee","date":1376366778,"type":0,"author":"Han Jiang","isMerge":false,"pathNew":"lucene/analysis/common/src/java/org/apache/lucene/analysis/hunspell/HunspellStemFilter#HunspellStemFilter(TokenStream,HunspellDictionary,int).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Creates a new HunspellStemFilter that will stem tokens from the given TokenStream using affix rules in the provided\n   * HunspellDictionary\n   *\n   * @param input TokenStream whose tokens will be stemmed\n   * @param dictionary HunspellDictionary containing the affix rules and words that will be used to stem the tokens\n   * @param recursionCap maximum level of recursion stemmer can go into, defaults to <code>2</code>\n   */\n  public HunspellStemFilter(TokenStream input, HunspellDictionary dictionary, int recursionCap) {\n    this(input, dictionary, true, recursionCap);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"dc3f094cafa4a87b4066e1d6710fa4e6afe6260e","date":1393532367,"type":4,"author":"Robert Muir","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/analysis/common/src/java/org/apache/lucene/analysis/hunspell/HunspellStemFilter#HunspellStemFilter(TokenStream,HunspellDictionary,int).mjava","sourceNew":null,"sourceOld":"  /**\n   * Creates a new HunspellStemFilter that will stem tokens from the given TokenStream using affix rules in the provided\n   * HunspellDictionary\n   *\n   * @param input TokenStream whose tokens will be stemmed\n   * @param dictionary HunspellDictionary containing the affix rules and words that will be used to stem the tokens\n   * @param recursionCap maximum level of recursion stemmer can go into, defaults to <code>2</code>\n   */\n  public HunspellStemFilter(TokenStream input, HunspellDictionary dictionary, int recursionCap) {\n    this(input, dictionary, true, recursionCap);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ba791bce8103c79e38f957e9c5a53a75871bd918","date":1393539206,"type":5,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/analysis/common/src/java/org/apache/lucene/analysis/hunspell/HunspellStemFilter#HunspellStemFilter(TokenStream,Dictionary,int).mjava","pathOld":"lucene/analysis/common/src/java/org/apache/lucene/analysis/hunspell/HunspellStemFilter#HunspellStemFilter(TokenStream,HunspellDictionary,int).mjava","sourceNew":"  /**\n   * Creates a new HunspellStemFilter that will stem tokens from the given TokenStream using affix rules in the provided\n   * Dictionary\n   *\n   * @param input TokenStream whose tokens will be stemmed\n   * @param dictionary HunspellDictionary containing the affix rules and words that will be used to stem the tokens\n   * @param recursionCap maximum level of recursion stemmer can go into, defaults to <code>2</code>\n   */\n  public HunspellStemFilter(TokenStream input, Dictionary dictionary, int recursionCap) {\n    this(input, dictionary, true, recursionCap);\n  }\n\n","sourceOld":"  /**\n   * Creates a new HunspellStemFilter that will stem tokens from the given TokenStream using affix rules in the provided\n   * HunspellDictionary\n   *\n   * @param input TokenStream whose tokens will be stemmed\n   * @param dictionary HunspellDictionary containing the affix rules and words that will be used to stem the tokens\n   * @param recursionCap maximum level of recursion stemmer can go into, defaults to <code>2</code>\n   */\n  public HunspellStemFilter(TokenStream input, HunspellDictionary dictionary, int recursionCap) {\n    this(input, dictionary, true, recursionCap);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"ba791bce8103c79e38f957e9c5a53a75871bd918":["765dd1af5470eb0ccafa626a8442dec4b7495a19","dc3f094cafa4a87b4066e1d6710fa4e6afe6260e"],"dc3f094cafa4a87b4066e1d6710fa4e6afe6260e":["765dd1af5470eb0ccafa626a8442dec4b7495a19"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["ba791bce8103c79e38f957e9c5a53a75871bd918"],"765dd1af5470eb0ccafa626a8442dec4b7495a19":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"ba791bce8103c79e38f957e9c5a53a75871bd918":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"dc3f094cafa4a87b4066e1d6710fa4e6afe6260e":["ba791bce8103c79e38f957e9c5a53a75871bd918"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee","765dd1af5470eb0ccafa626a8442dec4b7495a19"],"8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee":[],"765dd1af5470eb0ccafa626a8442dec4b7495a19":["ba791bce8103c79e38f957e9c5a53a75871bd918","dc3f094cafa4a87b4066e1d6710fa4e6afe6260e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}