{"path":"lucene/core/src/test/org/apache/lucene/document/TestDocument#testNumericFieldAsString().mjava","commits":[{"id":"621520e8943e605a0ce845cf205adcfd6194b587","date":1346785264,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/document/TestDocument#testNumericFieldAsString().mjava","pathOld":"/dev/null","sourceNew":"  public void testNumericFieldAsString() throws Exception {\n    Document doc = new Document();\n    doc.add(new IntField(\"int\", 5, Field.Store.YES));\n    assertEquals(\"5\", doc.get(\"int\"));\n    assertNull(doc.get(\"somethingElse\"));\n    doc.add(new IntField(\"int\", 4, Field.Store.YES));\n    assertArrayEquals(new String[] { \"5\", \"4\" }, doc.getValues(\"int\"));\n    \n    Directory dir = newDirectory();\n    RandomIndexWriter iw = new RandomIndexWriter(random(), dir);\n    iw.addDocument(doc);\n    DirectoryReader ir = iw.getReader();\n    StoredDocument sdoc = ir.document(0);\n    assertEquals(\"5\", sdoc.get(\"int\"));\n    assertNull(sdoc.get(\"somethingElse\"));\n    assertArrayEquals(new String[] { \"5\", \"4\" }, sdoc.getValues(\"int\"));\n    ir.close();\n    iw.close();\n    dir.close();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ae14298f4eec6d5faee6a149f88ba57d14a6f21a","date":1396971290,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/document/TestDocument#testNumericFieldAsString().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/document/TestDocument#testNumericFieldAsString().mjava","sourceNew":"  public void testNumericFieldAsString() throws Exception {\n    Document doc = new Document();\n    doc.add(new IntField(\"int\", 5, Field.Store.YES));\n    assertEquals(\"5\", doc.get(\"int\"));\n    assertNull(doc.get(\"somethingElse\"));\n    doc.add(new IntField(\"int\", 4, Field.Store.YES));\n    assertArrayEquals(new String[] { \"5\", \"4\" }, doc.getValues(\"int\"));\n    \n    Directory dir = newDirectory();\n    RandomIndexWriter iw = new RandomIndexWriter(random(), dir);\n    iw.addDocument(doc);\n    DirectoryReader ir = iw.getReader();\n    StoredDocument sdoc = ir.document(0);\n    assertEquals(\"5\", sdoc.get(\"int\"));\n    assertNull(sdoc.get(\"somethingElse\"));\n    assertArrayEquals(new String[] { \"5\", \"4\" }, sdoc.getValues(\"int\"));\n    ir.close();\n    iw.shutdown();\n    dir.close();\n  }\n\n","sourceOld":"  public void testNumericFieldAsString() throws Exception {\n    Document doc = new Document();\n    doc.add(new IntField(\"int\", 5, Field.Store.YES));\n    assertEquals(\"5\", doc.get(\"int\"));\n    assertNull(doc.get(\"somethingElse\"));\n    doc.add(new IntField(\"int\", 4, Field.Store.YES));\n    assertArrayEquals(new String[] { \"5\", \"4\" }, doc.getValues(\"int\"));\n    \n    Directory dir = newDirectory();\n    RandomIndexWriter iw = new RandomIndexWriter(random(), dir);\n    iw.addDocument(doc);\n    DirectoryReader ir = iw.getReader();\n    StoredDocument sdoc = ir.document(0);\n    assertEquals(\"5\", sdoc.get(\"int\"));\n    assertNull(sdoc.get(\"somethingElse\"));\n    assertArrayEquals(new String[] { \"5\", \"4\" }, sdoc.getValues(\"int\"));\n    ir.close();\n    iw.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d0ef034a4f10871667ae75181537775ddcf8ade4","date":1407610475,"type":3,"author":"Ryan Ernst","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/document/TestDocument#testNumericFieldAsString().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/document/TestDocument#testNumericFieldAsString().mjava","sourceNew":"  public void testNumericFieldAsString() throws Exception {\n    Document doc = new Document();\n    doc.add(new IntField(\"int\", 5, Field.Store.YES));\n    assertEquals(\"5\", doc.get(\"int\"));\n    assertNull(doc.get(\"somethingElse\"));\n    doc.add(new IntField(\"int\", 4, Field.Store.YES));\n    assertArrayEquals(new String[] { \"5\", \"4\" }, doc.getValues(\"int\"));\n    \n    Directory dir = newDirectory();\n    RandomIndexWriter iw = new RandomIndexWriter(random(), dir);\n    iw.addDocument(doc);\n    DirectoryReader ir = iw.getReader();\n    StoredDocument sdoc = ir.document(0);\n    assertEquals(\"5\", sdoc.get(\"int\"));\n    assertNull(sdoc.get(\"somethingElse\"));\n    assertArrayEquals(new String[] { \"5\", \"4\" }, sdoc.getValues(\"int\"));\n    ir.close();\n    iw.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testNumericFieldAsString() throws Exception {\n    Document doc = new Document();\n    doc.add(new IntField(\"int\", 5, Field.Store.YES));\n    assertEquals(\"5\", doc.get(\"int\"));\n    assertNull(doc.get(\"somethingElse\"));\n    doc.add(new IntField(\"int\", 4, Field.Store.YES));\n    assertArrayEquals(new String[] { \"5\", \"4\" }, doc.getValues(\"int\"));\n    \n    Directory dir = newDirectory();\n    RandomIndexWriter iw = new RandomIndexWriter(random(), dir);\n    iw.addDocument(doc);\n    DirectoryReader ir = iw.getReader();\n    StoredDocument sdoc = ir.document(0);\n    assertEquals(\"5\", sdoc.get(\"int\"));\n    assertNull(sdoc.get(\"somethingElse\"));\n    assertArrayEquals(new String[] { \"5\", \"4\" }, sdoc.getValues(\"int\"));\n    ir.close();\n    iw.shutdown();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"770342641f7b505eaa8dccdc666158bff2419109","date":1449868421,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/document/TestDocument#testNumericFieldAsString().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/document/TestDocument#testNumericFieldAsString().mjava","sourceNew":"  public void testNumericFieldAsString() throws Exception {\n    Document doc = new Document();\n    doc.add(new LegacyIntField(\"int\", 5, Field.Store.YES));\n    assertEquals(\"5\", doc.get(\"int\"));\n    assertNull(doc.get(\"somethingElse\"));\n    doc.add(new LegacyIntField(\"int\", 4, Field.Store.YES));\n    assertArrayEquals(new String[] { \"5\", \"4\" }, doc.getValues(\"int\"));\n    \n    Directory dir = newDirectory();\n    RandomIndexWriter iw = new RandomIndexWriter(random(), dir);\n    iw.addDocument(doc);\n    DirectoryReader ir = iw.getReader();\n    StoredDocument sdoc = ir.document(0);\n    assertEquals(\"5\", sdoc.get(\"int\"));\n    assertNull(sdoc.get(\"somethingElse\"));\n    assertArrayEquals(new String[] { \"5\", \"4\" }, sdoc.getValues(\"int\"));\n    ir.close();\n    iw.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testNumericFieldAsString() throws Exception {\n    Document doc = new Document();\n    doc.add(new IntField(\"int\", 5, Field.Store.YES));\n    assertEquals(\"5\", doc.get(\"int\"));\n    assertNull(doc.get(\"somethingElse\"));\n    doc.add(new IntField(\"int\", 4, Field.Store.YES));\n    assertArrayEquals(new String[] { \"5\", \"4\" }, doc.getValues(\"int\"));\n    \n    Directory dir = newDirectory();\n    RandomIndexWriter iw = new RandomIndexWriter(random(), dir);\n    iw.addDocument(doc);\n    DirectoryReader ir = iw.getReader();\n    StoredDocument sdoc = ir.document(0);\n    assertEquals(\"5\", sdoc.get(\"int\"));\n    assertNull(sdoc.get(\"somethingElse\"));\n    assertArrayEquals(new String[] { \"5\", \"4\" }, sdoc.getValues(\"int\"));\n    ir.close();\n    iw.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6654c5f3ec2e4a84ef867c82d4eec872c2372c8c","date":1453060490,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/document/TestDocument#testNumericFieldAsString().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/document/TestDocument#testNumericFieldAsString().mjava","sourceNew":"  public void testNumericFieldAsString() throws Exception {\n    Document doc = new Document();\n    doc.add(new LegacyIntField(\"int\", 5, Field.Store.YES));\n    assertEquals(\"5\", doc.get(\"int\"));\n    assertNull(doc.get(\"somethingElse\"));\n    doc.add(new LegacyIntField(\"int\", 4, Field.Store.YES));\n    assertArrayEquals(new String[] { \"5\", \"4\" }, doc.getValues(\"int\"));\n    \n    Directory dir = newDirectory();\n    RandomIndexWriter iw = new RandomIndexWriter(random(), dir);\n    iw.addDocument(doc);\n    DirectoryReader ir = iw.getReader();\n    Document sdoc = ir.document(0);\n    assertEquals(\"5\", sdoc.get(\"int\"));\n    assertNull(sdoc.get(\"somethingElse\"));\n    assertArrayEquals(new String[] { \"5\", \"4\" }, sdoc.getValues(\"int\"));\n    ir.close();\n    iw.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testNumericFieldAsString() throws Exception {\n    Document doc = new Document();\n    doc.add(new LegacyIntField(\"int\", 5, Field.Store.YES));\n    assertEquals(\"5\", doc.get(\"int\"));\n    assertNull(doc.get(\"somethingElse\"));\n    doc.add(new LegacyIntField(\"int\", 4, Field.Store.YES));\n    assertArrayEquals(new String[] { \"5\", \"4\" }, doc.getValues(\"int\"));\n    \n    Directory dir = newDirectory();\n    RandomIndexWriter iw = new RandomIndexWriter(random(), dir);\n    iw.addDocument(doc);\n    DirectoryReader ir = iw.getReader();\n    StoredDocument sdoc = ir.document(0);\n    assertEquals(\"5\", sdoc.get(\"int\"));\n    assertNull(sdoc.get(\"somethingElse\"));\n    assertArrayEquals(new String[] { \"5\", \"4\" }, sdoc.getValues(\"int\"));\n    ir.close();\n    iw.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"544309b0dc3bc728097b4aed954f876d7a5d7e85","date":1457452513,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/document/TestDocument#testNumericFieldAsString().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/document/TestDocument#testNumericFieldAsString().mjava","sourceNew":"  public void testNumericFieldAsString() throws Exception {\n    Document doc = new Document();\n    doc.add(new StoredField(\"int\", 5));\n    assertEquals(\"5\", doc.get(\"int\"));\n    assertNull(doc.get(\"somethingElse\"));\n    doc.add(new StoredField(\"int\", 4));\n    assertArrayEquals(new String[] { \"5\", \"4\" }, doc.getValues(\"int\"));\n    \n    Directory dir = newDirectory();\n    RandomIndexWriter iw = new RandomIndexWriter(random(), dir);\n    iw.addDocument(doc);\n    DirectoryReader ir = iw.getReader();\n    Document sdoc = ir.document(0);\n    assertEquals(\"5\", sdoc.get(\"int\"));\n    assertNull(sdoc.get(\"somethingElse\"));\n    assertArrayEquals(new String[] { \"5\", \"4\" }, sdoc.getValues(\"int\"));\n    ir.close();\n    iw.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testNumericFieldAsString() throws Exception {\n    Document doc = new Document();\n    doc.add(new LegacyIntField(\"int\", 5, Field.Store.YES));\n    assertEquals(\"5\", doc.get(\"int\"));\n    assertNull(doc.get(\"somethingElse\"));\n    doc.add(new LegacyIntField(\"int\", 4, Field.Store.YES));\n    assertArrayEquals(new String[] { \"5\", \"4\" }, doc.getValues(\"int\"));\n    \n    Directory dir = newDirectory();\n    RandomIndexWriter iw = new RandomIndexWriter(random(), dir);\n    iw.addDocument(doc);\n    DirectoryReader ir = iw.getReader();\n    Document sdoc = ir.document(0);\n    assertEquals(\"5\", sdoc.get(\"int\"));\n    assertNull(sdoc.get(\"somethingElse\"));\n    assertArrayEquals(new String[] { \"5\", \"4\" }, sdoc.getValues(\"int\"));\n    ir.close();\n    iw.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"544309b0dc3bc728097b4aed954f876d7a5d7e85":["6654c5f3ec2e4a84ef867c82d4eec872c2372c8c"],"d0ef034a4f10871667ae75181537775ddcf8ade4":["ae14298f4eec6d5faee6a149f88ba57d14a6f21a"],"ae14298f4eec6d5faee6a149f88ba57d14a6f21a":["621520e8943e605a0ce845cf205adcfd6194b587"],"770342641f7b505eaa8dccdc666158bff2419109":["d0ef034a4f10871667ae75181537775ddcf8ade4"],"621520e8943e605a0ce845cf205adcfd6194b587":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["544309b0dc3bc728097b4aed954f876d7a5d7e85"],"6654c5f3ec2e4a84ef867c82d4eec872c2372c8c":["770342641f7b505eaa8dccdc666158bff2419109"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["621520e8943e605a0ce845cf205adcfd6194b587"],"544309b0dc3bc728097b4aed954f876d7a5d7e85":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"d0ef034a4f10871667ae75181537775ddcf8ade4":["770342641f7b505eaa8dccdc666158bff2419109"],"ae14298f4eec6d5faee6a149f88ba57d14a6f21a":["d0ef034a4f10871667ae75181537775ddcf8ade4"],"621520e8943e605a0ce845cf205adcfd6194b587":["ae14298f4eec6d5faee6a149f88ba57d14a6f21a"],"770342641f7b505eaa8dccdc666158bff2419109":["6654c5f3ec2e4a84ef867c82d4eec872c2372c8c"],"6654c5f3ec2e4a84ef867c82d4eec872c2372c8c":["544309b0dc3bc728097b4aed954f876d7a5d7e85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}