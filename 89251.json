{"path":"solr/core/src/java/org/apache/solr/cloud/autoscaling/sim/SnapshotDistribStateManager#getSnapshot(RedactionUtils.RedactionContext).mjava","commits":[{"id":"d3d2a34ea3732f91149b31bcad82026ad85fda69","date":1567850949,"type":1,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/autoscaling/sim/SnapshotDistribStateManager#getSnapshot(RedactionUtils.RedactionContext).mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/autoscaling/sim/SnapshotDistribStateManager#getSnapshot().mjava","sourceNew":"  /**\n   * Create a snapshot of all content in this instance.\n   */\n  public Map<String, Object> getSnapshot(RedactionUtils.RedactionContext ctx) {\n    Map<String, Object> snapshot = new LinkedHashMap<>();\n    dataMap.forEach((path, vd) -> {\n      Map<String, Object> data = new HashMap<>();\n      if (vd.getData() != null && ctx != null && REDACTED.stream().anyMatch(p -> p.matcher(path).matches())) {\n        String str = new String(vd.getData(), Charset.forName(\"UTF-8\"));\n        str = RedactionUtils.redactNames(ctx.getRedactions(), str);\n        vd = new VersionedData(vd.getVersion(), str.getBytes(Charset.forName(\"UTF-8\")), vd.getMode(), vd.getOwner());\n      }\n      vd.toMap(data);\n      snapshot.put(path, data);\n    });\n    return snapshot;\n  }\n\n","sourceOld":"  /**\n   * Create a snapshot of all content in this instance.\n   */\n  public Map<String, Object> getSnapshot() {\n    Map<String, Object> snapshot = new LinkedHashMap<>();\n    dataMap.forEach((path, vd) -> {\n      Map<String, Object> data = new HashMap<>();\n      vd.toMap(data);\n      snapshot.put(path, data);\n    });\n    return snapshot;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3f504512a03d978990cbff30db0522b354e846db","date":1595247421,"type":4,"author":"Ishan Chattopadhyaya","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/core/src/java/org/apache/solr/cloud/autoscaling/sim/SnapshotDistribStateManager#getSnapshot(RedactionUtils.RedactionContext).mjava","sourceNew":null,"sourceOld":"  /**\n   * Create a snapshot of all content in this instance.\n   */\n  public Map<String, Object> getSnapshot(RedactionUtils.RedactionContext ctx) {\n    Map<String, Object> snapshot = new LinkedHashMap<>();\n    dataMap.forEach((path, vd) -> {\n      Map<String, Object> data = new HashMap<>();\n      if (vd.getData() != null && ctx != null && REDACTED.stream().anyMatch(p -> p.matcher(path).matches())) {\n        String str = new String(vd.getData(), Charset.forName(\"UTF-8\"));\n        str = RedactionUtils.redactNames(ctx.getRedactions(), str);\n        vd = new VersionedData(vd.getVersion(), str.getBytes(Charset.forName(\"UTF-8\")), vd.getMode(), vd.getOwner());\n      }\n      vd.toMap(data);\n      snapshot.put(path, data);\n    });\n    return snapshot;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"d3d2a34ea3732f91149b31bcad82026ad85fda69":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"3f504512a03d978990cbff30db0522b354e846db":["d3d2a34ea3732f91149b31bcad82026ad85fda69"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3f504512a03d978990cbff30db0522b354e846db"]},"commit2Childs":{"d3d2a34ea3732f91149b31bcad82026ad85fda69":["3f504512a03d978990cbff30db0522b354e846db"],"3f504512a03d978990cbff30db0522b354e846db":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["d3d2a34ea3732f91149b31bcad82026ad85fda69"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}