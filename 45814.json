{"path":"lucene/core/src/java/org/apache/lucene/geo/Polygon2D#relateTriangle(double,double,double,double,double,double).mjava","commits":[{"id":"4312aa12218419d320e0966c3f3e72deb359afaa","date":1533146016,"type":0,"author":"Nicholas Knize","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/geo/Polygon2D#relateTriangle(double,double,double,double,double,double).mjava","pathOld":"/dev/null","sourceNew":"  /** Returns relation to the provided triangle */\n  public Relation relateTriangle(double ax, double ay, double bx, double by, double cx, double cy) {\n    // compute bounding box of triangle\n    double minLat = StrictMath.min(StrictMath.min(ay, by), cy);\n    double minLon = StrictMath.min(StrictMath.min(ax, bx), cx);\n    double maxLat = StrictMath.max(StrictMath.max(ay, by), cy);\n    double maxLon = StrictMath.max(StrictMath.max(ax, bx), cx);\n    if (minLat <= maxY && minLon <= maxX) {\n      Relation relation = componentRelateTriangle(ax, ay, bx, by, cx, cy);\n      if (relation != Relation.CELL_OUTSIDE_QUERY) {\n        return relation;\n      }\n      if (left != null) {\n        relation = left.relateTriangle(ax, ay, bx, by, cx, cy);\n        if (relation != Relation.CELL_OUTSIDE_QUERY) {\n          return relation;\n        }\n      }\n      if (right != null && ((splitX == false && maxLat >= this.minLat) || (splitX && maxLon >= this.minLon))) {\n        relation = right.relateTriangle(ax, ay, bx, by, cx, cy);\n        if (relation != Relation.CELL_OUTSIDE_QUERY) {\n          return relation;\n        }\n      }\n    }\n    return Relation.CELL_OUTSIDE_QUERY;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e4fccad460342b1af30cb328cc8297751a218d78","date":1541177339,"type":5,"author":"Nicholas Knize","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/geo/EdgeTree#relateTriangle(double,double,double,double,double,double).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/geo/Polygon2D#relateTriangle(double,double,double,double,double,double).mjava","sourceNew":"  /** Returns relation to the provided triangle */\n  public Relation relateTriangle(double ax, double ay, double bx, double by, double cx, double cy) {\n    // compute bounding box of triangle\n    double minLat = StrictMath.min(StrictMath.min(ay, by), cy);\n    double minLon = StrictMath.min(StrictMath.min(ax, bx), cx);\n    double maxLat = StrictMath.max(StrictMath.max(ay, by), cy);\n    double maxLon = StrictMath.max(StrictMath.max(ax, bx), cx);\n    if (minLat <= maxY && minLon <= maxX) {\n      Relation relation = internalComponentRelateTriangle(ax, ay, bx, by, cx, cy);\n      if (relation != Relation.CELL_OUTSIDE_QUERY) {\n        return relation;\n      }\n      if (left != null) {\n        relation = left.relateTriangle(ax, ay, bx, by, cx, cy);\n        if (relation != Relation.CELL_OUTSIDE_QUERY) {\n          return relation;\n        }\n      }\n      if (right != null && ((splitX == false && maxLat >= this.minLat) || (splitX && maxLon >= this.minLon))) {\n        relation = right.relateTriangle(ax, ay, bx, by, cx, cy);\n        if (relation != Relation.CELL_OUTSIDE_QUERY) {\n          return relation;\n        }\n      }\n    }\n    return Relation.CELL_OUTSIDE_QUERY;\n  }\n\n","sourceOld":"  /** Returns relation to the provided triangle */\n  public Relation relateTriangle(double ax, double ay, double bx, double by, double cx, double cy) {\n    // compute bounding box of triangle\n    double minLat = StrictMath.min(StrictMath.min(ay, by), cy);\n    double minLon = StrictMath.min(StrictMath.min(ax, bx), cx);\n    double maxLat = StrictMath.max(StrictMath.max(ay, by), cy);\n    double maxLon = StrictMath.max(StrictMath.max(ax, bx), cx);\n    if (minLat <= maxY && minLon <= maxX) {\n      Relation relation = componentRelateTriangle(ax, ay, bx, by, cx, cy);\n      if (relation != Relation.CELL_OUTSIDE_QUERY) {\n        return relation;\n      }\n      if (left != null) {\n        relation = left.relateTriangle(ax, ay, bx, by, cx, cy);\n        if (relation != Relation.CELL_OUTSIDE_QUERY) {\n          return relation;\n        }\n      }\n      if (right != null && ((splitX == false && maxLat >= this.minLat) || (splitX && maxLon >= this.minLon))) {\n        relation = right.relateTriangle(ax, ay, bx, by, cx, cy);\n        if (relation != Relation.CELL_OUTSIDE_QUERY) {\n          return relation;\n        }\n      }\n    }\n    return Relation.CELL_OUTSIDE_QUERY;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"4312aa12218419d320e0966c3f3e72deb359afaa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"e4fccad460342b1af30cb328cc8297751a218d78":["4312aa12218419d320e0966c3f3e72deb359afaa"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["e4fccad460342b1af30cb328cc8297751a218d78"]},"commit2Childs":{"4312aa12218419d320e0966c3f3e72deb359afaa":["e4fccad460342b1af30cb328cc8297751a218d78"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["4312aa12218419d320e0966c3f3e72deb359afaa"],"e4fccad460342b1af30cb328cc8297751a218d78":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}