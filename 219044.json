{"path":"src/test/org/apache/lucene/index/TestIndexWriter#testOtherFiles().mjava","commits":[{"id":"d54c7739bfe85d68f0352823cd70c10c619fad38","date":1228496593,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"src/test/org/apache/lucene/index/TestIndexWriter#testOtherFiles().mjava","pathOld":"/dev/null","sourceNew":"  public void testOtherFiles() throws Throwable {\n    File indexDir = new File(System.getProperty(\"tempDir\"), \"otherfiles\");\n    Directory dir = new FSDirectory(indexDir, null);\n    try {\n      // Create my own random file:\n\n      IndexOutput out = dir.createOutput(\"myrandomfile\");\n      out.writeByte((byte) 42);\n      out.close();\n\n      new IndexWriter(dir, new WhitespaceAnalyzer(), true, IndexWriter.MaxFieldLength.LIMITED).close();\n\n      assertTrue(dir.fileExists(\"myrandomfile\"));\n\n      // Make sure this does not copy myrandomfile:\n      Directory dir2 = new RAMDirectory(dir);\n      assertTrue(!dir2.fileExists(\"myrandomfile\"));\n\n    } finally {\n      dir.close();\n      _TestUtil.rmDir(indexDir);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3215ae1377fc1ca1790921d75dd39cb764743b85","date":1237371771,"type":5,"author":"Michael McCandless","isMerge":false,"pathNew":"src/test/org/apache/lucene/index/TestIndexWriter#xxxtestOtherFiles().mjava","pathOld":"src/test/org/apache/lucene/index/TestIndexWriter#testOtherFiles().mjava","sourceNew":"  public void xxxtestOtherFiles() throws Throwable {\n    File indexDir = new File(System.getProperty(\"tempDir\"), \"otherfiles\");\n    Directory dir = new FSDirectory(indexDir, null);\n    try {\n      // Create my own random file:\n\n      IndexOutput out = dir.createOutput(\"myrandomfile\");\n      out.writeByte((byte) 42);\n      out.close();\n\n      new IndexWriter(dir, new WhitespaceAnalyzer(), true, IndexWriter.MaxFieldLength.LIMITED).close();\n\n      assertTrue(dir.fileExists(\"myrandomfile\"));\n\n      // Make sure this does not copy myrandomfile:\n      Directory dir2 = new RAMDirectory(dir);\n      assertTrue(!dir2.fileExists(\"myrandomfile\"));\n\n    } finally {\n      dir.close();\n      _TestUtil.rmDir(indexDir);\n    }\n  }\n\n","sourceOld":"  public void testOtherFiles() throws Throwable {\n    File indexDir = new File(System.getProperty(\"tempDir\"), \"otherfiles\");\n    Directory dir = new FSDirectory(indexDir, null);\n    try {\n      // Create my own random file:\n\n      IndexOutput out = dir.createOutput(\"myrandomfile\");\n      out.writeByte((byte) 42);\n      out.close();\n\n      new IndexWriter(dir, new WhitespaceAnalyzer(), true, IndexWriter.MaxFieldLength.LIMITED).close();\n\n      assertTrue(dir.fileExists(\"myrandomfile\"));\n\n      // Make sure this does not copy myrandomfile:\n      Directory dir2 = new RAMDirectory(dir);\n      assertTrue(!dir2.fileExists(\"myrandomfile\"));\n\n    } finally {\n      dir.close();\n      _TestUtil.rmDir(indexDir);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"09c482d1e63332617181729a225b215c452d8a79","date":1237396006,"type":1,"author":"Michael McCandless","isMerge":false,"pathNew":"src/test/org/apache/lucene/index/TestIndexWriter#testOtherFiles().mjava","pathOld":"src/test/org/apache/lucene/index/TestIndexWriter#xxxtestOtherFiles().mjava","sourceNew":"  public void testOtherFiles() throws Throwable {\n    File indexDir = new File(System.getProperty(\"tempDir\"), \"otherfiles\");\n    Directory dir = new FSDirectory(indexDir, null);\n    try {\n      // Create my own random file:\n\n      IndexOutput out = dir.createOutput(\"myrandomfile\");\n      out.writeByte((byte) 42);\n      out.close();\n\n      new IndexWriter(dir, new WhitespaceAnalyzer(), true, IndexWriter.MaxFieldLength.LIMITED).close();\n\n      assertTrue(dir.fileExists(\"myrandomfile\"));\n\n      // Make sure this does not copy myrandomfile:\n      Directory dir2 = new RAMDirectory(dir);\n      assertTrue(!dir2.fileExists(\"myrandomfile\"));\n\n    } finally {\n      dir.close();\n      _TestUtil.rmDir(indexDir);\n    }\n  }\n\n","sourceOld":"  public void xxxtestOtherFiles() throws Throwable {\n    File indexDir = new File(System.getProperty(\"tempDir\"), \"otherfiles\");\n    Directory dir = new FSDirectory(indexDir, null);\n    try {\n      // Create my own random file:\n\n      IndexOutput out = dir.createOutput(\"myrandomfile\");\n      out.writeByte((byte) 42);\n      out.close();\n\n      new IndexWriter(dir, new WhitespaceAnalyzer(), true, IndexWriter.MaxFieldLength.LIMITED).close();\n\n      assertTrue(dir.fileExists(\"myrandomfile\"));\n\n      // Make sure this does not copy myrandomfile:\n      Directory dir2 = new RAMDirectory(dir);\n      assertTrue(!dir2.fileExists(\"myrandomfile\"));\n\n    } finally {\n      dir.close();\n      _TestUtil.rmDir(indexDir);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"416d032f85b7ea8efc272f86ba46bc460589aff7","date":1243881250,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/test/org/apache/lucene/index/TestIndexWriter#testOtherFiles().mjava","pathOld":"src/test/org/apache/lucene/index/TestIndexWriter#testOtherFiles().mjava","sourceNew":"  public void testOtherFiles() throws Throwable {\n    File indexDir = new File(System.getProperty(\"tempDir\"), \"otherfiles\");\n    Directory dir = FSDirectory.open(indexDir);\n    try {\n      // Create my own random file:\n\n      IndexOutput out = dir.createOutput(\"myrandomfile\");\n      out.writeByte((byte) 42);\n      out.close();\n\n      new IndexWriter(dir, new WhitespaceAnalyzer(), true, IndexWriter.MaxFieldLength.LIMITED).close();\n\n      assertTrue(dir.fileExists(\"myrandomfile\"));\n\n      // Make sure this does not copy myrandomfile:\n      Directory dir2 = new RAMDirectory(dir);\n      assertTrue(!dir2.fileExists(\"myrandomfile\"));\n\n    } finally {\n      dir.close();\n      _TestUtil.rmDir(indexDir);\n    }\n  }\n\n","sourceOld":"  public void testOtherFiles() throws Throwable {\n    File indexDir = new File(System.getProperty(\"tempDir\"), \"otherfiles\");\n    Directory dir = new FSDirectory(indexDir, null);\n    try {\n      // Create my own random file:\n\n      IndexOutput out = dir.createOutput(\"myrandomfile\");\n      out.writeByte((byte) 42);\n      out.close();\n\n      new IndexWriter(dir, new WhitespaceAnalyzer(), true, IndexWriter.MaxFieldLength.LIMITED).close();\n\n      assertTrue(dir.fileExists(\"myrandomfile\"));\n\n      // Make sure this does not copy myrandomfile:\n      Directory dir2 = new RAMDirectory(dir);\n      assertTrue(!dir2.fileExists(\"myrandomfile\"));\n\n    } finally {\n      dir.close();\n      _TestUtil.rmDir(indexDir);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fe0932c1d340f83fb0a611e5829b3046a1cc1152","date":1264946739,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/test/org/apache/lucene/index/TestIndexWriter#testOtherFiles().mjava","pathOld":"src/test/org/apache/lucene/index/TestIndexWriter#testOtherFiles().mjava","sourceNew":"  public void testOtherFiles() throws Throwable {\n    File indexDir = new File(System.getProperty(\"tempDir\"), \"otherfiles\");\n    Directory dir = FSDirectory.open(indexDir);\n    try {\n      // Create my own random file:\n\n      IndexOutput out = dir.createOutput(\"myrandomfile\");\n      out.writeByte((byte) 42);\n      out.close();\n\n      new IndexWriter(dir, new WhitespaceAnalyzer(Version.LUCENE_CURRENT), true, IndexWriter.MaxFieldLength.LIMITED).close();\n\n      assertTrue(dir.fileExists(\"myrandomfile\"));\n\n      // Make sure this does not copy myrandomfile:\n      Directory dir2 = new RAMDirectory(dir);\n      assertTrue(!dir2.fileExists(\"myrandomfile\"));\n\n    } finally {\n      dir.close();\n      _TestUtil.rmDir(indexDir);\n    }\n  }\n\n","sourceOld":"  public void testOtherFiles() throws Throwable {\n    File indexDir = new File(System.getProperty(\"tempDir\"), \"otherfiles\");\n    Directory dir = FSDirectory.open(indexDir);\n    try {\n      // Create my own random file:\n\n      IndexOutput out = dir.createOutput(\"myrandomfile\");\n      out.writeByte((byte) 42);\n      out.close();\n\n      new IndexWriter(dir, new WhitespaceAnalyzer(), true, IndexWriter.MaxFieldLength.LIMITED).close();\n\n      assertTrue(dir.fileExists(\"myrandomfile\"));\n\n      // Make sure this does not copy myrandomfile:\n      Directory dir2 = new RAMDirectory(dir);\n      assertTrue(!dir2.fileExists(\"myrandomfile\"));\n\n    } finally {\n      dir.close();\n      _TestUtil.rmDir(indexDir);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"55f083e91bb056b57de136da1dfc3b9b6ecc4ef6","date":1265808957,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/test/org/apache/lucene/index/TestIndexWriter#testOtherFiles().mjava","pathOld":"src/test/org/apache/lucene/index/TestIndexWriter#testOtherFiles().mjava","sourceNew":"  public void testOtherFiles() throws Throwable {\n    File indexDir = new File(System.getProperty(\"tempDir\"), \"otherfiles\");\n    Directory dir = FSDirectory.open(indexDir);\n    try {\n      // Create my own random file:\n\n      IndexOutput out = dir.createOutput(\"myrandomfile\");\n      out.writeByte((byte) 42);\n      out.close();\n\n      new IndexWriter(dir, new WhitespaceAnalyzer(TEST_VERSION_CURRENT), true, IndexWriter.MaxFieldLength.LIMITED).close();\n\n      assertTrue(dir.fileExists(\"myrandomfile\"));\n\n      // Make sure this does not copy myrandomfile:\n      Directory dir2 = new RAMDirectory(dir);\n      assertTrue(!dir2.fileExists(\"myrandomfile\"));\n\n    } finally {\n      dir.close();\n      _TestUtil.rmDir(indexDir);\n    }\n  }\n\n","sourceOld":"  public void testOtherFiles() throws Throwable {\n    File indexDir = new File(System.getProperty(\"tempDir\"), \"otherfiles\");\n    Directory dir = FSDirectory.open(indexDir);\n    try {\n      // Create my own random file:\n\n      IndexOutput out = dir.createOutput(\"myrandomfile\");\n      out.writeByte((byte) 42);\n      out.close();\n\n      new IndexWriter(dir, new WhitespaceAnalyzer(Version.LUCENE_CURRENT), true, IndexWriter.MaxFieldLength.LIMITED).close();\n\n      assertTrue(dir.fileExists(\"myrandomfile\"));\n\n      // Make sure this does not copy myrandomfile:\n      Directory dir2 = new RAMDirectory(dir);\n      assertTrue(!dir2.fileExists(\"myrandomfile\"));\n\n    } finally {\n      dir.close();\n      _TestUtil.rmDir(indexDir);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1cedb00d2dd44640194401179358a2e3ba6051bf","date":1268243626,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/test/org/apache/lucene/index/TestIndexWriter#testOtherFiles().mjava","pathOld":"src/test/org/apache/lucene/index/TestIndexWriter#testOtherFiles().mjava","sourceNew":"  public void testOtherFiles() throws Throwable {\n    File indexDir = new File(System.getProperty(\"tempDir\"), \"otherfiles\");\n    Directory dir = FSDirectory.open(indexDir);\n    try {\n      // Create my own random file:\n\n      IndexOutput out = dir.createOutput(\"myrandomfile\");\n      out.writeByte((byte) 42);\n      out.close();\n\n      new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT)).close();\n\n      assertTrue(dir.fileExists(\"myrandomfile\"));\n\n      // Make sure this does not copy myrandomfile:\n      Directory dir2 = new RAMDirectory(dir);\n      assertTrue(!dir2.fileExists(\"myrandomfile\"));\n\n    } finally {\n      dir.close();\n      _TestUtil.rmDir(indexDir);\n    }\n  }\n\n","sourceOld":"  public void testOtherFiles() throws Throwable {\n    File indexDir = new File(System.getProperty(\"tempDir\"), \"otherfiles\");\n    Directory dir = FSDirectory.open(indexDir);\n    try {\n      // Create my own random file:\n\n      IndexOutput out = dir.createOutput(\"myrandomfile\");\n      out.writeByte((byte) 42);\n      out.close();\n\n      new IndexWriter(dir, new WhitespaceAnalyzer(TEST_VERSION_CURRENT), true, IndexWriter.MaxFieldLength.LIMITED).close();\n\n      assertTrue(dir.fileExists(\"myrandomfile\"));\n\n      // Make sure this does not copy myrandomfile:\n      Directory dir2 = new RAMDirectory(dir);\n      assertTrue(!dir2.fileExists(\"myrandomfile\"));\n\n    } finally {\n      dir.close();\n      _TestUtil.rmDir(indexDir);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e52fea2c4081a1e552b98506691990be59503168","date":1268250331,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/test/org/apache/lucene/index/TestIndexWriter#testOtherFiles().mjava","pathOld":"src/test/org/apache/lucene/index/TestIndexWriter#testOtherFiles().mjava","sourceNew":"  public void testOtherFiles() throws Throwable {\n    File indexDir = new File(System.getProperty(\"tempDir\"), \"otherfiles\");\n    Directory dir = FSDirectory.open(indexDir);\n    try {\n      // Create my own random file:\n\n      IndexOutput out = dir.createOutput(\"myrandomfile\");\n      out.writeByte((byte) 42);\n      out.close();\n\n      new IndexWriter(dir, new WhitespaceAnalyzer(TEST_VERSION_CURRENT), true, IndexWriter.MaxFieldLength.LIMITED).close();\n\n      assertTrue(dir.fileExists(\"myrandomfile\"));\n\n      // Make sure this does not copy myrandomfile:\n      Directory dir2 = new RAMDirectory(dir);\n      assertTrue(!dir2.fileExists(\"myrandomfile\"));\n\n    } finally {\n      dir.close();\n      _TestUtil.rmDir(indexDir);\n    }\n  }\n\n","sourceOld":"  public void testOtherFiles() throws Throwable {\n    File indexDir = new File(System.getProperty(\"tempDir\"), \"otherfiles\");\n    Directory dir = FSDirectory.open(indexDir);\n    try {\n      // Create my own random file:\n\n      IndexOutput out = dir.createOutput(\"myrandomfile\");\n      out.writeByte((byte) 42);\n      out.close();\n\n      new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT)).close();\n\n      assertTrue(dir.fileExists(\"myrandomfile\"));\n\n      // Make sure this does not copy myrandomfile:\n      Directory dir2 = new RAMDirectory(dir);\n      assertTrue(!dir2.fileExists(\"myrandomfile\"));\n\n    } finally {\n      dir.close();\n      _TestUtil.rmDir(indexDir);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"84080a7d7dbdaa3e6a4a1c9f1bb6221be40f47e8","date":1268494368,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/test/org/apache/lucene/index/TestIndexWriter#testOtherFiles().mjava","pathOld":"src/test/org/apache/lucene/index/TestIndexWriter#testOtherFiles().mjava","sourceNew":"  public void testOtherFiles() throws Throwable {\n    File indexDir = new File(System.getProperty(\"tempDir\"), \"otherfiles\");\n    Directory dir = FSDirectory.open(indexDir);\n    try {\n      // Create my own random file:\n\n      IndexOutput out = dir.createOutput(\"myrandomfile\");\n      out.writeByte((byte) 42);\n      out.close();\n\n      new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new WhitespaceAnalyzer(TEST_VERSION_CURRENT))).close();\n\n      assertTrue(dir.fileExists(\"myrandomfile\"));\n\n      // Make sure this does not copy myrandomfile:\n      Directory dir2 = new RAMDirectory(dir);\n      assertTrue(!dir2.fileExists(\"myrandomfile\"));\n\n    } finally {\n      dir.close();\n      _TestUtil.rmDir(indexDir);\n    }\n  }\n\n","sourceOld":"  public void testOtherFiles() throws Throwable {\n    File indexDir = new File(System.getProperty(\"tempDir\"), \"otherfiles\");\n    Directory dir = FSDirectory.open(indexDir);\n    try {\n      // Create my own random file:\n\n      IndexOutput out = dir.createOutput(\"myrandomfile\");\n      out.writeByte((byte) 42);\n      out.close();\n\n      new IndexWriter(dir, new WhitespaceAnalyzer(TEST_VERSION_CURRENT), true, IndexWriter.MaxFieldLength.LIMITED).close();\n\n      assertTrue(dir.fileExists(\"myrandomfile\"));\n\n      // Make sure this does not copy myrandomfile:\n      Directory dir2 = new RAMDirectory(dir);\n      assertTrue(!dir2.fileExists(\"myrandomfile\"));\n\n    } finally {\n      dir.close();\n      _TestUtil.rmDir(indexDir);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1d16275d75dfe0b780ed62df4c811d083187c71a","date":1268583591,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/test/org/apache/lucene/index/TestIndexWriter#testOtherFiles().mjava","pathOld":"src/test/org/apache/lucene/index/TestIndexWriter#testOtherFiles().mjava","sourceNew":"  public void testOtherFiles() throws Throwable {\n    File indexDir = new File(TEMP_DIR, \"otherfiles\");\n    Directory dir = FSDirectory.open(indexDir);\n    try {\n      // Create my own random file:\n\n      IndexOutput out = dir.createOutput(\"myrandomfile\");\n      out.writeByte((byte) 42);\n      out.close();\n\n      new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new WhitespaceAnalyzer(TEST_VERSION_CURRENT))).close();\n\n      assertTrue(dir.fileExists(\"myrandomfile\"));\n\n      // Make sure this does not copy myrandomfile:\n      Directory dir2 = new RAMDirectory(dir);\n      assertTrue(!dir2.fileExists(\"myrandomfile\"));\n\n    } finally {\n      dir.close();\n      _TestUtil.rmDir(indexDir);\n    }\n  }\n\n","sourceOld":"  public void testOtherFiles() throws Throwable {\n    File indexDir = new File(System.getProperty(\"tempDir\"), \"otherfiles\");\n    Directory dir = FSDirectory.open(indexDir);\n    try {\n      // Create my own random file:\n\n      IndexOutput out = dir.createOutput(\"myrandomfile\");\n      out.writeByte((byte) 42);\n      out.close();\n\n      new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new WhitespaceAnalyzer(TEST_VERSION_CURRENT))).close();\n\n      assertTrue(dir.fileExists(\"myrandomfile\"));\n\n      // Make sure this does not copy myrandomfile:\n      Directory dir2 = new RAMDirectory(dir);\n      assertTrue(!dir2.fileExists(\"myrandomfile\"));\n\n    } finally {\n      dir.close();\n      _TestUtil.rmDir(indexDir);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexWriter#testOtherFiles().mjava","pathOld":"src/test/org/apache/lucene/index/TestIndexWriter#testOtherFiles().mjava","sourceNew":"  public void testOtherFiles() throws Throwable {\n    File indexDir = new File(TEMP_DIR, \"otherfiles\");\n    Directory dir = FSDirectory.open(indexDir);\n    try {\n      // Create my own random file:\n\n      IndexOutput out = dir.createOutput(\"myrandomfile\");\n      out.writeByte((byte) 42);\n      out.close();\n\n      new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new WhitespaceAnalyzer(TEST_VERSION_CURRENT))).close();\n\n      assertTrue(dir.fileExists(\"myrandomfile\"));\n\n      // Make sure this does not copy myrandomfile:\n      Directory dir2 = new RAMDirectory(dir);\n      assertTrue(!dir2.fileExists(\"myrandomfile\"));\n\n    } finally {\n      dir.close();\n      _TestUtil.rmDir(indexDir);\n    }\n  }\n\n","sourceOld":"  public void testOtherFiles() throws Throwable {\n    File indexDir = new File(TEMP_DIR, \"otherfiles\");\n    Directory dir = FSDirectory.open(indexDir);\n    try {\n      // Create my own random file:\n\n      IndexOutput out = dir.createOutput(\"myrandomfile\");\n      out.writeByte((byte) 42);\n      out.close();\n\n      new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new WhitespaceAnalyzer(TEST_VERSION_CURRENT))).close();\n\n      assertTrue(dir.fileExists(\"myrandomfile\"));\n\n      // Make sure this does not copy myrandomfile:\n      Directory dir2 = new RAMDirectory(dir);\n      assertTrue(!dir2.fileExists(\"myrandomfile\"));\n\n    } finally {\n      dir.close();\n      _TestUtil.rmDir(indexDir);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"55f083e91bb056b57de136da1dfc3b9b6ecc4ef6":["fe0932c1d340f83fb0a611e5829b3046a1cc1152"],"3215ae1377fc1ca1790921d75dd39cb764743b85":["d54c7739bfe85d68f0352823cd70c10c619fad38"],"1cedb00d2dd44640194401179358a2e3ba6051bf":["55f083e91bb056b57de136da1dfc3b9b6ecc4ef6"],"e52fea2c4081a1e552b98506691990be59503168":["1cedb00d2dd44640194401179358a2e3ba6051bf"],"416d032f85b7ea8efc272f86ba46bc460589aff7":["09c482d1e63332617181729a225b215c452d8a79"],"d54c7739bfe85d68f0352823cd70c10c619fad38":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"84080a7d7dbdaa3e6a4a1c9f1bb6221be40f47e8":["e52fea2c4081a1e552b98506691990be59503168"],"fe0932c1d340f83fb0a611e5829b3046a1cc1152":["416d032f85b7ea8efc272f86ba46bc460589aff7"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"1d16275d75dfe0b780ed62df4c811d083187c71a":["84080a7d7dbdaa3e6a4a1c9f1bb6221be40f47e8"],"09c482d1e63332617181729a225b215c452d8a79":["3215ae1377fc1ca1790921d75dd39cb764743b85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["1d16275d75dfe0b780ed62df4c811d083187c71a"]},"commit2Childs":{"55f083e91bb056b57de136da1dfc3b9b6ecc4ef6":["1cedb00d2dd44640194401179358a2e3ba6051bf"],"3215ae1377fc1ca1790921d75dd39cb764743b85":["09c482d1e63332617181729a225b215c452d8a79"],"1cedb00d2dd44640194401179358a2e3ba6051bf":["e52fea2c4081a1e552b98506691990be59503168"],"e52fea2c4081a1e552b98506691990be59503168":["84080a7d7dbdaa3e6a4a1c9f1bb6221be40f47e8"],"416d032f85b7ea8efc272f86ba46bc460589aff7":["fe0932c1d340f83fb0a611e5829b3046a1cc1152"],"d54c7739bfe85d68f0352823cd70c10c619fad38":["3215ae1377fc1ca1790921d75dd39cb764743b85"],"84080a7d7dbdaa3e6a4a1c9f1bb6221be40f47e8":["1d16275d75dfe0b780ed62df4c811d083187c71a"],"fe0932c1d340f83fb0a611e5829b3046a1cc1152":["55f083e91bb056b57de136da1dfc3b9b6ecc4ef6"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["d54c7739bfe85d68f0352823cd70c10c619fad38"],"1d16275d75dfe0b780ed62df4c811d083187c71a":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"09c482d1e63332617181729a225b215c452d8a79":["416d032f85b7ea8efc272f86ba46bc460589aff7"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}