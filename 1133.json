{"path":"solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/TestVariableResolver#dateNamespaceWithExpr().mjava","commits":[{"id":"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91","date":1306767085,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/TestVariableResolver#dateNamespaceWithExpr().mjava","pathOld":"solr/contrib/dataimporthandler/src/test/java/org/apache/solr/handler/dataimport/TestVariableResolver#dateNamespaceWithExpr().mjava","sourceNew":"  @Test\n  public void dateNamespaceWithExpr() throws Exception {\n    VariableResolverImpl vri = new VariableResolverImpl();\n    ContextImpl context = new ContextImpl(null, vri, null, Context.FULL_DUMP, Collections.EMPTY_MAP, null, null);\n    Context.CURRENT_CONTEXT.set(context);\n    try {\n      vri.addNamespace(\"dataimporter.functions\", EvaluatorBag\n              .getFunctionsNamespace(Collections.EMPTY_LIST,null));\n\n      SimpleDateFormat format = new SimpleDateFormat(\"yyyy-MM-dd'T'HH:mm:ss'Z'\");\n      format.setTimeZone(TimeZone.getTimeZone(\"UTC\"));\n      resetEvaluatorBagDateMathParser();\n      DateMathParser dmp = new DateMathParser(TimeZone.getDefault(), Locale.getDefault());\n\n      String s = vri.replaceTokens(\"${dataimporter.functions.formatDate('NOW/DAY','yyyy-MM-dd HH:mm')}\");\n      assertEquals(new SimpleDateFormat(\"yyyy-MM-dd HH:mm\").format(dmp.parseMath(\"/DAY\")), s);\n    } finally {\n      Context.CURRENT_CONTEXT.remove();\n    }\n  }\n\n","sourceOld":"  @Test\n  public void dateNamespaceWithExpr() throws Exception {\n    VariableResolverImpl vri = new VariableResolverImpl();\n    ContextImpl context = new ContextImpl(null, vri, null, Context.FULL_DUMP, Collections.EMPTY_MAP, null, null);\n    Context.CURRENT_CONTEXT.set(context);\n    try {\n      vri.addNamespace(\"dataimporter.functions\", EvaluatorBag\n              .getFunctionsNamespace(Collections.EMPTY_LIST,null));\n\n      SimpleDateFormat format = new SimpleDateFormat(\"yyyy-MM-dd'T'HH:mm:ss'Z'\");\n      format.setTimeZone(TimeZone.getTimeZone(\"UTC\"));\n      resetEvaluatorBagDateMathParser();\n      DateMathParser dmp = new DateMathParser(TimeZone.getDefault(), Locale.getDefault());\n\n      String s = vri.replaceTokens(\"${dataimporter.functions.formatDate('NOW/DAY','yyyy-MM-dd HH:mm')}\");\n      assertEquals(new SimpleDateFormat(\"yyyy-MM-dd HH:mm\").format(dmp.parseMath(\"/DAY\")), s);\n    } finally {\n      Context.CURRENT_CONTEXT.remove();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/TestVariableResolver#dateNamespaceWithExpr().mjava","pathOld":"solr/contrib/dataimporthandler/src/test/java/org/apache/solr/handler/dataimport/TestVariableResolver#dateNamespaceWithExpr().mjava","sourceNew":"  @Test\n  public void dateNamespaceWithExpr() throws Exception {\n    VariableResolverImpl vri = new VariableResolverImpl();\n    ContextImpl context = new ContextImpl(null, vri, null, Context.FULL_DUMP, Collections.EMPTY_MAP, null, null);\n    Context.CURRENT_CONTEXT.set(context);\n    try {\n      vri.addNamespace(\"dataimporter.functions\", EvaluatorBag\n              .getFunctionsNamespace(Collections.EMPTY_LIST,null));\n\n      SimpleDateFormat format = new SimpleDateFormat(\"yyyy-MM-dd'T'HH:mm:ss'Z'\");\n      format.setTimeZone(TimeZone.getTimeZone(\"UTC\"));\n      resetEvaluatorBagDateMathParser();\n      DateMathParser dmp = new DateMathParser(TimeZone.getDefault(), Locale.getDefault());\n\n      String s = vri.replaceTokens(\"${dataimporter.functions.formatDate('NOW/DAY','yyyy-MM-dd HH:mm')}\");\n      assertEquals(new SimpleDateFormat(\"yyyy-MM-dd HH:mm\").format(dmp.parseMath(\"/DAY\")), s);\n    } finally {\n      Context.CURRENT_CONTEXT.remove();\n    }\n  }\n\n","sourceOld":"  @Test\n  public void dateNamespaceWithExpr() throws Exception {\n    VariableResolverImpl vri = new VariableResolverImpl();\n    ContextImpl context = new ContextImpl(null, vri, null, Context.FULL_DUMP, Collections.EMPTY_MAP, null, null);\n    Context.CURRENT_CONTEXT.set(context);\n    try {\n      vri.addNamespace(\"dataimporter.functions\", EvaluatorBag\n              .getFunctionsNamespace(Collections.EMPTY_LIST,null));\n\n      SimpleDateFormat format = new SimpleDateFormat(\"yyyy-MM-dd'T'HH:mm:ss'Z'\");\n      format.setTimeZone(TimeZone.getTimeZone(\"UTC\"));\n      resetEvaluatorBagDateMathParser();\n      DateMathParser dmp = new DateMathParser(TimeZone.getDefault(), Locale.getDefault());\n\n      String s = vri.replaceTokens(\"${dataimporter.functions.formatDate('NOW/DAY','yyyy-MM-dd HH:mm')}\");\n      assertEquals(new SimpleDateFormat(\"yyyy-MM-dd HH:mm\").format(dmp.parseMath(\"/DAY\")), s);\n    } finally {\n      Context.CURRENT_CONTEXT.remove();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4b84e23a1c994ea309896dd9424563e0092f3607","date":1332774278,"type":3,"author":"James Dyer","isMerge":false,"pathNew":"solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/TestVariableResolver#dateNamespaceWithExpr().mjava","pathOld":"solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/TestVariableResolver#dateNamespaceWithExpr().mjava","sourceNew":"  @Test\n  public void dateNamespaceWithExpr() throws Exception {\n    VariableResolverImpl vri = new VariableResolverImpl();\n    vri.addNamespace(\"dataimporter.functions\", EvaluatorBag\n            .getFunctionsNamespace(Collections.EMPTY_LIST,null, vri));\n    SimpleDateFormat format = new SimpleDateFormat(\"yyyy-MM-dd'T'HH:mm:ss'Z'\");\n    format.setTimeZone(TimeZone.getTimeZone(\"UTC\"));\n    resetEvaluatorBagDateMathParser();\n    DateMathParser dmp = new DateMathParser(TimeZone.getDefault(), Locale.getDefault());\n\n    String s = vri.replaceTokens(\"${dataimporter.functions.formatDate('NOW/DAY','yyyy-MM-dd HH:mm')}\");\n    assertEquals(new SimpleDateFormat(\"yyyy-MM-dd HH:mm\").format(dmp.parseMath(\"/DAY\")), s);    \n  }\n\n","sourceOld":"  @Test\n  public void dateNamespaceWithExpr() throws Exception {\n    VariableResolverImpl vri = new VariableResolverImpl();\n    ContextImpl context = new ContextImpl(null, vri, null, Context.FULL_DUMP, Collections.EMPTY_MAP, null, null);\n    Context.CURRENT_CONTEXT.set(context);\n    try {\n      vri.addNamespace(\"dataimporter.functions\", EvaluatorBag\n              .getFunctionsNamespace(Collections.EMPTY_LIST,null));\n\n      SimpleDateFormat format = new SimpleDateFormat(\"yyyy-MM-dd'T'HH:mm:ss'Z'\");\n      format.setTimeZone(TimeZone.getTimeZone(\"UTC\"));\n      resetEvaluatorBagDateMathParser();\n      DateMathParser dmp = new DateMathParser(TimeZone.getDefault(), Locale.getDefault());\n\n      String s = vri.replaceTokens(\"${dataimporter.functions.formatDate('NOW/DAY','yyyy-MM-dd HH:mm')}\");\n      assertEquals(new SimpleDateFormat(\"yyyy-MM-dd HH:mm\").format(dmp.parseMath(\"/DAY\")), s);\n    } finally {\n      Context.CURRENT_CONTEXT.remove();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7c7b0ae5716b6c2044195a818e9ae58205175659","date":1353342230,"type":3,"author":"James Dyer","isMerge":false,"pathNew":"solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/TestVariableResolver#dateNamespaceWithExpr().mjava","pathOld":"solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/TestVariableResolver#dateNamespaceWithExpr().mjava","sourceNew":"  @Test\n  public void dateNamespaceWithExpr() throws Exception {\n    VariableResolver vri = new VariableResolver();\n    vri.setEvaluators(new DataImporter().getEvaluators(Collections.<Map<String,String>>emptyList()));\n    SimpleDateFormat format = new SimpleDateFormat(\"yyyy-MM-dd'T'HH:mm:ss'Z'\");\n    format.setTimeZone(TimeZone.getTimeZone(\"UTC\"));\n    DateMathParser dmp = new DateMathParser(TimeZone.getDefault(), Locale.getDefault());\n\n    String s = vri.replaceTokens(\"${dataimporter.functions.formatDate('NOW/DAY','yyyy-MM-dd HH:mm')}\");\n    assertEquals(new SimpleDateFormat(\"yyyy-MM-dd HH:mm\").format(dmp.parseMath(\"/DAY\")), s);    \n  }\n\n","sourceOld":"  @Test\n  public void dateNamespaceWithExpr() throws Exception {\n    VariableResolverImpl vri = new VariableResolverImpl();\n    vri.addNamespace(\"dataimporter.functions\", EvaluatorBag\n            .getFunctionsNamespace(Collections.EMPTY_LIST,null, vri));\n    SimpleDateFormat format = new SimpleDateFormat(\"yyyy-MM-dd'T'HH:mm:ss'Z'\");\n    format.setTimeZone(TimeZone.getTimeZone(\"UTC\"));\n    resetEvaluatorBagDateMathParser();\n    DateMathParser dmp = new DateMathParser(TimeZone.getDefault(), Locale.getDefault());\n\n    String s = vri.replaceTokens(\"${dataimporter.functions.formatDate('NOW/DAY','yyyy-MM-dd HH:mm')}\");\n    assertEquals(new SimpleDateFormat(\"yyyy-MM-dd HH:mm\").format(dmp.parseMath(\"/DAY\")), s);    \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e1e9c3b0a1f683f4f9e53940d80b2791059be6b6","date":1353344064,"type":3,"author":"James Dyer","isMerge":false,"pathNew":"solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/TestVariableResolver#dateNamespaceWithExpr().mjava","pathOld":"solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/TestVariableResolver#dateNamespaceWithExpr().mjava","sourceNew":"  @Test\n  public void dateNamespaceWithExpr() throws Exception {\n    VariableResolver vri = new VariableResolver();\n    vri.setEvaluators(new DataImporter().getEvaluators(Collections\n        .<Map<String,String>> emptyList()));\n    SimpleDateFormat format = new SimpleDateFormat(\"yyyy-MM-dd'T'HH:mm:ss'Z'\");\n    format.setTimeZone(TimeZone.getTimeZone(\"UTC\"));\n    DateMathParser dmp = new DateMathParser(TimeZone.getDefault(),\n        Locale.getDefault());\n    \n    String s = vri\n        .replaceTokens(\"${dataimporter.functions.formatDate('NOW/DAY','yyyy-MM-dd HH:mm')}\");\n    assertEquals(\n        new SimpleDateFormat(\"yyyy-MM-dd HH:mm\").format(dmp.parseMath(\"/DAY\")),\n        s);\n  }\n\n","sourceOld":"  @Test\n  public void dateNamespaceWithExpr() throws Exception {\n    VariableResolver vri = new VariableResolver();\n    vri.setEvaluators(new DataImporter().getEvaluators(Collections.<Map<String,String>>emptyList()));\n    SimpleDateFormat format = new SimpleDateFormat(\"yyyy-MM-dd'T'HH:mm:ss'Z'\");\n    format.setTimeZone(TimeZone.getTimeZone(\"UTC\"));\n    DateMathParser dmp = new DateMathParser(TimeZone.getDefault(), Locale.getDefault());\n\n    String s = vri.replaceTokens(\"${dataimporter.functions.formatDate('NOW/DAY','yyyy-MM-dd HH:mm')}\");\n    assertEquals(new SimpleDateFormat(\"yyyy-MM-dd HH:mm\").format(dmp.parseMath(\"/DAY\")), s);    \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e34338590ce1e3be4b7cecb7044c5c5b1641332f","date":1353352684,"type":3,"author":"James Dyer","isMerge":false,"pathNew":"solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/TestVariableResolver#dateNamespaceWithExpr().mjava","pathOld":"solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/TestVariableResolver#dateNamespaceWithExpr().mjava","sourceNew":"  @Ignore\n  @Test\n  public void dateNamespaceWithExpr() throws Exception {\n    VariableResolver vri = new VariableResolver();\n    vri.setEvaluators(new DataImporter().getEvaluators(Collections.<Map<String,String>> emptyList()));\n    SimpleDateFormat format = new SimpleDateFormat(\"yyyy-MM-dd'T'HH:mm:ss'Z'\", Locale.ROOT);\n    format.setTimeZone(TimeZone.getTimeZone(\"UTC\"));\n    DateMathParser dmp = new DateMathParser(TimeZone.getTimeZone(\"UTC\"), Locale.ROOT);\n    \n   /* Calendar cal = new GregorianCalendar(TimeZone.getTimeZone(\"UTC\"), Locale.ROOT);\n    cal.set(Calendar.HOUR, 0);\n    cal.set(Calendar.MINUTE, 0);\n    cal.set(Calendar.SECOND, 0);\n    cal.set(Calendar.MILLISECOND, 0);*/\n    \n    SimpleDateFormat format1 = new SimpleDateFormat(\"yyyy-MM-dd HH:mm\", Locale.ROOT);\n    format.setTimeZone(TimeZone.getTimeZone(\"UTC\"));\n    \n    String s = vri.replaceTokens(\"${dataimporter.functions.formatDate('NOW/DAY','yyyy-MM-dd HH:mm')}\");\n    assertEquals(format1.format(dmp.parseMath(\"/DAY\")), s);\n  }\n\n","sourceOld":"  @Test\n  public void dateNamespaceWithExpr() throws Exception {\n    VariableResolver vri = new VariableResolver();\n    vri.setEvaluators(new DataImporter().getEvaluators(Collections\n        .<Map<String,String>> emptyList()));\n    SimpleDateFormat format = new SimpleDateFormat(\"yyyy-MM-dd'T'HH:mm:ss'Z'\");\n    format.setTimeZone(TimeZone.getTimeZone(\"UTC\"));\n    DateMathParser dmp = new DateMathParser(TimeZone.getDefault(),\n        Locale.getDefault());\n    \n    String s = vri\n        .replaceTokens(\"${dataimporter.functions.formatDate('NOW/DAY','yyyy-MM-dd HH:mm')}\");\n    assertEquals(\n        new SimpleDateFormat(\"yyyy-MM-dd HH:mm\").format(dmp.parseMath(\"/DAY\")),\n        s);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c56959837396924832a5c1f8c1670111913c6e9b","date":1353354232,"type":3,"author":"James Dyer","isMerge":false,"pathNew":"solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/TestVariableResolver#dateNamespaceWithExpr().mjava","pathOld":"solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/TestVariableResolver#dateNamespaceWithExpr().mjava","sourceNew":"  @Test\n  public void dateNamespaceWithExpr() throws Exception {\n    VariableResolver vri = new VariableResolver();\n    vri.setEvaluators(new DataImporter().getEvaluators(Collections\n        .<Map<String,String>> emptyList()));\n    SimpleDateFormat format = new SimpleDateFormat(\"yyyy-MM-dd'T'HH:mm:ss'Z'\", Locale.ROOT);\n    format.setTimeZone(TimeZone.getTimeZone(\"UTC\"));\n    DateMathParser dmp = new DateMathParser(TimeZone.getDefault(), Locale.ROOT);\n    \n    String s = vri\n        .replaceTokens(\"${dataimporter.functions.formatDate('NOW/DAY','yyyy-MM-dd HH:mm')}\");\n    assertEquals(\n        new SimpleDateFormat(\"yyyy-MM-dd HH:mm\", Locale.ROOT).format(dmp.parseMath(\"/DAY\")),\n        s);\n  }\n\n","sourceOld":"  @Ignore\n  @Test\n  public void dateNamespaceWithExpr() throws Exception {\n    VariableResolver vri = new VariableResolver();\n    vri.setEvaluators(new DataImporter().getEvaluators(Collections.<Map<String,String>> emptyList()));\n    SimpleDateFormat format = new SimpleDateFormat(\"yyyy-MM-dd'T'HH:mm:ss'Z'\", Locale.ROOT);\n    format.setTimeZone(TimeZone.getTimeZone(\"UTC\"));\n    DateMathParser dmp = new DateMathParser(TimeZone.getTimeZone(\"UTC\"), Locale.ROOT);\n    \n   /* Calendar cal = new GregorianCalendar(TimeZone.getTimeZone(\"UTC\"), Locale.ROOT);\n    cal.set(Calendar.HOUR, 0);\n    cal.set(Calendar.MINUTE, 0);\n    cal.set(Calendar.SECOND, 0);\n    cal.set(Calendar.MILLISECOND, 0);*/\n    \n    SimpleDateFormat format1 = new SimpleDateFormat(\"yyyy-MM-dd HH:mm\", Locale.ROOT);\n    format.setTimeZone(TimeZone.getTimeZone(\"UTC\"));\n    \n    String s = vri.replaceTokens(\"${dataimporter.functions.formatDate('NOW/DAY','yyyy-MM-dd HH:mm')}\");\n    assertEquals(format1.format(dmp.parseMath(\"/DAY\")), s);\n  }\n\n","bugFix":null,"bugIntro":["ba0bb1c61dbf71a82da9a3ea8cda3d481f703d29"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"407687e67faf6e1f02a211ca078d8e3eed631027","date":1355157407,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/TestVariableResolver#dateNamespaceWithExpr().mjava","pathOld":"solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/TestVariableResolver#dateNamespaceWithExpr().mjava","sourceNew":"  @Test\n  public void dateNamespaceWithExpr() throws Exception {\n    VariableResolver vri = new VariableResolver();\n    vri.setEvaluators(new DataImporter().getEvaluators(Collections\n        .<Map<String,String>> emptyList()));\n    SimpleDateFormat format = new SimpleDateFormat(\"yyyy-MM-dd'T'HH:mm:ss'Z'\", Locale.ROOT);\n    format.setTimeZone(TimeZone.getTimeZone(\"UTC\"));\n    DateMathParser dmp = new DateMathParser(TimeZone.getDefault(), Locale.ROOT);\n    \n    String s = vri\n        .replaceTokens(\"${dataimporter.functions.formatDate('NOW/DAY','yyyy-MM-dd HH:mm')}\");\n    assertEquals(\n        new SimpleDateFormat(\"yyyy-MM-dd HH:mm\", Locale.ROOT).format(dmp.parseMath(\"/DAY\")),\n        s);\n  }\n\n","sourceOld":"  @Test\n  public void dateNamespaceWithExpr() throws Exception {\n    VariableResolverImpl vri = new VariableResolverImpl();\n    vri.addNamespace(\"dataimporter.functions\", EvaluatorBag\n            .getFunctionsNamespace(Collections.EMPTY_LIST,null, vri));\n    SimpleDateFormat format = new SimpleDateFormat(\"yyyy-MM-dd'T'HH:mm:ss'Z'\");\n    format.setTimeZone(TimeZone.getTimeZone(\"UTC\"));\n    resetEvaluatorBagDateMathParser();\n    DateMathParser dmp = new DateMathParser(TimeZone.getDefault(), Locale.getDefault());\n\n    String s = vri.replaceTokens(\"${dataimporter.functions.formatDate('NOW/DAY','yyyy-MM-dd HH:mm')}\");\n    assertEquals(new SimpleDateFormat(\"yyyy-MM-dd HH:mm\").format(dmp.parseMath(\"/DAY\")), s);    \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ba0bb1c61dbf71a82da9a3ea8cda3d481f703d29","date":1463148204,"type":3,"author":"David Smiley","isMerge":false,"pathNew":"solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/TestVariableResolver#dateNamespaceWithExpr().mjava","pathOld":"solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/TestVariableResolver#dateNamespaceWithExpr().mjava","sourceNew":"  @Test\n  public void dateNamespaceWithExpr() throws Exception {\n    VariableResolver vri = new VariableResolver();\n    vri.setEvaluators(new DataImporter().getEvaluators(Collections\n        .<Map<String,String>> emptyList()));\n    SimpleDateFormat format = new SimpleDateFormat(\"yyyy-MM-dd'T'HH:mm:ss'Z'\", Locale.ROOT);\n    format.setTimeZone(TimeZone.getTimeZone(\"UTC\"));\n    DateMathParser dmp = new DateMathParser(TimeZone.getDefault());\n    \n    String s = vri\n        .replaceTokens(\"${dataimporter.functions.formatDate('NOW/DAY','yyyy-MM-dd HH:mm')}\");\n    assertEquals(\n        new SimpleDateFormat(\"yyyy-MM-dd HH:mm\", Locale.ROOT).format(dmp.parseMath(\"/DAY\")),\n        s);\n  }\n\n","sourceOld":"  @Test\n  public void dateNamespaceWithExpr() throws Exception {\n    VariableResolver vri = new VariableResolver();\n    vri.setEvaluators(new DataImporter().getEvaluators(Collections\n        .<Map<String,String>> emptyList()));\n    SimpleDateFormat format = new SimpleDateFormat(\"yyyy-MM-dd'T'HH:mm:ss'Z'\", Locale.ROOT);\n    format.setTimeZone(TimeZone.getTimeZone(\"UTC\"));\n    DateMathParser dmp = new DateMathParser(TimeZone.getDefault(), Locale.ROOT);\n    \n    String s = vri\n        .replaceTokens(\"${dataimporter.functions.formatDate('NOW/DAY','yyyy-MM-dd HH:mm')}\");\n    assertEquals(\n        new SimpleDateFormat(\"yyyy-MM-dd HH:mm\", Locale.ROOT).format(dmp.parseMath(\"/DAY\")),\n        s);\n  }\n\n","bugFix":["c56959837396924832a5c1f8c1670111913c6e9b"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0ad30c6a479e764150a3316e57263319775f1df2","date":1463395403,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/TestVariableResolver#dateNamespaceWithExpr().mjava","pathOld":"solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/TestVariableResolver#dateNamespaceWithExpr().mjava","sourceNew":"  @Test\n  public void dateNamespaceWithExpr() throws Exception {\n    VariableResolver vri = new VariableResolver();\n    vri.setEvaluators(new DataImporter().getEvaluators(Collections\n        .<Map<String,String>> emptyList()));\n    SimpleDateFormat format = new SimpleDateFormat(\"yyyy-MM-dd'T'HH:mm:ss'Z'\", Locale.ROOT);\n    format.setTimeZone(TimeZone.getTimeZone(\"UTC\"));\n    DateMathParser dmp = new DateMathParser(TimeZone.getDefault());\n    \n    String s = vri\n        .replaceTokens(\"${dataimporter.functions.formatDate('NOW/DAY','yyyy-MM-dd HH:mm')}\");\n    assertEquals(\n        new SimpleDateFormat(\"yyyy-MM-dd HH:mm\", Locale.ROOT).format(dmp.parseMath(\"/DAY\")),\n        s);\n  }\n\n","sourceOld":"  @Test\n  public void dateNamespaceWithExpr() throws Exception {\n    VariableResolver vri = new VariableResolver();\n    vri.setEvaluators(new DataImporter().getEvaluators(Collections\n        .<Map<String,String>> emptyList()));\n    SimpleDateFormat format = new SimpleDateFormat(\"yyyy-MM-dd'T'HH:mm:ss'Z'\", Locale.ROOT);\n    format.setTimeZone(TimeZone.getTimeZone(\"UTC\"));\n    DateMathParser dmp = new DateMathParser(TimeZone.getDefault(), Locale.ROOT);\n    \n    String s = vri\n        .replaceTokens(\"${dataimporter.functions.formatDate('NOW/DAY','yyyy-MM-dd HH:mm')}\");\n    assertEquals(\n        new SimpleDateFormat(\"yyyy-MM-dd HH:mm\", Locale.ROOT).format(dmp.parseMath(\"/DAY\")),\n        s);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d470c8182e92b264680e34081b75e70a9f2b3c89","date":1463985353,"type":3,"author":"Noble Paul","isMerge":true,"pathNew":"solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/TestVariableResolver#dateNamespaceWithExpr().mjava","pathOld":"solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/TestVariableResolver#dateNamespaceWithExpr().mjava","sourceNew":"  @Test\n  public void dateNamespaceWithExpr() throws Exception {\n    VariableResolver vri = new VariableResolver();\n    vri.setEvaluators(new DataImporter().getEvaluators(Collections\n        .<Map<String,String>> emptyList()));\n    SimpleDateFormat format = new SimpleDateFormat(\"yyyy-MM-dd'T'HH:mm:ss'Z'\", Locale.ROOT);\n    format.setTimeZone(TimeZone.getTimeZone(\"UTC\"));\n    DateMathParser dmp = new DateMathParser(TimeZone.getDefault());\n    \n    String s = vri\n        .replaceTokens(\"${dataimporter.functions.formatDate('NOW/DAY','yyyy-MM-dd HH:mm')}\");\n    assertEquals(\n        new SimpleDateFormat(\"yyyy-MM-dd HH:mm\", Locale.ROOT).format(dmp.parseMath(\"/DAY\")),\n        s);\n  }\n\n","sourceOld":"  @Test\n  public void dateNamespaceWithExpr() throws Exception {\n    VariableResolver vri = new VariableResolver();\n    vri.setEvaluators(new DataImporter().getEvaluators(Collections\n        .<Map<String,String>> emptyList()));\n    SimpleDateFormat format = new SimpleDateFormat(\"yyyy-MM-dd'T'HH:mm:ss'Z'\", Locale.ROOT);\n    format.setTimeZone(TimeZone.getTimeZone(\"UTC\"));\n    DateMathParser dmp = new DateMathParser(TimeZone.getDefault(), Locale.ROOT);\n    \n    String s = vri\n        .replaceTokens(\"${dataimporter.functions.formatDate('NOW/DAY','yyyy-MM-dd HH:mm')}\");\n    assertEquals(\n        new SimpleDateFormat(\"yyyy-MM-dd HH:mm\", Locale.ROOT).format(dmp.parseMath(\"/DAY\")),\n        s);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/TestVariableResolver#dateNamespaceWithExpr().mjava","pathOld":"solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/TestVariableResolver#dateNamespaceWithExpr().mjava","sourceNew":"  @Test\n  public void dateNamespaceWithExpr() throws Exception {\n    VariableResolver vri = new VariableResolver();\n    vri.setEvaluators(new DataImporter().getEvaluators(Collections\n        .<Map<String,String>> emptyList()));\n    SimpleDateFormat format = new SimpleDateFormat(\"yyyy-MM-dd'T'HH:mm:ss'Z'\", Locale.ROOT);\n    format.setTimeZone(TimeZone.getTimeZone(\"UTC\"));\n    DateMathParser dmp = new DateMathParser(TimeZone.getDefault());\n    \n    String s = vri\n        .replaceTokens(\"${dataimporter.functions.formatDate('NOW/DAY','yyyy-MM-dd HH:mm')}\");\n    assertEquals(\n        new SimpleDateFormat(\"yyyy-MM-dd HH:mm\", Locale.ROOT).format(dmp.parseMath(\"/DAY\")),\n        s);\n  }\n\n","sourceOld":"  @Test\n  public void dateNamespaceWithExpr() throws Exception {\n    VariableResolver vri = new VariableResolver();\n    vri.setEvaluators(new DataImporter().getEvaluators(Collections\n        .<Map<String,String>> emptyList()));\n    SimpleDateFormat format = new SimpleDateFormat(\"yyyy-MM-dd'T'HH:mm:ss'Z'\", Locale.ROOT);\n    format.setTimeZone(TimeZone.getTimeZone(\"UTC\"));\n    DateMathParser dmp = new DateMathParser(TimeZone.getDefault(), Locale.ROOT);\n    \n    String s = vri\n        .replaceTokens(\"${dataimporter.functions.formatDate('NOW/DAY','yyyy-MM-dd HH:mm')}\");\n    assertEquals(\n        new SimpleDateFormat(\"yyyy-MM-dd HH:mm\", Locale.ROOT).format(dmp.parseMath(\"/DAY\")),\n        s);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d2c8f5c46c2501b61e2f55eb7ee59e6c5372290b","date":1598712724,"type":4,"author":"Alexandre Rafalovitch","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/TestVariableResolver#dateNamespaceWithExpr().mjava","sourceNew":null,"sourceOld":"  @Test\n  public void dateNamespaceWithExpr() throws Exception {\n    VariableResolver vri = new VariableResolver();\n    vri.setEvaluators(new DataImporter().getEvaluators(Collections\n        .<Map<String,String>> emptyList()));\n    SimpleDateFormat format = new SimpleDateFormat(\"yyyy-MM-dd'T'HH:mm:ss'Z'\", Locale.ROOT);\n    format.setTimeZone(TimeZone.getTimeZone(\"UTC\"));\n    DateMathParser dmp = new DateMathParser(TimeZone.getDefault());\n    \n    String s = vri\n        .replaceTokens(\"${dataimporter.functions.formatDate('NOW/DAY','yyyy-MM-dd HH:mm')}\");\n    assertEquals(\n        new SimpleDateFormat(\"yyyy-MM-dd HH:mm\", Locale.ROOT).format(dmp.parseMath(\"/DAY\")),\n        s);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"7c7b0ae5716b6c2044195a818e9ae58205175659":["4b84e23a1c994ea309896dd9424563e0092f3607"],"c26f00b574427b55127e869b935845554afde1fa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","5128b7b3b73fedff05fdc5ea2e6be53c1020bb91"],"407687e67faf6e1f02a211ca078d8e3eed631027":["4b84e23a1c994ea309896dd9424563e0092f3607","c56959837396924832a5c1f8c1670111913c6e9b"],"0ad30c6a479e764150a3316e57263319775f1df2":["c56959837396924832a5c1f8c1670111913c6e9b","ba0bb1c61dbf71a82da9a3ea8cda3d481f703d29"],"c56959837396924832a5c1f8c1670111913c6e9b":["e34338590ce1e3be4b7cecb7044c5c5b1641332f"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["c56959837396924832a5c1f8c1670111913c6e9b","d470c8182e92b264680e34081b75e70a9f2b3c89"],"d470c8182e92b264680e34081b75e70a9f2b3c89":["c56959837396924832a5c1f8c1670111913c6e9b","0ad30c6a479e764150a3316e57263319775f1df2"],"4b84e23a1c994ea309896dd9424563e0092f3607":["c26f00b574427b55127e869b935845554afde1fa"],"ba0bb1c61dbf71a82da9a3ea8cda3d481f703d29":["c56959837396924832a5c1f8c1670111913c6e9b"],"d2c8f5c46c2501b61e2f55eb7ee59e6c5372290b":["d470c8182e92b264680e34081b75e70a9f2b3c89"],"e1e9c3b0a1f683f4f9e53940d80b2791059be6b6":["7c7b0ae5716b6c2044195a818e9ae58205175659"],"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"e34338590ce1e3be4b7cecb7044c5c5b1641332f":["e1e9c3b0a1f683f4f9e53940d80b2791059be6b6"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["d2c8f5c46c2501b61e2f55eb7ee59e6c5372290b"]},"commit2Childs":{"7c7b0ae5716b6c2044195a818e9ae58205175659":["e1e9c3b0a1f683f4f9e53940d80b2791059be6b6"],"c26f00b574427b55127e869b935845554afde1fa":["4b84e23a1c994ea309896dd9424563e0092f3607"],"407687e67faf6e1f02a211ca078d8e3eed631027":[],"0ad30c6a479e764150a3316e57263319775f1df2":["d470c8182e92b264680e34081b75e70a9f2b3c89"],"c56959837396924832a5c1f8c1670111913c6e9b":["407687e67faf6e1f02a211ca078d8e3eed631027","0ad30c6a479e764150a3316e57263319775f1df2","4cce5816ef15a48a0bc11e5d400497ee4301dd3b","d470c8182e92b264680e34081b75e70a9f2b3c89","ba0bb1c61dbf71a82da9a3ea8cda3d481f703d29"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"d470c8182e92b264680e34081b75e70a9f2b3c89":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","d2c8f5c46c2501b61e2f55eb7ee59e6c5372290b"],"4b84e23a1c994ea309896dd9424563e0092f3607":["7c7b0ae5716b6c2044195a818e9ae58205175659","407687e67faf6e1f02a211ca078d8e3eed631027"],"ba0bb1c61dbf71a82da9a3ea8cda3d481f703d29":["0ad30c6a479e764150a3316e57263319775f1df2"],"d2c8f5c46c2501b61e2f55eb7ee59e6c5372290b":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"e1e9c3b0a1f683f4f9e53940d80b2791059be6b6":["e34338590ce1e3be4b7cecb7044c5c5b1641332f"],"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91":["c26f00b574427b55127e869b935845554afde1fa"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c26f00b574427b55127e869b935845554afde1fa","5128b7b3b73fedff05fdc5ea2e6be53c1020bb91"],"e34338590ce1e3be4b7cecb7044c5c5b1641332f":["c56959837396924832a5c1f8c1670111913c6e9b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["407687e67faf6e1f02a211ca078d8e3eed631027","4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}