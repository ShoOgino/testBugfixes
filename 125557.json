{"path":"lucene/core/src/java/org/apache/lucene/util/packed/PackedInts#getReaderIteratorNoHeader(DataInput,Format,int,int,int,int).mjava","commits":[{"id":"55110eb60c5105294fc2ae7912d82b750865aa58","date":1341389822,"type":0,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/packed/PackedInts#getReaderIteratorNoHeader(DataInput,Format,int,int,int,int).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Expert: Restore a {@link ReaderIterator} from a stream without reading\n   * metadata at the beginning of the stream. This method is useful to restore\n   * data from streams which have been created using\n   * {@link PackedInts#getWriterNoHeader(DataOutput, Format, int, int, int)}.\n   *\n   * @param in           the stream to read data from, positioned at the beginning of the packed values\n   * @param format       the format used to serialize\n   * @param version      the version used to serialize the data\n   * @param valueCount   how many values the stream holds\n   * @param bitsPerValue the number of bits per value\n   * @param mem          how much memory the iterator is allowed to use to read-ahead (likely to speed up iteration)\n   * @return             a ReaderIterator\n   * @throws IOException\n   * @see PackedInts#getWriterNoHeader(DataOutput, Format, int, int, int)\n   * @lucene.internal\n   */\n  public static ReaderIterator getReaderIteratorNoHeader(DataInput in, Format format, int version,\n      int valueCount, int bitsPerValue, int mem) throws IOException {\n    return new PackedReaderIterator(format, valueCount, bitsPerValue, in, mem);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fe33227f6805edab2036cbb80645cc4e2d1fa424","date":1342713534,"type":0,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/util/packed/PackedInts#getReaderIteratorNoHeader(DataInput,Format,int,int,int,int).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Expert: Restore a {@link ReaderIterator} from a stream without reading\n   * metadata at the beginning of the stream. This method is useful to restore\n   * data from streams which have been created using\n   * {@link PackedInts#getWriterNoHeader(DataOutput, Format, int, int, int)}.\n   *\n   * @param in           the stream to read data from, positioned at the beginning of the packed values\n   * @param format       the format used to serialize\n   * @param version      the version used to serialize the data\n   * @param valueCount   how many values the stream holds\n   * @param bitsPerValue the number of bits per value\n   * @param mem          how much memory the iterator is allowed to use to read-ahead (likely to speed up iteration)\n   * @return             a ReaderIterator\n   * @throws IOException\n   * @see PackedInts#getWriterNoHeader(DataOutput, Format, int, int, int)\n   * @lucene.internal\n   */\n  public static ReaderIterator getReaderIteratorNoHeader(DataInput in, Format format, int version,\n      int valueCount, int bitsPerValue, int mem) throws IOException {\n    return new PackedReaderIterator(format, valueCount, bitsPerValue, in, mem);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"035130b0c342f404c027af8c8870587c3741cb1e","date":1342898805,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/packed/PackedInts#getReaderIteratorNoHeader(DataInput,Format,int,int,int,int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/packed/PackedInts#getReaderIteratorNoHeader(DataInput,Format,int,int,int,int).mjava","sourceNew":"  /**\n   * Expert: Restore a {@link ReaderIterator} from a stream without reading\n   * metadata at the beginning of the stream. This method is useful to restore\n   * data from streams which have been created using\n   * {@link PackedInts#getWriterNoHeader(DataOutput, Format, int, int, int)}.\n   *\n   * @param in           the stream to read data from, positioned at the beginning of the packed values\n   * @param format       the format used to serialize\n   * @param version      the version used to serialize the data\n   * @param valueCount   how many values the stream holds\n   * @param bitsPerValue the number of bits per value\n   * @param mem          how much memory the iterator is allowed to use to read-ahead (likely to speed up iteration)\n   * @return             a ReaderIterator\n   * @throws IOException\n   * @see PackedInts#getWriterNoHeader(DataOutput, Format, int, int, int)\n   * @lucene.internal\n   */\n  public static ReaderIterator getReaderIteratorNoHeader(DataInput in, Format format, int version,\n      int valueCount, int bitsPerValue, int mem) {\n    return new PackedReaderIterator(format, valueCount, bitsPerValue, in, mem);\n  }\n\n","sourceOld":"  /**\n   * Expert: Restore a {@link ReaderIterator} from a stream without reading\n   * metadata at the beginning of the stream. This method is useful to restore\n   * data from streams which have been created using\n   * {@link PackedInts#getWriterNoHeader(DataOutput, Format, int, int, int)}.\n   *\n   * @param in           the stream to read data from, positioned at the beginning of the packed values\n   * @param format       the format used to serialize\n   * @param version      the version used to serialize the data\n   * @param valueCount   how many values the stream holds\n   * @param bitsPerValue the number of bits per value\n   * @param mem          how much memory the iterator is allowed to use to read-ahead (likely to speed up iteration)\n   * @return             a ReaderIterator\n   * @throws IOException\n   * @see PackedInts#getWriterNoHeader(DataOutput, Format, int, int, int)\n   * @lucene.internal\n   */\n  public static ReaderIterator getReaderIteratorNoHeader(DataInput in, Format format, int version,\n      int valueCount, int bitsPerValue, int mem) throws IOException {\n    return new PackedReaderIterator(format, valueCount, bitsPerValue, in, mem);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e099715aa0cb8da9a56320dd21c24f1ad6728b03","date":1345471998,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/packed/PackedInts#getReaderIteratorNoHeader(DataInput,Format,int,int,int,int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/packed/PackedInts#getReaderIteratorNoHeader(DataInput,Format,int,int,int,int).mjava","sourceNew":"  /**\n   * Expert: Restore a {@link ReaderIterator} from a stream without reading\n   * metadata at the beginning of the stream. This method is useful to restore\n   * data from streams which have been created using\n   * {@link PackedInts#getWriterNoHeader(DataOutput, Format, int, int, int)}.\n   *\n   * @param in           the stream to read data from, positioned at the beginning of the packed values\n   * @param format       the format used to serialize\n   * @param version      the version used to serialize the data\n   * @param valueCount   how many values the stream holds\n   * @param bitsPerValue the number of bits per value\n   * @param mem          how much memory the iterator is allowed to use to read-ahead (likely to speed up iteration)\n   * @return             a ReaderIterator\n   * @throws IOException\n   * @see PackedInts#getWriterNoHeader(DataOutput, Format, int, int, int)\n   * @lucene.internal\n   */\n  public static ReaderIterator getReaderIteratorNoHeader(DataInput in, Format format, int version,\n      int valueCount, int bitsPerValue, int mem) {\n    checkVersion(version);\n    return new PackedReaderIterator(format, valueCount, bitsPerValue, in, mem);\n  }\n\n","sourceOld":"  /**\n   * Expert: Restore a {@link ReaderIterator} from a stream without reading\n   * metadata at the beginning of the stream. This method is useful to restore\n   * data from streams which have been created using\n   * {@link PackedInts#getWriterNoHeader(DataOutput, Format, int, int, int)}.\n   *\n   * @param in           the stream to read data from, positioned at the beginning of the packed values\n   * @param format       the format used to serialize\n   * @param version      the version used to serialize the data\n   * @param valueCount   how many values the stream holds\n   * @param bitsPerValue the number of bits per value\n   * @param mem          how much memory the iterator is allowed to use to read-ahead (likely to speed up iteration)\n   * @return             a ReaderIterator\n   * @throws IOException\n   * @see PackedInts#getWriterNoHeader(DataOutput, Format, int, int, int)\n   * @lucene.internal\n   */\n  public static ReaderIterator getReaderIteratorNoHeader(DataInput in, Format format, int version,\n      int valueCount, int bitsPerValue, int mem) {\n    return new PackedReaderIterator(format, valueCount, bitsPerValue, in, mem);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f8615860cb50aefb8eebca1d1b3893dbe21cf126","date":1345550448,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/util/packed/PackedInts#getReaderIteratorNoHeader(DataInput,Format,int,int,int,int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/packed/PackedInts#getReaderIteratorNoHeader(DataInput,Format,int,int,int,int).mjava","sourceNew":"  /**\n   * Expert: Restore a {@link ReaderIterator} from a stream without reading\n   * metadata at the beginning of the stream. This method is useful to restore\n   * data from streams which have been created using\n   * {@link PackedInts#getWriterNoHeader(DataOutput, Format, int, int, int)}.\n   *\n   * @param in           the stream to read data from, positioned at the beginning of the packed values\n   * @param format       the format used to serialize\n   * @param version      the version used to serialize the data\n   * @param valueCount   how many values the stream holds\n   * @param bitsPerValue the number of bits per value\n   * @param mem          how much memory the iterator is allowed to use to read-ahead (likely to speed up iteration)\n   * @return             a ReaderIterator\n   * @throws IOException\n   * @see PackedInts#getWriterNoHeader(DataOutput, Format, int, int, int)\n   * @lucene.internal\n   */\n  public static ReaderIterator getReaderIteratorNoHeader(DataInput in, Format format, int version,\n      int valueCount, int bitsPerValue, int mem) {\n    checkVersion(version);\n    return new PackedReaderIterator(format, valueCount, bitsPerValue, in, mem);\n  }\n\n","sourceOld":"  /**\n   * Expert: Restore a {@link ReaderIterator} from a stream without reading\n   * metadata at the beginning of the stream. This method is useful to restore\n   * data from streams which have been created using\n   * {@link PackedInts#getWriterNoHeader(DataOutput, Format, int, int, int)}.\n   *\n   * @param in           the stream to read data from, positioned at the beginning of the packed values\n   * @param format       the format used to serialize\n   * @param version      the version used to serialize the data\n   * @param valueCount   how many values the stream holds\n   * @param bitsPerValue the number of bits per value\n   * @param mem          how much memory the iterator is allowed to use to read-ahead (likely to speed up iteration)\n   * @return             a ReaderIterator\n   * @throws IOException\n   * @see PackedInts#getWriterNoHeader(DataOutput, Format, int, int, int)\n   * @lucene.internal\n   */\n  public static ReaderIterator getReaderIteratorNoHeader(DataInput in, Format format, int version,\n      int valueCount, int bitsPerValue, int mem) throws IOException {\n    return new PackedReaderIterator(format, valueCount, bitsPerValue, in, mem);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"001b25b42373b22a52f399dbf072f1224632e8e6","date":1345889167,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/util/packed/PackedInts#getReaderIteratorNoHeader(DataInput,Format,int,int,int,int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/packed/PackedInts#getReaderIteratorNoHeader(DataInput,Format,int,int,int,int).mjava","sourceNew":"  /**\n   * Expert: Restore a {@link ReaderIterator} from a stream without reading\n   * metadata at the beginning of the stream. This method is useful to restore\n   * data from streams which have been created using\n   * {@link PackedInts#getWriterNoHeader(DataOutput, Format, int, int, int)}.\n   *\n   * @param in           the stream to read data from, positioned at the beginning of the packed values\n   * @param format       the format used to serialize\n   * @param version      the version used to serialize the data\n   * @param valueCount   how many values the stream holds\n   * @param bitsPerValue the number of bits per value\n   * @param mem          how much memory the iterator is allowed to use to read-ahead (likely to speed up iteration)\n   * @return             a ReaderIterator\n   * @throws IOException\n   * @see PackedInts#getWriterNoHeader(DataOutput, Format, int, int, int)\n   * @lucene.internal\n   */\n  public static ReaderIterator getReaderIteratorNoHeader(DataInput in, Format format, int version,\n      int valueCount, int bitsPerValue, int mem) {\n    checkVersion(version);\n    return new PackedReaderIterator(format, valueCount, bitsPerValue, in, mem);\n  }\n\n","sourceOld":"  /**\n   * Expert: Restore a {@link ReaderIterator} from a stream without reading\n   * metadata at the beginning of the stream. This method is useful to restore\n   * data from streams which have been created using\n   * {@link PackedInts#getWriterNoHeader(DataOutput, Format, int, int, int)}.\n   *\n   * @param in           the stream to read data from, positioned at the beginning of the packed values\n   * @param format       the format used to serialize\n   * @param version      the version used to serialize the data\n   * @param valueCount   how many values the stream holds\n   * @param bitsPerValue the number of bits per value\n   * @param mem          how much memory the iterator is allowed to use to read-ahead (likely to speed up iteration)\n   * @return             a ReaderIterator\n   * @throws IOException\n   * @see PackedInts#getWriterNoHeader(DataOutput, Format, int, int, int)\n   * @lucene.internal\n   */\n  public static ReaderIterator getReaderIteratorNoHeader(DataInput in, Format format, int version,\n      int valueCount, int bitsPerValue, int mem) throws IOException {\n    return new PackedReaderIterator(format, valueCount, bitsPerValue, in, mem);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"cb89814ad85fb3340f275e6b76a0bc319a6cc02b","date":1348100270,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/packed/PackedInts#getReaderIteratorNoHeader(DataInput,Format,int,int,int,int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/packed/PackedInts#getReaderIteratorNoHeader(DataInput,Format,int,int,int,int).mjava","sourceNew":"  /**\n   * Expert: Restore a {@link ReaderIterator} from a stream without reading\n   * metadata at the beginning of the stream. This method is useful to restore\n   * data from streams which have been created using\n   * {@link PackedInts#getWriterNoHeader(DataOutput, Format, int, int, int)}.\n   *\n   * @param in           the stream to read data from, positioned at the beginning of the packed values\n   * @param format       the format used to serialize\n   * @param version      the version used to serialize the data\n   * @param valueCount   how many values the stream holds\n   * @param bitsPerValue the number of bits per value\n   * @param mem          how much memory the iterator is allowed to use to read-ahead (likely to speed up iteration)\n   * @return             a ReaderIterator\n   * @see PackedInts#getWriterNoHeader(DataOutput, Format, int, int, int)\n   * @lucene.internal\n   */\n  public static ReaderIterator getReaderIteratorNoHeader(DataInput in, Format format, int version,\n      int valueCount, int bitsPerValue, int mem) {\n    checkVersion(version);\n    return new PackedReaderIterator(format, valueCount, bitsPerValue, in, mem);\n  }\n\n","sourceOld":"  /**\n   * Expert: Restore a {@link ReaderIterator} from a stream without reading\n   * metadata at the beginning of the stream. This method is useful to restore\n   * data from streams which have been created using\n   * {@link PackedInts#getWriterNoHeader(DataOutput, Format, int, int, int)}.\n   *\n   * @param in           the stream to read data from, positioned at the beginning of the packed values\n   * @param format       the format used to serialize\n   * @param version      the version used to serialize the data\n   * @param valueCount   how many values the stream holds\n   * @param bitsPerValue the number of bits per value\n   * @param mem          how much memory the iterator is allowed to use to read-ahead (likely to speed up iteration)\n   * @return             a ReaderIterator\n   * @throws IOException\n   * @see PackedInts#getWriterNoHeader(DataOutput, Format, int, int, int)\n   * @lucene.internal\n   */\n  public static ReaderIterator getReaderIteratorNoHeader(DataInput in, Format format, int version,\n      int valueCount, int bitsPerValue, int mem) {\n    checkVersion(version);\n    return new PackedReaderIterator(format, valueCount, bitsPerValue, in, mem);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c661dcad9680b8a6ce5bf2cc583a69ec965328bc","date":1352297862,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/packed/PackedInts#getReaderIteratorNoHeader(DataInput,Format,int,int,int,int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/packed/PackedInts#getReaderIteratorNoHeader(DataInput,Format,int,int,int,int).mjava","sourceNew":"  /**\n   * Expert: Restore a {@link ReaderIterator} from a stream without reading\n   * metadata at the beginning of the stream. This method is useful to restore\n   * data from streams which have been created using\n   * {@link PackedInts#getWriterNoHeader(DataOutput, Format, int, int, int)}.\n   *\n   * @param in           the stream to read data from, positioned at the beginning of the packed values\n   * @param format       the format used to serialize\n   * @param version      the version used to serialize the data\n   * @param valueCount   how many values the stream holds\n   * @param bitsPerValue the number of bits per value\n   * @param mem          how much memory the iterator is allowed to use to read-ahead (likely to speed up iteration)\n   * @return             a ReaderIterator\n   * @see PackedInts#getWriterNoHeader(DataOutput, Format, int, int, int)\n   * @lucene.internal\n   */\n  public static ReaderIterator getReaderIteratorNoHeader(DataInput in, Format format, int version,\n      int valueCount, int bitsPerValue, int mem) {\n    checkVersion(version);\n    return new PackedReaderIterator(format, version, valueCount, bitsPerValue, in, mem);\n  }\n\n","sourceOld":"  /**\n   * Expert: Restore a {@link ReaderIterator} from a stream without reading\n   * metadata at the beginning of the stream. This method is useful to restore\n   * data from streams which have been created using\n   * {@link PackedInts#getWriterNoHeader(DataOutput, Format, int, int, int)}.\n   *\n   * @param in           the stream to read data from, positioned at the beginning of the packed values\n   * @param format       the format used to serialize\n   * @param version      the version used to serialize the data\n   * @param valueCount   how many values the stream holds\n   * @param bitsPerValue the number of bits per value\n   * @param mem          how much memory the iterator is allowed to use to read-ahead (likely to speed up iteration)\n   * @return             a ReaderIterator\n   * @see PackedInts#getWriterNoHeader(DataOutput, Format, int, int, int)\n   * @lucene.internal\n   */\n  public static ReaderIterator getReaderIteratorNoHeader(DataInput in, Format format, int version,\n      int valueCount, int bitsPerValue, int mem) {\n    checkVersion(version);\n    return new PackedReaderIterator(format, valueCount, bitsPerValue, in, mem);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"001b25b42373b22a52f399dbf072f1224632e8e6":["55110eb60c5105294fc2ae7912d82b750865aa58","f8615860cb50aefb8eebca1d1b3893dbe21cf126"],"cb89814ad85fb3340f275e6b76a0bc319a6cc02b":["f8615860cb50aefb8eebca1d1b3893dbe21cf126"],"55110eb60c5105294fc2ae7912d82b750865aa58":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"fe33227f6805edab2036cbb80645cc4e2d1fa424":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","55110eb60c5105294fc2ae7912d82b750865aa58"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"c661dcad9680b8a6ce5bf2cc583a69ec965328bc":["cb89814ad85fb3340f275e6b76a0bc319a6cc02b"],"f8615860cb50aefb8eebca1d1b3893dbe21cf126":["55110eb60c5105294fc2ae7912d82b750865aa58","e099715aa0cb8da9a56320dd21c24f1ad6728b03"],"035130b0c342f404c027af8c8870587c3741cb1e":["fe33227f6805edab2036cbb80645cc4e2d1fa424"],"e099715aa0cb8da9a56320dd21c24f1ad6728b03":["035130b0c342f404c027af8c8870587c3741cb1e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["c661dcad9680b8a6ce5bf2cc583a69ec965328bc"]},"commit2Childs":{"001b25b42373b22a52f399dbf072f1224632e8e6":[],"cb89814ad85fb3340f275e6b76a0bc319a6cc02b":["c661dcad9680b8a6ce5bf2cc583a69ec965328bc"],"55110eb60c5105294fc2ae7912d82b750865aa58":["001b25b42373b22a52f399dbf072f1224632e8e6","fe33227f6805edab2036cbb80645cc4e2d1fa424","f8615860cb50aefb8eebca1d1b3893dbe21cf126"],"fe33227f6805edab2036cbb80645cc4e2d1fa424":["035130b0c342f404c027af8c8870587c3741cb1e"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["55110eb60c5105294fc2ae7912d82b750865aa58","fe33227f6805edab2036cbb80645cc4e2d1fa424"],"c661dcad9680b8a6ce5bf2cc583a69ec965328bc":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"f8615860cb50aefb8eebca1d1b3893dbe21cf126":["001b25b42373b22a52f399dbf072f1224632e8e6","cb89814ad85fb3340f275e6b76a0bc319a6cc02b"],"035130b0c342f404c027af8c8870587c3741cb1e":["e099715aa0cb8da9a56320dd21c24f1ad6728b03"],"e099715aa0cb8da9a56320dd21c24f1ad6728b03":["f8615860cb50aefb8eebca1d1b3893dbe21cf126"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["001b25b42373b22a52f399dbf072f1224632e8e6","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}