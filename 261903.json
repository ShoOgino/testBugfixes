{"path":"lucene/contrib/spellchecker/src/test/org/apache/lucene/search/spell/TestSpellChecker#testComparator().mjava","commits":[{"id":"c7006f130a90f88aaa52ca7c0bfe4a204efef6b3","date":1282077658,"type":0,"author":"Grant Ingersoll","isMerge":false,"pathNew":"lucene/contrib/spellchecker/src/test/org/apache/lucene/search/spell/TestSpellChecker#testComparator().mjava","pathOld":"/dev/null","sourceNew":"  public void testComparator() throws Exception {\n    IndexReader r = IndexReader.open(userindex, true);\n    Directory compIdx = newDirectory(random);\n    SpellChecker compareSP = new SpellCheckerMock(compIdx, new LevensteinDistance(), new SuggestWordFrequencyComparator());\n    addwords(r, compareSP, \"field3\");\n\n    String[] similar = compareSP.suggestSimilar(\"fvie\", 2, r, \"field3\", false);\n    assertTrue(similar.length == 2);\n    //five and fvei have the same score, but different frequencies.\n    assertEquals(\"fvei\", similar[0]);\n    assertEquals(\"five\", similar[1]);\n    r.close();\n    if (!compareSP.isClosed())\n      compareSP.close();\n    compIdx.close();\n\n\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["d042843368f0d289e28164525546259d89d6dbb6","d042843368f0d289e28164525546259d89d6dbb6","d042843368f0d289e28164525546259d89d6dbb6"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"d76ab9983349b199b0e6f65776c0087b0c08a10d","date":1282230089,"type":3,"author":"Grant Ingersoll","isMerge":false,"pathNew":"lucene/contrib/spellchecker/src/test/org/apache/lucene/search/spell/TestSpellChecker#testComparator().mjava","pathOld":"lucene/contrib/spellchecker/src/test/org/apache/lucene/search/spell/TestSpellChecker#testComparator().mjava","sourceNew":"  public void testComparator() throws Exception {\n    IndexReader r = IndexReader.open(userindex, true);\n    Directory compIdx = newDirectory(random);\n    SpellChecker compareSP = new SpellCheckerMock(compIdx, new LevensteinDistance(), new SuggestWordFrequencyComparator());\n    addwords(r, compareSP, \"field3\");\n\n    String[] similar = compareSP.suggestSimilar(\"fvie\", 2, r, \"field3\", false);\n    assertTrue(similar.length == 2);\n    //five and fvei have the same score, but different frequencies.\n    assertEquals(\"fvei\", similar[0]);\n    assertEquals(\"five\", similar[1]);\n    r.close();\n    if (!compareSP.isClosed())\n      compareSP.close();\n    compIdx.close();\n  }\n\n","sourceOld":"  public void testComparator() throws Exception {\n    IndexReader r = IndexReader.open(userindex, true);\n    Directory compIdx = newDirectory(random);\n    SpellChecker compareSP = new SpellCheckerMock(compIdx, new LevensteinDistance(), new SuggestWordFrequencyComparator());\n    addwords(r, compareSP, \"field3\");\n\n    String[] similar = compareSP.suggestSimilar(\"fvie\", 2, r, \"field3\", false);\n    assertTrue(similar.length == 2);\n    //five and fvei have the same score, but different frequencies.\n    assertEquals(\"fvei\", similar[0]);\n    assertEquals(\"five\", similar[1]);\n    r.close();\n    if (!compareSP.isClosed())\n      compareSP.close();\n    compIdx.close();\n\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"1f653cfcf159baeaafe5d01682a911e95bba4012","date":1284122058,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/contrib/spellchecker/src/test/org/apache/lucene/search/spell/TestSpellChecker#testComparator().mjava","pathOld":"lucene/contrib/spellchecker/src/test/org/apache/lucene/search/spell/TestSpellChecker#testComparator().mjava","sourceNew":"  public void testComparator() throws Exception {\n    IndexReader r = IndexReader.open(userindex, true);\n    Directory compIdx = newDirectory();\n    SpellChecker compareSP = new SpellCheckerMock(compIdx, new LevensteinDistance(), new SuggestWordFrequencyComparator());\n    addwords(r, compareSP, \"field3\");\n\n    String[] similar = compareSP.suggestSimilar(\"fvie\", 2, r, \"field3\", false);\n    assertTrue(similar.length == 2);\n    //five and fvei have the same score, but different frequencies.\n    assertEquals(\"fvei\", similar[0]);\n    assertEquals(\"five\", similar[1]);\n    r.close();\n    if (!compareSP.isClosed())\n      compareSP.close();\n    compIdx.close();\n  }\n\n","sourceOld":"  public void testComparator() throws Exception {\n    IndexReader r = IndexReader.open(userindex, true);\n    Directory compIdx = newDirectory(random);\n    SpellChecker compareSP = new SpellCheckerMock(compIdx, new LevensteinDistance(), new SuggestWordFrequencyComparator());\n    addwords(r, compareSP, \"field3\");\n\n    String[] similar = compareSP.suggestSimilar(\"fvie\", 2, r, \"field3\", false);\n    assertTrue(similar.length == 2);\n    //five and fvei have the same score, but different frequencies.\n    assertEquals(\"fvei\", similar[0]);\n    assertEquals(\"five\", similar[1]);\n    r.close();\n    if (!compareSP.isClosed())\n      compareSP.close();\n    compIdx.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","date":1292920096,"type":0,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/contrib/spellchecker/src/test/org/apache/lucene/search/spell/TestSpellChecker#testComparator().mjava","pathOld":"/dev/null","sourceNew":"  public void testComparator() throws Exception {\n    IndexReader r = IndexReader.open(userindex, true);\n    Directory compIdx = newDirectory();\n    SpellChecker compareSP = new SpellCheckerMock(compIdx, new LevensteinDistance(), new SuggestWordFrequencyComparator());\n    addwords(r, compareSP, \"field3\");\n\n    String[] similar = compareSP.suggestSimilar(\"fvie\", 2, r, \"field3\", false);\n    assertTrue(similar.length == 2);\n    //five and fvei have the same score, but different frequencies.\n    assertEquals(\"fvei\", similar[0]);\n    assertEquals(\"five\", similar[1]);\n    r.close();\n    if (!compareSP.isClosed())\n      compareSP.close();\n    compIdx.close();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e230a61047bc041516c811baa08a7174d6f8322a","date":1306175633,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"modules/suggest/src/test/org/apache/lucene/search/spell/TestSpellChecker#testComparator().mjava","pathOld":"lucene/contrib/spellchecker/src/test/org/apache/lucene/search/spell/TestSpellChecker#testComparator().mjava","sourceNew":"  public void testComparator() throws Exception {\n    IndexReader r = IndexReader.open(userindex, true);\n    Directory compIdx = newDirectory();\n    SpellChecker compareSP = new SpellCheckerMock(compIdx, new LevensteinDistance(), new SuggestWordFrequencyComparator());\n    addwords(r, compareSP, \"field3\");\n\n    String[] similar = compareSP.suggestSimilar(\"fvie\", 2, r, \"field3\", false);\n    assertTrue(similar.length == 2);\n    //five and fvei have the same score, but different frequencies.\n    assertEquals(\"fvei\", similar[0]);\n    assertEquals(\"five\", similar[1]);\n    r.close();\n    if (!compareSP.isClosed())\n      compareSP.close();\n    compIdx.close();\n  }\n\n","sourceOld":"  public void testComparator() throws Exception {\n    IndexReader r = IndexReader.open(userindex, true);\n    Directory compIdx = newDirectory();\n    SpellChecker compareSP = new SpellCheckerMock(compIdx, new LevensteinDistance(), new SuggestWordFrequencyComparator());\n    addwords(r, compareSP, \"field3\");\n\n    String[] similar = compareSP.suggestSimilar(\"fvie\", 2, r, \"field3\", false);\n    assertTrue(similar.length == 2);\n    //five and fvei have the same score, but different frequencies.\n    assertEquals(\"fvei\", similar[0]);\n    assertEquals(\"five\", similar[1]);\n    r.close();\n    if (!compareSP.isClosed())\n      compareSP.close();\n    compIdx.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91","date":1306767085,"type":5,"author":"Steven Rowe","isMerge":true,"pathNew":"modules/suggest/src/test/org/apache/lucene/search/spell/TestSpellChecker#testComparator().mjava","pathOld":"lucene/contrib/spellchecker/src/test/org/apache/lucene/search/spell/TestSpellChecker#testComparator().mjava","sourceNew":"  public void testComparator() throws Exception {\n    IndexReader r = IndexReader.open(userindex, true);\n    Directory compIdx = newDirectory();\n    SpellChecker compareSP = new SpellCheckerMock(compIdx, new LevensteinDistance(), new SuggestWordFrequencyComparator());\n    addwords(r, compareSP, \"field3\");\n\n    String[] similar = compareSP.suggestSimilar(\"fvie\", 2, r, \"field3\", false);\n    assertTrue(similar.length == 2);\n    //five and fvei have the same score, but different frequencies.\n    assertEquals(\"fvei\", similar[0]);\n    assertEquals(\"five\", similar[1]);\n    r.close();\n    if (!compareSP.isClosed())\n      compareSP.close();\n    compIdx.close();\n  }\n\n","sourceOld":"  public void testComparator() throws Exception {\n    IndexReader r = IndexReader.open(userindex, true);\n    Directory compIdx = newDirectory();\n    SpellChecker compareSP = new SpellCheckerMock(compIdx, new LevensteinDistance(), new SuggestWordFrequencyComparator());\n    addwords(r, compareSP, \"field3\");\n\n    String[] similar = compareSP.suggestSimilar(\"fvie\", 2, r, \"field3\", false);\n    assertTrue(similar.length == 2);\n    //five and fvei have the same score, but different frequencies.\n    assertEquals(\"fvei\", similar[0]);\n    assertEquals(\"five\", similar[1]);\n    r.close();\n    if (!compareSP.isClosed())\n      compareSP.close();\n    compIdx.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2e10cb22a8bdb44339e282925a29182bb2f3174d","date":1306841137,"type":5,"author":"Simon Willnauer","isMerge":true,"pathNew":"modules/suggest/src/test/org/apache/lucene/search/spell/TestSpellChecker#testComparator().mjava","pathOld":"lucene/contrib/spellchecker/src/test/org/apache/lucene/search/spell/TestSpellChecker#testComparator().mjava","sourceNew":"  public void testComparator() throws Exception {\n    IndexReader r = IndexReader.open(userindex, true);\n    Directory compIdx = newDirectory();\n    SpellChecker compareSP = new SpellCheckerMock(compIdx, new LevensteinDistance(), new SuggestWordFrequencyComparator());\n    addwords(r, compareSP, \"field3\");\n\n    String[] similar = compareSP.suggestSimilar(\"fvie\", 2, r, \"field3\", false);\n    assertTrue(similar.length == 2);\n    //five and fvei have the same score, but different frequencies.\n    assertEquals(\"fvei\", similar[0]);\n    assertEquals(\"five\", similar[1]);\n    r.close();\n    if (!compareSP.isClosed())\n      compareSP.close();\n    compIdx.close();\n  }\n\n","sourceOld":"  public void testComparator() throws Exception {\n    IndexReader r = IndexReader.open(userindex, true);\n    Directory compIdx = newDirectory();\n    SpellChecker compareSP = new SpellCheckerMock(compIdx, new LevensteinDistance(), new SuggestWordFrequencyComparator());\n    addwords(r, compareSP, \"field3\");\n\n    String[] similar = compareSP.suggestSimilar(\"fvie\", 2, r, \"field3\", false);\n    assertTrue(similar.length == 2);\n    //five and fvei have the same score, but different frequencies.\n    assertEquals(\"fvei\", similar[0]);\n    assertEquals(\"five\", similar[1]);\n    r.close();\n    if (!compareSP.isClosed())\n      compareSP.close();\n    compIdx.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"d76ab9983349b199b0e6f65776c0087b0c08a10d":["c7006f130a90f88aaa52ca7c0bfe4a204efef6b3"],"c7006f130a90f88aaa52ca7c0bfe4a204efef6b3":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"e230a61047bc041516c811baa08a7174d6f8322a":["1f653cfcf159baeaafe5d01682a911e95bba4012"],"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91":["1f653cfcf159baeaafe5d01682a911e95bba4012","e230a61047bc041516c811baa08a7174d6f8322a"],"1f653cfcf159baeaafe5d01682a911e95bba4012":["d76ab9983349b199b0e6f65776c0087b0c08a10d"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","1f653cfcf159baeaafe5d01682a911e95bba4012"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["e230a61047bc041516c811baa08a7174d6f8322a"],"2e10cb22a8bdb44339e282925a29182bb2f3174d":["1f653cfcf159baeaafe5d01682a911e95bba4012","e230a61047bc041516c811baa08a7174d6f8322a"]},"commit2Childs":{"d76ab9983349b199b0e6f65776c0087b0c08a10d":["1f653cfcf159baeaafe5d01682a911e95bba4012"],"c7006f130a90f88aaa52ca7c0bfe4a204efef6b3":["d76ab9983349b199b0e6f65776c0087b0c08a10d"],"e230a61047bc041516c811baa08a7174d6f8322a":["5128b7b3b73fedff05fdc5ea2e6be53c1020bb91","cd5edd1f2b162a5cfa08efd17851a07373a96817","2e10cb22a8bdb44339e282925a29182bb2f3174d"],"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91":[],"1f653cfcf159baeaafe5d01682a911e95bba4012":["e230a61047bc041516c811baa08a7174d6f8322a","5128b7b3b73fedff05fdc5ea2e6be53c1020bb91","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","2e10cb22a8bdb44339e282925a29182bb2f3174d"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c7006f130a90f88aaa52ca7c0bfe4a204efef6b3","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"2e10cb22a8bdb44339e282925a29182bb2f3174d":[]},"heads":["5128b7b3b73fedff05fdc5ea2e6be53c1020bb91","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","cd5edd1f2b162a5cfa08efd17851a07373a96817","2e10cb22a8bdb44339e282925a29182bb2f3174d"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}