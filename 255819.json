{"path":"src/java/org/apache/solr/request/LocalSolrQueryRequest#makeParams(String,String,int,int,Map).mjava","commits":[{"id":"44f497c313977be641ddf24aab74b30e6de834d8","date":1156361697,"type":0,"author":"Yonik Seeley","isMerge":false,"pathNew":"src/java/org/apache/solr/request/LocalSolrQueryRequest#makeParams(String,String,int,int,Map).mjava","pathOld":"/dev/null","sourceNew":"  protected static SolrParams makeParams(String query, String qtype, int start, int limit, Map args) {\n    Map<String,String[]> map = new HashMap<String,String[]>();\n    for (Iterator iter = args.entrySet().iterator(); iter.hasNext();) {\n      Map.Entry e = (Map.Entry)iter.next();\n      String k = e.getKey().toString();\n      Object v = e.getValue();\n      if (v instanceof String[]) map.put(k,(String[])v);\n      else map.put(k,new String[]{v.toString()});\n    }\n    if (query!=null) map.put(SolrParams.Q, new String[]{query});\n    if (qtype!=null) map.put(SolrParams.QT, new String[]{qtype});\n    map.put(SolrParams.START, new String[]{Integer.toString(start)});\n    map.put(SolrParams.ROWS, new String[]{Integer.toString(limit)});\n    return new MultiMapSolrParams(map);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c4fe52b26cfcf59d6b3f30b128e9f5985f2fa4ef","date":1185993405,"type":3,"author":"Ryan McKinley","isMerge":false,"pathNew":"src/java/org/apache/solr/request/LocalSolrQueryRequest#makeParams(String,String,int,int,Map).mjava","pathOld":"src/java/org/apache/solr/request/LocalSolrQueryRequest#makeParams(String,String,int,int,Map).mjava","sourceNew":"  protected static SolrParams makeParams(String query, String qtype, int start, int limit, Map args) {\n    Map<String,String[]> map = new HashMap<String,String[]>();\n    for (Iterator iter = args.entrySet().iterator(); iter.hasNext();) {\n      Map.Entry e = (Map.Entry)iter.next();\n      String k = e.getKey().toString();\n      Object v = e.getValue();\n      if (v instanceof String[]) map.put(k,(String[])v);\n      else map.put(k,new String[]{v.toString()});\n    }\n    if (query!=null) map.put(CommonParams.Q, new String[]{query});\n    if (qtype!=null) map.put(CommonParams.QT, new String[]{qtype});\n    map.put(CommonParams.START, new String[]{Integer.toString(start)});\n    map.put(CommonParams.ROWS, new String[]{Integer.toString(limit)});\n    return new MultiMapSolrParams(map);\n  }\n\n","sourceOld":"  protected static SolrParams makeParams(String query, String qtype, int start, int limit, Map args) {\n    Map<String,String[]> map = new HashMap<String,String[]>();\n    for (Iterator iter = args.entrySet().iterator(); iter.hasNext();) {\n      Map.Entry e = (Map.Entry)iter.next();\n      String k = e.getKey().toString();\n      Object v = e.getValue();\n      if (v instanceof String[]) map.put(k,(String[])v);\n      else map.put(k,new String[]{v.toString()});\n    }\n    if (query!=null) map.put(SolrParams.Q, new String[]{query});\n    if (qtype!=null) map.put(SolrParams.QT, new String[]{qtype});\n    map.put(SolrParams.START, new String[]{Integer.toString(start)});\n    map.put(SolrParams.ROWS, new String[]{Integer.toString(limit)});\n    return new MultiMapSolrParams(map);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ad94625fb8d088209f46650c8097196fec67f00c","date":1453508319,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/src/java/org/apache/solr/request/LocalSolrQueryRequest#makeParams(String,String,int,int,Map).mjava","pathOld":"src/java/org/apache/solr/request/LocalSolrQueryRequest#makeParams(String,String,int,int,Map).mjava","sourceNew":"  protected static SolrParams makeParams(String query, String qtype, int start, int limit, Map args) {\n    Map<String,String[]> map = new HashMap<String,String[]>();\n    for (Iterator iter = args.entrySet().iterator(); iter.hasNext();) {\n      Map.Entry e = (Map.Entry)iter.next();\n      String k = e.getKey().toString();\n      Object v = e.getValue();\n      if (v instanceof String[]) map.put(k,(String[])v);\n      else map.put(k,new String[]{v.toString()});\n    }\n    if (query!=null) map.put(CommonParams.Q, new String[]{query});\n    if (qtype!=null) map.put(CommonParams.QT, new String[]{qtype});\n    map.put(CommonParams.START, new String[]{Integer.toString(start)});\n    map.put(CommonParams.ROWS, new String[]{Integer.toString(limit)});\n    return new MultiMapSolrParams(map);\n  }\n\n","sourceOld":"  protected static SolrParams makeParams(String query, String qtype, int start, int limit, Map args) {\n    Map<String,String[]> map = new HashMap<String,String[]>();\n    for (Iterator iter = args.entrySet().iterator(); iter.hasNext();) {\n      Map.Entry e = (Map.Entry)iter.next();\n      String k = e.getKey().toString();\n      Object v = e.getValue();\n      if (v instanceof String[]) map.put(k,(String[])v);\n      else map.put(k,new String[]{v.toString()});\n    }\n    if (query!=null) map.put(CommonParams.Q, new String[]{query});\n    if (qtype!=null) map.put(CommonParams.QT, new String[]{qtype});\n    map.put(CommonParams.START, new String[]{Integer.toString(start)});\n    map.put(CommonParams.ROWS, new String[]{Integer.toString(limit)});\n    return new MultiMapSolrParams(map);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"c4fe52b26cfcf59d6b3f30b128e9f5985f2fa4ef":["44f497c313977be641ddf24aab74b30e6de834d8"],"44f497c313977be641ddf24aab74b30e6de834d8":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"ad94625fb8d088209f46650c8097196fec67f00c":["c4fe52b26cfcf59d6b3f30b128e9f5985f2fa4ef"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"c4fe52b26cfcf59d6b3f30b128e9f5985f2fa4ef":["ad94625fb8d088209f46650c8097196fec67f00c"],"44f497c313977be641ddf24aab74b30e6de834d8":["c4fe52b26cfcf59d6b3f30b128e9f5985f2fa4ef"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["44f497c313977be641ddf24aab74b30e6de834d8"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"ad94625fb8d088209f46650c8097196fec67f00c":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["ad94625fb8d088209f46650c8097196fec67f00c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b","a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}