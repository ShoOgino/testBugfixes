{"path":"lucene/facet/src/test/org/apache/lucene/facet/taxonomy/directory/TestDirectoryTaxonomyWriter#testEnsureOpen().mjava","commits":[{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/taxonomy/directory/TestDirectoryTaxonomyWriter#testEnsureOpen().mjava","pathOld":"modules/facet/src/test/org/apache/lucene/facet/taxonomy/directory/TestDirectoryTaxonomyWriter#testEnsureOpen().mjava","sourceNew":"  @Test\n  public void testEnsureOpen() throws Exception {\n    // verifies that an exception is thrown if DTW was closed\n    Directory dir = newDirectory();\n    DirectoryTaxonomyWriter dtw = new DirectoryTaxonomyWriter(dir);\n    dtw.close();\n    try {\n      dtw.addCategory(new CategoryPath(\"a\"));\n      fail(\"should not have succeeded to add a category following close.\");\n    } catch (AlreadyClosedException e) {\n      // expected\n    }\n    dir.close();\n  }\n\n","sourceOld":"  @Test\n  public void testEnsureOpen() throws Exception {\n    // verifies that an exception is thrown if DTW was closed\n    Directory dir = newDirectory();\n    DirectoryTaxonomyWriter dtw = new DirectoryTaxonomyWriter(dir);\n    dtw.close();\n    try {\n      dtw.addCategory(new CategoryPath(\"a\"));\n      fail(\"should not have succeeded to add a category following close.\");\n    } catch (AlreadyClosedException e) {\n      // expected\n    }\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c190847801a50f4dd20fd639bdc29b54ea3b288b","date":1384461522,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/taxonomy/directory/TestDirectoryTaxonomyWriter#testEnsureOpen().mjava","pathOld":"lucene/facet/src/test/org/apache/lucene/facet/taxonomy/directory/TestDirectoryTaxonomyWriter#testEnsureOpen().mjava","sourceNew":"  @Test\n  public void testEnsureOpen() throws Exception {\n    // verifies that an exception is thrown if DTW was closed\n    Directory dir = newDirectory();\n    DirectoryTaxonomyWriter dtw = new DirectoryTaxonomyWriter(dir);\n    dtw.close();\n    try {\n      dtw.addCategory(new FacetLabel(\"a\"));\n      fail(\"should not have succeeded to add a category following close.\");\n    } catch (AlreadyClosedException e) {\n      // expected\n    }\n    dir.close();\n  }\n\n","sourceOld":"  @Test\n  public void testEnsureOpen() throws Exception {\n    // verifies that an exception is thrown if DTW was closed\n    Directory dir = newDirectory();\n    DirectoryTaxonomyWriter dtw = new DirectoryTaxonomyWriter(dir);\n    dtw.close();\n    try {\n      dtw.addCategory(new CategoryPath(\"a\"));\n      fail(\"should not have succeeded to add a category following close.\");\n    } catch (AlreadyClosedException e) {\n      // expected\n    }\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"3cc728b07df73b197e6d940d27f9b08b63918f13","date":1388834348,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/taxonomy/directory/TestDirectoryTaxonomyWriter#testEnsureOpen().mjava","pathOld":"lucene/facet/src/test/org/apache/lucene/facet/taxonomy/directory/TestDirectoryTaxonomyWriter#testEnsureOpen().mjava","sourceNew":"  @Test\n  public void testEnsureOpen() throws Exception {\n    // verifies that an exception is thrown if DTW was closed\n    Directory dir = newDirectory();\n    DirectoryTaxonomyWriter dtw = new DirectoryTaxonomyWriter(dir);\n    dtw.close();\n    try {\n      dtw.addCategory(new FacetLabel(\"a\"));\n      fail(\"should not have succeeded to add a category following close.\");\n    } catch (AlreadyClosedException e) {\n      // expected\n    }\n    dir.close();\n  }\n\n","sourceOld":"  @Test\n  public void testEnsureOpen() throws Exception {\n    // verifies that an exception is thrown if DTW was closed\n    Directory dir = newDirectory();\n    DirectoryTaxonomyWriter dtw = new DirectoryTaxonomyWriter(dir);\n    dtw.close();\n    try {\n      dtw.addCategory(new CategoryPath(\"a\"));\n      fail(\"should not have succeeded to add a category following close.\");\n    } catch (AlreadyClosedException e) {\n      // expected\n    }\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"05fe562aa248790944d43cdd478f512572835ba0","date":1455901667,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/taxonomy/directory/TestDirectoryTaxonomyWriter#testEnsureOpen().mjava","pathOld":"lucene/facet/src/test/org/apache/lucene/facet/taxonomy/directory/TestDirectoryTaxonomyWriter#testEnsureOpen().mjava","sourceNew":"  @Test\n  public void testEnsureOpen() throws Exception {\n    // verifies that an exception is thrown if DTW was closed\n    Directory dir = newDirectory();\n    DirectoryTaxonomyWriter dtw = new DirectoryTaxonomyWriter(dir);\n    dtw.close();\n    // should not succeed to add a category following close.\n    expectThrows(AlreadyClosedException.class, () -> {\n      dtw.addCategory(new FacetLabel(\"a\"));\n    });\n\n    dir.close();\n  }\n\n","sourceOld":"  @Test\n  public void testEnsureOpen() throws Exception {\n    // verifies that an exception is thrown if DTW was closed\n    Directory dir = newDirectory();\n    DirectoryTaxonomyWriter dtw = new DirectoryTaxonomyWriter(dir);\n    dtw.close();\n    try {\n      dtw.addCategory(new FacetLabel(\"a\"));\n      fail(\"should not have succeeded to add a category following close.\");\n    } catch (AlreadyClosedException e) {\n      // expected\n    }\n    dir.close();\n  }\n\n","bugFix":["ea12b2546032c4f36b75a21b68c0b64334e31e88"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"05fe562aa248790944d43cdd478f512572835ba0":["3cc728b07df73b197e6d940d27f9b08b63918f13"],"3cc728b07df73b197e6d940d27f9b08b63918f13":["b89678825b68eccaf09e6ab71675fc0b0af1e099","c190847801a50f4dd20fd639bdc29b54ea3b288b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["05fe562aa248790944d43cdd478f512572835ba0"],"c190847801a50f4dd20fd639bdc29b54ea3b288b":["b89678825b68eccaf09e6ab71675fc0b0af1e099"]},"commit2Childs":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["3cc728b07df73b197e6d940d27f9b08b63918f13","c190847801a50f4dd20fd639bdc29b54ea3b288b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"05fe562aa248790944d43cdd478f512572835ba0":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3cc728b07df73b197e6d940d27f9b08b63918f13":["05fe562aa248790944d43cdd478f512572835ba0"],"c190847801a50f4dd20fd639bdc29b54ea3b288b":["3cc728b07df73b197e6d940d27f9b08b63918f13"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}