{"path":"solr/core/src/java/org/apache/solr/cloud/OverseerElectionContext[ElectionContext]#OverseerElectionContext(SolrZkClient,Overseer,String).mjava","commits":[{"id":"938e4fd7b1e4b34da1650edba7471764bbfaefde","date":1344033248,"type":0,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/OverseerElectionContext[ElectionContext]#OverseerElectionContext(SolrZkClient,Overseer,String).mjava","pathOld":"/dev/null","sourceNew":"  public OverseerElectionContext(SolrZkClient zkClient, Overseer overseer, final String zkNodeName) {\n    super(zkNodeName, \"/overseer_elect\", \"/overseer_elect/leader\", null, zkClient);\n    this.overseer = overseer;\n    this.zkClient = zkClient;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8fd5be977c105554c6a7b68afcdbc511439723ab","date":1344115570,"type":0,"author":"Michael McCandless","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/cloud/OverseerElectionContext[ElectionContext]#OverseerElectionContext(SolrZkClient,Overseer,String).mjava","pathOld":"/dev/null","sourceNew":"  public OverseerElectionContext(SolrZkClient zkClient, Overseer overseer, final String zkNodeName) {\n    super(zkNodeName, \"/overseer_elect\", \"/overseer_elect/leader\", null, zkClient);\n    this.overseer = overseer;\n    this.zkClient = zkClient;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d6f074e73200c07d54f242d3880a8da5a35ff97b","date":1344507653,"type":0,"author":"Uwe Schindler","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/cloud/OverseerElectionContext[ElectionContext]#OverseerElectionContext(SolrZkClient,Overseer,String).mjava","pathOld":"/dev/null","sourceNew":"  public OverseerElectionContext(SolrZkClient zkClient, Overseer overseer, final String zkNodeName) {\n    super(zkNodeName, \"/overseer_elect\", \"/overseer_elect/leader\", null, zkClient);\n    this.overseer = overseer;\n    this.zkClient = zkClient;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a219a0b086b948977c595b608d1ca4195de2d1f3","date":1388363759,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/OverseerElectionContext[ElectionContext]#OverseerElectionContext(SolrZkClient,Overseer,String).mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/OverseerElectionContext[ElectionContext]#OverseerElectionContext(SolrZkClient,Overseer,String).mjava","sourceNew":"  public OverseerElectionContext(SolrZkClient zkClient, Overseer overseer, final String zkNodeName) {\n    super(zkNodeName, \"/overseer_elect\", \"/overseer_elect/leader\", null, zkClient);\n    this.overseer = overseer;\n    this.zkClient = zkClient;\n    try {\n      new ZkCmdExecutor(zkClient.getZkClientTimeout()).ensureExists(\"/overseer_elect\", zkClient);\n    } catch (KeeperException e) {\n      throw new SolrException(ErrorCode.SERVER_ERROR, e);\n    } catch (InterruptedException e) {\n      Thread.currentThread().interrupt();\n      throw new SolrException(ErrorCode.SERVER_ERROR, e);\n    }\n  }\n\n","sourceOld":"  public OverseerElectionContext(SolrZkClient zkClient, Overseer overseer, final String zkNodeName) {\n    super(zkNodeName, \"/overseer_elect\", \"/overseer_elect/leader\", null, zkClient);\n    this.overseer = overseer;\n    this.zkClient = zkClient;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"44de42d869f7d8e5235d43c4ad9a99f520363a2f","date":1389871557,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/OverseerElectionContext[ElectionContext]#OverseerElectionContext(SolrZkClient,Overseer,String).mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/OverseerElectionContext[ElectionContext]#OverseerElectionContext(SolrZkClient,Overseer,String).mjava","sourceNew":"  public OverseerElectionContext(SolrZkClient zkClient, Overseer overseer, final String zkNodeName) {\n    super(zkNodeName,PATH , PATH+\"/leader\", null, zkClient);\n    this.overseer = overseer;\n    this.zkClient = zkClient;\n    try {\n      new ZkCmdExecutor(zkClient.getZkClientTimeout()).ensureExists(\"/overseer_elect\", zkClient);\n    } catch (KeeperException e) {\n      throw new SolrException(ErrorCode.SERVER_ERROR, e);\n    } catch (InterruptedException e) {\n      Thread.currentThread().interrupt();\n      throw new SolrException(ErrorCode.SERVER_ERROR, e);\n    }\n  }\n\n","sourceOld":"  public OverseerElectionContext(SolrZkClient zkClient, Overseer overseer, final String zkNodeName) {\n    super(zkNodeName, \"/overseer_elect\", \"/overseer_elect/leader\", null, zkClient);\n    this.overseer = overseer;\n    this.zkClient = zkClient;\n    try {\n      new ZkCmdExecutor(zkClient.getZkClientTimeout()).ensureExists(\"/overseer_elect\", zkClient);\n    } catch (KeeperException e) {\n      throw new SolrException(ErrorCode.SERVER_ERROR, e);\n    } catch (InterruptedException e) {\n      Thread.currentThread().interrupt();\n      throw new SolrException(ErrorCode.SERVER_ERROR, e);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5551d21c759979ad637581208f5ff5bd7497b5d7","date":1447783672,"type":3,"author":"Varun Thacker","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/OverseerElectionContext[ElectionContext]#OverseerElectionContext(SolrZkClient,Overseer,String).mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/OverseerElectionContext[ElectionContext]#OverseerElectionContext(SolrZkClient,Overseer,String).mjava","sourceNew":"  public OverseerElectionContext(SolrZkClient zkClient, Overseer overseer, final String zkNodeName) {\n    super(zkNodeName, OVERSEER_ELECT, OVERSEER_ELECT + \"/leader\", null, zkClient);\n    this.overseer = overseer;\n    this.zkClient = zkClient;\n    try {\n      new ZkCmdExecutor(zkClient.getZkClientTimeout()).ensureExists(OVERSEER_ELECT, zkClient);\n    } catch (KeeperException e) {\n      throw new SolrException(ErrorCode.SERVER_ERROR, e);\n    } catch (InterruptedException e) {\n      Thread.currentThread().interrupt();\n      throw new SolrException(ErrorCode.SERVER_ERROR, e);\n    }\n  }\n\n","sourceOld":"  public OverseerElectionContext(SolrZkClient zkClient, Overseer overseer, final String zkNodeName) {\n    super(zkNodeName,PATH , PATH+\"/leader\", null, zkClient);\n    this.overseer = overseer;\n    this.zkClient = zkClient;\n    try {\n      new ZkCmdExecutor(zkClient.getZkClientTimeout()).ensureExists(\"/overseer_elect\", zkClient);\n    } catch (KeeperException e) {\n      throw new SolrException(ErrorCode.SERVER_ERROR, e);\n    } catch (InterruptedException e) {\n      Thread.currentThread().interrupt();\n      throw new SolrException(ErrorCode.SERVER_ERROR, e);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"073f1aa70444ec64f3e216816af2a3b43fa38fe7","date":1488920481,"type":3,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/OverseerElectionContext[ElectionContext]#OverseerElectionContext(SolrZkClient,Overseer,String).mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/OverseerElectionContext[ElectionContext]#OverseerElectionContext(SolrZkClient,Overseer,String).mjava","sourceNew":"  public OverseerElectionContext(SolrZkClient zkClient, Overseer overseer, final String zkNodeName) {\n    super(zkNodeName, Overseer.OVERSEER_ELECT, Overseer.OVERSEER_ELECT + \"/leader\", null, zkClient);\n    this.overseer = overseer;\n    this.zkClient = zkClient;\n    try {\n      new ZkCmdExecutor(zkClient.getZkClientTimeout()).ensureExists(Overseer.OVERSEER_ELECT, zkClient);\n    } catch (KeeperException e) {\n      throw new SolrException(ErrorCode.SERVER_ERROR, e);\n    } catch (InterruptedException e) {\n      Thread.currentThread().interrupt();\n      throw new SolrException(ErrorCode.SERVER_ERROR, e);\n    }\n  }\n\n","sourceOld":"  public OverseerElectionContext(SolrZkClient zkClient, Overseer overseer, final String zkNodeName) {\n    super(zkNodeName, OVERSEER_ELECT, OVERSEER_ELECT + \"/leader\", null, zkClient);\n    this.overseer = overseer;\n    this.zkClient = zkClient;\n    try {\n      new ZkCmdExecutor(zkClient.getZkClientTimeout()).ensureExists(OVERSEER_ELECT, zkClient);\n    } catch (KeeperException e) {\n      throw new SolrException(ErrorCode.SERVER_ERROR, e);\n    } catch (InterruptedException e) {\n      Thread.currentThread().interrupt();\n      throw new SolrException(ErrorCode.SERVER_ERROR, e);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ba33781da68babcaa5828121b443d3eb5c9d8480","date":1590595589,"type":5,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/OverseerElectionContext#OverseerElectionContext(SolrZkClient,Overseer,String).mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/OverseerElectionContext[ElectionContext]#OverseerElectionContext(SolrZkClient,Overseer,String).mjava","sourceNew":"  public OverseerElectionContext(SolrZkClient zkClient, Overseer overseer, final String zkNodeName) {\n    super(zkNodeName, Overseer.OVERSEER_ELECT, Overseer.OVERSEER_ELECT + \"/leader\", null, zkClient);\n    this.overseer = overseer;\n    this.zkClient = zkClient;\n    try {\n      new ZkCmdExecutor(zkClient.getZkClientTimeout()).ensureExists(Overseer.OVERSEER_ELECT, zkClient);\n    } catch (KeeperException e) {\n      throw new SolrException(ErrorCode.SERVER_ERROR, e);\n    } catch (InterruptedException e) {\n      Thread.currentThread().interrupt();\n      throw new SolrException(ErrorCode.SERVER_ERROR, e);\n    }\n  }\n\n","sourceOld":"  public OverseerElectionContext(SolrZkClient zkClient, Overseer overseer, final String zkNodeName) {\n    super(zkNodeName, Overseer.OVERSEER_ELECT, Overseer.OVERSEER_ELECT + \"/leader\", null, zkClient);\n    this.overseer = overseer;\n    this.zkClient = zkClient;\n    try {\n      new ZkCmdExecutor(zkClient.getZkClientTimeout()).ensureExists(Overseer.OVERSEER_ELECT, zkClient);\n    } catch (KeeperException e) {\n      throw new SolrException(ErrorCode.SERVER_ERROR, e);\n    } catch (InterruptedException e) {\n      Thread.currentThread().interrupt();\n      throw new SolrException(ErrorCode.SERVER_ERROR, e);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"5551d21c759979ad637581208f5ff5bd7497b5d7":["44de42d869f7d8e5235d43c4ad9a99f520363a2f"],"938e4fd7b1e4b34da1650edba7471764bbfaefde":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"073f1aa70444ec64f3e216816af2a3b43fa38fe7":["5551d21c759979ad637581208f5ff5bd7497b5d7"],"d6f074e73200c07d54f242d3880a8da5a35ff97b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","938e4fd7b1e4b34da1650edba7471764bbfaefde"],"a219a0b086b948977c595b608d1ca4195de2d1f3":["938e4fd7b1e4b34da1650edba7471764bbfaefde"],"8fd5be977c105554c6a7b68afcdbc511439723ab":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","938e4fd7b1e4b34da1650edba7471764bbfaefde"],"ba33781da68babcaa5828121b443d3eb5c9d8480":["073f1aa70444ec64f3e216816af2a3b43fa38fe7"],"44de42d869f7d8e5235d43c4ad9a99f520363a2f":["a219a0b086b948977c595b608d1ca4195de2d1f3"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["ba33781da68babcaa5828121b443d3eb5c9d8480"]},"commit2Childs":{"5551d21c759979ad637581208f5ff5bd7497b5d7":["073f1aa70444ec64f3e216816af2a3b43fa38fe7"],"938e4fd7b1e4b34da1650edba7471764bbfaefde":["d6f074e73200c07d54f242d3880a8da5a35ff97b","a219a0b086b948977c595b608d1ca4195de2d1f3","8fd5be977c105554c6a7b68afcdbc511439723ab"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["938e4fd7b1e4b34da1650edba7471764bbfaefde","d6f074e73200c07d54f242d3880a8da5a35ff97b","8fd5be977c105554c6a7b68afcdbc511439723ab"],"073f1aa70444ec64f3e216816af2a3b43fa38fe7":["ba33781da68babcaa5828121b443d3eb5c9d8480"],"d6f074e73200c07d54f242d3880a8da5a35ff97b":[],"a219a0b086b948977c595b608d1ca4195de2d1f3":["44de42d869f7d8e5235d43c4ad9a99f520363a2f"],"8fd5be977c105554c6a7b68afcdbc511439723ab":[],"44de42d869f7d8e5235d43c4ad9a99f520363a2f":["5551d21c759979ad637581208f5ff5bd7497b5d7"],"ba33781da68babcaa5828121b443d3eb5c9d8480":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["d6f074e73200c07d54f242d3880a8da5a35ff97b","8fd5be977c105554c6a7b68afcdbc511439723ab","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}