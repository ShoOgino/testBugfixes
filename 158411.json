{"path":"lucene/src/java/org/apache/lucene/analysis/Analyzer.TokenStreamComponents#reset(Reader).mjava","commits":[{"id":"2f49143da0a5d278a72f741432047fcfa6da996e","date":1316927425,"type":1,"author":"Christopher John Male","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/analysis/Analyzer.TokenStreamComponents#reset(Reader).mjava","pathOld":"lucene/src/java/org/apache/lucene/analysis/ReusableAnalyzerBase.TokenStreamComponents#reset(Reader).mjava","sourceNew":"    /**\n     * Resets the encapsulated components with the given reader. If the components\n     * cannot be reset, an Exception should be thrown.\n     * \n     * @param reader\n     *          a reader to reset the source component\n     * @throws IOException\n     *           if the component's reset method throws an {@link IOException}\n     */\n    protected void reset(final Reader reader) throws IOException {\n      source.reset(reader);\n    }\n\n","sourceOld":"    /**\n     * Resets the encapsulated components with the given reader. If the components\n     * cannot be reset, an Exception should be thrown.\n     * \n     * @param reader\n     *          a reader to reset the source component\n     * @throws IOException\n     *           if the component's reset method throws an {@link IOException}\n     */\n    protected void reset(final Reader reader) throws IOException {\n      source.reset(reader);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":5,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/analysis/Analyzer.TokenStreamComponents#reset(Reader).mjava","pathOld":"lucene/src/java/org/apache/lucene/analysis/Analyzer.TokenStreamComponents#reset(Reader).mjava","sourceNew":"    /**\n     * Resets the encapsulated components with the given reader. If the components\n     * cannot be reset, an Exception should be thrown.\n     * \n     * @param reader\n     *          a reader to reset the source component\n     * @throws IOException\n     *           if the component's reset method throws an {@link IOException}\n     */\n    protected void reset(final Reader reader) throws IOException {\n      source.reset(reader);\n    }\n\n","sourceOld":"    /**\n     * Resets the encapsulated components with the given reader. If the components\n     * cannot be reset, an Exception should be thrown.\n     * \n     * @param reader\n     *          a reader to reset the source component\n     * @throws IOException\n     *           if the component's reset method throws an {@link IOException}\n     */\n    protected void reset(final Reader reader) throws IOException {\n      source.reset(reader);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["2f49143da0a5d278a72f741432047fcfa6da996e"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"2f49143da0a5d278a72f741432047fcfa6da996e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"]},"commit2Childs":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["2f49143da0a5d278a72f741432047fcfa6da996e"],"2f49143da0a5d278a72f741432047fcfa6da996e":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}