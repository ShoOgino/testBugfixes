{"path":"lucene/core/src/java/org/apache/lucene/util/FixedBitSet#unionCount(FixedBitSet,FixedBitSet).mjava","commits":[{"id":"a69cf7f1b4cac5d5b1363402b565cd535f13e6a1","date":1392536197,"type":0,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/FixedBitSet#unionCount(FixedBitSet,FixedBitSet).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Returns the popcount or cardinality of the union of the two sets. Neither\n   * set is modified.\n   */\n  public static long unionCount(FixedBitSet a, FixedBitSet b) {\n    long tot = BitUtil.pop_union(a.bits, b.bits, 0, Math.min(a.numWords, b.numWords));\n    if (a.numWords < b.numWords) {\n      tot += BitUtil.pop_array(b.bits, a.numWords, b.numWords - a.numWords);\n    } else if (a.numWords > b.numWords) {\n      tot += BitUtil.pop_array(a.bits, b.numWords, a.numWords - b.numWords);\n    }\n    return tot;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"af918c7c328775f9fadd5870c21f0fafc2a059cc","date":1430253435,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/FixedBitSet#unionCount(FixedBitSet,FixedBitSet).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/FixedBitSet#unionCount(FixedBitSet,FixedBitSet).mjava","sourceNew":"  /**\n   * Returns the popcount or cardinality of the union of the two sets. Neither\n   * set is modified.\n   */\n  public static long unionCount(FixedBitSet a, FixedBitSet b) {\n    // Depends on the ghost bits being clear!\n    long tot = BitUtil.pop_union(a.bits, b.bits, 0, Math.min(a.numWords, b.numWords));\n    if (a.numWords < b.numWords) {\n      tot += BitUtil.pop_array(b.bits, a.numWords, b.numWords - a.numWords);\n    } else if (a.numWords > b.numWords) {\n      tot += BitUtil.pop_array(a.bits, b.numWords, a.numWords - b.numWords);\n    }\n    return tot;\n  }\n\n","sourceOld":"  /**\n   * Returns the popcount or cardinality of the union of the two sets. Neither\n   * set is modified.\n   */\n  public static long unionCount(FixedBitSet a, FixedBitSet b) {\n    long tot = BitUtil.pop_union(a.bits, b.bits, 0, Math.min(a.numWords, b.numWords));\n    if (a.numWords < b.numWords) {\n      tot += BitUtil.pop_array(b.bits, a.numWords, b.numWords - a.numWords);\n    } else if (a.numWords > b.numWords) {\n      tot += BitUtil.pop_array(a.bits, b.numWords, a.numWords - b.numWords);\n    }\n    return tot;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a69cf7f1b4cac5d5b1363402b565cd535f13e6a1":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"af918c7c328775f9fadd5870c21f0fafc2a059cc":["a69cf7f1b4cac5d5b1363402b565cd535f13e6a1"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["af918c7c328775f9fadd5870c21f0fafc2a059cc"]},"commit2Childs":{"a69cf7f1b4cac5d5b1363402b565cd535f13e6a1":["af918c7c328775f9fadd5870c21f0fafc2a059cc"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["a69cf7f1b4cac5d5b1363402b565cd535f13e6a1"],"af918c7c328775f9fadd5870c21f0fafc2a059cc":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}