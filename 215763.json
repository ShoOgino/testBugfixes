{"path":"lucene/facet/src/test/org/apache/lucene/facet/taxonomy/TestTaxonomyFacetSumValueSource#testSumScoreAggregator().mjava","commits":[{"id":"4edc984f0f4ac77c37e48ace2932f780f888453c","date":1388475218,"type":1,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/taxonomy/TestTaxonomyFacetSumValueSource#testSumScoreAggregator().mjava","pathOld":"lucene/facet/src/test/org/apache/lucene/facet/TestTaxonomyFacetSumValueSource#testSumScoreAggregator().mjava","sourceNew":"  public void testSumScoreAggregator() throws Exception {\n    Directory indexDir = newDirectory();\n    Directory taxoDir = newDirectory();\n\n    DirectoryTaxonomyWriter taxoWriter = new DirectoryTaxonomyWriter(taxoDir);\n    IndexWriter iw = new IndexWriter(indexDir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random())));\n\n    FacetsConfig config = new FacetsConfig();\n\n    for(int i = atLeast(30); i > 0; --i) {\n      Document doc = new Document();\n      if (random().nextBoolean()) { // don't match all documents\n        doc.add(new StringField(\"f\", \"v\", Field.Store.NO));\n      }\n      doc.add(new FacetField(\"dim\", \"a\"));\n      iw.addDocument(config.build(taxoWriter, doc));\n    }\n    \n    DirectoryReader r = DirectoryReader.open(iw, true);\n    DirectoryTaxonomyReader taxoReader = new DirectoryTaxonomyReader(taxoWriter);\n    \n    FacetsCollector fc = new FacetsCollector(true);\n    ConstantScoreQuery csq = new ConstantScoreQuery(new MatchAllDocsQuery());\n    csq.setBoost(2.0f);\n    \n    TopDocs td = FacetsCollector.search(newSearcher(r), csq, 10, fc);\n\n    Facets facets = new TaxonomyFacetSumValueSource(taxoReader, config, fc, new TaxonomyFacetSumValueSource.ScoreValueSource());\n    \n    int expected = (int) (td.getMaxScore() * td.totalHits);\n    assertEquals(expected, facets.getSpecificValue(\"dim\", \"a\").intValue());\n    \n    IOUtils.close(iw, taxoWriter, taxoReader, taxoDir, r, indexDir);\n  }\n\n","sourceOld":"  public void testSumScoreAggregator() throws Exception {\n    Directory indexDir = newDirectory();\n    Directory taxoDir = newDirectory();\n\n    DirectoryTaxonomyWriter taxoWriter = new DirectoryTaxonomyWriter(taxoDir);\n    IndexWriter iw = new IndexWriter(indexDir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random())));\n\n    FacetsConfig config = new FacetsConfig();\n\n    for(int i = atLeast(30); i > 0; --i) {\n      Document doc = new Document();\n      if (random().nextBoolean()) { // don't match all documents\n        doc.add(new StringField(\"f\", \"v\", Field.Store.NO));\n      }\n      doc.add(new FacetField(\"dim\", \"a\"));\n      iw.addDocument(config.build(taxoWriter, doc));\n    }\n    \n    DirectoryReader r = DirectoryReader.open(iw, true);\n    DirectoryTaxonomyReader taxoReader = new DirectoryTaxonomyReader(taxoWriter);\n    \n    FacetsCollector fc = new FacetsCollector(true);\n    ConstantScoreQuery csq = new ConstantScoreQuery(new MatchAllDocsQuery());\n    csq.setBoost(2.0f);\n    \n    TopDocs td = FacetsCollector.search(newSearcher(r), csq, 10, fc);\n\n    Facets facets = new TaxonomyFacetSumValueSource(taxoReader, config, fc, new TaxonomyFacetSumValueSource.ScoreValueSource());\n    \n    int expected = (int) (td.getMaxScore() * td.totalHits);\n    assertEquals(expected, facets.getSpecificValue(\"dim\", \"a\").intValue());\n    \n    IOUtils.close(iw, taxoWriter, taxoReader, taxoDir, r, indexDir);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3cc728b07df73b197e6d940d27f9b08b63918f13","date":1388834348,"type":0,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/taxonomy/TestTaxonomyFacetSumValueSource#testSumScoreAggregator().mjava","pathOld":"/dev/null","sourceNew":"  public void testSumScoreAggregator() throws Exception {\n    Directory indexDir = newDirectory();\n    Directory taxoDir = newDirectory();\n\n    DirectoryTaxonomyWriter taxoWriter = new DirectoryTaxonomyWriter(taxoDir);\n    IndexWriter iw = new IndexWriter(indexDir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random())));\n\n    FacetsConfig config = new FacetsConfig();\n\n    for(int i = atLeast(30); i > 0; --i) {\n      Document doc = new Document();\n      if (random().nextBoolean()) { // don't match all documents\n        doc.add(new StringField(\"f\", \"v\", Field.Store.NO));\n      }\n      doc.add(new FacetField(\"dim\", \"a\"));\n      iw.addDocument(config.build(taxoWriter, doc));\n    }\n    \n    DirectoryReader r = DirectoryReader.open(iw, true);\n    DirectoryTaxonomyReader taxoReader = new DirectoryTaxonomyReader(taxoWriter);\n    \n    FacetsCollector fc = new FacetsCollector(true);\n    ConstantScoreQuery csq = new ConstantScoreQuery(new MatchAllDocsQuery());\n    csq.setBoost(2.0f);\n    \n    TopDocs td = FacetsCollector.search(newSearcher(r), csq, 10, fc);\n\n    Facets facets = new TaxonomyFacetSumValueSource(taxoReader, config, fc, new TaxonomyFacetSumValueSource.ScoreValueSource());\n    \n    int expected = (int) (td.getMaxScore() * td.totalHits);\n    assertEquals(expected, facets.getSpecificValue(\"dim\", \"a\").intValue());\n    \n    IOUtils.close(iw, taxoWriter, taxoReader, taxoDir, r, indexDir);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ae14298f4eec6d5faee6a149f88ba57d14a6f21a","date":1396971290,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/taxonomy/TestTaxonomyFacetSumValueSource#testSumScoreAggregator().mjava","pathOld":"lucene/facet/src/test/org/apache/lucene/facet/taxonomy/TestTaxonomyFacetSumValueSource#testSumScoreAggregator().mjava","sourceNew":"  public void testSumScoreAggregator() throws Exception {\n    Directory indexDir = newDirectory();\n    Directory taxoDir = newDirectory();\n\n    DirectoryTaxonomyWriter taxoWriter = new DirectoryTaxonomyWriter(taxoDir);\n    IndexWriter iw = new IndexWriter(indexDir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random())));\n\n    FacetsConfig config = new FacetsConfig();\n\n    for(int i = atLeast(30); i > 0; --i) {\n      Document doc = new Document();\n      if (random().nextBoolean()) { // don't match all documents\n        doc.add(new StringField(\"f\", \"v\", Field.Store.NO));\n      }\n      doc.add(new FacetField(\"dim\", \"a\"));\n      iw.addDocument(config.build(taxoWriter, doc));\n    }\n    \n    DirectoryReader r = DirectoryReader.open(iw, true);\n    DirectoryTaxonomyReader taxoReader = new DirectoryTaxonomyReader(taxoWriter);\n    \n    FacetsCollector fc = new FacetsCollector(true);\n    ConstantScoreQuery csq = new ConstantScoreQuery(new MatchAllDocsQuery());\n    csq.setBoost(2.0f);\n    \n    TopDocs td = FacetsCollector.search(newSearcher(r), csq, 10, fc);\n\n    Facets facets = new TaxonomyFacetSumValueSource(taxoReader, config, fc, new TaxonomyFacetSumValueSource.ScoreValueSource());\n    \n    int expected = (int) (td.getMaxScore() * td.totalHits);\n    assertEquals(expected, facets.getSpecificValue(\"dim\", \"a\").intValue());\n\n    iw.shutdown();\n    IOUtils.close(taxoWriter, taxoReader, taxoDir, r, indexDir);\n  }\n\n","sourceOld":"  public void testSumScoreAggregator() throws Exception {\n    Directory indexDir = newDirectory();\n    Directory taxoDir = newDirectory();\n\n    DirectoryTaxonomyWriter taxoWriter = new DirectoryTaxonomyWriter(taxoDir);\n    IndexWriter iw = new IndexWriter(indexDir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random())));\n\n    FacetsConfig config = new FacetsConfig();\n\n    for(int i = atLeast(30); i > 0; --i) {\n      Document doc = new Document();\n      if (random().nextBoolean()) { // don't match all documents\n        doc.add(new StringField(\"f\", \"v\", Field.Store.NO));\n      }\n      doc.add(new FacetField(\"dim\", \"a\"));\n      iw.addDocument(config.build(taxoWriter, doc));\n    }\n    \n    DirectoryReader r = DirectoryReader.open(iw, true);\n    DirectoryTaxonomyReader taxoReader = new DirectoryTaxonomyReader(taxoWriter);\n    \n    FacetsCollector fc = new FacetsCollector(true);\n    ConstantScoreQuery csq = new ConstantScoreQuery(new MatchAllDocsQuery());\n    csq.setBoost(2.0f);\n    \n    TopDocs td = FacetsCollector.search(newSearcher(r), csq, 10, fc);\n\n    Facets facets = new TaxonomyFacetSumValueSource(taxoReader, config, fc, new TaxonomyFacetSumValueSource.ScoreValueSource());\n    \n    int expected = (int) (td.getMaxScore() * td.totalHits);\n    assertEquals(expected, facets.getSpecificValue(\"dim\", \"a\").intValue());\n    \n    IOUtils.close(iw, taxoWriter, taxoReader, taxoDir, r, indexDir);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"54a6bea0b991120a99ad0e2f72ae853fd5ecae0e","date":1406737224,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/taxonomy/TestTaxonomyFacetSumValueSource#testSumScoreAggregator().mjava","pathOld":"lucene/facet/src/test/org/apache/lucene/facet/taxonomy/TestTaxonomyFacetSumValueSource#testSumScoreAggregator().mjava","sourceNew":"  public void testSumScoreAggregator() throws Exception {\n    Directory indexDir = newDirectory();\n    Directory taxoDir = newDirectory();\n\n    DirectoryTaxonomyWriter taxoWriter = new DirectoryTaxonomyWriter(taxoDir);\n    IndexWriter iw = new IndexWriter(indexDir, newIndexWriterConfig(new MockAnalyzer(random())));\n\n    FacetsConfig config = new FacetsConfig();\n\n    for(int i = atLeast(30); i > 0; --i) {\n      Document doc = new Document();\n      if (random().nextBoolean()) { // don't match all documents\n        doc.add(new StringField(\"f\", \"v\", Field.Store.NO));\n      }\n      doc.add(new FacetField(\"dim\", \"a\"));\n      iw.addDocument(config.build(taxoWriter, doc));\n    }\n    \n    DirectoryReader r = DirectoryReader.open(iw, true);\n    DirectoryTaxonomyReader taxoReader = new DirectoryTaxonomyReader(taxoWriter);\n    \n    FacetsCollector fc = new FacetsCollector(true);\n    ConstantScoreQuery csq = new ConstantScoreQuery(new MatchAllDocsQuery());\n    csq.setBoost(2.0f);\n    \n    TopDocs td = FacetsCollector.search(newSearcher(r), csq, 10, fc);\n\n    Facets facets = new TaxonomyFacetSumValueSource(taxoReader, config, fc, new TaxonomyFacetSumValueSource.ScoreValueSource());\n    \n    int expected = (int) (td.getMaxScore() * td.totalHits);\n    assertEquals(expected, facets.getSpecificValue(\"dim\", \"a\").intValue());\n\n    iw.shutdown();\n    IOUtils.close(taxoWriter, taxoReader, taxoDir, r, indexDir);\n  }\n\n","sourceOld":"  public void testSumScoreAggregator() throws Exception {\n    Directory indexDir = newDirectory();\n    Directory taxoDir = newDirectory();\n\n    DirectoryTaxonomyWriter taxoWriter = new DirectoryTaxonomyWriter(taxoDir);\n    IndexWriter iw = new IndexWriter(indexDir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random())));\n\n    FacetsConfig config = new FacetsConfig();\n\n    for(int i = atLeast(30); i > 0; --i) {\n      Document doc = new Document();\n      if (random().nextBoolean()) { // don't match all documents\n        doc.add(new StringField(\"f\", \"v\", Field.Store.NO));\n      }\n      doc.add(new FacetField(\"dim\", \"a\"));\n      iw.addDocument(config.build(taxoWriter, doc));\n    }\n    \n    DirectoryReader r = DirectoryReader.open(iw, true);\n    DirectoryTaxonomyReader taxoReader = new DirectoryTaxonomyReader(taxoWriter);\n    \n    FacetsCollector fc = new FacetsCollector(true);\n    ConstantScoreQuery csq = new ConstantScoreQuery(new MatchAllDocsQuery());\n    csq.setBoost(2.0f);\n    \n    TopDocs td = FacetsCollector.search(newSearcher(r), csq, 10, fc);\n\n    Facets facets = new TaxonomyFacetSumValueSource(taxoReader, config, fc, new TaxonomyFacetSumValueSource.ScoreValueSource());\n    \n    int expected = (int) (td.getMaxScore() * td.totalHits);\n    assertEquals(expected, facets.getSpecificValue(\"dim\", \"a\").intValue());\n\n    iw.shutdown();\n    IOUtils.close(taxoWriter, taxoReader, taxoDir, r, indexDir);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d0ef034a4f10871667ae75181537775ddcf8ade4","date":1407610475,"type":3,"author":"Ryan Ernst","isMerge":false,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/taxonomy/TestTaxonomyFacetSumValueSource#testSumScoreAggregator().mjava","pathOld":"lucene/facet/src/test/org/apache/lucene/facet/taxonomy/TestTaxonomyFacetSumValueSource#testSumScoreAggregator().mjava","sourceNew":"  public void testSumScoreAggregator() throws Exception {\n    Directory indexDir = newDirectory();\n    Directory taxoDir = newDirectory();\n\n    DirectoryTaxonomyWriter taxoWriter = new DirectoryTaxonomyWriter(taxoDir);\n    IndexWriter iw = new IndexWriter(indexDir, newIndexWriterConfig(new MockAnalyzer(random())));\n\n    FacetsConfig config = new FacetsConfig();\n\n    for(int i = atLeast(30); i > 0; --i) {\n      Document doc = new Document();\n      if (random().nextBoolean()) { // don't match all documents\n        doc.add(new StringField(\"f\", \"v\", Field.Store.NO));\n      }\n      doc.add(new FacetField(\"dim\", \"a\"));\n      iw.addDocument(config.build(taxoWriter, doc));\n    }\n    \n    DirectoryReader r = DirectoryReader.open(iw, true);\n    DirectoryTaxonomyReader taxoReader = new DirectoryTaxonomyReader(taxoWriter);\n    \n    FacetsCollector fc = new FacetsCollector(true);\n    ConstantScoreQuery csq = new ConstantScoreQuery(new MatchAllDocsQuery());\n    csq.setBoost(2.0f);\n    \n    TopDocs td = FacetsCollector.search(newSearcher(r), csq, 10, fc);\n\n    Facets facets = new TaxonomyFacetSumValueSource(taxoReader, config, fc, new TaxonomyFacetSumValueSource.ScoreValueSource());\n    \n    int expected = (int) (td.getMaxScore() * td.totalHits);\n    assertEquals(expected, facets.getSpecificValue(\"dim\", \"a\").intValue());\n\n    iw.close();\n    IOUtils.close(taxoWriter, taxoReader, taxoDir, r, indexDir);\n  }\n\n","sourceOld":"  public void testSumScoreAggregator() throws Exception {\n    Directory indexDir = newDirectory();\n    Directory taxoDir = newDirectory();\n\n    DirectoryTaxonomyWriter taxoWriter = new DirectoryTaxonomyWriter(taxoDir);\n    IndexWriter iw = new IndexWriter(indexDir, newIndexWriterConfig(new MockAnalyzer(random())));\n\n    FacetsConfig config = new FacetsConfig();\n\n    for(int i = atLeast(30); i > 0; --i) {\n      Document doc = new Document();\n      if (random().nextBoolean()) { // don't match all documents\n        doc.add(new StringField(\"f\", \"v\", Field.Store.NO));\n      }\n      doc.add(new FacetField(\"dim\", \"a\"));\n      iw.addDocument(config.build(taxoWriter, doc));\n    }\n    \n    DirectoryReader r = DirectoryReader.open(iw, true);\n    DirectoryTaxonomyReader taxoReader = new DirectoryTaxonomyReader(taxoWriter);\n    \n    FacetsCollector fc = new FacetsCollector(true);\n    ConstantScoreQuery csq = new ConstantScoreQuery(new MatchAllDocsQuery());\n    csq.setBoost(2.0f);\n    \n    TopDocs td = FacetsCollector.search(newSearcher(r), csq, 10, fc);\n\n    Facets facets = new TaxonomyFacetSumValueSource(taxoReader, config, fc, new TaxonomyFacetSumValueSource.ScoreValueSource());\n    \n    int expected = (int) (td.getMaxScore() * td.totalHits);\n    assertEquals(expected, facets.getSpecificValue(\"dim\", \"a\").intValue());\n\n    iw.shutdown();\n    IOUtils.close(taxoWriter, taxoReader, taxoDir, r, indexDir);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2dfdf766e55e943d942055d7de53c7ad6bc45283","date":1441632886,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/taxonomy/TestTaxonomyFacetSumValueSource#testSumScoreAggregator().mjava","pathOld":"lucene/facet/src/test/org/apache/lucene/facet/taxonomy/TestTaxonomyFacetSumValueSource#testSumScoreAggregator().mjava","sourceNew":"  public void testSumScoreAggregator() throws Exception {\n    Directory indexDir = newDirectory();\n    Directory taxoDir = newDirectory();\n\n    DirectoryTaxonomyWriter taxoWriter = new DirectoryTaxonomyWriter(taxoDir);\n    IndexWriter iw = new IndexWriter(indexDir, newIndexWriterConfig(new MockAnalyzer(random())));\n\n    FacetsConfig config = new FacetsConfig();\n\n    for(int i = atLeast(30); i > 0; --i) {\n      Document doc = new Document();\n      if (random().nextBoolean()) { // don't match all documents\n        doc.add(new StringField(\"f\", \"v\", Field.Store.NO));\n      }\n      doc.add(new FacetField(\"dim\", \"a\"));\n      iw.addDocument(config.build(taxoWriter, doc));\n    }\n    \n    DirectoryReader r = DirectoryReader.open(iw, true);\n    DirectoryTaxonomyReader taxoReader = new DirectoryTaxonomyReader(taxoWriter);\n    \n    FacetsCollector fc = new FacetsCollector(true);\n    BoostQuery csq = new BoostQuery(new ConstantScoreQuery(new MatchAllDocsQuery()), 2f);\n    \n    TopDocs td = FacetsCollector.search(newSearcher(r), csq, 10, fc);\n\n    Facets facets = new TaxonomyFacetSumValueSource(taxoReader, config, fc, new TaxonomyFacetSumValueSource.ScoreValueSource());\n    \n    int expected = (int) (td.getMaxScore() * td.totalHits);\n    assertEquals(expected, facets.getSpecificValue(\"dim\", \"a\").intValue());\n\n    iw.close();\n    IOUtils.close(taxoWriter, taxoReader, taxoDir, r, indexDir);\n  }\n\n","sourceOld":"  public void testSumScoreAggregator() throws Exception {\n    Directory indexDir = newDirectory();\n    Directory taxoDir = newDirectory();\n\n    DirectoryTaxonomyWriter taxoWriter = new DirectoryTaxonomyWriter(taxoDir);\n    IndexWriter iw = new IndexWriter(indexDir, newIndexWriterConfig(new MockAnalyzer(random())));\n\n    FacetsConfig config = new FacetsConfig();\n\n    for(int i = atLeast(30); i > 0; --i) {\n      Document doc = new Document();\n      if (random().nextBoolean()) { // don't match all documents\n        doc.add(new StringField(\"f\", \"v\", Field.Store.NO));\n      }\n      doc.add(new FacetField(\"dim\", \"a\"));\n      iw.addDocument(config.build(taxoWriter, doc));\n    }\n    \n    DirectoryReader r = DirectoryReader.open(iw, true);\n    DirectoryTaxonomyReader taxoReader = new DirectoryTaxonomyReader(taxoWriter);\n    \n    FacetsCollector fc = new FacetsCollector(true);\n    ConstantScoreQuery csq = new ConstantScoreQuery(new MatchAllDocsQuery());\n    csq.setBoost(2.0f);\n    \n    TopDocs td = FacetsCollector.search(newSearcher(r), csq, 10, fc);\n\n    Facets facets = new TaxonomyFacetSumValueSource(taxoReader, config, fc, new TaxonomyFacetSumValueSource.ScoreValueSource());\n    \n    int expected = (int) (td.getMaxScore() * td.totalHits);\n    assertEquals(expected, facets.getSpecificValue(\"dim\", \"a\").intValue());\n\n    iw.close();\n    IOUtils.close(taxoWriter, taxoReader, taxoDir, r, indexDir);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2a1862266772deb28cdcb7d996b64d2177022687","date":1453077824,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/taxonomy/TestTaxonomyFacetSumValueSource#testSumScoreAggregator().mjava","pathOld":"lucene/facet/src/test/org/apache/lucene/facet/taxonomy/TestTaxonomyFacetSumValueSource#testSumScoreAggregator().mjava","sourceNew":"  public void testSumScoreAggregator() throws Exception {\n    Directory indexDir = newDirectory();\n    Directory taxoDir = newDirectory();\n\n    DirectoryTaxonomyWriter taxoWriter = new DirectoryTaxonomyWriter(taxoDir);\n    IndexWriter iw = new IndexWriter(indexDir, newIndexWriterConfig(new MockAnalyzer(random())));\n\n    FacetsConfig config = new FacetsConfig();\n\n    for(int i = atLeast(30); i > 0; --i) {\n      Document doc = new Document();\n      if (random().nextBoolean()) { // don't match all documents\n        doc.add(new StringField(\"f\", \"v\", Field.Store.NO));\n      }\n      doc.add(new FacetField(\"dim\", \"a\"));\n      iw.addDocument(config.build(taxoWriter, doc));\n    }\n    \n    DirectoryReader r = DirectoryReader.open(iw);\n    DirectoryTaxonomyReader taxoReader = new DirectoryTaxonomyReader(taxoWriter);\n    \n    FacetsCollector fc = new FacetsCollector(true);\n    BoostQuery csq = new BoostQuery(new ConstantScoreQuery(new MatchAllDocsQuery()), 2f);\n    \n    TopDocs td = FacetsCollector.search(newSearcher(r), csq, 10, fc);\n\n    Facets facets = new TaxonomyFacetSumValueSource(taxoReader, config, fc, new TaxonomyFacetSumValueSource.ScoreValueSource());\n    \n    int expected = (int) (td.getMaxScore() * td.totalHits);\n    assertEquals(expected, facets.getSpecificValue(\"dim\", \"a\").intValue());\n\n    iw.close();\n    IOUtils.close(taxoWriter, taxoReader, taxoDir, r, indexDir);\n  }\n\n","sourceOld":"  public void testSumScoreAggregator() throws Exception {\n    Directory indexDir = newDirectory();\n    Directory taxoDir = newDirectory();\n\n    DirectoryTaxonomyWriter taxoWriter = new DirectoryTaxonomyWriter(taxoDir);\n    IndexWriter iw = new IndexWriter(indexDir, newIndexWriterConfig(new MockAnalyzer(random())));\n\n    FacetsConfig config = new FacetsConfig();\n\n    for(int i = atLeast(30); i > 0; --i) {\n      Document doc = new Document();\n      if (random().nextBoolean()) { // don't match all documents\n        doc.add(new StringField(\"f\", \"v\", Field.Store.NO));\n      }\n      doc.add(new FacetField(\"dim\", \"a\"));\n      iw.addDocument(config.build(taxoWriter, doc));\n    }\n    \n    DirectoryReader r = DirectoryReader.open(iw, true);\n    DirectoryTaxonomyReader taxoReader = new DirectoryTaxonomyReader(taxoWriter);\n    \n    FacetsCollector fc = new FacetsCollector(true);\n    BoostQuery csq = new BoostQuery(new ConstantScoreQuery(new MatchAllDocsQuery()), 2f);\n    \n    TopDocs td = FacetsCollector.search(newSearcher(r), csq, 10, fc);\n\n    Facets facets = new TaxonomyFacetSumValueSource(taxoReader, config, fc, new TaxonomyFacetSumValueSource.ScoreValueSource());\n    \n    int expected = (int) (td.getMaxScore() * td.totalHits);\n    assertEquals(expected, facets.getSpecificValue(\"dim\", \"a\").intValue());\n\n    iw.close();\n    IOUtils.close(taxoWriter, taxoReader, taxoDir, r, indexDir);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9cf250cb8fdff62f4b753866d44e5bf59bfd1616","date":1483789944,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/taxonomy/TestTaxonomyFacetSumValueSource#testSumScoreAggregator().mjava","pathOld":"lucene/facet/src/test/org/apache/lucene/facet/taxonomy/TestTaxonomyFacetSumValueSource#testSumScoreAggregator().mjava","sourceNew":"  public void testSumScoreAggregator() throws Exception {\n    Directory indexDir = newDirectory();\n    Directory taxoDir = newDirectory();\n\n    DirectoryTaxonomyWriter taxoWriter = new DirectoryTaxonomyWriter(taxoDir);\n    IndexWriter iw = new IndexWriter(indexDir, newIndexWriterConfig(new MockAnalyzer(random())));\n\n    FacetsConfig config = new FacetsConfig();\n\n    for(int i = atLeast(30); i > 0; --i) {\n      Document doc = new Document();\n      if (random().nextBoolean()) { // don't match all documents\n        doc.add(new StringField(\"f\", \"v\", Field.Store.NO));\n      }\n      doc.add(new FacetField(\"dim\", \"a\"));\n      iw.addDocument(config.build(taxoWriter, doc));\n    }\n    \n    DirectoryReader r = DirectoryReader.open(iw);\n    DirectoryTaxonomyReader taxoReader = new DirectoryTaxonomyReader(taxoWriter);\n    \n    FacetsCollector fc = new FacetsCollector(true);\n    BoostQuery csq = new BoostQuery(new ConstantScoreQuery(new MatchAllDocsQuery()), 2f);\n    \n    TopDocs td = FacetsCollector.search(newSearcher(r), csq, 10, fc);\n\n    Facets facets = new TaxonomyFacetSumValueSource(taxoReader, config, fc, DoubleValuesSource.SCORES);\n    \n    int expected = (int) (td.getMaxScore() * td.totalHits);\n    assertEquals(expected, facets.getSpecificValue(\"dim\", \"a\").intValue());\n\n    iw.close();\n    IOUtils.close(taxoWriter, taxoReader, taxoDir, r, indexDir);\n  }\n\n","sourceOld":"  public void testSumScoreAggregator() throws Exception {\n    Directory indexDir = newDirectory();\n    Directory taxoDir = newDirectory();\n\n    DirectoryTaxonomyWriter taxoWriter = new DirectoryTaxonomyWriter(taxoDir);\n    IndexWriter iw = new IndexWriter(indexDir, newIndexWriterConfig(new MockAnalyzer(random())));\n\n    FacetsConfig config = new FacetsConfig();\n\n    for(int i = atLeast(30); i > 0; --i) {\n      Document doc = new Document();\n      if (random().nextBoolean()) { // don't match all documents\n        doc.add(new StringField(\"f\", \"v\", Field.Store.NO));\n      }\n      doc.add(new FacetField(\"dim\", \"a\"));\n      iw.addDocument(config.build(taxoWriter, doc));\n    }\n    \n    DirectoryReader r = DirectoryReader.open(iw);\n    DirectoryTaxonomyReader taxoReader = new DirectoryTaxonomyReader(taxoWriter);\n    \n    FacetsCollector fc = new FacetsCollector(true);\n    BoostQuery csq = new BoostQuery(new ConstantScoreQuery(new MatchAllDocsQuery()), 2f);\n    \n    TopDocs td = FacetsCollector.search(newSearcher(r), csq, 10, fc);\n\n    Facets facets = new TaxonomyFacetSumValueSource(taxoReader, config, fc, new TaxonomyFacetSumValueSource.ScoreValueSource());\n    \n    int expected = (int) (td.getMaxScore() * td.totalHits);\n    assertEquals(expected, facets.getSpecificValue(\"dim\", \"a\").intValue());\n\n    iw.close();\n    IOUtils.close(taxoWriter, taxoReader, taxoDir, r, indexDir);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"09ab8ee44ca898536770d0106a7c0ee4be4f0eb7","date":1484239864,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/taxonomy/TestTaxonomyFacetSumValueSource#testSumScoreAggregator().mjava","pathOld":"lucene/facet/src/test/org/apache/lucene/facet/taxonomy/TestTaxonomyFacetSumValueSource#testSumScoreAggregator().mjava","sourceNew":"  public void testSumScoreAggregator() throws Exception {\n    Directory indexDir = newDirectory();\n    Directory taxoDir = newDirectory();\n\n    DirectoryTaxonomyWriter taxoWriter = new DirectoryTaxonomyWriter(taxoDir);\n    IndexWriter iw = new IndexWriter(indexDir, newIndexWriterConfig(new MockAnalyzer(random())));\n\n    FacetsConfig config = new FacetsConfig();\n\n    for(int i = atLeast(30); i > 0; --i) {\n      Document doc = new Document();\n      if (random().nextBoolean()) { // don't match all documents\n        doc.add(new StringField(\"f\", \"v\", Field.Store.NO));\n      }\n      doc.add(new FacetField(\"dim\", \"a\"));\n      iw.addDocument(config.build(taxoWriter, doc));\n    }\n    \n    DirectoryReader r = DirectoryReader.open(iw);\n    DirectoryTaxonomyReader taxoReader = new DirectoryTaxonomyReader(taxoWriter);\n    \n    FacetsCollector fc = new FacetsCollector(true);\n    BoostQuery csq = new BoostQuery(new ConstantScoreQuery(new MatchAllDocsQuery()), 2f);\n    \n    TopDocs td = FacetsCollector.search(newSearcher(r), csq, 10, fc);\n\n    Facets facets = new TaxonomyFacetSumValueSource(taxoReader, config, fc, DoubleValuesSource.SCORES);\n    \n    int expected = (int) (td.getMaxScore() * td.totalHits);\n    assertEquals(expected, facets.getSpecificValue(\"dim\", \"a\").intValue());\n\n    iw.close();\n    IOUtils.close(taxoWriter, taxoReader, taxoDir, r, indexDir);\n  }\n\n","sourceOld":"  public void testSumScoreAggregator() throws Exception {\n    Directory indexDir = newDirectory();\n    Directory taxoDir = newDirectory();\n\n    DirectoryTaxonomyWriter taxoWriter = new DirectoryTaxonomyWriter(taxoDir);\n    IndexWriter iw = new IndexWriter(indexDir, newIndexWriterConfig(new MockAnalyzer(random())));\n\n    FacetsConfig config = new FacetsConfig();\n\n    for(int i = atLeast(30); i > 0; --i) {\n      Document doc = new Document();\n      if (random().nextBoolean()) { // don't match all documents\n        doc.add(new StringField(\"f\", \"v\", Field.Store.NO));\n      }\n      doc.add(new FacetField(\"dim\", \"a\"));\n      iw.addDocument(config.build(taxoWriter, doc));\n    }\n    \n    DirectoryReader r = DirectoryReader.open(iw);\n    DirectoryTaxonomyReader taxoReader = new DirectoryTaxonomyReader(taxoWriter);\n    \n    FacetsCollector fc = new FacetsCollector(true);\n    BoostQuery csq = new BoostQuery(new ConstantScoreQuery(new MatchAllDocsQuery()), 2f);\n    \n    TopDocs td = FacetsCollector.search(newSearcher(r), csq, 10, fc);\n\n    Facets facets = new TaxonomyFacetSumValueSource(taxoReader, config, fc, new TaxonomyFacetSumValueSource.ScoreValueSource());\n    \n    int expected = (int) (td.getMaxScore() * td.totalHits);\n    assertEquals(expected, facets.getSpecificValue(\"dim\", \"a\").intValue());\n\n    iw.close();\n    IOUtils.close(taxoWriter, taxoReader, taxoDir, r, indexDir);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"81fff83bdb893c1471efd78f6a9a3ce4f98120b9","date":1531895937,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/taxonomy/TestTaxonomyFacetSumValueSource#testSumScoreAggregator().mjava","pathOld":"lucene/facet/src/test/org/apache/lucene/facet/taxonomy/TestTaxonomyFacetSumValueSource#testSumScoreAggregator().mjava","sourceNew":"  public void testSumScoreAggregator() throws Exception {\n    Directory indexDir = newDirectory();\n    Directory taxoDir = newDirectory();\n\n    DirectoryTaxonomyWriter taxoWriter = new DirectoryTaxonomyWriter(taxoDir);\n    IndexWriter iw = new IndexWriter(indexDir, newIndexWriterConfig(new MockAnalyzer(random())));\n\n    FacetsConfig config = new FacetsConfig();\n\n    for(int i = atLeast(30); i > 0; --i) {\n      Document doc = new Document();\n      if (random().nextBoolean()) { // don't match all documents\n        doc.add(new StringField(\"f\", \"v\", Field.Store.NO));\n      }\n      doc.add(new FacetField(\"dim\", \"a\"));\n      iw.addDocument(config.build(taxoWriter, doc));\n    }\n    \n    DirectoryReader r = DirectoryReader.open(iw);\n    DirectoryTaxonomyReader taxoReader = new DirectoryTaxonomyReader(taxoWriter);\n    \n    FacetsCollector fc = new FacetsCollector(true);\n    BoostQuery csq = new BoostQuery(new ConstantScoreQuery(new MatchAllDocsQuery()), 2f);\n    \n    TopDocs td = FacetsCollector.search(newSearcher(r), csq, 10, fc);\n\n    Facets facets = new TaxonomyFacetSumValueSource(taxoReader, config, fc, DoubleValuesSource.SCORES);\n    \n    int expected = (int) (csq.getBoost() * td.totalHits);\n    assertEquals(expected, facets.getSpecificValue(\"dim\", \"a\").intValue());\n\n    iw.close();\n    IOUtils.close(taxoWriter, taxoReader, taxoDir, r, indexDir);\n  }\n\n","sourceOld":"  public void testSumScoreAggregator() throws Exception {\n    Directory indexDir = newDirectory();\n    Directory taxoDir = newDirectory();\n\n    DirectoryTaxonomyWriter taxoWriter = new DirectoryTaxonomyWriter(taxoDir);\n    IndexWriter iw = new IndexWriter(indexDir, newIndexWriterConfig(new MockAnalyzer(random())));\n\n    FacetsConfig config = new FacetsConfig();\n\n    for(int i = atLeast(30); i > 0; --i) {\n      Document doc = new Document();\n      if (random().nextBoolean()) { // don't match all documents\n        doc.add(new StringField(\"f\", \"v\", Field.Store.NO));\n      }\n      doc.add(new FacetField(\"dim\", \"a\"));\n      iw.addDocument(config.build(taxoWriter, doc));\n    }\n    \n    DirectoryReader r = DirectoryReader.open(iw);\n    DirectoryTaxonomyReader taxoReader = new DirectoryTaxonomyReader(taxoWriter);\n    \n    FacetsCollector fc = new FacetsCollector(true);\n    BoostQuery csq = new BoostQuery(new ConstantScoreQuery(new MatchAllDocsQuery()), 2f);\n    \n    TopDocs td = FacetsCollector.search(newSearcher(r), csq, 10, fc);\n\n    Facets facets = new TaxonomyFacetSumValueSource(taxoReader, config, fc, DoubleValuesSource.SCORES);\n    \n    int expected = (int) (td.getMaxScore() * td.totalHits);\n    assertEquals(expected, facets.getSpecificValue(\"dim\", \"a\").intValue());\n\n    iw.close();\n    IOUtils.close(taxoWriter, taxoReader, taxoDir, r, indexDir);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","date":1531905561,"type":3,"author":"Alessandro Benedetti","isMerge":true,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/taxonomy/TestTaxonomyFacetSumValueSource#testSumScoreAggregator().mjava","pathOld":"lucene/facet/src/test/org/apache/lucene/facet/taxonomy/TestTaxonomyFacetSumValueSource#testSumScoreAggregator().mjava","sourceNew":"  public void testSumScoreAggregator() throws Exception {\n    Directory indexDir = newDirectory();\n    Directory taxoDir = newDirectory();\n\n    DirectoryTaxonomyWriter taxoWriter = new DirectoryTaxonomyWriter(taxoDir);\n    IndexWriter iw = new IndexWriter(indexDir, newIndexWriterConfig(new MockAnalyzer(random())));\n\n    FacetsConfig config = new FacetsConfig();\n\n    for(int i = atLeast(30); i > 0; --i) {\n      Document doc = new Document();\n      if (random().nextBoolean()) { // don't match all documents\n        doc.add(new StringField(\"f\", \"v\", Field.Store.NO));\n      }\n      doc.add(new FacetField(\"dim\", \"a\"));\n      iw.addDocument(config.build(taxoWriter, doc));\n    }\n    \n    DirectoryReader r = DirectoryReader.open(iw);\n    DirectoryTaxonomyReader taxoReader = new DirectoryTaxonomyReader(taxoWriter);\n    \n    FacetsCollector fc = new FacetsCollector(true);\n    BoostQuery csq = new BoostQuery(new ConstantScoreQuery(new MatchAllDocsQuery()), 2f);\n    \n    TopDocs td = FacetsCollector.search(newSearcher(r), csq, 10, fc);\n\n    Facets facets = new TaxonomyFacetSumValueSource(taxoReader, config, fc, DoubleValuesSource.SCORES);\n    \n    int expected = (int) (csq.getBoost() * td.totalHits);\n    assertEquals(expected, facets.getSpecificValue(\"dim\", \"a\").intValue());\n\n    iw.close();\n    IOUtils.close(taxoWriter, taxoReader, taxoDir, r, indexDir);\n  }\n\n","sourceOld":"  public void testSumScoreAggregator() throws Exception {\n    Directory indexDir = newDirectory();\n    Directory taxoDir = newDirectory();\n\n    DirectoryTaxonomyWriter taxoWriter = new DirectoryTaxonomyWriter(taxoDir);\n    IndexWriter iw = new IndexWriter(indexDir, newIndexWriterConfig(new MockAnalyzer(random())));\n\n    FacetsConfig config = new FacetsConfig();\n\n    for(int i = atLeast(30); i > 0; --i) {\n      Document doc = new Document();\n      if (random().nextBoolean()) { // don't match all documents\n        doc.add(new StringField(\"f\", \"v\", Field.Store.NO));\n      }\n      doc.add(new FacetField(\"dim\", \"a\"));\n      iw.addDocument(config.build(taxoWriter, doc));\n    }\n    \n    DirectoryReader r = DirectoryReader.open(iw);\n    DirectoryTaxonomyReader taxoReader = new DirectoryTaxonomyReader(taxoWriter);\n    \n    FacetsCollector fc = new FacetsCollector(true);\n    BoostQuery csq = new BoostQuery(new ConstantScoreQuery(new MatchAllDocsQuery()), 2f);\n    \n    TopDocs td = FacetsCollector.search(newSearcher(r), csq, 10, fc);\n\n    Facets facets = new TaxonomyFacetSumValueSource(taxoReader, config, fc, DoubleValuesSource.SCORES);\n    \n    int expected = (int) (td.getMaxScore() * td.totalHits);\n    assertEquals(expected, facets.getSpecificValue(\"dim\", \"a\").intValue());\n\n    iw.close();\n    IOUtils.close(taxoWriter, taxoReader, taxoDir, r, indexDir);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"83788ad129a5154d5c6562c4e8ce3db48793aada","date":1532961485,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/taxonomy/TestTaxonomyFacetSumValueSource#testSumScoreAggregator().mjava","pathOld":"lucene/facet/src/test/org/apache/lucene/facet/taxonomy/TestTaxonomyFacetSumValueSource#testSumScoreAggregator().mjava","sourceNew":"  public void testSumScoreAggregator() throws Exception {\n    Directory indexDir = newDirectory();\n    Directory taxoDir = newDirectory();\n\n    DirectoryTaxonomyWriter taxoWriter = new DirectoryTaxonomyWriter(taxoDir);\n    IndexWriter iw = new IndexWriter(indexDir, newIndexWriterConfig(new MockAnalyzer(random())));\n\n    FacetsConfig config = new FacetsConfig();\n\n    for(int i = atLeast(30); i > 0; --i) {\n      Document doc = new Document();\n      if (random().nextBoolean()) { // don't match all documents\n        doc.add(new StringField(\"f\", \"v\", Field.Store.NO));\n      }\n      doc.add(new FacetField(\"dim\", \"a\"));\n      iw.addDocument(config.build(taxoWriter, doc));\n    }\n    \n    DirectoryReader r = DirectoryReader.open(iw);\n    DirectoryTaxonomyReader taxoReader = new DirectoryTaxonomyReader(taxoWriter);\n    \n    FacetsCollector fc = new FacetsCollector(true);\n    BoostQuery csq = new BoostQuery(new ConstantScoreQuery(new MatchAllDocsQuery()), 2f);\n    \n    TopDocs td = FacetsCollector.search(newSearcher(r), csq, 10, fc);\n\n    Facets facets = new TaxonomyFacetSumValueSource(taxoReader, config, fc, DoubleValuesSource.SCORES);\n    \n    int expected = (int) (csq.getBoost() * td.totalHits.value);\n    assertEquals(expected, facets.getSpecificValue(\"dim\", \"a\").intValue());\n\n    iw.close();\n    IOUtils.close(taxoWriter, taxoReader, taxoDir, r, indexDir);\n  }\n\n","sourceOld":"  public void testSumScoreAggregator() throws Exception {\n    Directory indexDir = newDirectory();\n    Directory taxoDir = newDirectory();\n\n    DirectoryTaxonomyWriter taxoWriter = new DirectoryTaxonomyWriter(taxoDir);\n    IndexWriter iw = new IndexWriter(indexDir, newIndexWriterConfig(new MockAnalyzer(random())));\n\n    FacetsConfig config = new FacetsConfig();\n\n    for(int i = atLeast(30); i > 0; --i) {\n      Document doc = new Document();\n      if (random().nextBoolean()) { // don't match all documents\n        doc.add(new StringField(\"f\", \"v\", Field.Store.NO));\n      }\n      doc.add(new FacetField(\"dim\", \"a\"));\n      iw.addDocument(config.build(taxoWriter, doc));\n    }\n    \n    DirectoryReader r = DirectoryReader.open(iw);\n    DirectoryTaxonomyReader taxoReader = new DirectoryTaxonomyReader(taxoWriter);\n    \n    FacetsCollector fc = new FacetsCollector(true);\n    BoostQuery csq = new BoostQuery(new ConstantScoreQuery(new MatchAllDocsQuery()), 2f);\n    \n    TopDocs td = FacetsCollector.search(newSearcher(r), csq, 10, fc);\n\n    Facets facets = new TaxonomyFacetSumValueSource(taxoReader, config, fc, DoubleValuesSource.SCORES);\n    \n    int expected = (int) (csq.getBoost() * td.totalHits);\n    assertEquals(expected, facets.getSpecificValue(\"dim\", \"a\").intValue());\n\n    iw.close();\n    IOUtils.close(taxoWriter, taxoReader, taxoDir, r, indexDir);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"54a6bea0b991120a99ad0e2f72ae853fd5ecae0e":["ae14298f4eec6d5faee6a149f88ba57d14a6f21a"],"2dfdf766e55e943d942055d7de53c7ad6bc45283":["d0ef034a4f10871667ae75181537775ddcf8ade4"],"4edc984f0f4ac77c37e48ace2932f780f888453c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"09ab8ee44ca898536770d0106a7c0ee4be4f0eb7":["2a1862266772deb28cdcb7d996b64d2177022687","9cf250cb8fdff62f4b753866d44e5bf59bfd1616"],"9cf250cb8fdff62f4b753866d44e5bf59bfd1616":["2a1862266772deb28cdcb7d996b64d2177022687"],"0efc9f2cae117418f13ba9035f5e1d516ea7a2b5":["9cf250cb8fdff62f4b753866d44e5bf59bfd1616","81fff83bdb893c1471efd78f6a9a3ce4f98120b9"],"2a1862266772deb28cdcb7d996b64d2177022687":["2dfdf766e55e943d942055d7de53c7ad6bc45283"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"d0ef034a4f10871667ae75181537775ddcf8ade4":["54a6bea0b991120a99ad0e2f72ae853fd5ecae0e"],"ae14298f4eec6d5faee6a149f88ba57d14a6f21a":["3cc728b07df73b197e6d940d27f9b08b63918f13"],"3cc728b07df73b197e6d940d27f9b08b63918f13":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","4edc984f0f4ac77c37e48ace2932f780f888453c"],"83788ad129a5154d5c6562c4e8ce3db48793aada":["81fff83bdb893c1471efd78f6a9a3ce4f98120b9"],"81fff83bdb893c1471efd78f6a9a3ce4f98120b9":["9cf250cb8fdff62f4b753866d44e5bf59bfd1616"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["83788ad129a5154d5c6562c4e8ce3db48793aada"]},"commit2Childs":{"54a6bea0b991120a99ad0e2f72ae853fd5ecae0e":["d0ef034a4f10871667ae75181537775ddcf8ade4"],"2dfdf766e55e943d942055d7de53c7ad6bc45283":["2a1862266772deb28cdcb7d996b64d2177022687"],"4edc984f0f4ac77c37e48ace2932f780f888453c":["3cc728b07df73b197e6d940d27f9b08b63918f13"],"09ab8ee44ca898536770d0106a7c0ee4be4f0eb7":[],"9cf250cb8fdff62f4b753866d44e5bf59bfd1616":["09ab8ee44ca898536770d0106a7c0ee4be4f0eb7","0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","81fff83bdb893c1471efd78f6a9a3ce4f98120b9"],"0efc9f2cae117418f13ba9035f5e1d516ea7a2b5":[],"2a1862266772deb28cdcb7d996b64d2177022687":["09ab8ee44ca898536770d0106a7c0ee4be4f0eb7","9cf250cb8fdff62f4b753866d44e5bf59bfd1616"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["4edc984f0f4ac77c37e48ace2932f780f888453c","3cc728b07df73b197e6d940d27f9b08b63918f13"],"d0ef034a4f10871667ae75181537775ddcf8ade4":["2dfdf766e55e943d942055d7de53c7ad6bc45283"],"ae14298f4eec6d5faee6a149f88ba57d14a6f21a":["54a6bea0b991120a99ad0e2f72ae853fd5ecae0e"],"3cc728b07df73b197e6d940d27f9b08b63918f13":["ae14298f4eec6d5faee6a149f88ba57d14a6f21a"],"81fff83bdb893c1471efd78f6a9a3ce4f98120b9":["0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","83788ad129a5154d5c6562c4e8ce3db48793aada"],"83788ad129a5154d5c6562c4e8ce3db48793aada":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["09ab8ee44ca898536770d0106a7c0ee4be4f0eb7","0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}