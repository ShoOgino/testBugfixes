{"path":"lucene/src/java/org/apache/lucene/index/SegmentInfo#toString(Directory,int).mjava","commits":[{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/SegmentInfo#toString(Directory,int).mjava","pathOld":"src/java/org/apache/lucene/index/SegmentInfo#toString(Directory,int).mjava","sourceNew":"  /** Used for debugging.  Format may suddenly change.\n   * \n   *  <p>Current format looks like\n   *  <code>_a:c45/4->_1</code>, which means the segment's\n   *  name is <code>_a</code>; it's using compound file\n   *  format (would be <code>C</code> if not compound); it\n   *  has 45 documents; it has 4 deletions (this part is\n   *  left off when there are no deletions); it's using the\n   *  shared doc stores named <code>_1</code> (this part is\n   *  left off if doc stores are private).</p>\n   */\n  public String toString(Directory dir, int pendingDelCount) {\n\n    StringBuilder s = new StringBuilder();\n    s.append(name).append(':');\n\n    char cfs;\n    try {\n      if (getUseCompoundFile()) {\n        cfs = 'c';\n      } else {\n        cfs = 'C';\n      }\n    } catch (IOException ioe) {\n      cfs = '?';\n    }\n    s.append(cfs);\n\n    if (this.dir != dir) {\n      s.append('x');\n    }\n    s.append(docCount);\n\n    int delCount;\n    try {\n      delCount = getDelCount();\n    } catch (IOException ioe) {\n      delCount = -1;\n    }\n    if (delCount != -1) {\n      delCount += pendingDelCount;\n    }\n    if (delCount != 0) {\n      s.append('/');\n      if (delCount == -1) {\n        s.append('?');\n      } else {\n        s.append(delCount);\n      }\n    }\n    \n    if (docStoreOffset != -1) {\n      s.append(\"->\").append(docStoreSegment);\n    }\n\n    return s.toString();\n  }\n\n","sourceOld":"  /** Used for debugging.  Format may suddenly change.\n   * \n   *  <p>Current format looks like\n   *  <code>_a:c45/4->_1</code>, which means the segment's\n   *  name is <code>_a</code>; it's using compound file\n   *  format (would be <code>C</code> if not compound); it\n   *  has 45 documents; it has 4 deletions (this part is\n   *  left off when there are no deletions); it's using the\n   *  shared doc stores named <code>_1</code> (this part is\n   *  left off if doc stores are private).</p>\n   */\n  public String toString(Directory dir, int pendingDelCount) {\n\n    StringBuilder s = new StringBuilder();\n    s.append(name).append(':');\n\n    char cfs;\n    try {\n      if (getUseCompoundFile()) {\n        cfs = 'c';\n      } else {\n        cfs = 'C';\n      }\n    } catch (IOException ioe) {\n      cfs = '?';\n    }\n    s.append(cfs);\n\n    if (this.dir != dir) {\n      s.append('x');\n    }\n    s.append(docCount);\n\n    int delCount;\n    try {\n      delCount = getDelCount();\n    } catch (IOException ioe) {\n      delCount = -1;\n    }\n    if (delCount != -1) {\n      delCount += pendingDelCount;\n    }\n    if (delCount != 0) {\n      s.append('/');\n      if (delCount == -1) {\n        s.append('?');\n      } else {\n        s.append(delCount);\n      }\n    }\n    \n    if (docStoreOffset != -1) {\n      s.append(\"->\").append(docStoreSegment);\n    }\n\n    return s.toString();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6267e1ce56c2eec111425690cd04e251b6f14952","date":1275222352,"type":3,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/SegmentInfo#toString(Directory,int).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/SegmentInfo#toString(Directory,int).mjava","sourceNew":"  /** Used for debugging.  Format may suddenly change.\n   * \n   *  <p>Current format looks like\n   *  <code>_a:c45/4->_1</code>, which means the segment's\n   *  name is <code>_a</code>; it's using compound file\n   *  format (would be <code>C</code> if not compound); it\n   *  has 45 documents; it has 4 deletions (this part is\n   *  left off when there are no deletions); it's using the\n   *  shared doc stores named <code>_1</code> (this part is\n   *  left off if doc stores are private).</p>\n   */\n  public String toString(Directory dir, int pendingDelCount) {\n\n    StringBuilder s = new StringBuilder();\n    s.append(name).append(':');\n\n    char cfs = getUseCompoundFile() ? 'c' : 'C';\n    s.append(cfs);\n\n    if (this.dir != dir) {\n      s.append('x');\n    }\n    s.append(docCount);\n\n    int delCount = getDelCount() + pendingDelCount;\n    if (delCount != 0) {\n      s.append('/').append(delCount);\n    }\n    \n    if (docStoreOffset != -1) {\n      s.append(\"->\").append(docStoreSegment);\n    }\n\n    return s.toString();\n  }\n\n","sourceOld":"  /** Used for debugging.  Format may suddenly change.\n   * \n   *  <p>Current format looks like\n   *  <code>_a:c45/4->_1</code>, which means the segment's\n   *  name is <code>_a</code>; it's using compound file\n   *  format (would be <code>C</code> if not compound); it\n   *  has 45 documents; it has 4 deletions (this part is\n   *  left off when there are no deletions); it's using the\n   *  shared doc stores named <code>_1</code> (this part is\n   *  left off if doc stores are private).</p>\n   */\n  public String toString(Directory dir, int pendingDelCount) {\n\n    StringBuilder s = new StringBuilder();\n    s.append(name).append(':');\n\n    char cfs;\n    try {\n      if (getUseCompoundFile()) {\n        cfs = 'c';\n      } else {\n        cfs = 'C';\n      }\n    } catch (IOException ioe) {\n      cfs = '?';\n    }\n    s.append(cfs);\n\n    if (this.dir != dir) {\n      s.append('x');\n    }\n    s.append(docCount);\n\n    int delCount;\n    try {\n      delCount = getDelCount();\n    } catch (IOException ioe) {\n      delCount = -1;\n    }\n    if (delCount != -1) {\n      delCount += pendingDelCount;\n    }\n    if (delCount != 0) {\n      s.append('/');\n      if (delCount == -1) {\n        s.append('?');\n      } else {\n        s.append(delCount);\n      }\n    }\n    \n    if (docStoreOffset != -1) {\n      s.append(\"->\").append(docStoreSegment);\n    }\n\n    return s.toString();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"44fcbde6fb2ac44ee3b45e013e54a42911e689ff","date":1292065621,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/SegmentInfo#toString(Directory,int).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/SegmentInfo#toString(Directory,int).mjava","sourceNew":"  /** Used for debugging.  Format may suddenly change.\n   * \n   *  <p>Current format looks like\n   *  <code>_a:c45/4->_1</code>, which means the segment's\n   *  name is <code>_a</code>; it's using compound file\n   *  format (would be <code>C</code> if not compound); it\n   *  has 45 documents; it has 4 deletions (this part is\n   *  left off when there are no deletions); it's using the\n   *  shared doc stores named <code>_1</code> (this part is\n   *  left off if doc stores are private).</p>\n   */\n  public String toString(Directory dir, int pendingDelCount) {\n\n    StringBuilder s = new StringBuilder();\n    s.append(name).append(':');\n\n    char cfs = getUseCompoundFile() ? 'c' : 'C';\n    s.append(cfs);\n\n    if (this.dir != dir) {\n      s.append('x');\n    }\n    s.append(docCount);\n\n    int delCount = getDelCount() + pendingDelCount;\n    if (delCount != 0) {\n      s.append('/').append(delCount);\n    }\n    \n    if (docStoreOffset != -1) {\n      s.append(\"->\").append(docStoreSegment);\n      if (docStoreIsCompoundFile) {\n        s.append('c');\n      } else {\n        s.append('C');\n      }\n      s.append('+').append(docStoreOffset);\n    }\n\n    return s.toString();\n  }\n\n","sourceOld":"  /** Used for debugging.  Format may suddenly change.\n   * \n   *  <p>Current format looks like\n   *  <code>_a:c45/4->_1</code>, which means the segment's\n   *  name is <code>_a</code>; it's using compound file\n   *  format (would be <code>C</code> if not compound); it\n   *  has 45 documents; it has 4 deletions (this part is\n   *  left off when there are no deletions); it's using the\n   *  shared doc stores named <code>_1</code> (this part is\n   *  left off if doc stores are private).</p>\n   */\n  public String toString(Directory dir, int pendingDelCount) {\n\n    StringBuilder s = new StringBuilder();\n    s.append(name).append(':');\n\n    char cfs = getUseCompoundFile() ? 'c' : 'C';\n    s.append(cfs);\n\n    if (this.dir != dir) {\n      s.append('x');\n    }\n    s.append(docCount);\n\n    int delCount = getDelCount() + pendingDelCount;\n    if (delCount != 0) {\n      s.append('/').append(delCount);\n    }\n    \n    if (docStoreOffset != -1) {\n      s.append(\"->\").append(docStoreSegment);\n    }\n\n    return s.toString();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2ed5989ef2bc7bbd155dbff1e023ea849003dbf7","date":1292688238,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/SegmentInfo#toString(Directory,int).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/SegmentInfo#toString(Directory,int).mjava","sourceNew":"  /** Used for debugging.  Format may suddenly change.\n   * \n   *  <p>Current format looks like\n   *  <code>_a:c45/4->_1</code>, which means the segment's\n   *  name is <code>_a</code>; it's using compound file\n   *  format (would be <code>C</code> if not compound); it\n   *  has 45 documents; it has 4 deletions (this part is\n   *  left off when there are no deletions); it's using the\n   *  shared doc stores named <code>_1</code> (this part is\n   *  left off if doc stores are private).</p>\n   */\n  public String toString(Directory dir, int pendingDelCount) {\n\n    StringBuilder s = new StringBuilder();\n    s.append(name).append(':');\n\n    char cfs = getUseCompoundFile() ? 'c' : 'C';\n    s.append(cfs);\n\n    if (this.dir != dir) {\n      s.append('x');\n    }\n    if (hasVectors) {\n      s.append('v');\n    }\n    s.append(docCount);\n\n    int delCount = getDelCount() + pendingDelCount;\n    if (delCount != 0) {\n      s.append('/').append(delCount);\n    }\n    \n    if (docStoreOffset != -1) {\n      s.append(\"->\").append(docStoreSegment);\n      if (docStoreIsCompoundFile) {\n        s.append('c');\n      } else {\n        s.append('C');\n      }\n      s.append('+').append(docStoreOffset);\n    }\n\n    return s.toString();\n  }\n\n","sourceOld":"  /** Used for debugging.  Format may suddenly change.\n   * \n   *  <p>Current format looks like\n   *  <code>_a:c45/4->_1</code>, which means the segment's\n   *  name is <code>_a</code>; it's using compound file\n   *  format (would be <code>C</code> if not compound); it\n   *  has 45 documents; it has 4 deletions (this part is\n   *  left off when there are no deletions); it's using the\n   *  shared doc stores named <code>_1</code> (this part is\n   *  left off if doc stores are private).</p>\n   */\n  public String toString(Directory dir, int pendingDelCount) {\n\n    StringBuilder s = new StringBuilder();\n    s.append(name).append(':');\n\n    char cfs = getUseCompoundFile() ? 'c' : 'C';\n    s.append(cfs);\n\n    if (this.dir != dir) {\n      s.append('x');\n    }\n    s.append(docCount);\n\n    int delCount = getDelCount() + pendingDelCount;\n    if (delCount != 0) {\n      s.append('/').append(delCount);\n    }\n    \n    if (docStoreOffset != -1) {\n      s.append(\"->\").append(docStoreSegment);\n      if (docStoreIsCompoundFile) {\n        s.append('c');\n      } else {\n        s.append('C');\n      }\n      s.append('+').append(docStoreOffset);\n    }\n\n    return s.toString();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ab5cb6a74aefb78aa0569857970b9151dfe2e787","date":1292842407,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/SegmentInfo#toString(Directory,int).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/SegmentInfo#toString(Directory,int).mjava","sourceNew":"  /** Used for debugging.  Format may suddenly change.\n   * \n   *  <p>Current format looks like\n   *  <code>_a:c45/4->_1</code>, which means the segment's\n   *  name is <code>_a</code>; it's using compound file\n   *  format (would be <code>C</code> if not compound); it\n   *  has 45 documents; it has 4 deletions (this part is\n   *  left off when there are no deletions); it's using the\n   *  shared doc stores named <code>_1</code> (this part is\n   *  left off if doc stores are private).</p>\n   */\n  public String toString(Directory dir, int pendingDelCount) {\n\n    StringBuilder s = new StringBuilder();\n    s.append(name).append(':');\n\n    char cfs = getUseCompoundFile() ? 'c' : 'C';\n    s.append(cfs);\n\n    if (this.dir != dir) {\n      s.append('x');\n    }\n    if (hasVectors) {\n      s.append('v');\n    }\n    s.append(docCount);\n\n    int delCount = getDelCount() + pendingDelCount;\n    if (delCount != 0) {\n      s.append('/').append(delCount);\n    }\n    \n    if (docStoreOffset != -1) {\n      s.append(\"->\").append(docStoreSegment);\n      if (docStoreIsCompoundFile) {\n        s.append('c');\n      } else {\n        s.append('C');\n      }\n      s.append('+').append(docStoreOffset);\n    }\n\n    return s.toString();\n  }\n\n","sourceOld":"  /** Used for debugging.  Format may suddenly change.\n   * \n   *  <p>Current format looks like\n   *  <code>_a:c45/4->_1</code>, which means the segment's\n   *  name is <code>_a</code>; it's using compound file\n   *  format (would be <code>C</code> if not compound); it\n   *  has 45 documents; it has 4 deletions (this part is\n   *  left off when there are no deletions); it's using the\n   *  shared doc stores named <code>_1</code> (this part is\n   *  left off if doc stores are private).</p>\n   */\n  public String toString(Directory dir, int pendingDelCount) {\n\n    StringBuilder s = new StringBuilder();\n    s.append(name).append(':');\n\n    char cfs = getUseCompoundFile() ? 'c' : 'C';\n    s.append(cfs);\n\n    if (this.dir != dir) {\n      s.append('x');\n    }\n    s.append(docCount);\n\n    int delCount = getDelCount() + pendingDelCount;\n    if (delCount != 0) {\n      s.append('/').append(delCount);\n    }\n    \n    if (docStoreOffset != -1) {\n      s.append(\"->\").append(docStoreSegment);\n    }\n\n    return s.toString();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","date":1292920096,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/SegmentInfo#toString(Directory,int).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/SegmentInfo#toString(Directory,int).mjava","sourceNew":"  /** Used for debugging.  Format may suddenly change.\n   *\n   *  <p>Current format looks like\n   *  <code>_a:c45/4->_1</code>, which means the segment's\n   *  name is <code>_a</code>; it's using compound file\n   *  format (would be <code>C</code> if not compound); it\n   *  has 45 documents; it has 4 deletions (this part is\n   *  left off when there are no deletions); it's using the\n   *  shared doc stores named <code>_1</code> (this part is\n   *  left off if doc stores are private).</p>\n   */\n  public String toString(Directory dir, int pendingDelCount) {\n\n    StringBuilder s = new StringBuilder();\n    s.append(name).append(':');\n\n    char cfs = getUseCompoundFile() ? 'c' : 'C';\n    s.append(cfs);\n\n    if (this.dir != dir) {\n      s.append('x');\n    }\n    if (hasVectors) {\n      s.append('v');\n    }\n    s.append(docCount);\n\n    int delCount = getDelCount() + pendingDelCount;\n    if (delCount != 0) {\n      s.append('/').append(delCount);\n    }\n\n    if (docStoreOffset != -1) {\n      s.append(\"->\").append(docStoreSegment);\n      if (docStoreIsCompoundFile) {\n        s.append('c');\n      } else {\n        s.append('C');\n      }\n      s.append('+').append(docStoreOffset);\n    }\n\n    return s.toString();\n  }\n\n","sourceOld":"  /** Used for debugging.  Format may suddenly change.\n   * \n   *  <p>Current format looks like\n   *  <code>_a:c45/4->_1</code>, which means the segment's\n   *  name is <code>_a</code>; it's using compound file\n   *  format (would be <code>C</code> if not compound); it\n   *  has 45 documents; it has 4 deletions (this part is\n   *  left off when there are no deletions); it's using the\n   *  shared doc stores named <code>_1</code> (this part is\n   *  left off if doc stores are private).</p>\n   */\n  public String toString(Directory dir, int pendingDelCount) {\n\n    StringBuilder s = new StringBuilder();\n    s.append(name).append(':');\n\n    char cfs = getUseCompoundFile() ? 'c' : 'C';\n    s.append(cfs);\n\n    if (this.dir != dir) {\n      s.append('x');\n    }\n    s.append(docCount);\n\n    int delCount = getDelCount() + pendingDelCount;\n    if (delCount != 0) {\n      s.append('/').append(delCount);\n    }\n    \n    if (docStoreOffset != -1) {\n      s.append(\"->\").append(docStoreSegment);\n    }\n\n    return s.toString();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b9dc373b96fc96e6300e2f5af947f6998e6aa6a6","date":1295759448,"type":3,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/SegmentInfo#toString(Directory,int).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/SegmentInfo#toString(Directory,int).mjava","sourceNew":"  /** Used for debugging.  Format may suddenly change.\n   * \n   *  <p>Current format looks like\n   *  <code>_a(3.1):c45/4->_1</code>, which means the segment's\n   *  name is <code>_a</code>; it was created with Lucene 3.1 (or\n   *  '?' if it's unkown); it's using compound file\n   *  format (would be <code>C</code> if not compound); it\n   *  has 45 documents; it has 4 deletions (this part is\n   *  left off when there are no deletions); it's using the\n   *  shared doc stores named <code>_1</code> (this part is\n   *  left off if doc stores are private).</p>\n   */\n  public String toString(Directory dir, int pendingDelCount) {\n\n    StringBuilder s = new StringBuilder();\n    s.append(name).append('(').append(version == null ? \"?\" : version).append(')').append(':');\n\n    char cfs = getUseCompoundFile() ? 'c' : 'C';\n    s.append(cfs);\n\n    if (this.dir != dir) {\n      s.append('x');\n    }\n    if (hasVectors) {\n      s.append('v');\n    }\n    s.append(docCount);\n\n    int delCount = getDelCount() + pendingDelCount;\n    if (delCount != 0) {\n      s.append('/').append(delCount);\n    }\n    \n    if (docStoreOffset != -1) {\n      s.append(\"->\").append(docStoreSegment);\n      if (docStoreIsCompoundFile) {\n        s.append('c');\n      } else {\n        s.append('C');\n      }\n      s.append('+').append(docStoreOffset);\n    }\n\n    return s.toString();\n  }\n\n","sourceOld":"  /** Used for debugging.  Format may suddenly change.\n   * \n   *  <p>Current format looks like\n   *  <code>_a:c45/4->_1</code>, which means the segment's\n   *  name is <code>_a</code>; it's using compound file\n   *  format (would be <code>C</code> if not compound); it\n   *  has 45 documents; it has 4 deletions (this part is\n   *  left off when there are no deletions); it's using the\n   *  shared doc stores named <code>_1</code> (this part is\n   *  left off if doc stores are private).</p>\n   */\n  public String toString(Directory dir, int pendingDelCount) {\n\n    StringBuilder s = new StringBuilder();\n    s.append(name).append(':');\n\n    char cfs = getUseCompoundFile() ? 'c' : 'C';\n    s.append(cfs);\n\n    if (this.dir != dir) {\n      s.append('x');\n    }\n    if (hasVectors) {\n      s.append('v');\n    }\n    s.append(docCount);\n\n    int delCount = getDelCount() + pendingDelCount;\n    if (delCount != 0) {\n      s.append('/').append(delCount);\n    }\n    \n    if (docStoreOffset != -1) {\n      s.append(\"->\").append(docStoreSegment);\n      if (docStoreIsCompoundFile) {\n        s.append('c');\n      } else {\n        s.append('C');\n      }\n      s.append('+').append(docStoreOffset);\n    }\n\n    return s.toString();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bb9b72f7c3d7827c64dd4ec580ded81778da361d","date":1295897920,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/SegmentInfo#toString(Directory,int).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/SegmentInfo#toString(Directory,int).mjava","sourceNew":"  /** Used for debugging.  Format may suddenly change.\n   *\n   *  <p>Current format looks like\n   *  <code>_a(3.1):c45/4->_1</code>, which means the segment's\n   *  name is <code>_a</code>; it was created with Lucene 3.1 (or\n   *  '?' if it's unkown); it's using compound file\n   *  format (would be <code>C</code> if not compound); it\n   *  has 45 documents; it has 4 deletions (this part is\n   *  left off when there are no deletions); it's using the\n   *  shared doc stores named <code>_1</code> (this part is\n   *  left off if doc stores are private).</p>\n   */\n  public String toString(Directory dir, int pendingDelCount) {\n\n    StringBuilder s = new StringBuilder();\n    s.append(name).append('(').append(version == null ? \"?\" : version).append(')').append(':');\n\n    char cfs = getUseCompoundFile() ? 'c' : 'C';\n    s.append(cfs);\n\n    if (this.dir != dir) {\n      s.append('x');\n    }\n    if (hasVectors) {\n      s.append('v');\n    }\n    s.append(docCount);\n\n    int delCount = getDelCount() + pendingDelCount;\n    if (delCount != 0) {\n      s.append('/').append(delCount);\n    }\n\n    if (docStoreOffset != -1) {\n      s.append(\"->\").append(docStoreSegment);\n      if (docStoreIsCompoundFile) {\n        s.append('c');\n      } else {\n        s.append('C');\n      }\n      s.append('+').append(docStoreOffset);\n    }\n\n    return s.toString();\n  }\n\n","sourceOld":"  /** Used for debugging.  Format may suddenly change.\n   *\n   *  <p>Current format looks like\n   *  <code>_a:c45/4->_1</code>, which means the segment's\n   *  name is <code>_a</code>; it's using compound file\n   *  format (would be <code>C</code> if not compound); it\n   *  has 45 documents; it has 4 deletions (this part is\n   *  left off when there are no deletions); it's using the\n   *  shared doc stores named <code>_1</code> (this part is\n   *  left off if doc stores are private).</p>\n   */\n  public String toString(Directory dir, int pendingDelCount) {\n\n    StringBuilder s = new StringBuilder();\n    s.append(name).append(':');\n\n    char cfs = getUseCompoundFile() ? 'c' : 'C';\n    s.append(cfs);\n\n    if (this.dir != dir) {\n      s.append('x');\n    }\n    if (hasVectors) {\n      s.append('v');\n    }\n    s.append(docCount);\n\n    int delCount = getDelCount() + pendingDelCount;\n    if (delCount != 0) {\n      s.append('/').append(delCount);\n    }\n\n    if (docStoreOffset != -1) {\n      s.append(\"->\").append(docStoreSegment);\n      if (docStoreIsCompoundFile) {\n        s.append('c');\n      } else {\n        s.append('C');\n      }\n      s.append('+').append(docStoreOffset);\n    }\n\n    return s.toString();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"29ef99d61cda9641b6250bf9567329a6e65f901d","date":1297244127,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/SegmentInfo#toString(Directory,int).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/SegmentInfo#toString(Directory,int).mjava","sourceNew":"  /** Used for debugging.  Format may suddenly change.\n   * \n   *  <p>Current format looks like\n   *  <code>_a(3.1):c45/4->_1</code>, which means the segment's\n   *  name is <code>_a</code>; it was created with Lucene 3.1 (or\n   *  '?' if it's unkown); it's using compound file\n   *  format (would be <code>C</code> if not compound); it\n   *  has 45 documents; it has 4 deletions (this part is\n   *  left off when there are no deletions); it's using the\n   *  shared doc stores named <code>_1</code> (this part is\n   *  left off if doc stores are private).</p>\n   */\n  public String toString(Directory dir, int pendingDelCount) {\n\n    StringBuilder s = new StringBuilder();\n    s.append(name).append('(').append(version == null ? \"?\" : version).append(')').append(':');\n\n    char cfs = getUseCompoundFile() ? 'c' : 'C';\n    s.append(cfs);\n\n    if (this.dir != dir) {\n      s.append('x');\n    }\n    if (hasVectors) {\n      s.append('v');\n    }\n    s.append(docCount);\n\n    int delCount = getDelCount() + pendingDelCount;\n    if (delCount != 0) {\n      s.append('/').append(delCount);\n    }\n    \n    if (docStoreOffset != -1) {\n      s.append(\"->\").append(docStoreSegment);\n      if (docStoreIsCompoundFile) {\n        s.append('c');\n      } else {\n        s.append('C');\n      }\n      s.append('+').append(docStoreOffset);\n    }\n\n    return s.toString();\n  }\n\n","sourceOld":"  /** Used for debugging.  Format may suddenly change.\n   * \n   *  <p>Current format looks like\n   *  <code>_a:c45/4->_1</code>, which means the segment's\n   *  name is <code>_a</code>; it's using compound file\n   *  format (would be <code>C</code> if not compound); it\n   *  has 45 documents; it has 4 deletions (this part is\n   *  left off when there are no deletions); it's using the\n   *  shared doc stores named <code>_1</code> (this part is\n   *  left off if doc stores are private).</p>\n   */\n  public String toString(Directory dir, int pendingDelCount) {\n\n    StringBuilder s = new StringBuilder();\n    s.append(name).append(':');\n\n    char cfs = getUseCompoundFile() ? 'c' : 'C';\n    s.append(cfs);\n\n    if (this.dir != dir) {\n      s.append('x');\n    }\n    if (hasVectors) {\n      s.append('v');\n    }\n    s.append(docCount);\n\n    int delCount = getDelCount() + pendingDelCount;\n    if (delCount != 0) {\n      s.append('/').append(delCount);\n    }\n    \n    if (docStoreOffset != -1) {\n      s.append(\"->\").append(docStoreSegment);\n      if (docStoreIsCompoundFile) {\n        s.append('c');\n      } else {\n        s.append('C');\n      }\n      s.append('+').append(docStoreOffset);\n    }\n\n    return s.toString();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b0c7a8f7304b75b1528814c5820fa23a96816c27","date":1298314239,"type":3,"author":"Michael Busch","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/SegmentInfo#toString(Directory,int).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/SegmentInfo#toString(Directory,int).mjava","sourceNew":"  /** Used for debugging.  Format may suddenly change.\n   * \n   *  <p>Current format looks like\n   *  <code>_a(3.1):c45/4->_1</code>, which means the segment's\n   *  name is <code>_a</code>; it was created with Lucene 3.1 (or\n   *  '?' if it's unkown); it's using compound file\n   *  format (would be <code>C</code> if not compound); it\n   *  has 45 documents; it has 4 deletions (this part is\n   *  left off when there are no deletions); it's using the\n   *  shared doc stores named <code>_1</code> (this part is\n   *  left off if doc stores are private).</p>\n   */\n  public String toString(Directory dir, int pendingDelCount) {\n\n    StringBuilder s = new StringBuilder();\n    s.append(name).append('(').append(version == null ? \"?\" : version).append(')').append(':');\n\n    char cfs = getUseCompoundFile() ? 'c' : 'C';\n    s.append(cfs);\n\n    if (this.dir != dir) {\n      s.append('x');\n    }\n    if (getHasVectors()) {\n      s.append('v');\n    }\n    s.append(docCount);\n\n    int delCount = getDelCount() + pendingDelCount;\n    if (delCount != 0) {\n      s.append('/').append(delCount);\n    }\n    \n    if (docStoreOffset != -1) {\n      s.append(\"->\").append(docStoreSegment);\n      if (docStoreIsCompoundFile) {\n        s.append('c');\n      } else {\n        s.append('C');\n      }\n      s.append('+').append(docStoreOffset);\n    }\n\n    return s.toString();\n  }\n\n","sourceOld":"  /** Used for debugging.  Format may suddenly change.\n   * \n   *  <p>Current format looks like\n   *  <code>_a(3.1):c45/4->_1</code>, which means the segment's\n   *  name is <code>_a</code>; it was created with Lucene 3.1 (or\n   *  '?' if it's unkown); it's using compound file\n   *  format (would be <code>C</code> if not compound); it\n   *  has 45 documents; it has 4 deletions (this part is\n   *  left off when there are no deletions); it's using the\n   *  shared doc stores named <code>_1</code> (this part is\n   *  left off if doc stores are private).</p>\n   */\n  public String toString(Directory dir, int pendingDelCount) {\n\n    StringBuilder s = new StringBuilder();\n    s.append(name).append('(').append(version == null ? \"?\" : version).append(')').append(':');\n\n    char cfs = getUseCompoundFile() ? 'c' : 'C';\n    s.append(cfs);\n\n    if (this.dir != dir) {\n      s.append('x');\n    }\n    if (hasVectors) {\n      s.append('v');\n    }\n    s.append(docCount);\n\n    int delCount = getDelCount() + pendingDelCount;\n    if (delCount != 0) {\n      s.append('/').append(delCount);\n    }\n    \n    if (docStoreOffset != -1) {\n      s.append(\"->\").append(docStoreSegment);\n      if (docStoreIsCompoundFile) {\n        s.append('c');\n      } else {\n        s.append('C');\n      }\n      s.append('+').append(docStoreOffset);\n    }\n\n    return s.toString();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bde51b089eb7f86171eb3406e38a274743f9b7ac","date":1298336439,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/SegmentInfo#toString(Directory,int).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/SegmentInfo#toString(Directory,int).mjava","sourceNew":"  /** Used for debugging.  Format may suddenly change.\n   *\n   *  <p>Current format looks like\n   *  <code>_a(3.1):c45/4->_1</code>, which means the segment's\n   *  name is <code>_a</code>; it was created with Lucene 3.1 (or\n   *  '?' if it's unkown); it's using compound file\n   *  format (would be <code>C</code> if not compound); it\n   *  has 45 documents; it has 4 deletions (this part is\n   *  left off when there are no deletions); it's using the\n   *  shared doc stores named <code>_1</code> (this part is\n   *  left off if doc stores are private).</p>\n   */\n  public String toString(Directory dir, int pendingDelCount) {\n\n    StringBuilder s = new StringBuilder();\n    s.append(name).append('(').append(version == null ? \"?\" : version).append(')').append(':');\n\n    char cfs = getUseCompoundFile() ? 'c' : 'C';\n    s.append(cfs);\n\n    if (this.dir != dir) {\n      s.append('x');\n    }\n    if (getHasVectors()) {\n      s.append('v');\n    }\n    s.append(docCount);\n\n    int delCount = getDelCount() + pendingDelCount;\n    if (delCount != 0) {\n      s.append('/').append(delCount);\n    }\n\n    if (docStoreOffset != -1) {\n      s.append(\"->\").append(docStoreSegment);\n      if (docStoreIsCompoundFile) {\n        s.append('c');\n      } else {\n        s.append('C');\n      }\n      s.append('+').append(docStoreOffset);\n    }\n\n    return s.toString();\n  }\n\n","sourceOld":"  /** Used for debugging.  Format may suddenly change.\n   *\n   *  <p>Current format looks like\n   *  <code>_a(3.1):c45/4->_1</code>, which means the segment's\n   *  name is <code>_a</code>; it was created with Lucene 3.1 (or\n   *  '?' if it's unkown); it's using compound file\n   *  format (would be <code>C</code> if not compound); it\n   *  has 45 documents; it has 4 deletions (this part is\n   *  left off when there are no deletions); it's using the\n   *  shared doc stores named <code>_1</code> (this part is\n   *  left off if doc stores are private).</p>\n   */\n  public String toString(Directory dir, int pendingDelCount) {\n\n    StringBuilder s = new StringBuilder();\n    s.append(name).append('(').append(version == null ? \"?\" : version).append(')').append(':');\n\n    char cfs = getUseCompoundFile() ? 'c' : 'C';\n    s.append(cfs);\n\n    if (this.dir != dir) {\n      s.append('x');\n    }\n    if (hasVectors) {\n      s.append('v');\n    }\n    s.append(docCount);\n\n    int delCount = getDelCount() + pendingDelCount;\n    if (delCount != 0) {\n      s.append('/').append(delCount);\n    }\n\n    if (docStoreOffset != -1) {\n      s.append(\"->\").append(docStoreSegment);\n      if (docStoreIsCompoundFile) {\n        s.append('c');\n      } else {\n        s.append('C');\n      }\n      s.append('+').append(docStoreOffset);\n    }\n\n    return s.toString();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"14ec33385f6fbb6ce172882d14605790418a5d31","date":1298910796,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/SegmentInfo#toString(Directory,int).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/SegmentInfo#toString(Directory,int).mjava","sourceNew":"  /** Used for debugging.  Format may suddenly change.\n   * \n   *  <p>Current format looks like\n   *  <code>_a(3.1):c45/4->_1</code>, which means the segment's\n   *  name is <code>_a</code>; it was created with Lucene 3.1 (or\n   *  '?' if it's unkown); it's using compound file\n   *  format (would be <code>C</code> if not compound); it\n   *  has 45 documents; it has 4 deletions (this part is\n   *  left off when there are no deletions); it's using the\n   *  shared doc stores named <code>_1</code> (this part is\n   *  left off if doc stores are private).</p>\n   */\n  public String toString(Directory dir, int pendingDelCount) {\n\n    StringBuilder s = new StringBuilder();\n    s.append(name).append('(').append(version == null ? \"?\" : version).append(')').append(':');\n\n    char cfs = getUseCompoundFile() ? 'c' : 'C';\n    s.append(cfs);\n\n    if (this.dir != dir) {\n      s.append('x');\n    }\n    if (hasVectors) {\n      s.append('v');\n    }\n    s.append(docCount);\n\n    int delCount = getDelCount() + pendingDelCount;\n    if (delCount != 0) {\n      s.append('/').append(delCount);\n    }\n    \n    if (docStoreOffset != -1) {\n      s.append(\"->\").append(docStoreSegment);\n      if (docStoreIsCompoundFile) {\n        s.append('c');\n      } else {\n        s.append('C');\n      }\n      s.append('+').append(docStoreOffset);\n    }\n\n    return s.toString();\n  }\n\n","sourceOld":"  /** Used for debugging.  Format may suddenly change.\n   * \n   *  <p>Current format looks like\n   *  <code>_a(3.1):c45/4->_1</code>, which means the segment's\n   *  name is <code>_a</code>; it was created with Lucene 3.1 (or\n   *  '?' if it's unkown); it's using compound file\n   *  format (would be <code>C</code> if not compound); it\n   *  has 45 documents; it has 4 deletions (this part is\n   *  left off when there are no deletions); it's using the\n   *  shared doc stores named <code>_1</code> (this part is\n   *  left off if doc stores are private).</p>\n   */\n  public String toString(Directory dir, int pendingDelCount) {\n\n    StringBuilder s = new StringBuilder();\n    s.append(name).append('(').append(version == null ? \"?\" : version).append(')').append(':');\n\n    char cfs = getUseCompoundFile() ? 'c' : 'C';\n    s.append(cfs);\n\n    if (this.dir != dir) {\n      s.append('x');\n    }\n    if (getHasVectors()) {\n      s.append('v');\n    }\n    s.append(docCount);\n\n    int delCount = getDelCount() + pendingDelCount;\n    if (delCount != 0) {\n      s.append('/').append(delCount);\n    }\n    \n    if (docStoreOffset != -1) {\n      s.append(\"->\").append(docStoreSegment);\n      if (docStoreIsCompoundFile) {\n        s.append('c');\n      } else {\n        s.append('C');\n      }\n      s.append('+').append(docStoreOffset);\n    }\n\n    return s.toString();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c0ef0193974807e4bddf5432a6b0287fe4d6c9df","date":1301476645,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/SegmentInfo#toString(Directory,int).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/SegmentInfo#toString(Directory,int).mjava","sourceNew":"  /** Used for debugging.  Format may suddenly change.\n   *\n   *  <p>Current format looks like\n   *  <code>_a(3.1):c45/4->_1</code>, which means the segment's\n   *  name is <code>_a</code>; it was created with Lucene 3.1 (or\n   *  '?' if it's unkown); it's using compound file\n   *  format (would be <code>C</code> if not compound); it\n   *  has 45 documents; it has 4 deletions (this part is\n   *  left off when there are no deletions); it's using the\n   *  shared doc stores named <code>_1</code> (this part is\n   *  left off if doc stores are private).</p>\n   */\n  public String toString(Directory dir, int pendingDelCount) {\n\n    StringBuilder s = new StringBuilder();\n    s.append(name).append('(').append(version == null ? \"?\" : version).append(')').append(':');\n\n    char cfs = getUseCompoundFile() ? 'c' : 'C';\n    s.append(cfs);\n\n    if (this.dir != dir) {\n      s.append('x');\n    }\n    if (hasVectors) {\n      s.append('v');\n    }\n    s.append(docCount);\n\n    int delCount = getDelCount() + pendingDelCount;\n    if (delCount != 0) {\n      s.append('/').append(delCount);\n    }\n\n    if (docStoreOffset != -1) {\n      s.append(\"->\").append(docStoreSegment);\n      if (docStoreIsCompoundFile) {\n        s.append('c');\n      } else {\n        s.append('C');\n      }\n      s.append('+').append(docStoreOffset);\n    }\n\n    return s.toString();\n  }\n\n","sourceOld":"  /** Used for debugging.  Format may suddenly change.\n   *\n   *  <p>Current format looks like\n   *  <code>_a(3.1):c45/4->_1</code>, which means the segment's\n   *  name is <code>_a</code>; it was created with Lucene 3.1 (or\n   *  '?' if it's unkown); it's using compound file\n   *  format (would be <code>C</code> if not compound); it\n   *  has 45 documents; it has 4 deletions (this part is\n   *  left off when there are no deletions); it's using the\n   *  shared doc stores named <code>_1</code> (this part is\n   *  left off if doc stores are private).</p>\n   */\n  public String toString(Directory dir, int pendingDelCount) {\n\n    StringBuilder s = new StringBuilder();\n    s.append(name).append('(').append(version == null ? \"?\" : version).append(')').append(':');\n\n    char cfs = getUseCompoundFile() ? 'c' : 'C';\n    s.append(cfs);\n\n    if (this.dir != dir) {\n      s.append('x');\n    }\n    if (getHasVectors()) {\n      s.append('v');\n    }\n    s.append(docCount);\n\n    int delCount = getDelCount() + pendingDelCount;\n    if (delCount != 0) {\n      s.append('/').append(delCount);\n    }\n\n    if (docStoreOffset != -1) {\n      s.append(\"->\").append(docStoreSegment);\n      if (docStoreIsCompoundFile) {\n        s.append('c');\n      } else {\n        s.append('C');\n      }\n      s.append('+').append(docStoreOffset);\n    }\n\n    return s.toString();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"01e5948db9a07144112d2f08f28ca2e3cd880348","date":1301759232,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/SegmentInfo#toString(Directory,int).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/SegmentInfo#toString(Directory,int).mjava","sourceNew":"  /** Used for debugging.  Format may suddenly change.\n   * \n   *  <p>Current format looks like\n   *  <code>_a(3.1):c45/4->_1</code>, which means the segment's\n   *  name is <code>_a</code>; it was created with Lucene 3.1 (or\n   *  '?' if it's unkown); it's using compound file\n   *  format (would be <code>C</code> if not compound); it\n   *  has 45 documents; it has 4 deletions (this part is\n   *  left off when there are no deletions); it's using the\n   *  shared doc stores named <code>_1</code> (this part is\n   *  left off if doc stores are private).</p>\n   */\n  public String toString(Directory dir, int pendingDelCount) {\n\n    StringBuilder s = new StringBuilder();\n    s.append(name).append('(').append(version == null ? \"?\" : version).append(')').append(':');\n    char cfs = getUseCompoundFile() ? 'c' : 'C';\n    s.append(cfs);\n\n    if (this.dir != dir) {\n      s.append('x');\n    }\n    if (hasVectors) {\n      s.append('v');\n    }\n    s.append(docCount);\n\n    int delCount = getDelCount() + pendingDelCount;\n    if (delCount != 0) {\n      s.append('/').append(delCount);\n    }\n    \n    if (docStoreOffset != -1) {\n      s.append(\"->\").append(docStoreSegment);\n      if (docStoreIsCompoundFile) {\n        s.append('c');\n      } else {\n        s.append('C');\n      }\n      s.append('+').append(docStoreOffset);\n    }\n\n    return s.toString();\n  }\n\n","sourceOld":"  /** Used for debugging.  Format may suddenly change.\n   * \n   *  <p>Current format looks like\n   *  <code>_a(3.1):c45/4->_1</code>, which means the segment's\n   *  name is <code>_a</code>; it was created with Lucene 3.1 (or\n   *  '?' if it's unkown); it's using compound file\n   *  format (would be <code>C</code> if not compound); it\n   *  has 45 documents; it has 4 deletions (this part is\n   *  left off when there are no deletions); it's using the\n   *  shared doc stores named <code>_1</code> (this part is\n   *  left off if doc stores are private).</p>\n   */\n  public String toString(Directory dir, int pendingDelCount) {\n\n    StringBuilder s = new StringBuilder();\n    s.append(name).append('(').append(version == null ? \"?\" : version).append(')').append(':');\n\n    char cfs = getUseCompoundFile() ? 'c' : 'C';\n    s.append(cfs);\n\n    if (this.dir != dir) {\n      s.append('x');\n    }\n    if (hasVectors) {\n      s.append('v');\n    }\n    s.append(docCount);\n\n    int delCount = getDelCount() + pendingDelCount;\n    if (delCount != 0) {\n      s.append('/').append(delCount);\n    }\n    \n    if (docStoreOffset != -1) {\n      s.append(\"->\").append(docStoreSegment);\n      if (docStoreIsCompoundFile) {\n        s.append('c');\n      } else {\n        s.append('C');\n      }\n      s.append('+').append(docStoreOffset);\n    }\n\n    return s.toString();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"45669a651c970812a680841b97a77cce06af559f","date":1301922222,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/SegmentInfo#toString(Directory,int).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/SegmentInfo#toString(Directory,int).mjava","sourceNew":"  /** Used for debugging.  Format may suddenly change.\n   *\n   *  <p>Current format looks like\n   *  <code>_a(3.1):c45/4->_1</code>, which means the segment's\n   *  name is <code>_a</code>; it was created with Lucene 3.1 (or\n   *  '?' if it's unkown); it's using compound file\n   *  format (would be <code>C</code> if not compound); it\n   *  has 45 documents; it has 4 deletions (this part is\n   *  left off when there are no deletions); it's using the\n   *  shared doc stores named <code>_1</code> (this part is\n   *  left off if doc stores are private).</p>\n   */\n  public String toString(Directory dir, int pendingDelCount) {\n\n    StringBuilder s = new StringBuilder();\n    s.append(name).append('(').append(version == null ? \"?\" : version).append(')').append(':');\n    char cfs = getUseCompoundFile() ? 'c' : 'C';\n    s.append(cfs);\n\n    if (this.dir != dir) {\n      s.append('x');\n    }\n    if (hasVectors) {\n      s.append('v');\n    }\n    s.append(docCount);\n\n    int delCount = getDelCount() + pendingDelCount;\n    if (delCount != 0) {\n      s.append('/').append(delCount);\n    }\n\n    if (docStoreOffset != -1) {\n      s.append(\"->\").append(docStoreSegment);\n      if (docStoreIsCompoundFile) {\n        s.append('c');\n      } else {\n        s.append('C');\n      }\n      s.append('+').append(docStoreOffset);\n    }\n\n    return s.toString();\n  }\n\n","sourceOld":"  /** Used for debugging.  Format may suddenly change.\n   *\n   *  <p>Current format looks like\n   *  <code>_a(3.1):c45/4->_1</code>, which means the segment's\n   *  name is <code>_a</code>; it was created with Lucene 3.1 (or\n   *  '?' if it's unkown); it's using compound file\n   *  format (would be <code>C</code> if not compound); it\n   *  has 45 documents; it has 4 deletions (this part is\n   *  left off when there are no deletions); it's using the\n   *  shared doc stores named <code>_1</code> (this part is\n   *  left off if doc stores are private).</p>\n   */\n  public String toString(Directory dir, int pendingDelCount) {\n\n    StringBuilder s = new StringBuilder();\n    s.append(name).append('(').append(version == null ? \"?\" : version).append(')').append(':');\n\n    char cfs = getUseCompoundFile() ? 'c' : 'C';\n    s.append(cfs);\n\n    if (this.dir != dir) {\n      s.append('x');\n    }\n    if (hasVectors) {\n      s.append('v');\n    }\n    s.append(docCount);\n\n    int delCount = getDelCount() + pendingDelCount;\n    if (delCount != 0) {\n      s.append('/').append(delCount);\n    }\n\n    if (docStoreOffset != -1) {\n      s.append(\"->\").append(docStoreSegment);\n      if (docStoreIsCompoundFile) {\n        s.append('c');\n      } else {\n        s.append('C');\n      }\n      s.append('+').append(docStoreOffset);\n    }\n\n    return s.toString();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b3e06be49006ecac364d39d12b9c9f74882f9b9f","date":1304289513,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/SegmentInfo#toString(Directory,int).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/SegmentInfo#toString(Directory,int).mjava","sourceNew":"  /** Used for debugging.  Format may suddenly change.\n   *\n   *  <p>Current format looks like\n   *  <code>_a(3.1):c45/4->_1</code>, which means the segment's\n   *  name is <code>_a</code>; it was created with Lucene 3.1 (or\n   *  '?' if it's unkown); it's using compound file\n   *  format (would be <code>C</code> if not compound); it\n   *  has 45 documents; it has 4 deletions (this part is\n   *  left off when there are no deletions); it's using the\n   *  shared doc stores named <code>_1</code> (this part is\n   *  left off if doc stores are private).</p>\n   */\n  public String toString(Directory dir, int pendingDelCount) {\n\n    StringBuilder s = new StringBuilder();\n    s.append(name).append('(').append(version == null ? \"?\" : version).append(')').append(':');\n    char cfs = getUseCompoundFile() ? 'c' : 'C';\n    s.append(cfs);\n\n    if (this.dir != dir) {\n      s.append('x');\n    }\n    if (hasVectors) {\n      s.append('v');\n    }\n    s.append(docCount);\n\n    int delCount = getDelCount() + pendingDelCount;\n    if (delCount != 0) {\n      s.append('/').append(delCount);\n    }\n\n    if (docStoreOffset != -1) {\n      s.append(\"->\").append(docStoreSegment);\n      if (docStoreIsCompoundFile) {\n        s.append('c');\n      } else {\n        s.append('C');\n      }\n      s.append('+').append(docStoreOffset);\n    }\n\n    return s.toString();\n  }\n\n","sourceOld":"  /** Used for debugging.  Format may suddenly change.\n   * \n   *  <p>Current format looks like\n   *  <code>_a(3.1):c45/4->_1</code>, which means the segment's\n   *  name is <code>_a</code>; it was created with Lucene 3.1 (or\n   *  '?' if it's unkown); it's using compound file\n   *  format (would be <code>C</code> if not compound); it\n   *  has 45 documents; it has 4 deletions (this part is\n   *  left off when there are no deletions); it's using the\n   *  shared doc stores named <code>_1</code> (this part is\n   *  left off if doc stores are private).</p>\n   */\n  public String toString(Directory dir, int pendingDelCount) {\n\n    StringBuilder s = new StringBuilder();\n    s.append(name).append('(').append(version == null ? \"?\" : version).append(')').append(':');\n    char cfs = getUseCompoundFile() ? 'c' : 'C';\n    s.append(cfs);\n\n    if (this.dir != dir) {\n      s.append('x');\n    }\n    if (hasVectors) {\n      s.append('v');\n    }\n    s.append(docCount);\n\n    int delCount = getDelCount() + pendingDelCount;\n    if (delCount != 0) {\n      s.append('/').append(delCount);\n    }\n    \n    if (docStoreOffset != -1) {\n      s.append(\"->\").append(docStoreSegment);\n      if (docStoreIsCompoundFile) {\n        s.append('c');\n      } else {\n        s.append('C');\n      }\n      s.append('+').append(docStoreOffset);\n    }\n\n    return s.toString();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"135621f3a0670a9394eb563224a3b76cc4dddc0f","date":1304344257,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/SegmentInfo#toString(Directory,int).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/SegmentInfo#toString(Directory,int).mjava","sourceNew":"  /** Used for debugging.  Format may suddenly change.\n   *\n   *  <p>Current format looks like\n   *  <code>_a(3.1):c45/4->_1</code>, which means the segment's\n   *  name is <code>_a</code>; it was created with Lucene 3.1 (or\n   *  '?' if it's unkown); it's using compound file\n   *  format (would be <code>C</code> if not compound); it\n   *  has 45 documents; it has 4 deletions (this part is\n   *  left off when there are no deletions); it's using the\n   *  shared doc stores named <code>_1</code> (this part is\n   *  left off if doc stores are private).</p>\n   */\n  public String toString(Directory dir, int pendingDelCount) {\n\n    StringBuilder s = new StringBuilder();\n    s.append(name).append('(').append(version == null ? \"?\" : version).append(')').append(':');\n    char cfs = getUseCompoundFile() ? 'c' : 'C';\n    s.append(cfs);\n\n    if (this.dir != dir) {\n      s.append('x');\n    }\n    if (hasVectors) {\n      s.append('v');\n    }\n    s.append(docCount);\n\n    int delCount = getDelCount() + pendingDelCount;\n    if (delCount != 0) {\n      s.append('/').append(delCount);\n    }\n\n    if (docStoreOffset != -1) {\n      s.append(\"->\").append(docStoreSegment);\n      if (docStoreIsCompoundFile) {\n        s.append('c');\n      } else {\n        s.append('C');\n      }\n      s.append('+').append(docStoreOffset);\n    }\n\n    return s.toString();\n  }\n\n","sourceOld":"  /** Used for debugging.  Format may suddenly change.\n   * \n   *  <p>Current format looks like\n   *  <code>_a(3.1):c45/4->_1</code>, which means the segment's\n   *  name is <code>_a</code>; it was created with Lucene 3.1 (or\n   *  '?' if it's unkown); it's using compound file\n   *  format (would be <code>C</code> if not compound); it\n   *  has 45 documents; it has 4 deletions (this part is\n   *  left off when there are no deletions); it's using the\n   *  shared doc stores named <code>_1</code> (this part is\n   *  left off if doc stores are private).</p>\n   */\n  public String toString(Directory dir, int pendingDelCount) {\n\n    StringBuilder s = new StringBuilder();\n    s.append(name).append('(').append(version == null ? \"?\" : version).append(')').append(':');\n\n    char cfs = getUseCompoundFile() ? 'c' : 'C';\n    s.append(cfs);\n\n    if (this.dir != dir) {\n      s.append('x');\n    }\n    if (hasVectors) {\n      s.append('v');\n    }\n    s.append(docCount);\n\n    int delCount = getDelCount() + pendingDelCount;\n    if (delCount != 0) {\n      s.append('/').append(delCount);\n    }\n    \n    if (docStoreOffset != -1) {\n      s.append(\"->\").append(docStoreSegment);\n      if (docStoreIsCompoundFile) {\n        s.append('c');\n      } else {\n        s.append('C');\n      }\n      s.append('+').append(docStoreOffset);\n    }\n\n    return s.toString();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d3fe2fc74577855eadfb5eae3153c2fffdaaf791","date":1305237079,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/SegmentInfo#toString(Directory,int).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/SegmentInfo#toString(Directory,int).mjava","sourceNew":"  /** Used for debugging.  Format may suddenly change.\n   *\n   *  <p>Current format looks like\n   *  <code>_a(3.1):c45/4->_1</code>, which means the segment's\n   *  name is <code>_a</code>; it was created with Lucene 3.1 (or\n   *  '?' if it's unkown); it's using compound file\n   *  format (would be <code>C</code> if not compound); it\n   *  has 45 documents; it has 4 deletions (this part is\n   *  left off when there are no deletions); it's using the\n   *  shared doc stores named <code>_1</code> (this part is\n   *  left off if doc stores are private).</p>\n   */\n  public String toString(Directory dir, int pendingDelCount) {\n\n    StringBuilder s = new StringBuilder();\n    s.append(name).append('(').append(version == null ? \"?\" : version).append(')').append(':');\n    char cfs = getUseCompoundFile() ? 'c' : 'C';\n    s.append(cfs);\n\n    if (this.dir != dir) {\n      s.append('x');\n    }\n    try {\n      if (getHasVectors()) {\n        s.append('v');\n      }\n    } catch (IOException e) {\n      throw new RuntimeException(e);\n    }\n    s.append(docCount);\n\n    int delCount = getDelCount() + pendingDelCount;\n    if (delCount != 0) {\n      s.append('/').append(delCount);\n    }\n\n    if (docStoreOffset != -1) {\n      s.append(\"->\").append(docStoreSegment);\n      if (docStoreIsCompoundFile) {\n        s.append('c');\n      } else {\n        s.append('C');\n      }\n      s.append('+').append(docStoreOffset);\n    }\n\n    return s.toString();\n  }\n\n","sourceOld":"  /** Used for debugging.  Format may suddenly change.\n   *\n   *  <p>Current format looks like\n   *  <code>_a(3.1):c45/4->_1</code>, which means the segment's\n   *  name is <code>_a</code>; it was created with Lucene 3.1 (or\n   *  '?' if it's unkown); it's using compound file\n   *  format (would be <code>C</code> if not compound); it\n   *  has 45 documents; it has 4 deletions (this part is\n   *  left off when there are no deletions); it's using the\n   *  shared doc stores named <code>_1</code> (this part is\n   *  left off if doc stores are private).</p>\n   */\n  public String toString(Directory dir, int pendingDelCount) {\n\n    StringBuilder s = new StringBuilder();\n    s.append(name).append('(').append(version == null ? \"?\" : version).append(')').append(':');\n    char cfs = getUseCompoundFile() ? 'c' : 'C';\n    s.append(cfs);\n\n    if (this.dir != dir) {\n      s.append('x');\n    }\n    if (hasVectors) {\n      s.append('v');\n    }\n    s.append(docCount);\n\n    int delCount = getDelCount() + pendingDelCount;\n    if (delCount != 0) {\n      s.append('/').append(delCount);\n    }\n\n    if (docStoreOffset != -1) {\n      s.append(\"->\").append(docStoreSegment);\n      if (docStoreIsCompoundFile) {\n        s.append('c');\n      } else {\n        s.append('C');\n      }\n      s.append('+').append(docStoreOffset);\n    }\n\n    return s.toString();\n  }\n\n","bugFix":null,"bugIntro":["c00afe74a80796ed1f30a9509b150ff104746a1f"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"c700f8d0842d3e52bb2bdfbfdc046a137e836edb","date":1305285499,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/SegmentInfo#toString(Directory,int).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/SegmentInfo#toString(Directory,int).mjava","sourceNew":"  /** Used for debugging.  Format may suddenly change.\n   *\n   *  <p>Current format looks like\n   *  <code>_a(3.1):c45/4->_1</code>, which means the segment's\n   *  name is <code>_a</code>; it was created with Lucene 3.1 (or\n   *  '?' if it's unkown); it's using compound file\n   *  format (would be <code>C</code> if not compound); it\n   *  has 45 documents; it has 4 deletions (this part is\n   *  left off when there are no deletions); it's using the\n   *  shared doc stores named <code>_1</code> (this part is\n   *  left off if doc stores are private).</p>\n   */\n  public String toString(Directory dir, int pendingDelCount) {\n\n    StringBuilder s = new StringBuilder();\n    s.append(name).append('(').append(version == null ? \"?\" : version).append(')').append(':');\n    char cfs = getUseCompoundFile() ? 'c' : 'C';\n    s.append(cfs);\n\n    if (this.dir != dir) {\n      s.append('x');\n    }\n    try {\n      if (getHasVectors()) {\n        s.append('v');\n      }\n    } catch (IOException e) {\n      throw new RuntimeException(e);\n    }\n    s.append(docCount);\n\n    int delCount = getDelCount() + pendingDelCount;\n    if (delCount != 0) {\n      s.append('/').append(delCount);\n    }\n\n    if (docStoreOffset != -1) {\n      s.append(\"->\").append(docStoreSegment);\n      if (docStoreIsCompoundFile) {\n        s.append('c');\n      } else {\n        s.append('C');\n      }\n      s.append('+').append(docStoreOffset);\n    }\n\n    return s.toString();\n  }\n\n","sourceOld":"  /** Used for debugging.  Format may suddenly change.\n   *\n   *  <p>Current format looks like\n   *  <code>_a(3.1):c45/4->_1</code>, which means the segment's\n   *  name is <code>_a</code>; it was created with Lucene 3.1 (or\n   *  '?' if it's unkown); it's using compound file\n   *  format (would be <code>C</code> if not compound); it\n   *  has 45 documents; it has 4 deletions (this part is\n   *  left off when there are no deletions); it's using the\n   *  shared doc stores named <code>_1</code> (this part is\n   *  left off if doc stores are private).</p>\n   */\n  public String toString(Directory dir, int pendingDelCount) {\n\n    StringBuilder s = new StringBuilder();\n    s.append(name).append('(').append(version == null ? \"?\" : version).append(')').append(':');\n    char cfs = getUseCompoundFile() ? 'c' : 'C';\n    s.append(cfs);\n\n    if (this.dir != dir) {\n      s.append('x');\n    }\n    if (hasVectors) {\n      s.append('v');\n    }\n    s.append(docCount);\n\n    int delCount = getDelCount() + pendingDelCount;\n    if (delCount != 0) {\n      s.append('/').append(delCount);\n    }\n\n    if (docStoreOffset != -1) {\n      s.append(\"->\").append(docStoreSegment);\n      if (docStoreIsCompoundFile) {\n        s.append('c');\n      } else {\n        s.append('C');\n      }\n      s.append('+').append(docStoreOffset);\n    }\n\n    return s.toString();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a3776dccca01c11e7046323cfad46a3b4a471233","date":1306100719,"type":3,"author":"Steven Rowe","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/SegmentInfo#toString(Directory,int).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/SegmentInfo#toString(Directory,int).mjava","sourceNew":"  /** Used for debugging.  Format may suddenly change.\n   *\n   *  <p>Current format looks like\n   *  <code>_a(3.1):c45/4->_1</code>, which means the segment's\n   *  name is <code>_a</code>; it was created with Lucene 3.1 (or\n   *  '?' if it's unkown); it's using compound file\n   *  format (would be <code>C</code> if not compound); it\n   *  has 45 documents; it has 4 deletions (this part is\n   *  left off when there are no deletions); it's using the\n   *  shared doc stores named <code>_1</code> (this part is\n   *  left off if doc stores are private).</p>\n   */\n  public String toString(Directory dir, int pendingDelCount) {\n\n    StringBuilder s = new StringBuilder();\n    s.append(name).append('(').append(version == null ? \"?\" : version).append(')').append(':');\n    char cfs = getUseCompoundFile() ? 'c' : 'C';\n    s.append(cfs);\n\n    if (this.dir != dir) {\n      s.append('x');\n    }\n    try {\n      if (getHasVectors()) {\n        s.append('v');\n      }\n    } catch (IOException e) {\n      throw new RuntimeException(e);\n    }\n    s.append(docCount);\n\n    int delCount = getDelCount() + pendingDelCount;\n    if (delCount != 0) {\n      s.append('/').append(delCount);\n    }\n\n    if (docStoreOffset != -1) {\n      s.append(\"->\").append(docStoreSegment);\n      if (docStoreIsCompoundFile) {\n        s.append('c');\n      } else {\n        s.append('C');\n      }\n      s.append('+').append(docStoreOffset);\n    }\n\n    return s.toString();\n  }\n\n","sourceOld":"  /** Used for debugging.  Format may suddenly change.\n   * \n   *  <p>Current format looks like\n   *  <code>_a(3.1):c45/4->_1</code>, which means the segment's\n   *  name is <code>_a</code>; it was created with Lucene 3.1 (or\n   *  '?' if it's unkown); it's using compound file\n   *  format (would be <code>C</code> if not compound); it\n   *  has 45 documents; it has 4 deletions (this part is\n   *  left off when there are no deletions); it's using the\n   *  shared doc stores named <code>_1</code> (this part is\n   *  left off if doc stores are private).</p>\n   */\n  public String toString(Directory dir, int pendingDelCount) {\n\n    StringBuilder s = new StringBuilder();\n    s.append(name).append('(').append(version == null ? \"?\" : version).append(')').append(':');\n\n    char cfs = getUseCompoundFile() ? 'c' : 'C';\n    s.append(cfs);\n\n    if (this.dir != dir) {\n      s.append('x');\n    }\n    if (hasVectors) {\n      s.append('v');\n    }\n    s.append(docCount);\n\n    int delCount = getDelCount() + pendingDelCount;\n    if (delCount != 0) {\n      s.append('/').append(delCount);\n    }\n    \n    if (docStoreOffset != -1) {\n      s.append(\"->\").append(docStoreSegment);\n      if (docStoreIsCompoundFile) {\n        s.append('c');\n      } else {\n        s.append('C');\n      }\n      s.append('+').append(docStoreOffset);\n    }\n\n    return s.toString();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c00afe74a80796ed1f30a9509b150ff104746a1f","date":1312881735,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/SegmentInfo#toString(Directory,int).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/SegmentInfo#toString(Directory,int).mjava","sourceNew":"  /** Used for debugging.  Format may suddenly change.\n   *\n   *  <p>Current format looks like\n   *  <code>_a(3.1):c45/4->_1</code>, which means the segment's\n   *  name is <code>_a</code>; it was created with Lucene 3.1 (or\n   *  '?' if it's unkown); it's using compound file\n   *  format (would be <code>C</code> if not compound); it\n   *  has 45 documents; it has 4 deletions (this part is\n   *  left off when there are no deletions); it's using the\n   *  shared doc stores named <code>_1</code> (this part is\n   *  left off if doc stores are private).</p>\n   */\n  public String toString(Directory dir, int pendingDelCount) {\n\n    StringBuilder s = new StringBuilder();\n    s.append(name).append('(').append(version == null ? \"?\" : version).append(')').append(':');\n    char cfs = getUseCompoundFile() ? 'c' : 'C';\n    s.append(cfs);\n\n    if (this.dir != dir) {\n      s.append('x');\n    }\n    try {\n      if (getHasVectors()) {\n        s.append('v');\n      }\n    } catch (Throwable e) {\n      // Messy: because getHasVectors may be used in an\n      // un-thread-safe way, and may attempt to open an fnm\n      // file that has since (legitimately) been deleted by\n      // IndexWriter, instead of throwing these exceptions\n      // up, just add v? to indicate we don't know if this\n      // segment has vectors:\n      s.append(\"v?\");\n    }\n    s.append(docCount);\n\n    int delCount = getDelCount() + pendingDelCount;\n    if (delCount != 0) {\n      s.append('/').append(delCount);\n    }\n\n    if (docStoreOffset != -1) {\n      s.append(\"->\").append(docStoreSegment);\n      if (docStoreIsCompoundFile) {\n        s.append('c');\n      } else {\n        s.append('C');\n      }\n      s.append('+').append(docStoreOffset);\n    }\n\n    return s.toString();\n  }\n\n","sourceOld":"  /** Used for debugging.  Format may suddenly change.\n   *\n   *  <p>Current format looks like\n   *  <code>_a(3.1):c45/4->_1</code>, which means the segment's\n   *  name is <code>_a</code>; it was created with Lucene 3.1 (or\n   *  '?' if it's unkown); it's using compound file\n   *  format (would be <code>C</code> if not compound); it\n   *  has 45 documents; it has 4 deletions (this part is\n   *  left off when there are no deletions); it's using the\n   *  shared doc stores named <code>_1</code> (this part is\n   *  left off if doc stores are private).</p>\n   */\n  public String toString(Directory dir, int pendingDelCount) {\n\n    StringBuilder s = new StringBuilder();\n    s.append(name).append('(').append(version == null ? \"?\" : version).append(')').append(':');\n    char cfs = getUseCompoundFile() ? 'c' : 'C';\n    s.append(cfs);\n\n    if (this.dir != dir) {\n      s.append('x');\n    }\n    try {\n      if (getHasVectors()) {\n        s.append('v');\n      }\n    } catch (IOException e) {\n      throw new RuntimeException(e);\n    }\n    s.append(docCount);\n\n    int delCount = getDelCount() + pendingDelCount;\n    if (delCount != 0) {\n      s.append('/').append(delCount);\n    }\n\n    if (docStoreOffset != -1) {\n      s.append(\"->\").append(docStoreSegment);\n      if (docStoreIsCompoundFile) {\n        s.append('c');\n      } else {\n        s.append('C');\n      }\n      s.append('+').append(docStoreOffset);\n    }\n\n    return s.toString();\n  }\n\n","bugFix":["d3fe2fc74577855eadfb5eae3153c2fffdaaf791"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a6adfdb3f33dbaf27203539f573faac3966cc55f","date":1318443641,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/SegmentInfo#toString(Directory,int).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/SegmentInfo#toString(Directory,int).mjava","sourceNew":"  /** Used for debugging.  Format may suddenly change.\n   *\n   *  <p>Current format looks like\n   *  <code>_a(3.1):c45/4->_1</code>, which means the segment's\n   *  name is <code>_a</code>; it was created with Lucene 3.1 (or\n   *  '?' if it's unknown); it's using compound file\n   *  format (would be <code>C</code> if not compound); it\n   *  has 45 documents; it has 4 deletions (this part is\n   *  left off when there are no deletions); it's using the\n   *  shared doc stores named <code>_1</code> (this part is\n   *  left off if doc stores are private).</p>\n   */\n  public String toString(Directory dir, int pendingDelCount) {\n\n    StringBuilder s = new StringBuilder();\n    s.append(name).append('(').append(version == null ? \"?\" : version).append(')').append(':');\n    char cfs = getUseCompoundFile() ? 'c' : 'C';\n    s.append(cfs);\n\n    if (this.dir != dir) {\n      s.append('x');\n    }\n    try {\n      if (getHasVectors()) {\n        s.append('v');\n      }\n    } catch (Throwable e) {\n      // Messy: because getHasVectors may be used in an\n      // thread-unsafe way, and may attempt to open an fnm\n      // file that has since (legitimately) been deleted by\n      // IndexWriter, instead of throwing these exceptions\n      // up, just add v? to indicate we don't know if this\n      // segment has vectors:\n      s.append(\"v?\");\n    }\n    s.append(docCount);\n\n    int delCount = getDelCount() + pendingDelCount;\n    if (delCount != 0) {\n      s.append('/').append(delCount);\n    }\n\n    if (docStoreOffset != -1) {\n      s.append(\"->\").append(docStoreSegment);\n      if (docStoreIsCompoundFile) {\n        s.append('c');\n      } else {\n        s.append('C');\n      }\n      s.append('+').append(docStoreOffset);\n    }\n\n    return s.toString();\n  }\n\n","sourceOld":"  /** Used for debugging.  Format may suddenly change.\n   *\n   *  <p>Current format looks like\n   *  <code>_a(3.1):c45/4->_1</code>, which means the segment's\n   *  name is <code>_a</code>; it was created with Lucene 3.1 (or\n   *  '?' if it's unkown); it's using compound file\n   *  format (would be <code>C</code> if not compound); it\n   *  has 45 documents; it has 4 deletions (this part is\n   *  left off when there are no deletions); it's using the\n   *  shared doc stores named <code>_1</code> (this part is\n   *  left off if doc stores are private).</p>\n   */\n  public String toString(Directory dir, int pendingDelCount) {\n\n    StringBuilder s = new StringBuilder();\n    s.append(name).append('(').append(version == null ? \"?\" : version).append(')').append(':');\n    char cfs = getUseCompoundFile() ? 'c' : 'C';\n    s.append(cfs);\n\n    if (this.dir != dir) {\n      s.append('x');\n    }\n    try {\n      if (getHasVectors()) {\n        s.append('v');\n      }\n    } catch (Throwable e) {\n      // Messy: because getHasVectors may be used in an\n      // un-thread-safe way, and may attempt to open an fnm\n      // file that has since (legitimately) been deleted by\n      // IndexWriter, instead of throwing these exceptions\n      // up, just add v? to indicate we don't know if this\n      // segment has vectors:\n      s.append(\"v?\");\n    }\n    s.append(docCount);\n\n    int delCount = getDelCount() + pendingDelCount;\n    if (delCount != 0) {\n      s.append('/').append(delCount);\n    }\n\n    if (docStoreOffset != -1) {\n      s.append(\"->\").append(docStoreSegment);\n      if (docStoreIsCompoundFile) {\n        s.append('c');\n      } else {\n        s.append('C');\n      }\n      s.append('+').append(docStoreOffset);\n    }\n\n    return s.toString();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":5,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/SegmentInfo#toString(Directory,int).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/SegmentInfo#toString(Directory,int).mjava","sourceNew":"  /** Used for debugging.  Format may suddenly change.\n   *\n   *  <p>Current format looks like\n   *  <code>_a(3.1):c45/4->_1</code>, which means the segment's\n   *  name is <code>_a</code>; it was created with Lucene 3.1 (or\n   *  '?' if it's unknown); it's using compound file\n   *  format (would be <code>C</code> if not compound); it\n   *  has 45 documents; it has 4 deletions (this part is\n   *  left off when there are no deletions); it's using the\n   *  shared doc stores named <code>_1</code> (this part is\n   *  left off if doc stores are private).</p>\n   */\n  public String toString(Directory dir, int pendingDelCount) {\n\n    StringBuilder s = new StringBuilder();\n    s.append(name).append('(').append(version == null ? \"?\" : version).append(')').append(':');\n    char cfs = getUseCompoundFile() ? 'c' : 'C';\n    s.append(cfs);\n\n    if (this.dir != dir) {\n      s.append('x');\n    }\n    try {\n      if (getHasVectors()) {\n        s.append('v');\n      }\n    } catch (Throwable e) {\n      // Messy: because getHasVectors may be used in an\n      // thread-unsafe way, and may attempt to open an fnm\n      // file that has since (legitimately) been deleted by\n      // IndexWriter, instead of throwing these exceptions\n      // up, just add v? to indicate we don't know if this\n      // segment has vectors:\n      s.append(\"v?\");\n    }\n    s.append(docCount);\n\n    int delCount = getDelCount() + pendingDelCount;\n    if (delCount != 0) {\n      s.append('/').append(delCount);\n    }\n\n    if (docStoreOffset != -1) {\n      s.append(\"->\").append(docStoreSegment);\n      if (docStoreIsCompoundFile) {\n        s.append('c');\n      } else {\n        s.append('C');\n      }\n      s.append('+').append(docStoreOffset);\n    }\n\n    return s.toString();\n  }\n\n","sourceOld":"  /** Used for debugging.  Format may suddenly change.\n   *\n   *  <p>Current format looks like\n   *  <code>_a(3.1):c45/4->_1</code>, which means the segment's\n   *  name is <code>_a</code>; it was created with Lucene 3.1 (or\n   *  '?' if it's unknown); it's using compound file\n   *  format (would be <code>C</code> if not compound); it\n   *  has 45 documents; it has 4 deletions (this part is\n   *  left off when there are no deletions); it's using the\n   *  shared doc stores named <code>_1</code> (this part is\n   *  left off if doc stores are private).</p>\n   */\n  public String toString(Directory dir, int pendingDelCount) {\n\n    StringBuilder s = new StringBuilder();\n    s.append(name).append('(').append(version == null ? \"?\" : version).append(')').append(':');\n    char cfs = getUseCompoundFile() ? 'c' : 'C';\n    s.append(cfs);\n\n    if (this.dir != dir) {\n      s.append('x');\n    }\n    try {\n      if (getHasVectors()) {\n        s.append('v');\n      }\n    } catch (Throwable e) {\n      // Messy: because getHasVectors may be used in an\n      // thread-unsafe way, and may attempt to open an fnm\n      // file that has since (legitimately) been deleted by\n      // IndexWriter, instead of throwing these exceptions\n      // up, just add v? to indicate we don't know if this\n      // segment has vectors:\n      s.append(\"v?\");\n    }\n    s.append(docCount);\n\n    int delCount = getDelCount() + pendingDelCount;\n    if (delCount != 0) {\n      s.append('/').append(delCount);\n    }\n\n    if (docStoreOffset != -1) {\n      s.append(\"->\").append(docStoreSegment);\n      if (docStoreIsCompoundFile) {\n        s.append('c');\n      } else {\n        s.append('C');\n      }\n      s.append('+').append(docStoreOffset);\n    }\n\n    return s.toString();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"44fcbde6fb2ac44ee3b45e013e54a42911e689ff":["6267e1ce56c2eec111425690cd04e251b6f14952"],"d3fe2fc74577855eadfb5eae3153c2fffdaaf791":["b3e06be49006ecac364d39d12b9c9f74882f9b9f"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a6adfdb3f33dbaf27203539f573faac3966cc55f"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["6267e1ce56c2eec111425690cd04e251b6f14952","2ed5989ef2bc7bbd155dbff1e023ea849003dbf7"],"c00afe74a80796ed1f30a9509b150ff104746a1f":["d3fe2fc74577855eadfb5eae3153c2fffdaaf791"],"bb9b72f7c3d7827c64dd4ec580ded81778da361d":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","b9dc373b96fc96e6300e2f5af947f6998e6aa6a6"],"01e5948db9a07144112d2f08f28ca2e3cd880348":["14ec33385f6fbb6ce172882d14605790418a5d31"],"c0ef0193974807e4bddf5432a6b0287fe4d6c9df":["bde51b089eb7f86171eb3406e38a274743f9b7ac","14ec33385f6fbb6ce172882d14605790418a5d31"],"14ec33385f6fbb6ce172882d14605790418a5d31":["b0c7a8f7304b75b1528814c5820fa23a96816c27"],"29ef99d61cda9641b6250bf9567329a6e65f901d":["ab5cb6a74aefb78aa0569857970b9151dfe2e787","b9dc373b96fc96e6300e2f5af947f6998e6aa6a6"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"c700f8d0842d3e52bb2bdfbfdc046a137e836edb":["135621f3a0670a9394eb563224a3b76cc4dddc0f","d3fe2fc74577855eadfb5eae3153c2fffdaaf791"],"bde51b089eb7f86171eb3406e38a274743f9b7ac":["bb9b72f7c3d7827c64dd4ec580ded81778da361d","b0c7a8f7304b75b1528814c5820fa23a96816c27"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"b9dc373b96fc96e6300e2f5af947f6998e6aa6a6":["2ed5989ef2bc7bbd155dbff1e023ea849003dbf7"],"2ed5989ef2bc7bbd155dbff1e023ea849003dbf7":["44fcbde6fb2ac44ee3b45e013e54a42911e689ff"],"135621f3a0670a9394eb563224a3b76cc4dddc0f":["29ef99d61cda9641b6250bf9567329a6e65f901d","b3e06be49006ecac364d39d12b9c9f74882f9b9f"],"b3e06be49006ecac364d39d12b9c9f74882f9b9f":["01e5948db9a07144112d2f08f28ca2e3cd880348","45669a651c970812a680841b97a77cce06af559f"],"ab5cb6a74aefb78aa0569857970b9151dfe2e787":["6267e1ce56c2eec111425690cd04e251b6f14952","2ed5989ef2bc7bbd155dbff1e023ea849003dbf7"],"a6adfdb3f33dbaf27203539f573faac3966cc55f":["c00afe74a80796ed1f30a9509b150ff104746a1f"],"6267e1ce56c2eec111425690cd04e251b6f14952":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"b0c7a8f7304b75b1528814c5820fa23a96816c27":["b9dc373b96fc96e6300e2f5af947f6998e6aa6a6"],"a3776dccca01c11e7046323cfad46a3b4a471233":["14ec33385f6fbb6ce172882d14605790418a5d31","d3fe2fc74577855eadfb5eae3153c2fffdaaf791"],"45669a651c970812a680841b97a77cce06af559f":["c0ef0193974807e4bddf5432a6b0287fe4d6c9df","01e5948db9a07144112d2f08f28ca2e3cd880348"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"]},"commit2Childs":{"44fcbde6fb2ac44ee3b45e013e54a42911e689ff":["2ed5989ef2bc7bbd155dbff1e023ea849003dbf7"],"d3fe2fc74577855eadfb5eae3153c2fffdaaf791":["c00afe74a80796ed1f30a9509b150ff104746a1f","c700f8d0842d3e52bb2bdfbfdc046a137e836edb","a3776dccca01c11e7046323cfad46a3b4a471233"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["bb9b72f7c3d7827c64dd4ec580ded81778da361d"],"c00afe74a80796ed1f30a9509b150ff104746a1f":["a6adfdb3f33dbaf27203539f573faac3966cc55f"],"bb9b72f7c3d7827c64dd4ec580ded81778da361d":["bde51b089eb7f86171eb3406e38a274743f9b7ac"],"01e5948db9a07144112d2f08f28ca2e3cd880348":["b3e06be49006ecac364d39d12b9c9f74882f9b9f","45669a651c970812a680841b97a77cce06af559f"],"c0ef0193974807e4bddf5432a6b0287fe4d6c9df":["45669a651c970812a680841b97a77cce06af559f"],"14ec33385f6fbb6ce172882d14605790418a5d31":["01e5948db9a07144112d2f08f28ca2e3cd880348","c0ef0193974807e4bddf5432a6b0287fe4d6c9df","a3776dccca01c11e7046323cfad46a3b4a471233"],"29ef99d61cda9641b6250bf9567329a6e65f901d":["135621f3a0670a9394eb563224a3b76cc4dddc0f"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"c700f8d0842d3e52bb2bdfbfdc046a137e836edb":[],"bde51b089eb7f86171eb3406e38a274743f9b7ac":["c0ef0193974807e4bddf5432a6b0287fe4d6c9df"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["6267e1ce56c2eec111425690cd04e251b6f14952"],"b9dc373b96fc96e6300e2f5af947f6998e6aa6a6":["bb9b72f7c3d7827c64dd4ec580ded81778da361d","29ef99d61cda9641b6250bf9567329a6e65f901d","b0c7a8f7304b75b1528814c5820fa23a96816c27"],"2ed5989ef2bc7bbd155dbff1e023ea849003dbf7":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","b9dc373b96fc96e6300e2f5af947f6998e6aa6a6","ab5cb6a74aefb78aa0569857970b9151dfe2e787"],"135621f3a0670a9394eb563224a3b76cc4dddc0f":["c700f8d0842d3e52bb2bdfbfdc046a137e836edb"],"b3e06be49006ecac364d39d12b9c9f74882f9b9f":["d3fe2fc74577855eadfb5eae3153c2fffdaaf791","135621f3a0670a9394eb563224a3b76cc4dddc0f"],"ab5cb6a74aefb78aa0569857970b9151dfe2e787":["29ef99d61cda9641b6250bf9567329a6e65f901d"],"a6adfdb3f33dbaf27203539f573faac3966cc55f":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"6267e1ce56c2eec111425690cd04e251b6f14952":["44fcbde6fb2ac44ee3b45e013e54a42911e689ff","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","ab5cb6a74aefb78aa0569857970b9151dfe2e787"],"b0c7a8f7304b75b1528814c5820fa23a96816c27":["14ec33385f6fbb6ce172882d14605790418a5d31","bde51b089eb7f86171eb3406e38a274743f9b7ac"],"a3776dccca01c11e7046323cfad46a3b4a471233":[],"45669a651c970812a680841b97a77cce06af559f":["b3e06be49006ecac364d39d12b9c9f74882f9b9f"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["c700f8d0842d3e52bb2bdfbfdc046a137e836edb","a3776dccca01c11e7046323cfad46a3b4a471233","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}