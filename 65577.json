{"path":"lucene/src/java/org/apache/lucene/index/values/IndexDocValuesArray.FixedIntsEnumImpl#FixedIntsEnumImpl(AttributeSource,IndexInput,ValueType,int).mjava","commits":[{"id":"5f709d06503a0d7b88fbc7fe89cdc51caadfdaa7","date":1309190785,"type":1,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/values/IndexDocValuesArray.FixedIntsEnumImpl#FixedIntsEnumImpl(AttributeSource,IndexInput,ValueType,int).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/values/IndexDocValuesArray.FixedIntsEnumImpl#FixedIntsEnumImpl(AttributeSource,IndexInput,ValueType).mjava","sourceNew":"    private FixedIntsEnumImpl(AttributeSource source, IndexInput dataIn,\n        ValueType type, int maxDoc) throws IOException {\n      super(source, type);\n      switch (type) {\n      case FIXED_INTS_16:\n        sizeInByte = 2;\n        break;\n      case FIXED_INTS_32:\n        sizeInByte = 4;\n        break;\n      case FIXED_INTS_64:\n        sizeInByte = 8;\n        break;\n      case FIXED_INTS_8:\n        sizeInByte = 1;\n        break;\n      default:\n        throw new IllegalStateException(\"type \" + type\n            + \" is not a fixed int type\");\n      }\n      intsRef.offset = 0;\n      this.dataIn = dataIn;\n      this.maxDoc = maxDoc;\n\n    }\n\n","sourceOld":"    private FixedIntsEnumImpl(AttributeSource source, IndexInput dataIn,\n        ValueType type) throws IOException {\n      super(source, type);\n      switch (type) {\n      case FIXED_INTS_16:\n        sizeInByte = 2;\n        break;\n      case FIXED_INTS_32:\n        sizeInByte = 4;\n        break;\n      case FIXED_INTS_64:\n        sizeInByte = 8;\n        break;\n      case FIXED_INTS_8:\n        sizeInByte = 1;\n        break;\n      default:\n        throw new IllegalStateException(\"type \" + type\n            + \" is not a fixed int type\");\n      }\n      intsRef.offset = 0;\n      this.dataIn = dataIn;\n      maxDoc = dataIn.readInt();\n\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2553b00f699380c64959ccb27991289aae87be2e","date":1309290151,"type":0,"author":"Steven Rowe","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/values/IndexDocValuesArray.FixedIntsEnumImpl#FixedIntsEnumImpl(AttributeSource,IndexInput,ValueType,int).mjava","pathOld":"/dev/null","sourceNew":"    private FixedIntsEnumImpl(AttributeSource source, IndexInput dataIn,\n        ValueType type, int maxDoc) throws IOException {\n      super(source, type);\n      switch (type) {\n      case FIXED_INTS_16:\n        sizeInByte = 2;\n        break;\n      case FIXED_INTS_32:\n        sizeInByte = 4;\n        break;\n      case FIXED_INTS_64:\n        sizeInByte = 8;\n        break;\n      case FIXED_INTS_8:\n        sizeInByte = 1;\n        break;\n      default:\n        throw new IllegalStateException(\"type \" + type\n            + \" is not a fixed int type\");\n      }\n      intsRef.offset = 0;\n      this.dataIn = dataIn;\n      this.maxDoc = maxDoc;\n\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d083e83f225b11e5fdd900e83d26ddb385b6955c","date":1310029438,"type":0,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/values/IndexDocValuesArray.FixedIntsEnumImpl#FixedIntsEnumImpl(AttributeSource,IndexInput,ValueType,int).mjava","pathOld":"/dev/null","sourceNew":"    private FixedIntsEnumImpl(AttributeSource source, IndexInput dataIn,\n        ValueType type, int maxDoc) throws IOException {\n      super(source, type);\n      switch (type) {\n      case FIXED_INTS_16:\n        sizeInByte = 2;\n        break;\n      case FIXED_INTS_32:\n        sizeInByte = 4;\n        break;\n      case FIXED_INTS_64:\n        sizeInByte = 8;\n        break;\n      case FIXED_INTS_8:\n        sizeInByte = 1;\n        break;\n      default:\n        throw new IllegalStateException(\"type \" + type\n            + \" is not a fixed int type\");\n      }\n      intsRef.offset = 0;\n      this.dataIn = dataIn;\n      this.maxDoc = maxDoc;\n\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"85eb75e0c0203e44dcf686f35876cf6080f3a671","date":1317221550,"type":5,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/values/Ints.IntsWriter#add(int,long).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/values/IndexDocValuesArray.FixedIntsEnumImpl#FixedIntsEnumImpl(AttributeSource,IndexInput,ValueType,int).mjava","sourceNew":"    @Override\n    public void add(int docID, long v) throws IOException {\n      switch (valueType) {\n      case FIXED_INTS_64:\n        bytesRef.copy(v);\n        break;\n      case FIXED_INTS_32:\n        bytesRef.copy((int) (0xFFFFFFFF & v));\n        break;\n      case FIXED_INTS_16:\n        bytesRef.copy((short) (0xFFFFL & v));\n        break;\n      case FIXED_INTS_8:\n        bytesRef.bytes[0] = (byte) (0xFFL & v);\n        break;\n      default:\n        throw new IllegalStateException(\"illegal type \" + valueType);\n      }\n\n      add(docID, bytesRef);\n    }\n\n","sourceOld":"    private FixedIntsEnumImpl(AttributeSource source, IndexInput dataIn,\n        ValueType type, int maxDoc) throws IOException {\n      super(source, type);\n      switch (type) {\n      case FIXED_INTS_16:\n        sizeInByte = 2;\n        break;\n      case FIXED_INTS_32:\n        sizeInByte = 4;\n        break;\n      case FIXED_INTS_64:\n        sizeInByte = 8;\n        break;\n      case FIXED_INTS_8:\n        sizeInByte = 1;\n        break;\n      default:\n        throw new IllegalStateException(\"type \" + type\n            + \" is not a fixed int type\");\n      }\n      intsRef.offset = 0;\n      this.dataIn = dataIn;\n      this.maxDoc = maxDoc;\n\n    }\n\n","bugFix":null,"bugIntro":["fa0f44f887719e97183771e977cfc4bfb485b766","fa0f44f887719e97183771e977cfc4bfb485b766"],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"5f709d06503a0d7b88fbc7fe89cdc51caadfdaa7":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"85eb75e0c0203e44dcf686f35876cf6080f3a671":["5f709d06503a0d7b88fbc7fe89cdc51caadfdaa7"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"2553b00f699380c64959ccb27991289aae87be2e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","5f709d06503a0d7b88fbc7fe89cdc51caadfdaa7"],"d083e83f225b11e5fdd900e83d26ddb385b6955c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","5f709d06503a0d7b88fbc7fe89cdc51caadfdaa7"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["85eb75e0c0203e44dcf686f35876cf6080f3a671"]},"commit2Childs":{"5f709d06503a0d7b88fbc7fe89cdc51caadfdaa7":["85eb75e0c0203e44dcf686f35876cf6080f3a671","2553b00f699380c64959ccb27991289aae87be2e","d083e83f225b11e5fdd900e83d26ddb385b6955c"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["5f709d06503a0d7b88fbc7fe89cdc51caadfdaa7","2553b00f699380c64959ccb27991289aae87be2e","d083e83f225b11e5fdd900e83d26ddb385b6955c"],"85eb75e0c0203e44dcf686f35876cf6080f3a671":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"2553b00f699380c64959ccb27991289aae87be2e":[],"d083e83f225b11e5fdd900e83d26ddb385b6955c":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["2553b00f699380c64959ccb27991289aae87be2e","d083e83f225b11e5fdd900e83d26ddb385b6955c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}