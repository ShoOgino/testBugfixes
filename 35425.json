{"path":"lucene/core/src/java/org/apache/lucene/codecs/lucene40/Lucene40DocValuesReader#correctBuggyOrds(SortedDocValues).mjava","commits":[{"id":"ef514ff4e66c8f03df0d725849877ace5c16da0a","date":1359061656,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/lucene40/Lucene40DocValuesReader#correctBuggyOrds(SortedDocValues).mjava","pathOld":"/dev/null","sourceNew":"  // detects and corrects LUCENE-4717 in old indexes\n  private SortedDocValues correctBuggyOrds(final SortedDocValues in) {\n    final int maxDoc = state.segmentInfo.getDocCount();\n    for (int i = 0; i < maxDoc; i++) {\n      if (in.getOrd(i) == 0) {\n        return in; // ok\n      }\n    }\n    \n    // we had ord holes, return an ord-shifting-impl that corrects the bug\n    return new SortedDocValues() {\n      @Override\n      public int getOrd(int docID) {\n        return in.getOrd(docID) - 1;\n      }\n\n      @Override\n      public void lookupOrd(int ord, BytesRef result) {\n        in.lookupOrd(ord+1, result);\n      }\n\n      @Override\n      public int getValueCount() {\n        return in.getValueCount() - 1;\n      }\n    };\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["dac1db31006989ae24922811f00f909d30f1391d"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"d4d69c535930b5cce125cff868d40f6373dc27d4","date":1360270101,"type":0,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/lucene40/Lucene40DocValuesReader#correctBuggyOrds(SortedDocValues).mjava","pathOld":"/dev/null","sourceNew":"  // detects and corrects LUCENE-4717 in old indexes\n  private SortedDocValues correctBuggyOrds(final SortedDocValues in) {\n    final int maxDoc = state.segmentInfo.getDocCount();\n    for (int i = 0; i < maxDoc; i++) {\n      if (in.getOrd(i) == 0) {\n        return in; // ok\n      }\n    }\n    \n    // we had ord holes, return an ord-shifting-impl that corrects the bug\n    return new SortedDocValues() {\n      @Override\n      public int getOrd(int docID) {\n        return in.getOrd(docID) - 1;\n      }\n\n      @Override\n      public void lookupOrd(int ord, BytesRef result) {\n        in.lookupOrd(ord+1, result);\n      }\n\n      @Override\n      public int getValueCount() {\n        return in.getValueCount() - 1;\n      }\n    };\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"dac1db31006989ae24922811f00f909d30f1391d","date":1387560411,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/lucene40/Lucene40DocValuesReader#correctBuggyOrds(SortedDocValues).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/lucene40/Lucene40DocValuesReader#correctBuggyOrds(SortedDocValues).mjava","sourceNew":"  // detects and corrects LUCENE-4717 in old indexes\n  private SortedDocValues correctBuggyOrds(final SortedDocValues in) {\n    final int maxDoc = state.segmentInfo.getDocCount();\n    for (int i = 0; i < maxDoc; i++) {\n      if (in.getOrd(i) == 0) {\n        return in; // ok\n      }\n    }\n\n    // we had ord holes, return an ord-shifting-impl that corrects the bug\n    return new SortedDocValues() {\n      @Override\n      public int getOrd(int docID) {\n        return in.getOrd(docID) - 1;\n      }\n\n      @Override\n      public void lookupOrd(int ord, BytesRef result) {\n        in.lookupOrd(ord+1, result);\n      }\n\n      @Override\n      public int getValueCount() {\n        return in.getValueCount() - 1;\n      }\n    };\n  }\n\n","sourceOld":"  // detects and corrects LUCENE-4717 in old indexes\n  private SortedDocValues correctBuggyOrds(final SortedDocValues in) {\n    final int maxDoc = state.segmentInfo.getDocCount();\n    for (int i = 0; i < maxDoc; i++) {\n      if (in.getOrd(i) == 0) {\n        return in; // ok\n      }\n    }\n    \n    // we had ord holes, return an ord-shifting-impl that corrects the bug\n    return new SortedDocValues() {\n      @Override\n      public int getOrd(int docID) {\n        return in.getOrd(docID) - 1;\n      }\n\n      @Override\n      public void lookupOrd(int ord, BytesRef result) {\n        in.lookupOrd(ord+1, result);\n      }\n\n      @Override\n      public int getValueCount() {\n        return in.getValueCount() - 1;\n      }\n    };\n  }\n\n","bugFix":["ef514ff4e66c8f03df0d725849877ace5c16da0a"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"53fc2f4c5ce4f2053be3d5f5d14d79129ebb4bbf","date":1401983689,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/lucene40/Lucene40DocValuesReader#correctBuggyOrds(SortedDocValues).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/lucene40/Lucene40DocValuesReader#correctBuggyOrds(SortedDocValues).mjava","sourceNew":"  // detects and corrects LUCENE-4717 in old indexes\n  private SortedDocValues correctBuggyOrds(final SortedDocValues in) {\n    final int maxDoc = state.segmentInfo.getDocCount();\n    for (int i = 0; i < maxDoc; i++) {\n      if (in.getOrd(i) == 0) {\n        return in; // ok\n      }\n    }\n\n    // we had ord holes, return an ord-shifting-impl that corrects the bug\n    return new SortedDocValues() {\n      @Override\n      public int getOrd(int docID) {\n        return in.getOrd(docID) - 1;\n      }\n\n      @Override\n      public BytesRef lookupOrd(int ord) {\n        return in.lookupOrd(ord+1);\n      }\n\n      @Override\n      public int getValueCount() {\n        return in.getValueCount() - 1;\n      }\n    };\n  }\n\n","sourceOld":"  // detects and corrects LUCENE-4717 in old indexes\n  private SortedDocValues correctBuggyOrds(final SortedDocValues in) {\n    final int maxDoc = state.segmentInfo.getDocCount();\n    for (int i = 0; i < maxDoc; i++) {\n      if (in.getOrd(i) == 0) {\n        return in; // ok\n      }\n    }\n\n    // we had ord holes, return an ord-shifting-impl that corrects the bug\n    return new SortedDocValues() {\n      @Override\n      public int getOrd(int docID) {\n        return in.getOrd(docID) - 1;\n      }\n\n      @Override\n      public void lookupOrd(int ord, BytesRef result) {\n        in.lookupOrd(ord+1, result);\n      }\n\n      @Override\n      public int getValueCount() {\n        return in.getValueCount() - 1;\n      }\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cc45c615dbb82bf79d5f9550286098367874fbf","date":1409571423,"type":5,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/backward-codecs/src/java/org/apache/lucene/codecs/lucene40/Lucene40DocValuesReader#correctBuggyOrds(SortedDocValues).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/lucene40/Lucene40DocValuesReader#correctBuggyOrds(SortedDocValues).mjava","sourceNew":"  // detects and corrects LUCENE-4717 in old indexes\n  private SortedDocValues correctBuggyOrds(final SortedDocValues in) {\n    final int maxDoc = state.segmentInfo.getDocCount();\n    for (int i = 0; i < maxDoc; i++) {\n      if (in.getOrd(i) == 0) {\n        return in; // ok\n      }\n    }\n\n    // we had ord holes, return an ord-shifting-impl that corrects the bug\n    return new SortedDocValues() {\n      @Override\n      public int getOrd(int docID) {\n        return in.getOrd(docID) - 1;\n      }\n\n      @Override\n      public BytesRef lookupOrd(int ord) {\n        return in.lookupOrd(ord+1);\n      }\n\n      @Override\n      public int getValueCount() {\n        return in.getValueCount() - 1;\n      }\n    };\n  }\n\n","sourceOld":"  // detects and corrects LUCENE-4717 in old indexes\n  private SortedDocValues correctBuggyOrds(final SortedDocValues in) {\n    final int maxDoc = state.segmentInfo.getDocCount();\n    for (int i = 0; i < maxDoc; i++) {\n      if (in.getOrd(i) == 0) {\n        return in; // ok\n      }\n    }\n\n    // we had ord holes, return an ord-shifting-impl that corrects the bug\n    return new SortedDocValues() {\n      @Override\n      public int getOrd(int docID) {\n        return in.getOrd(docID) - 1;\n      }\n\n      @Override\n      public BytesRef lookupOrd(int ord) {\n        return in.lookupOrd(ord+1);\n      }\n\n      @Override\n      public int getValueCount() {\n        return in.getValueCount() - 1;\n      }\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"402ad3ddc9da7b70da1b167667a60ece6a1381fb","date":1409656478,"type":5,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/backward-codecs/src/java/org/apache/lucene/codecs/lucene40/Lucene40DocValuesReader#correctBuggyOrds(SortedDocValues).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/lucene40/Lucene40DocValuesReader#correctBuggyOrds(SortedDocValues).mjava","sourceNew":"  // detects and corrects LUCENE-4717 in old indexes\n  private SortedDocValues correctBuggyOrds(final SortedDocValues in) {\n    final int maxDoc = state.segmentInfo.getDocCount();\n    for (int i = 0; i < maxDoc; i++) {\n      if (in.getOrd(i) == 0) {\n        return in; // ok\n      }\n    }\n\n    // we had ord holes, return an ord-shifting-impl that corrects the bug\n    return new SortedDocValues() {\n      @Override\n      public int getOrd(int docID) {\n        return in.getOrd(docID) - 1;\n      }\n\n      @Override\n      public BytesRef lookupOrd(int ord) {\n        return in.lookupOrd(ord+1);\n      }\n\n      @Override\n      public int getValueCount() {\n        return in.getValueCount() - 1;\n      }\n    };\n  }\n\n","sourceOld":"  // detects and corrects LUCENE-4717 in old indexes\n  private SortedDocValues correctBuggyOrds(final SortedDocValues in) {\n    final int maxDoc = state.segmentInfo.getDocCount();\n    for (int i = 0; i < maxDoc; i++) {\n      if (in.getOrd(i) == 0) {\n        return in; // ok\n      }\n    }\n\n    // we had ord holes, return an ord-shifting-impl that corrects the bug\n    return new SortedDocValues() {\n      @Override\n      public int getOrd(int docID) {\n        return in.getOrd(docID) - 1;\n      }\n\n      @Override\n      public BytesRef lookupOrd(int ord) {\n        return in.lookupOrd(ord+1);\n      }\n\n      @Override\n      public int getValueCount() {\n        return in.getValueCount() - 1;\n      }\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"d4d69c535930b5cce125cff868d40f6373dc27d4":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","ef514ff4e66c8f03df0d725849877ace5c16da0a"],"53fc2f4c5ce4f2053be3d5f5d14d79129ebb4bbf":["dac1db31006989ae24922811f00f909d30f1391d"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"4cc45c615dbb82bf79d5f9550286098367874fbf":["53fc2f4c5ce4f2053be3d5f5d14d79129ebb4bbf"],"dac1db31006989ae24922811f00f909d30f1391d":["d4d69c535930b5cce125cff868d40f6373dc27d4"],"ef514ff4e66c8f03df0d725849877ace5c16da0a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["402ad3ddc9da7b70da1b167667a60ece6a1381fb"],"402ad3ddc9da7b70da1b167667a60ece6a1381fb":["53fc2f4c5ce4f2053be3d5f5d14d79129ebb4bbf","4cc45c615dbb82bf79d5f9550286098367874fbf"]},"commit2Childs":{"d4d69c535930b5cce125cff868d40f6373dc27d4":["dac1db31006989ae24922811f00f909d30f1391d"],"53fc2f4c5ce4f2053be3d5f5d14d79129ebb4bbf":["4cc45c615dbb82bf79d5f9550286098367874fbf","402ad3ddc9da7b70da1b167667a60ece6a1381fb"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["d4d69c535930b5cce125cff868d40f6373dc27d4","ef514ff4e66c8f03df0d725849877ace5c16da0a"],"4cc45c615dbb82bf79d5f9550286098367874fbf":["402ad3ddc9da7b70da1b167667a60ece6a1381fb"],"dac1db31006989ae24922811f00f909d30f1391d":["53fc2f4c5ce4f2053be3d5f5d14d79129ebb4bbf"],"ef514ff4e66c8f03df0d725849877ace5c16da0a":["d4d69c535930b5cce125cff868d40f6373dc27d4"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"402ad3ddc9da7b70da1b167667a60ece6a1381fb":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}