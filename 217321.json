{"path":"lucene/core/src/test/org/apache/lucene/util/junitcompat/TestFailIfUnreferencedFiles.Nested1#testDummy().mjava","commits":[{"id":"9eae2a56dc810a17cf807d831f720dec931a03de","date":1349262073,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/util/junitcompat/TestFailIfUnreferencedFiles.Nested1#testDummy().mjava","pathOld":"/dev/null","sourceNew":"    public void testDummy() throws Exception {\n      Directory dir = newMockDirectory();\n      IndexWriter iw = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, null));\n      iw.addDocument(new Document());\n      iw.close();\n      IndexOutput output = dir.createOutput(\"_hello.world\", IOContext.DEFAULT);\n      output.writeString(\"i am unreferenced!\");\n      output.close();\n      dir.sync(Collections.singleton(\"_hello.world\"));\n      dir.close();\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bda0fc5c3d9b2f54f3539261daa7fe9c789bac5c","date":1396634612,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/util/junitcompat/TestFailIfUnreferencedFiles.Nested1#testDummy().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/util/junitcompat/TestFailIfUnreferencedFiles.Nested1#testDummy().mjava","sourceNew":"    public void testDummy() throws Exception {\n      MockDirectoryWrapper dir = newMockDirectory();\n      dir.setAssertNoUnrefencedFilesOnClose(true);\n      IndexWriter iw = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, null));\n      iw.addDocument(new Document());\n      iw.close();\n      IndexOutput output = dir.createOutput(\"_hello.world\", IOContext.DEFAULT);\n      output.writeString(\"i am unreferenced!\");\n      output.close();\n      dir.sync(Collections.singleton(\"_hello.world\"));\n      dir.close();\n    }\n\n","sourceOld":"    public void testDummy() throws Exception {\n      Directory dir = newMockDirectory();\n      IndexWriter iw = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, null));\n      iw.addDocument(new Document());\n      iw.close();\n      IndexOutput output = dir.createOutput(\"_hello.world\", IOContext.DEFAULT);\n      output.writeString(\"i am unreferenced!\");\n      output.close();\n      dir.sync(Collections.singleton(\"_hello.world\"));\n      dir.close();\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"15e323346eac5e4685c0a9f2df85eb96b4239bbb","date":1396688577,"type":3,"author":"Dawid Weiss","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/util/junitcompat/TestFailIfUnreferencedFiles.Nested1#testDummy().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/util/junitcompat/TestFailIfUnreferencedFiles.Nested1#testDummy().mjava","sourceNew":"    public void testDummy() throws Exception {\n      MockDirectoryWrapper dir = newMockDirectory();\n      dir.setAssertNoUnrefencedFilesOnClose(true);\n      IndexWriter iw = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, null));\n      iw.addDocument(new Document());\n      iw.close();\n      IndexOutput output = dir.createOutput(\"_hello.world\", IOContext.DEFAULT);\n      output.writeString(\"i am unreferenced!\");\n      output.close();\n      dir.sync(Collections.singleton(\"_hello.world\"));\n      dir.close();\n    }\n\n","sourceOld":"    public void testDummy() throws Exception {\n      Directory dir = newMockDirectory();\n      IndexWriter iw = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, null));\n      iw.addDocument(new Document());\n      iw.close();\n      IndexOutput output = dir.createOutput(\"_hello.world\", IOContext.DEFAULT);\n      output.writeString(\"i am unreferenced!\");\n      output.close();\n      dir.sync(Collections.singleton(\"_hello.world\"));\n      dir.close();\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ae14298f4eec6d5faee6a149f88ba57d14a6f21a","date":1396971290,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/util/junitcompat/TestFailIfUnreferencedFiles.Nested1#testDummy().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/util/junitcompat/TestFailIfUnreferencedFiles.Nested1#testDummy().mjava","sourceNew":"    public void testDummy() throws Exception {\n      MockDirectoryWrapper dir = newMockDirectory();\n      dir.setAssertNoUnrefencedFilesOnClose(true);\n      IndexWriter iw = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, null));\n      iw.addDocument(new Document());\n      iw.shutdown();\n      IndexOutput output = dir.createOutput(\"_hello.world\", IOContext.DEFAULT);\n      output.writeString(\"i am unreferenced!\");\n      output.close();\n      dir.sync(Collections.singleton(\"_hello.world\"));\n      dir.close();\n    }\n\n","sourceOld":"    public void testDummy() throws Exception {\n      MockDirectoryWrapper dir = newMockDirectory();\n      dir.setAssertNoUnrefencedFilesOnClose(true);\n      IndexWriter iw = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, null));\n      iw.addDocument(new Document());\n      iw.close();\n      IndexOutput output = dir.createOutput(\"_hello.world\", IOContext.DEFAULT);\n      output.writeString(\"i am unreferenced!\");\n      output.close();\n      dir.sync(Collections.singleton(\"_hello.world\"));\n      dir.close();\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d0ef034a4f10871667ae75181537775ddcf8ade4","date":1407610475,"type":3,"author":"Ryan Ernst","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/util/junitcompat/TestFailIfUnreferencedFiles.Nested1#testDummy().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/util/junitcompat/TestFailIfUnreferencedFiles.Nested1#testDummy().mjava","sourceNew":"    public void testDummy() throws Exception {\n      MockDirectoryWrapper dir = newMockDirectory();\n      dir.setAssertNoUnrefencedFilesOnClose(true);\n      IndexWriter iw = new IndexWriter(dir, new IndexWriterConfig(null));\n      iw.addDocument(new Document());\n      iw.close();\n      IndexOutput output = dir.createOutput(\"_hello.world\", IOContext.DEFAULT);\n      output.writeString(\"i am unreferenced!\");\n      output.close();\n      dir.sync(Collections.singleton(\"_hello.world\"));\n      dir.close();\n    }\n\n","sourceOld":"    public void testDummy() throws Exception {\n      MockDirectoryWrapper dir = newMockDirectory();\n      dir.setAssertNoUnrefencedFilesOnClose(true);\n      IndexWriter iw = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, null));\n      iw.addDocument(new Document());\n      iw.shutdown();\n      IndexOutput output = dir.createOutput(\"_hello.world\", IOContext.DEFAULT);\n      output.writeString(\"i am unreferenced!\");\n      output.close();\n      dir.sync(Collections.singleton(\"_hello.world\"));\n      dir.close();\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b52491e71f0d5d0f0160d6ed0d39e0dd661be68a","date":1429550638,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/test-framework/src/test/org/apache/lucene/util/TestFailIfUnreferencedFiles.Nested1#testDummy().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/util/junitcompat/TestFailIfUnreferencedFiles.Nested1#testDummy().mjava","sourceNew":"    public void testDummy() throws Exception {\n      MockDirectoryWrapper dir = newMockDirectory();\n      dir.setAssertNoUnrefencedFilesOnClose(true);\n      IndexWriter iw = new IndexWriter(dir, new IndexWriterConfig(null));\n      iw.addDocument(new Document());\n      iw.close();\n      IndexOutput output = dir.createOutput(\"_hello.world\", IOContext.DEFAULT);\n      output.writeString(\"i am unreferenced!\");\n      output.close();\n      dir.sync(Collections.singleton(\"_hello.world\"));\n      dir.close();\n    }\n\n","sourceOld":"    public void testDummy() throws Exception {\n      MockDirectoryWrapper dir = newMockDirectory();\n      dir.setAssertNoUnrefencedFilesOnClose(true);\n      IndexWriter iw = new IndexWriter(dir, new IndexWriterConfig(null));\n      iw.addDocument(new Document());\n      iw.close();\n      IndexOutput output = dir.createOutput(\"_hello.world\", IOContext.DEFAULT);\n      output.writeString(\"i am unreferenced!\");\n      output.close();\n      dir.sync(Collections.singleton(\"_hello.world\"));\n      dir.close();\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"9eae2a56dc810a17cf807d831f720dec931a03de":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"15e323346eac5e4685c0a9f2df85eb96b4239bbb":["9eae2a56dc810a17cf807d831f720dec931a03de","bda0fc5c3d9b2f54f3539261daa7fe9c789bac5c"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"d0ef034a4f10871667ae75181537775ddcf8ade4":["ae14298f4eec6d5faee6a149f88ba57d14a6f21a"],"bda0fc5c3d9b2f54f3539261daa7fe9c789bac5c":["9eae2a56dc810a17cf807d831f720dec931a03de"],"ae14298f4eec6d5faee6a149f88ba57d14a6f21a":["bda0fc5c3d9b2f54f3539261daa7fe9c789bac5c"],"b52491e71f0d5d0f0160d6ed0d39e0dd661be68a":["d0ef034a4f10871667ae75181537775ddcf8ade4"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b52491e71f0d5d0f0160d6ed0d39e0dd661be68a"]},"commit2Childs":{"9eae2a56dc810a17cf807d831f720dec931a03de":["15e323346eac5e4685c0a9f2df85eb96b4239bbb","bda0fc5c3d9b2f54f3539261daa7fe9c789bac5c"],"15e323346eac5e4685c0a9f2df85eb96b4239bbb":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9eae2a56dc810a17cf807d831f720dec931a03de"],"d0ef034a4f10871667ae75181537775ddcf8ade4":["b52491e71f0d5d0f0160d6ed0d39e0dd661be68a"],"bda0fc5c3d9b2f54f3539261daa7fe9c789bac5c":["15e323346eac5e4685c0a9f2df85eb96b4239bbb","ae14298f4eec6d5faee6a149f88ba57d14a6f21a"],"ae14298f4eec6d5faee6a149f88ba57d14a6f21a":["d0ef034a4f10871667ae75181537775ddcf8ade4"],"b52491e71f0d5d0f0160d6ed0d39e0dd661be68a":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["15e323346eac5e4685c0a9f2df85eb96b4239bbb","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}