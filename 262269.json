{"path":"lucene/core/src/test/org/apache/lucene/index/TestParallelCompositeReader#queries().mjava","commits":[{"id":"8be807b98a5aab36b690a9bd4ef0e4b5d33b8689","date":1329492225,"type":0,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestParallelCompositeReader#queries().mjava","pathOld":"/dev/null","sourceNew":"  private void queries() throws Exception {\n    queryTest(new TermQuery(new Term(\"f1\", \"v1\")));\n    queryTest(new TermQuery(new Term(\"f1\", \"v2\")));\n    queryTest(new TermQuery(new Term(\"f2\", \"v1\")));\n    queryTest(new TermQuery(new Term(\"f2\", \"v2\")));\n    queryTest(new TermQuery(new Term(\"f3\", \"v1\")));\n    queryTest(new TermQuery(new Term(\"f3\", \"v2\")));\n    queryTest(new TermQuery(new Term(\"f4\", \"v1\")));\n    queryTest(new TermQuery(new Term(\"f4\", \"v2\")));\n\n    BooleanQuery bq1 = new BooleanQuery();\n    bq1.add(new TermQuery(new Term(\"f1\", \"v1\")), Occur.MUST);\n    bq1.add(new TermQuery(new Term(\"f4\", \"v1\")), Occur.MUST);\n    queryTest(bq1);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3f68d01cf19df971dcdcb05e30247f4ad7ec9747","date":1434611645,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestParallelCompositeReader#queries().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestParallelCompositeReader#queries().mjava","sourceNew":"  private void queries() throws Exception {\n    queryTest(new TermQuery(new Term(\"f1\", \"v1\")));\n    queryTest(new TermQuery(new Term(\"f1\", \"v2\")));\n    queryTest(new TermQuery(new Term(\"f2\", \"v1\")));\n    queryTest(new TermQuery(new Term(\"f2\", \"v2\")));\n    queryTest(new TermQuery(new Term(\"f3\", \"v1\")));\n    queryTest(new TermQuery(new Term(\"f3\", \"v2\")));\n    queryTest(new TermQuery(new Term(\"f4\", \"v1\")));\n    queryTest(new TermQuery(new Term(\"f4\", \"v2\")));\n\n    BooleanQuery.Builder bq1 = new BooleanQuery.Builder();\n    bq1.add(new TermQuery(new Term(\"f1\", \"v1\")), Occur.MUST);\n    bq1.add(new TermQuery(new Term(\"f4\", \"v1\")), Occur.MUST);\n    queryTest(bq1.build());\n  }\n\n","sourceOld":"  private void queries() throws Exception {\n    queryTest(new TermQuery(new Term(\"f1\", \"v1\")));\n    queryTest(new TermQuery(new Term(\"f1\", \"v2\")));\n    queryTest(new TermQuery(new Term(\"f2\", \"v1\")));\n    queryTest(new TermQuery(new Term(\"f2\", \"v2\")));\n    queryTest(new TermQuery(new Term(\"f3\", \"v1\")));\n    queryTest(new TermQuery(new Term(\"f3\", \"v2\")));\n    queryTest(new TermQuery(new Term(\"f4\", \"v1\")));\n    queryTest(new TermQuery(new Term(\"f4\", \"v2\")));\n\n    BooleanQuery bq1 = new BooleanQuery();\n    bq1.add(new TermQuery(new Term(\"f1\", \"v1\")), Occur.MUST);\n    bq1.add(new TermQuery(new Term(\"f4\", \"v1\")), Occur.MUST);\n    queryTest(bq1);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3f68d01cf19df971dcdcb05e30247f4ad7ec9747":["8be807b98a5aab36b690a9bd4ef0e4b5d33b8689"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"8be807b98a5aab36b690a9bd4ef0e4b5d33b8689":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3f68d01cf19df971dcdcb05e30247f4ad7ec9747"]},"commit2Childs":{"3f68d01cf19df971dcdcb05e30247f4ad7ec9747":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["8be807b98a5aab36b690a9bd4ef0e4b5d33b8689"],"8be807b98a5aab36b690a9bd4ef0e4b5d33b8689":["3f68d01cf19df971dcdcb05e30247f4ad7ec9747"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}