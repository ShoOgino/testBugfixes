{"path":"contrib/analyzers/src/java/org/apache/lucene/analysis/cn/SmartChineseAnalyzer#loadStopWords(InputStream).mjava","commits":[{"id":"05ff0cc6e864c7d71a48579f2acfca4f58943568","date":1242295762,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"contrib/analyzers/src/java/org/apache/lucene/analysis/cn/SmartChineseAnalyzer#loadStopWords(InputStream).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * 从停用词文件中加载停用词， 停用词文件是普通UTF-8编码的文本文件， 每一行是一个停用词，注释利用“//”， 停用词中包括中文标点符号， 中文空格，\n   * 以及使用率太高而对索引意义不大的词。\n   * \n   * @param input 停用词文件\n   * @return 停用词组成的HashSet\n   */\n  public static Set loadStopWords(InputStream input) {\n    String line;\n    Set stopWords = new HashSet();\n    try {\n      BufferedReader br = new BufferedReader(new InputStreamReader(input,\n          \"UTF-8\"));\n      while ((line = br.readLine()) != null) {\n        if (line.indexOf(\"//\") != -1) {\n          line = line.substring(0, line.indexOf(\"//\"));\n        }\n        line = line.trim();\n        if (line.length() != 0)\n          stopWords.add(line.toLowerCase());\n      }\n      br.close();\n    } catch (IOException e) {\n      System.err.println(\"WARNING: cannot open stop words list!\");\n    }\n    return stopWords;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"be5ef2f970a6c1141562b06dd26ed04c3dc29d70","date":1246444343,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"contrib/analyzers/src/java/org/apache/lucene/analysis/cn/SmartChineseAnalyzer#loadStopWords(InputStream).mjava","pathOld":"contrib/analyzers/src/java/org/apache/lucene/analysis/cn/SmartChineseAnalyzer#loadStopWords(InputStream).mjava","sourceNew":"  /**\n   * Utility function to return a {@link Set} of stopwords from a UTF-8 encoded {@link InputStream}.\n   * The comment \"//\" can be used in the stopword list.\n   * \n   * @param input {@link InputStream} of UTF-8 encoded stopwords\n   * @return {@link Set} of stopwords.\n   */\n  public static Set loadStopWords(InputStream input) {\n    /*\n     * Note: WordListLoader is not used here because this method allows for inline \"//\" comments.\n     * WordListLoader will only filter out these comments if they are on a separate line.\n     */\n    String line;\n    Set stopWords = new HashSet();\n    try {\n      BufferedReader br = new BufferedReader(new InputStreamReader(input,\n          \"UTF-8\"));\n      while ((line = br.readLine()) != null) {\n        if (line.indexOf(\"//\") != -1) {\n          line = line.substring(0, line.indexOf(\"//\"));\n        }\n        line = line.trim();\n        if (line.length() != 0)\n          stopWords.add(line.toLowerCase());\n      }\n      br.close();\n    } catch (IOException e) {\n      System.err.println(\"WARNING: cannot open stop words list!\");\n    }\n    return stopWords;\n  }\n\n","sourceOld":"  /**\n   * 从停用词文件中加载停用词， 停用词文件是普通UTF-8编码的文本文件， 每一行是一个停用词，注释利用“//”， 停用词中包括中文标点符号， 中文空格，\n   * 以及使用率太高而对索引意义不大的词。\n   * \n   * @param input 停用词文件\n   * @return 停用词组成的HashSet\n   */\n  public static Set loadStopWords(InputStream input) {\n    String line;\n    Set stopWords = new HashSet();\n    try {\n      BufferedReader br = new BufferedReader(new InputStreamReader(input,\n          \"UTF-8\"));\n      while ((line = br.readLine()) != null) {\n        if (line.indexOf(\"//\") != -1) {\n          line = line.substring(0, line.indexOf(\"//\"));\n        }\n        line = line.trim();\n        if (line.length() != 0)\n          stopWords.add(line.toLowerCase());\n      }\n      br.close();\n    } catch (IOException e) {\n      System.err.println(\"WARNING: cannot open stop words list!\");\n    }\n    return stopWords;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"dd745d580729e528151b58aeda87ef82f1b95c9b","date":1248369082,"type":4,"author":"Simon Willnauer","isMerge":false,"pathNew":"/dev/null","pathOld":"contrib/analyzers/src/java/org/apache/lucene/analysis/cn/SmartChineseAnalyzer#loadStopWords(InputStream).mjava","sourceNew":null,"sourceOld":"  /**\n   * Utility function to return a {@link Set} of stopwords from a UTF-8 encoded {@link InputStream}.\n   * The comment \"//\" can be used in the stopword list.\n   * \n   * @param input {@link InputStream} of UTF-8 encoded stopwords\n   * @return {@link Set} of stopwords.\n   */\n  public static Set loadStopWords(InputStream input) {\n    /*\n     * Note: WordListLoader is not used here because this method allows for inline \"//\" comments.\n     * WordListLoader will only filter out these comments if they are on a separate line.\n     */\n    String line;\n    Set stopWords = new HashSet();\n    try {\n      BufferedReader br = new BufferedReader(new InputStreamReader(input,\n          \"UTF-8\"));\n      while ((line = br.readLine()) != null) {\n        if (line.indexOf(\"//\") != -1) {\n          line = line.substring(0, line.indexOf(\"//\"));\n        }\n        line = line.trim();\n        if (line.length() != 0)\n          stopWords.add(line.toLowerCase());\n      }\n      br.close();\n    } catch (IOException e) {\n      System.err.println(\"WARNING: cannot open stop words list!\");\n    }\n    return stopWords;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"be5ef2f970a6c1141562b06dd26ed04c3dc29d70":["05ff0cc6e864c7d71a48579f2acfca4f58943568"],"dd745d580729e528151b58aeda87ef82f1b95c9b":["be5ef2f970a6c1141562b06dd26ed04c3dc29d70"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"05ff0cc6e864c7d71a48579f2acfca4f58943568":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["dd745d580729e528151b58aeda87ef82f1b95c9b"]},"commit2Childs":{"be5ef2f970a6c1141562b06dd26ed04c3dc29d70":["dd745d580729e528151b58aeda87ef82f1b95c9b"],"dd745d580729e528151b58aeda87ef82f1b95c9b":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["05ff0cc6e864c7d71a48579f2acfca4f58943568"],"05ff0cc6e864c7d71a48579f2acfca4f58943568":["be5ef2f970a6c1141562b06dd26ed04c3dc29d70"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}