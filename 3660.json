{"path":"lucene/test-framework/src/test/org/apache/lucene/util/TestExceptionInBeforeClassHooks#testExceptionWithinTestFailsTheTest().mjava","commits":[{"id":"b52491e71f0d5d0f0160d6ed0d39e0dd661be68a","date":1429550638,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/test-framework/src/test/org/apache/lucene/util/TestExceptionInBeforeClassHooks#testExceptionWithinTestFailsTheTest().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/util/junitcompat/TestExceptionInBeforeClassHooks#testExceptionWithinTestFailsTheTest().mjava","sourceNew":"  @Test\n  public void testExceptionWithinTestFailsTheTest() {\n    Result runClasses = JUnitCore.runClasses(Nested2.class);\n    assertFailureCount(3, runClasses);\n    Assert.assertEquals(3, runClasses.getRunCount());\n    \n    ArrayList<String> foobars = new ArrayList<>();\n    for (Failure f : runClasses.getFailures()) {\n      Matcher m = Pattern.compile(\"foobar[0-9]+\").matcher(f.getTrace());\n      while (m.find()) {\n        foobars.add(m.group());\n      }\n    }\n\n    Collections.sort(foobars);\n    Assert.assertEquals(\"[foobar1, foobar2, foobar3]\", \n        Arrays.toString(foobars.toArray()));\n  }\n\n","sourceOld":"  @Test\n  public void testExceptionWithinTestFailsTheTest() {\n    Result runClasses = JUnitCore.runClasses(Nested2.class);\n    assertFailureCount(3, runClasses);\n    Assert.assertEquals(3, runClasses.getRunCount());\n    \n    ArrayList<String> foobars = new ArrayList<>();\n    for (Failure f : runClasses.getFailures()) {\n      Matcher m = Pattern.compile(\"foobar[0-9]+\").matcher(f.getTrace());\n      while (m.find()) {\n        foobars.add(m.group());\n      }\n    }\n\n    Collections.sort(foobars);\n    Assert.assertEquals(\"[foobar1, foobar2, foobar3]\", \n        Arrays.toString(foobars.toArray()));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"b52491e71f0d5d0f0160d6ed0d39e0dd661be68a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b52491e71f0d5d0f0160d6ed0d39e0dd661be68a"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b52491e71f0d5d0f0160d6ed0d39e0dd661be68a"],"b52491e71f0d5d0f0160d6ed0d39e0dd661be68a":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}