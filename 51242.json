{"path":"solr/contrib/analytics/src/test/org/apache/solr/analytics/legacy/facet/LegacyFieldFacetCloudTest#stddevFacetAscTest().mjava","commits":[{"id":"3bd4c6955956e76c96eb12dfe64108ed03522983","date":1508262722,"type":0,"author":"Houston Putman","isMerge":false,"pathNew":"solr/contrib/analytics/src/test/org/apache/solr/analytics/legacy/facet/LegacyFieldFacetCloudTest#stddevFacetAscTest().mjava","pathOld":"/dev/null","sourceNew":"  @SuppressWarnings(\"unchecked\")\n  @Test\n  public void stddevFacetAscTest() throws Exception { \n    String[] params = new String[] {\n        \"o.stddev.s.int\", \"stddev(int_id)\",\n        \"o.stddev.s.long\", \"stddev(long_ld)\",\n        \"o.stddev.s.float\", \"stddev(float_fd)\",\n        \"o.stddev.s.double\", \"stddev(double_dd)\",\n        \"o.stddev.ff\", \"string_sd\",\n        \"o.stddev.ff\", \"date_dtd\"\n    };\n    NamedList<Object> response = queryLegacyCloudAnalytics(params);\n    \n    //Int Date\n    ArrayList<Double> intDate = getValueList(response, \"stddev\", \"fieldFacets\", \"date_dtd\", \"int\", false);\n    ArrayList<Double> intDateTest = calculateFacetedNumberStat(intDateTestStart, \"stddev\");\n    checkStddevs(response, intDate, intDateTest);\n    //Int String\n    ArrayList<Double> intString = getValueList(response, \"stddev\", \"fieldFacets\", \"string_sd\", \"int\", false);\n    ArrayList<Double> intStringTest = calculateFacetedNumberStat(intStringTestStart, \"stddev\");\n    checkStddevs(response, intString, intStringTest);\n\n    //Long Date\n    ArrayList<Double> longDate = getValueList(response, \"stddev\", \"fieldFacets\", \"date_dtd\", \"long\", false);\n    ArrayList<Double> longDateTest = calculateFacetedNumberStat(longDateTestStart, \"stddev\");\n    checkStddevs(response, longDate, longDateTest);\n    //Long String\n    ArrayList<Double> longString = getValueList(response, \"stddev\", \"fieldFacets\", \"string_sd\", \"long\", false);\n    ArrayList<Double> longStringTest = calculateFacetedNumberStat(longStringTestStart, \"stddev\");\n    checkStddevs(response, longString, longStringTest);\n\n    //Float Date\n    ArrayList<Double> floatDate = getValueList(response, \"stddev\", \"fieldFacets\", \"date_dtd\", \"float\", false);\n    ArrayList<Double> floatDateTest = calculateFacetedNumberStat(floatDateTestStart, \"stddev\");\n    checkStddevs(response, floatDate, floatDateTest);\n    //Float String\n    ArrayList<Double> floatString = getValueList(response, \"stddev\", \"fieldFacets\", \"string_sd\", \"float\", false);\n    ArrayList<Double> floatStringTest = calculateFacetedNumberStat(floatStringTestStart, \"stddev\");\n    checkStddevs(response, floatString, floatStringTest);\n\n    //Double Date\n    ArrayList<Double> doubleDate = getValueList(response, \"stddev\", \"fieldFacets\", \"date_dtd\", \"double\", false);\n    ArrayList<Double> doubleDateTest = calculateFacetedNumberStat(doubleDateTestStart, \"stddev\");\n    checkStddevs(response, doubleDate, doubleDateTest);\n    //Double String\n    ArrayList<Double> doubleString = getValueList(response, \"stddev\", \"fieldFacets\", \"string_sd\", \"double\", false);\n    ArrayList<Double> doubleStringTest = calculateFacetedNumberStat(doubleStringTestStart, \"stddev\");\n    checkStddevs(response, doubleString, doubleStringTest);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1e4e64b7199d2f2a17be7f3926c7532553910dce","date":1564342581,"type":3,"author":"Jason Gerlowski","isMerge":false,"pathNew":"solr/contrib/analytics/src/test/org/apache/solr/analytics/legacy/facet/LegacyFieldFacetCloudTest#stddevFacetAscTest().mjava","pathOld":"solr/contrib/analytics/src/test/org/apache/solr/analytics/legacy/facet/LegacyFieldFacetCloudTest#stddevFacetAscTest().mjava","sourceNew":"  @SuppressWarnings(\"unchecked\")\n  @Test\n  public void stddevFacetAscTest() throws Exception {\n    String[] params = new String[] {\n        \"o.stddev.s.int\", \"stddev(int_id)\",\n        \"o.stddev.s.long\", \"stddev(long_ld)\",\n        \"o.stddev.s.float\", \"stddev(float_fd)\",\n        \"o.stddev.s.double\", \"stddev(double_dd)\",\n        \"o.stddev.ff\", \"string_sd\",\n        \"o.stddev.ff\", \"date_dtd\"\n    };\n    NamedList<Object> response = queryLegacyCloudAnalytics(params);\n\n    //Int Date\n    ArrayList<Double> intDate = getValueList(response, \"stddev\", \"fieldFacets\", \"date_dtd\", \"int\", false);\n    ArrayList<Double> intDateTest = calculateFacetedNumberStat(intDateTestStart, \"stddev\");\n    checkStddevs(response, intDate, intDateTest);\n    //Int String\n    ArrayList<Double> intString = getValueList(response, \"stddev\", \"fieldFacets\", \"string_sd\", \"int\", false);\n    ArrayList<Double> intStringTest = calculateFacetedNumberStat(intStringTestStart, \"stddev\");\n    checkStddevs(response, intString, intStringTest);\n\n    //Long Date\n    ArrayList<Double> longDate = getValueList(response, \"stddev\", \"fieldFacets\", \"date_dtd\", \"long\", false);\n    ArrayList<Double> longDateTest = calculateFacetedNumberStat(longDateTestStart, \"stddev\");\n    checkStddevs(response, longDate, longDateTest);\n    //Long String\n    ArrayList<Double> longString = getValueList(response, \"stddev\", \"fieldFacets\", \"string_sd\", \"long\", false);\n    ArrayList<Double> longStringTest = calculateFacetedNumberStat(longStringTestStart, \"stddev\");\n    checkStddevs(response, longString, longStringTest);\n\n    //Float Date\n    ArrayList<Double> floatDate = getValueList(response, \"stddev\", \"fieldFacets\", \"date_dtd\", \"float\", false);\n    ArrayList<Double> floatDateTest = calculateFacetedNumberStat(floatDateTestStart, \"stddev\");\n    checkStddevs(response, floatDate, floatDateTest);\n    //Float String\n    ArrayList<Double> floatString = getValueList(response, \"stddev\", \"fieldFacets\", \"string_sd\", \"float\", false);\n    ArrayList<Double> floatStringTest = calculateFacetedNumberStat(floatStringTestStart, \"stddev\");\n    checkStddevs(response, floatString, floatStringTest);\n\n    //Double Date\n    ArrayList<Double> doubleDate = getValueList(response, \"stddev\", \"fieldFacets\", \"date_dtd\", \"double\", false);\n    ArrayList<Double> doubleDateTest = calculateFacetedNumberStat(doubleDateTestStart, \"stddev\");\n    checkStddevs(response, doubleDate, doubleDateTest);\n    //Double String\n    ArrayList<Double> doubleString = getValueList(response, \"stddev\", \"fieldFacets\", \"string_sd\", \"double\", false);\n    ArrayList<Double> doubleStringTest = calculateFacetedNumberStat(doubleStringTestStart, \"stddev\");\n    checkStddevs(response, doubleString, doubleStringTest);\n  }\n\n","sourceOld":"  @SuppressWarnings(\"unchecked\")\n  @Test\n  public void stddevFacetAscTest() throws Exception { \n    String[] params = new String[] {\n        \"o.stddev.s.int\", \"stddev(int_id)\",\n        \"o.stddev.s.long\", \"stddev(long_ld)\",\n        \"o.stddev.s.float\", \"stddev(float_fd)\",\n        \"o.stddev.s.double\", \"stddev(double_dd)\",\n        \"o.stddev.ff\", \"string_sd\",\n        \"o.stddev.ff\", \"date_dtd\"\n    };\n    NamedList<Object> response = queryLegacyCloudAnalytics(params);\n    \n    //Int Date\n    ArrayList<Double> intDate = getValueList(response, \"stddev\", \"fieldFacets\", \"date_dtd\", \"int\", false);\n    ArrayList<Double> intDateTest = calculateFacetedNumberStat(intDateTestStart, \"stddev\");\n    checkStddevs(response, intDate, intDateTest);\n    //Int String\n    ArrayList<Double> intString = getValueList(response, \"stddev\", \"fieldFacets\", \"string_sd\", \"int\", false);\n    ArrayList<Double> intStringTest = calculateFacetedNumberStat(intStringTestStart, \"stddev\");\n    checkStddevs(response, intString, intStringTest);\n\n    //Long Date\n    ArrayList<Double> longDate = getValueList(response, \"stddev\", \"fieldFacets\", \"date_dtd\", \"long\", false);\n    ArrayList<Double> longDateTest = calculateFacetedNumberStat(longDateTestStart, \"stddev\");\n    checkStddevs(response, longDate, longDateTest);\n    //Long String\n    ArrayList<Double> longString = getValueList(response, \"stddev\", \"fieldFacets\", \"string_sd\", \"long\", false);\n    ArrayList<Double> longStringTest = calculateFacetedNumberStat(longStringTestStart, \"stddev\");\n    checkStddevs(response, longString, longStringTest);\n\n    //Float Date\n    ArrayList<Double> floatDate = getValueList(response, \"stddev\", \"fieldFacets\", \"date_dtd\", \"float\", false);\n    ArrayList<Double> floatDateTest = calculateFacetedNumberStat(floatDateTestStart, \"stddev\");\n    checkStddevs(response, floatDate, floatDateTest);\n    //Float String\n    ArrayList<Double> floatString = getValueList(response, \"stddev\", \"fieldFacets\", \"string_sd\", \"float\", false);\n    ArrayList<Double> floatStringTest = calculateFacetedNumberStat(floatStringTestStart, \"stddev\");\n    checkStddevs(response, floatString, floatStringTest);\n\n    //Double Date\n    ArrayList<Double> doubleDate = getValueList(response, \"stddev\", \"fieldFacets\", \"date_dtd\", \"double\", false);\n    ArrayList<Double> doubleDateTest = calculateFacetedNumberStat(doubleDateTestStart, \"stddev\");\n    checkStddevs(response, doubleDate, doubleDateTest);\n    //Double String\n    ArrayList<Double> doubleString = getValueList(response, \"stddev\", \"fieldFacets\", \"string_sd\", \"double\", false);\n    ArrayList<Double> doubleStringTest = calculateFacetedNumberStat(doubleStringTestStart, \"stddev\");\n    checkStddevs(response, doubleString, doubleStringTest);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f8061ddd97f3352007d927dae445884a6f3d857b","date":1564988276,"type":3,"author":"Atri Sharma","isMerge":true,"pathNew":"solr/contrib/analytics/src/test/org/apache/solr/analytics/legacy/facet/LegacyFieldFacetCloudTest#stddevFacetAscTest().mjava","pathOld":"solr/contrib/analytics/src/test/org/apache/solr/analytics/legacy/facet/LegacyFieldFacetCloudTest#stddevFacetAscTest().mjava","sourceNew":"  @SuppressWarnings(\"unchecked\")\n  @Test\n  public void stddevFacetAscTest() throws Exception {\n    String[] params = new String[] {\n        \"o.stddev.s.int\", \"stddev(int_id)\",\n        \"o.stddev.s.long\", \"stddev(long_ld)\",\n        \"o.stddev.s.float\", \"stddev(float_fd)\",\n        \"o.stddev.s.double\", \"stddev(double_dd)\",\n        \"o.stddev.ff\", \"string_sd\",\n        \"o.stddev.ff\", \"date_dtd\"\n    };\n    NamedList<Object> response = queryLegacyCloudAnalytics(params);\n\n    //Int Date\n    ArrayList<Double> intDate = getValueList(response, \"stddev\", \"fieldFacets\", \"date_dtd\", \"int\", false);\n    ArrayList<Double> intDateTest = calculateFacetedNumberStat(intDateTestStart, \"stddev\");\n    checkStddevs(response, intDate, intDateTest);\n    //Int String\n    ArrayList<Double> intString = getValueList(response, \"stddev\", \"fieldFacets\", \"string_sd\", \"int\", false);\n    ArrayList<Double> intStringTest = calculateFacetedNumberStat(intStringTestStart, \"stddev\");\n    checkStddevs(response, intString, intStringTest);\n\n    //Long Date\n    ArrayList<Double> longDate = getValueList(response, \"stddev\", \"fieldFacets\", \"date_dtd\", \"long\", false);\n    ArrayList<Double> longDateTest = calculateFacetedNumberStat(longDateTestStart, \"stddev\");\n    checkStddevs(response, longDate, longDateTest);\n    //Long String\n    ArrayList<Double> longString = getValueList(response, \"stddev\", \"fieldFacets\", \"string_sd\", \"long\", false);\n    ArrayList<Double> longStringTest = calculateFacetedNumberStat(longStringTestStart, \"stddev\");\n    checkStddevs(response, longString, longStringTest);\n\n    //Float Date\n    ArrayList<Double> floatDate = getValueList(response, \"stddev\", \"fieldFacets\", \"date_dtd\", \"float\", false);\n    ArrayList<Double> floatDateTest = calculateFacetedNumberStat(floatDateTestStart, \"stddev\");\n    checkStddevs(response, floatDate, floatDateTest);\n    //Float String\n    ArrayList<Double> floatString = getValueList(response, \"stddev\", \"fieldFacets\", \"string_sd\", \"float\", false);\n    ArrayList<Double> floatStringTest = calculateFacetedNumberStat(floatStringTestStart, \"stddev\");\n    checkStddevs(response, floatString, floatStringTest);\n\n    //Double Date\n    ArrayList<Double> doubleDate = getValueList(response, \"stddev\", \"fieldFacets\", \"date_dtd\", \"double\", false);\n    ArrayList<Double> doubleDateTest = calculateFacetedNumberStat(doubleDateTestStart, \"stddev\");\n    checkStddevs(response, doubleDate, doubleDateTest);\n    //Double String\n    ArrayList<Double> doubleString = getValueList(response, \"stddev\", \"fieldFacets\", \"string_sd\", \"double\", false);\n    ArrayList<Double> doubleStringTest = calculateFacetedNumberStat(doubleStringTestStart, \"stddev\");\n    checkStddevs(response, doubleString, doubleStringTest);\n  }\n\n","sourceOld":"  @SuppressWarnings(\"unchecked\")\n  @Test\n  public void stddevFacetAscTest() throws Exception { \n    String[] params = new String[] {\n        \"o.stddev.s.int\", \"stddev(int_id)\",\n        \"o.stddev.s.long\", \"stddev(long_ld)\",\n        \"o.stddev.s.float\", \"stddev(float_fd)\",\n        \"o.stddev.s.double\", \"stddev(double_dd)\",\n        \"o.stddev.ff\", \"string_sd\",\n        \"o.stddev.ff\", \"date_dtd\"\n    };\n    NamedList<Object> response = queryLegacyCloudAnalytics(params);\n    \n    //Int Date\n    ArrayList<Double> intDate = getValueList(response, \"stddev\", \"fieldFacets\", \"date_dtd\", \"int\", false);\n    ArrayList<Double> intDateTest = calculateFacetedNumberStat(intDateTestStart, \"stddev\");\n    checkStddevs(response, intDate, intDateTest);\n    //Int String\n    ArrayList<Double> intString = getValueList(response, \"stddev\", \"fieldFacets\", \"string_sd\", \"int\", false);\n    ArrayList<Double> intStringTest = calculateFacetedNumberStat(intStringTestStart, \"stddev\");\n    checkStddevs(response, intString, intStringTest);\n\n    //Long Date\n    ArrayList<Double> longDate = getValueList(response, \"stddev\", \"fieldFacets\", \"date_dtd\", \"long\", false);\n    ArrayList<Double> longDateTest = calculateFacetedNumberStat(longDateTestStart, \"stddev\");\n    checkStddevs(response, longDate, longDateTest);\n    //Long String\n    ArrayList<Double> longString = getValueList(response, \"stddev\", \"fieldFacets\", \"string_sd\", \"long\", false);\n    ArrayList<Double> longStringTest = calculateFacetedNumberStat(longStringTestStart, \"stddev\");\n    checkStddevs(response, longString, longStringTest);\n\n    //Float Date\n    ArrayList<Double> floatDate = getValueList(response, \"stddev\", \"fieldFacets\", \"date_dtd\", \"float\", false);\n    ArrayList<Double> floatDateTest = calculateFacetedNumberStat(floatDateTestStart, \"stddev\");\n    checkStddevs(response, floatDate, floatDateTest);\n    //Float String\n    ArrayList<Double> floatString = getValueList(response, \"stddev\", \"fieldFacets\", \"string_sd\", \"float\", false);\n    ArrayList<Double> floatStringTest = calculateFacetedNumberStat(floatStringTestStart, \"stddev\");\n    checkStddevs(response, floatString, floatStringTest);\n\n    //Double Date\n    ArrayList<Double> doubleDate = getValueList(response, \"stddev\", \"fieldFacets\", \"date_dtd\", \"double\", false);\n    ArrayList<Double> doubleDateTest = calculateFacetedNumberStat(doubleDateTestStart, \"stddev\");\n    checkStddevs(response, doubleDate, doubleDateTest);\n    //Double String\n    ArrayList<Double> doubleString = getValueList(response, \"stddev\", \"fieldFacets\", \"string_sd\", \"double\", false);\n    ArrayList<Double> doubleStringTest = calculateFacetedNumberStat(doubleStringTestStart, \"stddev\");\n    checkStddevs(response, doubleString, doubleStringTest);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"1e4e64b7199d2f2a17be7f3926c7532553910dce":["3bd4c6955956e76c96eb12dfe64108ed03522983"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"f8061ddd97f3352007d927dae445884a6f3d857b":["3bd4c6955956e76c96eb12dfe64108ed03522983","1e4e64b7199d2f2a17be7f3926c7532553910dce"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["1e4e64b7199d2f2a17be7f3926c7532553910dce"],"3bd4c6955956e76c96eb12dfe64108ed03522983":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"1e4e64b7199d2f2a17be7f3926c7532553910dce":["f8061ddd97f3352007d927dae445884a6f3d857b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3bd4c6955956e76c96eb12dfe64108ed03522983"],"f8061ddd97f3352007d927dae445884a6f3d857b":[],"3bd4c6955956e76c96eb12dfe64108ed03522983":["1e4e64b7199d2f2a17be7f3926c7532553910dce","f8061ddd97f3352007d927dae445884a6f3d857b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["f8061ddd97f3352007d927dae445884a6f3d857b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}