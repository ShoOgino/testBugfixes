{"path":"lucene/core/src/java/org/apache/lucene/util/BroadWord#smallerUpTo7_8(long,long).mjava","commits":[{"id":"0debe908d97b40345a206ca1671a9fd299833558","date":1373663120,"type":0,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/BroadWord#smallerUpTo7_8(long,long).mjava","pathOld":"/dev/null","sourceNew":"  /** A signed bytewise smaller &lt;<sub><small>8</small></sub> operator, for operands 0L<= x, y <=0x7L.\n   * This uses the following numbers of basic long operations: 1 or, 2 and, 2 xor, 1 minus, 1 not.\n   * @return A long with bits set in the {@link #H8_L} positions corresponding to each input signed byte pair that compares smaller.\n   */\n  public static long smallerUpTo7_8(long x, long y) {\n    // See section 4, page 5, line 14 of the Vigna article:\n    return ( ( (x | H8_L) - (y & (~H8_L)) ) ^ x ^ ~y) & H8_L;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"37a0f60745e53927c4c876cfe5b5a58170f0646c","date":1373994005,"type":0,"author":"Han Jiang","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/util/BroadWord#smallerUpTo7_8(long,long).mjava","pathOld":"/dev/null","sourceNew":"  /** A signed bytewise smaller &lt;<sub><small>8</small></sub> operator, for operands 0L<= x, y <=0x7L.\n   * This uses the following numbers of basic long operations: 1 or, 2 and, 2 xor, 1 minus, 1 not.\n   * @return A long with bits set in the {@link #H8_L} positions corresponding to each input signed byte pair that compares smaller.\n   */\n  public static long smallerUpTo7_8(long x, long y) {\n    // See section 4, page 5, line 14 of the Vigna article:\n    return ( ( (x | H8_L) - (y & (~H8_L)) ) ^ x ^ ~y) & H8_L;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9291fc3833dffda8db27cfa063a07f17a8bbbfe7","date":1415205164,"type":4,"author":"Adrien Grand","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/util/BroadWord#smallerUpTo7_8(long,long).mjava","sourceNew":null,"sourceOld":"  /** A signed bytewise smaller &lt;<sub><small>8</small></sub> operator, for operands 0L<= x, y <=0x7L.\n   * This uses the following numbers of basic long operations: 1 or, 2 and, 2 xor, 1 minus, 1 not.\n   * @return A long with bits set in the {@link #H8_L} positions corresponding to each input signed byte pair that compares smaller.\n   */\n  public static long smallerUpTo7_8(long x, long y) {\n    // See section 4, page 5, line 14 of the Vigna article:\n    return ( ( (x | H8_L) - (y & (~H8_L)) ) ^ x ^ ~y) & H8_L;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"37a0f60745e53927c4c876cfe5b5a58170f0646c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","0debe908d97b40345a206ca1671a9fd299833558"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"9291fc3833dffda8db27cfa063a07f17a8bbbfe7":["0debe908d97b40345a206ca1671a9fd299833558"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9291fc3833dffda8db27cfa063a07f17a8bbbfe7"],"0debe908d97b40345a206ca1671a9fd299833558":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"37a0f60745e53927c4c876cfe5b5a58170f0646c":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["37a0f60745e53927c4c876cfe5b5a58170f0646c","0debe908d97b40345a206ca1671a9fd299833558"],"9291fc3833dffda8db27cfa063a07f17a8bbbfe7":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"0debe908d97b40345a206ca1671a9fd299833558":["37a0f60745e53927c4c876cfe5b5a58170f0646c","9291fc3833dffda8db27cfa063a07f17a8bbbfe7"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["37a0f60745e53927c4c876cfe5b5a58170f0646c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}