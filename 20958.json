{"path":"solr/solrj/src/java/org/apache/solr/common/util/ExecutorUtil#shutdownAndAwaitTermination(ExecutorService).mjava","commits":[{"id":"7157fdda82ae1a1cb77b012ef0eb72249ee2f3d6","date":1346692465,"type":0,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/common/util/ExecutorUtil#shutdownAndAwaitTermination(ExecutorService).mjava","pathOld":"/dev/null","sourceNew":"  public static void shutdownAndAwaitTermination(ExecutorService pool) {\n    pool.shutdown(); // Disable new tasks from being submitted\n    try {\n      // Wait a while for existing tasks to terminate\n      if (!pool.awaitTermination(60, TimeUnit.SECONDS)) {\n        pool.shutdownNow(); // Cancel currently executing tasks\n        // Wait a while for tasks to respond to being cancelled\n        if (!pool.awaitTermination(60, TimeUnit.SECONDS))\n            SolrException.log(log, \"Executor still has running tasks.\");\n      }\n    } catch (InterruptedException ie) {\n      // (Re-)Cancel if current thread also interrupted\n      pool.shutdownNow();\n      // Preserve interrupt status\n      Thread.currentThread().interrupt();\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["a6378064655e76cd7b908b1cab4ce425b384b508","d8469c0c0b45f7e3da74918efc8ede2ad2efe2b1"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"d8469c0c0b45f7e3da74918efc8ede2ad2efe2b1","date":1346817835,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/common/util/ExecutorUtil#shutdownAndAwaitTermination(ExecutorService).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/common/util/ExecutorUtil#shutdownAndAwaitTermination(ExecutorService).mjava","sourceNew":"  public static void shutdownAndAwaitTermination(ExecutorService pool) {\n    pool.shutdown(); // Disable new tasks from being submitted\n    pool.shutdownNow(); // Cancel currently executing tasks\n    try {\n      // Wait a while for existing tasks to terminate\n        if (!pool.awaitTermination(60, TimeUnit.SECONDS))\n            SolrException.log(log, \"Executor still has running tasks.\");\n    } catch (InterruptedException ie) {\n      // (Re-)Cancel if current thread also interrupted\n      pool.shutdownNow();\n      try {\n        if (!pool.awaitTermination(60, TimeUnit.SECONDS))\n          SolrException.log(log, \"Executor still has running tasks.\");\n      } catch (InterruptedException e) {\n    \n      }\n      // Preserve interrupt status\n      Thread.currentThread().interrupt();\n    }\n  }\n\n","sourceOld":"  public static void shutdownAndAwaitTermination(ExecutorService pool) {\n    pool.shutdown(); // Disable new tasks from being submitted\n    try {\n      // Wait a while for existing tasks to terminate\n      if (!pool.awaitTermination(60, TimeUnit.SECONDS)) {\n        pool.shutdownNow(); // Cancel currently executing tasks\n        // Wait a while for tasks to respond to being cancelled\n        if (!pool.awaitTermination(60, TimeUnit.SECONDS))\n            SolrException.log(log, \"Executor still has running tasks.\");\n      }\n    } catch (InterruptedException ie) {\n      // (Re-)Cancel if current thread also interrupted\n      pool.shutdownNow();\n      // Preserve interrupt status\n      Thread.currentThread().interrupt();\n    }\n  }\n\n","bugFix":["7157fdda82ae1a1cb77b012ef0eb72249ee2f3d6"],"bugIntro":["a6378064655e76cd7b908b1cab4ce425b384b508"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"a6378064655e76cd7b908b1cab4ce425b384b508","date":1347656715,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/common/util/ExecutorUtil#shutdownAndAwaitTermination(ExecutorService).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/common/util/ExecutorUtil#shutdownAndAwaitTermination(ExecutorService).mjava","sourceNew":"  public static void shutdownAndAwaitTermination(ExecutorService pool) {\n    pool.shutdown(); // Disable new tasks from being submitted\n    boolean shutdown = false;\n    while (!shutdown) {\n      try {\n        // Wait a while for existing tasks to terminate\n        shutdown = pool.awaitTermination(60, TimeUnit.SECONDS);\n      } catch (InterruptedException ie) {\n        // Preserve interrupt status\n        Thread.currentThread().interrupt();\n      }\n      if (!shutdown) {\n        pool.shutdownNow(); // Cancel currently executing tasks\n      }\n    }\n  }\n\n","sourceOld":"  public static void shutdownAndAwaitTermination(ExecutorService pool) {\n    pool.shutdown(); // Disable new tasks from being submitted\n    pool.shutdownNow(); // Cancel currently executing tasks\n    try {\n      // Wait a while for existing tasks to terminate\n        if (!pool.awaitTermination(60, TimeUnit.SECONDS))\n            SolrException.log(log, \"Executor still has running tasks.\");\n    } catch (InterruptedException ie) {\n      // (Re-)Cancel if current thread also interrupted\n      pool.shutdownNow();\n      try {\n        if (!pool.awaitTermination(60, TimeUnit.SECONDS))\n          SolrException.log(log, \"Executor still has running tasks.\");\n      } catch (InterruptedException e) {\n    \n      }\n      // Preserve interrupt status\n      Thread.currentThread().interrupt();\n    }\n  }\n\n","bugFix":["7157fdda82ae1a1cb77b012ef0eb72249ee2f3d6","d8469c0c0b45f7e3da74918efc8ede2ad2efe2b1"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"80ba0e0ced6273399ff97caaf301445b9fd24895","date":1356802943,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/common/util/ExecutorUtil#shutdownAndAwaitTermination(ExecutorService).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/common/util/ExecutorUtil#shutdownAndAwaitTermination(ExecutorService).mjava","sourceNew":"  public static void shutdownAndAwaitTermination(ExecutorService pool) {\n    pool.shutdown(); // Disable new tasks from being submitted\n    boolean shutdown = false;\n    while (!shutdown) {\n      try {\n        // Wait a while for existing tasks to terminate\n        shutdown = pool.awaitTermination(30, TimeUnit.SECONDS);\n      } catch (InterruptedException ie) {\n        // Preserve interrupt status\n        Thread.currentThread().interrupt();\n      }\n      if (!shutdown) {\n        pool.shutdownNow(); // Cancel currently executing tasks\n      }\n    }\n  }\n\n","sourceOld":"  public static void shutdownAndAwaitTermination(ExecutorService pool) {\n    pool.shutdown(); // Disable new tasks from being submitted\n    boolean shutdown = false;\n    while (!shutdown) {\n      try {\n        // Wait a while for existing tasks to terminate\n        shutdown = pool.awaitTermination(60, TimeUnit.SECONDS);\n      } catch (InterruptedException ie) {\n        // Preserve interrupt status\n        Thread.currentThread().interrupt();\n      }\n      if (!shutdown) {\n        pool.shutdownNow(); // Cancel currently executing tasks\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":["cfe13eabf9e0652d72ce8fce9e894966c9eebc61"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"d3fcb70cf561547c7bb1506e0cf32ca7b1287064","date":1357616416,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"solr/solrj/src/java/org/apache/solr/common/util/ExecutorUtil#shutdownAndAwaitTermination(ExecutorService).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/common/util/ExecutorUtil#shutdownAndAwaitTermination(ExecutorService).mjava","sourceNew":"  public static void shutdownAndAwaitTermination(ExecutorService pool) {\n    pool.shutdown(); // Disable new tasks from being submitted\n    boolean shutdown = false;\n    while (!shutdown) {\n      try {\n        // Wait a while for existing tasks to terminate\n        shutdown = pool.awaitTermination(30, TimeUnit.SECONDS);\n      } catch (InterruptedException ie) {\n        // Preserve interrupt status\n        Thread.currentThread().interrupt();\n      }\n      if (!shutdown) {\n        pool.shutdownNow(); // Cancel currently executing tasks\n      }\n    }\n  }\n\n","sourceOld":"  public static void shutdownAndAwaitTermination(ExecutorService pool) {\n    pool.shutdown(); // Disable new tasks from being submitted\n    boolean shutdown = false;\n    while (!shutdown) {\n      try {\n        // Wait a while for existing tasks to terminate\n        shutdown = pool.awaitTermination(60, TimeUnit.SECONDS);\n      } catch (InterruptedException ie) {\n        // Preserve interrupt status\n        Thread.currentThread().interrupt();\n      }\n      if (!shutdown) {\n        pool.shutdownNow(); // Cancel currently executing tasks\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"cfe13eabf9e0652d72ce8fce9e894966c9eebc61","date":1384641004,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/common/util/ExecutorUtil#shutdownAndAwaitTermination(ExecutorService).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/common/util/ExecutorUtil#shutdownAndAwaitTermination(ExecutorService).mjava","sourceNew":"  public static void shutdownAndAwaitTermination(ExecutorService pool) {\n    pool.shutdown(); // Disable new tasks from being submitted\n    boolean shutdown = false;\n    while (!shutdown) {\n      try {\n        // Wait a while for existing tasks to terminate\n        shutdown = pool.awaitTermination(60, TimeUnit.SECONDS);\n      } catch (InterruptedException ie) {\n        // Preserve interrupt status\n        Thread.currentThread().interrupt();\n      }\n      if (!shutdown) {\n        pool.shutdownNow(); // Cancel currently executing tasks\n      }\n    }\n  }\n\n","sourceOld":"  public static void shutdownAndAwaitTermination(ExecutorService pool) {\n    pool.shutdown(); // Disable new tasks from being submitted\n    boolean shutdown = false;\n    while (!shutdown) {\n      try {\n        // Wait a while for existing tasks to terminate\n        shutdown = pool.awaitTermination(30, TimeUnit.SECONDS);\n      } catch (InterruptedException ie) {\n        // Preserve interrupt status\n        Thread.currentThread().interrupt();\n      }\n      if (!shutdown) {\n        pool.shutdownNow(); // Cancel currently executing tasks\n      }\n    }\n  }\n\n","bugFix":["80ba0e0ced6273399ff97caaf301445b9fd24895"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"74f45af4339b0daf7a95c820ab88c1aea74fbce0","date":1387475327,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"solr/solrj/src/java/org/apache/solr/common/util/ExecutorUtil#shutdownAndAwaitTermination(ExecutorService).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/common/util/ExecutorUtil#shutdownAndAwaitTermination(ExecutorService).mjava","sourceNew":"  public static void shutdownAndAwaitTermination(ExecutorService pool) {\n    pool.shutdown(); // Disable new tasks from being submitted\n    boolean shutdown = false;\n    while (!shutdown) {\n      try {\n        // Wait a while for existing tasks to terminate\n        shutdown = pool.awaitTermination(60, TimeUnit.SECONDS);\n      } catch (InterruptedException ie) {\n        // Preserve interrupt status\n        Thread.currentThread().interrupt();\n      }\n      if (!shutdown) {\n        pool.shutdownNow(); // Cancel currently executing tasks\n      }\n    }\n  }\n\n","sourceOld":"  public static void shutdownAndAwaitTermination(ExecutorService pool) {\n    pool.shutdown(); // Disable new tasks from being submitted\n    boolean shutdown = false;\n    while (!shutdown) {\n      try {\n        // Wait a while for existing tasks to terminate\n        shutdown = pool.awaitTermination(30, TimeUnit.SECONDS);\n      } catch (InterruptedException ie) {\n        // Preserve interrupt status\n        Thread.currentThread().interrupt();\n      }\n      if (!shutdown) {\n        pool.shutdownNow(); // Cancel currently executing tasks\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"cb5af3afeddbb803fb785098176e6e177c34261b","date":1428905393,"type":3,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/common/util/ExecutorUtil#shutdownAndAwaitTermination(ExecutorService).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/common/util/ExecutorUtil#shutdownAndAwaitTermination(ExecutorService).mjava","sourceNew":"  public static void shutdownAndAwaitTermination(ExecutorService pool) {\n    shutdownAndAwaitTermination(pool, 60, TimeUnit.SECONDS);\n  }\n\n","sourceOld":"  public static void shutdownAndAwaitTermination(ExecutorService pool) {\n    pool.shutdown(); // Disable new tasks from being submitted\n    boolean shutdown = false;\n    while (!shutdown) {\n      try {\n        // Wait a while for existing tasks to terminate\n        shutdown = pool.awaitTermination(60, TimeUnit.SECONDS);\n      } catch (InterruptedException ie) {\n        // Preserve interrupt status\n        Thread.currentThread().interrupt();\n      }\n      if (!shutdown) {\n        pool.shutdownNow(); // Cancel currently executing tasks\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":["275019a81d0883a1db4560391b072d1fbe272ec4"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"275019a81d0883a1db4560391b072d1fbe272ec4","date":1432741049,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/common/util/ExecutorUtil#shutdownAndAwaitTermination(ExecutorService).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/common/util/ExecutorUtil#shutdownAndAwaitTermination(ExecutorService).mjava","sourceNew":"  public static void shutdownAndAwaitTermination(ExecutorService pool) {\n    pool.shutdown(); // Disable new tasks from being submitted\n    boolean shutdown = false;\n    while (!shutdown) {\n      try {\n        // Wait a while for existing tasks to terminate\n        shutdown = pool.awaitTermination(1, TimeUnit.SECONDS);\n      } catch (InterruptedException ie) {\n        // Preserve interrupt status\n        Thread.currentThread().interrupt();\n      }\n    }\n  }\n\n","sourceOld":"  public static void shutdownAndAwaitTermination(ExecutorService pool) {\n    shutdownAndAwaitTermination(pool, 60, TimeUnit.SECONDS);\n  }\n\n","bugFix":["cb5af3afeddbb803fb785098176e6e177c34261b"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"70d61fdc6a5871f80a74c0e2e55bb8a94e9ac59d","date":1440987729,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/common/util/ExecutorUtil#shutdownAndAwaitTermination(ExecutorService).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/common/util/ExecutorUtil#shutdownAndAwaitTermination(ExecutorService).mjava","sourceNew":"  public static void shutdownAndAwaitTermination(ExecutorService pool) {\n    pool.shutdown(); // Disable new tasks from being submitted\n    boolean shutdown = false;\n    while (!shutdown) {\n      try {\n        // Wait a while for existing tasks to terminate\n        shutdown = pool.awaitTermination(60, TimeUnit.SECONDS);\n      } catch (InterruptedException ie) {\n        // Preserve interrupt status\n        Thread.currentThread().interrupt();\n      }\n    }\n  }\n\n","sourceOld":"  public static void shutdownAndAwaitTermination(ExecutorService pool) {\n    pool.shutdown(); // Disable new tasks from being submitted\n    boolean shutdown = false;\n    while (!shutdown) {\n      try {\n        // Wait a while for existing tasks to terminate\n        shutdown = pool.awaitTermination(1, TimeUnit.SECONDS);\n      } catch (InterruptedException ie) {\n        // Preserve interrupt status\n        Thread.currentThread().interrupt();\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4ebf2a4e9fec7a202108e0897879cc366c3da296","date":1522408355,"type":3,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/common/util/ExecutorUtil#shutdownAndAwaitTermination(ExecutorService).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/common/util/ExecutorUtil#shutdownAndAwaitTermination(ExecutorService).mjava","sourceNew":"  public static void shutdownAndAwaitTermination(ExecutorService pool) {\n    pool.shutdown(); // Disable new tasks from being submitted\n    awaitTermination(pool);\n  }\n\n","sourceOld":"  public static void shutdownAndAwaitTermination(ExecutorService pool) {\n    pool.shutdown(); // Disable new tasks from being submitted\n    boolean shutdown = false;\n    while (!shutdown) {\n      try {\n        // Wait a while for existing tasks to terminate\n        shutdown = pool.awaitTermination(60, TimeUnit.SECONDS);\n      } catch (InterruptedException ie) {\n        // Preserve interrupt status\n        Thread.currentThread().interrupt();\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ca5eaeddb09b39cefceaf853898ae6188400ae37","date":1522413426,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"solr/solrj/src/java/org/apache/solr/common/util/ExecutorUtil#shutdownAndAwaitTermination(ExecutorService).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/common/util/ExecutorUtil#shutdownAndAwaitTermination(ExecutorService).mjava","sourceNew":"  public static void shutdownAndAwaitTermination(ExecutorService pool) {\n    pool.shutdown(); // Disable new tasks from being submitted\n    awaitTermination(pool);\n  }\n\n","sourceOld":"  public static void shutdownAndAwaitTermination(ExecutorService pool) {\n    pool.shutdown(); // Disable new tasks from being submitted\n    boolean shutdown = false;\n    while (!shutdown) {\n      try {\n        // Wait a while for existing tasks to terminate\n        shutdown = pool.awaitTermination(60, TimeUnit.SECONDS);\n      } catch (InterruptedException ie) {\n        // Preserve interrupt status\n        Thread.currentThread().interrupt();\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a117d95183986014a31f25bb04e5464ca06d6068","date":1566208086,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/common/util/ExecutorUtil#shutdownAndAwaitTermination(ExecutorService).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/common/util/ExecutorUtil#shutdownAndAwaitTermination(ExecutorService).mjava","sourceNew":"  public static void shutdownAndAwaitTermination(ExecutorService pool) {\n    if(pool == null) return;\n    pool.shutdown(); // Disable new tasks from being submitted\n    awaitTermination(pool);\n  }\n\n","sourceOld":"  public static void shutdownAndAwaitTermination(ExecutorService pool) {\n    pool.shutdown(); // Disable new tasks from being submitted\n    awaitTermination(pool);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c44cc06c26e456fe9c215072b79fce30babe3975","date":1570365040,"type":3,"author":"Ishan Chattopadhyaya","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/common/util/ExecutorUtil#shutdownAndAwaitTermination(ExecutorService).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/common/util/ExecutorUtil#shutdownAndAwaitTermination(ExecutorService).mjava","sourceNew":"  public static void shutdownAndAwaitTermination(ExecutorService pool) {\n    pool.shutdown(); // Disable new tasks from being submitted\n    awaitTermination(pool);\n  }\n\n","sourceOld":"  public static void shutdownAndAwaitTermination(ExecutorService pool) {\n    if(pool == null) return;\n    pool.shutdown(); // Disable new tasks from being submitted\n    awaitTermination(pool);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b0b597c65628ca9e73913a07e81691f8229bae35","date":1571224353,"type":3,"author":"jimczi","isMerge":true,"pathNew":"solr/solrj/src/java/org/apache/solr/common/util/ExecutorUtil#shutdownAndAwaitTermination(ExecutorService).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/common/util/ExecutorUtil#shutdownAndAwaitTermination(ExecutorService).mjava","sourceNew":"  public static void shutdownAndAwaitTermination(ExecutorService pool) {\n    pool.shutdown(); // Disable new tasks from being submitted\n    awaitTermination(pool);\n  }\n\n","sourceOld":"  public static void shutdownAndAwaitTermination(ExecutorService pool) {\n    if(pool == null) return;\n    pool.shutdown(); // Disable new tasks from being submitted\n    awaitTermination(pool);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c959a64c5b52cc12eb8daa17f4f0ed9cf2dfcaaa","date":1571411704,"type":3,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/common/util/ExecutorUtil#shutdownAndAwaitTermination(ExecutorService).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/common/util/ExecutorUtil#shutdownAndAwaitTermination(ExecutorService).mjava","sourceNew":"  public static void shutdownAndAwaitTermination(ExecutorService pool) {\n    if(pool == null) return;\n    pool.shutdown(); // Disable new tasks from being submitted\n    awaitTermination(pool);\n  }\n\n","sourceOld":"  public static void shutdownAndAwaitTermination(ExecutorService pool) {\n    pool.shutdown(); // Disable new tasks from being submitted\n    awaitTermination(pool);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2bb87985079ab034ce215661202801376f614a8c","date":1595969187,"type":3,"author":"David Smiley","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/common/util/ExecutorUtil#shutdownAndAwaitTermination(ExecutorService).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/common/util/ExecutorUtil#shutdownAndAwaitTermination(ExecutorService).mjava","sourceNew":"  public static void shutdownAndAwaitTermination(ExecutorService pool) {\n    if (pool == null) return;\n    pool.shutdown(); // Disable new tasks from being submitted\n    awaitTermination(pool);\n  }\n\n","sourceOld":"  public static void shutdownAndAwaitTermination(ExecutorService pool) {\n    if(pool == null) return;\n    pool.shutdown(); // Disable new tasks from being submitted\n    awaitTermination(pool);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"d3fcb70cf561547c7bb1506e0cf32ca7b1287064":["a6378064655e76cd7b908b1cab4ce425b384b508","80ba0e0ced6273399ff97caaf301445b9fd24895"],"c959a64c5b52cc12eb8daa17f4f0ed9cf2dfcaaa":["c44cc06c26e456fe9c215072b79fce30babe3975"],"7157fdda82ae1a1cb77b012ef0eb72249ee2f3d6":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"80ba0e0ced6273399ff97caaf301445b9fd24895":["a6378064655e76cd7b908b1cab4ce425b384b508"],"cfe13eabf9e0652d72ce8fce9e894966c9eebc61":["80ba0e0ced6273399ff97caaf301445b9fd24895"],"d8469c0c0b45f7e3da74918efc8ede2ad2efe2b1":["7157fdda82ae1a1cb77b012ef0eb72249ee2f3d6"],"c44cc06c26e456fe9c215072b79fce30babe3975":["a117d95183986014a31f25bb04e5464ca06d6068"],"a117d95183986014a31f25bb04e5464ca06d6068":["ca5eaeddb09b39cefceaf853898ae6188400ae37"],"70d61fdc6a5871f80a74c0e2e55bb8a94e9ac59d":["275019a81d0883a1db4560391b072d1fbe272ec4"],"ca5eaeddb09b39cefceaf853898ae6188400ae37":["70d61fdc6a5871f80a74c0e2e55bb8a94e9ac59d","4ebf2a4e9fec7a202108e0897879cc366c3da296"],"a6378064655e76cd7b908b1cab4ce425b384b508":["d8469c0c0b45f7e3da74918efc8ede2ad2efe2b1"],"4ebf2a4e9fec7a202108e0897879cc366c3da296":["70d61fdc6a5871f80a74c0e2e55bb8a94e9ac59d"],"2bb87985079ab034ce215661202801376f614a8c":["c959a64c5b52cc12eb8daa17f4f0ed9cf2dfcaaa"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"74f45af4339b0daf7a95c820ab88c1aea74fbce0":["80ba0e0ced6273399ff97caaf301445b9fd24895","cfe13eabf9e0652d72ce8fce9e894966c9eebc61"],"275019a81d0883a1db4560391b072d1fbe272ec4":["cb5af3afeddbb803fb785098176e6e177c34261b"],"cb5af3afeddbb803fb785098176e6e177c34261b":["cfe13eabf9e0652d72ce8fce9e894966c9eebc61"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["2bb87985079ab034ce215661202801376f614a8c"],"b0b597c65628ca9e73913a07e81691f8229bae35":["a117d95183986014a31f25bb04e5464ca06d6068","c44cc06c26e456fe9c215072b79fce30babe3975"]},"commit2Childs":{"d3fcb70cf561547c7bb1506e0cf32ca7b1287064":[],"c959a64c5b52cc12eb8daa17f4f0ed9cf2dfcaaa":["2bb87985079ab034ce215661202801376f614a8c"],"7157fdda82ae1a1cb77b012ef0eb72249ee2f3d6":["d8469c0c0b45f7e3da74918efc8ede2ad2efe2b1"],"80ba0e0ced6273399ff97caaf301445b9fd24895":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","cfe13eabf9e0652d72ce8fce9e894966c9eebc61","74f45af4339b0daf7a95c820ab88c1aea74fbce0"],"cfe13eabf9e0652d72ce8fce9e894966c9eebc61":["74f45af4339b0daf7a95c820ab88c1aea74fbce0","cb5af3afeddbb803fb785098176e6e177c34261b"],"d8469c0c0b45f7e3da74918efc8ede2ad2efe2b1":["a6378064655e76cd7b908b1cab4ce425b384b508"],"c44cc06c26e456fe9c215072b79fce30babe3975":["c959a64c5b52cc12eb8daa17f4f0ed9cf2dfcaaa","b0b597c65628ca9e73913a07e81691f8229bae35"],"a117d95183986014a31f25bb04e5464ca06d6068":["c44cc06c26e456fe9c215072b79fce30babe3975","b0b597c65628ca9e73913a07e81691f8229bae35"],"70d61fdc6a5871f80a74c0e2e55bb8a94e9ac59d":["ca5eaeddb09b39cefceaf853898ae6188400ae37","4ebf2a4e9fec7a202108e0897879cc366c3da296"],"ca5eaeddb09b39cefceaf853898ae6188400ae37":["a117d95183986014a31f25bb04e5464ca06d6068"],"a6378064655e76cd7b908b1cab4ce425b384b508":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","80ba0e0ced6273399ff97caaf301445b9fd24895"],"4ebf2a4e9fec7a202108e0897879cc366c3da296":["ca5eaeddb09b39cefceaf853898ae6188400ae37"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["7157fdda82ae1a1cb77b012ef0eb72249ee2f3d6"],"2bb87985079ab034ce215661202801376f614a8c":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"74f45af4339b0daf7a95c820ab88c1aea74fbce0":[],"275019a81d0883a1db4560391b072d1fbe272ec4":["70d61fdc6a5871f80a74c0e2e55bb8a94e9ac59d"],"cb5af3afeddbb803fb785098176e6e177c34261b":["275019a81d0883a1db4560391b072d1fbe272ec4"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"b0b597c65628ca9e73913a07e81691f8229bae35":[]},"heads":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","74f45af4339b0daf7a95c820ab88c1aea74fbce0","cd5edd1f2b162a5cfa08efd17851a07373a96817","b0b597c65628ca9e73913a07e81691f8229bae35"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}