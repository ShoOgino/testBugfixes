{"path":"lucene/core/src/test/org/apache/lucene/analysis/TestMockAnalyzer#testWrapReader().mjava","commits":[{"id":"0edf827b45f5783faebc53a0b2f5a3210a51a488","date":1375217108,"type":0,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/analysis/TestMockAnalyzer#testWrapReader().mjava","pathOld":"/dev/null","sourceNew":"  public void testWrapReader() throws Exception {\n    // LUCENE-5153: test that wrapping an analyzer's reader is allowed\n    final Random random = random();\n    \n    Analyzer a = new AnalyzerWrapper() {\n      \n      @Override\n      protected Reader wrapReader(String fieldName, Reader reader) {\n        return new MockCharFilter(reader, 7);\n      }\n      \n      @Override\n      protected TokenStreamComponents wrapComponents(String fieldName, TokenStreamComponents components) {\n        return components;\n      }\n      \n      @Override\n      protected Analyzer getWrappedAnalyzer(String fieldName) {\n        return new MockAnalyzer(random);\n      }\n    };\n    \n    checkOneTerm(a, \"abc\", \"aabc\");\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee","date":1376366778,"type":0,"author":"Han Jiang","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/analysis/TestMockAnalyzer#testWrapReader().mjava","pathOld":"/dev/null","sourceNew":"  public void testWrapReader() throws Exception {\n    // LUCENE-5153: test that wrapping an analyzer's reader is allowed\n    final Random random = random();\n    \n    Analyzer a = new AnalyzerWrapper() {\n      \n      @Override\n      protected Reader wrapReader(String fieldName, Reader reader) {\n        return new MockCharFilter(reader, 7);\n      }\n      \n      @Override\n      protected TokenStreamComponents wrapComponents(String fieldName, TokenStreamComponents components) {\n        return components;\n      }\n      \n      @Override\n      protected Analyzer getWrappedAnalyzer(String fieldName) {\n        return new MockAnalyzer(random);\n      }\n    };\n    \n    checkOneTerm(a, \"abc\", \"aabc\");\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"38061899d760e06a12fe186bc1f09ca9ff0e64a6","date":1376491296,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/analysis/TestMockAnalyzer#testWrapReader().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/analysis/TestMockAnalyzer#testWrapReader().mjava","sourceNew":"  public void testWrapReader() throws Exception {\n    // LUCENE-5153: test that wrapping an analyzer's reader is allowed\n    final Random random = random();\n    \n    final Analyzer delegate = new MockAnalyzer(random);\n    Analyzer a = new AnalyzerWrapper(delegate.getReuseStrategy()) {\n      \n      @Override\n      protected Reader wrapReader(String fieldName, Reader reader) {\n        return new MockCharFilter(reader, 7);\n      }\n      \n      @Override\n      protected TokenStreamComponents wrapComponents(String fieldName, TokenStreamComponents components) {\n        return components;\n      }\n      \n      @Override\n      protected Analyzer getWrappedAnalyzer(String fieldName) {\n        return delegate;\n      }\n    };\n    \n    checkOneTerm(a, \"abc\", \"aabc\");\n  }\n\n","sourceOld":"  public void testWrapReader() throws Exception {\n    // LUCENE-5153: test that wrapping an analyzer's reader is allowed\n    final Random random = random();\n    \n    Analyzer a = new AnalyzerWrapper() {\n      \n      @Override\n      protected Reader wrapReader(String fieldName, Reader reader) {\n        return new MockCharFilter(reader, 7);\n      }\n      \n      @Override\n      protected TokenStreamComponents wrapComponents(String fieldName, TokenStreamComponents components) {\n        return components;\n      }\n      \n      @Override\n      protected Analyzer getWrappedAnalyzer(String fieldName) {\n        return new MockAnalyzer(random);\n      }\n    };\n    \n    checkOneTerm(a, \"abc\", \"aabc\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3dffec77fb8f7d0e9ca4869dddd6af94528b4576","date":1377875202,"type":3,"author":"Han Jiang","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/analysis/TestMockAnalyzer#testWrapReader().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/analysis/TestMockAnalyzer#testWrapReader().mjava","sourceNew":"  public void testWrapReader() throws Exception {\n    // LUCENE-5153: test that wrapping an analyzer's reader is allowed\n    final Random random = random();\n    \n    final Analyzer delegate = new MockAnalyzer(random);\n    Analyzer a = new AnalyzerWrapper(delegate.getReuseStrategy()) {\n      \n      @Override\n      protected Reader wrapReader(String fieldName, Reader reader) {\n        return new MockCharFilter(reader, 7);\n      }\n      \n      @Override\n      protected TokenStreamComponents wrapComponents(String fieldName, TokenStreamComponents components) {\n        return components;\n      }\n      \n      @Override\n      protected Analyzer getWrappedAnalyzer(String fieldName) {\n        return delegate;\n      }\n    };\n    \n    checkOneTerm(a, \"abc\", \"aabc\");\n  }\n\n","sourceOld":"  public void testWrapReader() throws Exception {\n    // LUCENE-5153: test that wrapping an analyzer's reader is allowed\n    final Random random = random();\n    \n    Analyzer a = new AnalyzerWrapper() {\n      \n      @Override\n      protected Reader wrapReader(String fieldName, Reader reader) {\n        return new MockCharFilter(reader, 7);\n      }\n      \n      @Override\n      protected TokenStreamComponents wrapComponents(String fieldName, TokenStreamComponents components) {\n        return components;\n      }\n      \n      @Override\n      protected Analyzer getWrappedAnalyzer(String fieldName) {\n        return new MockAnalyzer(random);\n      }\n    };\n    \n    checkOneTerm(a, \"abc\", \"aabc\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6e6076d5869e894e98558285d9c9be9179d93921","date":1404559951,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/analysis/TestMockAnalyzer#testWrapReader().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/analysis/TestMockAnalyzer#testWrapReader().mjava","sourceNew":"  public void testWrapReader() throws Exception {\n    // LUCENE-5153: test that wrapping an analyzer's reader is allowed\n    final Random random = random();\n    \n    final Analyzer delegate = new MockAnalyzer(random);\n    Analyzer a = new AnalyzerWrapper(delegate.getReuseStrategy()) {\n      \n      @Override\n      protected Reader wrapReader(String fieldName, Reader reader) {\n        return new MockCharFilter(reader, 7);\n      }\n      \n      @Override\n      protected Analyzer getWrappedAnalyzer(String fieldName) {\n        return delegate;\n      }\n    };\n    \n    checkOneTerm(a, \"abc\", \"aabc\");\n  }\n\n","sourceOld":"  public void testWrapReader() throws Exception {\n    // LUCENE-5153: test that wrapping an analyzer's reader is allowed\n    final Random random = random();\n    \n    final Analyzer delegate = new MockAnalyzer(random);\n    Analyzer a = new AnalyzerWrapper(delegate.getReuseStrategy()) {\n      \n      @Override\n      protected Reader wrapReader(String fieldName, Reader reader) {\n        return new MockCharFilter(reader, 7);\n      }\n      \n      @Override\n      protected TokenStreamComponents wrapComponents(String fieldName, TokenStreamComponents components) {\n        return components;\n      }\n      \n      @Override\n      protected Analyzer getWrappedAnalyzer(String fieldName) {\n        return delegate;\n      }\n    };\n    \n    checkOneTerm(a, \"abc\", \"aabc\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b52491e71f0d5d0f0160d6ed0d39e0dd661be68a","date":1429550638,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/test-framework/src/test/org/apache/lucene/analysis/TestMockAnalyzer#testWrapReader().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/analysis/TestMockAnalyzer#testWrapReader().mjava","sourceNew":"  public void testWrapReader() throws Exception {\n    // LUCENE-5153: test that wrapping an analyzer's reader is allowed\n    final Random random = random();\n    \n    final Analyzer delegate = new MockAnalyzer(random);\n    Analyzer a = new AnalyzerWrapper(delegate.getReuseStrategy()) {\n      \n      @Override\n      protected Reader wrapReader(String fieldName, Reader reader) {\n        return new MockCharFilter(reader, 7);\n      }\n      \n      @Override\n      protected Analyzer getWrappedAnalyzer(String fieldName) {\n        return delegate;\n      }\n    };\n    \n    checkOneTerm(a, \"abc\", \"aabc\");\n  }\n\n","sourceOld":"  public void testWrapReader() throws Exception {\n    // LUCENE-5153: test that wrapping an analyzer's reader is allowed\n    final Random random = random();\n    \n    final Analyzer delegate = new MockAnalyzer(random);\n    Analyzer a = new AnalyzerWrapper(delegate.getReuseStrategy()) {\n      \n      @Override\n      protected Reader wrapReader(String fieldName, Reader reader) {\n        return new MockCharFilter(reader, 7);\n      }\n      \n      @Override\n      protected Analyzer getWrappedAnalyzer(String fieldName) {\n        return delegate;\n      }\n    };\n    \n    checkOneTerm(a, \"abc\", \"aabc\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"0edf827b45f5783faebc53a0b2f5a3210a51a488":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"38061899d760e06a12fe186bc1f09ca9ff0e64a6":["0edf827b45f5783faebc53a0b2f5a3210a51a488"],"6e6076d5869e894e98558285d9c9be9179d93921":["38061899d760e06a12fe186bc1f09ca9ff0e64a6"],"3dffec77fb8f7d0e9ca4869dddd6af94528b4576":["8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee","38061899d760e06a12fe186bc1f09ca9ff0e64a6"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"b52491e71f0d5d0f0160d6ed0d39e0dd661be68a":["6e6076d5869e894e98558285d9c9be9179d93921"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b52491e71f0d5d0f0160d6ed0d39e0dd661be68a"]},"commit2Childs":{"0edf827b45f5783faebc53a0b2f5a3210a51a488":["38061899d760e06a12fe186bc1f09ca9ff0e64a6"],"38061899d760e06a12fe186bc1f09ca9ff0e64a6":["6e6076d5869e894e98558285d9c9be9179d93921","3dffec77fb8f7d0e9ca4869dddd6af94528b4576"],"6e6076d5869e894e98558285d9c9be9179d93921":["b52491e71f0d5d0f0160d6ed0d39e0dd661be68a"],"3dffec77fb8f7d0e9ca4869dddd6af94528b4576":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["0edf827b45f5783faebc53a0b2f5a3210a51a488","8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee"],"8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee":["3dffec77fb8f7d0e9ca4869dddd6af94528b4576"],"b52491e71f0d5d0f0160d6ed0d39e0dd661be68a":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["3dffec77fb8f7d0e9ca4869dddd6af94528b4576","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}