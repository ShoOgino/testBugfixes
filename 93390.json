{"path":"solr/solrj/src/test/org/apache/solr/client/solrj/io/stream/StreamExpressionToExpessionTest#testReducerStream().mjava","commits":[{"id":"f00f1c5fad501b66705121feb623f8cfbb6712f9","date":1431347838,"type":0,"author":"Joel Bernstein","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/io/stream/StreamExpressionToExpessionTest#testReducerStream().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testReducerStream() throws Exception {\n\n    ReducerStream stream;\n    String expressionString;\n    \n    // Basic test\n    stream = new ReducerStream(StreamExpressionParser.parse(\"group(\"\n                                                  + \"search(collection1, q=*:*, fl=\\\"id,a_s,a_i,a_f\\\", sort=\\\"a_s desc, a_f asc\\\"),\"\n                                                  + \"by=\\\"a_s desc\\\")\"), factory);\n    expressionString = stream.toExpression(factory).toString();\n    assertTrue(expressionString.contains(\"group(search(collection1\"));\n    assertTrue(expressionString.contains(\"by=\\\"a_s desc\\\"\"));\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["74a180a9264fddbaf4727f75ded3b11d6b8f2bf7"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"c1833f6d07cc5000544dfe89f26c81e2eb8afb4c","date":1446951913,"type":3,"author":"Dennis Gove","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/io/stream/StreamExpressionToExpessionTest#testReducerStream().mjava","pathOld":"solr/solrj/src/test/org/apache/solr/client/solrj/io/stream/StreamExpressionToExpessionTest#testReducerStream().mjava","sourceNew":"  @Test\n  public void testReducerStream() throws Exception {\n\n    ReducerStream stream;\n    String expressionString;\n    \n    // Basic test\n    stream = new ReducerStream(StreamExpressionParser.parse(\"group(\"\n                                                  + \"search(collection1, q=*:*, fl=\\\"id,a_s,a_i,a_f\\\", sort=\\\"a_s desc, a_f asc\\\"),\"\n                                                  + \"by=\\\"a_s\\\")\"), factory);\n    expressionString = stream.toExpression(factory).toString();\n    assertTrue(expressionString.contains(\"group(search(collection1\"));\n    assertTrue(expressionString.contains(\"by=a_s\"));\n  }\n\n","sourceOld":"  @Test\n  public void testReducerStream() throws Exception {\n\n    ReducerStream stream;\n    String expressionString;\n    \n    // Basic test\n    stream = new ReducerStream(StreamExpressionParser.parse(\"group(\"\n                                                  + \"search(collection1, q=*:*, fl=\\\"id,a_s,a_i,a_f\\\", sort=\\\"a_s desc, a_f asc\\\"),\"\n                                                  + \"by=\\\"a_s desc\\\")\"), factory);\n    expressionString = stream.toExpression(factory).toString();\n    assertTrue(expressionString.contains(\"group(search(collection1\"));\n    assertTrue(expressionString.contains(\"by=\\\"a_s desc\\\"\"));\n  }\n\n","bugFix":null,"bugIntro":["74a180a9264fddbaf4727f75ded3b11d6b8f2bf7"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"74a180a9264fddbaf4727f75ded3b11d6b8f2bf7","date":1449800905,"type":3,"author":"Joel Bernstein","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/io/stream/StreamExpressionToExpessionTest#testReducerStream().mjava","pathOld":"solr/solrj/src/test/org/apache/solr/client/solrj/io/stream/StreamExpressionToExpessionTest#testReducerStream().mjava","sourceNew":"  @Test\n  public void testReducerStream() throws Exception {\n\n    ReducerStream stream;\n    String expressionString;\n    \n    // Basic test\n    stream = new ReducerStream(StreamExpressionParser.parse(\"reduce(\"\n                                                  + \"search(collection1, q=*:*, fl=\\\"id,a_s,a_i,a_f\\\", sort=\\\"a_s desc, a_f asc\\\"),\"\n                                                  + \"by=\\\"a_s\\\", group(sort=\\\"a_i desc\\\", n=\\\"5\\\"))\"), factory);\n    expressionString = stream.toExpression(factory).toString();\n    assertTrue(expressionString.contains(\"reduce(search(collection1\"));\n    assertTrue(expressionString.contains(\"by=a_s\"));\n  }\n\n","sourceOld":"  @Test\n  public void testReducerStream() throws Exception {\n\n    ReducerStream stream;\n    String expressionString;\n    \n    // Basic test\n    stream = new ReducerStream(StreamExpressionParser.parse(\"group(\"\n                                                  + \"search(collection1, q=*:*, fl=\\\"id,a_s,a_i,a_f\\\", sort=\\\"a_s desc, a_f asc\\\"),\"\n                                                  + \"by=\\\"a_s\\\")\"), factory);\n    expressionString = stream.toExpression(factory).toString();\n    assertTrue(expressionString.contains(\"group(search(collection1\"));\n    assertTrue(expressionString.contains(\"by=a_s\"));\n  }\n\n","bugFix":["f00f1c5fad501b66705121feb623f8cfbb6712f9","c1833f6d07cc5000544dfe89f26c81e2eb8afb4c"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f15af35d55d70c34451f9df5edeaeff6b31f8cbe","date":1519625627,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/io/stream/StreamExpressionToExpessionTest#testReducerStream().mjava","pathOld":"solr/solrj/src/test/org/apache/solr/client/solrj/io/stream/StreamExpressionToExpessionTest#testReducerStream().mjava","sourceNew":"  @Test\n  public void testReducerStream() throws Exception {\n    String expressionString;\n    \n    // Basic test\n    try (ReducerStream stream = new ReducerStream(StreamExpressionParser.parse(\"reduce(\"\n                                                  + \"search(collection1, q=*:*, fl=\\\"id,a_s,a_i,a_f\\\", sort=\\\"a_s desc, a_f asc\\\"),\"\n                                                  + \"by=\\\"a_s\\\", group(sort=\\\"a_i desc\\\", n=\\\"5\\\"))\"), factory)) {\n      expressionString = stream.toExpression(factory).toString();\n      assertTrue(expressionString.contains(\"reduce(search(collection1\"));\n      assertTrue(expressionString.contains(\"by=a_s\"));\n    }\n  }\n\n","sourceOld":"  @Test\n  public void testReducerStream() throws Exception {\n\n    ReducerStream stream;\n    String expressionString;\n    \n    // Basic test\n    stream = new ReducerStream(StreamExpressionParser.parse(\"reduce(\"\n                                                  + \"search(collection1, q=*:*, fl=\\\"id,a_s,a_i,a_f\\\", sort=\\\"a_s desc, a_f asc\\\"),\"\n                                                  + \"by=\\\"a_s\\\", group(sort=\\\"a_i desc\\\", n=\\\"5\\\"))\"), factory);\n    expressionString = stream.toExpression(factory).toString();\n    assertTrue(expressionString.contains(\"reduce(search(collection1\"));\n    assertTrue(expressionString.contains(\"by=a_s\"));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"f00f1c5fad501b66705121feb623f8cfbb6712f9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"c1833f6d07cc5000544dfe89f26c81e2eb8afb4c":["f00f1c5fad501b66705121feb623f8cfbb6712f9"],"74a180a9264fddbaf4727f75ded3b11d6b8f2bf7":["c1833f6d07cc5000544dfe89f26c81e2eb8afb4c"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"f15af35d55d70c34451f9df5edeaeff6b31f8cbe":["74a180a9264fddbaf4727f75ded3b11d6b8f2bf7"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["f15af35d55d70c34451f9df5edeaeff6b31f8cbe"]},"commit2Childs":{"f00f1c5fad501b66705121feb623f8cfbb6712f9":["c1833f6d07cc5000544dfe89f26c81e2eb8afb4c"],"c1833f6d07cc5000544dfe89f26c81e2eb8afb4c":["74a180a9264fddbaf4727f75ded3b11d6b8f2bf7"],"74a180a9264fddbaf4727f75ded3b11d6b8f2bf7":["f15af35d55d70c34451f9df5edeaeff6b31f8cbe"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["f00f1c5fad501b66705121feb623f8cfbb6712f9"],"f15af35d55d70c34451f9df5edeaeff6b31f8cbe":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}