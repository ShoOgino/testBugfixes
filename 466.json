{"path":"lucene/spatial3d/src/test/org/apache/lucene/spatial3d/geom/Geo3DUtil#fromPolygon(Polygon...).mjava","commits":[{"id":"2cf5416daa86f8b76735f3f885d396a70943f9be","date":1501795780,"type":0,"author":"Karl Wright","isMerge":false,"pathNew":"lucene/spatial3d/src/test/org/apache/lucene/spatial3d/geom/Geo3DUtil#fromPolygon(Polygon...).mjava","pathOld":"/dev/null","sourceNew":"  /**\n    * Convert a set of Polygon objects into a GeoPolygon.\n    * @param polygons are the Polygon objects.\n    * @return the GeoPolygon.\n    */\n  static GeoPolygon fromPolygon(final Polygon... polygons) {\n    //System.err.println(\"Creating polygon...\");\n    if (polygons.length < 1) {\n      throw new IllegalArgumentException(\"need at least one polygon\");\n    }\n    final GeoPolygon shape;\n    if (polygons.length == 1) {\n      final GeoPolygon component = fromPolygon(polygons[0]);\n      if (component == null) {\n        // Polygon is degenerate\n        shape = new GeoCompositePolygon();\n      } else {\n        shape = component;\n      }\n    } else {\n      final GeoCompositePolygon poly = new GeoCompositePolygon();\n      for (final Polygon p : polygons) {\n        final GeoPolygon component = fromPolygon(p);\n        if (component != null) {\n          poly.addShape(component);\n        }\n      }\n      shape = poly;\n    }\n    return shape;\n    //System.err.println(\"...done\");\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7a23cf16c8fa265dc0a564adcabb55e3f054e0ac","date":1502192746,"type":0,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"lucene/spatial3d/src/test/org/apache/lucene/spatial3d/geom/Geo3DUtil#fromPolygon(Polygon...).mjava","pathOld":"/dev/null","sourceNew":"  /**\n    * Convert a set of Polygon objects into a GeoPolygon.\n    * @param polygons are the Polygon objects.\n    * @return the GeoPolygon.\n    */\n  static GeoPolygon fromPolygon(final Polygon... polygons) {\n    //System.err.println(\"Creating polygon...\");\n    if (polygons.length < 1) {\n      throw new IllegalArgumentException(\"need at least one polygon\");\n    }\n    final GeoPolygon shape;\n    if (polygons.length == 1) {\n      final GeoPolygon component = fromPolygon(polygons[0]);\n      if (component == null) {\n        // Polygon is degenerate\n        shape = new GeoCompositePolygon();\n      } else {\n        shape = component;\n      }\n    } else {\n      final GeoCompositePolygon poly = new GeoCompositePolygon();\n      for (final Polygon p : polygons) {\n        final GeoPolygon component = fromPolygon(p);\n        if (component != null) {\n          poly.addShape(component);\n        }\n      }\n      shape = poly;\n    }\n    return shape;\n    //System.err.println(\"...done\");\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d0dcd28a23753c14d56c7d2c5ba71cf1e03d532b","date":1503230479,"type":3,"author":"Karl Wright","isMerge":false,"pathNew":"lucene/spatial3d/src/test/org/apache/lucene/spatial3d/geom/Geo3DUtil#fromPolygon(Polygon...).mjava","pathOld":"lucene/spatial3d/src/test/org/apache/lucene/spatial3d/geom/Geo3DUtil#fromPolygon(Polygon...).mjava","sourceNew":"  /**\n    * Convert a set of Polygon objects into a GeoPolygon.\n    * @param polygons are the Polygon objects.\n    * @return the GeoPolygon.\n    */\n  static GeoPolygon fromPolygon(final Polygon... polygons) {\n    //System.err.println(\"Creating polygon...\");\n    if (polygons.length < 1) {\n      throw new IllegalArgumentException(\"need at least one polygon\");\n    }\n    final GeoPolygon shape;\n    if (polygons.length == 1) {\n      final GeoPolygon component = fromPolygon(polygons[0]);\n      if (component == null) {\n        // Polygon is degenerate\n        shape = new GeoCompositePolygon(PlanetModel.WGS84);\n      } else {\n        shape = component;\n      }\n    } else {\n      final GeoCompositePolygon poly = new GeoCompositePolygon(PlanetModel.WGS84);\n      for (final Polygon p : polygons) {\n        final GeoPolygon component = fromPolygon(p);\n        if (component != null) {\n          poly.addShape(component);\n        }\n      }\n      shape = poly;\n    }\n    return shape;\n    //System.err.println(\"...done\");\n  }\n\n","sourceOld":"  /**\n    * Convert a set of Polygon objects into a GeoPolygon.\n    * @param polygons are the Polygon objects.\n    * @return the GeoPolygon.\n    */\n  static GeoPolygon fromPolygon(final Polygon... polygons) {\n    //System.err.println(\"Creating polygon...\");\n    if (polygons.length < 1) {\n      throw new IllegalArgumentException(\"need at least one polygon\");\n    }\n    final GeoPolygon shape;\n    if (polygons.length == 1) {\n      final GeoPolygon component = fromPolygon(polygons[0]);\n      if (component == null) {\n        // Polygon is degenerate\n        shape = new GeoCompositePolygon();\n      } else {\n        shape = component;\n      }\n    } else {\n      final GeoCompositePolygon poly = new GeoCompositePolygon();\n      for (final Polygon p : polygons) {\n        final GeoPolygon component = fromPolygon(p);\n        if (component != null) {\n          poly.addShape(component);\n        }\n      }\n      shape = poly;\n    }\n    return shape;\n    //System.err.println(\"...done\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3051d6122751c8f6cc1e9cf24592658b59843ec2","date":1503298024,"type":3,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"lucene/spatial3d/src/test/org/apache/lucene/spatial3d/geom/Geo3DUtil#fromPolygon(Polygon...).mjava","pathOld":"lucene/spatial3d/src/test/org/apache/lucene/spatial3d/geom/Geo3DUtil#fromPolygon(Polygon...).mjava","sourceNew":"  /**\n    * Convert a set of Polygon objects into a GeoPolygon.\n    * @param polygons are the Polygon objects.\n    * @return the GeoPolygon.\n    */\n  static GeoPolygon fromPolygon(final Polygon... polygons) {\n    //System.err.println(\"Creating polygon...\");\n    if (polygons.length < 1) {\n      throw new IllegalArgumentException(\"need at least one polygon\");\n    }\n    final GeoPolygon shape;\n    if (polygons.length == 1) {\n      final GeoPolygon component = fromPolygon(polygons[0]);\n      if (component == null) {\n        // Polygon is degenerate\n        shape = new GeoCompositePolygon(PlanetModel.WGS84);\n      } else {\n        shape = component;\n      }\n    } else {\n      final GeoCompositePolygon poly = new GeoCompositePolygon(PlanetModel.WGS84);\n      for (final Polygon p : polygons) {\n        final GeoPolygon component = fromPolygon(p);\n        if (component != null) {\n          poly.addShape(component);\n        }\n      }\n      shape = poly;\n    }\n    return shape;\n    //System.err.println(\"...done\");\n  }\n\n","sourceOld":"  /**\n    * Convert a set of Polygon objects into a GeoPolygon.\n    * @param polygons are the Polygon objects.\n    * @return the GeoPolygon.\n    */\n  static GeoPolygon fromPolygon(final Polygon... polygons) {\n    //System.err.println(\"Creating polygon...\");\n    if (polygons.length < 1) {\n      throw new IllegalArgumentException(\"need at least one polygon\");\n    }\n    final GeoPolygon shape;\n    if (polygons.length == 1) {\n      final GeoPolygon component = fromPolygon(polygons[0]);\n      if (component == null) {\n        // Polygon is degenerate\n        shape = new GeoCompositePolygon();\n      } else {\n        shape = component;\n      }\n    } else {\n      final GeoCompositePolygon poly = new GeoCompositePolygon();\n      for (final Polygon p : polygons) {\n        final GeoPolygon component = fromPolygon(p);\n        if (component != null) {\n          poly.addShape(component);\n        }\n      }\n      shape = poly;\n    }\n    return shape;\n    //System.err.println(\"...done\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c33ed6824db1d3c54aaf0208e68c3df3fd43d93a","date":1583186777,"type":4,"author":"Nicholas Knize","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/spatial3d/src/test/org/apache/lucene/spatial3d/geom/Geo3DUtil#fromPolygon(Polygon...).mjava","sourceNew":null,"sourceOld":"  /**\n    * Convert a set of Polygon objects into a GeoPolygon.\n    * @param polygons are the Polygon objects.\n    * @return the GeoPolygon.\n    */\n  static GeoPolygon fromPolygon(final Polygon... polygons) {\n    //System.err.println(\"Creating polygon...\");\n    if (polygons.length < 1) {\n      throw new IllegalArgumentException(\"need at least one polygon\");\n    }\n    final GeoPolygon shape;\n    if (polygons.length == 1) {\n      final GeoPolygon component = fromPolygon(polygons[0]);\n      if (component == null) {\n        // Polygon is degenerate\n        shape = new GeoCompositePolygon(PlanetModel.WGS84);\n      } else {\n        shape = component;\n      }\n    } else {\n      final GeoCompositePolygon poly = new GeoCompositePolygon(PlanetModel.WGS84);\n      for (final Polygon p : polygons) {\n        final GeoPolygon component = fromPolygon(p);\n        if (component != null) {\n          poly.addShape(component);\n        }\n      }\n      shape = poly;\n    }\n    return shape;\n    //System.err.println(\"...done\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"2cf5416daa86f8b76735f3f885d396a70943f9be":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"7a23cf16c8fa265dc0a564adcabb55e3f054e0ac":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","2cf5416daa86f8b76735f3f885d396a70943f9be"],"d0dcd28a23753c14d56c7d2c5ba71cf1e03d532b":["2cf5416daa86f8b76735f3f885d396a70943f9be"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3051d6122751c8f6cc1e9cf24592658b59843ec2":["7a23cf16c8fa265dc0a564adcabb55e3f054e0ac","d0dcd28a23753c14d56c7d2c5ba71cf1e03d532b"],"c33ed6824db1d3c54aaf0208e68c3df3fd43d93a":["2cf5416daa86f8b76735f3f885d396a70943f9be"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["c33ed6824db1d3c54aaf0208e68c3df3fd43d93a"]},"commit2Childs":{"2cf5416daa86f8b76735f3f885d396a70943f9be":["7a23cf16c8fa265dc0a564adcabb55e3f054e0ac","d0dcd28a23753c14d56c7d2c5ba71cf1e03d532b","c33ed6824db1d3c54aaf0208e68c3df3fd43d93a"],"7a23cf16c8fa265dc0a564adcabb55e3f054e0ac":["3051d6122751c8f6cc1e9cf24592658b59843ec2"],"d0dcd28a23753c14d56c7d2c5ba71cf1e03d532b":["3051d6122751c8f6cc1e9cf24592658b59843ec2"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["2cf5416daa86f8b76735f3f885d396a70943f9be","7a23cf16c8fa265dc0a564adcabb55e3f054e0ac"],"3051d6122751c8f6cc1e9cf24592658b59843ec2":[],"c33ed6824db1d3c54aaf0208e68c3df3fd43d93a":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["3051d6122751c8f6cc1e9cf24592658b59843ec2","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}