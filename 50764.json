{"path":"lucene/highlighter/src/java/org/apache/lucene/search/matchhighlight/OffsetRange#slice(int,int).mjava","commits":[{"id":"060cad2e7ae19bfe202be419234328acf680716c","date":1599747351,"type":0,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/highlighter/src/java/org/apache/lucene/search/matchhighlight/OffsetRange#slice(int,int).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Returns a sub-range of this range (a copy). Subclasses should\n   * override and return an appropriate type covariant so that payloads\n   * are not lost.\n   */\n  public OffsetRange slice(int from, int to) {\n    assert from >= this.from;\n    assert to <= this.to;\n    return new OffsetRange(from, to);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"060cad2e7ae19bfe202be419234328acf680716c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["060cad2e7ae19bfe202be419234328acf680716c"]},"commit2Childs":{"060cad2e7ae19bfe202be419234328acf680716c":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["060cad2e7ae19bfe202be419234328acf680716c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}