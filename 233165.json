{"path":"solr/core/src/java/org/apache/solr/handler/admin/CollectionsHandler#forEach(SolrParams,BiConsumer[String,String[]]).mjava","commits":[{"id":"6857f8205f8c5b4ff39a54d8aebb4fdfb7cfb691","date":1516909549,"type":0,"author":"David Smiley","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/admin/CollectionsHandler#forEach(SolrParams,BiConsumer[String,String[]]).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Calls the consumer for each parameter and with all values.\n   * This may be more convenient than using the iterator.\n   */\n  //TODO put on SolrParams, or maybe SolrParams should implement Iterable<Map.Entry<String,String[]>\n  private static void forEach(SolrParams params, BiConsumer<String, String[]> consumer) {\n    //TODO do we add a predicate for the parameter as a filter? It would avoid calling getParams\n    final Iterator<String> iterator = params.getParameterNamesIterator();\n    while (iterator.hasNext()) {\n      String param = iterator.next();\n      String[] values = params.getParams(param);\n      consumer.accept(param, values);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"129e5b874f99ae4e04f39c337c940dda690f2d38","date":1524504409,"type":4,"author":"David Smiley","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/core/src/java/org/apache/solr/handler/admin/CollectionsHandler#forEach(SolrParams,BiConsumer[String,String[]]).mjava","sourceNew":null,"sourceOld":"  /**\n   * Calls the consumer for each parameter and with all values.\n   * This may be more convenient than using the iterator.\n   */\n  //TODO put on SolrParams, or maybe SolrParams should implement Iterable<Map.Entry<String,String[]>\n  private static void forEach(SolrParams params, BiConsumer<String, String[]> consumer) {\n    //TODO do we add a predicate for the parameter as a filter? It would avoid calling getParams\n    final Iterator<String> iterator = params.getParameterNamesIterator();\n    while (iterator.hasNext()) {\n      String param = iterator.next();\n      String[] values = params.getParams(param);\n      consumer.accept(param, values);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"129e5b874f99ae4e04f39c337c940dda690f2d38":["6857f8205f8c5b4ff39a54d8aebb4fdfb7cfb691"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"6857f8205f8c5b4ff39a54d8aebb4fdfb7cfb691":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["129e5b874f99ae4e04f39c337c940dda690f2d38"]},"commit2Childs":{"129e5b874f99ae4e04f39c337c940dda690f2d38":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["6857f8205f8c5b4ff39a54d8aebb4fdfb7cfb691"],"6857f8205f8c5b4ff39a54d8aebb4fdfb7cfb691":["129e5b874f99ae4e04f39c337c940dda690f2d38"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}