{"path":"solr/core/src/test/org/apache/solr/handler/component/SpellCheckComponentTest#testCorrectSpelling().mjava","commits":[{"id":"c903c3d15906a3da96b8c0c2fb704491005fdbdb","date":1453508227,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/component/SpellCheckComponentTest#testCorrectSpelling().mjava","pathOld":"solr/src/test/org/apache/solr/handler/component/SpellCheckComponentTest#testCorrectSpelling().mjava","sourceNew":"  @Test\n  public void testCorrectSpelling() throws Exception {\n    // Make sure correct spellings are signaled in the response\n    assertJQ(req(\"json.nl\",\"map\", \"qt\",rh, SpellCheckComponent.COMPONENT_NAME, \"true\", \"q\",\"lowerfilt:lazy lowerfilt:brown\", SpellCheckComponent.SPELLCHECK_EXTENDED_RESULTS, \"true\")\n       ,\"/spellcheck/suggestions=={'correctlySpelled':true}\"\n    );\n    assertJQ(req(\"json.nl\",\"map\", \"qt\",rh, SpellCheckComponent.COMPONENT_NAME, \"true\", \"q\",\"lakkle\", SpellCheckComponent.SPELLCHECK_EXTENDED_RESULTS, \"true\")\n       ,\"/spellcheck/suggestions/correctlySpelled==false\"\n    );\n  }\n\n","sourceOld":"  @Test\n  public void testCorrectSpelling() throws Exception {\n    // Make sure correct spellings are signaled in the response\n    assertJQ(req(\"json.nl\",\"map\", \"qt\",rh, SpellCheckComponent.COMPONENT_NAME, \"true\", \"q\",\"lowerfilt:lazy lowerfilt:brown\", SpellCheckComponent.SPELLCHECK_EXTENDED_RESULTS, \"true\")\n       ,\"/spellcheck/suggestions=={'correctlySpelled':true}\"\n    );\n    assertJQ(req(\"json.nl\",\"map\", \"qt\",rh, SpellCheckComponent.COMPONENT_NAME, \"true\", \"q\",\"lakkle\", SpellCheckComponent.SPELLCHECK_EXTENDED_RESULTS, \"true\")\n       ,\"/spellcheck/suggestions/correctlySpelled==false\"\n    );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a258fbb26824fd104ed795e5d9033d2d040049ee","date":1453508252,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/component/SpellCheckComponentTest#testCorrectSpelling().mjava","pathOld":"solr/src/test/org/apache/solr/handler/component/SpellCheckComponentTest#testCorrectSpelling().mjava","sourceNew":"  @Test\n  public void testCorrectSpelling() throws Exception {\n    // Make sure correct spellings are signaled in the response\n    assertJQ(req(\"json.nl\",\"map\", \"qt\",rh, SpellCheckComponent.COMPONENT_NAME, \"true\", \"q\",\"lowerfilt:lazy lowerfilt:brown\", SpellCheckComponent.SPELLCHECK_EXTENDED_RESULTS, \"true\")\n       ,\"/spellcheck/suggestions=={'correctlySpelled':true}\"\n    );\n    assertJQ(req(\"json.nl\",\"map\", \"qt\",rh, SpellCheckComponent.COMPONENT_NAME, \"true\", \"q\",\"lakkle\", SpellCheckComponent.SPELLCHECK_EXTENDED_RESULTS, \"true\")\n       ,\"/spellcheck/suggestions/correctlySpelled==false\"\n    );\n  }\n\n","sourceOld":"  @Test\n  public void testCorrectSpelling() throws Exception {\n    // Make sure correct spellings are signaled in the response\n    assertJQ(req(\"json.nl\",\"map\", \"qt\",rh, SpellCheckComponent.COMPONENT_NAME, \"true\", \"q\",\"lowerfilt:lazy lowerfilt:brown\", SpellCheckComponent.SPELLCHECK_EXTENDED_RESULTS, \"true\")\n       ,\"/spellcheck/suggestions=={'correctlySpelled':true}\"\n    );\n    assertJQ(req(\"json.nl\",\"map\", \"qt\",rh, SpellCheckComponent.COMPONENT_NAME, \"true\", \"q\",\"lakkle\", SpellCheckComponent.SPELLCHECK_EXTENDED_RESULTS, \"true\")\n       ,\"/spellcheck/suggestions/correctlySpelled==false\"\n    );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/handler/component/SpellCheckComponentTest#testCorrectSpelling().mjava","pathOld":"solr/src/test/org/apache/solr/handler/component/SpellCheckComponentTest#testCorrectSpelling().mjava","sourceNew":"  @Test\n  public void testCorrectSpelling() throws Exception {\n    // Make sure correct spellings are signaled in the response\n    assertJQ(req(\"json.nl\",\"map\", \"qt\",rh, SpellCheckComponent.COMPONENT_NAME, \"true\", \"q\",\"lowerfilt:lazy lowerfilt:brown\", SpellCheckComponent.SPELLCHECK_EXTENDED_RESULTS, \"true\")\n       ,\"/spellcheck/suggestions=={'correctlySpelled':true}\"\n    );\n    assertJQ(req(\"json.nl\",\"map\", \"qt\",rh, SpellCheckComponent.COMPONENT_NAME, \"true\", \"q\",\"lakkle\", SpellCheckComponent.SPELLCHECK_EXTENDED_RESULTS, \"true\")\n       ,\"/spellcheck/suggestions/correctlySpelled==false\"\n    );\n  }\n\n","sourceOld":"  @Test\n  public void testCorrectSpelling() throws Exception {\n    // Make sure correct spellings are signaled in the response\n    assertJQ(req(\"json.nl\",\"map\", \"qt\",rh, SpellCheckComponent.COMPONENT_NAME, \"true\", \"q\",\"lowerfilt:lazy lowerfilt:brown\", SpellCheckComponent.SPELLCHECK_EXTENDED_RESULTS, \"true\")\n       ,\"/spellcheck/suggestions=={'correctlySpelled':true}\"\n    );\n    assertJQ(req(\"json.nl\",\"map\", \"qt\",rh, SpellCheckComponent.COMPONENT_NAME, \"true\", \"q\",\"lakkle\", SpellCheckComponent.SPELLCHECK_EXTENDED_RESULTS, \"true\")\n       ,\"/spellcheck/suggestions/correctlySpelled==false\"\n    );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f08557cdb6c60ac7b88a9342c983a20cd236e74f","date":1330954480,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/component/SpellCheckComponentTest#testCorrectSpelling().mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/component/SpellCheckComponentTest#testCorrectSpelling().mjava","sourceNew":"  @Test\n  public void testCorrectSpelling() throws Exception {\n    // Make sure correct spellings are signaled in the response\n    assertJQ(req(\"json.nl\",\"map\", \"qt\",rh, SpellCheckComponent.COMPONENT_NAME, \"true\", \"q\",\"lowerfilt:lazy lowerfilt:brown\", SpellingParams.SPELLCHECK_EXTENDED_RESULTS, \"true\")\n       ,\"/spellcheck/suggestions=={'correctlySpelled':true}\"\n    );\n    assertJQ(req(\"json.nl\",\"map\", \"qt\",rh, SpellCheckComponent.COMPONENT_NAME, \"true\", \"q\",\"lakkle\", SpellingParams.SPELLCHECK_EXTENDED_RESULTS, \"true\")\n       ,\"/spellcheck/suggestions/correctlySpelled==false\"\n    );\n  }\n\n","sourceOld":"  @Test\n  public void testCorrectSpelling() throws Exception {\n    // Make sure correct spellings are signaled in the response\n    assertJQ(req(\"json.nl\",\"map\", \"qt\",rh, SpellCheckComponent.COMPONENT_NAME, \"true\", \"q\",\"lowerfilt:lazy lowerfilt:brown\", SpellCheckComponent.SPELLCHECK_EXTENDED_RESULTS, \"true\")\n       ,\"/spellcheck/suggestions=={'correctlySpelled':true}\"\n    );\n    assertJQ(req(\"json.nl\",\"map\", \"qt\",rh, SpellCheckComponent.COMPONENT_NAME, \"true\", \"q\",\"lakkle\", SpellCheckComponent.SPELLCHECK_EXTENDED_RESULTS, \"true\")\n       ,\"/spellcheck/suggestions/correctlySpelled==false\"\n    );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab","date":1331075828,"type":3,"author":"Ryan McKinley","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/handler/component/SpellCheckComponentTest#testCorrectSpelling().mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/component/SpellCheckComponentTest#testCorrectSpelling().mjava","sourceNew":"  @Test\n  public void testCorrectSpelling() throws Exception {\n    // Make sure correct spellings are signaled in the response\n    assertJQ(req(\"json.nl\",\"map\", \"qt\",rh, SpellCheckComponent.COMPONENT_NAME, \"true\", \"q\",\"lowerfilt:lazy lowerfilt:brown\", SpellingParams.SPELLCHECK_EXTENDED_RESULTS, \"true\")\n       ,\"/spellcheck/suggestions=={'correctlySpelled':true}\"\n    );\n    assertJQ(req(\"json.nl\",\"map\", \"qt\",rh, SpellCheckComponent.COMPONENT_NAME, \"true\", \"q\",\"lakkle\", SpellingParams.SPELLCHECK_EXTENDED_RESULTS, \"true\")\n       ,\"/spellcheck/suggestions/correctlySpelled==false\"\n    );\n  }\n\n","sourceOld":"  @Test\n  public void testCorrectSpelling() throws Exception {\n    // Make sure correct spellings are signaled in the response\n    assertJQ(req(\"json.nl\",\"map\", \"qt\",rh, SpellCheckComponent.COMPONENT_NAME, \"true\", \"q\",\"lowerfilt:lazy lowerfilt:brown\", SpellCheckComponent.SPELLCHECK_EXTENDED_RESULTS, \"true\")\n       ,\"/spellcheck/suggestions=={'correctlySpelled':true}\"\n    );\n    assertJQ(req(\"json.nl\",\"map\", \"qt\",rh, SpellCheckComponent.COMPONENT_NAME, \"true\", \"q\",\"lakkle\", SpellCheckComponent.SPELLCHECK_EXTENDED_RESULTS, \"true\")\n       ,\"/spellcheck/suggestions/correctlySpelled==false\"\n    );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"541f6605a29362fa8a42f33b69069e7da5178034","date":1337786849,"type":3,"author":"James Dyer","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/component/SpellCheckComponentTest#testCorrectSpelling().mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/component/SpellCheckComponentTest#testCorrectSpelling().mjava","sourceNew":"  @Test\n  public void testCorrectSpelling() throws Exception {\n    // Make sure correct spellings are signaled in the response\n    assertJQ(req(\"json.nl\",\"map\", \"qt\",rh, SpellCheckComponent.COMPONENT_NAME, \"true\",\n        \"q\",\"lowerfilt:lazy lowerfilt:brown\", SpellingParams.SPELLCHECK_EXTENDED_RESULTS, \"true\")\n       ,\"/spellcheck/suggestions=={'correctlySpelled':true}\"\n    );\n    assertJQ(req(\"json.nl\",\"map\", \"qt\",rh, SpellCheckComponent.COMPONENT_NAME, \"true\", \"spellcheck.dictionary\", \"direct_lowerfilt\",\n        \"q\",\"lowerfilt:lazy lowerfilt:brown\", SpellingParams.SPELLCHECK_EXTENDED_RESULTS, \"true\")\n       ,\"/spellcheck/suggestions=={'correctlySpelled':true}\"\n    );\n    assertJQ(req(\"json.nl\",\"map\", \"qt\",rh, SpellCheckComponent.COMPONENT_NAME, \"true\", \"spellcheck.dictionary\", \"direct_lowerfilt\",\n        \"q\",\"lakkle\", SpellingParams.SPELLCHECK_EXTENDED_RESULTS, \"true\")\n       ,\"/spellcheck/suggestions/correctlySpelled==false\"\n    );\n  }\n\n","sourceOld":"  @Test\n  public void testCorrectSpelling() throws Exception {\n    // Make sure correct spellings are signaled in the response\n    assertJQ(req(\"json.nl\",\"map\", \"qt\",rh, SpellCheckComponent.COMPONENT_NAME, \"true\", \"q\",\"lowerfilt:lazy lowerfilt:brown\", SpellingParams.SPELLCHECK_EXTENDED_RESULTS, \"true\")\n       ,\"/spellcheck/suggestions=={'correctlySpelled':true}\"\n    );\n    assertJQ(req(\"json.nl\",\"map\", \"qt\",rh, SpellCheckComponent.COMPONENT_NAME, \"true\", \"q\",\"lakkle\", SpellingParams.SPELLCHECK_EXTENDED_RESULTS, \"true\")\n       ,\"/spellcheck/suggestions/correctlySpelled==false\"\n    );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3599646b4d4c346cf74d334813488b8b337b5bf5","date":1337790261,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/handler/component/SpellCheckComponentTest#testCorrectSpelling().mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/component/SpellCheckComponentTest#testCorrectSpelling().mjava","sourceNew":"  @Test\n  public void testCorrectSpelling() throws Exception {\n    // Make sure correct spellings are signaled in the response\n    assertJQ(req(\"json.nl\",\"map\", \"qt\",rh, SpellCheckComponent.COMPONENT_NAME, \"true\",\n        \"q\",\"lowerfilt:lazy lowerfilt:brown\", SpellingParams.SPELLCHECK_EXTENDED_RESULTS, \"true\")\n       ,\"/spellcheck/suggestions=={'correctlySpelled':true}\"\n    );\n    assertJQ(req(\"json.nl\",\"map\", \"qt\",rh, SpellCheckComponent.COMPONENT_NAME, \"true\", \"spellcheck.dictionary\", \"direct_lowerfilt\",\n        \"q\",\"lowerfilt:lazy lowerfilt:brown\", SpellingParams.SPELLCHECK_EXTENDED_RESULTS, \"true\")\n       ,\"/spellcheck/suggestions=={'correctlySpelled':true}\"\n    );\n    assertJQ(req(\"json.nl\",\"map\", \"qt\",rh, SpellCheckComponent.COMPONENT_NAME, \"true\", \"spellcheck.dictionary\", \"direct_lowerfilt\",\n        \"q\",\"lakkle\", SpellingParams.SPELLCHECK_EXTENDED_RESULTS, \"true\")\n       ,\"/spellcheck/suggestions/correctlySpelled==false\"\n    );\n  }\n\n","sourceOld":"  @Test\n  public void testCorrectSpelling() throws Exception {\n    // Make sure correct spellings are signaled in the response\n    assertJQ(req(\"json.nl\",\"map\", \"qt\",rh, SpellCheckComponent.COMPONENT_NAME, \"true\", \"q\",\"lowerfilt:lazy lowerfilt:brown\", SpellingParams.SPELLCHECK_EXTENDED_RESULTS, \"true\")\n       ,\"/spellcheck/suggestions=={'correctlySpelled':true}\"\n    );\n    assertJQ(req(\"json.nl\",\"map\", \"qt\",rh, SpellCheckComponent.COMPONENT_NAME, \"true\", \"q\",\"lakkle\", SpellingParams.SPELLCHECK_EXTENDED_RESULTS, \"true\")\n       ,\"/spellcheck/suggestions/correctlySpelled==false\"\n    );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"343d2d9477b299075fa3a19a46e654b6c3bf552b","date":1407872410,"type":3,"author":"James Dyer","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/component/SpellCheckComponentTest#testCorrectSpelling().mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/component/SpellCheckComponentTest#testCorrectSpelling().mjava","sourceNew":"  @Test\n  public void testCorrectSpelling() throws Exception {\n    // Make sure correct spellings are signaled in the response\n    assertJQ(req(\"json.nl\",\"map\", \"qt\",rh, SpellCheckComponent.COMPONENT_NAME, \"true\",\n        \"q\",\"lowerfilt:lazy lowerfilt:brown\", SpellingParams.SPELLCHECK_EXTENDED_RESULTS, \"true\")\n       ,\"/spellcheck/correctlySpelled==true\"\n    );\n    assertJQ(req(\"json.nl\",\"map\", \"qt\",rh, SpellCheckComponent.COMPONENT_NAME, \"true\", \"spellcheck.dictionary\", \"direct_lowerfilt\",\n        \"q\",\"lowerfilt:lazy lowerfilt:brown\", SpellingParams.SPELLCHECK_EXTENDED_RESULTS, \"true\")\n       ,\"/spellcheck/correctlySpelled==true\"\n    );\n    assertJQ(req(\"json.nl\",\"map\", \"qt\",rh, SpellCheckComponent.COMPONENT_NAME, \"true\", \"spellcheck.dictionary\", \"direct_lowerfilt\",\n        \"q\",\"lakkle\", SpellingParams.SPELLCHECK_EXTENDED_RESULTS, \"true\")\n       ,\"/spellcheck/correctlySpelled==false\"\n    );\n  }\n\n","sourceOld":"  @Test\n  public void testCorrectSpelling() throws Exception {\n    // Make sure correct spellings are signaled in the response\n    assertJQ(req(\"json.nl\",\"map\", \"qt\",rh, SpellCheckComponent.COMPONENT_NAME, \"true\",\n        \"q\",\"lowerfilt:lazy lowerfilt:brown\", SpellingParams.SPELLCHECK_EXTENDED_RESULTS, \"true\")\n       ,\"/spellcheck/suggestions=={'correctlySpelled':true}\"\n    );\n    assertJQ(req(\"json.nl\",\"map\", \"qt\",rh, SpellCheckComponent.COMPONENT_NAME, \"true\", \"spellcheck.dictionary\", \"direct_lowerfilt\",\n        \"q\",\"lowerfilt:lazy lowerfilt:brown\", SpellingParams.SPELLCHECK_EXTENDED_RESULTS, \"true\")\n       ,\"/spellcheck/suggestions=={'correctlySpelled':true}\"\n    );\n    assertJQ(req(\"json.nl\",\"map\", \"qt\",rh, SpellCheckComponent.COMPONENT_NAME, \"true\", \"spellcheck.dictionary\", \"direct_lowerfilt\",\n        \"q\",\"lakkle\", SpellingParams.SPELLCHECK_EXTENDED_RESULTS, \"true\")\n       ,\"/spellcheck/suggestions/correctlySpelled==false\"\n    );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab":["c26f00b574427b55127e869b935845554afde1fa","f08557cdb6c60ac7b88a9342c983a20cd236e74f"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"343d2d9477b299075fa3a19a46e654b6c3bf552b":["541f6605a29362fa8a42f33b69069e7da5178034"],"f08557cdb6c60ac7b88a9342c983a20cd236e74f":["c26f00b574427b55127e869b935845554afde1fa"],"c26f00b574427b55127e869b935845554afde1fa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","c903c3d15906a3da96b8c0c2fb704491005fdbdb"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3599646b4d4c346cf74d334813488b8b337b5bf5":["f08557cdb6c60ac7b88a9342c983a20cd236e74f","541f6605a29362fa8a42f33b69069e7da5178034"],"a258fbb26824fd104ed795e5d9033d2d040049ee":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["343d2d9477b299075fa3a19a46e654b6c3bf552b"],"541f6605a29362fa8a42f33b69069e7da5178034":["f08557cdb6c60ac7b88a9342c983a20cd236e74f"]},"commit2Childs":{"9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab":[],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["c26f00b574427b55127e869b935845554afde1fa"],"c26f00b574427b55127e869b935845554afde1fa":["9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab","f08557cdb6c60ac7b88a9342c983a20cd236e74f"],"f08557cdb6c60ac7b88a9342c983a20cd236e74f":["9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab","3599646b4d4c346cf74d334813488b8b337b5bf5","541f6605a29362fa8a42f33b69069e7da5178034"],"343d2d9477b299075fa3a19a46e654b6c3bf552b":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c903c3d15906a3da96b8c0c2fb704491005fdbdb","c26f00b574427b55127e869b935845554afde1fa","a258fbb26824fd104ed795e5d9033d2d040049ee"],"3599646b4d4c346cf74d334813488b8b337b5bf5":[],"a258fbb26824fd104ed795e5d9033d2d040049ee":[],"541f6605a29362fa8a42f33b69069e7da5178034":["343d2d9477b299075fa3a19a46e654b6c3bf552b","3599646b4d4c346cf74d334813488b8b337b5bf5"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab","3599646b4d4c346cf74d334813488b8b337b5bf5","a258fbb26824fd104ed795e5d9033d2d040049ee","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}