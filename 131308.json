{"path":"lucene/codecs/src/test/org/apache/lucene/codecs/uniformsplit/sharedterms/TestSTBlockReader.MockSTBlockLine#MockSTBlockLine(TermBytes,List[String]).mjava","commits":[{"id":"5bf19e0585c61e03c645ac979e97c192529637d6","date":1591892388,"type":1,"author":"Bruno Roustant","isMerge":false,"pathNew":"lucene/codecs/src/test/org/apache/lucene/codecs/uniformsplit/sharedterms/TestSTBlockReader.MockSTBlockLine#MockSTBlockLine(TermBytes,List[String]).mjava","pathOld":"lucene/codecs/src/test/org/apache/lucene/codecs/uniformsplit/sharedterms/STBlockReaderTest.MockSTBlockLine#MockSTBlockLine(TermBytes,List[String]).mjava","sourceNew":"    MockSTBlockLine(TermBytes termBytes, List<String> fields) {\n      super(termBytes, Collections.singletonList(new FieldMetadataTermState(null, null)));\n      this.termStates = new HashMap<>();\n      for (String field : fields) {\n        termStates.put(field, MockTermStateFactory.create());\n      }\n    }\n\n","sourceOld":"    MockSTBlockLine(TermBytes termBytes, List<String> fields) {\n      super(termBytes, Collections.singletonList(new FieldMetadataTermState(null, null)));\n      this.termStates = new HashMap<>();\n      for (String field : fields) {\n        termStates.put(field, MockTermStateFactory.create());\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"5bf19e0585c61e03c645ac979e97c192529637d6":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["5bf19e0585c61e03c645ac979e97c192529637d6"]},"commit2Childs":{"5bf19e0585c61e03c645ac979e97c192529637d6":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["5bf19e0585c61e03c645ac979e97c192529637d6"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}