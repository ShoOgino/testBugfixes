{"path":"solr/core/src/test/org/apache/solr/analytics/facet/RangeFacetTest#beforeClass().mjava","commits":[{"id":"ff403346522eaa9de75403763e297e83a3ea585c","date":1384904731,"type":0,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/analytics/facet/RangeFacetTest#beforeClass().mjava","pathOld":"/dev/null","sourceNew":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n    initCore(\"solrconfig-basic.xml\",\"schema-analytics.xml\");\n    h.update(\"<delete><query>*:*</query></delete>\");\n    \n    //INT\n    intLongTestStart = new ArrayList<ArrayList<Integer>>(); \n    intDoubleTestStart = new ArrayList<ArrayList<Integer>>(); \n    intDateTestStart = new ArrayList<ArrayList<Integer>>(); \n    \n    //FLOAT\n    floatLongTestStart = new ArrayList<ArrayList<Float>>(); \n    floatDoubleTestStart = new ArrayList<ArrayList<Float>>(); \n    floatDateTestStart = new ArrayList<ArrayList<Float>>(); \n    \n    for (int j = 0; j < NUM_LOOPS; ++j) {\n      int i = j%INT;\n      long l = j%LONG;\n      float f = j%FLOAT;\n      double d = j%DOUBLE;\n      int dt = j%DATE;\n      int s = j%STRING;\n      assertU(adoc(\"id\", \"1000\" + j, \"int_id\", \"\" + i, \"long_ld\", \"\" + l, \"float_fd\", \"\" + f, \n          \"double_dd\", \"\" + d,  \"date_dtd\", (1000+dt) + \"-01-01T23:59:59Z\", \"string_sd\", \"abc\" + s));\n      //Longs\n      if (j-LONG<0) {\n        ArrayList<Integer> list1 = new ArrayList<Integer>();\n        list1.add(i);\n        intLongTestStart.add(list1);\n        ArrayList<Float> list2 = new ArrayList<Float>();\n        list2.add(f);\n        floatLongTestStart.add(list2);\n      } else {\n        intLongTestStart.get((int)l).add(i);\n        floatLongTestStart.get((int)l).add(f);\n      }\n      //Doubles\n      if (j-DOUBLE<0) {\n        ArrayList<Integer> list1 = new ArrayList<Integer>();\n        list1.add(i);\n        intDoubleTestStart.add(list1);\n        ArrayList<Float> list2 = new ArrayList<Float>();\n        list2.add(f);\n        floatDoubleTestStart.add(list2);\n      } else {\n        intDoubleTestStart.get((int)d).add(i);\n        floatDoubleTestStart.get((int)d).add(f);\n      }\n      //Dates\n      if (j-DATE<0) {\n        ArrayList<Integer> list1 = new ArrayList<Integer>();\n        list1.add(i);\n        intDateTestStart.add(list1);\n        ArrayList<Float> list2 = new ArrayList<Float>();\n        list2.add(f);\n        floatDateTestStart.add(list2);\n      } else {\n        intDateTestStart.get(dt).add(i);\n        floatDateTestStart.get(dt).add(f);\n      }\n      \n      if (usually()) {\n        assertU(commit());  // to have several segments\n      }\n    }\n    \n    assertU(commit()); \n    \n    response = h.query(request(fileToStringArr(fileName)));\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1c0586e0570de2261142e339891d57c0f36f45c6","date":1385565864,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/analytics/facet/RangeFacetTest#beforeClass().mjava","pathOld":"solr/core/src/test/org/apache/solr/analytics/facet/RangeFacetTest#beforeClass().mjava","sourceNew":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n    initCore(\"solrconfig-basic.xml\",\"schema-analytics.xml\");\n    h.update(\"<delete><query>*:*</query></delete>\");\n    \n    //INT\n    intLongTestStart = new ArrayList<ArrayList<Integer>>(); \n    intDoubleTestStart = new ArrayList<ArrayList<Integer>>(); \n    intDateTestStart = new ArrayList<ArrayList<Integer>>(); \n    \n    //FLOAT\n    floatLongTestStart = new ArrayList<ArrayList<Float>>(); \n    floatDoubleTestStart = new ArrayList<ArrayList<Float>>(); \n    floatDateTestStart = new ArrayList<ArrayList<Float>>(); \n    \n    for (int j = 0; j < NUM_LOOPS; ++j) {\n      int i = j%INT;\n      long l = j%LONG;\n      float f = j%FLOAT;\n      double d = j%DOUBLE;\n      int dt = j%DATE;\n      int s = j%STRING;\n      assertU(adoc(\"id\", \"1000\" + j, \"int_id\", \"\" + i, \"long_ld\", \"\" + l, \"float_fd\", \"\" + f, \n          \"double_dd\", \"\" + d,  \"date_dtd\", (1000+dt) + \"-01-01T23:59:59Z\", \"string_sd\", \"abc\" + s));\n      //Longs\n      if (j-LONG<0) {\n        ArrayList<Integer> list1 = new ArrayList<Integer>();\n        list1.add(i);\n        intLongTestStart.add(list1);\n        ArrayList<Float> list2 = new ArrayList<Float>();\n        list2.add(f);\n        floatLongTestStart.add(list2);\n      } else {\n        intLongTestStart.get((int)l).add(i);\n        floatLongTestStart.get((int)l).add(f);\n      }\n      //Doubles\n      if (j-DOUBLE<0) {\n        ArrayList<Integer> list1 = new ArrayList<Integer>();\n        list1.add(i);\n        intDoubleTestStart.add(list1);\n        ArrayList<Float> list2 = new ArrayList<Float>();\n        list2.add(f);\n        floatDoubleTestStart.add(list2);\n      } else {\n        intDoubleTestStart.get((int)d).add(i);\n        floatDoubleTestStart.get((int)d).add(f);\n      }\n      //Dates\n      if (j-DATE<0) {\n        ArrayList<Integer> list1 = new ArrayList<Integer>();\n        list1.add(i);\n        intDateTestStart.add(list1);\n        ArrayList<Float> list2 = new ArrayList<Float>();\n        list2.add(f);\n        floatDateTestStart.add(list2);\n      } else {\n        intDateTestStart.get(dt).add(i);\n        floatDateTestStart.get(dt).add(f);\n      }\n      \n      if (usually()) {\n        assertU(commit());  // to have several segments\n      }\n    }\n    \n    assertU(commit()); \n    \n    setResponse(h.query(request(fileToStringArr(fileName))));\n  }\n\n","sourceOld":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n    initCore(\"solrconfig-basic.xml\",\"schema-analytics.xml\");\n    h.update(\"<delete><query>*:*</query></delete>\");\n    \n    //INT\n    intLongTestStart = new ArrayList<ArrayList<Integer>>(); \n    intDoubleTestStart = new ArrayList<ArrayList<Integer>>(); \n    intDateTestStart = new ArrayList<ArrayList<Integer>>(); \n    \n    //FLOAT\n    floatLongTestStart = new ArrayList<ArrayList<Float>>(); \n    floatDoubleTestStart = new ArrayList<ArrayList<Float>>(); \n    floatDateTestStart = new ArrayList<ArrayList<Float>>(); \n    \n    for (int j = 0; j < NUM_LOOPS; ++j) {\n      int i = j%INT;\n      long l = j%LONG;\n      float f = j%FLOAT;\n      double d = j%DOUBLE;\n      int dt = j%DATE;\n      int s = j%STRING;\n      assertU(adoc(\"id\", \"1000\" + j, \"int_id\", \"\" + i, \"long_ld\", \"\" + l, \"float_fd\", \"\" + f, \n          \"double_dd\", \"\" + d,  \"date_dtd\", (1000+dt) + \"-01-01T23:59:59Z\", \"string_sd\", \"abc\" + s));\n      //Longs\n      if (j-LONG<0) {\n        ArrayList<Integer> list1 = new ArrayList<Integer>();\n        list1.add(i);\n        intLongTestStart.add(list1);\n        ArrayList<Float> list2 = new ArrayList<Float>();\n        list2.add(f);\n        floatLongTestStart.add(list2);\n      } else {\n        intLongTestStart.get((int)l).add(i);\n        floatLongTestStart.get((int)l).add(f);\n      }\n      //Doubles\n      if (j-DOUBLE<0) {\n        ArrayList<Integer> list1 = new ArrayList<Integer>();\n        list1.add(i);\n        intDoubleTestStart.add(list1);\n        ArrayList<Float> list2 = new ArrayList<Float>();\n        list2.add(f);\n        floatDoubleTestStart.add(list2);\n      } else {\n        intDoubleTestStart.get((int)d).add(i);\n        floatDoubleTestStart.get((int)d).add(f);\n      }\n      //Dates\n      if (j-DATE<0) {\n        ArrayList<Integer> list1 = new ArrayList<Integer>();\n        list1.add(i);\n        intDateTestStart.add(list1);\n        ArrayList<Float> list2 = new ArrayList<Float>();\n        list2.add(f);\n        floatDateTestStart.add(list2);\n      } else {\n        intDateTestStart.get(dt).add(i);\n        floatDateTestStart.get(dt).add(f);\n      }\n      \n      if (usually()) {\n        assertU(commit());  // to have several segments\n      }\n    }\n    \n    assertU(commit()); \n    \n    response = h.query(request(fileToStringArr(fileName)));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"74f45af4339b0daf7a95c820ab88c1aea74fbce0","date":1387475327,"type":0,"author":"Michael McCandless","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/analytics/facet/RangeFacetTest#beforeClass().mjava","pathOld":"/dev/null","sourceNew":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n    initCore(\"solrconfig-basic.xml\",\"schema-analytics.xml\");\n    h.update(\"<delete><query>*:*</query></delete>\");\n    \n    //INT\n    intLongTestStart = new ArrayList<ArrayList<Integer>>(); \n    intDoubleTestStart = new ArrayList<ArrayList<Integer>>(); \n    intDateTestStart = new ArrayList<ArrayList<Integer>>(); \n    \n    //FLOAT\n    floatLongTestStart = new ArrayList<ArrayList<Float>>(); \n    floatDoubleTestStart = new ArrayList<ArrayList<Float>>(); \n    floatDateTestStart = new ArrayList<ArrayList<Float>>(); \n    \n    for (int j = 0; j < NUM_LOOPS; ++j) {\n      int i = j%INT;\n      long l = j%LONG;\n      float f = j%FLOAT;\n      double d = j%DOUBLE;\n      int dt = j%DATE;\n      int s = j%STRING;\n      assertU(adoc(\"id\", \"1000\" + j, \"int_id\", \"\" + i, \"long_ld\", \"\" + l, \"float_fd\", \"\" + f, \n          \"double_dd\", \"\" + d,  \"date_dtd\", (1000+dt) + \"-01-01T23:59:59Z\", \"string_sd\", \"abc\" + s));\n      //Longs\n      if (j-LONG<0) {\n        ArrayList<Integer> list1 = new ArrayList<Integer>();\n        list1.add(i);\n        intLongTestStart.add(list1);\n        ArrayList<Float> list2 = new ArrayList<Float>();\n        list2.add(f);\n        floatLongTestStart.add(list2);\n      } else {\n        intLongTestStart.get((int)l).add(i);\n        floatLongTestStart.get((int)l).add(f);\n      }\n      //Doubles\n      if (j-DOUBLE<0) {\n        ArrayList<Integer> list1 = new ArrayList<Integer>();\n        list1.add(i);\n        intDoubleTestStart.add(list1);\n        ArrayList<Float> list2 = new ArrayList<Float>();\n        list2.add(f);\n        floatDoubleTestStart.add(list2);\n      } else {\n        intDoubleTestStart.get((int)d).add(i);\n        floatDoubleTestStart.get((int)d).add(f);\n      }\n      //Dates\n      if (j-DATE<0) {\n        ArrayList<Integer> list1 = new ArrayList<Integer>();\n        list1.add(i);\n        intDateTestStart.add(list1);\n        ArrayList<Float> list2 = new ArrayList<Float>();\n        list2.add(f);\n        floatDateTestStart.add(list2);\n      } else {\n        intDateTestStart.get(dt).add(i);\n        floatDateTestStart.get(dt).add(f);\n      }\n      \n      if (usually()) {\n        assertU(commit());  // to have several segments\n      }\n    }\n    \n    assertU(commit()); \n    \n    setResponse(h.query(request(fileToStringArr(fileName))));\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a475a1c165e02515bff766b3b7be0c42edf1870c","date":1393099333,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/analytics/facet/RangeFacetTest#beforeClass().mjava","pathOld":"solr/core/src/test/org/apache/solr/analytics/facet/RangeFacetTest#beforeClass().mjava","sourceNew":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n    initCore(\"solrconfig-basic.xml\",\"schema-analytics.xml\");\n    h.update(\"<delete><query>*:*</query></delete>\");\n    \n    //INT\n    intLongTestStart = new ArrayList<ArrayList<Integer>>(); \n    intDoubleTestStart = new ArrayList<ArrayList<Integer>>(); \n    intDateTestStart = new ArrayList<ArrayList<Integer>>(); \n    \n    //FLOAT\n    floatLongTestStart = new ArrayList<ArrayList<Float>>(); \n    floatDoubleTestStart = new ArrayList<ArrayList<Float>>(); \n    floatDateTestStart = new ArrayList<ArrayList<Float>>(); \n    \n    for (int j = 0; j < NUM_LOOPS; ++j) {\n      int i = j%INT;\n      long l = j%LONG;\n      float f = j%FLOAT;\n      double d = j%DOUBLE;\n      int dt = j%DATE;\n      int s = j%STRING;\n      assertU(adoc(\"id\", \"1000\" + j, \"int_id\", \"\" + i, \"long_ld\", \"\" + l, \"float_fd\", \"\" + f, \n          \"double_dd\", \"\" + d,  \"date_dtd\", (1000+dt) + \"-01-01T23:59:59Z\", \"string_sd\", \"abc\" + s));\n      //Longs\n      if (j-LONG<0) {\n        ArrayList<Integer> list1 = new ArrayList<Integer>();\n        list1.add(i);\n        intLongTestStart.add(list1);\n        ArrayList<Float> list2 = new ArrayList<Float>();\n        list2.add(f);\n        floatLongTestStart.add(list2);\n      } else {\n        intLongTestStart.get((int)l).add(i);\n        floatLongTestStart.get((int)l).add(f);\n      }\n      //Doubles\n      if (j-DOUBLE<0) {\n        ArrayList<Integer> list1 = new ArrayList<Integer>();\n        list1.add(i);\n        intDoubleTestStart.add(list1);\n        ArrayList<Float> list2 = new ArrayList<Float>();\n        list2.add(f);\n        floatDoubleTestStart.add(list2);\n      } else {\n        intDoubleTestStart.get((int)d).add(i);\n        floatDoubleTestStart.get((int)d).add(f);\n      }\n      //Dates\n      if (j-DATE<0) {\n        ArrayList<Integer> list1 = new ArrayList<Integer>();\n        list1.add(i);\n        intDateTestStart.add(list1);\n        ArrayList<Float> list2 = new ArrayList<Float>();\n        list2.add(f);\n        floatDateTestStart.add(list2);\n      } else {\n        intDateTestStart.get(dt).add(i);\n        floatDateTestStart.get(dt).add(f);\n      }\n      \n      if (usually()) {\n        assertU(commit());  // to have several segments\n      }\n    }\n    \n    assertU(commit()); \n    \n    setResponse(h.query(request(fileToStringArr(RangeFacetTest.class, fileName))));\n  }\n\n","sourceOld":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n    initCore(\"solrconfig-basic.xml\",\"schema-analytics.xml\");\n    h.update(\"<delete><query>*:*</query></delete>\");\n    \n    //INT\n    intLongTestStart = new ArrayList<ArrayList<Integer>>(); \n    intDoubleTestStart = new ArrayList<ArrayList<Integer>>(); \n    intDateTestStart = new ArrayList<ArrayList<Integer>>(); \n    \n    //FLOAT\n    floatLongTestStart = new ArrayList<ArrayList<Float>>(); \n    floatDoubleTestStart = new ArrayList<ArrayList<Float>>(); \n    floatDateTestStart = new ArrayList<ArrayList<Float>>(); \n    \n    for (int j = 0; j < NUM_LOOPS; ++j) {\n      int i = j%INT;\n      long l = j%LONG;\n      float f = j%FLOAT;\n      double d = j%DOUBLE;\n      int dt = j%DATE;\n      int s = j%STRING;\n      assertU(adoc(\"id\", \"1000\" + j, \"int_id\", \"\" + i, \"long_ld\", \"\" + l, \"float_fd\", \"\" + f, \n          \"double_dd\", \"\" + d,  \"date_dtd\", (1000+dt) + \"-01-01T23:59:59Z\", \"string_sd\", \"abc\" + s));\n      //Longs\n      if (j-LONG<0) {\n        ArrayList<Integer> list1 = new ArrayList<Integer>();\n        list1.add(i);\n        intLongTestStart.add(list1);\n        ArrayList<Float> list2 = new ArrayList<Float>();\n        list2.add(f);\n        floatLongTestStart.add(list2);\n      } else {\n        intLongTestStart.get((int)l).add(i);\n        floatLongTestStart.get((int)l).add(f);\n      }\n      //Doubles\n      if (j-DOUBLE<0) {\n        ArrayList<Integer> list1 = new ArrayList<Integer>();\n        list1.add(i);\n        intDoubleTestStart.add(list1);\n        ArrayList<Float> list2 = new ArrayList<Float>();\n        list2.add(f);\n        floatDoubleTestStart.add(list2);\n      } else {\n        intDoubleTestStart.get((int)d).add(i);\n        floatDoubleTestStart.get((int)d).add(f);\n      }\n      //Dates\n      if (j-DATE<0) {\n        ArrayList<Integer> list1 = new ArrayList<Integer>();\n        list1.add(i);\n        intDateTestStart.add(list1);\n        ArrayList<Float> list2 = new ArrayList<Float>();\n        list2.add(f);\n        floatDateTestStart.add(list2);\n      } else {\n        intDateTestStart.get(dt).add(i);\n        floatDateTestStart.get(dt).add(f);\n      }\n      \n      if (usually()) {\n        assertU(commit());  // to have several segments\n      }\n    }\n    \n    assertU(commit()); \n    \n    setResponse(h.query(request(fileToStringArr(fileName))));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"634f330c54fd3f9f491d52036dc3f40b4f4d8934","date":1394635157,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/analytics/facet/RangeFacetTest#beforeClass().mjava","pathOld":"solr/core/src/test/org/apache/solr/analytics/facet/RangeFacetTest#beforeClass().mjava","sourceNew":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n    initCore(\"solrconfig-basic.xml\",\"schema-analytics.xml\");\n    h.update(\"<delete><query>*:*</query></delete>\");\n    \n    //INT\n    intLongTestStart = new ArrayList<>();\n    intDoubleTestStart = new ArrayList<>();\n    intDateTestStart = new ArrayList<>();\n    \n    //FLOAT\n    floatLongTestStart = new ArrayList<>();\n    floatDoubleTestStart = new ArrayList<>();\n    floatDateTestStart = new ArrayList<>();\n    \n    for (int j = 0; j < NUM_LOOPS; ++j) {\n      int i = j%INT;\n      long l = j%LONG;\n      float f = j%FLOAT;\n      double d = j%DOUBLE;\n      int dt = j%DATE;\n      int s = j%STRING;\n      assertU(adoc(\"id\", \"1000\" + j, \"int_id\", \"\" + i, \"long_ld\", \"\" + l, \"float_fd\", \"\" + f, \n          \"double_dd\", \"\" + d,  \"date_dtd\", (1000+dt) + \"-01-01T23:59:59Z\", \"string_sd\", \"abc\" + s));\n      //Longs\n      if (j-LONG<0) {\n        ArrayList<Integer> list1 = new ArrayList<>();\n        list1.add(i);\n        intLongTestStart.add(list1);\n        ArrayList<Float> list2 = new ArrayList<>();\n        list2.add(f);\n        floatLongTestStart.add(list2);\n      } else {\n        intLongTestStart.get((int)l).add(i);\n        floatLongTestStart.get((int)l).add(f);\n      }\n      //Doubles\n      if (j-DOUBLE<0) {\n        ArrayList<Integer> list1 = new ArrayList<>();\n        list1.add(i);\n        intDoubleTestStart.add(list1);\n        ArrayList<Float> list2 = new ArrayList<>();\n        list2.add(f);\n        floatDoubleTestStart.add(list2);\n      } else {\n        intDoubleTestStart.get((int)d).add(i);\n        floatDoubleTestStart.get((int)d).add(f);\n      }\n      //Dates\n      if (j-DATE<0) {\n        ArrayList<Integer> list1 = new ArrayList<>();\n        list1.add(i);\n        intDateTestStart.add(list1);\n        ArrayList<Float> list2 = new ArrayList<>();\n        list2.add(f);\n        floatDateTestStart.add(list2);\n      } else {\n        intDateTestStart.get(dt).add(i);\n        floatDateTestStart.get(dt).add(f);\n      }\n      \n      if (usually()) {\n        assertU(commit());  // to have several segments\n      }\n    }\n    \n    assertU(commit()); \n    \n    setResponse(h.query(request(fileToStringArr(RangeFacetTest.class, fileName))));\n  }\n\n","sourceOld":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n    initCore(\"solrconfig-basic.xml\",\"schema-analytics.xml\");\n    h.update(\"<delete><query>*:*</query></delete>\");\n    \n    //INT\n    intLongTestStart = new ArrayList<ArrayList<Integer>>(); \n    intDoubleTestStart = new ArrayList<ArrayList<Integer>>(); \n    intDateTestStart = new ArrayList<ArrayList<Integer>>(); \n    \n    //FLOAT\n    floatLongTestStart = new ArrayList<ArrayList<Float>>(); \n    floatDoubleTestStart = new ArrayList<ArrayList<Float>>(); \n    floatDateTestStart = new ArrayList<ArrayList<Float>>(); \n    \n    for (int j = 0; j < NUM_LOOPS; ++j) {\n      int i = j%INT;\n      long l = j%LONG;\n      float f = j%FLOAT;\n      double d = j%DOUBLE;\n      int dt = j%DATE;\n      int s = j%STRING;\n      assertU(adoc(\"id\", \"1000\" + j, \"int_id\", \"\" + i, \"long_ld\", \"\" + l, \"float_fd\", \"\" + f, \n          \"double_dd\", \"\" + d,  \"date_dtd\", (1000+dt) + \"-01-01T23:59:59Z\", \"string_sd\", \"abc\" + s));\n      //Longs\n      if (j-LONG<0) {\n        ArrayList<Integer> list1 = new ArrayList<Integer>();\n        list1.add(i);\n        intLongTestStart.add(list1);\n        ArrayList<Float> list2 = new ArrayList<Float>();\n        list2.add(f);\n        floatLongTestStart.add(list2);\n      } else {\n        intLongTestStart.get((int)l).add(i);\n        floatLongTestStart.get((int)l).add(f);\n      }\n      //Doubles\n      if (j-DOUBLE<0) {\n        ArrayList<Integer> list1 = new ArrayList<Integer>();\n        list1.add(i);\n        intDoubleTestStart.add(list1);\n        ArrayList<Float> list2 = new ArrayList<Float>();\n        list2.add(f);\n        floatDoubleTestStart.add(list2);\n      } else {\n        intDoubleTestStart.get((int)d).add(i);\n        floatDoubleTestStart.get((int)d).add(f);\n      }\n      //Dates\n      if (j-DATE<0) {\n        ArrayList<Integer> list1 = new ArrayList<Integer>();\n        list1.add(i);\n        intDateTestStart.add(list1);\n        ArrayList<Float> list2 = new ArrayList<Float>();\n        list2.add(f);\n        floatDateTestStart.add(list2);\n      } else {\n        intDateTestStart.get(dt).add(i);\n        floatDateTestStart.get(dt).add(f);\n      }\n      \n      if (usually()) {\n        assertU(commit());  // to have several segments\n      }\n    }\n    \n    assertU(commit()); \n    \n    setResponse(h.query(request(fileToStringArr(RangeFacetTest.class, fileName))));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0f719faa74f7213d4a395510dbc1f1b7cb178484","date":1410881394,"type":5,"author":"Yonik Seeley","isMerge":false,"pathNew":"solr/contrib/analytics/src/test/org/apache/solr/analytics/facet/RangeFacetTest#beforeClass().mjava","pathOld":"solr/core/src/test/org/apache/solr/analytics/facet/RangeFacetTest#beforeClass().mjava","sourceNew":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n    initCore(\"solrconfig-basic.xml\",\"schema-analytics.xml\");\n    h.update(\"<delete><query>*:*</query></delete>\");\n    \n    //INT\n    intLongTestStart = new ArrayList<>();\n    intDoubleTestStart = new ArrayList<>();\n    intDateTestStart = new ArrayList<>();\n    \n    //FLOAT\n    floatLongTestStart = new ArrayList<>();\n    floatDoubleTestStart = new ArrayList<>();\n    floatDateTestStart = new ArrayList<>();\n    \n    for (int j = 0; j < NUM_LOOPS; ++j) {\n      int i = j%INT;\n      long l = j%LONG;\n      float f = j%FLOAT;\n      double d = j%DOUBLE;\n      int dt = j%DATE;\n      int s = j%STRING;\n      assertU(adoc(\"id\", \"1000\" + j, \"int_id\", \"\" + i, \"long_ld\", \"\" + l, \"float_fd\", \"\" + f, \n          \"double_dd\", \"\" + d,  \"date_dtd\", (1000+dt) + \"-01-01T23:59:59Z\", \"string_sd\", \"abc\" + s));\n      //Longs\n      if (j-LONG<0) {\n        ArrayList<Integer> list1 = new ArrayList<>();\n        list1.add(i);\n        intLongTestStart.add(list1);\n        ArrayList<Float> list2 = new ArrayList<>();\n        list2.add(f);\n        floatLongTestStart.add(list2);\n      } else {\n        intLongTestStart.get((int)l).add(i);\n        floatLongTestStart.get((int)l).add(f);\n      }\n      //Doubles\n      if (j-DOUBLE<0) {\n        ArrayList<Integer> list1 = new ArrayList<>();\n        list1.add(i);\n        intDoubleTestStart.add(list1);\n        ArrayList<Float> list2 = new ArrayList<>();\n        list2.add(f);\n        floatDoubleTestStart.add(list2);\n      } else {\n        intDoubleTestStart.get((int)d).add(i);\n        floatDoubleTestStart.get((int)d).add(f);\n      }\n      //Dates\n      if (j-DATE<0) {\n        ArrayList<Integer> list1 = new ArrayList<>();\n        list1.add(i);\n        intDateTestStart.add(list1);\n        ArrayList<Float> list2 = new ArrayList<>();\n        list2.add(f);\n        floatDateTestStart.add(list2);\n      } else {\n        intDateTestStart.get(dt).add(i);\n        floatDateTestStart.get(dt).add(f);\n      }\n      \n      if (usually()) {\n        assertU(commit());  // to have several segments\n      }\n    }\n    \n    assertU(commit()); \n    \n    setResponse(h.query(request(fileToStringArr(RangeFacetTest.class, fileName))));\n  }\n\n","sourceOld":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n    initCore(\"solrconfig-basic.xml\",\"schema-analytics.xml\");\n    h.update(\"<delete><query>*:*</query></delete>\");\n    \n    //INT\n    intLongTestStart = new ArrayList<>();\n    intDoubleTestStart = new ArrayList<>();\n    intDateTestStart = new ArrayList<>();\n    \n    //FLOAT\n    floatLongTestStart = new ArrayList<>();\n    floatDoubleTestStart = new ArrayList<>();\n    floatDateTestStart = new ArrayList<>();\n    \n    for (int j = 0; j < NUM_LOOPS; ++j) {\n      int i = j%INT;\n      long l = j%LONG;\n      float f = j%FLOAT;\n      double d = j%DOUBLE;\n      int dt = j%DATE;\n      int s = j%STRING;\n      assertU(adoc(\"id\", \"1000\" + j, \"int_id\", \"\" + i, \"long_ld\", \"\" + l, \"float_fd\", \"\" + f, \n          \"double_dd\", \"\" + d,  \"date_dtd\", (1000+dt) + \"-01-01T23:59:59Z\", \"string_sd\", \"abc\" + s));\n      //Longs\n      if (j-LONG<0) {\n        ArrayList<Integer> list1 = new ArrayList<>();\n        list1.add(i);\n        intLongTestStart.add(list1);\n        ArrayList<Float> list2 = new ArrayList<>();\n        list2.add(f);\n        floatLongTestStart.add(list2);\n      } else {\n        intLongTestStart.get((int)l).add(i);\n        floatLongTestStart.get((int)l).add(f);\n      }\n      //Doubles\n      if (j-DOUBLE<0) {\n        ArrayList<Integer> list1 = new ArrayList<>();\n        list1.add(i);\n        intDoubleTestStart.add(list1);\n        ArrayList<Float> list2 = new ArrayList<>();\n        list2.add(f);\n        floatDoubleTestStart.add(list2);\n      } else {\n        intDoubleTestStart.get((int)d).add(i);\n        floatDoubleTestStart.get((int)d).add(f);\n      }\n      //Dates\n      if (j-DATE<0) {\n        ArrayList<Integer> list1 = new ArrayList<>();\n        list1.add(i);\n        intDateTestStart.add(list1);\n        ArrayList<Float> list2 = new ArrayList<>();\n        list2.add(f);\n        floatDateTestStart.add(list2);\n      } else {\n        intDateTestStart.get(dt).add(i);\n        floatDateTestStart.get(dt).add(f);\n      }\n      \n      if (usually()) {\n        assertU(commit());  // to have several segments\n      }\n    }\n    \n    assertU(commit()); \n    \n    setResponse(h.query(request(fileToStringArr(RangeFacetTest.class, fileName))));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"634f330c54fd3f9f491d52036dc3f40b4f4d8934":["a475a1c165e02515bff766b3b7be0c42edf1870c"],"a475a1c165e02515bff766b3b7be0c42edf1870c":["1c0586e0570de2261142e339891d57c0f36f45c6"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"74f45af4339b0daf7a95c820ab88c1aea74fbce0":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","1c0586e0570de2261142e339891d57c0f36f45c6"],"ff403346522eaa9de75403763e297e83a3ea585c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"0f719faa74f7213d4a395510dbc1f1b7cb178484":["634f330c54fd3f9f491d52036dc3f40b4f4d8934"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["0f719faa74f7213d4a395510dbc1f1b7cb178484"],"1c0586e0570de2261142e339891d57c0f36f45c6":["ff403346522eaa9de75403763e297e83a3ea585c"]},"commit2Childs":{"634f330c54fd3f9f491d52036dc3f40b4f4d8934":["0f719faa74f7213d4a395510dbc1f1b7cb178484"],"a475a1c165e02515bff766b3b7be0c42edf1870c":["634f330c54fd3f9f491d52036dc3f40b4f4d8934"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["74f45af4339b0daf7a95c820ab88c1aea74fbce0","ff403346522eaa9de75403763e297e83a3ea585c"],"74f45af4339b0daf7a95c820ab88c1aea74fbce0":[],"ff403346522eaa9de75403763e297e83a3ea585c":["1c0586e0570de2261142e339891d57c0f36f45c6"],"0f719faa74f7213d4a395510dbc1f1b7cb178484":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"1c0586e0570de2261142e339891d57c0f36f45c6":["a475a1c165e02515bff766b3b7be0c42edf1870c","74f45af4339b0daf7a95c820ab88c1aea74fbce0"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["74f45af4339b0daf7a95c820ab88c1aea74fbce0","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}