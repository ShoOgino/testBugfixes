{"path":"lucene/core/src/java/org/apache/lucene/util/DocIdSetBuilder#build(long).mjava","commits":[{"id":"0e91a2d9ed80172872da0f517870da6756289554","date":1436431140,"type":0,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/DocIdSetBuilder#build(long).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Expert: build a {@link DocIdSet} with a hint on the cost that the resulting\n   * {@link DocIdSet} would have.\n   */\n  public DocIdSet build(long costHint) {\n    try {\n      if (bitSet != null) {\n        if (costHint == -1) {\n          return new BitDocIdSet(bitSet);\n        } else {\n          return new BitDocIdSet(bitSet, costHint);\n        }\n      } else {\n        LSBRadixSorter sorter = new LSBRadixSorter();\n        sorter.sort(buffer, 0, bufferSize);\n        final int l = dedup(buffer, bufferSize);\n        buffer = ArrayUtil.grow(buffer, l + 1);\n        buffer[l] = DocIdSetIterator.NO_MORE_DOCS;\n        return new IntArrayDocIdSet(buffer, l);\n      }\n    } finally {\n      this.buffer = null;\n      this.bufferSize = 0;\n      this.bitSet = null;\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fbb517d79e844487af01a6ca20870b400594321c","date":1436476855,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/DocIdSetBuilder#build(long).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/DocIdSetBuilder#build(long).mjava","sourceNew":"  /**\n   * Expert: build a {@link DocIdSet} with a hint on the cost that the resulting\n   * {@link DocIdSet} would have.\n   */\n  public DocIdSet build(long costHint) {\n    try {\n      if (bitSet != null) {\n        if (costHint == -1) {\n          return new BitDocIdSet(bitSet);\n        } else {\n          return new BitDocIdSet(bitSet, costHint);\n        }\n      } else {\n        LSBRadixSorter sorter = new LSBRadixSorter();\n        sorter.sort(buffer, 0, bufferSize);\n        final int l = dedup(buffer, bufferSize);\n        assert l <= bufferSize;\n        buffer = ArrayUtil.grow(buffer, l + 1);\n        buffer[l] = DocIdSetIterator.NO_MORE_DOCS;\n        return new IntArrayDocIdSet(buffer, l);\n      }\n    } finally {\n      this.buffer = null;\n      this.bufferSize = 0;\n      this.bitSet = null;\n    }\n  }\n\n","sourceOld":"  /**\n   * Expert: build a {@link DocIdSet} with a hint on the cost that the resulting\n   * {@link DocIdSet} would have.\n   */\n  public DocIdSet build(long costHint) {\n    try {\n      if (bitSet != null) {\n        if (costHint == -1) {\n          return new BitDocIdSet(bitSet);\n        } else {\n          return new BitDocIdSet(bitSet, costHint);\n        }\n      } else {\n        LSBRadixSorter sorter = new LSBRadixSorter();\n        sorter.sort(buffer, 0, bufferSize);\n        final int l = dedup(buffer, bufferSize);\n        buffer = ArrayUtil.grow(buffer, l + 1);\n        buffer[l] = DocIdSetIterator.NO_MORE_DOCS;\n        return new IntArrayDocIdSet(buffer, l);\n      }\n    } finally {\n      this.buffer = null;\n      this.bufferSize = 0;\n      this.bitSet = null;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2b63007489248c99b5cdc766ce55938891f5d969","date":1456737032,"type":4,"author":"Adrien Grand","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/util/DocIdSetBuilder#build(long).mjava","sourceNew":null,"sourceOld":"  /**\n   * Expert: build a {@link DocIdSet} with a hint on the cost that the resulting\n   * {@link DocIdSet} would have.\n   */\n  public DocIdSet build(long costHint) {\n    try {\n      if (bitSet != null) {\n        if (costHint == -1) {\n          return new BitDocIdSet(bitSet);\n        } else {\n          return new BitDocIdSet(bitSet, costHint);\n        }\n      } else {\n        LSBRadixSorter sorter = new LSBRadixSorter();\n        sorter.sort(buffer, 0, bufferSize);\n        final int l = dedup(buffer, bufferSize);\n        assert l <= bufferSize;\n        buffer = ArrayUtil.grow(buffer, l + 1);\n        buffer[l] = DocIdSetIterator.NO_MORE_DOCS;\n        return new IntArrayDocIdSet(buffer, l);\n      }\n    } finally {\n      this.buffer = null;\n      this.bufferSize = 0;\n      this.bitSet = null;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"af2638813028b254a88b418ebeafb541afb49653","date":1456804822,"type":4,"author":"Noble Paul","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/util/DocIdSetBuilder#build(long).mjava","sourceNew":null,"sourceOld":"  /**\n   * Expert: build a {@link DocIdSet} with a hint on the cost that the resulting\n   * {@link DocIdSet} would have.\n   */\n  public DocIdSet build(long costHint) {\n    try {\n      if (bitSet != null) {\n        if (costHint == -1) {\n          return new BitDocIdSet(bitSet);\n        } else {\n          return new BitDocIdSet(bitSet, costHint);\n        }\n      } else {\n        LSBRadixSorter sorter = new LSBRadixSorter();\n        sorter.sort(buffer, 0, bufferSize);\n        final int l = dedup(buffer, bufferSize);\n        assert l <= bufferSize;\n        buffer = ArrayUtil.grow(buffer, l + 1);\n        buffer[l] = DocIdSetIterator.NO_MORE_DOCS;\n        return new IntArrayDocIdSet(buffer, l);\n      }\n    } finally {\n      this.buffer = null;\n      this.bufferSize = 0;\n      this.bitSet = null;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"af2638813028b254a88b418ebeafb541afb49653":["fbb517d79e844487af01a6ca20870b400594321c","2b63007489248c99b5cdc766ce55938891f5d969"],"fbb517d79e844487af01a6ca20870b400594321c":["0e91a2d9ed80172872da0f517870da6756289554"],"0e91a2d9ed80172872da0f517870da6756289554":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"2b63007489248c99b5cdc766ce55938891f5d969":["fbb517d79e844487af01a6ca20870b400594321c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["af2638813028b254a88b418ebeafb541afb49653"]},"commit2Childs":{"af2638813028b254a88b418ebeafb541afb49653":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"fbb517d79e844487af01a6ca20870b400594321c":["af2638813028b254a88b418ebeafb541afb49653","2b63007489248c99b5cdc766ce55938891f5d969"],"0e91a2d9ed80172872da0f517870da6756289554":["fbb517d79e844487af01a6ca20870b400594321c"],"2b63007489248c99b5cdc766ce55938891f5d969":["af2638813028b254a88b418ebeafb541afb49653"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["0e91a2d9ed80172872da0f517870da6756289554"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}