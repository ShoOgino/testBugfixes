{"path":"lucene/sandbox/src/java/org/apache/lucene/document/NearestNeighbor.Cell#Cell(IndexTree,int,byte[],byte[],double).mjava","commits":[{"id":"9fc0d60683b47b5d922124c31f57c8b34734f9e6","date":1480846684,"type":1,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/sandbox/src/java/org/apache/lucene/document/NearestNeighbor.Cell#Cell(IndexTree,int,byte[],byte[],double).mjava","pathOld":"lucene/sandbox/src/java/org/apache/lucene/document/NearestNeighbor.Cell#Cell(int,int,byte[],byte[],double).mjava","sourceNew":"    public Cell(IndexTree index, int readerIndex, byte[] minPacked, byte[] maxPacked, double distanceMeters) {\n      this.index = index;\n      this.readerIndex = readerIndex;\n      this.minPacked = minPacked.clone();\n      this.maxPacked = maxPacked.clone();\n      this.distanceMeters = distanceMeters;\n    }\n\n","sourceOld":"    public Cell(int readerIndex, int nodeID, byte[] minPacked, byte[] maxPacked, double distanceMeters) {\n      this.readerIndex = readerIndex;\n      this.nodeID = nodeID;\n      this.minPacked = minPacked.clone();\n      this.maxPacked = maxPacked.clone();\n      this.distanceMeters = distanceMeters;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9856095f7afb5a607bf5e65077615ed91273508c","date":1481837697,"type":1,"author":"Kevin Risden","isMerge":true,"pathNew":"lucene/sandbox/src/java/org/apache/lucene/document/NearestNeighbor.Cell#Cell(IndexTree,int,byte[],byte[],double).mjava","pathOld":"lucene/sandbox/src/java/org/apache/lucene/document/NearestNeighbor.Cell#Cell(int,int,byte[],byte[],double).mjava","sourceNew":"    public Cell(IndexTree index, int readerIndex, byte[] minPacked, byte[] maxPacked, double distanceMeters) {\n      this.index = index;\n      this.readerIndex = readerIndex;\n      this.minPacked = minPacked.clone();\n      this.maxPacked = maxPacked.clone();\n      this.distanceMeters = distanceMeters;\n    }\n\n","sourceOld":"    public Cell(int readerIndex, int nodeID, byte[] minPacked, byte[] maxPacked, double distanceMeters) {\n      this.readerIndex = readerIndex;\n      this.nodeID = nodeID;\n      this.minPacked = minPacked.clone();\n      this.maxPacked = maxPacked.clone();\n      this.distanceMeters = distanceMeters;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"88b0212386fe531136816706dc37dc49b9dbf7dc","date":1532560226,"type":5,"author":"Nicholas Knize","isMerge":false,"pathNew":"lucene/sandbox/src/java/org/apache/lucene/search/NearestNeighbor.Cell#Cell(IndexTree,int,byte[],byte[],double).mjava","pathOld":"lucene/sandbox/src/java/org/apache/lucene/document/NearestNeighbor.Cell#Cell(IndexTree,int,byte[],byte[],double).mjava","sourceNew":"    public Cell(IndexTree index, int readerIndex, byte[] minPacked, byte[] maxPacked, double distanceMeters) {\n      this.index = index;\n      this.readerIndex = readerIndex;\n      this.minPacked = minPacked.clone();\n      this.maxPacked = maxPacked.clone();\n      this.distanceMeters = distanceMeters;\n    }\n\n","sourceOld":"    public Cell(IndexTree index, int readerIndex, byte[] minPacked, byte[] maxPacked, double distanceMeters) {\n      this.index = index;\n      this.readerIndex = readerIndex;\n      this.minPacked = minPacked.clone();\n      this.maxPacked = maxPacked.clone();\n      this.distanceMeters = distanceMeters;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"9fc0d60683b47b5d922124c31f57c8b34734f9e6":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"88b0212386fe531136816706dc37dc49b9dbf7dc":["9fc0d60683b47b5d922124c31f57c8b34734f9e6"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"9856095f7afb5a607bf5e65077615ed91273508c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","9fc0d60683b47b5d922124c31f57c8b34734f9e6"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["88b0212386fe531136816706dc37dc49b9dbf7dc"]},"commit2Childs":{"9fc0d60683b47b5d922124c31f57c8b34734f9e6":["88b0212386fe531136816706dc37dc49b9dbf7dc","9856095f7afb5a607bf5e65077615ed91273508c"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9fc0d60683b47b5d922124c31f57c8b34734f9e6","9856095f7afb5a607bf5e65077615ed91273508c"],"88b0212386fe531136816706dc37dc49b9dbf7dc":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"9856095f7afb5a607bf5e65077615ed91273508c":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["9856095f7afb5a607bf5e65077615ed91273508c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}