{"path":"modules/analysis/common/src/test/org/apache/lucene/analysis/miscellaneous/TestLimitTokenCountAnalyzer#testLimitTokenCountIndexWriter().mjava","commits":[{"id":"c2047784e704fe141e0ff36affac8a7cb6c7bbec","date":1295352100,"type":1,"author":"Shai Erera","isMerge":false,"pathNew":"modules/analysis/common/src/test/org/apache/lucene/analysis/miscellaneous/TestLimitTokenCountAnalyzer#testLimitTokenCountIndexWriter().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexWriter#testUserSpecifiedMaxFieldLength().mjava","sourceNew":"  public void testLimitTokenCountIndexWriter() throws IOException {\n    Directory dir = newDirectory();\n\n    IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(\n        TEST_VERSION_CURRENT, new LimitTokenCountAnalyzer(new MockAnalyzer(), 100000)));\n\n    Document doc = new Document();\n    StringBuilder b = new StringBuilder();\n    for(int i=0;i<10000;i++)\n      b.append(\" a\");\n    b.append(\" x\");\n    doc.add(newField(\"field\", b.toString(), Field.Store.NO, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n    writer.close();\n\n    IndexReader reader = IndexReader.open(dir, true);\n    Term t = new Term(\"field\", \"x\");\n    assertEquals(1, reader.docFreq(t));\n    reader.close();\n    dir.close();\n  }\n\n","sourceOld":"  // LUCENE-1084: test user-specified field length\n  public void testUserSpecifiedMaxFieldLength() throws IOException {\n    Directory dir = newDirectory();\n\n    IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(\n        TEST_VERSION_CURRENT, new MockAnalyzer()).setMaxFieldLength(100000));\n\n    Document doc = new Document();\n    StringBuilder b = new StringBuilder();\n    for(int i=0;i<10000;i++)\n      b.append(\" a\");\n    b.append(\" x\");\n    doc.add(newField(\"field\", b.toString(), Field.Store.NO, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n    writer.close();\n\n    IndexReader reader = IndexReader.open(dir, true);\n    Term t = new Term(\"field\", \"x\");\n    assertEquals(1, reader.docFreq(t));\n    reader.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e79a6d080bdd5b2a8f56342cf571b5476de04180","date":1295638686,"type":1,"author":"Michael Busch","isMerge":true,"pathNew":"modules/analysis/common/src/test/org/apache/lucene/analysis/miscellaneous/TestLimitTokenCountAnalyzer#testLimitTokenCountIndexWriter().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexWriter#testUserSpecifiedMaxFieldLength().mjava","sourceNew":"  public void testLimitTokenCountIndexWriter() throws IOException {\n    Directory dir = newDirectory();\n\n    IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(\n        TEST_VERSION_CURRENT, new LimitTokenCountAnalyzer(new MockAnalyzer(), 100000)));\n\n    Document doc = new Document();\n    StringBuilder b = new StringBuilder();\n    for(int i=0;i<10000;i++)\n      b.append(\" a\");\n    b.append(\" x\");\n    doc.add(newField(\"field\", b.toString(), Field.Store.NO, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n    writer.close();\n\n    IndexReader reader = IndexReader.open(dir, true);\n    Term t = new Term(\"field\", \"x\");\n    assertEquals(1, reader.docFreq(t));\n    reader.close();\n    dir.close();\n  }\n\n","sourceOld":"  // LUCENE-1084: test user-specified field length\n  public void testUserSpecifiedMaxFieldLength() throws IOException {\n    Directory dir = newDirectory();\n\n    IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(\n        TEST_VERSION_CURRENT, new MockAnalyzer()).setMaxFieldLength(100000));\n\n    Document doc = new Document();\n    StringBuilder b = new StringBuilder();\n    for(int i=0;i<10000;i++)\n      b.append(\" a\");\n    b.append(\" x\");\n    doc.add(newField(\"field\", b.toString(), Field.Store.NO, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n    writer.close();\n\n    IndexReader reader = IndexReader.open(dir, true);\n    Term t = new Term(\"field\", \"x\");\n    assertEquals(1, reader.docFreq(t));\n    reader.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"29ef99d61cda9641b6250bf9567329a6e65f901d","date":1297244127,"type":0,"author":"Simon Willnauer","isMerge":true,"pathNew":"modules/analysis/common/src/test/org/apache/lucene/analysis/miscellaneous/TestLimitTokenCountAnalyzer#testLimitTokenCountIndexWriter().mjava","pathOld":"/dev/null","sourceNew":"  public void testLimitTokenCountIndexWriter() throws IOException {\n    Directory dir = newDirectory();\n\n    IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(\n        TEST_VERSION_CURRENT, new LimitTokenCountAnalyzer(new MockAnalyzer(), 100000)));\n\n    Document doc = new Document();\n    StringBuilder b = new StringBuilder();\n    for(int i=0;i<10000;i++)\n      b.append(\" a\");\n    b.append(\" x\");\n    doc.add(newField(\"field\", b.toString(), Field.Store.NO, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n    writer.close();\n\n    IndexReader reader = IndexReader.open(dir, true);\n    Term t = new Term(\"field\", \"x\");\n    assertEquals(1, reader.docFreq(t));\n    reader.close();\n    dir.close();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f2c5f0cb44df114db4228c8f77861714b5cabaea","date":1302542431,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"modules/analysis/common/src/test/org/apache/lucene/analysis/miscellaneous/TestLimitTokenCountAnalyzer#testLimitTokenCountIndexWriter().mjava","pathOld":"modules/analysis/common/src/test/org/apache/lucene/analysis/miscellaneous/TestLimitTokenCountAnalyzer#testLimitTokenCountIndexWriter().mjava","sourceNew":"  public void testLimitTokenCountIndexWriter() throws IOException {\n    Directory dir = newDirectory();\n\n    IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(\n        TEST_VERSION_CURRENT, new LimitTokenCountAnalyzer(new MockAnalyzer(random), 100000)));\n\n    Document doc = new Document();\n    StringBuilder b = new StringBuilder();\n    for(int i=0;i<10000;i++)\n      b.append(\" a\");\n    b.append(\" x\");\n    doc.add(newField(\"field\", b.toString(), Field.Store.NO, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n    writer.close();\n\n    IndexReader reader = IndexReader.open(dir, true);\n    Term t = new Term(\"field\", \"x\");\n    assertEquals(1, reader.docFreq(t));\n    reader.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testLimitTokenCountIndexWriter() throws IOException {\n    Directory dir = newDirectory();\n\n    IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(\n        TEST_VERSION_CURRENT, new LimitTokenCountAnalyzer(new MockAnalyzer(), 100000)));\n\n    Document doc = new Document();\n    StringBuilder b = new StringBuilder();\n    for(int i=0;i<10000;i++)\n      b.append(\" a\");\n    b.append(\" x\");\n    doc.add(newField(\"field\", b.toString(), Field.Store.NO, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n    writer.close();\n\n    IndexReader reader = IndexReader.open(dir, true);\n    Term t = new Term(\"field\", \"x\");\n    assertEquals(1, reader.docFreq(t));\n    reader.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"962d04139994fce5193143ef35615499a9a96d78","date":1302693744,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"modules/analysis/common/src/test/org/apache/lucene/analysis/miscellaneous/TestLimitTokenCountAnalyzer#testLimitTokenCountIndexWriter().mjava","pathOld":"modules/analysis/common/src/test/org/apache/lucene/analysis/miscellaneous/TestLimitTokenCountAnalyzer#testLimitTokenCountIndexWriter().mjava","sourceNew":"  public void testLimitTokenCountIndexWriter() throws IOException {\n    Directory dir = newDirectory();\n\n    IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(\n        TEST_VERSION_CURRENT, new LimitTokenCountAnalyzer(new MockAnalyzer(random), 100000)));\n\n    Document doc = new Document();\n    StringBuilder b = new StringBuilder();\n    for(int i=0;i<10000;i++)\n      b.append(\" a\");\n    b.append(\" x\");\n    doc.add(newField(\"field\", b.toString(), Field.Store.NO, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n    writer.close();\n\n    IndexReader reader = IndexReader.open(dir, true);\n    Term t = new Term(\"field\", \"x\");\n    assertEquals(1, reader.docFreq(t));\n    reader.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testLimitTokenCountIndexWriter() throws IOException {\n    Directory dir = newDirectory();\n\n    IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(\n        TEST_VERSION_CURRENT, new LimitTokenCountAnalyzer(new MockAnalyzer(), 100000)));\n\n    Document doc = new Document();\n    StringBuilder b = new StringBuilder();\n    for(int i=0;i<10000;i++)\n      b.append(\" a\");\n    b.append(\" x\");\n    doc.add(newField(\"field\", b.toString(), Field.Store.NO, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n    writer.close();\n\n    IndexReader reader = IndexReader.open(dir, true);\n    Term t = new Term(\"field\", \"x\");\n    assertEquals(1, reader.docFreq(t));\n    reader.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"135621f3a0670a9394eb563224a3b76cc4dddc0f","date":1304344257,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"modules/analysis/common/src/test/org/apache/lucene/analysis/miscellaneous/TestLimitTokenCountAnalyzer#testLimitTokenCountIndexWriter().mjava","pathOld":"modules/analysis/common/src/test/org/apache/lucene/analysis/miscellaneous/TestLimitTokenCountAnalyzer#testLimitTokenCountIndexWriter().mjava","sourceNew":"  public void testLimitTokenCountIndexWriter() throws IOException {\n    Directory dir = newDirectory();\n\n    IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(\n        TEST_VERSION_CURRENT, new LimitTokenCountAnalyzer(new MockAnalyzer(random), 100000)));\n\n    Document doc = new Document();\n    StringBuilder b = new StringBuilder();\n    for(int i=0;i<10000;i++)\n      b.append(\" a\");\n    b.append(\" x\");\n    doc.add(newField(\"field\", b.toString(), Field.Store.NO, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n    writer.close();\n\n    IndexReader reader = IndexReader.open(dir, true);\n    Term t = new Term(\"field\", \"x\");\n    assertEquals(1, reader.docFreq(t));\n    reader.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testLimitTokenCountIndexWriter() throws IOException {\n    Directory dir = newDirectory();\n\n    IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(\n        TEST_VERSION_CURRENT, new LimitTokenCountAnalyzer(new MockAnalyzer(), 100000)));\n\n    Document doc = new Document();\n    StringBuilder b = new StringBuilder();\n    for(int i=0;i<10000;i++)\n      b.append(\" a\");\n    b.append(\" x\");\n    doc.add(newField(\"field\", b.toString(), Field.Store.NO, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n    writer.close();\n\n    IndexReader reader = IndexReader.open(dir, true);\n    Term t = new Term(\"field\", \"x\");\n    assertEquals(1, reader.docFreq(t));\n    reader.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a3776dccca01c11e7046323cfad46a3b4a471233","date":1306100719,"type":3,"author":"Steven Rowe","isMerge":true,"pathNew":"modules/analysis/common/src/test/org/apache/lucene/analysis/miscellaneous/TestLimitTokenCountAnalyzer#testLimitTokenCountIndexWriter().mjava","pathOld":"modules/analysis/common/src/test/org/apache/lucene/analysis/miscellaneous/TestLimitTokenCountAnalyzer#testLimitTokenCountIndexWriter().mjava","sourceNew":"  public void testLimitTokenCountIndexWriter() throws IOException {\n    Directory dir = newDirectory();\n\n    IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(\n        TEST_VERSION_CURRENT, new LimitTokenCountAnalyzer(new MockAnalyzer(random), 100000)));\n\n    Document doc = new Document();\n    StringBuilder b = new StringBuilder();\n    for(int i=0;i<10000;i++)\n      b.append(\" a\");\n    b.append(\" x\");\n    doc.add(newField(\"field\", b.toString(), Field.Store.NO, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n    writer.close();\n\n    IndexReader reader = IndexReader.open(dir, true);\n    Term t = new Term(\"field\", \"x\");\n    assertEquals(1, reader.docFreq(t));\n    reader.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testLimitTokenCountIndexWriter() throws IOException {\n    Directory dir = newDirectory();\n\n    IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(\n        TEST_VERSION_CURRENT, new LimitTokenCountAnalyzer(new MockAnalyzer(), 100000)));\n\n    Document doc = new Document();\n    StringBuilder b = new StringBuilder();\n    for(int i=0;i<10000;i++)\n      b.append(\" a\");\n    b.append(\" x\");\n    doc.add(newField(\"field\", b.toString(), Field.Store.NO, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n    writer.close();\n\n    IndexReader reader = IndexReader.open(dir, true);\n    Term t = new Term(\"field\", \"x\");\n    assertEquals(1, reader.docFreq(t));\n    reader.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1509f151d7692d84fae414b2b799ac06ba60fcb4","date":1314451621,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"modules/analysis/common/src/test/org/apache/lucene/analysis/miscellaneous/TestLimitTokenCountAnalyzer#testLimitTokenCountIndexWriter().mjava","pathOld":"modules/analysis/common/src/test/org/apache/lucene/analysis/miscellaneous/TestLimitTokenCountAnalyzer#testLimitTokenCountIndexWriter().mjava","sourceNew":"  public void testLimitTokenCountIndexWriter() throws IOException {\n    Directory dir = newDirectory();\n\n    IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(\n        TEST_VERSION_CURRENT, new LimitTokenCountAnalyzer(new MockAnalyzer(random), 100000)));\n\n    Document doc = new Document();\n    StringBuilder b = new StringBuilder();\n    for(int i=0;i<10000;i++)\n      b.append(\" a\");\n    b.append(\" x\");\n    doc.add(newField(\"field\", b.toString(), TextField.TYPE_UNSTORED));\n    writer.addDocument(doc);\n    writer.close();\n\n    IndexReader reader = IndexReader.open(dir, true);\n    Term t = new Term(\"field\", \"x\");\n    assertEquals(1, reader.docFreq(t));\n    reader.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testLimitTokenCountIndexWriter() throws IOException {\n    Directory dir = newDirectory();\n\n    IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(\n        TEST_VERSION_CURRENT, new LimitTokenCountAnalyzer(new MockAnalyzer(random), 100000)));\n\n    Document doc = new Document();\n    StringBuilder b = new StringBuilder();\n    for(int i=0;i<10000;i++)\n      b.append(\" a\");\n    b.append(\" x\");\n    doc.add(newField(\"field\", b.toString(), Field.Store.NO, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n    writer.close();\n\n    IndexReader reader = IndexReader.open(dir, true);\n    Term t = new Term(\"field\", \"x\");\n    assertEquals(1, reader.docFreq(t));\n    reader.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":["04f07771a2a7dd3a395700665ed839c3dae2def2"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"9f2f1c6050eb49fa5cb22fbdf977c76e65ea3caf","date":1323050351,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"modules/analysis/common/src/test/org/apache/lucene/analysis/miscellaneous/TestLimitTokenCountAnalyzer#testLimitTokenCountIndexWriter().mjava","pathOld":"modules/analysis/common/src/test/org/apache/lucene/analysis/miscellaneous/TestLimitTokenCountAnalyzer#testLimitTokenCountIndexWriter().mjava","sourceNew":"  public void testLimitTokenCountIndexWriter() throws IOException {\n    Directory dir = newDirectory();\n\n    IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(\n        TEST_VERSION_CURRENT, new LimitTokenCountAnalyzer(new MockAnalyzer(random), 100000)));\n\n    Document doc = new Document();\n    StringBuilder b = new StringBuilder();\n    for(int i=0;i<10000;i++)\n      b.append(\" a\");\n    b.append(\" x\");\n    doc.add(newField(\"field\", b.toString(), TextField.TYPE_UNSTORED));\n    writer.addDocument(doc);\n    writer.close();\n\n    IndexReader reader = IndexReader.open(dir);\n    Term t = new Term(\"field\", \"x\");\n    assertEquals(1, reader.docFreq(t));\n    reader.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testLimitTokenCountIndexWriter() throws IOException {\n    Directory dir = newDirectory();\n\n    IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(\n        TEST_VERSION_CURRENT, new LimitTokenCountAnalyzer(new MockAnalyzer(random), 100000)));\n\n    Document doc = new Document();\n    StringBuilder b = new StringBuilder();\n    for(int i=0;i<10000;i++)\n      b.append(\" a\");\n    b.append(\" x\");\n    doc.add(newField(\"field\", b.toString(), TextField.TYPE_UNSTORED));\n    writer.addDocument(doc);\n    writer.close();\n\n    IndexReader reader = IndexReader.open(dir, true);\n    Term t = new Term(\"field\", \"x\");\n    assertEquals(1, reader.docFreq(t));\n    reader.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"3615ce4a1f785ae1b779244de52c6a7d99227e60","date":1323422019,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"modules/analysis/common/src/test/org/apache/lucene/analysis/miscellaneous/TestLimitTokenCountAnalyzer#testLimitTokenCountIndexWriter().mjava","pathOld":"modules/analysis/common/src/test/org/apache/lucene/analysis/miscellaneous/TestLimitTokenCountAnalyzer#testLimitTokenCountIndexWriter().mjava","sourceNew":"  public void testLimitTokenCountIndexWriter() throws IOException {\n    Directory dir = newDirectory();\n\n    IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(\n        TEST_VERSION_CURRENT, new LimitTokenCountAnalyzer(new MockAnalyzer(random), 100000)));\n\n    Document doc = new Document();\n    StringBuilder b = new StringBuilder();\n    for(int i=0;i<10000;i++)\n      b.append(\" a\");\n    b.append(\" x\");\n    doc.add(newField(\"field\", b.toString(), TextField.TYPE_UNSTORED));\n    writer.addDocument(doc);\n    writer.close();\n\n    IndexReader reader = IndexReader.open(dir);\n    Term t = new Term(\"field\", \"x\");\n    assertEquals(1, reader.docFreq(t));\n    reader.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testLimitTokenCountIndexWriter() throws IOException {\n    Directory dir = newDirectory();\n\n    IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(\n        TEST_VERSION_CURRENT, new LimitTokenCountAnalyzer(new MockAnalyzer(random), 100000)));\n\n    Document doc = new Document();\n    StringBuilder b = new StringBuilder();\n    for(int i=0;i<10000;i++)\n      b.append(\" a\");\n    b.append(\" x\");\n    doc.add(newField(\"field\", b.toString(), TextField.TYPE_UNSTORED));\n    writer.addDocument(doc);\n    writer.close();\n\n    IndexReader reader = IndexReader.open(dir, true);\n    Term t = new Term(\"field\", \"x\");\n    assertEquals(1, reader.docFreq(t));\n    reader.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"ba5bc70a1fc1e0abc1eb4171af0d6f2532711c00","date":1323437438,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"modules/analysis/common/src/test/org/apache/lucene/analysis/miscellaneous/TestLimitTokenCountAnalyzer#testLimitTokenCountIndexWriter().mjava","pathOld":"modules/analysis/common/src/test/org/apache/lucene/analysis/miscellaneous/TestLimitTokenCountAnalyzer#testLimitTokenCountIndexWriter().mjava","sourceNew":"  public void testLimitTokenCountIndexWriter() throws IOException {\n    Directory dir = newDirectory();\n\n    IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(\n        TEST_VERSION_CURRENT, new LimitTokenCountAnalyzer(new MockAnalyzer(random), 100000)));\n\n    Document doc = new Document();\n    StringBuilder b = new StringBuilder();\n    for(int i=0;i<10000;i++)\n      b.append(\" a\");\n    b.append(\" x\");\n    doc.add(newField(\"field\", b.toString(), TextField.TYPE_UNSTORED));\n    writer.addDocument(doc);\n    writer.close();\n\n    IndexReader reader = IndexReader.open(dir);\n    Term t = new Term(\"field\", \"x\");\n    assertEquals(1, reader.docFreq(t));\n    reader.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testLimitTokenCountIndexWriter() throws IOException {\n    Directory dir = newDirectory();\n\n    IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(\n        TEST_VERSION_CURRENT, new LimitTokenCountAnalyzer(new MockAnalyzer(random), 100000)));\n\n    Document doc = new Document();\n    StringBuilder b = new StringBuilder();\n    for(int i=0;i<10000;i++)\n      b.append(\" a\");\n    b.append(\" x\");\n    doc.add(newField(\"field\", b.toString(), TextField.TYPE_UNSTORED));\n    writer.addDocument(doc);\n    writer.close();\n\n    IndexReader reader = IndexReader.open(dir, true);\n    Term t = new Term(\"field\", \"x\");\n    assertEquals(1, reader.docFreq(t));\n    reader.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"629c38c4ae4e303d0617e05fbfe508140b32f0a3","date":1334500904,"type":3,"author":"Dawid Weiss","isMerge":false,"pathNew":"modules/analysis/common/src/test/org/apache/lucene/analysis/miscellaneous/TestLimitTokenCountAnalyzer#testLimitTokenCountIndexWriter().mjava","pathOld":"modules/analysis/common/src/test/org/apache/lucene/analysis/miscellaneous/TestLimitTokenCountAnalyzer#testLimitTokenCountIndexWriter().mjava","sourceNew":"  public void testLimitTokenCountIndexWriter() throws IOException {\n    Directory dir = newDirectory();\n\n    IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(\n        TEST_VERSION_CURRENT, new LimitTokenCountAnalyzer(new MockAnalyzer(random()), 100000)));\n\n    Document doc = new Document();\n    StringBuilder b = new StringBuilder();\n    for(int i=0;i<10000;i++)\n      b.append(\" a\");\n    b.append(\" x\");\n    doc.add(newField(\"field\", b.toString(), TextField.TYPE_UNSTORED));\n    writer.addDocument(doc);\n    writer.close();\n\n    IndexReader reader = IndexReader.open(dir);\n    Term t = new Term(\"field\", \"x\");\n    assertEquals(1, reader.docFreq(t));\n    reader.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testLimitTokenCountIndexWriter() throws IOException {\n    Directory dir = newDirectory();\n\n    IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(\n        TEST_VERSION_CURRENT, new LimitTokenCountAnalyzer(new MockAnalyzer(random), 100000)));\n\n    Document doc = new Document();\n    StringBuilder b = new StringBuilder();\n    for(int i=0;i<10000;i++)\n      b.append(\" a\");\n    b.append(\" x\");\n    doc.add(newField(\"field\", b.toString(), TextField.TYPE_UNSTORED));\n    writer.addDocument(doc);\n    writer.close();\n\n    IndexReader reader = IndexReader.open(dir);\n    Term t = new Term(\"field\", \"x\");\n    assertEquals(1, reader.docFreq(t));\n    reader.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/miscellaneous/TestLimitTokenCountAnalyzer#testLimitTokenCountIndexWriter().mjava","pathOld":"modules/analysis/common/src/test/org/apache/lucene/analysis/miscellaneous/TestLimitTokenCountAnalyzer#testLimitTokenCountIndexWriter().mjava","sourceNew":"  public void testLimitTokenCountIndexWriter() throws IOException {\n    Directory dir = newDirectory();\n\n    IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(\n        TEST_VERSION_CURRENT, new LimitTokenCountAnalyzer(new MockAnalyzer(random()), 100000)));\n\n    Document doc = new Document();\n    StringBuilder b = new StringBuilder();\n    for(int i=0;i<10000;i++)\n      b.append(\" a\");\n    b.append(\" x\");\n    doc.add(newField(\"field\", b.toString(), TextField.TYPE_UNSTORED));\n    writer.addDocument(doc);\n    writer.close();\n\n    IndexReader reader = IndexReader.open(dir);\n    Term t = new Term(\"field\", \"x\");\n    assertEquals(1, reader.docFreq(t));\n    reader.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testLimitTokenCountIndexWriter() throws IOException {\n    Directory dir = newDirectory();\n\n    IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(\n        TEST_VERSION_CURRENT, new LimitTokenCountAnalyzer(new MockAnalyzer(random()), 100000)));\n\n    Document doc = new Document();\n    StringBuilder b = new StringBuilder();\n    for(int i=0;i<10000;i++)\n      b.append(\" a\");\n    b.append(\" x\");\n    doc.add(newField(\"field\", b.toString(), TextField.TYPE_UNSTORED));\n    writer.addDocument(doc);\n    writer.close();\n\n    IndexReader reader = IndexReader.open(dir);\n    Term t = new Term(\"field\", \"x\");\n    assertEquals(1, reader.docFreq(t));\n    reader.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"ba5bc70a1fc1e0abc1eb4171af0d6f2532711c00":["1509f151d7692d84fae414b2b799ac06ba60fcb4","3615ce4a1f785ae1b779244de52c6a7d99227e60"],"135621f3a0670a9394eb563224a3b76cc4dddc0f":["29ef99d61cda9641b6250bf9567329a6e65f901d","f2c5f0cb44df114db4228c8f77861714b5cabaea"],"962d04139994fce5193143ef35615499a9a96d78":["e79a6d080bdd5b2a8f56342cf571b5476de04180","f2c5f0cb44df114db4228c8f77861714b5cabaea"],"e79a6d080bdd5b2a8f56342cf571b5476de04180":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","c2047784e704fe141e0ff36affac8a7cb6c7bbec"],"9f2f1c6050eb49fa5cb22fbdf977c76e65ea3caf":["1509f151d7692d84fae414b2b799ac06ba60fcb4"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["629c38c4ae4e303d0617e05fbfe508140b32f0a3"],"c2047784e704fe141e0ff36affac8a7cb6c7bbec":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"f2c5f0cb44df114db4228c8f77861714b5cabaea":["c2047784e704fe141e0ff36affac8a7cb6c7bbec"],"a3776dccca01c11e7046323cfad46a3b4a471233":["c2047784e704fe141e0ff36affac8a7cb6c7bbec","f2c5f0cb44df114db4228c8f77861714b5cabaea"],"29ef99d61cda9641b6250bf9567329a6e65f901d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","c2047784e704fe141e0ff36affac8a7cb6c7bbec"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3615ce4a1f785ae1b779244de52c6a7d99227e60":["1509f151d7692d84fae414b2b799ac06ba60fcb4","9f2f1c6050eb49fa5cb22fbdf977c76e65ea3caf"],"629c38c4ae4e303d0617e05fbfe508140b32f0a3":["3615ce4a1f785ae1b779244de52c6a7d99227e60"],"1509f151d7692d84fae414b2b799ac06ba60fcb4":["f2c5f0cb44df114db4228c8f77861714b5cabaea"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b89678825b68eccaf09e6ab71675fc0b0af1e099"]},"commit2Childs":{"ba5bc70a1fc1e0abc1eb4171af0d6f2532711c00":[],"135621f3a0670a9394eb563224a3b76cc4dddc0f":[],"962d04139994fce5193143ef35615499a9a96d78":[],"e79a6d080bdd5b2a8f56342cf571b5476de04180":["962d04139994fce5193143ef35615499a9a96d78"],"9f2f1c6050eb49fa5cb22fbdf977c76e65ea3caf":["3615ce4a1f785ae1b779244de52c6a7d99227e60"],"c2047784e704fe141e0ff36affac8a7cb6c7bbec":["e79a6d080bdd5b2a8f56342cf571b5476de04180","f2c5f0cb44df114db4228c8f77861714b5cabaea","a3776dccca01c11e7046323cfad46a3b4a471233","29ef99d61cda9641b6250bf9567329a6e65f901d"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"f2c5f0cb44df114db4228c8f77861714b5cabaea":["135621f3a0670a9394eb563224a3b76cc4dddc0f","962d04139994fce5193143ef35615499a9a96d78","a3776dccca01c11e7046323cfad46a3b4a471233","1509f151d7692d84fae414b2b799ac06ba60fcb4"],"29ef99d61cda9641b6250bf9567329a6e65f901d":["135621f3a0670a9394eb563224a3b76cc4dddc0f"],"a3776dccca01c11e7046323cfad46a3b4a471233":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["e79a6d080bdd5b2a8f56342cf571b5476de04180","c2047784e704fe141e0ff36affac8a7cb6c7bbec","29ef99d61cda9641b6250bf9567329a6e65f901d"],"3615ce4a1f785ae1b779244de52c6a7d99227e60":["ba5bc70a1fc1e0abc1eb4171af0d6f2532711c00","629c38c4ae4e303d0617e05fbfe508140b32f0a3"],"1509f151d7692d84fae414b2b799ac06ba60fcb4":["ba5bc70a1fc1e0abc1eb4171af0d6f2532711c00","9f2f1c6050eb49fa5cb22fbdf977c76e65ea3caf","3615ce4a1f785ae1b779244de52c6a7d99227e60"],"629c38c4ae4e303d0617e05fbfe508140b32f0a3":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["ba5bc70a1fc1e0abc1eb4171af0d6f2532711c00","135621f3a0670a9394eb563224a3b76cc4dddc0f","962d04139994fce5193143ef35615499a9a96d78","a3776dccca01c11e7046323cfad46a3b4a471233","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}