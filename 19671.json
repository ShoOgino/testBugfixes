{"path":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriter#testDontInvokeAnalyzerForUnAnalyzedFields().mjava","commits":[{"id":"0c59b968cd5180c64260dcc70c3f53320d2f848a","date":1342796758,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriter#testDontInvokeAnalyzerForUnAnalyzedFields().mjava","pathOld":"/dev/null","sourceNew":"  public void testDontInvokeAnalyzerForUnAnalyzedFields() throws Exception {\n    Analyzer analyzer = new Analyzer() {\n      @Override\n      protected TokenStreamComponents createComponents(String fieldName, Reader reader) {\n        throw new IllegalStateException(\"don't invoke me!\");\n      }\n\n      @Override\n      public int getPositionIncrementGap(String fieldName) {\n        throw new IllegalStateException(\"don't invoke me!\");\n      }\n\n      @Override\n      public int getOffsetGap(String fieldName) {\n        throw new IllegalStateException(\"don't invoke me!\");\n      }\n    };\n    Directory dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig( \n        TEST_VERSION_CURRENT, analyzer));\n    Document doc = new Document();\n    FieldType customType = new FieldType(StringField.TYPE_NOT_STORED);\n    customType.setStoreTermVectors(true);\n    customType.setStoreTermVectorPositions(true);\n    customType.setStoreTermVectorOffsets(true);\n    Field f = newField(\"field\", \"abcd\", customType);\n    doc.add(f);\n    doc.add(f);\n    Field f2 = newField(\"field\", \"\", customType);\n    doc.add(f2);\n    doc.add(f);\n    w.addDocument(doc);\n    w.close();\n    dir.close();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4b51f65902cc2d20ddeb7a5b949aaddf990f31a7","date":1343059585,"type":0,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriter#testDontInvokeAnalyzerForUnAnalyzedFields().mjava","pathOld":"/dev/null","sourceNew":"  public void testDontInvokeAnalyzerForUnAnalyzedFields() throws Exception {\n    Analyzer analyzer = new Analyzer() {\n      @Override\n      protected TokenStreamComponents createComponents(String fieldName, Reader reader) {\n        throw new IllegalStateException(\"don't invoke me!\");\n      }\n\n      @Override\n      public int getPositionIncrementGap(String fieldName) {\n        throw new IllegalStateException(\"don't invoke me!\");\n      }\n\n      @Override\n      public int getOffsetGap(String fieldName) {\n        throw new IllegalStateException(\"don't invoke me!\");\n      }\n    };\n    Directory dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig( \n        TEST_VERSION_CURRENT, analyzer));\n    Document doc = new Document();\n    FieldType customType = new FieldType(StringField.TYPE_NOT_STORED);\n    customType.setStoreTermVectors(true);\n    customType.setStoreTermVectorPositions(true);\n    customType.setStoreTermVectorOffsets(true);\n    Field f = newField(\"field\", \"abcd\", customType);\n    doc.add(f);\n    doc.add(f);\n    Field f2 = newField(\"field\", \"\", customType);\n    doc.add(f2);\n    doc.add(f);\n    w.addDocument(doc);\n    w.close();\n    dir.close();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"aba371508186796cc6151d8223a5b4e16d02e26e","date":1343474871,"type":0,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriter#testDontInvokeAnalyzerForUnAnalyzedFields().mjava","pathOld":"/dev/null","sourceNew":"  public void testDontInvokeAnalyzerForUnAnalyzedFields() throws Exception {\n    Analyzer analyzer = new Analyzer() {\n      @Override\n      protected TokenStreamComponents createComponents(String fieldName, Reader reader) {\n        throw new IllegalStateException(\"don't invoke me!\");\n      }\n\n      @Override\n      public int getPositionIncrementGap(String fieldName) {\n        throw new IllegalStateException(\"don't invoke me!\");\n      }\n\n      @Override\n      public int getOffsetGap(String fieldName) {\n        throw new IllegalStateException(\"don't invoke me!\");\n      }\n    };\n    Directory dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig( \n        TEST_VERSION_CURRENT, analyzer));\n    Document doc = new Document();\n    FieldType customType = new FieldType(StringField.TYPE_NOT_STORED);\n    customType.setStoreTermVectors(true);\n    customType.setStoreTermVectorPositions(true);\n    customType.setStoreTermVectorOffsets(true);\n    Field f = newField(\"field\", \"abcd\", customType);\n    doc.add(f);\n    doc.add(f);\n    Field f2 = newField(\"field\", \"\", customType);\n    doc.add(f2);\n    doc.add(f);\n    w.addDocument(doc);\n    w.close();\n    dir.close();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ae889fd5c8a69f6b5d130d3c895bfa5b04d07338","date":1389274049,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriter#testDontInvokeAnalyzerForUnAnalyzedFields().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriter#testDontInvokeAnalyzerForUnAnalyzedFields().mjava","sourceNew":"  public void testDontInvokeAnalyzerForUnAnalyzedFields() throws Exception {\n    Analyzer analyzer = new Analyzer() {\n      @Override\n      protected TokenStreamComponents createComponents(String fieldName) {\n        throw new IllegalStateException(\"don't invoke me!\");\n      }\n\n      @Override\n      public int getPositionIncrementGap(String fieldName) {\n        throw new IllegalStateException(\"don't invoke me!\");\n      }\n\n      @Override\n      public int getOffsetGap(String fieldName) {\n        throw new IllegalStateException(\"don't invoke me!\");\n      }\n    };\n    Directory dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig( \n        TEST_VERSION_CURRENT, analyzer));\n    Document doc = new Document();\n    FieldType customType = new FieldType(StringField.TYPE_NOT_STORED);\n    customType.setStoreTermVectors(true);\n    customType.setStoreTermVectorPositions(true);\n    customType.setStoreTermVectorOffsets(true);\n    Field f = newField(\"field\", \"abcd\", customType);\n    doc.add(f);\n    doc.add(f);\n    Field f2 = newField(\"field\", \"\", customType);\n    doc.add(f2);\n    doc.add(f);\n    w.addDocument(doc);\n    w.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testDontInvokeAnalyzerForUnAnalyzedFields() throws Exception {\n    Analyzer analyzer = new Analyzer() {\n      @Override\n      protected TokenStreamComponents createComponents(String fieldName, Reader reader) {\n        throw new IllegalStateException(\"don't invoke me!\");\n      }\n\n      @Override\n      public int getPositionIncrementGap(String fieldName) {\n        throw new IllegalStateException(\"don't invoke me!\");\n      }\n\n      @Override\n      public int getOffsetGap(String fieldName) {\n        throw new IllegalStateException(\"don't invoke me!\");\n      }\n    };\n    Directory dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig( \n        TEST_VERSION_CURRENT, analyzer));\n    Document doc = new Document();\n    FieldType customType = new FieldType(StringField.TYPE_NOT_STORED);\n    customType.setStoreTermVectors(true);\n    customType.setStoreTermVectorPositions(true);\n    customType.setStoreTermVectorOffsets(true);\n    Field f = newField(\"field\", \"abcd\", customType);\n    doc.add(f);\n    doc.add(f);\n    Field f2 = newField(\"field\", \"\", customType);\n    doc.add(f2);\n    doc.add(f);\n    w.addDocument(doc);\n    w.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ae14298f4eec6d5faee6a149f88ba57d14a6f21a","date":1396971290,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriter#testDontInvokeAnalyzerForUnAnalyzedFields().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriter#testDontInvokeAnalyzerForUnAnalyzedFields().mjava","sourceNew":"  public void testDontInvokeAnalyzerForUnAnalyzedFields() throws Exception {\n    Analyzer analyzer = new Analyzer() {\n      @Override\n      protected TokenStreamComponents createComponents(String fieldName) {\n        throw new IllegalStateException(\"don't invoke me!\");\n      }\n\n      @Override\n      public int getPositionIncrementGap(String fieldName) {\n        throw new IllegalStateException(\"don't invoke me!\");\n      }\n\n      @Override\n      public int getOffsetGap(String fieldName) {\n        throw new IllegalStateException(\"don't invoke me!\");\n      }\n    };\n    Directory dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig( \n        TEST_VERSION_CURRENT, analyzer));\n    Document doc = new Document();\n    FieldType customType = new FieldType(StringField.TYPE_NOT_STORED);\n    customType.setStoreTermVectors(true);\n    customType.setStoreTermVectorPositions(true);\n    customType.setStoreTermVectorOffsets(true);\n    Field f = newField(\"field\", \"abcd\", customType);\n    doc.add(f);\n    doc.add(f);\n    Field f2 = newField(\"field\", \"\", customType);\n    doc.add(f2);\n    doc.add(f);\n    w.addDocument(doc);\n    w.shutdown();\n    dir.close();\n  }\n\n","sourceOld":"  public void testDontInvokeAnalyzerForUnAnalyzedFields() throws Exception {\n    Analyzer analyzer = new Analyzer() {\n      @Override\n      protected TokenStreamComponents createComponents(String fieldName) {\n        throw new IllegalStateException(\"don't invoke me!\");\n      }\n\n      @Override\n      public int getPositionIncrementGap(String fieldName) {\n        throw new IllegalStateException(\"don't invoke me!\");\n      }\n\n      @Override\n      public int getOffsetGap(String fieldName) {\n        throw new IllegalStateException(\"don't invoke me!\");\n      }\n    };\n    Directory dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig( \n        TEST_VERSION_CURRENT, analyzer));\n    Document doc = new Document();\n    FieldType customType = new FieldType(StringField.TYPE_NOT_STORED);\n    customType.setStoreTermVectors(true);\n    customType.setStoreTermVectorPositions(true);\n    customType.setStoreTermVectorOffsets(true);\n    Field f = newField(\"field\", \"abcd\", customType);\n    doc.add(f);\n    doc.add(f);\n    Field f2 = newField(\"field\", \"\", customType);\n    doc.add(f2);\n    doc.add(f);\n    w.addDocument(doc);\n    w.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"54a6bea0b991120a99ad0e2f72ae853fd5ecae0e","date":1406737224,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriter#testDontInvokeAnalyzerForUnAnalyzedFields().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriter#testDontInvokeAnalyzerForUnAnalyzedFields().mjava","sourceNew":"  public void testDontInvokeAnalyzerForUnAnalyzedFields() throws Exception {\n    Analyzer analyzer = new Analyzer() {\n      @Override\n      protected TokenStreamComponents createComponents(String fieldName) {\n        throw new IllegalStateException(\"don't invoke me!\");\n      }\n\n      @Override\n      public int getPositionIncrementGap(String fieldName) {\n        throw new IllegalStateException(\"don't invoke me!\");\n      }\n\n      @Override\n      public int getOffsetGap(String fieldName) {\n        throw new IllegalStateException(\"don't invoke me!\");\n      }\n    };\n    Directory dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig(analyzer));\n    Document doc = new Document();\n    FieldType customType = new FieldType(StringField.TYPE_NOT_STORED);\n    customType.setStoreTermVectors(true);\n    customType.setStoreTermVectorPositions(true);\n    customType.setStoreTermVectorOffsets(true);\n    Field f = newField(\"field\", \"abcd\", customType);\n    doc.add(f);\n    doc.add(f);\n    Field f2 = newField(\"field\", \"\", customType);\n    doc.add(f2);\n    doc.add(f);\n    w.addDocument(doc);\n    w.shutdown();\n    dir.close();\n  }\n\n","sourceOld":"  public void testDontInvokeAnalyzerForUnAnalyzedFields() throws Exception {\n    Analyzer analyzer = new Analyzer() {\n      @Override\n      protected TokenStreamComponents createComponents(String fieldName) {\n        throw new IllegalStateException(\"don't invoke me!\");\n      }\n\n      @Override\n      public int getPositionIncrementGap(String fieldName) {\n        throw new IllegalStateException(\"don't invoke me!\");\n      }\n\n      @Override\n      public int getOffsetGap(String fieldName) {\n        throw new IllegalStateException(\"don't invoke me!\");\n      }\n    };\n    Directory dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig( \n        TEST_VERSION_CURRENT, analyzer));\n    Document doc = new Document();\n    FieldType customType = new FieldType(StringField.TYPE_NOT_STORED);\n    customType.setStoreTermVectors(true);\n    customType.setStoreTermVectorPositions(true);\n    customType.setStoreTermVectorOffsets(true);\n    Field f = newField(\"field\", \"abcd\", customType);\n    doc.add(f);\n    doc.add(f);\n    Field f2 = newField(\"field\", \"\", customType);\n    doc.add(f2);\n    doc.add(f);\n    w.addDocument(doc);\n    w.shutdown();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d0ef034a4f10871667ae75181537775ddcf8ade4","date":1407610475,"type":3,"author":"Ryan Ernst","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriter#testDontInvokeAnalyzerForUnAnalyzedFields().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriter#testDontInvokeAnalyzerForUnAnalyzedFields().mjava","sourceNew":"  public void testDontInvokeAnalyzerForUnAnalyzedFields() throws Exception {\n    Analyzer analyzer = new Analyzer() {\n      @Override\n      protected TokenStreamComponents createComponents(String fieldName) {\n        throw new IllegalStateException(\"don't invoke me!\");\n      }\n\n      @Override\n      public int getPositionIncrementGap(String fieldName) {\n        throw new IllegalStateException(\"don't invoke me!\");\n      }\n\n      @Override\n      public int getOffsetGap(String fieldName) {\n        throw new IllegalStateException(\"don't invoke me!\");\n      }\n    };\n    Directory dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig(analyzer));\n    Document doc = new Document();\n    FieldType customType = new FieldType(StringField.TYPE_NOT_STORED);\n    customType.setStoreTermVectors(true);\n    customType.setStoreTermVectorPositions(true);\n    customType.setStoreTermVectorOffsets(true);\n    Field f = newField(\"field\", \"abcd\", customType);\n    doc.add(f);\n    doc.add(f);\n    Field f2 = newField(\"field\", \"\", customType);\n    doc.add(f2);\n    doc.add(f);\n    w.addDocument(doc);\n    w.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testDontInvokeAnalyzerForUnAnalyzedFields() throws Exception {\n    Analyzer analyzer = new Analyzer() {\n      @Override\n      protected TokenStreamComponents createComponents(String fieldName) {\n        throw new IllegalStateException(\"don't invoke me!\");\n      }\n\n      @Override\n      public int getPositionIncrementGap(String fieldName) {\n        throw new IllegalStateException(\"don't invoke me!\");\n      }\n\n      @Override\n      public int getOffsetGap(String fieldName) {\n        throw new IllegalStateException(\"don't invoke me!\");\n      }\n    };\n    Directory dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig(analyzer));\n    Document doc = new Document();\n    FieldType customType = new FieldType(StringField.TYPE_NOT_STORED);\n    customType.setStoreTermVectors(true);\n    customType.setStoreTermVectorPositions(true);\n    customType.setStoreTermVectorOffsets(true);\n    Field f = newField(\"field\", \"abcd\", customType);\n    doc.add(f);\n    doc.add(f);\n    Field f2 = newField(\"field\", \"\", customType);\n    doc.add(f2);\n    doc.add(f);\n    w.addDocument(doc);\n    w.shutdown();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"0c59b968cd5180c64260dcc70c3f53320d2f848a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"54a6bea0b991120a99ad0e2f72ae853fd5ecae0e":["ae14298f4eec6d5faee6a149f88ba57d14a6f21a"],"aba371508186796cc6151d8223a5b4e16d02e26e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","0c59b968cd5180c64260dcc70c3f53320d2f848a"],"ae889fd5c8a69f6b5d130d3c895bfa5b04d07338":["0c59b968cd5180c64260dcc70c3f53320d2f848a"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"d0ef034a4f10871667ae75181537775ddcf8ade4":["54a6bea0b991120a99ad0e2f72ae853fd5ecae0e"],"ae14298f4eec6d5faee6a149f88ba57d14a6f21a":["ae889fd5c8a69f6b5d130d3c895bfa5b04d07338"],"4b51f65902cc2d20ddeb7a5b949aaddf990f31a7":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","0c59b968cd5180c64260dcc70c3f53320d2f848a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["d0ef034a4f10871667ae75181537775ddcf8ade4"]},"commit2Childs":{"0c59b968cd5180c64260dcc70c3f53320d2f848a":["aba371508186796cc6151d8223a5b4e16d02e26e","ae889fd5c8a69f6b5d130d3c895bfa5b04d07338","4b51f65902cc2d20ddeb7a5b949aaddf990f31a7"],"54a6bea0b991120a99ad0e2f72ae853fd5ecae0e":["d0ef034a4f10871667ae75181537775ddcf8ade4"],"aba371508186796cc6151d8223a5b4e16d02e26e":[],"ae889fd5c8a69f6b5d130d3c895bfa5b04d07338":["ae14298f4eec6d5faee6a149f88ba57d14a6f21a"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["0c59b968cd5180c64260dcc70c3f53320d2f848a","aba371508186796cc6151d8223a5b4e16d02e26e","4b51f65902cc2d20ddeb7a5b949aaddf990f31a7"],"d0ef034a4f10871667ae75181537775ddcf8ade4":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"ae14298f4eec6d5faee6a149f88ba57d14a6f21a":["54a6bea0b991120a99ad0e2f72ae853fd5ecae0e"],"4b51f65902cc2d20ddeb7a5b949aaddf990f31a7":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["aba371508186796cc6151d8223a5b4e16d02e26e","4b51f65902cc2d20ddeb7a5b949aaddf990f31a7","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}