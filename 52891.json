{"path":"lucene/sandbox/src/java/org/apache/lucene/document/LatLonPoint#checkCompatible(FieldInfo).mjava","commits":[{"id":"94ee361295fb38310ac4d53cb4773d1622423d68","date":1456833885,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/sandbox/src/java/org/apache/lucene/document/LatLonPoint#checkCompatible(FieldInfo).mjava","pathOld":"/dev/null","sourceNew":"  /** helper: checks a fieldinfo and throws exception if its definitely not a LatLonPoint */\n  static void checkCompatible(FieldInfo fieldInfo) {\n    if (fieldInfo.getPointDimensionCount() != TYPE.pointDimensionCount()) {\n      throw new IllegalArgumentException(\"field=\\\"\" + fieldInfo.name + \"\\\" was indexed with numDims=\" + fieldInfo.getPointDimensionCount() + \n                                         \" but this point type has numDims=\" + TYPE.pointDimensionCount() + \n                                         \", is the field really a LatLonPoint?\");\n    }\n    if (fieldInfo.getPointNumBytes() != TYPE.pointNumBytes()) {\n      throw new IllegalArgumentException(\"field=\\\"\" + fieldInfo.name + \"\\\" was indexed with bytesPerDim=\" + fieldInfo.getPointNumBytes() + \n                                         \" but this point type has bytesPerDim=\" + TYPE.pointNumBytes() + \n                                         \", is the field really a LatLonPoint?\");\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"cf1a614098b46c9c22afebd7b898ae4d1d2fc273","date":1457088850,"type":0,"author":"Noble Paul","isMerge":true,"pathNew":"lucene/sandbox/src/java/org/apache/lucene/document/LatLonPoint#checkCompatible(FieldInfo).mjava","pathOld":"/dev/null","sourceNew":"  /** helper: checks a fieldinfo and throws exception if its definitely not a LatLonPoint */\n  static void checkCompatible(FieldInfo fieldInfo) {\n    if (fieldInfo.getPointDimensionCount() != TYPE.pointDimensionCount()) {\n      throw new IllegalArgumentException(\"field=\\\"\" + fieldInfo.name + \"\\\" was indexed with numDims=\" + fieldInfo.getPointDimensionCount() + \n                                         \" but this point type has numDims=\" + TYPE.pointDimensionCount() + \n                                         \", is the field really a LatLonPoint?\");\n    }\n    if (fieldInfo.getPointNumBytes() != TYPE.pointNumBytes()) {\n      throw new IllegalArgumentException(\"field=\\\"\" + fieldInfo.name + \"\\\" was indexed with bytesPerDim=\" + fieldInfo.getPointNumBytes() + \n                                         \" but this point type has bytesPerDim=\" + TYPE.pointNumBytes() + \n                                         \", is the field really a LatLonPoint?\");\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"54f531dff997ea7763360cb59f5ccadc6811b519","date":1457742562,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/sandbox/src/java/org/apache/lucene/document/LatLonPoint#checkCompatible(FieldInfo).mjava","pathOld":"lucene/sandbox/src/java/org/apache/lucene/document/LatLonPoint#checkCompatible(FieldInfo).mjava","sourceNew":"  /** helper: checks a fieldinfo and throws exception if its definitely not a LatLonPoint */\n  static void checkCompatible(FieldInfo fieldInfo) {\n    // point/dv properties could be \"unset\", if you e.g. used only StoredField with this same name in the segment.\n    if (fieldInfo.getPointDimensionCount() != 0 && fieldInfo.getPointDimensionCount() != TYPE.pointDimensionCount()) {\n      throw new IllegalArgumentException(\"field=\\\"\" + fieldInfo.name + \"\\\" was indexed with numDims=\" + fieldInfo.getPointDimensionCount() + \n                                         \" but this point type has numDims=\" + TYPE.pointDimensionCount() + \n                                         \", is the field really a LatLonPoint?\");\n    }\n    if (fieldInfo.getPointNumBytes() != 0 && fieldInfo.getPointNumBytes() != TYPE.pointNumBytes()) {\n      throw new IllegalArgumentException(\"field=\\\"\" + fieldInfo.name + \"\\\" was indexed with bytesPerDim=\" + fieldInfo.getPointNumBytes() + \n                                         \" but this point type has bytesPerDim=\" + TYPE.pointNumBytes() + \n                                         \", is the field really a LatLonPoint?\");\n    }\n    if (fieldInfo.getDocValuesType() != DocValuesType.NONE && fieldInfo.getDocValuesType() != TYPE.docValuesType()) {\n      throw new IllegalArgumentException(\"field=\\\"\" + fieldInfo.name + \"\\\" was indexed with docValuesType=\" + fieldInfo.getDocValuesType() + \n                                         \" but this point type has docValuesType=\" + TYPE.docValuesType() + \n                                         \", is the field really a LatLonPoint?\");\n    }\n  }\n\n","sourceOld":"  /** helper: checks a fieldinfo and throws exception if its definitely not a LatLonPoint */\n  static void checkCompatible(FieldInfo fieldInfo) {\n    if (fieldInfo.getPointDimensionCount() != TYPE.pointDimensionCount()) {\n      throw new IllegalArgumentException(\"field=\\\"\" + fieldInfo.name + \"\\\" was indexed with numDims=\" + fieldInfo.getPointDimensionCount() + \n                                         \" but this point type has numDims=\" + TYPE.pointDimensionCount() + \n                                         \", is the field really a LatLonPoint?\");\n    }\n    if (fieldInfo.getPointNumBytes() != TYPE.pointNumBytes()) {\n      throw new IllegalArgumentException(\"field=\\\"\" + fieldInfo.name + \"\\\" was indexed with bytesPerDim=\" + fieldInfo.getPointNumBytes() + \n                                         \" but this point type has bytesPerDim=\" + TYPE.pointNumBytes() + \n                                         \", is the field really a LatLonPoint?\");\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"575856a9f007b9c35d0113c9e18151b554709ef2","date":1457776622,"type":3,"author":"Mike McCandless","isMerge":true,"pathNew":"lucene/sandbox/src/java/org/apache/lucene/document/LatLonPoint#checkCompatible(FieldInfo).mjava","pathOld":"lucene/sandbox/src/java/org/apache/lucene/document/LatLonPoint#checkCompatible(FieldInfo).mjava","sourceNew":"  /** helper: checks a fieldinfo and throws exception if its definitely not a LatLonPoint */\n  static void checkCompatible(FieldInfo fieldInfo) {\n    // point/dv properties could be \"unset\", if you e.g. used only StoredField with this same name in the segment.\n    if (fieldInfo.getPointDimensionCount() != 0 && fieldInfo.getPointDimensionCount() != TYPE.pointDimensionCount()) {\n      throw new IllegalArgumentException(\"field=\\\"\" + fieldInfo.name + \"\\\" was indexed with numDims=\" + fieldInfo.getPointDimensionCount() + \n                                         \" but this point type has numDims=\" + TYPE.pointDimensionCount() + \n                                         \", is the field really a LatLonPoint?\");\n    }\n    if (fieldInfo.getPointNumBytes() != 0 && fieldInfo.getPointNumBytes() != TYPE.pointNumBytes()) {\n      throw new IllegalArgumentException(\"field=\\\"\" + fieldInfo.name + \"\\\" was indexed with bytesPerDim=\" + fieldInfo.getPointNumBytes() + \n                                         \" but this point type has bytesPerDim=\" + TYPE.pointNumBytes() + \n                                         \", is the field really a LatLonPoint?\");\n    }\n    if (fieldInfo.getDocValuesType() != DocValuesType.NONE && fieldInfo.getDocValuesType() != TYPE.docValuesType()) {\n      throw new IllegalArgumentException(\"field=\\\"\" + fieldInfo.name + \"\\\" was indexed with docValuesType=\" + fieldInfo.getDocValuesType() + \n                                         \" but this point type has docValuesType=\" + TYPE.docValuesType() + \n                                         \", is the field really a LatLonPoint?\");\n    }\n  }\n\n","sourceOld":"  /** helper: checks a fieldinfo and throws exception if its definitely not a LatLonPoint */\n  static void checkCompatible(FieldInfo fieldInfo) {\n    if (fieldInfo.getPointDimensionCount() != TYPE.pointDimensionCount()) {\n      throw new IllegalArgumentException(\"field=\\\"\" + fieldInfo.name + \"\\\" was indexed with numDims=\" + fieldInfo.getPointDimensionCount() + \n                                         \" but this point type has numDims=\" + TYPE.pointDimensionCount() + \n                                         \", is the field really a LatLonPoint?\");\n    }\n    if (fieldInfo.getPointNumBytes() != TYPE.pointNumBytes()) {\n      throw new IllegalArgumentException(\"field=\\\"\" + fieldInfo.name + \"\\\" was indexed with bytesPerDim=\" + fieldInfo.getPointNumBytes() + \n                                         \" but this point type has bytesPerDim=\" + TYPE.pointNumBytes() + \n                                         \", is the field really a LatLonPoint?\");\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"cc75470f235495b4ac71f43bba9b503023f7f2d0","date":1461532530,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/sandbox/src/java/org/apache/lucene/document/LatLonPoint#checkCompatible(FieldInfo).mjava","pathOld":"lucene/sandbox/src/java/org/apache/lucene/document/LatLonPoint#checkCompatible(FieldInfo).mjava","sourceNew":"  /** helper: checks a fieldinfo and throws exception if its definitely not a LatLonPoint */\n  static void checkCompatible(FieldInfo fieldInfo) {\n    // point/dv properties could be \"unset\", if you e.g. used only StoredField with this same name in the segment.\n    if (fieldInfo.getPointDimensionCount() != 0 && fieldInfo.getPointDimensionCount() != TYPE.pointDimensionCount()) {\n      throw new IllegalArgumentException(\"field=\\\"\" + fieldInfo.name + \"\\\" was indexed with numDims=\" + fieldInfo.getPointDimensionCount() + \n                                         \" but this point type has numDims=\" + TYPE.pointDimensionCount() + \n                                         \", is the field really a LatLonPoint?\");\n    }\n    if (fieldInfo.getPointNumBytes() != 0 && fieldInfo.getPointNumBytes() != TYPE.pointNumBytes()) {\n      throw new IllegalArgumentException(\"field=\\\"\" + fieldInfo.name + \"\\\" was indexed with bytesPerDim=\" + fieldInfo.getPointNumBytes() + \n                                         \" but this point type has bytesPerDim=\" + TYPE.pointNumBytes() + \n                                         \", is the field really a LatLonPoint?\");\n    }\n  }\n\n","sourceOld":"  /** helper: checks a fieldinfo and throws exception if its definitely not a LatLonPoint */\n  static void checkCompatible(FieldInfo fieldInfo) {\n    // point/dv properties could be \"unset\", if you e.g. used only StoredField with this same name in the segment.\n    if (fieldInfo.getPointDimensionCount() != 0 && fieldInfo.getPointDimensionCount() != TYPE.pointDimensionCount()) {\n      throw new IllegalArgumentException(\"field=\\\"\" + fieldInfo.name + \"\\\" was indexed with numDims=\" + fieldInfo.getPointDimensionCount() + \n                                         \" but this point type has numDims=\" + TYPE.pointDimensionCount() + \n                                         \", is the field really a LatLonPoint?\");\n    }\n    if (fieldInfo.getPointNumBytes() != 0 && fieldInfo.getPointNumBytes() != TYPE.pointNumBytes()) {\n      throw new IllegalArgumentException(\"field=\\\"\" + fieldInfo.name + \"\\\" was indexed with bytesPerDim=\" + fieldInfo.getPointNumBytes() + \n                                         \" but this point type has bytesPerDim=\" + TYPE.pointNumBytes() + \n                                         \", is the field really a LatLonPoint?\");\n    }\n    if (fieldInfo.getDocValuesType() != DocValuesType.NONE && fieldInfo.getDocValuesType() != TYPE.docValuesType()) {\n      throw new IllegalArgumentException(\"field=\\\"\" + fieldInfo.name + \"\\\" was indexed with docValuesType=\" + fieldInfo.getDocValuesType() + \n                                         \" but this point type has docValuesType=\" + TYPE.docValuesType() + \n                                         \", is the field really a LatLonPoint?\");\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f7f901826e47f75f810d7aae24b0455d21ea1fe2","date":1461678892,"type":3,"author":"Noble Paul","isMerge":true,"pathNew":"lucene/sandbox/src/java/org/apache/lucene/document/LatLonPoint#checkCompatible(FieldInfo).mjava","pathOld":"lucene/sandbox/src/java/org/apache/lucene/document/LatLonPoint#checkCompatible(FieldInfo).mjava","sourceNew":"  /** helper: checks a fieldinfo and throws exception if its definitely not a LatLonPoint */\n  static void checkCompatible(FieldInfo fieldInfo) {\n    // point/dv properties could be \"unset\", if you e.g. used only StoredField with this same name in the segment.\n    if (fieldInfo.getPointDimensionCount() != 0 && fieldInfo.getPointDimensionCount() != TYPE.pointDimensionCount()) {\n      throw new IllegalArgumentException(\"field=\\\"\" + fieldInfo.name + \"\\\" was indexed with numDims=\" + fieldInfo.getPointDimensionCount() + \n                                         \" but this point type has numDims=\" + TYPE.pointDimensionCount() + \n                                         \", is the field really a LatLonPoint?\");\n    }\n    if (fieldInfo.getPointNumBytes() != 0 && fieldInfo.getPointNumBytes() != TYPE.pointNumBytes()) {\n      throw new IllegalArgumentException(\"field=\\\"\" + fieldInfo.name + \"\\\" was indexed with bytesPerDim=\" + fieldInfo.getPointNumBytes() + \n                                         \" but this point type has bytesPerDim=\" + TYPE.pointNumBytes() + \n                                         \", is the field really a LatLonPoint?\");\n    }\n  }\n\n","sourceOld":"  /** helper: checks a fieldinfo and throws exception if its definitely not a LatLonPoint */\n  static void checkCompatible(FieldInfo fieldInfo) {\n    // point/dv properties could be \"unset\", if you e.g. used only StoredField with this same name in the segment.\n    if (fieldInfo.getPointDimensionCount() != 0 && fieldInfo.getPointDimensionCount() != TYPE.pointDimensionCount()) {\n      throw new IllegalArgumentException(\"field=\\\"\" + fieldInfo.name + \"\\\" was indexed with numDims=\" + fieldInfo.getPointDimensionCount() + \n                                         \" but this point type has numDims=\" + TYPE.pointDimensionCount() + \n                                         \", is the field really a LatLonPoint?\");\n    }\n    if (fieldInfo.getPointNumBytes() != 0 && fieldInfo.getPointNumBytes() != TYPE.pointNumBytes()) {\n      throw new IllegalArgumentException(\"field=\\\"\" + fieldInfo.name + \"\\\" was indexed with bytesPerDim=\" + fieldInfo.getPointNumBytes() + \n                                         \" but this point type has bytesPerDim=\" + TYPE.pointNumBytes() + \n                                         \", is the field really a LatLonPoint?\");\n    }\n    if (fieldInfo.getDocValuesType() != DocValuesType.NONE && fieldInfo.getDocValuesType() != TYPE.docValuesType()) {\n      throw new IllegalArgumentException(\"field=\\\"\" + fieldInfo.name + \"\\\" was indexed with docValuesType=\" + fieldInfo.getDocValuesType() + \n                                         \" but this point type has docValuesType=\" + TYPE.docValuesType() + \n                                         \", is the field really a LatLonPoint?\");\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"88b0212386fe531136816706dc37dc49b9dbf7dc","date":1532560226,"type":5,"author":"Nicholas Knize","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/document/LatLonPoint#checkCompatible(FieldInfo).mjava","pathOld":"lucene/sandbox/src/java/org/apache/lucene/document/LatLonPoint#checkCompatible(FieldInfo).mjava","sourceNew":"  /** helper: checks a fieldinfo and throws exception if its definitely not a LatLonPoint */\n  static void checkCompatible(FieldInfo fieldInfo) {\n    // point/dv properties could be \"unset\", if you e.g. used only StoredField with this same name in the segment.\n    if (fieldInfo.getPointDimensionCount() != 0 && fieldInfo.getPointDimensionCount() != TYPE.pointDimensionCount()) {\n      throw new IllegalArgumentException(\"field=\\\"\" + fieldInfo.name + \"\\\" was indexed with numDims=\" + fieldInfo.getPointDimensionCount() + \n                                         \" but this point type has numDims=\" + TYPE.pointDimensionCount() + \n                                         \", is the field really a LatLonPoint?\");\n    }\n    if (fieldInfo.getPointNumBytes() != 0 && fieldInfo.getPointNumBytes() != TYPE.pointNumBytes()) {\n      throw new IllegalArgumentException(\"field=\\\"\" + fieldInfo.name + \"\\\" was indexed with bytesPerDim=\" + fieldInfo.getPointNumBytes() + \n                                         \" but this point type has bytesPerDim=\" + TYPE.pointNumBytes() + \n                                         \", is the field really a LatLonPoint?\");\n    }\n  }\n\n","sourceOld":"  /** helper: checks a fieldinfo and throws exception if its definitely not a LatLonPoint */\n  static void checkCompatible(FieldInfo fieldInfo) {\n    // point/dv properties could be \"unset\", if you e.g. used only StoredField with this same name in the segment.\n    if (fieldInfo.getPointDimensionCount() != 0 && fieldInfo.getPointDimensionCount() != TYPE.pointDimensionCount()) {\n      throw new IllegalArgumentException(\"field=\\\"\" + fieldInfo.name + \"\\\" was indexed with numDims=\" + fieldInfo.getPointDimensionCount() + \n                                         \" but this point type has numDims=\" + TYPE.pointDimensionCount() + \n                                         \", is the field really a LatLonPoint?\");\n    }\n    if (fieldInfo.getPointNumBytes() != 0 && fieldInfo.getPointNumBytes() != TYPE.pointNumBytes()) {\n      throw new IllegalArgumentException(\"field=\\\"\" + fieldInfo.name + \"\\\" was indexed with bytesPerDim=\" + fieldInfo.getPointNumBytes() + \n                                         \" but this point type has bytesPerDim=\" + TYPE.pointNumBytes() + \n                                         \", is the field really a LatLonPoint?\");\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"88b0212386fe531136816706dc37dc49b9dbf7dc":["f7f901826e47f75f810d7aae24b0455d21ea1fe2"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"94ee361295fb38310ac4d53cb4773d1622423d68":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"54f531dff997ea7763360cb59f5ccadc6811b519":["cf1a614098b46c9c22afebd7b898ae4d1d2fc273"],"f7f901826e47f75f810d7aae24b0455d21ea1fe2":["575856a9f007b9c35d0113c9e18151b554709ef2","cc75470f235495b4ac71f43bba9b503023f7f2d0"],"575856a9f007b9c35d0113c9e18151b554709ef2":["cf1a614098b46c9c22afebd7b898ae4d1d2fc273","54f531dff997ea7763360cb59f5ccadc6811b519"],"cf1a614098b46c9c22afebd7b898ae4d1d2fc273":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","94ee361295fb38310ac4d53cb4773d1622423d68"],"cc75470f235495b4ac71f43bba9b503023f7f2d0":["575856a9f007b9c35d0113c9e18151b554709ef2"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["88b0212386fe531136816706dc37dc49b9dbf7dc"]},"commit2Childs":{"88b0212386fe531136816706dc37dc49b9dbf7dc":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"f7f901826e47f75f810d7aae24b0455d21ea1fe2":["88b0212386fe531136816706dc37dc49b9dbf7dc"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["94ee361295fb38310ac4d53cb4773d1622423d68","cf1a614098b46c9c22afebd7b898ae4d1d2fc273"],"94ee361295fb38310ac4d53cb4773d1622423d68":["cf1a614098b46c9c22afebd7b898ae4d1d2fc273"],"54f531dff997ea7763360cb59f5ccadc6811b519":["575856a9f007b9c35d0113c9e18151b554709ef2"],"575856a9f007b9c35d0113c9e18151b554709ef2":["f7f901826e47f75f810d7aae24b0455d21ea1fe2","cc75470f235495b4ac71f43bba9b503023f7f2d0"],"cf1a614098b46c9c22afebd7b898ae4d1d2fc273":["54f531dff997ea7763360cb59f5ccadc6811b519","575856a9f007b9c35d0113c9e18151b554709ef2"],"cc75470f235495b4ac71f43bba9b503023f7f2d0":["f7f901826e47f75f810d7aae24b0455d21ea1fe2"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}