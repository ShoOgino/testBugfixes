{"path":"lucene/core/src/java/org/apache/lucene/search/PositiveScoresOnlyCollector#getLeafCollector(LeafReaderContext).mjava","commits":[{"id":"c9fb5f46e264daf5ba3860defe623a89d202dd87","date":1411516315,"type":0,"author":"Ryan Ernst","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/PositiveScoresOnlyCollector#getLeafCollector(LeafReaderContext).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public LeafCollector getLeafCollector(LeafReaderContext context)\n      throws IOException {\n    return new FilterLeafCollector(super.getLeafCollector(context)) {\n\n      private Scorer scorer;\n\n      @Override\n      public void setScorer(Scorer scorer) throws IOException {\n        this.scorer = new ScoreCachingWrappingScorer(scorer);\n        in.setScorer(this.scorer);\n      }\n\n      @Override\n      public void collect(int doc) throws IOException {\n        if (scorer.score() > 0) {\n          in.collect(doc);\n        }\n      }\n      \n    };\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"285244982ce6aa163d1e60a707f0e6e121736ce5","date":1536055304,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/PositiveScoresOnlyCollector#getLeafCollector(LeafReaderContext).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/PositiveScoresOnlyCollector#getLeafCollector(LeafReaderContext).mjava","sourceNew":"  @Override\n  public LeafCollector getLeafCollector(LeafReaderContext context)\n      throws IOException {\n    return new FilterLeafCollector(super.getLeafCollector(context)) {\n\n      private Scorable scorer;\n\n      @Override\n      public void setScorer(Scorable scorer) throws IOException {\n        this.scorer = new ScoreCachingWrappingScorer(scorer);\n        in.setScorer(this.scorer);\n      }\n\n      @Override\n      public void collect(int doc) throws IOException {\n        if (scorer.score() > 0) {\n          in.collect(doc);\n        }\n      }\n      \n    };\n  }\n\n","sourceOld":"  @Override\n  public LeafCollector getLeafCollector(LeafReaderContext context)\n      throws IOException {\n    return new FilterLeafCollector(super.getLeafCollector(context)) {\n\n      private Scorer scorer;\n\n      @Override\n      public void setScorer(Scorer scorer) throws IOException {\n        this.scorer = new ScoreCachingWrappingScorer(scorer);\n        in.setScorer(this.scorer);\n      }\n\n      @Override\n      public void collect(int doc) throws IOException {\n        if (scorer.score() > 0) {\n          in.collect(doc);\n        }\n      }\n      \n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"285244982ce6aa163d1e60a707f0e6e121736ce5":["c9fb5f46e264daf5ba3860defe623a89d202dd87"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"c9fb5f46e264daf5ba3860defe623a89d202dd87":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["285244982ce6aa163d1e60a707f0e6e121736ce5"]},"commit2Childs":{"285244982ce6aa163d1e60a707f0e6e121736ce5":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c9fb5f46e264daf5ba3860defe623a89d202dd87"],"c9fb5f46e264daf5ba3860defe623a89d202dd87":["285244982ce6aa163d1e60a707f0e6e121736ce5"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}