{"path":"lucene/sandbox/src/test/org/apache/lucene/util/TestGeoUtils#beforeClass().mjava","commits":[{"id":"11540ae0536f080714982c91b67e799273893920","date":1438423706,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/sandbox/src/test/org/apache/lucene/util/TestGeoUtils#beforeClass().mjava","pathOld":"/dev/null","sourceNew":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n    // Between 1.0 and 3.0:\n    lonRange = 2 * (random().nextDouble() + 0.5);\n    latRange = 2 * (random().nextDouble() + 0.5);\n\n    originLon = GeoUtils.MIN_LON_INCL + lonRange + (GeoUtils.MAX_LON_INCL - GeoUtils.MIN_LON_INCL - 2 * lonRange) * random().nextDouble();\n    originLon = GeoUtils.normalizeLon(originLon);\n    originLat = GeoUtils.MIN_LAT_INCL + latRange + (GeoUtils.MAX_LAT_INCL - GeoUtils.MIN_LAT_INCL - 2 * latRange) * random().nextDouble();\n    originLat = GeoUtils.normalizeLat(originLat);\n\n    if (VERBOSE) {\n      System.out.println(\"TEST: originLon=\" + originLon + \" lonRange= \" + lonRange + \" originLat=\" + originLat + \" latRange=\" + latRange);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["ca8abb1a4010d2a9e71b0162d3600e898a8a4f56","ca8abb1a4010d2a9e71b0162d3600e898a8a4f56"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"937923083e4d137932336fc80f3d78758ff698a6","date":1454691519,"type":5,"author":"nknize","isMerge":false,"pathNew":"lucene/spatial/src/test/org/apache/lucene/spatial/util/TestGeoUtils#beforeClass().mjava","pathOld":"lucene/sandbox/src/test/org/apache/lucene/util/TestGeoUtils#beforeClass().mjava","sourceNew":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n    // Between 1.0 and 3.0:\n    lonRange = 2 * (random().nextDouble() + 0.5);\n    latRange = 2 * (random().nextDouble() + 0.5);\n\n    originLon = GeoUtils.MIN_LON_INCL + lonRange + (GeoUtils.MAX_LON_INCL - GeoUtils.MIN_LON_INCL - 2 * lonRange) * random().nextDouble();\n    originLon = GeoUtils.normalizeLon(originLon);\n    originLat = GeoUtils.MIN_LAT_INCL + latRange + (GeoUtils.MAX_LAT_INCL - GeoUtils.MIN_LAT_INCL - 2 * latRange) * random().nextDouble();\n    originLat = GeoUtils.normalizeLat(originLat);\n\n    if (VERBOSE) {\n      System.out.println(\"TEST: originLon=\" + originLon + \" lonRange= \" + lonRange + \" originLat=\" + originLat + \" latRange=\" + latRange);\n    }\n  }\n\n","sourceOld":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n    // Between 1.0 and 3.0:\n    lonRange = 2 * (random().nextDouble() + 0.5);\n    latRange = 2 * (random().nextDouble() + 0.5);\n\n    originLon = GeoUtils.MIN_LON_INCL + lonRange + (GeoUtils.MAX_LON_INCL - GeoUtils.MIN_LON_INCL - 2 * lonRange) * random().nextDouble();\n    originLon = GeoUtils.normalizeLon(originLon);\n    originLat = GeoUtils.MIN_LAT_INCL + latRange + (GeoUtils.MAX_LAT_INCL - GeoUtils.MIN_LAT_INCL - 2 * latRange) * random().nextDouble();\n    originLat = GeoUtils.normalizeLat(originLat);\n\n    if (VERBOSE) {\n      System.out.println(\"TEST: originLon=\" + originLon + \" lonRange= \" + lonRange + \" originLat=\" + originLat + \" latRange=\" + latRange);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"1e6acbaae7af722f17204ceccf0f7db5753eccf3","date":1454775255,"type":5,"author":"Mike McCandless","isMerge":true,"pathNew":"lucene/spatial/src/test/org/apache/lucene/spatial/util/TestGeoUtils#beforeClass().mjava","pathOld":"lucene/sandbox/src/test/org/apache/lucene/util/TestGeoUtils#beforeClass().mjava","sourceNew":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n    // Between 1.0 and 3.0:\n    lonRange = 2 * (random().nextDouble() + 0.5);\n    latRange = 2 * (random().nextDouble() + 0.5);\n\n    originLon = GeoUtils.MIN_LON_INCL + lonRange + (GeoUtils.MAX_LON_INCL - GeoUtils.MIN_LON_INCL - 2 * lonRange) * random().nextDouble();\n    originLon = GeoUtils.normalizeLon(originLon);\n    originLat = GeoUtils.MIN_LAT_INCL + latRange + (GeoUtils.MAX_LAT_INCL - GeoUtils.MIN_LAT_INCL - 2 * latRange) * random().nextDouble();\n    originLat = GeoUtils.normalizeLat(originLat);\n\n    if (VERBOSE) {\n      System.out.println(\"TEST: originLon=\" + originLon + \" lonRange= \" + lonRange + \" originLat=\" + originLat + \" latRange=\" + latRange);\n    }\n  }\n\n","sourceOld":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n    // Between 1.0 and 3.0:\n    lonRange = 2 * (random().nextDouble() + 0.5);\n    latRange = 2 * (random().nextDouble() + 0.5);\n\n    originLon = GeoUtils.MIN_LON_INCL + lonRange + (GeoUtils.MAX_LON_INCL - GeoUtils.MIN_LON_INCL - 2 * lonRange) * random().nextDouble();\n    originLon = GeoUtils.normalizeLon(originLon);\n    originLat = GeoUtils.MIN_LAT_INCL + latRange + (GeoUtils.MAX_LAT_INCL - GeoUtils.MIN_LAT_INCL - 2 * latRange) * random().nextDouble();\n    originLat = GeoUtils.normalizeLat(originLat);\n\n    if (VERBOSE) {\n      System.out.println(\"TEST: originLon=\" + originLon + \" lonRange= \" + lonRange + \" originLat=\" + originLat + \" latRange=\" + latRange);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"11540ae0536f080714982c91b67e799273893920":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"1e6acbaae7af722f17204ceccf0f7db5753eccf3":["11540ae0536f080714982c91b67e799273893920","937923083e4d137932336fc80f3d78758ff698a6"],"937923083e4d137932336fc80f3d78758ff698a6":["11540ae0536f080714982c91b67e799273893920"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["937923083e4d137932336fc80f3d78758ff698a6"]},"commit2Childs":{"11540ae0536f080714982c91b67e799273893920":["1e6acbaae7af722f17204ceccf0f7db5753eccf3","937923083e4d137932336fc80f3d78758ff698a6"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["11540ae0536f080714982c91b67e799273893920"],"1e6acbaae7af722f17204ceccf0f7db5753eccf3":[],"937923083e4d137932336fc80f3d78758ff698a6":["1e6acbaae7af722f17204ceccf0f7db5753eccf3","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["1e6acbaae7af722f17204ceccf0f7db5753eccf3","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}