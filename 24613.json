{"path":"lucene/tools/src/java/org/apache/lucene/validation/SVNEolCheckTask#execute().mjava","commits":[{"id":"d681ca1a1c487b2501ef9bde8602a65c4c717a46","date":1346078839,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/tools/src/java/org/apache/lucene/validation/SVNEolCheckTask#execute().mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public void execute() throws BuildException {\n    if (svnExecutable == null) {\n      throw new BuildException(\"svnExecutable parameter must be set!\");\n    }\n    boolean success = true;\n    files.setProject(getProject());\n    Iterator<Resource> iter = (Iterator<Resource>) files.iterator();\n    while (iter.hasNext()) {\n      Resource r = iter.next();\n      if (!(r instanceof FileResource)) {\n        throw new BuildException(\"Only filesystem resource are supported: \" + r.getName()\n            + \", was: \" + r.getClass().getName());\n      }\n\n      File f = ((FileResource) r).getFile();\n      List<String> cmd = new ArrayList<String>();\n      cmd.add(svnExecutable);\n      cmd.add(\"pget\");\n      cmd.add(\"svn:eol-style\");\n      cmd.add(f.getAbsolutePath());\n      String eolStyle = exec(cmd);\n      if (eolStyle.isEmpty()) {\n        cmd.clear();\n        cmd.add(svnExecutable);\n        cmd.add(\"pget\");\n        cmd.add(\"svn:mime-type\");\n        cmd.add(f.getAbsolutePath());\n        String binProp = exec(cmd);\n        if (!binProp.startsWith(\"application/\") && !binProp.startsWith(\"image/\")) {\n          success = false;\n          log(r.getName() + \" missing svn:eol-style (or binary svn:mime-type).\");\n        }\n      }\n    }\n    if (!success) {\n      throw new BuildException(\"Some svn properties are missing\");\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bcbe08448d1a9911d678694658d2b52dc972bc8f","date":1346136646,"type":4,"author":"Uwe Schindler","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/tools/src/java/org/apache/lucene/validation/SVNEolCheckTask#execute().mjava","sourceNew":null,"sourceOld":"  @Override\n  public void execute() throws BuildException {\n    if (svnExecutable == null) {\n      throw new BuildException(\"svnExecutable parameter must be set!\");\n    }\n    boolean success = true;\n    files.setProject(getProject());\n    Iterator<Resource> iter = (Iterator<Resource>) files.iterator();\n    while (iter.hasNext()) {\n      Resource r = iter.next();\n      if (!(r instanceof FileResource)) {\n        throw new BuildException(\"Only filesystem resource are supported: \" + r.getName()\n            + \", was: \" + r.getClass().getName());\n      }\n\n      File f = ((FileResource) r).getFile();\n      List<String> cmd = new ArrayList<String>();\n      cmd.add(svnExecutable);\n      cmd.add(\"pget\");\n      cmd.add(\"svn:eol-style\");\n      cmd.add(f.getAbsolutePath());\n      String eolStyle = exec(cmd);\n      if (eolStyle.isEmpty()) {\n        cmd.clear();\n        cmd.add(svnExecutable);\n        cmd.add(\"pget\");\n        cmd.add(\"svn:mime-type\");\n        cmd.add(f.getAbsolutePath());\n        String binProp = exec(cmd);\n        if (!binProp.startsWith(\"application/\") && !binProp.startsWith(\"image/\")) {\n          success = false;\n          log(r.getName() + \" missing svn:eol-style (or binary svn:mime-type).\");\n        }\n      }\n    }\n    if (!success) {\n      throw new BuildException(\"Some svn properties are missing\");\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"d681ca1a1c487b2501ef9bde8602a65c4c717a46":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"bcbe08448d1a9911d678694658d2b52dc972bc8f":["d681ca1a1c487b2501ef9bde8602a65c4c717a46"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["bcbe08448d1a9911d678694658d2b52dc972bc8f"]},"commit2Childs":{"d681ca1a1c487b2501ef9bde8602a65c4c717a46":["bcbe08448d1a9911d678694658d2b52dc972bc8f"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["d681ca1a1c487b2501ef9bde8602a65c4c717a46"],"bcbe08448d1a9911d678694658d2b52dc972bc8f":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}