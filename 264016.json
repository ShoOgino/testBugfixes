{"path":"solr/core/src/java/org/apache/solr/util/SolrCLI.StatusTool#getStatus(String).mjava","commits":[{"id":"4ca20be81c9284c840498143264e583ccbb8525a","date":1438705932,"type":1,"author":"Timothy Potter","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/util/SolrCLI.StatusTool#getStatus(String).mjava","pathOld":"solr/core/src/java/org/apache/solr/util/SolrCLI.StatusTool#runTool(CommandLine).mjava","sourceNew":"    public Map<String,Object> getStatus(String solrUrl) throws Exception {\n      Map<String,Object> status = null;\n\n      if (!solrUrl.endsWith(\"/\"))\n        solrUrl += \"/\";\n\n      String systemInfoUrl = solrUrl+\"admin/info/system\";\n      CloseableHttpClient httpClient = getHttpClient();\n      try {\n        // hit Solr to get system info\n        Map<String,Object> systemInfo = getJson(httpClient, systemInfoUrl, 2, true);\n        // convert raw JSON into user-friendly output\n        status = reportStatus(solrUrl, systemInfo, httpClient);\n      } finally {\n        closeHttpClient(httpClient);\n      }\n\n      return status;\n    }\n\n","sourceOld":"    @Override\n    public int runTool(CommandLine cli) throws Exception {\n      String solrUrl = cli.getOptionValue(\"solr\", DEFAULT_SOLR_URL);\n      if (!solrUrl.endsWith(\"/\"))\n        solrUrl += \"/\";\n\n      int exitCode = 0;\n      String systemInfoUrl = solrUrl+\"admin/info/system\";\n      CloseableHttpClient httpClient = getHttpClient();\n      try {\n        // hit Solr to get system info\n        Map<String,Object> systemInfo = getJson(httpClient, systemInfoUrl, 2);\n\n        // convert raw JSON into user-friendly output\n        Map<String,Object> status =\n            reportStatus(solrUrl, systemInfo, httpClient);\n\n        // pretty-print the status to stdout\n        CharArr arr = new CharArr();\n        new JSONWriter(arr, 2).write(status);\n        System.out.println(arr.toString());\n\n      } catch (Exception exc) {\n        if (checkCommunicationError(exc)) {\n          // this is not actually an error from the tool as it's ok if Solr is not online.\n          System.err.println(\"Solr at \"+solrUrl+\" not online.\");\n        } else {\n          System.err.print(\"Failed to get system information from \"+solrUrl+\" due to: \");\n          exc.printStackTrace(System.err);\n          exitCode = 1;\n        }\n      } finally {\n        closeHttpClient(httpClient);\n      }\n\n      return exitCode;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b79a5db147a1c6f95d1625ddbc3561ef56955225","date":1528848080,"type":3,"author":"Steve Rowe","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/util/SolrCLI.StatusTool#getStatus(String).mjava","pathOld":"solr/core/src/java/org/apache/solr/util/SolrCLI.StatusTool#getStatus(String).mjava","sourceNew":"    public Map<String,Object> getStatus(String solrUrl) throws Exception {\n      Map<String,Object> status = null;\n\n      if (!solrUrl.endsWith(\"/\"))\n        solrUrl += \"/\";\n\n      String systemInfoUrl = solrUrl+\"admin/info/system\";\n      CloseableHttpClient httpClient = getHttpClient();\n      try {\n        // hit Solr to get system info\n        Map<String,Object> systemInfo = getJson(httpClient, systemInfoUrl, 2, true);\n        // convert raw JSON into user-friendly output\n        status = reportStatus(solrUrl, systemInfo, httpClient);\n      } finally {\n        closeHttpClient(httpClient);\n      }\n\n      return status;\n    }\n\n","sourceOld":"    public Map<String,Object> getStatus(String solrUrl) throws Exception {\n      Map<String,Object> status = null;\n\n      if (!solrUrl.endsWith(\"/\"))\n        solrUrl += \"/\";\n\n      String systemInfoUrl = solrUrl+\"admin/info/system\";\n      CloseableHttpClient httpClient = getHttpClient();\n      try {\n        // hit Solr to get system info\n        Map<String,Object> systemInfo = getJson(httpClient, systemInfoUrl, 2, true);\n        // convert raw JSON into user-friendly output\n        status = reportStatus(solrUrl, systemInfo, httpClient);\n      } finally {\n        closeHttpClient(httpClient);\n      }\n\n      return status;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7eeaaea0106c7d6a2de50acfc8d357121ef8bd26","date":1531589977,"type":3,"author":"Michael Braun","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/util/SolrCLI.StatusTool#getStatus(String).mjava","pathOld":"solr/core/src/java/org/apache/solr/util/SolrCLI.StatusTool#getStatus(String).mjava","sourceNew":"    public Map<String,Object> getStatus(String solrUrl) throws Exception {\n      Map<String,Object> status = null;\n\n      if (!solrUrl.endsWith(\"/\"))\n        solrUrl += \"/\";\n\n      String systemInfoUrl = solrUrl+\"admin/info/system\";\n      CloseableHttpClient httpClient = getHttpClient();\n      try {\n        // hit Solr to get system info\n        Map<String,Object> systemInfo = getJson(httpClient, systemInfoUrl, 2, true);\n        // convert raw JSON into user-friendly output\n        status = reportStatus(solrUrl, systemInfo, httpClient);\n      } finally {\n        closeHttpClient(httpClient);\n      }\n\n      return status;\n    }\n\n","sourceOld":"    public Map<String,Object> getStatus(String solrUrl) throws Exception {\n      Map<String,Object> status = null;\n\n      if (!solrUrl.endsWith(\"/\"))\n        solrUrl += \"/\";\n\n      String systemInfoUrl = solrUrl+\"admin/info/system\";\n      CloseableHttpClient httpClient = getHttpClient();\n      try {\n        // hit Solr to get system info\n        Map<String,Object> systemInfo = getJson(httpClient, systemInfoUrl, 2, true);\n        // convert raw JSON into user-friendly output\n        status = reportStatus(solrUrl, systemInfo, httpClient);\n      } finally {\n        closeHttpClient(httpClient);\n      }\n\n      return status;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","date":1531905561,"type":3,"author":"Alessandro Benedetti","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/util/SolrCLI.StatusTool#getStatus(String).mjava","pathOld":"solr/core/src/java/org/apache/solr/util/SolrCLI.StatusTool#getStatus(String).mjava","sourceNew":"    public Map<String,Object> getStatus(String solrUrl) throws Exception {\n      Map<String,Object> status = null;\n\n      if (!solrUrl.endsWith(\"/\"))\n        solrUrl += \"/\";\n\n      String systemInfoUrl = solrUrl+\"admin/info/system\";\n      CloseableHttpClient httpClient = getHttpClient();\n      try {\n        // hit Solr to get system info\n        Map<String,Object> systemInfo = getJson(httpClient, systemInfoUrl, 2, true);\n        // convert raw JSON into user-friendly output\n        status = reportStatus(solrUrl, systemInfo, httpClient);\n      } finally {\n        closeHttpClient(httpClient);\n      }\n\n      return status;\n    }\n\n","sourceOld":"    public Map<String,Object> getStatus(String solrUrl) throws Exception {\n      Map<String,Object> status = null;\n\n      if (!solrUrl.endsWith(\"/\"))\n        solrUrl += \"/\";\n\n      String systemInfoUrl = solrUrl+\"admin/info/system\";\n      CloseableHttpClient httpClient = getHttpClient();\n      try {\n        // hit Solr to get system info\n        Map<String,Object> systemInfo = getJson(httpClient, systemInfoUrl, 2, true);\n        // convert raw JSON into user-friendly output\n        status = reportStatus(solrUrl, systemInfo, httpClient);\n      } finally {\n        closeHttpClient(httpClient);\n      }\n\n      return status;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"4ca20be81c9284c840498143264e583ccbb8525a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"0efc9f2cae117418f13ba9035f5e1d516ea7a2b5":["4ca20be81c9284c840498143264e583ccbb8525a","b79a5db147a1c6f95d1625ddbc3561ef56955225"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b79a5db147a1c6f95d1625ddbc3561ef56955225"],"b79a5db147a1c6f95d1625ddbc3561ef56955225":["4ca20be81c9284c840498143264e583ccbb8525a"],"7eeaaea0106c7d6a2de50acfc8d357121ef8bd26":["4ca20be81c9284c840498143264e583ccbb8525a","b79a5db147a1c6f95d1625ddbc3561ef56955225"]},"commit2Childs":{"4ca20be81c9284c840498143264e583ccbb8525a":["0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","b79a5db147a1c6f95d1625ddbc3561ef56955225","7eeaaea0106c7d6a2de50acfc8d357121ef8bd26"],"0efc9f2cae117418f13ba9035f5e1d516ea7a2b5":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["4ca20be81c9284c840498143264e583ccbb8525a"],"b79a5db147a1c6f95d1625ddbc3561ef56955225":["0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","cd5edd1f2b162a5cfa08efd17851a07373a96817","7eeaaea0106c7d6a2de50acfc8d357121ef8bd26"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"7eeaaea0106c7d6a2de50acfc8d357121ef8bd26":[]},"heads":["0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","cd5edd1f2b162a5cfa08efd17851a07373a96817","7eeaaea0106c7d6a2de50acfc8d357121ef8bd26"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}