{"path":"lucene/core/src/java/org/apache/lucene/util/bkd/OfflinePointWriter#append(BytesRef,int).mjava","commits":[{"id":"78bdc7d6906146edb12a1a6c1f765ba680ed5124","date":1549523533,"type":2,"author":"iverase","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/bkd/OfflinePointWriter#append(BytesRef,int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/bkd/OfflinePointWriter#append(byte[],long,int).mjava","sourceNew":"  @Override\n  public void append(BytesRef packedValue, int docID) throws IOException {\n    assert packedValue.length == packedBytesLength;\n    out.writeBytes(packedValue.bytes, packedValue.offset, packedValue.length);\n    out.writeInt(docID);\n    count++;\n    assert expectedCount == 0 || count <= expectedCount;\n  }\n\n","sourceOld":"  @Override\n  public void append(byte[] packedValue, long ord, int docID) throws IOException {\n    assert packedValue.length == packedBytesLength;\n    out.writeBytes(packedValue, 0, packedValue.length);\n    out.writeInt(docID);\n    if (singleValuePerDoc == false) {\n      if (longOrds) {\n        out.writeLong(ord);\n      } else {\n        assert ord <= Integer.MAX_VALUE;\n        out.writeInt((int) ord);\n      }\n    }\n    count++;\n    assert expectedCount == 0 || count <= expectedCount;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c2344a1c769566d8c85cffcacc5e55153fa54b86","date":1550661298,"type":4,"author":"iverase","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/util/bkd/OfflinePointWriter#append(BytesRef,int).mjava","sourceNew":null,"sourceOld":"  @Override\n  public void append(BytesRef packedValue, int docID) throws IOException {\n    assert packedValue.length == packedBytesLength;\n    out.writeBytes(packedValue.bytes, packedValue.offset, packedValue.length);\n    out.writeInt(docID);\n    count++;\n    assert expectedCount == 0 || count <= expectedCount;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"c2344a1c769566d8c85cffcacc5e55153fa54b86":["78bdc7d6906146edb12a1a6c1f765ba680ed5124"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"78bdc7d6906146edb12a1a6c1f765ba680ed5124":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["c2344a1c769566d8c85cffcacc5e55153fa54b86"]},"commit2Childs":{"c2344a1c769566d8c85cffcacc5e55153fa54b86":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["78bdc7d6906146edb12a1a6c1f765ba680ed5124"],"78bdc7d6906146edb12a1a6c1f765ba680ed5124":["c2344a1c769566d8c85cffcacc5e55153fa54b86"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}