{"path":"lucene/analysis/morfologik/src/java/org/apache/lucene/analysis/morfologik/MorfologikAnalyzer#createComponents(String,Reader).mjava","commits":[{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/morfologik/src/java/org/apache/lucene/analysis/morfologik/MorfologikAnalyzer#createComponents(String,Reader).mjava","pathOld":"modules/analysis/morfologik/src/java/org/apache/lucene/analysis/morfologik/MorfologikAnalyzer#createComponents(String,Reader).mjava","sourceNew":"  /**\n   * Creates a\n   * {@link org.apache.lucene.analysis.Analyzer.TokenStreamComponents}\n   * which tokenizes all the text in the provided {@link Reader}.\n   * \n   * @param field ignored field name\n   * @param reader source of tokens\n   * \n   * @return A\n   *         {@link org.apache.lucene.analysis.Analyzer.TokenStreamComponents}\n   *         built from an {@link StandardTokenizer} filtered with\n   *         {@link StandardFilter} and {@link MorfologikFilter}.\n   */\n  @Override\n  protected TokenStreamComponents createComponents(final String field, final Reader reader) {\n    final Tokenizer src = new StandardTokenizer(this.version, reader);\n    \n    return new TokenStreamComponents(\n      src,\n      new MorfologikFilter(new StandardFilter(this.version, src), this.dictionary, this.version));\n  }\n\n","sourceOld":"  /**\n   * Creates a\n   * {@link org.apache.lucene.analysis.Analyzer.TokenStreamComponents}\n   * which tokenizes all the text in the provided {@link Reader}.\n   * \n   * @param field ignored field name\n   * @param reader source of tokens\n   * \n   * @return A\n   *         {@link org.apache.lucene.analysis.Analyzer.TokenStreamComponents}\n   *         built from an {@link StandardTokenizer} filtered with\n   *         {@link StandardFilter} and {@link MorfologikFilter}.\n   */\n  @Override\n  protected TokenStreamComponents createComponents(final String field, final Reader reader) {\n    final Tokenizer src = new StandardTokenizer(this.version, reader);\n    \n    return new TokenStreamComponents(\n      src,\n      new MorfologikFilter(new StandardFilter(this.version, src), this.dictionary, this.version));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"43cfa455b570ba7bf8eefe91de210d46c68a0a2a","date":1372853690,"type":3,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/analysis/morfologik/src/java/org/apache/lucene/analysis/morfologik/MorfologikAnalyzer#createComponents(String,Reader).mjava","pathOld":"lucene/analysis/morfologik/src/java/org/apache/lucene/analysis/morfologik/MorfologikAnalyzer#createComponents(String,Reader).mjava","sourceNew":"  /**\n   * Creates a\n   * {@link org.apache.lucene.analysis.Analyzer.TokenStreamComponents}\n   * which tokenizes all the text in the provided {@link Reader}.\n   * \n   * @param field ignored field name\n   * @param reader source of tokens\n   * \n   * @return A\n   *         {@link org.apache.lucene.analysis.Analyzer.TokenStreamComponents}\n   *         built from an {@link StandardTokenizer} filtered with\n   *         {@link StandardFilter} and {@link MorfologikFilter}.\n   */\n  @Override\n  protected TokenStreamComponents createComponents(final String field, final Reader reader) {\n    final Tokenizer src = new StandardTokenizer(this.version, reader);\n    \n    return new TokenStreamComponents(\n        src, \n        new MorfologikFilter(new StandardFilter(this.version, src), this.version));\n  }\n\n","sourceOld":"  /**\n   * Creates a\n   * {@link org.apache.lucene.analysis.Analyzer.TokenStreamComponents}\n   * which tokenizes all the text in the provided {@link Reader}.\n   * \n   * @param field ignored field name\n   * @param reader source of tokens\n   * \n   * @return A\n   *         {@link org.apache.lucene.analysis.Analyzer.TokenStreamComponents}\n   *         built from an {@link StandardTokenizer} filtered with\n   *         {@link StandardFilter} and {@link MorfologikFilter}.\n   */\n  @Override\n  protected TokenStreamComponents createComponents(final String field, final Reader reader) {\n    final Tokenizer src = new StandardTokenizer(this.version, reader);\n    \n    return new TokenStreamComponents(\n      src,\n      new MorfologikFilter(new StandardFilter(this.version, src), this.dictionary, this.version));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"37a0f60745e53927c4c876cfe5b5a58170f0646c","date":1373994005,"type":3,"author":"Han Jiang","isMerge":true,"pathNew":"lucene/analysis/morfologik/src/java/org/apache/lucene/analysis/morfologik/MorfologikAnalyzer#createComponents(String,Reader).mjava","pathOld":"lucene/analysis/morfologik/src/java/org/apache/lucene/analysis/morfologik/MorfologikAnalyzer#createComponents(String,Reader).mjava","sourceNew":"  /**\n   * Creates a\n   * {@link org.apache.lucene.analysis.Analyzer.TokenStreamComponents}\n   * which tokenizes all the text in the provided {@link Reader}.\n   * \n   * @param field ignored field name\n   * @param reader source of tokens\n   * \n   * @return A\n   *         {@link org.apache.lucene.analysis.Analyzer.TokenStreamComponents}\n   *         built from an {@link StandardTokenizer} filtered with\n   *         {@link StandardFilter} and {@link MorfologikFilter}.\n   */\n  @Override\n  protected TokenStreamComponents createComponents(final String field, final Reader reader) {\n    final Tokenizer src = new StandardTokenizer(this.version, reader);\n    \n    return new TokenStreamComponents(\n        src, \n        new MorfologikFilter(new StandardFilter(this.version, src), this.version));\n  }\n\n","sourceOld":"  /**\n   * Creates a\n   * {@link org.apache.lucene.analysis.Analyzer.TokenStreamComponents}\n   * which tokenizes all the text in the provided {@link Reader}.\n   * \n   * @param field ignored field name\n   * @param reader source of tokens\n   * \n   * @return A\n   *         {@link org.apache.lucene.analysis.Analyzer.TokenStreamComponents}\n   *         built from an {@link StandardTokenizer} filtered with\n   *         {@link StandardFilter} and {@link MorfologikFilter}.\n   */\n  @Override\n  protected TokenStreamComponents createComponents(final String field, final Reader reader) {\n    final Tokenizer src = new StandardTokenizer(this.version, reader);\n    \n    return new TokenStreamComponents(\n      src,\n      new MorfologikFilter(new StandardFilter(this.version, src), this.dictionary, this.version));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ae889fd5c8a69f6b5d130d3c895bfa5b04d07338","date":1389274049,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/morfologik/src/java/org/apache/lucene/analysis/morfologik/MorfologikAnalyzer#createComponents(String).mjava","pathOld":"lucene/analysis/morfologik/src/java/org/apache/lucene/analysis/morfologik/MorfologikAnalyzer#createComponents(String,Reader).mjava","sourceNew":"  /**\n   * Creates a\n   * {@link org.apache.lucene.analysis.Analyzer.TokenStreamComponents}\n   * which tokenizes all the text in the provided {@link Reader}.\n   * \n   * @param field ignored field name\n   * @return A\n   *         {@link org.apache.lucene.analysis.Analyzer.TokenStreamComponents}\n   *         built from an {@link StandardTokenizer} filtered with\n   *         {@link StandardFilter} and {@link MorfologikFilter}.\n   */\n  @Override\n  protected TokenStreamComponents createComponents(final String field) {\n    final Tokenizer src = new StandardTokenizer(this.version);\n    \n    return new TokenStreamComponents(\n        src, \n        new MorfologikFilter(new StandardFilter(this.version, src), this.version));\n  }\n\n","sourceOld":"  /**\n   * Creates a\n   * {@link org.apache.lucene.analysis.Analyzer.TokenStreamComponents}\n   * which tokenizes all the text in the provided {@link Reader}.\n   * \n   * @param field ignored field name\n   * @param reader source of tokens\n   * \n   * @return A\n   *         {@link org.apache.lucene.analysis.Analyzer.TokenStreamComponents}\n   *         built from an {@link StandardTokenizer} filtered with\n   *         {@link StandardFilter} and {@link MorfologikFilter}.\n   */\n  @Override\n  protected TokenStreamComponents createComponents(final String field, final Reader reader) {\n    final Tokenizer src = new StandardTokenizer(this.version, reader);\n    \n    return new TokenStreamComponents(\n        src, \n        new MorfologikFilter(new StandardFilter(this.version, src), this.version));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"37a0f60745e53927c4c876cfe5b5a58170f0646c":["b89678825b68eccaf09e6ab71675fc0b0af1e099","43cfa455b570ba7bf8eefe91de210d46c68a0a2a"],"ae889fd5c8a69f6b5d130d3c895bfa5b04d07338":["43cfa455b570ba7bf8eefe91de210d46c68a0a2a"],"43cfa455b570ba7bf8eefe91de210d46c68a0a2a":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["ae889fd5c8a69f6b5d130d3c895bfa5b04d07338"]},"commit2Childs":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["37a0f60745e53927c4c876cfe5b5a58170f0646c","43cfa455b570ba7bf8eefe91de210d46c68a0a2a"],"37a0f60745e53927c4c876cfe5b5a58170f0646c":[],"ae889fd5c8a69f6b5d130d3c895bfa5b04d07338":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"43cfa455b570ba7bf8eefe91de210d46c68a0a2a":["37a0f60745e53927c4c876cfe5b5a58170f0646c","ae889fd5c8a69f6b5d130d3c895bfa5b04d07338"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["37a0f60745e53927c4c876cfe5b5a58170f0646c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}