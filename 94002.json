{"path":"src/java/org/apache/solr/util/TestHarness#TestHarness(String,String).mjava","commits":[{"id":"f66f1826f07774581d2ec661444fc987bdd1a85d","date":1144730206,"type":0,"author":"Chris M. Hostetter","isMerge":false,"pathNew":"src/java/org/apache/solr/util/TestHarness#TestHarness(String,String).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * @param dataDirectory path for index data, will not be cleaned up\n   * @param schemaFile path of schema file\n   */\n  public TestHarness(String dataDirectory, String schemaFile) {\n    core = new SolrCore(dataDirectory, new IndexSchema(schemaFile));\n    try {\n      builder = DocumentBuilderFactory.newInstance().newDocumentBuilder();\n    } catch (Exception e) {\n      throw new RuntimeException(e);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8ddfc890383ad49b761c95033cf08766953f805c","date":1145426420,"type":3,"author":"Chris M. Hostetter","isMerge":false,"pathNew":"src/java/org/apache/solr/util/TestHarness#TestHarness(String,String).mjava","pathOld":"src/java/org/apache/solr/util/TestHarness#TestHarness(String,String).mjava","sourceNew":"  /**\n   * Assumes \"solrconfig.xml\" is the config file to use.\n   *\n   * @param dataDirectory path for index data, will not be cleaned up\n   * @param schemaFile path of schema file\n   */\n  public TestHarness(String dataDirectory, String schemaFile) {\n    this(dataDirectory, \"solrconfig.xml\", schemaFile);\n  }\n\n","sourceOld":"  /**\n   * @param dataDirectory path for index data, will not be cleaned up\n   * @param schemaFile path of schema file\n   */\n  public TestHarness(String dataDirectory, String schemaFile) {\n    core = new SolrCore(dataDirectory, new IndexSchema(schemaFile));\n    try {\n      builder = DocumentBuilderFactory.newInstance().newDocumentBuilder();\n    } catch (Exception e) {\n      throw new RuntimeException(e);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6d6338c87060be5f66757a94945975f3bbd377a9","date":1189278234,"type":3,"author":"Ryan McKinley","isMerge":false,"pathNew":"src/java/org/apache/solr/util/TestHarness#TestHarness(String,String).mjava","pathOld":"src/java/org/apache/solr/util/TestHarness#TestHarness(String,String).mjava","sourceNew":"  /**\n   * Assumes \"solrconfig.xml\" is the config file to use, and\n   * \"schema.xml\" is the schema path to use.\n   *\n   * @param dataDirectory path for index data, will not be cleaned up\n   */\n  public TestHarness(String name, String dataDirectory) {\n    this(name, dataDirectory, \"schema.xml\");\n  }\n\n","sourceOld":"  /**\n   * Assumes \"solrconfig.xml\" is the config file to use.\n   *\n   * @param dataDirectory path for index data, will not be cleaned up\n   * @param schemaFile path of schema file\n   */\n  public TestHarness(String dataDirectory, String schemaFile) {\n    this(dataDirectory, \"solrconfig.xml\", schemaFile);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8fe3c163c8df3fb3e4248c30f8ae8034cc786589","date":1189317596,"type":3,"author":"Ryan McKinley","isMerge":false,"pathNew":"src/java/org/apache/solr/util/TestHarness#TestHarness(String,String).mjava","pathOld":"src/java/org/apache/solr/util/TestHarness#TestHarness(String,String).mjava","sourceNew":"  /**\n   * Assumes \"solrconfig.xml\" is the config file to use.\n   *\n   * @param dataDirectory path for index data, will not be cleaned up\n   * @param schemaFile path of schema file\n   */\n  public TestHarness( String dataDirectory, String schemaFile) {\n    this( dataDirectory, \"solrconfig.xml\", schemaFile);\n  }\n\n","sourceOld":"  /**\n   * Assumes \"solrconfig.xml\" is the config file to use, and\n   * \"schema.xml\" is the schema path to use.\n   *\n   * @param dataDirectory path for index data, will not be cleaned up\n   */\n  public TestHarness(String name, String dataDirectory) {\n    this(name, dataDirectory, \"schema.xml\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ad94625fb8d088209f46650c8097196fec67f00c","date":1453508319,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/src/java/org/apache/solr/util/TestHarness#TestHarness(String,String).mjava","pathOld":"src/java/org/apache/solr/util/TestHarness#TestHarness(String,String).mjava","sourceNew":"  /**\n   * Assumes \"solrconfig.xml\" is the config file to use.\n   *\n   * @param dataDirectory path for index data, will not be cleaned up\n   * @param schemaFile path of schema file\n   */\n  public TestHarness( String dataDirectory, String schemaFile) {\n    this( dataDirectory, \"solrconfig.xml\", schemaFile);\n  }\n\n","sourceOld":"  /**\n   * Assumes \"solrconfig.xml\" is the config file to use.\n   *\n   * @param dataDirectory path for index data, will not be cleaned up\n   * @param schemaFile path of schema file\n   */\n  public TestHarness( String dataDirectory, String schemaFile) {\n    this( dataDirectory, \"solrconfig.xml\", schemaFile);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"6d6338c87060be5f66757a94945975f3bbd377a9":["8ddfc890383ad49b761c95033cf08766953f805c"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"8fe3c163c8df3fb3e4248c30f8ae8034cc786589":["6d6338c87060be5f66757a94945975f3bbd377a9"],"8ddfc890383ad49b761c95033cf08766953f805c":["f66f1826f07774581d2ec661444fc987bdd1a85d"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"ad94625fb8d088209f46650c8097196fec67f00c":["8fe3c163c8df3fb3e4248c30f8ae8034cc786589"],"f66f1826f07774581d2ec661444fc987bdd1a85d":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"6d6338c87060be5f66757a94945975f3bbd377a9":["8fe3c163c8df3fb3e4248c30f8ae8034cc786589"],"8ddfc890383ad49b761c95033cf08766953f805c":["6d6338c87060be5f66757a94945975f3bbd377a9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"8fe3c163c8df3fb3e4248c30f8ae8034cc786589":["ad94625fb8d088209f46650c8097196fec67f00c"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["f66f1826f07774581d2ec661444fc987bdd1a85d"],"ad94625fb8d088209f46650c8097196fec67f00c":[],"f66f1826f07774581d2ec661444fc987bdd1a85d":["8ddfc890383ad49b761c95033cf08766953f805c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["ad94625fb8d088209f46650c8097196fec67f00c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"pathCommit":null}