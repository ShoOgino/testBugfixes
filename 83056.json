{"path":"lucene/join/src/test/org/apache/lucene/search/join/TestBlockJoin#getRandomFields(int).mjava","commits":[{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/join/src/test/org/apache/lucene/search/join/TestBlockJoin#getRandomFields(int).mjava","pathOld":"modules/join/src/test/org/apache/lucene/search/join/TestBlockJoin#getRandomFields(int).mjava","sourceNew":"  private String[][] getRandomFields(int maxUniqueValues) {\n\n    final String[][] fields = new String[_TestUtil.nextInt(random(), 2, 4)][];\n    for(int fieldID=0;fieldID<fields.length;fieldID++) {\n      final int valueCount;\n      if (fieldID == 0) {\n        valueCount = 2;\n      } else {\n        valueCount = _TestUtil.nextInt(random(), 1, maxUniqueValues);\n      }\n        \n      final String[] values = fields[fieldID] = new String[valueCount];\n      for(int i=0;i<valueCount;i++) {\n        values[i] = _TestUtil.randomRealisticUnicodeString(random());\n        //values[i] = _TestUtil.randomSimpleString(random);\n      }\n    }\n\n    return fields;\n  }\n\n","sourceOld":"  private String[][] getRandomFields(int maxUniqueValues) {\n\n    final String[][] fields = new String[_TestUtil.nextInt(random(), 2, 4)][];\n    for(int fieldID=0;fieldID<fields.length;fieldID++) {\n      final int valueCount;\n      if (fieldID == 0) {\n        valueCount = 2;\n      } else {\n        valueCount = _TestUtil.nextInt(random(), 1, maxUniqueValues);\n      }\n        \n      final String[] values = fields[fieldID] = new String[valueCount];\n      for(int i=0;i<valueCount;i++) {\n        values[i] = _TestUtil.randomRealisticUnicodeString(random());\n        //values[i] = _TestUtil.randomSimpleString(random);\n      }\n    }\n\n    return fields;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6613659748fe4411a7dcf85266e55db1f95f7315","date":1392773913,"type":3,"author":"Benson Margulies","isMerge":false,"pathNew":"lucene/join/src/test/org/apache/lucene/search/join/TestBlockJoin#getRandomFields(int).mjava","pathOld":"lucene/join/src/test/org/apache/lucene/search/join/TestBlockJoin#getRandomFields(int).mjava","sourceNew":"  private String[][] getRandomFields(int maxUniqueValues) {\n\n    final String[][] fields = new String[TestUtil.nextInt(random(), 2, 4)][];\n    for(int fieldID=0;fieldID<fields.length;fieldID++) {\n      final int valueCount;\n      if (fieldID == 0) {\n        valueCount = 2;\n      } else {\n        valueCount = TestUtil.nextInt(random(), 1, maxUniqueValues);\n      }\n        \n      final String[] values = fields[fieldID] = new String[valueCount];\n      for(int i=0;i<valueCount;i++) {\n        values[i] = TestUtil.randomRealisticUnicodeString(random());\n        //values[i] = _TestUtil.randomSimpleString(random);\n      }\n    }\n\n    return fields;\n  }\n\n","sourceOld":"  private String[][] getRandomFields(int maxUniqueValues) {\n\n    final String[][] fields = new String[_TestUtil.nextInt(random(), 2, 4)][];\n    for(int fieldID=0;fieldID<fields.length;fieldID++) {\n      final int valueCount;\n      if (fieldID == 0) {\n        valueCount = 2;\n      } else {\n        valueCount = _TestUtil.nextInt(random(), 1, maxUniqueValues);\n      }\n        \n      final String[] values = fields[fieldID] = new String[valueCount];\n      for(int i=0;i<valueCount;i++) {\n        values[i] = _TestUtil.randomRealisticUnicodeString(random());\n        //values[i] = _TestUtil.randomSimpleString(random);\n      }\n    }\n\n    return fields;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5d909c25727b571ebf2c8ed48fefd0f3d90f7a08","date":1400082127,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/join/src/test/org/apache/lucene/search/join/TestBlockJoin#getRandomFields(int).mjava","pathOld":"lucene/join/src/test/org/apache/lucene/search/join/TestBlockJoin#getRandomFields(int).mjava","sourceNew":"  private String[][] getRandomFields(int maxUniqueValues) {\n\n    final String[][] fields = new String[TestUtil.nextInt(random(), 2, 4)][];\n    for(int fieldID=0;fieldID<fields.length;fieldID++) {\n      final int valueCount;\n      if (fieldID == 0) {\n        valueCount = 2;\n      } else {\n        valueCount = TestUtil.nextInt(random(), 1, maxUniqueValues);\n      }\n        \n      final String[] values = fields[fieldID] = new String[valueCount];\n      for(int i=0;i<valueCount;i++) {\n        values[i] = TestUtil.randomRealisticUnicodeString(random());\n        //values[i] = TestUtil.randomSimpleString(random());\n      }\n    }\n\n    return fields;\n  }\n\n","sourceOld":"  private String[][] getRandomFields(int maxUniqueValues) {\n\n    final String[][] fields = new String[TestUtil.nextInt(random(), 2, 4)][];\n    for(int fieldID=0;fieldID<fields.length;fieldID++) {\n      final int valueCount;\n      if (fieldID == 0) {\n        valueCount = 2;\n      } else {\n        valueCount = TestUtil.nextInt(random(), 1, maxUniqueValues);\n      }\n        \n      final String[] values = fields[fieldID] = new String[valueCount];\n      for(int i=0;i<valueCount;i++) {\n        values[i] = TestUtil.randomRealisticUnicodeString(random());\n        //values[i] = _TestUtil.randomSimpleString(random);\n      }\n    }\n\n    return fields;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"93dd449115a9247533e44bab47e8429e5dccbc6d","date":1400258396,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/join/src/test/org/apache/lucene/search/join/TestBlockJoin#getRandomFields(int).mjava","pathOld":"lucene/join/src/test/org/apache/lucene/search/join/TestBlockJoin#getRandomFields(int).mjava","sourceNew":"  private String[][] getRandomFields(int maxUniqueValues) {\n\n    final String[][] fields = new String[TestUtil.nextInt(random(), 2, 4)][];\n    for(int fieldID=0;fieldID<fields.length;fieldID++) {\n      final int valueCount;\n      if (fieldID == 0) {\n        valueCount = 2;\n      } else {\n        valueCount = TestUtil.nextInt(random(), 1, maxUniqueValues);\n      }\n        \n      final String[] values = fields[fieldID] = new String[valueCount];\n      for(int i=0;i<valueCount;i++) {\n        values[i] = TestUtil.randomRealisticUnicodeString(random());\n        //values[i] = TestUtil.randomSimpleString(random());\n      }\n    }\n\n    return fields;\n  }\n\n","sourceOld":"  private String[][] getRandomFields(int maxUniqueValues) {\n\n    final String[][] fields = new String[TestUtil.nextInt(random(), 2, 4)][];\n    for(int fieldID=0;fieldID<fields.length;fieldID++) {\n      final int valueCount;\n      if (fieldID == 0) {\n        valueCount = 2;\n      } else {\n        valueCount = TestUtil.nextInt(random(), 1, maxUniqueValues);\n      }\n        \n      final String[] values = fields[fieldID] = new String[valueCount];\n      for(int i=0;i<valueCount;i++) {\n        values[i] = TestUtil.randomRealisticUnicodeString(random());\n        //values[i] = _TestUtil.randomSimpleString(random);\n      }\n    }\n\n    return fields;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"56572ec06f1407c066d6b7399413178b33176cd8","date":1400495675,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/join/src/test/org/apache/lucene/search/join/TestBlockJoin#getRandomFields(int).mjava","pathOld":"lucene/join/src/test/org/apache/lucene/search/join/TestBlockJoin#getRandomFields(int).mjava","sourceNew":"  private String[][] getRandomFields(int maxUniqueValues) {\n\n    final String[][] fields = new String[TestUtil.nextInt(random(), 2, 4)][];\n    for(int fieldID=0;fieldID<fields.length;fieldID++) {\n      final int valueCount;\n      if (fieldID == 0) {\n        valueCount = 2;\n      } else {\n        valueCount = TestUtil.nextInt(random(), 1, maxUniqueValues);\n      }\n        \n      final String[] values = fields[fieldID] = new String[valueCount];\n      for(int i=0;i<valueCount;i++) {\n        values[i] = TestUtil.randomRealisticUnicodeString(random());\n        //values[i] = TestUtil.randomSimpleString(random());\n      }\n    }\n\n    return fields;\n  }\n\n","sourceOld":"  private String[][] getRandomFields(int maxUniqueValues) {\n\n    final String[][] fields = new String[TestUtil.nextInt(random(), 2, 4)][];\n    for(int fieldID=0;fieldID<fields.length;fieldID++) {\n      final int valueCount;\n      if (fieldID == 0) {\n        valueCount = 2;\n      } else {\n        valueCount = TestUtil.nextInt(random(), 1, maxUniqueValues);\n      }\n        \n      final String[] values = fields[fieldID] = new String[valueCount];\n      for(int i=0;i<valueCount;i++) {\n        values[i] = TestUtil.randomRealisticUnicodeString(random());\n        //values[i] = _TestUtil.randomSimpleString(random);\n      }\n    }\n\n    return fields;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0e7bc21595222ae4f75509300fbb7726691f387f","date":1464078795,"type":3,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/join/src/test/org/apache/lucene/search/join/TestBlockJoin#getRandomFields(int).mjava","pathOld":"lucene/join/src/test/org/apache/lucene/search/join/TestBlockJoin#getRandomFields(int).mjava","sourceNew":"  private String[][] getRandomFields(int maxUniqueValues) {\n\n    final String[][] fields = new String[TestUtil.nextInt(random(), 2, 4)][];\n    for(int fieldID=0;fieldID<fields.length;fieldID++) {\n      final int valueCount;\n      if (fieldID == 0) {\n        valueCount = 2;\n      } else {\n        valueCount = TestUtil.nextInt(random(), 1, maxUniqueValues);\n      }\n\n      final String[] values = fields[fieldID] = new String[valueCount];\n      for(int i=0;i<valueCount;i++) {\n        values[i] = TestUtil.randomRealisticUnicodeString(random());\n        //values[i] = TestUtil.randomSimpleString(random());\n      }\n    }\n\n    return fields;\n  }\n\n","sourceOld":"  private String[][] getRandomFields(int maxUniqueValues) {\n\n    final String[][] fields = new String[TestUtil.nextInt(random(), 2, 4)][];\n    for(int fieldID=0;fieldID<fields.length;fieldID++) {\n      final int valueCount;\n      if (fieldID == 0) {\n        valueCount = 2;\n      } else {\n        valueCount = TestUtil.nextInt(random(), 1, maxUniqueValues);\n      }\n        \n      final String[] values = fields[fieldID] = new String[valueCount];\n      for(int i=0;i<valueCount;i++) {\n        values[i] = TestUtil.randomRealisticUnicodeString(random());\n        //values[i] = TestUtil.randomSimpleString(random());\n      }\n    }\n\n    return fields;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"lucene/join/src/test/org/apache/lucene/search/join/TestBlockJoin#getRandomFields(int).mjava","pathOld":"lucene/join/src/test/org/apache/lucene/search/join/TestBlockJoin#getRandomFields(int).mjava","sourceNew":"  private String[][] getRandomFields(int maxUniqueValues) {\n\n    final String[][] fields = new String[TestUtil.nextInt(random(), 2, 4)][];\n    for(int fieldID=0;fieldID<fields.length;fieldID++) {\n      final int valueCount;\n      if (fieldID == 0) {\n        valueCount = 2;\n      } else {\n        valueCount = TestUtil.nextInt(random(), 1, maxUniqueValues);\n      }\n\n      final String[] values = fields[fieldID] = new String[valueCount];\n      for(int i=0;i<valueCount;i++) {\n        values[i] = TestUtil.randomRealisticUnicodeString(random());\n        //values[i] = TestUtil.randomSimpleString(random());\n      }\n    }\n\n    return fields;\n  }\n\n","sourceOld":"  private String[][] getRandomFields(int maxUniqueValues) {\n\n    final String[][] fields = new String[TestUtil.nextInt(random(), 2, 4)][];\n    for(int fieldID=0;fieldID<fields.length;fieldID++) {\n      final int valueCount;\n      if (fieldID == 0) {\n        valueCount = 2;\n      } else {\n        valueCount = TestUtil.nextInt(random(), 1, maxUniqueValues);\n      }\n        \n      final String[] values = fields[fieldID] = new String[valueCount];\n      for(int i=0;i<valueCount;i++) {\n        values[i] = TestUtil.randomRealisticUnicodeString(random());\n        //values[i] = TestUtil.randomSimpleString(random());\n      }\n    }\n\n    return fields;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"93dd449115a9247533e44bab47e8429e5dccbc6d":["6613659748fe4411a7dcf85266e55db1f95f7315","5d909c25727b571ebf2c8ed48fefd0f3d90f7a08"],"6613659748fe4411a7dcf85266e55db1f95f7315":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"0e7bc21595222ae4f75509300fbb7726691f387f":["93dd449115a9247533e44bab47e8429e5dccbc6d"],"56572ec06f1407c066d6b7399413178b33176cd8":["6613659748fe4411a7dcf85266e55db1f95f7315","93dd449115a9247533e44bab47e8429e5dccbc6d"],"5d909c25727b571ebf2c8ed48fefd0f3d90f7a08":["6613659748fe4411a7dcf85266e55db1f95f7315"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["93dd449115a9247533e44bab47e8429e5dccbc6d","0e7bc21595222ae4f75509300fbb7726691f387f"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["0e7bc21595222ae4f75509300fbb7726691f387f"]},"commit2Childs":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["6613659748fe4411a7dcf85266e55db1f95f7315"],"93dd449115a9247533e44bab47e8429e5dccbc6d":["0e7bc21595222ae4f75509300fbb7726691f387f","56572ec06f1407c066d6b7399413178b33176cd8","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"6613659748fe4411a7dcf85266e55db1f95f7315":["93dd449115a9247533e44bab47e8429e5dccbc6d","56572ec06f1407c066d6b7399413178b33176cd8","5d909c25727b571ebf2c8ed48fefd0f3d90f7a08"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"0e7bc21595222ae4f75509300fbb7726691f387f":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"56572ec06f1407c066d6b7399413178b33176cd8":[],"5d909c25727b571ebf2c8ed48fefd0f3d90f7a08":["93dd449115a9247533e44bab47e8429e5dccbc6d"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["56572ec06f1407c066d6b7399413178b33176cd8","4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}