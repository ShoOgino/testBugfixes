{"path":"lucene/src/java/org/apache/lucene/search/NumericRangeQuery#getTermsEnum(Terms,AttributeSource).mjava","commits":[{"id":"e8dd2a69747e9f2922fd8b6970bd1661b26a692d","date":1291080135,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/search/NumericRangeQuery#getTermsEnum(Terms,AttributeSource).mjava","pathOld":"lucene/src/java/org/apache/lucene/search/NumericRangeQuery#getTermsEnum(IndexReader,AttributeSource).mjava","sourceNew":"  @Override @SuppressWarnings(\"unchecked\")\n  protected TermsEnum getTermsEnum(final Terms terms, AttributeSource atts) throws IOException {\n    // very strange: java.lang.Number itsself is not Comparable, but all subclasses used here are\n    return (min != null && max != null && ((Comparable<T>) min).compareTo(max) > 0) ?\n      TermsEnum.EMPTY :\n      new NumericRangeTermsEnum(terms.iterator());\n  }\n\n","sourceOld":"  @Override @SuppressWarnings(\"unchecked\")\n  protected TermsEnum getTermsEnum(final IndexReader reader, AttributeSource atts) throws IOException {\n    // very strange: java.lang.Number itsself is not Comparable, but all subclasses used here are\n    return (min != null && max != null && ((Comparable<T>) min).compareTo(max) > 0) ?\n      TermsEnum.EMPTY :\n      new NumericRangeTermsEnum(reader);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3bb13258feba31ab676502787ab2e1779f129b7a","date":1291596436,"type":0,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/search/NumericRangeQuery#getTermsEnum(Terms,AttributeSource).mjava","pathOld":"/dev/null","sourceNew":"  @Override @SuppressWarnings(\"unchecked\")\n  protected TermsEnum getTermsEnum(final Terms terms, AttributeSource atts) throws IOException {\n    // very strange: java.lang.Number itsself is not Comparable, but all subclasses used here are\n    return (min != null && max != null && ((Comparable<T>) min).compareTo(max) > 0) ?\n      TermsEnum.EMPTY :\n      new NumericRangeTermsEnum(terms.iterator());\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","date":1292920096,"type":0,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/search/NumericRangeQuery#getTermsEnum(Terms,AttributeSource).mjava","pathOld":"/dev/null","sourceNew":"  @Override @SuppressWarnings(\"unchecked\")\n  protected TermsEnum getTermsEnum(final Terms terms, AttributeSource atts) throws IOException {\n    // very strange: java.lang.Number itsself is not Comparable, but all subclasses used here are\n    return (min != null && max != null && ((Comparable<T>) min).compareTo(max) > 0) ?\n      TermsEnum.EMPTY :\n      new NumericRangeTermsEnum(terms.iterator());\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3cc749c053615f5871f3b95715fe292f34e70a53","date":1321470575,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/search/NumericRangeQuery#getTermsEnum(Terms,AttributeSource).mjava","pathOld":"lucene/src/java/org/apache/lucene/search/NumericRangeQuery#getTermsEnum(Terms,AttributeSource).mjava","sourceNew":"  @Override @SuppressWarnings(\"unchecked\")\n  protected TermsEnum getTermsEnum(final Terms terms, AttributeSource atts) throws IOException {\n    // very strange: java.lang.Number itsself is not Comparable, but all subclasses used here are\n    return (min != null && max != null && ((Comparable<T>) min).compareTo(max) > 0) ?\n      TermsEnum.EMPTY :\n      new NumericRangeTermsEnum(terms.iterator(null));\n  }\n\n","sourceOld":"  @Override @SuppressWarnings(\"unchecked\")\n  protected TermsEnum getTermsEnum(final Terms terms, AttributeSource atts) throws IOException {\n    // very strange: java.lang.Number itsself is not Comparable, but all subclasses used here are\n    return (min != null && max != null && ((Comparable<T>) min).compareTo(max) > 0) ?\n      TermsEnum.EMPTY :\n      new NumericRangeTermsEnum(terms.iterator());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":5,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/NumericRangeQuery#getTermsEnum(Terms,AttributeSource).mjava","pathOld":"lucene/src/java/org/apache/lucene/search/NumericRangeQuery#getTermsEnum(Terms,AttributeSource).mjava","sourceNew":"  @Override @SuppressWarnings(\"unchecked\")\n  protected TermsEnum getTermsEnum(final Terms terms, AttributeSource atts) throws IOException {\n    // very strange: java.lang.Number itsself is not Comparable, but all subclasses used here are\n    return (min != null && max != null && ((Comparable<T>) min).compareTo(max) > 0) ?\n      TermsEnum.EMPTY :\n      new NumericRangeTermsEnum(terms.iterator(null));\n  }\n\n","sourceOld":"  @Override @SuppressWarnings(\"unchecked\")\n  protected TermsEnum getTermsEnum(final Terms terms, AttributeSource atts) throws IOException {\n    // very strange: java.lang.Number itsself is not Comparable, but all subclasses used here are\n    return (min != null && max != null && ((Comparable<T>) min).compareTo(max) > 0) ?\n      TermsEnum.EMPTY :\n      new NumericRangeTermsEnum(terms.iterator(null));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["3cc749c053615f5871f3b95715fe292f34e70a53"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cc749c053615f5871f3b95715fe292f34e70a53":["e8dd2a69747e9f2922fd8b6970bd1661b26a692d"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","e8dd2a69747e9f2922fd8b6970bd1661b26a692d"],"e8dd2a69747e9f2922fd8b6970bd1661b26a692d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"3bb13258feba31ab676502787ab2e1779f129b7a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","e8dd2a69747e9f2922fd8b6970bd1661b26a692d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"]},"commit2Childs":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","e8dd2a69747e9f2922fd8b6970bd1661b26a692d","3bb13258feba31ab676502787ab2e1779f129b7a"],"3cc749c053615f5871f3b95715fe292f34e70a53":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":[],"e8dd2a69747e9f2922fd8b6970bd1661b26a692d":["3cc749c053615f5871f3b95715fe292f34e70a53","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","3bb13258feba31ab676502787ab2e1779f129b7a"],"3bb13258feba31ab676502787ab2e1779f129b7a":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","3bb13258feba31ab676502787ab2e1779f129b7a","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}