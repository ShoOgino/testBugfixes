{"path":"lucene/contrib/highlighter/src/java/org/apache/lucene/search/highlight/WeightedSpanTermExtractor#fieldNameComparator(String).mjava","commits":[{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/contrib/highlighter/src/java/org/apache/lucene/search/highlight/WeightedSpanTermExtractor#fieldNameComparator(String).mjava","pathOld":"contrib/highlighter/src/java/org/apache/lucene/search/highlight/WeightedSpanTermExtractor#fieldNameComparator(String).mjava","sourceNew":"  /**\n   * Necessary to implement matches for queries against <code>defaultField</code>\n   */\n  private boolean fieldNameComparator(String fieldNameToCheck) {\n    boolean rv = fieldName == null || fieldNameToCheck == fieldName\n        || fieldNameToCheck == defaultField;\n    return rv;\n  }\n\n","sourceOld":"  /**\n   * Necessary to implement matches for queries against <code>defaultField</code>\n   */\n  private boolean fieldNameComparator(String fieldNameToCheck) {\n    boolean rv = fieldName == null || fieldNameToCheck == fieldName\n        || fieldNameToCheck == defaultField;\n    return rv;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fafef7c83fe8e0b3ca9298d5d75d6b943dc28153","date":1308670974,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/contrib/highlighter/src/java/org/apache/lucene/search/highlight/WeightedSpanTermExtractor#fieldNameComparator(String).mjava","pathOld":"lucene/contrib/highlighter/src/java/org/apache/lucene/search/highlight/WeightedSpanTermExtractor#fieldNameComparator(String).mjava","sourceNew":"  /**\n   * Necessary to implement matches for queries against <code>defaultField</code>\n   */\n  private boolean fieldNameComparator(String fieldNameToCheck) {\n    boolean rv = fieldName == null || fieldName.equals(fieldNameToCheck)\n      || (defaultField != null && defaultField.equals(fieldNameToCheck));\n    return rv;\n  }\n\n","sourceOld":"  /**\n   * Necessary to implement matches for queries against <code>defaultField</code>\n   */\n  private boolean fieldNameComparator(String fieldNameToCheck) {\n    boolean rv = fieldName == null || fieldNameToCheck == fieldName\n        || fieldNameToCheck == defaultField;\n    return rv;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2553b00f699380c64959ccb27991289aae87be2e","date":1309290151,"type":3,"author":"Steven Rowe","isMerge":true,"pathNew":"lucene/contrib/highlighter/src/java/org/apache/lucene/search/highlight/WeightedSpanTermExtractor#fieldNameComparator(String).mjava","pathOld":"lucene/contrib/highlighter/src/java/org/apache/lucene/search/highlight/WeightedSpanTermExtractor#fieldNameComparator(String).mjava","sourceNew":"  /**\n   * Necessary to implement matches for queries against <code>defaultField</code>\n   */\n  private boolean fieldNameComparator(String fieldNameToCheck) {\n    boolean rv = fieldName == null || fieldName.equals(fieldNameToCheck)\n      || (defaultField != null && defaultField.equals(fieldNameToCheck));\n    return rv;\n  }\n\n","sourceOld":"  /**\n   * Necessary to implement matches for queries against <code>defaultField</code>\n   */\n  private boolean fieldNameComparator(String fieldNameToCheck) {\n    boolean rv = fieldName == null || fieldNameToCheck == fieldName\n        || fieldNameToCheck == defaultField;\n    return rv;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d083e83f225b11e5fdd900e83d26ddb385b6955c","date":1310029438,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/contrib/highlighter/src/java/org/apache/lucene/search/highlight/WeightedSpanTermExtractor#fieldNameComparator(String).mjava","pathOld":"lucene/contrib/highlighter/src/java/org/apache/lucene/search/highlight/WeightedSpanTermExtractor#fieldNameComparator(String).mjava","sourceNew":"  /**\n   * Necessary to implement matches for queries against <code>defaultField</code>\n   */\n  private boolean fieldNameComparator(String fieldNameToCheck) {\n    boolean rv = fieldName == null || fieldName.equals(fieldNameToCheck)\n      || (defaultField != null && defaultField.equals(fieldNameToCheck));\n    return rv;\n  }\n\n","sourceOld":"  /**\n   * Necessary to implement matches for queries against <code>defaultField</code>\n   */\n  private boolean fieldNameComparator(String fieldNameToCheck) {\n    boolean rv = fieldName == null || fieldNameToCheck == fieldName\n        || fieldNameToCheck == defaultField;\n    return rv;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a00afb46b1a8a7ee8772ebbd41076442006ce5e4","date":1325512163,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/contrib/highlighter/src/java/org/apache/lucene/search/highlight/WeightedSpanTermExtractor#fieldNameComparator(String).mjava","pathOld":"lucene/contrib/highlighter/src/java/org/apache/lucene/search/highlight/WeightedSpanTermExtractor#fieldNameComparator(String).mjava","sourceNew":"  /**\n   * Necessary to implement matches for queries against <code>defaultField</code>\n   */\n  protected boolean fieldNameComparator(String fieldNameToCheck) {\n    boolean rv = fieldName == null || fieldName.equals(fieldNameToCheck)\n      || (defaultField != null && defaultField.equals(fieldNameToCheck));\n    return rv;\n  }\n\n","sourceOld":"  /**\n   * Necessary to implement matches for queries against <code>defaultField</code>\n   */\n  private boolean fieldNameComparator(String fieldNameToCheck) {\n    boolean rv = fieldName == null || fieldName.equals(fieldNameToCheck)\n      || (defaultField != null && defaultField.equals(fieldNameToCheck));\n    return rv;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/highlighter/src/java/org/apache/lucene/search/highlight/WeightedSpanTermExtractor#fieldNameComparator(String).mjava","pathOld":"lucene/contrib/highlighter/src/java/org/apache/lucene/search/highlight/WeightedSpanTermExtractor#fieldNameComparator(String).mjava","sourceNew":"  /**\n   * Necessary to implement matches for queries against <code>defaultField</code>\n   */\n  protected boolean fieldNameComparator(String fieldNameToCheck) {\n    boolean rv = fieldName == null || fieldName.equals(fieldNameToCheck)\n      || (defaultField != null && defaultField.equals(fieldNameToCheck));\n    return rv;\n  }\n\n","sourceOld":"  /**\n   * Necessary to implement matches for queries against <code>defaultField</code>\n   */\n  protected boolean fieldNameComparator(String fieldNameToCheck) {\n    boolean rv = fieldName == null || fieldName.equals(fieldNameToCheck)\n      || (defaultField != null && defaultField.equals(fieldNameToCheck));\n    return rv;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["a00afb46b1a8a7ee8772ebbd41076442006ce5e4"],"fafef7c83fe8e0b3ca9298d5d75d6b943dc28153":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"2553b00f699380c64959ccb27991289aae87be2e":["9454a6510e2db155fb01faa5c049b06ece95fab9","fafef7c83fe8e0b3ca9298d5d75d6b943dc28153"],"d083e83f225b11e5fdd900e83d26ddb385b6955c":["9454a6510e2db155fb01faa5c049b06ece95fab9","fafef7c83fe8e0b3ca9298d5d75d6b943dc28153"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"a00afb46b1a8a7ee8772ebbd41076442006ce5e4":["fafef7c83fe8e0b3ca9298d5d75d6b943dc28153"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"fafef7c83fe8e0b3ca9298d5d75d6b943dc28153":["2553b00f699380c64959ccb27991289aae87be2e","d083e83f225b11e5fdd900e83d26ddb385b6955c","a00afb46b1a8a7ee8772ebbd41076442006ce5e4"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"2553b00f699380c64959ccb27991289aae87be2e":[],"d083e83f225b11e5fdd900e83d26ddb385b6955c":[],"a00afb46b1a8a7ee8772ebbd41076442006ce5e4":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["fafef7c83fe8e0b3ca9298d5d75d6b943dc28153","2553b00f699380c64959ccb27991289aae87be2e","d083e83f225b11e5fdd900e83d26ddb385b6955c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["2553b00f699380c64959ccb27991289aae87be2e","d083e83f225b11e5fdd900e83d26ddb385b6955c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}