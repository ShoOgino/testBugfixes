{"path":"lucene/replicator/src/java/org/apache/lucene/replicator/nrt/CopyOneFile#CopyOneFile(DataInput,ReplicaNode,String,FileMetaData,byte[]).mjava","commits":[{"id":"0d49a158012a8ff48f328a4558e4bfcffbaed16f","date":1453677440,"type":0,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/replicator/src/java/org/apache/lucene/replicator/nrt/CopyOneFile#CopyOneFile(DataInput,ReplicaNode,String,FileMetaData,byte[]).mjava","pathOld":"/dev/null","sourceNew":"  public CopyOneFile(DataInput in, ReplicaNode dest, String name, FileMetaData metaData, byte[] buffer) throws IOException {\n    this.in = in;\n    this.name = name;\n    this.dest = dest;\n    this.buffer = buffer;\n    // TODO: pass correct IOCtx, e.g. seg total size\n    out = dest.createTempOutput(name, \"copy\", IOContext.DEFAULT);\n    tmpName = out.getName();\n\n    // last 8 bytes are checksum:\n    bytesToCopy = metaData.length - 8;\n\n    if (Node.VERBOSE_FILES) {\n      dest.message(\"file \" + name + \": start copying to tmp file \" + tmpName + \" length=\" + (8+bytesToCopy));\n    }\n\n    copyStartNS = System.nanoTime();\n    this.metaData = metaData;\n    dest.startCopyFile(name);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"68496c2200e559fb7802f7575427b7a482659afb","date":1455207618,"type":0,"author":"Mike McCandless","isMerge":true,"pathNew":"lucene/replicator/src/java/org/apache/lucene/replicator/nrt/CopyOneFile#CopyOneFile(DataInput,ReplicaNode,String,FileMetaData,byte[]).mjava","pathOld":"/dev/null","sourceNew":"  public CopyOneFile(DataInput in, ReplicaNode dest, String name, FileMetaData metaData, byte[] buffer) throws IOException {\n    this.in = in;\n    this.name = name;\n    this.dest = dest;\n    this.buffer = buffer;\n    // TODO: pass correct IOCtx, e.g. seg total size\n    out = dest.createTempOutput(name, \"copy\", IOContext.DEFAULT);\n    tmpName = out.getName();\n\n    // last 8 bytes are checksum:\n    bytesToCopy = metaData.length - 8;\n\n    if (Node.VERBOSE_FILES) {\n      dest.message(\"file \" + name + \": start copying to tmp file \" + tmpName + \" length=\" + (8+bytesToCopy));\n    }\n\n    copyStartNS = System.nanoTime();\n    this.metaData = metaData;\n    dest.startCopyFile(name);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8cfd1df435f04d4287925cca73cf22120f723892","date":1493925365,"type":3,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/replicator/src/java/org/apache/lucene/replicator/nrt/CopyOneFile#CopyOneFile(DataInput,ReplicaNode,String,FileMetaData,byte[]).mjava","pathOld":"lucene/replicator/src/java/org/apache/lucene/replicator/nrt/CopyOneFile#CopyOneFile(DataInput,ReplicaNode,String,FileMetaData,byte[]).mjava","sourceNew":"  public CopyOneFile(DataInput in, ReplicaNode dest, String name, FileMetaData metaData, byte[] buffer) throws IOException {\n    this.in = in;\n    this.name = name;\n    this.dest = dest;\n    this.buffer = buffer;\n    // TODO: pass correct IOCtx, e.g. seg total size\n    out = dest.createTempOutput(name, \"copy\", IOContext.DEFAULT);\n    tmpName = out.getName();\n\n    // last 8 bytes are checksum, which we write ourselves after copying all bytes and confirming checksum:\n    bytesToCopy = metaData.length - Long.BYTES;\n\n    if (Node.VERBOSE_FILES) {\n      dest.message(\"file \" + name + \": start copying to tmp file \" + tmpName + \" length=\" + (8+bytesToCopy));\n    }\n\n    copyStartNS = System.nanoTime();\n    this.metaData = metaData;\n    dest.startCopyFile(name);\n  }\n\n","sourceOld":"  public CopyOneFile(DataInput in, ReplicaNode dest, String name, FileMetaData metaData, byte[] buffer) throws IOException {\n    this.in = in;\n    this.name = name;\n    this.dest = dest;\n    this.buffer = buffer;\n    // TODO: pass correct IOCtx, e.g. seg total size\n    out = dest.createTempOutput(name, \"copy\", IOContext.DEFAULT);\n    tmpName = out.getName();\n\n    // last 8 bytes are checksum:\n    bytesToCopy = metaData.length - 8;\n\n    if (Node.VERBOSE_FILES) {\n      dest.message(\"file \" + name + \": start copying to tmp file \" + tmpName + \" length=\" + (8+bytesToCopy));\n    }\n\n    copyStartNS = System.nanoTime();\n    this.metaData = metaData;\n    dest.startCopyFile(name);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e9017cf144952056066919f1ebc7897ff9bd71b1","date":1496757600,"type":3,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"lucene/replicator/src/java/org/apache/lucene/replicator/nrt/CopyOneFile#CopyOneFile(DataInput,ReplicaNode,String,FileMetaData,byte[]).mjava","pathOld":"lucene/replicator/src/java/org/apache/lucene/replicator/nrt/CopyOneFile#CopyOneFile(DataInput,ReplicaNode,String,FileMetaData,byte[]).mjava","sourceNew":"  public CopyOneFile(DataInput in, ReplicaNode dest, String name, FileMetaData metaData, byte[] buffer) throws IOException {\n    this.in = in;\n    this.name = name;\n    this.dest = dest;\n    this.buffer = buffer;\n    // TODO: pass correct IOCtx, e.g. seg total size\n    out = dest.createTempOutput(name, \"copy\", IOContext.DEFAULT);\n    tmpName = out.getName();\n\n    // last 8 bytes are checksum, which we write ourselves after copying all bytes and confirming checksum:\n    bytesToCopy = metaData.length - Long.BYTES;\n\n    if (Node.VERBOSE_FILES) {\n      dest.message(\"file \" + name + \": start copying to tmp file \" + tmpName + \" length=\" + (8+bytesToCopy));\n    }\n\n    copyStartNS = System.nanoTime();\n    this.metaData = metaData;\n    dest.startCopyFile(name);\n  }\n\n","sourceOld":"  public CopyOneFile(DataInput in, ReplicaNode dest, String name, FileMetaData metaData, byte[] buffer) throws IOException {\n    this.in = in;\n    this.name = name;\n    this.dest = dest;\n    this.buffer = buffer;\n    // TODO: pass correct IOCtx, e.g. seg total size\n    out = dest.createTempOutput(name, \"copy\", IOContext.DEFAULT);\n    tmpName = out.getName();\n\n    // last 8 bytes are checksum:\n    bytesToCopy = metaData.length - 8;\n\n    if (Node.VERBOSE_FILES) {\n      dest.message(\"file \" + name + \": start copying to tmp file \" + tmpName + \" length=\" + (8+bytesToCopy));\n    }\n\n    copyStartNS = System.nanoTime();\n    this.metaData = metaData;\n    dest.startCopyFile(name);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"8cfd1df435f04d4287925cca73cf22120f723892":["68496c2200e559fb7802f7575427b7a482659afb"],"e9017cf144952056066919f1ebc7897ff9bd71b1":["68496c2200e559fb7802f7575427b7a482659afb","8cfd1df435f04d4287925cca73cf22120f723892"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"68496c2200e559fb7802f7575427b7a482659afb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","0d49a158012a8ff48f328a4558e4bfcffbaed16f"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["8cfd1df435f04d4287925cca73cf22120f723892"],"0d49a158012a8ff48f328a4558e4bfcffbaed16f":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"8cfd1df435f04d4287925cca73cf22120f723892":["e9017cf144952056066919f1ebc7897ff9bd71b1","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"e9017cf144952056066919f1ebc7897ff9bd71b1":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["68496c2200e559fb7802f7575427b7a482659afb","0d49a158012a8ff48f328a4558e4bfcffbaed16f"],"68496c2200e559fb7802f7575427b7a482659afb":["8cfd1df435f04d4287925cca73cf22120f723892","e9017cf144952056066919f1ebc7897ff9bd71b1"],"0d49a158012a8ff48f328a4558e4bfcffbaed16f":["68496c2200e559fb7802f7575427b7a482659afb"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["e9017cf144952056066919f1ebc7897ff9bd71b1","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}