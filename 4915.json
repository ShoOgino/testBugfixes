{"path":"src/java/org/apache/lucene/index/DefaultSkipListReader#readSkipData(int,IndexInput).mjava","commits":[{"id":"08d1ee9808e270c86ce5c9be08b8bd7a19d0a709","date":1180597733,"type":0,"author":"Michael Busch","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/DefaultSkipListReader#readSkipData(int,IndexInput).mjava","pathOld":"/dev/null","sourceNew":"  protected int readSkipData(int level, IndexInput skipStream) throws IOException {\r\n    int delta;\r\n    if (currentFieldStoresPayloads) {\r\n      // the current field stores payloads.\r\n      // if the doc delta is odd then we have\r\n      // to read the current payload length\r\n      // because it differs from the length of the\r\n      // previous payload\r\n      delta = skipStream.readVInt();\r\n      if ((delta & 1) != 0) {\r\n        payloadLength[level] = skipStream.readVInt();\r\n      }\r\n      delta >>>= 1;\r\n    } else {\r\n      delta = skipStream.readVInt();\r\n    }\r\n    freqPointer[level] += skipStream.readVInt();\r\n    proxPointer[level] += skipStream.readVInt();\r\n    \r\n    return delta;\r\n  }\r\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2123bddbd65dea198cac380540636ce43a880403","date":1211269254,"type":3,"author":"Michael Busch","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/DefaultSkipListReader#readSkipData(int,IndexInput).mjava","pathOld":"src/java/org/apache/lucene/index/DefaultSkipListReader#readSkipData(int,IndexInput).mjava","sourceNew":"  protected int readSkipData(int level, IndexInput skipStream) throws IOException {\n    int delta;\n    if (currentFieldStoresPayloads) {\n      // the current field stores payloads.\n      // if the doc delta is odd then we have\n      // to read the current payload length\n      // because it differs from the length of the\n      // previous payload\n      delta = skipStream.readVInt();\n      if ((delta & 1) != 0) {\n        payloadLength[level] = skipStream.readVInt();\n      }\n      delta >>>= 1;\n    } else {\n      delta = skipStream.readVInt();\n    }\n    freqPointer[level] += skipStream.readVInt();\n    proxPointer[level] += skipStream.readVInt();\n    \n    return delta;\n  }\n\n","sourceOld":"  protected int readSkipData(int level, IndexInput skipStream) throws IOException {\r\n    int delta;\r\n    if (currentFieldStoresPayloads) {\r\n      // the current field stores payloads.\r\n      // if the doc delta is odd then we have\r\n      // to read the current payload length\r\n      // because it differs from the length of the\r\n      // previous payload\r\n      delta = skipStream.readVInt();\r\n      if ((delta & 1) != 0) {\r\n        payloadLength[level] = skipStream.readVInt();\r\n      }\r\n      delta >>>= 1;\r\n    } else {\r\n      delta = skipStream.readVInt();\r\n    }\r\n    freqPointer[level] += skipStream.readVInt();\r\n    proxPointer[level] += skipStream.readVInt();\r\n    \r\n    return delta;\r\n  }\r\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8a9e385641d717e641408d8fbbc62be8fc766357","date":1256746606,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/DefaultSkipListReader#readSkipData(int,IndexInput).mjava","pathOld":"src/java/org/apache/lucene/index/DefaultSkipListReader#readSkipData(int,IndexInput).mjava","sourceNew":"  @Override\n  protected int readSkipData(int level, IndexInput skipStream) throws IOException {\n    int delta;\n    if (currentFieldStoresPayloads) {\n      // the current field stores payloads.\n      // if the doc delta is odd then we have\n      // to read the current payload length\n      // because it differs from the length of the\n      // previous payload\n      delta = skipStream.readVInt();\n      if ((delta & 1) != 0) {\n        payloadLength[level] = skipStream.readVInt();\n      }\n      delta >>>= 1;\n    } else {\n      delta = skipStream.readVInt();\n    }\n    freqPointer[level] += skipStream.readVInt();\n    proxPointer[level] += skipStream.readVInt();\n    \n    return delta;\n  }\n\n","sourceOld":"  protected int readSkipData(int level, IndexInput skipStream) throws IOException {\n    int delta;\n    if (currentFieldStoresPayloads) {\n      // the current field stores payloads.\n      // if the doc delta is odd then we have\n      // to read the current payload length\n      // because it differs from the length of the\n      // previous payload\n      delta = skipStream.readVInt();\n      if ((delta & 1) != 0) {\n        payloadLength[level] = skipStream.readVInt();\n      }\n      delta >>>= 1;\n    } else {\n      delta = skipStream.readVInt();\n    }\n    freqPointer[level] += skipStream.readVInt();\n    proxPointer[level] += skipStream.readVInt();\n    \n    return delta;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/DefaultSkipListReader#readSkipData(int,IndexInput).mjava","pathOld":"src/java/org/apache/lucene/index/DefaultSkipListReader#readSkipData(int,IndexInput).mjava","sourceNew":"  @Override\n  protected int readSkipData(int level, IndexInput skipStream) throws IOException {\n    int delta;\n    if (currentFieldStoresPayloads) {\n      // the current field stores payloads.\n      // if the doc delta is odd then we have\n      // to read the current payload length\n      // because it differs from the length of the\n      // previous payload\n      delta = skipStream.readVInt();\n      if ((delta & 1) != 0) {\n        payloadLength[level] = skipStream.readVInt();\n      }\n      delta >>>= 1;\n    } else {\n      delta = skipStream.readVInt();\n    }\n    freqPointer[level] += skipStream.readVInt();\n    proxPointer[level] += skipStream.readVInt();\n    \n    return delta;\n  }\n\n","sourceOld":"  @Override\n  protected int readSkipData(int level, IndexInput skipStream) throws IOException {\n    int delta;\n    if (currentFieldStoresPayloads) {\n      // the current field stores payloads.\n      // if the doc delta is odd then we have\n      // to read the current payload length\n      // because it differs from the length of the\n      // previous payload\n      delta = skipStream.readVInt();\n      if ((delta & 1) != 0) {\n        payloadLength[level] = skipStream.readVInt();\n      }\n      delta >>>= 1;\n    } else {\n      delta = skipStream.readVInt();\n    }\n    freqPointer[level] += skipStream.readVInt();\n    proxPointer[level] += skipStream.readVInt();\n    \n    return delta;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"8a9e385641d717e641408d8fbbc62be8fc766357":["2123bddbd65dea198cac380540636ce43a880403"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"2123bddbd65dea198cac380540636ce43a880403":["08d1ee9808e270c86ce5c9be08b8bd7a19d0a709"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["8a9e385641d717e641408d8fbbc62be8fc766357"],"08d1ee9808e270c86ce5c9be08b8bd7a19d0a709":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"8a9e385641d717e641408d8fbbc62be8fc766357":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["08d1ee9808e270c86ce5c9be08b8bd7a19d0a709"],"2123bddbd65dea198cac380540636ce43a880403":["8a9e385641d717e641408d8fbbc62be8fc766357"],"08d1ee9808e270c86ce5c9be08b8bd7a19d0a709":["2123bddbd65dea198cac380540636ce43a880403"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}