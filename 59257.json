{"path":"solr/solrj/src/java/org/apache/solr/client/solrj/impl/ConcurrentUpdateSolrClient.Builder#build().mjava","commits":[{"id":"e3c94a8b8bf47db4f968d9ae510ec8bbe1372088","date":1460069869,"type":0,"author":"Anshum Gupta","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/impl/ConcurrentUpdateSolrClient.Builder#build().mjava","pathOld":"/dev/null","sourceNew":"    /**\n     * Create a {@link ConcurrentUpdateSolrClient} based on the provided configuration options.\n     */\n    public ConcurrentUpdateSolrClient build() {\n      if (baseSolrUrl == null) {\n        throw new IllegalArgumentException(\"Cannot create HttpSolrClient without a valid baseSolrUrl!\");\n      }\n      \n      return new ConcurrentUpdateSolrClient(baseSolrUrl, httpClient, queueSize, threadCount, executorService, streamDeletes);\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["c07dc645ff236a7d51da2a5ef49a948dfbf8610c"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"5bdaf2cee03ff78b0a0cbf23df0095a3590b493b","date":1460110033,"type":0,"author":"Karl Wright","isMerge":true,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/impl/ConcurrentUpdateSolrClient.Builder#build().mjava","pathOld":"/dev/null","sourceNew":"    /**\n     * Create a {@link ConcurrentUpdateSolrClient} based on the provided configuration options.\n     */\n    public ConcurrentUpdateSolrClient build() {\n      if (baseSolrUrl == null) {\n        throw new IllegalArgumentException(\"Cannot create HttpSolrClient without a valid baseSolrUrl!\");\n      }\n      \n      return new ConcurrentUpdateSolrClient(baseSolrUrl, httpClient, queueSize, threadCount, executorService, streamDeletes);\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"c07dc645ff236a7d51da2a5ef49a948dfbf8610c","date":1498242650,"type":3,"author":"Anshum Gupta","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/impl/ConcurrentUpdateSolrClient.Builder#build().mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/impl/ConcurrentUpdateSolrClient.Builder#build().mjava","sourceNew":"    /**\n     * Create a {@link ConcurrentUpdateSolrClient} based on the provided configuration options.\n     */\n    public ConcurrentUpdateSolrClient build() {\n      if (baseSolrUrl == null) {\n        throw new IllegalArgumentException(\"Cannot create HttpSolrClient without a valid baseSolrUrl!\");\n      }\n      \n      return new ConcurrentUpdateSolrClient(this);\n    }\n\n","sourceOld":"    /**\n     * Create a {@link ConcurrentUpdateSolrClient} based on the provided configuration options.\n     */\n    public ConcurrentUpdateSolrClient build() {\n      if (baseSolrUrl == null) {\n        throw new IllegalArgumentException(\"Cannot create HttpSolrClient without a valid baseSolrUrl!\");\n      }\n      \n      return new ConcurrentUpdateSolrClient(baseSolrUrl, httpClient, queueSize, threadCount, executorService, streamDeletes);\n    }\n\n","bugFix":["e3c94a8b8bf47db4f968d9ae510ec8bbe1372088"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b7dfa64bc2074fb87d0ca70095a644c1ead107e1","date":1498356339,"type":3,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/impl/ConcurrentUpdateSolrClient.Builder#build().mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/impl/ConcurrentUpdateSolrClient.Builder#build().mjava","sourceNew":"    /**\n     * Create a {@link ConcurrentUpdateSolrClient} based on the provided configuration options.\n     */\n    public ConcurrentUpdateSolrClient build() {\n      if (baseSolrUrl == null) {\n        throw new IllegalArgumentException(\"Cannot create HttpSolrClient without a valid baseSolrUrl!\");\n      }\n      \n      return new ConcurrentUpdateSolrClient(this);\n    }\n\n","sourceOld":"    /**\n     * Create a {@link ConcurrentUpdateSolrClient} based on the provided configuration options.\n     */\n    public ConcurrentUpdateSolrClient build() {\n      if (baseSolrUrl == null) {\n        throw new IllegalArgumentException(\"Cannot create HttpSolrClient without a valid baseSolrUrl!\");\n      }\n      \n      return new ConcurrentUpdateSolrClient(baseSolrUrl, httpClient, queueSize, threadCount, executorService, streamDeletes);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"28288370235ed02234a64753cdbf0c6ec096304a","date":1498726817,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/impl/ConcurrentUpdateSolrClient.Builder#build().mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/impl/ConcurrentUpdateSolrClient.Builder#build().mjava","sourceNew":"    /**\n     * Create a {@link ConcurrentUpdateSolrClient} based on the provided configuration options.\n     */\n    public ConcurrentUpdateSolrClient build() {\n      if (baseSolrUrl == null) {\n        throw new IllegalArgumentException(\"Cannot create HttpSolrClient without a valid baseSolrUrl!\");\n      }\n      \n      return new ConcurrentUpdateSolrClient(this);\n    }\n\n","sourceOld":"    /**\n     * Create a {@link ConcurrentUpdateSolrClient} based on the provided configuration options.\n     */\n    public ConcurrentUpdateSolrClient build() {\n      if (baseSolrUrl == null) {\n        throw new IllegalArgumentException(\"Cannot create HttpSolrClient without a valid baseSolrUrl!\");\n      }\n      \n      return new ConcurrentUpdateSolrClient(baseSolrUrl, httpClient, queueSize, threadCount, executorService, streamDeletes);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"e3c94a8b8bf47db4f968d9ae510ec8bbe1372088":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"5bdaf2cee03ff78b0a0cbf23df0095a3590b493b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","e3c94a8b8bf47db4f968d9ae510ec8bbe1372088"],"b7dfa64bc2074fb87d0ca70095a644c1ead107e1":["5bdaf2cee03ff78b0a0cbf23df0095a3590b493b","c07dc645ff236a7d51da2a5ef49a948dfbf8610c"],"28288370235ed02234a64753cdbf0c6ec096304a":["5bdaf2cee03ff78b0a0cbf23df0095a3590b493b","c07dc645ff236a7d51da2a5ef49a948dfbf8610c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["28288370235ed02234a64753cdbf0c6ec096304a"],"c07dc645ff236a7d51da2a5ef49a948dfbf8610c":["5bdaf2cee03ff78b0a0cbf23df0095a3590b493b"]},"commit2Childs":{"e3c94a8b8bf47db4f968d9ae510ec8bbe1372088":["5bdaf2cee03ff78b0a0cbf23df0095a3590b493b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["e3c94a8b8bf47db4f968d9ae510ec8bbe1372088","5bdaf2cee03ff78b0a0cbf23df0095a3590b493b"],"5bdaf2cee03ff78b0a0cbf23df0095a3590b493b":["b7dfa64bc2074fb87d0ca70095a644c1ead107e1","28288370235ed02234a64753cdbf0c6ec096304a","c07dc645ff236a7d51da2a5ef49a948dfbf8610c"],"b7dfa64bc2074fb87d0ca70095a644c1ead107e1":[],"28288370235ed02234a64753cdbf0c6ec096304a":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"c07dc645ff236a7d51da2a5ef49a948dfbf8610c":["b7dfa64bc2074fb87d0ca70095a644c1ead107e1","28288370235ed02234a64753cdbf0c6ec096304a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["b7dfa64bc2074fb87d0ca70095a644c1ead107e1","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}