{"path":"solr/core/src/java/org/apache/solr/handler/component/TermsComponent#handleResponses(ResponseBuilder,ShardRequest).mjava","commits":[{"id":"c903c3d15906a3da96b8c0c2fb704491005fdbdb","date":1453508227,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/component/TermsComponent#handleResponses(ResponseBuilder,ShardRequest).mjava","pathOld":"solr/src/java/org/apache/solr/handler/component/TermsComponent#handleResponses(ResponseBuilder,ShardRequest).mjava","sourceNew":"  @Override\n  public void handleResponses(ResponseBuilder rb, ShardRequest sreq) {\n    if (!rb.doTerms || (sreq.purpose & ShardRequest.PURPOSE_GET_TERMS) == 0) {\n      return;\n    }\n    TermsHelper th = rb._termsHelper;\n    if (th != null) {\n      for (ShardResponse srsp : sreq.responses) {\n        @SuppressWarnings(\"unchecked\")\n        NamedList<NamedList<Number>> terms = (NamedList<NamedList<Number>>) srsp.getSolrResponse().getResponse().get(\"terms\");\n        th.parse(terms);\n      }\n    }\n  }\n\n","sourceOld":"  @Override\n  public void handleResponses(ResponseBuilder rb, ShardRequest sreq) {\n    if (!rb.doTerms || (sreq.purpose & ShardRequest.PURPOSE_GET_TERMS) == 0) {\n      return;\n    }\n    TermsHelper th = rb._termsHelper;\n    if (th != null) {\n      for (ShardResponse srsp : sreq.responses) {\n        @SuppressWarnings(\"unchecked\")\n        NamedList<NamedList<Number>> terms = (NamedList<NamedList<Number>>) srsp.getSolrResponse().getResponse().get(\"terms\");\n        th.parse(terms);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a258fbb26824fd104ed795e5d9033d2d040049ee","date":1453508252,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/component/TermsComponent#handleResponses(ResponseBuilder,ShardRequest).mjava","pathOld":"solr/src/java/org/apache/solr/handler/component/TermsComponent#handleResponses(ResponseBuilder,ShardRequest).mjava","sourceNew":"  @Override\n  public void handleResponses(ResponseBuilder rb, ShardRequest sreq) {\n    if (!rb.doTerms || (sreq.purpose & ShardRequest.PURPOSE_GET_TERMS) == 0) {\n      return;\n    }\n    TermsHelper th = rb._termsHelper;\n    if (th != null) {\n      for (ShardResponse srsp : sreq.responses) {\n        @SuppressWarnings(\"unchecked\")\n        NamedList<NamedList<Number>> terms = (NamedList<NamedList<Number>>) srsp.getSolrResponse().getResponse().get(\"terms\");\n        th.parse(terms);\n      }\n    }\n  }\n\n","sourceOld":"  @Override\n  public void handleResponses(ResponseBuilder rb, ShardRequest sreq) {\n    if (!rb.doTerms || (sreq.purpose & ShardRequest.PURPOSE_GET_TERMS) == 0) {\n      return;\n    }\n    TermsHelper th = rb._termsHelper;\n    if (th != null) {\n      for (ShardResponse srsp : sreq.responses) {\n        @SuppressWarnings(\"unchecked\")\n        NamedList<NamedList<Number>> terms = (NamedList<NamedList<Number>>) srsp.getSolrResponse().getResponse().get(\"terms\");\n        th.parse(terms);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/handler/component/TermsComponent#handleResponses(ResponseBuilder,ShardRequest).mjava","pathOld":"solr/src/java/org/apache/solr/handler/component/TermsComponent#handleResponses(ResponseBuilder,ShardRequest).mjava","sourceNew":"  @Override\n  public void handleResponses(ResponseBuilder rb, ShardRequest sreq) {\n    if (!rb.doTerms || (sreq.purpose & ShardRequest.PURPOSE_GET_TERMS) == 0) {\n      return;\n    }\n    TermsHelper th = rb._termsHelper;\n    if (th != null) {\n      for (ShardResponse srsp : sreq.responses) {\n        @SuppressWarnings(\"unchecked\")\n        NamedList<NamedList<Number>> terms = (NamedList<NamedList<Number>>) srsp.getSolrResponse().getResponse().get(\"terms\");\n        th.parse(terms);\n      }\n    }\n  }\n\n","sourceOld":"  @Override\n  public void handleResponses(ResponseBuilder rb, ShardRequest sreq) {\n    if (!rb.doTerms || (sreq.purpose & ShardRequest.PURPOSE_GET_TERMS) == 0) {\n      return;\n    }\n    TermsHelper th = rb._termsHelper;\n    if (th != null) {\n      for (ShardResponse srsp : sreq.responses) {\n        @SuppressWarnings(\"unchecked\")\n        NamedList<NamedList<Number>> terms = (NamedList<NamedList<Number>>) srsp.getSolrResponse().getResponse().get(\"terms\");\n        th.parse(terms);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8b92f86e90a95b8fc860ddecd9470ffb89a9fa7d","date":1467828398,"type":3,"author":"jbernste","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/component/TermsComponent#handleResponses(ResponseBuilder,ShardRequest).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/component/TermsComponent#handleResponses(ResponseBuilder,ShardRequest).mjava","sourceNew":"  @Override\n  public void handleResponses(ResponseBuilder rb, ShardRequest sreq) {\n    if (!rb.doTerms || (sreq.purpose & ShardRequest.PURPOSE_GET_TERMS) == 0) {\n      return;\n    }\n    TermsHelper th = rb._termsHelper;\n    if (th != null) {\n      for (ShardResponse srsp : sreq.responses) {\n        @SuppressWarnings(\"unchecked\")\n        NamedList<NamedList<Number>> terms = (NamedList<NamedList<Number>>) srsp.getSolrResponse().getResponse().get(\"terms\");\n        th.parse(terms);\n\n\n        NamedList<Number> stats = (NamedList<Number>)srsp.getSolrResponse().getResponse().get(\"stats\");\n        if(stats != null) {\n          th.numDocs += stats.get(\"numDocs\").longValue();\n          th.stats = true;\n        }\n      }\n    }\n  }\n\n","sourceOld":"  @Override\n  public void handleResponses(ResponseBuilder rb, ShardRequest sreq) {\n    if (!rb.doTerms || (sreq.purpose & ShardRequest.PURPOSE_GET_TERMS) == 0) {\n      return;\n    }\n    TermsHelper th = rb._termsHelper;\n    if (th != null) {\n      for (ShardResponse srsp : sreq.responses) {\n        @SuppressWarnings(\"unchecked\")\n        NamedList<NamedList<Number>> terms = (NamedList<NamedList<Number>>) srsp.getSolrResponse().getResponse().get(\"terms\");\n        th.parse(terms);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c6d4ff6bc316c2cad4d245958a058040d9add305","date":1467828398,"type":3,"author":"jbernste","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/component/TermsComponent#handleResponses(ResponseBuilder,ShardRequest).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/component/TermsComponent#handleResponses(ResponseBuilder,ShardRequest).mjava","sourceNew":"  @Override\n  public void handleResponses(ResponseBuilder rb, ShardRequest sreq) {\n    if (!rb.doTerms || (sreq.purpose & ShardRequest.PURPOSE_GET_TERMS) == 0) {\n      return;\n    }\n    TermsHelper th = rb._termsHelper;\n    if (th != null) {\n      for (ShardResponse srsp : sreq.responses) {\n        @SuppressWarnings(\"unchecked\")\n        NamedList<NamedList<Number>> terms = (NamedList<NamedList<Number>>) srsp.getSolrResponse().getResponse().get(\"terms\");\n        th.parse(terms);\n\n\n        NamedList<Number> stats = (NamedList<Number>)srsp.getSolrResponse().getResponse().get(\"indexstats\");\n        if(stats != null) {\n          th.numDocs += stats.get(\"numDocs\").longValue();\n          th.stats = true;\n        }\n      }\n    }\n  }\n\n","sourceOld":"  @Override\n  public void handleResponses(ResponseBuilder rb, ShardRequest sreq) {\n    if (!rb.doTerms || (sreq.purpose & ShardRequest.PURPOSE_GET_TERMS) == 0) {\n      return;\n    }\n    TermsHelper th = rb._termsHelper;\n    if (th != null) {\n      for (ShardResponse srsp : sreq.responses) {\n        @SuppressWarnings(\"unchecked\")\n        NamedList<NamedList<Number>> terms = (NamedList<NamedList<Number>>) srsp.getSolrResponse().getResponse().get(\"terms\");\n        th.parse(terms);\n\n\n        NamedList<Number> stats = (NamedList<Number>)srsp.getSolrResponse().getResponse().get(\"stats\");\n        if(stats != null) {\n          th.numDocs += stats.get(\"numDocs\").longValue();\n          th.stats = true;\n        }\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/handler/component/TermsComponent#handleResponses(ResponseBuilder,ShardRequest).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/component/TermsComponent#handleResponses(ResponseBuilder,ShardRequest).mjava","sourceNew":"  @Override\n  public void handleResponses(ResponseBuilder rb, ShardRequest sreq) {\n    if (!rb.doTerms || (sreq.purpose & ShardRequest.PURPOSE_GET_TERMS) == 0) {\n      return;\n    }\n    TermsHelper th = rb._termsHelper;\n    if (th != null) {\n      for (ShardResponse srsp : sreq.responses) {\n        @SuppressWarnings(\"unchecked\")\n        NamedList<NamedList<Number>> terms = (NamedList<NamedList<Number>>) srsp.getSolrResponse().getResponse().get(\"terms\");\n        th.parse(terms);\n\n\n        NamedList<Number> stats = (NamedList<Number>)srsp.getSolrResponse().getResponse().get(\"indexstats\");\n        if(stats != null) {\n          th.numDocs += stats.get(\"numDocs\").longValue();\n          th.stats = true;\n        }\n      }\n    }\n  }\n\n","sourceOld":"  @Override\n  public void handleResponses(ResponseBuilder rb, ShardRequest sreq) {\n    if (!rb.doTerms || (sreq.purpose & ShardRequest.PURPOSE_GET_TERMS) == 0) {\n      return;\n    }\n    TermsHelper th = rb._termsHelper;\n    if (th != null) {\n      for (ShardResponse srsp : sreq.responses) {\n        @SuppressWarnings(\"unchecked\")\n        NamedList<NamedList<Number>> terms = (NamedList<NamedList<Number>>) srsp.getSolrResponse().getResponse().get(\"terms\");\n        th.parse(terms);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"194ca6939cf04fa69e4bbcaf0fed482ae1f5fa53","date":1490757519,"type":3,"author":"Shai Erera","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/component/TermsComponent#handleResponses(ResponseBuilder,ShardRequest).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/component/TermsComponent#handleResponses(ResponseBuilder,ShardRequest).mjava","sourceNew":"  @Override\n  public void handleResponses(ResponseBuilder rb, ShardRequest sreq) {\n    if (!rb.doTerms || (sreq.purpose & ShardRequest.PURPOSE_GET_TERMS) == 0) {\n      return;\n    }\n    TermsHelper th = rb._termsHelper;\n    if (th != null) {\n      for (ShardResponse srsp : sreq.responses) {\n        @SuppressWarnings(\"unchecked\")\n        NamedList<NamedList<Object>> terms = (NamedList<NamedList<Object>>) srsp.getSolrResponse().getResponse().get(\"terms\");\n        th.parse(terms);\n\n\n        NamedList<Number> stats = (NamedList<Number>)srsp.getSolrResponse().getResponse().get(\"indexstats\");\n        if(stats != null) {\n          th.numDocs += stats.get(\"numDocs\").longValue();\n          th.stats = true;\n        }\n      }\n    }\n  }\n\n","sourceOld":"  @Override\n  public void handleResponses(ResponseBuilder rb, ShardRequest sreq) {\n    if (!rb.doTerms || (sreq.purpose & ShardRequest.PURPOSE_GET_TERMS) == 0) {\n      return;\n    }\n    TermsHelper th = rb._termsHelper;\n    if (th != null) {\n      for (ShardResponse srsp : sreq.responses) {\n        @SuppressWarnings(\"unchecked\")\n        NamedList<NamedList<Number>> terms = (NamedList<NamedList<Number>>) srsp.getSolrResponse().getResponse().get(\"terms\");\n        th.parse(terms);\n\n\n        NamedList<Number> stats = (NamedList<Number>)srsp.getSolrResponse().getResponse().get(\"indexstats\");\n        if(stats != null) {\n          th.numDocs += stats.get(\"numDocs\").longValue();\n          th.stats = true;\n        }\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a4302dfeb5d01c940f69c48bec27f03ad8828668","date":1490873946,"type":3,"author":"Shai Erera","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/component/TermsComponent#handleResponses(ResponseBuilder,ShardRequest).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/component/TermsComponent#handleResponses(ResponseBuilder,ShardRequest).mjava","sourceNew":"  @Override\n  public void handleResponses(ResponseBuilder rb, ShardRequest sreq) {\n    if (!rb.doTerms || (sreq.purpose & ShardRequest.PURPOSE_GET_TERMS) == 0) {\n      return;\n    }\n    TermsHelper th = rb._termsHelper;\n    if (th != null) {\n      for (ShardResponse srsp : sreq.responses) {\n        @SuppressWarnings(\"unchecked\")\n        NamedList<NamedList<Object>> terms = (NamedList<NamedList<Object>>) srsp.getSolrResponse().getResponse().get(\"terms\");\n        th.parse(terms);\n\n\n        NamedList<Number> stats = (NamedList<Number>)srsp.getSolrResponse().getResponse().get(\"indexstats\");\n        if(stats != null) {\n          th.numDocs += stats.get(\"numDocs\").longValue();\n          th.stats = true;\n        }\n      }\n    }\n  }\n\n","sourceOld":"  @Override\n  public void handleResponses(ResponseBuilder rb, ShardRequest sreq) {\n    if (!rb.doTerms || (sreq.purpose & ShardRequest.PURPOSE_GET_TERMS) == 0) {\n      return;\n    }\n    TermsHelper th = rb._termsHelper;\n    if (th != null) {\n      for (ShardResponse srsp : sreq.responses) {\n        @SuppressWarnings(\"unchecked\")\n        NamedList<NamedList<Number>> terms = (NamedList<NamedList<Number>>) srsp.getSolrResponse().getResponse().get(\"terms\");\n        th.parse(terms);\n\n\n        NamedList<Number> stats = (NamedList<Number>)srsp.getSolrResponse().getResponse().get(\"indexstats\");\n        if(stats != null) {\n          th.numDocs += stats.get(\"numDocs\").longValue();\n          th.stats = true;\n        }\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8582f07e9350eaeb33bf6c4617b8c9895d99c839","date":1591307386,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/component/TermsComponent#handleResponses(ResponseBuilder,ShardRequest).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/component/TermsComponent#handleResponses(ResponseBuilder,ShardRequest).mjava","sourceNew":"  @Override\n  public void handleResponses(ResponseBuilder rb, ShardRequest sreq) {\n    if (!rb.doTerms || (sreq.purpose & ShardRequest.PURPOSE_GET_TERMS) == 0) {\n      return;\n    }\n    TermsHelper th = rb._termsHelper;\n    if (th != null) {\n      for (ShardResponse srsp : sreq.responses) {\n        @SuppressWarnings(\"unchecked\")\n        NamedList<NamedList<Object>> terms = (NamedList<NamedList<Object>>) srsp.getSolrResponse().getResponse().get(\"terms\");\n        th.parse(terms);\n\n\n        @SuppressWarnings({\"unchecked\"})\n        NamedList<Number> stats = (NamedList<Number>)srsp.getSolrResponse().getResponse().get(\"indexstats\");\n        if(stats != null) {\n          th.numDocs += stats.get(\"numDocs\").longValue();\n          th.stats = true;\n        }\n      }\n    }\n  }\n\n","sourceOld":"  @Override\n  public void handleResponses(ResponseBuilder rb, ShardRequest sreq) {\n    if (!rb.doTerms || (sreq.purpose & ShardRequest.PURPOSE_GET_TERMS) == 0) {\n      return;\n    }\n    TermsHelper th = rb._termsHelper;\n    if (th != null) {\n      for (ShardResponse srsp : sreq.responses) {\n        @SuppressWarnings(\"unchecked\")\n        NamedList<NamedList<Object>> terms = (NamedList<NamedList<Object>>) srsp.getSolrResponse().getResponse().get(\"terms\");\n        th.parse(terms);\n\n\n        NamedList<Number> stats = (NamedList<Number>)srsp.getSolrResponse().getResponse().get(\"indexstats\");\n        if(stats != null) {\n          th.numDocs += stats.get(\"numDocs\").longValue();\n          th.stats = true;\n        }\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"194ca6939cf04fa69e4bbcaf0fed482ae1f5fa53":["c6d4ff6bc316c2cad4d245958a058040d9add305"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a4302dfeb5d01c940f69c48bec27f03ad8828668":["c6d4ff6bc316c2cad4d245958a058040d9add305"],"c26f00b574427b55127e869b935845554afde1fa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","c903c3d15906a3da96b8c0c2fb704491005fdbdb"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"c6d4ff6bc316c2cad4d245958a058040d9add305":["8b92f86e90a95b8fc860ddecd9470ffb89a9fa7d"],"a258fbb26824fd104ed795e5d9033d2d040049ee":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"8b92f86e90a95b8fc860ddecd9470ffb89a9fa7d":["c26f00b574427b55127e869b935845554afde1fa"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["c26f00b574427b55127e869b935845554afde1fa","c6d4ff6bc316c2cad4d245958a058040d9add305"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["8582f07e9350eaeb33bf6c4617b8c9895d99c839"],"8582f07e9350eaeb33bf6c4617b8c9895d99c839":["194ca6939cf04fa69e4bbcaf0fed482ae1f5fa53"]},"commit2Childs":{"194ca6939cf04fa69e4bbcaf0fed482ae1f5fa53":["8582f07e9350eaeb33bf6c4617b8c9895d99c839"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["c26f00b574427b55127e869b935845554afde1fa"],"a4302dfeb5d01c940f69c48bec27f03ad8828668":[],"c26f00b574427b55127e869b935845554afde1fa":["8b92f86e90a95b8fc860ddecd9470ffb89a9fa7d","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c903c3d15906a3da96b8c0c2fb704491005fdbdb","c26f00b574427b55127e869b935845554afde1fa","a258fbb26824fd104ed795e5d9033d2d040049ee"],"c6d4ff6bc316c2cad4d245958a058040d9add305":["194ca6939cf04fa69e4bbcaf0fed482ae1f5fa53","a4302dfeb5d01c940f69c48bec27f03ad8828668","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"a258fbb26824fd104ed795e5d9033d2d040049ee":[],"8b92f86e90a95b8fc860ddecd9470ffb89a9fa7d":["c6d4ff6bc316c2cad4d245958a058040d9add305"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"8582f07e9350eaeb33bf6c4617b8c9895d99c839":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["a4302dfeb5d01c940f69c48bec27f03ad8828668","a258fbb26824fd104ed795e5d9033d2d040049ee","4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}