{"path":"solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/TestXPathRecordReader#testError().mjava","commits":[{"id":"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91","date":1306767085,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/TestXPathRecordReader#testError().mjava","pathOld":"solr/contrib/dataimporthandler/src/test/java/org/apache/solr/handler/dataimport/TestXPathRecordReader#testError().mjava","sourceNew":"  @Test\n  public void testError(){\n    String malformedXml = \"<root>\\n\" +\n          \"    <node>\\n\" +\n          \"        <id>1</id>\\n\" +\n          \"        <desc>test1</desc>\\n\" +\n          \"    </node>\\n\" +\n          \"    <node>\\n\" +\n          \"        <id>2</id>\\n\" +\n          \"        <desc>test2</desc>\\n\" +\n          \"    </node>\\n\" +\n          \"    <node>\\n\" +\n          \"        <id/>3</id>\\n\" +   // invalid XML\n          \"        <desc>test3</desc>\\n\" +\n          \"    </node>\\n\" +\n          \"</root>\";\n    XPathRecordReader rr = new XPathRecordReader(\"/root/node\");\n    rr.addField(\"id\", \"/root/node/id\", true);\n    rr.addField(\"desc\", \"/root/node/desc\", true);\n   try {\n     rr.getAllRecords(new StringReader(malformedXml));\n     fail(\"A RuntimeException was expected: the input XML is invalid.\");\n   } catch (Exception e) { }\n }\n\n","sourceOld":"  @Test\n  public void testError(){\n    String malformedXml = \"<root>\\n\" +\n          \"    <node>\\n\" +\n          \"        <id>1</id>\\n\" +\n          \"        <desc>test1</desc>\\n\" +\n          \"    </node>\\n\" +\n          \"    <node>\\n\" +\n          \"        <id>2</id>\\n\" +\n          \"        <desc>test2</desc>\\n\" +\n          \"    </node>\\n\" +\n          \"    <node>\\n\" +\n          \"        <id/>3</id>\\n\" +   // invalid XML\n          \"        <desc>test3</desc>\\n\" +\n          \"    </node>\\n\" +\n          \"</root>\";\n    XPathRecordReader rr = new XPathRecordReader(\"/root/node\");\n    rr.addField(\"id\", \"/root/node/id\", true);\n    rr.addField(\"desc\", \"/root/node/desc\", true);\n   try {\n     rr.getAllRecords(new StringReader(malformedXml));\n     fail(\"A RuntimeException was expected: the input XML is invalid.\");\n   } catch (Exception e) { }\n }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/TestXPathRecordReader#testError().mjava","pathOld":"solr/contrib/dataimporthandler/src/test/java/org/apache/solr/handler/dataimport/TestXPathRecordReader#testError().mjava","sourceNew":"  @Test\n  public void testError(){\n    String malformedXml = \"<root>\\n\" +\n          \"    <node>\\n\" +\n          \"        <id>1</id>\\n\" +\n          \"        <desc>test1</desc>\\n\" +\n          \"    </node>\\n\" +\n          \"    <node>\\n\" +\n          \"        <id>2</id>\\n\" +\n          \"        <desc>test2</desc>\\n\" +\n          \"    </node>\\n\" +\n          \"    <node>\\n\" +\n          \"        <id/>3</id>\\n\" +   // invalid XML\n          \"        <desc>test3</desc>\\n\" +\n          \"    </node>\\n\" +\n          \"</root>\";\n    XPathRecordReader rr = new XPathRecordReader(\"/root/node\");\n    rr.addField(\"id\", \"/root/node/id\", true);\n    rr.addField(\"desc\", \"/root/node/desc\", true);\n   try {\n     rr.getAllRecords(new StringReader(malformedXml));\n     fail(\"A RuntimeException was expected: the input XML is invalid.\");\n   } catch (Exception e) { }\n }\n\n","sourceOld":"  @Test\n  public void testError(){\n    String malformedXml = \"<root>\\n\" +\n          \"    <node>\\n\" +\n          \"        <id>1</id>\\n\" +\n          \"        <desc>test1</desc>\\n\" +\n          \"    </node>\\n\" +\n          \"    <node>\\n\" +\n          \"        <id>2</id>\\n\" +\n          \"        <desc>test2</desc>\\n\" +\n          \"    </node>\\n\" +\n          \"    <node>\\n\" +\n          \"        <id/>3</id>\\n\" +   // invalid XML\n          \"        <desc>test3</desc>\\n\" +\n          \"    </node>\\n\" +\n          \"</root>\";\n    XPathRecordReader rr = new XPathRecordReader(\"/root/node\");\n    rr.addField(\"id\", \"/root/node/id\", true);\n    rr.addField(\"desc\", \"/root/node/desc\", true);\n   try {\n     rr.getAllRecords(new StringReader(malformedXml));\n     fail(\"A RuntimeException was expected: the input XML is invalid.\");\n   } catch (Exception e) { }\n }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8d7153ce425b1e39cf54f2eb61f355874c4f6700","date":1564418860,"type":3,"author":"Munendra S N","isMerge":false,"pathNew":"solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/TestXPathRecordReader#testError().mjava","pathOld":"solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/TestXPathRecordReader#testError().mjava","sourceNew":"  @Test\n  public void testError(){\n    String malformedXml = \"<root>\\n\" +\n          \"    <node>\\n\" +\n          \"        <id>1</id>\\n\" +\n          \"        <desc>test1</desc>\\n\" +\n          \"    </node>\\n\" +\n          \"    <node>\\n\" +\n          \"        <id>2</id>\\n\" +\n          \"        <desc>test2</desc>\\n\" +\n          \"    </node>\\n\" +\n          \"    <node>\\n\" +\n          \"        <id/>3</id>\\n\" +   // invalid XML\n          \"        <desc>test3</desc>\\n\" +\n          \"    </node>\\n\" +\n          \"</root>\";\n    XPathRecordReader rr = new XPathRecordReader(\"/root/node\");\n    rr.addField(\"id\", \"/root/node/id\", true);\n    rr.addField(\"desc\", \"/root/node/desc\", true);\n    RuntimeException e = expectThrows(RuntimeException.class, () -> rr.getAllRecords(new StringReader(malformedXml)));\n    assertTrue(e.getMessage().contains(\"Unexpected close tag </id>\"));\n }\n\n","sourceOld":"  @Test\n  public void testError(){\n    String malformedXml = \"<root>\\n\" +\n          \"    <node>\\n\" +\n          \"        <id>1</id>\\n\" +\n          \"        <desc>test1</desc>\\n\" +\n          \"    </node>\\n\" +\n          \"    <node>\\n\" +\n          \"        <id>2</id>\\n\" +\n          \"        <desc>test2</desc>\\n\" +\n          \"    </node>\\n\" +\n          \"    <node>\\n\" +\n          \"        <id/>3</id>\\n\" +   // invalid XML\n          \"        <desc>test3</desc>\\n\" +\n          \"    </node>\\n\" +\n          \"</root>\";\n    XPathRecordReader rr = new XPathRecordReader(\"/root/node\");\n    rr.addField(\"id\", \"/root/node/id\", true);\n    rr.addField(\"desc\", \"/root/node/desc\", true);\n   try {\n     rr.getAllRecords(new StringReader(malformedXml));\n     fail(\"A RuntimeException was expected: the input XML is invalid.\");\n   } catch (Exception e) { }\n }\n\n","bugFix":["6835a774af2278133828a0e808bd578258b42ed2","fcd6cfe8abcb5337766abe79cabfff7f9c1f6ead"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f8061ddd97f3352007d927dae445884a6f3d857b","date":1564988276,"type":3,"author":"Atri Sharma","isMerge":true,"pathNew":"solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/TestXPathRecordReader#testError().mjava","pathOld":"solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/TestXPathRecordReader#testError().mjava","sourceNew":"  @Test\n  public void testError(){\n    String malformedXml = \"<root>\\n\" +\n          \"    <node>\\n\" +\n          \"        <id>1</id>\\n\" +\n          \"        <desc>test1</desc>\\n\" +\n          \"    </node>\\n\" +\n          \"    <node>\\n\" +\n          \"        <id>2</id>\\n\" +\n          \"        <desc>test2</desc>\\n\" +\n          \"    </node>\\n\" +\n          \"    <node>\\n\" +\n          \"        <id/>3</id>\\n\" +   // invalid XML\n          \"        <desc>test3</desc>\\n\" +\n          \"    </node>\\n\" +\n          \"</root>\";\n    XPathRecordReader rr = new XPathRecordReader(\"/root/node\");\n    rr.addField(\"id\", \"/root/node/id\", true);\n    rr.addField(\"desc\", \"/root/node/desc\", true);\n    RuntimeException e = expectThrows(RuntimeException.class, () -> rr.getAllRecords(new StringReader(malformedXml)));\n    assertTrue(e.getMessage().contains(\"Unexpected close tag </id>\"));\n }\n\n","sourceOld":"  @Test\n  public void testError(){\n    String malformedXml = \"<root>\\n\" +\n          \"    <node>\\n\" +\n          \"        <id>1</id>\\n\" +\n          \"        <desc>test1</desc>\\n\" +\n          \"    </node>\\n\" +\n          \"    <node>\\n\" +\n          \"        <id>2</id>\\n\" +\n          \"        <desc>test2</desc>\\n\" +\n          \"    </node>\\n\" +\n          \"    <node>\\n\" +\n          \"        <id/>3</id>\\n\" +   // invalid XML\n          \"        <desc>test3</desc>\\n\" +\n          \"    </node>\\n\" +\n          \"</root>\";\n    XPathRecordReader rr = new XPathRecordReader(\"/root/node\");\n    rr.addField(\"id\", \"/root/node/id\", true);\n    rr.addField(\"desc\", \"/root/node/desc\", true);\n   try {\n     rr.getAllRecords(new StringReader(malformedXml));\n     fail(\"A RuntimeException was expected: the input XML is invalid.\");\n   } catch (Exception e) { }\n }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d2c8f5c46c2501b61e2f55eb7ee59e6c5372290b","date":1598712724,"type":4,"author":"Alexandre Rafalovitch","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/TestXPathRecordReader#testError().mjava","sourceNew":null,"sourceOld":"  @Test\n  public void testError(){\n    String malformedXml = \"<root>\\n\" +\n          \"    <node>\\n\" +\n          \"        <id>1</id>\\n\" +\n          \"        <desc>test1</desc>\\n\" +\n          \"    </node>\\n\" +\n          \"    <node>\\n\" +\n          \"        <id>2</id>\\n\" +\n          \"        <desc>test2</desc>\\n\" +\n          \"    </node>\\n\" +\n          \"    <node>\\n\" +\n          \"        <id/>3</id>\\n\" +   // invalid XML\n          \"        <desc>test3</desc>\\n\" +\n          \"    </node>\\n\" +\n          \"</root>\";\n    XPathRecordReader rr = new XPathRecordReader(\"/root/node\");\n    rr.addField(\"id\", \"/root/node/id\", true);\n    rr.addField(\"desc\", \"/root/node/desc\", true);\n    RuntimeException e = expectThrows(RuntimeException.class, () -> rr.getAllRecords(new StringReader(malformedXml)));\n    assertTrue(e.getMessage().contains(\"Unexpected close tag </id>\"));\n }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"d2c8f5c46c2501b61e2f55eb7ee59e6c5372290b":["8d7153ce425b1e39cf54f2eb61f355874c4f6700"],"8d7153ce425b1e39cf54f2eb61f355874c4f6700":["c26f00b574427b55127e869b935845554afde1fa"],"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"c26f00b574427b55127e869b935845554afde1fa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","5128b7b3b73fedff05fdc5ea2e6be53c1020bb91"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"f8061ddd97f3352007d927dae445884a6f3d857b":["c26f00b574427b55127e869b935845554afde1fa","8d7153ce425b1e39cf54f2eb61f355874c4f6700"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["d2c8f5c46c2501b61e2f55eb7ee59e6c5372290b"]},"commit2Childs":{"d2c8f5c46c2501b61e2f55eb7ee59e6c5372290b":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"8d7153ce425b1e39cf54f2eb61f355874c4f6700":["d2c8f5c46c2501b61e2f55eb7ee59e6c5372290b","f8061ddd97f3352007d927dae445884a6f3d857b"],"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91":["c26f00b574427b55127e869b935845554afde1fa"],"c26f00b574427b55127e869b935845554afde1fa":["8d7153ce425b1e39cf54f2eb61f355874c4f6700","f8061ddd97f3352007d927dae445884a6f3d857b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["5128b7b3b73fedff05fdc5ea2e6be53c1020bb91","c26f00b574427b55127e869b935845554afde1fa"],"f8061ddd97f3352007d927dae445884a6f3d857b":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["f8061ddd97f3352007d927dae445884a6f3d857b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}