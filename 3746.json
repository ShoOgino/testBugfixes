{"path":"solr/test-framework/src/java/org/apache/solr/util/BadHdfsThreadsFilter#reject(Thread).mjava","commits":[{"id":"4a78f1f0462a0ccc46e25b48f859357a3aced3d2","date":1427120193,"type":0,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/util/BadHdfsThreadsFilter#reject(Thread).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public boolean reject(Thread t) {\n    String name = t.getName();\n    if (name.startsWith(\"IPC Parameter Sending Thread \")) { // SOLR-5007\n      return true;\n    } else if (name.startsWith(\"org.apache.hadoop.hdfs.PeerCache\")) { // SOLR-7288\n      return true;\n    } else if (name.startsWith(\"LeaseRenewer\")) { // SOLR-7287\n      return true;\n    }\n    return false;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"86be49804fa962bd639cc70dd7ace1127847fb37","date":1427163246,"type":4,"author":"Mark Robert Miller","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/test-framework/src/java/org/apache/solr/util/BadHdfsThreadsFilter#reject(Thread).mjava","sourceNew":null,"sourceOld":"  @Override\n  public boolean reject(Thread t) {\n    String name = t.getName();\n    if (name.startsWith(\"IPC Parameter Sending Thread \")) { // SOLR-5007\n      return true;\n    } else if (name.startsWith(\"org.apache.hadoop.hdfs.PeerCache\")) { // SOLR-7288\n      return true;\n    } else if (name.startsWith(\"LeaseRenewer\")) { // SOLR-7287\n      return true;\n    }\n    return false;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2fadc59d34e6c9170e6dc932b507f363fb6034f6","date":1427163373,"type":0,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/util/BadHdfsThreadsFilter#reject(Thread).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public boolean reject(Thread t) {\n    String name = t.getName();\n    if (name.startsWith(\"IPC Parameter Sending Thread \")) { // SOLR-5007\n      return true;\n    } else if (name.startsWith(\"org.apache.hadoop.hdfs.PeerCache\")) { // SOLR-7288\n      return true;\n    } else if (name.startsWith(\"LeaseRenewer\")) { // SOLR-7287\n      return true;\n    }\n    return false;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","date":1427779360,"type":0,"author":"Ryan Ernst","isMerge":true,"pathNew":"solr/test-framework/src/java/org/apache/solr/util/BadHdfsThreadsFilter#reject(Thread).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public boolean reject(Thread t) {\n    String name = t.getName();\n    if (name.startsWith(\"IPC Parameter Sending Thread \")) { // SOLR-5007\n      return true;\n    } else if (name.startsWith(\"org.apache.hadoop.hdfs.PeerCache\")) { // SOLR-7288\n      return true;\n    } else if (name.startsWith(\"LeaseRenewer\")) { // SOLR-7287\n      return true;\n    }\n    return false;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a92ffe0d2961113e5588e614f8dc22b42bf10a95","date":1503304229,"type":3,"author":"Cao Manh Dat","isMerge":true,"pathNew":"solr/test-framework/src/java/org/apache/solr/util/BadHdfsThreadsFilter#reject(Thread).mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/util/BadHdfsThreadsFilter#reject(Thread).mjava","sourceNew":"  @Override\n  public boolean reject(Thread t) {\n    String name = t.getName();\n    if (name.startsWith(\"IPC Parameter Sending Thread \")) { // SOLR-5007\n      return true;\n    } else if (name.startsWith(\"org.apache.hadoop.hdfs.PeerCache\")) { // SOLR-7288\n      return true;\n    } else if (name.startsWith(\"LeaseRenewer\")) { // SOLR-7287\n      return true;\n    } else if (name.startsWith(\"org.apache.hadoop.fs.FileSystem$Statistics\")) { // SOLR-11261\n      return true;\n    }\n    return false;\n  }\n\n","sourceOld":"  @Override\n  public boolean reject(Thread t) {\n    String name = t.getName();\n    if (name.startsWith(\"IPC Parameter Sending Thread \")) { // SOLR-5007\n      return true;\n    } else if (name.startsWith(\"org.apache.hadoop.hdfs.PeerCache\")) { // SOLR-7288\n      return true;\n    } else if (name.startsWith(\"LeaseRenewer\")) { // SOLR-7287\n      return true;\n    }\n    return false;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fab4742d912cc339bf05699cf6272d7e9342ac11","date":1503243870,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/util/BadHdfsThreadsFilter#reject(Thread).mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/util/BadHdfsThreadsFilter#reject(Thread).mjava","sourceNew":"  @Override\n  public boolean reject(Thread t) {\n    String name = t.getName();\n    if (name.startsWith(\"IPC Parameter Sending Thread \")) { // SOLR-5007\n      return true;\n    } else if (name.startsWith(\"org.apache.hadoop.hdfs.PeerCache\")) { // SOLR-7288\n      return true;\n    } else if (name.startsWith(\"LeaseRenewer\")) { // SOLR-7287\n      return true;\n    } else if (name.startsWith(\"org.apache.hadoop.fs.FileSystem$Statistics\")) { // SOLR-11261\n      return true;\n    }\n    return false;\n  }\n\n","sourceOld":"  @Override\n  public boolean reject(Thread t) {\n    String name = t.getName();\n    if (name.startsWith(\"IPC Parameter Sending Thread \")) { // SOLR-5007\n      return true;\n    } else if (name.startsWith(\"org.apache.hadoop.hdfs.PeerCache\")) { // SOLR-7288\n      return true;\n    } else if (name.startsWith(\"LeaseRenewer\")) { // SOLR-7287\n      return true;\n    }\n    return false;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3051d6122751c8f6cc1e9cf24592658b59843ec2","date":1503298024,"type":3,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"solr/test-framework/src/java/org/apache/solr/util/BadHdfsThreadsFilter#reject(Thread).mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/util/BadHdfsThreadsFilter#reject(Thread).mjava","sourceNew":"  @Override\n  public boolean reject(Thread t) {\n    String name = t.getName();\n    if (name.startsWith(\"IPC Parameter Sending Thread \")) { // SOLR-5007\n      return true;\n    } else if (name.startsWith(\"org.apache.hadoop.hdfs.PeerCache\")) { // SOLR-7288\n      return true;\n    } else if (name.startsWith(\"LeaseRenewer\")) { // SOLR-7287\n      return true;\n    } else if (name.startsWith(\"org.apache.hadoop.fs.FileSystem$Statistics\")) { // SOLR-11261\n      return true;\n    }\n    return false;\n  }\n\n","sourceOld":"  @Override\n  public boolean reject(Thread t) {\n    String name = t.getName();\n    if (name.startsWith(\"IPC Parameter Sending Thread \")) { // SOLR-5007\n      return true;\n    } else if (name.startsWith(\"org.apache.hadoop.hdfs.PeerCache\")) { // SOLR-7288\n      return true;\n    } else if (name.startsWith(\"LeaseRenewer\")) { // SOLR-7287\n      return true;\n    }\n    return false;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bb222a3f9d9421d5c95afce73013fbd8de07ea1f","date":1543514331,"type":3,"author":"markrmiller","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/util/BadHdfsThreadsFilter#reject(Thread).mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/util/BadHdfsThreadsFilter#reject(Thread).mjava","sourceNew":"  @Override\n  public boolean reject(Thread t) {\n    String name = t.getName();\n    if (name.startsWith(\"IPC Parameter Sending Thread \")) { // SOLR-5007\n      return true;\n    } if (name.startsWith(\"IPC Client\")) { // SOLR-5007\n      return true;\n    } else if (name.startsWith(\"org.apache.hadoop.hdfs.PeerCache\")) { // SOLR-7288\n      return true;\n    } else if (name.startsWith(\"LeaseRenewer\")) { // SOLR-7287\n      return true;\n    } else if (name.startsWith(\"org.apache.hadoop.fs.FileSystem$Statistics\")) { // SOLR-11261\n      return true;\n    } else if (name.startsWith(\"ForkJoinPool.\")) { // JVM built in pool\n      return true;\n    }\n    \n    \n    \n    return false;\n  }\n\n","sourceOld":"  @Override\n  public boolean reject(Thread t) {\n    String name = t.getName();\n    if (name.startsWith(\"IPC Parameter Sending Thread \")) { // SOLR-5007\n      return true;\n    } else if (name.startsWith(\"org.apache.hadoop.hdfs.PeerCache\")) { // SOLR-7288\n      return true;\n    } else if (name.startsWith(\"LeaseRenewer\")) { // SOLR-7287\n      return true;\n    } else if (name.startsWith(\"org.apache.hadoop.fs.FileSystem$Statistics\")) { // SOLR-11261\n      return true;\n    }\n    return false;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"99b97f030e743d8dd4d7685202f71718d7e5af22","date":1548957620,"type":3,"author":"markrmiller","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/util/BadHdfsThreadsFilter#reject(Thread).mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/util/BadHdfsThreadsFilter#reject(Thread).mjava","sourceNew":"  @Override\n  public boolean reject(Thread t) {\n    String name = t.getName();\n    if (name.startsWith(\"IPC Parameter Sending Thread \")) { // SOLR-5007\n      return true;\n    } if (name.startsWith(\"IPC Client\")) { // SOLR-5007\n      return true;\n    } else if (name.startsWith(\"org.apache.hadoop.hdfs.PeerCache\")) { // SOLR-7288\n      return true;\n    } else if (name.endsWith(\"StatisticsDataReferenceCleaner\")) {\n      return true;\n    } else if (name.startsWith(\"LeaseRenewer\")) { // SOLR-7287\n      return true;\n    } else if (name.startsWith(\"org.apache.hadoop.fs.FileSystem$Statistics\")) { // SOLR-11261\n      return true;\n    } else if (name.startsWith(\"ForkJoinPool.\")) { // JVM built in pool\n      return true;\n    } else if (name.startsWith(\"ForkJoinPool-\")) { // JVM built in pool\n      return true;\n    }\n    \n    return false;\n  }\n\n","sourceOld":"  @Override\n  public boolean reject(Thread t) {\n    String name = t.getName();\n    if (name.startsWith(\"IPC Parameter Sending Thread \")) { // SOLR-5007\n      return true;\n    } if (name.startsWith(\"IPC Client\")) { // SOLR-5007\n      return true;\n    } else if (name.startsWith(\"org.apache.hadoop.hdfs.PeerCache\")) { // SOLR-7288\n      return true;\n    } else if (name.startsWith(\"LeaseRenewer\")) { // SOLR-7287\n      return true;\n    } else if (name.startsWith(\"org.apache.hadoop.fs.FileSystem$Statistics\")) { // SOLR-11261\n      return true;\n    } else if (name.startsWith(\"ForkJoinPool.\")) { // JVM built in pool\n      return true;\n    }\n    \n    \n    \n    return false;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"34b74c124d68d8e306d6ef09624f3cd053b8a2fd","date":1548981962,"type":3,"author":"Kevin Risden","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/util/BadHdfsThreadsFilter#reject(Thread).mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/util/BadHdfsThreadsFilter#reject(Thread).mjava","sourceNew":"  @Override\n  public boolean reject(Thread t) {\n    String name = t.getName();\n    if (name.startsWith(\"IPC Parameter Sending Thread \")) { // SOLR-5007\n      return true;\n    } if (name.startsWith(\"IPC Client\")) { // SOLR-5007\n      return true;\n    } else if (name.startsWith(\"org.apache.hadoop.hdfs.PeerCache\")) { // SOLR-7288\n      return true;\n    } else if (name.startsWith(\"LeaseRenewer\")) { // SOLR-7287\n      return true;\n    } else if (name.startsWith(\"org.apache.hadoop.fs.FileSystem$Statistics\")) { // SOLR-11261\n      return true;\n    } else if (name.startsWith(\"ForkJoinPool.\")) { // JVM built in pool\n      return true;\n    }\n    \n    \n    \n    return false;\n  }\n\n","sourceOld":"  @Override\n  public boolean reject(Thread t) {\n    String name = t.getName();\n    if (name.startsWith(\"IPC Parameter Sending Thread \")) { // SOLR-5007\n      return true;\n    } if (name.startsWith(\"IPC Client\")) { // SOLR-5007\n      return true;\n    } else if (name.startsWith(\"org.apache.hadoop.hdfs.PeerCache\")) { // SOLR-7288\n      return true;\n    } else if (name.endsWith(\"StatisticsDataReferenceCleaner\")) {\n      return true;\n    } else if (name.startsWith(\"LeaseRenewer\")) { // SOLR-7287\n      return true;\n    } else if (name.startsWith(\"org.apache.hadoop.fs.FileSystem$Statistics\")) { // SOLR-11261\n      return true;\n    } else if (name.startsWith(\"ForkJoinPool.\")) { // JVM built in pool\n      return true;\n    } else if (name.startsWith(\"ForkJoinPool-\")) { // JVM built in pool\n      return true;\n    }\n    \n    return false;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"44ca189138a5b6e1989d12ab992fab60e235ddc7","date":1549051496,"type":3,"author":"markrmiller","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/util/BadHdfsThreadsFilter#reject(Thread).mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/util/BadHdfsThreadsFilter#reject(Thread).mjava","sourceNew":"  @Override\n  public boolean reject(Thread t) {\n    String name = t.getName();\n    if (name.startsWith(\"IPC Parameter Sending Thread \")) { // SOLR-5007\n      return true;\n    } if (name.startsWith(\"IPC Client\")) { // SOLR-5007\n      return true;\n    } else if (name.startsWith(\"org.apache.hadoop.hdfs.PeerCache\")) { // SOLR-7288\n      return true;\n    } else if (name.endsWith(\"StatisticsDataReferenceCleaner\")) {\n      return true;\n    } else if (name.startsWith(\"LeaseRenewer\")) { // SOLR-7287\n      return true;\n    } else if (name.startsWith(\"org.apache.hadoop.fs.FileSystem$Statistics\")) { // SOLR-11261\n      return true;\n    } else if (name.startsWith(\"ForkJoinPool.\")) { // JVM built in pool\n      return true;\n    } else if (name.startsWith(\"solr-hdfs-threadpool-\")) { // SOLR-9515 and HDFS-14251\n      return true;\n    }\n    \n    return false;\n  }\n\n","sourceOld":"  @Override\n  public boolean reject(Thread t) {\n    String name = t.getName();\n    if (name.startsWith(\"IPC Parameter Sending Thread \")) { // SOLR-5007\n      return true;\n    } if (name.startsWith(\"IPC Client\")) { // SOLR-5007\n      return true;\n    } else if (name.startsWith(\"org.apache.hadoop.hdfs.PeerCache\")) { // SOLR-7288\n      return true;\n    } else if (name.startsWith(\"LeaseRenewer\")) { // SOLR-7287\n      return true;\n    } else if (name.startsWith(\"org.apache.hadoop.fs.FileSystem$Statistics\")) { // SOLR-11261\n      return true;\n    } else if (name.startsWith(\"ForkJoinPool.\")) { // JVM built in pool\n      return true;\n    }\n    \n    \n    \n    return false;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"4a78f1f0462a0ccc46e25b48f859357a3aced3d2":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"99b97f030e743d8dd4d7685202f71718d7e5af22":["bb222a3f9d9421d5c95afce73013fbd8de07ea1f"],"2fadc59d34e6c9170e6dc932b507f363fb6034f6":["86be49804fa962bd639cc70dd7ace1127847fb37"],"bb222a3f9d9421d5c95afce73013fbd8de07ea1f":["a92ffe0d2961113e5588e614f8dc22b42bf10a95"],"3051d6122751c8f6cc1e9cf24592658b59843ec2":["2fadc59d34e6c9170e6dc932b507f363fb6034f6","fab4742d912cc339bf05699cf6272d7e9342ac11"],"a92ffe0d2961113e5588e614f8dc22b42bf10a95":["2fadc59d34e6c9170e6dc932b507f363fb6034f6","fab4742d912cc339bf05699cf6272d7e9342ac11"],"34b74c124d68d8e306d6ef09624f3cd053b8a2fd":["99b97f030e743d8dd4d7685202f71718d7e5af22"],"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","2fadc59d34e6c9170e6dc932b507f363fb6034f6"],"86be49804fa962bd639cc70dd7ace1127847fb37":["4a78f1f0462a0ccc46e25b48f859357a3aced3d2"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"44ca189138a5b6e1989d12ab992fab60e235ddc7":["34b74c124d68d8e306d6ef09624f3cd053b8a2fd"],"fab4742d912cc339bf05699cf6272d7e9342ac11":["2fadc59d34e6c9170e6dc932b507f363fb6034f6"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["44ca189138a5b6e1989d12ab992fab60e235ddc7"]},"commit2Childs":{"4a78f1f0462a0ccc46e25b48f859357a3aced3d2":["86be49804fa962bd639cc70dd7ace1127847fb37"],"99b97f030e743d8dd4d7685202f71718d7e5af22":["34b74c124d68d8e306d6ef09624f3cd053b8a2fd"],"2fadc59d34e6c9170e6dc932b507f363fb6034f6":["3051d6122751c8f6cc1e9cf24592658b59843ec2","a92ffe0d2961113e5588e614f8dc22b42bf10a95","a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","fab4742d912cc339bf05699cf6272d7e9342ac11"],"bb222a3f9d9421d5c95afce73013fbd8de07ea1f":["99b97f030e743d8dd4d7685202f71718d7e5af22"],"3051d6122751c8f6cc1e9cf24592658b59843ec2":[],"a92ffe0d2961113e5588e614f8dc22b42bf10a95":["bb222a3f9d9421d5c95afce73013fbd8de07ea1f"],"34b74c124d68d8e306d6ef09624f3cd053b8a2fd":["44ca189138a5b6e1989d12ab992fab60e235ddc7"],"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":[],"86be49804fa962bd639cc70dd7ace1127847fb37":["2fadc59d34e6c9170e6dc932b507f363fb6034f6"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["4a78f1f0462a0ccc46e25b48f859357a3aced3d2","a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae"],"44ca189138a5b6e1989d12ab992fab60e235ddc7":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"fab4742d912cc339bf05699cf6272d7e9342ac11":["3051d6122751c8f6cc1e9cf24592658b59843ec2","a92ffe0d2961113e5588e614f8dc22b42bf10a95"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["3051d6122751c8f6cc1e9cf24592658b59843ec2","a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}