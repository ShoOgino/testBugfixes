{"path":"lucene/core/src/java/org/apache/lucene/codecs/temp/TempPostingsWriter#finishDoc().mjava","commits":[{"id":"0a570bec4aec8585a4eea44849bfb2bc264208c4","date":1371308653,"type":0,"author":"Han Jiang","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/temp/TempPostingsWriter#finishDoc().mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public void finishDoc() throws IOException {\n    // Since we don't know df for current term, we had to buffer\n    // those skip data for each block, and when a new doc comes, \n    // write them to skip file.\n    if (docBufferUpto == BLOCK_SIZE) {\n      lastBlockDocID = lastDocID;\n      if (posOut != null) {\n        if (payOut != null) {\n          lastBlockPayFP = payOut.getFilePointer();\n        }\n        lastBlockPosFP = posOut.getFilePointer();\n        lastBlockPosBufferUpto = posBufferUpto;\n        lastBlockPayloadByteUpto = payloadByteUpto;\n      }\n      // if (DEBUG) {\n      //   System.out.println(\"  docBufferUpto=\"+docBufferUpto+\" now get lastBlockDocID=\"+lastBlockDocID+\" lastBlockPosFP=\" + lastBlockPosFP + \" lastBlockPosBufferUpto=\" +  lastBlockPosBufferUpto + \" lastBlockPayloadByteUpto=\" + lastBlockPayloadByteUpto);\n      // }\n      docBufferUpto = 0;\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e6904bcc97d8afa27bd72ee29ac01e525e327ad4","date":1377958787,"type":4,"author":"Han Jiang","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/temp/TempPostingsWriter#finishDoc().mjava","sourceNew":null,"sourceOld":"  @Override\n  public void finishDoc() throws IOException {\n    // Since we don't know df for current term, we had to buffer\n    // those skip data for each block, and when a new doc comes, \n    // write them to skip file.\n    if (docBufferUpto == BLOCK_SIZE) {\n      lastBlockDocID = lastDocID;\n      if (posOut != null) {\n        if (payOut != null) {\n          lastBlockPayFP = payOut.getFilePointer();\n        }\n        lastBlockPosFP = posOut.getFilePointer();\n        lastBlockPosBufferUpto = posBufferUpto;\n        lastBlockPayloadByteUpto = payloadByteUpto;\n      }\n      // if (DEBUG) {\n      //   System.out.println(\"  docBufferUpto=\"+docBufferUpto+\" now get lastBlockDocID=\"+lastBlockDocID+\" lastBlockPosFP=\" + lastBlockPosFP + \" lastBlockPosBufferUpto=\" +  lastBlockPosBufferUpto + \" lastBlockPayloadByteUpto=\" + lastBlockPayloadByteUpto);\n      // }\n      docBufferUpto = 0;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"0a570bec4aec8585a4eea44849bfb2bc264208c4":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"e6904bcc97d8afa27bd72ee29ac01e525e327ad4":["0a570bec4aec8585a4eea44849bfb2bc264208c4"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"0a570bec4aec8585a4eea44849bfb2bc264208c4":["e6904bcc97d8afa27bd72ee29ac01e525e327ad4"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["0a570bec4aec8585a4eea44849bfb2bc264208c4","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"e6904bcc97d8afa27bd72ee29ac01e525e327ad4":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["e6904bcc97d8afa27bd72ee29ac01e525e327ad4","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}