{"path":"solr/core/src/java/org/apache/solr/update/DirectUpdateHandler2#rollback(RollbackUpdateCommand).mjava","commits":[{"id":"c903c3d15906a3da96b8c0c2fb704491005fdbdb","date":1453508227,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/update/DirectUpdateHandler2#rollback(RollbackUpdateCommand).mjava","pathOld":"solr/src/java/org/apache/solr/update/DirectUpdateHandler2#rollback(RollbackUpdateCommand).mjava","sourceNew":"  /**\n   * @since Solr 1.4\n   */\n  @Override\n  public void rollback(RollbackUpdateCommand cmd) throws IOException {\n    rollbackCommands.incrementAndGet();\n\n    boolean error=true;\n\n    try {\n      log.info(\"start \"+cmd);\n\n      rollbackWriter();\n\n      //callPostRollbackCallbacks();\n\n      // reset commit tracking\n      commitTracker.didRollback();\n      softCommitTracker.didRollback();\n      \n      log.info(\"end_rollback\");\n\n      error=false;\n    }\n    finally {\n      addCommandsCumulative.set(\n          addCommandsCumulative.get() - addCommands.getAndSet( 0 ) );\n      deleteByIdCommandsCumulative.set(\n          deleteByIdCommandsCumulative.get() - deleteByIdCommands.getAndSet( 0 ) );\n      deleteByQueryCommandsCumulative.set(\n          deleteByQueryCommandsCumulative.get() - deleteByQueryCommands.getAndSet( 0 ) );\n      numErrors.set(error ? 1 : 0);\n    }\n  }\n\n","sourceOld":"  /**\n   * @since Solr 1.4\n   */\n  @Override\n  public void rollback(RollbackUpdateCommand cmd) throws IOException {\n    rollbackCommands.incrementAndGet();\n\n    boolean error=true;\n\n    try {\n      log.info(\"start \"+cmd);\n\n      rollbackWriter();\n\n      //callPostRollbackCallbacks();\n\n      // reset commit tracking\n      commitTracker.didRollback();\n      softCommitTracker.didRollback();\n      \n      log.info(\"end_rollback\");\n\n      error=false;\n    }\n    finally {\n      addCommandsCumulative.set(\n          addCommandsCumulative.get() - addCommands.getAndSet( 0 ) );\n      deleteByIdCommandsCumulative.set(\n          deleteByIdCommandsCumulative.get() - deleteByIdCommands.getAndSet( 0 ) );\n      deleteByQueryCommandsCumulative.set(\n          deleteByQueryCommandsCumulative.get() - deleteByQueryCommands.getAndSet( 0 ) );\n      numErrors.set(error ? 1 : 0);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a258fbb26824fd104ed795e5d9033d2d040049ee","date":1453508252,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/update/DirectUpdateHandler2#rollback(RollbackUpdateCommand).mjava","pathOld":"solr/src/java/org/apache/solr/update/DirectUpdateHandler2#rollback(RollbackUpdateCommand).mjava","sourceNew":"  /**\n   * @since Solr 1.4\n   */\n  @Override\n  public void rollback(RollbackUpdateCommand cmd) throws IOException {\n    rollbackCommands.incrementAndGet();\n\n    boolean error=true;\n\n    try {\n      log.info(\"start \"+cmd);\n\n      rollbackWriter();\n\n      //callPostRollbackCallbacks();\n\n      // reset commit tracking\n      commitTracker.didRollback();\n      softCommitTracker.didRollback();\n      \n      log.info(\"end_rollback\");\n\n      error=false;\n    }\n    finally {\n      addCommandsCumulative.set(\n          addCommandsCumulative.get() - addCommands.getAndSet( 0 ) );\n      deleteByIdCommandsCumulative.set(\n          deleteByIdCommandsCumulative.get() - deleteByIdCommands.getAndSet( 0 ) );\n      deleteByQueryCommandsCumulative.set(\n          deleteByQueryCommandsCumulative.get() - deleteByQueryCommands.getAndSet( 0 ) );\n      numErrors.set(error ? 1 : 0);\n    }\n  }\n\n","sourceOld":"  /**\n   * @since Solr 1.4\n   */\n  @Override\n  public void rollback(RollbackUpdateCommand cmd) throws IOException {\n    rollbackCommands.incrementAndGet();\n\n    boolean error=true;\n\n    try {\n      log.info(\"start \"+cmd);\n\n      rollbackWriter();\n\n      //callPostRollbackCallbacks();\n\n      // reset commit tracking\n      commitTracker.didRollback();\n      softCommitTracker.didRollback();\n      \n      log.info(\"end_rollback\");\n\n      error=false;\n    }\n    finally {\n      addCommandsCumulative.set(\n          addCommandsCumulative.get() - addCommands.getAndSet( 0 ) );\n      deleteByIdCommandsCumulative.set(\n          deleteByIdCommandsCumulative.get() - deleteByIdCommands.getAndSet( 0 ) );\n      deleteByQueryCommandsCumulative.set(\n          deleteByQueryCommandsCumulative.get() - deleteByQueryCommands.getAndSet( 0 ) );\n      numErrors.set(error ? 1 : 0);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/update/DirectUpdateHandler2#rollback(RollbackUpdateCommand).mjava","pathOld":"solr/src/java/org/apache/solr/update/DirectUpdateHandler2#rollback(RollbackUpdateCommand).mjava","sourceNew":"  /**\n   * @since Solr 1.4\n   */\n  @Override\n  public void rollback(RollbackUpdateCommand cmd) throws IOException {\n    rollbackCommands.incrementAndGet();\n\n    boolean error=true;\n\n    try {\n      log.info(\"start \"+cmd);\n\n      rollbackWriter();\n\n      //callPostRollbackCallbacks();\n\n      // reset commit tracking\n      commitTracker.didRollback();\n      softCommitTracker.didRollback();\n      \n      log.info(\"end_rollback\");\n\n      error=false;\n    }\n    finally {\n      addCommandsCumulative.set(\n          addCommandsCumulative.get() - addCommands.getAndSet( 0 ) );\n      deleteByIdCommandsCumulative.set(\n          deleteByIdCommandsCumulative.get() - deleteByIdCommands.getAndSet( 0 ) );\n      deleteByQueryCommandsCumulative.set(\n          deleteByQueryCommandsCumulative.get() - deleteByQueryCommands.getAndSet( 0 ) );\n      numErrors.set(error ? 1 : 0);\n    }\n  }\n\n","sourceOld":"  /**\n   * @since Solr 1.4\n   */\n  @Override\n  public void rollback(RollbackUpdateCommand cmd) throws IOException {\n    rollbackCommands.incrementAndGet();\n\n    boolean error=true;\n\n    try {\n      log.info(\"start \"+cmd);\n\n      rollbackWriter();\n\n      //callPostRollbackCallbacks();\n\n      // reset commit tracking\n      commitTracker.didRollback();\n      softCommitTracker.didRollback();\n      \n      log.info(\"end_rollback\");\n\n      error=false;\n    }\n    finally {\n      addCommandsCumulative.set(\n          addCommandsCumulative.get() - addCommands.getAndSet( 0 ) );\n      deleteByIdCommandsCumulative.set(\n          deleteByIdCommandsCumulative.get() - deleteByIdCommands.getAndSet( 0 ) );\n      deleteByQueryCommandsCumulative.set(\n          deleteByQueryCommandsCumulative.get() - deleteByQueryCommands.getAndSet( 0 ) );\n      numErrors.set(error ? 1 : 0);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8524650e878177081c15c0c5bccfae2c7dca772b","date":1325284910,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/update/DirectUpdateHandler2#rollback(RollbackUpdateCommand).mjava","pathOld":"solr/core/src/java/org/apache/solr/update/DirectUpdateHandler2#rollback(RollbackUpdateCommand).mjava","sourceNew":"  /**\n   * @since Solr 1.4\n   */\n  @Override\n  public void rollback(RollbackUpdateCommand cmd) throws IOException {\n    rollbackCommands.incrementAndGet();\n\n    boolean error=true;\n\n    try {\n      log.info(\"start \"+cmd);\n\n      rollbackWriter();\n\n      //callPostRollbackCallbacks();\n\n      // reset commit tracking\n      commitTracker.didRollback();\n      softCommitTracker.didRollback();\n      \n      log.info(\"end_rollback\");\n\n      error=false;\n    }\n    finally {\n      addCommandsCumulative.set(\n          addCommandsCumulative.get() - addCommands.getAndSet( 0 ) );\n      deleteByIdCommandsCumulative.set(\n          deleteByIdCommandsCumulative.get() - deleteByIdCommands.getAndSet( 0 ) );\n      deleteByQueryCommandsCumulative.set(\n          deleteByQueryCommandsCumulative.get() - deleteByQueryCommands.getAndSet( 0 ) );\n      if (error) numErrors.incrementAndGet();\n    }\n  }\n\n","sourceOld":"  /**\n   * @since Solr 1.4\n   */\n  @Override\n  public void rollback(RollbackUpdateCommand cmd) throws IOException {\n    rollbackCommands.incrementAndGet();\n\n    boolean error=true;\n\n    try {\n      log.info(\"start \"+cmd);\n\n      rollbackWriter();\n\n      //callPostRollbackCallbacks();\n\n      // reset commit tracking\n      commitTracker.didRollback();\n      softCommitTracker.didRollback();\n      \n      log.info(\"end_rollback\");\n\n      error=false;\n    }\n    finally {\n      addCommandsCumulative.set(\n          addCommandsCumulative.get() - addCommands.getAndSet( 0 ) );\n      deleteByIdCommandsCumulative.set(\n          deleteByIdCommandsCumulative.get() - deleteByIdCommands.getAndSet( 0 ) );\n      deleteByQueryCommandsCumulative.set(\n          deleteByQueryCommandsCumulative.get() - deleteByQueryCommands.getAndSet( 0 ) );\n      numErrors.set(error ? 1 : 0);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ff458c5cb8d2e2e18b8e06631c9210f24b6a4657","date":1408666260,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/update/DirectUpdateHandler2#rollback(RollbackUpdateCommand).mjava","pathOld":"solr/core/src/java/org/apache/solr/update/DirectUpdateHandler2#rollback(RollbackUpdateCommand).mjava","sourceNew":"  /**\n   * @since Solr 1.4\n   */\n  @Override\n  public void rollback(RollbackUpdateCommand cmd) throws IOException {\n    if (core.getCoreDescriptor().getCoreContainer().isZooKeeperAware()) {\n      throw new UnsupportedOperationException(\"Rollback is currently not supported in SolrCloud mode. (SOLR-4895)\");\n    }\n\n    rollbackCommands.incrementAndGet();\n\n    boolean error=true;\n\n    try {\n      log.info(\"start \"+cmd);\n\n      rollbackWriter();\n\n      //callPostRollbackCallbacks();\n\n      // reset commit tracking\n      commitTracker.didRollback();\n      softCommitTracker.didRollback();\n      \n      log.info(\"end_rollback\");\n\n      error=false;\n    }\n    finally {\n      addCommandsCumulative.set(\n          addCommandsCumulative.get() - addCommands.getAndSet( 0 ) );\n      deleteByIdCommandsCumulative.set(\n          deleteByIdCommandsCumulative.get() - deleteByIdCommands.getAndSet( 0 ) );\n      deleteByQueryCommandsCumulative.set(\n          deleteByQueryCommandsCumulative.get() - deleteByQueryCommands.getAndSet( 0 ) );\n      if (error) numErrors.incrementAndGet();\n    }\n  }\n\n","sourceOld":"  /**\n   * @since Solr 1.4\n   */\n  @Override\n  public void rollback(RollbackUpdateCommand cmd) throws IOException {\n    rollbackCommands.incrementAndGet();\n\n    boolean error=true;\n\n    try {\n      log.info(\"start \"+cmd);\n\n      rollbackWriter();\n\n      //callPostRollbackCallbacks();\n\n      // reset commit tracking\n      commitTracker.didRollback();\n      softCommitTracker.didRollback();\n      \n      log.info(\"end_rollback\");\n\n      error=false;\n    }\n    finally {\n      addCommandsCumulative.set(\n          addCommandsCumulative.get() - addCommands.getAndSet( 0 ) );\n      deleteByIdCommandsCumulative.set(\n          deleteByIdCommandsCumulative.get() - deleteByIdCommands.getAndSet( 0 ) );\n      deleteByQueryCommandsCumulative.set(\n          deleteByQueryCommandsCumulative.get() - deleteByQueryCommands.getAndSet( 0 ) );\n      if (error) numErrors.incrementAndGet();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bc0fbfa191179ae7a0081ee1cf7da0464bcd8078","date":1469530061,"type":3,"author":"Varun Thacker","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/update/DirectUpdateHandler2#rollback(RollbackUpdateCommand).mjava","pathOld":"solr/core/src/java/org/apache/solr/update/DirectUpdateHandler2#rollback(RollbackUpdateCommand).mjava","sourceNew":"  /**\n   * @since Solr 1.4\n   */\n  @Override\n  public void rollback(RollbackUpdateCommand cmd) throws IOException {\n    if (core.getCoreDescriptor().getCoreContainer().isZooKeeperAware()) {\n      throw new UnsupportedOperationException(\"Rollback is currently not supported in SolrCloud mode. (SOLR-4895)\");\n    }\n\n    rollbackCommands.increment();\n\n    boolean error=true;\n\n    try {\n      log.info(\"start \"+cmd);\n\n      rollbackWriter();\n\n      //callPostRollbackCallbacks();\n\n      // reset commit tracking\n      commitTracker.didRollback();\n      softCommitTracker.didRollback();\n      \n      log.info(\"end_rollback\");\n\n      error=false;\n    }\n    finally {\n      addCommandsCumulative.add(-addCommands.sumThenReset());\n      deleteByIdCommandsCumulative.add(-deleteByIdCommands.sumThenReset());\n      deleteByQueryCommandsCumulative.add(-deleteByQueryCommands.sumThenReset());\n      if (error) numErrors.increment();\n    }\n  }\n\n","sourceOld":"  /**\n   * @since Solr 1.4\n   */\n  @Override\n  public void rollback(RollbackUpdateCommand cmd) throws IOException {\n    if (core.getCoreDescriptor().getCoreContainer().isZooKeeperAware()) {\n      throw new UnsupportedOperationException(\"Rollback is currently not supported in SolrCloud mode. (SOLR-4895)\");\n    }\n\n    rollbackCommands.incrementAndGet();\n\n    boolean error=true;\n\n    try {\n      log.info(\"start \"+cmd);\n\n      rollbackWriter();\n\n      //callPostRollbackCallbacks();\n\n      // reset commit tracking\n      commitTracker.didRollback();\n      softCommitTracker.didRollback();\n      \n      log.info(\"end_rollback\");\n\n      error=false;\n    }\n    finally {\n      addCommandsCumulative.set(\n          addCommandsCumulative.get() - addCommands.getAndSet( 0 ) );\n      deleteByIdCommandsCumulative.set(\n          deleteByIdCommandsCumulative.get() - deleteByIdCommands.getAndSet( 0 ) );\n      deleteByQueryCommandsCumulative.set(\n          deleteByQueryCommandsCumulative.get() - deleteByQueryCommands.getAndSet( 0 ) );\n      if (error) numErrors.incrementAndGet();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3b013574eedcdbac35dc7e35b0ee616ffc38895d","date":1470897818,"type":3,"author":"Noble Paul","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/update/DirectUpdateHandler2#rollback(RollbackUpdateCommand).mjava","pathOld":"solr/core/src/java/org/apache/solr/update/DirectUpdateHandler2#rollback(RollbackUpdateCommand).mjava","sourceNew":"  /**\n   * @since Solr 1.4\n   */\n  @Override\n  public void rollback(RollbackUpdateCommand cmd) throws IOException {\n    if (core.getCoreDescriptor().getCoreContainer().isZooKeeperAware()) {\n      throw new UnsupportedOperationException(\"Rollback is currently not supported in SolrCloud mode. (SOLR-4895)\");\n    }\n\n    rollbackCommands.increment();\n\n    boolean error=true;\n\n    try {\n      log.info(\"start \"+cmd);\n\n      rollbackWriter();\n\n      //callPostRollbackCallbacks();\n\n      // reset commit tracking\n      commitTracker.didRollback();\n      softCommitTracker.didRollback();\n      \n      log.info(\"end_rollback\");\n\n      error=false;\n    }\n    finally {\n      addCommandsCumulative.add(-addCommands.sumThenReset());\n      deleteByIdCommandsCumulative.add(-deleteByIdCommands.sumThenReset());\n      deleteByQueryCommandsCumulative.add(-deleteByQueryCommands.sumThenReset());\n      if (error) numErrors.increment();\n    }\n  }\n\n","sourceOld":"  /**\n   * @since Solr 1.4\n   */\n  @Override\n  public void rollback(RollbackUpdateCommand cmd) throws IOException {\n    if (core.getCoreDescriptor().getCoreContainer().isZooKeeperAware()) {\n      throw new UnsupportedOperationException(\"Rollback is currently not supported in SolrCloud mode. (SOLR-4895)\");\n    }\n\n    rollbackCommands.incrementAndGet();\n\n    boolean error=true;\n\n    try {\n      log.info(\"start \"+cmd);\n\n      rollbackWriter();\n\n      //callPostRollbackCallbacks();\n\n      // reset commit tracking\n      commitTracker.didRollback();\n      softCommitTracker.didRollback();\n      \n      log.info(\"end_rollback\");\n\n      error=false;\n    }\n    finally {\n      addCommandsCumulative.set(\n          addCommandsCumulative.get() - addCommands.getAndSet( 0 ) );\n      deleteByIdCommandsCumulative.set(\n          deleteByIdCommandsCumulative.get() - deleteByIdCommands.getAndSet( 0 ) );\n      deleteByQueryCommandsCumulative.set(\n          deleteByQueryCommandsCumulative.get() - deleteByQueryCommands.getAndSet( 0 ) );\n      if (error) numErrors.incrementAndGet();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/update/DirectUpdateHandler2#rollback(RollbackUpdateCommand).mjava","pathOld":"solr/core/src/java/org/apache/solr/update/DirectUpdateHandler2#rollback(RollbackUpdateCommand).mjava","sourceNew":"  /**\n   * @since Solr 1.4\n   */\n  @Override\n  public void rollback(RollbackUpdateCommand cmd) throws IOException {\n    if (core.getCoreDescriptor().getCoreContainer().isZooKeeperAware()) {\n      throw new UnsupportedOperationException(\"Rollback is currently not supported in SolrCloud mode. (SOLR-4895)\");\n    }\n\n    rollbackCommands.increment();\n\n    boolean error=true;\n\n    try {\n      log.info(\"start \"+cmd);\n\n      rollbackWriter();\n\n      //callPostRollbackCallbacks();\n\n      // reset commit tracking\n      commitTracker.didRollback();\n      softCommitTracker.didRollback();\n      \n      log.info(\"end_rollback\");\n\n      error=false;\n    }\n    finally {\n      addCommandsCumulative.add(-addCommands.sumThenReset());\n      deleteByIdCommandsCumulative.add(-deleteByIdCommands.sumThenReset());\n      deleteByQueryCommandsCumulative.add(-deleteByQueryCommands.sumThenReset());\n      if (error) numErrors.increment();\n    }\n  }\n\n","sourceOld":"  /**\n   * @since Solr 1.4\n   */\n  @Override\n  public void rollback(RollbackUpdateCommand cmd) throws IOException {\n    if (core.getCoreDescriptor().getCoreContainer().isZooKeeperAware()) {\n      throw new UnsupportedOperationException(\"Rollback is currently not supported in SolrCloud mode. (SOLR-4895)\");\n    }\n\n    rollbackCommands.incrementAndGet();\n\n    boolean error=true;\n\n    try {\n      log.info(\"start \"+cmd);\n\n      rollbackWriter();\n\n      //callPostRollbackCallbacks();\n\n      // reset commit tracking\n      commitTracker.didRollback();\n      softCommitTracker.didRollback();\n      \n      log.info(\"end_rollback\");\n\n      error=false;\n    }\n    finally {\n      addCommandsCumulative.set(\n          addCommandsCumulative.get() - addCommands.getAndSet( 0 ) );\n      deleteByIdCommandsCumulative.set(\n          deleteByIdCommandsCumulative.get() - deleteByIdCommands.getAndSet( 0 ) );\n      deleteByQueryCommandsCumulative.set(\n          deleteByQueryCommandsCumulative.get() - deleteByQueryCommands.getAndSet( 0 ) );\n      if (error) numErrors.incrementAndGet();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e52c21eddb989aed5815d30ea4c8abf481ace8ad","date":1488795043,"type":3,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/update/DirectUpdateHandler2#rollback(RollbackUpdateCommand).mjava","pathOld":"solr/core/src/java/org/apache/solr/update/DirectUpdateHandler2#rollback(RollbackUpdateCommand).mjava","sourceNew":"  /**\n   * @since Solr 1.4\n   */\n  @Override\n  public void rollback(RollbackUpdateCommand cmd) throws IOException {\n    if (core.getCoreDescriptor().getCoreContainer().isZooKeeperAware()) {\n      throw new UnsupportedOperationException(\"Rollback is currently not supported in SolrCloud mode. (SOLR-4895)\");\n    }\n\n    rollbackCommands.mark();\n\n    boolean error=true;\n\n    try {\n      log.info(\"start \"+cmd);\n\n      rollbackWriter();\n\n      //callPostRollbackCallbacks();\n\n      // reset commit tracking\n      commitTracker.didRollback();\n      softCommitTracker.didRollback();\n      \n      log.info(\"end_rollback\");\n\n      error=false;\n    }\n    finally {\n      addCommandsCumulative.mark(-addCommands.sumThenReset());\n      deleteByIdCommandsCumulative.mark(-deleteByIdCommands.sumThenReset());\n      deleteByQueryCommandsCumulative.mark(-deleteByQueryCommands.sumThenReset());\n      if (error) {\n        numErrors.increment();\n        numErrorsCumulative.mark();\n      }\n    }\n  }\n\n","sourceOld":"  /**\n   * @since Solr 1.4\n   */\n  @Override\n  public void rollback(RollbackUpdateCommand cmd) throws IOException {\n    if (core.getCoreDescriptor().getCoreContainer().isZooKeeperAware()) {\n      throw new UnsupportedOperationException(\"Rollback is currently not supported in SolrCloud mode. (SOLR-4895)\");\n    }\n\n    rollbackCommands.increment();\n\n    boolean error=true;\n\n    try {\n      log.info(\"start \"+cmd);\n\n      rollbackWriter();\n\n      //callPostRollbackCallbacks();\n\n      // reset commit tracking\n      commitTracker.didRollback();\n      softCommitTracker.didRollback();\n      \n      log.info(\"end_rollback\");\n\n      error=false;\n    }\n    finally {\n      addCommandsCumulative.add(-addCommands.sumThenReset());\n      deleteByIdCommandsCumulative.add(-deleteByIdCommands.sumThenReset());\n      deleteByQueryCommandsCumulative.add(-deleteByQueryCommands.sumThenReset());\n      if (error) numErrors.increment();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"729cb470f975115d4c60517b2cb7c42e37a7a2e1","date":1492041760,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/update/DirectUpdateHandler2#rollback(RollbackUpdateCommand).mjava","pathOld":"solr/core/src/java/org/apache/solr/update/DirectUpdateHandler2#rollback(RollbackUpdateCommand).mjava","sourceNew":"  /**\n   * @since Solr 1.4\n   */\n  @Override\n  public void rollback(RollbackUpdateCommand cmd) throws IOException {\n    if (core.getCoreContainer().isZooKeeperAware()) {\n      throw new UnsupportedOperationException(\"Rollback is currently not supported in SolrCloud mode. (SOLR-4895)\");\n    }\n\n    rollbackCommands.mark();\n\n    boolean error=true;\n\n    try {\n      log.info(\"start \"+cmd);\n\n      rollbackWriter();\n\n      //callPostRollbackCallbacks();\n\n      // reset commit tracking\n      commitTracker.didRollback();\n      softCommitTracker.didRollback();\n      \n      log.info(\"end_rollback\");\n\n      error=false;\n    }\n    finally {\n      addCommandsCumulative.mark(-addCommands.sumThenReset());\n      deleteByIdCommandsCumulative.mark(-deleteByIdCommands.sumThenReset());\n      deleteByQueryCommandsCumulative.mark(-deleteByQueryCommands.sumThenReset());\n      if (error) {\n        numErrors.increment();\n        numErrorsCumulative.mark();\n      }\n    }\n  }\n\n","sourceOld":"  /**\n   * @since Solr 1.4\n   */\n  @Override\n  public void rollback(RollbackUpdateCommand cmd) throws IOException {\n    if (core.getCoreDescriptor().getCoreContainer().isZooKeeperAware()) {\n      throw new UnsupportedOperationException(\"Rollback is currently not supported in SolrCloud mode. (SOLR-4895)\");\n    }\n\n    rollbackCommands.mark();\n\n    boolean error=true;\n\n    try {\n      log.info(\"start \"+cmd);\n\n      rollbackWriter();\n\n      //callPostRollbackCallbacks();\n\n      // reset commit tracking\n      commitTracker.didRollback();\n      softCommitTracker.didRollback();\n      \n      log.info(\"end_rollback\");\n\n      error=false;\n    }\n    finally {\n      addCommandsCumulative.mark(-addCommands.sumThenReset());\n      deleteByIdCommandsCumulative.mark(-deleteByIdCommands.sumThenReset());\n      deleteByQueryCommandsCumulative.mark(-deleteByQueryCommands.sumThenReset());\n      if (error) {\n        numErrors.increment();\n        numErrorsCumulative.mark();\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"54ca69905c5d9d1529286f06ab1d12c68f6c13cb","date":1492683554,"type":3,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/update/DirectUpdateHandler2#rollback(RollbackUpdateCommand).mjava","pathOld":"solr/core/src/java/org/apache/solr/update/DirectUpdateHandler2#rollback(RollbackUpdateCommand).mjava","sourceNew":"  /**\n   * @since Solr 1.4\n   */\n  @Override\n  public void rollback(RollbackUpdateCommand cmd) throws IOException {\n    if (core.getCoreContainer().isZooKeeperAware()) {\n      throw new UnsupportedOperationException(\"Rollback is currently not supported in SolrCloud mode. (SOLR-4895)\");\n    }\n\n    rollbackCommands.mark();\n\n    boolean error=true;\n\n    try {\n      log.info(\"start \"+cmd);\n\n      rollbackWriter();\n\n      //callPostRollbackCallbacks();\n\n      // reset commit tracking\n      commitTracker.didRollback();\n      softCommitTracker.didRollback();\n      \n      log.info(\"end_rollback\");\n\n      error=false;\n    }\n    finally {\n      addCommandsCumulative.mark(-addCommands.sumThenReset());\n      deleteByIdCommandsCumulative.mark(-deleteByIdCommands.sumThenReset());\n      deleteByQueryCommandsCumulative.mark(-deleteByQueryCommands.sumThenReset());\n      if (error) {\n        numErrors.increment();\n        numErrorsCumulative.mark();\n      }\n    }\n  }\n\n","sourceOld":"  /**\n   * @since Solr 1.4\n   */\n  @Override\n  public void rollback(RollbackUpdateCommand cmd) throws IOException {\n    if (core.getCoreDescriptor().getCoreContainer().isZooKeeperAware()) {\n      throw new UnsupportedOperationException(\"Rollback is currently not supported in SolrCloud mode. (SOLR-4895)\");\n    }\n\n    rollbackCommands.mark();\n\n    boolean error=true;\n\n    try {\n      log.info(\"start \"+cmd);\n\n      rollbackWriter();\n\n      //callPostRollbackCallbacks();\n\n      // reset commit tracking\n      commitTracker.didRollback();\n      softCommitTracker.didRollback();\n      \n      log.info(\"end_rollback\");\n\n      error=false;\n    }\n    finally {\n      addCommandsCumulative.mark(-addCommands.sumThenReset());\n      deleteByIdCommandsCumulative.mark(-deleteByIdCommands.sumThenReset());\n      deleteByQueryCommandsCumulative.mark(-deleteByQueryCommands.sumThenReset());\n      if (error) {\n        numErrors.increment();\n        numErrorsCumulative.mark();\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"482ca6c86d7073e3c19096bdc74fe0e73da4554a","date":1576010743,"type":3,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/update/DirectUpdateHandler2#rollback(RollbackUpdateCommand).mjava","pathOld":"solr/core/src/java/org/apache/solr/update/DirectUpdateHandler2#rollback(RollbackUpdateCommand).mjava","sourceNew":"  /**\n   * @since Solr 1.4\n   */\n  @Override\n  public void rollback(RollbackUpdateCommand cmd) throws IOException {\n    TestInjection.injectDirectUpdateLatch();\n    if (core.getCoreContainer().isZooKeeperAware()) {\n      throw new UnsupportedOperationException(\"Rollback is currently not supported in SolrCloud mode. (SOLR-4895)\");\n    }\n\n    rollbackCommands.mark();\n\n    boolean error=true;\n\n    try {\n      log.info(\"start \"+cmd);\n\n      rollbackWriter();\n\n      //callPostRollbackCallbacks();\n\n      // reset commit tracking\n      commitTracker.didRollback();\n      softCommitTracker.didRollback();\n      \n      log.info(\"end_rollback\");\n\n      error=false;\n    }\n    finally {\n      addCommandsCumulative.mark(-addCommands.sumThenReset());\n      deleteByIdCommandsCumulative.mark(-deleteByIdCommands.sumThenReset());\n      deleteByQueryCommandsCumulative.mark(-deleteByQueryCommands.sumThenReset());\n      if (error) {\n        numErrors.increment();\n        numErrorsCumulative.mark();\n      }\n    }\n  }\n\n","sourceOld":"  /**\n   * @since Solr 1.4\n   */\n  @Override\n  public void rollback(RollbackUpdateCommand cmd) throws IOException {\n    if (core.getCoreContainer().isZooKeeperAware()) {\n      throw new UnsupportedOperationException(\"Rollback is currently not supported in SolrCloud mode. (SOLR-4895)\");\n    }\n\n    rollbackCommands.mark();\n\n    boolean error=true;\n\n    try {\n      log.info(\"start \"+cmd);\n\n      rollbackWriter();\n\n      //callPostRollbackCallbacks();\n\n      // reset commit tracking\n      commitTracker.didRollback();\n      softCommitTracker.didRollback();\n      \n      log.info(\"end_rollback\");\n\n      error=false;\n    }\n    finally {\n      addCommandsCumulative.mark(-addCommands.sumThenReset());\n      deleteByIdCommandsCumulative.mark(-deleteByIdCommands.sumThenReset());\n      deleteByQueryCommandsCumulative.mark(-deleteByQueryCommands.sumThenReset());\n      if (error) {\n        numErrors.increment();\n        numErrorsCumulative.mark();\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a229cb50768e988c50a2106bdae3a92154f428bf","date":1576051038,"type":3,"author":"Dawid Weiss","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/update/DirectUpdateHandler2#rollback(RollbackUpdateCommand).mjava","pathOld":"solr/core/src/java/org/apache/solr/update/DirectUpdateHandler2#rollback(RollbackUpdateCommand).mjava","sourceNew":"  /**\n   * @since Solr 1.4\n   */\n  @Override\n  public void rollback(RollbackUpdateCommand cmd) throws IOException {\n    TestInjection.injectDirectUpdateLatch();\n    if (core.getCoreContainer().isZooKeeperAware()) {\n      throw new UnsupportedOperationException(\"Rollback is currently not supported in SolrCloud mode. (SOLR-4895)\");\n    }\n\n    rollbackCommands.mark();\n\n    boolean error=true;\n\n    try {\n      log.info(\"start \"+cmd);\n\n      rollbackWriter();\n\n      //callPostRollbackCallbacks();\n\n      // reset commit tracking\n      commitTracker.didRollback();\n      softCommitTracker.didRollback();\n      \n      log.info(\"end_rollback\");\n\n      error=false;\n    }\n    finally {\n      addCommandsCumulative.mark(-addCommands.sumThenReset());\n      deleteByIdCommandsCumulative.mark(-deleteByIdCommands.sumThenReset());\n      deleteByQueryCommandsCumulative.mark(-deleteByQueryCommands.sumThenReset());\n      if (error) {\n        numErrors.increment();\n        numErrorsCumulative.mark();\n      }\n    }\n  }\n\n","sourceOld":"  /**\n   * @since Solr 1.4\n   */\n  @Override\n  public void rollback(RollbackUpdateCommand cmd) throws IOException {\n    if (core.getCoreContainer().isZooKeeperAware()) {\n      throw new UnsupportedOperationException(\"Rollback is currently not supported in SolrCloud mode. (SOLR-4895)\");\n    }\n\n    rollbackCommands.mark();\n\n    boolean error=true;\n\n    try {\n      log.info(\"start \"+cmd);\n\n      rollbackWriter();\n\n      //callPostRollbackCallbacks();\n\n      // reset commit tracking\n      commitTracker.didRollback();\n      softCommitTracker.didRollback();\n      \n      log.info(\"end_rollback\");\n\n      error=false;\n    }\n    finally {\n      addCommandsCumulative.mark(-addCommands.sumThenReset());\n      deleteByIdCommandsCumulative.mark(-deleteByIdCommands.sumThenReset());\n      deleteByQueryCommandsCumulative.mark(-deleteByQueryCommands.sumThenReset());\n      if (error) {\n        numErrors.increment();\n        numErrorsCumulative.mark();\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"740d649f013f07efbeb73ca854f106c60166e7c0","date":1587431295,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/update/DirectUpdateHandler2#rollback(RollbackUpdateCommand).mjava","pathOld":"solr/core/src/java/org/apache/solr/update/DirectUpdateHandler2#rollback(RollbackUpdateCommand).mjava","sourceNew":"  /**\n   * @since Solr 1.4\n   */\n  @Override\n  public void rollback(RollbackUpdateCommand cmd) throws IOException {\n    TestInjection.injectDirectUpdateLatch();\n    if (core.getCoreContainer().isZooKeeperAware()) {\n      throw new UnsupportedOperationException(\"Rollback is currently not supported in SolrCloud mode. (SOLR-4895)\");\n    }\n\n    rollbackCommands.mark();\n\n    boolean error=true;\n\n    try {\n      log.info(\"start {}\", cmd);\n\n      rollbackWriter();\n\n      //callPostRollbackCallbacks();\n\n      // reset commit tracking\n      commitTracker.didRollback();\n      softCommitTracker.didRollback();\n      \n      log.info(\"end_rollback\");\n\n      error=false;\n    }\n    finally {\n      addCommandsCumulative.mark(-addCommands.sumThenReset());\n      deleteByIdCommandsCumulative.mark(-deleteByIdCommands.sumThenReset());\n      deleteByQueryCommandsCumulative.mark(-deleteByQueryCommands.sumThenReset());\n      if (error) {\n        numErrors.increment();\n        numErrorsCumulative.mark();\n      }\n    }\n  }\n\n","sourceOld":"  /**\n   * @since Solr 1.4\n   */\n  @Override\n  public void rollback(RollbackUpdateCommand cmd) throws IOException {\n    TestInjection.injectDirectUpdateLatch();\n    if (core.getCoreContainer().isZooKeeperAware()) {\n      throw new UnsupportedOperationException(\"Rollback is currently not supported in SolrCloud mode. (SOLR-4895)\");\n    }\n\n    rollbackCommands.mark();\n\n    boolean error=true;\n\n    try {\n      log.info(\"start \"+cmd);\n\n      rollbackWriter();\n\n      //callPostRollbackCallbacks();\n\n      // reset commit tracking\n      commitTracker.didRollback();\n      softCommitTracker.didRollback();\n      \n      log.info(\"end_rollback\");\n\n      error=false;\n    }\n    finally {\n      addCommandsCumulative.mark(-addCommands.sumThenReset());\n      deleteByIdCommandsCumulative.mark(-deleteByIdCommands.sumThenReset());\n      deleteByQueryCommandsCumulative.mark(-deleteByQueryCommands.sumThenReset());\n      if (error) {\n        numErrors.increment();\n        numErrorsCumulative.mark();\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"ff458c5cb8d2e2e18b8e06631c9210f24b6a4657":["8524650e878177081c15c0c5bccfae2c7dca772b"],"54ca69905c5d9d1529286f06ab1d12c68f6c13cb":["e52c21eddb989aed5815d30ea4c8abf481ace8ad"],"482ca6c86d7073e3c19096bdc74fe0e73da4554a":["729cb470f975115d4c60517b2cb7c42e37a7a2e1"],"740d649f013f07efbeb73ca854f106c60166e7c0":["482ca6c86d7073e3c19096bdc74fe0e73da4554a"],"c26f00b574427b55127e869b935845554afde1fa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","c903c3d15906a3da96b8c0c2fb704491005fdbdb"],"bc0fbfa191179ae7a0081ee1cf7da0464bcd8078":["ff458c5cb8d2e2e18b8e06631c9210f24b6a4657"],"8524650e878177081c15c0c5bccfae2c7dca772b":["c26f00b574427b55127e869b935845554afde1fa"],"729cb470f975115d4c60517b2cb7c42e37a7a2e1":["e52c21eddb989aed5815d30ea4c8abf481ace8ad"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["ff458c5cb8d2e2e18b8e06631c9210f24b6a4657","bc0fbfa191179ae7a0081ee1cf7da0464bcd8078"],"a229cb50768e988c50a2106bdae3a92154f428bf":["729cb470f975115d4c60517b2cb7c42e37a7a2e1","482ca6c86d7073e3c19096bdc74fe0e73da4554a"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a258fbb26824fd104ed795e5d9033d2d040049ee":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"e52c21eddb989aed5815d30ea4c8abf481ace8ad":["bc0fbfa191179ae7a0081ee1cf7da0464bcd8078"],"3b013574eedcdbac35dc7e35b0ee616ffc38895d":["ff458c5cb8d2e2e18b8e06631c9210f24b6a4657","bc0fbfa191179ae7a0081ee1cf7da0464bcd8078"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["740d649f013f07efbeb73ca854f106c60166e7c0"]},"commit2Childs":{"ff458c5cb8d2e2e18b8e06631c9210f24b6a4657":["bc0fbfa191179ae7a0081ee1cf7da0464bcd8078","4cce5816ef15a48a0bc11e5d400497ee4301dd3b","3b013574eedcdbac35dc7e35b0ee616ffc38895d"],"54ca69905c5d9d1529286f06ab1d12c68f6c13cb":[],"482ca6c86d7073e3c19096bdc74fe0e73da4554a":["740d649f013f07efbeb73ca854f106c60166e7c0","a229cb50768e988c50a2106bdae3a92154f428bf"],"740d649f013f07efbeb73ca854f106c60166e7c0":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"c26f00b574427b55127e869b935845554afde1fa":["8524650e878177081c15c0c5bccfae2c7dca772b"],"8524650e878177081c15c0c5bccfae2c7dca772b":["ff458c5cb8d2e2e18b8e06631c9210f24b6a4657"],"bc0fbfa191179ae7a0081ee1cf7da0464bcd8078":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","e52c21eddb989aed5815d30ea4c8abf481ace8ad","3b013574eedcdbac35dc7e35b0ee616ffc38895d"],"729cb470f975115d4c60517b2cb7c42e37a7a2e1":["482ca6c86d7073e3c19096bdc74fe0e73da4554a","a229cb50768e988c50a2106bdae3a92154f428bf"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"a229cb50768e988c50a2106bdae3a92154f428bf":[],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["c26f00b574427b55127e869b935845554afde1fa"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c26f00b574427b55127e869b935845554afde1fa","c903c3d15906a3da96b8c0c2fb704491005fdbdb","a258fbb26824fd104ed795e5d9033d2d040049ee"],"a258fbb26824fd104ed795e5d9033d2d040049ee":[],"e52c21eddb989aed5815d30ea4c8abf481ace8ad":["54ca69905c5d9d1529286f06ab1d12c68f6c13cb","729cb470f975115d4c60517b2cb7c42e37a7a2e1"],"3b013574eedcdbac35dc7e35b0ee616ffc38895d":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["54ca69905c5d9d1529286f06ab1d12c68f6c13cb","4cce5816ef15a48a0bc11e5d400497ee4301dd3b","a229cb50768e988c50a2106bdae3a92154f428bf","a258fbb26824fd104ed795e5d9033d2d040049ee","3b013574eedcdbac35dc7e35b0ee616ffc38895d","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}