{"path":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriter#testMassiveField().mjava","commits":[{"id":"c49ea3d4279fbc211c84a5d81ff591b5f8d18e83","date":1478775068,"type":0,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriter#testMassiveField().mjava","pathOld":"/dev/null","sourceNew":"  @Ignore(\"requires running tests with biggish heap\")\n  public void testMassiveField() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriterConfig iwc = new IndexWriterConfig(new MockAnalyzer(random()));\n    final IndexWriter w = new IndexWriter(dir, iwc);\n\n    StringBuilder b = new StringBuilder();\n    while (b.length() <= IndexWriter.MAX_STORED_STRING_LENGTH) {\n      b.append(\"x \");\n    }\n\n    final Document doc = new Document();\n    //doc.add(new TextField(\"big\", b.toString(), Field.Store.YES));\n    doc.add(new StoredField(\"big\", b.toString()));\n    Exception e = expectThrows(IllegalArgumentException.class, () -> {w.addDocument(doc);});\n    assertEquals(\"stored field \\\"big\\\" is too large (\" + b.length() + \" characters) to store\", e.getMessage());\n\n    // make sure writer is still usable:\n    Document doc2 = new Document();\n    doc2.add(new StringField(\"id\", \"foo\", Field.Store.YES));\n    w.addDocument(doc2);\n\n    DirectoryReader r = DirectoryReader.open(w);\n    assertEquals(1, r.numDocs());\n    r.close();\n    w.close();\n    dir.close();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"199dfa410f1fdbfd3294106b04096cce5ed34b21","date":1478812506,"type":0,"author":"Kevin Risden","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriter#testMassiveField().mjava","pathOld":"/dev/null","sourceNew":"  @Ignore(\"requires running tests with biggish heap\")\n  public void testMassiveField() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriterConfig iwc = new IndexWriterConfig(new MockAnalyzer(random()));\n    final IndexWriter w = new IndexWriter(dir, iwc);\n\n    StringBuilder b = new StringBuilder();\n    while (b.length() <= IndexWriter.MAX_STORED_STRING_LENGTH) {\n      b.append(\"x \");\n    }\n\n    final Document doc = new Document();\n    //doc.add(new TextField(\"big\", b.toString(), Field.Store.YES));\n    doc.add(new StoredField(\"big\", b.toString()));\n    Exception e = expectThrows(IllegalArgumentException.class, () -> {w.addDocument(doc);});\n    assertEquals(\"stored field \\\"big\\\" is too large (\" + b.length() + \" characters) to store\", e.getMessage());\n\n    // make sure writer is still usable:\n    Document doc2 = new Document();\n    doc2.add(new StringField(\"id\", \"foo\", Field.Store.YES));\n    w.addDocument(doc2);\n\n    DirectoryReader r = DirectoryReader.open(w);\n    assertEquals(1, r.numDocs());\n    r.close();\n    w.close();\n    dir.close();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"c49ea3d4279fbc211c84a5d81ff591b5f8d18e83":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"199dfa410f1fdbfd3294106b04096cce5ed34b21":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","c49ea3d4279fbc211c84a5d81ff591b5f8d18e83"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["c49ea3d4279fbc211c84a5d81ff591b5f8d18e83"]},"commit2Childs":{"c49ea3d4279fbc211c84a5d81ff591b5f8d18e83":["199dfa410f1fdbfd3294106b04096cce5ed34b21","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c49ea3d4279fbc211c84a5d81ff591b5f8d18e83","199dfa410f1fdbfd3294106b04096cce5ed34b21"],"199dfa410f1fdbfd3294106b04096cce5ed34b21":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["199dfa410f1fdbfd3294106b04096cce5ed34b21","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}