{"path":"lucene/core/src/java/org/apache/lucene/codecs/compressing/CompressingStoredFieldsWriter#writeHeader(int,int,int[],int[]).mjava","commits":[{"id":"5e04b732c631a77cbbd25b6ce43c2a8abb1e9e69","date":1352818449,"type":1,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/compressing/CompressingStoredFieldsWriter#writeHeader(int,int,int[],int[]).mjava","pathOld":"lucene/codecs/src/java/org/apache/lucene/codecs/compressing/CompressingStoredFieldsWriter#writeHeader(int,int,int[],int[]).mjava","sourceNew":"  private void writeHeader(int docBase, int numBufferedDocs, int[] numStoredFields, int[] lengths) throws IOException {\n    // save docBase and numBufferedDocs\n    fieldsStream.writeVInt(docBase);\n    fieldsStream.writeVInt(numBufferedDocs);\n\n    // save numStoredFields\n    saveInts(numStoredFields, numBufferedDocs, fieldsStream);\n\n    // save lengths\n    saveInts(lengths, numBufferedDocs, fieldsStream);\n  }\n\n","sourceOld":"  private void writeHeader(int docBase, int numBufferedDocs, int[] numStoredFields, int[] lengths) throws IOException {\n    // save docBase and numBufferedDocs\n    fieldsStream.writeVInt(docBase);\n    fieldsStream.writeVInt(numBufferedDocs);\n\n    // save numStoredFields\n    saveInts(numStoredFields, numBufferedDocs, fieldsStream);\n\n    // save lengths\n    saveInts(lengths, numBufferedDocs, fieldsStream);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"407687e67faf6e1f02a211ca078d8e3eed631027","date":1355157407,"type":1,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/compressing/CompressingStoredFieldsWriter#writeHeader(int,int,int[],int[]).mjava","pathOld":"lucene/codecs/src/java/org/apache/lucene/codecs/compressing/CompressingStoredFieldsWriter#writeHeader(int,int,int[],int[]).mjava","sourceNew":"  private void writeHeader(int docBase, int numBufferedDocs, int[] numStoredFields, int[] lengths) throws IOException {\n    // save docBase and numBufferedDocs\n    fieldsStream.writeVInt(docBase);\n    fieldsStream.writeVInt(numBufferedDocs);\n\n    // save numStoredFields\n    saveInts(numStoredFields, numBufferedDocs, fieldsStream);\n\n    // save lengths\n    saveInts(lengths, numBufferedDocs, fieldsStream);\n  }\n\n","sourceOld":"  private void writeHeader(int docBase, int numBufferedDocs, int[] numStoredFields, int[] lengths) throws IOException {\n    // save docBase and numBufferedDocs\n    fieldsStream.writeVInt(docBase);\n    fieldsStream.writeVInt(numBufferedDocs);\n\n    // save numStoredFields\n    saveInts(numStoredFields, numBufferedDocs, fieldsStream);\n\n    // save lengths\n    saveInts(lengths, numBufferedDocs, fieldsStream);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1f09f483a0844bb9dc34fb10380cb053aa96219b","date":1418894001,"type":5,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/compressing/CompressingStoredFieldsWriter#writeHeader(int,int,int[],int[],boolean).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/compressing/CompressingStoredFieldsWriter#writeHeader(int,int,int[],int[]).mjava","sourceNew":"  private void writeHeader(int docBase, int numBufferedDocs, int[] numStoredFields, int[] lengths, boolean sliced) throws IOException {\n    final int slicedBit = sliced ? 1 : 0;\n    \n    // save docBase and numBufferedDocs\n    fieldsStream.writeVInt(docBase);\n    fieldsStream.writeVInt((numBufferedDocs) << 1 | slicedBit);\n\n    // save numStoredFields\n    saveInts(numStoredFields, numBufferedDocs, fieldsStream);\n\n    // save lengths\n    saveInts(lengths, numBufferedDocs, fieldsStream);\n  }\n\n","sourceOld":"  private void writeHeader(int docBase, int numBufferedDocs, int[] numStoredFields, int[] lengths) throws IOException {\n    // save docBase and numBufferedDocs\n    fieldsStream.writeVInt(docBase);\n    fieldsStream.writeVInt(numBufferedDocs);\n\n    // save numStoredFields\n    saveInts(numStoredFields, numBufferedDocs, fieldsStream);\n\n    // save lengths\n    saveInts(lengths, numBufferedDocs, fieldsStream);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"5e04b732c631a77cbbd25b6ce43c2a8abb1e9e69":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"407687e67faf6e1f02a211ca078d8e3eed631027":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","5e04b732c631a77cbbd25b6ce43c2a8abb1e9e69"],"1f09f483a0844bb9dc34fb10380cb053aa96219b":["5e04b732c631a77cbbd25b6ce43c2a8abb1e9e69"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["1f09f483a0844bb9dc34fb10380cb053aa96219b"]},"commit2Childs":{"5e04b732c631a77cbbd25b6ce43c2a8abb1e9e69":["407687e67faf6e1f02a211ca078d8e3eed631027","1f09f483a0844bb9dc34fb10380cb053aa96219b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["5e04b732c631a77cbbd25b6ce43c2a8abb1e9e69","407687e67faf6e1f02a211ca078d8e3eed631027"],"407687e67faf6e1f02a211ca078d8e3eed631027":[],"1f09f483a0844bb9dc34fb10380cb053aa96219b":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["407687e67faf6e1f02a211ca078d8e3eed631027","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}