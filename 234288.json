{"path":"src/java/org/apache/lucene/search/IndexSearcher#search(QueryWeight,Filter,int).mjava","commits":[{"id":"052fac7830290bd38a04cddee1a121ee07656b56","date":1245780702,"type":1,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/search/IndexSearcher#search(QueryWeight,Filter,int).mjava","pathOld":"src/java/org/apache/lucene/search/IndexSearcher#search(Weight,Filter,int).mjava","sourceNew":"  // inherit javadoc\n  public TopDocs search(QueryWeight weight, Filter filter, final int nDocs) throws IOException {\n\n    if (nDocs <= 0) {\n      throw new IllegalArgumentException(\"nDocs must be > 0\");\n    }\n\n    TopScoreDocCollector collector = TopScoreDocCollector.create(nDocs, !weight.scoresDocsOutOfOrder());\n    search(weight, filter, collector);\n    return collector.topDocs();\n  }\n\n","sourceOld":"  // inherit javadoc\n  public TopDocs search(Weight weight, Filter filter, final int nDocs)\n       throws IOException {\n\n    if (nDocs <= 0)  // null might be returned from hq.top() below.\n      throw new IllegalArgumentException(\"nDocs must be > 0\");\n\n    // TODO: The following should be changed to first obtain a Scorer and then ask it\n    // if it's going to return in-order or out-of-order docs, and create TSDC\n    // accordingly.\n    TopScoreDocCollector collector = TopScoreDocCollector.create(nDocs, false);\n    search(weight, filter, collector);\n    return collector.topDocs();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fe941135bdfc28c81e20b4d21422f8726af34925","date":1250040150,"type":5,"author":"Mark Robert Miller","isMerge":false,"pathNew":"src/java/org/apache/lucene/search/IndexSearcher#search(Weight,Filter,int).mjava","pathOld":"src/java/org/apache/lucene/search/IndexSearcher#search(QueryWeight,Filter,int).mjava","sourceNew":"  // inherit javadoc\n  public TopDocs search(Weight weight, Filter filter, final int nDocs) throws IOException {\n\n    if (nDocs <= 0) {\n      throw new IllegalArgumentException(\"nDocs must be > 0\");\n    }\n\n    TopScoreDocCollector collector = TopScoreDocCollector.create(nDocs, !weight.scoresDocsOutOfOrder());\n    search(weight, filter, collector);\n    return collector.topDocs();\n  }\n\n","sourceOld":"  // inherit javadoc\n  public TopDocs search(QueryWeight weight, Filter filter, final int nDocs) throws IOException {\n\n    if (nDocs <= 0) {\n      throw new IllegalArgumentException(\"nDocs must be > 0\");\n    }\n\n    TopScoreDocCollector collector = TopScoreDocCollector.create(nDocs, !weight.scoresDocsOutOfOrder());\n    search(weight, filter, collector);\n    return collector.topDocs();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"fe941135bdfc28c81e20b4d21422f8726af34925":["052fac7830290bd38a04cddee1a121ee07656b56"],"052fac7830290bd38a04cddee1a121ee07656b56":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["fe941135bdfc28c81e20b4d21422f8726af34925"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["052fac7830290bd38a04cddee1a121ee07656b56"],"fe941135bdfc28c81e20b4d21422f8726af34925":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"052fac7830290bd38a04cddee1a121ee07656b56":["fe941135bdfc28c81e20b4d21422f8726af34925"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}