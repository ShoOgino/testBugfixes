{"path":"solr/solrj/src/test/org/apache/solr/client/solrj/io/stream/StreamExpressionToExpessionTest#testIntersectStream().mjava","commits":[{"id":"fef6c45a8c2e0c4a323c0edc246d5d27fb3da298","date":1452706901,"type":0,"author":"Dennis Gove","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/io/stream/StreamExpressionToExpessionTest#testIntersectStream().mjava","pathOld":"/dev/null","sourceNew":"  @Test \n  public void testIntersectStream() throws Exception {\n    IntersectStream stream;\n    String expressionString;\n    \n    // Basic test\n    stream = new IntersectStream(StreamExpressionParser.parse(\"intersect(\"\n                              + \"search(collection1, q=\\\"id:(0 3 4)\\\", fl=\\\"id,a_s,a_i,a_f\\\", sort=\\\"a_f asc, a_s asc\\\"),\"\n                              + \"search(collection1, q=\\\"id:(1 2)\\\", fl=\\\"id,a_s,a_i,a_f\\\", sort=\\\"a_f asc, a_s asc\\\"),\"\n                              + \"on=\\\"a_f, a_s\\\")\"), factory);\n    expressionString = stream.toExpression(factory).toString();\n    assertTrue(expressionString.contains(\"q=\\\"id:(0 3 4)\\\"\"));\n    assertTrue(expressionString.contains(\"q=\\\"id:(1 2)\\\"\"));\n    assertTrue(expressionString.contains(\"on=\\\"a_f,a_s\\\"\"));\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f15af35d55d70c34451f9df5edeaeff6b31f8cbe","date":1519625627,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/io/stream/StreamExpressionToExpessionTest#testIntersectStream().mjava","pathOld":"solr/solrj/src/test/org/apache/solr/client/solrj/io/stream/StreamExpressionToExpessionTest#testIntersectStream().mjava","sourceNew":"  @Test \n  public void testIntersectStream() throws Exception {\n    String expressionString;\n    \n    // Basic test\n    try (IntersectStream stream = new IntersectStream(StreamExpressionParser.parse(\"intersect(\"\n                              + \"search(collection1, q=\\\"id:(0 3 4)\\\", fl=\\\"id,a_s,a_i,a_f\\\", sort=\\\"a_f asc, a_s asc\\\"),\"\n                              + \"search(collection1, q=\\\"id:(1 2)\\\", fl=\\\"id,a_s,a_i,a_f\\\", sort=\\\"a_f asc, a_s asc\\\"),\"\n                              + \"on=\\\"a_f, a_s\\\")\"), factory)) {\n      expressionString = stream.toExpression(factory).toString();\n      assertTrue(expressionString.contains(\"q=\\\"id:(0 3 4)\\\"\"));\n      assertTrue(expressionString.contains(\"q=\\\"id:(1 2)\\\"\"));\n      assertTrue(expressionString.contains(\"on=\\\"a_f,a_s\\\"\"));\n    }\n  }\n\n","sourceOld":"  @Test \n  public void testIntersectStream() throws Exception {\n    IntersectStream stream;\n    String expressionString;\n    \n    // Basic test\n    stream = new IntersectStream(StreamExpressionParser.parse(\"intersect(\"\n                              + \"search(collection1, q=\\\"id:(0 3 4)\\\", fl=\\\"id,a_s,a_i,a_f\\\", sort=\\\"a_f asc, a_s asc\\\"),\"\n                              + \"search(collection1, q=\\\"id:(1 2)\\\", fl=\\\"id,a_s,a_i,a_f\\\", sort=\\\"a_f asc, a_s asc\\\"),\"\n                              + \"on=\\\"a_f, a_s\\\")\"), factory);\n    expressionString = stream.toExpression(factory).toString();\n    assertTrue(expressionString.contains(\"q=\\\"id:(0 3 4)\\\"\"));\n    assertTrue(expressionString.contains(\"q=\\\"id:(1 2)\\\"\"));\n    assertTrue(expressionString.contains(\"on=\\\"a_f,a_s\\\"\"));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"f15af35d55d70c34451f9df5edeaeff6b31f8cbe":["fef6c45a8c2e0c4a323c0edc246d5d27fb3da298"],"fef6c45a8c2e0c4a323c0edc246d5d27fb3da298":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["f15af35d55d70c34451f9df5edeaeff6b31f8cbe"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["fef6c45a8c2e0c4a323c0edc246d5d27fb3da298"],"f15af35d55d70c34451f9df5edeaeff6b31f8cbe":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"fef6c45a8c2e0c4a323c0edc246d5d27fb3da298":["f15af35d55d70c34451f9df5edeaeff6b31f8cbe"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}