{"path":"src/test/org/apache/lucene/index/TestCompoundFile#testFileNotFound().mjava","commits":[{"id":"8fb95844e4ba5160067c64c5eb1cd8a09f7a94f1","date":1064527311,"type":0,"author":"Dmitry Serebrennikov","isMerge":false,"pathNew":"src/test/org/apache/lucene/index/TestCompoundFile#testFileNotFound().mjava","pathOld":"/dev/null","sourceNew":"    public void testFileNotFound() throws IOException {\n        setUp_2();        \n        CompoundFileReader cr = new CompoundFileReader(dir, \"f.comp\");\n        \n        // Open two files \n        try {\n            InputStream e1 = cr.openFile(\"bogus\");\n            fail(\"File not found\");\n            \n        } catch (IOException e) {\n            /* success */\n            //System.out.println(\"SUCCESS: File Not Found: \" + e);\n        }\n        \n        cr.close();\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1acbe60842541f8c38e2d60b03591478c9f91546","date":1066055498,"type":3,"author":"Otis Gospodnetic","isMerge":false,"pathNew":"src/test/org/apache/lucene/index/TestCompoundFile#testFileNotFound().mjava","pathOld":"src/test/org/apache/lucene/index/TestCompoundFile#testFileNotFound().mjava","sourceNew":"    public void testFileNotFound() throws IOException {\n        setUp_2();\n        CompoundFileReader cr = new CompoundFileReader(dir, \"f.comp\");\n\n        // Open two files\n        try {\n            InputStream e1 = cr.openFile(\"bogus\");\n            fail(\"File not found\");\n\n        } catch (IOException e) {\n            /* success */\n            //System.out.println(\"SUCCESS: File Not Found: \" + e);\n        }\n\n        cr.close();\n    }\n\n","sourceOld":"    public void testFileNotFound() throws IOException {\n        setUp_2();        \n        CompoundFileReader cr = new CompoundFileReader(dir, \"f.comp\");\n        \n        // Open two files \n        try {\n            InputStream e1 = cr.openFile(\"bogus\");\n            fail(\"File not found\");\n            \n        } catch (IOException e) {\n            /* success */\n            //System.out.println(\"SUCCESS: File Not Found: \" + e);\n        }\n        \n        cr.close();\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e971ba25509e21a130fef61f0687be0446ca27a0","date":1095369217,"type":3,"author":"Doug Cutting","isMerge":false,"pathNew":"src/test/org/apache/lucene/index/TestCompoundFile#testFileNotFound().mjava","pathOld":"src/test/org/apache/lucene/index/TestCompoundFile#testFileNotFound().mjava","sourceNew":"    public void testFileNotFound() throws IOException {\n        setUp_2();\n        CompoundFileReader cr = new CompoundFileReader(dir, \"f.comp\");\n\n        // Open two files\n        try {\n            IndexInput e1 = cr.openInput(\"bogus\");\n            fail(\"File not found\");\n\n        } catch (IOException e) {\n            /* success */\n            //System.out.println(\"SUCCESS: File Not Found: \" + e);\n        }\n\n        cr.close();\n    }\n\n","sourceOld":"    public void testFileNotFound() throws IOException {\n        setUp_2();\n        CompoundFileReader cr = new CompoundFileReader(dir, \"f.comp\");\n\n        // Open two files\n        try {\n            InputStream e1 = cr.openFile(\"bogus\");\n            fail(\"File not found\");\n\n        } catch (IOException e) {\n            /* success */\n            //System.out.println(\"SUCCESS: File Not Found: \" + e);\n        }\n\n        cr.close();\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a9ac13b5f0ce5ef1b2ce168367d993a79594b23a","date":1267298041,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/test/org/apache/lucene/index/TestCompoundFile#testFileNotFound().mjava","pathOld":"src/test/org/apache/lucene/index/TestCompoundFile#testFileNotFound().mjava","sourceNew":"    public void testFileNotFound() throws IOException {\n        setUp_2();\n        CompoundFileReader cr = new CompoundFileReader(dir, \"f.comp\");\n\n        // Open two files\n        try {\n            cr.openInput(\"bogus\");\n            fail(\"File not found\");\n\n        } catch (IOException e) {\n            /* success */\n            //System.out.println(\"SUCCESS: File Not Found: \" + e);\n        }\n\n        cr.close();\n    }\n\n","sourceOld":"    public void testFileNotFound() throws IOException {\n        setUp_2();\n        CompoundFileReader cr = new CompoundFileReader(dir, \"f.comp\");\n\n        // Open two files\n        try {\n            IndexInput e1 = cr.openInput(\"bogus\");\n            fail(\"File not found\");\n\n        } catch (IOException e) {\n            /* success */\n            //System.out.println(\"SUCCESS: File Not Found: \" + e);\n        }\n\n        cr.close();\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestCompoundFile#testFileNotFound().mjava","pathOld":"src/test/org/apache/lucene/index/TestCompoundFile#testFileNotFound().mjava","sourceNew":"    public void testFileNotFound() throws IOException {\n        setUp_2();\n        CompoundFileReader cr = new CompoundFileReader(dir, \"f.comp\");\n\n        // Open two files\n        try {\n            cr.openInput(\"bogus\");\n            fail(\"File not found\");\n\n        } catch (IOException e) {\n            /* success */\n            //System.out.println(\"SUCCESS: File Not Found: \" + e);\n        }\n\n        cr.close();\n    }\n\n","sourceOld":"    public void testFileNotFound() throws IOException {\n        setUp_2();\n        CompoundFileReader cr = new CompoundFileReader(dir, \"f.comp\");\n\n        // Open two files\n        try {\n            cr.openInput(\"bogus\");\n            fail(\"File not found\");\n\n        } catch (IOException e) {\n            /* success */\n            //System.out.println(\"SUCCESS: File Not Found: \" + e);\n        }\n\n        cr.close();\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"e971ba25509e21a130fef61f0687be0446ca27a0":["1acbe60842541f8c38e2d60b03591478c9f91546"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"1acbe60842541f8c38e2d60b03591478c9f91546":["8fb95844e4ba5160067c64c5eb1cd8a09f7a94f1"],"8fb95844e4ba5160067c64c5eb1cd8a09f7a94f1":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a9ac13b5f0ce5ef1b2ce168367d993a79594b23a":["e971ba25509e21a130fef61f0687be0446ca27a0"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a9ac13b5f0ce5ef1b2ce168367d993a79594b23a"]},"commit2Childs":{"e971ba25509e21a130fef61f0687be0446ca27a0":["a9ac13b5f0ce5ef1b2ce168367d993a79594b23a"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["8fb95844e4ba5160067c64c5eb1cd8a09f7a94f1"],"1acbe60842541f8c38e2d60b03591478c9f91546":["e971ba25509e21a130fef61f0687be0446ca27a0"],"8fb95844e4ba5160067c64c5eb1cd8a09f7a94f1":["1acbe60842541f8c38e2d60b03591478c9f91546"],"a9ac13b5f0ce5ef1b2ce168367d993a79594b23a":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}