{"path":"solr/core/src/java/org/apache/solr/search/facet/UnInvertedField#getTermValue(TermsEnum,int).mjava","commits":[{"id":"ac53eb8ed1d40ceac7330e9dc2e5c258e8fc155d","date":1426480823,"type":1,"author":"Yonik Seeley","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/facet/UnInvertedField#getTermValue(TermsEnum,int).mjava","pathOld":"solr/core/src/java/org/apache/solr/request/UnInvertedField#getTermValue(TermsEnum,int).mjava","sourceNew":"  /** may return a reused BytesRef */\n  BytesRef getTermValue(TermsEnum te, int termNum) throws IOException {\n    //System.out.println(\"getTermValue termNum=\" + termNum + \" this=\" + this + \" numTerms=\" + numTermsInField);\n    if (bigTerms.size() > 0) {\n      // see if the term is one of our big terms.\n      TopTerm tt = bigTerms.get(termNum);\n      if (tt != null) {\n        //System.out.println(\"  return big \" + tt.term);\n        return tt.term;\n      }\n    }\n\n    return lookupTerm(te, termNum);\n  }\n\n","sourceOld":"  /** may return a reused BytesRef */\n  BytesRef getTermValue(TermsEnum te, int termNum) throws IOException {\n    //System.out.println(\"getTermValue termNum=\" + termNum + \" this=\" + this + \" numTerms=\" + numTermsInField);\n    if (bigTerms.size() > 0) {\n      // see if the term is one of our big terms.\n      TopTerm tt = bigTerms.get(termNum);\n      if (tt != null) {\n        //System.out.println(\"  return big \" + tt.term);\n        return tt.term;\n      }\n    }\n\n    return lookupTerm(te, termNum);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","date":1427779360,"type":1,"author":"Ryan Ernst","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/search/facet/UnInvertedField#getTermValue(TermsEnum,int).mjava","pathOld":"solr/core/src/java/org/apache/solr/request/UnInvertedField#getTermValue(TermsEnum,int).mjava","sourceNew":"  /** may return a reused BytesRef */\n  BytesRef getTermValue(TermsEnum te, int termNum) throws IOException {\n    //System.out.println(\"getTermValue termNum=\" + termNum + \" this=\" + this + \" numTerms=\" + numTermsInField);\n    if (bigTerms.size() > 0) {\n      // see if the term is one of our big terms.\n      TopTerm tt = bigTerms.get(termNum);\n      if (tt != null) {\n        //System.out.println(\"  return big \" + tt.term);\n        return tt.term;\n      }\n    }\n\n    return lookupTerm(te, termNum);\n  }\n\n","sourceOld":"  /** may return a reused BytesRef */\n  BytesRef getTermValue(TermsEnum te, int termNum) throws IOException {\n    //System.out.println(\"getTermValue termNum=\" + termNum + \" this=\" + this + \" numTerms=\" + numTermsInField);\n    if (bigTerms.size() > 0) {\n      // see if the term is one of our big terms.\n      TopTerm tt = bigTerms.get(termNum);\n      if (tt != null) {\n        //System.out.println(\"  return big \" + tt.term);\n        return tt.term;\n      }\n    }\n\n    return lookupTerm(te, termNum);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","ac53eb8ed1d40ceac7330e9dc2e5c258e8fc155d"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"ac53eb8ed1d40ceac7330e9dc2e5c258e8fc155d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["ac53eb8ed1d40ceac7330e9dc2e5c258e8fc155d"]},"commit2Childs":{"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","ac53eb8ed1d40ceac7330e9dc2e5c258e8fc155d"],"ac53eb8ed1d40ceac7330e9dc2e5c258e8fc155d":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}