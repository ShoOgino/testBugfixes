{"path":"solr/core/src/test/org/apache/solr/search/TestSolrFieldCacheBean#assertEntryListIncluded(boolean).mjava","commits":[{"id":"816521ebaad5add9cb96bb88c577394e2938c40b","date":1491931343,"type":0,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/search/TestSolrFieldCacheBean#assertEntryListIncluded(boolean).mjava","pathOld":"/dev/null","sourceNew":"  private void assertEntryListIncluded(boolean checkJmx) {\n    SolrFieldCacheBean mbean = new SolrFieldCacheBean();\n    Random r = random();\n    String registryName = TestUtil.randomSimpleString(r, 1, 10);\n    SolrMetricManager metricManager = h.getCoreContainer().getMetricManager();\n    mbean.initializeMetrics(metricManager, registryName, null);\n    MetricsMap metricsMap = (MetricsMap)metricManager.registry(registryName).getMetrics().get(\"CACHE.fieldCache\");\n    Map<String, Object> metrics = checkJmx ? metricsMap.getValue(true) : metricsMap.getValue();\n    assertTrue(((Number)metrics.get(\"entries_count\")).longValue() > 0);\n    assertNotNull(metrics.get(\"total_size\"));\n    assertNotNull(metrics.get(\"entry#0\"));\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["bfc52860e6d13d034226a760813c59d984c6817a"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"54ca69905c5d9d1529286f06ab1d12c68f6c13cb","date":1492683554,"type":0,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/search/TestSolrFieldCacheBean#assertEntryListIncluded(boolean).mjava","pathOld":"/dev/null","sourceNew":"  private void assertEntryListIncluded(boolean checkJmx) {\n    SolrFieldCacheBean mbean = new SolrFieldCacheBean();\n    Random r = random();\n    String registryName = TestUtil.randomSimpleString(r, 1, 10);\n    SolrMetricManager metricManager = h.getCoreContainer().getMetricManager();\n    mbean.initializeMetrics(metricManager, registryName, null);\n    MetricsMap metricsMap = (MetricsMap)metricManager.registry(registryName).getMetrics().get(\"CACHE.fieldCache\");\n    Map<String, Object> metrics = checkJmx ? metricsMap.getValue(true) : metricsMap.getValue();\n    assertTrue(((Number)metrics.get(\"entries_count\")).longValue() > 0);\n    assertNotNull(metrics.get(\"total_size\"));\n    assertNotNull(metrics.get(\"entry#0\"));\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bfc52860e6d13d034226a760813c59d984c6817a","date":1522229027,"type":3,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/search/TestSolrFieldCacheBean#assertEntryListIncluded(boolean).mjava","pathOld":"solr/core/src/test/org/apache/solr/search/TestSolrFieldCacheBean#assertEntryListIncluded(boolean).mjava","sourceNew":"  private void assertEntryListIncluded(boolean checkJmx) {\n    SolrFieldCacheBean mbean = new SolrFieldCacheBean();\n    Random r = random();\n    String registryName = TestUtil.randomSimpleString(r, 1, 10);\n    SolrMetricManager metricManager = h.getCoreContainer().getMetricManager();\n    mbean.initializeMetrics(metricManager, registryName, \"foo\", null);\n    MetricsMap metricsMap = (MetricsMap)((SolrMetricManager.GaugeWrapper)metricManager.registry(registryName).getMetrics().get(\"CACHE.fieldCache\")).getGauge();\n    Map<String, Object> metrics = checkJmx ? metricsMap.getValue(true) : metricsMap.getValue();\n    assertTrue(((Number)metrics.get(\"entries_count\")).longValue() > 0);\n    assertNotNull(metrics.get(\"total_size\"));\n    assertNotNull(metrics.get(\"entry#0\"));\n  }\n\n","sourceOld":"  private void assertEntryListIncluded(boolean checkJmx) {\n    SolrFieldCacheBean mbean = new SolrFieldCacheBean();\n    Random r = random();\n    String registryName = TestUtil.randomSimpleString(r, 1, 10);\n    SolrMetricManager metricManager = h.getCoreContainer().getMetricManager();\n    mbean.initializeMetrics(metricManager, registryName, null);\n    MetricsMap metricsMap = (MetricsMap)metricManager.registry(registryName).getMetrics().get(\"CACHE.fieldCache\");\n    Map<String, Object> metrics = checkJmx ? metricsMap.getValue(true) : metricsMap.getValue();\n    assertTrue(((Number)metrics.get(\"entries_count\")).longValue() > 0);\n    assertNotNull(metrics.get(\"total_size\"));\n    assertNotNull(metrics.get(\"entry#0\"));\n  }\n\n","bugFix":["816521ebaad5add9cb96bb88c577394e2938c40b"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"43564cbb30b064675027cfb569564e8531096e97","date":1522334265,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/search/TestSolrFieldCacheBean#assertEntryListIncluded(boolean).mjava","pathOld":"solr/core/src/test/org/apache/solr/search/TestSolrFieldCacheBean#assertEntryListIncluded(boolean).mjava","sourceNew":"  private void assertEntryListIncluded(boolean checkJmx) {\n    SolrFieldCacheBean mbean = new SolrFieldCacheBean();\n    Random r = random();\n    String registryName = TestUtil.randomSimpleString(r, 1, 10);\n    SolrMetricManager metricManager = h.getCoreContainer().getMetricManager();\n    mbean.initializeMetrics(metricManager, registryName, \"foo\", null);\n    MetricsMap metricsMap = (MetricsMap)((SolrMetricManager.GaugeWrapper)metricManager.registry(registryName).getMetrics().get(\"CACHE.fieldCache\")).getGauge();\n    Map<String, Object> metrics = checkJmx ? metricsMap.getValue(true) : metricsMap.getValue();\n    assertTrue(((Number)metrics.get(\"entries_count\")).longValue() > 0);\n    assertNotNull(metrics.get(\"total_size\"));\n    assertNotNull(metrics.get(\"entry#0\"));\n  }\n\n","sourceOld":"  private void assertEntryListIncluded(boolean checkJmx) {\n    SolrFieldCacheBean mbean = new SolrFieldCacheBean();\n    Random r = random();\n    String registryName = TestUtil.randomSimpleString(r, 1, 10);\n    SolrMetricManager metricManager = h.getCoreContainer().getMetricManager();\n    mbean.initializeMetrics(metricManager, registryName, null);\n    MetricsMap metricsMap = (MetricsMap)metricManager.registry(registryName).getMetrics().get(\"CACHE.fieldCache\");\n    Map<String, Object> metrics = checkJmx ? metricsMap.getValue(true) : metricsMap.getValue();\n    assertTrue(((Number)metrics.get(\"entries_count\")).longValue() > 0);\n    assertNotNull(metrics.get(\"total_size\"));\n    assertNotNull(metrics.get(\"entry#0\"));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2e9e5eaf280a6aa21423126b8232aa157a9b7366","date":1571772228,"type":3,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/search/TestSolrFieldCacheBean#assertEntryListIncluded(boolean).mjava","pathOld":"solr/core/src/test/org/apache/solr/search/TestSolrFieldCacheBean#assertEntryListIncluded(boolean).mjava","sourceNew":"  private void assertEntryListIncluded(boolean checkJmx) {\n    SolrFieldCacheBean mbean = new SolrFieldCacheBean();\n    Random r = random();\n    String registryName = TestUtil.randomSimpleString(r, 1, 10);\n    SolrMetricManager metricManager = h.getCoreContainer().getMetricManager();\n    SolrMetricsContext solrMetricsContext = new SolrMetricsContext(metricManager, registryName, \"foo\");\n    mbean.initializeMetrics(solrMetricsContext, null);\n    MetricsMap metricsMap = (MetricsMap)((SolrMetricManager.GaugeWrapper)metricManager.registry(registryName).getMetrics().get(\"CACHE.fieldCache\")).getGauge();\n    Map<String, Object> metrics = checkJmx ? metricsMap.getValue(true) : metricsMap.getValue();\n    assertTrue(((Number)metrics.get(\"entries_count\")).longValue() > 0);\n    assertNotNull(metrics.get(\"total_size\"));\n    assertNotNull(metrics.get(\"entry#0\"));\n  }\n\n","sourceOld":"  private void assertEntryListIncluded(boolean checkJmx) {\n    SolrFieldCacheBean mbean = new SolrFieldCacheBean();\n    Random r = random();\n    String registryName = TestUtil.randomSimpleString(r, 1, 10);\n    SolrMetricManager metricManager = h.getCoreContainer().getMetricManager();\n    mbean.initializeMetrics(metricManager, registryName, \"foo\", null);\n    MetricsMap metricsMap = (MetricsMap)((SolrMetricManager.GaugeWrapper)metricManager.registry(registryName).getMetrics().get(\"CACHE.fieldCache\")).getGauge();\n    Map<String, Object> metrics = checkJmx ? metricsMap.getValue(true) : metricsMap.getValue();\n    assertTrue(((Number)metrics.get(\"entries_count\")).longValue() > 0);\n    assertNotNull(metrics.get(\"total_size\"));\n    assertNotNull(metrics.get(\"entry#0\"));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"54ca69905c5d9d1529286f06ab1d12c68f6c13cb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"bfc52860e6d13d034226a760813c59d984c6817a":["816521ebaad5add9cb96bb88c577394e2938c40b"],"43564cbb30b064675027cfb569564e8531096e97":["816521ebaad5add9cb96bb88c577394e2938c40b","bfc52860e6d13d034226a760813c59d984c6817a"],"2e9e5eaf280a6aa21423126b8232aa157a9b7366":["43564cbb30b064675027cfb569564e8531096e97"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"816521ebaad5add9cb96bb88c577394e2938c40b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["2e9e5eaf280a6aa21423126b8232aa157a9b7366"]},"commit2Childs":{"54ca69905c5d9d1529286f06ab1d12c68f6c13cb":[],"bfc52860e6d13d034226a760813c59d984c6817a":["43564cbb30b064675027cfb569564e8531096e97"],"43564cbb30b064675027cfb569564e8531096e97":["2e9e5eaf280a6aa21423126b8232aa157a9b7366"],"2e9e5eaf280a6aa21423126b8232aa157a9b7366":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["54ca69905c5d9d1529286f06ab1d12c68f6c13cb","816521ebaad5add9cb96bb88c577394e2938c40b"],"816521ebaad5add9cb96bb88c577394e2938c40b":["bfc52860e6d13d034226a760813c59d984c6817a","43564cbb30b064675027cfb569564e8531096e97"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["54ca69905c5d9d1529286f06ab1d12c68f6c13cb","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}