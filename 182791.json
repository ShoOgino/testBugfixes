{"path":"lucene/src/java/org/apache/lucene/index/NormsConsumerPerField#getConsumer(Type).mjava","commits":[{"id":"9e8d5a6ffbfa3405d234a87c833741eabed98d13","date":1326725835,"type":0,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/NormsConsumerPerField#getConsumer(Type).mjava","pathOld":"/dev/null","sourceNew":"  private DocValuesConsumer getConsumer(Type type) throws IOException {\n    if (consumer == null) {\n      fieldInfo.setNormValueType(type, false);\n      consumer = parent.newConsumer(docState.docWriter.newPerDocWriteState(\"\"), fieldInfo, type);\n      this.initType = type;\n    }\n    if (initType != type) {\n      throw new IllegalArgumentException(\"NormTypes for field: \" + fieldInfo.name + \" doesn't match \" + initType + \" != \" + type);\n    }\n    return consumer;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":5,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/NormsConsumerPerField#getConsumer(Type).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/NormsConsumerPerField#getConsumer(Type).mjava","sourceNew":"  private DocValuesConsumer getConsumer(Type type) throws IOException {\n    if (consumer == null) {\n      fieldInfo.setNormValueType(type, false);\n      consumer = parent.newConsumer(docState.docWriter.newPerDocWriteState(\"\"), fieldInfo, type);\n      this.initType = type;\n    }\n    if (initType != type) {\n      throw new IllegalArgumentException(\"NormTypes for field: \" + fieldInfo.name + \" doesn't match \" + initType + \" != \" + type);\n    }\n    return consumer;\n  }\n\n","sourceOld":"  private DocValuesConsumer getConsumer(Type type) throws IOException {\n    if (consumer == null) {\n      fieldInfo.setNormValueType(type, false);\n      consumer = parent.newConsumer(docState.docWriter.newPerDocWriteState(\"\"), fieldInfo, type);\n      this.initType = type;\n    }\n    if (initType != type) {\n      throw new IllegalArgumentException(\"NormTypes for field: \" + fieldInfo.name + \" doesn't match \" + initType + \" != \" + type);\n    }\n    return consumer;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"9e8d5a6ffbfa3405d234a87c833741eabed98d13":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["9e8d5a6ffbfa3405d234a87c833741eabed98d13"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"]},"commit2Childs":{"9e8d5a6ffbfa3405d234a87c833741eabed98d13":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9e8d5a6ffbfa3405d234a87c833741eabed98d13"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}