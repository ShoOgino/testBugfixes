{"path":"src/java/org/apache/lucene/search/BooleanQuery.BooleanWeight#BooleanWeight(Searcher).mjava","commits":[{"id":"27274410c91546fcfc28e692abd2dd77ca99be4b","date":1042501834,"type":0,"author":"Doug Cutting","isMerge":false,"pathNew":"src/java/org/apache/lucene/search/BooleanQuery.BooleanWeight#BooleanWeight(Searcher).mjava","pathOld":"/dev/null","sourceNew":"    public BooleanWeight(Searcher searcher) {\n      this.searcher = searcher;\n      for (int i = 0 ; i < clauses.size(); i++) {\n        BooleanClause c = (BooleanClause)clauses.elementAt(i);\n        weights.add(c.query.createWeight(searcher));\n      }\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0d1fc81afb0c32e0b7589e656cceb5cf177093fa","date":1093637352,"type":3,"author":"Daniel Naber","isMerge":false,"pathNew":"src/java/org/apache/lucene/search/BooleanQuery.BooleanWeight#BooleanWeight(Searcher).mjava","pathOld":"src/java/org/apache/lucene/search/BooleanQuery.BooleanWeight#BooleanWeight(Searcher).mjava","sourceNew":"    public BooleanWeight(Searcher searcher) {\n      this.searcher = searcher;\n      for (int i = 0 ; i < clauses.size(); i++) {\n        BooleanClause c = (BooleanClause)clauses.elementAt(i);\n        weights.add(c.getQuery().createWeight(searcher));\n      }\n    }\n\n","sourceOld":"    public BooleanWeight(Searcher searcher) {\n      this.searcher = searcher;\n      for (int i = 0 ; i < clauses.size(); i++) {\n        BooleanClause c = (BooleanClause)clauses.elementAt(i);\n        weights.add(c.query.createWeight(searcher));\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"29d6eadc26bef1d3f5d3804b90cb7ba77162d007","date":1106594461,"type":3,"author":"Christoph Goller","isMerge":false,"pathNew":"src/java/org/apache/lucene/search/BooleanQuery.BooleanWeight#BooleanWeight(Searcher).mjava","pathOld":"src/java/org/apache/lucene/search/BooleanQuery.BooleanWeight#BooleanWeight(Searcher).mjava","sourceNew":"    public BooleanWeight(Searcher searcher) {\n      this.searcher = searcher;\n      for (int i = 0 ; i < clauses.size(); i++) {\n        BooleanClause c = (BooleanClause)clauses.elementAt(i);\n        weights.add(c.getQuery().createWeight(searcher));\n      }\n  //System.out.println(\"Creating \" + getClass().getName());\n    }\n\n","sourceOld":"    public BooleanWeight(Searcher searcher) {\n      this.searcher = searcher;\n      for (int i = 0 ; i < clauses.size(); i++) {\n        BooleanClause c = (BooleanClause)clauses.elementAt(i);\n        weights.add(c.getQuery().createWeight(searcher));\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"402061809f3a4629ea0c449e33e9f94a9772f3c3","date":1113967712,"type":3,"author":"Otis Gospodnetic","isMerge":false,"pathNew":"src/java/org/apache/lucene/search/BooleanQuery.BooleanWeight#BooleanWeight(Searcher).mjava","pathOld":"src/java/org/apache/lucene/search/BooleanQuery.BooleanWeight#BooleanWeight(Searcher).mjava","sourceNew":"    public BooleanWeight(Searcher searcher)\n      throws IOException {\n      this.similarity = getSimilarity(searcher);\n      for (int i = 0 ; i < clauses.size(); i++) {\n        BooleanClause c = (BooleanClause)clauses.elementAt(i);\n        weights.add(c.getQuery().createWeight(searcher));\n      }\n    }\n\n","sourceOld":"    public BooleanWeight(Searcher searcher) {\n      this.searcher = searcher;\n      for (int i = 0 ; i < clauses.size(); i++) {\n        BooleanClause c = (BooleanClause)clauses.elementAt(i);\n        weights.add(c.getQuery().createWeight(searcher));\n      }\n  //System.out.println(\"Creating \" + getClass().getName());\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"570e1572d75ec17bfc5c2e0e4e4dad03e3ce323e","date":1166323237,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"src/java/org/apache/lucene/search/BooleanQuery.BooleanWeight#BooleanWeight(Searcher).mjava","pathOld":"src/java/org/apache/lucene/search/BooleanQuery.BooleanWeight#BooleanWeight(Searcher).mjava","sourceNew":"    public BooleanWeight(Searcher searcher)\n      throws IOException {\n      this.similarity = getSimilarity(searcher);\n      for (int i = 0 ; i < clauses.size(); i++) {\n        BooleanClause c = (BooleanClause)clauses.get(i);\n        weights.add(c.getQuery().createWeight(searcher));\n      }\n    }\n\n","sourceOld":"    public BooleanWeight(Searcher searcher)\n      throws IOException {\n      this.similarity = getSimilarity(searcher);\n      for (int i = 0 ; i < clauses.size(); i++) {\n        BooleanClause c = (BooleanClause)clauses.elementAt(i);\n        weights.add(c.getQuery().createWeight(searcher));\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e5c9f08bccc6e33aa7a4aa4510770bc24cad639d","date":1226550185,"type":3,"author":"Otis Gospodnetic","isMerge":false,"pathNew":"src/java/org/apache/lucene/search/BooleanQuery.BooleanWeight#BooleanWeight(Searcher).mjava","pathOld":"src/java/org/apache/lucene/search/BooleanQuery.BooleanWeight#BooleanWeight(Searcher).mjava","sourceNew":"    public BooleanWeight(Searcher searcher)\n      throws IOException {\n      this.similarity = getSimilarity(searcher);\n      weights = new ArrayList(clauses.size());\n      for (int i = 0 ; i < clauses.size(); i++) {\n        BooleanClause c = (BooleanClause)clauses.get(i);\n        weights.add(c.getQuery().createWeight(searcher));\n      }\n    }\n\n","sourceOld":"    public BooleanWeight(Searcher searcher)\n      throws IOException {\n      this.similarity = getSimilarity(searcher);\n      for (int i = 0 ; i < clauses.size(); i++) {\n        BooleanClause c = (BooleanClause)clauses.get(i);\n        weights.add(c.getQuery().createWeight(searcher));\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"052fac7830290bd38a04cddee1a121ee07656b56","date":1245780702,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/search/BooleanQuery.BooleanWeight#BooleanWeight(Searcher).mjava","pathOld":"src/java/org/apache/lucene/search/BooleanQuery.BooleanWeight#BooleanWeight(Searcher).mjava","sourceNew":"    public BooleanWeight(Searcher searcher)\n      throws IOException {\n      this.similarity = getSimilarity(searcher);\n      weights = new ArrayList(clauses.size());\n      for (int i = 0 ; i < clauses.size(); i++) {\n        BooleanClause c = (BooleanClause)clauses.get(i);\n        weights.add(c.getQuery().createQueryWeight(searcher));\n      }\n    }\n\n","sourceOld":"    public BooleanWeight(Searcher searcher)\n      throws IOException {\n      this.similarity = getSimilarity(searcher);\n      weights = new ArrayList(clauses.size());\n      for (int i = 0 ; i < clauses.size(); i++) {\n        BooleanClause c = (BooleanClause)clauses.get(i);\n        weights.add(c.getQuery().createWeight(searcher));\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fe941135bdfc28c81e20b4d21422f8726af34925","date":1250040150,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"src/java/org/apache/lucene/search/BooleanQuery.BooleanWeight#BooleanWeight(Searcher).mjava","pathOld":"src/java/org/apache/lucene/search/BooleanQuery.BooleanWeight#BooleanWeight(Searcher).mjava","sourceNew":"    public BooleanWeight(Searcher searcher)\n      throws IOException {\n      this.similarity = getSimilarity(searcher);\n      weights = new ArrayList(clauses.size());\n      for (int i = 0 ; i < clauses.size(); i++) {\n        BooleanClause c = (BooleanClause)clauses.get(i);\n        weights.add(c.getQuery().createWeight(searcher));\n      }\n    }\n\n","sourceOld":"    public BooleanWeight(Searcher searcher)\n      throws IOException {\n      this.similarity = getSimilarity(searcher);\n      weights = new ArrayList(clauses.size());\n      for (int i = 0 ; i < clauses.size(); i++) {\n        BooleanClause c = (BooleanClause)clauses.get(i);\n        weights.add(c.getQuery().createQueryWeight(searcher));\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b4e40ecf6eb9bff831572fe33a2758f9ef1e0dcc","date":1255773182,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/java/org/apache/lucene/search/BooleanQuery.BooleanWeight#BooleanWeight(Searcher).mjava","pathOld":"src/java/org/apache/lucene/search/BooleanQuery.BooleanWeight#BooleanWeight(Searcher).mjava","sourceNew":"    public BooleanWeight(Searcher searcher)\n      throws IOException {\n      this.similarity = getSimilarity(searcher);\n      weights = new ArrayList<Weight>(clauses.size());\n      for (int i = 0 ; i < clauses.size(); i++) {\n        BooleanClause c = (BooleanClause)clauses.get(i);\n        weights.add(c.getQuery().createWeight(searcher));\n      }\n    }\n\n","sourceOld":"    public BooleanWeight(Searcher searcher)\n      throws IOException {\n      this.similarity = getSimilarity(searcher);\n      weights = new ArrayList(clauses.size());\n      for (int i = 0 ; i < clauses.size(); i++) {\n        BooleanClause c = (BooleanClause)clauses.get(i);\n        weights.add(c.getQuery().createWeight(searcher));\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"20645c714ca2a7b7707c2707d58ee9fa384c7362","date":1256074979,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/java/org/apache/lucene/search/BooleanQuery.BooleanWeight#BooleanWeight(Searcher).mjava","pathOld":"src/java/org/apache/lucene/search/BooleanQuery.BooleanWeight#BooleanWeight(Searcher).mjava","sourceNew":"    public BooleanWeight(Searcher searcher)\n      throws IOException {\n      this.similarity = getSimilarity(searcher);\n      weights = new ArrayList<Weight>(clauses.size());\n      for (int i = 0 ; i < clauses.size(); i++) {\n        weights.add(clauses.get(i).getQuery().createWeight(searcher));\n      }\n    }\n\n","sourceOld":"    public BooleanWeight(Searcher searcher)\n      throws IOException {\n      this.similarity = getSimilarity(searcher);\n      weights = new ArrayList<Weight>(clauses.size());\n      for (int i = 0 ; i < clauses.size(); i++) {\n        BooleanClause c = (BooleanClause)clauses.get(i);\n        weights.add(c.getQuery().createWeight(searcher));\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/search/BooleanQuery.BooleanWeight#BooleanWeight(Searcher).mjava","pathOld":"src/java/org/apache/lucene/search/BooleanQuery.BooleanWeight#BooleanWeight(Searcher).mjava","sourceNew":"    public BooleanWeight(Searcher searcher)\n      throws IOException {\n      this.similarity = getSimilarity(searcher);\n      weights = new ArrayList<Weight>(clauses.size());\n      for (int i = 0 ; i < clauses.size(); i++) {\n        weights.add(clauses.get(i).getQuery().createWeight(searcher));\n      }\n    }\n\n","sourceOld":"    public BooleanWeight(Searcher searcher)\n      throws IOException {\n      this.similarity = getSimilarity(searcher);\n      weights = new ArrayList<Weight>(clauses.size());\n      for (int i = 0 ; i < clauses.size(); i++) {\n        weights.add(clauses.get(i).getQuery().createWeight(searcher));\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b4e40ecf6eb9bff831572fe33a2758f9ef1e0dcc":["fe941135bdfc28c81e20b4d21422f8726af34925"],"e5c9f08bccc6e33aa7a4aa4510770bc24cad639d":["570e1572d75ec17bfc5c2e0e4e4dad03e3ce323e"],"fe941135bdfc28c81e20b4d21422f8726af34925":["052fac7830290bd38a04cddee1a121ee07656b56"],"402061809f3a4629ea0c449e33e9f94a9772f3c3":["29d6eadc26bef1d3f5d3804b90cb7ba77162d007"],"27274410c91546fcfc28e692abd2dd77ca99be4b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"20645c714ca2a7b7707c2707d58ee9fa384c7362":["b4e40ecf6eb9bff831572fe33a2758f9ef1e0dcc"],"0d1fc81afb0c32e0b7589e656cceb5cf177093fa":["27274410c91546fcfc28e692abd2dd77ca99be4b"],"570e1572d75ec17bfc5c2e0e4e4dad03e3ce323e":["402061809f3a4629ea0c449e33e9f94a9772f3c3"],"052fac7830290bd38a04cddee1a121ee07656b56":["e5c9f08bccc6e33aa7a4aa4510770bc24cad639d"],"29d6eadc26bef1d3f5d3804b90cb7ba77162d007":["0d1fc81afb0c32e0b7589e656cceb5cf177093fa"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["20645c714ca2a7b7707c2707d58ee9fa384c7362"]},"commit2Childs":{"b4e40ecf6eb9bff831572fe33a2758f9ef1e0dcc":["20645c714ca2a7b7707c2707d58ee9fa384c7362"],"e5c9f08bccc6e33aa7a4aa4510770bc24cad639d":["052fac7830290bd38a04cddee1a121ee07656b56"],"fe941135bdfc28c81e20b4d21422f8726af34925":["b4e40ecf6eb9bff831572fe33a2758f9ef1e0dcc"],"402061809f3a4629ea0c449e33e9f94a9772f3c3":["570e1572d75ec17bfc5c2e0e4e4dad03e3ce323e"],"27274410c91546fcfc28e692abd2dd77ca99be4b":["0d1fc81afb0c32e0b7589e656cceb5cf177093fa"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["27274410c91546fcfc28e692abd2dd77ca99be4b"],"20645c714ca2a7b7707c2707d58ee9fa384c7362":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"0d1fc81afb0c32e0b7589e656cceb5cf177093fa":["29d6eadc26bef1d3f5d3804b90cb7ba77162d007"],"570e1572d75ec17bfc5c2e0e4e4dad03e3ce323e":["e5c9f08bccc6e33aa7a4aa4510770bc24cad639d"],"052fac7830290bd38a04cddee1a121ee07656b56":["fe941135bdfc28c81e20b4d21422f8726af34925"],"29d6eadc26bef1d3f5d3804b90cb7ba77162d007":["402061809f3a4629ea0c449e33e9f94a9772f3c3"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}