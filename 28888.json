{"path":"lucene/join/src/java/org/apache/lucene/search/join/ToParentBlockJoinQuery.BlockJoinWeight#explain(LeafReaderContext,int).mjava","commits":[{"id":"c9fb5f46e264daf5ba3860defe623a89d202dd87","date":1411516315,"type":0,"author":"Ryan Ernst","isMerge":false,"pathNew":"lucene/join/src/java/org/apache/lucene/search/join/ToParentBlockJoinQuery.BlockJoinWeight#explain(LeafReaderContext,int).mjava","pathOld":"/dev/null","sourceNew":"    @Override\n    public Explanation explain(LeafReaderContext context, int doc) throws IOException {\n      BlockJoinScorer scorer = (BlockJoinScorer) scorer(context, context.reader().getLiveDocs());\n      if (scorer != null && scorer.advance(doc) == doc) {\n        return scorer.explain(context.docBase);\n      }\n      return new ComplexExplanation(false, 0.0f, \"Not a match\");\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["781239fc84d36be12b84e4d3e2618f5f07a182e3"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"781239fc84d36be12b84e4d3e2618f5f07a182e3","date":1423139668,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/join/src/java/org/apache/lucene/search/join/ToParentBlockJoinQuery.BlockJoinWeight#explain(LeafReaderContext,int).mjava","pathOld":"lucene/join/src/java/org/apache/lucene/search/join/ToParentBlockJoinQuery.BlockJoinWeight#explain(LeafReaderContext,int).mjava","sourceNew":"    @Override\n    public Explanation explain(LeafReaderContext context, int doc) throws IOException {\n      BlockJoinScorer scorer = (BlockJoinScorer) scorer(context, context.reader().getLiveDocs(), true);\n      if (scorer != null && scorer.advance(doc) == doc) {\n        return scorer.explain(context.docBase);\n      }\n      return new ComplexExplanation(false, 0.0f, \"Not a match\");\n    }\n\n","sourceOld":"    @Override\n    public Explanation explain(LeafReaderContext context, int doc) throws IOException {\n      BlockJoinScorer scorer = (BlockJoinScorer) scorer(context, context.reader().getLiveDocs());\n      if (scorer != null && scorer.advance(doc) == doc) {\n        return scorer.explain(context.docBase);\n      }\n      return new ComplexExplanation(false, 0.0f, \"Not a match\");\n    }\n\n","bugFix":["c9fb5f46e264daf5ba3860defe623a89d202dd87"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fb17639909a369c1e64866842e5c213440acc17e","date":1423238093,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/join/src/java/org/apache/lucene/search/join/ToParentBlockJoinQuery.BlockJoinWeight#explain(LeafReaderContext,int).mjava","pathOld":"lucene/join/src/java/org/apache/lucene/search/join/ToParentBlockJoinQuery.BlockJoinWeight#explain(LeafReaderContext,int).mjava","sourceNew":"    @Override\n    public Explanation explain(LeafReaderContext context, int doc) throws IOException {\n      BlockJoinScorer scorer = (BlockJoinScorer) scorer(context, context.reader().getLiveDocs());\n      if (scorer != null && scorer.advance(doc) == doc) {\n        return scorer.explain(context.docBase);\n      }\n      return new ComplexExplanation(false, 0.0f, \"Not a match\");\n    }\n\n","sourceOld":"    @Override\n    public Explanation explain(LeafReaderContext context, int doc) throws IOException {\n      BlockJoinScorer scorer = (BlockJoinScorer) scorer(context, context.reader().getLiveDocs(), true);\n      if (scorer != null && scorer.advance(doc) == doc) {\n        return scorer.explain(context.docBase);\n      }\n      return new ComplexExplanation(false, 0.0f, \"Not a match\");\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ff3285c7b2387faedef0ffb24db20c4cbbd9fd91","date":1429620941,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/join/src/java/org/apache/lucene/search/join/ToParentBlockJoinQuery.BlockJoinWeight#explain(LeafReaderContext,int).mjava","pathOld":"lucene/join/src/java/org/apache/lucene/search/join/ToParentBlockJoinQuery.BlockJoinWeight#explain(LeafReaderContext,int).mjava","sourceNew":"    @Override\n    public Explanation explain(LeafReaderContext context, int doc) throws IOException {\n      BlockJoinScorer scorer = (BlockJoinScorer) scorer(context, context.reader().getLiveDocs());\n      if (scorer != null && scorer.advance(doc) == doc) {\n        return scorer.explain(context.docBase);\n      }\n      return Explanation.noMatch(\"Not a match\");\n    }\n\n","sourceOld":"    @Override\n    public Explanation explain(LeafReaderContext context, int doc) throws IOException {\n      BlockJoinScorer scorer = (BlockJoinScorer) scorer(context, context.reader().getLiveDocs());\n      if (scorer != null && scorer.advance(doc) == doc) {\n        return scorer.explain(context.docBase);\n      }\n      return new ComplexExplanation(false, 0.0f, \"Not a match\");\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0f4464508ee83288c8c4585b533f9faaa93aa314","date":1435240759,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/join/src/java/org/apache/lucene/search/join/ToParentBlockJoinQuery.BlockJoinWeight#explain(LeafReaderContext,int).mjava","pathOld":"lucene/join/src/java/org/apache/lucene/search/join/ToParentBlockJoinQuery.BlockJoinWeight#explain(LeafReaderContext,int).mjava","sourceNew":"    @Override\n    public Explanation explain(LeafReaderContext context, int doc) throws IOException {\n      BlockJoinScorer scorer = (BlockJoinScorer) scorer(context);\n      if (scorer != null && scorer.advance(doc) == doc) {\n        return scorer.explain(context.docBase);\n      }\n      return Explanation.noMatch(\"Not a match\");\n    }\n\n","sourceOld":"    @Override\n    public Explanation explain(LeafReaderContext context, int doc) throws IOException {\n      BlockJoinScorer scorer = (BlockJoinScorer) scorer(context, context.reader().getLiveDocs());\n      if (scorer != null && scorer.advance(doc) == doc) {\n        return scorer.explain(context.docBase);\n      }\n      return Explanation.noMatch(\"Not a match\");\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7dd748bb245633a8195281556bb0e68a6ea97d18","date":1449755030,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/join/src/java/org/apache/lucene/search/join/ToParentBlockJoinQuery.BlockJoinWeight#explain(LeafReaderContext,int).mjava","pathOld":"lucene/join/src/java/org/apache/lucene/search/join/ToParentBlockJoinQuery.BlockJoinWeight#explain(LeafReaderContext,int).mjava","sourceNew":"    @Override\n    public Explanation explain(LeafReaderContext context, int doc) throws IOException {\n      BlockJoinScorer scorer = (BlockJoinScorer) scorer(context);\n      if (scorer != null && scorer.iterator().advance(doc) == doc) {\n        return scorer.explain(context.docBase);\n      }\n      return Explanation.noMatch(\"Not a match\");\n    }\n\n","sourceOld":"    @Override\n    public Explanation explain(LeafReaderContext context, int doc) throws IOException {\n      BlockJoinScorer scorer = (BlockJoinScorer) scorer(context);\n      if (scorer != null && scorer.advance(doc) == doc) {\n        return scorer.explain(context.docBase);\n      }\n      return Explanation.noMatch(\"Not a match\");\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e5c16d494b4cccbc6f3aa00f05421575bdb11da7","date":1464182657,"type":3,"author":"Martijn van Groningen","isMerge":false,"pathNew":"lucene/join/src/java/org/apache/lucene/search/join/ToParentBlockJoinQuery.BlockJoinWeight#explain(LeafReaderContext,int).mjava","pathOld":"lucene/join/src/java/org/apache/lucene/search/join/ToParentBlockJoinQuery.BlockJoinWeight#explain(LeafReaderContext,int).mjava","sourceNew":"    @Override\n    public Explanation explain(LeafReaderContext context, int doc) throws IOException {\n      BlockJoinScorer scorer = (BlockJoinScorer) scorer(context);\n      if (scorer != null && scorer.iterator().advance(doc) == doc) {\n        return scorer.explain(context, childWeight);\n      }\n      return Explanation.noMatch(\"Not a match\");\n    }\n\n","sourceOld":"    @Override\n    public Explanation explain(LeafReaderContext context, int doc) throws IOException {\n      BlockJoinScorer scorer = (BlockJoinScorer) scorer(context);\n      if (scorer != null && scorer.iterator().advance(doc) == doc) {\n        return scorer.explain(context.docBase);\n      }\n      return Explanation.noMatch(\"Not a match\");\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0e121d43b5a10f2df530f406f935102656e9c4e8","date":1464198131,"type":3,"author":"Noble Paul","isMerge":true,"pathNew":"lucene/join/src/java/org/apache/lucene/search/join/ToParentBlockJoinQuery.BlockJoinWeight#explain(LeafReaderContext,int).mjava","pathOld":"lucene/join/src/java/org/apache/lucene/search/join/ToParentBlockJoinQuery.BlockJoinWeight#explain(LeafReaderContext,int).mjava","sourceNew":"    @Override\n    public Explanation explain(LeafReaderContext context, int doc) throws IOException {\n      BlockJoinScorer scorer = (BlockJoinScorer) scorer(context);\n      if (scorer != null && scorer.iterator().advance(doc) == doc) {\n        return scorer.explain(context, childWeight);\n      }\n      return Explanation.noMatch(\"Not a match\");\n    }\n\n","sourceOld":"    @Override\n    public Explanation explain(LeafReaderContext context, int doc) throws IOException {\n      BlockJoinScorer scorer = (BlockJoinScorer) scorer(context);\n      if (scorer != null && scorer.iterator().advance(doc) == doc) {\n        return scorer.explain(context.docBase);\n      }\n      return Explanation.noMatch(\"Not a match\");\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"83870855d82aba6819217abeff5a40779dbb28b4","date":1464291012,"type":3,"author":"Mike McCandless","isMerge":true,"pathNew":"lucene/join/src/java/org/apache/lucene/search/join/ToParentBlockJoinQuery.BlockJoinWeight#explain(LeafReaderContext,int).mjava","pathOld":"lucene/join/src/java/org/apache/lucene/search/join/ToParentBlockJoinQuery.BlockJoinWeight#explain(LeafReaderContext,int).mjava","sourceNew":"    @Override\n    public Explanation explain(LeafReaderContext context, int doc) throws IOException {\n      BlockJoinScorer scorer = (BlockJoinScorer) scorer(context);\n      if (scorer != null && scorer.iterator().advance(doc) == doc) {\n        return scorer.explain(context, childWeight);\n      }\n      return Explanation.noMatch(\"Not a match\");\n    }\n\n","sourceOld":"    @Override\n    public Explanation explain(LeafReaderContext context, int doc) throws IOException {\n      BlockJoinScorer scorer = (BlockJoinScorer) scorer(context);\n      if (scorer != null && scorer.iterator().advance(doc) == doc) {\n        return scorer.explain(context.docBase);\n      }\n      return Explanation.noMatch(\"Not a match\");\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"96ab132e6f739772060bedf1719a057e97d5b759","date":1468422264,"type":3,"author":"Christine Poerschke","isMerge":false,"pathNew":"lucene/join/src/java/org/apache/lucene/search/join/ToParentBlockJoinQuery.BlockJoinWeight#explain(LeafReaderContext,int).mjava","pathOld":"lucene/join/src/java/org/apache/lucene/search/join/ToParentBlockJoinQuery.BlockJoinWeight#explain(LeafReaderContext,int).mjava","sourceNew":"    @Override\n    public Explanation explain(LeafReaderContext context, int doc) throws IOException {\n      BlockJoinScorer scorer = (BlockJoinScorer) scorer(context);\n      if (scorer != null && scorer.iterator().advance(doc) == doc) {\n        return scorer.explain(context, in);\n      }\n      return Explanation.noMatch(\"Not a match\");\n    }\n\n","sourceOld":"    @Override\n    public Explanation explain(LeafReaderContext context, int doc) throws IOException {\n      BlockJoinScorer scorer = (BlockJoinScorer) scorer(context);\n      if (scorer != null && scorer.iterator().advance(doc) == doc) {\n        return scorer.explain(context, childWeight);\n      }\n      return Explanation.noMatch(\"Not a match\");\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"lucene/join/src/java/org/apache/lucene/search/join/ToParentBlockJoinQuery.BlockJoinWeight#explain(LeafReaderContext,int).mjava","pathOld":"lucene/join/src/java/org/apache/lucene/search/join/ToParentBlockJoinQuery.BlockJoinWeight#explain(LeafReaderContext,int).mjava","sourceNew":"    @Override\n    public Explanation explain(LeafReaderContext context, int doc) throws IOException {\n      BlockJoinScorer scorer = (BlockJoinScorer) scorer(context);\n      if (scorer != null && scorer.iterator().advance(doc) == doc) {\n        return scorer.explain(context, in);\n      }\n      return Explanation.noMatch(\"Not a match\");\n    }\n\n","sourceOld":"    @Override\n    public Explanation explain(LeafReaderContext context, int doc) throws IOException {\n      BlockJoinScorer scorer = (BlockJoinScorer) scorer(context);\n      if (scorer != null && scorer.iterator().advance(doc) == doc) {\n        return scorer.explain(context.docBase);\n      }\n      return Explanation.noMatch(\"Not a match\");\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"fb17639909a369c1e64866842e5c213440acc17e":["781239fc84d36be12b84e4d3e2618f5f07a182e3"],"0e121d43b5a10f2df530f406f935102656e9c4e8":["7dd748bb245633a8195281556bb0e68a6ea97d18","e5c16d494b4cccbc6f3aa00f05421575bdb11da7"],"781239fc84d36be12b84e4d3e2618f5f07a182e3":["c9fb5f46e264daf5ba3860defe623a89d202dd87"],"83870855d82aba6819217abeff5a40779dbb28b4":["7dd748bb245633a8195281556bb0e68a6ea97d18","0e121d43b5a10f2df530f406f935102656e9c4e8"],"96ab132e6f739772060bedf1719a057e97d5b759":["0e121d43b5a10f2df530f406f935102656e9c4e8"],"c9fb5f46e264daf5ba3860defe623a89d202dd87":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"e5c16d494b4cccbc6f3aa00f05421575bdb11da7":["7dd748bb245633a8195281556bb0e68a6ea97d18"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["7dd748bb245633a8195281556bb0e68a6ea97d18","96ab132e6f739772060bedf1719a057e97d5b759"],"0f4464508ee83288c8c4585b533f9faaa93aa314":["ff3285c7b2387faedef0ffb24db20c4cbbd9fd91"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"ff3285c7b2387faedef0ffb24db20c4cbbd9fd91":["fb17639909a369c1e64866842e5c213440acc17e"],"7dd748bb245633a8195281556bb0e68a6ea97d18":["0f4464508ee83288c8c4585b533f9faaa93aa314"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["96ab132e6f739772060bedf1719a057e97d5b759"]},"commit2Childs":{"fb17639909a369c1e64866842e5c213440acc17e":["ff3285c7b2387faedef0ffb24db20c4cbbd9fd91"],"0e121d43b5a10f2df530f406f935102656e9c4e8":["83870855d82aba6819217abeff5a40779dbb28b4","96ab132e6f739772060bedf1719a057e97d5b759"],"781239fc84d36be12b84e4d3e2618f5f07a182e3":["fb17639909a369c1e64866842e5c213440acc17e"],"83870855d82aba6819217abeff5a40779dbb28b4":[],"96ab132e6f739772060bedf1719a057e97d5b759":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"e5c16d494b4cccbc6f3aa00f05421575bdb11da7":["0e121d43b5a10f2df530f406f935102656e9c4e8"],"c9fb5f46e264daf5ba3860defe623a89d202dd87":["781239fc84d36be12b84e4d3e2618f5f07a182e3"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"0f4464508ee83288c8c4585b533f9faaa93aa314":["7dd748bb245633a8195281556bb0e68a6ea97d18"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c9fb5f46e264daf5ba3860defe623a89d202dd87"],"ff3285c7b2387faedef0ffb24db20c4cbbd9fd91":["0f4464508ee83288c8c4585b533f9faaa93aa314"],"7dd748bb245633a8195281556bb0e68a6ea97d18":["0e121d43b5a10f2df530f406f935102656e9c4e8","83870855d82aba6819217abeff5a40779dbb28b4","e5c16d494b4cccbc6f3aa00f05421575bdb11da7","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["83870855d82aba6819217abeff5a40779dbb28b4","4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}