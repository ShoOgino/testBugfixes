{"path":"src/java/org/apache/lucene/search/BooleanScorer.Collector#collect(int,float).mjava","commits":[{"id":"91109046a59c58ee0ee5d0d2767b08d1f30d6702","date":1000830588,"type":0,"author":"Jason van Zyl","isMerge":false,"pathNew":"src/java/org/apache/lucene/search/BooleanScorer.Collector#collect(int,float).mjava","pathOld":"/dev/null","sourceNew":"    public final void collect(final int doc, final float score) {\n      final BucketTable table = bucketTable;\n      final int i = doc & BucketTable.MASK;\n      Bucket bucket = table.buckets[i];\n      if (bucket == null)\n\ttable.buckets[i] = bucket = new Bucket();\n      \n      if (bucket.doc != doc) {\t\t\t  // invalid bucket\n\tbucket.doc = doc;\t\t\t  // set doc\n\tbucket.score = score;\t\t\t  // initialize score\n\tbucket.bits = mask;\t\t\t  // initialize mask\n\tbucket.coord = 1;\t\t\t  // initialize coord\n\t\n\tbucket.next = table.first;\t\t  // push onto valid list\n\ttable.first = bucket;\n      } else {\t\t\t\t\t  // valid bucket\n\tbucket.score += score;\t\t\t  // increment score\n\tbucket.bits |= mask;\t\t\t  // add bits in mask\n\tbucket.coord++;\t\t\t\t  // increment coord\n      }\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"15c469602973ef1a33c9a07367a380d278ffab20","date":1074206555,"type":3,"author":"Doug Cutting","isMerge":false,"pathNew":"src/java/org/apache/lucene/search/BooleanScorer.Collector#collect(int,float).mjava","pathOld":"src/java/org/apache/lucene/search/BooleanScorer.Collector#collect(int,float).mjava","sourceNew":"    public final void collect(final int doc, final float score) {\n      final BucketTable table = bucketTable;\n      final int i = doc & BucketTable.MASK;\n      Bucket bucket = table.buckets[i];\n      if (bucket == null)\n\ttable.buckets[i] = bucket = new Bucket();\n      \n      if (bucket.doc != doc) {\t\t\t  // invalid bucket\n\tbucket.doc = doc;\t\t\t  // set doc\n\tbucket.score = score;\t\t\t  // initialize score\n\tbucket.bits = mask;\t\t\t  // initialize mask\n\tbucket.coord = 1;\t\t\t  // initialize coord\n\n\tbucket.next = table.first;\t\t  // push onto valid list\n\ttable.first = bucket;\n      } else {\t\t\t\t\t  // valid bucket\n\tbucket.score += score;\t\t\t  // increment score\n\tbucket.bits |= mask;\t\t\t  // add bits in mask\n\tbucket.coord++;\t\t\t\t  // increment coord\n      }\n    }\n\n","sourceOld":"    public final void collect(final int doc, final float score) {\n      final BucketTable table = bucketTable;\n      final int i = doc & BucketTable.MASK;\n      Bucket bucket = table.buckets[i];\n      if (bucket == null)\n\ttable.buckets[i] = bucket = new Bucket();\n      \n      if (bucket.doc != doc) {\t\t\t  // invalid bucket\n\tbucket.doc = doc;\t\t\t  // set doc\n\tbucket.score = score;\t\t\t  // initialize score\n\tbucket.bits = mask;\t\t\t  // initialize mask\n\tbucket.coord = 1;\t\t\t  // initialize coord\n\t\n\tbucket.next = table.first;\t\t  // push onto valid list\n\ttable.first = bucket;\n      } else {\t\t\t\t\t  // valid bucket\n\tbucket.score += score;\t\t\t  // increment score\n\tbucket.bits |= mask;\t\t\t  // add bits in mask\n\tbucket.coord++;\t\t\t\t  // increment coord\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9a53bff5f7abfecc50821f3dfcdca3d4c445cf88","date":1095875760,"type":3,"author":"Doug Cutting","isMerge":false,"pathNew":"src/java/org/apache/lucene/search/BooleanScorer.Collector#collect(int,float).mjava","pathOld":"src/java/org/apache/lucene/search/BooleanScorer.Collector#collect(int,float).mjava","sourceNew":"    public final void collect(final int doc, final float score) {\n      final BucketTable table = bucketTable;\n      final int i = doc & BucketTable.MASK;\n      Bucket bucket = table.buckets[i];\n      if (bucket == null)\n        table.buckets[i] = bucket = new Bucket();\n      \n      if (bucket.doc != doc) {                    // invalid bucket\n        bucket.doc = doc;                         // set doc\n        bucket.score = score;                     // initialize score\n        bucket.bits = mask;                       // initialize mask\n        bucket.coord = 1;                         // initialize coord\n\n        bucket.next = table.first;                // push onto valid list\n        table.first = bucket;\n      } else {                                    // valid bucket\n        bucket.score += score;                    // increment score\n        bucket.bits |= mask;                      // add bits in mask\n        bucket.coord++;                           // increment coord\n      }\n    }\n\n","sourceOld":"    public final void collect(final int doc, final float score) {\n      final BucketTable table = bucketTable;\n      final int i = doc & BucketTable.MASK;\n      Bucket bucket = table.buckets[i];\n      if (bucket == null)\n\ttable.buckets[i] = bucket = new Bucket();\n      \n      if (bucket.doc != doc) {\t\t\t  // invalid bucket\n\tbucket.doc = doc;\t\t\t  // set doc\n\tbucket.score = score;\t\t\t  // initialize score\n\tbucket.bits = mask;\t\t\t  // initialize mask\n\tbucket.coord = 1;\t\t\t  // initialize coord\n\n\tbucket.next = table.first;\t\t  // push onto valid list\n\ttable.first = bucket;\n      } else {\t\t\t\t\t  // valid bucket\n\tbucket.score += score;\t\t\t  // increment score\n\tbucket.bits |= mask;\t\t\t  // add bits in mask\n\tbucket.coord++;\t\t\t\t  // increment coord\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"64714133cf5ec732e3bbceee63351bb9af0117dc","date":1239647636,"type":5,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/search/BooleanScorer.BolleanScorerCollector#collect(int).mjava","pathOld":"src/java/org/apache/lucene/search/BooleanScorer.Collector#collect(int,float).mjava","sourceNew":"    public final void collect(final int doc) throws IOException {\n      final BucketTable table = bucketTable;\n      final int i = doc & BucketTable.MASK;\n      Bucket bucket = table.buckets[i];\n      if (bucket == null)\n        table.buckets[i] = bucket = new Bucket();\n      \n      if (bucket.doc != doc) {                    // invalid bucket\n        bucket.doc = doc;                         // set doc\n        bucket.score = scorer.score();            // initialize score\n        bucket.bits = mask;                       // initialize mask\n        bucket.coord = 1;                         // initialize coord\n\n        bucket.next = table.first;                // push onto valid list\n        table.first = bucket;\n      } else {                                    // valid bucket\n        bucket.score += scorer.score();           // increment score\n        bucket.bits |= mask;                      // add bits in mask\n        bucket.coord++;                           // increment coord\n      }\n    }\n\n","sourceOld":"    public final void collect(final int doc, final float score) {\n      final BucketTable table = bucketTable;\n      final int i = doc & BucketTable.MASK;\n      Bucket bucket = table.buckets[i];\n      if (bucket == null)\n        table.buckets[i] = bucket = new Bucket();\n      \n      if (bucket.doc != doc) {                    // invalid bucket\n        bucket.doc = doc;                         // set doc\n        bucket.score = score;                     // initialize score\n        bucket.bits = mask;                       // initialize mask\n        bucket.coord = 1;                         // initialize coord\n\n        bucket.next = table.first;                // push onto valid list\n        table.first = bucket;\n      } else {                                    // valid bucket\n        bucket.score += score;                    // increment score\n        bucket.bits |= mask;                      // add bits in mask\n        bucket.coord++;                           // increment coord\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"91109046a59c58ee0ee5d0d2767b08d1f30d6702":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"64714133cf5ec732e3bbceee63351bb9af0117dc":["9a53bff5f7abfecc50821f3dfcdca3d4c445cf88"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"9a53bff5f7abfecc50821f3dfcdca3d4c445cf88":["15c469602973ef1a33c9a07367a380d278ffab20"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["64714133cf5ec732e3bbceee63351bb9af0117dc"],"15c469602973ef1a33c9a07367a380d278ffab20":["91109046a59c58ee0ee5d0d2767b08d1f30d6702"]},"commit2Childs":{"91109046a59c58ee0ee5d0d2767b08d1f30d6702":["15c469602973ef1a33c9a07367a380d278ffab20"],"64714133cf5ec732e3bbceee63351bb9af0117dc":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["91109046a59c58ee0ee5d0d2767b08d1f30d6702"],"9a53bff5f7abfecc50821f3dfcdca3d4c445cf88":["64714133cf5ec732e3bbceee63351bb9af0117dc"],"15c469602973ef1a33c9a07367a380d278ffab20":["9a53bff5f7abfecc50821f3dfcdca3d4c445cf88"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}