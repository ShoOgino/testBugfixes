{"path":"lucene/replicator/src/test/org/apache/lucene/replicator/nrt/SimpleReplicaNode#getDirectory(Random,int,Path,boolean).mjava","commits":[{"id":"38cf1409ac117286eb0df7d6ef31d9cfdad8cfec","date":1454767455,"type":1,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/replicator/src/test/org/apache/lucene/replicator/nrt/SimpleReplicaNode#getDirectory(Random,int,Path,boolean).mjava","pathOld":"lucene/replicator/src/test/org/apache/lucene/replicator/nrt/SimpleReplicaNode#getDirectory(Random,int,Path).mjava","sourceNew":"  static Directory getDirectory(Random random, int id, Path path, boolean doCheckIndexOnClose) throws IOException {\n    MockDirectoryWrapper dir = LuceneTestCase.newMockFSDirectory(path);\n    \n    dir.setAssertNoUnrefencedFilesOnClose(true);\n    if (doCheckIndexOnClose) {\n      dir.setCheckIndexOnClose(false);\n    }\n\n    // Corrupt any index files not referenced by current commit point; this is important (increases test evilness) because we may have done\n    // a hard crash of the previous JVM writing to this directory and so MDW's corrupt-unknown-files-on-close never ran:\n    Node.nodeMessage(id, \"top: corrupt unknown files\");\n    dir.corruptUnknownFiles();\n\n    return dir;\n  }\n\n","sourceOld":"  static Directory getDirectory(Random random, int id, Path path) throws IOException {\n    MockDirectoryWrapper dir = LuceneTestCase.newMockFSDirectory(path);\n    \n    dir.setAssertNoUnrefencedFilesOnClose(true);\n    // This is very costly (takes more time to check than it did to index); we do this ourselves in the end instead of each time a replica\n    // is restarted:\n    dir.setCheckIndexOnClose(false);\n\n    // Corrupt any index files not referenced by current commit point; this is important (increases test evilness) because we may have done\n    // a hard crash of the previous JVM writing to this directory and so MDW's corrupt-unknown-files-on-close never ran:\n    Node.nodeMessage(id, \"top: corrupt unknown files\");\n    dir.corruptUnknownFiles();\n\n    return dir;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4a8ec0889b27701f0ad90a25c95b75454e898cf3","date":1454871481,"type":3,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/replicator/src/test/org/apache/lucene/replicator/nrt/SimpleReplicaNode#getDirectory(Random,int,Path,boolean).mjava","pathOld":"lucene/replicator/src/test/org/apache/lucene/replicator/nrt/SimpleReplicaNode#getDirectory(Random,int,Path,boolean).mjava","sourceNew":"  static Directory getDirectory(Random random, int id, Path path, boolean doCheckIndexOnClose) throws IOException {\n    MockDirectoryWrapper dir = LuceneTestCase.newMockFSDirectory(path);\n    \n    dir.setAssertNoUnrefencedFilesOnClose(true);\n    // nocommit\n    //dir.setCheckIndexOnClose(doCheckIndexOnClose);\n    dir.setCheckIndexOnClose(true);\n\n    // Corrupt any index files not referenced by current commit point; this is important (increases test evilness) because we may have done\n    // a hard crash of the previous JVM writing to this directory and so MDW's corrupt-unknown-files-on-close never ran:\n    Node.nodeMessage(id, \"top: corrupt unknown files\");\n    dir.corruptUnknownFiles();\n\n    return dir;\n  }\n\n","sourceOld":"  static Directory getDirectory(Random random, int id, Path path, boolean doCheckIndexOnClose) throws IOException {\n    MockDirectoryWrapper dir = LuceneTestCase.newMockFSDirectory(path);\n    \n    dir.setAssertNoUnrefencedFilesOnClose(true);\n    if (doCheckIndexOnClose) {\n      dir.setCheckIndexOnClose(false);\n    }\n\n    // Corrupt any index files not referenced by current commit point; this is important (increases test evilness) because we may have done\n    // a hard crash of the previous JVM writing to this directory and so MDW's corrupt-unknown-files-on-close never ran:\n    Node.nodeMessage(id, \"top: corrupt unknown files\");\n    dir.corruptUnknownFiles();\n\n    return dir;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b72a3c8c250ce67d9dd59e06316f982cd77bdb3c","date":1454874368,"type":3,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/replicator/src/test/org/apache/lucene/replicator/nrt/SimpleReplicaNode#getDirectory(Random,int,Path,boolean).mjava","pathOld":"lucene/replicator/src/test/org/apache/lucene/replicator/nrt/SimpleReplicaNode#getDirectory(Random,int,Path,boolean).mjava","sourceNew":"  static Directory getDirectory(Random random, int id, Path path, boolean doCheckIndexOnClose) throws IOException {\n    MockDirectoryWrapper dir = LuceneTestCase.newMockFSDirectory(path);\n    \n    dir.setAssertNoUnrefencedFilesOnClose(true);\n    dir.setCheckIndexOnClose(doCheckIndexOnClose);\n\n    // Corrupt any index files not referenced by current commit point; this is important (increases test evilness) because we may have done\n    // a hard crash of the previous JVM writing to this directory and so MDW's corrupt-unknown-files-on-close never ran:\n    Node.nodeMessage(id, \"top: corrupt unknown files\");\n    dir.corruptUnknownFiles();\n\n    return dir;\n  }\n\n","sourceOld":"  static Directory getDirectory(Random random, int id, Path path, boolean doCheckIndexOnClose) throws IOException {\n    MockDirectoryWrapper dir = LuceneTestCase.newMockFSDirectory(path);\n    \n    dir.setAssertNoUnrefencedFilesOnClose(true);\n    // nocommit\n    //dir.setCheckIndexOnClose(doCheckIndexOnClose);\n    dir.setCheckIndexOnClose(true);\n\n    // Corrupt any index files not referenced by current commit point; this is important (increases test evilness) because we may have done\n    // a hard crash of the previous JVM writing to this directory and so MDW's corrupt-unknown-files-on-close never ran:\n    Node.nodeMessage(id, \"top: corrupt unknown files\");\n    dir.corruptUnknownFiles();\n\n    return dir;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2b844e2ae5435a8d4d925003c10027c25e26e02d","date":1455044345,"type":3,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/replicator/src/test/org/apache/lucene/replicator/nrt/SimpleReplicaNode#getDirectory(Random,int,Path,boolean).mjava","pathOld":"lucene/replicator/src/test/org/apache/lucene/replicator/nrt/SimpleReplicaNode#getDirectory(Random,int,Path,boolean).mjava","sourceNew":"  static Directory getDirectory(Random random, int id, Path path, boolean doCheckIndexOnClose) throws IOException {\n    MockDirectoryWrapper dir = LuceneTestCase.newMockFSDirectory(path);\n    \n    dir.setAssertNoUnrefencedFilesOnClose(true);\n    dir.setCheckIndexOnClose(doCheckIndexOnClose);\n\n    // Corrupt any index files not referenced by current commit point; this is important (increases test evilness) because we may have done\n    // a hard crash of the previous JVM writing to this directory and so MDW's corrupt-unknown-files-on-close never ran:\n    Node.nodeMessage(System.out, id, \"top: corrupt unknown files\");\n    dir.corruptUnknownFiles();\n\n    return dir;\n  }\n\n","sourceOld":"  static Directory getDirectory(Random random, int id, Path path, boolean doCheckIndexOnClose) throws IOException {\n    MockDirectoryWrapper dir = LuceneTestCase.newMockFSDirectory(path);\n    \n    dir.setAssertNoUnrefencedFilesOnClose(true);\n    dir.setCheckIndexOnClose(doCheckIndexOnClose);\n\n    // Corrupt any index files not referenced by current commit point; this is important (increases test evilness) because we may have done\n    // a hard crash of the previous JVM writing to this directory and so MDW's corrupt-unknown-files-on-close never ran:\n    Node.nodeMessage(id, \"top: corrupt unknown files\");\n    dir.corruptUnknownFiles();\n\n    return dir;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"68496c2200e559fb7802f7575427b7a482659afb","date":1455207618,"type":0,"author":"Mike McCandless","isMerge":true,"pathNew":"lucene/replicator/src/test/org/apache/lucene/replicator/nrt/SimpleReplicaNode#getDirectory(Random,int,Path,boolean).mjava","pathOld":"/dev/null","sourceNew":"  static Directory getDirectory(Random random, int id, Path path, boolean doCheckIndexOnClose) throws IOException {\n    MockDirectoryWrapper dir = LuceneTestCase.newMockFSDirectory(path);\n    \n    dir.setAssertNoUnrefencedFilesOnClose(true);\n    dir.setCheckIndexOnClose(doCheckIndexOnClose);\n\n    // Corrupt any index files not referenced by current commit point; this is important (increases test evilness) because we may have done\n    // a hard crash of the previous JVM writing to this directory and so MDW's corrupt-unknown-files-on-close never ran:\n    Node.nodeMessage(System.out, id, \"top: corrupt unknown files\");\n    dir.corruptUnknownFiles();\n\n    return dir;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"4a8ec0889b27701f0ad90a25c95b75454e898cf3":["38cf1409ac117286eb0df7d6ef31d9cfdad8cfec"],"2b844e2ae5435a8d4d925003c10027c25e26e02d":["b72a3c8c250ce67d9dd59e06316f982cd77bdb3c"],"b72a3c8c250ce67d9dd59e06316f982cd77bdb3c":["4a8ec0889b27701f0ad90a25c95b75454e898cf3"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"68496c2200e559fb7802f7575427b7a482659afb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","2b844e2ae5435a8d4d925003c10027c25e26e02d"],"38cf1409ac117286eb0df7d6ef31d9cfdad8cfec":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["68496c2200e559fb7802f7575427b7a482659afb"]},"commit2Childs":{"4a8ec0889b27701f0ad90a25c95b75454e898cf3":["b72a3c8c250ce67d9dd59e06316f982cd77bdb3c"],"2b844e2ae5435a8d4d925003c10027c25e26e02d":["68496c2200e559fb7802f7575427b7a482659afb"],"b72a3c8c250ce67d9dd59e06316f982cd77bdb3c":["2b844e2ae5435a8d4d925003c10027c25e26e02d"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["68496c2200e559fb7802f7575427b7a482659afb","38cf1409ac117286eb0df7d6ef31d9cfdad8cfec"],"68496c2200e559fb7802f7575427b7a482659afb":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"38cf1409ac117286eb0df7d6ef31d9cfdad8cfec":["4a8ec0889b27701f0ad90a25c95b75454e898cf3"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}