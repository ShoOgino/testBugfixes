{"path":"src/java/org/apache/solr/search/function/QueryDocValues[QueryValueSource]#floatVal(int).mjava","commits":[{"id":"4aa57ace203f336e00a38867cb7e815ca4e1572e","date":1190088278,"type":0,"author":"Yonik Seeley","isMerge":false,"pathNew":"src/java/org/apache/solr/search/function/QueryDocValues[QueryValueSource]#floatVal(int).mjava","pathOld":"/dev/null","sourceNew":"  public float floatVal(int doc) {\n    try {\n      if (doc < lastDocRequested) {\n        // out-of-order access.... reset scorer.\n        scorer = weight.scorer(reader);\n        boolean more = scorer.next();\n        if (more) {\n          scorerDoc = scorer.doc();\n        } else {\n          // pretend we skipped to the end\n          scorerDoc = Integer.MAX_VALUE;\n        }\n      }\n      lastDocRequested = doc;\n\n      if (scorerDoc < doc) {\n        boolean more = scorer.skipTo(doc);\n        if (more) {\n          scorerDoc = scorer.doc();\n        } else {\n          // pretend we skipped to the end\n          scorerDoc = Integer.MAX_VALUE;\n        }\n      }\n\n      if (scorerDoc > doc) {\n        // query doesn't match this document... either because we hit the\n        // end (Integer.MAX_VALUE), or because the next doc is after this doc.\n        return defVal;\n      }\n\n      // a match!\n      return scorer.score();\n    } catch (IOException e) {\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, \"caught exception in QueryDocVals(\"+q+\") doc=\"+doc, e);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"19a6a2b00bd8d0dbd9684de00bb3018e4664a1e5","date":1247703137,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"src/java/org/apache/solr/search/function/QueryDocValues[QueryValueSource]#floatVal(int).mjava","pathOld":"src/java/org/apache/solr/search/function/QueryDocValues[QueryValueSource]#floatVal(int).mjava","sourceNew":"  public float floatVal(int doc) {\n    try {\n      if (doc < lastDocRequested) {\n        // out-of-order access.... reset scorer.\n        scorer = weight.scorer(reader);\n        scorerDoc = scorer.nextDoc();\n      }\n      lastDocRequested = doc;\n\n      if (scorerDoc < doc) {\n        scorerDoc = scorer.nextDoc();\n      }\n\n      if (scorerDoc > doc) {\n        // query doesn't match this document... either because we hit the\n        // end, or because the next doc is after this doc.\n        return defVal;\n      }\n\n      // a match!\n      return scorer.score();\n    } catch (IOException e) {\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, \"caught exception in QueryDocVals(\"+q+\") doc=\"+doc, e);\n    }\n  }  \n\n","sourceOld":"  public float floatVal(int doc) {\n    try {\n      if (doc < lastDocRequested) {\n        // out-of-order access.... reset scorer.\n        scorer = weight.scorer(reader);\n        boolean more = scorer.next();\n        if (more) {\n          scorerDoc = scorer.doc();\n        } else {\n          // pretend we skipped to the end\n          scorerDoc = Integer.MAX_VALUE;\n        }\n      }\n      lastDocRequested = doc;\n\n      if (scorerDoc < doc) {\n        boolean more = scorer.skipTo(doc);\n        if (more) {\n          scorerDoc = scorer.doc();\n        } else {\n          // pretend we skipped to the end\n          scorerDoc = Integer.MAX_VALUE;\n        }\n      }\n\n      if (scorerDoc > doc) {\n        // query doesn't match this document... either because we hit the\n        // end (Integer.MAX_VALUE), or because the next doc is after this doc.\n        return defVal;\n      }\n\n      // a match!\n      return scorer.score();\n    } catch (IOException e) {\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, \"caught exception in QueryDocVals(\"+q+\") doc=\"+doc, e);\n    }\n  }\n\n","bugFix":null,"bugIntro":["5eeff6b8391d7b5e70e37193643d76c05a3abf75"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"070092fd2d6ccc4eada741b38c12ee648917dd2b","date":1250433910,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"src/java/org/apache/solr/search/function/QueryDocValues[QueryValueSource]#floatVal(int).mjava","pathOld":"src/java/org/apache/solr/search/function/QueryDocValues[QueryValueSource]#floatVal(int).mjava","sourceNew":"  public float floatVal(int doc) {\n    try {\n      if (doc < lastDocRequested) {\n        // out-of-order access.... reset scorer.\n        scorer = weight.scorer(reader, true, false);\n        scorerDoc = scorer.nextDoc();\n      }\n      lastDocRequested = doc;\n\n      if (scorerDoc < doc) {\n        scorerDoc = scorer.nextDoc();\n      }\n\n      if (scorerDoc > doc) {\n        // query doesn't match this document... either because we hit the\n        // end, or because the next doc is after this doc.\n        return defVal;\n      }\n\n      // a match!\n      return scorer.score();\n    } catch (IOException e) {\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, \"caught exception in QueryDocVals(\"+q+\") doc=\"+doc, e);\n    }\n  }  \n\n","sourceOld":"  public float floatVal(int doc) {\n    try {\n      if (doc < lastDocRequested) {\n        // out-of-order access.... reset scorer.\n        scorer = weight.scorer(reader);\n        scorerDoc = scorer.nextDoc();\n      }\n      lastDocRequested = doc;\n\n      if (scorerDoc < doc) {\n        scorerDoc = scorer.nextDoc();\n      }\n\n      if (scorerDoc > doc) {\n        // query doesn't match this document... either because we hit the\n        // end, or because the next doc is after this doc.\n        return defVal;\n      }\n\n      // a match!\n      return scorer.score();\n    } catch (IOException e) {\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, \"caught exception in QueryDocVals(\"+q+\") doc=\"+doc, e);\n    }\n  }  \n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"7e00023dc6828d09dbfb05d4dfa4d488cc81ee42","date":1253196493,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"src/java/org/apache/solr/search/function/QueryDocValues[QueryValueSource]#floatVal(int).mjava","pathOld":"src/java/org/apache/solr/search/function/QueryDocValues[QueryValueSource]#floatVal(int).mjava","sourceNew":"  public float floatVal(int doc) {\n    try {\n      if (doc < lastDocRequested) {\n        // out-of-order access.... reset scorer.\n        scorer = weight.scorer(reader, true, false);\n        scorerDoc = -1;\n      }\n      lastDocRequested = doc;\n\n      if (scorerDoc < doc) {\n        scorerDoc = scorer.advance(doc);\n      }\n\n      if (scorerDoc > doc) {\n        // query doesn't match this document... either because we hit the\n        // end, or because the next doc is after this doc.\n        return defVal;\n      }\n\n      // a match!\n      return scorer.score();\n    } catch (IOException e) {\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, \"caught exception in QueryDocVals(\"+q+\") doc=\"+doc, e);\n    }\n  }  \n\n","sourceOld":"  public float floatVal(int doc) {\n    try {\n      if (doc < lastDocRequested) {\n        // out-of-order access.... reset scorer.\n        scorer = weight.scorer(reader, true, false);\n        scorerDoc = scorer.nextDoc();\n      }\n      lastDocRequested = doc;\n\n      if (scorerDoc < doc) {\n        scorerDoc = scorer.nextDoc();\n      }\n\n      if (scorerDoc > doc) {\n        // query doesn't match this document... either because we hit the\n        // end, or because the next doc is after this doc.\n        return defVal;\n      }\n\n      // a match!\n      return scorer.score();\n    } catch (IOException e) {\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, \"caught exception in QueryDocVals(\"+q+\") doc=\"+doc, e);\n    }\n  }  \n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"b34246bd2642664e4365407342455859b15b5205","date":1253804555,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"src/java/org/apache/solr/search/function/QueryDocValues[QueryValueSource]#floatVal(int).mjava","pathOld":"src/java/org/apache/solr/search/function/QueryDocValues[QueryValueSource]#floatVal(int).mjava","sourceNew":"  public float floatVal(int doc) {\n    try {\n      if (doc < lastDocRequested) {\n        // out-of-order access.... reset scorer.\n        scorer = weight.scorer(reader, true, false);\n        if (scorer==null) return defVal;\n        scorerDoc = -1;\n      }\n      lastDocRequested = doc;\n\n      if (scorerDoc < doc) {\n        scorerDoc = scorer.advance(doc);\n      }\n\n      if (scorerDoc > doc) {\n        // query doesn't match this document... either because we hit the\n        // end, or because the next doc is after this doc.\n        return defVal;\n      }\n\n      // a match!\n      return scorer.score();\n    } catch (IOException e) {\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, \"caught exception in QueryDocVals(\"+q+\") doc=\"+doc, e);\n    }\n  }  \n\n","sourceOld":"  public float floatVal(int doc) {\n    try {\n      if (doc < lastDocRequested) {\n        // out-of-order access.... reset scorer.\n        scorer = weight.scorer(reader, true, false);\n        scorerDoc = -1;\n      }\n      lastDocRequested = doc;\n\n      if (scorerDoc < doc) {\n        scorerDoc = scorer.advance(doc);\n      }\n\n      if (scorerDoc > doc) {\n        // query doesn't match this document... either because we hit the\n        // end, or because the next doc is after this doc.\n        return defVal;\n      }\n\n      // a match!\n      return scorer.score();\n    } catch (IOException e) {\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, \"caught exception in QueryDocVals(\"+q+\") doc=\"+doc, e);\n    }\n  }  \n\n","bugFix":null,"bugIntro":["5eeff6b8391d7b5e70e37193643d76c05a3abf75"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"ad94625fb8d088209f46650c8097196fec67f00c","date":1453508319,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/src/java/org/apache/solr/search/function/QueryDocValues[QueryValueSource]#floatVal(int).mjava","pathOld":"src/java/org/apache/solr/search/function/QueryDocValues[QueryValueSource]#floatVal(int).mjava","sourceNew":"  public float floatVal(int doc) {\n    try {\n      if (doc < lastDocRequested) {\n        // out-of-order access.... reset scorer.\n        scorer = weight.scorer(reader, true, false);\n        if (scorer==null) return defVal;\n        scorerDoc = -1;\n      }\n      lastDocRequested = doc;\n\n      if (scorerDoc < doc) {\n        scorerDoc = scorer.advance(doc);\n      }\n\n      if (scorerDoc > doc) {\n        // query doesn't match this document... either because we hit the\n        // end, or because the next doc is after this doc.\n        return defVal;\n      }\n\n      // a match!\n      return scorer.score();\n    } catch (IOException e) {\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, \"caught exception in QueryDocVals(\"+q+\") doc=\"+doc, e);\n    }\n  }  \n\n","sourceOld":"  public float floatVal(int doc) {\n    try {\n      if (doc < lastDocRequested) {\n        // out-of-order access.... reset scorer.\n        scorer = weight.scorer(reader, true, false);\n        if (scorer==null) return defVal;\n        scorerDoc = -1;\n      }\n      lastDocRequested = doc;\n\n      if (scorerDoc < doc) {\n        scorerDoc = scorer.advance(doc);\n      }\n\n      if (scorerDoc > doc) {\n        // query doesn't match this document... either because we hit the\n        // end, or because the next doc is after this doc.\n        return defVal;\n      }\n\n      // a match!\n      return scorer.score();\n    } catch (IOException e) {\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, \"caught exception in QueryDocVals(\"+q+\") doc=\"+doc, e);\n    }\n  }  \n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"7e00023dc6828d09dbfb05d4dfa4d488cc81ee42":["070092fd2d6ccc4eada741b38c12ee648917dd2b"],"070092fd2d6ccc4eada741b38c12ee648917dd2b":["19a6a2b00bd8d0dbd9684de00bb3018e4664a1e5"],"4aa57ace203f336e00a38867cb7e815ca4e1572e":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"ad94625fb8d088209f46650c8097196fec67f00c":["b34246bd2642664e4365407342455859b15b5205"],"b34246bd2642664e4365407342455859b15b5205":["7e00023dc6828d09dbfb05d4dfa4d488cc81ee42"],"19a6a2b00bd8d0dbd9684de00bb3018e4664a1e5":["4aa57ace203f336e00a38867cb7e815ca4e1572e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"7e00023dc6828d09dbfb05d4dfa4d488cc81ee42":["b34246bd2642664e4365407342455859b15b5205"],"070092fd2d6ccc4eada741b38c12ee648917dd2b":["7e00023dc6828d09dbfb05d4dfa4d488cc81ee42"],"4aa57ace203f336e00a38867cb7e815ca4e1572e":["19a6a2b00bd8d0dbd9684de00bb3018e4664a1e5"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["4aa57ace203f336e00a38867cb7e815ca4e1572e"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"ad94625fb8d088209f46650c8097196fec67f00c":[],"b34246bd2642664e4365407342455859b15b5205":["ad94625fb8d088209f46650c8097196fec67f00c"],"19a6a2b00bd8d0dbd9684de00bb3018e4664a1e5":["070092fd2d6ccc4eada741b38c12ee648917dd2b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["ad94625fb8d088209f46650c8097196fec67f00c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b","a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}