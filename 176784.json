{"path":"contrib/analyzers/common/src/java/org/apache/lucene/analysis/reverse/ReverseStringFilter#reverseUnicode3(char[],int,int).mjava","commits":[{"id":"58d9574cef968871d3be931d4850a274eda83049","date":1258924182,"type":0,"author":"Simon Willnauer","isMerge":false,"pathNew":"contrib/analyzers/common/src/java/org/apache/lucene/analysis/reverse/ReverseStringFilter#reverseUnicode3(char[],int,int).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * @deprecated Remove this when support for 3.0 indexes is no longer needed.\n   */\n  private static void reverseUnicode3( char[] buffer, int start, int len ){\n    if( len <= 1 ) return;\n    int num = len>>1;\n    for( int i = start; i < ( start + num ); i++ ){\n      char c = buffer[i];\n      buffer[i] = buffer[start * 2 + len - i - 1];\n      buffer[start * 2 + len - i - 1] = c;\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5384d626ad24f6a1d56141ba6b0b144d1b2eafc5","date":1262514702,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"contrib/analyzers/common/src/java/org/apache/lucene/analysis/reverse/ReverseStringFilter#reverseUnicode3(char[],int,int).mjava","pathOld":"contrib/analyzers/common/src/java/org/apache/lucene/analysis/reverse/ReverseStringFilter#reverseUnicode3(char[],int,int).mjava","sourceNew":"  /**\n   * @deprecated Remove this when support for 3.0 indexes is no longer needed.\n   */\n  @Deprecated\n  private static void reverseUnicode3( char[] buffer, int start, int len ){\n    if( len <= 1 ) return;\n    int num = len>>1;\n    for( int i = start; i < ( start + num ); i++ ){\n      char c = buffer[i];\n      buffer[i] = buffer[start * 2 + len - i - 1];\n      buffer[start * 2 + len - i - 1] = c;\n    }\n  }\n\n","sourceOld":"  /**\n   * @deprecated Remove this when support for 3.0 indexes is no longer needed.\n   */\n  private static void reverseUnicode3( char[] buffer, int start, int len ){\n    if( len <= 1 ) return;\n    int num = len>>1;\n    for( int i = start; i < ( start + num ); i++ ){\n      char c = buffer[i];\n      buffer[i] = buffer[start * 2 + len - i - 1];\n      buffer[start * 2 + len - i - 1] = c;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/contrib/analyzers/common/src/java/org/apache/lucene/analysis/reverse/ReverseStringFilter#reverseUnicode3(char[],int,int).mjava","pathOld":"contrib/analyzers/common/src/java/org/apache/lucene/analysis/reverse/ReverseStringFilter#reverseUnicode3(char[],int,int).mjava","sourceNew":"  /**\n   * @deprecated Remove this when support for 3.0 indexes is no longer needed.\n   */\n  @Deprecated\n  private static void reverseUnicode3( char[] buffer, int start, int len ){\n    if( len <= 1 ) return;\n    int num = len>>1;\n    for( int i = start; i < ( start + num ); i++ ){\n      char c = buffer[i];\n      buffer[i] = buffer[start * 2 + len - i - 1];\n      buffer[start * 2 + len - i - 1] = c;\n    }\n  }\n\n","sourceOld":"  /**\n   * @deprecated Remove this when support for 3.0 indexes is no longer needed.\n   */\n  @Deprecated\n  private static void reverseUnicode3( char[] buffer, int start, int len ){\n    if( len <= 1 ) return;\n    int num = len>>1;\n    for( int i = start; i < ( start + num ); i++ ){\n      char c = buffer[i];\n      buffer[i] = buffer[start * 2 + len - i - 1];\n      buffer[start * 2 + len - i - 1] = c;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"5384d626ad24f6a1d56141ba6b0b144d1b2eafc5":["58d9574cef968871d3be931d4850a274eda83049"],"58d9574cef968871d3be931d4850a274eda83049":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["5384d626ad24f6a1d56141ba6b0b144d1b2eafc5"]},"commit2Childs":{"5384d626ad24f6a1d56141ba6b0b144d1b2eafc5":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"58d9574cef968871d3be931d4850a274eda83049":["5384d626ad24f6a1d56141ba6b0b144d1b2eafc5"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["58d9574cef968871d3be931d4850a274eda83049"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}