{"path":"lucene/spatial-extras/src/java/org/apache/lucene/spatial/composite/IntersectsRPTVerifyQuery#equals(Object).mjava","commits":[{"id":"112d77ac8d3e10a362516ad834c9a11d35c94234","date":1456784319,"type":1,"author":"nknize","isMerge":false,"pathNew":"lucene/spatial-extras/src/java/org/apache/lucene/spatial/composite/IntersectsRPTVerifyQuery#equals(Object).mjava","pathOld":"lucene/spatial/src/java/org/apache/lucene/spatial/composite/IntersectsRPTVerifyQuery#equals(Object).mjava","sourceNew":"  @Override\n  public boolean equals(Object o) {\n    if (this == o) return true;\n    if (!super.equals(o)) return false;\n\n    IntersectsRPTVerifyQuery that = (IntersectsRPTVerifyQuery) o;\n\n    if (!intersectsDiffQuery.equals(that.intersectsDiffQuery)) return false;\n    return predicateValueSource.equals(that.predicateValueSource);\n\n  }\n\n","sourceOld":"  @Override\n  public boolean equals(Object o) {\n    if (this == o) return true;\n    if (!super.equals(o)) return false;\n\n    IntersectsRPTVerifyQuery that = (IntersectsRPTVerifyQuery) o;\n\n    if (!intersectsDiffQuery.equals(that.intersectsDiffQuery)) return false;\n    return predicateValueSource.equals(that.predicateValueSource);\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"af2638813028b254a88b418ebeafb541afb49653","date":1456804822,"type":1,"author":"Noble Paul","isMerge":true,"pathNew":"lucene/spatial-extras/src/java/org/apache/lucene/spatial/composite/IntersectsRPTVerifyQuery#equals(Object).mjava","pathOld":"lucene/spatial/src/java/org/apache/lucene/spatial/composite/IntersectsRPTVerifyQuery#equals(Object).mjava","sourceNew":"  @Override\n  public boolean equals(Object o) {\n    if (this == o) return true;\n    if (!super.equals(o)) return false;\n\n    IntersectsRPTVerifyQuery that = (IntersectsRPTVerifyQuery) o;\n\n    if (!intersectsDiffQuery.equals(that.intersectsDiffQuery)) return false;\n    return predicateValueSource.equals(that.predicateValueSource);\n\n  }\n\n","sourceOld":"  @Override\n  public boolean equals(Object o) {\n    if (this == o) return true;\n    if (!super.equals(o)) return false;\n\n    IntersectsRPTVerifyQuery that = (IntersectsRPTVerifyQuery) o;\n\n    if (!intersectsDiffQuery.equals(that.intersectsDiffQuery)) return false;\n    return predicateValueSource.equals(that.predicateValueSource);\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0e7bc21595222ae4f75509300fbb7726691f387f","date":1464078795,"type":3,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/spatial-extras/src/java/org/apache/lucene/spatial/composite/IntersectsRPTVerifyQuery#equals(Object).mjava","pathOld":"lucene/spatial-extras/src/java/org/apache/lucene/spatial/composite/IntersectsRPTVerifyQuery#equals(Object).mjava","sourceNew":"  @Override\n  public boolean equals(Object other) {\n    return sameClassAs(other) &&\n           equalsTo(getClass().cast(other));\n  }\n\n","sourceOld":"  @Override\n  public boolean equals(Object o) {\n    if (this == o) return true;\n    if (!super.equals(o)) return false;\n\n    IntersectsRPTVerifyQuery that = (IntersectsRPTVerifyQuery) o;\n\n    if (!intersectsDiffQuery.equals(that.intersectsDiffQuery)) return false;\n    return predicateValueSource.equals(that.predicateValueSource);\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"lucene/spatial-extras/src/java/org/apache/lucene/spatial/composite/IntersectsRPTVerifyQuery#equals(Object).mjava","pathOld":"lucene/spatial-extras/src/java/org/apache/lucene/spatial/composite/IntersectsRPTVerifyQuery#equals(Object).mjava","sourceNew":"  @Override\n  public boolean equals(Object other) {\n    return sameClassAs(other) &&\n           equalsTo(getClass().cast(other));\n  }\n\n","sourceOld":"  @Override\n  public boolean equals(Object o) {\n    if (this == o) return true;\n    if (!super.equals(o)) return false;\n\n    IntersectsRPTVerifyQuery that = (IntersectsRPTVerifyQuery) o;\n\n    if (!intersectsDiffQuery.equals(that.intersectsDiffQuery)) return false;\n    return predicateValueSource.equals(that.predicateValueSource);\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"af2638813028b254a88b418ebeafb541afb49653":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","112d77ac8d3e10a362516ad834c9a11d35c94234"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"0e7bc21595222ae4f75509300fbb7726691f387f":["af2638813028b254a88b418ebeafb541afb49653"],"112d77ac8d3e10a362516ad834c9a11d35c94234":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["af2638813028b254a88b418ebeafb541afb49653","0e7bc21595222ae4f75509300fbb7726691f387f"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["0e7bc21595222ae4f75509300fbb7726691f387f"]},"commit2Childs":{"af2638813028b254a88b418ebeafb541afb49653":["0e7bc21595222ae4f75509300fbb7726691f387f","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["af2638813028b254a88b418ebeafb541afb49653","112d77ac8d3e10a362516ad834c9a11d35c94234"],"112d77ac8d3e10a362516ad834c9a11d35c94234":["af2638813028b254a88b418ebeafb541afb49653"],"0e7bc21595222ae4f75509300fbb7726691f387f":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}