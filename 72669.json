{"path":"solr/core/src/test/org/apache/solr/search/TestRankQueryPlugin.TestCollector#topDocs().mjava","commits":[{"id":"6c70567cc1ae757045c80cb458b0b2a2ffcf0141","date":1400098332,"type":0,"author":"Joel Bernstein","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/search/TestRankQueryPlugin.TestCollector#topDocs().mjava","pathOld":"/dev/null","sourceNew":"    public TopDocs topDocs() {\n      Collections.sort(list, new Comparator() {\n        public int compare(Object o1, Object o2) {\n          ScoreDoc s1 = (ScoreDoc) o1;\n          ScoreDoc s2 = (ScoreDoc) o2;\n          if (s1.score == s2.score) {\n            return 0;\n          } else if (s1.score < s2.score) {\n            return 1;\n          } else {\n            return -1;\n          }\n        }\n      });\n      ScoreDoc[] scoreDocs = list.toArray(new ScoreDoc[list.size()]);\n      return new TopDocs(list.size(), scoreDocs, 0.0f);\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ccc69a67d5c846a04c7f71e28cb1914e3af895f3","date":1400252660,"type":0,"author":"Robert Muir","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/search/TestRankQueryPlugin.TestCollector#topDocs().mjava","pathOld":"/dev/null","sourceNew":"    public TopDocs topDocs() {\n      Collections.sort(list, new Comparator() {\n        public int compare(Object o1, Object o2) {\n          ScoreDoc s1 = (ScoreDoc) o1;\n          ScoreDoc s2 = (ScoreDoc) o2;\n          if (s1.score == s2.score) {\n            return 0;\n          } else if (s1.score < s2.score) {\n            return 1;\n          } else {\n            return -1;\n          }\n        }\n      });\n      ScoreDoc[] scoreDocs = list.toArray(new ScoreDoc[list.size()]);\n      return new TopDocs(list.size(), scoreDocs, 0.0f);\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"81fff83bdb893c1471efd78f6a9a3ce4f98120b9","date":1531895937,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/search/TestRankQueryPlugin.TestCollector#topDocs().mjava","pathOld":"solr/core/src/test/org/apache/solr/search/TestRankQueryPlugin.TestCollector#topDocs().mjava","sourceNew":"    public TopDocs topDocs() {\n      Collections.sort(list, new Comparator() {\n        public int compare(Object o1, Object o2) {\n          ScoreDoc s1 = (ScoreDoc) o1;\n          ScoreDoc s2 = (ScoreDoc) o2;\n          if (s1.score == s2.score) {\n            return 0;\n          } else if (s1.score < s2.score) {\n            return 1;\n          } else {\n            return -1;\n          }\n        }\n      });\n      ScoreDoc[] scoreDocs = list.toArray(new ScoreDoc[list.size()]);\n      return new TopDocs(list.size(), scoreDocs);\n    }\n\n","sourceOld":"    public TopDocs topDocs() {\n      Collections.sort(list, new Comparator() {\n        public int compare(Object o1, Object o2) {\n          ScoreDoc s1 = (ScoreDoc) o1;\n          ScoreDoc s2 = (ScoreDoc) o2;\n          if (s1.score == s2.score) {\n            return 0;\n          } else if (s1.score < s2.score) {\n            return 1;\n          } else {\n            return -1;\n          }\n        }\n      });\n      ScoreDoc[] scoreDocs = list.toArray(new ScoreDoc[list.size()]);\n      return new TopDocs(list.size(), scoreDocs, 0.0f);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","date":1531905561,"type":3,"author":"Alessandro Benedetti","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/search/TestRankQueryPlugin.TestCollector#topDocs().mjava","pathOld":"solr/core/src/test/org/apache/solr/search/TestRankQueryPlugin.TestCollector#topDocs().mjava","sourceNew":"    public TopDocs topDocs() {\n      Collections.sort(list, new Comparator() {\n        public int compare(Object o1, Object o2) {\n          ScoreDoc s1 = (ScoreDoc) o1;\n          ScoreDoc s2 = (ScoreDoc) o2;\n          if (s1.score == s2.score) {\n            return 0;\n          } else if (s1.score < s2.score) {\n            return 1;\n          } else {\n            return -1;\n          }\n        }\n      });\n      ScoreDoc[] scoreDocs = list.toArray(new ScoreDoc[list.size()]);\n      return new TopDocs(list.size(), scoreDocs);\n    }\n\n","sourceOld":"    public TopDocs topDocs() {\n      Collections.sort(list, new Comparator() {\n        public int compare(Object o1, Object o2) {\n          ScoreDoc s1 = (ScoreDoc) o1;\n          ScoreDoc s2 = (ScoreDoc) o2;\n          if (s1.score == s2.score) {\n            return 0;\n          } else if (s1.score < s2.score) {\n            return 1;\n          } else {\n            return -1;\n          }\n        }\n      });\n      ScoreDoc[] scoreDocs = list.toArray(new ScoreDoc[list.size()]);\n      return new TopDocs(list.size(), scoreDocs, 0.0f);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"83788ad129a5154d5c6562c4e8ce3db48793aada","date":1532961485,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/search/TestRankQueryPlugin.TestCollector#topDocs().mjava","pathOld":"solr/core/src/test/org/apache/solr/search/TestRankQueryPlugin.TestCollector#topDocs().mjava","sourceNew":"    public TopDocs topDocs() {\n      Collections.sort(list, new Comparator() {\n        public int compare(Object o1, Object o2) {\n          ScoreDoc s1 = (ScoreDoc) o1;\n          ScoreDoc s2 = (ScoreDoc) o2;\n          if (s1.score == s2.score) {\n            return 0;\n          } else if (s1.score < s2.score) {\n            return 1;\n          } else {\n            return -1;\n          }\n        }\n      });\n      ScoreDoc[] scoreDocs = list.toArray(new ScoreDoc[list.size()]);\n      return new TopDocs(new TotalHits(list.size(), TotalHits.Relation.EQUAL_TO), scoreDocs);\n    }\n\n","sourceOld":"    public TopDocs topDocs() {\n      Collections.sort(list, new Comparator() {\n        public int compare(Object o1, Object o2) {\n          ScoreDoc s1 = (ScoreDoc) o1;\n          ScoreDoc s2 = (ScoreDoc) o2;\n          if (s1.score == s2.score) {\n            return 0;\n          } else if (s1.score < s2.score) {\n            return 1;\n          } else {\n            return -1;\n          }\n        }\n      });\n      ScoreDoc[] scoreDocs = list.toArray(new ScoreDoc[list.size()]);\n      return new TopDocs(list.size(), scoreDocs);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bd81b9f1e22432a668756e938bfb0835c1abb11b","date":1546254331,"type":5,"author":"Christine Poerschke","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/search/RankQueryTestPlugin.TestCollector#topDocs().mjava","pathOld":"solr/core/src/test/org/apache/solr/search/TestRankQueryPlugin.TestCollector#topDocs().mjava","sourceNew":"    public TopDocs topDocs() {\n      Collections.sort(list, new Comparator() {\n        public int compare(Object o1, Object o2) {\n          ScoreDoc s1 = (ScoreDoc) o1;\n          ScoreDoc s2 = (ScoreDoc) o2;\n          if (s1.score == s2.score) {\n            return 0;\n          } else if (s1.score < s2.score) {\n            return 1;\n          } else {\n            return -1;\n          }\n        }\n      });\n      ScoreDoc[] scoreDocs = list.toArray(new ScoreDoc[list.size()]);\n      return new TopDocs(new TotalHits(list.size(), TotalHits.Relation.EQUAL_TO), scoreDocs);\n    }\n\n","sourceOld":"    public TopDocs topDocs() {\n      Collections.sort(list, new Comparator() {\n        public int compare(Object o1, Object o2) {\n          ScoreDoc s1 = (ScoreDoc) o1;\n          ScoreDoc s2 = (ScoreDoc) o2;\n          if (s1.score == s2.score) {\n            return 0;\n          } else if (s1.score < s2.score) {\n            return 1;\n          } else {\n            return -1;\n          }\n        }\n      });\n      ScoreDoc[] scoreDocs = list.toArray(new ScoreDoc[list.size()]);\n      return new TopDocs(new TotalHits(list.size(), TotalHits.Relation.EQUAL_TO), scoreDocs);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"bd81b9f1e22432a668756e938bfb0835c1abb11b":["83788ad129a5154d5c6562c4e8ce3db48793aada"],"0efc9f2cae117418f13ba9035f5e1d516ea7a2b5":["6c70567cc1ae757045c80cb458b0b2a2ffcf0141","81fff83bdb893c1471efd78f6a9a3ce4f98120b9"],"6c70567cc1ae757045c80cb458b0b2a2ffcf0141":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"83788ad129a5154d5c6562c4e8ce3db48793aada":["81fff83bdb893c1471efd78f6a9a3ce4f98120b9"],"81fff83bdb893c1471efd78f6a9a3ce4f98120b9":["6c70567cc1ae757045c80cb458b0b2a2ffcf0141"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["bd81b9f1e22432a668756e938bfb0835c1abb11b"],"ccc69a67d5c846a04c7f71e28cb1914e3af895f3":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","6c70567cc1ae757045c80cb458b0b2a2ffcf0141"]},"commit2Childs":{"bd81b9f1e22432a668756e938bfb0835c1abb11b":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"0efc9f2cae117418f13ba9035f5e1d516ea7a2b5":[],"6c70567cc1ae757045c80cb458b0b2a2ffcf0141":["0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","81fff83bdb893c1471efd78f6a9a3ce4f98120b9","ccc69a67d5c846a04c7f71e28cb1914e3af895f3"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["6c70567cc1ae757045c80cb458b0b2a2ffcf0141","ccc69a67d5c846a04c7f71e28cb1914e3af895f3"],"83788ad129a5154d5c6562c4e8ce3db48793aada":["bd81b9f1e22432a668756e938bfb0835c1abb11b"],"81fff83bdb893c1471efd78f6a9a3ce4f98120b9":["0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","83788ad129a5154d5c6562c4e8ce3db48793aada"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"ccc69a67d5c846a04c7f71e28cb1914e3af895f3":[]},"heads":["0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","cd5edd1f2b162a5cfa08efd17851a07373a96817","ccc69a67d5c846a04c7f71e28cb1914e3af895f3"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}