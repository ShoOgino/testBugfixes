{"path":"lucene/facet/src/java/org/apache/lucene/facet/TaxonomyFacetCounts#getSpecificValue(String,String...).mjava","commits":[{"id":"21d36d0db865f7b84026b447bec653469a6e66df","date":1385495602,"type":1,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/TaxonomyFacetCounts#getSpecificValue(String,String...).mjava","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/simple/TaxonomyFacetCounts#getSpecificValue(String,String...).mjava","sourceNew":"  /** Return the count for a specific path.  Returns -1 if\n   *  this path doesn't exist, else the count. */\n  @Override\n  public Number getSpecificValue(String dim, String... path) throws IOException {\n    verifyDim(dim);\n    int ord = taxoReader.getOrdinal(FacetLabel.create(dim, path));\n    if (ord < 0) {\n      return -1;\n    }\n    return counts[ord];\n  }\n\n","sourceOld":"  /** Return the count for a specific path.  Returns -1 if\n   *  this path doesn't exist, else the count. */\n  @Override\n  public Number getSpecificValue(String dim, String... path) throws IOException {\n    verifyDim(dim);\n    int ord = taxoReader.getOrdinal(FacetLabel.create(dim, path));\n    if (ord < 0) {\n      return -1;\n    }\n    return counts[ord];\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b6e499df4729e7162d5b39a70b0142e3186a029f","date":1385554050,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/TaxonomyFacetCounts#getSpecificValue(String,String...).mjava","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/TaxonomyFacetCounts#getSpecificValue(String,String...).mjava","sourceNew":"  @Override\n  public Number getSpecificValue(String dim, String... path) throws IOException {\n    verifyDim(dim);\n    int ord = taxoReader.getOrdinal(FacetLabel.create(dim, path));\n    if (ord < 0) {\n      return -1;\n    }\n    return counts[ord];\n  }\n\n","sourceOld":"  /** Return the count for a specific path.  Returns -1 if\n   *  this path doesn't exist, else the count. */\n  @Override\n  public Number getSpecificValue(String dim, String... path) throws IOException {\n    verifyDim(dim);\n    int ord = taxoReader.getOrdinal(FacetLabel.create(dim, path));\n    if (ord < 0) {\n      return -1;\n    }\n    return counts[ord];\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1536855b62f453c22bb60258029b3b2a07b2532c","date":1385570079,"type":4,"author":"Michael McCandless","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/TaxonomyFacetCounts#getSpecificValue(String,String...).mjava","sourceNew":null,"sourceOld":"  @Override\n  public Number getSpecificValue(String dim, String... path) throws IOException {\n    verifyDim(dim);\n    int ord = taxoReader.getOrdinal(FacetLabel.create(dim, path));\n    if (ord < 0) {\n      return -1;\n    }\n    return counts[ord];\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b6e499df4729e7162d5b39a70b0142e3186a029f":["21d36d0db865f7b84026b447bec653469a6e66df"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"21d36d0db865f7b84026b447bec653469a6e66df":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"1536855b62f453c22bb60258029b3b2a07b2532c":["b6e499df4729e7162d5b39a70b0142e3186a029f"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"b6e499df4729e7162d5b39a70b0142e3186a029f":["1536855b62f453c22bb60258029b3b2a07b2532c"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["21d36d0db865f7b84026b447bec653469a6e66df","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"21d36d0db865f7b84026b447bec653469a6e66df":["b6e499df4729e7162d5b39a70b0142e3186a029f"],"1536855b62f453c22bb60258029b3b2a07b2532c":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["1536855b62f453c22bb60258029b3b2a07b2532c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}