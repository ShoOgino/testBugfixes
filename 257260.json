{"path":"solr/src/test/org/apache/solr/update/DirectUpdateHandlerTest#testRequireUniqueKey().mjava","commits":[{"id":"893269407f5c988a4b2ee13c7ffc01ec43136c1d","date":1268598046,"type":0,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/src/test/org/apache/solr/update/DirectUpdateHandlerTest#testRequireUniqueKey().mjava","pathOld":"/dev/null","sourceNew":"  public void testRequireUniqueKey() throws Exception \n  {\n    SolrCore core = h.getCore();\n    \n    UpdateHandler updater = core.getUpdateHandler();\n    \n    AddUpdateCommand cmd = new AddUpdateCommand();\n    cmd.overwriteCommitted = true;\n    cmd.overwritePending = true;\n    cmd.allowDups = false;\n    \n    // Add a valid document\n    cmd.doc = new Document();\n    cmd.doc.add( new Field( \"id\", \"AAA\", Store.YES, Index.UN_TOKENIZED ) );\n    cmd.doc.add( new Field( \"subject\", \"xxxxx\", Store.YES, Index.UN_TOKENIZED ) );\n    updater.addDoc( cmd );\n    \n    // Add a document with multiple ids\n    cmd.indexedId = null;  // reset the id for this add\n    cmd.doc = new Document();\n    cmd.doc.add( new Field( \"id\", \"AAA\", Store.YES, Index.UN_TOKENIZED ) );\n    cmd.doc.add( new Field( \"id\", \"BBB\", Store.YES, Index.UN_TOKENIZED ) );\n    cmd.doc.add( new Field( \"subject\", \"xxxxx\", Store.YES, Index.UN_TOKENIZED ) );\n    try {\n      updater.addDoc( cmd );\n      fail( \"added a document with multiple ids\" );\n    }\n    catch( SolrException ex ) { } // expected\n\n    // Add a document without an id\n    cmd.indexedId = null;  // reset the id for this add\n    cmd.doc = new Document();\n    cmd.doc.add( new Field( \"subject\", \"xxxxx\", Store.YES, Index.UN_TOKENIZED ) );\n    try {\n      updater.addDoc( cmd );\n      fail( \"added a document without an ids\" );\n    }\n    catch( SolrException ex ) { } // expected\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8","date":1268599006,"type":4,"author":"Mark Robert Miller","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/src/test/org/apache/solr/update/DirectUpdateHandlerTest#testRequireUniqueKey().mjava","sourceNew":null,"sourceOld":"  public void testRequireUniqueKey() throws Exception \n  {\n    SolrCore core = h.getCore();\n    \n    UpdateHandler updater = core.getUpdateHandler();\n    \n    AddUpdateCommand cmd = new AddUpdateCommand();\n    cmd.overwriteCommitted = true;\n    cmd.overwritePending = true;\n    cmd.allowDups = false;\n    \n    // Add a valid document\n    cmd.doc = new Document();\n    cmd.doc.add( new Field( \"id\", \"AAA\", Store.YES, Index.UN_TOKENIZED ) );\n    cmd.doc.add( new Field( \"subject\", \"xxxxx\", Store.YES, Index.UN_TOKENIZED ) );\n    updater.addDoc( cmd );\n    \n    // Add a document with multiple ids\n    cmd.indexedId = null;  // reset the id for this add\n    cmd.doc = new Document();\n    cmd.doc.add( new Field( \"id\", \"AAA\", Store.YES, Index.UN_TOKENIZED ) );\n    cmd.doc.add( new Field( \"id\", \"BBB\", Store.YES, Index.UN_TOKENIZED ) );\n    cmd.doc.add( new Field( \"subject\", \"xxxxx\", Store.YES, Index.UN_TOKENIZED ) );\n    try {\n      updater.addDoc( cmd );\n      fail( \"added a document with multiple ids\" );\n    }\n    catch( SolrException ex ) { } // expected\n\n    // Add a document without an id\n    cmd.indexedId = null;  // reset the id for this add\n    cmd.doc = new Document();\n    cmd.doc.add( new Field( \"subject\", \"xxxxx\", Store.YES, Index.UN_TOKENIZED ) );\n    try {\n      updater.addDoc( cmd );\n      fail( \"added a document without an ids\" );\n    }\n    catch( SolrException ex ) { } // expected\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ad94625fb8d088209f46650c8097196fec67f00c","date":1453508319,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/src/test/org/apache/solr/update/DirectUpdateHandlerTest#testRequireUniqueKey().mjava","pathOld":"src/test/org/apache/solr/update/DirectUpdateHandlerTest#testRequireUniqueKey().mjava","sourceNew":"  public void testRequireUniqueKey() throws Exception \n  {\n    SolrCore core = h.getCore();\n    \n    UpdateHandler updater = core.getUpdateHandler();\n    \n    AddUpdateCommand cmd = new AddUpdateCommand();\n    cmd.overwriteCommitted = true;\n    cmd.overwritePending = true;\n    cmd.allowDups = false;\n    \n    // Add a valid document\n    cmd.doc = new Document();\n    cmd.doc.add( new Field( \"id\", \"AAA\", Store.YES, Index.NOT_ANALYZED ) );\n    cmd.doc.add( new Field( \"subject\", \"xxxxx\", Store.YES, Index.NOT_ANALYZED ) );\n    updater.addDoc( cmd );\n    \n    // Add a document with multiple ids\n    cmd.indexedId = null;  // reset the id for this add\n    cmd.doc = new Document();\n    cmd.doc.add( new Field( \"id\", \"AAA\", Store.YES, Index.NOT_ANALYZED ) );\n    cmd.doc.add( new Field( \"id\", \"BBB\", Store.YES, Index.NOT_ANALYZED ) );\n    cmd.doc.add( new Field( \"subject\", \"xxxxx\", Store.YES, Index.NOT_ANALYZED ) );\n    try {\n      updater.addDoc( cmd );\n      fail( \"added a document with multiple ids\" );\n    }\n    catch( SolrException ex ) { } // expected\n\n    // Add a document without an id\n    cmd.indexedId = null;  // reset the id for this add\n    cmd.doc = new Document();\n    cmd.doc.add( new Field( \"subject\", \"xxxxx\", Store.YES, Index.NOT_ANALYZED ) );\n    try {\n      updater.addDoc( cmd );\n      fail( \"added a document without an ids\" );\n    }\n    catch( SolrException ex ) { } // expected\n  }\n\n","sourceOld":"  public void testRequireUniqueKey() throws Exception \n  {\n    SolrCore core = h.getCore();\n    \n    UpdateHandler updater = core.getUpdateHandler();\n    \n    AddUpdateCommand cmd = new AddUpdateCommand();\n    cmd.overwriteCommitted = true;\n    cmd.overwritePending = true;\n    cmd.allowDups = false;\n    \n    // Add a valid document\n    cmd.doc = new Document();\n    cmd.doc.add( new Field( \"id\", \"AAA\", Store.YES, Index.NOT_ANALYZED ) );\n    cmd.doc.add( new Field( \"subject\", \"xxxxx\", Store.YES, Index.NOT_ANALYZED ) );\n    updater.addDoc( cmd );\n    \n    // Add a document with multiple ids\n    cmd.indexedId = null;  // reset the id for this add\n    cmd.doc = new Document();\n    cmd.doc.add( new Field( \"id\", \"AAA\", Store.YES, Index.NOT_ANALYZED ) );\n    cmd.doc.add( new Field( \"id\", \"BBB\", Store.YES, Index.NOT_ANALYZED ) );\n    cmd.doc.add( new Field( \"subject\", \"xxxxx\", Store.YES, Index.NOT_ANALYZED ) );\n    try {\n      updater.addDoc( cmd );\n      fail( \"added a document with multiple ids\" );\n    }\n    catch( SolrException ex ) { } // expected\n\n    // Add a document without an id\n    cmd.indexedId = null;  // reset the id for this add\n    cmd.doc = new Document();\n    cmd.doc.add( new Field( \"subject\", \"xxxxx\", Store.YES, Index.NOT_ANALYZED ) );\n    try {\n      updater.addDoc( cmd );\n      fail( \"added a document without an ids\" );\n    }\n    catch( SolrException ex ) { } // expected\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1da8d55113b689b06716246649de6f62430f15c0","date":1453508340,"type":0,"author":"Dawid Weiss","isMerge":true,"pathNew":"solr/src/test/org/apache/solr/update/DirectUpdateHandlerTest#testRequireUniqueKey().mjava","pathOld":"/dev/null","sourceNew":"  public void testRequireUniqueKey() throws Exception \n  {\n    SolrCore core = h.getCore();\n    \n    UpdateHandler updater = core.getUpdateHandler();\n    \n    AddUpdateCommand cmd = new AddUpdateCommand();\n    cmd.overwriteCommitted = true;\n    cmd.overwritePending = true;\n    cmd.allowDups = false;\n    \n    // Add a valid document\n    cmd.doc = new Document();\n    cmd.doc.add( new Field( \"id\", \"AAA\", Store.YES, Index.NOT_ANALYZED ) );\n    cmd.doc.add( new Field( \"subject\", \"xxxxx\", Store.YES, Index.NOT_ANALYZED ) );\n    updater.addDoc( cmd );\n    \n    // Add a document with multiple ids\n    cmd.indexedId = null;  // reset the id for this add\n    cmd.doc = new Document();\n    cmd.doc.add( new Field( \"id\", \"AAA\", Store.YES, Index.NOT_ANALYZED ) );\n    cmd.doc.add( new Field( \"id\", \"BBB\", Store.YES, Index.NOT_ANALYZED ) );\n    cmd.doc.add( new Field( \"subject\", \"xxxxx\", Store.YES, Index.NOT_ANALYZED ) );\n    try {\n      updater.addDoc( cmd );\n      fail( \"added a document with multiple ids\" );\n    }\n    catch( SolrException ex ) { } // expected\n\n    // Add a document without an id\n    cmd.indexedId = null;  // reset the id for this add\n    cmd.doc = new Document();\n    cmd.doc.add( new Field( \"subject\", \"xxxxx\", Store.YES, Index.NOT_ANALYZED ) );\n    try {\n      updater.addDoc( cmd );\n      fail( \"added a document without an ids\" );\n    }\n    catch( SolrException ex ) { } // expected\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bd0a7f04b5a49a00149b867e7d51f632fb8a4664","date":1279497978,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"solr/src/test/org/apache/solr/update/DirectUpdateHandlerTest#testRequireUniqueKey().mjava","pathOld":"solr/src/test/org/apache/solr/update/DirectUpdateHandlerTest#testRequireUniqueKey().mjava","sourceNew":"  @Test\n  public void testRequireUniqueKey() throws Exception \n  {\n    SolrCore core = h.getCore();\n    \n    UpdateHandler updater = core.getUpdateHandler();\n    \n    AddUpdateCommand cmd = new AddUpdateCommand();\n    cmd.overwriteCommitted = true;\n    cmd.overwritePending = true;\n    cmd.allowDups = false;\n    \n    // Add a valid document\n    cmd.doc = new Document();\n    cmd.doc.add( new Field( \"id\", \"AAA\", Store.YES, Index.NOT_ANALYZED ) );\n    cmd.doc.add( new Field( \"subject\", \"xxxxx\", Store.YES, Index.NOT_ANALYZED ) );\n    updater.addDoc( cmd );\n    \n    // Add a document with multiple ids\n    cmd.indexedId = null;  // reset the id for this add\n    cmd.doc = new Document();\n    cmd.doc.add( new Field( \"id\", \"AAA\", Store.YES, Index.NOT_ANALYZED ) );\n    cmd.doc.add( new Field( \"id\", \"BBB\", Store.YES, Index.NOT_ANALYZED ) );\n    cmd.doc.add( new Field( \"subject\", \"xxxxx\", Store.YES, Index.NOT_ANALYZED ) );\n    try {\n      updater.addDoc( cmd );\n      fail( \"added a document with multiple ids\" );\n    }\n    catch( SolrException ex ) { } // expected\n\n    // Add a document without an id\n    cmd.indexedId = null;  // reset the id for this add\n    cmd.doc = new Document();\n    cmd.doc.add( new Field( \"subject\", \"xxxxx\", Store.YES, Index.NOT_ANALYZED ) );\n    try {\n      updater.addDoc( cmd );\n      fail( \"added a document without an ids\" );\n    }\n    catch( SolrException ex ) { } // expected\n  }\n\n","sourceOld":"  public void testRequireUniqueKey() throws Exception \n  {\n    SolrCore core = h.getCore();\n    \n    UpdateHandler updater = core.getUpdateHandler();\n    \n    AddUpdateCommand cmd = new AddUpdateCommand();\n    cmd.overwriteCommitted = true;\n    cmd.overwritePending = true;\n    cmd.allowDups = false;\n    \n    // Add a valid document\n    cmd.doc = new Document();\n    cmd.doc.add( new Field( \"id\", \"AAA\", Store.YES, Index.NOT_ANALYZED ) );\n    cmd.doc.add( new Field( \"subject\", \"xxxxx\", Store.YES, Index.NOT_ANALYZED ) );\n    updater.addDoc( cmd );\n    \n    // Add a document with multiple ids\n    cmd.indexedId = null;  // reset the id for this add\n    cmd.doc = new Document();\n    cmd.doc.add( new Field( \"id\", \"AAA\", Store.YES, Index.NOT_ANALYZED ) );\n    cmd.doc.add( new Field( \"id\", \"BBB\", Store.YES, Index.NOT_ANALYZED ) );\n    cmd.doc.add( new Field( \"subject\", \"xxxxx\", Store.YES, Index.NOT_ANALYZED ) );\n    try {\n      updater.addDoc( cmd );\n      fail( \"added a document with multiple ids\" );\n    }\n    catch( SolrException ex ) { } // expected\n\n    // Add a document without an id\n    cmd.indexedId = null;  // reset the id for this add\n    cmd.doc = new Document();\n    cmd.doc.add( new Field( \"subject\", \"xxxxx\", Store.YES, Index.NOT_ANALYZED ) );\n    try {\n      updater.addDoc( cmd );\n      fail( \"added a document without an ids\" );\n    }\n    catch( SolrException ex ) { } // expected\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5f4e87790277826a2aea119328600dfb07761f32","date":1279827275,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"solr/src/test/org/apache/solr/update/DirectUpdateHandlerTest#testRequireUniqueKey().mjava","pathOld":"solr/src/test/org/apache/solr/update/DirectUpdateHandlerTest#testRequireUniqueKey().mjava","sourceNew":"  @Test\n  public void testRequireUniqueKey() throws Exception \n  {\n    SolrCore core = h.getCore();\n    \n    UpdateHandler updater = core.getUpdateHandler();\n    \n    AddUpdateCommand cmd = new AddUpdateCommand();\n    cmd.overwriteCommitted = true;\n    cmd.overwritePending = true;\n    cmd.allowDups = false;\n    \n    // Add a valid document\n    cmd.doc = new Document();\n    cmd.doc.add( new Field( \"id\", \"AAA\", Store.YES, Index.NOT_ANALYZED ) );\n    cmd.doc.add( new Field( \"subject\", \"xxxxx\", Store.YES, Index.NOT_ANALYZED ) );\n    updater.addDoc( cmd );\n    \n    // Add a document with multiple ids\n    cmd.indexedId = null;  // reset the id for this add\n    cmd.doc = new Document();\n    cmd.doc.add( new Field( \"id\", \"AAA\", Store.YES, Index.NOT_ANALYZED ) );\n    cmd.doc.add( new Field( \"id\", \"BBB\", Store.YES, Index.NOT_ANALYZED ) );\n    cmd.doc.add( new Field( \"subject\", \"xxxxx\", Store.YES, Index.NOT_ANALYZED ) );\n    try {\n      updater.addDoc( cmd );\n      fail( \"added a document with multiple ids\" );\n    }\n    catch( SolrException ex ) { } // expected\n\n    // Add a document without an id\n    cmd.indexedId = null;  // reset the id for this add\n    cmd.doc = new Document();\n    cmd.doc.add( new Field( \"subject\", \"xxxxx\", Store.YES, Index.NOT_ANALYZED ) );\n    try {\n      updater.addDoc( cmd );\n      fail( \"added a document without an ids\" );\n    }\n    catch( SolrException ex ) { } // expected\n  }\n\n","sourceOld":"  public void testRequireUniqueKey() throws Exception \n  {\n    SolrCore core = h.getCore();\n    \n    UpdateHandler updater = core.getUpdateHandler();\n    \n    AddUpdateCommand cmd = new AddUpdateCommand();\n    cmd.overwriteCommitted = true;\n    cmd.overwritePending = true;\n    cmd.allowDups = false;\n    \n    // Add a valid document\n    cmd.doc = new Document();\n    cmd.doc.add( new Field( \"id\", \"AAA\", Store.YES, Index.NOT_ANALYZED ) );\n    cmd.doc.add( new Field( \"subject\", \"xxxxx\", Store.YES, Index.NOT_ANALYZED ) );\n    updater.addDoc( cmd );\n    \n    // Add a document with multiple ids\n    cmd.indexedId = null;  // reset the id for this add\n    cmd.doc = new Document();\n    cmd.doc.add( new Field( \"id\", \"AAA\", Store.YES, Index.NOT_ANALYZED ) );\n    cmd.doc.add( new Field( \"id\", \"BBB\", Store.YES, Index.NOT_ANALYZED ) );\n    cmd.doc.add( new Field( \"subject\", \"xxxxx\", Store.YES, Index.NOT_ANALYZED ) );\n    try {\n      updater.addDoc( cmd );\n      fail( \"added a document with multiple ids\" );\n    }\n    catch( SolrException ex ) { } // expected\n\n    // Add a document without an id\n    cmd.indexedId = null;  // reset the id for this add\n    cmd.doc = new Document();\n    cmd.doc.add( new Field( \"subject\", \"xxxxx\", Store.YES, Index.NOT_ANALYZED ) );\n    try {\n      updater.addDoc( cmd );\n      fail( \"added a document without an ids\" );\n    }\n    catch( SolrException ex ) { } // expected\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b5653af107efef582afd0bc6aff175972359fdd6","date":1293390698,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"solr/src/test/org/apache/solr/update/DirectUpdateHandlerTest#testRequireUniqueKey().mjava","pathOld":"solr/src/test/org/apache/solr/update/DirectUpdateHandlerTest#testRequireUniqueKey().mjava","sourceNew":"  @Test\n  public void testRequireUniqueKey() throws Exception \n  {\n    SolrCore core = h.getCore();\n    \n    UpdateHandler updater = core.getUpdateHandler();\n    \n    AddUpdateCommand cmd = new AddUpdateCommand();\n    \n    // Add a valid document\n    cmd.doc = new Document();\n    cmd.doc.add( new Field( \"id\", \"AAA\", Store.YES, Index.NOT_ANALYZED ) );\n    cmd.doc.add( new Field( \"subject\", \"xxxxx\", Store.YES, Index.NOT_ANALYZED ) );\n    updater.addDoc( cmd );\n    \n    // Add a document with multiple ids\n    cmd.indexedId = null;  // reset the id for this add\n    cmd.doc = new Document();\n    cmd.doc.add( new Field( \"id\", \"AAA\", Store.YES, Index.NOT_ANALYZED ) );\n    cmd.doc.add( new Field( \"id\", \"BBB\", Store.YES, Index.NOT_ANALYZED ) );\n    cmd.doc.add( new Field( \"subject\", \"xxxxx\", Store.YES, Index.NOT_ANALYZED ) );\n    try {\n      updater.addDoc( cmd );\n      fail( \"added a document with multiple ids\" );\n    }\n    catch( SolrException ex ) { } // expected\n\n    // Add a document without an id\n    cmd.indexedId = null;  // reset the id for this add\n    cmd.doc = new Document();\n    cmd.doc.add( new Field( \"subject\", \"xxxxx\", Store.YES, Index.NOT_ANALYZED ) );\n    try {\n      updater.addDoc( cmd );\n      fail( \"added a document without an ids\" );\n    }\n    catch( SolrException ex ) { } // expected\n  }\n\n","sourceOld":"  @Test\n  public void testRequireUniqueKey() throws Exception \n  {\n    SolrCore core = h.getCore();\n    \n    UpdateHandler updater = core.getUpdateHandler();\n    \n    AddUpdateCommand cmd = new AddUpdateCommand();\n    cmd.overwriteCommitted = true;\n    cmd.overwritePending = true;\n    cmd.allowDups = false;\n    \n    // Add a valid document\n    cmd.doc = new Document();\n    cmd.doc.add( new Field( \"id\", \"AAA\", Store.YES, Index.NOT_ANALYZED ) );\n    cmd.doc.add( new Field( \"subject\", \"xxxxx\", Store.YES, Index.NOT_ANALYZED ) );\n    updater.addDoc( cmd );\n    \n    // Add a document with multiple ids\n    cmd.indexedId = null;  // reset the id for this add\n    cmd.doc = new Document();\n    cmd.doc.add( new Field( \"id\", \"AAA\", Store.YES, Index.NOT_ANALYZED ) );\n    cmd.doc.add( new Field( \"id\", \"BBB\", Store.YES, Index.NOT_ANALYZED ) );\n    cmd.doc.add( new Field( \"subject\", \"xxxxx\", Store.YES, Index.NOT_ANALYZED ) );\n    try {\n      updater.addDoc( cmd );\n      fail( \"added a document with multiple ids\" );\n    }\n    catch( SolrException ex ) { } // expected\n\n    // Add a document without an id\n    cmd.indexedId = null;  // reset the id for this add\n    cmd.doc = new Document();\n    cmd.doc.add( new Field( \"subject\", \"xxxxx\", Store.YES, Index.NOT_ANALYZED ) );\n    try {\n      updater.addDoc( cmd );\n      fail( \"added a document without an ids\" );\n    }\n    catch( SolrException ex ) { } // expected\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5ae62bcdfd4a0689a745ab1d38c6bd1c7c390cfa","date":1293733647,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"solr/src/test/org/apache/solr/update/DirectUpdateHandlerTest#testRequireUniqueKey().mjava","pathOld":"solr/src/test/org/apache/solr/update/DirectUpdateHandlerTest#testRequireUniqueKey().mjava","sourceNew":"  @Test\n  public void testRequireUniqueKey() throws Exception {\n    // Add a valid document\n    assertU(adoc(\"id\",\"1\"));\n\n    // More than one id should fail\n    assertFailedU(adoc(\"id\",\"2\", \"id\",\"3\", \"text\",\"ignore_exception\"));\n\n    // No id should fail\n    assertFailedU(adoc(\"text\",\"ignore_exception\"));\n  }\n\n","sourceOld":"  @Test\n  public void testRequireUniqueKey() throws Exception \n  {\n    SolrCore core = h.getCore();\n    \n    UpdateHandler updater = core.getUpdateHandler();\n    \n    AddUpdateCommand cmd = new AddUpdateCommand();\n    \n    // Add a valid document\n    cmd.doc = new Document();\n    cmd.doc.add( new Field( \"id\", \"AAA\", Store.YES, Index.NOT_ANALYZED ) );\n    cmd.doc.add( new Field( \"subject\", \"xxxxx\", Store.YES, Index.NOT_ANALYZED ) );\n    updater.addDoc( cmd );\n    \n    // Add a document with multiple ids\n    cmd.indexedId = null;  // reset the id for this add\n    cmd.doc = new Document();\n    cmd.doc.add( new Field( \"id\", \"AAA\", Store.YES, Index.NOT_ANALYZED ) );\n    cmd.doc.add( new Field( \"id\", \"BBB\", Store.YES, Index.NOT_ANALYZED ) );\n    cmd.doc.add( new Field( \"subject\", \"xxxxx\", Store.YES, Index.NOT_ANALYZED ) );\n    try {\n      updater.addDoc( cmd );\n      fail( \"added a document with multiple ids\" );\n    }\n    catch( SolrException ex ) { } // expected\n\n    // Add a document without an id\n    cmd.indexedId = null;  // reset the id for this add\n    cmd.doc = new Document();\n    cmd.doc.add( new Field( \"subject\", \"xxxxx\", Store.YES, Index.NOT_ANALYZED ) );\n    try {\n      updater.addDoc( cmd );\n      fail( \"added a document without an ids\" );\n    }\n    catch( SolrException ex ) { } // expected\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e43d441e40dcdc973f88d42b450c772bb7e2154f","date":1293807941,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"solr/src/test/org/apache/solr/update/DirectUpdateHandlerTest#testRequireUniqueKey().mjava","pathOld":"solr/src/test/org/apache/solr/update/DirectUpdateHandlerTest#testRequireUniqueKey().mjava","sourceNew":"  @Test\n  public void testRequireUniqueKey() throws Exception {\n    // Add a valid document\n    assertU(adoc(\"id\",\"1\"));\n\n    // More than one id should fail\n    assertFailedU(adoc(\"id\",\"2\", \"id\",\"ignore_exception\", \"text\",\"foo\"));\n\n    // No id should fail\n    ignoreException(\"id\");\n    assertFailedU(adoc(\"text\",\"foo\"));\n    resetExceptionIgnores();\n  }\n\n","sourceOld":"  @Test\n  public void testRequireUniqueKey() throws Exception {\n    // Add a valid document\n    assertU(adoc(\"id\",\"1\"));\n\n    // More than one id should fail\n    assertFailedU(adoc(\"id\",\"2\", \"id\",\"3\", \"text\",\"ignore_exception\"));\n\n    // No id should fail\n    assertFailedU(adoc(\"text\",\"ignore_exception\"));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ff9cf7165d6cbafe4ef4431ecc2dc1af9cb2316c","date":1294014627,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"solr/src/test/org/apache/solr/update/DirectUpdateHandlerTest#testRequireUniqueKey().mjava","pathOld":"solr/src/test/org/apache/solr/update/DirectUpdateHandlerTest#testRequireUniqueKey().mjava","sourceNew":"  @Test\n  public void testRequireUniqueKey() throws Exception {\n    // Add a valid document\n    assertU(adoc(\"id\",\"1\"));\n\n    // More than one id should fail\n    assertFailedU(adoc(\"id\",\"2\", \"id\",\"ignore_exception\", \"text\",\"foo\"));\n\n    // No id should fail\n    ignoreException(\"id\");\n    assertFailedU(adoc(\"text\",\"foo\"));\n    resetExceptionIgnores();\n  }\n\n","sourceOld":"  @Test\n  public void testRequireUniqueKey() throws Exception \n  {\n    SolrCore core = h.getCore();\n    \n    UpdateHandler updater = core.getUpdateHandler();\n    \n    AddUpdateCommand cmd = new AddUpdateCommand();\n    cmd.overwriteCommitted = true;\n    cmd.overwritePending = true;\n    cmd.allowDups = false;\n    \n    // Add a valid document\n    cmd.doc = new Document();\n    cmd.doc.add( new Field( \"id\", \"AAA\", Store.YES, Index.NOT_ANALYZED ) );\n    cmd.doc.add( new Field( \"subject\", \"xxxxx\", Store.YES, Index.NOT_ANALYZED ) );\n    updater.addDoc( cmd );\n    \n    // Add a document with multiple ids\n    cmd.indexedId = null;  // reset the id for this add\n    cmd.doc = new Document();\n    cmd.doc.add( new Field( \"id\", \"AAA\", Store.YES, Index.NOT_ANALYZED ) );\n    cmd.doc.add( new Field( \"id\", \"BBB\", Store.YES, Index.NOT_ANALYZED ) );\n    cmd.doc.add( new Field( \"subject\", \"xxxxx\", Store.YES, Index.NOT_ANALYZED ) );\n    try {\n      updater.addDoc( cmd );\n      fail( \"added a document with multiple ids\" );\n    }\n    catch( SolrException ex ) { } // expected\n\n    // Add a document without an id\n    cmd.indexedId = null;  // reset the id for this add\n    cmd.doc = new Document();\n    cmd.doc.add( new Field( \"subject\", \"xxxxx\", Store.YES, Index.NOT_ANALYZED ) );\n    try {\n      updater.addDoc( cmd );\n      fail( \"added a document without an ids\" );\n    }\n    catch( SolrException ex ) { } // expected\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"70ad682703b8585f5d0a637efec044d57ec05efb","date":1294259117,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"solr/src/test/org/apache/solr/update/DirectUpdateHandlerTest#testRequireUniqueKey().mjava","pathOld":"solr/src/test/org/apache/solr/update/DirectUpdateHandlerTest#testRequireUniqueKey().mjava","sourceNew":"  @Test\n  public void testRequireUniqueKey() throws Exception {\n    // Add a valid document\n    assertU(adoc(\"id\",\"1\"));\n\n    // More than one id should fail\n    assertFailedU(adoc(\"id\",\"2\", \"id\",\"ignore_exception\", \"text\",\"foo\"));\n\n    // No id should fail\n    ignoreException(\"id\");\n    assertFailedU(adoc(\"text\",\"foo\"));\n    resetExceptionIgnores();\n  }\n\n","sourceOld":"  @Test\n  public void testRequireUniqueKey() throws Exception \n  {\n    SolrCore core = h.getCore();\n    \n    UpdateHandler updater = core.getUpdateHandler();\n    \n    AddUpdateCommand cmd = new AddUpdateCommand();\n    cmd.overwriteCommitted = true;\n    cmd.overwritePending = true;\n    cmd.allowDups = false;\n    \n    // Add a valid document\n    cmd.doc = new Document();\n    cmd.doc.add( new Field( \"id\", \"AAA\", Store.YES, Index.NOT_ANALYZED ) );\n    cmd.doc.add( new Field( \"subject\", \"xxxxx\", Store.YES, Index.NOT_ANALYZED ) );\n    updater.addDoc( cmd );\n    \n    // Add a document with multiple ids\n    cmd.indexedId = null;  // reset the id for this add\n    cmd.doc = new Document();\n    cmd.doc.add( new Field( \"id\", \"AAA\", Store.YES, Index.NOT_ANALYZED ) );\n    cmd.doc.add( new Field( \"id\", \"BBB\", Store.YES, Index.NOT_ANALYZED ) );\n    cmd.doc.add( new Field( \"subject\", \"xxxxx\", Store.YES, Index.NOT_ANALYZED ) );\n    try {\n      updater.addDoc( cmd );\n      fail( \"added a document with multiple ids\" );\n    }\n    catch( SolrException ex ) { } // expected\n\n    // Add a document without an id\n    cmd.indexedId = null;  // reset the id for this add\n    cmd.doc = new Document();\n    cmd.doc.add( new Field( \"subject\", \"xxxxx\", Store.YES, Index.NOT_ANALYZED ) );\n    try {\n      updater.addDoc( cmd );\n      fail( \"added a document without an ids\" );\n    }\n    catch( SolrException ex ) { } // expected\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c903c3d15906a3da96b8c0c2fb704491005fdbdb","date":1453508227,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/update/DirectUpdateHandlerTest#testRequireUniqueKey().mjava","pathOld":"solr/src/test/org/apache/solr/update/DirectUpdateHandlerTest#testRequireUniqueKey().mjava","sourceNew":"  @Test\n  public void testRequireUniqueKey() throws Exception {\n    // Add a valid document\n    assertU(adoc(\"id\",\"1\"));\n\n    // More than one id should fail\n    assertFailedU(adoc(\"id\",\"2\", \"id\",\"ignore_exception\", \"text\",\"foo\"));\n\n    // No id should fail\n    ignoreException(\"id\");\n    assertFailedU(adoc(\"text\",\"foo\"));\n    resetExceptionIgnores();\n  }\n\n","sourceOld":"  @Test\n  public void testRequireUniqueKey() throws Exception {\n    // Add a valid document\n    assertU(adoc(\"id\",\"1\"));\n\n    // More than one id should fail\n    assertFailedU(adoc(\"id\",\"2\", \"id\",\"ignore_exception\", \"text\",\"foo\"));\n\n    // No id should fail\n    ignoreException(\"id\");\n    assertFailedU(adoc(\"text\",\"foo\"));\n    resetExceptionIgnores();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a258fbb26824fd104ed795e5d9033d2d040049ee","date":1453508252,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/update/DirectUpdateHandlerTest#testRequireUniqueKey().mjava","pathOld":"solr/src/test/org/apache/solr/update/DirectUpdateHandlerTest#testRequireUniqueKey().mjava","sourceNew":"  @Test\n  public void testRequireUniqueKey() throws Exception {\n    // Add a valid document\n    assertU(adoc(\"id\",\"1\"));\n\n    // More than one id should fail\n    assertFailedU(adoc(\"id\",\"2\", \"id\",\"ignore_exception\", \"text\",\"foo\"));\n\n    // No id should fail\n    ignoreException(\"id\");\n    assertFailedU(adoc(\"text\",\"foo\"));\n    resetExceptionIgnores();\n  }\n\n","sourceOld":"  @Test\n  public void testRequireUniqueKey() throws Exception {\n    // Add a valid document\n    assertU(adoc(\"id\",\"1\"));\n\n    // More than one id should fail\n    assertFailedU(adoc(\"id\",\"2\", \"id\",\"ignore_exception\", \"text\",\"foo\"));\n\n    // No id should fail\n    ignoreException(\"id\");\n    assertFailedU(adoc(\"text\",\"foo\"));\n    resetExceptionIgnores();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":5,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/update/DirectUpdateHandlerTest#testRequireUniqueKey().mjava","pathOld":"solr/src/test/org/apache/solr/update/DirectUpdateHandlerTest#testRequireUniqueKey().mjava","sourceNew":"  @Test\n  public void testRequireUniqueKey() throws Exception {\n    // Add a valid document\n    assertU(adoc(\"id\",\"1\"));\n\n    // More than one id should fail\n    assertFailedU(adoc(\"id\",\"2\", \"id\",\"ignore_exception\", \"text\",\"foo\"));\n\n    // No id should fail\n    ignoreException(\"id\");\n    assertFailedU(adoc(\"text\",\"foo\"));\n    resetExceptionIgnores();\n  }\n\n","sourceOld":"  @Test\n  public void testRequireUniqueKey() throws Exception {\n    // Add a valid document\n    assertU(adoc(\"id\",\"1\"));\n\n    // More than one id should fail\n    assertFailedU(adoc(\"id\",\"2\", \"id\",\"ignore_exception\", \"text\",\"foo\"));\n\n    // No id should fail\n    ignoreException(\"id\");\n    assertFailedU(adoc(\"text\",\"foo\"));\n    resetExceptionIgnores();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"70ad682703b8585f5d0a637efec044d57ec05efb":["bd0a7f04b5a49a00149b867e7d51f632fb8a4664","e43d441e40dcdc973f88d42b450c772bb7e2154f"],"893269407f5c988a4b2ee13c7ffc01ec43136c1d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8":["893269407f5c988a4b2ee13c7ffc01ec43136c1d"],"c26f00b574427b55127e869b935845554afde1fa":["e43d441e40dcdc973f88d42b450c772bb7e2154f","c903c3d15906a3da96b8c0c2fb704491005fdbdb"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"5f4e87790277826a2aea119328600dfb07761f32":["1da8d55113b689b06716246649de6f62430f15c0","bd0a7f04b5a49a00149b867e7d51f632fb8a4664"],"1da8d55113b689b06716246649de6f62430f15c0":["a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8","ad94625fb8d088209f46650c8097196fec67f00c"],"e43d441e40dcdc973f88d42b450c772bb7e2154f":["5ae62bcdfd4a0689a745ab1d38c6bd1c7c390cfa"],"ff9cf7165d6cbafe4ef4431ecc2dc1af9cb2316c":["5f4e87790277826a2aea119328600dfb07761f32","e43d441e40dcdc973f88d42b450c772bb7e2154f"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["e43d441e40dcdc973f88d42b450c772bb7e2154f"],"b5653af107efef582afd0bc6aff175972359fdd6":["bd0a7f04b5a49a00149b867e7d51f632fb8a4664"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a258fbb26824fd104ed795e5d9033d2d040049ee":["e43d441e40dcdc973f88d42b450c772bb7e2154f"],"ad94625fb8d088209f46650c8097196fec67f00c":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"5ae62bcdfd4a0689a745ab1d38c6bd1c7c390cfa":["b5653af107efef582afd0bc6aff175972359fdd6"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["c26f00b574427b55127e869b935845554afde1fa"],"bd0a7f04b5a49a00149b867e7d51f632fb8a4664":["1da8d55113b689b06716246649de6f62430f15c0"]},"commit2Childs":{"70ad682703b8585f5d0a637efec044d57ec05efb":[],"893269407f5c988a4b2ee13c7ffc01ec43136c1d":["a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8"],"a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8":["1da8d55113b689b06716246649de6f62430f15c0"],"c26f00b574427b55127e869b935845554afde1fa":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["ad94625fb8d088209f46650c8097196fec67f00c"],"5f4e87790277826a2aea119328600dfb07761f32":["ff9cf7165d6cbafe4ef4431ecc2dc1af9cb2316c"],"1da8d55113b689b06716246649de6f62430f15c0":["5f4e87790277826a2aea119328600dfb07761f32","bd0a7f04b5a49a00149b867e7d51f632fb8a4664"],"e43d441e40dcdc973f88d42b450c772bb7e2154f":["70ad682703b8585f5d0a637efec044d57ec05efb","c26f00b574427b55127e869b935845554afde1fa","ff9cf7165d6cbafe4ef4431ecc2dc1af9cb2316c","c903c3d15906a3da96b8c0c2fb704491005fdbdb","a258fbb26824fd104ed795e5d9033d2d040049ee"],"ff9cf7165d6cbafe4ef4431ecc2dc1af9cb2316c":[],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["c26f00b574427b55127e869b935845554afde1fa"],"b5653af107efef582afd0bc6aff175972359fdd6":["5ae62bcdfd4a0689a745ab1d38c6bd1c7c390cfa"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["893269407f5c988a4b2ee13c7ffc01ec43136c1d"],"a258fbb26824fd104ed795e5d9033d2d040049ee":[],"ad94625fb8d088209f46650c8097196fec67f00c":["1da8d55113b689b06716246649de6f62430f15c0"],"5ae62bcdfd4a0689a745ab1d38c6bd1c7c390cfa":["e43d441e40dcdc973f88d42b450c772bb7e2154f"],"bd0a7f04b5a49a00149b867e7d51f632fb8a4664":["70ad682703b8585f5d0a637efec044d57ec05efb","5f4e87790277826a2aea119328600dfb07761f32","b5653af107efef582afd0bc6aff175972359fdd6"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["70ad682703b8585f5d0a637efec044d57ec05efb","ff9cf7165d6cbafe4ef4431ecc2dc1af9cb2316c","a258fbb26824fd104ed795e5d9033d2d040049ee","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b","a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}