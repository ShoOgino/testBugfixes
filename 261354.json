{"path":"solr/src/java/org/apache/solr/spelling/suggest/tst/TSTLookup#readRecursively(DataInputStream,TernaryTreeNode).mjava","commits":[{"id":"2df6dcf97491e32d0853436240f3045d19aa457f","date":1298984641,"type":0,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/src/java/org/apache/solr/spelling/suggest/tst/TSTLookup#readRecursively(DataInputStream,TernaryTreeNode).mjava","pathOld":"/dev/null","sourceNew":"  // pre-order traversal\n  private void readRecursively(DataInputStream in, TernaryTreeNode node) throws IOException {\n    node.splitchar = in.readChar();\n    byte mask = in.readByte();\n    if ((mask & HAS_TOKEN) != 0) {\n      node.token = in.readUTF();\n    }\n    if ((mask & HAS_VALUE) != 0) {\n      node.val = new Float(in.readFloat());\n    }\n    if ((mask & LO_KID) != 0) {\n      node.loKid = new TernaryTreeNode();\n      readRecursively(in, node.loKid);\n    }\n    if ((mask & EQ_KID) != 0) {\n      node.eqKid = new TernaryTreeNode();\n      readRecursively(in, node.eqKid);\n    }\n    if ((mask & HI_KID) != 0) {\n      node.hiKid = new TernaryTreeNode();\n      readRecursively(in, node.hiKid);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d619839baa8ce5503e496b94a9e42ad6f079293f","date":1301309428,"type":0,"author":"Simon Willnauer","isMerge":true,"pathNew":"solr/src/java/org/apache/solr/spelling/suggest/tst/TSTLookup#readRecursively(DataInputStream,TernaryTreeNode).mjava","pathOld":"/dev/null","sourceNew":"  // pre-order traversal\n  private void readRecursively(DataInputStream in, TernaryTreeNode node) throws IOException {\n    node.splitchar = in.readChar();\n    byte mask = in.readByte();\n    if ((mask & HAS_TOKEN) != 0) {\n      node.token = in.readUTF();\n    }\n    if ((mask & HAS_VALUE) != 0) {\n      node.val = new Float(in.readFloat());\n    }\n    if ((mask & LO_KID) != 0) {\n      node.loKid = new TernaryTreeNode();\n      readRecursively(in, node.loKid);\n    }\n    if ((mask & EQ_KID) != 0) {\n      node.eqKid = new TernaryTreeNode();\n      readRecursively(in, node.eqKid);\n    }\n    if ((mask & HI_KID) != 0) {\n      node.hiKid = new TernaryTreeNode();\n      readRecursively(in, node.hiKid);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c0ef0193974807e4bddf5432a6b0287fe4d6c9df","date":1301476645,"type":0,"author":"Simon Willnauer","isMerge":true,"pathNew":"solr/src/java/org/apache/solr/spelling/suggest/tst/TSTLookup#readRecursively(DataInputStream,TernaryTreeNode).mjava","pathOld":"/dev/null","sourceNew":"  // pre-order traversal\n  private void readRecursively(DataInputStream in, TernaryTreeNode node) throws IOException {\n    node.splitchar = in.readChar();\n    byte mask = in.readByte();\n    if ((mask & HAS_TOKEN) != 0) {\n      node.token = in.readUTF();\n    }\n    if ((mask & HAS_VALUE) != 0) {\n      node.val = new Float(in.readFloat());\n    }\n    if ((mask & LO_KID) != 0) {\n      node.loKid = new TernaryTreeNode();\n      readRecursively(in, node.loKid);\n    }\n    if ((mask & EQ_KID) != 0) {\n      node.eqKid = new TernaryTreeNode();\n      readRecursively(in, node.eqKid);\n    }\n    if ((mask & HI_KID) != 0) {\n      node.hiKid = new TernaryTreeNode();\n      readRecursively(in, node.hiKid);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e230a61047bc041516c811baa08a7174d6f8322a","date":1306175633,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"modules/suggest/src/java/org/apache/lucene/search/suggest/tst/TSTLookup#readRecursively(DataInputStream,TernaryTreeNode).mjava","pathOld":"solr/src/java/org/apache/solr/spelling/suggest/tst/TSTLookup#readRecursively(DataInputStream,TernaryTreeNode).mjava","sourceNew":"  // pre-order traversal\n  private void readRecursively(DataInputStream in, TernaryTreeNode node) throws IOException {\n    node.splitchar = in.readChar();\n    byte mask = in.readByte();\n    if ((mask & HAS_TOKEN) != 0) {\n      node.token = in.readUTF();\n    }\n    if ((mask & HAS_VALUE) != 0) {\n      node.val = new Float(in.readFloat());\n    }\n    if ((mask & LO_KID) != 0) {\n      node.loKid = new TernaryTreeNode();\n      readRecursively(in, node.loKid);\n    }\n    if ((mask & EQ_KID) != 0) {\n      node.eqKid = new TernaryTreeNode();\n      readRecursively(in, node.eqKid);\n    }\n    if ((mask & HI_KID) != 0) {\n      node.hiKid = new TernaryTreeNode();\n      readRecursively(in, node.hiKid);\n    }\n  }\n\n","sourceOld":"  // pre-order traversal\n  private void readRecursively(DataInputStream in, TernaryTreeNode node) throws IOException {\n    node.splitchar = in.readChar();\n    byte mask = in.readByte();\n    if ((mask & HAS_TOKEN) != 0) {\n      node.token = in.readUTF();\n    }\n    if ((mask & HAS_VALUE) != 0) {\n      node.val = new Float(in.readFloat());\n    }\n    if ((mask & LO_KID) != 0) {\n      node.loKid = new TernaryTreeNode();\n      readRecursively(in, node.loKid);\n    }\n    if ((mask & EQ_KID) != 0) {\n      node.eqKid = new TernaryTreeNode();\n      readRecursively(in, node.eqKid);\n    }\n    if ((mask & HI_KID) != 0) {\n      node.hiKid = new TernaryTreeNode();\n      readRecursively(in, node.hiKid);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91","date":1306767085,"type":5,"author":"Steven Rowe","isMerge":true,"pathNew":"modules/suggest/src/java/org/apache/lucene/search/suggest/tst/TSTLookup#readRecursively(DataInputStream,TernaryTreeNode).mjava","pathOld":"solr/src/java/org/apache/solr/spelling/suggest/tst/TSTLookup#readRecursively(DataInputStream,TernaryTreeNode).mjava","sourceNew":"  // pre-order traversal\n  private void readRecursively(DataInputStream in, TernaryTreeNode node) throws IOException {\n    node.splitchar = in.readChar();\n    byte mask = in.readByte();\n    if ((mask & HAS_TOKEN) != 0) {\n      node.token = in.readUTF();\n    }\n    if ((mask & HAS_VALUE) != 0) {\n      node.val = new Float(in.readFloat());\n    }\n    if ((mask & LO_KID) != 0) {\n      node.loKid = new TernaryTreeNode();\n      readRecursively(in, node.loKid);\n    }\n    if ((mask & EQ_KID) != 0) {\n      node.eqKid = new TernaryTreeNode();\n      readRecursively(in, node.eqKid);\n    }\n    if ((mask & HI_KID) != 0) {\n      node.hiKid = new TernaryTreeNode();\n      readRecursively(in, node.hiKid);\n    }\n  }\n\n","sourceOld":"  // pre-order traversal\n  private void readRecursively(DataInputStream in, TernaryTreeNode node) throws IOException {\n    node.splitchar = in.readChar();\n    byte mask = in.readByte();\n    if ((mask & HAS_TOKEN) != 0) {\n      node.token = in.readUTF();\n    }\n    if ((mask & HAS_VALUE) != 0) {\n      node.val = new Float(in.readFloat());\n    }\n    if ((mask & LO_KID) != 0) {\n      node.loKid = new TernaryTreeNode();\n      readRecursively(in, node.loKid);\n    }\n    if ((mask & EQ_KID) != 0) {\n      node.eqKid = new TernaryTreeNode();\n      readRecursively(in, node.eqKid);\n    }\n    if ((mask & HI_KID) != 0) {\n      node.hiKid = new TernaryTreeNode();\n      readRecursively(in, node.hiKid);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2e10cb22a8bdb44339e282925a29182bb2f3174d","date":1306841137,"type":5,"author":"Simon Willnauer","isMerge":true,"pathNew":"modules/suggest/src/java/org/apache/lucene/search/suggest/tst/TSTLookup#readRecursively(DataInputStream,TernaryTreeNode).mjava","pathOld":"solr/src/java/org/apache/solr/spelling/suggest/tst/TSTLookup#readRecursively(DataInputStream,TernaryTreeNode).mjava","sourceNew":"  // pre-order traversal\n  private void readRecursively(DataInputStream in, TernaryTreeNode node) throws IOException {\n    node.splitchar = in.readChar();\n    byte mask = in.readByte();\n    if ((mask & HAS_TOKEN) != 0) {\n      node.token = in.readUTF();\n    }\n    if ((mask & HAS_VALUE) != 0) {\n      node.val = new Float(in.readFloat());\n    }\n    if ((mask & LO_KID) != 0) {\n      node.loKid = new TernaryTreeNode();\n      readRecursively(in, node.loKid);\n    }\n    if ((mask & EQ_KID) != 0) {\n      node.eqKid = new TernaryTreeNode();\n      readRecursively(in, node.eqKid);\n    }\n    if ((mask & HI_KID) != 0) {\n      node.hiKid = new TernaryTreeNode();\n      readRecursively(in, node.hiKid);\n    }\n  }\n\n","sourceOld":"  // pre-order traversal\n  private void readRecursively(DataInputStream in, TernaryTreeNode node) throws IOException {\n    node.splitchar = in.readChar();\n    byte mask = in.readByte();\n    if ((mask & HAS_TOKEN) != 0) {\n      node.token = in.readUTF();\n    }\n    if ((mask & HAS_VALUE) != 0) {\n      node.val = new Float(in.readFloat());\n    }\n    if ((mask & LO_KID) != 0) {\n      node.loKid = new TernaryTreeNode();\n      readRecursively(in, node.loKid);\n    }\n    if ((mask & EQ_KID) != 0) {\n      node.eqKid = new TernaryTreeNode();\n      readRecursively(in, node.eqKid);\n    }\n    if ((mask & HI_KID) != 0) {\n      node.hiKid = new TernaryTreeNode();\n      readRecursively(in, node.hiKid);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"c0ef0193974807e4bddf5432a6b0287fe4d6c9df":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","2df6dcf97491e32d0853436240f3045d19aa457f"],"e230a61047bc041516c811baa08a7174d6f8322a":["2df6dcf97491e32d0853436240f3045d19aa457f"],"d619839baa8ce5503e496b94a9e42ad6f079293f":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","2df6dcf97491e32d0853436240f3045d19aa457f"],"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91":["2df6dcf97491e32d0853436240f3045d19aa457f","e230a61047bc041516c811baa08a7174d6f8322a"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"2df6dcf97491e32d0853436240f3045d19aa457f":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["e230a61047bc041516c811baa08a7174d6f8322a"],"2e10cb22a8bdb44339e282925a29182bb2f3174d":["d619839baa8ce5503e496b94a9e42ad6f079293f","e230a61047bc041516c811baa08a7174d6f8322a"]},"commit2Childs":{"c0ef0193974807e4bddf5432a6b0287fe4d6c9df":[],"e230a61047bc041516c811baa08a7174d6f8322a":["5128b7b3b73fedff05fdc5ea2e6be53c1020bb91","cd5edd1f2b162a5cfa08efd17851a07373a96817","2e10cb22a8bdb44339e282925a29182bb2f3174d"],"d619839baa8ce5503e496b94a9e42ad6f079293f":["2e10cb22a8bdb44339e282925a29182bb2f3174d"],"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c0ef0193974807e4bddf5432a6b0287fe4d6c9df","d619839baa8ce5503e496b94a9e42ad6f079293f","2df6dcf97491e32d0853436240f3045d19aa457f"],"2df6dcf97491e32d0853436240f3045d19aa457f":["c0ef0193974807e4bddf5432a6b0287fe4d6c9df","e230a61047bc041516c811baa08a7174d6f8322a","d619839baa8ce5503e496b94a9e42ad6f079293f","5128b7b3b73fedff05fdc5ea2e6be53c1020bb91"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"2e10cb22a8bdb44339e282925a29182bb2f3174d":[]},"heads":["c0ef0193974807e4bddf5432a6b0287fe4d6c9df","5128b7b3b73fedff05fdc5ea2e6be53c1020bb91","cd5edd1f2b162a5cfa08efd17851a07373a96817","2e10cb22a8bdb44339e282925a29182bb2f3174d"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}