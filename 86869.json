{"path":"lucene/src/test/org/apache/lucene/util/LineFileDocs#open().mjava","commits":[{"id":"01b5702c02a50fec5cd548d8a459434379a5908f","date":1291922553,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/util/LineFileDocs#open().mjava","pathOld":"/dev/null","sourceNew":"  private synchronized void open() throws IOException {\n    InputStream is = getClass().getResourceAsStream(path);\n    if (is == null) {\n      throw new FileNotFoundException(\"cannot find line docs resource \\\"\" + path + \"\\\"\");\n    }\n    if (path.toString().endsWith(\".gz\")) {\n      is = new GZIPInputStream(is);\n    }\n    final InputStream in = new BufferedInputStream(is, BUFFER_SIZE);\n    reader = new BufferedReader(new InputStreamReader(in, \"UTF-8\"), BUFFER_SIZE);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"dd94a40246ff9fb7291ae657c1c6f1c903b34f80","date":1292177065,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/util/LineFileDocs#open().mjava","pathOld":"lucene/src/test/org/apache/lucene/util/LineFileDocs#open().mjava","sourceNew":"  private synchronized void open() throws IOException {\n    InputStream is = getClass().getResourceAsStream(path);\n    if (is == null) {\n      // if its not in classpath, we load it as absolute filesystem path (e.g. Hudson's home dir)\n      is = new FileInputStream(path);\n    }\n    if (path.endsWith(\".gz\")) {\n      is = new GZIPInputStream(is);\n    }\n    final InputStream in = new BufferedInputStream(is, BUFFER_SIZE);\n    reader = new BufferedReader(new InputStreamReader(in, \"UTF-8\"), BUFFER_SIZE);\n  }\n\n","sourceOld":"  private synchronized void open() throws IOException {\n    InputStream is = getClass().getResourceAsStream(path);\n    if (is == null) {\n      throw new FileNotFoundException(\"cannot find line docs resource \\\"\" + path + \"\\\"\");\n    }\n    if (path.toString().endsWith(\".gz\")) {\n      is = new GZIPInputStream(is);\n    }\n    final InputStream in = new BufferedInputStream(is, BUFFER_SIZE);\n    reader = new BufferedReader(new InputStreamReader(in, \"UTF-8\"), BUFFER_SIZE);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ab5cb6a74aefb78aa0569857970b9151dfe2e787","date":1292842407,"type":0,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/util/LineFileDocs#open().mjava","pathOld":"/dev/null","sourceNew":"  private synchronized void open() throws IOException {\n    InputStream is = getClass().getResourceAsStream(path);\n    if (is == null) {\n      // if its not in classpath, we load it as absolute filesystem path (e.g. Hudson's home dir)\n      is = new FileInputStream(path);\n    }\n    if (path.endsWith(\".gz\")) {\n      is = new GZIPInputStream(is);\n    }\n    final InputStream in = new BufferedInputStream(is, BUFFER_SIZE);\n    reader = new BufferedReader(new InputStreamReader(in, \"UTF-8\"), BUFFER_SIZE);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","date":1292920096,"type":0,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/util/LineFileDocs#open().mjava","pathOld":"/dev/null","sourceNew":"  private synchronized void open() throws IOException {\n    InputStream is = getClass().getResourceAsStream(path);\n    if (is == null) {\n      // if its not in classpath, we load it as absolute filesystem path (e.g. Hudson's home dir)\n      is = new FileInputStream(path);\n    }\n    if (path.endsWith(\".gz\")) {\n      is = new GZIPInputStream(is);\n    }\n    final InputStream in = new BufferedInputStream(is, BUFFER_SIZE);\n    reader = new BufferedReader(new InputStreamReader(in, \"UTF-8\"), BUFFER_SIZE);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f3b2c50e54fbd02d573055c75580702f3d68cda5","date":1294494344,"type":5,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/util/LineFileDocs#open(Random).mjava","pathOld":"lucene/src/test/org/apache/lucene/util/LineFileDocs#open().mjava","sourceNew":"  private synchronized void open(Random random) throws IOException {\n    InputStream is = getClass().getResourceAsStream(path);\n    if (is == null) {\n      // if its not in classpath, we load it as absolute filesystem path (e.g. Hudson's home dir)\n      is = new FileInputStream(path);\n    }\n    File file = new File(path);\n    long size;\n    if (file.exists()) {\n      size = file.length();\n    } else {\n      size = is.available();\n    }\n    if (path.endsWith(\".gz\")) {\n      is = new GZIPInputStream(is);\n      // guestimate:\n      size *= 2.8;\n    }\n\n    final InputStream in = new BufferedInputStream(is, BUFFER_SIZE);\n    reader = new BufferedReader(new InputStreamReader(in, \"UTF-8\"), BUFFER_SIZE);\n\n    // Override sizes for currently \"known\" line files:\n    if (path.equals(\"europarl.lines.txt.gz\")) {\n      size = 15129506L;\n    } else if (path.equals(\"/home/hudson/lucene-data/enwiki.random.lines.txt.gz\")) {\n      size = 3038178822L;\n    }\n\n    // Randomly seek to starting point:\n    if (random != null && size > 3) {\n      final long seekTo = (random.nextLong()&Long.MAX_VALUE) % (size/3);\n      if (LuceneTestCase.VERBOSE) {\n        System.out.println(\"TEST: LineFileDocs: seek to fp=\" + seekTo + \" on open\");\n      }\n      reader.skip(seekTo);\n      reader.readLine();\n    }\n  }\n\n","sourceOld":"  private synchronized void open() throws IOException {\n    InputStream is = getClass().getResourceAsStream(path);\n    if (is == null) {\n      // if its not in classpath, we load it as absolute filesystem path (e.g. Hudson's home dir)\n      is = new FileInputStream(path);\n    }\n    if (path.endsWith(\".gz\")) {\n      is = new GZIPInputStream(is);\n    }\n    final InputStream in = new BufferedInputStream(is, BUFFER_SIZE);\n    reader = new BufferedReader(new InputStreamReader(in, \"UTF-8\"), BUFFER_SIZE);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"868da859b43505d9d2a023bfeae6dd0c795f5295","date":1294948401,"type":4,"author":"Michael Busch","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/src/test/org/apache/lucene/util/LineFileDocs#open().mjava","sourceNew":null,"sourceOld":"  private synchronized void open() throws IOException {\n    InputStream is = getClass().getResourceAsStream(path);\n    if (is == null) {\n      // if its not in classpath, we load it as absolute filesystem path (e.g. Hudson's home dir)\n      is = new FileInputStream(path);\n    }\n    if (path.endsWith(\".gz\")) {\n      is = new GZIPInputStream(is);\n    }\n    final InputStream in = new BufferedInputStream(is, BUFFER_SIZE);\n    reader = new BufferedReader(new InputStreamReader(in, \"UTF-8\"), BUFFER_SIZE);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"29ef99d61cda9641b6250bf9567329a6e65f901d","date":1297244127,"type":4,"author":"Simon Willnauer","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/src/test/org/apache/lucene/util/LineFileDocs#open().mjava","sourceNew":null,"sourceOld":"  private synchronized void open() throws IOException {\n    InputStream is = getClass().getResourceAsStream(path);\n    if (is == null) {\n      // if its not in classpath, we load it as absolute filesystem path (e.g. Hudson's home dir)\n      is = new FileInputStream(path);\n    }\n    if (path.endsWith(\".gz\")) {\n      is = new GZIPInputStream(is);\n    }\n    final InputStream in = new BufferedInputStream(is, BUFFER_SIZE);\n    reader = new BufferedReader(new InputStreamReader(in, \"UTF-8\"), BUFFER_SIZE);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"f3b2c50e54fbd02d573055c75580702f3d68cda5":["dd94a40246ff9fb7291ae657c1c6f1c903b34f80"],"01b5702c02a50fec5cd548d8a459434379a5908f":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"29ef99d61cda9641b6250bf9567329a6e65f901d":["ab5cb6a74aefb78aa0569857970b9151dfe2e787","f3b2c50e54fbd02d573055c75580702f3d68cda5"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"ab5cb6a74aefb78aa0569857970b9151dfe2e787":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","dd94a40246ff9fb7291ae657c1c6f1c903b34f80"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","dd94a40246ff9fb7291ae657c1c6f1c903b34f80"],"dd94a40246ff9fb7291ae657c1c6f1c903b34f80":["01b5702c02a50fec5cd548d8a459434379a5908f"],"868da859b43505d9d2a023bfeae6dd0c795f5295":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","f3b2c50e54fbd02d573055c75580702f3d68cda5"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["f3b2c50e54fbd02d573055c75580702f3d68cda5"]},"commit2Childs":{"f3b2c50e54fbd02d573055c75580702f3d68cda5":["29ef99d61cda9641b6250bf9567329a6e65f901d","868da859b43505d9d2a023bfeae6dd0c795f5295","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"01b5702c02a50fec5cd548d8a459434379a5908f":["dd94a40246ff9fb7291ae657c1c6f1c903b34f80"],"29ef99d61cda9641b6250bf9567329a6e65f901d":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["01b5702c02a50fec5cd548d8a459434379a5908f","ab5cb6a74aefb78aa0569857970b9151dfe2e787","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a"],"ab5cb6a74aefb78aa0569857970b9151dfe2e787":["29ef99d61cda9641b6250bf9567329a6e65f901d"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["868da859b43505d9d2a023bfeae6dd0c795f5295"],"dd94a40246ff9fb7291ae657c1c6f1c903b34f80":["f3b2c50e54fbd02d573055c75580702f3d68cda5","ab5cb6a74aefb78aa0569857970b9151dfe2e787","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a"],"868da859b43505d9d2a023bfeae6dd0c795f5295":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["29ef99d61cda9641b6250bf9567329a6e65f901d","868da859b43505d9d2a023bfeae6dd0c795f5295","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}