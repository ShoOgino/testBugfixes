{"path":"lucene/join/src/java/org/apache/lucene/search/join/ToParentBlockJoinCollector.OneGroup#OneGroup(int,int,float,int,boolean).mjava","commits":[{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/join/src/java/org/apache/lucene/search/join/ToParentBlockJoinCollector.OneGroup#OneGroup(int,int,float,int,boolean).mjava","pathOld":"modules/join/src/java/org/apache/lucene/search/join/ToParentBlockJoinCollector.OneGroup#OneGroup(int,int,float,int,boolean).mjava","sourceNew":"    public OneGroup(int comparatorSlot, int parentDoc, float parentScore, int numJoins, boolean doScores) {\n      super(comparatorSlot, parentDoc, parentScore);\n      docs = new int[numJoins][];\n      for(int joinID=0;joinID<numJoins;joinID++) {\n        docs[joinID] = new int[5];\n      }\n      if (doScores) {\n        scores = new float[numJoins][];\n        for(int joinID=0;joinID<numJoins;joinID++) {\n          scores[joinID] = new float[5];\n        }\n      }\n      counts = new int[numJoins];\n    }\n\n","sourceOld":"    public OneGroup(int comparatorSlot, int parentDoc, float parentScore, int numJoins, boolean doScores) {\n      super(comparatorSlot, parentDoc, parentScore);\n      docs = new int[numJoins][];\n      for(int joinID=0;joinID<numJoins;joinID++) {\n        docs[joinID] = new int[5];\n      }\n      if (doScores) {\n        scores = new float[numJoins][];\n        for(int joinID=0;joinID<numJoins;joinID++) {\n          scores[joinID] = new float[5];\n        }\n      }\n      counts = new int[numJoins];\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ab5548b8f3ccb00ab6a8702dfc85a949d2a05a11","date":1367321736,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/join/src/java/org/apache/lucene/search/join/ToParentBlockJoinCollector.OneGroup#OneGroup(int,int,float,int,boolean).mjava","pathOld":"lucene/join/src/java/org/apache/lucene/search/join/ToParentBlockJoinCollector.OneGroup#OneGroup(int,int,float,int,boolean).mjava","sourceNew":"    public OneGroup(int comparatorSlot, int parentDoc, float parentScore, int numJoins, boolean doScores) {\n      super(comparatorSlot, parentDoc, parentScore);\n      //System.out.println(\"make OneGroup parentDoc=\" + parentDoc);\n      docs = new int[numJoins][];\n      for(int joinID=0;joinID<numJoins;joinID++) {\n        docs[joinID] = new int[5];\n      }\n      if (doScores) {\n        scores = new float[numJoins][];\n        for(int joinID=0;joinID<numJoins;joinID++) {\n          scores[joinID] = new float[5];\n        }\n      }\n      counts = new int[numJoins];\n    }\n\n","sourceOld":"    public OneGroup(int comparatorSlot, int parentDoc, float parentScore, int numJoins, boolean doScores) {\n      super(comparatorSlot, parentDoc, parentScore);\n      docs = new int[numJoins][];\n      for(int joinID=0;joinID<numJoins;joinID++) {\n        docs[joinID] = new int[5];\n      }\n      if (doScores) {\n        scores = new float[numJoins][];\n        for(int joinID=0;joinID<numJoins;joinID++) {\n          scores[joinID] = new float[5];\n        }\n      }\n      counts = new int[numJoins];\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9d9452e13e015fa1187b0b1bed1a1d08b9c96241","date":1485723373,"type":4,"author":"Martijn van Groningen","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/join/src/java/org/apache/lucene/search/join/ToParentBlockJoinCollector.OneGroup#OneGroup(int,int,float,int,boolean).mjava","sourceNew":null,"sourceOld":"    public OneGroup(int comparatorSlot, int parentDoc, float parentScore, int numJoins, boolean doScores) {\n      super(comparatorSlot, parentDoc, parentScore);\n      //System.out.println(\"make OneGroup parentDoc=\" + parentDoc);\n      docs = new int[numJoins][];\n      for(int joinID=0;joinID<numJoins;joinID++) {\n        docs[joinID] = new int[5];\n      }\n      if (doScores) {\n        scores = new float[numJoins][];\n        for(int joinID=0;joinID<numJoins;joinID++) {\n          scores[joinID] = new float[5];\n        }\n      }\n      counts = new int[numJoins];\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7c3523a0ab04c3002eee3896c75ea5f10f388bcc","date":1485968422,"type":4,"author":"Kevin Risden","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/join/src/java/org/apache/lucene/search/join/ToParentBlockJoinCollector.OneGroup#OneGroup(int,int,float,int,boolean).mjava","sourceNew":null,"sourceOld":"    public OneGroup(int comparatorSlot, int parentDoc, float parentScore, int numJoins, boolean doScores) {\n      super(comparatorSlot, parentDoc, parentScore);\n      //System.out.println(\"make OneGroup parentDoc=\" + parentDoc);\n      docs = new int[numJoins][];\n      for(int joinID=0;joinID<numJoins;joinID++) {\n        docs[joinID] = new int[5];\n      }\n      if (doScores) {\n        scores = new float[numJoins][];\n        for(int joinID=0;joinID<numJoins;joinID++) {\n          scores[joinID] = new float[5];\n        }\n      }\n      counts = new int[numJoins];\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"7c3523a0ab04c3002eee3896c75ea5f10f388bcc":["ab5548b8f3ccb00ab6a8702dfc85a949d2a05a11","9d9452e13e015fa1187b0b1bed1a1d08b9c96241"],"ab5548b8f3ccb00ab6a8702dfc85a949d2a05a11":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"9d9452e13e015fa1187b0b1bed1a1d08b9c96241":["ab5548b8f3ccb00ab6a8702dfc85a949d2a05a11"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9d9452e13e015fa1187b0b1bed1a1d08b9c96241"]},"commit2Childs":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["ab5548b8f3ccb00ab6a8702dfc85a949d2a05a11"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"7c3523a0ab04c3002eee3896c75ea5f10f388bcc":[],"ab5548b8f3ccb00ab6a8702dfc85a949d2a05a11":["7c3523a0ab04c3002eee3896c75ea5f10f388bcc","9d9452e13e015fa1187b0b1bed1a1d08b9c96241"],"9d9452e13e015fa1187b0b1bed1a1d08b9c96241":["7c3523a0ab04c3002eee3896c75ea5f10f388bcc","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["7c3523a0ab04c3002eee3896c75ea5f10f388bcc","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}