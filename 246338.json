{"path":"lucene/test-framework/src/java/org/apache/lucene/index/BaseTermVectorsFormatTestCase#testLotsOfFields().mjava","commits":[{"id":"f21ce13f410ee015e1ba14687ab4b8518ac52a11","date":1359713213,"type":0,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/index/BaseTermVectorsFormatTestCase#testLotsOfFields().mjava","pathOld":"/dev/null","sourceNew":"  public void testLotsOfFields() throws IOException {\n    final RandomDocumentFactory docFactory = new RandomDocumentFactory(5000, 10);\n    for (Options options : validOptions()) {\n      final Directory dir = newDirectory();\n      final RandomIndexWriter writer = new RandomIndexWriter(random(), dir);\n      final RandomDocument doc = docFactory.newDocument(_TestUtil.nextInt(random(), 500, 1000), 5, options);\n      writer.addDocument(doc.toDocument());\n      final IndexReader reader = writer.getReader();\n      assertEquals(doc, reader.getTermVectors(0));\n      reader.close();\n      writer.close();\n      dir.close();\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["71da933d30aea361ccc224d6544c451cbf49916d"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"0fa6955ed1b1007ded1349ab72cea4555640432f","date":1359721908,"type":0,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/index/BaseTermVectorsFormatTestCase#testLotsOfFields().mjava","pathOld":"/dev/null","sourceNew":"  public void testLotsOfFields() throws IOException {\n    final RandomDocumentFactory docFactory = new RandomDocumentFactory(5000, 10);\n    for (Options options : validOptions()) {\n      final Directory dir = newDirectory();\n      final RandomIndexWriter writer = new RandomIndexWriter(random(), dir);\n      final RandomDocument doc = docFactory.newDocument(_TestUtil.nextInt(random(), 500, 1000), 5, options);\n      writer.addDocument(doc.toDocument());\n      final IndexReader reader = writer.getReader();\n      assertEquals(doc, reader.getTermVectors(0));\n      reader.close();\n      writer.close();\n      dir.close();\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"86658da8ce1e761bc0f5a05cf8795d1f78c388e2","date":1365796110,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/index/BaseTermVectorsFormatTestCase#testLotsOfFields().mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/index/BaseTermVectorsFormatTestCase#testLotsOfFields().mjava","sourceNew":"  public void testLotsOfFields() throws IOException {\n    final RandomDocumentFactory docFactory = new RandomDocumentFactory(5000, 10);\n    for (Options options : validOptions()) {\n      final Directory dir = newDirectory();\n      final RandomIndexWriter writer = new RandomIndexWriter(random(), dir);\n      final RandomDocument doc = docFactory.newDocument(atLeast(100), 5, options);\n      writer.addDocument(doc.toDocument());\n      final IndexReader reader = writer.getReader();\n      assertEquals(doc, reader.getTermVectors(0));\n      reader.close();\n      writer.close();\n      dir.close();\n    }\n  }\n\n","sourceOld":"  public void testLotsOfFields() throws IOException {\n    final RandomDocumentFactory docFactory = new RandomDocumentFactory(5000, 10);\n    for (Options options : validOptions()) {\n      final Directory dir = newDirectory();\n      final RandomIndexWriter writer = new RandomIndexWriter(random(), dir);\n      final RandomDocument doc = docFactory.newDocument(_TestUtil.nextInt(random(), 500, 1000), 5, options);\n      writer.addDocument(doc.toDocument());\n      final IndexReader reader = writer.getReader();\n      assertEquals(doc, reader.getTermVectors(0));\n      reader.close();\n      writer.close();\n      dir.close();\n    }\n  }\n\n","bugFix":null,"bugIntro":["71da933d30aea361ccc224d6544c451cbf49916d"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"ae14298f4eec6d5faee6a149f88ba57d14a6f21a","date":1396971290,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/index/BaseTermVectorsFormatTestCase#testLotsOfFields().mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/index/BaseTermVectorsFormatTestCase#testLotsOfFields().mjava","sourceNew":"  public void testLotsOfFields() throws IOException {\n    final RandomDocumentFactory docFactory = new RandomDocumentFactory(5000, 10);\n    for (Options options : validOptions()) {\n      final Directory dir = newDirectory();\n      final RandomIndexWriter writer = new RandomIndexWriter(random(), dir);\n      final RandomDocument doc = docFactory.newDocument(atLeast(100), 5, options);\n      writer.addDocument(doc.toDocument());\n      final IndexReader reader = writer.getReader();\n      assertEquals(doc, reader.getTermVectors(0));\n      reader.close();\n      writer.shutdown();\n      dir.close();\n    }\n  }\n\n","sourceOld":"  public void testLotsOfFields() throws IOException {\n    final RandomDocumentFactory docFactory = new RandomDocumentFactory(5000, 10);\n    for (Options options : validOptions()) {\n      final Directory dir = newDirectory();\n      final RandomIndexWriter writer = new RandomIndexWriter(random(), dir);\n      final RandomDocument doc = docFactory.newDocument(atLeast(100), 5, options);\n      writer.addDocument(doc.toDocument());\n      final IndexReader reader = writer.getReader();\n      assertEquals(doc, reader.getTermVectors(0));\n      reader.close();\n      writer.close();\n      dir.close();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"d0ef034a4f10871667ae75181537775ddcf8ade4","date":1407610475,"type":3,"author":"Ryan Ernst","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/index/BaseTermVectorsFormatTestCase#testLotsOfFields().mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/index/BaseTermVectorsFormatTestCase#testLotsOfFields().mjava","sourceNew":"  public void testLotsOfFields() throws IOException {\n    final RandomDocumentFactory docFactory = new RandomDocumentFactory(5000, 10);\n    for (Options options : validOptions()) {\n      final Directory dir = newDirectory();\n      final RandomIndexWriter writer = new RandomIndexWriter(random(), dir);\n      final RandomDocument doc = docFactory.newDocument(atLeast(100), 5, options);\n      writer.addDocument(doc.toDocument());\n      final IndexReader reader = writer.getReader();\n      assertEquals(doc, reader.getTermVectors(0));\n      reader.close();\n      writer.close();\n      dir.close();\n    }\n  }\n\n","sourceOld":"  public void testLotsOfFields() throws IOException {\n    final RandomDocumentFactory docFactory = new RandomDocumentFactory(5000, 10);\n    for (Options options : validOptions()) {\n      final Directory dir = newDirectory();\n      final RandomIndexWriter writer = new RandomIndexWriter(random(), dir);\n      final RandomDocument doc = docFactory.newDocument(atLeast(100), 5, options);\n      writer.addDocument(doc.toDocument());\n      final IndexReader reader = writer.getReader();\n      assertEquals(doc, reader.getTermVectors(0));\n      reader.close();\n      writer.shutdown();\n      dir.close();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"57c6c784f777a2cc8fa014507ea129526822714d","date":1579733373,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/index/BaseTermVectorsFormatTestCase#testLotsOfFields().mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/index/BaseTermVectorsFormatTestCase#testLotsOfFields().mjava","sourceNew":"  @Slow\n  public void testLotsOfFields() throws IOException {\n    final RandomDocumentFactory docFactory = new RandomDocumentFactory(5000, 10);\n    for (Options options : validOptions()) {\n      final Directory dir = newDirectory();\n      final RandomIndexWriter writer = new RandomIndexWriter(random(), dir);\n      final RandomDocument doc = docFactory.newDocument(atLeast(100), 5, options);\n      writer.addDocument(doc.toDocument());\n      final IndexReader reader = writer.getReader();\n      assertEquals(doc, reader.getTermVectors(0));\n      reader.close();\n      writer.close();\n      dir.close();\n    }\n  }\n\n","sourceOld":"  public void testLotsOfFields() throws IOException {\n    final RandomDocumentFactory docFactory = new RandomDocumentFactory(5000, 10);\n    for (Options options : validOptions()) {\n      final Directory dir = newDirectory();\n      final RandomIndexWriter writer = new RandomIndexWriter(random(), dir);\n      final RandomDocument doc = docFactory.newDocument(atLeast(100), 5, options);\n      writer.addDocument(doc.toDocument());\n      final IndexReader reader = writer.getReader();\n      assertEquals(doc, reader.getTermVectors(0));\n      reader.close();\n      writer.close();\n      dir.close();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"71da933d30aea361ccc224d6544c451cbf49916d","date":1579874339,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/index/BaseTermVectorsFormatTestCase#testLotsOfFields().mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/index/BaseTermVectorsFormatTestCase#testLotsOfFields().mjava","sourceNew":"  @Slow\n  public void testLotsOfFields() throws IOException {\n    int fieldCount = atLeast(100);\n    final RandomDocumentFactory docFactory = new RandomDocumentFactory(fieldCount, 10);\n    for (Options options : validOptions()) {\n      final Directory dir = newDirectory();\n      final RandomIndexWriter writer = new RandomIndexWriter(random(), dir);\n      final RandomDocument doc = docFactory.newDocument(TestUtil.nextInt(random(), 20, fieldCount), 5, options);\n      writer.addDocument(doc.toDocument());\n      final IndexReader reader = writer.getReader();\n      assertEquals(doc, reader.getTermVectors(0));\n      reader.close();\n      writer.close();\n      dir.close();\n    }\n  }\n\n","sourceOld":"  @Slow\n  public void testLotsOfFields() throws IOException {\n    final RandomDocumentFactory docFactory = new RandomDocumentFactory(5000, 10);\n    for (Options options : validOptions()) {\n      final Directory dir = newDirectory();\n      final RandomIndexWriter writer = new RandomIndexWriter(random(), dir);\n      final RandomDocument doc = docFactory.newDocument(atLeast(100), 5, options);\n      writer.addDocument(doc.toDocument());\n      final IndexReader reader = writer.getReader();\n      assertEquals(doc, reader.getTermVectors(0));\n      reader.close();\n      writer.close();\n      dir.close();\n    }\n  }\n\n","bugFix":["86658da8ce1e761bc0f5a05cf8795d1f78c388e2","f21ce13f410ee015e1ba14687ab4b8518ac52a11"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"57c6c784f777a2cc8fa014507ea129526822714d":["d0ef034a4f10871667ae75181537775ddcf8ade4"],"0fa6955ed1b1007ded1349ab72cea4555640432f":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","f21ce13f410ee015e1ba14687ab4b8518ac52a11"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"d0ef034a4f10871667ae75181537775ddcf8ade4":["ae14298f4eec6d5faee6a149f88ba57d14a6f21a"],"ae14298f4eec6d5faee6a149f88ba57d14a6f21a":["86658da8ce1e761bc0f5a05cf8795d1f78c388e2"],"f21ce13f410ee015e1ba14687ab4b8518ac52a11":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["71da933d30aea361ccc224d6544c451cbf49916d"],"71da933d30aea361ccc224d6544c451cbf49916d":["57c6c784f777a2cc8fa014507ea129526822714d"],"86658da8ce1e761bc0f5a05cf8795d1f78c388e2":["f21ce13f410ee015e1ba14687ab4b8518ac52a11"]},"commit2Childs":{"57c6c784f777a2cc8fa014507ea129526822714d":["71da933d30aea361ccc224d6544c451cbf49916d"],"0fa6955ed1b1007ded1349ab72cea4555640432f":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["0fa6955ed1b1007ded1349ab72cea4555640432f","f21ce13f410ee015e1ba14687ab4b8518ac52a11"],"d0ef034a4f10871667ae75181537775ddcf8ade4":["57c6c784f777a2cc8fa014507ea129526822714d"],"f21ce13f410ee015e1ba14687ab4b8518ac52a11":["0fa6955ed1b1007ded1349ab72cea4555640432f","86658da8ce1e761bc0f5a05cf8795d1f78c388e2"],"ae14298f4eec6d5faee6a149f88ba57d14a6f21a":["d0ef034a4f10871667ae75181537775ddcf8ade4"],"86658da8ce1e761bc0f5a05cf8795d1f78c388e2":["ae14298f4eec6d5faee6a149f88ba57d14a6f21a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"71da933d30aea361ccc224d6544c451cbf49916d":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["0fa6955ed1b1007ded1349ab72cea4555640432f","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}