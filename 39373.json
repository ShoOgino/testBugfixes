{"path":"solr/core/src/test/org/apache/solr/cloud/AliasIntegrationTest#sleepToAllowZkPropagation().mjava","commits":[{"id":"26da72979d4068fce4939aeb5c8e16773874f38c","date":1510957208,"type":0,"author":"David Smiley","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/AliasIntegrationTest#sleepToAllowZkPropagation().mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Sleep a bit to allow Zookeeper state propagation.\n   *\n   * Solr's view of the cluster is eventually consistent. *Eventually* all nodes and CloudSolrClients will be aware of\n   * alias changes, but not immediately. If a newly created alias is queried, things should work right away since Solr\n   * will attempt to see if it needs to get the latest aliases when it can't otherwise resolve the name.  However\n   * modifications to an alias will take some time.\n   */\n  private void sleepToAllowZkPropagation() {\n    try {\n      Thread.sleep(100);\n    } catch (InterruptedException e) {\n      Thread.currentThread().interrupt();\n      throw new RuntimeException(e);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fc21266829f9cffb210032f5808ce3a630780ab3","date":1560248034,"type":4,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/core/src/test/org/apache/solr/cloud/AliasIntegrationTest#sleepToAllowZkPropagation().mjava","sourceNew":null,"sourceOld":"  /**\n   * Sleep a bit to allow Zookeeper state propagation.\n   *\n   * Solr's view of the cluster is eventually consistent. *Eventually* all nodes and CloudSolrClients will be aware of\n   * alias changes, but not immediately. If a newly created alias is queried, things should work right away since Solr\n   * will attempt to see if it needs to get the latest aliases when it can't otherwise resolve the name.  However\n   * modifications to an alias will take some time.\n   */\n  private void sleepToAllowZkPropagation() {\n    try {\n      Thread.sleep(100);\n    } catch (InterruptedException e) {\n      Thread.currentThread().interrupt();\n      throw new RuntimeException(e);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"26da72979d4068fce4939aeb5c8e16773874f38c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"fc21266829f9cffb210032f5808ce3a630780ab3":["26da72979d4068fce4939aeb5c8e16773874f38c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["fc21266829f9cffb210032f5808ce3a630780ab3"]},"commit2Childs":{"26da72979d4068fce4939aeb5c8e16773874f38c":["fc21266829f9cffb210032f5808ce3a630780ab3"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["26da72979d4068fce4939aeb5c8e16773874f38c"],"fc21266829f9cffb210032f5808ce3a630780ab3":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}