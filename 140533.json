{"path":"solr/src/java/org/apache/solr/search/function/BoostedQuery.BoostedWeight#explain(AtomicReaderContext,int).mjava","commits":[{"id":"a10b98ef1ef4bf9e38d2e07a9e425a916afa8705","date":1294747166,"type":1,"author":"Simon Willnauer","isMerge":false,"pathNew":"solr/src/java/org/apache/solr/search/function/BoostedQuery.BoostedWeight#explain(AtomicReaderContext,int).mjava","pathOld":"solr/src/java/org/apache/solr/search/function/BoostedQuery.BoostedWeight#explain(ReaderContext,int).mjava","sourceNew":"    @Override\n    public Explanation explain(AtomicReaderContext readerContext, int doc) throws IOException {\n      Explanation subQueryExpl = qWeight.explain(readerContext,doc);\n      if (!subQueryExpl.isMatch()) {\n        return subQueryExpl;\n      }\n      DocValues vals = boostVal.getValues(fcontext, readerContext.reader);\n      float sc = subQueryExpl.getValue() * vals.floatVal(doc);\n      Explanation res = new ComplexExplanation(\n        true, sc, BoostedQuery.this.toString() + \", product of:\");\n      res.addDetail(subQueryExpl);\n      res.addDetail(vals.explain(doc));\n      return res;\n    }\n\n","sourceOld":"    @Override\n    public Explanation explain(ReaderContext readerContext, int doc) throws IOException {\n      Explanation subQueryExpl = qWeight.explain(readerContext,doc);\n      if (!subQueryExpl.isMatch()) {\n        return subQueryExpl;\n      }\n      DocValues vals = boostVal.getValues(fcontext, readerContext.reader);\n      float sc = subQueryExpl.getValue() * vals.floatVal(doc);\n      Explanation res = new ComplexExplanation(\n        true, sc, BoostedQuery.this.toString() + \", product of:\");\n      res.addDetail(subQueryExpl);\n      res.addDetail(vals.explain(doc));\n      return res;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c220849f876de24a79f756f65b3eb045db59f63f","date":1294902803,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"solr/src/java/org/apache/solr/search/function/BoostedQuery.BoostedWeight#explain(AtomicReaderContext,int).mjava","pathOld":"solr/src/java/org/apache/solr/search/function/BoostedQuery.BoostedWeight#explain(AtomicReaderContext,int).mjava","sourceNew":"    @Override\n    public Explanation explain(AtomicReaderContext readerContext, int doc) throws IOException {\n      Explanation subQueryExpl = qWeight.explain(readerContext,doc);\n      if (!subQueryExpl.isMatch()) {\n        return subQueryExpl;\n      }\n      DocValues vals = boostVal.getValues(fcontext, readerContext);\n      float sc = subQueryExpl.getValue() * vals.floatVal(doc);\n      Explanation res = new ComplexExplanation(\n        true, sc, BoostedQuery.this.toString() + \", product of:\");\n      res.addDetail(subQueryExpl);\n      res.addDetail(vals.explain(doc));\n      return res;\n    }\n\n","sourceOld":"    @Override\n    public Explanation explain(AtomicReaderContext readerContext, int doc) throws IOException {\n      Explanation subQueryExpl = qWeight.explain(readerContext,doc);\n      if (!subQueryExpl.isMatch()) {\n        return subQueryExpl;\n      }\n      DocValues vals = boostVal.getValues(fcontext, readerContext.reader);\n      float sc = subQueryExpl.getValue() * vals.floatVal(doc);\n      Explanation res = new ComplexExplanation(\n        true, sc, BoostedQuery.this.toString() + \", product of:\");\n      res.addDetail(subQueryExpl);\n      res.addDetail(vals.explain(doc));\n      return res;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"868da859b43505d9d2a023bfeae6dd0c795f5295","date":1294948401,"type":0,"author":"Michael Busch","isMerge":true,"pathNew":"solr/src/java/org/apache/solr/search/function/BoostedQuery.BoostedWeight#explain(AtomicReaderContext,int).mjava","pathOld":"/dev/null","sourceNew":"    @Override\n    public Explanation explain(AtomicReaderContext readerContext, int doc) throws IOException {\n      Explanation subQueryExpl = qWeight.explain(readerContext,doc);\n      if (!subQueryExpl.isMatch()) {\n        return subQueryExpl;\n      }\n      DocValues vals = boostVal.getValues(fcontext, readerContext);\n      float sc = subQueryExpl.getValue() * vals.floatVal(doc);\n      Explanation res = new ComplexExplanation(\n        true, sc, BoostedQuery.this.toString() + \", product of:\");\n      res.addDetail(subQueryExpl);\n      res.addDetail(vals.explain(doc));\n      return res;\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"29ef99d61cda9641b6250bf9567329a6e65f901d","date":1297244127,"type":0,"author":"Simon Willnauer","isMerge":true,"pathNew":"solr/src/java/org/apache/solr/search/function/BoostedQuery.BoostedWeight#explain(AtomicReaderContext,int).mjava","pathOld":"/dev/null","sourceNew":"    @Override\n    public Explanation explain(AtomicReaderContext readerContext, int doc) throws IOException {\n      Explanation subQueryExpl = qWeight.explain(readerContext,doc);\n      if (!subQueryExpl.isMatch()) {\n        return subQueryExpl;\n      }\n      DocValues vals = boostVal.getValues(fcontext, readerContext);\n      float sc = subQueryExpl.getValue() * vals.floatVal(doc);\n      Explanation res = new ComplexExplanation(\n        true, sc, BoostedQuery.this.toString() + \", product of:\");\n      res.addDetail(subQueryExpl);\n      res.addDetail(vals.explain(doc));\n      return res;\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c8fda790e002fff32e201cbd0f7bed4c2b333a64","date":1309401082,"type":5,"author":"Christopher John Male","isMerge":false,"pathNew":"modules/queries/src/java/org/apache/lucene/queries/function/BoostedQuery.BoostedWeight#explain(AtomicReaderContext,int).mjava","pathOld":"solr/src/java/org/apache/solr/search/function/BoostedQuery.BoostedWeight#explain(AtomicReaderContext,int).mjava","sourceNew":"    @Override\n    public Explanation explain(AtomicReaderContext readerContext, int doc) throws IOException {\n      Explanation subQueryExpl = qWeight.explain(readerContext,doc);\n      if (!subQueryExpl.isMatch()) {\n        return subQueryExpl;\n      }\n      DocValues vals = boostVal.getValues(fcontext, readerContext);\n      float sc = subQueryExpl.getValue() * vals.floatVal(doc);\n      Explanation res = new ComplexExplanation(\n        true, sc, BoostedQuery.this.toString() + \", product of:\");\n      res.addDetail(subQueryExpl);\n      res.addDetail(vals.explain(doc));\n      return res;\n    }\n\n","sourceOld":"    @Override\n    public Explanation explain(AtomicReaderContext readerContext, int doc) throws IOException {\n      Explanation subQueryExpl = qWeight.explain(readerContext,doc);\n      if (!subQueryExpl.isMatch()) {\n        return subQueryExpl;\n      }\n      DocValues vals = boostVal.getValues(fcontext, readerContext);\n      float sc = subQueryExpl.getValue() * vals.floatVal(doc);\n      Explanation res = new ComplexExplanation(\n        true, sc, BoostedQuery.this.toString() + \", product of:\");\n      res.addDetail(subQueryExpl);\n      res.addDetail(vals.explain(doc));\n      return res;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"817d8435e9135b756f08ce6710ab0baac51bdf88","date":1309986993,"type":5,"author":"Steven Rowe","isMerge":true,"pathNew":"modules/queries/src/java/org/apache/lucene/queries/function/BoostedQuery.BoostedWeight#explain(AtomicReaderContext,int).mjava","pathOld":"solr/src/java/org/apache/solr/search/function/BoostedQuery.BoostedWeight#explain(AtomicReaderContext,int).mjava","sourceNew":"    @Override\n    public Explanation explain(AtomicReaderContext readerContext, int doc) throws IOException {\n      Explanation subQueryExpl = qWeight.explain(readerContext,doc);\n      if (!subQueryExpl.isMatch()) {\n        return subQueryExpl;\n      }\n      DocValues vals = boostVal.getValues(fcontext, readerContext);\n      float sc = subQueryExpl.getValue() * vals.floatVal(doc);\n      Explanation res = new ComplexExplanation(\n        true, sc, BoostedQuery.this.toString() + \", product of:\");\n      res.addDetail(subQueryExpl);\n      res.addDetail(vals.explain(doc));\n      return res;\n    }\n\n","sourceOld":"    @Override\n    public Explanation explain(AtomicReaderContext readerContext, int doc) throws IOException {\n      Explanation subQueryExpl = qWeight.explain(readerContext,doc);\n      if (!subQueryExpl.isMatch()) {\n        return subQueryExpl;\n      }\n      DocValues vals = boostVal.getValues(fcontext, readerContext);\n      float sc = subQueryExpl.getValue() * vals.floatVal(doc);\n      Explanation res = new ComplexExplanation(\n        true, sc, BoostedQuery.this.toString() + \", product of:\");\n      res.addDetail(subQueryExpl);\n      res.addDetail(vals.explain(doc));\n      return res;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d083e83f225b11e5fdd900e83d26ddb385b6955c","date":1310029438,"type":5,"author":"Simon Willnauer","isMerge":true,"pathNew":"modules/queries/src/java/org/apache/lucene/queries/function/BoostedQuery.BoostedWeight#explain(AtomicReaderContext,int).mjava","pathOld":"solr/src/java/org/apache/solr/search/function/BoostedQuery.BoostedWeight#explain(AtomicReaderContext,int).mjava","sourceNew":"    @Override\n    public Explanation explain(AtomicReaderContext readerContext, int doc) throws IOException {\n      Explanation subQueryExpl = qWeight.explain(readerContext,doc);\n      if (!subQueryExpl.isMatch()) {\n        return subQueryExpl;\n      }\n      DocValues vals = boostVal.getValues(fcontext, readerContext);\n      float sc = subQueryExpl.getValue() * vals.floatVal(doc);\n      Explanation res = new ComplexExplanation(\n        true, sc, BoostedQuery.this.toString() + \", product of:\");\n      res.addDetail(subQueryExpl);\n      res.addDetail(vals.explain(doc));\n      return res;\n    }\n\n","sourceOld":"    @Override\n    public Explanation explain(AtomicReaderContext readerContext, int doc) throws IOException {\n      Explanation subQueryExpl = qWeight.explain(readerContext,doc);\n      if (!subQueryExpl.isMatch()) {\n        return subQueryExpl;\n      }\n      DocValues vals = boostVal.getValues(fcontext, readerContext);\n      float sc = subQueryExpl.getValue() * vals.floatVal(doc);\n      Explanation res = new ComplexExplanation(\n        true, sc, BoostedQuery.this.toString() + \", product of:\");\n      res.addDetail(subQueryExpl);\n      res.addDetail(vals.explain(doc));\n      return res;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"c220849f876de24a79f756f65b3eb045db59f63f":["a10b98ef1ef4bf9e38d2e07a9e425a916afa8705"],"c8fda790e002fff32e201cbd0f7bed4c2b333a64":["c220849f876de24a79f756f65b3eb045db59f63f"],"29ef99d61cda9641b6250bf9567329a6e65f901d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","c220849f876de24a79f756f65b3eb045db59f63f"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a10b98ef1ef4bf9e38d2e07a9e425a916afa8705":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"d083e83f225b11e5fdd900e83d26ddb385b6955c":["c220849f876de24a79f756f65b3eb045db59f63f","c8fda790e002fff32e201cbd0f7bed4c2b333a64"],"868da859b43505d9d2a023bfeae6dd0c795f5295":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","c220849f876de24a79f756f65b3eb045db59f63f"],"817d8435e9135b756f08ce6710ab0baac51bdf88":["c220849f876de24a79f756f65b3eb045db59f63f","c8fda790e002fff32e201cbd0f7bed4c2b333a64"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["c8fda790e002fff32e201cbd0f7bed4c2b333a64"]},"commit2Childs":{"c220849f876de24a79f756f65b3eb045db59f63f":["c8fda790e002fff32e201cbd0f7bed4c2b333a64","29ef99d61cda9641b6250bf9567329a6e65f901d","d083e83f225b11e5fdd900e83d26ddb385b6955c","868da859b43505d9d2a023bfeae6dd0c795f5295","817d8435e9135b756f08ce6710ab0baac51bdf88"],"c8fda790e002fff32e201cbd0f7bed4c2b333a64":["d083e83f225b11e5fdd900e83d26ddb385b6955c","817d8435e9135b756f08ce6710ab0baac51bdf88","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"29ef99d61cda9641b6250bf9567329a6e65f901d":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["29ef99d61cda9641b6250bf9567329a6e65f901d","a10b98ef1ef4bf9e38d2e07a9e425a916afa8705","868da859b43505d9d2a023bfeae6dd0c795f5295"],"a10b98ef1ef4bf9e38d2e07a9e425a916afa8705":["c220849f876de24a79f756f65b3eb045db59f63f"],"d083e83f225b11e5fdd900e83d26ddb385b6955c":[],"868da859b43505d9d2a023bfeae6dd0c795f5295":[],"817d8435e9135b756f08ce6710ab0baac51bdf88":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["29ef99d61cda9641b6250bf9567329a6e65f901d","d083e83f225b11e5fdd900e83d26ddb385b6955c","868da859b43505d9d2a023bfeae6dd0c795f5295","817d8435e9135b756f08ce6710ab0baac51bdf88","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}