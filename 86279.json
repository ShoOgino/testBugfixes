{"path":"solr/core/src/java/org/apache/solr/internal/csv/CSVPrinter#printAndEscape(char[],int,int).mjava","commits":[{"id":"80931fa1f3b04650bde7b20e61b02063a7093ced","date":1333130683,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/internal/csv/CSVPrinter#printAndEscape(char[],int,int).mjava","pathOld":"/dev/null","sourceNew":"  void printAndEscape(char[] value, int offset, int len) throws IOException {\n    int start = offset;\n    int pos = offset;\n    int end = offset + len;\n\n    printSep();\n\n    char delim = this.strategy.getDelimiter();\n    char escape = this.strategy.getEscape();\n\n    while (pos < end) {\n      char c = value[pos];\n      if (c == '\\r' || c=='\\n' || c==delim || c==escape) {\n        // write out segment up until this char\n        int l = pos-start;\n        if (l>0) {\n          out.write(value, start, l);\n        }\n        if (c=='\\n') c='n';\n        else if (c=='\\r') c='r';\n\n        out.write(escape);\n        out.write(c);\n\n        start = pos+1; // start on the current char after this one\n      }\n\n      pos++;\n    }\n\n    // write last segment\n    int l = pos-start;\n    if (l>0) {\n      out.write(value, start, l);      \n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"80931fa1f3b04650bde7b20e61b02063a7093ced":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["80931fa1f3b04650bde7b20e61b02063a7093ced"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["80931fa1f3b04650bde7b20e61b02063a7093ced"],"80931fa1f3b04650bde7b20e61b02063a7093ced":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}