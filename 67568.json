{"path":"lucene/sandbox/src/java/org/apache/lucene/geo/SimpleWKTShapeParser#nextCloserOrComma(StreamTokenizer).mjava","commits":[{"id":"9f1c851539bd589075f77aebfa7a070b73c7d49b","date":1540391267,"type":0,"author":"Nicholas Knize","isMerge":false,"pathNew":"lucene/sandbox/src/java/org/apache/lucene/geo/SimpleWKTShapeParser#nextCloserOrComma(StreamTokenizer).mjava","pathOld":"/dev/null","sourceNew":"  /** expects either a closing LPAREN or comma as the next token */\n  private static String nextCloserOrComma(StreamTokenizer stream) throws IOException, ParseException {\n    String token = nextWord(stream);\n    if (token.equals(COMMA) || token.equals(RPAREN)) {\n      return token;\n    }\n    throw new ParseException(\"expected \" + COMMA + \" or \" + RPAREN\n        + \" but found: \" + tokenString(stream), stream.lineno());\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"09c1e6d465800c73af60624bf9d4459a19f7940c","date":1579293280,"type":5,"author":"Nicholas Knize","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/geo/SimpleWKTShapeParser#nextCloserOrComma(StreamTokenizer).mjava","pathOld":"lucene/sandbox/src/java/org/apache/lucene/geo/SimpleWKTShapeParser#nextCloserOrComma(StreamTokenizer).mjava","sourceNew":"  /** expects either a closing LPAREN or comma as the next token */\n  private static String nextCloserOrComma(StreamTokenizer stream) throws IOException, ParseException {\n    String token = nextWord(stream);\n    if (token.equals(COMMA) || token.equals(RPAREN)) {\n      return token;\n    }\n    throw new ParseException(\"expected \" + COMMA + \" or \" + RPAREN\n        + \" but found: \" + tokenString(stream), stream.lineno());\n  }\n\n","sourceOld":"  /** expects either a closing LPAREN or comma as the next token */\n  private static String nextCloserOrComma(StreamTokenizer stream) throws IOException, ParseException {\n    String token = nextWord(stream);\n    if (token.equals(COMMA) || token.equals(RPAREN)) {\n      return token;\n    }\n    throw new ParseException(\"expected \" + COMMA + \" or \" + RPAREN\n        + \" but found: \" + tokenString(stream), stream.lineno());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"9f1c851539bd589075f77aebfa7a070b73c7d49b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"09c1e6d465800c73af60624bf9d4459a19f7940c":["9f1c851539bd589075f77aebfa7a070b73c7d49b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["09c1e6d465800c73af60624bf9d4459a19f7940c"]},"commit2Childs":{"9f1c851539bd589075f77aebfa7a070b73c7d49b":["09c1e6d465800c73af60624bf9d4459a19f7940c"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9f1c851539bd589075f77aebfa7a070b73c7d49b"],"09c1e6d465800c73af60624bf9d4459a19f7940c":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}