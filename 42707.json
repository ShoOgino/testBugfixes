{"path":"lucene/highlighter/src/test/org/apache/lucene/search/uhighlight/TestUnifiedHighlighter#testUnknownQueryWithWeightMatches().mjava","commits":[{"id":"c2a55d7ebf9e9ced797f40d5154d602029a9791d","date":1561151156,"type":0,"author":"David Smiley","isMerge":false,"pathNew":"lucene/highlighter/src/test/org/apache/lucene/search/uhighlight/TestUnifiedHighlighter#testUnknownQueryWithWeightMatches().mjava","pathOld":"/dev/null","sourceNew":"  public void testUnknownQueryWithWeightMatches() throws IOException {\n    RandomIndexWriter iw = new RandomIndexWriter(random(), dir, indexAnalyzer);\n\n    Field body = new Field(\"body\", \"\", fieldType);\n    Document doc = new Document();\n    doc.add(body);\n\n    body.setStringValue(\"Test a one sentence document.\");\n    iw.addDocument(doc);\n\n    IndexReader ir = iw.getReader();\n    iw.close();\n\n    IndexSearcher searcher = newSearcher(ir);\n    UnifiedHighlighter highlighter = randomUnifiedHighlighter(searcher, indexAnalyzer,\n        EnumSet.of(HighlightFlag.WEIGHT_MATCHES), null);\n    Query query = new BooleanQuery.Builder()\n        // simple term query body:one\n        .add(new TermQuery(new Term(body.name(), \"one\")), BooleanClause.Occur.MUST)\n        // a custom query, a leaf, that which matches body:sentence\n        //    Note this isn't even an MTQ.  What matters is that Weight.matches works.\n        .add(new Query() {\n          @Override\n          public String toString(String field) {\n            return \"bogus\";\n          }\n\n          @Override\n          public Query rewrite(IndexReader reader) {\n            return this;\n          }\n\n          // we don't visit terms, and we don't expose an automata.  Thus this appears as some unknown leaf.\n          @Override\n          public void visit(QueryVisitor visitor) {\n            if (visitor.acceptField(body.name())) {\n              visitor.visitLeaf(this);\n            }\n          }\n\n          @Override\n          public boolean equals(Object obj) {\n            return this == obj;\n          }\n\n          @Override\n          public int hashCode() {\n            return System.identityHashCode(this);\n          }\n\n          @Override\n          public Weight createWeight(IndexSearcher searcher, ScoreMode scoreMode, float boost) throws IOException {\n            //TODO maybe should loop through index terms to show we can see other terms\n            return new TermQuery(new Term(body.name(), \"sentence\")).createWeight(searcher, scoreMode, boost);\n          }\n        }, BooleanClause.Occur.MUST)\n        .build();\n    TopDocs topDocs = searcher.search(query, 10, Sort.INDEXORDER);\n    assertEquals(1, topDocs.totalHits.value);\n    String[] snippets = highlighter.highlight(\"body\", query, topDocs);\n    assertEquals(1, snippets.length);\n    assertEquals(\"Test a <b>one</b> <b>sentence</b> document.\", snippets[0]);\n\n    ir.close();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"c2a55d7ebf9e9ced797f40d5154d602029a9791d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["c2a55d7ebf9e9ced797f40d5154d602029a9791d"]},"commit2Childs":{"c2a55d7ebf9e9ced797f40d5154d602029a9791d":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c2a55d7ebf9e9ced797f40d5154d602029a9791d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}