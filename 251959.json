{"path":"lucene/core/src/java/org/apache/lucene/index/DocValuesFieldUpdates.AbstractIterator#nextDoc().mjava","commits":[{"id":"62389a101dca1b996a7d6ca10d23bfb747924e06","date":1525274565,"type":1,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/DocValuesFieldUpdates.AbstractIterator#nextDoc().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/NumericDocValuesFieldUpdates.Iterator#nextDoc().mjava","sourceNew":"    @Override\n    public final int nextDoc() {\n      if (idx >= size) {\n        return doc = DocIdSetIterator.NO_MORE_DOCS;\n      }\n      doc = (int) docs.get(idx);\n      ++idx;\n      while (idx < size && docs.get(idx) == doc) {\n        // scan forward to last update to this doc\n        ++idx;\n      }\n      set(idx-1);\n      return doc;\n    }\n\n","sourceOld":"    @Override\n    public int nextDoc() {\n      if (idx >= size) {\n        return doc = DocIdSetIterator.NO_MORE_DOCS;\n      }\n      doc = (int) docs.get(idx);\n      ++idx;\n      while (idx < size && docs.get(idx) == doc) {\n        // scan forward to last update to this doc\n        ++idx;\n      }\n      // idx points to the \"next\" element\n      value = values.get(idx - 1);\n      return doc;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"33adea025f43af3243278587a46b8d9fd2e8ccf9","date":1525885077,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/DocValuesFieldUpdates.AbstractIterator#nextDoc().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/DocValuesFieldUpdates.AbstractIterator#nextDoc().mjava","sourceNew":"    @Override\n    public final int nextDoc() {\n      if (idx >= size) {\n        return doc = DocIdSetIterator.NO_MORE_DOCS;\n      }\n      long longDoc = docs.get(idx);\n      ++idx;\n      while (idx < size && docs.get(idx) == longDoc) {\n        // scan forward to last update to this doc\n        ++idx;\n      }\n      hasValue = (longDoc & HAS_VALUE_MASK) >  0;\n      if (hasValue) {\n        set(idx - 1);\n      }\n      doc = (int)(longDoc >> SHIFT);\n      return doc;\n    }\n\n","sourceOld":"    @Override\n    public final int nextDoc() {\n      if (idx >= size) {\n        return doc = DocIdSetIterator.NO_MORE_DOCS;\n      }\n      doc = (int) docs.get(idx);\n      ++idx;\n      while (idx < size && docs.get(idx) == doc) {\n        // scan forward to last update to this doc\n        ++idx;\n      }\n      set(idx-1);\n      return doc;\n    }\n\n","bugFix":null,"bugIntro":["af08e9e692a7d133c6a60b1164563d53e13a1631"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"af08e9e692a7d133c6a60b1164563d53e13a1631","date":1544167492,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/DocValuesFieldUpdates.AbstractIterator#nextDoc().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/DocValuesFieldUpdates.AbstractIterator#nextDoc().mjava","sourceNew":"    @Override\n    public final int nextDoc() {\n      if (idx >= size) {\n        return doc = DocIdSetIterator.NO_MORE_DOCS;\n      }\n      long longDoc = docs.get(idx);\n      ++idx;\n      for (; idx < size; idx++) {\n        // scan forward to last update to this doc\n        final long nextLongDoc = docs.get(idx);\n        if ((longDoc >>> 1) != (nextLongDoc >>> 1)) {\n          break;\n        }\n        longDoc = nextLongDoc;\n      }\n      hasValue = (longDoc & HAS_VALUE_MASK) >  0;\n      if (hasValue) {\n        set(idx - 1);\n      }\n      doc = (int)(longDoc >> SHIFT);\n      return doc;\n    }\n\n","sourceOld":"    @Override\n    public final int nextDoc() {\n      if (idx >= size) {\n        return doc = DocIdSetIterator.NO_MORE_DOCS;\n      }\n      long longDoc = docs.get(idx);\n      ++idx;\n      while (idx < size && docs.get(idx) == longDoc) {\n        // scan forward to last update to this doc\n        ++idx;\n      }\n      hasValue = (longDoc & HAS_VALUE_MASK) >  0;\n      if (hasValue) {\n        set(idx - 1);\n      }\n      doc = (int)(longDoc >> SHIFT);\n      return doc;\n    }\n\n","bugFix":["33adea025f43af3243278587a46b8d9fd2e8ccf9","06805da26538ed636bd89b10c2699cc3834032ae"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"af08e9e692a7d133c6a60b1164563d53e13a1631":["33adea025f43af3243278587a46b8d9fd2e8ccf9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"62389a101dca1b996a7d6ca10d23bfb747924e06":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"33adea025f43af3243278587a46b8d9fd2e8ccf9":["62389a101dca1b996a7d6ca10d23bfb747924e06"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["af08e9e692a7d133c6a60b1164563d53e13a1631"]},"commit2Childs":{"af08e9e692a7d133c6a60b1164563d53e13a1631":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["62389a101dca1b996a7d6ca10d23bfb747924e06"],"62389a101dca1b996a7d6ca10d23bfb747924e06":["33adea025f43af3243278587a46b8d9fd2e8ccf9"],"33adea025f43af3243278587a46b8d9fd2e8ccf9":["af08e9e692a7d133c6a60b1164563d53e13a1631"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}