{"path":"lucene/join/src/java/org/apache/lucene/search/join/ToChildBlockJoinQuery#equals(Object).mjava","commits":[{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/join/src/java/org/apache/lucene/search/join/ToChildBlockJoinQuery#equals(Object).mjava","pathOld":"modules/join/src/java/org/apache/lucene/search/join/ToChildBlockJoinQuery#equals(Object).mjava","sourceNew":"  @Override\n  public boolean equals(Object _other) {\n    if (_other instanceof ToChildBlockJoinQuery) {\n      final ToChildBlockJoinQuery other = (ToChildBlockJoinQuery) _other;\n      return origParentQuery.equals(other.origParentQuery) &&\n        parentsFilter.equals(other.parentsFilter) &&\n        doScores == other.doScores;\n    } else {\n      return false;\n    }\n  }\n\n","sourceOld":"  @Override\n  public boolean equals(Object _other) {\n    if (_other instanceof ToChildBlockJoinQuery) {\n      final ToChildBlockJoinQuery other = (ToChildBlockJoinQuery) _other;\n      return origParentQuery.equals(other.origParentQuery) &&\n        parentsFilter.equals(other.parentsFilter) &&\n        doScores == other.doScores;\n    } else {\n      return false;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a22ad352a73aa6ab982b6377e1714950edaf62f0","date":1366051636,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/join/src/java/org/apache/lucene/search/join/ToChildBlockJoinQuery#equals(Object).mjava","pathOld":"lucene/join/src/java/org/apache/lucene/search/join/ToChildBlockJoinQuery#equals(Object).mjava","sourceNew":"  @Override\n  public boolean equals(Object _other) {\n    if (_other instanceof ToChildBlockJoinQuery) {\n      final ToChildBlockJoinQuery other = (ToChildBlockJoinQuery) _other;\n      return origParentQuery.equals(other.origParentQuery) &&\n        parentsFilter.equals(other.parentsFilter) &&\n        doScores == other.doScores &&\n        super.equals(other);\n    } else {\n      return false;\n    }\n  }\n\n","sourceOld":"  @Override\n  public boolean equals(Object _other) {\n    if (_other instanceof ToChildBlockJoinQuery) {\n      final ToChildBlockJoinQuery other = (ToChildBlockJoinQuery) _other;\n      return origParentQuery.equals(other.origParentQuery) &&\n        parentsFilter.equals(other.parentsFilter) &&\n        doScores == other.doScores;\n    } else {\n      return false;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fb17639909a369c1e64866842e5c213440acc17e","date":1423238093,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/join/src/java/org/apache/lucene/search/join/ToChildBlockJoinQuery#equals(Object).mjava","pathOld":"lucene/join/src/java/org/apache/lucene/search/join/ToChildBlockJoinQuery#equals(Object).mjava","sourceNew":"  @Override\n  public boolean equals(Object _other) {\n    if (_other instanceof ToChildBlockJoinQuery) {\n      final ToChildBlockJoinQuery other = (ToChildBlockJoinQuery) _other;\n      return origParentQuery.equals(other.origParentQuery) &&\n        parentsFilter.equals(other.parentsFilter) &&\n        super.equals(other);\n    } else {\n      return false;\n    }\n  }\n\n","sourceOld":"  @Override\n  public boolean equals(Object _other) {\n    if (_other instanceof ToChildBlockJoinQuery) {\n      final ToChildBlockJoinQuery other = (ToChildBlockJoinQuery) _other;\n      return origParentQuery.equals(other.origParentQuery) &&\n        parentsFilter.equals(other.parentsFilter) &&\n        doScores == other.doScores &&\n        super.equals(other);\n    } else {\n      return false;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0e7bc21595222ae4f75509300fbb7726691f387f","date":1464078795,"type":3,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/join/src/java/org/apache/lucene/search/join/ToChildBlockJoinQuery#equals(Object).mjava","pathOld":"lucene/join/src/java/org/apache/lucene/search/join/ToChildBlockJoinQuery#equals(Object).mjava","sourceNew":"  @Override\n  public boolean equals(Object other) {\n    return sameClassAs(other) &&\n           equalsTo(getClass().cast(other));\n  }\n\n","sourceOld":"  @Override\n  public boolean equals(Object _other) {\n    if (_other instanceof ToChildBlockJoinQuery) {\n      final ToChildBlockJoinQuery other = (ToChildBlockJoinQuery) _other;\n      return origParentQuery.equals(other.origParentQuery) &&\n        parentsFilter.equals(other.parentsFilter) &&\n        super.equals(other);\n    } else {\n      return false;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"lucene/join/src/java/org/apache/lucene/search/join/ToChildBlockJoinQuery#equals(Object).mjava","pathOld":"lucene/join/src/java/org/apache/lucene/search/join/ToChildBlockJoinQuery#equals(Object).mjava","sourceNew":"  @Override\n  public boolean equals(Object other) {\n    return sameClassAs(other) &&\n           equalsTo(getClass().cast(other));\n  }\n\n","sourceOld":"  @Override\n  public boolean equals(Object _other) {\n    if (_other instanceof ToChildBlockJoinQuery) {\n      final ToChildBlockJoinQuery other = (ToChildBlockJoinQuery) _other;\n      return origParentQuery.equals(other.origParentQuery) &&\n        parentsFilter.equals(other.parentsFilter) &&\n        super.equals(other);\n    } else {\n      return false;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"fb17639909a369c1e64866842e5c213440acc17e":["a22ad352a73aa6ab982b6377e1714950edaf62f0"],"a22ad352a73aa6ab982b6377e1714950edaf62f0":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"0e7bc21595222ae4f75509300fbb7726691f387f":["fb17639909a369c1e64866842e5c213440acc17e"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["fb17639909a369c1e64866842e5c213440acc17e","0e7bc21595222ae4f75509300fbb7726691f387f"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["0e7bc21595222ae4f75509300fbb7726691f387f"]},"commit2Childs":{"fb17639909a369c1e64866842e5c213440acc17e":["0e7bc21595222ae4f75509300fbb7726691f387f","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"a22ad352a73aa6ab982b6377e1714950edaf62f0":["fb17639909a369c1e64866842e5c213440acc17e"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["a22ad352a73aa6ab982b6377e1714950edaf62f0"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"0e7bc21595222ae4f75509300fbb7726691f387f":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}