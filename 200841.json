{"path":"solr/core/src/test/org/apache/hadoop/http/HttpServer2#start().mjava","commits":[{"id":"99b97f030e743d8dd4d7685202f71718d7e5af22","date":1548957620,"type":0,"author":"markrmiller","isMerge":false,"pathNew":"solr/core/src/test/org/apache/hadoop/http/HttpServer2#start().mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Start the server. Does not wait for the server to start.\n   */\n  public void start() throws IOException {\n    try {\n      try {\n        openListeners();\n        webServer.start();\n      } catch (IOException ex) {\n        LOG.info(\"HttpServer.start() threw a non Bind IOException\", ex);\n        throw ex;\n      } catch (MultiException ex) {\n        LOG.info(\"HttpServer.start() threw a MultiException\", ex);\n        throw ex;\n      }\n      // Make sure there is no handler failures.\n      Handler[] hs = webServer.getHandlers();\n      for (Handler handler : hs) {\n        if (handler.isFailed()) {\n          throw new IOException(\n              \"Problem in starting http server. Server handlers failed\");\n        }\n      }\n      // Make sure there are no errors initializing the context.\n      Throwable unavailableException = webAppContext.getUnavailableException();\n      if (unavailableException != null) {\n        // Have to stop the webserver, or else its non-daemon threads\n        // will hang forever.\n        webServer.stop();\n        throw new IOException(\"Unable to initialize WebAppContext\",\n            unavailableException);\n      }\n    } catch (IOException e) {\n      throw e;\n    } catch (InterruptedException e) {\n      throw (IOException) new InterruptedIOException(\n          \"Interrupted while starting HTTP server\").initCause(e);\n    } catch (Exception e) {\n      throw new IOException(\"Problem starting http server\", e);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"34b74c124d68d8e306d6ef09624f3cd053b8a2fd","date":1548981962,"type":4,"author":"Kevin Risden","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/core/src/test/org/apache/hadoop/http/HttpServer2#start().mjava","sourceNew":null,"sourceOld":"  /**\n   * Start the server. Does not wait for the server to start.\n   */\n  public void start() throws IOException {\n    try {\n      try {\n        openListeners();\n        webServer.start();\n      } catch (IOException ex) {\n        LOG.info(\"HttpServer.start() threw a non Bind IOException\", ex);\n        throw ex;\n      } catch (MultiException ex) {\n        LOG.info(\"HttpServer.start() threw a MultiException\", ex);\n        throw ex;\n      }\n      // Make sure there is no handler failures.\n      Handler[] hs = webServer.getHandlers();\n      for (Handler handler : hs) {\n        if (handler.isFailed()) {\n          throw new IOException(\n              \"Problem in starting http server. Server handlers failed\");\n        }\n      }\n      // Make sure there are no errors initializing the context.\n      Throwable unavailableException = webAppContext.getUnavailableException();\n      if (unavailableException != null) {\n        // Have to stop the webserver, or else its non-daemon threads\n        // will hang forever.\n        webServer.stop();\n        throw new IOException(\"Unable to initialize WebAppContext\",\n            unavailableException);\n      }\n    } catch (IOException e) {\n      throw e;\n    } catch (InterruptedException e) {\n      throw (IOException) new InterruptedIOException(\n          \"Interrupted while starting HTTP server\").initCause(e);\n    } catch (Exception e) {\n      throw new IOException(\"Problem starting http server\", e);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"44ca189138a5b6e1989d12ab992fab60e235ddc7","date":1549051496,"type":0,"author":"markrmiller","isMerge":false,"pathNew":"solr/core/src/test/org/apache/hadoop/http/HttpServer2#start().mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Start the server. Does not wait for the server to start.\n   */\n  public void start() throws IOException {\n    try {\n      try {\n        openListeners();\n        webServer.start();\n      } catch (IOException ex) {\n        LOG.info(\"HttpServer.start() threw a non Bind IOException\", ex);\n        throw ex;\n      } catch (MultiException ex) {\n        LOG.info(\"HttpServer.start() threw a MultiException\", ex);\n        throw ex;\n      }\n      // Make sure there is no handler failures.\n      Handler[] hs = webServer.getHandlers();\n      for (Handler handler : hs) {\n        if (handler.isFailed()) {\n          throw new IOException(\n              \"Problem in starting http server. Server handlers failed\");\n        }\n      }\n      // Make sure there are no errors initializing the context.\n      Throwable unavailableException = webAppContext.getUnavailableException();\n      if (unavailableException != null) {\n        // Have to stop the webserver, or else its non-daemon threads\n        // will hang forever.\n        webServer.stop();\n        throw new IOException(\"Unable to initialize WebAppContext\",\n            unavailableException);\n      }\n    } catch (IOException e) {\n      throw e;\n    } catch (InterruptedException e) {\n      throw (IOException) new InterruptedIOException(\n          \"Interrupted while starting HTTP server\").initCause(e);\n    } catch (Exception e) {\n      throw new IOException(\"Problem starting http server\", e);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"34b74c124d68d8e306d6ef09624f3cd053b8a2fd":["99b97f030e743d8dd4d7685202f71718d7e5af22"],"99b97f030e743d8dd4d7685202f71718d7e5af22":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"44ca189138a5b6e1989d12ab992fab60e235ddc7":["34b74c124d68d8e306d6ef09624f3cd053b8a2fd"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["44ca189138a5b6e1989d12ab992fab60e235ddc7"]},"commit2Childs":{"34b74c124d68d8e306d6ef09624f3cd053b8a2fd":["44ca189138a5b6e1989d12ab992fab60e235ddc7"],"99b97f030e743d8dd4d7685202f71718d7e5af22":["34b74c124d68d8e306d6ef09624f3cd053b8a2fd"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["99b97f030e743d8dd4d7685202f71718d7e5af22"],"44ca189138a5b6e1989d12ab992fab60e235ddc7":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}