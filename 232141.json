{"path":"solr/core/src/test/org/apache/solr/response/transform/TestChildDocTransformerHierarchy#testNoChildren().mjava","commits":[{"id":"44e1477dd67ee1fbc72871f23fb51369bb42cadd","date":1535551329,"type":0,"author":"David Smiley","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/response/transform/TestChildDocTransformerHierarchy#testNoChildren().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testNoChildren() throws Exception {\n    final String addDocWoChildren =\n        \"{\\n\" +\n          \"\\\"add\\\": {\\n\" +\n            \"\\\"doc\\\": {\\n\" +\n                \"\\\"id\\\": \" + id() + \", \\n\" +\n                \"\\\"type_s\\\": \\\"cake\\\", \\n\" +\n            \"}\\n\" +\n          \"}\\n\" +\n        \"}\";\n    updateJ(addDocWoChildren, params(\"update.chain\", \"nested\"));\n    assertU(commit());\n\n    assertJQ(req(\"q\", \"type_s:cake\",\n        \"sort\", \"id asc\",\n        \"fl\", \"*,[child childFilter='lonely/lonelyGrandChild/test2_s:secondTest']\",\n        \"fq\", fqToExcludeNonTestedDocs),\n        \"/response/docs/[0]/type_s==cake\");\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fb5fe1ea1e20c7450be523c41001a625ea3c15f5","date":1547007782,"type":3,"author":"David Smiley","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/response/transform/TestChildDocTransformerHierarchy#testNoChildren().mjava","pathOld":"solr/core/src/test/org/apache/solr/response/transform/TestChildDocTransformerHierarchy#testNoChildren().mjava","sourceNew":"  @Test\n  public void testNoChildren() throws Exception {\n    final String addDocWoChildren =\n        \"{\\n\" +\n          \"\\\"add\\\": {\\n\" +\n            \"\\\"doc\\\": {\\n\" +\n                \"\\\"id\\\": \" + id() + \", \\n\" +\n                \"\\\"type_s\\\": \\\"cake\\\", \\n\" +\n            \"}\\n\" +\n          \"}\\n\" +\n        \"}\";\n    updateJ(addDocWoChildren, null);\n    assertU(commit());\n\n    assertJQ(req(\"q\", \"type_s:cake\",\n        \"sort\", \"id asc\",\n        \"fl\", \"*,[child childFilter='lonely/lonelyGrandChild/test2_s:secondTest']\",\n        \"fq\", fqToExcludeNonTestedDocs),\n        \"/response/docs/[0]/type_s==cake\");\n  }\n\n","sourceOld":"  @Test\n  public void testNoChildren() throws Exception {\n    final String addDocWoChildren =\n        \"{\\n\" +\n          \"\\\"add\\\": {\\n\" +\n            \"\\\"doc\\\": {\\n\" +\n                \"\\\"id\\\": \" + id() + \", \\n\" +\n                \"\\\"type_s\\\": \\\"cake\\\", \\n\" +\n            \"}\\n\" +\n          \"}\\n\" +\n        \"}\";\n    updateJ(addDocWoChildren, params(\"update.chain\", \"nested\"));\n    assertU(commit());\n\n    assertJQ(req(\"q\", \"type_s:cake\",\n        \"sort\", \"id asc\",\n        \"fl\", \"*,[child childFilter='lonely/lonelyGrandChild/test2_s:secondTest']\",\n        \"fq\", fqToExcludeNonTestedDocs),\n        \"/response/docs/[0]/type_s==cake\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"fb5fe1ea1e20c7450be523c41001a625ea3c15f5":["44e1477dd67ee1fbc72871f23fb51369bb42cadd"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"44e1477dd67ee1fbc72871f23fb51369bb42cadd":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["fb5fe1ea1e20c7450be523c41001a625ea3c15f5"]},"commit2Childs":{"fb5fe1ea1e20c7450be523c41001a625ea3c15f5":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["44e1477dd67ee1fbc72871f23fb51369bb42cadd"],"44e1477dd67ee1fbc72871f23fb51369bb42cadd":["fb5fe1ea1e20c7450be523c41001a625ea3c15f5"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}