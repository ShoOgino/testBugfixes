{"path":"contrib/analyzers/common/src/java/org/apache/lucene/analysis/miscellaneous/StemmerOverrideFilter#incrementToken().mjava","commits":[{"id":"c2877c077c0dc229ee9871dc196b2a62442df599","date":1265411146,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"contrib/analyzers/common/src/java/org/apache/lucene/analysis/miscellaneous/StemmerOverrideFilter#incrementToken().mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public boolean incrementToken() throws IOException {\n    if (input.incrementToken()) {\n      if (!keywordAtt.isKeyword()) { // don't muck with already-keyworded terms\n        String stem = dictionary.get(termAtt.termBuffer(), 0, termAtt.termLength());\n        if (stem != null) {\n          termAtt.setTermBuffer(stem);\n          keywordAtt.setKeyword(true);\n        }\n      }\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/contrib/analyzers/common/src/java/org/apache/lucene/analysis/miscellaneous/StemmerOverrideFilter#incrementToken().mjava","pathOld":"contrib/analyzers/common/src/java/org/apache/lucene/analysis/miscellaneous/StemmerOverrideFilter#incrementToken().mjava","sourceNew":"  @Override\n  public boolean incrementToken() throws IOException {\n    if (input.incrementToken()) {\n      if (!keywordAtt.isKeyword()) { // don't muck with already-keyworded terms\n        String stem = dictionary.get(termAtt.termBuffer(), 0, termAtt.termLength());\n        if (stem != null) {\n          termAtt.setTermBuffer(stem);\n          keywordAtt.setKeyword(true);\n        }\n      }\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n","sourceOld":"  @Override\n  public boolean incrementToken() throws IOException {\n    if (input.incrementToken()) {\n      if (!keywordAtt.isKeyword()) { // don't muck with already-keyworded terms\n        String stem = dictionary.get(termAtt.termBuffer(), 0, termAtt.termLength());\n        if (stem != null) {\n          termAtt.setTermBuffer(stem);\n          keywordAtt.setKeyword(true);\n        }\n      }\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"c2877c077c0dc229ee9871dc196b2a62442df599":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["c2877c077c0dc229ee9871dc196b2a62442df599"]},"commit2Childs":{"c2877c077c0dc229ee9871dc196b2a62442df599":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c2877c077c0dc229ee9871dc196b2a62442df599"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}