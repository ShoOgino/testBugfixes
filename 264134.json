{"path":"lucene/sandbox/src/test/org/apache/lucene/document/TestLatLonShape#testTriangleCrossingPolygonVertices().mjava","commits":[{"id":"fc005279ab64cbf458ccef2ada610bc1a04b6139","date":1554992856,"type":0,"author":"Nicholas Knize","isMerge":false,"pathNew":"lucene/sandbox/src/test/org/apache/lucene/document/TestLatLonShape#testTriangleCrossingPolygonVertices().mjava","pathOld":"/dev/null","sourceNew":"  public void testTriangleCrossingPolygonVertices() {\n    Polygon p = new Polygon(new double[] {0, 0, -5, -10, -5, 0}, new double[] {-1, 1, 5, 0, -5, -1});\n    Polygon2D polygon2D = Polygon2D.create(p);\n    PointValues.Relation rel = polygon2D.relateTriangle(\n        quantizeLon(-5), quantizeLat(0),\n        quantizeLon(10), quantizeLat(0),\n        quantizeLon(-5), quantizeLat(-15));\n    assertEquals(PointValues.Relation.CELL_CROSSES_QUERY, rel);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b5e250f1fb163f190f5ec72b6eeb8271162d8ae1","date":1571074565,"type":3,"author":"Ignacio Vera","isMerge":false,"pathNew":"lucene/sandbox/src/test/org/apache/lucene/document/TestLatLonShape#testTriangleCrossingPolygonVertices().mjava","pathOld":"lucene/sandbox/src/test/org/apache/lucene/document/TestLatLonShape#testTriangleCrossingPolygonVertices().mjava","sourceNew":"  public void testTriangleCrossingPolygonVertices() {\n    Polygon p = new Polygon(new double[] {0, 0, -5, -10, -5, 0}, new double[] {-1, 1, 5, 0, -5, -1});\n    Component2D polygon2D = Polygon2D.create(p);\n    PointValues.Relation rel = polygon2D.relateTriangle(\n        quantizeLon(-5), quantizeLat(0),\n        quantizeLon(10), quantizeLat(0),\n        quantizeLon(-5), quantizeLat(-15));\n    assertEquals(PointValues.Relation.CELL_CROSSES_QUERY, rel);\n  }\n\n","sourceOld":"  public void testTriangleCrossingPolygonVertices() {\n    Polygon p = new Polygon(new double[] {0, 0, -5, -10, -5, 0}, new double[] {-1, 1, 5, 0, -5, -1});\n    Polygon2D polygon2D = Polygon2D.create(p);\n    PointValues.Relation rel = polygon2D.relateTriangle(\n        quantizeLon(-5), quantizeLat(0),\n        quantizeLon(10), quantizeLat(0),\n        quantizeLon(-5), quantizeLat(-15));\n    assertEquals(PointValues.Relation.CELL_CROSSES_QUERY, rel);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b0b597c65628ca9e73913a07e81691f8229bae35","date":1571224353,"type":3,"author":"jimczi","isMerge":true,"pathNew":"lucene/sandbox/src/test/org/apache/lucene/document/TestLatLonShape#testTriangleCrossingPolygonVertices().mjava","pathOld":"lucene/sandbox/src/test/org/apache/lucene/document/TestLatLonShape#testTriangleCrossingPolygonVertices().mjava","sourceNew":"  public void testTriangleCrossingPolygonVertices() {\n    Polygon p = new Polygon(new double[] {0, 0, -5, -10, -5, 0}, new double[] {-1, 1, 5, 0, -5, -1});\n    Component2D polygon2D = Polygon2D.create(p);\n    PointValues.Relation rel = polygon2D.relateTriangle(\n        quantizeLon(-5), quantizeLat(0),\n        quantizeLon(10), quantizeLat(0),\n        quantizeLon(-5), quantizeLat(-15));\n    assertEquals(PointValues.Relation.CELL_CROSSES_QUERY, rel);\n  }\n\n","sourceOld":"  public void testTriangleCrossingPolygonVertices() {\n    Polygon p = new Polygon(new double[] {0, 0, -5, -10, -5, 0}, new double[] {-1, 1, 5, 0, -5, -1});\n    Polygon2D polygon2D = Polygon2D.create(p);\n    PointValues.Relation rel = polygon2D.relateTriangle(\n        quantizeLon(-5), quantizeLat(0),\n        quantizeLon(10), quantizeLat(0),\n        quantizeLon(-5), quantizeLat(-15));\n    assertEquals(PointValues.Relation.CELL_CROSSES_QUERY, rel);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"09c1e6d465800c73af60624bf9d4459a19f7940c","date":1579293280,"type":5,"author":"Nicholas Knize","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/document/TestLatLonShape#testTriangleCrossingPolygonVertices().mjava","pathOld":"lucene/sandbox/src/test/org/apache/lucene/document/TestLatLonShape#testTriangleCrossingPolygonVertices().mjava","sourceNew":"  public void testTriangleCrossingPolygonVertices() {\n    Polygon p = new Polygon(new double[] {0, 0, -5, -10, -5, 0}, new double[] {-1, 1, 5, 0, -5, -1});\n    Component2D polygon2D = Polygon2D.create(p);\n    PointValues.Relation rel = polygon2D.relateTriangle(\n        quantizeLon(-5), quantizeLat(0),\n        quantizeLon(10), quantizeLat(0),\n        quantizeLon(-5), quantizeLat(-15));\n    assertEquals(PointValues.Relation.CELL_CROSSES_QUERY, rel);\n  }\n\n","sourceOld":"  public void testTriangleCrossingPolygonVertices() {\n    Polygon p = new Polygon(new double[] {0, 0, -5, -10, -5, 0}, new double[] {-1, 1, 5, 0, -5, -1});\n    Component2D polygon2D = Polygon2D.create(p);\n    PointValues.Relation rel = polygon2D.relateTriangle(\n        quantizeLon(-5), quantizeLat(0),\n        quantizeLon(10), quantizeLat(0),\n        quantizeLon(-5), quantizeLat(-15));\n    assertEquals(PointValues.Relation.CELL_CROSSES_QUERY, rel);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b5e250f1fb163f190f5ec72b6eeb8271162d8ae1":["fc005279ab64cbf458ccef2ada610bc1a04b6139"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"09c1e6d465800c73af60624bf9d4459a19f7940c":["b5e250f1fb163f190f5ec72b6eeb8271162d8ae1"],"fc005279ab64cbf458ccef2ada610bc1a04b6139":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["09c1e6d465800c73af60624bf9d4459a19f7940c"],"b0b597c65628ca9e73913a07e81691f8229bae35":["fc005279ab64cbf458ccef2ada610bc1a04b6139","b5e250f1fb163f190f5ec72b6eeb8271162d8ae1"]},"commit2Childs":{"b5e250f1fb163f190f5ec72b6eeb8271162d8ae1":["09c1e6d465800c73af60624bf9d4459a19f7940c","b0b597c65628ca9e73913a07e81691f8229bae35"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["fc005279ab64cbf458ccef2ada610bc1a04b6139"],"09c1e6d465800c73af60624bf9d4459a19f7940c":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"fc005279ab64cbf458ccef2ada610bc1a04b6139":["b5e250f1fb163f190f5ec72b6eeb8271162d8ae1","b0b597c65628ca9e73913a07e81691f8229bae35"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"b0b597c65628ca9e73913a07e81691f8229bae35":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817","b0b597c65628ca9e73913a07e81691f8229bae35"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}