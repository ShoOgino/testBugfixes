{"path":"solr/core/src/java/org/apache/solr/handler/admin/CollectionsHandler#handleRemoveReplica(SolrQueryRequest,SolrQueryResponse).mjava","commits":[{"id":"40dce2b6d4360eb09fa16fb6c40a18b25507ed73","date":1383035822,"type":0,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/admin/CollectionsHandler#handleRemoveReplica(SolrQueryRequest,SolrQueryResponse).mjava","pathOld":"/dev/null","sourceNew":"  private void handleRemoveReplica(SolrQueryRequest req, SolrQueryResponse rsp) throws KeeperException, InterruptedException {\n    log.info(\"Remove replica: \" + req.getParamString());\n    req.getParams().required().check(COLLECTION_PROP, SHARD_ID_PROP, \"replica\");\n    Map<String, Object> map = makeMap(QUEUE_OPERATION, DELETEREPLICA);\n    copyIfNotNull(req.getParams(),map,COLLECTION_PROP,SHARD_ID_PROP,\"replica\");\n    ZkNodeProps m = new ZkNodeProps(map);\n    handleResponse(DELETEREPLICA, m, rsp);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"058f5a3debcfa0ea477da3eabb4cbe2ec0fac211","date":1394784078,"type":3,"author":"Anshum Gupta","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/admin/CollectionsHandler#handleRemoveReplica(SolrQueryRequest,SolrQueryResponse).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/admin/CollectionsHandler#handleRemoveReplica(SolrQueryRequest,SolrQueryResponse).mjava","sourceNew":"  private void handleRemoveReplica(SolrQueryRequest req, SolrQueryResponse rsp) throws KeeperException, InterruptedException {\n    log.info(\"Remove replica: \" + req.getParamString());\n    req.getParams().required().check(COLLECTION_PROP, SHARD_ID_PROP, \"replica\");\n    Map<String, Object> map = makeMap(QUEUE_OPERATION, DELETEREPLICA);\n    copyIfNotNull(req.getParams(),map,COLLECTION_PROP,SHARD_ID_PROP,\"replica\", ASYNC);\n    ZkNodeProps m = new ZkNodeProps(map);\n    handleResponse(DELETEREPLICA, m, rsp);\n  }\n\n","sourceOld":"  private void handleRemoveReplica(SolrQueryRequest req, SolrQueryResponse rsp) throws KeeperException, InterruptedException {\n    log.info(\"Remove replica: \" + req.getParamString());\n    req.getParams().required().check(COLLECTION_PROP, SHARD_ID_PROP, \"replica\");\n    Map<String, Object> map = makeMap(QUEUE_OPERATION, DELETEREPLICA);\n    copyIfNotNull(req.getParams(),map,COLLECTION_PROP,SHARD_ID_PROP,\"replica\");\n    ZkNodeProps m = new ZkNodeProps(map);\n    handleResponse(DELETEREPLICA, m, rsp);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0509309ff81e19f3388e28ecf9e5d51e21b15a64","date":1410750485,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/admin/CollectionsHandler#handleRemoveReplica(SolrQueryRequest,SolrQueryResponse).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/admin/CollectionsHandler#handleRemoveReplica(SolrQueryRequest,SolrQueryResponse).mjava","sourceNew":"  private void handleRemoveReplica(SolrQueryRequest req, SolrQueryResponse rsp) throws KeeperException, InterruptedException {\n    log.info(\"Remove replica: \" + req.getParamString());\n    req.getParams().required().check(COLLECTION_PROP, SHARD_ID_PROP, \"replica\");\n    Map<String, Object> map = makeMap(QUEUE_OPERATION, DELETEREPLICA);\n    copyIfNotNull(req.getParams(),map,COLLECTION_PROP,SHARD_ID_PROP,\"replica\", ASYNC, ONLY_IF_DOWN);\n    ZkNodeProps m = new ZkNodeProps(map);\n    handleResponse(DELETEREPLICA, m, rsp);\n  }\n\n","sourceOld":"  private void handleRemoveReplica(SolrQueryRequest req, SolrQueryResponse rsp) throws KeeperException, InterruptedException {\n    log.info(\"Remove replica: \" + req.getParamString());\n    req.getParams().required().check(COLLECTION_PROP, SHARD_ID_PROP, \"replica\");\n    Map<String, Object> map = makeMap(QUEUE_OPERATION, DELETEREPLICA);\n    copyIfNotNull(req.getParams(),map,COLLECTION_PROP,SHARD_ID_PROP,\"replica\", ASYNC);\n    ZkNodeProps m = new ZkNodeProps(map);\n    handleResponse(DELETEREPLICA, m, rsp);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"30c688f7052130cef7bd419c85e3c5be214f7b9e","date":1411018984,"type":3,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/admin/CollectionsHandler#handleRemoveReplica(SolrQueryRequest,SolrQueryResponse).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/admin/CollectionsHandler#handleRemoveReplica(SolrQueryRequest,SolrQueryResponse).mjava","sourceNew":"  private void handleRemoveReplica(SolrQueryRequest req, SolrQueryResponse rsp) throws KeeperException, InterruptedException {\n    log.info(\"Remove replica: \" + req.getParamString());\n    req.getParams().required().check(COLLECTION_PROP, SHARD_ID_PROP, \"replica\");\n    Map<String, Object> map = makeMap(QUEUE_OPERATION, DELETEREPLICA.toLower());\n    copyIfNotNull(req.getParams(),map,COLLECTION_PROP,SHARD_ID_PROP,\"replica\", ASYNC, ONLY_IF_DOWN);\n    ZkNodeProps m = new ZkNodeProps(map);\n    handleResponse(DELETEREPLICA.toLower(), m, rsp);\n  }\n\n","sourceOld":"  private void handleRemoveReplica(SolrQueryRequest req, SolrQueryResponse rsp) throws KeeperException, InterruptedException {\n    log.info(\"Remove replica: \" + req.getParamString());\n    req.getParams().required().check(COLLECTION_PROP, SHARD_ID_PROP, \"replica\");\n    Map<String, Object> map = makeMap(QUEUE_OPERATION, DELETEREPLICA);\n    copyIfNotNull(req.getParams(),map,COLLECTION_PROP,SHARD_ID_PROP,\"replica\", ASYNC, ONLY_IF_DOWN);\n    ZkNodeProps m = new ZkNodeProps(map);\n    handleResponse(DELETEREPLICA, m, rsp);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9ebd3a557326ef3eab85b73a8cff781f7d801248","date":1431620752,"type":4,"author":"Noble Paul","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/core/src/java/org/apache/solr/handler/admin/CollectionsHandler#handleRemoveReplica(SolrQueryRequest,SolrQueryResponse).mjava","sourceNew":null,"sourceOld":"  private void handleRemoveReplica(SolrQueryRequest req, SolrQueryResponse rsp) throws KeeperException, InterruptedException {\n    log.info(\"Remove replica: \" + req.getParamString());\n    req.getParams().required().check(COLLECTION_PROP, SHARD_ID_PROP, \"replica\");\n    Map<String, Object> map = makeMap(QUEUE_OPERATION, DELETEREPLICA.toLower());\n    copyIfNotNull(req.getParams(),map,COLLECTION_PROP,SHARD_ID_PROP,\"replica\", ASYNC, ONLY_IF_DOWN);\n    ZkNodeProps m = new ZkNodeProps(map);\n    handleResponse(DELETEREPLICA.toLower(), m, rsp);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"0509309ff81e19f3388e28ecf9e5d51e21b15a64":["058f5a3debcfa0ea477da3eabb4cbe2ec0fac211"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"058f5a3debcfa0ea477da3eabb4cbe2ec0fac211":["40dce2b6d4360eb09fa16fb6c40a18b25507ed73"],"9ebd3a557326ef3eab85b73a8cff781f7d801248":["30c688f7052130cef7bd419c85e3c5be214f7b9e"],"40dce2b6d4360eb09fa16fb6c40a18b25507ed73":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"30c688f7052130cef7bd419c85e3c5be214f7b9e":["0509309ff81e19f3388e28ecf9e5d51e21b15a64"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9ebd3a557326ef3eab85b73a8cff781f7d801248"]},"commit2Childs":{"0509309ff81e19f3388e28ecf9e5d51e21b15a64":["30c688f7052130cef7bd419c85e3c5be214f7b9e"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["40dce2b6d4360eb09fa16fb6c40a18b25507ed73"],"058f5a3debcfa0ea477da3eabb4cbe2ec0fac211":["0509309ff81e19f3388e28ecf9e5d51e21b15a64"],"9ebd3a557326ef3eab85b73a8cff781f7d801248":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"40dce2b6d4360eb09fa16fb6c40a18b25507ed73":["058f5a3debcfa0ea477da3eabb4cbe2ec0fac211"],"30c688f7052130cef7bd419c85e3c5be214f7b9e":["9ebd3a557326ef3eab85b73a8cff781f7d801248"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}