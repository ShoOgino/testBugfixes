{"path":"solr/core/src/java/org/apache/solr/update/PeerSync#PeerSync(SolrCore,List[String],int,boolean,boolean,boolean).mjava","commits":[{"id":"26cb11ce089e71fb909641e7030b53c7d9e3fff3","date":1390348343,"type":0,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/update/PeerSync#PeerSync(SolrCore,List[String],int,boolean,boolean,boolean).mjava","pathOld":"/dev/null","sourceNew":"  public PeerSync(SolrCore core, List<String> replicas, int nUpdates, boolean cantReachIsSuccess, boolean getNoVersionsIsSuccess, boolean onlyIfActive) {\n    this.replicas = replicas;\n    this.nUpdates = nUpdates;\n    this.maxUpdates = nUpdates;\n    this.cantReachIsSuccess = cantReachIsSuccess;\n    this.getNoVersionsIsSuccess = getNoVersionsIsSuccess;\n    this.client = core.getCoreDescriptor().getCoreContainer().getUpdateShardHandler().getHttpClient();\n    this.onlyIfActive = onlyIfActive;\n    \n    uhandler = core.getUpdateHandler();\n    ulog = uhandler.getUpdateLog();\n    // TODO: shutdown\n    shardHandlerFactory = new HttpShardHandlerFactory();\n    shardHandler = shardHandlerFactory.getShardHandler(client);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"57641b2e9dc6155be493cfb6ae9b8a9c8ceffa72","date":1391985588,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/update/PeerSync#PeerSync(SolrCore,List[String],int,boolean,boolean,boolean).mjava","pathOld":"solr/core/src/java/org/apache/solr/update/PeerSync#PeerSync(SolrCore,List[String],int,boolean,boolean,boolean).mjava","sourceNew":"  public PeerSync(SolrCore core, List<String> replicas, int nUpdates, boolean cantReachIsSuccess, boolean getNoVersionsIsSuccess, boolean onlyIfActive) {\n    this.replicas = replicas;\n    this.nUpdates = nUpdates;\n    this.maxUpdates = nUpdates;\n    this.cantReachIsSuccess = cantReachIsSuccess;\n    this.getNoVersionsIsSuccess = getNoVersionsIsSuccess;\n    this.client = core.getCoreDescriptor().getCoreContainer().getUpdateShardHandler().getHttpClient();\n    this.onlyIfActive = onlyIfActive;\n    \n    uhandler = core.getUpdateHandler();\n    ulog = uhandler.getUpdateLog();\n    // TODO: shutdown\n    shardHandlerFactory = (HttpShardHandlerFactory) core.getCoreDescriptor().getCoreContainer().getShardHandlerFactory();\n    shardHandler = shardHandlerFactory.getShardHandler(client);\n  }\n\n","sourceOld":"  public PeerSync(SolrCore core, List<String> replicas, int nUpdates, boolean cantReachIsSuccess, boolean getNoVersionsIsSuccess, boolean onlyIfActive) {\n    this.replicas = replicas;\n    this.nUpdates = nUpdates;\n    this.maxUpdates = nUpdates;\n    this.cantReachIsSuccess = cantReachIsSuccess;\n    this.getNoVersionsIsSuccess = getNoVersionsIsSuccess;\n    this.client = core.getCoreDescriptor().getCoreContainer().getUpdateShardHandler().getHttpClient();\n    this.onlyIfActive = onlyIfActive;\n    \n    uhandler = core.getUpdateHandler();\n    ulog = uhandler.getUpdateLog();\n    // TODO: shutdown\n    shardHandlerFactory = new HttpShardHandlerFactory();\n    shardHandler = shardHandlerFactory.getShardHandler(client);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d0ef034a4f10871667ae75181537775ddcf8ade4","date":1407610475,"type":3,"author":"Ryan Ernst","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/update/PeerSync#PeerSync(SolrCore,List[String],int,boolean,boolean,boolean).mjava","pathOld":"solr/core/src/java/org/apache/solr/update/PeerSync#PeerSync(SolrCore,List[String],int,boolean,boolean,boolean).mjava","sourceNew":"  public PeerSync(SolrCore core, List<String> replicas, int nUpdates, boolean cantReachIsSuccess, boolean getNoVersionsIsSuccess, boolean onlyIfActive) {\n    this.replicas = replicas;\n    this.nUpdates = nUpdates;\n    this.maxUpdates = nUpdates;\n    this.cantReachIsSuccess = cantReachIsSuccess;\n    this.getNoVersionsIsSuccess = getNoVersionsIsSuccess;\n    this.client = core.getCoreDescriptor().getCoreContainer().getUpdateShardHandler().getHttpClient();\n    this.onlyIfActive = onlyIfActive;\n    \n    uhandler = core.getUpdateHandler();\n    ulog = uhandler.getUpdateLog();\n    // TODO: close\n    shardHandlerFactory = (HttpShardHandlerFactory) core.getCoreDescriptor().getCoreContainer().getShardHandlerFactory();\n    shardHandler = shardHandlerFactory.getShardHandler(client);\n  }\n\n","sourceOld":"  public PeerSync(SolrCore core, List<String> replicas, int nUpdates, boolean cantReachIsSuccess, boolean getNoVersionsIsSuccess, boolean onlyIfActive) {\n    this.replicas = replicas;\n    this.nUpdates = nUpdates;\n    this.maxUpdates = nUpdates;\n    this.cantReachIsSuccess = cantReachIsSuccess;\n    this.getNoVersionsIsSuccess = getNoVersionsIsSuccess;\n    this.client = core.getCoreDescriptor().getCoreContainer().getUpdateShardHandler().getHttpClient();\n    this.onlyIfActive = onlyIfActive;\n    \n    uhandler = core.getUpdateHandler();\n    ulog = uhandler.getUpdateLog();\n    // TODO: shutdown\n    shardHandlerFactory = (HttpShardHandlerFactory) core.getCoreDescriptor().getCoreContainer().getShardHandlerFactory();\n    shardHandler = shardHandlerFactory.getShardHandler(client);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"439c63ae5d22132fca810a0029a854e97d2c1a3e","date":1432733612,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/update/PeerSync#PeerSync(SolrCore,List[String],int,boolean,boolean,boolean).mjava","pathOld":"solr/core/src/java/org/apache/solr/update/PeerSync#PeerSync(SolrCore,List[String],int,boolean,boolean,boolean).mjava","sourceNew":"  public PeerSync(SolrCore core, List<String> replicas, int nUpdates, boolean cantReachIsSuccess, boolean getNoVersionsIsSuccess, boolean onlyIfActive) {\n    this.core = core;\n    this.replicas = replicas;\n    this.nUpdates = nUpdates;\n    this.maxUpdates = nUpdates;\n    this.cantReachIsSuccess = cantReachIsSuccess;\n    this.getNoVersionsIsSuccess = getNoVersionsIsSuccess;\n    this.client = core.getCoreDescriptor().getCoreContainer().getUpdateShardHandler().getHttpClient();\n    this.onlyIfActive = onlyIfActive;\n    \n    uhandler = core.getUpdateHandler();\n    ulog = uhandler.getUpdateLog();\n    // TODO: close\n    shardHandlerFactory = (HttpShardHandlerFactory) core.getCoreDescriptor().getCoreContainer().getShardHandlerFactory();\n    shardHandler = shardHandlerFactory.getShardHandler(client);\n  }\n\n","sourceOld":"  public PeerSync(SolrCore core, List<String> replicas, int nUpdates, boolean cantReachIsSuccess, boolean getNoVersionsIsSuccess, boolean onlyIfActive) {\n    this.replicas = replicas;\n    this.nUpdates = nUpdates;\n    this.maxUpdates = nUpdates;\n    this.cantReachIsSuccess = cantReachIsSuccess;\n    this.getNoVersionsIsSuccess = getNoVersionsIsSuccess;\n    this.client = core.getCoreDescriptor().getCoreContainer().getUpdateShardHandler().getHttpClient();\n    this.onlyIfActive = onlyIfActive;\n    \n    uhandler = core.getUpdateHandler();\n    ulog = uhandler.getUpdateLog();\n    // TODO: close\n    shardHandlerFactory = (HttpShardHandlerFactory) core.getCoreDescriptor().getCoreContainer().getShardHandlerFactory();\n    shardHandler = shardHandlerFactory.getShardHandler(client);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"979e22aa7c63c9dc651adf861610c7e444d45832","date":1454615713,"type":5,"author":"yonik","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/update/PeerSync#PeerSync(SolrCore,List[String],int,boolean,boolean,boolean,boolean).mjava","pathOld":"solr/core/src/java/org/apache/solr/update/PeerSync#PeerSync(SolrCore,List[String],int,boolean,boolean,boolean).mjava","sourceNew":"  public PeerSync(SolrCore core, List<String> replicas, int nUpdates, boolean cantReachIsSuccess, boolean getNoVersionsIsSuccess, boolean onlyIfActive, boolean doFingerprint) {\n    this.core = core;\n    this.replicas = replicas;\n    this.nUpdates = nUpdates;\n    this.maxUpdates = nUpdates;\n    this.cantReachIsSuccess = cantReachIsSuccess;\n    this.getNoVersionsIsSuccess = getNoVersionsIsSuccess;\n    this.doFingerprint = doFingerprint;\n    this.client = core.getCoreDescriptor().getCoreContainer().getUpdateShardHandler().getHttpClient();\n    this.onlyIfActive = onlyIfActive;\n    \n    uhandler = core.getUpdateHandler();\n    ulog = uhandler.getUpdateLog();\n    // TODO: close\n    shardHandlerFactory = (HttpShardHandlerFactory) core.getCoreDescriptor().getCoreContainer().getShardHandlerFactory();\n    shardHandler = shardHandlerFactory.getShardHandler(client);\n  }\n\n","sourceOld":"  public PeerSync(SolrCore core, List<String> replicas, int nUpdates, boolean cantReachIsSuccess, boolean getNoVersionsIsSuccess, boolean onlyIfActive) {\n    this.core = core;\n    this.replicas = replicas;\n    this.nUpdates = nUpdates;\n    this.maxUpdates = nUpdates;\n    this.cantReachIsSuccess = cantReachIsSuccess;\n    this.getNoVersionsIsSuccess = getNoVersionsIsSuccess;\n    this.client = core.getCoreDescriptor().getCoreContainer().getUpdateShardHandler().getHttpClient();\n    this.onlyIfActive = onlyIfActive;\n    \n    uhandler = core.getUpdateHandler();\n    ulog = uhandler.getUpdateLog();\n    // TODO: close\n    shardHandlerFactory = (HttpShardHandlerFactory) core.getCoreDescriptor().getCoreContainer().getShardHandlerFactory();\n    shardHandler = shardHandlerFactory.getShardHandler(client);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b1704c078ec59838c9d95d5bf5738b393b537494","date":1454693901,"type":5,"author":"Mike McCandless","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/update/PeerSync#PeerSync(SolrCore,List[String],int,boolean,boolean,boolean,boolean).mjava","pathOld":"solr/core/src/java/org/apache/solr/update/PeerSync#PeerSync(SolrCore,List[String],int,boolean,boolean,boolean).mjava","sourceNew":"  public PeerSync(SolrCore core, List<String> replicas, int nUpdates, boolean cantReachIsSuccess, boolean getNoVersionsIsSuccess, boolean onlyIfActive, boolean doFingerprint) {\n    this.core = core;\n    this.replicas = replicas;\n    this.nUpdates = nUpdates;\n    this.maxUpdates = nUpdates;\n    this.cantReachIsSuccess = cantReachIsSuccess;\n    this.getNoVersionsIsSuccess = getNoVersionsIsSuccess;\n    this.doFingerprint = doFingerprint;\n    this.client = core.getCoreDescriptor().getCoreContainer().getUpdateShardHandler().getHttpClient();\n    this.onlyIfActive = onlyIfActive;\n    \n    uhandler = core.getUpdateHandler();\n    ulog = uhandler.getUpdateLog();\n    // TODO: close\n    shardHandlerFactory = (HttpShardHandlerFactory) core.getCoreDescriptor().getCoreContainer().getShardHandlerFactory();\n    shardHandler = shardHandlerFactory.getShardHandler(client);\n  }\n\n","sourceOld":"  public PeerSync(SolrCore core, List<String> replicas, int nUpdates, boolean cantReachIsSuccess, boolean getNoVersionsIsSuccess, boolean onlyIfActive) {\n    this.core = core;\n    this.replicas = replicas;\n    this.nUpdates = nUpdates;\n    this.maxUpdates = nUpdates;\n    this.cantReachIsSuccess = cantReachIsSuccess;\n    this.getNoVersionsIsSuccess = getNoVersionsIsSuccess;\n    this.client = core.getCoreDescriptor().getCoreContainer().getUpdateShardHandler().getHttpClient();\n    this.onlyIfActive = onlyIfActive;\n    \n    uhandler = core.getUpdateHandler();\n    ulog = uhandler.getUpdateLog();\n    // TODO: close\n    shardHandlerFactory = (HttpShardHandlerFactory) core.getCoreDescriptor().getCoreContainer().getShardHandlerFactory();\n    shardHandler = shardHandlerFactory.getShardHandler(client);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1e6acbaae7af722f17204ceccf0f7db5753eccf3","date":1454775255,"type":5,"author":"Mike McCandless","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/update/PeerSync#PeerSync(SolrCore,List[String],int,boolean,boolean,boolean,boolean).mjava","pathOld":"solr/core/src/java/org/apache/solr/update/PeerSync#PeerSync(SolrCore,List[String],int,boolean,boolean,boolean).mjava","sourceNew":"  public PeerSync(SolrCore core, List<String> replicas, int nUpdates, boolean cantReachIsSuccess, boolean getNoVersionsIsSuccess, boolean onlyIfActive, boolean doFingerprint) {\n    this.core = core;\n    this.replicas = replicas;\n    this.nUpdates = nUpdates;\n    this.maxUpdates = nUpdates;\n    this.cantReachIsSuccess = cantReachIsSuccess;\n    this.getNoVersionsIsSuccess = getNoVersionsIsSuccess;\n    this.doFingerprint = doFingerprint;\n    this.client = core.getCoreDescriptor().getCoreContainer().getUpdateShardHandler().getHttpClient();\n    this.onlyIfActive = onlyIfActive;\n    \n    uhandler = core.getUpdateHandler();\n    ulog = uhandler.getUpdateLog();\n    // TODO: close\n    shardHandlerFactory = (HttpShardHandlerFactory) core.getCoreDescriptor().getCoreContainer().getShardHandlerFactory();\n    shardHandler = shardHandlerFactory.getShardHandler(client);\n  }\n\n","sourceOld":"  public PeerSync(SolrCore core, List<String> replicas, int nUpdates, boolean cantReachIsSuccess, boolean getNoVersionsIsSuccess, boolean onlyIfActive) {\n    this.core = core;\n    this.replicas = replicas;\n    this.nUpdates = nUpdates;\n    this.maxUpdates = nUpdates;\n    this.cantReachIsSuccess = cantReachIsSuccess;\n    this.getNoVersionsIsSuccess = getNoVersionsIsSuccess;\n    this.client = core.getCoreDescriptor().getCoreContainer().getUpdateShardHandler().getHttpClient();\n    this.onlyIfActive = onlyIfActive;\n    \n    uhandler = core.getUpdateHandler();\n    ulog = uhandler.getUpdateLog();\n    // TODO: close\n    shardHandlerFactory = (HttpShardHandlerFactory) core.getCoreDescriptor().getCoreContainer().getShardHandlerFactory();\n    shardHandler = shardHandlerFactory.getShardHandler(client);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ba0e7b86ac6002d5286b4589d87b3c80bbcabdc7","date":1529486762,"type":1,"author":"Cao Manh Dat","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/update/PeerSync#PeerSync(SolrCore,List[String],int,boolean,boolean,boolean).mjava","pathOld":"solr/core/src/java/org/apache/solr/update/PeerSync#PeerSync(SolrCore,List[String],int,boolean,boolean,boolean,boolean).mjava","sourceNew":"  public PeerSync(SolrCore core, List<String> replicas, int nUpdates, boolean cantReachIsSuccess, boolean onlyIfActive, boolean doFingerprint) {\n    this.core = core;\n    this.replicas = replicas;\n    this.nUpdates = nUpdates;\n    this.cantReachIsSuccess = cantReachIsSuccess;\n    this.doFingerprint = doFingerprint && !(\"true\".equals(System.getProperty(\"solr.disableFingerprint\")));\n    this.client = core.getCoreContainer().getUpdateShardHandler().getDefaultHttpClient();\n    this.onlyIfActive = onlyIfActive;\n    \n    uhandler = core.getUpdateHandler();\n    ulog = uhandler.getUpdateLog();\n    // TODO: close\n    shardHandlerFactory = (HttpShardHandlerFactory) core.getCoreContainer().getShardHandlerFactory();\n    shardHandler = shardHandlerFactory.getShardHandler(client);\n    this.updater = new Updater(msg(), core);\n\n    core.getCoreMetricManager().registerMetricProducer(SolrInfoBean.Category.REPLICATION.toString(), this);\n  }\n\n","sourceOld":"  public PeerSync(SolrCore core, List<String> replicas, int nUpdates, boolean cantReachIsSuccess, boolean getNoVersionsIsSuccess, boolean onlyIfActive, boolean doFingerprint) {\n    this.core = core;\n    this.replicas = replicas;\n    this.nUpdates = nUpdates;\n    this.maxUpdates = nUpdates;\n    this.cantReachIsSuccess = cantReachIsSuccess;\n    this.getNoVersionsIsSuccess = getNoVersionsIsSuccess;\n    this.doFingerprint = doFingerprint && !(\"true\".equals(System.getProperty(\"solr.disableFingerprint\")));\n    this.client = core.getCoreContainer().getUpdateShardHandler().getDefaultHttpClient();\n    this.onlyIfActive = onlyIfActive;\n    \n    uhandler = core.getUpdateHandler();\n    ulog = uhandler.getUpdateLog();\n    // TODO: close\n    shardHandlerFactory = (HttpShardHandlerFactory) core.getCoreContainer().getShardHandlerFactory();\n    shardHandler = shardHandlerFactory.getShardHandler(client);\n\n    core.getCoreMetricManager().registerMetricProducer(SolrInfoBean.Category.REPLICATION.toString(), this);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7eeaaea0106c7d6a2de50acfc8d357121ef8bd26","date":1531589977,"type":0,"author":"Michael Braun","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/update/PeerSync#PeerSync(SolrCore,List[String],int,boolean,boolean,boolean).mjava","pathOld":"/dev/null","sourceNew":"  public PeerSync(SolrCore core, List<String> replicas, int nUpdates, boolean cantReachIsSuccess, boolean onlyIfActive, boolean doFingerprint) {\n    this.core = core;\n    this.replicas = replicas;\n    this.nUpdates = nUpdates;\n    this.cantReachIsSuccess = cantReachIsSuccess;\n    this.doFingerprint = doFingerprint && !(\"true\".equals(System.getProperty(\"solr.disableFingerprint\")));\n    this.client = core.getCoreContainer().getUpdateShardHandler().getDefaultHttpClient();\n    this.onlyIfActive = onlyIfActive;\n    \n    uhandler = core.getUpdateHandler();\n    ulog = uhandler.getUpdateLog();\n    // TODO: close\n    shardHandlerFactory = (HttpShardHandlerFactory) core.getCoreContainer().getShardHandlerFactory();\n    shardHandler = shardHandlerFactory.getShardHandler(client);\n    this.updater = new Updater(msg(), core);\n\n    core.getCoreMetricManager().registerMetricProducer(SolrInfoBean.Category.REPLICATION.toString(), this);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","date":1531905561,"type":0,"author":"Alessandro Benedetti","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/update/PeerSync#PeerSync(SolrCore,List[String],int,boolean,boolean,boolean).mjava","pathOld":"/dev/null","sourceNew":"  public PeerSync(SolrCore core, List<String> replicas, int nUpdates, boolean cantReachIsSuccess, boolean onlyIfActive, boolean doFingerprint) {\n    this.core = core;\n    this.replicas = replicas;\n    this.nUpdates = nUpdates;\n    this.cantReachIsSuccess = cantReachIsSuccess;\n    this.doFingerprint = doFingerprint && !(\"true\".equals(System.getProperty(\"solr.disableFingerprint\")));\n    this.client = core.getCoreContainer().getUpdateShardHandler().getDefaultHttpClient();\n    this.onlyIfActive = onlyIfActive;\n    \n    uhandler = core.getUpdateHandler();\n    ulog = uhandler.getUpdateLog();\n    // TODO: close\n    shardHandlerFactory = (HttpShardHandlerFactory) core.getCoreContainer().getShardHandlerFactory();\n    shardHandler = shardHandlerFactory.getShardHandler(client);\n    this.updater = new Updater(msg(), core);\n\n    core.getCoreMetricManager().registerMetricProducer(SolrInfoBean.Category.REPLICATION.toString(), this);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1964c059f45ae1de1877f9f0fe3ca327ea4218e8","date":1594088246,"type":3,"author":"Cao Manh Dat","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/update/PeerSync#PeerSync(SolrCore,List[String],int,boolean,boolean,boolean).mjava","pathOld":"solr/core/src/java/org/apache/solr/update/PeerSync#PeerSync(SolrCore,List[String],int,boolean,boolean,boolean).mjava","sourceNew":"  public PeerSync(SolrCore core, List<String> replicas, int nUpdates, boolean cantReachIsSuccess, boolean onlyIfActive, boolean doFingerprint) {\n    this.core = core;\n    this.replicas = replicas;\n    this.nUpdates = nUpdates;\n    this.cantReachIsSuccess = cantReachIsSuccess;\n    this.doFingerprint = doFingerprint && !(\"true\".equals(System.getProperty(\"solr.disableFingerprint\")));\n    this.client = core.getCoreContainer().getUpdateShardHandler().getDefaultHttpClient();\n    this.onlyIfActive = onlyIfActive;\n    \n    uhandler = core.getUpdateHandler();\n    ulog = uhandler.getUpdateLog();\n    // TODO: close\n    shardHandlerFactory = core.getCoreContainer().getShardHandlerFactory();\n    shardHandler = shardHandlerFactory.getShardHandler();\n    this.updater = new Updater(msg(), core);\n\n    core.getCoreMetricManager().registerMetricProducer(SolrInfoBean.Category.REPLICATION.toString(), this);\n  }\n\n","sourceOld":"  public PeerSync(SolrCore core, List<String> replicas, int nUpdates, boolean cantReachIsSuccess, boolean onlyIfActive, boolean doFingerprint) {\n    this.core = core;\n    this.replicas = replicas;\n    this.nUpdates = nUpdates;\n    this.cantReachIsSuccess = cantReachIsSuccess;\n    this.doFingerprint = doFingerprint && !(\"true\".equals(System.getProperty(\"solr.disableFingerprint\")));\n    this.client = core.getCoreContainer().getUpdateShardHandler().getDefaultHttpClient();\n    this.onlyIfActive = onlyIfActive;\n    \n    uhandler = core.getUpdateHandler();\n    ulog = uhandler.getUpdateLog();\n    // TODO: close\n    shardHandlerFactory = (HttpShardHandlerFactory) core.getCoreContainer().getShardHandlerFactory();\n    shardHandler = shardHandlerFactory.getShardHandler(client);\n    this.updater = new Updater(msg(), core);\n\n    core.getCoreMetricManager().registerMetricProducer(SolrInfoBean.Category.REPLICATION.toString(), this);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c38d3299f414132db022cec9d60b2dafc244a7c3","date":1597046674,"type":3,"author":"Cao Manh Dat","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/update/PeerSync#PeerSync(SolrCore,List[String],int,boolean,boolean,boolean).mjava","pathOld":"solr/core/src/java/org/apache/solr/update/PeerSync#PeerSync(SolrCore,List[String],int,boolean,boolean,boolean).mjava","sourceNew":"  public PeerSync(SolrCore core, List<String> replicas, int nUpdates, boolean cantReachIsSuccess, boolean onlyIfActive, boolean doFingerprint) {\n    this.core = core;\n    this.replicas = replicas;\n    this.nUpdates = nUpdates;\n    this.cantReachIsSuccess = cantReachIsSuccess;\n    this.doFingerprint = doFingerprint && !(\"true\".equals(System.getProperty(\"solr.disableFingerprint\")));\n    this.onlyIfActive = onlyIfActive;\n    \n    uhandler = core.getUpdateHandler();\n    ulog = uhandler.getUpdateLog();\n    // TODO: close\n    shardHandlerFactory = core.getCoreContainer().getShardHandlerFactory();\n    shardHandler = shardHandlerFactory.getShardHandler();\n    this.updater = new Updater(msg(), core);\n\n    core.getCoreMetricManager().registerMetricProducer(SolrInfoBean.Category.REPLICATION.toString(), this);\n  }\n\n","sourceOld":"  public PeerSync(SolrCore core, List<String> replicas, int nUpdates, boolean cantReachIsSuccess, boolean onlyIfActive, boolean doFingerprint) {\n    this.core = core;\n    this.replicas = replicas;\n    this.nUpdates = nUpdates;\n    this.cantReachIsSuccess = cantReachIsSuccess;\n    this.doFingerprint = doFingerprint && !(\"true\".equals(System.getProperty(\"solr.disableFingerprint\")));\n    this.client = core.getCoreContainer().getUpdateShardHandler().getDefaultHttpClient();\n    this.onlyIfActive = onlyIfActive;\n    \n    uhandler = core.getUpdateHandler();\n    ulog = uhandler.getUpdateLog();\n    // TODO: close\n    shardHandlerFactory = core.getCoreContainer().getShardHandlerFactory();\n    shardHandler = shardHandlerFactory.getShardHandler();\n    this.updater = new Updater(msg(), core);\n\n    core.getCoreMetricManager().registerMetricProducer(SolrInfoBean.Category.REPLICATION.toString(), this);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"c38d3299f414132db022cec9d60b2dafc244a7c3":["1964c059f45ae1de1877f9f0fe3ca327ea4218e8"],"1964c059f45ae1de1877f9f0fe3ca327ea4218e8":["ba0e7b86ac6002d5286b4589d87b3c80bbcabdc7"],"1e6acbaae7af722f17204ceccf0f7db5753eccf3":["439c63ae5d22132fca810a0029a854e97d2c1a3e","979e22aa7c63c9dc651adf861610c7e444d45832"],"439c63ae5d22132fca810a0029a854e97d2c1a3e":["d0ef034a4f10871667ae75181537775ddcf8ade4"],"0efc9f2cae117418f13ba9035f5e1d516ea7a2b5":["979e22aa7c63c9dc651adf861610c7e444d45832","ba0e7b86ac6002d5286b4589d87b3c80bbcabdc7"],"57641b2e9dc6155be493cfb6ae9b8a9c8ceffa72":["26cb11ce089e71fb909641e7030b53c7d9e3fff3"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"d0ef034a4f10871667ae75181537775ddcf8ade4":["57641b2e9dc6155be493cfb6ae9b8a9c8ceffa72"],"979e22aa7c63c9dc651adf861610c7e444d45832":["439c63ae5d22132fca810a0029a854e97d2c1a3e"],"b1704c078ec59838c9d95d5bf5738b393b537494":["439c63ae5d22132fca810a0029a854e97d2c1a3e","979e22aa7c63c9dc651adf861610c7e444d45832"],"26cb11ce089e71fb909641e7030b53c7d9e3fff3":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["c38d3299f414132db022cec9d60b2dafc244a7c3"],"ba0e7b86ac6002d5286b4589d87b3c80bbcabdc7":["979e22aa7c63c9dc651adf861610c7e444d45832"],"7eeaaea0106c7d6a2de50acfc8d357121ef8bd26":["979e22aa7c63c9dc651adf861610c7e444d45832","ba0e7b86ac6002d5286b4589d87b3c80bbcabdc7"]},"commit2Childs":{"c38d3299f414132db022cec9d60b2dafc244a7c3":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"1964c059f45ae1de1877f9f0fe3ca327ea4218e8":["c38d3299f414132db022cec9d60b2dafc244a7c3"],"1e6acbaae7af722f17204ceccf0f7db5753eccf3":[],"439c63ae5d22132fca810a0029a854e97d2c1a3e":["1e6acbaae7af722f17204ceccf0f7db5753eccf3","979e22aa7c63c9dc651adf861610c7e444d45832","b1704c078ec59838c9d95d5bf5738b393b537494"],"0efc9f2cae117418f13ba9035f5e1d516ea7a2b5":[],"57641b2e9dc6155be493cfb6ae9b8a9c8ceffa72":["d0ef034a4f10871667ae75181537775ddcf8ade4"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["26cb11ce089e71fb909641e7030b53c7d9e3fff3"],"d0ef034a4f10871667ae75181537775ddcf8ade4":["439c63ae5d22132fca810a0029a854e97d2c1a3e"],"979e22aa7c63c9dc651adf861610c7e444d45832":["1e6acbaae7af722f17204ceccf0f7db5753eccf3","0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","b1704c078ec59838c9d95d5bf5738b393b537494","ba0e7b86ac6002d5286b4589d87b3c80bbcabdc7","7eeaaea0106c7d6a2de50acfc8d357121ef8bd26"],"b1704c078ec59838c9d95d5bf5738b393b537494":[],"26cb11ce089e71fb909641e7030b53c7d9e3fff3":["57641b2e9dc6155be493cfb6ae9b8a9c8ceffa72"],"ba0e7b86ac6002d5286b4589d87b3c80bbcabdc7":["1964c059f45ae1de1877f9f0fe3ca327ea4218e8","0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","7eeaaea0106c7d6a2de50acfc8d357121ef8bd26"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"7eeaaea0106c7d6a2de50acfc8d357121ef8bd26":[]},"heads":["1e6acbaae7af722f17204ceccf0f7db5753eccf3","0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","b1704c078ec59838c9d95d5bf5738b393b537494","cd5edd1f2b162a5cfa08efd17851a07373a96817","7eeaaea0106c7d6a2de50acfc8d357121ef8bd26"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}