{"path":"solr/core/src/java/org/apache/solr/cloud/OverseerConfigSetMessageHandler#processMessage(ZkNodeProps,String).mjava","commits":[{"id":"2209af2c265d2258ec4b29c8cc78622d36994a15","date":1440641916,"type":0,"author":"Gregory Chanan","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/OverseerConfigSetMessageHandler#processMessage(ZkNodeProps,String).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public SolrResponse processMessage(ZkNodeProps message, String operation) {\n    NamedList results = new NamedList();\n    try {\n      if (!operation.startsWith(CONFIGSETS_ACTION_PREFIX)) {\n        throw new SolrException(ErrorCode.BAD_REQUEST,\n            \"Operation does not contain proper prefix: \" + operation\n            + \" expected: \" + CONFIGSETS_ACTION_PREFIX);\n      }\n      operation = operation.substring(CONFIGSETS_ACTION_PREFIX.length());\n      log.info(\"OverseerConfigSetMessageHandler.processMessage : \"+ operation + \" , \"+ message.toString());\n\n      ConfigSetParams.ConfigSetAction action = ConfigSetParams.ConfigSetAction.get(operation);\n      if (action == null) {\n        throw new SolrException(ErrorCode.BAD_REQUEST, \"Unknown operation:\" + operation);\n      }\n      switch (action) {\n        case CREATE:\n          createConfigSet(message);\n          break;\n        case DELETE:\n          deleteConfigSet(message);\n          break;\n        default:\n          throw new SolrException(ErrorCode.BAD_REQUEST, \"Unknown operation:\"\n              + operation);\n      }\n    } catch (Exception e) {\n      String configSetName = message.getStr(NAME);\n\n      if (configSetName == null) {\n        SolrException.log(log, \"Operation \" + operation + \" failed\", e);\n      } else  {\n        SolrException.log(log, \"ConfigSet: \" + configSetName + \" operation: \" + operation\n            + \" failed\", e);\n      }\n\n      results.add(\"Operation \" + operation + \" caused exception:\", e);\n      SimpleOrderedMap nl = new SimpleOrderedMap();\n      nl.add(\"msg\", e.getMessage());\n      nl.add(\"rspCode\", e instanceof SolrException ? ((SolrException)e).code() : -1);\n      results.add(\"exception\", nl);\n    }\n    return new OverseerSolrResponse(results);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e29778bfb04e9115636606cb8f74e23ecba15c7b","date":1536084166,"type":3,"author":"David Smiley","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/OverseerConfigSetMessageHandler#processMessage(ZkNodeProps,String).mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/OverseerConfigSetMessageHandler#processMessage(ZkNodeProps,String).mjava","sourceNew":"  @Override\n  public SolrResponse processMessage(ZkNodeProps message, String operation) {\n    NamedList results = new NamedList();\n    try {\n      if (!operation.startsWith(CONFIGSETS_ACTION_PREFIX)) {\n        throw new SolrException(ErrorCode.BAD_REQUEST,\n            \"Operation does not contain proper prefix: \" + operation\n                + \" expected: \" + CONFIGSETS_ACTION_PREFIX);\n      }\n      operation = operation.substring(CONFIGSETS_ACTION_PREFIX.length());\n      log.info(\"OverseerConfigSetMessageHandler.processMessage : \" + operation + \" , \" + message.toString());\n\n      ConfigSetParams.ConfigSetAction action = ConfigSetParams.ConfigSetAction.get(operation);\n      if (action == null) {\n        throw new SolrException(ErrorCode.BAD_REQUEST, \"Unknown operation:\" + operation);\n      }\n      switch (action) {\n        case CREATE:\n          createConfigSet(message);\n          break;\n        case DELETE:\n          deleteConfigSet(message);\n          break;\n        default:\n          throw new SolrException(ErrorCode.BAD_REQUEST, \"Unknown operation:\"\n              + operation);\n      }\n    } catch (Exception e) {\n      String configSetName = message.getStr(NAME);\n\n      if (configSetName == null) {\n        SolrException.log(log, \"Operation \" + operation + \" failed\", e);\n      } else {\n        SolrException.log(log, \"ConfigSet: \" + configSetName + \" operation: \" + operation\n            + \" failed\", e);\n      }\n\n      results.add(\"Operation \" + operation + \" caused exception:\", e);\n      SimpleOrderedMap nl = new SimpleOrderedMap();\n      nl.add(\"msg\", e.getMessage());\n      nl.add(\"rspCode\", e instanceof SolrException ? ((SolrException) e).code() : -1);\n      results.add(\"exception\", nl);\n    }\n    return new OverseerSolrResponse(results);\n  }\n\n","sourceOld":"  @Override\n  public SolrResponse processMessage(ZkNodeProps message, String operation) {\n    NamedList results = new NamedList();\n    try {\n      if (!operation.startsWith(CONFIGSETS_ACTION_PREFIX)) {\n        throw new SolrException(ErrorCode.BAD_REQUEST,\n            \"Operation does not contain proper prefix: \" + operation\n            + \" expected: \" + CONFIGSETS_ACTION_PREFIX);\n      }\n      operation = operation.substring(CONFIGSETS_ACTION_PREFIX.length());\n      log.info(\"OverseerConfigSetMessageHandler.processMessage : \"+ operation + \" , \"+ message.toString());\n\n      ConfigSetParams.ConfigSetAction action = ConfigSetParams.ConfigSetAction.get(operation);\n      if (action == null) {\n        throw new SolrException(ErrorCode.BAD_REQUEST, \"Unknown operation:\" + operation);\n      }\n      switch (action) {\n        case CREATE:\n          createConfigSet(message);\n          break;\n        case DELETE:\n          deleteConfigSet(message);\n          break;\n        default:\n          throw new SolrException(ErrorCode.BAD_REQUEST, \"Unknown operation:\"\n              + operation);\n      }\n    } catch (Exception e) {\n      String configSetName = message.getStr(NAME);\n\n      if (configSetName == null) {\n        SolrException.log(log, \"Operation \" + operation + \" failed\", e);\n      } else  {\n        SolrException.log(log, \"ConfigSet: \" + configSetName + \" operation: \" + operation\n            + \" failed\", e);\n      }\n\n      results.add(\"Operation \" + operation + \" caused exception:\", e);\n      SimpleOrderedMap nl = new SimpleOrderedMap();\n      nl.add(\"msg\", e.getMessage());\n      nl.add(\"rspCode\", e instanceof SolrException ? ((SolrException)e).code() : -1);\n      results.add(\"exception\", nl);\n    }\n    return new OverseerSolrResponse(results);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2dfb8001b6712216ccbf7ccc85f830f08ce3b544","date":1576882501,"type":3,"author":"Tomas Fernandez Lobbe","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/OverseerConfigSetMessageHandler#processMessage(ZkNodeProps,String).mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/OverseerConfigSetMessageHandler#processMessage(ZkNodeProps,String).mjava","sourceNew":"  @Override\n  public OverseerSolrResponse processMessage(ZkNodeProps message, String operation) {\n    NamedList results = new NamedList();\n    try {\n      if (!operation.startsWith(CONFIGSETS_ACTION_PREFIX)) {\n        throw new SolrException(ErrorCode.BAD_REQUEST,\n            \"Operation does not contain proper prefix: \" + operation\n                + \" expected: \" + CONFIGSETS_ACTION_PREFIX);\n      }\n      operation = operation.substring(CONFIGSETS_ACTION_PREFIX.length());\n      log.info(\"OverseerConfigSetMessageHandler.processMessage : \" + operation + \" , \" + message.toString());\n\n      ConfigSetParams.ConfigSetAction action = ConfigSetParams.ConfigSetAction.get(operation);\n      if (action == null) {\n        throw new SolrException(ErrorCode.BAD_REQUEST, \"Unknown operation:\" + operation);\n      }\n      switch (action) {\n        case CREATE:\n          createConfigSet(message);\n          break;\n        case DELETE:\n          deleteConfigSet(message);\n          break;\n        default:\n          throw new SolrException(ErrorCode.BAD_REQUEST, \"Unknown operation:\"\n              + operation);\n      }\n    } catch (Exception e) {\n      String configSetName = message.getStr(NAME);\n\n      if (configSetName == null) {\n        SolrException.log(log, \"Operation \" + operation + \" failed\", e);\n      } else {\n        SolrException.log(log, \"ConfigSet: \" + configSetName + \" operation: \" + operation\n            + \" failed\", e);\n      }\n\n      results.add(\"Operation \" + operation + \" caused exception:\", e);\n      SimpleOrderedMap nl = new SimpleOrderedMap();\n      nl.add(\"msg\", e.getMessage());\n      nl.add(\"rspCode\", e instanceof SolrException ? ((SolrException) e).code() : -1);\n      results.add(\"exception\", nl);\n    }\n    return new OverseerSolrResponse(results);\n  }\n\n","sourceOld":"  @Override\n  public SolrResponse processMessage(ZkNodeProps message, String operation) {\n    NamedList results = new NamedList();\n    try {\n      if (!operation.startsWith(CONFIGSETS_ACTION_PREFIX)) {\n        throw new SolrException(ErrorCode.BAD_REQUEST,\n            \"Operation does not contain proper prefix: \" + operation\n                + \" expected: \" + CONFIGSETS_ACTION_PREFIX);\n      }\n      operation = operation.substring(CONFIGSETS_ACTION_PREFIX.length());\n      log.info(\"OverseerConfigSetMessageHandler.processMessage : \" + operation + \" , \" + message.toString());\n\n      ConfigSetParams.ConfigSetAction action = ConfigSetParams.ConfigSetAction.get(operation);\n      if (action == null) {\n        throw new SolrException(ErrorCode.BAD_REQUEST, \"Unknown operation:\" + operation);\n      }\n      switch (action) {\n        case CREATE:\n          createConfigSet(message);\n          break;\n        case DELETE:\n          deleteConfigSet(message);\n          break;\n        default:\n          throw new SolrException(ErrorCode.BAD_REQUEST, \"Unknown operation:\"\n              + operation);\n      }\n    } catch (Exception e) {\n      String configSetName = message.getStr(NAME);\n\n      if (configSetName == null) {\n        SolrException.log(log, \"Operation \" + operation + \" failed\", e);\n      } else {\n        SolrException.log(log, \"ConfigSet: \" + configSetName + \" operation: \" + operation\n            + \" failed\", e);\n      }\n\n      results.add(\"Operation \" + operation + \" caused exception:\", e);\n      SimpleOrderedMap nl = new SimpleOrderedMap();\n      nl.add(\"msg\", e.getMessage());\n      nl.add(\"rspCode\", e instanceof SolrException ? ((SolrException) e).code() : -1);\n      results.add(\"exception\", nl);\n    }\n    return new OverseerSolrResponse(results);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"96b4a3cd1f2463ebc4ffc0f61acdb3359637fe2a","date":1577276097,"type":3,"author":"Dawid Weiss","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/cloud/OverseerConfigSetMessageHandler#processMessage(ZkNodeProps,String).mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/OverseerConfigSetMessageHandler#processMessage(ZkNodeProps,String).mjava","sourceNew":"  @Override\n  public OverseerSolrResponse processMessage(ZkNodeProps message, String operation) {\n    NamedList results = new NamedList();\n    try {\n      if (!operation.startsWith(CONFIGSETS_ACTION_PREFIX)) {\n        throw new SolrException(ErrorCode.BAD_REQUEST,\n            \"Operation does not contain proper prefix: \" + operation\n                + \" expected: \" + CONFIGSETS_ACTION_PREFIX);\n      }\n      operation = operation.substring(CONFIGSETS_ACTION_PREFIX.length());\n      log.info(\"OverseerConfigSetMessageHandler.processMessage : \" + operation + \" , \" + message.toString());\n\n      ConfigSetParams.ConfigSetAction action = ConfigSetParams.ConfigSetAction.get(operation);\n      if (action == null) {\n        throw new SolrException(ErrorCode.BAD_REQUEST, \"Unknown operation:\" + operation);\n      }\n      switch (action) {\n        case CREATE:\n          createConfigSet(message);\n          break;\n        case DELETE:\n          deleteConfigSet(message);\n          break;\n        default:\n          throw new SolrException(ErrorCode.BAD_REQUEST, \"Unknown operation:\"\n              + operation);\n      }\n    } catch (Exception e) {\n      String configSetName = message.getStr(NAME);\n\n      if (configSetName == null) {\n        SolrException.log(log, \"Operation \" + operation + \" failed\", e);\n      } else {\n        SolrException.log(log, \"ConfigSet: \" + configSetName + \" operation: \" + operation\n            + \" failed\", e);\n      }\n\n      results.add(\"Operation \" + operation + \" caused exception:\", e);\n      SimpleOrderedMap nl = new SimpleOrderedMap();\n      nl.add(\"msg\", e.getMessage());\n      nl.add(\"rspCode\", e instanceof SolrException ? ((SolrException) e).code() : -1);\n      results.add(\"exception\", nl);\n    }\n    return new OverseerSolrResponse(results);\n  }\n\n","sourceOld":"  @Override\n  public SolrResponse processMessage(ZkNodeProps message, String operation) {\n    NamedList results = new NamedList();\n    try {\n      if (!operation.startsWith(CONFIGSETS_ACTION_PREFIX)) {\n        throw new SolrException(ErrorCode.BAD_REQUEST,\n            \"Operation does not contain proper prefix: \" + operation\n                + \" expected: \" + CONFIGSETS_ACTION_PREFIX);\n      }\n      operation = operation.substring(CONFIGSETS_ACTION_PREFIX.length());\n      log.info(\"OverseerConfigSetMessageHandler.processMessage : \" + operation + \" , \" + message.toString());\n\n      ConfigSetParams.ConfigSetAction action = ConfigSetParams.ConfigSetAction.get(operation);\n      if (action == null) {\n        throw new SolrException(ErrorCode.BAD_REQUEST, \"Unknown operation:\" + operation);\n      }\n      switch (action) {\n        case CREATE:\n          createConfigSet(message);\n          break;\n        case DELETE:\n          deleteConfigSet(message);\n          break;\n        default:\n          throw new SolrException(ErrorCode.BAD_REQUEST, \"Unknown operation:\"\n              + operation);\n      }\n    } catch (Exception e) {\n      String configSetName = message.getStr(NAME);\n\n      if (configSetName == null) {\n        SolrException.log(log, \"Operation \" + operation + \" failed\", e);\n      } else {\n        SolrException.log(log, \"ConfigSet: \" + configSetName + \" operation: \" + operation\n            + \" failed\", e);\n      }\n\n      results.add(\"Operation \" + operation + \" caused exception:\", e);\n      SimpleOrderedMap nl = new SimpleOrderedMap();\n      nl.add(\"msg\", e.getMessage());\n      nl.add(\"rspCode\", e instanceof SolrException ? ((SolrException) e).code() : -1);\n      results.add(\"exception\", nl);\n    }\n    return new OverseerSolrResponse(results);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ad4957cde742defe6db19689abdc267c5d948066","date":1587990850,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/OverseerConfigSetMessageHandler#processMessage(ZkNodeProps,String).mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/OverseerConfigSetMessageHandler#processMessage(ZkNodeProps,String).mjava","sourceNew":"  @Override\n  public OverseerSolrResponse processMessage(ZkNodeProps message, String operation) {\n    NamedList results = new NamedList();\n    try {\n      if (!operation.startsWith(CONFIGSETS_ACTION_PREFIX)) {\n        throw new SolrException(ErrorCode.BAD_REQUEST,\n            \"Operation does not contain proper prefix: \" + operation\n                + \" expected: \" + CONFIGSETS_ACTION_PREFIX);\n      }\n      operation = operation.substring(CONFIGSETS_ACTION_PREFIX.length());\n      log.info(\"OverseerConfigSetMessageHandler.processMessage : {}, {}\", operation, message);\n\n      ConfigSetParams.ConfigSetAction action = ConfigSetParams.ConfigSetAction.get(operation);\n      if (action == null) {\n        throw new SolrException(ErrorCode.BAD_REQUEST, \"Unknown operation:\" + operation);\n      }\n      switch (action) {\n        case CREATE:\n          createConfigSet(message);\n          break;\n        case DELETE:\n          deleteConfigSet(message);\n          break;\n        default:\n          throw new SolrException(ErrorCode.BAD_REQUEST, \"Unknown operation:\"\n              + operation);\n      }\n    } catch (Exception e) {\n      String configSetName = message.getStr(NAME);\n\n      if (configSetName == null) {\n        SolrException.log(log, \"Operation \" + operation + \" failed\", e);\n      } else {\n        SolrException.log(log, \"ConfigSet: \" + configSetName + \" operation: \" + operation\n            + \" failed\", e);\n      }\n\n      results.add(\"Operation \" + operation + \" caused exception:\", e);\n      SimpleOrderedMap nl = new SimpleOrderedMap();\n      nl.add(\"msg\", e.getMessage());\n      nl.add(\"rspCode\", e instanceof SolrException ? ((SolrException) e).code() : -1);\n      results.add(\"exception\", nl);\n    }\n    return new OverseerSolrResponse(results);\n  }\n\n","sourceOld":"  @Override\n  public OverseerSolrResponse processMessage(ZkNodeProps message, String operation) {\n    NamedList results = new NamedList();\n    try {\n      if (!operation.startsWith(CONFIGSETS_ACTION_PREFIX)) {\n        throw new SolrException(ErrorCode.BAD_REQUEST,\n            \"Operation does not contain proper prefix: \" + operation\n                + \" expected: \" + CONFIGSETS_ACTION_PREFIX);\n      }\n      operation = operation.substring(CONFIGSETS_ACTION_PREFIX.length());\n      log.info(\"OverseerConfigSetMessageHandler.processMessage : \" + operation + \" , \" + message.toString());\n\n      ConfigSetParams.ConfigSetAction action = ConfigSetParams.ConfigSetAction.get(operation);\n      if (action == null) {\n        throw new SolrException(ErrorCode.BAD_REQUEST, \"Unknown operation:\" + operation);\n      }\n      switch (action) {\n        case CREATE:\n          createConfigSet(message);\n          break;\n        case DELETE:\n          deleteConfigSet(message);\n          break;\n        default:\n          throw new SolrException(ErrorCode.BAD_REQUEST, \"Unknown operation:\"\n              + operation);\n      }\n    } catch (Exception e) {\n      String configSetName = message.getStr(NAME);\n\n      if (configSetName == null) {\n        SolrException.log(log, \"Operation \" + operation + \" failed\", e);\n      } else {\n        SolrException.log(log, \"ConfigSet: \" + configSetName + \" operation: \" + operation\n            + \" failed\", e);\n      }\n\n      results.add(\"Operation \" + operation + \" caused exception:\", e);\n      SimpleOrderedMap nl = new SimpleOrderedMap();\n      nl.add(\"msg\", e.getMessage());\n      nl.add(\"rspCode\", e instanceof SolrException ? ((SolrException) e).code() : -1);\n      results.add(\"exception\", nl);\n    }\n    return new OverseerSolrResponse(results);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"06a8891f085f71282bb3ece1b1732b68f07813a3","date":1591912889,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/OverseerConfigSetMessageHandler#processMessage(ZkNodeProps,String).mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/OverseerConfigSetMessageHandler#processMessage(ZkNodeProps,String).mjava","sourceNew":"  @Override\n  @SuppressWarnings({\"unchecked\"})\n  public OverseerSolrResponse processMessage(ZkNodeProps message, String operation) {\n    @SuppressWarnings({\"rawtypes\"})\n    NamedList results = new NamedList();\n    try {\n      if (!operation.startsWith(CONFIGSETS_ACTION_PREFIX)) {\n        throw new SolrException(ErrorCode.BAD_REQUEST,\n            \"Operation does not contain proper prefix: \" + operation\n                + \" expected: \" + CONFIGSETS_ACTION_PREFIX);\n      }\n      operation = operation.substring(CONFIGSETS_ACTION_PREFIX.length());\n      log.info(\"OverseerConfigSetMessageHandler.processMessage : {}, {}\", operation, message);\n\n      ConfigSetParams.ConfigSetAction action = ConfigSetParams.ConfigSetAction.get(operation);\n      if (action == null) {\n        throw new SolrException(ErrorCode.BAD_REQUEST, \"Unknown operation:\" + operation);\n      }\n      switch (action) {\n        case CREATE:\n          createConfigSet(message);\n          break;\n        case DELETE:\n          deleteConfigSet(message);\n          break;\n        default:\n          throw new SolrException(ErrorCode.BAD_REQUEST, \"Unknown operation:\"\n              + operation);\n      }\n    } catch (Exception e) {\n      String configSetName = message.getStr(NAME);\n\n      if (configSetName == null) {\n        SolrException.log(log, \"Operation \" + operation + \" failed\", e);\n      } else {\n        SolrException.log(log, \"ConfigSet: \" + configSetName + \" operation: \" + operation\n            + \" failed\", e);\n      }\n\n      results.add(\"Operation \" + operation + \" caused exception:\", e);\n      @SuppressWarnings({\"rawtypes\"})\n      SimpleOrderedMap nl = new SimpleOrderedMap();\n      nl.add(\"msg\", e.getMessage());\n      nl.add(\"rspCode\", e instanceof SolrException ? ((SolrException) e).code() : -1);\n      results.add(\"exception\", nl);\n    }\n    return new OverseerSolrResponse(results);\n  }\n\n","sourceOld":"  @Override\n  public OverseerSolrResponse processMessage(ZkNodeProps message, String operation) {\n    NamedList results = new NamedList();\n    try {\n      if (!operation.startsWith(CONFIGSETS_ACTION_PREFIX)) {\n        throw new SolrException(ErrorCode.BAD_REQUEST,\n            \"Operation does not contain proper prefix: \" + operation\n                + \" expected: \" + CONFIGSETS_ACTION_PREFIX);\n      }\n      operation = operation.substring(CONFIGSETS_ACTION_PREFIX.length());\n      log.info(\"OverseerConfigSetMessageHandler.processMessage : {}, {}\", operation, message);\n\n      ConfigSetParams.ConfigSetAction action = ConfigSetParams.ConfigSetAction.get(operation);\n      if (action == null) {\n        throw new SolrException(ErrorCode.BAD_REQUEST, \"Unknown operation:\" + operation);\n      }\n      switch (action) {\n        case CREATE:\n          createConfigSet(message);\n          break;\n        case DELETE:\n          deleteConfigSet(message);\n          break;\n        default:\n          throw new SolrException(ErrorCode.BAD_REQUEST, \"Unknown operation:\"\n              + operation);\n      }\n    } catch (Exception e) {\n      String configSetName = message.getStr(NAME);\n\n      if (configSetName == null) {\n        SolrException.log(log, \"Operation \" + operation + \" failed\", e);\n      } else {\n        SolrException.log(log, \"ConfigSet: \" + configSetName + \" operation: \" + operation\n            + \" failed\", e);\n      }\n\n      results.add(\"Operation \" + operation + \" caused exception:\", e);\n      SimpleOrderedMap nl = new SimpleOrderedMap();\n      nl.add(\"msg\", e.getMessage());\n      nl.add(\"rspCode\", e instanceof SolrException ? ((SolrException) e).code() : -1);\n      results.add(\"exception\", nl);\n    }\n    return new OverseerSolrResponse(results);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c526352db87264a72a7a9ad68c1b769b81e54305","date":1598780188,"type":5,"author":"Ilan Ginzburg","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/OverseerConfigSetMessageHandler#processMessage(ZkNodeProps,CloudConfig,String).mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/OverseerConfigSetMessageHandler#processMessage(ZkNodeProps,String).mjava","sourceNew":"  @Override\n  @SuppressWarnings({\"unchecked\"})\n  public OverseerSolrResponse processMessage(ZkNodeProps message, CloudConfig cloudConfig, String operation) {\n    @SuppressWarnings({\"rawtypes\"})\n    NamedList results = new NamedList();\n    try {\n      if (!operation.startsWith(CONFIGSETS_ACTION_PREFIX)) {\n        throw new SolrException(ErrorCode.BAD_REQUEST,\n            \"Operation does not contain proper prefix: \" + operation\n                + \" expected: \" + CONFIGSETS_ACTION_PREFIX);\n      }\n      operation = operation.substring(CONFIGSETS_ACTION_PREFIX.length());\n      log.info(\"OverseerConfigSetMessageHandler.processMessage : {}, {}\", operation, message);\n\n      ConfigSetParams.ConfigSetAction action = ConfigSetParams.ConfigSetAction.get(operation);\n      if (action == null) {\n        throw new SolrException(ErrorCode.BAD_REQUEST, \"Unknown operation:\" + operation);\n      }\n      switch (action) {\n        case CREATE:\n          createConfigSet(message);\n          break;\n        case DELETE:\n          deleteConfigSet(message);\n          break;\n        default:\n          throw new SolrException(ErrorCode.BAD_REQUEST, \"Unknown operation:\"\n              + operation);\n      }\n    } catch (Exception e) {\n      String configSetName = message.getStr(NAME);\n\n      if (configSetName == null) {\n        SolrException.log(log, \"Operation \" + operation + \" failed\", e);\n      } else {\n        SolrException.log(log, \"ConfigSet: \" + configSetName + \" operation: \" + operation\n            + \" failed\", e);\n      }\n\n      results.add(\"Operation \" + operation + \" caused exception:\", e);\n      @SuppressWarnings({\"rawtypes\"})\n      SimpleOrderedMap nl = new SimpleOrderedMap();\n      nl.add(\"msg\", e.getMessage());\n      nl.add(\"rspCode\", e instanceof SolrException ? ((SolrException) e).code() : -1);\n      results.add(\"exception\", nl);\n    }\n    return new OverseerSolrResponse(results);\n  }\n\n","sourceOld":"  @Override\n  @SuppressWarnings({\"unchecked\"})\n  public OverseerSolrResponse processMessage(ZkNodeProps message, String operation) {\n    @SuppressWarnings({\"rawtypes\"})\n    NamedList results = new NamedList();\n    try {\n      if (!operation.startsWith(CONFIGSETS_ACTION_PREFIX)) {\n        throw new SolrException(ErrorCode.BAD_REQUEST,\n            \"Operation does not contain proper prefix: \" + operation\n                + \" expected: \" + CONFIGSETS_ACTION_PREFIX);\n      }\n      operation = operation.substring(CONFIGSETS_ACTION_PREFIX.length());\n      log.info(\"OverseerConfigSetMessageHandler.processMessage : {}, {}\", operation, message);\n\n      ConfigSetParams.ConfigSetAction action = ConfigSetParams.ConfigSetAction.get(operation);\n      if (action == null) {\n        throw new SolrException(ErrorCode.BAD_REQUEST, \"Unknown operation:\" + operation);\n      }\n      switch (action) {\n        case CREATE:\n          createConfigSet(message);\n          break;\n        case DELETE:\n          deleteConfigSet(message);\n          break;\n        default:\n          throw new SolrException(ErrorCode.BAD_REQUEST, \"Unknown operation:\"\n              + operation);\n      }\n    } catch (Exception e) {\n      String configSetName = message.getStr(NAME);\n\n      if (configSetName == null) {\n        SolrException.log(log, \"Operation \" + operation + \" failed\", e);\n      } else {\n        SolrException.log(log, \"ConfigSet: \" + configSetName + \" operation: \" + operation\n            + \" failed\", e);\n      }\n\n      results.add(\"Operation \" + operation + \" caused exception:\", e);\n      @SuppressWarnings({\"rawtypes\"})\n      SimpleOrderedMap nl = new SimpleOrderedMap();\n      nl.add(\"msg\", e.getMessage());\n      nl.add(\"rspCode\", e instanceof SolrException ? ((SolrException) e).code() : -1);\n      results.add(\"exception\", nl);\n    }\n    return new OverseerSolrResponse(results);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e7b17e79a71117668ecbf8d3417c876e41396565","date":1598973672,"type":1,"author":"Ilan Ginzburg","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/OverseerConfigSetMessageHandler#processMessage(ZkNodeProps,String).mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/OverseerConfigSetMessageHandler#processMessage(ZkNodeProps,CloudConfig,String).mjava","sourceNew":"  @Override\n  @SuppressWarnings({\"unchecked\"})\n  public OverseerSolrResponse processMessage(ZkNodeProps message, String operation) {\n    @SuppressWarnings({\"rawtypes\"})\n    NamedList results = new NamedList();\n    try {\n      if (!operation.startsWith(CONFIGSETS_ACTION_PREFIX)) {\n        throw new SolrException(ErrorCode.BAD_REQUEST,\n            \"Operation does not contain proper prefix: \" + operation\n                + \" expected: \" + CONFIGSETS_ACTION_PREFIX);\n      }\n      operation = operation.substring(CONFIGSETS_ACTION_PREFIX.length());\n      log.info(\"OverseerConfigSetMessageHandler.processMessage : {}, {}\", operation, message);\n\n      ConfigSetParams.ConfigSetAction action = ConfigSetParams.ConfigSetAction.get(operation);\n      if (action == null) {\n        throw new SolrException(ErrorCode.BAD_REQUEST, \"Unknown operation:\" + operation);\n      }\n      switch (action) {\n        case CREATE:\n          createConfigSet(message);\n          break;\n        case DELETE:\n          deleteConfigSet(message);\n          break;\n        default:\n          throw new SolrException(ErrorCode.BAD_REQUEST, \"Unknown operation:\"\n              + operation);\n      }\n    } catch (Exception e) {\n      String configSetName = message.getStr(NAME);\n\n      if (configSetName == null) {\n        SolrException.log(log, \"Operation \" + operation + \" failed\", e);\n      } else {\n        SolrException.log(log, \"ConfigSet: \" + configSetName + \" operation: \" + operation\n            + \" failed\", e);\n      }\n\n      results.add(\"Operation \" + operation + \" caused exception:\", e);\n      @SuppressWarnings({\"rawtypes\"})\n      SimpleOrderedMap nl = new SimpleOrderedMap();\n      nl.add(\"msg\", e.getMessage());\n      nl.add(\"rspCode\", e instanceof SolrException ? ((SolrException) e).code() : -1);\n      results.add(\"exception\", nl);\n    }\n    return new OverseerSolrResponse(results);\n  }\n\n","sourceOld":"  @Override\n  @SuppressWarnings({\"unchecked\"})\n  public OverseerSolrResponse processMessage(ZkNodeProps message, CloudConfig cloudConfig, String operation) {\n    @SuppressWarnings({\"rawtypes\"})\n    NamedList results = new NamedList();\n    try {\n      if (!operation.startsWith(CONFIGSETS_ACTION_PREFIX)) {\n        throw new SolrException(ErrorCode.BAD_REQUEST,\n            \"Operation does not contain proper prefix: \" + operation\n                + \" expected: \" + CONFIGSETS_ACTION_PREFIX);\n      }\n      operation = operation.substring(CONFIGSETS_ACTION_PREFIX.length());\n      log.info(\"OverseerConfigSetMessageHandler.processMessage : {}, {}\", operation, message);\n\n      ConfigSetParams.ConfigSetAction action = ConfigSetParams.ConfigSetAction.get(operation);\n      if (action == null) {\n        throw new SolrException(ErrorCode.BAD_REQUEST, \"Unknown operation:\" + operation);\n      }\n      switch (action) {\n        case CREATE:\n          createConfigSet(message);\n          break;\n        case DELETE:\n          deleteConfigSet(message);\n          break;\n        default:\n          throw new SolrException(ErrorCode.BAD_REQUEST, \"Unknown operation:\"\n              + operation);\n      }\n    } catch (Exception e) {\n      String configSetName = message.getStr(NAME);\n\n      if (configSetName == null) {\n        SolrException.log(log, \"Operation \" + operation + \" failed\", e);\n      } else {\n        SolrException.log(log, \"ConfigSet: \" + configSetName + \" operation: \" + operation\n            + \" failed\", e);\n      }\n\n      results.add(\"Operation \" + operation + \" caused exception:\", e);\n      @SuppressWarnings({\"rawtypes\"})\n      SimpleOrderedMap nl = new SimpleOrderedMap();\n      nl.add(\"msg\", e.getMessage());\n      nl.add(\"rspCode\", e instanceof SolrException ? ((SolrException) e).code() : -1);\n      results.add(\"exception\", nl);\n    }\n    return new OverseerSolrResponse(results);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"e7b17e79a71117668ecbf8d3417c876e41396565":["c526352db87264a72a7a9ad68c1b769b81e54305"],"96b4a3cd1f2463ebc4ffc0f61acdb3359637fe2a":["e29778bfb04e9115636606cb8f74e23ecba15c7b","2dfb8001b6712216ccbf7ccc85f830f08ce3b544"],"2dfb8001b6712216ccbf7ccc85f830f08ce3b544":["e29778bfb04e9115636606cb8f74e23ecba15c7b"],"2209af2c265d2258ec4b29c8cc78622d36994a15":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"c526352db87264a72a7a9ad68c1b769b81e54305":["06a8891f085f71282bb3ece1b1732b68f07813a3"],"e29778bfb04e9115636606cb8f74e23ecba15c7b":["2209af2c265d2258ec4b29c8cc78622d36994a15"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"06a8891f085f71282bb3ece1b1732b68f07813a3":["ad4957cde742defe6db19689abdc267c5d948066"],"ad4957cde742defe6db19689abdc267c5d948066":["2dfb8001b6712216ccbf7ccc85f830f08ce3b544"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["e7b17e79a71117668ecbf8d3417c876e41396565"]},"commit2Childs":{"e7b17e79a71117668ecbf8d3417c876e41396565":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"96b4a3cd1f2463ebc4ffc0f61acdb3359637fe2a":[],"2dfb8001b6712216ccbf7ccc85f830f08ce3b544":["96b4a3cd1f2463ebc4ffc0f61acdb3359637fe2a","ad4957cde742defe6db19689abdc267c5d948066"],"2209af2c265d2258ec4b29c8cc78622d36994a15":["e29778bfb04e9115636606cb8f74e23ecba15c7b"],"c526352db87264a72a7a9ad68c1b769b81e54305":["e7b17e79a71117668ecbf8d3417c876e41396565"],"e29778bfb04e9115636606cb8f74e23ecba15c7b":["96b4a3cd1f2463ebc4ffc0f61acdb3359637fe2a","2dfb8001b6712216ccbf7ccc85f830f08ce3b544"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["2209af2c265d2258ec4b29c8cc78622d36994a15"],"06a8891f085f71282bb3ece1b1732b68f07813a3":["c526352db87264a72a7a9ad68c1b769b81e54305"],"ad4957cde742defe6db19689abdc267c5d948066":["06a8891f085f71282bb3ece1b1732b68f07813a3"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["96b4a3cd1f2463ebc4ffc0f61acdb3359637fe2a","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}