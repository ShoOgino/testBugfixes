{"path":"lucene/test-framework/src/java/org/apache/lucene/util/LuceneTestCase#newDirectory(Random).mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/util/LuceneTestCase#newDirectory(Random).mjava","pathOld":"lucene/src/test-framework/java/org/apache/lucene/util/LuceneTestCase#newDirectory(Random).mjava","sourceNew":"  /**\n   * Returns a new Directory instance, using the specified random.\n   * See {@link #newDirectory()} for more information.\n   */\n  public static MockDirectoryWrapper newDirectory(Random r) throws IOException {\n    Directory impl = newDirectoryImpl(r, TEST_DIRECTORY);\n    MockDirectoryWrapper dir = new MockDirectoryWrapper(r, maybeNRTWrap(r, impl));\n    stores.put(dir, Thread.currentThread().getStackTrace());\n    dir.setThrottling(TEST_THROTTLING);\n    return dir;\n   }\n\n","sourceOld":"  /**\n   * Returns a new Directory instance, using the specified random.\n   * See {@link #newDirectory()} for more information.\n   */\n  public static MockDirectoryWrapper newDirectory(Random r) throws IOException {\n    Directory impl = newDirectoryImpl(r, TEST_DIRECTORY);\n    MockDirectoryWrapper dir = new MockDirectoryWrapper(r, maybeNRTWrap(r, impl));\n    stores.put(dir, Thread.currentThread().getStackTrace());\n    dir.setThrottling(TEST_THROTTLING);\n    return dir;\n   }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"732de6718534f7b42fc956f4929b953ef4b1610f","date":1332871688,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/util/LuceneTestCase#newDirectory(Random).mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/util/LuceneTestCase#newDirectory(Random).mjava","sourceNew":"  /**\n   * Returns a new Directory instance, using the specified random.\n   * See {@link #newDirectory()} for more information.\n   */\n  public static MockDirectoryWrapper newDirectory(Random r) throws IOException {\n    Directory impl = newDirectoryImpl(r, TEST_DIRECTORY);\n    MockDirectoryWrapper dir = new MockDirectoryWrapper(r, maybeNRTWrap(r, impl));\n    stores.put(dir, Thread.currentThread().getStackTrace());\n    dir.setThrottling(TEST_THROTTLING);\n    if (VERBOSE) {\n      System.out.println(\"NOTE: LuceneTestCase.newDirectory: returning \" + dir);\n    }\n    return dir;\n   }\n\n","sourceOld":"  /**\n   * Returns a new Directory instance, using the specified random.\n   * See {@link #newDirectory()} for more information.\n   */\n  public static MockDirectoryWrapper newDirectory(Random r) throws IOException {\n    Directory impl = newDirectoryImpl(r, TEST_DIRECTORY);\n    MockDirectoryWrapper dir = new MockDirectoryWrapper(r, maybeNRTWrap(r, impl));\n    stores.put(dir, Thread.currentThread().getStackTrace());\n    dir.setThrottling(TEST_THROTTLING);\n    return dir;\n   }\n\n","bugFix":null,"bugIntro":["d19974432be9aed28ee7dca73bdf01d139e763a9"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"5da0b42730b6b99b31389ef94cb97384e83b9ede","date":1337107665,"type":3,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/util/LuceneTestCase#newDirectory(Random).mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/util/LuceneTestCase#newDirectory(Random).mjava","sourceNew":"  /**\n   * Returns a new Directory instance, using the specified random.\n   * See {@link #newDirectory()} for more information.\n   */\n  public static MockDirectoryWrapper newDirectory(Random r) throws IOException {\n    Directory impl = newDirectoryImpl(r, TEST_DIRECTORY);\n    MockDirectoryWrapper dir = new MockDirectoryWrapper(r, maybeNRTWrap(r, impl));\n    closeAfterSuite(new CloseableDirectory(dir, suiteFailureMarker));\n\n    dir.setThrottling(TEST_THROTTLING);\n    if (VERBOSE) {\n      System.out.println(\"NOTE: LuceneTestCase.newDirectory: returning \" + dir);\n    }\n    return dir;\n   }\n\n","sourceOld":"  /**\n   * Returns a new Directory instance, using the specified random.\n   * See {@link #newDirectory()} for more information.\n   */\n  public static MockDirectoryWrapper newDirectory(Random r) throws IOException {\n    Directory impl = newDirectoryImpl(r, TEST_DIRECTORY);\n    MockDirectoryWrapper dir = new MockDirectoryWrapper(r, maybeNRTWrap(r, impl));\n    stores.put(dir, Thread.currentThread().getStackTrace());\n    dir.setThrottling(TEST_THROTTLING);\n    if (VERBOSE) {\n      System.out.println(\"NOTE: LuceneTestCase.newDirectory: returning \" + dir);\n    }\n    return dir;\n   }\n\n","bugFix":null,"bugIntro":["d19974432be9aed28ee7dca73bdf01d139e763a9"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"4d3e8520fd031bab31fd0e4d480e55958bc45efe","date":1340901565,"type":3,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/util/LuceneTestCase#newDirectory(Random).mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/util/LuceneTestCase#newDirectory(Random).mjava","sourceNew":"  /**\n   * Returns a new Directory instance, using the specified random.\n   * See {@link #newDirectory()} for more information.\n   */\n  public static MockDirectoryWrapper newDirectory(Random r) {\n    Directory impl = newDirectoryImpl(r, TEST_DIRECTORY);\n    MockDirectoryWrapper dir = new MockDirectoryWrapper(r, maybeNRTWrap(r, impl));\n    closeAfterSuite(new CloseableDirectory(dir, suiteFailureMarker));\n\n    dir.setThrottling(TEST_THROTTLING);\n    if (VERBOSE) {\n      System.out.println(\"NOTE: LuceneTestCase.newDirectory: returning \" + dir);\n    }\n    return dir;\n   }\n\n","sourceOld":"  /**\n   * Returns a new Directory instance, using the specified random.\n   * See {@link #newDirectory()} for more information.\n   */\n  public static MockDirectoryWrapper newDirectory(Random r) throws IOException {\n    Directory impl = newDirectoryImpl(r, TEST_DIRECTORY);\n    MockDirectoryWrapper dir = new MockDirectoryWrapper(r, maybeNRTWrap(r, impl));\n    closeAfterSuite(new CloseableDirectory(dir, suiteFailureMarker));\n\n    dir.setThrottling(TEST_THROTTLING);\n    if (VERBOSE) {\n      System.out.println(\"NOTE: LuceneTestCase.newDirectory: returning \" + dir);\n    }\n    return dir;\n   }\n\n","bugFix":["a05409176bd65129d67a785ee70e881e238a9aef"],"bugIntro":["d19974432be9aed28ee7dca73bdf01d139e763a9"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"fe33227f6805edab2036cbb80645cc4e2d1fa424","date":1342713534,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/util/LuceneTestCase#newDirectory(Random).mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/util/LuceneTestCase#newDirectory(Random).mjava","sourceNew":"  /**\n   * Returns a new Directory instance, using the specified random.\n   * See {@link #newDirectory()} for more information.\n   */\n  public static MockDirectoryWrapper newDirectory(Random r) {\n    Directory impl = newDirectoryImpl(r, TEST_DIRECTORY);\n    MockDirectoryWrapper dir = new MockDirectoryWrapper(r, maybeNRTWrap(r, impl));\n    closeAfterSuite(new CloseableDirectory(dir, suiteFailureMarker));\n\n    dir.setThrottling(TEST_THROTTLING);\n    if (VERBOSE) {\n      System.out.println(\"NOTE: LuceneTestCase.newDirectory: returning \" + dir);\n    }\n    return dir;\n   }\n\n","sourceOld":"  /**\n   * Returns a new Directory instance, using the specified random.\n   * See {@link #newDirectory()} for more information.\n   */\n  public static MockDirectoryWrapper newDirectory(Random r) throws IOException {\n    Directory impl = newDirectoryImpl(r, TEST_DIRECTORY);\n    MockDirectoryWrapper dir = new MockDirectoryWrapper(r, maybeNRTWrap(r, impl));\n    closeAfterSuite(new CloseableDirectory(dir, suiteFailureMarker));\n\n    dir.setThrottling(TEST_THROTTLING);\n    if (VERBOSE) {\n      System.out.println(\"NOTE: LuceneTestCase.newDirectory: returning \" + dir);\n    }\n    return dir;\n   }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"d19974432be9aed28ee7dca73bdf01d139e763a9","date":1342822166,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/util/LuceneTestCase#newDirectory(Random).mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/util/LuceneTestCase#newDirectory(Random).mjava","sourceNew":"  /**\n   * Returns a new Directory instance, using the specified random.\n   * See {@link #newDirectory()} for more information.\n   */\n  public static BaseDirectoryWrapper newDirectory(Random r) {\n    return wrapDirectory(r, newDirectoryImpl(r, TEST_DIRECTORY), rarely(r));\n  }\n\n","sourceOld":"  /**\n   * Returns a new Directory instance, using the specified random.\n   * See {@link #newDirectory()} for more information.\n   */\n  public static MockDirectoryWrapper newDirectory(Random r) {\n    Directory impl = newDirectoryImpl(r, TEST_DIRECTORY);\n    MockDirectoryWrapper dir = new MockDirectoryWrapper(r, maybeNRTWrap(r, impl));\n    closeAfterSuite(new CloseableDirectory(dir, suiteFailureMarker));\n\n    dir.setThrottling(TEST_THROTTLING);\n    if (VERBOSE) {\n      System.out.println(\"NOTE: LuceneTestCase.newDirectory: returning \" + dir);\n    }\n    return dir;\n   }\n\n","bugFix":["f592e183306e8e4efabf3e7e08d3e709c9b97dbb","732de6718534f7b42fc956f4929b953ef4b1610f","4d3e8520fd031bab31fd0e4d480e55958bc45efe","5da0b42730b6b99b31389ef94cb97384e83b9ede"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4b51f65902cc2d20ddeb7a5b949aaddf990f31a7","date":1343059585,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/util/LuceneTestCase#newDirectory(Random).mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/util/LuceneTestCase#newDirectory(Random).mjava","sourceNew":"  /**\n   * Returns a new Directory instance, using the specified random.\n   * See {@link #newDirectory()} for more information.\n   */\n  public static BaseDirectoryWrapper newDirectory(Random r) {\n    return wrapDirectory(r, newDirectoryImpl(r, TEST_DIRECTORY), rarely(r));\n  }\n\n","sourceOld":"  /**\n   * Returns a new Directory instance, using the specified random.\n   * See {@link #newDirectory()} for more information.\n   */\n  public static MockDirectoryWrapper newDirectory(Random r) {\n    Directory impl = newDirectoryImpl(r, TEST_DIRECTORY);\n    MockDirectoryWrapper dir = new MockDirectoryWrapper(r, maybeNRTWrap(r, impl));\n    closeAfterSuite(new CloseableDirectory(dir, suiteFailureMarker));\n\n    dir.setThrottling(TEST_THROTTLING);\n    if (VERBOSE) {\n      System.out.println(\"NOTE: LuceneTestCase.newDirectory: returning \" + dir);\n    }\n    return dir;\n   }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"aba371508186796cc6151d8223a5b4e16d02e26e","date":1343474871,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/util/LuceneTestCase#newDirectory(Random).mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/util/LuceneTestCase#newDirectory(Random).mjava","sourceNew":"  /**\n   * Returns a new Directory instance, using the specified random.\n   * See {@link #newDirectory()} for more information.\n   */\n  public static BaseDirectoryWrapper newDirectory(Random r) {\n    return wrapDirectory(r, newDirectoryImpl(r, TEST_DIRECTORY), rarely(r));\n  }\n\n","sourceOld":"  /**\n   * Returns a new Directory instance, using the specified random.\n   * See {@link #newDirectory()} for more information.\n   */\n  public static MockDirectoryWrapper newDirectory(Random r) {\n    Directory impl = newDirectoryImpl(r, TEST_DIRECTORY);\n    MockDirectoryWrapper dir = new MockDirectoryWrapper(r, maybeNRTWrap(r, impl));\n    closeAfterSuite(new CloseableDirectory(dir, suiteFailureMarker));\n\n    dir.setThrottling(TEST_THROTTLING);\n    if (VERBOSE) {\n      System.out.println(\"NOTE: LuceneTestCase.newDirectory: returning \" + dir);\n    }\n    return dir;\n   }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e7b7b37c556b53f91c7690ec4fc7f11a41f6b702","date":1578318221,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/util/LuceneTestCase#newDirectory(Random).mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/util/LuceneTestCase#newDirectory(Random).mjava","sourceNew":"  /**\n   * Returns a new Directory instance, using the specified random.\n   * See {@link #newDirectory()} for more information.\n   */\n  public static BaseDirectoryWrapper newDirectory(Random r) {\n    return wrapDirectory(r, newDirectoryImpl(r, TEST_DIRECTORY), rarely(r), false);\n  }\n\n","sourceOld":"  /**\n   * Returns a new Directory instance, using the specified random.\n   * See {@link #newDirectory()} for more information.\n   */\n  public static BaseDirectoryWrapper newDirectory(Random r) {\n    return wrapDirectory(r, newDirectoryImpl(r, TEST_DIRECTORY), rarely(r));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ca62564055241632cd20d65b5ecb8c8e93bd60c4","date":1578383112,"type":3,"author":"Dawid Weiss","isMerge":true,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/util/LuceneTestCase#newDirectory(Random).mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/util/LuceneTestCase#newDirectory(Random).mjava","sourceNew":"  /**\n   * Returns a new Directory instance, using the specified random.\n   * See {@link #newDirectory()} for more information.\n   */\n  public static BaseDirectoryWrapper newDirectory(Random r) {\n    return wrapDirectory(r, newDirectoryImpl(r, TEST_DIRECTORY), rarely(r), false);\n  }\n\n","sourceOld":"  /**\n   * Returns a new Directory instance, using the specified random.\n   * See {@link #newDirectory()} for more information.\n   */\n  public static BaseDirectoryWrapper newDirectory(Random r) {\n    return wrapDirectory(r, newDirectoryImpl(r, TEST_DIRECTORY), rarely(r));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"732de6718534f7b42fc956f4929b953ef4b1610f":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"aba371508186796cc6151d8223a5b4e16d02e26e":["4d3e8520fd031bab31fd0e4d480e55958bc45efe","d19974432be9aed28ee7dca73bdf01d139e763a9"],"d19974432be9aed28ee7dca73bdf01d139e763a9":["4d3e8520fd031bab31fd0e4d480e55958bc45efe"],"5da0b42730b6b99b31389ef94cb97384e83b9ede":["732de6718534f7b42fc956f4929b953ef4b1610f"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"fe33227f6805edab2036cbb80645cc4e2d1fa424":["5da0b42730b6b99b31389ef94cb97384e83b9ede","4d3e8520fd031bab31fd0e4d480e55958bc45efe"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"e7b7b37c556b53f91c7690ec4fc7f11a41f6b702":["d19974432be9aed28ee7dca73bdf01d139e763a9"],"4b51f65902cc2d20ddeb7a5b949aaddf990f31a7":["fe33227f6805edab2036cbb80645cc4e2d1fa424","d19974432be9aed28ee7dca73bdf01d139e763a9"],"4d3e8520fd031bab31fd0e4d480e55958bc45efe":["5da0b42730b6b99b31389ef94cb97384e83b9ede"],"ca62564055241632cd20d65b5ecb8c8e93bd60c4":["d19974432be9aed28ee7dca73bdf01d139e763a9","e7b7b37c556b53f91c7690ec4fc7f11a41f6b702"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["e7b7b37c556b53f91c7690ec4fc7f11a41f6b702"]},"commit2Childs":{"732de6718534f7b42fc956f4929b953ef4b1610f":["5da0b42730b6b99b31389ef94cb97384e83b9ede"],"aba371508186796cc6151d8223a5b4e16d02e26e":[],"d19974432be9aed28ee7dca73bdf01d139e763a9":["aba371508186796cc6151d8223a5b4e16d02e26e","e7b7b37c556b53f91c7690ec4fc7f11a41f6b702","4b51f65902cc2d20ddeb7a5b949aaddf990f31a7","ca62564055241632cd20d65b5ecb8c8e93bd60c4"],"5da0b42730b6b99b31389ef94cb97384e83b9ede":["fe33227f6805edab2036cbb80645cc4e2d1fa424","4d3e8520fd031bab31fd0e4d480e55958bc45efe"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["732de6718534f7b42fc956f4929b953ef4b1610f"],"fe33227f6805edab2036cbb80645cc4e2d1fa424":["4b51f65902cc2d20ddeb7a5b949aaddf990f31a7"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"e7b7b37c556b53f91c7690ec4fc7f11a41f6b702":["ca62564055241632cd20d65b5ecb8c8e93bd60c4","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"4b51f65902cc2d20ddeb7a5b949aaddf990f31a7":[],"4d3e8520fd031bab31fd0e4d480e55958bc45efe":["aba371508186796cc6151d8223a5b4e16d02e26e","d19974432be9aed28ee7dca73bdf01d139e763a9","fe33227f6805edab2036cbb80645cc4e2d1fa424"],"ca62564055241632cd20d65b5ecb8c8e93bd60c4":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["aba371508186796cc6151d8223a5b4e16d02e26e","4b51f65902cc2d20ddeb7a5b949aaddf990f31a7","ca62564055241632cd20d65b5ecb8c8e93bd60c4","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}