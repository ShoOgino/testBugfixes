{"path":"solr/core/src/test/org/apache/solr/core/ResourceLoaderTest#testInstanceDir().mjava","commits":[{"id":"c903c3d15906a3da96b8c0c2fb704491005fdbdb","date":1453508227,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/core/ResourceLoaderTest#testInstanceDir().mjava","pathOld":"solr/src/test/org/apache/solr/core/ResourceLoaderTest#testInstanceDir().mjava","sourceNew":"  public void testInstanceDir() throws Exception {\n    SolrResourceLoader loader = new SolrResourceLoader(null);\n    String instDir = loader.getInstanceDir();\n    assertTrue(instDir + \" is not equal to \" + \"solr/\", instDir.equals(\"solr/\") == true);\n\n    loader = new SolrResourceLoader(\"solr\");\n    instDir = loader.getInstanceDir();\n    assertTrue(instDir + \" is not equal to \" + \"solr/\", instDir.equals(\"solr\" + File.separator) == true);\n  }\n\n","sourceOld":"  public void testInstanceDir() throws Exception {\n    SolrResourceLoader loader = new SolrResourceLoader(null);\n    String instDir = loader.getInstanceDir();\n    assertTrue(instDir + \" is not equal to \" + \"solr/\", instDir.equals(\"solr/\") == true);\n\n    loader = new SolrResourceLoader(\"solr\");\n    instDir = loader.getInstanceDir();\n    assertTrue(instDir + \" is not equal to \" + \"solr/\", instDir.equals(\"solr\" + File.separator) == true);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a258fbb26824fd104ed795e5d9033d2d040049ee","date":1453508252,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/core/ResourceLoaderTest#testInstanceDir().mjava","pathOld":"solr/src/test/org/apache/solr/core/ResourceLoaderTest#testInstanceDir().mjava","sourceNew":"  public void testInstanceDir() throws Exception {\n    SolrResourceLoader loader = new SolrResourceLoader(null);\n    String instDir = loader.getInstanceDir();\n    assertTrue(instDir + \" is not equal to \" + \"solr/\", instDir.equals(\"solr/\") == true);\n\n    loader = new SolrResourceLoader(\"solr\");\n    instDir = loader.getInstanceDir();\n    assertTrue(instDir + \" is not equal to \" + \"solr/\", instDir.equals(\"solr\" + File.separator) == true);\n  }\n\n","sourceOld":"  public void testInstanceDir() throws Exception {\n    SolrResourceLoader loader = new SolrResourceLoader(null);\n    String instDir = loader.getInstanceDir();\n    assertTrue(instDir + \" is not equal to \" + \"solr/\", instDir.equals(\"solr/\") == true);\n\n    loader = new SolrResourceLoader(\"solr\");\n    instDir = loader.getInstanceDir();\n    assertTrue(instDir + \" is not equal to \" + \"solr/\", instDir.equals(\"solr\" + File.separator) == true);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/core/ResourceLoaderTest#testInstanceDir().mjava","pathOld":"solr/src/test/org/apache/solr/core/ResourceLoaderTest#testInstanceDir().mjava","sourceNew":"  public void testInstanceDir() throws Exception {\n    SolrResourceLoader loader = new SolrResourceLoader(null);\n    String instDir = loader.getInstanceDir();\n    assertTrue(instDir + \" is not equal to \" + \"solr/\", instDir.equals(\"solr/\") == true);\n\n    loader = new SolrResourceLoader(\"solr\");\n    instDir = loader.getInstanceDir();\n    assertTrue(instDir + \" is not equal to \" + \"solr/\", instDir.equals(\"solr\" + File.separator) == true);\n  }\n\n","sourceOld":"  public void testInstanceDir() throws Exception {\n    SolrResourceLoader loader = new SolrResourceLoader(null);\n    String instDir = loader.getInstanceDir();\n    assertTrue(instDir + \" is not equal to \" + \"solr/\", instDir.equals(\"solr/\") == true);\n\n    loader = new SolrResourceLoader(\"solr\");\n    instDir = loader.getInstanceDir();\n    assertTrue(instDir + \" is not equal to \" + \"solr/\", instDir.equals(\"solr\" + File.separator) == true);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"824d674c7c80eeddb2c2e429f92d3b15688d8393","date":1379775111,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/core/ResourceLoaderTest#testInstanceDir().mjava","pathOld":"solr/core/src/test/org/apache/solr/core/ResourceLoaderTest#testInstanceDir().mjava","sourceNew":"  public void testInstanceDir() throws Exception {\n    SolrResourceLoader loader = new SolrResourceLoader(null);\n    String instDir = loader.getInstanceDir();\n    assertTrue(instDir + \" is not equal to \" + \"solr/\", instDir.equals(\"solr/\") == true);\n    loader.close();\n\n    loader = new SolrResourceLoader(\"solr\");\n    instDir = loader.getInstanceDir();\n    assertTrue(instDir + \" is not equal to \" + \"solr/\", instDir.equals(\"solr\" + File.separator) == true);\n    loader.close();\n  }\n\n","sourceOld":"  public void testInstanceDir() throws Exception {\n    SolrResourceLoader loader = new SolrResourceLoader(null);\n    String instDir = loader.getInstanceDir();\n    assertTrue(instDir + \" is not equal to \" + \"solr/\", instDir.equals(\"solr/\") == true);\n\n    loader = new SolrResourceLoader(\"solr\");\n    instDir = loader.getInstanceDir();\n    assertTrue(instDir + \" is not equal to \" + \"solr/\", instDir.equals(\"solr\" + File.separator) == true);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a626ec4d1c92e59fe390724d6220081047b03ce7","date":1448021525,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/core/ResourceLoaderTest#testInstanceDir().mjava","pathOld":"solr/core/src/test/org/apache/solr/core/ResourceLoaderTest#testInstanceDir().mjava","sourceNew":"  public void testInstanceDir() throws Exception {\n    try (SolrResourceLoader loader = new SolrResourceLoader()) {\n      assertThat(loader.getInstancePath(), is(Paths.get(\"solr\").toAbsolutePath()));\n    }\n  }\n\n","sourceOld":"  public void testInstanceDir() throws Exception {\n    SolrResourceLoader loader = new SolrResourceLoader(null);\n    String instDir = loader.getInstanceDir();\n    assertTrue(instDir + \" is not equal to \" + \"solr/\", instDir.equals(\"solr/\") == true);\n    loader.close();\n\n    loader = new SolrResourceLoader(\"solr\");\n    instDir = loader.getInstanceDir();\n    assertTrue(instDir + \" is not equal to \" + \"solr/\", instDir.equals(\"solr\" + File.separator) == true);\n    loader.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a626ec4d1c92e59fe390724d6220081047b03ce7":["824d674c7c80eeddb2c2e429f92d3b15688d8393"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"c26f00b574427b55127e869b935845554afde1fa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","c903c3d15906a3da96b8c0c2fb704491005fdbdb"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a258fbb26824fd104ed795e5d9033d2d040049ee":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"824d674c7c80eeddb2c2e429f92d3b15688d8393":["c26f00b574427b55127e869b935845554afde1fa"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a626ec4d1c92e59fe390724d6220081047b03ce7"]},"commit2Childs":{"a626ec4d1c92e59fe390724d6220081047b03ce7":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["c26f00b574427b55127e869b935845554afde1fa"],"c26f00b574427b55127e869b935845554afde1fa":["824d674c7c80eeddb2c2e429f92d3b15688d8393"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c903c3d15906a3da96b8c0c2fb704491005fdbdb","c26f00b574427b55127e869b935845554afde1fa","a258fbb26824fd104ed795e5d9033d2d040049ee"],"a258fbb26824fd104ed795e5d9033d2d040049ee":[],"824d674c7c80eeddb2c2e429f92d3b15688d8393":["a626ec4d1c92e59fe390724d6220081047b03ce7"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a258fbb26824fd104ed795e5d9033d2d040049ee","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}