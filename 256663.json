{"path":"lucene/core/src/java/org/apache/lucene/util/automaton/UTF32ToUTF8#all(int,int,int,int,int).mjava","commits":[{"id":"4ca1c732df8923f5624f6c06b1dcca9e69d98c96","date":1402957391,"type":1,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/automaton/UTF32ToUTF8#all(int,int,int,int,int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/automaton/UTF32ToUTF8Light#all(int,int,int,int,int).mjava","sourceNew":"  private void all(int start, int end, int startCode, int endCode, int left) {\n    if (left == 0) {\n      //start.addTransition(new Transition(startCode, endCode, end));  // type=all\n      utf8.addTransition(start, end, startCode, endCode);\n    } else {\n      int lastN = utf8.createState();\n      //start.addTransition(new Transition(startCode, endCode, lastN));  // type=all\n      utf8.addTransition(start, lastN, startCode, endCode);\n      while (left > 1) {\n        int n = utf8.createState();\n        //lastN.addTransition(new Transition(128, 191, n));  // type=all*\n        utf8.addTransition(lastN, n, 128, 191); // type=all*\n        left--;\n        lastN = n;\n      }\n      //lastN.addTransition(new Transition(128, 191, end)); // type = all*\n      utf8.addTransition(lastN, end, 128, 191); // type = all*\n    }\n  }\n\n","sourceOld":"  private void all(int start, int end, int startCode, int endCode, int left) {\n    if (left == 0) {\n      //start.addTransition(new Transition(startCode, endCode, end));  // type=all\n      utf8.addTransition(start, end, startCode, endCode);\n    } else {\n      int lastN = utf8.createState();\n      //start.addTransition(new Transition(startCode, endCode, lastN));  // type=all\n      utf8.addTransition(start, lastN, startCode, endCode);\n      while (left > 1) {\n        int n = utf8.createState();\n        //lastN.addTransition(new Transition(128, 191, n));  // type=all*\n        utf8.addTransition(lastN, n, 128, 191); // type=all*\n        left--;\n        lastN = n;\n      }\n      //lastN.addTransition(new Transition(128, 191, end)); // type = all*\n      utf8.addTransition(lastN, end, 128, 191); // type = all*\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5c84485629d80d203608e8975a1139de9933cc38","date":1403166128,"type":0,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/util/automaton/UTF32ToUTF8#all(int,int,int,int,int).mjava","pathOld":"/dev/null","sourceNew":"  private void all(int start, int end, int startCode, int endCode, int left) {\n    if (left == 0) {\n      //start.addTransition(new Transition(startCode, endCode, end));  // type=all\n      utf8.addTransition(start, end, startCode, endCode);\n    } else {\n      int lastN = utf8.createState();\n      //start.addTransition(new Transition(startCode, endCode, lastN));  // type=all\n      utf8.addTransition(start, lastN, startCode, endCode);\n      while (left > 1) {\n        int n = utf8.createState();\n        //lastN.addTransition(new Transition(128, 191, n));  // type=all*\n        utf8.addTransition(lastN, n, 128, 191); // type=all*\n        left--;\n        lastN = n;\n      }\n      //lastN.addTransition(new Transition(128, 191, end)); // type = all*\n      utf8.addTransition(lastN, end, 128, 191); // type = all*\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"4ca1c732df8923f5624f6c06b1dcca9e69d98c96":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"5c84485629d80d203608e8975a1139de9933cc38":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","4ca1c732df8923f5624f6c06b1dcca9e69d98c96"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["5c84485629d80d203608e8975a1139de9933cc38"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["4ca1c732df8923f5624f6c06b1dcca9e69d98c96","5c84485629d80d203608e8975a1139de9933cc38"],"4ca1c732df8923f5624f6c06b1dcca9e69d98c96":["5c84485629d80d203608e8975a1139de9933cc38"],"5c84485629d80d203608e8975a1139de9933cc38":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}