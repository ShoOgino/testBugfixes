{"path":"lucene/backwards/src/java/org/apache/lucene/search/Collector#acceptsDocsOutOfOrder().mjava","commits":[{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/backwards/src/java/org/apache/lucene/search/Collector#acceptsDocsOutOfOrder().mjava","pathOld":"backwards/src/java/org/apache/lucene/search/Collector#acceptsDocsOutOfOrder().mjava","sourceNew":"  /**\n   * Returns true iff this {@link Collector} can accept documents given to\n   * {@link #collect(int)} out of order.\n   * <p>\n   * NOTE: some collectors can work in either mode, with a more efficient\n   * implementation for in-order docs collection. If your collector can work in\n   * either mode, it is recommended that you create two variants of it, since\n   * some queries work much faster if out-of-order collection is supported by a\n   * {@link Collector}.\n   */\n  public abstract boolean acceptsDocsOutOfOrder();\n\n","sourceOld":"  /**\n   * Returns true iff this {@link Collector} can accept documents given to\n   * {@link #collect(int)} out of order.\n   * <p>\n   * NOTE: some collectors can work in either mode, with a more efficient\n   * implementation for in-order docs collection. If your collector can work in\n   * either mode, it is recommended that you create two variants of it, since\n   * some queries work much faster if out-of-order collection is supported by a\n   * {@link Collector}.\n   */\n  public abstract boolean acceptsDocsOutOfOrder();\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"90eca6fcb6635ca73ea4fdbe2f57d2033b66d3b6","date":1272983566,"type":4,"author":"Uwe Schindler","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/backwards/src/java/org/apache/lucene/search/Collector#acceptsDocsOutOfOrder().mjava","sourceNew":null,"sourceOld":"  /**\n   * Returns true iff this {@link Collector} can accept documents given to\n   * {@link #collect(int)} out of order.\n   * <p>\n   * NOTE: some collectors can work in either mode, with a more efficient\n   * implementation for in-order docs collection. If your collector can work in\n   * either mode, it is recommended that you create two variants of it, since\n   * some queries work much faster if out-of-order collection is supported by a\n   * {@link Collector}.\n   */\n  public abstract boolean acceptsDocsOutOfOrder();\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"90eca6fcb6635ca73ea4fdbe2f57d2033b66d3b6":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["90eca6fcb6635ca73ea4fdbe2f57d2033b66d3b6"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"90eca6fcb6635ca73ea4fdbe2f57d2033b66d3b6":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["90eca6fcb6635ca73ea4fdbe2f57d2033b66d3b6"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}