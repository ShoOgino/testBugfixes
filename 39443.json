{"path":"lucene/contrib/misc/src/java/org/apache/lucene/index/FieldNormModifier#main(String[]).mjava","commits":[{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/contrib/misc/src/java/org/apache/lucene/index/FieldNormModifier#main(String[]).mjava","pathOld":"contrib/misc/src/java/org/apache/lucene/index/FieldNormModifier#main(String[]).mjava","sourceNew":"  /**\n   * Command Line Execution method.\n   *\n   * <pre>\n   * Usage: FieldNormModifier /path/index &lt;package.SimilarityClassName | -n&gt; field1 field2 ...\n   * </pre>\n   */\n  public static void main(String[] args) throws IOException {\n    if (args.length < 3) {\n      System.err.println(\"Usage: FieldNormModifier <index> <package.SimilarityClassName | -n> <field1> [field2] ...\");\n      System.exit(1);\n    }\n\n    Similarity s = null;\n    if (!args[1].equals(\"-n\")) {\n      try {\n        s = Class.forName(args[1]).asSubclass(Similarity.class).newInstance();\n      } catch (Exception e) {\n        System.err.println(\"Couldn't instantiate similarity with empty constructor: \" + args[1]);\n        e.printStackTrace(System.err);\n        System.exit(1);\n      }\n    }\n\n    Directory d = FSDirectory.open(new File(args[0]));\n    FieldNormModifier fnm = new FieldNormModifier(d, s);\n\n    for (int i = 2; i < args.length; i++) {\n      System.out.print(\"Updating field: \" + args[i] + \" \" + (new Date()).toString() + \" ... \");\n      fnm.reSetNorms(args[i]);\n      System.out.println(new Date().toString());\n    }\n    \n    d.close();\n  }\n\n","sourceOld":"  /**\n   * Command Line Execution method.\n   *\n   * <pre>\n   * Usage: FieldNormModifier /path/index &lt;package.SimilarityClassName | -n&gt; field1 field2 ...\n   * </pre>\n   */\n  public static void main(String[] args) throws IOException {\n    if (args.length < 3) {\n      System.err.println(\"Usage: FieldNormModifier <index> <package.SimilarityClassName | -n> <field1> [field2] ...\");\n      System.exit(1);\n    }\n\n    Similarity s = null;\n    if (!args[1].equals(\"-n\")) {\n      try {\n        s = Class.forName(args[1]).asSubclass(Similarity.class).newInstance();\n      } catch (Exception e) {\n        System.err.println(\"Couldn't instantiate similarity with empty constructor: \" + args[1]);\n        e.printStackTrace(System.err);\n        System.exit(1);\n      }\n    }\n\n    Directory d = FSDirectory.open(new File(args[0]));\n    FieldNormModifier fnm = new FieldNormModifier(d, s);\n\n    for (int i = 2; i < args.length; i++) {\n      System.out.print(\"Updating field: \" + args[i] + \" \" + (new Date()).toString() + \" ... \");\n      fnm.reSetNorms(args[i]);\n      System.out.println(new Date().toString());\n    }\n    \n    d.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4e8cc373c801e54cec75daf9f52792cb4b17f536","date":1291116159,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/contrib/misc/src/java/org/apache/lucene/index/FieldNormModifier#main(String[]).mjava","pathOld":"lucene/contrib/misc/src/java/org/apache/lucene/index/FieldNormModifier#main(String[]).mjava","sourceNew":"  /**\n   * Command Line Execution method.\n   *\n   * <pre>\n   * Usage: FieldNormModifier /path/index &lt;package.SimilarityClassName | -n&gt; field1 field2 ...\n   * </pre>\n   */\n  public static void main(String[] args) throws IOException {\n    if (args.length < 3) {\n      System.err.println(\"Usage: FieldNormModifier <index> <package.SimilarityClassName | -d> <field1> [field2] ...\");\n      System.exit(1);\n    }\n\n    Similarity s = null;\n\n    if (args[1].equals(\"-d\"))\n      args[1] = DefaultSimilarity.class.getName();\n\n    try {\n      s = Class.forName(args[1]).asSubclass(Similarity.class).newInstance();\n    } catch (Exception e) {\n      System.err.println(\"Couldn't instantiate similarity with empty constructor: \" + args[1]);\n      e.printStackTrace(System.err);\n      System.exit(1);\n    }\n\n    Directory d = FSDirectory.open(new File(args[0]));\n    FieldNormModifier fnm = new FieldNormModifier(d, s);\n\n    for (int i = 2; i < args.length; i++) {\n      System.out.print(\"Updating field: \" + args[i] + \" \" + (new Date()).toString() + \" ... \");\n      fnm.reSetNorms(args[i]);\n      System.out.println(new Date().toString());\n    }\n    \n    d.close();\n  }\n\n","sourceOld":"  /**\n   * Command Line Execution method.\n   *\n   * <pre>\n   * Usage: FieldNormModifier /path/index &lt;package.SimilarityClassName | -n&gt; field1 field2 ...\n   * </pre>\n   */\n  public static void main(String[] args) throws IOException {\n    if (args.length < 3) {\n      System.err.println(\"Usage: FieldNormModifier <index> <package.SimilarityClassName | -n> <field1> [field2] ...\");\n      System.exit(1);\n    }\n\n    Similarity s = null;\n    if (!args[1].equals(\"-n\")) {\n      try {\n        s = Class.forName(args[1]).asSubclass(Similarity.class).newInstance();\n      } catch (Exception e) {\n        System.err.println(\"Couldn't instantiate similarity with empty constructor: \" + args[1]);\n        e.printStackTrace(System.err);\n        System.exit(1);\n      }\n    }\n\n    Directory d = FSDirectory.open(new File(args[0]));\n    FieldNormModifier fnm = new FieldNormModifier(d, s);\n\n    for (int i = 2; i < args.length; i++) {\n      System.out.print(\"Updating field: \" + args[i] + \" \" + (new Date()).toString() + \" ... \");\n      fnm.reSetNorms(args[i]);\n      System.out.println(new Date().toString());\n    }\n    \n    d.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3bb13258feba31ab676502787ab2e1779f129b7a","date":1291596436,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/contrib/misc/src/java/org/apache/lucene/index/FieldNormModifier#main(String[]).mjava","pathOld":"lucene/contrib/misc/src/java/org/apache/lucene/index/FieldNormModifier#main(String[]).mjava","sourceNew":"  /**\n   * Command Line Execution method.\n   *\n   * <pre>\n   * Usage: FieldNormModifier /path/index &lt;package.SimilarityClassName | -n&gt; field1 field2 ...\n   * </pre>\n   */\n  public static void main(String[] args) throws IOException {\n    if (args.length < 3) {\n      System.err.println(\"Usage: FieldNormModifier <index> <package.SimilarityClassName | -d> <field1> [field2] ...\");\n      System.exit(1);\n    }\n\n    Similarity s = null;\n\n    if (args[1].equals(\"-d\"))\n      args[1] = DefaultSimilarity.class.getName();\n\n    try {\n      s = Class.forName(args[1]).asSubclass(Similarity.class).newInstance();\n    } catch (Exception e) {\n      System.err.println(\"Couldn't instantiate similarity with empty constructor: \" + args[1]);\n      e.printStackTrace(System.err);\n      System.exit(1);\n    }\n\n    Directory d = FSDirectory.open(new File(args[0]));\n    FieldNormModifier fnm = new FieldNormModifier(d, s);\n\n    for (int i = 2; i < args.length; i++) {\n      System.out.print(\"Updating field: \" + args[i] + \" \" + (new Date()).toString() + \" ... \");\n      fnm.reSetNorms(args[i]);\n      System.out.println(new Date().toString());\n    }\n    \n    d.close();\n  }\n\n","sourceOld":"  /**\n   * Command Line Execution method.\n   *\n   * <pre>\n   * Usage: FieldNormModifier /path/index &lt;package.SimilarityClassName | -n&gt; field1 field2 ...\n   * </pre>\n   */\n  public static void main(String[] args) throws IOException {\n    if (args.length < 3) {\n      System.err.println(\"Usage: FieldNormModifier <index> <package.SimilarityClassName | -n> <field1> [field2] ...\");\n      System.exit(1);\n    }\n\n    Similarity s = null;\n    if (!args[1].equals(\"-n\")) {\n      try {\n        s = Class.forName(args[1]).asSubclass(Similarity.class).newInstance();\n      } catch (Exception e) {\n        System.err.println(\"Couldn't instantiate similarity with empty constructor: \" + args[1]);\n        e.printStackTrace(System.err);\n        System.exit(1);\n      }\n    }\n\n    Directory d = FSDirectory.open(new File(args[0]));\n    FieldNormModifier fnm = new FieldNormModifier(d, s);\n\n    for (int i = 2; i < args.length; i++) {\n      System.out.print(\"Updating field: \" + args[i] + \" \" + (new Date()).toString() + \" ... \");\n      fnm.reSetNorms(args[i]);\n      System.out.println(new Date().toString());\n    }\n    \n    d.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","date":1292920096,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/contrib/misc/src/java/org/apache/lucene/index/FieldNormModifier#main(String[]).mjava","pathOld":"lucene/contrib/misc/src/java/org/apache/lucene/index/FieldNormModifier#main(String[]).mjava","sourceNew":"  /**\n   * Command Line Execution method.\n   *\n   * <pre>\n   * Usage: FieldNormModifier /path/index &lt;package.SimilarityClassName | -n&gt; field1 field2 ...\n   * </pre>\n   */\n  public static void main(String[] args) throws IOException {\n    if (args.length < 3) {\n      System.err.println(\"Usage: FieldNormModifier <index> <package.SimilarityClassName | -d> <field1> [field2] ...\");\n      System.exit(1);\n    }\n\n    Similarity s = null;\n\n    if (args[1].equals(\"-d\"))\n      args[1] = DefaultSimilarity.class.getName();\n\n    try {\n      s = Class.forName(args[1]).asSubclass(Similarity.class).newInstance();\n    } catch (Exception e) {\n      System.err.println(\"Couldn't instantiate similarity with empty constructor: \" + args[1]);\n      e.printStackTrace(System.err);\n      System.exit(1);\n    }\n\n    Directory d = FSDirectory.open(new File(args[0]));\n    FieldNormModifier fnm = new FieldNormModifier(d, s);\n\n    for (int i = 2; i < args.length; i++) {\n      System.out.print(\"Updating field: \" + args[i] + \" \" + (new Date()).toString() + \" ... \");\n      fnm.reSetNorms(args[i]);\n      System.out.println(new Date().toString());\n    }\n    \n    d.close();\n  }\n\n","sourceOld":"  /**\n   * Command Line Execution method.\n   *\n   * <pre>\n   * Usage: FieldNormModifier /path/index &lt;package.SimilarityClassName | -n&gt; field1 field2 ...\n   * </pre>\n   */\n  public static void main(String[] args) throws IOException {\n    if (args.length < 3) {\n      System.err.println(\"Usage: FieldNormModifier <index> <package.SimilarityClassName | -n> <field1> [field2] ...\");\n      System.exit(1);\n    }\n\n    Similarity s = null;\n    if (!args[1].equals(\"-n\")) {\n      try {\n        s = Class.forName(args[1]).asSubclass(Similarity.class).newInstance();\n      } catch (Exception e) {\n        System.err.println(\"Couldn't instantiate similarity with empty constructor: \" + args[1]);\n        e.printStackTrace(System.err);\n        System.exit(1);\n      }\n    }\n\n    Directory d = FSDirectory.open(new File(args[0]));\n    FieldNormModifier fnm = new FieldNormModifier(d, s);\n\n    for (int i = 2; i < args.length; i++) {\n      System.out.print(\"Updating field: \" + args[i] + \" \" + (new Date()).toString() + \" ... \");\n      fnm.reSetNorms(args[i]);\n      System.out.println(new Date().toString());\n    }\n    \n    d.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fd9325c7ff9928fabe81c28553b41fc7aa57dfab","date":1295896411,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/contrib/misc/src/java/org/apache/lucene/index/FieldNormModifier#main(String[]).mjava","pathOld":"lucene/contrib/misc/src/java/org/apache/lucene/index/FieldNormModifier#main(String[]).mjava","sourceNew":"  /**\n   * Command Line Execution method.\n   *\n   * <pre>\n   * Usage: FieldNormModifier /path/index &lt;package.SimilarityClassName | -n&gt; field1 field2 ...\n   * </pre>\n   */\n  public static void main(String[] args) throws IOException {\n    if (args.length < 3) {\n      System.err.println(\"Usage: FieldNormModifier <index> <package.SimilarityClassName | -d> <field1> [field2] ...\");\n      System.exit(1);\n    }\n\n    SimilarityProvider s = null;\n\n    if (args[1].equals(\"-d\"))\n      args[1] = DefaultSimilarity.class.getName();\n\n    try {\n      s = Class.forName(args[1]).asSubclass(SimilarityProvider.class).newInstance();\n    } catch (Exception e) {\n      System.err.println(\"Couldn't instantiate similarity with empty constructor: \" + args[1]);\n      e.printStackTrace(System.err);\n      System.exit(1);\n    }\n\n    Directory d = FSDirectory.open(new File(args[0]));\n    FieldNormModifier fnm = new FieldNormModifier(d, s);\n\n    for (int i = 2; i < args.length; i++) {\n      System.out.print(\"Updating field: \" + args[i] + \" \" + (new Date()).toString() + \" ... \");\n      fnm.reSetNorms(args[i]);\n      System.out.println(new Date().toString());\n    }\n    \n    d.close();\n  }\n\n","sourceOld":"  /**\n   * Command Line Execution method.\n   *\n   * <pre>\n   * Usage: FieldNormModifier /path/index &lt;package.SimilarityClassName | -n&gt; field1 field2 ...\n   * </pre>\n   */\n  public static void main(String[] args) throws IOException {\n    if (args.length < 3) {\n      System.err.println(\"Usage: FieldNormModifier <index> <package.SimilarityClassName | -d> <field1> [field2] ...\");\n      System.exit(1);\n    }\n\n    Similarity s = null;\n\n    if (args[1].equals(\"-d\"))\n      args[1] = DefaultSimilarity.class.getName();\n\n    try {\n      s = Class.forName(args[1]).asSubclass(Similarity.class).newInstance();\n    } catch (Exception e) {\n      System.err.println(\"Couldn't instantiate similarity with empty constructor: \" + args[1]);\n      e.printStackTrace(System.err);\n      System.exit(1);\n    }\n\n    Directory d = FSDirectory.open(new File(args[0]));\n    FieldNormModifier fnm = new FieldNormModifier(d, s);\n\n    for (int i = 2; i < args.length; i++) {\n      System.out.print(\"Updating field: \" + args[i] + \" \" + (new Date()).toString() + \" ... \");\n      fnm.reSetNorms(args[i]);\n      System.out.println(new Date().toString());\n    }\n    \n    d.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bb9b72f7c3d7827c64dd4ec580ded81778da361d","date":1295897920,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/contrib/misc/src/java/org/apache/lucene/index/FieldNormModifier#main(String[]).mjava","pathOld":"lucene/contrib/misc/src/java/org/apache/lucene/index/FieldNormModifier#main(String[]).mjava","sourceNew":"  /**\n   * Command Line Execution method.\n   *\n   * <pre>\n   * Usage: FieldNormModifier /path/index &lt;package.SimilarityClassName | -n&gt; field1 field2 ...\n   * </pre>\n   */\n  public static void main(String[] args) throws IOException {\n    if (args.length < 3) {\n      System.err.println(\"Usage: FieldNormModifier <index> <package.SimilarityClassName | -d> <field1> [field2] ...\");\n      System.exit(1);\n    }\n\n    SimilarityProvider s = null;\n\n    if (args[1].equals(\"-d\"))\n      args[1] = DefaultSimilarity.class.getName();\n\n    try {\n      s = Class.forName(args[1]).asSubclass(SimilarityProvider.class).newInstance();\n    } catch (Exception e) {\n      System.err.println(\"Couldn't instantiate similarity with empty constructor: \" + args[1]);\n      e.printStackTrace(System.err);\n      System.exit(1);\n    }\n\n    Directory d = FSDirectory.open(new File(args[0]));\n    FieldNormModifier fnm = new FieldNormModifier(d, s);\n\n    for (int i = 2; i < args.length; i++) {\n      System.out.print(\"Updating field: \" + args[i] + \" \" + (new Date()).toString() + \" ... \");\n      fnm.reSetNorms(args[i]);\n      System.out.println(new Date().toString());\n    }\n    \n    d.close();\n  }\n\n","sourceOld":"  /**\n   * Command Line Execution method.\n   *\n   * <pre>\n   * Usage: FieldNormModifier /path/index &lt;package.SimilarityClassName | -n&gt; field1 field2 ...\n   * </pre>\n   */\n  public static void main(String[] args) throws IOException {\n    if (args.length < 3) {\n      System.err.println(\"Usage: FieldNormModifier <index> <package.SimilarityClassName | -d> <field1> [field2] ...\");\n      System.exit(1);\n    }\n\n    Similarity s = null;\n\n    if (args[1].equals(\"-d\"))\n      args[1] = DefaultSimilarity.class.getName();\n\n    try {\n      s = Class.forName(args[1]).asSubclass(Similarity.class).newInstance();\n    } catch (Exception e) {\n      System.err.println(\"Couldn't instantiate similarity with empty constructor: \" + args[1]);\n      e.printStackTrace(System.err);\n      System.exit(1);\n    }\n\n    Directory d = FSDirectory.open(new File(args[0]));\n    FieldNormModifier fnm = new FieldNormModifier(d, s);\n\n    for (int i = 2; i < args.length; i++) {\n      System.out.print(\"Updating field: \" + args[i] + \" \" + (new Date()).toString() + \" ... \");\n      fnm.reSetNorms(args[i]);\n      System.out.println(new Date().toString());\n    }\n    \n    d.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"29ef99d61cda9641b6250bf9567329a6e65f901d","date":1297244127,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/contrib/misc/src/java/org/apache/lucene/index/FieldNormModifier#main(String[]).mjava","pathOld":"lucene/contrib/misc/src/java/org/apache/lucene/index/FieldNormModifier#main(String[]).mjava","sourceNew":"  /**\n   * Command Line Execution method.\n   *\n   * <pre>\n   * Usage: FieldNormModifier /path/index &lt;package.SimilarityClassName | -n&gt; field1 field2 ...\n   * </pre>\n   */\n  public static void main(String[] args) throws IOException {\n    if (args.length < 3) {\n      System.err.println(\"Usage: FieldNormModifier <index> <package.SimilarityClassName | -d> <field1> [field2] ...\");\n      System.exit(1);\n    }\n\n    SimilarityProvider s = null;\n\n    if (args[1].equals(\"-d\"))\n      args[1] = DefaultSimilarity.class.getName();\n\n    try {\n      s = Class.forName(args[1]).asSubclass(SimilarityProvider.class).newInstance();\n    } catch (Exception e) {\n      System.err.println(\"Couldn't instantiate similarity with empty constructor: \" + args[1]);\n      e.printStackTrace(System.err);\n      System.exit(1);\n    }\n\n    Directory d = FSDirectory.open(new File(args[0]));\n    FieldNormModifier fnm = new FieldNormModifier(d, s);\n\n    for (int i = 2; i < args.length; i++) {\n      System.out.print(\"Updating field: \" + args[i] + \" \" + (new Date()).toString() + \" ... \");\n      fnm.reSetNorms(args[i]);\n      System.out.println(new Date().toString());\n    }\n    \n    d.close();\n  }\n\n","sourceOld":"  /**\n   * Command Line Execution method.\n   *\n   * <pre>\n   * Usage: FieldNormModifier /path/index &lt;package.SimilarityClassName | -n&gt; field1 field2 ...\n   * </pre>\n   */\n  public static void main(String[] args) throws IOException {\n    if (args.length < 3) {\n      System.err.println(\"Usage: FieldNormModifier <index> <package.SimilarityClassName | -d> <field1> [field2] ...\");\n      System.exit(1);\n    }\n\n    Similarity s = null;\n\n    if (args[1].equals(\"-d\"))\n      args[1] = DefaultSimilarity.class.getName();\n\n    try {\n      s = Class.forName(args[1]).asSubclass(Similarity.class).newInstance();\n    } catch (Exception e) {\n      System.err.println(\"Couldn't instantiate similarity with empty constructor: \" + args[1]);\n      e.printStackTrace(System.err);\n      System.exit(1);\n    }\n\n    Directory d = FSDirectory.open(new File(args[0]));\n    FieldNormModifier fnm = new FieldNormModifier(d, s);\n\n    for (int i = 2; i < args.length; i++) {\n      System.out.print(\"Updating field: \" + args[i] + \" \" + (new Date()).toString() + \" ... \");\n      fnm.reSetNorms(args[i]);\n      System.out.println(new Date().toString());\n    }\n    \n    d.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4122a26e1fd0457a340616673a3d3aada370f713","date":1322955654,"type":4,"author":"Uwe Schindler","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/contrib/misc/src/java/org/apache/lucene/index/FieldNormModifier#main(String[]).mjava","sourceNew":null,"sourceOld":"  /**\n   * Command Line Execution method.\n   *\n   * <pre>\n   * Usage: FieldNormModifier /path/index &lt;package.SimilarityClassName | -n&gt; field1 field2 ...\n   * </pre>\n   */\n  public static void main(String[] args) throws IOException {\n    if (args.length < 3) {\n      System.err.println(\"Usage: FieldNormModifier <index> <package.SimilarityClassName | -d> <field1> [field2] ...\");\n      System.exit(1);\n    }\n\n    SimilarityProvider s = null;\n\n    if (args[1].equals(\"-d\"))\n      args[1] = DefaultSimilarity.class.getName();\n\n    try {\n      s = Class.forName(args[1]).asSubclass(SimilarityProvider.class).newInstance();\n    } catch (Exception e) {\n      System.err.println(\"Couldn't instantiate similarity with empty constructor: \" + args[1]);\n      e.printStackTrace(System.err);\n      System.exit(1);\n    }\n\n    Directory d = FSDirectory.open(new File(args[0]));\n    FieldNormModifier fnm = new FieldNormModifier(d, s);\n\n    for (int i = 2; i < args.length; i++) {\n      System.out.print(\"Updating field: \" + args[i] + \" \" + (new Date()).toString() + \" ... \");\n      fnm.reSetNorms(args[i]);\n      System.out.println(new Date().toString());\n    }\n    \n    d.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3615ce4a1f785ae1b779244de52c6a7d99227e60","date":1323422019,"type":4,"author":"Uwe Schindler","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/contrib/misc/src/java/org/apache/lucene/index/FieldNormModifier#main(String[]).mjava","sourceNew":null,"sourceOld":"  /**\n   * Command Line Execution method.\n   *\n   * <pre>\n   * Usage: FieldNormModifier /path/index &lt;package.SimilarityClassName | -n&gt; field1 field2 ...\n   * </pre>\n   */\n  public static void main(String[] args) throws IOException {\n    if (args.length < 3) {\n      System.err.println(\"Usage: FieldNormModifier <index> <package.SimilarityClassName | -d> <field1> [field2] ...\");\n      System.exit(1);\n    }\n\n    SimilarityProvider s = null;\n\n    if (args[1].equals(\"-d\"))\n      args[1] = DefaultSimilarity.class.getName();\n\n    try {\n      s = Class.forName(args[1]).asSubclass(SimilarityProvider.class).newInstance();\n    } catch (Exception e) {\n      System.err.println(\"Couldn't instantiate similarity with empty constructor: \" + args[1]);\n      e.printStackTrace(System.err);\n      System.exit(1);\n    }\n\n    Directory d = FSDirectory.open(new File(args[0]));\n    FieldNormModifier fnm = new FieldNormModifier(d, s);\n\n    for (int i = 2; i < args.length; i++) {\n      System.out.print(\"Updating field: \" + args[i] + \" \" + (new Date()).toString() + \" ... \");\n      fnm.reSetNorms(args[i]);\n      System.out.println(new Date().toString());\n    }\n    \n    d.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ba5bc70a1fc1e0abc1eb4171af0d6f2532711c00","date":1323437438,"type":4,"author":"Robert Muir","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/contrib/misc/src/java/org/apache/lucene/index/FieldNormModifier#main(String[]).mjava","sourceNew":null,"sourceOld":"  /**\n   * Command Line Execution method.\n   *\n   * <pre>\n   * Usage: FieldNormModifier /path/index &lt;package.SimilarityClassName | -n&gt; field1 field2 ...\n   * </pre>\n   */\n  public static void main(String[] args) throws IOException {\n    if (args.length < 3) {\n      System.err.println(\"Usage: FieldNormModifier <index> <package.SimilarityClassName | -d> <field1> [field2] ...\");\n      System.exit(1);\n    }\n\n    SimilarityProvider s = null;\n\n    if (args[1].equals(\"-d\"))\n      args[1] = DefaultSimilarity.class.getName();\n\n    try {\n      s = Class.forName(args[1]).asSubclass(SimilarityProvider.class).newInstance();\n    } catch (Exception e) {\n      System.err.println(\"Couldn't instantiate similarity with empty constructor: \" + args[1]);\n      e.printStackTrace(System.err);\n      System.exit(1);\n    }\n\n    Directory d = FSDirectory.open(new File(args[0]));\n    FieldNormModifier fnm = new FieldNormModifier(d, s);\n\n    for (int i = 2; i < args.length; i++) {\n      System.out.print(\"Updating field: \" + args[i] + \" \" + (new Date()).toString() + \" ... \");\n      fnm.reSetNorms(args[i]);\n      System.out.println(new Date().toString());\n    }\n    \n    d.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"fd9325c7ff9928fabe81c28553b41fc7aa57dfab":["4e8cc373c801e54cec75daf9f52792cb4b17f536"],"ba5bc70a1fc1e0abc1eb4171af0d6f2532711c00":["fd9325c7ff9928fabe81c28553b41fc7aa57dfab","3615ce4a1f785ae1b779244de52c6a7d99227e60"],"29ef99d61cda9641b6250bf9567329a6e65f901d":["3bb13258feba31ab676502787ab2e1779f129b7a","fd9325c7ff9928fabe81c28553b41fc7aa57dfab"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3615ce4a1f785ae1b779244de52c6a7d99227e60":["fd9325c7ff9928fabe81c28553b41fc7aa57dfab","4122a26e1fd0457a340616673a3d3aada370f713"],"4122a26e1fd0457a340616673a3d3aada370f713":["fd9325c7ff9928fabe81c28553b41fc7aa57dfab"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["9454a6510e2db155fb01faa5c049b06ece95fab9","4e8cc373c801e54cec75daf9f52792cb4b17f536"],"3bb13258feba31ab676502787ab2e1779f129b7a":["9454a6510e2db155fb01faa5c049b06ece95fab9","4e8cc373c801e54cec75daf9f52792cb4b17f536"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3615ce4a1f785ae1b779244de52c6a7d99227e60"],"4e8cc373c801e54cec75daf9f52792cb4b17f536":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"bb9b72f7c3d7827c64dd4ec580ded81778da361d":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","fd9325c7ff9928fabe81c28553b41fc7aa57dfab"]},"commit2Childs":{"fd9325c7ff9928fabe81c28553b41fc7aa57dfab":["ba5bc70a1fc1e0abc1eb4171af0d6f2532711c00","29ef99d61cda9641b6250bf9567329a6e65f901d","3615ce4a1f785ae1b779244de52c6a7d99227e60","4122a26e1fd0457a340616673a3d3aada370f713","bb9b72f7c3d7827c64dd4ec580ded81778da361d"],"ba5bc70a1fc1e0abc1eb4171af0d6f2532711c00":[],"29ef99d61cda9641b6250bf9567329a6e65f901d":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"3615ce4a1f785ae1b779244de52c6a7d99227e60":["ba5bc70a1fc1e0abc1eb4171af0d6f2532711c00","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"4122a26e1fd0457a340616673a3d3aada370f713":["3615ce4a1f785ae1b779244de52c6a7d99227e60"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["bb9b72f7c3d7827c64dd4ec580ded81778da361d"],"3bb13258feba31ab676502787ab2e1779f129b7a":["29ef99d61cda9641b6250bf9567329a6e65f901d"],"4e8cc373c801e54cec75daf9f52792cb4b17f536":["fd9325c7ff9928fabe81c28553b41fc7aa57dfab","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","3bb13258feba31ab676502787ab2e1779f129b7a"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","3bb13258feba31ab676502787ab2e1779f129b7a","4e8cc373c801e54cec75daf9f52792cb4b17f536"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"bb9b72f7c3d7827c64dd4ec580ded81778da361d":[]},"heads":["ba5bc70a1fc1e0abc1eb4171af0d6f2532711c00","29ef99d61cda9641b6250bf9567329a6e65f901d","cd5edd1f2b162a5cfa08efd17851a07373a96817","bb9b72f7c3d7827c64dd4ec580ded81778da361d"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}