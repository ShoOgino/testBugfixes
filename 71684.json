{"path":"lucene/core/src/java/org/apache/lucene/util/packed/DirectReader#DirectReader(int,int,IndexInput).mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/packed/DirectReader#DirectReader(int,int,IndexInput).mjava","pathOld":"lucene/src/java/org/apache/lucene/util/packed/DirectReader#DirectReader(int,int,IndexInput).mjava","sourceNew":"  public DirectReader(int bitsPerValue, int valueCount, IndexInput in)\n    throws IOException {\n    this.valueCount = valueCount;\n    this.bitsPerValue = bitsPerValue;\n    this.in = in;\n\n    long v = 1;\n    masks = new long[bitsPerValue];\n    for (int i = 0; i < bitsPerValue; i++) {\n      v *= 2;\n      masks[i] = v - 1;\n    }\n\n    startPointer = in.getFilePointer();\n  }\n\n","sourceOld":"  public DirectReader(int bitsPerValue, int valueCount, IndexInput in)\n    throws IOException {\n    this.valueCount = valueCount;\n    this.bitsPerValue = bitsPerValue;\n    this.in = in;\n\n    long v = 1;\n    masks = new long[bitsPerValue];\n    for (int i = 0; i < bitsPerValue; i++) {\n      v *= 2;\n      masks[i] = v - 1;\n    }\n\n    startPointer = in.getFilePointer();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4a470c93b2b0f8f51241f52705fc110a01f27ad2","date":1337969379,"type":5,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/packed/DirectPackedReader#DirectPackedReader(int,int,IndexInput).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/packed/DirectReader#DirectReader(int,int,IndexInput).mjava","sourceNew":"  public DirectPackedReader(int bitsPerValue, int valueCount, IndexInput in)\n    throws IOException {\n    super(valueCount, bitsPerValue);\n    this.in = in;\n\n    long v = 1;\n    masks = new long[bitsPerValue];\n    for (int i = 0; i < bitsPerValue; i++) {\n      v *= 2;\n      masks[i] = v - 1;\n    }\n\n    startPointer = in.getFilePointer();\n  }\n\n","sourceOld":"  public DirectReader(int bitsPerValue, int valueCount, IndexInput in)\n    throws IOException {\n    this.valueCount = valueCount;\n    this.bitsPerValue = bitsPerValue;\n    this.in = in;\n\n    long v = 1;\n    masks = new long[bitsPerValue];\n    for (int i = 0; i < bitsPerValue; i++) {\n      v *= 2;\n      masks[i] = v - 1;\n    }\n\n    startPointer = in.getFilePointer();\n  }\n\n","bugFix":null,"bugIntro":["4d3e8520fd031bab31fd0e4d480e55958bc45efe"],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"4a470c93b2b0f8f51241f52705fc110a01f27ad2":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["4a470c93b2b0f8f51241f52705fc110a01f27ad2"]},"commit2Childs":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["4a470c93b2b0f8f51241f52705fc110a01f27ad2"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"4a470c93b2b0f8f51241f52705fc110a01f27ad2":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}