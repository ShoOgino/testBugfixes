{"path":"lucene/analysis/common/src/test/org/apache/lucene/analysis/miscellaneous/TestStemmerOverrideFilter#testOverride().mjava","commits":[{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/miscellaneous/TestStemmerOverrideFilter#testOverride().mjava","pathOld":"modules/analysis/common/src/test/org/apache/lucene/analysis/miscellaneous/TestStemmerOverrideFilter#testOverride().mjava","sourceNew":"  public void testOverride() throws IOException {\n    // lets make booked stem to books\n    // the override filter will convert \"booked\" to \"books\",\n    // but also mark it with KeywordAttribute so Porter will not change it.\n    CharArrayMap<String> dictionary = new CharArrayMap<String>(TEST_VERSION_CURRENT, 1, false);\n    dictionary.put(\"booked\", \"books\");\n    Tokenizer tokenizer = new KeywordTokenizer(new StringReader(\"booked\"));\n    TokenStream stream = new PorterStemFilter(\n        new StemmerOverrideFilter(TEST_VERSION_CURRENT, tokenizer, dictionary));\n    assertTokenStreamContents(stream, new String[] { \"books\" });\n  }\n\n","sourceOld":"  public void testOverride() throws IOException {\n    // lets make booked stem to books\n    // the override filter will convert \"booked\" to \"books\",\n    // but also mark it with KeywordAttribute so Porter will not change it.\n    CharArrayMap<String> dictionary = new CharArrayMap<String>(TEST_VERSION_CURRENT, 1, false);\n    dictionary.put(\"booked\", \"books\");\n    Tokenizer tokenizer = new KeywordTokenizer(new StringReader(\"booked\"));\n    TokenStream stream = new PorterStemFilter(\n        new StemmerOverrideFilter(TEST_VERSION_CURRENT, tokenizer, dictionary));\n    assertTokenStreamContents(stream, new String[] { \"books\" });\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"08dc2bbe7fd8de37a9c71ea07ee8077e6f732373","date":1363790283,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/miscellaneous/TestStemmerOverrideFilter#testOverride().mjava","pathOld":"lucene/analysis/common/src/test/org/apache/lucene/analysis/miscellaneous/TestStemmerOverrideFilter#testOverride().mjava","sourceNew":"  public void testOverride() throws IOException {\n    // lets make booked stem to books\n    // the override filter will convert \"booked\" to \"books\",\n    // but also mark it with KeywordAttribute so Porter will not change it.\n    CharArrayMap<String> dictionary = new CharArrayMap<String>(TEST_VERSION_CURRENT, 1, false);\n    dictionary.put(\"booked\", \"books\");\n    Tokenizer tokenizer = new KeywordTokenizer(new StringReader(\"booked\"));\n    TokenStream stream = new PorterStemFilter(\n        new StemmerOverrideFilter(tokenizer, dictionary));\n    assertTokenStreamContents(stream, new String[] { \"books\" });\n  }\n\n","sourceOld":"  public void testOverride() throws IOException {\n    // lets make booked stem to books\n    // the override filter will convert \"booked\" to \"books\",\n    // but also mark it with KeywordAttribute so Porter will not change it.\n    CharArrayMap<String> dictionary = new CharArrayMap<String>(TEST_VERSION_CURRENT, 1, false);\n    dictionary.put(\"booked\", \"books\");\n    Tokenizer tokenizer = new KeywordTokenizer(new StringReader(\"booked\"));\n    TokenStream stream = new PorterStemFilter(\n        new StemmerOverrideFilter(TEST_VERSION_CURRENT, tokenizer, dictionary));\n    assertTokenStreamContents(stream, new String[] { \"books\" });\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7476b30b7c03f9027676c9df28fda37629da2c97","date":1364206093,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/miscellaneous/TestStemmerOverrideFilter#testOverride().mjava","pathOld":"lucene/analysis/common/src/test/org/apache/lucene/analysis/miscellaneous/TestStemmerOverrideFilter#testOverride().mjava","sourceNew":"  public void testOverride() throws IOException {\n    // lets make booked stem to books\n    // the override filter will convert \"booked\" to \"books\",\n    // but also mark it with KeywordAttribute so Porter will not change it.\n    StemmerOverrideFilter.Builder builder = new StemmerOverrideFilter.Builder();\n    builder.add(\"booked\", \"books\");\n    Tokenizer tokenizer = new KeywordTokenizer(new StringReader(\"booked\"));\n    TokenStream stream = new PorterStemFilter(new StemmerOverrideFilter(\n        tokenizer, builder.build()));\n    assertTokenStreamContents(stream, new String[] {\"books\"});\n  }\n\n","sourceOld":"  public void testOverride() throws IOException {\n    // lets make booked stem to books\n    // the override filter will convert \"booked\" to \"books\",\n    // but also mark it with KeywordAttribute so Porter will not change it.\n    CharArrayMap<String> dictionary = new CharArrayMap<String>(TEST_VERSION_CURRENT, 1, false);\n    dictionary.put(\"booked\", \"books\");\n    Tokenizer tokenizer = new KeywordTokenizer(new StringReader(\"booked\"));\n    TokenStream stream = new PorterStemFilter(\n        new StemmerOverrideFilter(tokenizer, dictionary));\n    assertTokenStreamContents(stream, new String[] { \"books\" });\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ae889fd5c8a69f6b5d130d3c895bfa5b04d07338","date":1389274049,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/miscellaneous/TestStemmerOverrideFilter#testOverride().mjava","pathOld":"lucene/analysis/common/src/test/org/apache/lucene/analysis/miscellaneous/TestStemmerOverrideFilter#testOverride().mjava","sourceNew":"  public void testOverride() throws IOException {\n    // lets make booked stem to books\n    // the override filter will convert \"booked\" to \"books\",\n    // but also mark it with KeywordAttribute so Porter will not change it.\n    StemmerOverrideFilter.Builder builder = new StemmerOverrideFilter.Builder();\n    builder.add(\"booked\", \"books\");\n    Tokenizer tokenizer = keywordTokenizer(\"booked\");\n    TokenStream stream = new PorterStemFilter(new StemmerOverrideFilter(\n        tokenizer, builder.build()));\n    assertTokenStreamContents(stream, new String[] {\"books\"});\n  }\n\n","sourceOld":"  public void testOverride() throws IOException {\n    // lets make booked stem to books\n    // the override filter will convert \"booked\" to \"books\",\n    // but also mark it with KeywordAttribute so Porter will not change it.\n    StemmerOverrideFilter.Builder builder = new StemmerOverrideFilter.Builder();\n    builder.add(\"booked\", \"books\");\n    Tokenizer tokenizer = new KeywordTokenizer(new StringReader(\"booked\"));\n    TokenStream stream = new PorterStemFilter(new StemmerOverrideFilter(\n        tokenizer, builder.build()));\n    assertTokenStreamContents(stream, new String[] {\"books\"});\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"7476b30b7c03f9027676c9df28fda37629da2c97":["08dc2bbe7fd8de37a9c71ea07ee8077e6f732373"],"ae889fd5c8a69f6b5d130d3c895bfa5b04d07338":["7476b30b7c03f9027676c9df28fda37629da2c97"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["ae889fd5c8a69f6b5d130d3c895bfa5b04d07338"],"08dc2bbe7fd8de37a9c71ea07ee8077e6f732373":["b89678825b68eccaf09e6ab71675fc0b0af1e099"]},"commit2Childs":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["08dc2bbe7fd8de37a9c71ea07ee8077e6f732373"],"7476b30b7c03f9027676c9df28fda37629da2c97":["ae889fd5c8a69f6b5d130d3c895bfa5b04d07338"],"ae889fd5c8a69f6b5d130d3c895bfa5b04d07338":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"08dc2bbe7fd8de37a9c71ea07ee8077e6f732373":["7476b30b7c03f9027676c9df28fda37629da2c97"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}