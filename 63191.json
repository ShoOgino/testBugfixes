{"path":"lucene/core/src/java/org/apache/lucene/search/ConstantScoreQuery.ConstantScorer#getChildren().mjava","commits":[{"id":"ff4b151d0481767948c290f48b11c2254d64455f","date":1358284609,"type":0,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/ConstantScoreQuery.ConstantScorer#getChildren().mjava","pathOld":"/dev/null","sourceNew":"    @Override\n    public Collection<ChildScorer> getChildren() {\n      if (docIdSetIterator instanceof Scorer)\n        return Collections.singletonList(new ChildScorer((Scorer) docIdSetIterator, \"constant\"));\n      else\n        return Collections.emptyList();\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["81abdee99ea2cd37c59c455411c9948dba325dc5"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"c4015cd39dff8d4dec562d909f9766debac53aa6","date":1358548736,"type":0,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/search/ConstantScoreQuery.ConstantScorer#getChildren().mjava","pathOld":"/dev/null","sourceNew":"    @Override\n    public Collection<ChildScorer> getChildren() {\n      if (docIdSetIterator instanceof Scorer)\n        return Collections.singletonList(new ChildScorer((Scorer) docIdSetIterator, \"constant\"));\n      else\n        return Collections.emptyList();\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"81abdee99ea2cd37c59c455411c9948dba325dc5","date":1382778752,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/ConstantScoreQuery.ConstantScorer#getChildren().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/ConstantScoreQuery.ConstantScorer#getChildren().mjava","sourceNew":"    @Override\n    public Collection<ChildScorer> getChildren() {\n      if (query != null)\n        return Collections.singletonList(new ChildScorer((Scorer) docIdSetIterator, \"constant\"));\n      else\n        return Collections.emptyList();\n    }\n\n","sourceOld":"    @Override\n    public Collection<ChildScorer> getChildren() {\n      if (docIdSetIterator instanceof Scorer)\n        return Collections.singletonList(new ChildScorer((Scorer) docIdSetIterator, \"constant\"));\n      else\n        return Collections.emptyList();\n    }\n\n","bugFix":["ff4b151d0481767948c290f48b11c2254d64455f"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2e18c86f811939bfa8cd24046c96ed026f2e9b34","date":1393893071,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/ConstantScoreQuery.ConstantScorer#getChildren().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/ConstantScoreQuery.ConstantScorer#getChildren().mjava","sourceNew":"    @Override\n    public Collection<ChildScorer> getChildren() {\n      if (query != null) {\n        return Collections.singletonList(new ChildScorer((Scorer) docIdSetIterator, \"constant\"));\n      } else {\n        return Collections.emptyList();\n      }\n    }\n\n","sourceOld":"    @Override\n    public Collection<ChildScorer> getChildren() {\n      if (query != null)\n        return Collections.singletonList(new ChildScorer((Scorer) docIdSetIterator, \"constant\"));\n      else\n        return Collections.emptyList();\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"acf00221f44c5f08ccea014f2492b53af15ecd66","date":1394568293,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/search/ConstantScoreQuery.ConstantScorer#getChildren().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/ConstantScoreQuery.ConstantScorer#getChildren().mjava","sourceNew":"    @Override\n    public Collection<ChildScorer> getChildren() {\n      if (query != null) {\n        return Collections.singletonList(new ChildScorer((Scorer) docIdSetIterator, \"constant\"));\n      } else {\n        return Collections.emptyList();\n      }\n    }\n\n","sourceOld":"    @Override\n    public Collection<ChildScorer> getChildren() {\n      if (query != null)\n        return Collections.singletonList(new ChildScorer((Scorer) docIdSetIterator, \"constant\"));\n      else\n        return Collections.emptyList();\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"51f5280f31484820499077f41fcdfe92d527d9dc","date":1423229122,"type":5,"author":"Alan Woodward","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/ConstantScoreQuery.ConstantDocIdSetIteratorScorer#getChildren().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/ConstantScoreQuery.ConstantScorer#getChildren().mjava","sourceNew":"    @Override\n    public Collection<ChildScorer> getChildren() {\n      if (query != null) {\n        return Collections.singletonList(new ChildScorer((Scorer) docIdSetIterator, \"constant\"));\n      } else {\n        return Collections.emptyList();\n      }\n    }\n\n","sourceOld":"    @Override\n    public Collection<ChildScorer> getChildren() {\n      if (query != null) {\n        return Collections.singletonList(new ChildScorer((Scorer) docIdSetIterator, \"constant\"));\n      } else {\n        return Collections.emptyList();\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"2e18c86f811939bfa8cd24046c96ed026f2e9b34":["81abdee99ea2cd37c59c455411c9948dba325dc5"],"81abdee99ea2cd37c59c455411c9948dba325dc5":["ff4b151d0481767948c290f48b11c2254d64455f"],"c4015cd39dff8d4dec562d909f9766debac53aa6":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","ff4b151d0481767948c290f48b11c2254d64455f"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"acf00221f44c5f08ccea014f2492b53af15ecd66":["81abdee99ea2cd37c59c455411c9948dba325dc5","2e18c86f811939bfa8cd24046c96ed026f2e9b34"],"51f5280f31484820499077f41fcdfe92d527d9dc":["acf00221f44c5f08ccea014f2492b53af15ecd66"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["51f5280f31484820499077f41fcdfe92d527d9dc"],"ff4b151d0481767948c290f48b11c2254d64455f":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"2e18c86f811939bfa8cd24046c96ed026f2e9b34":["acf00221f44c5f08ccea014f2492b53af15ecd66"],"81abdee99ea2cd37c59c455411c9948dba325dc5":["2e18c86f811939bfa8cd24046c96ed026f2e9b34","acf00221f44c5f08ccea014f2492b53af15ecd66"],"c4015cd39dff8d4dec562d909f9766debac53aa6":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c4015cd39dff8d4dec562d909f9766debac53aa6","ff4b151d0481767948c290f48b11c2254d64455f"],"acf00221f44c5f08ccea014f2492b53af15ecd66":["51f5280f31484820499077f41fcdfe92d527d9dc"],"51f5280f31484820499077f41fcdfe92d527d9dc":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"ff4b151d0481767948c290f48b11c2254d64455f":["81abdee99ea2cd37c59c455411c9948dba325dc5","c4015cd39dff8d4dec562d909f9766debac53aa6"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["c4015cd39dff8d4dec562d909f9766debac53aa6","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}