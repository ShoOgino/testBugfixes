{"path":"lucene/queries/src/java/org/apache/lucene/queries/function/valuesource/NormValueSource#getValues(Map,AtomicReaderContext).mjava","commits":[{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/queries/src/java/org/apache/lucene/queries/function/valuesource/NormValueSource#getValues(Map,AtomicReaderContext).mjava","pathOld":"modules/queries/src/java/org/apache/lucene/queries/function/valuesource/NormValueSource#getValues(Map,AtomicReaderContext).mjava","sourceNew":"  @Override\n  public FunctionValues getValues(Map context, AtomicReaderContext readerContext) throws IOException {\n    IndexSearcher searcher = (IndexSearcher)context.get(\"searcher\");\n    final TFIDFSimilarity similarity = IDFValueSource.asTFIDF(searcher.getSimilarity(), field);\n    if (similarity == null) {\n      throw new UnsupportedOperationException(\"requires a TFIDFSimilarity (such as DefaultSimilarity)\");\n    }\n    DocValues dv = readerContext.reader().normValues(field);\n\n    if (dv == null) {\n      return new ConstDoubleDocValues(0.0, this);\n    }\n    \n    final byte[] norms = (byte[]) dv.getSource().getArray();\n\n    return new FloatDocValues(this) {\n      @Override\n      public float floatVal(int doc) {\n        return similarity.decodeNormValue(norms[doc]);\n      }\n    };\n  }\n\n","sourceOld":"  @Override\n  public FunctionValues getValues(Map context, AtomicReaderContext readerContext) throws IOException {\n    IndexSearcher searcher = (IndexSearcher)context.get(\"searcher\");\n    final TFIDFSimilarity similarity = IDFValueSource.asTFIDF(searcher.getSimilarity(), field);\n    if (similarity == null) {\n      throw new UnsupportedOperationException(\"requires a TFIDFSimilarity (such as DefaultSimilarity)\");\n    }\n    DocValues dv = readerContext.reader().normValues(field);\n\n    if (dv == null) {\n      return new ConstDoubleDocValues(0.0, this);\n    }\n    \n    final byte[] norms = (byte[]) dv.getSource().getArray();\n\n    return new FloatDocValues(this) {\n      @Override\n      public float floatVal(int doc) {\n        return similarity.decodeNormValue(norms[doc]);\n      }\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0837ab0472feecb3a54260729d845f839e1cbd72","date":1358283639,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/queries/src/java/org/apache/lucene/queries/function/valuesource/NormValueSource#getValues(Map,AtomicReaderContext).mjava","pathOld":"lucene/queries/src/java/org/apache/lucene/queries/function/valuesource/NormValueSource#getValues(Map,AtomicReaderContext).mjava","sourceNew":"  @Override\n  public FunctionValues getValues(Map context, AtomicReaderContext readerContext) throws IOException {\n    IndexSearcher searcher = (IndexSearcher)context.get(\"searcher\");\n    final TFIDFSimilarity similarity = IDFValueSource.asTFIDF(searcher.getSimilarity(), field);\n    if (similarity == null) {\n      throw new UnsupportedOperationException(\"requires a TFIDFSimilarity (such as DefaultSimilarity)\");\n    }\n    final NumericDocValues norms = readerContext.reader().simpleNormValues(field);\n\n    if (norms == null) {\n      return new ConstDoubleDocValues(0.0, this);\n    }\n    \n    return new FloatDocValues(this) {\n      @Override\n      public float floatVal(int doc) {\n        return similarity.decodeNormValue((byte)norms.get(doc));\n      }\n    };\n  }\n\n","sourceOld":"  @Override\n  public FunctionValues getValues(Map context, AtomicReaderContext readerContext) throws IOException {\n    IndexSearcher searcher = (IndexSearcher)context.get(\"searcher\");\n    final TFIDFSimilarity similarity = IDFValueSource.asTFIDF(searcher.getSimilarity(), field);\n    if (similarity == null) {\n      throw new UnsupportedOperationException(\"requires a TFIDFSimilarity (such as DefaultSimilarity)\");\n    }\n    DocValues dv = readerContext.reader().normValues(field);\n\n    if (dv == null) {\n      return new ConstDoubleDocValues(0.0, this);\n    }\n    \n    final byte[] norms = (byte[]) dv.getSource().getArray();\n\n    return new FloatDocValues(this) {\n      @Override\n      public float floatVal(int doc) {\n        return similarity.decodeNormValue(norms[doc]);\n      }\n    };\n  }\n\n","bugFix":null,"bugIntro":["ca4cbe98ea0b116331982aa8fa63384da90b2b2c"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"b8acf0807ca5f38beda8e0f7d5ab46ff39f81200","date":1358521790,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/queries/src/java/org/apache/lucene/queries/function/valuesource/NormValueSource#getValues(Map,AtomicReaderContext).mjava","pathOld":"lucene/queries/src/java/org/apache/lucene/queries/function/valuesource/NormValueSource#getValues(Map,AtomicReaderContext).mjava","sourceNew":"  @Override\n  public FunctionValues getValues(Map context, AtomicReaderContext readerContext) throws IOException {\n    IndexSearcher searcher = (IndexSearcher)context.get(\"searcher\");\n    final TFIDFSimilarity similarity = IDFValueSource.asTFIDF(searcher.getSimilarity(), field);\n    if (similarity == null) {\n      throw new UnsupportedOperationException(\"requires a TFIDFSimilarity (such as DefaultSimilarity)\");\n    }\n    final NumericDocValues norms = readerContext.reader().getNormValues(field);\n\n    if (norms == null) {\n      return new ConstDoubleDocValues(0.0, this);\n    }\n    \n    return new FloatDocValues(this) {\n      @Override\n      public float floatVal(int doc) {\n        return similarity.decodeNormValue((byte)norms.get(doc));\n      }\n    };\n  }\n\n","sourceOld":"  @Override\n  public FunctionValues getValues(Map context, AtomicReaderContext readerContext) throws IOException {\n    IndexSearcher searcher = (IndexSearcher)context.get(\"searcher\");\n    final TFIDFSimilarity similarity = IDFValueSource.asTFIDF(searcher.getSimilarity(), field);\n    if (similarity == null) {\n      throw new UnsupportedOperationException(\"requires a TFIDFSimilarity (such as DefaultSimilarity)\");\n    }\n    final NumericDocValues norms = readerContext.reader().simpleNormValues(field);\n\n    if (norms == null) {\n      return new ConstDoubleDocValues(0.0, this);\n    }\n    \n    return new FloatDocValues(this) {\n      @Override\n      public float floatVal(int doc) {\n        return similarity.decodeNormValue((byte)norms.get(doc));\n      }\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"d4d69c535930b5cce125cff868d40f6373dc27d4","date":1360270101,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/queries/src/java/org/apache/lucene/queries/function/valuesource/NormValueSource#getValues(Map,AtomicReaderContext).mjava","pathOld":"lucene/queries/src/java/org/apache/lucene/queries/function/valuesource/NormValueSource#getValues(Map,AtomicReaderContext).mjava","sourceNew":"  @Override\n  public FunctionValues getValues(Map context, AtomicReaderContext readerContext) throws IOException {\n    IndexSearcher searcher = (IndexSearcher)context.get(\"searcher\");\n    final TFIDFSimilarity similarity = IDFValueSource.asTFIDF(searcher.getSimilarity(), field);\n    if (similarity == null) {\n      throw new UnsupportedOperationException(\"requires a TFIDFSimilarity (such as DefaultSimilarity)\");\n    }\n    final NumericDocValues norms = readerContext.reader().getNormValues(field);\n\n    if (norms == null) {\n      return new ConstDoubleDocValues(0.0, this);\n    }\n    \n    return new FloatDocValues(this) {\n      @Override\n      public float floatVal(int doc) {\n        return similarity.decodeNormValue((byte)norms.get(doc));\n      }\n    };\n  }\n\n","sourceOld":"  @Override\n  public FunctionValues getValues(Map context, AtomicReaderContext readerContext) throws IOException {\n    IndexSearcher searcher = (IndexSearcher)context.get(\"searcher\");\n    final TFIDFSimilarity similarity = IDFValueSource.asTFIDF(searcher.getSimilarity(), field);\n    if (similarity == null) {\n      throw new UnsupportedOperationException(\"requires a TFIDFSimilarity (such as DefaultSimilarity)\");\n    }\n    DocValues dv = readerContext.reader().normValues(field);\n\n    if (dv == null) {\n      return new ConstDoubleDocValues(0.0, this);\n    }\n    \n    final byte[] norms = (byte[]) dv.getSource().getArray();\n\n    return new FloatDocValues(this) {\n      @Override\n      public float floatVal(int doc) {\n        return similarity.decodeNormValue(norms[doc]);\n      }\n    };\n  }\n\n","bugFix":["0f4b223b56d0c7927ae8baced5e1b1dd4c693b1d","15345a5c40a4fa937f1b1b8462ddd6677135378a","61e20f33ce8ff701576366fdb03955eded5f209b"],"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"19275ba31e621f6da1b83bf13af75233876fd3d4","date":1374846698,"type":3,"author":"Han Jiang","isMerge":false,"pathNew":"lucene/queries/src/java/org/apache/lucene/queries/function/valuesource/NormValueSource#getValues(Map,AtomicReaderContext).mjava","pathOld":"lucene/queries/src/java/org/apache/lucene/queries/function/valuesource/NormValueSource#getValues(Map,AtomicReaderContext).mjava","sourceNew":"  @Override\n  public FunctionValues getValues(Map context, AtomicReaderContext readerContext) throws IOException {\n    IndexSearcher searcher = (IndexSearcher)context.get(\"searcher\");\n    final TFIDFSimilarity similarity = IDFValueSource.asTFIDF(searcher.getSimilarity(), field);\n    if (similarity == null) {\n      throw new UnsupportedOperationException(\"requires a TFIDFSimilarity (such as DefaultSimilarity)\");\n    }\n    final NumericDocValues norms = readerContext.reader().getNormValues(field);\n\n    if (norms == null) {\n      return new ConstDoubleDocValues(0.0, this);\n    }\n    \n    return new FloatDocValues(this) {\n      @Override\n      public float floatVal(int doc) {\n        return similarity.decodeNormValue((byte)norms.get(doc));\n      }\n    };\n  }\n\n","sourceOld":"  @Override\n  public FunctionValues getValues(Map context, AtomicReaderContext readerContext) throws IOException {\n    IndexSearcher searcher = (IndexSearcher)context.get(\"searcher\");\n    final TFIDFSimilarity similarity = IDFValueSource.asTFIDF(searcher.getSimilarity(), field);\n    if (similarity == null) {\n      throw new UnsupportedOperationException(\"requires a TFIDFSimilarity (such as DefaultSimilarity)\");\n    }\n    final NumericDocValues norms = readerContext.reader().getNormValues(field);\n\n    if (norms == null) {\n      return new ConstDoubleDocValues(0.0, this);\n    }\n    \n    return new FloatDocValues(this) {\n      @Override\n      public float floatVal(int doc) {\n        return similarity.decodeNormValue((byte)norms.get(doc));\n      }\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee","date":1376366778,"type":3,"author":"Han Jiang","isMerge":false,"pathNew":"lucene/queries/src/java/org/apache/lucene/queries/function/valuesource/NormValueSource#getValues(Map,AtomicReaderContext).mjava","pathOld":"lucene/queries/src/java/org/apache/lucene/queries/function/valuesource/NormValueSource#getValues(Map,AtomicReaderContext).mjava","sourceNew":"  @Override\n  public FunctionValues getValues(Map context, AtomicReaderContext readerContext) throws IOException {\n    IndexSearcher searcher = (IndexSearcher)context.get(\"searcher\");\n    final TFIDFSimilarity similarity = IDFValueSource.asTFIDF(searcher.getSimilarity(), field);\n    if (similarity == null) {\n      throw new UnsupportedOperationException(\"requires a TFIDFSimilarity (such as DefaultSimilarity)\");\n    }\n    final NumericDocValues norms = readerContext.reader().getNormValues(field);\n\n    if (norms == null) {\n      return new ConstDoubleDocValues(0.0, this);\n    }\n    \n    return new FloatDocValues(this) {\n      @Override\n      public float floatVal(int doc) {\n        return similarity.decodeNormValue((byte)norms.get(doc));\n      }\n    };\n  }\n\n","sourceOld":"  @Override\n  public FunctionValues getValues(Map context, AtomicReaderContext readerContext) throws IOException {\n    IndexSearcher searcher = (IndexSearcher)context.get(\"searcher\");\n    final TFIDFSimilarity similarity = IDFValueSource.asTFIDF(searcher.getSimilarity(), field);\n    if (similarity == null) {\n      throw new UnsupportedOperationException(\"requires a TFIDFSimilarity (such as DefaultSimilarity)\");\n    }\n    final NumericDocValues norms = readerContext.reader().getNormValues(field);\n\n    if (norms == null) {\n      return new ConstDoubleDocValues(0.0, this);\n    }\n    \n    return new FloatDocValues(this) {\n      @Override\n      public float floatVal(int doc) {\n        return similarity.decodeNormValue((byte)norms.get(doc));\n      }\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ca4cbe98ea0b116331982aa8fa63384da90b2b2c","date":1391170591,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/queries/src/java/org/apache/lucene/queries/function/valuesource/NormValueSource#getValues(Map,AtomicReaderContext).mjava","pathOld":"lucene/queries/src/java/org/apache/lucene/queries/function/valuesource/NormValueSource#getValues(Map,AtomicReaderContext).mjava","sourceNew":"  @Override\n  public FunctionValues getValues(Map context, AtomicReaderContext readerContext) throws IOException {\n    IndexSearcher searcher = (IndexSearcher)context.get(\"searcher\");\n    final TFIDFSimilarity similarity = IDFValueSource.asTFIDF(searcher.getSimilarity(), field);\n    if (similarity == null) {\n      throw new UnsupportedOperationException(\"requires a TFIDFSimilarity (such as DefaultSimilarity)\");\n    }\n    final NumericDocValues norms = readerContext.reader().getNormValues(field);\n\n    if (norms == null) {\n      return new ConstDoubleDocValues(0.0, this);\n    }\n    \n    return new FloatDocValues(this) {\n      @Override\n      public float floatVal(int doc) {\n        return similarity.decodeNormValue(norms.get(doc));\n      }\n    };\n  }\n\n","sourceOld":"  @Override\n  public FunctionValues getValues(Map context, AtomicReaderContext readerContext) throws IOException {\n    IndexSearcher searcher = (IndexSearcher)context.get(\"searcher\");\n    final TFIDFSimilarity similarity = IDFValueSource.asTFIDF(searcher.getSimilarity(), field);\n    if (similarity == null) {\n      throw new UnsupportedOperationException(\"requires a TFIDFSimilarity (such as DefaultSimilarity)\");\n    }\n    final NumericDocValues norms = readerContext.reader().getNormValues(field);\n\n    if (norms == null) {\n      return new ConstDoubleDocValues(0.0, this);\n    }\n    \n    return new FloatDocValues(this) {\n      @Override\n      public float floatVal(int doc) {\n        return similarity.decodeNormValue((byte)norms.get(doc));\n      }\n    };\n  }\n\n","bugFix":["0837ab0472feecb3a54260729d845f839e1cbd72"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c9fb5f46e264daf5ba3860defe623a89d202dd87","date":1411516315,"type":4,"author":"Ryan Ernst","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/queries/src/java/org/apache/lucene/queries/function/valuesource/NormValueSource#getValues(Map,AtomicReaderContext).mjava","sourceNew":null,"sourceOld":"  @Override\n  public FunctionValues getValues(Map context, AtomicReaderContext readerContext) throws IOException {\n    IndexSearcher searcher = (IndexSearcher)context.get(\"searcher\");\n    final TFIDFSimilarity similarity = IDFValueSource.asTFIDF(searcher.getSimilarity(), field);\n    if (similarity == null) {\n      throw new UnsupportedOperationException(\"requires a TFIDFSimilarity (such as DefaultSimilarity)\");\n    }\n    final NumericDocValues norms = readerContext.reader().getNormValues(field);\n\n    if (norms == null) {\n      return new ConstDoubleDocValues(0.0, this);\n    }\n    \n    return new FloatDocValues(this) {\n      @Override\n      public float floatVal(int doc) {\n        return similarity.decodeNormValue(norms.get(doc));\n      }\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"b8acf0807ca5f38beda8e0f7d5ab46ff39f81200":["0837ab0472feecb3a54260729d845f839e1cbd72"],"d4d69c535930b5cce125cff868d40f6373dc27d4":["b89678825b68eccaf09e6ab71675fc0b0af1e099","b8acf0807ca5f38beda8e0f7d5ab46ff39f81200"],"ca4cbe98ea0b116331982aa8fa63384da90b2b2c":["19275ba31e621f6da1b83bf13af75233876fd3d4"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee":["d4d69c535930b5cce125cff868d40f6373dc27d4"],"0837ab0472feecb3a54260729d845f839e1cbd72":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"19275ba31e621f6da1b83bf13af75233876fd3d4":["d4d69c535930b5cce125cff868d40f6373dc27d4"],"c9fb5f46e264daf5ba3860defe623a89d202dd87":["ca4cbe98ea0b116331982aa8fa63384da90b2b2c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["c9fb5f46e264daf5ba3860defe623a89d202dd87"]},"commit2Childs":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["d4d69c535930b5cce125cff868d40f6373dc27d4","0837ab0472feecb3a54260729d845f839e1cbd72"],"b8acf0807ca5f38beda8e0f7d5ab46ff39f81200":["d4d69c535930b5cce125cff868d40f6373dc27d4"],"d4d69c535930b5cce125cff868d40f6373dc27d4":["8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee","19275ba31e621f6da1b83bf13af75233876fd3d4"],"ca4cbe98ea0b116331982aa8fa63384da90b2b2c":["c9fb5f46e264daf5ba3860defe623a89d202dd87"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee":[],"0837ab0472feecb3a54260729d845f839e1cbd72":["b8acf0807ca5f38beda8e0f7d5ab46ff39f81200"],"19275ba31e621f6da1b83bf13af75233876fd3d4":["ca4cbe98ea0b116331982aa8fa63384da90b2b2c"],"c9fb5f46e264daf5ba3860defe623a89d202dd87":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}