{"path":"lucene/test-framework/src/java/org/apache/lucene/util/TestUtil#reduceOpenFiles(IndexWriter).mjava","commits":[{"id":"6613659748fe4411a7dcf85266e55db1f95f7315","date":1392773913,"type":1,"author":"Benson Margulies","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/util/TestUtil#reduceOpenFiles(IndexWriter).mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/util/_TestUtil#reduceOpenFiles(IndexWriter).mjava","sourceNew":"  /** just tries to configure things to keep the open file\n   * count lowish */\n  public static void reduceOpenFiles(IndexWriter w) {\n    // keep number of open files lowish\n    MergePolicy mp = w.getConfig().getMergePolicy();\n    if (mp instanceof LogMergePolicy) {\n      LogMergePolicy lmp = (LogMergePolicy) mp;\n      lmp.setMergeFactor(Math.min(5, lmp.getMergeFactor()));\n      lmp.setNoCFSRatio(1.0);\n    } else if (mp instanceof TieredMergePolicy) {\n      TieredMergePolicy tmp = (TieredMergePolicy) mp;\n      tmp.setMaxMergeAtOnce(Math.min(5, tmp.getMaxMergeAtOnce()));\n      tmp.setSegmentsPerTier(Math.min(5, tmp.getSegmentsPerTier()));\n      tmp.setNoCFSRatio(1.0);\n    }\n    MergeScheduler ms = w.getConfig().getMergeScheduler();\n    if (ms instanceof ConcurrentMergeScheduler) {\n      // wtf... shouldnt it be even lower since its 1 by default?!?!\n      ((ConcurrentMergeScheduler) ms).setMaxMergesAndThreads(3, 2);\n    }\n  }\n\n","sourceOld":"  /** just tries to configure things to keep the open file\n   * count lowish */\n  public static void reduceOpenFiles(IndexWriter w) {\n    // keep number of open files lowish\n    MergePolicy mp = w.getConfig().getMergePolicy();\n    if (mp instanceof LogMergePolicy) {\n      LogMergePolicy lmp = (LogMergePolicy) mp;\n      lmp.setMergeFactor(Math.min(5, lmp.getMergeFactor()));\n      lmp.setNoCFSRatio(1.0);\n    } else if (mp instanceof TieredMergePolicy) {\n      TieredMergePolicy tmp = (TieredMergePolicy) mp;\n      tmp.setMaxMergeAtOnce(Math.min(5, tmp.getMaxMergeAtOnce()));\n      tmp.setSegmentsPerTier(Math.min(5, tmp.getSegmentsPerTier()));\n      tmp.setNoCFSRatio(1.0);\n    }\n    MergeScheduler ms = w.getConfig().getMergeScheduler();\n    if (ms instanceof ConcurrentMergeScheduler) {\n      // wtf... shouldnt it be even lower since its 1 by default?!?!\n      ((ConcurrentMergeScheduler) ms).setMaxMergesAndThreads(3, 2);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8aa2bb13f56a3ad540fd2dc5e882e1ed4bf799d1","date":1419400138,"type":3,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/util/TestUtil#reduceOpenFiles(IndexWriter).mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/util/TestUtil#reduceOpenFiles(IndexWriter).mjava","sourceNew":"  /** just tries to configure things to keep the open file\n   * count lowish */\n  public static void reduceOpenFiles(IndexWriter w) {\n    // keep number of open files lowish\n    MergePolicy mp = w.getConfig().getMergePolicy();\n    if (mp instanceof LogMergePolicy) {\n      LogMergePolicy lmp = (LogMergePolicy) mp;\n      lmp.setMergeFactor(Math.min(5, lmp.getMergeFactor()));\n      lmp.setNoCFSRatio(1.0);\n    } else if (mp instanceof TieredMergePolicy) {\n      TieredMergePolicy tmp = (TieredMergePolicy) mp;\n      tmp.setMaxMergeAtOnce(Math.min(5, tmp.getMaxMergeAtOnce()));\n      tmp.setSegmentsPerTier(Math.min(5, tmp.getSegmentsPerTier()));\n      tmp.setNoCFSRatio(1.0);\n    }\n    MergeScheduler ms = w.getConfig().getMergeScheduler();\n    if (ms instanceof ConcurrentMergeScheduler) {\n      // wtf... shouldnt it be even lower since it's 1 by default?!?!\n      ((ConcurrentMergeScheduler) ms).setMaxMergesAndThreads(3, 2);\n    }\n  }\n\n","sourceOld":"  /** just tries to configure things to keep the open file\n   * count lowish */\n  public static void reduceOpenFiles(IndexWriter w) {\n    // keep number of open files lowish\n    MergePolicy mp = w.getConfig().getMergePolicy();\n    if (mp instanceof LogMergePolicy) {\n      LogMergePolicy lmp = (LogMergePolicy) mp;\n      lmp.setMergeFactor(Math.min(5, lmp.getMergeFactor()));\n      lmp.setNoCFSRatio(1.0);\n    } else if (mp instanceof TieredMergePolicy) {\n      TieredMergePolicy tmp = (TieredMergePolicy) mp;\n      tmp.setMaxMergeAtOnce(Math.min(5, tmp.getMaxMergeAtOnce()));\n      tmp.setSegmentsPerTier(Math.min(5, tmp.getSegmentsPerTier()));\n      tmp.setNoCFSRatio(1.0);\n    }\n    MergeScheduler ms = w.getConfig().getMergeScheduler();\n    if (ms instanceof ConcurrentMergeScheduler) {\n      // wtf... shouldnt it be even lower since its 1 by default?!?!\n      ((ConcurrentMergeScheduler) ms).setMaxMergesAndThreads(3, 2);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0d49a158012a8ff48f328a4558e4bfcffbaed16f","date":1453677440,"type":3,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/util/TestUtil#reduceOpenFiles(IndexWriter).mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/util/TestUtil#reduceOpenFiles(IndexWriter).mjava","sourceNew":"  /** just tries to configure things to keep the open file\n   * count lowish */\n  public static void reduceOpenFiles(IndexWriter w) {\n    // keep number of open files lowish\n    MergePolicy mp = w.getConfig().getMergePolicy();\n    mp.setNoCFSRatio(1.0);\n    if (mp instanceof LogMergePolicy) {\n      LogMergePolicy lmp = (LogMergePolicy) mp;\n      lmp.setMergeFactor(Math.min(5, lmp.getMergeFactor()));\n    } else if (mp instanceof TieredMergePolicy) {\n      TieredMergePolicy tmp = (TieredMergePolicy) mp;\n      tmp.setMaxMergeAtOnce(Math.min(5, tmp.getMaxMergeAtOnce()));\n      tmp.setSegmentsPerTier(Math.min(5, tmp.getSegmentsPerTier()));\n    }\n    MergeScheduler ms = w.getConfig().getMergeScheduler();\n    if (ms instanceof ConcurrentMergeScheduler) {\n      // wtf... shouldnt it be even lower since it's 1 by default?!?!\n      ((ConcurrentMergeScheduler) ms).setMaxMergesAndThreads(3, 2);\n    }\n  }\n\n","sourceOld":"  /** just tries to configure things to keep the open file\n   * count lowish */\n  public static void reduceOpenFiles(IndexWriter w) {\n    // keep number of open files lowish\n    MergePolicy mp = w.getConfig().getMergePolicy();\n    if (mp instanceof LogMergePolicy) {\n      LogMergePolicy lmp = (LogMergePolicy) mp;\n      lmp.setMergeFactor(Math.min(5, lmp.getMergeFactor()));\n      lmp.setNoCFSRatio(1.0);\n    } else if (mp instanceof TieredMergePolicy) {\n      TieredMergePolicy tmp = (TieredMergePolicy) mp;\n      tmp.setMaxMergeAtOnce(Math.min(5, tmp.getMaxMergeAtOnce()));\n      tmp.setSegmentsPerTier(Math.min(5, tmp.getSegmentsPerTier()));\n      tmp.setNoCFSRatio(1.0);\n    }\n    MergeScheduler ms = w.getConfig().getMergeScheduler();\n    if (ms instanceof ConcurrentMergeScheduler) {\n      // wtf... shouldnt it be even lower since it's 1 by default?!?!\n      ((ConcurrentMergeScheduler) ms).setMaxMergesAndThreads(3, 2);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"68496c2200e559fb7802f7575427b7a482659afb","date":1455207618,"type":3,"author":"Mike McCandless","isMerge":true,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/util/TestUtil#reduceOpenFiles(IndexWriter).mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/util/TestUtil#reduceOpenFiles(IndexWriter).mjava","sourceNew":"  /** just tries to configure things to keep the open file\n   * count lowish */\n  public static void reduceOpenFiles(IndexWriter w) {\n    // keep number of open files lowish\n    MergePolicy mp = w.getConfig().getMergePolicy();\n    mp.setNoCFSRatio(1.0);\n    if (mp instanceof LogMergePolicy) {\n      LogMergePolicy lmp = (LogMergePolicy) mp;\n      lmp.setMergeFactor(Math.min(5, lmp.getMergeFactor()));\n    } else if (mp instanceof TieredMergePolicy) {\n      TieredMergePolicy tmp = (TieredMergePolicy) mp;\n      tmp.setMaxMergeAtOnce(Math.min(5, tmp.getMaxMergeAtOnce()));\n      tmp.setSegmentsPerTier(Math.min(5, tmp.getSegmentsPerTier()));\n    }\n    MergeScheduler ms = w.getConfig().getMergeScheduler();\n    if (ms instanceof ConcurrentMergeScheduler) {\n      // wtf... shouldnt it be even lower since it's 1 by default?!?!\n      ((ConcurrentMergeScheduler) ms).setMaxMergesAndThreads(3, 2);\n    }\n  }\n\n","sourceOld":"  /** just tries to configure things to keep the open file\n   * count lowish */\n  public static void reduceOpenFiles(IndexWriter w) {\n    // keep number of open files lowish\n    MergePolicy mp = w.getConfig().getMergePolicy();\n    if (mp instanceof LogMergePolicy) {\n      LogMergePolicy lmp = (LogMergePolicy) mp;\n      lmp.setMergeFactor(Math.min(5, lmp.getMergeFactor()));\n      lmp.setNoCFSRatio(1.0);\n    } else if (mp instanceof TieredMergePolicy) {\n      TieredMergePolicy tmp = (TieredMergePolicy) mp;\n      tmp.setMaxMergeAtOnce(Math.min(5, tmp.getMaxMergeAtOnce()));\n      tmp.setSegmentsPerTier(Math.min(5, tmp.getSegmentsPerTier()));\n      tmp.setNoCFSRatio(1.0);\n    }\n    MergeScheduler ms = w.getConfig().getMergeScheduler();\n    if (ms instanceof ConcurrentMergeScheduler) {\n      // wtf... shouldnt it be even lower since it's 1 by default?!?!\n      ((ConcurrentMergeScheduler) ms).setMaxMergesAndThreads(3, 2);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"8aa2bb13f56a3ad540fd2dc5e882e1ed4bf799d1":["6613659748fe4411a7dcf85266e55db1f95f7315"],"6613659748fe4411a7dcf85266e55db1f95f7315":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"68496c2200e559fb7802f7575427b7a482659afb":["8aa2bb13f56a3ad540fd2dc5e882e1ed4bf799d1","0d49a158012a8ff48f328a4558e4bfcffbaed16f"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["68496c2200e559fb7802f7575427b7a482659afb"],"0d49a158012a8ff48f328a4558e4bfcffbaed16f":["8aa2bb13f56a3ad540fd2dc5e882e1ed4bf799d1"]},"commit2Childs":{"8aa2bb13f56a3ad540fd2dc5e882e1ed4bf799d1":["68496c2200e559fb7802f7575427b7a482659afb","0d49a158012a8ff48f328a4558e4bfcffbaed16f"],"6613659748fe4411a7dcf85266e55db1f95f7315":["8aa2bb13f56a3ad540fd2dc5e882e1ed4bf799d1"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["6613659748fe4411a7dcf85266e55db1f95f7315"],"68496c2200e559fb7802f7575427b7a482659afb":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"0d49a158012a8ff48f328a4558e4bfcffbaed16f":["68496c2200e559fb7802f7575427b7a482659afb"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}