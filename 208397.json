{"path":"solr/core/src/test/org/apache/solr/cloud/TestSolrCloudWithSecureImpersonation#getUsersFirstGroup().mjava","commits":[{"id":"cc3d73ce4049cb1520abaaae57fe8267639bda1d","date":1470181330,"type":0,"author":"Gregory Chanan","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/TestSolrCloudWithSecureImpersonation#getUsersFirstGroup().mjava","pathOld":"/dev/null","sourceNew":"  private static String getUsersFirstGroup() throws Exception {\n    org.apache.hadoop.security.Groups hGroups =\n        new org.apache.hadoop.security.Groups(new Configuration());\n    List<String> g = hGroups.getGroups(System.getProperty(\"user.name\"));\n    return g.get(0);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["21dce54fa5b372eb86d4e848173dad023c2c61d5"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"ff8c50dd45235d6537b8ea3706823729a4aeed9c","date":1470458081,"type":3,"author":"Gregory Chanan","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/TestSolrCloudWithSecureImpersonation#getUsersFirstGroup().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/TestSolrCloudWithSecureImpersonation#getUsersFirstGroup().mjava","sourceNew":"  private static String getUsersFirstGroup() throws Exception {\n    org.apache.hadoop.security.Groups hGroups =\n        new org.apache.hadoop.security.Groups(new Configuration());\n    String group = \"*\"; // accept any group if a group can't be found\n    try {\n      List<String> g = hGroups.getGroups(System.getProperty(\"user.name\"));\n      if (g != null && g.size() > 0) {\n        group = g.get(0);\n      }\n    } catch (NullPointerException npe) {\n      // if user/group doesn't exist on test box\n    }\n    return group;\n  }\n\n","sourceOld":"  private static String getUsersFirstGroup() throws Exception {\n    org.apache.hadoop.security.Groups hGroups =\n        new org.apache.hadoop.security.Groups(new Configuration());\n    List<String> g = hGroups.getGroups(System.getProperty(\"user.name\"));\n    return g.get(0);\n  }\n\n","bugFix":null,"bugIntro":["21dce54fa5b372eb86d4e848173dad023c2c61d5"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"3b013574eedcdbac35dc7e35b0ee616ffc38895d","date":1470897818,"type":0,"author":"Noble Paul","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/cloud/TestSolrCloudWithSecureImpersonation#getUsersFirstGroup().mjava","pathOld":"/dev/null","sourceNew":"  private static String getUsersFirstGroup() throws Exception {\n    org.apache.hadoop.security.Groups hGroups =\n        new org.apache.hadoop.security.Groups(new Configuration());\n    String group = \"*\"; // accept any group if a group can't be found\n    try {\n      List<String> g = hGroups.getGroups(System.getProperty(\"user.name\"));\n      if (g != null && g.size() > 0) {\n        group = g.get(0);\n      }\n    } catch (NullPointerException npe) {\n      // if user/group doesn't exist on test box\n    }\n    return group;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"21dce54fa5b372eb86d4e848173dad023c2c61d5","date":1472927430,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/TestSolrCloudWithSecureImpersonation#getUsersFirstGroup().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/TestSolrCloudWithSecureImpersonation#getUsersFirstGroup().mjava","sourceNew":"  private static String getUsersFirstGroup() throws Exception {\n    String group = \"*\"; // accept any group if a group can't be found\n    if (!Constants.WINDOWS) { // does not work on Windows!\n      org.apache.hadoop.security.Groups hGroups =\n          new org.apache.hadoop.security.Groups(new Configuration());\n      try {\n        List<String> g = hGroups.getGroups(System.getProperty(\"user.name\"));\n        if (g != null && g.size() > 0) {\n          group = g.get(0);\n        }\n      } catch (NullPointerException npe) {\n        // if user/group doesn't exist on test box\n      }\n    }\n    return group;\n  }\n\n","sourceOld":"  private static String getUsersFirstGroup() throws Exception {\n    org.apache.hadoop.security.Groups hGroups =\n        new org.apache.hadoop.security.Groups(new Configuration());\n    String group = \"*\"; // accept any group if a group can't be found\n    try {\n      List<String> g = hGroups.getGroups(System.getProperty(\"user.name\"));\n      if (g != null && g.size() > 0) {\n        group = g.get(0);\n      }\n    } catch (NullPointerException npe) {\n      // if user/group doesn't exist on test box\n    }\n    return group;\n  }\n\n","bugFix":["ff8c50dd45235d6537b8ea3706823729a4aeed9c","cc3d73ce4049cb1520abaaae57fe8267639bda1d"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bc8f206328a706450934717bec7ccc22ad166fc0","date":1473142172,"type":3,"author":"Noble Paul","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/cloud/TestSolrCloudWithSecureImpersonation#getUsersFirstGroup().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/TestSolrCloudWithSecureImpersonation#getUsersFirstGroup().mjava","sourceNew":"  private static String getUsersFirstGroup() throws Exception {\n    String group = \"*\"; // accept any group if a group can't be found\n    if (!Constants.WINDOWS) { // does not work on Windows!\n      org.apache.hadoop.security.Groups hGroups =\n          new org.apache.hadoop.security.Groups(new Configuration());\n      try {\n        List<String> g = hGroups.getGroups(System.getProperty(\"user.name\"));\n        if (g != null && g.size() > 0) {\n          group = g.get(0);\n        }\n      } catch (NullPointerException npe) {\n        // if user/group doesn't exist on test box\n      }\n    }\n    return group;\n  }\n\n","sourceOld":"  private static String getUsersFirstGroup() throws Exception {\n    org.apache.hadoop.security.Groups hGroups =\n        new org.apache.hadoop.security.Groups(new Configuration());\n    String group = \"*\"; // accept any group if a group can't be found\n    try {\n      List<String> g = hGroups.getGroups(System.getProperty(\"user.name\"));\n      if (g != null && g.size() > 0) {\n        group = g.get(0);\n      }\n    } catch (NullPointerException npe) {\n      // if user/group doesn't exist on test box\n    }\n    return group;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"89424def13674ea17829b41c5883c54ecc31a132","date":1473767373,"type":3,"author":"Noble Paul","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/cloud/TestSolrCloudWithSecureImpersonation#getUsersFirstGroup().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/TestSolrCloudWithSecureImpersonation#getUsersFirstGroup().mjava","sourceNew":"  private static String getUsersFirstGroup() throws Exception {\n    String group = \"*\"; // accept any group if a group can't be found\n    if (!Constants.WINDOWS) { // does not work on Windows!\n      org.apache.hadoop.security.Groups hGroups =\n          new org.apache.hadoop.security.Groups(new Configuration());\n      try {\n        List<String> g = hGroups.getGroups(System.getProperty(\"user.name\"));\n        if (g != null && g.size() > 0) {\n          group = g.get(0);\n        }\n      } catch (NullPointerException npe) {\n        // if user/group doesn't exist on test box\n      }\n    }\n    return group;\n  }\n\n","sourceOld":"  private static String getUsersFirstGroup() throws Exception {\n    org.apache.hadoop.security.Groups hGroups =\n        new org.apache.hadoop.security.Groups(new Configuration());\n    String group = \"*\"; // accept any group if a group can't be found\n    try {\n      List<String> g = hGroups.getGroups(System.getProperty(\"user.name\"));\n      if (g != null && g.size() > 0) {\n        group = g.get(0);\n      }\n    } catch (NullPointerException npe) {\n      // if user/group doesn't exist on test box\n    }\n    return group;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"17e5da53e4e5bd659e22add9bba1cfa222e7e30d","date":1475435902,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/cloud/TestSolrCloudWithSecureImpersonation#getUsersFirstGroup().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/TestSolrCloudWithSecureImpersonation#getUsersFirstGroup().mjava","sourceNew":"  private static String getUsersFirstGroup() throws Exception {\n    String group = \"*\"; // accept any group if a group can't be found\n    if (!Constants.WINDOWS) { // does not work on Windows!\n      org.apache.hadoop.security.Groups hGroups =\n          new org.apache.hadoop.security.Groups(new Configuration());\n      try {\n        List<String> g = hGroups.getGroups(System.getProperty(\"user.name\"));\n        if (g != null && g.size() > 0) {\n          group = g.get(0);\n        }\n      } catch (NullPointerException npe) {\n        // if user/group doesn't exist on test box\n      }\n    }\n    return group;\n  }\n\n","sourceOld":"  private static String getUsersFirstGroup() throws Exception {\n    org.apache.hadoop.security.Groups hGroups =\n        new org.apache.hadoop.security.Groups(new Configuration());\n    String group = \"*\"; // accept any group if a group can't be found\n    try {\n      List<String> g = hGroups.getGroups(System.getProperty(\"user.name\"));\n      if (g != null && g.size() > 0) {\n        group = g.get(0);\n      }\n    } catch (NullPointerException npe) {\n      // if user/group doesn't exist on test box\n    }\n    return group;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":0,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/cloud/TestSolrCloudWithSecureImpersonation#getUsersFirstGroup().mjava","pathOld":"/dev/null","sourceNew":"  private static String getUsersFirstGroup() throws Exception {\n    String group = \"*\"; // accept any group if a group can't be found\n    if (!Constants.WINDOWS) { // does not work on Windows!\n      org.apache.hadoop.security.Groups hGroups =\n          new org.apache.hadoop.security.Groups(new Configuration());\n      try {\n        List<String> g = hGroups.getGroups(System.getProperty(\"user.name\"));\n        if (g != null && g.size() > 0) {\n          group = g.get(0);\n        }\n      } catch (NullPointerException npe) {\n        // if user/group doesn't exist on test box\n      }\n    }\n    return group;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7e614eceb81b081076e753ed62268c93c8a2a28e","date":1576119727,"type":3,"author":"Kevin Risden","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/TestSolrCloudWithSecureImpersonation#getUsersFirstGroup().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/TestSolrCloudWithSecureImpersonation#getUsersFirstGroup().mjava","sourceNew":"  private static String getUsersFirstGroup() throws Exception {\n    String group = \"*\"; // accept any group if a group can't be found\n    org.apache.hadoop.security.Groups hGroups =\n        new org.apache.hadoop.security.Groups(new Configuration());\n    try {\n      List<String> g = hGroups.getGroups(System.getProperty(\"user.name\"));\n      if (g != null && g.size() > 0) {\n        group = g.get(0);\n      }\n    } catch (NullPointerException npe) {\n      // if user/group doesn't exist on test box\n    }\n    return group;\n  }\n\n","sourceOld":"  private static String getUsersFirstGroup() throws Exception {\n    String group = \"*\"; // accept any group if a group can't be found\n    if (!Constants.WINDOWS) { // does not work on Windows!\n      org.apache.hadoop.security.Groups hGroups =\n          new org.apache.hadoop.security.Groups(new Configuration());\n      try {\n        List<String> g = hGroups.getGroups(System.getProperty(\"user.name\"));\n        if (g != null && g.size() > 0) {\n          group = g.get(0);\n        }\n      } catch (NullPointerException npe) {\n        // if user/group doesn't exist on test box\n      }\n    }\n    return group;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"df724d84dab24a0cc54bec95a8680867adc7f171","date":1576156608,"type":3,"author":"Dawid Weiss","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/cloud/TestSolrCloudWithSecureImpersonation#getUsersFirstGroup().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/TestSolrCloudWithSecureImpersonation#getUsersFirstGroup().mjava","sourceNew":"  private static String getUsersFirstGroup() throws Exception {\n    String group = \"*\"; // accept any group if a group can't be found\n    org.apache.hadoop.security.Groups hGroups =\n        new org.apache.hadoop.security.Groups(new Configuration());\n    try {\n      List<String> g = hGroups.getGroups(System.getProperty(\"user.name\"));\n      if (g != null && g.size() > 0) {\n        group = g.get(0);\n      }\n    } catch (NullPointerException npe) {\n      // if user/group doesn't exist on test box\n    }\n    return group;\n  }\n\n","sourceOld":"  private static String getUsersFirstGroup() throws Exception {\n    String group = \"*\"; // accept any group if a group can't be found\n    if (!Constants.WINDOWS) { // does not work on Windows!\n      org.apache.hadoop.security.Groups hGroups =\n          new org.apache.hadoop.security.Groups(new Configuration());\n      try {\n        List<String> g = hGroups.getGroups(System.getProperty(\"user.name\"));\n        if (g != null && g.size() > 0) {\n          group = g.get(0);\n        }\n      } catch (NullPointerException npe) {\n        // if user/group doesn't exist on test box\n      }\n    }\n    return group;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"df724d84dab24a0cc54bec95a8680867adc7f171":["17e5da53e4e5bd659e22add9bba1cfa222e7e30d","7e614eceb81b081076e753ed62268c93c8a2a28e"],"7e614eceb81b081076e753ed62268c93c8a2a28e":["17e5da53e4e5bd659e22add9bba1cfa222e7e30d"],"cc3d73ce4049cb1520abaaae57fe8267639bda1d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"17e5da53e4e5bd659e22add9bba1cfa222e7e30d":["ff8c50dd45235d6537b8ea3706823729a4aeed9c","89424def13674ea17829b41c5883c54ecc31a132"],"21dce54fa5b372eb86d4e848173dad023c2c61d5":["ff8c50dd45235d6537b8ea3706823729a4aeed9c"],"bc8f206328a706450934717bec7ccc22ad166fc0":["ff8c50dd45235d6537b8ea3706823729a4aeed9c","21dce54fa5b372eb86d4e848173dad023c2c61d5"],"ff8c50dd45235d6537b8ea3706823729a4aeed9c":["cc3d73ce4049cb1520abaaae57fe8267639bda1d"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","17e5da53e4e5bd659e22add9bba1cfa222e7e30d"],"3b013574eedcdbac35dc7e35b0ee616ffc38895d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","ff8c50dd45235d6537b8ea3706823729a4aeed9c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["7e614eceb81b081076e753ed62268c93c8a2a28e"],"89424def13674ea17829b41c5883c54ecc31a132":["ff8c50dd45235d6537b8ea3706823729a4aeed9c","bc8f206328a706450934717bec7ccc22ad166fc0"]},"commit2Childs":{"df724d84dab24a0cc54bec95a8680867adc7f171":[],"7e614eceb81b081076e753ed62268c93c8a2a28e":["df724d84dab24a0cc54bec95a8680867adc7f171","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cc3d73ce4049cb1520abaaae57fe8267639bda1d":["ff8c50dd45235d6537b8ea3706823729a4aeed9c"],"17e5da53e4e5bd659e22add9bba1cfa222e7e30d":["df724d84dab24a0cc54bec95a8680867adc7f171","7e614eceb81b081076e753ed62268c93c8a2a28e","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cc3d73ce4049cb1520abaaae57fe8267639bda1d","4cce5816ef15a48a0bc11e5d400497ee4301dd3b","3b013574eedcdbac35dc7e35b0ee616ffc38895d"],"21dce54fa5b372eb86d4e848173dad023c2c61d5":["bc8f206328a706450934717bec7ccc22ad166fc0"],"bc8f206328a706450934717bec7ccc22ad166fc0":["89424def13674ea17829b41c5883c54ecc31a132"],"ff8c50dd45235d6537b8ea3706823729a4aeed9c":["17e5da53e4e5bd659e22add9bba1cfa222e7e30d","21dce54fa5b372eb86d4e848173dad023c2c61d5","bc8f206328a706450934717bec7ccc22ad166fc0","3b013574eedcdbac35dc7e35b0ee616ffc38895d","89424def13674ea17829b41c5883c54ecc31a132"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"3b013574eedcdbac35dc7e35b0ee616ffc38895d":[],"89424def13674ea17829b41c5883c54ecc31a132":["17e5da53e4e5bd659e22add9bba1cfa222e7e30d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["df724d84dab24a0cc54bec95a8680867adc7f171","4cce5816ef15a48a0bc11e5d400497ee4301dd3b","3b013574eedcdbac35dc7e35b0ee616ffc38895d","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}