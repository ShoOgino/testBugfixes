{"path":"solr/core/src/java/org/apache/solr/core/SolrXmlConfig#loadProperties(Config).mjava","commits":[{"id":"e15199583d3635cb940942caed05132dd6c4c7c6","date":1424875551,"type":1,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/SolrXmlConfig#loadProperties(Config).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/ConfigSolrXml#loadProperties(Config).mjava","sourceNew":"  private static Properties loadProperties(Config config) {\n    try {\n      Node node = ((NodeList) config.evaluate(\"solr\", XPathConstants.NODESET)).item(0);\n      XPath xpath = config.getXPath();\n      NodeList props = (NodeList) xpath.evaluate(\"property\", node, XPathConstants.NODESET);\n      Properties properties = new Properties();\n      for (int i = 0; i < props.getLength(); i++) {\n        Node prop = props.item(i);\n        properties.setProperty(DOMUtil.getAttr(prop, \"name\"),\n            PropertiesUtil.substituteProperty(DOMUtil.getAttr(prop, \"value\"), null));\n      }\n      return properties;\n    }\n    catch (XPathExpressionException e) {\n      log.warn(\"Error parsing solr.xml: \" + e.getMessage());\n      return null;\n    }\n  }\n\n","sourceOld":"  private static Properties loadProperties(Config config) {\n    try {\n      Node node = ((NodeList) config.evaluate(\"solr\", XPathConstants.NODESET)).item(0);\n      XPath xpath = config.getXPath();\n      NodeList props = (NodeList) xpath.evaluate(\"property\", node, XPathConstants.NODESET);\n      Properties properties = new Properties();\n      for (int i = 0; i < props.getLength(); i++) {\n        Node prop = props.item(i);\n        properties.setProperty(DOMUtil.getAttr(prop, \"name\"),\n            PropertiesUtil.substituteProperty(DOMUtil.getAttr(prop, \"value\"), null));\n      }\n      return properties;\n    }\n    catch (XPathExpressionException e) {\n      log.warn(\"Error parsing solr.xml: \" + e.getMessage());\n      return null;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","date":1427779360,"type":1,"author":"Ryan Ernst","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/core/SolrXmlConfig#loadProperties(Config).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/ConfigSolrXml#loadProperties(Config).mjava","sourceNew":"  private static Properties loadProperties(Config config) {\n    try {\n      Node node = ((NodeList) config.evaluate(\"solr\", XPathConstants.NODESET)).item(0);\n      XPath xpath = config.getXPath();\n      NodeList props = (NodeList) xpath.evaluate(\"property\", node, XPathConstants.NODESET);\n      Properties properties = new Properties();\n      for (int i = 0; i < props.getLength(); i++) {\n        Node prop = props.item(i);\n        properties.setProperty(DOMUtil.getAttr(prop, \"name\"),\n            PropertiesUtil.substituteProperty(DOMUtil.getAttr(prop, \"value\"), null));\n      }\n      return properties;\n    }\n    catch (XPathExpressionException e) {\n      log.warn(\"Error parsing solr.xml: \" + e.getMessage());\n      return null;\n    }\n  }\n\n","sourceOld":"  private static Properties loadProperties(Config config) {\n    try {\n      Node node = ((NodeList) config.evaluate(\"solr\", XPathConstants.NODESET)).item(0);\n      XPath xpath = config.getXPath();\n      NodeList props = (NodeList) xpath.evaluate(\"property\", node, XPathConstants.NODESET);\n      Properties properties = new Properties();\n      for (int i = 0; i < props.getLength(); i++) {\n        Node prop = props.item(i);\n        properties.setProperty(DOMUtil.getAttr(prop, \"name\"),\n            PropertiesUtil.substituteProperty(DOMUtil.getAttr(prop, \"value\"), null));\n      }\n      return properties;\n    }\n    catch (XPathExpressionException e) {\n      log.warn(\"Error parsing solr.xml: \" + e.getMessage());\n      return null;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1390137e395d2f07f9ba5b8c43d293befe84d563","date":1427947685,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/SolrXmlConfig#loadProperties(Config).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/SolrXmlConfig#loadProperties(Config).mjava","sourceNew":"  private static Properties loadProperties(Config config) {\n    try {\n      Node node = ((NodeList) config.evaluate(\"solr\", XPathConstants.NODESET)).item(0);\n      XPath xpath = config.getXPath();\n      NodeList props = (NodeList) xpath.evaluate(\"property\", node, XPathConstants.NODESET);\n      Properties properties = new Properties();\n      for (int i = 0; i < props.getLength(); i++) {\n        Node prop = props.item(i);\n        properties.setProperty(DOMUtil.getAttr(prop, NAME),\n            PropertiesUtil.substituteProperty(DOMUtil.getAttr(prop, \"value\"), null));\n      }\n      return properties;\n    }\n    catch (XPathExpressionException e) {\n      log.warn(\"Error parsing solr.xml: \" + e.getMessage());\n      return null;\n    }\n  }\n\n","sourceOld":"  private static Properties loadProperties(Config config) {\n    try {\n      Node node = ((NodeList) config.evaluate(\"solr\", XPathConstants.NODESET)).item(0);\n      XPath xpath = config.getXPath();\n      NodeList props = (NodeList) xpath.evaluate(\"property\", node, XPathConstants.NODESET);\n      Properties properties = new Properties();\n      for (int i = 0; i < props.getLength(); i++) {\n        Node prop = props.item(i);\n        properties.setProperty(DOMUtil.getAttr(prop, \"name\"),\n            PropertiesUtil.substituteProperty(DOMUtil.getAttr(prop, \"value\"), null));\n      }\n      return properties;\n    }\n    catch (XPathExpressionException e) {\n      log.warn(\"Error parsing solr.xml: \" + e.getMessage());\n      return null;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d2638f781be724518ff6c2263d14a48cf6e68017","date":1427989059,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/core/SolrXmlConfig#loadProperties(Config).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/SolrXmlConfig#loadProperties(Config).mjava","sourceNew":"  private static Properties loadProperties(Config config) {\n    try {\n      Node node = ((NodeList) config.evaluate(\"solr\", XPathConstants.NODESET)).item(0);\n      XPath xpath = config.getXPath();\n      NodeList props = (NodeList) xpath.evaluate(\"property\", node, XPathConstants.NODESET);\n      Properties properties = new Properties();\n      for (int i = 0; i < props.getLength(); i++) {\n        Node prop = props.item(i);\n        properties.setProperty(DOMUtil.getAttr(prop, NAME),\n            PropertiesUtil.substituteProperty(DOMUtil.getAttr(prop, \"value\"), null));\n      }\n      return properties;\n    }\n    catch (XPathExpressionException e) {\n      log.warn(\"Error parsing solr.xml: \" + e.getMessage());\n      return null;\n    }\n  }\n\n","sourceOld":"  private static Properties loadProperties(Config config) {\n    try {\n      Node node = ((NodeList) config.evaluate(\"solr\", XPathConstants.NODESET)).item(0);\n      XPath xpath = config.getXPath();\n      NodeList props = (NodeList) xpath.evaluate(\"property\", node, XPathConstants.NODESET);\n      Properties properties = new Properties();\n      for (int i = 0; i < props.getLength(); i++) {\n        Node prop = props.item(i);\n        properties.setProperty(DOMUtil.getAttr(prop, \"name\"),\n            PropertiesUtil.substituteProperty(DOMUtil.getAttr(prop, \"value\"), null));\n      }\n      return properties;\n    }\n    catch (XPathExpressionException e) {\n      log.warn(\"Error parsing solr.xml: \" + e.getMessage());\n      return null;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ee622110ba6021d0390037e77574743c1e55348c","date":1546700916,"type":5,"author":"David Smiley","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/SolrXmlConfig#loadProperties(XmlConfigFile).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/SolrXmlConfig#loadProperties(Config).mjava","sourceNew":"  private static Properties loadProperties(XmlConfigFile config) {\n    try {\n      Node node = ((NodeList) config.evaluate(\"solr\", XPathConstants.NODESET)).item(0);\n      XPath xpath = config.getXPath();\n      NodeList props = (NodeList) xpath.evaluate(\"property\", node, XPathConstants.NODESET);\n      Properties properties = new Properties();\n      for (int i = 0; i < props.getLength(); i++) {\n        Node prop = props.item(i);\n        properties.setProperty(DOMUtil.getAttr(prop, NAME),\n            PropertiesUtil.substituteProperty(DOMUtil.getAttr(prop, \"value\"), null));\n      }\n      return properties;\n    }\n    catch (XPathExpressionException e) {\n      log.warn(\"Error parsing solr.xml: \" + e.getMessage());\n      return null;\n    }\n  }\n\n","sourceOld":"  private static Properties loadProperties(Config config) {\n    try {\n      Node node = ((NodeList) config.evaluate(\"solr\", XPathConstants.NODESET)).item(0);\n      XPath xpath = config.getXPath();\n      NodeList props = (NodeList) xpath.evaluate(\"property\", node, XPathConstants.NODESET);\n      Properties properties = new Properties();\n      for (int i = 0; i < props.getLength(); i++) {\n        Node prop = props.item(i);\n        properties.setProperty(DOMUtil.getAttr(prop, NAME),\n            PropertiesUtil.substituteProperty(DOMUtil.getAttr(prop, \"value\"), null));\n      }\n      return properties;\n    }\n    catch (XPathExpressionException e) {\n      log.warn(\"Error parsing solr.xml: \" + e.getMessage());\n      return null;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"ee622110ba6021d0390037e77574743c1e55348c":["1390137e395d2f07f9ba5b8c43d293befe84d563"],"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","e15199583d3635cb940942caed05132dd6c4c7c6"],"1390137e395d2f07f9ba5b8c43d293befe84d563":["e15199583d3635cb940942caed05132dd6c4c7c6"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"d2638f781be724518ff6c2263d14a48cf6e68017":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","1390137e395d2f07f9ba5b8c43d293befe84d563"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["ee622110ba6021d0390037e77574743c1e55348c"],"e15199583d3635cb940942caed05132dd6c4c7c6":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"ee622110ba6021d0390037e77574743c1e55348c":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":["d2638f781be724518ff6c2263d14a48cf6e68017"],"1390137e395d2f07f9ba5b8c43d293befe84d563":["ee622110ba6021d0390037e77574743c1e55348c","d2638f781be724518ff6c2263d14a48cf6e68017"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","e15199583d3635cb940942caed05132dd6c4c7c6"],"d2638f781be724518ff6c2263d14a48cf6e68017":[],"e15199583d3635cb940942caed05132dd6c4c7c6":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","1390137e395d2f07f9ba5b8c43d293befe84d563"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["d2638f781be724518ff6c2263d14a48cf6e68017","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}