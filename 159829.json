{"path":"solr/core/src/test/org/apache/solr/analytics/facet/AbstractAnalyticsFacetTest#xmlToList(String,String,String).mjava","commits":[{"id":"ff403346522eaa9de75403763e297e83a3ea585c","date":1384904731,"type":0,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/analytics/facet/AbstractAnalyticsFacetTest#xmlToList(String,String,String).mjava","pathOld":"/dev/null","sourceNew":"  @SuppressWarnings({ \"unchecked\", \"rawtypes\" })\n  public ArrayList xmlToList(String facit, String type, String name) {\n    ArrayList list;\n    if (type.equals(\"double\")) {\n      list = new ArrayList<Double>();\n    } else if (type.equals(\"int\")) {\n      list = new ArrayList<Integer>();\n    } else if (type.equals(\"long\")) {\n      list = new ArrayList<Long>();\n    } else if (type.equals(\"float\")) {\n      list = new ArrayList<Float>();\n    } else {\n      list = new ArrayList<String>();\n    }\n    String find = \"<\"+type+\" name=\\\"\"+name+\"\\\">\";\n    String endS = \"</\"+type+\">\";\n    int findAt = facit.indexOf(find)+find.length();\n    while (findAt>find.length()) {\n      int end = facit.indexOf(endS, findAt);\n      if (type.equals(\"double\")) {\n        list.add(Double.parseDouble(facit.substring(findAt, end)));\n      } else if (type.equals(\"int\")) {\n        list.add(Integer.parseInt(facit.substring(findAt, end)));\n      } else if (type.equals(\"long\")) {\n        list.add(Long.parseLong(facit.substring(findAt, end)));\n      } else if (type.equals(\"float\")) {\n        list.add(Float.parseFloat(facit.substring(findAt, end)));\n      } else {\n        list.add(facit.substring(findAt, end));\n      }\n      findAt = facit.indexOf(find, end)+find.length();\n    }\n    return list;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1c0586e0570de2261142e339891d57c0f36f45c6","date":1385565864,"type":4,"author":"Erick Erickson","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/core/src/test/org/apache/solr/analytics/facet/AbstractAnalyticsFacetTest#xmlToList(String,String,String).mjava","sourceNew":null,"sourceOld":"  @SuppressWarnings({ \"unchecked\", \"rawtypes\" })\n  public ArrayList xmlToList(String facit, String type, String name) {\n    ArrayList list;\n    if (type.equals(\"double\")) {\n      list = new ArrayList<Double>();\n    } else if (type.equals(\"int\")) {\n      list = new ArrayList<Integer>();\n    } else if (type.equals(\"long\")) {\n      list = new ArrayList<Long>();\n    } else if (type.equals(\"float\")) {\n      list = new ArrayList<Float>();\n    } else {\n      list = new ArrayList<String>();\n    }\n    String find = \"<\"+type+\" name=\\\"\"+name+\"\\\">\";\n    String endS = \"</\"+type+\">\";\n    int findAt = facit.indexOf(find)+find.length();\n    while (findAt>find.length()) {\n      int end = facit.indexOf(endS, findAt);\n      if (type.equals(\"double\")) {\n        list.add(Double.parseDouble(facit.substring(findAt, end)));\n      } else if (type.equals(\"int\")) {\n        list.add(Integer.parseInt(facit.substring(findAt, end)));\n      } else if (type.equals(\"long\")) {\n        list.add(Long.parseLong(facit.substring(findAt, end)));\n      } else if (type.equals(\"float\")) {\n        list.add(Float.parseFloat(facit.substring(findAt, end)));\n      } else {\n        list.add(facit.substring(findAt, end));\n      }\n      findAt = facit.indexOf(find, end)+find.length();\n    }\n    return list;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"ff403346522eaa9de75403763e297e83a3ea585c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["1c0586e0570de2261142e339891d57c0f36f45c6"],"1c0586e0570de2261142e339891d57c0f36f45c6":["ff403346522eaa9de75403763e297e83a3ea585c"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["ff403346522eaa9de75403763e297e83a3ea585c"],"ff403346522eaa9de75403763e297e83a3ea585c":["1c0586e0570de2261142e339891d57c0f36f45c6"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"1c0586e0570de2261142e339891d57c0f36f45c6":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}