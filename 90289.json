{"path":"modules/queries/src/java/org/apache/lucene/queries/function/ValueSource#getSortField(boolean).mjava","commits":[{"id":"f35b388d9df4d2190412cd1cbcc0c391a94bb158","date":1309218318,"type":1,"author":"Christopher John Male","isMerge":false,"pathNew":"modules/queries/src/java/org/apache/lucene/queries/function/ValueSource#getSortField(boolean).mjava","pathOld":"solr/src/java/org/apache/solr/search/function/ValueSource#getSortField(boolean).mjava","sourceNew":"  /**\n   * EXPERIMENTAL: This method is subject to change.\n   * <p>\n   * Get the SortField for this ValueSource.  Uses the {@link #getValues(java.util.Map, IndexReader.AtomicReaderContext)}\n   * to populate the SortField.\n   *\n   * @param reverse true if this is a reverse sort.\n   * @return The {@link org.apache.lucene.search.SortField} for the ValueSource\n   * @throws IOException if there was a problem reading the values.\n   */\n  public SortField getSortField(boolean reverse) throws IOException {\n    return new ValueSourceSortField(reverse);\n  }\n\n","sourceOld":"  /**\n   * EXPERIMENTAL: This method is subject to change.\n   * <p>\n   * Get the SortField for this ValueSource.  Uses the {@link #getValues(java.util.Map, IndexReader.AtomicReaderContext)}\n   * to populate the SortField.\n   *\n   * @param reverse true if this is a reverse sort.\n   * @return The {@link org.apache.lucene.search.SortField} for the ValueSource\n   * @throws IOException if there was a problem reading the values.\n   */\n  public SortField getSortField(boolean reverse) throws IOException {\n    return new ValueSourceSortField(reverse);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2553b00f699380c64959ccb27991289aae87be2e","date":1309290151,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"modules/queries/src/java/org/apache/lucene/queries/function/ValueSource#getSortField(boolean).mjava","pathOld":"solr/src/java/org/apache/solr/search/function/ValueSource#getSortField(boolean).mjava","sourceNew":"  /**\n   * EXPERIMENTAL: This method is subject to change.\n   * <p>\n   * Get the SortField for this ValueSource.  Uses the {@link #getValues(java.util.Map, IndexReader.AtomicReaderContext)}\n   * to populate the SortField.\n   *\n   * @param reverse true if this is a reverse sort.\n   * @return The {@link org.apache.lucene.search.SortField} for the ValueSource\n   * @throws IOException if there was a problem reading the values.\n   */\n  public SortField getSortField(boolean reverse) throws IOException {\n    return new ValueSourceSortField(reverse);\n  }\n\n","sourceOld":"  /**\n   * EXPERIMENTAL: This method is subject to change.\n   * <p>\n   * Get the SortField for this ValueSource.  Uses the {@link #getValues(java.util.Map, IndexReader.AtomicReaderContext)}\n   * to populate the SortField.\n   *\n   * @param reverse true if this is a reverse sort.\n   * @return The {@link org.apache.lucene.search.SortField} for the ValueSource\n   * @throws IOException if there was a problem reading the values.\n   */\n  public SortField getSortField(boolean reverse) throws IOException {\n    return new ValueSourceSortField(reverse);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d083e83f225b11e5fdd900e83d26ddb385b6955c","date":1310029438,"type":1,"author":"Simon Willnauer","isMerge":true,"pathNew":"modules/queries/src/java/org/apache/lucene/queries/function/ValueSource#getSortField(boolean).mjava","pathOld":"solr/src/java/org/apache/solr/search/function/ValueSource#getSortField(boolean).mjava","sourceNew":"  /**\n   * EXPERIMENTAL: This method is subject to change.\n   * <p>\n   * Get the SortField for this ValueSource.  Uses the {@link #getValues(java.util.Map, IndexReader.AtomicReaderContext)}\n   * to populate the SortField.\n   *\n   * @param reverse true if this is a reverse sort.\n   * @return The {@link org.apache.lucene.search.SortField} for the ValueSource\n   * @throws IOException if there was a problem reading the values.\n   */\n  public SortField getSortField(boolean reverse) throws IOException {\n    return new ValueSourceSortField(reverse);\n  }\n\n","sourceOld":"  /**\n   * EXPERIMENTAL: This method is subject to change.\n   * <p>\n   * Get the SortField for this ValueSource.  Uses the {@link #getValues(java.util.Map, IndexReader.AtomicReaderContext)}\n   * to populate the SortField.\n   *\n   * @param reverse true if this is a reverse sort.\n   * @return The {@link org.apache.lucene.search.SortField} for the ValueSource\n   * @throws IOException if there was a problem reading the values.\n   */\n  public SortField getSortField(boolean reverse) throws IOException {\n    return new ValueSourceSortField(reverse);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fad1351342e15571fed2a68feaed0a8a3a18e5da","date":1327959908,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"modules/queries/src/java/org/apache/lucene/queries/function/ValueSource#getSortField(boolean).mjava","pathOld":"modules/queries/src/java/org/apache/lucene/queries/function/ValueSource#getSortField(boolean).mjava","sourceNew":"  /**\n   * EXPERIMENTAL: This method is subject to change.\n   * <p>\n   * Get the SortField for this ValueSource.  Uses the {@link #getValues(java.util.Map, AtomicReaderContext)}\n   * to populate the SortField.\n   *\n   * @param reverse true if this is a reverse sort.\n   * @return The {@link org.apache.lucene.search.SortField} for the ValueSource\n   * @throws IOException if there was a problem reading the values.\n   */\n  public SortField getSortField(boolean reverse) throws IOException {\n    return new ValueSourceSortField(reverse);\n  }\n\n","sourceOld":"  /**\n   * EXPERIMENTAL: This method is subject to change.\n   * <p>\n   * Get the SortField for this ValueSource.  Uses the {@link #getValues(java.util.Map, IndexReader.AtomicReaderContext)}\n   * to populate the SortField.\n   *\n   * @param reverse true if this is a reverse sort.\n   * @return The {@link org.apache.lucene.search.SortField} for the ValueSource\n   * @throws IOException if there was a problem reading the values.\n   */\n  public SortField getSortField(boolean reverse) throws IOException {\n    return new ValueSourceSortField(reverse);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5cab9a86bd67202d20b6adc463008c8e982b070a","date":1327966443,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"modules/queries/src/java/org/apache/lucene/queries/function/ValueSource#getSortField(boolean).mjava","pathOld":"modules/queries/src/java/org/apache/lucene/queries/function/ValueSource#getSortField(boolean).mjava","sourceNew":"  /**\n   * EXPERIMENTAL: This method is subject to change.\n   * <p>\n   * Get the SortField for this ValueSource.  Uses the {@link #getValues(java.util.Map, AtomicReaderContext)}\n   * to populate the SortField.\n   *\n   * @param reverse true if this is a reverse sort.\n   * @return The {@link org.apache.lucene.search.SortField} for the ValueSource\n   * @throws IOException if there was a problem reading the values.\n   */\n  public SortField getSortField(boolean reverse) throws IOException {\n    return new ValueSourceSortField(reverse);\n  }\n\n","sourceOld":"  /**\n   * EXPERIMENTAL: This method is subject to change.\n   * <p>\n   * Get the SortField for this ValueSource.  Uses the {@link #getValues(java.util.Map, IndexReader.AtomicReaderContext)}\n   * to populate the SortField.\n   *\n   * @param reverse true if this is a reverse sort.\n   * @return The {@link org.apache.lucene.search.SortField} for the ValueSource\n   * @throws IOException if there was a problem reading the values.\n   */\n  public SortField getSortField(boolean reverse) throws IOException {\n    return new ValueSourceSortField(reverse);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/queries/src/java/org/apache/lucene/queries/function/ValueSource#getSortField(boolean).mjava","pathOld":"modules/queries/src/java/org/apache/lucene/queries/function/ValueSource#getSortField(boolean).mjava","sourceNew":"  /**\n   * EXPERIMENTAL: This method is subject to change.\n   * <p>\n   * Get the SortField for this ValueSource.  Uses the {@link #getValues(java.util.Map, AtomicReaderContext)}\n   * to populate the SortField.\n   *\n   * @param reverse true if this is a reverse sort.\n   * @return The {@link org.apache.lucene.search.SortField} for the ValueSource\n   * @throws IOException if there was a problem reading the values.\n   */\n  public SortField getSortField(boolean reverse) throws IOException {\n    return new ValueSourceSortField(reverse);\n  }\n\n","sourceOld":"  /**\n   * EXPERIMENTAL: This method is subject to change.\n   * <p>\n   * Get the SortField for this ValueSource.  Uses the {@link #getValues(java.util.Map, AtomicReaderContext)}\n   * to populate the SortField.\n   *\n   * @param reverse true if this is a reverse sort.\n   * @return The {@link org.apache.lucene.search.SortField} for the ValueSource\n   * @throws IOException if there was a problem reading the values.\n   */\n  public SortField getSortField(boolean reverse) throws IOException {\n    return new ValueSourceSortField(reverse);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["5cab9a86bd67202d20b6adc463008c8e982b070a"],"f35b388d9df4d2190412cd1cbcc0c391a94bb158":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"2553b00f699380c64959ccb27991289aae87be2e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","f35b388d9df4d2190412cd1cbcc0c391a94bb158"],"fad1351342e15571fed2a68feaed0a8a3a18e5da":["f35b388d9df4d2190412cd1cbcc0c391a94bb158"],"d083e83f225b11e5fdd900e83d26ddb385b6955c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","f35b388d9df4d2190412cd1cbcc0c391a94bb158"],"5cab9a86bd67202d20b6adc463008c8e982b070a":["f35b388d9df4d2190412cd1cbcc0c391a94bb158","fad1351342e15571fed2a68feaed0a8a3a18e5da"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b89678825b68eccaf09e6ab71675fc0b0af1e099"]},"commit2Childs":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"f35b388d9df4d2190412cd1cbcc0c391a94bb158":["2553b00f699380c64959ccb27991289aae87be2e","fad1351342e15571fed2a68feaed0a8a3a18e5da","d083e83f225b11e5fdd900e83d26ddb385b6955c","5cab9a86bd67202d20b6adc463008c8e982b070a"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["f35b388d9df4d2190412cd1cbcc0c391a94bb158","2553b00f699380c64959ccb27991289aae87be2e","d083e83f225b11e5fdd900e83d26ddb385b6955c"],"2553b00f699380c64959ccb27991289aae87be2e":[],"fad1351342e15571fed2a68feaed0a8a3a18e5da":["5cab9a86bd67202d20b6adc463008c8e982b070a"],"d083e83f225b11e5fdd900e83d26ddb385b6955c":[],"5cab9a86bd67202d20b6adc463008c8e982b070a":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["2553b00f699380c64959ccb27991289aae87be2e","d083e83f225b11e5fdd900e83d26ddb385b6955c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}