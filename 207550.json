{"path":"contrib/analyzers/smartcn/src/java/org/apache/lucene/analysis/cn/smart/hhmm/SegToken#hashCode().mjava","commits":[{"id":"dd745d580729e528151b58aeda87ef82f1b95c9b","date":1248369082,"type":0,"author":"Simon Willnauer","isMerge":false,"pathNew":"contrib/analyzers/smartcn/src/java/org/apache/lucene/analysis/cn/smart/hhmm/SegToken#hashCode().mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * @see java.lang.Object#hashCode()\n   */\n  public int hashCode() {\n    final int prime = 31;\n    int result = 1;\n    result = prime * result + Arrays.hashCode(charArray);\n    result = prime * result + endOffset;\n    result = prime * result + index;\n    result = prime * result + startOffset;\n    result = prime * result + weight;\n    result = prime * result + wordType;\n    return result;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c41ac0c8b1cc97a453acd3e2a515efe390bff46b","date":1249663689,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"contrib/analyzers/smartcn/src/java/org/apache/lucene/analysis/cn/smart/hhmm/SegToken#hashCode().mjava","pathOld":"contrib/analyzers/smartcn/src/java/org/apache/lucene/analysis/cn/smart/hhmm/SegToken#hashCode().mjava","sourceNew":"  /**\n   * @see java.lang.Object#hashCode()\n   */\n  public int hashCode() {\n    final int prime = 31;\n    int result = 1;\n    for(int i=0;i<charArray.length;i++) {\n      result = prime * result + charArray[i];\n    }\n    result = prime * result + endOffset;\n    result = prime * result + index;\n    result = prime * result + startOffset;\n    result = prime * result + weight;\n    result = prime * result + wordType;\n    return result;\n  }\n\n","sourceOld":"  /**\n   * @see java.lang.Object#hashCode()\n   */\n  public int hashCode() {\n    final int prime = 31;\n    int result = 1;\n    result = prime * result + Arrays.hashCode(charArray);\n    result = prime * result + endOffset;\n    result = prime * result + index;\n    result = prime * result + startOffset;\n    result = prime * result + weight;\n    result = prime * result + wordType;\n    return result;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d57eb7c98c08c03af6e4cd83509df31c81ac16af","date":1257684312,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"contrib/analyzers/smartcn/src/java/org/apache/lucene/analysis/cn/smart/hhmm/SegToken#hashCode().mjava","pathOld":"contrib/analyzers/smartcn/src/java/org/apache/lucene/analysis/cn/smart/hhmm/SegToken#hashCode().mjava","sourceNew":"  /**\n   * @see java.lang.Object#hashCode()\n   */\n  @Override\n  public int hashCode() {\n    final int prime = 31;\n    int result = 1;\n    for(int i=0;i<charArray.length;i++) {\n      result = prime * result + charArray[i];\n    }\n    result = prime * result + endOffset;\n    result = prime * result + index;\n    result = prime * result + startOffset;\n    result = prime * result + weight;\n    result = prime * result + wordType;\n    return result;\n  }\n\n","sourceOld":"  /**\n   * @see java.lang.Object#hashCode()\n   */\n  public int hashCode() {\n    final int prime = 31;\n    int result = 1;\n    for(int i=0;i<charArray.length;i++) {\n      result = prime * result + charArray[i];\n    }\n    result = prime * result + endOffset;\n    result = prime * result + index;\n    result = prime * result + startOffset;\n    result = prime * result + weight;\n    result = prime * result + wordType;\n    return result;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/contrib/analyzers/smartcn/src/java/org/apache/lucene/analysis/cn/smart/hhmm/SegToken#hashCode().mjava","pathOld":"contrib/analyzers/smartcn/src/java/org/apache/lucene/analysis/cn/smart/hhmm/SegToken#hashCode().mjava","sourceNew":"  /**\n   * @see java.lang.Object#hashCode()\n   */\n  @Override\n  public int hashCode() {\n    final int prime = 31;\n    int result = 1;\n    for(int i=0;i<charArray.length;i++) {\n      result = prime * result + charArray[i];\n    }\n    result = prime * result + endOffset;\n    result = prime * result + index;\n    result = prime * result + startOffset;\n    result = prime * result + weight;\n    result = prime * result + wordType;\n    return result;\n  }\n\n","sourceOld":"  /**\n   * @see java.lang.Object#hashCode()\n   */\n  @Override\n  public int hashCode() {\n    final int prime = 31;\n    int result = 1;\n    for(int i=0;i<charArray.length;i++) {\n      result = prime * result + charArray[i];\n    }\n    result = prime * result + endOffset;\n    result = prime * result + index;\n    result = prime * result + startOffset;\n    result = prime * result + weight;\n    result = prime * result + wordType;\n    return result;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"dd745d580729e528151b58aeda87ef82f1b95c9b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"d57eb7c98c08c03af6e4cd83509df31c81ac16af":["c41ac0c8b1cc97a453acd3e2a515efe390bff46b"],"c41ac0c8b1cc97a453acd3e2a515efe390bff46b":["dd745d580729e528151b58aeda87ef82f1b95c9b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["d57eb7c98c08c03af6e4cd83509df31c81ac16af"]},"commit2Childs":{"dd745d580729e528151b58aeda87ef82f1b95c9b":["c41ac0c8b1cc97a453acd3e2a515efe390bff46b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["dd745d580729e528151b58aeda87ef82f1b95c9b"],"d57eb7c98c08c03af6e4cd83509df31c81ac16af":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"c41ac0c8b1cc97a453acd3e2a515efe390bff46b":["d57eb7c98c08c03af6e4cd83509df31c81ac16af"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}