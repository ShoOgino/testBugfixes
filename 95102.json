{"path":"solr/core/src/java/org/apache/solr/search/Grouping.CommandQuery#newCollector(Sort,boolean).mjava","commits":[{"id":"c903c3d15906a3da96b8c0c2fb704491005fdbdb","date":1453508227,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/Grouping.CommandQuery#newCollector(Sort,boolean).mjava","pathOld":"solr/src/java/org/apache/solr/search/Grouping.CommandQuery#newCollector(Sort,boolean).mjava","sourceNew":"    TopDocsCollector newCollector(Sort sort, boolean needScores) throws IOException {\n      int groupDocsToCollect = getMax(groupOffset, docsPerGroup, maxDoc);\n      if (sort == null || sort == Sort.RELEVANCE) {\n        return TopScoreDocCollector.create(groupDocsToCollect, true);\n      } else {\n        return TopFieldCollector.create(searcher.weightSort(sort), groupDocsToCollect, false, needScores, needScores, true);\n      }\n    }\n\n","sourceOld":"    TopDocsCollector newCollector(Sort sort, boolean needScores) throws IOException {\n      int groupDocsToCollect = getMax(groupOffset, docsPerGroup, maxDoc);\n      if (sort == null || sort == Sort.RELEVANCE) {\n        return TopScoreDocCollector.create(groupDocsToCollect, true);\n      } else {\n        return TopFieldCollector.create(searcher.weightSort(sort), groupDocsToCollect, false, needScores, needScores, true);\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a258fbb26824fd104ed795e5d9033d2d040049ee","date":1453508252,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/Grouping.CommandQuery#newCollector(Sort,boolean).mjava","pathOld":"solr/src/java/org/apache/solr/search/Grouping.CommandQuery#newCollector(Sort,boolean).mjava","sourceNew":"    TopDocsCollector newCollector(Sort sort, boolean needScores) throws IOException {\n      int groupDocsToCollect = getMax(groupOffset, docsPerGroup, maxDoc);\n      if (sort == null || sort == Sort.RELEVANCE) {\n        return TopScoreDocCollector.create(groupDocsToCollect, true);\n      } else {\n        return TopFieldCollector.create(searcher.weightSort(sort), groupDocsToCollect, false, needScores, needScores, true);\n      }\n    }\n\n","sourceOld":"    TopDocsCollector newCollector(Sort sort, boolean needScores) throws IOException {\n      int groupDocsToCollect = getMax(groupOffset, docsPerGroup, maxDoc);\n      if (sort == null || sort == Sort.RELEVANCE) {\n        return TopScoreDocCollector.create(groupDocsToCollect, true);\n      } else {\n        return TopFieldCollector.create(searcher.weightSort(sort), groupDocsToCollect, false, needScores, needScores, true);\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/search/Grouping.CommandQuery#newCollector(Sort,boolean).mjava","pathOld":"solr/src/java/org/apache/solr/search/Grouping.CommandQuery#newCollector(Sort,boolean).mjava","sourceNew":"    TopDocsCollector newCollector(Sort sort, boolean needScores) throws IOException {\n      int groupDocsToCollect = getMax(groupOffset, docsPerGroup, maxDoc);\n      if (sort == null || sort == Sort.RELEVANCE) {\n        return TopScoreDocCollector.create(groupDocsToCollect, true);\n      } else {\n        return TopFieldCollector.create(searcher.weightSort(sort), groupDocsToCollect, false, needScores, needScores, true);\n      }\n    }\n\n","sourceOld":"    TopDocsCollector newCollector(Sort sort, boolean needScores) throws IOException {\n      int groupDocsToCollect = getMax(groupOffset, docsPerGroup, maxDoc);\n      if (sort == null || sort == Sort.RELEVANCE) {\n        return TopScoreDocCollector.create(groupDocsToCollect, true);\n      } else {\n        return TopFieldCollector.create(searcher.weightSort(sort), groupDocsToCollect, false, needScores, needScores, true);\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"19275ba31e621f6da1b83bf13af75233876fd3d4","date":1374846698,"type":3,"author":"Han Jiang","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/Grouping.CommandQuery#newCollector(Sort,boolean).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/Grouping.CommandQuery#newCollector(Sort,boolean).mjava","sourceNew":"    TopDocsCollector newCollector(Sort sort, boolean needScores) throws IOException {\n      int groupDocsToCollect = getMax(groupOffset, docsPerGroup, maxDoc);\n      if (sort == null || sort == Sort.RELEVANCE) {\n        return TopScoreDocCollector.create(groupDocsToCollect, true);\n      } else {\n        return TopFieldCollector.create(searcher.weightSort(sort), groupDocsToCollect, false, needScores, needScores, true);\n      }\n    }\n\n","sourceOld":"    TopDocsCollector newCollector(Sort sort, boolean needScores) throws IOException {\n      int groupDocsToCollect = getMax(groupOffset, docsPerGroup, maxDoc);\n      if (sort == null || sort == Sort.RELEVANCE) {\n        return TopScoreDocCollector.create(groupDocsToCollect, true);\n      } else {\n        return TopFieldCollector.create(searcher.weightSort(sort), groupDocsToCollect, false, needScores, needScores, true);\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"716d18f3a9b0993bc679d7fa7abdc9bfb03411ec","date":1376375609,"type":3,"author":"Han Jiang","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/search/Grouping.CommandQuery#newCollector(Sort,boolean).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/Grouping.CommandQuery#newCollector(Sort,boolean).mjava","sourceNew":"    TopDocsCollector newCollector(Sort sort, boolean needScores) throws IOException {\n      int groupDocsToCollect = getMax(groupOffset, docsPerGroup, maxDoc);\n      if (sort == null || sort == Sort.RELEVANCE) {\n        return TopScoreDocCollector.create(groupDocsToCollect, true);\n      } else {\n        return TopFieldCollector.create(searcher.weightSort(sort), groupDocsToCollect, false, needScores, needScores, true);\n      }\n    }\n\n","sourceOld":"    TopDocsCollector newCollector(Sort sort, boolean needScores) throws IOException {\n      int groupDocsToCollect = getMax(groupOffset, docsPerGroup, maxDoc);\n      if (sort == null || sort == Sort.RELEVANCE) {\n        return TopScoreDocCollector.create(groupDocsToCollect, true);\n      } else {\n        return TopFieldCollector.create(searcher.weightSort(sort), groupDocsToCollect, false, needScores, needScores, true);\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f582f18c13d4852b01d4fe0a0196432c5c6f2b7f","date":1421314520,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/Grouping.CommandQuery#newCollector(Sort,boolean).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/Grouping.CommandQuery#newCollector(Sort,boolean).mjava","sourceNew":"    TopDocsCollector newCollector(Sort sort, boolean needScores) throws IOException {\n      int groupDocsToCollect = getMax(groupOffset, docsPerGroup, maxDoc);\n      if (sort == null || sort == Sort.RELEVANCE) {\n        return TopScoreDocCollector.create(groupDocsToCollect);\n      } else {\n        return TopFieldCollector.create(searcher.weightSort(sort), groupDocsToCollect, false, needScores, needScores);\n      }\n    }\n\n","sourceOld":"    TopDocsCollector newCollector(Sort sort, boolean needScores) throws IOException {\n      int groupDocsToCollect = getMax(groupOffset, docsPerGroup, maxDoc);\n      if (sort == null || sort == Sort.RELEVANCE) {\n        return TopScoreDocCollector.create(groupDocsToCollect, true);\n      } else {\n        return TopFieldCollector.create(searcher.weightSort(sort), groupDocsToCollect, false, needScores, needScores, true);\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5e8a6094f2ecf9edcd3bb224b087580ac0aa13f2","date":1448513807,"type":3,"author":"David Wayne Smiley","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/Grouping.CommandQuery#newCollector(Sort,boolean).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/Grouping.CommandQuery#newCollector(Sort,boolean).mjava","sourceNew":"    TopDocsCollector newCollector(Sort sort, boolean needScores) throws IOException {\n      int groupDocsToCollect = getMax(groupOffset, docsPerGroup, maxDoc);\n      if (sort == null || sort.equals(Sort.RELEVANCE)) {\n        return TopScoreDocCollector.create(groupDocsToCollect);\n      } else {\n        return TopFieldCollector.create(searcher.weightSort(sort), groupDocsToCollect, false, needScores, needScores);\n      }\n    }\n\n","sourceOld":"    TopDocsCollector newCollector(Sort sort, boolean needScores) throws IOException {\n      int groupDocsToCollect = getMax(groupOffset, docsPerGroup, maxDoc);\n      if (sort == null || sort == Sort.RELEVANCE) {\n        return TopScoreDocCollector.create(groupDocsToCollect);\n      } else {\n        return TopFieldCollector.create(searcher.weightSort(sort), groupDocsToCollect, false, needScores, needScores);\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"404d1ab7f6f396235047017c88d545fec15dafb7","date":1511975378,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/Grouping.CommandQuery#newCollector(Sort,boolean).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/Grouping.CommandQuery#newCollector(Sort,boolean).mjava","sourceNew":"    TopDocsCollector newCollector(Sort sort, boolean needScores) throws IOException {\n      int groupDocsToCollect = getMax(groupOffset, docsPerGroup, maxDoc);\n      if (sort == null || sort.equals(Sort.RELEVANCE)) {\n        return TopScoreDocCollector.create(groupDocsToCollect);\n      } else {\n        return TopFieldCollector.create(searcher.weightSort(sort), groupDocsToCollect, false, needScores, needScores, true);\n      }\n    }\n\n","sourceOld":"    TopDocsCollector newCollector(Sort sort, boolean needScores) throws IOException {\n      int groupDocsToCollect = getMax(groupOffset, docsPerGroup, maxDoc);\n      if (sort == null || sort.equals(Sort.RELEVANCE)) {\n        return TopScoreDocCollector.create(groupDocsToCollect);\n      } else {\n        return TopFieldCollector.create(searcher.weightSort(sort), groupDocsToCollect, false, needScores, needScores);\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1aad05eeff7818b0833c02ac6b743aa72054963b","date":1512093122,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/search/Grouping.CommandQuery#newCollector(Sort,boolean).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/Grouping.CommandQuery#newCollector(Sort,boolean).mjava","sourceNew":"    TopDocsCollector newCollector(Sort sort, boolean needScores) throws IOException {\n      int groupDocsToCollect = getMax(groupOffset, docsPerGroup, maxDoc);\n      if (sort == null || sort.equals(Sort.RELEVANCE)) {\n        return TopScoreDocCollector.create(groupDocsToCollect);\n      } else {\n        return TopFieldCollector.create(searcher.weightSort(sort), groupDocsToCollect, false, needScores, needScores, true);\n      }\n    }\n\n","sourceOld":"    TopDocsCollector newCollector(Sort sort, boolean needScores) throws IOException {\n      int groupDocsToCollect = getMax(groupOffset, docsPerGroup, maxDoc);\n      if (sort == null || sort.equals(Sort.RELEVANCE)) {\n        return TopScoreDocCollector.create(groupDocsToCollect);\n      } else {\n        return TopFieldCollector.create(searcher.weightSort(sort), groupDocsToCollect, false, needScores, needScores);\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"81fff83bdb893c1471efd78f6a9a3ce4f98120b9","date":1531895937,"type":4,"author":"Adrien Grand","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/core/src/java/org/apache/solr/search/Grouping.CommandQuery#newCollector(Sort,boolean).mjava","sourceNew":null,"sourceOld":"    TopDocsCollector newCollector(Sort sort, boolean needScores) throws IOException {\n      int groupDocsToCollect = getMax(groupOffset, docsPerGroup, maxDoc);\n      if (sort == null || sort.equals(Sort.RELEVANCE)) {\n        return TopScoreDocCollector.create(groupDocsToCollect);\n      } else {\n        return TopFieldCollector.create(searcher.weightSort(sort), groupDocsToCollect, false, needScores, needScores, true);\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","date":1531905561,"type":4,"author":"Alessandro Benedetti","isMerge":true,"pathNew":"/dev/null","pathOld":"solr/core/src/java/org/apache/solr/search/Grouping.CommandQuery#newCollector(Sort,boolean).mjava","sourceNew":null,"sourceOld":"    TopDocsCollector newCollector(Sort sort, boolean needScores) throws IOException {\n      int groupDocsToCollect = getMax(groupOffset, docsPerGroup, maxDoc);\n      if (sort == null || sort.equals(Sort.RELEVANCE)) {\n        return TopScoreDocCollector.create(groupDocsToCollect);\n      } else {\n        return TopFieldCollector.create(searcher.weightSort(sort), groupDocsToCollect, false, needScores, needScores, true);\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"716d18f3a9b0993bc679d7fa7abdc9bfb03411ec":["c26f00b574427b55127e869b935845554afde1fa","19275ba31e621f6da1b83bf13af75233876fd3d4"],"404d1ab7f6f396235047017c88d545fec15dafb7":["5e8a6094f2ecf9edcd3bb224b087580ac0aa13f2"],"c26f00b574427b55127e869b935845554afde1fa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","c903c3d15906a3da96b8c0c2fb704491005fdbdb"],"19275ba31e621f6da1b83bf13af75233876fd3d4":["c26f00b574427b55127e869b935845554afde1fa"],"5e8a6094f2ecf9edcd3bb224b087580ac0aa13f2":["f582f18c13d4852b01d4fe0a0196432c5c6f2b7f"],"1aad05eeff7818b0833c02ac6b743aa72054963b":["5e8a6094f2ecf9edcd3bb224b087580ac0aa13f2","404d1ab7f6f396235047017c88d545fec15dafb7"],"0efc9f2cae117418f13ba9035f5e1d516ea7a2b5":["1aad05eeff7818b0833c02ac6b743aa72054963b","81fff83bdb893c1471efd78f6a9a3ce4f98120b9"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"f582f18c13d4852b01d4fe0a0196432c5c6f2b7f":["19275ba31e621f6da1b83bf13af75233876fd3d4"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a258fbb26824fd104ed795e5d9033d2d040049ee":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"81fff83bdb893c1471efd78f6a9a3ce4f98120b9":["1aad05eeff7818b0833c02ac6b743aa72054963b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["81fff83bdb893c1471efd78f6a9a3ce4f98120b9"]},"commit2Childs":{"716d18f3a9b0993bc679d7fa7abdc9bfb03411ec":[],"404d1ab7f6f396235047017c88d545fec15dafb7":["1aad05eeff7818b0833c02ac6b743aa72054963b"],"c26f00b574427b55127e869b935845554afde1fa":["716d18f3a9b0993bc679d7fa7abdc9bfb03411ec","19275ba31e621f6da1b83bf13af75233876fd3d4"],"19275ba31e621f6da1b83bf13af75233876fd3d4":["716d18f3a9b0993bc679d7fa7abdc9bfb03411ec","f582f18c13d4852b01d4fe0a0196432c5c6f2b7f"],"5e8a6094f2ecf9edcd3bb224b087580ac0aa13f2":["404d1ab7f6f396235047017c88d545fec15dafb7","1aad05eeff7818b0833c02ac6b743aa72054963b"],"1aad05eeff7818b0833c02ac6b743aa72054963b":["0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","81fff83bdb893c1471efd78f6a9a3ce4f98120b9"],"0efc9f2cae117418f13ba9035f5e1d516ea7a2b5":[],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["c26f00b574427b55127e869b935845554afde1fa"],"f582f18c13d4852b01d4fe0a0196432c5c6f2b7f":["5e8a6094f2ecf9edcd3bb224b087580ac0aa13f2"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c26f00b574427b55127e869b935845554afde1fa","c903c3d15906a3da96b8c0c2fb704491005fdbdb","a258fbb26824fd104ed795e5d9033d2d040049ee"],"a258fbb26824fd104ed795e5d9033d2d040049ee":[],"81fff83bdb893c1471efd78f6a9a3ce4f98120b9":["0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["716d18f3a9b0993bc679d7fa7abdc9bfb03411ec","0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","a258fbb26824fd104ed795e5d9033d2d040049ee","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}