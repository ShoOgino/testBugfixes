{"path":"contrib/spatial/src/java/org/apache/lucene/spatial/SerialChainFilter#getDocIdSet(IndexReader).mjava","commits":[{"id":"1b1070e1697d2b6a8099a03059e034dadb5becc2","date":1231265586,"type":0,"author":"Ryan McKinley","isMerge":false,"pathNew":"contrib/spatial/src/java/org/apache/lucene/spatial/SerialChainFilter#getDocIdSet(IndexReader).mjava","pathOld":"/dev/null","sourceNew":"  /* (non-Javadoc)\r\n   * @see org.apache.lucene.search.Filter#getDocIdSet(org.apache.lucene.index.IndexReader)\r\n   */\r\n  @Override\r\n  public DocIdSet getDocIdSet(IndexReader reader) throws CorruptIndexException, IOException {\r\n    \r\n    BitSet bits = new BitSet(reader.maxDoc());\r\n    int chainSize = chain.length;\r\n    int actionSize = actionType.length;\r\n    int i = 0;\r\n    \r\n    /**\r\n     * taken from ChainedFilter, first and on an empty bitset results in 0\r\n     */\r\n    if (actionType[i] == AND){\r\n       try {\r\n        bits = (BitSet) ((DocIdBitSet)chain[i].getDocIdSet(reader)).getBitSet().clone();\r\n      } catch (IOException e) {\r\n        // TODO Auto-generated catch block\r\n        e.printStackTrace();\r\n      }\r\n      ++i;\r\n    }\r\n    \r\n    for( ; i < chainSize; i++) {\r\n    \r\n      int action = (i < actionSize)? actionType[i]: DEFAULT;\r\n    \r\n      switch (action){\r\n      \r\n      case (SERIALAND):\r\n        try {\r\n            bits.and(((ISerialChainFilter) chain[i]).bits(reader, bits));\r\n          } catch (CorruptIndexException e) {\r\n            // TODO Auto-generated catch block\r\n            e.printStackTrace();\r\n          } catch (IOException e) {\r\n            // TODO Auto-generated catch block\r\n            e.printStackTrace();\r\n          } catch (Exception e) {\r\n            // TODO Auto-generated catch block\r\n            e.printStackTrace();\r\n          }\r\n        break;\r\n      case (SERIALOR):\r\n        try {\r\n            bits.or(((ISerialChainFilter) chain[i]).bits(reader,bits));\r\n          } catch (Exception e) {\r\n            // TODO Auto-generated catch block\r\n            e.printStackTrace();\r\n          }\r\n        break;\r\n      case (AND):\r\n        bits.and(((DocIdBitSet)chain[i].getDocIdSet(reader)).getBitSet());\r\n        break;\r\n      case (OR):\r\n        bits.or(((DocIdBitSet)chain[i].getDocIdSet(reader)).getBitSet());\r\n        break;\r\n      }\r\n    }\r\n    return new DocIdBitSet(bits);\r\n  }\r\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2e8acf058823017a33328e9af1061fc468632bd8","date":1240938849,"type":3,"author":"Patrick O'Leary","isMerge":false,"pathNew":"contrib/spatial/src/java/org/apache/lucene/spatial/SerialChainFilter#getDocIdSet(IndexReader).mjava","pathOld":"contrib/spatial/src/java/org/apache/lucene/spatial/SerialChainFilter#getDocIdSet(IndexReader).mjava","sourceNew":"  /* (non-Javadoc)\r\n   * @see org.apache.lucene.search.Filter#getDocIdSet(org.apache.lucene.index.IndexReader)\r\n   */\r\n  @Override\r\n  public DocIdSet getDocIdSet(IndexReader reader) throws CorruptIndexException, IOException {\r\n    \r\n    BitSet bits = new BitSet(reader.maxDoc());\r\n    int chainSize = chain.length;\r\n    int actionSize = actionType.length;\r\n    int i = 0;\r\n    \r\n    /**\r\n     * taken from ChainedFilter, first and on an empty bitset results in 0\r\n     */\r\n    if (actionType[i] == AND){\r\n       try {\r\n        bits = (BitSet) ((DocIdBitSet)chain[i].getDocIdSet(reader)).getBitSet().clone();\r\n      } catch (IOException e) {\r\n        // TODO Auto-generated catch block\r\n        e.printStackTrace();\r\n      }\r\n      ++i;\r\n    }\r\n    \r\n    for( ; i < chainSize; i++) {\r\n    \r\n      int action = (i < actionSize)? actionType[i]: DEFAULT;\r\n    \r\n      switch (action){\r\n      \r\n      case (SERIALAND):\r\n        try {\r\n            bits.and(((ISerialChainFilter) chain[i]).bits(reader, bits));\r\n          } catch (CorruptIndexException e) {\r\n            // TODO Auto-generated catch block\r\n            e.printStackTrace();\r\n          } catch (IOException e) {\r\n            // TODO Auto-generated catch block\r\n            e.printStackTrace();\r\n          } catch (Exception e) {\r\n            // TODO Auto-generated catch block\r\n            e.printStackTrace();\r\n          }\r\n        break;\r\n      case (SERIALOR):\r\n        try {\r\n            bits.or(((ISerialChainFilter) chain[i]).bits(reader,bits));\r\n          } catch (Exception e) {\r\n            // TODO Auto-generated catch block\r\n            e.printStackTrace();\r\n          }\r\n        break;\r\n      case (AND):\r\n        bits.and(chain[i].bits(reader));\r\n        break;\r\n      case (OR):\r\n        bits.or(((DocIdBitSet)chain[i].getDocIdSet(reader)).getBitSet());\r\n        break;\r\n      }\r\n    }\r\n    return new DocIdBitSet(bits);\r\n  }\r\n\n","sourceOld":"  /* (non-Javadoc)\r\n   * @see org.apache.lucene.search.Filter#getDocIdSet(org.apache.lucene.index.IndexReader)\r\n   */\r\n  @Override\r\n  public DocIdSet getDocIdSet(IndexReader reader) throws CorruptIndexException, IOException {\r\n    \r\n    BitSet bits = new BitSet(reader.maxDoc());\r\n    int chainSize = chain.length;\r\n    int actionSize = actionType.length;\r\n    int i = 0;\r\n    \r\n    /**\r\n     * taken from ChainedFilter, first and on an empty bitset results in 0\r\n     */\r\n    if (actionType[i] == AND){\r\n       try {\r\n        bits = (BitSet) ((DocIdBitSet)chain[i].getDocIdSet(reader)).getBitSet().clone();\r\n      } catch (IOException e) {\r\n        // TODO Auto-generated catch block\r\n        e.printStackTrace();\r\n      }\r\n      ++i;\r\n    }\r\n    \r\n    for( ; i < chainSize; i++) {\r\n    \r\n      int action = (i < actionSize)? actionType[i]: DEFAULT;\r\n    \r\n      switch (action){\r\n      \r\n      case (SERIALAND):\r\n        try {\r\n            bits.and(((ISerialChainFilter) chain[i]).bits(reader, bits));\r\n          } catch (CorruptIndexException e) {\r\n            // TODO Auto-generated catch block\r\n            e.printStackTrace();\r\n          } catch (IOException e) {\r\n            // TODO Auto-generated catch block\r\n            e.printStackTrace();\r\n          } catch (Exception e) {\r\n            // TODO Auto-generated catch block\r\n            e.printStackTrace();\r\n          }\r\n        break;\r\n      case (SERIALOR):\r\n        try {\r\n            bits.or(((ISerialChainFilter) chain[i]).bits(reader,bits));\r\n          } catch (Exception e) {\r\n            // TODO Auto-generated catch block\r\n            e.printStackTrace();\r\n          }\r\n        break;\r\n      case (AND):\r\n        bits.and(((DocIdBitSet)chain[i].getDocIdSet(reader)).getBitSet());\r\n        break;\r\n      case (OR):\r\n        bits.or(((DocIdBitSet)chain[i].getDocIdSet(reader)).getBitSet());\r\n        break;\r\n      }\r\n    }\r\n    return new DocIdBitSet(bits);\r\n  }\r\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4281ba2c96715d60b63bc198a292ca602a888c2d","date":1240977201,"type":3,"author":"Patrick O'Leary","isMerge":false,"pathNew":"contrib/spatial/src/java/org/apache/lucene/spatial/SerialChainFilter#getDocIdSet(IndexReader).mjava","pathOld":"contrib/spatial/src/java/org/apache/lucene/spatial/SerialChainFilter#getDocIdSet(IndexReader).mjava","sourceNew":"  /* (non-Javadoc)\r\n   * @see org.apache.lucene.search.Filter#getDocIdSet(org.apache.lucene.index.IndexReader)\r\n   */\r\n  @Override\r\n  public DocIdSet getDocIdSet(IndexReader reader) throws CorruptIndexException, IOException {\r\n    \r\n    BitSet bits = new BitSet(reader.maxDoc());\r\n    int chainSize = chain.length;\r\n    int actionSize = actionType.length;\r\n    int i = 0;\r\n    \r\n    /**\r\n     * taken from ChainedFilter, first and on an empty bitset results in 0\r\n     */\r\n    if (actionType[i] == AND){\r\n       try {\r\n      \t//System.out.println(chain[i] );\r\n        bits = (BitSet) ((DocIdBitSet)chain[i].getDocIdSet(reader)).getBitSet().clone();\r\n      } catch (IOException e) {\r\n        // TODO Auto-generated catch block\r\n        e.printStackTrace();\r\n      }\r\n      ++i;\r\n    }\r\n    \r\n    for( ; i < chainSize; i++) {\r\n    \t\r\n      int action = (i < actionSize)? actionType[i]: DEFAULT;\r\n      //System.out.println(chain[i] + \": \"+  action);\r\n      switch (action){\r\n      \r\n      case (SERIALAND):\r\n        try {\r\n            bits.and(((ISerialChainFilter) chain[i]).bits(reader, bits));\r\n          } catch (CorruptIndexException e) {\r\n            // TODO Auto-generated catch block\r\n            e.printStackTrace();\r\n          } catch (IOException e) {\r\n            // TODO Auto-generated catch block\r\n            e.printStackTrace();\r\n          } catch (Exception e) {\r\n            // TODO Auto-generated catch block\r\n            e.printStackTrace();\r\n          }\r\n        break;\r\n      case (SERIALOR):\r\n        try {\r\n            bits.or(((ISerialChainFilter) chain[i]).bits(reader,bits));\r\n          } catch (Exception e) {\r\n            // TODO Auto-generated catch block\r\n            e.printStackTrace();\r\n          }\r\n        break;\r\n      case (AND):\r\n        bits.and(chain[i].bits(reader));\r\n        break;\r\n      case (OR):\r\n        bits.or(((DocIdBitSet)chain[i].getDocIdSet(reader)).getBitSet());\r\n        break;\r\n      }\r\n    }\r\n    \r\n//    System.out.println(\"++++++====================\");\r\n//    new Exception().printStackTrace();\r\n    \r\n    return new DocIdBitSet(bits);\r\n  }\r\n\n","sourceOld":"  /* (non-Javadoc)\r\n   * @see org.apache.lucene.search.Filter#getDocIdSet(org.apache.lucene.index.IndexReader)\r\n   */\r\n  @Override\r\n  public DocIdSet getDocIdSet(IndexReader reader) throws CorruptIndexException, IOException {\r\n    \r\n    BitSet bits = new BitSet(reader.maxDoc());\r\n    int chainSize = chain.length;\r\n    int actionSize = actionType.length;\r\n    int i = 0;\r\n    \r\n    /**\r\n     * taken from ChainedFilter, first and on an empty bitset results in 0\r\n     */\r\n    if (actionType[i] == AND){\r\n       try {\r\n        bits = (BitSet) ((DocIdBitSet)chain[i].getDocIdSet(reader)).getBitSet().clone();\r\n      } catch (IOException e) {\r\n        // TODO Auto-generated catch block\r\n        e.printStackTrace();\r\n      }\r\n      ++i;\r\n    }\r\n    \r\n    for( ; i < chainSize; i++) {\r\n    \r\n      int action = (i < actionSize)? actionType[i]: DEFAULT;\r\n    \r\n      switch (action){\r\n      \r\n      case (SERIALAND):\r\n        try {\r\n            bits.and(((ISerialChainFilter) chain[i]).bits(reader, bits));\r\n          } catch (CorruptIndexException e) {\r\n            // TODO Auto-generated catch block\r\n            e.printStackTrace();\r\n          } catch (IOException e) {\r\n            // TODO Auto-generated catch block\r\n            e.printStackTrace();\r\n          } catch (Exception e) {\r\n            // TODO Auto-generated catch block\r\n            e.printStackTrace();\r\n          }\r\n        break;\r\n      case (SERIALOR):\r\n        try {\r\n            bits.or(((ISerialChainFilter) chain[i]).bits(reader,bits));\r\n          } catch (Exception e) {\r\n            // TODO Auto-generated catch block\r\n            e.printStackTrace();\r\n          }\r\n        break;\r\n      case (AND):\r\n        bits.and(chain[i].bits(reader));\r\n        break;\r\n      case (OR):\r\n        bits.or(((DocIdBitSet)chain[i].getDocIdSet(reader)).getBitSet());\r\n        break;\r\n      }\r\n    }\r\n    return new DocIdBitSet(bits);\r\n  }\r\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"56c4003614cd46d18801540b546693e2b8e2606a","date":1245709136,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"contrib/spatial/src/java/org/apache/lucene/spatial/SerialChainFilter#getDocIdSet(IndexReader).mjava","pathOld":"contrib/spatial/src/java/org/apache/lucene/spatial/SerialChainFilter#getDocIdSet(IndexReader).mjava","sourceNew":"  /* (non-Javadoc)\n   * @see org.apache.lucene.search.Filter#getDocIdSet(org.apache.lucene.index.IndexReader)\n   */\n  @Override\n  public DocIdSet getDocIdSet(IndexReader reader) throws CorruptIndexException, IOException {\n    \n    BitSet bits = new BitSet(reader.maxDoc());\n    int chainSize = chain.length;\n    int actionSize = actionType.length;\n    int i = 0;\n    \n    /**\n     * taken from ChainedFilter, first and on an empty bitset results in 0\n     */\n    if (actionType[i] == AND){\n       try {\n      \t//System.out.println(chain[i] );\n        bits = (BitSet) ((DocIdBitSet)chain[i].getDocIdSet(reader)).getBitSet().clone();\n      } catch (IOException e) {\n        // TODO Auto-generated catch block\n        e.printStackTrace();\n      }\n      ++i;\n    }\n    \n    for( ; i < chainSize; i++) {\n    \t\n      int action = (i < actionSize)? actionType[i]: DEFAULT;\n      //System.out.println(chain[i] + \": \"+  action);\n      switch (action){\n      \n      case (SERIALAND):\n        try {\n            bits.and(((ISerialChainFilter) chain[i]).bits(reader, bits));\n          } catch (CorruptIndexException e) {\n            // TODO Auto-generated catch block\n            e.printStackTrace();\n          } catch (IOException e) {\n            // TODO Auto-generated catch block\n            e.printStackTrace();\n          } catch (Exception e) {\n            // TODO Auto-generated catch block\n            e.printStackTrace();\n          }\n        break;\n      case (SERIALOR):\n        try {\n            bits.or(((ISerialChainFilter) chain[i]).bits(reader,bits));\n          } catch (Exception e) {\n            // TODO Auto-generated catch block\n            e.printStackTrace();\n          }\n        break;\n      case (AND):\n        bits.and(chain[i].bits(reader));\n        break;\n      case (OR):\n        bits.or(((DocIdBitSet)chain[i].getDocIdSet(reader)).getBitSet());\n        break;\n      }\n    }\n    \n//    System.out.println(\"++++++====================\");\n//    new Exception().printStackTrace();\n    \n    return new DocIdBitSet(bits);\n  }\n\n","sourceOld":"  /* (non-Javadoc)\r\n   * @see org.apache.lucene.search.Filter#getDocIdSet(org.apache.lucene.index.IndexReader)\r\n   */\r\n  @Override\r\n  public DocIdSet getDocIdSet(IndexReader reader) throws CorruptIndexException, IOException {\r\n    \r\n    BitSet bits = new BitSet(reader.maxDoc());\r\n    int chainSize = chain.length;\r\n    int actionSize = actionType.length;\r\n    int i = 0;\r\n    \r\n    /**\r\n     * taken from ChainedFilter, first and on an empty bitset results in 0\r\n     */\r\n    if (actionType[i] == AND){\r\n       try {\r\n      \t//System.out.println(chain[i] );\r\n        bits = (BitSet) ((DocIdBitSet)chain[i].getDocIdSet(reader)).getBitSet().clone();\r\n      } catch (IOException e) {\r\n        // TODO Auto-generated catch block\r\n        e.printStackTrace();\r\n      }\r\n      ++i;\r\n    }\r\n    \r\n    for( ; i < chainSize; i++) {\r\n    \t\r\n      int action = (i < actionSize)? actionType[i]: DEFAULT;\r\n      //System.out.println(chain[i] + \": \"+  action);\r\n      switch (action){\r\n      \r\n      case (SERIALAND):\r\n        try {\r\n            bits.and(((ISerialChainFilter) chain[i]).bits(reader, bits));\r\n          } catch (CorruptIndexException e) {\r\n            // TODO Auto-generated catch block\r\n            e.printStackTrace();\r\n          } catch (IOException e) {\r\n            // TODO Auto-generated catch block\r\n            e.printStackTrace();\r\n          } catch (Exception e) {\r\n            // TODO Auto-generated catch block\r\n            e.printStackTrace();\r\n          }\r\n        break;\r\n      case (SERIALOR):\r\n        try {\r\n            bits.or(((ISerialChainFilter) chain[i]).bits(reader,bits));\r\n          } catch (Exception e) {\r\n            // TODO Auto-generated catch block\r\n            e.printStackTrace();\r\n          }\r\n        break;\r\n      case (AND):\r\n        bits.and(chain[i].bits(reader));\r\n        break;\r\n      case (OR):\r\n        bits.or(((DocIdBitSet)chain[i].getDocIdSet(reader)).getBitSet());\r\n        break;\r\n      }\r\n    }\r\n    \r\n//    System.out.println(\"++++++====================\");\r\n//    new Exception().printStackTrace();\r\n    \r\n    return new DocIdBitSet(bits);\r\n  }\r\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d41c10b9c61bc826acd344f499e062fb46bc42ae","date":1249408917,"type":4,"author":"Michael McCandless","isMerge":false,"pathNew":"/dev/null","pathOld":"contrib/spatial/src/java/org/apache/lucene/spatial/SerialChainFilter#getDocIdSet(IndexReader).mjava","sourceNew":null,"sourceOld":"  /* (non-Javadoc)\n   * @see org.apache.lucene.search.Filter#getDocIdSet(org.apache.lucene.index.IndexReader)\n   */\n  @Override\n  public DocIdSet getDocIdSet(IndexReader reader) throws CorruptIndexException, IOException {\n    \n    BitSet bits = new BitSet(reader.maxDoc());\n    int chainSize = chain.length;\n    int actionSize = actionType.length;\n    int i = 0;\n    \n    /**\n     * taken from ChainedFilter, first and on an empty bitset results in 0\n     */\n    if (actionType[i] == AND){\n       try {\n      \t//System.out.println(chain[i] );\n        bits = (BitSet) ((DocIdBitSet)chain[i].getDocIdSet(reader)).getBitSet().clone();\n      } catch (IOException e) {\n        // TODO Auto-generated catch block\n        e.printStackTrace();\n      }\n      ++i;\n    }\n    \n    for( ; i < chainSize; i++) {\n    \t\n      int action = (i < actionSize)? actionType[i]: DEFAULT;\n      //System.out.println(chain[i] + \": \"+  action);\n      switch (action){\n      \n      case (SERIALAND):\n        try {\n            bits.and(((ISerialChainFilter) chain[i]).bits(reader, bits));\n          } catch (CorruptIndexException e) {\n            // TODO Auto-generated catch block\n            e.printStackTrace();\n          } catch (IOException e) {\n            // TODO Auto-generated catch block\n            e.printStackTrace();\n          } catch (Exception e) {\n            // TODO Auto-generated catch block\n            e.printStackTrace();\n          }\n        break;\n      case (SERIALOR):\n        try {\n            bits.or(((ISerialChainFilter) chain[i]).bits(reader,bits));\n          } catch (Exception e) {\n            // TODO Auto-generated catch block\n            e.printStackTrace();\n          }\n        break;\n      case (AND):\n        bits.and(chain[i].bits(reader));\n        break;\n      case (OR):\n        bits.or(((DocIdBitSet)chain[i].getDocIdSet(reader)).getBitSet());\n        break;\n      }\n    }\n    \n//    System.out.println(\"++++++====================\");\n//    new Exception().printStackTrace();\n    \n    return new DocIdBitSet(bits);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"4281ba2c96715d60b63bc198a292ca602a888c2d":["2e8acf058823017a33328e9af1061fc468632bd8"],"1b1070e1697d2b6a8099a03059e034dadb5becc2":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"56c4003614cd46d18801540b546693e2b8e2606a":["4281ba2c96715d60b63bc198a292ca602a888c2d"],"2e8acf058823017a33328e9af1061fc468632bd8":["1b1070e1697d2b6a8099a03059e034dadb5becc2"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"d41c10b9c61bc826acd344f499e062fb46bc42ae":["56c4003614cd46d18801540b546693e2b8e2606a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["d41c10b9c61bc826acd344f499e062fb46bc42ae"]},"commit2Childs":{"4281ba2c96715d60b63bc198a292ca602a888c2d":["56c4003614cd46d18801540b546693e2b8e2606a"],"1b1070e1697d2b6a8099a03059e034dadb5becc2":["2e8acf058823017a33328e9af1061fc468632bd8"],"56c4003614cd46d18801540b546693e2b8e2606a":["d41c10b9c61bc826acd344f499e062fb46bc42ae"],"2e8acf058823017a33328e9af1061fc468632bd8":["4281ba2c96715d60b63bc198a292ca602a888c2d"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["1b1070e1697d2b6a8099a03059e034dadb5becc2"],"d41c10b9c61bc826acd344f499e062fb46bc42ae":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}