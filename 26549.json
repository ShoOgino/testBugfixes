{"path":"src/java/org/apache/lucene/index/CharBlockPool#nextBuffer().mjava","commits":[{"id":"5a0af3a442be522899177e5e11384a45a6784a3f","date":1205348952,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/CharBlockPool#nextBuffer().mjava","pathOld":"/dev/null","sourceNew":"  public void nextBuffer() {\n    if (1+bufferUpto == buffers.length) {\n      char[][] newBuffers = new char[(int) (buffers.length*1.5)][];\n      System.arraycopy(buffers, 0, newBuffers, 0, buffers.length);\n      buffers = newBuffers;\n    }\n    buffer = buffers[1+bufferUpto] = docWriter.getCharBlock();\n    bufferUpto++;\n\n    byteUpto = 0;\n    byteOffset += DocumentsWriter.CHAR_BLOCK_SIZE;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5350389bf83287111f7760b9e3db3af8e3648474","date":1216372812,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/CharBlockPool#nextBuffer().mjava","pathOld":"src/java/org/apache/lucene/index/CharBlockPool#nextBuffer().mjava","sourceNew":"  public void nextBuffer() {\n    if (1+bufferUpto == buffers.length) {\n      char[][] newBuffers = new char[(int) (buffers.length*1.5)][];\n      System.arraycopy(buffers, 0, newBuffers, 0, buffers.length);\n      buffers = newBuffers;\n    }\n    buffer = buffers[1+bufferUpto] = docWriter.getCharBlock();\n    bufferUpto++;\n\n    charUpto = 0;\n    charOffset += DocumentsWriter.CHAR_BLOCK_SIZE;\n  }\n\n","sourceOld":"  public void nextBuffer() {\n    if (1+bufferUpto == buffers.length) {\n      char[][] newBuffers = new char[(int) (buffers.length*1.5)][];\n      System.arraycopy(buffers, 0, newBuffers, 0, buffers.length);\n      buffers = newBuffers;\n    }\n    buffer = buffers[1+bufferUpto] = docWriter.getCharBlock();\n    bufferUpto++;\n\n    byteUpto = 0;\n    byteOffset += DocumentsWriter.CHAR_BLOCK_SIZE;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a43a81875fea76763cb9f1ff5a41f2c5b79a6585","date":1264678816,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/CharBlockPool#nextBuffer().mjava","pathOld":"src/java/org/apache/lucene/index/CharBlockPool#nextBuffer().mjava","sourceNew":"  public void nextBuffer() {\n    if (1+bufferUpto == buffers.length) {\n      char[][] newBuffers = new char[ArrayUtil.oversize(buffers.length+1,\n                                                        NUM_BYTES_OBJECT_REF)][];\n      System.arraycopy(buffers, 0, newBuffers, 0, buffers.length);\n      buffers = newBuffers;\n    }\n    buffer = buffers[1+bufferUpto] = docWriter.getCharBlock();\n    bufferUpto++;\n\n    charUpto = 0;\n    charOffset += DocumentsWriter.CHAR_BLOCK_SIZE;\n  }\n\n","sourceOld":"  public void nextBuffer() {\n    if (1+bufferUpto == buffers.length) {\n      char[][] newBuffers = new char[(int) (buffers.length*1.5)][];\n      System.arraycopy(buffers, 0, newBuffers, 0, buffers.length);\n      buffers = newBuffers;\n    }\n    buffer = buffers[1+bufferUpto] = docWriter.getCharBlock();\n    bufferUpto++;\n\n    charUpto = 0;\n    charOffset += DocumentsWriter.CHAR_BLOCK_SIZE;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/CharBlockPool#nextBuffer().mjava","pathOld":"src/java/org/apache/lucene/index/CharBlockPool#nextBuffer().mjava","sourceNew":"  public void nextBuffer() {\n    if (1+bufferUpto == buffers.length) {\n      char[][] newBuffers = new char[ArrayUtil.oversize(buffers.length+1,\n                                                        NUM_BYTES_OBJECT_REF)][];\n      System.arraycopy(buffers, 0, newBuffers, 0, buffers.length);\n      buffers = newBuffers;\n    }\n    buffer = buffers[1+bufferUpto] = docWriter.getCharBlock();\n    bufferUpto++;\n\n    charUpto = 0;\n    charOffset += DocumentsWriter.CHAR_BLOCK_SIZE;\n  }\n\n","sourceOld":"  public void nextBuffer() {\n    if (1+bufferUpto == buffers.length) {\n      char[][] newBuffers = new char[ArrayUtil.oversize(buffers.length+1,\n                                                        NUM_BYTES_OBJECT_REF)][];\n      System.arraycopy(buffers, 0, newBuffers, 0, buffers.length);\n      buffers = newBuffers;\n    }\n    buffer = buffers[1+bufferUpto] = docWriter.getCharBlock();\n    bufferUpto++;\n\n    charUpto = 0;\n    charOffset += DocumentsWriter.CHAR_BLOCK_SIZE;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"5a0af3a442be522899177e5e11384a45a6784a3f":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a43a81875fea76763cb9f1ff5a41f2c5b79a6585":["5350389bf83287111f7760b9e3db3af8e3648474"],"5350389bf83287111f7760b9e3db3af8e3648474":["5a0af3a442be522899177e5e11384a45a6784a3f"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a43a81875fea76763cb9f1ff5a41f2c5b79a6585"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["5a0af3a442be522899177e5e11384a45a6784a3f"],"5a0af3a442be522899177e5e11384a45a6784a3f":["5350389bf83287111f7760b9e3db3af8e3648474"],"a43a81875fea76763cb9f1ff5a41f2c5b79a6585":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"5350389bf83287111f7760b9e3db3af8e3648474":["a43a81875fea76763cb9f1ff5a41f2c5b79a6585"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}