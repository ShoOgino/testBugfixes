{"path":"lucene/facet/src/test/org/apache/lucene/facet/FacetTestBase#indexDoc(FacetIndexingParams,RandomIndexWriter,TaxonomyWriter,String,List[CategoryPath]).mjava","commits":[{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/FacetTestBase#indexDoc(FacetIndexingParams,RandomIndexWriter,TaxonomyWriter,String,List[CategoryPath]).mjava","pathOld":"modules/facet/src/test/org/apache/lucene/facet/FacetTestBase#indexDoc(FacetIndexingParams,RandomIndexWriter,TaxonomyWriter,String,List[CategoryPath]).mjava","sourceNew":"  /** utility Create a dummy document with specified categories and content */\n  protected final void indexDoc(FacetIndexingParams iParams, RandomIndexWriter iw,\n      TaxonomyWriter tw, String content, List<CategoryPath> categories) throws IOException,\n      CorruptIndexException {\n    Document d = new Document();\n    CategoryDocumentBuilder builder = new CategoryDocumentBuilder(tw, iParams);\n    builder.setCategoryPaths(categories);\n    builder.build(d);\n    d.add(new Field(\"content\", content, TextField.TYPE_STORED));\n    iw.addDocument(d);\n  }\n\n","sourceOld":"  /** utility Create a dummy document with specified categories and content */\n  protected final void indexDoc(FacetIndexingParams iParams, RandomIndexWriter iw,\n      TaxonomyWriter tw, String content, List<CategoryPath> categories) throws IOException,\n      CorruptIndexException {\n    Document d = new Document();\n    CategoryDocumentBuilder builder = new CategoryDocumentBuilder(tw, iParams);\n    builder.setCategoryPaths(categories);\n    builder.build(d);\n    d.add(new Field(\"content\", content, TextField.TYPE_STORED));\n    iw.addDocument(d);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"04f07771a2a7dd3a395700665ed839c3dae2def2","date":1339350139,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/FacetTestBase#indexDoc(FacetIndexingParams,RandomIndexWriter,TaxonomyWriter,String,List[CategoryPath]).mjava","pathOld":"lucene/facet/src/test/org/apache/lucene/facet/FacetTestBase#indexDoc(FacetIndexingParams,RandomIndexWriter,TaxonomyWriter,String,List[CategoryPath]).mjava","sourceNew":"  /** utility Create a dummy document with specified categories and content */\n  protected final void indexDoc(FacetIndexingParams iParams, RandomIndexWriter iw,\n      TaxonomyWriter tw, String content, List<CategoryPath> categories) throws IOException,\n      CorruptIndexException {\n    Document d = new Document();\n    CategoryDocumentBuilder builder = new CategoryDocumentBuilder(tw, iParams);\n    builder.setCategoryPaths(categories);\n    builder.build(d);\n    d.add(new TextField(\"content\", content, Field.Store.YES));\n    iw.addDocument(d);\n  }\n\n","sourceOld":"  /** utility Create a dummy document with specified categories and content */\n  protected final void indexDoc(FacetIndexingParams iParams, RandomIndexWriter iw,\n      TaxonomyWriter tw, String content, List<CategoryPath> categories) throws IOException,\n      CorruptIndexException {\n    Document d = new Document();\n    CategoryDocumentBuilder builder = new CategoryDocumentBuilder(tw, iParams);\n    builder.setCategoryPaths(categories);\n    builder.build(d);\n    d.add(new Field(\"content\", content, TextField.TYPE_STORED));\n    iw.addDocument(d);\n  }\n\n","bugFix":["7e4db59c6b6c10e25322cfb41c4c19d78b4298bd"],"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"4d3e8520fd031bab31fd0e4d480e55958bc45efe","date":1340901565,"type":3,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/FacetTestBase#indexDoc(FacetIndexingParams,RandomIndexWriter,TaxonomyWriter,String,List[CategoryPath]).mjava","pathOld":"lucene/facet/src/test/org/apache/lucene/facet/FacetTestBase#indexDoc(FacetIndexingParams,RandomIndexWriter,TaxonomyWriter,String,List[CategoryPath]).mjava","sourceNew":"  /** utility Create a dummy document with specified categories and content */\n  protected final void indexDoc(FacetIndexingParams iParams, RandomIndexWriter iw,\n      TaxonomyWriter tw, String content, List<CategoryPath> categories) throws IOException {\n    Document d = new Document();\n    CategoryDocumentBuilder builder = new CategoryDocumentBuilder(tw, iParams);\n    builder.setCategoryPaths(categories);\n    builder.build(d);\n    d.add(new TextField(\"content\", content, Field.Store.YES));\n    iw.addDocument(d);\n  }\n\n","sourceOld":"  /** utility Create a dummy document with specified categories and content */\n  protected final void indexDoc(FacetIndexingParams iParams, RandomIndexWriter iw,\n      TaxonomyWriter tw, String content, List<CategoryPath> categories) throws IOException,\n      CorruptIndexException {\n    Document d = new Document();\n    CategoryDocumentBuilder builder = new CategoryDocumentBuilder(tw, iParams);\n    builder.setCategoryPaths(categories);\n    builder.build(d);\n    d.add(new TextField(\"content\", content, Field.Store.YES));\n    iw.addDocument(d);\n  }\n\n","bugFix":["89f15687f60bd49cd3d9de427e85c17fd9397d61"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fe33227f6805edab2036cbb80645cc4e2d1fa424","date":1342713534,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/FacetTestBase#indexDoc(FacetIndexingParams,RandomIndexWriter,TaxonomyWriter,String,List[CategoryPath]).mjava","pathOld":"lucene/facet/src/test/org/apache/lucene/facet/FacetTestBase#indexDoc(FacetIndexingParams,RandomIndexWriter,TaxonomyWriter,String,List[CategoryPath]).mjava","sourceNew":"  /** utility Create a dummy document with specified categories and content */\n  protected final void indexDoc(FacetIndexingParams iParams, RandomIndexWriter iw,\n      TaxonomyWriter tw, String content, List<CategoryPath> categories) throws IOException {\n    Document d = new Document();\n    CategoryDocumentBuilder builder = new CategoryDocumentBuilder(tw, iParams);\n    builder.setCategoryPaths(categories);\n    builder.build(d);\n    d.add(new TextField(\"content\", content, Field.Store.YES));\n    iw.addDocument(d);\n  }\n\n","sourceOld":"  /** utility Create a dummy document with specified categories and content */\n  protected final void indexDoc(FacetIndexingParams iParams, RandomIndexWriter iw,\n      TaxonomyWriter tw, String content, List<CategoryPath> categories) throws IOException,\n      CorruptIndexException {\n    Document d = new Document();\n    CategoryDocumentBuilder builder = new CategoryDocumentBuilder(tw, iParams);\n    builder.setCategoryPaths(categories);\n    builder.build(d);\n    d.add(new TextField(\"content\", content, Field.Store.YES));\n    iw.addDocument(d);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7a1037d9031f9702ee6912f8751ef1d5320da6d9","date":1357217787,"type":3,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/FacetTestBase#indexDoc(FacetIndexingParams,RandomIndexWriter,TaxonomyWriter,String,List[CategoryPath]).mjava","pathOld":"lucene/facet/src/test/org/apache/lucene/facet/FacetTestBase#indexDoc(FacetIndexingParams,RandomIndexWriter,TaxonomyWriter,String,List[CategoryPath]).mjava","sourceNew":"  /** utility Create a dummy document with specified categories and content */\n  protected final void indexDoc(FacetIndexingParams iParams, RandomIndexWriter iw,\n      TaxonomyWriter tw, String content, List<CategoryPath> categories) throws IOException {\n    Document d = new Document();\n    FacetFields facetFields = new FacetFields(tw, iParams);\n    facetFields.addFields(d, categories);\n    d.add(new TextField(\"content\", content, Field.Store.YES));\n    iw.addDocument(d);\n  }\n\n","sourceOld":"  /** utility Create a dummy document with specified categories and content */\n  protected final void indexDoc(FacetIndexingParams iParams, RandomIndexWriter iw,\n      TaxonomyWriter tw, String content, List<CategoryPath> categories) throws IOException {\n    Document d = new Document();\n    CategoryDocumentBuilder builder = new CategoryDocumentBuilder(tw, iParams);\n    builder.setCategoryPaths(categories);\n    builder.build(d);\n    d.add(new TextField(\"content\", content, Field.Store.YES));\n    iw.addDocument(d);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d3fcb70cf561547c7bb1506e0cf32ca7b1287064","date":1357616416,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/FacetTestBase#indexDoc(FacetIndexingParams,RandomIndexWriter,TaxonomyWriter,String,List[CategoryPath]).mjava","pathOld":"lucene/facet/src/test/org/apache/lucene/facet/FacetTestBase#indexDoc(FacetIndexingParams,RandomIndexWriter,TaxonomyWriter,String,List[CategoryPath]).mjava","sourceNew":"  /** utility Create a dummy document with specified categories and content */\n  protected final void indexDoc(FacetIndexingParams iParams, RandomIndexWriter iw,\n      TaxonomyWriter tw, String content, List<CategoryPath> categories) throws IOException {\n    Document d = new Document();\n    FacetFields facetFields = new FacetFields(tw, iParams);\n    facetFields.addFields(d, categories);\n    d.add(new TextField(\"content\", content, Field.Store.YES));\n    iw.addDocument(d);\n  }\n\n","sourceOld":"  /** utility Create a dummy document with specified categories and content */\n  protected final void indexDoc(FacetIndexingParams iParams, RandomIndexWriter iw,\n      TaxonomyWriter tw, String content, List<CategoryPath> categories) throws IOException {\n    Document d = new Document();\n    CategoryDocumentBuilder builder = new CategoryDocumentBuilder(tw, iParams);\n    builder.setCategoryPaths(categories);\n    builder.build(d);\n    d.add(new TextField(\"content\", content, Field.Store.YES));\n    iw.addDocument(d);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c190847801a50f4dd20fd639bdc29b54ea3b288b","date":1384461522,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/FacetTestBase#indexDoc(FacetIndexingParams,RandomIndexWriter,TaxonomyWriter,String,List[FacetLabel]).mjava","pathOld":"lucene/facet/src/test/org/apache/lucene/facet/FacetTestBase#indexDoc(FacetIndexingParams,RandomIndexWriter,TaxonomyWriter,String,List[CategoryPath]).mjava","sourceNew":"  /** utility Create a dummy document with specified categories and content */\n  protected final void indexDoc(FacetIndexingParams iParams, RandomIndexWriter iw,\n      TaxonomyWriter tw, String content, List<FacetLabel> categories) throws IOException {\n    Document d = new Document();\n    FacetFields facetFields = new FacetFields(tw, iParams);\n    facetFields.addFields(d, categories);\n    d.add(new TextField(\"content\", content, Field.Store.YES));\n    iw.addDocument(d);\n  }\n\n","sourceOld":"  /** utility Create a dummy document with specified categories and content */\n  protected final void indexDoc(FacetIndexingParams iParams, RandomIndexWriter iw,\n      TaxonomyWriter tw, String content, List<CategoryPath> categories) throws IOException {\n    Document d = new Document();\n    FacetFields facetFields = new FacetFields(tw, iParams);\n    facetFields.addFields(d, categories);\n    d.add(new TextField(\"content\", content, Field.Store.YES));\n    iw.addDocument(d);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3cc728b07df73b197e6d940d27f9b08b63918f13","date":1388834348,"type":4,"author":"Michael McCandless","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/facet/src/test/org/apache/lucene/facet/FacetTestBase#indexDoc(FacetIndexingParams,RandomIndexWriter,TaxonomyWriter,String,List[CategoryPath]).mjava","sourceNew":null,"sourceOld":"  /** utility Create a dummy document with specified categories and content */\n  protected final void indexDoc(FacetIndexingParams iParams, RandomIndexWriter iw,\n      TaxonomyWriter tw, String content, List<CategoryPath> categories) throws IOException {\n    Document d = new Document();\n    FacetFields facetFields = new FacetFields(tw, iParams);\n    facetFields.addFields(d, categories);\n    d.add(new TextField(\"content\", content, Field.Store.YES));\n    iw.addDocument(d);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"04f07771a2a7dd3a395700665ed839c3dae2def2":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"d3fcb70cf561547c7bb1506e0cf32ca7b1287064":["4d3e8520fd031bab31fd0e4d480e55958bc45efe","7a1037d9031f9702ee6912f8751ef1d5320da6d9"],"7a1037d9031f9702ee6912f8751ef1d5320da6d9":["4d3e8520fd031bab31fd0e4d480e55958bc45efe"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"fe33227f6805edab2036cbb80645cc4e2d1fa424":["04f07771a2a7dd3a395700665ed839c3dae2def2","4d3e8520fd031bab31fd0e4d480e55958bc45efe"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cc728b07df73b197e6d940d27f9b08b63918f13":["7a1037d9031f9702ee6912f8751ef1d5320da6d9","c190847801a50f4dd20fd639bdc29b54ea3b288b"],"4d3e8520fd031bab31fd0e4d480e55958bc45efe":["04f07771a2a7dd3a395700665ed839c3dae2def2"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3cc728b07df73b197e6d940d27f9b08b63918f13"],"c190847801a50f4dd20fd639bdc29b54ea3b288b":["7a1037d9031f9702ee6912f8751ef1d5320da6d9"]},"commit2Childs":{"04f07771a2a7dd3a395700665ed839c3dae2def2":["fe33227f6805edab2036cbb80645cc4e2d1fa424","4d3e8520fd031bab31fd0e4d480e55958bc45efe"],"d3fcb70cf561547c7bb1506e0cf32ca7b1287064":[],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["04f07771a2a7dd3a395700665ed839c3dae2def2"],"7a1037d9031f9702ee6912f8751ef1d5320da6d9":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","3cc728b07df73b197e6d940d27f9b08b63918f13","c190847801a50f4dd20fd639bdc29b54ea3b288b"],"fe33227f6805edab2036cbb80645cc4e2d1fa424":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"3cc728b07df73b197e6d940d27f9b08b63918f13":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"4d3e8520fd031bab31fd0e4d480e55958bc45efe":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","7a1037d9031f9702ee6912f8751ef1d5320da6d9","fe33227f6805edab2036cbb80645cc4e2d1fa424"],"c190847801a50f4dd20fd639bdc29b54ea3b288b":["3cc728b07df73b197e6d940d27f9b08b63918f13"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","fe33227f6805edab2036cbb80645cc4e2d1fa424","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}