{"path":"solr/test-framework/src/java/org/apache/solr/util/AbstractSolrTestCase#tearDown().mjava","commits":[{"id":"c903c3d15906a3da96b8c0c2fb704491005fdbdb","date":1453508227,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/util/AbstractSolrTestCase#tearDown().mjava","pathOld":"solr/src/test-framework/org/apache/solr/util/AbstractSolrTestCase#tearDown().mjava","sourceNew":"  /**\n   * Shuts down the test harness, and makes the best attempt possible\n   * to delete dataDir, unless the system property \"solr.test.leavedatadir\"\n   * is set.\n   */\n  @Override\n  public void tearDown() throws Exception {\n    log.info(\"####TEARDOWN_START \" + getName());\n    if (factoryProp == null) {\n      System.clearProperty(\"solr.directoryFactory\");\n    }\n\n    if (h != null) { h.close(); }\n    SolrTestCaseJ4.closeDirectories();\n    String skip = System.getProperty(\"solr.test.leavedatadir\");\n    if (null != skip && 0 != skip.trim().length()) {\n      System.err.println(\"NOTE: per solr.test.leavedatadir, dataDir will not be removed: \" + dataDir.getAbsolutePath());\n    } else {\n      if (!recurseDelete(dataDir)) {\n        System.err.println(\"!!!! WARNING: best effort to remove \" + dataDir.getAbsolutePath() + \" FAILED !!!!!\");\n      }\n    }\n\n    resetExceptionIgnores();  \n    super.tearDown();\n  }\n\n","sourceOld":"  /**\n   * Shuts down the test harness, and makes the best attempt possible\n   * to delete dataDir, unless the system property \"solr.test.leavedatadir\"\n   * is set.\n   */\n  @Override\n  public void tearDown() throws Exception {\n    log.info(\"####TEARDOWN_START \" + getName());\n    if (factoryProp == null) {\n      System.clearProperty(\"solr.directoryFactory\");\n    }\n\n    if (h != null) { h.close(); }\n    SolrTestCaseJ4.closeDirectories();\n    String skip = System.getProperty(\"solr.test.leavedatadir\");\n    if (null != skip && 0 != skip.trim().length()) {\n      System.err.println(\"NOTE: per solr.test.leavedatadir, dataDir will not be removed: \" + dataDir.getAbsolutePath());\n    } else {\n      if (!recurseDelete(dataDir)) {\n        System.err.println(\"!!!! WARNING: best effort to remove \" + dataDir.getAbsolutePath() + \" FAILED !!!!!\");\n      }\n    }\n\n    resetExceptionIgnores();  \n    super.tearDown();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a258fbb26824fd104ed795e5d9033d2d040049ee","date":1453508252,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/util/AbstractSolrTestCase#tearDown().mjava","pathOld":"solr/src/test-framework/org/apache/solr/util/AbstractSolrTestCase#tearDown().mjava","sourceNew":"  /**\n   * Shuts down the test harness, and makes the best attempt possible\n   * to delete dataDir, unless the system property \"solr.test.leavedatadir\"\n   * is set.\n   */\n  @Override\n  public void tearDown() throws Exception {\n    log.info(\"####TEARDOWN_START \" + getName());\n    if (factoryProp == null) {\n      System.clearProperty(\"solr.directoryFactory\");\n    }\n\n    if (h != null) { h.close(); }\n    SolrTestCaseJ4.closeDirectories();\n    String skip = System.getProperty(\"solr.test.leavedatadir\");\n    if (null != skip && 0 != skip.trim().length()) {\n      System.err.println(\"NOTE: per solr.test.leavedatadir, dataDir will not be removed: \" + dataDir.getAbsolutePath());\n    } else {\n      if (!recurseDelete(dataDir)) {\n        System.err.println(\"!!!! WARNING: best effort to remove \" + dataDir.getAbsolutePath() + \" FAILED !!!!!\");\n      }\n    }\n\n    resetExceptionIgnores();  \n    super.tearDown();\n  }\n\n","sourceOld":"  /**\n   * Shuts down the test harness, and makes the best attempt possible\n   * to delete dataDir, unless the system property \"solr.test.leavedatadir\"\n   * is set.\n   */\n  @Override\n  public void tearDown() throws Exception {\n    log.info(\"####TEARDOWN_START \" + getName());\n    if (factoryProp == null) {\n      System.clearProperty(\"solr.directoryFactory\");\n    }\n\n    if (h != null) { h.close(); }\n    SolrTestCaseJ4.closeDirectories();\n    String skip = System.getProperty(\"solr.test.leavedatadir\");\n    if (null != skip && 0 != skip.trim().length()) {\n      System.err.println(\"NOTE: per solr.test.leavedatadir, dataDir will not be removed: \" + dataDir.getAbsolutePath());\n    } else {\n      if (!recurseDelete(dataDir)) {\n        System.err.println(\"!!!! WARNING: best effort to remove \" + dataDir.getAbsolutePath() + \" FAILED !!!!!\");\n      }\n    }\n\n    resetExceptionIgnores();  \n    super.tearDown();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/test-framework/src/java/org/apache/solr/util/AbstractSolrTestCase#tearDown().mjava","pathOld":"solr/src/test-framework/org/apache/solr/util/AbstractSolrTestCase#tearDown().mjava","sourceNew":"  /**\n   * Shuts down the test harness, and makes the best attempt possible\n   * to delete dataDir, unless the system property \"solr.test.leavedatadir\"\n   * is set.\n   */\n  @Override\n  public void tearDown() throws Exception {\n    log.info(\"####TEARDOWN_START \" + getName());\n    if (factoryProp == null) {\n      System.clearProperty(\"solr.directoryFactory\");\n    }\n\n    if (h != null) { h.close(); }\n    SolrTestCaseJ4.closeDirectories();\n    String skip = System.getProperty(\"solr.test.leavedatadir\");\n    if (null != skip && 0 != skip.trim().length()) {\n      System.err.println(\"NOTE: per solr.test.leavedatadir, dataDir will not be removed: \" + dataDir.getAbsolutePath());\n    } else {\n      if (!recurseDelete(dataDir)) {\n        System.err.println(\"!!!! WARNING: best effort to remove \" + dataDir.getAbsolutePath() + \" FAILED !!!!!\");\n      }\n    }\n\n    resetExceptionIgnores();  \n    super.tearDown();\n  }\n\n","sourceOld":"  /**\n   * Shuts down the test harness, and makes the best attempt possible\n   * to delete dataDir, unless the system property \"solr.test.leavedatadir\"\n   * is set.\n   */\n  @Override\n  public void tearDown() throws Exception {\n    log.info(\"####TEARDOWN_START \" + getName());\n    if (factoryProp == null) {\n      System.clearProperty(\"solr.directoryFactory\");\n    }\n\n    if (h != null) { h.close(); }\n    SolrTestCaseJ4.closeDirectories();\n    String skip = System.getProperty(\"solr.test.leavedatadir\");\n    if (null != skip && 0 != skip.trim().length()) {\n      System.err.println(\"NOTE: per solr.test.leavedatadir, dataDir will not be removed: \" + dataDir.getAbsolutePath());\n    } else {\n      if (!recurseDelete(dataDir)) {\n        System.err.println(\"!!!! WARNING: best effort to remove \" + dataDir.getAbsolutePath() + \" FAILED !!!!!\");\n      }\n    }\n\n    resetExceptionIgnores();  \n    super.tearDown();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e22ffe8cc51a892ae103df018822d7873e901c2a","date":1313696790,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/util/AbstractSolrTestCase#tearDown().mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/util/AbstractSolrTestCase#tearDown().mjava","sourceNew":"  /**\n   * Shuts down the test harness, and makes the best attempt possible\n   * to delete dataDir, unless the system property \"solr.test.leavedatadir\"\n   * is set.\n   */\n  @Override\n  public void tearDown() throws Exception {\n    log.info(\"####TEARDOWN_START \" + getName());\n    if (factoryProp == null) {\n      System.clearProperty(\"solr.directoryFactory\");\n    }\n\n    if (h != null) { h.close(); }\n    String skip = System.getProperty(\"solr.test.leavedatadir\");\n    if (null != skip && 0 != skip.trim().length()) {\n      System.err.println(\"NOTE: per solr.test.leavedatadir, dataDir will not be removed: \" + dataDir.getAbsolutePath());\n    } else {\n      if (!recurseDelete(dataDir)) {\n        System.err.println(\"!!!! WARNING: best effort to remove \" + dataDir.getAbsolutePath() + \" FAILED !!!!!\");\n      }\n    }\n\n    resetExceptionIgnores();  \n    super.tearDown();\n  }\n\n","sourceOld":"  /**\n   * Shuts down the test harness, and makes the best attempt possible\n   * to delete dataDir, unless the system property \"solr.test.leavedatadir\"\n   * is set.\n   */\n  @Override\n  public void tearDown() throws Exception {\n    log.info(\"####TEARDOWN_START \" + getName());\n    if (factoryProp == null) {\n      System.clearProperty(\"solr.directoryFactory\");\n    }\n\n    if (h != null) { h.close(); }\n    SolrTestCaseJ4.closeDirectories();\n    String skip = System.getProperty(\"solr.test.leavedatadir\");\n    if (null != skip && 0 != skip.trim().length()) {\n      System.err.println(\"NOTE: per solr.test.leavedatadir, dataDir will not be removed: \" + dataDir.getAbsolutePath());\n    } else {\n      if (!recurseDelete(dataDir)) {\n        System.err.println(\"!!!! WARNING: best effort to remove \" + dataDir.getAbsolutePath() + \" FAILED !!!!!\");\n      }\n    }\n\n    resetExceptionIgnores();  \n    super.tearDown();\n  }\n\n","bugFix":["288aa050f8188ece6bc90e9eaab901c23600631f"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5da0b42730b6b99b31389ef94cb97384e83b9ede","date":1337107665,"type":3,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/util/AbstractSolrTestCase#tearDown().mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/util/AbstractSolrTestCase#tearDown().mjava","sourceNew":"  /**\n   * Shuts down the test harness, and makes the best attempt possible\n   * to delete dataDir, unless the system property \"solr.test.leavedatadir\"\n   * is set.\n   */\n  @Override\n  public void tearDown() throws Exception {\n    log.info(\"####TEARDOWN_START \" + getTestName());\n    if (factoryProp == null) {\n      System.clearProperty(\"solr.directoryFactory\");\n    }\n\n    if (h != null) { h.close(); }\n    String skip = System.getProperty(\"solr.test.leavedatadir\");\n    if (null != skip && 0 != skip.trim().length()) {\n      System.err.println(\"NOTE: per solr.test.leavedatadir, dataDir will not be removed: \" + dataDir.getAbsolutePath());\n    } else {\n      if (!recurseDelete(dataDir)) {\n        System.err.println(\"!!!! WARNING: best effort to remove \" + dataDir.getAbsolutePath() + \" FAILED !!!!!\");\n      }\n    }\n\n    resetExceptionIgnores();  \n    super.tearDown();\n  }\n\n","sourceOld":"  /**\n   * Shuts down the test harness, and makes the best attempt possible\n   * to delete dataDir, unless the system property \"solr.test.leavedatadir\"\n   * is set.\n   */\n  @Override\n  public void tearDown() throws Exception {\n    log.info(\"####TEARDOWN_START \" + getName());\n    if (factoryProp == null) {\n      System.clearProperty(\"solr.directoryFactory\");\n    }\n\n    if (h != null) { h.close(); }\n    String skip = System.getProperty(\"solr.test.leavedatadir\");\n    if (null != skip && 0 != skip.trim().length()) {\n      System.err.println(\"NOTE: per solr.test.leavedatadir, dataDir will not be removed: \" + dataDir.getAbsolutePath());\n    } else {\n      if (!recurseDelete(dataDir)) {\n        System.err.println(\"!!!! WARNING: best effort to remove \" + dataDir.getAbsolutePath() + \" FAILED !!!!!\");\n      }\n    }\n\n    resetExceptionIgnores();  \n    super.tearDown();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d9405f486872f1e416304dfe389741f4ee2f8a4d","date":1351276739,"type":4,"author":"Mark Robert Miller","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/test-framework/src/java/org/apache/solr/util/AbstractSolrTestCase#tearDown().mjava","sourceNew":null,"sourceOld":"  /**\n   * Shuts down the test harness, and makes the best attempt possible\n   * to delete dataDir, unless the system property \"solr.test.leavedatadir\"\n   * is set.\n   */\n  @Override\n  public void tearDown() throws Exception {\n    log.info(\"####TEARDOWN_START \" + getTestName());\n    if (factoryProp == null) {\n      System.clearProperty(\"solr.directoryFactory\");\n    }\n\n    if (h != null) { h.close(); }\n    String skip = System.getProperty(\"solr.test.leavedatadir\");\n    if (null != skip && 0 != skip.trim().length()) {\n      System.err.println(\"NOTE: per solr.test.leavedatadir, dataDir will not be removed: \" + dataDir.getAbsolutePath());\n    } else {\n      if (!recurseDelete(dataDir)) {\n        System.err.println(\"!!!! WARNING: best effort to remove \" + dataDir.getAbsolutePath() + \" FAILED !!!!!\");\n      }\n    }\n\n    resetExceptionIgnores();  \n    super.tearDown();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f2126b84bd093fa3d921582a109a0ee578c28126","date":1351522501,"type":4,"author":"Michael McCandless","isMerge":true,"pathNew":"/dev/null","pathOld":"solr/test-framework/src/java/org/apache/solr/util/AbstractSolrTestCase#tearDown().mjava","sourceNew":null,"sourceOld":"  /**\n   * Shuts down the test harness, and makes the best attempt possible\n   * to delete dataDir, unless the system property \"solr.test.leavedatadir\"\n   * is set.\n   */\n  @Override\n  public void tearDown() throws Exception {\n    log.info(\"####TEARDOWN_START \" + getTestName());\n    if (factoryProp == null) {\n      System.clearProperty(\"solr.directoryFactory\");\n    }\n\n    if (h != null) { h.close(); }\n    String skip = System.getProperty(\"solr.test.leavedatadir\");\n    if (null != skip && 0 != skip.trim().length()) {\n      System.err.println(\"NOTE: per solr.test.leavedatadir, dataDir will not be removed: \" + dataDir.getAbsolutePath());\n    } else {\n      if (!recurseDelete(dataDir)) {\n        System.err.println(\"!!!! WARNING: best effort to remove \" + dataDir.getAbsolutePath() + \" FAILED !!!!!\");\n      }\n    }\n\n    resetExceptionIgnores();  \n    super.tearDown();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"5da0b42730b6b99b31389ef94cb97384e83b9ede":["e22ffe8cc51a892ae103df018822d7873e901c2a"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"c26f00b574427b55127e869b935845554afde1fa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","c903c3d15906a3da96b8c0c2fb704491005fdbdb"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a258fbb26824fd104ed795e5d9033d2d040049ee":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"d9405f486872f1e416304dfe389741f4ee2f8a4d":["5da0b42730b6b99b31389ef94cb97384e83b9ede"],"f2126b84bd093fa3d921582a109a0ee578c28126":["5da0b42730b6b99b31389ef94cb97384e83b9ede","d9405f486872f1e416304dfe389741f4ee2f8a4d"],"e22ffe8cc51a892ae103df018822d7873e901c2a":["c26f00b574427b55127e869b935845554afde1fa"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["d9405f486872f1e416304dfe389741f4ee2f8a4d"]},"commit2Childs":{"5da0b42730b6b99b31389ef94cb97384e83b9ede":["d9405f486872f1e416304dfe389741f4ee2f8a4d","f2126b84bd093fa3d921582a109a0ee578c28126"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["c26f00b574427b55127e869b935845554afde1fa"],"c26f00b574427b55127e869b935845554afde1fa":["e22ffe8cc51a892ae103df018822d7873e901c2a"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c903c3d15906a3da96b8c0c2fb704491005fdbdb","c26f00b574427b55127e869b935845554afde1fa","a258fbb26824fd104ed795e5d9033d2d040049ee"],"a258fbb26824fd104ed795e5d9033d2d040049ee":[],"d9405f486872f1e416304dfe389741f4ee2f8a4d":["f2126b84bd093fa3d921582a109a0ee578c28126","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"f2126b84bd093fa3d921582a109a0ee578c28126":[],"e22ffe8cc51a892ae103df018822d7873e901c2a":["5da0b42730b6b99b31389ef94cb97384e83b9ede"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a258fbb26824fd104ed795e5d9033d2d040049ee","f2126b84bd093fa3d921582a109a0ee578c28126","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}