{"path":"src/java/org/apache/solr/util/TestHarness#validateAddDoc(String...).mjava","commits":[{"id":"f66f1826f07774581d2ec661444fc987bdd1a85d","date":1144730206,"type":0,"author":"Chris M. Hostetter","isMerge":false,"pathNew":"src/java/org/apache/solr/util/TestHarness#validateAddDoc(String...).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Validates that an add of a single document results in success.\n   *\n   * @param fieldsAndValues Odds are field names, Evens are values\n   * @return null if succesful, otherwise the XML response to the update\n   * @see appendSimpleDoc\n   */\n  public String validateAddDoc(String... fieldsAndValues)\n    throws XPathExpressionException, SAXException, IOException {\n\n    StringBuffer buf = new StringBuffer();\n    buf.append(\"<add>\");\n    appendSimpleDoc(buf, fieldsAndValues);\n    buf.append(\"</add>\");\n        \n    String res = update(buf.toString());\n    String valid = validateXPath(res, \"//result[@status=0]\" );\n    return (null == valid) ? null : res;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e96fd8a5ecee99fb518c16ceb03a6a11c01b5468","date":1148693744,"type":3,"author":"Chris M. Hostetter","isMerge":false,"pathNew":"src/java/org/apache/solr/util/TestHarness#validateAddDoc(String...).mjava","pathOld":"src/java/org/apache/solr/util/TestHarness#validateAddDoc(String...).mjava","sourceNew":"  /**\n   * Validates that an add of a single document results in success.\n   *\n   * @param fieldsAndValues Odds are field names, Evens are values\n   * @return null if succesful, otherwise the XML response to the update\n   * @see #appendSimpleDoc\n   */\n  public String validateAddDoc(String... fieldsAndValues)\n    throws XPathExpressionException, SAXException, IOException {\n\n    StringBuffer buf = new StringBuffer();\n    buf.append(\"<add>\");\n    appendSimpleDoc(buf, fieldsAndValues);\n    buf.append(\"</add>\");\n        \n    String res = update(buf.toString());\n    String valid = validateXPath(res, \"//result[@status=0]\" );\n    return (null == valid) ? null : res;\n  }\n\n","sourceOld":"  /**\n   * Validates that an add of a single document results in success.\n   *\n   * @param fieldsAndValues Odds are field names, Evens are values\n   * @return null if succesful, otherwise the XML response to the update\n   * @see appendSimpleDoc\n   */\n  public String validateAddDoc(String... fieldsAndValues)\n    throws XPathExpressionException, SAXException, IOException {\n\n    StringBuffer buf = new StringBuffer();\n    buf.append(\"<add>\");\n    appendSimpleDoc(buf, fieldsAndValues);\n    buf.append(\"</add>\");\n        \n    String res = update(buf.toString());\n    String valid = validateXPath(res, \"//result[@status=0]\" );\n    return (null == valid) ? null : res;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"020b126ae09ad6e3225cb0003edbdb26b6a29dd3","date":1186294248,"type":3,"author":"Ryan McKinley","isMerge":false,"pathNew":"src/java/org/apache/solr/util/TestHarness#validateAddDoc(String...).mjava","pathOld":"src/java/org/apache/solr/util/TestHarness#validateAddDoc(String...).mjava","sourceNew":"  /**\n   * Validates that an add of a single document results in success.\n   *\n   * @param fieldsAndValues Odds are field names, Evens are values\n   * @return null if successful, otherwise the XML response to the update\n   * @see #appendSimpleDoc\n   */\n  public String validateAddDoc(String... fieldsAndValues)\n    throws XPathExpressionException, SAXException, IOException {\n\n    StringBuffer buf = new StringBuffer();\n    buf.append(\"<add>\");\n    appendSimpleDoc(buf, fieldsAndValues);\n    buf.append(\"</add>\");\n        \n    String res = update(buf.toString());\n    String valid = validateXPath(res, \"//result[@status=0]\" );\n    return (null == valid) ? null : res;\n  }\n\n","sourceOld":"  /**\n   * Validates that an add of a single document results in success.\n   *\n   * @param fieldsAndValues Odds are field names, Evens are values\n   * @return null if succesful, otherwise the XML response to the update\n   * @see #appendSimpleDoc\n   */\n  public String validateAddDoc(String... fieldsAndValues)\n    throws XPathExpressionException, SAXException, IOException {\n\n    StringBuffer buf = new StringBuffer();\n    buf.append(\"<add>\");\n    appendSimpleDoc(buf, fieldsAndValues);\n    buf.append(\"</add>\");\n        \n    String res = update(buf.toString());\n    String valid = validateXPath(res, \"//result[@status=0]\" );\n    return (null == valid) ? null : res;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c2e5bfa22b27d858fb940b70befda09798b82dd2","date":1233862915,"type":3,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"src/java/org/apache/solr/util/TestHarness#validateAddDoc(String...).mjava","pathOld":"src/java/org/apache/solr/util/TestHarness#validateAddDoc(String...).mjava","sourceNew":"  /**\n   * Validates that an add of a single document results in success.\n   *\n   * @param fieldsAndValues Odds are field names, Evens are values\n   * @return null if successful, otherwise the XML response to the update\n   * @see #appendSimpleDoc\n   */\n  public String validateAddDoc(String... fieldsAndValues)\n    throws XPathExpressionException, SAXException, IOException {\n\n    StringBuilder buf = new StringBuilder();\n    buf.append(\"<add>\");\n    appendSimpleDoc(buf, fieldsAndValues);\n    buf.append(\"</add>\");\n        \n    String res = update(buf.toString());\n    String valid = validateXPath(res, \"//result[@status=0]\" );\n    return (null == valid) ? null : res;\n  }\n\n","sourceOld":"  /**\n   * Validates that an add of a single document results in success.\n   *\n   * @param fieldsAndValues Odds are field names, Evens are values\n   * @return null if successful, otherwise the XML response to the update\n   * @see #appendSimpleDoc\n   */\n  public String validateAddDoc(String... fieldsAndValues)\n    throws XPathExpressionException, SAXException, IOException {\n\n    StringBuffer buf = new StringBuffer();\n    buf.append(\"<add>\");\n    appendSimpleDoc(buf, fieldsAndValues);\n    buf.append(\"</add>\");\n        \n    String res = update(buf.toString());\n    String valid = validateXPath(res, \"//result[@status=0]\" );\n    return (null == valid) ? null : res;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ad94625fb8d088209f46650c8097196fec67f00c","date":1453508319,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/src/java/org/apache/solr/util/TestHarness#validateAddDoc(String...).mjava","pathOld":"src/java/org/apache/solr/util/TestHarness#validateAddDoc(String...).mjava","sourceNew":"  /**\n   * Validates that an add of a single document results in success.\n   *\n   * @param fieldsAndValues Odds are field names, Evens are values\n   * @return null if successful, otherwise the XML response to the update\n   * @see #appendSimpleDoc\n   */\n  public String validateAddDoc(String... fieldsAndValues)\n    throws XPathExpressionException, SAXException, IOException {\n\n    StringBuilder buf = new StringBuilder();\n    buf.append(\"<add>\");\n    appendSimpleDoc(buf, fieldsAndValues);\n    buf.append(\"</add>\");\n        \n    String res = update(buf.toString());\n    String valid = validateXPath(res, \"//result[@status=0]\" );\n    return (null == valid) ? null : res;\n  }\n\n","sourceOld":"  /**\n   * Validates that an add of a single document results in success.\n   *\n   * @param fieldsAndValues Odds are field names, Evens are values\n   * @return null if successful, otherwise the XML response to the update\n   * @see #appendSimpleDoc\n   */\n  public String validateAddDoc(String... fieldsAndValues)\n    throws XPathExpressionException, SAXException, IOException {\n\n    StringBuilder buf = new StringBuilder();\n    buf.append(\"<add>\");\n    appendSimpleDoc(buf, fieldsAndValues);\n    buf.append(\"</add>\");\n        \n    String res = update(buf.toString());\n    String valid = validateXPath(res, \"//result[@status=0]\" );\n    return (null == valid) ? null : res;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"020b126ae09ad6e3225cb0003edbdb26b6a29dd3":["e96fd8a5ecee99fb518c16ceb03a6a11c01b5468"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"ad94625fb8d088209f46650c8097196fec67f00c":["c2e5bfa22b27d858fb940b70befda09798b82dd2"],"e96fd8a5ecee99fb518c16ceb03a6a11c01b5468":["f66f1826f07774581d2ec661444fc987bdd1a85d"],"f66f1826f07774581d2ec661444fc987bdd1a85d":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"c2e5bfa22b27d858fb940b70befda09798b82dd2":["020b126ae09ad6e3225cb0003edbdb26b6a29dd3"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"020b126ae09ad6e3225cb0003edbdb26b6a29dd3":["c2e5bfa22b27d858fb940b70befda09798b82dd2"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["f66f1826f07774581d2ec661444fc987bdd1a85d"],"ad94625fb8d088209f46650c8097196fec67f00c":[],"e96fd8a5ecee99fb518c16ceb03a6a11c01b5468":["020b126ae09ad6e3225cb0003edbdb26b6a29dd3"],"f66f1826f07774581d2ec661444fc987bdd1a85d":["e96fd8a5ecee99fb518c16ceb03a6a11c01b5468"],"c2e5bfa22b27d858fb940b70befda09798b82dd2":["ad94625fb8d088209f46650c8097196fec67f00c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["ad94625fb8d088209f46650c8097196fec67f00c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"pathCommit":null}