{"path":"solr/core/src/test/org/apache/solr/cloud/ZkCLITest#testLs().mjava","commits":[{"id":"c9df4f97973cb9b64b79ec8d6041fc05e9327795","date":1493743124,"type":0,"author":"Mark Miller","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/ZkCLITest#testLs().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testLs() throws Exception {\n    zkClient.makePath(\"/test/path\", true);\n    String[] args = new String[] {\"-zkhost\", zkServer.getZkAddress(), \"-cmd\",\n        \"ls\", \"/test\"};\n\n    ByteArrayOutputStream byteStream = new ByteArrayOutputStream();\n    final PrintStream myOut = new PrintStream(byteStream, false, StandardCharsets.UTF_8.name());\n    ZkCLI.setStdout(myOut);\n\n    ZkCLI.main(args);\n    \n    final String standardOutput = byteStream.toString(StandardCharsets.UTF_8.name());\n    String separator = System.lineSeparator();\n    assertEquals(\"/test (1)\" + separator + \" /test/path (0)\" + separator + separator, standardOutput);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e9017cf144952056066919f1ebc7897ff9bd71b1","date":1496757600,"type":0,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/cloud/ZkCLITest#testLs().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testLs() throws Exception {\n    zkClient.makePath(\"/test/path\", true);\n    String[] args = new String[] {\"-zkhost\", zkServer.getZkAddress(), \"-cmd\",\n        \"ls\", \"/test\"};\n\n    ByteArrayOutputStream byteStream = new ByteArrayOutputStream();\n    final PrintStream myOut = new PrintStream(byteStream, false, StandardCharsets.UTF_8.name());\n    ZkCLI.setStdout(myOut);\n\n    ZkCLI.main(args);\n    \n    final String standardOutput = byteStream.toString(StandardCharsets.UTF_8.name());\n    String separator = System.lineSeparator();\n    assertEquals(\"/test (1)\" + separator + \" /test/path (0)\" + separator + separator, standardOutput);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0db83f1bb855a4ac824c9a2a8e1ee9b29a039c15","date":1554259533,"type":3,"author":"Gus Heck","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/ZkCLITest#testLs().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/ZkCLITest#testLs().mjava","sourceNew":"  @Test\n  public void testLs() throws Exception {\n    zkClient.makePath(\"/test/path\", true);\n    String[] args = new String[] {\"-zkhost\", zkServer.getZkAddress(), \"-cmd\",\n        \"ls\", \"/test\"};\n\n    ByteArrayOutputStream byteStream = new ByteArrayOutputStream();\n    final PrintStream myOut = new PrintStream(byteStream, false, StandardCharsets.UTF_8.name());\n    ZkCLI.setStdout(myOut);\n\n    ZkCLI.main(args);\n\n    final String standardOutput = byteStream.toString(StandardCharsets.UTF_8.name());\n    String separator = System.lineSeparator();\n    assertEquals(\"/test (1)\" + separator + \" /test/path (0)\" + separator + separator, standardOutput);\n  }\n\n","sourceOld":"  @Test\n  public void testLs() throws Exception {\n    zkClient.makePath(\"/test/path\", true);\n    String[] args = new String[] {\"-zkhost\", zkServer.getZkAddress(), \"-cmd\",\n        \"ls\", \"/test\"};\n\n    ByteArrayOutputStream byteStream = new ByteArrayOutputStream();\n    final PrintStream myOut = new PrintStream(byteStream, false, StandardCharsets.UTF_8.name());\n    ZkCLI.setStdout(myOut);\n\n    ZkCLI.main(args);\n    \n    final String standardOutput = byteStream.toString(StandardCharsets.UTF_8.name());\n    String separator = System.lineSeparator();\n    assertEquals(\"/test (1)\" + separator + \" /test/path (0)\" + separator + separator, standardOutput);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"e9017cf144952056066919f1ebc7897ff9bd71b1":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","c9df4f97973cb9b64b79ec8d6041fc05e9327795"],"c9df4f97973cb9b64b79ec8d6041fc05e9327795":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"0db83f1bb855a4ac824c9a2a8e1ee9b29a039c15":["c9df4f97973cb9b64b79ec8d6041fc05e9327795"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["0db83f1bb855a4ac824c9a2a8e1ee9b29a039c15"]},"commit2Childs":{"e9017cf144952056066919f1ebc7897ff9bd71b1":[],"c9df4f97973cb9b64b79ec8d6041fc05e9327795":["e9017cf144952056066919f1ebc7897ff9bd71b1","0db83f1bb855a4ac824c9a2a8e1ee9b29a039c15"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["e9017cf144952056066919f1ebc7897ff9bd71b1","c9df4f97973cb9b64b79ec8d6041fc05e9327795"],"0db83f1bb855a4ac824c9a2a8e1ee9b29a039c15":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["e9017cf144952056066919f1ebc7897ff9bd71b1","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}