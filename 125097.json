{"path":"lucene/contrib/xml-query-parser/src/test/org/apache/lucene/xmlparser/TestParser#setUp().mjava","commits":[{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/contrib/xml-query-parser/src/test/org/apache/lucene/xmlparser/TestParser#setUp().mjava","pathOld":"contrib/xml-query-parser/src/test/org/apache/lucene/xmlparser/TestParser#setUp().mjava","sourceNew":"\t/*\n\t * @see TestCase#setUp()\n\t */\n\t@Override\n\tprotected void setUp() throws Exception {\n\t\tsuper.setUp();\n\t\t\n\t\t//initialize the parser\n\t\tbuilder=new CorePlusExtensionsParser(\"contents\",analyzer);\n\t\t\n\t\t//initialize the index (done once, then cached in static data for use with ALL tests)\t\t\n\t\tif(dir==null)\n\t\t{\n\t\t\tBufferedReader d = new BufferedReader(new InputStreamReader(TestParser.class.getResourceAsStream(\"reuters21578.txt\"))); \n\t\t\tdir=new RAMDirectory();\n\t\t\tIndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(Version.LUCENE_24, analyzer));\n\t\t\tString line = d.readLine();\t\t\n\t\t\twhile(line!=null)\n\t\t\t{\n\t\t\t\tint endOfDate=line.indexOf('\\t');\n\t\t\t\tString date=line.substring(0,endOfDate).trim();\n\t\t\t\tString content=line.substring(endOfDate).trim();\n\t\t\t\torg.apache.lucene.document.Document doc =new org.apache.lucene.document.Document();\n\t\t\t\tdoc.add(new Field(\"date\",date,Field.Store.YES,Field.Index.ANALYZED));\n\t\t\t\tdoc.add(new Field(\"contents\",content,Field.Store.YES,Field.Index.ANALYZED));\n\t\t\t\twriter.addDocument(doc);\n\t\t\t\tline=d.readLine();\n\t\t\t}\t\t\t\n\t\t\td.close();\n      writer.close();\n\t\t}\n\t\treader=IndexReader.open(dir, true);\n\t\tsearcher=new IndexSearcher(reader);\n\t\t\n\t}\n\n","sourceOld":"\t/*\n\t * @see TestCase#setUp()\n\t */\n\t@Override\n\tprotected void setUp() throws Exception {\n\t\tsuper.setUp();\n\t\t\n\t\t//initialize the parser\n\t\tbuilder=new CorePlusExtensionsParser(\"contents\",analyzer);\n\t\t\n\t\t//initialize the index (done once, then cached in static data for use with ALL tests)\t\t\n\t\tif(dir==null)\n\t\t{\n\t\t\tBufferedReader d = new BufferedReader(new InputStreamReader(TestParser.class.getResourceAsStream(\"reuters21578.txt\"))); \n\t\t\tdir=new RAMDirectory();\n\t\t\tIndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(Version.LUCENE_24, analyzer));\n\t\t\tString line = d.readLine();\t\t\n\t\t\twhile(line!=null)\n\t\t\t{\n\t\t\t\tint endOfDate=line.indexOf('\\t');\n\t\t\t\tString date=line.substring(0,endOfDate).trim();\n\t\t\t\tString content=line.substring(endOfDate).trim();\n\t\t\t\torg.apache.lucene.document.Document doc =new org.apache.lucene.document.Document();\n\t\t\t\tdoc.add(new Field(\"date\",date,Field.Store.YES,Field.Index.ANALYZED));\n\t\t\t\tdoc.add(new Field(\"contents\",content,Field.Store.YES,Field.Index.ANALYZED));\n\t\t\t\twriter.addDocument(doc);\n\t\t\t\tline=d.readLine();\n\t\t\t}\t\t\t\n\t\t\td.close();\n      writer.close();\n\t\t}\n\t\treader=IndexReader.open(dir, true);\n\t\tsearcher=new IndexSearcher(reader);\n\t\t\n\t}\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"05bdab91555bc2728769812fa2e40814e900f661","date":1269650215,"type":3,"author":"Mark Harwood","isMerge":false,"pathNew":"lucene/contrib/xml-query-parser/src/test/org/apache/lucene/xmlparser/TestParser#setUp().mjava","pathOld":"lucene/contrib/xml-query-parser/src/test/org/apache/lucene/xmlparser/TestParser#setUp().mjava","sourceNew":"\t/*\n\t * @see TestCase#setUp()\n\t */\n\t@Override\n\tprotected void setUp() throws Exception {\n\t\tsuper.setUp();\n\t\t\n\t\t//initialize the parser\n\t\tbuilder=new CorePlusExtensionsParser(\"contents\",analyzer);\n\t\t\n\t\t//initialize the index (done once, then cached in static data for use with ALL tests)\t\t\n\t\tif(dir==null)\n\t\t{\n\t\t\tBufferedReader d = new BufferedReader(new InputStreamReader(TestParser.class.getResourceAsStream(\"reuters21578.txt\"))); \n\t\t\tdir=new RAMDirectory();\n\t\t\tIndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(Version.LUCENE_24, analyzer));\n\t\t\tString line = d.readLine();\t\t\n\t\t\twhile(line!=null)\n\t\t\t{\n\t\t\t\tint endOfDate=line.indexOf('\\t');\n\t\t\t\tString date=line.substring(0,endOfDate).trim();\n\t\t\t\tString content=line.substring(endOfDate).trim();\n\t\t\t\torg.apache.lucene.document.Document doc =new org.apache.lucene.document.Document();\n\t\t\t\tdoc.add(new Field(\"date\",date,Field.Store.YES,Field.Index.ANALYZED));\n\t\t\t\tdoc.add(new Field(\"contents\",content,Field.Store.YES,Field.Index.ANALYZED));\n\t\t\t\tNumericField numericField = new NumericField(\"date2\");\n\t\t\t\tnumericField.setIntValue(Integer.valueOf(date));\n\t\t\t\tdoc.add(numericField);\n\t\t\t\twriter.addDocument(doc);\n\t\t\t\tline=d.readLine();\n\t\t\t}\t\t\t\n\t\t\td.close();\n      writer.close();\n\t\t}\n\t\treader=IndexReader.open(dir, true);\n\t\tsearcher=new IndexSearcher(reader);\n\t\t\n\t}\n\n","sourceOld":"\t/*\n\t * @see TestCase#setUp()\n\t */\n\t@Override\n\tprotected void setUp() throws Exception {\n\t\tsuper.setUp();\n\t\t\n\t\t//initialize the parser\n\t\tbuilder=new CorePlusExtensionsParser(\"contents\",analyzer);\n\t\t\n\t\t//initialize the index (done once, then cached in static data for use with ALL tests)\t\t\n\t\tif(dir==null)\n\t\t{\n\t\t\tBufferedReader d = new BufferedReader(new InputStreamReader(TestParser.class.getResourceAsStream(\"reuters21578.txt\"))); \n\t\t\tdir=new RAMDirectory();\n\t\t\tIndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(Version.LUCENE_24, analyzer));\n\t\t\tString line = d.readLine();\t\t\n\t\t\twhile(line!=null)\n\t\t\t{\n\t\t\t\tint endOfDate=line.indexOf('\\t');\n\t\t\t\tString date=line.substring(0,endOfDate).trim();\n\t\t\t\tString content=line.substring(endOfDate).trim();\n\t\t\t\torg.apache.lucene.document.Document doc =new org.apache.lucene.document.Document();\n\t\t\t\tdoc.add(new Field(\"date\",date,Field.Store.YES,Field.Index.ANALYZED));\n\t\t\t\tdoc.add(new Field(\"contents\",content,Field.Store.YES,Field.Index.ANALYZED));\n\t\t\t\twriter.addDocument(doc);\n\t\t\t\tline=d.readLine();\n\t\t\t}\t\t\t\n\t\t\td.close();\n      writer.close();\n\t\t}\n\t\treader=IndexReader.open(dir, true);\n\t\tsearcher=new IndexSearcher(reader);\n\t\t\n\t}\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1a2e46fd1b7cbc52d7d6461a6ef99e7107ae2a9c","date":1281477834,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/contrib/xml-query-parser/src/test/org/apache/lucene/xmlparser/TestParser#setUp().mjava","pathOld":"lucene/contrib/xml-query-parser/src/test/org/apache/lucene/xmlparser/TestParser#setUp().mjava","sourceNew":"\t/*\n\t * @see TestCase#setUp()\n\t */\n\t@Override\n\tprotected void setUp() throws Exception {\n\t\tsuper.setUp();\n\t\t\n\t\t//initialize the parser\n\t\tbuilder=new CorePlusExtensionsParser(\"contents\",analyzer);\n\t\t\n\t\t//initialize the index (done once, then cached in static data for use with ALL tests)\t\t\n\t\tif(dir==null)\n\t\t{\n\t\t\tBufferedReader d = new BufferedReader(new InputStreamReader(TestParser.class.getResourceAsStream(\"reuters21578.txt\"))); \n\t\t\tdir=new MockRAMDirectory();\n\t\t\tIndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(Version.LUCENE_24, analyzer));\n\t\t\tString line = d.readLine();\t\t\n\t\t\twhile(line!=null)\n\t\t\t{\n\t\t\t\tint endOfDate=line.indexOf('\\t');\n\t\t\t\tString date=line.substring(0,endOfDate).trim();\n\t\t\t\tString content=line.substring(endOfDate).trim();\n\t\t\t\torg.apache.lucene.document.Document doc =new org.apache.lucene.document.Document();\n\t\t\t\tdoc.add(new Field(\"date\",date,Field.Store.YES,Field.Index.ANALYZED));\n\t\t\t\tdoc.add(new Field(\"contents\",content,Field.Store.YES,Field.Index.ANALYZED));\n\t\t\t\tNumericField numericField = new NumericField(\"date2\");\n\t\t\t\tnumericField.setIntValue(Integer.valueOf(date));\n\t\t\t\tdoc.add(numericField);\n\t\t\t\twriter.addDocument(doc);\n\t\t\t\tline=d.readLine();\n\t\t\t}\t\t\t\n\t\t\td.close();\n      writer.close();\n\t\t}\n\t\treader=IndexReader.open(dir, true);\n\t\tsearcher=new IndexSearcher(reader);\n\t\t\n\t}\n\n","sourceOld":"\t/*\n\t * @see TestCase#setUp()\n\t */\n\t@Override\n\tprotected void setUp() throws Exception {\n\t\tsuper.setUp();\n\t\t\n\t\t//initialize the parser\n\t\tbuilder=new CorePlusExtensionsParser(\"contents\",analyzer);\n\t\t\n\t\t//initialize the index (done once, then cached in static data for use with ALL tests)\t\t\n\t\tif(dir==null)\n\t\t{\n\t\t\tBufferedReader d = new BufferedReader(new InputStreamReader(TestParser.class.getResourceAsStream(\"reuters21578.txt\"))); \n\t\t\tdir=new RAMDirectory();\n\t\t\tIndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(Version.LUCENE_24, analyzer));\n\t\t\tString line = d.readLine();\t\t\n\t\t\twhile(line!=null)\n\t\t\t{\n\t\t\t\tint endOfDate=line.indexOf('\\t');\n\t\t\t\tString date=line.substring(0,endOfDate).trim();\n\t\t\t\tString content=line.substring(endOfDate).trim();\n\t\t\t\torg.apache.lucene.document.Document doc =new org.apache.lucene.document.Document();\n\t\t\t\tdoc.add(new Field(\"date\",date,Field.Store.YES,Field.Index.ANALYZED));\n\t\t\t\tdoc.add(new Field(\"contents\",content,Field.Store.YES,Field.Index.ANALYZED));\n\t\t\t\tNumericField numericField = new NumericField(\"date2\");\n\t\t\t\tnumericField.setIntValue(Integer.valueOf(date));\n\t\t\t\tdoc.add(numericField);\n\t\t\t\twriter.addDocument(doc);\n\t\t\t\tline=d.readLine();\n\t\t\t}\t\t\t\n\t\t\td.close();\n      writer.close();\n\t\t}\n\t\treader=IndexReader.open(dir, true);\n\t\tsearcher=new IndexSearcher(reader);\n\t\t\n\t}\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ab9633cb67e3c0aec3c066147a23a957d6e7ad8c","date":1281646583,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/contrib/xml-query-parser/src/test/org/apache/lucene/xmlparser/TestParser#setUp().mjava","pathOld":"lucene/contrib/xml-query-parser/src/test/org/apache/lucene/xmlparser/TestParser#setUp().mjava","sourceNew":"\t/*\n\t * @see TestCase#setUp()\n\t */\n\t@Override\n\tprotected void setUp() throws Exception {\n\t\tsuper.setUp();\n\t\t\n\t\t//initialize the parser\n\t\tbuilder=new CorePlusExtensionsParser(\"contents\",analyzer);\n\t\t\n\t\t  Random random = newRandom();\n\t\t\tBufferedReader d = new BufferedReader(new InputStreamReader(TestParser.class.getResourceAsStream(\"reuters21578.txt\"))); \n\t\t\tdir=newDirectory(random);\n\t\t\tIndexWriter writer = new IndexWriter(dir, newIndexWriterConfig(random, Version.LUCENE_24, analyzer));\n\t\t\tString line = d.readLine();\t\t\n\t\t\twhile(line!=null)\n\t\t\t{\n\t\t\t\tint endOfDate=line.indexOf('\\t');\n\t\t\t\tString date=line.substring(0,endOfDate).trim();\n\t\t\t\tString content=line.substring(endOfDate).trim();\n\t\t\t\torg.apache.lucene.document.Document doc =new org.apache.lucene.document.Document();\n\t\t\t\tdoc.add(new Field(\"date\",date,Field.Store.YES,Field.Index.ANALYZED));\n\t\t\t\tdoc.add(new Field(\"contents\",content,Field.Store.YES,Field.Index.ANALYZED));\n\t\t\t\tNumericField numericField = new NumericField(\"date2\");\n\t\t\t\tnumericField.setIntValue(Integer.valueOf(date));\n\t\t\t\tdoc.add(numericField);\n\t\t\t\twriter.addDocument(doc);\n\t\t\t\tline=d.readLine();\n\t\t\t}\t\t\t\n\t\t\td.close();\n      writer.close();\n\t\treader=IndexReader.open(dir, true);\n\t\tsearcher=new IndexSearcher(reader);\n\t\t\n\t}\n\n","sourceOld":"\t/*\n\t * @see TestCase#setUp()\n\t */\n\t@Override\n\tprotected void setUp() throws Exception {\n\t\tsuper.setUp();\n\t\t\n\t\t//initialize the parser\n\t\tbuilder=new CorePlusExtensionsParser(\"contents\",analyzer);\n\t\t\n\t\t//initialize the index (done once, then cached in static data for use with ALL tests)\t\t\n\t\tif(dir==null)\n\t\t{\n\t\t\tBufferedReader d = new BufferedReader(new InputStreamReader(TestParser.class.getResourceAsStream(\"reuters21578.txt\"))); \n\t\t\tdir=new MockRAMDirectory();\n\t\t\tIndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(Version.LUCENE_24, analyzer));\n\t\t\tString line = d.readLine();\t\t\n\t\t\twhile(line!=null)\n\t\t\t{\n\t\t\t\tint endOfDate=line.indexOf('\\t');\n\t\t\t\tString date=line.substring(0,endOfDate).trim();\n\t\t\t\tString content=line.substring(endOfDate).trim();\n\t\t\t\torg.apache.lucene.document.Document doc =new org.apache.lucene.document.Document();\n\t\t\t\tdoc.add(new Field(\"date\",date,Field.Store.YES,Field.Index.ANALYZED));\n\t\t\t\tdoc.add(new Field(\"contents\",content,Field.Store.YES,Field.Index.ANALYZED));\n\t\t\t\tNumericField numericField = new NumericField(\"date2\");\n\t\t\t\tnumericField.setIntValue(Integer.valueOf(date));\n\t\t\t\tdoc.add(numericField);\n\t\t\t\twriter.addDocument(doc);\n\t\t\t\tline=d.readLine();\n\t\t\t}\t\t\t\n\t\t\td.close();\n      writer.close();\n\t\t}\n\t\treader=IndexReader.open(dir, true);\n\t\tsearcher=new IndexSearcher(reader);\n\t\t\n\t}\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1f653cfcf159baeaafe5d01682a911e95bba4012","date":1284122058,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/contrib/xml-query-parser/src/test/org/apache/lucene/xmlparser/TestParser#setUp().mjava","pathOld":"lucene/contrib/xml-query-parser/src/test/org/apache/lucene/xmlparser/TestParser#setUp().mjava","sourceNew":"\t/*\n\t * @see TestCase#setUp()\n\t */\n\t@Override\n\tprotected void setUp() throws Exception {\n\t\tsuper.setUp();\n\t\t\n\t\t//initialize the parser\n\t\tbuilder=new CorePlusExtensionsParser(\"contents\",analyzer);\n\t\t\n\t\t\tBufferedReader d = new BufferedReader(new InputStreamReader(TestParser.class.getResourceAsStream(\"reuters21578.txt\"))); \n\t\t\tdir=newDirectory();\n\t\t\tIndexWriter writer = new IndexWriter(dir, newIndexWriterConfig(Version.LUCENE_24, analyzer));\n\t\t\tString line = d.readLine();\t\t\n\t\t\twhile(line!=null)\n\t\t\t{\n\t\t\t\tint endOfDate=line.indexOf('\\t');\n\t\t\t\tString date=line.substring(0,endOfDate).trim();\n\t\t\t\tString content=line.substring(endOfDate).trim();\n\t\t\t\torg.apache.lucene.document.Document doc =new org.apache.lucene.document.Document();\n\t\t\t\tdoc.add(new Field(\"date\",date,Field.Store.YES,Field.Index.ANALYZED));\n\t\t\t\tdoc.add(new Field(\"contents\",content,Field.Store.YES,Field.Index.ANALYZED));\n\t\t\t\tNumericField numericField = new NumericField(\"date2\");\n\t\t\t\tnumericField.setIntValue(Integer.valueOf(date));\n\t\t\t\tdoc.add(numericField);\n\t\t\t\twriter.addDocument(doc);\n\t\t\t\tline=d.readLine();\n\t\t\t}\t\t\t\n\t\t\td.close();\n      writer.close();\n\t\treader=IndexReader.open(dir, true);\n\t\tsearcher=new IndexSearcher(reader);\n\t\t\n\t}\n\n","sourceOld":"\t/*\n\t * @see TestCase#setUp()\n\t */\n\t@Override\n\tprotected void setUp() throws Exception {\n\t\tsuper.setUp();\n\t\t\n\t\t//initialize the parser\n\t\tbuilder=new CorePlusExtensionsParser(\"contents\",analyzer);\n\t\t\n\t\t  Random random = newRandom();\n\t\t\tBufferedReader d = new BufferedReader(new InputStreamReader(TestParser.class.getResourceAsStream(\"reuters21578.txt\"))); \n\t\t\tdir=newDirectory(random);\n\t\t\tIndexWriter writer = new IndexWriter(dir, newIndexWriterConfig(random, Version.LUCENE_24, analyzer));\n\t\t\tString line = d.readLine();\t\t\n\t\t\twhile(line!=null)\n\t\t\t{\n\t\t\t\tint endOfDate=line.indexOf('\\t');\n\t\t\t\tString date=line.substring(0,endOfDate).trim();\n\t\t\t\tString content=line.substring(endOfDate).trim();\n\t\t\t\torg.apache.lucene.document.Document doc =new org.apache.lucene.document.Document();\n\t\t\t\tdoc.add(new Field(\"date\",date,Field.Store.YES,Field.Index.ANALYZED));\n\t\t\t\tdoc.add(new Field(\"contents\",content,Field.Store.YES,Field.Index.ANALYZED));\n\t\t\t\tNumericField numericField = new NumericField(\"date2\");\n\t\t\t\tnumericField.setIntValue(Integer.valueOf(date));\n\t\t\t\tdoc.add(numericField);\n\t\t\t\twriter.addDocument(doc);\n\t\t\t\tline=d.readLine();\n\t\t\t}\t\t\t\n\t\t\td.close();\n      writer.close();\n\t\treader=IndexReader.open(dir, true);\n\t\tsearcher=new IndexSearcher(reader);\n\t\t\n\t}\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"132903c28af3aa6f67284b78de91c0f0a99488c2","date":1284282129,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/contrib/xml-query-parser/src/test/org/apache/lucene/xmlparser/TestParser#setUp().mjava","pathOld":"lucene/contrib/xml-query-parser/src/test/org/apache/lucene/xmlparser/TestParser#setUp().mjava","sourceNew":"\t/*\n\t * @see TestCase#setUp()\n\t */\n\t@Override\n\tprotected void setUp() throws Exception {\n\t\tsuper.setUp();\n\t\t\n\t\t//initialize the parser\n\t\tbuilder=new CorePlusExtensionsParser(\"contents\",analyzer);\n\t\t\n\t\t\tBufferedReader d = new BufferedReader(new InputStreamReader(TestParser.class.getResourceAsStream(\"reuters21578.txt\"))); \n\t\t\tdir=newDirectory();\n\t\t\tIndexWriter writer = new IndexWriter(dir, newIndexWriterConfig(Version.LUCENE_24, analyzer));\n\t\t\tString line = d.readLine();\t\t\n\t\t\twhile(line!=null)\n\t\t\t{\n\t\t\t\tint endOfDate=line.indexOf('\\t');\n\t\t\t\tString date=line.substring(0,endOfDate).trim();\n\t\t\t\tString content=line.substring(endOfDate).trim();\n\t\t\t\torg.apache.lucene.document.Document doc =new org.apache.lucene.document.Document();\n\t\t\t\tdoc.add(newField(\"date\",date,Field.Store.YES,Field.Index.ANALYZED));\n\t\t\t\tdoc.add(newField(\"contents\",content,Field.Store.YES,Field.Index.ANALYZED));\n\t\t\t\tNumericField numericField = new NumericField(\"date2\");\n\t\t\t\tnumericField.setIntValue(Integer.valueOf(date));\n\t\t\t\tdoc.add(numericField);\n\t\t\t\twriter.addDocument(doc);\n\t\t\t\tline=d.readLine();\n\t\t\t}\t\t\t\n\t\t\td.close();\n      writer.close();\n\t\treader=IndexReader.open(dir, true);\n\t\tsearcher=new IndexSearcher(reader);\n\t\t\n\t}\n\n","sourceOld":"\t/*\n\t * @see TestCase#setUp()\n\t */\n\t@Override\n\tprotected void setUp() throws Exception {\n\t\tsuper.setUp();\n\t\t\n\t\t//initialize the parser\n\t\tbuilder=new CorePlusExtensionsParser(\"contents\",analyzer);\n\t\t\n\t\t\tBufferedReader d = new BufferedReader(new InputStreamReader(TestParser.class.getResourceAsStream(\"reuters21578.txt\"))); \n\t\t\tdir=newDirectory();\n\t\t\tIndexWriter writer = new IndexWriter(dir, newIndexWriterConfig(Version.LUCENE_24, analyzer));\n\t\t\tString line = d.readLine();\t\t\n\t\t\twhile(line!=null)\n\t\t\t{\n\t\t\t\tint endOfDate=line.indexOf('\\t');\n\t\t\t\tString date=line.substring(0,endOfDate).trim();\n\t\t\t\tString content=line.substring(endOfDate).trim();\n\t\t\t\torg.apache.lucene.document.Document doc =new org.apache.lucene.document.Document();\n\t\t\t\tdoc.add(new Field(\"date\",date,Field.Store.YES,Field.Index.ANALYZED));\n\t\t\t\tdoc.add(new Field(\"contents\",content,Field.Store.YES,Field.Index.ANALYZED));\n\t\t\t\tNumericField numericField = new NumericField(\"date2\");\n\t\t\t\tnumericField.setIntValue(Integer.valueOf(date));\n\t\t\t\tdoc.add(numericField);\n\t\t\t\twriter.addDocument(doc);\n\t\t\t\tline=d.readLine();\n\t\t\t}\t\t\t\n\t\t\td.close();\n      writer.close();\n\t\treader=IndexReader.open(dir, true);\n\t\tsearcher=new IndexSearcher(reader);\n\t\t\n\t}\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"43b04c27924fe393e38e9f0986e32c634f261859","date":1284399440,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/contrib/xml-query-parser/src/test/org/apache/lucene/xmlparser/TestParser#setUp().mjava","pathOld":"lucene/contrib/xml-query-parser/src/test/org/apache/lucene/xmlparser/TestParser#setUp().mjava","sourceNew":"\t/*\n\t * @see TestCase#setUp()\n\t */\n\t@Override\n\tpublic void setUp() throws Exception {\n\t\tsuper.setUp();\n\t\t\n\t\t//initialize the parser\n\t\tbuilder=new CorePlusExtensionsParser(\"contents\",analyzer);\n\t\t\n\t\t\tBufferedReader d = new BufferedReader(new InputStreamReader(TestParser.class.getResourceAsStream(\"reuters21578.txt\"))); \n\t\t\tdir=newDirectory();\n\t\t\tIndexWriter writer = new IndexWriter(dir, newIndexWriterConfig(Version.LUCENE_24, analyzer));\n\t\t\tString line = d.readLine();\t\t\n\t\t\twhile(line!=null)\n\t\t\t{\n\t\t\t\tint endOfDate=line.indexOf('\\t');\n\t\t\t\tString date=line.substring(0,endOfDate).trim();\n\t\t\t\tString content=line.substring(endOfDate).trim();\n\t\t\t\torg.apache.lucene.document.Document doc =new org.apache.lucene.document.Document();\n\t\t\t\tdoc.add(newField(\"date\",date,Field.Store.YES,Field.Index.ANALYZED));\n\t\t\t\tdoc.add(newField(\"contents\",content,Field.Store.YES,Field.Index.ANALYZED));\n\t\t\t\tNumericField numericField = new NumericField(\"date2\");\n\t\t\t\tnumericField.setIntValue(Integer.valueOf(date));\n\t\t\t\tdoc.add(numericField);\n\t\t\t\twriter.addDocument(doc);\n\t\t\t\tline=d.readLine();\n\t\t\t}\t\t\t\n\t\t\td.close();\n      writer.close();\n\t\treader=IndexReader.open(dir, true);\n\t\tsearcher=new IndexSearcher(reader);\n\t\t\n\t}\n\n","sourceOld":"\t/*\n\t * @see TestCase#setUp()\n\t */\n\t@Override\n\tprotected void setUp() throws Exception {\n\t\tsuper.setUp();\n\t\t\n\t\t//initialize the parser\n\t\tbuilder=new CorePlusExtensionsParser(\"contents\",analyzer);\n\t\t\n\t\t\tBufferedReader d = new BufferedReader(new InputStreamReader(TestParser.class.getResourceAsStream(\"reuters21578.txt\"))); \n\t\t\tdir=newDirectory();\n\t\t\tIndexWriter writer = new IndexWriter(dir, newIndexWriterConfig(Version.LUCENE_24, analyzer));\n\t\t\tString line = d.readLine();\t\t\n\t\t\twhile(line!=null)\n\t\t\t{\n\t\t\t\tint endOfDate=line.indexOf('\\t');\n\t\t\t\tString date=line.substring(0,endOfDate).trim();\n\t\t\t\tString content=line.substring(endOfDate).trim();\n\t\t\t\torg.apache.lucene.document.Document doc =new org.apache.lucene.document.Document();\n\t\t\t\tdoc.add(newField(\"date\",date,Field.Store.YES,Field.Index.ANALYZED));\n\t\t\t\tdoc.add(newField(\"contents\",content,Field.Store.YES,Field.Index.ANALYZED));\n\t\t\t\tNumericField numericField = new NumericField(\"date2\");\n\t\t\t\tnumericField.setIntValue(Integer.valueOf(date));\n\t\t\t\tdoc.add(numericField);\n\t\t\t\twriter.addDocument(doc);\n\t\t\t\tline=d.readLine();\n\t\t\t}\t\t\t\n\t\t\td.close();\n      writer.close();\n\t\treader=IndexReader.open(dir, true);\n\t\tsearcher=new IndexSearcher(reader);\n\t\t\n\t}\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4e8cc373c801e54cec75daf9f52792cb4b17f536","date":1291116159,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/contrib/xml-query-parser/src/test/org/apache/lucene/xmlparser/TestParser#setUp().mjava","pathOld":"lucene/contrib/xml-query-parser/src/test/org/apache/lucene/xmlparser/TestParser#setUp().mjava","sourceNew":"\t/*\n\t * @see TestCase#setUp()\n\t */\n\t@Override\n\tpublic void setUp() throws Exception {\n\t\tsuper.setUp();\n\t\t\n\t\t//initialize the parser\n\t\tbuilder=new CorePlusExtensionsParser(\"contents\",analyzer);\n\t\t\n\t\t\tBufferedReader d = new BufferedReader(new InputStreamReader(TestParser.class.getResourceAsStream(\"reuters21578.txt\"))); \n\t\t\tdir=newDirectory();\n\t\t\tIndexWriter writer = new IndexWriter(dir, newIndexWriterConfig(Version.LUCENE_40, analyzer));\n\t\t\tString line = d.readLine();\t\t\n\t\t\twhile(line!=null)\n\t\t\t{\n\t\t\t\tint endOfDate=line.indexOf('\\t');\n\t\t\t\tString date=line.substring(0,endOfDate).trim();\n\t\t\t\tString content=line.substring(endOfDate).trim();\n\t\t\t\torg.apache.lucene.document.Document doc =new org.apache.lucene.document.Document();\n\t\t\t\tdoc.add(newField(\"date\",date,Field.Store.YES,Field.Index.ANALYZED));\n\t\t\t\tdoc.add(newField(\"contents\",content,Field.Store.YES,Field.Index.ANALYZED));\n\t\t\t\tNumericField numericField = new NumericField(\"date2\");\n\t\t\t\tnumericField.setIntValue(Integer.valueOf(date));\n\t\t\t\tdoc.add(numericField);\n\t\t\t\twriter.addDocument(doc);\n\t\t\t\tline=d.readLine();\n\t\t\t}\t\t\t\n\t\t\td.close();\n      writer.close();\n\t\treader=IndexReader.open(dir, true);\n\t\tsearcher=new IndexSearcher(reader);\n\t\t\n\t}\n\n","sourceOld":"\t/*\n\t * @see TestCase#setUp()\n\t */\n\t@Override\n\tpublic void setUp() throws Exception {\n\t\tsuper.setUp();\n\t\t\n\t\t//initialize the parser\n\t\tbuilder=new CorePlusExtensionsParser(\"contents\",analyzer);\n\t\t\n\t\t\tBufferedReader d = new BufferedReader(new InputStreamReader(TestParser.class.getResourceAsStream(\"reuters21578.txt\"))); \n\t\t\tdir=newDirectory();\n\t\t\tIndexWriter writer = new IndexWriter(dir, newIndexWriterConfig(Version.LUCENE_24, analyzer));\n\t\t\tString line = d.readLine();\t\t\n\t\t\twhile(line!=null)\n\t\t\t{\n\t\t\t\tint endOfDate=line.indexOf('\\t');\n\t\t\t\tString date=line.substring(0,endOfDate).trim();\n\t\t\t\tString content=line.substring(endOfDate).trim();\n\t\t\t\torg.apache.lucene.document.Document doc =new org.apache.lucene.document.Document();\n\t\t\t\tdoc.add(newField(\"date\",date,Field.Store.YES,Field.Index.ANALYZED));\n\t\t\t\tdoc.add(newField(\"contents\",content,Field.Store.YES,Field.Index.ANALYZED));\n\t\t\t\tNumericField numericField = new NumericField(\"date2\");\n\t\t\t\tnumericField.setIntValue(Integer.valueOf(date));\n\t\t\t\tdoc.add(numericField);\n\t\t\t\twriter.addDocument(doc);\n\t\t\t\tline=d.readLine();\n\t\t\t}\t\t\t\n\t\t\td.close();\n      writer.close();\n\t\treader=IndexReader.open(dir, true);\n\t\tsearcher=new IndexSearcher(reader);\n\t\t\n\t}\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3bb13258feba31ab676502787ab2e1779f129b7a","date":1291596436,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/contrib/xml-query-parser/src/test/org/apache/lucene/xmlparser/TestParser#setUp().mjava","pathOld":"lucene/contrib/xml-query-parser/src/test/org/apache/lucene/xmlparser/TestParser#setUp().mjava","sourceNew":"\t/*\n\t * @see TestCase#setUp()\n\t */\n\t@Override\n\tpublic void setUp() throws Exception {\n\t\tsuper.setUp();\n\t\t\n\t\t//initialize the parser\n\t\tbuilder=new CorePlusExtensionsParser(\"contents\",analyzer);\n\t\t\n\t\t\tBufferedReader d = new BufferedReader(new InputStreamReader(TestParser.class.getResourceAsStream(\"reuters21578.txt\"))); \n\t\t\tdir=newDirectory();\n\t\t\tIndexWriter writer = new IndexWriter(dir, newIndexWriterConfig(Version.LUCENE_40, analyzer));\n\t\t\tString line = d.readLine();\t\t\n\t\t\twhile(line!=null)\n\t\t\t{\n\t\t\t\tint endOfDate=line.indexOf('\\t');\n\t\t\t\tString date=line.substring(0,endOfDate).trim();\n\t\t\t\tString content=line.substring(endOfDate).trim();\n\t\t\t\torg.apache.lucene.document.Document doc =new org.apache.lucene.document.Document();\n\t\t\t\tdoc.add(newField(\"date\",date,Field.Store.YES,Field.Index.ANALYZED));\n\t\t\t\tdoc.add(newField(\"contents\",content,Field.Store.YES,Field.Index.ANALYZED));\n\t\t\t\tNumericField numericField = new NumericField(\"date2\");\n\t\t\t\tnumericField.setIntValue(Integer.valueOf(date));\n\t\t\t\tdoc.add(numericField);\n\t\t\t\twriter.addDocument(doc);\n\t\t\t\tline=d.readLine();\n\t\t\t}\t\t\t\n\t\t\td.close();\n      writer.close();\n\t\treader=IndexReader.open(dir, true);\n\t\tsearcher=new IndexSearcher(reader);\n\t\t\n\t}\n\n","sourceOld":"\t/*\n\t * @see TestCase#setUp()\n\t */\n\t@Override\n\tpublic void setUp() throws Exception {\n\t\tsuper.setUp();\n\t\t\n\t\t//initialize the parser\n\t\tbuilder=new CorePlusExtensionsParser(\"contents\",analyzer);\n\t\t\n\t\t\tBufferedReader d = new BufferedReader(new InputStreamReader(TestParser.class.getResourceAsStream(\"reuters21578.txt\"))); \n\t\t\tdir=newDirectory();\n\t\t\tIndexWriter writer = new IndexWriter(dir, newIndexWriterConfig(Version.LUCENE_24, analyzer));\n\t\t\tString line = d.readLine();\t\t\n\t\t\twhile(line!=null)\n\t\t\t{\n\t\t\t\tint endOfDate=line.indexOf('\\t');\n\t\t\t\tString date=line.substring(0,endOfDate).trim();\n\t\t\t\tString content=line.substring(endOfDate).trim();\n\t\t\t\torg.apache.lucene.document.Document doc =new org.apache.lucene.document.Document();\n\t\t\t\tdoc.add(newField(\"date\",date,Field.Store.YES,Field.Index.ANALYZED));\n\t\t\t\tdoc.add(newField(\"contents\",content,Field.Store.YES,Field.Index.ANALYZED));\n\t\t\t\tNumericField numericField = new NumericField(\"date2\");\n\t\t\t\tnumericField.setIntValue(Integer.valueOf(date));\n\t\t\t\tdoc.add(numericField);\n\t\t\t\twriter.addDocument(doc);\n\t\t\t\tline=d.readLine();\n\t\t\t}\t\t\t\n\t\t\td.close();\n      writer.close();\n\t\treader=IndexReader.open(dir, true);\n\t\tsearcher=new IndexSearcher(reader);\n\t\t\n\t}\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"68d031127d4e6ad6d28814a234474b03d6d605cf","date":1292713983,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/contrib/xml-query-parser/src/test/org/apache/lucene/xmlparser/TestParser#beforeClass().mjava","pathOld":"lucene/contrib/xml-query-parser/src/test/org/apache/lucene/xmlparser/TestParser#setUp().mjava","sourceNew":"\t@BeforeClass\n\tpublic static void beforeClass() throws Exception {\n\t  // TODO: rewrite test (this needs to set QueryParser.enablePositionIncrements, too, for work with CURRENT):\n\t  Analyzer analyzer=new MockAnalyzer(MockTokenizer.WHITESPACE, true, MockTokenFilter.ENGLISH_STOPSET, false); \n    //initialize the parser\n\t  builder=new CorePlusExtensionsParser(\"contents\",analyzer);\n\t\t\n\t\t\tBufferedReader d = new BufferedReader(new InputStreamReader(TestParser.class.getResourceAsStream(\"reuters21578.txt\"))); \n\t\t\tdir=newDirectory();\n\t\t\tIndexWriter writer = new IndexWriter(dir, newIndexWriterConfig(Version.LUCENE_40, analyzer));\n\t\t\tString line = d.readLine();\t\t\n\t\t\twhile(line!=null)\n\t\t\t{\n\t\t\t\tint endOfDate=line.indexOf('\\t');\n\t\t\t\tString date=line.substring(0,endOfDate).trim();\n\t\t\t\tString content=line.substring(endOfDate).trim();\n\t\t\t\torg.apache.lucene.document.Document doc =new org.apache.lucene.document.Document();\n\t\t\t\tdoc.add(newField(\"date\",date,Field.Store.YES,Field.Index.ANALYZED));\n\t\t\t\tdoc.add(newField(\"contents\",content,Field.Store.YES,Field.Index.ANALYZED));\n\t\t\t\tNumericField numericField = new NumericField(\"date2\");\n\t\t\t\tnumericField.setIntValue(Integer.valueOf(date));\n\t\t\t\tdoc.add(numericField);\n\t\t\t\twriter.addDocument(doc);\n\t\t\t\tline=d.readLine();\n\t\t\t}\t\t\t\n\t\t\td.close();\n      writer.close();\n\t\treader=IndexReader.open(dir, true);\n\t\tsearcher=new IndexSearcher(reader);\n\t\t\n\t}\n\n","sourceOld":"\t/*\n\t * @see TestCase#setUp()\n\t */\n\t@Override\n\tpublic void setUp() throws Exception {\n\t\tsuper.setUp();\n\t\t\n\t\t//initialize the parser\n\t\tbuilder=new CorePlusExtensionsParser(\"contents\",analyzer);\n\t\t\n\t\t\tBufferedReader d = new BufferedReader(new InputStreamReader(TestParser.class.getResourceAsStream(\"reuters21578.txt\"))); \n\t\t\tdir=newDirectory();\n\t\t\tIndexWriter writer = new IndexWriter(dir, newIndexWriterConfig(Version.LUCENE_40, analyzer));\n\t\t\tString line = d.readLine();\t\t\n\t\t\twhile(line!=null)\n\t\t\t{\n\t\t\t\tint endOfDate=line.indexOf('\\t');\n\t\t\t\tString date=line.substring(0,endOfDate).trim();\n\t\t\t\tString content=line.substring(endOfDate).trim();\n\t\t\t\torg.apache.lucene.document.Document doc =new org.apache.lucene.document.Document();\n\t\t\t\tdoc.add(newField(\"date\",date,Field.Store.YES,Field.Index.ANALYZED));\n\t\t\t\tdoc.add(newField(\"contents\",content,Field.Store.YES,Field.Index.ANALYZED));\n\t\t\t\tNumericField numericField = new NumericField(\"date2\");\n\t\t\t\tnumericField.setIntValue(Integer.valueOf(date));\n\t\t\t\tdoc.add(numericField);\n\t\t\t\twriter.addDocument(doc);\n\t\t\t\tline=d.readLine();\n\t\t\t}\t\t\t\n\t\t\td.close();\n      writer.close();\n\t\treader=IndexReader.open(dir, true);\n\t\tsearcher=new IndexSearcher(reader);\n\t\t\n\t}\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ab5cb6a74aefb78aa0569857970b9151dfe2e787","date":1292842407,"type":5,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/contrib/xml-query-parser/src/test/org/apache/lucene/xmlparser/TestParser#beforeClass().mjava","pathOld":"lucene/contrib/xml-query-parser/src/test/org/apache/lucene/xmlparser/TestParser#setUp().mjava","sourceNew":"\t@BeforeClass\n\tpublic static void beforeClass() throws Exception {\n\t  // TODO: rewrite test (this needs to set QueryParser.enablePositionIncrements, too, for work with CURRENT):\n\t  Analyzer analyzer=new MockAnalyzer(MockTokenizer.WHITESPACE, true, MockTokenFilter.ENGLISH_STOPSET, false); \n    //initialize the parser\n\t  builder=new CorePlusExtensionsParser(\"contents\",analyzer);\n\t\t\n\t\t\tBufferedReader d = new BufferedReader(new InputStreamReader(TestParser.class.getResourceAsStream(\"reuters21578.txt\"))); \n\t\t\tdir=newDirectory();\n\t\t\tIndexWriter writer = new IndexWriter(dir, newIndexWriterConfig(Version.LUCENE_40, analyzer));\n\t\t\tString line = d.readLine();\t\t\n\t\t\twhile(line!=null)\n\t\t\t{\n\t\t\t\tint endOfDate=line.indexOf('\\t');\n\t\t\t\tString date=line.substring(0,endOfDate).trim();\n\t\t\t\tString content=line.substring(endOfDate).trim();\n\t\t\t\torg.apache.lucene.document.Document doc =new org.apache.lucene.document.Document();\n\t\t\t\tdoc.add(newField(\"date\",date,Field.Store.YES,Field.Index.ANALYZED));\n\t\t\t\tdoc.add(newField(\"contents\",content,Field.Store.YES,Field.Index.ANALYZED));\n\t\t\t\tNumericField numericField = new NumericField(\"date2\");\n\t\t\t\tnumericField.setIntValue(Integer.valueOf(date));\n\t\t\t\tdoc.add(numericField);\n\t\t\t\twriter.addDocument(doc);\n\t\t\t\tline=d.readLine();\n\t\t\t}\t\t\t\n\t\t\td.close();\n      writer.close();\n\t\treader=IndexReader.open(dir, true);\n\t\tsearcher=new IndexSearcher(reader);\n\t\t\n\t}\n\n","sourceOld":"\t/*\n\t * @see TestCase#setUp()\n\t */\n\t@Override\n\tpublic void setUp() throws Exception {\n\t\tsuper.setUp();\n\t\t\n\t\t//initialize the parser\n\t\tbuilder=new CorePlusExtensionsParser(\"contents\",analyzer);\n\t\t\n\t\t\tBufferedReader d = new BufferedReader(new InputStreamReader(TestParser.class.getResourceAsStream(\"reuters21578.txt\"))); \n\t\t\tdir=newDirectory();\n\t\t\tIndexWriter writer = new IndexWriter(dir, newIndexWriterConfig(Version.LUCENE_40, analyzer));\n\t\t\tString line = d.readLine();\t\t\n\t\t\twhile(line!=null)\n\t\t\t{\n\t\t\t\tint endOfDate=line.indexOf('\\t');\n\t\t\t\tString date=line.substring(0,endOfDate).trim();\n\t\t\t\tString content=line.substring(endOfDate).trim();\n\t\t\t\torg.apache.lucene.document.Document doc =new org.apache.lucene.document.Document();\n\t\t\t\tdoc.add(newField(\"date\",date,Field.Store.YES,Field.Index.ANALYZED));\n\t\t\t\tdoc.add(newField(\"contents\",content,Field.Store.YES,Field.Index.ANALYZED));\n\t\t\t\tNumericField numericField = new NumericField(\"date2\");\n\t\t\t\tnumericField.setIntValue(Integer.valueOf(date));\n\t\t\t\tdoc.add(numericField);\n\t\t\t\twriter.addDocument(doc);\n\t\t\t\tline=d.readLine();\n\t\t\t}\t\t\t\n\t\t\td.close();\n      writer.close();\n\t\treader=IndexReader.open(dir, true);\n\t\tsearcher=new IndexSearcher(reader);\n\t\t\n\t}\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","date":1292920096,"type":4,"author":"Michael Busch","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/contrib/xml-query-parser/src/test/org/apache/lucene/xmlparser/TestParser#setUp().mjava","sourceNew":null,"sourceOld":"\t/*\n\t * @see TestCase#setUp()\n\t */\n\t@Override\n\tprotected void setUp() throws Exception {\n\t\tsuper.setUp();\n\t\t\n\t\t//initialize the parser\n\t\tbuilder=new CorePlusExtensionsParser(\"contents\",analyzer);\n\t\t\n\t\t//initialize the index (done once, then cached in static data for use with ALL tests)\t\t\n\t\tif(dir==null)\n\t\t{\n\t\t\tBufferedReader d = new BufferedReader(new InputStreamReader(TestParser.class.getResourceAsStream(\"reuters21578.txt\"))); \n\t\t\tdir=new RAMDirectory();\n\t\t\tIndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(Version.LUCENE_24, analyzer));\n\t\t\tString line = d.readLine();\t\t\n\t\t\twhile(line!=null)\n\t\t\t{\n\t\t\t\tint endOfDate=line.indexOf('\\t');\n\t\t\t\tString date=line.substring(0,endOfDate).trim();\n\t\t\t\tString content=line.substring(endOfDate).trim();\n\t\t\t\torg.apache.lucene.document.Document doc =new org.apache.lucene.document.Document();\n\t\t\t\tdoc.add(new Field(\"date\",date,Field.Store.YES,Field.Index.ANALYZED));\n\t\t\t\tdoc.add(new Field(\"contents\",content,Field.Store.YES,Field.Index.ANALYZED));\n\t\t\t\tNumericField numericField = new NumericField(\"date2\");\n\t\t\t\tnumericField.setIntValue(Integer.valueOf(date));\n\t\t\t\tdoc.add(numericField);\n\t\t\t\twriter.addDocument(doc);\n\t\t\t\tline=d.readLine();\n\t\t\t}\t\t\t\n\t\t\td.close();\n      writer.close();\n\t\t}\n\t\treader=IndexReader.open(dir, true);\n\t\tsearcher=new IndexSearcher(reader);\n\t\t\n\t}\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"ab9633cb67e3c0aec3c066147a23a957d6e7ad8c":["1a2e46fd1b7cbc52d7d6461a6ef99e7107ae2a9c"],"ab5cb6a74aefb78aa0569857970b9151dfe2e787":["3bb13258feba31ab676502787ab2e1779f129b7a","68d031127d4e6ad6d28814a234474b03d6d605cf"],"132903c28af3aa6f67284b78de91c0f0a99488c2":["1f653cfcf159baeaafe5d01682a911e95bba4012"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["05bdab91555bc2728769812fa2e40814e900f661","68d031127d4e6ad6d28814a234474b03d6d605cf"],"43b04c27924fe393e38e9f0986e32c634f261859":["132903c28af3aa6f67284b78de91c0f0a99488c2"],"68d031127d4e6ad6d28814a234474b03d6d605cf":["4e8cc373c801e54cec75daf9f52792cb4b17f536"],"1f653cfcf159baeaafe5d01682a911e95bba4012":["ab9633cb67e3c0aec3c066147a23a957d6e7ad8c"],"1a2e46fd1b7cbc52d7d6461a6ef99e7107ae2a9c":["05bdab91555bc2728769812fa2e40814e900f661"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"05bdab91555bc2728769812fa2e40814e900f661":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"3bb13258feba31ab676502787ab2e1779f129b7a":["43b04c27924fe393e38e9f0986e32c634f261859","4e8cc373c801e54cec75daf9f52792cb4b17f536"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["68d031127d4e6ad6d28814a234474b03d6d605cf"],"4e8cc373c801e54cec75daf9f52792cb4b17f536":["43b04c27924fe393e38e9f0986e32c634f261859"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"ab9633cb67e3c0aec3c066147a23a957d6e7ad8c":["1f653cfcf159baeaafe5d01682a911e95bba4012"],"ab5cb6a74aefb78aa0569857970b9151dfe2e787":[],"132903c28af3aa6f67284b78de91c0f0a99488c2":["43b04c27924fe393e38e9f0986e32c634f261859"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":[],"43b04c27924fe393e38e9f0986e32c634f261859":["3bb13258feba31ab676502787ab2e1779f129b7a","4e8cc373c801e54cec75daf9f52792cb4b17f536"],"68d031127d4e6ad6d28814a234474b03d6d605cf":["ab5cb6a74aefb78aa0569857970b9151dfe2e787","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"1f653cfcf159baeaafe5d01682a911e95bba4012":["132903c28af3aa6f67284b78de91c0f0a99488c2"],"1a2e46fd1b7cbc52d7d6461a6ef99e7107ae2a9c":["ab9633cb67e3c0aec3c066147a23a957d6e7ad8c"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"05bdab91555bc2728769812fa2e40814e900f661":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","1a2e46fd1b7cbc52d7d6461a6ef99e7107ae2a9c"],"3bb13258feba31ab676502787ab2e1779f129b7a":["ab5cb6a74aefb78aa0569857970b9151dfe2e787"],"4e8cc373c801e54cec75daf9f52792cb4b17f536":["68d031127d4e6ad6d28814a234474b03d6d605cf","3bb13258feba31ab676502787ab2e1779f129b7a"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["05bdab91555bc2728769812fa2e40814e900f661"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["ab5cb6a74aefb78aa0569857970b9151dfe2e787","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}