{"path":"solr/core/src/java/org/apache/solr/search/join/ScoreJoinQParserPlugin#createJoinQuery(Query,String,String,ScoreMode).mjava","commits":[{"id":"c3f827e37672b604f6c8ea8457b0c6ce14528cf3","date":1597148467,"type":1,"author":"Jason Gerlowski","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/join/ScoreJoinQParserPlugin#createJoinQuery(Query,String,String,ScoreMode).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/JoinQParserPlugin#createJoinQuery(Query,String,String).mjava","sourceNew":"  /**\n   * A helper method for other plugins to create single-core JoinQueries\n   *\n   * @param subQuery the query to define the starting set of documents on the \"left side\" of the join\n   * @param fromField \"left side\" field name to use in the join\n   * @param toField \"right side\" field name to use in the join\n   * @param scoreMode the score statistic to produce while joining\n   *\n   * @see JoinQParserPlugin#createJoinQuery(Query, String, String, String)\n   */\n  public static Query createJoinQuery(Query subQuery, String fromField, String toField, ScoreMode scoreMode) {\n    return new SameCoreJoinQuery(subQuery, fromField, toField, scoreMode);\n  }\n\n","sourceOld":"  /**\n   * A helper method for other plugins to create (non-scoring) JoinQueries wrapped around arbitrary queries against the same core.\n   * \n   * @param subQuery the query to define the starting set of documents on the \"left side\" of the join\n   * @param fromField \"left side\" field name to use in the join\n   * @param toField \"right side\" field name to use in the join\n   */\n  public static Query createJoinQuery(Query subQuery, String fromField, String toField) {\n    return new JoinQuery(fromField, toField, null, subQuery);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"c3f827e37672b604f6c8ea8457b0c6ce14528cf3":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["c3f827e37672b604f6c8ea8457b0c6ce14528cf3"]},"commit2Childs":{"c3f827e37672b604f6c8ea8457b0c6ce14528cf3":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c3f827e37672b604f6c8ea8457b0c6ce14528cf3"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}