{"path":"solr/core/src/java/org/apache/solr/servlet/SolrDispatchFilter#loadNodeConfig(Path,Properties).mjava","commits":[{"id":"a626ec4d1c92e59fe390724d6220081047b03ce7","date":1448021525,"type":1,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/servlet/SolrDispatchFilter#loadNodeConfig(Path,Properties).mjava","pathOld":"solr/core/src/java/org/apache/solr/servlet/SolrDispatchFilter#loadNodeConfig(String,Properties).mjava","sourceNew":"  /**\n   * Get the NodeConfig whether stored on disk, in ZooKeeper, etc.\n   * This may also be used by custom filters to load relevant configuration.\n   * @return the NodeConfig\n   */\n  public static NodeConfig loadNodeConfig(Path solrHome, Properties nodeProperties) {\n\n    SolrResourceLoader loader = new SolrResourceLoader(solrHome, null, nodeProperties);\n    if (!StringUtils.isEmpty(System.getProperty(\"solr.solrxml.location\"))) {\n      log.warn(\"Solr property solr.solrxml.location is no longer supported. \" +\n               \"Will automatically load solr.xml from ZooKeeper if it exists\");\n    }\n\n    String zkHost = System.getProperty(\"zkHost\");\n    if (!StringUtils.isEmpty(zkHost)) {\n      try (SolrZkClient zkClient = new SolrZkClient(zkHost, 30000)) {\n        if (zkClient.exists(\"/solr.xml\", true)) {\n          log.info(\"solr.xml found in ZooKeeper. Loading...\");\n          byte[] data = zkClient.getData(\"/solr.xml\", null, null, true);\n          return SolrXmlConfig.fromInputStream(loader, new ByteArrayInputStream(data));\n        }\n      } catch (Exception e) {\n        throw new SolrException(ErrorCode.SERVER_ERROR, \"Error occurred while loading solr.xml from zookeeper\", e);\n      }\n      log.info(\"Loading solr.xml from SolrHome (not found in ZooKeeper)\");\n    }\n    return SolrXmlConfig.fromSolrHome(loader, loader.getInstancePath());\n  }\n\n","sourceOld":"  /**\n   * Get the NodeConfig whether stored on disk, in ZooKeeper, etc.\n   * This may also be used by custom filters to load relevant configuration.\n   * @return the NodeConfig\n   */\n  public static NodeConfig loadNodeConfig(String solrHome, Properties nodeProperties) {\n\n    SolrResourceLoader loader = new SolrResourceLoader(solrHome, null, nodeProperties);\n    if (!StringUtils.isEmpty(System.getProperty(\"solr.solrxml.location\"))) {\n      log.warn(\"Solr property solr.solrxml.location is no longer supported. \" +\n               \"Will automatically load solr.xml from ZooKeeper if it exists\");\n    }\n\n    String zkHost = System.getProperty(\"zkHost\");\n    if (!StringUtils.isEmpty(zkHost)) {\n      try (SolrZkClient zkClient = new SolrZkClient(zkHost, 30000)) {\n        if (zkClient.exists(\"/solr.xml\", true)) {\n          log.info(\"solr.xml found in ZooKeeper. Loading...\");\n          byte[] data = zkClient.getData(\"/solr.xml\", null, null, true);\n          return SolrXmlConfig.fromInputStream(loader, new ByteArrayInputStream(data));\n        }\n      } catch (Exception e) {\n        throw new SolrException(ErrorCode.SERVER_ERROR, \"Error occurred while loading solr.xml from zookeeper\", e);\n      }\n      log.info(\"Loading solr.xml from SolrHome (not found in ZooKeeper)\");\n    }\n    return SolrXmlConfig.fromSolrHome(loader, loader.getInstanceDir());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5a2748831fb25b0e9d5a4c315047bf877c887460","date":1498155650,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/servlet/SolrDispatchFilter#loadNodeConfig(Path,Properties).mjava","pathOld":"solr/core/src/java/org/apache/solr/servlet/SolrDispatchFilter#loadNodeConfig(Path,Properties).mjava","sourceNew":"  /**\n   * Get the NodeConfig whether stored on disk, in ZooKeeper, etc.\n   * This may also be used by custom filters to load relevant configuration.\n   * @return the NodeConfig\n   */\n  public static NodeConfig loadNodeConfig(Path solrHome, Properties nodeProperties) {\n\n    SolrResourceLoader loader = new SolrResourceLoader(solrHome, SolrDispatchFilter.class.getClassLoader(), nodeProperties);\n    if (!StringUtils.isEmpty(System.getProperty(\"solr.solrxml.location\"))) {\n      log.warn(\"Solr property solr.solrxml.location is no longer supported. \" +\n               \"Will automatically load solr.xml from ZooKeeper if it exists\");\n    }\n\n    String zkHost = System.getProperty(\"zkHost\");\n    if (!StringUtils.isEmpty(zkHost)) {\n      try (SolrZkClient zkClient = new SolrZkClient(zkHost, 30000)) {\n        if (zkClient.exists(\"/solr.xml\", true)) {\n          log.info(\"solr.xml found in ZooKeeper. Loading...\");\n          byte[] data = zkClient.getData(\"/solr.xml\", null, null, true);\n          return SolrXmlConfig.fromInputStream(loader, new ByteArrayInputStream(data));\n        }\n      } catch (Exception e) {\n        throw new SolrException(ErrorCode.SERVER_ERROR, \"Error occurred while loading solr.xml from zookeeper\", e);\n      }\n      log.info(\"Loading solr.xml from SolrHome (not found in ZooKeeper)\");\n    }\n    return SolrXmlConfig.fromSolrHome(loader, loader.getInstancePath());\n  }\n\n","sourceOld":"  /**\n   * Get the NodeConfig whether stored on disk, in ZooKeeper, etc.\n   * This may also be used by custom filters to load relevant configuration.\n   * @return the NodeConfig\n   */\n  public static NodeConfig loadNodeConfig(Path solrHome, Properties nodeProperties) {\n\n    SolrResourceLoader loader = new SolrResourceLoader(solrHome, null, nodeProperties);\n    if (!StringUtils.isEmpty(System.getProperty(\"solr.solrxml.location\"))) {\n      log.warn(\"Solr property solr.solrxml.location is no longer supported. \" +\n               \"Will automatically load solr.xml from ZooKeeper if it exists\");\n    }\n\n    String zkHost = System.getProperty(\"zkHost\");\n    if (!StringUtils.isEmpty(zkHost)) {\n      try (SolrZkClient zkClient = new SolrZkClient(zkHost, 30000)) {\n        if (zkClient.exists(\"/solr.xml\", true)) {\n          log.info(\"solr.xml found in ZooKeeper. Loading...\");\n          byte[] data = zkClient.getData(\"/solr.xml\", null, null, true);\n          return SolrXmlConfig.fromInputStream(loader, new ByteArrayInputStream(data));\n        }\n      } catch (Exception e) {\n        throw new SolrException(ErrorCode.SERVER_ERROR, \"Error occurred while loading solr.xml from zookeeper\", e);\n      }\n      log.info(\"Loading solr.xml from SolrHome (not found in ZooKeeper)\");\n    }\n    return SolrXmlConfig.fromSolrHome(loader, loader.getInstancePath());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b7dfa64bc2074fb87d0ca70095a644c1ead107e1","date":1498356339,"type":3,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/servlet/SolrDispatchFilter#loadNodeConfig(Path,Properties).mjava","pathOld":"solr/core/src/java/org/apache/solr/servlet/SolrDispatchFilter#loadNodeConfig(Path,Properties).mjava","sourceNew":"  /**\n   * Get the NodeConfig whether stored on disk, in ZooKeeper, etc.\n   * This may also be used by custom filters to load relevant configuration.\n   * @return the NodeConfig\n   */\n  public static NodeConfig loadNodeConfig(Path solrHome, Properties nodeProperties) {\n\n    SolrResourceLoader loader = new SolrResourceLoader(solrHome, SolrDispatchFilter.class.getClassLoader(), nodeProperties);\n    if (!StringUtils.isEmpty(System.getProperty(\"solr.solrxml.location\"))) {\n      log.warn(\"Solr property solr.solrxml.location is no longer supported. \" +\n               \"Will automatically load solr.xml from ZooKeeper if it exists\");\n    }\n\n    String zkHost = System.getProperty(\"zkHost\");\n    if (!StringUtils.isEmpty(zkHost)) {\n      try (SolrZkClient zkClient = new SolrZkClient(zkHost, 30000)) {\n        if (zkClient.exists(\"/solr.xml\", true)) {\n          log.info(\"solr.xml found in ZooKeeper. Loading...\");\n          byte[] data = zkClient.getData(\"/solr.xml\", null, null, true);\n          return SolrXmlConfig.fromInputStream(loader, new ByteArrayInputStream(data));\n        }\n      } catch (Exception e) {\n        throw new SolrException(ErrorCode.SERVER_ERROR, \"Error occurred while loading solr.xml from zookeeper\", e);\n      }\n      log.info(\"Loading solr.xml from SolrHome (not found in ZooKeeper)\");\n    }\n    return SolrXmlConfig.fromSolrHome(loader, loader.getInstancePath());\n  }\n\n","sourceOld":"  /**\n   * Get the NodeConfig whether stored on disk, in ZooKeeper, etc.\n   * This may also be used by custom filters to load relevant configuration.\n   * @return the NodeConfig\n   */\n  public static NodeConfig loadNodeConfig(Path solrHome, Properties nodeProperties) {\n\n    SolrResourceLoader loader = new SolrResourceLoader(solrHome, null, nodeProperties);\n    if (!StringUtils.isEmpty(System.getProperty(\"solr.solrxml.location\"))) {\n      log.warn(\"Solr property solr.solrxml.location is no longer supported. \" +\n               \"Will automatically load solr.xml from ZooKeeper if it exists\");\n    }\n\n    String zkHost = System.getProperty(\"zkHost\");\n    if (!StringUtils.isEmpty(zkHost)) {\n      try (SolrZkClient zkClient = new SolrZkClient(zkHost, 30000)) {\n        if (zkClient.exists(\"/solr.xml\", true)) {\n          log.info(\"solr.xml found in ZooKeeper. Loading...\");\n          byte[] data = zkClient.getData(\"/solr.xml\", null, null, true);\n          return SolrXmlConfig.fromInputStream(loader, new ByteArrayInputStream(data));\n        }\n      } catch (Exception e) {\n        throw new SolrException(ErrorCode.SERVER_ERROR, \"Error occurred while loading solr.xml from zookeeper\", e);\n      }\n      log.info(\"Loading solr.xml from SolrHome (not found in ZooKeeper)\");\n    }\n    return SolrXmlConfig.fromSolrHome(loader, loader.getInstancePath());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"28288370235ed02234a64753cdbf0c6ec096304a","date":1498726817,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/servlet/SolrDispatchFilter#loadNodeConfig(Path,Properties).mjava","pathOld":"solr/core/src/java/org/apache/solr/servlet/SolrDispatchFilter#loadNodeConfig(Path,Properties).mjava","sourceNew":"  /**\n   * Get the NodeConfig whether stored on disk, in ZooKeeper, etc.\n   * This may also be used by custom filters to load relevant configuration.\n   * @return the NodeConfig\n   */\n  public static NodeConfig loadNodeConfig(Path solrHome, Properties nodeProperties) {\n\n    SolrResourceLoader loader = new SolrResourceLoader(solrHome, SolrDispatchFilter.class.getClassLoader(), nodeProperties);\n    if (!StringUtils.isEmpty(System.getProperty(\"solr.solrxml.location\"))) {\n      log.warn(\"Solr property solr.solrxml.location is no longer supported. \" +\n               \"Will automatically load solr.xml from ZooKeeper if it exists\");\n    }\n\n    String zkHost = System.getProperty(\"zkHost\");\n    if (!StringUtils.isEmpty(zkHost)) {\n      try (SolrZkClient zkClient = new SolrZkClient(zkHost, 30000)) {\n        if (zkClient.exists(\"/solr.xml\", true)) {\n          log.info(\"solr.xml found in ZooKeeper. Loading...\");\n          byte[] data = zkClient.getData(\"/solr.xml\", null, null, true);\n          return SolrXmlConfig.fromInputStream(loader, new ByteArrayInputStream(data));\n        }\n      } catch (Exception e) {\n        throw new SolrException(ErrorCode.SERVER_ERROR, \"Error occurred while loading solr.xml from zookeeper\", e);\n      }\n      log.info(\"Loading solr.xml from SolrHome (not found in ZooKeeper)\");\n    }\n    return SolrXmlConfig.fromSolrHome(loader, loader.getInstancePath());\n  }\n\n","sourceOld":"  /**\n   * Get the NodeConfig whether stored on disk, in ZooKeeper, etc.\n   * This may also be used by custom filters to load relevant configuration.\n   * @return the NodeConfig\n   */\n  public static NodeConfig loadNodeConfig(Path solrHome, Properties nodeProperties) {\n\n    SolrResourceLoader loader = new SolrResourceLoader(solrHome, null, nodeProperties);\n    if (!StringUtils.isEmpty(System.getProperty(\"solr.solrxml.location\"))) {\n      log.warn(\"Solr property solr.solrxml.location is no longer supported. \" +\n               \"Will automatically load solr.xml from ZooKeeper if it exists\");\n    }\n\n    String zkHost = System.getProperty(\"zkHost\");\n    if (!StringUtils.isEmpty(zkHost)) {\n      try (SolrZkClient zkClient = new SolrZkClient(zkHost, 30000)) {\n        if (zkClient.exists(\"/solr.xml\", true)) {\n          log.info(\"solr.xml found in ZooKeeper. Loading...\");\n          byte[] data = zkClient.getData(\"/solr.xml\", null, null, true);\n          return SolrXmlConfig.fromInputStream(loader, new ByteArrayInputStream(data));\n        }\n      } catch (Exception e) {\n        throw new SolrException(ErrorCode.SERVER_ERROR, \"Error occurred while loading solr.xml from zookeeper\", e);\n      }\n      log.info(\"Loading solr.xml from SolrHome (not found in ZooKeeper)\");\n    }\n    return SolrXmlConfig.fromSolrHome(loader, loader.getInstancePath());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a73a633911940a9a6b39b4da22b965b33efe8ed6","date":1503304208,"type":3,"author":"Cao Manh Dat","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/servlet/SolrDispatchFilter#loadNodeConfig(Path,Properties).mjava","pathOld":"solr/core/src/java/org/apache/solr/servlet/SolrDispatchFilter#loadNodeConfig(Path,Properties).mjava","sourceNew":"  /**\n   * Get the NodeConfig whether stored on disk, in ZooKeeper, etc.\n   * This may also be used by custom filters to load relevant configuration.\n   * @return the NodeConfig\n   */\n  public static NodeConfig loadNodeConfig(Path solrHome, Properties nodeProperties) {\n\n    SolrResourceLoader loader = new SolrResourceLoader(solrHome, SolrDispatchFilter.class.getClassLoader(), nodeProperties);\n    if (!StringUtils.isEmpty(System.getProperty(\"solr.solrxml.location\"))) {\n      log.warn(\"Solr property solr.solrxml.location is no longer supported. \" +\n               \"Will automatically load solr.xml from ZooKeeper if it exists\");\n    }\n\n    String zkHost = System.getProperty(\"zkHost\");\n    if (!StringUtils.isEmpty(zkHost)) {\n      int startUpZkTimeOut = Integer.getInteger(\"waitForZk\", 30);\n      startUpZkTimeOut *= 1000;\n      try (SolrZkClient zkClient = new SolrZkClient(zkHost, startUpZkTimeOut)) {\n        if (zkClient.exists(\"/solr.xml\", true)) {\n          log.info(\"solr.xml found in ZooKeeper. Loading...\");\n          byte[] data = zkClient.getData(\"/solr.xml\", null, null, true);\n          return SolrXmlConfig.fromInputStream(loader, new ByteArrayInputStream(data));\n        }\n      } catch (Exception e) {\n        throw new SolrException(ErrorCode.SERVER_ERROR, \"Error occurred while loading solr.xml from zookeeper\", e);\n      }\n      log.info(\"Loading solr.xml from SolrHome (not found in ZooKeeper)\");\n    }\n    return SolrXmlConfig.fromSolrHome(loader, loader.getInstancePath());\n  }\n\n","sourceOld":"  /**\n   * Get the NodeConfig whether stored on disk, in ZooKeeper, etc.\n   * This may also be used by custom filters to load relevant configuration.\n   * @return the NodeConfig\n   */\n  public static NodeConfig loadNodeConfig(Path solrHome, Properties nodeProperties) {\n\n    SolrResourceLoader loader = new SolrResourceLoader(solrHome, SolrDispatchFilter.class.getClassLoader(), nodeProperties);\n    if (!StringUtils.isEmpty(System.getProperty(\"solr.solrxml.location\"))) {\n      log.warn(\"Solr property solr.solrxml.location is no longer supported. \" +\n               \"Will automatically load solr.xml from ZooKeeper if it exists\");\n    }\n\n    String zkHost = System.getProperty(\"zkHost\");\n    if (!StringUtils.isEmpty(zkHost)) {\n      try (SolrZkClient zkClient = new SolrZkClient(zkHost, 30000)) {\n        if (zkClient.exists(\"/solr.xml\", true)) {\n          log.info(\"solr.xml found in ZooKeeper. Loading...\");\n          byte[] data = zkClient.getData(\"/solr.xml\", null, null, true);\n          return SolrXmlConfig.fromInputStream(loader, new ByteArrayInputStream(data));\n        }\n      } catch (Exception e) {\n        throw new SolrException(ErrorCode.SERVER_ERROR, \"Error occurred while loading solr.xml from zookeeper\", e);\n      }\n      log.info(\"Loading solr.xml from SolrHome (not found in ZooKeeper)\");\n    }\n    return SolrXmlConfig.fromSolrHome(loader, loader.getInstancePath());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3a7809d1d753b67f48b1a706e17034bf8b624ea3","date":1504366927,"type":3,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/servlet/SolrDispatchFilter#loadNodeConfig(Path,Properties).mjava","pathOld":"solr/core/src/java/org/apache/solr/servlet/SolrDispatchFilter#loadNodeConfig(Path,Properties).mjava","sourceNew":"  /**\n   * Get the NodeConfig whether stored on disk, in ZooKeeper, etc.\n   * This may also be used by custom filters to load relevant configuration.\n   * @return the NodeConfig\n   */\n  public static NodeConfig loadNodeConfig(Path solrHome, Properties nodeProperties) {\n\n    SolrResourceLoader loader = new SolrResourceLoader(solrHome, SolrDispatchFilter.class.getClassLoader(), nodeProperties);\n    if (!StringUtils.isEmpty(System.getProperty(\"solr.solrxml.location\"))) {\n      log.warn(\"Solr property solr.solrxml.location is no longer supported. \" +\n               \"Will automatically load solr.xml from ZooKeeper if it exists\");\n    }\n\n    String zkHost = System.getProperty(\"zkHost\");\n    if (!StringUtils.isEmpty(zkHost)) {\n      int startUpZkTimeOut = Integer.getInteger(\"waitForZk\", 30);\n      startUpZkTimeOut *= 1000;\n      try (SolrZkClient zkClient = new SolrZkClient(zkHost, startUpZkTimeOut)) {\n        if (zkClient.exists(\"/solr.xml\", true)) {\n          log.info(\"solr.xml found in ZooKeeper. Loading...\");\n          byte[] data = zkClient.getData(\"/solr.xml\", null, null, true);\n          return SolrXmlConfig.fromInputStream(loader, new ByteArrayInputStream(data));\n        }\n      } catch (Exception e) {\n        throw new SolrException(ErrorCode.SERVER_ERROR, \"Error occurred while loading solr.xml from zookeeper\", e);\n      }\n      log.info(\"Loading solr.xml from SolrHome (not found in ZooKeeper)\");\n    }\n    return SolrXmlConfig.fromSolrHome(loader, loader.getInstancePath());\n  }\n\n","sourceOld":"  /**\n   * Get the NodeConfig whether stored on disk, in ZooKeeper, etc.\n   * This may also be used by custom filters to load relevant configuration.\n   * @return the NodeConfig\n   */\n  public static NodeConfig loadNodeConfig(Path solrHome, Properties nodeProperties) {\n\n    SolrResourceLoader loader = new SolrResourceLoader(solrHome, SolrDispatchFilter.class.getClassLoader(), nodeProperties);\n    if (!StringUtils.isEmpty(System.getProperty(\"solr.solrxml.location\"))) {\n      log.warn(\"Solr property solr.solrxml.location is no longer supported. \" +\n               \"Will automatically load solr.xml from ZooKeeper if it exists\");\n    }\n\n    String zkHost = System.getProperty(\"zkHost\");\n    if (!StringUtils.isEmpty(zkHost)) {\n      try (SolrZkClient zkClient = new SolrZkClient(zkHost, 30000)) {\n        if (zkClient.exists(\"/solr.xml\", true)) {\n          log.info(\"solr.xml found in ZooKeeper. Loading...\");\n          byte[] data = zkClient.getData(\"/solr.xml\", null, null, true);\n          return SolrXmlConfig.fromInputStream(loader, new ByteArrayInputStream(data));\n        }\n      } catch (Exception e) {\n        throw new SolrException(ErrorCode.SERVER_ERROR, \"Error occurred while loading solr.xml from zookeeper\", e);\n      }\n      log.info(\"Loading solr.xml from SolrHome (not found in ZooKeeper)\");\n    }\n    return SolrXmlConfig.fromSolrHome(loader, loader.getInstancePath());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f15af35d55d70c34451f9df5edeaeff6b31f8cbe","date":1519625627,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/servlet/SolrDispatchFilter#loadNodeConfig(Path,Properties).mjava","pathOld":"solr/core/src/java/org/apache/solr/servlet/SolrDispatchFilter#loadNodeConfig(Path,Properties).mjava","sourceNew":"  /**\n   * Get the NodeConfig whether stored on disk, in ZooKeeper, etc.\n   * This may also be used by custom filters to load relevant configuration.\n   * @return the NodeConfig\n   */\n  public static NodeConfig loadNodeConfig(Path solrHome, Properties nodeProperties) {\n    NodeConfig cfg = null;\n    try (SolrResourceLoader loader = new SolrResourceLoader(solrHome, SolrDispatchFilter.class.getClassLoader(), nodeProperties)) {\n      if (!StringUtils.isEmpty(System.getProperty(\"solr.solrxml.location\"))) {\n        log.warn(\"Solr property solr.solrxml.location is no longer supported. \" +\n            \"Will automatically load solr.xml from ZooKeeper if it exists\");\n      }\n\n      String zkHost = System.getProperty(\"zkHost\");\n      if (!StringUtils.isEmpty(zkHost)) {\n        int startUpZkTimeOut = Integer.getInteger(\"waitForZk\", 30);\n        startUpZkTimeOut *= 1000;\n        try (SolrZkClient zkClient = new SolrZkClient(zkHost, startUpZkTimeOut)) {\n          if (zkClient.exists(\"/solr.xml\", true)) {\n            log.info(\"solr.xml found in ZooKeeper. Loading...\");\n            byte[] data = zkClient.getData(\"/solr.xml\", null, null, true);\n            return SolrXmlConfig.fromInputStream(loader, new ByteArrayInputStream(data));\n          }\n        } catch (Exception e) {\n          throw new SolrException(ErrorCode.SERVER_ERROR, \"Error occurred while loading solr.xml from zookeeper\", e);\n        }\n        log.info(\"Loading solr.xml from SolrHome (not found in ZooKeeper)\");\n      }\n      cfg = SolrXmlConfig.fromSolrHome(loader, loader.getInstancePath());\n    } catch (IOException e) {\n      // do nothing.\n    }\n    return cfg;\n  }\n\n","sourceOld":"  /**\n   * Get the NodeConfig whether stored on disk, in ZooKeeper, etc.\n   * This may also be used by custom filters to load relevant configuration.\n   * @return the NodeConfig\n   */\n  public static NodeConfig loadNodeConfig(Path solrHome, Properties nodeProperties) {\n\n    SolrResourceLoader loader = new SolrResourceLoader(solrHome, SolrDispatchFilter.class.getClassLoader(), nodeProperties);\n    if (!StringUtils.isEmpty(System.getProperty(\"solr.solrxml.location\"))) {\n      log.warn(\"Solr property solr.solrxml.location is no longer supported. \" +\n               \"Will automatically load solr.xml from ZooKeeper if it exists\");\n    }\n\n    String zkHost = System.getProperty(\"zkHost\");\n    if (!StringUtils.isEmpty(zkHost)) {\n      int startUpZkTimeOut = Integer.getInteger(\"waitForZk\", 30);\n      startUpZkTimeOut *= 1000;\n      try (SolrZkClient zkClient = new SolrZkClient(zkHost, startUpZkTimeOut)) {\n        if (zkClient.exists(\"/solr.xml\", true)) {\n          log.info(\"solr.xml found in ZooKeeper. Loading...\");\n          byte[] data = zkClient.getData(\"/solr.xml\", null, null, true);\n          return SolrXmlConfig.fromInputStream(loader, new ByteArrayInputStream(data));\n        }\n      } catch (Exception e) {\n        throw new SolrException(ErrorCode.SERVER_ERROR, \"Error occurred while loading solr.xml from zookeeper\", e);\n      }\n      log.info(\"Loading solr.xml from SolrHome (not found in ZooKeeper)\");\n    }\n    return SolrXmlConfig.fromSolrHome(loader, loader.getInstancePath());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ec5a4e4c455009870c1cb8d21cf6671b8b78d3e3","date":1583932828,"type":3,"author":"David Smiley","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/servlet/SolrDispatchFilter#loadNodeConfig(Path,Properties).mjava","pathOld":"solr/core/src/java/org/apache/solr/servlet/SolrDispatchFilter#loadNodeConfig(Path,Properties).mjava","sourceNew":"  /**\n   * Get the NodeConfig whether stored on disk, in ZooKeeper, etc.\n   * This may also be used by custom filters to load relevant configuration.\n   * @return the NodeConfig\n   */\n  public static NodeConfig loadNodeConfig(Path solrHome, Properties nodeProperties) {\n    if (!StringUtils.isEmpty(System.getProperty(\"solr.solrxml.location\"))) {\n      log.warn(\"Solr property solr.solrxml.location is no longer supported. \" +\n          \"Will automatically load solr.xml from ZooKeeper if it exists\");\n    }\n\n    String zkHost = System.getProperty(\"zkHost\");\n    if (!StringUtils.isEmpty(zkHost)) {\n      int startUpZkTimeOut = Integer.getInteger(\"waitForZk\", 30);\n      startUpZkTimeOut *= 1000;\n      try (SolrZkClient zkClient = new SolrZkClient(zkHost, startUpZkTimeOut)) {\n        if (zkClient.exists(\"/solr.xml\", true)) {\n          log.info(\"solr.xml found in ZooKeeper. Loading...\");\n          byte[] data = zkClient.getData(\"/solr.xml\", null, null, true);\n          return SolrXmlConfig.fromInputStream(solrHome, new ByteArrayInputStream(data), nodeProperties);\n        }\n      } catch (Exception e) {\n        throw new SolrException(ErrorCode.SERVER_ERROR, \"Error occurred while loading solr.xml from zookeeper\", e);\n      }\n      log.info(\"Loading solr.xml from SolrHome (not found in ZooKeeper)\");\n    }\n\n    return SolrXmlConfig.fromSolrHome(solrHome, nodeProperties);\n  }\n\n","sourceOld":"  /**\n   * Get the NodeConfig whether stored on disk, in ZooKeeper, etc.\n   * This may also be used by custom filters to load relevant configuration.\n   * @return the NodeConfig\n   */\n  public static NodeConfig loadNodeConfig(Path solrHome, Properties nodeProperties) {\n    NodeConfig cfg = null;\n    try (SolrResourceLoader loader = new SolrResourceLoader(solrHome, SolrDispatchFilter.class.getClassLoader(), nodeProperties)) {\n      if (!StringUtils.isEmpty(System.getProperty(\"solr.solrxml.location\"))) {\n        log.warn(\"Solr property solr.solrxml.location is no longer supported. \" +\n            \"Will automatically load solr.xml from ZooKeeper if it exists\");\n      }\n\n      String zkHost = System.getProperty(\"zkHost\");\n      if (!StringUtils.isEmpty(zkHost)) {\n        int startUpZkTimeOut = Integer.getInteger(\"waitForZk\", 30);\n        startUpZkTimeOut *= 1000;\n        try (SolrZkClient zkClient = new SolrZkClient(zkHost, startUpZkTimeOut)) {\n          if (zkClient.exists(\"/solr.xml\", true)) {\n            log.info(\"solr.xml found in ZooKeeper. Loading...\");\n            byte[] data = zkClient.getData(\"/solr.xml\", null, null, true);\n            return SolrXmlConfig.fromInputStream(loader, new ByteArrayInputStream(data));\n          }\n        } catch (Exception e) {\n          throw new SolrException(ErrorCode.SERVER_ERROR, \"Error occurred while loading solr.xml from zookeeper\", e);\n        }\n        log.info(\"Loading solr.xml from SolrHome (not found in ZooKeeper)\");\n      }\n      cfg = SolrXmlConfig.fromSolrHome(loader, loader.getInstancePath());\n    } catch (IOException e) {\n      // do nothing.\n    }\n    return cfg;\n  }\n\n","bugFix":null,"bugIntro":["1c588f16cab976d98d9c0f04dbc6b8cdd8c9d936"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"ff4ad7cb63f081454a1fa1e599d1cac95034f0b8","date":1584125777,"type":3,"author":"Mike","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/servlet/SolrDispatchFilter#loadNodeConfig(Path,Properties).mjava","pathOld":"solr/core/src/java/org/apache/solr/servlet/SolrDispatchFilter#loadNodeConfig(Path,Properties).mjava","sourceNew":"  /**\n   * Get the NodeConfig whether stored on disk, in ZooKeeper, etc.\n   * This may also be used by custom filters to load relevant configuration.\n   * @return the NodeConfig\n   */\n  public static NodeConfig loadNodeConfig(Path solrHome, Properties nodeProperties) {\n    if (!StringUtils.isEmpty(System.getProperty(\"solr.solrxml.location\"))) {\n      log.warn(\"Solr property solr.solrxml.location is no longer supported. \" +\n          \"Will automatically load solr.xml from ZooKeeper if it exists\");\n    }\n\n    String zkHost = System.getProperty(\"zkHost\");\n    if (!StringUtils.isEmpty(zkHost)) {\n      int startUpZkTimeOut = Integer.getInteger(\"waitForZk\", 30);\n      startUpZkTimeOut *= 1000;\n      try (SolrZkClient zkClient = new SolrZkClient(zkHost, startUpZkTimeOut)) {\n        if (zkClient.exists(\"/solr.xml\", true)) {\n          log.info(\"solr.xml found in ZooKeeper. Loading...\");\n          byte[] data = zkClient.getData(\"/solr.xml\", null, null, true);\n          return SolrXmlConfig.fromInputStream(solrHome, new ByteArrayInputStream(data), nodeProperties, true);\n        }\n      } catch (Exception e) {\n        throw new SolrException(ErrorCode.SERVER_ERROR, \"Error occurred while loading solr.xml from zookeeper\", e);\n      }\n      log.info(\"Loading solr.xml from SolrHome (not found in ZooKeeper)\");\n    }\n\n    return SolrXmlConfig.fromSolrHome(solrHome, nodeProperties);\n  }\n\n","sourceOld":"  /**\n   * Get the NodeConfig whether stored on disk, in ZooKeeper, etc.\n   * This may also be used by custom filters to load relevant configuration.\n   * @return the NodeConfig\n   */\n  public static NodeConfig loadNodeConfig(Path solrHome, Properties nodeProperties) {\n    if (!StringUtils.isEmpty(System.getProperty(\"solr.solrxml.location\"))) {\n      log.warn(\"Solr property solr.solrxml.location is no longer supported. \" +\n          \"Will automatically load solr.xml from ZooKeeper if it exists\");\n    }\n\n    String zkHost = System.getProperty(\"zkHost\");\n    if (!StringUtils.isEmpty(zkHost)) {\n      int startUpZkTimeOut = Integer.getInteger(\"waitForZk\", 30);\n      startUpZkTimeOut *= 1000;\n      try (SolrZkClient zkClient = new SolrZkClient(zkHost, startUpZkTimeOut)) {\n        if (zkClient.exists(\"/solr.xml\", true)) {\n          log.info(\"solr.xml found in ZooKeeper. Loading...\");\n          byte[] data = zkClient.getData(\"/solr.xml\", null, null, true);\n          return SolrXmlConfig.fromInputStream(solrHome, new ByteArrayInputStream(data), nodeProperties);\n        }\n      } catch (Exception e) {\n        throw new SolrException(ErrorCode.SERVER_ERROR, \"Error occurred while loading solr.xml from zookeeper\", e);\n      }\n      log.info(\"Loading solr.xml from SolrHome (not found in ZooKeeper)\");\n    }\n\n    return SolrXmlConfig.fromSolrHome(solrHome, nodeProperties);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"54faedfb0e03479a38f5ee82f2dfaeea536e9404","date":1587251295,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/servlet/SolrDispatchFilter#loadNodeConfig(Path,Properties).mjava","pathOld":"solr/core/src/java/org/apache/solr/servlet/SolrDispatchFilter#loadNodeConfig(Path,Properties).mjava","sourceNew":"  /**\n   * Get the NodeConfig whether stored on disk, in ZooKeeper, etc.\n   * This may also be used by custom filters to load relevant configuration.\n   * @return the NodeConfig\n   */\n  public static NodeConfig loadNodeConfig(Path solrHome, Properties nodeProperties) {\n    if (!StringUtils.isEmpty(System.getProperty(\"solr.solrxml.location\"))) {\n      log.warn(\"Solr property solr.solrxml.location is no longer supported. Will automatically load solr.xml from ZooKeeper if it exists\");\n    }\n\n    String zkHost = System.getProperty(\"zkHost\");\n    if (!StringUtils.isEmpty(zkHost)) {\n      int startUpZkTimeOut = Integer.getInteger(\"waitForZk\", 30);\n      startUpZkTimeOut *= 1000;\n      try (SolrZkClient zkClient = new SolrZkClient(zkHost, startUpZkTimeOut)) {\n        if (zkClient.exists(\"/solr.xml\", true)) {\n          log.info(\"solr.xml found in ZooKeeper. Loading...\");\n          byte[] data = zkClient.getData(\"/solr.xml\", null, null, true);\n          return SolrXmlConfig.fromInputStream(solrHome, new ByteArrayInputStream(data), nodeProperties, true);\n        }\n      } catch (Exception e) {\n        throw new SolrException(ErrorCode.SERVER_ERROR, \"Error occurred while loading solr.xml from zookeeper\", e);\n      }\n      log.info(\"Loading solr.xml from SolrHome (not found in ZooKeeper)\");\n    }\n\n    return SolrXmlConfig.fromSolrHome(solrHome, nodeProperties);\n  }\n\n","sourceOld":"  /**\n   * Get the NodeConfig whether stored on disk, in ZooKeeper, etc.\n   * This may also be used by custom filters to load relevant configuration.\n   * @return the NodeConfig\n   */\n  public static NodeConfig loadNodeConfig(Path solrHome, Properties nodeProperties) {\n    if (!StringUtils.isEmpty(System.getProperty(\"solr.solrxml.location\"))) {\n      log.warn(\"Solr property solr.solrxml.location is no longer supported. \" +\n          \"Will automatically load solr.xml from ZooKeeper if it exists\");\n    }\n\n    String zkHost = System.getProperty(\"zkHost\");\n    if (!StringUtils.isEmpty(zkHost)) {\n      int startUpZkTimeOut = Integer.getInteger(\"waitForZk\", 30);\n      startUpZkTimeOut *= 1000;\n      try (SolrZkClient zkClient = new SolrZkClient(zkHost, startUpZkTimeOut)) {\n        if (zkClient.exists(\"/solr.xml\", true)) {\n          log.info(\"solr.xml found in ZooKeeper. Loading...\");\n          byte[] data = zkClient.getData(\"/solr.xml\", null, null, true);\n          return SolrXmlConfig.fromInputStream(solrHome, new ByteArrayInputStream(data), nodeProperties, true);\n        }\n      } catch (Exception e) {\n        throw new SolrException(ErrorCode.SERVER_ERROR, \"Error occurred while loading solr.xml from zookeeper\", e);\n      }\n      log.info(\"Loading solr.xml from SolrHome (not found in ZooKeeper)\");\n    }\n\n    return SolrXmlConfig.fromSolrHome(solrHome, nodeProperties);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"1c588f16cab976d98d9c0f04dbc6b8cdd8c9d936","date":1600966684,"type":3,"author":"Munendra S N","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/servlet/SolrDispatchFilter#loadNodeConfig(Path,Properties).mjava","pathOld":"solr/core/src/java/org/apache/solr/servlet/SolrDispatchFilter#loadNodeConfig(Path,Properties).mjava","sourceNew":"  /**\n   * Get the NodeConfig whether stored on disk, in ZooKeeper, etc.\n   * This may also be used by custom filters to load relevant configuration.\n   * @return the NodeConfig\n   */\n  public static NodeConfig loadNodeConfig(Path solrHome, Properties nodeProperties) {\n    if (!StringUtils.isEmpty(System.getProperty(\"solr.solrxml.location\"))) {\n      log.warn(\"Solr property solr.solrxml.location is no longer supported. Will automatically load solr.xml from ZooKeeper if it exists\");\n    }\n\n    String zkHost = System.getProperty(\"zkHost\");\n    if (!StringUtils.isEmpty(zkHost)) {\n      int startUpZkTimeOut = Integer.getInteger(\"waitForZk\", 30);\n      startUpZkTimeOut *= 1000;\n      try (SolrZkClient zkClient = new SolrZkClient(zkHost, startUpZkTimeOut, startUpZkTimeOut)) {\n        if (zkClient.exists(\"/solr.xml\", true)) {\n          log.info(\"solr.xml found in ZooKeeper. Loading...\");\n          byte[] data = zkClient.getData(\"/solr.xml\", null, null, true);\n          return SolrXmlConfig.fromInputStream(solrHome, new ByteArrayInputStream(data), nodeProperties, true);\n        }\n      } catch (Exception e) {\n        throw new SolrException(ErrorCode.SERVER_ERROR, \"Error occurred while loading solr.xml from zookeeper\", e);\n      }\n      log.info(\"Loading solr.xml from SolrHome (not found in ZooKeeper)\");\n    }\n\n    return SolrXmlConfig.fromSolrHome(solrHome, nodeProperties);\n  }\n\n","sourceOld":"  /**\n   * Get the NodeConfig whether stored on disk, in ZooKeeper, etc.\n   * This may also be used by custom filters to load relevant configuration.\n   * @return the NodeConfig\n   */\n  public static NodeConfig loadNodeConfig(Path solrHome, Properties nodeProperties) {\n    if (!StringUtils.isEmpty(System.getProperty(\"solr.solrxml.location\"))) {\n      log.warn(\"Solr property solr.solrxml.location is no longer supported. Will automatically load solr.xml from ZooKeeper if it exists\");\n    }\n\n    String zkHost = System.getProperty(\"zkHost\");\n    if (!StringUtils.isEmpty(zkHost)) {\n      int startUpZkTimeOut = Integer.getInteger(\"waitForZk\", 30);\n      startUpZkTimeOut *= 1000;\n      try (SolrZkClient zkClient = new SolrZkClient(zkHost, startUpZkTimeOut)) {\n        if (zkClient.exists(\"/solr.xml\", true)) {\n          log.info(\"solr.xml found in ZooKeeper. Loading...\");\n          byte[] data = zkClient.getData(\"/solr.xml\", null, null, true);\n          return SolrXmlConfig.fromInputStream(solrHome, new ByteArrayInputStream(data), nodeProperties, true);\n        }\n      } catch (Exception e) {\n        throw new SolrException(ErrorCode.SERVER_ERROR, \"Error occurred while loading solr.xml from zookeeper\", e);\n      }\n      log.info(\"Loading solr.xml from SolrHome (not found in ZooKeeper)\");\n    }\n\n    return SolrXmlConfig.fromSolrHome(solrHome, nodeProperties);\n  }\n\n","bugFix":["ec5a4e4c455009870c1cb8d21cf6671b8b78d3e3"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"ff4ad7cb63f081454a1fa1e599d1cac95034f0b8":["ec5a4e4c455009870c1cb8d21cf6671b8b78d3e3"],"a73a633911940a9a6b39b4da22b965b33efe8ed6":["28288370235ed02234a64753cdbf0c6ec096304a"],"b7dfa64bc2074fb87d0ca70095a644c1ead107e1":["a626ec4d1c92e59fe390724d6220081047b03ce7","5a2748831fb25b0e9d5a4c315047bf877c887460"],"28288370235ed02234a64753cdbf0c6ec096304a":["a626ec4d1c92e59fe390724d6220081047b03ce7","5a2748831fb25b0e9d5a4c315047bf877c887460"],"54faedfb0e03479a38f5ee82f2dfaeea536e9404":["ff4ad7cb63f081454a1fa1e599d1cac95034f0b8"],"ec5a4e4c455009870c1cb8d21cf6671b8b78d3e3":["f15af35d55d70c34451f9df5edeaeff6b31f8cbe"],"a626ec4d1c92e59fe390724d6220081047b03ce7":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"3a7809d1d753b67f48b1a706e17034bf8b624ea3":["b7dfa64bc2074fb87d0ca70095a644c1ead107e1","a73a633911940a9a6b39b4da22b965b33efe8ed6"],"5a2748831fb25b0e9d5a4c315047bf877c887460":["a626ec4d1c92e59fe390724d6220081047b03ce7"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"f15af35d55d70c34451f9df5edeaeff6b31f8cbe":["a73a633911940a9a6b39b4da22b965b33efe8ed6"],"1c588f16cab976d98d9c0f04dbc6b8cdd8c9d936":["54faedfb0e03479a38f5ee82f2dfaeea536e9404"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["1c588f16cab976d98d9c0f04dbc6b8cdd8c9d936"]},"commit2Childs":{"ff4ad7cb63f081454a1fa1e599d1cac95034f0b8":["54faedfb0e03479a38f5ee82f2dfaeea536e9404"],"a73a633911940a9a6b39b4da22b965b33efe8ed6":["3a7809d1d753b67f48b1a706e17034bf8b624ea3","f15af35d55d70c34451f9df5edeaeff6b31f8cbe"],"b7dfa64bc2074fb87d0ca70095a644c1ead107e1":["3a7809d1d753b67f48b1a706e17034bf8b624ea3"],"28288370235ed02234a64753cdbf0c6ec096304a":["a73a633911940a9a6b39b4da22b965b33efe8ed6"],"ec5a4e4c455009870c1cb8d21cf6671b8b78d3e3":["ff4ad7cb63f081454a1fa1e599d1cac95034f0b8"],"54faedfb0e03479a38f5ee82f2dfaeea536e9404":["1c588f16cab976d98d9c0f04dbc6b8cdd8c9d936"],"a626ec4d1c92e59fe390724d6220081047b03ce7":["b7dfa64bc2074fb87d0ca70095a644c1ead107e1","28288370235ed02234a64753cdbf0c6ec096304a","5a2748831fb25b0e9d5a4c315047bf877c887460"],"3a7809d1d753b67f48b1a706e17034bf8b624ea3":[],"5a2748831fb25b0e9d5a4c315047bf877c887460":["b7dfa64bc2074fb87d0ca70095a644c1ead107e1","28288370235ed02234a64753cdbf0c6ec096304a"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["a626ec4d1c92e59fe390724d6220081047b03ce7"],"f15af35d55d70c34451f9df5edeaeff6b31f8cbe":["ec5a4e4c455009870c1cb8d21cf6671b8b78d3e3"],"1c588f16cab976d98d9c0f04dbc6b8cdd8c9d936":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["3a7809d1d753b67f48b1a706e17034bf8b624ea3","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}