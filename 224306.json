{"path":"lucene/codecs/src/java/org/apache/lucene/codecs/BlockTermsReader.FieldReader#FieldReader(FieldInfo,long,long,long,long,int).mjava","commits":[{"id":"3e45d45bc3730ddd1341f4eb6025f33b8482e6e2","date":1346834651,"type":1,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/codecs/src/java/org/apache/lucene/codecs/BlockTermsReader.FieldReader#FieldReader(FieldInfo,long,long,long,long,int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/BlockTermsReader.FieldReader#FieldReader(FieldInfo,long,long,long,long,int).mjava","sourceNew":"    FieldReader(FieldInfo fieldInfo, long numTerms, long termsStartPointer, long sumTotalTermFreq, long sumDocFreq, int docCount) {\n      assert numTerms > 0;\n      this.fieldInfo = fieldInfo;\n      this.numTerms = numTerms;\n      this.termsStartPointer = termsStartPointer;\n      this.sumTotalTermFreq = sumTotalTermFreq;\n      this.sumDocFreq = sumDocFreq;\n      this.docCount = docCount;\n    }\n\n","sourceOld":"    FieldReader(FieldInfo fieldInfo, long numTerms, long termsStartPointer, long sumTotalTermFreq, long sumDocFreq, int docCount) {\n      assert numTerms > 0;\n      this.fieldInfo = fieldInfo;\n      this.numTerms = numTerms;\n      this.termsStartPointer = termsStartPointer;\n      this.sumTotalTermFreq = sumTotalTermFreq;\n      this.sumDocFreq = sumDocFreq;\n      this.docCount = docCount;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"038e2a9b07e2f8ae58336613cea227bf8b973484","date":1346850972,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/codecs/src/java/org/apache/lucene/codecs/blockterms/BlockTermsReader.FieldReader#FieldReader(FieldInfo,long,long,long,long,int).mjava","pathOld":"lucene/codecs/src/java/org/apache/lucene/codecs/BlockTermsReader.FieldReader#FieldReader(FieldInfo,long,long,long,long,int).mjava","sourceNew":"    FieldReader(FieldInfo fieldInfo, long numTerms, long termsStartPointer, long sumTotalTermFreq, long sumDocFreq, int docCount) {\n      assert numTerms > 0;\n      this.fieldInfo = fieldInfo;\n      this.numTerms = numTerms;\n      this.termsStartPointer = termsStartPointer;\n      this.sumTotalTermFreq = sumTotalTermFreq;\n      this.sumDocFreq = sumDocFreq;\n      this.docCount = docCount;\n    }\n\n","sourceOld":"    FieldReader(FieldInfo fieldInfo, long numTerms, long termsStartPointer, long sumTotalTermFreq, long sumDocFreq, int docCount) {\n      assert numTerms > 0;\n      this.fieldInfo = fieldInfo;\n      this.numTerms = numTerms;\n      this.termsStartPointer = termsStartPointer;\n      this.sumTotalTermFreq = sumTotalTermFreq;\n      this.sumDocFreq = sumDocFreq;\n      this.docCount = docCount;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3e45d45bc3730ddd1341f4eb6025f33b8482e6e2":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["038e2a9b07e2f8ae58336613cea227bf8b973484"],"038e2a9b07e2f8ae58336613cea227bf8b973484":["3e45d45bc3730ddd1341f4eb6025f33b8482e6e2"]},"commit2Childs":{"3e45d45bc3730ddd1341f4eb6025f33b8482e6e2":["038e2a9b07e2f8ae58336613cea227bf8b973484"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3e45d45bc3730ddd1341f4eb6025f33b8482e6e2"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"038e2a9b07e2f8ae58336613cea227bf8b973484":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}