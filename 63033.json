{"path":"lucene/core/src/java/org/apache/lucene/index/IndexWriter#finishApply(BufferedUpdatesStream.SegmentState[],boolean,Set[String]).mjava","commits":[{"id":"9f21f1920c232db2352489eed260fe5c1f39e5a0","date":1587748041,"type":1,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/IndexWriter#finishApply(BufferedUpdatesStream.SegmentState[],boolean,Set[String]).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/FrozenBufferedUpdates#finishApply(IndexWriter,BufferedUpdatesStream.SegmentState[],boolean,Set[String]).mjava","sourceNew":"  private void finishApply(BufferedUpdatesStream.SegmentState[] segStates,\n                           boolean success, Set<String> delFiles) throws IOException {\n    synchronized (this) {\n\n      BufferedUpdatesStream.ApplyDeletesResult result;\n      try {\n        result = closeSegmentStates(segStates, success);\n      } finally {\n        // Matches the incRef we did above, but we must do the decRef after closing segment states else\n        // IFD can't delete still-open files\n        deleter.decRef(delFiles);\n      }\n\n      if (result.anyDeletes) {\n        maybeMerge.set(true);\n        checkpoint();\n      }\n\n      if (result.allDeleted != null) {\n        if (infoStream.isEnabled(\"IW\")) {\n          infoStream.message(\"IW\", \"drop 100% deleted segments: \" + segString(result.allDeleted));\n        }\n        for (SegmentCommitInfo info : result.allDeleted) {\n          dropDeletedSegment(info);\n        }\n        checkpoint();\n      }\n    }\n  }\n\n","sourceOld":"  private void finishApply(IndexWriter writer, BufferedUpdatesStream.SegmentState[] segStates,\n                           boolean success, Set<String> delFiles) throws IOException {\n    assert applyLock.isHeldByCurrentThread();\n    synchronized (writer) {\n\n      BufferedUpdatesStream.ApplyDeletesResult result;\n      try {\n        result = closeSegmentStates(writer, segStates, success);\n      } finally {\n        // Matches the incRef we did above, but we must do the decRef after closing segment states else\n        // IFD can't delete still-open files\n        writer.deleter.decRef(delFiles);\n      }\n\n      if (result.anyDeletes) {\n          writer.maybeMerge.set(true);\n          writer.checkpoint();\n      }\n\n      if (result.allDeleted != null) {\n        if (infoStream.isEnabled(\"IW\")) {\n          infoStream.message(\"IW\", \"drop 100% deleted segments: \" + writer.segString(result.allDeleted));\n        }\n        for (SegmentCommitInfo info : result.allDeleted) {\n          writer.dropDeletedSegment(info);\n        }\n        writer.checkpoint();\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"9f21f1920c232db2352489eed260fe5c1f39e5a0":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9f21f1920c232db2352489eed260fe5c1f39e5a0"]},"commit2Childs":{"9f21f1920c232db2352489eed260fe5c1f39e5a0":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9f21f1920c232db2352489eed260fe5c1f39e5a0"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}