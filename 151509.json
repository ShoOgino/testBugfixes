{"path":"solr/core/src/test/org/apache/solr/cloud/autoscaling/sim/SimCloudManager#close().mjava","commits":[{"id":"1d4bf9d5308dfef350829c28f2b3b2648df1e9b1","date":1513252583,"type":0,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/autoscaling/sim/SimCloudManager#close().mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public void close() throws IOException {\n    IOUtils.closeQuietly(clusterStateProvider);\n    IOUtils.closeQuietly(nodeStateProvider);\n    IOUtils.closeQuietly(stateManager);\n    triggerThread.interrupt();\n    IOUtils.closeQuietly(triggerThread);\n    IOUtils.closeQuietly(objectCache);\n    simCloudManagerPool.shutdownNow();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4181b4cf0450ea3c6d1aff8dc3ad4ed9cd3eeb6a","date":1527582939,"type":3,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/autoscaling/sim/SimCloudManager#close().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/autoscaling/sim/SimCloudManager#close().mjava","sourceNew":"  @Override\n  public void close() throws IOException {\n    if (historyHandler != null) {\n      IOUtils.closeQuietly(historyHandler);\n    }\n    IOUtils.closeQuietly(clusterStateProvider);\n    IOUtils.closeQuietly(nodeStateProvider);\n    IOUtils.closeQuietly(stateManager);\n    triggerThread.interrupt();\n    IOUtils.closeQuietly(triggerThread);\n    IOUtils.closeQuietly(objectCache);\n    simCloudManagerPool.shutdownNow();\n  }\n\n","sourceOld":"  @Override\n  public void close() throws IOException {\n    IOUtils.closeQuietly(clusterStateProvider);\n    IOUtils.closeQuietly(nodeStateProvider);\n    IOUtils.closeQuietly(stateManager);\n    triggerThread.interrupt();\n    IOUtils.closeQuietly(triggerThread);\n    IOUtils.closeQuietly(objectCache);\n    simCloudManagerPool.shutdownNow();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6b55cd711a129fb7fc4c3c4672d652149c9a4faa","date":1528813320,"type":3,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/autoscaling/sim/SimCloudManager#close().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/autoscaling/sim/SimCloudManager#close().mjava","sourceNew":"  @Override\n  public void close() throws IOException {\n    if (metricsHistoryHandler != null) {\n      IOUtils.closeQuietly(metricsHistoryHandler);\n    }\n    IOUtils.closeQuietly(clusterStateProvider);\n    IOUtils.closeQuietly(nodeStateProvider);\n    IOUtils.closeQuietly(stateManager);\n    triggerThread.interrupt();\n    IOUtils.closeQuietly(triggerThread);\n    IOUtils.closeQuietly(objectCache);\n    simCloudManagerPool.shutdownNow();\n  }\n\n","sourceOld":"  @Override\n  public void close() throws IOException {\n    if (historyHandler != null) {\n      IOUtils.closeQuietly(historyHandler);\n    }\n    IOUtils.closeQuietly(clusterStateProvider);\n    IOUtils.closeQuietly(nodeStateProvider);\n    IOUtils.closeQuietly(stateManager);\n    triggerThread.interrupt();\n    IOUtils.closeQuietly(triggerThread);\n    IOUtils.closeQuietly(objectCache);\n    simCloudManagerPool.shutdownNow();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7eeaaea0106c7d6a2de50acfc8d357121ef8bd26","date":1531589977,"type":3,"author":"Michael Braun","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/cloud/autoscaling/sim/SimCloudManager#close().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/autoscaling/sim/SimCloudManager#close().mjava","sourceNew":"  @Override\n  public void close() throws IOException {\n    if (metricsHistoryHandler != null) {\n      IOUtils.closeQuietly(metricsHistoryHandler);\n    }\n    IOUtils.closeQuietly(clusterStateProvider);\n    IOUtils.closeQuietly(nodeStateProvider);\n    IOUtils.closeQuietly(stateManager);\n    triggerThread.interrupt();\n    IOUtils.closeQuietly(triggerThread);\n    IOUtils.closeQuietly(objectCache);\n    simCloudManagerPool.shutdownNow();\n  }\n\n","sourceOld":"  @Override\n  public void close() throws IOException {\n    if (historyHandler != null) {\n      IOUtils.closeQuietly(historyHandler);\n    }\n    IOUtils.closeQuietly(clusterStateProvider);\n    IOUtils.closeQuietly(nodeStateProvider);\n    IOUtils.closeQuietly(stateManager);\n    triggerThread.interrupt();\n    IOUtils.closeQuietly(triggerThread);\n    IOUtils.closeQuietly(objectCache);\n    simCloudManagerPool.shutdownNow();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","date":1531905561,"type":3,"author":"Alessandro Benedetti","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/cloud/autoscaling/sim/SimCloudManager#close().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/autoscaling/sim/SimCloudManager#close().mjava","sourceNew":"  @Override\n  public void close() throws IOException {\n    if (metricsHistoryHandler != null) {\n      IOUtils.closeQuietly(metricsHistoryHandler);\n    }\n    IOUtils.closeQuietly(clusterStateProvider);\n    IOUtils.closeQuietly(nodeStateProvider);\n    IOUtils.closeQuietly(stateManager);\n    triggerThread.interrupt();\n    IOUtils.closeQuietly(triggerThread);\n    IOUtils.closeQuietly(objectCache);\n    simCloudManagerPool.shutdownNow();\n  }\n\n","sourceOld":"  @Override\n  public void close() throws IOException {\n    if (historyHandler != null) {\n      IOUtils.closeQuietly(historyHandler);\n    }\n    IOUtils.closeQuietly(clusterStateProvider);\n    IOUtils.closeQuietly(nodeStateProvider);\n    IOUtils.closeQuietly(stateManager);\n    triggerThread.interrupt();\n    IOUtils.closeQuietly(triggerThread);\n    IOUtils.closeQuietly(objectCache);\n    simCloudManagerPool.shutdownNow();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"dde493e2ce86459645122b0d54b03f01de6fc880","date":1543880451,"type":3,"author":"markrmiller","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/autoscaling/sim/SimCloudManager#close().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/autoscaling/sim/SimCloudManager#close().mjava","sourceNew":"  @Override\n  public void close() throws IOException {\n    if (metricsHistoryHandler != null) {\n      IOUtils.closeQuietly(metricsHistoryHandler);\n    }\n    IOUtils.closeQuietly(clusterStateProvider);\n    IOUtils.closeQuietly(nodeStateProvider);\n    IOUtils.closeQuietly(stateManager);\n    triggerThread.interrupt();\n    IOUtils.closeQuietly(triggerThread);\n    try {\n      triggerThread.join();\n    } catch (InterruptedException e) {\n      Thread.currentThread().interrupt();\n    }\n    IOUtils.closeQuietly(objectCache);\n    simCloudManagerPool.shutdownNow();\n  }\n\n","sourceOld":"  @Override\n  public void close() throws IOException {\n    if (metricsHistoryHandler != null) {\n      IOUtils.closeQuietly(metricsHistoryHandler);\n    }\n    IOUtils.closeQuietly(clusterStateProvider);\n    IOUtils.closeQuietly(nodeStateProvider);\n    IOUtils.closeQuietly(stateManager);\n    triggerThread.interrupt();\n    IOUtils.closeQuietly(triggerThread);\n    IOUtils.closeQuietly(objectCache);\n    simCloudManagerPool.shutdownNow();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"00c95d2d1a0288835788dbffb1b73ab5852c7154","date":1544457778,"type":3,"author":"markrmiller","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/autoscaling/sim/SimCloudManager#close().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/autoscaling/sim/SimCloudManager#close().mjava","sourceNew":"  @Override\n  public void close() throws IOException {\n    if (metricsHistoryHandler != null) {\n      IOUtils.closeQuietly(metricsHistoryHandler);\n    }\n    IOUtils.closeQuietly(clusterStateProvider);\n    IOUtils.closeQuietly(nodeStateProvider);\n    IOUtils.closeQuietly(stateManager);\n    triggerThread.interrupt();\n    IOUtils.closeQuietly(triggerThread);\n    triggerThread.interrupt();\n    try {\n      triggerThread.join();\n    } catch (InterruptedException e) {\n      Thread.currentThread().interrupt();\n    }\n    IOUtils.closeQuietly(objectCache);\n    simCloudManagerPool.shutdownNow();\n  }\n\n","sourceOld":"  @Override\n  public void close() throws IOException {\n    if (metricsHistoryHandler != null) {\n      IOUtils.closeQuietly(metricsHistoryHandler);\n    }\n    IOUtils.closeQuietly(clusterStateProvider);\n    IOUtils.closeQuietly(nodeStateProvider);\n    IOUtils.closeQuietly(stateManager);\n    triggerThread.interrupt();\n    IOUtils.closeQuietly(triggerThread);\n    try {\n      triggerThread.join();\n    } catch (InterruptedException e) {\n      Thread.currentThread().interrupt();\n    }\n    IOUtils.closeQuietly(objectCache);\n    simCloudManagerPool.shutdownNow();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"66b87d86427dfa19b2ef36b66de83aa9655cea33","date":1552627668,"type":3,"author":"Chris Hostetter","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/autoscaling/sim/SimCloudManager#close().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/autoscaling/sim/SimCloudManager#close().mjava","sourceNew":"  @Override\n  public void close() throws IOException {\n    // make sure we shutdown the pool first, so any in active background tasks get interupted\n    // before we start closing resources they may be using.\n    simCloudManagerPool.shutdownNow();\n    \n    if (metricsHistoryHandler != null) {\n      IOUtils.closeQuietly(metricsHistoryHandler);\n    }\n    IOUtils.closeQuietly(clusterStateProvider);\n    IOUtils.closeQuietly(nodeStateProvider);\n    IOUtils.closeQuietly(stateManager);\n    triggerThread.interrupt();\n    IOUtils.closeQuietly(triggerThread);\n    triggerThread.interrupt();\n    try {\n      triggerThread.join();\n    } catch (InterruptedException e) {\n      Thread.currentThread().interrupt();\n    }\n    IOUtils.closeQuietly(objectCache);\n  }\n\n","sourceOld":"  @Override\n  public void close() throws IOException {\n    if (metricsHistoryHandler != null) {\n      IOUtils.closeQuietly(metricsHistoryHandler);\n    }\n    IOUtils.closeQuietly(clusterStateProvider);\n    IOUtils.closeQuietly(nodeStateProvider);\n    IOUtils.closeQuietly(stateManager);\n    triggerThread.interrupt();\n    IOUtils.closeQuietly(triggerThread);\n    triggerThread.interrupt();\n    try {\n      triggerThread.join();\n    } catch (InterruptedException e) {\n      Thread.currentThread().interrupt();\n    }\n    IOUtils.closeQuietly(objectCache);\n    simCloudManagerPool.shutdownNow();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9ef8d00dbfbeb534eba8a219a5df9d99b2de6ab5","date":1556572478,"type":5,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/autoscaling/sim/SimCloudManager#close().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/autoscaling/sim/SimCloudManager#close().mjava","sourceNew":"  @Override\n  public void close() throws IOException {\n    // make sure we shutdown the pool first, so any in active background tasks get interupted\n    // before we start closing resources they may be using.\n    simCloudManagerPool.shutdownNow();\n    \n    if (metricsHistoryHandler != null) {\n      IOUtils.closeQuietly(metricsHistoryHandler);\n    }\n    IOUtils.closeQuietly(clusterStateProvider);\n    IOUtils.closeQuietly(nodeStateProvider);\n    IOUtils.closeQuietly(stateManager);\n    triggerThread.interrupt();\n    IOUtils.closeQuietly(triggerThread);\n    triggerThread.interrupt();\n    try {\n      triggerThread.join();\n    } catch (InterruptedException e) {\n      Thread.currentThread().interrupt();\n    }\n    IOUtils.closeQuietly(objectCache);\n  }\n\n","sourceOld":"  @Override\n  public void close() throws IOException {\n    // make sure we shutdown the pool first, so any in active background tasks get interupted\n    // before we start closing resources they may be using.\n    simCloudManagerPool.shutdownNow();\n    \n    if (metricsHistoryHandler != null) {\n      IOUtils.closeQuietly(metricsHistoryHandler);\n    }\n    IOUtils.closeQuietly(clusterStateProvider);\n    IOUtils.closeQuietly(nodeStateProvider);\n    IOUtils.closeQuietly(stateManager);\n    triggerThread.interrupt();\n    IOUtils.closeQuietly(triggerThread);\n    triggerThread.interrupt();\n    try {\n      triggerThread.join();\n    } catch (InterruptedException e) {\n      Thread.currentThread().interrupt();\n    }\n    IOUtils.closeQuietly(objectCache);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"6b55cd711a129fb7fc4c3c4672d652149c9a4faa":["4181b4cf0450ea3c6d1aff8dc3ad4ed9cd3eeb6a"],"0efc9f2cae117418f13ba9035f5e1d516ea7a2b5":["4181b4cf0450ea3c6d1aff8dc3ad4ed9cd3eeb6a","6b55cd711a129fb7fc4c3c4672d652149c9a4faa"],"4181b4cf0450ea3c6d1aff8dc3ad4ed9cd3eeb6a":["1d4bf9d5308dfef350829c28f2b3b2648df1e9b1"],"00c95d2d1a0288835788dbffb1b73ab5852c7154":["dde493e2ce86459645122b0d54b03f01de6fc880"],"66b87d86427dfa19b2ef36b66de83aa9655cea33":["00c95d2d1a0288835788dbffb1b73ab5852c7154"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"9ef8d00dbfbeb534eba8a219a5df9d99b2de6ab5":["66b87d86427dfa19b2ef36b66de83aa9655cea33"],"dde493e2ce86459645122b0d54b03f01de6fc880":["6b55cd711a129fb7fc4c3c4672d652149c9a4faa"],"1d4bf9d5308dfef350829c28f2b3b2648df1e9b1":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9ef8d00dbfbeb534eba8a219a5df9d99b2de6ab5"],"7eeaaea0106c7d6a2de50acfc8d357121ef8bd26":["4181b4cf0450ea3c6d1aff8dc3ad4ed9cd3eeb6a","6b55cd711a129fb7fc4c3c4672d652149c9a4faa"]},"commit2Childs":{"6b55cd711a129fb7fc4c3c4672d652149c9a4faa":["0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","dde493e2ce86459645122b0d54b03f01de6fc880","7eeaaea0106c7d6a2de50acfc8d357121ef8bd26"],"0efc9f2cae117418f13ba9035f5e1d516ea7a2b5":[],"4181b4cf0450ea3c6d1aff8dc3ad4ed9cd3eeb6a":["6b55cd711a129fb7fc4c3c4672d652149c9a4faa","0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","7eeaaea0106c7d6a2de50acfc8d357121ef8bd26"],"00c95d2d1a0288835788dbffb1b73ab5852c7154":["66b87d86427dfa19b2ef36b66de83aa9655cea33"],"66b87d86427dfa19b2ef36b66de83aa9655cea33":["9ef8d00dbfbeb534eba8a219a5df9d99b2de6ab5"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["1d4bf9d5308dfef350829c28f2b3b2648df1e9b1"],"9ef8d00dbfbeb534eba8a219a5df9d99b2de6ab5":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"1d4bf9d5308dfef350829c28f2b3b2648df1e9b1":["4181b4cf0450ea3c6d1aff8dc3ad4ed9cd3eeb6a"],"dde493e2ce86459645122b0d54b03f01de6fc880":["00c95d2d1a0288835788dbffb1b73ab5852c7154"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"7eeaaea0106c7d6a2de50acfc8d357121ef8bd26":[]},"heads":["0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","cd5edd1f2b162a5cfa08efd17851a07373a96817","7eeaaea0106c7d6a2de50acfc8d357121ef8bd26"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}