{"path":"solr/solrj/src/test/org/apache/solr/client/solrj/io/stream/CloudAuthStreamTest#testIndirectDeleteStreamInsufficientCredentials().mjava","commits":[{"id":"140a95988ddfbe87c2376f5fed6acae475ea11fc","date":1580924964,"type":0,"author":"Chris Hostetter","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/io/stream/CloudAuthStreamTest#testIndirectDeleteStreamInsufficientCredentials().mjava","pathOld":"/dev/null","sourceNew":"  public void testIndirectDeleteStreamInsufficientCredentials() throws Exception {\n    assertEquals(0,\n                 (setBasicAuthCredentials(new UpdateRequest(), WRITE_X_USER)\n                  .add(sdoc(\"id\", \"42\"))\n                  .commit(cluster.getSolrClient(), COLLECTION_X)).getStatus());\n    assertEquals(1L, commitAndCountDocsInCollection(COLLECTION_X, WRITE_X_USER));\n    \n    // regardless of how it's routed, WRITE_Y should NOT have authz to delete from X...\n    for (String path : Arrays.asList(COLLECTION_X, COLLECTION_Y)) {\n      final SolrStream solrStream = new SolrStream(solrUrl + \"/\" + path,\n                                                   params(\"qt\", \"/stream\", \"expr\",\n                                                          \"delete(\"+COLLECTION_X+\",batchSize=1,\" +\n                                                          \"tuple(id=42))\"));\n      solrStream.setCredentials(WRITE_Y_USER, WRITE_Y_USER);\n    \n      // NOTE: Can't make any assertions about Exception: SOLR-14226\n      expectThrows(Exception.class, () -> {\n          final List<Tuple> ignored = getTuples(solrStream);\n        });\n    }\n\n    assertEquals(1L, commitAndCountDocsInCollection(COLLECTION_X, WRITE_X_USER));\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"140a95988ddfbe87c2376f5fed6acae475ea11fc":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["140a95988ddfbe87c2376f5fed6acae475ea11fc"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["140a95988ddfbe87c2376f5fed6acae475ea11fc"],"140a95988ddfbe87c2376f5fed6acae475ea11fc":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}