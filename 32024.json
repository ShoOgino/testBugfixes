{"path":"contrib/db/bdb/src/test/org/apache/lucene/store/db/DbStoreTest#setUp().mjava","commits":[{"id":"87fc6f159522f12e67225691468cbf3d11be8590","date":1136423057,"type":1,"author":"Andreas Vajda","isMerge":false,"pathNew":"contrib/db/bdb/src/test/org/apache/lucene/store/db/DbStoreTest#setUp().mjava","pathOld":"contrib/db/src/test/org/apache/lucene/store/db/DbStoreTest#setUp().mjava","sourceNew":"    public void setUp()\n        throws Exception\n    {\n        if (!dbHome.exists())\n            dbHome.mkdir();\n        else\n        {\n            File[] files = dbHome.listFiles();\n\n            for (int i = 0; i < files.length; i++) {\n                String name = files[i].getName();\n                if (name.startsWith(\"__\") || name.startsWith(\"log.\"))\n                    files[i].delete();\n            }\n        }\n\n        EnvironmentConfig envConfig = new EnvironmentConfig();\n        DatabaseConfig dbConfig = new DatabaseConfig();\n\n        envConfig.setTransactional(true);\n        envConfig.setInitializeCache(true);\n        envConfig.setInitializeLocking(true);\n        envConfig.setInitializeLogging(true);\n        envConfig.setAllowCreate(true);\n        envConfig.setThreaded(true);\n        dbConfig.setAllowCreate(true);\n        dbConfig.setType(DatabaseType.BTREE);\n\n        env = new Environment(dbHome, envConfig);\n\n        Transaction txn = null;\n\n        try {\n            txn = env.beginTransaction(null, null);\n            index = env.openDatabase(txn, \"__index__\", null, dbConfig);\n            blocks = env.openDatabase(txn, \"__blocks__\", null, dbConfig);\n        } catch (DatabaseException e) {\n            if (txn != null)\n            {\n                txn.abort();\n                txn = null;\n            }\n            index = null;\n            blocks = null;\n            throw e;\n        } finally {\n            if (txn != null)\n                txn.commit();\n            txn = null;\n        }\n    }\n\n","sourceOld":"    public void setUp()\n        throws Exception\n    {\n        if (!dbHome.exists())\n            dbHome.mkdir();\n        else\n        {\n            File[] files = dbHome.listFiles();\n\n            for (int i = 0; i < files.length; i++) {\n                String name = files[i].getName();\n                if (name.startsWith(\"__\") || name.startsWith(\"log.\"))\n                    files[i].delete();\n            }\n        }\n\n        EnvironmentConfig envConfig = new EnvironmentConfig();\n        DatabaseConfig dbConfig = new DatabaseConfig();\n\n        envConfig.setTransactional(true);\n        envConfig.setInitializeCache(true);\n        envConfig.setInitializeLocking(true);\n        envConfig.setInitializeLogging(true);\n        envConfig.setAllowCreate(true);\n        envConfig.setThreaded(true);\n        dbConfig.setAllowCreate(true);\n        dbConfig.setType(DatabaseType.BTREE);\n\n        env = new Environment(dbHome, envConfig);\n\n        Transaction txn = null;\n\n        try {\n            txn = env.beginTransaction(null, null);\n            index = env.openDatabase(txn, \"__index__\", null, dbConfig);\n            blocks = env.openDatabase(txn, \"__blocks__\", null, dbConfig);\n        } catch (DatabaseException e) {\n            if (txn != null)\n            {\n                txn.abort();\n                txn = null;\n            }\n            index = null;\n            blocks = null;\n            throw e;\n        } finally {\n            if (txn != null)\n                txn.commit();\n            txn = null;\n        }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d57eb7c98c08c03af6e4cd83509df31c81ac16af","date":1257684312,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"contrib/db/bdb/src/test/org/apache/lucene/store/db/DbStoreTest#setUp().mjava","pathOld":"contrib/db/bdb/src/test/org/apache/lucene/store/db/DbStoreTest#setUp().mjava","sourceNew":"    @Override\n    public void setUp()\n        throws Exception\n    {\n        if (!dbHome.exists())\n            dbHome.mkdir();\n        else\n        {\n            File[] files = dbHome.listFiles();\n\n            for (int i = 0; i < files.length; i++) {\n                String name = files[i].getName();\n                if (name.startsWith(\"__\") || name.startsWith(\"log.\"))\n                    files[i].delete();\n            }\n        }\n\n        EnvironmentConfig envConfig = new EnvironmentConfig();\n        DatabaseConfig dbConfig = new DatabaseConfig();\n\n        envConfig.setTransactional(true);\n        envConfig.setInitializeCache(true);\n        envConfig.setInitializeLocking(true);\n        envConfig.setInitializeLogging(true);\n        envConfig.setAllowCreate(true);\n        envConfig.setThreaded(true);\n        dbConfig.setAllowCreate(true);\n        dbConfig.setType(DatabaseType.BTREE);\n\n        env = new Environment(dbHome, envConfig);\n\n        Transaction txn = null;\n\n        try {\n            txn = env.beginTransaction(null, null);\n            index = env.openDatabase(txn, \"__index__\", null, dbConfig);\n            blocks = env.openDatabase(txn, \"__blocks__\", null, dbConfig);\n        } catch (DatabaseException e) {\n            if (txn != null)\n            {\n                txn.abort();\n                txn = null;\n            }\n            index = null;\n            blocks = null;\n            throw e;\n        } finally {\n            if (txn != null)\n                txn.commit();\n            txn = null;\n        }\n    }\n\n","sourceOld":"    public void setUp()\n        throws Exception\n    {\n        if (!dbHome.exists())\n            dbHome.mkdir();\n        else\n        {\n            File[] files = dbHome.listFiles();\n\n            for (int i = 0; i < files.length; i++) {\n                String name = files[i].getName();\n                if (name.startsWith(\"__\") || name.startsWith(\"log.\"))\n                    files[i].delete();\n            }\n        }\n\n        EnvironmentConfig envConfig = new EnvironmentConfig();\n        DatabaseConfig dbConfig = new DatabaseConfig();\n\n        envConfig.setTransactional(true);\n        envConfig.setInitializeCache(true);\n        envConfig.setInitializeLocking(true);\n        envConfig.setInitializeLogging(true);\n        envConfig.setAllowCreate(true);\n        envConfig.setThreaded(true);\n        dbConfig.setAllowCreate(true);\n        dbConfig.setType(DatabaseType.BTREE);\n\n        env = new Environment(dbHome, envConfig);\n\n        Transaction txn = null;\n\n        try {\n            txn = env.beginTransaction(null, null);\n            index = env.openDatabase(txn, \"__index__\", null, dbConfig);\n            blocks = env.openDatabase(txn, \"__blocks__\", null, dbConfig);\n        } catch (DatabaseException e) {\n            if (txn != null)\n            {\n                txn.abort();\n                txn = null;\n            }\n            index = null;\n            blocks = null;\n            throw e;\n        } finally {\n            if (txn != null)\n                txn.commit();\n            txn = null;\n        }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a9ac13b5f0ce5ef1b2ce168367d993a79594b23a","date":1267298041,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"contrib/db/bdb/src/test/org/apache/lucene/store/db/DbStoreTest#setUp().mjava","pathOld":"contrib/db/bdb/src/test/org/apache/lucene/store/db/DbStoreTest#setUp().mjava","sourceNew":"    @Override\n    protected void setUp() throws Exception {\n      super.setUp();\n        if (!dbHome.exists())\n            dbHome.mkdir();\n        else\n        {\n            File[] files = dbHome.listFiles();\n\n            for (int i = 0; i < files.length; i++) {\n                String name = files[i].getName();\n                if (name.startsWith(\"__\") || name.startsWith(\"log.\"))\n                    files[i].delete();\n            }\n        }\n\n        EnvironmentConfig envConfig = new EnvironmentConfig();\n        DatabaseConfig dbConfig = new DatabaseConfig();\n\n        envConfig.setTransactional(true);\n        envConfig.setInitializeCache(true);\n        envConfig.setInitializeLocking(true);\n        envConfig.setInitializeLogging(true);\n        envConfig.setAllowCreate(true);\n        envConfig.setThreaded(true);\n        dbConfig.setAllowCreate(true);\n        dbConfig.setType(DatabaseType.BTREE);\n\n        env = new Environment(dbHome, envConfig);\n\n        Transaction txn = null;\n\n        try {\n            txn = env.beginTransaction(null, null);\n            index = env.openDatabase(txn, \"__index__\", null, dbConfig);\n            blocks = env.openDatabase(txn, \"__blocks__\", null, dbConfig);\n        } catch (DatabaseException e) {\n            if (txn != null)\n            {\n                txn.abort();\n                txn = null;\n            }\n            index = null;\n            blocks = null;\n            throw e;\n        } finally {\n            if (txn != null)\n                txn.commit();\n            txn = null;\n        }\n    }\n\n","sourceOld":"    @Override\n    public void setUp()\n        throws Exception\n    {\n        if (!dbHome.exists())\n            dbHome.mkdir();\n        else\n        {\n            File[] files = dbHome.listFiles();\n\n            for (int i = 0; i < files.length; i++) {\n                String name = files[i].getName();\n                if (name.startsWith(\"__\") || name.startsWith(\"log.\"))\n                    files[i].delete();\n            }\n        }\n\n        EnvironmentConfig envConfig = new EnvironmentConfig();\n        DatabaseConfig dbConfig = new DatabaseConfig();\n\n        envConfig.setTransactional(true);\n        envConfig.setInitializeCache(true);\n        envConfig.setInitializeLocking(true);\n        envConfig.setInitializeLogging(true);\n        envConfig.setAllowCreate(true);\n        envConfig.setThreaded(true);\n        dbConfig.setAllowCreate(true);\n        dbConfig.setType(DatabaseType.BTREE);\n\n        env = new Environment(dbHome, envConfig);\n\n        Transaction txn = null;\n\n        try {\n            txn = env.beginTransaction(null, null);\n            index = env.openDatabase(txn, \"__index__\", null, dbConfig);\n            blocks = env.openDatabase(txn, \"__blocks__\", null, dbConfig);\n        } catch (DatabaseException e) {\n            if (txn != null)\n            {\n                txn.abort();\n                txn = null;\n            }\n            index = null;\n            blocks = null;\n            throw e;\n        } finally {\n            if (txn != null)\n                txn.commit();\n            txn = null;\n        }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/contrib/db/bdb/src/test/org/apache/lucene/store/db/DbStoreTest#setUp().mjava","pathOld":"contrib/db/bdb/src/test/org/apache/lucene/store/db/DbStoreTest#setUp().mjava","sourceNew":"    @Override\n    protected void setUp() throws Exception {\n      super.setUp();\n        if (!dbHome.exists())\n            dbHome.mkdir();\n        else\n        {\n            File[] files = dbHome.listFiles();\n\n            for (int i = 0; i < files.length; i++) {\n                String name = files[i].getName();\n                if (name.startsWith(\"__\") || name.startsWith(\"log.\"))\n                    files[i].delete();\n            }\n        }\n\n        EnvironmentConfig envConfig = new EnvironmentConfig();\n        DatabaseConfig dbConfig = new DatabaseConfig();\n\n        envConfig.setTransactional(true);\n        envConfig.setInitializeCache(true);\n        envConfig.setInitializeLocking(true);\n        envConfig.setInitializeLogging(true);\n        envConfig.setAllowCreate(true);\n        envConfig.setThreaded(true);\n        dbConfig.setAllowCreate(true);\n        dbConfig.setType(DatabaseType.BTREE);\n\n        env = new Environment(dbHome, envConfig);\n\n        Transaction txn = null;\n\n        try {\n            txn = env.beginTransaction(null, null);\n            index = env.openDatabase(txn, \"__index__\", null, dbConfig);\n            blocks = env.openDatabase(txn, \"__blocks__\", null, dbConfig);\n        } catch (DatabaseException e) {\n            if (txn != null)\n            {\n                txn.abort();\n                txn = null;\n            }\n            index = null;\n            blocks = null;\n            throw e;\n        } finally {\n            if (txn != null)\n                txn.commit();\n            txn = null;\n        }\n    }\n\n","sourceOld":"    @Override\n    protected void setUp() throws Exception {\n      super.setUp();\n        if (!dbHome.exists())\n            dbHome.mkdir();\n        else\n        {\n            File[] files = dbHome.listFiles();\n\n            for (int i = 0; i < files.length; i++) {\n                String name = files[i].getName();\n                if (name.startsWith(\"__\") || name.startsWith(\"log.\"))\n                    files[i].delete();\n            }\n        }\n\n        EnvironmentConfig envConfig = new EnvironmentConfig();\n        DatabaseConfig dbConfig = new DatabaseConfig();\n\n        envConfig.setTransactional(true);\n        envConfig.setInitializeCache(true);\n        envConfig.setInitializeLocking(true);\n        envConfig.setInitializeLogging(true);\n        envConfig.setAllowCreate(true);\n        envConfig.setThreaded(true);\n        dbConfig.setAllowCreate(true);\n        dbConfig.setType(DatabaseType.BTREE);\n\n        env = new Environment(dbHome, envConfig);\n\n        Transaction txn = null;\n\n        try {\n            txn = env.beginTransaction(null, null);\n            index = env.openDatabase(txn, \"__index__\", null, dbConfig);\n            blocks = env.openDatabase(txn, \"__blocks__\", null, dbConfig);\n        } catch (DatabaseException e) {\n            if (txn != null)\n            {\n                txn.abort();\n                txn = null;\n            }\n            index = null;\n            blocks = null;\n            throw e;\n        } finally {\n            if (txn != null)\n                txn.commit();\n            txn = null;\n        }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"d57eb7c98c08c03af6e4cd83509df31c81ac16af":["87fc6f159522f12e67225691468cbf3d11be8590"],"87fc6f159522f12e67225691468cbf3d11be8590":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a9ac13b5f0ce5ef1b2ce168367d993a79594b23a":["d57eb7c98c08c03af6e4cd83509df31c81ac16af"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a9ac13b5f0ce5ef1b2ce168367d993a79594b23a"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["87fc6f159522f12e67225691468cbf3d11be8590"],"d57eb7c98c08c03af6e4cd83509df31c81ac16af":["a9ac13b5f0ce5ef1b2ce168367d993a79594b23a"],"87fc6f159522f12e67225691468cbf3d11be8590":["d57eb7c98c08c03af6e4cd83509df31c81ac16af"],"a9ac13b5f0ce5ef1b2ce168367d993a79594b23a":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}