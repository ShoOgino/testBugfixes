{"path":"modules/grouping/src/java/org/apache/lucene/search/grouping/term/TermAllGroupHeadsCollector.OrdScoreAllGroupHeadsCollector.GroupHead#GroupHead(int,BytesRef).mjava","commits":[{"id":"8b48c85d1bf438ef65fbc1abe44f4e2c04a43e00","date":1317931776,"type":1,"author":"Martijn van Groningen","isMerge":false,"pathNew":"modules/grouping/src/java/org/apache/lucene/search/grouping/term/TermAllGroupHeadsCollector.OrdScoreAllGroupHeadsCollector.GroupHead#GroupHead(int,BytesRef).mjava","pathOld":"modules/grouping/src/java/org/apache/lucene/search/grouping/TermAllGroupHeadsCollector.OrdScoreAllGroupHeadsCollector.GroupHead#GroupHead(int,BytesRef).mjava","sourceNew":"      private GroupHead(int doc, BytesRef groupValue) throws IOException {\n        super(groupValue, doc + readerContext.docBase);\n        sortValues = new BytesRef[sortsIndex.length];\n        sortOrds = new int[sortsIndex.length];\n        scores = new float[sortsIndex.length];\n        for (int i = 0; i < sortsIndex.length; i++) {\n          if (fields[i].getType() == SortField.Type.SCORE) {\n            scores[i] = scorer.score();\n          } else {\n            sortValues[i] = sortsIndex[i].getTerm(doc, new BytesRef());\n            sortOrds[i] = sortsIndex[i].getOrd(doc);\n          }\n        }\n\n      }\n\n","sourceOld":"      private GroupHead(int doc, BytesRef groupValue) throws IOException {\n        super(groupValue, doc + readerContext.docBase);\n        sortValues = new BytesRef[sortsIndex.length];\n        sortOrds = new int[sortsIndex.length];\n        scores = new float[sortsIndex.length];\n        for (int i = 0; i < sortsIndex.length; i++) {\n          if (fields[i].getType() == SortField.Type.SCORE) {\n            scores[i] = scorer.score();\n          } else {\n            sortValues[i] = sortsIndex[i].getTerm(doc, new BytesRef());\n            sortOrds[i] = sortsIndex[i].getOrd(doc);\n          }\n        }\n\n      }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/grouping/src/java/org/apache/lucene/search/grouping/term/TermAllGroupHeadsCollector.OrdScoreAllGroupHeadsCollector.GroupHead#GroupHead(int,BytesRef).mjava","pathOld":"modules/grouping/src/java/org/apache/lucene/search/grouping/term/TermAllGroupHeadsCollector.OrdScoreAllGroupHeadsCollector.GroupHead#GroupHead(int,BytesRef).mjava","sourceNew":"      private GroupHead(int doc, BytesRef groupValue) throws IOException {\n        super(groupValue, doc + readerContext.docBase);\n        sortValues = new BytesRef[sortsIndex.length];\n        sortOrds = new int[sortsIndex.length];\n        scores = new float[sortsIndex.length];\n        for (int i = 0; i < sortsIndex.length; i++) {\n          if (fields[i].getType() == SortField.Type.SCORE) {\n            scores[i] = scorer.score();\n          } else {\n            sortValues[i] = sortsIndex[i].getTerm(doc, new BytesRef());\n            sortOrds[i] = sortsIndex[i].getOrd(doc);\n          }\n        }\n\n      }\n\n","sourceOld":"      private GroupHead(int doc, BytesRef groupValue) throws IOException {\n        super(groupValue, doc + readerContext.docBase);\n        sortValues = new BytesRef[sortsIndex.length];\n        sortOrds = new int[sortsIndex.length];\n        scores = new float[sortsIndex.length];\n        for (int i = 0; i < sortsIndex.length; i++) {\n          if (fields[i].getType() == SortField.Type.SCORE) {\n            scores[i] = scorer.score();\n          } else {\n            sortValues[i] = sortsIndex[i].getTerm(doc, new BytesRef());\n            sortOrds[i] = sortsIndex[i].getOrd(doc);\n          }\n        }\n\n      }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["8b48c85d1bf438ef65fbc1abe44f4e2c04a43e00"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"8b48c85d1bf438ef65fbc1abe44f4e2c04a43e00":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b89678825b68eccaf09e6ab71675fc0b0af1e099"]},"commit2Childs":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["8b48c85d1bf438ef65fbc1abe44f4e2c04a43e00"],"8b48c85d1bf438ef65fbc1abe44f4e2c04a43e00":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}