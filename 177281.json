{"path":"lucene/src/test/org/apache/lucene/util/TestOpenBitSet#doGetFast(BitSet,OpenBitSet,int).mjava","commits":[{"id":"3a49787422facf6f64049c08d30428dc706b13f5","date":1309985035,"type":0,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/util/TestOpenBitSet#doGetFast(BitSet,OpenBitSet,int).mjava","pathOld":"/dev/null","sourceNew":"  void doGetFast(BitSet a, OpenBitSet b, int max) {\n    for (int i=0; i<max; i++) {\n      if (a.get(i) != b.fastGet(i)) {\n        fail(\"mismatch: BitSet=[\"+i+\"]=\"+a.get(i));\n      }\n      if (a.get(i) != b.fastGet((long) i)) {\n        fail(\"mismatch: BitSet=[\"+i+\"]=\"+a.get(i));\n      }\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d083e83f225b11e5fdd900e83d26ddb385b6955c","date":1310029438,"type":0,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/util/TestOpenBitSet#doGetFast(BitSet,OpenBitSet,int).mjava","pathOld":"/dev/null","sourceNew":"  void doGetFast(BitSet a, OpenBitSet b, int max) {\n    for (int i=0; i<max; i++) {\n      if (a.get(i) != b.fastGet(i)) {\n        fail(\"mismatch: BitSet=[\"+i+\"]=\"+a.get(i));\n      }\n      if (a.get(i) != b.fastGet((long) i)) {\n        fail(\"mismatch: BitSet=[\"+i+\"]=\"+a.get(i));\n      }\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f0b9507caf22f292ac0e5e59f62db4275adf4511","date":1310107283,"type":0,"author":"Steven Rowe","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/util/TestOpenBitSet#doGetFast(BitSet,OpenBitSet,int).mjava","pathOld":"/dev/null","sourceNew":"  void doGetFast(BitSet a, OpenBitSet b, int max) {\n    for (int i=0; i<max; i++) {\n      if (a.get(i) != b.fastGet(i)) {\n        fail(\"mismatch: BitSet=[\"+i+\"]=\"+a.get(i));\n      }\n      if (a.get(i) != b.fastGet((long) i)) {\n        fail(\"mismatch: BitSet=[\"+i+\"]=\"+a.get(i));\n      }\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":5,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/util/TestOpenBitSet#doGetFast(BitSet,OpenBitSet,int).mjava","pathOld":"lucene/src/test/org/apache/lucene/util/TestOpenBitSet#doGetFast(BitSet,OpenBitSet,int).mjava","sourceNew":"  void doGetFast(BitSet a, OpenBitSet b, int max) {\n    for (int i=0; i<max; i++) {\n      if (a.get(i) != b.fastGet(i)) {\n        fail(\"mismatch: BitSet=[\"+i+\"]=\"+a.get(i));\n      }\n      if (a.get(i) != b.fastGet((long) i)) {\n        fail(\"mismatch: BitSet=[\"+i+\"]=\"+a.get(i));\n      }\n    }\n  }\n\n","sourceOld":"  void doGetFast(BitSet a, OpenBitSet b, int max) {\n    for (int i=0; i<max; i++) {\n      if (a.get(i) != b.fastGet(i)) {\n        fail(\"mismatch: BitSet=[\"+i+\"]=\"+a.get(i));\n      }\n      if (a.get(i) != b.fastGet((long) i)) {\n        fail(\"mismatch: BitSet=[\"+i+\"]=\"+a.get(i));\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"f0b9507caf22f292ac0e5e59f62db4275adf4511":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","3a49787422facf6f64049c08d30428dc706b13f5"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["3a49787422facf6f64049c08d30428dc706b13f5"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3a49787422facf6f64049c08d30428dc706b13f5":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"d083e83f225b11e5fdd900e83d26ddb385b6955c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","3a49787422facf6f64049c08d30428dc706b13f5"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"]},"commit2Childs":{"f0b9507caf22f292ac0e5e59f62db4275adf4511":[],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["f0b9507caf22f292ac0e5e59f62db4275adf4511","3a49787422facf6f64049c08d30428dc706b13f5","d083e83f225b11e5fdd900e83d26ddb385b6955c"],"3a49787422facf6f64049c08d30428dc706b13f5":["f0b9507caf22f292ac0e5e59f62db4275adf4511","3a119bbc8703c10faa329ec201c654b3a35a1e3e","d083e83f225b11e5fdd900e83d26ddb385b6955c"],"d083e83f225b11e5fdd900e83d26ddb385b6955c":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["f0b9507caf22f292ac0e5e59f62db4275adf4511","d083e83f225b11e5fdd900e83d26ddb385b6955c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}