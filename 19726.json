{"path":"solr/solrj/src/java/org/apache/solr/cluster/api/SimpleMap#abortableForEach(BiFunction[String,#-super-T,Boolean]).mjava","commits":[{"id":"359d18ba6ce25de0fd8e499a12a05f02fd97187b","date":1597122314,"type":0,"author":"Noble Paul","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/cluster/api/SimpleMap#abortableForEach(BiFunction[String,#-super-T,Boolean]).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Navigate through all key-values but abort in between if required.\n   * The default impl is suboptimal. Proper implementations must do it more efficiently\n   * @param fun Consume each entry and return a boolean to signal whether to proceed or not. If true, continue, if false stop\n   */\n  default void abortableForEach(BiFunction<String, ? super T, Boolean> fun) {\n    forEachEntry(new BiConsumer<>() {\n      boolean end = false;\n      @Override\n      public void accept(String k, T v) {\n        if (end) return;\n        end = fun.apply(k, v);\n      }\n    });\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"64ca3f44a396c294398d81101e739d0f961d9a06","date":1597290785,"type":3,"author":"noblepaul","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/cluster/api/SimpleMap#abortableForEach(BiFunction[String,#-super-T,Boolean]).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/cluster/api/SimpleMap#abortableForEach(BiFunction[String,#-super-T,Boolean]).mjava","sourceNew":"  /**\n   * Navigate through all key-values but abort in between if required.\n   * The default impl is suboptimal. Proper implementations must do it more efficiently\n   * @param fun Consume each entry and return a boolean to signal whether to proceed or not. If true, continue, if false stop\n   */\n  default void abortableForEach(BiFunction<String, ? super T, Boolean> fun) {\n    forEachEntry(new BiConsumer<String, T>() {\n      boolean end = false;\n      @Override\n      public void accept(String k, T v) {\n        if (end) return;\n        end = fun.apply(k, v);\n      }\n    });\n  }\n\n","sourceOld":"  /**\n   * Navigate through all key-values but abort in between if required.\n   * The default impl is suboptimal. Proper implementations must do it more efficiently\n   * @param fun Consume each entry and return a boolean to signal whether to proceed or not. If true, continue, if false stop\n   */\n  default void abortableForEach(BiFunction<String, ? super T, Boolean> fun) {\n    forEachEntry(new BiConsumer<>() {\n      boolean end = false;\n      @Override\n      public void accept(String k, T v) {\n        if (end) return;\n        end = fun.apply(k, v);\n      }\n    });\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"64ca3f44a396c294398d81101e739d0f961d9a06":["359d18ba6ce25de0fd8e499a12a05f02fd97187b"],"359d18ba6ce25de0fd8e499a12a05f02fd97187b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["64ca3f44a396c294398d81101e739d0f961d9a06"]},"commit2Childs":{"64ca3f44a396c294398d81101e739d0f961d9a06":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"359d18ba6ce25de0fd8e499a12a05f02fd97187b":["64ca3f44a396c294398d81101e739d0f961d9a06"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["359d18ba6ce25de0fd8e499a12a05f02fd97187b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}