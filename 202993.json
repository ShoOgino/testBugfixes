{"path":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriter#testMergeAllDeleted().mjava","commits":[{"id":"0859dec0aa7a485aa0081147f533c5987b4b47ac","date":1376498602,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriter#testMergeAllDeleted().mjava","pathOld":"/dev/null","sourceNew":"  public void testMergeAllDeleted() throws IOException {\n    Directory dir = newDirectory();\n    IndexWriterConfig iwc = newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random()));\n    final SetOnce<IndexWriter> iwRef = new SetOnce<IndexWriter>();\n    iwc.setInfoStream(new RandomIndexWriter.TestPointInfoStream(iwc.getInfoStream(), new RandomIndexWriter.TestPoint() {\n      @Override\n      public void apply(String message) {\n        if (\"startCommitMerge\".equals(message)) {\n          iwRef.get().setKeepFullyDeletedSegments(false);\n        } else if (\"startMergeInit\".equals(message)) {\n          iwRef.get().setKeepFullyDeletedSegments(true);\n        }\n      }\n    }));\n    IndexWriter evilWriter = new IndexWriter(dir, iwc);\n    iwRef.set(evilWriter);\n    for (int i = 0; i < 1000; i++) {\n      addDoc(evilWriter);\n      if (random().nextInt(17) == 0) {\n        evilWriter.commit();\n      }\n    }\n    evilWriter.deleteDocuments(new MatchAllDocsQuery());\n    evilWriter.forceMerge(1);\n    evilWriter.close();\n    dir.close();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3dffec77fb8f7d0e9ca4869dddd6af94528b4576","date":1377875202,"type":0,"author":"Han Jiang","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriter#testMergeAllDeleted().mjava","pathOld":"/dev/null","sourceNew":"  public void testMergeAllDeleted() throws IOException {\n    Directory dir = newDirectory();\n    IndexWriterConfig iwc = newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random()));\n    final SetOnce<IndexWriter> iwRef = new SetOnce<IndexWriter>();\n    iwc.setInfoStream(new RandomIndexWriter.TestPointInfoStream(iwc.getInfoStream(), new RandomIndexWriter.TestPoint() {\n      @Override\n      public void apply(String message) {\n        if (\"startCommitMerge\".equals(message)) {\n          iwRef.get().setKeepFullyDeletedSegments(false);\n        } else if (\"startMergeInit\".equals(message)) {\n          iwRef.get().setKeepFullyDeletedSegments(true);\n        }\n      }\n    }));\n    IndexWriter evilWriter = new IndexWriter(dir, iwc);\n    iwRef.set(evilWriter);\n    for (int i = 0; i < 1000; i++) {\n      addDoc(evilWriter);\n      if (random().nextInt(17) == 0) {\n        evilWriter.commit();\n      }\n    }\n    evilWriter.deleteDocuments(new MatchAllDocsQuery());\n    evilWriter.forceMerge(1);\n    evilWriter.close();\n    dir.close();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"634f330c54fd3f9f491d52036dc3f40b4f4d8934","date":1394635157,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriter#testMergeAllDeleted().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriter#testMergeAllDeleted().mjava","sourceNew":"  public void testMergeAllDeleted() throws IOException {\n    Directory dir = newDirectory();\n    IndexWriterConfig iwc = newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random()));\n    final SetOnce<IndexWriter> iwRef = new SetOnce<>();\n    iwc.setInfoStream(new RandomIndexWriter.TestPointInfoStream(iwc.getInfoStream(), new RandomIndexWriter.TestPoint() {\n      @Override\n      public void apply(String message) {\n        if (\"startCommitMerge\".equals(message)) {\n          iwRef.get().setKeepFullyDeletedSegments(false);\n        } else if (\"startMergeInit\".equals(message)) {\n          iwRef.get().setKeepFullyDeletedSegments(true);\n        }\n      }\n    }));\n    IndexWriter evilWriter = new IndexWriter(dir, iwc);\n    iwRef.set(evilWriter);\n    for (int i = 0; i < 1000; i++) {\n      addDoc(evilWriter);\n      if (random().nextInt(17) == 0) {\n        evilWriter.commit();\n      }\n    }\n    evilWriter.deleteDocuments(new MatchAllDocsQuery());\n    evilWriter.forceMerge(1);\n    evilWriter.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testMergeAllDeleted() throws IOException {\n    Directory dir = newDirectory();\n    IndexWriterConfig iwc = newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random()));\n    final SetOnce<IndexWriter> iwRef = new SetOnce<IndexWriter>();\n    iwc.setInfoStream(new RandomIndexWriter.TestPointInfoStream(iwc.getInfoStream(), new RandomIndexWriter.TestPoint() {\n      @Override\n      public void apply(String message) {\n        if (\"startCommitMerge\".equals(message)) {\n          iwRef.get().setKeepFullyDeletedSegments(false);\n        } else if (\"startMergeInit\".equals(message)) {\n          iwRef.get().setKeepFullyDeletedSegments(true);\n        }\n      }\n    }));\n    IndexWriter evilWriter = new IndexWriter(dir, iwc);\n    iwRef.set(evilWriter);\n    for (int i = 0; i < 1000; i++) {\n      addDoc(evilWriter);\n      if (random().nextInt(17) == 0) {\n        evilWriter.commit();\n      }\n    }\n    evilWriter.deleteDocuments(new MatchAllDocsQuery());\n    evilWriter.forceMerge(1);\n    evilWriter.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ae14298f4eec6d5faee6a149f88ba57d14a6f21a","date":1396971290,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriter#testMergeAllDeleted().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriter#testMergeAllDeleted().mjava","sourceNew":"  public void testMergeAllDeleted() throws IOException {\n    Directory dir = newDirectory();\n    IndexWriterConfig iwc = newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random()));\n    final SetOnce<IndexWriter> iwRef = new SetOnce<>();\n    iwc.setInfoStream(new RandomIndexWriter.TestPointInfoStream(iwc.getInfoStream(), new RandomIndexWriter.TestPoint() {\n      @Override\n      public void apply(String message) {\n        if (\"startCommitMerge\".equals(message)) {\n          iwRef.get().setKeepFullyDeletedSegments(false);\n        } else if (\"startMergeInit\".equals(message)) {\n          iwRef.get().setKeepFullyDeletedSegments(true);\n        }\n      }\n    }));\n    IndexWriter evilWriter = new IndexWriter(dir, iwc);\n    iwRef.set(evilWriter);\n    for (int i = 0; i < 1000; i++) {\n      addDoc(evilWriter);\n      if (random().nextInt(17) == 0) {\n        evilWriter.commit();\n      }\n    }\n    evilWriter.deleteDocuments(new MatchAllDocsQuery());\n    evilWriter.forceMerge(1);\n    evilWriter.shutdown();\n    dir.close();\n  }\n\n","sourceOld":"  public void testMergeAllDeleted() throws IOException {\n    Directory dir = newDirectory();\n    IndexWriterConfig iwc = newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random()));\n    final SetOnce<IndexWriter> iwRef = new SetOnce<>();\n    iwc.setInfoStream(new RandomIndexWriter.TestPointInfoStream(iwc.getInfoStream(), new RandomIndexWriter.TestPoint() {\n      @Override\n      public void apply(String message) {\n        if (\"startCommitMerge\".equals(message)) {\n          iwRef.get().setKeepFullyDeletedSegments(false);\n        } else if (\"startMergeInit\".equals(message)) {\n          iwRef.get().setKeepFullyDeletedSegments(true);\n        }\n      }\n    }));\n    IndexWriter evilWriter = new IndexWriter(dir, iwc);\n    iwRef.set(evilWriter);\n    for (int i = 0; i < 1000; i++) {\n      addDoc(evilWriter);\n      if (random().nextInt(17) == 0) {\n        evilWriter.commit();\n      }\n    }\n    evilWriter.deleteDocuments(new MatchAllDocsQuery());\n    evilWriter.forceMerge(1);\n    evilWriter.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"54a6bea0b991120a99ad0e2f72ae853fd5ecae0e","date":1406737224,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriter#testMergeAllDeleted().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriter#testMergeAllDeleted().mjava","sourceNew":"  public void testMergeAllDeleted() throws IOException {\n    Directory dir = newDirectory();\n    IndexWriterConfig iwc = newIndexWriterConfig(new MockAnalyzer(random()));\n    final SetOnce<IndexWriter> iwRef = new SetOnce<>();\n    iwc.setInfoStream(new RandomIndexWriter.TestPointInfoStream(iwc.getInfoStream(), new RandomIndexWriter.TestPoint() {\n      @Override\n      public void apply(String message) {\n        if (\"startCommitMerge\".equals(message)) {\n          iwRef.get().setKeepFullyDeletedSegments(false);\n        } else if (\"startMergeInit\".equals(message)) {\n          iwRef.get().setKeepFullyDeletedSegments(true);\n        }\n      }\n    }));\n    IndexWriter evilWriter = new IndexWriter(dir, iwc);\n    iwRef.set(evilWriter);\n    for (int i = 0; i < 1000; i++) {\n      addDoc(evilWriter);\n      if (random().nextInt(17) == 0) {\n        evilWriter.commit();\n      }\n    }\n    evilWriter.deleteDocuments(new MatchAllDocsQuery());\n    evilWriter.forceMerge(1);\n    evilWriter.shutdown();\n    dir.close();\n  }\n\n","sourceOld":"  public void testMergeAllDeleted() throws IOException {\n    Directory dir = newDirectory();\n    IndexWriterConfig iwc = newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random()));\n    final SetOnce<IndexWriter> iwRef = new SetOnce<>();\n    iwc.setInfoStream(new RandomIndexWriter.TestPointInfoStream(iwc.getInfoStream(), new RandomIndexWriter.TestPoint() {\n      @Override\n      public void apply(String message) {\n        if (\"startCommitMerge\".equals(message)) {\n          iwRef.get().setKeepFullyDeletedSegments(false);\n        } else if (\"startMergeInit\".equals(message)) {\n          iwRef.get().setKeepFullyDeletedSegments(true);\n        }\n      }\n    }));\n    IndexWriter evilWriter = new IndexWriter(dir, iwc);\n    iwRef.set(evilWriter);\n    for (int i = 0; i < 1000; i++) {\n      addDoc(evilWriter);\n      if (random().nextInt(17) == 0) {\n        evilWriter.commit();\n      }\n    }\n    evilWriter.deleteDocuments(new MatchAllDocsQuery());\n    evilWriter.forceMerge(1);\n    evilWriter.shutdown();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d0ef034a4f10871667ae75181537775ddcf8ade4","date":1407610475,"type":3,"author":"Ryan Ernst","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriter#testMergeAllDeleted().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriter#testMergeAllDeleted().mjava","sourceNew":"  public void testMergeAllDeleted() throws IOException {\n    Directory dir = newDirectory();\n    IndexWriterConfig iwc = newIndexWriterConfig(new MockAnalyzer(random()));\n    final SetOnce<IndexWriter> iwRef = new SetOnce<>();\n    iwc.setInfoStream(new RandomIndexWriter.TestPointInfoStream(iwc.getInfoStream(), new RandomIndexWriter.TestPoint() {\n      @Override\n      public void apply(String message) {\n        if (\"startCommitMerge\".equals(message)) {\n          iwRef.get().setKeepFullyDeletedSegments(false);\n        } else if (\"startMergeInit\".equals(message)) {\n          iwRef.get().setKeepFullyDeletedSegments(true);\n        }\n      }\n    }));\n    IndexWriter evilWriter = new IndexWriter(dir, iwc);\n    iwRef.set(evilWriter);\n    for (int i = 0; i < 1000; i++) {\n      addDoc(evilWriter);\n      if (random().nextInt(17) == 0) {\n        evilWriter.commit();\n      }\n    }\n    evilWriter.deleteDocuments(new MatchAllDocsQuery());\n    evilWriter.forceMerge(1);\n    evilWriter.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testMergeAllDeleted() throws IOException {\n    Directory dir = newDirectory();\n    IndexWriterConfig iwc = newIndexWriterConfig(new MockAnalyzer(random()));\n    final SetOnce<IndexWriter> iwRef = new SetOnce<>();\n    iwc.setInfoStream(new RandomIndexWriter.TestPointInfoStream(iwc.getInfoStream(), new RandomIndexWriter.TestPoint() {\n      @Override\n      public void apply(String message) {\n        if (\"startCommitMerge\".equals(message)) {\n          iwRef.get().setKeepFullyDeletedSegments(false);\n        } else if (\"startMergeInit\".equals(message)) {\n          iwRef.get().setKeepFullyDeletedSegments(true);\n        }\n      }\n    }));\n    IndexWriter evilWriter = new IndexWriter(dir, iwc);\n    iwRef.set(evilWriter);\n    for (int i = 0; i < 1000; i++) {\n      addDoc(evilWriter);\n      if (random().nextInt(17) == 0) {\n        evilWriter.commit();\n      }\n    }\n    evilWriter.deleteDocuments(new MatchAllDocsQuery());\n    evilWriter.forceMerge(1);\n    evilWriter.shutdown();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2165505a28a4f836f04ed5eb23bc64a6faae1b1e","date":1418824313,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriter#testMergeAllDeleted().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriter#testMergeAllDeleted().mjava","sourceNew":"  public void testMergeAllDeleted() throws IOException {\n    Directory dir = newDirectory();\n    IndexWriterConfig iwc = newIndexWriterConfig(new MockAnalyzer(random()));\n    final SetOnce<IndexWriter> iwRef = new SetOnce<>();\n    IndexWriter evilWriter = RandomIndexWriter.mockIndexWriter(dir, iwc, new RandomIndexWriter.TestPoint() {\n      @Override\n      public void apply(String message) {\n        if (\"startCommitMerge\".equals(message)) {\n          iwRef.get().setKeepFullyDeletedSegments(false);\n        } else if (\"startMergeInit\".equals(message)) {\n          iwRef.get().setKeepFullyDeletedSegments(true);\n        }\n      }\n    });\n    iwRef.set(evilWriter);\n    for (int i = 0; i < 1000; i++) {\n      addDoc(evilWriter);\n      if (random().nextInt(17) == 0) {\n        evilWriter.commit();\n      }\n    }\n    evilWriter.deleteDocuments(new MatchAllDocsQuery());\n    evilWriter.forceMerge(1);\n    evilWriter.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testMergeAllDeleted() throws IOException {\n    Directory dir = newDirectory();\n    IndexWriterConfig iwc = newIndexWriterConfig(new MockAnalyzer(random()));\n    final SetOnce<IndexWriter> iwRef = new SetOnce<>();\n    iwc.setInfoStream(new RandomIndexWriter.TestPointInfoStream(iwc.getInfoStream(), new RandomIndexWriter.TestPoint() {\n      @Override\n      public void apply(String message) {\n        if (\"startCommitMerge\".equals(message)) {\n          iwRef.get().setKeepFullyDeletedSegments(false);\n        } else if (\"startMergeInit\".equals(message)) {\n          iwRef.get().setKeepFullyDeletedSegments(true);\n        }\n      }\n    }));\n    IndexWriter evilWriter = new IndexWriter(dir, iwc);\n    iwRef.set(evilWriter);\n    for (int i = 0; i < 1000; i++) {\n      addDoc(evilWriter);\n      if (random().nextInt(17) == 0) {\n        evilWriter.commit();\n      }\n    }\n    evilWriter.deleteDocuments(new MatchAllDocsQuery());\n    evilWriter.forceMerge(1);\n    evilWriter.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a6b82a3644db30161c3cbd3e23aeefe19cb88113","date":1435478870,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriter#testMergeAllDeleted().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriter#testMergeAllDeleted().mjava","sourceNew":"  public void testMergeAllDeleted() throws IOException {\n    Directory dir = newDirectory();\n    IndexWriterConfig iwc = newIndexWriterConfig(new MockAnalyzer(random()));\n    final SetOnce<IndexWriter> iwRef = new SetOnce<>();\n    IndexWriter evilWriter = RandomIndexWriter.mockIndexWriter(random(), dir, iwc, new RandomIndexWriter.TestPoint() {\n      @Override\n      public void apply(String message) {\n        if (\"startCommitMerge\".equals(message)) {\n          iwRef.get().setKeepFullyDeletedSegments(false);\n        } else if (\"startMergeInit\".equals(message)) {\n          iwRef.get().setKeepFullyDeletedSegments(true);\n        }\n      }\n    });\n    iwRef.set(evilWriter);\n    for (int i = 0; i < 1000; i++) {\n      addDoc(evilWriter);\n      if (random().nextInt(17) == 0) {\n        evilWriter.commit();\n      }\n    }\n    evilWriter.deleteDocuments(new MatchAllDocsQuery());\n    evilWriter.forceMerge(1);\n    evilWriter.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testMergeAllDeleted() throws IOException {\n    Directory dir = newDirectory();\n    IndexWriterConfig iwc = newIndexWriterConfig(new MockAnalyzer(random()));\n    final SetOnce<IndexWriter> iwRef = new SetOnce<>();\n    IndexWriter evilWriter = RandomIndexWriter.mockIndexWriter(dir, iwc, new RandomIndexWriter.TestPoint() {\n      @Override\n      public void apply(String message) {\n        if (\"startCommitMerge\".equals(message)) {\n          iwRef.get().setKeepFullyDeletedSegments(false);\n        } else if (\"startMergeInit\".equals(message)) {\n          iwRef.get().setKeepFullyDeletedSegments(true);\n        }\n      }\n    });\n    iwRef.set(evilWriter);\n    for (int i = 0; i < 1000; i++) {\n      addDoc(evilWriter);\n      if (random().nextInt(17) == 0) {\n        evilWriter.commit();\n      }\n    }\n    evilWriter.deleteDocuments(new MatchAllDocsQuery());\n    evilWriter.forceMerge(1);\n    evilWriter.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5ee0394b8176abd7c90a4be8c05465be1879db79","date":1522842314,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriter#testMergeAllDeleted().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriter#testMergeAllDeleted().mjava","sourceNew":"  public void testMergeAllDeleted() throws IOException {\n    Directory dir = newDirectory();\n    IndexWriterConfig iwc = newIndexWriterConfig(new MockAnalyzer(random()));\n    AtomicBoolean keepFullyDeletedSegments = new AtomicBoolean();\n    iwc.setMergePolicy(new MergePolicyWrapper(iwc.getMergePolicy()) {\n      @Override\n      public boolean keepFullyDeletedSegment(CodecReader reader) throws IOException {\n        return keepFullyDeletedSegments.get();\n      }\n    });\n    final SetOnce<IndexWriter> iwRef = new SetOnce<>();\n    IndexWriter evilWriter = RandomIndexWriter.mockIndexWriter(random(), dir, iwc, new RandomIndexWriter.TestPoint() {\n      @Override\n      public void apply(String message) {\n        if (\"startCommitMerge\".equals(message)) {\n          keepFullyDeletedSegments.set(false);\n        } else if (\"startMergeInit\".equals(message)) {\n          keepFullyDeletedSegments.set(true);\n        }\n      }\n    });\n    iwRef.set(evilWriter);\n    for (int i = 0; i < 1000; i++) {\n      addDoc(evilWriter);\n      if (random().nextInt(17) == 0) {\n        evilWriter.commit();\n      }\n    }\n    evilWriter.deleteDocuments(new MatchAllDocsQuery());\n    evilWriter.forceMerge(1);\n    evilWriter.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testMergeAllDeleted() throws IOException {\n    Directory dir = newDirectory();\n    IndexWriterConfig iwc = newIndexWriterConfig(new MockAnalyzer(random()));\n    final SetOnce<IndexWriter> iwRef = new SetOnce<>();\n    IndexWriter evilWriter = RandomIndexWriter.mockIndexWriter(random(), dir, iwc, new RandomIndexWriter.TestPoint() {\n      @Override\n      public void apply(String message) {\n        if (\"startCommitMerge\".equals(message)) {\n          iwRef.get().setKeepFullyDeletedSegments(false);\n        } else if (\"startMergeInit\".equals(message)) {\n          iwRef.get().setKeepFullyDeletedSegments(true);\n        }\n      }\n    });\n    iwRef.set(evilWriter);\n    for (int i = 0; i < 1000; i++) {\n      addDoc(evilWriter);\n      if (random().nextInt(17) == 0) {\n        evilWriter.commit();\n      }\n    }\n    evilWriter.deleteDocuments(new MatchAllDocsQuery());\n    evilWriter.forceMerge(1);\n    evilWriter.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":["15e716649e2bd79a98b5e68c464154ea4c44677a"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"6bca5135c8cc6e6cd90c5f6f451ff7445dd4f7d8","date":1523648719,"type":3,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriter#testMergeAllDeleted().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriter#testMergeAllDeleted().mjava","sourceNew":"  public void testMergeAllDeleted() throws IOException {\n    Directory dir = newDirectory();\n    IndexWriterConfig iwc = newIndexWriterConfig(new MockAnalyzer(random()));\n    AtomicBoolean keepFullyDeletedSegments = new AtomicBoolean();\n    iwc.setMergePolicy(new FilterMergePolicy(iwc.getMergePolicy()) {\n      @Override\n      public boolean keepFullyDeletedSegment(CodecReader reader) throws IOException {\n        return keepFullyDeletedSegments.get();\n      }\n    });\n    final SetOnce<IndexWriter> iwRef = new SetOnce<>();\n    IndexWriter evilWriter = RandomIndexWriter.mockIndexWriter(random(), dir, iwc, new RandomIndexWriter.TestPoint() {\n      @Override\n      public void apply(String message) {\n        if (\"startCommitMerge\".equals(message)) {\n          keepFullyDeletedSegments.set(false);\n        } else if (\"startMergeInit\".equals(message)) {\n          keepFullyDeletedSegments.set(true);\n        }\n      }\n    });\n    iwRef.set(evilWriter);\n    for (int i = 0; i < 1000; i++) {\n      addDoc(evilWriter);\n      if (random().nextInt(17) == 0) {\n        evilWriter.commit();\n      }\n    }\n    evilWriter.deleteDocuments(new MatchAllDocsQuery());\n    evilWriter.forceMerge(1);\n    evilWriter.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testMergeAllDeleted() throws IOException {\n    Directory dir = newDirectory();\n    IndexWriterConfig iwc = newIndexWriterConfig(new MockAnalyzer(random()));\n    AtomicBoolean keepFullyDeletedSegments = new AtomicBoolean();\n    iwc.setMergePolicy(new MergePolicyWrapper(iwc.getMergePolicy()) {\n      @Override\n      public boolean keepFullyDeletedSegment(CodecReader reader) throws IOException {\n        return keepFullyDeletedSegments.get();\n      }\n    });\n    final SetOnce<IndexWriter> iwRef = new SetOnce<>();\n    IndexWriter evilWriter = RandomIndexWriter.mockIndexWriter(random(), dir, iwc, new RandomIndexWriter.TestPoint() {\n      @Override\n      public void apply(String message) {\n        if (\"startCommitMerge\".equals(message)) {\n          keepFullyDeletedSegments.set(false);\n        } else if (\"startMergeInit\".equals(message)) {\n          keepFullyDeletedSegments.set(true);\n        }\n      }\n    });\n    iwRef.set(evilWriter);\n    for (int i = 0; i < 1000; i++) {\n      addDoc(evilWriter);\n      if (random().nextInt(17) == 0) {\n        evilWriter.commit();\n      }\n    }\n    evilWriter.deleteDocuments(new MatchAllDocsQuery());\n    evilWriter.forceMerge(1);\n    evilWriter.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"15e716649e2bd79a98b5e68c464154ea4c44677a","date":1523975212,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriter#testMergeAllDeleted().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriter#testMergeAllDeleted().mjava","sourceNew":"  public void testMergeAllDeleted() throws IOException {\n    Directory dir = newDirectory();\n    IndexWriterConfig iwc = newIndexWriterConfig(new MockAnalyzer(random()));\n    AtomicBoolean keepFullyDeletedSegments = new AtomicBoolean();\n    iwc.setMergePolicy(new FilterMergePolicy(iwc.getMergePolicy()) {\n      @Override\n      public boolean keepFullyDeletedSegment(IOSupplier<CodecReader> readerIOSupplier) throws IOException {\n        return keepFullyDeletedSegments.get();\n      }\n    });\n    final SetOnce<IndexWriter> iwRef = new SetOnce<>();\n    IndexWriter evilWriter = RandomIndexWriter.mockIndexWriter(random(), dir, iwc, new RandomIndexWriter.TestPoint() {\n      @Override\n      public void apply(String message) {\n        if (\"startCommitMerge\".equals(message)) {\n          keepFullyDeletedSegments.set(false);\n        } else if (\"startMergeInit\".equals(message)) {\n          keepFullyDeletedSegments.set(true);\n        }\n      }\n    });\n    iwRef.set(evilWriter);\n    for (int i = 0; i < 1000; i++) {\n      addDoc(evilWriter);\n      if (random().nextInt(17) == 0) {\n        evilWriter.commit();\n      }\n    }\n    evilWriter.deleteDocuments(new MatchAllDocsQuery());\n    evilWriter.forceMerge(1);\n    evilWriter.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testMergeAllDeleted() throws IOException {\n    Directory dir = newDirectory();\n    IndexWriterConfig iwc = newIndexWriterConfig(new MockAnalyzer(random()));\n    AtomicBoolean keepFullyDeletedSegments = new AtomicBoolean();\n    iwc.setMergePolicy(new FilterMergePolicy(iwc.getMergePolicy()) {\n      @Override\n      public boolean keepFullyDeletedSegment(CodecReader reader) throws IOException {\n        return keepFullyDeletedSegments.get();\n      }\n    });\n    final SetOnce<IndexWriter> iwRef = new SetOnce<>();\n    IndexWriter evilWriter = RandomIndexWriter.mockIndexWriter(random(), dir, iwc, new RandomIndexWriter.TestPoint() {\n      @Override\n      public void apply(String message) {\n        if (\"startCommitMerge\".equals(message)) {\n          keepFullyDeletedSegments.set(false);\n        } else if (\"startMergeInit\".equals(message)) {\n          keepFullyDeletedSegments.set(true);\n        }\n      }\n    });\n    iwRef.set(evilWriter);\n    for (int i = 0; i < 1000; i++) {\n      addDoc(evilWriter);\n      if (random().nextInt(17) == 0) {\n        evilWriter.commit();\n      }\n    }\n    evilWriter.deleteDocuments(new MatchAllDocsQuery());\n    evilWriter.forceMerge(1);\n    evilWriter.close();\n    dir.close();\n  }\n\n","bugFix":["5ee0394b8176abd7c90a4be8c05465be1879db79"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"6bca5135c8cc6e6cd90c5f6f451ff7445dd4f7d8":["5ee0394b8176abd7c90a4be8c05465be1879db79"],"634f330c54fd3f9f491d52036dc3f40b4f4d8934":["0859dec0aa7a485aa0081147f533c5987b4b47ac"],"54a6bea0b991120a99ad0e2f72ae853fd5ecae0e":["ae14298f4eec6d5faee6a149f88ba57d14a6f21a"],"0859dec0aa7a485aa0081147f533c5987b4b47ac":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"3dffec77fb8f7d0e9ca4869dddd6af94528b4576":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","0859dec0aa7a485aa0081147f533c5987b4b47ac"],"5ee0394b8176abd7c90a4be8c05465be1879db79":["a6b82a3644db30161c3cbd3e23aeefe19cb88113"],"2165505a28a4f836f04ed5eb23bc64a6faae1b1e":["d0ef034a4f10871667ae75181537775ddcf8ade4"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"d0ef034a4f10871667ae75181537775ddcf8ade4":["54a6bea0b991120a99ad0e2f72ae853fd5ecae0e"],"15e716649e2bd79a98b5e68c464154ea4c44677a":["6bca5135c8cc6e6cd90c5f6f451ff7445dd4f7d8"],"a6b82a3644db30161c3cbd3e23aeefe19cb88113":["2165505a28a4f836f04ed5eb23bc64a6faae1b1e"],"ae14298f4eec6d5faee6a149f88ba57d14a6f21a":["634f330c54fd3f9f491d52036dc3f40b4f4d8934"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["15e716649e2bd79a98b5e68c464154ea4c44677a"]},"commit2Childs":{"6bca5135c8cc6e6cd90c5f6f451ff7445dd4f7d8":["15e716649e2bd79a98b5e68c464154ea4c44677a"],"634f330c54fd3f9f491d52036dc3f40b4f4d8934":["ae14298f4eec6d5faee6a149f88ba57d14a6f21a"],"54a6bea0b991120a99ad0e2f72ae853fd5ecae0e":["d0ef034a4f10871667ae75181537775ddcf8ade4"],"0859dec0aa7a485aa0081147f533c5987b4b47ac":["634f330c54fd3f9f491d52036dc3f40b4f4d8934","3dffec77fb8f7d0e9ca4869dddd6af94528b4576"],"3dffec77fb8f7d0e9ca4869dddd6af94528b4576":[],"5ee0394b8176abd7c90a4be8c05465be1879db79":["6bca5135c8cc6e6cd90c5f6f451ff7445dd4f7d8"],"2165505a28a4f836f04ed5eb23bc64a6faae1b1e":["a6b82a3644db30161c3cbd3e23aeefe19cb88113"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["0859dec0aa7a485aa0081147f533c5987b4b47ac","3dffec77fb8f7d0e9ca4869dddd6af94528b4576"],"d0ef034a4f10871667ae75181537775ddcf8ade4":["2165505a28a4f836f04ed5eb23bc64a6faae1b1e"],"15e716649e2bd79a98b5e68c464154ea4c44677a":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"ae14298f4eec6d5faee6a149f88ba57d14a6f21a":["54a6bea0b991120a99ad0e2f72ae853fd5ecae0e"],"a6b82a3644db30161c3cbd3e23aeefe19cb88113":["5ee0394b8176abd7c90a4be8c05465be1879db79"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["3dffec77fb8f7d0e9ca4869dddd6af94528b4576","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}