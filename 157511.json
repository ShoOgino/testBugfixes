{"path":"lucene/src/java/org/apache/lucene/search/FieldCacheImpl.DocTermsIndexImpl.DocTermsIndexEnum#seekCeil(BytesRef,boolean).mjava","commits":[{"id":"382fe3a6ca9745891afebda9b9a57cc158305545","date":1320952430,"type":1,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/search/FieldCacheImpl.DocTermsIndexImpl.DocTermsIndexEnum#seekCeil(BytesRef,boolean).mjava","pathOld":"lucene/src/java/org/apache/lucene/search/cache/DocTermsIndexCreator.DocTermsIndexImpl.DocTermsIndexEnum#seekCeil(BytesRef,boolean).mjava","sourceNew":"      @Override\n      public SeekStatus seekCeil(BytesRef text, boolean useCache /* ignored */) throws IOException {\n        int low = 1;\n        int high = numOrd-1;\n        \n        while (low <= high) {\n          int mid = (low + high) >>> 1;\n          seekExact(mid);\n          int cmp = term.compareTo(text);\n\n          if (cmp < 0)\n            low = mid + 1;\n          else if (cmp > 0)\n            high = mid - 1;\n          else\n            return SeekStatus.FOUND; // key found\n        }\n        \n        if (low == numOrd) {\n          return SeekStatus.END;\n        } else {\n          seekExact(low);\n          return SeekStatus.NOT_FOUND;\n        }\n      }\n\n","sourceOld":"      @Override\n      public SeekStatus seekCeil(BytesRef text, boolean useCache /* ignored */) throws IOException {\n        int low = 1;\n        int high = numOrd-1;\n        \n        while (low <= high) {\n          int mid = (low + high) >>> 1;\n          seekExact(mid);\n          int cmp = term.compareTo(text);\n\n          if (cmp < 0)\n            low = mid + 1;\n          else if (cmp > 0)\n            high = mid - 1;\n          else\n            return SeekStatus.FOUND; // key found\n        }\n        \n        if (low == numOrd) {\n          return SeekStatus.END;\n        } else {\n          seekExact(low);\n          return SeekStatus.NOT_FOUND;\n        }\n      }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":5,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/FieldCacheImpl.DocTermsIndexImpl.DocTermsIndexEnum#seekCeil(BytesRef,boolean).mjava","pathOld":"lucene/src/java/org/apache/lucene/search/FieldCacheImpl.DocTermsIndexImpl.DocTermsIndexEnum#seekCeil(BytesRef,boolean).mjava","sourceNew":"      @Override\n      public SeekStatus seekCeil(BytesRef text, boolean useCache /* ignored */) throws IOException {\n        int low = 1;\n        int high = numOrd-1;\n        \n        while (low <= high) {\n          int mid = (low + high) >>> 1;\n          seekExact(mid);\n          int cmp = term.compareTo(text);\n\n          if (cmp < 0)\n            low = mid + 1;\n          else if (cmp > 0)\n            high = mid - 1;\n          else\n            return SeekStatus.FOUND; // key found\n        }\n        \n        if (low == numOrd) {\n          return SeekStatus.END;\n        } else {\n          seekExact(low);\n          return SeekStatus.NOT_FOUND;\n        }\n      }\n\n","sourceOld":"      @Override\n      public SeekStatus seekCeil(BytesRef text, boolean useCache /* ignored */) throws IOException {\n        int low = 1;\n        int high = numOrd-1;\n        \n        while (low <= high) {\n          int mid = (low + high) >>> 1;\n          seekExact(mid);\n          int cmp = term.compareTo(text);\n\n          if (cmp < 0)\n            low = mid + 1;\n          else if (cmp > 0)\n            high = mid - 1;\n          else\n            return SeekStatus.FOUND; // key found\n        }\n        \n        if (low == numOrd) {\n          return SeekStatus.END;\n        } else {\n          seekExact(low);\n          return SeekStatus.NOT_FOUND;\n        }\n      }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["382fe3a6ca9745891afebda9b9a57cc158305545"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"382fe3a6ca9745891afebda9b9a57cc158305545":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"]},"commit2Childs":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["382fe3a6ca9745891afebda9b9a57cc158305545"],"382fe3a6ca9745891afebda9b9a57cc158305545":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}