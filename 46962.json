{"path":"lucene/core/src/test/org/apache/lucene/search/TestAutomatonQueryUnicode#assertAutomatonHits(int,LightAutomaton).mjava","commits":[{"id":"ac34f0c5bb9274821fb0cb18075234e02002e9bf","date":1402508126,"type":1,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestAutomatonQueryUnicode#assertAutomatonHits(int,LightAutomaton).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestAutomatonQueryUnicode#assertAutomatonHits(int,Automaton).mjava","sourceNew":"  private void assertAutomatonHits(int expected, LightAutomaton automaton)\n      throws IOException {\n    AutomatonQuery query = new AutomatonQuery(newTerm(\"bogus\"), automaton);\n\n    query.setRewriteMethod(MultiTermQuery.SCORING_BOOLEAN_QUERY_REWRITE);\n    assertEquals(expected, automatonQueryNrHits(query));\n\n    query.setRewriteMethod(MultiTermQuery.CONSTANT_SCORE_FILTER_REWRITE);\n    assertEquals(expected, automatonQueryNrHits(query));\n\n    query.setRewriteMethod(MultiTermQuery.CONSTANT_SCORE_BOOLEAN_QUERY_REWRITE);\n    assertEquals(expected, automatonQueryNrHits(query));\n\n    query.setRewriteMethod(MultiTermQuery.CONSTANT_SCORE_AUTO_REWRITE_DEFAULT);\n    assertEquals(expected, automatonQueryNrHits(query));\n  }\n\n","sourceOld":"  private void assertAutomatonHits(int expected, Automaton automaton)\n      throws IOException {\n    AutomatonQuery query = new AutomatonQuery(newTerm(\"bogus\"), automaton);\n\n    query.setRewriteMethod(MultiTermQuery.SCORING_BOOLEAN_QUERY_REWRITE);\n    assertEquals(expected, automatonQueryNrHits(query));\n\n    query.setRewriteMethod(MultiTermQuery.CONSTANT_SCORE_FILTER_REWRITE);\n    assertEquals(expected, automatonQueryNrHits(query));\n\n    query.setRewriteMethod(MultiTermQuery.CONSTANT_SCORE_BOOLEAN_QUERY_REWRITE);\n    assertEquals(expected, automatonQueryNrHits(query));\n\n    query.setRewriteMethod(MultiTermQuery.CONSTANT_SCORE_AUTO_REWRITE_DEFAULT);\n    assertEquals(expected, automatonQueryNrHits(query));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4ca1c732df8923f5624f6c06b1dcca9e69d98c96","date":1402957391,"type":5,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestAutomatonQueryUnicode#assertAutomatonHits(int,Automaton).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestAutomatonQueryUnicode#assertAutomatonHits(int,LightAutomaton).mjava","sourceNew":"  private void assertAutomatonHits(int expected, Automaton automaton)\n      throws IOException {\n    AutomatonQuery query = new AutomatonQuery(newTerm(\"bogus\"), automaton);\n\n    query.setRewriteMethod(MultiTermQuery.SCORING_BOOLEAN_QUERY_REWRITE);\n    assertEquals(expected, automatonQueryNrHits(query));\n\n    query.setRewriteMethod(MultiTermQuery.CONSTANT_SCORE_FILTER_REWRITE);\n    assertEquals(expected, automatonQueryNrHits(query));\n\n    query.setRewriteMethod(MultiTermQuery.CONSTANT_SCORE_BOOLEAN_QUERY_REWRITE);\n    assertEquals(expected, automatonQueryNrHits(query));\n\n    query.setRewriteMethod(MultiTermQuery.CONSTANT_SCORE_AUTO_REWRITE_DEFAULT);\n    assertEquals(expected, automatonQueryNrHits(query));\n  }\n\n","sourceOld":"  private void assertAutomatonHits(int expected, LightAutomaton automaton)\n      throws IOException {\n    AutomatonQuery query = new AutomatonQuery(newTerm(\"bogus\"), automaton);\n\n    query.setRewriteMethod(MultiTermQuery.SCORING_BOOLEAN_QUERY_REWRITE);\n    assertEquals(expected, automatonQueryNrHits(query));\n\n    query.setRewriteMethod(MultiTermQuery.CONSTANT_SCORE_FILTER_REWRITE);\n    assertEquals(expected, automatonQueryNrHits(query));\n\n    query.setRewriteMethod(MultiTermQuery.CONSTANT_SCORE_BOOLEAN_QUERY_REWRITE);\n    assertEquals(expected, automatonQueryNrHits(query));\n\n    query.setRewriteMethod(MultiTermQuery.CONSTANT_SCORE_AUTO_REWRITE_DEFAULT);\n    assertEquals(expected, automatonQueryNrHits(query));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"4ca1c732df8923f5624f6c06b1dcca9e69d98c96":["ac34f0c5bb9274821fb0cb18075234e02002e9bf"],"ac34f0c5bb9274821fb0cb18075234e02002e9bf":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["ac34f0c5bb9274821fb0cb18075234e02002e9bf","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"4ca1c732df8923f5624f6c06b1dcca9e69d98c96":[],"ac34f0c5bb9274821fb0cb18075234e02002e9bf":["4ca1c732df8923f5624f6c06b1dcca9e69d98c96"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["4ca1c732df8923f5624f6c06b1dcca9e69d98c96","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}