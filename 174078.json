{"path":"lucene/queries/src/java/org/apache/lucene/queries/function/valuesource/ComparisonBoolFunction#getValues(Map[Object,Object],LeafReaderContext).mjava","commits":[{"id":"f95c0e33e58652b2a4d8560c8297dbe86ff5b1f2","date":1591961131,"type":1,"author":"Michael Sokolov","isMerge":false,"pathNew":"lucene/queries/src/java/org/apache/lucene/queries/function/valuesource/ComparisonBoolFunction#getValues(Map[Object,Object],LeafReaderContext).mjava","pathOld":"lucene/queries/src/java/org/apache/lucene/queries/function/valuesource/ComparisonBoolFunction#getValues(Map,LeafReaderContext).mjava","sourceNew":"  @Override\n  public FunctionValues getValues(Map<Object, Object> context, LeafReaderContext readerContext) throws IOException {\n    final FunctionValues lhsVal = this.lhs.getValues(context, readerContext);\n    final FunctionValues rhsVal = this.rhs.getValues(context, readerContext);\n    final String compLabel = this.name();\n\n    return new BoolDocValues(this) {\n      @Override\n      public boolean boolVal(int doc) throws IOException {\n        return compare(doc, lhsVal, rhsVal);\n      }\n\n      @Override\n      public String toString(int doc) throws IOException {\n        return compLabel + \"(\" + lhsVal.toString(doc) + \",\" + rhsVal.toString(doc) + \")\";\n      }\n\n      @Override\n      public boolean exists(int doc) throws IOException {\n        return lhsVal.exists(doc) && rhsVal.exists(doc);\n      }\n\n    };\n  }\n\n","sourceOld":"  @Override\n  public FunctionValues getValues(Map context, LeafReaderContext readerContext) throws IOException {\n    final FunctionValues lhsVal = this.lhs.getValues(context, readerContext);\n    final FunctionValues rhsVal = this.rhs.getValues(context, readerContext);\n    final String compLabel = this.name();\n\n    return new BoolDocValues(this) {\n      @Override\n      public boolean boolVal(int doc) throws IOException {\n        return compare(doc, lhsVal, rhsVal);\n      }\n\n      @Override\n      public String toString(int doc) throws IOException {\n        return compLabel + \"(\" + lhsVal.toString(doc) + \",\" + rhsVal.toString(doc) + \")\";\n      }\n\n      @Override\n      public boolean exists(int doc) throws IOException {\n        return lhsVal.exists(doc) && rhsVal.exists(doc);\n      }\n\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"f95c0e33e58652b2a4d8560c8297dbe86ff5b1f2":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["f95c0e33e58652b2a4d8560c8297dbe86ff5b1f2"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["f95c0e33e58652b2a4d8560c8297dbe86ff5b1f2"],"f95c0e33e58652b2a4d8560c8297dbe86ff5b1f2":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}