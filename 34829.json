{"path":"solr/core/src/java/org/apache/solr/search/QParser#getPaging().mjava","commits":[{"id":"50eb25774a5690a93352e49e7732b8008c5e681e","date":1328112094,"type":0,"author":"Grant Ingersoll","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/QParser#getPaging().mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * use common params to look up pageScore and pageDoc in global params\n   * @return the ScoreDoc\n   */\n  public ScoreDoc getPaging() throws ParseException\n  {\n\t  String pageScoreS = null;\n\t  String pageDocS = null;\n\t  \n\t  pageScoreS = params.get(CommonParams.PAGESCORE);\n\t  pageDocS = params.get(CommonParams.PAGEDOC);\n\t\t  \n\t  if (pageScoreS == null || pageDocS == null)\n\t\t  return null;\n\t  \n\t  int pageDoc = pageDocS != null ? Integer.parseInt(pageDocS) : -1;\n\t  float pageScore = pageScoreS != null ? new Float(pageScoreS) : -1;\n\t  if(pageDoc != -1 && pageScore != -1){\n      return new ScoreDoc(pageDoc, pageScore);\n    }\n\t  else {\n      return null;\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"28f769c762bf83c4a63b2b1277c74f3af56c2576","date":1328130924,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/QParser#getPaging().mjava","pathOld":"solr/core/src/java/org/apache/solr/search/QParser#getPaging().mjava","sourceNew":"  /**\n   * use common params to look up pageScore and pageDoc in global params\n   * @return the ScoreDoc\n   */\n  public ScoreDoc getPaging() throws ParseException\n  {\n    return null;\n\n    /*** This is not ready for prime-time... see SOLR-1726\n\n    String pageScoreS = null;\n    String pageDocS = null;\n\n\t  pageScoreS = params.get(CommonParams.PAGESCORE);\n\t  pageDocS = params.get(CommonParams.PAGEDOC);\n\t\t  \n\t  if (pageScoreS == null || pageDocS == null)\n\t\t  return null;\n\t  \n\t  int pageDoc = pageDocS != null ? Integer.parseInt(pageDocS) : -1;\n\t  float pageScore = pageScoreS != null ? new Float(pageScoreS) : -1;\n\t  if(pageDoc != -1 && pageScore != -1){\n      return new ScoreDoc(pageDoc, pageScore);\n    }\n\t  else {\n      return null;\n    }\n\n    ***/\n  }\n\n","sourceOld":"  /**\n   * use common params to look up pageScore and pageDoc in global params\n   * @return the ScoreDoc\n   */\n  public ScoreDoc getPaging() throws ParseException\n  {\n\t  String pageScoreS = null;\n\t  String pageDocS = null;\n\t  \n\t  pageScoreS = params.get(CommonParams.PAGESCORE);\n\t  pageDocS = params.get(CommonParams.PAGEDOC);\n\t\t  \n\t  if (pageScoreS == null || pageDocS == null)\n\t\t  return null;\n\t  \n\t  int pageDoc = pageDocS != null ? Integer.parseInt(pageDocS) : -1;\n\t  float pageScore = pageScoreS != null ? new Float(pageScoreS) : -1;\n\t  if(pageDoc != -1 && pageScore != -1){\n      return new ScoreDoc(pageDoc, pageScore);\n    }\n\t  else {\n      return null;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4093b270ba337f9c25a4c0e6cb2ae2c07f697376","date":1347897716,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/QParser#getPaging().mjava","pathOld":"solr/core/src/java/org/apache/solr/search/QParser#getPaging().mjava","sourceNew":"  /**\n   * use common params to look up pageScore and pageDoc in global params\n   * @return the ScoreDoc\n   */\n  public ScoreDoc getPaging() throws ParseException\n  {\n    return null;\n\n    /*** This is not ready for prime-time... see SOLR-1726\n\n    String pageScoreS = null;\n    String pageDocS = null;\n\n    pageScoreS = params.get(CommonParams.PAGESCORE);\n    pageDocS = params.get(CommonParams.PAGEDOC);\n\n    if (pageScoreS == null || pageDocS == null)\n      return null;\n\n    int pageDoc = pageDocS != null ? Integer.parseInt(pageDocS) : -1;\n    float pageScore = pageScoreS != null ? new Float(pageScoreS) : -1;\n    if(pageDoc != -1 && pageScore != -1){\n      return new ScoreDoc(pageDoc, pageScore);\n    }\n    else {\n      return null;\n    }\n\n    ***/\n  }\n\n","sourceOld":"  /**\n   * use common params to look up pageScore and pageDoc in global params\n   * @return the ScoreDoc\n   */\n  public ScoreDoc getPaging() throws ParseException\n  {\n    return null;\n\n    /*** This is not ready for prime-time... see SOLR-1726\n\n    String pageScoreS = null;\n    String pageDocS = null;\n\n\t  pageScoreS = params.get(CommonParams.PAGESCORE);\n\t  pageDocS = params.get(CommonParams.PAGEDOC);\n\t\t  \n\t  if (pageScoreS == null || pageDocS == null)\n\t\t  return null;\n\t  \n\t  int pageDoc = pageDocS != null ? Integer.parseInt(pageDocS) : -1;\n\t  float pageScore = pageScoreS != null ? new Float(pageScoreS) : -1;\n\t  if(pageDoc != -1 && pageScore != -1){\n      return new ScoreDoc(pageDoc, pageScore);\n    }\n\t  else {\n      return null;\n    }\n\n    ***/\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3cdb67100dc016748799a77218aa409478372d79","date":1353699950,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/QParser#getPaging().mjava","pathOld":"solr/core/src/java/org/apache/solr/search/QParser#getPaging().mjava","sourceNew":"  /**\n   * use common params to look up pageScore and pageDoc in global params\n   * @return the ScoreDoc\n   */\n  public ScoreDoc getPaging() throws SyntaxError\n  {\n    return null;\n\n    /*** This is not ready for prime-time... see SOLR-1726\n\n    String pageScoreS = null;\n    String pageDocS = null;\n\n    pageScoreS = params.get(CommonParams.PAGESCORE);\n    pageDocS = params.get(CommonParams.PAGEDOC);\n\n    if (pageScoreS == null || pageDocS == null)\n      return null;\n\n    int pageDoc = pageDocS != null ? Integer.parseInt(pageDocS) : -1;\n    float pageScore = pageScoreS != null ? new Float(pageScoreS) : -1;\n    if(pageDoc != -1 && pageScore != -1){\n      return new ScoreDoc(pageDoc, pageScore);\n    }\n    else {\n      return null;\n    }\n\n    ***/\n  }\n\n","sourceOld":"  /**\n   * use common params to look up pageScore and pageDoc in global params\n   * @return the ScoreDoc\n   */\n  public ScoreDoc getPaging() throws ParseException\n  {\n    return null;\n\n    /*** This is not ready for prime-time... see SOLR-1726\n\n    String pageScoreS = null;\n    String pageDocS = null;\n\n    pageScoreS = params.get(CommonParams.PAGESCORE);\n    pageDocS = params.get(CommonParams.PAGEDOC);\n\n    if (pageScoreS == null || pageDocS == null)\n      return null;\n\n    int pageDoc = pageDocS != null ? Integer.parseInt(pageDocS) : -1;\n    float pageScore = pageScoreS != null ? new Float(pageScoreS) : -1;\n    if(pageDoc != -1 && pageScore != -1){\n      return new ScoreDoc(pageDoc, pageScore);\n    }\n    else {\n      return null;\n    }\n\n    ***/\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"407687e67faf6e1f02a211ca078d8e3eed631027","date":1355157407,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/search/QParser#getPaging().mjava","pathOld":"solr/core/src/java/org/apache/solr/search/QParser#getPaging().mjava","sourceNew":"  /**\n   * use common params to look up pageScore and pageDoc in global params\n   * @return the ScoreDoc\n   */\n  public ScoreDoc getPaging() throws SyntaxError\n  {\n    return null;\n\n    /*** This is not ready for prime-time... see SOLR-1726\n\n    String pageScoreS = null;\n    String pageDocS = null;\n\n    pageScoreS = params.get(CommonParams.PAGESCORE);\n    pageDocS = params.get(CommonParams.PAGEDOC);\n\n    if (pageScoreS == null || pageDocS == null)\n      return null;\n\n    int pageDoc = pageDocS != null ? Integer.parseInt(pageDocS) : -1;\n    float pageScore = pageScoreS != null ? new Float(pageScoreS) : -1;\n    if(pageDoc != -1 && pageScore != -1){\n      return new ScoreDoc(pageDoc, pageScore);\n    }\n    else {\n      return null;\n    }\n\n    ***/\n  }\n\n","sourceOld":"  /**\n   * use common params to look up pageScore and pageDoc in global params\n   * @return the ScoreDoc\n   */\n  public ScoreDoc getPaging() throws ParseException\n  {\n    return null;\n\n    /*** This is not ready for prime-time... see SOLR-1726\n\n    String pageScoreS = null;\n    String pageDocS = null;\n\n    pageScoreS = params.get(CommonParams.PAGESCORE);\n    pageDocS = params.get(CommonParams.PAGEDOC);\n\n    if (pageScoreS == null || pageDocS == null)\n      return null;\n\n    int pageDoc = pageDocS != null ? Integer.parseInt(pageDocS) : -1;\n    float pageScore = pageScoreS != null ? new Float(pageScoreS) : -1;\n    if(pageDoc != -1 && pageScore != -1){\n      return new ScoreDoc(pageDoc, pageScore);\n    }\n    else {\n      return null;\n    }\n\n    ***/\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"19275ba31e621f6da1b83bf13af75233876fd3d4","date":1374846698,"type":3,"author":"Han Jiang","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/QParser#getPaging().mjava","pathOld":"solr/core/src/java/org/apache/solr/search/QParser#getPaging().mjava","sourceNew":"  /**\n   * use common params to look up pageScore and pageDoc in global params\n   * @return the ScoreDoc\n   */\n  public ScoreDoc getPaging() throws SyntaxError\n  {\n    return null;\n\n    /*** This is not ready for prime-time... see SOLR-1726\n\n    String pageScoreS = null;\n    String pageDocS = null;\n\n    pageScoreS = params.get(CommonParams.PAGESCORE);\n    pageDocS = params.get(CommonParams.PAGEDOC);\n\n    if (pageScoreS == null || pageDocS == null)\n      return null;\n\n    int pageDoc = pageDocS != null ? Integer.parseInt(pageDocS) : -1;\n    float pageScore = pageScoreS != null ? new Float(pageScoreS) : -1;\n    if(pageDoc != -1 && pageScore != -1){\n      return new ScoreDoc(pageDoc, pageScore);\n    }\n    else {\n      return null;\n    }\n\n    ***/\n  }\n\n","sourceOld":"  /**\n   * use common params to look up pageScore and pageDoc in global params\n   * @return the ScoreDoc\n   */\n  public ScoreDoc getPaging() throws SyntaxError\n  {\n    return null;\n\n    /*** This is not ready for prime-time... see SOLR-1726\n\n    String pageScoreS = null;\n    String pageDocS = null;\n\n    pageScoreS = params.get(CommonParams.PAGESCORE);\n    pageDocS = params.get(CommonParams.PAGEDOC);\n\n    if (pageScoreS == null || pageDocS == null)\n      return null;\n\n    int pageDoc = pageDocS != null ? Integer.parseInt(pageDocS) : -1;\n    float pageScore = pageScoreS != null ? new Float(pageScoreS) : -1;\n    if(pageDoc != -1 && pageScore != -1){\n      return new ScoreDoc(pageDoc, pageScore);\n    }\n    else {\n      return null;\n    }\n\n    ***/\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"716d18f3a9b0993bc679d7fa7abdc9bfb03411ec","date":1376375609,"type":3,"author":"Han Jiang","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/search/QParser#getPaging().mjava","pathOld":"solr/core/src/java/org/apache/solr/search/QParser#getPaging().mjava","sourceNew":"  /**\n   * use common params to look up pageScore and pageDoc in global params\n   * @return the ScoreDoc\n   */\n  public ScoreDoc getPaging() throws SyntaxError\n  {\n    return null;\n\n    /*** This is not ready for prime-time... see SOLR-1726\n\n    String pageScoreS = null;\n    String pageDocS = null;\n\n    pageScoreS = params.get(CommonParams.PAGESCORE);\n    pageDocS = params.get(CommonParams.PAGEDOC);\n\n    if (pageScoreS == null || pageDocS == null)\n      return null;\n\n    int pageDoc = pageDocS != null ? Integer.parseInt(pageDocS) : -1;\n    float pageScore = pageScoreS != null ? new Float(pageScoreS) : -1;\n    if(pageDoc != -1 && pageScore != -1){\n      return new ScoreDoc(pageDoc, pageScore);\n    }\n    else {\n      return null;\n    }\n\n    ***/\n  }\n\n","sourceOld":"  /**\n   * use common params to look up pageScore and pageDoc in global params\n   * @return the ScoreDoc\n   */\n  public ScoreDoc getPaging() throws SyntaxError\n  {\n    return null;\n\n    /*** This is not ready for prime-time... see SOLR-1726\n\n    String pageScoreS = null;\n    String pageDocS = null;\n\n    pageScoreS = params.get(CommonParams.PAGESCORE);\n    pageDocS = params.get(CommonParams.PAGEDOC);\n\n    if (pageScoreS == null || pageDocS == null)\n      return null;\n\n    int pageDoc = pageDocS != null ? Integer.parseInt(pageDocS) : -1;\n    float pageScore = pageScoreS != null ? new Float(pageScoreS) : -1;\n    if(pageDoc != -1 && pageScore != -1){\n      return new ScoreDoc(pageDoc, pageScore);\n    }\n    else {\n      return null;\n    }\n\n    ***/\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d5bc8e25f59990525f5beb14afe9c96240dcf4a2","date":1389042945,"type":4,"author":"Chris M. Hostetter","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/core/src/java/org/apache/solr/search/QParser#getPaging().mjava","sourceNew":null,"sourceOld":"  /**\n   * use common params to look up pageScore and pageDoc in global params\n   * @return the ScoreDoc\n   */\n  public ScoreDoc getPaging() throws SyntaxError\n  {\n    return null;\n\n    /*** This is not ready for prime-time... see SOLR-1726\n\n    String pageScoreS = null;\n    String pageDocS = null;\n\n    pageScoreS = params.get(CommonParams.PAGESCORE);\n    pageDocS = params.get(CommonParams.PAGEDOC);\n\n    if (pageScoreS == null || pageDocS == null)\n      return null;\n\n    int pageDoc = pageDocS != null ? Integer.parseInt(pageDocS) : -1;\n    float pageScore = pageScoreS != null ? new Float(pageScoreS) : -1;\n    if(pageDoc != -1 && pageScore != -1){\n      return new ScoreDoc(pageDoc, pageScore);\n    }\n    else {\n      return null;\n    }\n\n    ***/\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"716d18f3a9b0993bc679d7fa7abdc9bfb03411ec":["3cdb67100dc016748799a77218aa409478372d79","19275ba31e621f6da1b83bf13af75233876fd3d4"],"3cdb67100dc016748799a77218aa409478372d79":["4093b270ba337f9c25a4c0e6cb2ae2c07f697376"],"d5bc8e25f59990525f5beb14afe9c96240dcf4a2":["19275ba31e621f6da1b83bf13af75233876fd3d4"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"407687e67faf6e1f02a211ca078d8e3eed631027":["4093b270ba337f9c25a4c0e6cb2ae2c07f697376","3cdb67100dc016748799a77218aa409478372d79"],"19275ba31e621f6da1b83bf13af75233876fd3d4":["3cdb67100dc016748799a77218aa409478372d79"],"50eb25774a5690a93352e49e7732b8008c5e681e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"28f769c762bf83c4a63b2b1277c74f3af56c2576":["50eb25774a5690a93352e49e7732b8008c5e681e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["d5bc8e25f59990525f5beb14afe9c96240dcf4a2"],"4093b270ba337f9c25a4c0e6cb2ae2c07f697376":["28f769c762bf83c4a63b2b1277c74f3af56c2576"]},"commit2Childs":{"716d18f3a9b0993bc679d7fa7abdc9bfb03411ec":[],"3cdb67100dc016748799a77218aa409478372d79":["716d18f3a9b0993bc679d7fa7abdc9bfb03411ec","407687e67faf6e1f02a211ca078d8e3eed631027","19275ba31e621f6da1b83bf13af75233876fd3d4"],"d5bc8e25f59990525f5beb14afe9c96240dcf4a2":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["50eb25774a5690a93352e49e7732b8008c5e681e"],"407687e67faf6e1f02a211ca078d8e3eed631027":[],"19275ba31e621f6da1b83bf13af75233876fd3d4":["716d18f3a9b0993bc679d7fa7abdc9bfb03411ec","d5bc8e25f59990525f5beb14afe9c96240dcf4a2"],"50eb25774a5690a93352e49e7732b8008c5e681e":["28f769c762bf83c4a63b2b1277c74f3af56c2576"],"28f769c762bf83c4a63b2b1277c74f3af56c2576":["4093b270ba337f9c25a4c0e6cb2ae2c07f697376"],"4093b270ba337f9c25a4c0e6cb2ae2c07f697376":["3cdb67100dc016748799a77218aa409478372d79","407687e67faf6e1f02a211ca078d8e3eed631027"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["716d18f3a9b0993bc679d7fa7abdc9bfb03411ec","407687e67faf6e1f02a211ca078d8e3eed631027","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}