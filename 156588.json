{"path":"solr/core/src/test/org/apache/solr/TestGroupingSearch#testGroupingWithTimeAllowed().mjava","commits":[{"id":"a250ecd3e83b1c6595bcae0474f5b258df42021b","date":1330943490,"type":0,"author":"Martijn van Groningen","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/TestGroupingSearch#testGroupingWithTimeAllowed().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testGroupingWithTimeAllowed() throws Exception {\n    assertU(add(doc(\"id\", \"1\")));\n    assertU(add(doc(\"id\", \"2\")));\n    assertU(add(doc(\"id\", \"3\")));\n    assertU(add(doc(\"id\", \"4\")));\n    assertU(add(doc(\"id\", \"5\")));\n    assertU(commit());\n\n    // Just checking if no errors occur\n    assertJQ(req(\"q\", \"*:*\", \"group\", \"true\", \"group.query\", \"id:1\", \"group.query\", \"id:2\", \"timeAllowed\", \"1\"));\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab","date":1331075828,"type":0,"author":"Ryan McKinley","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/TestGroupingSearch#testGroupingWithTimeAllowed().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testGroupingWithTimeAllowed() throws Exception {\n    assertU(add(doc(\"id\", \"1\")));\n    assertU(add(doc(\"id\", \"2\")));\n    assertU(add(doc(\"id\", \"3\")));\n    assertU(add(doc(\"id\", \"4\")));\n    assertU(add(doc(\"id\", \"5\")));\n    assertU(commit());\n\n    // Just checking if no errors occur\n    assertJQ(req(\"q\", \"*:*\", \"group\", \"true\", \"group.query\", \"id:1\", \"group.query\", \"id:2\", \"timeAllowed\", \"1\"));\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"eb9e4cb185078b4e99e3b7070abb77eb2cdfaf6e","date":1411674127,"type":3,"author":"Anshum Gupta","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/TestGroupingSearch#testGroupingWithTimeAllowed().mjava","pathOld":"solr/core/src/test/org/apache/solr/TestGroupingSearch#testGroupingWithTimeAllowed().mjava","sourceNew":"  @Test\n  public void testGroupingWithTimeAllowed() throws Exception {\n    assertU(add(doc(\"id\", \"1\")));\n    assertU(add(doc(\"id\", \"2\")));\n    assertU(add(doc(\"id\", \"3\")));\n    assertU(add(doc(\"id\", \"4\")));\n    assertU(add(doc(\"id\", \"5\")));\n    assertU(commit());\n\n    // Just checking if no errors occur\n    // TODO: Check if this makes any sense now that timeAllowed is also used during Terms enumeration.\n    //       The query can potentially timeout iterating over terms if this is set to too low.\n    assertJQ(req(\"q\", \"*:*\", \"group\", \"true\", \"group.query\", \"id:1\", \"group.query\", \"id:2\", \"timeAllowed\", \"100\"));\n  }\n\n","sourceOld":"  @Test\n  public void testGroupingWithTimeAllowed() throws Exception {\n    assertU(add(doc(\"id\", \"1\")));\n    assertU(add(doc(\"id\", \"2\")));\n    assertU(add(doc(\"id\", \"3\")));\n    assertU(add(doc(\"id\", \"4\")));\n    assertU(add(doc(\"id\", \"5\")));\n    assertU(commit());\n\n    // Just checking if no errors occur\n    assertJQ(req(\"q\", \"*:*\", \"group\", \"true\", \"group.query\", \"id:1\", \"group.query\", \"id:2\", \"timeAllowed\", \"1\"));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"da951a24a6a87d5ba7e1820f8c28a1e2beea76c1","date":1411744836,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/TestGroupingSearch#testGroupingWithTimeAllowed().mjava","pathOld":"solr/core/src/test/org/apache/solr/TestGroupingSearch#testGroupingWithTimeAllowed().mjava","sourceNew":"  @Test\n  public void testGroupingWithTimeAllowed() throws Exception {\n    assertU(add(doc(\"id\", \"1\")));\n    assertU(add(doc(\"id\", \"2\")));\n    assertU(add(doc(\"id\", \"3\")));\n    assertU(add(doc(\"id\", \"4\")));\n    assertU(add(doc(\"id\", \"5\")));\n    assertU(commit());\n\n    // Just checking if no errors occur\n    // TODO: Check if this makes any sense now that timeAllowed is also used during Terms enumeration.\n    //       The query can potentially timeout iterating over terms if this is set to too low.\n    assertJQ(req(\"q\", \"*:*\", \"group\", \"true\", \"group.query\", \"id:1\", \"group.query\", \"id:2\", \"timeAllowed\", \"100\"));\n  }\n\n","sourceOld":"  @Test\n  public void testGroupingWithTimeAllowed() throws Exception {\n    assertU(add(doc(\"id\", \"1\")));\n    assertU(add(doc(\"id\", \"2\")));\n    assertU(add(doc(\"id\", \"3\")));\n    assertU(add(doc(\"id\", \"4\")));\n    assertU(add(doc(\"id\", \"5\")));\n    assertU(commit());\n\n    // Just checking if no errors occur\n    assertJQ(req(\"q\", \"*:*\", \"group\", \"true\", \"group.query\", \"id:1\", \"group.query\", \"id:2\", \"timeAllowed\", \"1\"));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2ebfbcc3a31d30477467bb6438df50011e620dda","date":1413087360,"type":3,"author":"Anshum Gupta","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/TestGroupingSearch#testGroupingWithTimeAllowed().mjava","pathOld":"solr/core/src/test/org/apache/solr/TestGroupingSearch#testGroupingWithTimeAllowed().mjava","sourceNew":"  @Test\n  public void testGroupingWithTimeAllowed() throws Exception {\n    assertU(add(doc(\"id\", \"1\")));\n    assertU(add(doc(\"id\", \"2\")));\n    assertU(add(doc(\"id\", \"3\")));\n    assertU(add(doc(\"id\", \"4\")));\n    assertU(add(doc(\"id\", \"5\")));\n    assertU(commit());\n\n    // Just checking if no errors occur\n    assertJQ(req(\"q\", \"*:*\", \"group\", \"true\", \"group.query\", \"id:1\", \"group.query\", \"id:2\", \"timeAllowed\", \"1\"));\n  }\n\n","sourceOld":"  @Test\n  public void testGroupingWithTimeAllowed() throws Exception {\n    assertU(add(doc(\"id\", \"1\")));\n    assertU(add(doc(\"id\", \"2\")));\n    assertU(add(doc(\"id\", \"3\")));\n    assertU(add(doc(\"id\", \"4\")));\n    assertU(add(doc(\"id\", \"5\")));\n    assertU(commit());\n\n    // Just checking if no errors occur\n    // TODO: Check if this makes any sense now that timeAllowed is also used during Terms enumeration.\n    //       The query can potentially timeout iterating over terms if this is set to too low.\n    assertJQ(req(\"q\", \"*:*\", \"group\", \"true\", \"group.query\", \"id:1\", \"group.query\", \"id:2\", \"timeAllowed\", \"100\"));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"55980207f1977bd1463465de1659b821347e2fa8","date":1413336386,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/TestGroupingSearch#testGroupingWithTimeAllowed().mjava","pathOld":"solr/core/src/test/org/apache/solr/TestGroupingSearch#testGroupingWithTimeAllowed().mjava","sourceNew":"  @Test\n  public void testGroupingWithTimeAllowed() throws Exception {\n    assertU(add(doc(\"id\", \"1\")));\n    assertU(add(doc(\"id\", \"2\")));\n    assertU(add(doc(\"id\", \"3\")));\n    assertU(add(doc(\"id\", \"4\")));\n    assertU(add(doc(\"id\", \"5\")));\n    assertU(commit());\n\n    // Just checking if no errors occur\n    assertJQ(req(\"q\", \"*:*\", \"group\", \"true\", \"group.query\", \"id:1\", \"group.query\", \"id:2\", \"timeAllowed\", \"1\"));\n  }\n\n","sourceOld":"  @Test\n  public void testGroupingWithTimeAllowed() throws Exception {\n    assertU(add(doc(\"id\", \"1\")));\n    assertU(add(doc(\"id\", \"2\")));\n    assertU(add(doc(\"id\", \"3\")));\n    assertU(add(doc(\"id\", \"4\")));\n    assertU(add(doc(\"id\", \"5\")));\n    assertU(commit());\n\n    // Just checking if no errors occur\n    // TODO: Check if this makes any sense now that timeAllowed is also used during Terms enumeration.\n    //       The query can potentially timeout iterating over terms if this is set to too low.\n    assertJQ(req(\"q\", \"*:*\", \"group\", \"true\", \"group.query\", \"id:1\", \"group.query\", \"id:2\", \"timeAllowed\", \"100\"));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"eb9e4cb185078b4e99e3b7070abb77eb2cdfaf6e":["a250ecd3e83b1c6595bcae0474f5b258df42021b"],"55980207f1977bd1463465de1659b821347e2fa8":["da951a24a6a87d5ba7e1820f8c28a1e2beea76c1","2ebfbcc3a31d30477467bb6438df50011e620dda"],"da951a24a6a87d5ba7e1820f8c28a1e2beea76c1":["a250ecd3e83b1c6595bcae0474f5b258df42021b","eb9e4cb185078b4e99e3b7070abb77eb2cdfaf6e"],"9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","a250ecd3e83b1c6595bcae0474f5b258df42021b"],"a250ecd3e83b1c6595bcae0474f5b258df42021b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"2ebfbcc3a31d30477467bb6438df50011e620dda":["eb9e4cb185078b4e99e3b7070abb77eb2cdfaf6e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["2ebfbcc3a31d30477467bb6438df50011e620dda"]},"commit2Childs":{"eb9e4cb185078b4e99e3b7070abb77eb2cdfaf6e":["da951a24a6a87d5ba7e1820f8c28a1e2beea76c1","2ebfbcc3a31d30477467bb6438df50011e620dda"],"55980207f1977bd1463465de1659b821347e2fa8":[],"da951a24a6a87d5ba7e1820f8c28a1e2beea76c1":["55980207f1977bd1463465de1659b821347e2fa8"],"9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab":[],"a250ecd3e83b1c6595bcae0474f5b258df42021b":["eb9e4cb185078b4e99e3b7070abb77eb2cdfaf6e","da951a24a6a87d5ba7e1820f8c28a1e2beea76c1","9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab","a250ecd3e83b1c6595bcae0474f5b258df42021b"],"2ebfbcc3a31d30477467bb6438df50011e620dda":["55980207f1977bd1463465de1659b821347e2fa8","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["55980207f1977bd1463465de1659b821347e2fa8","9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}