{"path":"solr/core/src/java/org/apache/solr/servlet/HttpSolrCall#extractRemotePath(String,String,int).mjava","commits":[{"id":"a760e2135dfe20a04dea360873d4de1c6a0280bb","date":1430762855,"type":0,"author":"Anshum Gupta","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/servlet/HttpSolrCall#extractRemotePath(String,String,int).mjava","pathOld":"/dev/null","sourceNew":"  private void extractRemotePath(String corename, String origCorename, int idx) throws UnsupportedEncodingException, KeeperException, InterruptedException {\n    if (core == null && idx > 0) {\n      coreUrl = getRemotCoreUrl(corename, origCorename);\n      // don't proxy for internal update requests\n      invalidStates = checkStateIsValid(queryParams.get(CloudSolrClient.STATE_VERSION));\n      if (coreUrl != null\n          && queryParams\n          .get(DistributingUpdateProcessorFactory.DISTRIB_UPDATE_PARAM) == null) {\n        path = path.substring(idx);\n        if (invalidStates != null) {\n          //it does not make sense to send the request to a remote node\n          throw new SolrException(SolrException.ErrorCode.INVALID_STATE, new String(ZkStateReader.toJSON(invalidStates), org.apache.lucene.util.IOUtils.UTF_8));\n        }\n        action = REMOTEQUERY;\n      } else {\n        if (!retry) {\n          // we couldn't find a core to work with, try reloading aliases\n          // TODO: it would be nice if admin ui elements skipped this...\n          ZkStateReader reader = cores.getZkController()\n              .getZkStateReader();\n          reader.updateAliases();\n          action = RETRY;\n        }\n      }\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b693a83132c9e45afcd564fd65a25b60ed80388b","date":1436882146,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/servlet/HttpSolrCall#extractRemotePath(String,String,int).mjava","pathOld":"solr/core/src/java/org/apache/solr/servlet/HttpSolrCall#extractRemotePath(String,String,int).mjava","sourceNew":"  private void extractRemotePath(String corename, String origCorename, int idx) throws UnsupportedEncodingException, KeeperException, InterruptedException {\n    if (core == null && idx > 0) {\n      coreUrl = getRemotCoreUrl(corename, origCorename);\n      // don't proxy for internal update requests\n      invalidStates = checkStateIsValid(queryParams.get(CloudSolrClient.STATE_VERSION));\n      if (coreUrl != null\n          && queryParams\n          .get(DistributingUpdateProcessorFactory.DISTRIB_UPDATE_PARAM) == null) {\n        path = path.substring(idx);\n        if (invalidStates != null) {\n          //it does not make sense to send the request to a remote node\n          throw new SolrException(SolrException.ErrorCode.INVALID_STATE, new String(Utils.toJSON(invalidStates), org.apache.lucene.util.IOUtils.UTF_8));\n        }\n        action = REMOTEQUERY;\n      } else {\n        if (!retry) {\n          // we couldn't find a core to work with, try reloading aliases\n          // TODO: it would be nice if admin ui elements skipped this...\n          ZkStateReader reader = cores.getZkController()\n              .getZkStateReader();\n          reader.updateAliases();\n          action = RETRY;\n        }\n      }\n    }\n  }\n\n","sourceOld":"  private void extractRemotePath(String corename, String origCorename, int idx) throws UnsupportedEncodingException, KeeperException, InterruptedException {\n    if (core == null && idx > 0) {\n      coreUrl = getRemotCoreUrl(corename, origCorename);\n      // don't proxy for internal update requests\n      invalidStates = checkStateIsValid(queryParams.get(CloudSolrClient.STATE_VERSION));\n      if (coreUrl != null\n          && queryParams\n          .get(DistributingUpdateProcessorFactory.DISTRIB_UPDATE_PARAM) == null) {\n        path = path.substring(idx);\n        if (invalidStates != null) {\n          //it does not make sense to send the request to a remote node\n          throw new SolrException(SolrException.ErrorCode.INVALID_STATE, new String(ZkStateReader.toJSON(invalidStates), org.apache.lucene.util.IOUtils.UTF_8));\n        }\n        action = REMOTEQUERY;\n      } else {\n        if (!retry) {\n          // we couldn't find a core to work with, try reloading aliases\n          // TODO: it would be nice if admin ui elements skipped this...\n          ZkStateReader reader = cores.getZkController()\n              .getZkStateReader();\n          reader.updateAliases();\n          action = RETRY;\n        }\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fcf710a8fcd590cf55c855d422c7a10fce3e6117","date":1485842253,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/servlet/HttpSolrCall#extractRemotePath(String,String,int).mjava","pathOld":"solr/core/src/java/org/apache/solr/servlet/HttpSolrCall#extractRemotePath(String,String,int).mjava","sourceNew":"  protected void extractRemotePath(String corename, String origCorename, int idx) throws UnsupportedEncodingException, KeeperException, InterruptedException {\n    if (core == null && idx > 0) {\n      coreUrl = getRemotCoreUrl(corename, origCorename);\n      // don't proxy for internal update requests\n      invalidStates = checkStateIsValid(queryParams.get(CloudSolrClient.STATE_VERSION));\n      if (coreUrl != null\n          && queryParams\n          .get(DistributingUpdateProcessorFactory.DISTRIB_UPDATE_PARAM) == null) {\n        path = path.substring(idx);\n        if (invalidStates != null) {\n          //it does not make sense to send the request to a remote node\n          throw new SolrException(SolrException.ErrorCode.INVALID_STATE, new String(Utils.toJSON(invalidStates), org.apache.lucene.util.IOUtils.UTF_8));\n        }\n        action = REMOTEQUERY;\n      } else {\n        if (!retry) {\n          // we couldn't find a core to work with, try reloading aliases\n          // TODO: it would be nice if admin ui elements skipped this...\n          ZkStateReader reader = cores.getZkController()\n              .getZkStateReader();\n          reader.updateAliases();\n          action = RETRY;\n        }\n      }\n    }\n  }\n\n","sourceOld":"  private void extractRemotePath(String corename, String origCorename, int idx) throws UnsupportedEncodingException, KeeperException, InterruptedException {\n    if (core == null && idx > 0) {\n      coreUrl = getRemotCoreUrl(corename, origCorename);\n      // don't proxy for internal update requests\n      invalidStates = checkStateIsValid(queryParams.get(CloudSolrClient.STATE_VERSION));\n      if (coreUrl != null\n          && queryParams\n          .get(DistributingUpdateProcessorFactory.DISTRIB_UPDATE_PARAM) == null) {\n        path = path.substring(idx);\n        if (invalidStates != null) {\n          //it does not make sense to send the request to a remote node\n          throw new SolrException(SolrException.ErrorCode.INVALID_STATE, new String(Utils.toJSON(invalidStates), org.apache.lucene.util.IOUtils.UTF_8));\n        }\n        action = REMOTEQUERY;\n      } else {\n        if (!retry) {\n          // we couldn't find a core to work with, try reloading aliases\n          // TODO: it would be nice if admin ui elements skipped this...\n          ZkStateReader reader = cores.getZkController()\n              .getZkStateReader();\n          reader.updateAliases();\n          action = RETRY;\n        }\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7c3523a0ab04c3002eee3896c75ea5f10f388bcc","date":1485968422,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/servlet/HttpSolrCall#extractRemotePath(String,String,int).mjava","pathOld":"solr/core/src/java/org/apache/solr/servlet/HttpSolrCall#extractRemotePath(String,String,int).mjava","sourceNew":"  protected void extractRemotePath(String corename, String origCorename, int idx) throws UnsupportedEncodingException, KeeperException, InterruptedException {\n    if (core == null && idx > 0) {\n      coreUrl = getRemotCoreUrl(corename, origCorename);\n      // don't proxy for internal update requests\n      invalidStates = checkStateIsValid(queryParams.get(CloudSolrClient.STATE_VERSION));\n      if (coreUrl != null\n          && queryParams\n          .get(DistributingUpdateProcessorFactory.DISTRIB_UPDATE_PARAM) == null) {\n        path = path.substring(idx);\n        if (invalidStates != null) {\n          //it does not make sense to send the request to a remote node\n          throw new SolrException(SolrException.ErrorCode.INVALID_STATE, new String(Utils.toJSON(invalidStates), org.apache.lucene.util.IOUtils.UTF_8));\n        }\n        action = REMOTEQUERY;\n      } else {\n        if (!retry) {\n          // we couldn't find a core to work with, try reloading aliases\n          // TODO: it would be nice if admin ui elements skipped this...\n          ZkStateReader reader = cores.getZkController()\n              .getZkStateReader();\n          reader.updateAliases();\n          action = RETRY;\n        }\n      }\n    }\n  }\n\n","sourceOld":"  private void extractRemotePath(String corename, String origCorename, int idx) throws UnsupportedEncodingException, KeeperException, InterruptedException {\n    if (core == null && idx > 0) {\n      coreUrl = getRemotCoreUrl(corename, origCorename);\n      // don't proxy for internal update requests\n      invalidStates = checkStateIsValid(queryParams.get(CloudSolrClient.STATE_VERSION));\n      if (coreUrl != null\n          && queryParams\n          .get(DistributingUpdateProcessorFactory.DISTRIB_UPDATE_PARAM) == null) {\n        path = path.substring(idx);\n        if (invalidStates != null) {\n          //it does not make sense to send the request to a remote node\n          throw new SolrException(SolrException.ErrorCode.INVALID_STATE, new String(Utils.toJSON(invalidStates), org.apache.lucene.util.IOUtils.UTF_8));\n        }\n        action = REMOTEQUERY;\n      } else {\n        if (!retry) {\n          // we couldn't find a core to work with, try reloading aliases\n          // TODO: it would be nice if admin ui elements skipped this...\n          ZkStateReader reader = cores.getZkController()\n              .getZkStateReader();\n          reader.updateAliases();\n          action = RETRY;\n        }\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c9d03b984af6c0085aa4985799de48f8c203844a","date":1498707843,"type":3,"author":"David Smiley","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/servlet/HttpSolrCall#extractRemotePath(String,String,int).mjava","pathOld":"solr/core/src/java/org/apache/solr/servlet/HttpSolrCall#extractRemotePath(String,String,int).mjava","sourceNew":"  protected void extractRemotePath(String corename, String origCorename, int idx) throws UnsupportedEncodingException, KeeperException, InterruptedException {\n    if (core == null && idx > 0) {\n      coreUrl = getRemotCoreUrl(corename, origCorename);\n      // don't proxy for internal update requests\n      invalidStates = checkStateVersionsAreValid(queryParams.get(CloudSolrClient.STATE_VERSION));\n      if (coreUrl != null\n          && queryParams\n          .get(DistributingUpdateProcessorFactory.DISTRIB_UPDATE_PARAM) == null) {\n        path = path.substring(idx);\n        if (invalidStates != null) {\n          //it does not make sense to send the request to a remote node\n          throw new SolrException(SolrException.ErrorCode.INVALID_STATE, new String(Utils.toJSON(invalidStates), org.apache.lucene.util.IOUtils.UTF_8));\n        }\n        action = REMOTEQUERY;\n      } else {\n        if (!retry) {\n          // we couldn't find a core to work with, try reloading aliases\n          // TODO: it would be nice if admin ui elements skipped this...\n          ZkStateReader reader = cores.getZkController()\n              .getZkStateReader();\n          reader.updateAliases();\n          action = RETRY;\n        }\n      }\n    }\n  }\n\n","sourceOld":"  protected void extractRemotePath(String corename, String origCorename, int idx) throws UnsupportedEncodingException, KeeperException, InterruptedException {\n    if (core == null && idx > 0) {\n      coreUrl = getRemotCoreUrl(corename, origCorename);\n      // don't proxy for internal update requests\n      invalidStates = checkStateIsValid(queryParams.get(CloudSolrClient.STATE_VERSION));\n      if (coreUrl != null\n          && queryParams\n          .get(DistributingUpdateProcessorFactory.DISTRIB_UPDATE_PARAM) == null) {\n        path = path.substring(idx);\n        if (invalidStates != null) {\n          //it does not make sense to send the request to a remote node\n          throw new SolrException(SolrException.ErrorCode.INVALID_STATE, new String(Utils.toJSON(invalidStates), org.apache.lucene.util.IOUtils.UTF_8));\n        }\n        action = REMOTEQUERY;\n      } else {\n        if (!retry) {\n          // we couldn't find a core to work with, try reloading aliases\n          // TODO: it would be nice if admin ui elements skipped this...\n          ZkStateReader reader = cores.getZkController()\n              .getZkStateReader();\n          reader.updateAliases();\n          action = RETRY;\n        }\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"28288370235ed02234a64753cdbf0c6ec096304a","date":1498726817,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/servlet/HttpSolrCall#extractRemotePath(String,String,int).mjava","pathOld":"solr/core/src/java/org/apache/solr/servlet/HttpSolrCall#extractRemotePath(String,String,int).mjava","sourceNew":"  protected void extractRemotePath(String corename, String origCorename, int idx) throws UnsupportedEncodingException, KeeperException, InterruptedException {\n    if (core == null && idx > 0) {\n      coreUrl = getRemotCoreUrl(corename, origCorename);\n      // don't proxy for internal update requests\n      invalidStates = checkStateVersionsAreValid(queryParams.get(CloudSolrClient.STATE_VERSION));\n      if (coreUrl != null\n          && queryParams\n          .get(DistributingUpdateProcessorFactory.DISTRIB_UPDATE_PARAM) == null) {\n        path = path.substring(idx);\n        if (invalidStates != null) {\n          //it does not make sense to send the request to a remote node\n          throw new SolrException(SolrException.ErrorCode.INVALID_STATE, new String(Utils.toJSON(invalidStates), org.apache.lucene.util.IOUtils.UTF_8));\n        }\n        action = REMOTEQUERY;\n      } else {\n        if (!retry) {\n          // we couldn't find a core to work with, try reloading aliases\n          // TODO: it would be nice if admin ui elements skipped this...\n          ZkStateReader reader = cores.getZkController()\n              .getZkStateReader();\n          reader.updateAliases();\n          action = RETRY;\n        }\n      }\n    }\n  }\n\n","sourceOld":"  protected void extractRemotePath(String corename, String origCorename, int idx) throws UnsupportedEncodingException, KeeperException, InterruptedException {\n    if (core == null && idx > 0) {\n      coreUrl = getRemotCoreUrl(corename, origCorename);\n      // don't proxy for internal update requests\n      invalidStates = checkStateIsValid(queryParams.get(CloudSolrClient.STATE_VERSION));\n      if (coreUrl != null\n          && queryParams\n          .get(DistributingUpdateProcessorFactory.DISTRIB_UPDATE_PARAM) == null) {\n        path = path.substring(idx);\n        if (invalidStates != null) {\n          //it does not make sense to send the request to a remote node\n          throw new SolrException(SolrException.ErrorCode.INVALID_STATE, new String(Utils.toJSON(invalidStates), org.apache.lucene.util.IOUtils.UTF_8));\n        }\n        action = REMOTEQUERY;\n      } else {\n        if (!retry) {\n          // we couldn't find a core to work with, try reloading aliases\n          // TODO: it would be nice if admin ui elements skipped this...\n          ZkStateReader reader = cores.getZkController()\n              .getZkStateReader();\n          reader.updateAliases();\n          action = RETRY;\n        }\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"30c8e5574b55d57947e989443dfde611646530ee","date":1499131153,"type":3,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/servlet/HttpSolrCall#extractRemotePath(String,String,int).mjava","pathOld":"solr/core/src/java/org/apache/solr/servlet/HttpSolrCall#extractRemotePath(String,String,int).mjava","sourceNew":"  protected void extractRemotePath(String corename, String origCorename, int idx) throws UnsupportedEncodingException, KeeperException, InterruptedException {\n    if (core == null && idx > 0) {\n      coreUrl = getRemotCoreUrl(corename, origCorename);\n      // don't proxy for internal update requests\n      invalidStates = checkStateVersionsAreValid(queryParams.get(CloudSolrClient.STATE_VERSION));\n      if (coreUrl != null\n          && queryParams\n          .get(DistributingUpdateProcessorFactory.DISTRIB_UPDATE_PARAM) == null) {\n        path = path.substring(idx);\n        if (invalidStates != null) {\n          //it does not make sense to send the request to a remote node\n          throw new SolrException(SolrException.ErrorCode.INVALID_STATE, new String(Utils.toJSON(invalidStates), org.apache.lucene.util.IOUtils.UTF_8));\n        }\n        action = REMOTEQUERY;\n      } else {\n        if (!retry) {\n          // we couldn't find a core to work with, try reloading aliases\n          // TODO: it would be nice if admin ui elements skipped this...\n          ZkStateReader reader = cores.getZkController()\n              .getZkStateReader();\n          reader.updateAliases();\n          action = RETRY;\n        }\n      }\n    }\n  }\n\n","sourceOld":"  protected void extractRemotePath(String corename, String origCorename, int idx) throws UnsupportedEncodingException, KeeperException, InterruptedException {\n    if (core == null && idx > 0) {\n      coreUrl = getRemotCoreUrl(corename, origCorename);\n      // don't proxy for internal update requests\n      invalidStates = checkStateIsValid(queryParams.get(CloudSolrClient.STATE_VERSION));\n      if (coreUrl != null\n          && queryParams\n          .get(DistributingUpdateProcessorFactory.DISTRIB_UPDATE_PARAM) == null) {\n        path = path.substring(idx);\n        if (invalidStates != null) {\n          //it does not make sense to send the request to a remote node\n          throw new SolrException(SolrException.ErrorCode.INVALID_STATE, new String(Utils.toJSON(invalidStates), org.apache.lucene.util.IOUtils.UTF_8));\n        }\n        action = REMOTEQUERY;\n      } else {\n        if (!retry) {\n          // we couldn't find a core to work with, try reloading aliases\n          // TODO: it would be nice if admin ui elements skipped this...\n          ZkStateReader reader = cores.getZkController()\n              .getZkStateReader();\n          reader.updateAliases();\n          action = RETRY;\n        }\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6b824daa61db3f30b91a22213d6c04e1fa2e2b06","date":1508385744,"type":3,"author":"David Smiley","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/servlet/HttpSolrCall#extractRemotePath(String,String,int).mjava","pathOld":"solr/core/src/java/org/apache/solr/servlet/HttpSolrCall#extractRemotePath(String,String,int).mjava","sourceNew":"  protected void extractRemotePath(String collectionName, String origCorename, int idx) throws UnsupportedEncodingException, KeeperException, InterruptedException {\n    if (core == null && idx > 0) {\n      coreUrl = getRemotCoreUrl(collectionName, origCorename);\n      // don't proxy for internal update requests\n      invalidStates = checkStateVersionsAreValid(queryParams.get(CloudSolrClient.STATE_VERSION));\n      if (coreUrl != null\n          && queryParams\n          .get(DistributingUpdateProcessorFactory.DISTRIB_UPDATE_PARAM) == null) {\n        path = path.substring(idx);\n        if (invalidStates != null) {\n          //it does not make sense to send the request to a remote node\n          throw new SolrException(SolrException.ErrorCode.INVALID_STATE, new String(Utils.toJSON(invalidStates), org.apache.lucene.util.IOUtils.UTF_8));\n        }\n        action = REMOTEQUERY;\n      } else {\n        if (!retry) {\n          // we couldn't find a core to work with, try reloading aliases\n          // TODO: it would be nice if admin ui elements skipped this...\n          ZkStateReader reader = cores.getZkController()\n              .getZkStateReader();\n          reader.updateAliases();\n          action = RETRY;\n        }\n      }\n    }\n  }\n\n","sourceOld":"  protected void extractRemotePath(String corename, String origCorename, int idx) throws UnsupportedEncodingException, KeeperException, InterruptedException {\n    if (core == null && idx > 0) {\n      coreUrl = getRemotCoreUrl(corename, origCorename);\n      // don't proxy for internal update requests\n      invalidStates = checkStateVersionsAreValid(queryParams.get(CloudSolrClient.STATE_VERSION));\n      if (coreUrl != null\n          && queryParams\n          .get(DistributingUpdateProcessorFactory.DISTRIB_UPDATE_PARAM) == null) {\n        path = path.substring(idx);\n        if (invalidStates != null) {\n          //it does not make sense to send the request to a remote node\n          throw new SolrException(SolrException.ErrorCode.INVALID_STATE, new String(Utils.toJSON(invalidStates), org.apache.lucene.util.IOUtils.UTF_8));\n        }\n        action = REMOTEQUERY;\n      } else {\n        if (!retry) {\n          // we couldn't find a core to work with, try reloading aliases\n          // TODO: it would be nice if admin ui elements skipped this...\n          ZkStateReader reader = cores.getZkController()\n              .getZkStateReader();\n          reader.updateAliases();\n          action = RETRY;\n        }\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9125399a2b1542e8303716ed9020cb6cd4a7aa93","date":1510160069,"type":4,"author":"David Smiley","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/core/src/java/org/apache/solr/servlet/HttpSolrCall#extractRemotePath(String,String,int).mjava","sourceNew":null,"sourceOld":"  protected void extractRemotePath(String collectionName, String origCorename, int idx) throws UnsupportedEncodingException, KeeperException, InterruptedException {\n    if (core == null && idx > 0) {\n      coreUrl = getRemotCoreUrl(collectionName, origCorename);\n      // don't proxy for internal update requests\n      invalidStates = checkStateVersionsAreValid(queryParams.get(CloudSolrClient.STATE_VERSION));\n      if (coreUrl != null\n          && queryParams\n          .get(DistributingUpdateProcessorFactory.DISTRIB_UPDATE_PARAM) == null) {\n        path = path.substring(idx);\n        if (invalidStates != null) {\n          //it does not make sense to send the request to a remote node\n          throw new SolrException(SolrException.ErrorCode.INVALID_STATE, new String(Utils.toJSON(invalidStates), org.apache.lucene.util.IOUtils.UTF_8));\n        }\n        action = REMOTEQUERY;\n      } else {\n        if (!retry) {\n          // we couldn't find a core to work with, try reloading aliases\n          // TODO: it would be nice if admin ui elements skipped this...\n          ZkStateReader reader = cores.getZkController()\n              .getZkStateReader();\n          reader.updateAliases();\n          action = RETRY;\n        }\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"6b824daa61db3f30b91a22213d6c04e1fa2e2b06":["28288370235ed02234a64753cdbf0c6ec096304a"],"fcf710a8fcd590cf55c855d422c7a10fce3e6117":["b693a83132c9e45afcd564fd65a25b60ed80388b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"7c3523a0ab04c3002eee3896c75ea5f10f388bcc":["b693a83132c9e45afcd564fd65a25b60ed80388b","fcf710a8fcd590cf55c855d422c7a10fce3e6117"],"a760e2135dfe20a04dea360873d4de1c6a0280bb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"b693a83132c9e45afcd564fd65a25b60ed80388b":["a760e2135dfe20a04dea360873d4de1c6a0280bb"],"30c8e5574b55d57947e989443dfde611646530ee":["fcf710a8fcd590cf55c855d422c7a10fce3e6117","28288370235ed02234a64753cdbf0c6ec096304a"],"c9d03b984af6c0085aa4985799de48f8c203844a":["fcf710a8fcd590cf55c855d422c7a10fce3e6117"],"9125399a2b1542e8303716ed9020cb6cd4a7aa93":["6b824daa61db3f30b91a22213d6c04e1fa2e2b06"],"28288370235ed02234a64753cdbf0c6ec096304a":["fcf710a8fcd590cf55c855d422c7a10fce3e6117","c9d03b984af6c0085aa4985799de48f8c203844a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9125399a2b1542e8303716ed9020cb6cd4a7aa93"]},"commit2Childs":{"6b824daa61db3f30b91a22213d6c04e1fa2e2b06":["9125399a2b1542e8303716ed9020cb6cd4a7aa93"],"fcf710a8fcd590cf55c855d422c7a10fce3e6117":["7c3523a0ab04c3002eee3896c75ea5f10f388bcc","30c8e5574b55d57947e989443dfde611646530ee","c9d03b984af6c0085aa4985799de48f8c203844a","28288370235ed02234a64753cdbf0c6ec096304a"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["a760e2135dfe20a04dea360873d4de1c6a0280bb"],"7c3523a0ab04c3002eee3896c75ea5f10f388bcc":[],"a760e2135dfe20a04dea360873d4de1c6a0280bb":["b693a83132c9e45afcd564fd65a25b60ed80388b"],"b693a83132c9e45afcd564fd65a25b60ed80388b":["fcf710a8fcd590cf55c855d422c7a10fce3e6117","7c3523a0ab04c3002eee3896c75ea5f10f388bcc"],"30c8e5574b55d57947e989443dfde611646530ee":[],"c9d03b984af6c0085aa4985799de48f8c203844a":["28288370235ed02234a64753cdbf0c6ec096304a"],"28288370235ed02234a64753cdbf0c6ec096304a":["6b824daa61db3f30b91a22213d6c04e1fa2e2b06","30c8e5574b55d57947e989443dfde611646530ee"],"9125399a2b1542e8303716ed9020cb6cd4a7aa93":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["7c3523a0ab04c3002eee3896c75ea5f10f388bcc","30c8e5574b55d57947e989443dfde611646530ee","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}