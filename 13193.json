{"path":"solr/core/src/java/org/apache/solr/cloud/OverseerConfigSetMessageHandler#processMessage(ZkNodeProps,CloudConfig,String).mjava","commits":[{"id":"c526352db87264a72a7a9ad68c1b769b81e54305","date":1598780188,"type":1,"author":"Ilan Ginzburg","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/OverseerConfigSetMessageHandler#processMessage(ZkNodeProps,CloudConfig,String).mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/OverseerConfigSetMessageHandler#processMessage(ZkNodeProps,String).mjava","sourceNew":"  @Override\n  @SuppressWarnings({\"unchecked\"})\n  public OverseerSolrResponse processMessage(ZkNodeProps message, CloudConfig cloudConfig, String operation) {\n    @SuppressWarnings({\"rawtypes\"})\n    NamedList results = new NamedList();\n    try {\n      if (!operation.startsWith(CONFIGSETS_ACTION_PREFIX)) {\n        throw new SolrException(ErrorCode.BAD_REQUEST,\n            \"Operation does not contain proper prefix: \" + operation\n                + \" expected: \" + CONFIGSETS_ACTION_PREFIX);\n      }\n      operation = operation.substring(CONFIGSETS_ACTION_PREFIX.length());\n      log.info(\"OverseerConfigSetMessageHandler.processMessage : {}, {}\", operation, message);\n\n      ConfigSetParams.ConfigSetAction action = ConfigSetParams.ConfigSetAction.get(operation);\n      if (action == null) {\n        throw new SolrException(ErrorCode.BAD_REQUEST, \"Unknown operation:\" + operation);\n      }\n      switch (action) {\n        case CREATE:\n          createConfigSet(message);\n          break;\n        case DELETE:\n          deleteConfigSet(message);\n          break;\n        default:\n          throw new SolrException(ErrorCode.BAD_REQUEST, \"Unknown operation:\"\n              + operation);\n      }\n    } catch (Exception e) {\n      String configSetName = message.getStr(NAME);\n\n      if (configSetName == null) {\n        SolrException.log(log, \"Operation \" + operation + \" failed\", e);\n      } else {\n        SolrException.log(log, \"ConfigSet: \" + configSetName + \" operation: \" + operation\n            + \" failed\", e);\n      }\n\n      results.add(\"Operation \" + operation + \" caused exception:\", e);\n      @SuppressWarnings({\"rawtypes\"})\n      SimpleOrderedMap nl = new SimpleOrderedMap();\n      nl.add(\"msg\", e.getMessage());\n      nl.add(\"rspCode\", e instanceof SolrException ? ((SolrException) e).code() : -1);\n      results.add(\"exception\", nl);\n    }\n    return new OverseerSolrResponse(results);\n  }\n\n","sourceOld":"  @Override\n  @SuppressWarnings({\"unchecked\"})\n  public OverseerSolrResponse processMessage(ZkNodeProps message, String operation) {\n    @SuppressWarnings({\"rawtypes\"})\n    NamedList results = new NamedList();\n    try {\n      if (!operation.startsWith(CONFIGSETS_ACTION_PREFIX)) {\n        throw new SolrException(ErrorCode.BAD_REQUEST,\n            \"Operation does not contain proper prefix: \" + operation\n                + \" expected: \" + CONFIGSETS_ACTION_PREFIX);\n      }\n      operation = operation.substring(CONFIGSETS_ACTION_PREFIX.length());\n      log.info(\"OverseerConfigSetMessageHandler.processMessage : {}, {}\", operation, message);\n\n      ConfigSetParams.ConfigSetAction action = ConfigSetParams.ConfigSetAction.get(operation);\n      if (action == null) {\n        throw new SolrException(ErrorCode.BAD_REQUEST, \"Unknown operation:\" + operation);\n      }\n      switch (action) {\n        case CREATE:\n          createConfigSet(message);\n          break;\n        case DELETE:\n          deleteConfigSet(message);\n          break;\n        default:\n          throw new SolrException(ErrorCode.BAD_REQUEST, \"Unknown operation:\"\n              + operation);\n      }\n    } catch (Exception e) {\n      String configSetName = message.getStr(NAME);\n\n      if (configSetName == null) {\n        SolrException.log(log, \"Operation \" + operation + \" failed\", e);\n      } else {\n        SolrException.log(log, \"ConfigSet: \" + configSetName + \" operation: \" + operation\n            + \" failed\", e);\n      }\n\n      results.add(\"Operation \" + operation + \" caused exception:\", e);\n      @SuppressWarnings({\"rawtypes\"})\n      SimpleOrderedMap nl = new SimpleOrderedMap();\n      nl.add(\"msg\", e.getMessage());\n      nl.add(\"rspCode\", e instanceof SolrException ? ((SolrException) e).code() : -1);\n      results.add(\"exception\", nl);\n    }\n    return new OverseerSolrResponse(results);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e7b17e79a71117668ecbf8d3417c876e41396565","date":1598973672,"type":5,"author":"Ilan Ginzburg","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/OverseerConfigSetMessageHandler#processMessage(ZkNodeProps,String).mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/OverseerConfigSetMessageHandler#processMessage(ZkNodeProps,CloudConfig,String).mjava","sourceNew":"  @Override\n  @SuppressWarnings({\"unchecked\"})\n  public OverseerSolrResponse processMessage(ZkNodeProps message, String operation) {\n    @SuppressWarnings({\"rawtypes\"})\n    NamedList results = new NamedList();\n    try {\n      if (!operation.startsWith(CONFIGSETS_ACTION_PREFIX)) {\n        throw new SolrException(ErrorCode.BAD_REQUEST,\n            \"Operation does not contain proper prefix: \" + operation\n                + \" expected: \" + CONFIGSETS_ACTION_PREFIX);\n      }\n      operation = operation.substring(CONFIGSETS_ACTION_PREFIX.length());\n      log.info(\"OverseerConfigSetMessageHandler.processMessage : {}, {}\", operation, message);\n\n      ConfigSetParams.ConfigSetAction action = ConfigSetParams.ConfigSetAction.get(operation);\n      if (action == null) {\n        throw new SolrException(ErrorCode.BAD_REQUEST, \"Unknown operation:\" + operation);\n      }\n      switch (action) {\n        case CREATE:\n          createConfigSet(message);\n          break;\n        case DELETE:\n          deleteConfigSet(message);\n          break;\n        default:\n          throw new SolrException(ErrorCode.BAD_REQUEST, \"Unknown operation:\"\n              + operation);\n      }\n    } catch (Exception e) {\n      String configSetName = message.getStr(NAME);\n\n      if (configSetName == null) {\n        SolrException.log(log, \"Operation \" + operation + \" failed\", e);\n      } else {\n        SolrException.log(log, \"ConfigSet: \" + configSetName + \" operation: \" + operation\n            + \" failed\", e);\n      }\n\n      results.add(\"Operation \" + operation + \" caused exception:\", e);\n      @SuppressWarnings({\"rawtypes\"})\n      SimpleOrderedMap nl = new SimpleOrderedMap();\n      nl.add(\"msg\", e.getMessage());\n      nl.add(\"rspCode\", e instanceof SolrException ? ((SolrException) e).code() : -1);\n      results.add(\"exception\", nl);\n    }\n    return new OverseerSolrResponse(results);\n  }\n\n","sourceOld":"  @Override\n  @SuppressWarnings({\"unchecked\"})\n  public OverseerSolrResponse processMessage(ZkNodeProps message, CloudConfig cloudConfig, String operation) {\n    @SuppressWarnings({\"rawtypes\"})\n    NamedList results = new NamedList();\n    try {\n      if (!operation.startsWith(CONFIGSETS_ACTION_PREFIX)) {\n        throw new SolrException(ErrorCode.BAD_REQUEST,\n            \"Operation does not contain proper prefix: \" + operation\n                + \" expected: \" + CONFIGSETS_ACTION_PREFIX);\n      }\n      operation = operation.substring(CONFIGSETS_ACTION_PREFIX.length());\n      log.info(\"OverseerConfigSetMessageHandler.processMessage : {}, {}\", operation, message);\n\n      ConfigSetParams.ConfigSetAction action = ConfigSetParams.ConfigSetAction.get(operation);\n      if (action == null) {\n        throw new SolrException(ErrorCode.BAD_REQUEST, \"Unknown operation:\" + operation);\n      }\n      switch (action) {\n        case CREATE:\n          createConfigSet(message);\n          break;\n        case DELETE:\n          deleteConfigSet(message);\n          break;\n        default:\n          throw new SolrException(ErrorCode.BAD_REQUEST, \"Unknown operation:\"\n              + operation);\n      }\n    } catch (Exception e) {\n      String configSetName = message.getStr(NAME);\n\n      if (configSetName == null) {\n        SolrException.log(log, \"Operation \" + operation + \" failed\", e);\n      } else {\n        SolrException.log(log, \"ConfigSet: \" + configSetName + \" operation: \" + operation\n            + \" failed\", e);\n      }\n\n      results.add(\"Operation \" + operation + \" caused exception:\", e);\n      @SuppressWarnings({\"rawtypes\"})\n      SimpleOrderedMap nl = new SimpleOrderedMap();\n      nl.add(\"msg\", e.getMessage());\n      nl.add(\"rspCode\", e instanceof SolrException ? ((SolrException) e).code() : -1);\n      results.add(\"exception\", nl);\n    }\n    return new OverseerSolrResponse(results);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"e7b17e79a71117668ecbf8d3417c876e41396565":["c526352db87264a72a7a9ad68c1b769b81e54305"],"c526352db87264a72a7a9ad68c1b769b81e54305":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["e7b17e79a71117668ecbf8d3417c876e41396565"]},"commit2Childs":{"e7b17e79a71117668ecbf8d3417c876e41396565":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"c526352db87264a72a7a9ad68c1b769b81e54305":["e7b17e79a71117668ecbf8d3417c876e41396565"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c526352db87264a72a7a9ad68c1b769b81e54305"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}