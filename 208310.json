{"path":"lucene/src/java/org/apache/lucene/index/DocsEnum#read().mjava","commits":[{"id":"955c32f886db6f6356c9fcdea6b1f1cb4effda24","date":1270581567,"type":0,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/DocsEnum#read().mjava","pathOld":"/dev/null","sourceNew":"  /** Bulk read (docs and freqs).  After this is called,\n   * {@link #docID()} and {@link #freq} are undefined.  This\n   * returns the count read, or 0 if the end is reached.\n   * The IntsRef for docs and freqs will not have their\n   * length set.\n   * \n   *  <p>NOTE: the default impl simply delegates to {@link\n   *  #nextDoc}, but subclasses may do this more\n   *  efficiently. */\n  public int read() throws IOException {\n    int count = 0;\n    final int[] docs = bulkResult.docs.ints;\n    final int[] freqs = bulkResult.freqs.ints;\n    while(count < docs.length) {\n      final int doc = nextDoc();\n      if (doc != NO_MORE_DOCS) {\n        docs[count] = doc;\n        freqs[count] = freq();\n        count++;\n      } else {\n        break;\n      }\n    }\n    return count;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"904bf7087cba752927c6c99feceff467e2cb9f2b","date":1271942188,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/DocsEnum#read().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/DocsEnum#read().mjava","sourceNew":"  /** Bulk read (docs and freqs).  After this is called,\n   *  {@link #docID()} and {@link #freq} are undefined.\n   *  This returns the count read, or 0 if the end is\n   *  reached.  The resulting docs and freqs are placed into\n   *  the pre-shard {@link BulkReadResult} instance returned\n   *  by {@link #getBulkResult}.  Note that the {@link\n   *  IntsRef} for docs and freqs will not have their length\n   *  set.\n   * \n   *  <p>NOTE: the default impl simply delegates to {@link\n   *  #nextDoc}, but subclasses may do this more\n   *  efficiently. */\n  public int read() throws IOException {\n    int count = 0;\n    final int[] docs = bulkResult.docs.ints;\n    final int[] freqs = bulkResult.freqs.ints;\n    while(count < docs.length) {\n      final int doc = nextDoc();\n      if (doc != NO_MORE_DOCS) {\n        docs[count] = doc;\n        freqs[count] = freq();\n        count++;\n      } else {\n        break;\n      }\n    }\n    return count;\n  }\n\n","sourceOld":"  /** Bulk read (docs and freqs).  After this is called,\n   * {@link #docID()} and {@link #freq} are undefined.  This\n   * returns the count read, or 0 if the end is reached.\n   * The IntsRef for docs and freqs will not have their\n   * length set.\n   * \n   *  <p>NOTE: the default impl simply delegates to {@link\n   *  #nextDoc}, but subclasses may do this more\n   *  efficiently. */\n  public int read() throws IOException {\n    int count = 0;\n    final int[] docs = bulkResult.docs.ints;\n    final int[] freqs = bulkResult.freqs.ints;\n    while(count < docs.length) {\n      final int doc = nextDoc();\n      if (doc != NO_MORE_DOCS) {\n        docs[count] = doc;\n        freqs[count] = freq();\n        count++;\n      } else {\n        break;\n      }\n    }\n    return count;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0445bcd8433e331f296f5502fc089b336cbac3a6","date":1322630375,"type":4,"author":"Robert Muir","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/src/java/org/apache/lucene/index/DocsEnum#read().mjava","sourceNew":null,"sourceOld":"  /** Bulk read (docs and freqs).  After this is called,\n   *  {@link #docID()} and {@link #freq} are undefined.\n   *  This returns the count read, or 0 if the end is\n   *  reached.  The resulting docs and freqs are placed into\n   *  the pre-shard {@link BulkReadResult} instance returned\n   *  by {@link #getBulkResult}.  Note that the {@link\n   *  IntsRef} for docs and freqs will not have their length\n   *  set.\n   * \n   *  <p>NOTE: the default impl simply delegates to {@link\n   *  #nextDoc}, but subclasses may do this more\n   *  efficiently. */\n  public int read() throws IOException {\n    int count = 0;\n    final int[] docs = bulkResult.docs.ints;\n    final int[] freqs = bulkResult.freqs.ints;\n    while(count < docs.length) {\n      final int doc = nextDoc();\n      if (doc != NO_MORE_DOCS) {\n        docs[count] = doc;\n        freqs[count] = freq();\n        count++;\n      } else {\n        break;\n      }\n    }\n    return count;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"0445bcd8433e331f296f5502fc089b336cbac3a6":["904bf7087cba752927c6c99feceff467e2cb9f2b"],"904bf7087cba752927c6c99feceff467e2cb9f2b":["955c32f886db6f6356c9fcdea6b1f1cb4effda24"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"955c32f886db6f6356c9fcdea6b1f1cb4effda24":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["0445bcd8433e331f296f5502fc089b336cbac3a6"]},"commit2Childs":{"0445bcd8433e331f296f5502fc089b336cbac3a6":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"904bf7087cba752927c6c99feceff467e2cb9f2b":["0445bcd8433e331f296f5502fc089b336cbac3a6"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["955c32f886db6f6356c9fcdea6b1f1cb4effda24"],"955c32f886db6f6356c9fcdea6b1f1cb4effda24":["904bf7087cba752927c6c99feceff467e2cb9f2b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}