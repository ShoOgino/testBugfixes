{"path":"lucene/suggest/src/java/org/apache/lucene/search/suggest/analyzing/AnalyzingSuggester#toAutomaton(BytesRef,TokenStreamToAutomaton).mjava","commits":[{"id":"35fa550f45857d99d3d6d743420ee54b4d0c37f8","date":1436039255,"type":1,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/suggest/src/java/org/apache/lucene/search/suggest/analyzing/AnalyzingSuggester#toAutomaton(BytesRef,TokenStreamToAutomaton).mjava","pathOld":"lucene/suggest/src/java/org/apache/lucene/search/suggest/analyzing/AnalyzingSuggester#toFiniteStrings(BytesRef,TokenStreamToAutomaton).mjava","sourceNew":"  final Automaton toAutomaton(final BytesRef surfaceForm, final TokenStreamToAutomaton ts2a) throws IOException {\n    // Analyze surface form:\n    Automaton automaton;\n    try (TokenStream ts = indexAnalyzer.tokenStream(\"\", surfaceForm.utf8ToString())) {\n\n      // Create corresponding automaton: labels are bytes\n      // from each analyzed token, with byte 0 used as\n      // separator between tokens:\n      automaton = ts2a.toAutomaton(ts);\n    }\n\n    automaton = replaceSep(automaton);\n    automaton = convertAutomaton(automaton);\n\n    // TODO: LUCENE-5660 re-enable this once we disallow massive suggestion strings\n    // assert SpecialOperations.isFinite(automaton);\n\n    // Get all paths from the automaton (there can be\n    // more than one path, eg if the analyzer created a\n    // graph using SynFilter or WDF):\n    return automaton;\n  }\n\n","sourceOld":"  final Set<IntsRef> toFiniteStrings(final BytesRef surfaceForm, final TokenStreamToAutomaton ts2a) throws IOException {\n    // Analyze surface form:\n    Automaton automaton = null;\n    try (TokenStream ts = indexAnalyzer.tokenStream(\"\", surfaceForm.utf8ToString())) {\n\n      // Create corresponding automaton: labels are bytes\n      // from each analyzed token, with byte 0 used as\n      // separator between tokens:\n      automaton = ts2a.toAutomaton(ts);\n    }\n\n    automaton = replaceSep(automaton);\n    automaton = convertAutomaton(automaton);\n\n    // TODO: LUCENE-5660 re-enable this once we disallow massive suggestion strings\n    // assert SpecialOperations.isFinite(automaton);\n\n    // Get all paths from the automaton (there can be\n    // more than one path, eg if the analyzer created a\n    // graph using SynFilter or WDF):\n\n    // TODO: we could walk & add simultaneously, so we\n    // don't have to alloc [possibly biggish]\n    // intermediate HashSet in RAM:\n\n    return Operations.getFiniteStrings(automaton, maxGraphExpansions);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"35fa550f45857d99d3d6d743420ee54b4d0c37f8":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["35fa550f45857d99d3d6d743420ee54b4d0c37f8"]},"commit2Childs":{"35fa550f45857d99d3d6d743420ee54b4d0c37f8":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["35fa550f45857d99d3d6d743420ee54b4d0c37f8"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}