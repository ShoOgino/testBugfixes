{"path":"lucene/test-framework/src/java/org/apache/lucene/search/AssertingIndexSearcher#search(List[AtomicReaderContext],Weight,Collector).mjava","commits":[{"id":"3b0e8c39ca08b5a02de6edcd33d6f3b90b865173","date":1365631993,"type":0,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/search/AssertingIndexSearcher#search(List[AtomicReaderContext],Weight,Collector).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  protected void search(List<AtomicReaderContext> leaves, Weight weight, Collector collector) throws IOException {\n    super.search(leaves, AssertingWeight.wrap(random, weight), collector);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"db2ba7af1ae7547cae4abc3231fbd5aae59b9fc9","date":1393956681,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/search/AssertingIndexSearcher#search(List[AtomicReaderContext],Weight,Collector).mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/search/AssertingIndexSearcher#search(List[AtomicReaderContext],Weight,Collector).mjava","sourceNew":"  @Override\n  protected void search(List<AtomicReaderContext> leaves, Weight weight, Collector collector) throws IOException {\n    // nocommit shouldn't we\n    // AssertingCollector.wrap(collector) here?\n    super.search(leaves, AssertingWeight.wrap(random, weight), collector);\n  }\n\n","sourceOld":"  @Override\n  protected void search(List<AtomicReaderContext> leaves, Weight weight, Collector collector) throws IOException {\n    super.search(leaves, AssertingWeight.wrap(random, weight), collector);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f5a7a379c47cb10a09ea1ff0b2460819a73c5988","date":1394142503,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/search/AssertingIndexSearcher#search(List[AtomicReaderContext],Weight,Collector).mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/search/AssertingIndexSearcher#search(List[AtomicReaderContext],Weight,Collector).mjava","sourceNew":"  @Override\n  protected void search(List<AtomicReaderContext> leaves, Weight weight, Collector collector) throws IOException {\n    // TODO: shouldn't we AssertingCollector.wrap(collector) here?\n    super.search(leaves, AssertingWeight.wrap(random, weight), collector);\n  }\n\n","sourceOld":"  @Override\n  protected void search(List<AtomicReaderContext> leaves, Weight weight, Collector collector) throws IOException {\n    // nocommit shouldn't we\n    // AssertingCollector.wrap(collector) here?\n    super.search(leaves, AssertingWeight.wrap(random, weight), collector);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"acf00221f44c5f08ccea014f2492b53af15ecd66","date":1394568293,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/search/AssertingIndexSearcher#search(List[AtomicReaderContext],Weight,Collector).mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/search/AssertingIndexSearcher#search(List[AtomicReaderContext],Weight,Collector).mjava","sourceNew":"  @Override\n  protected void search(List<AtomicReaderContext> leaves, Weight weight, Collector collector) throws IOException {\n    // TODO: shouldn't we AssertingCollector.wrap(collector) here?\n    super.search(leaves, AssertingWeight.wrap(random, weight), collector);\n  }\n\n","sourceOld":"  @Override\n  protected void search(List<AtomicReaderContext> leaves, Weight weight, Collector collector) throws IOException {\n    super.search(leaves, AssertingWeight.wrap(random, weight), collector);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c9fb5f46e264daf5ba3860defe623a89d202dd87","date":1411516315,"type":4,"author":"Ryan Ernst","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/test-framework/src/java/org/apache/lucene/search/AssertingIndexSearcher#search(List[AtomicReaderContext],Weight,Collector).mjava","sourceNew":null,"sourceOld":"  @Override\n  protected void search(List<AtomicReaderContext> leaves, Weight weight, Collector collector) throws IOException {\n    // TODO: shouldn't we AssertingCollector.wrap(collector) here?\n    super.search(leaves, AssertingWeight.wrap(random, weight), collector);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"f5a7a379c47cb10a09ea1ff0b2460819a73c5988":["db2ba7af1ae7547cae4abc3231fbd5aae59b9fc9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3b0e8c39ca08b5a02de6edcd33d6f3b90b865173":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"acf00221f44c5f08ccea014f2492b53af15ecd66":["3b0e8c39ca08b5a02de6edcd33d6f3b90b865173","f5a7a379c47cb10a09ea1ff0b2460819a73c5988"],"db2ba7af1ae7547cae4abc3231fbd5aae59b9fc9":["3b0e8c39ca08b5a02de6edcd33d6f3b90b865173"],"c9fb5f46e264daf5ba3860defe623a89d202dd87":["acf00221f44c5f08ccea014f2492b53af15ecd66"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["c9fb5f46e264daf5ba3860defe623a89d202dd87"]},"commit2Childs":{"f5a7a379c47cb10a09ea1ff0b2460819a73c5988":["acf00221f44c5f08ccea014f2492b53af15ecd66"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3b0e8c39ca08b5a02de6edcd33d6f3b90b865173"],"3b0e8c39ca08b5a02de6edcd33d6f3b90b865173":["acf00221f44c5f08ccea014f2492b53af15ecd66","db2ba7af1ae7547cae4abc3231fbd5aae59b9fc9"],"acf00221f44c5f08ccea014f2492b53af15ecd66":["c9fb5f46e264daf5ba3860defe623a89d202dd87"],"db2ba7af1ae7547cae4abc3231fbd5aae59b9fc9":["f5a7a379c47cb10a09ea1ff0b2460819a73c5988"],"c9fb5f46e264daf5ba3860defe623a89d202dd87":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}