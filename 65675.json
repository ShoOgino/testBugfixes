{"path":"solr/core/src/test/org/apache/solr/update/CdcrUpdateLogTest#testSubReader().mjava","commits":[{"id":"86290366cefc1b9d4eced13b430858c4a4c0421d","date":1432321109,"type":0,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/update/CdcrUpdateLogTest#testSubReader().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testSubReader() throws Exception {\n    this.clearCore();\n\n    CdcrUpdateLog ulog = (CdcrUpdateLog) h.getCore().getUpdateHandler().getUpdateLog();\n    File logDir = new File(h.getCore().getUpdateHandler().getUpdateLog().getLogDir());\n    CdcrUpdateLog.CdcrLogReader reader = ulog.newLogReader();\n\n    int start = 0;\n\n    LinkedList<Long> versions = new LinkedList<>();\n    addDocs(10, start, versions);\n    start += 10;\n    assertU(commit());\n\n    addDocs(10, start, versions);\n    start += 10;\n    assertU(commit());\n\n    assertEquals(2, ulog.getLogList(logDir).length);\n\n    // start to read the first tlog\n    for (int i = 0; i < 10; i++) {\n      assertNotNull(reader.next());\n    }\n\n    // instantiate a sub reader, and finish to read the first tlog (commit operation), plus start to read the\n    // second tlog (first five adds)\n    CdcrUpdateLog.CdcrLogReader subReader = reader.getSubReader();\n    for (int i = 0; i < 6; i++) {\n      assertNotNull(subReader.next());\n    }\n\n    // Five adds + one commit\n    assertEquals(6, subReader.getNumberOfRemainingRecords());\n\n    // Generate a new tlog\n    addDocs(105, start, versions);\n    start += 105;\n    assertU(commit());\n\n    // Even if the subreader is past the first tlog, the first tlog should not have been removed\n    // since the parent reader is still pointing to it\n    assertEquals(3, ulog.getLogList(logDir).length);\n\n    // fast forward the parent reader with the subreader\n    reader.forwardSeek(subReader);\n    subReader.close();\n\n    // After fast forward, the parent reader should be position on the doc15\n    List o = (List) reader.next();\n    assertNotNull(o);\n    assertTrue(o.get(2) instanceof SolrInputDocument);\n    assertEquals(\"15\", ((SolrInputDocument) o.get(2)).getFieldValue(\"id\"));\n\n    // Finish to read the second tlog, and start to read the third one\n    for (int i = 0; i < 6; i++) {\n      assertNotNull(reader.next());\n    }\n\n    assertEquals(105, reader.getNumberOfRemainingRecords());\n\n    // Generate a new tlog to activate tlog cleaning\n    addDocs(10, start, versions);\n    start += 10;\n    assertU(commit());\n\n    // If the parent reader was correctly fast forwarded, it should be on the third tlog, and the first two should\n    // have been removed.\n    assertEquals(2, ulog.getLogList(logDir).length);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["d73860af421c12136411fd196f144be7da130582"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"d73860af421c12136411fd196f144be7da130582","date":1512371871,"type":3,"author":"Varun Thacker","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/update/CdcrUpdateLogTest#testSubReader().mjava","pathOld":"solr/core/src/test/org/apache/solr/update/CdcrUpdateLogTest#testSubReader().mjava","sourceNew":"  @Test\n  public void testSubReader() throws Exception {\n    this.clearCore();\n\n    CdcrUpdateLog ulog = (CdcrUpdateLog) h.getCore().getUpdateHandler().getUpdateLog();\n    File logDir = new File(h.getCore().getUpdateHandler().getUpdateLog().getLogDir());\n    CdcrUpdateLog.CdcrLogReader reader = ulog.newLogReader();\n\n    int start = 0;\n\n    LinkedList<Long> versions = new LinkedList<>();\n    addDocs(10, start, versions);\n    start += 10;\n    assertU(commit());\n\n    addDocs(10, start, versions);\n    start += 10;\n    assertU(commit());\n\n    assertEquals(2, ulog.getLogList(logDir).length);\n\n    // start to read the first tlog\n    for (int i = 0; i < 10; i++) {\n      assertNotNull(reader.next());\n    }\n\n    // instantiate a sub reader, and finish to read the first tlog (commit operation), plus start to read the\n    // second tlog (first five adds)\n    CdcrUpdateLog.CdcrLogReader subReader = reader.getSubReader();\n    for (int i = 0; i < 6; i++) {\n      assertNotNull(subReader.next());\n    }\n\n    // Five adds + one commit\n    assertEquals(6, subReader.getNumberOfRemainingRecords());\n\n    // Generate a new tlog\n    addDocs(105, start, versions);\n    start += 105;\n    assertU(commit());\n\n    // Even if the subreader is past the first tlog, the first tlog should not have been removed\n    // since the parent reader is still pointing to it\n    assertEquals(3, ulog.getLogList(logDir).length);\n\n    // fast forward the parent reader with the subreader\n    reader.forwardSeek(subReader);\n    subReader.close();\n\n    // After fast forward, the parent reader should be position on the doc15\n    List o = (List) reader.next();\n    assertNotNull(o);\n    assertTrue(\"Expected SolrInputDocument but got\" + o.toString() ,o.get(3) instanceof SolrInputDocument);\n    assertEquals(\"15\", ((SolrInputDocument) o.get(3)).getFieldValue(\"id\"));\n\n    // Finish to read the second tlog, and start to read the third one\n    for (int i = 0; i < 6; i++) {\n      assertNotNull(reader.next());\n    }\n\n    assertEquals(105, reader.getNumberOfRemainingRecords());\n\n    // Generate a new tlog to activate tlog cleaning\n    addDocs(10, start, versions);\n    start += 10;\n    assertU(commit());\n\n    // If the parent reader was correctly fast forwarded, it should be on the third tlog, and the first two should\n    // have been removed.\n    assertEquals(2, ulog.getLogList(logDir).length);\n  }\n\n","sourceOld":"  @Test\n  public void testSubReader() throws Exception {\n    this.clearCore();\n\n    CdcrUpdateLog ulog = (CdcrUpdateLog) h.getCore().getUpdateHandler().getUpdateLog();\n    File logDir = new File(h.getCore().getUpdateHandler().getUpdateLog().getLogDir());\n    CdcrUpdateLog.CdcrLogReader reader = ulog.newLogReader();\n\n    int start = 0;\n\n    LinkedList<Long> versions = new LinkedList<>();\n    addDocs(10, start, versions);\n    start += 10;\n    assertU(commit());\n\n    addDocs(10, start, versions);\n    start += 10;\n    assertU(commit());\n\n    assertEquals(2, ulog.getLogList(logDir).length);\n\n    // start to read the first tlog\n    for (int i = 0; i < 10; i++) {\n      assertNotNull(reader.next());\n    }\n\n    // instantiate a sub reader, and finish to read the first tlog (commit operation), plus start to read the\n    // second tlog (first five adds)\n    CdcrUpdateLog.CdcrLogReader subReader = reader.getSubReader();\n    for (int i = 0; i < 6; i++) {\n      assertNotNull(subReader.next());\n    }\n\n    // Five adds + one commit\n    assertEquals(6, subReader.getNumberOfRemainingRecords());\n\n    // Generate a new tlog\n    addDocs(105, start, versions);\n    start += 105;\n    assertU(commit());\n\n    // Even if the subreader is past the first tlog, the first tlog should not have been removed\n    // since the parent reader is still pointing to it\n    assertEquals(3, ulog.getLogList(logDir).length);\n\n    // fast forward the parent reader with the subreader\n    reader.forwardSeek(subReader);\n    subReader.close();\n\n    // After fast forward, the parent reader should be position on the doc15\n    List o = (List) reader.next();\n    assertNotNull(o);\n    assertTrue(o.get(2) instanceof SolrInputDocument);\n    assertEquals(\"15\", ((SolrInputDocument) o.get(2)).getFieldValue(\"id\"));\n\n    // Finish to read the second tlog, and start to read the third one\n    for (int i = 0; i < 6; i++) {\n      assertNotNull(reader.next());\n    }\n\n    assertEquals(105, reader.getNumberOfRemainingRecords());\n\n    // Generate a new tlog to activate tlog cleaning\n    addDocs(10, start, versions);\n    start += 10;\n    assertU(commit());\n\n    // If the parent reader was correctly fast forwarded, it should be on the third tlog, and the first two should\n    // have been removed.\n    assertEquals(2, ulog.getLogList(logDir).length);\n  }\n\n","bugFix":["86290366cefc1b9d4eced13b430858c4a4c0421d"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e98520789adb1d5ad05afb4956eca0944a929688","date":1592430701,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/update/CdcrUpdateLogTest#testSubReader().mjava","pathOld":"solr/core/src/test/org/apache/solr/update/CdcrUpdateLogTest#testSubReader().mjava","sourceNew":"  @Test\n  public void testSubReader() throws Exception {\n    this.clearCore();\n\n    CdcrUpdateLog ulog = (CdcrUpdateLog) h.getCore().getUpdateHandler().getUpdateLog();\n    File logDir = new File(h.getCore().getUpdateHandler().getUpdateLog().getLogDir());\n    CdcrUpdateLog.CdcrLogReader reader = ulog.newLogReader();\n\n    int start = 0;\n\n    LinkedList<Long> versions = new LinkedList<>();\n    addDocs(10, start, versions);\n    start += 10;\n    assertU(commit());\n\n    addDocs(10, start, versions);\n    start += 10;\n    assertU(commit());\n\n    assertEquals(2, ulog.getLogList(logDir).length);\n\n    // start to read the first tlog\n    for (int i = 0; i < 10; i++) {\n      assertNotNull(reader.next());\n    }\n\n    // instantiate a sub reader, and finish to read the first tlog (commit operation), plus start to read the\n    // second tlog (first five adds)\n    CdcrUpdateLog.CdcrLogReader subReader = reader.getSubReader();\n    for (int i = 0; i < 6; i++) {\n      assertNotNull(subReader.next());\n    }\n\n    // Five adds + one commit\n    assertEquals(6, subReader.getNumberOfRemainingRecords());\n\n    // Generate a new tlog\n    addDocs(105, start, versions);\n    start += 105;\n    assertU(commit());\n\n    // Even if the subreader is past the first tlog, the first tlog should not have been removed\n    // since the parent reader is still pointing to it\n    assertEquals(3, ulog.getLogList(logDir).length);\n\n    // fast forward the parent reader with the subreader\n    reader.forwardSeek(subReader);\n    subReader.close();\n\n    // After fast forward, the parent reader should be position on the doc15\n    @SuppressWarnings({\"rawtypes\"})\n    List o = (List) reader.next();\n    assertNotNull(o);\n    assertTrue(\"Expected SolrInputDocument but got\" + o.toString() ,o.get(3) instanceof SolrInputDocument);\n    assertEquals(\"15\", ((SolrInputDocument) o.get(3)).getFieldValue(\"id\"));\n\n    // Finish to read the second tlog, and start to read the third one\n    for (int i = 0; i < 6; i++) {\n      assertNotNull(reader.next());\n    }\n\n    assertEquals(105, reader.getNumberOfRemainingRecords());\n\n    // Generate a new tlog to activate tlog cleaning\n    addDocs(10, start, versions);\n    start += 10;\n    assertU(commit());\n\n    // If the parent reader was correctly fast forwarded, it should be on the third tlog, and the first two should\n    // have been removed.\n    assertEquals(2, ulog.getLogList(logDir).length);\n  }\n\n","sourceOld":"  @Test\n  public void testSubReader() throws Exception {\n    this.clearCore();\n\n    CdcrUpdateLog ulog = (CdcrUpdateLog) h.getCore().getUpdateHandler().getUpdateLog();\n    File logDir = new File(h.getCore().getUpdateHandler().getUpdateLog().getLogDir());\n    CdcrUpdateLog.CdcrLogReader reader = ulog.newLogReader();\n\n    int start = 0;\n\n    LinkedList<Long> versions = new LinkedList<>();\n    addDocs(10, start, versions);\n    start += 10;\n    assertU(commit());\n\n    addDocs(10, start, versions);\n    start += 10;\n    assertU(commit());\n\n    assertEquals(2, ulog.getLogList(logDir).length);\n\n    // start to read the first tlog\n    for (int i = 0; i < 10; i++) {\n      assertNotNull(reader.next());\n    }\n\n    // instantiate a sub reader, and finish to read the first tlog (commit operation), plus start to read the\n    // second tlog (first five adds)\n    CdcrUpdateLog.CdcrLogReader subReader = reader.getSubReader();\n    for (int i = 0; i < 6; i++) {\n      assertNotNull(subReader.next());\n    }\n\n    // Five adds + one commit\n    assertEquals(6, subReader.getNumberOfRemainingRecords());\n\n    // Generate a new tlog\n    addDocs(105, start, versions);\n    start += 105;\n    assertU(commit());\n\n    // Even if the subreader is past the first tlog, the first tlog should not have been removed\n    // since the parent reader is still pointing to it\n    assertEquals(3, ulog.getLogList(logDir).length);\n\n    // fast forward the parent reader with the subreader\n    reader.forwardSeek(subReader);\n    subReader.close();\n\n    // After fast forward, the parent reader should be position on the doc15\n    List o = (List) reader.next();\n    assertNotNull(o);\n    assertTrue(\"Expected SolrInputDocument but got\" + o.toString() ,o.get(3) instanceof SolrInputDocument);\n    assertEquals(\"15\", ((SolrInputDocument) o.get(3)).getFieldValue(\"id\"));\n\n    // Finish to read the second tlog, and start to read the third one\n    for (int i = 0; i < 6; i++) {\n      assertNotNull(reader.next());\n    }\n\n    assertEquals(105, reader.getNumberOfRemainingRecords());\n\n    // Generate a new tlog to activate tlog cleaning\n    addDocs(10, start, versions);\n    start += 10;\n    assertU(commit());\n\n    // If the parent reader was correctly fast forwarded, it should be on the third tlog, and the first two should\n    // have been removed.\n    assertEquals(2, ulog.getLogList(logDir).length);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"23ec6d2969d61cadbfd0a5452e9be1f9999e8aa1","date":1598647393,"type":4,"author":"Ishan Chattopadhyaya","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/core/src/test/org/apache/solr/update/CdcrUpdateLogTest#testSubReader().mjava","sourceNew":null,"sourceOld":"  @Test\n  public void testSubReader() throws Exception {\n    this.clearCore();\n\n    CdcrUpdateLog ulog = (CdcrUpdateLog) h.getCore().getUpdateHandler().getUpdateLog();\n    File logDir = new File(h.getCore().getUpdateHandler().getUpdateLog().getLogDir());\n    CdcrUpdateLog.CdcrLogReader reader = ulog.newLogReader();\n\n    int start = 0;\n\n    LinkedList<Long> versions = new LinkedList<>();\n    addDocs(10, start, versions);\n    start += 10;\n    assertU(commit());\n\n    addDocs(10, start, versions);\n    start += 10;\n    assertU(commit());\n\n    assertEquals(2, ulog.getLogList(logDir).length);\n\n    // start to read the first tlog\n    for (int i = 0; i < 10; i++) {\n      assertNotNull(reader.next());\n    }\n\n    // instantiate a sub reader, and finish to read the first tlog (commit operation), plus start to read the\n    // second tlog (first five adds)\n    CdcrUpdateLog.CdcrLogReader subReader = reader.getSubReader();\n    for (int i = 0; i < 6; i++) {\n      assertNotNull(subReader.next());\n    }\n\n    // Five adds + one commit\n    assertEquals(6, subReader.getNumberOfRemainingRecords());\n\n    // Generate a new tlog\n    addDocs(105, start, versions);\n    start += 105;\n    assertU(commit());\n\n    // Even if the subreader is past the first tlog, the first tlog should not have been removed\n    // since the parent reader is still pointing to it\n    assertEquals(3, ulog.getLogList(logDir).length);\n\n    // fast forward the parent reader with the subreader\n    reader.forwardSeek(subReader);\n    subReader.close();\n\n    // After fast forward, the parent reader should be position on the doc15\n    @SuppressWarnings({\"rawtypes\"})\n    List o = (List) reader.next();\n    assertNotNull(o);\n    assertTrue(\"Expected SolrInputDocument but got\" + o.toString() ,o.get(3) instanceof SolrInputDocument);\n    assertEquals(\"15\", ((SolrInputDocument) o.get(3)).getFieldValue(\"id\"));\n\n    // Finish to read the second tlog, and start to read the third one\n    for (int i = 0; i < 6; i++) {\n      assertNotNull(reader.next());\n    }\n\n    assertEquals(105, reader.getNumberOfRemainingRecords());\n\n    // Generate a new tlog to activate tlog cleaning\n    addDocs(10, start, versions);\n    start += 10;\n    assertU(commit());\n\n    // If the parent reader was correctly fast forwarded, it should be on the third tlog, and the first two should\n    // have been removed.\n    assertEquals(2, ulog.getLogList(logDir).length);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"86290366cefc1b9d4eced13b430858c4a4c0421d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"d73860af421c12136411fd196f144be7da130582":["86290366cefc1b9d4eced13b430858c4a4c0421d"],"23ec6d2969d61cadbfd0a5452e9be1f9999e8aa1":["e98520789adb1d5ad05afb4956eca0944a929688"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["23ec6d2969d61cadbfd0a5452e9be1f9999e8aa1"],"e98520789adb1d5ad05afb4956eca0944a929688":["d73860af421c12136411fd196f144be7da130582"]},"commit2Childs":{"86290366cefc1b9d4eced13b430858c4a4c0421d":["d73860af421c12136411fd196f144be7da130582"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["86290366cefc1b9d4eced13b430858c4a4c0421d"],"d73860af421c12136411fd196f144be7da130582":["e98520789adb1d5ad05afb4956eca0944a929688"],"23ec6d2969d61cadbfd0a5452e9be1f9999e8aa1":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"e98520789adb1d5ad05afb4956eca0944a929688":["23ec6d2969d61cadbfd0a5452e9be1f9999e8aa1"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}