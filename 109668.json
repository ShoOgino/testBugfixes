{"path":"lucene/src/java/org/apache/lucene/search/spans/SpanPositionCheckQuery#acceptPosition(Spans).mjava","commits":[{"id":"498e168d849b4dbc097ac7b31f6db170d6f55725","date":1286807836,"type":0,"author":"Grant Ingersoll","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/search/spans/SpanPositionCheckQuery#acceptPosition(Spans).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Implementing classes are required to return whether the current position is a match for the passed in\n   * \"match\" {@link org.apache.lucene.search.spans.SpanQuery}.\n   *\n   * This is only called if the underlying {@link org.apache.lucene.search.spans.Spans#next()} for the\n   * match is successful\n   *\n   *\n   * @param spans The {@link org.apache.lucene.search.spans.Spans} instance, positioned at the spot to check\n   * @return true if it is a match, else false.\n   *\n   * @see org.apache.lucene.search.spans.Spans#next()\n   *\n   */\n  protected abstract boolean acceptPosition(Spans spans) throws IOException;\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c925a1f2801303835dcd229e7f21bcd280746332","date":1289846486,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/search/spans/SpanPositionCheckQuery#acceptPosition(Spans).mjava","pathOld":"lucene/src/java/org/apache/lucene/search/spans/SpanPositionCheckQuery#acceptPosition(Spans).mjava","sourceNew":"  /**\n   * Implementing classes are required to return whether the current position is a match for the passed in\n   * \"match\" {@link org.apache.lucene.search.spans.SpanQuery}.\n   *\n   * This is only called if the underlying {@link org.apache.lucene.search.spans.Spans#next()} for the\n   * match is successful\n   *\n   *\n   * @param spans The {@link org.apache.lucene.search.spans.Spans} instance, positioned at the spot to check\n   * @return whether the match is accepted, rejected, or rejected and should move to the next doc.\n   *\n   * @see org.apache.lucene.search.spans.Spans#next()\n   *\n   */\n  protected abstract AcceptStatus acceptPosition(Spans spans) throws IOException;\n\n","sourceOld":"  /**\n   * Implementing classes are required to return whether the current position is a match for the passed in\n   * \"match\" {@link org.apache.lucene.search.spans.SpanQuery}.\n   *\n   * This is only called if the underlying {@link org.apache.lucene.search.spans.Spans#next()} for the\n   * match is successful\n   *\n   *\n   * @param spans The {@link org.apache.lucene.search.spans.Spans} instance, positioned at the spot to check\n   * @return true if it is a match, else false.\n   *\n   * @see org.apache.lucene.search.spans.Spans#next()\n   *\n   */\n  protected abstract boolean acceptPosition(Spans spans) throws IOException;\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9ab1f5591dc05f1f2b5407d809c9699f75554a32","date":1290008586,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/search/spans/SpanPositionCheckQuery#acceptPosition(Spans).mjava","pathOld":"lucene/src/java/org/apache/lucene/search/spans/SpanPositionCheckQuery#acceptPosition(Spans).mjava","sourceNew":"  /**\n   * Implementing classes are required to return whether the current position is a match for the passed in\n   * \"match\" {@link org.apache.lucene.search.spans.SpanQuery}.\n   *\n   * This is only called if the underlying {@link org.apache.lucene.search.spans.Spans#next()} for the\n   * match is successful\n   *\n   *\n   * @param spans The {@link org.apache.lucene.search.spans.Spans} instance, positioned at the spot to check\n   * @return whether the match is accepted, rejected, or rejected and should move to the next doc.\n   *\n   * @see org.apache.lucene.search.spans.Spans#next()\n   *\n   */\n  protected abstract AcceptStatus acceptPosition(Spans spans) throws IOException;\n\n","sourceOld":"  /**\n   * Implementing classes are required to return whether the current position is a match for the passed in\n   * \"match\" {@link org.apache.lucene.search.spans.SpanQuery}.\n   *\n   * This is only called if the underlying {@link org.apache.lucene.search.spans.Spans#next()} for the\n   * match is successful\n   *\n   *\n   * @param spans The {@link org.apache.lucene.search.spans.Spans} instance, positioned at the spot to check\n   * @return true if it is a match, else false.\n   *\n   * @see org.apache.lucene.search.spans.Spans#next()\n   *\n   */\n  protected abstract boolean acceptPosition(Spans spans) throws IOException;\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","date":1292920096,"type":0,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/search/spans/SpanPositionCheckQuery#acceptPosition(Spans).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Implementing classes are required to return whether the current position is a match for the passed in\n   * \"match\" {@link org.apache.lucene.search.spans.SpanQuery}.\n   *\n   * This is only called if the underlying {@link org.apache.lucene.search.spans.Spans#next()} for the\n   * match is successful\n   *\n   *\n   * @param spans The {@link org.apache.lucene.search.spans.Spans} instance, positioned at the spot to check\n   * @return whether the match is accepted, rejected, or rejected and should move to the next doc.\n   *\n   * @see org.apache.lucene.search.spans.Spans#next()\n   *\n   */\n  protected abstract AcceptStatus acceptPosition(Spans spans) throws IOException;\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":5,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/spans/SpanPositionCheckQuery#acceptPosition(Spans).mjava","pathOld":"lucene/src/java/org/apache/lucene/search/spans/SpanPositionCheckQuery#acceptPosition(Spans).mjava","sourceNew":"  /**\n   * Implementing classes are required to return whether the current position is a match for the passed in\n   * \"match\" {@link org.apache.lucene.search.spans.SpanQuery}.\n   *\n   * This is only called if the underlying {@link org.apache.lucene.search.spans.Spans#next()} for the\n   * match is successful\n   *\n   *\n   * @param spans The {@link org.apache.lucene.search.spans.Spans} instance, positioned at the spot to check\n   * @return whether the match is accepted, rejected, or rejected and should move to the next doc.\n   *\n   * @see org.apache.lucene.search.spans.Spans#next()\n   *\n   */\n  protected abstract AcceptStatus acceptPosition(Spans spans) throws IOException;\n\n","sourceOld":"  /**\n   * Implementing classes are required to return whether the current position is a match for the passed in\n   * \"match\" {@link org.apache.lucene.search.spans.SpanQuery}.\n   *\n   * This is only called if the underlying {@link org.apache.lucene.search.spans.Spans#next()} for the\n   * match is successful\n   *\n   *\n   * @param spans The {@link org.apache.lucene.search.spans.Spans} instance, positioned at the spot to check\n   * @return whether the match is accepted, rejected, or rejected and should move to the next doc.\n   *\n   * @see org.apache.lucene.search.spans.Spans#next()\n   *\n   */\n  protected abstract AcceptStatus acceptPosition(Spans spans) throws IOException;\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"c925a1f2801303835dcd229e7f21bcd280746332":["498e168d849b4dbc097ac7b31f6db170d6f55725"],"9ab1f5591dc05f1f2b5407d809c9699f75554a32":["498e168d849b4dbc097ac7b31f6db170d6f55725","c925a1f2801303835dcd229e7f21bcd280746332"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["c925a1f2801303835dcd229e7f21bcd280746332"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","c925a1f2801303835dcd229e7f21bcd280746332"],"498e168d849b4dbc097ac7b31f6db170d6f55725":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"]},"commit2Childs":{"c925a1f2801303835dcd229e7f21bcd280746332":["9ab1f5591dc05f1f2b5407d809c9699f75554a32","3a119bbc8703c10faa329ec201c654b3a35a1e3e","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a"],"9ab1f5591dc05f1f2b5407d809c9699f75554a32":[],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","498e168d849b4dbc097ac7b31f6db170d6f55725"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":[],"498e168d849b4dbc097ac7b31f6db170d6f55725":["c925a1f2801303835dcd229e7f21bcd280746332","9ab1f5591dc05f1f2b5407d809c9699f75554a32"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["9ab1f5591dc05f1f2b5407d809c9699f75554a32","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}