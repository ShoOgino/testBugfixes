{"path":"solr/solrj/src/java/org/apache/solr/client/solrj/request/CollectionAdminRequest#createCollection(String,Integer,Integer,Integer,String,String,String,SolrServer,String).mjava","commits":[{"id":"058f5a3debcfa0ea477da3eabb4cbe2ec0fac211","date":1394784078,"type":2,"author":"Anshum Gupta","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/request/CollectionAdminRequest#createCollection(String,Integer,Integer,Integer,String,String,String,SolrServer,String).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/request/CollectionAdminRequest#createCollection(String,String,Integer,Integer,String,String,String,SolrServer).mjava","sourceNew":"  // creates collection using a compositeId router\n  public static CollectionAdminResponse createCollection( String name,\n                                                          Integer shards, Integer repl, Integer maxShards,\n                                                          String nodeSet,\n                                                          String conf,\n                                                          String routerField,\n                                                          SolrServer server,\n                                                          String asyncId) throws SolrServerException, IOException\n  {\n    Create req = new Create();\n    req.setCollectionName(name);\n    req.setRouterName(\"compositeId\");\n    req.setNumShards(shards);\n    req.setReplicationFactor(repl);\n    req.setMaxShardsPerNode(maxShards);\n    req.setCreateNodeSet(nodeSet);\n    req.setConfigName(conf);\n    req.setRouterField(routerField);\n    req.setAsyncId(asyncId);\n    return req.process( server );\n  }\n\n","sourceOld":"  // creates a collection using an implicit router\n  public static CollectionAdminResponse createCollection( String name,\n                                                          String shards, Integer repl, Integer maxShards,\n                                                          String nodeSet,\n                                                          String conf,\n                                                          String routerField,\n                                                          SolrServer server ) throws SolrServerException, IOException\n  {\n    Create req = new Create();\n    req.setCollectionName(name);\n    req.setRouterName(\"implicit\");\n    req.setShards(shards);\n    req.setReplicationFactor(repl);\n    req.setMaxShardsPerNode(maxShards);\n    req.setCreateNodeSet(nodeSet);\n    req.setConfigName(conf);\n    req.setRouterField(routerField);\n    return req.process( server );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4a7d7ef06ef6f04ba2de657e90e0458048a967c6","date":1409691631,"type":4,"author":"Anshum Gupta","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/request/CollectionAdminRequest#createCollection(String,Integer,Integer,Integer,String,String,String,SolrServer,String).mjava","sourceNew":null,"sourceOld":"  // creates collection using a compositeId router\n  public static CollectionAdminResponse createCollection( String name,\n                                                          Integer shards, Integer repl, Integer maxShards,\n                                                          String nodeSet,\n                                                          String conf,\n                                                          String routerField,\n                                                          SolrServer server,\n                                                          String asyncId) throws SolrServerException, IOException\n  {\n    Create req = new Create();\n    req.setCollectionName(name);\n    req.setRouterName(\"compositeId\");\n    req.setNumShards(shards);\n    req.setReplicationFactor(repl);\n    req.setMaxShardsPerNode(maxShards);\n    req.setCreateNodeSet(nodeSet);\n    req.setConfigName(conf);\n    req.setRouterField(routerField);\n    req.setAsyncId(asyncId);\n    return req.process( server );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"4a7d7ef06ef6f04ba2de657e90e0458048a967c6":["058f5a3debcfa0ea477da3eabb4cbe2ec0fac211"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"058f5a3debcfa0ea477da3eabb4cbe2ec0fac211":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["4a7d7ef06ef6f04ba2de657e90e0458048a967c6"]},"commit2Childs":{"4a7d7ef06ef6f04ba2de657e90e0458048a967c6":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["058f5a3debcfa0ea477da3eabb4cbe2ec0fac211"],"058f5a3debcfa0ea477da3eabb4cbe2ec0fac211":["4a7d7ef06ef6f04ba2de657e90e0458048a967c6"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}