{"path":"src/test/org/apache/lucene/queryParser/TestMultiAnalyzer.TestPosIncrementFilter#next().mjava","commits":[{"id":"d79a074a316c6cd3908ca819cd98ad74d1e4dd30","date":1131491144,"type":0,"author":"Daniel Naber","isMerge":false,"pathNew":"src/test/org/apache/lucene/queryParser/TestMultiAnalyzer.TestPosIncrementFilter#next().mjava","pathOld":"/dev/null","sourceNew":"    public final org.apache.lucene.analysis.Token next() throws java.io.IOException {\n      for (Token t = input.next(); t != null; t = input.next()) {\n        if (t.termText().equals(\"the\")) {\n          // stopword, do nothing\n        } else if (t.termText().equals(\"quick\")) {\n          org.apache.lucene.analysis.Token token = \n            new org.apache.lucene.analysis.Token(t.termText(), t.startOffset(),\n                t.endOffset(), t.type());\n          token.setPositionIncrement(2);\n          return token;\n        } else {\n          org.apache.lucene.analysis.Token token = \n            new org.apache.lucene.analysis.Token(t.termText(), t.startOffset(),\n                t.endOffset(), t.type());\n          token.setPositionIncrement(1);\n          return token;\n        }\n      }\n      return null;\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7e2cb543b41c145f33390f460ee743d6693c9c6c","date":1219243087,"type":4,"author":"Michael McCandless","isMerge":false,"pathNew":"/dev/null","pathOld":"src/test/org/apache/lucene/queryParser/TestMultiAnalyzer.TestPosIncrementFilter#next().mjava","sourceNew":null,"sourceOld":"    public final org.apache.lucene.analysis.Token next() throws java.io.IOException {\n      for (Token t = input.next(); t != null; t = input.next()) {\n        if (t.termText().equals(\"the\")) {\n          // stopword, do nothing\n        } else if (t.termText().equals(\"quick\")) {\n          org.apache.lucene.analysis.Token token = \n            new org.apache.lucene.analysis.Token(t.termText(), t.startOffset(),\n                t.endOffset(), t.type());\n          token.setPositionIncrement(2);\n          return token;\n        } else {\n          org.apache.lucene.analysis.Token token = \n            new org.apache.lucene.analysis.Token(t.termText(), t.startOffset(),\n                t.endOffset(), t.type());\n          token.setPositionIncrement(1);\n          return token;\n        }\n      }\n      return null;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"7e2cb543b41c145f33390f460ee743d6693c9c6c":["d79a074a316c6cd3908ca819cd98ad74d1e4dd30"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["7e2cb543b41c145f33390f460ee743d6693c9c6c"],"d79a074a316c6cd3908ca819cd98ad74d1e4dd30":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"7e2cb543b41c145f33390f460ee743d6693c9c6c":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["d79a074a316c6cd3908ca819cd98ad74d1e4dd30"],"d79a074a316c6cd3908ca819cd98ad74d1e4dd30":["7e2cb543b41c145f33390f460ee743d6693c9c6c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}