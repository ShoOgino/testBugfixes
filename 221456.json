{"path":"solr/core/src/java/org/apache/solr/search/join/GraphTermsCollector#addEdgeIdsToResult(int).mjava","commits":[{"id":"49f41ca5b59802ba2b8fb507bb73d5c4bf53db2b","date":1444426023,"type":0,"author":"Yonik Seeley","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/join/GraphTermsCollector#addEdgeIdsToResult(int).mjava","pathOld":"/dev/null","sourceNew":"  private void addEdgeIdsToResult(int doc) throws IOException {\n    // set the doc to pull the edges ids for.\n    docTermOrds.setDocument(doc);\n    BytesRef edgeValue = new BytesRef();\n    long ord;\n    while ((ord = docTermOrds.nextOrd()) != SortedSetDocValues.NO_MORE_ORDS) {\n      // TODO: handle non string type fields.\n      edgeValue = docTermOrds.lookupOrd(ord);\n      // add the edge id to the collector terms.\n      collectorTerms.add(edgeValue);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6652c74b2358a0b13223817a6a793bf1c9d0749d","date":1474465301,"type":3,"author":"Mike McCandless","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/join/GraphTermsCollector#addEdgeIdsToResult(int).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/join/GraphTermsCollector#addEdgeIdsToResult(int).mjava","sourceNew":"  private void addEdgeIdsToResult(int doc) throws IOException {\n    // set the doc to pull the edges ids for.\n    if (doc > docTermOrds.docID()) {\n      docTermOrds.advance(doc);\n    }\n    if (doc == docTermOrds.docID()) {\n      BytesRef edgeValue = new BytesRef();\n      long ord;\n      while ((ord = docTermOrds.nextOrd()) != SortedSetDocValues.NO_MORE_ORDS) {\n        // TODO: handle non string type fields.\n        edgeValue = docTermOrds.lookupOrd(ord);\n        // add the edge id to the collector terms.\n        collectorTerms.add(edgeValue);\n      }\n    }\n  }\n\n","sourceOld":"  private void addEdgeIdsToResult(int doc) throws IOException {\n    // set the doc to pull the edges ids for.\n    docTermOrds.setDocument(doc);\n    BytesRef edgeValue = new BytesRef();\n    long ord;\n    while ((ord = docTermOrds.nextOrd()) != SortedSetDocValues.NO_MORE_ORDS) {\n      // TODO: handle non string type fields.\n      edgeValue = docTermOrds.lookupOrd(ord);\n      // add the edge id to the collector terms.\n      collectorTerms.add(edgeValue);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"17e5da53e4e5bd659e22add9bba1cfa222e7e30d","date":1475435902,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/search/join/GraphTermsCollector#addEdgeIdsToResult(int).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/join/GraphTermsCollector#addEdgeIdsToResult(int).mjava","sourceNew":"  private void addEdgeIdsToResult(int doc) throws IOException {\n    // set the doc to pull the edges ids for.\n    if (doc > docTermOrds.docID()) {\n      docTermOrds.advance(doc);\n    }\n    if (doc == docTermOrds.docID()) {\n      BytesRef edgeValue = new BytesRef();\n      long ord;\n      while ((ord = docTermOrds.nextOrd()) != SortedSetDocValues.NO_MORE_ORDS) {\n        // TODO: handle non string type fields.\n        edgeValue = docTermOrds.lookupOrd(ord);\n        // add the edge id to the collector terms.\n        collectorTerms.add(edgeValue);\n      }\n    }\n  }\n\n","sourceOld":"  private void addEdgeIdsToResult(int doc) throws IOException {\n    // set the doc to pull the edges ids for.\n    docTermOrds.setDocument(doc);\n    BytesRef edgeValue = new BytesRef();\n    long ord;\n    while ((ord = docTermOrds.nextOrd()) != SortedSetDocValues.NO_MORE_ORDS) {\n      // TODO: handle non string type fields.\n      edgeValue = docTermOrds.lookupOrd(ord);\n      // add the edge id to the collector terms.\n      collectorTerms.add(edgeValue);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/search/join/GraphTermsCollector#addEdgeIdsToResult(int).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/join/GraphTermsCollector#addEdgeIdsToResult(int).mjava","sourceNew":"  private void addEdgeIdsToResult(int doc) throws IOException {\n    // set the doc to pull the edges ids for.\n    if (doc > docTermOrds.docID()) {\n      docTermOrds.advance(doc);\n    }\n    if (doc == docTermOrds.docID()) {\n      BytesRef edgeValue = new BytesRef();\n      long ord;\n      while ((ord = docTermOrds.nextOrd()) != SortedSetDocValues.NO_MORE_ORDS) {\n        // TODO: handle non string type fields.\n        edgeValue = docTermOrds.lookupOrd(ord);\n        // add the edge id to the collector terms.\n        collectorTerms.add(edgeValue);\n      }\n    }\n  }\n\n","sourceOld":"  private void addEdgeIdsToResult(int doc) throws IOException {\n    // set the doc to pull the edges ids for.\n    docTermOrds.setDocument(doc);\n    BytesRef edgeValue = new BytesRef();\n    long ord;\n    while ((ord = docTermOrds.nextOrd()) != SortedSetDocValues.NO_MORE_ORDS) {\n      // TODO: handle non string type fields.\n      edgeValue = docTermOrds.lookupOrd(ord);\n      // add the edge id to the collector terms.\n      collectorTerms.add(edgeValue);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a3be7723008a2c26b93c1b9d6a5e67ed2e4a2976","date":1500994164,"type":3,"author":"yonik","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/join/GraphTermsCollector#addEdgeIdsToResult(int).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/join/GraphTermsCollector#addEdgeIdsToResult(int).mjava","sourceNew":"  @Override\n  void addEdgeIdsToResult(int doc) throws IOException {\n    // set the doc to pull the edges ids for.\n    if (doc > docTermOrds.docID()) {\n      docTermOrds.advance(doc);\n    }\n    if (doc == docTermOrds.docID()) {\n      BytesRef edgeValue = new BytesRef();\n      long ord;\n      while ((ord = docTermOrds.nextOrd()) != SortedSetDocValues.NO_MORE_ORDS) {\n        edgeValue = docTermOrds.lookupOrd(ord);\n        // add the edge id to the collector terms.\n        collectorTerms.add(edgeValue);\n      }\n    }\n  }\n\n","sourceOld":"  private void addEdgeIdsToResult(int doc) throws IOException {\n    // set the doc to pull the edges ids for.\n    if (doc > docTermOrds.docID()) {\n      docTermOrds.advance(doc);\n    }\n    if (doc == docTermOrds.docID()) {\n      BytesRef edgeValue = new BytesRef();\n      long ord;\n      while ((ord = docTermOrds.nextOrd()) != SortedSetDocValues.NO_MORE_ORDS) {\n        // TODO: handle non string type fields.\n        edgeValue = docTermOrds.lookupOrd(ord);\n        // add the edge id to the collector terms.\n        collectorTerms.add(edgeValue);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a52341299179de5479672f7cf518bf4b173f34b3","date":1501079746,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/search/join/GraphTermsCollector#addEdgeIdsToResult(int).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/join/GraphTermsCollector#addEdgeIdsToResult(int).mjava","sourceNew":"  @Override\n  void addEdgeIdsToResult(int doc) throws IOException {\n    // set the doc to pull the edges ids for.\n    if (doc > docTermOrds.docID()) {\n      docTermOrds.advance(doc);\n    }\n    if (doc == docTermOrds.docID()) {\n      BytesRef edgeValue = new BytesRef();\n      long ord;\n      while ((ord = docTermOrds.nextOrd()) != SortedSetDocValues.NO_MORE_ORDS) {\n        edgeValue = docTermOrds.lookupOrd(ord);\n        // add the edge id to the collector terms.\n        collectorTerms.add(edgeValue);\n      }\n    }\n  }\n\n","sourceOld":"  private void addEdgeIdsToResult(int doc) throws IOException {\n    // set the doc to pull the edges ids for.\n    if (doc > docTermOrds.docID()) {\n      docTermOrds.advance(doc);\n    }\n    if (doc == docTermOrds.docID()) {\n      BytesRef edgeValue = new BytesRef();\n      long ord;\n      while ((ord = docTermOrds.nextOrd()) != SortedSetDocValues.NO_MORE_ORDS) {\n        // TODO: handle non string type fields.\n        edgeValue = docTermOrds.lookupOrd(ord);\n        // add the edge id to the collector terms.\n        collectorTerms.add(edgeValue);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7a23cf16c8fa265dc0a564adcabb55e3f054e0ac","date":1502192746,"type":3,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/search/join/GraphTermsCollector#addEdgeIdsToResult(int).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/join/GraphTermsCollector#addEdgeIdsToResult(int).mjava","sourceNew":"  @Override\n  void addEdgeIdsToResult(int doc) throws IOException {\n    // set the doc to pull the edges ids for.\n    if (doc > docTermOrds.docID()) {\n      docTermOrds.advance(doc);\n    }\n    if (doc == docTermOrds.docID()) {\n      BytesRef edgeValue = new BytesRef();\n      long ord;\n      while ((ord = docTermOrds.nextOrd()) != SortedSetDocValues.NO_MORE_ORDS) {\n        edgeValue = docTermOrds.lookupOrd(ord);\n        // add the edge id to the collector terms.\n        collectorTerms.add(edgeValue);\n      }\n    }\n  }\n\n","sourceOld":"  private void addEdgeIdsToResult(int doc) throws IOException {\n    // set the doc to pull the edges ids for.\n    if (doc > docTermOrds.docID()) {\n      docTermOrds.advance(doc);\n    }\n    if (doc == docTermOrds.docID()) {\n      BytesRef edgeValue = new BytesRef();\n      long ord;\n      while ((ord = docTermOrds.nextOrd()) != SortedSetDocValues.NO_MORE_ORDS) {\n        // TODO: handle non string type fields.\n        edgeValue = docTermOrds.lookupOrd(ord);\n        // add the edge id to the collector terms.\n        collectorTerms.add(edgeValue);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ba33781da68babcaa5828121b443d3eb5c9d8480","date":1590595589,"type":4,"author":"Erick Erickson","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/core/src/java/org/apache/solr/search/join/GraphTermsCollector#addEdgeIdsToResult(int).mjava","sourceNew":null,"sourceOld":"  @Override\n  void addEdgeIdsToResult(int doc) throws IOException {\n    // set the doc to pull the edges ids for.\n    if (doc > docTermOrds.docID()) {\n      docTermOrds.advance(doc);\n    }\n    if (doc == docTermOrds.docID()) {\n      BytesRef edgeValue = new BytesRef();\n      long ord;\n      while ((ord = docTermOrds.nextOrd()) != SortedSetDocValues.NO_MORE_ORDS) {\n        edgeValue = docTermOrds.lookupOrd(ord);\n        // add the edge id to the collector terms.\n        collectorTerms.add(edgeValue);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a3be7723008a2c26b93c1b9d6a5e67ed2e4a2976":["17e5da53e4e5bd659e22add9bba1cfa222e7e30d"],"a52341299179de5479672f7cf518bf4b173f34b3":["17e5da53e4e5bd659e22add9bba1cfa222e7e30d","a3be7723008a2c26b93c1b9d6a5e67ed2e4a2976"],"7a23cf16c8fa265dc0a564adcabb55e3f054e0ac":["17e5da53e4e5bd659e22add9bba1cfa222e7e30d","a52341299179de5479672f7cf518bf4b173f34b3"],"49f41ca5b59802ba2b8fb507bb73d5c4bf53db2b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"17e5da53e4e5bd659e22add9bba1cfa222e7e30d":["49f41ca5b59802ba2b8fb507bb73d5c4bf53db2b","6652c74b2358a0b13223817a6a793bf1c9d0749d"],"6652c74b2358a0b13223817a6a793bf1c9d0749d":["49f41ca5b59802ba2b8fb507bb73d5c4bf53db2b"],"ba33781da68babcaa5828121b443d3eb5c9d8480":["a52341299179de5479672f7cf518bf4b173f34b3"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["49f41ca5b59802ba2b8fb507bb73d5c4bf53db2b","17e5da53e4e5bd659e22add9bba1cfa222e7e30d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["ba33781da68babcaa5828121b443d3eb5c9d8480"]},"commit2Childs":{"a3be7723008a2c26b93c1b9d6a5e67ed2e4a2976":["a52341299179de5479672f7cf518bf4b173f34b3"],"a52341299179de5479672f7cf518bf4b173f34b3":["7a23cf16c8fa265dc0a564adcabb55e3f054e0ac","ba33781da68babcaa5828121b443d3eb5c9d8480"],"7a23cf16c8fa265dc0a564adcabb55e3f054e0ac":[],"49f41ca5b59802ba2b8fb507bb73d5c4bf53db2b":["17e5da53e4e5bd659e22add9bba1cfa222e7e30d","6652c74b2358a0b13223817a6a793bf1c9d0749d","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"17e5da53e4e5bd659e22add9bba1cfa222e7e30d":["a3be7723008a2c26b93c1b9d6a5e67ed2e4a2976","a52341299179de5479672f7cf518bf4b173f34b3","7a23cf16c8fa265dc0a564adcabb55e3f054e0ac","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["49f41ca5b59802ba2b8fb507bb73d5c4bf53db2b"],"6652c74b2358a0b13223817a6a793bf1c9d0749d":["17e5da53e4e5bd659e22add9bba1cfa222e7e30d"],"ba33781da68babcaa5828121b443d3eb5c9d8480":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["7a23cf16c8fa265dc0a564adcabb55e3f054e0ac","4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}