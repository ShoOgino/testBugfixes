{"path":"src/java/org/apache/lucene/util/MapOfSets#put(Object,Object).mjava","commits":[{"id":"e69f59b863731d864bf3047235e718f0f88f8841","date":1250105498,"type":0,"author":"Chris M. Hostetter","isMerge":false,"pathNew":"src/java/org/apache/lucene/util/MapOfSets#put(Object,Object).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Adds val to the Set associated with key in the Map.  If key is not \n   * already in the map, a new Set will first be created.\n   * @return the size of the Set associated with key once val is added to it.\n   */\n  public int put(Object key, Object val) {\n    final Set theSet;\n    if (theMap.containsKey(key)) {\n      theSet = (Set)theMap.get(key);\n    } else {\n      theSet = new HashSet(23);\n      theMap.put(key, theSet);\n    }\n    theSet.add(val);\n    return theSet.size();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ef82ff03e4016c705811b2658e81471a645c0e49","date":1255900293,"type":5,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/java/org/apache/lucene/util/MapOfSets#put(K,V).mjava","pathOld":"src/java/org/apache/lucene/util/MapOfSets#put(Object,Object).mjava","sourceNew":"  /**\n   * Adds val to the Set associated with key in the Map.  If key is not \n   * already in the map, a new Set will first be created.\n   * @return the size of the Set associated with key once val is added to it.\n   */\n  public int put(K key, V val) {\n    final Set<V> theSet;\n    if (theMap.containsKey(key)) {\n      theSet = theMap.get(key);\n    } else {\n      theSet = new HashSet<V>(23);\n      theMap.put(key, theSet);\n    }\n    theSet.add(val);\n    return theSet.size();\n  }\n\n","sourceOld":"  /**\n   * Adds val to the Set associated with key in the Map.  If key is not \n   * already in the map, a new Set will first be created.\n   * @return the size of the Set associated with key once val is added to it.\n   */\n  public int put(Object key, Object val) {\n    final Set theSet;\n    if (theMap.containsKey(key)) {\n      theSet = (Set)theMap.get(key);\n    } else {\n      theSet = new HashSet(23);\n      theMap.put(key, theSet);\n    }\n    theSet.add(val);\n    return theSet.size();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"ef82ff03e4016c705811b2658e81471a645c0e49":["e69f59b863731d864bf3047235e718f0f88f8841"],"e69f59b863731d864bf3047235e718f0f88f8841":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["ef82ff03e4016c705811b2658e81471a645c0e49"]},"commit2Childs":{"ef82ff03e4016c705811b2658e81471a645c0e49":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"e69f59b863731d864bf3047235e718f0f88f8841":["ef82ff03e4016c705811b2658e81471a645c0e49"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["e69f59b863731d864bf3047235e718f0f88f8841"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}