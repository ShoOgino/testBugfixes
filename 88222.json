{"path":"lucene/spatial/src/test/org/apache/lucene/spatial/spatial4j/geo3d/GeoPointTest#testPointRoundTrip(PlanetModel,double,double,double).mjava","commits":[{"id":"dfb390f37bc8aad924d0f0d4804ff075f37ca5f8","date":1433040621,"type":0,"author":"David Wayne Smiley","isMerge":false,"pathNew":"lucene/spatial/src/test/org/apache/lucene/spatial/spatial4j/geo3d/GeoPointTest#testPointRoundTrip(PlanetModel,double,double,double).mjava","pathOld":"/dev/null","sourceNew":"  protected void testPointRoundTrip(PlanetModel planetModel, double pLat, double pLon, double epsilon) {\n    final GeoPoint p1 = new GeoPoint(planetModel, pLat, pLon);\n    final GeoPoint p2 = new GeoPoint(planetModel, p1.getLatitude(), p1.getLongitude());\n    double dist = p1.arcDistance(p2);\n    assertEquals(0, dist, epsilon);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fec06d6753751ae302c7d35866763e6cb414112d","date":1433250698,"type":0,"author":"David Wayne Smiley","isMerge":true,"pathNew":"lucene/spatial/src/test/org/apache/lucene/spatial/spatial4j/geo3d/GeoPointTest#testPointRoundTrip(PlanetModel,double,double,double).mjava","pathOld":"/dev/null","sourceNew":"  protected void testPointRoundTrip(PlanetModel planetModel, double pLat, double pLon, double epsilon) {\n    final GeoPoint p1 = new GeoPoint(planetModel, pLat, pLon);\n    final GeoPoint p2 = new GeoPoint(planetModel, p1.getLatitude(), p1.getLongitude());\n    double dist = p1.arcDistance(p2);\n    assertEquals(0, dist, epsilon);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"535df84251be5af3be84d750beba0021aff9132d","date":1434649368,"type":3,"author":"David Wayne Smiley","isMerge":false,"pathNew":"lucene/spatial/src/test/org/apache/lucene/spatial/spatial4j/geo3d/GeoPointTest#testPointRoundTrip(PlanetModel,double,double,double).mjava","pathOld":"lucene/spatial/src/test/org/apache/lucene/spatial/spatial4j/geo3d/GeoPointTest#testPointRoundTrip(PlanetModel,double,double,double).mjava","sourceNew":"  protected void testPointRoundTrip(PlanetModel planetModel, double pLat, double pLon, double epsilon) {\n    final GeoPoint p1 = new GeoPoint(planetModel, pLat, pLon);\n    // In order to force the reverse conversion, we have to construct a geopoint from just x,y,z\n    final GeoPoint p2 = new GeoPoint(p1.x, p1.y, p1.z);\n    // Now, construct the final point based on getLatitude() and getLongitude()\n    final GeoPoint p3 = new GeoPoint(planetModel, p2.getLatitude(), p2.getLongitude());\n    double dist = p1.arcDistance(p3);\n    assertEquals(0, dist, epsilon);\n  }\n\n","sourceOld":"  protected void testPointRoundTrip(PlanetModel planetModel, double pLat, double pLon, double epsilon) {\n    final GeoPoint p1 = new GeoPoint(planetModel, pLat, pLon);\n    final GeoPoint p2 = new GeoPoint(planetModel, p1.getLatitude(), p1.getLongitude());\n    double dist = p1.arcDistance(p2);\n    assertEquals(0, dist, epsilon);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"112d77ac8d3e10a362516ad834c9a11d35c94234","date":1456784319,"type":5,"author":"nknize","isMerge":false,"pathNew":"lucene/spatial-extras/src/test/org/apache/lucene/spatial/spatial4j/geo3d/GeoPointTest#testPointRoundTrip(PlanetModel,double,double,double).mjava","pathOld":"lucene/spatial/src/test/org/apache/lucene/spatial/spatial4j/geo3d/GeoPointTest#testPointRoundTrip(PlanetModel,double,double,double).mjava","sourceNew":"  protected void testPointRoundTrip(PlanetModel planetModel, double pLat, double pLon, double epsilon) {\n    final GeoPoint p1 = new GeoPoint(planetModel, pLat, pLon);\n    // In order to force the reverse conversion, we have to construct a geopoint from just x,y,z\n    final GeoPoint p2 = new GeoPoint(p1.x, p1.y, p1.z);\n    // Now, construct the final point based on getLatitude() and getLongitude()\n    final GeoPoint p3 = new GeoPoint(planetModel, p2.getLatitude(), p2.getLongitude());\n    double dist = p1.arcDistance(p3);\n    assertEquals(0, dist, epsilon);\n  }\n\n","sourceOld":"  protected void testPointRoundTrip(PlanetModel planetModel, double pLat, double pLon, double epsilon) {\n    final GeoPoint p1 = new GeoPoint(planetModel, pLat, pLon);\n    // In order to force the reverse conversion, we have to construct a geopoint from just x,y,z\n    final GeoPoint p2 = new GeoPoint(p1.x, p1.y, p1.z);\n    // Now, construct the final point based on getLatitude() and getLongitude()\n    final GeoPoint p3 = new GeoPoint(planetModel, p2.getLatitude(), p2.getLongitude());\n    double dist = p1.arcDistance(p3);\n    assertEquals(0, dist, epsilon);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"af2638813028b254a88b418ebeafb541afb49653","date":1456804822,"type":5,"author":"Noble Paul","isMerge":true,"pathNew":"lucene/spatial-extras/src/test/org/apache/lucene/spatial/spatial4j/geo3d/GeoPointTest#testPointRoundTrip(PlanetModel,double,double,double).mjava","pathOld":"lucene/spatial/src/test/org/apache/lucene/spatial/spatial4j/geo3d/GeoPointTest#testPointRoundTrip(PlanetModel,double,double,double).mjava","sourceNew":"  protected void testPointRoundTrip(PlanetModel planetModel, double pLat, double pLon, double epsilon) {\n    final GeoPoint p1 = new GeoPoint(planetModel, pLat, pLon);\n    // In order to force the reverse conversion, we have to construct a geopoint from just x,y,z\n    final GeoPoint p2 = new GeoPoint(p1.x, p1.y, p1.z);\n    // Now, construct the final point based on getLatitude() and getLongitude()\n    final GeoPoint p3 = new GeoPoint(planetModel, p2.getLatitude(), p2.getLongitude());\n    double dist = p1.arcDistance(p3);\n    assertEquals(0, dist, epsilon);\n  }\n\n","sourceOld":"  protected void testPointRoundTrip(PlanetModel planetModel, double pLat, double pLon, double epsilon) {\n    final GeoPoint p1 = new GeoPoint(planetModel, pLat, pLon);\n    // In order to force the reverse conversion, we have to construct a geopoint from just x,y,z\n    final GeoPoint p2 = new GeoPoint(p1.x, p1.y, p1.z);\n    // Now, construct the final point based on getLatitude() and getLongitude()\n    final GeoPoint p3 = new GeoPoint(planetModel, p2.getLatitude(), p2.getLongitude());\n    double dist = p1.arcDistance(p3);\n    assertEquals(0, dist, epsilon);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"af2638813028b254a88b418ebeafb541afb49653":["535df84251be5af3be84d750beba0021aff9132d","112d77ac8d3e10a362516ad834c9a11d35c94234"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"fec06d6753751ae302c7d35866763e6cb414112d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","dfb390f37bc8aad924d0f0d4804ff075f37ca5f8"],"112d77ac8d3e10a362516ad834c9a11d35c94234":["535df84251be5af3be84d750beba0021aff9132d"],"535df84251be5af3be84d750beba0021aff9132d":["fec06d6753751ae302c7d35866763e6cb414112d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["af2638813028b254a88b418ebeafb541afb49653"],"dfb390f37bc8aad924d0f0d4804ff075f37ca5f8":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"af2638813028b254a88b418ebeafb541afb49653":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["fec06d6753751ae302c7d35866763e6cb414112d","dfb390f37bc8aad924d0f0d4804ff075f37ca5f8"],"fec06d6753751ae302c7d35866763e6cb414112d":["535df84251be5af3be84d750beba0021aff9132d"],"112d77ac8d3e10a362516ad834c9a11d35c94234":["af2638813028b254a88b418ebeafb541afb49653"],"535df84251be5af3be84d750beba0021aff9132d":["af2638813028b254a88b418ebeafb541afb49653","112d77ac8d3e10a362516ad834c9a11d35c94234"],"dfb390f37bc8aad924d0f0d4804ff075f37ca5f8":["fec06d6753751ae302c7d35866763e6cb414112d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}