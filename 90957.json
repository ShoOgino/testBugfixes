{"path":"lucene/src/java/org/apache/lucene/index/SegmentReader#SegmentReader(SegmentReader,MutableBits,int).mjava","commits":[{"id":"ef2642aa76c0d0714b26e5e7d5e3438a62db3cb7","date":1326996651,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/SegmentReader#SegmentReader(SegmentReader,MutableBits,int).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/SegmentReader#SegmentReader(SegmentReader,BitVector,int).mjava","sourceNew":"  // Create new SegmentReader sharing core from a previous\n  // SegmentReader and using the provided in-memory\n  // liveDocs.  Used by IndexWriter to provide a new NRT\n  // reader:\n  SegmentReader(SegmentReader parent, MutableBits liveDocs, int numDocs) throws IOException {\n    this.si = parent.si;\n    parent.core.incRef();\n    this.core = parent.core;\n\n    assert liveDocs != null;\n    this.liveDocs = liveDocs;\n\n    this.numDocs = numDocs;\n\n    assert checkLiveCounts(true);\n  }\n\n","sourceOld":"  // Create new SegmentReader sharing core from a previous\n  // SegmentReader and using the provided in-memory\n  // liveDocs.  Used by IndexWriter to provide a new NRT\n  // reader:\n  SegmentReader(SegmentReader parent, BitVector liveDocs, int numDocs) throws IOException {\n    this.si = parent.si;\n    parent.core.incRef();\n    this.core = parent.core;\n\n    assert liveDocs != null;\n    this.liveDocs = liveDocs;\n\n    this.numDocs = numDocs;\n\n    assert checkLiveCounts(true);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d3d53ad7b9687e0dfaacaab099d3c7e98bfbe78e","date":1327757020,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/SegmentReader#SegmentReader(SegmentReader,MutableBits,int).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/SegmentReader#SegmentReader(SegmentReader,MutableBits,int).mjava","sourceNew":"  // Create new SegmentReader sharing core from a previous\n  // SegmentReader and using the provided in-memory\n  // liveDocs.  Used by IndexWriter to provide a new NRT\n  // reader:\n  SegmentReader(SegmentReader parent, MutableBits liveDocs, int numDocs) throws IOException {\n    this.si = parent.si;\n    parent.core.incRef();\n    this.core = parent.core;\n\n    assert liveDocs != null;\n    this.liveDocs = liveDocs;\n\n    this.numDocs = numDocs;\n  }\n\n","sourceOld":"  // Create new SegmentReader sharing core from a previous\n  // SegmentReader and using the provided in-memory\n  // liveDocs.  Used by IndexWriter to provide a new NRT\n  // reader:\n  SegmentReader(SegmentReader parent, MutableBits liveDocs, int numDocs) throws IOException {\n    this.si = parent.si;\n    parent.core.incRef();\n    this.core = parent.core;\n\n    assert liveDocs != null;\n    this.liveDocs = liveDocs;\n\n    this.numDocs = numDocs;\n\n    assert checkLiveCounts(true);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"80293680d0a19eadc7283d9dde7cba1b155679b4","date":1327764733,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/SegmentReader#SegmentReader(SegmentReader,Bits,int).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/SegmentReader#SegmentReader(SegmentReader,MutableBits,int).mjava","sourceNew":"  // Create new SegmentReader sharing core from a previous\n  // SegmentReader and using the provided in-memory\n  // liveDocs.  Used by IndexWriter to provide a new NRT\n  // reader:\n  SegmentReader(SegmentReader parent, Bits liveDocs, int numDocs) throws IOException {\n    this.si = parent.si;\n    parent.core.incRef();\n    this.core = parent.core;\n\n    assert liveDocs != null;\n    this.liveDocs = liveDocs;\n\n    this.numDocs = numDocs;\n  }\n\n","sourceOld":"  // Create new SegmentReader sharing core from a previous\n  // SegmentReader and using the provided in-memory\n  // liveDocs.  Used by IndexWriter to provide a new NRT\n  // reader:\n  SegmentReader(SegmentReader parent, MutableBits liveDocs, int numDocs) throws IOException {\n    this.si = parent.si;\n    parent.core.incRef();\n    this.core = parent.core;\n\n    assert liveDocs != null;\n    this.liveDocs = liveDocs;\n\n    this.numDocs = numDocs;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"ef2642aa76c0d0714b26e5e7d5e3438a62db3cb7":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"d3d53ad7b9687e0dfaacaab099d3c7e98bfbe78e":["ef2642aa76c0d0714b26e5e7d5e3438a62db3cb7"],"80293680d0a19eadc7283d9dde7cba1b155679b4":["d3d53ad7b9687e0dfaacaab099d3c7e98bfbe78e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"ef2642aa76c0d0714b26e5e7d5e3438a62db3cb7":["d3d53ad7b9687e0dfaacaab099d3c7e98bfbe78e"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["ef2642aa76c0d0714b26e5e7d5e3438a62db3cb7","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"d3d53ad7b9687e0dfaacaab099d3c7e98bfbe78e":["80293680d0a19eadc7283d9dde7cba1b155679b4"],"80293680d0a19eadc7283d9dde7cba1b155679b4":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["80293680d0a19eadc7283d9dde7cba1b155679b4","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}