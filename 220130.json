{"path":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriter.IndexerThreadInterrupt#IndexerThreadInterrupt(int).mjava","commits":[{"id":"98d2deb8c96c79ebef084a1f8e5a1a6c08608f13","date":1409346855,"type":1,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriter.IndexerThreadInterrupt#IndexerThreadInterrupt(int).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriter.IndexerThreadInterrupt#IndexerThreadInterrupt().mjava","sourceNew":"    IndexerThreadInterrupt(int id) throws IOException {\n      this.id = id;\n      this.random = new Random(random().nextLong());\n      // make a little directory for addIndexes\n      // LUCENE-2239: won't work with NIOFS/MMAP\n      adder = new MockDirectoryWrapper(random, new RAMDirectory());\n      IndexWriterConfig conf = newIndexWriterConfig(random, new MockAnalyzer(random));\n      IndexWriter w = new IndexWriter(adder, conf);\n      Document doc = new Document();\n      doc.add(newStringField(random, \"id\", \"500\", Field.Store.NO));\n      doc.add(newField(random, \"field\", \"some prepackaged text contents\", storedTextType));\n      doc.add(new BinaryDocValuesField(\"binarydv\", new BytesRef(\"500\")));\n      doc.add(new NumericDocValuesField(\"numericdv\", 500));\n      doc.add(new SortedDocValuesField(\"sorteddv\", new BytesRef(\"500\")));\n      if (defaultCodecSupportsSortedSet()) {\n        doc.add(new SortedSetDocValuesField(\"sortedsetdv\", new BytesRef(\"one\")));\n        doc.add(new SortedSetDocValuesField(\"sortedsetdv\", new BytesRef(\"two\")));\n      }\n      if (defaultCodecSupportsSortedNumeric()) {\n        doc.add(new SortedNumericDocValuesField(\"sortednumericdv\", 4));\n        doc.add(new SortedNumericDocValuesField(\"sortednumericdv\", 3));\n      }\n      w.addDocument(doc);\n      doc = new Document();\n      doc.add(newStringField(random, \"id\", \"501\", Field.Store.NO));\n      doc.add(newField(random, \"field\", \"some more contents\", storedTextType));\n      doc.add(new BinaryDocValuesField(\"binarydv\", new BytesRef(\"501\")));\n      doc.add(new NumericDocValuesField(\"numericdv\", 501));\n      doc.add(new SortedDocValuesField(\"sorteddv\", new BytesRef(\"501\")));\n      if (defaultCodecSupportsSortedSet()) {\n        doc.add(new SortedSetDocValuesField(\"sortedsetdv\", new BytesRef(\"two\")));\n        doc.add(new SortedSetDocValuesField(\"sortedsetdv\", new BytesRef(\"three\")));\n      }\n      if (defaultCodecSupportsSortedNumeric()) {\n        doc.add(new SortedNumericDocValuesField(\"sortednumericdv\", 6));\n        doc.add(new SortedNumericDocValuesField(\"sortednumericdv\", 1));\n      }\n      w.addDocument(doc);\n      w.deleteDocuments(new Term(\"id\", \"500\"));\n      w.close();\n    }\n\n","sourceOld":"    IndexerThreadInterrupt() throws IOException {\n      this.random = new Random(random().nextLong());\n      // make a little directory for addIndexes\n      // LUCENE-2239: won't work with NIOFS/MMAP\n      adder = new MockDirectoryWrapper(random, new RAMDirectory());\n      IndexWriterConfig conf = newIndexWriterConfig(random, new MockAnalyzer(random));\n      IndexWriter w = new IndexWriter(adder, conf);\n      Document doc = new Document();\n      doc.add(newStringField(random, \"id\", \"500\", Field.Store.NO));\n      doc.add(newField(random, \"field\", \"some prepackaged text contents\", storedTextType));\n      doc.add(new BinaryDocValuesField(\"binarydv\", new BytesRef(\"500\")));\n      doc.add(new NumericDocValuesField(\"numericdv\", 500));\n      doc.add(new SortedDocValuesField(\"sorteddv\", new BytesRef(\"500\")));\n      if (defaultCodecSupportsSortedSet()) {\n        doc.add(new SortedSetDocValuesField(\"sortedsetdv\", new BytesRef(\"one\")));\n        doc.add(new SortedSetDocValuesField(\"sortedsetdv\", new BytesRef(\"two\")));\n      }\n      if (defaultCodecSupportsSortedNumeric()) {\n        doc.add(new SortedNumericDocValuesField(\"sortednumericdv\", 4));\n        doc.add(new SortedNumericDocValuesField(\"sortednumericdv\", 3));\n      }\n      w.addDocument(doc);\n      doc = new Document();\n      doc.add(newStringField(random, \"id\", \"501\", Field.Store.NO));\n      doc.add(newField(random, \"field\", \"some more contents\", storedTextType));\n      doc.add(new BinaryDocValuesField(\"binarydv\", new BytesRef(\"501\")));\n      doc.add(new NumericDocValuesField(\"numericdv\", 501));\n      doc.add(new SortedDocValuesField(\"sorteddv\", new BytesRef(\"501\")));\n      if (defaultCodecSupportsSortedSet()) {\n        doc.add(new SortedSetDocValuesField(\"sortedsetdv\", new BytesRef(\"two\")));\n        doc.add(new SortedSetDocValuesField(\"sortedsetdv\", new BytesRef(\"three\")));\n      }\n      if (defaultCodecSupportsSortedNumeric()) {\n        doc.add(new SortedNumericDocValuesField(\"sortednumericdv\", 6));\n        doc.add(new SortedNumericDocValuesField(\"sortednumericdv\", 1));\n      }\n      w.addDocument(doc);\n      w.deleteDocuments(new Term(\"id\", \"500\"));\n      w.close();\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ad2a673349939e48652bf304cccf673c3412198f","date":1409585169,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriter.IndexerThreadInterrupt#IndexerThreadInterrupt(int).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriter.IndexerThreadInterrupt#IndexerThreadInterrupt(int).mjava","sourceNew":"    IndexerThreadInterrupt(int id) throws IOException {\n      this.id = id;\n      this.random = new Random(random().nextLong());\n      // make a little directory for addIndexes\n      // LUCENE-2239: won't work with NIOFS/MMAP\n      adder = new MockDirectoryWrapper(random, new RAMDirectory());\n      IndexWriterConfig conf = newIndexWriterConfig(random, new MockAnalyzer(random));\n      IndexWriter w = new IndexWriter(adder, conf);\n      Document doc = new Document();\n      doc.add(newStringField(random, \"id\", \"500\", Field.Store.NO));\n      doc.add(newField(random, \"field\", \"some prepackaged text contents\", storedTextType));\n      doc.add(new BinaryDocValuesField(\"binarydv\", new BytesRef(\"500\")));\n      doc.add(new NumericDocValuesField(\"numericdv\", 500));\n      doc.add(new SortedDocValuesField(\"sorteddv\", new BytesRef(\"500\")));\n      doc.add(new SortedSetDocValuesField(\"sortedsetdv\", new BytesRef(\"one\")));\n      doc.add(new SortedSetDocValuesField(\"sortedsetdv\", new BytesRef(\"two\")));\n      doc.add(new SortedNumericDocValuesField(\"sortednumericdv\", 4));\n      doc.add(new SortedNumericDocValuesField(\"sortednumericdv\", 3));\n      w.addDocument(doc);\n      doc = new Document();\n      doc.add(newStringField(random, \"id\", \"501\", Field.Store.NO));\n      doc.add(newField(random, \"field\", \"some more contents\", storedTextType));\n      doc.add(new BinaryDocValuesField(\"binarydv\", new BytesRef(\"501\")));\n      doc.add(new NumericDocValuesField(\"numericdv\", 501));\n      doc.add(new SortedDocValuesField(\"sorteddv\", new BytesRef(\"501\")));\n      doc.add(new SortedSetDocValuesField(\"sortedsetdv\", new BytesRef(\"two\")));\n      doc.add(new SortedSetDocValuesField(\"sortedsetdv\", new BytesRef(\"three\")));\n      doc.add(new SortedNumericDocValuesField(\"sortednumericdv\", 6));\n      doc.add(new SortedNumericDocValuesField(\"sortednumericdv\", 1));\n      w.addDocument(doc);\n      w.deleteDocuments(new Term(\"id\", \"500\"));\n      w.close();\n    }\n\n","sourceOld":"    IndexerThreadInterrupt(int id) throws IOException {\n      this.id = id;\n      this.random = new Random(random().nextLong());\n      // make a little directory for addIndexes\n      // LUCENE-2239: won't work with NIOFS/MMAP\n      adder = new MockDirectoryWrapper(random, new RAMDirectory());\n      IndexWriterConfig conf = newIndexWriterConfig(random, new MockAnalyzer(random));\n      IndexWriter w = new IndexWriter(adder, conf);\n      Document doc = new Document();\n      doc.add(newStringField(random, \"id\", \"500\", Field.Store.NO));\n      doc.add(newField(random, \"field\", \"some prepackaged text contents\", storedTextType));\n      doc.add(new BinaryDocValuesField(\"binarydv\", new BytesRef(\"500\")));\n      doc.add(new NumericDocValuesField(\"numericdv\", 500));\n      doc.add(new SortedDocValuesField(\"sorteddv\", new BytesRef(\"500\")));\n      if (defaultCodecSupportsSortedSet()) {\n        doc.add(new SortedSetDocValuesField(\"sortedsetdv\", new BytesRef(\"one\")));\n        doc.add(new SortedSetDocValuesField(\"sortedsetdv\", new BytesRef(\"two\")));\n      }\n      if (defaultCodecSupportsSortedNumeric()) {\n        doc.add(new SortedNumericDocValuesField(\"sortednumericdv\", 4));\n        doc.add(new SortedNumericDocValuesField(\"sortednumericdv\", 3));\n      }\n      w.addDocument(doc);\n      doc = new Document();\n      doc.add(newStringField(random, \"id\", \"501\", Field.Store.NO));\n      doc.add(newField(random, \"field\", \"some more contents\", storedTextType));\n      doc.add(new BinaryDocValuesField(\"binarydv\", new BytesRef(\"501\")));\n      doc.add(new NumericDocValuesField(\"numericdv\", 501));\n      doc.add(new SortedDocValuesField(\"sorteddv\", new BytesRef(\"501\")));\n      if (defaultCodecSupportsSortedSet()) {\n        doc.add(new SortedSetDocValuesField(\"sortedsetdv\", new BytesRef(\"two\")));\n        doc.add(new SortedSetDocValuesField(\"sortedsetdv\", new BytesRef(\"three\")));\n      }\n      if (defaultCodecSupportsSortedNumeric()) {\n        doc.add(new SortedNumericDocValuesField(\"sortednumericdv\", 6));\n        doc.add(new SortedNumericDocValuesField(\"sortednumericdv\", 1));\n      }\n      w.addDocument(doc);\n      w.deleteDocuments(new Term(\"id\", \"500\"));\n      w.close();\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"402ad3ddc9da7b70da1b167667a60ece6a1381fb","date":1409656478,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriter.IndexerThreadInterrupt#IndexerThreadInterrupt(int).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriter.IndexerThreadInterrupt#IndexerThreadInterrupt(int).mjava","sourceNew":"    IndexerThreadInterrupt(int id) throws IOException {\n      this.id = id;\n      this.random = new Random(random().nextLong());\n      // make a little directory for addIndexes\n      // LUCENE-2239: won't work with NIOFS/MMAP\n      adder = new MockDirectoryWrapper(random, new RAMDirectory());\n      IndexWriterConfig conf = newIndexWriterConfig(random, new MockAnalyzer(random));\n      IndexWriter w = new IndexWriter(adder, conf);\n      Document doc = new Document();\n      doc.add(newStringField(random, \"id\", \"500\", Field.Store.NO));\n      doc.add(newField(random, \"field\", \"some prepackaged text contents\", storedTextType));\n      doc.add(new BinaryDocValuesField(\"binarydv\", new BytesRef(\"500\")));\n      doc.add(new NumericDocValuesField(\"numericdv\", 500));\n      doc.add(new SortedDocValuesField(\"sorteddv\", new BytesRef(\"500\")));\n      doc.add(new SortedSetDocValuesField(\"sortedsetdv\", new BytesRef(\"one\")));\n      doc.add(new SortedSetDocValuesField(\"sortedsetdv\", new BytesRef(\"two\")));\n      doc.add(new SortedNumericDocValuesField(\"sortednumericdv\", 4));\n      doc.add(new SortedNumericDocValuesField(\"sortednumericdv\", 3));\n      w.addDocument(doc);\n      doc = new Document();\n      doc.add(newStringField(random, \"id\", \"501\", Field.Store.NO));\n      doc.add(newField(random, \"field\", \"some more contents\", storedTextType));\n      doc.add(new BinaryDocValuesField(\"binarydv\", new BytesRef(\"501\")));\n      doc.add(new NumericDocValuesField(\"numericdv\", 501));\n      doc.add(new SortedDocValuesField(\"sorteddv\", new BytesRef(\"501\")));\n      doc.add(new SortedSetDocValuesField(\"sortedsetdv\", new BytesRef(\"two\")));\n      doc.add(new SortedSetDocValuesField(\"sortedsetdv\", new BytesRef(\"three\")));\n      doc.add(new SortedNumericDocValuesField(\"sortednumericdv\", 6));\n      doc.add(new SortedNumericDocValuesField(\"sortednumericdv\", 1));\n      w.addDocument(doc);\n      w.deleteDocuments(new Term(\"id\", \"500\"));\n      w.close();\n    }\n\n","sourceOld":"    IndexerThreadInterrupt(int id) throws IOException {\n      this.id = id;\n      this.random = new Random(random().nextLong());\n      // make a little directory for addIndexes\n      // LUCENE-2239: won't work with NIOFS/MMAP\n      adder = new MockDirectoryWrapper(random, new RAMDirectory());\n      IndexWriterConfig conf = newIndexWriterConfig(random, new MockAnalyzer(random));\n      IndexWriter w = new IndexWriter(adder, conf);\n      Document doc = new Document();\n      doc.add(newStringField(random, \"id\", \"500\", Field.Store.NO));\n      doc.add(newField(random, \"field\", \"some prepackaged text contents\", storedTextType));\n      doc.add(new BinaryDocValuesField(\"binarydv\", new BytesRef(\"500\")));\n      doc.add(new NumericDocValuesField(\"numericdv\", 500));\n      doc.add(new SortedDocValuesField(\"sorteddv\", new BytesRef(\"500\")));\n      if (defaultCodecSupportsSortedSet()) {\n        doc.add(new SortedSetDocValuesField(\"sortedsetdv\", new BytesRef(\"one\")));\n        doc.add(new SortedSetDocValuesField(\"sortedsetdv\", new BytesRef(\"two\")));\n      }\n      if (defaultCodecSupportsSortedNumeric()) {\n        doc.add(new SortedNumericDocValuesField(\"sortednumericdv\", 4));\n        doc.add(new SortedNumericDocValuesField(\"sortednumericdv\", 3));\n      }\n      w.addDocument(doc);\n      doc = new Document();\n      doc.add(newStringField(random, \"id\", \"501\", Field.Store.NO));\n      doc.add(newField(random, \"field\", \"some more contents\", storedTextType));\n      doc.add(new BinaryDocValuesField(\"binarydv\", new BytesRef(\"501\")));\n      doc.add(new NumericDocValuesField(\"numericdv\", 501));\n      doc.add(new SortedDocValuesField(\"sorteddv\", new BytesRef(\"501\")));\n      if (defaultCodecSupportsSortedSet()) {\n        doc.add(new SortedSetDocValuesField(\"sortedsetdv\", new BytesRef(\"two\")));\n        doc.add(new SortedSetDocValuesField(\"sortedsetdv\", new BytesRef(\"three\")));\n      }\n      if (defaultCodecSupportsSortedNumeric()) {\n        doc.add(new SortedNumericDocValuesField(\"sortednumericdv\", 6));\n        doc.add(new SortedNumericDocValuesField(\"sortednumericdv\", 1));\n      }\n      w.addDocument(doc);\n      w.deleteDocuments(new Term(\"id\", \"500\"));\n      w.close();\n    }\n\n","bugFix":["81d695ea56e846db8af5ac4e15826d341ef894e1","d14ffaac9c4a4a2c750bf0cd956506802561e062"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9299079153fd7895bf3cf6835cf7019af2ba89b3","date":1417813477,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriter.IndexerThreadInterrupt#IndexerThreadInterrupt(int).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriter.IndexerThreadInterrupt#IndexerThreadInterrupt(int).mjava","sourceNew":"    IndexerThreadInterrupt(int id) throws IOException {\n      this.id = id;\n      this.random = new Random(random().nextLong());\n      // make a little directory for addIndexes\n      // LUCENE-2239: won't work with NIOFS/MMAP\n      adder = new MockDirectoryWrapper(random, new RAMDirectory());\n      IndexWriterConfig conf = newIndexWriterConfig(random, new MockAnalyzer(random));\n      if (conf.getMergeScheduler() instanceof ConcurrentMergeScheduler) {\n        conf.setMergeScheduler(new SuppressingConcurrentMergeScheduler() {\n            @Override\n            protected boolean isOK(Throwable th) {\n              return th instanceof AlreadyClosedException ||\n                (th instanceof IllegalStateException && th.getMessage().contains(\"this writer hit an unrecoverable error\"));\n            }\n          });\n      }\n      IndexWriter w = new IndexWriter(adder, conf);\n      Document doc = new Document();\n      doc.add(newStringField(random, \"id\", \"500\", Field.Store.NO));\n      doc.add(newField(random, \"field\", \"some prepackaged text contents\", storedTextType));\n      doc.add(new BinaryDocValuesField(\"binarydv\", new BytesRef(\"500\")));\n      doc.add(new NumericDocValuesField(\"numericdv\", 500));\n      doc.add(new SortedDocValuesField(\"sorteddv\", new BytesRef(\"500\")));\n      doc.add(new SortedSetDocValuesField(\"sortedsetdv\", new BytesRef(\"one\")));\n      doc.add(new SortedSetDocValuesField(\"sortedsetdv\", new BytesRef(\"two\")));\n      doc.add(new SortedNumericDocValuesField(\"sortednumericdv\", 4));\n      doc.add(new SortedNumericDocValuesField(\"sortednumericdv\", 3));\n      w.addDocument(doc);\n      doc = new Document();\n      doc.add(newStringField(random, \"id\", \"501\", Field.Store.NO));\n      doc.add(newField(random, \"field\", \"some more contents\", storedTextType));\n      doc.add(new BinaryDocValuesField(\"binarydv\", new BytesRef(\"501\")));\n      doc.add(new NumericDocValuesField(\"numericdv\", 501));\n      doc.add(new SortedDocValuesField(\"sorteddv\", new BytesRef(\"501\")));\n      doc.add(new SortedSetDocValuesField(\"sortedsetdv\", new BytesRef(\"two\")));\n      doc.add(new SortedSetDocValuesField(\"sortedsetdv\", new BytesRef(\"three\")));\n      doc.add(new SortedNumericDocValuesField(\"sortednumericdv\", 6));\n      doc.add(new SortedNumericDocValuesField(\"sortednumericdv\", 1));\n      w.addDocument(doc);\n      w.deleteDocuments(new Term(\"id\", \"500\"));\n      w.close();\n    }\n\n","sourceOld":"    IndexerThreadInterrupt(int id) throws IOException {\n      this.id = id;\n      this.random = new Random(random().nextLong());\n      // make a little directory for addIndexes\n      // LUCENE-2239: won't work with NIOFS/MMAP\n      adder = new MockDirectoryWrapper(random, new RAMDirectory());\n      IndexWriterConfig conf = newIndexWriterConfig(random, new MockAnalyzer(random));\n      IndexWriter w = new IndexWriter(adder, conf);\n      Document doc = new Document();\n      doc.add(newStringField(random, \"id\", \"500\", Field.Store.NO));\n      doc.add(newField(random, \"field\", \"some prepackaged text contents\", storedTextType));\n      doc.add(new BinaryDocValuesField(\"binarydv\", new BytesRef(\"500\")));\n      doc.add(new NumericDocValuesField(\"numericdv\", 500));\n      doc.add(new SortedDocValuesField(\"sorteddv\", new BytesRef(\"500\")));\n      doc.add(new SortedSetDocValuesField(\"sortedsetdv\", new BytesRef(\"one\")));\n      doc.add(new SortedSetDocValuesField(\"sortedsetdv\", new BytesRef(\"two\")));\n      doc.add(new SortedNumericDocValuesField(\"sortednumericdv\", 4));\n      doc.add(new SortedNumericDocValuesField(\"sortednumericdv\", 3));\n      w.addDocument(doc);\n      doc = new Document();\n      doc.add(newStringField(random, \"id\", \"501\", Field.Store.NO));\n      doc.add(newField(random, \"field\", \"some more contents\", storedTextType));\n      doc.add(new BinaryDocValuesField(\"binarydv\", new BytesRef(\"501\")));\n      doc.add(new NumericDocValuesField(\"numericdv\", 501));\n      doc.add(new SortedDocValuesField(\"sorteddv\", new BytesRef(\"501\")));\n      doc.add(new SortedSetDocValuesField(\"sortedsetdv\", new BytesRef(\"two\")));\n      doc.add(new SortedSetDocValuesField(\"sortedsetdv\", new BytesRef(\"three\")));\n      doc.add(new SortedNumericDocValuesField(\"sortednumericdv\", 6));\n      doc.add(new SortedNumericDocValuesField(\"sortednumericdv\", 1));\n      w.addDocument(doc);\n      w.deleteDocuments(new Term(\"id\", \"500\"));\n      w.close();\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d77dafd89756a5161d244985903e3487ca109182","date":1548679743,"type":3,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriter.IndexerThreadInterrupt#IndexerThreadInterrupt(int).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriter.IndexerThreadInterrupt#IndexerThreadInterrupt(int).mjava","sourceNew":"    IndexerThreadInterrupt(int id) throws IOException {\n      this.id = id;\n      this.random = new Random(random().nextLong());\n      // make a little directory for addIndexes\n      // LUCENE-2239: won't work with NIOFS/MMAP\n      adder = new MockDirectoryWrapper(random, new ByteBuffersDirectory());\n      IndexWriterConfig conf = newIndexWriterConfig(random, new MockAnalyzer(random));\n      if (conf.getMergeScheduler() instanceof ConcurrentMergeScheduler) {\n        conf.setMergeScheduler(new SuppressingConcurrentMergeScheduler() {\n            @Override\n            protected boolean isOK(Throwable th) {\n              return th instanceof AlreadyClosedException ||\n                (th instanceof IllegalStateException && th.getMessage().contains(\"this writer hit an unrecoverable error\"));\n            }\n          });\n      }\n      IndexWriter w = new IndexWriter(adder, conf);\n      Document doc = new Document();\n      doc.add(newStringField(random, \"id\", \"500\", Field.Store.NO));\n      doc.add(newField(random, \"field\", \"some prepackaged text contents\", storedTextType));\n      doc.add(new BinaryDocValuesField(\"binarydv\", new BytesRef(\"500\")));\n      doc.add(new NumericDocValuesField(\"numericdv\", 500));\n      doc.add(new SortedDocValuesField(\"sorteddv\", new BytesRef(\"500\")));\n      doc.add(new SortedSetDocValuesField(\"sortedsetdv\", new BytesRef(\"one\")));\n      doc.add(new SortedSetDocValuesField(\"sortedsetdv\", new BytesRef(\"two\")));\n      doc.add(new SortedNumericDocValuesField(\"sortednumericdv\", 4));\n      doc.add(new SortedNumericDocValuesField(\"sortednumericdv\", 3));\n      w.addDocument(doc);\n      doc = new Document();\n      doc.add(newStringField(random, \"id\", \"501\", Field.Store.NO));\n      doc.add(newField(random, \"field\", \"some more contents\", storedTextType));\n      doc.add(new BinaryDocValuesField(\"binarydv\", new BytesRef(\"501\")));\n      doc.add(new NumericDocValuesField(\"numericdv\", 501));\n      doc.add(new SortedDocValuesField(\"sorteddv\", new BytesRef(\"501\")));\n      doc.add(new SortedSetDocValuesField(\"sortedsetdv\", new BytesRef(\"two\")));\n      doc.add(new SortedSetDocValuesField(\"sortedsetdv\", new BytesRef(\"three\")));\n      doc.add(new SortedNumericDocValuesField(\"sortednumericdv\", 6));\n      doc.add(new SortedNumericDocValuesField(\"sortednumericdv\", 1));\n      w.addDocument(doc);\n      w.deleteDocuments(new Term(\"id\", \"500\"));\n      w.close();\n    }\n\n","sourceOld":"    IndexerThreadInterrupt(int id) throws IOException {\n      this.id = id;\n      this.random = new Random(random().nextLong());\n      // make a little directory for addIndexes\n      // LUCENE-2239: won't work with NIOFS/MMAP\n      adder = new MockDirectoryWrapper(random, new RAMDirectory());\n      IndexWriterConfig conf = newIndexWriterConfig(random, new MockAnalyzer(random));\n      if (conf.getMergeScheduler() instanceof ConcurrentMergeScheduler) {\n        conf.setMergeScheduler(new SuppressingConcurrentMergeScheduler() {\n            @Override\n            protected boolean isOK(Throwable th) {\n              return th instanceof AlreadyClosedException ||\n                (th instanceof IllegalStateException && th.getMessage().contains(\"this writer hit an unrecoverable error\"));\n            }\n          });\n      }\n      IndexWriter w = new IndexWriter(adder, conf);\n      Document doc = new Document();\n      doc.add(newStringField(random, \"id\", \"500\", Field.Store.NO));\n      doc.add(newField(random, \"field\", \"some prepackaged text contents\", storedTextType));\n      doc.add(new BinaryDocValuesField(\"binarydv\", new BytesRef(\"500\")));\n      doc.add(new NumericDocValuesField(\"numericdv\", 500));\n      doc.add(new SortedDocValuesField(\"sorteddv\", new BytesRef(\"500\")));\n      doc.add(new SortedSetDocValuesField(\"sortedsetdv\", new BytesRef(\"one\")));\n      doc.add(new SortedSetDocValuesField(\"sortedsetdv\", new BytesRef(\"two\")));\n      doc.add(new SortedNumericDocValuesField(\"sortednumericdv\", 4));\n      doc.add(new SortedNumericDocValuesField(\"sortednumericdv\", 3));\n      w.addDocument(doc);\n      doc = new Document();\n      doc.add(newStringField(random, \"id\", \"501\", Field.Store.NO));\n      doc.add(newField(random, \"field\", \"some more contents\", storedTextType));\n      doc.add(new BinaryDocValuesField(\"binarydv\", new BytesRef(\"501\")));\n      doc.add(new NumericDocValuesField(\"numericdv\", 501));\n      doc.add(new SortedDocValuesField(\"sorteddv\", new BytesRef(\"501\")));\n      doc.add(new SortedSetDocValuesField(\"sortedsetdv\", new BytesRef(\"two\")));\n      doc.add(new SortedSetDocValuesField(\"sortedsetdv\", new BytesRef(\"three\")));\n      doc.add(new SortedNumericDocValuesField(\"sortednumericdv\", 6));\n      doc.add(new SortedNumericDocValuesField(\"sortednumericdv\", 1));\n      w.addDocument(doc);\n      w.deleteDocuments(new Term(\"id\", \"500\"));\n      w.close();\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"d77dafd89756a5161d244985903e3487ca109182":["9299079153fd7895bf3cf6835cf7019af2ba89b3"],"9299079153fd7895bf3cf6835cf7019af2ba89b3":["402ad3ddc9da7b70da1b167667a60ece6a1381fb"],"98d2deb8c96c79ebef084a1f8e5a1a6c08608f13":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"ad2a673349939e48652bf304cccf673c3412198f":["98d2deb8c96c79ebef084a1f8e5a1a6c08608f13"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["d77dafd89756a5161d244985903e3487ca109182"],"402ad3ddc9da7b70da1b167667a60ece6a1381fb":["98d2deb8c96c79ebef084a1f8e5a1a6c08608f13","ad2a673349939e48652bf304cccf673c3412198f"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["98d2deb8c96c79ebef084a1f8e5a1a6c08608f13"],"d77dafd89756a5161d244985903e3487ca109182":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"9299079153fd7895bf3cf6835cf7019af2ba89b3":["d77dafd89756a5161d244985903e3487ca109182"],"98d2deb8c96c79ebef084a1f8e5a1a6c08608f13":["ad2a673349939e48652bf304cccf673c3412198f","402ad3ddc9da7b70da1b167667a60ece6a1381fb"],"ad2a673349939e48652bf304cccf673c3412198f":["402ad3ddc9da7b70da1b167667a60ece6a1381fb"],"402ad3ddc9da7b70da1b167667a60ece6a1381fb":["9299079153fd7895bf3cf6835cf7019af2ba89b3"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}