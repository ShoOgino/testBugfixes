{"path":"lucene/facet/src/test/org/apache/lucene/facet/simple/TestSortedSetDocValuesFacets#testBasic().mjava","commits":[{"id":"519ac3b8f2711b5bfeb1c90c77bb007032270a41","date":1384456090,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/simple/TestSortedSetDocValuesFacets#testBasic().mjava","pathOld":"/dev/null","sourceNew":"  public void testBasic() throws Exception {\n    assumeTrue(\"Test requires SortedSetDV support\", defaultCodecSupportsSortedSet());\n    Directory dir = newDirectory();\n\n    IndexWriter writer = new FacetIndexWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random())));\n\n    Document doc = new Document();\n    doc.add(new SortedSetDocValuesFacetField(\"a\", \"foo\"));\n    doc.add(new SortedSetDocValuesFacetField(\"a\", \"bar\"));\n    doc.add(new SortedSetDocValuesFacetField(\"a\", \"zoo\"));\n    doc.add(new SortedSetDocValuesFacetField(\"b\", \"baz\"));\n    writer.addDocument(doc);\n    if (random().nextBoolean()) {\n      writer.commit();\n    }\n\n    doc = new Document();\n    doc.add(new SortedSetDocValuesFacetField(\"a\", \"foo\"));\n    writer.addDocument(doc);\n\n    // NRT open\n    IndexSearcher searcher = newSearcher(DirectoryReader.open(writer, true));\n    writer.close();\n\n    // Per-top-reader state:\n    SortedSetDocValuesReaderState state = new SortedSetDocValuesReaderState(searcher.getIndexReader());\n    \n    SimpleFacetsCollector c = new SimpleFacetsCollector();\n\n    searcher.search(new MatchAllDocsQuery(), c);\n\n    SortedSetDocValuesFacetCounts facets = new SortedSetDocValuesFacetCounts(state, c);\n\n    assertEquals(\"a (4)\\n  foo (2)\\n  bar (1)\\n  zoo (1)\\n\", facets.getDim(\"a\", 10).toString());\n    assertEquals(\"b (1)\\n  baz (1)\\n\", facets.getDim(\"b\", 10).toString());\n\n    // DrillDown:\n    SimpleDrillDownQuery q = new SimpleDrillDownQuery();\n    q.add(new CategoryPath(\"a\", \"foo\"));\n    q.add(new CategoryPath(\"b\", \"baz\"));\n    TopDocs hits = searcher.search(q, 1);\n    assertEquals(1, hits.totalHits);\n\n    searcher.getIndexReader().close();\n    dir.close();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["402ad3ddc9da7b70da1b167667a60ece6a1381fb"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"93bee32f95de853915b2f9402e76ed24ef97f43e","date":1384460894,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/simple/TestSortedSetDocValuesFacets#testBasic().mjava","pathOld":"lucene/facet/src/test/org/apache/lucene/facet/simple/TestSortedSetDocValuesFacets#testBasic().mjava","sourceNew":"  public void testBasic() throws Exception {\n    assumeTrue(\"Test requires SortedSetDV support\", defaultCodecSupportsSortedSet());\n    Directory dir = newDirectory();\n\n    IndexWriter writer = new FacetIndexWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random())), null, new FacetsConfig());\n\n    Document doc = new Document();\n    doc.add(new SortedSetDocValuesFacetField(\"a\", \"foo\"));\n    doc.add(new SortedSetDocValuesFacetField(\"a\", \"bar\"));\n    doc.add(new SortedSetDocValuesFacetField(\"a\", \"zoo\"));\n    doc.add(new SortedSetDocValuesFacetField(\"b\", \"baz\"));\n    writer.addDocument(doc);\n    if (random().nextBoolean()) {\n      writer.commit();\n    }\n\n    doc = new Document();\n    doc.add(new SortedSetDocValuesFacetField(\"a\", \"foo\"));\n    writer.addDocument(doc);\n\n    // NRT open\n    IndexSearcher searcher = newSearcher(DirectoryReader.open(writer, true));\n    writer.close();\n\n    // Per-top-reader state:\n    SortedSetDocValuesReaderState state = new SortedSetDocValuesReaderState(searcher.getIndexReader());\n    \n    SimpleFacetsCollector c = new SimpleFacetsCollector();\n\n    searcher.search(new MatchAllDocsQuery(), c);\n\n    SortedSetDocValuesFacetCounts facets = new SortedSetDocValuesFacetCounts(state, c);\n\n    assertEquals(\"a (4)\\n  foo (2)\\n  bar (1)\\n  zoo (1)\\n\", facets.getTopChildren(10, \"a\").toString());\n    assertEquals(\"b (1)\\n  baz (1)\\n\", facets.getTopChildren(10, \"b\").toString());\n\n    // DrillDown:\n    SimpleDrillDownQuery q = new SimpleDrillDownQuery();\n    q.add(new CategoryPath(\"a\", \"foo\"));\n    q.add(new CategoryPath(\"b\", \"baz\"));\n    TopDocs hits = searcher.search(q, 1);\n    assertEquals(1, hits.totalHits);\n\n    searcher.getIndexReader().close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testBasic() throws Exception {\n    assumeTrue(\"Test requires SortedSetDV support\", defaultCodecSupportsSortedSet());\n    Directory dir = newDirectory();\n\n    IndexWriter writer = new FacetIndexWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random())));\n\n    Document doc = new Document();\n    doc.add(new SortedSetDocValuesFacetField(\"a\", \"foo\"));\n    doc.add(new SortedSetDocValuesFacetField(\"a\", \"bar\"));\n    doc.add(new SortedSetDocValuesFacetField(\"a\", \"zoo\"));\n    doc.add(new SortedSetDocValuesFacetField(\"b\", \"baz\"));\n    writer.addDocument(doc);\n    if (random().nextBoolean()) {\n      writer.commit();\n    }\n\n    doc = new Document();\n    doc.add(new SortedSetDocValuesFacetField(\"a\", \"foo\"));\n    writer.addDocument(doc);\n\n    // NRT open\n    IndexSearcher searcher = newSearcher(DirectoryReader.open(writer, true));\n    writer.close();\n\n    // Per-top-reader state:\n    SortedSetDocValuesReaderState state = new SortedSetDocValuesReaderState(searcher.getIndexReader());\n    \n    SimpleFacetsCollector c = new SimpleFacetsCollector();\n\n    searcher.search(new MatchAllDocsQuery(), c);\n\n    SortedSetDocValuesFacetCounts facets = new SortedSetDocValuesFacetCounts(state, c);\n\n    assertEquals(\"a (4)\\n  foo (2)\\n  bar (1)\\n  zoo (1)\\n\", facets.getDim(\"a\", 10).toString());\n    assertEquals(\"b (1)\\n  baz (1)\\n\", facets.getDim(\"b\", 10).toString());\n\n    // DrillDown:\n    SimpleDrillDownQuery q = new SimpleDrillDownQuery();\n    q.add(new CategoryPath(\"a\", \"foo\"));\n    q.add(new CategoryPath(\"b\", \"baz\"));\n    TopDocs hits = searcher.search(q, 1);\n    assertEquals(1, hits.totalHits);\n\n    searcher.getIndexReader().close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"c190847801a50f4dd20fd639bdc29b54ea3b288b","date":1384461522,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/simple/TestSortedSetDocValuesFacets#testBasic().mjava","pathOld":"lucene/facet/src/test/org/apache/lucene/facet/simple/TestSortedSetDocValuesFacets#testBasic().mjava","sourceNew":"  public void testBasic() throws Exception {\n    assumeTrue(\"Test requires SortedSetDV support\", defaultCodecSupportsSortedSet());\n    Directory dir = newDirectory();\n\n    IndexWriter writer = new FacetIndexWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random())), null, new FacetsConfig());\n\n    Document doc = new Document();\n    doc.add(new SortedSetDocValuesFacetField(\"a\", \"foo\"));\n    doc.add(new SortedSetDocValuesFacetField(\"a\", \"bar\"));\n    doc.add(new SortedSetDocValuesFacetField(\"a\", \"zoo\"));\n    doc.add(new SortedSetDocValuesFacetField(\"b\", \"baz\"));\n    writer.addDocument(doc);\n    if (random().nextBoolean()) {\n      writer.commit();\n    }\n\n    doc = new Document();\n    doc.add(new SortedSetDocValuesFacetField(\"a\", \"foo\"));\n    writer.addDocument(doc);\n\n    // NRT open\n    IndexSearcher searcher = newSearcher(DirectoryReader.open(writer, true));\n    writer.close();\n\n    // Per-top-reader state:\n    SortedSetDocValuesReaderState state = new SortedSetDocValuesReaderState(searcher.getIndexReader());\n    \n    SimpleFacetsCollector c = new SimpleFacetsCollector();\n\n    searcher.search(new MatchAllDocsQuery(), c);\n\n    SortedSetDocValuesFacetCounts facets = new SortedSetDocValuesFacetCounts(state, c);\n\n    assertEquals(\"a (4)\\n  foo (2)\\n  bar (1)\\n  zoo (1)\\n\", facets.getTopChildren(10, \"a\").toString());\n    assertEquals(\"b (1)\\n  baz (1)\\n\", facets.getTopChildren(10, \"b\").toString());\n\n    // DrillDown:\n    SimpleDrillDownQuery q = new SimpleDrillDownQuery();\n    q.add(new FacetLabel(\"a\", \"foo\"));\n    q.add(new FacetLabel(\"b\", \"baz\"));\n    TopDocs hits = searcher.search(q, 1);\n    assertEquals(1, hits.totalHits);\n\n    searcher.getIndexReader().close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testBasic() throws Exception {\n    assumeTrue(\"Test requires SortedSetDV support\", defaultCodecSupportsSortedSet());\n    Directory dir = newDirectory();\n\n    IndexWriter writer = new FacetIndexWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random())), null, new FacetsConfig());\n\n    Document doc = new Document();\n    doc.add(new SortedSetDocValuesFacetField(\"a\", \"foo\"));\n    doc.add(new SortedSetDocValuesFacetField(\"a\", \"bar\"));\n    doc.add(new SortedSetDocValuesFacetField(\"a\", \"zoo\"));\n    doc.add(new SortedSetDocValuesFacetField(\"b\", \"baz\"));\n    writer.addDocument(doc);\n    if (random().nextBoolean()) {\n      writer.commit();\n    }\n\n    doc = new Document();\n    doc.add(new SortedSetDocValuesFacetField(\"a\", \"foo\"));\n    writer.addDocument(doc);\n\n    // NRT open\n    IndexSearcher searcher = newSearcher(DirectoryReader.open(writer, true));\n    writer.close();\n\n    // Per-top-reader state:\n    SortedSetDocValuesReaderState state = new SortedSetDocValuesReaderState(searcher.getIndexReader());\n    \n    SimpleFacetsCollector c = new SimpleFacetsCollector();\n\n    searcher.search(new MatchAllDocsQuery(), c);\n\n    SortedSetDocValuesFacetCounts facets = new SortedSetDocValuesFacetCounts(state, c);\n\n    assertEquals(\"a (4)\\n  foo (2)\\n  bar (1)\\n  zoo (1)\\n\", facets.getTopChildren(10, \"a\").toString());\n    assertEquals(\"b (1)\\n  baz (1)\\n\", facets.getTopChildren(10, \"b\").toString());\n\n    // DrillDown:\n    SimpleDrillDownQuery q = new SimpleDrillDownQuery();\n    q.add(new CategoryPath(\"a\", \"foo\"));\n    q.add(new CategoryPath(\"b\", \"baz\"));\n    TopDocs hits = searcher.search(q, 1);\n    assertEquals(1, hits.totalHits);\n\n    searcher.getIndexReader().close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"9fdb15e93058f718a65d564872aadbed5ca78296","date":1384720267,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/simple/TestSortedSetDocValuesFacets#testBasic().mjava","pathOld":"lucene/facet/src/test/org/apache/lucene/facet/simple/TestSortedSetDocValuesFacets#testBasic().mjava","sourceNew":"  public void testBasic() throws Exception {\n    assumeTrue(\"Test requires SortedSetDV support\", defaultCodecSupportsSortedSet());\n    Directory dir = newDirectory();\n\n    FacetsConfig config = new FacetsConfig();\n    IndexWriter writer = new FacetIndexWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random())), null, config);\n\n    Document doc = new Document();\n    doc.add(new SortedSetDocValuesFacetField(\"a\", \"foo\"));\n    doc.add(new SortedSetDocValuesFacetField(\"a\", \"bar\"));\n    doc.add(new SortedSetDocValuesFacetField(\"a\", \"zoo\"));\n    doc.add(new SortedSetDocValuesFacetField(\"b\", \"baz\"));\n    writer.addDocument(doc);\n    if (random().nextBoolean()) {\n      writer.commit();\n    }\n\n    doc = new Document();\n    doc.add(new SortedSetDocValuesFacetField(\"a\", \"foo\"));\n    writer.addDocument(doc);\n\n    // NRT open\n    IndexSearcher searcher = newSearcher(DirectoryReader.open(writer, true));\n    writer.close();\n\n    // Per-top-reader state:\n    SortedSetDocValuesReaderState state = new SortedSetDocValuesReaderState(searcher.getIndexReader());\n    \n    SimpleFacetsCollector c = new SimpleFacetsCollector();\n\n    searcher.search(new MatchAllDocsQuery(), c);\n\n    SortedSetDocValuesFacetCounts facets = new SortedSetDocValuesFacetCounts(state, c);\n\n    assertEquals(\"a (4)\\n  foo (2)\\n  bar (1)\\n  zoo (1)\\n\", facets.getTopChildren(10, \"a\").toString());\n    assertEquals(\"b (1)\\n  baz (1)\\n\", facets.getTopChildren(10, \"b\").toString());\n\n    // DrillDown:\n    SimpleDrillDownQuery q = new SimpleDrillDownQuery(config);\n    q.add(\"a\", \"foo\");\n    q.add(\"b\", \"baz\");\n    TopDocs hits = searcher.search(q, 1);\n    assertEquals(1, hits.totalHits);\n\n    searcher.getIndexReader().close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testBasic() throws Exception {\n    assumeTrue(\"Test requires SortedSetDV support\", defaultCodecSupportsSortedSet());\n    Directory dir = newDirectory();\n\n    IndexWriter writer = new FacetIndexWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random())), null, new FacetsConfig());\n\n    Document doc = new Document();\n    doc.add(new SortedSetDocValuesFacetField(\"a\", \"foo\"));\n    doc.add(new SortedSetDocValuesFacetField(\"a\", \"bar\"));\n    doc.add(new SortedSetDocValuesFacetField(\"a\", \"zoo\"));\n    doc.add(new SortedSetDocValuesFacetField(\"b\", \"baz\"));\n    writer.addDocument(doc);\n    if (random().nextBoolean()) {\n      writer.commit();\n    }\n\n    doc = new Document();\n    doc.add(new SortedSetDocValuesFacetField(\"a\", \"foo\"));\n    writer.addDocument(doc);\n\n    // NRT open\n    IndexSearcher searcher = newSearcher(DirectoryReader.open(writer, true));\n    writer.close();\n\n    // Per-top-reader state:\n    SortedSetDocValuesReaderState state = new SortedSetDocValuesReaderState(searcher.getIndexReader());\n    \n    SimpleFacetsCollector c = new SimpleFacetsCollector();\n\n    searcher.search(new MatchAllDocsQuery(), c);\n\n    SortedSetDocValuesFacetCounts facets = new SortedSetDocValuesFacetCounts(state, c);\n\n    assertEquals(\"a (4)\\n  foo (2)\\n  bar (1)\\n  zoo (1)\\n\", facets.getTopChildren(10, \"a\").toString());\n    assertEquals(\"b (1)\\n  baz (1)\\n\", facets.getTopChildren(10, \"b\").toString());\n\n    // DrillDown:\n    SimpleDrillDownQuery q = new SimpleDrillDownQuery();\n    q.add(new FacetLabel(\"a\", \"foo\"));\n    q.add(new FacetLabel(\"b\", \"baz\"));\n    TopDocs hits = searcher.search(q, 1);\n    assertEquals(1, hits.totalHits);\n\n    searcher.getIndexReader().close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"7554009c97f9365492660c1df175b6349f7ec05c","date":1384886154,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/simple/TestSortedSetDocValuesFacets#testBasic().mjava","pathOld":"lucene/facet/src/test/org/apache/lucene/facet/simple/TestSortedSetDocValuesFacets#testBasic().mjava","sourceNew":"  public void testBasic() throws Exception {\n    assumeTrue(\"Test requires SortedSetDV support\", defaultCodecSupportsSortedSet());\n    Directory dir = newDirectory();\n\n    FacetsConfig config = new FacetsConfig();\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir);\n    FacetDocument facetDoc = new FacetDocument(null, config);\n\n    Document doc = new Document();\n    doc.add(new SortedSetDocValuesFacetField(\"a\", \"foo\"));\n    doc.add(new SortedSetDocValuesFacetField(\"a\", \"bar\"));\n    doc.add(new SortedSetDocValuesFacetField(\"a\", \"zoo\"));\n    doc.add(new SortedSetDocValuesFacetField(\"b\", \"baz\"));\n    writer.addDocument(facetDoc.build(doc));\n    if (random().nextBoolean()) {\n      writer.commit();\n    }\n\n    doc = new Document();\n    doc.add(new SortedSetDocValuesFacetField(\"a\", \"foo\"));\n    writer.addDocument(facetDoc.build(doc));\n\n    // NRT open\n    IndexSearcher searcher = newSearcher(writer.getReader());\n    writer.close();\n\n    // Per-top-reader state:\n    SortedSetDocValuesReaderState state = new SortedSetDocValuesReaderState(searcher.getIndexReader());\n    \n    SimpleFacetsCollector c = new SimpleFacetsCollector();\n\n    searcher.search(new MatchAllDocsQuery(), c);\n\n    SortedSetDocValuesFacetCounts facets = new SortedSetDocValuesFacetCounts(state, c);\n\n    assertEquals(\"a (4)\\n  foo (2)\\n  bar (1)\\n  zoo (1)\\n\", facets.getTopChildren(10, \"a\").toString());\n    assertEquals(\"b (1)\\n  baz (1)\\n\", facets.getTopChildren(10, \"b\").toString());\n\n    // DrillDown:\n    SimpleDrillDownQuery q = new SimpleDrillDownQuery(config);\n    q.add(\"a\", \"foo\");\n    q.add(\"b\", \"baz\");\n    TopDocs hits = searcher.search(q, 1);\n    assertEquals(1, hits.totalHits);\n\n    searcher.getIndexReader().close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testBasic() throws Exception {\n    assumeTrue(\"Test requires SortedSetDV support\", defaultCodecSupportsSortedSet());\n    Directory dir = newDirectory();\n\n    FacetsConfig config = new FacetsConfig();\n    IndexWriter writer = new FacetIndexWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random())), null, config);\n\n    Document doc = new Document();\n    doc.add(new SortedSetDocValuesFacetField(\"a\", \"foo\"));\n    doc.add(new SortedSetDocValuesFacetField(\"a\", \"bar\"));\n    doc.add(new SortedSetDocValuesFacetField(\"a\", \"zoo\"));\n    doc.add(new SortedSetDocValuesFacetField(\"b\", \"baz\"));\n    writer.addDocument(doc);\n    if (random().nextBoolean()) {\n      writer.commit();\n    }\n\n    doc = new Document();\n    doc.add(new SortedSetDocValuesFacetField(\"a\", \"foo\"));\n    writer.addDocument(doc);\n\n    // NRT open\n    IndexSearcher searcher = newSearcher(DirectoryReader.open(writer, true));\n    writer.close();\n\n    // Per-top-reader state:\n    SortedSetDocValuesReaderState state = new SortedSetDocValuesReaderState(searcher.getIndexReader());\n    \n    SimpleFacetsCollector c = new SimpleFacetsCollector();\n\n    searcher.search(new MatchAllDocsQuery(), c);\n\n    SortedSetDocValuesFacetCounts facets = new SortedSetDocValuesFacetCounts(state, c);\n\n    assertEquals(\"a (4)\\n  foo (2)\\n  bar (1)\\n  zoo (1)\\n\", facets.getTopChildren(10, \"a\").toString());\n    assertEquals(\"b (1)\\n  baz (1)\\n\", facets.getTopChildren(10, \"b\").toString());\n\n    // DrillDown:\n    SimpleDrillDownQuery q = new SimpleDrillDownQuery(config);\n    q.add(\"a\", \"foo\");\n    q.add(\"b\", \"baz\");\n    TopDocs hits = searcher.search(q, 1);\n    assertEquals(1, hits.totalHits);\n\n    searcher.getIndexReader().close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"a8c81e820a961f4822e9378d27ad18cb0eb3eb48","date":1384889043,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/simple/TestSortedSetDocValuesFacets#testBasic().mjava","pathOld":"lucene/facet/src/test/org/apache/lucene/facet/simple/TestSortedSetDocValuesFacets#testBasic().mjava","sourceNew":"  public void testBasic() throws Exception {\n    assumeTrue(\"Test requires SortedSetDV support\", defaultCodecSupportsSortedSet());\n    Directory dir = newDirectory();\n\n    FacetsConfig config = new FacetsConfig();\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir);\n    DocumentBuilder builder = new DocumentBuilder(null, config);\n\n    Document doc = new Document();\n    doc.add(new SortedSetDocValuesFacetField(\"a\", \"foo\"));\n    doc.add(new SortedSetDocValuesFacetField(\"a\", \"bar\"));\n    doc.add(new SortedSetDocValuesFacetField(\"a\", \"zoo\"));\n    doc.add(new SortedSetDocValuesFacetField(\"b\", \"baz\"));\n    writer.addDocument(builder.build(doc));\n    if (random().nextBoolean()) {\n      writer.commit();\n    }\n\n    doc = new Document();\n    doc.add(new SortedSetDocValuesFacetField(\"a\", \"foo\"));\n    writer.addDocument(builder.build(doc));\n\n    // NRT open\n    IndexSearcher searcher = newSearcher(writer.getReader());\n    writer.close();\n\n    // Per-top-reader state:\n    SortedSetDocValuesReaderState state = new SortedSetDocValuesReaderState(searcher.getIndexReader());\n    \n    SimpleFacetsCollector c = new SimpleFacetsCollector();\n\n    searcher.search(new MatchAllDocsQuery(), c);\n\n    SortedSetDocValuesFacetCounts facets = new SortedSetDocValuesFacetCounts(state, c);\n\n    assertEquals(\"a (4)\\n  foo (2)\\n  bar (1)\\n  zoo (1)\\n\", facets.getTopChildren(10, \"a\").toString());\n    assertEquals(\"b (1)\\n  baz (1)\\n\", facets.getTopChildren(10, \"b\").toString());\n\n    // DrillDown:\n    SimpleDrillDownQuery q = new SimpleDrillDownQuery(config);\n    q.add(\"a\", \"foo\");\n    q.add(\"b\", \"baz\");\n    TopDocs hits = searcher.search(q, 1);\n    assertEquals(1, hits.totalHits);\n\n    searcher.getIndexReader().close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testBasic() throws Exception {\n    assumeTrue(\"Test requires SortedSetDV support\", defaultCodecSupportsSortedSet());\n    Directory dir = newDirectory();\n\n    FacetsConfig config = new FacetsConfig();\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir);\n    FacetDocument facetDoc = new FacetDocument(null, config);\n\n    Document doc = new Document();\n    doc.add(new SortedSetDocValuesFacetField(\"a\", \"foo\"));\n    doc.add(new SortedSetDocValuesFacetField(\"a\", \"bar\"));\n    doc.add(new SortedSetDocValuesFacetField(\"a\", \"zoo\"));\n    doc.add(new SortedSetDocValuesFacetField(\"b\", \"baz\"));\n    writer.addDocument(facetDoc.build(doc));\n    if (random().nextBoolean()) {\n      writer.commit();\n    }\n\n    doc = new Document();\n    doc.add(new SortedSetDocValuesFacetField(\"a\", \"foo\"));\n    writer.addDocument(facetDoc.build(doc));\n\n    // NRT open\n    IndexSearcher searcher = newSearcher(writer.getReader());\n    writer.close();\n\n    // Per-top-reader state:\n    SortedSetDocValuesReaderState state = new SortedSetDocValuesReaderState(searcher.getIndexReader());\n    \n    SimpleFacetsCollector c = new SimpleFacetsCollector();\n\n    searcher.search(new MatchAllDocsQuery(), c);\n\n    SortedSetDocValuesFacetCounts facets = new SortedSetDocValuesFacetCounts(state, c);\n\n    assertEquals(\"a (4)\\n  foo (2)\\n  bar (1)\\n  zoo (1)\\n\", facets.getTopChildren(10, \"a\").toString());\n    assertEquals(\"b (1)\\n  baz (1)\\n\", facets.getTopChildren(10, \"b\").toString());\n\n    // DrillDown:\n    SimpleDrillDownQuery q = new SimpleDrillDownQuery(config);\n    q.add(\"a\", \"foo\");\n    q.add(\"b\", \"baz\");\n    TopDocs hits = searcher.search(q, 1);\n    assertEquals(1, hits.totalHits);\n\n    searcher.getIndexReader().close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"006838107b0cd2051371f3470740d23ec91b1886","date":1384950816,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/simple/TestSortedSetDocValuesFacets#testBasic().mjava","pathOld":"lucene/facet/src/test/org/apache/lucene/facet/simple/TestSortedSetDocValuesFacets#testBasic().mjava","sourceNew":"  public void testBasic() throws Exception {\n    System.out.println(\"here: \" + defaultCodecSupportsSortedSet());\n    assumeTrue(\"Test requires SortedSetDV support\", defaultCodecSupportsSortedSet());\n    Directory dir = newDirectory();\n\n    FacetsConfig config = new FacetsConfig();\n    config.setMultiValued(\"a\", true);\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir);\n    DocumentBuilder builder = new DocumentBuilder(null, config);\n\n    Document doc = new Document();\n    doc.add(new SortedSetDocValuesFacetField(\"a\", \"foo\"));\n    doc.add(new SortedSetDocValuesFacetField(\"a\", \"bar\"));\n    doc.add(new SortedSetDocValuesFacetField(\"a\", \"zoo\"));\n    doc.add(new SortedSetDocValuesFacetField(\"b\", \"baz\"));\n    System.out.println(\"TEST: now add\");\n    writer.addDocument(builder.build(doc));\n    if (random().nextBoolean()) {\n      writer.commit();\n    }\n\n    doc = new Document();\n    doc.add(new SortedSetDocValuesFacetField(\"a\", \"foo\"));\n    writer.addDocument(builder.build(doc));\n\n    // NRT open\n    IndexSearcher searcher = newSearcher(writer.getReader());\n    writer.close();\n\n    // Per-top-reader state:\n    SortedSetDocValuesReaderState state = new SortedSetDocValuesReaderState(searcher.getIndexReader());\n    \n    SimpleFacetsCollector c = new SimpleFacetsCollector();\n\n    searcher.search(new MatchAllDocsQuery(), c);\n\n    SortedSetDocValuesFacetCounts facets = new SortedSetDocValuesFacetCounts(state, c);\n\n    assertEquals(\"a (4)\\n  foo (2)\\n  bar (1)\\n  zoo (1)\\n\", facets.getTopChildren(10, \"a\").toString());\n    assertEquals(\"b (1)\\n  baz (1)\\n\", facets.getTopChildren(10, \"b\").toString());\n\n    // DrillDown:\n    SimpleDrillDownQuery q = new SimpleDrillDownQuery(config);\n    q.add(\"a\", \"foo\");\n    q.add(\"b\", \"baz\");\n    TopDocs hits = searcher.search(q, 1);\n    assertEquals(1, hits.totalHits);\n\n    searcher.getIndexReader().close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testBasic() throws Exception {\n    assumeTrue(\"Test requires SortedSetDV support\", defaultCodecSupportsSortedSet());\n    Directory dir = newDirectory();\n\n    FacetsConfig config = new FacetsConfig();\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir);\n    DocumentBuilder builder = new DocumentBuilder(null, config);\n\n    Document doc = new Document();\n    doc.add(new SortedSetDocValuesFacetField(\"a\", \"foo\"));\n    doc.add(new SortedSetDocValuesFacetField(\"a\", \"bar\"));\n    doc.add(new SortedSetDocValuesFacetField(\"a\", \"zoo\"));\n    doc.add(new SortedSetDocValuesFacetField(\"b\", \"baz\"));\n    writer.addDocument(builder.build(doc));\n    if (random().nextBoolean()) {\n      writer.commit();\n    }\n\n    doc = new Document();\n    doc.add(new SortedSetDocValuesFacetField(\"a\", \"foo\"));\n    writer.addDocument(builder.build(doc));\n\n    // NRT open\n    IndexSearcher searcher = newSearcher(writer.getReader());\n    writer.close();\n\n    // Per-top-reader state:\n    SortedSetDocValuesReaderState state = new SortedSetDocValuesReaderState(searcher.getIndexReader());\n    \n    SimpleFacetsCollector c = new SimpleFacetsCollector();\n\n    searcher.search(new MatchAllDocsQuery(), c);\n\n    SortedSetDocValuesFacetCounts facets = new SortedSetDocValuesFacetCounts(state, c);\n\n    assertEquals(\"a (4)\\n  foo (2)\\n  bar (1)\\n  zoo (1)\\n\", facets.getTopChildren(10, \"a\").toString());\n    assertEquals(\"b (1)\\n  baz (1)\\n\", facets.getTopChildren(10, \"b\").toString());\n\n    // DrillDown:\n    SimpleDrillDownQuery q = new SimpleDrillDownQuery(config);\n    q.add(\"a\", \"foo\");\n    q.add(\"b\", \"baz\");\n    TopDocs hits = searcher.search(q, 1);\n    assertEquals(1, hits.totalHits);\n\n    searcher.getIndexReader().close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"ae75def1e2525383b6e1397ed97c44387da9941c","date":1385249238,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/simple/TestSortedSetDocValuesFacets#testBasic().mjava","pathOld":"lucene/facet/src/test/org/apache/lucene/facet/simple/TestSortedSetDocValuesFacets#testBasic().mjava","sourceNew":"  public void testBasic() throws Exception {\n    assumeTrue(\"Test requires SortedSetDV support\", defaultCodecSupportsSortedSet());\n    Directory dir = newDirectory();\n\n    FacetsConfig config = new FacetsConfig();\n    config.setMultiValued(\"a\", true);\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir);\n\n    Document doc = new Document();\n    doc.add(new SortedSetDocValuesFacetField(\"a\", \"foo\"));\n    doc.add(new SortedSetDocValuesFacetField(\"a\", \"bar\"));\n    doc.add(new SortedSetDocValuesFacetField(\"a\", \"zoo\"));\n    doc.add(new SortedSetDocValuesFacetField(\"b\", \"baz\"));\n    writer.addDocument(config.build(doc));\n    if (random().nextBoolean()) {\n      writer.commit();\n    }\n\n    doc = new Document();\n    doc.add(new SortedSetDocValuesFacetField(\"a\", \"foo\"));\n    writer.addDocument(config.build(doc));\n\n    // NRT open\n    IndexSearcher searcher = newSearcher(writer.getReader());\n\n    // Per-top-reader state:\n    SortedSetDocValuesReaderState state = new SortedSetDocValuesReaderState(searcher.getIndexReader());\n    \n    SimpleFacetsCollector c = new SimpleFacetsCollector();\n\n    searcher.search(new MatchAllDocsQuery(), c);\n\n    SortedSetDocValuesFacetCounts facets = new SortedSetDocValuesFacetCounts(state, c);\n\n    assertEquals(\"a (4)\\n  foo (2)\\n  bar (1)\\n  zoo (1)\\n\", facets.getTopChildren(10, \"a\").toString());\n    assertEquals(\"b (1)\\n  baz (1)\\n\", facets.getTopChildren(10, \"b\").toString());\n\n    // DrillDown:\n    SimpleDrillDownQuery q = new SimpleDrillDownQuery(config);\n    q.add(\"a\", \"foo\");\n    q.add(\"b\", \"baz\");\n    TopDocs hits = searcher.search(q, 1);\n    assertEquals(1, hits.totalHits);\n\n    IOUtils.close(writer, searcher.getIndexReader(), dir);\n  }\n\n","sourceOld":"  public void testBasic() throws Exception {\n    System.out.println(\"here: \" + defaultCodecSupportsSortedSet());\n    assumeTrue(\"Test requires SortedSetDV support\", defaultCodecSupportsSortedSet());\n    Directory dir = newDirectory();\n\n    FacetsConfig config = new FacetsConfig();\n    config.setMultiValued(\"a\", true);\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir);\n    DocumentBuilder builder = new DocumentBuilder(null, config);\n\n    Document doc = new Document();\n    doc.add(new SortedSetDocValuesFacetField(\"a\", \"foo\"));\n    doc.add(new SortedSetDocValuesFacetField(\"a\", \"bar\"));\n    doc.add(new SortedSetDocValuesFacetField(\"a\", \"zoo\"));\n    doc.add(new SortedSetDocValuesFacetField(\"b\", \"baz\"));\n    System.out.println(\"TEST: now add\");\n    writer.addDocument(builder.build(doc));\n    if (random().nextBoolean()) {\n      writer.commit();\n    }\n\n    doc = new Document();\n    doc.add(new SortedSetDocValuesFacetField(\"a\", \"foo\"));\n    writer.addDocument(builder.build(doc));\n\n    // NRT open\n    IndexSearcher searcher = newSearcher(writer.getReader());\n    writer.close();\n\n    // Per-top-reader state:\n    SortedSetDocValuesReaderState state = new SortedSetDocValuesReaderState(searcher.getIndexReader());\n    \n    SimpleFacetsCollector c = new SimpleFacetsCollector();\n\n    searcher.search(new MatchAllDocsQuery(), c);\n\n    SortedSetDocValuesFacetCounts facets = new SortedSetDocValuesFacetCounts(state, c);\n\n    assertEquals(\"a (4)\\n  foo (2)\\n  bar (1)\\n  zoo (1)\\n\", facets.getTopChildren(10, \"a\").toString());\n    assertEquals(\"b (1)\\n  baz (1)\\n\", facets.getTopChildren(10, \"b\").toString());\n\n    // DrillDown:\n    SimpleDrillDownQuery q = new SimpleDrillDownQuery(config);\n    q.add(\"a\", \"foo\");\n    q.add(\"b\", \"baz\");\n    TopDocs hits = searcher.search(q, 1);\n    assertEquals(1, hits.totalHits);\n\n    searcher.getIndexReader().close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"f01616d06510fc630b6ef0ec324bdebc2fc49b3c","date":1385331328,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/simple/TestSortedSetDocValuesFacets#testBasic().mjava","pathOld":"lucene/facet/src/test/org/apache/lucene/facet/simple/TestSortedSetDocValuesFacets#testBasic().mjava","sourceNew":"  public void testBasic() throws Exception {\n    assumeTrue(\"Test requires SortedSetDV support\", defaultCodecSupportsSortedSet());\n    Directory dir = newDirectory();\n\n    FacetsConfig config = new FacetsConfig();\n    config.setMultiValued(\"a\", true);\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir);\n\n    Document doc = new Document();\n    doc.add(new SortedSetDocValuesFacetField(\"a\", \"foo\"));\n    doc.add(new SortedSetDocValuesFacetField(\"a\", \"bar\"));\n    doc.add(new SortedSetDocValuesFacetField(\"a\", \"zoo\"));\n    doc.add(new SortedSetDocValuesFacetField(\"b\", \"baz\"));\n    writer.addDocument(config.build(doc));\n    if (random().nextBoolean()) {\n      writer.commit();\n    }\n\n    doc = new Document();\n    doc.add(new SortedSetDocValuesFacetField(\"a\", \"foo\"));\n    writer.addDocument(config.build(doc));\n\n    // NRT open\n    IndexSearcher searcher = newSearcher(writer.getReader());\n\n    // Per-top-reader state:\n    SortedSetDocValuesReaderState state = new SortedSetDocValuesReaderState(searcher.getIndexReader());\n    \n    SimpleFacetsCollector c = new SimpleFacetsCollector();\n\n    searcher.search(new MatchAllDocsQuery(), c);\n\n    SortedSetDocValuesFacetCounts facets = new SortedSetDocValuesFacetCounts(state, c);\n\n    assertEquals(\"value=4 childCount=3\\n  foo (2)\\n  bar (1)\\n  zoo (1)\\n\", facets.getTopChildren(10, \"a\").toString());\n    assertEquals(\"value=1 childCount=1\\n  baz (1)\\n\", facets.getTopChildren(10, \"b\").toString());\n\n    // DrillDown:\n    SimpleDrillDownQuery q = new SimpleDrillDownQuery(config);\n    q.add(\"a\", \"foo\");\n    q.add(\"b\", \"baz\");\n    TopDocs hits = searcher.search(q, 1);\n    assertEquals(1, hits.totalHits);\n\n    IOUtils.close(writer, searcher.getIndexReader(), dir);\n  }\n\n","sourceOld":"  public void testBasic() throws Exception {\n    assumeTrue(\"Test requires SortedSetDV support\", defaultCodecSupportsSortedSet());\n    Directory dir = newDirectory();\n\n    FacetsConfig config = new FacetsConfig();\n    config.setMultiValued(\"a\", true);\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir);\n\n    Document doc = new Document();\n    doc.add(new SortedSetDocValuesFacetField(\"a\", \"foo\"));\n    doc.add(new SortedSetDocValuesFacetField(\"a\", \"bar\"));\n    doc.add(new SortedSetDocValuesFacetField(\"a\", \"zoo\"));\n    doc.add(new SortedSetDocValuesFacetField(\"b\", \"baz\"));\n    writer.addDocument(config.build(doc));\n    if (random().nextBoolean()) {\n      writer.commit();\n    }\n\n    doc = new Document();\n    doc.add(new SortedSetDocValuesFacetField(\"a\", \"foo\"));\n    writer.addDocument(config.build(doc));\n\n    // NRT open\n    IndexSearcher searcher = newSearcher(writer.getReader());\n\n    // Per-top-reader state:\n    SortedSetDocValuesReaderState state = new SortedSetDocValuesReaderState(searcher.getIndexReader());\n    \n    SimpleFacetsCollector c = new SimpleFacetsCollector();\n\n    searcher.search(new MatchAllDocsQuery(), c);\n\n    SortedSetDocValuesFacetCounts facets = new SortedSetDocValuesFacetCounts(state, c);\n\n    assertEquals(\"a (4)\\n  foo (2)\\n  bar (1)\\n  zoo (1)\\n\", facets.getTopChildren(10, \"a\").toString());\n    assertEquals(\"b (1)\\n  baz (1)\\n\", facets.getTopChildren(10, \"b\").toString());\n\n    // DrillDown:\n    SimpleDrillDownQuery q = new SimpleDrillDownQuery(config);\n    q.add(\"a\", \"foo\");\n    q.add(\"b\", \"baz\");\n    TopDocs hits = searcher.search(q, 1);\n    assertEquals(1, hits.totalHits);\n\n    IOUtils.close(writer, searcher.getIndexReader(), dir);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"21d36d0db865f7b84026b447bec653469a6e66df","date":1385495602,"type":5,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/TestSortedSetDocValuesFacets#testBasic().mjava","pathOld":"lucene/facet/src/test/org/apache/lucene/facet/simple/TestSortedSetDocValuesFacets#testBasic().mjava","sourceNew":"  public void testBasic() throws Exception {\n    assumeTrue(\"Test requires SortedSetDV support\", defaultCodecSupportsSortedSet());\n    Directory dir = newDirectory();\n\n    FacetsConfig config = new FacetsConfig();\n    config.setMultiValued(\"a\", true);\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir);\n\n    Document doc = new Document();\n    doc.add(new SortedSetDocValuesFacetField(\"a\", \"foo\"));\n    doc.add(new SortedSetDocValuesFacetField(\"a\", \"bar\"));\n    doc.add(new SortedSetDocValuesFacetField(\"a\", \"zoo\"));\n    doc.add(new SortedSetDocValuesFacetField(\"b\", \"baz\"));\n    writer.addDocument(config.build(doc));\n    if (random().nextBoolean()) {\n      writer.commit();\n    }\n\n    doc = new Document();\n    doc.add(new SortedSetDocValuesFacetField(\"a\", \"foo\"));\n    writer.addDocument(config.build(doc));\n\n    // NRT open\n    IndexSearcher searcher = newSearcher(writer.getReader());\n\n    // Per-top-reader state:\n    SortedSetDocValuesReaderState state = new SortedSetDocValuesReaderState(searcher.getIndexReader());\n    \n    FacetsCollector c = new FacetsCollector();\n\n    searcher.search(new MatchAllDocsQuery(), c);\n\n    SortedSetDocValuesFacetCounts facets = new SortedSetDocValuesFacetCounts(state, c);\n\n    assertEquals(\"value=4 childCount=3\\n  foo (2)\\n  bar (1)\\n  zoo (1)\\n\", facets.getTopChildren(10, \"a\").toString());\n    assertEquals(\"value=1 childCount=1\\n  baz (1)\\n\", facets.getTopChildren(10, \"b\").toString());\n\n    // DrillDown:\n    DrillDownQuery q = new DrillDownQuery(config);\n    q.add(\"a\", \"foo\");\n    q.add(\"b\", \"baz\");\n    TopDocs hits = searcher.search(q, 1);\n    assertEquals(1, hits.totalHits);\n\n    IOUtils.close(writer, searcher.getIndexReader(), dir);\n  }\n\n","sourceOld":"  public void testBasic() throws Exception {\n    assumeTrue(\"Test requires SortedSetDV support\", defaultCodecSupportsSortedSet());\n    Directory dir = newDirectory();\n\n    FacetsConfig config = new FacetsConfig();\n    config.setMultiValued(\"a\", true);\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir);\n\n    Document doc = new Document();\n    doc.add(new SortedSetDocValuesFacetField(\"a\", \"foo\"));\n    doc.add(new SortedSetDocValuesFacetField(\"a\", \"bar\"));\n    doc.add(new SortedSetDocValuesFacetField(\"a\", \"zoo\"));\n    doc.add(new SortedSetDocValuesFacetField(\"b\", \"baz\"));\n    writer.addDocument(config.build(doc));\n    if (random().nextBoolean()) {\n      writer.commit();\n    }\n\n    doc = new Document();\n    doc.add(new SortedSetDocValuesFacetField(\"a\", \"foo\"));\n    writer.addDocument(config.build(doc));\n\n    // NRT open\n    IndexSearcher searcher = newSearcher(writer.getReader());\n\n    // Per-top-reader state:\n    SortedSetDocValuesReaderState state = new SortedSetDocValuesReaderState(searcher.getIndexReader());\n    \n    SimpleFacetsCollector c = new SimpleFacetsCollector();\n\n    searcher.search(new MatchAllDocsQuery(), c);\n\n    SortedSetDocValuesFacetCounts facets = new SortedSetDocValuesFacetCounts(state, c);\n\n    assertEquals(\"value=4 childCount=3\\n  foo (2)\\n  bar (1)\\n  zoo (1)\\n\", facets.getTopChildren(10, \"a\").toString());\n    assertEquals(\"value=1 childCount=1\\n  baz (1)\\n\", facets.getTopChildren(10, \"b\").toString());\n\n    // DrillDown:\n    SimpleDrillDownQuery q = new SimpleDrillDownQuery(config);\n    q.add(\"a\", \"foo\");\n    q.add(\"b\", \"baz\");\n    TopDocs hits = searcher.search(q, 1);\n    assertEquals(1, hits.totalHits);\n\n    IOUtils.close(writer, searcher.getIndexReader(), dir);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"7554009c97f9365492660c1df175b6349f7ec05c":["9fdb15e93058f718a65d564872aadbed5ca78296"],"a8c81e820a961f4822e9378d27ad18cb0eb3eb48":["7554009c97f9365492660c1df175b6349f7ec05c"],"9fdb15e93058f718a65d564872aadbed5ca78296":["c190847801a50f4dd20fd639bdc29b54ea3b288b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"21d36d0db865f7b84026b447bec653469a6e66df":["f01616d06510fc630b6ef0ec324bdebc2fc49b3c"],"519ac3b8f2711b5bfeb1c90c77bb007032270a41":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"f01616d06510fc630b6ef0ec324bdebc2fc49b3c":["ae75def1e2525383b6e1397ed97c44387da9941c"],"006838107b0cd2051371f3470740d23ec91b1886":["a8c81e820a961f4822e9378d27ad18cb0eb3eb48"],"93bee32f95de853915b2f9402e76ed24ef97f43e":["519ac3b8f2711b5bfeb1c90c77bb007032270a41"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"ae75def1e2525383b6e1397ed97c44387da9941c":["006838107b0cd2051371f3470740d23ec91b1886"],"c190847801a50f4dd20fd639bdc29b54ea3b288b":["93bee32f95de853915b2f9402e76ed24ef97f43e"]},"commit2Childs":{"7554009c97f9365492660c1df175b6349f7ec05c":["a8c81e820a961f4822e9378d27ad18cb0eb3eb48"],"a8c81e820a961f4822e9378d27ad18cb0eb3eb48":["006838107b0cd2051371f3470740d23ec91b1886"],"9fdb15e93058f718a65d564872aadbed5ca78296":["7554009c97f9365492660c1df175b6349f7ec05c"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["519ac3b8f2711b5bfeb1c90c77bb007032270a41","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"21d36d0db865f7b84026b447bec653469a6e66df":[],"519ac3b8f2711b5bfeb1c90c77bb007032270a41":["93bee32f95de853915b2f9402e76ed24ef97f43e"],"f01616d06510fc630b6ef0ec324bdebc2fc49b3c":["21d36d0db865f7b84026b447bec653469a6e66df"],"006838107b0cd2051371f3470740d23ec91b1886":["ae75def1e2525383b6e1397ed97c44387da9941c"],"93bee32f95de853915b2f9402e76ed24ef97f43e":["c190847801a50f4dd20fd639bdc29b54ea3b288b"],"c190847801a50f4dd20fd639bdc29b54ea3b288b":["9fdb15e93058f718a65d564872aadbed5ca78296"],"ae75def1e2525383b6e1397ed97c44387da9941c":["f01616d06510fc630b6ef0ec324bdebc2fc49b3c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["21d36d0db865f7b84026b447bec653469a6e66df","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}