{"path":"lucene/backwards/src/test/org/apache/lucene/search/TestPhraseQuery#testPhraseQueryInConjunctionScorer().mjava","commits":[{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/backwards/src/test/org/apache/lucene/search/TestPhraseQuery#testPhraseQueryInConjunctionScorer().mjava","pathOld":"backwards/src/test/org/apache/lucene/search/TestPhraseQuery#testPhraseQueryInConjunctionScorer().mjava","sourceNew":"  public void testPhraseQueryInConjunctionScorer() throws Exception {\n    RAMDirectory directory = new RAMDirectory();\n    IndexWriter writer = new IndexWriter(directory, new WhitespaceAnalyzer(), true, \n                                         IndexWriter.MaxFieldLength.LIMITED);\n    \n    Document doc = new Document();\n    doc.add(new Field(\"source\", \"marketing info\", Field.Store.YES, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n    \n    doc = new Document();\n    doc.add(new Field(\"contents\", \"foobar\", Field.Store.YES, Field.Index.ANALYZED));\n    doc.add(new Field(\"source\", \"marketing info\", Field.Store.YES, Field.Index.ANALYZED)); \n    writer.addDocument(doc);\n    \n    writer.optimize();\n    writer.close();\n    \n    IndexSearcher searcher = new IndexSearcher(directory, true);\n    \n    PhraseQuery phraseQuery = new PhraseQuery();\n    phraseQuery.add(new Term(\"source\", \"marketing\"));\n    phraseQuery.add(new Term(\"source\", \"info\"));\n    ScoreDoc[] hits = searcher.search(phraseQuery, null, 1000).scoreDocs;\n    assertEquals(2, hits.length);\n    QueryUtils.check(phraseQuery,searcher);\n\n    \n    TermQuery termQuery = new TermQuery(new Term(\"contents\",\"foobar\"));\n    BooleanQuery booleanQuery = new BooleanQuery();\n    booleanQuery.add(termQuery, BooleanClause.Occur.MUST);\n    booleanQuery.add(phraseQuery, BooleanClause.Occur.MUST);\n    hits = searcher.search(booleanQuery, null, 1000).scoreDocs;\n    assertEquals(1, hits.length);\n    QueryUtils.check(termQuery,searcher);\n\n    \n    searcher.close();\n    \n    writer = new IndexWriter(directory, new WhitespaceAnalyzer(), true, \n                             IndexWriter.MaxFieldLength.LIMITED);\n    doc = new Document();\n    doc.add(new Field(\"contents\", \"map entry woo\", Field.Store.YES, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n\n    doc = new Document();\n    doc.add(new Field(\"contents\", \"woo map entry\", Field.Store.YES, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n\n    doc = new Document();\n    doc.add(new Field(\"contents\", \"map foobarword entry woo\", Field.Store.YES, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n\n    writer.optimize();\n    writer.close();\n    \n    searcher = new IndexSearcher(directory, true);\n    \n    termQuery = new TermQuery(new Term(\"contents\",\"woo\"));\n    phraseQuery = new PhraseQuery();\n    phraseQuery.add(new Term(\"contents\",\"map\"));\n    phraseQuery.add(new Term(\"contents\",\"entry\"));\n    \n    hits = searcher.search(termQuery, null, 1000).scoreDocs;\n    assertEquals(3, hits.length);\n    hits = searcher.search(phraseQuery, null, 1000).scoreDocs;\n    assertEquals(2, hits.length);\n\n    \n    booleanQuery = new BooleanQuery();\n    booleanQuery.add(termQuery, BooleanClause.Occur.MUST);\n    booleanQuery.add(phraseQuery, BooleanClause.Occur.MUST);\n    hits = searcher.search(booleanQuery, null, 1000).scoreDocs;\n    assertEquals(2, hits.length);\n    \n    booleanQuery = new BooleanQuery();\n    booleanQuery.add(phraseQuery, BooleanClause.Occur.MUST);\n    booleanQuery.add(termQuery, BooleanClause.Occur.MUST);\n    hits = searcher.search(booleanQuery, null, 1000).scoreDocs;\n    assertEquals(2, hits.length);\n    QueryUtils.check(booleanQuery,searcher);\n\n    \n    searcher.close();\n    directory.close();\n  }\n\n","sourceOld":"  public void testPhraseQueryInConjunctionScorer() throws Exception {\n    RAMDirectory directory = new RAMDirectory();\n    IndexWriter writer = new IndexWriter(directory, new WhitespaceAnalyzer(), true, \n                                         IndexWriter.MaxFieldLength.LIMITED);\n    \n    Document doc = new Document();\n    doc.add(new Field(\"source\", \"marketing info\", Field.Store.YES, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n    \n    doc = new Document();\n    doc.add(new Field(\"contents\", \"foobar\", Field.Store.YES, Field.Index.ANALYZED));\n    doc.add(new Field(\"source\", \"marketing info\", Field.Store.YES, Field.Index.ANALYZED)); \n    writer.addDocument(doc);\n    \n    writer.optimize();\n    writer.close();\n    \n    IndexSearcher searcher = new IndexSearcher(directory, true);\n    \n    PhraseQuery phraseQuery = new PhraseQuery();\n    phraseQuery.add(new Term(\"source\", \"marketing\"));\n    phraseQuery.add(new Term(\"source\", \"info\"));\n    ScoreDoc[] hits = searcher.search(phraseQuery, null, 1000).scoreDocs;\n    assertEquals(2, hits.length);\n    QueryUtils.check(phraseQuery,searcher);\n\n    \n    TermQuery termQuery = new TermQuery(new Term(\"contents\",\"foobar\"));\n    BooleanQuery booleanQuery = new BooleanQuery();\n    booleanQuery.add(termQuery, BooleanClause.Occur.MUST);\n    booleanQuery.add(phraseQuery, BooleanClause.Occur.MUST);\n    hits = searcher.search(booleanQuery, null, 1000).scoreDocs;\n    assertEquals(1, hits.length);\n    QueryUtils.check(termQuery,searcher);\n\n    \n    searcher.close();\n    \n    writer = new IndexWriter(directory, new WhitespaceAnalyzer(), true, \n                             IndexWriter.MaxFieldLength.LIMITED);\n    doc = new Document();\n    doc.add(new Field(\"contents\", \"map entry woo\", Field.Store.YES, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n\n    doc = new Document();\n    doc.add(new Field(\"contents\", \"woo map entry\", Field.Store.YES, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n\n    doc = new Document();\n    doc.add(new Field(\"contents\", \"map foobarword entry woo\", Field.Store.YES, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n\n    writer.optimize();\n    writer.close();\n    \n    searcher = new IndexSearcher(directory, true);\n    \n    termQuery = new TermQuery(new Term(\"contents\",\"woo\"));\n    phraseQuery = new PhraseQuery();\n    phraseQuery.add(new Term(\"contents\",\"map\"));\n    phraseQuery.add(new Term(\"contents\",\"entry\"));\n    \n    hits = searcher.search(termQuery, null, 1000).scoreDocs;\n    assertEquals(3, hits.length);\n    hits = searcher.search(phraseQuery, null, 1000).scoreDocs;\n    assertEquals(2, hits.length);\n\n    \n    booleanQuery = new BooleanQuery();\n    booleanQuery.add(termQuery, BooleanClause.Occur.MUST);\n    booleanQuery.add(phraseQuery, BooleanClause.Occur.MUST);\n    hits = searcher.search(booleanQuery, null, 1000).scoreDocs;\n    assertEquals(2, hits.length);\n    \n    booleanQuery = new BooleanQuery();\n    booleanQuery.add(phraseQuery, BooleanClause.Occur.MUST);\n    booleanQuery.add(termQuery, BooleanClause.Occur.MUST);\n    hits = searcher.search(booleanQuery, null, 1000).scoreDocs;\n    assertEquals(2, hits.length);\n    QueryUtils.check(booleanQuery,searcher);\n\n    \n    searcher.close();\n    directory.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"90eca6fcb6635ca73ea4fdbe2f57d2033b66d3b6","date":1272983566,"type":4,"author":"Uwe Schindler","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/backwards/src/test/org/apache/lucene/search/TestPhraseQuery#testPhraseQueryInConjunctionScorer().mjava","sourceNew":null,"sourceOld":"  public void testPhraseQueryInConjunctionScorer() throws Exception {\n    RAMDirectory directory = new RAMDirectory();\n    IndexWriter writer = new IndexWriter(directory, new WhitespaceAnalyzer(), true, \n                                         IndexWriter.MaxFieldLength.LIMITED);\n    \n    Document doc = new Document();\n    doc.add(new Field(\"source\", \"marketing info\", Field.Store.YES, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n    \n    doc = new Document();\n    doc.add(new Field(\"contents\", \"foobar\", Field.Store.YES, Field.Index.ANALYZED));\n    doc.add(new Field(\"source\", \"marketing info\", Field.Store.YES, Field.Index.ANALYZED)); \n    writer.addDocument(doc);\n    \n    writer.optimize();\n    writer.close();\n    \n    IndexSearcher searcher = new IndexSearcher(directory, true);\n    \n    PhraseQuery phraseQuery = new PhraseQuery();\n    phraseQuery.add(new Term(\"source\", \"marketing\"));\n    phraseQuery.add(new Term(\"source\", \"info\"));\n    ScoreDoc[] hits = searcher.search(phraseQuery, null, 1000).scoreDocs;\n    assertEquals(2, hits.length);\n    QueryUtils.check(phraseQuery,searcher);\n\n    \n    TermQuery termQuery = new TermQuery(new Term(\"contents\",\"foobar\"));\n    BooleanQuery booleanQuery = new BooleanQuery();\n    booleanQuery.add(termQuery, BooleanClause.Occur.MUST);\n    booleanQuery.add(phraseQuery, BooleanClause.Occur.MUST);\n    hits = searcher.search(booleanQuery, null, 1000).scoreDocs;\n    assertEquals(1, hits.length);\n    QueryUtils.check(termQuery,searcher);\n\n    \n    searcher.close();\n    \n    writer = new IndexWriter(directory, new WhitespaceAnalyzer(), true, \n                             IndexWriter.MaxFieldLength.LIMITED);\n    doc = new Document();\n    doc.add(new Field(\"contents\", \"map entry woo\", Field.Store.YES, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n\n    doc = new Document();\n    doc.add(new Field(\"contents\", \"woo map entry\", Field.Store.YES, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n\n    doc = new Document();\n    doc.add(new Field(\"contents\", \"map foobarword entry woo\", Field.Store.YES, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n\n    writer.optimize();\n    writer.close();\n    \n    searcher = new IndexSearcher(directory, true);\n    \n    termQuery = new TermQuery(new Term(\"contents\",\"woo\"));\n    phraseQuery = new PhraseQuery();\n    phraseQuery.add(new Term(\"contents\",\"map\"));\n    phraseQuery.add(new Term(\"contents\",\"entry\"));\n    \n    hits = searcher.search(termQuery, null, 1000).scoreDocs;\n    assertEquals(3, hits.length);\n    hits = searcher.search(phraseQuery, null, 1000).scoreDocs;\n    assertEquals(2, hits.length);\n\n    \n    booleanQuery = new BooleanQuery();\n    booleanQuery.add(termQuery, BooleanClause.Occur.MUST);\n    booleanQuery.add(phraseQuery, BooleanClause.Occur.MUST);\n    hits = searcher.search(booleanQuery, null, 1000).scoreDocs;\n    assertEquals(2, hits.length);\n    \n    booleanQuery = new BooleanQuery();\n    booleanQuery.add(phraseQuery, BooleanClause.Occur.MUST);\n    booleanQuery.add(termQuery, BooleanClause.Occur.MUST);\n    hits = searcher.search(booleanQuery, null, 1000).scoreDocs;\n    assertEquals(2, hits.length);\n    QueryUtils.check(booleanQuery,searcher);\n\n    \n    searcher.close();\n    directory.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"90eca6fcb6635ca73ea4fdbe2f57d2033b66d3b6":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["90eca6fcb6635ca73ea4fdbe2f57d2033b66d3b6"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"90eca6fcb6635ca73ea4fdbe2f57d2033b66d3b6":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["90eca6fcb6635ca73ea4fdbe2f57d2033b66d3b6"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}