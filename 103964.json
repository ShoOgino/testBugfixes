{"path":"src/java/org/apache/lucene/search/ConstantScoreRangeQuery#ConstantScoreRangeQuery(String,String,String,boolean,boolean,Collator).mjava","commits":[{"id":"b33dc4652df2747e38f9782fde82bd426b77c538","date":1221599001,"type":0,"author":"Grant Ingersoll","isMerge":false,"pathNew":"src/java/org/apache/lucene/search/ConstantScoreRangeQuery#ConstantScoreRangeQuery(String,String,String,boolean,boolean,Collator).mjava","pathOld":"/dev/null","sourceNew":"  public ConstantScoreRangeQuery(String fieldName, String lowerVal,\n                                 String upperVal, boolean includeLower,\n                                 boolean includeUpper, Collator collator)\n  {\n    this(fieldName, lowerVal, upperVal, includeLower, includeUpper);\n    this.collator = collator;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6f7a11eba51d213f09b96054111cf56a1e5796a3","date":1226364000,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/search/ConstantScoreRangeQuery#ConstantScoreRangeQuery(String,String,String,boolean,boolean,Collator).mjava","pathOld":"src/java/org/apache/lucene/search/ConstantScoreRangeQuery#ConstantScoreRangeQuery(String,String,String,boolean,boolean,Collator).mjava","sourceNew":"  public ConstantScoreRangeQuery(String fieldName, String lowerVal,\n                                 String upperVal, boolean includeLower,\n                                 boolean includeUpper, Collator collator) {\n    super(fieldName, lowerVal, upperVal, includeLower, includeUpper, collator);\n    this.constantScoreRewrite = true;\n  }\n\n","sourceOld":"  public ConstantScoreRangeQuery(String fieldName, String lowerVal,\n                                 String upperVal, boolean includeLower,\n                                 boolean includeUpper, Collator collator)\n  {\n    this(fieldName, lowerVal, upperVal, includeLower, includeUpper);\n    this.collator = collator;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0f612096ab5275c4821d05f126bf45a89f4782b8","date":1246738452,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/java/org/apache/lucene/search/ConstantScoreRangeQuery#ConstantScoreRangeQuery(String,String,String,boolean,boolean,Collator).mjava","pathOld":"src/java/org/apache/lucene/search/ConstantScoreRangeQuery#ConstantScoreRangeQuery(String,String,String,boolean,boolean,Collator).mjava","sourceNew":"  public ConstantScoreRangeQuery(String fieldName, String lowerVal,\n                                 String upperVal, boolean includeLower,\n                                 boolean includeUpper, Collator collator) {\n    super(fieldName, lowerVal, upperVal, includeLower, includeUpper, collator);\n    setConstantScoreRewrite(true);\n  }\n\n","sourceOld":"  public ConstantScoreRangeQuery(String fieldName, String lowerVal,\n                                 String upperVal, boolean includeLower,\n                                 boolean includeUpper, Collator collator) {\n    super(fieldName, lowerVal, upperVal, includeLower, includeUpper, collator);\n    this.constantScoreRewrite = true;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1a9553c1383b3678fd48ad68f0686008b07ef25b","date":1246867108,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/java/org/apache/lucene/search/ConstantScoreRangeQuery#ConstantScoreRangeQuery(String,String,String,boolean,boolean,Collator).mjava","pathOld":"src/java/org/apache/lucene/search/ConstantScoreRangeQuery#ConstantScoreRangeQuery(String,String,String,boolean,boolean,Collator).mjava","sourceNew":"  public ConstantScoreRangeQuery(String fieldName, String lowerVal,\n                                 String upperVal, boolean includeLower,\n                                 boolean includeUpper, Collator collator) {\n    super(fieldName, lowerVal, upperVal, includeLower, includeUpper, collator);\n    this.constantScoreRewrite = true;\n  }\n\n","sourceOld":"  public ConstantScoreRangeQuery(String fieldName, String lowerVal,\n                                 String upperVal, boolean includeLower,\n                                 boolean includeUpper, Collator collator) {\n    super(fieldName, lowerVal, upperVal, includeLower, includeUpper, collator);\n    setConstantScoreRewrite(true);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8b20609f6fb2cd074bd08115b0c3280b9646af7c","date":1248480213,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/search/ConstantScoreRangeQuery#ConstantScoreRangeQuery(String,String,String,boolean,boolean,Collator).mjava","pathOld":"src/java/org/apache/lucene/search/ConstantScoreRangeQuery#ConstantScoreRangeQuery(String,String,String,boolean,boolean,Collator).mjava","sourceNew":"  public ConstantScoreRangeQuery(String fieldName, String lowerVal,\n                                 String upperVal, boolean includeLower,\n                                 boolean includeUpper, Collator collator) {\n    super(fieldName, lowerVal, upperVal, includeLower, includeUpper, collator);\n    rewriteMethod = CONSTANT_SCORE_AUTO_REWRITE_DEFAULT;\n  }\n\n","sourceOld":"  public ConstantScoreRangeQuery(String fieldName, String lowerVal,\n                                 String upperVal, boolean includeLower,\n                                 boolean includeUpper, Collator collator) {\n    super(fieldName, lowerVal, upperVal, includeLower, includeUpper, collator);\n    this.constantScoreRewrite = true;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"80cd6adbf2e684cfacc0cdd93d6ab1cb0d19d8da","date":1255296547,"type":4,"author":"Uwe Schindler","isMerge":false,"pathNew":"/dev/null","pathOld":"src/java/org/apache/lucene/search/ConstantScoreRangeQuery#ConstantScoreRangeQuery(String,String,String,boolean,boolean,Collator).mjava","sourceNew":null,"sourceOld":"  public ConstantScoreRangeQuery(String fieldName, String lowerVal,\n                                 String upperVal, boolean includeLower,\n                                 boolean includeUpper, Collator collator) {\n    super(fieldName, lowerVal, upperVal, includeLower, includeUpper, collator);\n    rewriteMethod = CONSTANT_SCORE_AUTO_REWRITE_DEFAULT;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"1a9553c1383b3678fd48ad68f0686008b07ef25b":["0f612096ab5275c4821d05f126bf45a89f4782b8"],"80cd6adbf2e684cfacc0cdd93d6ab1cb0d19d8da":["8b20609f6fb2cd074bd08115b0c3280b9646af7c"],"0f612096ab5275c4821d05f126bf45a89f4782b8":["6f7a11eba51d213f09b96054111cf56a1e5796a3"],"b33dc4652df2747e38f9782fde82bd426b77c538":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"8b20609f6fb2cd074bd08115b0c3280b9646af7c":["1a9553c1383b3678fd48ad68f0686008b07ef25b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["80cd6adbf2e684cfacc0cdd93d6ab1cb0d19d8da"],"6f7a11eba51d213f09b96054111cf56a1e5796a3":["b33dc4652df2747e38f9782fde82bd426b77c538"]},"commit2Childs":{"1a9553c1383b3678fd48ad68f0686008b07ef25b":["8b20609f6fb2cd074bd08115b0c3280b9646af7c"],"0f612096ab5275c4821d05f126bf45a89f4782b8":["1a9553c1383b3678fd48ad68f0686008b07ef25b"],"80cd6adbf2e684cfacc0cdd93d6ab1cb0d19d8da":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"b33dc4652df2747e38f9782fde82bd426b77c538":["6f7a11eba51d213f09b96054111cf56a1e5796a3"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b33dc4652df2747e38f9782fde82bd426b77c538"],"8b20609f6fb2cd074bd08115b0c3280b9646af7c":["80cd6adbf2e684cfacc0cdd93d6ab1cb0d19d8da"],"6f7a11eba51d213f09b96054111cf56a1e5796a3":["0f612096ab5275c4821d05f126bf45a89f4782b8"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}