{"path":"src/java/org/apache/lucene/search/CachingWrapperFilter#bits(IndexReader).mjava","commits":[{"id":"0a19e21a5a8ea5a4f13f445837d8b9d4c541a952","date":1063745558,"type":0,"author":"Erik Hatcher","isMerge":false,"pathNew":"src/java/org/apache/lucene/search/CachingWrapperFilter#bits(IndexReader).mjava","pathOld":"/dev/null","sourceNew":"  public BitSet bits(IndexReader reader) throws IOException {\n    if (cache == null) {\n      cache = new WeakHashMap();\n    }\n\n    synchronized (cache) {  // check cache\n      BitSet cached = (BitSet) cache.get(reader);\n      if (cached != null) {\n        return cached;\n      }\n    }\n\n    final BitSet bits = filter.bits(reader);\n\n    synchronized (cache) {  // update cache\n      cache.put(reader, bits);\n    }\n\n    return bits;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["1dab6a073497f68cd618ed4a55d491e65dd0c569"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"52ce7e961a8217faac8128e3c8fe67819eefdde9","date":1201979043,"type":3,"author":"Michael Busch","isMerge":false,"pathNew":"src/java/org/apache/lucene/search/CachingWrapperFilter#bits(IndexReader).mjava","pathOld":"src/java/org/apache/lucene/search/CachingWrapperFilter#bits(IndexReader).mjava","sourceNew":"  /**\n   * @deprecated Use {@link #getDocIdSet(IndexReader)} instead.\n   */\n  public BitSet bits(IndexReader reader) throws IOException {\n    if (cache == null) {\n      cache = new WeakHashMap();\n    }\n\n    synchronized (cache) {  // check cache\n      BitSet cached = (BitSet) cache.get(reader);\n      if (cached != null) {\n        return cached;\n      }\n    }\n\n    final BitSet bits = filter.bits(reader);\n\n    synchronized (cache) {  // update cache\n      cache.put(reader, bits);\n    }\n\n    return bits;\n  }\n\n","sourceOld":"  public BitSet bits(IndexReader reader) throws IOException {\n    if (cache == null) {\n      cache = new WeakHashMap();\n    }\n\n    synchronized (cache) {  // check cache\n      BitSet cached = (BitSet) cache.get(reader);\n      if (cached != null) {\n        return cached;\n      }\n    }\n\n    final BitSet bits = filter.bits(reader);\n\n    synchronized (cache) {  // update cache\n      cache.put(reader, bits);\n    }\n\n    return bits;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"1dab6a073497f68cd618ed4a55d491e65dd0c569","date":1227302226,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/search/CachingWrapperFilter#bits(IndexReader).mjava","pathOld":"src/java/org/apache/lucene/search/CachingWrapperFilter#bits(IndexReader).mjava","sourceNew":"  /**\n   * @deprecated Use {@link #getDocIdSet(IndexReader)} instead.\n   */\n  public BitSet bits(IndexReader reader) throws IOException {\n    if (cache == null) {\n      cache = new WeakHashMap();\n    }\n\n    Object cached = null;\n    synchronized (cache) {  // check cache\n      cached = cache.get(reader);\n    }\n\t\n    if (cached != null) {\n      if (cached instanceof BitSet) {\n        return (BitSet) cached;\n      } else if (cached instanceof DocIdBitSet)\n        return ((DocIdBitSet) cached).getBitSet();\n      // It would be nice to handle the DocIdSet case, but that's not really possible\n    }\n\n    final BitSet bits = filter.bits(reader);\n\n    synchronized (cache) {  // update cache\n      cache.put(reader, bits);\n    }\n\n    return bits;\n  }\n\n","sourceOld":"  /**\n   * @deprecated Use {@link #getDocIdSet(IndexReader)} instead.\n   */\n  public BitSet bits(IndexReader reader) throws IOException {\n    if (cache == null) {\n      cache = new WeakHashMap();\n    }\n\n    synchronized (cache) {  // check cache\n      BitSet cached = (BitSet) cache.get(reader);\n      if (cached != null) {\n        return cached;\n      }\n    }\n\n    final BitSet bits = filter.bits(reader);\n\n    synchronized (cache) {  // update cache\n      cache.put(reader, bits);\n    }\n\n    return bits;\n  }\n\n","bugFix":["0a19e21a5a8ea5a4f13f445837d8b9d4c541a952"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"15bd365049a486e1ddff4a17c8aaab9b002969a0","date":1254951825,"type":4,"author":"Michael Busch","isMerge":false,"pathNew":"/dev/null","pathOld":"src/java/org/apache/lucene/search/CachingWrapperFilter#bits(IndexReader).mjava","sourceNew":null,"sourceOld":"  /**\n   * @deprecated Use {@link #getDocIdSet(IndexReader)} instead.\n   */\n  public BitSet bits(IndexReader reader) throws IOException {\n    if (cache == null) {\n      cache = new WeakHashMap();\n    }\n\n    Object cached = null;\n    synchronized (cache) {  // check cache\n      cached = cache.get(reader);\n    }\n\t\n    if (cached != null) {\n      if (cached instanceof BitSet) {\n        return (BitSet) cached;\n      } else if (cached instanceof DocIdBitSet)\n        return ((DocIdBitSet) cached).getBitSet();\n      // It would be nice to handle the DocIdSet case, but that's not really possible\n    }\n\n    final BitSet bits = filter.bits(reader);\n\n    synchronized (cache) {  // update cache\n      cache.put(reader, bits);\n    }\n\n    return bits;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"0a19e21a5a8ea5a4f13f445837d8b9d4c541a952":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"52ce7e961a8217faac8128e3c8fe67819eefdde9":["0a19e21a5a8ea5a4f13f445837d8b9d4c541a952"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["15bd365049a486e1ddff4a17c8aaab9b002969a0"],"15bd365049a486e1ddff4a17c8aaab9b002969a0":["1dab6a073497f68cd618ed4a55d491e65dd0c569"],"1dab6a073497f68cd618ed4a55d491e65dd0c569":["52ce7e961a8217faac8128e3c8fe67819eefdde9"]},"commit2Childs":{"0a19e21a5a8ea5a4f13f445837d8b9d4c541a952":["52ce7e961a8217faac8128e3c8fe67819eefdde9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["0a19e21a5a8ea5a4f13f445837d8b9d4c541a952"],"52ce7e961a8217faac8128e3c8fe67819eefdde9":["1dab6a073497f68cd618ed4a55d491e65dd0c569"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"15bd365049a486e1ddff4a17c8aaab9b002969a0":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"1dab6a073497f68cd618ed4a55d491e65dd0c569":["15bd365049a486e1ddff4a17c8aaab9b002969a0"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}