{"path":"solr/core/src/test/org/apache/solr/core/TestConfig#testTermIndexDivisor().mjava","commits":[{"id":"c903c3d15906a3da96b8c0c2fb704491005fdbdb","date":1453508227,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/core/TestConfig#testTermIndexDivisor().mjava","pathOld":"solr/src/test/org/apache/solr/core/TestConfig#testTermIndexDivisor().mjava","sourceNew":"  @Test\n  public void testTermIndexDivisor() throws Exception {\n    IndexReaderFactory irf = h.getCore().getIndexReaderFactory();\n    StandardIndexReaderFactory sirf = (StandardIndexReaderFactory) irf;\n    assertEquals(12, sirf.termInfosIndexDivisor);\n    SolrQueryRequest req = req();\n    assertEquals(12, req.getSearcher().getIndexReader().getTermInfosIndexDivisor());\n    req.close();\n  }\n\n","sourceOld":"  @Test\n  public void testTermIndexDivisor() throws Exception {\n    IndexReaderFactory irf = h.getCore().getIndexReaderFactory();\n    StandardIndexReaderFactory sirf = (StandardIndexReaderFactory) irf;\n    assertEquals(12, sirf.termInfosIndexDivisor);\n    SolrQueryRequest req = req();\n    assertEquals(12, req.getSearcher().getIndexReader().getTermInfosIndexDivisor());\n    req.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a258fbb26824fd104ed795e5d9033d2d040049ee","date":1453508252,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/core/TestConfig#testTermIndexDivisor().mjava","pathOld":"solr/src/test/org/apache/solr/core/TestConfig#testTermIndexDivisor().mjava","sourceNew":"  @Test\n  public void testTermIndexDivisor() throws Exception {\n    IndexReaderFactory irf = h.getCore().getIndexReaderFactory();\n    StandardIndexReaderFactory sirf = (StandardIndexReaderFactory) irf;\n    assertEquals(12, sirf.termInfosIndexDivisor);\n    SolrQueryRequest req = req();\n    assertEquals(12, req.getSearcher().getIndexReader().getTermInfosIndexDivisor());\n    req.close();\n  }\n\n","sourceOld":"  @Test\n  public void testTermIndexDivisor() throws Exception {\n    IndexReaderFactory irf = h.getCore().getIndexReaderFactory();\n    StandardIndexReaderFactory sirf = (StandardIndexReaderFactory) irf;\n    assertEquals(12, sirf.termInfosIndexDivisor);\n    SolrQueryRequest req = req();\n    assertEquals(12, req.getSearcher().getIndexReader().getTermInfosIndexDivisor());\n    req.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/core/TestConfig#testTermIndexDivisor().mjava","pathOld":"solr/src/test/org/apache/solr/core/TestConfig#testTermIndexDivisor().mjava","sourceNew":"  @Test\n  public void testTermIndexDivisor() throws Exception {\n    IndexReaderFactory irf = h.getCore().getIndexReaderFactory();\n    StandardIndexReaderFactory sirf = (StandardIndexReaderFactory) irf;\n    assertEquals(12, sirf.termInfosIndexDivisor);\n    SolrQueryRequest req = req();\n    assertEquals(12, req.getSearcher().getIndexReader().getTermInfosIndexDivisor());\n    req.close();\n  }\n\n","sourceOld":"  @Test\n  public void testTermIndexDivisor() throws Exception {\n    IndexReaderFactory irf = h.getCore().getIndexReaderFactory();\n    StandardIndexReaderFactory sirf = (StandardIndexReaderFactory) irf;\n    assertEquals(12, sirf.termInfosIndexDivisor);\n    SolrQueryRequest req = req();\n    assertEquals(12, req.getSearcher().getIndexReader().getTermInfosIndexDivisor());\n    req.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d7bbf8cffd2321f26cf9f6487f1571d325f20bc3","date":1328092914,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/core/TestConfig#testTermIndexDivisor().mjava","pathOld":"solr/core/src/test/org/apache/solr/core/TestConfig#testTermIndexDivisor().mjava","sourceNew":"  @Test\n  public void testTermIndexDivisor() throws Exception {\n    IndexReaderFactory irf = h.getCore().getIndexReaderFactory();\n    StandardIndexReaderFactory sirf = (StandardIndexReaderFactory) irf;\n    assertEquals(12, sirf.termInfosIndexDivisor);\n  }\n\n","sourceOld":"  @Test\n  public void testTermIndexDivisor() throws Exception {\n    IndexReaderFactory irf = h.getCore().getIndexReaderFactory();\n    StandardIndexReaderFactory sirf = (StandardIndexReaderFactory) irf;\n    assertEquals(12, sirf.termInfosIndexDivisor);\n    SolrQueryRequest req = req();\n    assertEquals(12, req.getSearcher().getIndexReader().getTermInfosIndexDivisor());\n    req.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a45bec74b98f6fc05f52770cfb425739e6563960","date":1375119292,"type":4,"author":"Robert Muir","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/core/src/test/org/apache/solr/core/TestConfig#testTermIndexDivisor().mjava","sourceNew":null,"sourceOld":"  @Test\n  public void testTermIndexDivisor() throws Exception {\n    IndexReaderFactory irf = h.getCore().getIndexReaderFactory();\n    StandardIndexReaderFactory sirf = (StandardIndexReaderFactory) irf;\n    assertEquals(12, sirf.termInfosIndexDivisor);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"716d18f3a9b0993bc679d7fa7abdc9bfb03411ec","date":1376375609,"type":4,"author":"Han Jiang","isMerge":true,"pathNew":"/dev/null","pathOld":"solr/core/src/test/org/apache/solr/core/TestConfig#testTermIndexDivisor().mjava","sourceNew":null,"sourceOld":"  @Test\n  public void testTermIndexDivisor() throws Exception {\n    IndexReaderFactory irf = h.getCore().getIndexReaderFactory();\n    StandardIndexReaderFactory sirf = (StandardIndexReaderFactory) irf;\n    assertEquals(12, sirf.termInfosIndexDivisor);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"716d18f3a9b0993bc679d7fa7abdc9bfb03411ec":["d7bbf8cffd2321f26cf9f6487f1571d325f20bc3","a45bec74b98f6fc05f52770cfb425739e6563960"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a45bec74b98f6fc05f52770cfb425739e6563960":["d7bbf8cffd2321f26cf9f6487f1571d325f20bc3"],"c26f00b574427b55127e869b935845554afde1fa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","c903c3d15906a3da96b8c0c2fb704491005fdbdb"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a258fbb26824fd104ed795e5d9033d2d040049ee":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a45bec74b98f6fc05f52770cfb425739e6563960"],"d7bbf8cffd2321f26cf9f6487f1571d325f20bc3":["c26f00b574427b55127e869b935845554afde1fa"]},"commit2Childs":{"716d18f3a9b0993bc679d7fa7abdc9bfb03411ec":[],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["c26f00b574427b55127e869b935845554afde1fa"],"a45bec74b98f6fc05f52770cfb425739e6563960":["716d18f3a9b0993bc679d7fa7abdc9bfb03411ec","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"c26f00b574427b55127e869b935845554afde1fa":["d7bbf8cffd2321f26cf9f6487f1571d325f20bc3"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c903c3d15906a3da96b8c0c2fb704491005fdbdb","c26f00b574427b55127e869b935845554afde1fa","a258fbb26824fd104ed795e5d9033d2d040049ee"],"a258fbb26824fd104ed795e5d9033d2d040049ee":[],"d7bbf8cffd2321f26cf9f6487f1571d325f20bc3":["716d18f3a9b0993bc679d7fa7abdc9bfb03411ec","a45bec74b98f6fc05f52770cfb425739e6563960"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["716d18f3a9b0993bc679d7fa7abdc9bfb03411ec","a258fbb26824fd104ed795e5d9033d2d040049ee","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}