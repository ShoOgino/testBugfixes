{"path":"lucene/src/java/org/apache/lucene/index/codecs/simpletext/SimpleTextFieldsReader.SimpleTextTermsEnum#docsAndPositions(Bits,DocsAndPositionsEnum).mjava","commits":[{"id":"8d47f68d60cbff5718136b945ba8c55982342f38","date":1285583375,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/simpletext/SimpleTextFieldsReader.SimpleTextTermsEnum#docsAndPositions(Bits,DocsAndPositionsEnum).mjava","pathOld":"/dev/null","sourceNew":"    @Override\n    public DocsAndPositionsEnum docsAndPositions(Bits skipDocs, DocsAndPositionsEnum reuse) throws IOException {\n      if (omitTF) {\n        return null;\n      }\n\n      SimpleTextDocsAndPositionsEnum docsAndPositionsEnum;\n      if (reuse != null && reuse instanceof SimpleTextDocsAndPositionsEnum && ((SimpleTextDocsAndPositionsEnum) reuse).canReuse(in)) {\n        docsAndPositionsEnum = (SimpleTextDocsAndPositionsEnum) reuse;\n      } else {\n        docsAndPositionsEnum = new SimpleTextDocsAndPositionsEnum();\n      } \n      return docsAndPositionsEnum.reset(docsStart, skipDocs);\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["77d4998e63ada9336818d1ebaacc362168f473e8"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","date":1292920096,"type":0,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/simpletext/SimpleTextFieldsReader.SimpleTextTermsEnum#docsAndPositions(Bits,DocsAndPositionsEnum).mjava","pathOld":"/dev/null","sourceNew":"    @Override\n    public DocsAndPositionsEnum docsAndPositions(Bits skipDocs, DocsAndPositionsEnum reuse) throws IOException {\n      if (omitTF) {\n        return null;\n      }\n\n      SimpleTextDocsAndPositionsEnum docsAndPositionsEnum;\n      if (reuse != null && reuse instanceof SimpleTextDocsAndPositionsEnum && ((SimpleTextDocsAndPositionsEnum) reuse).canReuse(in)) {\n        docsAndPositionsEnum = (SimpleTextDocsAndPositionsEnum) reuse;\n      } else {\n        docsAndPositionsEnum = new SimpleTextDocsAndPositionsEnum();\n      } \n      return docsAndPositionsEnum.reset(docsStart, skipDocs);\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e7bd246bb7bc35ac22edfee9157e034dfc4e65eb","date":1309960478,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/simpletext/SimpleTextFieldsReader.SimpleTextTermsEnum#docsAndPositions(Bits,DocsAndPositionsEnum).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/simpletext/SimpleTextFieldsReader.SimpleTextTermsEnum#docsAndPositions(Bits,DocsAndPositionsEnum).mjava","sourceNew":"    @Override\n    public DocsAndPositionsEnum docsAndPositions(Bits liveDocs, DocsAndPositionsEnum reuse) throws IOException {\n      if (omitTF) {\n        return null;\n      }\n\n      SimpleTextDocsAndPositionsEnum docsAndPositionsEnum;\n      if (reuse != null && reuse instanceof SimpleTextDocsAndPositionsEnum && ((SimpleTextDocsAndPositionsEnum) reuse).canReuse(in)) {\n        docsAndPositionsEnum = (SimpleTextDocsAndPositionsEnum) reuse;\n      } else {\n        docsAndPositionsEnum = new SimpleTextDocsAndPositionsEnum();\n      } \n      return docsAndPositionsEnum.reset(docsStart, liveDocs);\n    }\n\n","sourceOld":"    @Override\n    public DocsAndPositionsEnum docsAndPositions(Bits skipDocs, DocsAndPositionsEnum reuse) throws IOException {\n      if (omitTF) {\n        return null;\n      }\n\n      SimpleTextDocsAndPositionsEnum docsAndPositionsEnum;\n      if (reuse != null && reuse instanceof SimpleTextDocsAndPositionsEnum && ((SimpleTextDocsAndPositionsEnum) reuse).canReuse(in)) {\n        docsAndPositionsEnum = (SimpleTextDocsAndPositionsEnum) reuse;\n      } else {\n        docsAndPositionsEnum = new SimpleTextDocsAndPositionsEnum();\n      } \n      return docsAndPositionsEnum.reset(docsStart, skipDocs);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"817d8435e9135b756f08ce6710ab0baac51bdf88","date":1309986993,"type":3,"author":"Steven Rowe","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/simpletext/SimpleTextFieldsReader.SimpleTextTermsEnum#docsAndPositions(Bits,DocsAndPositionsEnum).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/simpletext/SimpleTextFieldsReader.SimpleTextTermsEnum#docsAndPositions(Bits,DocsAndPositionsEnum).mjava","sourceNew":"    @Override\n    public DocsAndPositionsEnum docsAndPositions(Bits liveDocs, DocsAndPositionsEnum reuse) throws IOException {\n      if (omitTF) {\n        return null;\n      }\n\n      SimpleTextDocsAndPositionsEnum docsAndPositionsEnum;\n      if (reuse != null && reuse instanceof SimpleTextDocsAndPositionsEnum && ((SimpleTextDocsAndPositionsEnum) reuse).canReuse(in)) {\n        docsAndPositionsEnum = (SimpleTextDocsAndPositionsEnum) reuse;\n      } else {\n        docsAndPositionsEnum = new SimpleTextDocsAndPositionsEnum();\n      } \n      return docsAndPositionsEnum.reset(docsStart, liveDocs);\n    }\n\n","sourceOld":"    @Override\n    public DocsAndPositionsEnum docsAndPositions(Bits skipDocs, DocsAndPositionsEnum reuse) throws IOException {\n      if (omitTF) {\n        return null;\n      }\n\n      SimpleTextDocsAndPositionsEnum docsAndPositionsEnum;\n      if (reuse != null && reuse instanceof SimpleTextDocsAndPositionsEnum && ((SimpleTextDocsAndPositionsEnum) reuse).canReuse(in)) {\n        docsAndPositionsEnum = (SimpleTextDocsAndPositionsEnum) reuse;\n      } else {\n        docsAndPositionsEnum = new SimpleTextDocsAndPositionsEnum();\n      } \n      return docsAndPositionsEnum.reset(docsStart, skipDocs);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d083e83f225b11e5fdd900e83d26ddb385b6955c","date":1310029438,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/simpletext/SimpleTextFieldsReader.SimpleTextTermsEnum#docsAndPositions(Bits,DocsAndPositionsEnum).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/simpletext/SimpleTextFieldsReader.SimpleTextTermsEnum#docsAndPositions(Bits,DocsAndPositionsEnum).mjava","sourceNew":"    @Override\n    public DocsAndPositionsEnum docsAndPositions(Bits liveDocs, DocsAndPositionsEnum reuse) throws IOException {\n      if (omitTF) {\n        return null;\n      }\n\n      SimpleTextDocsAndPositionsEnum docsAndPositionsEnum;\n      if (reuse != null && reuse instanceof SimpleTextDocsAndPositionsEnum && ((SimpleTextDocsAndPositionsEnum) reuse).canReuse(in)) {\n        docsAndPositionsEnum = (SimpleTextDocsAndPositionsEnum) reuse;\n      } else {\n        docsAndPositionsEnum = new SimpleTextDocsAndPositionsEnum();\n      } \n      return docsAndPositionsEnum.reset(docsStart, liveDocs);\n    }\n\n","sourceOld":"    @Override\n    public DocsAndPositionsEnum docsAndPositions(Bits skipDocs, DocsAndPositionsEnum reuse) throws IOException {\n      if (omitTF) {\n        return null;\n      }\n\n      SimpleTextDocsAndPositionsEnum docsAndPositionsEnum;\n      if (reuse != null && reuse instanceof SimpleTextDocsAndPositionsEnum && ((SimpleTextDocsAndPositionsEnum) reuse).canReuse(in)) {\n        docsAndPositionsEnum = (SimpleTextDocsAndPositionsEnum) reuse;\n      } else {\n        docsAndPositionsEnum = new SimpleTextDocsAndPositionsEnum();\n      } \n      return docsAndPositionsEnum.reset(docsStart, skipDocs);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2afd23a6f1242190c3409d8d81d5c5912d607fc9","date":1310477482,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/simpletext/SimpleTextFieldsReader.SimpleTextTermsEnum#docsAndPositions(Bits,DocsAndPositionsEnum).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/simpletext/SimpleTextFieldsReader.SimpleTextTermsEnum#docsAndPositions(Bits,DocsAndPositionsEnum).mjava","sourceNew":"    @Override\n    public DocsAndPositionsEnum docsAndPositions(Bits liveDocs, DocsAndPositionsEnum reuse) throws IOException {\n      if (indexOptions != IndexOptions.DOCS_AND_FREQS_AND_POSITIONS) {\n        return null;\n      }\n\n      SimpleTextDocsAndPositionsEnum docsAndPositionsEnum;\n      if (reuse != null && reuse instanceof SimpleTextDocsAndPositionsEnum && ((SimpleTextDocsAndPositionsEnum) reuse).canReuse(in)) {\n        docsAndPositionsEnum = (SimpleTextDocsAndPositionsEnum) reuse;\n      } else {\n        docsAndPositionsEnum = new SimpleTextDocsAndPositionsEnum();\n      } \n      return docsAndPositionsEnum.reset(docsStart, liveDocs);\n    }\n\n","sourceOld":"    @Override\n    public DocsAndPositionsEnum docsAndPositions(Bits liveDocs, DocsAndPositionsEnum reuse) throws IOException {\n      if (omitTF) {\n        return null;\n      }\n\n      SimpleTextDocsAndPositionsEnum docsAndPositionsEnum;\n      if (reuse != null && reuse instanceof SimpleTextDocsAndPositionsEnum && ((SimpleTextDocsAndPositionsEnum) reuse).canReuse(in)) {\n        docsAndPositionsEnum = (SimpleTextDocsAndPositionsEnum) reuse;\n      } else {\n        docsAndPositionsEnum = new SimpleTextDocsAndPositionsEnum();\n      } \n      return docsAndPositionsEnum.reset(docsStart, liveDocs);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"77d4998e63ada9336818d1ebaacc362168f473e8","date":1318620209,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/simpletext/SimpleTextFieldsReader.SimpleTextTermsEnum#docsAndPositions(Bits,DocsAndPositionsEnum).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/simpletext/SimpleTextFieldsReader.SimpleTextTermsEnum#docsAndPositions(Bits,DocsAndPositionsEnum).mjava","sourceNew":"    @Override\n    public DocsAndPositionsEnum docsAndPositions(Bits liveDocs, DocsAndPositionsEnum reuse) throws IOException {\n      if (indexOptions != IndexOptions.DOCS_AND_FREQS_AND_POSITIONS) {\n        return null;\n      }\n\n      SimpleTextDocsAndPositionsEnum docsAndPositionsEnum;\n      if (reuse != null && reuse instanceof SimpleTextDocsAndPositionsEnum && ((SimpleTextDocsAndPositionsEnum) reuse).canReuse(SimpleTextFieldsReader.this.in)) {\n        docsAndPositionsEnum = (SimpleTextDocsAndPositionsEnum) reuse;\n      } else {\n        docsAndPositionsEnum = new SimpleTextDocsAndPositionsEnum();\n      } \n      return docsAndPositionsEnum.reset(docsStart, liveDocs);\n    }\n\n","sourceOld":"    @Override\n    public DocsAndPositionsEnum docsAndPositions(Bits liveDocs, DocsAndPositionsEnum reuse) throws IOException {\n      if (indexOptions != IndexOptions.DOCS_AND_FREQS_AND_POSITIONS) {\n        return null;\n      }\n\n      SimpleTextDocsAndPositionsEnum docsAndPositionsEnum;\n      if (reuse != null && reuse instanceof SimpleTextDocsAndPositionsEnum && ((SimpleTextDocsAndPositionsEnum) reuse).canReuse(in)) {\n        docsAndPositionsEnum = (SimpleTextDocsAndPositionsEnum) reuse;\n      } else {\n        docsAndPositionsEnum = new SimpleTextDocsAndPositionsEnum();\n      } \n      return docsAndPositionsEnum.reset(docsStart, liveDocs);\n    }\n\n","bugFix":["8d47f68d60cbff5718136b945ba8c55982342f38"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a0ae5e3ed1232483b7b8a014f175a5fe43595982","date":1324062192,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/codecs/simpletext/SimpleTextFieldsReader.SimpleTextTermsEnum#docsAndPositions(Bits,DocsAndPositionsEnum).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/simpletext/SimpleTextFieldsReader.SimpleTextTermsEnum#docsAndPositions(Bits,DocsAndPositionsEnum).mjava","sourceNew":"    @Override\n    public DocsAndPositionsEnum docsAndPositions(Bits liveDocs, DocsAndPositionsEnum reuse) throws IOException {\n      if (indexOptions != IndexOptions.DOCS_AND_FREQS_AND_POSITIONS) {\n        return null;\n      }\n\n      SimpleTextDocsAndPositionsEnum docsAndPositionsEnum;\n      if (reuse != null && reuse instanceof SimpleTextDocsAndPositionsEnum && ((SimpleTextDocsAndPositionsEnum) reuse).canReuse(SimpleTextFieldsReader.this.in)) {\n        docsAndPositionsEnum = (SimpleTextDocsAndPositionsEnum) reuse;\n      } else {\n        docsAndPositionsEnum = new SimpleTextDocsAndPositionsEnum();\n      } \n      return docsAndPositionsEnum.reset(docsStart, liveDocs);\n    }\n\n","sourceOld":"    @Override\n    public DocsAndPositionsEnum docsAndPositions(Bits liveDocs, DocsAndPositionsEnum reuse) throws IOException {\n      if (indexOptions != IndexOptions.DOCS_AND_FREQS_AND_POSITIONS) {\n        return null;\n      }\n\n      SimpleTextDocsAndPositionsEnum docsAndPositionsEnum;\n      if (reuse != null && reuse instanceof SimpleTextDocsAndPositionsEnum && ((SimpleTextDocsAndPositionsEnum) reuse).canReuse(SimpleTextFieldsReader.this.in)) {\n        docsAndPositionsEnum = (SimpleTextDocsAndPositionsEnum) reuse;\n      } else {\n        docsAndPositionsEnum = new SimpleTextDocsAndPositionsEnum();\n      } \n      return docsAndPositionsEnum.reset(docsStart, liveDocs);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"2afd23a6f1242190c3409d8d81d5c5912d607fc9":["e7bd246bb7bc35ac22edfee9157e034dfc4e65eb"],"e7bd246bb7bc35ac22edfee9157e034dfc4e65eb":["8d47f68d60cbff5718136b945ba8c55982342f38"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"8d47f68d60cbff5718136b945ba8c55982342f38":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","8d47f68d60cbff5718136b945ba8c55982342f38"],"a0ae5e3ed1232483b7b8a014f175a5fe43595982":["77d4998e63ada9336818d1ebaacc362168f473e8"],"77d4998e63ada9336818d1ebaacc362168f473e8":["2afd23a6f1242190c3409d8d81d5c5912d607fc9"],"d083e83f225b11e5fdd900e83d26ddb385b6955c":["8d47f68d60cbff5718136b945ba8c55982342f38","e7bd246bb7bc35ac22edfee9157e034dfc4e65eb"],"817d8435e9135b756f08ce6710ab0baac51bdf88":["8d47f68d60cbff5718136b945ba8c55982342f38","e7bd246bb7bc35ac22edfee9157e034dfc4e65eb"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0ae5e3ed1232483b7b8a014f175a5fe43595982"]},"commit2Childs":{"2afd23a6f1242190c3409d8d81d5c5912d607fc9":["77d4998e63ada9336818d1ebaacc362168f473e8"],"e7bd246bb7bc35ac22edfee9157e034dfc4e65eb":["2afd23a6f1242190c3409d8d81d5c5912d607fc9","d083e83f225b11e5fdd900e83d26ddb385b6955c","817d8435e9135b756f08ce6710ab0baac51bdf88"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["8d47f68d60cbff5718136b945ba8c55982342f38","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a"],"8d47f68d60cbff5718136b945ba8c55982342f38":["e7bd246bb7bc35ac22edfee9157e034dfc4e65eb","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","d083e83f225b11e5fdd900e83d26ddb385b6955c","817d8435e9135b756f08ce6710ab0baac51bdf88"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":[],"a0ae5e3ed1232483b7b8a014f175a5fe43595982":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"77d4998e63ada9336818d1ebaacc362168f473e8":["a0ae5e3ed1232483b7b8a014f175a5fe43595982"],"d083e83f225b11e5fdd900e83d26ddb385b6955c":[],"817d8435e9135b756f08ce6710ab0baac51bdf88":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","d083e83f225b11e5fdd900e83d26ddb385b6955c","817d8435e9135b756f08ce6710ab0baac51bdf88","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}