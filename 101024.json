{"path":"solr/core/src/java/org/apache/solr/schema/FieldProperties#parseProperties(Map[String,String],boolean,boolean).mjava","commits":[{"id":"6e61f8b6e1b607d67d9e0f477d711a92a0dfcde3","date":1364572018,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/schema/FieldProperties#parseProperties(Map[String,String],boolean,boolean).mjava","pathOld":"solr/core/src/java/org/apache/solr/schema/FieldProperties#parseProperties(Map[String,String],boolean).mjava","sourceNew":"  static int parseProperties(Map<String,String> properties, boolean which, boolean failOnError) {\n    int props = 0;\n    for (Map.Entry<String, String> entry : properties.entrySet()) {\n      String val = entry.getValue();\n      if(val == null) continue;\n      if (Boolean.parseBoolean(val) == which) {\n        props |= propertyNameToInt(entry.getKey(), failOnError);\n      }\n    }\n    return props;\n  }\n\n","sourceOld":"  static int parseProperties(Map<String,String> properties, boolean which) {\n    int props = 0;\n    for (Map.Entry<String, String> entry : properties.entrySet()) {\n      String val = entry.getValue();\n      if(val == null) continue;\n      if (Boolean.parseBoolean(val) == which) {\n        props |= propertyNameToInt(entry.getKey());\n      }\n    }\n    return props;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"08970e5b8411182a29412c177eff67ec1110095b","date":1366640815,"type":5,"author":"Steven Rowe","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/schema/FieldProperties#parseProperties(Map[String,#],boolean,boolean).mjava","pathOld":"solr/core/src/java/org/apache/solr/schema/FieldProperties#parseProperties(Map[String,String],boolean,boolean).mjava","sourceNew":"  static int parseProperties(Map<String,?> properties, boolean which, boolean failOnError) {\n    int props = 0;\n    for (Map.Entry<String,?> entry : properties.entrySet()) {\n      Object val = entry.getValue();\n      if(val == null) continue;\n      boolean boolVal = val instanceof Boolean ? (Boolean)val : Boolean.parseBoolean(val.toString());\n      if (boolVal == which) {\n        props |= propertyNameToInt(entry.getKey(), failOnError);\n      }\n    }\n    return props;\n  }\n\n","sourceOld":"  static int parseProperties(Map<String,String> properties, boolean which, boolean failOnError) {\n    int props = 0;\n    for (Map.Entry<String, String> entry : properties.entrySet()) {\n      String val = entry.getValue();\n      if(val == null) continue;\n      if (Boolean.parseBoolean(val) == which) {\n        props |= propertyNameToInt(entry.getKey(), failOnError);\n      }\n    }\n    return props;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"6e61f8b6e1b607d67d9e0f477d711a92a0dfcde3":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["08970e5b8411182a29412c177eff67ec1110095b"],"08970e5b8411182a29412c177eff67ec1110095b":["6e61f8b6e1b607d67d9e0f477d711a92a0dfcde3"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["6e61f8b6e1b607d67d9e0f477d711a92a0dfcde3"],"6e61f8b6e1b607d67d9e0f477d711a92a0dfcde3":["08970e5b8411182a29412c177eff67ec1110095b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"08970e5b8411182a29412c177eff67ec1110095b":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}