{"path":"lucene/core/src/test/org/apache/lucene/index/TestSegmentInfos#testIllegalCreatedVersion().mjava","commits":[{"id":"d97ba94eef1fc33c5451259a7aa2ac682646c1af","date":1488285427,"type":0,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestSegmentInfos#testIllegalCreatedVersion().mjava","pathOld":"/dev/null","sourceNew":"  public void testIllegalCreatedVersion() {\n    IllegalArgumentException e = expectThrows(IllegalArgumentException.class, () -> new SegmentInfos(Version.LUCENE_6_5_0));\n    assertEquals(\"indexCreatedVersion may only be non-null if the index was created on or after 7.0, got 6.5.0\", e.getMessage());\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"31741cf1390044e38a2ec3127cf302ba841bfd75","date":1491292636,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestSegmentInfos#testIllegalCreatedVersion().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestSegmentInfos#testIllegalCreatedVersion().mjava","sourceNew":"  public void testIllegalCreatedVersion() {\n    IllegalArgumentException e = expectThrows(IllegalArgumentException.class, () -> new SegmentInfos(5));\n    assertEquals(\"indexCreatedVersionMajor must be >= 6, got: 5\", e.getMessage());\n    e = expectThrows(IllegalArgumentException.class, () -> new SegmentInfos(8));\n    assertEquals(\"indexCreatedVersionMajor is in the future: 8\", e.getMessage());\n  }\n\n","sourceOld":"  public void testIllegalCreatedVersion() {\n    IllegalArgumentException e = expectThrows(IllegalArgumentException.class, () -> new SegmentInfos(Version.LUCENE_6_5_0));\n    assertEquals(\"indexCreatedVersion may only be non-null if the index was created on or after 7.0, got 6.5.0\", e.getMessage());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"92212fd254551a0b1156aafc3a1a6ed1a43932ad","date":1491296431,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestSegmentInfos#testIllegalCreatedVersion().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestSegmentInfos#testIllegalCreatedVersion().mjava","sourceNew":"  public void testIllegalCreatedVersion() {\n    IllegalArgumentException e = expectThrows(IllegalArgumentException.class, () -> new SegmentInfos(5));\n    assertEquals(\"indexCreatedVersionMajor must be >= 6, got: 5\", e.getMessage());\n    e = expectThrows(IllegalArgumentException.class, () -> new SegmentInfos(8));\n    assertEquals(\"indexCreatedVersionMajor is in the future: 8\", e.getMessage());\n  }\n\n","sourceOld":"  public void testIllegalCreatedVersion() {\n    IllegalArgumentException e = expectThrows(IllegalArgumentException.class, () -> new SegmentInfos(Version.LUCENE_6_5_0));\n    assertEquals(\"indexCreatedVersion may only be non-null if the index was created on or after 7.0, got 6.5.0\", e.getMessage());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8fb98e487030cfb0192224997e59495c63cddebe","date":1498845545,"type":3,"author":"Anshum Gupta","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestSegmentInfos#testIllegalCreatedVersion().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestSegmentInfos#testIllegalCreatedVersion().mjava","sourceNew":"  public void testIllegalCreatedVersion() {\n    IllegalArgumentException e = expectThrows(IllegalArgumentException.class, () -> new SegmentInfos(5));\n    assertEquals(\"indexCreatedVersionMajor must be >= 6, got: 5\", e.getMessage());\n    e = expectThrows(IllegalArgumentException.class, () -> new SegmentInfos(Version.LATEST.major + 1));\n    assertEquals(\"indexCreatedVersionMajor is in the future: \" + (Version.LATEST.major + 1), e.getMessage());\n  }\n\n","sourceOld":"  public void testIllegalCreatedVersion() {\n    IllegalArgumentException e = expectThrows(IllegalArgumentException.class, () -> new SegmentInfos(5));\n    assertEquals(\"indexCreatedVersionMajor must be >= 6, got: 5\", e.getMessage());\n    e = expectThrows(IllegalArgumentException.class, () -> new SegmentInfos(8));\n    assertEquals(\"indexCreatedVersionMajor is in the future: 8\", e.getMessage());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"cc018b79379c67835b40b1259cd3dc931df60944","date":1499109112,"type":3,"author":"Anshum Gupta","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestSegmentInfos#testIllegalCreatedVersion().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestSegmentInfos#testIllegalCreatedVersion().mjava","sourceNew":"  public void testIllegalCreatedVersion() {\n    IllegalArgumentException e = expectThrows(IllegalArgumentException.class, () -> new SegmentInfos(5));\n    assertEquals(\"indexCreatedVersionMajor must be >= 6, got: 5\", e.getMessage());\n    e = expectThrows(IllegalArgumentException.class, () -> new SegmentInfos(Version.LATEST.major + 1));\n    assertEquals(\"indexCreatedVersionMajor is in the future: \" + (Version.LATEST.major + 1), e.getMessage());\n  }\n\n","sourceOld":"  public void testIllegalCreatedVersion() {\n    IllegalArgumentException e = expectThrows(IllegalArgumentException.class, () -> new SegmentInfos(5));\n    assertEquals(\"indexCreatedVersionMajor must be >= 6, got: 5\", e.getMessage());\n    e = expectThrows(IllegalArgumentException.class, () -> new SegmentInfos(8));\n    assertEquals(\"indexCreatedVersionMajor is in the future: 8\", e.getMessage());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"30c8e5574b55d57947e989443dfde611646530ee","date":1499131153,"type":3,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestSegmentInfos#testIllegalCreatedVersion().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestSegmentInfos#testIllegalCreatedVersion().mjava","sourceNew":"  public void testIllegalCreatedVersion() {\n    IllegalArgumentException e = expectThrows(IllegalArgumentException.class, () -> new SegmentInfos(5));\n    assertEquals(\"indexCreatedVersionMajor must be >= 6, got: 5\", e.getMessage());\n    e = expectThrows(IllegalArgumentException.class, () -> new SegmentInfos(Version.LATEST.major + 1));\n    assertEquals(\"indexCreatedVersionMajor is in the future: \" + (Version.LATEST.major + 1), e.getMessage());\n  }\n\n","sourceOld":"  public void testIllegalCreatedVersion() {\n    IllegalArgumentException e = expectThrows(IllegalArgumentException.class, () -> new SegmentInfos(5));\n    assertEquals(\"indexCreatedVersionMajor must be >= 6, got: 5\", e.getMessage());\n    e = expectThrows(IllegalArgumentException.class, () -> new SegmentInfos(8));\n    assertEquals(\"indexCreatedVersionMajor is in the future: 8\", e.getMessage());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cc018b79379c67835b40b1259cd3dc931df60944":["31741cf1390044e38a2ec3127cf302ba841bfd75","8fb98e487030cfb0192224997e59495c63cddebe"],"30c8e5574b55d57947e989443dfde611646530ee":["92212fd254551a0b1156aafc3a1a6ed1a43932ad","cc018b79379c67835b40b1259cd3dc931df60944"],"d97ba94eef1fc33c5451259a7aa2ac682646c1af":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"8fb98e487030cfb0192224997e59495c63cddebe":["31741cf1390044e38a2ec3127cf302ba841bfd75"],"92212fd254551a0b1156aafc3a1a6ed1a43932ad":["d97ba94eef1fc33c5451259a7aa2ac682646c1af"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["cc018b79379c67835b40b1259cd3dc931df60944"],"31741cf1390044e38a2ec3127cf302ba841bfd75":["d97ba94eef1fc33c5451259a7aa2ac682646c1af"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["d97ba94eef1fc33c5451259a7aa2ac682646c1af"],"cc018b79379c67835b40b1259cd3dc931df60944":["30c8e5574b55d57947e989443dfde611646530ee","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"30c8e5574b55d57947e989443dfde611646530ee":[],"8fb98e487030cfb0192224997e59495c63cddebe":["cc018b79379c67835b40b1259cd3dc931df60944"],"92212fd254551a0b1156aafc3a1a6ed1a43932ad":["30c8e5574b55d57947e989443dfde611646530ee"],"d97ba94eef1fc33c5451259a7aa2ac682646c1af":["92212fd254551a0b1156aafc3a1a6ed1a43932ad","31741cf1390044e38a2ec3127cf302ba841bfd75"],"31741cf1390044e38a2ec3127cf302ba841bfd75":["cc018b79379c67835b40b1259cd3dc931df60944","8fb98e487030cfb0192224997e59495c63cddebe"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["30c8e5574b55d57947e989443dfde611646530ee","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}