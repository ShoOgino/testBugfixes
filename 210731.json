{"path":"solr/solrj/src/test/org/apache/solr/client/solrj/cloud/autoscaling/TestPolicy2#testAddMissingReplica().mjava","commits":[{"id":"549864a5317b87de2dd7d4a7d4f8d88eae2c7e58","date":1538573878,"type":0,"author":"Noble Paul","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/cloud/autoscaling/TestPolicy2#testAddMissingReplica().mjava","pathOld":"/dev/null","sourceNew":"  public void testAddMissingReplica() throws IOException {\n    Map<String, Object> m = (Map<String, Object>) loadFromResource(\"testAddMissingReplica.json\");\n    SolrCloudManager cloudManagerFromDiagnostics = createCloudManagerFromDiagnostics(m);\n    AutoScalingConfig autoScalingConfig = new AutoScalingConfig((Map<String, Object>) Utils.getObjectByPath(m, false, \"diagnostics/config\"));\n\n    List<Suggester.SuggestionInfo> suggestions = PolicyHelper.getSuggestions(autoScalingConfig, cloudManagerFromDiagnostics);\n\n    assertEquals(1, suggestions.size());\n    assertEquals(\"repair\", suggestions.get(0)._get(\"type\",null));\n    assertEquals(\"add-replica\", suggestions.get(0)._get(\"operation/command[0]/key\",null));\n    assertEquals(\"shard2\", suggestions.get(0)._get(\"operation/command/add-replica/shard\",null));\n    assertEquals(\"NRT\", suggestions.get(0)._get(\"operation/command/add-replica/type\",null));\n\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fe52ff382a90016f1f6f34f2a026c4749eebb1b8","date":1541503646,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/cloud/autoscaling/TestPolicy2#testAddMissingReplica().mjava","pathOld":"solr/solrj/src/test/org/apache/solr/client/solrj/cloud/autoscaling/TestPolicy2#testAddMissingReplica().mjava","sourceNew":"  public void testAddMissingReplica() {\n    Map<String, Object> m = (Map<String, Object>) loadFromResource(\"testAddMissingReplica.json\");\n    SolrCloudManager cloudManagerFromDiagnostics = createCloudManagerFromDiagnostics(m);\n    AutoScalingConfig autoScalingConfig = new AutoScalingConfig((Map<String, Object>) getObjectByPath(m, false, \"diagnostics/config\"));\n\n    List<Suggester.SuggestionInfo> suggestions = PolicyHelper.getSuggestions(autoScalingConfig, cloudManagerFromDiagnostics);\n\n    assertEquals(1, suggestions.size());\n    assertEquals(\"repair\", suggestions.get(0)._get(\"type\",null));\n    assertEquals(\"add-replica\", suggestions.get(0)._get(\"operation/command[0]/key\",null));\n    assertEquals(\"shard2\", suggestions.get(0)._get(\"operation/command/add-replica/shard\",null));\n    assertEquals(\"NRT\", suggestions.get(0)._get(\"operation/command/add-replica/type\",null));\n\n  }\n\n","sourceOld":"  public void testAddMissingReplica() throws IOException {\n    Map<String, Object> m = (Map<String, Object>) loadFromResource(\"testAddMissingReplica.json\");\n    SolrCloudManager cloudManagerFromDiagnostics = createCloudManagerFromDiagnostics(m);\n    AutoScalingConfig autoScalingConfig = new AutoScalingConfig((Map<String, Object>) Utils.getObjectByPath(m, false, \"diagnostics/config\"));\n\n    List<Suggester.SuggestionInfo> suggestions = PolicyHelper.getSuggestions(autoScalingConfig, cloudManagerFromDiagnostics);\n\n    assertEquals(1, suggestions.size());\n    assertEquals(\"repair\", suggestions.get(0)._get(\"type\",null));\n    assertEquals(\"add-replica\", suggestions.get(0)._get(\"operation/command[0]/key\",null));\n    assertEquals(\"shard2\", suggestions.get(0)._get(\"operation/command/add-replica/shard\",null));\n    assertEquals(\"NRT\", suggestions.get(0)._get(\"operation/command/add-replica/type\",null));\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9ba1b632c041956c93c41aa1143d16a567014891","date":1592328473,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/cloud/autoscaling/TestPolicy2#testAddMissingReplica().mjava","pathOld":"solr/solrj/src/test/org/apache/solr/client/solrj/cloud/autoscaling/TestPolicy2#testAddMissingReplica().mjava","sourceNew":"  public void testAddMissingReplica() {\n    @SuppressWarnings({\"unchecked\"})\n    Map<String, Object> m = (Map<String, Object>) loadFromResource(\"testAddMissingReplica.json\");\n    SolrCloudManager cloudManagerFromDiagnostics = createCloudManagerFromDiagnostics(m);\n    @SuppressWarnings({\"unchecked\"})\n    AutoScalingConfig autoScalingConfig = new AutoScalingConfig((Map<String, Object>) getObjectByPath(m, false, \"diagnostics/config\"));\n\n    List<Suggester.SuggestionInfo> suggestions = PolicyHelper.getSuggestions(autoScalingConfig, cloudManagerFromDiagnostics);\n\n    assertEquals(1, suggestions.size());\n    assertEquals(\"repair\", suggestions.get(0)._get(\"type\",null));\n    assertEquals(\"add-replica\", suggestions.get(0)._get(\"operation/command[0]/key\",null));\n    assertEquals(\"shard2\", suggestions.get(0)._get(\"operation/command/add-replica/shard\",null));\n    assertEquals(\"NRT\", suggestions.get(0)._get(\"operation/command/add-replica/type\",null));\n\n  }\n\n","sourceOld":"  public void testAddMissingReplica() {\n    Map<String, Object> m = (Map<String, Object>) loadFromResource(\"testAddMissingReplica.json\");\n    SolrCloudManager cloudManagerFromDiagnostics = createCloudManagerFromDiagnostics(m);\n    AutoScalingConfig autoScalingConfig = new AutoScalingConfig((Map<String, Object>) getObjectByPath(m, false, \"diagnostics/config\"));\n\n    List<Suggester.SuggestionInfo> suggestions = PolicyHelper.getSuggestions(autoScalingConfig, cloudManagerFromDiagnostics);\n\n    assertEquals(1, suggestions.size());\n    assertEquals(\"repair\", suggestions.get(0)._get(\"type\",null));\n    assertEquals(\"add-replica\", suggestions.get(0)._get(\"operation/command[0]/key\",null));\n    assertEquals(\"shard2\", suggestions.get(0)._get(\"operation/command/add-replica/shard\",null));\n    assertEquals(\"NRT\", suggestions.get(0)._get(\"operation/command/add-replica/type\",null));\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3f504512a03d978990cbff30db0522b354e846db","date":1595247421,"type":4,"author":"Ishan Chattopadhyaya","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/solrj/src/test/org/apache/solr/client/solrj/cloud/autoscaling/TestPolicy2#testAddMissingReplica().mjava","sourceNew":null,"sourceOld":"  public void testAddMissingReplica() {\n    @SuppressWarnings({\"unchecked\"})\n    Map<String, Object> m = (Map<String, Object>) loadFromResource(\"testAddMissingReplica.json\");\n    SolrCloudManager cloudManagerFromDiagnostics = createCloudManagerFromDiagnostics(m);\n    @SuppressWarnings({\"unchecked\"})\n    AutoScalingConfig autoScalingConfig = new AutoScalingConfig((Map<String, Object>) getObjectByPath(m, false, \"diagnostics/config\"));\n\n    List<Suggester.SuggestionInfo> suggestions = PolicyHelper.getSuggestions(autoScalingConfig, cloudManagerFromDiagnostics);\n\n    assertEquals(1, suggestions.size());\n    assertEquals(\"repair\", suggestions.get(0)._get(\"type\",null));\n    assertEquals(\"add-replica\", suggestions.get(0)._get(\"operation/command[0]/key\",null));\n    assertEquals(\"shard2\", suggestions.get(0)._get(\"operation/command/add-replica/shard\",null));\n    assertEquals(\"NRT\", suggestions.get(0)._get(\"operation/command/add-replica/type\",null));\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"9ba1b632c041956c93c41aa1143d16a567014891":["fe52ff382a90016f1f6f34f2a026c4749eebb1b8"],"3f504512a03d978990cbff30db0522b354e846db":["9ba1b632c041956c93c41aa1143d16a567014891"],"549864a5317b87de2dd7d4a7d4f8d88eae2c7e58":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"fe52ff382a90016f1f6f34f2a026c4749eebb1b8":["549864a5317b87de2dd7d4a7d4f8d88eae2c7e58"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3f504512a03d978990cbff30db0522b354e846db"]},"commit2Childs":{"9ba1b632c041956c93c41aa1143d16a567014891":["3f504512a03d978990cbff30db0522b354e846db"],"3f504512a03d978990cbff30db0522b354e846db":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"549864a5317b87de2dd7d4a7d4f8d88eae2c7e58":["fe52ff382a90016f1f6f34f2a026c4749eebb1b8"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["549864a5317b87de2dd7d4a7d4f8d88eae2c7e58"],"fe52ff382a90016f1f6f34f2a026c4749eebb1b8":["9ba1b632c041956c93c41aa1143d16a567014891"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}