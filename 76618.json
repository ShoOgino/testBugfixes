{"path":"src/java/org/apache/lucene/store/FSInputStream[FSDirectory]#readInternal(byte[],int,int).mjava","commits":[{"id":"91109046a59c58ee0ee5d0d2767b08d1f30d6702","date":1000830588,"type":0,"author":"Jason van Zyl","isMerge":false,"pathNew":"src/java/org/apache/lucene/store/FSInputStream[FSDirectory]#readInternal(byte[],int,int).mjava","pathOld":"/dev/null","sourceNew":"  /** InputStream methods */\n  protected final void readInternal(byte[] b, int offset, int len)\n       throws IOException {\n    synchronized (file) {\n      long position = getFilePointer();\n      if (position != file.position) {\n\tfile.seek(position);\n\tfile.position = position;\n      }\n      int total = 0;\n      do {\n\tint i = file.read(b, offset+total, len-total);\n\tif (i == -1)\n\t  throw new IOException(\"read past EOF\");\n\tfile.position += i;\n\ttotal += i;\n      } while (total < len);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5256e856e1442a6e1250d26f1236a33380632dc2","date":1046725105,"type":3,"author":"Otis Gospodnetic","isMerge":false,"pathNew":"src/java/org/apache/lucene/store/FSInputStream[FSDirectory]#readInternal(byte[],int,int).mjava","pathOld":"src/java/org/apache/lucene/store/FSInputStream[FSDirectory]#readInternal(byte[],int,int).mjava","sourceNew":"  /** InputStream methods */\n  protected final void readInternal(byte[] b, int offset, int len)\n       throws IOException {\n    synchronized (file) {\n      long position = getFilePointer();\n      if (position != file.position) {\n        file.seek(position);\n        file.position = position;\n      }\n      int total = 0;\n      do {\n        int i = file.read(b, offset+total, len-total);\n        if (i == -1)\n          throw new IOException(\"read past EOF\");\n        file.position += i;\n        total += i;\n      } while (total < len);\n    }\n  }\n\n","sourceOld":"  /** InputStream methods */\n  protected final void readInternal(byte[] b, int offset, int len)\n       throws IOException {\n    synchronized (file) {\n      long position = getFilePointer();\n      if (position != file.position) {\n\tfile.seek(position);\n\tfile.position = position;\n      }\n      int total = 0;\n      do {\n\tint i = file.read(b, offset+total, len-total);\n\tif (i == -1)\n\t  throw new IOException(\"read past EOF\");\n\tfile.position += i;\n\ttotal += i;\n      } while (total < len);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d4b73bc272a820ddda9d6f3e9017fdc565b5891c","date":1094580376,"type":3,"author":"Daniel Naber","isMerge":false,"pathNew":"src/java/org/apache/lucene/store/FSInputStream[FSDirectory]#readInternal(byte[],int,int).mjava","pathOld":"src/java/org/apache/lucene/store/FSInputStream[FSDirectory]#readInternal(byte[],int,int).mjava","sourceNew":"  /** InputStream methods */\n  protected void readInternal(byte[] b, int offset, int len)\n       throws IOException {\n    synchronized (file) {\n      long position = getFilePointer();\n      if (position != file.position) {\n        file.seek(position);\n        file.position = position;\n      }\n      int total = 0;\n      do {\n        int i = file.read(b, offset+total, len-total);\n        if (i == -1)\n          throw new IOException(\"read past EOF\");\n        file.position += i;\n        total += i;\n      } while (total < len);\n    }\n  }\n\n","sourceOld":"  /** InputStream methods */\n  protected final void readInternal(byte[] b, int offset, int len)\n       throws IOException {\n    synchronized (file) {\n      long position = getFilePointer();\n      if (position != file.position) {\n        file.seek(position);\n        file.position = position;\n      }\n      int total = 0;\n      do {\n        int i = file.read(b, offset+total, len-total);\n        if (i == -1)\n          throw new IOException(\"read past EOF\");\n        file.position += i;\n        total += i;\n      } while (total < len);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"77f2eb0d13b43db148a5e4f61c166fa3688a2df9","date":1096404326,"type":5,"author":"Doug Cutting","isMerge":false,"pathNew":"src/java/org/apache/lucene/store/FSIndexInput[FSDirectory]#readInternal(byte[],int,int).mjava","pathOld":"src/java/org/apache/lucene/store/FSInputStream[FSDirectory]#readInternal(byte[],int,int).mjava","sourceNew":"  /** IndexInput methods */\n  protected void readInternal(byte[] b, int offset, int len)\n       throws IOException {\n    synchronized (file) {\n      long position = getFilePointer();\n      if (position != file.position) {\n        file.seek(position);\n        file.position = position;\n      }\n      int total = 0;\n      do {\n        int i = file.read(b, offset+total, len-total);\n        if (i == -1)\n          throw new IOException(\"read past EOF\");\n        file.position += i;\n        total += i;\n      } while (total < len);\n    }\n  }\n\n","sourceOld":"  /** InputStream methods */\n  protected void readInternal(byte[] b, int offset, int len)\n       throws IOException {\n    synchronized (file) {\n      long position = getFilePointer();\n      if (position != file.position) {\n        file.seek(position);\n        file.position = position;\n      }\n      int total = 0;\n      do {\n        int i = file.read(b, offset+total, len-total);\n        if (i == -1)\n          throw new IOException(\"read past EOF\");\n        file.position += i;\n        total += i;\n      } while (total < len);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"d4b73bc272a820ddda9d6f3e9017fdc565b5891c":["5256e856e1442a6e1250d26f1236a33380632dc2"],"91109046a59c58ee0ee5d0d2767b08d1f30d6702":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"77f2eb0d13b43db148a5e4f61c166fa3688a2df9":["d4b73bc272a820ddda9d6f3e9017fdc565b5891c"],"5256e856e1442a6e1250d26f1236a33380632dc2":["91109046a59c58ee0ee5d0d2767b08d1f30d6702"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["77f2eb0d13b43db148a5e4f61c166fa3688a2df9"]},"commit2Childs":{"d4b73bc272a820ddda9d6f3e9017fdc565b5891c":["77f2eb0d13b43db148a5e4f61c166fa3688a2df9"],"91109046a59c58ee0ee5d0d2767b08d1f30d6702":["5256e856e1442a6e1250d26f1236a33380632dc2"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["91109046a59c58ee0ee5d0d2767b08d1f30d6702"],"77f2eb0d13b43db148a5e4f61c166fa3688a2df9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"5256e856e1442a6e1250d26f1236a33380632dc2":["d4b73bc272a820ddda9d6f3e9017fdc565b5891c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}