{"path":"src/demo/org/apache/lucene/IndexHTML#indexDocs(File).mjava","commits":[{"id":"91109046a59c58ee0ee5d0d2767b08d1f30d6702","date":1000830588,"type":0,"author":"Jason van Zyl","isMerge":false,"pathNew":"src/demo/org/apache/lucene/IndexHTML#indexDocs(File).mjava","pathOld":"/dev/null","sourceNew":"  private static void indexDocs(File file) throws Exception {\n    if (file.isDirectory()) {\t\t\t  // if a directory\n      String[] files = file.list();\t\t  // list its files\n      Arrays.sort(files);\t\t\t  // sort the files\n      for (int i = 0; i < files.length; i++)\t  // recursively index them\n\tindexDocs(new File(file, files[i]));\n\n    } else if (file.getPath().endsWith(\".html\") || // index .html files\n\t       file.getPath().endsWith(\".htm\") || // index .htm files\n\t       file.getPath().endsWith(\".txt\")) { // index .txt files\n      \n      if (uidIter != null) {\n\tString uid = HTMLDocument.uid(file);\t  // construct uid for doc\n\n\twhile (uidIter.term() != null && uidIter.term().field() == \"uid\" &&\n\t       uidIter.term().text().compareTo(uid) < 0) {\n\t  if (deleting) {\t\t\t  // delete stale docs\n\t    System.out.println(\"deleting \" +\n\t\t\t       HTMLDocument.uid2url(uidIter.term().text()));\n\t    reader.delete(uidIter.term());\n\t  }\n\t  uidIter.next();\n\t}\n\tif (uidIter.term() != null && uidIter.term().field() == \"uid\" &&\n\t    uidIter.term().text().compareTo(uid) == 0) {\n\t  uidIter.next();\t\t\t  // keep matching docs\n\t} else if (!deleting) {\t\t\t  // add new docs\n\t  Document doc = HTMLDocument.Document(file);\n\t  System.out.println(\"adding \" + doc.get(\"url\"));\n\twriter.addDocument(doc);\n\t}\n      } else {\t\t\t\t\t  // creating a new index\n\tDocument doc = HTMLDocument.Document(file);\n\tSystem.out.println(\"adding \" + doc.get(\"url\"));\n\twriter.addDocument(doc);\t\t  // add docs unconditionally\n      }\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6585acee8c9458b9745b49462abd05c2aa4f23d5","date":1012057292,"type":5,"author":"Andrew C. Oliver","isMerge":false,"pathNew":"src/demo/org/apache/lucene/demo/IndexHTML#indexDocs(File).mjava","pathOld":"src/demo/org/apache/lucene/IndexHTML#indexDocs(File).mjava","sourceNew":"  private static void indexDocs(File file) throws Exception {\n    if (file.isDirectory()) {\t\t\t  // if a directory\n      String[] files = file.list();\t\t  // list its files\n      Arrays.sort(files);\t\t\t  // sort the files\n      for (int i = 0; i < files.length; i++)\t  // recursively index them\n\tindexDocs(new File(file, files[i]));\n\n    } else if (file.getPath().endsWith(\".html\") || // index .html files\n\t       file.getPath().endsWith(\".htm\") || // index .htm files\n\t       file.getPath().endsWith(\".txt\")) { // index .txt files\n      \n      if (uidIter != null) {\n\tString uid = HTMLDocument.uid(file);\t  // construct uid for doc\n\n\twhile (uidIter.term() != null && uidIter.term().field() == \"uid\" &&\n\t       uidIter.term().text().compareTo(uid) < 0) {\n\t  if (deleting) {\t\t\t  // delete stale docs\n\t    System.out.println(\"deleting \" +\n\t\t\t       HTMLDocument.uid2url(uidIter.term().text()));\n\t    reader.delete(uidIter.term());\n\t  }\n\t  uidIter.next();\n\t}\n\tif (uidIter.term() != null && uidIter.term().field() == \"uid\" &&\n\t    uidIter.term().text().compareTo(uid) == 0) {\n\t  uidIter.next();\t\t\t  // keep matching docs\n\t} else if (!deleting) {\t\t\t  // add new docs\n\t  Document doc = HTMLDocument.Document(file);\n\t  System.out.println(\"adding \" + doc.get(\"url\"));\n\twriter.addDocument(doc);\n\t}\n      } else {\t\t\t\t\t  // creating a new index\n\tDocument doc = HTMLDocument.Document(file);\n\tSystem.out.println(\"adding \" + doc.get(\"url\"));\n\twriter.addDocument(doc);\t\t  // add docs unconditionally\n      }\n    }\n  }\n\n","sourceOld":"  private static void indexDocs(File file) throws Exception {\n    if (file.isDirectory()) {\t\t\t  // if a directory\n      String[] files = file.list();\t\t  // list its files\n      Arrays.sort(files);\t\t\t  // sort the files\n      for (int i = 0; i < files.length; i++)\t  // recursively index them\n\tindexDocs(new File(file, files[i]));\n\n    } else if (file.getPath().endsWith(\".html\") || // index .html files\n\t       file.getPath().endsWith(\".htm\") || // index .htm files\n\t       file.getPath().endsWith(\".txt\")) { // index .txt files\n      \n      if (uidIter != null) {\n\tString uid = HTMLDocument.uid(file);\t  // construct uid for doc\n\n\twhile (uidIter.term() != null && uidIter.term().field() == \"uid\" &&\n\t       uidIter.term().text().compareTo(uid) < 0) {\n\t  if (deleting) {\t\t\t  // delete stale docs\n\t    System.out.println(\"deleting \" +\n\t\t\t       HTMLDocument.uid2url(uidIter.term().text()));\n\t    reader.delete(uidIter.term());\n\t  }\n\t  uidIter.next();\n\t}\n\tif (uidIter.term() != null && uidIter.term().field() == \"uid\" &&\n\t    uidIter.term().text().compareTo(uid) == 0) {\n\t  uidIter.next();\t\t\t  // keep matching docs\n\t} else if (!deleting) {\t\t\t  // add new docs\n\t  Document doc = HTMLDocument.Document(file);\n\t  System.out.println(\"adding \" + doc.get(\"url\"));\n\twriter.addDocument(doc);\n\t}\n      } else {\t\t\t\t\t  // creating a new index\n\tDocument doc = HTMLDocument.Document(file);\n\tSystem.out.println(\"adding \" + doc.get(\"url\"));\n\twriter.addDocument(doc);\t\t  // add docs unconditionally\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"91109046a59c58ee0ee5d0d2767b08d1f30d6702":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"6585acee8c9458b9745b49462abd05c2aa4f23d5":["91109046a59c58ee0ee5d0d2767b08d1f30d6702"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["6585acee8c9458b9745b49462abd05c2aa4f23d5"]},"commit2Childs":{"91109046a59c58ee0ee5d0d2767b08d1f30d6702":["6585acee8c9458b9745b49462abd05c2aa4f23d5"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["91109046a59c58ee0ee5d0d2767b08d1f30d6702"],"6585acee8c9458b9745b49462abd05c2aa4f23d5":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}