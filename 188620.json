{"path":"solr/core/src/java/org/apache/solr/schema/LatLonType#createFields(SchemaField,Object).mjava","commits":[{"id":"acd9883560fd89e6448b2b447302fe543040cd4f","date":1488478696,"type":1,"author":"Adrien Grand","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/schema/LatLonType#createFields(SchemaField,Object).mjava","pathOld":"solr/core/src/java/org/apache/solr/schema/LatLonType#createFields(SchemaField,Object,float).mjava","sourceNew":"  @Override\n  public List<IndexableField> createFields(SchemaField field, Object value) {\n    String externalVal = value.toString();\n    //we could have 3 fields (two for the lat & lon, one for storage)\n    List<IndexableField> f = new ArrayList<>(3);\n    if (field.indexed()) {\n      Point point = SpatialUtils.parsePointSolrException(externalVal, SpatialContext.GEO);\n      //latitude\n      SchemaField subLatSF = subField(field, LAT, schema);\n      f.add(subLatSF.createField(String.valueOf(point.getY())));\n      //longitude\n      SchemaField subLonSF = subField(field, LON, schema);\n      f.add(subLonSF.createField(String.valueOf(point.getX())));\n    }\n\n    if (field.stored()) {\n      f.add(createField(field.getName(), externalVal, StoredField.TYPE));\n    }\n    return f;\n  }\n\n","sourceOld":"  @Override\n  public List<IndexableField> createFields(SchemaField field, Object value, float boost) {\n    String externalVal = value.toString();\n    //we could have 3 fields (two for the lat & lon, one for storage)\n    List<IndexableField> f = new ArrayList<>(3);\n    if (field.indexed()) {\n      Point point = SpatialUtils.parsePointSolrException(externalVal, SpatialContext.GEO);\n      //latitude\n      SchemaField subLatSF = subField(field, LAT, schema);\n      f.add(subLatSF.createField(String.valueOf(point.getY()), subLatSF.indexed() && !subLatSF.omitNorms() ? boost : 1f));\n      //longitude\n      SchemaField subLonSF = subField(field, LON, schema);\n      f.add(subLonSF.createField(String.valueOf(point.getX()), subLonSF.indexed() && !subLonSF.omitNorms() ? boost : 1f));\n    }\n\n    if (field.stored()) {\n      f.add(createField(field.getName(), externalVal, StoredField.TYPE, 1f));\n    }\n    return f;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9a7bf782535cdb8bcd80741225832314d5c2380c","date":1489776915,"type":3,"author":"Tomas Fernandez Lobbe","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/schema/LatLonType#createFields(SchemaField,Object).mjava","pathOld":"solr/core/src/java/org/apache/solr/schema/LatLonType#createFields(SchemaField,Object).mjava","sourceNew":"  @Override\n  public List<IndexableField> createFields(SchemaField field, Object value) {\n    String externalVal = value.toString();\n    //we could have 3 fields (two for the lat & lon, one for storage)\n    List<IndexableField> f = new ArrayList<>(3);\n    if (field.indexed()) {\n      Point point = SpatialUtils.parsePointSolrException(externalVal, SpatialContext.GEO);\n      //latitude\n      SchemaField subLatSF = subField(field, LAT, schema);\n      f.addAll(subLatSF.createFields(String.valueOf(point.getY())));\n      //longitude\n      SchemaField subLonSF = subField(field, LON, schema);\n      f.addAll(subLonSF.createFields(String.valueOf(point.getX())));\n    }\n\n    if (field.stored()) {\n      f.add(createField(field.getName(), externalVal, StoredField.TYPE));\n    }\n    return f;\n  }\n\n","sourceOld":"  @Override\n  public List<IndexableField> createFields(SchemaField field, Object value) {\n    String externalVal = value.toString();\n    //we could have 3 fields (two for the lat & lon, one for storage)\n    List<IndexableField> f = new ArrayList<>(3);\n    if (field.indexed()) {\n      Point point = SpatialUtils.parsePointSolrException(externalVal, SpatialContext.GEO);\n      //latitude\n      SchemaField subLatSF = subField(field, LAT, schema);\n      f.add(subLatSF.createField(String.valueOf(point.getY())));\n      //longitude\n      SchemaField subLonSF = subField(field, LON, schema);\n      f.add(subLonSF.createField(String.valueOf(point.getX())));\n    }\n\n    if (field.stored()) {\n      f.add(createField(field.getName(), externalVal, StoredField.TYPE));\n    }\n    return f;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"378c6150f20ef79f184ab9cd89a056771fc918c7","date":1490280011,"type":3,"author":"Tomas Fernandez Lobbe","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/schema/LatLonType#createFields(SchemaField,Object).mjava","pathOld":"solr/core/src/java/org/apache/solr/schema/LatLonType#createFields(SchemaField,Object).mjava","sourceNew":"  @Override\n  public List<IndexableField> createFields(SchemaField field, Object value) {\n    String externalVal = value.toString();\n    //we could have 3 fields (two for the lat & lon, one for storage)\n    List<IndexableField> f = new ArrayList<>(3);\n    if (field.indexed()) {\n      Point point = SpatialUtils.parsePointSolrException(externalVal, SpatialContext.GEO);\n      //latitude\n      SchemaField subLatSF = subField(field, LAT, schema);\n      f.addAll(subLatSF.createFields(String.valueOf(point.getY())));\n      //longitude\n      SchemaField subLonSF = subField(field, LON, schema);\n      f.addAll(subLonSF.createFields(String.valueOf(point.getX())));\n    }\n\n    if (field.stored()) {\n      f.add(createField(field.getName(), externalVal, StoredField.TYPE));\n    }\n    return f;\n  }\n\n","sourceOld":"  @Override\n  public List<IndexableField> createFields(SchemaField field, Object value) {\n    String externalVal = value.toString();\n    //we could have 3 fields (two for the lat & lon, one for storage)\n    List<IndexableField> f = new ArrayList<>(3);\n    if (field.indexed()) {\n      Point point = SpatialUtils.parsePointSolrException(externalVal, SpatialContext.GEO);\n      //latitude\n      SchemaField subLatSF = subField(field, LAT, schema);\n      f.add(subLatSF.createField(String.valueOf(point.getY())));\n      //longitude\n      SchemaField subLonSF = subField(field, LON, schema);\n      f.add(subLonSF.createField(String.valueOf(point.getX())));\n    }\n\n    if (field.stored()) {\n      f.add(createField(field.getName(), externalVal, StoredField.TYPE));\n    }\n    return f;\n  }\n\n","bugFix":["acd9883560fd89e6448b2b447302fe543040cd4f"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"9a7bf782535cdb8bcd80741225832314d5c2380c":["acd9883560fd89e6448b2b447302fe543040cd4f"],"378c6150f20ef79f184ab9cd89a056771fc918c7":["acd9883560fd89e6448b2b447302fe543040cd4f"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"acd9883560fd89e6448b2b447302fe543040cd4f":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9a7bf782535cdb8bcd80741225832314d5c2380c"]},"commit2Childs":{"9a7bf782535cdb8bcd80741225832314d5c2380c":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"378c6150f20ef79f184ab9cd89a056771fc918c7":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["acd9883560fd89e6448b2b447302fe543040cd4f"],"acd9883560fd89e6448b2b447302fe543040cd4f":["9a7bf782535cdb8bcd80741225832314d5c2380c","378c6150f20ef79f184ab9cd89a056771fc918c7"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["378c6150f20ef79f184ab9cd89a056771fc918c7","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}