{"path":"src/java/org/apache/lucene/analysis/de/GermanAnalyzer#setStemExclusionTable(File).mjava","commits":[{"id":"3ee067e27d1cce6d2d5d64280007410c2e1a38d8","date":1001438945,"type":0,"author":"Doug Cutting","isMerge":false,"pathNew":"src/java/org/apache/lucene/analysis/de/GermanAnalyzer#setStemExclusionTable(File).mjava","pathOld":"/dev/null","sourceNew":"\t/**\n\t * Builds an exclusionlist from the words contained in the given file.\n\t */\n\tpublic void setStemExclusionTable( File exclusionlist ) {\n\t\texcltable = WordlistLoader.getWordtable( exclusionlist );\n\t}\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f1b51af49aa8e1c86a2453fc1d1b618effb6ec8e","date":1029691996,"type":3,"author":"Otis Gospodnetic","isMerge":false,"pathNew":"src/java/org/apache/lucene/analysis/de/GermanAnalyzer#setStemExclusionTable(File).mjava","pathOld":"src/java/org/apache/lucene/analysis/de/GermanAnalyzer#setStemExclusionTable(File).mjava","sourceNew":"    /**\n     * Builds an exclusionlist from the words contained in the given file.\n     */\n    public void setStemExclusionTable( File exclusionlist )\n    {\n\texcltable = WordlistLoader.getWordtable( exclusionlist );\n    }\n\n","sourceOld":"\t/**\n\t * Builds an exclusionlist from the words contained in the given file.\n\t */\n\tpublic void setStemExclusionTable( File exclusionlist ) {\n\t\texcltable = WordlistLoader.getWordtable( exclusionlist );\n\t}\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d14dd1f81165dd4704a95f7427639ada7c3047f7","date":1079084628,"type":3,"author":"Erik Hatcher","isMerge":false,"pathNew":"src/java/org/apache/lucene/analysis/de/GermanAnalyzer#setStemExclusionTable(File).mjava","pathOld":"src/java/org/apache/lucene/analysis/de/GermanAnalyzer#setStemExclusionTable(File).mjava","sourceNew":"    /**\n     * Builds an exclusionlist from the words contained in the given file.\n     */\n    public void setStemExclusionTable( File exclusionlist )\n    {\n\texclusionSet = new HashSet(WordlistLoader.getWordtable( exclusionlist ).keySet());\n    }\n\n","sourceOld":"    /**\n     * Builds an exclusionlist from the words contained in the given file.\n     */\n    public void setStemExclusionTable( File exclusionlist )\n    {\n\texcltable = WordlistLoader.getWordtable( exclusionlist );\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ac9d61a38ae43a4deda807b7f4afcca3a1abc0da","date":1079084717,"type":3,"author":"Erik Hatcher","isMerge":false,"pathNew":"src/java/org/apache/lucene/analysis/de/GermanAnalyzer#setStemExclusionTable(File).mjava","pathOld":"src/java/org/apache/lucene/analysis/de/GermanAnalyzer#setStemExclusionTable(File).mjava","sourceNew":"  /**\n   * Builds an exclusionlist from the words contained in the given file.\n   */\n  public void setStemExclusionTable(File exclusionlist) {\n    exclusionSet = new HashSet(WordlistLoader.getWordtable(exclusionlist).keySet());\n  }\n\n","sourceOld":"    /**\n     * Builds an exclusionlist from the words contained in the given file.\n     */\n    public void setStemExclusionTable( File exclusionlist )\n    {\n\texclusionSet = new HashSet(WordlistLoader.getWordtable( exclusionlist ).keySet());\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d228cde601d14f5ebb8739acab29a9b9a3a8098e","date":1080579215,"type":3,"author":"Erik Hatcher","isMerge":false,"pathNew":"src/java/org/apache/lucene/analysis/de/GermanAnalyzer#setStemExclusionTable(File).mjava","pathOld":"src/java/org/apache/lucene/analysis/de/GermanAnalyzer#setStemExclusionTable(File).mjava","sourceNew":"  /**\n   * Builds an exclusionlist from the words contained in the given file.\n   */\n  public void setStemExclusionTable(File exclusionlist) throws IOException {\n    exclusionSet = new HashSet(WordlistLoader.getWordtable(exclusionlist).keySet());\n  }\n\n","sourceOld":"  /**\n   * Builds an exclusionlist from the words contained in the given file.\n   */\n  public void setStemExclusionTable(File exclusionlist) {\n    exclusionSet = new HashSet(WordlistLoader.getWordtable(exclusionlist).keySet());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4230eef3a047e2a85e989e7ced62bf7fd4a9f859","date":1080661498,"type":3,"author":"Otis Gospodnetic","isMerge":false,"pathNew":"src/java/org/apache/lucene/analysis/de/GermanAnalyzer#setStemExclusionTable(File).mjava","pathOld":"src/java/org/apache/lucene/analysis/de/GermanAnalyzer#setStemExclusionTable(File).mjava","sourceNew":"  /**\n   * Builds an exclusionlist from the words contained in the given file.\n   */\n  public void setStemExclusionTable(File exclusionlist) throws IOException {\n    exclusionSet = WordlistLoader.getWordSet(exclusionlist);\n  }\n\n","sourceOld":"  /**\n   * Builds an exclusionlist from the words contained in the given file.\n   */\n  public void setStemExclusionTable(File exclusionlist) throws IOException {\n    exclusionSet = new HashSet(WordlistLoader.getWordtable(exclusionlist).keySet());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"eb502dc71e908fb2c30e64b73e1f7e7b6238f5a2","date":1092688309,"type":4,"author":"Daniel Naber","isMerge":false,"pathNew":"/dev/null","pathOld":"src/java/org/apache/lucene/analysis/de/GermanAnalyzer#setStemExclusionTable(File).mjava","sourceNew":null,"sourceOld":"  /**\n   * Builds an exclusionlist from the words contained in the given file.\n   */\n  public void setStemExclusionTable(File exclusionlist) throws IOException {\n    exclusionSet = WordlistLoader.getWordSet(exclusionlist);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3ee067e27d1cce6d2d5d64280007410c2e1a38d8":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"eb502dc71e908fb2c30e64b73e1f7e7b6238f5a2":["4230eef3a047e2a85e989e7ced62bf7fd4a9f859"],"4230eef3a047e2a85e989e7ced62bf7fd4a9f859":["d228cde601d14f5ebb8739acab29a9b9a3a8098e"],"f1b51af49aa8e1c86a2453fc1d1b618effb6ec8e":["3ee067e27d1cce6d2d5d64280007410c2e1a38d8"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"d228cde601d14f5ebb8739acab29a9b9a3a8098e":["ac9d61a38ae43a4deda807b7f4afcca3a1abc0da"],"ac9d61a38ae43a4deda807b7f4afcca3a1abc0da":["d14dd1f81165dd4704a95f7427639ada7c3047f7"],"d14dd1f81165dd4704a95f7427639ada7c3047f7":["f1b51af49aa8e1c86a2453fc1d1b618effb6ec8e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["eb502dc71e908fb2c30e64b73e1f7e7b6238f5a2"]},"commit2Childs":{"3ee067e27d1cce6d2d5d64280007410c2e1a38d8":["f1b51af49aa8e1c86a2453fc1d1b618effb6ec8e"],"eb502dc71e908fb2c30e64b73e1f7e7b6238f5a2":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"4230eef3a047e2a85e989e7ced62bf7fd4a9f859":["eb502dc71e908fb2c30e64b73e1f7e7b6238f5a2"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3ee067e27d1cce6d2d5d64280007410c2e1a38d8"],"f1b51af49aa8e1c86a2453fc1d1b618effb6ec8e":["d14dd1f81165dd4704a95f7427639ada7c3047f7"],"d228cde601d14f5ebb8739acab29a9b9a3a8098e":["4230eef3a047e2a85e989e7ced62bf7fd4a9f859"],"ac9d61a38ae43a4deda807b7f4afcca3a1abc0da":["d228cde601d14f5ebb8739acab29a9b9a3a8098e"],"d14dd1f81165dd4704a95f7427639ada7c3047f7":["ac9d61a38ae43a4deda807b7f4afcca3a1abc0da"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}