{"path":"lucene/sandbox/src/java/org/apache/lucene/search/GeoPointDistanceQuery#rewrite(IndexReader).mjava","commits":[{"id":"a4c5421d43870949fb33be27fc9cba0f8f3a7c8d","date":1437181221,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/sandbox/src/java/org/apache/lucene/search/GeoPointDistanceQuery#rewrite(IndexReader).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public Query rewrite(IndexReader reader) {\n    if (maxLon < minLon) {\n      BooleanQuery.Builder bqb = new BooleanQuery.Builder();\n\n      GeoPointDistanceQueryImpl left = new GeoPointDistanceQueryImpl(field, this, new GeoBoundingBox(-180.0D, maxLon,\n          minLat, maxLat));\n      left.setBoost(getBoost());\n      bqb.add(new BooleanClause(left, BooleanClause.Occur.SHOULD));\n      GeoPointDistanceQueryImpl right = new GeoPointDistanceQueryImpl(field, this, new GeoBoundingBox(minLon, 180.0D,\n          minLat, maxLat));\n      right.setBoost(getBoost());\n      bqb.add(new BooleanClause(right, BooleanClause.Occur.SHOULD));\n      return bqb.build();\n    }\n    return new GeoPointDistanceQueryImpl(field, this, new GeoBoundingBox(this.minLon, this.maxLon, this.minLat, this.maxLat));\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2dfdf766e55e943d942055d7de53c7ad6bc45283","date":1441632886,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/sandbox/src/java/org/apache/lucene/search/GeoPointDistanceQuery#rewrite(IndexReader).mjava","pathOld":"lucene/sandbox/src/java/org/apache/lucene/search/GeoPointDistanceQuery#rewrite(IndexReader).mjava","sourceNew":"  @Override\n  public Query rewrite(IndexReader reader) {\n    if (maxLon < minLon) {\n      BooleanQuery.Builder bqb = new BooleanQuery.Builder();\n\n      GeoPointDistanceQueryImpl left = new GeoPointDistanceQueryImpl(field, this, new GeoBoundingBox(-180.0D, maxLon,\n          minLat, maxLat));\n      bqb.add(new BooleanClause(left, BooleanClause.Occur.SHOULD));\n      GeoPointDistanceQueryImpl right = new GeoPointDistanceQueryImpl(field, this, new GeoBoundingBox(minLon, 180.0D,\n          minLat, maxLat));\n      bqb.add(new BooleanClause(right, BooleanClause.Occur.SHOULD));\n      return bqb.build();\n    }\n    return new GeoPointDistanceQueryImpl(field, this, new GeoBoundingBox(this.minLon, this.maxLon, this.minLat, this.maxLat));\n  }\n\n","sourceOld":"  @Override\n  public Query rewrite(IndexReader reader) {\n    if (maxLon < minLon) {\n      BooleanQuery.Builder bqb = new BooleanQuery.Builder();\n\n      GeoPointDistanceQueryImpl left = new GeoPointDistanceQueryImpl(field, this, new GeoBoundingBox(-180.0D, maxLon,\n          minLat, maxLat));\n      left.setBoost(getBoost());\n      bqb.add(new BooleanClause(left, BooleanClause.Occur.SHOULD));\n      GeoPointDistanceQueryImpl right = new GeoPointDistanceQueryImpl(field, this, new GeoBoundingBox(minLon, 180.0D,\n          minLat, maxLat));\n      right.setBoost(getBoost());\n      bqb.add(new BooleanClause(right, BooleanClause.Occur.SHOULD));\n      return bqb.build();\n    }\n    return new GeoPointDistanceQueryImpl(field, this, new GeoBoundingBox(this.minLon, this.maxLon, this.minLat, this.maxLat));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"07c50cb1eca5629cac5b6702dd0f5e06157af61a","date":1445464748,"type":3,"author":"Nick Knize","isMerge":false,"pathNew":"lucene/sandbox/src/java/org/apache/lucene/search/GeoPointDistanceQuery#rewrite(IndexReader).mjava","pathOld":"lucene/sandbox/src/java/org/apache/lucene/search/GeoPointDistanceQuery#rewrite(IndexReader).mjava","sourceNew":"  @Override\n  public Query rewrite(IndexReader reader) {\n    if (maxLon < minLon) {\n      BooleanQuery.Builder bqb = new BooleanQuery.Builder();\n\n      GeoPointDistanceQueryImpl left = new GeoPointDistanceQueryImpl(field, this, new GeoRect(GeoUtils.MIN_LON_INCL, maxLon,\n          minLat, maxLat));\n      bqb.add(new BooleanClause(left, BooleanClause.Occur.SHOULD));\n      GeoPointDistanceQueryImpl right = new GeoPointDistanceQueryImpl(field, this, new GeoRect(minLon, GeoUtils.MAX_LON_INCL,\n          minLat, maxLat));\n      bqb.add(new BooleanClause(right, BooleanClause.Occur.SHOULD));\n      return bqb.build();\n    }\n    return new GeoPointDistanceQueryImpl(field, this, new GeoRect(this.minLon, this.maxLon, this.minLat, this.maxLat));\n  }\n\n","sourceOld":"  @Override\n  public Query rewrite(IndexReader reader) {\n    if (maxLon < minLon) {\n      BooleanQuery.Builder bqb = new BooleanQuery.Builder();\n\n      GeoPointDistanceQueryImpl left = new GeoPointDistanceQueryImpl(field, this, new GeoBoundingBox(-180.0D, maxLon,\n          minLat, maxLat));\n      bqb.add(new BooleanClause(left, BooleanClause.Occur.SHOULD));\n      GeoPointDistanceQueryImpl right = new GeoPointDistanceQueryImpl(field, this, new GeoBoundingBox(minLon, 180.0D,\n          minLat, maxLat));\n      bqb.add(new BooleanClause(right, BooleanClause.Occur.SHOULD));\n      return bqb.build();\n    }\n    return new GeoPointDistanceQueryImpl(field, this, new GeoBoundingBox(this.minLon, this.maxLon, this.minLat, this.maxLat));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d5efb2f55b458ef16fc4c02af5812b1c0cfedcb8","date":1448468240,"type":3,"author":"Nick Knize","isMerge":false,"pathNew":"lucene/sandbox/src/java/org/apache/lucene/search/GeoPointDistanceQuery#rewrite(IndexReader).mjava","pathOld":"lucene/sandbox/src/java/org/apache/lucene/search/GeoPointDistanceQuery#rewrite(IndexReader).mjava","sourceNew":"  @Override\n  public Query rewrite(IndexReader reader) {\n    // query crosses dateline; split into left and right queries\n    if (maxLon < minLon) {\n      BooleanQuery.Builder bqb = new BooleanQuery.Builder();\n\n      // unwrap the longitude iff outside the specified min/max lon range\n      double unwrappedLon = centerLon;\n      if (unwrappedLon > maxLon) {\n        // unwrap left\n        unwrappedLon += -360.0D;\n      }\n      GeoPointDistanceQueryImpl left = new GeoPointDistanceQueryImpl(field, this, unwrappedLon,\n          new GeoRect(GeoUtils.MIN_LON_INCL, maxLon, minLat, maxLat));\n      bqb.add(new BooleanClause(left, BooleanClause.Occur.SHOULD));\n\n      if (unwrappedLon < maxLon) {\n        // unwrap right\n        unwrappedLon += 360.0D;\n      }\n      GeoPointDistanceQueryImpl right = new GeoPointDistanceQueryImpl(field, this, unwrappedLon,\n          new GeoRect(minLon, GeoUtils.MAX_LON_INCL, minLat, maxLat));\n      bqb.add(new BooleanClause(right, BooleanClause.Occur.SHOULD));\n\n      return bqb.build();\n    }\n    return new GeoPointDistanceQueryImpl(field, this, centerLon,\n        new GeoRect(this.minLon, this.maxLon, this.minLat, this.maxLat));\n  }\n\n","sourceOld":"  @Override\n  public Query rewrite(IndexReader reader) {\n    if (maxLon < minLon) {\n      BooleanQuery.Builder bqb = new BooleanQuery.Builder();\n\n      GeoPointDistanceQueryImpl left = new GeoPointDistanceQueryImpl(field, this, new GeoRect(GeoUtils.MIN_LON_INCL, maxLon,\n          minLat, maxLat));\n      bqb.add(new BooleanClause(left, BooleanClause.Occur.SHOULD));\n      GeoPointDistanceQueryImpl right = new GeoPointDistanceQueryImpl(field, this, new GeoRect(minLon, GeoUtils.MAX_LON_INCL,\n          minLat, maxLat));\n      bqb.add(new BooleanClause(right, BooleanClause.Occur.SHOULD));\n      return bqb.build();\n    }\n    return new GeoPointDistanceQueryImpl(field, this, new GeoRect(this.minLon, this.maxLon, this.minLat, this.maxLat));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"937923083e4d137932336fc80f3d78758ff698a6","date":1454691519,"type":5,"author":"nknize","isMerge":false,"pathNew":"lucene/spatial/src/java/org/apache/lucene/spatial/search/GeoPointDistanceQuery#rewrite(IndexReader).mjava","pathOld":"lucene/sandbox/src/java/org/apache/lucene/search/GeoPointDistanceQuery#rewrite(IndexReader).mjava","sourceNew":"  @Override\n  public Query rewrite(IndexReader reader) {\n    // query crosses dateline; split into left and right queries\n    if (maxLon < minLon) {\n      BooleanQuery.Builder bqb = new BooleanQuery.Builder();\n\n      // unwrap the longitude iff outside the specified min/max lon range\n      double unwrappedLon = centerLon;\n      if (unwrappedLon > maxLon) {\n        // unwrap left\n        unwrappedLon += -360.0D;\n      }\n      GeoPointDistanceQueryImpl left = new GeoPointDistanceQueryImpl(field, this, unwrappedLon,\n          new GeoRect(GeoUtils.MIN_LON_INCL, maxLon, minLat, maxLat));\n      bqb.add(new BooleanClause(left, BooleanClause.Occur.SHOULD));\n\n      if (unwrappedLon < maxLon) {\n        // unwrap right\n        unwrappedLon += 360.0D;\n      }\n      GeoPointDistanceQueryImpl right = new GeoPointDistanceQueryImpl(field, this, unwrappedLon,\n          new GeoRect(minLon, GeoUtils.MAX_LON_INCL, minLat, maxLat));\n      bqb.add(new BooleanClause(right, BooleanClause.Occur.SHOULD));\n\n      return bqb.build();\n    }\n    return new GeoPointDistanceQueryImpl(field, this, centerLon,\n        new GeoRect(this.minLon, this.maxLon, this.minLat, this.maxLat));\n  }\n\n","sourceOld":"  @Override\n  public Query rewrite(IndexReader reader) {\n    // query crosses dateline; split into left and right queries\n    if (maxLon < minLon) {\n      BooleanQuery.Builder bqb = new BooleanQuery.Builder();\n\n      // unwrap the longitude iff outside the specified min/max lon range\n      double unwrappedLon = centerLon;\n      if (unwrappedLon > maxLon) {\n        // unwrap left\n        unwrappedLon += -360.0D;\n      }\n      GeoPointDistanceQueryImpl left = new GeoPointDistanceQueryImpl(field, this, unwrappedLon,\n          new GeoRect(GeoUtils.MIN_LON_INCL, maxLon, minLat, maxLat));\n      bqb.add(new BooleanClause(left, BooleanClause.Occur.SHOULD));\n\n      if (unwrappedLon < maxLon) {\n        // unwrap right\n        unwrappedLon += 360.0D;\n      }\n      GeoPointDistanceQueryImpl right = new GeoPointDistanceQueryImpl(field, this, unwrappedLon,\n          new GeoRect(minLon, GeoUtils.MAX_LON_INCL, minLat, maxLat));\n      bqb.add(new BooleanClause(right, BooleanClause.Occur.SHOULD));\n\n      return bqb.build();\n    }\n    return new GeoPointDistanceQueryImpl(field, this, centerLon,\n        new GeoRect(this.minLon, this.maxLon, this.minLat, this.maxLat));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1e6acbaae7af722f17204ceccf0f7db5753eccf3","date":1454775255,"type":5,"author":"Mike McCandless","isMerge":true,"pathNew":"lucene/spatial/src/java/org/apache/lucene/spatial/search/GeoPointDistanceQuery#rewrite(IndexReader).mjava","pathOld":"lucene/sandbox/src/java/org/apache/lucene/search/GeoPointDistanceQuery#rewrite(IndexReader).mjava","sourceNew":"  @Override\n  public Query rewrite(IndexReader reader) {\n    // query crosses dateline; split into left and right queries\n    if (maxLon < minLon) {\n      BooleanQuery.Builder bqb = new BooleanQuery.Builder();\n\n      // unwrap the longitude iff outside the specified min/max lon range\n      double unwrappedLon = centerLon;\n      if (unwrappedLon > maxLon) {\n        // unwrap left\n        unwrappedLon += -360.0D;\n      }\n      GeoPointDistanceQueryImpl left = new GeoPointDistanceQueryImpl(field, termEncoding, this, unwrappedLon,\n          new GeoRect(GeoUtils.MIN_LON_INCL, maxLon, minLat, maxLat));\n      bqb.add(new BooleanClause(left, BooleanClause.Occur.SHOULD));\n\n      if (unwrappedLon < maxLon) {\n        // unwrap right\n        unwrappedLon += 360.0D;\n      }\n      GeoPointDistanceQueryImpl right = new GeoPointDistanceQueryImpl(field, termEncoding, this, unwrappedLon,\n          new GeoRect(minLon, GeoUtils.MAX_LON_INCL, minLat, maxLat));\n      bqb.add(new BooleanClause(right, BooleanClause.Occur.SHOULD));\n\n      return bqb.build();\n    }\n    return new GeoPointDistanceQueryImpl(field, termEncoding, this, centerLon,\n        new GeoRect(this.minLon, this.maxLon, this.minLat, this.maxLat));\n  }\n\n","sourceOld":"  @Override\n  public Query rewrite(IndexReader reader) {\n    // query crosses dateline; split into left and right queries\n    if (maxLon < minLon) {\n      BooleanQuery.Builder bqb = new BooleanQuery.Builder();\n\n      // unwrap the longitude iff outside the specified min/max lon range\n      double unwrappedLon = centerLon;\n      if (unwrappedLon > maxLon) {\n        // unwrap left\n        unwrappedLon += -360.0D;\n      }\n      GeoPointDistanceQueryImpl left = new GeoPointDistanceQueryImpl(field, this, unwrappedLon,\n          new GeoRect(GeoUtils.MIN_LON_INCL, maxLon, minLat, maxLat));\n      bqb.add(new BooleanClause(left, BooleanClause.Occur.SHOULD));\n\n      if (unwrappedLon < maxLon) {\n        // unwrap right\n        unwrappedLon += 360.0D;\n      }\n      GeoPointDistanceQueryImpl right = new GeoPointDistanceQueryImpl(field, this, unwrappedLon,\n          new GeoRect(minLon, GeoUtils.MAX_LON_INCL, minLat, maxLat));\n      bqb.add(new BooleanClause(right, BooleanClause.Occur.SHOULD));\n\n      return bqb.build();\n    }\n    return new GeoPointDistanceQueryImpl(field, this, centerLon,\n        new GeoRect(this.minLon, this.maxLon, this.minLat, this.maxLat));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a4c5421d43870949fb33be27fc9cba0f8f3a7c8d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"d5efb2f55b458ef16fc4c02af5812b1c0cfedcb8":["07c50cb1eca5629cac5b6702dd0f5e06157af61a"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"1e6acbaae7af722f17204ceccf0f7db5753eccf3":["d5efb2f55b458ef16fc4c02af5812b1c0cfedcb8","937923083e4d137932336fc80f3d78758ff698a6"],"2dfdf766e55e943d942055d7de53c7ad6bc45283":["a4c5421d43870949fb33be27fc9cba0f8f3a7c8d"],"07c50cb1eca5629cac5b6702dd0f5e06157af61a":["2dfdf766e55e943d942055d7de53c7ad6bc45283"],"937923083e4d137932336fc80f3d78758ff698a6":["d5efb2f55b458ef16fc4c02af5812b1c0cfedcb8"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["937923083e4d137932336fc80f3d78758ff698a6"]},"commit2Childs":{"a4c5421d43870949fb33be27fc9cba0f8f3a7c8d":["2dfdf766e55e943d942055d7de53c7ad6bc45283"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["a4c5421d43870949fb33be27fc9cba0f8f3a7c8d"],"d5efb2f55b458ef16fc4c02af5812b1c0cfedcb8":["1e6acbaae7af722f17204ceccf0f7db5753eccf3","937923083e4d137932336fc80f3d78758ff698a6"],"1e6acbaae7af722f17204ceccf0f7db5753eccf3":[],"2dfdf766e55e943d942055d7de53c7ad6bc45283":["07c50cb1eca5629cac5b6702dd0f5e06157af61a"],"07c50cb1eca5629cac5b6702dd0f5e06157af61a":["d5efb2f55b458ef16fc4c02af5812b1c0cfedcb8"],"937923083e4d137932336fc80f3d78758ff698a6":["1e6acbaae7af722f17204ceccf0f7db5753eccf3","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["1e6acbaae7af722f17204ceccf0f7db5753eccf3","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}