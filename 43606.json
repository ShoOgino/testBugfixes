{"path":"lucene/core/src/java/org/apache/lucene/codecs/temp/TempFSTTermsReader.TermsReader.IntersectTermsEnum#loadMetaData().mjava","commits":[{"id":"5b0be9ff420e4c2fc29e99f1ee50cc5cdab0089a","date":1374682501,"type":0,"author":"Han Jiang","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/temp/TempFSTTermsReader.TermsReader.IntersectTermsEnum#loadMetaData().mjava","pathOld":"/dev/null","sourceNew":"      /** Lazily accumulate meta data, when we got a accepted term */\n      void loadMetaData() throws IOException {\n        FST.Arc<TempTermOutputs.TempMetaData> last, next;\n        last = stack[metaUpto].fstArc;\n        while (metaUpto != level) {\n          metaUpto++;\n          next = stack[metaUpto].fstArc;\n          next.output = fstOutputs.add(next.output, last.output);\n          last = next;\n        }\n        if (last.isFinal()) {\n          meta = fstOutputs.add(last.output, last.nextFinalOutput);\n        } else {\n          meta = last.output;\n        }\n        state.docFreq = meta.docFreq;\n        state.totalTermFreq = meta.totalTermFreq;\n      }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e6904bcc97d8afa27bd72ee29ac01e525e327ad4","date":1377958787,"type":5,"author":"Han Jiang","isMerge":false,"pathNew":"lucene/codecs/src/java/org/apache/lucene/codecs/temp/TempFSTTermsReader.TermsReader.IntersectTermsEnum#loadMetaData().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/temp/TempFSTTermsReader.TermsReader.IntersectTermsEnum#loadMetaData().mjava","sourceNew":"      /** Lazily accumulate meta data, when we got a accepted term */\n      void loadMetaData() throws IOException {\n        FST.Arc<TempTermOutputs.TempMetaData> last, next;\n        last = stack[metaUpto].fstArc;\n        while (metaUpto != level) {\n          metaUpto++;\n          next = stack[metaUpto].fstArc;\n          next.output = fstOutputs.add(next.output, last.output);\n          last = next;\n        }\n        if (last.isFinal()) {\n          meta = fstOutputs.add(last.output, last.nextFinalOutput);\n        } else {\n          meta = last.output;\n        }\n        state.docFreq = meta.docFreq;\n        state.totalTermFreq = meta.totalTermFreq;\n      }\n\n","sourceOld":"      /** Lazily accumulate meta data, when we got a accepted term */\n      void loadMetaData() throws IOException {\n        FST.Arc<TempTermOutputs.TempMetaData> last, next;\n        last = stack[metaUpto].fstArc;\n        while (metaUpto != level) {\n          metaUpto++;\n          next = stack[metaUpto].fstArc;\n          next.output = fstOutputs.add(next.output, last.output);\n          last = next;\n        }\n        if (last.isFinal()) {\n          meta = fstOutputs.add(last.output, last.nextFinalOutput);\n        } else {\n          meta = last.output;\n        }\n        state.docFreq = meta.docFreq;\n        state.totalTermFreq = meta.totalTermFreq;\n      }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"e6904bcc97d8afa27bd72ee29ac01e525e327ad4":["5b0be9ff420e4c2fc29e99f1ee50cc5cdab0089a"],"5b0be9ff420e4c2fc29e99f1ee50cc5cdab0089a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["5b0be9ff420e4c2fc29e99f1ee50cc5cdab0089a","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"e6904bcc97d8afa27bd72ee29ac01e525e327ad4":[],"5b0be9ff420e4c2fc29e99f1ee50cc5cdab0089a":["e6904bcc97d8afa27bd72ee29ac01e525e327ad4"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["e6904bcc97d8afa27bd72ee29ac01e525e327ad4","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}