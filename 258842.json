{"path":"lucene/facet/src/java/org/apache/lucene/facet/taxonomy/TaxonomyReader#[T-extends-TaxonomyReader]_openIfChanged(T).mjava","commits":[{"id":"219dcddcdf2fc13f6271d9e5836bd19c53a4abf1","date":1353511594,"type":0,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/taxonomy/TaxonomyReader#[T-extends-TaxonomyReader]_openIfChanged(T).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * If the taxonomy has changed since the provided reader was opened, open and\n   * return a new {@link TaxonomyReader}; else, return {@code null}. The new\n   * reader, if not {@code null}, will be the same type of reader as the one\n   * given to this method.\n   * \n   * <p>\n   * This method is typically far less costly than opening a fully new\n   * {@link TaxonomyReader} as it shares resources with the provided\n   * {@link TaxonomyReader}, when possible.\n   */\n  public static <T extends TaxonomyReader> T openIfChanged(T oldTaxoReader) throws IOException {\n    @SuppressWarnings(\"unchecked\")\n    final T newTaxoReader = (T) oldTaxoReader.doOpenIfChanged();\n    assert newTaxoReader != oldTaxoReader;\n    return newTaxoReader;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"407687e67faf6e1f02a211ca078d8e3eed631027","date":1355157407,"type":0,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/taxonomy/TaxonomyReader#[T-extends-TaxonomyReader]_openIfChanged(T).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * If the taxonomy has changed since the provided reader was opened, open and\n   * return a new {@link TaxonomyReader}; else, return {@code null}. The new\n   * reader, if not {@code null}, will be the same type of reader as the one\n   * given to this method.\n   * \n   * <p>\n   * This method is typically far less costly than opening a fully new\n   * {@link TaxonomyReader} as it shares resources with the provided\n   * {@link TaxonomyReader}, when possible.\n   */\n  public static <T extends TaxonomyReader> T openIfChanged(T oldTaxoReader) throws IOException {\n    @SuppressWarnings(\"unchecked\")\n    final T newTaxoReader = (T) oldTaxoReader.doOpenIfChanged();\n    assert newTaxoReader != oldTaxoReader;\n    return newTaxoReader;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"407687e67faf6e1f02a211ca078d8e3eed631027":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","219dcddcdf2fc13f6271d9e5836bd19c53a4abf1"],"219dcddcdf2fc13f6271d9e5836bd19c53a4abf1":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["219dcddcdf2fc13f6271d9e5836bd19c53a4abf1"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["407687e67faf6e1f02a211ca078d8e3eed631027","219dcddcdf2fc13f6271d9e5836bd19c53a4abf1"],"407687e67faf6e1f02a211ca078d8e3eed631027":[],"219dcddcdf2fc13f6271d9e5836bd19c53a4abf1":["407687e67faf6e1f02a211ca078d8e3eed631027","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["407687e67faf6e1f02a211ca078d8e3eed631027","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}