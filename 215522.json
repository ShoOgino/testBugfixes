{"path":"contrib/benchmark/src/java/org/apache/lucene/benchmark/byTask/feeds/EnwikiContentSource.Parser#endElement(String,String,String).mjava","commits":[{"id":"6944b9fa6d8ef96b83ae2d3a4332d03b3857355b","date":1245355139,"type":1,"author":"Mark Robert Miller","isMerge":false,"pathNew":"contrib/benchmark/src/java/org/apache/lucene/benchmark/byTask/feeds/EnwikiContentSource.Parser#endElement(String,String,String).mjava","pathOld":"contrib/benchmark/src/java/org/apache/lucene/benchmark/byTask/feeds/EnwikiDocMaker.Parser#endElement(String,String,String).mjava","sourceNew":"    public void endElement(String namespace, String simple, String qualified)\n      throws SAXException {\n      int elemType = getElementType(qualified);\n      switch (elemType) {\n        case PAGE:\n          // the body must be null and we either are keeping image docs or the\n          // title does not start with Image:\n          if (body != null && (keepImages || !title.startsWith(\"Image:\"))) {\n            String[] tmpTuple = new String[LENGTH];\n            tmpTuple[TITLE] = title.replace('\\t', ' ');\n            tmpTuple[DATE] = time.replace('\\t', ' ');\n            tmpTuple[BODY] = body.replaceAll(\"[\\t\\n]\", \" \");\n            tmpTuple[ID] = id;\n            synchronized(this) {\n              while (tuple != null) {\n                try {\n                  wait();\n                } catch (InterruptedException ie) {\n                }\n              }\n              tuple = tmpTuple;\n              notify();\n            }\n          }\n          break;\n        case BODY:\n          body = contents.toString();\n          //workaround that startswith doesn't have an ignore case option, get at least 20 chars.\n          String startsWith = body.substring(0, Math.min(10, contents.length())).toLowerCase();\n          if (startsWith.startsWith(\"#redirect\")) {\n            body = null;\n          }\n          break;\n        case DATE:\n          time = time(contents.toString());\n          break;\n        case TITLE:\n          title = contents.toString();\n          break;\n        case ID:\n          id = contents.toString();\n          break;\n        default:\n          // this element should be discarded.\n      }\n    }\n\n","sourceOld":"    public void endElement(String namespace, String simple, String qualified)\n      throws SAXException {\n      int elemType = getElementType(qualified);\n      switch (elemType) {\n        case PAGE:\n          // the body must be null and we either are keeping image docs or the\n          // title does not start with Image:\n          if (body != null && (keepImages || !title.startsWith(\"Image:\"))) {\n            create(title, time, body, id);\n          }\n          break;\n        case BODY:\n          body = contents.toString();\n          //workaround that startswith doesn't have an ignore case option, get at least 20 chars.\n          String startsWith = body.substring(0, Math.min(10, contents.length())).toLowerCase();\n          if (startsWith.startsWith(\"#redirect\")) {\n            body = null;\n          }\n          break;\n        case DATE:\n          time = time(contents.toString());\n          break;\n        case TITLE:\n          title = contents.toString();\n          break;\n        case ID:\n          id = contents.toString();\n          break;\n        default:\n          // this element should be discarded.\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d57eb7c98c08c03af6e4cd83509df31c81ac16af","date":1257684312,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"contrib/benchmark/src/java/org/apache/lucene/benchmark/byTask/feeds/EnwikiContentSource.Parser#endElement(String,String,String).mjava","pathOld":"contrib/benchmark/src/java/org/apache/lucene/benchmark/byTask/feeds/EnwikiContentSource.Parser#endElement(String,String,String).mjava","sourceNew":"    @Override\n    public void endElement(String namespace, String simple, String qualified)\n      throws SAXException {\n      int elemType = getElementType(qualified);\n      switch (elemType) {\n        case PAGE:\n          // the body must be null and we either are keeping image docs or the\n          // title does not start with Image:\n          if (body != null && (keepImages || !title.startsWith(\"Image:\"))) {\n            String[] tmpTuple = new String[LENGTH];\n            tmpTuple[TITLE] = title.replace('\\t', ' ');\n            tmpTuple[DATE] = time.replace('\\t', ' ');\n            tmpTuple[BODY] = body.replaceAll(\"[\\t\\n]\", \" \");\n            tmpTuple[ID] = id;\n            synchronized(this) {\n              while (tuple != null) {\n                try {\n                  wait();\n                } catch (InterruptedException ie) {\n                }\n              }\n              tuple = tmpTuple;\n              notify();\n            }\n          }\n          break;\n        case BODY:\n          body = contents.toString();\n          //workaround that startswith doesn't have an ignore case option, get at least 20 chars.\n          String startsWith = body.substring(0, Math.min(10, contents.length())).toLowerCase();\n          if (startsWith.startsWith(\"#redirect\")) {\n            body = null;\n          }\n          break;\n        case DATE:\n          time = time(contents.toString());\n          break;\n        case TITLE:\n          title = contents.toString();\n          break;\n        case ID:\n          id = contents.toString();\n          break;\n        default:\n          // this element should be discarded.\n      }\n    }\n\n","sourceOld":"    public void endElement(String namespace, String simple, String qualified)\n      throws SAXException {\n      int elemType = getElementType(qualified);\n      switch (elemType) {\n        case PAGE:\n          // the body must be null and we either are keeping image docs or the\n          // title does not start with Image:\n          if (body != null && (keepImages || !title.startsWith(\"Image:\"))) {\n            String[] tmpTuple = new String[LENGTH];\n            tmpTuple[TITLE] = title.replace('\\t', ' ');\n            tmpTuple[DATE] = time.replace('\\t', ' ');\n            tmpTuple[BODY] = body.replaceAll(\"[\\t\\n]\", \" \");\n            tmpTuple[ID] = id;\n            synchronized(this) {\n              while (tuple != null) {\n                try {\n                  wait();\n                } catch (InterruptedException ie) {\n                }\n              }\n              tuple = tmpTuple;\n              notify();\n            }\n          }\n          break;\n        case BODY:\n          body = contents.toString();\n          //workaround that startswith doesn't have an ignore case option, get at least 20 chars.\n          String startsWith = body.substring(0, Math.min(10, contents.length())).toLowerCase();\n          if (startsWith.startsWith(\"#redirect\")) {\n            body = null;\n          }\n          break;\n        case DATE:\n          time = time(contents.toString());\n          break;\n        case TITLE:\n          title = contents.toString();\n          break;\n        case ID:\n          id = contents.toString();\n          break;\n        default:\n          // this element should be discarded.\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"aa4b66eb16ead894fa7130904af6ecf34331f050","date":1258198413,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"contrib/benchmark/src/java/org/apache/lucene/benchmark/byTask/feeds/EnwikiContentSource.Parser#endElement(String,String,String).mjava","pathOld":"contrib/benchmark/src/java/org/apache/lucene/benchmark/byTask/feeds/EnwikiContentSource.Parser#endElement(String,String,String).mjava","sourceNew":"    @Override\n    public void endElement(String namespace, String simple, String qualified)\n      throws SAXException {\n      int elemType = getElementType(qualified);\n      switch (elemType) {\n        case PAGE:\n          // the body must be null and we either are keeping image docs or the\n          // title does not start with Image:\n          if (body != null && (keepImages || !title.startsWith(\"Image:\"))) {\n            String[] tmpTuple = new String[LENGTH];\n            tmpTuple[TITLE] = title.replace('\\t', ' ');\n            tmpTuple[DATE] = time.replace('\\t', ' ');\n            tmpTuple[BODY] = body.replaceAll(\"[\\t\\n]\", \" \");\n            tmpTuple[ID] = id;\n            synchronized(this) {\n              while (tuple != null) {\n                try {\n                  wait();\n                } catch (InterruptedException ie) {\n                  throw new ThreadInterruptedException(ie);\n                }\n              }\n              tuple = tmpTuple;\n              notify();\n            }\n          }\n          break;\n        case BODY:\n          body = contents.toString();\n          //workaround that startswith doesn't have an ignore case option, get at least 20 chars.\n          String startsWith = body.substring(0, Math.min(10, contents.length())).toLowerCase();\n          if (startsWith.startsWith(\"#redirect\")) {\n            body = null;\n          }\n          break;\n        case DATE:\n          time = time(contents.toString());\n          break;\n        case TITLE:\n          title = contents.toString();\n          break;\n        case ID:\n          id = contents.toString();\n          break;\n        default:\n          // this element should be discarded.\n      }\n    }\n\n","sourceOld":"    @Override\n    public void endElement(String namespace, String simple, String qualified)\n      throws SAXException {\n      int elemType = getElementType(qualified);\n      switch (elemType) {\n        case PAGE:\n          // the body must be null and we either are keeping image docs or the\n          // title does not start with Image:\n          if (body != null && (keepImages || !title.startsWith(\"Image:\"))) {\n            String[] tmpTuple = new String[LENGTH];\n            tmpTuple[TITLE] = title.replace('\\t', ' ');\n            tmpTuple[DATE] = time.replace('\\t', ' ');\n            tmpTuple[BODY] = body.replaceAll(\"[\\t\\n]\", \" \");\n            tmpTuple[ID] = id;\n            synchronized(this) {\n              while (tuple != null) {\n                try {\n                  wait();\n                } catch (InterruptedException ie) {\n                }\n              }\n              tuple = tmpTuple;\n              notify();\n            }\n          }\n          break;\n        case BODY:\n          body = contents.toString();\n          //workaround that startswith doesn't have an ignore case option, get at least 20 chars.\n          String startsWith = body.substring(0, Math.min(10, contents.length())).toLowerCase();\n          if (startsWith.startsWith(\"#redirect\")) {\n            body = null;\n          }\n          break;\n        case DATE:\n          time = time(contents.toString());\n          break;\n        case TITLE:\n          title = contents.toString();\n          break;\n        case ID:\n          id = contents.toString();\n          break;\n        default:\n          // this element should be discarded.\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/contrib/benchmark/src/java/org/apache/lucene/benchmark/byTask/feeds/EnwikiContentSource.Parser#endElement(String,String,String).mjava","pathOld":"contrib/benchmark/src/java/org/apache/lucene/benchmark/byTask/feeds/EnwikiContentSource.Parser#endElement(String,String,String).mjava","sourceNew":"    @Override\n    public void endElement(String namespace, String simple, String qualified)\n      throws SAXException {\n      int elemType = getElementType(qualified);\n      switch (elemType) {\n        case PAGE:\n          // the body must be null and we either are keeping image docs or the\n          // title does not start with Image:\n          if (body != null && (keepImages || !title.startsWith(\"Image:\"))) {\n            String[] tmpTuple = new String[LENGTH];\n            tmpTuple[TITLE] = title.replace('\\t', ' ');\n            tmpTuple[DATE] = time.replace('\\t', ' ');\n            tmpTuple[BODY] = body.replaceAll(\"[\\t\\n]\", \" \");\n            tmpTuple[ID] = id;\n            synchronized(this) {\n              while (tuple != null) {\n                try {\n                  wait();\n                } catch (InterruptedException ie) {\n                  throw new ThreadInterruptedException(ie);\n                }\n              }\n              tuple = tmpTuple;\n              notify();\n            }\n          }\n          break;\n        case BODY:\n          body = contents.toString();\n          //workaround that startswith doesn't have an ignore case option, get at least 20 chars.\n          String startsWith = body.substring(0, Math.min(10, contents.length())).toLowerCase();\n          if (startsWith.startsWith(\"#redirect\")) {\n            body = null;\n          }\n          break;\n        case DATE:\n          time = time(contents.toString());\n          break;\n        case TITLE:\n          title = contents.toString();\n          break;\n        case ID:\n          id = contents.toString();\n          break;\n        default:\n          // this element should be discarded.\n      }\n    }\n\n","sourceOld":"    @Override\n    public void endElement(String namespace, String simple, String qualified)\n      throws SAXException {\n      int elemType = getElementType(qualified);\n      switch (elemType) {\n        case PAGE:\n          // the body must be null and we either are keeping image docs or the\n          // title does not start with Image:\n          if (body != null && (keepImages || !title.startsWith(\"Image:\"))) {\n            String[] tmpTuple = new String[LENGTH];\n            tmpTuple[TITLE] = title.replace('\\t', ' ');\n            tmpTuple[DATE] = time.replace('\\t', ' ');\n            tmpTuple[BODY] = body.replaceAll(\"[\\t\\n]\", \" \");\n            tmpTuple[ID] = id;\n            synchronized(this) {\n              while (tuple != null) {\n                try {\n                  wait();\n                } catch (InterruptedException ie) {\n                  throw new ThreadInterruptedException(ie);\n                }\n              }\n              tuple = tmpTuple;\n              notify();\n            }\n          }\n          break;\n        case BODY:\n          body = contents.toString();\n          //workaround that startswith doesn't have an ignore case option, get at least 20 chars.\n          String startsWith = body.substring(0, Math.min(10, contents.length())).toLowerCase();\n          if (startsWith.startsWith(\"#redirect\")) {\n            body = null;\n          }\n          break;\n        case DATE:\n          time = time(contents.toString());\n          break;\n        case TITLE:\n          title = contents.toString();\n          break;\n        case ID:\n          id = contents.toString();\n          break;\n        default:\n          // this element should be discarded.\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"6944b9fa6d8ef96b83ae2d3a4332d03b3857355b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"d57eb7c98c08c03af6e4cd83509df31c81ac16af":["6944b9fa6d8ef96b83ae2d3a4332d03b3857355b"],"aa4b66eb16ead894fa7130904af6ecf34331f050":["d57eb7c98c08c03af6e4cd83509df31c81ac16af"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["aa4b66eb16ead894fa7130904af6ecf34331f050"]},"commit2Childs":{"6944b9fa6d8ef96b83ae2d3a4332d03b3857355b":["d57eb7c98c08c03af6e4cd83509df31c81ac16af"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["6944b9fa6d8ef96b83ae2d3a4332d03b3857355b"],"d57eb7c98c08c03af6e4cd83509df31c81ac16af":["aa4b66eb16ead894fa7130904af6ecf34331f050"],"aa4b66eb16ead894fa7130904af6ecf34331f050":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}