{"path":"lucene/core/src/java/org/apache/lucene/util/NumericUtils#intToBytesDirect(int,byte[],int).mjava","commits":[{"id":"770342641f7b505eaa8dccdc666158bff2419109","date":1449868421,"type":2,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/NumericUtils#intToBytesDirect(int,byte[],int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/bkd/BKDUtil#intToBytes(int,byte[],int).mjava","sourceNew":"  public static void intToBytesDirect(int x, byte[] dest, int index) {\n    // Flip the sign bit, so negative ints sort before positive ints correctly:\n    for(int i=0;i<4;i++) {\n      dest[4*index+i] = (byte) (x >> 24-i*8);\n    }\n  }\n\n","sourceOld":"  public static void intToBytes(int x, byte[] dest, int index) {\n    // Flip the sign bit, so negative ints sort before positive ints correctly:\n    x ^= 0x80000000;\n    for(int i=0;i<4;i++) {\n      dest[4*index+i] = (byte) (x >> 24-i*8);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f226a8b088dd9c8f6ab287a77237c4aa00a238e5","date":1456187572,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/NumericUtils#intToBytesDirect(int,byte[],int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/NumericUtils#intToBytesDirect(int,byte[],int).mjava","sourceNew":"  public static void intToBytesDirect(int x, byte[] dest, int offset) {\n    for (int i = 0; i < 4; i++) {\n      dest[offset+i] = (byte) (x >> 24-i*8);\n    }\n  }\n\n","sourceOld":"  public static void intToBytesDirect(int x, byte[] dest, int index) {\n    // Flip the sign bit, so negative ints sort before positive ints correctly:\n    for(int i=0;i<4;i++) {\n      dest[4*index+i] = (byte) (x >> 24-i*8);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"419a8f52c6635419beb951255cacbbb281044c57","date":1456189353,"type":3,"author":"Noble Paul","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/util/NumericUtils#intToBytesDirect(int,byte[],int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/NumericUtils#intToBytesDirect(int,byte[],int).mjava","sourceNew":"  public static void intToBytesDirect(int x, byte[] dest, int offset) {\n    for (int i = 0; i < 4; i++) {\n      dest[offset+i] = (byte) (x >> 24-i*8);\n    }\n  }\n\n","sourceOld":"  public static void intToBytesDirect(int x, byte[] dest, int index) {\n    // Flip the sign bit, so negative ints sort before positive ints correctly:\n    for(int i=0;i<4;i++) {\n      dest[4*index+i] = (byte) (x >> 24-i*8);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ebfbe42b2dae57f9ac08706e76b0ab8bdf7011c8","date":1456349953,"type":4,"author":"Mike McCandless","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/util/NumericUtils#intToBytesDirect(int,byte[],int).mjava","sourceNew":null,"sourceOld":"  public static void intToBytesDirect(int x, byte[] dest, int offset) {\n    for (int i = 0; i < 4; i++) {\n      dest[offset+i] = (byte) (x >> 24-i*8);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"868f63baffb79407d4b49f3c0be8dc4725ffc6e1","date":1456423715,"type":4,"author":"Mike McCandless","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/util/NumericUtils#intToBytesDirect(int,byte[],int).mjava","sourceNew":null,"sourceOld":"  public static void intToBytesDirect(int x, byte[] dest, int offset) {\n    for (int i = 0; i < 4; i++) {\n      dest[offset+i] = (byte) (x >> 24-i*8);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"ebfbe42b2dae57f9ac08706e76b0ab8bdf7011c8":["419a8f52c6635419beb951255cacbbb281044c57"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"868f63baffb79407d4b49f3c0be8dc4725ffc6e1":["419a8f52c6635419beb951255cacbbb281044c57","ebfbe42b2dae57f9ac08706e76b0ab8bdf7011c8"],"419a8f52c6635419beb951255cacbbb281044c57":["770342641f7b505eaa8dccdc666158bff2419109","f226a8b088dd9c8f6ab287a77237c4aa00a238e5"],"f226a8b088dd9c8f6ab287a77237c4aa00a238e5":["770342641f7b505eaa8dccdc666158bff2419109"],"770342641f7b505eaa8dccdc666158bff2419109":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["868f63baffb79407d4b49f3c0be8dc4725ffc6e1"]},"commit2Childs":{"ebfbe42b2dae57f9ac08706e76b0ab8bdf7011c8":["868f63baffb79407d4b49f3c0be8dc4725ffc6e1"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["770342641f7b505eaa8dccdc666158bff2419109"],"868f63baffb79407d4b49f3c0be8dc4725ffc6e1":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"419a8f52c6635419beb951255cacbbb281044c57":["ebfbe42b2dae57f9ac08706e76b0ab8bdf7011c8","868f63baffb79407d4b49f3c0be8dc4725ffc6e1"],"f226a8b088dd9c8f6ab287a77237c4aa00a238e5":["419a8f52c6635419beb951255cacbbb281044c57"],"770342641f7b505eaa8dccdc666158bff2419109":["419a8f52c6635419beb951255cacbbb281044c57","f226a8b088dd9c8f6ab287a77237c4aa00a238e5"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}