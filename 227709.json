{"path":"lucene/codecs/src/java/org/apache/lucene/codecs/bloom/FuzzySet#contains(BytesRef).mjava","commits":[{"id":"3f1361ca6e7d39bfd5cf15485d8843ea798bdd30","date":1346918556,"type":1,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/codecs/src/java/org/apache/lucene/codecs/bloom/FuzzySet#contains(BytesRef).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/FuzzySet#contains(BytesRef).mjava","sourceNew":"  /**\n   * The main method required for a Bloom filter which, given a value determines set membership.\n   * Unlike a conventional set, the fuzzy set returns NO or MAYBE rather than true or false.\n   * @param value\n   * @return NO or MAYBE\n   */\n  public ContainsResult contains(BytesRef value) {\n    int hash = hashFunction.hash(value);\n    if (hash < 0) {\n      hash = hash * -1;\n    }\n    return mayContainValue(hash);\n  }\n\n","sourceOld":"  /**\n   * The main method required for a Bloom filter which, given a value determines set membership.\n   * Unlike a conventional set, the fuzzy set returns NO or MAYBE rather than true or false.\n   * @param value\n   * @return NO or MAYBE\n   */\n  public ContainsResult contains(BytesRef value) {\n    int hash = hashFunction.hash(value);\n    if (hash < 0) {\n      hash = hash * -1;\n    }\n    return mayContainValue(hash);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c7bd1fdddb8e84c1857d1a55c32ced51f0ed2069","date":1348430063,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/codecs/src/java/org/apache/lucene/codecs/bloom/FuzzySet#contains(BytesRef).mjava","pathOld":"lucene/codecs/src/java/org/apache/lucene/codecs/bloom/FuzzySet#contains(BytesRef).mjava","sourceNew":"  /**\n   * The main method required for a Bloom filter which, given a value determines set membership.\n   * Unlike a conventional set, the fuzzy set returns NO or MAYBE rather than true or false.\n   * @return NO or MAYBE\n   */\n  public ContainsResult contains(BytesRef value) {\n    int hash = hashFunction.hash(value);\n    if (hash < 0) {\n      hash = hash * -1;\n    }\n    return mayContainValue(hash);\n  }\n\n","sourceOld":"  /**\n   * The main method required for a Bloom filter which, given a value determines set membership.\n   * Unlike a conventional set, the fuzzy set returns NO or MAYBE rather than true or false.\n   * @param value\n   * @return NO or MAYBE\n   */\n  public ContainsResult contains(BytesRef value) {\n    int hash = hashFunction.hash(value);\n    if (hash < 0) {\n      hash = hash * -1;\n    }\n    return mayContainValue(hash);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"c7bd1fdddb8e84c1857d1a55c32ced51f0ed2069":["3f1361ca6e7d39bfd5cf15485d8843ea798bdd30"],"3f1361ca6e7d39bfd5cf15485d8843ea798bdd30":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["c7bd1fdddb8e84c1857d1a55c32ced51f0ed2069"]},"commit2Childs":{"c7bd1fdddb8e84c1857d1a55c32ced51f0ed2069":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3f1361ca6e7d39bfd5cf15485d8843ea798bdd30":["c7bd1fdddb8e84c1857d1a55c32ced51f0ed2069"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3f1361ca6e7d39bfd5cf15485d8843ea798bdd30"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}