{"path":"contrib/snowball/src/java/org/tartarus/snowball/ext/RomanianStemmer#r_combo_suffix().mjava","commits":[{"id":"b62da6a75575f59a016a076b4753dc6e20c74b44","date":1219528967,"type":2,"author":"Karl-Johan Wettin","isMerge":false,"pathNew":"contrib/snowball/src/java/org/tartarus/snowball/ext/RomanianStemmer#r_combo_suffix().mjava","pathOld":"contrib/snowball/src/java/net/sf/snowball/ext/NorwegianStemmer#r_main_suffix().mjava","sourceNew":"        private boolean r_combo_suffix() {\n            int among_var;\n            int v_1;\n            // test, line 91\n            v_1 = limit - cursor;\n            // (, line 91\n            // [, line 92\n            ket = cursor;\n            // substring, line 92\n            among_var = find_among_b(a_2, 46);\n            if (among_var == 0)\n            {\n                return false;\n            }\n            // ], line 92\n            bra = cursor;\n            // call R1, line 92\n            if (!r_R1())\n            {\n                return false;\n            }\n            // (, line 92\n            switch(among_var) {\n                case 0:\n                    return false;\n                case 1:\n                    // (, line 100\n                    // <-, line 101\n                    slice_from(\"abil\");\n                    break;\n                case 2:\n                    // (, line 103\n                    // <-, line 104\n                    slice_from(\"ibil\");\n                    break;\n                case 3:\n                    // (, line 106\n                    // <-, line 107\n                    slice_from(\"iv\");\n                    break;\n                case 4:\n                    // (, line 112\n                    // <-, line 113\n                    slice_from(\"ic\");\n                    break;\n                case 5:\n                    // (, line 117\n                    // <-, line 118\n                    slice_from(\"at\");\n                    break;\n                case 6:\n                    // (, line 121\n                    // <-, line 122\n                    slice_from(\"it\");\n                    break;\n            }\n            // set standard_suffix_removed, line 125\n            B_standard_suffix_removed = true;\n            cursor = limit - v_1;\n            return true;\n        }\n\n","sourceOld":"        private boolean r_main_suffix() {\n            int among_var;\n            int v_1;\n            int v_2;\n            // (, line 36\n            // setlimit, line 37\n            v_1 = limit - cursor;\n            // tomark, line 37\n            if (cursor < I_p1)\n            {\n                return false;\n            }\n            cursor = I_p1;\n            v_2 = limit_backward;\n            limit_backward = cursor;\n            cursor = limit - v_1;\n            // (, line 37\n            // [, line 37\n            ket = cursor;\n            // substring, line 37\n            among_var = find_among_b(a_0, 29);\n            if (among_var == 0)\n            {\n                limit_backward = v_2;\n                return false;\n            }\n            // ], line 37\n            bra = cursor;\n            limit_backward = v_2;\n            switch(among_var) {\n                case 0:\n                    return false;\n                case 1:\n                    // (, line 43\n                    // delete, line 43\n                    slice_del();\n                    break;\n                case 2:\n                    // (, line 45\n                    if (!(in_grouping_b(g_s_ending, 98, 122)))\n                    {\n                        return false;\n                    }\n                    // delete, line 45\n                    slice_del();\n                    break;\n                case 3:\n                    // (, line 47\n                    // <-, line 47\n                    slice_from(\"er\");\n                    break;\n            }\n            return true;\n        }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a5aa159e1ac4009d23cea92797d3804da4f5e7ad","date":1264041909,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"contrib/analyzers/common/src/java/org/tartarus/snowball/ext/RomanianStemmer#r_combo_suffix().mjava","pathOld":"contrib/snowball/src/java/org/tartarus/snowball/ext/RomanianStemmer#r_combo_suffix().mjava","sourceNew":"        private boolean r_combo_suffix() {\n            int among_var;\n            int v_1;\n            // test, line 91\n            v_1 = limit - cursor;\n            // (, line 91\n            // [, line 92\n            ket = cursor;\n            // substring, line 92\n            among_var = find_among_b(a_2, 46);\n            if (among_var == 0)\n            {\n                return false;\n            }\n            // ], line 92\n            bra = cursor;\n            // call R1, line 92\n            if (!r_R1())\n            {\n                return false;\n            }\n            // (, line 92\n            switch(among_var) {\n                case 0:\n                    return false;\n                case 1:\n                    // (, line 100\n                    // <-, line 101\n                    slice_from(\"abil\");\n                    break;\n                case 2:\n                    // (, line 103\n                    // <-, line 104\n                    slice_from(\"ibil\");\n                    break;\n                case 3:\n                    // (, line 106\n                    // <-, line 107\n                    slice_from(\"iv\");\n                    break;\n                case 4:\n                    // (, line 112\n                    // <-, line 113\n                    slice_from(\"ic\");\n                    break;\n                case 5:\n                    // (, line 117\n                    // <-, line 118\n                    slice_from(\"at\");\n                    break;\n                case 6:\n                    // (, line 121\n                    // <-, line 122\n                    slice_from(\"it\");\n                    break;\n            }\n            // set standard_suffix_removed, line 125\n            B_standard_suffix_removed = true;\n            cursor = limit - v_1;\n            return true;\n        }\n\n","sourceOld":"        private boolean r_combo_suffix() {\n            int among_var;\n            int v_1;\n            // test, line 91\n            v_1 = limit - cursor;\n            // (, line 91\n            // [, line 92\n            ket = cursor;\n            // substring, line 92\n            among_var = find_among_b(a_2, 46);\n            if (among_var == 0)\n            {\n                return false;\n            }\n            // ], line 92\n            bra = cursor;\n            // call R1, line 92\n            if (!r_R1())\n            {\n                return false;\n            }\n            // (, line 92\n            switch(among_var) {\n                case 0:\n                    return false;\n                case 1:\n                    // (, line 100\n                    // <-, line 101\n                    slice_from(\"abil\");\n                    break;\n                case 2:\n                    // (, line 103\n                    // <-, line 104\n                    slice_from(\"ibil\");\n                    break;\n                case 3:\n                    // (, line 106\n                    // <-, line 107\n                    slice_from(\"iv\");\n                    break;\n                case 4:\n                    // (, line 112\n                    // <-, line 113\n                    slice_from(\"ic\");\n                    break;\n                case 5:\n                    // (, line 117\n                    // <-, line 118\n                    slice_from(\"at\");\n                    break;\n                case 6:\n                    // (, line 121\n                    // <-, line 122\n                    slice_from(\"it\");\n                    break;\n            }\n            // set standard_suffix_removed, line 125\n            B_standard_suffix_removed = true;\n            cursor = limit - v_1;\n            return true;\n        }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"38c26570a4fd6cf0856801c977a2bc9c28a5424c","date":1264074890,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"contrib/snowball/src/java/org/tartarus/snowball/ext/RomanianStemmer#r_combo_suffix().mjava","pathOld":"/dev/null","sourceNew":"        private boolean r_combo_suffix() {\n            int among_var;\n            int v_1;\n            // test, line 91\n            v_1 = limit - cursor;\n            // (, line 91\n            // [, line 92\n            ket = cursor;\n            // substring, line 92\n            among_var = find_among_b(a_2, 46);\n            if (among_var == 0)\n            {\n                return false;\n            }\n            // ], line 92\n            bra = cursor;\n            // call R1, line 92\n            if (!r_R1())\n            {\n                return false;\n            }\n            // (, line 92\n            switch(among_var) {\n                case 0:\n                    return false;\n                case 1:\n                    // (, line 100\n                    // <-, line 101\n                    slice_from(\"abil\");\n                    break;\n                case 2:\n                    // (, line 103\n                    // <-, line 104\n                    slice_from(\"ibil\");\n                    break;\n                case 3:\n                    // (, line 106\n                    // <-, line 107\n                    slice_from(\"iv\");\n                    break;\n                case 4:\n                    // (, line 112\n                    // <-, line 113\n                    slice_from(\"ic\");\n                    break;\n                case 5:\n                    // (, line 117\n                    // <-, line 118\n                    slice_from(\"at\");\n                    break;\n                case 6:\n                    // (, line 121\n                    // <-, line 122\n                    slice_from(\"it\");\n                    break;\n            }\n            // set standard_suffix_removed, line 125\n            B_standard_suffix_removed = true;\n            cursor = limit - v_1;\n            return true;\n        }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d40ff39db4a2b90a440b97f2a7d7eda344f004ef","date":1264074978,"type":4,"author":"Michael McCandless","isMerge":false,"pathNew":"/dev/null","pathOld":"contrib/snowball/src/java/org/tartarus/snowball/ext/RomanianStemmer#r_combo_suffix().mjava","sourceNew":null,"sourceOld":"        private boolean r_combo_suffix() {\n            int among_var;\n            int v_1;\n            // test, line 91\n            v_1 = limit - cursor;\n            // (, line 91\n            // [, line 92\n            ket = cursor;\n            // substring, line 92\n            among_var = find_among_b(a_2, 46);\n            if (among_var == 0)\n            {\n                return false;\n            }\n            // ], line 92\n            bra = cursor;\n            // call R1, line 92\n            if (!r_R1())\n            {\n                return false;\n            }\n            // (, line 92\n            switch(among_var) {\n                case 0:\n                    return false;\n                case 1:\n                    // (, line 100\n                    // <-, line 101\n                    slice_from(\"abil\");\n                    break;\n                case 2:\n                    // (, line 103\n                    // <-, line 104\n                    slice_from(\"ibil\");\n                    break;\n                case 3:\n                    // (, line 106\n                    // <-, line 107\n                    slice_from(\"iv\");\n                    break;\n                case 4:\n                    // (, line 112\n                    // <-, line 113\n                    slice_from(\"ic\");\n                    break;\n                case 5:\n                    // (, line 117\n                    // <-, line 118\n                    slice_from(\"at\");\n                    break;\n                case 6:\n                    // (, line 121\n                    // <-, line 122\n                    slice_from(\"it\");\n                    break;\n            }\n            // set standard_suffix_removed, line 125\n            B_standard_suffix_removed = true;\n            cursor = limit - v_1;\n            return true;\n        }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b62da6a75575f59a016a076b4753dc6e20c74b44":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a5aa159e1ac4009d23cea92797d3804da4f5e7ad":["b62da6a75575f59a016a076b4753dc6e20c74b44"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"38c26570a4fd6cf0856801c977a2bc9c28a5424c":["a5aa159e1ac4009d23cea92797d3804da4f5e7ad"],"d40ff39db4a2b90a440b97f2a7d7eda344f004ef":["38c26570a4fd6cf0856801c977a2bc9c28a5424c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["d40ff39db4a2b90a440b97f2a7d7eda344f004ef"]},"commit2Childs":{"b62da6a75575f59a016a076b4753dc6e20c74b44":["a5aa159e1ac4009d23cea92797d3804da4f5e7ad"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b62da6a75575f59a016a076b4753dc6e20c74b44"],"a5aa159e1ac4009d23cea92797d3804da4f5e7ad":["38c26570a4fd6cf0856801c977a2bc9c28a5424c"],"38c26570a4fd6cf0856801c977a2bc9c28a5424c":["d40ff39db4a2b90a440b97f2a7d7eda344f004ef"],"d40ff39db4a2b90a440b97f2a7d7eda344f004ef":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}