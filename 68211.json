{"path":"solr/core/src/java/org/apache/solr/response/transform/RawValueTransformerFactory.WriteableStringValue#write(String,TextResponseWriter).mjava","commits":[{"id":"555fcbaea39f68bc5c24b8a94fb024bb5dea3655","date":1429078520,"type":0,"author":"Ryan McKinley","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/response/transform/RawValueTransformerFactory.WriteableStringValue#write(String,TextResponseWriter).mjava","pathOld":"/dev/null","sourceNew":"    @Override\n    public void write(String name, TextResponseWriter writer) throws IOException {\n      String str = null;\n      if(val instanceof IndexableField) { // delays holding it in memory\n        str = ((IndexableField)val).stringValue();\n      }\n      else {\n        str = val.toString();\n      }\n      writer.getWriter().write(str);\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a66fa31e491f447fdb8d4fe79379de6a0645664b","date":1429082089,"type":3,"author":"Tommaso Teofili","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/response/transform/RawValueTransformerFactory.WriteableStringValue#write(String,TextResponseWriter).mjava","pathOld":"solr/core/src/java/org/apache/solr/response/transform/RawValueTransformerFactory.WriteableStringValue#write(String,TextResponseWriter).mjava","sourceNew":"    @Override\n    public void write(String name, TextResponseWriter writer) throws IOException {\n//      String str = null;\n//      if(val instanceof IndexableField) { // delays holding it in memory\n//        str = ((IndexableField)val).stringValue();\n//      }\n//      else {\n//        str = val.toString();\n//      }\n      writer.getWriter().write(val.toString());\n    }\n\n","sourceOld":"    @Override\n    public void write(String name, TextResponseWriter writer) throws IOException {\n      String str = null;\n      if(val instanceof IndexableField) { // delays holding it in memory\n        str = ((IndexableField)val).stringValue();\n      }\n      else {\n        str = val.toString();\n      }\n      writer.getWriter().write(str);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"232561869cacb775932b87f4d44450f91eacc124","date":1429097342,"type":3,"author":"Tommaso Teofili","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/response/transform/RawValueTransformerFactory.WriteableStringValue#write(String,TextResponseWriter).mjava","pathOld":"solr/core/src/java/org/apache/solr/response/transform/RawValueTransformerFactory.WriteableStringValue#write(String,TextResponseWriter).mjava","sourceNew":"    @Override\n    public void write(String name, TextResponseWriter writer) throws IOException {\n      String str = null;\n      if(val instanceof StorableField) { // delays holding it in memory\n        str = ((StorableField)val).stringValue();\n      }\n      else {\n        str = val.toString();\n      }\n      writer.getWriter().write(str);\n    }\n\n","sourceOld":"    @Override\n    public void write(String name, TextResponseWriter writer) throws IOException {\n//      String str = null;\n//      if(val instanceof IndexableField) { // delays holding it in memory\n//        str = ((IndexableField)val).stringValue();\n//      }\n//      else {\n//        str = val.toString();\n//      }\n      writer.getWriter().write(val.toString());\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6654c5f3ec2e4a84ef867c82d4eec872c2372c8c","date":1453060490,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/response/transform/RawValueTransformerFactory.WriteableStringValue#write(String,TextResponseWriter).mjava","pathOld":"solr/core/src/java/org/apache/solr/response/transform/RawValueTransformerFactory.WriteableStringValue#write(String,TextResponseWriter).mjava","sourceNew":"    @Override\n    public void write(String name, TextResponseWriter writer) throws IOException {\n      String str = null;\n      if(val instanceof IndexableField) { // delays holding it in memory\n        str = ((IndexableField)val).stringValue();\n      }\n      else {\n        str = val.toString();\n      }\n      writer.getWriter().write(str);\n    }\n\n","sourceOld":"    @Override\n    public void write(String name, TextResponseWriter writer) throws IOException {\n      String str = null;\n      if(val instanceof StorableField) { // delays holding it in memory\n        str = ((StorableField)val).stringValue();\n      }\n      else {\n        str = val.toString();\n      }\n      writer.getWriter().write(str);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"26dad91f15019714a045b4d8c5f40162b2058b54","date":1528551655,"type":5,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/response/transform/RawValueTransformerFactory.WriteableStringValue#write(String,TextWriter).mjava","pathOld":"solr/core/src/java/org/apache/solr/response/transform/RawValueTransformerFactory.WriteableStringValue#write(String,TextResponseWriter).mjava","sourceNew":"    @Override\n    public void write(String name, TextWriter writer) throws IOException {\n      String str = null;\n      if(val instanceof IndexableField) { // delays holding it in memory\n        str = ((IndexableField)val).stringValue();\n      }\n      else {\n        str = val.toString();\n      }\n      writer.getWriter().write(str);\n    }\n\n","sourceOld":"    @Override\n    public void write(String name, TextResponseWriter writer) throws IOException {\n      String str = null;\n      if(val instanceof IndexableField) { // delays holding it in memory\n        str = ((IndexableField)val).stringValue();\n      }\n      else {\n        str = val.toString();\n      }\n      writer.getWriter().write(str);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7eeaaea0106c7d6a2de50acfc8d357121ef8bd26","date":1531589977,"type":4,"author":"Michael Braun","isMerge":true,"pathNew":"/dev/null","pathOld":"solr/core/src/java/org/apache/solr/response/transform/RawValueTransformerFactory.WriteableStringValue#write(String,TextResponseWriter).mjava","sourceNew":null,"sourceOld":"    @Override\n    public void write(String name, TextResponseWriter writer) throws IOException {\n      String str = null;\n      if(val instanceof IndexableField) { // delays holding it in memory\n        str = ((IndexableField)val).stringValue();\n      }\n      else {\n        str = val.toString();\n      }\n      writer.getWriter().write(str);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","date":1531905561,"type":4,"author":"Alessandro Benedetti","isMerge":true,"pathNew":"/dev/null","pathOld":"solr/core/src/java/org/apache/solr/response/transform/RawValueTransformerFactory.WriteableStringValue#write(String,TextResponseWriter).mjava","sourceNew":null,"sourceOld":"    @Override\n    public void write(String name, TextResponseWriter writer) throws IOException {\n      String str = null;\n      if(val instanceof IndexableField) { // delays holding it in memory\n        str = ((IndexableField)val).stringValue();\n      }\n      else {\n        str = val.toString();\n      }\n      writer.getWriter().write(str);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"232561869cacb775932b87f4d44450f91eacc124":["a66fa31e491f447fdb8d4fe79379de6a0645664b"],"0efc9f2cae117418f13ba9035f5e1d516ea7a2b5":["6654c5f3ec2e4a84ef867c82d4eec872c2372c8c","26dad91f15019714a045b4d8c5f40162b2058b54"],"a66fa31e491f447fdb8d4fe79379de6a0645664b":["555fcbaea39f68bc5c24b8a94fb024bb5dea3655"],"26dad91f15019714a045b4d8c5f40162b2058b54":["6654c5f3ec2e4a84ef867c82d4eec872c2372c8c"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"555fcbaea39f68bc5c24b8a94fb024bb5dea3655":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["26dad91f15019714a045b4d8c5f40162b2058b54"],"6654c5f3ec2e4a84ef867c82d4eec872c2372c8c":["232561869cacb775932b87f4d44450f91eacc124"],"7eeaaea0106c7d6a2de50acfc8d357121ef8bd26":["6654c5f3ec2e4a84ef867c82d4eec872c2372c8c","26dad91f15019714a045b4d8c5f40162b2058b54"]},"commit2Childs":{"232561869cacb775932b87f4d44450f91eacc124":["6654c5f3ec2e4a84ef867c82d4eec872c2372c8c"],"0efc9f2cae117418f13ba9035f5e1d516ea7a2b5":[],"a66fa31e491f447fdb8d4fe79379de6a0645664b":["232561869cacb775932b87f4d44450f91eacc124"],"26dad91f15019714a045b4d8c5f40162b2058b54":["0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","cd5edd1f2b162a5cfa08efd17851a07373a96817","7eeaaea0106c7d6a2de50acfc8d357121ef8bd26"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["555fcbaea39f68bc5c24b8a94fb024bb5dea3655"],"555fcbaea39f68bc5c24b8a94fb024bb5dea3655":["a66fa31e491f447fdb8d4fe79379de6a0645664b"],"6654c5f3ec2e4a84ef867c82d4eec872c2372c8c":["0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","26dad91f15019714a045b4d8c5f40162b2058b54","7eeaaea0106c7d6a2de50acfc8d357121ef8bd26"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"7eeaaea0106c7d6a2de50acfc8d357121ef8bd26":[]},"heads":["0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","cd5edd1f2b162a5cfa08efd17851a07373a96817","7eeaaea0106c7d6a2de50acfc8d357121ef8bd26"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}