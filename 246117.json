{"path":"solr/core/src/java/org/apache/solr/handler/SnapShooter#validateCreateSnapshot().mjava","commits":[{"id":"a5bb2e653b3f6992c26fe4cc0f3fbdce37b21c3c","date":1399457549,"type":0,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/SnapShooter#validateCreateSnapshot().mjava","pathOld":"/dev/null","sourceNew":"  void validateCreateSnapshot() throws IOException {\n\n    Lock lock = lockFactory.makeLock(directoryName + \".lock\");\n    if (lock.isLocked()) {\n      throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,\n          \"Unable to acquire lock for snapshot directory: \" + snapShotDir.getAbsolutePath());\n    }\n    snapShotDir = new File(snapDir, directoryName);\n    if (snapShotDir.exists()) {\n      throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,\n          \"Snapshot directory already exists: \" + snapShotDir.getAbsolutePath());\n    }\n    if (!snapShotDir.mkdirs()) {\n      throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,\n          \"Unable to create snapshot directory: \" + snapShotDir.getAbsolutePath());\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c9bb56e767bb86815d2433c9ee32cb883e0489e5","date":1401776474,"type":3,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/SnapShooter#validateCreateSnapshot().mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/SnapShooter#validateCreateSnapshot().mjava","sourceNew":"  void validateCreateSnapshot() throws IOException {\n    Lock lock = lockFactory.makeLock(directoryName + \".lock\");\n    snapShotDir = new File(snapDir, directoryName);\n    if (lock.isLocked()) {\n      throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,\n          \"Unable to acquire lock for snapshot directory: \" + snapShotDir.getAbsolutePath());\n    }\n    if (snapShotDir.exists()) {\n      throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,\n          \"Snapshot directory already exists: \" + snapShotDir.getAbsolutePath());\n    }\n    if (!snapShotDir.mkdirs()) {\n      throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,\n          \"Unable to create snapshot directory: \" + snapShotDir.getAbsolutePath());\n    }\n  }\n\n","sourceOld":"  void validateCreateSnapshot() throws IOException {\n\n    Lock lock = lockFactory.makeLock(directoryName + \".lock\");\n    if (lock.isLocked()) {\n      throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,\n          \"Unable to acquire lock for snapshot directory: \" + snapShotDir.getAbsolutePath());\n    }\n    snapShotDir = new File(snapDir, directoryName);\n    if (snapShotDir.exists()) {\n      throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,\n          \"Snapshot directory already exists: \" + snapShotDir.getAbsolutePath());\n    }\n    if (!snapShotDir.mkdirs()) {\n      throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,\n          \"Unable to create snapshot directory: \" + snapShotDir.getAbsolutePath());\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"285cdc737de75b7cc7c284a156b20214deb67bca","date":1415535483,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/SnapShooter#validateCreateSnapshot().mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/SnapShooter#validateCreateSnapshot().mjava","sourceNew":"  void validateCreateSnapshot() throws IOException {\n    final File snapShotFile = new File(snapDir, directoryName);\n    if (snapShotFile.exists()) {\n      throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,\n          \"Snapshot directory already exists: \" + snapShotFile.getAbsolutePath());\n    }\n    if (!snapShotFile.mkdirs()) {\n      throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,\n          \"Unable to create snapshot directory: \" + snapShotFile.getAbsolutePath());\n    }\n    snapShotDir = new SimpleFSDirectory(snapShotFile.toPath(), SimpleFSLockFactory.INSTANCE);\n    Lock lock = snapShotDir.makeLock(\"write.lock\");\n    if (lock.isLocked()) {\n      throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,\n          \"Unable to acquire lock for snapshot directory: \" + snapShotFile.getAbsolutePath());\n    }\n  }\n\n","sourceOld":"  void validateCreateSnapshot() throws IOException {\n    Lock lock = lockFactory.makeLock(directoryName + \".lock\");\n    snapShotDir = new File(snapDir, directoryName);\n    if (lock.isLocked()) {\n      throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,\n          \"Unable to acquire lock for snapshot directory: \" + snapShotDir.getAbsolutePath());\n    }\n    if (snapShotDir.exists()) {\n      throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,\n          \"Snapshot directory already exists: \" + snapShotDir.getAbsolutePath());\n    }\n    if (!snapShotDir.mkdirs()) {\n      throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,\n          \"Unable to create snapshot directory: \" + snapShotDir.getAbsolutePath());\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5fef3c83faf41df65635bce953c6b00b539608c9","date":1415547075,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/SnapShooter#validateCreateSnapshot().mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/SnapShooter#validateCreateSnapshot().mjava","sourceNew":"  void validateCreateSnapshot() throws IOException {\n    final File snapShotFile = new File(snapDir, directoryName);\n    if (snapShotFile.exists()) {\n      throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,\n          \"Snapshot directory already exists: \" + snapShotFile.getAbsolutePath());\n    }\n    if (!snapShotFile.mkdirs()) {\n      throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,\n          \"Unable to create snapshot directory: \" + snapShotFile.getAbsolutePath());\n    }\n    snapShotDir = new SimpleFSDirectory(snapShotFile.toPath(), NoLockFactory.INSTANCE);\n  }\n\n","sourceOld":"  void validateCreateSnapshot() throws IOException {\n    final File snapShotFile = new File(snapDir, directoryName);\n    if (snapShotFile.exists()) {\n      throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,\n          \"Snapshot directory already exists: \" + snapShotFile.getAbsolutePath());\n    }\n    if (!snapShotFile.mkdirs()) {\n      throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,\n          \"Unable to create snapshot directory: \" + snapShotFile.getAbsolutePath());\n    }\n    snapShotDir = new SimpleFSDirectory(snapShotFile.toPath(), SimpleFSLockFactory.INSTANCE);\n    Lock lock = snapShotDir.makeLock(\"write.lock\");\n    if (lock.isLocked()) {\n      throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,\n          \"Unable to acquire lock for snapshot directory: \" + snapShotFile.getAbsolutePath());\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"72dc099c69eb723a6ff1fd0aa6def62a565d959c","date":1415568013,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/SnapShooter#validateCreateSnapshot().mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/SnapShooter#validateCreateSnapshot().mjava","sourceNew":"  void validateCreateSnapshot() throws IOException {\n    snapShotDir = new File(snapDir, directoryName);\n    if (snapShotDir.exists()) {\n      throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,\n          \"Snapshot directory already exists: \" + snapShotDir.getAbsolutePath());\n    }\n    if (!snapShotDir.mkdirs()) {\n      throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,\n          \"Unable to create snapshot directory: \" + snapShotDir.getAbsolutePath());\n    }\n  }\n\n","sourceOld":"  void validateCreateSnapshot() throws IOException {\n    final File snapShotFile = new File(snapDir, directoryName);\n    if (snapShotFile.exists()) {\n      throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,\n          \"Snapshot directory already exists: \" + snapShotFile.getAbsolutePath());\n    }\n    if (!snapShotFile.mkdirs()) {\n      throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,\n          \"Unable to create snapshot directory: \" + snapShotFile.getAbsolutePath());\n    }\n    snapShotDir = new SimpleFSDirectory(snapShotFile.toPath(), NoLockFactory.INSTANCE);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c5c99ad021f3da085fcb66220598a8f91dc5e453","date":1462242046,"type":3,"author":"David Smiley","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/SnapShooter#validateCreateSnapshot().mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/SnapShooter#validateCreateSnapshot().mjava","sourceNew":"  public void validateCreateSnapshot() throws IOException {\n    snapShotDir = new File(snapDir, directoryName);\n    if (snapShotDir.exists()) {\n      throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,\n          \"Snapshot directory already exists: \" + snapShotDir.getAbsolutePath());\n    }\n    if (!snapShotDir.mkdirs()) { // note: TODO reconsider mkdirs vs mkdir\n      throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,\n          \"Unable to create snapshot directory: \" + snapShotDir.getAbsolutePath());\n    }\n  }\n\n","sourceOld":"  void validateCreateSnapshot() throws IOException {\n    snapShotDir = new File(snapDir, directoryName);\n    if (snapShotDir.exists()) {\n      throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,\n          \"Snapshot directory already exists: \" + snapShotDir.getAbsolutePath());\n    }\n    if (!snapShotDir.mkdirs()) {\n      throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,\n          \"Unable to create snapshot directory: \" + snapShotDir.getAbsolutePath());\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1c7a21395bae9e2f61aeb639f47aaca771c426ed","date":1462255690,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/handler/SnapShooter#validateCreateSnapshot().mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/SnapShooter#validateCreateSnapshot().mjava","sourceNew":"  public void validateCreateSnapshot() throws IOException {\n    snapShotDir = new File(snapDir, directoryName);\n    if (snapShotDir.exists()) {\n      throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,\n          \"Snapshot directory already exists: \" + snapShotDir.getAbsolutePath());\n    }\n    if (!snapShotDir.mkdirs()) { // note: TODO reconsider mkdirs vs mkdir\n      throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,\n          \"Unable to create snapshot directory: \" + snapShotDir.getAbsolutePath());\n    }\n  }\n\n","sourceOld":"  void validateCreateSnapshot() throws IOException {\n    snapShotDir = new File(snapDir, directoryName);\n    if (snapShotDir.exists()) {\n      throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,\n          \"Snapshot directory already exists: \" + snapShotDir.getAbsolutePath());\n    }\n    if (!snapShotDir.mkdirs()) {\n      throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,\n          \"Unable to create snapshot directory: \" + snapShotDir.getAbsolutePath());\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"55b50463286869f584cf849d1587a0fcd54d1dfa","date":1462378517,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/handler/SnapShooter#validateCreateSnapshot().mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/SnapShooter#validateCreateSnapshot().mjava","sourceNew":"  public void validateCreateSnapshot() throws IOException {\n    snapShotDir = new File(snapDir, directoryName);\n    if (snapShotDir.exists()) {\n      throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,\n          \"Snapshot directory already exists: \" + snapShotDir.getAbsolutePath());\n    }\n    if (!snapShotDir.mkdirs()) { // note: TODO reconsider mkdirs vs mkdir\n      throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,\n          \"Unable to create snapshot directory: \" + snapShotDir.getAbsolutePath());\n    }\n  }\n\n","sourceOld":"  void validateCreateSnapshot() throws IOException {\n    snapShotDir = new File(snapDir, directoryName);\n    if (snapShotDir.exists()) {\n      throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,\n          \"Snapshot directory already exists: \" + snapShotDir.getAbsolutePath());\n    }\n    if (!snapShotDir.mkdirs()) {\n      throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,\n          \"Unable to create snapshot directory: \" + snapShotDir.getAbsolutePath());\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a51ab9b1f1b896f06b7ba61672f0fca2a4fce43b","date":1466705968,"type":3,"author":"Varun Thacker","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/SnapShooter#validateCreateSnapshot().mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/SnapShooter#validateCreateSnapshot().mjava","sourceNew":"  public void validateCreateSnapshot() throws IOException {\n    // Note - Removed the current behavior of creating the directory hierarchy.\n    // Do we really need to provide this support?\n    if (!backupRepo.exists(baseSnapDirPath)) {\n      throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,\n          \" Directory does not exist: \" + snapshotDirPath);\n    }\n\n    if (backupRepo.exists(snapshotDirPath)) {\n      throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,\n          \"Snapshot directory already exists: \" + snapshotDirPath);\n    }\n  }\n\n","sourceOld":"  public void validateCreateSnapshot() throws IOException {\n    snapShotDir = new File(snapDir, directoryName);\n    if (snapShotDir.exists()) {\n      throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,\n          \"Snapshot directory already exists: \" + snapShotDir.getAbsolutePath());\n    }\n    if (!snapShotDir.mkdirs()) { // note: TODO reconsider mkdirs vs mkdir\n      throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,\n          \"Unable to create snapshot directory: \" + snapShotDir.getAbsolutePath());\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/handler/SnapShooter#validateCreateSnapshot().mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/SnapShooter#validateCreateSnapshot().mjava","sourceNew":"  public void validateCreateSnapshot() throws IOException {\n    // Note - Removed the current behavior of creating the directory hierarchy.\n    // Do we really need to provide this support?\n    if (!backupRepo.exists(baseSnapDirPath)) {\n      throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,\n          \" Directory does not exist: \" + snapshotDirPath);\n    }\n\n    if (backupRepo.exists(snapshotDirPath)) {\n      throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,\n          \"Snapshot directory already exists: \" + snapshotDirPath);\n    }\n  }\n\n","sourceOld":"  public void validateCreateSnapshot() throws IOException {\n    snapShotDir = new File(snapDir, directoryName);\n    if (snapShotDir.exists()) {\n      throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,\n          \"Snapshot directory already exists: \" + snapShotDir.getAbsolutePath());\n    }\n    if (!snapShotDir.mkdirs()) { // note: TODO reconsider mkdirs vs mkdir\n      throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,\n          \"Unable to create snapshot directory: \" + snapShotDir.getAbsolutePath());\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"c5c99ad021f3da085fcb66220598a8f91dc5e453":["72dc099c69eb723a6ff1fd0aa6def62a565d959c"],"a51ab9b1f1b896f06b7ba61672f0fca2a4fce43b":["1c7a21395bae9e2f61aeb639f47aaca771c426ed"],"1c7a21395bae9e2f61aeb639f47aaca771c426ed":["72dc099c69eb723a6ff1fd0aa6def62a565d959c","c5c99ad021f3da085fcb66220598a8f91dc5e453"],"285cdc737de75b7cc7c284a156b20214deb67bca":["c9bb56e767bb86815d2433c9ee32cb883e0489e5"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a5bb2e653b3f6992c26fe4cc0f3fbdce37b21c3c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"72dc099c69eb723a6ff1fd0aa6def62a565d959c":["5fef3c83faf41df65635bce953c6b00b539608c9"],"5fef3c83faf41df65635bce953c6b00b539608c9":["285cdc737de75b7cc7c284a156b20214deb67bca"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["55b50463286869f584cf849d1587a0fcd54d1dfa","a51ab9b1f1b896f06b7ba61672f0fca2a4fce43b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a51ab9b1f1b896f06b7ba61672f0fca2a4fce43b"],"c9bb56e767bb86815d2433c9ee32cb883e0489e5":["a5bb2e653b3f6992c26fe4cc0f3fbdce37b21c3c"],"55b50463286869f584cf849d1587a0fcd54d1dfa":["72dc099c69eb723a6ff1fd0aa6def62a565d959c","1c7a21395bae9e2f61aeb639f47aaca771c426ed"]},"commit2Childs":{"c5c99ad021f3da085fcb66220598a8f91dc5e453":["1c7a21395bae9e2f61aeb639f47aaca771c426ed"],"a51ab9b1f1b896f06b7ba61672f0fca2a4fce43b":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"1c7a21395bae9e2f61aeb639f47aaca771c426ed":["a51ab9b1f1b896f06b7ba61672f0fca2a4fce43b","55b50463286869f584cf849d1587a0fcd54d1dfa"],"285cdc737de75b7cc7c284a156b20214deb67bca":["5fef3c83faf41df65635bce953c6b00b539608c9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["a5bb2e653b3f6992c26fe4cc0f3fbdce37b21c3c"],"a5bb2e653b3f6992c26fe4cc0f3fbdce37b21c3c":["c9bb56e767bb86815d2433c9ee32cb883e0489e5"],"72dc099c69eb723a6ff1fd0aa6def62a565d959c":["c5c99ad021f3da085fcb66220598a8f91dc5e453","1c7a21395bae9e2f61aeb639f47aaca771c426ed","55b50463286869f584cf849d1587a0fcd54d1dfa"],"5fef3c83faf41df65635bce953c6b00b539608c9":["72dc099c69eb723a6ff1fd0aa6def62a565d959c"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"c9bb56e767bb86815d2433c9ee32cb883e0489e5":["285cdc737de75b7cc7c284a156b20214deb67bca"],"55b50463286869f584cf849d1587a0fcd54d1dfa":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}