{"path":"lucene/core/src/java/org/apache/lucene/search/payloads/MinPayloadFunction#currentScore(int,String,int,int,int,float,float).mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/payloads/MinPayloadFunction#currentScore(int,String,int,int,int,float,float).mjava","pathOld":"lucene/src/java/org/apache/lucene/search/payloads/MinPayloadFunction#currentScore(int,String,int,int,int,float,float).mjava","sourceNew":"  @Override\n\tpublic float currentScore(int docId, String field, int start, int end, int numPayloadsSeen, float currentScore, float currentPayloadScore) {\n    if (numPayloadsSeen == 0) {\n      return currentPayloadScore;\n    } else {\n\t\treturn Math.min(currentPayloadScore, currentScore);\n\t}\n  }\n\n","sourceOld":"  @Override\n\tpublic float currentScore(int docId, String field, int start, int end, int numPayloadsSeen, float currentScore, float currentPayloadScore) {\n    if (numPayloadsSeen == 0) {\n      return currentPayloadScore;\n    } else {\n\t\treturn Math.min(currentPayloadScore, currentScore);\n\t}\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4093b270ba337f9c25a4c0e6cb2ae2c07f697376","date":1347897716,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/payloads/MinPayloadFunction#currentScore(int,String,int,int,int,float,float).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/payloads/MinPayloadFunction#currentScore(int,String,int,int,int,float,float).mjava","sourceNew":"  @Override\n  public float currentScore(int docId, String field, int start, int end, int numPayloadsSeen, float currentScore, float currentPayloadScore) {\n    if (numPayloadsSeen == 0) {\n      return currentPayloadScore;\n    } else {\n      return Math.min(currentPayloadScore, currentScore);\n    }\n  }\n\n","sourceOld":"  @Override\n\tpublic float currentScore(int docId, String field, int start, int end, int numPayloadsSeen, float currentScore, float currentPayloadScore) {\n    if (numPayloadsSeen == 0) {\n      return currentPayloadScore;\n    } else {\n\t\treturn Math.min(currentPayloadScore, currentScore);\n\t}\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"eeab49258a6aca6c7e96aaf189f1794fe6ddebe4","date":1442407411,"type":5,"author":"Alan Woodward","isMerge":false,"pathNew":"lucene/queries/src/java/org/apache/lucene/queries/payloads/MinPayloadFunction#currentScore(int,String,int,int,int,float,float).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/payloads/MinPayloadFunction#currentScore(int,String,int,int,int,float,float).mjava","sourceNew":"  @Override\n  public float currentScore(int docId, String field, int start, int end, int numPayloadsSeen, float currentScore, float currentPayloadScore) {\n    if (numPayloadsSeen == 0) {\n      return currentPayloadScore;\n    } else {\n      return Math.min(currentPayloadScore, currentScore);\n    }\n  }\n\n","sourceOld":"  @Override\n  public float currentScore(int docId, String field, int start, int end, int numPayloadsSeen, float currentScore, float currentPayloadScore) {\n    if (numPayloadsSeen == 0) {\n      return currentPayloadScore;\n    } else {\n      return Math.min(currentPayloadScore, currentScore);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"eeab49258a6aca6c7e96aaf189f1794fe6ddebe4":["4093b270ba337f9c25a4c0e6cb2ae2c07f697376"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["eeab49258a6aca6c7e96aaf189f1794fe6ddebe4"],"4093b270ba337f9c25a4c0e6cb2ae2c07f697376":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"]},"commit2Childs":{"eeab49258a6aca6c7e96aaf189f1794fe6ddebe4":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["4093b270ba337f9c25a4c0e6cb2ae2c07f697376"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"4093b270ba337f9c25a4c0e6cb2ae2c07f697376":["eeab49258a6aca6c7e96aaf189f1794fe6ddebe4"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}