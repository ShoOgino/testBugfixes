{"path":"solr/core/src/test/org/apache/solr/cloud/LeaderElectionTest#setUp().mjava","commits":[{"id":"2c007e7c4cf8c55bc2a5884e315123afaaeec87f","date":1327520966,"type":0,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/LeaderElectionTest#setUp().mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    String zkDir = dataDir.getAbsolutePath() + File.separator\n        + \"zookeeper/server1/data\";\n    \n    server = new ZkTestServer(zkDir);\n    server.setTheTickTime(1000);\n    server.run();\n    AbstractZkTestCase.tryCleanSolrZkNode(server.getZkHost());\n    AbstractZkTestCase.makeSolrZkNode(server.getZkHost());\n    zkClient = new SolrZkClient(server.getZkAddress(), TIMEOUT);\n    zkStateReader = new ZkStateReader(zkClient);\n    seqToThread = Collections.synchronizedMap(new HashMap<Integer,Thread>());\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["bb222a3f9d9421d5c95afce73013fbd8de07ea1f","1e9ce820cd3ed9efb959c181daaafd22f0c70143"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"a3c68e20c73359a10cf3eb4a35c9fa7ab1f3c30d","date":1327523564,"type":0,"author":"Robert Muir","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/cloud/LeaderElectionTest#setUp().mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    String zkDir = dataDir.getAbsolutePath() + File.separator\n        + \"zookeeper/server1/data\";\n    \n    server = new ZkTestServer(zkDir);\n    server.setTheTickTime(1000);\n    server.run();\n    AbstractZkTestCase.tryCleanSolrZkNode(server.getZkHost());\n    AbstractZkTestCase.makeSolrZkNode(server.getZkHost());\n    zkClient = new SolrZkClient(server.getZkAddress(), TIMEOUT);\n    zkStateReader = new ZkStateReader(zkClient);\n    seqToThread = Collections.synchronizedMap(new HashMap<Integer,Thread>());\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0d22ac6a4146774c1bc8400160fc0b6150294e92","date":1327528604,"type":0,"author":"Uwe Schindler","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/cloud/LeaderElectionTest#setUp().mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    String zkDir = dataDir.getAbsolutePath() + File.separator\n        + \"zookeeper/server1/data\";\n    \n    server = new ZkTestServer(zkDir);\n    server.setTheTickTime(1000);\n    server.run();\n    AbstractZkTestCase.tryCleanSolrZkNode(server.getZkHost());\n    AbstractZkTestCase.makeSolrZkNode(server.getZkHost());\n    zkClient = new SolrZkClient(server.getZkAddress(), TIMEOUT);\n    zkStateReader = new ZkStateReader(zkClient);\n    seqToThread = Collections.synchronizedMap(new HashMap<Integer,Thread>());\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bb1f22cfa77230b5f05b7784feae5367f6bbb488","date":1395968145,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/LeaderElectionTest#setUp().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/LeaderElectionTest#setUp().mjava","sourceNew":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    String zkDir = createTempDir().getAbsolutePath() + File.separator\n        + \"zookeeper/server1/data\";\n    \n    server = new ZkTestServer(zkDir);\n    server.setTheTickTime(1000);\n    server.run();\n    AbstractZkTestCase.tryCleanSolrZkNode(server.getZkHost());\n    AbstractZkTestCase.makeSolrZkNode(server.getZkHost());\n    zkClient = new SolrZkClient(server.getZkAddress(), TIMEOUT);\n    zkStateReader = new ZkStateReader(zkClient);\n    seqToThread = Collections.synchronizedMap(new HashMap<Integer,Thread>());\n  }\n\n","sourceOld":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    String zkDir = dataDir.getAbsolutePath() + File.separator\n        + \"zookeeper/server1/data\";\n    \n    server = new ZkTestServer(zkDir);\n    server.setTheTickTime(1000);\n    server.run();\n    AbstractZkTestCase.tryCleanSolrZkNode(server.getZkHost());\n    AbstractZkTestCase.makeSolrZkNode(server.getZkHost());\n    zkClient = new SolrZkClient(server.getZkAddress(), TIMEOUT);\n    zkStateReader = new ZkStateReader(zkClient);\n    seqToThread = Collections.synchronizedMap(new HashMap<Integer,Thread>());\n  }\n\n","bugFix":null,"bugIntro":["1e9ce820cd3ed9efb959c181daaafd22f0c70143"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"1e9ce820cd3ed9efb959c181daaafd22f0c70143","date":1396201051,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/LeaderElectionTest#setUp().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/LeaderElectionTest#setUp().mjava","sourceNew":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    String zkDir = createTempDir(\"zkData\").getAbsolutePath();;\n    \n    server = new ZkTestServer(zkDir);\n    server.setTheTickTime(1000);\n    server.run();\n    AbstractZkTestCase.tryCleanSolrZkNode(server.getZkHost());\n    AbstractZkTestCase.makeSolrZkNode(server.getZkHost());\n    zkClient = new SolrZkClient(server.getZkAddress(), TIMEOUT);\n    zkStateReader = new ZkStateReader(zkClient);\n    seqToThread = Collections.synchronizedMap(new HashMap<Integer,Thread>());\n  }\n\n","sourceOld":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    String zkDir = createTempDir().getAbsolutePath() + File.separator\n        + \"zookeeper/server1/data\";\n    \n    server = new ZkTestServer(zkDir);\n    server.setTheTickTime(1000);\n    server.run();\n    AbstractZkTestCase.tryCleanSolrZkNode(server.getZkHost());\n    AbstractZkTestCase.makeSolrZkNode(server.getZkHost());\n    zkClient = new SolrZkClient(server.getZkAddress(), TIMEOUT);\n    zkStateReader = new ZkStateReader(zkClient);\n    seqToThread = Collections.synchronizedMap(new HashMap<Integer,Thread>());\n  }\n\n","bugFix":["2c007e7c4cf8c55bc2a5884e315123afaaeec87f","bb1f22cfa77230b5f05b7784feae5367f6bbb488"],"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"2a0f5bb79c600763ffe7b8141df59a3169d31e48","date":1396689440,"type":3,"author":"Dawid Weiss","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/cloud/LeaderElectionTest#setUp().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/LeaderElectionTest#setUp().mjava","sourceNew":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    String zkDir = createTempDir(\"zkData\").getAbsolutePath();;\n    \n    server = new ZkTestServer(zkDir);\n    server.setTheTickTime(1000);\n    server.run();\n    AbstractZkTestCase.tryCleanSolrZkNode(server.getZkHost());\n    AbstractZkTestCase.makeSolrZkNode(server.getZkHost());\n    zkClient = new SolrZkClient(server.getZkAddress(), TIMEOUT);\n    zkStateReader = new ZkStateReader(zkClient);\n    seqToThread = Collections.synchronizedMap(new HashMap<Integer,Thread>());\n  }\n\n","sourceOld":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    String zkDir = dataDir.getAbsolutePath() + File.separator\n        + \"zookeeper/server1/data\";\n    \n    server = new ZkTestServer(zkDir);\n    server.setTheTickTime(1000);\n    server.run();\n    AbstractZkTestCase.tryCleanSolrZkNode(server.getZkHost());\n    AbstractZkTestCase.makeSolrZkNode(server.getZkHost());\n    zkClient = new SolrZkClient(server.getZkAddress(), TIMEOUT);\n    zkStateReader = new ZkStateReader(zkClient);\n    seqToThread = Collections.synchronizedMap(new HashMap<Integer,Thread>());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"f4abec28b874149a7223e32cc7a01704c27790de","date":1410644789,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/LeaderElectionTest#setUp().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/LeaderElectionTest#setUp().mjava","sourceNew":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    String zkDir = createTempDir(\"zkData\").toFile().getAbsolutePath();;\n    \n    server = new ZkTestServer(zkDir);\n    server.setTheTickTime(1000);\n    server.run();\n    AbstractZkTestCase.tryCleanSolrZkNode(server.getZkHost());\n    AbstractZkTestCase.makeSolrZkNode(server.getZkHost());\n    zkClient = new SolrZkClient(server.getZkAddress(), TIMEOUT);\n    zkStateReader = new ZkStateReader(zkClient);\n    seqToThread = Collections.synchronizedMap(new HashMap<Integer,Thread>());\n  }\n\n","sourceOld":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    String zkDir = createTempDir(\"zkData\").getAbsolutePath();;\n    \n    server = new ZkTestServer(zkDir);\n    server.setTheTickTime(1000);\n    server.run();\n    AbstractZkTestCase.tryCleanSolrZkNode(server.getZkHost());\n    AbstractZkTestCase.makeSolrZkNode(server.getZkHost());\n    zkClient = new SolrZkClient(server.getZkAddress(), TIMEOUT);\n    zkStateReader = new ZkStateReader(zkClient);\n    seqToThread = Collections.synchronizedMap(new HashMap<Integer,Thread>());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"f291d2d430e8149d24fdd06b0bcdab0941ec9144","date":1481216635,"type":3,"author":"markrmiller","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/LeaderElectionTest#setUp().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/LeaderElectionTest#setUp().mjava","sourceNew":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    String zkDir = createTempDir(\"zkData\").toFile().getAbsolutePath();;\n    \n    server = new ZkTestServer(zkDir);\n    server.setTheTickTime(1000);\n    server.run();\n    AbstractZkTestCase.tryCleanSolrZkNode(server.getZkHost());\n    AbstractZkTestCase.makeSolrZkNode(server.getZkHost());\n    zkClient = new SolrZkClient(server.getZkAddress(), TIMEOUT);\n    zkStateReader = new ZkStateReader(zkClient);\n    seqToThread = Collections.synchronizedMap(new HashMap<Integer,Thread>());\n    zkClient.makePath(\"/collections/collection1\", true);\n    zkClient.makePath(\"/collections/collection2\", true);\n  }\n\n","sourceOld":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    String zkDir = createTempDir(\"zkData\").toFile().getAbsolutePath();;\n    \n    server = new ZkTestServer(zkDir);\n    server.setTheTickTime(1000);\n    server.run();\n    AbstractZkTestCase.tryCleanSolrZkNode(server.getZkHost());\n    AbstractZkTestCase.makeSolrZkNode(server.getZkHost());\n    zkClient = new SolrZkClient(server.getZkAddress(), TIMEOUT);\n    zkStateReader = new ZkStateReader(zkClient);\n    seqToThread = Collections.synchronizedMap(new HashMap<Integer,Thread>());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"9856095f7afb5a607bf5e65077615ed91273508c","date":1481837697,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/cloud/LeaderElectionTest#setUp().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/LeaderElectionTest#setUp().mjava","sourceNew":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    String zkDir = createTempDir(\"zkData\").toFile().getAbsolutePath();;\n    \n    server = new ZkTestServer(zkDir);\n    server.setTheTickTime(1000);\n    server.run();\n    AbstractZkTestCase.tryCleanSolrZkNode(server.getZkHost());\n    AbstractZkTestCase.makeSolrZkNode(server.getZkHost());\n    zkClient = new SolrZkClient(server.getZkAddress(), TIMEOUT);\n    zkStateReader = new ZkStateReader(zkClient);\n    seqToThread = Collections.synchronizedMap(new HashMap<Integer,Thread>());\n    zkClient.makePath(\"/collections/collection1\", true);\n    zkClient.makePath(\"/collections/collection2\", true);\n  }\n\n","sourceOld":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    String zkDir = createTempDir(\"zkData\").toFile().getAbsolutePath();;\n    \n    server = new ZkTestServer(zkDir);\n    server.setTheTickTime(1000);\n    server.run();\n    AbstractZkTestCase.tryCleanSolrZkNode(server.getZkHost());\n    AbstractZkTestCase.makeSolrZkNode(server.getZkHost());\n    zkClient = new SolrZkClient(server.getZkAddress(), TIMEOUT);\n    zkStateReader = new ZkStateReader(zkClient);\n    seqToThread = Collections.synchronizedMap(new HashMap<Integer,Thread>());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bb222a3f9d9421d5c95afce73013fbd8de07ea1f","date":1543514331,"type":3,"author":"markrmiller","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/LeaderElectionTest#setUp().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/LeaderElectionTest#setUp().mjava","sourceNew":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    String zkDir = createTempDir(\"zkData\").toFile().getAbsolutePath();;\n    \n    server = new ZkTestServer(zkDir);\n    server.setTheTickTime(1000);\n    server.run();\n\n    zkClient = new SolrZkClient(server.getZkAddress(), TIMEOUT);\n    zkStateReader = new ZkStateReader(zkClient);\n    seqToThread = Collections.synchronizedMap(new HashMap<Integer,Thread>());\n    zkClient.makePath(\"/collections/collection1\", true);\n    zkClient.makePath(\"/collections/collection2\", true);\n  }\n\n","sourceOld":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    String zkDir = createTempDir(\"zkData\").toFile().getAbsolutePath();;\n    \n    server = new ZkTestServer(zkDir);\n    server.setTheTickTime(1000);\n    server.run();\n    AbstractZkTestCase.tryCleanSolrZkNode(server.getZkHost());\n    AbstractZkTestCase.makeSolrZkNode(server.getZkHost());\n    zkClient = new SolrZkClient(server.getZkAddress(), TIMEOUT);\n    zkStateReader = new ZkStateReader(zkClient);\n    seqToThread = Collections.synchronizedMap(new HashMap<Integer,Thread>());\n    zkClient.makePath(\"/collections/collection1\", true);\n    zkClient.makePath(\"/collections/collection2\", true);\n  }\n\n","bugFix":["2c007e7c4cf8c55bc2a5884e315123afaaeec87f"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0db83f1bb855a4ac824c9a2a8e1ee9b29a039c15","date":1554259533,"type":3,"author":"Gus Heck","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/LeaderElectionTest#setUp().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/LeaderElectionTest#setUp().mjava","sourceNew":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    String zkDir = createTempDir(\"zkData\").toFile().getAbsolutePath();;\n\n    server = new ZkTestServer(zkDir);\n    server.setTheTickTime(1000);\n    server.run();\n\n    zkClient = new SolrZkClient(server.getZkAddress(), TIMEOUT);\n    zkStateReader = new ZkStateReader(zkClient);\n    seqToThread = Collections.synchronizedMap(new HashMap<Integer,Thread>());\n    zkClient.makePath(\"/collections/collection1\", true);\n    zkClient.makePath(\"/collections/collection2\", true);\n  }\n\n","sourceOld":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    String zkDir = createTempDir(\"zkData\").toFile().getAbsolutePath();;\n    \n    server = new ZkTestServer(zkDir);\n    server.setTheTickTime(1000);\n    server.run();\n\n    zkClient = new SolrZkClient(server.getZkAddress(), TIMEOUT);\n    zkStateReader = new ZkStateReader(zkClient);\n    seqToThread = Collections.synchronizedMap(new HashMap<Integer,Thread>());\n    zkClient.makePath(\"/collections/collection1\", true);\n    zkClient.makePath(\"/collections/collection2\", true);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1778938cb7fb298e6e07a43e2d5acaf552d61518","date":1559609435,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/LeaderElectionTest#setUp().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/LeaderElectionTest#setUp().mjava","sourceNew":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    Path zkDir = createTempDir(\"zkData\");\n\n    server = new ZkTestServer(zkDir);\n    server.setTheTickTime(1000);\n    server.run();\n\n    zkClient = new SolrZkClient(server.getZkAddress(), TIMEOUT);\n    zkStateReader = new ZkStateReader(zkClient);\n    seqToThread = Collections.synchronizedMap(new HashMap<Integer,Thread>());\n    zkClient.makePath(\"/collections/collection1\", true);\n    zkClient.makePath(\"/collections/collection2\", true);\n  }\n\n","sourceOld":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    String zkDir = createTempDir(\"zkData\").toFile().getAbsolutePath();;\n\n    server = new ZkTestServer(zkDir);\n    server.setTheTickTime(1000);\n    server.run();\n\n    zkClient = new SolrZkClient(server.getZkAddress(), TIMEOUT);\n    zkStateReader = new ZkStateReader(zkClient);\n    seqToThread = Collections.synchronizedMap(new HashMap<Integer,Thread>());\n    zkClient.makePath(\"/collections/collection1\", true);\n    zkClient.makePath(\"/collections/collection2\", true);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"bb1f22cfa77230b5f05b7784feae5367f6bbb488":["2c007e7c4cf8c55bc2a5884e315123afaaeec87f"],"2a0f5bb79c600763ffe7b8141df59a3169d31e48":["2c007e7c4cf8c55bc2a5884e315123afaaeec87f","1e9ce820cd3ed9efb959c181daaafd22f0c70143"],"bb222a3f9d9421d5c95afce73013fbd8de07ea1f":["f291d2d430e8149d24fdd06b0bcdab0941ec9144"],"a3c68e20c73359a10cf3eb4a35c9fa7ab1f3c30d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","2c007e7c4cf8c55bc2a5884e315123afaaeec87f"],"f4abec28b874149a7223e32cc7a01704c27790de":["2a0f5bb79c600763ffe7b8141df59a3169d31e48"],"0d22ac6a4146774c1bc8400160fc0b6150294e92":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","2c007e7c4cf8c55bc2a5884e315123afaaeec87f"],"f291d2d430e8149d24fdd06b0bcdab0941ec9144":["f4abec28b874149a7223e32cc7a01704c27790de"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"2c007e7c4cf8c55bc2a5884e315123afaaeec87f":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"9856095f7afb5a607bf5e65077615ed91273508c":["f4abec28b874149a7223e32cc7a01704c27790de","f291d2d430e8149d24fdd06b0bcdab0941ec9144"],"0db83f1bb855a4ac824c9a2a8e1ee9b29a039c15":["bb222a3f9d9421d5c95afce73013fbd8de07ea1f"],"1e9ce820cd3ed9efb959c181daaafd22f0c70143":["bb1f22cfa77230b5f05b7784feae5367f6bbb488"],"1778938cb7fb298e6e07a43e2d5acaf552d61518":["0db83f1bb855a4ac824c9a2a8e1ee9b29a039c15"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["1778938cb7fb298e6e07a43e2d5acaf552d61518"]},"commit2Childs":{"bb1f22cfa77230b5f05b7784feae5367f6bbb488":["1e9ce820cd3ed9efb959c181daaafd22f0c70143"],"2a0f5bb79c600763ffe7b8141df59a3169d31e48":["f4abec28b874149a7223e32cc7a01704c27790de"],"bb222a3f9d9421d5c95afce73013fbd8de07ea1f":["0db83f1bb855a4ac824c9a2a8e1ee9b29a039c15"],"a3c68e20c73359a10cf3eb4a35c9fa7ab1f3c30d":[],"f4abec28b874149a7223e32cc7a01704c27790de":["f291d2d430e8149d24fdd06b0bcdab0941ec9144","9856095f7afb5a607bf5e65077615ed91273508c"],"0d22ac6a4146774c1bc8400160fc0b6150294e92":[],"f291d2d430e8149d24fdd06b0bcdab0941ec9144":["bb222a3f9d9421d5c95afce73013fbd8de07ea1f","9856095f7afb5a607bf5e65077615ed91273508c"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["a3c68e20c73359a10cf3eb4a35c9fa7ab1f3c30d","0d22ac6a4146774c1bc8400160fc0b6150294e92","2c007e7c4cf8c55bc2a5884e315123afaaeec87f"],"2c007e7c4cf8c55bc2a5884e315123afaaeec87f":["bb1f22cfa77230b5f05b7784feae5367f6bbb488","2a0f5bb79c600763ffe7b8141df59a3169d31e48","a3c68e20c73359a10cf3eb4a35c9fa7ab1f3c30d","0d22ac6a4146774c1bc8400160fc0b6150294e92"],"9856095f7afb5a607bf5e65077615ed91273508c":[],"1e9ce820cd3ed9efb959c181daaafd22f0c70143":["2a0f5bb79c600763ffe7b8141df59a3169d31e48"],"0db83f1bb855a4ac824c9a2a8e1ee9b29a039c15":["1778938cb7fb298e6e07a43e2d5acaf552d61518"],"1778938cb7fb298e6e07a43e2d5acaf552d61518":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a3c68e20c73359a10cf3eb4a35c9fa7ab1f3c30d","0d22ac6a4146774c1bc8400160fc0b6150294e92","9856095f7afb5a607bf5e65077615ed91273508c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}