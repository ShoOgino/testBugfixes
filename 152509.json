{"path":"lucene/facet/src/java/org/apache/lucene/facet/simple/FacetIndexWriter#addDocument(IndexDocument).mjava","commits":[{"id":"519ac3b8f2711b5bfeb1c90c77bb007032270a41","date":1384456090,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/simple/FacetIndexWriter#addDocument(IndexDocument).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public void addDocument(final IndexDocument doc) throws IOException {\n\n    // Find all FacetFields, collated by the actual field:\n    Map<String,List<FacetField>> byField = new HashMap<String,List<FacetField>>();\n\n    // ... and also all SortedSetDocValuesFacetFields:\n    Map<String,List<SortedSetDocValuesFacetField>> dvByField = new HashMap<String,List<SortedSetDocValuesFacetField>>();\n\n    for(IndexableField field : doc.indexableFields()) {\n      if (field.fieldType() == FacetField.TYPE) {\n        FacetField facetField = (FacetField) field;\n        FacetsConfig.DimConfig dimConfig = facetsConfig.getDimConfig(field.name());\n        String indexedFieldName = dimConfig.indexedFieldName;\n        List<FacetField> fields = byField.get(indexedFieldName);\n        if (fields == null) {\n          fields = new ArrayList<FacetField>();\n          byField.put(indexedFieldName, fields);\n        }\n        fields.add(facetField);\n      }\n\n      if (field.fieldType() == SortedSetDocValuesFacetField.TYPE) {\n        SortedSetDocValuesFacetField facetField = (SortedSetDocValuesFacetField) field;\n        FacetsConfig.DimConfig dimConfig = facetsConfig.getDimConfig(field.name());\n        String indexedFieldName = dimConfig.indexedFieldName;\n        List<SortedSetDocValuesFacetField> fields = dvByField.get(indexedFieldName);\n        if (fields == null) {\n          fields = new ArrayList<SortedSetDocValuesFacetField>();\n          dvByField.put(indexedFieldName, fields);\n        }\n        fields.add(facetField);\n      }\n    }\n\n    List<Field> addedIndexedFields = new ArrayList<Field>();\n    List<Field> addedStoredFields = new ArrayList<Field>();\n\n    processFacetFields(byField, addedIndexedFields, addedStoredFields);\n    processSSDVFacetFields(dvByField, addedIndexedFields, addedStoredFields);\n\n    //System.out.println(\"add stored: \" + addedStoredFields);\n\n    final List<IndexableField> allIndexedFields = new ArrayList<IndexableField>();\n    for(IndexableField field : doc.indexableFields()) {\n      IndexableFieldType ft = field.fieldType();\n      if (ft != FacetField.TYPE && ft != SortedSetDocValuesFacetField.TYPE) {\n        allIndexedFields.add(field);\n      }\n    }\n    allIndexedFields.addAll(addedIndexedFields);\n\n    final List<StorableField> allStoredFields = new ArrayList<StorableField>();\n    for(StorableField field : doc.storableFields()) {\n      allStoredFields.add(field);\n    }\n    allStoredFields.addAll(addedStoredFields);\n\n    //System.out.println(\"all indexed: \" + allIndexedFields);\n    //System.out.println(\"all stored: \" + allStoredFields);\n\n    super.addDocument(new IndexDocument() {\n        @Override\n        public Iterable<IndexableField> indexableFields() {\n          return allIndexedFields;\n        }\n\n        @Override\n        public Iterable<StorableField> storableFields() {\n          return allStoredFields;\n        }\n      });\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a1e7272ef767c1304198a2cb2000cf54ea49f808","date":1384786433,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/simple/FacetIndexWriter#addDocument(IndexDocument).mjava","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/simple/FacetIndexWriter#addDocument(IndexDocument).mjava","sourceNew":"  @Override\n  public void addDocument(final IndexDocument doc) throws IOException {\n\n    // Find all FacetFields, collated by the actual field:\n    Map<String,List<FacetField>> byField = new HashMap<String,List<FacetField>>();\n\n    // ... and also all SortedSetDocValuesFacetFields:\n    Map<String,List<SortedSetDocValuesFacetField>> dvByField = new HashMap<String,List<SortedSetDocValuesFacetField>>();\n\n    // ... and also all AssociationFacetFields\n    Map<String,List<AssociationFacetField>> assocByField = new HashMap<String,List<AssociationFacetField>>();\n\n    for(IndexableField field : doc.indexableFields()) {\n      if (field.fieldType() == FacetField.TYPE) {\n        FacetField facetField = (FacetField) field;\n        FacetsConfig.DimConfig dimConfig = facetsConfig.getDimConfig(field.name());\n        String indexedFieldName = dimConfig.indexedFieldName;\n        List<FacetField> fields = byField.get(indexedFieldName);\n        if (fields == null) {\n          fields = new ArrayList<FacetField>();\n          byField.put(indexedFieldName, fields);\n        }\n        fields.add(facetField);\n      }\n\n      if (field.fieldType() == SortedSetDocValuesFacetField.TYPE) {\n        SortedSetDocValuesFacetField facetField = (SortedSetDocValuesFacetField) field;\n        FacetsConfig.DimConfig dimConfig = facetsConfig.getDimConfig(field.name());\n        String indexedFieldName = dimConfig.indexedFieldName;\n        List<SortedSetDocValuesFacetField> fields = dvByField.get(indexedFieldName);\n        if (fields == null) {\n          fields = new ArrayList<SortedSetDocValuesFacetField>();\n          dvByField.put(indexedFieldName, fields);\n        }\n        fields.add(facetField);\n      }\n\n      if (field.fieldType() == AssociationFacetField.TYPE) {\n        AssociationFacetField facetField = (AssociationFacetField) field;\n        FacetsConfig.DimConfig dimConfig = facetsConfig.getDimConfig(field.name());\n\n        // nocommit how to use a different default name for assocs?\n        String indexedFieldName = dimConfig.indexedFieldName;\n        List<AssociationFacetField> fields = assocByField.get(indexedFieldName);\n        if (fields == null) {\n          fields = new ArrayList<AssociationFacetField>();\n          assocByField.put(indexedFieldName, fields);\n        }\n        fields.add(facetField);\n      }\n    }\n\n    List<Field> addedIndexedFields = new ArrayList<Field>();\n    List<Field> addedStoredFields = new ArrayList<Field>();\n\n    processFacetFields(byField, addedIndexedFields, addedStoredFields);\n    processSSDVFacetFields(dvByField, addedIndexedFields, addedStoredFields);\n    processAssocFacetFields(assocByField, addedIndexedFields, addedStoredFields);\n\n    //System.out.println(\"add stored: \" + addedStoredFields);\n\n    final List<IndexableField> allIndexedFields = new ArrayList<IndexableField>();\n    for(IndexableField field : doc.indexableFields()) {\n      IndexableFieldType ft = field.fieldType();\n      if (ft != FacetField.TYPE && ft != SortedSetDocValuesFacetField.TYPE && ft != AssociationFacetField.TYPE) {\n        allIndexedFields.add(field);\n      }\n    }\n    allIndexedFields.addAll(addedIndexedFields);\n\n    final List<StorableField> allStoredFields = new ArrayList<StorableField>();\n    for(StorableField field : doc.storableFields()) {\n      allStoredFields.add(field);\n    }\n    allStoredFields.addAll(addedStoredFields);\n\n    //System.out.println(\"all indexed: \" + allIndexedFields);\n    //System.out.println(\"all stored: \" + allStoredFields);\n\n    super.addDocument(new IndexDocument() {\n        @Override\n        public Iterable<IndexableField> indexableFields() {\n          return allIndexedFields;\n        }\n\n        @Override\n        public Iterable<StorableField> storableFields() {\n          return allStoredFields;\n        }\n      });\n  }\n\n","sourceOld":"  @Override\n  public void addDocument(final IndexDocument doc) throws IOException {\n\n    // Find all FacetFields, collated by the actual field:\n    Map<String,List<FacetField>> byField = new HashMap<String,List<FacetField>>();\n\n    // ... and also all SortedSetDocValuesFacetFields:\n    Map<String,List<SortedSetDocValuesFacetField>> dvByField = new HashMap<String,List<SortedSetDocValuesFacetField>>();\n\n    for(IndexableField field : doc.indexableFields()) {\n      if (field.fieldType() == FacetField.TYPE) {\n        FacetField facetField = (FacetField) field;\n        FacetsConfig.DimConfig dimConfig = facetsConfig.getDimConfig(field.name());\n        String indexedFieldName = dimConfig.indexedFieldName;\n        List<FacetField> fields = byField.get(indexedFieldName);\n        if (fields == null) {\n          fields = new ArrayList<FacetField>();\n          byField.put(indexedFieldName, fields);\n        }\n        fields.add(facetField);\n      }\n\n      if (field.fieldType() == SortedSetDocValuesFacetField.TYPE) {\n        SortedSetDocValuesFacetField facetField = (SortedSetDocValuesFacetField) field;\n        FacetsConfig.DimConfig dimConfig = facetsConfig.getDimConfig(field.name());\n        String indexedFieldName = dimConfig.indexedFieldName;\n        List<SortedSetDocValuesFacetField> fields = dvByField.get(indexedFieldName);\n        if (fields == null) {\n          fields = new ArrayList<SortedSetDocValuesFacetField>();\n          dvByField.put(indexedFieldName, fields);\n        }\n        fields.add(facetField);\n      }\n    }\n\n    List<Field> addedIndexedFields = new ArrayList<Field>();\n    List<Field> addedStoredFields = new ArrayList<Field>();\n\n    processFacetFields(byField, addedIndexedFields, addedStoredFields);\n    processSSDVFacetFields(dvByField, addedIndexedFields, addedStoredFields);\n\n    //System.out.println(\"add stored: \" + addedStoredFields);\n\n    final List<IndexableField> allIndexedFields = new ArrayList<IndexableField>();\n    for(IndexableField field : doc.indexableFields()) {\n      IndexableFieldType ft = field.fieldType();\n      if (ft != FacetField.TYPE && ft != SortedSetDocValuesFacetField.TYPE) {\n        allIndexedFields.add(field);\n      }\n    }\n    allIndexedFields.addAll(addedIndexedFields);\n\n    final List<StorableField> allStoredFields = new ArrayList<StorableField>();\n    for(StorableField field : doc.storableFields()) {\n      allStoredFields.add(field);\n    }\n    allStoredFields.addAll(addedStoredFields);\n\n    //System.out.println(\"all indexed: \" + allIndexedFields);\n    //System.out.println(\"all stored: \" + allStoredFields);\n\n    super.addDocument(new IndexDocument() {\n        @Override\n        public Iterable<IndexableField> indexableFields() {\n          return allIndexedFields;\n        }\n\n        @Override\n        public Iterable<StorableField> storableFields() {\n          return allStoredFields;\n        }\n      });\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"18edd2e3f5560087a37442fa424cbbed7c295ebc","date":1384813900,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/simple/FacetIndexWriter#addDocument(IndexDocument).mjava","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/simple/FacetIndexWriter#addDocument(IndexDocument).mjava","sourceNew":"  @Override\n  public void addDocument(final IndexDocument doc) throws IOException {\n\n    // Find all FacetFields, collated by the actual field:\n    Map<String,List<FacetField>> byField = new HashMap<String,List<FacetField>>();\n\n    // ... and also all SortedSetDocValuesFacetFields:\n    Map<String,List<SortedSetDocValuesFacetField>> dvByField = new HashMap<String,List<SortedSetDocValuesFacetField>>();\n\n    // ... and also all AssociationFacetFields\n    Map<String,List<AssociationFacetField>> assocByField = new HashMap<String,List<AssociationFacetField>>();\n\n    for(IndexableField field : doc.indexableFields()) {\n      if (field.fieldType() == FacetField.TYPE) {\n        FacetField facetField = (FacetField) field;\n        FacetsConfig.DimConfig dimConfig = config.getDimConfig(facetField.dim);\n        String indexFieldName = dimConfig.indexFieldName;\n        List<FacetField> fields = byField.get(indexFieldName);\n        if (fields == null) {\n          fields = new ArrayList<FacetField>();\n          byField.put(indexFieldName, fields);\n        }\n        fields.add(facetField);\n      }\n\n      if (field.fieldType() == SortedSetDocValuesFacetField.TYPE) {\n        SortedSetDocValuesFacetField facetField = (SortedSetDocValuesFacetField) field;\n        FacetsConfig.DimConfig dimConfig = config.getDimConfig(facetField.dim);\n        String indexFieldName = dimConfig.indexFieldName;\n        List<SortedSetDocValuesFacetField> fields = dvByField.get(indexFieldName);\n        if (fields == null) {\n          fields = new ArrayList<SortedSetDocValuesFacetField>();\n          dvByField.put(indexFieldName, fields);\n        }\n        fields.add(facetField);\n      }\n\n      if (field.fieldType() == AssociationFacetField.TYPE) {\n        AssociationFacetField facetField = (AssociationFacetField) field;\n        FacetsConfig.DimConfig dimConfig = config.getDimConfig(facetField.dim);\n\n        // nocommit how to use a different default name for assocs?\n        String indexFieldName = dimConfig.indexFieldName;\n        List<AssociationFacetField> fields = assocByField.get(indexFieldName);\n        if (fields == null) {\n          fields = new ArrayList<AssociationFacetField>();\n          assocByField.put(indexFieldName, fields);\n        }\n        fields.add(facetField);\n      }\n    }\n\n    List<Field> addedIndexedFields = new ArrayList<Field>();\n    List<Field> addedStoredFields = new ArrayList<Field>();\n\n    processFacetFields(byField, addedIndexedFields, addedStoredFields);\n    processSSDVFacetFields(dvByField, addedIndexedFields, addedStoredFields);\n    processAssocFacetFields(assocByField, addedIndexedFields, addedStoredFields);\n\n    //System.out.println(\"add stored: \" + addedStoredFields);\n\n    final List<IndexableField> allIndexedFields = new ArrayList<IndexableField>();\n    for(IndexableField field : doc.indexableFields()) {\n      IndexableFieldType ft = field.fieldType();\n      if (ft != FacetField.TYPE && ft != SortedSetDocValuesFacetField.TYPE && ft != AssociationFacetField.TYPE) {\n        allIndexedFields.add(field);\n      }\n    }\n    allIndexedFields.addAll(addedIndexedFields);\n\n    final List<StorableField> allStoredFields = new ArrayList<StorableField>();\n    for(StorableField field : doc.storableFields()) {\n      allStoredFields.add(field);\n    }\n    allStoredFields.addAll(addedStoredFields);\n\n    //System.out.println(\"all indexed: \" + allIndexedFields);\n    //System.out.println(\"all stored: \" + allStoredFields);\n\n    super.addDocument(new IndexDocument() {\n        @Override\n        public Iterable<IndexableField> indexableFields() {\n          return allIndexedFields;\n        }\n\n        @Override\n        public Iterable<StorableField> storableFields() {\n          return allStoredFields;\n        }\n      });\n  }\n\n","sourceOld":"  @Override\n  public void addDocument(final IndexDocument doc) throws IOException {\n\n    // Find all FacetFields, collated by the actual field:\n    Map<String,List<FacetField>> byField = new HashMap<String,List<FacetField>>();\n\n    // ... and also all SortedSetDocValuesFacetFields:\n    Map<String,List<SortedSetDocValuesFacetField>> dvByField = new HashMap<String,List<SortedSetDocValuesFacetField>>();\n\n    // ... and also all AssociationFacetFields\n    Map<String,List<AssociationFacetField>> assocByField = new HashMap<String,List<AssociationFacetField>>();\n\n    for(IndexableField field : doc.indexableFields()) {\n      if (field.fieldType() == FacetField.TYPE) {\n        FacetField facetField = (FacetField) field;\n        FacetsConfig.DimConfig dimConfig = facetsConfig.getDimConfig(field.name());\n        String indexedFieldName = dimConfig.indexedFieldName;\n        List<FacetField> fields = byField.get(indexedFieldName);\n        if (fields == null) {\n          fields = new ArrayList<FacetField>();\n          byField.put(indexedFieldName, fields);\n        }\n        fields.add(facetField);\n      }\n\n      if (field.fieldType() == SortedSetDocValuesFacetField.TYPE) {\n        SortedSetDocValuesFacetField facetField = (SortedSetDocValuesFacetField) field;\n        FacetsConfig.DimConfig dimConfig = facetsConfig.getDimConfig(field.name());\n        String indexedFieldName = dimConfig.indexedFieldName;\n        List<SortedSetDocValuesFacetField> fields = dvByField.get(indexedFieldName);\n        if (fields == null) {\n          fields = new ArrayList<SortedSetDocValuesFacetField>();\n          dvByField.put(indexedFieldName, fields);\n        }\n        fields.add(facetField);\n      }\n\n      if (field.fieldType() == AssociationFacetField.TYPE) {\n        AssociationFacetField facetField = (AssociationFacetField) field;\n        FacetsConfig.DimConfig dimConfig = facetsConfig.getDimConfig(field.name());\n\n        // nocommit how to use a different default name for assocs?\n        String indexedFieldName = dimConfig.indexedFieldName;\n        List<AssociationFacetField> fields = assocByField.get(indexedFieldName);\n        if (fields == null) {\n          fields = new ArrayList<AssociationFacetField>();\n          assocByField.put(indexedFieldName, fields);\n        }\n        fields.add(facetField);\n      }\n    }\n\n    List<Field> addedIndexedFields = new ArrayList<Field>();\n    List<Field> addedStoredFields = new ArrayList<Field>();\n\n    processFacetFields(byField, addedIndexedFields, addedStoredFields);\n    processSSDVFacetFields(dvByField, addedIndexedFields, addedStoredFields);\n    processAssocFacetFields(assocByField, addedIndexedFields, addedStoredFields);\n\n    //System.out.println(\"add stored: \" + addedStoredFields);\n\n    final List<IndexableField> allIndexedFields = new ArrayList<IndexableField>();\n    for(IndexableField field : doc.indexableFields()) {\n      IndexableFieldType ft = field.fieldType();\n      if (ft != FacetField.TYPE && ft != SortedSetDocValuesFacetField.TYPE && ft != AssociationFacetField.TYPE) {\n        allIndexedFields.add(field);\n      }\n    }\n    allIndexedFields.addAll(addedIndexedFields);\n\n    final List<StorableField> allStoredFields = new ArrayList<StorableField>();\n    for(StorableField field : doc.storableFields()) {\n      allStoredFields.add(field);\n    }\n    allStoredFields.addAll(addedStoredFields);\n\n    //System.out.println(\"all indexed: \" + allIndexedFields);\n    //System.out.println(\"all stored: \" + allStoredFields);\n\n    super.addDocument(new IndexDocument() {\n        @Override\n        public Iterable<IndexableField> indexableFields() {\n          return allIndexedFields;\n        }\n\n        @Override\n        public Iterable<StorableField> storableFields() {\n          return allStoredFields;\n        }\n      });\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7554009c97f9365492660c1df175b6349f7ec05c","date":1384886154,"type":5,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/simple/DocumentBuilder#build(IndexDocument).mjava","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/simple/FacetIndexWriter#addDocument(IndexDocument).mjava","sourceNew":"  public IndexDocument build(IndexDocument doc) throws IOException {\n    // Find all FacetFields, collated by the actual field:\n    Map<String,List<FacetField>> byField = new HashMap<String,List<FacetField>>();\n\n    // ... and also all SortedSetDocValuesFacetFields:\n    Map<String,List<SortedSetDocValuesFacetField>> dvByField = new HashMap<String,List<SortedSetDocValuesFacetField>>();\n\n    // ... and also all AssociationFacetFields\n    Map<String,List<AssociationFacetField>> assocByField = new HashMap<String,List<AssociationFacetField>>();\n\n    for(IndexableField field : doc.indexableFields()) {\n      if (field.fieldType() == FacetField.TYPE) {\n        FacetField facetField = (FacetField) field;\n        FacetsConfig.DimConfig dimConfig = config.getDimConfig(facetField.dim);\n        String indexFieldName = dimConfig.indexFieldName;\n        List<FacetField> fields = byField.get(indexFieldName);\n        if (fields == null) {\n          fields = new ArrayList<FacetField>();\n          byField.put(indexFieldName, fields);\n        }\n        fields.add(facetField);\n      }\n\n      if (field.fieldType() == SortedSetDocValuesFacetField.TYPE) {\n        SortedSetDocValuesFacetField facetField = (SortedSetDocValuesFacetField) field;\n        FacetsConfig.DimConfig dimConfig = config.getDimConfig(facetField.dim);\n        String indexFieldName = dimConfig.indexFieldName;\n        List<SortedSetDocValuesFacetField> fields = dvByField.get(indexFieldName);\n        if (fields == null) {\n          fields = new ArrayList<SortedSetDocValuesFacetField>();\n          dvByField.put(indexFieldName, fields);\n        }\n        fields.add(facetField);\n      }\n\n      if (field.fieldType() == AssociationFacetField.TYPE) {\n        AssociationFacetField facetField = (AssociationFacetField) field;\n        FacetsConfig.DimConfig dimConfig = config.getDimConfig(facetField.dim);\n\n        // nocommit how to use a different default name for assocs?\n        String indexFieldName = dimConfig.indexFieldName;\n        List<AssociationFacetField> fields = assocByField.get(indexFieldName);\n        if (fields == null) {\n          fields = new ArrayList<AssociationFacetField>();\n          assocByField.put(indexFieldName, fields);\n        }\n        fields.add(facetField);\n      }\n    }\n\n    List<Field> addedIndexedFields = new ArrayList<Field>();\n    List<Field> addedStoredFields = new ArrayList<Field>();\n\n    processFacetFields(byField, addedIndexedFields, addedStoredFields);\n    processSSDVFacetFields(dvByField, addedIndexedFields, addedStoredFields);\n    processAssocFacetFields(assocByField, addedIndexedFields, addedStoredFields);\n\n    //System.out.println(\"add stored: \" + addedStoredFields);\n\n    final List<IndexableField> allIndexedFields = new ArrayList<IndexableField>();\n    for(IndexableField field : doc.indexableFields()) {\n      IndexableFieldType ft = field.fieldType();\n      if (ft != FacetField.TYPE && ft != SortedSetDocValuesFacetField.TYPE && ft != AssociationFacetField.TYPE) {\n        allIndexedFields.add(field);\n      }\n    }\n    allIndexedFields.addAll(addedIndexedFields);\n\n    final List<StorableField> allStoredFields = new ArrayList<StorableField>();\n    for(StorableField field : doc.storableFields()) {\n      allStoredFields.add(field);\n    }\n    allStoredFields.addAll(addedStoredFields);\n\n    //System.out.println(\"all indexed: \" + allIndexedFields);\n    //System.out.println(\"all stored: \" + allStoredFields);\n\n    return new IndexDocument() {\n        @Override\n        public Iterable<IndexableField> indexableFields() {\n          return allIndexedFields;\n        }\n\n        @Override\n        public Iterable<StorableField> storableFields() {\n          return allStoredFields;\n        }\n      };\n  }\n\n","sourceOld":"  @Override\n  public void addDocument(final IndexDocument doc) throws IOException {\n\n    // Find all FacetFields, collated by the actual field:\n    Map<String,List<FacetField>> byField = new HashMap<String,List<FacetField>>();\n\n    // ... and also all SortedSetDocValuesFacetFields:\n    Map<String,List<SortedSetDocValuesFacetField>> dvByField = new HashMap<String,List<SortedSetDocValuesFacetField>>();\n\n    // ... and also all AssociationFacetFields\n    Map<String,List<AssociationFacetField>> assocByField = new HashMap<String,List<AssociationFacetField>>();\n\n    for(IndexableField field : doc.indexableFields()) {\n      if (field.fieldType() == FacetField.TYPE) {\n        FacetField facetField = (FacetField) field;\n        FacetsConfig.DimConfig dimConfig = config.getDimConfig(facetField.dim);\n        String indexFieldName = dimConfig.indexFieldName;\n        List<FacetField> fields = byField.get(indexFieldName);\n        if (fields == null) {\n          fields = new ArrayList<FacetField>();\n          byField.put(indexFieldName, fields);\n        }\n        fields.add(facetField);\n      }\n\n      if (field.fieldType() == SortedSetDocValuesFacetField.TYPE) {\n        SortedSetDocValuesFacetField facetField = (SortedSetDocValuesFacetField) field;\n        FacetsConfig.DimConfig dimConfig = config.getDimConfig(facetField.dim);\n        String indexFieldName = dimConfig.indexFieldName;\n        List<SortedSetDocValuesFacetField> fields = dvByField.get(indexFieldName);\n        if (fields == null) {\n          fields = new ArrayList<SortedSetDocValuesFacetField>();\n          dvByField.put(indexFieldName, fields);\n        }\n        fields.add(facetField);\n      }\n\n      if (field.fieldType() == AssociationFacetField.TYPE) {\n        AssociationFacetField facetField = (AssociationFacetField) field;\n        FacetsConfig.DimConfig dimConfig = config.getDimConfig(facetField.dim);\n\n        // nocommit how to use a different default name for assocs?\n        String indexFieldName = dimConfig.indexFieldName;\n        List<AssociationFacetField> fields = assocByField.get(indexFieldName);\n        if (fields == null) {\n          fields = new ArrayList<AssociationFacetField>();\n          assocByField.put(indexFieldName, fields);\n        }\n        fields.add(facetField);\n      }\n    }\n\n    List<Field> addedIndexedFields = new ArrayList<Field>();\n    List<Field> addedStoredFields = new ArrayList<Field>();\n\n    processFacetFields(byField, addedIndexedFields, addedStoredFields);\n    processSSDVFacetFields(dvByField, addedIndexedFields, addedStoredFields);\n    processAssocFacetFields(assocByField, addedIndexedFields, addedStoredFields);\n\n    //System.out.println(\"add stored: \" + addedStoredFields);\n\n    final List<IndexableField> allIndexedFields = new ArrayList<IndexableField>();\n    for(IndexableField field : doc.indexableFields()) {\n      IndexableFieldType ft = field.fieldType();\n      if (ft != FacetField.TYPE && ft != SortedSetDocValuesFacetField.TYPE && ft != AssociationFacetField.TYPE) {\n        allIndexedFields.add(field);\n      }\n    }\n    allIndexedFields.addAll(addedIndexedFields);\n\n    final List<StorableField> allStoredFields = new ArrayList<StorableField>();\n    for(StorableField field : doc.storableFields()) {\n      allStoredFields.add(field);\n    }\n    allStoredFields.addAll(addedStoredFields);\n\n    //System.out.println(\"all indexed: \" + allIndexedFields);\n    //System.out.println(\"all stored: \" + allStoredFields);\n\n    super.addDocument(new IndexDocument() {\n        @Override\n        public Iterable<IndexableField> indexableFields() {\n          return allIndexedFields;\n        }\n\n        @Override\n        public Iterable<StorableField> storableFields() {\n          return allStoredFields;\n        }\n      });\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"7554009c97f9365492660c1df175b6349f7ec05c":["18edd2e3f5560087a37442fa424cbbed7c295ebc"],"a1e7272ef767c1304198a2cb2000cf54ea49f808":["519ac3b8f2711b5bfeb1c90c77bb007032270a41"],"18edd2e3f5560087a37442fa424cbbed7c295ebc":["a1e7272ef767c1304198a2cb2000cf54ea49f808"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"519ac3b8f2711b5bfeb1c90c77bb007032270a41":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"7554009c97f9365492660c1df175b6349f7ec05c":[],"a1e7272ef767c1304198a2cb2000cf54ea49f808":["18edd2e3f5560087a37442fa424cbbed7c295ebc"],"18edd2e3f5560087a37442fa424cbbed7c295ebc":["7554009c97f9365492660c1df175b6349f7ec05c"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["519ac3b8f2711b5bfeb1c90c77bb007032270a41","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"519ac3b8f2711b5bfeb1c90c77bb007032270a41":["a1e7272ef767c1304198a2cb2000cf54ea49f808"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["7554009c97f9365492660c1df175b6349f7ec05c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}