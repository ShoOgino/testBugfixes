{"path":"solr/core/src/test/org/apache/solr/update/AutoCommitTest#testMaxDocs().mjava","commits":[{"id":"c903c3d15906a3da96b8c0c2fb704491005fdbdb","date":1453508227,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/update/AutoCommitTest#testMaxDocs().mjava","pathOld":"solr/src/test/org/apache/solr/update/AutoCommitTest#testMaxDocs().mjava","sourceNew":"  public void testMaxDocs() throws Exception {\n\n    SolrCore core = h.getCore();\n    NewSearcherListener trigger = new NewSearcherListener();\n\n    DirectUpdateHandler2 updateHandler = (DirectUpdateHandler2)core.getUpdateHandler();\n    CommitTracker tracker = updateHandler.commitTracker;\n    tracker.timeUpperBound = -1;\n    tracker.docsUpperBound = 14;\n    core.registerNewSearcherListener(trigger);\n  \n    \n    XmlUpdateRequestHandler handler = new XmlUpdateRequestHandler();\n    handler.init( null );\n    \n    MapSolrParams params = new MapSolrParams( new HashMap<String, String>() );\n    \n    // Add documents\n    SolrQueryResponse rsp = new SolrQueryResponse();\n    SolrQueryRequestBase req = new SolrQueryRequestBase( core, params ) {};\n    for( int i=0; i<14; i++ ) {\n      req.setContentStreams( toContentStreams(\n        adoc(\"id\", Integer.toString(i), \"subject\", \"info\" ), null ) );\n      handler.handleRequest( req, rsp );\n    }\n    // It should not be there right away\n    assertQ(\"shouldn't find any\", req(\"id:1\") ,\"//result[@numFound=0]\" );\n    assertEquals( 0, tracker.getCommitCount());\n\n    req.setContentStreams( toContentStreams(\n        adoc(\"id\", \"14\", \"subject\", \"info\" ), null ) );\n    handler.handleRequest( req, rsp );\n\n    assertTrue(trigger.waitForNewSearcher(10000));\n\n    req.setContentStreams( toContentStreams(\n        adoc(\"id\", \"15\", \"subject\", \"info\" ), null ) );\n    handler.handleRequest( req, rsp );\n      \n    // Now make sure we can find it\n    assertQ(\"should find one\", req(\"id:14\") ,\"//result[@numFound=1]\" );\n    assertEquals( 1, tracker.getCommitCount());\n    // But not the one added afterward\n    assertQ(\"should not find one\", req(\"id:15\") ,\"//result[@numFound=0]\" );\n    assertEquals( 1, tracker.getCommitCount());\n    \n  }\n\n","sourceOld":"  public void testMaxDocs() throws Exception {\n\n    SolrCore core = h.getCore();\n    NewSearcherListener trigger = new NewSearcherListener();\n\n    DirectUpdateHandler2 updateHandler = (DirectUpdateHandler2)core.getUpdateHandler();\n    CommitTracker tracker = updateHandler.commitTracker;\n    tracker.timeUpperBound = -1;\n    tracker.docsUpperBound = 14;\n    core.registerNewSearcherListener(trigger);\n  \n    \n    XmlUpdateRequestHandler handler = new XmlUpdateRequestHandler();\n    handler.init( null );\n    \n    MapSolrParams params = new MapSolrParams( new HashMap<String, String>() );\n    \n    // Add documents\n    SolrQueryResponse rsp = new SolrQueryResponse();\n    SolrQueryRequestBase req = new SolrQueryRequestBase( core, params ) {};\n    for( int i=0; i<14; i++ ) {\n      req.setContentStreams( toContentStreams(\n        adoc(\"id\", Integer.toString(i), \"subject\", \"info\" ), null ) );\n      handler.handleRequest( req, rsp );\n    }\n    // It should not be there right away\n    assertQ(\"shouldn't find any\", req(\"id:1\") ,\"//result[@numFound=0]\" );\n    assertEquals( 0, tracker.getCommitCount());\n\n    req.setContentStreams( toContentStreams(\n        adoc(\"id\", \"14\", \"subject\", \"info\" ), null ) );\n    handler.handleRequest( req, rsp );\n\n    assertTrue(trigger.waitForNewSearcher(10000));\n\n    req.setContentStreams( toContentStreams(\n        adoc(\"id\", \"15\", \"subject\", \"info\" ), null ) );\n    handler.handleRequest( req, rsp );\n      \n    // Now make sure we can find it\n    assertQ(\"should find one\", req(\"id:14\") ,\"//result[@numFound=1]\" );\n    assertEquals( 1, tracker.getCommitCount());\n    // But not the one added afterward\n    assertQ(\"should not find one\", req(\"id:15\") ,\"//result[@numFound=0]\" );\n    assertEquals( 1, tracker.getCommitCount());\n    \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a258fbb26824fd104ed795e5d9033d2d040049ee","date":1453508252,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/update/AutoCommitTest#testMaxDocs().mjava","pathOld":"solr/src/test/org/apache/solr/update/AutoCommitTest#testMaxDocs().mjava","sourceNew":"  public void testMaxDocs() throws Exception {\n\n    SolrCore core = h.getCore();\n    NewSearcherListener trigger = new NewSearcherListener();\n\n    DirectUpdateHandler2 updateHandler = (DirectUpdateHandler2)core.getUpdateHandler();\n    CommitTracker tracker = updateHandler.commitTracker;\n    tracker.timeUpperBound = -1;\n    tracker.docsUpperBound = 14;\n    core.registerNewSearcherListener(trigger);\n  \n    \n    XmlUpdateRequestHandler handler = new XmlUpdateRequestHandler();\n    handler.init( null );\n    \n    MapSolrParams params = new MapSolrParams( new HashMap<String, String>() );\n    \n    // Add documents\n    SolrQueryResponse rsp = new SolrQueryResponse();\n    SolrQueryRequestBase req = new SolrQueryRequestBase( core, params ) {};\n    for( int i=0; i<14; i++ ) {\n      req.setContentStreams( toContentStreams(\n        adoc(\"id\", Integer.toString(i), \"subject\", \"info\" ), null ) );\n      handler.handleRequest( req, rsp );\n    }\n    // It should not be there right away\n    assertQ(\"shouldn't find any\", req(\"id:1\") ,\"//result[@numFound=0]\" );\n    assertEquals( 0, tracker.getCommitCount());\n\n    req.setContentStreams( toContentStreams(\n        adoc(\"id\", \"14\", \"subject\", \"info\" ), null ) );\n    handler.handleRequest( req, rsp );\n\n    assertTrue(trigger.waitForNewSearcher(10000));\n\n    req.setContentStreams( toContentStreams(\n        adoc(\"id\", \"15\", \"subject\", \"info\" ), null ) );\n    handler.handleRequest( req, rsp );\n      \n    // Now make sure we can find it\n    assertQ(\"should find one\", req(\"id:14\") ,\"//result[@numFound=1]\" );\n    assertEquals( 1, tracker.getCommitCount());\n    // But not the one added afterward\n    assertQ(\"should not find one\", req(\"id:15\") ,\"//result[@numFound=0]\" );\n    assertEquals( 1, tracker.getCommitCount());\n    \n  }\n\n","sourceOld":"  public void testMaxDocs() throws Exception {\n\n    SolrCore core = h.getCore();\n    NewSearcherListener trigger = new NewSearcherListener();\n\n    DirectUpdateHandler2 updateHandler = (DirectUpdateHandler2)core.getUpdateHandler();\n    CommitTracker tracker = updateHandler.commitTracker;\n    tracker.timeUpperBound = -1;\n    tracker.docsUpperBound = 14;\n    core.registerNewSearcherListener(trigger);\n  \n    \n    XmlUpdateRequestHandler handler = new XmlUpdateRequestHandler();\n    handler.init( null );\n    \n    MapSolrParams params = new MapSolrParams( new HashMap<String, String>() );\n    \n    // Add documents\n    SolrQueryResponse rsp = new SolrQueryResponse();\n    SolrQueryRequestBase req = new SolrQueryRequestBase( core, params ) {};\n    for( int i=0; i<14; i++ ) {\n      req.setContentStreams( toContentStreams(\n        adoc(\"id\", Integer.toString(i), \"subject\", \"info\" ), null ) );\n      handler.handleRequest( req, rsp );\n    }\n    // It should not be there right away\n    assertQ(\"shouldn't find any\", req(\"id:1\") ,\"//result[@numFound=0]\" );\n    assertEquals( 0, tracker.getCommitCount());\n\n    req.setContentStreams( toContentStreams(\n        adoc(\"id\", \"14\", \"subject\", \"info\" ), null ) );\n    handler.handleRequest( req, rsp );\n\n    assertTrue(trigger.waitForNewSearcher(10000));\n\n    req.setContentStreams( toContentStreams(\n        adoc(\"id\", \"15\", \"subject\", \"info\" ), null ) );\n    handler.handleRequest( req, rsp );\n      \n    // Now make sure we can find it\n    assertQ(\"should find one\", req(\"id:14\") ,\"//result[@numFound=1]\" );\n    assertEquals( 1, tracker.getCommitCount());\n    // But not the one added afterward\n    assertQ(\"should not find one\", req(\"id:15\") ,\"//result[@numFound=0]\" );\n    assertEquals( 1, tracker.getCommitCount());\n    \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/update/AutoCommitTest#testMaxDocs().mjava","pathOld":"solr/src/test/org/apache/solr/update/AutoCommitTest#testMaxDocs().mjava","sourceNew":"  public void testMaxDocs() throws Exception {\n\n    SolrCore core = h.getCore();\n    NewSearcherListener trigger = new NewSearcherListener();\n\n    DirectUpdateHandler2 updateHandler = (DirectUpdateHandler2)core.getUpdateHandler();\n    CommitTracker tracker = updateHandler.commitTracker;\n    tracker.timeUpperBound = -1;\n    tracker.docsUpperBound = 14;\n    core.registerNewSearcherListener(trigger);\n  \n    \n    XmlUpdateRequestHandler handler = new XmlUpdateRequestHandler();\n    handler.init( null );\n    \n    MapSolrParams params = new MapSolrParams( new HashMap<String, String>() );\n    \n    // Add documents\n    SolrQueryResponse rsp = new SolrQueryResponse();\n    SolrQueryRequestBase req = new SolrQueryRequestBase( core, params ) {};\n    for( int i=0; i<14; i++ ) {\n      req.setContentStreams( toContentStreams(\n        adoc(\"id\", Integer.toString(i), \"subject\", \"info\" ), null ) );\n      handler.handleRequest( req, rsp );\n    }\n    // It should not be there right away\n    assertQ(\"shouldn't find any\", req(\"id:1\") ,\"//result[@numFound=0]\" );\n    assertEquals( 0, tracker.getCommitCount());\n\n    req.setContentStreams( toContentStreams(\n        adoc(\"id\", \"14\", \"subject\", \"info\" ), null ) );\n    handler.handleRequest( req, rsp );\n\n    assertTrue(trigger.waitForNewSearcher(10000));\n\n    req.setContentStreams( toContentStreams(\n        adoc(\"id\", \"15\", \"subject\", \"info\" ), null ) );\n    handler.handleRequest( req, rsp );\n      \n    // Now make sure we can find it\n    assertQ(\"should find one\", req(\"id:14\") ,\"//result[@numFound=1]\" );\n    assertEquals( 1, tracker.getCommitCount());\n    // But not the one added afterward\n    assertQ(\"should not find one\", req(\"id:15\") ,\"//result[@numFound=0]\" );\n    assertEquals( 1, tracker.getCommitCount());\n    \n  }\n\n","sourceOld":"  public void testMaxDocs() throws Exception {\n\n    SolrCore core = h.getCore();\n    NewSearcherListener trigger = new NewSearcherListener();\n\n    DirectUpdateHandler2 updateHandler = (DirectUpdateHandler2)core.getUpdateHandler();\n    CommitTracker tracker = updateHandler.commitTracker;\n    tracker.timeUpperBound = -1;\n    tracker.docsUpperBound = 14;\n    core.registerNewSearcherListener(trigger);\n  \n    \n    XmlUpdateRequestHandler handler = new XmlUpdateRequestHandler();\n    handler.init( null );\n    \n    MapSolrParams params = new MapSolrParams( new HashMap<String, String>() );\n    \n    // Add documents\n    SolrQueryResponse rsp = new SolrQueryResponse();\n    SolrQueryRequestBase req = new SolrQueryRequestBase( core, params ) {};\n    for( int i=0; i<14; i++ ) {\n      req.setContentStreams( toContentStreams(\n        adoc(\"id\", Integer.toString(i), \"subject\", \"info\" ), null ) );\n      handler.handleRequest( req, rsp );\n    }\n    // It should not be there right away\n    assertQ(\"shouldn't find any\", req(\"id:1\") ,\"//result[@numFound=0]\" );\n    assertEquals( 0, tracker.getCommitCount());\n\n    req.setContentStreams( toContentStreams(\n        adoc(\"id\", \"14\", \"subject\", \"info\" ), null ) );\n    handler.handleRequest( req, rsp );\n\n    assertTrue(trigger.waitForNewSearcher(10000));\n\n    req.setContentStreams( toContentStreams(\n        adoc(\"id\", \"15\", \"subject\", \"info\" ), null ) );\n    handler.handleRequest( req, rsp );\n      \n    // Now make sure we can find it\n    assertQ(\"should find one\", req(\"id:14\") ,\"//result[@numFound=1]\" );\n    assertEquals( 1, tracker.getCommitCount());\n    // But not the one added afterward\n    assertQ(\"should not find one\", req(\"id:15\") ,\"//result[@numFound=0]\" );\n    assertEquals( 1, tracker.getCommitCount());\n    \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c518d12136e15c9de6fa3d2c4bf5add07311a685","date":1313718511,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/update/AutoCommitTest#testMaxDocs().mjava","pathOld":"solr/core/src/test/org/apache/solr/update/AutoCommitTest#testMaxDocs().mjava","sourceNew":"  public void testMaxDocs() throws Exception {\n\n    SolrCore core = h.getCore();\n    NewSearcherListener trigger = new NewSearcherListener();\n\n    DirectUpdateHandler2 updateHandler = (DirectUpdateHandler2)core.getUpdateHandler();\n    CommitTracker tracker = updateHandler.commitTracker;\n    tracker.setTimeUpperBound(-1);\n    tracker.setDocsUpperBound(14);\n    core.registerNewSearcherListener(trigger);\n  \n    \n    XmlUpdateRequestHandler handler = new XmlUpdateRequestHandler();\n    handler.init( null );\n    \n    MapSolrParams params = new MapSolrParams( new HashMap<String, String>() );\n    \n    // Add documents\n    SolrQueryResponse rsp = new SolrQueryResponse();\n    SolrQueryRequestBase req = new SolrQueryRequestBase( core, params ) {};\n    for( int i=0; i<14; i++ ) {\n      req.setContentStreams( toContentStreams(\n        adoc(\"id\", Integer.toString(i), \"subject\", \"info\" ), null ) );\n      handler.handleRequest( req, rsp );\n    }\n    // It should not be there right away\n    assertQ(\"shouldn't find any\", req(\"id:1\") ,\"//result[@numFound=0]\" );\n    assertEquals( 0, tracker.getCommitCount());\n\n    req.setContentStreams( toContentStreams(\n        adoc(\"id\", \"14\", \"subject\", \"info\" ), null ) );\n    handler.handleRequest( req, rsp );\n\n    assertTrue(trigger.waitForNewSearcher(10000));\n\n    req.setContentStreams( toContentStreams(\n        adoc(\"id\", \"15\", \"subject\", \"info\" ), null ) );\n    handler.handleRequest( req, rsp );\n      \n    // Now make sure we can find it\n    assertQ(\"should find one\", req(\"id:14\") ,\"//result[@numFound=1]\" );\n    assertEquals( 1, tracker.getCommitCount());\n    // But not the one added afterward\n    assertQ(\"should not find one\", req(\"id:15\") ,\"//result[@numFound=0]\" );\n    assertEquals( 1, tracker.getCommitCount());\n    \n  }\n\n","sourceOld":"  public void testMaxDocs() throws Exception {\n\n    SolrCore core = h.getCore();\n    NewSearcherListener trigger = new NewSearcherListener();\n\n    DirectUpdateHandler2 updateHandler = (DirectUpdateHandler2)core.getUpdateHandler();\n    CommitTracker tracker = updateHandler.commitTracker;\n    tracker.timeUpperBound = -1;\n    tracker.docsUpperBound = 14;\n    core.registerNewSearcherListener(trigger);\n  \n    \n    XmlUpdateRequestHandler handler = new XmlUpdateRequestHandler();\n    handler.init( null );\n    \n    MapSolrParams params = new MapSolrParams( new HashMap<String, String>() );\n    \n    // Add documents\n    SolrQueryResponse rsp = new SolrQueryResponse();\n    SolrQueryRequestBase req = new SolrQueryRequestBase( core, params ) {};\n    for( int i=0; i<14; i++ ) {\n      req.setContentStreams( toContentStreams(\n        adoc(\"id\", Integer.toString(i), \"subject\", \"info\" ), null ) );\n      handler.handleRequest( req, rsp );\n    }\n    // It should not be there right away\n    assertQ(\"shouldn't find any\", req(\"id:1\") ,\"//result[@numFound=0]\" );\n    assertEquals( 0, tracker.getCommitCount());\n\n    req.setContentStreams( toContentStreams(\n        adoc(\"id\", \"14\", \"subject\", \"info\" ), null ) );\n    handler.handleRequest( req, rsp );\n\n    assertTrue(trigger.waitForNewSearcher(10000));\n\n    req.setContentStreams( toContentStreams(\n        adoc(\"id\", \"15\", \"subject\", \"info\" ), null ) );\n    handler.handleRequest( req, rsp );\n      \n    // Now make sure we can find it\n    assertQ(\"should find one\", req(\"id:14\") ,\"//result[@numFound=1]\" );\n    assertEquals( 1, tracker.getCommitCount());\n    // But not the one added afterward\n    assertQ(\"should not find one\", req(\"id:15\") ,\"//result[@numFound=0]\" );\n    assertEquals( 1, tracker.getCommitCount());\n    \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"09d02225ad8c7d4b2af4b84d1c965a791b7d4a23","date":1317007809,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/update/AutoCommitTest#testMaxDocs().mjava","pathOld":"solr/core/src/test/org/apache/solr/update/AutoCommitTest#testMaxDocs().mjava","sourceNew":"  public void testMaxDocs() throws Exception {\n\n    SolrCore core = h.getCore();\n    NewSearcherListener trigger = new NewSearcherListener();\n\n    DirectUpdateHandler2 updateHandler = (DirectUpdateHandler2)core.getUpdateHandler();\n    CommitTracker tracker = updateHandler.commitTracker;\n    tracker.setTimeUpperBound(-1);\n    tracker.setDocsUpperBound(14);\n    core.registerNewSearcherListener(trigger);\n  \n    \n    XmlUpdateRequestHandler handler = new XmlUpdateRequestHandler();\n    handler.init( null );\n    \n    MapSolrParams params = new MapSolrParams( new HashMap<String, String>() );\n    \n    // Add documents\n    SolrQueryResponse rsp = new SolrQueryResponse();\n    SolrQueryRequestBase req = new SolrQueryRequestBase( core, params ) {};\n    for( int i=0; i<14; i++ ) {\n      req.setContentStreams( toContentStreams(\n        adoc(\"id\", Integer.toString(i), \"subject\", \"info\" ), null ) );\n      handler.handleRequest( req, rsp );\n    }\n    // It should not be there right away\n    assertQ(\"shouldn't find any\", req(\"id:1\") ,\"//result[@numFound=0]\" );\n    assertEquals( 0, tracker.getCommitCount());\n\n    req.setContentStreams( toContentStreams(\n        adoc(\"id\", \"14\", \"subject\", \"info\" ), null ) );\n    handler.handleRequest( req, rsp );\n\n    assertTrue(trigger.waitForNewSearcher(15000));\n\n    req.setContentStreams( toContentStreams(\n        adoc(\"id\", \"15\", \"subject\", \"info\" ), null ) );\n    handler.handleRequest( req, rsp );\n      \n    // Now make sure we can find it\n    assertQ(\"should find one\", req(\"id:14\") ,\"//result[@numFound=1]\" );\n    assertEquals( 1, tracker.getCommitCount());\n    // But not the one added afterward\n    assertQ(\"should not find one\", req(\"id:15\") ,\"//result[@numFound=0]\" );\n    assertEquals( 1, tracker.getCommitCount());\n    \n  }\n\n","sourceOld":"  public void testMaxDocs() throws Exception {\n\n    SolrCore core = h.getCore();\n    NewSearcherListener trigger = new NewSearcherListener();\n\n    DirectUpdateHandler2 updateHandler = (DirectUpdateHandler2)core.getUpdateHandler();\n    CommitTracker tracker = updateHandler.commitTracker;\n    tracker.setTimeUpperBound(-1);\n    tracker.setDocsUpperBound(14);\n    core.registerNewSearcherListener(trigger);\n  \n    \n    XmlUpdateRequestHandler handler = new XmlUpdateRequestHandler();\n    handler.init( null );\n    \n    MapSolrParams params = new MapSolrParams( new HashMap<String, String>() );\n    \n    // Add documents\n    SolrQueryResponse rsp = new SolrQueryResponse();\n    SolrQueryRequestBase req = new SolrQueryRequestBase( core, params ) {};\n    for( int i=0; i<14; i++ ) {\n      req.setContentStreams( toContentStreams(\n        adoc(\"id\", Integer.toString(i), \"subject\", \"info\" ), null ) );\n      handler.handleRequest( req, rsp );\n    }\n    // It should not be there right away\n    assertQ(\"shouldn't find any\", req(\"id:1\") ,\"//result[@numFound=0]\" );\n    assertEquals( 0, tracker.getCommitCount());\n\n    req.setContentStreams( toContentStreams(\n        adoc(\"id\", \"14\", \"subject\", \"info\" ), null ) );\n    handler.handleRequest( req, rsp );\n\n    assertTrue(trigger.waitForNewSearcher(10000));\n\n    req.setContentStreams( toContentStreams(\n        adoc(\"id\", \"15\", \"subject\", \"info\" ), null ) );\n    handler.handleRequest( req, rsp );\n      \n    // Now make sure we can find it\n    assertQ(\"should find one\", req(\"id:14\") ,\"//result[@numFound=1]\" );\n    assertEquals( 1, tracker.getCommitCount());\n    // But not the one added afterward\n    assertQ(\"should not find one\", req(\"id:15\") ,\"//result[@numFound=0]\" );\n    assertEquals( 1, tracker.getCommitCount());\n    \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0ad31de9d3b830bc174d4c41df9f80f4cac82576","date":1328107867,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/update/AutoCommitTest#testMaxDocs().mjava","pathOld":"solr/core/src/test/org/apache/solr/update/AutoCommitTest#testMaxDocs().mjava","sourceNew":"  public void testMaxDocs() throws Exception {\n\n    SolrCore core = h.getCore();\n    NewSearcherListener trigger = new NewSearcherListener();\n\n    DirectUpdateHandler2 updateHandler = (DirectUpdateHandler2)core.getUpdateHandler();\n    CommitTracker tracker = updateHandler.softCommitTracker;\n    tracker.setTimeUpperBound(-1);\n    tracker.setDocsUpperBound(14);\n    core.registerNewSearcherListener(trigger);\n  \n    \n    XmlUpdateRequestHandler handler = new XmlUpdateRequestHandler();\n    handler.init( null );\n    \n    MapSolrParams params = new MapSolrParams( new HashMap<String, String>() );\n    \n    // Add documents\n    SolrQueryResponse rsp = new SolrQueryResponse();\n    SolrQueryRequestBase req = new SolrQueryRequestBase( core, params ) {};\n    for( int i=0; i<14; i++ ) {\n      req.setContentStreams( toContentStreams(\n        adoc(\"id\", Integer.toString(i), \"subject\", \"info\" ), null ) );\n      handler.handleRequest( req, rsp );\n    }\n    // It should not be there right away\n    assertQ(\"shouldn't find any\", req(\"id:1\") ,\"//result[@numFound=0]\" );\n    assertEquals( 0, tracker.getCommitCount());\n\n    req.setContentStreams( toContentStreams(\n        adoc(\"id\", \"14\", \"subject\", \"info\" ), null ) );\n    handler.handleRequest( req, rsp );\n\n    assertTrue(trigger.waitForNewSearcher(15000));\n\n    req.setContentStreams( toContentStreams(\n        adoc(\"id\", \"15\", \"subject\", \"info\" ), null ) );\n    handler.handleRequest( req, rsp );\n      \n    // Now make sure we can find it\n    assertQ(\"should find one\", req(\"id:14\") ,\"//result[@numFound=1]\" );\n    assertEquals( 1, tracker.getCommitCount());\n    // But not the one added afterward\n    assertQ(\"should not find one\", req(\"id:15\") ,\"//result[@numFound=0]\" );\n    assertEquals( 1, tracker.getCommitCount());\n    \n  }\n\n","sourceOld":"  public void testMaxDocs() throws Exception {\n\n    SolrCore core = h.getCore();\n    NewSearcherListener trigger = new NewSearcherListener();\n\n    DirectUpdateHandler2 updateHandler = (DirectUpdateHandler2)core.getUpdateHandler();\n    CommitTracker tracker = updateHandler.commitTracker;\n    tracker.setTimeUpperBound(-1);\n    tracker.setDocsUpperBound(14);\n    core.registerNewSearcherListener(trigger);\n  \n    \n    XmlUpdateRequestHandler handler = new XmlUpdateRequestHandler();\n    handler.init( null );\n    \n    MapSolrParams params = new MapSolrParams( new HashMap<String, String>() );\n    \n    // Add documents\n    SolrQueryResponse rsp = new SolrQueryResponse();\n    SolrQueryRequestBase req = new SolrQueryRequestBase( core, params ) {};\n    for( int i=0; i<14; i++ ) {\n      req.setContentStreams( toContentStreams(\n        adoc(\"id\", Integer.toString(i), \"subject\", \"info\" ), null ) );\n      handler.handleRequest( req, rsp );\n    }\n    // It should not be there right away\n    assertQ(\"shouldn't find any\", req(\"id:1\") ,\"//result[@numFound=0]\" );\n    assertEquals( 0, tracker.getCommitCount());\n\n    req.setContentStreams( toContentStreams(\n        adoc(\"id\", \"14\", \"subject\", \"info\" ), null ) );\n    handler.handleRequest( req, rsp );\n\n    assertTrue(trigger.waitForNewSearcher(15000));\n\n    req.setContentStreams( toContentStreams(\n        adoc(\"id\", \"15\", \"subject\", \"info\" ), null ) );\n    handler.handleRequest( req, rsp );\n      \n    // Now make sure we can find it\n    assertQ(\"should find one\", req(\"id:14\") ,\"//result[@numFound=1]\" );\n    assertEquals( 1, tracker.getCommitCount());\n    // But not the one added afterward\n    assertQ(\"should not find one\", req(\"id:15\") ,\"//result[@numFound=0]\" );\n    assertEquals( 1, tracker.getCommitCount());\n    \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"042e4d934397657ba04c82b46cc5665076bc5c58","date":1336511170,"type":3,"author":"Ryan McKinley","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/update/AutoCommitTest#testMaxDocs().mjava","pathOld":"solr/core/src/test/org/apache/solr/update/AutoCommitTest#testMaxDocs().mjava","sourceNew":"  public void testMaxDocs() throws Exception {\n\n    SolrCore core = h.getCore();\n    NewSearcherListener trigger = new NewSearcherListener();\n\n    DirectUpdateHandler2 updateHandler = (DirectUpdateHandler2)core.getUpdateHandler();\n    CommitTracker tracker = updateHandler.softCommitTracker;\n    tracker.setTimeUpperBound(-1);\n    tracker.setDocsUpperBound(14);\n    core.registerNewSearcherListener(trigger);\n  \n    \n    UpdateRequestHandler handler = new UpdateRequestHandler();\n    handler.init( null );\n    \n    MapSolrParams params = new MapSolrParams( new HashMap<String, String>() );\n    \n    // Add documents\n    SolrQueryResponse rsp = new SolrQueryResponse();\n    SolrQueryRequestBase req = new SolrQueryRequestBase( core, params ) {};\n    for( int i=0; i<14; i++ ) {\n      req.setContentStreams( toContentStreams(\n        adoc(\"id\", Integer.toString(i), \"subject\", \"info\" ), null ) );\n      handler.handleRequest( req, rsp );\n    }\n    // It should not be there right away\n    assertQ(\"shouldn't find any\", req(\"id:1\") ,\"//result[@numFound=0]\" );\n    assertEquals( 0, tracker.getCommitCount());\n\n    req.setContentStreams( toContentStreams(\n        adoc(\"id\", \"14\", \"subject\", \"info\" ), null ) );\n    handler.handleRequest( req, rsp );\n\n    assertTrue(trigger.waitForNewSearcher(15000));\n\n    req.setContentStreams( toContentStreams(\n        adoc(\"id\", \"15\", \"subject\", \"info\" ), null ) );\n    handler.handleRequest( req, rsp );\n      \n    // Now make sure we can find it\n    assertQ(\"should find one\", req(\"id:14\") ,\"//result[@numFound=1]\" );\n    assertEquals( 1, tracker.getCommitCount());\n    // But not the one added afterward\n    assertQ(\"should not find one\", req(\"id:15\") ,\"//result[@numFound=0]\" );\n    assertEquals( 1, tracker.getCommitCount());\n    \n  }\n\n","sourceOld":"  public void testMaxDocs() throws Exception {\n\n    SolrCore core = h.getCore();\n    NewSearcherListener trigger = new NewSearcherListener();\n\n    DirectUpdateHandler2 updateHandler = (DirectUpdateHandler2)core.getUpdateHandler();\n    CommitTracker tracker = updateHandler.softCommitTracker;\n    tracker.setTimeUpperBound(-1);\n    tracker.setDocsUpperBound(14);\n    core.registerNewSearcherListener(trigger);\n  \n    \n    XmlUpdateRequestHandler handler = new XmlUpdateRequestHandler();\n    handler.init( null );\n    \n    MapSolrParams params = new MapSolrParams( new HashMap<String, String>() );\n    \n    // Add documents\n    SolrQueryResponse rsp = new SolrQueryResponse();\n    SolrQueryRequestBase req = new SolrQueryRequestBase( core, params ) {};\n    for( int i=0; i<14; i++ ) {\n      req.setContentStreams( toContentStreams(\n        adoc(\"id\", Integer.toString(i), \"subject\", \"info\" ), null ) );\n      handler.handleRequest( req, rsp );\n    }\n    // It should not be there right away\n    assertQ(\"shouldn't find any\", req(\"id:1\") ,\"//result[@numFound=0]\" );\n    assertEquals( 0, tracker.getCommitCount());\n\n    req.setContentStreams( toContentStreams(\n        adoc(\"id\", \"14\", \"subject\", \"info\" ), null ) );\n    handler.handleRequest( req, rsp );\n\n    assertTrue(trigger.waitForNewSearcher(15000));\n\n    req.setContentStreams( toContentStreams(\n        adoc(\"id\", \"15\", \"subject\", \"info\" ), null ) );\n    handler.handleRequest( req, rsp );\n      \n    // Now make sure we can find it\n    assertQ(\"should find one\", req(\"id:14\") ,\"//result[@numFound=1]\" );\n    assertEquals( 1, tracker.getCommitCount());\n    // But not the one added afterward\n    assertQ(\"should not find one\", req(\"id:15\") ,\"//result[@numFound=0]\" );\n    assertEquals( 1, tracker.getCommitCount());\n    \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d9405f486872f1e416304dfe389741f4ee2f8a4d","date":1351276739,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/update/AutoCommitTest#testMaxDocs().mjava","pathOld":"solr/core/src/test/org/apache/solr/update/AutoCommitTest#testMaxDocs().mjava","sourceNew":"  public void testMaxDocs() throws Exception {\n    SolrCore core = h.getCore();\n    \n    NewSearcherListener trigger = new NewSearcherListener();\n\n    DirectUpdateHandler2 updateHandler = (DirectUpdateHandler2)core.getUpdateHandler();\n    CommitTracker tracker = updateHandler.softCommitTracker;\n    tracker.setTimeUpperBound(-1);\n    tracker.setDocsUpperBound(14);\n    core.registerNewSearcherListener(trigger);\n  \n    \n    UpdateRequestHandler handler = new UpdateRequestHandler();\n    handler.init( null );\n    \n    MapSolrParams params = new MapSolrParams( new HashMap<String, String>() );\n    \n    // Add documents\n    SolrQueryResponse rsp = new SolrQueryResponse();\n    SolrQueryRequestBase req = new SolrQueryRequestBase( core, params ) {};\n    for( int i=0; i<14; i++ ) {\n      req.setContentStreams( toContentStreams(\n        adoc(\"id\", Integer.toString(i), \"subject\", \"info\" ), null ) );\n      handler.handleRequest( req, rsp );\n    }\n    // It should not be there right away\n    assertQ(\"shouldn't find any\", req(\"id:1\") ,\"//result[@numFound=0]\" );\n    assertEquals( 0, tracker.getCommitCount());\n\n    req.setContentStreams( toContentStreams(\n        adoc(\"id\", \"14\", \"subject\", \"info\" ), null ) );\n    handler.handleRequest( req, rsp );\n\n    assertTrue(trigger.waitForNewSearcher(15000));\n\n    req.setContentStreams( toContentStreams(\n        adoc(\"id\", \"15\", \"subject\", \"info\" ), null ) );\n    handler.handleRequest( req, rsp );\n      \n    // Now make sure we can find it\n    assertQ(\"should find one\", req(\"id:14\") ,\"//result[@numFound=1]\" );\n    assertEquals( 1, tracker.getCommitCount());\n    // But not the one added afterward\n    assertQ(\"should not find one\", req(\"id:15\") ,\"//result[@numFound=0]\" );\n    assertEquals( 1, tracker.getCommitCount());\n    \n  }\n\n","sourceOld":"  public void testMaxDocs() throws Exception {\n\n    SolrCore core = h.getCore();\n    NewSearcherListener trigger = new NewSearcherListener();\n\n    DirectUpdateHandler2 updateHandler = (DirectUpdateHandler2)core.getUpdateHandler();\n    CommitTracker tracker = updateHandler.softCommitTracker;\n    tracker.setTimeUpperBound(-1);\n    tracker.setDocsUpperBound(14);\n    core.registerNewSearcherListener(trigger);\n  \n    \n    UpdateRequestHandler handler = new UpdateRequestHandler();\n    handler.init( null );\n    \n    MapSolrParams params = new MapSolrParams( new HashMap<String, String>() );\n    \n    // Add documents\n    SolrQueryResponse rsp = new SolrQueryResponse();\n    SolrQueryRequestBase req = new SolrQueryRequestBase( core, params ) {};\n    for( int i=0; i<14; i++ ) {\n      req.setContentStreams( toContentStreams(\n        adoc(\"id\", Integer.toString(i), \"subject\", \"info\" ), null ) );\n      handler.handleRequest( req, rsp );\n    }\n    // It should not be there right away\n    assertQ(\"shouldn't find any\", req(\"id:1\") ,\"//result[@numFound=0]\" );\n    assertEquals( 0, tracker.getCommitCount());\n\n    req.setContentStreams( toContentStreams(\n        adoc(\"id\", \"14\", \"subject\", \"info\" ), null ) );\n    handler.handleRequest( req, rsp );\n\n    assertTrue(trigger.waitForNewSearcher(15000));\n\n    req.setContentStreams( toContentStreams(\n        adoc(\"id\", \"15\", \"subject\", \"info\" ), null ) );\n    handler.handleRequest( req, rsp );\n      \n    // Now make sure we can find it\n    assertQ(\"should find one\", req(\"id:14\") ,\"//result[@numFound=1]\" );\n    assertEquals( 1, tracker.getCommitCount());\n    // But not the one added afterward\n    assertQ(\"should not find one\", req(\"id:15\") ,\"//result[@numFound=0]\" );\n    assertEquals( 1, tracker.getCommitCount());\n    \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f2126b84bd093fa3d921582a109a0ee578c28126","date":1351522501,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/update/AutoCommitTest#testMaxDocs().mjava","pathOld":"solr/core/src/test/org/apache/solr/update/AutoCommitTest#testMaxDocs().mjava","sourceNew":"  public void testMaxDocs() throws Exception {\n    SolrCore core = h.getCore();\n    \n    NewSearcherListener trigger = new NewSearcherListener();\n\n    DirectUpdateHandler2 updateHandler = (DirectUpdateHandler2)core.getUpdateHandler();\n    CommitTracker tracker = updateHandler.softCommitTracker;\n    tracker.setTimeUpperBound(-1);\n    tracker.setDocsUpperBound(14);\n    core.registerNewSearcherListener(trigger);\n  \n    \n    UpdateRequestHandler handler = new UpdateRequestHandler();\n    handler.init( null );\n    \n    MapSolrParams params = new MapSolrParams( new HashMap<String, String>() );\n    \n    // Add documents\n    SolrQueryResponse rsp = new SolrQueryResponse();\n    SolrQueryRequestBase req = new SolrQueryRequestBase( core, params ) {};\n    for( int i=0; i<14; i++ ) {\n      req.setContentStreams( toContentStreams(\n        adoc(\"id\", Integer.toString(i), \"subject\", \"info\" ), null ) );\n      handler.handleRequest( req, rsp );\n    }\n    // It should not be there right away\n    assertQ(\"shouldn't find any\", req(\"id:1\") ,\"//result[@numFound=0]\" );\n    assertEquals( 0, tracker.getCommitCount());\n\n    req.setContentStreams( toContentStreams(\n        adoc(\"id\", \"14\", \"subject\", \"info\" ), null ) );\n    handler.handleRequest( req, rsp );\n\n    assertTrue(trigger.waitForNewSearcher(15000));\n\n    req.setContentStreams( toContentStreams(\n        adoc(\"id\", \"15\", \"subject\", \"info\" ), null ) );\n    handler.handleRequest( req, rsp );\n      \n    // Now make sure we can find it\n    assertQ(\"should find one\", req(\"id:14\") ,\"//result[@numFound=1]\" );\n    assertEquals( 1, tracker.getCommitCount());\n    // But not the one added afterward\n    assertQ(\"should not find one\", req(\"id:15\") ,\"//result[@numFound=0]\" );\n    assertEquals( 1, tracker.getCommitCount());\n    \n  }\n\n","sourceOld":"  public void testMaxDocs() throws Exception {\n\n    SolrCore core = h.getCore();\n    NewSearcherListener trigger = new NewSearcherListener();\n\n    DirectUpdateHandler2 updateHandler = (DirectUpdateHandler2)core.getUpdateHandler();\n    CommitTracker tracker = updateHandler.softCommitTracker;\n    tracker.setTimeUpperBound(-1);\n    tracker.setDocsUpperBound(14);\n    core.registerNewSearcherListener(trigger);\n  \n    \n    UpdateRequestHandler handler = new UpdateRequestHandler();\n    handler.init( null );\n    \n    MapSolrParams params = new MapSolrParams( new HashMap<String, String>() );\n    \n    // Add documents\n    SolrQueryResponse rsp = new SolrQueryResponse();\n    SolrQueryRequestBase req = new SolrQueryRequestBase( core, params ) {};\n    for( int i=0; i<14; i++ ) {\n      req.setContentStreams( toContentStreams(\n        adoc(\"id\", Integer.toString(i), \"subject\", \"info\" ), null ) );\n      handler.handleRequest( req, rsp );\n    }\n    // It should not be there right away\n    assertQ(\"shouldn't find any\", req(\"id:1\") ,\"//result[@numFound=0]\" );\n    assertEquals( 0, tracker.getCommitCount());\n\n    req.setContentStreams( toContentStreams(\n        adoc(\"id\", \"14\", \"subject\", \"info\" ), null ) );\n    handler.handleRequest( req, rsp );\n\n    assertTrue(trigger.waitForNewSearcher(15000));\n\n    req.setContentStreams( toContentStreams(\n        adoc(\"id\", \"15\", \"subject\", \"info\" ), null ) );\n    handler.handleRequest( req, rsp );\n      \n    // Now make sure we can find it\n    assertQ(\"should find one\", req(\"id:14\") ,\"//result[@numFound=1]\" );\n    assertEquals( 1, tracker.getCommitCount());\n    // But not the one added afterward\n    assertQ(\"should not find one\", req(\"id:15\") ,\"//result[@numFound=0]\" );\n    assertEquals( 1, tracker.getCommitCount());\n    \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ff7024b6ebcfb64924eed7543a71a1cbd1e7466c","date":1508275071,"type":4,"author":"Chris Hostetter","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/core/src/test/org/apache/solr/update/AutoCommitTest#testMaxDocs().mjava","sourceNew":null,"sourceOld":"  public void testMaxDocs() throws Exception {\n    SolrCore core = h.getCore();\n    \n    NewSearcherListener trigger = new NewSearcherListener();\n\n    DirectUpdateHandler2 updateHandler = (DirectUpdateHandler2)core.getUpdateHandler();\n    CommitTracker tracker = updateHandler.softCommitTracker;\n    tracker.setTimeUpperBound(-1);\n    tracker.setDocsUpperBound(14);\n    core.registerNewSearcherListener(trigger);\n  \n    \n    UpdateRequestHandler handler = new UpdateRequestHandler();\n    handler.init( null );\n    \n    MapSolrParams params = new MapSolrParams( new HashMap<String, String>() );\n    \n    // Add documents\n    SolrQueryResponse rsp = new SolrQueryResponse();\n    SolrQueryRequestBase req = new SolrQueryRequestBase( core, params ) {};\n    for( int i=0; i<14; i++ ) {\n      req.setContentStreams( toContentStreams(\n        adoc(\"id\", Integer.toString(i), \"subject\", \"info\" ), null ) );\n      handler.handleRequest( req, rsp );\n    }\n    // It should not be there right away\n    assertQ(\"shouldn't find any\", req(\"id:1\") ,\"//result[@numFound=0]\" );\n    assertEquals( 0, tracker.getCommitCount());\n\n    req.setContentStreams( toContentStreams(\n        adoc(\"id\", \"14\", \"subject\", \"info\" ), null ) );\n    handler.handleRequest( req, rsp );\n\n    assertTrue(trigger.waitForNewSearcher(15000));\n\n    req.setContentStreams( toContentStreams(\n        adoc(\"id\", \"15\", \"subject\", \"info\" ), null ) );\n    handler.handleRequest( req, rsp );\n      \n    // Now make sure we can find it\n    assertQ(\"should find one\", req(\"id:14\") ,\"//result[@numFound=1]\" );\n    assertEquals( 1, tracker.getCommitCount());\n    // But not the one added afterward\n    assertQ(\"should not find one\", req(\"id:15\") ,\"//result[@numFound=0]\" );\n    assertEquals( 1, tracker.getCommitCount());\n    \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"09d02225ad8c7d4b2af4b84d1c965a791b7d4a23":["c518d12136e15c9de6fa3d2c4bf5add07311a685"],"042e4d934397657ba04c82b46cc5665076bc5c58":["0ad31de9d3b830bc174d4c41df9f80f4cac82576"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"c26f00b574427b55127e869b935845554afde1fa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","c903c3d15906a3da96b8c0c2fb704491005fdbdb"],"0ad31de9d3b830bc174d4c41df9f80f4cac82576":["09d02225ad8c7d4b2af4b84d1c965a791b7d4a23"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"ff7024b6ebcfb64924eed7543a71a1cbd1e7466c":["d9405f486872f1e416304dfe389741f4ee2f8a4d"],"a258fbb26824fd104ed795e5d9033d2d040049ee":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"d9405f486872f1e416304dfe389741f4ee2f8a4d":["042e4d934397657ba04c82b46cc5665076bc5c58"],"c518d12136e15c9de6fa3d2c4bf5add07311a685":["c26f00b574427b55127e869b935845554afde1fa"],"f2126b84bd093fa3d921582a109a0ee578c28126":["042e4d934397657ba04c82b46cc5665076bc5c58","d9405f486872f1e416304dfe389741f4ee2f8a4d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["ff7024b6ebcfb64924eed7543a71a1cbd1e7466c"]},"commit2Childs":{"09d02225ad8c7d4b2af4b84d1c965a791b7d4a23":["0ad31de9d3b830bc174d4c41df9f80f4cac82576"],"042e4d934397657ba04c82b46cc5665076bc5c58":["d9405f486872f1e416304dfe389741f4ee2f8a4d","f2126b84bd093fa3d921582a109a0ee578c28126"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["c26f00b574427b55127e869b935845554afde1fa"],"c26f00b574427b55127e869b935845554afde1fa":["c518d12136e15c9de6fa3d2c4bf5add07311a685"],"0ad31de9d3b830bc174d4c41df9f80f4cac82576":["042e4d934397657ba04c82b46cc5665076bc5c58"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c903c3d15906a3da96b8c0c2fb704491005fdbdb","c26f00b574427b55127e869b935845554afde1fa","a258fbb26824fd104ed795e5d9033d2d040049ee"],"ff7024b6ebcfb64924eed7543a71a1cbd1e7466c":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a258fbb26824fd104ed795e5d9033d2d040049ee":[],"c518d12136e15c9de6fa3d2c4bf5add07311a685":["09d02225ad8c7d4b2af4b84d1c965a791b7d4a23"],"d9405f486872f1e416304dfe389741f4ee2f8a4d":["ff7024b6ebcfb64924eed7543a71a1cbd1e7466c","f2126b84bd093fa3d921582a109a0ee578c28126"],"f2126b84bd093fa3d921582a109a0ee578c28126":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a258fbb26824fd104ed795e5d9033d2d040049ee","f2126b84bd093fa3d921582a109a0ee578c28126","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}