{"path":"solr/test-framework/src/java/org/apache/solr/SolrTestCaseJ4#copySolrHomeToTemp(File,String).mjava","commits":[{"id":"e0571cb12a71d379cc6bd0d3b70fe1d8867a109d","date":1377475564,"type":0,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/SolrTestCaseJ4#copySolrHomeToTemp(File,String).mjava","pathOld":"/dev/null","sourceNew":"  // Creates a consistent configuration, _including_ solr.xml at dstRoot. Creates collection1/conf and copies\n  // the stock files in there. Seems to be indicated for some tests when we remove the default, hard-coded\n  // solr.xml from being automatically synthesized from SolrConfigXmlOld.DEFAULT_SOLR_XML.\n  public static void copySolrHomeToTemp(File dstRoot, String collection) throws IOException {\n    if (!dstRoot.exists()) {\n      assertTrue(\"Failed to make subdirectory \", dstRoot.mkdirs());\n    }\n\n    FileUtils.copyFile(new File(SolrTestCaseJ4.TEST_HOME(), \"solr.xml\"), new File(dstRoot, \"solr.xml\"));\n\n    File subHome = new File(dstRoot, collection + File.separator + \"conf\");\n    String top = SolrTestCaseJ4.TEST_HOME() + \"/collection1/conf\";\n    FileUtils.copyFile(new File(top, \"currency.xml\"), new File(subHome, \"currency.xml\"));\n    FileUtils.copyFile(new File(top, \"mapping-ISOLatin1Accent.txt\"), new File(subHome, \"mapping-ISOLatin1Accent.txt\"));\n    FileUtils.copyFile(new File(top, \"old_synonyms.txt\"), new File(subHome, \"old_synonyms.txt\"));\n    FileUtils.copyFile(new File(top, \"open-exchange-rates.json\"), new File(subHome, \"open-exchange-rates.json\"));\n    FileUtils.copyFile(new File(top, \"protwords.txt\"), new File(subHome, \"protwords.txt\"));\n    FileUtils.copyFile(new File(top, \"schema.xml\"), new File(subHome, \"schema.xml\"));\n    FileUtils.copyFile(new File(top, \"solrconfig.snippet.randomindexconfig.xml\"), new File(subHome, \"solrconfig.snippet.randomindexconfig.xml\"));\n    FileUtils.copyFile(new File(top, \"solrconfig.xml\"), new File(subHome, \"solrconfig.xml\"));\n    FileUtils.copyFile(new File(top, \"stopwords.txt\"), new File(subHome, \"stopwords.txt\"));\n    FileUtils.copyFile(new File(top, \"synonyms.txt\"), new File(subHome, \"synonyms.txt\"));\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3dffec77fb8f7d0e9ca4869dddd6af94528b4576","date":1377875202,"type":0,"author":"Han Jiang","isMerge":true,"pathNew":"solr/test-framework/src/java/org/apache/solr/SolrTestCaseJ4#copySolrHomeToTemp(File,String).mjava","pathOld":"/dev/null","sourceNew":"  // Creates a consistent configuration, _including_ solr.xml at dstRoot. Creates collection1/conf and copies\n  // the stock files in there. Seems to be indicated for some tests when we remove the default, hard-coded\n  // solr.xml from being automatically synthesized from SolrConfigXmlOld.DEFAULT_SOLR_XML.\n  public static void copySolrHomeToTemp(File dstRoot, String collection) throws IOException {\n    if (!dstRoot.exists()) {\n      assertTrue(\"Failed to make subdirectory \", dstRoot.mkdirs());\n    }\n\n    FileUtils.copyFile(new File(SolrTestCaseJ4.TEST_HOME(), \"solr.xml\"), new File(dstRoot, \"solr.xml\"));\n\n    File subHome = new File(dstRoot, collection + File.separator + \"conf\");\n    String top = SolrTestCaseJ4.TEST_HOME() + \"/collection1/conf\";\n    FileUtils.copyFile(new File(top, \"currency.xml\"), new File(subHome, \"currency.xml\"));\n    FileUtils.copyFile(new File(top, \"mapping-ISOLatin1Accent.txt\"), new File(subHome, \"mapping-ISOLatin1Accent.txt\"));\n    FileUtils.copyFile(new File(top, \"old_synonyms.txt\"), new File(subHome, \"old_synonyms.txt\"));\n    FileUtils.copyFile(new File(top, \"open-exchange-rates.json\"), new File(subHome, \"open-exchange-rates.json\"));\n    FileUtils.copyFile(new File(top, \"protwords.txt\"), new File(subHome, \"protwords.txt\"));\n    FileUtils.copyFile(new File(top, \"schema.xml\"), new File(subHome, \"schema.xml\"));\n    FileUtils.copyFile(new File(top, \"solrconfig.snippet.randomindexconfig.xml\"), new File(subHome, \"solrconfig.snippet.randomindexconfig.xml\"));\n    FileUtils.copyFile(new File(top, \"solrconfig.xml\"), new File(subHome, \"solrconfig.xml\"));\n    FileUtils.copyFile(new File(top, \"stopwords.txt\"), new File(subHome, \"stopwords.txt\"));\n    FileUtils.copyFile(new File(top, \"synonyms.txt\"), new File(subHome, \"synonyms.txt\"));\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"94df854a0d36420ddbf7a4a21330bd00c2354017","date":1384538000,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/SolrTestCaseJ4#copySolrHomeToTemp(File,String).mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/SolrTestCaseJ4#copySolrHomeToTemp(File,String).mjava","sourceNew":"  // Creates a consistent configuration, _including_ solr.xml at dstRoot. Creates collection1/conf and copies\n  // the stock files in there. Seems to be indicated for some tests when we remove the default, hard-coded\n  // solr.xml from being automatically synthesized from SolrConfigXmlOld.DEFAULT_SOLR_XML.\n  public static void copySolrHomeToTemp(File dstRoot, String collection) throws IOException {\n    copySolrHomeToTemp(dstRoot, collection, false);\n  }\n\n","sourceOld":"  // Creates a consistent configuration, _including_ solr.xml at dstRoot. Creates collection1/conf and copies\n  // the stock files in there. Seems to be indicated for some tests when we remove the default, hard-coded\n  // solr.xml from being automatically synthesized from SolrConfigXmlOld.DEFAULT_SOLR_XML.\n  public static void copySolrHomeToTemp(File dstRoot, String collection) throws IOException {\n    if (!dstRoot.exists()) {\n      assertTrue(\"Failed to make subdirectory \", dstRoot.mkdirs());\n    }\n\n    FileUtils.copyFile(new File(SolrTestCaseJ4.TEST_HOME(), \"solr.xml\"), new File(dstRoot, \"solr.xml\"));\n\n    File subHome = new File(dstRoot, collection + File.separator + \"conf\");\n    String top = SolrTestCaseJ4.TEST_HOME() + \"/collection1/conf\";\n    FileUtils.copyFile(new File(top, \"currency.xml\"), new File(subHome, \"currency.xml\"));\n    FileUtils.copyFile(new File(top, \"mapping-ISOLatin1Accent.txt\"), new File(subHome, \"mapping-ISOLatin1Accent.txt\"));\n    FileUtils.copyFile(new File(top, \"old_synonyms.txt\"), new File(subHome, \"old_synonyms.txt\"));\n    FileUtils.copyFile(new File(top, \"open-exchange-rates.json\"), new File(subHome, \"open-exchange-rates.json\"));\n    FileUtils.copyFile(new File(top, \"protwords.txt\"), new File(subHome, \"protwords.txt\"));\n    FileUtils.copyFile(new File(top, \"schema.xml\"), new File(subHome, \"schema.xml\"));\n    FileUtils.copyFile(new File(top, \"solrconfig.snippet.randomindexconfig.xml\"), new File(subHome, \"solrconfig.snippet.randomindexconfig.xml\"));\n    FileUtils.copyFile(new File(top, \"solrconfig.xml\"), new File(subHome, \"solrconfig.xml\"));\n    FileUtils.copyFile(new File(top, \"stopwords.txt\"), new File(subHome, \"stopwords.txt\"));\n    FileUtils.copyFile(new File(top, \"synonyms.txt\"), new File(subHome, \"synonyms.txt\"));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"74f45af4339b0daf7a95c820ab88c1aea74fbce0","date":1387475327,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"solr/test-framework/src/java/org/apache/solr/SolrTestCaseJ4#copySolrHomeToTemp(File,String).mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/SolrTestCaseJ4#copySolrHomeToTemp(File,String).mjava","sourceNew":"  // Creates a consistent configuration, _including_ solr.xml at dstRoot. Creates collection1/conf and copies\n  // the stock files in there. Seems to be indicated for some tests when we remove the default, hard-coded\n  // solr.xml from being automatically synthesized from SolrConfigXmlOld.DEFAULT_SOLR_XML.\n  public static void copySolrHomeToTemp(File dstRoot, String collection) throws IOException {\n    copySolrHomeToTemp(dstRoot, collection, false);\n  }\n\n","sourceOld":"  // Creates a consistent configuration, _including_ solr.xml at dstRoot. Creates collection1/conf and copies\n  // the stock files in there. Seems to be indicated for some tests when we remove the default, hard-coded\n  // solr.xml from being automatically synthesized from SolrConfigXmlOld.DEFAULT_SOLR_XML.\n  public static void copySolrHomeToTemp(File dstRoot, String collection) throws IOException {\n    if (!dstRoot.exists()) {\n      assertTrue(\"Failed to make subdirectory \", dstRoot.mkdirs());\n    }\n\n    FileUtils.copyFile(new File(SolrTestCaseJ4.TEST_HOME(), \"solr.xml\"), new File(dstRoot, \"solr.xml\"));\n\n    File subHome = new File(dstRoot, collection + File.separator + \"conf\");\n    String top = SolrTestCaseJ4.TEST_HOME() + \"/collection1/conf\";\n    FileUtils.copyFile(new File(top, \"currency.xml\"), new File(subHome, \"currency.xml\"));\n    FileUtils.copyFile(new File(top, \"mapping-ISOLatin1Accent.txt\"), new File(subHome, \"mapping-ISOLatin1Accent.txt\"));\n    FileUtils.copyFile(new File(top, \"old_synonyms.txt\"), new File(subHome, \"old_synonyms.txt\"));\n    FileUtils.copyFile(new File(top, \"open-exchange-rates.json\"), new File(subHome, \"open-exchange-rates.json\"));\n    FileUtils.copyFile(new File(top, \"protwords.txt\"), new File(subHome, \"protwords.txt\"));\n    FileUtils.copyFile(new File(top, \"schema.xml\"), new File(subHome, \"schema.xml\"));\n    FileUtils.copyFile(new File(top, \"solrconfig.snippet.randomindexconfig.xml\"), new File(subHome, \"solrconfig.snippet.randomindexconfig.xml\"));\n    FileUtils.copyFile(new File(top, \"solrconfig.xml\"), new File(subHome, \"solrconfig.xml\"));\n    FileUtils.copyFile(new File(top, \"stopwords.txt\"), new File(subHome, \"stopwords.txt\"));\n    FileUtils.copyFile(new File(top, \"synonyms.txt\"), new File(subHome, \"synonyms.txt\"));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"162e1895a880a7263b46e184f1478f0366eb095c","date":1467859866,"type":3,"author":"Erick","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/SolrTestCaseJ4#copySolrHomeToTemp(File,String).mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/SolrTestCaseJ4#copySolrHomeToTemp(File,String).mjava","sourceNew":"  public static void copySolrHomeToTemp(File dstRoot, String collection) throws IOException {\n    if (!dstRoot.exists()) {\n      assertTrue(\"Failed to make subdirectory \", dstRoot.mkdirs());\n    }\n\n    FileUtils.copyFile(new File(SolrTestCaseJ4.TEST_HOME(), \"solr.xml\"), new File(dstRoot, \"solr.xml\"));\n\n    File subHome = new File(dstRoot, collection + File.separator + \"conf\");\n    String top = SolrTestCaseJ4.TEST_HOME() + \"/collection1/conf\";\n    FileUtils.copyFile(new File(top, \"currency.xml\"), new File(subHome, \"currency.xml\"));\n    FileUtils.copyFile(new File(top, \"mapping-ISOLatin1Accent.txt\"), new File(subHome, \"mapping-ISOLatin1Accent.txt\"));\n    FileUtils.copyFile(new File(top, \"old_synonyms.txt\"), new File(subHome, \"old_synonyms.txt\"));\n    FileUtils.copyFile(new File(top, \"open-exchange-rates.json\"), new File(subHome, \"open-exchange-rates.json\"));\n    FileUtils.copyFile(new File(top, \"protwords.txt\"), new File(subHome, \"protwords.txt\"));\n    FileUtils.copyFile(new File(top, \"schema.xml\"), new File(subHome, \"schema.xml\"));\n    FileUtils.copyFile(new File(top, \"enumsConfig.xml\"), new File(subHome, \"enumsConfig.xml\"));\n    FileUtils.copyFile(new File(top, \"solrconfig.snippet.randomindexconfig.xml\"), new File(subHome, \"solrconfig.snippet.randomindexconfig.xml\"));\n    FileUtils.copyFile(new File(top, \"solrconfig.xml\"), new File(subHome, \"solrconfig.xml\"));\n    FileUtils.copyFile(new File(top, \"stopwords.txt\"), new File(subHome, \"stopwords.txt\"));\n    FileUtils.copyFile(new File(top, \"synonyms.txt\"), new File(subHome, \"synonyms.txt\"));\n  }\n\n","sourceOld":"  // Creates a consistent configuration, _including_ solr.xml at dstRoot. Creates collection1/conf and copies\n  // the stock files in there. Seems to be indicated for some tests when we remove the default, hard-coded\n  // solr.xml from being automatically synthesized from SolrConfigXmlOld.DEFAULT_SOLR_XML.\n  public static void copySolrHomeToTemp(File dstRoot, String collection) throws IOException {\n    copySolrHomeToTemp(dstRoot, collection, false);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/test-framework/src/java/org/apache/solr/SolrTestCaseJ4#copySolrHomeToTemp(File,String).mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/SolrTestCaseJ4#copySolrHomeToTemp(File,String).mjava","sourceNew":"  public static void copySolrHomeToTemp(File dstRoot, String collection) throws IOException {\n    if (!dstRoot.exists()) {\n      assertTrue(\"Failed to make subdirectory \", dstRoot.mkdirs());\n    }\n\n    FileUtils.copyFile(new File(SolrTestCaseJ4.TEST_HOME(), \"solr.xml\"), new File(dstRoot, \"solr.xml\"));\n\n    File subHome = new File(dstRoot, collection + File.separator + \"conf\");\n    String top = SolrTestCaseJ4.TEST_HOME() + \"/collection1/conf\";\n    FileUtils.copyFile(new File(top, \"currency.xml\"), new File(subHome, \"currency.xml\"));\n    FileUtils.copyFile(new File(top, \"mapping-ISOLatin1Accent.txt\"), new File(subHome, \"mapping-ISOLatin1Accent.txt\"));\n    FileUtils.copyFile(new File(top, \"old_synonyms.txt\"), new File(subHome, \"old_synonyms.txt\"));\n    FileUtils.copyFile(new File(top, \"open-exchange-rates.json\"), new File(subHome, \"open-exchange-rates.json\"));\n    FileUtils.copyFile(new File(top, \"protwords.txt\"), new File(subHome, \"protwords.txt\"));\n    FileUtils.copyFile(new File(top, \"schema.xml\"), new File(subHome, \"schema.xml\"));\n    FileUtils.copyFile(new File(top, \"enumsConfig.xml\"), new File(subHome, \"enumsConfig.xml\"));\n    FileUtils.copyFile(new File(top, \"solrconfig.snippet.randomindexconfig.xml\"), new File(subHome, \"solrconfig.snippet.randomindexconfig.xml\"));\n    FileUtils.copyFile(new File(top, \"solrconfig.xml\"), new File(subHome, \"solrconfig.xml\"));\n    FileUtils.copyFile(new File(top, \"stopwords.txt\"), new File(subHome, \"stopwords.txt\"));\n    FileUtils.copyFile(new File(top, \"synonyms.txt\"), new File(subHome, \"synonyms.txt\"));\n  }\n\n","sourceOld":"  // Creates a consistent configuration, _including_ solr.xml at dstRoot. Creates collection1/conf and copies\n  // the stock files in there. Seems to be indicated for some tests when we remove the default, hard-coded\n  // solr.xml from being automatically synthesized from SolrConfigXmlOld.DEFAULT_SOLR_XML.\n  public static void copySolrHomeToTemp(File dstRoot, String collection) throws IOException {\n    copySolrHomeToTemp(dstRoot, collection, false);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9435d55e3ea95c5d94406d3affc36f9505b6a736","date":1491251232,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/SolrTestCaseJ4#copySolrHomeToTemp(File,String).mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/SolrTestCaseJ4#copySolrHomeToTemp(File,String).mjava","sourceNew":"  public static void copySolrHomeToTemp(File dstRoot, String collection) throws IOException {\n    if (!dstRoot.exists()) {\n      assertTrue(\"Failed to make subdirectory \", dstRoot.mkdirs());\n    }\n    FileUtils.copyFile(new File(SolrTestCaseJ4.TEST_HOME(), \"solr.xml\"), new File(dstRoot, \"solr.xml\"));\n\n    File subHome = new File(dstRoot, collection + File.separator + \"conf\");\n    String top = SolrTestCaseJ4.TEST_HOME() + \"/collection1/conf\";\n    FileUtils.copyFile(new File(top, \"currency.xml\"), new File(subHome, \"currency.xml\"));\n    FileUtils.copyFile(new File(top, \"mapping-ISOLatin1Accent.txt\"), new File(subHome, \"mapping-ISOLatin1Accent.txt\"));\n    FileUtils.copyFile(new File(top, \"old_synonyms.txt\"), new File(subHome, \"old_synonyms.txt\"));\n    FileUtils.copyFile(new File(top, \"open-exchange-rates.json\"), new File(subHome, \"open-exchange-rates.json\"));\n    FileUtils.copyFile(new File(top, \"protwords.txt\"), new File(subHome, \"protwords.txt\"));\n    FileUtils.copyFile(new File(top, \"schema.xml\"), new File(subHome, \"schema.xml\"));\n    FileUtils.copyFile(new File(top, \"enumsConfig.xml\"), new File(subHome, \"enumsConfig.xml\"));\n    FileUtils.copyFile(new File(top, \"solrconfig.snippet.randomindexconfig.xml\"), new File(subHome, \"solrconfig.snippet.randomindexconfig.xml\"));\n    FileUtils.copyFile(new File(top, \"solrconfig.xml\"), new File(subHome, \"solrconfig.xml\"));\n    FileUtils.copyFile(new File(top, \"stopwords.txt\"), new File(subHome, \"stopwords.txt\"));\n    FileUtils.copyFile(new File(top, \"synonyms.txt\"), new File(subHome, \"synonyms.txt\"));\n  }\n\n","sourceOld":"  public static void copySolrHomeToTemp(File dstRoot, String collection) throws IOException {\n    if (!dstRoot.exists()) {\n      assertTrue(\"Failed to make subdirectory \", dstRoot.mkdirs());\n    }\n\n    FileUtils.copyFile(new File(SolrTestCaseJ4.TEST_HOME(), \"solr.xml\"), new File(dstRoot, \"solr.xml\"));\n\n    File subHome = new File(dstRoot, collection + File.separator + \"conf\");\n    String top = SolrTestCaseJ4.TEST_HOME() + \"/collection1/conf\";\n    FileUtils.copyFile(new File(top, \"currency.xml\"), new File(subHome, \"currency.xml\"));\n    FileUtils.copyFile(new File(top, \"mapping-ISOLatin1Accent.txt\"), new File(subHome, \"mapping-ISOLatin1Accent.txt\"));\n    FileUtils.copyFile(new File(top, \"old_synonyms.txt\"), new File(subHome, \"old_synonyms.txt\"));\n    FileUtils.copyFile(new File(top, \"open-exchange-rates.json\"), new File(subHome, \"open-exchange-rates.json\"));\n    FileUtils.copyFile(new File(top, \"protwords.txt\"), new File(subHome, \"protwords.txt\"));\n    FileUtils.copyFile(new File(top, \"schema.xml\"), new File(subHome, \"schema.xml\"));\n    FileUtils.copyFile(new File(top, \"enumsConfig.xml\"), new File(subHome, \"enumsConfig.xml\"));\n    FileUtils.copyFile(new File(top, \"solrconfig.snippet.randomindexconfig.xml\"), new File(subHome, \"solrconfig.snippet.randomindexconfig.xml\"));\n    FileUtils.copyFile(new File(top, \"solrconfig.xml\"), new File(subHome, \"solrconfig.xml\"));\n    FileUtils.copyFile(new File(top, \"stopwords.txt\"), new File(subHome, \"stopwords.txt\"));\n    FileUtils.copyFile(new File(top, \"synonyms.txt\"), new File(subHome, \"synonyms.txt\"));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8b6a4b585aed7660a589375f6a09b90efd29c961","date":1491296430,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/SolrTestCaseJ4#copySolrHomeToTemp(File,String).mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/SolrTestCaseJ4#copySolrHomeToTemp(File,String).mjava","sourceNew":"  public static void copySolrHomeToTemp(File dstRoot, String collection) throws IOException {\n    if (!dstRoot.exists()) {\n      assertTrue(\"Failed to make subdirectory \", dstRoot.mkdirs());\n    }\n    FileUtils.copyFile(new File(SolrTestCaseJ4.TEST_HOME(), \"solr.xml\"), new File(dstRoot, \"solr.xml\"));\n\n    File subHome = new File(dstRoot, collection + File.separator + \"conf\");\n    String top = SolrTestCaseJ4.TEST_HOME() + \"/collection1/conf\";\n    FileUtils.copyFile(new File(top, \"currency.xml\"), new File(subHome, \"currency.xml\"));\n    FileUtils.copyFile(new File(top, \"mapping-ISOLatin1Accent.txt\"), new File(subHome, \"mapping-ISOLatin1Accent.txt\"));\n    FileUtils.copyFile(new File(top, \"old_synonyms.txt\"), new File(subHome, \"old_synonyms.txt\"));\n    FileUtils.copyFile(new File(top, \"open-exchange-rates.json\"), new File(subHome, \"open-exchange-rates.json\"));\n    FileUtils.copyFile(new File(top, \"protwords.txt\"), new File(subHome, \"protwords.txt\"));\n    FileUtils.copyFile(new File(top, \"schema.xml\"), new File(subHome, \"schema.xml\"));\n    FileUtils.copyFile(new File(top, \"enumsConfig.xml\"), new File(subHome, \"enumsConfig.xml\"));\n    FileUtils.copyFile(new File(top, \"solrconfig.snippet.randomindexconfig.xml\"), new File(subHome, \"solrconfig.snippet.randomindexconfig.xml\"));\n    FileUtils.copyFile(new File(top, \"solrconfig.xml\"), new File(subHome, \"solrconfig.xml\"));\n    FileUtils.copyFile(new File(top, \"stopwords.txt\"), new File(subHome, \"stopwords.txt\"));\n    FileUtils.copyFile(new File(top, \"synonyms.txt\"), new File(subHome, \"synonyms.txt\"));\n  }\n\n","sourceOld":"  public static void copySolrHomeToTemp(File dstRoot, String collection) throws IOException {\n    if (!dstRoot.exists()) {\n      assertTrue(\"Failed to make subdirectory \", dstRoot.mkdirs());\n    }\n\n    FileUtils.copyFile(new File(SolrTestCaseJ4.TEST_HOME(), \"solr.xml\"), new File(dstRoot, \"solr.xml\"));\n\n    File subHome = new File(dstRoot, collection + File.separator + \"conf\");\n    String top = SolrTestCaseJ4.TEST_HOME() + \"/collection1/conf\";\n    FileUtils.copyFile(new File(top, \"currency.xml\"), new File(subHome, \"currency.xml\"));\n    FileUtils.copyFile(new File(top, \"mapping-ISOLatin1Accent.txt\"), new File(subHome, \"mapping-ISOLatin1Accent.txt\"));\n    FileUtils.copyFile(new File(top, \"old_synonyms.txt\"), new File(subHome, \"old_synonyms.txt\"));\n    FileUtils.copyFile(new File(top, \"open-exchange-rates.json\"), new File(subHome, \"open-exchange-rates.json\"));\n    FileUtils.copyFile(new File(top, \"protwords.txt\"), new File(subHome, \"protwords.txt\"));\n    FileUtils.copyFile(new File(top, \"schema.xml\"), new File(subHome, \"schema.xml\"));\n    FileUtils.copyFile(new File(top, \"enumsConfig.xml\"), new File(subHome, \"enumsConfig.xml\"));\n    FileUtils.copyFile(new File(top, \"solrconfig.snippet.randomindexconfig.xml\"), new File(subHome, \"solrconfig.snippet.randomindexconfig.xml\"));\n    FileUtils.copyFile(new File(top, \"solrconfig.xml\"), new File(subHome, \"solrconfig.xml\"));\n    FileUtils.copyFile(new File(top, \"stopwords.txt\"), new File(subHome, \"stopwords.txt\"));\n    FileUtils.copyFile(new File(top, \"synonyms.txt\"), new File(subHome, \"synonyms.txt\"));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"9435d55e3ea95c5d94406d3affc36f9505b6a736":["162e1895a880a7263b46e184f1478f0366eb095c"],"162e1895a880a7263b46e184f1478f0366eb095c":["94df854a0d36420ddbf7a4a21330bd00c2354017"],"e0571cb12a71d379cc6bd0d3b70fe1d8867a109d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"94df854a0d36420ddbf7a4a21330bd00c2354017":["e0571cb12a71d379cc6bd0d3b70fe1d8867a109d"],"3dffec77fb8f7d0e9ca4869dddd6af94528b4576":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","e0571cb12a71d379cc6bd0d3b70fe1d8867a109d"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"74f45af4339b0daf7a95c820ab88c1aea74fbce0":["e0571cb12a71d379cc6bd0d3b70fe1d8867a109d","94df854a0d36420ddbf7a4a21330bd00c2354017"],"8b6a4b585aed7660a589375f6a09b90efd29c961":["162e1895a880a7263b46e184f1478f0366eb095c"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["94df854a0d36420ddbf7a4a21330bd00c2354017","162e1895a880a7263b46e184f1478f0366eb095c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9435d55e3ea95c5d94406d3affc36f9505b6a736"]},"commit2Childs":{"9435d55e3ea95c5d94406d3affc36f9505b6a736":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"162e1895a880a7263b46e184f1478f0366eb095c":["9435d55e3ea95c5d94406d3affc36f9505b6a736","8b6a4b585aed7660a589375f6a09b90efd29c961","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"e0571cb12a71d379cc6bd0d3b70fe1d8867a109d":["94df854a0d36420ddbf7a4a21330bd00c2354017","3dffec77fb8f7d0e9ca4869dddd6af94528b4576","74f45af4339b0daf7a95c820ab88c1aea74fbce0"],"94df854a0d36420ddbf7a4a21330bd00c2354017":["162e1895a880a7263b46e184f1478f0366eb095c","74f45af4339b0daf7a95c820ab88c1aea74fbce0","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"3dffec77fb8f7d0e9ca4869dddd6af94528b4576":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["e0571cb12a71d379cc6bd0d3b70fe1d8867a109d","3dffec77fb8f7d0e9ca4869dddd6af94528b4576"],"74f45af4339b0daf7a95c820ab88c1aea74fbce0":[],"8b6a4b585aed7660a589375f6a09b90efd29c961":[],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["3dffec77fb8f7d0e9ca4869dddd6af94528b4576","74f45af4339b0daf7a95c820ab88c1aea74fbce0","8b6a4b585aed7660a589375f6a09b90efd29c961","4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}