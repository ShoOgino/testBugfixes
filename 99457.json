{"path":"lucene/spatial3d/src/test/org/apache/lucene/spatial3d/geom/GeoPolygonTest#testLUCENE8227_case2().mjava","commits":[{"id":"6531d2d5e270ac1ccb114e6a380ab253e6ed1a7e","date":1522413407,"type":0,"author":"Karl Wright","isMerge":false,"pathNew":"lucene/spatial3d/src/test/org/apache/lucene/spatial3d/geom/GeoPolygonTest#testLUCENE8227_case2().mjava","pathOld":"/dev/null","sourceNew":"  /*\n   [junit4]   1>     doc=754 is contained by shape but is outside the returned XYZBounds\n   [junit4]   1>       unquantized=[lat=2.4043303687704734E-204, lon=3.1342447995980507([X=-1.0010918284309325, Y=0.007356008974104805, Z=2.4070204634028112E-204])]\n   [junit4]   1>       quantized=[X=-1.0010918285430614, Y=0.007356008812298254, Z=2.3309121299774915E-10]\n\n   [junit4]   1>     doc=3728 is contained by shape but is outside the returned XYZBounds\n   [junit4]   1>       unquantized=[lat=2.4457272005608357E-47, lon=-3.1404077424936307([X=-1.001118151199965, Y=-0.0011862365610909341, Z=2.448463612203698E-47])]\n   [junit4]   1>       quantized=[X=-1.0011181510675629, Y=-0.001186236379718708, Z=2.3309121299774915E-10]\n   \n   [junit4]   1>   shape=GeoComplexPolygon: {planetmodel=PlanetModel.WGS84, number of shapes=1, address=7969cab3, \n   testPoint=[X=-0.07416172733314662, Y=0.5686488061136892, Z=0.8178445379402641], testPointInSet=true, shapes={ {\n   [lat=-1.5707963267948966, lon=-1.0755217966112058([X=2.903696886845155E-17, Y=-5.375400029710238E-17, Z=-0.997762292022105])], \n   [lat=-1.327365682666958, lon=-2.9674513704178316([X=-0.23690293696956322, Y=-0.04167672037374933, Z=-0.9685334156912658])], \n   [lat=0.32288591161895097, lon=3.141592653589793([X=-0.9490627533610154, Y=1.1622666630935417E-16, Z=0.3175519551883462])], \n   [lat=0.0, lon=0.0([X=1.0011188539924791, Y=0.0, Z=0.0])], \n   [lat=0.2839194570254642, lon=-1.2434404554202965([X=0.30893121415043073, Y=-0.9097632721627391, Z=0.2803596238536593])]}}\n  */\n  @Test\n  public void testLUCENE8227_case2() {\n    List<GeoPoint> points = new ArrayList<>();\n    points.add(new GeoPoint(PlanetModel.WGS84, -1.5707963267948966, -1.0755217966112058));\n    points.add(new GeoPoint(PlanetModel.WGS84, -1.327365682666958, -2.9674513704178316));\n    points.add(new GeoPoint(PlanetModel.WGS84, 0.32288591161895097, 3.141592653589793));\n    points.add(new GeoPoint(PlanetModel.WGS84, 0.0, 0.0));\n    points.add(new GeoPoint(PlanetModel.WGS84, 0.2839194570254642, -1.2434404554202965));\n    GeoPolygonFactory.PolygonDescription pd = new GeoPolygonFactory.PolygonDescription(points);\n    \n    for (int i = 0; i < points.size(); i++) {\n      System.out.println(\"Point \"+i+\": \"+points.get(i));\n    }\n\n    final GeoPoint unquantized = new GeoPoint(PlanetModel.WGS84, 2.4457272005608357E-47, -3.1404077424936307);\n    final GeoPoint quantized = new GeoPoint(-1.0011181510675629, -0.001186236379718708, 2.3309121299774915E-10);\n    \n    // Is the north pole in set, or out of set?\n    final GeoPoint northPole = new GeoPoint(PlanetModel.WGS84, Math.PI * 0.5, 0.0);\n    final GeoPoint negativeX = new GeoPoint(PlanetModel.WGS84, 0.0, Math.PI);\n    final GeoPoint negativeY = new GeoPoint(PlanetModel.WGS84, 0.0, -Math.PI * 0.5);\n    final GeoPoint positiveY = new GeoPoint(PlanetModel.WGS84, 0.0, Math.PI * 0.5);\n    final GeoPoint testPoint = new GeoPoint(-0.07416172733314662, 0.5686488061136892, 0.8178445379402641);\n\n    // Construct a standard polygon first to see what that does.  This winds up being a large polygon under the covers.\n    GeoPolygon standard = GeoPolygonFactory.makeGeoPolygon(PlanetModel.WGS84, pd);\n    \n    System.out.println(\"Shape = \"+standard);\n\n    // This should be true, by inspection, but is false.  That's the cause for the failure.\n    assertTrue(standard.isWithin(negativeX));\n    System.out.println(\"Negative x pole in set? \"+standard.isWithin(negativeX));\n    \n    System.out.println(\"Test point in set? \"+standard.isWithin(testPoint));\n    assertTrue(standard.isWithin(testPoint));\n    \n    // This is in-set because it's on an edge\n    System.out.println(\"North pole in set? \"+standard.isWithin(northPole));\n    assertTrue(standard.isWithin(northPole));\n    \n    // This is in-set\n    System.out.println(\"Plus-Y pole in set? \"+standard.isWithin(positiveY));\n    assertTrue(standard.isWithin(positiveY));\n    \n\n    final XYZBounds standardBounds = new XYZBounds();\n    standard.getBounds(standardBounds);\n    System.out.println(\"Bounds = \"+standardBounds);\n    final XYZSolid standardSolid = XYZSolidFactory.makeXYZSolid(PlanetModel.WGS84, standardBounds);\n\n    // If within shape, should be within bounds\n    assertTrue(standard.isWithin(unquantized)?standardSolid.isWithin(unquantized):true);\n    assertTrue(standard.isWithin(quantized)?standardSolid.isWithin(quantized):true);\n\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"44c3a4ebfa1a780298de8b00afc0722c16233080","date":1522505029,"type":3,"author":"Karl Wright","isMerge":false,"pathNew":"lucene/spatial3d/src/test/org/apache/lucene/spatial3d/geom/GeoPolygonTest#testLUCENE8227_case2().mjava","pathOld":"lucene/spatial3d/src/test/org/apache/lucene/spatial3d/geom/GeoPolygonTest#testLUCENE8227_case2().mjava","sourceNew":"  /*\n   [junit4]   1>     doc=754 is contained by shape but is outside the returned XYZBounds\n   [junit4]   1>       unquantized=[lat=2.4043303687704734E-204, lon=3.1342447995980507([X=-1.0010918284309325, Y=0.007356008974104805, Z=2.4070204634028112E-204])]\n   [junit4]   1>       quantized=[X=-1.0010918285430614, Y=0.007356008812298254, Z=2.3309121299774915E-10]\n\n   [junit4]   1>     doc=3728 is contained by shape but is outside the returned XYZBounds\n   [junit4]   1>       unquantized=[lat=2.4457272005608357E-47, lon=-3.1404077424936307([X=-1.001118151199965, Y=-0.0011862365610909341, Z=2.448463612203698E-47])]\n   [junit4]   1>       quantized=[X=-1.0011181510675629, Y=-0.001186236379718708, Z=2.3309121299774915E-10]\n   \n   [junit4]   1>   shape=GeoComplexPolygon: {planetmodel=PlanetModel.WGS84, number of shapes=1, address=7969cab3, \n   testPoint=[X=-0.07416172733314662, Y=0.5686488061136892, Z=0.8178445379402641], testPointInSet=true, shapes={ {\n   [lat=-1.5707963267948966, lon=-1.0755217966112058([X=2.903696886845155E-17, Y=-5.375400029710238E-17, Z=-0.997762292022105])], \n   [lat=-1.327365682666958, lon=-2.9674513704178316([X=-0.23690293696956322, Y=-0.04167672037374933, Z=-0.9685334156912658])], \n   [lat=0.32288591161895097, lon=3.141592653589793([X=-0.9490627533610154, Y=1.1622666630935417E-16, Z=0.3175519551883462])], \n   [lat=0.0, lon=0.0([X=1.0011188539924791, Y=0.0, Z=0.0])], \n   [lat=0.2839194570254642, lon=-1.2434404554202965([X=0.30893121415043073, Y=-0.9097632721627391, Z=0.2803596238536593])]}}\n  */\n  @Test\n  public void testLUCENE8227_case2() {\n    List<GeoPoint> points = new ArrayList<>();\n    points.add(new GeoPoint(PlanetModel.WGS84, -1.5707963267948966, -1.0755217966112058));\n    points.add(new GeoPoint(PlanetModel.WGS84, -1.327365682666958, -2.9674513704178316));\n    points.add(new GeoPoint(PlanetModel.WGS84, 0.32288591161895097, 3.141592653589793));\n    points.add(new GeoPoint(PlanetModel.WGS84, 0.0, 0.0));\n    points.add(new GeoPoint(PlanetModel.WGS84, 0.2839194570254642, -1.2434404554202965));\n    GeoPolygonFactory.PolygonDescription pd = new GeoPolygonFactory.PolygonDescription(points);\n    \n    final GeoPoint unquantized = new GeoPoint(PlanetModel.WGS84, 2.4457272005608357E-47, -3.1404077424936307);\n    final GeoPoint quantized = new GeoPoint(-1.0011181510675629, -0.001186236379718708, 2.3309121299774915E-10);\n    \n    // Is the north pole in set, or out of set?\n    final GeoPoint northPole = new GeoPoint(PlanetModel.WGS84, Math.PI * 0.5, 0.0);\n    final GeoPoint negativeX = new GeoPoint(PlanetModel.WGS84, 0.0, Math.PI);\n    final GeoPoint negativeY = new GeoPoint(PlanetModel.WGS84, 0.0, -Math.PI * 0.5);\n    final GeoPoint positiveY = new GeoPoint(PlanetModel.WGS84, 0.0, Math.PI * 0.5);\n    final GeoPoint testPoint = new GeoPoint(-0.07416172733314662, 0.5686488061136892, 0.8178445379402641);\n\n    // Construct a standard polygon first to see what that does.  This winds up being a large polygon under the covers.\n    GeoPolygon standard = GeoPolygonFactory.makeGeoPolygon(PlanetModel.WGS84, pd);\n    \n    // This should be true, by inspection, but is false.  That's the cause for the failure.\n    assertTrue(standard.isWithin(negativeX));\n    \n    assertTrue(standard.isWithin(testPoint));\n    \n    // This is in-set because it's on an edge\n    assertTrue(standard.isWithin(northPole));\n    \n    // This is in-set\n    assertTrue(standard.isWithin(positiveY));\n    \n\n    final XYZBounds standardBounds = new XYZBounds();\n    standard.getBounds(standardBounds);\n    final XYZSolid standardSolid = XYZSolidFactory.makeXYZSolid(PlanetModel.WGS84, standardBounds);\n\n    // If within shape, should be within bounds\n    assertTrue(standard.isWithin(unquantized)?standardSolid.isWithin(unquantized):true);\n    assertTrue(standard.isWithin(quantized)?standardSolid.isWithin(quantized):true);\n\n  }\n\n","sourceOld":"  /*\n   [junit4]   1>     doc=754 is contained by shape but is outside the returned XYZBounds\n   [junit4]   1>       unquantized=[lat=2.4043303687704734E-204, lon=3.1342447995980507([X=-1.0010918284309325, Y=0.007356008974104805, Z=2.4070204634028112E-204])]\n   [junit4]   1>       quantized=[X=-1.0010918285430614, Y=0.007356008812298254, Z=2.3309121299774915E-10]\n\n   [junit4]   1>     doc=3728 is contained by shape but is outside the returned XYZBounds\n   [junit4]   1>       unquantized=[lat=2.4457272005608357E-47, lon=-3.1404077424936307([X=-1.001118151199965, Y=-0.0011862365610909341, Z=2.448463612203698E-47])]\n   [junit4]   1>       quantized=[X=-1.0011181510675629, Y=-0.001186236379718708, Z=2.3309121299774915E-10]\n   \n   [junit4]   1>   shape=GeoComplexPolygon: {planetmodel=PlanetModel.WGS84, number of shapes=1, address=7969cab3, \n   testPoint=[X=-0.07416172733314662, Y=0.5686488061136892, Z=0.8178445379402641], testPointInSet=true, shapes={ {\n   [lat=-1.5707963267948966, lon=-1.0755217966112058([X=2.903696886845155E-17, Y=-5.375400029710238E-17, Z=-0.997762292022105])], \n   [lat=-1.327365682666958, lon=-2.9674513704178316([X=-0.23690293696956322, Y=-0.04167672037374933, Z=-0.9685334156912658])], \n   [lat=0.32288591161895097, lon=3.141592653589793([X=-0.9490627533610154, Y=1.1622666630935417E-16, Z=0.3175519551883462])], \n   [lat=0.0, lon=0.0([X=1.0011188539924791, Y=0.0, Z=0.0])], \n   [lat=0.2839194570254642, lon=-1.2434404554202965([X=0.30893121415043073, Y=-0.9097632721627391, Z=0.2803596238536593])]}}\n  */\n  @Test\n  public void testLUCENE8227_case2() {\n    List<GeoPoint> points = new ArrayList<>();\n    points.add(new GeoPoint(PlanetModel.WGS84, -1.5707963267948966, -1.0755217966112058));\n    points.add(new GeoPoint(PlanetModel.WGS84, -1.327365682666958, -2.9674513704178316));\n    points.add(new GeoPoint(PlanetModel.WGS84, 0.32288591161895097, 3.141592653589793));\n    points.add(new GeoPoint(PlanetModel.WGS84, 0.0, 0.0));\n    points.add(new GeoPoint(PlanetModel.WGS84, 0.2839194570254642, -1.2434404554202965));\n    GeoPolygonFactory.PolygonDescription pd = new GeoPolygonFactory.PolygonDescription(points);\n    \n    for (int i = 0; i < points.size(); i++) {\n      System.out.println(\"Point \"+i+\": \"+points.get(i));\n    }\n\n    final GeoPoint unquantized = new GeoPoint(PlanetModel.WGS84, 2.4457272005608357E-47, -3.1404077424936307);\n    final GeoPoint quantized = new GeoPoint(-1.0011181510675629, -0.001186236379718708, 2.3309121299774915E-10);\n    \n    // Is the north pole in set, or out of set?\n    final GeoPoint northPole = new GeoPoint(PlanetModel.WGS84, Math.PI * 0.5, 0.0);\n    final GeoPoint negativeX = new GeoPoint(PlanetModel.WGS84, 0.0, Math.PI);\n    final GeoPoint negativeY = new GeoPoint(PlanetModel.WGS84, 0.0, -Math.PI * 0.5);\n    final GeoPoint positiveY = new GeoPoint(PlanetModel.WGS84, 0.0, Math.PI * 0.5);\n    final GeoPoint testPoint = new GeoPoint(-0.07416172733314662, 0.5686488061136892, 0.8178445379402641);\n\n    // Construct a standard polygon first to see what that does.  This winds up being a large polygon under the covers.\n    GeoPolygon standard = GeoPolygonFactory.makeGeoPolygon(PlanetModel.WGS84, pd);\n    \n    System.out.println(\"Shape = \"+standard);\n\n    // This should be true, by inspection, but is false.  That's the cause for the failure.\n    assertTrue(standard.isWithin(negativeX));\n    System.out.println(\"Negative x pole in set? \"+standard.isWithin(negativeX));\n    \n    System.out.println(\"Test point in set? \"+standard.isWithin(testPoint));\n    assertTrue(standard.isWithin(testPoint));\n    \n    // This is in-set because it's on an edge\n    System.out.println(\"North pole in set? \"+standard.isWithin(northPole));\n    assertTrue(standard.isWithin(northPole));\n    \n    // This is in-set\n    System.out.println(\"Plus-Y pole in set? \"+standard.isWithin(positiveY));\n    assertTrue(standard.isWithin(positiveY));\n    \n\n    final XYZBounds standardBounds = new XYZBounds();\n    standard.getBounds(standardBounds);\n    System.out.println(\"Bounds = \"+standardBounds);\n    final XYZSolid standardSolid = XYZSolidFactory.makeXYZSolid(PlanetModel.WGS84, standardBounds);\n\n    // If within shape, should be within bounds\n    assertTrue(standard.isWithin(unquantized)?standardSolid.isWithin(unquantized):true);\n    assertTrue(standard.isWithin(quantized)?standardSolid.isWithin(quantized):true);\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c33ed6824db1d3c54aaf0208e68c3df3fd43d93a","date":1583186777,"type":3,"author":"Nicholas Knize","isMerge":false,"pathNew":"lucene/spatial3d/src/test/org/apache/lucene/spatial3d/geom/GeoPolygonTest#testLUCENE8227_case2().mjava","pathOld":"lucene/spatial3d/src/test/org/apache/lucene/spatial3d/geom/GeoPolygonTest#testLUCENE8227_case2().mjava","sourceNew":"  /*\n   [junit4]   1>     doc=754 is contained by shape but is outside the returned XYZBounds\n   [junit4]   1>       unquantized=[lat=2.4043303687704734E-204, lon=3.1342447995980507([X=-1.0010918284309325, Y=0.007356008974104805, Z=2.4070204634028112E-204])]\n   [junit4]   1>       quantized=[X=-1.0010918285430614, Y=0.007356008812298254, Z=2.3309121299774915E-10]\n\n   [junit4]   1>     doc=3728 is contained by shape but is outside the returned XYZBounds\n   [junit4]   1>       unquantized=[lat=2.4457272005608357E-47, lon=-3.1404077424936307([X=-1.001118151199965, Y=-0.0011862365610909341, Z=2.448463612203698E-47])]\n   [junit4]   1>       quantized=[X=-1.0011181510675629, Y=-0.001186236379718708, Z=2.3309121299774915E-10]\n   \n   [junit4]   1>   shape=GeoComplexPolygon: {planetmodel=PlanetModel.WGS84, number of shapes=1, address=7969cab3, \n   testPoint=[X=-0.07416172733314662, Y=0.5686488061136892, Z=0.8178445379402641], testPointInSet=true, shapes={ {\n   [lat=-1.5707963267948966, lon=-1.0755217966112058([X=2.903696886845155E-17, Y=-5.375400029710238E-17, Z=-0.997762292022105])], \n   [lat=-1.327365682666958, lon=-2.9674513704178316([X=-0.23690293696956322, Y=-0.04167672037374933, Z=-0.9685334156912658])], \n   [lat=0.32288591161895097, lon=3.141592653589793([X=-0.9490627533610154, Y=1.1622666630935417E-16, Z=0.3175519551883462])], \n   [lat=0.0, lon=0.0([X=1.0011188539924791, Y=0.0, Z=0.0])], \n   [lat=0.2839194570254642, lon=-1.2434404554202965([X=0.30893121415043073, Y=-0.9097632721627391, Z=0.2803596238536593])]}}\n  */\n  @Test\n  public void testLUCENE8227_case2() {\n    List<GeoPoint> points = new ArrayList<>();\n    points.add(new GeoPoint(PlanetModel.WGS84, -1.5707963267948966, -1.0755217966112058));\n    points.add(new GeoPoint(PlanetModel.WGS84, -1.327365682666958, -2.9674513704178316));\n    points.add(new GeoPoint(PlanetModel.WGS84, 0.32288591161895097, 3.141592653589793));\n    points.add(new GeoPoint(PlanetModel.WGS84, 0.0, 0.0));\n    points.add(new GeoPoint(PlanetModel.WGS84, 0.2839194570254642, -1.2434404554202965));\n    GeoPolygonFactory.PolygonDescription pd = new GeoPolygonFactory.PolygonDescription(points);\n    \n    final GeoPoint unquantized = new GeoPoint(PlanetModel.WGS84, 2.4457272005608357E-47, -3.1404077424936307);\n    final GeoPoint quantized = new GeoPoint(-1.0011181510675629, -0.001186236379718708, 2.3309121299774915E-10);\n    \n    // Is the north pole in set, or out of set?\n    final GeoPoint northPole = new GeoPoint(PlanetModel.WGS84, Math.PI * 0.5, 0.0);\n    final GeoPoint negativeX = new GeoPoint(PlanetModel.WGS84, 0.0, Math.PI);\n    final GeoPoint negativeY = new GeoPoint(PlanetModel.WGS84, 0.0, -Math.PI * 0.5);\n    final GeoPoint positiveY = new GeoPoint(PlanetModel.WGS84, 0.0, Math.PI * 0.5);\n    final GeoPoint testPoint = new GeoPoint(-0.074161727332972, 0.5686488061123504, 0.8178445379383386);\n\n    // Construct a standard polygon first to see what that does.  This winds up being a large polygon under the covers.\n    GeoPolygon standard = GeoPolygonFactory.makeGeoPolygon(PlanetModel.WGS84, pd);\n    \n    // This should be true, by inspection, but is false.  That's the cause for the failure.\n    assertTrue(standard.isWithin(negativeX));\n    \n    assertTrue(standard.isWithin(testPoint));\n    \n    // This is in-set because it's on an edge\n    assertTrue(standard.isWithin(northPole));\n    \n    // This is in-set\n    assertTrue(standard.isWithin(positiveY));\n    \n\n    final XYZBounds standardBounds = new XYZBounds();\n    standard.getBounds(standardBounds);\n    final XYZSolid standardSolid = XYZSolidFactory.makeXYZSolid(PlanetModel.WGS84, standardBounds);\n\n    // If within shape, should be within bounds\n    assertTrue(standard.isWithin(unquantized)?standardSolid.isWithin(unquantized):true);\n    assertTrue(standard.isWithin(quantized)?standardSolid.isWithin(quantized):true);\n\n  }\n\n","sourceOld":"  /*\n   [junit4]   1>     doc=754 is contained by shape but is outside the returned XYZBounds\n   [junit4]   1>       unquantized=[lat=2.4043303687704734E-204, lon=3.1342447995980507([X=-1.0010918284309325, Y=0.007356008974104805, Z=2.4070204634028112E-204])]\n   [junit4]   1>       quantized=[X=-1.0010918285430614, Y=0.007356008812298254, Z=2.3309121299774915E-10]\n\n   [junit4]   1>     doc=3728 is contained by shape but is outside the returned XYZBounds\n   [junit4]   1>       unquantized=[lat=2.4457272005608357E-47, lon=-3.1404077424936307([X=-1.001118151199965, Y=-0.0011862365610909341, Z=2.448463612203698E-47])]\n   [junit4]   1>       quantized=[X=-1.0011181510675629, Y=-0.001186236379718708, Z=2.3309121299774915E-10]\n   \n   [junit4]   1>   shape=GeoComplexPolygon: {planetmodel=PlanetModel.WGS84, number of shapes=1, address=7969cab3, \n   testPoint=[X=-0.07416172733314662, Y=0.5686488061136892, Z=0.8178445379402641], testPointInSet=true, shapes={ {\n   [lat=-1.5707963267948966, lon=-1.0755217966112058([X=2.903696886845155E-17, Y=-5.375400029710238E-17, Z=-0.997762292022105])], \n   [lat=-1.327365682666958, lon=-2.9674513704178316([X=-0.23690293696956322, Y=-0.04167672037374933, Z=-0.9685334156912658])], \n   [lat=0.32288591161895097, lon=3.141592653589793([X=-0.9490627533610154, Y=1.1622666630935417E-16, Z=0.3175519551883462])], \n   [lat=0.0, lon=0.0([X=1.0011188539924791, Y=0.0, Z=0.0])], \n   [lat=0.2839194570254642, lon=-1.2434404554202965([X=0.30893121415043073, Y=-0.9097632721627391, Z=0.2803596238536593])]}}\n  */\n  @Test\n  public void testLUCENE8227_case2() {\n    List<GeoPoint> points = new ArrayList<>();\n    points.add(new GeoPoint(PlanetModel.WGS84, -1.5707963267948966, -1.0755217966112058));\n    points.add(new GeoPoint(PlanetModel.WGS84, -1.327365682666958, -2.9674513704178316));\n    points.add(new GeoPoint(PlanetModel.WGS84, 0.32288591161895097, 3.141592653589793));\n    points.add(new GeoPoint(PlanetModel.WGS84, 0.0, 0.0));\n    points.add(new GeoPoint(PlanetModel.WGS84, 0.2839194570254642, -1.2434404554202965));\n    GeoPolygonFactory.PolygonDescription pd = new GeoPolygonFactory.PolygonDescription(points);\n    \n    final GeoPoint unquantized = new GeoPoint(PlanetModel.WGS84, 2.4457272005608357E-47, -3.1404077424936307);\n    final GeoPoint quantized = new GeoPoint(-1.0011181510675629, -0.001186236379718708, 2.3309121299774915E-10);\n    \n    // Is the north pole in set, or out of set?\n    final GeoPoint northPole = new GeoPoint(PlanetModel.WGS84, Math.PI * 0.5, 0.0);\n    final GeoPoint negativeX = new GeoPoint(PlanetModel.WGS84, 0.0, Math.PI);\n    final GeoPoint negativeY = new GeoPoint(PlanetModel.WGS84, 0.0, -Math.PI * 0.5);\n    final GeoPoint positiveY = new GeoPoint(PlanetModel.WGS84, 0.0, Math.PI * 0.5);\n    final GeoPoint testPoint = new GeoPoint(-0.07416172733314662, 0.5686488061136892, 0.8178445379402641);\n\n    // Construct a standard polygon first to see what that does.  This winds up being a large polygon under the covers.\n    GeoPolygon standard = GeoPolygonFactory.makeGeoPolygon(PlanetModel.WGS84, pd);\n    \n    // This should be true, by inspection, but is false.  That's the cause for the failure.\n    assertTrue(standard.isWithin(negativeX));\n    \n    assertTrue(standard.isWithin(testPoint));\n    \n    // This is in-set because it's on an edge\n    assertTrue(standard.isWithin(northPole));\n    \n    // This is in-set\n    assertTrue(standard.isWithin(positiveY));\n    \n\n    final XYZBounds standardBounds = new XYZBounds();\n    standard.getBounds(standardBounds);\n    final XYZSolid standardSolid = XYZSolidFactory.makeXYZSolid(PlanetModel.WGS84, standardBounds);\n\n    // If within shape, should be within bounds\n    assertTrue(standard.isWithin(unquantized)?standardSolid.isWithin(unquantized):true);\n    assertTrue(standard.isWithin(quantized)?standardSolid.isWithin(quantized):true);\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"44c3a4ebfa1a780298de8b00afc0722c16233080":["6531d2d5e270ac1ccb114e6a380ab253e6ed1a7e"],"6531d2d5e270ac1ccb114e6a380ab253e6ed1a7e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"c33ed6824db1d3c54aaf0208e68c3df3fd43d93a":["44c3a4ebfa1a780298de8b00afc0722c16233080"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["c33ed6824db1d3c54aaf0208e68c3df3fd43d93a"]},"commit2Childs":{"44c3a4ebfa1a780298de8b00afc0722c16233080":["c33ed6824db1d3c54aaf0208e68c3df3fd43d93a"],"6531d2d5e270ac1ccb114e6a380ab253e6ed1a7e":["44c3a4ebfa1a780298de8b00afc0722c16233080"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["6531d2d5e270ac1ccb114e6a380ab253e6ed1a7e"],"c33ed6824db1d3c54aaf0208e68c3df3fd43d93a":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}