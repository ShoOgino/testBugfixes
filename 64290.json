{"path":"lucene/test-framework/src/java/org/apache/lucene/index/DocHelper#writeDoc(Random,Directory,Document).mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/index/DocHelper#writeDoc(Random,Directory,Document).mjava","pathOld":"lucene/src/test-framework/java/org/apache/lucene/index/DocHelper#writeDoc(Random,Directory,Document).mjava","sourceNew":"  /**\n   * Writes the document to the directory using a segment\n   * named \"test\"; returns the SegmentInfo describing the new\n   * segment \n   * @param dir\n   * @param doc\n   * @throws IOException\n   */ \n  public static SegmentInfo writeDoc(Random random, Directory dir, Document doc) throws IOException\n  {\n    return writeDoc(random, dir, new MockAnalyzer(random, MockTokenizer.WHITESPACE, false), null, doc);\n  }\n\n","sourceOld":"  /**\n   * Writes the document to the directory using a segment\n   * named \"test\"; returns the SegmentInfo describing the new\n   * segment \n   * @param dir\n   * @param doc\n   * @throws IOException\n   */ \n  public static SegmentInfo writeDoc(Random random, Directory dir, Document doc) throws IOException\n  {\n    return writeDoc(random, dir, new MockAnalyzer(random, MockTokenizer.WHITESPACE, false), null, doc);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9d153abcf92dc5329d98571a8c3035df9bd80648","date":1337702630,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/index/DocHelper#writeDoc(Random,Directory,Document).mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/index/DocHelper#writeDoc(Random,Directory,Document).mjava","sourceNew":"  /**\n   * Writes the document to the directory using a segment\n   * named \"test\"; returns the SegmentInfo describing the new\n   * segment \n   * @param dir\n   * @param doc\n   * @throws IOException\n   */ \n  public static SegmentInfoPerCommit writeDoc(Random random, Directory dir, Document doc) throws IOException\n  {\n    return writeDoc(random, dir, new MockAnalyzer(random, MockTokenizer.WHITESPACE, false), null, doc);\n  }\n\n","sourceOld":"  /**\n   * Writes the document to the directory using a segment\n   * named \"test\"; returns the SegmentInfo describing the new\n   * segment \n   * @param dir\n   * @param doc\n   * @throws IOException\n   */ \n  public static SegmentInfo writeDoc(Random random, Directory dir, Document doc) throws IOException\n  {\n    return writeDoc(random, dir, new MockAnalyzer(random, MockTokenizer.WHITESPACE, false), null, doc);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"615ddbd81799980d0fdd95e0238e1c498b6f47b0","date":1338233290,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/index/DocHelper#writeDoc(Random,Directory,Document).mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/index/DocHelper#writeDoc(Random,Directory,Document).mjava","sourceNew":"  /**\n   * Writes the document to the directory using a segment\n   * named \"test\"; returns the SegmentInfo describing the new\n   * segment \n   * @param dir\n   * @param doc\n   * @throws IOException\n   */ \n  public static SegmentInfoPerCommit writeDoc(Random random, Directory dir, Document doc) throws IOException\n  {\n    return writeDoc(random, dir, new MockAnalyzer(random, MockTokenizer.WHITESPACE, false), null, doc);\n  }\n\n","sourceOld":"  /**\n   * Writes the document to the directory using a segment\n   * named \"test\"; returns the SegmentInfo describing the new\n   * segment \n   * @param dir\n   * @param doc\n   * @throws IOException\n   */ \n  public static SegmentInfo writeDoc(Random random, Directory dir, Document doc) throws IOException\n  {\n    return writeDoc(random, dir, new MockAnalyzer(random, MockTokenizer.WHITESPACE, false), null, doc);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c7bd1fdddb8e84c1857d1a55c32ced51f0ed2069","date":1348430063,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/index/DocHelper#writeDoc(Random,Directory,Document).mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/index/DocHelper#writeDoc(Random,Directory,Document).mjava","sourceNew":"  /**\n   * Writes the document to the directory using a segment\n   * named \"test\"; returns the SegmentInfo describing the new\n   * segment \n   */ \n  public static SegmentInfoPerCommit writeDoc(Random random, Directory dir, Document doc) throws IOException\n  {\n    return writeDoc(random, dir, new MockAnalyzer(random, MockTokenizer.WHITESPACE, false), null, doc);\n  }\n\n","sourceOld":"  /**\n   * Writes the document to the directory using a segment\n   * named \"test\"; returns the SegmentInfo describing the new\n   * segment \n   * @param dir\n   * @param doc\n   * @throws IOException\n   */ \n  public static SegmentInfoPerCommit writeDoc(Random random, Directory dir, Document doc) throws IOException\n  {\n    return writeDoc(random, dir, new MockAnalyzer(random, MockTokenizer.WHITESPACE, false), null, doc);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"73b0a97ef3bd519a5e43398ea9eabe6eed97f6b0","date":1383367127,"type":3,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/index/DocHelper#writeDoc(Random,Directory,Document).mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/index/DocHelper#writeDoc(Random,Directory,Document).mjava","sourceNew":"  /**\n   * Writes the document to the directory using a segment\n   * named \"test\"; returns the SegmentInfo describing the new\n   * segment \n   */ \n  public static SegmentCommitInfo writeDoc(Random random, Directory dir, Document doc) throws IOException\n  {\n    return writeDoc(random, dir, new MockAnalyzer(random, MockTokenizer.WHITESPACE, false), null, doc);\n  }\n\n","sourceOld":"  /**\n   * Writes the document to the directory using a segment\n   * named \"test\"; returns the SegmentInfo describing the new\n   * segment \n   */ \n  public static SegmentInfoPerCommit writeDoc(Random random, Directory dir, Document doc) throws IOException\n  {\n    return writeDoc(random, dir, new MockAnalyzer(random, MockTokenizer.WHITESPACE, false), null, doc);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"c7bd1fdddb8e84c1857d1a55c32ced51f0ed2069":["615ddbd81799980d0fdd95e0238e1c498b6f47b0"],"73b0a97ef3bd519a5e43398ea9eabe6eed97f6b0":["c7bd1fdddb8e84c1857d1a55c32ced51f0ed2069"],"615ddbd81799980d0fdd95e0238e1c498b6f47b0":["3a119bbc8703c10faa329ec201c654b3a35a1e3e","9d153abcf92dc5329d98571a8c3035df9bd80648"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"9d153abcf92dc5329d98571a8c3035df9bd80648":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["73b0a97ef3bd519a5e43398ea9eabe6eed97f6b0"]},"commit2Childs":{"c7bd1fdddb8e84c1857d1a55c32ced51f0ed2069":["73b0a97ef3bd519a5e43398ea9eabe6eed97f6b0"],"73b0a97ef3bd519a5e43398ea9eabe6eed97f6b0":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"615ddbd81799980d0fdd95e0238e1c498b6f47b0":["c7bd1fdddb8e84c1857d1a55c32ced51f0ed2069"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["615ddbd81799980d0fdd95e0238e1c498b6f47b0","9d153abcf92dc5329d98571a8c3035df9bd80648"],"9d153abcf92dc5329d98571a8c3035df9bd80648":["615ddbd81799980d0fdd95e0238e1c498b6f47b0"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}