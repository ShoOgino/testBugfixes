{"path":"contrib/benchmark/src/java/org/apache/lucene/benchmark/byTask/tasks/ReportTask#genPartialReport(int,LinkedHashMap[String,TaskStats],int).mjava","commits":[{"id":"4e1ce9be74263e9659aad8a6ee1f213193710b71","date":1256298843,"type":1,"author":"Uwe Schindler","isMerge":false,"pathNew":"contrib/benchmark/src/java/org/apache/lucene/benchmark/byTask/tasks/ReportTask#genPartialReport(int,LinkedHashMap[String,TaskStats],int).mjava","pathOld":"contrib/benchmark/src/java/org/apache/lucene/benchmark/byTask/tasks/ReportTask#genPartialReport(int,LinkedHashMap,int).mjava","sourceNew":"  protected Report genPartialReport(int reported, LinkedHashMap<String,TaskStats> partOfTasks, int totalSize) {\n    String longetOp = longestOp(partOfTasks.values());\n    boolean first = true;\n    StringBuffer sb = new StringBuffer();\n    sb.append(tableTitle(longetOp));\n    sb.append(newline);\n    int lineNum = 0;\n    for (final TaskStats stat : partOfTasks.values()) {\n      if (!first) {\n        sb.append(newline);\n      }\n      first = false;\n      String line = taskReportLine(longetOp,stat);\n      lineNum++;\n      if (partOfTasks.size()>2 && lineNum%2==0) {\n        line = line.replaceAll(\"   \",\" - \");\n      }\n      sb.append(line);\n    }\n    String reptxt = (reported==0 ? \"No Matching Entries Were Found!\" : sb.toString());\n    return new Report(reptxt,partOfTasks.size(),reported,totalSize);\n  }\n\n","sourceOld":"  protected Report genPartialReport(int reported, LinkedHashMap partOfTasks, int totalSize) {\n    String longetOp = longestOp(partOfTasks.values().iterator());\n    boolean first = true;\n    StringBuffer sb = new StringBuffer();\n    sb.append(tableTitle(longetOp));\n    sb.append(newline);\n    int lineNum = 0;\n    for (Iterator it = partOfTasks.values().iterator(); it.hasNext();) {\n      TaskStats stat = (TaskStats) it.next();\n      if (!first) {\n        sb.append(newline);\n      }\n      first = false;\n      String line = taskReportLine(longetOp,stat);\n      lineNum++;\n      if (partOfTasks.size()>2 && lineNum%2==0) {\n        line = line.replaceAll(\"   \",\" - \");\n      }\n      sb.append(line);\n    }\n    String reptxt = (reported==0 ? \"No Matching Entries Were Found!\" : sb.toString());\n    return new Report(reptxt,partOfTasks.size(),reported,totalSize);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f5ebdc25cde64f1bd2b6337721292bdd1b23f714","date":1258737814,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"contrib/benchmark/src/java/org/apache/lucene/benchmark/byTask/tasks/ReportTask#genPartialReport(int,LinkedHashMap[String,TaskStats],int).mjava","pathOld":"contrib/benchmark/src/java/org/apache/lucene/benchmark/byTask/tasks/ReportTask#genPartialReport(int,LinkedHashMap[String,TaskStats],int).mjava","sourceNew":"  protected Report genPartialReport(int reported, LinkedHashMap<String,TaskStats> partOfTasks, int totalSize) {\n    String longetOp = longestOp(partOfTasks.values());\n    boolean first = true;\n    StringBuffer sb = new StringBuffer();\n    sb.append(tableTitle(longetOp));\n    sb.append(newline);\n    int lineNum = 0;\n    for (final TaskStats stat : partOfTasks.values()) {\n      if (!first) {\n        sb.append(newline);\n      }\n      first = false;\n      String line = taskReportLine(longetOp,stat);\n      lineNum++;\n      if (partOfTasks.size()>2 && lineNum%2==0) {\n        line = line.replaceAll(\"   \",\" - \");\n      }\n      sb.append(line);\n      int[] byTime = stat.getCountsByTime();\n      if (byTime != null) {\n        sb.append(newline);\n        int end = -1;\n        for(int i=byTime.length-1;i>=0;i--) {\n          if (byTime[i] != 0) {\n            end = i;\n            break;\n          }\n        }\n        if (end != -1) {\n          sb.append(\"  by time:\");\n          for(int i=0;i<end;i++) {\n            sb.append(' ').append(byTime[i]);\n          }\n        }\n      }\n    }\n    \n    String reptxt = (reported==0 ? \"No Matching Entries Were Found!\" : sb.toString());\n    return new Report(reptxt,partOfTasks.size(),reported,totalSize);\n  }\n\n","sourceOld":"  protected Report genPartialReport(int reported, LinkedHashMap<String,TaskStats> partOfTasks, int totalSize) {\n    String longetOp = longestOp(partOfTasks.values());\n    boolean first = true;\n    StringBuffer sb = new StringBuffer();\n    sb.append(tableTitle(longetOp));\n    sb.append(newline);\n    int lineNum = 0;\n    for (final TaskStats stat : partOfTasks.values()) {\n      if (!first) {\n        sb.append(newline);\n      }\n      first = false;\n      String line = taskReportLine(longetOp,stat);\n      lineNum++;\n      if (partOfTasks.size()>2 && lineNum%2==0) {\n        line = line.replaceAll(\"   \",\" - \");\n      }\n      sb.append(line);\n    }\n    String reptxt = (reported==0 ? \"No Matching Entries Were Found!\" : sb.toString());\n    return new Report(reptxt,partOfTasks.size(),reported,totalSize);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/contrib/benchmark/src/java/org/apache/lucene/benchmark/byTask/tasks/ReportTask#genPartialReport(int,LinkedHashMap[String,TaskStats],int).mjava","pathOld":"contrib/benchmark/src/java/org/apache/lucene/benchmark/byTask/tasks/ReportTask#genPartialReport(int,LinkedHashMap[String,TaskStats],int).mjava","sourceNew":"  protected Report genPartialReport(int reported, LinkedHashMap<String,TaskStats> partOfTasks, int totalSize) {\n    String longetOp = longestOp(partOfTasks.values());\n    boolean first = true;\n    StringBuffer sb = new StringBuffer();\n    sb.append(tableTitle(longetOp));\n    sb.append(newline);\n    int lineNum = 0;\n    for (final TaskStats stat : partOfTasks.values()) {\n      if (!first) {\n        sb.append(newline);\n      }\n      first = false;\n      String line = taskReportLine(longetOp,stat);\n      lineNum++;\n      if (partOfTasks.size()>2 && lineNum%2==0) {\n        line = line.replaceAll(\"   \",\" - \");\n      }\n      sb.append(line);\n      int[] byTime = stat.getCountsByTime();\n      if (byTime != null) {\n        sb.append(newline);\n        int end = -1;\n        for(int i=byTime.length-1;i>=0;i--) {\n          if (byTime[i] != 0) {\n            end = i;\n            break;\n          }\n        }\n        if (end != -1) {\n          sb.append(\"  by time:\");\n          for(int i=0;i<end;i++) {\n            sb.append(' ').append(byTime[i]);\n          }\n        }\n      }\n    }\n    \n    String reptxt = (reported==0 ? \"No Matching Entries Were Found!\" : sb.toString());\n    return new Report(reptxt,partOfTasks.size(),reported,totalSize);\n  }\n\n","sourceOld":"  protected Report genPartialReport(int reported, LinkedHashMap<String,TaskStats> partOfTasks, int totalSize) {\n    String longetOp = longestOp(partOfTasks.values());\n    boolean first = true;\n    StringBuffer sb = new StringBuffer();\n    sb.append(tableTitle(longetOp));\n    sb.append(newline);\n    int lineNum = 0;\n    for (final TaskStats stat : partOfTasks.values()) {\n      if (!first) {\n        sb.append(newline);\n      }\n      first = false;\n      String line = taskReportLine(longetOp,stat);\n      lineNum++;\n      if (partOfTasks.size()>2 && lineNum%2==0) {\n        line = line.replaceAll(\"   \",\" - \");\n      }\n      sb.append(line);\n      int[] byTime = stat.getCountsByTime();\n      if (byTime != null) {\n        sb.append(newline);\n        int end = -1;\n        for(int i=byTime.length-1;i>=0;i--) {\n          if (byTime[i] != 0) {\n            end = i;\n            break;\n          }\n        }\n        if (end != -1) {\n          sb.append(\"  by time:\");\n          for(int i=0;i<end;i++) {\n            sb.append(' ').append(byTime[i]);\n          }\n        }\n      }\n    }\n    \n    String reptxt = (reported==0 ? \"No Matching Entries Were Found!\" : sb.toString());\n    return new Report(reptxt,partOfTasks.size(),reported,totalSize);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"4e1ce9be74263e9659aad8a6ee1f213193710b71":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"f5ebdc25cde64f1bd2b6337721292bdd1b23f714":["4e1ce9be74263e9659aad8a6ee1f213193710b71"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["f5ebdc25cde64f1bd2b6337721292bdd1b23f714"]},"commit2Childs":{"4e1ce9be74263e9659aad8a6ee1f213193710b71":["f5ebdc25cde64f1bd2b6337721292bdd1b23f714"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["4e1ce9be74263e9659aad8a6ee1f213193710b71"],"f5ebdc25cde64f1bd2b6337721292bdd1b23f714":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}