{"path":"src/test/org/apache/lucene/index/TestNewIndexModifierDelete#testBothDeletes().mjava","commits":[{"id":"6b772434f9f358356f8eedc2e017b9ddfb2615ec","date":1170327312,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"src/test/org/apache/lucene/index/TestNewIndexModifierDelete#testBothDeletes().mjava","pathOld":"/dev/null","sourceNew":"  // test when delete terms apply to both disk and ram segments\n  public void testBothDeletes() throws IOException {\n    Directory dir = new RAMDirectory();\n    NewIndexModifier modifier = new NewIndexModifier(dir,\n        new WhitespaceAnalyzer(), true);\n    modifier.setMaxBufferedDocs(100);\n    modifier.setMaxBufferedDeleteTerms(100);\n\n    int id = 0;\n    int value = 100;\n\n    for (int i = 0; i < 5; i++) {\n      addDoc(modifier, ++id, value);\n    }\n\n    value = 200;\n    for (int i = 0; i < 5; i++) {\n      addDoc(modifier, ++id, value);\n    }\n    modifier.flush();\n\n    for (int i = 0; i < 5; i++) {\n      addDoc(modifier, ++id, value);\n    }\n    modifier.deleteDocuments(new Term(\"value\", String.valueOf(value)));\n    modifier.flush();\n\n    IndexReader reader = IndexReader.open(dir);\n    assertEquals(5, reader.numDocs());\n\n    modifier.close();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"42a18cb0bca2c4ac9747f31c7a74fac90c661f39","date":1171363388,"type":5,"author":"Michael McCandless","isMerge":false,"pathNew":"src/test/org/apache/lucene/index/TestIndexWriterDelete#testBothDeletes().mjava","pathOld":"src/test/org/apache/lucene/index/TestNewIndexModifierDelete#testBothDeletes().mjava","sourceNew":"  // test when delete terms apply to both disk and ram segments\n  public void testBothDeletes() throws IOException {\n    Directory dir = new RAMDirectory();\n    IndexWriter modifier = new IndexWriter(dir,\n        new WhitespaceAnalyzer(), true);\n    modifier.setMaxBufferedDocs(100);\n    modifier.setMaxBufferedDeleteTerms(100);\n\n    int id = 0;\n    int value = 100;\n\n    for (int i = 0; i < 5; i++) {\n      addDoc(modifier, ++id, value);\n    }\n\n    value = 200;\n    for (int i = 0; i < 5; i++) {\n      addDoc(modifier, ++id, value);\n    }\n    modifier.flush();\n\n    for (int i = 0; i < 5; i++) {\n      addDoc(modifier, ++id, value);\n    }\n    modifier.deleteDocuments(new Term(\"value\", String.valueOf(value)));\n    modifier.flush();\n\n    IndexReader reader = IndexReader.open(dir);\n    assertEquals(5, reader.numDocs());\n\n    modifier.close();\n  }\n\n","sourceOld":"  // test when delete terms apply to both disk and ram segments\n  public void testBothDeletes() throws IOException {\n    Directory dir = new RAMDirectory();\n    NewIndexModifier modifier = new NewIndexModifier(dir,\n        new WhitespaceAnalyzer(), true);\n    modifier.setMaxBufferedDocs(100);\n    modifier.setMaxBufferedDeleteTerms(100);\n\n    int id = 0;\n    int value = 100;\n\n    for (int i = 0; i < 5; i++) {\n      addDoc(modifier, ++id, value);\n    }\n\n    value = 200;\n    for (int i = 0; i < 5; i++) {\n      addDoc(modifier, ++id, value);\n    }\n    modifier.flush();\n\n    for (int i = 0; i < 5; i++) {\n      addDoc(modifier, ++id, value);\n    }\n    modifier.deleteDocuments(new Term(\"value\", String.valueOf(value)));\n    modifier.flush();\n\n    IndexReader reader = IndexReader.open(dir);\n    assertEquals(5, reader.numDocs());\n\n    modifier.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"42a18cb0bca2c4ac9747f31c7a74fac90c661f39":["6b772434f9f358356f8eedc2e017b9ddfb2615ec"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["42a18cb0bca2c4ac9747f31c7a74fac90c661f39"],"6b772434f9f358356f8eedc2e017b9ddfb2615ec":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"42a18cb0bca2c4ac9747f31c7a74fac90c661f39":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["6b772434f9f358356f8eedc2e017b9ddfb2615ec"],"6b772434f9f358356f8eedc2e017b9ddfb2615ec":["42a18cb0bca2c4ac9747f31c7a74fac90c661f39"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}