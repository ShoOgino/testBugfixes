{"path":"lucene/analysis/common/src/java/org/apache/lucene/analysis/miscellaneous/ConditionalTokenFilter#ConditionalTokenFilter(TokenStream,Function[TokenStream,TokenStream]).mjava","commits":[{"id":"25d4b0425e7ddf8fb0d7b4e24c06ecd9f071e5bd","date":1526034899,"type":0,"author":"Alan Woodward","isMerge":false,"pathNew":"lucene/analysis/common/src/java/org/apache/lucene/analysis/miscellaneous/ConditionalTokenFilter#ConditionalTokenFilter(TokenStream,Function[TokenStream,TokenStream]).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Create a new BypassingTokenFilter\n   * @param input         the input TokenStream\n   * @param inputFactory  a factory function to create a new instance of the TokenFilter to wrap\n   */\n  protected ConditionalTokenFilter(TokenStream input, Function<TokenStream, TokenStream> inputFactory) {\n    super(input);\n    this.delegate = inputFactory.apply(new OneTimeWrapper(this));\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"57e34488c685935a055be1bc57b850be1e8c850d","date":1526645499,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"lucene/analysis/common/src/java/org/apache/lucene/analysis/miscellaneous/ConditionalTokenFilter#ConditionalTokenFilter(TokenStream,Function[TokenStream,TokenStream]).mjava","pathOld":"lucene/analysis/common/src/java/org/apache/lucene/analysis/miscellaneous/ConditionalTokenFilter#ConditionalTokenFilter(TokenStream,Function[TokenStream,TokenStream]).mjava","sourceNew":"  /**\n   * Create a new BypassingTokenFilter\n   * @param input         the input TokenStream\n   * @param inputFactory  a factory function to create a new instance of the TokenFilter to wrap\n   */\n  protected ConditionalTokenFilter(TokenStream input, Function<TokenStream, TokenStream> inputFactory) {\n    super(input);\n    this.delegate = inputFactory.apply(new OneTimeWrapper(this.input));\n  }\n\n","sourceOld":"  /**\n   * Create a new BypassingTokenFilter\n   * @param input         the input TokenStream\n   * @param inputFactory  a factory function to create a new instance of the TokenFilter to wrap\n   */\n  protected ConditionalTokenFilter(TokenStream input, Function<TokenStream, TokenStream> inputFactory) {\n    super(input);\n    this.delegate = inputFactory.apply(new OneTimeWrapper(this));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9809bf55e3bf03659b8b93fd16170aaa7eb92012","date":1526860327,"type":3,"author":"Steve Rowe","isMerge":false,"pathNew":"lucene/analysis/common/src/java/org/apache/lucene/analysis/miscellaneous/ConditionalTokenFilter#ConditionalTokenFilter(TokenStream,Function[TokenStream,TokenStream]).mjava","pathOld":"lucene/analysis/common/src/java/org/apache/lucene/analysis/miscellaneous/ConditionalTokenFilter#ConditionalTokenFilter(TokenStream,Function[TokenStream,TokenStream]).mjava","sourceNew":"  /**\n   * Create a new ConditionalTokenFilter\n   * @param input         the input TokenStream\n   * @param inputFactory  a factory function to create the wrapped filter(s)\n   */\n  protected ConditionalTokenFilter(TokenStream input, Function<TokenStream, TokenStream> inputFactory) {\n    super(input);\n    this.delegate = inputFactory.apply(new OneTimeWrapper(this.input));\n  }\n\n","sourceOld":"  /**\n   * Create a new BypassingTokenFilter\n   * @param input         the input TokenStream\n   * @param inputFactory  a factory function to create a new instance of the TokenFilter to wrap\n   */\n  protected ConditionalTokenFilter(TokenStream input, Function<TokenStream, TokenStream> inputFactory) {\n    super(input);\n    this.delegate = inputFactory.apply(new OneTimeWrapper(this.input));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"9809bf55e3bf03659b8b93fd16170aaa7eb92012":["57e34488c685935a055be1bc57b850be1e8c850d"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"57e34488c685935a055be1bc57b850be1e8c850d":["25d4b0425e7ddf8fb0d7b4e24c06ecd9f071e5bd"],"25d4b0425e7ddf8fb0d7b4e24c06ecd9f071e5bd":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9809bf55e3bf03659b8b93fd16170aaa7eb92012"]},"commit2Childs":{"9809bf55e3bf03659b8b93fd16170aaa7eb92012":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["25d4b0425e7ddf8fb0d7b4e24c06ecd9f071e5bd"],"57e34488c685935a055be1bc57b850be1e8c850d":["9809bf55e3bf03659b8b93fd16170aaa7eb92012"],"25d4b0425e7ddf8fb0d7b4e24c06ecd9f071e5bd":["57e34488c685935a055be1bc57b850be1e8c850d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}