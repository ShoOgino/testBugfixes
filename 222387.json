{"path":"lucene/spatial/src/test/org/apache/lucene/spatial/util/TestGeoUtils#testScaleUnscaleIsStable().mjava","commits":[{"id":"f68e65f04a6bec2d9a08a7d70811205341af74db","date":1458618250,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/spatial/src/test/org/apache/lucene/spatial/util/TestGeoUtils#testScaleUnscaleIsStable().mjava","pathOld":"lucene/spatial/src/test/org/apache/lucene/spatial/geopoint/search/TestGeoPointQuery#testScaleUnscaleIsStable().mjava","sourceNew":"  public void testScaleUnscaleIsStable() throws Exception {\n    int iters = atLeast(1000);\n    boolean small = random().nextBoolean();\n    for(int iter=0;iter<iters;iter++) {\n      double lat = randomLat(small);\n      double lon = randomLon(small);\n\n      long enc = GeoEncodingUtils.mortonHash(lon, lat);\n      double latEnc = GeoEncodingUtils.mortonUnhashLat(enc);\n      double lonEnc = GeoEncodingUtils.mortonUnhashLon(enc);\n\n      long enc2 = GeoEncodingUtils.mortonHash(lon, lat);\n      double latEnc2 = GeoEncodingUtils.mortonUnhashLat(enc2);\n      double lonEnc2 = GeoEncodingUtils.mortonUnhashLon(enc2);\n      assertEquals(latEnc, latEnc2, 0.0);\n      assertEquals(lonEnc, lonEnc2, 0.0);\n    }\n  }\n\n","sourceOld":"  public void testScaleUnscaleIsStable() throws Exception {\n    int iters = atLeast(1000);\n    boolean small = random().nextBoolean();\n    for(int iter=0;iter<iters;iter++) {\n      double lat = randomLat(small);\n      double lon = randomLon(small);\n\n      long enc = GeoEncodingUtils.mortonHash(lon, lat);\n      double latEnc = GeoEncodingUtils.mortonUnhashLat(enc);\n      double lonEnc = GeoEncodingUtils.mortonUnhashLon(enc);\n\n      long enc2 = GeoEncodingUtils.mortonHash(lon, lat);\n      double latEnc2 = GeoEncodingUtils.mortonUnhashLat(enc2);\n      double lonEnc2 = GeoEncodingUtils.mortonUnhashLon(enc2);\n      assertEquals(latEnc, latEnc2, 0.0);\n      assertEquals(lonEnc, lonEnc2, 0.0);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ec996bf2daff09d61a876319e8fae4aebbea58e3","date":1458661946,"type":3,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/spatial/src/test/org/apache/lucene/spatial/util/TestGeoUtils#testScaleUnscaleIsStable().mjava","pathOld":"lucene/spatial/src/test/org/apache/lucene/spatial/util/TestGeoUtils#testScaleUnscaleIsStable().mjava","sourceNew":"  public void testScaleUnscaleIsStable() throws Exception {\n    int iters = atLeast(1000);\n    boolean small = random().nextBoolean();\n    for(int iter=0;iter<iters;iter++) {\n      double lat = randomLat(small);\n      double lon = randomLon(small);\n\n      long enc = GeoEncodingUtils.mortonHash(lat, lon);\n      double latEnc = GeoEncodingUtils.mortonUnhashLat(enc);\n      double lonEnc = GeoEncodingUtils.mortonUnhashLon(enc);\n\n      long enc2 = GeoEncodingUtils.mortonHash(lat, lon);\n      double latEnc2 = GeoEncodingUtils.mortonUnhashLat(enc2);\n      double lonEnc2 = GeoEncodingUtils.mortonUnhashLon(enc2);\n      assertEquals(latEnc, latEnc2, 0.0);\n      assertEquals(lonEnc, lonEnc2, 0.0);\n    }\n  }\n\n","sourceOld":"  public void testScaleUnscaleIsStable() throws Exception {\n    int iters = atLeast(1000);\n    boolean small = random().nextBoolean();\n    for(int iter=0;iter<iters;iter++) {\n      double lat = randomLat(small);\n      double lon = randomLon(small);\n\n      long enc = GeoEncodingUtils.mortonHash(lon, lat);\n      double latEnc = GeoEncodingUtils.mortonUnhashLat(enc);\n      double lonEnc = GeoEncodingUtils.mortonUnhashLon(enc);\n\n      long enc2 = GeoEncodingUtils.mortonHash(lon, lat);\n      double latEnc2 = GeoEncodingUtils.mortonUnhashLat(enc2);\n      double lonEnc2 = GeoEncodingUtils.mortonUnhashLon(enc2);\n      assertEquals(latEnc, latEnc2, 0.0);\n      assertEquals(lonEnc, lonEnc2, 0.0);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"546f71f5b1e19230d6e7e59f117d08dbcf59fbfe","date":1459623422,"type":5,"author":"nknize","isMerge":false,"pathNew":"lucene/spatial/src/test/org/apache/lucene/spatial/util/TestGeoEncodingUtils#testScaleUnscaleIsStable().mjava","pathOld":"lucene/spatial/src/test/org/apache/lucene/spatial/util/TestGeoUtils#testScaleUnscaleIsStable().mjava","sourceNew":"  public void testScaleUnscaleIsStable() throws Exception {\n    int iters = atLeast(1000);\n    for(int iter=0;iter<iters;iter++) {\n      double lat = nextLatitude();\n      double lon = nextLongitude();\n\n      long enc = GeoEncodingUtils.mortonHash(lat, lon);\n      double latEnc = GeoEncodingUtils.mortonUnhashLat(enc);\n      double lonEnc = GeoEncodingUtils.mortonUnhashLon(enc);\n\n      long enc2 = GeoEncodingUtils.mortonHash(lat, lon);\n      double latEnc2 = GeoEncodingUtils.mortonUnhashLat(enc2);\n      double lonEnc2 = GeoEncodingUtils.mortonUnhashLon(enc2);\n      assertEquals(latEnc, latEnc2, 0.0);\n      assertEquals(lonEnc, lonEnc2, 0.0);\n    }\n  }\n\n","sourceOld":"  public void testScaleUnscaleIsStable() throws Exception {\n    int iters = atLeast(1000);\n    boolean small = random().nextBoolean();\n    for(int iter=0;iter<iters;iter++) {\n      double lat = randomLat(small);\n      double lon = randomLon(small);\n\n      long enc = GeoEncodingUtils.mortonHash(lat, lon);\n      double latEnc = GeoEncodingUtils.mortonUnhashLat(enc);\n      double lonEnc = GeoEncodingUtils.mortonUnhashLon(enc);\n\n      long enc2 = GeoEncodingUtils.mortonHash(lat, lon);\n      double latEnc2 = GeoEncodingUtils.mortonUnhashLat(enc2);\n      double lonEnc2 = GeoEncodingUtils.mortonUnhashLon(enc2);\n      assertEquals(latEnc, latEnc2, 0.0);\n      assertEquals(lonEnc, lonEnc2, 0.0);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"f68e65f04a6bec2d9a08a7d70811205341af74db":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"ec996bf2daff09d61a876319e8fae4aebbea58e3":["f68e65f04a6bec2d9a08a7d70811205341af74db"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"546f71f5b1e19230d6e7e59f117d08dbcf59fbfe":["ec996bf2daff09d61a876319e8fae4aebbea58e3"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["546f71f5b1e19230d6e7e59f117d08dbcf59fbfe"]},"commit2Childs":{"f68e65f04a6bec2d9a08a7d70811205341af74db":["ec996bf2daff09d61a876319e8fae4aebbea58e3"],"ec996bf2daff09d61a876319e8fae4aebbea58e3":["546f71f5b1e19230d6e7e59f117d08dbcf59fbfe"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["f68e65f04a6bec2d9a08a7d70811205341af74db"],"546f71f5b1e19230d6e7e59f117d08dbcf59fbfe":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}