{"path":"src/java/org/apache/lucene/search/PrefixQuery#toString(String).mjava","commits":[{"id":"e0b950aef8cdf4606d480e28ea17bd870b93c81e","date":1060680143,"type":0,"author":"Erik Hatcher","isMerge":false,"pathNew":"src/java/org/apache/lucene/search/PrefixQuery#toString(String).mjava","pathOld":"/dev/null","sourceNew":"  /** Prints a user-readable version of this query. */\n  public String toString(String field) {\n    StringBuffer buffer = new StringBuffer();\n    if (!prefix.field().equals(field)) {\n      buffer.append(prefix.field());\n      buffer.append(\":\");\n    }\n    buffer.append(prefix.text());\n    buffer.append('*');\n    if (getBoost() != 1.0f) {\n      buffer.append(\"^\");\n      buffer.append(Float.toString(getBoost()));\n    }\n    return buffer.toString();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"df8dadf22de84eeb1294e70792e292ecf8ded564","date":1130577981,"type":3,"author":"Erik Hatcher","isMerge":false,"pathNew":"src/java/org/apache/lucene/search/PrefixQuery#toString(String).mjava","pathOld":"src/java/org/apache/lucene/search/PrefixQuery#toString(String).mjava","sourceNew":"  /** Prints a user-readable version of this query. */\n  public String toString(String field) {\n    StringBuffer buffer = new StringBuffer();\n    if (!prefix.field().equals(field)) {\n      buffer.append(prefix.field());\n      buffer.append(\":\");\n    }\n    buffer.append(prefix.text());\n    buffer.append('*');\n    buffer.append(ToStringUtils.boost(getBoost()));\n    return buffer.toString();\n  }\n\n","sourceOld":"  /** Prints a user-readable version of this query. */\n  public String toString(String field) {\n    StringBuffer buffer = new StringBuffer();\n    if (!prefix.field().equals(field)) {\n      buffer.append(prefix.field());\n      buffer.append(\":\");\n    }\n    buffer.append(prefix.text());\n    buffer.append('*');\n    if (getBoost() != 1.0f) {\n      buffer.append(\"^\");\n      buffer.append(Float.toString(getBoost()));\n    }\n    return buffer.toString();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4625cb7ffd7c9caaf2d62b206ba9a382d68da82c","date":1254521470,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/java/org/apache/lucene/search/PrefixQuery#toString(String).mjava","pathOld":"src/java/org/apache/lucene/search/PrefixQuery#toString(String).mjava","sourceNew":"  /** Prints a user-readable version of this query. */\n  public String toString(String field) {\n    StringBuilder buffer = new StringBuilder();\n    if (!prefix.field().equals(field)) {\n      buffer.append(prefix.field());\n      buffer.append(\":\");\n    }\n    buffer.append(prefix.text());\n    buffer.append('*');\n    buffer.append(ToStringUtils.boost(getBoost()));\n    return buffer.toString();\n  }\n\n","sourceOld":"  /** Prints a user-readable version of this query. */\n  public String toString(String field) {\n    StringBuffer buffer = new StringBuffer();\n    if (!prefix.field().equals(field)) {\n      buffer.append(prefix.field());\n      buffer.append(\":\");\n    }\n    buffer.append(prefix.text());\n    buffer.append('*');\n    buffer.append(ToStringUtils.boost(getBoost()));\n    return buffer.toString();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"322d95cfb0c59ace7533e19e5cec7f359ce6d6d3","date":1255442836,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/java/org/apache/lucene/search/PrefixQuery#toString(String).mjava","pathOld":"src/java/org/apache/lucene/search/PrefixQuery#toString(String).mjava","sourceNew":"  /** Prints a user-readable version of this query. */\n  @Override\n  public String toString(String field) {\n    StringBuilder buffer = new StringBuilder();\n    if (!prefix.field().equals(field)) {\n      buffer.append(prefix.field());\n      buffer.append(\":\");\n    }\n    buffer.append(prefix.text());\n    buffer.append('*');\n    buffer.append(ToStringUtils.boost(getBoost()));\n    return buffer.toString();\n  }\n\n","sourceOld":"  /** Prints a user-readable version of this query. */\n  public String toString(String field) {\n    StringBuilder buffer = new StringBuilder();\n    if (!prefix.field().equals(field)) {\n      buffer.append(prefix.field());\n      buffer.append(\":\");\n    }\n    buffer.append(prefix.text());\n    buffer.append('*');\n    buffer.append(ToStringUtils.boost(getBoost()));\n    return buffer.toString();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/search/PrefixQuery#toString(String).mjava","pathOld":"src/java/org/apache/lucene/search/PrefixQuery#toString(String).mjava","sourceNew":"  /** Prints a user-readable version of this query. */\n  @Override\n  public String toString(String field) {\n    StringBuilder buffer = new StringBuilder();\n    if (!prefix.field().equals(field)) {\n      buffer.append(prefix.field());\n      buffer.append(\":\");\n    }\n    buffer.append(prefix.text());\n    buffer.append('*');\n    buffer.append(ToStringUtils.boost(getBoost()));\n    return buffer.toString();\n  }\n\n","sourceOld":"  /** Prints a user-readable version of this query. */\n  @Override\n  public String toString(String field) {\n    StringBuilder buffer = new StringBuilder();\n    if (!prefix.field().equals(field)) {\n      buffer.append(prefix.field());\n      buffer.append(\":\");\n    }\n    buffer.append(prefix.text());\n    buffer.append('*');\n    buffer.append(ToStringUtils.boost(getBoost()));\n    return buffer.toString();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"e0b950aef8cdf4606d480e28ea17bd870b93c81e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"322d95cfb0c59ace7533e19e5cec7f359ce6d6d3":["4625cb7ffd7c9caaf2d62b206ba9a382d68da82c"],"df8dadf22de84eeb1294e70792e292ecf8ded564":["e0b950aef8cdf4606d480e28ea17bd870b93c81e"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"4625cb7ffd7c9caaf2d62b206ba9a382d68da82c":["df8dadf22de84eeb1294e70792e292ecf8ded564"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["322d95cfb0c59ace7533e19e5cec7f359ce6d6d3"]},"commit2Childs":{"e0b950aef8cdf4606d480e28ea17bd870b93c81e":["df8dadf22de84eeb1294e70792e292ecf8ded564"],"322d95cfb0c59ace7533e19e5cec7f359ce6d6d3":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"df8dadf22de84eeb1294e70792e292ecf8ded564":["4625cb7ffd7c9caaf2d62b206ba9a382d68da82c"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["e0b950aef8cdf4606d480e28ea17bd870b93c81e"],"4625cb7ffd7c9caaf2d62b206ba9a382d68da82c":["322d95cfb0c59ace7533e19e5cec7f359ce6d6d3"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}