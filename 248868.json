{"path":"solr/solrj/src/test/org/apache/solr/client/solrj/io/stream/eval/DatePartEvaluatorTest#testFunction(String,Object,Number).mjava","commits":[{"id":"40b789607c421011dabf36a935528a74fb8b2032","date":1492023606,"type":1,"author":"Gethin James","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/io/stream/eval/DatePartEvaluatorTest#testFunction(String,Object,Number).mjava","pathOld":"solr/solrj/src/test/org/apache/solr/client/solrj/io/stream/eval/DateEvaluatorTest#testFunction(String,String,Number).mjava","sourceNew":"  public void testFunction(String expression, Object value, Number expected) throws Exception {\n    StreamEvaluator evaluator = factory.constructEvaluator(expression);\n    values.clear();\n    values.put(\"a\", value);\n    Object result = evaluator.evaluate(new Tuple(values));\n    assertTrue(result instanceof Number);\n    assertEquals(expected, result);\n  }\n\n","sourceOld":"  public void testFunction(String expression, String value, Number expected) throws Exception {\n    StreamEvaluator evaluator = factory.constructEvaluator(expression);\n    values.clear();\n    values.put(\"a\", value);\n    Object result = evaluator.evaluate(new Tuple(values));\n    assertTrue(result instanceof Number);\n    assertEquals(expected, result);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"64ff6b743fd4051da7ebb3d397d1ef80833a741a","date":1492023891,"type":5,"author":"Gethin James","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/io/stream/eval/TemporalEvaluatorsTest#testFunction(String,Object,Number).mjava","pathOld":"solr/solrj/src/test/org/apache/solr/client/solrj/io/stream/eval/DatePartEvaluatorTest#testFunction(String,Object,Number).mjava","sourceNew":"  public void testFunction(String expression, Object value, Number expected) throws Exception {\n    StreamEvaluator evaluator = factory.constructEvaluator(expression);\n    values.clear();\n    values.put(\"a\", value);\n    Object result = evaluator.evaluate(new Tuple(values));\n    assertTrue(result instanceof Number);\n    assertEquals(expected, result);\n  }\n\n","sourceOld":"  public void testFunction(String expression, Object value, Number expected) throws Exception {\n    StreamEvaluator evaluator = factory.constructEvaluator(expression);\n    values.clear();\n    values.put(\"a\", value);\n    Object result = evaluator.evaluate(new Tuple(values));\n    assertTrue(result instanceof Number);\n    assertEquals(expected, result);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"64ff6b743fd4051da7ebb3d397d1ef80833a741a":["40b789607c421011dabf36a935528a74fb8b2032"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"40b789607c421011dabf36a935528a74fb8b2032":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["64ff6b743fd4051da7ebb3d397d1ef80833a741a"]},"commit2Childs":{"64ff6b743fd4051da7ebb3d397d1ef80833a741a":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["40b789607c421011dabf36a935528a74fb8b2032"],"40b789607c421011dabf36a935528a74fb8b2032":["64ff6b743fd4051da7ebb3d397d1ef80833a741a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}