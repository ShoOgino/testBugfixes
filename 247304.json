{"path":"solr/src/java/org/apache/solr/analysis/ReversedWildcardFilter#incrementToken().mjava","commits":[{"id":"893269407f5c988a4b2ee13c7ffc01ec43136c1d","date":1268598046,"type":0,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/src/java/org/apache/solr/analysis/ReversedWildcardFilter#incrementToken().mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public boolean incrementToken() throws IOException {\n    if( save != null ) {\n      // clearAttributes();  // not currently necessary\n      restoreState(save);\n      save = null;\n      return true;\n    }\n\n    if (!input.incrementToken()) return false;\n\n    // pass through zero-length terms\n    int oldLen = termAtt.termLength();\n    if (oldLen ==0) return true;\n    int origOffset = posAtt.getPositionIncrement();\n    if (withOriginal == true){\n      posAtt.setPositionIncrement(0);\n      save = captureState();\n    }\n    char [] buffer = termAtt.resizeTermBuffer(oldLen + 1);\n    buffer[oldLen] = markerChar;\n    reverse(buffer, 0, oldLen + 1);\n\n    posAtt.setPositionIncrement(origOffset);\n    termAtt.setTermBuffer(buffer, 0, oldLen +1);\n    return true;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8","date":1268599006,"type":4,"author":"Mark Robert Miller","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/src/java/org/apache/solr/analysis/ReversedWildcardFilter#incrementToken().mjava","sourceNew":null,"sourceOld":"  @Override\n  public boolean incrementToken() throws IOException {\n    if( save != null ) {\n      // clearAttributes();  // not currently necessary\n      restoreState(save);\n      save = null;\n      return true;\n    }\n\n    if (!input.incrementToken()) return false;\n\n    // pass through zero-length terms\n    int oldLen = termAtt.termLength();\n    if (oldLen ==0) return true;\n    int origOffset = posAtt.getPositionIncrement();\n    if (withOriginal == true){\n      posAtt.setPositionIncrement(0);\n      save = captureState();\n    }\n    char [] buffer = termAtt.resizeTermBuffer(oldLen + 1);\n    buffer[oldLen] = markerChar;\n    reverse(buffer, 0, oldLen + 1);\n\n    posAtt.setPositionIncrement(origOffset);\n    termAtt.setTermBuffer(buffer, 0, oldLen +1);\n    return true;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ad94625fb8d088209f46650c8097196fec67f00c","date":1453508319,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/src/java/org/apache/solr/analysis/ReversedWildcardFilter#incrementToken().mjava","pathOld":"src/java/org/apache/solr/analysis/ReversedWildcardFilter#incrementToken().mjava","sourceNew":"  @Override\n  public boolean incrementToken() throws IOException {\n    if( save != null ) {\n      // clearAttributes();  // not currently necessary\n      restoreState(save);\n      save = null;\n      return true;\n    }\n\n    if (!input.incrementToken()) return false;\n\n    // pass through zero-length terms\n    int oldLen = termAtt.termLength();\n    if (oldLen ==0) return true;\n    int origOffset = posAtt.getPositionIncrement();\n    if (withOriginal == true){\n      posAtt.setPositionIncrement(0);\n      save = captureState();\n    }\n    char [] buffer = termAtt.resizeTermBuffer(oldLen + 1);\n    buffer[oldLen] = markerChar;\n    reverse(buffer, 0, oldLen + 1);\n\n    posAtt.setPositionIncrement(origOffset);\n    termAtt.setTermBuffer(buffer, 0, oldLen +1);\n    return true;\n  }\n\n","sourceOld":"  @Override\n  public boolean incrementToken() throws IOException {\n    if( save != null ) {\n      // clearAttributes();  // not currently necessary\n      restoreState(save);\n      save = null;\n      return true;\n    }\n\n    if (!input.incrementToken()) return false;\n\n    // pass through zero-length terms\n    int oldLen = termAtt.termLength();\n    if (oldLen ==0) return true;\n    int origOffset = posAtt.getPositionIncrement();\n    if (withOriginal == true){\n      posAtt.setPositionIncrement(0);\n      save = captureState();\n    }\n    char [] buffer = termAtt.resizeTermBuffer(oldLen + 1);\n    buffer[oldLen] = markerChar;\n    reverse(buffer, 0, oldLen + 1);\n\n    posAtt.setPositionIncrement(origOffset);\n    termAtt.setTermBuffer(buffer, 0, oldLen +1);\n    return true;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1da8d55113b689b06716246649de6f62430f15c0","date":1453508340,"type":0,"author":"Dawid Weiss","isMerge":true,"pathNew":"solr/src/java/org/apache/solr/analysis/ReversedWildcardFilter#incrementToken().mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public boolean incrementToken() throws IOException {\n    if( save != null ) {\n      // clearAttributes();  // not currently necessary\n      restoreState(save);\n      save = null;\n      return true;\n    }\n\n    if (!input.incrementToken()) return false;\n\n    // pass through zero-length terms\n    int oldLen = termAtt.termLength();\n    if (oldLen ==0) return true;\n    int origOffset = posAtt.getPositionIncrement();\n    if (withOriginal == true){\n      posAtt.setPositionIncrement(0);\n      save = captureState();\n    }\n    char [] buffer = termAtt.resizeTermBuffer(oldLen + 1);\n    buffer[oldLen] = markerChar;\n    reverse(buffer, 0, oldLen + 1);\n\n    posAtt.setPositionIncrement(origOffset);\n    termAtt.setTermBuffer(buffer, 0, oldLen +1);\n    return true;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d085fb336a7208eea2214e5ffcc803960819b60b","date":1270981894,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"solr/src/java/org/apache/solr/analysis/ReversedWildcardFilter#incrementToken().mjava","pathOld":"solr/src/java/org/apache/solr/analysis/ReversedWildcardFilter#incrementToken().mjava","sourceNew":"  @Override\n  public boolean incrementToken() throws IOException {\n    if( save != null ) {\n      // clearAttributes();  // not currently necessary\n      restoreState(save);\n      save = null;\n      return true;\n    }\n\n    if (!input.incrementToken()) return false;\n\n    // pass through zero-length terms\n    int oldLen = termAtt.length();\n    if (oldLen ==0) return true;\n    int origOffset = posAtt.getPositionIncrement();\n    if (withOriginal == true){\n      posAtt.setPositionIncrement(0);\n      save = captureState();\n    }\n    char [] buffer = termAtt.resizeBuffer(oldLen + 1);\n    buffer[oldLen] = markerChar;\n    reverse(buffer, 0, oldLen + 1);\n\n    posAtt.setPositionIncrement(origOffset);\n    termAtt.copyBuffer(buffer, 0, oldLen +1);\n    return true;\n  }\n\n","sourceOld":"  @Override\n  public boolean incrementToken() throws IOException {\n    if( save != null ) {\n      // clearAttributes();  // not currently necessary\n      restoreState(save);\n      save = null;\n      return true;\n    }\n\n    if (!input.incrementToken()) return false;\n\n    // pass through zero-length terms\n    int oldLen = termAtt.termLength();\n    if (oldLen ==0) return true;\n    int origOffset = posAtt.getPositionIncrement();\n    if (withOriginal == true){\n      posAtt.setPositionIncrement(0);\n      save = captureState();\n    }\n    char [] buffer = termAtt.resizeTermBuffer(oldLen + 1);\n    buffer[oldLen] = markerChar;\n    reverse(buffer, 0, oldLen + 1);\n\n    posAtt.setPositionIncrement(origOffset);\n    termAtt.setTermBuffer(buffer, 0, oldLen +1);\n    return true;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c903c3d15906a3da96b8c0c2fb704491005fdbdb","date":1453508227,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/analysis/ReversedWildcardFilter#incrementToken().mjava","pathOld":"solr/src/java/org/apache/solr/analysis/ReversedWildcardFilter#incrementToken().mjava","sourceNew":"  @Override\n  public boolean incrementToken() throws IOException {\n    if( save != null ) {\n      // clearAttributes();  // not currently necessary\n      restoreState(save);\n      save = null;\n      return true;\n    }\n\n    if (!input.incrementToken()) return false;\n\n    // pass through zero-length terms\n    int oldLen = termAtt.length();\n    if (oldLen ==0) return true;\n    int origOffset = posAtt.getPositionIncrement();\n    if (withOriginal == true){\n      posAtt.setPositionIncrement(0);\n      save = captureState();\n    }\n    char [] buffer = termAtt.resizeBuffer(oldLen + 1);\n    buffer[oldLen] = markerChar;\n    reverse(buffer, 0, oldLen + 1);\n\n    posAtt.setPositionIncrement(origOffset);\n    termAtt.copyBuffer(buffer, 0, oldLen +1);\n    return true;\n  }\n\n","sourceOld":"  @Override\n  public boolean incrementToken() throws IOException {\n    if( save != null ) {\n      // clearAttributes();  // not currently necessary\n      restoreState(save);\n      save = null;\n      return true;\n    }\n\n    if (!input.incrementToken()) return false;\n\n    // pass through zero-length terms\n    int oldLen = termAtt.length();\n    if (oldLen ==0) return true;\n    int origOffset = posAtt.getPositionIncrement();\n    if (withOriginal == true){\n      posAtt.setPositionIncrement(0);\n      save = captureState();\n    }\n    char [] buffer = termAtt.resizeBuffer(oldLen + 1);\n    buffer[oldLen] = markerChar;\n    reverse(buffer, 0, oldLen + 1);\n\n    posAtt.setPositionIncrement(origOffset);\n    termAtt.copyBuffer(buffer, 0, oldLen +1);\n    return true;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a258fbb26824fd104ed795e5d9033d2d040049ee","date":1453508252,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/analysis/ReversedWildcardFilter#incrementToken().mjava","pathOld":"solr/src/java/org/apache/solr/analysis/ReversedWildcardFilter#incrementToken().mjava","sourceNew":"  @Override\n  public boolean incrementToken() throws IOException {\n    if( save != null ) {\n      // clearAttributes();  // not currently necessary\n      restoreState(save);\n      save = null;\n      return true;\n    }\n\n    if (!input.incrementToken()) return false;\n\n    // pass through zero-length terms\n    int oldLen = termAtt.length();\n    if (oldLen ==0) return true;\n    int origOffset = posAtt.getPositionIncrement();\n    if (withOriginal == true){\n      posAtt.setPositionIncrement(0);\n      save = captureState();\n    }\n    char [] buffer = termAtt.resizeBuffer(oldLen + 1);\n    buffer[oldLen] = markerChar;\n    reverse(buffer, 0, oldLen + 1);\n\n    posAtt.setPositionIncrement(origOffset);\n    termAtt.copyBuffer(buffer, 0, oldLen +1);\n    return true;\n  }\n\n","sourceOld":"  @Override\n  public boolean incrementToken() throws IOException {\n    if( save != null ) {\n      // clearAttributes();  // not currently necessary\n      restoreState(save);\n      save = null;\n      return true;\n    }\n\n    if (!input.incrementToken()) return false;\n\n    // pass through zero-length terms\n    int oldLen = termAtt.length();\n    if (oldLen ==0) return true;\n    int origOffset = posAtt.getPositionIncrement();\n    if (withOriginal == true){\n      posAtt.setPositionIncrement(0);\n      save = captureState();\n    }\n    char [] buffer = termAtt.resizeBuffer(oldLen + 1);\n    buffer[oldLen] = markerChar;\n    reverse(buffer, 0, oldLen + 1);\n\n    posAtt.setPositionIncrement(origOffset);\n    termAtt.copyBuffer(buffer, 0, oldLen +1);\n    return true;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":5,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/analysis/ReversedWildcardFilter#incrementToken().mjava","pathOld":"solr/src/java/org/apache/solr/analysis/ReversedWildcardFilter#incrementToken().mjava","sourceNew":"  @Override\n  public boolean incrementToken() throws IOException {\n    if( save != null ) {\n      // clearAttributes();  // not currently necessary\n      restoreState(save);\n      save = null;\n      return true;\n    }\n\n    if (!input.incrementToken()) return false;\n\n    // pass through zero-length terms\n    int oldLen = termAtt.length();\n    if (oldLen ==0) return true;\n    int origOffset = posAtt.getPositionIncrement();\n    if (withOriginal == true){\n      posAtt.setPositionIncrement(0);\n      save = captureState();\n    }\n    char [] buffer = termAtt.resizeBuffer(oldLen + 1);\n    buffer[oldLen] = markerChar;\n    reverse(buffer, 0, oldLen + 1);\n\n    posAtt.setPositionIncrement(origOffset);\n    termAtt.copyBuffer(buffer, 0, oldLen +1);\n    return true;\n  }\n\n","sourceOld":"  @Override\n  public boolean incrementToken() throws IOException {\n    if( save != null ) {\n      // clearAttributes();  // not currently necessary\n      restoreState(save);\n      save = null;\n      return true;\n    }\n\n    if (!input.incrementToken()) return false;\n\n    // pass through zero-length terms\n    int oldLen = termAtt.length();\n    if (oldLen ==0) return true;\n    int origOffset = posAtt.getPositionIncrement();\n    if (withOriginal == true){\n      posAtt.setPositionIncrement(0);\n      save = captureState();\n    }\n    char [] buffer = termAtt.resizeBuffer(oldLen + 1);\n    buffer[oldLen] = markerChar;\n    reverse(buffer, 0, oldLen + 1);\n\n    posAtt.setPositionIncrement(origOffset);\n    termAtt.copyBuffer(buffer, 0, oldLen +1);\n    return true;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"1da8d55113b689b06716246649de6f62430f15c0":["a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8","ad94625fb8d088209f46650c8097196fec67f00c"],"893269407f5c988a4b2ee13c7ffc01ec43136c1d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8":["893269407f5c988a4b2ee13c7ffc01ec43136c1d"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["d085fb336a7208eea2214e5ffcc803960819b60b"],"c26f00b574427b55127e869b935845554afde1fa":["d085fb336a7208eea2214e5ffcc803960819b60b","c903c3d15906a3da96b8c0c2fb704491005fdbdb"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"a258fbb26824fd104ed795e5d9033d2d040049ee":["d085fb336a7208eea2214e5ffcc803960819b60b"],"ad94625fb8d088209f46650c8097196fec67f00c":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"d085fb336a7208eea2214e5ffcc803960819b60b":["1da8d55113b689b06716246649de6f62430f15c0"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["c26f00b574427b55127e869b935845554afde1fa"]},"commit2Childs":{"1da8d55113b689b06716246649de6f62430f15c0":["d085fb336a7208eea2214e5ffcc803960819b60b"],"893269407f5c988a4b2ee13c7ffc01ec43136c1d":["a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8"],"a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8":["1da8d55113b689b06716246649de6f62430f15c0"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["c26f00b574427b55127e869b935845554afde1fa"],"c26f00b574427b55127e869b935845554afde1fa":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["893269407f5c988a4b2ee13c7ffc01ec43136c1d"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["ad94625fb8d088209f46650c8097196fec67f00c"],"a258fbb26824fd104ed795e5d9033d2d040049ee":[],"ad94625fb8d088209f46650c8097196fec67f00c":["1da8d55113b689b06716246649de6f62430f15c0"],"d085fb336a7208eea2214e5ffcc803960819b60b":["c903c3d15906a3da96b8c0c2fb704491005fdbdb","c26f00b574427b55127e869b935845554afde1fa","a258fbb26824fd104ed795e5d9033d2d040049ee"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a258fbb26824fd104ed795e5d9033d2d040049ee","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"pathCommit":null}