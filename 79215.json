{"path":"lucene/queryparser/src/test/org/apache/lucene/queryparser/flexible/standard/TestQPHelper#testGroup().mjava","commits":[{"id":"ee76d213d935c68932ca13b55fa0a8a32bf6af1a","date":1343572717,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/queryparser/src/test/org/apache/lucene/queryparser/flexible/standard/TestQPHelper#testGroup().mjava","pathOld":"/dev/null","sourceNew":"  public void testGroup() throws Exception {\n    assertQueryEquals(\"!(a AND b) OR c\", null, \"-(+a +b) c\");\n    assertQueryEquals(\"!(a AND b) AND c\", null, \"-(+a +b) +c\");\n    assertQueryEquals(\"((a AND b) AND c)\", null, \"+(+a +b) +c\");\n    assertQueryEquals(\"(a AND b) AND c\", null, \"+(+a +b) +c\");\n    assertQueryEquals(\"b !(a AND b)\", null, \"b -(+a +b)\");\n    assertQueryEquals(\"(a AND b)^4 OR c\", null, \"((+a +b)^4.0) c\");\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f","date":1343768312,"type":0,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/queryparser/src/test/org/apache/lucene/queryparser/flexible/standard/TestQPHelper#testGroup().mjava","pathOld":"/dev/null","sourceNew":"  public void testGroup() throws Exception {\n    assertQueryEquals(\"!(a AND b) OR c\", null, \"-(+a +b) c\");\n    assertQueryEquals(\"!(a AND b) AND c\", null, \"-(+a +b) +c\");\n    assertQueryEquals(\"((a AND b) AND c)\", null, \"+(+a +b) +c\");\n    assertQueryEquals(\"(a AND b) AND c\", null, \"+(+a +b) +c\");\n    assertQueryEquals(\"b !(a AND b)\", null, \"b -(+a +b)\");\n    assertQueryEquals(\"(a AND b)^4 OR c\", null, \"((+a +b)^4.0) c\");\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d6f074e73200c07d54f242d3880a8da5a35ff97b","date":1344507653,"type":0,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/queryparser/src/test/org/apache/lucene/queryparser/flexible/standard/TestQPHelper#testGroup().mjava","pathOld":"/dev/null","sourceNew":"  public void testGroup() throws Exception {\n    assertQueryEquals(\"!(a AND b) OR c\", null, \"-(+a +b) c\");\n    assertQueryEquals(\"!(a AND b) AND c\", null, \"-(+a +b) +c\");\n    assertQueryEquals(\"((a AND b) AND c)\", null, \"+(+a +b) +c\");\n    assertQueryEquals(\"(a AND b) AND c\", null, \"+(+a +b) +c\");\n    assertQueryEquals(\"b !(a AND b)\", null, \"b -(+a +b)\");\n    assertQueryEquals(\"(a AND b)^4 OR c\", null, \"((+a +b)^4.0) c\");\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2dfdf766e55e943d942055d7de53c7ad6bc45283","date":1441632886,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/queryparser/src/test/org/apache/lucene/queryparser/flexible/standard/TestQPHelper#testGroup().mjava","pathOld":"lucene/queryparser/src/test/org/apache/lucene/queryparser/flexible/standard/TestQPHelper#testGroup().mjava","sourceNew":"  public void testGroup() throws Exception {\n    assertQueryEquals(\"!(a AND b) OR c\", null, \"-(+a +b) c\");\n    assertQueryEquals(\"!(a AND b) AND c\", null, \"-(+a +b) +c\");\n    assertQueryEquals(\"((a AND b) AND c)\", null, \"+(+a +b) +c\");\n    assertQueryEquals(\"(a AND b) AND c\", null, \"+(+a +b) +c\");\n    assertQueryEquals(\"b !(a AND b)\", null, \"b -(+a +b)\");\n    assertQueryEquals(\"(a AND b)^4 OR c\", null, \"(+a +b)^4.0 c\");\n  }\n\n","sourceOld":"  public void testGroup() throws Exception {\n    assertQueryEquals(\"!(a AND b) OR c\", null, \"-(+a +b) c\");\n    assertQueryEquals(\"!(a AND b) AND c\", null, \"-(+a +b) +c\");\n    assertQueryEquals(\"((a AND b) AND c)\", null, \"+(+a +b) +c\");\n    assertQueryEquals(\"(a AND b) AND c\", null, \"+(+a +b) +c\");\n    assertQueryEquals(\"b !(a AND b)\", null, \"b -(+a +b)\");\n    assertQueryEquals(\"(a AND b)^4 OR c\", null, \"((+a +b)^4.0) c\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"ee76d213d935c68932ca13b55fa0a8a32bf6af1a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","ee76d213d935c68932ca13b55fa0a8a32bf6af1a"],"2dfdf766e55e943d942055d7de53c7ad6bc45283":["ee76d213d935c68932ca13b55fa0a8a32bf6af1a"],"d6f074e73200c07d54f242d3880a8da5a35ff97b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","ee76d213d935c68932ca13b55fa0a8a32bf6af1a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["2dfdf766e55e943d942055d7de53c7ad6bc45283"]},"commit2Childs":{"ee76d213d935c68932ca13b55fa0a8a32bf6af1a":["b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f","2dfdf766e55e943d942055d7de53c7ad6bc45283","d6f074e73200c07d54f242d3880a8da5a35ff97b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["ee76d213d935c68932ca13b55fa0a8a32bf6af1a","b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f","d6f074e73200c07d54f242d3880a8da5a35ff97b"],"b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f":[],"2dfdf766e55e943d942055d7de53c7ad6bc45283":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"d6f074e73200c07d54f242d3880a8da5a35ff97b":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f","d6f074e73200c07d54f242d3880a8da5a35ff97b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}