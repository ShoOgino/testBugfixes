{"path":"lucene/core/src/java/org/apache/lucene/search/DoubleValuesSource.WeightDoubleValuesSource#getValues(LeafReaderContext,DoubleValues).mjava","commits":[{"id":"beb75ce8f8a8d60aeddc199c67f14ef327e1a1c8","date":1510832356,"type":0,"author":"Alan Woodward","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/DoubleValuesSource.WeightDoubleValuesSource#getValues(LeafReaderContext,DoubleValues).mjava","pathOld":"/dev/null","sourceNew":"    @Override\n    public DoubleValues getValues(LeafReaderContext ctx, DoubleValues scores) throws IOException {\n      Scorer scorer = weight.scorer(ctx);\n      if (scorer == null)\n        return DoubleValues.EMPTY;\n      DocIdSetIterator it = scorer.iterator();\n      return new DoubleValues() {\n        @Override\n        public double doubleValue() throws IOException {\n          return scorer.score();\n        }\n\n        @Override\n        public boolean advanceExact(int doc) throws IOException {\n          if (it.docID() > doc)\n            return false;\n          return it.docID() == doc || it.advance(doc) == doc;\n        }\n      };\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2ec20178021a8555c9e59c580e877af139a162aa","date":1584287445,"type":3,"author":"Michele Palmia","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/DoubleValuesSource.WeightDoubleValuesSource#getValues(LeafReaderContext,DoubleValues).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/DoubleValuesSource.WeightDoubleValuesSource#getValues(LeafReaderContext,DoubleValues).mjava","sourceNew":"    @Override\n    public DoubleValues getValues(LeafReaderContext ctx, DoubleValues scores) throws IOException {\n      Scorer scorer = weight.scorer(ctx);\n      if (scorer == null)\n        return DoubleValues.EMPTY;\n\n      return new DoubleValues() {\n        private final TwoPhaseIterator tpi = scorer.twoPhaseIterator();\n        private final DocIdSetIterator disi = (tpi == null) ? scorer.iterator() : tpi.approximation();\n\n        @Override\n        public double doubleValue() throws IOException {\n          return scorer.score();\n        }\n\n        @Override\n        public boolean advanceExact(int doc) throws IOException {\n          if (disi.docID() < doc) {\n            disi.advance(doc);\n          }\n          return disi.docID() == doc && (tpi == null || tpi.matches());\n        }\n      };\n    }\n\n","sourceOld":"    @Override\n    public DoubleValues getValues(LeafReaderContext ctx, DoubleValues scores) throws IOException {\n      Scorer scorer = weight.scorer(ctx);\n      if (scorer == null)\n        return DoubleValues.EMPTY;\n      DocIdSetIterator it = scorer.iterator();\n      return new DoubleValues() {\n        @Override\n        public double doubleValue() throws IOException {\n          return scorer.score();\n        }\n\n        @Override\n        public boolean advanceExact(int doc) throws IOException {\n          if (it.docID() > doc)\n            return false;\n          return it.docID() == doc || it.advance(doc) == doc;\n        }\n      };\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"beb75ce8f8a8d60aeddc199c67f14ef327e1a1c8":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"2ec20178021a8555c9e59c580e877af139a162aa":["beb75ce8f8a8d60aeddc199c67f14ef327e1a1c8"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["2ec20178021a8555c9e59c580e877af139a162aa"]},"commit2Childs":{"beb75ce8f8a8d60aeddc199c67f14ef327e1a1c8":["2ec20178021a8555c9e59c580e877af139a162aa"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["beb75ce8f8a8d60aeddc199c67f14ef327e1a1c8"],"2ec20178021a8555c9e59c580e877af139a162aa":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}