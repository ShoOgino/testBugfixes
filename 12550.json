{"path":"solr/core/src/test/org/apache/solr/cloud/LeaderElectionTest.ClientThread#setupOnConnect().mjava","commits":[{"id":"fe3c951ef5686e1465970365860afe906395d5ec","date":1335268044,"type":0,"author":"Sami Siren","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/LeaderElectionTest.ClientThread#setupOnConnect().mjava","pathOld":"/dev/null","sourceNew":"    private void setupOnConnect() throws InterruptedException, KeeperException,\n        IOException {\n      ZkStateReader zkStateReader = new ZkStateReader(zkClient);\n      LeaderElector elector = new LeaderElector(zkClient);\n      ShardLeaderElectionContextBase context = new ShardLeaderElectionContextBase(\n          elector, \"shard1\", \"collection1\", Integer.toString(nodeNumber),\n          props, zkStateReader);\n      elector.setup(context);\n      seq = elector.joinElection(context);\n      electionDone = true;\n      seqToThread.put(seq, this);\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["88f39c3b3a16aebc5a91335341c7ad5b560e2277"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"88f39c3b3a16aebc5a91335341c7ad5b560e2277","date":1350066344,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/LeaderElectionTest.ClientThread#setupOnConnect().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/LeaderElectionTest.ClientThread#setupOnConnect().mjava","sourceNew":"    private void setupOnConnect() throws InterruptedException, KeeperException,\n        IOException {\n      ZkStateReader zkStateReader = new ZkStateReader(zkClient);\n      LeaderElector elector = new LeaderElector(zkClient);\n      ShardLeaderElectionContextBase context = new ShardLeaderElectionContextBase(\n          elector, \"shard1\", \"collection1\", Integer.toString(nodeNumber),\n          props, zkStateReader);\n      elector.setup(context);\n      seq = elector.joinElection(context, false);\n      electionDone = true;\n      seqToThread.put(seq, this);\n    }\n\n","sourceOld":"    private void setupOnConnect() throws InterruptedException, KeeperException,\n        IOException {\n      ZkStateReader zkStateReader = new ZkStateReader(zkClient);\n      LeaderElector elector = new LeaderElector(zkClient);\n      ShardLeaderElectionContextBase context = new ShardLeaderElectionContextBase(\n          elector, \"shard1\", \"collection1\", Integer.toString(nodeNumber),\n          props, zkStateReader);\n      elector.setup(context);\n      seq = elector.joinElection(context);\n      electionDone = true;\n      seqToThread.put(seq, this);\n    }\n\n","bugFix":["fe3c951ef5686e1465970365860afe906395d5ec"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d82832af39f94dbb58a3130fd216ff1d49435589","date":1350147242,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/cloud/LeaderElectionTest.ClientThread#setupOnConnect().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/LeaderElectionTest.ClientThread#setupOnConnect().mjava","sourceNew":"    private void setupOnConnect() throws InterruptedException, KeeperException,\n        IOException {\n      ZkStateReader zkStateReader = new ZkStateReader(zkClient);\n      LeaderElector elector = new LeaderElector(zkClient);\n      ShardLeaderElectionContextBase context = new ShardLeaderElectionContextBase(\n          elector, \"shard1\", \"collection1\", Integer.toString(nodeNumber),\n          props, zkStateReader);\n      elector.setup(context);\n      seq = elector.joinElection(context, false);\n      electionDone = true;\n      seqToThread.put(seq, this);\n    }\n\n","sourceOld":"    private void setupOnConnect() throws InterruptedException, KeeperException,\n        IOException {\n      ZkStateReader zkStateReader = new ZkStateReader(zkClient);\n      LeaderElector elector = new LeaderElector(zkClient);\n      ShardLeaderElectionContextBase context = new ShardLeaderElectionContextBase(\n          elector, \"shard1\", \"collection1\", Integer.toString(nodeNumber),\n          props, zkStateReader);\n      elector.setup(context);\n      seq = elector.joinElection(context);\n      electionDone = true;\n      seqToThread.put(seq, this);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"db4fdbf3d262768eabc027cd8321edca0cd11fa8","date":1350574784,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/cloud/LeaderElectionTest.ClientThread#setupOnConnect().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/LeaderElectionTest.ClientThread#setupOnConnect().mjava","sourceNew":"    private void setupOnConnect() throws InterruptedException, KeeperException,\n        IOException {\n      ZkStateReader zkStateReader = new ZkStateReader(zkClient);\n      LeaderElector elector = new LeaderElector(zkClient);\n      ShardLeaderElectionContextBase context = new ShardLeaderElectionContextBase(\n          elector, \"shard1\", \"collection1\", Integer.toString(nodeNumber),\n          props, zkStateReader);\n      elector.setup(context);\n      seq = elector.joinElection(context, false);\n      electionDone = true;\n      seqToThread.put(seq, this);\n    }\n\n","sourceOld":"    private void setupOnConnect() throws InterruptedException, KeeperException,\n        IOException {\n      ZkStateReader zkStateReader = new ZkStateReader(zkClient);\n      LeaderElector elector = new LeaderElector(zkClient);\n      ShardLeaderElectionContextBase context = new ShardLeaderElectionContextBase(\n          elector, \"shard1\", \"collection1\", Integer.toString(nodeNumber),\n          props, zkStateReader);\n      elector.setup(context);\n      seq = elector.joinElection(context);\n      electionDone = true;\n      seqToThread.put(seq, this);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8650ae4e5d74a324411f8b7dd6201774f2b6fb2e","date":1406603075,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/LeaderElectionTest.ClientThread#setupOnConnect().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/LeaderElectionTest.ClientThread#setupOnConnect().mjava","sourceNew":"    private void setupOnConnect() throws InterruptedException, KeeperException,\n        IOException {\n      assertNotNull(es);\n      TestLeaderElectionContext context = new TestLeaderElectionContext(\n          es.elector, shard, \"collection1\", nodeName,\n          props, es.zkStateReader, runLeaderDelay);\n      es.elector.setup(context);\n      seq = es.elector.joinElection(context, false);\n      electionDone = true;\n      seqToThread.put(seq, this);\n    }\n\n","sourceOld":"    private void setupOnConnect() throws InterruptedException, KeeperException,\n        IOException {\n      ZkStateReader zkStateReader = new ZkStateReader(zkClient);\n      LeaderElector elector = new LeaderElector(zkClient);\n      ShardLeaderElectionContextBase context = new ShardLeaderElectionContextBase(\n          elector, \"shard1\", \"collection1\", Integer.toString(nodeNumber),\n          props, zkStateReader);\n      elector.setup(context);\n      seq = elector.joinElection(context, false);\n      electionDone = true;\n      seqToThread.put(seq, this);\n    }\n\n","bugFix":null,"bugIntro":["bb222a3f9d9421d5c95afce73013fbd8de07ea1f"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"bb222a3f9d9421d5c95afce73013fbd8de07ea1f","date":1543514331,"type":3,"author":"markrmiller","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/LeaderElectionTest.ClientThread#setupOnConnect().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/LeaderElectionTest.ClientThread#setupOnConnect().mjava","sourceNew":"    private void setupOnConnect() throws InterruptedException, KeeperException,\n        IOException {\n      assertNotNull(es);\n      TestLeaderElectionContext context = new TestLeaderElectionContext(\n          es.elector, shard, \"collection1\", nodeName,\n          props, es.zkController, runLeaderDelay);\n      es.elector.setup(context);\n      seq = es.elector.joinElection(context, false);\n      electionDone = true;\n      seqToThread.put(seq, this);\n    }\n\n","sourceOld":"    private void setupOnConnect() throws InterruptedException, KeeperException,\n        IOException {\n      assertNotNull(es);\n      TestLeaderElectionContext context = new TestLeaderElectionContext(\n          es.elector, shard, \"collection1\", nodeName,\n          props, es.zkStateReader, runLeaderDelay);\n      es.elector.setup(context);\n      seq = es.elector.joinElection(context, false);\n      electionDone = true;\n      seqToThread.put(seq, this);\n    }\n\n","bugFix":["8650ae4e5d74a324411f8b7dd6201774f2b6fb2e"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"fe3c951ef5686e1465970365860afe906395d5ec":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"bb222a3f9d9421d5c95afce73013fbd8de07ea1f":["8650ae4e5d74a324411f8b7dd6201774f2b6fb2e"],"8650ae4e5d74a324411f8b7dd6201774f2b6fb2e":["88f39c3b3a16aebc5a91335341c7ad5b560e2277"],"d82832af39f94dbb58a3130fd216ff1d49435589":["fe3c951ef5686e1465970365860afe906395d5ec","88f39c3b3a16aebc5a91335341c7ad5b560e2277"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"db4fdbf3d262768eabc027cd8321edca0cd11fa8":["fe3c951ef5686e1465970365860afe906395d5ec","88f39c3b3a16aebc5a91335341c7ad5b560e2277"],"88f39c3b3a16aebc5a91335341c7ad5b560e2277":["fe3c951ef5686e1465970365860afe906395d5ec"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["bb222a3f9d9421d5c95afce73013fbd8de07ea1f"]},"commit2Childs":{"fe3c951ef5686e1465970365860afe906395d5ec":["d82832af39f94dbb58a3130fd216ff1d49435589","db4fdbf3d262768eabc027cd8321edca0cd11fa8","88f39c3b3a16aebc5a91335341c7ad5b560e2277"],"bb222a3f9d9421d5c95afce73013fbd8de07ea1f":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"8650ae4e5d74a324411f8b7dd6201774f2b6fb2e":["bb222a3f9d9421d5c95afce73013fbd8de07ea1f"],"d82832af39f94dbb58a3130fd216ff1d49435589":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["fe3c951ef5686e1465970365860afe906395d5ec"],"db4fdbf3d262768eabc027cd8321edca0cd11fa8":[],"88f39c3b3a16aebc5a91335341c7ad5b560e2277":["8650ae4e5d74a324411f8b7dd6201774f2b6fb2e","d82832af39f94dbb58a3130fd216ff1d49435589","db4fdbf3d262768eabc027cd8321edca0cd11fa8"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["d82832af39f94dbb58a3130fd216ff1d49435589","db4fdbf3d262768eabc027cd8321edca0cd11fa8","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}