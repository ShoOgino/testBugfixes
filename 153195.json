{"path":"lucene/suggest/src/test/org/apache/lucene/search/suggest/document/SuggestFieldTest#testNRTDeletedDocFiltering().mjava","commits":[{"id":"07e29e9a1cbba8cc30091c3e4f8e9eac7ec7d22a","date":1427495869,"type":0,"author":"Areek Zillur","isMerge":false,"pathNew":"lucene/suggest/src/test/org/apache/lucene/search/suggest/document/SuggestFieldTest#testNRTDeletedDocFiltering().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testNRTDeletedDocFiltering() throws Exception {\n    Analyzer analyzer = new MockAnalyzer(random());\n    // using IndexWriter instead of RandomIndexWriter\n    IndexWriter iw = new IndexWriter(dir, iwcWithSuggestField(analyzer, \"suggest_field\"));\n\n    int num = atLeast(10);\n\n    Document document = new Document();\n    int numLive = 0;\n    List<Entry> expectedEntries = new ArrayList<>();\n    for (int i = 0; i < num; i++) {\n      document.add(newSuggestField(\"suggest_field\", \"abc_\" + i, num - i));\n      if (i % 2 == 0) {\n        document.add(newStringField(\"str_field\", \"delete\", Field.Store.YES));\n      } else {\n        numLive++;\n        expectedEntries.add(new Entry(\"abc_\" + i, num - i));\n        document.add(newStringField(\"str_field\", \"no_delete\", Field.Store.YES));\n      }\n      iw.addDocument(document);\n      document.clear();\n    }\n\n    // get docIDs to delete\n    DirectoryReader reader = DirectoryReader.open(iw, false);\n    List<Integer> docIdsToDelete = new ArrayList<>();\n    for (int i = 0; i < reader.maxDoc(); i++) {\n      StoredDocument doc = reader.document(i);\n      if (\"delete\".equals(doc.get(\"str_field\"))) {\n        docIdsToDelete.add(i);\n      }\n    }\n\n    for (Integer docID : docIdsToDelete) {\n      assertTrue(iw.tryDeleteDocument(reader, docID));\n    }\n    reader.close();\n\n    reader = DirectoryReader.open(iw, false);\n    SuggestIndexSearcher indexSearcher = new SuggestIndexSearcher(reader, analyzer);\n    TopSuggestDocs suggest = indexSearcher.suggest(\"suggest_field\", \"abc_\", numLive);\n    assertSuggestions(suggest, expectedEntries.toArray(new Entry[expectedEntries.size()]));\n\n    reader.close();\n    iw.close();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","date":1427779360,"type":0,"author":"Ryan Ernst","isMerge":true,"pathNew":"lucene/suggest/src/test/org/apache/lucene/search/suggest/document/SuggestFieldTest#testNRTDeletedDocFiltering().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testNRTDeletedDocFiltering() throws Exception {\n    Analyzer analyzer = new MockAnalyzer(random());\n    // using IndexWriter instead of RandomIndexWriter\n    IndexWriter iw = new IndexWriter(dir, iwcWithSuggestField(analyzer, \"suggest_field\"));\n\n    int num = atLeast(10);\n\n    Document document = new Document();\n    int numLive = 0;\n    List<Entry> expectedEntries = new ArrayList<>();\n    for (int i = 0; i < num; i++) {\n      document.add(newSuggestField(\"suggest_field\", \"abc_\" + i, num - i));\n      if (i % 2 == 0) {\n        document.add(newStringField(\"str_field\", \"delete\", Field.Store.YES));\n      } else {\n        numLive++;\n        expectedEntries.add(new Entry(\"abc_\" + i, num - i));\n        document.add(newStringField(\"str_field\", \"no_delete\", Field.Store.YES));\n      }\n      iw.addDocument(document);\n      document.clear();\n    }\n\n    // get docIDs to delete\n    DirectoryReader reader = DirectoryReader.open(iw, false);\n    List<Integer> docIdsToDelete = new ArrayList<>();\n    for (int i = 0; i < reader.maxDoc(); i++) {\n      StoredDocument doc = reader.document(i);\n      if (\"delete\".equals(doc.get(\"str_field\"))) {\n        docIdsToDelete.add(i);\n      }\n    }\n\n    for (Integer docID : docIdsToDelete) {\n      assertTrue(iw.tryDeleteDocument(reader, docID));\n    }\n    reader.close();\n\n    reader = DirectoryReader.open(iw, false);\n    SuggestIndexSearcher indexSearcher = new SuggestIndexSearcher(reader, analyzer);\n    TopSuggestDocs suggest = indexSearcher.suggest(\"suggest_field\", \"abc_\", numLive);\n    assertSuggestions(suggest, expectedEntries.toArray(new Entry[expectedEntries.size()]));\n\n    reader.close();\n    iw.close();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"cc96bda7785ce4a038b07266c8a1fd64eaf82dcf","date":1427884828,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/suggest/src/test/org/apache/lucene/search/suggest/document/SuggestFieldTest#testNRTDeletedDocFiltering().mjava","pathOld":"lucene/suggest/src/test/org/apache/lucene/search/suggest/document/SuggestFieldTest#testNRTDeletedDocFiltering().mjava","sourceNew":"  @Test\n  public void testNRTDeletedDocFiltering() throws Exception {\n    Analyzer analyzer = new MockAnalyzer(random());\n    // using IndexWriter instead of RandomIndexWriter\n    IndexWriter iw = new IndexWriter(dir, iwcWithSuggestField(analyzer, \"suggest_field\"));\n\n    int num = atLeast(10);\n\n    Document document = new Document();\n    int numLive = 0;\n    List<Entry> expectedEntries = new ArrayList<>();\n    for (int i = 0; i < num; i++) {\n      document.add(newSuggestField(\"suggest_field\", \"abc_\" + i, num - i));\n      if (i % 2 == 0) {\n        document.add(newStringField(\"str_field\", \"delete\", Field.Store.YES));\n      } else {\n        numLive++;\n        expectedEntries.add(new Entry(\"abc_\" + i, num - i));\n        document.add(newStringField(\"str_field\", \"no_delete\", Field.Store.YES));\n      }\n      iw.addDocument(document);\n      document.clear();\n    }\n\n    iw.deleteDocuments(new Term(\"str_field\", \"delete\"));\n\n    DirectoryReader reader = DirectoryReader.open(iw, false);\n    SuggestIndexSearcher indexSearcher = new SuggestIndexSearcher(reader, analyzer);\n    TopSuggestDocs suggest = indexSearcher.suggest(\"suggest_field\", \"abc_\", numLive);\n    assertSuggestions(suggest, expectedEntries.toArray(new Entry[expectedEntries.size()]));\n\n    reader.close();\n    iw.close();\n  }\n\n","sourceOld":"  @Test\n  public void testNRTDeletedDocFiltering() throws Exception {\n    Analyzer analyzer = new MockAnalyzer(random());\n    // using IndexWriter instead of RandomIndexWriter\n    IndexWriter iw = new IndexWriter(dir, iwcWithSuggestField(analyzer, \"suggest_field\"));\n\n    int num = atLeast(10);\n\n    Document document = new Document();\n    int numLive = 0;\n    List<Entry> expectedEntries = new ArrayList<>();\n    for (int i = 0; i < num; i++) {\n      document.add(newSuggestField(\"suggest_field\", \"abc_\" + i, num - i));\n      if (i % 2 == 0) {\n        document.add(newStringField(\"str_field\", \"delete\", Field.Store.YES));\n      } else {\n        numLive++;\n        expectedEntries.add(new Entry(\"abc_\" + i, num - i));\n        document.add(newStringField(\"str_field\", \"no_delete\", Field.Store.YES));\n      }\n      iw.addDocument(document);\n      document.clear();\n    }\n\n    // get docIDs to delete\n    DirectoryReader reader = DirectoryReader.open(iw, false);\n    List<Integer> docIdsToDelete = new ArrayList<>();\n    for (int i = 0; i < reader.maxDoc(); i++) {\n      StoredDocument doc = reader.document(i);\n      if (\"delete\".equals(doc.get(\"str_field\"))) {\n        docIdsToDelete.add(i);\n      }\n    }\n\n    for (Integer docID : docIdsToDelete) {\n      assertTrue(iw.tryDeleteDocument(reader, docID));\n    }\n    reader.close();\n\n    reader = DirectoryReader.open(iw, false);\n    SuggestIndexSearcher indexSearcher = new SuggestIndexSearcher(reader, analyzer);\n    TopSuggestDocs suggest = indexSearcher.suggest(\"suggest_field\", \"abc_\", numLive);\n    assertSuggestions(suggest, expectedEntries.toArray(new Entry[expectedEntries.size()]));\n\n    reader.close();\n    iw.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0c924d4069ef5a5bc479a493befe0121aada6896","date":1427901860,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/suggest/src/test/org/apache/lucene/search/suggest/document/SuggestFieldTest#testNRTDeletedDocFiltering().mjava","pathOld":"lucene/suggest/src/test/org/apache/lucene/search/suggest/document/SuggestFieldTest#testNRTDeletedDocFiltering().mjava","sourceNew":"  @Test\n  public void testNRTDeletedDocFiltering() throws Exception {\n    Analyzer analyzer = new MockAnalyzer(random());\n    // using IndexWriter instead of RandomIndexWriter\n    IndexWriter iw = new IndexWriter(dir, iwcWithSuggestField(analyzer, \"suggest_field\"));\n\n    int num = atLeast(10);\n\n    Document document = new Document();\n    int numLive = 0;\n    List<Entry> expectedEntries = new ArrayList<>();\n    for (int i = 0; i < num; i++) {\n      document.add(newSuggestField(\"suggest_field\", \"abc_\" + i, num - i));\n      if (i % 2 == 0) {\n        document.add(newStringField(\"str_field\", \"delete\", Field.Store.YES));\n      } else {\n        numLive++;\n        expectedEntries.add(new Entry(\"abc_\" + i, num - i));\n        document.add(newStringField(\"str_field\", \"no_delete\", Field.Store.YES));\n      }\n      iw.addDocument(document);\n      document.clear();\n    }\n\n    iw.deleteDocuments(new Term(\"str_field\", \"delete\"));\n\n    DirectoryReader reader = DirectoryReader.open(iw, false);\n    SuggestIndexSearcher indexSearcher = new SuggestIndexSearcher(reader, analyzer);\n    TopSuggestDocs suggest = indexSearcher.suggest(\"suggest_field\", \"abc_\", numLive);\n    assertSuggestions(suggest, expectedEntries.toArray(new Entry[expectedEntries.size()]));\n\n    reader.close();\n    iw.close();\n  }\n\n","sourceOld":"  @Test\n  public void testNRTDeletedDocFiltering() throws Exception {\n    Analyzer analyzer = new MockAnalyzer(random());\n    // using IndexWriter instead of RandomIndexWriter\n    IndexWriter iw = new IndexWriter(dir, iwcWithSuggestField(analyzer, \"suggest_field\"));\n\n    int num = atLeast(10);\n\n    Document document = new Document();\n    int numLive = 0;\n    List<Entry> expectedEntries = new ArrayList<>();\n    for (int i = 0; i < num; i++) {\n      document.add(newSuggestField(\"suggest_field\", \"abc_\" + i, num - i));\n      if (i % 2 == 0) {\n        document.add(newStringField(\"str_field\", \"delete\", Field.Store.YES));\n      } else {\n        numLive++;\n        expectedEntries.add(new Entry(\"abc_\" + i, num - i));\n        document.add(newStringField(\"str_field\", \"no_delete\", Field.Store.YES));\n      }\n      iw.addDocument(document);\n      document.clear();\n    }\n\n    // get docIDs to delete\n    DirectoryReader reader = DirectoryReader.open(iw, false);\n    List<Integer> docIdsToDelete = new ArrayList<>();\n    for (int i = 0; i < reader.maxDoc(); i++) {\n      StoredDocument doc = reader.document(i);\n      if (\"delete\".equals(doc.get(\"str_field\"))) {\n        docIdsToDelete.add(i);\n      }\n    }\n\n    for (Integer docID : docIdsToDelete) {\n      assertTrue(iw.tryDeleteDocument(reader, docID));\n    }\n    reader.close();\n\n    reader = DirectoryReader.open(iw, false);\n    SuggestIndexSearcher indexSearcher = new SuggestIndexSearcher(reader, analyzer);\n    TopSuggestDocs suggest = indexSearcher.suggest(\"suggest_field\", \"abc_\", numLive);\n    assertSuggestions(suggest, expectedEntries.toArray(new Entry[expectedEntries.size()]));\n\n    reader.close();\n    iw.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ff937985a3ef5bdbb2e12a9d4a02de6da424f2ef","date":1428009454,"type":3,"author":"Areek Zillur","isMerge":false,"pathNew":"lucene/suggest/src/test/org/apache/lucene/search/suggest/document/SuggestFieldTest#testNRTDeletedDocFiltering().mjava","pathOld":"lucene/suggest/src/test/org/apache/lucene/search/suggest/document/SuggestFieldTest#testNRTDeletedDocFiltering().mjava","sourceNew":"  @Test\n  public void testNRTDeletedDocFiltering() throws Exception {\n    Analyzer analyzer = new MockAnalyzer(random());\n    // using IndexWriter instead of RandomIndexWriter\n    IndexWriter iw = new IndexWriter(dir, iwcWithSuggestField(analyzer, \"suggest_field\"));\n\n    int num = atLeast(10);\n\n    Document document = new Document();\n    int numLive = 0;\n    List<Entry> expectedEntries = new ArrayList<>();\n    for (int i = 0; i < num; i++) {\n      document.add(newSuggestField(\"suggest_field\", \"abc_\" + i, num - i));\n      if (i % 2 == 0) {\n        document.add(newStringField(\"str_field\", \"delete\", Field.Store.YES));\n      } else {\n        numLive++;\n        expectedEntries.add(new Entry(\"abc_\" + i, num - i));\n        document.add(newStringField(\"str_field\", \"no_delete\", Field.Store.YES));\n      }\n      iw.addDocument(document);\n      document.clear();\n\n      if (usually()) {\n        iw.commit();\n      }\n    }\n\n    iw.deleteDocuments(new Term(\"str_field\", \"delete\"));\n\n    DirectoryReader reader = DirectoryReader.open(iw, true);\n    SuggestIndexSearcher indexSearcher = new SuggestIndexSearcher(reader, analyzer);\n    TopSuggestDocs suggest = indexSearcher.suggest(\"suggest_field\", \"abc_\", numLive);\n    assertSuggestions(suggest, expectedEntries.toArray(new Entry[expectedEntries.size()]));\n\n    reader.close();\n    iw.close();\n  }\n\n","sourceOld":"  @Test\n  public void testNRTDeletedDocFiltering() throws Exception {\n    Analyzer analyzer = new MockAnalyzer(random());\n    // using IndexWriter instead of RandomIndexWriter\n    IndexWriter iw = new IndexWriter(dir, iwcWithSuggestField(analyzer, \"suggest_field\"));\n\n    int num = atLeast(10);\n\n    Document document = new Document();\n    int numLive = 0;\n    List<Entry> expectedEntries = new ArrayList<>();\n    for (int i = 0; i < num; i++) {\n      document.add(newSuggestField(\"suggest_field\", \"abc_\" + i, num - i));\n      if (i % 2 == 0) {\n        document.add(newStringField(\"str_field\", \"delete\", Field.Store.YES));\n      } else {\n        numLive++;\n        expectedEntries.add(new Entry(\"abc_\" + i, num - i));\n        document.add(newStringField(\"str_field\", \"no_delete\", Field.Store.YES));\n      }\n      iw.addDocument(document);\n      document.clear();\n    }\n\n    iw.deleteDocuments(new Term(\"str_field\", \"delete\"));\n\n    DirectoryReader reader = DirectoryReader.open(iw, false);\n    SuggestIndexSearcher indexSearcher = new SuggestIndexSearcher(reader, analyzer);\n    TopSuggestDocs suggest = indexSearcher.suggest(\"suggest_field\", \"abc_\", numLive);\n    assertSuggestions(suggest, expectedEntries.toArray(new Entry[expectedEntries.size()]));\n\n    reader.close();\n    iw.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6c757ac42dd1f3f893db5c4d89c61cbe1a9fab6c","date":1428091986,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/suggest/src/test/org/apache/lucene/search/suggest/document/SuggestFieldTest#testNRTDeletedDocFiltering().mjava","pathOld":"lucene/suggest/src/test/org/apache/lucene/search/suggest/document/SuggestFieldTest#testNRTDeletedDocFiltering().mjava","sourceNew":"  @Test\n  public void testNRTDeletedDocFiltering() throws Exception {\n    Analyzer analyzer = new MockAnalyzer(random());\n    // using IndexWriter instead of RandomIndexWriter\n    IndexWriter iw = new IndexWriter(dir, iwcWithSuggestField(analyzer, \"suggest_field\"));\n\n    int num = atLeast(10);\n\n    Document document = new Document();\n    int numLive = 0;\n    List<Entry> expectedEntries = new ArrayList<>();\n    for (int i = 0; i < num; i++) {\n      document.add(newSuggestField(\"suggest_field\", \"abc_\" + i, num - i));\n      if (i % 2 == 0) {\n        document.add(newStringField(\"str_field\", \"delete\", Field.Store.YES));\n      } else {\n        numLive++;\n        expectedEntries.add(new Entry(\"abc_\" + i, num - i));\n        document.add(newStringField(\"str_field\", \"no_delete\", Field.Store.YES));\n      }\n      iw.addDocument(document);\n      document.clear();\n\n      if (usually()) {\n        iw.commit();\n      }\n    }\n\n    iw.deleteDocuments(new Term(\"str_field\", \"delete\"));\n\n    DirectoryReader reader = DirectoryReader.open(iw, true);\n    SuggestIndexSearcher indexSearcher = new SuggestIndexSearcher(reader, analyzer);\n    TopSuggestDocs suggest = indexSearcher.suggest(\"suggest_field\", \"abc_\", numLive);\n    assertSuggestions(suggest, expectedEntries.toArray(new Entry[expectedEntries.size()]));\n\n    reader.close();\n    iw.close();\n  }\n\n","sourceOld":"  @Test\n  public void testNRTDeletedDocFiltering() throws Exception {\n    Analyzer analyzer = new MockAnalyzer(random());\n    // using IndexWriter instead of RandomIndexWriter\n    IndexWriter iw = new IndexWriter(dir, iwcWithSuggestField(analyzer, \"suggest_field\"));\n\n    int num = atLeast(10);\n\n    Document document = new Document();\n    int numLive = 0;\n    List<Entry> expectedEntries = new ArrayList<>();\n    for (int i = 0; i < num; i++) {\n      document.add(newSuggestField(\"suggest_field\", \"abc_\" + i, num - i));\n      if (i % 2 == 0) {\n        document.add(newStringField(\"str_field\", \"delete\", Field.Store.YES));\n      } else {\n        numLive++;\n        expectedEntries.add(new Entry(\"abc_\" + i, num - i));\n        document.add(newStringField(\"str_field\", \"no_delete\", Field.Store.YES));\n      }\n      iw.addDocument(document);\n      document.clear();\n    }\n\n    iw.deleteDocuments(new Term(\"str_field\", \"delete\"));\n\n    DirectoryReader reader = DirectoryReader.open(iw, false);\n    SuggestIndexSearcher indexSearcher = new SuggestIndexSearcher(reader, analyzer);\n    TopSuggestDocs suggest = indexSearcher.suggest(\"suggest_field\", \"abc_\", numLive);\n    assertSuggestions(suggest, expectedEntries.toArray(new Entry[expectedEntries.size()]));\n\n    reader.close();\n    iw.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1ecb18e7a0316ea550446daf785b5fa65c049cdd","date":1428100837,"type":3,"author":"Areek Zillur","isMerge":false,"pathNew":"lucene/suggest/src/test/org/apache/lucene/search/suggest/document/SuggestFieldTest#testNRTDeletedDocFiltering().mjava","pathOld":"lucene/suggest/src/test/org/apache/lucene/search/suggest/document/SuggestFieldTest#testNRTDeletedDocFiltering().mjava","sourceNew":"  @Test\n  public void testNRTDeletedDocFiltering() throws Exception {\n    Analyzer analyzer = new MockAnalyzer(random());\n    // using IndexWriter instead of RandomIndexWriter\n    IndexWriter iw = new IndexWriter(dir, iwcWithSuggestField(analyzer, \"suggest_field\"));\n\n    int num = Math.min(1000, atLeast(10));\n\n    Document document = new Document();\n    int numLive = 0;\n    List<Entry> expectedEntries = new ArrayList<>();\n    for (int i = 0; i < num; i++) {\n      document.add(newSuggestField(\"suggest_field\", \"abc_\" + i, num - i));\n      if (i % 2 == 0) {\n        document.add(newStringField(\"str_field\", \"delete\", Field.Store.YES));\n      } else {\n        numLive++;\n        expectedEntries.add(new Entry(\"abc_\" + i, num - i));\n        document.add(newStringField(\"str_field\", \"no_delete\", Field.Store.YES));\n      }\n      iw.addDocument(document);\n      document.clear();\n\n      if (usually()) {\n        iw.commit();\n      }\n    }\n\n    iw.deleteDocuments(new Term(\"str_field\", \"delete\"));\n\n    DirectoryReader reader = DirectoryReader.open(iw, true);\n    SuggestIndexSearcher indexSearcher = new SuggestIndexSearcher(reader, analyzer);\n    TopSuggestDocs suggest = indexSearcher.suggest(\"suggest_field\", \"abc_\", numLive);\n    assertSuggestions(suggest, expectedEntries.toArray(new Entry[expectedEntries.size()]));\n\n    reader.close();\n    iw.close();\n  }\n\n","sourceOld":"  @Test\n  public void testNRTDeletedDocFiltering() throws Exception {\n    Analyzer analyzer = new MockAnalyzer(random());\n    // using IndexWriter instead of RandomIndexWriter\n    IndexWriter iw = new IndexWriter(dir, iwcWithSuggestField(analyzer, \"suggest_field\"));\n\n    int num = atLeast(10);\n\n    Document document = new Document();\n    int numLive = 0;\n    List<Entry> expectedEntries = new ArrayList<>();\n    for (int i = 0; i < num; i++) {\n      document.add(newSuggestField(\"suggest_field\", \"abc_\" + i, num - i));\n      if (i % 2 == 0) {\n        document.add(newStringField(\"str_field\", \"delete\", Field.Store.YES));\n      } else {\n        numLive++;\n        expectedEntries.add(new Entry(\"abc_\" + i, num - i));\n        document.add(newStringField(\"str_field\", \"no_delete\", Field.Store.YES));\n      }\n      iw.addDocument(document);\n      document.clear();\n\n      if (usually()) {\n        iw.commit();\n      }\n    }\n\n    iw.deleteDocuments(new Term(\"str_field\", \"delete\"));\n\n    DirectoryReader reader = DirectoryReader.open(iw, true);\n    SuggestIndexSearcher indexSearcher = new SuggestIndexSearcher(reader, analyzer);\n    TopSuggestDocs suggest = indexSearcher.suggest(\"suggest_field\", \"abc_\", numLive);\n    assertSuggestions(suggest, expectedEntries.toArray(new Entry[expectedEntries.size()]));\n\n    reader.close();\n    iw.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8c33f6677a2078739058f81eca1df69d12cd62b0","date":1432799589,"type":5,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/suggest/src/test/org/apache/lucene/search/suggest/document/TestSuggestField#testNRTDeletedDocFiltering().mjava","pathOld":"lucene/suggest/src/test/org/apache/lucene/search/suggest/document/SuggestFieldTest#testNRTDeletedDocFiltering().mjava","sourceNew":"  @Test\n  public void testNRTDeletedDocFiltering() throws Exception {\n    Analyzer analyzer = new MockAnalyzer(random());\n    // using IndexWriter instead of RandomIndexWriter\n    IndexWriter iw = new IndexWriter(dir, iwcWithSuggestField(analyzer, \"suggest_field\"));\n\n    int num = Math.min(1000, atLeast(10));\n\n    Document document = new Document();\n    int numLive = 0;\n    List<Entry> expectedEntries = new ArrayList<>();\n    for (int i = 0; i < num; i++) {\n      document.add(new SuggestField(\"suggest_field\", \"abc_\" + i, num - i));\n      if (i % 2 == 0) {\n        document.add(newStringField(\"str_field\", \"delete\", Field.Store.YES));\n      } else {\n        numLive++;\n        expectedEntries.add(new Entry(\"abc_\" + i, num - i));\n        document.add(newStringField(\"str_field\", \"no_delete\", Field.Store.YES));\n      }\n      iw.addDocument(document);\n      document.clear();\n\n      if (usually()) {\n        iw.commit();\n      }\n    }\n\n    iw.deleteDocuments(new Term(\"str_field\", \"delete\"));\n\n    DirectoryReader reader = DirectoryReader.open(iw, true);\n    SuggestIndexSearcher indexSearcher = new SuggestIndexSearcher(reader);\n    PrefixCompletionQuery query = new PrefixCompletionQuery(analyzer, new Term(\"suggest_field\", \"abc_\"));\n    TopSuggestDocs suggest = indexSearcher.suggest(query, numLive);\n    assertSuggestions(suggest, expectedEntries.toArray(new Entry[expectedEntries.size()]));\n\n    reader.close();\n    iw.close();\n  }\n\n","sourceOld":"  @Test\n  public void testNRTDeletedDocFiltering() throws Exception {\n    Analyzer analyzer = new MockAnalyzer(random());\n    // using IndexWriter instead of RandomIndexWriter\n    IndexWriter iw = new IndexWriter(dir, iwcWithSuggestField(analyzer, \"suggest_field\"));\n\n    int num = Math.min(1000, atLeast(10));\n\n    Document document = new Document();\n    int numLive = 0;\n    List<Entry> expectedEntries = new ArrayList<>();\n    for (int i = 0; i < num; i++) {\n      document.add(newSuggestField(\"suggest_field\", \"abc_\" + i, num - i));\n      if (i % 2 == 0) {\n        document.add(newStringField(\"str_field\", \"delete\", Field.Store.YES));\n      } else {\n        numLive++;\n        expectedEntries.add(new Entry(\"abc_\" + i, num - i));\n        document.add(newStringField(\"str_field\", \"no_delete\", Field.Store.YES));\n      }\n      iw.addDocument(document);\n      document.clear();\n\n      if (usually()) {\n        iw.commit();\n      }\n    }\n\n    iw.deleteDocuments(new Term(\"str_field\", \"delete\"));\n\n    DirectoryReader reader = DirectoryReader.open(iw, true);\n    SuggestIndexSearcher indexSearcher = new SuggestIndexSearcher(reader, analyzer);\n    TopSuggestDocs suggest = indexSearcher.suggest(\"suggest_field\", \"abc_\", numLive);\n    assertSuggestions(suggest, expectedEntries.toArray(new Entry[expectedEntries.size()]));\n\n    reader.close();\n    iw.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"1ecb18e7a0316ea550446daf785b5fa65c049cdd":["ff937985a3ef5bdbb2e12a9d4a02de6da424f2ef"],"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","07e29e9a1cbba8cc30091c3e4f8e9eac7ec7d22a"],"07e29e9a1cbba8cc30091c3e4f8e9eac7ec7d22a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"ff937985a3ef5bdbb2e12a9d4a02de6da424f2ef":["cc96bda7785ce4a038b07266c8a1fd64eaf82dcf"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"6c757ac42dd1f3f893db5c4d89c61cbe1a9fab6c":["0c924d4069ef5a5bc479a493befe0121aada6896","ff937985a3ef5bdbb2e12a9d4a02de6da424f2ef"],"8c33f6677a2078739058f81eca1df69d12cd62b0":["1ecb18e7a0316ea550446daf785b5fa65c049cdd"],"cc96bda7785ce4a038b07266c8a1fd64eaf82dcf":["07e29e9a1cbba8cc30091c3e4f8e9eac7ec7d22a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["8c33f6677a2078739058f81eca1df69d12cd62b0"],"0c924d4069ef5a5bc479a493befe0121aada6896":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","cc96bda7785ce4a038b07266c8a1fd64eaf82dcf"]},"commit2Childs":{"1ecb18e7a0316ea550446daf785b5fa65c049cdd":["8c33f6677a2078739058f81eca1df69d12cd62b0"],"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":["0c924d4069ef5a5bc479a493befe0121aada6896"],"07e29e9a1cbba8cc30091c3e4f8e9eac7ec7d22a":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","cc96bda7785ce4a038b07266c8a1fd64eaf82dcf"],"ff937985a3ef5bdbb2e12a9d4a02de6da424f2ef":["1ecb18e7a0316ea550446daf785b5fa65c049cdd","6c757ac42dd1f3f893db5c4d89c61cbe1a9fab6c"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","07e29e9a1cbba8cc30091c3e4f8e9eac7ec7d22a"],"6c757ac42dd1f3f893db5c4d89c61cbe1a9fab6c":[],"8c33f6677a2078739058f81eca1df69d12cd62b0":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cc96bda7785ce4a038b07266c8a1fd64eaf82dcf":["ff937985a3ef5bdbb2e12a9d4a02de6da424f2ef","0c924d4069ef5a5bc479a493befe0121aada6896"],"0c924d4069ef5a5bc479a493befe0121aada6896":["6c757ac42dd1f3f893db5c4d89c61cbe1a9fab6c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["6c757ac42dd1f3f893db5c4d89c61cbe1a9fab6c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}