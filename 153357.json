{"path":"solr/core/src/java/org/apache/solr/core/SolrCore#setResponseHeaderValues(SolrRequestHandler,SolrQueryRequest,SolrQueryResponse).mjava","commits":[{"id":"c903c3d15906a3da96b8c0c2fb704491005fdbdb","date":1453508227,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/SolrCore#setResponseHeaderValues(SolrRequestHandler,SolrQueryRequest,SolrQueryResponse).mjava","pathOld":"solr/src/java/org/apache/solr/core/SolrCore#setResponseHeaderValues(SolrRequestHandler,SolrQueryRequest,SolrQueryResponse).mjava","sourceNew":"  public static void setResponseHeaderValues(SolrRequestHandler handler, SolrQueryRequest req, SolrQueryResponse rsp) {\n    // TODO should check that responseHeader has not been replaced by handler\n    NamedList<Object> responseHeader = rsp.getResponseHeader();\n    final int qtime=(int)(rsp.getEndTime() - req.getStartTime());\n    int status = 0;\n    Exception exception = rsp.getException();\n    if( exception != null ){\n      if( exception instanceof SolrException )\n        status = ((SolrException)exception).code();\n      else\n        status = 500;\n    }\n    responseHeader.add(\"status\",status);\n    responseHeader.add(\"QTime\",qtime);\n    rsp.getToLog().add(\"status\",status);\n    rsp.getToLog().add(\"QTime\",qtime);\n    \n    SolrParams params = req.getParams();\n    if( params.getBool(CommonParams.HEADER_ECHO_HANDLER, false) ) {\n      responseHeader.add(\"handler\", handler.getName() );\n    }\n    \n    // Values for echoParams... false/true/all or false/explicit/all ???\n    String ep = params.get( CommonParams.HEADER_ECHO_PARAMS, null );\n    if( ep != null ) {\n      EchoParamStyle echoParams = EchoParamStyle.get( ep );\n      if( echoParams == null ) {\n        throw new SolrException( SolrException.ErrorCode.BAD_REQUEST,\"Invalid value '\" + ep + \"' for \" + CommonParams.HEADER_ECHO_PARAMS \n            + \" parameter, use '\" + EchoParamStyle.EXPLICIT + \"' or '\" + EchoParamStyle.ALL + \"'\" );\n      }\n      if( echoParams == EchoParamStyle.EXPLICIT ) {\n        responseHeader.add(\"params\", req.getOriginalParams().toNamedList());\n      } else if( echoParams == EchoParamStyle.ALL ) {\n        responseHeader.add(\"params\", req.getParams().toNamedList());\n      }\n    }\n  }\n\n","sourceOld":"  public static void setResponseHeaderValues(SolrRequestHandler handler, SolrQueryRequest req, SolrQueryResponse rsp) {\n    // TODO should check that responseHeader has not been replaced by handler\n    NamedList<Object> responseHeader = rsp.getResponseHeader();\n    final int qtime=(int)(rsp.getEndTime() - req.getStartTime());\n    int status = 0;\n    Exception exception = rsp.getException();\n    if( exception != null ){\n      if( exception instanceof SolrException )\n        status = ((SolrException)exception).code();\n      else\n        status = 500;\n    }\n    responseHeader.add(\"status\",status);\n    responseHeader.add(\"QTime\",qtime);\n    rsp.getToLog().add(\"status\",status);\n    rsp.getToLog().add(\"QTime\",qtime);\n    \n    SolrParams params = req.getParams();\n    if( params.getBool(CommonParams.HEADER_ECHO_HANDLER, false) ) {\n      responseHeader.add(\"handler\", handler.getName() );\n    }\n    \n    // Values for echoParams... false/true/all or false/explicit/all ???\n    String ep = params.get( CommonParams.HEADER_ECHO_PARAMS, null );\n    if( ep != null ) {\n      EchoParamStyle echoParams = EchoParamStyle.get( ep );\n      if( echoParams == null ) {\n        throw new SolrException( SolrException.ErrorCode.BAD_REQUEST,\"Invalid value '\" + ep + \"' for \" + CommonParams.HEADER_ECHO_PARAMS \n            + \" parameter, use '\" + EchoParamStyle.EXPLICIT + \"' or '\" + EchoParamStyle.ALL + \"'\" );\n      }\n      if( echoParams == EchoParamStyle.EXPLICIT ) {\n        responseHeader.add(\"params\", req.getOriginalParams().toNamedList());\n      } else if( echoParams == EchoParamStyle.ALL ) {\n        responseHeader.add(\"params\", req.getParams().toNamedList());\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a258fbb26824fd104ed795e5d9033d2d040049ee","date":1453508252,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/SolrCore#setResponseHeaderValues(SolrRequestHandler,SolrQueryRequest,SolrQueryResponse).mjava","pathOld":"solr/src/java/org/apache/solr/core/SolrCore#setResponseHeaderValues(SolrRequestHandler,SolrQueryRequest,SolrQueryResponse).mjava","sourceNew":"  public static void setResponseHeaderValues(SolrRequestHandler handler, SolrQueryRequest req, SolrQueryResponse rsp) {\n    // TODO should check that responseHeader has not been replaced by handler\n    NamedList<Object> responseHeader = rsp.getResponseHeader();\n    final int qtime=(int)(rsp.getEndTime() - req.getStartTime());\n    int status = 0;\n    Exception exception = rsp.getException();\n    if( exception != null ){\n      if( exception instanceof SolrException )\n        status = ((SolrException)exception).code();\n      else\n        status = 500;\n    }\n    responseHeader.add(\"status\",status);\n    responseHeader.add(\"QTime\",qtime);\n    rsp.getToLog().add(\"status\",status);\n    rsp.getToLog().add(\"QTime\",qtime);\n    \n    SolrParams params = req.getParams();\n    if( params.getBool(CommonParams.HEADER_ECHO_HANDLER, false) ) {\n      responseHeader.add(\"handler\", handler.getName() );\n    }\n    \n    // Values for echoParams... false/true/all or false/explicit/all ???\n    String ep = params.get( CommonParams.HEADER_ECHO_PARAMS, null );\n    if( ep != null ) {\n      EchoParamStyle echoParams = EchoParamStyle.get( ep );\n      if( echoParams == null ) {\n        throw new SolrException( SolrException.ErrorCode.BAD_REQUEST,\"Invalid value '\" + ep + \"' for \" + CommonParams.HEADER_ECHO_PARAMS \n            + \" parameter, use '\" + EchoParamStyle.EXPLICIT + \"' or '\" + EchoParamStyle.ALL + \"'\" );\n      }\n      if( echoParams == EchoParamStyle.EXPLICIT ) {\n        responseHeader.add(\"params\", req.getOriginalParams().toNamedList());\n      } else if( echoParams == EchoParamStyle.ALL ) {\n        responseHeader.add(\"params\", req.getParams().toNamedList());\n      }\n    }\n  }\n\n","sourceOld":"  public static void setResponseHeaderValues(SolrRequestHandler handler, SolrQueryRequest req, SolrQueryResponse rsp) {\n    // TODO should check that responseHeader has not been replaced by handler\n    NamedList<Object> responseHeader = rsp.getResponseHeader();\n    final int qtime=(int)(rsp.getEndTime() - req.getStartTime());\n    int status = 0;\n    Exception exception = rsp.getException();\n    if( exception != null ){\n      if( exception instanceof SolrException )\n        status = ((SolrException)exception).code();\n      else\n        status = 500;\n    }\n    responseHeader.add(\"status\",status);\n    responseHeader.add(\"QTime\",qtime);\n    rsp.getToLog().add(\"status\",status);\n    rsp.getToLog().add(\"QTime\",qtime);\n    \n    SolrParams params = req.getParams();\n    if( params.getBool(CommonParams.HEADER_ECHO_HANDLER, false) ) {\n      responseHeader.add(\"handler\", handler.getName() );\n    }\n    \n    // Values for echoParams... false/true/all or false/explicit/all ???\n    String ep = params.get( CommonParams.HEADER_ECHO_PARAMS, null );\n    if( ep != null ) {\n      EchoParamStyle echoParams = EchoParamStyle.get( ep );\n      if( echoParams == null ) {\n        throw new SolrException( SolrException.ErrorCode.BAD_REQUEST,\"Invalid value '\" + ep + \"' for \" + CommonParams.HEADER_ECHO_PARAMS \n            + \" parameter, use '\" + EchoParamStyle.EXPLICIT + \"' or '\" + EchoParamStyle.ALL + \"'\" );\n      }\n      if( echoParams == EchoParamStyle.EXPLICIT ) {\n        responseHeader.add(\"params\", req.getOriginalParams().toNamedList());\n      } else if( echoParams == EchoParamStyle.ALL ) {\n        responseHeader.add(\"params\", req.getParams().toNamedList());\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/core/SolrCore#setResponseHeaderValues(SolrRequestHandler,SolrQueryRequest,SolrQueryResponse).mjava","pathOld":"solr/src/java/org/apache/solr/core/SolrCore#setResponseHeaderValues(SolrRequestHandler,SolrQueryRequest,SolrQueryResponse).mjava","sourceNew":"  public static void setResponseHeaderValues(SolrRequestHandler handler, SolrQueryRequest req, SolrQueryResponse rsp) {\n    // TODO should check that responseHeader has not been replaced by handler\n    NamedList<Object> responseHeader = rsp.getResponseHeader();\n    final int qtime=(int)(rsp.getEndTime() - req.getStartTime());\n    int status = 0;\n    Exception exception = rsp.getException();\n    if( exception != null ){\n      if( exception instanceof SolrException )\n        status = ((SolrException)exception).code();\n      else\n        status = 500;\n    }\n    responseHeader.add(\"status\",status);\n    responseHeader.add(\"QTime\",qtime);\n    rsp.getToLog().add(\"status\",status);\n    rsp.getToLog().add(\"QTime\",qtime);\n    \n    SolrParams params = req.getParams();\n    if( params.getBool(CommonParams.HEADER_ECHO_HANDLER, false) ) {\n      responseHeader.add(\"handler\", handler.getName() );\n    }\n    \n    // Values for echoParams... false/true/all or false/explicit/all ???\n    String ep = params.get( CommonParams.HEADER_ECHO_PARAMS, null );\n    if( ep != null ) {\n      EchoParamStyle echoParams = EchoParamStyle.get( ep );\n      if( echoParams == null ) {\n        throw new SolrException( SolrException.ErrorCode.BAD_REQUEST,\"Invalid value '\" + ep + \"' for \" + CommonParams.HEADER_ECHO_PARAMS \n            + \" parameter, use '\" + EchoParamStyle.EXPLICIT + \"' or '\" + EchoParamStyle.ALL + \"'\" );\n      }\n      if( echoParams == EchoParamStyle.EXPLICIT ) {\n        responseHeader.add(\"params\", req.getOriginalParams().toNamedList());\n      } else if( echoParams == EchoParamStyle.ALL ) {\n        responseHeader.add(\"params\", req.getParams().toNamedList());\n      }\n    }\n  }\n\n","sourceOld":"  public static void setResponseHeaderValues(SolrRequestHandler handler, SolrQueryRequest req, SolrQueryResponse rsp) {\n    // TODO should check that responseHeader has not been replaced by handler\n    NamedList<Object> responseHeader = rsp.getResponseHeader();\n    final int qtime=(int)(rsp.getEndTime() - req.getStartTime());\n    int status = 0;\n    Exception exception = rsp.getException();\n    if( exception != null ){\n      if( exception instanceof SolrException )\n        status = ((SolrException)exception).code();\n      else\n        status = 500;\n    }\n    responseHeader.add(\"status\",status);\n    responseHeader.add(\"QTime\",qtime);\n    rsp.getToLog().add(\"status\",status);\n    rsp.getToLog().add(\"QTime\",qtime);\n    \n    SolrParams params = req.getParams();\n    if( params.getBool(CommonParams.HEADER_ECHO_HANDLER, false) ) {\n      responseHeader.add(\"handler\", handler.getName() );\n    }\n    \n    // Values for echoParams... false/true/all or false/explicit/all ???\n    String ep = params.get( CommonParams.HEADER_ECHO_PARAMS, null );\n    if( ep != null ) {\n      EchoParamStyle echoParams = EchoParamStyle.get( ep );\n      if( echoParams == null ) {\n        throw new SolrException( SolrException.ErrorCode.BAD_REQUEST,\"Invalid value '\" + ep + \"' for \" + CommonParams.HEADER_ECHO_PARAMS \n            + \" parameter, use '\" + EchoParamStyle.EXPLICIT + \"' or '\" + EchoParamStyle.ALL + \"'\" );\n      }\n      if( echoParams == EchoParamStyle.EXPLICIT ) {\n        responseHeader.add(\"params\", req.getOriginalParams().toNamedList());\n      } else if( echoParams == EchoParamStyle.ALL ) {\n        responseHeader.add(\"params\", req.getParams().toNamedList());\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f8f7907798e0c730e9ab37681c6e8dfbde0e4173","date":1330361299,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/SolrCore#setResponseHeaderValues(SolrRequestHandler,SolrQueryRequest,SolrQueryResponse).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/SolrCore#setResponseHeaderValues(SolrRequestHandler,SolrQueryRequest,SolrQueryResponse).mjava","sourceNew":"  public static void setResponseHeaderValues(SolrRequestHandler handler, SolrQueryRequest req, SolrQueryResponse rsp) {\n    // TODO should check that responseHeader has not been replaced by handler\n    NamedList<Object> responseHeader = rsp.getResponseHeader();\n    final int qtime=(int)(rsp.getEndTime() - req.getStartTime());\n    int status = 0;\n    Exception exception = rsp.getException();\n    if( exception != null ){\n      if( exception instanceof SolrException )\n        status = ((SolrException)exception).code();\n      else\n        status = 500;\n    }\n    responseHeader.add(\"status\",status);\n    responseHeader.add(\"QTime\",qtime);\n\n    if (rsp.getToLog().size() > 0) {\n      rsp.getToLog().add(\"status\",status);\n      rsp.getToLog().add(\"QTime\",qtime);\n    }\n\n    SolrParams params = req.getParams();\n    if( params.getBool(CommonParams.HEADER_ECHO_HANDLER, false) ) {\n      responseHeader.add(\"handler\", handler.getName() );\n    }\n    \n    // Values for echoParams... false/true/all or false/explicit/all ???\n    String ep = params.get( CommonParams.HEADER_ECHO_PARAMS, null );\n    if( ep != null ) {\n      EchoParamStyle echoParams = EchoParamStyle.get( ep );\n      if( echoParams == null ) {\n        throw new SolrException( SolrException.ErrorCode.BAD_REQUEST,\"Invalid value '\" + ep + \"' for \" + CommonParams.HEADER_ECHO_PARAMS \n            + \" parameter, use '\" + EchoParamStyle.EXPLICIT + \"' or '\" + EchoParamStyle.ALL + \"'\" );\n      }\n      if( echoParams == EchoParamStyle.EXPLICIT ) {\n        responseHeader.add(\"params\", req.getOriginalParams().toNamedList());\n      } else if( echoParams == EchoParamStyle.ALL ) {\n        responseHeader.add(\"params\", req.getParams().toNamedList());\n      }\n    }\n  }\n\n","sourceOld":"  public static void setResponseHeaderValues(SolrRequestHandler handler, SolrQueryRequest req, SolrQueryResponse rsp) {\n    // TODO should check that responseHeader has not been replaced by handler\n    NamedList<Object> responseHeader = rsp.getResponseHeader();\n    final int qtime=(int)(rsp.getEndTime() - req.getStartTime());\n    int status = 0;\n    Exception exception = rsp.getException();\n    if( exception != null ){\n      if( exception instanceof SolrException )\n        status = ((SolrException)exception).code();\n      else\n        status = 500;\n    }\n    responseHeader.add(\"status\",status);\n    responseHeader.add(\"QTime\",qtime);\n    rsp.getToLog().add(\"status\",status);\n    rsp.getToLog().add(\"QTime\",qtime);\n    \n    SolrParams params = req.getParams();\n    if( params.getBool(CommonParams.HEADER_ECHO_HANDLER, false) ) {\n      responseHeader.add(\"handler\", handler.getName() );\n    }\n    \n    // Values for echoParams... false/true/all or false/explicit/all ???\n    String ep = params.get( CommonParams.HEADER_ECHO_PARAMS, null );\n    if( ep != null ) {\n      EchoParamStyle echoParams = EchoParamStyle.get( ep );\n      if( echoParams == null ) {\n        throw new SolrException( SolrException.ErrorCode.BAD_REQUEST,\"Invalid value '\" + ep + \"' for \" + CommonParams.HEADER_ECHO_PARAMS \n            + \" parameter, use '\" + EchoParamStyle.EXPLICIT + \"' or '\" + EchoParamStyle.ALL + \"'\" );\n      }\n      if( echoParams == EchoParamStyle.EXPLICIT ) {\n        responseHeader.add(\"params\", req.getOriginalParams().toNamedList());\n      } else if( echoParams == EchoParamStyle.ALL ) {\n        responseHeader.add(\"params\", req.getParams().toNamedList());\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab","date":1331075828,"type":3,"author":"Ryan McKinley","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/core/SolrCore#setResponseHeaderValues(SolrRequestHandler,SolrQueryRequest,SolrQueryResponse).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/SolrCore#setResponseHeaderValues(SolrRequestHandler,SolrQueryRequest,SolrQueryResponse).mjava","sourceNew":"  public static void setResponseHeaderValues(SolrRequestHandler handler, SolrQueryRequest req, SolrQueryResponse rsp) {\n    // TODO should check that responseHeader has not been replaced by handler\n    NamedList<Object> responseHeader = rsp.getResponseHeader();\n    final int qtime=(int)(rsp.getEndTime() - req.getStartTime());\n    int status = 0;\n    Exception exception = rsp.getException();\n    if( exception != null ){\n      if( exception instanceof SolrException )\n        status = ((SolrException)exception).code();\n      else\n        status = 500;\n    }\n    responseHeader.add(\"status\",status);\n    responseHeader.add(\"QTime\",qtime);\n\n    if (rsp.getToLog().size() > 0) {\n      rsp.getToLog().add(\"status\",status);\n      rsp.getToLog().add(\"QTime\",qtime);\n    }\n\n    SolrParams params = req.getParams();\n    if( params.getBool(CommonParams.HEADER_ECHO_HANDLER, false) ) {\n      responseHeader.add(\"handler\", handler.getName() );\n    }\n    \n    // Values for echoParams... false/true/all or false/explicit/all ???\n    String ep = params.get( CommonParams.HEADER_ECHO_PARAMS, null );\n    if( ep != null ) {\n      EchoParamStyle echoParams = EchoParamStyle.get( ep );\n      if( echoParams == null ) {\n        throw new SolrException( SolrException.ErrorCode.BAD_REQUEST,\"Invalid value '\" + ep + \"' for \" + CommonParams.HEADER_ECHO_PARAMS \n            + \" parameter, use '\" + EchoParamStyle.EXPLICIT + \"' or '\" + EchoParamStyle.ALL + \"'\" );\n      }\n      if( echoParams == EchoParamStyle.EXPLICIT ) {\n        responseHeader.add(\"params\", req.getOriginalParams().toNamedList());\n      } else if( echoParams == EchoParamStyle.ALL ) {\n        responseHeader.add(\"params\", req.getParams().toNamedList());\n      }\n    }\n  }\n\n","sourceOld":"  public static void setResponseHeaderValues(SolrRequestHandler handler, SolrQueryRequest req, SolrQueryResponse rsp) {\n    // TODO should check that responseHeader has not been replaced by handler\n    NamedList<Object> responseHeader = rsp.getResponseHeader();\n    final int qtime=(int)(rsp.getEndTime() - req.getStartTime());\n    int status = 0;\n    Exception exception = rsp.getException();\n    if( exception != null ){\n      if( exception instanceof SolrException )\n        status = ((SolrException)exception).code();\n      else\n        status = 500;\n    }\n    responseHeader.add(\"status\",status);\n    responseHeader.add(\"QTime\",qtime);\n    rsp.getToLog().add(\"status\",status);\n    rsp.getToLog().add(\"QTime\",qtime);\n    \n    SolrParams params = req.getParams();\n    if( params.getBool(CommonParams.HEADER_ECHO_HANDLER, false) ) {\n      responseHeader.add(\"handler\", handler.getName() );\n    }\n    \n    // Values for echoParams... false/true/all or false/explicit/all ???\n    String ep = params.get( CommonParams.HEADER_ECHO_PARAMS, null );\n    if( ep != null ) {\n      EchoParamStyle echoParams = EchoParamStyle.get( ep );\n      if( echoParams == null ) {\n        throw new SolrException( SolrException.ErrorCode.BAD_REQUEST,\"Invalid value '\" + ep + \"' for \" + CommonParams.HEADER_ECHO_PARAMS \n            + \" parameter, use '\" + EchoParamStyle.EXPLICIT + \"' or '\" + EchoParamStyle.ALL + \"'\" );\n      }\n      if( echoParams == EchoParamStyle.EXPLICIT ) {\n        responseHeader.add(\"params\", req.getOriginalParams().toNamedList());\n      } else if( echoParams == EchoParamStyle.ALL ) {\n        responseHeader.add(\"params\", req.getParams().toNamedList());\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"dfdcc495f7097a13c0ae88a3338561749a4eac0b","date":1332737079,"type":3,"author":"David Wayne Smiley","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/SolrCore#setResponseHeaderValues(SolrRequestHandler,SolrQueryRequest,SolrQueryResponse).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/SolrCore#setResponseHeaderValues(SolrRequestHandler,SolrQueryRequest,SolrQueryResponse).mjava","sourceNew":"  public static void setResponseHeaderValues(SolrRequestHandler handler, SolrQueryRequest req, SolrQueryResponse rsp) {\n    // TODO should check that responseHeader has not been replaced by handler\n    NamedList<Object> responseHeader = rsp.getResponseHeader();\n    final int qtime=(int)(rsp.getEndTime() - req.getStartTime());\n    int status = 0;\n    Exception exception = rsp.getException();\n    if( exception != null ){\n      if( exception instanceof SolrException )\n        status = ((SolrException)exception).code();\n      else\n        status = 500;\n    }\n    responseHeader.add(\"status\",status);\n    responseHeader.add(\"QTime\",qtime);\n\n    if (rsp.getToLog().size() > 0) {\n      rsp.getToLog().add(\"status\",status);\n      rsp.getToLog().add(\"QTime\",qtime);\n    }\n\n    SolrParams params = req.getParams();\n    if( params.getBool(CommonParams.HEADER_ECHO_HANDLER, false) ) {\n      responseHeader.add(\"handler\", handler.getName() );\n    }\n\n    // Values for echoParams... false/true/all or false/explicit/all ???\n    String ep = params.get( CommonParams.HEADER_ECHO_PARAMS, null );\n    if( ep != null ) {\n      EchoParamStyle echoParams = EchoParamStyle.get( ep );\n      if( echoParams == null ) {\n        throw new SolrException( SolrException.ErrorCode.BAD_REQUEST,\"Invalid value '\" + ep + \"' for \" + CommonParams.HEADER_ECHO_PARAMS \n            + \" parameter, use '\" + EchoParamStyle.EXPLICIT + \"' or '\" + EchoParamStyle.ALL + \"'\" );\n      }\n      if( echoParams == EchoParamStyle.EXPLICIT ) {\n        responseHeader.add(\"params\", req.getOriginalParams().toNamedList());\n      } else if( echoParams == EchoParamStyle.ALL ) {\n        responseHeader.add(\"params\", req.getParams().toNamedList());\n      }\n    }\n  }\n\n","sourceOld":"  public static void setResponseHeaderValues(SolrRequestHandler handler, SolrQueryRequest req, SolrQueryResponse rsp) {\n    // TODO should check that responseHeader has not been replaced by handler\n    NamedList<Object> responseHeader = rsp.getResponseHeader();\n    final int qtime=(int)(rsp.getEndTime() - req.getStartTime());\n    int status = 0;\n    Exception exception = rsp.getException();\n    if( exception != null ){\n      if( exception instanceof SolrException )\n        status = ((SolrException)exception).code();\n      else\n        status = 500;\n    }\n    responseHeader.add(\"status\",status);\n    responseHeader.add(\"QTime\",qtime);\n\n    if (rsp.getToLog().size() > 0) {\n      rsp.getToLog().add(\"status\",status);\n      rsp.getToLog().add(\"QTime\",qtime);\n    }\n\n    SolrParams params = req.getParams();\n    if( params.getBool(CommonParams.HEADER_ECHO_HANDLER, false) ) {\n      responseHeader.add(\"handler\", handler.getName() );\n    }\n    \n    // Values for echoParams... false/true/all or false/explicit/all ???\n    String ep = params.get( CommonParams.HEADER_ECHO_PARAMS, null );\n    if( ep != null ) {\n      EchoParamStyle echoParams = EchoParamStyle.get( ep );\n      if( echoParams == null ) {\n        throw new SolrException( SolrException.ErrorCode.BAD_REQUEST,\"Invalid value '\" + ep + \"' for \" + CommonParams.HEADER_ECHO_PARAMS \n            + \" parameter, use '\" + EchoParamStyle.EXPLICIT + \"' or '\" + EchoParamStyle.ALL + \"'\" );\n      }\n      if( echoParams == EchoParamStyle.EXPLICIT ) {\n        responseHeader.add(\"params\", req.getOriginalParams().toNamedList());\n      } else if( echoParams == EchoParamStyle.ALL ) {\n        responseHeader.add(\"params\", req.getParams().toNamedList());\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"054c04cf724f73ebdd3b16e3a86ce802c0ba5e37","date":1362545433,"type":5,"author":"Steven Rowe","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/SolrCore#postDecorateResponse(SolrRequestHandler,SolrQueryRequest,SolrQueryResponse).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/SolrCore#setResponseHeaderValues(SolrRequestHandler,SolrQueryRequest,SolrQueryResponse).mjava","sourceNew":"  /** Put status, QTime, and possibly request handler and params, in the response header */\n  public static void postDecorateResponse\n      (SolrRequestHandler handler, SolrQueryRequest req, SolrQueryResponse rsp) {\n    // TODO should check that responseHeader has not been replaced by handler\n    NamedList<Object> responseHeader = rsp.getResponseHeader();\n    final int qtime=(int)(rsp.getEndTime() - req.getStartTime());\n    int status = 0;\n    Exception exception = rsp.getException();\n    if( exception != null ){\n      if( exception instanceof SolrException )\n        status = ((SolrException)exception).code();\n      else\n        status = 500;\n    }\n    responseHeader.add(\"status\",status);\n    responseHeader.add(\"QTime\",qtime);\n\n    if (rsp.getToLog().size() > 0) {\n      rsp.getToLog().add(\"status\",status);\n      rsp.getToLog().add(\"QTime\",qtime);\n    }\n\n    SolrParams params = req.getParams();\n    if( null != handler && params.getBool(CommonParams.HEADER_ECHO_HANDLER, false) ) {\n      responseHeader.add(\"handler\", handler.getName() );\n    }\n\n    // Values for echoParams... false/true/all or false/explicit/all ???\n    String ep = params.get( CommonParams.HEADER_ECHO_PARAMS, null );\n    if( ep != null ) {\n      EchoParamStyle echoParams = EchoParamStyle.get( ep );\n      if( echoParams == null ) {\n        throw new SolrException( SolrException.ErrorCode.BAD_REQUEST,\"Invalid value '\" + ep + \"' for \" + CommonParams.HEADER_ECHO_PARAMS \n            + \" parameter, use '\" + EchoParamStyle.EXPLICIT + \"' or '\" + EchoParamStyle.ALL + \"'\" );\n      }\n      if( echoParams == EchoParamStyle.EXPLICIT ) {\n        responseHeader.add(\"params\", req.getOriginalParams().toNamedList());\n      } else if( echoParams == EchoParamStyle.ALL ) {\n        responseHeader.add(\"params\", req.getParams().toNamedList());\n      }\n    }\n  }\n\n","sourceOld":"  public static void setResponseHeaderValues(SolrRequestHandler handler, SolrQueryRequest req, SolrQueryResponse rsp) {\n    // TODO should check that responseHeader has not been replaced by handler\n    NamedList<Object> responseHeader = rsp.getResponseHeader();\n    final int qtime=(int)(rsp.getEndTime() - req.getStartTime());\n    int status = 0;\n    Exception exception = rsp.getException();\n    if( exception != null ){\n      if( exception instanceof SolrException )\n        status = ((SolrException)exception).code();\n      else\n        status = 500;\n    }\n    responseHeader.add(\"status\",status);\n    responseHeader.add(\"QTime\",qtime);\n\n    if (rsp.getToLog().size() > 0) {\n      rsp.getToLog().add(\"status\",status);\n      rsp.getToLog().add(\"QTime\",qtime);\n    }\n\n    SolrParams params = req.getParams();\n    if( params.getBool(CommonParams.HEADER_ECHO_HANDLER, false) ) {\n      responseHeader.add(\"handler\", handler.getName() );\n    }\n\n    // Values for echoParams... false/true/all or false/explicit/all ???\n    String ep = params.get( CommonParams.HEADER_ECHO_PARAMS, null );\n    if( ep != null ) {\n      EchoParamStyle echoParams = EchoParamStyle.get( ep );\n      if( echoParams == null ) {\n        throw new SolrException( SolrException.ErrorCode.BAD_REQUEST,\"Invalid value '\" + ep + \"' for \" + CommonParams.HEADER_ECHO_PARAMS \n            + \" parameter, use '\" + EchoParamStyle.EXPLICIT + \"' or '\" + EchoParamStyle.ALL + \"'\" );\n      }\n      if( echoParams == EchoParamStyle.EXPLICIT ) {\n        responseHeader.add(\"params\", req.getOriginalParams().toNamedList());\n      } else if( echoParams == EchoParamStyle.ALL ) {\n        responseHeader.add(\"params\", req.getParams().toNamedList());\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"dfdcc495f7097a13c0ae88a3338561749a4eac0b":["f8f7907798e0c730e9ab37681c6e8dfbde0e4173"],"f8f7907798e0c730e9ab37681c6e8dfbde0e4173":["c26f00b574427b55127e869b935845554afde1fa"],"9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab":["c26f00b574427b55127e869b935845554afde1fa","f8f7907798e0c730e9ab37681c6e8dfbde0e4173"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"c26f00b574427b55127e869b935845554afde1fa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","c903c3d15906a3da96b8c0c2fb704491005fdbdb"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"054c04cf724f73ebdd3b16e3a86ce802c0ba5e37":["dfdcc495f7097a13c0ae88a3338561749a4eac0b"],"a258fbb26824fd104ed795e5d9033d2d040049ee":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["054c04cf724f73ebdd3b16e3a86ce802c0ba5e37"]},"commit2Childs":{"dfdcc495f7097a13c0ae88a3338561749a4eac0b":["054c04cf724f73ebdd3b16e3a86ce802c0ba5e37"],"f8f7907798e0c730e9ab37681c6e8dfbde0e4173":["dfdcc495f7097a13c0ae88a3338561749a4eac0b","9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab"],"9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab":[],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["c26f00b574427b55127e869b935845554afde1fa"],"c26f00b574427b55127e869b935845554afde1fa":["f8f7907798e0c730e9ab37681c6e8dfbde0e4173","9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c903c3d15906a3da96b8c0c2fb704491005fdbdb","c26f00b574427b55127e869b935845554afde1fa","a258fbb26824fd104ed795e5d9033d2d040049ee"],"054c04cf724f73ebdd3b16e3a86ce802c0ba5e37":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a258fbb26824fd104ed795e5d9033d2d040049ee":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab","a258fbb26824fd104ed795e5d9033d2d040049ee","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}