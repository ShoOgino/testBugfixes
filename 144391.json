{"path":"solr/core/src/test/org/apache/solr/rest/SolrRestletTestBase#init().mjava","commits":[{"id":"d2fa053a06c9c158f82d8e8b53b9a95031f43ebd","date":1364185773,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/rest/SolrRestletTestBase#init().mjava","pathOld":"solr/core/src/test/org/apache/solr/rest/SchemaRestletTestBase#init().mjava","sourceNew":"  @BeforeClass\n  public static void init() throws Exception {\n    final SortedMap<ServletHolder,String> extraServlets = new TreeMap<ServletHolder,String>();\n    final ServletHolder solrRestApi = new ServletHolder(\"SolrRestApi\", ServerServlet.class);\n    solrRestApi.setInitParameter(\"org.restlet.application\", \"org.apache.solr.rest.SolrRestApi\");\n    extraServlets.put(solrRestApi, \"/schema/*\");  // '/schema/*' matches '/schema', '/schema/', and '/schema/whatever...'\n\n    createJettyAndHarness(TEST_HOME(), \"solrconfig.xml\", \"schema-rest.xml\", \"/solr\", true, extraServlets);\n  }\n\n","sourceOld":"  @BeforeClass\n  public static void init() throws Exception {\n    final SortedMap<ServletHolder,String> extraServlets = new TreeMap<ServletHolder,String>();\n    final ServletHolder schemaRestApi = new ServletHolder(\"SchemaRestApi\", ServerServlet.class);\n    schemaRestApi.setInitParameter(\"org.restlet.application\", \"org.apache.solr.rest.SchemaRestApi\");\n    extraServlets.put(schemaRestApi, \"/schema/*\");\n\n    createJettyAndHarness(TEST_HOME(), \"solrconfig.xml\", \"schema-rest.xml\", \"/solr\", true, extraServlets);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"634f330c54fd3f9f491d52036dc3f40b4f4d8934","date":1394635157,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/rest/SolrRestletTestBase#init().mjava","pathOld":"solr/core/src/test/org/apache/solr/rest/SolrRestletTestBase#init().mjava","sourceNew":"  @BeforeClass\n  public static void init() throws Exception {\n    final SortedMap<ServletHolder,String> extraServlets = new TreeMap<>();\n    final ServletHolder solrRestApi = new ServletHolder(\"SolrRestApi\", ServerServlet.class);\n    solrRestApi.setInitParameter(\"org.restlet.application\", \"org.apache.solr.rest.SolrRestApi\");\n    extraServlets.put(solrRestApi, \"/schema/*\");  // '/schema/*' matches '/schema', '/schema/', and '/schema/whatever...'\n\n    createJettyAndHarness(TEST_HOME(), \"solrconfig.xml\", \"schema-rest.xml\", \"/solr\", true, extraServlets);\n  }\n\n","sourceOld":"  @BeforeClass\n  public static void init() throws Exception {\n    final SortedMap<ServletHolder,String> extraServlets = new TreeMap<ServletHolder,String>();\n    final ServletHolder solrRestApi = new ServletHolder(\"SolrRestApi\", ServerServlet.class);\n    solrRestApi.setInitParameter(\"org.restlet.application\", \"org.apache.solr.rest.SolrRestApi\");\n    extraServlets.put(solrRestApi, \"/schema/*\");  // '/schema/*' matches '/schema', '/schema/', and '/schema/whatever...'\n\n    createJettyAndHarness(TEST_HOME(), \"solrconfig.xml\", \"schema-rest.xml\", \"/solr\", true, extraServlets);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"afb6bf9ce227ab6aac5068547e286ecc958b8b9d","date":1394661169,"type":3,"author":"Steven Rowe","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/rest/SolrRestletTestBase#init().mjava","pathOld":"solr/core/src/test/org/apache/solr/rest/SolrRestletTestBase#init().mjava","sourceNew":"  /**\n   * Creates test harness, including \"extra\" servlets for all\n   * Solr Restlet Application subclasses.\n   */\n  @BeforeClass\n  public static void init() throws Exception {\n    final SortedMap<ServletHolder,String> extraServlets = new TreeMap<>();\n    final ServletHolder solrSchemaRestApi = new ServletHolder(\"SolrSchemaRestApi\", ServerServlet.class);\n    solrSchemaRestApi.setInitParameter(\"org.restlet.application\", \"org.apache.solr.rest.SolrSchemaRestApi\");\n    extraServlets.put(solrSchemaRestApi, \"/schema/*\");  // '/schema/*' matches '/schema', '/schema/', and '/schema/whatever...'\n\n    final ServletHolder solrConfigRestApi = new ServletHolder(\"SolrConfigRestApi\", ServerServlet.class);\n    solrConfigRestApi.setInitParameter(\"org.restlet.application\", \"org.apache.solr.rest.SolrConfigRestApi\");\n    extraServlets.put(solrConfigRestApi, \"/config/*\");\n\n    createJettyAndHarness(TEST_HOME(), \"solrconfig.xml\", \"schema-rest.xml\", \"/solr\", true, extraServlets);\n  }\n\n","sourceOld":"  @BeforeClass\n  public static void init() throws Exception {\n    final SortedMap<ServletHolder,String> extraServlets = new TreeMap<>();\n    final ServletHolder solrRestApi = new ServletHolder(\"SolrRestApi\", ServerServlet.class);\n    solrRestApi.setInitParameter(\"org.restlet.application\", \"org.apache.solr.rest.SolrRestApi\");\n    extraServlets.put(solrRestApi, \"/schema/*\");  // '/schema/*' matches '/schema', '/schema/', and '/schema/whatever...'\n\n    createJettyAndHarness(TEST_HOME(), \"solrconfig.xml\", \"schema-rest.xml\", \"/solr\", true, extraServlets);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"858c0f62e7b20002e4d94702c510512fb6292988","date":1417427955,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/rest/SolrRestletTestBase#init().mjava","pathOld":"solr/core/src/test/org/apache/solr/rest/SolrRestletTestBase#init().mjava","sourceNew":"  /**\n   * Creates test harness, including \"extra\" servlets for all\n   * Solr Restlet Application subclasses.\n   */\n  @BeforeClass\n  public static void init() throws Exception {\n    final SortedMap<ServletHolder,String> extraServlets = new TreeMap<>();\n    final ServletHolder solrSchemaRestApi = new ServletHolder(\"SolrSchemaRestApi\", ServerServlet.class);\n    solrSchemaRestApi.setInitParameter(\"org.restlet.application\", \"org.apache.solr.rest.SolrSchemaRestApi\");\n    extraServlets.put(solrSchemaRestApi, \"/schema/*\");  // '/schema/*' matches '/schema', '/schema/', and '/schema/whatever...'\n\n    createJettyAndHarness(TEST_HOME(), \"solrconfig.xml\", \"schema-rest.xml\", \"/solr\", true, extraServlets);\n  }\n\n","sourceOld":"  /**\n   * Creates test harness, including \"extra\" servlets for all\n   * Solr Restlet Application subclasses.\n   */\n  @BeforeClass\n  public static void init() throws Exception {\n    final SortedMap<ServletHolder,String> extraServlets = new TreeMap<>();\n    final ServletHolder solrSchemaRestApi = new ServletHolder(\"SolrSchemaRestApi\", ServerServlet.class);\n    solrSchemaRestApi.setInitParameter(\"org.restlet.application\", \"org.apache.solr.rest.SolrSchemaRestApi\");\n    extraServlets.put(solrSchemaRestApi, \"/schema/*\");  // '/schema/*' matches '/schema', '/schema/', and '/schema/whatever...'\n\n    final ServletHolder solrConfigRestApi = new ServletHolder(\"SolrConfigRestApi\", ServerServlet.class);\n    solrConfigRestApi.setInitParameter(\"org.restlet.application\", \"org.apache.solr.rest.SolrConfigRestApi\");\n    extraServlets.put(solrConfigRestApi, \"/config/*\");\n\n    createJettyAndHarness(TEST_HOME(), \"solrconfig.xml\", \"schema-rest.xml\", \"/solr\", true, extraServlets);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fd44bec977a26a118d9e809e2de6f7edb5ca0f39","date":1421673929,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/rest/SolrRestletTestBase#init().mjava","pathOld":"solr/core/src/test/org/apache/solr/rest/SolrRestletTestBase#init().mjava","sourceNew":"  /**\n   * Creates test harness, including \"extra\" servlets for all\n   * Solr Restlet Application subclasses.\n   */\n  @BeforeClass\n  public static void init() throws Exception {\n\n    Path tempDir = createTempDir();\n    Path coresDir = tempDir.resolve(\"cores\");\n\n    System.setProperty(\"coreRootDirectory\", coresDir.toString());\n    System.setProperty(\"configSetBaseDir\", TEST_HOME());\n\n    final SortedMap<ServletHolder,String> extraServlets = new TreeMap<>();\n    final ServletHolder solrSchemaRestApi = new ServletHolder(\"SolrSchemaRestApi\", ServerServlet.class);\n    solrSchemaRestApi.setInitParameter(\"org.restlet.application\", \"org.apache.solr.rest.SolrSchemaRestApi\");\n    extraServlets.put(solrSchemaRestApi, \"/schema/*\");  // '/schema/*' matches '/schema', '/schema/', and '/schema/whatever...'\n\n    Properties props = new Properties();\n    props.setProperty(\"name\", DEFAULT_TEST_CORENAME);\n    props.setProperty(\"config\", \"solrconfig.xml\");\n    props.setProperty(\"schema\", \"schema-rest.xml\");\n    props.setProperty(\"configSet\", \"collection1\");\n\n    writeCoreProperties(coresDir.resolve(\"core\"), props, \"SolrRestletTestBase\");\n    createJettyAndHarness(TEST_HOME(), \"solrconfig.xml\", \"schema-rest.xml\", \"/solr\", true, extraServlets);\n  }\n\n","sourceOld":"  /**\n   * Creates test harness, including \"extra\" servlets for all\n   * Solr Restlet Application subclasses.\n   */\n  @BeforeClass\n  public static void init() throws Exception {\n    final SortedMap<ServletHolder,String> extraServlets = new TreeMap<>();\n    final ServletHolder solrSchemaRestApi = new ServletHolder(\"SolrSchemaRestApi\", ServerServlet.class);\n    solrSchemaRestApi.setInitParameter(\"org.restlet.application\", \"org.apache.solr.rest.SolrSchemaRestApi\");\n    extraServlets.put(solrSchemaRestApi, \"/schema/*\");  // '/schema/*' matches '/schema', '/schema/', and '/schema/whatever...'\n\n    createJettyAndHarness(TEST_HOME(), \"solrconfig.xml\", \"schema-rest.xml\", \"/solr\", true, extraServlets);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"89fd5bce15c8e0ca1b10c9988cff9fdcc88c152b","date":1601832109,"type":3,"author":"Timothy Potter","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/rest/SolrRestletTestBase#init().mjava","pathOld":"solr/core/src/test/org/apache/solr/rest/SolrRestletTestBase#init().mjava","sourceNew":"  /**\n   * Creates test harness, including \"extra\" servlets for all\n   * Solr Restlet Application subclasses.\n   */\n  @BeforeClass\n  public static void init() throws Exception {\n\n    Path tempDir = createTempDir();\n    Path coresDir = tempDir.resolve(\"cores\");\n\n    System.setProperty(\"coreRootDirectory\", coresDir.toString());\n    System.setProperty(\"configSetBaseDir\", TEST_HOME());\n\n    final SortedMap<ServletHolder,String> extraServlets = new TreeMap<>();\n\n    Properties props = new Properties();\n    props.setProperty(\"name\", DEFAULT_TEST_CORENAME);\n    props.setProperty(\"config\", \"solrconfig.xml\");\n    props.setProperty(\"schema\", \"schema-rest.xml\");\n    props.setProperty(\"configSet\", \"collection1\");\n\n    writeCoreProperties(coresDir.resolve(\"core\"), props, \"SolrRestletTestBase\");\n    createJettyAndHarness(TEST_HOME(), \"solrconfig.xml\", \"schema-rest.xml\", \"/solr\", true, extraServlets);\n  }\n\n","sourceOld":"  /**\n   * Creates test harness, including \"extra\" servlets for all\n   * Solr Restlet Application subclasses.\n   */\n  @BeforeClass\n  public static void init() throws Exception {\n\n    Path tempDir = createTempDir();\n    Path coresDir = tempDir.resolve(\"cores\");\n\n    System.setProperty(\"coreRootDirectory\", coresDir.toString());\n    System.setProperty(\"configSetBaseDir\", TEST_HOME());\n\n    final SortedMap<ServletHolder,String> extraServlets = new TreeMap<>();\n    final ServletHolder solrSchemaRestApi = new ServletHolder(\"SolrSchemaRestApi\", ServerServlet.class);\n    solrSchemaRestApi.setInitParameter(\"org.restlet.application\", \"org.apache.solr.rest.SolrSchemaRestApi\");\n    extraServlets.put(solrSchemaRestApi, \"/schema/*\");  // '/schema/*' matches '/schema', '/schema/', and '/schema/whatever...'\n\n    Properties props = new Properties();\n    props.setProperty(\"name\", DEFAULT_TEST_CORENAME);\n    props.setProperty(\"config\", \"solrconfig.xml\");\n    props.setProperty(\"schema\", \"schema-rest.xml\");\n    props.setProperty(\"configSet\", \"collection1\");\n\n    writeCoreProperties(coresDir.resolve(\"core\"), props, \"SolrRestletTestBase\");\n    createJettyAndHarness(TEST_HOME(), \"solrconfig.xml\", \"schema-rest.xml\", \"/solr\", true, extraServlets);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"634f330c54fd3f9f491d52036dc3f40b4f4d8934":["d2fa053a06c9c158f82d8e8b53b9a95031f43ebd"],"89fd5bce15c8e0ca1b10c9988cff9fdcc88c152b":["fd44bec977a26a118d9e809e2de6f7edb5ca0f39"],"d2fa053a06c9c158f82d8e8b53b9a95031f43ebd":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"afb6bf9ce227ab6aac5068547e286ecc958b8b9d":["634f330c54fd3f9f491d52036dc3f40b4f4d8934"],"858c0f62e7b20002e4d94702c510512fb6292988":["afb6bf9ce227ab6aac5068547e286ecc958b8b9d"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"fd44bec977a26a118d9e809e2de6f7edb5ca0f39":["858c0f62e7b20002e4d94702c510512fb6292988"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["89fd5bce15c8e0ca1b10c9988cff9fdcc88c152b"]},"commit2Childs":{"634f330c54fd3f9f491d52036dc3f40b4f4d8934":["afb6bf9ce227ab6aac5068547e286ecc958b8b9d"],"89fd5bce15c8e0ca1b10c9988cff9fdcc88c152b":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"d2fa053a06c9c158f82d8e8b53b9a95031f43ebd":["634f330c54fd3f9f491d52036dc3f40b4f4d8934"],"afb6bf9ce227ab6aac5068547e286ecc958b8b9d":["858c0f62e7b20002e4d94702c510512fb6292988"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["d2fa053a06c9c158f82d8e8b53b9a95031f43ebd"],"858c0f62e7b20002e4d94702c510512fb6292988":["fd44bec977a26a118d9e809e2de6f7edb5ca0f39"],"fd44bec977a26a118d9e809e2de6f7edb5ca0f39":["89fd5bce15c8e0ca1b10c9988cff9fdcc88c152b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}