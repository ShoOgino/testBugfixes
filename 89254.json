{"path":"contrib/xml-query-parser/src/java/org/apache/lucene/xmlparser/CoreParser#CoreParser(String,Analyzer,QueryParser).mjava","commits":[{"id":"82632e9d88b0fa1aa99de5b6dbba336eaca33fae","date":1203287578,"type":0,"author":"Mark Harwood","isMerge":false,"pathNew":"contrib/xml-query-parser/src/java/org/apache/lucene/xmlparser/CoreParser#CoreParser(String,Analyzer,QueryParser).mjava","pathOld":"/dev/null","sourceNew":"\tprotected CoreParser(String defaultField,Analyzer analyzer, QueryParser parser)\r\n\t{\r\n\t\tthis.analyzer=analyzer;\r\n\t\tthis.parser=parser;\r\n\t\tfilterFactory = new FilterBuilderFactory();\r\n\t\tfilterFactory.addBuilder(\"RangeFilter\",new RangeFilterBuilder());\r\n\t\t\r\n\t\t\r\n\t\tqueryFactory = new QueryBuilderFactory();\r\n\t\tqueryFactory.addBuilder(\"TermQuery\",new TermQueryBuilder());\r\n\t\tqueryFactory.addBuilder(\"TermsQuery\",new TermsQueryBuilder(analyzer));\r\n\t\tqueryFactory.addBuilder(\"MatchAllDocsQuery\",new MatchAllDocsQueryBuilder());\r\n\t\tqueryFactory.addBuilder(\"BooleanQuery\",new BooleanQueryBuilder(queryFactory));\r\n\t\tif(parser!=null)\r\n\t\t{\r\n\t\t\tqueryFactory.addBuilder(\"UserQuery\",new UserInputQueryBuilder(parser));\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\tqueryFactory.addBuilder(\"UserQuery\",new UserInputQueryBuilder(defaultField,analyzer));\t\t\t\r\n\t\t}\r\n\t\tqueryFactory.addBuilder(\"FilteredQuery\",new FilteredQueryBuilder(filterFactory,queryFactory));\r\n\t\tqueryFactory.addBuilder(\"ConstantScoreQuery\",new ConstantScoreQueryBuilder(filterFactory));\r\n\t\t\r\n\t\tfilterFactory.addBuilder(\"CachedFilter\",new CachedFilterBuilder(queryFactory,\r\n\t\t\t\t\t\t\tfilterFactory, maxNumCachedFilters));\r\n\t\t\r\n\t\t\r\n\t\tSpanQueryBuilderFactory sqof=new SpanQueryBuilderFactory();\r\n\r\n\t\tSpanNearBuilder snb=new SpanNearBuilder(sqof);\r\n\t\tsqof.addBuilder(\"SpanNear\",snb);\r\n\t\tqueryFactory.addBuilder(\"SpanNear\",snb);\r\n\r\n\t\tSpanTermBuilder snt=new SpanTermBuilder();\r\n\t\tsqof.addBuilder(\"SpanTerm\",snt);\r\n\t\tqueryFactory.addBuilder(\"SpanTerm\",snt);\r\n\t\t\r\n\t\tSpanOrBuilder sot=new SpanOrBuilder(sqof);\r\n\t\tsqof.addBuilder(\"SpanOr\",sot);\r\n\t\tqueryFactory.addBuilder(\"SpanOr\",sot);\r\n\r\n\t\tSpanOrTermsBuilder sots=new SpanOrTermsBuilder(analyzer);\r\n\t\tsqof.addBuilder(\"SpanOrTerms\",sots);\r\n\t\tqueryFactory.addBuilder(\"SpanOrTerms\",sots);\t\t\r\n\t\t\r\n\t\tSpanFirstBuilder sft=new SpanFirstBuilder(sqof);\r\n\t\tsqof.addBuilder(\"SpanFirst\",sft);\r\n\t\tqueryFactory.addBuilder(\"SpanFirst\",sft);\r\n\t\t\r\n\t\tSpanNotBuilder snot=new SpanNotBuilder(sqof);\r\n\t\tsqof.addBuilder(\"SpanNot\",snot);\r\n\t\tqueryFactory.addBuilder(\"SpanNot\",snot);\t\r\n\t}\r\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6a361a621b184d9b73c9c9a37323a9845b8f8260","date":1226370946,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"contrib/xml-query-parser/src/java/org/apache/lucene/xmlparser/CoreParser#CoreParser(String,Analyzer,QueryParser).mjava","pathOld":"contrib/xml-query-parser/src/java/org/apache/lucene/xmlparser/CoreParser#CoreParser(String,Analyzer,QueryParser).mjava","sourceNew":"\tprotected CoreParser(String defaultField,Analyzer analyzer, QueryParser parser)\n\t{\n\t\tthis.analyzer=analyzer;\n\t\tthis.parser=parser;\n\t\tfilterFactory = new FilterBuilderFactory();\n\t\tfilterFactory.addBuilder(\"RangeFilter\",new RangeFilterBuilder());\n\t\t\n\t\t\n\t\tqueryFactory = new QueryBuilderFactory();\n\t\tqueryFactory.addBuilder(\"TermQuery\",new TermQueryBuilder());\n\t\tqueryFactory.addBuilder(\"TermsQuery\",new TermsQueryBuilder(analyzer));\n\t\tqueryFactory.addBuilder(\"MatchAllDocsQuery\",new MatchAllDocsQueryBuilder());\n\t\tqueryFactory.addBuilder(\"BooleanQuery\",new BooleanQueryBuilder(queryFactory));\n\t\tif(parser!=null)\n\t\t{\n\t\t\tqueryFactory.addBuilder(\"UserQuery\",new UserInputQueryBuilder(parser));\n\t\t}\n\t\telse\n\t\t{\n\t\t\tqueryFactory.addBuilder(\"UserQuery\",new UserInputQueryBuilder(defaultField,analyzer));\t\t\t\n\t\t}\n\t\tqueryFactory.addBuilder(\"FilteredQuery\",new FilteredQueryBuilder(filterFactory,queryFactory));\n\t\tqueryFactory.addBuilder(\"ConstantScoreQuery\",new ConstantScoreQueryBuilder(filterFactory));\n\t\t\n\t\tfilterFactory.addBuilder(\"CachedFilter\",new CachedFilterBuilder(queryFactory,\n\t\t\t\t\t\t\tfilterFactory, maxNumCachedFilters));\n\t\t\n\t\t\n\t\tSpanQueryBuilderFactory sqof=new SpanQueryBuilderFactory();\n\n\t\tSpanNearBuilder snb=new SpanNearBuilder(sqof);\n\t\tsqof.addBuilder(\"SpanNear\",snb);\n\t\tqueryFactory.addBuilder(\"SpanNear\",snb);\n\n\t\tSpanTermBuilder snt=new SpanTermBuilder();\n\t\tsqof.addBuilder(\"SpanTerm\",snt);\n\t\tqueryFactory.addBuilder(\"SpanTerm\",snt);\n\t\t\n\t\tSpanOrBuilder sot=new SpanOrBuilder(sqof);\n\t\tsqof.addBuilder(\"SpanOr\",sot);\n\t\tqueryFactory.addBuilder(\"SpanOr\",sot);\n\n\t\tSpanOrTermsBuilder sots=new SpanOrTermsBuilder(analyzer);\n\t\tsqof.addBuilder(\"SpanOrTerms\",sots);\n\t\tqueryFactory.addBuilder(\"SpanOrTerms\",sots);\t\t\n\t\t\n\t\tSpanFirstBuilder sft=new SpanFirstBuilder(sqof);\n\t\tsqof.addBuilder(\"SpanFirst\",sft);\n\t\tqueryFactory.addBuilder(\"SpanFirst\",sft);\n\t\t\n\t\tSpanNotBuilder snot=new SpanNotBuilder(sqof);\n\t\tsqof.addBuilder(\"SpanNot\",snot);\n\t\tqueryFactory.addBuilder(\"SpanNot\",snot);\t\n\t}\n\n","sourceOld":"\tprotected CoreParser(String defaultField,Analyzer analyzer, QueryParser parser)\r\n\t{\r\n\t\tthis.analyzer=analyzer;\r\n\t\tthis.parser=parser;\r\n\t\tfilterFactory = new FilterBuilderFactory();\r\n\t\tfilterFactory.addBuilder(\"RangeFilter\",new RangeFilterBuilder());\r\n\t\t\r\n\t\t\r\n\t\tqueryFactory = new QueryBuilderFactory();\r\n\t\tqueryFactory.addBuilder(\"TermQuery\",new TermQueryBuilder());\r\n\t\tqueryFactory.addBuilder(\"TermsQuery\",new TermsQueryBuilder(analyzer));\r\n\t\tqueryFactory.addBuilder(\"MatchAllDocsQuery\",new MatchAllDocsQueryBuilder());\r\n\t\tqueryFactory.addBuilder(\"BooleanQuery\",new BooleanQueryBuilder(queryFactory));\r\n\t\tif(parser!=null)\r\n\t\t{\r\n\t\t\tqueryFactory.addBuilder(\"UserQuery\",new UserInputQueryBuilder(parser));\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\tqueryFactory.addBuilder(\"UserQuery\",new UserInputQueryBuilder(defaultField,analyzer));\t\t\t\r\n\t\t}\r\n\t\tqueryFactory.addBuilder(\"FilteredQuery\",new FilteredQueryBuilder(filterFactory,queryFactory));\r\n\t\tqueryFactory.addBuilder(\"ConstantScoreQuery\",new ConstantScoreQueryBuilder(filterFactory));\r\n\t\t\r\n\t\tfilterFactory.addBuilder(\"CachedFilter\",new CachedFilterBuilder(queryFactory,\r\n\t\t\t\t\t\t\tfilterFactory, maxNumCachedFilters));\r\n\t\t\r\n\t\t\r\n\t\tSpanQueryBuilderFactory sqof=new SpanQueryBuilderFactory();\r\n\r\n\t\tSpanNearBuilder snb=new SpanNearBuilder(sqof);\r\n\t\tsqof.addBuilder(\"SpanNear\",snb);\r\n\t\tqueryFactory.addBuilder(\"SpanNear\",snb);\r\n\r\n\t\tSpanTermBuilder snt=new SpanTermBuilder();\r\n\t\tsqof.addBuilder(\"SpanTerm\",snt);\r\n\t\tqueryFactory.addBuilder(\"SpanTerm\",snt);\r\n\t\t\r\n\t\tSpanOrBuilder sot=new SpanOrBuilder(sqof);\r\n\t\tsqof.addBuilder(\"SpanOr\",sot);\r\n\t\tqueryFactory.addBuilder(\"SpanOr\",sot);\r\n\r\n\t\tSpanOrTermsBuilder sots=new SpanOrTermsBuilder(analyzer);\r\n\t\tsqof.addBuilder(\"SpanOrTerms\",sots);\r\n\t\tqueryFactory.addBuilder(\"SpanOrTerms\",sots);\t\t\r\n\t\t\r\n\t\tSpanFirstBuilder sft=new SpanFirstBuilder(sqof);\r\n\t\tsqof.addBuilder(\"SpanFirst\",sft);\r\n\t\tqueryFactory.addBuilder(\"SpanFirst\",sft);\r\n\t\t\r\n\t\tSpanNotBuilder snot=new SpanNotBuilder(sqof);\r\n\t\tsqof.addBuilder(\"SpanNot\",snot);\r\n\t\tqueryFactory.addBuilder(\"SpanNot\",snot);\t\r\n\t}\r\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1816ba8f6fa964838bde24b7fba744ac37ee3b47","date":1234180173,"type":3,"author":"Karl-Johan Wettin","isMerge":false,"pathNew":"contrib/xml-query-parser/src/java/org/apache/lucene/xmlparser/CoreParser#CoreParser(String,Analyzer,QueryParser).mjava","pathOld":"contrib/xml-query-parser/src/java/org/apache/lucene/xmlparser/CoreParser#CoreParser(String,Analyzer,QueryParser).mjava","sourceNew":"\tprotected CoreParser(String defaultField,Analyzer analyzer, QueryParser parser)\n\t{\n\t\tthis.analyzer=analyzer;\n\t\tthis.parser=parser;\n\t\tfilterFactory = new FilterBuilderFactory();\n\t\tfilterFactory.addBuilder(\"RangeFilter\",new RangeFilterBuilder());\n\t\t\n\t\t\n\t\tqueryFactory = new QueryBuilderFactory();\n\t\tqueryFactory.addBuilder(\"TermQuery\",new TermQueryBuilder());\n\t\tqueryFactory.addBuilder(\"TermsQuery\",new TermsQueryBuilder(analyzer));\n\t\tqueryFactory.addBuilder(\"MatchAllDocsQuery\",new MatchAllDocsQueryBuilder());\n\t\tqueryFactory.addBuilder(\"BooleanQuery\",new BooleanQueryBuilder(queryFactory));\n\t\tif(parser!=null)\n\t\t{\n\t\t\tqueryFactory.addBuilder(\"UserQuery\",new UserInputQueryBuilder(parser));\n\t\t}\n\t\telse\n\t\t{\n\t\t\tqueryFactory.addBuilder(\"UserQuery\",new UserInputQueryBuilder(defaultField,analyzer));\t\t\t\n\t\t}\n\t\tqueryFactory.addBuilder(\"FilteredQuery\",new FilteredQueryBuilder(filterFactory,queryFactory));\n\t\tqueryFactory.addBuilder(\"ConstantScoreQuery\",new ConstantScoreQueryBuilder(filterFactory));\n\t\t\n\t\tfilterFactory.addBuilder(\"CachedFilter\",new CachedFilterBuilder(queryFactory,\n\t\t\t\t\t\t\tfilterFactory, maxNumCachedFilters));\n\t\t\n\t\t\n\t\tSpanQueryBuilderFactory sqof=new SpanQueryBuilderFactory();\n\n\t\tSpanNearBuilder snb=new SpanNearBuilder(sqof);\n\t\tsqof.addBuilder(\"SpanNear\",snb);\n\t\tqueryFactory.addBuilder(\"SpanNear\",snb);\n\n    BoostingTermBuilder btb=new BoostingTermBuilder();\n    sqof.addBuilder(\"BoostingTermQuery\",btb);\n    queryFactory.addBuilder(\"BoostingTermQuery\",btb);        \n\n    SpanTermBuilder snt=new SpanTermBuilder();\n\t\tsqof.addBuilder(\"SpanTerm\",snt);\n\t\tqueryFactory.addBuilder(\"SpanTerm\",snt);\n\t\t\n\t\tSpanOrBuilder sot=new SpanOrBuilder(sqof);\n\t\tsqof.addBuilder(\"SpanOr\",sot);\n\t\tqueryFactory.addBuilder(\"SpanOr\",sot);\n\n\t\tSpanOrTermsBuilder sots=new SpanOrTermsBuilder(analyzer);\n\t\tsqof.addBuilder(\"SpanOrTerms\",sots);\n\t\tqueryFactory.addBuilder(\"SpanOrTerms\",sots);\t\t\n\t\t\n\t\tSpanFirstBuilder sft=new SpanFirstBuilder(sqof);\n\t\tsqof.addBuilder(\"SpanFirst\",sft);\n\t\tqueryFactory.addBuilder(\"SpanFirst\",sft);\n\t\t\n\t\tSpanNotBuilder snot=new SpanNotBuilder(sqof);\n\t\tsqof.addBuilder(\"SpanNot\",snot);\n\t\tqueryFactory.addBuilder(\"SpanNot\",snot);\t\n\t}\n\n","sourceOld":"\tprotected CoreParser(String defaultField,Analyzer analyzer, QueryParser parser)\n\t{\n\t\tthis.analyzer=analyzer;\n\t\tthis.parser=parser;\n\t\tfilterFactory = new FilterBuilderFactory();\n\t\tfilterFactory.addBuilder(\"RangeFilter\",new RangeFilterBuilder());\n\t\t\n\t\t\n\t\tqueryFactory = new QueryBuilderFactory();\n\t\tqueryFactory.addBuilder(\"TermQuery\",new TermQueryBuilder());\n\t\tqueryFactory.addBuilder(\"TermsQuery\",new TermsQueryBuilder(analyzer));\n\t\tqueryFactory.addBuilder(\"MatchAllDocsQuery\",new MatchAllDocsQueryBuilder());\n\t\tqueryFactory.addBuilder(\"BooleanQuery\",new BooleanQueryBuilder(queryFactory));\n\t\tif(parser!=null)\n\t\t{\n\t\t\tqueryFactory.addBuilder(\"UserQuery\",new UserInputQueryBuilder(parser));\n\t\t}\n\t\telse\n\t\t{\n\t\t\tqueryFactory.addBuilder(\"UserQuery\",new UserInputQueryBuilder(defaultField,analyzer));\t\t\t\n\t\t}\n\t\tqueryFactory.addBuilder(\"FilteredQuery\",new FilteredQueryBuilder(filterFactory,queryFactory));\n\t\tqueryFactory.addBuilder(\"ConstantScoreQuery\",new ConstantScoreQueryBuilder(filterFactory));\n\t\t\n\t\tfilterFactory.addBuilder(\"CachedFilter\",new CachedFilterBuilder(queryFactory,\n\t\t\t\t\t\t\tfilterFactory, maxNumCachedFilters));\n\t\t\n\t\t\n\t\tSpanQueryBuilderFactory sqof=new SpanQueryBuilderFactory();\n\n\t\tSpanNearBuilder snb=new SpanNearBuilder(sqof);\n\t\tsqof.addBuilder(\"SpanNear\",snb);\n\t\tqueryFactory.addBuilder(\"SpanNear\",snb);\n\n\t\tSpanTermBuilder snt=new SpanTermBuilder();\n\t\tsqof.addBuilder(\"SpanTerm\",snt);\n\t\tqueryFactory.addBuilder(\"SpanTerm\",snt);\n\t\t\n\t\tSpanOrBuilder sot=new SpanOrBuilder(sqof);\n\t\tsqof.addBuilder(\"SpanOr\",sot);\n\t\tqueryFactory.addBuilder(\"SpanOr\",sot);\n\n\t\tSpanOrTermsBuilder sots=new SpanOrTermsBuilder(analyzer);\n\t\tsqof.addBuilder(\"SpanOrTerms\",sots);\n\t\tqueryFactory.addBuilder(\"SpanOrTerms\",sots);\t\t\n\t\t\n\t\tSpanFirstBuilder sft=new SpanFirstBuilder(sqof);\n\t\tsqof.addBuilder(\"SpanFirst\",sft);\n\t\tqueryFactory.addBuilder(\"SpanFirst\",sft);\n\t\t\n\t\tSpanNotBuilder snot=new SpanNotBuilder(sqof);\n\t\tsqof.addBuilder(\"SpanNot\",snot);\n\t\tqueryFactory.addBuilder(\"SpanNot\",snot);\t\n\t}\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/contrib/xml-query-parser/src/java/org/apache/lucene/xmlparser/CoreParser#CoreParser(String,Analyzer,QueryParser).mjava","pathOld":"contrib/xml-query-parser/src/java/org/apache/lucene/xmlparser/CoreParser#CoreParser(String,Analyzer,QueryParser).mjava","sourceNew":"\tprotected CoreParser(String defaultField,Analyzer analyzer, QueryParser parser)\n\t{\n\t\tthis.analyzer=analyzer;\n\t\tthis.parser=parser;\n\t\tfilterFactory = new FilterBuilderFactory();\n\t\tfilterFactory.addBuilder(\"RangeFilter\",new RangeFilterBuilder());\n\t\t\n\t\t\n\t\tqueryFactory = new QueryBuilderFactory();\n\t\tqueryFactory.addBuilder(\"TermQuery\",new TermQueryBuilder());\n\t\tqueryFactory.addBuilder(\"TermsQuery\",new TermsQueryBuilder(analyzer));\n\t\tqueryFactory.addBuilder(\"MatchAllDocsQuery\",new MatchAllDocsQueryBuilder());\n\t\tqueryFactory.addBuilder(\"BooleanQuery\",new BooleanQueryBuilder(queryFactory));\n\t\tif(parser!=null)\n\t\t{\n\t\t\tqueryFactory.addBuilder(\"UserQuery\",new UserInputQueryBuilder(parser));\n\t\t}\n\t\telse\n\t\t{\n\t\t\tqueryFactory.addBuilder(\"UserQuery\",new UserInputQueryBuilder(defaultField,analyzer));\t\t\t\n\t\t}\n\t\tqueryFactory.addBuilder(\"FilteredQuery\",new FilteredQueryBuilder(filterFactory,queryFactory));\n\t\tqueryFactory.addBuilder(\"ConstantScoreQuery\",new ConstantScoreQueryBuilder(filterFactory));\n\t\t\n\t\tfilterFactory.addBuilder(\"CachedFilter\",new CachedFilterBuilder(queryFactory,\n\t\t\t\t\t\t\tfilterFactory, maxNumCachedFilters));\n\t\t\n\t\t\n\t\tSpanQueryBuilderFactory sqof=new SpanQueryBuilderFactory();\n\n\t\tSpanNearBuilder snb=new SpanNearBuilder(sqof);\n\t\tsqof.addBuilder(\"SpanNear\",snb);\n\t\tqueryFactory.addBuilder(\"SpanNear\",snb);\n\n    BoostingTermBuilder btb=new BoostingTermBuilder();\n    sqof.addBuilder(\"BoostingTermQuery\",btb);\n    queryFactory.addBuilder(\"BoostingTermQuery\",btb);        \n\n    SpanTermBuilder snt=new SpanTermBuilder();\n\t\tsqof.addBuilder(\"SpanTerm\",snt);\n\t\tqueryFactory.addBuilder(\"SpanTerm\",snt);\n\t\t\n\t\tSpanOrBuilder sot=new SpanOrBuilder(sqof);\n\t\tsqof.addBuilder(\"SpanOr\",sot);\n\t\tqueryFactory.addBuilder(\"SpanOr\",sot);\n\n\t\tSpanOrTermsBuilder sots=new SpanOrTermsBuilder(analyzer);\n\t\tsqof.addBuilder(\"SpanOrTerms\",sots);\n\t\tqueryFactory.addBuilder(\"SpanOrTerms\",sots);\t\t\n\t\t\n\t\tSpanFirstBuilder sft=new SpanFirstBuilder(sqof);\n\t\tsqof.addBuilder(\"SpanFirst\",sft);\n\t\tqueryFactory.addBuilder(\"SpanFirst\",sft);\n\t\t\n\t\tSpanNotBuilder snot=new SpanNotBuilder(sqof);\n\t\tsqof.addBuilder(\"SpanNot\",snot);\n\t\tqueryFactory.addBuilder(\"SpanNot\",snot);\t\n\t}\n\n","sourceOld":"\tprotected CoreParser(String defaultField,Analyzer analyzer, QueryParser parser)\n\t{\n\t\tthis.analyzer=analyzer;\n\t\tthis.parser=parser;\n\t\tfilterFactory = new FilterBuilderFactory();\n\t\tfilterFactory.addBuilder(\"RangeFilter\",new RangeFilterBuilder());\n\t\t\n\t\t\n\t\tqueryFactory = new QueryBuilderFactory();\n\t\tqueryFactory.addBuilder(\"TermQuery\",new TermQueryBuilder());\n\t\tqueryFactory.addBuilder(\"TermsQuery\",new TermsQueryBuilder(analyzer));\n\t\tqueryFactory.addBuilder(\"MatchAllDocsQuery\",new MatchAllDocsQueryBuilder());\n\t\tqueryFactory.addBuilder(\"BooleanQuery\",new BooleanQueryBuilder(queryFactory));\n\t\tif(parser!=null)\n\t\t{\n\t\t\tqueryFactory.addBuilder(\"UserQuery\",new UserInputQueryBuilder(parser));\n\t\t}\n\t\telse\n\t\t{\n\t\t\tqueryFactory.addBuilder(\"UserQuery\",new UserInputQueryBuilder(defaultField,analyzer));\t\t\t\n\t\t}\n\t\tqueryFactory.addBuilder(\"FilteredQuery\",new FilteredQueryBuilder(filterFactory,queryFactory));\n\t\tqueryFactory.addBuilder(\"ConstantScoreQuery\",new ConstantScoreQueryBuilder(filterFactory));\n\t\t\n\t\tfilterFactory.addBuilder(\"CachedFilter\",new CachedFilterBuilder(queryFactory,\n\t\t\t\t\t\t\tfilterFactory, maxNumCachedFilters));\n\t\t\n\t\t\n\t\tSpanQueryBuilderFactory sqof=new SpanQueryBuilderFactory();\n\n\t\tSpanNearBuilder snb=new SpanNearBuilder(sqof);\n\t\tsqof.addBuilder(\"SpanNear\",snb);\n\t\tqueryFactory.addBuilder(\"SpanNear\",snb);\n\n    BoostingTermBuilder btb=new BoostingTermBuilder();\n    sqof.addBuilder(\"BoostingTermQuery\",btb);\n    queryFactory.addBuilder(\"BoostingTermQuery\",btb);        \n\n    SpanTermBuilder snt=new SpanTermBuilder();\n\t\tsqof.addBuilder(\"SpanTerm\",snt);\n\t\tqueryFactory.addBuilder(\"SpanTerm\",snt);\n\t\t\n\t\tSpanOrBuilder sot=new SpanOrBuilder(sqof);\n\t\tsqof.addBuilder(\"SpanOr\",sot);\n\t\tqueryFactory.addBuilder(\"SpanOr\",sot);\n\n\t\tSpanOrTermsBuilder sots=new SpanOrTermsBuilder(analyzer);\n\t\tsqof.addBuilder(\"SpanOrTerms\",sots);\n\t\tqueryFactory.addBuilder(\"SpanOrTerms\",sots);\t\t\n\t\t\n\t\tSpanFirstBuilder sft=new SpanFirstBuilder(sqof);\n\t\tsqof.addBuilder(\"SpanFirst\",sft);\n\t\tqueryFactory.addBuilder(\"SpanFirst\",sft);\n\t\t\n\t\tSpanNotBuilder snot=new SpanNotBuilder(sqof);\n\t\tsqof.addBuilder(\"SpanNot\",snot);\n\t\tqueryFactory.addBuilder(\"SpanNot\",snot);\t\n\t}\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"82632e9d88b0fa1aa99de5b6dbba336eaca33fae":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"1816ba8f6fa964838bde24b7fba744ac37ee3b47":["6a361a621b184d9b73c9c9a37323a9845b8f8260"],"6a361a621b184d9b73c9c9a37323a9845b8f8260":["82632e9d88b0fa1aa99de5b6dbba336eaca33fae"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["1816ba8f6fa964838bde24b7fba744ac37ee3b47"]},"commit2Childs":{"82632e9d88b0fa1aa99de5b6dbba336eaca33fae":["6a361a621b184d9b73c9c9a37323a9845b8f8260"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["82632e9d88b0fa1aa99de5b6dbba336eaca33fae"],"1816ba8f6fa964838bde24b7fba744ac37ee3b47":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"6a361a621b184d9b73c9c9a37323a9845b8f8260":["1816ba8f6fa964838bde24b7fba744ac37ee3b47"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}