{"path":"solr/contrib/langid/src/test/org/apache/solr/update/processor/LanguageIdentifierUpdateProcessorFactoryTestCase#testKeepOrig().mjava","commits":[{"id":"a4da5f9e2a1f2ac76feac0c0796bdce4881cb687","date":1546536444,"type":0,"author":"Jan HÃ¸ydahl","isMerge":false,"pathNew":"solr/contrib/langid/src/test/org/apache/solr/update/processor/LanguageIdentifierUpdateProcessorFactoryTestCase#testKeepOrig().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testKeepOrig() throws Exception {\n    ModifiableSolrParams parameters = new ModifiableSolrParams();\n    parameters.set(\"langid.enforceSchema\", \"false\");\n    parameters.set(\"langid.langField\", \"language\");\n    parameters.set(\"langid.langsField\", \"languages\");\n    parameters.set(\"langid.fl\", \"text\");\n    parameters.set(\"langid.map\", \"true\");\n    parameters.set(\"langid.map.keepOrig\", \"false\");\n    liProcessor = createLangIdProcessor(parameters);\n\n    SolrInputDocument mappedNoOrig = process(englishDoc());\n    assertEquals(\"text_en\", liProcessor.getMappedField(\"text\", \"en\"));\n    assertEquals(\"en\", mappedNoOrig.getFieldValue(\"language\"));\n    assertTrue(mappedNoOrig.containsKey(\"text_en\"));\n    assertFalse(mappedNoOrig.containsKey(\"text\"));\n    \n    // keepOrig true\n    parameters.set(\"langid.map.keepOrig\", \"true\");\n    liProcessor = createLangIdProcessor(parameters);\n\n    SolrInputDocument mappedKeepOrig = process(englishDoc());\n    assertTrue(mappedKeepOrig.containsKey(\"text_en\"));\n    assertTrue(mappedKeepOrig.containsKey(\"text\"));\n    assertEquals(englishDoc().getFieldValue(\"text\"), mappedKeepOrig.getFieldValue(\"text_en\"));\n    \n    // keepOrig and map individual\n    parameters.set(\"langid.map.individual\", \"true\");\n    parameters.set(\"langid.fl\", \"text,text2\");\n    liProcessor = createLangIdProcessor(parameters);\n\n    SolrInputDocument mappedIndividual = process(languagePerFieldDoc());\n    assertTrue(mappedIndividual.containsKey(\"text_en\"));\n    assertTrue(mappedIndividual.containsKey(\"text\"));\n    assertTrue(mappedIndividual.containsKey(\"text2_ru\"));\n    assertTrue(mappedIndividual.containsKey(\"text2\"));\n    assertEquals(languagePerFieldDoc().getFieldValue(\"text\"), mappedIndividual.getFieldValue(\"text_en\"));\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a4da5f9e2a1f2ac76feac0c0796bdce4881cb687":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a4da5f9e2a1f2ac76feac0c0796bdce4881cb687"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["a4da5f9e2a1f2ac76feac0c0796bdce4881cb687"],"a4da5f9e2a1f2ac76feac0c0796bdce4881cb687":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}