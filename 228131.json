{"path":"src/java/org/apache/solr/core/SolrConfig#initLibs().mjava","commits":[{"id":"5dc524639edfdfa4edfb67ae889c2b6029f9314c","date":1255358511,"type":0,"author":"Yonik Seeley","isMerge":false,"pathNew":"src/java/org/apache/solr/core/SolrConfig#initLibs().mjava","pathOld":"/dev/null","sourceNew":"  private void initLibs() {\n    \n    NodeList nodes = (NodeList) evaluate(\"lib\", XPathConstants.NODESET);\n    if (nodes==null || nodes.getLength()==0)\n      return;\n    \n    log.info(\"Adding specified lib dirs to ClassLoader\");\n    \n     for (int i=0; i<nodes.getLength(); i++) {\n       Node node = nodes.item(i);\n\n       String baseDir = DOMUtil.getAttr(node, \"dir\");\n       String path = DOMUtil.getAttr(node, \"path\");\n       if (null != baseDir) {\n         // :TODO: add support for a simpler 'glob' mutually eclusive of regex\n         String regex = DOMUtil.getAttr(node, \"regex\");\n         FileFilter filter = (null == regex) ? null : new RegexFileFilter(regex);\n         getResourceLoader().addToClassLoader(baseDir, filter);\n       } else if (null != path) {\n         getResourceLoader().addToClassLoader(path);\n       } else {\n         throw new RuntimeException\n           (\"lib: missing mandatory attributes: 'dir' or 'path'\");\n       }\n     }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ad94625fb8d088209f46650c8097196fec67f00c","date":1453508319,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/src/java/org/apache/solr/core/SolrConfig#initLibs().mjava","pathOld":"src/java/org/apache/solr/core/SolrConfig#initLibs().mjava","sourceNew":"  private void initLibs() {\n    \n    NodeList nodes = (NodeList) evaluate(\"lib\", XPathConstants.NODESET);\n    if (nodes==null || nodes.getLength()==0)\n      return;\n    \n    log.info(\"Adding specified lib dirs to ClassLoader\");\n    \n     for (int i=0; i<nodes.getLength(); i++) {\n       Node node = nodes.item(i);\n\n       String baseDir = DOMUtil.getAttr(node, \"dir\");\n       String path = DOMUtil.getAttr(node, \"path\");\n       if (null != baseDir) {\n         // :TODO: add support for a simpler 'glob' mutually eclusive of regex\n         String regex = DOMUtil.getAttr(node, \"regex\");\n         FileFilter filter = (null == regex) ? null : new RegexFileFilter(regex);\n         getResourceLoader().addToClassLoader(baseDir, filter);\n       } else if (null != path) {\n         getResourceLoader().addToClassLoader(path);\n       } else {\n         throw new RuntimeException\n           (\"lib: missing mandatory attributes: 'dir' or 'path'\");\n       }\n     }\n  }\n\n","sourceOld":"  private void initLibs() {\n    \n    NodeList nodes = (NodeList) evaluate(\"lib\", XPathConstants.NODESET);\n    if (nodes==null || nodes.getLength()==0)\n      return;\n    \n    log.info(\"Adding specified lib dirs to ClassLoader\");\n    \n     for (int i=0; i<nodes.getLength(); i++) {\n       Node node = nodes.item(i);\n\n       String baseDir = DOMUtil.getAttr(node, \"dir\");\n       String path = DOMUtil.getAttr(node, \"path\");\n       if (null != baseDir) {\n         // :TODO: add support for a simpler 'glob' mutually eclusive of regex\n         String regex = DOMUtil.getAttr(node, \"regex\");\n         FileFilter filter = (null == regex) ? null : new RegexFileFilter(regex);\n         getResourceLoader().addToClassLoader(baseDir, filter);\n       } else if (null != path) {\n         getResourceLoader().addToClassLoader(path);\n       } else {\n         throw new RuntimeException\n           (\"lib: missing mandatory attributes: 'dir' or 'path'\");\n       }\n     }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"5dc524639edfdfa4edfb67ae889c2b6029f9314c":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"ad94625fb8d088209f46650c8097196fec67f00c":["5dc524639edfdfa4edfb67ae889c2b6029f9314c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["5dc524639edfdfa4edfb67ae889c2b6029f9314c"],"5dc524639edfdfa4edfb67ae889c2b6029f9314c":["ad94625fb8d088209f46650c8097196fec67f00c"],"ad94625fb8d088209f46650c8097196fec67f00c":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["ad94625fb8d088209f46650c8097196fec67f00c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"pathCommit":null}