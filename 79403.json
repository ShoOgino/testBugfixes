{"path":"solr/core/src/test/org/apache/solr/search/TestPseudoReturnFields#testFunctionsAndScoreRTG().mjava","commits":[{"id":"934e1c7ca2823f3ec2758cc0f0912eac404856f2","date":1467837741,"type":0,"author":"Chris Hostetter","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/search/TestPseudoReturnFields#testFunctionsAndScoreRTG().mjava","pathOld":"/dev/null","sourceNew":"  @AwaitsFix(bugUrl=\"https://issues.apache.org/jira/browse/SOLR-9287\")\n  public void testFunctionsAndScoreRTG() throws Exception {\n\n    // if we use RTG (committed or otherwise) score should be ignored\n    for (String id : Arrays.asList(\"42\",\"99\")) {\n      for (SolrParams p : Arrays.asList(params(\"fl\",\"score\",\"fl\",\"log(val_i)\",\"fl\",\"abs(val_i)\"),\n                                        params(\"fl\",\"score\",\"fl\",\"log(val_i),abs(val_i)\"),\n                                        params(\"fl\",\"score,log(val_i)\",\"fl\",\"abs(val_i)\"),\n                                        params(\"fl\",\"score,log(val_i),abs(val_i)\"))) {\n        assertQ(\"id=\"+id+\", p=\"+p,\n                req(p, \"qt\",\"/get\",\"id\",id, \"wt\",\"xml\")\n                ,\"count(//doc)=1\"\n                ,\"//doc/double[@name='log(val_i)']\"\n                ,\"//doc/float[@name='abs(val_i)']\"\n                ,\"//doc[count(*)=2]\"\n                );\n      }\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["136796946c32863f11b97ebec6b4091cdfe3a20b","2e2d8ac9caa35c5cd821607e718a4ca4aff08d40"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"2e2d8ac9caa35c5cd821607e718a4ca4aff08d40","date":1468272906,"type":3,"author":"Chris Hostetter","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/search/TestPseudoReturnFields#testFunctionsAndScoreRTG().mjava","pathOld":"solr/core/src/test/org/apache/solr/search/TestPseudoReturnFields#testFunctionsAndScoreRTG().mjava","sourceNew":"  @AwaitsFix(bugUrl=\"https://issues.apache.org/jira/browse/SOLR-9285\")\n  public void testFunctionsAndScoreRTG() throws Exception {\n    // NOTE: once this test is fixed to pass, testAugmentersRTG should also be updated to test a abs(val_i)\n\n    // if we use RTG (committed or otherwise) score should be ignored\n    for (String id : Arrays.asList(\"42\",\"99\")) {\n      for (SolrParams p : Arrays.asList(params(\"fl\",\"score\",\"fl\",\"log(val_i)\",\"fl\",\"abs(val_i)\"),\n                                        params(\"fl\",\"score\",\"fl\",\"log(val_i),abs(val_i)\"),\n                                        params(\"fl\",\"score,log(val_i)\",\"fl\",\"abs(val_i)\"),\n                                        params(\"fl\",\"score,log(val_i),abs(val_i)\"))) {\n        assertQ(\"id=\"+id+\", p=\"+p,\n                req(p, \"qt\",\"/get\",\"id\",id, \"wt\",\"xml\")\n                ,\"count(//doc)=1\"\n                ,\"//doc/double[@name='log(val_i)']\"\n                ,\"//doc/float[@name='abs(val_i)']\"\n                ,\"//doc[count(*)=2]\"\n                );\n      }\n    }\n  }\n\n","sourceOld":"  @AwaitsFix(bugUrl=\"https://issues.apache.org/jira/browse/SOLR-9287\")\n  public void testFunctionsAndScoreRTG() throws Exception {\n\n    // if we use RTG (committed or otherwise) score should be ignored\n    for (String id : Arrays.asList(\"42\",\"99\")) {\n      for (SolrParams p : Arrays.asList(params(\"fl\",\"score\",\"fl\",\"log(val_i)\",\"fl\",\"abs(val_i)\"),\n                                        params(\"fl\",\"score\",\"fl\",\"log(val_i),abs(val_i)\"),\n                                        params(\"fl\",\"score,log(val_i)\",\"fl\",\"abs(val_i)\"),\n                                        params(\"fl\",\"score,log(val_i),abs(val_i)\"))) {\n        assertQ(\"id=\"+id+\", p=\"+p,\n                req(p, \"qt\",\"/get\",\"id\",id, \"wt\",\"xml\")\n                ,\"count(//doc)=1\"\n                ,\"//doc/double[@name='log(val_i)']\"\n                ,\"//doc/float[@name='abs(val_i)']\"\n                ,\"//doc[count(*)=2]\"\n                );\n      }\n    }\n  }\n\n","bugFix":["934e1c7ca2823f3ec2758cc0f0912eac404856f2"],"bugIntro":["136796946c32863f11b97ebec6b4091cdfe3a20b"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"136796946c32863f11b97ebec6b4091cdfe3a20b","date":1468862468,"type":3,"author":"Chris Hostetter","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/search/TestPseudoReturnFields#testFunctionsAndScoreRTG().mjava","pathOld":"solr/core/src/test/org/apache/solr/search/TestPseudoReturnFields#testFunctionsAndScoreRTG().mjava","sourceNew":"  public void testFunctionsAndScoreRTG() throws Exception {\n    // if we use RTG (committed or otherwise) score should be ignored\n    for (String id : Arrays.asList(\"42\",\"99\")) {\n      for (SolrParams p : Arrays.asList(params(\"fl\",\"score\",\"fl\",\"log(val_i)\",\"fl\",\"abs(val_i)\"),\n                                        params(\"fl\",\"score\",\"fl\",\"log(val_i),abs(val_i)\"),\n                                        params(\"fl\",\"score,log(val_i)\",\"fl\",\"abs(val_i)\"),\n                                        params(\"fl\",\"score,log(val_i),abs(val_i)\"))) {\n        assertQ(\"id=\"+id+\", p=\"+p,\n                req(p, \"qt\",\"/get\",\"id\",id, \"wt\",\"xml\")\n                ,\"count(//doc)=1\"\n                ,\"//doc/double[@name='log(val_i)']\"\n                ,\"//doc/float[@name='abs(val_i)'][.='1.0']\"\n                ,\"//doc[count(*)=2]\"\n                );\n      }\n    }\n  }\n\n","sourceOld":"  @AwaitsFix(bugUrl=\"https://issues.apache.org/jira/browse/SOLR-9285\")\n  public void testFunctionsAndScoreRTG() throws Exception {\n    // NOTE: once this test is fixed to pass, testAugmentersRTG should also be updated to test a abs(val_i)\n\n    // if we use RTG (committed or otherwise) score should be ignored\n    for (String id : Arrays.asList(\"42\",\"99\")) {\n      for (SolrParams p : Arrays.asList(params(\"fl\",\"score\",\"fl\",\"log(val_i)\",\"fl\",\"abs(val_i)\"),\n                                        params(\"fl\",\"score\",\"fl\",\"log(val_i),abs(val_i)\"),\n                                        params(\"fl\",\"score,log(val_i)\",\"fl\",\"abs(val_i)\"),\n                                        params(\"fl\",\"score,log(val_i),abs(val_i)\"))) {\n        assertQ(\"id=\"+id+\", p=\"+p,\n                req(p, \"qt\",\"/get\",\"id\",id, \"wt\",\"xml\")\n                ,\"count(//doc)=1\"\n                ,\"//doc/double[@name='log(val_i)']\"\n                ,\"//doc/float[@name='abs(val_i)']\"\n                ,\"//doc[count(*)=2]\"\n                );\n      }\n    }\n  }\n\n","bugFix":["934e1c7ca2823f3ec2758cc0f0912eac404856f2","2e2d8ac9caa35c5cd821607e718a4ca4aff08d40"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":0,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/search/TestPseudoReturnFields#testFunctionsAndScoreRTG().mjava","pathOld":"/dev/null","sourceNew":"  public void testFunctionsAndScoreRTG() throws Exception {\n    // if we use RTG (committed or otherwise) score should be ignored\n    for (String id : Arrays.asList(\"42\",\"99\")) {\n      for (SolrParams p : Arrays.asList(params(\"fl\",\"score\",\"fl\",\"log(val_i)\",\"fl\",\"abs(val_i)\"),\n                                        params(\"fl\",\"score\",\"fl\",\"log(val_i),abs(val_i)\"),\n                                        params(\"fl\",\"score,log(val_i)\",\"fl\",\"abs(val_i)\"),\n                                        params(\"fl\",\"score,log(val_i),abs(val_i)\"))) {\n        assertQ(\"id=\"+id+\", p=\"+p,\n                req(p, \"qt\",\"/get\",\"id\",id, \"wt\",\"xml\")\n                ,\"count(//doc)=1\"\n                ,\"//doc/double[@name='log(val_i)']\"\n                ,\"//doc/float[@name='abs(val_i)'][.='1.0']\"\n                ,\"//doc[count(*)=2]\"\n                );\n      }\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"934e1c7ca2823f3ec2758cc0f0912eac404856f2":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"136796946c32863f11b97ebec6b4091cdfe3a20b":["2e2d8ac9caa35c5cd821607e718a4ca4aff08d40"],"2e2d8ac9caa35c5cd821607e718a4ca4aff08d40":["934e1c7ca2823f3ec2758cc0f0912eac404856f2"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","136796946c32863f11b97ebec6b4091cdfe3a20b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["136796946c32863f11b97ebec6b4091cdfe3a20b"]},"commit2Childs":{"934e1c7ca2823f3ec2758cc0f0912eac404856f2":["2e2d8ac9caa35c5cd821607e718a4ca4aff08d40"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["934e1c7ca2823f3ec2758cc0f0912eac404856f2","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"136796946c32863f11b97ebec6b4091cdfe3a20b":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"2e2d8ac9caa35c5cd821607e718a4ca4aff08d40":["136796946c32863f11b97ebec6b4091cdfe3a20b"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}