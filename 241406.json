{"path":"solr/core/src/java/org/apache/solr/cloud/OverseerCollectionProcessor#softCommit(String).mjava","commits":[{"id":"457c0871b070288069b6f4422a913198f83e24ee","date":1381238514,"type":1,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/OverseerCollectionProcessor#softCommit(String).mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/OverseerCollectionProcessor#commit(String,boolean).mjava","sourceNew":"  static UpdateResponse softCommit(String url) throws SolrServerException, IOException {\n    HttpSolrServer server = null;\n    try {\n      server = new HttpSolrServer(url);\n      server.setConnectionTimeout(30000);\n      server.setSoTimeout(120000);\n      UpdateRequest ureq = new UpdateRequest();\n      ureq.setParams(new ModifiableSolrParams());\n      ureq.setAction(AbstractUpdateRequest.ACTION.COMMIT, false, true, true);\n      return ureq.process(server);\n    } finally {\n      if (server != null) {\n        server.shutdown();\n      }\n    }\n  }\n\n","sourceOld":"  static UpdateResponse commit(String url, boolean openSearcher) throws SolrServerException, IOException {\n    HttpSolrServer server = null;\n    try {\n      server = new HttpSolrServer(url);\n      server.setConnectionTimeout(30000);\n      server.setSoTimeout(60000);\n      UpdateRequest ureq = new UpdateRequest();\n      ureq.setParams(new ModifiableSolrParams());\n      ureq.getParams().set(UpdateParams.OPEN_SEARCHER, openSearcher);\n      ureq.setAction(AbstractUpdateRequest.ACTION.COMMIT, false, true);\n      return ureq.process(server);\n    } finally {\n      if (server != null) {\n        server.shutdown();\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bafca15d8e408346a67f4282ad1143b88023893b","date":1420034748,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/OverseerCollectionProcessor#softCommit(String).mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/OverseerCollectionProcessor#softCommit(String).mjava","sourceNew":"  static UpdateResponse softCommit(String url) throws SolrServerException, IOException {\n    HttpSolrClient client = null;\n    try {\n      client = new HttpSolrClient(url);\n      client.setConnectionTimeout(30000);\n      client.setSoTimeout(120000);\n      UpdateRequest ureq = new UpdateRequest();\n      ureq.setParams(new ModifiableSolrParams());\n      ureq.setAction(AbstractUpdateRequest.ACTION.COMMIT, false, true, true);\n      return ureq.process(client);\n    } finally {\n      if (client != null) {\n        client.shutdown();\n      }\n    }\n  }\n\n","sourceOld":"  static UpdateResponse softCommit(String url) throws SolrServerException, IOException {\n    HttpSolrServer server = null;\n    try {\n      server = new HttpSolrServer(url);\n      server.setConnectionTimeout(30000);\n      server.setSoTimeout(120000);\n      UpdateRequest ureq = new UpdateRequest();\n      ureq.setParams(new ModifiableSolrParams());\n      ureq.setAction(AbstractUpdateRequest.ACTION.COMMIT, false, true, true);\n      return ureq.process(server);\n    } finally {\n      if (server != null) {\n        server.shutdown();\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"cc3b13b430571c2e169f98fe38e1e7666f88522d","date":1422446157,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/OverseerCollectionProcessor#softCommit(String).mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/OverseerCollectionProcessor#softCommit(String).mjava","sourceNew":"  static UpdateResponse softCommit(String url) throws SolrServerException, IOException {\n\n    try (HttpSolrClient client = new HttpSolrClient(url)) {\n      client.setConnectionTimeout(30000);\n      client.setSoTimeout(120000);\n      UpdateRequest ureq = new UpdateRequest();\n      ureq.setParams(new ModifiableSolrParams());\n      ureq.setAction(AbstractUpdateRequest.ACTION.COMMIT, false, true, true);\n      return ureq.process(client);\n    }\n  }\n\n","sourceOld":"  static UpdateResponse softCommit(String url) throws SolrServerException, IOException {\n    HttpSolrClient client = null;\n    try {\n      client = new HttpSolrClient(url);\n      client.setConnectionTimeout(30000);\n      client.setSoTimeout(120000);\n      UpdateRequest ureq = new UpdateRequest();\n      ureq.setParams(new ModifiableSolrParams());\n      ureq.setAction(AbstractUpdateRequest.ACTION.COMMIT, false, true, true);\n      return ureq.process(client);\n    } finally {\n      if (client != null) {\n        client.shutdown();\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e31e6ce5848e5040d4c9ecbb25bc6ccf5d0894ac","date":1438841252,"type":5,"author":"Gregory Chanan","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/OverseerCollectionMessageHandler#softCommit(String).mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/OverseerCollectionProcessor#softCommit(String).mjava","sourceNew":"  static UpdateResponse softCommit(String url) throws SolrServerException, IOException {\n\n    try (HttpSolrClient client = new HttpSolrClient(url)) {\n      client.setConnectionTimeout(30000);\n      client.setSoTimeout(120000);\n      UpdateRequest ureq = new UpdateRequest();\n      ureq.setParams(new ModifiableSolrParams());\n      ureq.setAction(AbstractUpdateRequest.ACTION.COMMIT, false, true, true);\n      return ureq.process(client);\n    }\n  }\n\n","sourceOld":"  static UpdateResponse softCommit(String url) throws SolrServerException, IOException {\n\n    try (HttpSolrClient client = new HttpSolrClient(url)) {\n      client.setConnectionTimeout(30000);\n      client.setSoTimeout(120000);\n      UpdateRequest ureq = new UpdateRequest();\n      ureq.setParams(new ModifiableSolrParams());\n      ureq.setAction(AbstractUpdateRequest.ACTION.COMMIT, false, true, true);\n      return ureq.process(client);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"e31e6ce5848e5040d4c9ecbb25bc6ccf5d0894ac":["cc3b13b430571c2e169f98fe38e1e7666f88522d"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cc3b13b430571c2e169f98fe38e1e7666f88522d":["bafca15d8e408346a67f4282ad1143b88023893b"],"bafca15d8e408346a67f4282ad1143b88023893b":["457c0871b070288069b6f4422a913198f83e24ee"],"457c0871b070288069b6f4422a913198f83e24ee":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["e31e6ce5848e5040d4c9ecbb25bc6ccf5d0894ac"]},"commit2Childs":{"e31e6ce5848e5040d4c9ecbb25bc6ccf5d0894ac":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["457c0871b070288069b6f4422a913198f83e24ee"],"cc3b13b430571c2e169f98fe38e1e7666f88522d":["e31e6ce5848e5040d4c9ecbb25bc6ccf5d0894ac"],"bafca15d8e408346a67f4282ad1143b88023893b":["cc3b13b430571c2e169f98fe38e1e7666f88522d"],"457c0871b070288069b6f4422a913198f83e24ee":["bafca15d8e408346a67f4282ad1143b88023893b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}