{"path":"lucene/core/src/test/org/apache/lucene/search/TestFuzzyQuery#testErrorMessage().mjava","commits":[{"id":"32ced6ae32bea08db88402a07435f17f5a579d9e","date":1576774708,"type":0,"author":"Mike Drob","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestFuzzyQuery#testErrorMessage().mjava","pathOld":"/dev/null","sourceNew":"  public void testErrorMessage() {\n    // 45 states per vector from Lev2TParametricDescription\n    int length = (Operations.DEFAULT_MAX_DETERMINIZED_STATES / 45) + 10;\n\n    String value = RandomizedTest.randomRealisticUnicodeOfCodepointLength(length);\n    FuzzyTermsEnum.FuzzyTermsException expected = expectThrows(FuzzyTermsEnum.FuzzyTermsException.class, () -> {\n      new FuzzyQuery(new Term(\"field\", value)).getTermsEnum(new Terms() {\n        @Override\n        public TermsEnum iterator() {\n          throw new UnsupportedOperationException();\n        }\n\n        @Override\n        public long size() {\n          throw new UnsupportedOperationException();\n        }\n\n        @Override\n        public long getSumTotalTermFreq() {\n          throw new UnsupportedOperationException();\n        }\n\n        @Override\n        public long getSumDocFreq() {\n          throw new UnsupportedOperationException();\n        }\n\n        @Override\n        public int getDocCount() {\n          throw new UnsupportedOperationException();\n        }\n\n        @Override\n        public boolean hasFreqs() {\n          throw new UnsupportedOperationException();\n        }\n\n        @Override\n        public boolean hasOffsets() {\n          throw new UnsupportedOperationException();\n        }\n\n        @Override\n        public boolean hasPositions() {\n          throw new UnsupportedOperationException();\n        }\n\n        @Override\n        public boolean hasPayloads() {\n          throw new UnsupportedOperationException();\n        }\n      });\n    });\n    assertThat(expected.getMessage(), containsString(value));\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["17da9e30bce5c5fb2b289261c8fbf43ae94b12fa"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"4c66470e527299cc148ad0b3441d08dfb7cb9e03","date":1576859740,"type":0,"author":"Dawid Weiss","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestFuzzyQuery#testErrorMessage().mjava","pathOld":"/dev/null","sourceNew":"  public void testErrorMessage() {\n    // 45 states per vector from Lev2TParametricDescription\n    int length = (Operations.DEFAULT_MAX_DETERMINIZED_STATES / 45) + 10;\n\n    String value = RandomizedTest.randomRealisticUnicodeOfCodepointLength(length);\n    FuzzyTermsEnum.FuzzyTermsException expected = expectThrows(FuzzyTermsEnum.FuzzyTermsException.class, () -> {\n      new FuzzyQuery(new Term(\"field\", value)).getTermsEnum(new Terms() {\n        @Override\n        public TermsEnum iterator() {\n          throw new UnsupportedOperationException();\n        }\n\n        @Override\n        public long size() {\n          throw new UnsupportedOperationException();\n        }\n\n        @Override\n        public long getSumTotalTermFreq() {\n          throw new UnsupportedOperationException();\n        }\n\n        @Override\n        public long getSumDocFreq() {\n          throw new UnsupportedOperationException();\n        }\n\n        @Override\n        public int getDocCount() {\n          throw new UnsupportedOperationException();\n        }\n\n        @Override\n        public boolean hasFreqs() {\n          throw new UnsupportedOperationException();\n        }\n\n        @Override\n        public boolean hasOffsets() {\n          throw new UnsupportedOperationException();\n        }\n\n        @Override\n        public boolean hasPositions() {\n          throw new UnsupportedOperationException();\n        }\n\n        @Override\n        public boolean hasPayloads() {\n          throw new UnsupportedOperationException();\n        }\n      });\n    });\n    assertThat(expected.getMessage(), containsString(value));\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"17da9e30bce5c5fb2b289261c8fbf43ae94b12fa","date":1579630602,"type":3,"author":"Mike","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestFuzzyQuery#testErrorMessage().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestFuzzyQuery#testErrorMessage().mjava","sourceNew":"  public void testErrorMessage() {\n    // 45 states per vector from Lev2TParametricDescription\n    final int length = (Operations.DEFAULT_MAX_DETERMINIZED_STATES / 45) + 10;\n    final String value = randomRealisticMultiByteUnicode(length);\n\n    FuzzyTermsEnum.FuzzyTermsException expected = expectThrows(FuzzyTermsEnum.FuzzyTermsException.class, () -> {\n      new FuzzyQuery(new Term(\"field\", value)).getTermsEnum(new Terms() {\n        @Override\n        public TermsEnum iterator() {\n          return TermsEnum.EMPTY;\n        }\n\n        @Override\n        public long size() {\n          return 0;\n        }\n\n        @Override\n        public long getSumTotalTermFreq() {\n          throw new UnsupportedOperationException();\n        }\n\n        @Override\n        public long getSumDocFreq() {\n          throw new UnsupportedOperationException();\n        }\n\n        @Override\n        public int getDocCount() {\n          throw new UnsupportedOperationException();\n        }\n\n        @Override\n        public boolean hasFreqs() {\n          throw new UnsupportedOperationException();\n        }\n\n        @Override\n        public boolean hasOffsets() {\n          throw new UnsupportedOperationException();\n        }\n\n        @Override\n        public boolean hasPositions() {\n          throw new UnsupportedOperationException();\n        }\n\n        @Override\n        public boolean hasPayloads() {\n          throw new UnsupportedOperationException();\n        }\n      });\n    });\n    assertThat(expected.getMessage(), containsString(value));\n  }\n\n","sourceOld":"  public void testErrorMessage() {\n    // 45 states per vector from Lev2TParametricDescription\n    int length = (Operations.DEFAULT_MAX_DETERMINIZED_STATES / 45) + 10;\n\n    String value = RandomizedTest.randomRealisticUnicodeOfCodepointLength(length);\n    FuzzyTermsEnum.FuzzyTermsException expected = expectThrows(FuzzyTermsEnum.FuzzyTermsException.class, () -> {\n      new FuzzyQuery(new Term(\"field\", value)).getTermsEnum(new Terms() {\n        @Override\n        public TermsEnum iterator() {\n          throw new UnsupportedOperationException();\n        }\n\n        @Override\n        public long size() {\n          throw new UnsupportedOperationException();\n        }\n\n        @Override\n        public long getSumTotalTermFreq() {\n          throw new UnsupportedOperationException();\n        }\n\n        @Override\n        public long getSumDocFreq() {\n          throw new UnsupportedOperationException();\n        }\n\n        @Override\n        public int getDocCount() {\n          throw new UnsupportedOperationException();\n        }\n\n        @Override\n        public boolean hasFreqs() {\n          throw new UnsupportedOperationException();\n        }\n\n        @Override\n        public boolean hasOffsets() {\n          throw new UnsupportedOperationException();\n        }\n\n        @Override\n        public boolean hasPositions() {\n          throw new UnsupportedOperationException();\n        }\n\n        @Override\n        public boolean hasPayloads() {\n          throw new UnsupportedOperationException();\n        }\n      });\n    });\n    assertThat(expected.getMessage(), containsString(value));\n  }\n\n","bugFix":["32ced6ae32bea08db88402a07435f17f5a579d9e"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ad855e2f1f69c5e330d1027a5d54f8814e47a0d6","date":1588847334,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestFuzzyQuery#testErrorMessage().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestFuzzyQuery#testErrorMessage().mjava","sourceNew":"  public void testErrorMessage() {\n    // 45 states per vector from Lev2TParametricDescription\n    final int length = (Operations.DEFAULT_MAX_DETERMINIZED_STATES / 45) + 10;\n    final String value = randomRealisticMultiByteUnicode(length);\n\n    FuzzyTermsEnum.FuzzyTermsException expected = expectThrows(FuzzyTermsEnum.FuzzyTermsException.class, () -> {\n      new FuzzyAutomatonBuilder(value, 2, 0, true).buildMaxEditAutomaton();\n    });\n    assertThat(expected.getMessage(), containsString(value));\n\n    expected = expectThrows(FuzzyTermsEnum.FuzzyTermsException.class,\n        () -> new FuzzyAutomatonBuilder(value, 2, 0, true).buildAutomatonSet());\n    assertThat(expected.getMessage(), containsString(value));\n  }\n\n","sourceOld":"  public void testErrorMessage() {\n    // 45 states per vector from Lev2TParametricDescription\n    final int length = (Operations.DEFAULT_MAX_DETERMINIZED_STATES / 45) + 10;\n    final String value = randomRealisticMultiByteUnicode(length);\n\n    FuzzyTermsEnum.FuzzyTermsException expected = expectThrows(FuzzyTermsEnum.FuzzyTermsException.class, () -> {\n      new FuzzyQuery(new Term(\"field\", value)).getTermsEnum(new Terms() {\n        @Override\n        public TermsEnum iterator() {\n          return TermsEnum.EMPTY;\n        }\n\n        @Override\n        public long size() {\n          return 0;\n        }\n\n        @Override\n        public long getSumTotalTermFreq() {\n          throw new UnsupportedOperationException();\n        }\n\n        @Override\n        public long getSumDocFreq() {\n          throw new UnsupportedOperationException();\n        }\n\n        @Override\n        public int getDocCount() {\n          throw new UnsupportedOperationException();\n        }\n\n        @Override\n        public boolean hasFreqs() {\n          throw new UnsupportedOperationException();\n        }\n\n        @Override\n        public boolean hasOffsets() {\n          throw new UnsupportedOperationException();\n        }\n\n        @Override\n        public boolean hasPositions() {\n          throw new UnsupportedOperationException();\n        }\n\n        @Override\n        public boolean hasPayloads() {\n          throw new UnsupportedOperationException();\n        }\n      });\n    });\n    assertThat(expected.getMessage(), containsString(value));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"32ced6ae32bea08db88402a07435f17f5a579d9e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"ad855e2f1f69c5e330d1027a5d54f8814e47a0d6":["17da9e30bce5c5fb2b289261c8fbf43ae94b12fa"],"17da9e30bce5c5fb2b289261c8fbf43ae94b12fa":["32ced6ae32bea08db88402a07435f17f5a579d9e"],"4c66470e527299cc148ad0b3441d08dfb7cb9e03":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","32ced6ae32bea08db88402a07435f17f5a579d9e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["ad855e2f1f69c5e330d1027a5d54f8814e47a0d6"]},"commit2Childs":{"32ced6ae32bea08db88402a07435f17f5a579d9e":["17da9e30bce5c5fb2b289261c8fbf43ae94b12fa","4c66470e527299cc148ad0b3441d08dfb7cb9e03"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["32ced6ae32bea08db88402a07435f17f5a579d9e","4c66470e527299cc148ad0b3441d08dfb7cb9e03"],"ad855e2f1f69c5e330d1027a5d54f8814e47a0d6":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"17da9e30bce5c5fb2b289261c8fbf43ae94b12fa":["ad855e2f1f69c5e330d1027a5d54f8814e47a0d6"],"4c66470e527299cc148ad0b3441d08dfb7cb9e03":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["4c66470e527299cc148ad0b3441d08dfb7cb9e03","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}