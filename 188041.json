{"path":"lucene/test-framework/src/java/org/apache/lucene/search/AssertingScorer#setMinCompetitiveScore(float).mjava","commits":[{"id":"9fc47cb7b4346802411bb432f501ed0673d7119e","date":1512640179,"type":0,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/search/AssertingScorer#setMinCompetitiveScore(float).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public void setMinCompetitiveScore(float score) {\n    assert scoreMode == ScoreMode.TOP_SCORES;\n    assert Float.isNaN(score) == false;\n    assert score >= minCompetitiveScore;\n    in.setMinCompetitiveScore(score);\n    minCompetitiveScore = score;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"417142ff08fda9cf0b72d5133e63097a166c6458","date":1512729693,"type":0,"author":"Karl Wright","isMerge":true,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/search/AssertingScorer#setMinCompetitiveScore(float).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public void setMinCompetitiveScore(float score) {\n    assert scoreMode == ScoreMode.TOP_SCORES;\n    assert Float.isNaN(score) == false;\n    assert score >= minCompetitiveScore;\n    in.setMinCompetitiveScore(score);\n    minCompetitiveScore = score;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d0dc52d2a83be9420989b1976a8e9d937160e1e5","date":1536062604,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/search/AssertingScorer#setMinCompetitiveScore(float).mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/search/AssertingScorer#setMinCompetitiveScore(float).mjava","sourceNew":"  @Override\n  public void setMinCompetitiveScore(float score) throws IOException {\n    assert scoreMode == ScoreMode.TOP_SCORES;\n    assert Float.isNaN(score) == false;\n    assert score >= minCompetitiveScore;\n    in.setMinCompetitiveScore(score);\n    minCompetitiveScore = score;\n  }\n\n","sourceOld":"  @Override\n  public void setMinCompetitiveScore(float score) {\n    assert scoreMode == ScoreMode.TOP_SCORES;\n    assert Float.isNaN(score) == false;\n    assert score >= minCompetitiveScore;\n    in.setMinCompetitiveScore(score);\n    minCompetitiveScore = score;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"d0dc52d2a83be9420989b1976a8e9d937160e1e5":["417142ff08fda9cf0b72d5133e63097a166c6458"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"9fc47cb7b4346802411bb432f501ed0673d7119e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["d0dc52d2a83be9420989b1976a8e9d937160e1e5"],"417142ff08fda9cf0b72d5133e63097a166c6458":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","9fc47cb7b4346802411bb432f501ed0673d7119e"]},"commit2Childs":{"d0dc52d2a83be9420989b1976a8e9d937160e1e5":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9fc47cb7b4346802411bb432f501ed0673d7119e","417142ff08fda9cf0b72d5133e63097a166c6458"],"9fc47cb7b4346802411bb432f501ed0673d7119e":["417142ff08fda9cf0b72d5133e63097a166c6458"],"417142ff08fda9cf0b72d5133e63097a166c6458":["d0dc52d2a83be9420989b1976a8e9d937160e1e5"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}