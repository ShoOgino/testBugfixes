{"path":"solr/contrib/analytics/src/java/org/apache/solr/analytics/function/field/LongMultiTrieField#collect(int).mjava","commits":[{"id":"e3268d17c69c8720ec02a4815ece73ac3ab438c1","date":1499337647,"type":1,"author":"Houston Putman","isMerge":false,"pathNew":"solr/contrib/analytics/src/java/org/apache/solr/analytics/function/field/LongMultiTrieField#collect(int).mjava","pathOld":"solr/contrib/analytics/src/java/org/apache/solr/analytics/function/field/LongMultiField#collect(int).mjava","sourceNew":"  @Override\n  public void collect(int doc) throws IOException {\n    count = 0;\n    if (docValues.advanceExact(doc)) {\n      int term;\n      while ((term = (int)docValues.nextOrd()) != SortedSetDocValues.NO_MORE_ORDS) {\n        if (count == values.length) {\n          resizeValues();\n        }\n        values[count++] = LegacyNumericUtils.prefixCodedToLong(docValues.lookupOrd(term));\n      }\n    }\n  }\n\n","sourceOld":"  @Override\n  public void collect(int doc) throws IOException {\n    count = 0;\n    if (docValues.advanceExact(doc)) {\n      int term;\n      while ((term = (int)docValues.nextOrd()) != SortedSetDocValues.NO_MORE_ORDS) {\n        if (count == values.length) {\n          resizeValues();\n        }\n        values[count++] = LegacyNumericUtils.prefixCodedToLong(docValues.lookupOrd(term));\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e73d8d559120669b47658108d818b637df5456ea","date":1499401413,"type":1,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"solr/contrib/analytics/src/java/org/apache/solr/analytics/function/field/LongMultiTrieField#collect(int).mjava","pathOld":"solr/contrib/analytics/src/java/org/apache/solr/analytics/function/field/LongMultiField#collect(int).mjava","sourceNew":"  @Override\n  public void collect(int doc) throws IOException {\n    count = 0;\n    if (docValues.advanceExact(doc)) {\n      int term;\n      while ((term = (int)docValues.nextOrd()) != SortedSetDocValues.NO_MORE_ORDS) {\n        if (count == values.length) {\n          resizeValues();\n        }\n        values[count++] = LegacyNumericUtils.prefixCodedToLong(docValues.lookupOrd(term));\n      }\n    }\n  }\n\n","sourceOld":"  @Override\n  public void collect(int doc) throws IOException {\n    count = 0;\n    if (docValues.advanceExact(doc)) {\n      int term;\n      while ((term = (int)docValues.nextOrd()) != SortedSetDocValues.NO_MORE_ORDS) {\n        if (count == values.length) {\n          resizeValues();\n        }\n        values[count++] = LegacyNumericUtils.prefixCodedToLong(docValues.lookupOrd(term));\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"e3268d17c69c8720ec02a4815ece73ac3ab438c1":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"e73d8d559120669b47658108d818b637df5456ea":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","e3268d17c69c8720ec02a4815ece73ac3ab438c1"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["e3268d17c69c8720ec02a4815ece73ac3ab438c1"]},"commit2Childs":{"e3268d17c69c8720ec02a4815ece73ac3ab438c1":["e73d8d559120669b47658108d818b637df5456ea","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["e3268d17c69c8720ec02a4815ece73ac3ab438c1","e73d8d559120669b47658108d818b637df5456ea"],"e73d8d559120669b47658108d818b637df5456ea":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["e73d8d559120669b47658108d818b637df5456ea","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}