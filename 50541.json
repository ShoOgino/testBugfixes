{"path":"src/java/org/apache/lucene/index/SegmentReader#getFieldNames(IndexReader.FieldOption).mjava","commits":[{"id":"7c687c6cd32bfdceab8fd653a483592265774d97","date":1104356145,"type":0,"author":"Bernhard Messer","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/SegmentReader#getFieldNames(IndexReader.FieldOption).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * @see IndexReader#getFieldNames(IndexReader.FieldOption fldOption)\n   */\n  public Collection getFieldNames(IndexReader.FieldOption fieldOption) {\n    \n    Set fieldSet = new HashSet();\n    for (int i = 0; i < fieldInfos.size(); i++) {\n      FieldInfo fi = fieldInfos.fieldInfo(i);\n      if (fieldOption == IndexReader.FieldOption.ALL) {\n        fieldSet.add(fi.name);\n      }\n      else if (!fi.isIndexed && fieldOption == IndexReader.FieldOption.UNINDEXED) {\n        fieldSet.add(fi.name);\n      }\n      else if (fi.isIndexed && fieldOption == IndexReader.FieldOption.INDEXED) {\n        fieldSet.add(fi.name);\n      }\n      else if (fi.isIndexed && fi.storeTermVector == false && fieldOption == IndexReader.FieldOption.INDEXED_NO_TERMVECTOR) {\n        fieldSet.add(fi.name);\n      }\n      else if (fi.storeTermVector == true &&\n               fi.storePositionWithTermVector == false &&\n               fi.storeOffsetWithTermVector == false &&\n               fieldOption == IndexReader.FieldOption.TERMVECTOR) {\n        fieldSet.add(fi.name);\n      }\n      else if (fi.isIndexed && fi.storeTermVector && fieldOption == IndexReader.FieldOption.INDEXED_WITH_TERMVECTOR) {\n        fieldSet.add(fi.name);\n      }\n      else if (fi.storePositionWithTermVector && fi.storeOffsetWithTermVector == false && fieldOption == IndexReader.FieldOption.TERMVECTOR_WITH_POSITION) {\n        fieldSet.add(fi.name);\n      }\n      else if (fi.storeOffsetWithTermVector && fi.storePositionWithTermVector == false && fieldOption == IndexReader.FieldOption.TERMVECTOR_WITH_OFFSET) {\n        fieldSet.add(fi.name);\n      }\n      else if ((fi.storeOffsetWithTermVector && fi.storePositionWithTermVector) &&\n                fieldOption == IndexReader.FieldOption.TERMVECTOR_WITH_POSITION_OFFSET) {\n        fieldSet.add(fi.name);\n      }\n    }\n    return fieldSet;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"950f3c7592cb559e2534e5089c78833250e156a3","date":1130557968,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/SegmentReader#getFieldNames(IndexReader.FieldOption).mjava","pathOld":"src/java/org/apache/lucene/index/SegmentReader#getFieldNames(IndexReader.FieldOption).mjava","sourceNew":"  /**\n   * @see IndexReader#getFieldNames(IndexReader.FieldOption fldOption)\n   */\n  public Collection getFieldNames(IndexReader.FieldOption fieldOption) {\n\n    Set fieldSet = new HashSet();\n    for (int i = 0; i < fieldInfos.size(); i++) {\n      FieldInfo fi = fieldInfos.fieldInfo(i);\n      if (fieldOption == IndexReader.FieldOption.ALL) {\n        fieldSet.add(fi.name);\n      }\n      else if (!fi.isIndexed && fieldOption == IndexReader.FieldOption.UNINDEXED) {\n        fieldSet.add(fi.name);\n      }\n      else if (fi.isIndexed && fieldOption == IndexReader.FieldOption.INDEXED) {\n        fieldSet.add(fi.name);\n      }\n      else if (fi.isIndexed && fi.storeTermVector == false && fieldOption == IndexReader.FieldOption.INDEXED_NO_TERMVECTOR) {\n        fieldSet.add(fi.name);\n      }\n      else if (fi.storeTermVector == true &&\n               fi.storePositionWithTermVector == false &&\n               fi.storeOffsetWithTermVector == false &&\n               fieldOption == IndexReader.FieldOption.TERMVECTOR) {\n        fieldSet.add(fi.name);\n      }\n      else if (fi.isIndexed && fi.storeTermVector && fieldOption == IndexReader.FieldOption.INDEXED_WITH_TERMVECTOR) {\n        fieldSet.add(fi.name);\n      }\n      else if (fi.storePositionWithTermVector && fi.storeOffsetWithTermVector == false && fieldOption == IndexReader.FieldOption.TERMVECTOR_WITH_POSITION) {\n        fieldSet.add(fi.name);\n      }\n      else if (fi.storeOffsetWithTermVector && fi.storePositionWithTermVector == false && fieldOption == IndexReader.FieldOption.TERMVECTOR_WITH_OFFSET) {\n        fieldSet.add(fi.name);\n      }\n      else if ((fi.storeOffsetWithTermVector && fi.storePositionWithTermVector) &&\n                fieldOption == IndexReader.FieldOption.TERMVECTOR_WITH_POSITION_OFFSET) {\n        fieldSet.add(fi.name);\n      }\n    }\n    return fieldSet;\n  }\n\n","sourceOld":"  /**\n   * @see IndexReader#getFieldNames(IndexReader.FieldOption fldOption)\n   */\n  public Collection getFieldNames(IndexReader.FieldOption fieldOption) {\n    \n    Set fieldSet = new HashSet();\n    for (int i = 0; i < fieldInfos.size(); i++) {\n      FieldInfo fi = fieldInfos.fieldInfo(i);\n      if (fieldOption == IndexReader.FieldOption.ALL) {\n        fieldSet.add(fi.name);\n      }\n      else if (!fi.isIndexed && fieldOption == IndexReader.FieldOption.UNINDEXED) {\n        fieldSet.add(fi.name);\n      }\n      else if (fi.isIndexed && fieldOption == IndexReader.FieldOption.INDEXED) {\n        fieldSet.add(fi.name);\n      }\n      else if (fi.isIndexed && fi.storeTermVector == false && fieldOption == IndexReader.FieldOption.INDEXED_NO_TERMVECTOR) {\n        fieldSet.add(fi.name);\n      }\n      else if (fi.storeTermVector == true &&\n               fi.storePositionWithTermVector == false &&\n               fi.storeOffsetWithTermVector == false &&\n               fieldOption == IndexReader.FieldOption.TERMVECTOR) {\n        fieldSet.add(fi.name);\n      }\n      else if (fi.isIndexed && fi.storeTermVector && fieldOption == IndexReader.FieldOption.INDEXED_WITH_TERMVECTOR) {\n        fieldSet.add(fi.name);\n      }\n      else if (fi.storePositionWithTermVector && fi.storeOffsetWithTermVector == false && fieldOption == IndexReader.FieldOption.TERMVECTOR_WITH_POSITION) {\n        fieldSet.add(fi.name);\n      }\n      else if (fi.storeOffsetWithTermVector && fi.storePositionWithTermVector == false && fieldOption == IndexReader.FieldOption.TERMVECTOR_WITH_OFFSET) {\n        fieldSet.add(fi.name);\n      }\n      else if ((fi.storeOffsetWithTermVector && fi.storePositionWithTermVector) &&\n                fieldOption == IndexReader.FieldOption.TERMVECTOR_WITH_POSITION_OFFSET) {\n        fieldSet.add(fi.name);\n      }\n    }\n    return fieldSet;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"328c1568e471f0c6eaa49ec00334ca59e573710f","date":1173897963,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/SegmentReader#getFieldNames(IndexReader.FieldOption).mjava","pathOld":"src/java/org/apache/lucene/index/SegmentReader#getFieldNames(IndexReader.FieldOption).mjava","sourceNew":"  /**\n   * @see IndexReader#getFieldNames(IndexReader.FieldOption fldOption)\n   */\n  public Collection getFieldNames(IndexReader.FieldOption fieldOption) {\n    ensureOpen();\n\n    Set fieldSet = new HashSet();\n    for (int i = 0; i < fieldInfos.size(); i++) {\n      FieldInfo fi = fieldInfos.fieldInfo(i);\n      if (fieldOption == IndexReader.FieldOption.ALL) {\n        fieldSet.add(fi.name);\n      }\n      else if (!fi.isIndexed && fieldOption == IndexReader.FieldOption.UNINDEXED) {\n        fieldSet.add(fi.name);\n      }\n      else if (fi.isIndexed && fieldOption == IndexReader.FieldOption.INDEXED) {\n        fieldSet.add(fi.name);\n      }\n      else if (fi.isIndexed && fi.storeTermVector == false && fieldOption == IndexReader.FieldOption.INDEXED_NO_TERMVECTOR) {\n        fieldSet.add(fi.name);\n      }\n      else if (fi.storeTermVector == true &&\n               fi.storePositionWithTermVector == false &&\n               fi.storeOffsetWithTermVector == false &&\n               fieldOption == IndexReader.FieldOption.TERMVECTOR) {\n        fieldSet.add(fi.name);\n      }\n      else if (fi.isIndexed && fi.storeTermVector && fieldOption == IndexReader.FieldOption.INDEXED_WITH_TERMVECTOR) {\n        fieldSet.add(fi.name);\n      }\n      else if (fi.storePositionWithTermVector && fi.storeOffsetWithTermVector == false && fieldOption == IndexReader.FieldOption.TERMVECTOR_WITH_POSITION) {\n        fieldSet.add(fi.name);\n      }\n      else if (fi.storeOffsetWithTermVector && fi.storePositionWithTermVector == false && fieldOption == IndexReader.FieldOption.TERMVECTOR_WITH_OFFSET) {\n        fieldSet.add(fi.name);\n      }\n      else if ((fi.storeOffsetWithTermVector && fi.storePositionWithTermVector) &&\n                fieldOption == IndexReader.FieldOption.TERMVECTOR_WITH_POSITION_OFFSET) {\n        fieldSet.add(fi.name);\n      }\n    }\n    return fieldSet;\n  }\n\n","sourceOld":"  /**\n   * @see IndexReader#getFieldNames(IndexReader.FieldOption fldOption)\n   */\n  public Collection getFieldNames(IndexReader.FieldOption fieldOption) {\n\n    Set fieldSet = new HashSet();\n    for (int i = 0; i < fieldInfos.size(); i++) {\n      FieldInfo fi = fieldInfos.fieldInfo(i);\n      if (fieldOption == IndexReader.FieldOption.ALL) {\n        fieldSet.add(fi.name);\n      }\n      else if (!fi.isIndexed && fieldOption == IndexReader.FieldOption.UNINDEXED) {\n        fieldSet.add(fi.name);\n      }\n      else if (fi.isIndexed && fieldOption == IndexReader.FieldOption.INDEXED) {\n        fieldSet.add(fi.name);\n      }\n      else if (fi.isIndexed && fi.storeTermVector == false && fieldOption == IndexReader.FieldOption.INDEXED_NO_TERMVECTOR) {\n        fieldSet.add(fi.name);\n      }\n      else if (fi.storeTermVector == true &&\n               fi.storePositionWithTermVector == false &&\n               fi.storeOffsetWithTermVector == false &&\n               fieldOption == IndexReader.FieldOption.TERMVECTOR) {\n        fieldSet.add(fi.name);\n      }\n      else if (fi.isIndexed && fi.storeTermVector && fieldOption == IndexReader.FieldOption.INDEXED_WITH_TERMVECTOR) {\n        fieldSet.add(fi.name);\n      }\n      else if (fi.storePositionWithTermVector && fi.storeOffsetWithTermVector == false && fieldOption == IndexReader.FieldOption.TERMVECTOR_WITH_POSITION) {\n        fieldSet.add(fi.name);\n      }\n      else if (fi.storeOffsetWithTermVector && fi.storePositionWithTermVector == false && fieldOption == IndexReader.FieldOption.TERMVECTOR_WITH_OFFSET) {\n        fieldSet.add(fi.name);\n      }\n      else if ((fi.storeOffsetWithTermVector && fi.storePositionWithTermVector) &&\n                fieldOption == IndexReader.FieldOption.TERMVECTOR_WITH_POSITION_OFFSET) {\n        fieldSet.add(fi.name);\n      }\n    }\n    return fieldSet;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8522ae207a56c6db28ca06fe6cc33e70911c3600","date":1173935743,"type":3,"author":"Michael Busch","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/SegmentReader#getFieldNames(IndexReader.FieldOption).mjava","pathOld":"src/java/org/apache/lucene/index/SegmentReader#getFieldNames(IndexReader.FieldOption).mjava","sourceNew":"  /**\n   * @see IndexReader#getFieldNames(IndexReader.FieldOption fldOption)\n   */\n  public Collection getFieldNames(IndexReader.FieldOption fieldOption) {\n    ensureOpen();\n\n    Set fieldSet = new HashSet();\n    for (int i = 0; i < fieldInfos.size(); i++) {\n      FieldInfo fi = fieldInfos.fieldInfo(i);\n      if (fieldOption == IndexReader.FieldOption.ALL) {\n        fieldSet.add(fi.name);\n      }\n      else if (!fi.isIndexed && fieldOption == IndexReader.FieldOption.UNINDEXED) {\n        fieldSet.add(fi.name);\n      }\n      else if (fi.storePayloads && fieldOption == IndexReader.FieldOption.STORES_PAYLOADS) {\n        fieldSet.add(fi.name);\n      }\n      else if (fi.isIndexed && fieldOption == IndexReader.FieldOption.INDEXED) {\n        fieldSet.add(fi.name);\n      }\n      else if (fi.isIndexed && fi.storeTermVector == false && fieldOption == IndexReader.FieldOption.INDEXED_NO_TERMVECTOR) {\n        fieldSet.add(fi.name);\n      }\n      else if (fi.storeTermVector == true &&\n               fi.storePositionWithTermVector == false &&\n               fi.storeOffsetWithTermVector == false &&\n               fieldOption == IndexReader.FieldOption.TERMVECTOR) {\n        fieldSet.add(fi.name);\n      }\n      else if (fi.isIndexed && fi.storeTermVector && fieldOption == IndexReader.FieldOption.INDEXED_WITH_TERMVECTOR) {\n        fieldSet.add(fi.name);\n      }\n      else if (fi.storePositionWithTermVector && fi.storeOffsetWithTermVector == false && fieldOption == IndexReader.FieldOption.TERMVECTOR_WITH_POSITION) {\n        fieldSet.add(fi.name);\n      }\n      else if (fi.storeOffsetWithTermVector && fi.storePositionWithTermVector == false && fieldOption == IndexReader.FieldOption.TERMVECTOR_WITH_OFFSET) {\n        fieldSet.add(fi.name);\n      }\n      else if ((fi.storeOffsetWithTermVector && fi.storePositionWithTermVector) &&\n                fieldOption == IndexReader.FieldOption.TERMVECTOR_WITH_POSITION_OFFSET) {\n        fieldSet.add(fi.name);\n      }\n    }\n    return fieldSet;\n  }\n\n","sourceOld":"  /**\n   * @see IndexReader#getFieldNames(IndexReader.FieldOption fldOption)\n   */\n  public Collection getFieldNames(IndexReader.FieldOption fieldOption) {\n    ensureOpen();\n\n    Set fieldSet = new HashSet();\n    for (int i = 0; i < fieldInfos.size(); i++) {\n      FieldInfo fi = fieldInfos.fieldInfo(i);\n      if (fieldOption == IndexReader.FieldOption.ALL) {\n        fieldSet.add(fi.name);\n      }\n      else if (!fi.isIndexed && fieldOption == IndexReader.FieldOption.UNINDEXED) {\n        fieldSet.add(fi.name);\n      }\n      else if (fi.isIndexed && fieldOption == IndexReader.FieldOption.INDEXED) {\n        fieldSet.add(fi.name);\n      }\n      else if (fi.isIndexed && fi.storeTermVector == false && fieldOption == IndexReader.FieldOption.INDEXED_NO_TERMVECTOR) {\n        fieldSet.add(fi.name);\n      }\n      else if (fi.storeTermVector == true &&\n               fi.storePositionWithTermVector == false &&\n               fi.storeOffsetWithTermVector == false &&\n               fieldOption == IndexReader.FieldOption.TERMVECTOR) {\n        fieldSet.add(fi.name);\n      }\n      else if (fi.isIndexed && fi.storeTermVector && fieldOption == IndexReader.FieldOption.INDEXED_WITH_TERMVECTOR) {\n        fieldSet.add(fi.name);\n      }\n      else if (fi.storePositionWithTermVector && fi.storeOffsetWithTermVector == false && fieldOption == IndexReader.FieldOption.TERMVECTOR_WITH_POSITION) {\n        fieldSet.add(fi.name);\n      }\n      else if (fi.storeOffsetWithTermVector && fi.storePositionWithTermVector == false && fieldOption == IndexReader.FieldOption.TERMVECTOR_WITH_OFFSET) {\n        fieldSet.add(fi.name);\n      }\n      else if ((fi.storeOffsetWithTermVector && fi.storePositionWithTermVector) &&\n                fieldOption == IndexReader.FieldOption.TERMVECTOR_WITH_POSITION_OFFSET) {\n        fieldSet.add(fi.name);\n      }\n    }\n    return fieldSet;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"902ba79f4590a41c663c447756d2e5041cbbdda9","date":1217956662,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/SegmentReader#getFieldNames(IndexReader.FieldOption).mjava","pathOld":"src/java/org/apache/lucene/index/SegmentReader#getFieldNames(IndexReader.FieldOption).mjava","sourceNew":"  /**\n   * @see IndexReader#getFieldNames(IndexReader.FieldOption fldOption)\n   */\n  public Collection getFieldNames(IndexReader.FieldOption fieldOption) {\n    ensureOpen();\n\n    Set fieldSet = new HashSet();\n    for (int i = 0; i < fieldInfos.size(); i++) {\n      FieldInfo fi = fieldInfos.fieldInfo(i);\n      if (fieldOption == IndexReader.FieldOption.ALL) {\n        fieldSet.add(fi.name);\n      }\n      else if (!fi.isIndexed && fieldOption == IndexReader.FieldOption.UNINDEXED) {\n        fieldSet.add(fi.name);\n      }\n      else if (fi.omitTf && fieldOption == IndexReader.FieldOption.OMIT_TF) {\n        fieldSet.add(fi.name);\n      }\n      else if (fi.storePayloads && fieldOption == IndexReader.FieldOption.STORES_PAYLOADS) {\n        fieldSet.add(fi.name);\n      }\n      else if (fi.isIndexed && fieldOption == IndexReader.FieldOption.INDEXED) {\n        fieldSet.add(fi.name);\n      }\n      else if (fi.isIndexed && fi.storeTermVector == false && fieldOption == IndexReader.FieldOption.INDEXED_NO_TERMVECTOR) {\n        fieldSet.add(fi.name);\n      }\n      else if (fi.storeTermVector == true &&\n               fi.storePositionWithTermVector == false &&\n               fi.storeOffsetWithTermVector == false &&\n               fieldOption == IndexReader.FieldOption.TERMVECTOR) {\n        fieldSet.add(fi.name);\n      }\n      else if (fi.isIndexed && fi.storeTermVector && fieldOption == IndexReader.FieldOption.INDEXED_WITH_TERMVECTOR) {\n        fieldSet.add(fi.name);\n      }\n      else if (fi.storePositionWithTermVector && fi.storeOffsetWithTermVector == false && fieldOption == IndexReader.FieldOption.TERMVECTOR_WITH_POSITION) {\n        fieldSet.add(fi.name);\n      }\n      else if (fi.storeOffsetWithTermVector && fi.storePositionWithTermVector == false && fieldOption == IndexReader.FieldOption.TERMVECTOR_WITH_OFFSET) {\n        fieldSet.add(fi.name);\n      }\n      else if ((fi.storeOffsetWithTermVector && fi.storePositionWithTermVector) &&\n                fieldOption == IndexReader.FieldOption.TERMVECTOR_WITH_POSITION_OFFSET) {\n        fieldSet.add(fi.name);\n      }\n    }\n    return fieldSet;\n  }\n\n","sourceOld":"  /**\n   * @see IndexReader#getFieldNames(IndexReader.FieldOption fldOption)\n   */\n  public Collection getFieldNames(IndexReader.FieldOption fieldOption) {\n    ensureOpen();\n\n    Set fieldSet = new HashSet();\n    for (int i = 0; i < fieldInfos.size(); i++) {\n      FieldInfo fi = fieldInfos.fieldInfo(i);\n      if (fieldOption == IndexReader.FieldOption.ALL) {\n        fieldSet.add(fi.name);\n      }\n      else if (!fi.isIndexed && fieldOption == IndexReader.FieldOption.UNINDEXED) {\n        fieldSet.add(fi.name);\n      }\n      else if (fi.storePayloads && fieldOption == IndexReader.FieldOption.STORES_PAYLOADS) {\n        fieldSet.add(fi.name);\n      }\n      else if (fi.isIndexed && fieldOption == IndexReader.FieldOption.INDEXED) {\n        fieldSet.add(fi.name);\n      }\n      else if (fi.isIndexed && fi.storeTermVector == false && fieldOption == IndexReader.FieldOption.INDEXED_NO_TERMVECTOR) {\n        fieldSet.add(fi.name);\n      }\n      else if (fi.storeTermVector == true &&\n               fi.storePositionWithTermVector == false &&\n               fi.storeOffsetWithTermVector == false &&\n               fieldOption == IndexReader.FieldOption.TERMVECTOR) {\n        fieldSet.add(fi.name);\n      }\n      else if (fi.isIndexed && fi.storeTermVector && fieldOption == IndexReader.FieldOption.INDEXED_WITH_TERMVECTOR) {\n        fieldSet.add(fi.name);\n      }\n      else if (fi.storePositionWithTermVector && fi.storeOffsetWithTermVector == false && fieldOption == IndexReader.FieldOption.TERMVECTOR_WITH_POSITION) {\n        fieldSet.add(fi.name);\n      }\n      else if (fi.storeOffsetWithTermVector && fi.storePositionWithTermVector == false && fieldOption == IndexReader.FieldOption.TERMVECTOR_WITH_OFFSET) {\n        fieldSet.add(fi.name);\n      }\n      else if ((fi.storeOffsetWithTermVector && fi.storePositionWithTermVector) &&\n                fieldOption == IndexReader.FieldOption.TERMVECTOR_WITH_POSITION_OFFSET) {\n        fieldSet.add(fi.name);\n      }\n    }\n    return fieldSet;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"066b6ff5a08e35c3b6880e7c3ddda79526acdab1","date":1237569961,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/SegmentReader#getFieldNames(IndexReader.FieldOption).mjava","pathOld":"src/java/org/apache/lucene/index/SegmentReader#getFieldNames(IndexReader.FieldOption).mjava","sourceNew":"  /**\n   * @see IndexReader#getFieldNames(IndexReader.FieldOption fldOption)\n   */\n  public Collection getFieldNames(IndexReader.FieldOption fieldOption) {\n    ensureOpen();\n\n    Set fieldSet = new HashSet();\n    for (int i = 0; i < fieldInfos.size(); i++) {\n      FieldInfo fi = fieldInfos.fieldInfo(i);\n      if (fieldOption == IndexReader.FieldOption.ALL) {\n        fieldSet.add(fi.name);\n      }\n      else if (!fi.isIndexed && fieldOption == IndexReader.FieldOption.UNINDEXED) {\n        fieldSet.add(fi.name);\n      }\n      else if (fi.omitTermFreqAndPositions && fieldOption == IndexReader.FieldOption.OMIT_TERM_FREQ_AND_POSITIONS) {\n        fieldSet.add(fi.name);\n      }\n      else if (fi.storePayloads && fieldOption == IndexReader.FieldOption.STORES_PAYLOADS) {\n        fieldSet.add(fi.name);\n      }\n      else if (fi.isIndexed && fieldOption == IndexReader.FieldOption.INDEXED) {\n        fieldSet.add(fi.name);\n      }\n      else if (fi.isIndexed && fi.storeTermVector == false && fieldOption == IndexReader.FieldOption.INDEXED_NO_TERMVECTOR) {\n        fieldSet.add(fi.name);\n      }\n      else if (fi.storeTermVector == true &&\n               fi.storePositionWithTermVector == false &&\n               fi.storeOffsetWithTermVector == false &&\n               fieldOption == IndexReader.FieldOption.TERMVECTOR) {\n        fieldSet.add(fi.name);\n      }\n      else if (fi.isIndexed && fi.storeTermVector && fieldOption == IndexReader.FieldOption.INDEXED_WITH_TERMVECTOR) {\n        fieldSet.add(fi.name);\n      }\n      else if (fi.storePositionWithTermVector && fi.storeOffsetWithTermVector == false && fieldOption == IndexReader.FieldOption.TERMVECTOR_WITH_POSITION) {\n        fieldSet.add(fi.name);\n      }\n      else if (fi.storeOffsetWithTermVector && fi.storePositionWithTermVector == false && fieldOption == IndexReader.FieldOption.TERMVECTOR_WITH_OFFSET) {\n        fieldSet.add(fi.name);\n      }\n      else if ((fi.storeOffsetWithTermVector && fi.storePositionWithTermVector) &&\n                fieldOption == IndexReader.FieldOption.TERMVECTOR_WITH_POSITION_OFFSET) {\n        fieldSet.add(fi.name);\n      }\n    }\n    return fieldSet;\n  }\n\n","sourceOld":"  /**\n   * @see IndexReader#getFieldNames(IndexReader.FieldOption fldOption)\n   */\n  public Collection getFieldNames(IndexReader.FieldOption fieldOption) {\n    ensureOpen();\n\n    Set fieldSet = new HashSet();\n    for (int i = 0; i < fieldInfos.size(); i++) {\n      FieldInfo fi = fieldInfos.fieldInfo(i);\n      if (fieldOption == IndexReader.FieldOption.ALL) {\n        fieldSet.add(fi.name);\n      }\n      else if (!fi.isIndexed && fieldOption == IndexReader.FieldOption.UNINDEXED) {\n        fieldSet.add(fi.name);\n      }\n      else if (fi.omitTf && fieldOption == IndexReader.FieldOption.OMIT_TF) {\n        fieldSet.add(fi.name);\n      }\n      else if (fi.storePayloads && fieldOption == IndexReader.FieldOption.STORES_PAYLOADS) {\n        fieldSet.add(fi.name);\n      }\n      else if (fi.isIndexed && fieldOption == IndexReader.FieldOption.INDEXED) {\n        fieldSet.add(fi.name);\n      }\n      else if (fi.isIndexed && fi.storeTermVector == false && fieldOption == IndexReader.FieldOption.INDEXED_NO_TERMVECTOR) {\n        fieldSet.add(fi.name);\n      }\n      else if (fi.storeTermVector == true &&\n               fi.storePositionWithTermVector == false &&\n               fi.storeOffsetWithTermVector == false &&\n               fieldOption == IndexReader.FieldOption.TERMVECTOR) {\n        fieldSet.add(fi.name);\n      }\n      else if (fi.isIndexed && fi.storeTermVector && fieldOption == IndexReader.FieldOption.INDEXED_WITH_TERMVECTOR) {\n        fieldSet.add(fi.name);\n      }\n      else if (fi.storePositionWithTermVector && fi.storeOffsetWithTermVector == false && fieldOption == IndexReader.FieldOption.TERMVECTOR_WITH_POSITION) {\n        fieldSet.add(fi.name);\n      }\n      else if (fi.storeOffsetWithTermVector && fi.storePositionWithTermVector == false && fieldOption == IndexReader.FieldOption.TERMVECTOR_WITH_OFFSET) {\n        fieldSet.add(fi.name);\n      }\n      else if ((fi.storeOffsetWithTermVector && fi.storePositionWithTermVector) &&\n                fieldOption == IndexReader.FieldOption.TERMVECTOR_WITH_POSITION_OFFSET) {\n        fieldSet.add(fi.name);\n      }\n    }\n    return fieldSet;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"66f3dadb253a44f4cccc81c8a21b685b18b201fb","date":1247245699,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/SegmentReader#getFieldNames(IndexReader.FieldOption).mjava","pathOld":"src/java/org/apache/lucene/index/SegmentReader#getFieldNames(IndexReader.FieldOption).mjava","sourceNew":"  /**\n   * @see IndexReader#getFieldNames(IndexReader.FieldOption fldOption)\n   */\n  public Collection getFieldNames(IndexReader.FieldOption fieldOption) {\n    ensureOpen();\n\n    Set fieldSet = new HashSet();\n    for (int i = 0; i < core.fieldInfos.size(); i++) {\n      FieldInfo fi = core.fieldInfos.fieldInfo(i);\n      if (fieldOption == IndexReader.FieldOption.ALL) {\n        fieldSet.add(fi.name);\n      }\n      else if (!fi.isIndexed && fieldOption == IndexReader.FieldOption.UNINDEXED) {\n        fieldSet.add(fi.name);\n      }\n      else if (fi.omitTermFreqAndPositions && fieldOption == IndexReader.FieldOption.OMIT_TERM_FREQ_AND_POSITIONS) {\n        fieldSet.add(fi.name);\n      }\n      else if (fi.storePayloads && fieldOption == IndexReader.FieldOption.STORES_PAYLOADS) {\n        fieldSet.add(fi.name);\n      }\n      else if (fi.isIndexed && fieldOption == IndexReader.FieldOption.INDEXED) {\n        fieldSet.add(fi.name);\n      }\n      else if (fi.isIndexed && fi.storeTermVector == false && fieldOption == IndexReader.FieldOption.INDEXED_NO_TERMVECTOR) {\n        fieldSet.add(fi.name);\n      }\n      else if (fi.storeTermVector == true &&\n               fi.storePositionWithTermVector == false &&\n               fi.storeOffsetWithTermVector == false &&\n               fieldOption == IndexReader.FieldOption.TERMVECTOR) {\n        fieldSet.add(fi.name);\n      }\n      else if (fi.isIndexed && fi.storeTermVector && fieldOption == IndexReader.FieldOption.INDEXED_WITH_TERMVECTOR) {\n        fieldSet.add(fi.name);\n      }\n      else if (fi.storePositionWithTermVector && fi.storeOffsetWithTermVector == false && fieldOption == IndexReader.FieldOption.TERMVECTOR_WITH_POSITION) {\n        fieldSet.add(fi.name);\n      }\n      else if (fi.storeOffsetWithTermVector && fi.storePositionWithTermVector == false && fieldOption == IndexReader.FieldOption.TERMVECTOR_WITH_OFFSET) {\n        fieldSet.add(fi.name);\n      }\n      else if ((fi.storeOffsetWithTermVector && fi.storePositionWithTermVector) &&\n                fieldOption == IndexReader.FieldOption.TERMVECTOR_WITH_POSITION_OFFSET) {\n        fieldSet.add(fi.name);\n      }\n    }\n    return fieldSet;\n  }\n\n","sourceOld":"  /**\n   * @see IndexReader#getFieldNames(IndexReader.FieldOption fldOption)\n   */\n  public Collection getFieldNames(IndexReader.FieldOption fieldOption) {\n    ensureOpen();\n\n    Set fieldSet = new HashSet();\n    for (int i = 0; i < fieldInfos.size(); i++) {\n      FieldInfo fi = fieldInfos.fieldInfo(i);\n      if (fieldOption == IndexReader.FieldOption.ALL) {\n        fieldSet.add(fi.name);\n      }\n      else if (!fi.isIndexed && fieldOption == IndexReader.FieldOption.UNINDEXED) {\n        fieldSet.add(fi.name);\n      }\n      else if (fi.omitTermFreqAndPositions && fieldOption == IndexReader.FieldOption.OMIT_TERM_FREQ_AND_POSITIONS) {\n        fieldSet.add(fi.name);\n      }\n      else if (fi.storePayloads && fieldOption == IndexReader.FieldOption.STORES_PAYLOADS) {\n        fieldSet.add(fi.name);\n      }\n      else if (fi.isIndexed && fieldOption == IndexReader.FieldOption.INDEXED) {\n        fieldSet.add(fi.name);\n      }\n      else if (fi.isIndexed && fi.storeTermVector == false && fieldOption == IndexReader.FieldOption.INDEXED_NO_TERMVECTOR) {\n        fieldSet.add(fi.name);\n      }\n      else if (fi.storeTermVector == true &&\n               fi.storePositionWithTermVector == false &&\n               fi.storeOffsetWithTermVector == false &&\n               fieldOption == IndexReader.FieldOption.TERMVECTOR) {\n        fieldSet.add(fi.name);\n      }\n      else if (fi.isIndexed && fi.storeTermVector && fieldOption == IndexReader.FieldOption.INDEXED_WITH_TERMVECTOR) {\n        fieldSet.add(fi.name);\n      }\n      else if (fi.storePositionWithTermVector && fi.storeOffsetWithTermVector == false && fieldOption == IndexReader.FieldOption.TERMVECTOR_WITH_POSITION) {\n        fieldSet.add(fi.name);\n      }\n      else if (fi.storeOffsetWithTermVector && fi.storePositionWithTermVector == false && fieldOption == IndexReader.FieldOption.TERMVECTOR_WITH_OFFSET) {\n        fieldSet.add(fi.name);\n      }\n      else if ((fi.storeOffsetWithTermVector && fi.storePositionWithTermVector) &&\n                fieldOption == IndexReader.FieldOption.TERMVECTOR_WITH_POSITION_OFFSET) {\n        fieldSet.add(fi.name);\n      }\n    }\n    return fieldSet;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f011f01db72fa6f556a9a0843944ecee2de4aaa8","date":1255806907,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/SegmentReader#getFieldNames(IndexReader.FieldOption).mjava","pathOld":"src/java/org/apache/lucene/index/SegmentReader#getFieldNames(IndexReader.FieldOption).mjava","sourceNew":"  /**\n   * @see IndexReader#getFieldNames(IndexReader.FieldOption fldOption)\n   */\n  public Collection<String> getFieldNames(IndexReader.FieldOption fieldOption) {\n    ensureOpen();\n\n    Set<String> fieldSet = new HashSet<String>();\n    for (int i = 0; i < core.fieldInfos.size(); i++) {\n      FieldInfo fi = core.fieldInfos.fieldInfo(i);\n      if (fieldOption == IndexReader.FieldOption.ALL) {\n        fieldSet.add(fi.name);\n      }\n      else if (!fi.isIndexed && fieldOption == IndexReader.FieldOption.UNINDEXED) {\n        fieldSet.add(fi.name);\n      }\n      else if (fi.omitTermFreqAndPositions && fieldOption == IndexReader.FieldOption.OMIT_TERM_FREQ_AND_POSITIONS) {\n        fieldSet.add(fi.name);\n      }\n      else if (fi.storePayloads && fieldOption == IndexReader.FieldOption.STORES_PAYLOADS) {\n        fieldSet.add(fi.name);\n      }\n      else if (fi.isIndexed && fieldOption == IndexReader.FieldOption.INDEXED) {\n        fieldSet.add(fi.name);\n      }\n      else if (fi.isIndexed && fi.storeTermVector == false && fieldOption == IndexReader.FieldOption.INDEXED_NO_TERMVECTOR) {\n        fieldSet.add(fi.name);\n      }\n      else if (fi.storeTermVector == true &&\n               fi.storePositionWithTermVector == false &&\n               fi.storeOffsetWithTermVector == false &&\n               fieldOption == IndexReader.FieldOption.TERMVECTOR) {\n        fieldSet.add(fi.name);\n      }\n      else if (fi.isIndexed && fi.storeTermVector && fieldOption == IndexReader.FieldOption.INDEXED_WITH_TERMVECTOR) {\n        fieldSet.add(fi.name);\n      }\n      else if (fi.storePositionWithTermVector && fi.storeOffsetWithTermVector == false && fieldOption == IndexReader.FieldOption.TERMVECTOR_WITH_POSITION) {\n        fieldSet.add(fi.name);\n      }\n      else if (fi.storeOffsetWithTermVector && fi.storePositionWithTermVector == false && fieldOption == IndexReader.FieldOption.TERMVECTOR_WITH_OFFSET) {\n        fieldSet.add(fi.name);\n      }\n      else if ((fi.storeOffsetWithTermVector && fi.storePositionWithTermVector) &&\n                fieldOption == IndexReader.FieldOption.TERMVECTOR_WITH_POSITION_OFFSET) {\n        fieldSet.add(fi.name);\n      }\n    }\n    return fieldSet;\n  }\n\n","sourceOld":"  /**\n   * @see IndexReader#getFieldNames(IndexReader.FieldOption fldOption)\n   */\n  public Collection getFieldNames(IndexReader.FieldOption fieldOption) {\n    ensureOpen();\n\n    Set fieldSet = new HashSet();\n    for (int i = 0; i < core.fieldInfos.size(); i++) {\n      FieldInfo fi = core.fieldInfos.fieldInfo(i);\n      if (fieldOption == IndexReader.FieldOption.ALL) {\n        fieldSet.add(fi.name);\n      }\n      else if (!fi.isIndexed && fieldOption == IndexReader.FieldOption.UNINDEXED) {\n        fieldSet.add(fi.name);\n      }\n      else if (fi.omitTermFreqAndPositions && fieldOption == IndexReader.FieldOption.OMIT_TERM_FREQ_AND_POSITIONS) {\n        fieldSet.add(fi.name);\n      }\n      else if (fi.storePayloads && fieldOption == IndexReader.FieldOption.STORES_PAYLOADS) {\n        fieldSet.add(fi.name);\n      }\n      else if (fi.isIndexed && fieldOption == IndexReader.FieldOption.INDEXED) {\n        fieldSet.add(fi.name);\n      }\n      else if (fi.isIndexed && fi.storeTermVector == false && fieldOption == IndexReader.FieldOption.INDEXED_NO_TERMVECTOR) {\n        fieldSet.add(fi.name);\n      }\n      else if (fi.storeTermVector == true &&\n               fi.storePositionWithTermVector == false &&\n               fi.storeOffsetWithTermVector == false &&\n               fieldOption == IndexReader.FieldOption.TERMVECTOR) {\n        fieldSet.add(fi.name);\n      }\n      else if (fi.isIndexed && fi.storeTermVector && fieldOption == IndexReader.FieldOption.INDEXED_WITH_TERMVECTOR) {\n        fieldSet.add(fi.name);\n      }\n      else if (fi.storePositionWithTermVector && fi.storeOffsetWithTermVector == false && fieldOption == IndexReader.FieldOption.TERMVECTOR_WITH_POSITION) {\n        fieldSet.add(fi.name);\n      }\n      else if (fi.storeOffsetWithTermVector && fi.storePositionWithTermVector == false && fieldOption == IndexReader.FieldOption.TERMVECTOR_WITH_OFFSET) {\n        fieldSet.add(fi.name);\n      }\n      else if ((fi.storeOffsetWithTermVector && fi.storePositionWithTermVector) &&\n                fieldOption == IndexReader.FieldOption.TERMVECTOR_WITH_POSITION_OFFSET) {\n        fieldSet.add(fi.name);\n      }\n    }\n    return fieldSet;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8a9e385641d717e641408d8fbbc62be8fc766357","date":1256746606,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/SegmentReader#getFieldNames(IndexReader.FieldOption).mjava","pathOld":"src/java/org/apache/lucene/index/SegmentReader#getFieldNames(IndexReader.FieldOption).mjava","sourceNew":"  /**\n   * @see IndexReader#getFieldNames(IndexReader.FieldOption fldOption)\n   */\n  @Override\n  public Collection<String> getFieldNames(IndexReader.FieldOption fieldOption) {\n    ensureOpen();\n\n    Set<String> fieldSet = new HashSet<String>();\n    for (int i = 0; i < core.fieldInfos.size(); i++) {\n      FieldInfo fi = core.fieldInfos.fieldInfo(i);\n      if (fieldOption == IndexReader.FieldOption.ALL) {\n        fieldSet.add(fi.name);\n      }\n      else if (!fi.isIndexed && fieldOption == IndexReader.FieldOption.UNINDEXED) {\n        fieldSet.add(fi.name);\n      }\n      else if (fi.omitTermFreqAndPositions && fieldOption == IndexReader.FieldOption.OMIT_TERM_FREQ_AND_POSITIONS) {\n        fieldSet.add(fi.name);\n      }\n      else if (fi.storePayloads && fieldOption == IndexReader.FieldOption.STORES_PAYLOADS) {\n        fieldSet.add(fi.name);\n      }\n      else if (fi.isIndexed && fieldOption == IndexReader.FieldOption.INDEXED) {\n        fieldSet.add(fi.name);\n      }\n      else if (fi.isIndexed && fi.storeTermVector == false && fieldOption == IndexReader.FieldOption.INDEXED_NO_TERMVECTOR) {\n        fieldSet.add(fi.name);\n      }\n      else if (fi.storeTermVector == true &&\n               fi.storePositionWithTermVector == false &&\n               fi.storeOffsetWithTermVector == false &&\n               fieldOption == IndexReader.FieldOption.TERMVECTOR) {\n        fieldSet.add(fi.name);\n      }\n      else if (fi.isIndexed && fi.storeTermVector && fieldOption == IndexReader.FieldOption.INDEXED_WITH_TERMVECTOR) {\n        fieldSet.add(fi.name);\n      }\n      else if (fi.storePositionWithTermVector && fi.storeOffsetWithTermVector == false && fieldOption == IndexReader.FieldOption.TERMVECTOR_WITH_POSITION) {\n        fieldSet.add(fi.name);\n      }\n      else if (fi.storeOffsetWithTermVector && fi.storePositionWithTermVector == false && fieldOption == IndexReader.FieldOption.TERMVECTOR_WITH_OFFSET) {\n        fieldSet.add(fi.name);\n      }\n      else if ((fi.storeOffsetWithTermVector && fi.storePositionWithTermVector) &&\n                fieldOption == IndexReader.FieldOption.TERMVECTOR_WITH_POSITION_OFFSET) {\n        fieldSet.add(fi.name);\n      }\n    }\n    return fieldSet;\n  }\n\n","sourceOld":"  /**\n   * @see IndexReader#getFieldNames(IndexReader.FieldOption fldOption)\n   */\n  public Collection<String> getFieldNames(IndexReader.FieldOption fieldOption) {\n    ensureOpen();\n\n    Set<String> fieldSet = new HashSet<String>();\n    for (int i = 0; i < core.fieldInfos.size(); i++) {\n      FieldInfo fi = core.fieldInfos.fieldInfo(i);\n      if (fieldOption == IndexReader.FieldOption.ALL) {\n        fieldSet.add(fi.name);\n      }\n      else if (!fi.isIndexed && fieldOption == IndexReader.FieldOption.UNINDEXED) {\n        fieldSet.add(fi.name);\n      }\n      else if (fi.omitTermFreqAndPositions && fieldOption == IndexReader.FieldOption.OMIT_TERM_FREQ_AND_POSITIONS) {\n        fieldSet.add(fi.name);\n      }\n      else if (fi.storePayloads && fieldOption == IndexReader.FieldOption.STORES_PAYLOADS) {\n        fieldSet.add(fi.name);\n      }\n      else if (fi.isIndexed && fieldOption == IndexReader.FieldOption.INDEXED) {\n        fieldSet.add(fi.name);\n      }\n      else if (fi.isIndexed && fi.storeTermVector == false && fieldOption == IndexReader.FieldOption.INDEXED_NO_TERMVECTOR) {\n        fieldSet.add(fi.name);\n      }\n      else if (fi.storeTermVector == true &&\n               fi.storePositionWithTermVector == false &&\n               fi.storeOffsetWithTermVector == false &&\n               fieldOption == IndexReader.FieldOption.TERMVECTOR) {\n        fieldSet.add(fi.name);\n      }\n      else if (fi.isIndexed && fi.storeTermVector && fieldOption == IndexReader.FieldOption.INDEXED_WITH_TERMVECTOR) {\n        fieldSet.add(fi.name);\n      }\n      else if (fi.storePositionWithTermVector && fi.storeOffsetWithTermVector == false && fieldOption == IndexReader.FieldOption.TERMVECTOR_WITH_POSITION) {\n        fieldSet.add(fi.name);\n      }\n      else if (fi.storeOffsetWithTermVector && fi.storePositionWithTermVector == false && fieldOption == IndexReader.FieldOption.TERMVECTOR_WITH_OFFSET) {\n        fieldSet.add(fi.name);\n      }\n      else if ((fi.storeOffsetWithTermVector && fi.storePositionWithTermVector) &&\n                fieldOption == IndexReader.FieldOption.TERMVECTOR_WITH_POSITION_OFFSET) {\n        fieldSet.add(fi.name);\n      }\n    }\n    return fieldSet;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c41356c8a19fd7493940c7a1d798ede2fe03ddf8","date":1260481087,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/SegmentReader#getFieldNames(IndexReader.FieldOption).mjava","pathOld":"src/java/org/apache/lucene/index/SegmentReader#getFieldNames(IndexReader.FieldOption).mjava","sourceNew":"  /**\n   * @see IndexReader#getFieldNames(org.apache.lucene.index.IndexReader.FieldOption)\n   */\n  @Override\n  public Collection<String> getFieldNames(IndexReader.FieldOption fieldOption) {\n    ensureOpen();\n\n    Set<String> fieldSet = new HashSet<String>();\n    for (int i = 0; i < core.fieldInfos.size(); i++) {\n      FieldInfo fi = core.fieldInfos.fieldInfo(i);\n      if (fieldOption == IndexReader.FieldOption.ALL) {\n        fieldSet.add(fi.name);\n      }\n      else if (!fi.isIndexed && fieldOption == IndexReader.FieldOption.UNINDEXED) {\n        fieldSet.add(fi.name);\n      }\n      else if (fi.omitTermFreqAndPositions && fieldOption == IndexReader.FieldOption.OMIT_TERM_FREQ_AND_POSITIONS) {\n        fieldSet.add(fi.name);\n      }\n      else if (fi.storePayloads && fieldOption == IndexReader.FieldOption.STORES_PAYLOADS) {\n        fieldSet.add(fi.name);\n      }\n      else if (fi.isIndexed && fieldOption == IndexReader.FieldOption.INDEXED) {\n        fieldSet.add(fi.name);\n      }\n      else if (fi.isIndexed && fi.storeTermVector == false && fieldOption == IndexReader.FieldOption.INDEXED_NO_TERMVECTOR) {\n        fieldSet.add(fi.name);\n      }\n      else if (fi.storeTermVector == true &&\n               fi.storePositionWithTermVector == false &&\n               fi.storeOffsetWithTermVector == false &&\n               fieldOption == IndexReader.FieldOption.TERMVECTOR) {\n        fieldSet.add(fi.name);\n      }\n      else if (fi.isIndexed && fi.storeTermVector && fieldOption == IndexReader.FieldOption.INDEXED_WITH_TERMVECTOR) {\n        fieldSet.add(fi.name);\n      }\n      else if (fi.storePositionWithTermVector && fi.storeOffsetWithTermVector == false && fieldOption == IndexReader.FieldOption.TERMVECTOR_WITH_POSITION) {\n        fieldSet.add(fi.name);\n      }\n      else if (fi.storeOffsetWithTermVector && fi.storePositionWithTermVector == false && fieldOption == IndexReader.FieldOption.TERMVECTOR_WITH_OFFSET) {\n        fieldSet.add(fi.name);\n      }\n      else if ((fi.storeOffsetWithTermVector && fi.storePositionWithTermVector) &&\n                fieldOption == IndexReader.FieldOption.TERMVECTOR_WITH_POSITION_OFFSET) {\n        fieldSet.add(fi.name);\n      }\n    }\n    return fieldSet;\n  }\n\n","sourceOld":"  /**\n   * @see IndexReader#getFieldNames(IndexReader.FieldOption fldOption)\n   */\n  @Override\n  public Collection<String> getFieldNames(IndexReader.FieldOption fieldOption) {\n    ensureOpen();\n\n    Set<String> fieldSet = new HashSet<String>();\n    for (int i = 0; i < core.fieldInfos.size(); i++) {\n      FieldInfo fi = core.fieldInfos.fieldInfo(i);\n      if (fieldOption == IndexReader.FieldOption.ALL) {\n        fieldSet.add(fi.name);\n      }\n      else if (!fi.isIndexed && fieldOption == IndexReader.FieldOption.UNINDEXED) {\n        fieldSet.add(fi.name);\n      }\n      else if (fi.omitTermFreqAndPositions && fieldOption == IndexReader.FieldOption.OMIT_TERM_FREQ_AND_POSITIONS) {\n        fieldSet.add(fi.name);\n      }\n      else if (fi.storePayloads && fieldOption == IndexReader.FieldOption.STORES_PAYLOADS) {\n        fieldSet.add(fi.name);\n      }\n      else if (fi.isIndexed && fieldOption == IndexReader.FieldOption.INDEXED) {\n        fieldSet.add(fi.name);\n      }\n      else if (fi.isIndexed && fi.storeTermVector == false && fieldOption == IndexReader.FieldOption.INDEXED_NO_TERMVECTOR) {\n        fieldSet.add(fi.name);\n      }\n      else if (fi.storeTermVector == true &&\n               fi.storePositionWithTermVector == false &&\n               fi.storeOffsetWithTermVector == false &&\n               fieldOption == IndexReader.FieldOption.TERMVECTOR) {\n        fieldSet.add(fi.name);\n      }\n      else if (fi.isIndexed && fi.storeTermVector && fieldOption == IndexReader.FieldOption.INDEXED_WITH_TERMVECTOR) {\n        fieldSet.add(fi.name);\n      }\n      else if (fi.storePositionWithTermVector && fi.storeOffsetWithTermVector == false && fieldOption == IndexReader.FieldOption.TERMVECTOR_WITH_POSITION) {\n        fieldSet.add(fi.name);\n      }\n      else if (fi.storeOffsetWithTermVector && fi.storePositionWithTermVector == false && fieldOption == IndexReader.FieldOption.TERMVECTOR_WITH_OFFSET) {\n        fieldSet.add(fi.name);\n      }\n      else if ((fi.storeOffsetWithTermVector && fi.storePositionWithTermVector) &&\n                fieldOption == IndexReader.FieldOption.TERMVECTOR_WITH_POSITION_OFFSET) {\n        fieldSet.add(fi.name);\n      }\n    }\n    return fieldSet;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/SegmentReader#getFieldNames(IndexReader.FieldOption).mjava","pathOld":"src/java/org/apache/lucene/index/SegmentReader#getFieldNames(IndexReader.FieldOption).mjava","sourceNew":"  /**\n   * @see IndexReader#getFieldNames(org.apache.lucene.index.IndexReader.FieldOption)\n   */\n  @Override\n  public Collection<String> getFieldNames(IndexReader.FieldOption fieldOption) {\n    ensureOpen();\n\n    Set<String> fieldSet = new HashSet<String>();\n    for (int i = 0; i < core.fieldInfos.size(); i++) {\n      FieldInfo fi = core.fieldInfos.fieldInfo(i);\n      if (fieldOption == IndexReader.FieldOption.ALL) {\n        fieldSet.add(fi.name);\n      }\n      else if (!fi.isIndexed && fieldOption == IndexReader.FieldOption.UNINDEXED) {\n        fieldSet.add(fi.name);\n      }\n      else if (fi.omitTermFreqAndPositions && fieldOption == IndexReader.FieldOption.OMIT_TERM_FREQ_AND_POSITIONS) {\n        fieldSet.add(fi.name);\n      }\n      else if (fi.storePayloads && fieldOption == IndexReader.FieldOption.STORES_PAYLOADS) {\n        fieldSet.add(fi.name);\n      }\n      else if (fi.isIndexed && fieldOption == IndexReader.FieldOption.INDEXED) {\n        fieldSet.add(fi.name);\n      }\n      else if (fi.isIndexed && fi.storeTermVector == false && fieldOption == IndexReader.FieldOption.INDEXED_NO_TERMVECTOR) {\n        fieldSet.add(fi.name);\n      }\n      else if (fi.storeTermVector == true &&\n               fi.storePositionWithTermVector == false &&\n               fi.storeOffsetWithTermVector == false &&\n               fieldOption == IndexReader.FieldOption.TERMVECTOR) {\n        fieldSet.add(fi.name);\n      }\n      else if (fi.isIndexed && fi.storeTermVector && fieldOption == IndexReader.FieldOption.INDEXED_WITH_TERMVECTOR) {\n        fieldSet.add(fi.name);\n      }\n      else if (fi.storePositionWithTermVector && fi.storeOffsetWithTermVector == false && fieldOption == IndexReader.FieldOption.TERMVECTOR_WITH_POSITION) {\n        fieldSet.add(fi.name);\n      }\n      else if (fi.storeOffsetWithTermVector && fi.storePositionWithTermVector == false && fieldOption == IndexReader.FieldOption.TERMVECTOR_WITH_OFFSET) {\n        fieldSet.add(fi.name);\n      }\n      else if ((fi.storeOffsetWithTermVector && fi.storePositionWithTermVector) &&\n                fieldOption == IndexReader.FieldOption.TERMVECTOR_WITH_POSITION_OFFSET) {\n        fieldSet.add(fi.name);\n      }\n    }\n    return fieldSet;\n  }\n\n","sourceOld":"  /**\n   * @see IndexReader#getFieldNames(org.apache.lucene.index.IndexReader.FieldOption)\n   */\n  @Override\n  public Collection<String> getFieldNames(IndexReader.FieldOption fieldOption) {\n    ensureOpen();\n\n    Set<String> fieldSet = new HashSet<String>();\n    for (int i = 0; i < core.fieldInfos.size(); i++) {\n      FieldInfo fi = core.fieldInfos.fieldInfo(i);\n      if (fieldOption == IndexReader.FieldOption.ALL) {\n        fieldSet.add(fi.name);\n      }\n      else if (!fi.isIndexed && fieldOption == IndexReader.FieldOption.UNINDEXED) {\n        fieldSet.add(fi.name);\n      }\n      else if (fi.omitTermFreqAndPositions && fieldOption == IndexReader.FieldOption.OMIT_TERM_FREQ_AND_POSITIONS) {\n        fieldSet.add(fi.name);\n      }\n      else if (fi.storePayloads && fieldOption == IndexReader.FieldOption.STORES_PAYLOADS) {\n        fieldSet.add(fi.name);\n      }\n      else if (fi.isIndexed && fieldOption == IndexReader.FieldOption.INDEXED) {\n        fieldSet.add(fi.name);\n      }\n      else if (fi.isIndexed && fi.storeTermVector == false && fieldOption == IndexReader.FieldOption.INDEXED_NO_TERMVECTOR) {\n        fieldSet.add(fi.name);\n      }\n      else if (fi.storeTermVector == true &&\n               fi.storePositionWithTermVector == false &&\n               fi.storeOffsetWithTermVector == false &&\n               fieldOption == IndexReader.FieldOption.TERMVECTOR) {\n        fieldSet.add(fi.name);\n      }\n      else if (fi.isIndexed && fi.storeTermVector && fieldOption == IndexReader.FieldOption.INDEXED_WITH_TERMVECTOR) {\n        fieldSet.add(fi.name);\n      }\n      else if (fi.storePositionWithTermVector && fi.storeOffsetWithTermVector == false && fieldOption == IndexReader.FieldOption.TERMVECTOR_WITH_POSITION) {\n        fieldSet.add(fi.name);\n      }\n      else if (fi.storeOffsetWithTermVector && fi.storePositionWithTermVector == false && fieldOption == IndexReader.FieldOption.TERMVECTOR_WITH_OFFSET) {\n        fieldSet.add(fi.name);\n      }\n      else if ((fi.storeOffsetWithTermVector && fi.storePositionWithTermVector) &&\n                fieldOption == IndexReader.FieldOption.TERMVECTOR_WITH_POSITION_OFFSET) {\n        fieldSet.add(fi.name);\n      }\n    }\n    return fieldSet;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"328c1568e471f0c6eaa49ec00334ca59e573710f":["950f3c7592cb559e2534e5089c78833250e156a3"],"c41356c8a19fd7493940c7a1d798ede2fe03ddf8":["8a9e385641d717e641408d8fbbc62be8fc766357"],"950f3c7592cb559e2534e5089c78833250e156a3":["7c687c6cd32bfdceab8fd653a483592265774d97"],"8522ae207a56c6db28ca06fe6cc33e70911c3600":["328c1568e471f0c6eaa49ec00334ca59e573710f"],"8a9e385641d717e641408d8fbbc62be8fc766357":["f011f01db72fa6f556a9a0843944ecee2de4aaa8"],"f011f01db72fa6f556a9a0843944ecee2de4aaa8":["66f3dadb253a44f4cccc81c8a21b685b18b201fb"],"902ba79f4590a41c663c447756d2e5041cbbdda9":["8522ae207a56c6db28ca06fe6cc33e70911c3600"],"66f3dadb253a44f4cccc81c8a21b685b18b201fb":["066b6ff5a08e35c3b6880e7c3ddda79526acdab1"],"7c687c6cd32bfdceab8fd653a483592265774d97":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"066b6ff5a08e35c3b6880e7c3ddda79526acdab1":["902ba79f4590a41c663c447756d2e5041cbbdda9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["c41356c8a19fd7493940c7a1d798ede2fe03ddf8"]},"commit2Childs":{"328c1568e471f0c6eaa49ec00334ca59e573710f":["8522ae207a56c6db28ca06fe6cc33e70911c3600"],"950f3c7592cb559e2534e5089c78833250e156a3":["328c1568e471f0c6eaa49ec00334ca59e573710f"],"c41356c8a19fd7493940c7a1d798ede2fe03ddf8":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"8522ae207a56c6db28ca06fe6cc33e70911c3600":["902ba79f4590a41c663c447756d2e5041cbbdda9"],"8a9e385641d717e641408d8fbbc62be8fc766357":["c41356c8a19fd7493940c7a1d798ede2fe03ddf8"],"f011f01db72fa6f556a9a0843944ecee2de4aaa8":["8a9e385641d717e641408d8fbbc62be8fc766357"],"902ba79f4590a41c663c447756d2e5041cbbdda9":["066b6ff5a08e35c3b6880e7c3ddda79526acdab1"],"7c687c6cd32bfdceab8fd653a483592265774d97":["950f3c7592cb559e2534e5089c78833250e156a3"],"66f3dadb253a44f4cccc81c8a21b685b18b201fb":["f011f01db72fa6f556a9a0843944ecee2de4aaa8"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["7c687c6cd32bfdceab8fd653a483592265774d97"],"066b6ff5a08e35c3b6880e7c3ddda79526acdab1":["66f3dadb253a44f4cccc81c8a21b685b18b201fb"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}