{"path":"lucene/facet/src/test/org/apache/lucene/facet/taxonomy/TestTaxonomyFacetSumValueSource#testBasic().mjava","commits":[{"id":"4edc984f0f4ac77c37e48ace2932f780f888453c","date":1388475218,"type":1,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/taxonomy/TestTaxonomyFacetSumValueSource#testBasic().mjava","pathOld":"lucene/facet/src/test/org/apache/lucene/facet/TestTaxonomyFacetSumValueSource#testBasic().mjava","sourceNew":"  public void testBasic() throws Exception {\n\n    Directory dir = newDirectory();\n    Directory taxoDir = newDirectory();\n\n    // Writes facet ords to a separate directory from the\n    // main index:\n    DirectoryTaxonomyWriter taxoWriter = new DirectoryTaxonomyWriter(taxoDir, IndexWriterConfig.OpenMode.CREATE);\n\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir);\n    FacetsConfig config = new FacetsConfig();\n\n    // Reused across documents, to add the necessary facet\n    // fields:\n    Document doc = new Document();\n    doc.add(new IntField(\"num\", 10, Field.Store.NO));\n    doc.add(new FacetField(\"Author\", \"Bob\"));\n    writer.addDocument(config.build(taxoWriter, doc));\n\n    doc = new Document();\n    doc.add(new IntField(\"num\", 20, Field.Store.NO));\n    doc.add(new FacetField(\"Author\", \"Lisa\"));\n    writer.addDocument(config.build(taxoWriter, doc));\n\n    doc = new Document();\n    doc.add(new IntField(\"num\", 30, Field.Store.NO));\n    doc.add(new FacetField(\"Author\", \"Lisa\"));\n    writer.addDocument(config.build(taxoWriter, doc));\n\n    doc = new Document();\n    doc.add(new IntField(\"num\", 40, Field.Store.NO));\n    doc.add(new FacetField(\"Author\", \"Susan\"));\n    writer.addDocument(config.build(taxoWriter, doc));\n\n    doc = new Document();\n    doc.add(new IntField(\"num\", 45, Field.Store.NO));\n    doc.add(new FacetField(\"Author\", \"Frank\"));\n    writer.addDocument(config.build(taxoWriter, doc));\n\n    // NRT open\n    IndexSearcher searcher = newSearcher(writer.getReader());\n    writer.close();\n\n    // NRT open\n    TaxonomyReader taxoReader = new DirectoryTaxonomyReader(taxoWriter);\n    taxoWriter.close();\n\n    // Aggregate the facet counts:\n    FacetsCollector c = new FacetsCollector();\n\n    // MatchAllDocsQuery is for \"browsing\" (counts facets\n    // for all non-deleted docs in the index); normally\n    // you'd use a \"normal\" query and one of the\n    // Facets.search utility methods:\n    searcher.search(new MatchAllDocsQuery(), c);\n\n    TaxonomyFacetSumValueSource facets = new TaxonomyFacetSumValueSource(taxoReader, new FacetsConfig(), c, new IntFieldSource(\"num\"));\n\n    // Retrieve & verify results:\n    assertEquals(\"dim=Author path=[] value=145.0 childCount=4\\n  Lisa (50.0)\\n  Frank (45.0)\\n  Susan (40.0)\\n  Bob (10.0)\\n\", facets.getTopChildren(10, \"Author\").toString());\n\n    taxoReader.close();\n    searcher.getIndexReader().close();\n    dir.close();\n    taxoDir.close();\n  }\n\n","sourceOld":"  public void testBasic() throws Exception {\n\n    Directory dir = newDirectory();\n    Directory taxoDir = newDirectory();\n\n    // Writes facet ords to a separate directory from the\n    // main index:\n    DirectoryTaxonomyWriter taxoWriter = new DirectoryTaxonomyWriter(taxoDir, IndexWriterConfig.OpenMode.CREATE);\n\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir);\n    FacetsConfig config = new FacetsConfig();\n\n    // Reused across documents, to add the necessary facet\n    // fields:\n    Document doc = new Document();\n    doc.add(new IntField(\"num\", 10, Field.Store.NO));\n    doc.add(new FacetField(\"Author\", \"Bob\"));\n    writer.addDocument(config.build(taxoWriter, doc));\n\n    doc = new Document();\n    doc.add(new IntField(\"num\", 20, Field.Store.NO));\n    doc.add(new FacetField(\"Author\", \"Lisa\"));\n    writer.addDocument(config.build(taxoWriter, doc));\n\n    doc = new Document();\n    doc.add(new IntField(\"num\", 30, Field.Store.NO));\n    doc.add(new FacetField(\"Author\", \"Lisa\"));\n    writer.addDocument(config.build(taxoWriter, doc));\n\n    doc = new Document();\n    doc.add(new IntField(\"num\", 40, Field.Store.NO));\n    doc.add(new FacetField(\"Author\", \"Susan\"));\n    writer.addDocument(config.build(taxoWriter, doc));\n\n    doc = new Document();\n    doc.add(new IntField(\"num\", 45, Field.Store.NO));\n    doc.add(new FacetField(\"Author\", \"Frank\"));\n    writer.addDocument(config.build(taxoWriter, doc));\n\n    // NRT open\n    IndexSearcher searcher = newSearcher(writer.getReader());\n    writer.close();\n\n    // NRT open\n    TaxonomyReader taxoReader = new DirectoryTaxonomyReader(taxoWriter);\n    taxoWriter.close();\n\n    // Aggregate the facet counts:\n    FacetsCollector c = new FacetsCollector();\n\n    // MatchAllDocsQuery is for \"browsing\" (counts facets\n    // for all non-deleted docs in the index); normally\n    // you'd use a \"normal\" query and one of the\n    // Facets.search utility methods:\n    searcher.search(new MatchAllDocsQuery(), c);\n\n    TaxonomyFacetSumValueSource facets = new TaxonomyFacetSumValueSource(taxoReader, new FacetsConfig(), c, new IntFieldSource(\"num\"));\n\n    // Retrieve & verify results:\n    assertEquals(\"dim=Author path=[] value=145.0 childCount=4\\n  Lisa (50.0)\\n  Frank (45.0)\\n  Susan (40.0)\\n  Bob (10.0)\\n\", facets.getTopChildren(10, \"Author\").toString());\n\n    taxoReader.close();\n    searcher.getIndexReader().close();\n    dir.close();\n    taxoDir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3cc728b07df73b197e6d940d27f9b08b63918f13","date":1388834348,"type":0,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/taxonomy/TestTaxonomyFacetSumValueSource#testBasic().mjava","pathOld":"/dev/null","sourceNew":"  public void testBasic() throws Exception {\n\n    Directory dir = newDirectory();\n    Directory taxoDir = newDirectory();\n\n    // Writes facet ords to a separate directory from the\n    // main index:\n    DirectoryTaxonomyWriter taxoWriter = new DirectoryTaxonomyWriter(taxoDir, IndexWriterConfig.OpenMode.CREATE);\n\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir);\n    FacetsConfig config = new FacetsConfig();\n\n    // Reused across documents, to add the necessary facet\n    // fields:\n    Document doc = new Document();\n    doc.add(new IntField(\"num\", 10, Field.Store.NO));\n    doc.add(new FacetField(\"Author\", \"Bob\"));\n    writer.addDocument(config.build(taxoWriter, doc));\n\n    doc = new Document();\n    doc.add(new IntField(\"num\", 20, Field.Store.NO));\n    doc.add(new FacetField(\"Author\", \"Lisa\"));\n    writer.addDocument(config.build(taxoWriter, doc));\n\n    doc = new Document();\n    doc.add(new IntField(\"num\", 30, Field.Store.NO));\n    doc.add(new FacetField(\"Author\", \"Lisa\"));\n    writer.addDocument(config.build(taxoWriter, doc));\n\n    doc = new Document();\n    doc.add(new IntField(\"num\", 40, Field.Store.NO));\n    doc.add(new FacetField(\"Author\", \"Susan\"));\n    writer.addDocument(config.build(taxoWriter, doc));\n\n    doc = new Document();\n    doc.add(new IntField(\"num\", 45, Field.Store.NO));\n    doc.add(new FacetField(\"Author\", \"Frank\"));\n    writer.addDocument(config.build(taxoWriter, doc));\n\n    // NRT open\n    IndexSearcher searcher = newSearcher(writer.getReader());\n    writer.close();\n\n    // NRT open\n    TaxonomyReader taxoReader = new DirectoryTaxonomyReader(taxoWriter);\n    taxoWriter.close();\n\n    // Aggregate the facet counts:\n    FacetsCollector c = new FacetsCollector();\n\n    // MatchAllDocsQuery is for \"browsing\" (counts facets\n    // for all non-deleted docs in the index); normally\n    // you'd use a \"normal\" query and one of the\n    // Facets.search utility methods:\n    searcher.search(new MatchAllDocsQuery(), c);\n\n    TaxonomyFacetSumValueSource facets = new TaxonomyFacetSumValueSource(taxoReader, new FacetsConfig(), c, new IntFieldSource(\"num\"));\n\n    // Retrieve & verify results:\n    assertEquals(\"dim=Author path=[] value=145.0 childCount=4\\n  Lisa (50.0)\\n  Frank (45.0)\\n  Susan (40.0)\\n  Bob (10.0)\\n\", facets.getTopChildren(10, \"Author\").toString());\n\n    taxoReader.close();\n    searcher.getIndexReader().close();\n    dir.close();\n    taxoDir.close();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ae14298f4eec6d5faee6a149f88ba57d14a6f21a","date":1396971290,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/taxonomy/TestTaxonomyFacetSumValueSource#testBasic().mjava","pathOld":"lucene/facet/src/test/org/apache/lucene/facet/taxonomy/TestTaxonomyFacetSumValueSource#testBasic().mjava","sourceNew":"  public void testBasic() throws Exception {\n\n    Directory dir = newDirectory();\n    Directory taxoDir = newDirectory();\n\n    // Writes facet ords to a separate directory from the\n    // main index:\n    DirectoryTaxonomyWriter taxoWriter = new DirectoryTaxonomyWriter(taxoDir, IndexWriterConfig.OpenMode.CREATE);\n\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir);\n    FacetsConfig config = new FacetsConfig();\n\n    // Reused across documents, to add the necessary facet\n    // fields:\n    Document doc = new Document();\n    doc.add(new IntField(\"num\", 10, Field.Store.NO));\n    doc.add(new FacetField(\"Author\", \"Bob\"));\n    writer.addDocument(config.build(taxoWriter, doc));\n\n    doc = new Document();\n    doc.add(new IntField(\"num\", 20, Field.Store.NO));\n    doc.add(new FacetField(\"Author\", \"Lisa\"));\n    writer.addDocument(config.build(taxoWriter, doc));\n\n    doc = new Document();\n    doc.add(new IntField(\"num\", 30, Field.Store.NO));\n    doc.add(new FacetField(\"Author\", \"Lisa\"));\n    writer.addDocument(config.build(taxoWriter, doc));\n\n    doc = new Document();\n    doc.add(new IntField(\"num\", 40, Field.Store.NO));\n    doc.add(new FacetField(\"Author\", \"Susan\"));\n    writer.addDocument(config.build(taxoWriter, doc));\n\n    doc = new Document();\n    doc.add(new IntField(\"num\", 45, Field.Store.NO));\n    doc.add(new FacetField(\"Author\", \"Frank\"));\n    writer.addDocument(config.build(taxoWriter, doc));\n\n    // NRT open\n    IndexSearcher searcher = newSearcher(writer.getReader());\n    writer.shutdown();\n\n    // NRT open\n    TaxonomyReader taxoReader = new DirectoryTaxonomyReader(taxoWriter);\n    taxoWriter.close();\n\n    // Aggregate the facet counts:\n    FacetsCollector c = new FacetsCollector();\n\n    // MatchAllDocsQuery is for \"browsing\" (counts facets\n    // for all non-deleted docs in the index); normally\n    // you'd use a \"normal\" query and one of the\n    // Facets.search utility methods:\n    searcher.search(new MatchAllDocsQuery(), c);\n\n    TaxonomyFacetSumValueSource facets = new TaxonomyFacetSumValueSource(taxoReader, new FacetsConfig(), c, new IntFieldSource(\"num\"));\n\n    // Retrieve & verify results:\n    assertEquals(\"dim=Author path=[] value=145.0 childCount=4\\n  Lisa (50.0)\\n  Frank (45.0)\\n  Susan (40.0)\\n  Bob (10.0)\\n\", facets.getTopChildren(10, \"Author\").toString());\n\n    taxoReader.close();\n    searcher.getIndexReader().close();\n    dir.close();\n    taxoDir.close();\n  }\n\n","sourceOld":"  public void testBasic() throws Exception {\n\n    Directory dir = newDirectory();\n    Directory taxoDir = newDirectory();\n\n    // Writes facet ords to a separate directory from the\n    // main index:\n    DirectoryTaxonomyWriter taxoWriter = new DirectoryTaxonomyWriter(taxoDir, IndexWriterConfig.OpenMode.CREATE);\n\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir);\n    FacetsConfig config = new FacetsConfig();\n\n    // Reused across documents, to add the necessary facet\n    // fields:\n    Document doc = new Document();\n    doc.add(new IntField(\"num\", 10, Field.Store.NO));\n    doc.add(new FacetField(\"Author\", \"Bob\"));\n    writer.addDocument(config.build(taxoWriter, doc));\n\n    doc = new Document();\n    doc.add(new IntField(\"num\", 20, Field.Store.NO));\n    doc.add(new FacetField(\"Author\", \"Lisa\"));\n    writer.addDocument(config.build(taxoWriter, doc));\n\n    doc = new Document();\n    doc.add(new IntField(\"num\", 30, Field.Store.NO));\n    doc.add(new FacetField(\"Author\", \"Lisa\"));\n    writer.addDocument(config.build(taxoWriter, doc));\n\n    doc = new Document();\n    doc.add(new IntField(\"num\", 40, Field.Store.NO));\n    doc.add(new FacetField(\"Author\", \"Susan\"));\n    writer.addDocument(config.build(taxoWriter, doc));\n\n    doc = new Document();\n    doc.add(new IntField(\"num\", 45, Field.Store.NO));\n    doc.add(new FacetField(\"Author\", \"Frank\"));\n    writer.addDocument(config.build(taxoWriter, doc));\n\n    // NRT open\n    IndexSearcher searcher = newSearcher(writer.getReader());\n    writer.close();\n\n    // NRT open\n    TaxonomyReader taxoReader = new DirectoryTaxonomyReader(taxoWriter);\n    taxoWriter.close();\n\n    // Aggregate the facet counts:\n    FacetsCollector c = new FacetsCollector();\n\n    // MatchAllDocsQuery is for \"browsing\" (counts facets\n    // for all non-deleted docs in the index); normally\n    // you'd use a \"normal\" query and one of the\n    // Facets.search utility methods:\n    searcher.search(new MatchAllDocsQuery(), c);\n\n    TaxonomyFacetSumValueSource facets = new TaxonomyFacetSumValueSource(taxoReader, new FacetsConfig(), c, new IntFieldSource(\"num\"));\n\n    // Retrieve & verify results:\n    assertEquals(\"dim=Author path=[] value=145.0 childCount=4\\n  Lisa (50.0)\\n  Frank (45.0)\\n  Susan (40.0)\\n  Bob (10.0)\\n\", facets.getTopChildren(10, \"Author\").toString());\n\n    taxoReader.close();\n    searcher.getIndexReader().close();\n    dir.close();\n    taxoDir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b70a13d2b73512ad6b204e9ad8fe09ffeeda3c2c","date":1399816179,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/taxonomy/TestTaxonomyFacetSumValueSource#testBasic().mjava","pathOld":"lucene/facet/src/test/org/apache/lucene/facet/taxonomy/TestTaxonomyFacetSumValueSource#testBasic().mjava","sourceNew":"  public void testBasic() throws Exception {\n\n    Directory dir = newDirectory();\n    Directory taxoDir = newDirectory();\n\n    // Writes facet ords to a separate directory from the\n    // main index:\n    DirectoryTaxonomyWriter taxoWriter = new DirectoryTaxonomyWriter(taxoDir, IndexWriterConfig.OpenMode.CREATE);\n\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir);\n    FacetsConfig config = new FacetsConfig();\n\n    // Reused across documents, to add the necessary facet\n    // fields:\n    Document doc = new Document();\n    doc.add(new NumericDocValuesField(\"num\", 10));\n    doc.add(new FacetField(\"Author\", \"Bob\"));\n    writer.addDocument(config.build(taxoWriter, doc));\n\n    doc = new Document();\n    doc.add(new NumericDocValuesField(\"num\", 20));\n    doc.add(new FacetField(\"Author\", \"Lisa\"));\n    writer.addDocument(config.build(taxoWriter, doc));\n\n    doc = new Document();\n    doc.add(new NumericDocValuesField(\"num\", 30));\n    doc.add(new FacetField(\"Author\", \"Lisa\"));\n    writer.addDocument(config.build(taxoWriter, doc));\n\n    doc = new Document();\n    doc.add(new NumericDocValuesField(\"num\", 40));\n    doc.add(new FacetField(\"Author\", \"Susan\"));\n    writer.addDocument(config.build(taxoWriter, doc));\n\n    doc = new Document();\n    doc.add(new NumericDocValuesField(\"num\", 45));\n    doc.add(new FacetField(\"Author\", \"Frank\"));\n    writer.addDocument(config.build(taxoWriter, doc));\n\n    // NRT open\n    IndexSearcher searcher = newSearcher(writer.getReader());\n    writer.shutdown();\n\n    // NRT open\n    TaxonomyReader taxoReader = new DirectoryTaxonomyReader(taxoWriter);\n    taxoWriter.close();\n\n    // Aggregate the facet counts:\n    FacetsCollector c = new FacetsCollector();\n\n    // MatchAllDocsQuery is for \"browsing\" (counts facets\n    // for all non-deleted docs in the index); normally\n    // you'd use a \"normal\" query and one of the\n    // Facets.search utility methods:\n    searcher.search(new MatchAllDocsQuery(), c);\n\n    TaxonomyFacetSumValueSource facets = new TaxonomyFacetSumValueSource(taxoReader, new FacetsConfig(), c, new IntFieldSource(\"num\"));\n\n    // Retrieve & verify results:\n    assertEquals(\"dim=Author path=[] value=145.0 childCount=4\\n  Lisa (50.0)\\n  Frank (45.0)\\n  Susan (40.0)\\n  Bob (10.0)\\n\", facets.getTopChildren(10, \"Author\").toString());\n\n    taxoReader.close();\n    searcher.getIndexReader().close();\n    dir.close();\n    taxoDir.close();\n  }\n\n","sourceOld":"  public void testBasic() throws Exception {\n\n    Directory dir = newDirectory();\n    Directory taxoDir = newDirectory();\n\n    // Writes facet ords to a separate directory from the\n    // main index:\n    DirectoryTaxonomyWriter taxoWriter = new DirectoryTaxonomyWriter(taxoDir, IndexWriterConfig.OpenMode.CREATE);\n\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir);\n    FacetsConfig config = new FacetsConfig();\n\n    // Reused across documents, to add the necessary facet\n    // fields:\n    Document doc = new Document();\n    doc.add(new IntField(\"num\", 10, Field.Store.NO));\n    doc.add(new FacetField(\"Author\", \"Bob\"));\n    writer.addDocument(config.build(taxoWriter, doc));\n\n    doc = new Document();\n    doc.add(new IntField(\"num\", 20, Field.Store.NO));\n    doc.add(new FacetField(\"Author\", \"Lisa\"));\n    writer.addDocument(config.build(taxoWriter, doc));\n\n    doc = new Document();\n    doc.add(new IntField(\"num\", 30, Field.Store.NO));\n    doc.add(new FacetField(\"Author\", \"Lisa\"));\n    writer.addDocument(config.build(taxoWriter, doc));\n\n    doc = new Document();\n    doc.add(new IntField(\"num\", 40, Field.Store.NO));\n    doc.add(new FacetField(\"Author\", \"Susan\"));\n    writer.addDocument(config.build(taxoWriter, doc));\n\n    doc = new Document();\n    doc.add(new IntField(\"num\", 45, Field.Store.NO));\n    doc.add(new FacetField(\"Author\", \"Frank\"));\n    writer.addDocument(config.build(taxoWriter, doc));\n\n    // NRT open\n    IndexSearcher searcher = newSearcher(writer.getReader());\n    writer.shutdown();\n\n    // NRT open\n    TaxonomyReader taxoReader = new DirectoryTaxonomyReader(taxoWriter);\n    taxoWriter.close();\n\n    // Aggregate the facet counts:\n    FacetsCollector c = new FacetsCollector();\n\n    // MatchAllDocsQuery is for \"browsing\" (counts facets\n    // for all non-deleted docs in the index); normally\n    // you'd use a \"normal\" query and one of the\n    // Facets.search utility methods:\n    searcher.search(new MatchAllDocsQuery(), c);\n\n    TaxonomyFacetSumValueSource facets = new TaxonomyFacetSumValueSource(taxoReader, new FacetsConfig(), c, new IntFieldSource(\"num\"));\n\n    // Retrieve & verify results:\n    assertEquals(\"dim=Author path=[] value=145.0 childCount=4\\n  Lisa (50.0)\\n  Frank (45.0)\\n  Susan (40.0)\\n  Bob (10.0)\\n\", facets.getTopChildren(10, \"Author\").toString());\n\n    taxoReader.close();\n    searcher.getIndexReader().close();\n    dir.close();\n    taxoDir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"93dd449115a9247533e44bab47e8429e5dccbc6d","date":1400258396,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/taxonomy/TestTaxonomyFacetSumValueSource#testBasic().mjava","pathOld":"lucene/facet/src/test/org/apache/lucene/facet/taxonomy/TestTaxonomyFacetSumValueSource#testBasic().mjava","sourceNew":"  public void testBasic() throws Exception {\n\n    Directory dir = newDirectory();\n    Directory taxoDir = newDirectory();\n\n    // Writes facet ords to a separate directory from the\n    // main index:\n    DirectoryTaxonomyWriter taxoWriter = new DirectoryTaxonomyWriter(taxoDir, IndexWriterConfig.OpenMode.CREATE);\n\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir);\n    FacetsConfig config = new FacetsConfig();\n\n    // Reused across documents, to add the necessary facet\n    // fields:\n    Document doc = new Document();\n    doc.add(new NumericDocValuesField(\"num\", 10));\n    doc.add(new FacetField(\"Author\", \"Bob\"));\n    writer.addDocument(config.build(taxoWriter, doc));\n\n    doc = new Document();\n    doc.add(new NumericDocValuesField(\"num\", 20));\n    doc.add(new FacetField(\"Author\", \"Lisa\"));\n    writer.addDocument(config.build(taxoWriter, doc));\n\n    doc = new Document();\n    doc.add(new NumericDocValuesField(\"num\", 30));\n    doc.add(new FacetField(\"Author\", \"Lisa\"));\n    writer.addDocument(config.build(taxoWriter, doc));\n\n    doc = new Document();\n    doc.add(new NumericDocValuesField(\"num\", 40));\n    doc.add(new FacetField(\"Author\", \"Susan\"));\n    writer.addDocument(config.build(taxoWriter, doc));\n\n    doc = new Document();\n    doc.add(new NumericDocValuesField(\"num\", 45));\n    doc.add(new FacetField(\"Author\", \"Frank\"));\n    writer.addDocument(config.build(taxoWriter, doc));\n\n    // NRT open\n    IndexSearcher searcher = newSearcher(writer.getReader());\n    writer.shutdown();\n\n    // NRT open\n    TaxonomyReader taxoReader = new DirectoryTaxonomyReader(taxoWriter);\n    taxoWriter.close();\n\n    // Aggregate the facet counts:\n    FacetsCollector c = new FacetsCollector();\n\n    // MatchAllDocsQuery is for \"browsing\" (counts facets\n    // for all non-deleted docs in the index); normally\n    // you'd use a \"normal\" query and one of the\n    // Facets.search utility methods:\n    searcher.search(new MatchAllDocsQuery(), c);\n\n    TaxonomyFacetSumValueSource facets = new TaxonomyFacetSumValueSource(taxoReader, new FacetsConfig(), c, new IntFieldSource(\"num\"));\n\n    // Retrieve & verify results:\n    assertEquals(\"dim=Author path=[] value=145.0 childCount=4\\n  Lisa (50.0)\\n  Frank (45.0)\\n  Susan (40.0)\\n  Bob (10.0)\\n\", facets.getTopChildren(10, \"Author\").toString());\n\n    taxoReader.close();\n    searcher.getIndexReader().close();\n    dir.close();\n    taxoDir.close();\n  }\n\n","sourceOld":"  public void testBasic() throws Exception {\n\n    Directory dir = newDirectory();\n    Directory taxoDir = newDirectory();\n\n    // Writes facet ords to a separate directory from the\n    // main index:\n    DirectoryTaxonomyWriter taxoWriter = new DirectoryTaxonomyWriter(taxoDir, IndexWriterConfig.OpenMode.CREATE);\n\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir);\n    FacetsConfig config = new FacetsConfig();\n\n    // Reused across documents, to add the necessary facet\n    // fields:\n    Document doc = new Document();\n    doc.add(new IntField(\"num\", 10, Field.Store.NO));\n    doc.add(new FacetField(\"Author\", \"Bob\"));\n    writer.addDocument(config.build(taxoWriter, doc));\n\n    doc = new Document();\n    doc.add(new IntField(\"num\", 20, Field.Store.NO));\n    doc.add(new FacetField(\"Author\", \"Lisa\"));\n    writer.addDocument(config.build(taxoWriter, doc));\n\n    doc = new Document();\n    doc.add(new IntField(\"num\", 30, Field.Store.NO));\n    doc.add(new FacetField(\"Author\", \"Lisa\"));\n    writer.addDocument(config.build(taxoWriter, doc));\n\n    doc = new Document();\n    doc.add(new IntField(\"num\", 40, Field.Store.NO));\n    doc.add(new FacetField(\"Author\", \"Susan\"));\n    writer.addDocument(config.build(taxoWriter, doc));\n\n    doc = new Document();\n    doc.add(new IntField(\"num\", 45, Field.Store.NO));\n    doc.add(new FacetField(\"Author\", \"Frank\"));\n    writer.addDocument(config.build(taxoWriter, doc));\n\n    // NRT open\n    IndexSearcher searcher = newSearcher(writer.getReader());\n    writer.shutdown();\n\n    // NRT open\n    TaxonomyReader taxoReader = new DirectoryTaxonomyReader(taxoWriter);\n    taxoWriter.close();\n\n    // Aggregate the facet counts:\n    FacetsCollector c = new FacetsCollector();\n\n    // MatchAllDocsQuery is for \"browsing\" (counts facets\n    // for all non-deleted docs in the index); normally\n    // you'd use a \"normal\" query and one of the\n    // Facets.search utility methods:\n    searcher.search(new MatchAllDocsQuery(), c);\n\n    TaxonomyFacetSumValueSource facets = new TaxonomyFacetSumValueSource(taxoReader, new FacetsConfig(), c, new IntFieldSource(\"num\"));\n\n    // Retrieve & verify results:\n    assertEquals(\"dim=Author path=[] value=145.0 childCount=4\\n  Lisa (50.0)\\n  Frank (45.0)\\n  Susan (40.0)\\n  Bob (10.0)\\n\", facets.getTopChildren(10, \"Author\").toString());\n\n    taxoReader.close();\n    searcher.getIndexReader().close();\n    dir.close();\n    taxoDir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"56572ec06f1407c066d6b7399413178b33176cd8","date":1400495675,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/taxonomy/TestTaxonomyFacetSumValueSource#testBasic().mjava","pathOld":"lucene/facet/src/test/org/apache/lucene/facet/taxonomy/TestTaxonomyFacetSumValueSource#testBasic().mjava","sourceNew":"  public void testBasic() throws Exception {\n\n    Directory dir = newDirectory();\n    Directory taxoDir = newDirectory();\n\n    // Writes facet ords to a separate directory from the\n    // main index:\n    DirectoryTaxonomyWriter taxoWriter = new DirectoryTaxonomyWriter(taxoDir, IndexWriterConfig.OpenMode.CREATE);\n\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir);\n    FacetsConfig config = new FacetsConfig();\n\n    // Reused across documents, to add the necessary facet\n    // fields:\n    Document doc = new Document();\n    doc.add(new NumericDocValuesField(\"num\", 10));\n    doc.add(new FacetField(\"Author\", \"Bob\"));\n    writer.addDocument(config.build(taxoWriter, doc));\n\n    doc = new Document();\n    doc.add(new NumericDocValuesField(\"num\", 20));\n    doc.add(new FacetField(\"Author\", \"Lisa\"));\n    writer.addDocument(config.build(taxoWriter, doc));\n\n    doc = new Document();\n    doc.add(new NumericDocValuesField(\"num\", 30));\n    doc.add(new FacetField(\"Author\", \"Lisa\"));\n    writer.addDocument(config.build(taxoWriter, doc));\n\n    doc = new Document();\n    doc.add(new NumericDocValuesField(\"num\", 40));\n    doc.add(new FacetField(\"Author\", \"Susan\"));\n    writer.addDocument(config.build(taxoWriter, doc));\n\n    doc = new Document();\n    doc.add(new NumericDocValuesField(\"num\", 45));\n    doc.add(new FacetField(\"Author\", \"Frank\"));\n    writer.addDocument(config.build(taxoWriter, doc));\n\n    // NRT open\n    IndexSearcher searcher = newSearcher(writer.getReader());\n    writer.shutdown();\n\n    // NRT open\n    TaxonomyReader taxoReader = new DirectoryTaxonomyReader(taxoWriter);\n    taxoWriter.close();\n\n    // Aggregate the facet counts:\n    FacetsCollector c = new FacetsCollector();\n\n    // MatchAllDocsQuery is for \"browsing\" (counts facets\n    // for all non-deleted docs in the index); normally\n    // you'd use a \"normal\" query and one of the\n    // Facets.search utility methods:\n    searcher.search(new MatchAllDocsQuery(), c);\n\n    TaxonomyFacetSumValueSource facets = new TaxonomyFacetSumValueSource(taxoReader, new FacetsConfig(), c, new IntFieldSource(\"num\"));\n\n    // Retrieve & verify results:\n    assertEquals(\"dim=Author path=[] value=145.0 childCount=4\\n  Lisa (50.0)\\n  Frank (45.0)\\n  Susan (40.0)\\n  Bob (10.0)\\n\", facets.getTopChildren(10, \"Author\").toString());\n\n    taxoReader.close();\n    searcher.getIndexReader().close();\n    dir.close();\n    taxoDir.close();\n  }\n\n","sourceOld":"  public void testBasic() throws Exception {\n\n    Directory dir = newDirectory();\n    Directory taxoDir = newDirectory();\n\n    // Writes facet ords to a separate directory from the\n    // main index:\n    DirectoryTaxonomyWriter taxoWriter = new DirectoryTaxonomyWriter(taxoDir, IndexWriterConfig.OpenMode.CREATE);\n\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir);\n    FacetsConfig config = new FacetsConfig();\n\n    // Reused across documents, to add the necessary facet\n    // fields:\n    Document doc = new Document();\n    doc.add(new IntField(\"num\", 10, Field.Store.NO));\n    doc.add(new FacetField(\"Author\", \"Bob\"));\n    writer.addDocument(config.build(taxoWriter, doc));\n\n    doc = new Document();\n    doc.add(new IntField(\"num\", 20, Field.Store.NO));\n    doc.add(new FacetField(\"Author\", \"Lisa\"));\n    writer.addDocument(config.build(taxoWriter, doc));\n\n    doc = new Document();\n    doc.add(new IntField(\"num\", 30, Field.Store.NO));\n    doc.add(new FacetField(\"Author\", \"Lisa\"));\n    writer.addDocument(config.build(taxoWriter, doc));\n\n    doc = new Document();\n    doc.add(new IntField(\"num\", 40, Field.Store.NO));\n    doc.add(new FacetField(\"Author\", \"Susan\"));\n    writer.addDocument(config.build(taxoWriter, doc));\n\n    doc = new Document();\n    doc.add(new IntField(\"num\", 45, Field.Store.NO));\n    doc.add(new FacetField(\"Author\", \"Frank\"));\n    writer.addDocument(config.build(taxoWriter, doc));\n\n    // NRT open\n    IndexSearcher searcher = newSearcher(writer.getReader());\n    writer.shutdown();\n\n    // NRT open\n    TaxonomyReader taxoReader = new DirectoryTaxonomyReader(taxoWriter);\n    taxoWriter.close();\n\n    // Aggregate the facet counts:\n    FacetsCollector c = new FacetsCollector();\n\n    // MatchAllDocsQuery is for \"browsing\" (counts facets\n    // for all non-deleted docs in the index); normally\n    // you'd use a \"normal\" query and one of the\n    // Facets.search utility methods:\n    searcher.search(new MatchAllDocsQuery(), c);\n\n    TaxonomyFacetSumValueSource facets = new TaxonomyFacetSumValueSource(taxoReader, new FacetsConfig(), c, new IntFieldSource(\"num\"));\n\n    // Retrieve & verify results:\n    assertEquals(\"dim=Author path=[] value=145.0 childCount=4\\n  Lisa (50.0)\\n  Frank (45.0)\\n  Susan (40.0)\\n  Bob (10.0)\\n\", facets.getTopChildren(10, \"Author\").toString());\n\n    taxoReader.close();\n    searcher.getIndexReader().close();\n    dir.close();\n    taxoDir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d0ef034a4f10871667ae75181537775ddcf8ade4","date":1407610475,"type":3,"author":"Ryan Ernst","isMerge":false,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/taxonomy/TestTaxonomyFacetSumValueSource#testBasic().mjava","pathOld":"lucene/facet/src/test/org/apache/lucene/facet/taxonomy/TestTaxonomyFacetSumValueSource#testBasic().mjava","sourceNew":"  public void testBasic() throws Exception {\n\n    Directory dir = newDirectory();\n    Directory taxoDir = newDirectory();\n\n    // Writes facet ords to a separate directory from the\n    // main index:\n    DirectoryTaxonomyWriter taxoWriter = new DirectoryTaxonomyWriter(taxoDir, IndexWriterConfig.OpenMode.CREATE);\n\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir);\n    FacetsConfig config = new FacetsConfig();\n\n    // Reused across documents, to add the necessary facet\n    // fields:\n    Document doc = new Document();\n    doc.add(new NumericDocValuesField(\"num\", 10));\n    doc.add(new FacetField(\"Author\", \"Bob\"));\n    writer.addDocument(config.build(taxoWriter, doc));\n\n    doc = new Document();\n    doc.add(new NumericDocValuesField(\"num\", 20));\n    doc.add(new FacetField(\"Author\", \"Lisa\"));\n    writer.addDocument(config.build(taxoWriter, doc));\n\n    doc = new Document();\n    doc.add(new NumericDocValuesField(\"num\", 30));\n    doc.add(new FacetField(\"Author\", \"Lisa\"));\n    writer.addDocument(config.build(taxoWriter, doc));\n\n    doc = new Document();\n    doc.add(new NumericDocValuesField(\"num\", 40));\n    doc.add(new FacetField(\"Author\", \"Susan\"));\n    writer.addDocument(config.build(taxoWriter, doc));\n\n    doc = new Document();\n    doc.add(new NumericDocValuesField(\"num\", 45));\n    doc.add(new FacetField(\"Author\", \"Frank\"));\n    writer.addDocument(config.build(taxoWriter, doc));\n\n    // NRT open\n    IndexSearcher searcher = newSearcher(writer.getReader());\n    writer.close();\n\n    // NRT open\n    TaxonomyReader taxoReader = new DirectoryTaxonomyReader(taxoWriter);\n    taxoWriter.close();\n\n    // Aggregate the facet counts:\n    FacetsCollector c = new FacetsCollector();\n\n    // MatchAllDocsQuery is for \"browsing\" (counts facets\n    // for all non-deleted docs in the index); normally\n    // you'd use a \"normal\" query and one of the\n    // Facets.search utility methods:\n    searcher.search(new MatchAllDocsQuery(), c);\n\n    TaxonomyFacetSumValueSource facets = new TaxonomyFacetSumValueSource(taxoReader, new FacetsConfig(), c, new IntFieldSource(\"num\"));\n\n    // Retrieve & verify results:\n    assertEquals(\"dim=Author path=[] value=145.0 childCount=4\\n  Lisa (50.0)\\n  Frank (45.0)\\n  Susan (40.0)\\n  Bob (10.0)\\n\", facets.getTopChildren(10, \"Author\").toString());\n\n    taxoReader.close();\n    searcher.getIndexReader().close();\n    dir.close();\n    taxoDir.close();\n  }\n\n","sourceOld":"  public void testBasic() throws Exception {\n\n    Directory dir = newDirectory();\n    Directory taxoDir = newDirectory();\n\n    // Writes facet ords to a separate directory from the\n    // main index:\n    DirectoryTaxonomyWriter taxoWriter = new DirectoryTaxonomyWriter(taxoDir, IndexWriterConfig.OpenMode.CREATE);\n\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir);\n    FacetsConfig config = new FacetsConfig();\n\n    // Reused across documents, to add the necessary facet\n    // fields:\n    Document doc = new Document();\n    doc.add(new NumericDocValuesField(\"num\", 10));\n    doc.add(new FacetField(\"Author\", \"Bob\"));\n    writer.addDocument(config.build(taxoWriter, doc));\n\n    doc = new Document();\n    doc.add(new NumericDocValuesField(\"num\", 20));\n    doc.add(new FacetField(\"Author\", \"Lisa\"));\n    writer.addDocument(config.build(taxoWriter, doc));\n\n    doc = new Document();\n    doc.add(new NumericDocValuesField(\"num\", 30));\n    doc.add(new FacetField(\"Author\", \"Lisa\"));\n    writer.addDocument(config.build(taxoWriter, doc));\n\n    doc = new Document();\n    doc.add(new NumericDocValuesField(\"num\", 40));\n    doc.add(new FacetField(\"Author\", \"Susan\"));\n    writer.addDocument(config.build(taxoWriter, doc));\n\n    doc = new Document();\n    doc.add(new NumericDocValuesField(\"num\", 45));\n    doc.add(new FacetField(\"Author\", \"Frank\"));\n    writer.addDocument(config.build(taxoWriter, doc));\n\n    // NRT open\n    IndexSearcher searcher = newSearcher(writer.getReader());\n    writer.shutdown();\n\n    // NRT open\n    TaxonomyReader taxoReader = new DirectoryTaxonomyReader(taxoWriter);\n    taxoWriter.close();\n\n    // Aggregate the facet counts:\n    FacetsCollector c = new FacetsCollector();\n\n    // MatchAllDocsQuery is for \"browsing\" (counts facets\n    // for all non-deleted docs in the index); normally\n    // you'd use a \"normal\" query and one of the\n    // Facets.search utility methods:\n    searcher.search(new MatchAllDocsQuery(), c);\n\n    TaxonomyFacetSumValueSource facets = new TaxonomyFacetSumValueSource(taxoReader, new FacetsConfig(), c, new IntFieldSource(\"num\"));\n\n    // Retrieve & verify results:\n    assertEquals(\"dim=Author path=[] value=145.0 childCount=4\\n  Lisa (50.0)\\n  Frank (45.0)\\n  Susan (40.0)\\n  Bob (10.0)\\n\", facets.getTopChildren(10, \"Author\").toString());\n\n    taxoReader.close();\n    searcher.getIndexReader().close();\n    dir.close();\n    taxoDir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9190e1c8e3ef93e60501a940d72d4cab5c78ff33","date":1483794433,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/taxonomy/TestTaxonomyFacetSumValueSource#testBasic().mjava","pathOld":"lucene/facet/src/test/org/apache/lucene/facet/taxonomy/TestTaxonomyFacetSumValueSource#testBasic().mjava","sourceNew":"  public void testBasic() throws Exception {\n\n    Directory dir = newDirectory();\n    Directory taxoDir = newDirectory();\n\n    // Writes facet ords to a separate directory from the\n    // main index:\n    DirectoryTaxonomyWriter taxoWriter = new DirectoryTaxonomyWriter(taxoDir, IndexWriterConfig.OpenMode.CREATE);\n\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir);\n    FacetsConfig config = new FacetsConfig();\n\n    // Reused across documents, to add the necessary facet\n    // fields:\n    Document doc = new Document();\n    doc.add(new NumericDocValuesField(\"num\", 10));\n    doc.add(new FacetField(\"Author\", \"Bob\"));\n    writer.addDocument(config.build(taxoWriter, doc));\n\n    doc = new Document();\n    doc.add(new NumericDocValuesField(\"num\", 20));\n    doc.add(new FacetField(\"Author\", \"Lisa\"));\n    writer.addDocument(config.build(taxoWriter, doc));\n\n    doc = new Document();\n    doc.add(new NumericDocValuesField(\"num\", 30));\n    doc.add(new FacetField(\"Author\", \"Lisa\"));\n    writer.addDocument(config.build(taxoWriter, doc));\n\n    doc = new Document();\n    doc.add(new NumericDocValuesField(\"num\", 40));\n    doc.add(new FacetField(\"Author\", \"Susan\"));\n    writer.addDocument(config.build(taxoWriter, doc));\n\n    doc = new Document();\n    doc.add(new NumericDocValuesField(\"num\", 45));\n    doc.add(new FacetField(\"Author\", \"Frank\"));\n    writer.addDocument(config.build(taxoWriter, doc));\n\n    // NRT open\n    IndexSearcher searcher = newSearcher(writer.getReader());\n    writer.close();\n\n    // NRT open\n    TaxonomyReader taxoReader = new DirectoryTaxonomyReader(taxoWriter);\n    taxoWriter.close();\n\n    // Aggregate the facet counts:\n    FacetsCollector c = new FacetsCollector();\n\n    // MatchAllDocsQuery is for \"browsing\" (counts facets\n    // for all non-deleted docs in the index); normally\n    // you'd use a \"normal\" query and one of the\n    // Facets.search utility methods:\n    searcher.search(new MatchAllDocsQuery(), c);\n\n    TaxonomyFacetSumValueSource facets = new TaxonomyFacetSumValueSource(taxoReader, new FacetsConfig(), c, DoubleValuesSource.fromIntField(\"num\"));\n\n    // Retrieve & verify results:\n    assertEquals(\"dim=Author path=[] value=145.0 childCount=4\\n  Lisa (50.0)\\n  Frank (45.0)\\n  Susan (40.0)\\n  Bob (10.0)\\n\", facets.getTopChildren(10, \"Author\").toString());\n\n    taxoReader.close();\n    searcher.getIndexReader().close();\n    dir.close();\n    taxoDir.close();\n  }\n\n","sourceOld":"  public void testBasic() throws Exception {\n\n    Directory dir = newDirectory();\n    Directory taxoDir = newDirectory();\n\n    // Writes facet ords to a separate directory from the\n    // main index:\n    DirectoryTaxonomyWriter taxoWriter = new DirectoryTaxonomyWriter(taxoDir, IndexWriterConfig.OpenMode.CREATE);\n\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir);\n    FacetsConfig config = new FacetsConfig();\n\n    // Reused across documents, to add the necessary facet\n    // fields:\n    Document doc = new Document();\n    doc.add(new NumericDocValuesField(\"num\", 10));\n    doc.add(new FacetField(\"Author\", \"Bob\"));\n    writer.addDocument(config.build(taxoWriter, doc));\n\n    doc = new Document();\n    doc.add(new NumericDocValuesField(\"num\", 20));\n    doc.add(new FacetField(\"Author\", \"Lisa\"));\n    writer.addDocument(config.build(taxoWriter, doc));\n\n    doc = new Document();\n    doc.add(new NumericDocValuesField(\"num\", 30));\n    doc.add(new FacetField(\"Author\", \"Lisa\"));\n    writer.addDocument(config.build(taxoWriter, doc));\n\n    doc = new Document();\n    doc.add(new NumericDocValuesField(\"num\", 40));\n    doc.add(new FacetField(\"Author\", \"Susan\"));\n    writer.addDocument(config.build(taxoWriter, doc));\n\n    doc = new Document();\n    doc.add(new NumericDocValuesField(\"num\", 45));\n    doc.add(new FacetField(\"Author\", \"Frank\"));\n    writer.addDocument(config.build(taxoWriter, doc));\n\n    // NRT open\n    IndexSearcher searcher = newSearcher(writer.getReader());\n    writer.close();\n\n    // NRT open\n    TaxonomyReader taxoReader = new DirectoryTaxonomyReader(taxoWriter);\n    taxoWriter.close();\n\n    // Aggregate the facet counts:\n    FacetsCollector c = new FacetsCollector();\n\n    // MatchAllDocsQuery is for \"browsing\" (counts facets\n    // for all non-deleted docs in the index); normally\n    // you'd use a \"normal\" query and one of the\n    // Facets.search utility methods:\n    searcher.search(new MatchAllDocsQuery(), c);\n\n    TaxonomyFacetSumValueSource facets = new TaxonomyFacetSumValueSource(taxoReader, new FacetsConfig(), c, new IntFieldSource(\"num\"));\n\n    // Retrieve & verify results:\n    assertEquals(\"dim=Author path=[] value=145.0 childCount=4\\n  Lisa (50.0)\\n  Frank (45.0)\\n  Susan (40.0)\\n  Bob (10.0)\\n\", facets.getTopChildren(10, \"Author\").toString());\n\n    taxoReader.close();\n    searcher.getIndexReader().close();\n    dir.close();\n    taxoDir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"09ab8ee44ca898536770d0106a7c0ee4be4f0eb7","date":1484239864,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/taxonomy/TestTaxonomyFacetSumValueSource#testBasic().mjava","pathOld":"lucene/facet/src/test/org/apache/lucene/facet/taxonomy/TestTaxonomyFacetSumValueSource#testBasic().mjava","sourceNew":"  public void testBasic() throws Exception {\n\n    Directory dir = newDirectory();\n    Directory taxoDir = newDirectory();\n\n    // Writes facet ords to a separate directory from the\n    // main index:\n    DirectoryTaxonomyWriter taxoWriter = new DirectoryTaxonomyWriter(taxoDir, IndexWriterConfig.OpenMode.CREATE);\n\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir);\n    FacetsConfig config = new FacetsConfig();\n\n    // Reused across documents, to add the necessary facet\n    // fields:\n    Document doc = new Document();\n    doc.add(new NumericDocValuesField(\"num\", 10));\n    doc.add(new FacetField(\"Author\", \"Bob\"));\n    writer.addDocument(config.build(taxoWriter, doc));\n\n    doc = new Document();\n    doc.add(new NumericDocValuesField(\"num\", 20));\n    doc.add(new FacetField(\"Author\", \"Lisa\"));\n    writer.addDocument(config.build(taxoWriter, doc));\n\n    doc = new Document();\n    doc.add(new NumericDocValuesField(\"num\", 30));\n    doc.add(new FacetField(\"Author\", \"Lisa\"));\n    writer.addDocument(config.build(taxoWriter, doc));\n\n    doc = new Document();\n    doc.add(new NumericDocValuesField(\"num\", 40));\n    doc.add(new FacetField(\"Author\", \"Susan\"));\n    writer.addDocument(config.build(taxoWriter, doc));\n\n    doc = new Document();\n    doc.add(new NumericDocValuesField(\"num\", 45));\n    doc.add(new FacetField(\"Author\", \"Frank\"));\n    writer.addDocument(config.build(taxoWriter, doc));\n\n    // NRT open\n    IndexSearcher searcher = newSearcher(writer.getReader());\n    writer.close();\n\n    // NRT open\n    TaxonomyReader taxoReader = new DirectoryTaxonomyReader(taxoWriter);\n    taxoWriter.close();\n\n    // Aggregate the facet counts:\n    FacetsCollector c = new FacetsCollector();\n\n    // MatchAllDocsQuery is for \"browsing\" (counts facets\n    // for all non-deleted docs in the index); normally\n    // you'd use a \"normal\" query and one of the\n    // Facets.search utility methods:\n    searcher.search(new MatchAllDocsQuery(), c);\n\n    TaxonomyFacetSumValueSource facets = new TaxonomyFacetSumValueSource(taxoReader, new FacetsConfig(), c, DoubleValuesSource.fromIntField(\"num\"));\n\n    // Retrieve & verify results:\n    assertEquals(\"dim=Author path=[] value=145.0 childCount=4\\n  Lisa (50.0)\\n  Frank (45.0)\\n  Susan (40.0)\\n  Bob (10.0)\\n\", facets.getTopChildren(10, \"Author\").toString());\n\n    taxoReader.close();\n    searcher.getIndexReader().close();\n    dir.close();\n    taxoDir.close();\n  }\n\n","sourceOld":"  public void testBasic() throws Exception {\n\n    Directory dir = newDirectory();\n    Directory taxoDir = newDirectory();\n\n    // Writes facet ords to a separate directory from the\n    // main index:\n    DirectoryTaxonomyWriter taxoWriter = new DirectoryTaxonomyWriter(taxoDir, IndexWriterConfig.OpenMode.CREATE);\n\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir);\n    FacetsConfig config = new FacetsConfig();\n\n    // Reused across documents, to add the necessary facet\n    // fields:\n    Document doc = new Document();\n    doc.add(new NumericDocValuesField(\"num\", 10));\n    doc.add(new FacetField(\"Author\", \"Bob\"));\n    writer.addDocument(config.build(taxoWriter, doc));\n\n    doc = new Document();\n    doc.add(new NumericDocValuesField(\"num\", 20));\n    doc.add(new FacetField(\"Author\", \"Lisa\"));\n    writer.addDocument(config.build(taxoWriter, doc));\n\n    doc = new Document();\n    doc.add(new NumericDocValuesField(\"num\", 30));\n    doc.add(new FacetField(\"Author\", \"Lisa\"));\n    writer.addDocument(config.build(taxoWriter, doc));\n\n    doc = new Document();\n    doc.add(new NumericDocValuesField(\"num\", 40));\n    doc.add(new FacetField(\"Author\", \"Susan\"));\n    writer.addDocument(config.build(taxoWriter, doc));\n\n    doc = new Document();\n    doc.add(new NumericDocValuesField(\"num\", 45));\n    doc.add(new FacetField(\"Author\", \"Frank\"));\n    writer.addDocument(config.build(taxoWriter, doc));\n\n    // NRT open\n    IndexSearcher searcher = newSearcher(writer.getReader());\n    writer.close();\n\n    // NRT open\n    TaxonomyReader taxoReader = new DirectoryTaxonomyReader(taxoWriter);\n    taxoWriter.close();\n\n    // Aggregate the facet counts:\n    FacetsCollector c = new FacetsCollector();\n\n    // MatchAllDocsQuery is for \"browsing\" (counts facets\n    // for all non-deleted docs in the index); normally\n    // you'd use a \"normal\" query and one of the\n    // Facets.search utility methods:\n    searcher.search(new MatchAllDocsQuery(), c);\n\n    TaxonomyFacetSumValueSource facets = new TaxonomyFacetSumValueSource(taxoReader, new FacetsConfig(), c, new IntFieldSource(\"num\"));\n\n    // Retrieve & verify results:\n    assertEquals(\"dim=Author path=[] value=145.0 childCount=4\\n  Lisa (50.0)\\n  Frank (45.0)\\n  Susan (40.0)\\n  Bob (10.0)\\n\", facets.getTopChildren(10, \"Author\").toString());\n\n    taxoReader.close();\n    searcher.getIndexReader().close();\n    dir.close();\n    taxoDir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"93dd449115a9247533e44bab47e8429e5dccbc6d":["ae14298f4eec6d5faee6a149f88ba57d14a6f21a","b70a13d2b73512ad6b204e9ad8fe09ffeeda3c2c"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"d0ef034a4f10871667ae75181537775ddcf8ade4":["93dd449115a9247533e44bab47e8429e5dccbc6d"],"4edc984f0f4ac77c37e48ace2932f780f888453c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"b70a13d2b73512ad6b204e9ad8fe09ffeeda3c2c":["ae14298f4eec6d5faee6a149f88ba57d14a6f21a"],"ae14298f4eec6d5faee6a149f88ba57d14a6f21a":["3cc728b07df73b197e6d940d27f9b08b63918f13"],"3cc728b07df73b197e6d940d27f9b08b63918f13":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","4edc984f0f4ac77c37e48ace2932f780f888453c"],"09ab8ee44ca898536770d0106a7c0ee4be4f0eb7":["d0ef034a4f10871667ae75181537775ddcf8ade4","9190e1c8e3ef93e60501a940d72d4cab5c78ff33"],"9190e1c8e3ef93e60501a940d72d4cab5c78ff33":["d0ef034a4f10871667ae75181537775ddcf8ade4"],"56572ec06f1407c066d6b7399413178b33176cd8":["ae14298f4eec6d5faee6a149f88ba57d14a6f21a","93dd449115a9247533e44bab47e8429e5dccbc6d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9190e1c8e3ef93e60501a940d72d4cab5c78ff33"]},"commit2Childs":{"93dd449115a9247533e44bab47e8429e5dccbc6d":["d0ef034a4f10871667ae75181537775ddcf8ade4","56572ec06f1407c066d6b7399413178b33176cd8"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["4edc984f0f4ac77c37e48ace2932f780f888453c","3cc728b07df73b197e6d940d27f9b08b63918f13"],"d0ef034a4f10871667ae75181537775ddcf8ade4":["09ab8ee44ca898536770d0106a7c0ee4be4f0eb7","9190e1c8e3ef93e60501a940d72d4cab5c78ff33"],"4edc984f0f4ac77c37e48ace2932f780f888453c":["3cc728b07df73b197e6d940d27f9b08b63918f13"],"b70a13d2b73512ad6b204e9ad8fe09ffeeda3c2c":["93dd449115a9247533e44bab47e8429e5dccbc6d"],"ae14298f4eec6d5faee6a149f88ba57d14a6f21a":["93dd449115a9247533e44bab47e8429e5dccbc6d","b70a13d2b73512ad6b204e9ad8fe09ffeeda3c2c","56572ec06f1407c066d6b7399413178b33176cd8"],"3cc728b07df73b197e6d940d27f9b08b63918f13":["ae14298f4eec6d5faee6a149f88ba57d14a6f21a"],"09ab8ee44ca898536770d0106a7c0ee4be4f0eb7":[],"9190e1c8e3ef93e60501a940d72d4cab5c78ff33":["09ab8ee44ca898536770d0106a7c0ee4be4f0eb7","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"56572ec06f1407c066d6b7399413178b33176cd8":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["09ab8ee44ca898536770d0106a7c0ee4be4f0eb7","56572ec06f1407c066d6b7399413178b33176cd8","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}