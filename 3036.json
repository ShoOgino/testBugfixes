{"path":"lucene/core/src/java/org/apache/lucene/codecs/lucene70/IndexedDISICacheFactory.VaryingBPVJumpTable#getBlockOffset(long).mjava","commits":[{"id":"02d47321ea7c7780a0e0cb7a3676d109d9d62542","date":1543843794,"type":0,"author":"Toke Eskildsen","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/lucene70/IndexedDISICacheFactory.VaryingBPVJumpTable#getBlockOffset(long).mjava","pathOld":"/dev/null","sourceNew":"    /**\n     * @param block the logical block in the vBPV structure ( valueindex/16384 ).\n     * @return the index slice offset for the vBPV block (1 block = 16384 values) or -1 if not available.\n     */\n    long getBlockOffset(long block) {\n      // Technically a limitation in caching vs. VaryingBPVReader to limit to 2b blocks of 16K values\n      return offsets[(int) block];\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e86b9927b3acb1937be9daf7b71fe0733edc2206","date":1544534047,"type":4,"author":"Toke Eskildsen","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/lucene70/IndexedDISICacheFactory.VaryingBPVJumpTable#getBlockOffset(long).mjava","sourceNew":null,"sourceOld":"    /**\n     * @param block the logical block in the vBPV structure ( valueindex/16384 ).\n     * @return the index slice offset for the vBPV block (1 block = 16384 values) or -1 if not available.\n     */\n    long getBlockOffset(long block) {\n      // Technically a limitation in caching vs. VaryingBPVReader to limit to 2b blocks of 16K values\n      return offsets[(int) block];\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"cfd70c9571310639a77f0123aea0db41077d9bb6","date":1544538617,"type":4,"author":"Karl Wright","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/lucene70/IndexedDISICacheFactory.VaryingBPVJumpTable#getBlockOffset(long).mjava","sourceNew":null,"sourceOld":"    /**\n     * @param block the logical block in the vBPV structure ( valueindex/16384 ).\n     * @return the index slice offset for the vBPV block (1 block = 16384 values) or -1 if not available.\n     */\n    long getBlockOffset(long block) {\n      // Technically a limitation in caching vs. VaryingBPVReader to limit to 2b blocks of 16K values\n      return offsets[(int) block];\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"cfd70c9571310639a77f0123aea0db41077d9bb6":["02d47321ea7c7780a0e0cb7a3676d109d9d62542","e86b9927b3acb1937be9daf7b71fe0733edc2206"],"02d47321ea7c7780a0e0cb7a3676d109d9d62542":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["cfd70c9571310639a77f0123aea0db41077d9bb6"],"e86b9927b3acb1937be9daf7b71fe0733edc2206":["02d47321ea7c7780a0e0cb7a3676d109d9d62542"]},"commit2Childs":{"cfd70c9571310639a77f0123aea0db41077d9bb6":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"02d47321ea7c7780a0e0cb7a3676d109d9d62542":["cfd70c9571310639a77f0123aea0db41077d9bb6","e86b9927b3acb1937be9daf7b71fe0733edc2206"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["02d47321ea7c7780a0e0cb7a3676d109d9d62542"],"e86b9927b3acb1937be9daf7b71fe0733edc2206":["cfd70c9571310639a77f0123aea0db41077d9bb6"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}