{"path":"lucene/core/src/java/org/apache/lucene/index/ReadersAndLiveDocs#verifyDocCounts().mjava","commits":[{"id":"ae695f21c50b03702b5d0fa2543d5af844bb7cd3","date":1331554994,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/ReadersAndLiveDocs#verifyDocCounts().mjava","pathOld":"/dev/null","sourceNew":"  // Call only from assert!\n  public synchronized boolean verifyDocCounts() {\n    int count;\n    if (liveDocs != null) {\n      count = 0;\n      for(int docID=0;docID<info.docCount;docID++) {\n        if (liveDocs.get(docID)) {\n          count++;\n        }\n      }\n    } else {\n      count = info.docCount;\n    }\n\n    assert info.docCount - info.getDelCount() - pendingDeleteCount == count: \"info.docCount=\" + info.docCount + \" info.getDelCount()=\" + info.getDelCount() + \" pendingDeleteCount=\" + pendingDeleteCount + \" count=\" + count;;\n    return true;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"38e3b736c7ca086d61b7dbb841c905ee115490da","date":1331657018,"type":0,"author":"Ryan McKinley","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/ReadersAndLiveDocs#verifyDocCounts().mjava","pathOld":"/dev/null","sourceNew":"  // Call only from assert!\n  public synchronized boolean verifyDocCounts() {\n    int count;\n    if (liveDocs != null) {\n      count = 0;\n      for(int docID=0;docID<info.docCount;docID++) {\n        if (liveDocs.get(docID)) {\n          count++;\n        }\n      }\n    } else {\n      count = info.docCount;\n    }\n\n    assert info.docCount - info.getDelCount() - pendingDeleteCount == count: \"info.docCount=\" + info.docCount + \" info.getDelCount()=\" + info.getDelCount() + \" pendingDeleteCount=\" + pendingDeleteCount + \" count=\" + count;;\n    return true;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9d153abcf92dc5329d98571a8c3035df9bd80648","date":1337702630,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/ReadersAndLiveDocs#verifyDocCounts().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/ReadersAndLiveDocs#verifyDocCounts().mjava","sourceNew":"  // Call only from assert!\n  public synchronized boolean verifyDocCounts() {\n    int count;\n    if (liveDocs != null) {\n      count = 0;\n      for(int docID=0;docID<info.info.docCount;docID++) {\n        if (liveDocs.get(docID)) {\n          count++;\n        }\n      }\n    } else {\n      count = info.info.docCount;\n    }\n\n    assert info.info.docCount - info.getDelCount() - pendingDeleteCount == count: \"info.docCount=\" + info.info.docCount + \" info.getDelCount()=\" + info.getDelCount() + \" pendingDeleteCount=\" + pendingDeleteCount + \" count=\" + count;\n    return true;\n  }\n\n","sourceOld":"  // Call only from assert!\n  public synchronized boolean verifyDocCounts() {\n    int count;\n    if (liveDocs != null) {\n      count = 0;\n      for(int docID=0;docID<info.docCount;docID++) {\n        if (liveDocs.get(docID)) {\n          count++;\n        }\n      }\n    } else {\n      count = info.docCount;\n    }\n\n    assert info.docCount - info.getDelCount() - pendingDeleteCount == count: \"info.docCount=\" + info.docCount + \" info.getDelCount()=\" + info.getDelCount() + \" pendingDeleteCount=\" + pendingDeleteCount + \" count=\" + count;;\n    return true;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"203d7d3cb7712e10ef33009a63247ae40c302d7a","date":1337798111,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/ReadersAndLiveDocs#verifyDocCounts().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/ReadersAndLiveDocs#verifyDocCounts().mjava","sourceNew":"  // Call only from assert!\n  public synchronized boolean verifyDocCounts() {\n    int count;\n    if (liveDocs != null) {\n      count = 0;\n      for(int docID=0;docID<info.info.getDocCount();docID++) {\n        if (liveDocs.get(docID)) {\n          count++;\n        }\n      }\n    } else {\n      count = info.info.getDocCount();\n    }\n\n    assert info.info.getDocCount() - info.getDelCount() - pendingDeleteCount == count: \"info.docCount=\" + info.info.getDocCount() + \" info.getDelCount()=\" + info.getDelCount() + \" pendingDeleteCount=\" + pendingDeleteCount + \" count=\" + count;\n    return true;\n  }\n\n","sourceOld":"  // Call only from assert!\n  public synchronized boolean verifyDocCounts() {\n    int count;\n    if (liveDocs != null) {\n      count = 0;\n      for(int docID=0;docID<info.info.docCount;docID++) {\n        if (liveDocs.get(docID)) {\n          count++;\n        }\n      }\n    } else {\n      count = info.info.docCount;\n    }\n\n    assert info.info.docCount - info.getDelCount() - pendingDeleteCount == count: \"info.docCount=\" + info.info.docCount + \" info.getDelCount()=\" + info.getDelCount() + \" pendingDeleteCount=\" + pendingDeleteCount + \" count=\" + count;\n    return true;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"615ddbd81799980d0fdd95e0238e1c498b6f47b0","date":1338233290,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/ReadersAndLiveDocs#verifyDocCounts().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/ReadersAndLiveDocs#verifyDocCounts().mjava","sourceNew":"  // Call only from assert!\n  public synchronized boolean verifyDocCounts() {\n    int count;\n    if (liveDocs != null) {\n      count = 0;\n      for(int docID=0;docID<info.info.getDocCount();docID++) {\n        if (liveDocs.get(docID)) {\n          count++;\n        }\n      }\n    } else {\n      count = info.info.getDocCount();\n    }\n\n    assert info.info.getDocCount() - info.getDelCount() - pendingDeleteCount == count: \"info.docCount=\" + info.info.getDocCount() + \" info.getDelCount()=\" + info.getDelCount() + \" pendingDeleteCount=\" + pendingDeleteCount + \" count=\" + count;\n    return true;\n  }\n\n","sourceOld":"  // Call only from assert!\n  public synchronized boolean verifyDocCounts() {\n    int count;\n    if (liveDocs != null) {\n      count = 0;\n      for(int docID=0;docID<info.docCount;docID++) {\n        if (liveDocs.get(docID)) {\n          count++;\n        }\n      }\n    } else {\n      count = info.docCount;\n    }\n\n    assert info.docCount - info.getDelCount() - pendingDeleteCount == count: \"info.docCount=\" + info.docCount + \" info.getDelCount()=\" + info.getDelCount() + \" pendingDeleteCount=\" + pendingDeleteCount + \" count=\" + count;;\n    return true;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"73b0a97ef3bd519a5e43398ea9eabe6eed97f6b0","date":1383367127,"type":5,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/ReadersAndUpdates#verifyDocCounts().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/ReadersAndLiveDocs#verifyDocCounts().mjava","sourceNew":"  // Call only from assert!\n  public synchronized boolean verifyDocCounts() {\n    int count;\n    if (liveDocs != null) {\n      count = 0;\n      for(int docID=0;docID<info.info.getDocCount();docID++) {\n        if (liveDocs.get(docID)) {\n          count++;\n        }\n      }\n    } else {\n      count = info.info.getDocCount();\n    }\n\n    assert info.info.getDocCount() - info.getDelCount() - pendingDeleteCount == count: \"info.docCount=\" + info.info.getDocCount() + \" info.getDelCount()=\" + info.getDelCount() + \" pendingDeleteCount=\" + pendingDeleteCount + \" count=\" + count;\n    return true;\n  }\n\n","sourceOld":"  // Call only from assert!\n  public synchronized boolean verifyDocCounts() {\n    int count;\n    if (liveDocs != null) {\n      count = 0;\n      for(int docID=0;docID<info.info.getDocCount();docID++) {\n        if (liveDocs.get(docID)) {\n          count++;\n        }\n      }\n    } else {\n      count = info.info.getDocCount();\n    }\n\n    assert info.info.getDocCount() - info.getDelCount() - pendingDeleteCount == count: \"info.docCount=\" + info.info.getDocCount() + \" info.getDelCount()=\" + info.getDelCount() + \" pendingDeleteCount=\" + pendingDeleteCount + \" count=\" + count;\n    return true;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"38e3b736c7ca086d61b7dbb841c905ee115490da":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","ae695f21c50b03702b5d0fa2543d5af844bb7cd3"],"73b0a97ef3bd519a5e43398ea9eabe6eed97f6b0":["615ddbd81799980d0fdd95e0238e1c498b6f47b0"],"615ddbd81799980d0fdd95e0238e1c498b6f47b0":["ae695f21c50b03702b5d0fa2543d5af844bb7cd3","203d7d3cb7712e10ef33009a63247ae40c302d7a"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"9d153abcf92dc5329d98571a8c3035df9bd80648":["ae695f21c50b03702b5d0fa2543d5af844bb7cd3"],"ae695f21c50b03702b5d0fa2543d5af844bb7cd3":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"203d7d3cb7712e10ef33009a63247ae40c302d7a":["9d153abcf92dc5329d98571a8c3035df9bd80648"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["73b0a97ef3bd519a5e43398ea9eabe6eed97f6b0"]},"commit2Childs":{"38e3b736c7ca086d61b7dbb841c905ee115490da":[],"73b0a97ef3bd519a5e43398ea9eabe6eed97f6b0":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"615ddbd81799980d0fdd95e0238e1c498b6f47b0":["73b0a97ef3bd519a5e43398ea9eabe6eed97f6b0"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["38e3b736c7ca086d61b7dbb841c905ee115490da","ae695f21c50b03702b5d0fa2543d5af844bb7cd3"],"9d153abcf92dc5329d98571a8c3035df9bd80648":["203d7d3cb7712e10ef33009a63247ae40c302d7a"],"ae695f21c50b03702b5d0fa2543d5af844bb7cd3":["38e3b736c7ca086d61b7dbb841c905ee115490da","615ddbd81799980d0fdd95e0238e1c498b6f47b0","9d153abcf92dc5329d98571a8c3035df9bd80648"],"203d7d3cb7712e10ef33009a63247ae40c302d7a":["615ddbd81799980d0fdd95e0238e1c498b6f47b0"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["38e3b736c7ca086d61b7dbb841c905ee115490da","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}