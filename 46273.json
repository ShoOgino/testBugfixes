{"path":"solr/solrj/src/java/org/apache/solr/client/solrj/io/ParallelStream#read().mjava","commits":[{"id":"91814ce09be68efd0626969632e79ae47d8876d4","date":1425951537,"type":0,"author":"Joel Bernstein","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/io/ParallelStream#read().mjava","pathOld":"/dev/null","sourceNew":"  public Tuple read() throws IOException {\n    Tuple tuple = _read();\n\n    if(tuple.EOF) {\n      List<MetricStream> metricStreams = new ArrayList();\n      getMetricStreams(this, metricStreams);\n      this.merge(metricStreams);\n      Map m = new HashMap();\n      m.put(\"EOF\", true);\n      return new Tuple(m);\n    }\n\n    return tuple;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"42f03b407cd85abd6edd2a1fe7cab9990164aa4b","date":1427303865,"type":3,"author":"Joel Bernstein","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/io/ParallelStream#read().mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/io/ParallelStream#read().mjava","sourceNew":"  public Tuple read() throws IOException {\n    Tuple tuple = _read();\n\n    if(tuple.EOF) {\n      Map m = new HashMap();\n      m.put(\"EOF\", true);\n      return new Tuple(m);\n    }\n\n    return tuple;\n  }\n\n","sourceOld":"  public Tuple read() throws IOException {\n    Tuple tuple = _read();\n\n    if(tuple.EOF) {\n      List<MetricStream> metricStreams = new ArrayList();\n      getMetricStreams(this, metricStreams);\n      this.merge(metricStreams);\n      Map m = new HashMap();\n      m.put(\"EOF\", true);\n      return new Tuple(m);\n    }\n\n    return tuple;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7f0d49510f92f461cc46c6d2ac80a6fff7e43e52","date":1427741807,"type":3,"author":"Joel Bernstein","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/io/ParallelStream#read().mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/io/ParallelStream#read().mjava","sourceNew":"  public Tuple read() throws IOException {\n    Tuple tuple = _read();\n\n    if(tuple.EOF) {\n      Map m = new HashMap();\n      m.put(\"EOF\", true);\n      Tuple t = new Tuple(m);\n      t.setMetrics(this.eofTuples);\n      return t;\n    }\n\n    return tuple;\n  }\n\n","sourceOld":"  public Tuple read() throws IOException {\n    Tuple tuple = _read();\n\n    if(tuple.EOF) {\n      Map m = new HashMap();\n      m.put(\"EOF\", true);\n      return new Tuple(m);\n    }\n\n    return tuple;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","date":1427779360,"type":0,"author":"Ryan Ernst","isMerge":true,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/io/ParallelStream#read().mjava","pathOld":"/dev/null","sourceNew":"  public Tuple read() throws IOException {\n    Tuple tuple = _read();\n\n    if(tuple.EOF) {\n      Map m = new HashMap();\n      m.put(\"EOF\", true);\n      Tuple t = new Tuple(m);\n      t.setMetrics(this.eofTuples);\n      return t;\n    }\n\n    return tuple;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f00f1c5fad501b66705121feb623f8cfbb6712f9","date":1431347838,"type":5,"author":"Joel Bernstein","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/io/stream/ParallelStream#read().mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/io/ParallelStream#read().mjava","sourceNew":"  public Tuple read() throws IOException {\n    Tuple tuple = _read();\n\n    if(tuple.EOF) {\n      Map m = new HashMap();\n      m.put(\"EOF\", true);\n      Tuple t = new Tuple(m);\n\n      Map<String, Map> metrics = new HashMap();\n      Iterator<Entry<String,Tuple>> it = this.eofTuples.entrySet().iterator();\n      while(it.hasNext()) {\n        Map.Entry<String, Tuple> entry = it.next();\n        metrics.put(entry.getKey(), entry.getValue().fields);\n      }\n\n      t.setMetrics(metrics);\n      return t;\n    }\n\n    return tuple;\n  }\n\n","sourceOld":"  public Tuple read() throws IOException {\n    Tuple tuple = _read();\n\n    if(tuple.EOF) {\n      Map m = new HashMap();\n      m.put(\"EOF\", true);\n      Tuple t = new Tuple(m);\n      t.setMetrics(this.eofTuples);\n      return t;\n    }\n\n    return tuple;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"f00f1c5fad501b66705121feb623f8cfbb6712f9":["7f0d49510f92f461cc46c6d2ac80a6fff7e43e52"],"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","7f0d49510f92f461cc46c6d2ac80a6fff7e43e52"],"42f03b407cd85abd6edd2a1fe7cab9990164aa4b":["91814ce09be68efd0626969632e79ae47d8876d4"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"91814ce09be68efd0626969632e79ae47d8876d4":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["f00f1c5fad501b66705121feb623f8cfbb6712f9"],"7f0d49510f92f461cc46c6d2ac80a6fff7e43e52":["42f03b407cd85abd6edd2a1fe7cab9990164aa4b"]},"commit2Childs":{"f00f1c5fad501b66705121feb623f8cfbb6712f9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":[],"42f03b407cd85abd6edd2a1fe7cab9990164aa4b":["7f0d49510f92f461cc46c6d2ac80a6fff7e43e52"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","91814ce09be68efd0626969632e79ae47d8876d4"],"91814ce09be68efd0626969632e79ae47d8876d4":["42f03b407cd85abd6edd2a1fe7cab9990164aa4b"],"7f0d49510f92f461cc46c6d2ac80a6fff7e43e52":["f00f1c5fad501b66705121feb623f8cfbb6712f9","a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}