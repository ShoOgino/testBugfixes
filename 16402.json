{"path":"lucene/core/src/java/org/apache/lucene/codecs/lucene41/Lucene41SkipWriter#initSkip().mjava","commits":[{"id":"3f8e9abba2d7f518e6f4f2eac3c8c96b2a312676","date":1398736164,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/lucene41/Lucene41SkipWriter#initSkip().mjava","pathOld":"/dev/null","sourceNew":"  public void initSkip() {\n    if (!initialized) {\n      super.resetSkip();\n      Arrays.fill(lastSkipDoc, 0);\n      Arrays.fill(lastSkipDocPointer, lastDocFP);\n      if (fieldHasPositions) {\n        Arrays.fill(lastSkipPosPointer, lastPosFP);\n        if (fieldHasPayloads) {\n          Arrays.fill(lastPayloadByteUpto, 0);\n        }\n        if (fieldHasOffsets || fieldHasPayloads) {\n          Arrays.fill(lastSkipPayPointer, lastPayFP);\n        }\n      }\n      initialized = true;\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3394716f52b34ab259ad5247e7595d9f9db6e935","date":1398791921,"type":0,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/lucene41/Lucene41SkipWriter#initSkip().mjava","pathOld":"/dev/null","sourceNew":"  public void initSkip() {\n    if (!initialized) {\n      super.resetSkip();\n      Arrays.fill(lastSkipDoc, 0);\n      Arrays.fill(lastSkipDocPointer, lastDocFP);\n      if (fieldHasPositions) {\n        Arrays.fill(lastSkipPosPointer, lastPosFP);\n        if (fieldHasPayloads) {\n          Arrays.fill(lastPayloadByteUpto, 0);\n        }\n        if (fieldHasOffsets || fieldHasPayloads) {\n          Arrays.fill(lastSkipPayPointer, lastPayFP);\n        }\n      }\n      initialized = true;\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c0cd85fde84cb318b4dc97710dcf15e2959a1bbe","date":1398844771,"type":0,"author":"Dawid Weiss","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/lucene41/Lucene41SkipWriter#initSkip().mjava","pathOld":"/dev/null","sourceNew":"  public void initSkip() {\n    if (!initialized) {\n      super.resetSkip();\n      Arrays.fill(lastSkipDoc, 0);\n      Arrays.fill(lastSkipDocPointer, lastDocFP);\n      if (fieldHasPositions) {\n        Arrays.fill(lastSkipPosPointer, lastPosFP);\n        if (fieldHasPayloads) {\n          Arrays.fill(lastPayloadByteUpto, 0);\n        }\n        if (fieldHasOffsets || fieldHasPayloads) {\n          Arrays.fill(lastSkipPayPointer, lastPayFP);\n        }\n      }\n      initialized = true;\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"99eb4a732d1a908f4636ace52928876136bf1896","date":1413829552,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/backward-codecs/src/test/org/apache/lucene/codecs/lucene41/Lucene41SkipWriter#initSkip().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/lucene41/Lucene41SkipWriter#initSkip().mjava","sourceNew":"  public void initSkip() {\n    if (!initialized) {\n      super.resetSkip();\n      Arrays.fill(lastSkipDoc, 0);\n      Arrays.fill(lastSkipDocPointer, lastDocFP);\n      if (fieldHasPositions) {\n        Arrays.fill(lastSkipPosPointer, lastPosFP);\n        if (fieldHasPayloads) {\n          Arrays.fill(lastPayloadByteUpto, 0);\n        }\n        if (fieldHasOffsets || fieldHasPayloads) {\n          Arrays.fill(lastSkipPayPointer, lastPayFP);\n        }\n      }\n      initialized = true;\n    }\n  }\n\n","sourceOld":"  public void initSkip() {\n    if (!initialized) {\n      super.resetSkip();\n      Arrays.fill(lastSkipDoc, 0);\n      Arrays.fill(lastSkipDocPointer, lastDocFP);\n      if (fieldHasPositions) {\n        Arrays.fill(lastSkipPosPointer, lastPosFP);\n        if (fieldHasPayloads) {\n          Arrays.fill(lastPayloadByteUpto, 0);\n        }\n        if (fieldHasOffsets || fieldHasPayloads) {\n          Arrays.fill(lastSkipPayPointer, lastPayFP);\n        }\n      }\n      initialized = true;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"99eb4a732d1a908f4636ace52928876136bf1896","date":1413829552,"type":6,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/lucene50/Lucene50SkipWriter#initSkip().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/lucene41/Lucene41SkipWriter#initSkip().mjava","sourceNew":"  public void initSkip() {\n    if (!initialized) {\n      super.resetSkip();\n      Arrays.fill(lastSkipDoc, 0);\n      Arrays.fill(lastSkipDocPointer, lastDocFP);\n      if (fieldHasPositions) {\n        Arrays.fill(lastSkipPosPointer, lastPosFP);\n        if (fieldHasPayloads) {\n          Arrays.fill(lastPayloadByteUpto, 0);\n        }\n        if (fieldHasOffsets || fieldHasPayloads) {\n          Arrays.fill(lastSkipPayPointer, lastPayFP);\n        }\n      }\n      initialized = true;\n    }\n  }\n\n","sourceOld":"  public void initSkip() {\n    if (!initialized) {\n      super.resetSkip();\n      Arrays.fill(lastSkipDoc, 0);\n      Arrays.fill(lastSkipDocPointer, lastDocFP);\n      if (fieldHasPositions) {\n        Arrays.fill(lastSkipPosPointer, lastPosFP);\n        if (fieldHasPayloads) {\n          Arrays.fill(lastPayloadByteUpto, 0);\n        }\n        if (fieldHasOffsets || fieldHasPayloads) {\n          Arrays.fill(lastSkipPayPointer, lastPayFP);\n        }\n      }\n      initialized = true;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"db68c63cbfaa8698b9c4475f75ed2b9c9696d238","date":1414118621,"type":5,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/backward-codecs/src/test/org/apache/lucene/codecs/lucene41/Lucene41SkipWriter#initSkip().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/lucene41/Lucene41SkipWriter#initSkip().mjava","sourceNew":"  public void initSkip() {\n    if (!initialized) {\n      super.resetSkip();\n      Arrays.fill(lastSkipDoc, 0);\n      Arrays.fill(lastSkipDocPointer, lastDocFP);\n      if (fieldHasPositions) {\n        Arrays.fill(lastSkipPosPointer, lastPosFP);\n        if (fieldHasPayloads) {\n          Arrays.fill(lastPayloadByteUpto, 0);\n        }\n        if (fieldHasOffsets || fieldHasPayloads) {\n          Arrays.fill(lastSkipPayPointer, lastPayFP);\n        }\n      }\n      initialized = true;\n    }\n  }\n\n","sourceOld":"  public void initSkip() {\n    if (!initialized) {\n      super.resetSkip();\n      Arrays.fill(lastSkipDoc, 0);\n      Arrays.fill(lastSkipDocPointer, lastDocFP);\n      if (fieldHasPositions) {\n        Arrays.fill(lastSkipPosPointer, lastPosFP);\n        if (fieldHasPayloads) {\n          Arrays.fill(lastPayloadByteUpto, 0);\n        }\n        if (fieldHasOffsets || fieldHasPayloads) {\n          Arrays.fill(lastSkipPayPointer, lastPayFP);\n        }\n      }\n      initialized = true;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"db68c63cbfaa8698b9c4475f75ed2b9c9696d238","date":1414118621,"type":6,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/lucene50/Lucene50SkipWriter#initSkip().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/lucene41/Lucene41SkipWriter#initSkip().mjava","sourceNew":"  public void initSkip() {\n    if (!initialized) {\n      super.resetSkip();\n      Arrays.fill(lastSkipDoc, 0);\n      Arrays.fill(lastSkipDocPointer, lastDocFP);\n      if (fieldHasPositions) {\n        Arrays.fill(lastSkipPosPointer, lastPosFP);\n        if (fieldHasPayloads) {\n          Arrays.fill(lastPayloadByteUpto, 0);\n        }\n        if (fieldHasOffsets || fieldHasPayloads) {\n          Arrays.fill(lastSkipPayPointer, lastPayFP);\n        }\n      }\n      initialized = true;\n    }\n  }\n\n","sourceOld":"  public void initSkip() {\n    if (!initialized) {\n      super.resetSkip();\n      Arrays.fill(lastSkipDoc, 0);\n      Arrays.fill(lastSkipDocPointer, lastDocFP);\n      if (fieldHasPositions) {\n        Arrays.fill(lastSkipPosPointer, lastPosFP);\n        if (fieldHasPayloads) {\n          Arrays.fill(lastPayloadByteUpto, 0);\n        }\n        if (fieldHasOffsets || fieldHasPayloads) {\n          Arrays.fill(lastSkipPayPointer, lastPayFP);\n        }\n      }\n      initialized = true;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3394716f52b34ab259ad5247e7595d9f9db6e935":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","3f8e9abba2d7f518e6f4f2eac3c8c96b2a312676"],"99eb4a732d1a908f4636ace52928876136bf1896":["3394716f52b34ab259ad5247e7595d9f9db6e935"],"c0cd85fde84cb318b4dc97710dcf15e2959a1bbe":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","3394716f52b34ab259ad5247e7595d9f9db6e935"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"db68c63cbfaa8698b9c4475f75ed2b9c9696d238":["3394716f52b34ab259ad5247e7595d9f9db6e935","99eb4a732d1a908f4636ace52928876136bf1896"],"3f8e9abba2d7f518e6f4f2eac3c8c96b2a312676":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["db68c63cbfaa8698b9c4475f75ed2b9c9696d238"]},"commit2Childs":{"3394716f52b34ab259ad5247e7595d9f9db6e935":["99eb4a732d1a908f4636ace52928876136bf1896","c0cd85fde84cb318b4dc97710dcf15e2959a1bbe","db68c63cbfaa8698b9c4475f75ed2b9c9696d238"],"99eb4a732d1a908f4636ace52928876136bf1896":["db68c63cbfaa8698b9c4475f75ed2b9c9696d238"],"c0cd85fde84cb318b4dc97710dcf15e2959a1bbe":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3394716f52b34ab259ad5247e7595d9f9db6e935","c0cd85fde84cb318b4dc97710dcf15e2959a1bbe","3f8e9abba2d7f518e6f4f2eac3c8c96b2a312676"],"db68c63cbfaa8698b9c4475f75ed2b9c9696d238":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3f8e9abba2d7f518e6f4f2eac3c8c96b2a312676":["3394716f52b34ab259ad5247e7595d9f9db6e935"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["c0cd85fde84cb318b4dc97710dcf15e2959a1bbe","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}