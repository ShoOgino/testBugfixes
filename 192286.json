{"path":"src/java/org/apache/solr/schema/TrieDateField#init(IndexSchema,Map[String,String]).mjava","commits":[{"id":"3347d3d5a70258acf267e3fd9e66fb5afbac7635","date":1249337603,"type":0,"author":"Yonik Seeley","isMerge":false,"pathNew":"src/java/org/apache/solr/schema/TrieDateField#init(IndexSchema,Map[String,String]).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  protected void init(IndexSchema schema, Map<String, String> args) {\n    String p = args.remove(\"precisionStep\");\n    if (p != null) {\n       precisionStepArg = Integer.parseInt(p);\n    }\n    // normalize the precisionStep\n    precisionStep = precisionStepArg;\n    if (precisionStep<=0 || precisionStep>=64) precisionStep=Integer.MAX_VALUE;\n\n    CharFilterFactory[] filterFactories = new CharFilterFactory[0];\n    TokenFilterFactory[] tokenFilterFactories = new TokenFilterFactory[0];\n    analyzer = new TokenizerChain(filterFactories, new TrieTokenizerFactory(TrieField.TrieTypes.DATE, precisionStep), tokenFilterFactories);\n    // for query time we only need one token, so we use the biggest possible precisionStep:\n    queryAnalyzer = new TokenizerChain(filterFactories, new TrieTokenizerFactory(TrieField.TrieTypes.DATE, Integer.MAX_VALUE), tokenFilterFactories);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ad94625fb8d088209f46650c8097196fec67f00c","date":1453508319,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/src/java/org/apache/solr/schema/TrieDateField#init(IndexSchema,Map[String,String]).mjava","pathOld":"src/java/org/apache/solr/schema/TrieDateField#init(IndexSchema,Map[String,String]).mjava","sourceNew":"  @Override\n  protected void init(IndexSchema schema, Map<String, String> args) {\n    String p = args.remove(\"precisionStep\");\n    if (p != null) {\n       precisionStepArg = Integer.parseInt(p);\n    }\n    // normalize the precisionStep\n    precisionStep = precisionStepArg;\n    if (precisionStep<=0 || precisionStep>=64) precisionStep=Integer.MAX_VALUE;\n\n    CharFilterFactory[] filterFactories = new CharFilterFactory[0];\n    TokenFilterFactory[] tokenFilterFactories = new TokenFilterFactory[0];\n    analyzer = new TokenizerChain(filterFactories, new TrieTokenizerFactory(TrieField.TrieTypes.DATE, precisionStep), tokenFilterFactories);\n    // for query time we only need one token, so we use the biggest possible precisionStep:\n    queryAnalyzer = new TokenizerChain(filterFactories, new TrieTokenizerFactory(TrieField.TrieTypes.DATE, Integer.MAX_VALUE), tokenFilterFactories);\n  }\n\n","sourceOld":"  @Override\n  protected void init(IndexSchema schema, Map<String, String> args) {\n    String p = args.remove(\"precisionStep\");\n    if (p != null) {\n       precisionStepArg = Integer.parseInt(p);\n    }\n    // normalize the precisionStep\n    precisionStep = precisionStepArg;\n    if (precisionStep<=0 || precisionStep>=64) precisionStep=Integer.MAX_VALUE;\n\n    CharFilterFactory[] filterFactories = new CharFilterFactory[0];\n    TokenFilterFactory[] tokenFilterFactories = new TokenFilterFactory[0];\n    analyzer = new TokenizerChain(filterFactories, new TrieTokenizerFactory(TrieField.TrieTypes.DATE, precisionStep), tokenFilterFactories);\n    // for query time we only need one token, so we use the biggest possible precisionStep:\n    queryAnalyzer = new TokenizerChain(filterFactories, new TrieTokenizerFactory(TrieField.TrieTypes.DATE, Integer.MAX_VALUE), tokenFilterFactories);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"ad94625fb8d088209f46650c8097196fec67f00c":["3347d3d5a70258acf267e3fd9e66fb5afbac7635"],"3347d3d5a70258acf267e3fd9e66fb5afbac7635":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["3347d3d5a70258acf267e3fd9e66fb5afbac7635"],"ad94625fb8d088209f46650c8097196fec67f00c":[],"3347d3d5a70258acf267e3fd9e66fb5afbac7635":["ad94625fb8d088209f46650c8097196fec67f00c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["ad94625fb8d088209f46650c8097196fec67f00c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"pathCommit":null}