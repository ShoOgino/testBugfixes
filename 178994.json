{"path":"lucene/sandbox/src/test/org/apache/lucene/search/TestTermAutomatonQuery#testOneTermDoesNotExist().mjava","commits":[{"id":"778044e6175d398c3f128227b96c5f3ad32184f0","date":1436004867,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/sandbox/src/test/org/apache/lucene/search/TestTermAutomatonQuery#testOneTermDoesNotExist().mjava","pathOld":"/dev/null","sourceNew":"  public void testOneTermDoesNotExist() throws Exception {\n    Directory dir = newDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(random(), dir);\n    Document doc = new Document();\n    doc.add(newTextField(\"field\", \"x y z\", Field.Store.NO));\n    w.addDocument(doc);\n\n    IndexReader r = w.getReader();\n    IndexSearcher s = newSearcher(r);\n\n    TokenStream ts = new CannedTokenStream(new Token[] {\n        token(\"a\", 1, 1),\n        token(\"x\", 1, 1),\n      });\n\n    TermAutomatonQuery q = new TokenStreamToTermAutomatonQuery().toQuery(\"field\", ts);\n    // System.out.println(\"DOT: \" + q.toDot());\n    assertEquals(0, s.search(q, 1).totalHits);\n\n    w.close();\n    r.close();\n    dir.close();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6f39ae26126a88ee050e14ab738bb6c6d0dad877","date":1478516006,"type":3,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/sandbox/src/test/org/apache/lucene/search/TestTermAutomatonQuery#testOneTermDoesNotExist().mjava","pathOld":"lucene/sandbox/src/test/org/apache/lucene/search/TestTermAutomatonQuery#testOneTermDoesNotExist().mjava","sourceNew":"  public void testOneTermDoesNotExist() throws Exception {\n    Directory dir = newDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(random(), dir);\n    Document doc = new Document();\n    doc.add(newTextField(\"field\", \"x y z\", Field.Store.NO));\n    w.addDocument(doc);\n\n    IndexReader r = w.getReader();\n    IndexSearcher s = newSearcher(r);\n\n    TokenStream ts = new CannedTokenStream(new Token[] {\n        token(\"a\", 1, 1),\n        token(\"x\", 1, 1),\n      });\n\n    TermAutomatonQuery q = new TokenStreamToTermAutomatonQuery().toQuery(\"field\", ts);\n    // System.out.println(\"DOT: \" + q.toDot());\n    assertEquals(0, s.search(q, 1).totalHits);\n\n    IOUtils.close(w, r, dir);\n  }\n\n","sourceOld":"  public void testOneTermDoesNotExist() throws Exception {\n    Directory dir = newDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(random(), dir);\n    Document doc = new Document();\n    doc.add(newTextField(\"field\", \"x y z\", Field.Store.NO));\n    w.addDocument(doc);\n\n    IndexReader r = w.getReader();\n    IndexSearcher s = newSearcher(r);\n\n    TokenStream ts = new CannedTokenStream(new Token[] {\n        token(\"a\", 1, 1),\n        token(\"x\", 1, 1),\n      });\n\n    TermAutomatonQuery q = new TokenStreamToTermAutomatonQuery().toQuery(\"field\", ts);\n    // System.out.println(\"DOT: \" + q.toDot());\n    assertEquals(0, s.search(q, 1).totalHits);\n\n    w.close();\n    r.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"199dfa410f1fdbfd3294106b04096cce5ed34b21","date":1478812506,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"lucene/sandbox/src/test/org/apache/lucene/search/TestTermAutomatonQuery#testOneTermDoesNotExist().mjava","pathOld":"lucene/sandbox/src/test/org/apache/lucene/search/TestTermAutomatonQuery#testOneTermDoesNotExist().mjava","sourceNew":"  public void testOneTermDoesNotExist() throws Exception {\n    Directory dir = newDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(random(), dir);\n    Document doc = new Document();\n    doc.add(newTextField(\"field\", \"x y z\", Field.Store.NO));\n    w.addDocument(doc);\n\n    IndexReader r = w.getReader();\n    IndexSearcher s = newSearcher(r);\n\n    TokenStream ts = new CannedTokenStream(new Token[] {\n        token(\"a\", 1, 1),\n        token(\"x\", 1, 1),\n      });\n\n    TermAutomatonQuery q = new TokenStreamToTermAutomatonQuery().toQuery(\"field\", ts);\n    // System.out.println(\"DOT: \" + q.toDot());\n    assertEquals(0, s.search(q, 1).totalHits);\n\n    IOUtils.close(w, r, dir);\n  }\n\n","sourceOld":"  public void testOneTermDoesNotExist() throws Exception {\n    Directory dir = newDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(random(), dir);\n    Document doc = new Document();\n    doc.add(newTextField(\"field\", \"x y z\", Field.Store.NO));\n    w.addDocument(doc);\n\n    IndexReader r = w.getReader();\n    IndexSearcher s = newSearcher(r);\n\n    TokenStream ts = new CannedTokenStream(new Token[] {\n        token(\"a\", 1, 1),\n        token(\"x\", 1, 1),\n      });\n\n    TermAutomatonQuery q = new TokenStreamToTermAutomatonQuery().toQuery(\"field\", ts);\n    // System.out.println(\"DOT: \" + q.toDot());\n    assertEquals(0, s.search(q, 1).totalHits);\n\n    w.close();\n    r.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"83788ad129a5154d5c6562c4e8ce3db48793aada","date":1532961485,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/sandbox/src/test/org/apache/lucene/search/TestTermAutomatonQuery#testOneTermDoesNotExist().mjava","pathOld":"lucene/sandbox/src/test/org/apache/lucene/search/TestTermAutomatonQuery#testOneTermDoesNotExist().mjava","sourceNew":"  public void testOneTermDoesNotExist() throws Exception {\n    Directory dir = newDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(random(), dir);\n    Document doc = new Document();\n    doc.add(newTextField(\"field\", \"x y z\", Field.Store.NO));\n    w.addDocument(doc);\n\n    IndexReader r = w.getReader();\n    IndexSearcher s = newSearcher(r);\n\n    TokenStream ts = new CannedTokenStream(new Token[] {\n        token(\"a\", 1, 1),\n        token(\"x\", 1, 1),\n      });\n\n    TermAutomatonQuery q = new TokenStreamToTermAutomatonQuery().toQuery(\"field\", ts);\n    // System.out.println(\"DOT: \" + q.toDot());\n    assertEquals(0, s.search(q, 1).totalHits.value);\n\n    IOUtils.close(w, r, dir);\n  }\n\n","sourceOld":"  public void testOneTermDoesNotExist() throws Exception {\n    Directory dir = newDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(random(), dir);\n    Document doc = new Document();\n    doc.add(newTextField(\"field\", \"x y z\", Field.Store.NO));\n    w.addDocument(doc);\n\n    IndexReader r = w.getReader();\n    IndexSearcher s = newSearcher(r);\n\n    TokenStream ts = new CannedTokenStream(new Token[] {\n        token(\"a\", 1, 1),\n        token(\"x\", 1, 1),\n      });\n\n    TermAutomatonQuery q = new TokenStreamToTermAutomatonQuery().toQuery(\"field\", ts);\n    // System.out.println(\"DOT: \" + q.toDot());\n    assertEquals(0, s.search(q, 1).totalHits);\n\n    IOUtils.close(w, r, dir);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"6f39ae26126a88ee050e14ab738bb6c6d0dad877":["778044e6175d398c3f128227b96c5f3ad32184f0"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"199dfa410f1fdbfd3294106b04096cce5ed34b21":["778044e6175d398c3f128227b96c5f3ad32184f0","6f39ae26126a88ee050e14ab738bb6c6d0dad877"],"83788ad129a5154d5c6562c4e8ce3db48793aada":["6f39ae26126a88ee050e14ab738bb6c6d0dad877"],"778044e6175d398c3f128227b96c5f3ad32184f0":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["83788ad129a5154d5c6562c4e8ce3db48793aada"]},"commit2Childs":{"6f39ae26126a88ee050e14ab738bb6c6d0dad877":["199dfa410f1fdbfd3294106b04096cce5ed34b21","83788ad129a5154d5c6562c4e8ce3db48793aada"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["778044e6175d398c3f128227b96c5f3ad32184f0"],"199dfa410f1fdbfd3294106b04096cce5ed34b21":[],"83788ad129a5154d5c6562c4e8ce3db48793aada":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"778044e6175d398c3f128227b96c5f3ad32184f0":["6f39ae26126a88ee050e14ab738bb6c6d0dad877","199dfa410f1fdbfd3294106b04096cce5ed34b21"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["199dfa410f1fdbfd3294106b04096cce5ed34b21","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}