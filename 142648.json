{"path":"lucene/queryparser/src/java/org/apache/lucene/queryparser/flexible/core/nodes/AnyQueryNode#AnyQueryNode(List[QueryNode],CharSequence,int).mjava","commits":[{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/queryparser/src/java/org/apache/lucene/queryparser/flexible/core/nodes/AnyQueryNode#AnyQueryNode(List[QueryNode],CharSequence,int).mjava","pathOld":"modules/queryparser/src/java/org/apache/lucene/queryparser/flexible/core/nodes/AnyQueryNode#AnyQueryNode(List[QueryNode],CharSequence,int).mjava","sourceNew":"  /**\n   * @param clauses\n   *          - the query nodes to be or'ed\n   */\n  public AnyQueryNode(List<QueryNode> clauses, CharSequence field,\n      int minimumMatchingElements) {\n    super(clauses);\n    this.field = field;\n    this.minimumMatchingmElements = minimumMatchingElements;\n\n    if (clauses != null) {\n\n      for (QueryNode clause : clauses) {\n\n        if (clause instanceof FieldQueryNode) {\n\n          if (clause instanceof QueryNodeImpl) {\n            ((QueryNodeImpl) clause).toQueryStringIgnoreFields = true;\n          }\n\n          if (clause instanceof FieldableNode) {\n            ((FieldableNode) clause).setField(field);\n          }\n\n        }\n      }\n\n    }\n\n  }\n\n","sourceOld":"  /**\n   * @param clauses\n   *          - the query nodes to be or'ed\n   */\n  public AnyQueryNode(List<QueryNode> clauses, CharSequence field,\n      int minimumMatchingElements) {\n    super(clauses);\n    this.field = field;\n    this.minimumMatchingmElements = minimumMatchingElements;\n\n    if (clauses != null) {\n\n      for (QueryNode clause : clauses) {\n\n        if (clause instanceof FieldQueryNode) {\n\n          if (clause instanceof QueryNodeImpl) {\n            ((QueryNodeImpl) clause).toQueryStringIgnoreFields = true;\n          }\n\n          if (clause instanceof FieldableNode) {\n            ((FieldableNode) clause).setField(field);\n          }\n\n        }\n      }\n\n    }\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b89678825b68eccaf09e6ab71675fc0b0af1e099"]},"commit2Childs":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}