{"path":"lucene/src/test/org/apache/lucene/search/TestFieldCache#testEmptyIndex().mjava","commits":[{"id":"be20f9fed1d3edcb1c84abcc39df87a90fab22df","date":1275590285,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/search/TestFieldCache#testEmptyIndex().mjava","pathOld":"/dev/null","sourceNew":"  public void testEmptyIndex() throws Exception {\n    Directory dir = new MockRAMDirectory();\n    IndexWriter writer= new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()).setMaxBufferedDocs(500));\n    IndexReader r = writer.getReader();\n    FieldCache.DocTerms terms = FieldCache.DEFAULT.getTerms(r, \"foobar\");\n    FieldCache.DocTermsIndex termsIndex = FieldCache.DEFAULT.getTermsIndex(r, \"foobar\");\n    r.close();\n    dir.close();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ab9633cb67e3c0aec3c066147a23a957d6e7ad8c","date":1281646583,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/search/TestFieldCache#testEmptyIndex().mjava","pathOld":"lucene/src/test/org/apache/lucene/search/TestFieldCache#testEmptyIndex().mjava","sourceNew":"  public void testEmptyIndex() throws Exception {\n    Directory dir = newDirectory(random);\n    IndexWriter writer= new IndexWriter(dir, newIndexWriterConfig(random, TEST_VERSION_CURRENT, new MockAnalyzer()).setMaxBufferedDocs(500));\n    IndexReader r = writer.getReader();\n    FieldCache.DocTerms terms = FieldCache.DEFAULT.getTerms(r, \"foobar\");\n    FieldCache.DocTermsIndex termsIndex = FieldCache.DEFAULT.getTermsIndex(r, \"foobar\");\n    r.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testEmptyIndex() throws Exception {\n    Directory dir = new MockRAMDirectory();\n    IndexWriter writer= new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()).setMaxBufferedDocs(500));\n    IndexReader r = writer.getReader();\n    FieldCache.DocTerms terms = FieldCache.DEFAULT.getTerms(r, \"foobar\");\n    FieldCache.DocTermsIndex termsIndex = FieldCache.DEFAULT.getTermsIndex(r, \"foobar\");\n    r.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1f653cfcf159baeaafe5d01682a911e95bba4012","date":1284122058,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/search/TestFieldCache#testEmptyIndex().mjava","pathOld":"lucene/src/test/org/apache/lucene/search/TestFieldCache#testEmptyIndex().mjava","sourceNew":"  public void testEmptyIndex() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter writer= new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer()).setMaxBufferedDocs(500));\n    IndexReader r = writer.getReader();\n    FieldCache.DocTerms terms = FieldCache.DEFAULT.getTerms(r, \"foobar\");\n    FieldCache.DocTermsIndex termsIndex = FieldCache.DEFAULT.getTermsIndex(r, \"foobar\");\n    r.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testEmptyIndex() throws Exception {\n    Directory dir = newDirectory(random);\n    IndexWriter writer= new IndexWriter(dir, newIndexWriterConfig(random, TEST_VERSION_CURRENT, new MockAnalyzer()).setMaxBufferedDocs(500));\n    IndexReader r = writer.getReader();\n    FieldCache.DocTerms terms = FieldCache.DEFAULT.getTerms(r, \"foobar\");\n    FieldCache.DocTermsIndex termsIndex = FieldCache.DEFAULT.getTermsIndex(r, \"foobar\");\n    r.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"296e4ed69ccbda3c7b5fdb86c7acaa43c9074e01","date":1286712181,"type":3,"author":"Grant Ingersoll","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/search/TestFieldCache#testEmptyIndex().mjava","pathOld":"lucene/src/test/org/apache/lucene/search/TestFieldCache#testEmptyIndex().mjava","sourceNew":"  public void testEmptyIndex() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter writer= new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer()).setMaxBufferedDocs(500));\n    IndexReader r = IndexReader.open(writer);\n    FieldCache.DocTerms terms = FieldCache.DEFAULT.getTerms(r, \"foobar\");\n    FieldCache.DocTermsIndex termsIndex = FieldCache.DEFAULT.getTermsIndex(r, \"foobar\");\n    r.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testEmptyIndex() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter writer= new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer()).setMaxBufferedDocs(500));\n    IndexReader r = writer.getReader();\n    FieldCache.DocTerms terms = FieldCache.DEFAULT.getTerms(r, \"foobar\");\n    FieldCache.DocTermsIndex termsIndex = FieldCache.DEFAULT.getTermsIndex(r, \"foobar\");\n    r.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","date":1292920096,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/search/TestFieldCache#testEmptyIndex().mjava","pathOld":"lucene/src/test/org/apache/lucene/search/TestFieldCache#testEmptyIndex().mjava","sourceNew":"  public void testEmptyIndex() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter writer= new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer()).setMaxBufferedDocs(500));\n    IndexReader r = IndexReader.open(writer);\n    FieldCache.DocTerms terms = FieldCache.DEFAULT.getTerms(r, \"foobar\");\n    FieldCache.DocTermsIndex termsIndex = FieldCache.DEFAULT.getTermsIndex(r, \"foobar\");\n    r.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testEmptyIndex() throws Exception {\n    Directory dir = new MockRAMDirectory();\n    IndexWriter writer= new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()).setMaxBufferedDocs(500));\n    IndexReader r = writer.getReader();\n    FieldCache.DocTerms terms = FieldCache.DEFAULT.getTerms(r, \"foobar\");\n    FieldCache.DocTermsIndex termsIndex = FieldCache.DEFAULT.getTermsIndex(r, \"foobar\");\n    r.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"eb378f8bdee16a26810e086303a4a86b4930ea12","date":1296410797,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/search/TestFieldCache#testEmptyIndex().mjava","pathOld":"lucene/src/test/org/apache/lucene/search/TestFieldCache#testEmptyIndex().mjava","sourceNew":"  public void testEmptyIndex() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter writer= new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer()).setMaxBufferedDocs(500));\n    IndexReader r = IndexReader.open(writer, true);\n    FieldCache.DocTerms terms = FieldCache.DEFAULT.getTerms(r, \"foobar\");\n    FieldCache.DocTermsIndex termsIndex = FieldCache.DEFAULT.getTermsIndex(r, \"foobar\");\n    r.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testEmptyIndex() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter writer= new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer()).setMaxBufferedDocs(500));\n    IndexReader r = IndexReader.open(writer);\n    FieldCache.DocTerms terms = FieldCache.DEFAULT.getTerms(r, \"foobar\");\n    FieldCache.DocTermsIndex termsIndex = FieldCache.DEFAULT.getTermsIndex(r, \"foobar\");\n    r.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"29ef99d61cda9641b6250bf9567329a6e65f901d","date":1297244127,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/search/TestFieldCache#testEmptyIndex().mjava","pathOld":"lucene/src/test/org/apache/lucene/search/TestFieldCache#testEmptyIndex().mjava","sourceNew":"  public void testEmptyIndex() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter writer= new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer()).setMaxBufferedDocs(500));\n    IndexReader r = IndexReader.open(writer, true);\n    FieldCache.DocTerms terms = FieldCache.DEFAULT.getTerms(r, \"foobar\");\n    FieldCache.DocTermsIndex termsIndex = FieldCache.DEFAULT.getTermsIndex(r, \"foobar\");\n    r.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testEmptyIndex() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter writer= new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer()).setMaxBufferedDocs(500));\n    IndexReader r = IndexReader.open(writer);\n    FieldCache.DocTerms terms = FieldCache.DEFAULT.getTerms(r, \"foobar\");\n    FieldCache.DocTermsIndex termsIndex = FieldCache.DEFAULT.getTermsIndex(r, \"foobar\");\n    r.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bde51b089eb7f86171eb3406e38a274743f9b7ac","date":1298336439,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/search/TestFieldCache#testEmptyIndex().mjava","pathOld":"lucene/src/test/org/apache/lucene/search/TestFieldCache#testEmptyIndex().mjava","sourceNew":"  public void testEmptyIndex() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter writer= new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer()).setMaxBufferedDocs(500));\n    IndexReader r = IndexReader.open(writer, true);\n    FieldCache.DocTerms terms = FieldCache.DEFAULT.getTerms(r, \"foobar\");\n    FieldCache.DocTermsIndex termsIndex = FieldCache.DEFAULT.getTermsIndex(r, \"foobar\");\n    r.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testEmptyIndex() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter writer= new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer()).setMaxBufferedDocs(500));\n    IndexReader r = IndexReader.open(writer);\n    FieldCache.DocTerms terms = FieldCache.DEFAULT.getTerms(r, \"foobar\");\n    FieldCache.DocTermsIndex termsIndex = FieldCache.DEFAULT.getTermsIndex(r, \"foobar\");\n    r.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f2c5f0cb44df114db4228c8f77861714b5cabaea","date":1302542431,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/search/TestFieldCache#testEmptyIndex().mjava","pathOld":"lucene/src/test/org/apache/lucene/search/TestFieldCache#testEmptyIndex().mjava","sourceNew":"  public void testEmptyIndex() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter writer= new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)).setMaxBufferedDocs(500));\n    IndexReader r = IndexReader.open(writer, true);\n    FieldCache.DocTerms terms = FieldCache.DEFAULT.getTerms(r, \"foobar\");\n    FieldCache.DocTermsIndex termsIndex = FieldCache.DEFAULT.getTermsIndex(r, \"foobar\");\n    r.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testEmptyIndex() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter writer= new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer()).setMaxBufferedDocs(500));\n    IndexReader r = IndexReader.open(writer, true);\n    FieldCache.DocTerms terms = FieldCache.DEFAULT.getTerms(r, \"foobar\");\n    FieldCache.DocTermsIndex termsIndex = FieldCache.DEFAULT.getTermsIndex(r, \"foobar\");\n    r.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"962d04139994fce5193143ef35615499a9a96d78","date":1302693744,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/search/TestFieldCache#testEmptyIndex().mjava","pathOld":"lucene/src/test/org/apache/lucene/search/TestFieldCache#testEmptyIndex().mjava","sourceNew":"  public void testEmptyIndex() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter writer= new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)).setMaxBufferedDocs(500));\n    IndexReader r = IndexReader.open(writer, true);\n    FieldCache.DocTerms terms = FieldCache.DEFAULT.getTerms(r, \"foobar\");\n    FieldCache.DocTermsIndex termsIndex = FieldCache.DEFAULT.getTermsIndex(r, \"foobar\");\n    r.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testEmptyIndex() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter writer= new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer()).setMaxBufferedDocs(500));\n    IndexReader r = IndexReader.open(writer, true);\n    FieldCache.DocTerms terms = FieldCache.DEFAULT.getTerms(r, \"foobar\");\n    FieldCache.DocTermsIndex termsIndex = FieldCache.DEFAULT.getTermsIndex(r, \"foobar\");\n    r.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"135621f3a0670a9394eb563224a3b76cc4dddc0f","date":1304344257,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/search/TestFieldCache#testEmptyIndex().mjava","pathOld":"lucene/src/test/org/apache/lucene/search/TestFieldCache#testEmptyIndex().mjava","sourceNew":"  public void testEmptyIndex() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter writer= new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)).setMaxBufferedDocs(500));\n    IndexReader r = IndexReader.open(writer, true);\n    FieldCache.DocTerms terms = FieldCache.DEFAULT.getTerms(r, \"foobar\");\n    FieldCache.DocTermsIndex termsIndex = FieldCache.DEFAULT.getTermsIndex(r, \"foobar\");\n    r.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testEmptyIndex() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter writer= new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer()).setMaxBufferedDocs(500));\n    IndexReader r = IndexReader.open(writer, true);\n    FieldCache.DocTerms terms = FieldCache.DEFAULT.getTerms(r, \"foobar\");\n    FieldCache.DocTermsIndex termsIndex = FieldCache.DEFAULT.getTermsIndex(r, \"foobar\");\n    r.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a3776dccca01c11e7046323cfad46a3b4a471233","date":1306100719,"type":3,"author":"Steven Rowe","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/search/TestFieldCache#testEmptyIndex().mjava","pathOld":"lucene/src/test/org/apache/lucene/search/TestFieldCache#testEmptyIndex().mjava","sourceNew":"  public void testEmptyIndex() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter writer= new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)).setMaxBufferedDocs(500));\n    IndexReader r = IndexReader.open(writer, true);\n    FieldCache.DocTerms terms = FieldCache.DEFAULT.getTerms(r, \"foobar\");\n    FieldCache.DocTermsIndex termsIndex = FieldCache.DEFAULT.getTermsIndex(r, \"foobar\");\n    r.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testEmptyIndex() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter writer= new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer()).setMaxBufferedDocs(500));\n    IndexReader r = IndexReader.open(writer, true);\n    FieldCache.DocTerms terms = FieldCache.DEFAULT.getTerms(r, \"foobar\");\n    FieldCache.DocTermsIndex termsIndex = FieldCache.DEFAULT.getTermsIndex(r, \"foobar\");\n    r.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"efb7a19703a037c29e30440260d393500febc1f4","date":1306648116,"type":3,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/search/TestFieldCache#testEmptyIndex().mjava","pathOld":"lucene/src/test/org/apache/lucene/search/TestFieldCache#testEmptyIndex().mjava","sourceNew":"  public void testEmptyIndex() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter writer= new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)).setMaxBufferedDocs(500));\n    IndexReader r = IndexReader.open(writer, true);\n    FieldCache.DocTerms terms = FieldCache.DEFAULT.getTerms(r, \"foobar\");\n    FieldCache.DocTermsIndex termsIndex = FieldCache.DEFAULT.getTermsIndex(r, \"foobar\");\n    writer.close();\n    r.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testEmptyIndex() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter writer= new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)).setMaxBufferedDocs(500));\n    IndexReader r = IndexReader.open(writer, true);\n    FieldCache.DocTerms terms = FieldCache.DEFAULT.getTerms(r, \"foobar\");\n    FieldCache.DocTermsIndex termsIndex = FieldCache.DEFAULT.getTermsIndex(r, \"foobar\");\n    r.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91","date":1306767085,"type":3,"author":"Steven Rowe","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/search/TestFieldCache#testEmptyIndex().mjava","pathOld":"lucene/src/test/org/apache/lucene/search/TestFieldCache#testEmptyIndex().mjava","sourceNew":"  public void testEmptyIndex() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter writer= new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)).setMaxBufferedDocs(500));\n    IndexReader r = IndexReader.open(writer, true);\n    FieldCache.DocTerms terms = FieldCache.DEFAULT.getTerms(r, \"foobar\");\n    FieldCache.DocTermsIndex termsIndex = FieldCache.DEFAULT.getTermsIndex(r, \"foobar\");\n    writer.close();\n    r.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testEmptyIndex() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter writer= new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)).setMaxBufferedDocs(500));\n    IndexReader r = IndexReader.open(writer, true);\n    FieldCache.DocTerms terms = FieldCache.DEFAULT.getTerms(r, \"foobar\");\n    FieldCache.DocTermsIndex termsIndex = FieldCache.DEFAULT.getTermsIndex(r, \"foobar\");\n    r.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2e10cb22a8bdb44339e282925a29182bb2f3174d","date":1306841137,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/search/TestFieldCache#testEmptyIndex().mjava","pathOld":"lucene/src/test/org/apache/lucene/search/TestFieldCache#testEmptyIndex().mjava","sourceNew":"  public void testEmptyIndex() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter writer= new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)).setMaxBufferedDocs(500));\n    IndexReader r = IndexReader.open(writer, true);\n    FieldCache.DocTerms terms = FieldCache.DEFAULT.getTerms(r, \"foobar\");\n    FieldCache.DocTermsIndex termsIndex = FieldCache.DEFAULT.getTermsIndex(r, \"foobar\");\n    writer.close();\n    r.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testEmptyIndex() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter writer= new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)).setMaxBufferedDocs(500));\n    IndexReader r = IndexReader.open(writer, true);\n    FieldCache.DocTerms terms = FieldCache.DEFAULT.getTerms(r, \"foobar\");\n    FieldCache.DocTermsIndex termsIndex = FieldCache.DEFAULT.getTermsIndex(r, \"foobar\");\n    r.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"382fe3a6ca9745891afebda9b9a57cc158305545","date":1320952430,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/search/TestFieldCache#testEmptyIndex().mjava","pathOld":"lucene/src/test/org/apache/lucene/search/TestFieldCache#testEmptyIndex().mjava","sourceNew":"  public void testEmptyIndex() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter writer= new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)).setMaxBufferedDocs(500));\n    IndexReader r = IndexReader.open(writer, true);\n    FieldCache.DEFAULT.getTerms(r, \"foobar\");\n    FieldCache.DEFAULT.getTermsIndex(r, \"foobar\");\n    writer.close();\n    r.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testEmptyIndex() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter writer= new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)).setMaxBufferedDocs(500));\n    IndexReader r = IndexReader.open(writer, true);\n    FieldCache.DocTerms terms = FieldCache.DEFAULT.getTerms(r, \"foobar\");\n    FieldCache.DocTermsIndex termsIndex = FieldCache.DEFAULT.getTermsIndex(r, \"foobar\");\n    writer.close();\n    r.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2dd6ecb8250c497ed227653279d6a4f470bfbb31","date":1326814483,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/search/TestFieldCache#testEmptyIndex().mjava","pathOld":"lucene/src/test/org/apache/lucene/search/TestFieldCache#testEmptyIndex().mjava","sourceNew":"  public void testEmptyIndex() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter writer= new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)).setMaxBufferedDocs(500));\n    IndexReader r = IndexReader.open(writer, true);\n    SlowMultiReaderWrapper reader = new SlowMultiReaderWrapper(r);\n    FieldCache.DEFAULT.getTerms(reader, \"foobar\");\n    FieldCache.DEFAULT.getTermsIndex(reader, \"foobar\");\n    writer.close();\n    r.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testEmptyIndex() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter writer= new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)).setMaxBufferedDocs(500));\n    IndexReader r = IndexReader.open(writer, true);\n    FieldCache.DEFAULT.getTerms(r, \"foobar\");\n    FieldCache.DEFAULT.getTermsIndex(r, \"foobar\");\n    writer.close();\n    r.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":["87d6f9603307ae2ad642fb01deedf031320fd0c3"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"386d1b0dcb065f1bfc494b1407cb41c536b95485","date":1327848512,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/search/TestFieldCache#testEmptyIndex().mjava","pathOld":"lucene/src/test/org/apache/lucene/search/TestFieldCache#testEmptyIndex().mjava","sourceNew":"  public void testEmptyIndex() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter writer= new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)).setMaxBufferedDocs(500));\n    IndexReader r = IndexReader.open(writer, true);\n    AtomicIndexReader reader = SlowCompositeReaderWrapper.wrap(r);\n    FieldCache.DEFAULT.getTerms(reader, \"foobar\");\n    FieldCache.DEFAULT.getTermsIndex(reader, \"foobar\");\n    writer.close();\n    r.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testEmptyIndex() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter writer= new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)).setMaxBufferedDocs(500));\n    IndexReader r = IndexReader.open(writer, true);\n    SlowMultiReaderWrapper reader = new SlowMultiReaderWrapper(r);\n    FieldCache.DEFAULT.getTerms(reader, \"foobar\");\n    FieldCache.DEFAULT.getTermsIndex(reader, \"foobar\");\n    writer.close();\n    r.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"8bbb24251176a02e69cd2239968e09c9c451424a","date":1327862319,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/search/TestFieldCache#testEmptyIndex().mjava","pathOld":"lucene/src/test/org/apache/lucene/search/TestFieldCache#testEmptyIndex().mjava","sourceNew":"  public void testEmptyIndex() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter writer= new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)).setMaxBufferedDocs(500));\n    writer.close();\n    IndexReader r = DirectoryReader.open(dir);\n    AtomicIndexReader reader = SlowCompositeReaderWrapper.wrap(r);\n    FieldCache.DEFAULT.getTerms(reader, \"foobar\");\n    FieldCache.DEFAULT.getTermsIndex(reader, \"foobar\");\n    FieldCache.DEFAULT.purge(reader);\n    r.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testEmptyIndex() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter writer= new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)).setMaxBufferedDocs(500));\n    IndexReader r = IndexReader.open(writer, true);\n    AtomicIndexReader reader = SlowCompositeReaderWrapper.wrap(r);\n    FieldCache.DEFAULT.getTerms(reader, \"foobar\");\n    FieldCache.DEFAULT.getTermsIndex(reader, \"foobar\");\n    writer.close();\n    r.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"da6d5ac19a80d65b1e864251f155d30960353b7e","date":1327881054,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/search/TestFieldCache#testEmptyIndex().mjava","pathOld":"lucene/src/test/org/apache/lucene/search/TestFieldCache#testEmptyIndex().mjava","sourceNew":"  public void testEmptyIndex() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter writer= new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)).setMaxBufferedDocs(500));\n    writer.close();\n    IndexReader r = DirectoryReader.open(dir);\n    AtomicReader reader = SlowCompositeReaderWrapper.wrap(r);\n    FieldCache.DEFAULT.getTerms(reader, \"foobar\");\n    FieldCache.DEFAULT.getTermsIndex(reader, \"foobar\");\n    FieldCache.DEFAULT.purge(reader);\n    r.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testEmptyIndex() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter writer= new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)).setMaxBufferedDocs(500));\n    writer.close();\n    IndexReader r = DirectoryReader.open(dir);\n    AtomicIndexReader reader = SlowCompositeReaderWrapper.wrap(r);\n    FieldCache.DEFAULT.getTerms(reader, \"foobar\");\n    FieldCache.DEFAULT.getTermsIndex(reader, \"foobar\");\n    FieldCache.DEFAULT.purge(reader);\n    r.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"5cab9a86bd67202d20b6adc463008c8e982b070a","date":1327966443,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/search/TestFieldCache#testEmptyIndex().mjava","pathOld":"lucene/src/test/org/apache/lucene/search/TestFieldCache#testEmptyIndex().mjava","sourceNew":"  public void testEmptyIndex() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter writer= new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)).setMaxBufferedDocs(500));\n    writer.close();\n    IndexReader r = DirectoryReader.open(dir);\n    AtomicReader reader = SlowCompositeReaderWrapper.wrap(r);\n    FieldCache.DEFAULT.getTerms(reader, \"foobar\");\n    FieldCache.DEFAULT.getTermsIndex(reader, \"foobar\");\n    FieldCache.DEFAULT.purge(reader);\n    r.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testEmptyIndex() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter writer= new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)).setMaxBufferedDocs(500));\n    IndexReader r = IndexReader.open(writer, true);\n    SlowMultiReaderWrapper reader = new SlowMultiReaderWrapper(r);\n    FieldCache.DEFAULT.getTerms(reader, \"foobar\");\n    FieldCache.DEFAULT.getTermsIndex(reader, \"foobar\");\n    writer.close();\n    r.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":5,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestFieldCache#testEmptyIndex().mjava","pathOld":"lucene/src/test/org/apache/lucene/search/TestFieldCache#testEmptyIndex().mjava","sourceNew":"  public void testEmptyIndex() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter writer= new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)).setMaxBufferedDocs(500));\n    writer.close();\n    IndexReader r = DirectoryReader.open(dir);\n    AtomicReader reader = SlowCompositeReaderWrapper.wrap(r);\n    FieldCache.DEFAULT.getTerms(reader, \"foobar\");\n    FieldCache.DEFAULT.getTermsIndex(reader, \"foobar\");\n    FieldCache.DEFAULT.purge(reader);\n    r.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testEmptyIndex() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter writer= new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)).setMaxBufferedDocs(500));\n    writer.close();\n    IndexReader r = DirectoryReader.open(dir);\n    AtomicReader reader = SlowCompositeReaderWrapper.wrap(r);\n    FieldCache.DEFAULT.getTerms(reader, \"foobar\");\n    FieldCache.DEFAULT.getTermsIndex(reader, \"foobar\");\n    FieldCache.DEFAULT.purge(reader);\n    r.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"be20f9fed1d3edcb1c84abcc39df87a90fab22df":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"ab9633cb67e3c0aec3c066147a23a957d6e7ad8c":["be20f9fed1d3edcb1c84abcc39df87a90fab22df"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["5cab9a86bd67202d20b6adc463008c8e982b070a"],"efb7a19703a037c29e30440260d393500febc1f4":["f2c5f0cb44df114db4228c8f77861714b5cabaea"],"135621f3a0670a9394eb563224a3b76cc4dddc0f":["29ef99d61cda9641b6250bf9567329a6e65f901d","f2c5f0cb44df114db4228c8f77861714b5cabaea"],"962d04139994fce5193143ef35615499a9a96d78":["bde51b089eb7f86171eb3406e38a274743f9b7ac","f2c5f0cb44df114db4228c8f77861714b5cabaea"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["be20f9fed1d3edcb1c84abcc39df87a90fab22df","296e4ed69ccbda3c7b5fdb86c7acaa43c9074e01"],"382fe3a6ca9745891afebda9b9a57cc158305545":["efb7a19703a037c29e30440260d393500febc1f4"],"eb378f8bdee16a26810e086303a4a86b4930ea12":["296e4ed69ccbda3c7b5fdb86c7acaa43c9074e01"],"2dd6ecb8250c497ed227653279d6a4f470bfbb31":["382fe3a6ca9745891afebda9b9a57cc158305545"],"5cab9a86bd67202d20b6adc463008c8e982b070a":["2dd6ecb8250c497ed227653279d6a4f470bfbb31","da6d5ac19a80d65b1e864251f155d30960353b7e"],"8bbb24251176a02e69cd2239968e09c9c451424a":["386d1b0dcb065f1bfc494b1407cb41c536b95485"],"296e4ed69ccbda3c7b5fdb86c7acaa43c9074e01":["1f653cfcf159baeaafe5d01682a911e95bba4012"],"f2c5f0cb44df114db4228c8f77861714b5cabaea":["eb378f8bdee16a26810e086303a4a86b4930ea12"],"da6d5ac19a80d65b1e864251f155d30960353b7e":["8bbb24251176a02e69cd2239968e09c9c451424a"],"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91":["a3776dccca01c11e7046323cfad46a3b4a471233","efb7a19703a037c29e30440260d393500febc1f4"],"1f653cfcf159baeaafe5d01682a911e95bba4012":["ab9633cb67e3c0aec3c066147a23a957d6e7ad8c"],"29ef99d61cda9641b6250bf9567329a6e65f901d":["296e4ed69ccbda3c7b5fdb86c7acaa43c9074e01","eb378f8bdee16a26810e086303a4a86b4930ea12"],"a3776dccca01c11e7046323cfad46a3b4a471233":["eb378f8bdee16a26810e086303a4a86b4930ea12","f2c5f0cb44df114db4228c8f77861714b5cabaea"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"386d1b0dcb065f1bfc494b1407cb41c536b95485":["2dd6ecb8250c497ed227653279d6a4f470bfbb31"],"bde51b089eb7f86171eb3406e38a274743f9b7ac":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","eb378f8bdee16a26810e086303a4a86b4930ea12"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"2e10cb22a8bdb44339e282925a29182bb2f3174d":["135621f3a0670a9394eb563224a3b76cc4dddc0f","efb7a19703a037c29e30440260d393500febc1f4"]},"commit2Childs":{"be20f9fed1d3edcb1c84abcc39df87a90fab22df":["ab9633cb67e3c0aec3c066147a23a957d6e7ad8c","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a"],"ab9633cb67e3c0aec3c066147a23a957d6e7ad8c":["1f653cfcf159baeaafe5d01682a911e95bba4012"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"efb7a19703a037c29e30440260d393500febc1f4":["382fe3a6ca9745891afebda9b9a57cc158305545","5128b7b3b73fedff05fdc5ea2e6be53c1020bb91","2e10cb22a8bdb44339e282925a29182bb2f3174d"],"135621f3a0670a9394eb563224a3b76cc4dddc0f":["2e10cb22a8bdb44339e282925a29182bb2f3174d"],"962d04139994fce5193143ef35615499a9a96d78":[],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["bde51b089eb7f86171eb3406e38a274743f9b7ac"],"382fe3a6ca9745891afebda9b9a57cc158305545":["2dd6ecb8250c497ed227653279d6a4f470bfbb31"],"eb378f8bdee16a26810e086303a4a86b4930ea12":["f2c5f0cb44df114db4228c8f77861714b5cabaea","29ef99d61cda9641b6250bf9567329a6e65f901d","a3776dccca01c11e7046323cfad46a3b4a471233","bde51b089eb7f86171eb3406e38a274743f9b7ac"],"5cab9a86bd67202d20b6adc463008c8e982b070a":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"2dd6ecb8250c497ed227653279d6a4f470bfbb31":["5cab9a86bd67202d20b6adc463008c8e982b070a","386d1b0dcb065f1bfc494b1407cb41c536b95485"],"8bbb24251176a02e69cd2239968e09c9c451424a":["da6d5ac19a80d65b1e864251f155d30960353b7e"],"296e4ed69ccbda3c7b5fdb86c7acaa43c9074e01":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","eb378f8bdee16a26810e086303a4a86b4930ea12","29ef99d61cda9641b6250bf9567329a6e65f901d"],"f2c5f0cb44df114db4228c8f77861714b5cabaea":["efb7a19703a037c29e30440260d393500febc1f4","135621f3a0670a9394eb563224a3b76cc4dddc0f","962d04139994fce5193143ef35615499a9a96d78","a3776dccca01c11e7046323cfad46a3b4a471233"],"da6d5ac19a80d65b1e864251f155d30960353b7e":["5cab9a86bd67202d20b6adc463008c8e982b070a"],"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91":[],"29ef99d61cda9641b6250bf9567329a6e65f901d":["135621f3a0670a9394eb563224a3b76cc4dddc0f"],"1f653cfcf159baeaafe5d01682a911e95bba4012":["296e4ed69ccbda3c7b5fdb86c7acaa43c9074e01"],"a3776dccca01c11e7046323cfad46a3b4a471233":["5128b7b3b73fedff05fdc5ea2e6be53c1020bb91"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["be20f9fed1d3edcb1c84abcc39df87a90fab22df"],"386d1b0dcb065f1bfc494b1407cb41c536b95485":["8bbb24251176a02e69cd2239968e09c9c451424a"],"bde51b089eb7f86171eb3406e38a274743f9b7ac":["962d04139994fce5193143ef35615499a9a96d78"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"2e10cb22a8bdb44339e282925a29182bb2f3174d":[]},"heads":["962d04139994fce5193143ef35615499a9a96d78","5128b7b3b73fedff05fdc5ea2e6be53c1020bb91","cd5edd1f2b162a5cfa08efd17851a07373a96817","2e10cb22a8bdb44339e282925a29182bb2f3174d"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}