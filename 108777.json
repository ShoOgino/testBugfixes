{"path":"solr/core/src/test/org/apache/solr/core/TestConfigSets#testNonExistentConfigSetThrowsException().mjava","commits":[{"id":"2d4e985daefcb892b529223b478c47985fc3c483","date":1395658491,"type":0,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/core/TestConfigSets#testNonExistentConfigSetThrowsException().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testNonExistentConfigSetThrowsException() {\n    CoreContainer container = null;\n    try {\n      container = setupContainer(\"badConfigSet\", getFile(\"solr/configsets\").getAbsolutePath());\n      String testDirectory = container.getResourceLoader().getInstanceDir();\n\n      container.create(\"core1\", testDirectory + \"/core1\", \"configSet\", \"nonexistent\");\n      fail(\"Expected core creation to fail\");\n    }\n    catch (Exception e) {\n      Throwable wrappedException = getWrappedException(e);\n      assertThat(wrappedException.getMessage(), containsString(\"nonexistent\"));\n    }\n    finally {\n      if (container != null)\n        container.shutdown();\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["1e9ce820cd3ed9efb959c181daaafd22f0c70143"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"1e9ce820cd3ed9efb959c181daaafd22f0c70143","date":1396201051,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/core/TestConfigSets#testNonExistentConfigSetThrowsException().mjava","pathOld":"solr/core/src/test/org/apache/solr/core/TestConfigSets#testNonExistentConfigSetThrowsException().mjava","sourceNew":"  @Test\n  public void testNonExistentConfigSetThrowsException() {\n    CoreContainer container = null;\n    try {\n      container = setupContainer(getFile(\"solr/configsets\").getAbsolutePath());\n      String testDirectory = container.getResourceLoader().getInstanceDir();\n\n      container.create(\"core1\", testDirectory + \"/core1\", \"configSet\", \"nonexistent\");\n      fail(\"Expected core creation to fail\");\n    }\n    catch (Exception e) {\n      Throwable wrappedException = getWrappedException(e);\n      assertThat(wrappedException.getMessage(), containsString(\"nonexistent\"));\n    }\n    finally {\n      if (container != null)\n        container.shutdown();\n    }\n  }\n\n","sourceOld":"  @Test\n  public void testNonExistentConfigSetThrowsException() {\n    CoreContainer container = null;\n    try {\n      container = setupContainer(\"badConfigSet\", getFile(\"solr/configsets\").getAbsolutePath());\n      String testDirectory = container.getResourceLoader().getInstanceDir();\n\n      container.create(\"core1\", testDirectory + \"/core1\", \"configSet\", \"nonexistent\");\n      fail(\"Expected core creation to fail\");\n    }\n    catch (Exception e) {\n      Throwable wrappedException = getWrappedException(e);\n      assertThat(wrappedException.getMessage(), containsString(\"nonexistent\"));\n    }\n    finally {\n      if (container != null)\n        container.shutdown();\n    }\n  }\n\n","bugFix":["2d4e985daefcb892b529223b478c47985fc3c483"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2a0f5bb79c600763ffe7b8141df59a3169d31e48","date":1396689440,"type":3,"author":"Dawid Weiss","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/core/TestConfigSets#testNonExistentConfigSetThrowsException().mjava","pathOld":"solr/core/src/test/org/apache/solr/core/TestConfigSets#testNonExistentConfigSetThrowsException().mjava","sourceNew":"  @Test\n  public void testNonExistentConfigSetThrowsException() {\n    CoreContainer container = null;\n    try {\n      container = setupContainer(getFile(\"solr/configsets\").getAbsolutePath());\n      String testDirectory = container.getResourceLoader().getInstanceDir();\n\n      container.create(\"core1\", testDirectory + \"/core1\", \"configSet\", \"nonexistent\");\n      fail(\"Expected core creation to fail\");\n    }\n    catch (Exception e) {\n      Throwable wrappedException = getWrappedException(e);\n      assertThat(wrappedException.getMessage(), containsString(\"nonexistent\"));\n    }\n    finally {\n      if (container != null)\n        container.shutdown();\n    }\n  }\n\n","sourceOld":"  @Test\n  public void testNonExistentConfigSetThrowsException() {\n    CoreContainer container = null;\n    try {\n      container = setupContainer(\"badConfigSet\", getFile(\"solr/configsets\").getAbsolutePath());\n      String testDirectory = container.getResourceLoader().getInstanceDir();\n\n      container.create(\"core1\", testDirectory + \"/core1\", \"configSet\", \"nonexistent\");\n      fail(\"Expected core creation to fail\");\n    }\n    catch (Exception e) {\n      Throwable wrappedException = getWrappedException(e);\n      assertThat(wrappedException.getMessage(), containsString(\"nonexistent\"));\n    }\n    finally {\n      if (container != null)\n        container.shutdown();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"85032ab568b3f50eabd577aaa994ba197db93758","date":1404157267,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/core/TestConfigSets#testNonExistentConfigSetThrowsException().mjava","pathOld":"solr/core/src/test/org/apache/solr/core/TestConfigSets#testNonExistentConfigSetThrowsException().mjava","sourceNew":"  @Test\n  public void testNonExistentConfigSetThrowsException() {\n    CoreContainer container = null;\n    try {\n      container = setupContainer(getFile(\"solr/configsets\").getAbsolutePath());\n      String testDirectory = container.getResourceLoader().getInstanceDir();\n\n      container.create(new CoreDescriptor(container, \"core1\", testDirectory + \"/core1\", \"configSet\", \"nonexistent\"));\n      fail(\"Expected core creation to fail\");\n    }\n    catch (Exception e) {\n      Throwable wrappedException = getWrappedException(e);\n      assertThat(wrappedException.getMessage(), containsString(\"nonexistent\"));\n    }\n    finally {\n      if (container != null)\n        container.shutdown();\n    }\n  }\n\n","sourceOld":"  @Test\n  public void testNonExistentConfigSetThrowsException() {\n    CoreContainer container = null;\n    try {\n      container = setupContainer(getFile(\"solr/configsets\").getAbsolutePath());\n      String testDirectory = container.getResourceLoader().getInstanceDir();\n\n      container.create(\"core1\", testDirectory + \"/core1\", \"configSet\", \"nonexistent\");\n      fail(\"Expected core creation to fail\");\n    }\n    catch (Exception e) {\n      Throwable wrappedException = getWrappedException(e);\n      assertThat(wrappedException.getMessage(), containsString(\"nonexistent\"));\n    }\n    finally {\n      if (container != null)\n        container.shutdown();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a626ec4d1c92e59fe390724d6220081047b03ce7","date":1448021525,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/core/TestConfigSets#testNonExistentConfigSetThrowsException().mjava","pathOld":"solr/core/src/test/org/apache/solr/core/TestConfigSets#testNonExistentConfigSetThrowsException().mjava","sourceNew":"  @Test\n  public void testNonExistentConfigSetThrowsException() {\n    CoreContainer container = null;\n    try {\n      container = setupContainer(getFile(\"solr/configsets\").getAbsolutePath());\n      Path testDirectory = container.getResourceLoader().getInstancePath();\n\n      container.create(new CoreDescriptor(container, \"core1\", testDirectory.resolve(\"core1\").toString(), \"configSet\", \"nonexistent\"));\n      fail(\"Expected core creation to fail\");\n    }\n    catch (Exception e) {\n      Throwable wrappedException = getWrappedException(e);\n      assertThat(wrappedException.getMessage(), containsString(\"nonexistent\"));\n    }\n    finally {\n      if (container != null)\n        container.shutdown();\n    }\n  }\n\n","sourceOld":"  @Test\n  public void testNonExistentConfigSetThrowsException() {\n    CoreContainer container = null;\n    try {\n      container = setupContainer(getFile(\"solr/configsets\").getAbsolutePath());\n      String testDirectory = container.getResourceLoader().getInstanceDir();\n\n      container.create(new CoreDescriptor(container, \"core1\", testDirectory + \"/core1\", \"configSet\", \"nonexistent\"));\n      fail(\"Expected core creation to fail\");\n    }\n    catch (Exception e) {\n      Throwable wrappedException = getWrappedException(e);\n      assertThat(wrappedException.getMessage(), containsString(\"nonexistent\"));\n    }\n    finally {\n      if (container != null)\n        container.shutdown();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"11d8a050b7d5f98040f790d32ec1cfd2fc3490e3","date":1448892165,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/core/TestConfigSets#testNonExistentConfigSetThrowsException().mjava","pathOld":"solr/core/src/test/org/apache/solr/core/TestConfigSets#testNonExistentConfigSetThrowsException().mjava","sourceNew":"  @Test\n  public void testNonExistentConfigSetThrowsException() {\n    CoreContainer container = null;\n    try {\n      container = setupContainer(getFile(\"solr/configsets\").getAbsolutePath());\n      Path testDirectory = container.getResourceLoader().getInstancePath();\n\n      container.create(\"core1\", ImmutableMap.of(\"configSet\", \"nonexistent\"));\n      fail(\"Expected core creation to fail\");\n    }\n    catch (Exception e) {\n      Throwable wrappedException = getWrappedException(e);\n      assertThat(wrappedException.getMessage(), containsString(\"nonexistent\"));\n    }\n    finally {\n      if (container != null)\n        container.shutdown();\n    }\n  }\n\n","sourceOld":"  @Test\n  public void testNonExistentConfigSetThrowsException() {\n    CoreContainer container = null;\n    try {\n      container = setupContainer(getFile(\"solr/configsets\").getAbsolutePath());\n      Path testDirectory = container.getResourceLoader().getInstancePath();\n\n      container.create(new CoreDescriptor(container, \"core1\", testDirectory.resolve(\"core1\").toString(), \"configSet\", \"nonexistent\"));\n      fail(\"Expected core creation to fail\");\n    }\n    catch (Exception e) {\n      Throwable wrappedException = getWrappedException(e);\n      assertThat(wrappedException.getMessage(), containsString(\"nonexistent\"));\n    }\n    finally {\n      if (container != null)\n        container.shutdown();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"68cb00b5f16300efa7bd172de723d9ac91d38cc2","date":1543702774,"type":3,"author":"Jason Gerlowski","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/core/TestConfigSets#testNonExistentConfigSetThrowsException().mjava","pathOld":"solr/core/src/test/org/apache/solr/core/TestConfigSets#testNonExistentConfigSetThrowsException().mjava","sourceNew":"  @Test\n  public void testNonExistentConfigSetThrowsException() {\n    final CoreContainer container = setupContainer(getFile(\"solr/configsets\").getAbsolutePath());\n    try {\n      Path testDirectory = container.getResourceLoader().getInstancePath();\n\n      Exception thrown = expectThrows(Exception.class, \"Expected core creation to fail\", () -> {\n        container.create(\"core1\", ImmutableMap.of(\"configSet\", \"nonexistent\"));\n      });\n      Throwable wrappedException = getWrappedException(thrown);\n      assertThat(wrappedException.getMessage(), containsString(\"nonexistent\"));\n    } finally {\n      if (container != null)\n        container.shutdown();\n    }\n  }\n\n","sourceOld":"  @Test\n  public void testNonExistentConfigSetThrowsException() {\n    CoreContainer container = null;\n    try {\n      container = setupContainer(getFile(\"solr/configsets\").getAbsolutePath());\n      Path testDirectory = container.getResourceLoader().getInstancePath();\n\n      container.create(\"core1\", ImmutableMap.of(\"configSet\", \"nonexistent\"));\n      fail(\"Expected core creation to fail\");\n    }\n    catch (Exception e) {\n      Throwable wrappedException = getWrappedException(e);\n      assertThat(wrappedException.getMessage(), containsString(\"nonexistent\"));\n    }\n    finally {\n      if (container != null)\n        container.shutdown();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ec5a4e4c455009870c1cb8d21cf6671b8b78d3e3","date":1583932828,"type":3,"author":"David Smiley","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/core/TestConfigSets#testNonExistentConfigSetThrowsException().mjava","pathOld":"solr/core/src/test/org/apache/solr/core/TestConfigSets#testNonExistentConfigSetThrowsException().mjava","sourceNew":"  @Test\n  public void testNonExistentConfigSetThrowsException() {\n    final CoreContainer container = setupContainer(getFile(\"solr/configsets\").getAbsolutePath());\n    try {\n      Exception thrown = expectThrows(Exception.class, \"Expected core creation to fail\", () -> {\n        container.create(\"core1\", ImmutableMap.of(\"configSet\", \"nonexistent\"));\n      });\n      Throwable wrappedException = getWrappedException(thrown);\n      assertThat(wrappedException.getMessage(), containsString(\"nonexistent\"));\n    } finally {\n      if (container != null)\n        container.shutdown();\n    }\n  }\n\n","sourceOld":"  @Test\n  public void testNonExistentConfigSetThrowsException() {\n    final CoreContainer container = setupContainer(getFile(\"solr/configsets\").getAbsolutePath());\n    try {\n      Path testDirectory = container.getResourceLoader().getInstancePath();\n\n      Exception thrown = expectThrows(Exception.class, \"Expected core creation to fail\", () -> {\n        container.create(\"core1\", ImmutableMap.of(\"configSet\", \"nonexistent\"));\n      });\n      Throwable wrappedException = getWrappedException(thrown);\n      assertThat(wrappedException.getMessage(), containsString(\"nonexistent\"));\n    } finally {\n      if (container != null)\n        container.shutdown();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"ec5a4e4c455009870c1cb8d21cf6671b8b78d3e3":["68cb00b5f16300efa7bd172de723d9ac91d38cc2"],"11d8a050b7d5f98040f790d32ec1cfd2fc3490e3":["a626ec4d1c92e59fe390724d6220081047b03ce7"],"a626ec4d1c92e59fe390724d6220081047b03ce7":["85032ab568b3f50eabd577aaa994ba197db93758"],"2a0f5bb79c600763ffe7b8141df59a3169d31e48":["2d4e985daefcb892b529223b478c47985fc3c483","1e9ce820cd3ed9efb959c181daaafd22f0c70143"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"68cb00b5f16300efa7bd172de723d9ac91d38cc2":["11d8a050b7d5f98040f790d32ec1cfd2fc3490e3"],"2d4e985daefcb892b529223b478c47985fc3c483":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"1e9ce820cd3ed9efb959c181daaafd22f0c70143":["2d4e985daefcb892b529223b478c47985fc3c483"],"85032ab568b3f50eabd577aaa994ba197db93758":["2a0f5bb79c600763ffe7b8141df59a3169d31e48"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["ec5a4e4c455009870c1cb8d21cf6671b8b78d3e3"]},"commit2Childs":{"ec5a4e4c455009870c1cb8d21cf6671b8b78d3e3":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"11d8a050b7d5f98040f790d32ec1cfd2fc3490e3":["68cb00b5f16300efa7bd172de723d9ac91d38cc2"],"a626ec4d1c92e59fe390724d6220081047b03ce7":["11d8a050b7d5f98040f790d32ec1cfd2fc3490e3"],"2a0f5bb79c600763ffe7b8141df59a3169d31e48":["85032ab568b3f50eabd577aaa994ba197db93758"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["2d4e985daefcb892b529223b478c47985fc3c483"],"68cb00b5f16300efa7bd172de723d9ac91d38cc2":["ec5a4e4c455009870c1cb8d21cf6671b8b78d3e3"],"2d4e985daefcb892b529223b478c47985fc3c483":["2a0f5bb79c600763ffe7b8141df59a3169d31e48","1e9ce820cd3ed9efb959c181daaafd22f0c70143"],"1e9ce820cd3ed9efb959c181daaafd22f0c70143":["2a0f5bb79c600763ffe7b8141df59a3169d31e48"],"85032ab568b3f50eabd577aaa994ba197db93758":["a626ec4d1c92e59fe390724d6220081047b03ce7"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}