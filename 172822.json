{"path":"lucene/core/src/java/org/apache/lucene/codecs/lucene41/Lucene41SkipWriter#bufferSkip(int,int,long,long,int,int).mjava","commits":[{"id":"cf8086c7e11dc41303ef1b8050bd355ddfaee76d","date":1350007219,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/lucene41/Lucene41SkipWriter#bufferSkip(int,int,long,long,int,int).mjava","pathOld":"lucene/codecs/src/java/org/apache/lucene/codecs/block/BlockSkipWriter#bufferSkip(int,int,long,long,int,int).mjava","sourceNew":"  /**\n   * Sets the values for the current skip data. \n   */\n  public void bufferSkip(int doc, int numDocs, long posFP, long payFP, int posBufferUpto, int payloadByteUpto) throws IOException {\n    this.curDoc = doc;\n    this.curDocPointer = docOut.getFilePointer();\n    this.curPosPointer = posFP;\n    this.curPayPointer = payFP;\n    this.curPosBufferUpto = posBufferUpto;\n    this.curPayloadByteUpto = payloadByteUpto;\n    bufferSkip(numDocs);\n  }\n\n","sourceOld":"  /**\n   * Sets the values for the current skip data. \n   */\n  public void bufferSkip(int doc, int numDocs, long posFP, long payFP, int posBufferUpto, int payloadByteUpto) throws IOException {\n    this.curDoc = doc;\n    this.curDocPointer = docOut.getFilePointer();\n    this.curPosPointer = posFP;\n    this.curPayPointer = payFP;\n    this.curPosBufferUpto = posBufferUpto;\n    this.curPayloadByteUpto = payloadByteUpto;\n    bufferSkip(numDocs);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c7492bcb52be51e55d596134b95b2e53cc4ffb91","date":1350223278,"type":1,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/lucene41/Lucene41SkipWriter#bufferSkip(int,int,long,long,int,int).mjava","pathOld":"lucene/codecs/src/java/org/apache/lucene/codecs/block/BlockSkipWriter#bufferSkip(int,int,long,long,int,int).mjava","sourceNew":"  /**\n   * Sets the values for the current skip data. \n   */\n  public void bufferSkip(int doc, int numDocs, long posFP, long payFP, int posBufferUpto, int payloadByteUpto) throws IOException {\n    this.curDoc = doc;\n    this.curDocPointer = docOut.getFilePointer();\n    this.curPosPointer = posFP;\n    this.curPayPointer = payFP;\n    this.curPosBufferUpto = posBufferUpto;\n    this.curPayloadByteUpto = payloadByteUpto;\n    bufferSkip(numDocs);\n  }\n\n","sourceOld":"  /**\n   * Sets the values for the current skip data. \n   */\n  public void bufferSkip(int doc, int numDocs, long posFP, long payFP, int posBufferUpto, int payloadByteUpto) throws IOException {\n    this.curDoc = doc;\n    this.curDocPointer = docOut.getFilePointer();\n    this.curPosPointer = posFP;\n    this.curPayPointer = payFP;\n    this.curPosBufferUpto = posBufferUpto;\n    this.curPayloadByteUpto = payloadByteUpto;\n    bufferSkip(numDocs);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"db4fdbf3d262768eabc027cd8321edca0cd11fa8","date":1350574784,"type":1,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/lucene41/Lucene41SkipWriter#bufferSkip(int,int,long,long,int,int).mjava","pathOld":"lucene/codecs/src/java/org/apache/lucene/codecs/block/BlockSkipWriter#bufferSkip(int,int,long,long,int,int).mjava","sourceNew":"  /**\n   * Sets the values for the current skip data. \n   */\n  public void bufferSkip(int doc, int numDocs, long posFP, long payFP, int posBufferUpto, int payloadByteUpto) throws IOException {\n    this.curDoc = doc;\n    this.curDocPointer = docOut.getFilePointer();\n    this.curPosPointer = posFP;\n    this.curPayPointer = payFP;\n    this.curPosBufferUpto = posBufferUpto;\n    this.curPayloadByteUpto = payloadByteUpto;\n    bufferSkip(numDocs);\n  }\n\n","sourceOld":"  /**\n   * Sets the values for the current skip data. \n   */\n  public void bufferSkip(int doc, int numDocs, long posFP, long payFP, int posBufferUpto, int payloadByteUpto) throws IOException {\n    this.curDoc = doc;\n    this.curDocPointer = docOut.getFilePointer();\n    this.curPosPointer = posFP;\n    this.curPayPointer = payFP;\n    this.curPosBufferUpto = posBufferUpto;\n    this.curPayloadByteUpto = payloadByteUpto;\n    bufferSkip(numDocs);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3f8e9abba2d7f518e6f4f2eac3c8c96b2a312676","date":1398736164,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/lucene41/Lucene41SkipWriter#bufferSkip(int,int,long,long,int,int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/lucene41/Lucene41SkipWriter#bufferSkip(int,int,long,long,int,int).mjava","sourceNew":"  /**\n   * Sets the values for the current skip data. \n   */\n  public void bufferSkip(int doc, int numDocs, long posFP, long payFP, int posBufferUpto, int payloadByteUpto) throws IOException {\n    initSkip();\n    this.curDoc = doc;\n    this.curDocPointer = docOut.getFilePointer();\n    this.curPosPointer = posFP;\n    this.curPayPointer = payFP;\n    this.curPosBufferUpto = posBufferUpto;\n    this.curPayloadByteUpto = payloadByteUpto;\n    bufferSkip(numDocs);\n  }\n\n","sourceOld":"  /**\n   * Sets the values for the current skip data. \n   */\n  public void bufferSkip(int doc, int numDocs, long posFP, long payFP, int posBufferUpto, int payloadByteUpto) throws IOException {\n    this.curDoc = doc;\n    this.curDocPointer = docOut.getFilePointer();\n    this.curPosPointer = posFP;\n    this.curPayPointer = payFP;\n    this.curPosBufferUpto = posBufferUpto;\n    this.curPayloadByteUpto = payloadByteUpto;\n    bufferSkip(numDocs);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3394716f52b34ab259ad5247e7595d9f9db6e935","date":1398791921,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/lucene41/Lucene41SkipWriter#bufferSkip(int,int,long,long,int,int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/lucene41/Lucene41SkipWriter#bufferSkip(int,int,long,long,int,int).mjava","sourceNew":"  /**\n   * Sets the values for the current skip data. \n   */\n  public void bufferSkip(int doc, int numDocs, long posFP, long payFP, int posBufferUpto, int payloadByteUpto) throws IOException {\n    initSkip();\n    this.curDoc = doc;\n    this.curDocPointer = docOut.getFilePointer();\n    this.curPosPointer = posFP;\n    this.curPayPointer = payFP;\n    this.curPosBufferUpto = posBufferUpto;\n    this.curPayloadByteUpto = payloadByteUpto;\n    bufferSkip(numDocs);\n  }\n\n","sourceOld":"  /**\n   * Sets the values for the current skip data. \n   */\n  public void bufferSkip(int doc, int numDocs, long posFP, long payFP, int posBufferUpto, int payloadByteUpto) throws IOException {\n    this.curDoc = doc;\n    this.curDocPointer = docOut.getFilePointer();\n    this.curPosPointer = posFP;\n    this.curPayPointer = payFP;\n    this.curPosBufferUpto = posBufferUpto;\n    this.curPayloadByteUpto = payloadByteUpto;\n    bufferSkip(numDocs);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c0cd85fde84cb318b4dc97710dcf15e2959a1bbe","date":1398844771,"type":3,"author":"Dawid Weiss","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/lucene41/Lucene41SkipWriter#bufferSkip(int,int,long,long,int,int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/lucene41/Lucene41SkipWriter#bufferSkip(int,int,long,long,int,int).mjava","sourceNew":"  /**\n   * Sets the values for the current skip data. \n   */\n  public void bufferSkip(int doc, int numDocs, long posFP, long payFP, int posBufferUpto, int payloadByteUpto) throws IOException {\n    initSkip();\n    this.curDoc = doc;\n    this.curDocPointer = docOut.getFilePointer();\n    this.curPosPointer = posFP;\n    this.curPayPointer = payFP;\n    this.curPosBufferUpto = posBufferUpto;\n    this.curPayloadByteUpto = payloadByteUpto;\n    bufferSkip(numDocs);\n  }\n\n","sourceOld":"  /**\n   * Sets the values for the current skip data. \n   */\n  public void bufferSkip(int doc, int numDocs, long posFP, long payFP, int posBufferUpto, int payloadByteUpto) throws IOException {\n    this.curDoc = doc;\n    this.curDocPointer = docOut.getFilePointer();\n    this.curPosPointer = posFP;\n    this.curPayPointer = payFP;\n    this.curPosBufferUpto = posBufferUpto;\n    this.curPayloadByteUpto = payloadByteUpto;\n    bufferSkip(numDocs);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"99eb4a732d1a908f4636ace52928876136bf1896","date":1413829552,"type":6,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/backward-codecs/src/test/org/apache/lucene/codecs/lucene41/Lucene41SkipWriter#bufferSkip(int,int,long,long,int,int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/lucene41/Lucene41SkipWriter#bufferSkip(int,int,long,long,int,int).mjava","sourceNew":"  /**\n   * Sets the values for the current skip data. \n   */\n  public void bufferSkip(int doc, int numDocs, long posFP, long payFP, int posBufferUpto, int payloadByteUpto) throws IOException {\n    initSkip();\n    this.curDoc = doc;\n    this.curDocPointer = docOut.getFilePointer();\n    this.curPosPointer = posFP;\n    this.curPayPointer = payFP;\n    this.curPosBufferUpto = posBufferUpto;\n    this.curPayloadByteUpto = payloadByteUpto;\n    bufferSkip(numDocs);\n  }\n\n","sourceOld":"  /**\n   * Sets the values for the current skip data. \n   */\n  public void bufferSkip(int doc, int numDocs, long posFP, long payFP, int posBufferUpto, int payloadByteUpto) throws IOException {\n    initSkip();\n    this.curDoc = doc;\n    this.curDocPointer = docOut.getFilePointer();\n    this.curPosPointer = posFP;\n    this.curPayPointer = payFP;\n    this.curPosBufferUpto = posBufferUpto;\n    this.curPayloadByteUpto = payloadByteUpto;\n    bufferSkip(numDocs);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"99eb4a732d1a908f4636ace52928876136bf1896","date":1413829552,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/lucene50/Lucene50SkipWriter#bufferSkip(int,int,long,long,int,int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/lucene41/Lucene41SkipWriter#bufferSkip(int,int,long,long,int,int).mjava","sourceNew":"  /**\n   * Sets the values for the current skip data. \n   */\n  public void bufferSkip(int doc, int numDocs, long posFP, long payFP, int posBufferUpto, int payloadByteUpto) throws IOException {\n    initSkip();\n    this.curDoc = doc;\n    this.curDocPointer = docOut.getFilePointer();\n    this.curPosPointer = posFP;\n    this.curPayPointer = payFP;\n    this.curPosBufferUpto = posBufferUpto;\n    this.curPayloadByteUpto = payloadByteUpto;\n    bufferSkip(numDocs);\n  }\n\n","sourceOld":"  /**\n   * Sets the values for the current skip data. \n   */\n  public void bufferSkip(int doc, int numDocs, long posFP, long payFP, int posBufferUpto, int payloadByteUpto) throws IOException {\n    initSkip();\n    this.curDoc = doc;\n    this.curDocPointer = docOut.getFilePointer();\n    this.curPosPointer = posFP;\n    this.curPayPointer = payFP;\n    this.curPosBufferUpto = posBufferUpto;\n    this.curPayloadByteUpto = payloadByteUpto;\n    bufferSkip(numDocs);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"db68c63cbfaa8698b9c4475f75ed2b9c9696d238","date":1414118621,"type":6,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/backward-codecs/src/test/org/apache/lucene/codecs/lucene41/Lucene41SkipWriter#bufferSkip(int,int,long,long,int,int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/lucene41/Lucene41SkipWriter#bufferSkip(int,int,long,long,int,int).mjava","sourceNew":"  /**\n   * Sets the values for the current skip data. \n   */\n  public void bufferSkip(int doc, int numDocs, long posFP, long payFP, int posBufferUpto, int payloadByteUpto) throws IOException {\n    initSkip();\n    this.curDoc = doc;\n    this.curDocPointer = docOut.getFilePointer();\n    this.curPosPointer = posFP;\n    this.curPayPointer = payFP;\n    this.curPosBufferUpto = posBufferUpto;\n    this.curPayloadByteUpto = payloadByteUpto;\n    bufferSkip(numDocs);\n  }\n\n","sourceOld":"  /**\n   * Sets the values for the current skip data. \n   */\n  public void bufferSkip(int doc, int numDocs, long posFP, long payFP, int posBufferUpto, int payloadByteUpto) throws IOException {\n    initSkip();\n    this.curDoc = doc;\n    this.curDocPointer = docOut.getFilePointer();\n    this.curPosPointer = posFP;\n    this.curPayPointer = payFP;\n    this.curPosBufferUpto = posBufferUpto;\n    this.curPayloadByteUpto = payloadByteUpto;\n    bufferSkip(numDocs);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"db68c63cbfaa8698b9c4475f75ed2b9c9696d238","date":1414118621,"type":5,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/lucene50/Lucene50SkipWriter#bufferSkip(int,int,long,long,int,int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/lucene41/Lucene41SkipWriter#bufferSkip(int,int,long,long,int,int).mjava","sourceNew":"  /**\n   * Sets the values for the current skip data. \n   */\n  public void bufferSkip(int doc, int numDocs, long posFP, long payFP, int posBufferUpto, int payloadByteUpto) throws IOException {\n    initSkip();\n    this.curDoc = doc;\n    this.curDocPointer = docOut.getFilePointer();\n    this.curPosPointer = posFP;\n    this.curPayPointer = payFP;\n    this.curPosBufferUpto = posBufferUpto;\n    this.curPayloadByteUpto = payloadByteUpto;\n    bufferSkip(numDocs);\n  }\n\n","sourceOld":"  /**\n   * Sets the values for the current skip data. \n   */\n  public void bufferSkip(int doc, int numDocs, long posFP, long payFP, int posBufferUpto, int payloadByteUpto) throws IOException {\n    initSkip();\n    this.curDoc = doc;\n    this.curDocPointer = docOut.getFilePointer();\n    this.curPosPointer = posFP;\n    this.curPayPointer = payFP;\n    this.curPosBufferUpto = posBufferUpto;\n    this.curPayloadByteUpto = payloadByteUpto;\n    bufferSkip(numDocs);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3394716f52b34ab259ad5247e7595d9f9db6e935":["c7492bcb52be51e55d596134b95b2e53cc4ffb91","3f8e9abba2d7f518e6f4f2eac3c8c96b2a312676"],"c7492bcb52be51e55d596134b95b2e53cc4ffb91":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","cf8086c7e11dc41303ef1b8050bd355ddfaee76d"],"99eb4a732d1a908f4636ace52928876136bf1896":["3394716f52b34ab259ad5247e7595d9f9db6e935"],"c0cd85fde84cb318b4dc97710dcf15e2959a1bbe":["c7492bcb52be51e55d596134b95b2e53cc4ffb91","3394716f52b34ab259ad5247e7595d9f9db6e935"],"cf8086c7e11dc41303ef1b8050bd355ddfaee76d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"db4fdbf3d262768eabc027cd8321edca0cd11fa8":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","c7492bcb52be51e55d596134b95b2e53cc4ffb91"],"db68c63cbfaa8698b9c4475f75ed2b9c9696d238":["3394716f52b34ab259ad5247e7595d9f9db6e935","99eb4a732d1a908f4636ace52928876136bf1896"],"3f8e9abba2d7f518e6f4f2eac3c8c96b2a312676":["c7492bcb52be51e55d596134b95b2e53cc4ffb91"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["db68c63cbfaa8698b9c4475f75ed2b9c9696d238"]},"commit2Childs":{"3394716f52b34ab259ad5247e7595d9f9db6e935":["99eb4a732d1a908f4636ace52928876136bf1896","c0cd85fde84cb318b4dc97710dcf15e2959a1bbe","db68c63cbfaa8698b9c4475f75ed2b9c9696d238"],"c7492bcb52be51e55d596134b95b2e53cc4ffb91":["3394716f52b34ab259ad5247e7595d9f9db6e935","c0cd85fde84cb318b4dc97710dcf15e2959a1bbe","db4fdbf3d262768eabc027cd8321edca0cd11fa8","3f8e9abba2d7f518e6f4f2eac3c8c96b2a312676"],"99eb4a732d1a908f4636ace52928876136bf1896":["db68c63cbfaa8698b9c4475f75ed2b9c9696d238"],"c0cd85fde84cb318b4dc97710dcf15e2959a1bbe":[],"cf8086c7e11dc41303ef1b8050bd355ddfaee76d":["c7492bcb52be51e55d596134b95b2e53cc4ffb91"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c7492bcb52be51e55d596134b95b2e53cc4ffb91","cf8086c7e11dc41303ef1b8050bd355ddfaee76d","db4fdbf3d262768eabc027cd8321edca0cd11fa8"],"db4fdbf3d262768eabc027cd8321edca0cd11fa8":[],"db68c63cbfaa8698b9c4475f75ed2b9c9696d238":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3f8e9abba2d7f518e6f4f2eac3c8c96b2a312676":["3394716f52b34ab259ad5247e7595d9f9db6e935"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["c0cd85fde84cb318b4dc97710dcf15e2959a1bbe","db4fdbf3d262768eabc027cd8321edca0cd11fa8","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}