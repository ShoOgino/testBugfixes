{"path":"lucene/core/src/java/org/apache/lucene/codecs/temp/TempBlockTermsReader.Stats#endBlock(FieldReader.SegmentTermsEnum.Frame).mjava","commits":[{"id":"0a570bec4aec8585a4eea44849bfb2bc264208c4","date":1371308653,"type":0,"author":"Han Jiang","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/temp/TempBlockTermsReader.Stats#endBlock(FieldReader.SegmentTermsEnum.Frame).mjava","pathOld":"/dev/null","sourceNew":"    void endBlock(FieldReader.SegmentTermsEnum.Frame frame) {\n      final int termCount = frame.isLeafBlock ? frame.entCount : frame.state.termBlockOrd;\n      final int subBlockCount = frame.entCount - termCount;\n      totalTermCount += termCount;\n      if (termCount != 0 && subBlockCount != 0) {\n        mixedBlockCount++;\n      } else if (termCount != 0) {\n        termsOnlyBlockCount++;\n      } else if (subBlockCount != 0) {\n        subBlocksOnlyBlockCount++;\n      } else {\n        throw new IllegalStateException();\n      }\n      endBlockCount++;\n      final long otherBytes = frame.fpEnd - frame.fp - frame.suffixesReader.length() - frame.statsReader.length();\n      assert otherBytes > 0 : \"otherBytes=\" + otherBytes + \" frame.fp=\" + frame.fp + \" frame.fpEnd=\" + frame.fpEnd;\n      totalBlockOtherBytes += otherBytes;\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6d01ed6d1df51191983f4dd157aedf5f4650e2b3","date":1376572546,"type":5,"author":"Han Jiang","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/temp/TempBlockTreeTermsReader.Stats#endBlock(FieldReader.SegmentTermsEnum.Frame).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/temp/TempBlockTermsReader.Stats#endBlock(FieldReader.SegmentTermsEnum.Frame).mjava","sourceNew":"    void endBlock(FieldReader.SegmentTermsEnum.Frame frame) {\n      final int termCount = frame.isLeafBlock ? frame.entCount : frame.state.termBlockOrd;\n      final int subBlockCount = frame.entCount - termCount;\n      totalTermCount += termCount;\n      if (termCount != 0 && subBlockCount != 0) {\n        mixedBlockCount++;\n      } else if (termCount != 0) {\n        termsOnlyBlockCount++;\n      } else if (subBlockCount != 0) {\n        subBlocksOnlyBlockCount++;\n      } else {\n        throw new IllegalStateException();\n      }\n      endBlockCount++;\n      final long otherBytes = frame.fpEnd - frame.fp - frame.suffixesReader.length() - frame.statsReader.length();\n      assert otherBytes > 0 : \"otherBytes=\" + otherBytes + \" frame.fp=\" + frame.fp + \" frame.fpEnd=\" + frame.fpEnd;\n      totalBlockOtherBytes += otherBytes;\n    }\n\n","sourceOld":"    void endBlock(FieldReader.SegmentTermsEnum.Frame frame) {\n      final int termCount = frame.isLeafBlock ? frame.entCount : frame.state.termBlockOrd;\n      final int subBlockCount = frame.entCount - termCount;\n      totalTermCount += termCount;\n      if (termCount != 0 && subBlockCount != 0) {\n        mixedBlockCount++;\n      } else if (termCount != 0) {\n        termsOnlyBlockCount++;\n      } else if (subBlockCount != 0) {\n        subBlocksOnlyBlockCount++;\n      } else {\n        throw new IllegalStateException();\n      }\n      endBlockCount++;\n      final long otherBytes = frame.fpEnd - frame.fp - frame.suffixesReader.length() - frame.statsReader.length();\n      assert otherBytes > 0 : \"otherBytes=\" + otherBytes + \" frame.fp=\" + frame.fp + \" frame.fpEnd=\" + frame.fpEnd;\n      totalBlockOtherBytes += otherBytes;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"0a570bec4aec8585a4eea44849bfb2bc264208c4":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"6d01ed6d1df51191983f4dd157aedf5f4650e2b3":["0a570bec4aec8585a4eea44849bfb2bc264208c4"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"0a570bec4aec8585a4eea44849bfb2bc264208c4":["6d01ed6d1df51191983f4dd157aedf5f4650e2b3"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["0a570bec4aec8585a4eea44849bfb2bc264208c4","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"6d01ed6d1df51191983f4dd157aedf5f4650e2b3":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["6d01ed6d1df51191983f4dd157aedf5f4650e2b3","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}