{"path":"solr/solrj/src/test/org/apache/solr/client/solrj/request/TestCollectionAdminRequest#testInvalidShardNameRejectedWhenCreatingShard().mjava","commits":[{"id":"cbd8af67010775ee4b53c58597a30bbe480707ee","date":1455837524,"type":0,"author":"anshum","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/request/TestCollectionAdminRequest#testInvalidShardNameRejectedWhenCreatingShard().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testInvalidShardNameRejectedWhenCreatingShard() {\n    final CreateShard createShardRequest = new CreateShard();\n    try {\n      createShardRequest.setShardName(\"invalid$shard@name\");\n      fail();\n    } catch (IllegalArgumentException e) {\n      final String exceptionMessage = e.getMessage();\n      assertTrue(exceptionMessage.contains(\"Invalid shard\"));\n      assertTrue(exceptionMessage.contains(\"invalid$shard@name\"));\n      assertTrue(exceptionMessage.contains(\"must consist entirely of periods, underscores, and alphanumerics\"));\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"06043fcf612d2cd93636c22cd062e0641406b417","date":1455841699,"type":0,"author":"Noble Paul","isMerge":true,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/request/TestCollectionAdminRequest#testInvalidShardNameRejectedWhenCreatingShard().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testInvalidShardNameRejectedWhenCreatingShard() {\n    final CreateShard createShardRequest = new CreateShard();\n    try {\n      createShardRequest.setShardName(\"invalid$shard@name\");\n      fail();\n    } catch (IllegalArgumentException e) {\n      final String exceptionMessage = e.getMessage();\n      assertTrue(exceptionMessage.contains(\"Invalid shard\"));\n      assertTrue(exceptionMessage.contains(\"invalid$shard@name\"));\n      assertTrue(exceptionMessage.contains(\"must consist entirely of periods, underscores, and alphanumerics\"));\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a839eb6696740aa302262e32e6f45b5e70b47bff","date":1457028247,"type":3,"author":"anshum","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/request/TestCollectionAdminRequest#testInvalidShardNameRejectedWhenCreatingShard().mjava","pathOld":"solr/solrj/src/test/org/apache/solr/client/solrj/request/TestCollectionAdminRequest#testInvalidShardNameRejectedWhenCreatingShard().mjava","sourceNew":"  @Test\n  public void testInvalidShardNameRejectedWhenCreatingShard() {\n    final CreateShard createShardRequest = new CreateShard();\n    try {\n      createShardRequest.setShardName(\"invalid$shard@name\");\n      fail();\n    } catch (IllegalArgumentException e) {\n      final String exceptionMessage = e.getMessage();\n      assertTrue(exceptionMessage.contains(\"Invalid shard\"));\n      assertTrue(exceptionMessage.contains(\"invalid$shard@name\"));\n      assertTrue(exceptionMessage.contains(\"must consist entirely of periods, underscores, hyphens, and alphanumerics\"));\n    }\n  }\n\n","sourceOld":"  @Test\n  public void testInvalidShardNameRejectedWhenCreatingShard() {\n    final CreateShard createShardRequest = new CreateShard();\n    try {\n      createShardRequest.setShardName(\"invalid$shard@name\");\n      fail();\n    } catch (IllegalArgumentException e) {\n      final String exceptionMessage = e.getMessage();\n      assertTrue(exceptionMessage.contains(\"Invalid shard\"));\n      assertTrue(exceptionMessage.contains(\"invalid$shard@name\"));\n      assertTrue(exceptionMessage.contains(\"must consist entirely of periods, underscores, and alphanumerics\"));\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"cf1a614098b46c9c22afebd7b898ae4d1d2fc273","date":1457088850,"type":3,"author":"Noble Paul","isMerge":true,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/request/TestCollectionAdminRequest#testInvalidShardNameRejectedWhenCreatingShard().mjava","pathOld":"solr/solrj/src/test/org/apache/solr/client/solrj/request/TestCollectionAdminRequest#testInvalidShardNameRejectedWhenCreatingShard().mjava","sourceNew":"  @Test\n  public void testInvalidShardNameRejectedWhenCreatingShard() {\n    final CreateShard createShardRequest = new CreateShard();\n    try {\n      createShardRequest.setShardName(\"invalid$shard@name\");\n      fail();\n    } catch (IllegalArgumentException e) {\n      final String exceptionMessage = e.getMessage();\n      assertTrue(exceptionMessage.contains(\"Invalid shard\"));\n      assertTrue(exceptionMessage.contains(\"invalid$shard@name\"));\n      assertTrue(exceptionMessage.contains(\"must consist entirely of periods, underscores, hyphens, and alphanumerics\"));\n    }\n  }\n\n","sourceOld":"  @Test\n  public void testInvalidShardNameRejectedWhenCreatingShard() {\n    final CreateShard createShardRequest = new CreateShard();\n    try {\n      createShardRequest.setShardName(\"invalid$shard@name\");\n      fail();\n    } catch (IllegalArgumentException e) {\n      final String exceptionMessage = e.getMessage();\n      assertTrue(exceptionMessage.contains(\"Invalid shard\"));\n      assertTrue(exceptionMessage.contains(\"invalid$shard@name\"));\n      assertTrue(exceptionMessage.contains(\"must consist entirely of periods, underscores, and alphanumerics\"));\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1223af4d627bf4c69c653e7617110e161a39d3e8","date":1457558158,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/request/TestCollectionAdminRequest#testInvalidShardNameRejectedWhenCreatingShard().mjava","pathOld":"solr/solrj/src/test/org/apache/solr/client/solrj/request/TestCollectionAdminRequest#testInvalidShardNameRejectedWhenCreatingShard().mjava","sourceNew":"  @Test\n  public void testInvalidShardNameRejectedWhenCreatingShard() {\n    final CreateShard createShardRequest = new CreateShard();\n    try {\n      createShardRequest.setShardName(\"invalid$shard@name\");\n      fail();\n    } catch (SolrException e) {\n      final String exceptionMessage = e.getMessage();\n      assertTrue(exceptionMessage.contains(\"Invalid shard\"));\n      assertTrue(exceptionMessage.contains(\"invalid$shard@name\"));\n      assertTrue(exceptionMessage.contains(\"must consist entirely of periods, underscores, hyphens, and alphanumerics\"));\n    }\n  }\n\n","sourceOld":"  @Test\n  public void testInvalidShardNameRejectedWhenCreatingShard() {\n    final CreateShard createShardRequest = new CreateShard();\n    try {\n      createShardRequest.setShardName(\"invalid$shard@name\");\n      fail();\n    } catch (IllegalArgumentException e) {\n      final String exceptionMessage = e.getMessage();\n      assertTrue(exceptionMessage.contains(\"Invalid shard\"));\n      assertTrue(exceptionMessage.contains(\"invalid$shard@name\"));\n      assertTrue(exceptionMessage.contains(\"must consist entirely of periods, underscores, hyphens, and alphanumerics\"));\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ac97ea104d893f16aab430d9904473bc1f233f3c","date":1496249396,"type":3,"author":"Chris Hostetter","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/request/TestCollectionAdminRequest#testInvalidShardNameRejectedWhenCreatingShard().mjava","pathOld":"solr/solrj/src/test/org/apache/solr/client/solrj/request/TestCollectionAdminRequest#testInvalidShardNameRejectedWhenCreatingShard().mjava","sourceNew":"  @Test\n  public void testInvalidShardNameRejectedWhenCreatingShard() {\n    final SolrException e = expectThrows(SolrException.class, () -> {\n        CreateShard createShardRequest = CollectionAdminRequest.createShard(\"ignored\",\"invalid$shard@name\");\n      });\n    final String exceptionMessage = e.getMessage();\n    assertTrue(exceptionMessage.contains(\"Invalid shard\"));\n    assertTrue(exceptionMessage.contains(\"invalid$shard@name\"));\n    assertTrue(exceptionMessage.contains(\"must consist entirely of periods, underscores, hyphens, and alphanumerics\"));\n  }\n\n","sourceOld":"  @Test\n  public void testInvalidShardNameRejectedWhenCreatingShard() {\n    final CreateShard createShardRequest = new CreateShard();\n    try {\n      createShardRequest.setShardName(\"invalid$shard@name\");\n      fail();\n    } catch (SolrException e) {\n      final String exceptionMessage = e.getMessage();\n      assertTrue(exceptionMessage.contains(\"Invalid shard\"));\n      assertTrue(exceptionMessage.contains(\"invalid$shard@name\"));\n      assertTrue(exceptionMessage.contains(\"must consist entirely of periods, underscores, hyphens, and alphanumerics\"));\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3217321f3e1d7922898c6c633d17acfa840d6875","date":1496257480,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/request/TestCollectionAdminRequest#testInvalidShardNameRejectedWhenCreatingShard().mjava","pathOld":"solr/solrj/src/test/org/apache/solr/client/solrj/request/TestCollectionAdminRequest#testInvalidShardNameRejectedWhenCreatingShard().mjava","sourceNew":"  @Test\n  public void testInvalidShardNameRejectedWhenCreatingShard() {\n    final SolrException e = expectThrows(SolrException.class, () -> {\n        CreateShard createShardRequest = CollectionAdminRequest.createShard(\"ignored\",\"invalid$shard@name\");\n      });\n    final String exceptionMessage = e.getMessage();\n    assertTrue(exceptionMessage.contains(\"Invalid shard\"));\n    assertTrue(exceptionMessage.contains(\"invalid$shard@name\"));\n    assertTrue(exceptionMessage.contains(\"must consist entirely of periods, underscores, hyphens, and alphanumerics\"));\n  }\n\n","sourceOld":"  @Test\n  public void testInvalidShardNameRejectedWhenCreatingShard() {\n    final CreateShard createShardRequest = new CreateShard();\n    try {\n      createShardRequest.setShardName(\"invalid$shard@name\");\n      fail();\n    } catch (SolrException e) {\n      final String exceptionMessage = e.getMessage();\n      assertTrue(exceptionMessage.contains(\"Invalid shard\"));\n      assertTrue(exceptionMessage.contains(\"invalid$shard@name\"));\n      assertTrue(exceptionMessage.contains(\"must consist entirely of periods, underscores, hyphens, and alphanumerics\"));\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"42dc7f2d60851668d9efa2d12baa1d4ebe54b12f","date":1496281877,"type":3,"author":"Cao Manh Dat","isMerge":true,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/request/TestCollectionAdminRequest#testInvalidShardNameRejectedWhenCreatingShard().mjava","pathOld":"solr/solrj/src/test/org/apache/solr/client/solrj/request/TestCollectionAdminRequest#testInvalidShardNameRejectedWhenCreatingShard().mjava","sourceNew":"  @Test\n  public void testInvalidShardNameRejectedWhenCreatingShard() {\n    final SolrException e = expectThrows(SolrException.class, () -> {\n        CreateShard createShardRequest = CollectionAdminRequest.createShard(\"ignored\",\"invalid$shard@name\");\n      });\n    final String exceptionMessage = e.getMessage();\n    assertTrue(exceptionMessage.contains(\"Invalid shard\"));\n    assertTrue(exceptionMessage.contains(\"invalid$shard@name\"));\n    assertTrue(exceptionMessage.contains(\"must consist entirely of periods, underscores, hyphens, and alphanumerics\"));\n  }\n\n","sourceOld":"  @Test\n  public void testInvalidShardNameRejectedWhenCreatingShard() {\n    final CreateShard createShardRequest = new CreateShard();\n    try {\n      createShardRequest.setShardName(\"invalid$shard@name\");\n      fail();\n    } catch (SolrException e) {\n      final String exceptionMessage = e.getMessage();\n      assertTrue(exceptionMessage.contains(\"Invalid shard\"));\n      assertTrue(exceptionMessage.contains(\"invalid$shard@name\"));\n      assertTrue(exceptionMessage.contains(\"must consist entirely of periods, underscores, hyphens, and alphanumerics\"));\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e9017cf144952056066919f1ebc7897ff9bd71b1","date":1496757600,"type":3,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/request/TestCollectionAdminRequest#testInvalidShardNameRejectedWhenCreatingShard().mjava","pathOld":"solr/solrj/src/test/org/apache/solr/client/solrj/request/TestCollectionAdminRequest#testInvalidShardNameRejectedWhenCreatingShard().mjava","sourceNew":"  @Test\n  public void testInvalidShardNameRejectedWhenCreatingShard() {\n    final SolrException e = expectThrows(SolrException.class, () -> {\n        CreateShard createShardRequest = CollectionAdminRequest.createShard(\"ignored\",\"invalid$shard@name\");\n      });\n    final String exceptionMessage = e.getMessage();\n    assertTrue(exceptionMessage.contains(\"Invalid shard\"));\n    assertTrue(exceptionMessage.contains(\"invalid$shard@name\"));\n    assertTrue(exceptionMessage.contains(\"must consist entirely of periods, underscores, hyphens, and alphanumerics\"));\n  }\n\n","sourceOld":"  @Test\n  public void testInvalidShardNameRejectedWhenCreatingShard() {\n    final CreateShard createShardRequest = new CreateShard();\n    try {\n      createShardRequest.setShardName(\"invalid$shard@name\");\n      fail();\n    } catch (SolrException e) {\n      final String exceptionMessage = e.getMessage();\n      assertTrue(exceptionMessage.contains(\"Invalid shard\"));\n      assertTrue(exceptionMessage.contains(\"invalid$shard@name\"));\n      assertTrue(exceptionMessage.contains(\"must consist entirely of periods, underscores, hyphens, and alphanumerics\"));\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cba13865da71de3b9b0937fcbc66d726089356d","date":1537507909,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/request/TestCollectionAdminRequest#testInvalidShardNameRejectedWhenCreatingShard().mjava","pathOld":"solr/solrj/src/test/org/apache/solr/client/solrj/request/TestCollectionAdminRequest#testInvalidShardNameRejectedWhenCreatingShard().mjava","sourceNew":"  @Test\n  @BadApple(bugUrl=\"https://issues.apache.org/jira/browse/SOLR-12028\") // added 20-Sep-2018\n  public void testInvalidShardNameRejectedWhenCreatingShard() {\n    final SolrException e = expectThrows(SolrException.class, () -> {\n        CreateShard createShardRequest = CollectionAdminRequest.createShard(\"ignored\",\"invalid$shard@name\");\n      });\n    final String exceptionMessage = e.getMessage();\n    assertTrue(exceptionMessage.contains(\"Invalid shard\"));\n    assertTrue(exceptionMessage.contains(\"invalid$shard@name\"));\n    assertTrue(exceptionMessage.contains(\"must consist entirely of periods, underscores, hyphens, and alphanumerics\"));\n  }\n\n","sourceOld":"  @Test\n  public void testInvalidShardNameRejectedWhenCreatingShard() {\n    final SolrException e = expectThrows(SolrException.class, () -> {\n        CreateShard createShardRequest = CollectionAdminRequest.createShard(\"ignored\",\"invalid$shard@name\");\n      });\n    final String exceptionMessage = e.getMessage();\n    assertTrue(exceptionMessage.contains(\"Invalid shard\"));\n    assertTrue(exceptionMessage.contains(\"invalid$shard@name\"));\n    assertTrue(exceptionMessage.contains(\"must consist entirely of periods, underscores, hyphens, and alphanumerics\"));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8d35c84fdef07284c122012ca4000d3b7285a66e","date":1545962630,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/request/TestCollectionAdminRequest#testInvalidShardNameRejectedWhenCreatingShard().mjava","pathOld":"solr/solrj/src/test/org/apache/solr/client/solrj/request/TestCollectionAdminRequest#testInvalidShardNameRejectedWhenCreatingShard().mjava","sourceNew":"  @Test\n  // commented out on: 24-Dec-2018   @BadApple(bugUrl=\"https://issues.apache.org/jira/browse/SOLR-12028\") // added 20-Sep-2018\n  public void testInvalidShardNameRejectedWhenCreatingShard() {\n    final SolrException e = expectThrows(SolrException.class, () -> {\n        CreateShard createShardRequest = CollectionAdminRequest.createShard(\"ignored\",\"invalid$shard@name\");\n      });\n    final String exceptionMessage = e.getMessage();\n    assertTrue(exceptionMessage.contains(\"Invalid shard\"));\n    assertTrue(exceptionMessage.contains(\"invalid$shard@name\"));\n    assertTrue(exceptionMessage.contains(\"must consist entirely of periods, underscores, hyphens, and alphanumerics\"));\n  }\n\n","sourceOld":"  @Test\n  @BadApple(bugUrl=\"https://issues.apache.org/jira/browse/SOLR-12028\") // added 20-Sep-2018\n  public void testInvalidShardNameRejectedWhenCreatingShard() {\n    final SolrException e = expectThrows(SolrException.class, () -> {\n        CreateShard createShardRequest = CollectionAdminRequest.createShard(\"ignored\",\"invalid$shard@name\");\n      });\n    final String exceptionMessage = e.getMessage();\n    assertTrue(exceptionMessage.contains(\"Invalid shard\"));\n    assertTrue(exceptionMessage.contains(\"invalid$shard@name\"));\n    assertTrue(exceptionMessage.contains(\"must consist entirely of periods, underscores, hyphens, and alphanumerics\"));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"ac97ea104d893f16aab430d9904473bc1f233f3c":["1223af4d627bf4c69c653e7617110e161a39d3e8"],"3217321f3e1d7922898c6c633d17acfa840d6875":["1223af4d627bf4c69c653e7617110e161a39d3e8","ac97ea104d893f16aab430d9904473bc1f233f3c"],"42dc7f2d60851668d9efa2d12baa1d4ebe54b12f":["1223af4d627bf4c69c653e7617110e161a39d3e8","3217321f3e1d7922898c6c633d17acfa840d6875"],"8d35c84fdef07284c122012ca4000d3b7285a66e":["4cba13865da71de3b9b0937fcbc66d726089356d"],"e9017cf144952056066919f1ebc7897ff9bd71b1":["1223af4d627bf4c69c653e7617110e161a39d3e8","42dc7f2d60851668d9efa2d12baa1d4ebe54b12f"],"a839eb6696740aa302262e32e6f45b5e70b47bff":["06043fcf612d2cd93636c22cd062e0641406b417"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"4cba13865da71de3b9b0937fcbc66d726089356d":["3217321f3e1d7922898c6c633d17acfa840d6875"],"cf1a614098b46c9c22afebd7b898ae4d1d2fc273":["06043fcf612d2cd93636c22cd062e0641406b417","a839eb6696740aa302262e32e6f45b5e70b47bff"],"1223af4d627bf4c69c653e7617110e161a39d3e8":["cf1a614098b46c9c22afebd7b898ae4d1d2fc273"],"06043fcf612d2cd93636c22cd062e0641406b417":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","cbd8af67010775ee4b53c58597a30bbe480707ee"],"cbd8af67010775ee4b53c58597a30bbe480707ee":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["8d35c84fdef07284c122012ca4000d3b7285a66e"]},"commit2Childs":{"ac97ea104d893f16aab430d9904473bc1f233f3c":["3217321f3e1d7922898c6c633d17acfa840d6875"],"3217321f3e1d7922898c6c633d17acfa840d6875":["42dc7f2d60851668d9efa2d12baa1d4ebe54b12f","4cba13865da71de3b9b0937fcbc66d726089356d"],"42dc7f2d60851668d9efa2d12baa1d4ebe54b12f":["e9017cf144952056066919f1ebc7897ff9bd71b1"],"8d35c84fdef07284c122012ca4000d3b7285a66e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"e9017cf144952056066919f1ebc7897ff9bd71b1":[],"a839eb6696740aa302262e32e6f45b5e70b47bff":["cf1a614098b46c9c22afebd7b898ae4d1d2fc273"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["06043fcf612d2cd93636c22cd062e0641406b417","cbd8af67010775ee4b53c58597a30bbe480707ee"],"4cba13865da71de3b9b0937fcbc66d726089356d":["8d35c84fdef07284c122012ca4000d3b7285a66e"],"cf1a614098b46c9c22afebd7b898ae4d1d2fc273":["1223af4d627bf4c69c653e7617110e161a39d3e8"],"1223af4d627bf4c69c653e7617110e161a39d3e8":["ac97ea104d893f16aab430d9904473bc1f233f3c","3217321f3e1d7922898c6c633d17acfa840d6875","42dc7f2d60851668d9efa2d12baa1d4ebe54b12f","e9017cf144952056066919f1ebc7897ff9bd71b1"],"06043fcf612d2cd93636c22cd062e0641406b417":["a839eb6696740aa302262e32e6f45b5e70b47bff","cf1a614098b46c9c22afebd7b898ae4d1d2fc273"],"cbd8af67010775ee4b53c58597a30bbe480707ee":["06043fcf612d2cd93636c22cd062e0641406b417"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["e9017cf144952056066919f1ebc7897ff9bd71b1","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}