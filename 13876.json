{"path":"src/java/org/apache/lucene/analysis/CharArraySet#CharArraySet(int,boolean).mjava","commits":[{"id":"6864413dbc0c12104c978c05456f3da1d45adb03","date":1186770873,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/analysis/CharArraySet#CharArraySet(int,boolean).mjava","pathOld":"/dev/null","sourceNew":"  /** Create set with enough capacity to hold startSize\n   *  terms */\n  public CharArraySet(int startSize, boolean ignoreCase) {\n    this.ignoreCase = ignoreCase;\n    int size = INIT_SIZE;\n    while(((double) startSize)/size >= MAX_LOAD_FACTOR)\n      size *= 2;\n    mask = size-1;\n    entries = new char[size][];\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"050b03edbe9b8423ff4c09685c6f03d900e86b83","date":1195514584,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"src/java/org/apache/lucene/analysis/CharArraySet#CharArraySet(int,boolean).mjava","pathOld":"src/java/org/apache/lucene/analysis/CharArraySet#CharArraySet(int,boolean).mjava","sourceNew":"  /** Create set with enough capacity to hold startSize\n   *  terms */\n  public CharArraySet(int startSize, boolean ignoreCase) {\n    this.ignoreCase = ignoreCase;\n    int size = INIT_SIZE;\n    while(startSize + (startSize>>2) > size)\n      size <<= 1;\n    entries = new char[size][];\n  }\n\n","sourceOld":"  /** Create set with enough capacity to hold startSize\n   *  terms */\n  public CharArraySet(int startSize, boolean ignoreCase) {\n    this.ignoreCase = ignoreCase;\n    int size = INIT_SIZE;\n    while(((double) startSize)/size >= MAX_LOAD_FACTOR)\n      size *= 2;\n    mask = size-1;\n    entries = new char[size][];\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7f6c85ffa816c86be877aa7a5029a5daa1336e7f","date":1259617761,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/java/org/apache/lucene/analysis/CharArraySet#CharArraySet(int,boolean).mjava","pathOld":"src/java/org/apache/lucene/analysis/CharArraySet#CharArraySet(int,boolean).mjava","sourceNew":"  /**\n   * Creates a set with enough capacity to hold startSize terms\n   * \n   * @param startSize\n   *          the initial capacity\n   * @param ignoreCase\n   *          <code>false</code> if and only if the set should be case sensitive\n   *          otherwise <code>true</code>.\n   * @deprecated use {@link #CharArraySet(Version, int, boolean)} instead\n   */\n  public CharArraySet(int startSize, boolean ignoreCase) {\n    this(Version.LUCENE_30, startSize, ignoreCase);\n  }\n\n","sourceOld":"  /** Create set with enough capacity to hold startSize\n   *  terms */\n  public CharArraySet(int startSize, boolean ignoreCase) {\n    this.ignoreCase = ignoreCase;\n    int size = INIT_SIZE;\n    while(startSize + (startSize>>2) > size)\n      size <<= 1;\n    entries = new char[size][];\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5384d626ad24f6a1d56141ba6b0b144d1b2eafc5","date":1262514702,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"src/java/org/apache/lucene/analysis/CharArraySet#CharArraySet(int,boolean).mjava","pathOld":"src/java/org/apache/lucene/analysis/CharArraySet#CharArraySet(int,boolean).mjava","sourceNew":"  /**\n   * Creates a set with enough capacity to hold startSize terms\n   * \n   * @param startSize\n   *          the initial capacity\n   * @param ignoreCase\n   *          <code>false</code> if and only if the set should be case sensitive\n   *          otherwise <code>true</code>.\n   * @deprecated use {@link #CharArraySet(Version, int, boolean)} instead\n   */\n  @Deprecated\n  public CharArraySet(int startSize, boolean ignoreCase) {\n    this(Version.LUCENE_30, startSize, ignoreCase);\n  }\n\n","sourceOld":"  /**\n   * Creates a set with enough capacity to hold startSize terms\n   * \n   * @param startSize\n   *          the initial capacity\n   * @param ignoreCase\n   *          <code>false</code> if and only if the set should be case sensitive\n   *          otherwise <code>true</code>.\n   * @deprecated use {@link #CharArraySet(Version, int, boolean)} instead\n   */\n  public CharArraySet(int startSize, boolean ignoreCase) {\n    this(Version.LUCENE_30, startSize, ignoreCase);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/analysis/CharArraySet#CharArraySet(int,boolean).mjava","pathOld":"src/java/org/apache/lucene/analysis/CharArraySet#CharArraySet(int,boolean).mjava","sourceNew":"  /**\n   * Creates a set with enough capacity to hold startSize terms\n   * \n   * @param startSize\n   *          the initial capacity\n   * @param ignoreCase\n   *          <code>false</code> if and only if the set should be case sensitive\n   *          otherwise <code>true</code>.\n   * @deprecated use {@link #CharArraySet(Version, int, boolean)} instead\n   */\n  @Deprecated\n  public CharArraySet(int startSize, boolean ignoreCase) {\n    this(Version.LUCENE_30, startSize, ignoreCase);\n  }\n\n","sourceOld":"  /**\n   * Creates a set with enough capacity to hold startSize terms\n   * \n   * @param startSize\n   *          the initial capacity\n   * @param ignoreCase\n   *          <code>false</code> if and only if the set should be case sensitive\n   *          otherwise <code>true</code>.\n   * @deprecated use {@link #CharArraySet(Version, int, boolean)} instead\n   */\n  @Deprecated\n  public CharArraySet(int startSize, boolean ignoreCase) {\n    this(Version.LUCENE_30, startSize, ignoreCase);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"5384d626ad24f6a1d56141ba6b0b144d1b2eafc5":["7f6c85ffa816c86be877aa7a5029a5daa1336e7f"],"6864413dbc0c12104c978c05456f3da1d45adb03":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"050b03edbe9b8423ff4c09685c6f03d900e86b83":["6864413dbc0c12104c978c05456f3da1d45adb03"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["5384d626ad24f6a1d56141ba6b0b144d1b2eafc5"],"7f6c85ffa816c86be877aa7a5029a5daa1336e7f":["050b03edbe9b8423ff4c09685c6f03d900e86b83"]},"commit2Childs":{"5384d626ad24f6a1d56141ba6b0b144d1b2eafc5":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"6864413dbc0c12104c978c05456f3da1d45adb03":["050b03edbe9b8423ff4c09685c6f03d900e86b83"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["6864413dbc0c12104c978c05456f3da1d45adb03"],"050b03edbe9b8423ff4c09685c6f03d900e86b83":["7f6c85ffa816c86be877aa7a5029a5daa1336e7f"],"7f6c85ffa816c86be877aa7a5029a5daa1336e7f":["5384d626ad24f6a1d56141ba6b0b144d1b2eafc5"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}