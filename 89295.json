{"path":"lucene/src/java/org/apache/lucene/index/Term#equals(Object).mjava","commits":[{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/Term#equals(Object).mjava","pathOld":"src/java/org/apache/lucene/index/Term#equals(Object).mjava","sourceNew":"  @Override\n  public boolean equals(Object obj) {\n    if (this == obj)\n      return true;\n    if (obj == null)\n      return false;\n    if (getClass() != obj.getClass())\n      return false;\n    Term other = (Term) obj;\n    if (field == null) {\n      if (other.field != null)\n        return false;\n    } else if (!field.equals(other.field))\n      return false;\n    if (text == null) {\n      if (other.text != null)\n        return false;\n    } else if (!text.equals(other.text))\n      return false;\n    return true;\n  }\n\n","sourceOld":"  @Override\n  public boolean equals(Object obj) {\n    if (this == obj)\n      return true;\n    if (obj == null)\n      return false;\n    if (getClass() != obj.getClass())\n      return false;\n    Term other = (Term) obj;\n    if (field == null) {\n      if (other.field != null)\n        return false;\n    } else if (!field.equals(other.field))\n      return false;\n    if (text == null) {\n      if (other.text != null)\n        return false;\n    } else if (!text.equals(other.text))\n      return false;\n    return true;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4f29ba80b723649f5feb7e37afe1a558dd2c1304","date":1278318805,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/Term#equals(Object).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/Term#equals(Object).mjava","sourceNew":"  @Override\n  public boolean equals(Object obj) {\n    if (this == obj)\n      return true;\n    if (obj == null)\n      return false;\n    if (getClass() != obj.getClass())\n      return false;\n    Term other = (Term) obj;\n    if (field == null) {\n      if (other.field != null)\n        return false;\n    } else if (!field.equals(other.field))\n      return false;\n    if (bytes == null) {\n      if (other.bytes != null)\n        return false;\n    } else if (!bytes.equals(other.bytes))\n      return false;\n    return true;\n  }\n\n","sourceOld":"  @Override\n  public boolean equals(Object obj) {\n    if (this == obj)\n      return true;\n    if (obj == null)\n      return false;\n    if (getClass() != obj.getClass())\n      return false;\n    Term other = (Term) obj;\n    if (field == null) {\n      if (other.field != null)\n        return false;\n    } else if (!field.equals(other.field))\n      return false;\n    if (text == null) {\n      if (other.text != null)\n        return false;\n    } else if (!text.equals(other.text))\n      return false;\n    return true;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5f4e87790277826a2aea119328600dfb07761f32","date":1279827275,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/Term#equals(Object).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/Term#equals(Object).mjava","sourceNew":"  @Override\n  public boolean equals(Object obj) {\n    if (this == obj)\n      return true;\n    if (obj == null)\n      return false;\n    if (getClass() != obj.getClass())\n      return false;\n    Term other = (Term) obj;\n    if (field == null) {\n      if (other.field != null)\n        return false;\n    } else if (!field.equals(other.field))\n      return false;\n    if (bytes == null) {\n      if (other.bytes != null)\n        return false;\n    } else if (!bytes.equals(other.bytes))\n      return false;\n    return true;\n  }\n\n","sourceOld":"  @Override\n  public boolean equals(Object obj) {\n    if (this == obj)\n      return true;\n    if (obj == null)\n      return false;\n    if (getClass() != obj.getClass())\n      return false;\n    Term other = (Term) obj;\n    if (field == null) {\n      if (other.field != null)\n        return false;\n    } else if (!field.equals(other.field))\n      return false;\n    if (text == null) {\n      if (other.text != null)\n        return false;\n    } else if (!text.equals(other.text))\n      return false;\n    return true;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":5,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/Term#equals(Object).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/Term#equals(Object).mjava","sourceNew":"  @Override\n  public boolean equals(Object obj) {\n    if (this == obj)\n      return true;\n    if (obj == null)\n      return false;\n    if (getClass() != obj.getClass())\n      return false;\n    Term other = (Term) obj;\n    if (field == null) {\n      if (other.field != null)\n        return false;\n    } else if (!field.equals(other.field))\n      return false;\n    if (bytes == null) {\n      if (other.bytes != null)\n        return false;\n    } else if (!bytes.equals(other.bytes))\n      return false;\n    return true;\n  }\n\n","sourceOld":"  @Override\n  public boolean equals(Object obj) {\n    if (this == obj)\n      return true;\n    if (obj == null)\n      return false;\n    if (getClass() != obj.getClass())\n      return false;\n    Term other = (Term) obj;\n    if (field == null) {\n      if (other.field != null)\n        return false;\n    } else if (!field.equals(other.field))\n      return false;\n    if (bytes == null) {\n      if (other.bytes != null)\n        return false;\n    } else if (!bytes.equals(other.bytes))\n      return false;\n    return true;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"4f29ba80b723649f5feb7e37afe1a558dd2c1304":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["4f29ba80b723649f5feb7e37afe1a558dd2c1304"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"5f4e87790277826a2aea119328600dfb07761f32":["9454a6510e2db155fb01faa5c049b06ece95fab9","4f29ba80b723649f5feb7e37afe1a558dd2c1304"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"4f29ba80b723649f5feb7e37afe1a558dd2c1304":["3a119bbc8703c10faa329ec201c654b3a35a1e3e","5f4e87790277826a2aea119328600dfb07761f32"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"5f4e87790277826a2aea119328600dfb07761f32":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["4f29ba80b723649f5feb7e37afe1a558dd2c1304","5f4e87790277826a2aea119328600dfb07761f32"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["5f4e87790277826a2aea119328600dfb07761f32","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}