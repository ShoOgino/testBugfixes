{"path":"solr/core/src/test/org/apache/solr/cloud/cdcr/BaseCdcrDistributedZkTest#createCollection(Map[String,List[Integer]],String,int,int,SolrClient,String).mjava","commits":[{"id":"e46a76bb135597b8bf35930cfdb3702bdd1cbe6e","date":1594223844,"type":1,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/cdcr/BaseCdcrDistributedZkTest#createCollection(Map[String,List[Integer]],String,int,int,SolrClient,String).mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/cdcr/BaseCdcrDistributedZkTest#createCollection(Map[String,List[Integer]],String,int,int,int,SolrClient,String).mjava","sourceNew":"  private CollectionAdminResponse createCollection(Map<String, List<Integer>> collectionInfos,\n                                                   String collectionName, int numShards, int replicationFactor,\n                                                   SolrClient client, String createNodeSetStr)\n      throws SolrServerException, IOException {\n    return createCollection(collectionInfos, collectionName,\n        Utils.makeMap(\n            NUM_SLICES, numShards,\n            REPLICATION_FACTOR, replicationFactor,\n            CREATE_NODE_SET, createNodeSetStr),\n        client, \"conf1\");\n  }\n\n","sourceOld":"  private CollectionAdminResponse createCollection(Map<String, List<Integer>> collectionInfos,\n                                                   String collectionName, int numShards, int replicationFactor,\n                                                   int maxShardsPerNode, SolrClient client, String createNodeSetStr)\n      throws SolrServerException, IOException {\n    return createCollection(collectionInfos, collectionName,\n        Utils.makeMap(\n            NUM_SLICES, numShards,\n            REPLICATION_FACTOR, replicationFactor,\n            CREATE_NODE_SET, createNodeSetStr,\n            MAX_SHARDS_PER_NODE, maxShardsPerNode),\n        client, \"conf1\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"23ec6d2969d61cadbfd0a5452e9be1f9999e8aa1","date":1598647393,"type":4,"author":"Ishan Chattopadhyaya","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/core/src/test/org/apache/solr/cloud/cdcr/BaseCdcrDistributedZkTest#createCollection(Map[String,List[Integer]],String,int,int,SolrClient,String).mjava","sourceNew":null,"sourceOld":"  private CollectionAdminResponse createCollection(Map<String, List<Integer>> collectionInfos,\n                                                   String collectionName, int numShards, int replicationFactor,\n                                                   SolrClient client, String createNodeSetStr)\n      throws SolrServerException, IOException {\n    return createCollection(collectionInfos, collectionName,\n        Utils.makeMap(\n            NUM_SLICES, numShards,\n            REPLICATION_FACTOR, replicationFactor,\n            CREATE_NODE_SET, createNodeSetStr),\n        client, \"conf1\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"23ec6d2969d61cadbfd0a5452e9be1f9999e8aa1":["e46a76bb135597b8bf35930cfdb3702bdd1cbe6e"],"e46a76bb135597b8bf35930cfdb3702bdd1cbe6e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["23ec6d2969d61cadbfd0a5452e9be1f9999e8aa1"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["e46a76bb135597b8bf35930cfdb3702bdd1cbe6e"],"23ec6d2969d61cadbfd0a5452e9be1f9999e8aa1":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"e46a76bb135597b8bf35930cfdb3702bdd1cbe6e":["23ec6d2969d61cadbfd0a5452e9be1f9999e8aa1"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}