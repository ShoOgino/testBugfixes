{"path":"lucene/spatial/src/java/org/apache/lucene/spatial/prefix/AbstractPrefixTreeFilter#equals(Object).mjava","commits":[{"id":"c659c37800c0dfd82fa025b5834f4ab065903d11","date":1361851047,"type":1,"author":"David Wayne Smiley","isMerge":false,"pathNew":"lucene/spatial/src/java/org/apache/lucene/spatial/prefix/AbstractPrefixTreeFilter#equals(Object).mjava","pathOld":"lucene/spatial/src/java/org/apache/lucene/spatial/prefix/RecursivePrefixTreeFilter#equals(Object).mjava","sourceNew":"  @Override\n  public boolean equals(Object o) {\n    if (this == o) return true;\n    if (!getClass().equals(o.getClass())) return false;\n\n    AbstractPrefixTreeFilter that = (AbstractPrefixTreeFilter) o;\n\n    if (detailLevel != that.detailLevel) return false;\n    if (!fieldName.equals(that.fieldName)) return false;\n    if (!queryShape.equals(that.queryShape)) return false;\n\n    return true;\n  }\n\n","sourceOld":"  @Override\n  public boolean equals(Object o) {\n    if (this == o) return true;\n    if (o == null || getClass() != o.getClass()) return false;\n\n    RecursivePrefixTreeFilter that = (RecursivePrefixTreeFilter) o;\n\n    if (!fieldName.equals(that.fieldName)) return false;\n    //note that we don't need to look at grid since for the same field it should be the same\n    if (prefixGridScanLevel != that.prefixGridScanLevel) return false;\n    if (detailLevel != that.detailLevel) return false;\n    if (!queryShape.equals(that.queryShape)) return false;\n\n    return true;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8249072f13ea4354ab7635c2d7a59cc682806dab","date":1429649774,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/spatial/src/java/org/apache/lucene/spatial/prefix/AbstractPrefixTreeFilter#equals(Object).mjava","pathOld":"lucene/spatial/src/java/org/apache/lucene/spatial/prefix/AbstractPrefixTreeFilter#equals(Object).mjava","sourceNew":"  @Override\n  public boolean equals(Object o) {\n    if (this == o) return true;\n    if (super.equals(o) == false) return false;\n\n    AbstractPrefixTreeFilter that = (AbstractPrefixTreeFilter) o;\n\n    if (detailLevel != that.detailLevel) return false;\n    if (!fieldName.equals(that.fieldName)) return false;\n    if (!queryShape.equals(that.queryShape)) return false;\n\n    return true;\n  }\n\n","sourceOld":"  @Override\n  public boolean equals(Object o) {\n    if (this == o) return true;\n    if (!getClass().equals(o.getClass())) return false;\n\n    AbstractPrefixTreeFilter that = (AbstractPrefixTreeFilter) o;\n\n    if (detailLevel != that.detailLevel) return false;\n    if (!fieldName.equals(that.fieldName)) return false;\n    if (!queryShape.equals(that.queryShape)) return false;\n\n    return true;\n  }\n\n","bugFix":["c659c37800c0dfd82fa025b5834f4ab065903d11"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"672b198fc3dce868916c727917cae58c2906763d","date":1443669960,"type":5,"author":"David Wayne Smiley","isMerge":false,"pathNew":"lucene/spatial/src/java/org/apache/lucene/spatial/prefix/AbstractPrefixTreeQuery#equals(Object).mjava","pathOld":"lucene/spatial/src/java/org/apache/lucene/spatial/prefix/AbstractPrefixTreeFilter#equals(Object).mjava","sourceNew":"  @Override\n  public boolean equals(Object o) {\n    if (this == o) return true;\n    if (super.equals(o) == false) return false;\n\n    AbstractPrefixTreeQuery that = (AbstractPrefixTreeQuery) o;\n\n    if (detailLevel != that.detailLevel) return false;\n    if (!fieldName.equals(that.fieldName)) return false;\n    if (!queryShape.equals(that.queryShape)) return false;\n\n    return true;\n  }\n\n","sourceOld":"  @Override\n  public boolean equals(Object o) {\n    if (this == o) return true;\n    if (super.equals(o) == false) return false;\n\n    AbstractPrefixTreeFilter that = (AbstractPrefixTreeFilter) o;\n\n    if (detailLevel != that.detailLevel) return false;\n    if (!fieldName.equals(that.fieldName)) return false;\n    if (!queryShape.equals(that.queryShape)) return false;\n\n    return true;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"672b198fc3dce868916c727917cae58c2906763d":["8249072f13ea4354ab7635c2d7a59cc682806dab"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"8249072f13ea4354ab7635c2d7a59cc682806dab":["c659c37800c0dfd82fa025b5834f4ab065903d11"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["672b198fc3dce868916c727917cae58c2906763d"],"c659c37800c0dfd82fa025b5834f4ab065903d11":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"672b198fc3dce868916c727917cae58c2906763d":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c659c37800c0dfd82fa025b5834f4ab065903d11"],"8249072f13ea4354ab7635c2d7a59cc682806dab":["672b198fc3dce868916c727917cae58c2906763d"],"c659c37800c0dfd82fa025b5834f4ab065903d11":["8249072f13ea4354ab7635c2d7a59cc682806dab"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}