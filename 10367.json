{"path":"lucene/core/src/java/org/apache/lucene/util/packed/BulkOperationPacked63#decode(long[],int,long[],int,int).mjava","commits":[{"id":"3edb451c214b0d41e9d16514e3a1d6984ca2ca5f","date":1345677220,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/packed/BulkOperationPacked63#decode(long[],int,long[],int,int).mjava","pathOld":"/dev/null","sourceNew":"    public void decode(long[] blocks, int blocksOffset, long[] values, int valuesOffset, int iterations) {\n      assert blocksOffset + iterations * blockCount() <= blocks.length;\n      assert valuesOffset + iterations * valueCount() <= values.length;\n      for (int i = 0; i < iterations; ++i) {\n        final long block0 = blocks[blocksOffset++];\n        values[valuesOffset++] = block0 >>> 1;\n        final long block1 = blocks[blocksOffset++];\n        values[valuesOffset++] = ((block0 & 1L) << 62) | (block1 >>> 2);\n        final long block2 = blocks[blocksOffset++];\n        values[valuesOffset++] = ((block1 & 3L) << 61) | (block2 >>> 3);\n        final long block3 = blocks[blocksOffset++];\n        values[valuesOffset++] = ((block2 & 7L) << 60) | (block3 >>> 4);\n        final long block4 = blocks[blocksOffset++];\n        values[valuesOffset++] = ((block3 & 15L) << 59) | (block4 >>> 5);\n        final long block5 = blocks[blocksOffset++];\n        values[valuesOffset++] = ((block4 & 31L) << 58) | (block5 >>> 6);\n        final long block6 = blocks[blocksOffset++];\n        values[valuesOffset++] = ((block5 & 63L) << 57) | (block6 >>> 7);\n        final long block7 = blocks[blocksOffset++];\n        values[valuesOffset++] = ((block6 & 127L) << 56) | (block7 >>> 8);\n        final long block8 = blocks[blocksOffset++];\n        values[valuesOffset++] = ((block7 & 255L) << 55) | (block8 >>> 9);\n        final long block9 = blocks[blocksOffset++];\n        values[valuesOffset++] = ((block8 & 511L) << 54) | (block9 >>> 10);\n        final long block10 = blocks[blocksOffset++];\n        values[valuesOffset++] = ((block9 & 1023L) << 53) | (block10 >>> 11);\n        final long block11 = blocks[blocksOffset++];\n        values[valuesOffset++] = ((block10 & 2047L) << 52) | (block11 >>> 12);\n        final long block12 = blocks[blocksOffset++];\n        values[valuesOffset++] = ((block11 & 4095L) << 51) | (block12 >>> 13);\n        final long block13 = blocks[blocksOffset++];\n        values[valuesOffset++] = ((block12 & 8191L) << 50) | (block13 >>> 14);\n        final long block14 = blocks[blocksOffset++];\n        values[valuesOffset++] = ((block13 & 16383L) << 49) | (block14 >>> 15);\n        final long block15 = blocks[blocksOffset++];\n        values[valuesOffset++] = ((block14 & 32767L) << 48) | (block15 >>> 16);\n        final long block16 = blocks[blocksOffset++];\n        values[valuesOffset++] = ((block15 & 65535L) << 47) | (block16 >>> 17);\n        final long block17 = blocks[blocksOffset++];\n        values[valuesOffset++] = ((block16 & 131071L) << 46) | (block17 >>> 18);\n        final long block18 = blocks[blocksOffset++];\n        values[valuesOffset++] = ((block17 & 262143L) << 45) | (block18 >>> 19);\n        final long block19 = blocks[blocksOffset++];\n        values[valuesOffset++] = ((block18 & 524287L) << 44) | (block19 >>> 20);\n        final long block20 = blocks[blocksOffset++];\n        values[valuesOffset++] = ((block19 & 1048575L) << 43) | (block20 >>> 21);\n        final long block21 = blocks[blocksOffset++];\n        values[valuesOffset++] = ((block20 & 2097151L) << 42) | (block21 >>> 22);\n        final long block22 = blocks[blocksOffset++];\n        values[valuesOffset++] = ((block21 & 4194303L) << 41) | (block22 >>> 23);\n        final long block23 = blocks[blocksOffset++];\n        values[valuesOffset++] = ((block22 & 8388607L) << 40) | (block23 >>> 24);\n        final long block24 = blocks[blocksOffset++];\n        values[valuesOffset++] = ((block23 & 16777215L) << 39) | (block24 >>> 25);\n        final long block25 = blocks[blocksOffset++];\n        values[valuesOffset++] = ((block24 & 33554431L) << 38) | (block25 >>> 26);\n        final long block26 = blocks[blocksOffset++];\n        values[valuesOffset++] = ((block25 & 67108863L) << 37) | (block26 >>> 27);\n        final long block27 = blocks[blocksOffset++];\n        values[valuesOffset++] = ((block26 & 134217727L) << 36) | (block27 >>> 28);\n        final long block28 = blocks[blocksOffset++];\n        values[valuesOffset++] = ((block27 & 268435455L) << 35) | (block28 >>> 29);\n        final long block29 = blocks[blocksOffset++];\n        values[valuesOffset++] = ((block28 & 536870911L) << 34) | (block29 >>> 30);\n        final long block30 = blocks[blocksOffset++];\n        values[valuesOffset++] = ((block29 & 1073741823L) << 33) | (block30 >>> 31);\n        final long block31 = blocks[blocksOffset++];\n        values[valuesOffset++] = ((block30 & 2147483647L) << 32) | (block31 >>> 32);\n        final long block32 = blocks[blocksOffset++];\n        values[valuesOffset++] = ((block31 & 4294967295L) << 31) | (block32 >>> 33);\n        final long block33 = blocks[blocksOffset++];\n        values[valuesOffset++] = ((block32 & 8589934591L) << 30) | (block33 >>> 34);\n        final long block34 = blocks[blocksOffset++];\n        values[valuesOffset++] = ((block33 & 17179869183L) << 29) | (block34 >>> 35);\n        final long block35 = blocks[blocksOffset++];\n        values[valuesOffset++] = ((block34 & 34359738367L) << 28) | (block35 >>> 36);\n        final long block36 = blocks[blocksOffset++];\n        values[valuesOffset++] = ((block35 & 68719476735L) << 27) | (block36 >>> 37);\n        final long block37 = blocks[blocksOffset++];\n        values[valuesOffset++] = ((block36 & 137438953471L) << 26) | (block37 >>> 38);\n        final long block38 = blocks[blocksOffset++];\n        values[valuesOffset++] = ((block37 & 274877906943L) << 25) | (block38 >>> 39);\n        final long block39 = blocks[blocksOffset++];\n        values[valuesOffset++] = ((block38 & 549755813887L) << 24) | (block39 >>> 40);\n        final long block40 = blocks[blocksOffset++];\n        values[valuesOffset++] = ((block39 & 1099511627775L) << 23) | (block40 >>> 41);\n        final long block41 = blocks[blocksOffset++];\n        values[valuesOffset++] = ((block40 & 2199023255551L) << 22) | (block41 >>> 42);\n        final long block42 = blocks[blocksOffset++];\n        values[valuesOffset++] = ((block41 & 4398046511103L) << 21) | (block42 >>> 43);\n        final long block43 = blocks[blocksOffset++];\n        values[valuesOffset++] = ((block42 & 8796093022207L) << 20) | (block43 >>> 44);\n        final long block44 = blocks[blocksOffset++];\n        values[valuesOffset++] = ((block43 & 17592186044415L) << 19) | (block44 >>> 45);\n        final long block45 = blocks[blocksOffset++];\n        values[valuesOffset++] = ((block44 & 35184372088831L) << 18) | (block45 >>> 46);\n        final long block46 = blocks[blocksOffset++];\n        values[valuesOffset++] = ((block45 & 70368744177663L) << 17) | (block46 >>> 47);\n        final long block47 = blocks[blocksOffset++];\n        values[valuesOffset++] = ((block46 & 140737488355327L) << 16) | (block47 >>> 48);\n        final long block48 = blocks[blocksOffset++];\n        values[valuesOffset++] = ((block47 & 281474976710655L) << 15) | (block48 >>> 49);\n        final long block49 = blocks[blocksOffset++];\n        values[valuesOffset++] = ((block48 & 562949953421311L) << 14) | (block49 >>> 50);\n        final long block50 = blocks[blocksOffset++];\n        values[valuesOffset++] = ((block49 & 1125899906842623L) << 13) | (block50 >>> 51);\n        final long block51 = blocks[blocksOffset++];\n        values[valuesOffset++] = ((block50 & 2251799813685247L) << 12) | (block51 >>> 52);\n        final long block52 = blocks[blocksOffset++];\n        values[valuesOffset++] = ((block51 & 4503599627370495L) << 11) | (block52 >>> 53);\n        final long block53 = blocks[blocksOffset++];\n        values[valuesOffset++] = ((block52 & 9007199254740991L) << 10) | (block53 >>> 54);\n        final long block54 = blocks[blocksOffset++];\n        values[valuesOffset++] = ((block53 & 18014398509481983L) << 9) | (block54 >>> 55);\n        final long block55 = blocks[blocksOffset++];\n        values[valuesOffset++] = ((block54 & 36028797018963967L) << 8) | (block55 >>> 56);\n        final long block56 = blocks[blocksOffset++];\n        values[valuesOffset++] = ((block55 & 72057594037927935L) << 7) | (block56 >>> 57);\n        final long block57 = blocks[blocksOffset++];\n        values[valuesOffset++] = ((block56 & 144115188075855871L) << 6) | (block57 >>> 58);\n        final long block58 = blocks[blocksOffset++];\n        values[valuesOffset++] = ((block57 & 288230376151711743L) << 5) | (block58 >>> 59);\n        final long block59 = blocks[blocksOffset++];\n        values[valuesOffset++] = ((block58 & 576460752303423487L) << 4) | (block59 >>> 60);\n        final long block60 = blocks[blocksOffset++];\n        values[valuesOffset++] = ((block59 & 1152921504606846975L) << 3) | (block60 >>> 61);\n        final long block61 = blocks[blocksOffset++];\n        values[valuesOffset++] = ((block60 & 2305843009213693951L) << 2) | (block61 >>> 62);\n        final long block62 = blocks[blocksOffset++];\n        values[valuesOffset++] = ((block61 & 4611686018427387903L) << 1) | (block62 >>> 63);\n        values[valuesOffset++] = block62 & 9223372036854775807L;\n      }\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"353f5909b00345d98d079a7db9a1bbe7485b1ea6","date":1345745476,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/packed/BulkOperationPacked63#decode(long[],int,long[],int,int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/packed/BulkOperationPacked63#decode(long[],int,long[],int,int).mjava","sourceNew":"    @Override\n    public void decode(long[] blocks, int blocksOffset, long[] values, int valuesOffset, int iterations) {\n      assert blocksOffset + iterations * blockCount() <= blocks.length;\n      assert valuesOffset + iterations * valueCount() <= values.length;\n      for (int i = 0; i < iterations; ++i) {\n        final long block0 = blocks[blocksOffset++];\n        values[valuesOffset++] = block0 >>> 1;\n        final long block1 = blocks[blocksOffset++];\n        values[valuesOffset++] = ((block0 & 1L) << 62) | (block1 >>> 2);\n        final long block2 = blocks[blocksOffset++];\n        values[valuesOffset++] = ((block1 & 3L) << 61) | (block2 >>> 3);\n        final long block3 = blocks[blocksOffset++];\n        values[valuesOffset++] = ((block2 & 7L) << 60) | (block3 >>> 4);\n        final long block4 = blocks[blocksOffset++];\n        values[valuesOffset++] = ((block3 & 15L) << 59) | (block4 >>> 5);\n        final long block5 = blocks[blocksOffset++];\n        values[valuesOffset++] = ((block4 & 31L) << 58) | (block5 >>> 6);\n        final long block6 = blocks[blocksOffset++];\n        values[valuesOffset++] = ((block5 & 63L) << 57) | (block6 >>> 7);\n        final long block7 = blocks[blocksOffset++];\n        values[valuesOffset++] = ((block6 & 127L) << 56) | (block7 >>> 8);\n        final long block8 = blocks[blocksOffset++];\n        values[valuesOffset++] = ((block7 & 255L) << 55) | (block8 >>> 9);\n        final long block9 = blocks[blocksOffset++];\n        values[valuesOffset++] = ((block8 & 511L) << 54) | (block9 >>> 10);\n        final long block10 = blocks[blocksOffset++];\n        values[valuesOffset++] = ((block9 & 1023L) << 53) | (block10 >>> 11);\n        final long block11 = blocks[blocksOffset++];\n        values[valuesOffset++] = ((block10 & 2047L) << 52) | (block11 >>> 12);\n        final long block12 = blocks[blocksOffset++];\n        values[valuesOffset++] = ((block11 & 4095L) << 51) | (block12 >>> 13);\n        final long block13 = blocks[blocksOffset++];\n        values[valuesOffset++] = ((block12 & 8191L) << 50) | (block13 >>> 14);\n        final long block14 = blocks[blocksOffset++];\n        values[valuesOffset++] = ((block13 & 16383L) << 49) | (block14 >>> 15);\n        final long block15 = blocks[blocksOffset++];\n        values[valuesOffset++] = ((block14 & 32767L) << 48) | (block15 >>> 16);\n        final long block16 = blocks[blocksOffset++];\n        values[valuesOffset++] = ((block15 & 65535L) << 47) | (block16 >>> 17);\n        final long block17 = blocks[blocksOffset++];\n        values[valuesOffset++] = ((block16 & 131071L) << 46) | (block17 >>> 18);\n        final long block18 = blocks[blocksOffset++];\n        values[valuesOffset++] = ((block17 & 262143L) << 45) | (block18 >>> 19);\n        final long block19 = blocks[blocksOffset++];\n        values[valuesOffset++] = ((block18 & 524287L) << 44) | (block19 >>> 20);\n        final long block20 = blocks[blocksOffset++];\n        values[valuesOffset++] = ((block19 & 1048575L) << 43) | (block20 >>> 21);\n        final long block21 = blocks[blocksOffset++];\n        values[valuesOffset++] = ((block20 & 2097151L) << 42) | (block21 >>> 22);\n        final long block22 = blocks[blocksOffset++];\n        values[valuesOffset++] = ((block21 & 4194303L) << 41) | (block22 >>> 23);\n        final long block23 = blocks[blocksOffset++];\n        values[valuesOffset++] = ((block22 & 8388607L) << 40) | (block23 >>> 24);\n        final long block24 = blocks[blocksOffset++];\n        values[valuesOffset++] = ((block23 & 16777215L) << 39) | (block24 >>> 25);\n        final long block25 = blocks[blocksOffset++];\n        values[valuesOffset++] = ((block24 & 33554431L) << 38) | (block25 >>> 26);\n        final long block26 = blocks[blocksOffset++];\n        values[valuesOffset++] = ((block25 & 67108863L) << 37) | (block26 >>> 27);\n        final long block27 = blocks[blocksOffset++];\n        values[valuesOffset++] = ((block26 & 134217727L) << 36) | (block27 >>> 28);\n        final long block28 = blocks[blocksOffset++];\n        values[valuesOffset++] = ((block27 & 268435455L) << 35) | (block28 >>> 29);\n        final long block29 = blocks[blocksOffset++];\n        values[valuesOffset++] = ((block28 & 536870911L) << 34) | (block29 >>> 30);\n        final long block30 = blocks[blocksOffset++];\n        values[valuesOffset++] = ((block29 & 1073741823L) << 33) | (block30 >>> 31);\n        final long block31 = blocks[blocksOffset++];\n        values[valuesOffset++] = ((block30 & 2147483647L) << 32) | (block31 >>> 32);\n        final long block32 = blocks[blocksOffset++];\n        values[valuesOffset++] = ((block31 & 4294967295L) << 31) | (block32 >>> 33);\n        final long block33 = blocks[blocksOffset++];\n        values[valuesOffset++] = ((block32 & 8589934591L) << 30) | (block33 >>> 34);\n        final long block34 = blocks[blocksOffset++];\n        values[valuesOffset++] = ((block33 & 17179869183L) << 29) | (block34 >>> 35);\n        final long block35 = blocks[blocksOffset++];\n        values[valuesOffset++] = ((block34 & 34359738367L) << 28) | (block35 >>> 36);\n        final long block36 = blocks[blocksOffset++];\n        values[valuesOffset++] = ((block35 & 68719476735L) << 27) | (block36 >>> 37);\n        final long block37 = blocks[blocksOffset++];\n        values[valuesOffset++] = ((block36 & 137438953471L) << 26) | (block37 >>> 38);\n        final long block38 = blocks[blocksOffset++];\n        values[valuesOffset++] = ((block37 & 274877906943L) << 25) | (block38 >>> 39);\n        final long block39 = blocks[blocksOffset++];\n        values[valuesOffset++] = ((block38 & 549755813887L) << 24) | (block39 >>> 40);\n        final long block40 = blocks[blocksOffset++];\n        values[valuesOffset++] = ((block39 & 1099511627775L) << 23) | (block40 >>> 41);\n        final long block41 = blocks[blocksOffset++];\n        values[valuesOffset++] = ((block40 & 2199023255551L) << 22) | (block41 >>> 42);\n        final long block42 = blocks[blocksOffset++];\n        values[valuesOffset++] = ((block41 & 4398046511103L) << 21) | (block42 >>> 43);\n        final long block43 = blocks[blocksOffset++];\n        values[valuesOffset++] = ((block42 & 8796093022207L) << 20) | (block43 >>> 44);\n        final long block44 = blocks[blocksOffset++];\n        values[valuesOffset++] = ((block43 & 17592186044415L) << 19) | (block44 >>> 45);\n        final long block45 = blocks[blocksOffset++];\n        values[valuesOffset++] = ((block44 & 35184372088831L) << 18) | (block45 >>> 46);\n        final long block46 = blocks[blocksOffset++];\n        values[valuesOffset++] = ((block45 & 70368744177663L) << 17) | (block46 >>> 47);\n        final long block47 = blocks[blocksOffset++];\n        values[valuesOffset++] = ((block46 & 140737488355327L) << 16) | (block47 >>> 48);\n        final long block48 = blocks[blocksOffset++];\n        values[valuesOffset++] = ((block47 & 281474976710655L) << 15) | (block48 >>> 49);\n        final long block49 = blocks[blocksOffset++];\n        values[valuesOffset++] = ((block48 & 562949953421311L) << 14) | (block49 >>> 50);\n        final long block50 = blocks[blocksOffset++];\n        values[valuesOffset++] = ((block49 & 1125899906842623L) << 13) | (block50 >>> 51);\n        final long block51 = blocks[blocksOffset++];\n        values[valuesOffset++] = ((block50 & 2251799813685247L) << 12) | (block51 >>> 52);\n        final long block52 = blocks[blocksOffset++];\n        values[valuesOffset++] = ((block51 & 4503599627370495L) << 11) | (block52 >>> 53);\n        final long block53 = blocks[blocksOffset++];\n        values[valuesOffset++] = ((block52 & 9007199254740991L) << 10) | (block53 >>> 54);\n        final long block54 = blocks[blocksOffset++];\n        values[valuesOffset++] = ((block53 & 18014398509481983L) << 9) | (block54 >>> 55);\n        final long block55 = blocks[blocksOffset++];\n        values[valuesOffset++] = ((block54 & 36028797018963967L) << 8) | (block55 >>> 56);\n        final long block56 = blocks[blocksOffset++];\n        values[valuesOffset++] = ((block55 & 72057594037927935L) << 7) | (block56 >>> 57);\n        final long block57 = blocks[blocksOffset++];\n        values[valuesOffset++] = ((block56 & 144115188075855871L) << 6) | (block57 >>> 58);\n        final long block58 = blocks[blocksOffset++];\n        values[valuesOffset++] = ((block57 & 288230376151711743L) << 5) | (block58 >>> 59);\n        final long block59 = blocks[blocksOffset++];\n        values[valuesOffset++] = ((block58 & 576460752303423487L) << 4) | (block59 >>> 60);\n        final long block60 = blocks[blocksOffset++];\n        values[valuesOffset++] = ((block59 & 1152921504606846975L) << 3) | (block60 >>> 61);\n        final long block61 = blocks[blocksOffset++];\n        values[valuesOffset++] = ((block60 & 2305843009213693951L) << 2) | (block61 >>> 62);\n        final long block62 = blocks[blocksOffset++];\n        values[valuesOffset++] = ((block61 & 4611686018427387903L) << 1) | (block62 >>> 63);\n        values[valuesOffset++] = block62 & 9223372036854775807L;\n      }\n    }\n\n","sourceOld":"    public void decode(long[] blocks, int blocksOffset, long[] values, int valuesOffset, int iterations) {\n      assert blocksOffset + iterations * blockCount() <= blocks.length;\n      assert valuesOffset + iterations * valueCount() <= values.length;\n      for (int i = 0; i < iterations; ++i) {\n        final long block0 = blocks[blocksOffset++];\n        values[valuesOffset++] = block0 >>> 1;\n        final long block1 = blocks[blocksOffset++];\n        values[valuesOffset++] = ((block0 & 1L) << 62) | (block1 >>> 2);\n        final long block2 = blocks[blocksOffset++];\n        values[valuesOffset++] = ((block1 & 3L) << 61) | (block2 >>> 3);\n        final long block3 = blocks[blocksOffset++];\n        values[valuesOffset++] = ((block2 & 7L) << 60) | (block3 >>> 4);\n        final long block4 = blocks[blocksOffset++];\n        values[valuesOffset++] = ((block3 & 15L) << 59) | (block4 >>> 5);\n        final long block5 = blocks[blocksOffset++];\n        values[valuesOffset++] = ((block4 & 31L) << 58) | (block5 >>> 6);\n        final long block6 = blocks[blocksOffset++];\n        values[valuesOffset++] = ((block5 & 63L) << 57) | (block6 >>> 7);\n        final long block7 = blocks[blocksOffset++];\n        values[valuesOffset++] = ((block6 & 127L) << 56) | (block7 >>> 8);\n        final long block8 = blocks[blocksOffset++];\n        values[valuesOffset++] = ((block7 & 255L) << 55) | (block8 >>> 9);\n        final long block9 = blocks[blocksOffset++];\n        values[valuesOffset++] = ((block8 & 511L) << 54) | (block9 >>> 10);\n        final long block10 = blocks[blocksOffset++];\n        values[valuesOffset++] = ((block9 & 1023L) << 53) | (block10 >>> 11);\n        final long block11 = blocks[blocksOffset++];\n        values[valuesOffset++] = ((block10 & 2047L) << 52) | (block11 >>> 12);\n        final long block12 = blocks[blocksOffset++];\n        values[valuesOffset++] = ((block11 & 4095L) << 51) | (block12 >>> 13);\n        final long block13 = blocks[blocksOffset++];\n        values[valuesOffset++] = ((block12 & 8191L) << 50) | (block13 >>> 14);\n        final long block14 = blocks[blocksOffset++];\n        values[valuesOffset++] = ((block13 & 16383L) << 49) | (block14 >>> 15);\n        final long block15 = blocks[blocksOffset++];\n        values[valuesOffset++] = ((block14 & 32767L) << 48) | (block15 >>> 16);\n        final long block16 = blocks[blocksOffset++];\n        values[valuesOffset++] = ((block15 & 65535L) << 47) | (block16 >>> 17);\n        final long block17 = blocks[blocksOffset++];\n        values[valuesOffset++] = ((block16 & 131071L) << 46) | (block17 >>> 18);\n        final long block18 = blocks[blocksOffset++];\n        values[valuesOffset++] = ((block17 & 262143L) << 45) | (block18 >>> 19);\n        final long block19 = blocks[blocksOffset++];\n        values[valuesOffset++] = ((block18 & 524287L) << 44) | (block19 >>> 20);\n        final long block20 = blocks[blocksOffset++];\n        values[valuesOffset++] = ((block19 & 1048575L) << 43) | (block20 >>> 21);\n        final long block21 = blocks[blocksOffset++];\n        values[valuesOffset++] = ((block20 & 2097151L) << 42) | (block21 >>> 22);\n        final long block22 = blocks[blocksOffset++];\n        values[valuesOffset++] = ((block21 & 4194303L) << 41) | (block22 >>> 23);\n        final long block23 = blocks[blocksOffset++];\n        values[valuesOffset++] = ((block22 & 8388607L) << 40) | (block23 >>> 24);\n        final long block24 = blocks[blocksOffset++];\n        values[valuesOffset++] = ((block23 & 16777215L) << 39) | (block24 >>> 25);\n        final long block25 = blocks[blocksOffset++];\n        values[valuesOffset++] = ((block24 & 33554431L) << 38) | (block25 >>> 26);\n        final long block26 = blocks[blocksOffset++];\n        values[valuesOffset++] = ((block25 & 67108863L) << 37) | (block26 >>> 27);\n        final long block27 = blocks[blocksOffset++];\n        values[valuesOffset++] = ((block26 & 134217727L) << 36) | (block27 >>> 28);\n        final long block28 = blocks[blocksOffset++];\n        values[valuesOffset++] = ((block27 & 268435455L) << 35) | (block28 >>> 29);\n        final long block29 = blocks[blocksOffset++];\n        values[valuesOffset++] = ((block28 & 536870911L) << 34) | (block29 >>> 30);\n        final long block30 = blocks[blocksOffset++];\n        values[valuesOffset++] = ((block29 & 1073741823L) << 33) | (block30 >>> 31);\n        final long block31 = blocks[blocksOffset++];\n        values[valuesOffset++] = ((block30 & 2147483647L) << 32) | (block31 >>> 32);\n        final long block32 = blocks[blocksOffset++];\n        values[valuesOffset++] = ((block31 & 4294967295L) << 31) | (block32 >>> 33);\n        final long block33 = blocks[blocksOffset++];\n        values[valuesOffset++] = ((block32 & 8589934591L) << 30) | (block33 >>> 34);\n        final long block34 = blocks[blocksOffset++];\n        values[valuesOffset++] = ((block33 & 17179869183L) << 29) | (block34 >>> 35);\n        final long block35 = blocks[blocksOffset++];\n        values[valuesOffset++] = ((block34 & 34359738367L) << 28) | (block35 >>> 36);\n        final long block36 = blocks[blocksOffset++];\n        values[valuesOffset++] = ((block35 & 68719476735L) << 27) | (block36 >>> 37);\n        final long block37 = blocks[blocksOffset++];\n        values[valuesOffset++] = ((block36 & 137438953471L) << 26) | (block37 >>> 38);\n        final long block38 = blocks[blocksOffset++];\n        values[valuesOffset++] = ((block37 & 274877906943L) << 25) | (block38 >>> 39);\n        final long block39 = blocks[blocksOffset++];\n        values[valuesOffset++] = ((block38 & 549755813887L) << 24) | (block39 >>> 40);\n        final long block40 = blocks[blocksOffset++];\n        values[valuesOffset++] = ((block39 & 1099511627775L) << 23) | (block40 >>> 41);\n        final long block41 = blocks[blocksOffset++];\n        values[valuesOffset++] = ((block40 & 2199023255551L) << 22) | (block41 >>> 42);\n        final long block42 = blocks[blocksOffset++];\n        values[valuesOffset++] = ((block41 & 4398046511103L) << 21) | (block42 >>> 43);\n        final long block43 = blocks[blocksOffset++];\n        values[valuesOffset++] = ((block42 & 8796093022207L) << 20) | (block43 >>> 44);\n        final long block44 = blocks[blocksOffset++];\n        values[valuesOffset++] = ((block43 & 17592186044415L) << 19) | (block44 >>> 45);\n        final long block45 = blocks[blocksOffset++];\n        values[valuesOffset++] = ((block44 & 35184372088831L) << 18) | (block45 >>> 46);\n        final long block46 = blocks[blocksOffset++];\n        values[valuesOffset++] = ((block45 & 70368744177663L) << 17) | (block46 >>> 47);\n        final long block47 = blocks[blocksOffset++];\n        values[valuesOffset++] = ((block46 & 140737488355327L) << 16) | (block47 >>> 48);\n        final long block48 = blocks[blocksOffset++];\n        values[valuesOffset++] = ((block47 & 281474976710655L) << 15) | (block48 >>> 49);\n        final long block49 = blocks[blocksOffset++];\n        values[valuesOffset++] = ((block48 & 562949953421311L) << 14) | (block49 >>> 50);\n        final long block50 = blocks[blocksOffset++];\n        values[valuesOffset++] = ((block49 & 1125899906842623L) << 13) | (block50 >>> 51);\n        final long block51 = blocks[blocksOffset++];\n        values[valuesOffset++] = ((block50 & 2251799813685247L) << 12) | (block51 >>> 52);\n        final long block52 = blocks[blocksOffset++];\n        values[valuesOffset++] = ((block51 & 4503599627370495L) << 11) | (block52 >>> 53);\n        final long block53 = blocks[blocksOffset++];\n        values[valuesOffset++] = ((block52 & 9007199254740991L) << 10) | (block53 >>> 54);\n        final long block54 = blocks[blocksOffset++];\n        values[valuesOffset++] = ((block53 & 18014398509481983L) << 9) | (block54 >>> 55);\n        final long block55 = blocks[blocksOffset++];\n        values[valuesOffset++] = ((block54 & 36028797018963967L) << 8) | (block55 >>> 56);\n        final long block56 = blocks[blocksOffset++];\n        values[valuesOffset++] = ((block55 & 72057594037927935L) << 7) | (block56 >>> 57);\n        final long block57 = blocks[blocksOffset++];\n        values[valuesOffset++] = ((block56 & 144115188075855871L) << 6) | (block57 >>> 58);\n        final long block58 = blocks[blocksOffset++];\n        values[valuesOffset++] = ((block57 & 288230376151711743L) << 5) | (block58 >>> 59);\n        final long block59 = blocks[blocksOffset++];\n        values[valuesOffset++] = ((block58 & 576460752303423487L) << 4) | (block59 >>> 60);\n        final long block60 = blocks[blocksOffset++];\n        values[valuesOffset++] = ((block59 & 1152921504606846975L) << 3) | (block60 >>> 61);\n        final long block61 = blocks[blocksOffset++];\n        values[valuesOffset++] = ((block60 & 2305843009213693951L) << 2) | (block61 >>> 62);\n        final long block62 = blocks[blocksOffset++];\n        values[valuesOffset++] = ((block61 & 4611686018427387903L) << 1) | (block62 >>> 63);\n        values[valuesOffset++] = block62 & 9223372036854775807L;\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"001b25b42373b22a52f399dbf072f1224632e8e6","date":1345889167,"type":0,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/util/packed/BulkOperationPacked63#decode(long[],int,long[],int,int).mjava","pathOld":"/dev/null","sourceNew":"    @Override\n    public void decode(long[] blocks, int blocksOffset, long[] values, int valuesOffset, int iterations) {\n      assert blocksOffset + iterations * blockCount() <= blocks.length;\n      assert valuesOffset + iterations * valueCount() <= values.length;\n      for (int i = 0; i < iterations; ++i) {\n        final long block0 = blocks[blocksOffset++];\n        values[valuesOffset++] = block0 >>> 1;\n        final long block1 = blocks[blocksOffset++];\n        values[valuesOffset++] = ((block0 & 1L) << 62) | (block1 >>> 2);\n        final long block2 = blocks[blocksOffset++];\n        values[valuesOffset++] = ((block1 & 3L) << 61) | (block2 >>> 3);\n        final long block3 = blocks[blocksOffset++];\n        values[valuesOffset++] = ((block2 & 7L) << 60) | (block3 >>> 4);\n        final long block4 = blocks[blocksOffset++];\n        values[valuesOffset++] = ((block3 & 15L) << 59) | (block4 >>> 5);\n        final long block5 = blocks[blocksOffset++];\n        values[valuesOffset++] = ((block4 & 31L) << 58) | (block5 >>> 6);\n        final long block6 = blocks[blocksOffset++];\n        values[valuesOffset++] = ((block5 & 63L) << 57) | (block6 >>> 7);\n        final long block7 = blocks[blocksOffset++];\n        values[valuesOffset++] = ((block6 & 127L) << 56) | (block7 >>> 8);\n        final long block8 = blocks[blocksOffset++];\n        values[valuesOffset++] = ((block7 & 255L) << 55) | (block8 >>> 9);\n        final long block9 = blocks[blocksOffset++];\n        values[valuesOffset++] = ((block8 & 511L) << 54) | (block9 >>> 10);\n        final long block10 = blocks[blocksOffset++];\n        values[valuesOffset++] = ((block9 & 1023L) << 53) | (block10 >>> 11);\n        final long block11 = blocks[blocksOffset++];\n        values[valuesOffset++] = ((block10 & 2047L) << 52) | (block11 >>> 12);\n        final long block12 = blocks[blocksOffset++];\n        values[valuesOffset++] = ((block11 & 4095L) << 51) | (block12 >>> 13);\n        final long block13 = blocks[blocksOffset++];\n        values[valuesOffset++] = ((block12 & 8191L) << 50) | (block13 >>> 14);\n        final long block14 = blocks[blocksOffset++];\n        values[valuesOffset++] = ((block13 & 16383L) << 49) | (block14 >>> 15);\n        final long block15 = blocks[blocksOffset++];\n        values[valuesOffset++] = ((block14 & 32767L) << 48) | (block15 >>> 16);\n        final long block16 = blocks[blocksOffset++];\n        values[valuesOffset++] = ((block15 & 65535L) << 47) | (block16 >>> 17);\n        final long block17 = blocks[blocksOffset++];\n        values[valuesOffset++] = ((block16 & 131071L) << 46) | (block17 >>> 18);\n        final long block18 = blocks[blocksOffset++];\n        values[valuesOffset++] = ((block17 & 262143L) << 45) | (block18 >>> 19);\n        final long block19 = blocks[blocksOffset++];\n        values[valuesOffset++] = ((block18 & 524287L) << 44) | (block19 >>> 20);\n        final long block20 = blocks[blocksOffset++];\n        values[valuesOffset++] = ((block19 & 1048575L) << 43) | (block20 >>> 21);\n        final long block21 = blocks[blocksOffset++];\n        values[valuesOffset++] = ((block20 & 2097151L) << 42) | (block21 >>> 22);\n        final long block22 = blocks[blocksOffset++];\n        values[valuesOffset++] = ((block21 & 4194303L) << 41) | (block22 >>> 23);\n        final long block23 = blocks[blocksOffset++];\n        values[valuesOffset++] = ((block22 & 8388607L) << 40) | (block23 >>> 24);\n        final long block24 = blocks[blocksOffset++];\n        values[valuesOffset++] = ((block23 & 16777215L) << 39) | (block24 >>> 25);\n        final long block25 = blocks[blocksOffset++];\n        values[valuesOffset++] = ((block24 & 33554431L) << 38) | (block25 >>> 26);\n        final long block26 = blocks[blocksOffset++];\n        values[valuesOffset++] = ((block25 & 67108863L) << 37) | (block26 >>> 27);\n        final long block27 = blocks[blocksOffset++];\n        values[valuesOffset++] = ((block26 & 134217727L) << 36) | (block27 >>> 28);\n        final long block28 = blocks[blocksOffset++];\n        values[valuesOffset++] = ((block27 & 268435455L) << 35) | (block28 >>> 29);\n        final long block29 = blocks[blocksOffset++];\n        values[valuesOffset++] = ((block28 & 536870911L) << 34) | (block29 >>> 30);\n        final long block30 = blocks[blocksOffset++];\n        values[valuesOffset++] = ((block29 & 1073741823L) << 33) | (block30 >>> 31);\n        final long block31 = blocks[blocksOffset++];\n        values[valuesOffset++] = ((block30 & 2147483647L) << 32) | (block31 >>> 32);\n        final long block32 = blocks[blocksOffset++];\n        values[valuesOffset++] = ((block31 & 4294967295L) << 31) | (block32 >>> 33);\n        final long block33 = blocks[blocksOffset++];\n        values[valuesOffset++] = ((block32 & 8589934591L) << 30) | (block33 >>> 34);\n        final long block34 = blocks[blocksOffset++];\n        values[valuesOffset++] = ((block33 & 17179869183L) << 29) | (block34 >>> 35);\n        final long block35 = blocks[blocksOffset++];\n        values[valuesOffset++] = ((block34 & 34359738367L) << 28) | (block35 >>> 36);\n        final long block36 = blocks[blocksOffset++];\n        values[valuesOffset++] = ((block35 & 68719476735L) << 27) | (block36 >>> 37);\n        final long block37 = blocks[blocksOffset++];\n        values[valuesOffset++] = ((block36 & 137438953471L) << 26) | (block37 >>> 38);\n        final long block38 = blocks[blocksOffset++];\n        values[valuesOffset++] = ((block37 & 274877906943L) << 25) | (block38 >>> 39);\n        final long block39 = blocks[blocksOffset++];\n        values[valuesOffset++] = ((block38 & 549755813887L) << 24) | (block39 >>> 40);\n        final long block40 = blocks[blocksOffset++];\n        values[valuesOffset++] = ((block39 & 1099511627775L) << 23) | (block40 >>> 41);\n        final long block41 = blocks[blocksOffset++];\n        values[valuesOffset++] = ((block40 & 2199023255551L) << 22) | (block41 >>> 42);\n        final long block42 = blocks[blocksOffset++];\n        values[valuesOffset++] = ((block41 & 4398046511103L) << 21) | (block42 >>> 43);\n        final long block43 = blocks[blocksOffset++];\n        values[valuesOffset++] = ((block42 & 8796093022207L) << 20) | (block43 >>> 44);\n        final long block44 = blocks[blocksOffset++];\n        values[valuesOffset++] = ((block43 & 17592186044415L) << 19) | (block44 >>> 45);\n        final long block45 = blocks[blocksOffset++];\n        values[valuesOffset++] = ((block44 & 35184372088831L) << 18) | (block45 >>> 46);\n        final long block46 = blocks[blocksOffset++];\n        values[valuesOffset++] = ((block45 & 70368744177663L) << 17) | (block46 >>> 47);\n        final long block47 = blocks[blocksOffset++];\n        values[valuesOffset++] = ((block46 & 140737488355327L) << 16) | (block47 >>> 48);\n        final long block48 = blocks[blocksOffset++];\n        values[valuesOffset++] = ((block47 & 281474976710655L) << 15) | (block48 >>> 49);\n        final long block49 = blocks[blocksOffset++];\n        values[valuesOffset++] = ((block48 & 562949953421311L) << 14) | (block49 >>> 50);\n        final long block50 = blocks[blocksOffset++];\n        values[valuesOffset++] = ((block49 & 1125899906842623L) << 13) | (block50 >>> 51);\n        final long block51 = blocks[blocksOffset++];\n        values[valuesOffset++] = ((block50 & 2251799813685247L) << 12) | (block51 >>> 52);\n        final long block52 = blocks[blocksOffset++];\n        values[valuesOffset++] = ((block51 & 4503599627370495L) << 11) | (block52 >>> 53);\n        final long block53 = blocks[blocksOffset++];\n        values[valuesOffset++] = ((block52 & 9007199254740991L) << 10) | (block53 >>> 54);\n        final long block54 = blocks[blocksOffset++];\n        values[valuesOffset++] = ((block53 & 18014398509481983L) << 9) | (block54 >>> 55);\n        final long block55 = blocks[blocksOffset++];\n        values[valuesOffset++] = ((block54 & 36028797018963967L) << 8) | (block55 >>> 56);\n        final long block56 = blocks[blocksOffset++];\n        values[valuesOffset++] = ((block55 & 72057594037927935L) << 7) | (block56 >>> 57);\n        final long block57 = blocks[blocksOffset++];\n        values[valuesOffset++] = ((block56 & 144115188075855871L) << 6) | (block57 >>> 58);\n        final long block58 = blocks[blocksOffset++];\n        values[valuesOffset++] = ((block57 & 288230376151711743L) << 5) | (block58 >>> 59);\n        final long block59 = blocks[blocksOffset++];\n        values[valuesOffset++] = ((block58 & 576460752303423487L) << 4) | (block59 >>> 60);\n        final long block60 = blocks[blocksOffset++];\n        values[valuesOffset++] = ((block59 & 1152921504606846975L) << 3) | (block60 >>> 61);\n        final long block61 = blocks[blocksOffset++];\n        values[valuesOffset++] = ((block60 & 2305843009213693951L) << 2) | (block61 >>> 62);\n        final long block62 = blocks[blocksOffset++];\n        values[valuesOffset++] = ((block61 & 4611686018427387903L) << 1) | (block62 >>> 63);\n        values[valuesOffset++] = block62 & 9223372036854775807L;\n      }\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"58d488e3fd72dfc95fa76fcb24f58e90c343323c","date":1346235723,"type":4,"author":"Adrien Grand","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/util/packed/BulkOperationPacked63#decode(long[],int,long[],int,int).mjava","sourceNew":null,"sourceOld":"    @Override\n    public void decode(long[] blocks, int blocksOffset, long[] values, int valuesOffset, int iterations) {\n      assert blocksOffset + iterations * blockCount() <= blocks.length;\n      assert valuesOffset + iterations * valueCount() <= values.length;\n      for (int i = 0; i < iterations; ++i) {\n        final long block0 = blocks[blocksOffset++];\n        values[valuesOffset++] = block0 >>> 1;\n        final long block1 = blocks[blocksOffset++];\n        values[valuesOffset++] = ((block0 & 1L) << 62) | (block1 >>> 2);\n        final long block2 = blocks[blocksOffset++];\n        values[valuesOffset++] = ((block1 & 3L) << 61) | (block2 >>> 3);\n        final long block3 = blocks[blocksOffset++];\n        values[valuesOffset++] = ((block2 & 7L) << 60) | (block3 >>> 4);\n        final long block4 = blocks[blocksOffset++];\n        values[valuesOffset++] = ((block3 & 15L) << 59) | (block4 >>> 5);\n        final long block5 = blocks[blocksOffset++];\n        values[valuesOffset++] = ((block4 & 31L) << 58) | (block5 >>> 6);\n        final long block6 = blocks[blocksOffset++];\n        values[valuesOffset++] = ((block5 & 63L) << 57) | (block6 >>> 7);\n        final long block7 = blocks[blocksOffset++];\n        values[valuesOffset++] = ((block6 & 127L) << 56) | (block7 >>> 8);\n        final long block8 = blocks[blocksOffset++];\n        values[valuesOffset++] = ((block7 & 255L) << 55) | (block8 >>> 9);\n        final long block9 = blocks[blocksOffset++];\n        values[valuesOffset++] = ((block8 & 511L) << 54) | (block9 >>> 10);\n        final long block10 = blocks[blocksOffset++];\n        values[valuesOffset++] = ((block9 & 1023L) << 53) | (block10 >>> 11);\n        final long block11 = blocks[blocksOffset++];\n        values[valuesOffset++] = ((block10 & 2047L) << 52) | (block11 >>> 12);\n        final long block12 = blocks[blocksOffset++];\n        values[valuesOffset++] = ((block11 & 4095L) << 51) | (block12 >>> 13);\n        final long block13 = blocks[blocksOffset++];\n        values[valuesOffset++] = ((block12 & 8191L) << 50) | (block13 >>> 14);\n        final long block14 = blocks[blocksOffset++];\n        values[valuesOffset++] = ((block13 & 16383L) << 49) | (block14 >>> 15);\n        final long block15 = blocks[blocksOffset++];\n        values[valuesOffset++] = ((block14 & 32767L) << 48) | (block15 >>> 16);\n        final long block16 = blocks[blocksOffset++];\n        values[valuesOffset++] = ((block15 & 65535L) << 47) | (block16 >>> 17);\n        final long block17 = blocks[blocksOffset++];\n        values[valuesOffset++] = ((block16 & 131071L) << 46) | (block17 >>> 18);\n        final long block18 = blocks[blocksOffset++];\n        values[valuesOffset++] = ((block17 & 262143L) << 45) | (block18 >>> 19);\n        final long block19 = blocks[blocksOffset++];\n        values[valuesOffset++] = ((block18 & 524287L) << 44) | (block19 >>> 20);\n        final long block20 = blocks[blocksOffset++];\n        values[valuesOffset++] = ((block19 & 1048575L) << 43) | (block20 >>> 21);\n        final long block21 = blocks[blocksOffset++];\n        values[valuesOffset++] = ((block20 & 2097151L) << 42) | (block21 >>> 22);\n        final long block22 = blocks[blocksOffset++];\n        values[valuesOffset++] = ((block21 & 4194303L) << 41) | (block22 >>> 23);\n        final long block23 = blocks[blocksOffset++];\n        values[valuesOffset++] = ((block22 & 8388607L) << 40) | (block23 >>> 24);\n        final long block24 = blocks[blocksOffset++];\n        values[valuesOffset++] = ((block23 & 16777215L) << 39) | (block24 >>> 25);\n        final long block25 = blocks[blocksOffset++];\n        values[valuesOffset++] = ((block24 & 33554431L) << 38) | (block25 >>> 26);\n        final long block26 = blocks[blocksOffset++];\n        values[valuesOffset++] = ((block25 & 67108863L) << 37) | (block26 >>> 27);\n        final long block27 = blocks[blocksOffset++];\n        values[valuesOffset++] = ((block26 & 134217727L) << 36) | (block27 >>> 28);\n        final long block28 = blocks[blocksOffset++];\n        values[valuesOffset++] = ((block27 & 268435455L) << 35) | (block28 >>> 29);\n        final long block29 = blocks[blocksOffset++];\n        values[valuesOffset++] = ((block28 & 536870911L) << 34) | (block29 >>> 30);\n        final long block30 = blocks[blocksOffset++];\n        values[valuesOffset++] = ((block29 & 1073741823L) << 33) | (block30 >>> 31);\n        final long block31 = blocks[blocksOffset++];\n        values[valuesOffset++] = ((block30 & 2147483647L) << 32) | (block31 >>> 32);\n        final long block32 = blocks[blocksOffset++];\n        values[valuesOffset++] = ((block31 & 4294967295L) << 31) | (block32 >>> 33);\n        final long block33 = blocks[blocksOffset++];\n        values[valuesOffset++] = ((block32 & 8589934591L) << 30) | (block33 >>> 34);\n        final long block34 = blocks[blocksOffset++];\n        values[valuesOffset++] = ((block33 & 17179869183L) << 29) | (block34 >>> 35);\n        final long block35 = blocks[blocksOffset++];\n        values[valuesOffset++] = ((block34 & 34359738367L) << 28) | (block35 >>> 36);\n        final long block36 = blocks[blocksOffset++];\n        values[valuesOffset++] = ((block35 & 68719476735L) << 27) | (block36 >>> 37);\n        final long block37 = blocks[blocksOffset++];\n        values[valuesOffset++] = ((block36 & 137438953471L) << 26) | (block37 >>> 38);\n        final long block38 = blocks[blocksOffset++];\n        values[valuesOffset++] = ((block37 & 274877906943L) << 25) | (block38 >>> 39);\n        final long block39 = blocks[blocksOffset++];\n        values[valuesOffset++] = ((block38 & 549755813887L) << 24) | (block39 >>> 40);\n        final long block40 = blocks[blocksOffset++];\n        values[valuesOffset++] = ((block39 & 1099511627775L) << 23) | (block40 >>> 41);\n        final long block41 = blocks[blocksOffset++];\n        values[valuesOffset++] = ((block40 & 2199023255551L) << 22) | (block41 >>> 42);\n        final long block42 = blocks[blocksOffset++];\n        values[valuesOffset++] = ((block41 & 4398046511103L) << 21) | (block42 >>> 43);\n        final long block43 = blocks[blocksOffset++];\n        values[valuesOffset++] = ((block42 & 8796093022207L) << 20) | (block43 >>> 44);\n        final long block44 = blocks[blocksOffset++];\n        values[valuesOffset++] = ((block43 & 17592186044415L) << 19) | (block44 >>> 45);\n        final long block45 = blocks[blocksOffset++];\n        values[valuesOffset++] = ((block44 & 35184372088831L) << 18) | (block45 >>> 46);\n        final long block46 = blocks[blocksOffset++];\n        values[valuesOffset++] = ((block45 & 70368744177663L) << 17) | (block46 >>> 47);\n        final long block47 = blocks[blocksOffset++];\n        values[valuesOffset++] = ((block46 & 140737488355327L) << 16) | (block47 >>> 48);\n        final long block48 = blocks[blocksOffset++];\n        values[valuesOffset++] = ((block47 & 281474976710655L) << 15) | (block48 >>> 49);\n        final long block49 = blocks[blocksOffset++];\n        values[valuesOffset++] = ((block48 & 562949953421311L) << 14) | (block49 >>> 50);\n        final long block50 = blocks[blocksOffset++];\n        values[valuesOffset++] = ((block49 & 1125899906842623L) << 13) | (block50 >>> 51);\n        final long block51 = blocks[blocksOffset++];\n        values[valuesOffset++] = ((block50 & 2251799813685247L) << 12) | (block51 >>> 52);\n        final long block52 = blocks[blocksOffset++];\n        values[valuesOffset++] = ((block51 & 4503599627370495L) << 11) | (block52 >>> 53);\n        final long block53 = blocks[blocksOffset++];\n        values[valuesOffset++] = ((block52 & 9007199254740991L) << 10) | (block53 >>> 54);\n        final long block54 = blocks[blocksOffset++];\n        values[valuesOffset++] = ((block53 & 18014398509481983L) << 9) | (block54 >>> 55);\n        final long block55 = blocks[blocksOffset++];\n        values[valuesOffset++] = ((block54 & 36028797018963967L) << 8) | (block55 >>> 56);\n        final long block56 = blocks[blocksOffset++];\n        values[valuesOffset++] = ((block55 & 72057594037927935L) << 7) | (block56 >>> 57);\n        final long block57 = blocks[blocksOffset++];\n        values[valuesOffset++] = ((block56 & 144115188075855871L) << 6) | (block57 >>> 58);\n        final long block58 = blocks[blocksOffset++];\n        values[valuesOffset++] = ((block57 & 288230376151711743L) << 5) | (block58 >>> 59);\n        final long block59 = blocks[blocksOffset++];\n        values[valuesOffset++] = ((block58 & 576460752303423487L) << 4) | (block59 >>> 60);\n        final long block60 = blocks[blocksOffset++];\n        values[valuesOffset++] = ((block59 & 1152921504606846975L) << 3) | (block60 >>> 61);\n        final long block61 = blocks[blocksOffset++];\n        values[valuesOffset++] = ((block60 & 2305843009213693951L) << 2) | (block61 >>> 62);\n        final long block62 = blocks[blocksOffset++];\n        values[valuesOffset++] = ((block61 & 4611686018427387903L) << 1) | (block62 >>> 63);\n        values[valuesOffset++] = block62 & 9223372036854775807L;\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"05a14b2611ead08655a2b2bdc61632eb31316e57","date":1346366621,"type":4,"author":"Uwe Schindler","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/util/packed/BulkOperationPacked63#decode(long[],int,long[],int,int).mjava","sourceNew":null,"sourceOld":"    @Override\n    public void decode(long[] blocks, int blocksOffset, long[] values, int valuesOffset, int iterations) {\n      assert blocksOffset + iterations * blockCount() <= blocks.length;\n      assert valuesOffset + iterations * valueCount() <= values.length;\n      for (int i = 0; i < iterations; ++i) {\n        final long block0 = blocks[blocksOffset++];\n        values[valuesOffset++] = block0 >>> 1;\n        final long block1 = blocks[blocksOffset++];\n        values[valuesOffset++] = ((block0 & 1L) << 62) | (block1 >>> 2);\n        final long block2 = blocks[blocksOffset++];\n        values[valuesOffset++] = ((block1 & 3L) << 61) | (block2 >>> 3);\n        final long block3 = blocks[blocksOffset++];\n        values[valuesOffset++] = ((block2 & 7L) << 60) | (block3 >>> 4);\n        final long block4 = blocks[blocksOffset++];\n        values[valuesOffset++] = ((block3 & 15L) << 59) | (block4 >>> 5);\n        final long block5 = blocks[blocksOffset++];\n        values[valuesOffset++] = ((block4 & 31L) << 58) | (block5 >>> 6);\n        final long block6 = blocks[blocksOffset++];\n        values[valuesOffset++] = ((block5 & 63L) << 57) | (block6 >>> 7);\n        final long block7 = blocks[blocksOffset++];\n        values[valuesOffset++] = ((block6 & 127L) << 56) | (block7 >>> 8);\n        final long block8 = blocks[blocksOffset++];\n        values[valuesOffset++] = ((block7 & 255L) << 55) | (block8 >>> 9);\n        final long block9 = blocks[blocksOffset++];\n        values[valuesOffset++] = ((block8 & 511L) << 54) | (block9 >>> 10);\n        final long block10 = blocks[blocksOffset++];\n        values[valuesOffset++] = ((block9 & 1023L) << 53) | (block10 >>> 11);\n        final long block11 = blocks[blocksOffset++];\n        values[valuesOffset++] = ((block10 & 2047L) << 52) | (block11 >>> 12);\n        final long block12 = blocks[blocksOffset++];\n        values[valuesOffset++] = ((block11 & 4095L) << 51) | (block12 >>> 13);\n        final long block13 = blocks[blocksOffset++];\n        values[valuesOffset++] = ((block12 & 8191L) << 50) | (block13 >>> 14);\n        final long block14 = blocks[blocksOffset++];\n        values[valuesOffset++] = ((block13 & 16383L) << 49) | (block14 >>> 15);\n        final long block15 = blocks[blocksOffset++];\n        values[valuesOffset++] = ((block14 & 32767L) << 48) | (block15 >>> 16);\n        final long block16 = blocks[blocksOffset++];\n        values[valuesOffset++] = ((block15 & 65535L) << 47) | (block16 >>> 17);\n        final long block17 = blocks[blocksOffset++];\n        values[valuesOffset++] = ((block16 & 131071L) << 46) | (block17 >>> 18);\n        final long block18 = blocks[blocksOffset++];\n        values[valuesOffset++] = ((block17 & 262143L) << 45) | (block18 >>> 19);\n        final long block19 = blocks[blocksOffset++];\n        values[valuesOffset++] = ((block18 & 524287L) << 44) | (block19 >>> 20);\n        final long block20 = blocks[blocksOffset++];\n        values[valuesOffset++] = ((block19 & 1048575L) << 43) | (block20 >>> 21);\n        final long block21 = blocks[blocksOffset++];\n        values[valuesOffset++] = ((block20 & 2097151L) << 42) | (block21 >>> 22);\n        final long block22 = blocks[blocksOffset++];\n        values[valuesOffset++] = ((block21 & 4194303L) << 41) | (block22 >>> 23);\n        final long block23 = blocks[blocksOffset++];\n        values[valuesOffset++] = ((block22 & 8388607L) << 40) | (block23 >>> 24);\n        final long block24 = blocks[blocksOffset++];\n        values[valuesOffset++] = ((block23 & 16777215L) << 39) | (block24 >>> 25);\n        final long block25 = blocks[blocksOffset++];\n        values[valuesOffset++] = ((block24 & 33554431L) << 38) | (block25 >>> 26);\n        final long block26 = blocks[blocksOffset++];\n        values[valuesOffset++] = ((block25 & 67108863L) << 37) | (block26 >>> 27);\n        final long block27 = blocks[blocksOffset++];\n        values[valuesOffset++] = ((block26 & 134217727L) << 36) | (block27 >>> 28);\n        final long block28 = blocks[blocksOffset++];\n        values[valuesOffset++] = ((block27 & 268435455L) << 35) | (block28 >>> 29);\n        final long block29 = blocks[blocksOffset++];\n        values[valuesOffset++] = ((block28 & 536870911L) << 34) | (block29 >>> 30);\n        final long block30 = blocks[blocksOffset++];\n        values[valuesOffset++] = ((block29 & 1073741823L) << 33) | (block30 >>> 31);\n        final long block31 = blocks[blocksOffset++];\n        values[valuesOffset++] = ((block30 & 2147483647L) << 32) | (block31 >>> 32);\n        final long block32 = blocks[blocksOffset++];\n        values[valuesOffset++] = ((block31 & 4294967295L) << 31) | (block32 >>> 33);\n        final long block33 = blocks[blocksOffset++];\n        values[valuesOffset++] = ((block32 & 8589934591L) << 30) | (block33 >>> 34);\n        final long block34 = blocks[blocksOffset++];\n        values[valuesOffset++] = ((block33 & 17179869183L) << 29) | (block34 >>> 35);\n        final long block35 = blocks[blocksOffset++];\n        values[valuesOffset++] = ((block34 & 34359738367L) << 28) | (block35 >>> 36);\n        final long block36 = blocks[blocksOffset++];\n        values[valuesOffset++] = ((block35 & 68719476735L) << 27) | (block36 >>> 37);\n        final long block37 = blocks[blocksOffset++];\n        values[valuesOffset++] = ((block36 & 137438953471L) << 26) | (block37 >>> 38);\n        final long block38 = blocks[blocksOffset++];\n        values[valuesOffset++] = ((block37 & 274877906943L) << 25) | (block38 >>> 39);\n        final long block39 = blocks[blocksOffset++];\n        values[valuesOffset++] = ((block38 & 549755813887L) << 24) | (block39 >>> 40);\n        final long block40 = blocks[blocksOffset++];\n        values[valuesOffset++] = ((block39 & 1099511627775L) << 23) | (block40 >>> 41);\n        final long block41 = blocks[blocksOffset++];\n        values[valuesOffset++] = ((block40 & 2199023255551L) << 22) | (block41 >>> 42);\n        final long block42 = blocks[blocksOffset++];\n        values[valuesOffset++] = ((block41 & 4398046511103L) << 21) | (block42 >>> 43);\n        final long block43 = blocks[blocksOffset++];\n        values[valuesOffset++] = ((block42 & 8796093022207L) << 20) | (block43 >>> 44);\n        final long block44 = blocks[blocksOffset++];\n        values[valuesOffset++] = ((block43 & 17592186044415L) << 19) | (block44 >>> 45);\n        final long block45 = blocks[blocksOffset++];\n        values[valuesOffset++] = ((block44 & 35184372088831L) << 18) | (block45 >>> 46);\n        final long block46 = blocks[blocksOffset++];\n        values[valuesOffset++] = ((block45 & 70368744177663L) << 17) | (block46 >>> 47);\n        final long block47 = blocks[blocksOffset++];\n        values[valuesOffset++] = ((block46 & 140737488355327L) << 16) | (block47 >>> 48);\n        final long block48 = blocks[blocksOffset++];\n        values[valuesOffset++] = ((block47 & 281474976710655L) << 15) | (block48 >>> 49);\n        final long block49 = blocks[blocksOffset++];\n        values[valuesOffset++] = ((block48 & 562949953421311L) << 14) | (block49 >>> 50);\n        final long block50 = blocks[blocksOffset++];\n        values[valuesOffset++] = ((block49 & 1125899906842623L) << 13) | (block50 >>> 51);\n        final long block51 = blocks[blocksOffset++];\n        values[valuesOffset++] = ((block50 & 2251799813685247L) << 12) | (block51 >>> 52);\n        final long block52 = blocks[blocksOffset++];\n        values[valuesOffset++] = ((block51 & 4503599627370495L) << 11) | (block52 >>> 53);\n        final long block53 = blocks[blocksOffset++];\n        values[valuesOffset++] = ((block52 & 9007199254740991L) << 10) | (block53 >>> 54);\n        final long block54 = blocks[blocksOffset++];\n        values[valuesOffset++] = ((block53 & 18014398509481983L) << 9) | (block54 >>> 55);\n        final long block55 = blocks[blocksOffset++];\n        values[valuesOffset++] = ((block54 & 36028797018963967L) << 8) | (block55 >>> 56);\n        final long block56 = blocks[blocksOffset++];\n        values[valuesOffset++] = ((block55 & 72057594037927935L) << 7) | (block56 >>> 57);\n        final long block57 = blocks[blocksOffset++];\n        values[valuesOffset++] = ((block56 & 144115188075855871L) << 6) | (block57 >>> 58);\n        final long block58 = blocks[blocksOffset++];\n        values[valuesOffset++] = ((block57 & 288230376151711743L) << 5) | (block58 >>> 59);\n        final long block59 = blocks[blocksOffset++];\n        values[valuesOffset++] = ((block58 & 576460752303423487L) << 4) | (block59 >>> 60);\n        final long block60 = blocks[blocksOffset++];\n        values[valuesOffset++] = ((block59 & 1152921504606846975L) << 3) | (block60 >>> 61);\n        final long block61 = blocks[blocksOffset++];\n        values[valuesOffset++] = ((block60 & 2305843009213693951L) << 2) | (block61 >>> 62);\n        final long block62 = blocks[blocksOffset++];\n        values[valuesOffset++] = ((block61 & 4611686018427387903L) << 1) | (block62 >>> 63);\n        values[valuesOffset++] = block62 & 9223372036854775807L;\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"353f5909b00345d98d079a7db9a1bbe7485b1ea6":["3edb451c214b0d41e9d16514e3a1d6984ca2ca5f"],"001b25b42373b22a52f399dbf072f1224632e8e6":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","353f5909b00345d98d079a7db9a1bbe7485b1ea6"],"58d488e3fd72dfc95fa76fcb24f58e90c343323c":["353f5909b00345d98d079a7db9a1bbe7485b1ea6"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"05a14b2611ead08655a2b2bdc61632eb31316e57":["001b25b42373b22a52f399dbf072f1224632e8e6","58d488e3fd72dfc95fa76fcb24f58e90c343323c"],"3edb451c214b0d41e9d16514e3a1d6984ca2ca5f":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["58d488e3fd72dfc95fa76fcb24f58e90c343323c"]},"commit2Childs":{"353f5909b00345d98d079a7db9a1bbe7485b1ea6":["001b25b42373b22a52f399dbf072f1224632e8e6","58d488e3fd72dfc95fa76fcb24f58e90c343323c"],"001b25b42373b22a52f399dbf072f1224632e8e6":["05a14b2611ead08655a2b2bdc61632eb31316e57"],"58d488e3fd72dfc95fa76fcb24f58e90c343323c":["05a14b2611ead08655a2b2bdc61632eb31316e57","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["001b25b42373b22a52f399dbf072f1224632e8e6","3edb451c214b0d41e9d16514e3a1d6984ca2ca5f"],"05a14b2611ead08655a2b2bdc61632eb31316e57":[],"3edb451c214b0d41e9d16514e3a1d6984ca2ca5f":["353f5909b00345d98d079a7db9a1bbe7485b1ea6"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["05a14b2611ead08655a2b2bdc61632eb31316e57","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}