{"path":"solr/solrj/src/java/org/apache/solr/client/solrj/io/stream/PlotStream#toExpression(StreamFactory,boolean).mjava","commits":[{"id":"3d635d99fef6495f949f7bbac12fd269db070ee5","date":1499965547,"type":0,"author":"Joel Bernstein","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/io/stream/PlotStream#toExpression(StreamFactory,boolean).mjava","pathOld":"/dev/null","sourceNew":"  private StreamExpression toExpression(StreamFactory factory, boolean includeStreams) throws IOException {\n    // function name\n    StreamExpression expression = new StreamExpression(factory.getFunctionName(this.getClass()));\n\n    // add string based params\n    for(Entry<String,String> param : stringParams.entrySet()){\n      expression.addParameter(new StreamExpressionNamedParameter(param.getKey(), param.getValue()));\n    }\n\n    // add evaluator based params\n    for(Entry<String,StreamEvaluator> param : evaluatorParams.entrySet()){\n      expression.addParameter(new StreamExpressionNamedParameter(param.getKey(), param.getValue().toExpression(factory)));\n    }\n\n    // add stream based params\n    for(Entry<String,TupleStream> param : streamParams.entrySet()){\n      if(includeStreams){\n        expression.addParameter(new StreamExpressionNamedParameter(param.getKey(), ((Expressible)param.getValue()).toExpression(factory)));\n      }\n      else{\n        expression.addParameter(new StreamExpressionNamedParameter(param.getKey(), \"<stream>\"));\n      }\n    }\n\n    return expression;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"aaf90fc29510e72665ac7934f34c3d1c25efad64","date":1500354819,"type":0,"author":"Cao Manh Dat","isMerge":true,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/io/stream/PlotStream#toExpression(StreamFactory,boolean).mjava","pathOld":"/dev/null","sourceNew":"  private StreamExpression toExpression(StreamFactory factory, boolean includeStreams) throws IOException {\n    // function name\n    StreamExpression expression = new StreamExpression(factory.getFunctionName(this.getClass()));\n\n    // add string based params\n    for(Entry<String,String> param : stringParams.entrySet()){\n      expression.addParameter(new StreamExpressionNamedParameter(param.getKey(), param.getValue()));\n    }\n\n    // add evaluator based params\n    for(Entry<String,StreamEvaluator> param : evaluatorParams.entrySet()){\n      expression.addParameter(new StreamExpressionNamedParameter(param.getKey(), param.getValue().toExpression(factory)));\n    }\n\n    // add stream based params\n    for(Entry<String,TupleStream> param : streamParams.entrySet()){\n      if(includeStreams){\n        expression.addParameter(new StreamExpressionNamedParameter(param.getKey(), ((Expressible)param.getValue()).toExpression(factory)));\n      }\n      else{\n        expression.addParameter(new StreamExpressionNamedParameter(param.getKey(), \"<stream>\"));\n      }\n    }\n\n    return expression;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"aaf90fc29510e72665ac7934f34c3d1c25efad64":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","3d635d99fef6495f949f7bbac12fd269db070ee5"],"3d635d99fef6495f949f7bbac12fd269db070ee5":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3d635d99fef6495f949f7bbac12fd269db070ee5"]},"commit2Childs":{"aaf90fc29510e72665ac7934f34c3d1c25efad64":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["aaf90fc29510e72665ac7934f34c3d1c25efad64","3d635d99fef6495f949f7bbac12fd269db070ee5"],"3d635d99fef6495f949f7bbac12fd269db070ee5":["aaf90fc29510e72665ac7934f34c3d1c25efad64","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["aaf90fc29510e72665ac7934f34c3d1c25efad64","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}