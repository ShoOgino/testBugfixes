{"path":"src/test/org/apache/lucene/analysis/TestTeeSinkTokenFilter.ModuloTokenFilter#incrementToken().mjava","commits":[{"id":"ec8b5a20a12931b8d7e616c79c5248ae06cc5568","date":1248471948,"type":1,"author":"Michael Busch","isMerge":false,"pathNew":"src/test/org/apache/lucene/analysis/TestTeeSinkTokenFilter.ModuloTokenFilter#incrementToken().mjava","pathOld":"src/test/org/apache/lucene/analysis/TestTeeTokenFilter.ModuloTokenFilter#incrementToken().mjava","sourceNew":"    //return every 100 tokens\n    public boolean incrementToken() throws IOException {\n      boolean hasNext;\n      for (hasNext = input.incrementToken();\n           hasNext && count % modCount != 0;\n           hasNext = input.incrementToken()) {\n        count++;\n      }\n      count++;\n      return hasNext;\n    }\n\n","sourceOld":"    //return every 100 tokens\n    public boolean incrementToken() throws IOException {\n      boolean hasNext;\n      for (hasNext = input.incrementToken();\n           hasNext && count % modCount != 0;\n           hasNext = input.incrementToken()) {\n        count++;\n      }\n      count++;\n      return hasNext;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1326054a8d3aa66382d49decc7f330955c9c6f71","date":1257386139,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/test/org/apache/lucene/analysis/TestTeeSinkTokenFilter.ModuloTokenFilter#incrementToken().mjava","pathOld":"src/test/org/apache/lucene/analysis/TestTeeSinkTokenFilter.ModuloTokenFilter#incrementToken().mjava","sourceNew":"    //return every 100 tokens\n    @Override\n    public boolean incrementToken() throws IOException {\n      boolean hasNext;\n      for (hasNext = input.incrementToken();\n           hasNext && count % modCount != 0;\n           hasNext = input.incrementToken()) {\n        count++;\n      }\n      count++;\n      return hasNext;\n    }\n\n","sourceOld":"    //return every 100 tokens\n    public boolean incrementToken() throws IOException {\n      boolean hasNext;\n      for (hasNext = input.incrementToken();\n           hasNext && count % modCount != 0;\n           hasNext = input.incrementToken()) {\n        count++;\n      }\n      count++;\n      return hasNext;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":4,"author":"Dawid Weiss","isMerge":false,"pathNew":"/dev/null","pathOld":"src/test/org/apache/lucene/analysis/TestTeeSinkTokenFilter.ModuloTokenFilter#incrementToken().mjava","sourceNew":null,"sourceOld":"    //return every 100 tokens\n    @Override\n    public boolean incrementToken() throws IOException {\n      boolean hasNext;\n      for (hasNext = input.incrementToken();\n           hasNext && count % modCount != 0;\n           hasNext = input.incrementToken()) {\n        count++;\n      }\n      count++;\n      return hasNext;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"1326054a8d3aa66382d49decc7f330955c9c6f71":["ec8b5a20a12931b8d7e616c79c5248ae06cc5568"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["1326054a8d3aa66382d49decc7f330955c9c6f71"],"ec8b5a20a12931b8d7e616c79c5248ae06cc5568":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"1326054a8d3aa66382d49decc7f330955c9c6f71":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["ec8b5a20a12931b8d7e616c79c5248ae06cc5568"],"ec8b5a20a12931b8d7e616c79c5248ae06cc5568":["1326054a8d3aa66382d49decc7f330955c9c6f71"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}