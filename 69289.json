{"path":"solr/core/src/test/org/apache/solr/update/CdcrUpdateLogTest#testLogReaderNext().mjava","commits":[{"id":"86290366cefc1b9d4eced13b430858c4a4c0421d","date":1432321109,"type":0,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/update/CdcrUpdateLogTest#testLogReaderNext().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testLogReaderNext() throws Exception {\n    this.clearCore();\n\n    int start = 0;\n\n    UpdateLog ulog = h.getCore().getUpdateHandler().getUpdateLog();\n    CdcrUpdateLog.CdcrLogReader reader = ((CdcrUpdateLog) ulog).newLogReader(); // test reader on empty updates log\n\n    LinkedList<Long> versions = new LinkedList<>();\n    addDocs(10, start, versions);\n    start += 10;\n    assertU(commit());\n\n    addDocs(11, start, versions);\n    start += 11;\n    assertU(commit());\n\n    for (int i = 0; i < 10; i++) { // 10 adds\n      assertNotNull(reader.next());\n    }\n    Object o = reader.next();\n    assertNotNull(o);\n\n    List entry = (List) o;\n    int opAndFlags = (Integer) entry.get(0);\n    assertEquals(UpdateLog.COMMIT, opAndFlags & UpdateLog.OPERATION_MASK);\n\n    for (int i = 0; i < 11; i++) { // 11 adds\n      assertNotNull(reader.next());\n    }\n    o = reader.next();\n    assertNotNull(o);\n\n    entry = (List) o;\n    opAndFlags = (Integer) entry.get(0);\n    assertEquals(UpdateLog.COMMIT, opAndFlags & UpdateLog.OPERATION_MASK);\n\n    assertNull(reader.next());\n\n    // add a new tlog after having exhausted the reader\n\n    addDocs(10, start, versions);\n    start += 10;\n    assertU(commit());\n\n    // the reader should pick up the new tlog\n\n    for (int i = 0; i < 11; i++) { // 10 adds + 1 commit\n      assertNotNull(reader.next());\n    }\n    assertNull(reader.next());\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e98520789adb1d5ad05afb4956eca0944a929688","date":1592430701,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/update/CdcrUpdateLogTest#testLogReaderNext().mjava","pathOld":"solr/core/src/test/org/apache/solr/update/CdcrUpdateLogTest#testLogReaderNext().mjava","sourceNew":"  @Test\n  public void testLogReaderNext() throws Exception {\n    this.clearCore();\n\n    int start = 0;\n\n    UpdateLog ulog = h.getCore().getUpdateHandler().getUpdateLog();\n    CdcrUpdateLog.CdcrLogReader reader = ((CdcrUpdateLog) ulog).newLogReader(); // test reader on empty updates log\n\n    LinkedList<Long> versions = new LinkedList<>();\n    addDocs(10, start, versions);\n    start += 10;\n    assertU(commit());\n\n    addDocs(11, start, versions);\n    start += 11;\n    assertU(commit());\n\n    for (int i = 0; i < 10; i++) { // 10 adds\n      assertNotNull(reader.next());\n    }\n    Object o = reader.next();\n    assertNotNull(o);\n\n    @SuppressWarnings({\"rawtypes\"})\n    List entry = (List) o;\n    int opAndFlags = (Integer) entry.get(0);\n    assertEquals(UpdateLog.COMMIT, opAndFlags & UpdateLog.OPERATION_MASK);\n\n    for (int i = 0; i < 11; i++) { // 11 adds\n      assertNotNull(reader.next());\n    }\n    o = reader.next();\n    assertNotNull(o);\n\n    entry = (List) o;\n    opAndFlags = (Integer) entry.get(0);\n    assertEquals(UpdateLog.COMMIT, opAndFlags & UpdateLog.OPERATION_MASK);\n\n    assertNull(reader.next());\n\n    // add a new tlog after having exhausted the reader\n\n    addDocs(10, start, versions);\n    start += 10;\n    assertU(commit());\n\n    // the reader should pick up the new tlog\n\n    for (int i = 0; i < 11; i++) { // 10 adds + 1 commit\n      assertNotNull(reader.next());\n    }\n    assertNull(reader.next());\n  }\n\n","sourceOld":"  @Test\n  public void testLogReaderNext() throws Exception {\n    this.clearCore();\n\n    int start = 0;\n\n    UpdateLog ulog = h.getCore().getUpdateHandler().getUpdateLog();\n    CdcrUpdateLog.CdcrLogReader reader = ((CdcrUpdateLog) ulog).newLogReader(); // test reader on empty updates log\n\n    LinkedList<Long> versions = new LinkedList<>();\n    addDocs(10, start, versions);\n    start += 10;\n    assertU(commit());\n\n    addDocs(11, start, versions);\n    start += 11;\n    assertU(commit());\n\n    for (int i = 0; i < 10; i++) { // 10 adds\n      assertNotNull(reader.next());\n    }\n    Object o = reader.next();\n    assertNotNull(o);\n\n    List entry = (List) o;\n    int opAndFlags = (Integer) entry.get(0);\n    assertEquals(UpdateLog.COMMIT, opAndFlags & UpdateLog.OPERATION_MASK);\n\n    for (int i = 0; i < 11; i++) { // 11 adds\n      assertNotNull(reader.next());\n    }\n    o = reader.next();\n    assertNotNull(o);\n\n    entry = (List) o;\n    opAndFlags = (Integer) entry.get(0);\n    assertEquals(UpdateLog.COMMIT, opAndFlags & UpdateLog.OPERATION_MASK);\n\n    assertNull(reader.next());\n\n    // add a new tlog after having exhausted the reader\n\n    addDocs(10, start, versions);\n    start += 10;\n    assertU(commit());\n\n    // the reader should pick up the new tlog\n\n    for (int i = 0; i < 11; i++) { // 10 adds + 1 commit\n      assertNotNull(reader.next());\n    }\n    assertNull(reader.next());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"23ec6d2969d61cadbfd0a5452e9be1f9999e8aa1","date":1598647393,"type":4,"author":"Ishan Chattopadhyaya","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/core/src/test/org/apache/solr/update/CdcrUpdateLogTest#testLogReaderNext().mjava","sourceNew":null,"sourceOld":"  @Test\n  public void testLogReaderNext() throws Exception {\n    this.clearCore();\n\n    int start = 0;\n\n    UpdateLog ulog = h.getCore().getUpdateHandler().getUpdateLog();\n    CdcrUpdateLog.CdcrLogReader reader = ((CdcrUpdateLog) ulog).newLogReader(); // test reader on empty updates log\n\n    LinkedList<Long> versions = new LinkedList<>();\n    addDocs(10, start, versions);\n    start += 10;\n    assertU(commit());\n\n    addDocs(11, start, versions);\n    start += 11;\n    assertU(commit());\n\n    for (int i = 0; i < 10; i++) { // 10 adds\n      assertNotNull(reader.next());\n    }\n    Object o = reader.next();\n    assertNotNull(o);\n\n    @SuppressWarnings({\"rawtypes\"})\n    List entry = (List) o;\n    int opAndFlags = (Integer) entry.get(0);\n    assertEquals(UpdateLog.COMMIT, opAndFlags & UpdateLog.OPERATION_MASK);\n\n    for (int i = 0; i < 11; i++) { // 11 adds\n      assertNotNull(reader.next());\n    }\n    o = reader.next();\n    assertNotNull(o);\n\n    entry = (List) o;\n    opAndFlags = (Integer) entry.get(0);\n    assertEquals(UpdateLog.COMMIT, opAndFlags & UpdateLog.OPERATION_MASK);\n\n    assertNull(reader.next());\n\n    // add a new tlog after having exhausted the reader\n\n    addDocs(10, start, versions);\n    start += 10;\n    assertU(commit());\n\n    // the reader should pick up the new tlog\n\n    for (int i = 0; i < 11; i++) { // 10 adds + 1 commit\n      assertNotNull(reader.next());\n    }\n    assertNull(reader.next());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"86290366cefc1b9d4eced13b430858c4a4c0421d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"23ec6d2969d61cadbfd0a5452e9be1f9999e8aa1":["e98520789adb1d5ad05afb4956eca0944a929688"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["23ec6d2969d61cadbfd0a5452e9be1f9999e8aa1"],"e98520789adb1d5ad05afb4956eca0944a929688":["86290366cefc1b9d4eced13b430858c4a4c0421d"]},"commit2Childs":{"86290366cefc1b9d4eced13b430858c4a4c0421d":["e98520789adb1d5ad05afb4956eca0944a929688"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["86290366cefc1b9d4eced13b430858c4a4c0421d"],"23ec6d2969d61cadbfd0a5452e9be1f9999e8aa1":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"e98520789adb1d5ad05afb4956eca0944a929688":["23ec6d2969d61cadbfd0a5452e9be1f9999e8aa1"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}