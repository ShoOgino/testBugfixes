{"path":"solr/core/src/test/org/apache/solr/handler/component/StatsComponentTest#testStats().mjava","commits":[{"id":"c903c3d15906a3da96b8c0c2fb704491005fdbdb","date":1453508227,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/component/StatsComponentTest#testStats().mjava","pathOld":"solr/src/test/org/apache/solr/handler/component/StatsComponentTest#testStats().mjava","sourceNew":"  public void testStats() throws Exception {\n    for (String f : new String[] {\n            \"stats_i\",\"stats_l\",\"stats_f\",\"stats_d\",\n            \"stats_ti\",\"stats_tl\",\"stats_tf\",\"stats_td\"\n    }) {\n      doTestFieldStatisticsResult(f);\n      doTestFieldStatisticsMissingResult(f);\n      doTestFacetStatisticsResult(f);\n      doTestFacetStatisticsMissingResult(f);\n    }\n\n    for (String f : new String[] {\"stats_ii\", // plain int\n            \"stats_is\",    // sortable int\n            \"stats_tis\",\"stats_tfs\",\"stats_tls\",\"stats_tds\"  // trie fields\n                                  }) {\n      doTestMVFieldStatisticsResult(f);\n    }\n    \n  }\n\n","sourceOld":"  public void testStats() throws Exception {\n    for (String f : new String[] {\n            \"stats_i\",\"stats_l\",\"stats_f\",\"stats_d\",\n            \"stats_ti\",\"stats_tl\",\"stats_tf\",\"stats_td\"\n    }) {\n      doTestFieldStatisticsResult(f);\n      doTestFieldStatisticsMissingResult(f);\n      doTestFacetStatisticsResult(f);\n      doTestFacetStatisticsMissingResult(f);\n    }\n\n    for (String f : new String[] {\"stats_ii\", // plain int\n            \"stats_is\",    // sortable int\n            \"stats_tis\",\"stats_tfs\",\"stats_tls\",\"stats_tds\"  // trie fields\n                                  }) {\n      doTestMVFieldStatisticsResult(f);\n    }\n    \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a258fbb26824fd104ed795e5d9033d2d040049ee","date":1453508252,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/component/StatsComponentTest#testStats().mjava","pathOld":"solr/src/test/org/apache/solr/handler/component/StatsComponentTest#testStats().mjava","sourceNew":"  public void testStats() throws Exception {\n    for (String f : new String[] {\n            \"stats_i\",\"stats_l\",\"stats_f\",\"stats_d\",\n            \"stats_ti\",\"stats_tl\",\"stats_tf\",\"stats_td\"\n    }) {\n      doTestFieldStatisticsResult(f);\n      doTestFieldStatisticsMissingResult(f);\n      doTestFacetStatisticsResult(f);\n      doTestFacetStatisticsMissingResult(f);\n    }\n\n    for (String f : new String[] {\"stats_ii\", // plain int\n            \"stats_is\",    // sortable int\n            \"stats_tis\",\"stats_tfs\",\"stats_tls\",\"stats_tds\"  // trie fields\n                                  }) {\n      doTestMVFieldStatisticsResult(f);\n    }\n    \n  }\n\n","sourceOld":"  public void testStats() throws Exception {\n    for (String f : new String[] {\n            \"stats_i\",\"stats_l\",\"stats_f\",\"stats_d\",\n            \"stats_ti\",\"stats_tl\",\"stats_tf\",\"stats_td\"\n    }) {\n      doTestFieldStatisticsResult(f);\n      doTestFieldStatisticsMissingResult(f);\n      doTestFacetStatisticsResult(f);\n      doTestFacetStatisticsMissingResult(f);\n    }\n\n    for (String f : new String[] {\"stats_ii\", // plain int\n            \"stats_is\",    // sortable int\n            \"stats_tis\",\"stats_tfs\",\"stats_tls\",\"stats_tds\"  // trie fields\n                                  }) {\n      doTestMVFieldStatisticsResult(f);\n    }\n    \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/handler/component/StatsComponentTest#testStats().mjava","pathOld":"solr/src/test/org/apache/solr/handler/component/StatsComponentTest#testStats().mjava","sourceNew":"  public void testStats() throws Exception {\n    for (String f : new String[] {\n            \"stats_i\",\"stats_l\",\"stats_f\",\"stats_d\",\n            \"stats_ti\",\"stats_tl\",\"stats_tf\",\"stats_td\"\n    }) {\n      doTestFieldStatisticsResult(f);\n      doTestFieldStatisticsMissingResult(f);\n      doTestFacetStatisticsResult(f);\n      doTestFacetStatisticsMissingResult(f);\n    }\n\n    for (String f : new String[] {\"stats_ii\", // plain int\n            \"stats_is\",    // sortable int\n            \"stats_tis\",\"stats_tfs\",\"stats_tls\",\"stats_tds\"  // trie fields\n                                  }) {\n      doTestMVFieldStatisticsResult(f);\n    }\n    \n  }\n\n","sourceOld":"  public void testStats() throws Exception {\n    for (String f : new String[] {\n            \"stats_i\",\"stats_l\",\"stats_f\",\"stats_d\",\n            \"stats_ti\",\"stats_tl\",\"stats_tf\",\"stats_td\"\n    }) {\n      doTestFieldStatisticsResult(f);\n      doTestFieldStatisticsMissingResult(f);\n      doTestFacetStatisticsResult(f);\n      doTestFacetStatisticsMissingResult(f);\n    }\n\n    for (String f : new String[] {\"stats_ii\", // plain int\n            \"stats_is\",    // sortable int\n            \"stats_tis\",\"stats_tfs\",\"stats_tls\",\"stats_tds\"  // trie fields\n                                  }) {\n      doTestMVFieldStatisticsResult(f);\n    }\n    \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2106271e380c198349e0f6eac0395bb462913fab","date":1397072894,"type":3,"author":"Steven Rowe","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/component/StatsComponentTest#testStats().mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/component/StatsComponentTest#testStats().mjava","sourceNew":"  public void testStats() throws Exception {\n    for (String f : new String[] {\n            \"stats_i\",\"stats_l\",\"stats_f\",\"stats_d\",\n            \"stats_ti\",\"stats_tl\",\"stats_tf\",\"stats_td\"\n    }) {\n      doTestFieldStatisticsResult(f);\n      doTestFieldStatisticsMissingResult(f);\n      doTestFacetStatisticsResult(f);\n      doTestFacetStatisticsMissingResult(f);\n    }\n\n    for (String f : new String[] {\"stats_ii\",\n            \"stats_tis\",\"stats_tfs\",\"stats_tls\",\"stats_tds\"  // trie fields\n                                  }) {\n      doTestMVFieldStatisticsResult(f);\n    }\n    \n  }\n\n","sourceOld":"  public void testStats() throws Exception {\n    for (String f : new String[] {\n            \"stats_i\",\"stats_l\",\"stats_f\",\"stats_d\",\n            \"stats_ti\",\"stats_tl\",\"stats_tf\",\"stats_td\"\n    }) {\n      doTestFieldStatisticsResult(f);\n      doTestFieldStatisticsMissingResult(f);\n      doTestFacetStatisticsResult(f);\n      doTestFacetStatisticsMissingResult(f);\n    }\n\n    for (String f : new String[] {\"stats_ii\", // plain int\n            \"stats_is\",    // sortable int\n            \"stats_tis\",\"stats_tfs\",\"stats_tls\",\"stats_tds\"  // trie fields\n                                  }) {\n      doTestMVFieldStatisticsResult(f);\n    }\n    \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"d0c238d519ed8e8343ab723bcc8f1846786e42a6","date":1409789996,"type":3,"author":"Chris M. Hostetter","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/component/StatsComponentTest#testStats().mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/component/StatsComponentTest#testStats().mjava","sourceNew":"  public void testStats() throws Exception {\n    for (String f : new String[] {\n            \"stats_i\",\"stats_l\",\"stats_f\",\"stats_d\",\n            \"stats_ti\",\"stats_tl\",\"stats_tf\",\"stats_td\",\n            \"stats_ti_dv\",\"stats_tl_dv\",\"stats_tf_dv\",\"stats_td_dv\"\n//            , TODO: enable this test after SOLR-6452 is fixed\n//            \"stats_ti_ni_dv\",\"stats_tl_ni_dv\",\"stats_tf_ni_dv\",\"stats_td_ni_dv\"\n    }) {\n      doTestFieldStatisticsResult(f);\n      doTestFieldStatisticsMissingResult(f);\n      doTestFacetStatisticsResult(f);\n      doTestFacetStatisticsMissingResult(f);\n      clearIndex();\n      assertU(commit());\n    }\n\n    for (String f : new String[] {\"stats_ii\",\n            \"stats_tis\",\"stats_tfs\",\"stats_tls\",\"stats_tds\",  // trie fields\n            \"stats_tis_dv\",\"stats_tfs_dv\",\"stats_tls_dv\",\"stats_tds_dv\"  // Doc Values\n//          , TODO: enable this test after SOLR-6452 is fixed\n            //\"stats_tis_ni_dv\",\"stats_tfs_ni_dv\",\"stats_tls_ni_dv\",\"stats_tds_ni_dv\"  // Doc Values Not indexed\n                                  }) {\n      doTestMVFieldStatisticsResult(f);\n      clearIndex();\n      assertU(commit());\n    }\n    \n  }\n\n","sourceOld":"  public void testStats() throws Exception {\n    for (String f : new String[] {\n            \"stats_i\",\"stats_l\",\"stats_f\",\"stats_d\",\n            \"stats_ti\",\"stats_tl\",\"stats_tf\",\"stats_td\"\n    }) {\n      doTestFieldStatisticsResult(f);\n      doTestFieldStatisticsMissingResult(f);\n      doTestFacetStatisticsResult(f);\n      doTestFacetStatisticsMissingResult(f);\n    }\n\n    for (String f : new String[] {\"stats_ii\",\n            \"stats_tis\",\"stats_tfs\",\"stats_tls\",\"stats_tds\"  // trie fields\n                                  }) {\n      doTestMVFieldStatisticsResult(f);\n    }\n    \n  }\n\n","bugFix":["5e62bfc99fea332bfdcdca0f73a821428d533279"],"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"511309ff970d3c2a68d1ac453cc187df1198f0d1","date":1410303604,"type":3,"author":"Chris M. Hostetter","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/component/StatsComponentTest#testStats().mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/component/StatsComponentTest#testStats().mjava","sourceNew":"  public void testStats() throws Exception {\n    for (String f : new String[] {\n            \"stats_i\",\"stats_l\",\"stats_f\",\"stats_d\",\n            \"stats_ti\",\"stats_tl\",\"stats_tf\",\"stats_td\",\n            \"stats_ti_dv\",\"stats_tl_dv\",\"stats_tf_dv\",\"stats_td_dv\"\n//            , TODO: enable this test after SOLR-6452 is fixed\n//            \"stats_ti_ni_dv\",\"stats_tl_ni_dv\",\"stats_tf_ni_dv\",\"stats_td_ni_dv\"\n    }) {\n\n      // all of our checks should work with all of these params\n      // ie: with or w/o these excluded filters, results should be the same.\n      SolrParams[] baseParamsSet = new SolrParams[] {\n        params(\"stats.field\", f, \"stats\", \"true\"),\n        params(\"stats.field\", \"{!ex=fq1,fq2}\"+f, \"stats\", \"true\",\n               \"fq\", \"{!tag=fq1}-id:[0 TO 2]\", \n               \"fq\", \"{!tag=fq2}-id:[2 TO 1000]\"), \n        params(\"stats.field\", \"{!ex=fq1}\"+f, \"stats\", \"true\",\n               \"fq\", \"{!tag=fq1}id:1\")\n      };\n\n      doTestFieldStatisticsResult(f, baseParamsSet);\n      doTestFieldStatisticsMissingResult(f, baseParamsSet);\n      doTestFacetStatisticsResult(f, baseParamsSet);\n      doTestFacetStatisticsMissingResult(f, baseParamsSet);\n      \n      clearIndex();\n      assertU(commit());\n    }\n\n    for (String f : new String[] {\"stats_ii\",\n            \"stats_tis\",\"stats_tfs\",\"stats_tls\",\"stats_tds\",  // trie fields\n            \"stats_tis_dv\",\"stats_tfs_dv\",\"stats_tls_dv\",\"stats_tds_dv\"  // Doc Values\n//          , TODO: enable this test after SOLR-6452 is fixed\n            //\"stats_tis_ni_dv\",\"stats_tfs_ni_dv\",\"stats_tls_ni_dv\",\"stats_tds_ni_dv\"  // Doc Values Not indexed\n                                  }) {\n\n      doTestMVFieldStatisticsResult(f);\n      clearIndex();\n      assertU(commit());\n    }\n  }\n\n","sourceOld":"  public void testStats() throws Exception {\n    for (String f : new String[] {\n            \"stats_i\",\"stats_l\",\"stats_f\",\"stats_d\",\n            \"stats_ti\",\"stats_tl\",\"stats_tf\",\"stats_td\",\n            \"stats_ti_dv\",\"stats_tl_dv\",\"stats_tf_dv\",\"stats_td_dv\"\n//            , TODO: enable this test after SOLR-6452 is fixed\n//            \"stats_ti_ni_dv\",\"stats_tl_ni_dv\",\"stats_tf_ni_dv\",\"stats_td_ni_dv\"\n    }) {\n      doTestFieldStatisticsResult(f);\n      doTestFieldStatisticsMissingResult(f);\n      doTestFacetStatisticsResult(f);\n      doTestFacetStatisticsMissingResult(f);\n      clearIndex();\n      assertU(commit());\n    }\n\n    for (String f : new String[] {\"stats_ii\",\n            \"stats_tis\",\"stats_tfs\",\"stats_tls\",\"stats_tds\",  // trie fields\n            \"stats_tis_dv\",\"stats_tfs_dv\",\"stats_tls_dv\",\"stats_tds_dv\"  // Doc Values\n//          , TODO: enable this test after SOLR-6452 is fixed\n            //\"stats_tis_ni_dv\",\"stats_tfs_ni_dv\",\"stats_tls_ni_dv\",\"stats_tds_ni_dv\"  // Doc Values Not indexed\n                                  }) {\n      doTestMVFieldStatisticsResult(f);\n      clearIndex();\n      assertU(commit());\n    }\n    \n  }\n\n","bugFix":["4002610a071fd76efb20afdc94b0e963256a9b33"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"10eb287e62f3e48c07b2a817c1750c859bb5e7e7","date":1410374187,"type":3,"author":"Tomas Eduardo Fernandez Lobbe","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/component/StatsComponentTest#testStats().mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/component/StatsComponentTest#testStats().mjava","sourceNew":"  public void testStats() throws Exception {\n    for (String f : new String[] {\n            \"stats_i\",\"stats_l\",\"stats_f\",\"stats_d\",\n            \"stats_ti\",\"stats_tl\",\"stats_tf\",\"stats_td\",\n            \"stats_ti_dv\",\"stats_tl_dv\",\"stats_tf_dv\",\"stats_td_dv\", \n            \"stats_ti_ni_dv\",\"stats_tl_ni_dv\",\"stats_tf_ni_dv\",\"stats_td_ni_dv\"\n    }) {\n\n      // all of our checks should work with all of these params\n      // ie: with or w/o these excluded filters, results should be the same.\n      SolrParams[] baseParamsSet = new SolrParams[] {\n        params(\"stats.field\", f, \"stats\", \"true\"),\n        params(\"stats.field\", \"{!ex=fq1,fq2}\"+f, \"stats\", \"true\",\n               \"fq\", \"{!tag=fq1}-id:[0 TO 2]\", \n               \"fq\", \"{!tag=fq2}-id:[2 TO 1000]\"), \n        params(\"stats.field\", \"{!ex=fq1}\"+f, \"stats\", \"true\",\n               \"fq\", \"{!tag=fq1}id:1\")\n      };\n\n      doTestFieldStatisticsResult(f, baseParamsSet);\n      doTestFieldStatisticsMissingResult(f, baseParamsSet);\n      doTestFacetStatisticsResult(f, baseParamsSet);\n      doTestFacetStatisticsMissingResult(f, baseParamsSet);\n      \n      clearIndex();\n      assertU(commit());\n    }\n\n    for (String f : new String[] {\"stats_ii\",\n            \"stats_tis\",\"stats_tfs\",\"stats_tls\",\"stats_tds\",  // trie fields\n            \"stats_tis_dv\",\"stats_tfs_dv\",\"stats_tls_dv\",\"stats_tds_dv\",  // Doc Values\n            \"stats_tis_ni_dv\",\"stats_tfs_ni_dv\",\"stats_tls_ni_dv\",\"stats_tds_ni_dv\"  // Doc Values Not indexed\n                                  }) {\n\n      doTestMVFieldStatisticsResult(f);\n      clearIndex();\n      assertU(commit());\n    }\n  }\n\n","sourceOld":"  public void testStats() throws Exception {\n    for (String f : new String[] {\n            \"stats_i\",\"stats_l\",\"stats_f\",\"stats_d\",\n            \"stats_ti\",\"stats_tl\",\"stats_tf\",\"stats_td\",\n            \"stats_ti_dv\",\"stats_tl_dv\",\"stats_tf_dv\",\"stats_td_dv\"\n//            , TODO: enable this test after SOLR-6452 is fixed\n//            \"stats_ti_ni_dv\",\"stats_tl_ni_dv\",\"stats_tf_ni_dv\",\"stats_td_ni_dv\"\n    }) {\n\n      // all of our checks should work with all of these params\n      // ie: with or w/o these excluded filters, results should be the same.\n      SolrParams[] baseParamsSet = new SolrParams[] {\n        params(\"stats.field\", f, \"stats\", \"true\"),\n        params(\"stats.field\", \"{!ex=fq1,fq2}\"+f, \"stats\", \"true\",\n               \"fq\", \"{!tag=fq1}-id:[0 TO 2]\", \n               \"fq\", \"{!tag=fq2}-id:[2 TO 1000]\"), \n        params(\"stats.field\", \"{!ex=fq1}\"+f, \"stats\", \"true\",\n               \"fq\", \"{!tag=fq1}id:1\")\n      };\n\n      doTestFieldStatisticsResult(f, baseParamsSet);\n      doTestFieldStatisticsMissingResult(f, baseParamsSet);\n      doTestFacetStatisticsResult(f, baseParamsSet);\n      doTestFacetStatisticsMissingResult(f, baseParamsSet);\n      \n      clearIndex();\n      assertU(commit());\n    }\n\n    for (String f : new String[] {\"stats_ii\",\n            \"stats_tis\",\"stats_tfs\",\"stats_tls\",\"stats_tds\",  // trie fields\n            \"stats_tis_dv\",\"stats_tfs_dv\",\"stats_tls_dv\",\"stats_tds_dv\"  // Doc Values\n//          , TODO: enable this test after SOLR-6452 is fixed\n            //\"stats_tis_ni_dv\",\"stats_tfs_ni_dv\",\"stats_tls_ni_dv\",\"stats_tds_ni_dv\"  // Doc Values Not indexed\n                                  }) {\n\n      doTestMVFieldStatisticsResult(f);\n      clearIndex();\n      assertU(commit());\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"610c97b96420e614c67797fd43822ebc1d4b7ee2","date":1410814832,"type":3,"author":"Chris M. Hostetter","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/component/StatsComponentTest#testStats().mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/component/StatsComponentTest#testStats().mjava","sourceNew":"  public void testStats() throws Exception {\n    for (String f : new String[] {\n            \"stats_i\",\"stats_l\",\"stats_f\",\"stats_d\",\n            \"stats_ti\",\"stats_tl\",\"stats_tf\",\"stats_td\",\n            \"stats_ti_dv\",\"stats_tl_dv\",\"stats_tf_dv\",\"stats_td_dv\", \n            \"stats_ti_ni_dv\",\"stats_tl_ni_dv\",\"stats_tf_ni_dv\",\"stats_td_ni_dv\"\n    }) {\n\n      // all of our checks should work with all of these params\n      // ie: with or w/o these excluded filters, results should be the same.\n      SolrParams[] baseParamsSet = new SolrParams[] {\n        // NOTE: doTestFieldStatisticsResult needs the full list of possible tags to exclude\n        params(\"stats.field\", f, \"stats\", \"true\"),\n        params(\"stats.field\", \"{!ex=fq1,fq2}\"+f, \"stats\", \"true\",\n               \"fq\", \"{!tag=fq1}-id:[0 TO 2]\", \n               \"fq\", \"{!tag=fq2}-id:[2 TO 1000]\"), \n        params(\"stats.field\", \"{!ex=fq1}\"+f, \"stats\", \"true\",\n               \"fq\", \"{!tag=fq1}id:1\")\n      };\n\n      doTestFieldStatisticsResult(f, baseParamsSet);\n      doTestFieldStatisticsMissingResult(f, baseParamsSet);\n      doTestFacetStatisticsResult(f, baseParamsSet);\n      doTestFacetStatisticsMissingResult(f, baseParamsSet);\n      \n      clearIndex();\n      assertU(commit());\n    }\n\n    for (String f : new String[] {\"stats_ii\",\n            \"stats_tis\",\"stats_tfs\",\"stats_tls\",\"stats_tds\",  // trie fields\n            \"stats_tis_dv\",\"stats_tfs_dv\",\"stats_tls_dv\",\"stats_tds_dv\",  // Doc Values\n            \"stats_tis_ni_dv\",\"stats_tfs_ni_dv\",\"stats_tls_ni_dv\",\"stats_tds_ni_dv\"  // Doc Values Not indexed\n                                  }) {\n\n      doTestMVFieldStatisticsResult(f);\n      clearIndex();\n      assertU(commit());\n    }\n  }\n\n","sourceOld":"  public void testStats() throws Exception {\n    for (String f : new String[] {\n            \"stats_i\",\"stats_l\",\"stats_f\",\"stats_d\",\n            \"stats_ti\",\"stats_tl\",\"stats_tf\",\"stats_td\",\n            \"stats_ti_dv\",\"stats_tl_dv\",\"stats_tf_dv\",\"stats_td_dv\", \n            \"stats_ti_ni_dv\",\"stats_tl_ni_dv\",\"stats_tf_ni_dv\",\"stats_td_ni_dv\"\n    }) {\n\n      // all of our checks should work with all of these params\n      // ie: with or w/o these excluded filters, results should be the same.\n      SolrParams[] baseParamsSet = new SolrParams[] {\n        params(\"stats.field\", f, \"stats\", \"true\"),\n        params(\"stats.field\", \"{!ex=fq1,fq2}\"+f, \"stats\", \"true\",\n               \"fq\", \"{!tag=fq1}-id:[0 TO 2]\", \n               \"fq\", \"{!tag=fq2}-id:[2 TO 1000]\"), \n        params(\"stats.field\", \"{!ex=fq1}\"+f, \"stats\", \"true\",\n               \"fq\", \"{!tag=fq1}id:1\")\n      };\n\n      doTestFieldStatisticsResult(f, baseParamsSet);\n      doTestFieldStatisticsMissingResult(f, baseParamsSet);\n      doTestFacetStatisticsResult(f, baseParamsSet);\n      doTestFacetStatisticsMissingResult(f, baseParamsSet);\n      \n      clearIndex();\n      assertU(commit());\n    }\n\n    for (String f : new String[] {\"stats_ii\",\n            \"stats_tis\",\"stats_tfs\",\"stats_tls\",\"stats_tds\",  // trie fields\n            \"stats_tis_dv\",\"stats_tfs_dv\",\"stats_tls_dv\",\"stats_tds_dv\",  // Doc Values\n            \"stats_tis_ni_dv\",\"stats_tfs_ni_dv\",\"stats_tls_ni_dv\",\"stats_tds_ni_dv\"  // Doc Values Not indexed\n                                  }) {\n\n      doTestMVFieldStatisticsResult(f);\n      clearIndex();\n      assertU(commit());\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"744b111b17d15d490a648eb021bfa240e7f11556","date":1487008069,"type":3,"author":"Tomas Fernandez Lobbe","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/component/StatsComponentTest#testStats().mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/component/StatsComponentTest#testStats().mjava","sourceNew":"  public void testStats() throws Exception {\n    for (String f : new String[] {\n            \"stats_i\",\"stats_l\",\"stats_f\",\"stats_d\",\n            \"stats_ti\",\"stats_tl\",\"stats_tf\",\"stats_td\",\n            \"stats_ti_dv\",\"stats_tl_dv\",\"stats_tf_dv\",\"stats_td_dv\", \n            \"stats_ti_ni_dv\",\"stats_tl_ni_dv\",\"stats_tf_ni_dv\",\"stats_td_ni_dv\",\n            \"stats_i_ni_p\",\"stats_l_ni_p\",\"stats_f_ni_p\",\"stats_d_ni_p\",\n    }) {\n\n      // all of our checks should work with all of these params\n      // ie: with or w/o these excluded filters, results should be the same.\n      SolrParams[] baseParamsSet = new SolrParams[] {\n        // NOTE: doTestFieldStatisticsResult needs the full list of possible tags to exclude\n        params(\"stats.field\", f, \"stats\", \"true\"),\n        params(\"stats.field\", \"{!ex=fq1,fq2}\"+f, \"stats\", \"true\",\n               \"fq\", \"{!tag=fq1}-id:[0 TO 2]\", \n               \"fq\", \"{!tag=fq2}-id:[2 TO 1000]\"), \n        params(\"stats.field\", \"{!ex=fq1}\"+f, \"stats\", \"true\",\n               \"fq\", \"{!tag=fq1}id:1\")\n      };\n\n      doTestFieldStatisticsResult(f, baseParamsSet);\n      doTestFieldStatisticsMissingResult(f, baseParamsSet);\n      doTestFacetStatisticsResult(f, baseParamsSet);\n      doTestFacetStatisticsMissingResult(f, baseParamsSet);\n      \n      clearIndex();\n      assertU(commit());\n    }\n\n    for (String f : new String[] {\"stats_ii\",\n            \"stats_tis\",\"stats_tfs\",\"stats_tls\",\"stats_tds\",  // trie fields\n            \"stats_tis_dv\",\"stats_tfs_dv\",\"stats_tls_dv\",\"stats_tds_dv\",  // Doc Values\n            \"stats_tis_ni_dv\",\"stats_tfs_ni_dv\",\"stats_tls_ni_dv\",\"stats_tds_ni_dv\",  // Doc Values Not indexed\n            \"stats_is_p\", \"stats_fs_p\", \"stats_ls_p\", \"stats_ds_p\", // Point Fields\n            \"stats_is_ni_p\",\"stats_fs_ni_p\",\"stats_ls_ni_p\" // Point Doc Values Not indexed\n                                  }) {\n\n      doTestMVFieldStatisticsResult(f);\n      clearIndex();\n      assertU(commit());\n    }\n  }\n\n","sourceOld":"  public void testStats() throws Exception {\n    for (String f : new String[] {\n            \"stats_i\",\"stats_l\",\"stats_f\",\"stats_d\",\n            \"stats_ti\",\"stats_tl\",\"stats_tf\",\"stats_td\",\n            \"stats_ti_dv\",\"stats_tl_dv\",\"stats_tf_dv\",\"stats_td_dv\", \n            \"stats_ti_ni_dv\",\"stats_tl_ni_dv\",\"stats_tf_ni_dv\",\"stats_td_ni_dv\"\n    }) {\n\n      // all of our checks should work with all of these params\n      // ie: with or w/o these excluded filters, results should be the same.\n      SolrParams[] baseParamsSet = new SolrParams[] {\n        // NOTE: doTestFieldStatisticsResult needs the full list of possible tags to exclude\n        params(\"stats.field\", f, \"stats\", \"true\"),\n        params(\"stats.field\", \"{!ex=fq1,fq2}\"+f, \"stats\", \"true\",\n               \"fq\", \"{!tag=fq1}-id:[0 TO 2]\", \n               \"fq\", \"{!tag=fq2}-id:[2 TO 1000]\"), \n        params(\"stats.field\", \"{!ex=fq1}\"+f, \"stats\", \"true\",\n               \"fq\", \"{!tag=fq1}id:1\")\n      };\n\n      doTestFieldStatisticsResult(f, baseParamsSet);\n      doTestFieldStatisticsMissingResult(f, baseParamsSet);\n      doTestFacetStatisticsResult(f, baseParamsSet);\n      doTestFacetStatisticsMissingResult(f, baseParamsSet);\n      \n      clearIndex();\n      assertU(commit());\n    }\n\n    for (String f : new String[] {\"stats_ii\",\n            \"stats_tis\",\"stats_tfs\",\"stats_tls\",\"stats_tds\",  // trie fields\n            \"stats_tis_dv\",\"stats_tfs_dv\",\"stats_tls_dv\",\"stats_tds_dv\",  // Doc Values\n            \"stats_tis_ni_dv\",\"stats_tfs_ni_dv\",\"stats_tls_ni_dv\",\"stats_tds_ni_dv\"  // Doc Values Not indexed\n                                  }) {\n\n      doTestMVFieldStatisticsResult(f);\n      clearIndex();\n      assertU(commit());\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"022a4de90e0479b604264ca9c2e134c996454ab3","date":1487118265,"type":3,"author":"Noble Paul","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/handler/component/StatsComponentTest#testStats().mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/component/StatsComponentTest#testStats().mjava","sourceNew":"  public void testStats() throws Exception {\n    for (String f : new String[] {\n            \"stats_i\",\"stats_l\",\"stats_f\",\"stats_d\",\n            \"stats_ti\",\"stats_tl\",\"stats_tf\",\"stats_td\",\n            \"stats_ti_dv\",\"stats_tl_dv\",\"stats_tf_dv\",\"stats_td_dv\", \n            \"stats_ti_ni_dv\",\"stats_tl_ni_dv\",\"stats_tf_ni_dv\",\"stats_td_ni_dv\",\n            \"stats_i_ni_p\",\"stats_l_ni_p\",\"stats_f_ni_p\",\"stats_d_ni_p\",\n    }) {\n\n      // all of our checks should work with all of these params\n      // ie: with or w/o these excluded filters, results should be the same.\n      SolrParams[] baseParamsSet = new SolrParams[] {\n        // NOTE: doTestFieldStatisticsResult needs the full list of possible tags to exclude\n        params(\"stats.field\", f, \"stats\", \"true\"),\n        params(\"stats.field\", \"{!ex=fq1,fq2}\"+f, \"stats\", \"true\",\n               \"fq\", \"{!tag=fq1}-id:[0 TO 2]\", \n               \"fq\", \"{!tag=fq2}-id:[2 TO 1000]\"), \n        params(\"stats.field\", \"{!ex=fq1}\"+f, \"stats\", \"true\",\n               \"fq\", \"{!tag=fq1}id:1\")\n      };\n\n      doTestFieldStatisticsResult(f, baseParamsSet);\n      doTestFieldStatisticsMissingResult(f, baseParamsSet);\n      doTestFacetStatisticsResult(f, baseParamsSet);\n      doTestFacetStatisticsMissingResult(f, baseParamsSet);\n      \n      clearIndex();\n      assertU(commit());\n    }\n\n    for (String f : new String[] {\"stats_ii\",\n            \"stats_tis\",\"stats_tfs\",\"stats_tls\",\"stats_tds\",  // trie fields\n            \"stats_tis_dv\",\"stats_tfs_dv\",\"stats_tls_dv\",\"stats_tds_dv\",  // Doc Values\n            \"stats_tis_ni_dv\",\"stats_tfs_ni_dv\",\"stats_tls_ni_dv\",\"stats_tds_ni_dv\",  // Doc Values Not indexed\n            \"stats_is_p\", \"stats_fs_p\", \"stats_ls_p\", \"stats_ds_p\", // Point Fields\n            \"stats_is_ni_p\",\"stats_fs_ni_p\",\"stats_ls_ni_p\" // Point Doc Values Not indexed\n                                  }) {\n\n      doTestMVFieldStatisticsResult(f);\n      clearIndex();\n      assertU(commit());\n    }\n  }\n\n","sourceOld":"  public void testStats() throws Exception {\n    for (String f : new String[] {\n            \"stats_i\",\"stats_l\",\"stats_f\",\"stats_d\",\n            \"stats_ti\",\"stats_tl\",\"stats_tf\",\"stats_td\",\n            \"stats_ti_dv\",\"stats_tl_dv\",\"stats_tf_dv\",\"stats_td_dv\", \n            \"stats_ti_ni_dv\",\"stats_tl_ni_dv\",\"stats_tf_ni_dv\",\"stats_td_ni_dv\"\n    }) {\n\n      // all of our checks should work with all of these params\n      // ie: with or w/o these excluded filters, results should be the same.\n      SolrParams[] baseParamsSet = new SolrParams[] {\n        // NOTE: doTestFieldStatisticsResult needs the full list of possible tags to exclude\n        params(\"stats.field\", f, \"stats\", \"true\"),\n        params(\"stats.field\", \"{!ex=fq1,fq2}\"+f, \"stats\", \"true\",\n               \"fq\", \"{!tag=fq1}-id:[0 TO 2]\", \n               \"fq\", \"{!tag=fq2}-id:[2 TO 1000]\"), \n        params(\"stats.field\", \"{!ex=fq1}\"+f, \"stats\", \"true\",\n               \"fq\", \"{!tag=fq1}id:1\")\n      };\n\n      doTestFieldStatisticsResult(f, baseParamsSet);\n      doTestFieldStatisticsMissingResult(f, baseParamsSet);\n      doTestFacetStatisticsResult(f, baseParamsSet);\n      doTestFacetStatisticsMissingResult(f, baseParamsSet);\n      \n      clearIndex();\n      assertU(commit());\n    }\n\n    for (String f : new String[] {\"stats_ii\",\n            \"stats_tis\",\"stats_tfs\",\"stats_tls\",\"stats_tds\",  // trie fields\n            \"stats_tis_dv\",\"stats_tfs_dv\",\"stats_tls_dv\",\"stats_tds_dv\",  // Doc Values\n            \"stats_tis_ni_dv\",\"stats_tfs_ni_dv\",\"stats_tls_ni_dv\",\"stats_tds_ni_dv\"  // Doc Values Not indexed\n                                  }) {\n\n      doTestMVFieldStatisticsResult(f);\n      clearIndex();\n      assertU(commit());\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b49c0eb9ef7bc25609a89e7986ce7e6eeb9c9d96","date":1487122334,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/component/StatsComponentTest#testStats().mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/component/StatsComponentTest#testStats().mjava","sourceNew":"  public void testStats() throws Exception {\n    for (String f : new String[] {\n            \"stats_i\",\"stats_l\",\"stats_f\",\"stats_d\",\n            \"stats_ti\",\"stats_tl\",\"stats_tf\",\"stats_td\",\n            \"stats_ti_dv\",\"stats_tl_dv\",\"stats_tf_dv\",\"stats_td_dv\", \n            \"stats_ti_ni_dv\",\"stats_tl_ni_dv\",\"stats_tf_ni_dv\",\"stats_td_ni_dv\"\n    }) {\n\n      // all of our checks should work with all of these params\n      // ie: with or w/o these excluded filters, results should be the same.\n      SolrParams[] baseParamsSet = new SolrParams[] {\n        // NOTE: doTestFieldStatisticsResult needs the full list of possible tags to exclude\n        params(\"stats.field\", f, \"stats\", \"true\"),\n        params(\"stats.field\", \"{!ex=fq1,fq2}\"+f, \"stats\", \"true\",\n               \"fq\", \"{!tag=fq1}-id:[0 TO 2]\", \n               \"fq\", \"{!tag=fq2}-id:[2 TO 1000]\"), \n        params(\"stats.field\", \"{!ex=fq1}\"+f, \"stats\", \"true\",\n               \"fq\", \"{!tag=fq1}id:1\")\n      };\n\n      doTestFieldStatisticsResult(f, baseParamsSet);\n      doTestFieldStatisticsMissingResult(f, baseParamsSet);\n      doTestFacetStatisticsResult(f, baseParamsSet);\n      doTestFacetStatisticsMissingResult(f, baseParamsSet);\n      \n      clearIndex();\n      assertU(commit());\n    }\n\n    for (String f : new String[] {\"stats_ii\",\n            \"stats_tis\",\"stats_tfs\",\"stats_tls\",\"stats_tds\",  // trie fields\n            \"stats_tis_dv\",\"stats_tfs_dv\",\"stats_tls_dv\",\"stats_tds_dv\",  // Doc Values\n            \"stats_tis_ni_dv\",\"stats_tfs_ni_dv\",\"stats_tls_ni_dv\",\"stats_tds_ni_dv\"  // Doc Values Not indexed\n                                  }) {\n\n      doTestMVFieldStatisticsResult(f);\n      clearIndex();\n      assertU(commit());\n    }\n  }\n\n","sourceOld":"  public void testStats() throws Exception {\n    for (String f : new String[] {\n            \"stats_i\",\"stats_l\",\"stats_f\",\"stats_d\",\n            \"stats_ti\",\"stats_tl\",\"stats_tf\",\"stats_td\",\n            \"stats_ti_dv\",\"stats_tl_dv\",\"stats_tf_dv\",\"stats_td_dv\", \n            \"stats_ti_ni_dv\",\"stats_tl_ni_dv\",\"stats_tf_ni_dv\",\"stats_td_ni_dv\",\n            \"stats_i_ni_p\",\"stats_l_ni_p\",\"stats_f_ni_p\",\"stats_d_ni_p\",\n    }) {\n\n      // all of our checks should work with all of these params\n      // ie: with or w/o these excluded filters, results should be the same.\n      SolrParams[] baseParamsSet = new SolrParams[] {\n        // NOTE: doTestFieldStatisticsResult needs the full list of possible tags to exclude\n        params(\"stats.field\", f, \"stats\", \"true\"),\n        params(\"stats.field\", \"{!ex=fq1,fq2}\"+f, \"stats\", \"true\",\n               \"fq\", \"{!tag=fq1}-id:[0 TO 2]\", \n               \"fq\", \"{!tag=fq2}-id:[2 TO 1000]\"), \n        params(\"stats.field\", \"{!ex=fq1}\"+f, \"stats\", \"true\",\n               \"fq\", \"{!tag=fq1}id:1\")\n      };\n\n      doTestFieldStatisticsResult(f, baseParamsSet);\n      doTestFieldStatisticsMissingResult(f, baseParamsSet);\n      doTestFacetStatisticsResult(f, baseParamsSet);\n      doTestFacetStatisticsMissingResult(f, baseParamsSet);\n      \n      clearIndex();\n      assertU(commit());\n    }\n\n    for (String f : new String[] {\"stats_ii\",\n            \"stats_tis\",\"stats_tfs\",\"stats_tls\",\"stats_tds\",  // trie fields\n            \"stats_tis_dv\",\"stats_tfs_dv\",\"stats_tls_dv\",\"stats_tds_dv\",  // Doc Values\n            \"stats_tis_ni_dv\",\"stats_tfs_ni_dv\",\"stats_tls_ni_dv\",\"stats_tds_ni_dv\",  // Doc Values Not indexed\n            \"stats_is_p\", \"stats_fs_p\", \"stats_ls_p\", \"stats_ds_p\", // Point Fields\n            \"stats_is_ni_p\",\"stats_fs_ni_p\",\"stats_ls_ni_p\" // Point Doc Values Not indexed\n                                  }) {\n\n      doTestMVFieldStatisticsResult(f);\n      clearIndex();\n      assertU(commit());\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"897b06b1364bd1f658a8be7591e43f0851458e7f","date":1487123008,"type":3,"author":"Ishan Chattopadhyaya","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/component/StatsComponentTest#testStats().mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/component/StatsComponentTest#testStats().mjava","sourceNew":"  public void testStats() throws Exception {\n    for (String f : new String[] {\n            \"stats_i\",\"stats_l\",\"stats_f\",\"stats_d\",\n            \"stats_ti\",\"stats_tl\",\"stats_tf\",\"stats_td\",\n            \"stats_ti_dv\",\"stats_tl_dv\",\"stats_tf_dv\",\"stats_td_dv\", \n            \"stats_ti_ni_dv\",\"stats_tl_ni_dv\",\"stats_tf_ni_dv\",\"stats_td_ni_dv\",\n            \"stats_i_ni_p\",\"stats_l_ni_p\",\"stats_f_ni_p\",\"stats_d_ni_p\",\n    }) {\n\n      // all of our checks should work with all of these params\n      // ie: with or w/o these excluded filters, results should be the same.\n      SolrParams[] baseParamsSet = new SolrParams[] {\n        // NOTE: doTestFieldStatisticsResult needs the full list of possible tags to exclude\n        params(\"stats.field\", f, \"stats\", \"true\"),\n        params(\"stats.field\", \"{!ex=fq1,fq2}\"+f, \"stats\", \"true\",\n               \"fq\", \"{!tag=fq1}-id:[0 TO 2]\", \n               \"fq\", \"{!tag=fq2}-id:[2 TO 1000]\"), \n        params(\"stats.field\", \"{!ex=fq1}\"+f, \"stats\", \"true\",\n               \"fq\", \"{!tag=fq1}id:1\")\n      };\n\n      doTestFieldStatisticsResult(f, baseParamsSet);\n      doTestFieldStatisticsMissingResult(f, baseParamsSet);\n      doTestFacetStatisticsResult(f, baseParamsSet);\n      doTestFacetStatisticsMissingResult(f, baseParamsSet);\n      \n      clearIndex();\n      assertU(commit());\n    }\n\n    for (String f : new String[] {\"stats_ii\",\n            \"stats_tis\",\"stats_tfs\",\"stats_tls\",\"stats_tds\",  // trie fields\n            \"stats_tis_dv\",\"stats_tfs_dv\",\"stats_tls_dv\",\"stats_tds_dv\",  // Doc Values\n            \"stats_tis_ni_dv\",\"stats_tfs_ni_dv\",\"stats_tls_ni_dv\",\"stats_tds_ni_dv\",  // Doc Values Not indexed\n            \"stats_is_p\", \"stats_fs_p\", \"stats_ls_p\", \"stats_ds_p\", // Point Fields\n            \"stats_is_ni_p\",\"stats_fs_ni_p\",\"stats_ls_ni_p\" // Point Doc Values Not indexed\n                                  }) {\n\n      doTestMVFieldStatisticsResult(f);\n      clearIndex();\n      assertU(commit());\n    }\n  }\n\n","sourceOld":"  public void testStats() throws Exception {\n    for (String f : new String[] {\n            \"stats_i\",\"stats_l\",\"stats_f\",\"stats_d\",\n            \"stats_ti\",\"stats_tl\",\"stats_tf\",\"stats_td\",\n            \"stats_ti_dv\",\"stats_tl_dv\",\"stats_tf_dv\",\"stats_td_dv\", \n            \"stats_ti_ni_dv\",\"stats_tl_ni_dv\",\"stats_tf_ni_dv\",\"stats_td_ni_dv\"\n    }) {\n\n      // all of our checks should work with all of these params\n      // ie: with or w/o these excluded filters, results should be the same.\n      SolrParams[] baseParamsSet = new SolrParams[] {\n        // NOTE: doTestFieldStatisticsResult needs the full list of possible tags to exclude\n        params(\"stats.field\", f, \"stats\", \"true\"),\n        params(\"stats.field\", \"{!ex=fq1,fq2}\"+f, \"stats\", \"true\",\n               \"fq\", \"{!tag=fq1}-id:[0 TO 2]\", \n               \"fq\", \"{!tag=fq2}-id:[2 TO 1000]\"), \n        params(\"stats.field\", \"{!ex=fq1}\"+f, \"stats\", \"true\",\n               \"fq\", \"{!tag=fq1}id:1\")\n      };\n\n      doTestFieldStatisticsResult(f, baseParamsSet);\n      doTestFieldStatisticsMissingResult(f, baseParamsSet);\n      doTestFacetStatisticsResult(f, baseParamsSet);\n      doTestFacetStatisticsMissingResult(f, baseParamsSet);\n      \n      clearIndex();\n      assertU(commit());\n    }\n\n    for (String f : new String[] {\"stats_ii\",\n            \"stats_tis\",\"stats_tfs\",\"stats_tls\",\"stats_tds\",  // trie fields\n            \"stats_tis_dv\",\"stats_tfs_dv\",\"stats_tls_dv\",\"stats_tds_dv\",  // Doc Values\n            \"stats_tis_ni_dv\",\"stats_tfs_ni_dv\",\"stats_tls_ni_dv\",\"stats_tds_ni_dv\"  // Doc Values Not indexed\n                                  }) {\n\n      doTestMVFieldStatisticsResult(f);\n      clearIndex();\n      assertU(commit());\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a71f63026529f3c1f03cfdd664910873ab2369ae","date":1497543264,"type":3,"author":"Chris Hostetter","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/component/StatsComponentTest#testStats().mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/component/StatsComponentTest#testStats().mjava","sourceNew":"  public void testStats() throws Exception {\n    for (String f : new String[] {\n            \"stats_i\",\"stats_l\",\"stats_f\",\"stats_d\",\n            \"stats_ti\",\"stats_tl\",\"stats_tf\",\"stats_td\",\n            \"stats_ti_dv\",\"stats_tl_dv\",\"stats_tf_dv\",\"stats_td_dv\", \n            \"stats_ti_ni_dv\",\"stats_tl_ni_dv\",\"stats_tf_ni_dv\",\"stats_td_ni_dv\",\n            \"stats_i_ni_p\",\"stats_l_ni_p\",\"stats_f_ni_p\",\"stats_d_ni_p\",\n    }) {\n\n      // all of our checks should work with all of these params\n      // ie: with or w/o these excluded filters, results should be the same.\n      SolrParams[] baseParamsSet = new SolrParams[] {\n        // NOTE: doTestFieldStatisticsResult needs the full list of possible tags to exclude\n        params(\"stats.field\", f, \"stats\", \"true\"),\n        params(\"stats.field\", \"{!ex=fq1,fq2}\"+f, \"stats\", \"true\",\n               \"fq\", \"{!tag=fq1}-id_i:[0 TO 2]\", \n               \"fq\", \"{!tag=fq2}-id_i:[2 TO 1000]\"), \n        params(\"stats.field\", \"{!ex=fq1}\"+f, \"stats\", \"true\",\n               \"fq\", \"{!tag=fq1}id:1\")\n      };\n\n      doTestFieldStatisticsResult(f, baseParamsSet);\n      doTestFieldStatisticsMissingResult(f, baseParamsSet);\n      doTestFacetStatisticsResult(f, baseParamsSet);\n      doTestFacetStatisticsMissingResult(f, baseParamsSet);\n      \n      clearIndex();\n      assertU(commit());\n    }\n\n    for (String f : new String[] {\"stats_ii\",\n            \"stats_tis\",\"stats_tfs\",\"stats_tls\",\"stats_tds\",  // trie fields\n            \"stats_tis_dv\",\"stats_tfs_dv\",\"stats_tls_dv\",\"stats_tds_dv\",  // Doc Values\n            \"stats_tis_ni_dv\",\"stats_tfs_ni_dv\",\"stats_tls_ni_dv\",\"stats_tds_ni_dv\",  // Doc Values Not indexed\n            \"stats_is_p\", \"stats_fs_p\", \"stats_ls_p\", \"stats_ds_p\", // Point Fields\n            \"stats_is_ni_p\",\"stats_fs_ni_p\",\"stats_ls_ni_p\" // Point Doc Values Not indexed\n                                  }) {\n\n      doTestMVFieldStatisticsResult(f);\n      clearIndex();\n      assertU(commit());\n    }\n  }\n\n","sourceOld":"  public void testStats() throws Exception {\n    for (String f : new String[] {\n            \"stats_i\",\"stats_l\",\"stats_f\",\"stats_d\",\n            \"stats_ti\",\"stats_tl\",\"stats_tf\",\"stats_td\",\n            \"stats_ti_dv\",\"stats_tl_dv\",\"stats_tf_dv\",\"stats_td_dv\", \n            \"stats_ti_ni_dv\",\"stats_tl_ni_dv\",\"stats_tf_ni_dv\",\"stats_td_ni_dv\",\n            \"stats_i_ni_p\",\"stats_l_ni_p\",\"stats_f_ni_p\",\"stats_d_ni_p\",\n    }) {\n\n      // all of our checks should work with all of these params\n      // ie: with or w/o these excluded filters, results should be the same.\n      SolrParams[] baseParamsSet = new SolrParams[] {\n        // NOTE: doTestFieldStatisticsResult needs the full list of possible tags to exclude\n        params(\"stats.field\", f, \"stats\", \"true\"),\n        params(\"stats.field\", \"{!ex=fq1,fq2}\"+f, \"stats\", \"true\",\n               \"fq\", \"{!tag=fq1}-id:[0 TO 2]\", \n               \"fq\", \"{!tag=fq2}-id:[2 TO 1000]\"), \n        params(\"stats.field\", \"{!ex=fq1}\"+f, \"stats\", \"true\",\n               \"fq\", \"{!tag=fq1}id:1\")\n      };\n\n      doTestFieldStatisticsResult(f, baseParamsSet);\n      doTestFieldStatisticsMissingResult(f, baseParamsSet);\n      doTestFacetStatisticsResult(f, baseParamsSet);\n      doTestFacetStatisticsMissingResult(f, baseParamsSet);\n      \n      clearIndex();\n      assertU(commit());\n    }\n\n    for (String f : new String[] {\"stats_ii\",\n            \"stats_tis\",\"stats_tfs\",\"stats_tls\",\"stats_tds\",  // trie fields\n            \"stats_tis_dv\",\"stats_tfs_dv\",\"stats_tls_dv\",\"stats_tds_dv\",  // Doc Values\n            \"stats_tis_ni_dv\",\"stats_tfs_ni_dv\",\"stats_tls_ni_dv\",\"stats_tds_ni_dv\",  // Doc Values Not indexed\n            \"stats_is_p\", \"stats_fs_p\", \"stats_ls_p\", \"stats_ds_p\", // Point Fields\n            \"stats_is_ni_p\",\"stats_fs_ni_p\",\"stats_ls_ni_p\" // Point Doc Values Not indexed\n                                  }) {\n\n      doTestMVFieldStatisticsResult(f);\n      clearIndex();\n      assertU(commit());\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2a3ed3f77cdd034e789d00d1ca8bb7054c9fb8e9","date":1498028748,"type":3,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/handler/component/StatsComponentTest#testStats().mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/component/StatsComponentTest#testStats().mjava","sourceNew":"  public void testStats() throws Exception {\n    for (String f : new String[] {\n            \"stats_i\",\"stats_l\",\"stats_f\",\"stats_d\",\n            \"stats_ti\",\"stats_tl\",\"stats_tf\",\"stats_td\",\n            \"stats_ti_dv\",\"stats_tl_dv\",\"stats_tf_dv\",\"stats_td_dv\", \n            \"stats_ti_ni_dv\",\"stats_tl_ni_dv\",\"stats_tf_ni_dv\",\"stats_td_ni_dv\",\n            \"stats_i_ni_p\",\"stats_l_ni_p\",\"stats_f_ni_p\",\"stats_d_ni_p\",\n    }) {\n\n      // all of our checks should work with all of these params\n      // ie: with or w/o these excluded filters, results should be the same.\n      SolrParams[] baseParamsSet = new SolrParams[] {\n        // NOTE: doTestFieldStatisticsResult needs the full list of possible tags to exclude\n        params(\"stats.field\", f, \"stats\", \"true\"),\n        params(\"stats.field\", \"{!ex=fq1,fq2}\"+f, \"stats\", \"true\",\n               \"fq\", \"{!tag=fq1}-id_i:[0 TO 2]\", \n               \"fq\", \"{!tag=fq2}-id_i:[2 TO 1000]\"), \n        params(\"stats.field\", \"{!ex=fq1}\"+f, \"stats\", \"true\",\n               \"fq\", \"{!tag=fq1}id:1\")\n      };\n\n      doTestFieldStatisticsResult(f, baseParamsSet);\n      doTestFieldStatisticsMissingResult(f, baseParamsSet);\n      doTestFacetStatisticsResult(f, baseParamsSet);\n      doTestFacetStatisticsMissingResult(f, baseParamsSet);\n      \n      clearIndex();\n      assertU(commit());\n    }\n\n    for (String f : new String[] {\"stats_ii\",\n            \"stats_tis\",\"stats_tfs\",\"stats_tls\",\"stats_tds\",  // trie fields\n            \"stats_tis_dv\",\"stats_tfs_dv\",\"stats_tls_dv\",\"stats_tds_dv\",  // Doc Values\n            \"stats_tis_ni_dv\",\"stats_tfs_ni_dv\",\"stats_tls_ni_dv\",\"stats_tds_ni_dv\",  // Doc Values Not indexed\n            \"stats_is_p\", \"stats_fs_p\", \"stats_ls_p\", \"stats_ds_p\", // Point Fields\n            \"stats_is_ni_p\",\"stats_fs_ni_p\",\"stats_ls_ni_p\" // Point Doc Values Not indexed\n                                  }) {\n\n      doTestMVFieldStatisticsResult(f);\n      clearIndex();\n      assertU(commit());\n    }\n  }\n\n","sourceOld":"  public void testStats() throws Exception {\n    for (String f : new String[] {\n            \"stats_i\",\"stats_l\",\"stats_f\",\"stats_d\",\n            \"stats_ti\",\"stats_tl\",\"stats_tf\",\"stats_td\",\n            \"stats_ti_dv\",\"stats_tl_dv\",\"stats_tf_dv\",\"stats_td_dv\", \n            \"stats_ti_ni_dv\",\"stats_tl_ni_dv\",\"stats_tf_ni_dv\",\"stats_td_ni_dv\",\n            \"stats_i_ni_p\",\"stats_l_ni_p\",\"stats_f_ni_p\",\"stats_d_ni_p\",\n    }) {\n\n      // all of our checks should work with all of these params\n      // ie: with or w/o these excluded filters, results should be the same.\n      SolrParams[] baseParamsSet = new SolrParams[] {\n        // NOTE: doTestFieldStatisticsResult needs the full list of possible tags to exclude\n        params(\"stats.field\", f, \"stats\", \"true\"),\n        params(\"stats.field\", \"{!ex=fq1,fq2}\"+f, \"stats\", \"true\",\n               \"fq\", \"{!tag=fq1}-id:[0 TO 2]\", \n               \"fq\", \"{!tag=fq2}-id:[2 TO 1000]\"), \n        params(\"stats.field\", \"{!ex=fq1}\"+f, \"stats\", \"true\",\n               \"fq\", \"{!tag=fq1}id:1\")\n      };\n\n      doTestFieldStatisticsResult(f, baseParamsSet);\n      doTestFieldStatisticsMissingResult(f, baseParamsSet);\n      doTestFacetStatisticsResult(f, baseParamsSet);\n      doTestFacetStatisticsMissingResult(f, baseParamsSet);\n      \n      clearIndex();\n      assertU(commit());\n    }\n\n    for (String f : new String[] {\"stats_ii\",\n            \"stats_tis\",\"stats_tfs\",\"stats_tls\",\"stats_tds\",  // trie fields\n            \"stats_tis_dv\",\"stats_tfs_dv\",\"stats_tls_dv\",\"stats_tds_dv\",  // Doc Values\n            \"stats_tis_ni_dv\",\"stats_tfs_ni_dv\",\"stats_tls_ni_dv\",\"stats_tds_ni_dv\",  // Doc Values Not indexed\n            \"stats_is_p\", \"stats_fs_p\", \"stats_ls_p\", \"stats_ds_p\", // Point Fields\n            \"stats_is_ni_p\",\"stats_fs_ni_p\",\"stats_ls_ni_p\" // Point Doc Values Not indexed\n                                  }) {\n\n      doTestMVFieldStatisticsResult(f);\n      clearIndex();\n      assertU(commit());\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"28288370235ed02234a64753cdbf0c6ec096304a","date":1498726817,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/handler/component/StatsComponentTest#testStats().mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/component/StatsComponentTest#testStats().mjava","sourceNew":"  public void testStats() throws Exception {\n    for (String f : new String[] {\n            \"stats_i\",\"stats_l\",\"stats_f\",\"stats_d\",\n            \"stats_ti\",\"stats_tl\",\"stats_tf\",\"stats_td\",\n            \"stats_ti_dv\",\"stats_tl_dv\",\"stats_tf_dv\",\"stats_td_dv\", \n            \"stats_ti_ni_dv\",\"stats_tl_ni_dv\",\"stats_tf_ni_dv\",\"stats_td_ni_dv\",\n            \"stats_i_ni_p\",\"stats_l_ni_p\",\"stats_f_ni_p\",\"stats_d_ni_p\",\n    }) {\n\n      // all of our checks should work with all of these params\n      // ie: with or w/o these excluded filters, results should be the same.\n      SolrParams[] baseParamsSet = new SolrParams[] {\n        // NOTE: doTestFieldStatisticsResult needs the full list of possible tags to exclude\n        params(\"stats.field\", f, \"stats\", \"true\"),\n        params(\"stats.field\", \"{!ex=fq1,fq2}\"+f, \"stats\", \"true\",\n               \"fq\", \"{!tag=fq1}-id_i:[0 TO 2]\", \n               \"fq\", \"{!tag=fq2}-id_i:[2 TO 1000]\"), \n        params(\"stats.field\", \"{!ex=fq1}\"+f, \"stats\", \"true\",\n               \"fq\", \"{!tag=fq1}id:1\")\n      };\n\n      doTestFieldStatisticsResult(f, baseParamsSet);\n      doTestFieldStatisticsMissingResult(f, baseParamsSet);\n      doTestFacetStatisticsResult(f, baseParamsSet);\n      doTestFacetStatisticsMissingResult(f, baseParamsSet);\n      \n      clearIndex();\n      assertU(commit());\n    }\n\n    for (String f : new String[] {\"stats_ii\",\n            \"stats_tis\",\"stats_tfs\",\"stats_tls\",\"stats_tds\",  // trie fields\n            \"stats_tis_dv\",\"stats_tfs_dv\",\"stats_tls_dv\",\"stats_tds_dv\",  // Doc Values\n            \"stats_tis_ni_dv\",\"stats_tfs_ni_dv\",\"stats_tls_ni_dv\",\"stats_tds_ni_dv\",  // Doc Values Not indexed\n            \"stats_is_p\", \"stats_fs_p\", \"stats_ls_p\", \"stats_ds_p\", // Point Fields\n            \"stats_is_ni_p\",\"stats_fs_ni_p\",\"stats_ls_ni_p\" // Point Doc Values Not indexed\n                                  }) {\n\n      doTestMVFieldStatisticsResult(f);\n      clearIndex();\n      assertU(commit());\n    }\n  }\n\n","sourceOld":"  public void testStats() throws Exception {\n    for (String f : new String[] {\n            \"stats_i\",\"stats_l\",\"stats_f\",\"stats_d\",\n            \"stats_ti\",\"stats_tl\",\"stats_tf\",\"stats_td\",\n            \"stats_ti_dv\",\"stats_tl_dv\",\"stats_tf_dv\",\"stats_td_dv\", \n            \"stats_ti_ni_dv\",\"stats_tl_ni_dv\",\"stats_tf_ni_dv\",\"stats_td_ni_dv\",\n            \"stats_i_ni_p\",\"stats_l_ni_p\",\"stats_f_ni_p\",\"stats_d_ni_p\",\n    }) {\n\n      // all of our checks should work with all of these params\n      // ie: with or w/o these excluded filters, results should be the same.\n      SolrParams[] baseParamsSet = new SolrParams[] {\n        // NOTE: doTestFieldStatisticsResult needs the full list of possible tags to exclude\n        params(\"stats.field\", f, \"stats\", \"true\"),\n        params(\"stats.field\", \"{!ex=fq1,fq2}\"+f, \"stats\", \"true\",\n               \"fq\", \"{!tag=fq1}-id:[0 TO 2]\", \n               \"fq\", \"{!tag=fq2}-id:[2 TO 1000]\"), \n        params(\"stats.field\", \"{!ex=fq1}\"+f, \"stats\", \"true\",\n               \"fq\", \"{!tag=fq1}id:1\")\n      };\n\n      doTestFieldStatisticsResult(f, baseParamsSet);\n      doTestFieldStatisticsMissingResult(f, baseParamsSet);\n      doTestFacetStatisticsResult(f, baseParamsSet);\n      doTestFacetStatisticsMissingResult(f, baseParamsSet);\n      \n      clearIndex();\n      assertU(commit());\n    }\n\n    for (String f : new String[] {\"stats_ii\",\n            \"stats_tis\",\"stats_tfs\",\"stats_tls\",\"stats_tds\",  // trie fields\n            \"stats_tis_dv\",\"stats_tfs_dv\",\"stats_tls_dv\",\"stats_tds_dv\",  // Doc Values\n            \"stats_tis_ni_dv\",\"stats_tfs_ni_dv\",\"stats_tls_ni_dv\",\"stats_tds_ni_dv\",  // Doc Values Not indexed\n            \"stats_is_p\", \"stats_fs_p\", \"stats_ls_p\", \"stats_ds_p\", // Point Fields\n            \"stats_is_ni_p\",\"stats_fs_ni_p\",\"stats_ls_ni_p\" // Point Doc Values Not indexed\n                                  }) {\n\n      doTestMVFieldStatisticsResult(f);\n      clearIndex();\n      assertU(commit());\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2fa9270995767ab6c92b235a5a62267aa426f47d","date":1575523102,"type":3,"author":"Munendra S N","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/component/StatsComponentTest#testStats().mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/component/StatsComponentTest#testStats().mjava","sourceNew":"  public void testStats() throws Exception {\n    for (String f : new String[] {\n            \"stats_i\",\"stats_l\",\"stats_f\",\"stats_d\",\n            \"stats_ti\",\"stats_tl\",\"stats_tf\",\"stats_td\",\n            \"stats_ti_dv\",\"stats_tl_dv\",\"stats_tf_dv\",\"stats_td_dv\", \n            \"stats_ti_ni_dv\",\"stats_tl_ni_dv\",\"stats_tf_ni_dv\",\"stats_td_ni_dv\",\n            \"stats_i_ni_p\",\"stats_l_ni_p\",\"stats_f_ni_p\",\"stats_d_ni_p\",\n    }) {\n\n      // all of our checks should work with all of these params\n      // ie: with or w/o these excluded filters, results should be the same.\n      SolrParams[] baseParamsSet = new SolrParams[] {\n        // NOTE: doTestFieldStatisticsResult needs the full list of possible tags to exclude\n        params(\"stats.field\", f, \"stats\", \"true\"),\n        params(\"stats.field\", \"{!ex=fq1,fq2}\"+f, \"stats\", \"true\",\n               \"fq\", \"{!tag=fq1}-id_i:[0 TO 2]\", \n               \"fq\", \"{!tag=fq2}-id_i:[2 TO 1000]\"), \n        params(\"stats.field\", \"{!ex=fq1}\"+f, \"stats\", \"true\",\n               \"fq\", \"{!tag=fq1}id:1\")\n      };\n\n      doTestFieldStatisticsResult(f, baseParamsSet);\n      doTestFieldStatisticsMissingResult(f, baseParamsSet);\n      doTestFacetStatisticsResult(f, baseParamsSet);\n      doTestFacetStatisticsMissingResult(f, baseParamsSet);\n      \n      clearIndex();\n      assertU(commit());\n    }\n\n    for (String f : new String[] {\"stats_ii\",\n            \"stats_tis\",\"stats_tfs\",\"stats_tls\",\"stats_tds\",  // trie fields\n            \"stats_tis_dv\",\"stats_tfs_dv\",\"stats_tls_dv\",\"stats_tds_dv\",  // Doc Values\n            \"stats_tis_ni_dv\",\"stats_tfs_ni_dv\",\"stats_tls_ni_dv\",\"stats_tds_ni_dv\",  // Doc Values Not indexed\n            \"stats_is_p\", \"stats_fs_p\", \"stats_ls_p\", \"stats_ds_p\", // Point Fields\n            \"stats_is_ni_p\",\"stats_fs_ni_p\",\"stats_ls_ni_p\" // Point Doc Values Not indexed\n    }) {\n\n      doTestMVFieldStatisticsResult(f);\n      clearIndex();\n      assertU(commit());\n    }\n  }\n\n","sourceOld":"  public void testStats() throws Exception {\n    for (String f : new String[] {\n            \"stats_i\",\"stats_l\",\"stats_f\",\"stats_d\",\n            \"stats_ti\",\"stats_tl\",\"stats_tf\",\"stats_td\",\n            \"stats_ti_dv\",\"stats_tl_dv\",\"stats_tf_dv\",\"stats_td_dv\", \n            \"stats_ti_ni_dv\",\"stats_tl_ni_dv\",\"stats_tf_ni_dv\",\"stats_td_ni_dv\",\n            \"stats_i_ni_p\",\"stats_l_ni_p\",\"stats_f_ni_p\",\"stats_d_ni_p\",\n    }) {\n\n      // all of our checks should work with all of these params\n      // ie: with or w/o these excluded filters, results should be the same.\n      SolrParams[] baseParamsSet = new SolrParams[] {\n        // NOTE: doTestFieldStatisticsResult needs the full list of possible tags to exclude\n        params(\"stats.field\", f, \"stats\", \"true\"),\n        params(\"stats.field\", \"{!ex=fq1,fq2}\"+f, \"stats\", \"true\",\n               \"fq\", \"{!tag=fq1}-id_i:[0 TO 2]\", \n               \"fq\", \"{!tag=fq2}-id_i:[2 TO 1000]\"), \n        params(\"stats.field\", \"{!ex=fq1}\"+f, \"stats\", \"true\",\n               \"fq\", \"{!tag=fq1}id:1\")\n      };\n\n      doTestFieldStatisticsResult(f, baseParamsSet);\n      doTestFieldStatisticsMissingResult(f, baseParamsSet);\n      doTestFacetStatisticsResult(f, baseParamsSet);\n      doTestFacetStatisticsMissingResult(f, baseParamsSet);\n      \n      clearIndex();\n      assertU(commit());\n    }\n\n    for (String f : new String[] {\"stats_ii\",\n            \"stats_tis\",\"stats_tfs\",\"stats_tls\",\"stats_tds\",  // trie fields\n            \"stats_tis_dv\",\"stats_tfs_dv\",\"stats_tls_dv\",\"stats_tds_dv\",  // Doc Values\n            \"stats_tis_ni_dv\",\"stats_tfs_ni_dv\",\"stats_tls_ni_dv\",\"stats_tds_ni_dv\",  // Doc Values Not indexed\n            \"stats_is_p\", \"stats_fs_p\", \"stats_ls_p\", \"stats_ds_p\", // Point Fields\n            \"stats_is_ni_p\",\"stats_fs_ni_p\",\"stats_ls_ni_p\" // Point Doc Values Not indexed\n                                  }) {\n\n      doTestMVFieldStatisticsResult(f);\n      clearIndex();\n      assertU(commit());\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a90f561fc609ec007ba18b10dea9191dbbd71831","date":1575541054,"type":3,"author":"Dawid Weiss","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/handler/component/StatsComponentTest#testStats().mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/component/StatsComponentTest#testStats().mjava","sourceNew":"  public void testStats() throws Exception {\n    for (String f : new String[] {\n            \"stats_i\",\"stats_l\",\"stats_f\",\"stats_d\",\n            \"stats_ti\",\"stats_tl\",\"stats_tf\",\"stats_td\",\n            \"stats_ti_dv\",\"stats_tl_dv\",\"stats_tf_dv\",\"stats_td_dv\", \n            \"stats_ti_ni_dv\",\"stats_tl_ni_dv\",\"stats_tf_ni_dv\",\"stats_td_ni_dv\",\n            \"stats_i_ni_p\",\"stats_l_ni_p\",\"stats_f_ni_p\",\"stats_d_ni_p\",\n    }) {\n\n      // all of our checks should work with all of these params\n      // ie: with or w/o these excluded filters, results should be the same.\n      SolrParams[] baseParamsSet = new SolrParams[] {\n        // NOTE: doTestFieldStatisticsResult needs the full list of possible tags to exclude\n        params(\"stats.field\", f, \"stats\", \"true\"),\n        params(\"stats.field\", \"{!ex=fq1,fq2}\"+f, \"stats\", \"true\",\n               \"fq\", \"{!tag=fq1}-id_i:[0 TO 2]\", \n               \"fq\", \"{!tag=fq2}-id_i:[2 TO 1000]\"), \n        params(\"stats.field\", \"{!ex=fq1}\"+f, \"stats\", \"true\",\n               \"fq\", \"{!tag=fq1}id:1\")\n      };\n\n      doTestFieldStatisticsResult(f, baseParamsSet);\n      doTestFieldStatisticsMissingResult(f, baseParamsSet);\n      doTestFacetStatisticsResult(f, baseParamsSet);\n      doTestFacetStatisticsMissingResult(f, baseParamsSet);\n      \n      clearIndex();\n      assertU(commit());\n    }\n\n    for (String f : new String[] {\"stats_ii\",\n            \"stats_tis\",\"stats_tfs\",\"stats_tls\",\"stats_tds\",  // trie fields\n            \"stats_tis_dv\",\"stats_tfs_dv\",\"stats_tls_dv\",\"stats_tds_dv\",  // Doc Values\n            \"stats_tis_ni_dv\",\"stats_tfs_ni_dv\",\"stats_tls_ni_dv\",\"stats_tds_ni_dv\",  // Doc Values Not indexed\n            \"stats_is_p\", \"stats_fs_p\", \"stats_ls_p\", \"stats_ds_p\", // Point Fields\n            \"stats_is_ni_p\",\"stats_fs_ni_p\",\"stats_ls_ni_p\" // Point Doc Values Not indexed\n    }) {\n\n      doTestMVFieldStatisticsResult(f);\n      clearIndex();\n      assertU(commit());\n    }\n  }\n\n","sourceOld":"  public void testStats() throws Exception {\n    for (String f : new String[] {\n            \"stats_i\",\"stats_l\",\"stats_f\",\"stats_d\",\n            \"stats_ti\",\"stats_tl\",\"stats_tf\",\"stats_td\",\n            \"stats_ti_dv\",\"stats_tl_dv\",\"stats_tf_dv\",\"stats_td_dv\", \n            \"stats_ti_ni_dv\",\"stats_tl_ni_dv\",\"stats_tf_ni_dv\",\"stats_td_ni_dv\",\n            \"stats_i_ni_p\",\"stats_l_ni_p\",\"stats_f_ni_p\",\"stats_d_ni_p\",\n    }) {\n\n      // all of our checks should work with all of these params\n      // ie: with or w/o these excluded filters, results should be the same.\n      SolrParams[] baseParamsSet = new SolrParams[] {\n        // NOTE: doTestFieldStatisticsResult needs the full list of possible tags to exclude\n        params(\"stats.field\", f, \"stats\", \"true\"),\n        params(\"stats.field\", \"{!ex=fq1,fq2}\"+f, \"stats\", \"true\",\n               \"fq\", \"{!tag=fq1}-id_i:[0 TO 2]\", \n               \"fq\", \"{!tag=fq2}-id_i:[2 TO 1000]\"), \n        params(\"stats.field\", \"{!ex=fq1}\"+f, \"stats\", \"true\",\n               \"fq\", \"{!tag=fq1}id:1\")\n      };\n\n      doTestFieldStatisticsResult(f, baseParamsSet);\n      doTestFieldStatisticsMissingResult(f, baseParamsSet);\n      doTestFacetStatisticsResult(f, baseParamsSet);\n      doTestFacetStatisticsMissingResult(f, baseParamsSet);\n      \n      clearIndex();\n      assertU(commit());\n    }\n\n    for (String f : new String[] {\"stats_ii\",\n            \"stats_tis\",\"stats_tfs\",\"stats_tls\",\"stats_tds\",  // trie fields\n            \"stats_tis_dv\",\"stats_tfs_dv\",\"stats_tls_dv\",\"stats_tds_dv\",  // Doc Values\n            \"stats_tis_ni_dv\",\"stats_tfs_ni_dv\",\"stats_tls_ni_dv\",\"stats_tds_ni_dv\",  // Doc Values Not indexed\n            \"stats_is_p\", \"stats_fs_p\", \"stats_ls_p\", \"stats_ds_p\", // Point Fields\n            \"stats_is_ni_p\",\"stats_fs_ni_p\",\"stats_ls_ni_p\" // Point Doc Values Not indexed\n                                  }) {\n\n      doTestMVFieldStatisticsResult(f);\n      clearIndex();\n      assertU(commit());\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"2fa9270995767ab6c92b235a5a62267aa426f47d":["28288370235ed02234a64753cdbf0c6ec096304a"],"10eb287e62f3e48c07b2a817c1750c859bb5e7e7":["511309ff970d3c2a68d1ac453cc187df1198f0d1"],"897b06b1364bd1f658a8be7591e43f0851458e7f":["b49c0eb9ef7bc25609a89e7986ce7e6eeb9c9d96"],"a90f561fc609ec007ba18b10dea9191dbbd71831":["28288370235ed02234a64753cdbf0c6ec096304a","2fa9270995767ab6c92b235a5a62267aa426f47d"],"c26f00b574427b55127e869b935845554afde1fa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","c903c3d15906a3da96b8c0c2fb704491005fdbdb"],"a71f63026529f3c1f03cfdd664910873ab2369ae":["897b06b1364bd1f658a8be7591e43f0851458e7f"],"28288370235ed02234a64753cdbf0c6ec096304a":["897b06b1364bd1f658a8be7591e43f0851458e7f","a71f63026529f3c1f03cfdd664910873ab2369ae"],"d0c238d519ed8e8343ab723bcc8f1846786e42a6":["2106271e380c198349e0f6eac0395bb462913fab"],"b49c0eb9ef7bc25609a89e7986ce7e6eeb9c9d96":["022a4de90e0479b604264ca9c2e134c996454ab3"],"511309ff970d3c2a68d1ac453cc187df1198f0d1":["d0c238d519ed8e8343ab723bcc8f1846786e42a6"],"022a4de90e0479b604264ca9c2e134c996454ab3":["610c97b96420e614c67797fd43822ebc1d4b7ee2","744b111b17d15d490a648eb021bfa240e7f11556"],"610c97b96420e614c67797fd43822ebc1d4b7ee2":["10eb287e62f3e48c07b2a817c1750c859bb5e7e7"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"2106271e380c198349e0f6eac0395bb462913fab":["c26f00b574427b55127e869b935845554afde1fa"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a258fbb26824fd104ed795e5d9033d2d040049ee":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"744b111b17d15d490a648eb021bfa240e7f11556":["610c97b96420e614c67797fd43822ebc1d4b7ee2"],"2a3ed3f77cdd034e789d00d1ca8bb7054c9fb8e9":["897b06b1364bd1f658a8be7591e43f0851458e7f","a71f63026529f3c1f03cfdd664910873ab2369ae"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["2fa9270995767ab6c92b235a5a62267aa426f47d"]},"commit2Childs":{"2fa9270995767ab6c92b235a5a62267aa426f47d":["a90f561fc609ec007ba18b10dea9191dbbd71831","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"10eb287e62f3e48c07b2a817c1750c859bb5e7e7":["610c97b96420e614c67797fd43822ebc1d4b7ee2"],"897b06b1364bd1f658a8be7591e43f0851458e7f":["a71f63026529f3c1f03cfdd664910873ab2369ae","28288370235ed02234a64753cdbf0c6ec096304a","2a3ed3f77cdd034e789d00d1ca8bb7054c9fb8e9"],"a90f561fc609ec007ba18b10dea9191dbbd71831":[],"c26f00b574427b55127e869b935845554afde1fa":["2106271e380c198349e0f6eac0395bb462913fab"],"a71f63026529f3c1f03cfdd664910873ab2369ae":["28288370235ed02234a64753cdbf0c6ec096304a","2a3ed3f77cdd034e789d00d1ca8bb7054c9fb8e9"],"28288370235ed02234a64753cdbf0c6ec096304a":["2fa9270995767ab6c92b235a5a62267aa426f47d","a90f561fc609ec007ba18b10dea9191dbbd71831"],"d0c238d519ed8e8343ab723bcc8f1846786e42a6":["511309ff970d3c2a68d1ac453cc187df1198f0d1"],"b49c0eb9ef7bc25609a89e7986ce7e6eeb9c9d96":["897b06b1364bd1f658a8be7591e43f0851458e7f"],"511309ff970d3c2a68d1ac453cc187df1198f0d1":["10eb287e62f3e48c07b2a817c1750c859bb5e7e7"],"022a4de90e0479b604264ca9c2e134c996454ab3":["b49c0eb9ef7bc25609a89e7986ce7e6eeb9c9d96"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["c26f00b574427b55127e869b935845554afde1fa"],"610c97b96420e614c67797fd43822ebc1d4b7ee2":["022a4de90e0479b604264ca9c2e134c996454ab3","744b111b17d15d490a648eb021bfa240e7f11556"],"2106271e380c198349e0f6eac0395bb462913fab":["d0c238d519ed8e8343ab723bcc8f1846786e42a6"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c26f00b574427b55127e869b935845554afde1fa","c903c3d15906a3da96b8c0c2fb704491005fdbdb","a258fbb26824fd104ed795e5d9033d2d040049ee"],"a258fbb26824fd104ed795e5d9033d2d040049ee":[],"744b111b17d15d490a648eb021bfa240e7f11556":["022a4de90e0479b604264ca9c2e134c996454ab3"],"2a3ed3f77cdd034e789d00d1ca8bb7054c9fb8e9":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a90f561fc609ec007ba18b10dea9191dbbd71831","a258fbb26824fd104ed795e5d9033d2d040049ee","2a3ed3f77cdd034e789d00d1ca8bb7054c9fb8e9","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}