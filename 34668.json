{"path":"solr/core/src/java/org/apache/solr/search/MinHashQParser#createFingerPrintQuery(String,List[BytesRef],float,float).mjava","commits":[{"id":"4aa0efbef5fa4f0afe72d46d14d2f859cd953139","date":1540016882,"type":0,"author":"Tommaso Teofili","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/MinHashQParser#createFingerPrintQuery(String,List[BytesRef],float,float).mjava","pathOld":"/dev/null","sourceNew":"  private Query createFingerPrintQuery(String field, List<BytesRef> minhashes, float similarity, float expectedTruePositive) {\n    int bandSize = 1;\n    if (expectedTruePositive < 1) {\n      bandSize = computeBandSize(minhashes.size(), similarity, expectedTruePositive);\n    }\n\n    BooleanQuery.Builder builder = new BooleanQuery.Builder();\n    BooleanQuery.Builder childBuilder = new BooleanQuery.Builder();\n    int rowInBand = 0;\n    for (BytesRef minHash : minhashes) {\n      TermQuery tq = new TermQuery(new Term(field, minHash));\n      if (bandSize == 1) {\n        builder.add(new ConstantScoreQuery(tq), Occur.SHOULD);\n      } else {\n        childBuilder.add(new ConstantScoreQuery(tq), Occur.MUST);\n        rowInBand++;\n        if (rowInBand == bandSize) {\n          builder.add(new ConstantScoreQuery(childBuilder.build()),\n              Occur.SHOULD);\n          childBuilder = new BooleanQuery.Builder();\n          rowInBand = 0;\n        }\n      }\n    }\n    // Avoid a dubious narrow band .... wrap around and pad with the\n    // start\n    if (childBuilder.build().clauses().size() > 0) {\n      for (BytesRef token : minhashes) {\n        TermQuery tq = new TermQuery(new Term(field, token.toString()));\n        childBuilder.add(new ConstantScoreQuery(tq), Occur.MUST);\n        rowInBand++;\n        if (rowInBand == bandSize) {\n          builder.add(new ConstantScoreQuery(childBuilder.build()),\n              Occur.SHOULD);\n          break;\n        }\n      }\n    }\n\n    if (expectedTruePositive >= 1.0 && similarity < 1) {\n      builder.setMinimumNumberShouldMatch((int) (Math.ceil(minhashes.size() * similarity)));\n    }\n    return builder.build();\n\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"4aa0efbef5fa4f0afe72d46d14d2f859cd953139":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["4aa0efbef5fa4f0afe72d46d14d2f859cd953139"]},"commit2Childs":{"4aa0efbef5fa4f0afe72d46d14d2f859cd953139":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["4aa0efbef5fa4f0afe72d46d14d2f859cd953139"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}