{"path":"sandbox/contributions/webcrawler-LARM/src/de/lanlab/larm/storage/LogStorage#store(WebDocument).mjava","commits":[{"id":"05d36e0b328ec96237035fbcca240e73631396e5","date":1020520725,"type":0,"author":"Otis Gospodnetic","isMerge":false,"pathNew":"sandbox/contributions/webcrawler-LARM/src/de/lanlab/larm/storage/LogStorage#store(WebDocument).mjava","pathOld":"/dev/null","sourceNew":"    /**\n     * stores the document if storing is enabled\n     *\n     * @param doc  Description of the Parameter\n     */\n    public void store(WebDocument doc)\n    {\n        String docInfo = doc.getInfo();\n        if (logContents && isValid && doc.getDocumentBytes() != null)\n        {\n            int offset = writeToPageFile(doc.getDocumentBytes());\n            docInfo = docInfo + \"\\t\" + pageFileCount + \"\\t\" + offset;\n        }\n        log.logThreadSafe(docInfo);\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"12c7634bf3bb6da687c9b32ca310e7fb8fac8e1e","date":1022957716,"type":3,"author":"cmarschner","isMerge":false,"pathNew":"sandbox/contributions/webcrawler-LARM/src/de/lanlab/larm/storage/LogStorage#store(WebDocument).mjava","pathOld":"sandbox/contributions/webcrawler-LARM/src/de/lanlab/larm/storage/LogStorage#store(WebDocument).mjava","sourceNew":"    /**\n     * writes file info to log file;\n     * stores the document if storing is enabled. in that case the log line contains\n     * the page file number and the index within that file\n     *\n     * @param doc  Description of the Parameter\n     * @return the unchanged document\n     */\n    public WebDocument store(WebDocument doc)\n    {\n        String docInfo = doc.getInfo();\n        if (logContents && isValid && doc.getDocumentBytes() != null)\n        {\n            int offset = writeToPageFile(doc.getDocumentBytes());\n            docInfo = docInfo + \"\\t\" + pageFileCount + \"\\t\" + offset;\n        }\n        log.logThreadSafe(docInfo);\n        return doc;\n    }\n\n","sourceOld":"    /**\n     * stores the document if storing is enabled\n     *\n     * @param doc  Description of the Parameter\n     */\n    public void store(WebDocument doc)\n    {\n        String docInfo = doc.getInfo();\n        if (logContents && isValid && doc.getDocumentBytes() != null)\n        {\n            int offset = writeToPageFile(doc.getDocumentBytes());\n            docInfo = docInfo + \"\\t\" + pageFileCount + \"\\t\" + offset;\n        }\n        log.logThreadSafe(docInfo);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"09c5303470b9dc605a537212177a3eb0650c1fac","date":1024361062,"type":3,"author":"cmarschner","isMerge":false,"pathNew":"sandbox/contributions/webcrawler-LARM/src/de/lanlab/larm/storage/LogStorage#store(WebDocument).mjava","pathOld":"sandbox/contributions/webcrawler-LARM/src/de/lanlab/larm/storage/LogStorage#store(WebDocument).mjava","sourceNew":"    /**\n     * writes file info to log file;\n     * stores the document if storing is enabled. in that case the log line contains\n     * the page file number and the index within that file\n     *\n     * @param doc  Description of the Parameter\n     * @return the unchanged document\n     */\n    public WebDocument store(WebDocument doc)\n    {\n        String docInfo = doc.getInfo();\n        if (logContents && isValid && doc.getField(\"content\") != null)\n        {\n            int offset = writeToPageFile((byte[])doc.getField(\"content\"));\n            docInfo = docInfo + \"\\t\" + pageFileCount + \"\\t\" + offset;\n        }\n        log.logThreadSafe(docInfo);\n        return doc;\n    }\n\n","sourceOld":"    /**\n     * writes file info to log file;\n     * stores the document if storing is enabled. in that case the log line contains\n     * the page file number and the index within that file\n     *\n     * @param doc  Description of the Parameter\n     * @return the unchanged document\n     */\n    public WebDocument store(WebDocument doc)\n    {\n        String docInfo = doc.getInfo();\n        if (logContents && isValid && doc.getDocumentBytes() != null)\n        {\n            int offset = writeToPageFile(doc.getDocumentBytes());\n            docInfo = docInfo + \"\\t\" + pageFileCount + \"\\t\" + offset;\n        }\n        log.logThreadSafe(docInfo);\n        return doc;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b3fcf629b5a4eb1122a81154352f21308ebd39c3","date":1035300676,"type":3,"author":"cmarschner","isMerge":false,"pathNew":"sandbox/contributions/webcrawler-LARM/src/de/lanlab/larm/storage/LogStorage#store(WebDocument).mjava","pathOld":"sandbox/contributions/webcrawler-LARM/src/de/lanlab/larm/storage/LogStorage#store(WebDocument).mjava","sourceNew":"    /**\n     * writes file info to log file;\n     * stores the document if storing is enabled. in that case the log line contains\n     * the page file number and the index within that file\n     *\n     * @param doc  Description of the Parameter\n     * @return the unchanged document\n     */\n    public WebDocument store(WebDocument doc)\n    {\n        String docInfo = doc.getInfo();\n        byte[] content = (byte[])doc.getField(\"contentBytes\");\n        if (logContents && isValid && content != null && content.length != 0)\n        {\n            int offset = writeToPageFile(content);\n            docInfo = docInfo + \"\\t\" + pageFileCount + \"\\t\" + offset;\n        }\n        log.logThreadSafe(docInfo);\n        return doc;\n    }\n\n","sourceOld":"    /**\n     * writes file info to log file;\n     * stores the document if storing is enabled. in that case the log line contains\n     * the page file number and the index within that file\n     *\n     * @param doc  Description of the Parameter\n     * @return the unchanged document\n     */\n    public WebDocument store(WebDocument doc)\n    {\n        String docInfo = doc.getInfo();\n        if (logContents && isValid && doc.getField(\"content\") != null)\n        {\n            int offset = writeToPageFile((byte[])doc.getField(\"content\"));\n            docInfo = docInfo + \"\\t\" + pageFileCount + \"\\t\" + offset;\n        }\n        log.logThreadSafe(docInfo);\n        return doc;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"afc16d717d9ed1a8e45371668ca6de674164d624","date":1103345442,"type":4,"author":"Otis Gospodnetic","isMerge":false,"pathNew":"/dev/null","pathOld":"sandbox/contributions/webcrawler-LARM/src/de/lanlab/larm/storage/LogStorage#store(WebDocument).mjava","sourceNew":null,"sourceOld":"    /**\n     * writes file info to log file;\n     * stores the document if storing is enabled. in that case the log line contains\n     * the page file number and the index within that file\n     *\n     * @param doc  Description of the Parameter\n     * @return the unchanged document\n     */\n    public WebDocument store(WebDocument doc)\n    {\n        String docInfo = doc.getInfo();\n        byte[] content = (byte[])doc.getField(\"contentBytes\");\n        if (logContents && isValid && content != null && content.length != 0)\n        {\n            int offset = writeToPageFile(content);\n            docInfo = docInfo + \"\\t\" + pageFileCount + \"\\t\" + offset;\n        }\n        log.logThreadSafe(docInfo);\n        return doc;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"12c7634bf3bb6da687c9b32ca310e7fb8fac8e1e":["05d36e0b328ec96237035fbcca240e73631396e5"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"afc16d717d9ed1a8e45371668ca6de674164d624":["b3fcf629b5a4eb1122a81154352f21308ebd39c3"],"b3fcf629b5a4eb1122a81154352f21308ebd39c3":["09c5303470b9dc605a537212177a3eb0650c1fac"],"05d36e0b328ec96237035fbcca240e73631396e5":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"09c5303470b9dc605a537212177a3eb0650c1fac":["12c7634bf3bb6da687c9b32ca310e7fb8fac8e1e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["afc16d717d9ed1a8e45371668ca6de674164d624"]},"commit2Childs":{"12c7634bf3bb6da687c9b32ca310e7fb8fac8e1e":["09c5303470b9dc605a537212177a3eb0650c1fac"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["05d36e0b328ec96237035fbcca240e73631396e5"],"afc16d717d9ed1a8e45371668ca6de674164d624":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"05d36e0b328ec96237035fbcca240e73631396e5":["12c7634bf3bb6da687c9b32ca310e7fb8fac8e1e"],"b3fcf629b5a4eb1122a81154352f21308ebd39c3":["afc16d717d9ed1a8e45371668ca6de674164d624"],"09c5303470b9dc605a537212177a3eb0650c1fac":["b3fcf629b5a4eb1122a81154352f21308ebd39c3"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}