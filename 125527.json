{"path":"lucene/memory/src/java/org/apache/lucene/index/memory/MemoryIndex#calculateFieldNormValue(String).mjava","commits":[{"id":"dddb2c2ed096135b31cff8907f24ca2f5db46562","date":1413882711,"type":0,"author":"Alan Woodward","isMerge":false,"pathNew":"lucene/memory/src/java/org/apache/lucene/index/memory/MemoryIndex#calculateFieldNormValue(String).mjava","pathOld":"/dev/null","sourceNew":"  private NumericDocValues calculateFieldNormValue(String field) {\n    FieldInfo fieldInfo = fieldInfos.get(field);\n    if (fieldInfo == null)\n      return null;\n    Info info = fields.get(field);\n    int numTokens = info != null ? info.numTokens : 0;\n    int numOverlapTokens = info != null ? info.numOverlapTokens : 0;\n    float boost = info != null ? info.getBoost() : 1.0f;\n    FieldInvertState invertState = new FieldInvertState(field, 0, numTokens, numOverlapTokens, 0, boost);\n    long value = normSimilarity.computeNorm(invertState);\n    if (DEBUG) System.err.println(\"MemoryIndexReader.norms: \" + field + \":\" + value + \":\" + numTokens);\n    return new MemoryIndexNormDocValues(value);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0a22eafe3f72a4c2945eaad9547e6c78816978f4","date":1413956657,"type":0,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/memory/src/java/org/apache/lucene/index/memory/MemoryIndex#calculateFieldNormValue(String).mjava","pathOld":"/dev/null","sourceNew":"  private NumericDocValues calculateFieldNormValue(String field) {\n    FieldInfo fieldInfo = fieldInfos.get(field);\n    if (fieldInfo == null)\n      return null;\n    Info info = fields.get(field);\n    int numTokens = info != null ? info.numTokens : 0;\n    int numOverlapTokens = info != null ? info.numOverlapTokens : 0;\n    float boost = info != null ? info.getBoost() : 1.0f;\n    FieldInvertState invertState = new FieldInvertState(field, 0, numTokens, numOverlapTokens, 0, boost);\n    long value = normSimilarity.computeNorm(invertState);\n    if (DEBUG) System.err.println(\"MemoryIndexReader.norms: \" + field + \":\" + value + \":\" + numTokens);\n    return new MemoryIndexNormDocValues(value);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0f657d9837900f4519ca1cbd5e98d86d4bba4dab","date":1417790596,"type":4,"author":"David Wayne Smiley","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/memory/src/java/org/apache/lucene/index/memory/MemoryIndex#calculateFieldNormValue(String).mjava","sourceNew":null,"sourceOld":"  private NumericDocValues calculateFieldNormValue(String field) {\n    FieldInfo fieldInfo = fieldInfos.get(field);\n    if (fieldInfo == null)\n      return null;\n    Info info = fields.get(field);\n    int numTokens = info != null ? info.numTokens : 0;\n    int numOverlapTokens = info != null ? info.numOverlapTokens : 0;\n    float boost = info != null ? info.getBoost() : 1.0f;\n    FieldInvertState invertState = new FieldInvertState(field, 0, numTokens, numOverlapTokens, 0, boost);\n    long value = normSimilarity.computeNorm(invertState);\n    if (DEBUG) System.err.println(\"MemoryIndexReader.norms: \" + field + \":\" + value + \":\" + numTokens);\n    return new MemoryIndexNormDocValues(value);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"0a22eafe3f72a4c2945eaad9547e6c78816978f4":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","dddb2c2ed096135b31cff8907f24ca2f5db46562"],"dddb2c2ed096135b31cff8907f24ca2f5db46562":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"0f657d9837900f4519ca1cbd5e98d86d4bba4dab":["dddb2c2ed096135b31cff8907f24ca2f5db46562"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["0f657d9837900f4519ca1cbd5e98d86d4bba4dab"]},"commit2Childs":{"0a22eafe3f72a4c2945eaad9547e6c78816978f4":[],"dddb2c2ed096135b31cff8907f24ca2f5db46562":["0a22eafe3f72a4c2945eaad9547e6c78816978f4","0f657d9837900f4519ca1cbd5e98d86d4bba4dab"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["0a22eafe3f72a4c2945eaad9547e6c78816978f4","dddb2c2ed096135b31cff8907f24ca2f5db46562"],"0f657d9837900f4519ca1cbd5e98d86d4bba4dab":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["0a22eafe3f72a4c2945eaad9547e6c78816978f4","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}