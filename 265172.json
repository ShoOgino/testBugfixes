{"path":"lucene/backwards/src/test/org/apache/lucene/search/TestTermRangeQuery#testInclusive().mjava","commits":[{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/backwards/src/test/org/apache/lucene/search/TestTermRangeQuery#testInclusive().mjava","pathOld":"backwards/src/test/org/apache/lucene/search/TestTermRangeQuery#testInclusive().mjava","sourceNew":"  public void testInclusive() throws Exception {\n    Query query = new TermRangeQuery(\"content\", \"A\", \"C\", true, true);\n\n    initializeIndex(new String[]{\"A\", \"B\", \"C\", \"D\"});\n    IndexSearcher searcher = new IndexSearcher(dir, true);\n    ScoreDoc[] hits = searcher.search(query, null, 1000).scoreDocs;\n    assertEquals(\"A,B,C,D - A,B,C in range\", 3, hits.length);\n    searcher.close();\n\n    initializeIndex(new String[]{\"A\", \"B\", \"D\"});\n    searcher = new IndexSearcher(dir, true);\n    hits = searcher.search(query, null, 1000).scoreDocs;\n    assertEquals(\"A,B,D - A and B in range\", 2, hits.length);\n    searcher.close();\n\n    addDoc(\"C\");\n    searcher = new IndexSearcher(dir, true);\n    hits = searcher.search(query, null, 1000).scoreDocs;\n    assertEquals(\"C added - A, B, C in range\", 3, hits.length);\n    searcher.close();\n  }\n\n","sourceOld":"  public void testInclusive() throws Exception {\n    Query query = new TermRangeQuery(\"content\", \"A\", \"C\", true, true);\n\n    initializeIndex(new String[]{\"A\", \"B\", \"C\", \"D\"});\n    IndexSearcher searcher = new IndexSearcher(dir, true);\n    ScoreDoc[] hits = searcher.search(query, null, 1000).scoreDocs;\n    assertEquals(\"A,B,C,D - A,B,C in range\", 3, hits.length);\n    searcher.close();\n\n    initializeIndex(new String[]{\"A\", \"B\", \"D\"});\n    searcher = new IndexSearcher(dir, true);\n    hits = searcher.search(query, null, 1000).scoreDocs;\n    assertEquals(\"A,B,D - A and B in range\", 2, hits.length);\n    searcher.close();\n\n    addDoc(\"C\");\n    searcher = new IndexSearcher(dir, true);\n    hits = searcher.search(query, null, 1000).scoreDocs;\n    assertEquals(\"C added - A, B, C in range\", 3, hits.length);\n    searcher.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"90eca6fcb6635ca73ea4fdbe2f57d2033b66d3b6","date":1272983566,"type":4,"author":"Uwe Schindler","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/backwards/src/test/org/apache/lucene/search/TestTermRangeQuery#testInclusive().mjava","sourceNew":null,"sourceOld":"  public void testInclusive() throws Exception {\n    Query query = new TermRangeQuery(\"content\", \"A\", \"C\", true, true);\n\n    initializeIndex(new String[]{\"A\", \"B\", \"C\", \"D\"});\n    IndexSearcher searcher = new IndexSearcher(dir, true);\n    ScoreDoc[] hits = searcher.search(query, null, 1000).scoreDocs;\n    assertEquals(\"A,B,C,D - A,B,C in range\", 3, hits.length);\n    searcher.close();\n\n    initializeIndex(new String[]{\"A\", \"B\", \"D\"});\n    searcher = new IndexSearcher(dir, true);\n    hits = searcher.search(query, null, 1000).scoreDocs;\n    assertEquals(\"A,B,D - A and B in range\", 2, hits.length);\n    searcher.close();\n\n    addDoc(\"C\");\n    searcher = new IndexSearcher(dir, true);\n    hits = searcher.search(query, null, 1000).scoreDocs;\n    assertEquals(\"C added - A, B, C in range\", 3, hits.length);\n    searcher.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"90eca6fcb6635ca73ea4fdbe2f57d2033b66d3b6":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["90eca6fcb6635ca73ea4fdbe2f57d2033b66d3b6"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"90eca6fcb6635ca73ea4fdbe2f57d2033b66d3b6":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["90eca6fcb6635ca73ea4fdbe2f57d2033b66d3b6"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}