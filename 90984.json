{"path":"lucene/src/java/org/apache/lucene/index/SegmentMerger#SegmentMerger(Directory,int,String,MergePolicy.OneMerge,CodecProvider,PayloadProcessorProvider,FieldInfos).mjava","commits":[{"id":"94cb8b3ec0439dfd8e179637ee4191cd9c6227e5","date":1292711882,"type":1,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/SegmentMerger#SegmentMerger(Directory,int,String,MergePolicy.OneMerge,CodecProvider,PayloadProcessorProvider,FieldInfos).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/SegmentMerger#SegmentMerger(Directory,int,String,MergePolicy.OneMerge,CodecProvider,PayloadProcessorProvider).mjava","sourceNew":"  SegmentMerger(Directory dir, int termIndexInterval, String name, MergePolicy.OneMerge merge, CodecProvider codecs, PayloadProcessorProvider payloadProcessorProvider, FieldInfos fieldInfos) {\n    this.payloadProcessorProvider = payloadProcessorProvider;\n    directory = dir;\n    this.codecs = codecs;\n    this.fieldInfos = fieldInfos;\n    segment = name;\n    if (merge != null) {\n      checkAbort = new CheckAbort(merge, directory);\n    } else {\n      checkAbort = new CheckAbort(null, null) {\n        @Override\n        public void work(double units) throws MergeAbortedException {\n          // do nothing\n        }\n      };\n    }\n    this.termIndexInterval = termIndexInterval;\n  }\n\n","sourceOld":"  SegmentMerger(Directory dir, int termIndexInterval, String name, MergePolicy.OneMerge merge, CodecProvider codecs, PayloadProcessorProvider payloadProcessorProvider) {\n    this.payloadProcessorProvider = payloadProcessorProvider;\n    directory = dir;\n    this.codecs = codecs;\n    segment = name;\n    if (merge != null) {\n      checkAbort = new CheckAbort(merge, directory);\n    } else {\n      checkAbort = new CheckAbort(null, null) {\n        @Override\n        public void work(double units) throws MergeAbortedException {\n          // do nothing\n        }\n      };\n    }\n    this.termIndexInterval = termIndexInterval;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ab5cb6a74aefb78aa0569857970b9151dfe2e787","date":1292842407,"type":1,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/SegmentMerger#SegmentMerger(Directory,int,String,MergePolicy.OneMerge,CodecProvider,PayloadProcessorProvider,FieldInfos).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/SegmentMerger#SegmentMerger(Directory,int,String,MergePolicy.OneMerge,CodecProvider,PayloadProcessorProvider).mjava","sourceNew":"  SegmentMerger(Directory dir, int termIndexInterval, String name, MergePolicy.OneMerge merge, CodecProvider codecs, PayloadProcessorProvider payloadProcessorProvider, FieldInfos fieldInfos) {\n    this.payloadProcessorProvider = payloadProcessorProvider;\n    directory = dir;\n    this.codecs = codecs;\n    this.fieldInfos = fieldInfos;\n    segment = name;\n    if (merge != null) {\n      checkAbort = new CheckAbort(merge, directory);\n    } else {\n      checkAbort = new CheckAbort(null, null) {\n        @Override\n        public void work(double units) throws MergeAbortedException {\n          // do nothing\n        }\n      };\n    }\n    this.termIndexInterval = termIndexInterval;\n  }\n\n","sourceOld":"  SegmentMerger(Directory dir, int termIndexInterval, String name, MergePolicy.OneMerge merge, CodecProvider codecs, PayloadProcessorProvider payloadProcessorProvider) {\n    this.payloadProcessorProvider = payloadProcessorProvider;\n    directory = dir;\n    this.codecs = codecs;\n    segment = name;\n    if (merge != null) {\n      checkAbort = new CheckAbort(merge, directory);\n    } else {\n      checkAbort = new CheckAbort(null, null) {\n        @Override\n        public void work(double units) throws MergeAbortedException {\n          // do nothing\n        }\n      };\n    }\n    this.termIndexInterval = termIndexInterval;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","date":1292920096,"type":0,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/SegmentMerger#SegmentMerger(Directory,int,String,MergePolicy.OneMerge,CodecProvider,PayloadProcessorProvider,FieldInfos).mjava","pathOld":"/dev/null","sourceNew":"  SegmentMerger(Directory dir, int termIndexInterval, String name, MergePolicy.OneMerge merge, CodecProvider codecs, PayloadProcessorProvider payloadProcessorProvider, FieldInfos fieldInfos) {\n    this.payloadProcessorProvider = payloadProcessorProvider;\n    directory = dir;\n    this.codecs = codecs;\n    this.fieldInfos = fieldInfos;\n    segment = name;\n    if (merge != null) {\n      checkAbort = new CheckAbort(merge, directory);\n    } else {\n      checkAbort = new CheckAbort(null, null) {\n        @Override\n        public void work(double units) throws MergeAbortedException {\n          // do nothing\n        }\n      };\n    }\n    this.termIndexInterval = termIndexInterval;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"e623f9a0e45508ab149c2fb3e0fd0c2503f98186","date":1295889977,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/SegmentMerger#SegmentMerger(Directory,int,String,MergePolicy.OneMerge,CodecProvider,PayloadProcessorProvider,FieldInfos).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/SegmentMerger#SegmentMerger(Directory,int,String,MergePolicy.OneMerge,CodecProvider,PayloadProcessorProvider,FieldInfos).mjava","sourceNew":"  SegmentMerger(Directory dir, int termIndexInterval, String name, MergePolicy.OneMerge merge, CodecProvider codecs, PayloadProcessorProvider payloadProcessorProvider, FieldInfos fieldInfos) {\n    this.payloadProcessorProvider = payloadProcessorProvider;\n    directory = dir;\n    this.codecs = codecs;\n    this.fieldInfos = fieldInfos;\n    segment = name;\n    if (merge != null) {\n      checkAbort = new MergeState.CheckAbort(merge, directory);\n    } else {\n      checkAbort = new MergeState.CheckAbort(null, null) {\n        @Override\n        public void work(double units) throws MergeAbortedException {\n          // do nothing\n        }\n      };\n    }\n    this.termIndexInterval = termIndexInterval;\n  }\n\n","sourceOld":"  SegmentMerger(Directory dir, int termIndexInterval, String name, MergePolicy.OneMerge merge, CodecProvider codecs, PayloadProcessorProvider payloadProcessorProvider, FieldInfos fieldInfos) {\n    this.payloadProcessorProvider = payloadProcessorProvider;\n    directory = dir;\n    this.codecs = codecs;\n    this.fieldInfos = fieldInfos;\n    segment = name;\n    if (merge != null) {\n      checkAbort = new CheckAbort(merge, directory);\n    } else {\n      checkAbort = new CheckAbort(null, null) {\n        @Override\n        public void work(double units) throws MergeAbortedException {\n          // do nothing\n        }\n      };\n    }\n    this.termIndexInterval = termIndexInterval;\n  }\n\n","bugFix":["955c32f886db6f6356c9fcdea6b1f1cb4effda24"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bb9b72f7c3d7827c64dd4ec580ded81778da361d","date":1295897920,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/SegmentMerger#SegmentMerger(Directory,int,String,MergePolicy.OneMerge,CodecProvider,PayloadProcessorProvider,FieldInfos).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/SegmentMerger#SegmentMerger(Directory,int,String,MergePolicy.OneMerge,CodecProvider,PayloadProcessorProvider,FieldInfos).mjava","sourceNew":"  SegmentMerger(Directory dir, int termIndexInterval, String name, MergePolicy.OneMerge merge, CodecProvider codecs, PayloadProcessorProvider payloadProcessorProvider, FieldInfos fieldInfos) {\n    this.payloadProcessorProvider = payloadProcessorProvider;\n    directory = dir;\n    this.codecs = codecs;\n    this.fieldInfos = fieldInfos;\n    segment = name;\n    if (merge != null) {\n      checkAbort = new MergeState.CheckAbort(merge, directory);\n    } else {\n      checkAbort = new MergeState.CheckAbort(null, null) {\n        @Override\n        public void work(double units) throws MergeAbortedException {\n          // do nothing\n        }\n      };\n    }\n    this.termIndexInterval = termIndexInterval;\n  }\n\n","sourceOld":"  SegmentMerger(Directory dir, int termIndexInterval, String name, MergePolicy.OneMerge merge, CodecProvider codecs, PayloadProcessorProvider payloadProcessorProvider, FieldInfos fieldInfos) {\n    this.payloadProcessorProvider = payloadProcessorProvider;\n    directory = dir;\n    this.codecs = codecs;\n    this.fieldInfos = fieldInfos;\n    segment = name;\n    if (merge != null) {\n      checkAbort = new CheckAbort(merge, directory);\n    } else {\n      checkAbort = new CheckAbort(null, null) {\n        @Override\n        public void work(double units) throws MergeAbortedException {\n          // do nothing\n        }\n      };\n    }\n    this.termIndexInterval = termIndexInterval;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"29ef99d61cda9641b6250bf9567329a6e65f901d","date":1297244127,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/SegmentMerger#SegmentMerger(Directory,int,String,MergePolicy.OneMerge,CodecProvider,PayloadProcessorProvider,FieldInfos).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/SegmentMerger#SegmentMerger(Directory,int,String,MergePolicy.OneMerge,CodecProvider,PayloadProcessorProvider,FieldInfos).mjava","sourceNew":"  SegmentMerger(Directory dir, int termIndexInterval, String name, MergePolicy.OneMerge merge, CodecProvider codecs, PayloadProcessorProvider payloadProcessorProvider, FieldInfos fieldInfos) {\n    this.payloadProcessorProvider = payloadProcessorProvider;\n    directory = dir;\n    this.codecs = codecs;\n    this.fieldInfos = fieldInfos;\n    segment = name;\n    if (merge != null) {\n      checkAbort = new MergeState.CheckAbort(merge, directory);\n    } else {\n      checkAbort = new MergeState.CheckAbort(null, null) {\n        @Override\n        public void work(double units) throws MergeAbortedException {\n          // do nothing\n        }\n      };\n    }\n    this.termIndexInterval = termIndexInterval;\n  }\n\n","sourceOld":"  SegmentMerger(Directory dir, int termIndexInterval, String name, MergePolicy.OneMerge merge, CodecProvider codecs, PayloadProcessorProvider payloadProcessorProvider, FieldInfos fieldInfos) {\n    this.payloadProcessorProvider = payloadProcessorProvider;\n    directory = dir;\n    this.codecs = codecs;\n    this.fieldInfos = fieldInfos;\n    segment = name;\n    if (merge != null) {\n      checkAbort = new CheckAbort(merge, directory);\n    } else {\n      checkAbort = new CheckAbort(null, null) {\n        @Override\n        public void work(double units) throws MergeAbortedException {\n          // do nothing\n        }\n      };\n    }\n    this.termIndexInterval = termIndexInterval;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b0c7a8f7304b75b1528814c5820fa23a96816c27","date":1298314239,"type":3,"author":"Michael Busch","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/SegmentMerger#SegmentMerger(Directory,int,String,MergePolicy.OneMerge,CodecProvider,PayloadProcessorProvider,FieldInfos).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/SegmentMerger#SegmentMerger(Directory,int,String,MergePolicy.OneMerge,CodecProvider,PayloadProcessorProvider,FieldInfos).mjava","sourceNew":"  SegmentMerger(Directory dir, int termIndexInterval, String name, MergePolicy.OneMerge merge, CodecProvider codecs, PayloadProcessorProvider payloadProcessorProvider, FieldInfos fieldInfos) {\n    this.payloadProcessorProvider = payloadProcessorProvider;\n    directory = dir;\n    this.codecs = codecs;\n    segment = name;\n    this.fieldInfos = fieldInfos;\n    if (merge != null) {\n      checkAbort = new MergeState.CheckAbort(merge, directory);\n    } else {\n      checkAbort = new MergeState.CheckAbort(null, null) {\n        @Override\n        public void work(double units) throws MergeAbortedException {\n          // do nothing\n        }\n      };\n    }\n    this.termIndexInterval = termIndexInterval;\n  }\n\n","sourceOld":"  SegmentMerger(Directory dir, int termIndexInterval, String name, MergePolicy.OneMerge merge, CodecProvider codecs, PayloadProcessorProvider payloadProcessorProvider, FieldInfos fieldInfos) {\n    this.payloadProcessorProvider = payloadProcessorProvider;\n    directory = dir;\n    this.codecs = codecs;\n    this.fieldInfos = fieldInfos;\n    segment = name;\n    if (merge != null) {\n      checkAbort = new MergeState.CheckAbort(merge, directory);\n    } else {\n      checkAbort = new MergeState.CheckAbort(null, null) {\n        @Override\n        public void work(double units) throws MergeAbortedException {\n          // do nothing\n        }\n      };\n    }\n    this.termIndexInterval = termIndexInterval;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bde51b089eb7f86171eb3406e38a274743f9b7ac","date":1298336439,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/SegmentMerger#SegmentMerger(Directory,int,String,MergePolicy.OneMerge,CodecProvider,PayloadProcessorProvider,FieldInfos).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/SegmentMerger#SegmentMerger(Directory,int,String,MergePolicy.OneMerge,CodecProvider,PayloadProcessorProvider,FieldInfos).mjava","sourceNew":"  SegmentMerger(Directory dir, int termIndexInterval, String name, MergePolicy.OneMerge merge, CodecProvider codecs, PayloadProcessorProvider payloadProcessorProvider, FieldInfos fieldInfos) {\n    this.payloadProcessorProvider = payloadProcessorProvider;\n    directory = dir;\n    this.codecs = codecs;\n    segment = name;\n    this.fieldInfos = fieldInfos;\n    if (merge != null) {\n      checkAbort = new MergeState.CheckAbort(merge, directory);\n    } else {\n      checkAbort = new MergeState.CheckAbort(null, null) {\n        @Override\n        public void work(double units) throws MergeAbortedException {\n          // do nothing\n        }\n      };\n    }\n    this.termIndexInterval = termIndexInterval;\n  }\n\n","sourceOld":"  SegmentMerger(Directory dir, int termIndexInterval, String name, MergePolicy.OneMerge merge, CodecProvider codecs, PayloadProcessorProvider payloadProcessorProvider, FieldInfos fieldInfos) {\n    this.payloadProcessorProvider = payloadProcessorProvider;\n    directory = dir;\n    this.codecs = codecs;\n    this.fieldInfos = fieldInfos;\n    segment = name;\n    if (merge != null) {\n      checkAbort = new MergeState.CheckAbort(merge, directory);\n    } else {\n      checkAbort = new MergeState.CheckAbort(null, null) {\n        @Override\n        public void work(double units) throws MergeAbortedException {\n          // do nothing\n        }\n      };\n    }\n    this.termIndexInterval = termIndexInterval;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"14ec33385f6fbb6ce172882d14605790418a5d31","date":1298910796,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/SegmentMerger#SegmentMerger(Directory,int,String,MergePolicy.OneMerge,CodecProvider,PayloadProcessorProvider,FieldInfos).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/SegmentMerger#SegmentMerger(Directory,int,String,MergePolicy.OneMerge,CodecProvider,PayloadProcessorProvider,FieldInfos).mjava","sourceNew":"  SegmentMerger(Directory dir, int termIndexInterval, String name, MergePolicy.OneMerge merge, CodecProvider codecs, PayloadProcessorProvider payloadProcessorProvider, FieldInfos fieldInfos) {\n    this.payloadProcessorProvider = payloadProcessorProvider;\n    directory = dir;\n    this.codecs = codecs;\n    this.fieldInfos = fieldInfos;\n    segment = name;\n    if (merge != null) {\n      checkAbort = new MergeState.CheckAbort(merge, directory);\n    } else {\n      checkAbort = new MergeState.CheckAbort(null, null) {\n        @Override\n        public void work(double units) throws MergeAbortedException {\n          // do nothing\n        }\n      };\n    }\n    this.termIndexInterval = termIndexInterval;\n  }\n\n","sourceOld":"  SegmentMerger(Directory dir, int termIndexInterval, String name, MergePolicy.OneMerge merge, CodecProvider codecs, PayloadProcessorProvider payloadProcessorProvider, FieldInfos fieldInfos) {\n    this.payloadProcessorProvider = payloadProcessorProvider;\n    directory = dir;\n    this.codecs = codecs;\n    segment = name;\n    this.fieldInfos = fieldInfos;\n    if (merge != null) {\n      checkAbort = new MergeState.CheckAbort(merge, directory);\n    } else {\n      checkAbort = new MergeState.CheckAbort(null, null) {\n        @Override\n        public void work(double units) throws MergeAbortedException {\n          // do nothing\n        }\n      };\n    }\n    this.termIndexInterval = termIndexInterval;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1224a4027481acce15495b03bce9b48b93b42722","date":1300792329,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/SegmentMerger#SegmentMerger(Directory,int,String,MergePolicy.OneMerge,CodecProvider,PayloadProcessorProvider,FieldInfos).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/SegmentMerger#SegmentMerger(Directory,int,String,MergePolicy.OneMerge,CodecProvider,PayloadProcessorProvider,FieldInfos).mjava","sourceNew":"  SegmentMerger(Directory dir, int termIndexInterval, String name, MergePolicy.OneMerge merge, CodecProvider codecs, PayloadProcessorProvider payloadProcessorProvider, FieldInfos fieldInfos) {\n    this.payloadProcessorProvider = payloadProcessorProvider;\n    directory = dir;\n    this.codecs = codecs;\n    segment = name;\n    this.fieldInfos = fieldInfos;\n    if (merge != null) {\n      checkAbort = new MergeState.CheckAbort(merge, directory);\n    } else {\n      checkAbort = new MergeState.CheckAbort(null, null) {\n        @Override\n        public void work(double units) throws MergeAbortedException {\n          // do nothing\n        }\n      };\n    }\n    this.termIndexInterval = termIndexInterval;\n  }\n\n","sourceOld":"  SegmentMerger(Directory dir, int termIndexInterval, String name, MergePolicy.OneMerge merge, CodecProvider codecs, PayloadProcessorProvider payloadProcessorProvider, FieldInfos fieldInfos) {\n    this.payloadProcessorProvider = payloadProcessorProvider;\n    directory = dir;\n    this.codecs = codecs;\n    this.fieldInfos = fieldInfos;\n    segment = name;\n    if (merge != null) {\n      checkAbort = new MergeState.CheckAbort(merge, directory);\n    } else {\n      checkAbort = new MergeState.CheckAbort(null, null) {\n        @Override\n        public void work(double units) throws MergeAbortedException {\n          // do nothing\n        }\n      };\n    }\n    this.termIndexInterval = termIndexInterval;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d619839baa8ce5503e496b94a9e42ad6f079293f","date":1301309428,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/SegmentMerger#SegmentMerger(Directory,int,String,MergePolicy.OneMerge,CodecProvider,PayloadProcessorProvider,FieldInfos).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/SegmentMerger#SegmentMerger(Directory,int,String,MergePolicy.OneMerge,CodecProvider,PayloadProcessorProvider,FieldInfos).mjava","sourceNew":"  SegmentMerger(Directory dir, int termIndexInterval, String name, MergePolicy.OneMerge merge, CodecProvider codecs, PayloadProcessorProvider payloadProcessorProvider, FieldInfos fieldInfos) {\n    this.payloadProcessorProvider = payloadProcessorProvider;\n    directory = dir;\n    segment = name;\n    this.fieldInfos = fieldInfos;\n    if (merge != null) {\n      checkAbort = new MergeState.CheckAbort(merge, directory);\n    } else {\n      checkAbort = new MergeState.CheckAbort(null, null) {\n        @Override\n        public void work(double units) throws MergeAbortedException {\n          // do nothing\n        }\n      };\n    }\n    this.termIndexInterval = termIndexInterval;\n  }\n\n","sourceOld":"  SegmentMerger(Directory dir, int termIndexInterval, String name, MergePolicy.OneMerge merge, CodecProvider codecs, PayloadProcessorProvider payloadProcessorProvider, FieldInfos fieldInfos) {\n    this.payloadProcessorProvider = payloadProcessorProvider;\n    directory = dir;\n    this.codecs = codecs;\n    this.fieldInfos = fieldInfos;\n    segment = name;\n    if (merge != null) {\n      checkAbort = new MergeState.CheckAbort(merge, directory);\n    } else {\n      checkAbort = new MergeState.CheckAbort(null, null) {\n        @Override\n        public void work(double units) throws MergeAbortedException {\n          // do nothing\n        }\n      };\n    }\n    this.termIndexInterval = termIndexInterval;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d3fe2fc74577855eadfb5eae3153c2fffdaaf791","date":1305237079,"type":5,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/SegmentMerger#SegmentMerger(Directory,int,String,MergePolicy.OneMerge,PayloadProcessorProvider,FieldInfos).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/SegmentMerger#SegmentMerger(Directory,int,String,MergePolicy.OneMerge,CodecProvider,PayloadProcessorProvider,FieldInfos).mjava","sourceNew":"  SegmentMerger(Directory dir, int termIndexInterval, String name, MergePolicy.OneMerge merge, PayloadProcessorProvider payloadProcessorProvider, FieldInfos fieldInfos) {\n    this.payloadProcessorProvider = payloadProcessorProvider;\n    directory = dir;\n    segment = name;\n    this.fieldInfos = fieldInfos;\n    if (merge != null) {\n      checkAbort = new MergeState.CheckAbort(merge, directory);\n    } else {\n      checkAbort = new MergeState.CheckAbort(null, null) {\n        @Override\n        public void work(double units) throws MergeAbortedException {\n          // do nothing\n        }\n      };\n    }\n    this.termIndexInterval = termIndexInterval;\n  }\n\n","sourceOld":"  SegmentMerger(Directory dir, int termIndexInterval, String name, MergePolicy.OneMerge merge, CodecProvider codecs, PayloadProcessorProvider payloadProcessorProvider, FieldInfos fieldInfos) {\n    this.payloadProcessorProvider = payloadProcessorProvider;\n    directory = dir;\n    this.codecs = codecs;\n    segment = name;\n    this.fieldInfos = fieldInfos;\n    if (merge != null) {\n      checkAbort = new MergeState.CheckAbort(merge, directory);\n    } else {\n      checkAbort = new MergeState.CheckAbort(null, null) {\n        @Override\n        public void work(double units) throws MergeAbortedException {\n          // do nothing\n        }\n      };\n    }\n    this.termIndexInterval = termIndexInterval;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c700f8d0842d3e52bb2bdfbfdc046a137e836edb","date":1305285499,"type":5,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/SegmentMerger#SegmentMerger(Directory,int,String,MergePolicy.OneMerge,PayloadProcessorProvider,FieldInfos).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/SegmentMerger#SegmentMerger(Directory,int,String,MergePolicy.OneMerge,CodecProvider,PayloadProcessorProvider,FieldInfos).mjava","sourceNew":"  SegmentMerger(Directory dir, int termIndexInterval, String name, MergePolicy.OneMerge merge, PayloadProcessorProvider payloadProcessorProvider, FieldInfos fieldInfos) {\n    this.payloadProcessorProvider = payloadProcessorProvider;\n    directory = dir;\n    segment = name;\n    this.fieldInfos = fieldInfos;\n    if (merge != null) {\n      checkAbort = new MergeState.CheckAbort(merge, directory);\n    } else {\n      checkAbort = new MergeState.CheckAbort(null, null) {\n        @Override\n        public void work(double units) throws MergeAbortedException {\n          // do nothing\n        }\n      };\n    }\n    this.termIndexInterval = termIndexInterval;\n  }\n\n","sourceOld":"  SegmentMerger(Directory dir, int termIndexInterval, String name, MergePolicy.OneMerge merge, CodecProvider codecs, PayloadProcessorProvider payloadProcessorProvider, FieldInfos fieldInfos) {\n    this.payloadProcessorProvider = payloadProcessorProvider;\n    directory = dir;\n    segment = name;\n    this.fieldInfos = fieldInfos;\n    if (merge != null) {\n      checkAbort = new MergeState.CheckAbort(merge, directory);\n    } else {\n      checkAbort = new MergeState.CheckAbort(null, null) {\n        @Override\n        public void work(double units) throws MergeAbortedException {\n          // do nothing\n        }\n      };\n    }\n    this.termIndexInterval = termIndexInterval;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a3776dccca01c11e7046323cfad46a3b4a471233","date":1306100719,"type":4,"author":"Steven Rowe","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/src/java/org/apache/lucene/index/SegmentMerger#SegmentMerger(Directory,int,String,MergePolicy.OneMerge,CodecProvider,PayloadProcessorProvider,FieldInfos).mjava","sourceNew":null,"sourceOld":"  SegmentMerger(Directory dir, int termIndexInterval, String name, MergePolicy.OneMerge merge, CodecProvider codecs, PayloadProcessorProvider payloadProcessorProvider, FieldInfos fieldInfos) {\n    this.payloadProcessorProvider = payloadProcessorProvider;\n    directory = dir;\n    this.codecs = codecs;\n    segment = name;\n    this.fieldInfos = fieldInfos;\n    if (merge != null) {\n      checkAbort = new MergeState.CheckAbort(merge, directory);\n    } else {\n      checkAbort = new MergeState.CheckAbort(null, null) {\n        @Override\n        public void work(double units) throws MergeAbortedException {\n          // do nothing\n        }\n      };\n    }\n    this.termIndexInterval = termIndexInterval;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"d3fe2fc74577855eadfb5eae3153c2fffdaaf791":["1224a4027481acce15495b03bce9b48b93b42722"],"e623f9a0e45508ab149c2fb3e0fd0c2503f98186":["94cb8b3ec0439dfd8e179637ee4191cd9c6227e5"],"ab5cb6a74aefb78aa0569857970b9151dfe2e787":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","94cb8b3ec0439dfd8e179637ee4191cd9c6227e5"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","94cb8b3ec0439dfd8e179637ee4191cd9c6227e5"],"bb9b72f7c3d7827c64dd4ec580ded81778da361d":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","e623f9a0e45508ab149c2fb3e0fd0c2503f98186"],"14ec33385f6fbb6ce172882d14605790418a5d31":["b0c7a8f7304b75b1528814c5820fa23a96816c27"],"d619839baa8ce5503e496b94a9e42ad6f079293f":["29ef99d61cda9641b6250bf9567329a6e65f901d","1224a4027481acce15495b03bce9b48b93b42722"],"b0c7a8f7304b75b1528814c5820fa23a96816c27":["e623f9a0e45508ab149c2fb3e0fd0c2503f98186"],"a3776dccca01c11e7046323cfad46a3b4a471233":["1224a4027481acce15495b03bce9b48b93b42722","d3fe2fc74577855eadfb5eae3153c2fffdaaf791"],"29ef99d61cda9641b6250bf9567329a6e65f901d":["ab5cb6a74aefb78aa0569857970b9151dfe2e787","e623f9a0e45508ab149c2fb3e0fd0c2503f98186"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"94cb8b3ec0439dfd8e179637ee4191cd9c6227e5":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"c700f8d0842d3e52bb2bdfbfdc046a137e836edb":["d619839baa8ce5503e496b94a9e42ad6f079293f","d3fe2fc74577855eadfb5eae3153c2fffdaaf791"],"bde51b089eb7f86171eb3406e38a274743f9b7ac":["bb9b72f7c3d7827c64dd4ec580ded81778da361d","b0c7a8f7304b75b1528814c5820fa23a96816c27"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["d3fe2fc74577855eadfb5eae3153c2fffdaaf791"],"1224a4027481acce15495b03bce9b48b93b42722":["14ec33385f6fbb6ce172882d14605790418a5d31"]},"commit2Childs":{"d3fe2fc74577855eadfb5eae3153c2fffdaaf791":["a3776dccca01c11e7046323cfad46a3b4a471233","c700f8d0842d3e52bb2bdfbfdc046a137e836edb","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"e623f9a0e45508ab149c2fb3e0fd0c2503f98186":["bb9b72f7c3d7827c64dd4ec580ded81778da361d","b0c7a8f7304b75b1528814c5820fa23a96816c27","29ef99d61cda9641b6250bf9567329a6e65f901d"],"ab5cb6a74aefb78aa0569857970b9151dfe2e787":["29ef99d61cda9641b6250bf9567329a6e65f901d"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["bb9b72f7c3d7827c64dd4ec580ded81778da361d"],"bb9b72f7c3d7827c64dd4ec580ded81778da361d":["bde51b089eb7f86171eb3406e38a274743f9b7ac"],"14ec33385f6fbb6ce172882d14605790418a5d31":["1224a4027481acce15495b03bce9b48b93b42722"],"d619839baa8ce5503e496b94a9e42ad6f079293f":["c700f8d0842d3e52bb2bdfbfdc046a137e836edb"],"b0c7a8f7304b75b1528814c5820fa23a96816c27":["14ec33385f6fbb6ce172882d14605790418a5d31","bde51b089eb7f86171eb3406e38a274743f9b7ac"],"29ef99d61cda9641b6250bf9567329a6e65f901d":["d619839baa8ce5503e496b94a9e42ad6f079293f"],"a3776dccca01c11e7046323cfad46a3b4a471233":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["ab5cb6a74aefb78aa0569857970b9151dfe2e787","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","94cb8b3ec0439dfd8e179637ee4191cd9c6227e5"],"94cb8b3ec0439dfd8e179637ee4191cd9c6227e5":["e623f9a0e45508ab149c2fb3e0fd0c2503f98186","ab5cb6a74aefb78aa0569857970b9151dfe2e787","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a"],"c700f8d0842d3e52bb2bdfbfdc046a137e836edb":[],"bde51b089eb7f86171eb3406e38a274743f9b7ac":[],"1224a4027481acce15495b03bce9b48b93b42722":["d3fe2fc74577855eadfb5eae3153c2fffdaaf791","d619839baa8ce5503e496b94a9e42ad6f079293f","a3776dccca01c11e7046323cfad46a3b4a471233"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a3776dccca01c11e7046323cfad46a3b4a471233","c700f8d0842d3e52bb2bdfbfdc046a137e836edb","bde51b089eb7f86171eb3406e38a274743f9b7ac","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}