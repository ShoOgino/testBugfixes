{"path":"lucene/grouping/src/java/org/apache/lucene/search/grouping/TopGroupsCollector#TopGroupsCollector(GroupSelector[T],Collection[SearchGroup[T]],Sort,Sort,int,boolean,boolean,boolean).mjava","commits":[{"id":"7ae958a739da1866696f442384393ba2f13e33e5","date":1491819018,"type":0,"author":"Alan Woodward","isMerge":false,"pathNew":"lucene/grouping/src/java/org/apache/lucene/search/grouping/TopGroupsCollector#TopGroupsCollector(GroupSelector[T],Collection[SearchGroup[T]],Sort,Sort,int,boolean,boolean,boolean).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Create a new TopGroupsCollector\n   * @param groupSelector     the group selector used to define groups\n   * @param groups            the groups to collect TopDocs for\n   * @param groupSort         the order in which groups are returned\n   * @param withinGroupSort   the order in which documents are sorted in each group\n   * @param maxDocsPerGroup   the maximum number of docs to collect for each group\n   * @param getScores         if true, record the scores of all docs in each group\n   * @param getMaxScores      if true, record the maximum score for each group\n   * @param fillSortFields    if true, record the sort field values for all docs\n   */\n  public TopGroupsCollector(GroupSelector<T> groupSelector, Collection<SearchGroup<T>> groups, Sort groupSort, Sort withinGroupSort,\n                            int maxDocsPerGroup, boolean getScores, boolean getMaxScores, boolean fillSortFields) {\n    super(groupSelector, groups,\n        new TopDocsReducer<>(withinGroupSort, maxDocsPerGroup, getScores, getMaxScores, fillSortFields));\n    this.groupSort = Objects.requireNonNull(groupSort);\n    this.withinGroupSort = Objects.requireNonNull(withinGroupSort);\n    this.maxDocsPerGroup = maxDocsPerGroup;\n\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"54ca69905c5d9d1529286f06ab1d12c68f6c13cb","date":1492683554,"type":0,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"lucene/grouping/src/java/org/apache/lucene/search/grouping/TopGroupsCollector#TopGroupsCollector(GroupSelector[T],Collection[SearchGroup[T]],Sort,Sort,int,boolean,boolean,boolean).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Create a new TopGroupsCollector\n   * @param groupSelector     the group selector used to define groups\n   * @param groups            the groups to collect TopDocs for\n   * @param groupSort         the order in which groups are returned\n   * @param withinGroupSort   the order in which documents are sorted in each group\n   * @param maxDocsPerGroup   the maximum number of docs to collect for each group\n   * @param getScores         if true, record the scores of all docs in each group\n   * @param getMaxScores      if true, record the maximum score for each group\n   * @param fillSortFields    if true, record the sort field values for all docs\n   */\n  public TopGroupsCollector(GroupSelector<T> groupSelector, Collection<SearchGroup<T>> groups, Sort groupSort, Sort withinGroupSort,\n                            int maxDocsPerGroup, boolean getScores, boolean getMaxScores, boolean fillSortFields) {\n    super(groupSelector, groups,\n        new TopDocsReducer<>(withinGroupSort, maxDocsPerGroup, getScores, getMaxScores, fillSortFields));\n    this.groupSort = Objects.requireNonNull(groupSort);\n    this.withinGroupSort = Objects.requireNonNull(withinGroupSort);\n    this.maxDocsPerGroup = maxDocsPerGroup;\n\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"04c370507e5521b2eb998530736f1c19b851ed5a","date":1531911305,"type":5,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/grouping/src/java/org/apache/lucene/search/grouping/TopGroupsCollector#TopGroupsCollector(GroupSelector[T],Collection[SearchGroup[T]],Sort,Sort,int,boolean,boolean).mjava","pathOld":"lucene/grouping/src/java/org/apache/lucene/search/grouping/TopGroupsCollector#TopGroupsCollector(GroupSelector[T],Collection[SearchGroup[T]],Sort,Sort,int,boolean,boolean,boolean).mjava","sourceNew":"  /**\n   * Create a new TopGroupsCollector\n   * @param groupSelector     the group selector used to define groups\n   * @param groups            the groups to collect TopDocs for\n   * @param groupSort         the order in which groups are returned\n   * @param withinGroupSort   the order in which documents are sorted in each group\n   * @param maxDocsPerGroup   the maximum number of docs to collect for each group\n   * @param getScores         if true, record the scores of all docs in each group\n   * @param getMaxScores      if true, record the maximum score for each group\n   */\n  public TopGroupsCollector(GroupSelector<T> groupSelector, Collection<SearchGroup<T>> groups, Sort groupSort, Sort withinGroupSort,\n                            int maxDocsPerGroup, boolean getScores, boolean getMaxScores) {\n    super(groupSelector, groups,\n        new TopDocsReducer<>(withinGroupSort, maxDocsPerGroup, getScores, getMaxScores));\n    this.groupSort = Objects.requireNonNull(groupSort);\n    this.withinGroupSort = Objects.requireNonNull(withinGroupSort);\n    this.maxDocsPerGroup = maxDocsPerGroup;\n\n  }\n\n","sourceOld":"  /**\n   * Create a new TopGroupsCollector\n   * @param groupSelector     the group selector used to define groups\n   * @param groups            the groups to collect TopDocs for\n   * @param groupSort         the order in which groups are returned\n   * @param withinGroupSort   the order in which documents are sorted in each group\n   * @param maxDocsPerGroup   the maximum number of docs to collect for each group\n   * @param getScores         if true, record the scores of all docs in each group\n   * @param getMaxScores      if true, record the maximum score for each group\n   * @param fillSortFields    if true, record the sort field values for all docs\n   */\n  public TopGroupsCollector(GroupSelector<T> groupSelector, Collection<SearchGroup<T>> groups, Sort groupSort, Sort withinGroupSort,\n                            int maxDocsPerGroup, boolean getScores, boolean getMaxScores, boolean fillSortFields) {\n    super(groupSelector, groups,\n        new TopDocsReducer<>(withinGroupSort, maxDocsPerGroup, getScores, getMaxScores, fillSortFields));\n    this.groupSort = Objects.requireNonNull(groupSort);\n    this.withinGroupSort = Objects.requireNonNull(withinGroupSort);\n    this.maxDocsPerGroup = maxDocsPerGroup;\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"54ca69905c5d9d1529286f06ab1d12c68f6c13cb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"04c370507e5521b2eb998530736f1c19b851ed5a":["7ae958a739da1866696f442384393ba2f13e33e5"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["04c370507e5521b2eb998530736f1c19b851ed5a"],"7ae958a739da1866696f442384393ba2f13e33e5":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"54ca69905c5d9d1529286f06ab1d12c68f6c13cb":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["54ca69905c5d9d1529286f06ab1d12c68f6c13cb","7ae958a739da1866696f442384393ba2f13e33e5"],"04c370507e5521b2eb998530736f1c19b851ed5a":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"7ae958a739da1866696f442384393ba2f13e33e5":["04c370507e5521b2eb998530736f1c19b851ed5a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["54ca69905c5d9d1529286f06ab1d12c68f6c13cb","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}