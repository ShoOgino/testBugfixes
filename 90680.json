{"path":"modules/join/src/test/org/apache/lucene/search/join/TestJoinUtil#testSimple().mjava","commits":[{"id":"3cd7782b032787117c986a2278d05b25056b2eba","date":1326755795,"type":0,"author":"Martijn van Groningen","isMerge":false,"pathNew":"modules/join/src/test/org/apache/lucene/search/join/TestJoinUtil#testSimple().mjava","pathOld":"/dev/null","sourceNew":"  public void testSimple() throws Exception {\n    final String idField = \"id\";\n    final String toField = \"productId\";\n\n    Directory dir = newDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(\n        random,\n        dir,\n        newIndexWriterConfig(TEST_VERSION_CURRENT,\n            new MockAnalyzer(random)).setMergePolicy(newLogMergePolicy()));\n\n    // 0\n    Document doc = new Document();\n    doc.add(new Field(\"description\", \"random text\", TextField.TYPE_STORED));\n    doc.add(new Field(\"name\", \"name1\", TextField.TYPE_STORED));\n    doc.add(new Field(idField, \"1\", TextField.TYPE_STORED));\n    w.addDocument(doc);\n\n    // 1\n    doc = new Document();\n    doc.add(new Field(\"price\", \"10.0\", TextField.TYPE_STORED));\n    doc.add(new Field(idField, \"2\", TextField.TYPE_STORED));\n    doc.add(new Field(toField, \"1\", TextField.TYPE_STORED));\n    w.addDocument(doc);\n\n    // 2\n    doc = new Document();\n    doc.add(new Field(\"price\", \"20.0\", TextField.TYPE_STORED));\n    doc.add(new Field(idField, \"3\", TextField.TYPE_STORED));\n    doc.add(new Field(toField, \"1\", TextField.TYPE_STORED));\n    w.addDocument(doc);\n\n    // 3\n    doc = new Document();\n    doc.add(new Field(\"description\", \"more random text\", TextField.TYPE_STORED));\n    doc.add(new Field(\"name\", \"name2\", TextField.TYPE_STORED));\n    doc.add(new Field(idField, \"4\", TextField.TYPE_STORED));\n    w.addDocument(doc);\n    w.commit();\n\n    // 4\n    doc = new Document();\n    doc.add(new Field(\"price\", \"10.0\", TextField.TYPE_STORED));\n    doc.add(new Field(idField, \"5\", TextField.TYPE_STORED));\n    doc.add(new Field(toField, \"4\", TextField.TYPE_STORED));\n    w.addDocument(doc);\n\n    // 5\n    doc = new Document();\n    doc.add(new Field(\"price\", \"20.0\", TextField.TYPE_STORED));\n    doc.add(new Field(idField, \"6\", TextField.TYPE_STORED));\n    doc.add(new Field(toField, \"4\", TextField.TYPE_STORED));\n    w.addDocument(doc);\n\n    IndexSearcher indexSearcher = new IndexSearcher(w.getReader());\n    w.close();\n\n    // Search for product\n    Query joinQuery =\n        JoinUtil.createJoinQuery(idField, false, toField, new TermQuery(new Term(\"name\", \"name2\")), indexSearcher);\n\n    TopDocs result = indexSearcher.search(joinQuery, 10);\n    assertEquals(2, result.totalHits);\n    assertEquals(4, result.scoreDocs[0].doc);\n    assertEquals(5, result.scoreDocs[1].doc);\n\n    joinQuery = JoinUtil.createJoinQuery(idField, false, toField, new TermQuery(new Term(\"name\", \"name1\")), indexSearcher);\n    result = indexSearcher.search(joinQuery, 10);\n    assertEquals(2, result.totalHits);\n    assertEquals(1, result.scoreDocs[0].doc);\n    assertEquals(2, result.scoreDocs[1].doc);\n\n    // Search for offer\n    joinQuery = JoinUtil.createJoinQuery(toField, false, idField, new TermQuery(new Term(\"id\", \"5\")), indexSearcher);\n    result = indexSearcher.search(joinQuery, 10);\n    assertEquals(1, result.totalHits);\n    assertEquals(3, result.scoreDocs[0].doc);\n\n    indexSearcher.getIndexReader().close();\n    dir.close();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"629c38c4ae4e303d0617e05fbfe508140b32f0a3","date":1334500904,"type":3,"author":"Dawid Weiss","isMerge":false,"pathNew":"modules/join/src/test/org/apache/lucene/search/join/TestJoinUtil#testSimple().mjava","pathOld":"modules/join/src/test/org/apache/lucene/search/join/TestJoinUtil#testSimple().mjava","sourceNew":"  public void testSimple() throws Exception {\n    final String idField = \"id\";\n    final String toField = \"productId\";\n\n    Directory dir = newDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(\n        random(),\n        dir,\n        newIndexWriterConfig(TEST_VERSION_CURRENT,\n            new MockAnalyzer(random())).setMergePolicy(newLogMergePolicy()));\n\n    // 0\n    Document doc = new Document();\n    doc.add(new Field(\"description\", \"random text\", TextField.TYPE_STORED));\n    doc.add(new Field(\"name\", \"name1\", TextField.TYPE_STORED));\n    doc.add(new Field(idField, \"1\", TextField.TYPE_STORED));\n    w.addDocument(doc);\n\n    // 1\n    doc = new Document();\n    doc.add(new Field(\"price\", \"10.0\", TextField.TYPE_STORED));\n    doc.add(new Field(idField, \"2\", TextField.TYPE_STORED));\n    doc.add(new Field(toField, \"1\", TextField.TYPE_STORED));\n    w.addDocument(doc);\n\n    // 2\n    doc = new Document();\n    doc.add(new Field(\"price\", \"20.0\", TextField.TYPE_STORED));\n    doc.add(new Field(idField, \"3\", TextField.TYPE_STORED));\n    doc.add(new Field(toField, \"1\", TextField.TYPE_STORED));\n    w.addDocument(doc);\n\n    // 3\n    doc = new Document();\n    doc.add(new Field(\"description\", \"more random text\", TextField.TYPE_STORED));\n    doc.add(new Field(\"name\", \"name2\", TextField.TYPE_STORED));\n    doc.add(new Field(idField, \"4\", TextField.TYPE_STORED));\n    w.addDocument(doc);\n    w.commit();\n\n    // 4\n    doc = new Document();\n    doc.add(new Field(\"price\", \"10.0\", TextField.TYPE_STORED));\n    doc.add(new Field(idField, \"5\", TextField.TYPE_STORED));\n    doc.add(new Field(toField, \"4\", TextField.TYPE_STORED));\n    w.addDocument(doc);\n\n    // 5\n    doc = new Document();\n    doc.add(new Field(\"price\", \"20.0\", TextField.TYPE_STORED));\n    doc.add(new Field(idField, \"6\", TextField.TYPE_STORED));\n    doc.add(new Field(toField, \"4\", TextField.TYPE_STORED));\n    w.addDocument(doc);\n\n    IndexSearcher indexSearcher = new IndexSearcher(w.getReader());\n    w.close();\n\n    // Search for product\n    Query joinQuery =\n        JoinUtil.createJoinQuery(idField, false, toField, new TermQuery(new Term(\"name\", \"name2\")), indexSearcher);\n\n    TopDocs result = indexSearcher.search(joinQuery, 10);\n    assertEquals(2, result.totalHits);\n    assertEquals(4, result.scoreDocs[0].doc);\n    assertEquals(5, result.scoreDocs[1].doc);\n\n    joinQuery = JoinUtil.createJoinQuery(idField, false, toField, new TermQuery(new Term(\"name\", \"name1\")), indexSearcher);\n    result = indexSearcher.search(joinQuery, 10);\n    assertEquals(2, result.totalHits);\n    assertEquals(1, result.scoreDocs[0].doc);\n    assertEquals(2, result.scoreDocs[1].doc);\n\n    // Search for offer\n    joinQuery = JoinUtil.createJoinQuery(toField, false, idField, new TermQuery(new Term(\"id\", \"5\")), indexSearcher);\n    result = indexSearcher.search(joinQuery, 10);\n    assertEquals(1, result.totalHits);\n    assertEquals(3, result.scoreDocs[0].doc);\n\n    indexSearcher.getIndexReader().close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testSimple() throws Exception {\n    final String idField = \"id\";\n    final String toField = \"productId\";\n\n    Directory dir = newDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(\n        random,\n        dir,\n        newIndexWriterConfig(TEST_VERSION_CURRENT,\n            new MockAnalyzer(random)).setMergePolicy(newLogMergePolicy()));\n\n    // 0\n    Document doc = new Document();\n    doc.add(new Field(\"description\", \"random text\", TextField.TYPE_STORED));\n    doc.add(new Field(\"name\", \"name1\", TextField.TYPE_STORED));\n    doc.add(new Field(idField, \"1\", TextField.TYPE_STORED));\n    w.addDocument(doc);\n\n    // 1\n    doc = new Document();\n    doc.add(new Field(\"price\", \"10.0\", TextField.TYPE_STORED));\n    doc.add(new Field(idField, \"2\", TextField.TYPE_STORED));\n    doc.add(new Field(toField, \"1\", TextField.TYPE_STORED));\n    w.addDocument(doc);\n\n    // 2\n    doc = new Document();\n    doc.add(new Field(\"price\", \"20.0\", TextField.TYPE_STORED));\n    doc.add(new Field(idField, \"3\", TextField.TYPE_STORED));\n    doc.add(new Field(toField, \"1\", TextField.TYPE_STORED));\n    w.addDocument(doc);\n\n    // 3\n    doc = new Document();\n    doc.add(new Field(\"description\", \"more random text\", TextField.TYPE_STORED));\n    doc.add(new Field(\"name\", \"name2\", TextField.TYPE_STORED));\n    doc.add(new Field(idField, \"4\", TextField.TYPE_STORED));\n    w.addDocument(doc);\n    w.commit();\n\n    // 4\n    doc = new Document();\n    doc.add(new Field(\"price\", \"10.0\", TextField.TYPE_STORED));\n    doc.add(new Field(idField, \"5\", TextField.TYPE_STORED));\n    doc.add(new Field(toField, \"4\", TextField.TYPE_STORED));\n    w.addDocument(doc);\n\n    // 5\n    doc = new Document();\n    doc.add(new Field(\"price\", \"20.0\", TextField.TYPE_STORED));\n    doc.add(new Field(idField, \"6\", TextField.TYPE_STORED));\n    doc.add(new Field(toField, \"4\", TextField.TYPE_STORED));\n    w.addDocument(doc);\n\n    IndexSearcher indexSearcher = new IndexSearcher(w.getReader());\n    w.close();\n\n    // Search for product\n    Query joinQuery =\n        JoinUtil.createJoinQuery(idField, false, toField, new TermQuery(new Term(\"name\", \"name2\")), indexSearcher);\n\n    TopDocs result = indexSearcher.search(joinQuery, 10);\n    assertEquals(2, result.totalHits);\n    assertEquals(4, result.scoreDocs[0].doc);\n    assertEquals(5, result.scoreDocs[1].doc);\n\n    joinQuery = JoinUtil.createJoinQuery(idField, false, toField, new TermQuery(new Term(\"name\", \"name1\")), indexSearcher);\n    result = indexSearcher.search(joinQuery, 10);\n    assertEquals(2, result.totalHits);\n    assertEquals(1, result.scoreDocs[0].doc);\n    assertEquals(2, result.scoreDocs[1].doc);\n\n    // Search for offer\n    joinQuery = JoinUtil.createJoinQuery(toField, false, idField, new TermQuery(new Term(\"id\", \"5\")), indexSearcher);\n    result = indexSearcher.search(joinQuery, 10);\n    assertEquals(1, result.totalHits);\n    assertEquals(3, result.scoreDocs[0].doc);\n\n    indexSearcher.getIndexReader().close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/join/src/test/org/apache/lucene/search/join/TestJoinUtil#testSimple().mjava","pathOld":"modules/join/src/test/org/apache/lucene/search/join/TestJoinUtil#testSimple().mjava","sourceNew":"  public void testSimple() throws Exception {\n    final String idField = \"id\";\n    final String toField = \"productId\";\n\n    Directory dir = newDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(\n        random(),\n        dir,\n        newIndexWriterConfig(TEST_VERSION_CURRENT,\n            new MockAnalyzer(random())).setMergePolicy(newLogMergePolicy()));\n\n    // 0\n    Document doc = new Document();\n    doc.add(new Field(\"description\", \"random text\", TextField.TYPE_STORED));\n    doc.add(new Field(\"name\", \"name1\", TextField.TYPE_STORED));\n    doc.add(new Field(idField, \"1\", TextField.TYPE_STORED));\n    w.addDocument(doc);\n\n    // 1\n    doc = new Document();\n    doc.add(new Field(\"price\", \"10.0\", TextField.TYPE_STORED));\n    doc.add(new Field(idField, \"2\", TextField.TYPE_STORED));\n    doc.add(new Field(toField, \"1\", TextField.TYPE_STORED));\n    w.addDocument(doc);\n\n    // 2\n    doc = new Document();\n    doc.add(new Field(\"price\", \"20.0\", TextField.TYPE_STORED));\n    doc.add(new Field(idField, \"3\", TextField.TYPE_STORED));\n    doc.add(new Field(toField, \"1\", TextField.TYPE_STORED));\n    w.addDocument(doc);\n\n    // 3\n    doc = new Document();\n    doc.add(new Field(\"description\", \"more random text\", TextField.TYPE_STORED));\n    doc.add(new Field(\"name\", \"name2\", TextField.TYPE_STORED));\n    doc.add(new Field(idField, \"4\", TextField.TYPE_STORED));\n    w.addDocument(doc);\n    w.commit();\n\n    // 4\n    doc = new Document();\n    doc.add(new Field(\"price\", \"10.0\", TextField.TYPE_STORED));\n    doc.add(new Field(idField, \"5\", TextField.TYPE_STORED));\n    doc.add(new Field(toField, \"4\", TextField.TYPE_STORED));\n    w.addDocument(doc);\n\n    // 5\n    doc = new Document();\n    doc.add(new Field(\"price\", \"20.0\", TextField.TYPE_STORED));\n    doc.add(new Field(idField, \"6\", TextField.TYPE_STORED));\n    doc.add(new Field(toField, \"4\", TextField.TYPE_STORED));\n    w.addDocument(doc);\n\n    IndexSearcher indexSearcher = new IndexSearcher(w.getReader());\n    w.close();\n\n    // Search for product\n    Query joinQuery =\n        JoinUtil.createJoinQuery(idField, false, toField, new TermQuery(new Term(\"name\", \"name2\")), indexSearcher);\n\n    TopDocs result = indexSearcher.search(joinQuery, 10);\n    assertEquals(2, result.totalHits);\n    assertEquals(4, result.scoreDocs[0].doc);\n    assertEquals(5, result.scoreDocs[1].doc);\n\n    joinQuery = JoinUtil.createJoinQuery(idField, false, toField, new TermQuery(new Term(\"name\", \"name1\")), indexSearcher);\n    result = indexSearcher.search(joinQuery, 10);\n    assertEquals(2, result.totalHits);\n    assertEquals(1, result.scoreDocs[0].doc);\n    assertEquals(2, result.scoreDocs[1].doc);\n\n    // Search for offer\n    joinQuery = JoinUtil.createJoinQuery(toField, false, idField, new TermQuery(new Term(\"id\", \"5\")), indexSearcher);\n    result = indexSearcher.search(joinQuery, 10);\n    assertEquals(1, result.totalHits);\n    assertEquals(3, result.scoreDocs[0].doc);\n\n    indexSearcher.getIndexReader().close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testSimple() throws Exception {\n    final String idField = \"id\";\n    final String toField = \"productId\";\n\n    Directory dir = newDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(\n        random(),\n        dir,\n        newIndexWriterConfig(TEST_VERSION_CURRENT,\n            new MockAnalyzer(random())).setMergePolicy(newLogMergePolicy()));\n\n    // 0\n    Document doc = new Document();\n    doc.add(new Field(\"description\", \"random text\", TextField.TYPE_STORED));\n    doc.add(new Field(\"name\", \"name1\", TextField.TYPE_STORED));\n    doc.add(new Field(idField, \"1\", TextField.TYPE_STORED));\n    w.addDocument(doc);\n\n    // 1\n    doc = new Document();\n    doc.add(new Field(\"price\", \"10.0\", TextField.TYPE_STORED));\n    doc.add(new Field(idField, \"2\", TextField.TYPE_STORED));\n    doc.add(new Field(toField, \"1\", TextField.TYPE_STORED));\n    w.addDocument(doc);\n\n    // 2\n    doc = new Document();\n    doc.add(new Field(\"price\", \"20.0\", TextField.TYPE_STORED));\n    doc.add(new Field(idField, \"3\", TextField.TYPE_STORED));\n    doc.add(new Field(toField, \"1\", TextField.TYPE_STORED));\n    w.addDocument(doc);\n\n    // 3\n    doc = new Document();\n    doc.add(new Field(\"description\", \"more random text\", TextField.TYPE_STORED));\n    doc.add(new Field(\"name\", \"name2\", TextField.TYPE_STORED));\n    doc.add(new Field(idField, \"4\", TextField.TYPE_STORED));\n    w.addDocument(doc);\n    w.commit();\n\n    // 4\n    doc = new Document();\n    doc.add(new Field(\"price\", \"10.0\", TextField.TYPE_STORED));\n    doc.add(new Field(idField, \"5\", TextField.TYPE_STORED));\n    doc.add(new Field(toField, \"4\", TextField.TYPE_STORED));\n    w.addDocument(doc);\n\n    // 5\n    doc = new Document();\n    doc.add(new Field(\"price\", \"20.0\", TextField.TYPE_STORED));\n    doc.add(new Field(idField, \"6\", TextField.TYPE_STORED));\n    doc.add(new Field(toField, \"4\", TextField.TYPE_STORED));\n    w.addDocument(doc);\n\n    IndexSearcher indexSearcher = new IndexSearcher(w.getReader());\n    w.close();\n\n    // Search for product\n    Query joinQuery =\n        JoinUtil.createJoinQuery(idField, false, toField, new TermQuery(new Term(\"name\", \"name2\")), indexSearcher);\n\n    TopDocs result = indexSearcher.search(joinQuery, 10);\n    assertEquals(2, result.totalHits);\n    assertEquals(4, result.scoreDocs[0].doc);\n    assertEquals(5, result.scoreDocs[1].doc);\n\n    joinQuery = JoinUtil.createJoinQuery(idField, false, toField, new TermQuery(new Term(\"name\", \"name1\")), indexSearcher);\n    result = indexSearcher.search(joinQuery, 10);\n    assertEquals(2, result.totalHits);\n    assertEquals(1, result.scoreDocs[0].doc);\n    assertEquals(2, result.scoreDocs[1].doc);\n\n    // Search for offer\n    joinQuery = JoinUtil.createJoinQuery(toField, false, idField, new TermQuery(new Term(\"id\", \"5\")), indexSearcher);\n    result = indexSearcher.search(joinQuery, 10);\n    assertEquals(1, result.totalHits);\n    assertEquals(3, result.scoreDocs[0].doc);\n\n    indexSearcher.getIndexReader().close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["629c38c4ae4e303d0617e05fbfe508140b32f0a3"],"3cd7782b032787117c986a2278d05b25056b2eba":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"629c38c4ae4e303d0617e05fbfe508140b32f0a3":["3cd7782b032787117c986a2278d05b25056b2eba"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b89678825b68eccaf09e6ab71675fc0b0af1e099"]},"commit2Childs":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3cd7782b032787117c986a2278d05b25056b2eba":["629c38c4ae4e303d0617e05fbfe508140b32f0a3"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3cd7782b032787117c986a2278d05b25056b2eba"],"629c38c4ae4e303d0617e05fbfe508140b32f0a3":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}