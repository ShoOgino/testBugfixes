{"path":"lucene/src/test/org/apache/lucene/search/TestAutomatonQuery#testEmptyOptimization().mjava","commits":[{"id":"955c32f886db6f6356c9fcdea6b1f1cb4effda24","date":1270581567,"type":0,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/search/TestAutomatonQuery#testEmptyOptimization().mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Test handling of the empty language\n   */\n  public void testEmptyOptimization() throws IOException {\n    AutomatonQuery aq = new AutomatonQuery(newTerm(\"bogus\"), BasicAutomata\n        .makeEmpty());\n    // not yet available: assertTrue(aq.getEnum(searcher.getIndexReader())\n    // instanceof EmptyTermEnum);\n    assertSame(TermsEnum.EMPTY, aq.getTermsEnum(searcher.getIndexReader()));\n    assertEquals(0, automatonQueryNrHits(aq));\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e8dd2a69747e9f2922fd8b6970bd1661b26a692d","date":1291080135,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/search/TestAutomatonQuery#testEmptyOptimization().mjava","pathOld":"lucene/src/test/org/apache/lucene/search/TestAutomatonQuery#testEmptyOptimization().mjava","sourceNew":"  /**\n   * Test handling of the empty language\n   */\n  public void testEmptyOptimization() throws IOException {\n    AutomatonQuery aq = new AutomatonQuery(newTerm(\"bogus\"), BasicAutomata\n        .makeEmpty());\n    // not yet available: assertTrue(aq.getEnum(searcher.getIndexReader())\n    // instanceof EmptyTermEnum);\n    Terms terms = MultiFields.getTerms(searcher.getIndexReader(), FN);\n    assertSame(TermsEnum.EMPTY, aq.getTermsEnum(terms));\n    assertEquals(0, automatonQueryNrHits(aq));\n  }\n\n","sourceOld":"  /**\n   * Test handling of the empty language\n   */\n  public void testEmptyOptimization() throws IOException {\n    AutomatonQuery aq = new AutomatonQuery(newTerm(\"bogus\"), BasicAutomata\n        .makeEmpty());\n    // not yet available: assertTrue(aq.getEnum(searcher.getIndexReader())\n    // instanceof EmptyTermEnum);\n    assertSame(TermsEnum.EMPTY, aq.getTermsEnum(searcher.getIndexReader()));\n    assertEquals(0, automatonQueryNrHits(aq));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3bb13258feba31ab676502787ab2e1779f129b7a","date":1291596436,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/search/TestAutomatonQuery#testEmptyOptimization().mjava","pathOld":"lucene/src/test/org/apache/lucene/search/TestAutomatonQuery#testEmptyOptimization().mjava","sourceNew":"  /**\n   * Test handling of the empty language\n   */\n  public void testEmptyOptimization() throws IOException {\n    AutomatonQuery aq = new AutomatonQuery(newTerm(\"bogus\"), BasicAutomata\n        .makeEmpty());\n    // not yet available: assertTrue(aq.getEnum(searcher.getIndexReader())\n    // instanceof EmptyTermEnum);\n    Terms terms = MultiFields.getTerms(searcher.getIndexReader(), FN);\n    assertSame(TermsEnum.EMPTY, aq.getTermsEnum(terms));\n    assertEquals(0, automatonQueryNrHits(aq));\n  }\n\n","sourceOld":"  /**\n   * Test handling of the empty language\n   */\n  public void testEmptyOptimization() throws IOException {\n    AutomatonQuery aq = new AutomatonQuery(newTerm(\"bogus\"), BasicAutomata\n        .makeEmpty());\n    // not yet available: assertTrue(aq.getEnum(searcher.getIndexReader())\n    // instanceof EmptyTermEnum);\n    assertSame(TermsEnum.EMPTY, aq.getTermsEnum(searcher.getIndexReader()));\n    assertEquals(0, automatonQueryNrHits(aq));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","date":1292920096,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/search/TestAutomatonQuery#testEmptyOptimization().mjava","pathOld":"lucene/src/test/org/apache/lucene/search/TestAutomatonQuery#testEmptyOptimization().mjava","sourceNew":"  /**\n   * Test handling of the empty language\n   */\n  public void testEmptyOptimization() throws IOException {\n    AutomatonQuery aq = new AutomatonQuery(newTerm(\"bogus\"), BasicAutomata\n        .makeEmpty());\n    // not yet available: assertTrue(aq.getEnum(searcher.getIndexReader())\n    // instanceof EmptyTermEnum);\n    Terms terms = MultiFields.getTerms(searcher.getIndexReader(), FN);\n    assertSame(TermsEnum.EMPTY, aq.getTermsEnum(terms));\n    assertEquals(0, automatonQueryNrHits(aq));\n  }\n\n","sourceOld":"  /**\n   * Test handling of the empty language\n   */\n  public void testEmptyOptimization() throws IOException {\n    AutomatonQuery aq = new AutomatonQuery(newTerm(\"bogus\"), BasicAutomata\n        .makeEmpty());\n    // not yet available: assertTrue(aq.getEnum(searcher.getIndexReader())\n    // instanceof EmptyTermEnum);\n    assertSame(TermsEnum.EMPTY, aq.getTermsEnum(searcher.getIndexReader()));\n    assertEquals(0, automatonQueryNrHits(aq));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":5,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestAutomatonQuery#testEmptyOptimization().mjava","pathOld":"lucene/src/test/org/apache/lucene/search/TestAutomatonQuery#testEmptyOptimization().mjava","sourceNew":"  /**\n   * Test handling of the empty language\n   */\n  public void testEmptyOptimization() throws IOException {\n    AutomatonQuery aq = new AutomatonQuery(newTerm(\"bogus\"), BasicAutomata\n        .makeEmpty());\n    // not yet available: assertTrue(aq.getEnum(searcher.getIndexReader())\n    // instanceof EmptyTermEnum);\n    Terms terms = MultiFields.getTerms(searcher.getIndexReader(), FN);\n    assertSame(TermsEnum.EMPTY, aq.getTermsEnum(terms));\n    assertEquals(0, automatonQueryNrHits(aq));\n  }\n\n","sourceOld":"  /**\n   * Test handling of the empty language\n   */\n  public void testEmptyOptimization() throws IOException {\n    AutomatonQuery aq = new AutomatonQuery(newTerm(\"bogus\"), BasicAutomata\n        .makeEmpty());\n    // not yet available: assertTrue(aq.getEnum(searcher.getIndexReader())\n    // instanceof EmptyTermEnum);\n    Terms terms = MultiFields.getTerms(searcher.getIndexReader(), FN);\n    assertSame(TermsEnum.EMPTY, aq.getTermsEnum(terms));\n    assertEquals(0, automatonQueryNrHits(aq));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["e8dd2a69747e9f2922fd8b6970bd1661b26a692d"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"955c32f886db6f6356c9fcdea6b1f1cb4effda24":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["955c32f886db6f6356c9fcdea6b1f1cb4effda24","e8dd2a69747e9f2922fd8b6970bd1661b26a692d"],"e8dd2a69747e9f2922fd8b6970bd1661b26a692d":["955c32f886db6f6356c9fcdea6b1f1cb4effda24"],"3bb13258feba31ab676502787ab2e1779f129b7a":["955c32f886db6f6356c9fcdea6b1f1cb4effda24","e8dd2a69747e9f2922fd8b6970bd1661b26a692d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"]},"commit2Childs":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["955c32f886db6f6356c9fcdea6b1f1cb4effda24"],"955c32f886db6f6356c9fcdea6b1f1cb4effda24":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","e8dd2a69747e9f2922fd8b6970bd1661b26a692d","3bb13258feba31ab676502787ab2e1779f129b7a"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":[],"e8dd2a69747e9f2922fd8b6970bd1661b26a692d":["3a119bbc8703c10faa329ec201c654b3a35a1e3e","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","3bb13258feba31ab676502787ab2e1779f129b7a"],"3bb13258feba31ab676502787ab2e1779f129b7a":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","3bb13258feba31ab676502787ab2e1779f129b7a","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}