{"path":"lucene/highlighter/src/test/org/apache/lucene/search/uhighlight/TestUnifiedHighlighterStrictPhrases#initReaderSearcherHighlighter().mjava","commits":[{"id":"1f5ce59aaf4a055cc9ec62c15a89c263a05ff4b2","date":1475611903,"type":0,"author":"David Smiley","isMerge":false,"pathNew":"lucene/highlighter/src/test/org/apache/lucene/search/uhighlight/TestUnifiedHighlighterStrictPhrases#initReaderSearcherHighlighter().mjava","pathOld":"/dev/null","sourceNew":"  private void initReaderSearcherHighlighter() throws IOException {\n    indexReader = indexWriter.getReader();\n    searcher = newSearcher(indexReader);\n    highlighter = new UnifiedHighlighter(searcher, indexAnalyzer);\n    highlighter.setHighlightPhrasesStrictly(true);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":0,"author":"Kevin Risden","isMerge":true,"pathNew":"lucene/highlighter/src/test/org/apache/lucene/search/uhighlight/TestUnifiedHighlighterStrictPhrases#initReaderSearcherHighlighter().mjava","pathOld":"/dev/null","sourceNew":"  private void initReaderSearcherHighlighter() throws IOException {\n    indexReader = indexWriter.getReader();\n    searcher = newSearcher(indexReader);\n    highlighter = new UnifiedHighlighter(searcher, indexAnalyzer);\n    highlighter.setHighlightPhrasesStrictly(true);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"795822cce6616d4035b5a4bdbb6c113ea2f715ba","date":1535599765,"type":3,"author":"David Smiley","isMerge":false,"pathNew":"lucene/highlighter/src/test/org/apache/lucene/search/uhighlight/TestUnifiedHighlighterStrictPhrases#initReaderSearcherHighlighter().mjava","pathOld":"lucene/highlighter/src/test/org/apache/lucene/search/uhighlight/TestUnifiedHighlighterStrictPhrases#initReaderSearcherHighlighter().mjava","sourceNew":"  private void initReaderSearcherHighlighter() throws IOException {\n    indexReader = indexWriter.getReader();\n    searcher = newSearcher(indexReader);\n    highlighter = TestUnifiedHighlighter.randomUnifiedHighlighter(searcher, indexAnalyzer,\n        EnumSet.of(HighlightFlag.PHRASES, HighlightFlag.MULTI_TERM_QUERY), true);\n    // intercept the formatter in order to check constraints on the passage.\n    final PassageFormatter defaultFormatter = highlighter.getFormatter(null);\n    highlighter.setFormatter(new PassageFormatter() {\n      @Override\n      public Object format(Passage[] passages, String content) {\n        boolean thisDupMatchAllowed = dupMatchAllowed.getAndSet(true);\n        for (Passage passage : passages) {\n          String prevPair = \"\";\n          for (int i = 0; i < passage.getNumMatches(); i++) {\n            // pad each to make comparable\n            String pair = String.format(Locale.ROOT, \"%03d-%03d\", passage.getMatchStarts()[i], passage.getMatchEnds()[i]);\n            int cmp = prevPair.compareTo(pair);\n            if (cmp == 0) {\n              assertTrue(\"dup match in passage at offset \" + pair, thisDupMatchAllowed);\n            } else if (cmp > 0) {\n              fail(\"bad match order in passage at offset \" + pair);\n            }\n            prevPair = pair;\n          }\n\n        }\n        return defaultFormatter.format(passages, content);\n      }\n    });\n  }\n\n","sourceOld":"  private void initReaderSearcherHighlighter() throws IOException {\n    indexReader = indexWriter.getReader();\n    searcher = newSearcher(indexReader);\n    highlighter = new UnifiedHighlighter(searcher, indexAnalyzer);\n    highlighter.setHighlightPhrasesStrictly(true);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"1f5ce59aaf4a055cc9ec62c15a89c263a05ff4b2":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"795822cce6616d4035b5a4bdbb6c113ea2f715ba":["1f5ce59aaf4a055cc9ec62c15a89c263a05ff4b2"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","1f5ce59aaf4a055cc9ec62c15a89c263a05ff4b2"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["795822cce6616d4035b5a4bdbb6c113ea2f715ba"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["1f5ce59aaf4a055cc9ec62c15a89c263a05ff4b2","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"1f5ce59aaf4a055cc9ec62c15a89c263a05ff4b2":["795822cce6616d4035b5a4bdbb6c113ea2f715ba","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"795822cce6616d4035b5a4bdbb6c113ea2f715ba":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}