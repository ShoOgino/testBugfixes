{"path":"src/java/org/apache/lucene/search/PrefixGenerator[PrefixFilter]#generate(IndexReader).mjava","commits":[{"id":"0839a4f0ba3efad1097709fada63a05458637052","date":1160082630,"type":0,"author":"Yonik Seeley","isMerge":false,"pathNew":"src/java/org/apache/lucene/search/PrefixGenerator[PrefixFilter]#generate(IndexReader).mjava","pathOld":"/dev/null","sourceNew":"  public void generate(IndexReader reader) throws IOException {\n    TermEnum enumerator = reader.terms(prefix);\n    TermDocs termDocs = reader.termDocs();\n\n    try {\n\n      String prefixText = prefix.text();\n      String prefixField = prefix.field();\n      do {\n        Term term = enumerator.term();\n        if (term != null &&\n            term.text().startsWith(prefixText) &&\n            term.field() == prefixField)\n        {\n          termDocs.seek(term);\n          while (termDocs.next()) {\n            handleDoc(termDocs.doc());\n          }\n        } else {\n          break;\n        }\n      } while (enumerator.next());\n    } finally {\n      termDocs.close();\n      enumerator.close();\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1cafa5491543830e9ff023323b859c809118a056","date":1174485527,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"src/java/org/apache/lucene/search/PrefixGenerator[PrefixFilter]#generate(IndexReader).mjava","pathOld":"src/java/org/apache/lucene/search/PrefixGenerator[PrefixFilter]#generate(IndexReader).mjava","sourceNew":"  public void generate(IndexReader reader) throws IOException {\n    TermEnum enumerator = reader.terms(prefix);\n    TermDocs termDocs = reader.termDocs();\n\n    try {\n\n      String prefixText = prefix.text();\n      String prefixField = prefix.field();\n      do {\n        Term term = enumerator.term();\n        if (term != null &&\n            term.text().startsWith(prefixText) &&\n            term.field() == prefixField) // interned comparison\n        {\n          termDocs.seek(term);\n          while (termDocs.next()) {\n            handleDoc(termDocs.doc());\n          }\n        } else {\n          break;\n        }\n      } while (enumerator.next());\n    } finally {\n      termDocs.close();\n      enumerator.close();\n    }\n  }\n\n","sourceOld":"  public void generate(IndexReader reader) throws IOException {\n    TermEnum enumerator = reader.terms(prefix);\n    TermDocs termDocs = reader.termDocs();\n\n    try {\n\n      String prefixText = prefix.text();\n      String prefixField = prefix.field();\n      do {\n        Term term = enumerator.term();\n        if (term != null &&\n            term.text().startsWith(prefixText) &&\n            term.field() == prefixField)\n        {\n          termDocs.seek(term);\n          while (termDocs.next()) {\n            handleDoc(termDocs.doc());\n          }\n        } else {\n          break;\n        }\n      } while (enumerator.next());\n    } finally {\n      termDocs.close();\n      enumerator.close();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6f7a11eba51d213f09b96054111cf56a1e5796a3","date":1226364000,"type":4,"author":"Michael McCandless","isMerge":false,"pathNew":"/dev/null","pathOld":"src/java/org/apache/lucene/search/PrefixGenerator[PrefixFilter]#generate(IndexReader).mjava","sourceNew":null,"sourceOld":"  public void generate(IndexReader reader) throws IOException {\n    TermEnum enumerator = reader.terms(prefix);\n    TermDocs termDocs = reader.termDocs();\n\n    try {\n\n      String prefixText = prefix.text();\n      String prefixField = prefix.field();\n      do {\n        Term term = enumerator.term();\n        if (term != null &&\n            term.text().startsWith(prefixText) &&\n            term.field() == prefixField) // interned comparison\n        {\n          termDocs.seek(term);\n          while (termDocs.next()) {\n            handleDoc(termDocs.doc());\n          }\n        } else {\n          break;\n        }\n      } while (enumerator.next());\n    } finally {\n      termDocs.close();\n      enumerator.close();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"1cafa5491543830e9ff023323b859c809118a056":["0839a4f0ba3efad1097709fada63a05458637052"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"0839a4f0ba3efad1097709fada63a05458637052":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["6f7a11eba51d213f09b96054111cf56a1e5796a3"],"6f7a11eba51d213f09b96054111cf56a1e5796a3":["1cafa5491543830e9ff023323b859c809118a056"]},"commit2Childs":{"1cafa5491543830e9ff023323b859c809118a056":["6f7a11eba51d213f09b96054111cf56a1e5796a3"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["0839a4f0ba3efad1097709fada63a05458637052"],"0839a4f0ba3efad1097709fada63a05458637052":["1cafa5491543830e9ff023323b859c809118a056"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"6f7a11eba51d213f09b96054111cf56a1e5796a3":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}