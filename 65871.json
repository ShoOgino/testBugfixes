{"path":"src/java/org/apache/solr/core/SolrCore#initDirectoryFactory().mjava","commits":[{"id":"31f1e0aff124b03ebeca0a1de45361b8efd0d2d9","date":1226014899,"type":0,"author":"Yonik Seeley","isMerge":false,"pathNew":"src/java/org/apache/solr/core/SolrCore#initDirectoryFactory().mjava","pathOld":"/dev/null","sourceNew":"  private void initDirectoryFactory() {\n    String xpath = \"directoryFactory\";\n    Node node = (Node) solrConfig.evaluate(xpath, XPathConstants.NODE);\n    DirectoryFactory dirFactory;\n    if (node != null) {\n      Map<String, DirectoryFactory> registry = new HashMap<String, DirectoryFactory>();\n      NamedListPluginLoader<DirectoryFactory> indexReaderFactoryLoader = new NamedListPluginLoader<DirectoryFactory>(\n          \"[solrconfig.xml] \" + xpath, registry);\n\n      dirFactory = indexReaderFactoryLoader.loadSingle(solrConfig\n          .getResourceLoader(), node);\n    } else {\n      dirFactory = new StandardDirectoryFactory();\n    }\n\n    // And set it\n    directoryFactory = dirFactory;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["b39b1b02e442aaf736cc87417e93552cbd8ef1da","b39b1b02e442aaf736cc87417e93552cbd8ef1da","b39b1b02e442aaf736cc87417e93552cbd8ef1da"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"b338a77d735377ad6a2b02379ce3000377ff8631","date":1244447757,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"src/java/org/apache/solr/core/SolrCore#initDirectoryFactory().mjava","pathOld":"src/java/org/apache/solr/core/SolrCore#initDirectoryFactory().mjava","sourceNew":"   private void initDirectoryFactory() {\n    DirectoryFactory dirFactory;\n    SolrConfig.PluginInfo info = solrConfig.getDirectoryfactoryInfo();\n    if (info != null) {\n      dirFactory = (DirectoryFactory) getResourceLoader().newInstance(info.className);\n      dirFactory.init(info.initArgs);\n    } else {\n      dirFactory = new StandardDirectoryFactory();\n    }\n    // And set it\n    directoryFactory = dirFactory;\n  }\n\n","sourceOld":"  private void initDirectoryFactory() {\n    String xpath = \"directoryFactory\";\n    Node node = (Node) solrConfig.evaluate(xpath, XPathConstants.NODE);\n    DirectoryFactory dirFactory;\n    if (node != null) {\n      Map<String, DirectoryFactory> registry = new HashMap<String, DirectoryFactory>();\n      NamedListPluginLoader<DirectoryFactory> indexReaderFactoryLoader = new NamedListPluginLoader<DirectoryFactory>(\n          \"[solrconfig.xml] \" + xpath, registry);\n\n      dirFactory = indexReaderFactoryLoader.loadSingle(solrConfig\n          .getResourceLoader(), node);\n    } else {\n      dirFactory = new StandardDirectoryFactory();\n    }\n\n    // And set it\n    directoryFactory = dirFactory;\n  }\n\n","bugFix":null,"bugIntro":["b39b1b02e442aaf736cc87417e93552cbd8ef1da","b39b1b02e442aaf736cc87417e93552cbd8ef1da","b39b1b02e442aaf736cc87417e93552cbd8ef1da"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"d10311dc892eac490ca97851d5764dfe32d86759","date":1251102986,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"src/java/org/apache/solr/core/SolrCore#initDirectoryFactory().mjava","pathOld":"src/java/org/apache/solr/core/SolrCore#initDirectoryFactory().mjava","sourceNew":"   private void initDirectoryFactory() {\n    DirectoryFactory dirFactory;\n    PluginInfo info = solrConfig.getDirectoryfactoryInfo();\n    if (info != null) {\n      dirFactory = (DirectoryFactory) getResourceLoader().newInstance(info.className);\n      dirFactory.init(info.initArgs);\n    } else {\n      dirFactory = new StandardDirectoryFactory();\n    }\n    // And set it\n    directoryFactory = dirFactory;\n  }\n\n","sourceOld":"   private void initDirectoryFactory() {\n    DirectoryFactory dirFactory;\n    SolrConfig.PluginInfo info = solrConfig.getDirectoryfactoryInfo();\n    if (info != null) {\n      dirFactory = (DirectoryFactory) getResourceLoader().newInstance(info.className);\n      dirFactory.init(info.initArgs);\n    } else {\n      dirFactory = new StandardDirectoryFactory();\n    }\n    // And set it\n    directoryFactory = dirFactory;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"826a5da0d03fb1739d17785e62666005114f7193","date":1252051605,"type":3,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"src/java/org/apache/solr/core/SolrCore#initDirectoryFactory().mjava","pathOld":"src/java/org/apache/solr/core/SolrCore#initDirectoryFactory().mjava","sourceNew":"   private void initDirectoryFactory() {\n    DirectoryFactory dirFactory;\n    PluginInfo info = solrConfig.getDirectoryFactoryInfo();\n    if (info != null) {\n      dirFactory = (DirectoryFactory) getResourceLoader().newInstance(info.className);\n      dirFactory.init(info.initArgs);\n    } else {\n      dirFactory = new StandardDirectoryFactory();\n    }\n    // And set it\n    directoryFactory = dirFactory;\n  }\n\n","sourceOld":"   private void initDirectoryFactory() {\n    DirectoryFactory dirFactory;\n    PluginInfo info = solrConfig.getDirectoryfactoryInfo();\n    if (info != null) {\n      dirFactory = (DirectoryFactory) getResourceLoader().newInstance(info.className);\n      dirFactory.init(info.initArgs);\n    } else {\n      dirFactory = new StandardDirectoryFactory();\n    }\n    // And set it\n    directoryFactory = dirFactory;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"28a016ae2abf4934515e45810192aa4350e3092b","date":1252309557,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"src/java/org/apache/solr/core/SolrCore#initDirectoryFactory().mjava","pathOld":"src/java/org/apache/solr/core/SolrCore#initDirectoryFactory().mjava","sourceNew":"   private void initDirectoryFactory() {\n    DirectoryFactory dirFactory;\n    PluginInfo info = solrConfig.getPluginInfo(DirectoryFactory.class.getName());\n    if (info != null) {\n      dirFactory = (DirectoryFactory) getResourceLoader().newInstance(info.className);\n      dirFactory.init(info.initArgs);\n    } else {\n      dirFactory = new StandardDirectoryFactory();\n    }\n    // And set it\n    directoryFactory = dirFactory;\n  }\n\n","sourceOld":"   private void initDirectoryFactory() {\n    DirectoryFactory dirFactory;\n    PluginInfo info = solrConfig.getDirectoryFactoryInfo();\n    if (info != null) {\n      dirFactory = (DirectoryFactory) getResourceLoader().newInstance(info.className);\n      dirFactory.init(info.initArgs);\n    } else {\n      dirFactory = new StandardDirectoryFactory();\n    }\n    // And set it\n    directoryFactory = dirFactory;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"ad94625fb8d088209f46650c8097196fec67f00c","date":1453508319,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/src/java/org/apache/solr/core/SolrCore#initDirectoryFactory().mjava","pathOld":"src/java/org/apache/solr/core/SolrCore#initDirectoryFactory().mjava","sourceNew":"   private void initDirectoryFactory() {\n    DirectoryFactory dirFactory;\n    PluginInfo info = solrConfig.getPluginInfo(DirectoryFactory.class.getName());\n    if (info != null) {\n      dirFactory = (DirectoryFactory) getResourceLoader().newInstance(info.className);\n      dirFactory.init(info.initArgs);\n    } else {\n      dirFactory = new StandardDirectoryFactory();\n    }\n    // And set it\n    directoryFactory = dirFactory;\n  }\n\n","sourceOld":"   private void initDirectoryFactory() {\n    DirectoryFactory dirFactory;\n    PluginInfo info = solrConfig.getPluginInfo(DirectoryFactory.class.getName());\n    if (info != null) {\n      dirFactory = (DirectoryFactory) getResourceLoader().newInstance(info.className);\n      dirFactory.init(info.initArgs);\n    } else {\n      dirFactory = new StandardDirectoryFactory();\n    }\n    // And set it\n    directoryFactory = dirFactory;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"d10311dc892eac490ca97851d5764dfe32d86759":["b338a77d735377ad6a2b02379ce3000377ff8631"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"826a5da0d03fb1739d17785e62666005114f7193":["d10311dc892eac490ca97851d5764dfe32d86759"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"ad94625fb8d088209f46650c8097196fec67f00c":["28a016ae2abf4934515e45810192aa4350e3092b"],"28a016ae2abf4934515e45810192aa4350e3092b":["826a5da0d03fb1739d17785e62666005114f7193"],"b338a77d735377ad6a2b02379ce3000377ff8631":["31f1e0aff124b03ebeca0a1de45361b8efd0d2d9"],"31f1e0aff124b03ebeca0a1de45361b8efd0d2d9":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"d10311dc892eac490ca97851d5764dfe32d86759":["826a5da0d03fb1739d17785e62666005114f7193"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"826a5da0d03fb1739d17785e62666005114f7193":["28a016ae2abf4934515e45810192aa4350e3092b"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["31f1e0aff124b03ebeca0a1de45361b8efd0d2d9"],"ad94625fb8d088209f46650c8097196fec67f00c":[],"28a016ae2abf4934515e45810192aa4350e3092b":["ad94625fb8d088209f46650c8097196fec67f00c"],"b338a77d735377ad6a2b02379ce3000377ff8631":["d10311dc892eac490ca97851d5764dfe32d86759"],"31f1e0aff124b03ebeca0a1de45361b8efd0d2d9":["b338a77d735377ad6a2b02379ce3000377ff8631"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["ad94625fb8d088209f46650c8097196fec67f00c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"pathCommit":null}