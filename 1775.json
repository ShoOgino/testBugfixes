{"path":"lucene/core/src/java/org/apache/lucene/geo/GeoEncodingUtils#createComponentPredicate(Component2D).mjava","commits":[{"id":"b5e250f1fb163f190f5ec72b6eeb8271162d8ae1","date":1571074565,"type":1,"author":"Ignacio Vera","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/geo/GeoEncodingUtils#createComponentPredicate(Component2D).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/geo/GeoEncodingUtils#createPolygonPredicate(Polygon[],Polygon2D).mjava","sourceNew":"  /** Create a predicate that checks whether points are within a polygon.\n   *  It works the same way as {@link #createDistancePredicate}.\n   *  @lucene.internal */\n  public static PolygonPredicate createComponentPredicate(Component2D tree) {\n    final Rectangle boundingBox = new Rectangle(tree.getMinY(), tree.getMaxY(), tree.getMinX(), tree.getMaxX());\n    final Function<Rectangle, Relation> boxToRelation = box -> tree.relate(\n        box.minLon, box.maxLon, box.minLat, box.maxLat);\n    final Grid subBoxes = createSubBoxes(boundingBox, boxToRelation);\n\n    return new PolygonPredicate(\n        subBoxes.latShift, subBoxes.lonShift,\n        subBoxes.latBase, subBoxes.lonBase,\n        subBoxes.maxLatDelta, subBoxes.maxLonDelta,\n        subBoxes.relations,\n        tree);\n  }\n\n","sourceOld":"  /** Create a predicate that checks whether points are within a polygon.\n   *  It works the same way as {@link #createDistancePredicate}.\n   *  @lucene.internal */\n  public static PolygonPredicate createPolygonPredicate(Polygon[] polygons, Polygon2D tree) {\n    final Rectangle boundingBox = Rectangle.fromPolygon(polygons);\n    final Function<Rectangle, Relation> boxToRelation = box -> tree.relate(\n        box.minLat, box.maxLat, box.minLon, box.maxLon);\n    final Grid subBoxes = createSubBoxes(boundingBox, boxToRelation);\n\n    return new PolygonPredicate(\n        subBoxes.latShift, subBoxes.lonShift,\n        subBoxes.latBase, subBoxes.lonBase,\n        subBoxes.maxLatDelta, subBoxes.maxLonDelta,\n        subBoxes.relations,\n        tree);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b0b597c65628ca9e73913a07e81691f8229bae35","date":1571224353,"type":0,"author":"jimczi","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/geo/GeoEncodingUtils#createComponentPredicate(Component2D).mjava","pathOld":"/dev/null","sourceNew":"  /** Create a predicate that checks whether points are within a polygon.\n   *  It works the same way as {@link #createDistancePredicate}.\n   *  @lucene.internal */\n  public static PolygonPredicate createComponentPredicate(Component2D tree) {\n    final Rectangle boundingBox = new Rectangle(tree.getMinY(), tree.getMaxY(), tree.getMinX(), tree.getMaxX());\n    final Function<Rectangle, Relation> boxToRelation = box -> tree.relate(\n        box.minLon, box.maxLon, box.minLat, box.maxLat);\n    final Grid subBoxes = createSubBoxes(boundingBox, boxToRelation);\n\n    return new PolygonPredicate(\n        subBoxes.latShift, subBoxes.lonShift,\n        subBoxes.latBase, subBoxes.lonBase,\n        subBoxes.maxLatDelta, subBoxes.maxLonDelta,\n        subBoxes.relations,\n        tree);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b5e250f1fb163f190f5ec72b6eeb8271162d8ae1":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b5e250f1fb163f190f5ec72b6eeb8271162d8ae1"],"b0b597c65628ca9e73913a07e81691f8229bae35":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","b5e250f1fb163f190f5ec72b6eeb8271162d8ae1"]},"commit2Childs":{"b5e250f1fb163f190f5ec72b6eeb8271162d8ae1":["cd5edd1f2b162a5cfa08efd17851a07373a96817","b0b597c65628ca9e73913a07e81691f8229bae35"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b5e250f1fb163f190f5ec72b6eeb8271162d8ae1","b0b597c65628ca9e73913a07e81691f8229bae35"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"b0b597c65628ca9e73913a07e81691f8229bae35":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817","b0b597c65628ca9e73913a07e81691f8229bae35"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}