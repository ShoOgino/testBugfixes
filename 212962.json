{"path":"lucene/backwards/src/test/org/apache/lucene/index/TestIndexReaderReopen#testReopen().mjava","commits":[{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/backwards/src/test/org/apache/lucene/index/TestIndexReaderReopen#testReopen().mjava","pathOld":"backwards/src/test/org/apache/lucene/index/TestIndexReaderReopen#testReopen().mjava","sourceNew":"  public void testReopen() throws Exception {\n    final Directory dir1 = new MockRAMDirectory();\n    \n    createIndex(dir1, false);\n    performDefaultTests(new TestReopen() {\n\n      @Override\n      protected void modifyIndex(int i) throws IOException {\n        TestIndexReaderReopen.modifyIndex(i, dir1);\n      }\n\n      @Override\n      protected IndexReader openReader() throws IOException {\n        return IndexReader.open(dir1, false);\n      }\n      \n    });\n    dir1.close();\n    \n    final Directory dir2 = new MockRAMDirectory();\n    \n    createIndex(dir2, true);\n    performDefaultTests(new TestReopen() {\n\n      @Override\n      protected void modifyIndex(int i) throws IOException {\n        TestIndexReaderReopen.modifyIndex(i, dir2);\n      }\n\n      @Override\n      protected IndexReader openReader() throws IOException {\n        return IndexReader.open(dir2, false);\n      }\n      \n    });\n    dir2.close();\n  }\n\n","sourceOld":"  public void testReopen() throws Exception {\n    final Directory dir1 = new MockRAMDirectory();\n    \n    createIndex(dir1, false);\n    performDefaultTests(new TestReopen() {\n\n      @Override\n      protected void modifyIndex(int i) throws IOException {\n        TestIndexReaderReopen.modifyIndex(i, dir1);\n      }\n\n      @Override\n      protected IndexReader openReader() throws IOException {\n        return IndexReader.open(dir1, false);\n      }\n      \n    });\n    dir1.close();\n    \n    final Directory dir2 = new MockRAMDirectory();\n    \n    createIndex(dir2, true);\n    performDefaultTests(new TestReopen() {\n\n      @Override\n      protected void modifyIndex(int i) throws IOException {\n        TestIndexReaderReopen.modifyIndex(i, dir2);\n      }\n\n      @Override\n      protected IndexReader openReader() throws IOException {\n        return IndexReader.open(dir2, false);\n      }\n      \n    });\n    dir2.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"90eca6fcb6635ca73ea4fdbe2f57d2033b66d3b6","date":1272983566,"type":4,"author":"Uwe Schindler","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/backwards/src/test/org/apache/lucene/index/TestIndexReaderReopen#testReopen().mjava","sourceNew":null,"sourceOld":"  public void testReopen() throws Exception {\n    final Directory dir1 = new MockRAMDirectory();\n    \n    createIndex(dir1, false);\n    performDefaultTests(new TestReopen() {\n\n      @Override\n      protected void modifyIndex(int i) throws IOException {\n        TestIndexReaderReopen.modifyIndex(i, dir1);\n      }\n\n      @Override\n      protected IndexReader openReader() throws IOException {\n        return IndexReader.open(dir1, false);\n      }\n      \n    });\n    dir1.close();\n    \n    final Directory dir2 = new MockRAMDirectory();\n    \n    createIndex(dir2, true);\n    performDefaultTests(new TestReopen() {\n\n      @Override\n      protected void modifyIndex(int i) throws IOException {\n        TestIndexReaderReopen.modifyIndex(i, dir2);\n      }\n\n      @Override\n      protected IndexReader openReader() throws IOException {\n        return IndexReader.open(dir2, false);\n      }\n      \n    });\n    dir2.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"90eca6fcb6635ca73ea4fdbe2f57d2033b66d3b6":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["90eca6fcb6635ca73ea4fdbe2f57d2033b66d3b6"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"90eca6fcb6635ca73ea4fdbe2f57d2033b66d3b6":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["90eca6fcb6635ca73ea4fdbe2f57d2033b66d3b6"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}