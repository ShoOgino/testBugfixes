{"path":"lucene/core/src/test/org/apache/lucene/util/TestSloppyMath#testAsin().mjava","commits":[{"id":"7d3e011ea56c513db42a835815963831340a78ea","date":1381092452,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/util/TestSloppyMath#testAsin().mjava","pathOld":"/dev/null","sourceNew":"  public void testAsin() {\n    assertTrue(Double.isNaN(asin(Double.NaN)));\n    assertTrue(Double.isNaN(asin(2)));\n    assertTrue(Double.isNaN(asin(-2)));\n    assertEquals(-Math.PI/2, asin(-1), ASIN_DELTA);\n    assertEquals(-Math.PI/3, asin(-0.8660254), ASIN_DELTA);\n    assertEquals(-Math.PI/4, asin(-0.7071068), ASIN_DELTA);\n    assertEquals(-Math.PI/6, asin(-0.5), ASIN_DELTA);\n    assertEquals(0, asin(0), ASIN_DELTA);\n    assertEquals(Math.PI/6, asin(0.5), ASIN_DELTA);\n    assertEquals(Math.PI/4, asin(0.7071068), ASIN_DELTA);\n    assertEquals(Math.PI/3, asin(0.8660254), ASIN_DELTA);\n    assertEquals(Math.PI/2, asin(1), ASIN_DELTA);\n    // only values -1..1 are useful\n    for (int i = 0; i < 10000; i++) {\n      double d = random().nextDouble();\n      if (random().nextBoolean()) {\n        d = -d;\n      }\n      assertEquals(StrictMath.asin(d), asin(d), ASIN_DELTA);\n      assertTrue(asin(d) >= -Math.PI/2);\n      assertTrue(asin(d) <= Math.PI/2);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"7d3e011ea56c513db42a835815963831340a78ea":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["7d3e011ea56c513db42a835815963831340a78ea"]},"commit2Childs":{"7d3e011ea56c513db42a835815963831340a78ea":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["7d3e011ea56c513db42a835815963831340a78ea"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}