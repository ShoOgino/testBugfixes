{"path":"src/test/org/apache/lucene/search/TestTermScorer#setUp().mjava","commits":[{"id":"69ac39b86e913c67b6297d986e0c22daa0d4d365","date":1155936757,"type":0,"author":"Grant Ingersoll","isMerge":false,"pathNew":"src/test/org/apache/lucene/search/TestTermScorer#setUp().mjava","pathOld":"/dev/null","sourceNew":"    protected void setUp() throws IOException\n    {\n        directory = new RAMDirectory();\n\n\n        IndexWriter writer = new IndexWriter(directory, new WhitespaceAnalyzer(), true);\n        for (int i = 0; i < values.length; i++)\n        {\n            Document doc = new Document();\n            doc.add(new Field(FIELD, values[i], Field.Store.YES, Field.Index.TOKENIZED));\n            writer.addDocument(doc);\n        }\n        writer.close();\n        indexSearcher = new IndexSearcher(directory);\n        indexReader = indexSearcher.getIndexReader();\n\n\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["290c401c31db375e771805c3ba7ac5f64c7370dc"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"290c401c31db375e771805c3ba7ac5f64c7370dc","date":1192034795,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/test/org/apache/lucene/search/TestTermScorer#setUp().mjava","pathOld":"src/test/org/apache/lucene/search/TestTermScorer#setUp().mjava","sourceNew":"    protected void setUp() throws Exception\n    {\n        super.setUp();\n        directory = new RAMDirectory();\n\n\n        IndexWriter writer = new IndexWriter(directory, new WhitespaceAnalyzer(), true);\n        for (int i = 0; i < values.length; i++)\n        {\n            Document doc = new Document();\n            doc.add(new Field(FIELD, values[i], Field.Store.YES, Field.Index.TOKENIZED));\n            writer.addDocument(doc);\n        }\n        writer.close();\n        indexSearcher = new IndexSearcher(directory);\n        indexReader = indexSearcher.getIndexReader();\n\n\n    }\n\n","sourceOld":"    protected void setUp() throws IOException\n    {\n        directory = new RAMDirectory();\n\n\n        IndexWriter writer = new IndexWriter(directory, new WhitespaceAnalyzer(), true);\n        for (int i = 0; i < values.length; i++)\n        {\n            Document doc = new Document();\n            doc.add(new Field(FIELD, values[i], Field.Store.YES, Field.Index.TOKENIZED));\n            writer.addDocument(doc);\n        }\n        writer.close();\n        indexSearcher = new IndexSearcher(directory);\n        indexReader = indexSearcher.getIndexReader();\n\n\n    }\n\n","bugFix":["69ac39b86e913c67b6297d986e0c22daa0d4d365"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0018e7a0579df5d3de71d0bd878322a7abef04d9","date":1202242049,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/test/org/apache/lucene/search/TestTermScorer#setUp().mjava","pathOld":"src/test/org/apache/lucene/search/TestTermScorer#setUp().mjava","sourceNew":"    protected void setUp() throws Exception\n    {\n        super.setUp();\n        directory = new RAMDirectory();\n\n\n        IndexWriter writer = new IndexWriter(directory, new WhitespaceAnalyzer(), true, IndexWriter.MaxFieldLength.LIMITED);\n        for (int i = 0; i < values.length; i++)\n        {\n            Document doc = new Document();\n            doc.add(new Field(FIELD, values[i], Field.Store.YES, Field.Index.TOKENIZED));\n            writer.addDocument(doc);\n        }\n        writer.close();\n        indexSearcher = new IndexSearcher(directory);\n        indexReader = indexSearcher.getIndexReader();\n\n\n    }\n\n","sourceOld":"    protected void setUp() throws Exception\n    {\n        super.setUp();\n        directory = new RAMDirectory();\n\n\n        IndexWriter writer = new IndexWriter(directory, new WhitespaceAnalyzer(), true);\n        for (int i = 0; i < values.length; i++)\n        {\n            Document doc = new Document();\n            doc.add(new Field(FIELD, values[i], Field.Store.YES, Field.Index.TOKENIZED));\n            writer.addDocument(doc);\n        }\n        writer.close();\n        indexSearcher = new IndexSearcher(directory);\n        indexReader = indexSearcher.getIndexReader();\n\n\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b5015bd4c211c4f399ae66ee20fe6841ba5b0b6a","date":1221082732,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/test/org/apache/lucene/search/TestTermScorer#setUp().mjava","pathOld":"src/test/org/apache/lucene/search/TestTermScorer#setUp().mjava","sourceNew":"    protected void setUp() throws Exception\n    {\n        super.setUp();\n        directory = new RAMDirectory();\n\n\n        IndexWriter writer = new IndexWriter(directory, new WhitespaceAnalyzer(), true, IndexWriter.MaxFieldLength.LIMITED);\n        for (int i = 0; i < values.length; i++)\n        {\n            Document doc = new Document();\n            doc.add(new Field(FIELD, values[i], Field.Store.YES, Field.Index.ANALYZED));\n            writer.addDocument(doc);\n        }\n        writer.close();\n        indexSearcher = new IndexSearcher(directory);\n        indexReader = indexSearcher.getIndexReader();\n\n\n    }\n\n","sourceOld":"    protected void setUp() throws Exception\n    {\n        super.setUp();\n        directory = new RAMDirectory();\n\n\n        IndexWriter writer = new IndexWriter(directory, new WhitespaceAnalyzer(), true, IndexWriter.MaxFieldLength.LIMITED);\n        for (int i = 0; i < values.length; i++)\n        {\n            Document doc = new Document();\n            doc.add(new Field(FIELD, values[i], Field.Store.YES, Field.Index.TOKENIZED));\n            writer.addDocument(doc);\n        }\n        writer.close();\n        indexSearcher = new IndexSearcher(directory);\n        indexReader = indexSearcher.getIndexReader();\n\n\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"58db9ee7d88a7b7c23d77436675c11bcb755c8f9","date":1249451023,"type":3,"author":"Chris M. Hostetter","isMerge":false,"pathNew":"src/test/org/apache/lucene/search/TestTermScorer#setUp().mjava","pathOld":"src/test/org/apache/lucene/search/TestTermScorer#setUp().mjava","sourceNew":"    protected void setUp() throws Exception {\n        super.setUp();\n        directory = new RAMDirectory();\n\n\n        IndexWriter writer = new IndexWriter(directory, new WhitespaceAnalyzer(), true, IndexWriter.MaxFieldLength.LIMITED);\n        for (int i = 0; i < values.length; i++)\n        {\n            Document doc = new Document();\n            doc.add(new Field(FIELD, values[i], Field.Store.YES, Field.Index.ANALYZED));\n            writer.addDocument(doc);\n        }\n        writer.close();\n        indexSearcher = new IndexSearcher(directory);\n        indexReader = indexSearcher.getIndexReader();\n\n\n    }\n\n","sourceOld":"    protected void setUp() throws Exception\n    {\n        super.setUp();\n        directory = new RAMDirectory();\n\n\n        IndexWriter writer = new IndexWriter(directory, new WhitespaceAnalyzer(), true, IndexWriter.MaxFieldLength.LIMITED);\n        for (int i = 0; i < values.length; i++)\n        {\n            Document doc = new Document();\n            doc.add(new Field(FIELD, values[i], Field.Store.YES, Field.Index.ANALYZED));\n            writer.addDocument(doc);\n        }\n        writer.close();\n        indexSearcher = new IndexSearcher(directory);\n        indexReader = indexSearcher.getIndexReader();\n\n\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e8d1458a2543cbd30cbfe7929be4dcb5c5251659","date":1254582241,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/test/org/apache/lucene/search/TestTermScorer#setUp().mjava","pathOld":"src/test/org/apache/lucene/search/TestTermScorer#setUp().mjava","sourceNew":"    protected void setUp() throws Exception {\n        super.setUp();\n        directory = new RAMDirectory();\n\n\n        IndexWriter writer = new IndexWriter(directory, new WhitespaceAnalyzer(), true, IndexWriter.MaxFieldLength.LIMITED);\n        for (int i = 0; i < values.length; i++)\n        {\n            Document doc = new Document();\n            doc.add(new Field(FIELD, values[i], Field.Store.YES, Field.Index.ANALYZED));\n            writer.addDocument(doc);\n        }\n        writer.close();\n        indexSearcher = new IndexSearcher(directory, false);\n        indexReader = indexSearcher.getIndexReader();\n\n\n    }\n\n","sourceOld":"    protected void setUp() throws Exception {\n        super.setUp();\n        directory = new RAMDirectory();\n\n\n        IndexWriter writer = new IndexWriter(directory, new WhitespaceAnalyzer(), true, IndexWriter.MaxFieldLength.LIMITED);\n        for (int i = 0; i < values.length; i++)\n        {\n            Document doc = new Document();\n            doc.add(new Field(FIELD, values[i], Field.Store.YES, Field.Index.ANALYZED));\n            writer.addDocument(doc);\n        }\n        writer.close();\n        indexSearcher = new IndexSearcher(directory);\n        indexReader = indexSearcher.getIndexReader();\n\n\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0a046c0c310bc77931fc8441bd920053b607dd14","date":1254584734,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"src/test/org/apache/lucene/search/TestTermScorer#setUp().mjava","pathOld":"src/test/org/apache/lucene/search/TestTermScorer#setUp().mjava","sourceNew":"    protected void setUp() throws Exception {\n        super.setUp();\n        directory = new RAMDirectory();\n\n\n        IndexWriter writer = new IndexWriter(directory, new WhitespaceAnalyzer(), true, IndexWriter.MaxFieldLength.LIMITED);\n        for (int i = 0; i < values.length; i++)\n        {\n            Document doc = new Document();\n            doc.add(new Field(FIELD, values[i], Field.Store.YES, Field.Index.ANALYZED));\n            writer.addDocument(doc);\n        }\n        writer.close();\n        indexSearcher = new IndexSearcher(directory, false);\n        indexReader = indexSearcher.getIndexReader();\n\n\n    }\n\n","sourceOld":"    protected void setUp() throws Exception {\n        super.setUp();\n        directory = new RAMDirectory();\n\n\n        IndexWriter writer = new IndexWriter(directory, new WhitespaceAnalyzer(), true, IndexWriter.MaxFieldLength.LIMITED);\n        for (int i = 0; i < values.length; i++)\n        {\n            Document doc = new Document();\n            doc.add(new Field(FIELD, values[i], Field.Store.YES, Field.Index.ANALYZED));\n            writer.addDocument(doc);\n        }\n        writer.close();\n        indexSearcher = new IndexSearcher(directory);\n        indexReader = indexSearcher.getIndexReader();\n\n\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1326054a8d3aa66382d49decc7f330955c9c6f71","date":1257386139,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/test/org/apache/lucene/search/TestTermScorer#setUp().mjava","pathOld":"src/test/org/apache/lucene/search/TestTermScorer#setUp().mjava","sourceNew":"    @Override\n    protected void setUp() throws Exception {\n        super.setUp();\n        directory = new RAMDirectory();\n\n\n        IndexWriter writer = new IndexWriter(directory, new WhitespaceAnalyzer(), true, IndexWriter.MaxFieldLength.LIMITED);\n        for (int i = 0; i < values.length; i++)\n        {\n            Document doc = new Document();\n            doc.add(new Field(FIELD, values[i], Field.Store.YES, Field.Index.ANALYZED));\n            writer.addDocument(doc);\n        }\n        writer.close();\n        indexSearcher = new IndexSearcher(directory, false);\n        indexReader = indexSearcher.getIndexReader();\n\n\n    }\n\n","sourceOld":"    protected void setUp() throws Exception {\n        super.setUp();\n        directory = new RAMDirectory();\n\n\n        IndexWriter writer = new IndexWriter(directory, new WhitespaceAnalyzer(), true, IndexWriter.MaxFieldLength.LIMITED);\n        for (int i = 0; i < values.length; i++)\n        {\n            Document doc = new Document();\n            doc.add(new Field(FIELD, values[i], Field.Store.YES, Field.Index.ANALYZED));\n            writer.addDocument(doc);\n        }\n        writer.close();\n        indexSearcher = new IndexSearcher(directory, false);\n        indexReader = indexSearcher.getIndexReader();\n\n\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fe0932c1d340f83fb0a611e5829b3046a1cc1152","date":1264946739,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/test/org/apache/lucene/search/TestTermScorer#setUp().mjava","pathOld":"src/test/org/apache/lucene/search/TestTermScorer#setUp().mjava","sourceNew":"    @Override\n    protected void setUp() throws Exception {\n        super.setUp();\n        directory = new RAMDirectory();\n\n\n        IndexWriter writer = new IndexWriter(directory, new WhitespaceAnalyzer(Version.LUCENE_CURRENT), true, IndexWriter.MaxFieldLength.LIMITED);\n        for (int i = 0; i < values.length; i++)\n        {\n            Document doc = new Document();\n            doc.add(new Field(FIELD, values[i], Field.Store.YES, Field.Index.ANALYZED));\n            writer.addDocument(doc);\n        }\n        writer.close();\n        indexSearcher = new IndexSearcher(directory, false);\n        indexReader = indexSearcher.getIndexReader();\n\n\n    }\n\n","sourceOld":"    @Override\n    protected void setUp() throws Exception {\n        super.setUp();\n        directory = new RAMDirectory();\n\n\n        IndexWriter writer = new IndexWriter(directory, new WhitespaceAnalyzer(), true, IndexWriter.MaxFieldLength.LIMITED);\n        for (int i = 0; i < values.length; i++)\n        {\n            Document doc = new Document();\n            doc.add(new Field(FIELD, values[i], Field.Store.YES, Field.Index.ANALYZED));\n            writer.addDocument(doc);\n        }\n        writer.close();\n        indexSearcher = new IndexSearcher(directory, false);\n        indexReader = indexSearcher.getIndexReader();\n\n\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"55f083e91bb056b57de136da1dfc3b9b6ecc4ef6","date":1265808957,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/test/org/apache/lucene/search/TestTermScorer#setUp().mjava","pathOld":"src/test/org/apache/lucene/search/TestTermScorer#setUp().mjava","sourceNew":"    @Override\n    protected void setUp() throws Exception {\n        super.setUp();\n        directory = new RAMDirectory();\n\n\n        IndexWriter writer = new IndexWriter(directory, new WhitespaceAnalyzer(TEST_VERSION_CURRENT), true, IndexWriter.MaxFieldLength.LIMITED);\n        for (int i = 0; i < values.length; i++)\n        {\n            Document doc = new Document();\n            doc.add(new Field(FIELD, values[i], Field.Store.YES, Field.Index.ANALYZED));\n            writer.addDocument(doc);\n        }\n        writer.close();\n        indexSearcher = new IndexSearcher(directory, false);\n        indexReader = indexSearcher.getIndexReader();\n\n\n    }\n\n","sourceOld":"    @Override\n    protected void setUp() throws Exception {\n        super.setUp();\n        directory = new RAMDirectory();\n\n\n        IndexWriter writer = new IndexWriter(directory, new WhitespaceAnalyzer(Version.LUCENE_CURRENT), true, IndexWriter.MaxFieldLength.LIMITED);\n        for (int i = 0; i < values.length; i++)\n        {\n            Document doc = new Document();\n            doc.add(new Field(FIELD, values[i], Field.Store.YES, Field.Index.ANALYZED));\n            writer.addDocument(doc);\n        }\n        writer.close();\n        indexSearcher = new IndexSearcher(directory, false);\n        indexReader = indexSearcher.getIndexReader();\n\n\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1cedb00d2dd44640194401179358a2e3ba6051bf","date":1268243626,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/test/org/apache/lucene/search/TestTermScorer#setUp().mjava","pathOld":"src/test/org/apache/lucene/search/TestTermScorer#setUp().mjava","sourceNew":"    @Override\n    protected void setUp() throws Exception {\n        super.setUp();\n        directory = new RAMDirectory();\n\n        IndexWriter writer = new IndexWriter(directory, new IndexWriterConfig(TEST_VERSION_CURRENT));\n        for (int i = 0; i < values.length; i++) {\n            Document doc = new Document();\n            doc.add(new Field(FIELD, values[i], Field.Store.YES, Field.Index.ANALYZED));\n            writer.addDocument(doc);\n        }\n        writer.close();\n        indexSearcher = new IndexSearcher(directory, false);\n        indexReader = indexSearcher.getIndexReader();\n\n\n    }\n\n","sourceOld":"    @Override\n    protected void setUp() throws Exception {\n        super.setUp();\n        directory = new RAMDirectory();\n\n\n        IndexWriter writer = new IndexWriter(directory, new WhitespaceAnalyzer(TEST_VERSION_CURRENT), true, IndexWriter.MaxFieldLength.LIMITED);\n        for (int i = 0; i < values.length; i++)\n        {\n            Document doc = new Document();\n            doc.add(new Field(FIELD, values[i], Field.Store.YES, Field.Index.ANALYZED));\n            writer.addDocument(doc);\n        }\n        writer.close();\n        indexSearcher = new IndexSearcher(directory, false);\n        indexReader = indexSearcher.getIndexReader();\n\n\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e52fea2c4081a1e552b98506691990be59503168","date":1268250331,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/test/org/apache/lucene/search/TestTermScorer#setUp().mjava","pathOld":"src/test/org/apache/lucene/search/TestTermScorer#setUp().mjava","sourceNew":"    @Override\n    protected void setUp() throws Exception {\n        super.setUp();\n        directory = new RAMDirectory();\n\n\n        IndexWriter writer = new IndexWriter(directory, new WhitespaceAnalyzer(TEST_VERSION_CURRENT), true, IndexWriter.MaxFieldLength.LIMITED);\n        for (int i = 0; i < values.length; i++)\n        {\n            Document doc = new Document();\n            doc.add(new Field(FIELD, values[i], Field.Store.YES, Field.Index.ANALYZED));\n            writer.addDocument(doc);\n        }\n        writer.close();\n        indexSearcher = new IndexSearcher(directory, false);\n        indexReader = indexSearcher.getIndexReader();\n\n\n    }\n\n","sourceOld":"    @Override\n    protected void setUp() throws Exception {\n        super.setUp();\n        directory = new RAMDirectory();\n\n        IndexWriter writer = new IndexWriter(directory, new IndexWriterConfig(TEST_VERSION_CURRENT));\n        for (int i = 0; i < values.length; i++) {\n            Document doc = new Document();\n            doc.add(new Field(FIELD, values[i], Field.Store.YES, Field.Index.ANALYZED));\n            writer.addDocument(doc);\n        }\n        writer.close();\n        indexSearcher = new IndexSearcher(directory, false);\n        indexReader = indexSearcher.getIndexReader();\n\n\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"84080a7d7dbdaa3e6a4a1c9f1bb6221be40f47e8","date":1268494368,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/test/org/apache/lucene/search/TestTermScorer#setUp().mjava","pathOld":"src/test/org/apache/lucene/search/TestTermScorer#setUp().mjava","sourceNew":"    @Override\n    protected void setUp() throws Exception {\n        super.setUp();\n        directory = new RAMDirectory();\n\n        IndexWriter writer = new IndexWriter(directory, new IndexWriterConfig(TEST_VERSION_CURRENT, new WhitespaceAnalyzer(TEST_VERSION_CURRENT)));\n        for (int i = 0; i < values.length; i++) {\n            Document doc = new Document();\n            doc.add(new Field(FIELD, values[i], Field.Store.YES, Field.Index.ANALYZED));\n            writer.addDocument(doc);\n        }\n        writer.close();\n        indexSearcher = new IndexSearcher(directory, false);\n        indexReader = indexSearcher.getIndexReader();\n\n\n    }\n\n","sourceOld":"    @Override\n    protected void setUp() throws Exception {\n        super.setUp();\n        directory = new RAMDirectory();\n\n\n        IndexWriter writer = new IndexWriter(directory, new WhitespaceAnalyzer(TEST_VERSION_CURRENT), true, IndexWriter.MaxFieldLength.LIMITED);\n        for (int i = 0; i < values.length; i++)\n        {\n            Document doc = new Document();\n            doc.add(new Field(FIELD, values[i], Field.Store.YES, Field.Index.ANALYZED));\n            writer.addDocument(doc);\n        }\n        writer.close();\n        indexSearcher = new IndexSearcher(directory, false);\n        indexReader = indexSearcher.getIndexReader();\n\n\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/search/TestTermScorer#setUp().mjava","pathOld":"src/test/org/apache/lucene/search/TestTermScorer#setUp().mjava","sourceNew":"    @Override\n    protected void setUp() throws Exception {\n        super.setUp();\n        directory = new RAMDirectory();\n\n        IndexWriter writer = new IndexWriter(directory, new IndexWriterConfig(TEST_VERSION_CURRENT, new WhitespaceAnalyzer(TEST_VERSION_CURRENT)));\n        for (int i = 0; i < values.length; i++) {\n            Document doc = new Document();\n            doc.add(new Field(FIELD, values[i], Field.Store.YES, Field.Index.ANALYZED));\n            writer.addDocument(doc);\n        }\n        writer.close();\n        indexSearcher = new IndexSearcher(directory, false);\n        indexReader = indexSearcher.getIndexReader();\n\n\n    }\n\n","sourceOld":"    @Override\n    protected void setUp() throws Exception {\n        super.setUp();\n        directory = new RAMDirectory();\n\n        IndexWriter writer = new IndexWriter(directory, new IndexWriterConfig(TEST_VERSION_CURRENT, new WhitespaceAnalyzer(TEST_VERSION_CURRENT)));\n        for (int i = 0; i < values.length; i++) {\n            Document doc = new Document();\n            doc.add(new Field(FIELD, values[i], Field.Store.YES, Field.Index.ANALYZED));\n            writer.addDocument(doc);\n        }\n        writer.close();\n        indexSearcher = new IndexSearcher(directory, false);\n        indexReader = indexSearcher.getIndexReader();\n\n\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"55f083e91bb056b57de136da1dfc3b9b6ecc4ef6":["fe0932c1d340f83fb0a611e5829b3046a1cc1152"],"0a046c0c310bc77931fc8441bd920053b607dd14":["58db9ee7d88a7b7c23d77436675c11bcb755c8f9","e8d1458a2543cbd30cbfe7929be4dcb5c5251659"],"1cedb00d2dd44640194401179358a2e3ba6051bf":["55f083e91bb056b57de136da1dfc3b9b6ecc4ef6"],"b5015bd4c211c4f399ae66ee20fe6841ba5b0b6a":["0018e7a0579df5d3de71d0bd878322a7abef04d9"],"e52fea2c4081a1e552b98506691990be59503168":["1cedb00d2dd44640194401179358a2e3ba6051bf"],"0018e7a0579df5d3de71d0bd878322a7abef04d9":["290c401c31db375e771805c3ba7ac5f64c7370dc"],"1326054a8d3aa66382d49decc7f330955c9c6f71":["0a046c0c310bc77931fc8441bd920053b607dd14"],"84080a7d7dbdaa3e6a4a1c9f1bb6221be40f47e8":["e52fea2c4081a1e552b98506691990be59503168"],"58db9ee7d88a7b7c23d77436675c11bcb755c8f9":["b5015bd4c211c4f399ae66ee20fe6841ba5b0b6a"],"e8d1458a2543cbd30cbfe7929be4dcb5c5251659":["58db9ee7d88a7b7c23d77436675c11bcb755c8f9"],"fe0932c1d340f83fb0a611e5829b3046a1cc1152":["1326054a8d3aa66382d49decc7f330955c9c6f71"],"69ac39b86e913c67b6297d986e0c22daa0d4d365":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"290c401c31db375e771805c3ba7ac5f64c7370dc":["69ac39b86e913c67b6297d986e0c22daa0d4d365"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["84080a7d7dbdaa3e6a4a1c9f1bb6221be40f47e8"]},"commit2Childs":{"55f083e91bb056b57de136da1dfc3b9b6ecc4ef6":["1cedb00d2dd44640194401179358a2e3ba6051bf"],"0a046c0c310bc77931fc8441bd920053b607dd14":["1326054a8d3aa66382d49decc7f330955c9c6f71"],"1cedb00d2dd44640194401179358a2e3ba6051bf":["e52fea2c4081a1e552b98506691990be59503168"],"b5015bd4c211c4f399ae66ee20fe6841ba5b0b6a":["58db9ee7d88a7b7c23d77436675c11bcb755c8f9"],"0018e7a0579df5d3de71d0bd878322a7abef04d9":["b5015bd4c211c4f399ae66ee20fe6841ba5b0b6a"],"e52fea2c4081a1e552b98506691990be59503168":["84080a7d7dbdaa3e6a4a1c9f1bb6221be40f47e8"],"1326054a8d3aa66382d49decc7f330955c9c6f71":["fe0932c1d340f83fb0a611e5829b3046a1cc1152"],"84080a7d7dbdaa3e6a4a1c9f1bb6221be40f47e8":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"58db9ee7d88a7b7c23d77436675c11bcb755c8f9":["0a046c0c310bc77931fc8441bd920053b607dd14","e8d1458a2543cbd30cbfe7929be4dcb5c5251659"],"e8d1458a2543cbd30cbfe7929be4dcb5c5251659":["0a046c0c310bc77931fc8441bd920053b607dd14"],"fe0932c1d340f83fb0a611e5829b3046a1cc1152":["55f083e91bb056b57de136da1dfc3b9b6ecc4ef6"],"69ac39b86e913c67b6297d986e0c22daa0d4d365":["290c401c31db375e771805c3ba7ac5f64c7370dc"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["69ac39b86e913c67b6297d986e0c22daa0d4d365"],"290c401c31db375e771805c3ba7ac5f64c7370dc":["0018e7a0579df5d3de71d0bd878322a7abef04d9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}