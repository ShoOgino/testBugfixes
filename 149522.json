{"path":"solr/core/src/java/org/apache/solr/servlet/SolrRequestParsers#SolrRequestParsers(SolrConfig).mjava","commits":[{"id":"43fbcd532bdc735ef51c6d46a5f7f0e5bc761cec","date":1389843994,"type":1,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/servlet/SolrRequestParsers#SolrRequestParsers(SolrConfig).mjava","pathOld":"solr/core/src/java/org/apache/solr/servlet/SolrRequestParsers#SolrRequestParsers(Config).mjava","sourceNew":"  /**\n   * Pass in an xml configuration.  A null configuration will enable\n   * everything with maximum values.\n   */\n  public SolrRequestParsers( SolrConfig globalConfig ) {\n    final int multipartUploadLimitKB, formUploadLimitKB;\n    if( globalConfig == null ) {\n      multipartUploadLimitKB = formUploadLimitKB = Integer.MAX_VALUE; \n      enableRemoteStreams = true;\n      handleSelect = true;\n      addHttpRequestToContext = false;\n    } else {\n      multipartUploadLimitKB = globalConfig.getMultipartUploadLimitKB();\n      \n      formUploadLimitKB = globalConfig.getFormUploadLimitKB();\n      \n      enableRemoteStreams = globalConfig.isEnableRemoteStreams();\n  \n      // Let this filter take care of /select?xxx format\n      handleSelect = globalConfig.isHandleSelect();\n      \n      addHttpRequestToContext = globalConfig.isAddHttpRequestToContext();\n    }\n    init(multipartUploadLimitKB, formUploadLimitKB);\n  }\n\n","sourceOld":"  /**\n   * Pass in an xml configuration.  A null configuration will enable\n   * everything with maximum values.\n   */\n  public SolrRequestParsers( Config globalConfig ) {\n    final int multipartUploadLimitKB, formUploadLimitKB;\n    if( globalConfig == null ) {\n      multipartUploadLimitKB = formUploadLimitKB = Integer.MAX_VALUE; \n      enableRemoteStreams = true;\n      handleSelect = true;\n      addHttpRequestToContext = false;\n    } else {\n      multipartUploadLimitKB = globalConfig.getInt( \n          \"requestDispatcher/requestParsers/@multipartUploadLimitInKB\", 2048 );\n      \n      formUploadLimitKB = globalConfig.getInt( \n          \"requestDispatcher/requestParsers/@formdataUploadLimitInKB\", 2048 );\n      \n      enableRemoteStreams = globalConfig.getBool( \n          \"requestDispatcher/requestParsers/@enableRemoteStreaming\", false ); \n  \n      // Let this filter take care of /select?xxx format\n      handleSelect = globalConfig.getBool( \n          \"requestDispatcher/@handleSelect\", true ); \n      \n      addHttpRequestToContext = globalConfig.getBool( \n          \"requestDispatcher/requestParsers/@addHttpRequestToContext\", false ); \n    }\n    init(multipartUploadLimitKB, formUploadLimitKB);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e2238da841c6da38e6ed909d35da8f4c0ea3147b","date":1499346175,"type":3,"author":"Jan HÃ¸ydahl","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/servlet/SolrRequestParsers#SolrRequestParsers(SolrConfig).mjava","pathOld":"solr/core/src/java/org/apache/solr/servlet/SolrRequestParsers#SolrRequestParsers(SolrConfig).mjava","sourceNew":"  /**\n   * Pass in an xml configuration.  A null configuration will enable\n   * everything with maximum values.\n   */\n  public SolrRequestParsers( SolrConfig globalConfig ) {\n    final int multipartUploadLimitKB, formUploadLimitKB;\n    if( globalConfig == null ) {\n      multipartUploadLimitKB = formUploadLimitKB = Integer.MAX_VALUE; \n      enableRemoteStreams = false;\n      enableStreamBody = false;\n      handleSelect = false;\n      addHttpRequestToContext = false;\n    } else {\n      multipartUploadLimitKB = globalConfig.getMultipartUploadLimitKB();\n      \n      formUploadLimitKB = globalConfig.getFormUploadLimitKB();\n      \n      enableRemoteStreams = globalConfig.isEnableRemoteStreams();\n      enableStreamBody = globalConfig.isEnableStreamBody();\n  \n      // Let this filter take care of /select?xxx format\n      handleSelect = globalConfig.isHandleSelect();\n      \n      addHttpRequestToContext = globalConfig.isAddHttpRequestToContext();\n    }\n    init(multipartUploadLimitKB, formUploadLimitKB);\n  }\n\n","sourceOld":"  /**\n   * Pass in an xml configuration.  A null configuration will enable\n   * everything with maximum values.\n   */\n  public SolrRequestParsers( SolrConfig globalConfig ) {\n    final int multipartUploadLimitKB, formUploadLimitKB;\n    if( globalConfig == null ) {\n      multipartUploadLimitKB = formUploadLimitKB = Integer.MAX_VALUE; \n      enableRemoteStreams = true;\n      handleSelect = true;\n      addHttpRequestToContext = false;\n    } else {\n      multipartUploadLimitKB = globalConfig.getMultipartUploadLimitKB();\n      \n      formUploadLimitKB = globalConfig.getFormUploadLimitKB();\n      \n      enableRemoteStreams = globalConfig.isEnableRemoteStreams();\n  \n      // Let this filter take care of /select?xxx format\n      handleSelect = globalConfig.isHandleSelect();\n      \n      addHttpRequestToContext = globalConfig.isAddHttpRequestToContext();\n    }\n    init(multipartUploadLimitKB, formUploadLimitKB);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e73d8d559120669b47658108d818b637df5456ea","date":1499401413,"type":3,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/servlet/SolrRequestParsers#SolrRequestParsers(SolrConfig).mjava","pathOld":"solr/core/src/java/org/apache/solr/servlet/SolrRequestParsers#SolrRequestParsers(SolrConfig).mjava","sourceNew":"  /**\n   * Pass in an xml configuration.  A null configuration will enable\n   * everything with maximum values.\n   */\n  public SolrRequestParsers( SolrConfig globalConfig ) {\n    final int multipartUploadLimitKB, formUploadLimitKB;\n    if( globalConfig == null ) {\n      multipartUploadLimitKB = formUploadLimitKB = Integer.MAX_VALUE; \n      enableRemoteStreams = false;\n      enableStreamBody = false;\n      handleSelect = false;\n      addHttpRequestToContext = false;\n    } else {\n      multipartUploadLimitKB = globalConfig.getMultipartUploadLimitKB();\n      \n      formUploadLimitKB = globalConfig.getFormUploadLimitKB();\n      \n      enableRemoteStreams = globalConfig.isEnableRemoteStreams();\n      enableStreamBody = globalConfig.isEnableStreamBody();\n  \n      // Let this filter take care of /select?xxx format\n      handleSelect = globalConfig.isHandleSelect();\n      \n      addHttpRequestToContext = globalConfig.isAddHttpRequestToContext();\n    }\n    init(multipartUploadLimitKB, formUploadLimitKB);\n  }\n\n","sourceOld":"  /**\n   * Pass in an xml configuration.  A null configuration will enable\n   * everything with maximum values.\n   */\n  public SolrRequestParsers( SolrConfig globalConfig ) {\n    final int multipartUploadLimitKB, formUploadLimitKB;\n    if( globalConfig == null ) {\n      multipartUploadLimitKB = formUploadLimitKB = Integer.MAX_VALUE; \n      enableRemoteStreams = true;\n      handleSelect = true;\n      addHttpRequestToContext = false;\n    } else {\n      multipartUploadLimitKB = globalConfig.getMultipartUploadLimitKB();\n      \n      formUploadLimitKB = globalConfig.getFormUploadLimitKB();\n      \n      enableRemoteStreams = globalConfig.isEnableRemoteStreams();\n  \n      // Let this filter take care of /select?xxx format\n      handleSelect = globalConfig.isHandleSelect();\n      \n      addHttpRequestToContext = globalConfig.isAddHttpRequestToContext();\n    }\n    init(multipartUploadLimitKB, formUploadLimitKB);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"e2238da841c6da38e6ed909d35da8f4c0ea3147b":["43fbcd532bdc735ef51c6d46a5f7f0e5bc761cec"],"43fbcd532bdc735ef51c6d46a5f7f0e5bc761cec":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"e73d8d559120669b47658108d818b637df5456ea":["43fbcd532bdc735ef51c6d46a5f7f0e5bc761cec","e2238da841c6da38e6ed909d35da8f4c0ea3147b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["e2238da841c6da38e6ed909d35da8f4c0ea3147b"]},"commit2Childs":{"e2238da841c6da38e6ed909d35da8f4c0ea3147b":["e73d8d559120669b47658108d818b637df5456ea","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"43fbcd532bdc735ef51c6d46a5f7f0e5bc761cec":["e2238da841c6da38e6ed909d35da8f4c0ea3147b","e73d8d559120669b47658108d818b637df5456ea"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["43fbcd532bdc735ef51c6d46a5f7f0e5bc761cec"],"e73d8d559120669b47658108d818b637df5456ea":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["e73d8d559120669b47658108d818b637df5456ea","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}