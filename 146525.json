{"path":"contrib/analyzers/common/src/test/org/apache/lucene/analysis/ar/TestArabicAnalyzer#testEnglishInput().mjava","commits":[{"id":"4c83dcc030e0c23d7e510af785f698bca9c48bc8","date":1249496542,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"contrib/analyzers/common/src/test/org/apache/lucene/analysis/ar/TestArabicAnalyzer#testEnglishInput().mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Non-arabic text gets treated in a similar way as SimpleAnalyzer.\n   */\n  public void testEnglishInput() throws Exception {\n    assertAnalyzesTo(new ArabicAnalyzer(), \"English text.\", new String[] {\n        \"english\", \"text\" });\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ba1116b3450a9c1642c89445d131b37344055245","date":1256329517,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"contrib/analyzers/common/src/test/org/apache/lucene/analysis/ar/TestArabicAnalyzer#testEnglishInput().mjava","pathOld":"contrib/analyzers/common/src/test/org/apache/lucene/analysis/ar/TestArabicAnalyzer#testEnglishInput().mjava","sourceNew":"  /**\n   * Non-arabic text gets treated in a similar way as SimpleAnalyzer.\n   */\n  public void testEnglishInput() throws Exception {\n    assertAnalyzesTo(new ArabicAnalyzer(Version.LUCENE_CURRENT), \"English text.\", new String[] {\n        \"english\", \"text\" });\n  }\n\n","sourceOld":"  /**\n   * Non-arabic text gets treated in a similar way as SimpleAnalyzer.\n   */\n  public void testEnglishInput() throws Exception {\n    assertAnalyzesTo(new ArabicAnalyzer(), \"English text.\", new String[] {\n        \"english\", \"text\" });\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a9ac13b5f0ce5ef1b2ce168367d993a79594b23a","date":1267298041,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"contrib/analyzers/common/src/test/org/apache/lucene/analysis/ar/TestArabicAnalyzer#testEnglishInput().mjava","pathOld":"contrib/analyzers/common/src/test/org/apache/lucene/analysis/ar/TestArabicAnalyzer#testEnglishInput().mjava","sourceNew":"  /**\n   * Non-arabic text gets treated in a similar way as SimpleAnalyzer.\n   */\n  public void testEnglishInput() throws Exception {\n    assertAnalyzesTo(new ArabicAnalyzer(TEST_VERSION_CURRENT), \"English text.\", new String[] {\n        \"english\", \"text\" });\n  }\n\n","sourceOld":"  /**\n   * Non-arabic text gets treated in a similar way as SimpleAnalyzer.\n   */\n  public void testEnglishInput() throws Exception {\n    assertAnalyzesTo(new ArabicAnalyzer(Version.LUCENE_CURRENT), \"English text.\", new String[] {\n        \"english\", \"text\" });\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/contrib/analyzers/common/src/test/org/apache/lucene/analysis/ar/TestArabicAnalyzer#testEnglishInput().mjava","pathOld":"contrib/analyzers/common/src/test/org/apache/lucene/analysis/ar/TestArabicAnalyzer#testEnglishInput().mjava","sourceNew":"  /**\n   * Non-arabic text gets treated in a similar way as SimpleAnalyzer.\n   */\n  public void testEnglishInput() throws Exception {\n    assertAnalyzesTo(new ArabicAnalyzer(TEST_VERSION_CURRENT), \"English text.\", new String[] {\n        \"english\", \"text\" });\n  }\n\n","sourceOld":"  /**\n   * Non-arabic text gets treated in a similar way as SimpleAnalyzer.\n   */\n  public void testEnglishInput() throws Exception {\n    assertAnalyzesTo(new ArabicAnalyzer(TEST_VERSION_CURRENT), \"English text.\", new String[] {\n        \"english\", \"text\" });\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"4c83dcc030e0c23d7e510af785f698bca9c48bc8":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a9ac13b5f0ce5ef1b2ce168367d993a79594b23a":["ba1116b3450a9c1642c89445d131b37344055245"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a9ac13b5f0ce5ef1b2ce168367d993a79594b23a"],"ba1116b3450a9c1642c89445d131b37344055245":["4c83dcc030e0c23d7e510af785f698bca9c48bc8"]},"commit2Childs":{"4c83dcc030e0c23d7e510af785f698bca9c48bc8":["ba1116b3450a9c1642c89445d131b37344055245"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["4c83dcc030e0c23d7e510af785f698bca9c48bc8"],"a9ac13b5f0ce5ef1b2ce168367d993a79594b23a":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"ba1116b3450a9c1642c89445d131b37344055245":["a9ac13b5f0ce5ef1b2ce168367d993a79594b23a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}