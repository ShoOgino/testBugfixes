{"path":"lucene/core/src/java/org/apache/lucene/index/TermVectorsConsumer#initTermVectorsWriter().mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/TermVectorsConsumer#initTermVectorsWriter().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/TermVectorsConsumer#initTermVectorsWriter().mjava","sourceNew":"  private final void initTermVectorsWriter() throws IOException {\n    if (writer == null) {\n      IOContext context = new IOContext(new FlushInfo(docWriter.getNumDocsInRAM(), docWriter.bytesUsed()));\n      writer = docWriter.codec.termVectorsFormat().vectorsWriter(docWriter.directory, docWriter.getSegment(), context);\n      lastDocID = 0;\n    }\n  }\n\n","sourceOld":"  private final void initTermVectorsWriter() throws IOException {\n    if (writer == null) {\n      IOContext context = new IOContext(new FlushInfo(docWriter.getNumDocsInRAM(), docWriter.bytesUsed()));\n      writer = docWriter.codec.termVectorsFormat().vectorsWriter(docWriter.directory, docWriter.getSegment(), context);\n      lastDocID = 0;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"129c6e8ac0c0d9a110ba29e4b5f1889374f30076","date":1337725510,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/TermVectorsConsumer#initTermVectorsWriter().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/TermVectorsConsumer#initTermVectorsWriter().mjava","sourceNew":"  private final void initTermVectorsWriter() throws IOException {\n    if (writer == null) {\n      IOContext context = new IOContext(new FlushInfo(docWriter.getNumDocsInRAM(), docWriter.bytesUsed()));\n      writer = docWriter.codec.termVectorsFormat().vectorsWriter(docWriter.directory, docWriter.getSegmentInfo().name, context);\n      lastDocID = 0;\n    }\n  }\n\n","sourceOld":"  private final void initTermVectorsWriter() throws IOException {\n    if (writer == null) {\n      IOContext context = new IOContext(new FlushInfo(docWriter.getNumDocsInRAM(), docWriter.bytesUsed()));\n      writer = docWriter.codec.termVectorsFormat().vectorsWriter(docWriter.directory, docWriter.getSegment(), context);\n      lastDocID = 0;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8febb56d1ed9f3314d35d075599fd9aff857be3c","date":1337729003,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/TermVectorsConsumer#initTermVectorsWriter().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/TermVectorsConsumer#initTermVectorsWriter().mjava","sourceNew":"  private final void initTermVectorsWriter() throws IOException {\n    if (writer == null) {\n      IOContext context = new IOContext(new FlushInfo(docWriter.getNumDocsInRAM(), docWriter.bytesUsed()));\n      writer = docWriter.codec.termVectorsFormat().vectorsWriter(docWriter.directory, docWriter.getSegmentInfo(), context);\n      lastDocID = 0;\n    }\n  }\n\n","sourceOld":"  private final void initTermVectorsWriter() throws IOException {\n    if (writer == null) {\n      IOContext context = new IOContext(new FlushInfo(docWriter.getNumDocsInRAM(), docWriter.bytesUsed()));\n      writer = docWriter.codec.termVectorsFormat().vectorsWriter(docWriter.directory, docWriter.getSegmentInfo().name, context);\n      lastDocID = 0;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"615ddbd81799980d0fdd95e0238e1c498b6f47b0","date":1338233290,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/TermVectorsConsumer#initTermVectorsWriter().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/TermVectorsConsumer#initTermVectorsWriter().mjava","sourceNew":"  private final void initTermVectorsWriter() throws IOException {\n    if (writer == null) {\n      IOContext context = new IOContext(new FlushInfo(docWriter.getNumDocsInRAM(), docWriter.bytesUsed()));\n      writer = docWriter.codec.termVectorsFormat().vectorsWriter(docWriter.directory, docWriter.getSegmentInfo(), context);\n      lastDocID = 0;\n    }\n  }\n\n","sourceOld":"  private final void initTermVectorsWriter() throws IOException {\n    if (writer == null) {\n      IOContext context = new IOContext(new FlushInfo(docWriter.getNumDocsInRAM(), docWriter.bytesUsed()));\n      writer = docWriter.codec.termVectorsFormat().vectorsWriter(docWriter.directory, docWriter.getSegment(), context);\n      lastDocID = 0;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"52c7e49be259508735752fba88085255014a6ecf","date":1398706273,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/TermVectorsConsumer#initTermVectorsWriter().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/TermVectorsConsumer#initTermVectorsWriter().mjava","sourceNew":"  private void initTermVectorsWriter() throws IOException {\n    if (writer == null) {\n      IOContext context = new IOContext(new FlushInfo(docWriter.getNumDocsInRAM(), docWriter.bytesUsed()));\n      writer = docWriter.codec.termVectorsFormat().vectorsWriter(docWriter.directory, docWriter.getSegmentInfo(), context);\n      lastDocID = 0;\n    }\n  }\n\n","sourceOld":"  private final void initTermVectorsWriter() throws IOException {\n    if (writer == null) {\n      IOContext context = new IOContext(new FlushInfo(docWriter.getNumDocsInRAM(), docWriter.bytesUsed()));\n      writer = docWriter.codec.termVectorsFormat().vectorsWriter(docWriter.directory, docWriter.getSegmentInfo(), context);\n      lastDocID = 0;\n    }\n  }\n\n","bugFix":null,"bugIntro":["86a0a50d2d14aaee1e635bbec914468551f7f9a2"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"3394716f52b34ab259ad5247e7595d9f9db6e935","date":1398791921,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/TermVectorsConsumer#initTermVectorsWriter().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/TermVectorsConsumer#initTermVectorsWriter().mjava","sourceNew":"  private void initTermVectorsWriter() throws IOException {\n    if (writer == null) {\n      IOContext context = new IOContext(new FlushInfo(docWriter.getNumDocsInRAM(), docWriter.bytesUsed()));\n      writer = docWriter.codec.termVectorsFormat().vectorsWriter(docWriter.directory, docWriter.getSegmentInfo(), context);\n      lastDocID = 0;\n    }\n  }\n\n","sourceOld":"  private final void initTermVectorsWriter() throws IOException {\n    if (writer == null) {\n      IOContext context = new IOContext(new FlushInfo(docWriter.getNumDocsInRAM(), docWriter.bytesUsed()));\n      writer = docWriter.codec.termVectorsFormat().vectorsWriter(docWriter.directory, docWriter.getSegmentInfo(), context);\n      lastDocID = 0;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"c0cd85fde84cb318b4dc97710dcf15e2959a1bbe","date":1398844771,"type":3,"author":"Dawid Weiss","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/TermVectorsConsumer#initTermVectorsWriter().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/TermVectorsConsumer#initTermVectorsWriter().mjava","sourceNew":"  private void initTermVectorsWriter() throws IOException {\n    if (writer == null) {\n      IOContext context = new IOContext(new FlushInfo(docWriter.getNumDocsInRAM(), docWriter.bytesUsed()));\n      writer = docWriter.codec.termVectorsFormat().vectorsWriter(docWriter.directory, docWriter.getSegmentInfo(), context);\n      lastDocID = 0;\n    }\n  }\n\n","sourceOld":"  private final void initTermVectorsWriter() throws IOException {\n    if (writer == null) {\n      IOContext context = new IOContext(new FlushInfo(docWriter.getNumDocsInRAM(), docWriter.bytesUsed()));\n      writer = docWriter.codec.termVectorsFormat().vectorsWriter(docWriter.directory, docWriter.getSegmentInfo(), context);\n      lastDocID = 0;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"86a0a50d2d14aaee1e635bbec914468551f7f9a2","date":1482234306,"type":3,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/TermVectorsConsumer#initTermVectorsWriter().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/TermVectorsConsumer#initTermVectorsWriter().mjava","sourceNew":"  void initTermVectorsWriter() throws IOException {\n    if (writer == null) {\n      IOContext context = new IOContext(new FlushInfo(docWriter.getNumDocsInRAM(), docWriter.bytesUsed()));\n      writer = docWriter.codec.termVectorsFormat().vectorsWriter(docWriter.directory, docWriter.getSegmentInfo(), context);\n      lastDocID = 0;\n    }\n  }\n\n","sourceOld":"  private void initTermVectorsWriter() throws IOException {\n    if (writer == null) {\n      IOContext context = new IOContext(new FlushInfo(docWriter.getNumDocsInRAM(), docWriter.bytesUsed()));\n      writer = docWriter.codec.termVectorsFormat().vectorsWriter(docWriter.directory, docWriter.getSegmentInfo(), context);\n      lastDocID = 0;\n    }\n  }\n\n","bugFix":["52c7e49be259508735752fba88085255014a6ecf"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5acd68c5f07f7ee604c2eeffe801f4a2d7a1a5bf","date":1482251961,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/TermVectorsConsumer#initTermVectorsWriter().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/TermVectorsConsumer#initTermVectorsWriter().mjava","sourceNew":"  void initTermVectorsWriter() throws IOException {\n    if (writer == null) {\n      IOContext context = new IOContext(new FlushInfo(docWriter.getNumDocsInRAM(), docWriter.bytesUsed()));\n      writer = docWriter.codec.termVectorsFormat().vectorsWriter(docWriter.directory, docWriter.getSegmentInfo(), context);\n      lastDocID = 0;\n    }\n  }\n\n","sourceOld":"  private void initTermVectorsWriter() throws IOException {\n    if (writer == null) {\n      IOContext context = new IOContext(new FlushInfo(docWriter.getNumDocsInRAM(), docWriter.bytesUsed()));\n      writer = docWriter.codec.termVectorsFormat().vectorsWriter(docWriter.directory, docWriter.getSegmentInfo(), context);\n      lastDocID = 0;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6926606ec5e0dd8d4ec79166d39a3b4ddb862bf4","date":1599581893,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/TermVectorsConsumer#initTermVectorsWriter().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/TermVectorsConsumer#initTermVectorsWriter().mjava","sourceNew":"  void initTermVectorsWriter() throws IOException {\n    if (writer == null) {\n      IOContext context = new IOContext(new FlushInfo(docWriter.getNumDocsInRAM(), docWriter.ramBytesUsed()));\n      writer = docWriter.codec.termVectorsFormat().vectorsWriter(docWriter.directory, docWriter.getSegmentInfo(), context);\n      lastDocID = 0;\n    }\n  }\n\n","sourceOld":"  void initTermVectorsWriter() throws IOException {\n    if (writer == null) {\n      IOContext context = new IOContext(new FlushInfo(docWriter.getNumDocsInRAM(), docWriter.bytesUsed()));\n      writer = docWriter.codec.termVectorsFormat().vectorsWriter(docWriter.directory, docWriter.getSegmentInfo(), context);\n      lastDocID = 0;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"49f1924bd448393fbdfef8b5ebed799f938169d3","date":1600069616,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/TermVectorsConsumer#initTermVectorsWriter().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/TermVectorsConsumer#initTermVectorsWriter().mjava","sourceNew":"  void initTermVectorsWriter() throws IOException {\n    if (writer == null) {\n      IOContext context = new IOContext(new FlushInfo(lastDocID, bytesUsed.get()));\n      writer = codec.termVectorsFormat().vectorsWriter(directory, info, context);\n      lastDocID = 0;\n    }\n  }\n\n","sourceOld":"  void initTermVectorsWriter() throws IOException {\n    if (writer == null) {\n      IOContext context = new IOContext(new FlushInfo(docWriter.getNumDocsInRAM(), docWriter.ramBytesUsed()));\n      writer = docWriter.codec.termVectorsFormat().vectorsWriter(docWriter.directory, docWriter.getSegmentInfo(), context);\n      lastDocID = 0;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0dcf8f79417865e5028d753e669fae06457e8369","date":1600073240,"type":3,"author":"noblepaul","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/TermVectorsConsumer#initTermVectorsWriter().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/TermVectorsConsumer#initTermVectorsWriter().mjava","sourceNew":"  void initTermVectorsWriter() throws IOException {\n    if (writer == null) {\n      IOContext context = new IOContext(new FlushInfo(lastDocID, bytesUsed.get()));\n      writer = codec.termVectorsFormat().vectorsWriter(directory, info, context);\n      lastDocID = 0;\n    }\n  }\n\n","sourceOld":"  void initTermVectorsWriter() throws IOException {\n    if (writer == null) {\n      IOContext context = new IOContext(new FlushInfo(docWriter.getNumDocsInRAM(), docWriter.ramBytesUsed()));\n      writer = docWriter.codec.termVectorsFormat().vectorsWriter(docWriter.directory, docWriter.getSegmentInfo(), context);\n      lastDocID = 0;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5a801a0efdddea4f823c56104babbbc8c52382cf","date":1600074666,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/TermVectorsConsumer#initTermVectorsWriter().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/TermVectorsConsumer#initTermVectorsWriter().mjava","sourceNew":"  void initTermVectorsWriter() throws IOException {\n    if (writer == null) {\n      IOContext context = new IOContext(new FlushInfo(lastDocID, bytesUsed.get()));\n      writer = codec.termVectorsFormat().vectorsWriter(directory, info, context);\n      lastDocID = 0;\n      accountable = writer;\n    }\n  }\n\n","sourceOld":"  void initTermVectorsWriter() throws IOException {\n    if (writer == null) {\n      IOContext context = new IOContext(new FlushInfo(lastDocID, bytesUsed.get()));\n      writer = codec.termVectorsFormat().vectorsWriter(directory, info, context);\n      lastDocID = 0;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"680b6449f09827f58fe987aff279e014c311d966","date":1600247985,"type":3,"author":"noblepaul","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/TermVectorsConsumer#initTermVectorsWriter().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/TermVectorsConsumer#initTermVectorsWriter().mjava","sourceNew":"  void initTermVectorsWriter() throws IOException {\n    if (writer == null) {\n      IOContext context = new IOContext(new FlushInfo(lastDocID, bytesUsed.get()));\n      writer = codec.termVectorsFormat().vectorsWriter(directory, info, context);\n      lastDocID = 0;\n      accountable = writer;\n    }\n  }\n\n","sourceOld":"  void initTermVectorsWriter() throws IOException {\n    if (writer == null) {\n      IOContext context = new IOContext(new FlushInfo(lastDocID, bytesUsed.get()));\n      writer = codec.termVectorsFormat().vectorsWriter(directory, info, context);\n      lastDocID = 0;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"6926606ec5e0dd8d4ec79166d39a3b4ddb862bf4":["86a0a50d2d14aaee1e635bbec914468551f7f9a2"],"8febb56d1ed9f3314d35d075599fd9aff857be3c":["129c6e8ac0c0d9a110ba29e4b5f1889374f30076"],"49f1924bd448393fbdfef8b5ebed799f938169d3":["6926606ec5e0dd8d4ec79166d39a3b4ddb862bf4"],"c0cd85fde84cb318b4dc97710dcf15e2959a1bbe":["615ddbd81799980d0fdd95e0238e1c498b6f47b0","3394716f52b34ab259ad5247e7595d9f9db6e935"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"0dcf8f79417865e5028d753e669fae06457e8369":["6926606ec5e0dd8d4ec79166d39a3b4ddb862bf4","49f1924bd448393fbdfef8b5ebed799f938169d3"],"3394716f52b34ab259ad5247e7595d9f9db6e935":["615ddbd81799980d0fdd95e0238e1c498b6f47b0","52c7e49be259508735752fba88085255014a6ecf"],"680b6449f09827f58fe987aff279e014c311d966":["0dcf8f79417865e5028d753e669fae06457e8369","5a801a0efdddea4f823c56104babbbc8c52382cf"],"615ddbd81799980d0fdd95e0238e1c498b6f47b0":["3a119bbc8703c10faa329ec201c654b3a35a1e3e","8febb56d1ed9f3314d35d075599fd9aff857be3c"],"129c6e8ac0c0d9a110ba29e4b5f1889374f30076":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"5acd68c5f07f7ee604c2eeffe801f4a2d7a1a5bf":["3394716f52b34ab259ad5247e7595d9f9db6e935","86a0a50d2d14aaee1e635bbec914468551f7f9a2"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"86a0a50d2d14aaee1e635bbec914468551f7f9a2":["3394716f52b34ab259ad5247e7595d9f9db6e935"],"52c7e49be259508735752fba88085255014a6ecf":["615ddbd81799980d0fdd95e0238e1c498b6f47b0"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["680b6449f09827f58fe987aff279e014c311d966"],"5a801a0efdddea4f823c56104babbbc8c52382cf":["49f1924bd448393fbdfef8b5ebed799f938169d3"]},"commit2Childs":{"6926606ec5e0dd8d4ec79166d39a3b4ddb862bf4":["49f1924bd448393fbdfef8b5ebed799f938169d3","0dcf8f79417865e5028d753e669fae06457e8369"],"8febb56d1ed9f3314d35d075599fd9aff857be3c":["615ddbd81799980d0fdd95e0238e1c498b6f47b0"],"49f1924bd448393fbdfef8b5ebed799f938169d3":["0dcf8f79417865e5028d753e669fae06457e8369","5a801a0efdddea4f823c56104babbbc8c52382cf"],"c0cd85fde84cb318b4dc97710dcf15e2959a1bbe":[],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["615ddbd81799980d0fdd95e0238e1c498b6f47b0","129c6e8ac0c0d9a110ba29e4b5f1889374f30076"],"0dcf8f79417865e5028d753e669fae06457e8369":["680b6449f09827f58fe987aff279e014c311d966"],"3394716f52b34ab259ad5247e7595d9f9db6e935":["c0cd85fde84cb318b4dc97710dcf15e2959a1bbe","5acd68c5f07f7ee604c2eeffe801f4a2d7a1a5bf","86a0a50d2d14aaee1e635bbec914468551f7f9a2"],"680b6449f09827f58fe987aff279e014c311d966":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"129c6e8ac0c0d9a110ba29e4b5f1889374f30076":["8febb56d1ed9f3314d35d075599fd9aff857be3c"],"615ddbd81799980d0fdd95e0238e1c498b6f47b0":["c0cd85fde84cb318b4dc97710dcf15e2959a1bbe","3394716f52b34ab259ad5247e7595d9f9db6e935","52c7e49be259508735752fba88085255014a6ecf"],"5acd68c5f07f7ee604c2eeffe801f4a2d7a1a5bf":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"86a0a50d2d14aaee1e635bbec914468551f7f9a2":["6926606ec5e0dd8d4ec79166d39a3b4ddb862bf4","5acd68c5f07f7ee604c2eeffe801f4a2d7a1a5bf"],"52c7e49be259508735752fba88085255014a6ecf":["3394716f52b34ab259ad5247e7595d9f9db6e935"],"5a801a0efdddea4f823c56104babbbc8c52382cf":["680b6449f09827f58fe987aff279e014c311d966"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["c0cd85fde84cb318b4dc97710dcf15e2959a1bbe","5acd68c5f07f7ee604c2eeffe801f4a2d7a1a5bf","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}