{"path":"lucene/test-framework/src/java/org/apache/lucene/codecs/mockrandom/MockRandomPostingsFormat#files(SegmentInfo,String,Set[String]).mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/codecs/mockrandom/MockRandomPostingsFormat#files(SegmentInfo,String,Set[String]).mjava","pathOld":"lucene/src/test-framework/java/org/apache/lucene/codecs/mockrandom/MockRandomPostingsFormat#files(SegmentInfo,String,Set[String]).mjava","sourceNew":"  @Override\n  public void files(SegmentInfo segmentInfo, String segmentSuffix, Set<String> files) throws IOException {\n    final String seedFileName = IndexFileNames.segmentFileName(segmentInfo.name, segmentSuffix, SEED_EXT);    \n    files.add(seedFileName);\n    SepPostingsReader.files(segmentInfo, segmentSuffix, files);\n    Lucene40PostingsReader.files(segmentInfo, segmentSuffix, files);\n    BlockTermsReader.files(segmentInfo, segmentSuffix, files);\n    BlockTreeTermsReader.files(segmentInfo, segmentSuffix, files);\n    FixedGapTermsIndexReader.files(segmentInfo, segmentSuffix, files);\n    VariableGapTermsIndexReader.files(segmentInfo, segmentSuffix, files);\n    // hackish!\n    Iterator<String> it = files.iterator();\n    while(it.hasNext()) {\n      final String file = it.next();\n      if (!segmentInfo.dir.fileExists(file)) {\n        it.remove();\n      }\n    }\n    //System.out.println(\"MockRandom.files return \" + files);\n  }\n\n","sourceOld":"  @Override\n  public void files(SegmentInfo segmentInfo, String segmentSuffix, Set<String> files) throws IOException {\n    final String seedFileName = IndexFileNames.segmentFileName(segmentInfo.name, segmentSuffix, SEED_EXT);    \n    files.add(seedFileName);\n    SepPostingsReader.files(segmentInfo, segmentSuffix, files);\n    Lucene40PostingsReader.files(segmentInfo, segmentSuffix, files);\n    BlockTermsReader.files(segmentInfo, segmentSuffix, files);\n    BlockTreeTermsReader.files(segmentInfo, segmentSuffix, files);\n    FixedGapTermsIndexReader.files(segmentInfo, segmentSuffix, files);\n    VariableGapTermsIndexReader.files(segmentInfo, segmentSuffix, files);\n    // hackish!\n    Iterator<String> it = files.iterator();\n    while(it.hasNext()) {\n      final String file = it.next();\n      if (!segmentInfo.dir.fileExists(file)) {\n        it.remove();\n      }\n    }\n    //System.out.println(\"MockRandom.files return \" + files);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1494abe5dc85557ec2e2772f87660d48f831c3a5","date":1337614370,"type":4,"author":"Michael McCandless","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/test-framework/src/java/org/apache/lucene/codecs/mockrandom/MockRandomPostingsFormat#files(SegmentInfo,String,Set[String]).mjava","sourceNew":null,"sourceOld":"  @Override\n  public void files(SegmentInfo segmentInfo, String segmentSuffix, Set<String> files) throws IOException {\n    final String seedFileName = IndexFileNames.segmentFileName(segmentInfo.name, segmentSuffix, SEED_EXT);    \n    files.add(seedFileName);\n    SepPostingsReader.files(segmentInfo, segmentSuffix, files);\n    Lucene40PostingsReader.files(segmentInfo, segmentSuffix, files);\n    BlockTermsReader.files(segmentInfo, segmentSuffix, files);\n    BlockTreeTermsReader.files(segmentInfo, segmentSuffix, files);\n    FixedGapTermsIndexReader.files(segmentInfo, segmentSuffix, files);\n    VariableGapTermsIndexReader.files(segmentInfo, segmentSuffix, files);\n    // hackish!\n    Iterator<String> it = files.iterator();\n    while(it.hasNext()) {\n      final String file = it.next();\n      if (!segmentInfo.dir.fileExists(file)) {\n        it.remove();\n      }\n    }\n    //System.out.println(\"MockRandom.files return \" + files);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"615ddbd81799980d0fdd95e0238e1c498b6f47b0","date":1338233290,"type":4,"author":"Robert Muir","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/test-framework/src/java/org/apache/lucene/codecs/mockrandom/MockRandomPostingsFormat#files(SegmentInfo,String,Set[String]).mjava","sourceNew":null,"sourceOld":"  @Override\n  public void files(SegmentInfo segmentInfo, String segmentSuffix, Set<String> files) throws IOException {\n    final String seedFileName = IndexFileNames.segmentFileName(segmentInfo.name, segmentSuffix, SEED_EXT);    \n    files.add(seedFileName);\n    SepPostingsReader.files(segmentInfo, segmentSuffix, files);\n    Lucene40PostingsReader.files(segmentInfo, segmentSuffix, files);\n    BlockTermsReader.files(segmentInfo, segmentSuffix, files);\n    BlockTreeTermsReader.files(segmentInfo, segmentSuffix, files);\n    FixedGapTermsIndexReader.files(segmentInfo, segmentSuffix, files);\n    VariableGapTermsIndexReader.files(segmentInfo, segmentSuffix, files);\n    // hackish!\n    Iterator<String> it = files.iterator();\n    while(it.hasNext()) {\n      final String file = it.next();\n      if (!segmentInfo.dir.fileExists(file)) {\n        it.remove();\n      }\n    }\n    //System.out.println(\"MockRandom.files return \" + files);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"615ddbd81799980d0fdd95e0238e1c498b6f47b0":["3a119bbc8703c10faa329ec201c654b3a35a1e3e","1494abe5dc85557ec2e2772f87660d48f831c3a5"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["615ddbd81799980d0fdd95e0238e1c498b6f47b0"],"1494abe5dc85557ec2e2772f87660d48f831c3a5":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"]},"commit2Childs":{"615ddbd81799980d0fdd95e0238e1c498b6f47b0":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["615ddbd81799980d0fdd95e0238e1c498b6f47b0","1494abe5dc85557ec2e2772f87660d48f831c3a5"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"1494abe5dc85557ec2e2772f87660d48f831c3a5":["615ddbd81799980d0fdd95e0238e1c498b6f47b0"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}