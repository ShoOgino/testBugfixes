{"path":"solr/core/src/test/org/apache/solr/core/TestNonNRTOpen#beforeClass().mjava","commits":[{"id":"c9f81a0a8d08cc36757b7be45a8c8dcd66ff0360","date":1378833548,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/core/TestNonNRTOpen#beforeClass().mjava","pathOld":"/dev/null","sourceNew":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n    // use a filesystem, because we need to create an index, then \"start up solr\"\n    System.setProperty(\"solr.directoryFactory\", \"solr.StandardDirectoryFactory\");\n    // and dont delete it initially\n    System.setProperty(\"solr.test.leavedatadir\", \"true\");\n    // turn off nrt\n    System.setProperty(\"solr.tests.nrtMode\", \"false\");\n    // set these so that merges won't break the test\n    System.setProperty(\"solr.tests.maxBufferedDocs\", \"100000\");\n    System.setProperty(\"solr.tests.mergePolicy\", \"org.apache.lucene.index.LogDocMergePolicy\");\n    initCore(\"solrconfig-basic.xml\", \"schema-minimal.xml\");\n    // add a doc\n    assertU(adoc(\"foo\", \"bar\"));\n    assertU(commit());\n    File myDir = dataDir;\n    deleteCore();\n    // boot up again over the same index\n    dataDir = myDir;\n    initCore(\"solrconfig-basic.xml\", \"schema-minimal.xml\");\n    // startup\n    assertNotNRT(1);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bb1f22cfa77230b5f05b7784feae5367f6bbb488","date":1395968145,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/core/TestNonNRTOpen#beforeClass().mjava","pathOld":"solr/core/src/test/org/apache/solr/core/TestNonNRTOpen#beforeClass().mjava","sourceNew":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n    // use a filesystem, because we need to create an index, then \"start up solr\"\n    System.setProperty(\"solr.directoryFactory\", \"solr.StandardDirectoryFactory\");\n    // and dont delete it initially\n    System.setProperty(\"solr.test.leavedatadir\", \"true\");\n    // turn off nrt\n    System.setProperty(\"solr.tests.nrtMode\", \"false\");\n    // set these so that merges won't break the test\n    System.setProperty(\"solr.tests.maxBufferedDocs\", \"100000\");\n    System.setProperty(\"solr.tests.mergePolicy\", \"org.apache.lucene.index.LogDocMergePolicy\");\n    initCore(\"solrconfig-basic.xml\", \"schema-minimal.xml\");\n    // add a doc\n    assertU(adoc(\"foo\", \"bar\"));\n    assertU(commit());\n    File myDir = initCoreDataDir;\n    deleteCore();\n    // boot up again over the same index\n    initCoreDataDir = myDir;\n    initCore(\"solrconfig-basic.xml\", \"schema-minimal.xml\");\n    // startup\n    assertNotNRT(1);\n  }\n\n","sourceOld":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n    // use a filesystem, because we need to create an index, then \"start up solr\"\n    System.setProperty(\"solr.directoryFactory\", \"solr.StandardDirectoryFactory\");\n    // and dont delete it initially\n    System.setProperty(\"solr.test.leavedatadir\", \"true\");\n    // turn off nrt\n    System.setProperty(\"solr.tests.nrtMode\", \"false\");\n    // set these so that merges won't break the test\n    System.setProperty(\"solr.tests.maxBufferedDocs\", \"100000\");\n    System.setProperty(\"solr.tests.mergePolicy\", \"org.apache.lucene.index.LogDocMergePolicy\");\n    initCore(\"solrconfig-basic.xml\", \"schema-minimal.xml\");\n    // add a doc\n    assertU(adoc(\"foo\", \"bar\"));\n    assertU(commit());\n    File myDir = dataDir;\n    deleteCore();\n    // boot up again over the same index\n    dataDir = myDir;\n    initCore(\"solrconfig-basic.xml\", \"schema-minimal.xml\");\n    // startup\n    assertNotNRT(1);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2a0f5bb79c600763ffe7b8141df59a3169d31e48","date":1396689440,"type":3,"author":"Dawid Weiss","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/core/TestNonNRTOpen#beforeClass().mjava","pathOld":"solr/core/src/test/org/apache/solr/core/TestNonNRTOpen#beforeClass().mjava","sourceNew":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n    // use a filesystem, because we need to create an index, then \"start up solr\"\n    System.setProperty(\"solr.directoryFactory\", \"solr.StandardDirectoryFactory\");\n    // and dont delete it initially\n    System.setProperty(\"solr.test.leavedatadir\", \"true\");\n    // turn off nrt\n    System.setProperty(\"solr.tests.nrtMode\", \"false\");\n    // set these so that merges won't break the test\n    System.setProperty(\"solr.tests.maxBufferedDocs\", \"100000\");\n    System.setProperty(\"solr.tests.mergePolicy\", \"org.apache.lucene.index.LogDocMergePolicy\");\n    initCore(\"solrconfig-basic.xml\", \"schema-minimal.xml\");\n    // add a doc\n    assertU(adoc(\"foo\", \"bar\"));\n    assertU(commit());\n    File myDir = initCoreDataDir;\n    deleteCore();\n    // boot up again over the same index\n    initCoreDataDir = myDir;\n    initCore(\"solrconfig-basic.xml\", \"schema-minimal.xml\");\n    // startup\n    assertNotNRT(1);\n  }\n\n","sourceOld":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n    // use a filesystem, because we need to create an index, then \"start up solr\"\n    System.setProperty(\"solr.directoryFactory\", \"solr.StandardDirectoryFactory\");\n    // and dont delete it initially\n    System.setProperty(\"solr.test.leavedatadir\", \"true\");\n    // turn off nrt\n    System.setProperty(\"solr.tests.nrtMode\", \"false\");\n    // set these so that merges won't break the test\n    System.setProperty(\"solr.tests.maxBufferedDocs\", \"100000\");\n    System.setProperty(\"solr.tests.mergePolicy\", \"org.apache.lucene.index.LogDocMergePolicy\");\n    initCore(\"solrconfig-basic.xml\", \"schema-minimal.xml\");\n    // add a doc\n    assertU(adoc(\"foo\", \"bar\"));\n    assertU(commit());\n    File myDir = dataDir;\n    deleteCore();\n    // boot up again over the same index\n    dataDir = myDir;\n    initCore(\"solrconfig-basic.xml\", \"schema-minimal.xml\");\n    // startup\n    assertNotNRT(1);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ac2f1cdbdc54a889e88543cc1d939a931cb96883","date":1420554488,"type":4,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/core/src/test/org/apache/solr/core/TestNonNRTOpen#beforeClass().mjava","sourceNew":null,"sourceOld":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n    // use a filesystem, because we need to create an index, then \"start up solr\"\n    System.setProperty(\"solr.directoryFactory\", \"solr.StandardDirectoryFactory\");\n    // and dont delete it initially\n    System.setProperty(\"solr.test.leavedatadir\", \"true\");\n    // turn off nrt\n    System.setProperty(\"solr.tests.nrtMode\", \"false\");\n    // set these so that merges won't break the test\n    System.setProperty(\"solr.tests.maxBufferedDocs\", \"100000\");\n    System.setProperty(\"solr.tests.mergePolicy\", \"org.apache.lucene.index.LogDocMergePolicy\");\n    initCore(\"solrconfig-basic.xml\", \"schema-minimal.xml\");\n    // add a doc\n    assertU(adoc(\"foo\", \"bar\"));\n    assertU(commit());\n    File myDir = initCoreDataDir;\n    deleteCore();\n    // boot up again over the same index\n    initCoreDataDir = myDir;\n    initCore(\"solrconfig-basic.xml\", \"schema-minimal.xml\");\n    // startup\n    assertNotNRT(1);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"bb1f22cfa77230b5f05b7784feae5367f6bbb488":["c9f81a0a8d08cc36757b7be45a8c8dcd66ff0360"],"2a0f5bb79c600763ffe7b8141df59a3169d31e48":["c9f81a0a8d08cc36757b7be45a8c8dcd66ff0360","bb1f22cfa77230b5f05b7784feae5367f6bbb488"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"c9f81a0a8d08cc36757b7be45a8c8dcd66ff0360":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"ac2f1cdbdc54a889e88543cc1d939a931cb96883":["2a0f5bb79c600763ffe7b8141df59a3169d31e48"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["ac2f1cdbdc54a889e88543cc1d939a931cb96883"]},"commit2Childs":{"bb1f22cfa77230b5f05b7784feae5367f6bbb488":["2a0f5bb79c600763ffe7b8141df59a3169d31e48"],"2a0f5bb79c600763ffe7b8141df59a3169d31e48":["ac2f1cdbdc54a889e88543cc1d939a931cb96883"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c9f81a0a8d08cc36757b7be45a8c8dcd66ff0360"],"c9f81a0a8d08cc36757b7be45a8c8dcd66ff0360":["bb1f22cfa77230b5f05b7784feae5367f6bbb488","2a0f5bb79c600763ffe7b8141df59a3169d31e48"],"ac2f1cdbdc54a889e88543cc1d939a931cb96883":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}