{"path":"lucene/core/src/java/org/apache/lucene/util/ArrayUtil#grow(float[]).mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/ArrayUtil#grow(float[]).mjava","pathOld":"lucene/src/java/org/apache/lucene/util/ArrayUtil#grow(float[]).mjava","sourceNew":"  public static float[] grow(float[] array) {\n    return grow(array, 1 + array.length);\n  }\n\n","sourceOld":"  public static float[] grow(float[] array) {\n    return grow(array, 1 + array.length);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9798d0818e7a880546802b509792d3f3d57babd2","date":1528358901,"type":3,"author":"Nhat Nguyen","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/ArrayUtil#grow(float[]).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/ArrayUtil#grow(float[]).mjava","sourceNew":"  /** Returns a larger array, generally over-allocating exponentially */\n  public static float[] grow(float[] array) {\n    return grow(array, 1 + array.length);\n  }\n\n","sourceOld":"  public static float[] grow(float[] array) {\n    return grow(array, 1 + array.length);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b70042a8a492f7054d480ccdd2be9796510d4327","date":1528386658,"type":3,"author":"Alessandro Benedetti","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/util/ArrayUtil#grow(float[]).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/ArrayUtil#grow(float[]).mjava","sourceNew":"  /** Returns a larger array, generally over-allocating exponentially */\n  public static float[] grow(float[] array) {\n    return grow(array, 1 + array.length);\n  }\n\n","sourceOld":"  public static float[] grow(float[] array) {\n    return grow(array, 1 + array.length);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7eeaaea0106c7d6a2de50acfc8d357121ef8bd26","date":1531589977,"type":3,"author":"Michael Braun","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/util/ArrayUtil#grow(float[]).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/ArrayUtil#grow(float[]).mjava","sourceNew":"  /** Returns a larger array, generally over-allocating exponentially */\n  public static float[] grow(float[] array) {\n    return grow(array, 1 + array.length);\n  }\n\n","sourceOld":"  public static float[] grow(float[] array) {\n    return grow(array, 1 + array.length);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"b70042a8a492f7054d480ccdd2be9796510d4327":["3a119bbc8703c10faa329ec201c654b3a35a1e3e","9798d0818e7a880546802b509792d3f3d57babd2"],"9798d0818e7a880546802b509792d3f3d57babd2":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9798d0818e7a880546802b509792d3f3d57babd2"],"7eeaaea0106c7d6a2de50acfc8d357121ef8bd26":["3a119bbc8703c10faa329ec201c654b3a35a1e3e","9798d0818e7a880546802b509792d3f3d57babd2"]},"commit2Childs":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["b70042a8a492f7054d480ccdd2be9796510d4327","9798d0818e7a880546802b509792d3f3d57babd2","7eeaaea0106c7d6a2de50acfc8d357121ef8bd26"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"b70042a8a492f7054d480ccdd2be9796510d4327":[],"9798d0818e7a880546802b509792d3f3d57babd2":["b70042a8a492f7054d480ccdd2be9796510d4327","cd5edd1f2b162a5cfa08efd17851a07373a96817","7eeaaea0106c7d6a2de50acfc8d357121ef8bd26"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"7eeaaea0106c7d6a2de50acfc8d357121ef8bd26":[]},"heads":["b70042a8a492f7054d480ccdd2be9796510d4327","cd5edd1f2b162a5cfa08efd17851a07373a96817","7eeaaea0106c7d6a2de50acfc8d357121ef8bd26"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}