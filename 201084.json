{"path":"lucene/src/java/org/apache/lucene/search/DefaultSimilarity#setDiscountOverlaps(boolean).mjava","commits":[{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/search/DefaultSimilarity#setDiscountOverlaps(boolean).mjava","pathOld":"src/java/org/apache/lucene/search/DefaultSimilarity#setDiscountOverlaps(boolean).mjava","sourceNew":"  /** Determines whether overlap tokens (Tokens with\n   *  0 position increment) are ignored when computing\n   *  norm.  By default this is true, meaning overlap\n   *  tokens do not count when computing norms.\n   *\n   *  @lucene.experimental\n   *\n   *  @see #computeNorm\n   */\n  public void setDiscountOverlaps(boolean v) {\n    discountOverlaps = v;\n  }\n\n","sourceOld":"  /** Determines whether overlap tokens (Tokens with\n   *  0 position increment) are ignored when computing\n   *  norm.  By default this is true, meaning overlap\n   *  tokens do not count when computing norms.\n   *\n   *  @lucene.experimental\n   *\n   *  @see #computeNorm\n   */\n  public void setDiscountOverlaps(boolean v) {\n    discountOverlaps = v;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"60e3b31201fd9bb5d73884faa5a38c63ea9239f2","date":1315756041,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/search/similarities/DefaultSimilarity#setDiscountOverlaps(boolean).mjava","pathOld":"lucene/src/java/org/apache/lucene/search/DefaultSimilarity#setDiscountOverlaps(boolean).mjava","sourceNew":"  /** Determines whether overlap tokens (Tokens with\n   *  0 position increment) are ignored when computing\n   *  norm.  By default this is true, meaning overlap\n   *  tokens do not count when computing norms.\n   *\n   *  @lucene.experimental\n   *\n   *  @see #computeNorm\n   */\n  public void setDiscountOverlaps(boolean v) {\n    discountOverlaps = v;\n  }\n\n","sourceOld":"  /** Determines whether overlap tokens (Tokens with\n   *  0 position increment) are ignored when computing\n   *  norm.  By default this is true, meaning overlap\n   *  tokens do not count when computing norms.\n   *\n   *  @lucene.experimental\n   *\n   *  @see #computeNorm\n   */\n  public void setDiscountOverlaps(boolean v) {\n    discountOverlaps = v;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"60e3b31201fd9bb5d73884faa5a38c63ea9239f2","date":1315756041,"type":6,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/search/similarities/SimilarityBase#setDiscountOverlaps(boolean).mjava","pathOld":"lucene/src/java/org/apache/lucene/search/DefaultSimilarity#setDiscountOverlaps(boolean).mjava","sourceNew":"  /** Determines whether overlap tokens (Tokens with\n   *  0 position increment) are ignored when computing\n   *  norm.  By default this is true, meaning overlap\n   *  tokens do not count when computing norms.\n   *\n   *  @lucene.experimental\n   *\n   *  @see #computeNorm\n   */\n  public void setDiscountOverlaps(boolean v) {\n    discountOverlaps = v;\n  }\n\n","sourceOld":"  /** Determines whether overlap tokens (Tokens with\n   *  0 position increment) are ignored when computing\n   *  norm.  By default this is true, meaning overlap\n   *  tokens do not count when computing norms.\n   *\n   *  @lucene.experimental\n   *\n   *  @see #computeNorm\n   */\n  public void setDiscountOverlaps(boolean v) {\n    discountOverlaps = v;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"60e3b31201fd9bb5d73884faa5a38c63ea9239f2":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["60e3b31201fd9bb5d73884faa5a38c63ea9239f2"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"60e3b31201fd9bb5d73884faa5a38c63ea9239f2":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["60e3b31201fd9bb5d73884faa5a38c63ea9239f2"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}