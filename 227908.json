{"path":"lucene/core/src/java/org/apache/lucene/analysis/GraphTokenFilter#incrementGraph().mjava","commits":[{"id":"7836a9b132efc1162fb9d817b3e766f0a82212be","date":1543916862,"type":0,"author":"Alan Woodward","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/analysis/GraphTokenFilter#incrementGraph().mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Reset to the root token again, and move down the next route through the graph\n   *\n   * @return false if there are no more routes through the graph\n   */\n  protected final boolean incrementGraph() throws IOException {\n    if (baseToken == null) {\n      return false;\n    }\n    graphPos = 0;\n    for (int i = graphDepth; i >= 1; i--) {\n      if (lastInStack(currentGraph.get(i)) == false) {\n        currentGraph.set(i, nextTokenInStream(currentGraph.get(i)));\n        for (int j = i + 1; j < graphDepth; j++) {\n          currentGraph.set(j, nextTokenInGraph(currentGraph.get(j)));\n        }\n        if (stackSize++ > MAX_GRAPH_STACK_SIZE) {\n          throw new IllegalStateException(\"Too many graph paths (> \" + MAX_GRAPH_STACK_SIZE + \")\");\n        }\n        currentGraph.get(0).attSource.copyTo(this);\n        graphDepth = i;\n        return true;\n      }\n    }\n    return false;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"7836a9b132efc1162fb9d817b3e766f0a82212be":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["7836a9b132efc1162fb9d817b3e766f0a82212be"]},"commit2Childs":{"7836a9b132efc1162fb9d817b3e766f0a82212be":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["7836a9b132efc1162fb9d817b3e766f0a82212be"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}