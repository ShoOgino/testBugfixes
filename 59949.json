{"path":"lucene/core/src/java/org/apache/lucene/codecs/compressing/CompressingStoredFieldsWriter#finishDocument().mjava","commits":[{"id":"fc7a7bb1aa79cf53564793bb5ffa270250c679da","date":1357817084,"type":0,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/compressing/CompressingStoredFieldsWriter#finishDocument().mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public void finishDocument() throws IOException {\n    endOffsets[numBufferedDocs - 1] = bufferedDocs.length;\n    if (triggerFlush()) {\n      flush();\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4e6354dd7c71fe122926fc53d7d29f715b1283db","date":1357915185,"type":0,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/compressing/CompressingStoredFieldsWriter#finishDocument().mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public void finishDocument() throws IOException {\n    endOffsets[numBufferedDocs - 1] = bufferedDocs.length;\n    if (triggerFlush()) {\n      flush();\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"52c7e49be259508735752fba88085255014a6ecf","date":1398706273,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/compressing/CompressingStoredFieldsWriter#finishDocument().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/compressing/CompressingStoredFieldsWriter#finishDocument().mjava","sourceNew":"  @Override\n  public void finishDocument() throws IOException {\n    if (numBufferedDocs == this.numStoredFields.length) {\n      final int newLength = ArrayUtil.oversize(numBufferedDocs + 1, 4);\n      this.numStoredFields = Arrays.copyOf(this.numStoredFields, newLength);\n      endOffsets = Arrays.copyOf(endOffsets, newLength);\n    }\n    this.numStoredFields[numBufferedDocs] = numStoredFieldsInDoc;\n    numStoredFieldsInDoc = 0;\n    endOffsets[numBufferedDocs] = bufferedDocs.length;\n    ++numBufferedDocs;\n    if (triggerFlush()) {\n      flush();\n    }\n  }\n\n","sourceOld":"  @Override\n  public void finishDocument() throws IOException {\n    endOffsets[numBufferedDocs - 1] = bufferedDocs.length;\n    if (triggerFlush()) {\n      flush();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3394716f52b34ab259ad5247e7595d9f9db6e935","date":1398791921,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/compressing/CompressingStoredFieldsWriter#finishDocument().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/compressing/CompressingStoredFieldsWriter#finishDocument().mjava","sourceNew":"  @Override\n  public void finishDocument() throws IOException {\n    if (numBufferedDocs == this.numStoredFields.length) {\n      final int newLength = ArrayUtil.oversize(numBufferedDocs + 1, 4);\n      this.numStoredFields = Arrays.copyOf(this.numStoredFields, newLength);\n      endOffsets = Arrays.copyOf(endOffsets, newLength);\n    }\n    this.numStoredFields[numBufferedDocs] = numStoredFieldsInDoc;\n    numStoredFieldsInDoc = 0;\n    endOffsets[numBufferedDocs] = bufferedDocs.length;\n    ++numBufferedDocs;\n    if (triggerFlush()) {\n      flush();\n    }\n  }\n\n","sourceOld":"  @Override\n  public void finishDocument() throws IOException {\n    endOffsets[numBufferedDocs - 1] = bufferedDocs.length;\n    if (triggerFlush()) {\n      flush();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c0cd85fde84cb318b4dc97710dcf15e2959a1bbe","date":1398844771,"type":3,"author":"Dawid Weiss","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/compressing/CompressingStoredFieldsWriter#finishDocument().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/compressing/CompressingStoredFieldsWriter#finishDocument().mjava","sourceNew":"  @Override\n  public void finishDocument() throws IOException {\n    if (numBufferedDocs == this.numStoredFields.length) {\n      final int newLength = ArrayUtil.oversize(numBufferedDocs + 1, 4);\n      this.numStoredFields = Arrays.copyOf(this.numStoredFields, newLength);\n      endOffsets = Arrays.copyOf(endOffsets, newLength);\n    }\n    this.numStoredFields[numBufferedDocs] = numStoredFieldsInDoc;\n    numStoredFieldsInDoc = 0;\n    endOffsets[numBufferedDocs] = bufferedDocs.length;\n    ++numBufferedDocs;\n    if (triggerFlush()) {\n      flush();\n    }\n  }\n\n","sourceOld":"  @Override\n  public void finishDocument() throws IOException {\n    endOffsets[numBufferedDocs - 1] = bufferedDocs.length;\n    if (triggerFlush()) {\n      flush();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c4ad863d796f4e72a3a1ef4bacd2e19c3e9258c9","date":1481155163,"type":3,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/compressing/CompressingStoredFieldsWriter#finishDocument().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/compressing/CompressingStoredFieldsWriter#finishDocument().mjava","sourceNew":"  @Override\n  public void finishDocument() throws IOException {\n    if (numBufferedDocs == this.numStoredFields.length) {\n      final int newLength = ArrayUtil.oversize(numBufferedDocs + 1, 4);\n      this.numStoredFields = Arrays.copyOf(this.numStoredFields, newLength);\n      endOffsets = Arrays.copyOf(endOffsets, newLength);\n    }\n    this.numStoredFields[numBufferedDocs] = numStoredFieldsInDoc;\n    numStoredFieldsInDoc = 0;\n    endOffsets[numBufferedDocs] = bufferedDocs.getPosition();\n    ++numBufferedDocs;\n    if (triggerFlush()) {\n      flush();\n    }\n  }\n\n","sourceOld":"  @Override\n  public void finishDocument() throws IOException {\n    if (numBufferedDocs == this.numStoredFields.length) {\n      final int newLength = ArrayUtil.oversize(numBufferedDocs + 1, 4);\n      this.numStoredFields = Arrays.copyOf(this.numStoredFields, newLength);\n      endOffsets = Arrays.copyOf(endOffsets, newLength);\n    }\n    this.numStoredFields[numBufferedDocs] = numStoredFieldsInDoc;\n    numStoredFieldsInDoc = 0;\n    endOffsets[numBufferedDocs] = bufferedDocs.length;\n    ++numBufferedDocs;\n    if (triggerFlush()) {\n      flush();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9856095f7afb5a607bf5e65077615ed91273508c","date":1481837697,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/compressing/CompressingStoredFieldsWriter#finishDocument().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/compressing/CompressingStoredFieldsWriter#finishDocument().mjava","sourceNew":"  @Override\n  public void finishDocument() throws IOException {\n    if (numBufferedDocs == this.numStoredFields.length) {\n      final int newLength = ArrayUtil.oversize(numBufferedDocs + 1, 4);\n      this.numStoredFields = Arrays.copyOf(this.numStoredFields, newLength);\n      endOffsets = Arrays.copyOf(endOffsets, newLength);\n    }\n    this.numStoredFields[numBufferedDocs] = numStoredFieldsInDoc;\n    numStoredFieldsInDoc = 0;\n    endOffsets[numBufferedDocs] = bufferedDocs.getPosition();\n    ++numBufferedDocs;\n    if (triggerFlush()) {\n      flush();\n    }\n  }\n\n","sourceOld":"  @Override\n  public void finishDocument() throws IOException {\n    if (numBufferedDocs == this.numStoredFields.length) {\n      final int newLength = ArrayUtil.oversize(numBufferedDocs + 1, 4);\n      this.numStoredFields = Arrays.copyOf(this.numStoredFields, newLength);\n      endOffsets = Arrays.copyOf(endOffsets, newLength);\n    }\n    this.numStoredFields[numBufferedDocs] = numStoredFieldsInDoc;\n    numStoredFieldsInDoc = 0;\n    endOffsets[numBufferedDocs] = bufferedDocs.length;\n    ++numBufferedDocs;\n    if (triggerFlush()) {\n      flush();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9798d0818e7a880546802b509792d3f3d57babd2","date":1528358901,"type":3,"author":"Nhat Nguyen","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/compressing/CompressingStoredFieldsWriter#finishDocument().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/compressing/CompressingStoredFieldsWriter#finishDocument().mjava","sourceNew":"  @Override\n  public void finishDocument() throws IOException {\n    if (numBufferedDocs == this.numStoredFields.length) {\n      final int newLength = ArrayUtil.oversize(numBufferedDocs + 1, 4);\n      this.numStoredFields = ArrayUtil.growExact(this.numStoredFields, newLength);\n      endOffsets = ArrayUtil.growExact(endOffsets, newLength);\n    }\n    this.numStoredFields[numBufferedDocs] = numStoredFieldsInDoc;\n    numStoredFieldsInDoc = 0;\n    endOffsets[numBufferedDocs] = bufferedDocs.getPosition();\n    ++numBufferedDocs;\n    if (triggerFlush()) {\n      flush();\n    }\n  }\n\n","sourceOld":"  @Override\n  public void finishDocument() throws IOException {\n    if (numBufferedDocs == this.numStoredFields.length) {\n      final int newLength = ArrayUtil.oversize(numBufferedDocs + 1, 4);\n      this.numStoredFields = Arrays.copyOf(this.numStoredFields, newLength);\n      endOffsets = Arrays.copyOf(endOffsets, newLength);\n    }\n    this.numStoredFields[numBufferedDocs] = numStoredFieldsInDoc;\n    numStoredFieldsInDoc = 0;\n    endOffsets[numBufferedDocs] = bufferedDocs.getPosition();\n    ++numBufferedDocs;\n    if (triggerFlush()) {\n      flush();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b70042a8a492f7054d480ccdd2be9796510d4327","date":1528386658,"type":3,"author":"Alessandro Benedetti","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/compressing/CompressingStoredFieldsWriter#finishDocument().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/compressing/CompressingStoredFieldsWriter#finishDocument().mjava","sourceNew":"  @Override\n  public void finishDocument() throws IOException {\n    if (numBufferedDocs == this.numStoredFields.length) {\n      final int newLength = ArrayUtil.oversize(numBufferedDocs + 1, 4);\n      this.numStoredFields = ArrayUtil.growExact(this.numStoredFields, newLength);\n      endOffsets = ArrayUtil.growExact(endOffsets, newLength);\n    }\n    this.numStoredFields[numBufferedDocs] = numStoredFieldsInDoc;\n    numStoredFieldsInDoc = 0;\n    endOffsets[numBufferedDocs] = bufferedDocs.getPosition();\n    ++numBufferedDocs;\n    if (triggerFlush()) {\n      flush();\n    }\n  }\n\n","sourceOld":"  @Override\n  public void finishDocument() throws IOException {\n    if (numBufferedDocs == this.numStoredFields.length) {\n      final int newLength = ArrayUtil.oversize(numBufferedDocs + 1, 4);\n      this.numStoredFields = Arrays.copyOf(this.numStoredFields, newLength);\n      endOffsets = Arrays.copyOf(endOffsets, newLength);\n    }\n    this.numStoredFields[numBufferedDocs] = numStoredFieldsInDoc;\n    numStoredFieldsInDoc = 0;\n    endOffsets[numBufferedDocs] = bufferedDocs.getPosition();\n    ++numBufferedDocs;\n    if (triggerFlush()) {\n      flush();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7eeaaea0106c7d6a2de50acfc8d357121ef8bd26","date":1531589977,"type":3,"author":"Michael Braun","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/compressing/CompressingStoredFieldsWriter#finishDocument().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/compressing/CompressingStoredFieldsWriter#finishDocument().mjava","sourceNew":"  @Override\n  public void finishDocument() throws IOException {\n    if (numBufferedDocs == this.numStoredFields.length) {\n      final int newLength = ArrayUtil.oversize(numBufferedDocs + 1, 4);\n      this.numStoredFields = ArrayUtil.growExact(this.numStoredFields, newLength);\n      endOffsets = ArrayUtil.growExact(endOffsets, newLength);\n    }\n    this.numStoredFields[numBufferedDocs] = numStoredFieldsInDoc;\n    numStoredFieldsInDoc = 0;\n    endOffsets[numBufferedDocs] = bufferedDocs.getPosition();\n    ++numBufferedDocs;\n    if (triggerFlush()) {\n      flush();\n    }\n  }\n\n","sourceOld":"  @Override\n  public void finishDocument() throws IOException {\n    if (numBufferedDocs == this.numStoredFields.length) {\n      final int newLength = ArrayUtil.oversize(numBufferedDocs + 1, 4);\n      this.numStoredFields = Arrays.copyOf(this.numStoredFields, newLength);\n      endOffsets = Arrays.copyOf(endOffsets, newLength);\n    }\n    this.numStoredFields[numBufferedDocs] = numStoredFieldsInDoc;\n    numStoredFieldsInDoc = 0;\n    endOffsets[numBufferedDocs] = bufferedDocs.getPosition();\n    ++numBufferedDocs;\n    if (triggerFlush()) {\n      flush();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"409da428f28953cf35fddd5c9ff5c7e4f5439863","date":1547556145,"type":3,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/compressing/CompressingStoredFieldsWriter#finishDocument().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/compressing/CompressingStoredFieldsWriter#finishDocument().mjava","sourceNew":"  @Override\n  public void finishDocument() throws IOException {\n    if (numBufferedDocs == this.numStoredFields.length) {\n      final int newLength = ArrayUtil.oversize(numBufferedDocs + 1, 4);\n      this.numStoredFields = ArrayUtil.growExact(this.numStoredFields, newLength);\n      endOffsets = ArrayUtil.growExact(endOffsets, newLength);\n    }\n    this.numStoredFields[numBufferedDocs] = numStoredFieldsInDoc;\n    numStoredFieldsInDoc = 0;\n    endOffsets[numBufferedDocs] = Math.toIntExact(bufferedDocs.size());\n    ++numBufferedDocs;\n    if (triggerFlush()) {\n      flush();\n    }\n  }\n\n","sourceOld":"  @Override\n  public void finishDocument() throws IOException {\n    if (numBufferedDocs == this.numStoredFields.length) {\n      final int newLength = ArrayUtil.oversize(numBufferedDocs + 1, 4);\n      this.numStoredFields = ArrayUtil.growExact(this.numStoredFields, newLength);\n      endOffsets = ArrayUtil.growExact(endOffsets, newLength);\n    }\n    this.numStoredFields[numBufferedDocs] = numStoredFieldsInDoc;\n    numStoredFieldsInDoc = 0;\n    endOffsets[numBufferedDocs] = bufferedDocs.getPosition();\n    ++numBufferedDocs;\n    if (triggerFlush()) {\n      flush();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"c0cd85fde84cb318b4dc97710dcf15e2959a1bbe":["fc7a7bb1aa79cf53564793bb5ffa270250c679da","3394716f52b34ab259ad5247e7595d9f9db6e935"],"c4ad863d796f4e72a3a1ef4bacd2e19c3e9258c9":["3394716f52b34ab259ad5247e7595d9f9db6e935"],"3394716f52b34ab259ad5247e7595d9f9db6e935":["fc7a7bb1aa79cf53564793bb5ffa270250c679da","52c7e49be259508735752fba88085255014a6ecf"],"409da428f28953cf35fddd5c9ff5c7e4f5439863":["9798d0818e7a880546802b509792d3f3d57babd2"],"fc7a7bb1aa79cf53564793bb5ffa270250c679da":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"b70042a8a492f7054d480ccdd2be9796510d4327":["c4ad863d796f4e72a3a1ef4bacd2e19c3e9258c9","9798d0818e7a880546802b509792d3f3d57babd2"],"9856095f7afb5a607bf5e65077615ed91273508c":["3394716f52b34ab259ad5247e7595d9f9db6e935","c4ad863d796f4e72a3a1ef4bacd2e19c3e9258c9"],"9798d0818e7a880546802b509792d3f3d57babd2":["c4ad863d796f4e72a3a1ef4bacd2e19c3e9258c9"],"52c7e49be259508735752fba88085255014a6ecf":["fc7a7bb1aa79cf53564793bb5ffa270250c679da"],"4e6354dd7c71fe122926fc53d7d29f715b1283db":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","fc7a7bb1aa79cf53564793bb5ffa270250c679da"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["409da428f28953cf35fddd5c9ff5c7e4f5439863"],"7eeaaea0106c7d6a2de50acfc8d357121ef8bd26":["c4ad863d796f4e72a3a1ef4bacd2e19c3e9258c9","9798d0818e7a880546802b509792d3f3d57babd2"]},"commit2Childs":{"c0cd85fde84cb318b4dc97710dcf15e2959a1bbe":[],"c4ad863d796f4e72a3a1ef4bacd2e19c3e9258c9":["b70042a8a492f7054d480ccdd2be9796510d4327","9856095f7afb5a607bf5e65077615ed91273508c","9798d0818e7a880546802b509792d3f3d57babd2","7eeaaea0106c7d6a2de50acfc8d357121ef8bd26"],"3394716f52b34ab259ad5247e7595d9f9db6e935":["c0cd85fde84cb318b4dc97710dcf15e2959a1bbe","c4ad863d796f4e72a3a1ef4bacd2e19c3e9258c9","9856095f7afb5a607bf5e65077615ed91273508c"],"409da428f28953cf35fddd5c9ff5c7e4f5439863":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"fc7a7bb1aa79cf53564793bb5ffa270250c679da":["c0cd85fde84cb318b4dc97710dcf15e2959a1bbe","3394716f52b34ab259ad5247e7595d9f9db6e935","52c7e49be259508735752fba88085255014a6ecf","4e6354dd7c71fe122926fc53d7d29f715b1283db"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["fc7a7bb1aa79cf53564793bb5ffa270250c679da","4e6354dd7c71fe122926fc53d7d29f715b1283db"],"b70042a8a492f7054d480ccdd2be9796510d4327":[],"9856095f7afb5a607bf5e65077615ed91273508c":[],"9798d0818e7a880546802b509792d3f3d57babd2":["409da428f28953cf35fddd5c9ff5c7e4f5439863","b70042a8a492f7054d480ccdd2be9796510d4327","7eeaaea0106c7d6a2de50acfc8d357121ef8bd26"],"52c7e49be259508735752fba88085255014a6ecf":["3394716f52b34ab259ad5247e7595d9f9db6e935"],"4e6354dd7c71fe122926fc53d7d29f715b1283db":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"7eeaaea0106c7d6a2de50acfc8d357121ef8bd26":[]},"heads":["c0cd85fde84cb318b4dc97710dcf15e2959a1bbe","b70042a8a492f7054d480ccdd2be9796510d4327","9856095f7afb5a607bf5e65077615ed91273508c","4e6354dd7c71fe122926fc53d7d29f715b1283db","cd5edd1f2b162a5cfa08efd17851a07373a96817","7eeaaea0106c7d6a2de50acfc8d357121ef8bd26"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}