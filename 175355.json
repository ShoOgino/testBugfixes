{"path":"src/java/org/apache/lucene/analysis/standard/StandardAnalyzer#tokenStream(String,Reader).mjava","commits":[{"id":"91109046a59c58ee0ee5d0d2767b08d1f30d6702","date":1000830588,"type":0,"author":"Jason van Zyl","isMerge":false,"pathNew":"src/java/org/apache/lucene/analysis/standard/StandardAnalyzer#tokenStream(String,Reader).mjava","pathOld":"/dev/null","sourceNew":"  /** Constructs a {@link StandardTokenizer} filtered by a {@link\n   * StandardFilter}, a {@link LowerCaseFilter} and a {@link StopFilter}. */\n  public final TokenStream tokenStream(String fieldName, Reader reader) {\n    TokenStream result = new StandardTokenizer(reader);\n    result = new StandardFilter(result);\n    result = new LowerCaseFilter(result);\n    result = new StopFilter(result, stopTable);\n    return result;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e121e32e09030f47d0ecdcbf7f95c61b1d6d0aef","date":1014328867,"type":3,"author":"Otis Gospodnetic","isMerge":false,"pathNew":"src/java/org/apache/lucene/analysis/standard/StandardAnalyzer#tokenStream(String,Reader).mjava","pathOld":"src/java/org/apache/lucene/analysis/standard/StandardAnalyzer#tokenStream(String,Reader).mjava","sourceNew":"    /** Constructs a {@link StandardTokenizer} filtered by a {@link\n     * StandardFilter}, a {@link LowerCaseFilter} and a {@link StopFilter}. */\n    public final TokenStream tokenStream(String fieldName, Reader reader) {\n\tTokenStream result = new StandardTokenizer(reader);\n\tresult = new StandardFilter(result);\n\tresult = new LowerCaseFilter(result);\n\tresult = new StopFilter(result, stopTable);\n\treturn result;\n    }\n\n","sourceOld":"  /** Constructs a {@link StandardTokenizer} filtered by a {@link\n   * StandardFilter}, a {@link LowerCaseFilter} and a {@link StopFilter}. */\n  public final TokenStream tokenStream(String fieldName, Reader reader) {\n    TokenStream result = new StandardTokenizer(reader);\n    result = new StandardFilter(result);\n    result = new LowerCaseFilter(result);\n    result = new StopFilter(result, stopTable);\n    return result;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"04090a5546772e3562977c97c4a05b2a9ab43058","date":1014340551,"type":3,"author":"Otis Gospodnetic","isMerge":false,"pathNew":"src/java/org/apache/lucene/analysis/standard/StandardAnalyzer#tokenStream(String,Reader).mjava","pathOld":"src/java/org/apache/lucene/analysis/standard/StandardAnalyzer#tokenStream(String,Reader).mjava","sourceNew":"    /** Constructs a {@link StandardTokenizer} filtered by a {@link\n\tStandardFilter}, a {@link LowerCaseFilter} and a {@link StopFilter}. */\n    public final TokenStream tokenStream(String fieldName, Reader reader) {\n\tTokenStream result = new StandardTokenizer(reader);\n\tresult = new StandardFilter(result);\n\tresult = new LowerCaseFilter(result);\n\tresult = new StopFilter(result, stopTable);\n\treturn result;\n    }\n\n","sourceOld":"    /** Constructs a {@link StandardTokenizer} filtered by a {@link\n     * StandardFilter}, a {@link LowerCaseFilter} and a {@link StopFilter}. */\n    public final TokenStream tokenStream(String fieldName, Reader reader) {\n\tTokenStream result = new StandardTokenizer(reader);\n\tresult = new StandardFilter(result);\n\tresult = new LowerCaseFilter(result);\n\tresult = new StopFilter(result, stopTable);\n\treturn result;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0498299bf8a98518151ca8e5e727f34dbfde0030","date":1039460541,"type":3,"author":"Doug Cutting","isMerge":false,"pathNew":"src/java/org/apache/lucene/analysis/standard/StandardAnalyzer#tokenStream(String,Reader).mjava","pathOld":"src/java/org/apache/lucene/analysis/standard/StandardAnalyzer#tokenStream(String,Reader).mjava","sourceNew":"    /** Constructs a {@link StandardTokenizer} filtered by a {@link\n\tStandardFilter}, a {@link LowerCaseFilter} and a {@link StopFilter}. */\n    public TokenStream tokenStream(String fieldName, Reader reader) {\n\tTokenStream result = new StandardTokenizer(reader);\n\tresult = new StandardFilter(result);\n\tresult = new LowerCaseFilter(result);\n\tresult = new StopFilter(result, stopTable);\n\treturn result;\n    }\n\n","sourceOld":"    /** Constructs a {@link StandardTokenizer} filtered by a {@link\n\tStandardFilter}, a {@link LowerCaseFilter} and a {@link StopFilter}. */\n    public final TokenStream tokenStream(String fieldName, Reader reader) {\n\tTokenStream result = new StandardTokenizer(reader);\n\tresult = new StandardFilter(result);\n\tresult = new LowerCaseFilter(result);\n\tresult = new StopFilter(result, stopTable);\n\treturn result;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b7198a915aa4cff29a9ba914d78dc27549dfde09","date":1068474679,"type":3,"author":"Otis Gospodnetic","isMerge":false,"pathNew":"src/java/org/apache/lucene/analysis/standard/StandardAnalyzer#tokenStream(String,Reader).mjava","pathOld":"src/java/org/apache/lucene/analysis/standard/StandardAnalyzer#tokenStream(String,Reader).mjava","sourceNew":"  /** Constructs a {@link StandardTokenizer} filtered by a {@link\n  StandardFilter}, a {@link LowerCaseFilter} and a {@link StopFilter}. */\n  public TokenStream tokenStream(String fieldName, Reader reader) {\n    TokenStream result = new StandardTokenizer(reader);\n    result = new StandardFilter(result);\n    result = new LowerCaseFilter(result);\n    result = new StopFilter(result, stopTable);\n    return result;\n  }\n\n","sourceOld":"    /** Constructs a {@link StandardTokenizer} filtered by a {@link\n\tStandardFilter}, a {@link LowerCaseFilter} and a {@link StopFilter}. */\n    public TokenStream tokenStream(String fieldName, Reader reader) {\n\tTokenStream result = new StandardTokenizer(reader);\n\tresult = new StandardFilter(result);\n\tresult = new LowerCaseFilter(result);\n\tresult = new StopFilter(result, stopTable);\n\treturn result;\n    }\n\n","bugFix":null,"bugIntro":["c79a056cc0ebc0f62e4a01c20808260cc4c70074"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"d14dd1f81165dd4704a95f7427639ada7c3047f7","date":1079084628,"type":3,"author":"Erik Hatcher","isMerge":false,"pathNew":"src/java/org/apache/lucene/analysis/standard/StandardAnalyzer#tokenStream(String,Reader).mjava","pathOld":"src/java/org/apache/lucene/analysis/standard/StandardAnalyzer#tokenStream(String,Reader).mjava","sourceNew":"  /** Constructs a {@link StandardTokenizer} filtered by a {@link\n  StandardFilter}, a {@link LowerCaseFilter} and a {@link StopFilter}. */\n  public TokenStream tokenStream(String fieldName, Reader reader) {\n    TokenStream result = new StandardTokenizer(reader);\n    result = new StandardFilter(result);\n    result = new LowerCaseFilter(result);\n    result = new StopFilter(result, stopSet);\n    return result;\n  }\n\n","sourceOld":"  /** Constructs a {@link StandardTokenizer} filtered by a {@link\n  StandardFilter}, a {@link LowerCaseFilter} and a {@link StopFilter}. */\n  public TokenStream tokenStream(String fieldName, Reader reader) {\n    TokenStream result = new StandardTokenizer(reader);\n    result = new StandardFilter(result);\n    result = new LowerCaseFilter(result);\n    result = new StopFilter(result, stopTable);\n    return result;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"c79a056cc0ebc0f62e4a01c20808260cc4c70074","date":1198809971,"type":3,"author":"Grant Ingersoll","isMerge":false,"pathNew":"src/java/org/apache/lucene/analysis/standard/StandardAnalyzer#tokenStream(String,Reader).mjava","pathOld":"src/java/org/apache/lucene/analysis/standard/StandardAnalyzer#tokenStream(String,Reader).mjava","sourceNew":"  /** Constructs a {@link StandardTokenizer} filtered by a {@link\n  StandardFilter}, a {@link LowerCaseFilter} and a {@link StopFilter}. */\n  public TokenStream tokenStream(String fieldName, Reader reader) {\n    TokenStream result = new StandardTokenizer(reader, replaceInvalidAcronym);\n    result = new StandardFilter(result);\n    result = new LowerCaseFilter(result);\n    result = new StopFilter(result, stopSet);\n    return result;\n  }\n\n","sourceOld":"  /** Constructs a {@link StandardTokenizer} filtered by a {@link\n  StandardFilter}, a {@link LowerCaseFilter} and a {@link StopFilter}. */\n  public TokenStream tokenStream(String fieldName, Reader reader) {\n    TokenStream result = new StandardTokenizer(reader);\n    result = new StandardFilter(result);\n    result = new LowerCaseFilter(result);\n    result = new StopFilter(result, stopSet);\n    return result;\n  }\n\n","bugFix":["b7198a915aa4cff29a9ba914d78dc27549dfde09"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a5b54d19e4682ef2b08bd06f76c13a4c8d785386","date":1199633864,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/analysis/standard/StandardAnalyzer#tokenStream(String,Reader).mjava","pathOld":"src/java/org/apache/lucene/analysis/standard/StandardAnalyzer#tokenStream(String,Reader).mjava","sourceNew":"  /** Constructs a {@link StandardTokenizer} filtered by a {@link\n  StandardFilter}, a {@link LowerCaseFilter} and a {@link StopFilter}. */\n  public TokenStream tokenStream(String fieldName, Reader reader) {\n    StandardTokenizer tokenStream = new StandardTokenizer(reader, replaceInvalidAcronym);\n    tokenStream.setMaxTokenLength(maxTokenLength);\n    TokenStream result = new StandardFilter(tokenStream);\n    result = new LowerCaseFilter(result);\n    result = new StopFilter(result, stopSet);\n    return result;\n  }\n\n","sourceOld":"  /** Constructs a {@link StandardTokenizer} filtered by a {@link\n  StandardFilter}, a {@link LowerCaseFilter} and a {@link StopFilter}. */\n  public TokenStream tokenStream(String fieldName, Reader reader) {\n    TokenStream result = new StandardTokenizer(reader, replaceInvalidAcronym);\n    result = new StandardFilter(result);\n    result = new LowerCaseFilter(result);\n    result = new StopFilter(result, stopSet);\n    return result;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"54c106a73719ede69e08f8b0ffe2950cc9ebfa07","date":1244055085,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/analysis/standard/StandardAnalyzer#tokenStream(String,Reader).mjava","pathOld":"src/java/org/apache/lucene/analysis/standard/StandardAnalyzer#tokenStream(String,Reader).mjava","sourceNew":"  /** Constructs a {@link StandardTokenizer} filtered by a {@link\n  StandardFilter}, a {@link LowerCaseFilter} and a {@link StopFilter}. */\n  public TokenStream tokenStream(String fieldName, Reader reader) {\n    StandardTokenizer tokenStream = new StandardTokenizer(reader, replaceInvalidAcronym);\n    tokenStream.setMaxTokenLength(maxTokenLength);\n    TokenStream result = new StandardFilter(tokenStream);\n    result = new LowerCaseFilter(result);\n    if (useDefaultStopPositionIncrements) {\n      result = new StopFilter(result, stopSet);\n    } else {\n      result = new StopFilter(enableStopPositionIncrements, result, stopSet);\n    }\n    return result;\n  }\n\n","sourceOld":"  /** Constructs a {@link StandardTokenizer} filtered by a {@link\n  StandardFilter}, a {@link LowerCaseFilter} and a {@link StopFilter}. */\n  public TokenStream tokenStream(String fieldName, Reader reader) {\n    StandardTokenizer tokenStream = new StandardTokenizer(reader, replaceInvalidAcronym);\n    tokenStream.setMaxTokenLength(maxTokenLength);\n    TokenStream result = new StandardFilter(tokenStream);\n    result = new LowerCaseFilter(result);\n    result = new StopFilter(result, stopSet);\n    return result;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4b41b991de69ba7b72d5e90cfcee25699a1a7fc9","date":1256127131,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/java/org/apache/lucene/analysis/standard/StandardAnalyzer#tokenStream(String,Reader).mjava","pathOld":"src/java/org/apache/lucene/analysis/standard/StandardAnalyzer#tokenStream(String,Reader).mjava","sourceNew":"  /** Constructs a {@link StandardTokenizer} filtered by a {@link\n  StandardFilter}, a {@link LowerCaseFilter} and a {@link StopFilter}. */\n  public TokenStream tokenStream(String fieldName, Reader reader) {\n    StandardTokenizer tokenStream = new StandardTokenizer(reader, replaceInvalidAcronym);\n    tokenStream.setMaxTokenLength(maxTokenLength);\n    TokenStream result = new StandardFilter(tokenStream);\n    result = new LowerCaseFilter(result);\n    result = new StopFilter(enableStopPositionIncrements, result, stopSet);\n    return result;\n  }\n\n","sourceOld":"  /** Constructs a {@link StandardTokenizer} filtered by a {@link\n  StandardFilter}, a {@link LowerCaseFilter} and a {@link StopFilter}. */\n  public TokenStream tokenStream(String fieldName, Reader reader) {\n    StandardTokenizer tokenStream = new StandardTokenizer(reader, replaceInvalidAcronym);\n    tokenStream.setMaxTokenLength(maxTokenLength);\n    TokenStream result = new StandardFilter(tokenStream);\n    result = new LowerCaseFilter(result);\n    if (useDefaultStopPositionIncrements) {\n      result = new StopFilter(result, stopSet);\n    } else {\n      result = new StopFilter(enableStopPositionIncrements, result, stopSet);\n    }\n    return result;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ba1116b3450a9c1642c89445d131b37344055245","date":1256329517,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/analysis/standard/StandardAnalyzer#tokenStream(String,Reader).mjava","pathOld":"src/java/org/apache/lucene/analysis/standard/StandardAnalyzer#tokenStream(String,Reader).mjava","sourceNew":"  /** Constructs a {@link StandardTokenizer} filtered by a {@link\n  StandardFilter}, a {@link LowerCaseFilter} and a {@link StopFilter}. */\n  public TokenStream tokenStream(String fieldName, Reader reader) {\n    StandardTokenizer tokenStream = new StandardTokenizer(matchVersion, reader);\n    tokenStream.setMaxTokenLength(maxTokenLength);\n    TokenStream result = new StandardFilter(tokenStream);\n    result = new LowerCaseFilter(result);\n    result = new StopFilter(StopFilter.getEnablePositionIncrementsVersionDefault(matchVersion),\n                            result, stopSet);\n    return result;\n  }\n\n","sourceOld":"  /** Constructs a {@link StandardTokenizer} filtered by a {@link\n  StandardFilter}, a {@link LowerCaseFilter} and a {@link StopFilter}. */\n  public TokenStream tokenStream(String fieldName, Reader reader) {\n    StandardTokenizer tokenStream = new StandardTokenizer(reader, replaceInvalidAcronym);\n    tokenStream.setMaxTokenLength(maxTokenLength);\n    TokenStream result = new StandardFilter(tokenStream);\n    result = new LowerCaseFilter(result);\n    result = new StopFilter(enableStopPositionIncrements, result, stopSet);\n    return result;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4c8de810875032655c7b5d5bf07c5a6a22e70290","date":1256716915,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/java/org/apache/lucene/analysis/standard/StandardAnalyzer#tokenStream(String,Reader).mjava","pathOld":"src/java/org/apache/lucene/analysis/standard/StandardAnalyzer#tokenStream(String,Reader).mjava","sourceNew":"  /** Constructs a {@link StandardTokenizer} filtered by a {@link\n  StandardFilter}, a {@link LowerCaseFilter} and a {@link StopFilter}. */\n  @Override\n  public TokenStream tokenStream(String fieldName, Reader reader) {\n    StandardTokenizer tokenStream = new StandardTokenizer(matchVersion, reader);\n    tokenStream.setMaxTokenLength(maxTokenLength);\n    TokenStream result = new StandardFilter(tokenStream);\n    result = new LowerCaseFilter(result);\n    result = new StopFilter(enableStopPositionIncrements, result, stopSet);\n    return result;\n  }\n\n","sourceOld":"  /** Constructs a {@link StandardTokenizer} filtered by a {@link\n  StandardFilter}, a {@link LowerCaseFilter} and a {@link StopFilter}. */\n  public TokenStream tokenStream(String fieldName, Reader reader) {\n    StandardTokenizer tokenStream = new StandardTokenizer(matchVersion, reader);\n    tokenStream.setMaxTokenLength(maxTokenLength);\n    TokenStream result = new StandardFilter(tokenStream);\n    result = new LowerCaseFilter(result);\n    result = new StopFilter(StopFilter.getEnablePositionIncrementsVersionDefault(matchVersion),\n                            result, stopSet);\n    return result;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"41ce0ce6485d29a241c4ca4b6179d14df6a66bae","date":1259357651,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"src/java/org/apache/lucene/analysis/standard/StandardAnalyzer#tokenStream(String,Reader).mjava","pathOld":"src/java/org/apache/lucene/analysis/standard/StandardAnalyzer#tokenStream(String,Reader).mjava","sourceNew":"  /** Constructs a {@link StandardTokenizer} filtered by a {@link\n  StandardFilter}, a {@link LowerCaseFilter} and a {@link StopFilter}. */\n  @Override\n  public TokenStream tokenStream(String fieldName, Reader reader) {\n    StandardTokenizer tokenStream = new StandardTokenizer(matchVersion, reader);\n    tokenStream.setMaxTokenLength(maxTokenLength);\n    TokenStream result = new StandardFilter(tokenStream);\n    result = new LowerCaseFilter(matchVersion, result);\n    result = new StopFilter(enableStopPositionIncrements, result, stopSet);\n    return result;\n  }\n\n","sourceOld":"  /** Constructs a {@link StandardTokenizer} filtered by a {@link\n  StandardFilter}, a {@link LowerCaseFilter} and a {@link StopFilter}. */\n  @Override\n  public TokenStream tokenStream(String fieldName, Reader reader) {\n    StandardTokenizer tokenStream = new StandardTokenizer(matchVersion, reader);\n    tokenStream.setMaxTokenLength(maxTokenLength);\n    TokenStream result = new StandardFilter(tokenStream);\n    result = new LowerCaseFilter(result);\n    result = new StopFilter(enableStopPositionIncrements, result, stopSet);\n    return result;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7f6c85ffa816c86be877aa7a5029a5daa1336e7f","date":1259617761,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/java/org/apache/lucene/analysis/standard/StandardAnalyzer#tokenStream(String,Reader).mjava","pathOld":"src/java/org/apache/lucene/analysis/standard/StandardAnalyzer#tokenStream(String,Reader).mjava","sourceNew":"  /** Constructs a {@link StandardTokenizer} filtered by a {@link\n  StandardFilter}, a {@link LowerCaseFilter} and a {@link StopFilter}. */\n  @Override\n  public TokenStream tokenStream(String fieldName, Reader reader) {\n    StandardTokenizer tokenStream = new StandardTokenizer(matchVersion, reader);\n    tokenStream.setMaxTokenLength(maxTokenLength);\n    TokenStream result = new StandardFilter(tokenStream);\n    result = new LowerCaseFilter(matchVersion, result);\n    result = new StopFilter(matchVersion, result, stopSet);\n    return result;\n  }\n\n","sourceOld":"  /** Constructs a {@link StandardTokenizer} filtered by a {@link\n  StandardFilter}, a {@link LowerCaseFilter} and a {@link StopFilter}. */\n  @Override\n  public TokenStream tokenStream(String fieldName, Reader reader) {\n    StandardTokenizer tokenStream = new StandardTokenizer(matchVersion, reader);\n    tokenStream.setMaxTokenLength(maxTokenLength);\n    TokenStream result = new StandardFilter(tokenStream);\n    result = new LowerCaseFilter(matchVersion, result);\n    result = new StopFilter(enableStopPositionIncrements, result, stopSet);\n    return result;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/analysis/standard/StandardAnalyzer#tokenStream(String,Reader).mjava","pathOld":"src/java/org/apache/lucene/analysis/standard/StandardAnalyzer#tokenStream(String,Reader).mjava","sourceNew":"  /** Constructs a {@link StandardTokenizer} filtered by a {@link\n  StandardFilter}, a {@link LowerCaseFilter} and a {@link StopFilter}. */\n  @Override\n  public TokenStream tokenStream(String fieldName, Reader reader) {\n    StandardTokenizer tokenStream = new StandardTokenizer(matchVersion, reader);\n    tokenStream.setMaxTokenLength(maxTokenLength);\n    TokenStream result = new StandardFilter(tokenStream);\n    result = new LowerCaseFilter(matchVersion, result);\n    result = new StopFilter(matchVersion, result, stopSet);\n    return result;\n  }\n\n","sourceOld":"  /** Constructs a {@link StandardTokenizer} filtered by a {@link\n  StandardFilter}, a {@link LowerCaseFilter} and a {@link StopFilter}. */\n  @Override\n  public TokenStream tokenStream(String fieldName, Reader reader) {\n    StandardTokenizer tokenStream = new StandardTokenizer(matchVersion, reader);\n    tokenStream.setMaxTokenLength(maxTokenLength);\n    TokenStream result = new StandardFilter(tokenStream);\n    result = new LowerCaseFilter(matchVersion, result);\n    result = new StopFilter(matchVersion, result, stopSet);\n    return result;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"91109046a59c58ee0ee5d0d2767b08d1f30d6702":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"0498299bf8a98518151ca8e5e727f34dbfde0030":["04090a5546772e3562977c97c4a05b2a9ab43058"],"c79a056cc0ebc0f62e4a01c20808260cc4c70074":["d14dd1f81165dd4704a95f7427639ada7c3047f7"],"ba1116b3450a9c1642c89445d131b37344055245":["4b41b991de69ba7b72d5e90cfcee25699a1a7fc9"],"54c106a73719ede69e08f8b0ffe2950cc9ebfa07":["a5b54d19e4682ef2b08bd06f76c13a4c8d785386"],"b7198a915aa4cff29a9ba914d78dc27549dfde09":["0498299bf8a98518151ca8e5e727f34dbfde0030"],"4c8de810875032655c7b5d5bf07c5a6a22e70290":["ba1116b3450a9c1642c89445d131b37344055245"],"e121e32e09030f47d0ecdcbf7f95c61b1d6d0aef":["91109046a59c58ee0ee5d0d2767b08d1f30d6702"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"4b41b991de69ba7b72d5e90cfcee25699a1a7fc9":["54c106a73719ede69e08f8b0ffe2950cc9ebfa07"],"41ce0ce6485d29a241c4ca4b6179d14df6a66bae":["4c8de810875032655c7b5d5bf07c5a6a22e70290"],"d14dd1f81165dd4704a95f7427639ada7c3047f7":["b7198a915aa4cff29a9ba914d78dc27549dfde09"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["7f6c85ffa816c86be877aa7a5029a5daa1336e7f"],"7f6c85ffa816c86be877aa7a5029a5daa1336e7f":["41ce0ce6485d29a241c4ca4b6179d14df6a66bae"],"a5b54d19e4682ef2b08bd06f76c13a4c8d785386":["c79a056cc0ebc0f62e4a01c20808260cc4c70074"],"04090a5546772e3562977c97c4a05b2a9ab43058":["e121e32e09030f47d0ecdcbf7f95c61b1d6d0aef"]},"commit2Childs":{"91109046a59c58ee0ee5d0d2767b08d1f30d6702":["e121e32e09030f47d0ecdcbf7f95c61b1d6d0aef"],"0498299bf8a98518151ca8e5e727f34dbfde0030":["b7198a915aa4cff29a9ba914d78dc27549dfde09"],"c79a056cc0ebc0f62e4a01c20808260cc4c70074":["a5b54d19e4682ef2b08bd06f76c13a4c8d785386"],"ba1116b3450a9c1642c89445d131b37344055245":["4c8de810875032655c7b5d5bf07c5a6a22e70290"],"54c106a73719ede69e08f8b0ffe2950cc9ebfa07":["4b41b991de69ba7b72d5e90cfcee25699a1a7fc9"],"b7198a915aa4cff29a9ba914d78dc27549dfde09":["d14dd1f81165dd4704a95f7427639ada7c3047f7"],"4c8de810875032655c7b5d5bf07c5a6a22e70290":["41ce0ce6485d29a241c4ca4b6179d14df6a66bae"],"e121e32e09030f47d0ecdcbf7f95c61b1d6d0aef":["04090a5546772e3562977c97c4a05b2a9ab43058"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["91109046a59c58ee0ee5d0d2767b08d1f30d6702"],"4b41b991de69ba7b72d5e90cfcee25699a1a7fc9":["ba1116b3450a9c1642c89445d131b37344055245"],"d14dd1f81165dd4704a95f7427639ada7c3047f7":["c79a056cc0ebc0f62e4a01c20808260cc4c70074"],"41ce0ce6485d29a241c4ca4b6179d14df6a66bae":["7f6c85ffa816c86be877aa7a5029a5daa1336e7f"],"04090a5546772e3562977c97c4a05b2a9ab43058":["0498299bf8a98518151ca8e5e727f34dbfde0030"],"a5b54d19e4682ef2b08bd06f76c13a4c8d785386":["54c106a73719ede69e08f8b0ffe2950cc9ebfa07"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"7f6c85ffa816c86be877aa7a5029a5daa1336e7f":["9454a6510e2db155fb01faa5c049b06ece95fab9"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}