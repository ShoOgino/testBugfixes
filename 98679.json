{"path":"solr/solrj/src/java/org/apache/solr/client/solrj/io/stream/DeepRandomStream#toExplanation(StreamFactory).mjava","commits":[{"id":"6fa0fff8102ba352427001188190711b7295a1c2","date":1559148790,"type":0,"author":"Joel Bernstein","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/io/stream/DeepRandomStream#toExplanation(StreamFactory).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public Explanation toExplanation(StreamFactory factory) throws IOException {\n\n    StreamExplanation explanation = new StreamExplanation(getStreamNodeId().toString());\n\n    explanation.setFunctionName(\"random\");\n    explanation.setImplementingClass(this.getClass().getName());\n    explanation.setExpressionType(ExpressionType.STREAM_SOURCE);\n    explanation.setExpression(toExpression(factory).toString());\n\n    // child is a datastore so add it at this point\n    StreamExplanation child = new StreamExplanation(getStreamNodeId() + \"-datastore\");\n    child.setFunctionName(String.format(Locale.ROOT, \"solr (%s)\", collection));\n    child.setImplementingClass(\"Solr/Lucene\");\n    child.setExpressionType(ExpressionType.DATASTORE);\n\n    if(null != params){\n      ModifiableSolrParams mParams = new ModifiableSolrParams(params);\n      child.setExpression(mParams.getMap().entrySet().stream().map(e -> String.format(Locale.ROOT, \"%s=%s\", e.getKey(), e.getValue())).collect(Collectors.joining(\",\")));\n    }\n    explanation.addChild(child);\n\n    return explanation;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"58af973abe9f7c0faa777c1a6285fc7f72c171c5","date":1559329541,"type":0,"author":"Simon Willnauer","isMerge":true,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/io/stream/DeepRandomStream#toExplanation(StreamFactory).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public Explanation toExplanation(StreamFactory factory) throws IOException {\n\n    StreamExplanation explanation = new StreamExplanation(getStreamNodeId().toString());\n\n    explanation.setFunctionName(\"random\");\n    explanation.setImplementingClass(this.getClass().getName());\n    explanation.setExpressionType(ExpressionType.STREAM_SOURCE);\n    explanation.setExpression(toExpression(factory).toString());\n\n    // child is a datastore so add it at this point\n    StreamExplanation child = new StreamExplanation(getStreamNodeId() + \"-datastore\");\n    child.setFunctionName(String.format(Locale.ROOT, \"solr (%s)\", collection));\n    child.setImplementingClass(\"Solr/Lucene\");\n    child.setExpressionType(ExpressionType.DATASTORE);\n\n    if(null != params){\n      ModifiableSolrParams mParams = new ModifiableSolrParams(params);\n      child.setExpression(mParams.getMap().entrySet().stream().map(e -> String.format(Locale.ROOT, \"%s=%s\", e.getKey(), e.getValue())).collect(Collectors.joining(\",\")));\n    }\n    explanation.addChild(child);\n\n    return explanation;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"6fa0fff8102ba352427001188190711b7295a1c2":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"58af973abe9f7c0faa777c1a6285fc7f72c171c5":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","6fa0fff8102ba352427001188190711b7295a1c2"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["6fa0fff8102ba352427001188190711b7295a1c2"]},"commit2Childs":{"6fa0fff8102ba352427001188190711b7295a1c2":["58af973abe9f7c0faa777c1a6285fc7f72c171c5","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["6fa0fff8102ba352427001188190711b7295a1c2","58af973abe9f7c0faa777c1a6285fc7f72c171c5"],"58af973abe9f7c0faa777c1a6285fc7f72c171c5":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["58af973abe9f7c0faa777c1a6285fc7f72c171c5","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}