{"path":"solr/core/src/java/org/apache/solr/core/SolrCore#registerResponseWriter(String,QueryResponseWriter).mjava","commits":[{"id":"c903c3d15906a3da96b8c0c2fb704491005fdbdb","date":1453508227,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/SolrCore#registerResponseWriter(String,QueryResponseWriter).mjava","pathOld":"solr/src/java/org/apache/solr/core/SolrCore#registerResponseWriter(String,QueryResponseWriter).mjava","sourceNew":"  /**\n   * NOTE: this function is not thread safe.  However, it is safe to call within the\n   * <code>inform( SolrCore core )</code> function for <code>SolrCoreAware</code> classes.\n   * Outside <code>inform</code>, this could potentially throw a ConcurrentModificationException\n   * \n   * @see SolrCoreAware\n   */\n  public void registerResponseWriter( String name, QueryResponseWriter responseWriter ){\n    responseWriters.put(name, responseWriter);\n  }\n\n","sourceOld":"  /**\n   * NOTE: this function is not thread safe.  However, it is safe to call within the\n   * <code>inform( SolrCore core )</code> function for <code>SolrCoreAware</code> classes.\n   * Outside <code>inform</code>, this could potentially throw a ConcurrentModificationException\n   * \n   * @see SolrCoreAware\n   */\n  public void registerResponseWriter( String name, QueryResponseWriter responseWriter ){\n    responseWriters.put(name, responseWriter);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a258fbb26824fd104ed795e5d9033d2d040049ee","date":1453508252,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/SolrCore#registerResponseWriter(String,QueryResponseWriter).mjava","pathOld":"solr/src/java/org/apache/solr/core/SolrCore#registerResponseWriter(String,QueryResponseWriter).mjava","sourceNew":"  /**\n   * NOTE: this function is not thread safe.  However, it is safe to call within the\n   * <code>inform( SolrCore core )</code> function for <code>SolrCoreAware</code> classes.\n   * Outside <code>inform</code>, this could potentially throw a ConcurrentModificationException\n   * \n   * @see SolrCoreAware\n   */\n  public void registerResponseWriter( String name, QueryResponseWriter responseWriter ){\n    responseWriters.put(name, responseWriter);\n  }\n\n","sourceOld":"  /**\n   * NOTE: this function is not thread safe.  However, it is safe to call within the\n   * <code>inform( SolrCore core )</code> function for <code>SolrCoreAware</code> classes.\n   * Outside <code>inform</code>, this could potentially throw a ConcurrentModificationException\n   * \n   * @see SolrCoreAware\n   */\n  public void registerResponseWriter( String name, QueryResponseWriter responseWriter ){\n    responseWriters.put(name, responseWriter);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/core/SolrCore#registerResponseWriter(String,QueryResponseWriter).mjava","pathOld":"solr/src/java/org/apache/solr/core/SolrCore#registerResponseWriter(String,QueryResponseWriter).mjava","sourceNew":"  /**\n   * NOTE: this function is not thread safe.  However, it is safe to call within the\n   * <code>inform( SolrCore core )</code> function for <code>SolrCoreAware</code> classes.\n   * Outside <code>inform</code>, this could potentially throw a ConcurrentModificationException\n   * \n   * @see SolrCoreAware\n   */\n  public void registerResponseWriter( String name, QueryResponseWriter responseWriter ){\n    responseWriters.put(name, responseWriter);\n  }\n\n","sourceOld":"  /**\n   * NOTE: this function is not thread safe.  However, it is safe to call within the\n   * <code>inform( SolrCore core )</code> function for <code>SolrCoreAware</code> classes.\n   * Outside <code>inform</code>, this could potentially throw a ConcurrentModificationException\n   * \n   * @see SolrCoreAware\n   */\n  public void registerResponseWriter( String name, QueryResponseWriter responseWriter ){\n    responseWriters.put(name, responseWriter);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d40dcf585f281c731bd0a97da2f92a720802c80e","date":1319743848,"type":3,"author":"Erik Hatcher","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/SolrCore#registerResponseWriter(String,QueryResponseWriter).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/SolrCore#registerResponseWriter(String,QueryResponseWriter).mjava","sourceNew":"  /**\n   * NOTE: this function is not thread safe.  However, it is safe to call within the\n   * <code>inform( SolrCore core )</code> function for <code>SolrCoreAware</code> classes.\n   * Outside <code>inform</code>, this could potentially throw a ConcurrentModificationException\n   * \n   * @see SolrCoreAware\n   */\n  public QueryResponseWriter registerResponseWriter( String name, QueryResponseWriter responseWriter ){\n    return responseWriters.put(name, responseWriter);\n  }\n\n","sourceOld":"  /**\n   * NOTE: this function is not thread safe.  However, it is safe to call within the\n   * <code>inform( SolrCore core )</code> function for <code>SolrCoreAware</code> classes.\n   * Outside <code>inform</code>, this could potentially throw a ConcurrentModificationException\n   * \n   * @see SolrCoreAware\n   */\n  public void registerResponseWriter( String name, QueryResponseWriter responseWriter ){\n    responseWriters.put(name, responseWriter);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9aea0485ecacb6734c17da2d02569816c23a69c1","date":1425707735,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/SolrCore#registerResponseWriter(String,QueryResponseWriter).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/SolrCore#registerResponseWriter(String,QueryResponseWriter).mjava","sourceNew":"  /**\n   * NOTE: this function is not thread safe.  However, it is safe to call within the\n   * <code>inform( SolrCore core )</code> function for <code>SolrCoreAware</code> classes.\n   * Outside <code>inform</code>, this could potentially throw a ConcurrentModificationException\n   *\n   * @see SolrCoreAware\n   */\n  public QueryResponseWriter registerResponseWriter( String name, QueryResponseWriter responseWriter ){\n    return responseWriters.put(name, responseWriter);\n  }\n\n","sourceOld":"  /**\n   * NOTE: this function is not thread safe.  However, it is safe to call within the\n   * <code>inform( SolrCore core )</code> function for <code>SolrCoreAware</code> classes.\n   * Outside <code>inform</code>, this could potentially throw a ConcurrentModificationException\n   * \n   * @see SolrCoreAware\n   */\n  public QueryResponseWriter registerResponseWriter( String name, QueryResponseWriter responseWriter ){\n    return responseWriters.put(name, responseWriter);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","date":1427779360,"type":3,"author":"Ryan Ernst","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/core/SolrCore#registerResponseWriter(String,QueryResponseWriter).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/SolrCore#registerResponseWriter(String,QueryResponseWriter).mjava","sourceNew":"  /**\n   * NOTE: this function is not thread safe.  However, it is safe to call within the\n   * <code>inform( SolrCore core )</code> function for <code>SolrCoreAware</code> classes.\n   * Outside <code>inform</code>, this could potentially throw a ConcurrentModificationException\n   *\n   * @see SolrCoreAware\n   */\n  public QueryResponseWriter registerResponseWriter( String name, QueryResponseWriter responseWriter ){\n    return responseWriters.put(name, responseWriter);\n  }\n\n","sourceOld":"  /**\n   * NOTE: this function is not thread safe.  However, it is safe to call within the\n   * <code>inform( SolrCore core )</code> function for <code>SolrCoreAware</code> classes.\n   * Outside <code>inform</code>, this could potentially throw a ConcurrentModificationException\n   * \n   * @see SolrCoreAware\n   */\n  public QueryResponseWriter registerResponseWriter( String name, QueryResponseWriter responseWriter ){\n    return responseWriters.put(name, responseWriter);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2668c99990e4c94a78bac005aa682b7c5986d23a","date":1561446137,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/SolrCore#registerResponseWriter(String,QueryResponseWriter).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/SolrCore#registerResponseWriter(String,QueryResponseWriter).mjava","sourceNew":"  /**\n   * NOTE: this function is not thread safe.  However, it is safe to call within the\n   * <code>inform( SolrCore core )</code> function for <code>SolrCoreAware</code> classes.\n   * Outside <code>inform</code>, this could potentially throw a ConcurrentModificationException\n   *\n   * @see SolrCoreAware\n   */\n  public QueryResponseWriter registerResponseWriter(String name, QueryResponseWriter responseWriter) {\n    return responseWriters.put(name, responseWriter);\n  }\n\n","sourceOld":"  /**\n   * NOTE: this function is not thread safe.  However, it is safe to call within the\n   * <code>inform( SolrCore core )</code> function for <code>SolrCoreAware</code> classes.\n   * Outside <code>inform</code>, this could potentially throw a ConcurrentModificationException\n   *\n   * @see SolrCoreAware\n   */\n  public QueryResponseWriter registerResponseWriter( String name, QueryResponseWriter responseWriter ){\n    return responseWriters.put(name, responseWriter);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":["d40dcf585f281c731bd0a97da2f92a720802c80e","9aea0485ecacb6734c17da2d02569816c23a69c1"],"2668c99990e4c94a78bac005aa682b7c5986d23a":["9aea0485ecacb6734c17da2d02569816c23a69c1"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"c26f00b574427b55127e869b935845554afde1fa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","c903c3d15906a3da96b8c0c2fb704491005fdbdb"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a258fbb26824fd104ed795e5d9033d2d040049ee":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"9aea0485ecacb6734c17da2d02569816c23a69c1":["d40dcf585f281c731bd0a97da2f92a720802c80e"],"d40dcf585f281c731bd0a97da2f92a720802c80e":["c26f00b574427b55127e869b935845554afde1fa"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["2668c99990e4c94a78bac005aa682b7c5986d23a"]},"commit2Childs":{"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":[],"2668c99990e4c94a78bac005aa682b7c5986d23a":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["c26f00b574427b55127e869b935845554afde1fa"],"c26f00b574427b55127e869b935845554afde1fa":["d40dcf585f281c731bd0a97da2f92a720802c80e"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c903c3d15906a3da96b8c0c2fb704491005fdbdb","c26f00b574427b55127e869b935845554afde1fa","a258fbb26824fd104ed795e5d9033d2d040049ee"],"a258fbb26824fd104ed795e5d9033d2d040049ee":[],"d40dcf585f281c731bd0a97da2f92a720802c80e":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","9aea0485ecacb6734c17da2d02569816c23a69c1"],"9aea0485ecacb6734c17da2d02569816c23a69c1":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","2668c99990e4c94a78bac005aa682b7c5986d23a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","a258fbb26824fd104ed795e5d9033d2d040049ee","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}