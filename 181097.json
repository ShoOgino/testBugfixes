{"path":"solr/core/src/test/org/apache/solr/handler/component/TermsComponentTest#testTermsWithJSON().mjava","commits":[{"id":"8998ebc47a334c61dfed58318c481a7d84e3eaeb","date":1560839882,"type":0,"author":"Mikhail Khludnev","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/component/TermsComponentTest#testTermsWithJSON().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testTermsWithJSON() throws Exception {\n    ModifiableSolrParams params = params(\n        \"qt\", \"/terms\", \"terms\", \"true\", \"terms.fl\", \"standardfilt\", \"terms.lower\", \"a\",\n        \"terms.sort\", \"index\", \"wt\", \"json\"\n    );\n\n    assertJQ(req(params), \"/terms/standardfilt/[0]==a\", \"/terms/standardfilt/[1]==1\");\n\n    // enable terms.ttf\n    params.set(\"terms.ttf\", \"true\");\n    assertJQ(req(params), \"/terms/standardfilt/[0]==a\", \"/terms/standardfilt/[1]/df==1\",\n        \"/terms/standardfilt/[1]/ttf==1\");\n\n    // test the response with terms.list and terms.ttf=false\n    params.set(\"terms.list\", \"spider,snake,shark\");\n    params.remove(\"terms.ttf\");\n    assertJQ(req(params), \"/terms/standardfilt/[0]==shark\", \"/terms/standardfilt/[1]==2\",\n        \"/terms/standardfilt/[2]==snake\", \"/terms/standardfilt/[3]==3\",\n        \"/terms/standardfilt/[4]==spider\", \"/terms/standardfilt/[5]==1\"\n    );\n    // with terms.list and terms.ttf=true\n    params.set(\"terms.ttf\", \"true\");\n    assertJQ(req(params),\n        \"/terms/standardfilt/[0]==shark\", \"/terms/standardfilt/[1]/df==2\", \"/terms/standardfilt/[1]/ttf==2\",\n        \"/terms/standardfilt/[2]==snake\", \"/terms/standardfilt/[3]/df==3\", \"/terms/standardfilt/[3]/ttf==3\",\n        \"/terms/standardfilt/[4]==spider\", \"/terms/standardfilt/[5]/df==1\", \"/terms/standardfilt/[5]/ttf==1\"\n    );\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"213e062dd7cfdd10e8df198b43616cb99b0c4fdd","date":1600693537,"type":3,"author":"Alexandre Rafalovitch","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/component/TermsComponentTest#testTermsWithJSON().mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/component/TermsComponentTest#testTermsWithJSON().mjava","sourceNew":"  @Test\n  public void testTermsWithJSON() throws Exception {\n    ModifiableSolrParams params = params(\n        \"qt\", \"/terms\", \"terms.fl\", \"standardfilt\", \"terms.lower\", \"a\",\n        \"terms.sort\", \"index\", \"wt\", \"json\"\n    );\n\n    assertJQ(req(params), \"/terms/standardfilt/[0]==a\", \"/terms/standardfilt/[1]==1\");\n\n    // enable terms.ttf\n    params.set(\"terms.ttf\", \"true\");\n    assertJQ(req(params), \"/terms/standardfilt/[0]==a\", \"/terms/standardfilt/[1]/df==1\",\n        \"/terms/standardfilt/[1]/ttf==1\");\n\n    // test the response with terms.list and terms.ttf=false\n    params.set(\"terms.list\", \"spider,snake,shark\");\n    params.remove(\"terms.ttf\");\n    assertJQ(req(params), \"/terms/standardfilt/[0]==shark\", \"/terms/standardfilt/[1]==2\",\n        \"/terms/standardfilt/[2]==snake\", \"/terms/standardfilt/[3]==3\",\n        \"/terms/standardfilt/[4]==spider\", \"/terms/standardfilt/[5]==1\"\n    );\n    // with terms.list and terms.ttf=true\n    params.set(\"terms.ttf\", \"true\");\n    assertJQ(req(params),\n        \"/terms/standardfilt/[0]==shark\", \"/terms/standardfilt/[1]/df==2\", \"/terms/standardfilt/[1]/ttf==2\",\n        \"/terms/standardfilt/[2]==snake\", \"/terms/standardfilt/[3]/df==3\", \"/terms/standardfilt/[3]/ttf==3\",\n        \"/terms/standardfilt/[4]==spider\", \"/terms/standardfilt/[5]/df==1\", \"/terms/standardfilt/[5]/ttf==1\"\n    );\n  }\n\n","sourceOld":"  @Test\n  public void testTermsWithJSON() throws Exception {\n    ModifiableSolrParams params = params(\n        \"qt\", \"/terms\", \"terms\", \"true\", \"terms.fl\", \"standardfilt\", \"terms.lower\", \"a\",\n        \"terms.sort\", \"index\", \"wt\", \"json\"\n    );\n\n    assertJQ(req(params), \"/terms/standardfilt/[0]==a\", \"/terms/standardfilt/[1]==1\");\n\n    // enable terms.ttf\n    params.set(\"terms.ttf\", \"true\");\n    assertJQ(req(params), \"/terms/standardfilt/[0]==a\", \"/terms/standardfilt/[1]/df==1\",\n        \"/terms/standardfilt/[1]/ttf==1\");\n\n    // test the response with terms.list and terms.ttf=false\n    params.set(\"terms.list\", \"spider,snake,shark\");\n    params.remove(\"terms.ttf\");\n    assertJQ(req(params), \"/terms/standardfilt/[0]==shark\", \"/terms/standardfilt/[1]==2\",\n        \"/terms/standardfilt/[2]==snake\", \"/terms/standardfilt/[3]==3\",\n        \"/terms/standardfilt/[4]==spider\", \"/terms/standardfilt/[5]==1\"\n    );\n    // with terms.list and terms.ttf=true\n    params.set(\"terms.ttf\", \"true\");\n    assertJQ(req(params),\n        \"/terms/standardfilt/[0]==shark\", \"/terms/standardfilt/[1]/df==2\", \"/terms/standardfilt/[1]/ttf==2\",\n        \"/terms/standardfilt/[2]==snake\", \"/terms/standardfilt/[3]/df==3\", \"/terms/standardfilt/[3]/ttf==3\",\n        \"/terms/standardfilt/[4]==spider\", \"/terms/standardfilt/[5]/df==1\", \"/terms/standardfilt/[5]/ttf==1\"\n    );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"213e062dd7cfdd10e8df198b43616cb99b0c4fdd":["8998ebc47a334c61dfed58318c481a7d84e3eaeb"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"8998ebc47a334c61dfed58318c481a7d84e3eaeb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["213e062dd7cfdd10e8df198b43616cb99b0c4fdd"]},"commit2Childs":{"213e062dd7cfdd10e8df198b43616cb99b0c4fdd":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["8998ebc47a334c61dfed58318c481a7d84e3eaeb"],"8998ebc47a334c61dfed58318c481a7d84e3eaeb":["213e062dd7cfdd10e8df198b43616cb99b0c4fdd"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}