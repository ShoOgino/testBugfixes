{"path":"lucene/misc/src/test/org/apache/lucene/uninverting/TestFieldCacheVsDocValues#seekCeil(TermsEnum,BytesRef,Bits).mjava","commits":[{"id":"0efcf27cd5ca23def8376b4c321970c14dd71623","date":1400662679,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/misc/src/test/org/apache/lucene/uninverting/TestFieldCacheVsDocValues#seekCeil(TermsEnum,BytesRef,Bits).mjava","pathOld":"/dev/null","sourceNew":"  /** Does termsEnum.seekCeil() but then skips over deleted ords. */\n  private static SeekStatus seekCeil(TermsEnum termsEnum, BytesRef term, Bits liveOrds) throws IOException {\n    SeekStatus status = termsEnum.seekCeil(term);\n    if (status == SeekStatus.END) {\n      return status;\n    } else {\n      if (liveOrds.get((int) termsEnum.ord()) == false) {\n        while (termsEnum.next() != null) {\n          if (liveOrds.get((int) termsEnum.ord())) {\n            return SeekStatus.NOT_FOUND;\n          }\n        }\n        return SeekStatus.END;\n      } else {\n        return status;\n      }\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"45a621dd071a902e1fd30367200d7bbbea037706","date":1400686915,"type":4,"author":"Michael McCandless","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/misc/src/test/org/apache/lucene/uninverting/TestFieldCacheVsDocValues#seekCeil(TermsEnum,BytesRef,Bits).mjava","sourceNew":null,"sourceOld":"  /** Does termsEnum.seekCeil() but then skips over deleted ords. */\n  private static SeekStatus seekCeil(TermsEnum termsEnum, BytesRef term, Bits liveOrds) throws IOException {\n    SeekStatus status = termsEnum.seekCeil(term);\n    if (status == SeekStatus.END) {\n      return status;\n    } else {\n      if (liveOrds.get((int) termsEnum.ord()) == false) {\n        while (termsEnum.next() != null) {\n          if (liveOrds.get((int) termsEnum.ord())) {\n            return SeekStatus.NOT_FOUND;\n          }\n        }\n        return SeekStatus.END;\n      } else {\n        return status;\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"45a621dd071a902e1fd30367200d7bbbea037706":["0efcf27cd5ca23def8376b4c321970c14dd71623"],"0efcf27cd5ca23def8376b4c321970c14dd71623":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"45a621dd071a902e1fd30367200d7bbbea037706":[],"0efcf27cd5ca23def8376b4c321970c14dd71623":["45a621dd071a902e1fd30367200d7bbbea037706"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["0efcf27cd5ca23def8376b4c321970c14dd71623","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["45a621dd071a902e1fd30367200d7bbbea037706","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}