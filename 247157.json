{"path":"backwards/src/test/org/apache/lucene/search/QueryUtils#wrapSearcher(Searcher,int).mjava","commits":[{"id":"480d01e5b0ef8efb136d51670fec297ae5ae2c9c","date":1268821447,"type":0,"author":"Uwe Schindler","isMerge":false,"pathNew":"backwards/src/test/org/apache/lucene/search/QueryUtils#wrapSearcher(Searcher,int).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Given a Searcher, returns a new MultiSearcher wrapping the  \n   * the original Searcher, \n   * as well as several \"empty\" IndexSearchers -- some of which will have\n   * deleted documents in them.  This new MultiSearcher \n   * should behave exactly the same as the original Searcher.\n   * @param s the Searcher to wrap\n   * @param edge if negative, s will be the first sub; if 0, s will be in hte middle, if positive s will be the last sub\n   */\n  public static MultiSearcher wrapSearcher(final Searcher s, final int edge) \n    throws IOException {\n\n    // we can't put deleted docs before the nested reader, because\n    // it will through off the docIds\n    Searcher[] searchers = new Searcher[] {\n      edge < 0 ? s : new IndexSearcher(makeEmptyIndex(0), true),\n      new MultiSearcher(new Searcher[] {\n        new IndexSearcher(makeEmptyIndex(edge < 0 ? 65 : 0), true),\n        new IndexSearcher(makeEmptyIndex(0), true),\n        0 == edge ? s : new IndexSearcher(makeEmptyIndex(0), true)\n      }),\n      new IndexSearcher(makeEmptyIndex(0 < edge ? 0 : 3), true),\n      new IndexSearcher(makeEmptyIndex(0), true),\n      new MultiSearcher(new Searcher[] {\n        new IndexSearcher(makeEmptyIndex(0 < edge ? 0 : 5), true),\n        new IndexSearcher(makeEmptyIndex(0), true),\n        0 < edge ? s : new IndexSearcher(makeEmptyIndex(0), true)\n      })\n    };\n    MultiSearcher out = new MultiSearcher(searchers);\n    out.setSimilarity(s.getSimilarity());\n    return out;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/backwards/src/test/org/apache/lucene/search/QueryUtils#wrapSearcher(Searcher,int).mjava","pathOld":"backwards/src/test/org/apache/lucene/search/QueryUtils#wrapSearcher(Searcher,int).mjava","sourceNew":"  /**\n   * Given a Searcher, returns a new MultiSearcher wrapping the  \n   * the original Searcher, \n   * as well as several \"empty\" IndexSearchers -- some of which will have\n   * deleted documents in them.  This new MultiSearcher \n   * should behave exactly the same as the original Searcher.\n   * @param s the Searcher to wrap\n   * @param edge if negative, s will be the first sub; if 0, s will be in hte middle, if positive s will be the last sub\n   */\n  public static MultiSearcher wrapSearcher(final Searcher s, final int edge) \n    throws IOException {\n\n    // we can't put deleted docs before the nested reader, because\n    // it will through off the docIds\n    Searcher[] searchers = new Searcher[] {\n      edge < 0 ? s : new IndexSearcher(makeEmptyIndex(0), true),\n      new MultiSearcher(new Searcher[] {\n        new IndexSearcher(makeEmptyIndex(edge < 0 ? 65 : 0), true),\n        new IndexSearcher(makeEmptyIndex(0), true),\n        0 == edge ? s : new IndexSearcher(makeEmptyIndex(0), true)\n      }),\n      new IndexSearcher(makeEmptyIndex(0 < edge ? 0 : 3), true),\n      new IndexSearcher(makeEmptyIndex(0), true),\n      new MultiSearcher(new Searcher[] {\n        new IndexSearcher(makeEmptyIndex(0 < edge ? 0 : 5), true),\n        new IndexSearcher(makeEmptyIndex(0), true),\n        0 < edge ? s : new IndexSearcher(makeEmptyIndex(0), true)\n      })\n    };\n    MultiSearcher out = new MultiSearcher(searchers);\n    out.setSimilarity(s.getSimilarity());\n    return out;\n  }\n\n","sourceOld":"  /**\n   * Given a Searcher, returns a new MultiSearcher wrapping the  \n   * the original Searcher, \n   * as well as several \"empty\" IndexSearchers -- some of which will have\n   * deleted documents in them.  This new MultiSearcher \n   * should behave exactly the same as the original Searcher.\n   * @param s the Searcher to wrap\n   * @param edge if negative, s will be the first sub; if 0, s will be in hte middle, if positive s will be the last sub\n   */\n  public static MultiSearcher wrapSearcher(final Searcher s, final int edge) \n    throws IOException {\n\n    // we can't put deleted docs before the nested reader, because\n    // it will through off the docIds\n    Searcher[] searchers = new Searcher[] {\n      edge < 0 ? s : new IndexSearcher(makeEmptyIndex(0), true),\n      new MultiSearcher(new Searcher[] {\n        new IndexSearcher(makeEmptyIndex(edge < 0 ? 65 : 0), true),\n        new IndexSearcher(makeEmptyIndex(0), true),\n        0 == edge ? s : new IndexSearcher(makeEmptyIndex(0), true)\n      }),\n      new IndexSearcher(makeEmptyIndex(0 < edge ? 0 : 3), true),\n      new IndexSearcher(makeEmptyIndex(0), true),\n      new MultiSearcher(new Searcher[] {\n        new IndexSearcher(makeEmptyIndex(0 < edge ? 0 : 5), true),\n        new IndexSearcher(makeEmptyIndex(0), true),\n        0 < edge ? s : new IndexSearcher(makeEmptyIndex(0), true)\n      })\n    };\n    MultiSearcher out = new MultiSearcher(searchers);\n    out.setSimilarity(s.getSimilarity());\n    return out;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"480d01e5b0ef8efb136d51670fec297ae5ae2c9c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["480d01e5b0ef8efb136d51670fec297ae5ae2c9c"]},"commit2Childs":{"480d01e5b0ef8efb136d51670fec297ae5ae2c9c":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["480d01e5b0ef8efb136d51670fec297ae5ae2c9c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}