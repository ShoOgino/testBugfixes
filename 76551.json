{"path":"lucene/core/src/java/org/apache/lucene/index/TieredMergePolicy#setSegmentsPerTier(double).mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/TieredMergePolicy#setSegmentsPerTier(double).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/TieredMergePolicy#setSegmentsPerTier(double).mjava","sourceNew":"  /** Sets the allowed number of segments per tier.  Smaller\n   *  values mean more merging but fewer segments.\n   *\n   *  <p><b>NOTE</b>: this value should be >= the {@link\n   *  #setMaxMergeAtOnce} otherwise you'll force too much\n   *  merging to occur.</p>\n   *\n   *  <p>Default is 10.0.</p> */\n  public TieredMergePolicy setSegmentsPerTier(double v) {\n    if (v < 2.0) {\n      throw new IllegalArgumentException(\"segmentsPerTier must be >= 2.0 (got \" + v + \")\");\n    }\n    segsPerTier = v;\n    return this;\n  }\n\n","sourceOld":"  /** Sets the allowed number of segments per tier.  Smaller\n   *  values mean more merging but fewer segments.\n   *\n   *  <p><b>NOTE</b>: this value should be >= the {@link\n   *  #setMaxMergeAtOnce} otherwise you'll force too much\n   *  merging to occur.</p>\n   *\n   *  <p>Default is 10.0.</p> */\n  public TieredMergePolicy setSegmentsPerTier(double v) {\n    if (v < 2.0) {\n      throw new IllegalArgumentException(\"segmentsPerTier must be >= 2.0 (got \" + v + \")\");\n    }\n    segsPerTier = v;\n    return this;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b1eb427f2c6beed80d1724555fc1db003ccf3030","date":1417137397,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/TieredMergePolicy#setSegmentsPerTier(double).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/TieredMergePolicy#setSegmentsPerTier(double).mjava","sourceNew":"  /** Sets the allowed number of segments per tier.  Smaller\n   *  values mean more merging but fewer segments.\n   *\n   *  <p><b>NOTE</b>: this value should be {@code >=} the {@link\n   *  #setMaxMergeAtOnce} otherwise you'll force too much\n   *  merging to occur.</p>\n   *\n   *  <p>Default is 10.0.</p> */\n  public TieredMergePolicy setSegmentsPerTier(double v) {\n    if (v < 2.0) {\n      throw new IllegalArgumentException(\"segmentsPerTier must be >= 2.0 (got \" + v + \")\");\n    }\n    segsPerTier = v;\n    return this;\n  }\n\n","sourceOld":"  /** Sets the allowed number of segments per tier.  Smaller\n   *  values mean more merging but fewer segments.\n   *\n   *  <p><b>NOTE</b>: this value should be >= the {@link\n   *  #setMaxMergeAtOnce} otherwise you'll force too much\n   *  merging to occur.</p>\n   *\n   *  <p>Default is 10.0.</p> */\n  public TieredMergePolicy setSegmentsPerTier(double v) {\n    if (v < 2.0) {\n      throw new IllegalArgumentException(\"segmentsPerTier must be >= 2.0 (got \" + v + \")\");\n    }\n    segsPerTier = v;\n    return this;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9707a68fe260631e514201dbf24e9afc9a3a4ba1","date":1531207054,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/TieredMergePolicy#setSegmentsPerTier(double).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/TieredMergePolicy#setSegmentsPerTier(double).mjava","sourceNew":"  /** Sets the allowed number of segments per tier.  Smaller\n   *  values mean more merging but fewer segments.\n   *\n   *  <p>Default is 10.0.</p> */\n  public TieredMergePolicy setSegmentsPerTier(double v) {\n    if (v < 2.0) {\n      throw new IllegalArgumentException(\"segmentsPerTier must be >= 2.0 (got \" + v + \")\");\n    }\n    segsPerTier = v;\n    return this;\n  }\n\n","sourceOld":"  /** Sets the allowed number of segments per tier.  Smaller\n   *  values mean more merging but fewer segments.\n   *\n   *  <p><b>NOTE</b>: this value should be {@code >=} the {@link\n   *  #setMaxMergeAtOnce} otherwise you'll force too much\n   *  merging to occur.</p>\n   *\n   *  <p>Default is 10.0.</p> */\n  public TieredMergePolicy setSegmentsPerTier(double v) {\n    if (v < 2.0) {\n      throw new IllegalArgumentException(\"segmentsPerTier must be >= 2.0 (got \" + v + \")\");\n    }\n    segsPerTier = v;\n    return this;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7eeaaea0106c7d6a2de50acfc8d357121ef8bd26","date":1531589977,"type":3,"author":"Michael Braun","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/TieredMergePolicy#setSegmentsPerTier(double).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/TieredMergePolicy#setSegmentsPerTier(double).mjava","sourceNew":"  /** Sets the allowed number of segments per tier.  Smaller\n   *  values mean more merging but fewer segments.\n   *\n   *  <p>Default is 10.0.</p> */\n  public TieredMergePolicy setSegmentsPerTier(double v) {\n    if (v < 2.0) {\n      throw new IllegalArgumentException(\"segmentsPerTier must be >= 2.0 (got \" + v + \")\");\n    }\n    segsPerTier = v;\n    return this;\n  }\n\n","sourceOld":"  /** Sets the allowed number of segments per tier.  Smaller\n   *  values mean more merging but fewer segments.\n   *\n   *  <p><b>NOTE</b>: this value should be {@code >=} the {@link\n   *  #setMaxMergeAtOnce} otherwise you'll force too much\n   *  merging to occur.</p>\n   *\n   *  <p>Default is 10.0.</p> */\n  public TieredMergePolicy setSegmentsPerTier(double v) {\n    if (v < 2.0) {\n      throw new IllegalArgumentException(\"segmentsPerTier must be >= 2.0 (got \" + v + \")\");\n    }\n    segsPerTier = v;\n    return this;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","date":1531905561,"type":3,"author":"Alessandro Benedetti","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/TieredMergePolicy#setSegmentsPerTier(double).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/TieredMergePolicy#setSegmentsPerTier(double).mjava","sourceNew":"  /** Sets the allowed number of segments per tier.  Smaller\n   *  values mean more merging but fewer segments.\n   *\n   *  <p>Default is 10.0.</p> */\n  public TieredMergePolicy setSegmentsPerTier(double v) {\n    if (v < 2.0) {\n      throw new IllegalArgumentException(\"segmentsPerTier must be >= 2.0 (got \" + v + \")\");\n    }\n    segsPerTier = v;\n    return this;\n  }\n\n","sourceOld":"  /** Sets the allowed number of segments per tier.  Smaller\n   *  values mean more merging but fewer segments.\n   *\n   *  <p><b>NOTE</b>: this value should be {@code >=} the {@link\n   *  #setMaxMergeAtOnce} otherwise you'll force too much\n   *  merging to occur.</p>\n   *\n   *  <p>Default is 10.0.</p> */\n  public TieredMergePolicy setSegmentsPerTier(double v) {\n    if (v < 2.0) {\n      throw new IllegalArgumentException(\"segmentsPerTier must be >= 2.0 (got \" + v + \")\");\n    }\n    segsPerTier = v;\n    return this;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b1eb427f2c6beed80d1724555fc1db003ccf3030":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"9707a68fe260631e514201dbf24e9afc9a3a4ba1":["b1eb427f2c6beed80d1724555fc1db003ccf3030"],"0efc9f2cae117418f13ba9035f5e1d516ea7a2b5":["b1eb427f2c6beed80d1724555fc1db003ccf3030","9707a68fe260631e514201dbf24e9afc9a3a4ba1"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9707a68fe260631e514201dbf24e9afc9a3a4ba1"],"7eeaaea0106c7d6a2de50acfc8d357121ef8bd26":["b1eb427f2c6beed80d1724555fc1db003ccf3030","9707a68fe260631e514201dbf24e9afc9a3a4ba1"]},"commit2Childs":{"b1eb427f2c6beed80d1724555fc1db003ccf3030":["9707a68fe260631e514201dbf24e9afc9a3a4ba1","0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","7eeaaea0106c7d6a2de50acfc8d357121ef8bd26"],"9707a68fe260631e514201dbf24e9afc9a3a4ba1":["0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","cd5edd1f2b162a5cfa08efd17851a07373a96817","7eeaaea0106c7d6a2de50acfc8d357121ef8bd26"],"0efc9f2cae117418f13ba9035f5e1d516ea7a2b5":[],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["b1eb427f2c6beed80d1724555fc1db003ccf3030"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"7eeaaea0106c7d6a2de50acfc8d357121ef8bd26":[]},"heads":["0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","cd5edd1f2b162a5cfa08efd17851a07373a96817","7eeaaea0106c7d6a2de50acfc8d357121ef8bd26"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}