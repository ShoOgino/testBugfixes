{"path":"solr/core/src/test/org/apache/solr/TestRandomDVFaceting#init().mjava","commits":[{"id":"a9cc184ce59bfe09f739d9aaa34fdb28ddc738c3","date":1361894345,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/TestRandomDVFaceting#init().mjava","pathOld":"/dev/null","sourceNew":"  void init() {\n    Random rand = random();\n    clearIndex();\n    model = null;\n    indexSize = rand.nextBoolean() ? (rand.nextInt(10) + 1) : (rand.nextInt(100) + 10);\n\n    types = new ArrayList<FldType>();\n    types.add(new FldType(\"id\",ONE_ONE, new SVal('A','Z',4,4)));\n    types.add(new FldType(\"score_f\",ONE_ONE, new FVal(1,100)));\n    types.add(new FldType(\"foo_i\",ZERO_ONE, new IRange(0,indexSize)));\n    types.add(new FldType(\"small_s\",ZERO_ONE, new SVal('a',(char)('c'+indexSize/3),1,1)));\n    types.add(new FldType(\"small2_s\",ZERO_ONE, new SVal('a',(char)('c'+indexSize/3),1,1)));\n    types.add(new FldType(\"small2_ss\",ZERO_TWO, new SVal('a',(char)('c'+indexSize/3),1,1)));\n    types.add(new FldType(\"small3_ss\",new IRange(0,25), new SVal('A','z',1,1)));\n    types.add(new FldType(\"small_i\",ZERO_ONE, new IRange(0,5+indexSize/3)));\n    types.add(new FldType(\"small2_i\",ZERO_ONE, new IRange(0,5+indexSize/3)));\n    types.add(new FldType(\"small2_is\",ZERO_TWO, new IRange(0,5+indexSize/3)));\n    types.add(new FldType(\"small3_is\",new IRange(0,25), new IRange(0,100)));\n\n    types.add(new FldType(\"missing_i\",new IRange(0,0), new IRange(0,100)));\n    types.add(new FldType(\"missing_is\",new IRange(0,0), new IRange(0,100)));\n    types.add(new FldType(\"missing_s\",new IRange(0,0), new SVal('a','b',1,1)));\n    types.add(new FldType(\"missing_ss\",new IRange(0,0), new SVal('a','b',1,1)));\n\n    // TODO: doubles, multi-floats, ints with precisionStep>0, booleans\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ded1061b23ea6e38a649b2342334ad8c9000a855","date":1382622760,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/TestRandomDVFaceting#init().mjava","pathOld":"solr/core/src/test/org/apache/solr/TestRandomDVFaceting#init().mjava","sourceNew":"  void init() {\n    Random rand = random();\n    clearIndex();\n    model = null;\n    indexSize = rand.nextBoolean() ? (rand.nextInt(10) + 1) : (rand.nextInt(100) + 10);\n\n    types = new ArrayList<FldType>();\n    types.add(new FldType(\"id\",ONE_ONE, new SVal('A','Z',4,4)));\n    types.add(new FldType(\"score_f\",ONE_ONE, new FVal(1,100)));\n    types.add(new FldType(\"foo_i\",ZERO_ONE, new IRange(0,indexSize)));\n    types.add(new FldType(\"small_s\",ZERO_ONE, new SVal('a',(char)('c'+indexSize/3),1,1)));\n    types.add(new FldType(\"small2_s\",ZERO_ONE, new SVal('a',(char)('c'+indexSize/3),1,1)));\n    types.add(new FldType(\"small2_ss\",ZERO_TWO, new SVal('a',(char)('c'+indexSize/3),1,1)));\n    types.add(new FldType(\"small3_ss\",new IRange(0,25), new SVal('A','z',1,1)));\n    types.add(new FldType(\"small4_ss\",ZERO_ONE, new SVal('a',(char)('c'+indexSize/3),1,1))); // to test specialization when a multi-valued field is actually single-valued\n    types.add(new FldType(\"small_i\",ZERO_ONE, new IRange(0,5+indexSize/3)));\n    types.add(new FldType(\"small2_i\",ZERO_ONE, new IRange(0,5+indexSize/3)));\n    types.add(new FldType(\"small2_is\",ZERO_TWO, new IRange(0,5+indexSize/3)));\n    types.add(new FldType(\"small3_is\",new IRange(0,25), new IRange(0,100)));\n\n    types.add(new FldType(\"missing_i\",new IRange(0,0), new IRange(0,100)));\n    types.add(new FldType(\"missing_is\",new IRange(0,0), new IRange(0,100)));\n    types.add(new FldType(\"missing_s\",new IRange(0,0), new SVal('a','b',1,1)));\n    types.add(new FldType(\"missing_ss\",new IRange(0,0), new SVal('a','b',1,1)));\n\n    // TODO: doubles, multi-floats, ints with precisionStep>0, booleans\n  }\n\n","sourceOld":"  void init() {\n    Random rand = random();\n    clearIndex();\n    model = null;\n    indexSize = rand.nextBoolean() ? (rand.nextInt(10) + 1) : (rand.nextInt(100) + 10);\n\n    types = new ArrayList<FldType>();\n    types.add(new FldType(\"id\",ONE_ONE, new SVal('A','Z',4,4)));\n    types.add(new FldType(\"score_f\",ONE_ONE, new FVal(1,100)));\n    types.add(new FldType(\"foo_i\",ZERO_ONE, new IRange(0,indexSize)));\n    types.add(new FldType(\"small_s\",ZERO_ONE, new SVal('a',(char)('c'+indexSize/3),1,1)));\n    types.add(new FldType(\"small2_s\",ZERO_ONE, new SVal('a',(char)('c'+indexSize/3),1,1)));\n    types.add(new FldType(\"small2_ss\",ZERO_TWO, new SVal('a',(char)('c'+indexSize/3),1,1)));\n    types.add(new FldType(\"small3_ss\",new IRange(0,25), new SVal('A','z',1,1)));\n    types.add(new FldType(\"small_i\",ZERO_ONE, new IRange(0,5+indexSize/3)));\n    types.add(new FldType(\"small2_i\",ZERO_ONE, new IRange(0,5+indexSize/3)));\n    types.add(new FldType(\"small2_is\",ZERO_TWO, new IRange(0,5+indexSize/3)));\n    types.add(new FldType(\"small3_is\",new IRange(0,25), new IRange(0,100)));\n\n    types.add(new FldType(\"missing_i\",new IRange(0,0), new IRange(0,100)));\n    types.add(new FldType(\"missing_is\",new IRange(0,0), new IRange(0,100)));\n    types.add(new FldType(\"missing_s\",new IRange(0,0), new SVal('a','b',1,1)));\n    types.add(new FldType(\"missing_ss\",new IRange(0,0), new SVal('a','b',1,1)));\n\n    // TODO: doubles, multi-floats, ints with precisionStep>0, booleans\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"634f330c54fd3f9f491d52036dc3f40b4f4d8934","date":1394635157,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/TestRandomDVFaceting#init().mjava","pathOld":"solr/core/src/test/org/apache/solr/TestRandomDVFaceting#init().mjava","sourceNew":"  void init() {\n    Random rand = random();\n    clearIndex();\n    model = null;\n    indexSize = rand.nextBoolean() ? (rand.nextInt(10) + 1) : (rand.nextInt(100) + 10);\n\n    types = new ArrayList<>();\n    types.add(new FldType(\"id\",ONE_ONE, new SVal('A','Z',4,4)));\n    types.add(new FldType(\"score_f\",ONE_ONE, new FVal(1,100)));\n    types.add(new FldType(\"foo_i\",ZERO_ONE, new IRange(0,indexSize)));\n    types.add(new FldType(\"small_s\",ZERO_ONE, new SVal('a',(char)('c'+indexSize/3),1,1)));\n    types.add(new FldType(\"small2_s\",ZERO_ONE, new SVal('a',(char)('c'+indexSize/3),1,1)));\n    types.add(new FldType(\"small2_ss\",ZERO_TWO, new SVal('a',(char)('c'+indexSize/3),1,1)));\n    types.add(new FldType(\"small3_ss\",new IRange(0,25), new SVal('A','z',1,1)));\n    types.add(new FldType(\"small4_ss\",ZERO_ONE, new SVal('a',(char)('c'+indexSize/3),1,1))); // to test specialization when a multi-valued field is actually single-valued\n    types.add(new FldType(\"small_i\",ZERO_ONE, new IRange(0,5+indexSize/3)));\n    types.add(new FldType(\"small2_i\",ZERO_ONE, new IRange(0,5+indexSize/3)));\n    types.add(new FldType(\"small2_is\",ZERO_TWO, new IRange(0,5+indexSize/3)));\n    types.add(new FldType(\"small3_is\",new IRange(0,25), new IRange(0,100)));\n\n    types.add(new FldType(\"missing_i\",new IRange(0,0), new IRange(0,100)));\n    types.add(new FldType(\"missing_is\",new IRange(0,0), new IRange(0,100)));\n    types.add(new FldType(\"missing_s\",new IRange(0,0), new SVal('a','b',1,1)));\n    types.add(new FldType(\"missing_ss\",new IRange(0,0), new SVal('a','b',1,1)));\n\n    // TODO: doubles, multi-floats, ints with precisionStep>0, booleans\n  }\n\n","sourceOld":"  void init() {\n    Random rand = random();\n    clearIndex();\n    model = null;\n    indexSize = rand.nextBoolean() ? (rand.nextInt(10) + 1) : (rand.nextInt(100) + 10);\n\n    types = new ArrayList<FldType>();\n    types.add(new FldType(\"id\",ONE_ONE, new SVal('A','Z',4,4)));\n    types.add(new FldType(\"score_f\",ONE_ONE, new FVal(1,100)));\n    types.add(new FldType(\"foo_i\",ZERO_ONE, new IRange(0,indexSize)));\n    types.add(new FldType(\"small_s\",ZERO_ONE, new SVal('a',(char)('c'+indexSize/3),1,1)));\n    types.add(new FldType(\"small2_s\",ZERO_ONE, new SVal('a',(char)('c'+indexSize/3),1,1)));\n    types.add(new FldType(\"small2_ss\",ZERO_TWO, new SVal('a',(char)('c'+indexSize/3),1,1)));\n    types.add(new FldType(\"small3_ss\",new IRange(0,25), new SVal('A','z',1,1)));\n    types.add(new FldType(\"small4_ss\",ZERO_ONE, new SVal('a',(char)('c'+indexSize/3),1,1))); // to test specialization when a multi-valued field is actually single-valued\n    types.add(new FldType(\"small_i\",ZERO_ONE, new IRange(0,5+indexSize/3)));\n    types.add(new FldType(\"small2_i\",ZERO_ONE, new IRange(0,5+indexSize/3)));\n    types.add(new FldType(\"small2_is\",ZERO_TWO, new IRange(0,5+indexSize/3)));\n    types.add(new FldType(\"small3_is\",new IRange(0,25), new IRange(0,100)));\n\n    types.add(new FldType(\"missing_i\",new IRange(0,0), new IRange(0,100)));\n    types.add(new FldType(\"missing_is\",new IRange(0,0), new IRange(0,100)));\n    types.add(new FldType(\"missing_s\",new IRange(0,0), new SVal('a','b',1,1)));\n    types.add(new FldType(\"missing_ss\",new IRange(0,0), new SVal('a','b',1,1)));\n\n    // TODO: doubles, multi-floats, ints with precisionStep>0, booleans\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"46dc9ac8b3e748407baaef82453138ff3974480c","date":1484789241,"type":3,"author":"Tomas Fernandez Lobbe","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/TestRandomDVFaceting#init().mjava","pathOld":"solr/core/src/test/org/apache/solr/TestRandomDVFaceting#init().mjava","sourceNew":"  void init() {\n    Random rand = random();\n    clearIndex();\n    model = null;\n    indexSize = rand.nextBoolean() ? (rand.nextInt(10) + 1) : (rand.nextInt(100) + 10);\n\n    types = new ArrayList<>();\n    types.add(new FldType(\"id\",ONE_ONE, new SVal('A','Z',4,4)));\n    types.add(new FldType(\"score_f\",ONE_ONE, new FVal(1,100)));\n    types.add(new FldType(\"score_d\",ONE_ONE, new FVal(1,100)));\n    types.add(new FldType(\"foo_i\",ZERO_ONE, new IRange(0,indexSize)));\n    types.add(new FldType(\"foo_l\",ZERO_ONE, new IRange(0,indexSize)));\n    types.add(new FldType(\"small_s\",ZERO_ONE, new SVal('a',(char)('c'+indexSize/3),1,1)));\n    types.add(new FldType(\"small2_s\",ZERO_ONE, new SVal('a',(char)('c'+indexSize/3),1,1)));\n    types.add(new FldType(\"small2_ss\",ZERO_TWO, new SVal('a',(char)('c'+indexSize/3),1,1)));\n    types.add(new FldType(\"small3_ss\",new IRange(0,25), new SVal('A','z',1,1)));\n    types.add(new FldType(\"small4_ss\",ZERO_ONE, new SVal('a',(char)('c'+indexSize/3),1,1))); // to test specialization when a multi-valued field is actually single-valued\n    types.add(new FldType(\"small_i\",ZERO_ONE, new IRange(0,5+indexSize/3)));\n    types.add(new FldType(\"small2_i\",ZERO_ONE, new IRange(0,5+indexSize/3)));\n    types.add(new FldType(\"small2_is\",ZERO_TWO, new IRange(0,5+indexSize/3)));\n    types.add(new FldType(\"small3_is\",new IRange(0,25), new IRange(0,100)));\n\n    types.add(new FldType(\"missing_i\",new IRange(0,0), new IRange(0,100)));\n    types.add(new FldType(\"missing_is\",new IRange(0,0), new IRange(0,100)));\n    types.add(new FldType(\"missing_s\",new IRange(0,0), new SVal('a','b',1,1)));\n    types.add(new FldType(\"missing_ss\",new IRange(0,0), new SVal('a','b',1,1)));\n\n    // TODO: doubles, multi-floats, ints with precisionStep>0, booleans\n  }\n\n","sourceOld":"  void init() {\n    Random rand = random();\n    clearIndex();\n    model = null;\n    indexSize = rand.nextBoolean() ? (rand.nextInt(10) + 1) : (rand.nextInt(100) + 10);\n\n    types = new ArrayList<>();\n    types.add(new FldType(\"id\",ONE_ONE, new SVal('A','Z',4,4)));\n    types.add(new FldType(\"score_f\",ONE_ONE, new FVal(1,100)));\n    types.add(new FldType(\"foo_i\",ZERO_ONE, new IRange(0,indexSize)));\n    types.add(new FldType(\"small_s\",ZERO_ONE, new SVal('a',(char)('c'+indexSize/3),1,1)));\n    types.add(new FldType(\"small2_s\",ZERO_ONE, new SVal('a',(char)('c'+indexSize/3),1,1)));\n    types.add(new FldType(\"small2_ss\",ZERO_TWO, new SVal('a',(char)('c'+indexSize/3),1,1)));\n    types.add(new FldType(\"small3_ss\",new IRange(0,25), new SVal('A','z',1,1)));\n    types.add(new FldType(\"small4_ss\",ZERO_ONE, new SVal('a',(char)('c'+indexSize/3),1,1))); // to test specialization when a multi-valued field is actually single-valued\n    types.add(new FldType(\"small_i\",ZERO_ONE, new IRange(0,5+indexSize/3)));\n    types.add(new FldType(\"small2_i\",ZERO_ONE, new IRange(0,5+indexSize/3)));\n    types.add(new FldType(\"small2_is\",ZERO_TWO, new IRange(0,5+indexSize/3)));\n    types.add(new FldType(\"small3_is\",new IRange(0,25), new IRange(0,100)));\n\n    types.add(new FldType(\"missing_i\",new IRange(0,0), new IRange(0,100)));\n    types.add(new FldType(\"missing_is\",new IRange(0,0), new IRange(0,100)));\n    types.add(new FldType(\"missing_s\",new IRange(0,0), new SVal('a','b',1,1)));\n    types.add(new FldType(\"missing_ss\",new IRange(0,0), new SVal('a','b',1,1)));\n\n    // TODO: doubles, multi-floats, ints with precisionStep>0, booleans\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"90a682dc1bfd188ef61cc28373c7f5d700b4ac75","date":1485186128,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/TestRandomDVFaceting#init().mjava","pathOld":"solr/core/src/test/org/apache/solr/TestRandomDVFaceting#init().mjava","sourceNew":"  void init() {\n    Random rand = random();\n    clearIndex();\n    model = null;\n    indexSize = rand.nextBoolean() ? (rand.nextInt(10) + 1) : (rand.nextInt(100) + 10);\n\n    types = new ArrayList<>();\n    types.add(new FldType(\"id\",ONE_ONE, new SVal('A','Z',4,4)));\n    types.add(new FldType(\"score_f\",ONE_ONE, new FVal(1,100)));\n    types.add(new FldType(\"score_d\",ONE_ONE, new FVal(1,100)));\n    types.add(new FldType(\"foo_i\",ZERO_ONE, new IRange(0,indexSize)));\n    types.add(new FldType(\"foo_l\",ZERO_ONE, new IRange(0,indexSize)));\n    types.add(new FldType(\"small_s\",ZERO_ONE, new SVal('a',(char)('c'+indexSize/3),1,1)));\n    types.add(new FldType(\"small2_s\",ZERO_ONE, new SVal('a',(char)('c'+indexSize/3),1,1)));\n    types.add(new FldType(\"small2_ss\",ZERO_TWO, new SVal('a',(char)('c'+indexSize/3),1,1)));\n    types.add(new FldType(\"small3_ss\",new IRange(0,25), new SVal('A','z',1,1)));\n    types.add(new FldType(\"small4_ss\",ZERO_ONE, new SVal('a',(char)('c'+indexSize/3),1,1))); // to test specialization when a multi-valued field is actually single-valued\n    types.add(new FldType(\"small_i\",ZERO_ONE, new IRange(0,5+indexSize/3)));\n    types.add(new FldType(\"small2_i\",ZERO_ONE, new IRange(0,5+indexSize/3)));\n    types.add(new FldType(\"small2_is\",ZERO_TWO, new IRange(0,5+indexSize/3)));\n    types.add(new FldType(\"small3_is\",new IRange(0,25), new IRange(0,100)));\n\n    types.add(new FldType(\"missing_i\",new IRange(0,0), new IRange(0,100)));\n    types.add(new FldType(\"missing_is\",new IRange(0,0), new IRange(0,100)));\n    types.add(new FldType(\"missing_s\",new IRange(0,0), new SVal('a','b',1,1)));\n    types.add(new FldType(\"missing_ss\",new IRange(0,0), new SVal('a','b',1,1)));\n\n    // TODO: doubles, multi-floats, ints with precisionStep>0, booleans\n  }\n\n","sourceOld":"  void init() {\n    Random rand = random();\n    clearIndex();\n    model = null;\n    indexSize = rand.nextBoolean() ? (rand.nextInt(10) + 1) : (rand.nextInt(100) + 10);\n\n    types = new ArrayList<>();\n    types.add(new FldType(\"id\",ONE_ONE, new SVal('A','Z',4,4)));\n    types.add(new FldType(\"score_f\",ONE_ONE, new FVal(1,100)));\n    types.add(new FldType(\"foo_i\",ZERO_ONE, new IRange(0,indexSize)));\n    types.add(new FldType(\"small_s\",ZERO_ONE, new SVal('a',(char)('c'+indexSize/3),1,1)));\n    types.add(new FldType(\"small2_s\",ZERO_ONE, new SVal('a',(char)('c'+indexSize/3),1,1)));\n    types.add(new FldType(\"small2_ss\",ZERO_TWO, new SVal('a',(char)('c'+indexSize/3),1,1)));\n    types.add(new FldType(\"small3_ss\",new IRange(0,25), new SVal('A','z',1,1)));\n    types.add(new FldType(\"small4_ss\",ZERO_ONE, new SVal('a',(char)('c'+indexSize/3),1,1))); // to test specialization when a multi-valued field is actually single-valued\n    types.add(new FldType(\"small_i\",ZERO_ONE, new IRange(0,5+indexSize/3)));\n    types.add(new FldType(\"small2_i\",ZERO_ONE, new IRange(0,5+indexSize/3)));\n    types.add(new FldType(\"small2_is\",ZERO_TWO, new IRange(0,5+indexSize/3)));\n    types.add(new FldType(\"small3_is\",new IRange(0,25), new IRange(0,100)));\n\n    types.add(new FldType(\"missing_i\",new IRange(0,0), new IRange(0,100)));\n    types.add(new FldType(\"missing_is\",new IRange(0,0), new IRange(0,100)));\n    types.add(new FldType(\"missing_s\",new IRange(0,0), new SVal('a','b',1,1)));\n    types.add(new FldType(\"missing_ss\",new IRange(0,0), new SVal('a','b',1,1)));\n\n    // TODO: doubles, multi-floats, ints with precisionStep>0, booleans\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"744b111b17d15d490a648eb021bfa240e7f11556","date":1487008069,"type":3,"author":"Tomas Fernandez Lobbe","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/TestRandomDVFaceting#init().mjava","pathOld":"solr/core/src/test/org/apache/solr/TestRandomDVFaceting#init().mjava","sourceNew":"  void init() {\n    Random rand = random();\n    clearIndex();\n    model = null;\n    indexSize = rand.nextBoolean() ? (rand.nextInt(10) + 1) : (rand.nextInt(100) + 10);\n\n    types = new ArrayList<>();\n    types.add(new FldType(\"id\",ONE_ONE, new SVal('A','Z',4,4)));\n    types.add(new FldType(\"score_f\",ONE_ONE, new FVal(1,100)));\n    types.add(new FldType(\"score_d\",ONE_ONE, new FVal(1,100)));\n    types.add(new FldType(\"foo_i\",ZERO_ONE, new IRange(0,indexSize)));\n    types.add(new FldType(\"foo_l\",ZERO_ONE, new IRange(0,indexSize)));\n    types.add(new FldType(\"small_s\",ZERO_ONE, new SVal('a',(char)('c'+indexSize/3),1,1)));\n    types.add(new FldType(\"small2_s\",ZERO_ONE, new SVal('a',(char)('c'+indexSize/3),1,1)));\n    types.add(new FldType(\"small2_ss\",ZERO_TWO, new SVal('a',(char)('c'+indexSize/3),1,1)));\n    types.add(new FldType(\"small3_ss\",new IRange(0,25), new SVal('A','z',1,1)));\n    types.add(new FldType(\"small4_ss\",ZERO_ONE, new SVal('a',(char)('c'+indexSize/3),1,1))); // to test specialization when a multi-valued field is actually single-valued\n    types.add(new FldType(\"small_i\",ZERO_ONE, new IRange(0,5+indexSize/3)));\n    types.add(new FldType(\"small2_i\",ZERO_ONE, new IRange(0,5+indexSize/3)));\n    types.add(new FldType(\"small2_is\",ZERO_TWO, new IRange(0,5+indexSize/3)));\n    types.add(new FldType(\"small3_is\",new IRange(0,25), new IRange(0,100)));\n    \n    types.add(new FldType(\"foo_fs\", new IRange(0,25), new FVal(0,indexSize)));\n    types.add(new FldType(\"foo_f\", ZERO_ONE, new FVal(0,indexSize)));\n    types.add(new FldType(\"foo_ds\", new IRange(0,25), new FVal(0,indexSize)));\n    types.add(new FldType(\"foo_d\", ZERO_ONE, new FVal(0,indexSize)));\n    types.add(new FldType(\"foo_ls\", new IRange(0,25), new IRange(0,indexSize)));\n\n    types.add(new FldType(\"missing_i\",new IRange(0,0), new IRange(0,100)));\n    types.add(new FldType(\"missing_is\",new IRange(0,0), new IRange(0,100)));\n    types.add(new FldType(\"missing_s\",new IRange(0,0), new SVal('a','b',1,1)));\n    types.add(new FldType(\"missing_ss\",new IRange(0,0), new SVal('a','b',1,1)));\n\n    // TODO: doubles, multi-floats, ints with precisionStep>0, booleans\n  }\n\n","sourceOld":"  void init() {\n    Random rand = random();\n    clearIndex();\n    model = null;\n    indexSize = rand.nextBoolean() ? (rand.nextInt(10) + 1) : (rand.nextInt(100) + 10);\n\n    types = new ArrayList<>();\n    types.add(new FldType(\"id\",ONE_ONE, new SVal('A','Z',4,4)));\n    types.add(new FldType(\"score_f\",ONE_ONE, new FVal(1,100)));\n    types.add(new FldType(\"score_d\",ONE_ONE, new FVal(1,100)));\n    types.add(new FldType(\"foo_i\",ZERO_ONE, new IRange(0,indexSize)));\n    types.add(new FldType(\"foo_l\",ZERO_ONE, new IRange(0,indexSize)));\n    types.add(new FldType(\"small_s\",ZERO_ONE, new SVal('a',(char)('c'+indexSize/3),1,1)));\n    types.add(new FldType(\"small2_s\",ZERO_ONE, new SVal('a',(char)('c'+indexSize/3),1,1)));\n    types.add(new FldType(\"small2_ss\",ZERO_TWO, new SVal('a',(char)('c'+indexSize/3),1,1)));\n    types.add(new FldType(\"small3_ss\",new IRange(0,25), new SVal('A','z',1,1)));\n    types.add(new FldType(\"small4_ss\",ZERO_ONE, new SVal('a',(char)('c'+indexSize/3),1,1))); // to test specialization when a multi-valued field is actually single-valued\n    types.add(new FldType(\"small_i\",ZERO_ONE, new IRange(0,5+indexSize/3)));\n    types.add(new FldType(\"small2_i\",ZERO_ONE, new IRange(0,5+indexSize/3)));\n    types.add(new FldType(\"small2_is\",ZERO_TWO, new IRange(0,5+indexSize/3)));\n    types.add(new FldType(\"small3_is\",new IRange(0,25), new IRange(0,100)));\n\n    types.add(new FldType(\"missing_i\",new IRange(0,0), new IRange(0,100)));\n    types.add(new FldType(\"missing_is\",new IRange(0,0), new IRange(0,100)));\n    types.add(new FldType(\"missing_s\",new IRange(0,0), new SVal('a','b',1,1)));\n    types.add(new FldType(\"missing_ss\",new IRange(0,0), new SVal('a','b',1,1)));\n\n    // TODO: doubles, multi-floats, ints with precisionStep>0, booleans\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"022a4de90e0479b604264ca9c2e134c996454ab3","date":1487118265,"type":3,"author":"Noble Paul","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/TestRandomDVFaceting#init().mjava","pathOld":"solr/core/src/test/org/apache/solr/TestRandomDVFaceting#init().mjava","sourceNew":"  void init() {\n    Random rand = random();\n    clearIndex();\n    model = null;\n    indexSize = rand.nextBoolean() ? (rand.nextInt(10) + 1) : (rand.nextInt(100) + 10);\n\n    types = new ArrayList<>();\n    types.add(new FldType(\"id\",ONE_ONE, new SVal('A','Z',4,4)));\n    types.add(new FldType(\"score_f\",ONE_ONE, new FVal(1,100)));\n    types.add(new FldType(\"score_d\",ONE_ONE, new FVal(1,100)));\n    types.add(new FldType(\"foo_i\",ZERO_ONE, new IRange(0,indexSize)));\n    types.add(new FldType(\"foo_l\",ZERO_ONE, new IRange(0,indexSize)));\n    types.add(new FldType(\"small_s\",ZERO_ONE, new SVal('a',(char)('c'+indexSize/3),1,1)));\n    types.add(new FldType(\"small2_s\",ZERO_ONE, new SVal('a',(char)('c'+indexSize/3),1,1)));\n    types.add(new FldType(\"small2_ss\",ZERO_TWO, new SVal('a',(char)('c'+indexSize/3),1,1)));\n    types.add(new FldType(\"small3_ss\",new IRange(0,25), new SVal('A','z',1,1)));\n    types.add(new FldType(\"small4_ss\",ZERO_ONE, new SVal('a',(char)('c'+indexSize/3),1,1))); // to test specialization when a multi-valued field is actually single-valued\n    types.add(new FldType(\"small_i\",ZERO_ONE, new IRange(0,5+indexSize/3)));\n    types.add(new FldType(\"small2_i\",ZERO_ONE, new IRange(0,5+indexSize/3)));\n    types.add(new FldType(\"small2_is\",ZERO_TWO, new IRange(0,5+indexSize/3)));\n    types.add(new FldType(\"small3_is\",new IRange(0,25), new IRange(0,100)));\n    \n    types.add(new FldType(\"foo_fs\", new IRange(0,25), new FVal(0,indexSize)));\n    types.add(new FldType(\"foo_f\", ZERO_ONE, new FVal(0,indexSize)));\n    types.add(new FldType(\"foo_ds\", new IRange(0,25), new FVal(0,indexSize)));\n    types.add(new FldType(\"foo_d\", ZERO_ONE, new FVal(0,indexSize)));\n    types.add(new FldType(\"foo_ls\", new IRange(0,25), new IRange(0,indexSize)));\n\n    types.add(new FldType(\"missing_i\",new IRange(0,0), new IRange(0,100)));\n    types.add(new FldType(\"missing_is\",new IRange(0,0), new IRange(0,100)));\n    types.add(new FldType(\"missing_s\",new IRange(0,0), new SVal('a','b',1,1)));\n    types.add(new FldType(\"missing_ss\",new IRange(0,0), new SVal('a','b',1,1)));\n\n    // TODO: doubles, multi-floats, ints with precisionStep>0, booleans\n  }\n\n","sourceOld":"  void init() {\n    Random rand = random();\n    clearIndex();\n    model = null;\n    indexSize = rand.nextBoolean() ? (rand.nextInt(10) + 1) : (rand.nextInt(100) + 10);\n\n    types = new ArrayList<>();\n    types.add(new FldType(\"id\",ONE_ONE, new SVal('A','Z',4,4)));\n    types.add(new FldType(\"score_f\",ONE_ONE, new FVal(1,100)));\n    types.add(new FldType(\"score_d\",ONE_ONE, new FVal(1,100)));\n    types.add(new FldType(\"foo_i\",ZERO_ONE, new IRange(0,indexSize)));\n    types.add(new FldType(\"foo_l\",ZERO_ONE, new IRange(0,indexSize)));\n    types.add(new FldType(\"small_s\",ZERO_ONE, new SVal('a',(char)('c'+indexSize/3),1,1)));\n    types.add(new FldType(\"small2_s\",ZERO_ONE, new SVal('a',(char)('c'+indexSize/3),1,1)));\n    types.add(new FldType(\"small2_ss\",ZERO_TWO, new SVal('a',(char)('c'+indexSize/3),1,1)));\n    types.add(new FldType(\"small3_ss\",new IRange(0,25), new SVal('A','z',1,1)));\n    types.add(new FldType(\"small4_ss\",ZERO_ONE, new SVal('a',(char)('c'+indexSize/3),1,1))); // to test specialization when a multi-valued field is actually single-valued\n    types.add(new FldType(\"small_i\",ZERO_ONE, new IRange(0,5+indexSize/3)));\n    types.add(new FldType(\"small2_i\",ZERO_ONE, new IRange(0,5+indexSize/3)));\n    types.add(new FldType(\"small2_is\",ZERO_TWO, new IRange(0,5+indexSize/3)));\n    types.add(new FldType(\"small3_is\",new IRange(0,25), new IRange(0,100)));\n\n    types.add(new FldType(\"missing_i\",new IRange(0,0), new IRange(0,100)));\n    types.add(new FldType(\"missing_is\",new IRange(0,0), new IRange(0,100)));\n    types.add(new FldType(\"missing_s\",new IRange(0,0), new SVal('a','b',1,1)));\n    types.add(new FldType(\"missing_ss\",new IRange(0,0), new SVal('a','b',1,1)));\n\n    // TODO: doubles, multi-floats, ints with precisionStep>0, booleans\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b49c0eb9ef7bc25609a89e7986ce7e6eeb9c9d96","date":1487122334,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/TestRandomDVFaceting#init().mjava","pathOld":"solr/core/src/test/org/apache/solr/TestRandomDVFaceting#init().mjava","sourceNew":"  void init() {\n    Random rand = random();\n    clearIndex();\n    model = null;\n    indexSize = rand.nextBoolean() ? (rand.nextInt(10) + 1) : (rand.nextInt(100) + 10);\n\n    types = new ArrayList<>();\n    types.add(new FldType(\"id\",ONE_ONE, new SVal('A','Z',4,4)));\n    types.add(new FldType(\"score_f\",ONE_ONE, new FVal(1,100)));\n    types.add(new FldType(\"score_d\",ONE_ONE, new FVal(1,100)));\n    types.add(new FldType(\"foo_i\",ZERO_ONE, new IRange(0,indexSize)));\n    types.add(new FldType(\"foo_l\",ZERO_ONE, new IRange(0,indexSize)));\n    types.add(new FldType(\"small_s\",ZERO_ONE, new SVal('a',(char)('c'+indexSize/3),1,1)));\n    types.add(new FldType(\"small2_s\",ZERO_ONE, new SVal('a',(char)('c'+indexSize/3),1,1)));\n    types.add(new FldType(\"small2_ss\",ZERO_TWO, new SVal('a',(char)('c'+indexSize/3),1,1)));\n    types.add(new FldType(\"small3_ss\",new IRange(0,25), new SVal('A','z',1,1)));\n    types.add(new FldType(\"small4_ss\",ZERO_ONE, new SVal('a',(char)('c'+indexSize/3),1,1))); // to test specialization when a multi-valued field is actually single-valued\n    types.add(new FldType(\"small_i\",ZERO_ONE, new IRange(0,5+indexSize/3)));\n    types.add(new FldType(\"small2_i\",ZERO_ONE, new IRange(0,5+indexSize/3)));\n    types.add(new FldType(\"small2_is\",ZERO_TWO, new IRange(0,5+indexSize/3)));\n    types.add(new FldType(\"small3_is\",new IRange(0,25), new IRange(0,100)));\n\n    types.add(new FldType(\"missing_i\",new IRange(0,0), new IRange(0,100)));\n    types.add(new FldType(\"missing_is\",new IRange(0,0), new IRange(0,100)));\n    types.add(new FldType(\"missing_s\",new IRange(0,0), new SVal('a','b',1,1)));\n    types.add(new FldType(\"missing_ss\",new IRange(0,0), new SVal('a','b',1,1)));\n\n    // TODO: doubles, multi-floats, ints with precisionStep>0, booleans\n  }\n\n","sourceOld":"  void init() {\n    Random rand = random();\n    clearIndex();\n    model = null;\n    indexSize = rand.nextBoolean() ? (rand.nextInt(10) + 1) : (rand.nextInt(100) + 10);\n\n    types = new ArrayList<>();\n    types.add(new FldType(\"id\",ONE_ONE, new SVal('A','Z',4,4)));\n    types.add(new FldType(\"score_f\",ONE_ONE, new FVal(1,100)));\n    types.add(new FldType(\"score_d\",ONE_ONE, new FVal(1,100)));\n    types.add(new FldType(\"foo_i\",ZERO_ONE, new IRange(0,indexSize)));\n    types.add(new FldType(\"foo_l\",ZERO_ONE, new IRange(0,indexSize)));\n    types.add(new FldType(\"small_s\",ZERO_ONE, new SVal('a',(char)('c'+indexSize/3),1,1)));\n    types.add(new FldType(\"small2_s\",ZERO_ONE, new SVal('a',(char)('c'+indexSize/3),1,1)));\n    types.add(new FldType(\"small2_ss\",ZERO_TWO, new SVal('a',(char)('c'+indexSize/3),1,1)));\n    types.add(new FldType(\"small3_ss\",new IRange(0,25), new SVal('A','z',1,1)));\n    types.add(new FldType(\"small4_ss\",ZERO_ONE, new SVal('a',(char)('c'+indexSize/3),1,1))); // to test specialization when a multi-valued field is actually single-valued\n    types.add(new FldType(\"small_i\",ZERO_ONE, new IRange(0,5+indexSize/3)));\n    types.add(new FldType(\"small2_i\",ZERO_ONE, new IRange(0,5+indexSize/3)));\n    types.add(new FldType(\"small2_is\",ZERO_TWO, new IRange(0,5+indexSize/3)));\n    types.add(new FldType(\"small3_is\",new IRange(0,25), new IRange(0,100)));\n    \n    types.add(new FldType(\"foo_fs\", new IRange(0,25), new FVal(0,indexSize)));\n    types.add(new FldType(\"foo_f\", ZERO_ONE, new FVal(0,indexSize)));\n    types.add(new FldType(\"foo_ds\", new IRange(0,25), new FVal(0,indexSize)));\n    types.add(new FldType(\"foo_d\", ZERO_ONE, new FVal(0,indexSize)));\n    types.add(new FldType(\"foo_ls\", new IRange(0,25), new IRange(0,indexSize)));\n\n    types.add(new FldType(\"missing_i\",new IRange(0,0), new IRange(0,100)));\n    types.add(new FldType(\"missing_is\",new IRange(0,0), new IRange(0,100)));\n    types.add(new FldType(\"missing_s\",new IRange(0,0), new SVal('a','b',1,1)));\n    types.add(new FldType(\"missing_ss\",new IRange(0,0), new SVal('a','b',1,1)));\n\n    // TODO: doubles, multi-floats, ints with precisionStep>0, booleans\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"897b06b1364bd1f658a8be7591e43f0851458e7f","date":1487123008,"type":3,"author":"Ishan Chattopadhyaya","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/TestRandomDVFaceting#init().mjava","pathOld":"solr/core/src/test/org/apache/solr/TestRandomDVFaceting#init().mjava","sourceNew":"  void init() {\n    Random rand = random();\n    clearIndex();\n    model = null;\n    indexSize = rand.nextBoolean() ? (rand.nextInt(10) + 1) : (rand.nextInt(100) + 10);\n\n    types = new ArrayList<>();\n    types.add(new FldType(\"id\",ONE_ONE, new SVal('A','Z',4,4)));\n    types.add(new FldType(\"score_f\",ONE_ONE, new FVal(1,100)));\n    types.add(new FldType(\"score_d\",ONE_ONE, new FVal(1,100)));\n    types.add(new FldType(\"foo_i\",ZERO_ONE, new IRange(0,indexSize)));\n    types.add(new FldType(\"foo_l\",ZERO_ONE, new IRange(0,indexSize)));\n    types.add(new FldType(\"small_s\",ZERO_ONE, new SVal('a',(char)('c'+indexSize/3),1,1)));\n    types.add(new FldType(\"small2_s\",ZERO_ONE, new SVal('a',(char)('c'+indexSize/3),1,1)));\n    types.add(new FldType(\"small2_ss\",ZERO_TWO, new SVal('a',(char)('c'+indexSize/3),1,1)));\n    types.add(new FldType(\"small3_ss\",new IRange(0,25), new SVal('A','z',1,1)));\n    types.add(new FldType(\"small4_ss\",ZERO_ONE, new SVal('a',(char)('c'+indexSize/3),1,1))); // to test specialization when a multi-valued field is actually single-valued\n    types.add(new FldType(\"small_i\",ZERO_ONE, new IRange(0,5+indexSize/3)));\n    types.add(new FldType(\"small2_i\",ZERO_ONE, new IRange(0,5+indexSize/3)));\n    types.add(new FldType(\"small2_is\",ZERO_TWO, new IRange(0,5+indexSize/3)));\n    types.add(new FldType(\"small3_is\",new IRange(0,25), new IRange(0,100)));\n    \n    types.add(new FldType(\"foo_fs\", new IRange(0,25), new FVal(0,indexSize)));\n    types.add(new FldType(\"foo_f\", ZERO_ONE, new FVal(0,indexSize)));\n    types.add(new FldType(\"foo_ds\", new IRange(0,25), new FVal(0,indexSize)));\n    types.add(new FldType(\"foo_d\", ZERO_ONE, new FVal(0,indexSize)));\n    types.add(new FldType(\"foo_ls\", new IRange(0,25), new IRange(0,indexSize)));\n\n    types.add(new FldType(\"missing_i\",new IRange(0,0), new IRange(0,100)));\n    types.add(new FldType(\"missing_is\",new IRange(0,0), new IRange(0,100)));\n    types.add(new FldType(\"missing_s\",new IRange(0,0), new SVal('a','b',1,1)));\n    types.add(new FldType(\"missing_ss\",new IRange(0,0), new SVal('a','b',1,1)));\n\n    // TODO: doubles, multi-floats, ints with precisionStep>0, booleans\n  }\n\n","sourceOld":"  void init() {\n    Random rand = random();\n    clearIndex();\n    model = null;\n    indexSize = rand.nextBoolean() ? (rand.nextInt(10) + 1) : (rand.nextInt(100) + 10);\n\n    types = new ArrayList<>();\n    types.add(new FldType(\"id\",ONE_ONE, new SVal('A','Z',4,4)));\n    types.add(new FldType(\"score_f\",ONE_ONE, new FVal(1,100)));\n    types.add(new FldType(\"score_d\",ONE_ONE, new FVal(1,100)));\n    types.add(new FldType(\"foo_i\",ZERO_ONE, new IRange(0,indexSize)));\n    types.add(new FldType(\"foo_l\",ZERO_ONE, new IRange(0,indexSize)));\n    types.add(new FldType(\"small_s\",ZERO_ONE, new SVal('a',(char)('c'+indexSize/3),1,1)));\n    types.add(new FldType(\"small2_s\",ZERO_ONE, new SVal('a',(char)('c'+indexSize/3),1,1)));\n    types.add(new FldType(\"small2_ss\",ZERO_TWO, new SVal('a',(char)('c'+indexSize/3),1,1)));\n    types.add(new FldType(\"small3_ss\",new IRange(0,25), new SVal('A','z',1,1)));\n    types.add(new FldType(\"small4_ss\",ZERO_ONE, new SVal('a',(char)('c'+indexSize/3),1,1))); // to test specialization when a multi-valued field is actually single-valued\n    types.add(new FldType(\"small_i\",ZERO_ONE, new IRange(0,5+indexSize/3)));\n    types.add(new FldType(\"small2_i\",ZERO_ONE, new IRange(0,5+indexSize/3)));\n    types.add(new FldType(\"small2_is\",ZERO_TWO, new IRange(0,5+indexSize/3)));\n    types.add(new FldType(\"small3_is\",new IRange(0,25), new IRange(0,100)));\n\n    types.add(new FldType(\"missing_i\",new IRange(0,0), new IRange(0,100)));\n    types.add(new FldType(\"missing_is\",new IRange(0,0), new IRange(0,100)));\n    types.add(new FldType(\"missing_s\",new IRange(0,0), new SVal('a','b',1,1)));\n    types.add(new FldType(\"missing_ss\",new IRange(0,0), new SVal('a','b',1,1)));\n\n    // TODO: doubles, multi-floats, ints with precisionStep>0, booleans\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b49c0eb9ef7bc25609a89e7986ce7e6eeb9c9d96":["022a4de90e0479b604264ca9c2e134c996454ab3"],"a9cc184ce59bfe09f739d9aaa34fdb28ddc738c3":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"634f330c54fd3f9f491d52036dc3f40b4f4d8934":["ded1061b23ea6e38a649b2342334ad8c9000a855"],"ded1061b23ea6e38a649b2342334ad8c9000a855":["a9cc184ce59bfe09f739d9aaa34fdb28ddc738c3"],"022a4de90e0479b604264ca9c2e134c996454ab3":["46dc9ac8b3e748407baaef82453138ff3974480c","744b111b17d15d490a648eb021bfa240e7f11556"],"897b06b1364bd1f658a8be7591e43f0851458e7f":["b49c0eb9ef7bc25609a89e7986ce7e6eeb9c9d96"],"46dc9ac8b3e748407baaef82453138ff3974480c":["634f330c54fd3f9f491d52036dc3f40b4f4d8934"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"744b111b17d15d490a648eb021bfa240e7f11556":["46dc9ac8b3e748407baaef82453138ff3974480c"],"90a682dc1bfd188ef61cc28373c7f5d700b4ac75":["634f330c54fd3f9f491d52036dc3f40b4f4d8934","46dc9ac8b3e748407baaef82453138ff3974480c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["897b06b1364bd1f658a8be7591e43f0851458e7f"]},"commit2Childs":{"b49c0eb9ef7bc25609a89e7986ce7e6eeb9c9d96":["897b06b1364bd1f658a8be7591e43f0851458e7f"],"a9cc184ce59bfe09f739d9aaa34fdb28ddc738c3":["ded1061b23ea6e38a649b2342334ad8c9000a855"],"634f330c54fd3f9f491d52036dc3f40b4f4d8934":["46dc9ac8b3e748407baaef82453138ff3974480c","90a682dc1bfd188ef61cc28373c7f5d700b4ac75"],"ded1061b23ea6e38a649b2342334ad8c9000a855":["634f330c54fd3f9f491d52036dc3f40b4f4d8934"],"022a4de90e0479b604264ca9c2e134c996454ab3":["b49c0eb9ef7bc25609a89e7986ce7e6eeb9c9d96"],"897b06b1364bd1f658a8be7591e43f0851458e7f":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"46dc9ac8b3e748407baaef82453138ff3974480c":["022a4de90e0479b604264ca9c2e134c996454ab3","744b111b17d15d490a648eb021bfa240e7f11556","90a682dc1bfd188ef61cc28373c7f5d700b4ac75"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["a9cc184ce59bfe09f739d9aaa34fdb28ddc738c3"],"744b111b17d15d490a648eb021bfa240e7f11556":["022a4de90e0479b604264ca9c2e134c996454ab3"],"90a682dc1bfd188ef61cc28373c7f5d700b4ac75":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["90a682dc1bfd188ef61cc28373c7f5d700b4ac75","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}