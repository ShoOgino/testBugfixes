{"path":"src/java/org/apache/lucene/store/RAMInputStream[RAMDirectory]#readInternal(byte[],int,int).mjava","commits":[{"id":"91109046a59c58ee0ee5d0d2767b08d1f30d6702","date":1000830588,"type":0,"author":"Jason van Zyl","isMerge":false,"pathNew":"src/java/org/apache/lucene/store/RAMInputStream[RAMDirectory]#readInternal(byte[],int,int).mjava","pathOld":"/dev/null","sourceNew":"  /** InputStream methods */\n  public final void readInternal(byte[] dest, int destOffset, int len) {\n    int bufferNumber = pointer/InputStream.BUFFER_SIZE;\n    int bufferOffset = pointer%InputStream.BUFFER_SIZE;\n    int bytesInBuffer = InputStream.BUFFER_SIZE - bufferOffset;\n    int bytesToCopy = bytesInBuffer >= len ? len : bytesInBuffer;\n    byte[] buffer = (byte[])file.buffers.elementAt(bufferNumber);\n    System.arraycopy(buffer, bufferOffset, dest, destOffset, bytesToCopy);\n\n    if (bytesToCopy < len) {\t\t\t  // not all in one buffer\n      destOffset += bytesToCopy;\n      bytesToCopy = len - bytesToCopy;\t\t  // remaining bytes\n      buffer = (byte[])file.buffers.elementAt(bufferNumber+1);\n      System.arraycopy(buffer, 0, dest, destOffset, bytesToCopy);\n    }\n    pointer += len;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ec5d72cdd3c8a9a2a525c26e4acaf3441063ad57","date":1004487150,"type":3,"author":"Doug Cutting","isMerge":false,"pathNew":"src/java/org/apache/lucene/store/RAMInputStream[RAMDirectory]#readInternal(byte[],int,int).mjava","pathOld":"src/java/org/apache/lucene/store/RAMInputStream[RAMDirectory]#readInternal(byte[],int,int).mjava","sourceNew":"  /** InputStream methods */\n  public final void readInternal(byte[] dest, int destOffset, int len) {\n    int remainder = len;\n    int start = pointer;\n    while (remainder != 0) {\n      int bufferNumber = start/InputStream.BUFFER_SIZE;\n      int bufferOffset = start%InputStream.BUFFER_SIZE;\n      int bytesInBuffer = InputStream.BUFFER_SIZE - bufferOffset;\n      int bytesToCopy = bytesInBuffer >= remainder ? remainder : bytesInBuffer;\n      byte[] buffer = (byte[])file.buffers.elementAt(bufferNumber);\n      System.arraycopy(buffer, bufferOffset, dest, destOffset, bytesToCopy);\n      destOffset += bytesToCopy;\n      start += bytesToCopy;\n      remainder -= bytesToCopy;\n    }\n    pointer += len;\n  }\n\n","sourceOld":"  /** InputStream methods */\n  public final void readInternal(byte[] dest, int destOffset, int len) {\n    int bufferNumber = pointer/InputStream.BUFFER_SIZE;\n    int bufferOffset = pointer%InputStream.BUFFER_SIZE;\n    int bytesInBuffer = InputStream.BUFFER_SIZE - bufferOffset;\n    int bytesToCopy = bytesInBuffer >= len ? len : bytesInBuffer;\n    byte[] buffer = (byte[])file.buffers.elementAt(bufferNumber);\n    System.arraycopy(buffer, bufferOffset, dest, destOffset, bytesToCopy);\n\n    if (bytesToCopy < len) {\t\t\t  // not all in one buffer\n      destOffset += bytesToCopy;\n      bytesToCopy = len - bytesToCopy;\t\t  // remaining bytes\n      buffer = (byte[])file.buffers.elementAt(bufferNumber+1);\n      System.arraycopy(buffer, 0, dest, destOffset, bytesToCopy);\n    }\n    pointer += len;\n  }\n\n","bugFix":null,"bugIntro":["f5fd67243f95377506f3ddade7846ad939490bcb"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"15c469602973ef1a33c9a07367a380d278ffab20","date":1074206555,"type":5,"author":"Doug Cutting","isMerge":false,"pathNew":"src/java/org/apache/lucene/store/RAMInputStream#readInternal(byte[],int,int).mjava","pathOld":"src/java/org/apache/lucene/store/RAMInputStream[RAMDirectory]#readInternal(byte[],int,int).mjava","sourceNew":"  public void readInternal(byte[] dest, int destOffset, int len) {\n    int remainder = len;\n    int start = pointer;\n    while (remainder != 0) {\n      int bufferNumber = start/BUFFER_SIZE;\n      int bufferOffset = start%BUFFER_SIZE;\n      int bytesInBuffer = BUFFER_SIZE - bufferOffset;\n      int bytesToCopy = bytesInBuffer >= remainder ? remainder : bytesInBuffer;\n      byte[] buffer = (byte[])file.buffers.elementAt(bufferNumber);\n      System.arraycopy(buffer, bufferOffset, dest, destOffset, bytesToCopy);\n      destOffset += bytesToCopy;\n      start += bytesToCopy;\n      remainder -= bytesToCopy;\n    }\n    pointer += len;\n  }\n\n","sourceOld":"  /** InputStream methods */\n  public final void readInternal(byte[] dest, int destOffset, int len) {\n    int remainder = len;\n    int start = pointer;\n    while (remainder != 0) {\n      int bufferNumber = start/InputStream.BUFFER_SIZE;\n      int bufferOffset = start%InputStream.BUFFER_SIZE;\n      int bytesInBuffer = InputStream.BUFFER_SIZE - bufferOffset;\n      int bytesToCopy = bytesInBuffer >= remainder ? remainder : bytesInBuffer;\n      byte[] buffer = (byte[])file.buffers.elementAt(bufferNumber);\n      System.arraycopy(buffer, bufferOffset, dest, destOffset, bytesToCopy);\n      destOffset += bytesToCopy;\n      start += bytesToCopy;\n      remainder -= bytesToCopy;\n    }\n    pointer += len;\n  }\n\n","bugFix":null,"bugIntro":["f5fd67243f95377506f3ddade7846ad939490bcb"],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"91109046a59c58ee0ee5d0d2767b08d1f30d6702":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"ec5d72cdd3c8a9a2a525c26e4acaf3441063ad57":["91109046a59c58ee0ee5d0d2767b08d1f30d6702"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["15c469602973ef1a33c9a07367a380d278ffab20"],"15c469602973ef1a33c9a07367a380d278ffab20":["ec5d72cdd3c8a9a2a525c26e4acaf3441063ad57"]},"commit2Childs":{"91109046a59c58ee0ee5d0d2767b08d1f30d6702":["ec5d72cdd3c8a9a2a525c26e4acaf3441063ad57"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["91109046a59c58ee0ee5d0d2767b08d1f30d6702"],"ec5d72cdd3c8a9a2a525c26e4acaf3441063ad57":["15c469602973ef1a33c9a07367a380d278ffab20"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"15c469602973ef1a33c9a07367a380d278ffab20":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}