{"path":"solr/solrj/src/java/org/apache/solr/client/solrj/io/eval/CorrelationSignificanceEvaluator#doWork(Object).mjava","commits":[{"id":"2a2efb7373cfceb83cf0a7f6e38a1d4ac1833806","date":1510620286,"type":0,"author":"Joel Bernstein","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/io/eval/CorrelationSignificanceEvaluator#doWork(Object).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public Object doWork(Object value) throws IOException{\n    if(null == value){\n      return null;\n    } else if(value instanceof Matrix) {\n      Matrix matrix = (Matrix) value;\n      Object corr = matrix.getContextValue(\"corr\");\n      if(corr instanceof PearsonsCorrelation) {\n        PearsonsCorrelation pcorr = (PearsonsCorrelation)corr;\n        RealMatrix  realMatrix = pcorr.getCorrelationPValues();\n        return new Matrix(realMatrix.getData());\n      } else {\n        throw new IOException(\"Correlation pvalues are only available for Pearsons and Spearmans correlations\");\n      }\n    } else {\n      throw new IOException(\"matrix parameter expected for transpose function\");\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"21cc21dac328d94dbc79c104b8e626fca70b3f79","date":1515458383,"type":3,"author":"Joel Bernstein","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/io/eval/CorrelationSignificanceEvaluator#doWork(Object).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/io/eval/CorrelationSignificanceEvaluator#doWork(Object).mjava","sourceNew":"  @Override\n  public Object doWork(Object value) throws IOException{\n    if(null == value){\n      return null;\n    } else if(value instanceof Matrix) {\n      Matrix matrix = (Matrix) value;\n      Object corr = matrix.getAttribute(\"corr\");\n      if(corr instanceof PearsonsCorrelation) {\n        PearsonsCorrelation pcorr = (PearsonsCorrelation)corr;\n        RealMatrix  realMatrix = pcorr.getCorrelationPValues();\n        return new Matrix(realMatrix.getData());\n      } else {\n        throw new IOException(\"Correlation pvalues are only available for Pearsons and Spearmans correlations\");\n      }\n    } else {\n      throw new IOException(\"matrix parameter expected for transpose function\");\n    }\n  }\n\n","sourceOld":"  @Override\n  public Object doWork(Object value) throws IOException{\n    if(null == value){\n      return null;\n    } else if(value instanceof Matrix) {\n      Matrix matrix = (Matrix) value;\n      Object corr = matrix.getContextValue(\"corr\");\n      if(corr instanceof PearsonsCorrelation) {\n        PearsonsCorrelation pcorr = (PearsonsCorrelation)corr;\n        RealMatrix  realMatrix = pcorr.getCorrelationPValues();\n        return new Matrix(realMatrix.getData());\n      } else {\n        throw new IOException(\"Correlation pvalues are only available for Pearsons and Spearmans correlations\");\n      }\n    } else {\n      throw new IOException(\"matrix parameter expected for transpose function\");\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b94236357aaa22b76c10629851fe4e376e0cea82","date":1516710914,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/io/eval/CorrelationSignificanceEvaluator#doWork(Object).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/io/eval/CorrelationSignificanceEvaluator#doWork(Object).mjava","sourceNew":"  @Override\n  public Object doWork(Object value) throws IOException{\n    if(null == value){\n      return null;\n    } else if(value instanceof Matrix) {\n      Matrix matrix = (Matrix) value;\n      Object corr = matrix.getAttribute(\"corr\");\n      if(corr instanceof PearsonsCorrelation) {\n        PearsonsCorrelation pcorr = (PearsonsCorrelation)corr;\n        RealMatrix  realMatrix = pcorr.getCorrelationPValues();\n        return new Matrix(realMatrix.getData());\n      } else {\n        throw new IOException(\"Correlation pvalues are only available for Pearsons and Spearmans correlations\");\n      }\n    } else {\n      throw new IOException(\"matrix parameter expected for transpose function\");\n    }\n  }\n\n","sourceOld":"  @Override\n  public Object doWork(Object value) throws IOException{\n    if(null == value){\n      return null;\n    } else if(value instanceof Matrix) {\n      Matrix matrix = (Matrix) value;\n      Object corr = matrix.getContextValue(\"corr\");\n      if(corr instanceof PearsonsCorrelation) {\n        PearsonsCorrelation pcorr = (PearsonsCorrelation)corr;\n        RealMatrix  realMatrix = pcorr.getCorrelationPValues();\n        return new Matrix(realMatrix.getData());\n      } else {\n        throw new IOException(\"Correlation pvalues are only available for Pearsons and Spearmans correlations\");\n      }\n    } else {\n      throw new IOException(\"matrix parameter expected for transpose function\");\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b94236357aaa22b76c10629851fe4e376e0cea82":["2a2efb7373cfceb83cf0a7f6e38a1d4ac1833806","21cc21dac328d94dbc79c104b8e626fca70b3f79"],"21cc21dac328d94dbc79c104b8e626fca70b3f79":["2a2efb7373cfceb83cf0a7f6e38a1d4ac1833806"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"2a2efb7373cfceb83cf0a7f6e38a1d4ac1833806":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b94236357aaa22b76c10629851fe4e376e0cea82"]},"commit2Childs":{"b94236357aaa22b76c10629851fe4e376e0cea82":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"21cc21dac328d94dbc79c104b8e626fca70b3f79":["b94236357aaa22b76c10629851fe4e376e0cea82"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["2a2efb7373cfceb83cf0a7f6e38a1d4ac1833806"],"2a2efb7373cfceb83cf0a7f6e38a1d4ac1833806":["b94236357aaa22b76c10629851fe4e376e0cea82","21cc21dac328d94dbc79c104b8e626fca70b3f79"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}