{"path":"solr/solrj/src/test/org/apache/solr/client/solrj/io/stream/eval/TemporalEvaluatorsTest#testLimitedFunctions().mjava","commits":[{"id":"64ff6b743fd4051da7ebb3d397d1ef80833a741a","date":1492023891,"type":1,"author":"Gethin James","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/io/stream/eval/TemporalEvaluatorsTest#testLimitedFunctions().mjava","pathOld":"solr/solrj/src/test/org/apache/solr/client/solrj/io/stream/eval/DatePartEvaluatorTest#testLimitedFunctions().mjava","sourceNew":"  @Test\n  public void testLimitedFunctions() throws Exception {\n\n    MonthDay monthDay = MonthDay.of(12,5);\n    testFunction(\"month(a)\", monthDay, 12);\n    testFunction(\"day(a)\", monthDay, 5);\n\n    try {\n      testFunction(\"year(a)\", monthDay, 2017);\n      assertTrue(false);\n    } catch (IOException e) {\n      assertEquals(\"It is not possible to call 'year' function on java.time.MonthDay\", e.getMessage());\n    }\n\n    YearMonth yearMonth = YearMonth.of(2018, 4);\n    testFunction(\"month(a)\", yearMonth, 4);\n    testFunction(\"year(a)\", yearMonth, 2018);\n\n    try {\n      testFunction(\"day(a)\", yearMonth, 5);\n      assertTrue(false);\n    } catch (IOException e) {\n      assertEquals(\"It is not possible to call 'day' function on java.time.YearMonth\", e.getMessage());\n    }\n\n  }\n\n","sourceOld":"  @Test\n  public void testLimitedFunctions() throws Exception {\n\n    MonthDay monthDay = MonthDay.of(12,5);\n    testFunction(\"month(a)\", monthDay, 12);\n    testFunction(\"day(a)\", monthDay, 5);\n\n    try {\n      testFunction(\"year(a)\", monthDay, 2017);\n      assertTrue(false);\n    } catch (IOException e) {\n      assertEquals(\"It is not possible to call 'year' function on java.time.MonthDay\", e.getMessage());\n    }\n\n    YearMonth yearMonth = YearMonth.of(2018, 4);\n    testFunction(\"month(a)\", yearMonth, 4);\n    testFunction(\"year(a)\", yearMonth, 2018);\n\n    try {\n      testFunction(\"day(a)\", yearMonth, 5);\n      assertTrue(false);\n    } catch (IOException e) {\n      assertEquals(\"It is not possible to call 'day' function on java.time.YearMonth\", e.getMessage());\n    }\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"54ca69905c5d9d1529286f06ab1d12c68f6c13cb","date":1492683554,"type":0,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/io/stream/eval/TemporalEvaluatorsTest#testLimitedFunctions().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testLimitedFunctions() throws Exception {\n\n    MonthDay monthDay = MonthDay.of(12,5);\n    testFunction(\"month(a)\", monthDay, 12);\n    testFunction(\"day(a)\", monthDay, 5);\n\n    try {\n      testFunction(\"year(a)\", monthDay, 2017);\n      assertTrue(false);\n    } catch (IOException e) {\n      assertEquals(\"It is not possible to call 'year' function on java.time.MonthDay\", e.getMessage());\n    }\n\n    YearMonth yearMonth = YearMonth.of(2018, 4);\n    testFunction(\"month(a)\", yearMonth, 4);\n    testFunction(\"year(a)\", yearMonth, 2018);\n\n    try {\n      testFunction(\"day(a)\", yearMonth, 5);\n      assertTrue(false);\n    } catch (IOException e) {\n      assertEquals(\"It is not possible to call 'day' function on java.time.YearMonth\", e.getMessage());\n    }\n\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"54ca69905c5d9d1529286f06ab1d12c68f6c13cb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"64ff6b743fd4051da7ebb3d397d1ef80833a741a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["64ff6b743fd4051da7ebb3d397d1ef80833a741a"]},"commit2Childs":{"54ca69905c5d9d1529286f06ab1d12c68f6c13cb":[],"64ff6b743fd4051da7ebb3d397d1ef80833a741a":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["54ca69905c5d9d1529286f06ab1d12c68f6c13cb","64ff6b743fd4051da7ebb3d397d1ef80833a741a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["54ca69905c5d9d1529286f06ab1d12c68f6c13cb","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}