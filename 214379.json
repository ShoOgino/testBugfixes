{"path":"backwards/src/java/org/apache/lucene/search/WildcardTermEnum#WildcardTermEnum(IndexReader,Term).mjava","commits":[{"id":"480d01e5b0ef8efb136d51670fec297ae5ae2c9c","date":1268821447,"type":0,"author":"Uwe Schindler","isMerge":false,"pathNew":"backwards/src/java/org/apache/lucene/search/WildcardTermEnum#WildcardTermEnum(IndexReader,Term).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Creates a new <code>WildcardTermEnum</code>.\n   * <p>\n   * After calling the constructor the enumeration is already pointing to the first \n   * valid term if such a term exists.\n   */\n  public WildcardTermEnum(IndexReader reader, Term term) throws IOException {\n    super();\n    searchTerm = term;\n    field = searchTerm.field();\n    final String searchTermText = searchTerm.text();\n\n    final int sidx = searchTermText.indexOf(WILDCARD_STRING);\n    final int cidx = searchTermText.indexOf(WILDCARD_CHAR);\n    int idx = sidx;\n    if (idx == -1) {\n      idx = cidx;\n    }\n    else if (cidx >= 0) {\n      idx = Math.min(idx, cidx);\n    }\n    pre = idx != -1?searchTerm.text().substring(0,idx): \"\";\n\n    preLen = pre.length();\n    text = searchTermText.substring(preLen);\n    setEnum(reader.terms(new Term(searchTerm.field(), pre)));\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/backwards/src/java/org/apache/lucene/search/WildcardTermEnum#WildcardTermEnum(IndexReader,Term).mjava","pathOld":"backwards/src/java/org/apache/lucene/search/WildcardTermEnum#WildcardTermEnum(IndexReader,Term).mjava","sourceNew":"  /**\n   * Creates a new <code>WildcardTermEnum</code>.\n   * <p>\n   * After calling the constructor the enumeration is already pointing to the first \n   * valid term if such a term exists.\n   */\n  public WildcardTermEnum(IndexReader reader, Term term) throws IOException {\n    super();\n    searchTerm = term;\n    field = searchTerm.field();\n    final String searchTermText = searchTerm.text();\n\n    final int sidx = searchTermText.indexOf(WILDCARD_STRING);\n    final int cidx = searchTermText.indexOf(WILDCARD_CHAR);\n    int idx = sidx;\n    if (idx == -1) {\n      idx = cidx;\n    }\n    else if (cidx >= 0) {\n      idx = Math.min(idx, cidx);\n    }\n    pre = idx != -1?searchTerm.text().substring(0,idx): \"\";\n\n    preLen = pre.length();\n    text = searchTermText.substring(preLen);\n    setEnum(reader.terms(new Term(searchTerm.field(), pre)));\n  }\n\n","sourceOld":"  /**\n   * Creates a new <code>WildcardTermEnum</code>.\n   * <p>\n   * After calling the constructor the enumeration is already pointing to the first \n   * valid term if such a term exists.\n   */\n  public WildcardTermEnum(IndexReader reader, Term term) throws IOException {\n    super();\n    searchTerm = term;\n    field = searchTerm.field();\n    final String searchTermText = searchTerm.text();\n\n    final int sidx = searchTermText.indexOf(WILDCARD_STRING);\n    final int cidx = searchTermText.indexOf(WILDCARD_CHAR);\n    int idx = sidx;\n    if (idx == -1) {\n      idx = cidx;\n    }\n    else if (cidx >= 0) {\n      idx = Math.min(idx, cidx);\n    }\n    pre = idx != -1?searchTerm.text().substring(0,idx): \"\";\n\n    preLen = pre.length();\n    text = searchTermText.substring(preLen);\n    setEnum(reader.terms(new Term(searchTerm.field(), pre)));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"480d01e5b0ef8efb136d51670fec297ae5ae2c9c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["480d01e5b0ef8efb136d51670fec297ae5ae2c9c"]},"commit2Childs":{"480d01e5b0ef8efb136d51670fec297ae5ae2c9c":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["480d01e5b0ef8efb136d51670fec297ae5ae2c9c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}