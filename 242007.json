{"path":"solr/core/src/java/org/apache/solr/core/SolrConfig#addCacheConfig(Map,CacheConfig...).mjava","commits":[{"id":"531fe719c7218235a679452eb3d137bfd8fc6af1","date":1415191086,"type":0,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/SolrConfig#addCacheConfig(Map,CacheConfig...).mjava","pathOld":"/dev/null","sourceNew":"  private void addCacheConfig(Map queryMap, CacheConfig... cache) {\n    if(cache==null)return;\n    for (CacheConfig config : cache) if(config !=null) queryMap.put(config.getNodeName(),config.toMap());\n\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ae2f5be890d26585d438eba0b9cc7d3c0a9775be","date":1427387954,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/SolrConfig#addCacheConfig(Map,CacheConfig...).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/SolrConfig#addCacheConfig(Map,CacheConfig...).mjava","sourceNew":"  private void addCacheConfig(Map queryMap, CacheConfig... cache) {\n    if (cache == null) return;\n    for (CacheConfig config : cache) if (config != null) queryMap.put(config.getNodeName(), config.toMap());\n\n  }\n\n","sourceOld":"  private void addCacheConfig(Map queryMap, CacheConfig... cache) {\n    if(cache==null)return;\n    for (CacheConfig config : cache) if(config !=null) queryMap.put(config.getNodeName(),config.toMap());\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","date":1427779360,"type":3,"author":"Ryan Ernst","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/core/SolrConfig#addCacheConfig(Map,CacheConfig...).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/SolrConfig#addCacheConfig(Map,CacheConfig...).mjava","sourceNew":"  private void addCacheConfig(Map queryMap, CacheConfig... cache) {\n    if (cache == null) return;\n    for (CacheConfig config : cache) if (config != null) queryMap.put(config.getNodeName(), config.toMap());\n\n  }\n\n","sourceOld":"  private void addCacheConfig(Map queryMap, CacheConfig... cache) {\n    if(cache==null)return;\n    for (CacheConfig config : cache) if(config !=null) queryMap.put(config.getNodeName(),config.toMap());\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1f1f31880696765d6aec499d3b01fa501129af45","date":1474287317,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/SolrConfig#addCacheConfig(Map,CacheConfig...).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/SolrConfig#addCacheConfig(Map,CacheConfig...).mjava","sourceNew":"  private void addCacheConfig(Map queryMap, CacheConfig... cache) {\n    if (cache == null) return;\n    for (CacheConfig config : cache) if (config != null) queryMap.put(config.getNodeName(), config);\n\n  }\n\n","sourceOld":"  private void addCacheConfig(Map queryMap, CacheConfig... cache) {\n    if (cache == null) return;\n    for (CacheConfig config : cache) if (config != null) queryMap.put(config.getNodeName(), config.toMap());\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"17e5da53e4e5bd659e22add9bba1cfa222e7e30d","date":1475435902,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/core/SolrConfig#addCacheConfig(Map,CacheConfig...).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/SolrConfig#addCacheConfig(Map,CacheConfig...).mjava","sourceNew":"  private void addCacheConfig(Map queryMap, CacheConfig... cache) {\n    if (cache == null) return;\n    for (CacheConfig config : cache) if (config != null) queryMap.put(config.getNodeName(), config);\n\n  }\n\n","sourceOld":"  private void addCacheConfig(Map queryMap, CacheConfig... cache) {\n    if (cache == null) return;\n    for (CacheConfig config : cache) if (config != null) queryMap.put(config.getNodeName(), config.toMap());\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/core/SolrConfig#addCacheConfig(Map,CacheConfig...).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/SolrConfig#addCacheConfig(Map,CacheConfig...).mjava","sourceNew":"  private void addCacheConfig(Map queryMap, CacheConfig... cache) {\n    if (cache == null) return;\n    for (CacheConfig config : cache) if (config != null) queryMap.put(config.getNodeName(), config);\n\n  }\n\n","sourceOld":"  private void addCacheConfig(Map queryMap, CacheConfig... cache) {\n    if (cache == null) return;\n    for (CacheConfig config : cache) if (config != null) queryMap.put(config.getNodeName(), config.toMap());\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"053c4cbd30d228154839dc536ca5a15a5f0c48bf","date":1564559417,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/SolrConfig#addCacheConfig(Map,CacheConfig...).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/SolrConfig#addCacheConfig(Map,CacheConfig...).mjava","sourceNew":"  private void addCacheConfig(Map queryMap, CacheConfig... cache) {\n    if (cache == null) return;\n    for (CacheConfig config : cache) if (config != null) queryMap.put(config.getName(), config);\n\n  }\n\n","sourceOld":"  private void addCacheConfig(Map queryMap, CacheConfig... cache) {\n    if (cache == null) return;\n    for (CacheConfig config : cache) if (config != null) queryMap.put(config.getNodeName(), config);\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f8061ddd97f3352007d927dae445884a6f3d857b","date":1564988276,"type":3,"author":"Atri Sharma","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/core/SolrConfig#addCacheConfig(Map,CacheConfig...).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/SolrConfig#addCacheConfig(Map,CacheConfig...).mjava","sourceNew":"  private void addCacheConfig(Map queryMap, CacheConfig... cache) {\n    if (cache == null) return;\n    for (CacheConfig config : cache) if (config != null) queryMap.put(config.getName(), config);\n\n  }\n\n","sourceOld":"  private void addCacheConfig(Map queryMap, CacheConfig... cache) {\n    if (cache == null) return;\n    for (CacheConfig config : cache) if (config != null) queryMap.put(config.getNodeName(), config);\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c44cc06c26e456fe9c215072b79fce30babe3975","date":1570365040,"type":3,"author":"Ishan Chattopadhyaya","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/SolrConfig#addCacheConfig(Map,CacheConfig...).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/SolrConfig#addCacheConfig(Map,CacheConfig...).mjava","sourceNew":"  private void addCacheConfig(Map queryMap, CacheConfig... cache) {\n    if (cache == null) return;\n    for (CacheConfig config : cache) if (config != null) queryMap.put(config.getNodeName(), config);\n\n  }\n\n","sourceOld":"  private void addCacheConfig(Map queryMap, CacheConfig... cache) {\n    if (cache == null) return;\n    for (CacheConfig config : cache) if (config != null) queryMap.put(config.getName(), config);\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b0b597c65628ca9e73913a07e81691f8229bae35","date":1571224353,"type":3,"author":"jimczi","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/core/SolrConfig#addCacheConfig(Map,CacheConfig...).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/SolrConfig#addCacheConfig(Map,CacheConfig...).mjava","sourceNew":"  private void addCacheConfig(Map queryMap, CacheConfig... cache) {\n    if (cache == null) return;\n    for (CacheConfig config : cache) if (config != null) queryMap.put(config.getNodeName(), config);\n\n  }\n\n","sourceOld":"  private void addCacheConfig(Map queryMap, CacheConfig... cache) {\n    if (cache == null) return;\n    for (CacheConfig config : cache) if (config != null) queryMap.put(config.getName(), config);\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"75237075d8425856bf4bbf52a6be4f9162b8187d","date":1591103291,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/SolrConfig#addCacheConfig(Map,CacheConfig...).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/SolrConfig#addCacheConfig(Map,CacheConfig...).mjava","sourceNew":"  @SuppressWarnings({\"unchecked\", \"rawtypes\"})\n  private void addCacheConfig(Map queryMap, CacheConfig... cache) {\n    if (cache == null) return;\n    for (CacheConfig config : cache) if (config != null) queryMap.put(config.getNodeName(), config);\n\n  }\n\n","sourceOld":"  private void addCacheConfig(Map queryMap, CacheConfig... cache) {\n    if (cache == null) return;\n    for (CacheConfig config : cache) if (config != null) queryMap.put(config.getNodeName(), config);\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"75237075d8425856bf4bbf52a6be4f9162b8187d":["c44cc06c26e456fe9c215072b79fce30babe3975"],"531fe719c7218235a679452eb3d137bfd8fc6af1":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"053c4cbd30d228154839dc536ca5a15a5f0c48bf":["17e5da53e4e5bd659e22add9bba1cfa222e7e30d"],"1f1f31880696765d6aec499d3b01fa501129af45":["ae2f5be890d26585d438eba0b9cc7d3c0a9775be"],"c44cc06c26e456fe9c215072b79fce30babe3975":["053c4cbd30d228154839dc536ca5a15a5f0c48bf"],"ae2f5be890d26585d438eba0b9cc7d3c0a9775be":["531fe719c7218235a679452eb3d137bfd8fc6af1"],"f8061ddd97f3352007d927dae445884a6f3d857b":["17e5da53e4e5bd659e22add9bba1cfa222e7e30d","053c4cbd30d228154839dc536ca5a15a5f0c48bf"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["ae2f5be890d26585d438eba0b9cc7d3c0a9775be","17e5da53e4e5bd659e22add9bba1cfa222e7e30d"],"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":["531fe719c7218235a679452eb3d137bfd8fc6af1","ae2f5be890d26585d438eba0b9cc7d3c0a9775be"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"17e5da53e4e5bd659e22add9bba1cfa222e7e30d":["ae2f5be890d26585d438eba0b9cc7d3c0a9775be","1f1f31880696765d6aec499d3b01fa501129af45"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["75237075d8425856bf4bbf52a6be4f9162b8187d"],"b0b597c65628ca9e73913a07e81691f8229bae35":["053c4cbd30d228154839dc536ca5a15a5f0c48bf","c44cc06c26e456fe9c215072b79fce30babe3975"]},"commit2Childs":{"75237075d8425856bf4bbf52a6be4f9162b8187d":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"531fe719c7218235a679452eb3d137bfd8fc6af1":["ae2f5be890d26585d438eba0b9cc7d3c0a9775be","a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae"],"053c4cbd30d228154839dc536ca5a15a5f0c48bf":["c44cc06c26e456fe9c215072b79fce30babe3975","f8061ddd97f3352007d927dae445884a6f3d857b","b0b597c65628ca9e73913a07e81691f8229bae35"],"1f1f31880696765d6aec499d3b01fa501129af45":["17e5da53e4e5bd659e22add9bba1cfa222e7e30d"],"c44cc06c26e456fe9c215072b79fce30babe3975":["75237075d8425856bf4bbf52a6be4f9162b8187d","b0b597c65628ca9e73913a07e81691f8229bae35"],"ae2f5be890d26585d438eba0b9cc7d3c0a9775be":["1f1f31880696765d6aec499d3b01fa501129af45","4cce5816ef15a48a0bc11e5d400497ee4301dd3b","a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","17e5da53e4e5bd659e22add9bba1cfa222e7e30d"],"f8061ddd97f3352007d927dae445884a6f3d857b":[],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["531fe719c7218235a679452eb3d137bfd8fc6af1"],"17e5da53e4e5bd659e22add9bba1cfa222e7e30d":["053c4cbd30d228154839dc536ca5a15a5f0c48bf","f8061ddd97f3352007d927dae445884a6f3d857b","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"b0b597c65628ca9e73913a07e81691f8229bae35":[]},"heads":["f8061ddd97f3352007d927dae445884a6f3d857b","4cce5816ef15a48a0bc11e5d400497ee4301dd3b","a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","cd5edd1f2b162a5cfa08efd17851a07373a96817","b0b597c65628ca9e73913a07e81691f8229bae35"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}