{"path":"contrib/benchmark/src/java/org/apache/lucene/benchmark/byTask/feeds/ReutersContentSource#getNextDocData(DocData).mjava","commits":[{"id":"6944b9fa6d8ef96b83ae2d3a4332d03b3857355b","date":1245355139,"type":1,"author":"Mark Robert Miller","isMerge":false,"pathNew":"contrib/benchmark/src/java/org/apache/lucene/benchmark/byTask/feeds/ReutersContentSource#getNextDocData(DocData).mjava","pathOld":"contrib/benchmark/src/java/org/apache/lucene/benchmark/byTask/feeds/ReutersDocMaker#getNextDocData().mjava","sourceNew":"  public DocData getNextDocData(DocData docData) throws NoMoreDataException, IOException {\n    File f = null;\n    String name = null;\n    synchronized (this) {\n      if (nextFile >= inputFiles.size()) {\n        // exhausted files, start a new round, unless forever set to false.\n        if (!forever) {\n          throw new NoMoreDataException();\n        }\n        nextFile = 0;\n        iteration++;\n      }\n      f = (File) inputFiles.get(nextFile++);\n      name = f.getCanonicalPath() + \"_\" + iteration;\n    }\n\n    BufferedReader reader = new BufferedReader(new FileReader(f));\n    try {\n      // First line is the date, 3rd is the title, rest is body\n      String dateStr = reader.readLine();\n      reader.readLine();// skip an empty line\n      String title = reader.readLine();\n      reader.readLine();// skip an empty line\n      StringBuffer bodyBuf = new StringBuffer(1024);\n      String line = null;\n      while ((line = reader.readLine()) != null) {\n        bodyBuf.append(line).append(' ');\n      }\n      reader.close();\n      \n      addBytes(f.length());\n      \n      Date date = parseDate(dateStr.trim());\n      \n      docData.clear();\n      docData.setName(name);\n      docData.setBody(bodyBuf.toString());\n      docData.setTitle(title);\n      docData.setDate(date);\n      return docData;\n    } finally {\n      reader.close();\n    }\n  }\n\n","sourceOld":"  protected DocData getNextDocData() throws Exception {\n    File f = null;\n    String name = null;\n    synchronized (this) {\n      if (nextFile >= inputFiles.size()) { \n        // exhausted files, start a new round, unless forever set to false.\n        if (!forever) {\n          throw new NoMoreDataException();\n        }\n        nextFile = 0;\n        iteration++;\n      }\n      f = (File) inputFiles.get(nextFile++);\n      name = f.getCanonicalPath()+\"_\"+iteration;\n    }\n    \n    BufferedReader reader = new BufferedReader(new FileReader(f));\n    String line = null;\n    //First line is the date, 3rd is the title, rest is body\n    String dateStr = reader.readLine();\n    reader.readLine();//skip an empty line\n    String title = reader.readLine();\n    reader.readLine();//skip an empty line\n    StringBuffer bodyBuf = new StringBuffer(1024);\n    while ((line = reader.readLine()) != null) {\n      bodyBuf.append(line).append(' ');\n    }\n    reader.close();\n    \n    addBytes(f.length());\n\n    \n    Date date = getDateFormat().parse(dateStr.trim()); \n    return new DocData(name, bodyBuf.toString(), title, null, date);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ffdf794cee8d43eb612df752c592cef2dc3e75ae","date":1256465578,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"contrib/benchmark/src/java/org/apache/lucene/benchmark/byTask/feeds/ReutersContentSource#getNextDocData(DocData).mjava","pathOld":"contrib/benchmark/src/java/org/apache/lucene/benchmark/byTask/feeds/ReutersContentSource#getNextDocData(DocData).mjava","sourceNew":"  public DocData getNextDocData(DocData docData) throws NoMoreDataException, IOException {\n    File f = null;\n    String name = null;\n    synchronized (this) {\n      if (nextFile >= inputFiles.size()) {\n        // exhausted files, start a new round, unless forever set to false.\n        if (!forever) {\n          throw new NoMoreDataException();\n        }\n        nextFile = 0;\n        iteration++;\n      }\n      f = inputFiles.get(nextFile++);\n      name = f.getCanonicalPath() + \"_\" + iteration;\n    }\n\n    BufferedReader reader = new BufferedReader(new FileReader(f));\n    try {\n      // First line is the date, 3rd is the title, rest is body\n      String dateStr = reader.readLine();\n      reader.readLine();// skip an empty line\n      String title = reader.readLine();\n      reader.readLine();// skip an empty line\n      StringBuffer bodyBuf = new StringBuffer(1024);\n      String line = null;\n      while ((line = reader.readLine()) != null) {\n        bodyBuf.append(line).append(' ');\n      }\n      reader.close();\n      \n      addBytes(f.length());\n      \n      Date date = parseDate(dateStr.trim());\n      \n      docData.clear();\n      docData.setName(name);\n      docData.setBody(bodyBuf.toString());\n      docData.setTitle(title);\n      docData.setDate(date);\n      return docData;\n    } finally {\n      reader.close();\n    }\n  }\n\n","sourceOld":"  public DocData getNextDocData(DocData docData) throws NoMoreDataException, IOException {\n    File f = null;\n    String name = null;\n    synchronized (this) {\n      if (nextFile >= inputFiles.size()) {\n        // exhausted files, start a new round, unless forever set to false.\n        if (!forever) {\n          throw new NoMoreDataException();\n        }\n        nextFile = 0;\n        iteration++;\n      }\n      f = (File) inputFiles.get(nextFile++);\n      name = f.getCanonicalPath() + \"_\" + iteration;\n    }\n\n    BufferedReader reader = new BufferedReader(new FileReader(f));\n    try {\n      // First line is the date, 3rd is the title, rest is body\n      String dateStr = reader.readLine();\n      reader.readLine();// skip an empty line\n      String title = reader.readLine();\n      reader.readLine();// skip an empty line\n      StringBuffer bodyBuf = new StringBuffer(1024);\n      String line = null;\n      while ((line = reader.readLine()) != null) {\n        bodyBuf.append(line).append(' ');\n      }\n      reader.close();\n      \n      addBytes(f.length());\n      \n      Date date = parseDate(dateStr.trim());\n      \n      docData.clear();\n      docData.setName(name);\n      docData.setBody(bodyBuf.toString());\n      docData.setTitle(title);\n      docData.setDate(date);\n      return docData;\n    } finally {\n      reader.close();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d57eb7c98c08c03af6e4cd83509df31c81ac16af","date":1257684312,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"contrib/benchmark/src/java/org/apache/lucene/benchmark/byTask/feeds/ReutersContentSource#getNextDocData(DocData).mjava","pathOld":"contrib/benchmark/src/java/org/apache/lucene/benchmark/byTask/feeds/ReutersContentSource#getNextDocData(DocData).mjava","sourceNew":"  @Override\n  public DocData getNextDocData(DocData docData) throws NoMoreDataException, IOException {\n    File f = null;\n    String name = null;\n    synchronized (this) {\n      if (nextFile >= inputFiles.size()) {\n        // exhausted files, start a new round, unless forever set to false.\n        if (!forever) {\n          throw new NoMoreDataException();\n        }\n        nextFile = 0;\n        iteration++;\n      }\n      f = inputFiles.get(nextFile++);\n      name = f.getCanonicalPath() + \"_\" + iteration;\n    }\n\n    BufferedReader reader = new BufferedReader(new FileReader(f));\n    try {\n      // First line is the date, 3rd is the title, rest is body\n      String dateStr = reader.readLine();\n      reader.readLine();// skip an empty line\n      String title = reader.readLine();\n      reader.readLine();// skip an empty line\n      StringBuffer bodyBuf = new StringBuffer(1024);\n      String line = null;\n      while ((line = reader.readLine()) != null) {\n        bodyBuf.append(line).append(' ');\n      }\n      reader.close();\n      \n      addBytes(f.length());\n      \n      Date date = parseDate(dateStr.trim());\n      \n      docData.clear();\n      docData.setName(name);\n      docData.setBody(bodyBuf.toString());\n      docData.setTitle(title);\n      docData.setDate(date);\n      return docData;\n    } finally {\n      reader.close();\n    }\n  }\n\n","sourceOld":"  public DocData getNextDocData(DocData docData) throws NoMoreDataException, IOException {\n    File f = null;\n    String name = null;\n    synchronized (this) {\n      if (nextFile >= inputFiles.size()) {\n        // exhausted files, start a new round, unless forever set to false.\n        if (!forever) {\n          throw new NoMoreDataException();\n        }\n        nextFile = 0;\n        iteration++;\n      }\n      f = inputFiles.get(nextFile++);\n      name = f.getCanonicalPath() + \"_\" + iteration;\n    }\n\n    BufferedReader reader = new BufferedReader(new FileReader(f));\n    try {\n      // First line is the date, 3rd is the title, rest is body\n      String dateStr = reader.readLine();\n      reader.readLine();// skip an empty line\n      String title = reader.readLine();\n      reader.readLine();// skip an empty line\n      StringBuffer bodyBuf = new StringBuffer(1024);\n      String line = null;\n      while ((line = reader.readLine()) != null) {\n        bodyBuf.append(line).append(' ');\n      }\n      reader.close();\n      \n      addBytes(f.length());\n      \n      Date date = parseDate(dateStr.trim());\n      \n      docData.clear();\n      docData.setName(name);\n      docData.setBody(bodyBuf.toString());\n      docData.setTitle(title);\n      docData.setDate(date);\n      return docData;\n    } finally {\n      reader.close();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/contrib/benchmark/src/java/org/apache/lucene/benchmark/byTask/feeds/ReutersContentSource#getNextDocData(DocData).mjava","pathOld":"contrib/benchmark/src/java/org/apache/lucene/benchmark/byTask/feeds/ReutersContentSource#getNextDocData(DocData).mjava","sourceNew":"  @Override\n  public DocData getNextDocData(DocData docData) throws NoMoreDataException, IOException {\n    File f = null;\n    String name = null;\n    synchronized (this) {\n      if (nextFile >= inputFiles.size()) {\n        // exhausted files, start a new round, unless forever set to false.\n        if (!forever) {\n          throw new NoMoreDataException();\n        }\n        nextFile = 0;\n        iteration++;\n      }\n      f = inputFiles.get(nextFile++);\n      name = f.getCanonicalPath() + \"_\" + iteration;\n    }\n\n    BufferedReader reader = new BufferedReader(new FileReader(f));\n    try {\n      // First line is the date, 3rd is the title, rest is body\n      String dateStr = reader.readLine();\n      reader.readLine();// skip an empty line\n      String title = reader.readLine();\n      reader.readLine();// skip an empty line\n      StringBuffer bodyBuf = new StringBuffer(1024);\n      String line = null;\n      while ((line = reader.readLine()) != null) {\n        bodyBuf.append(line).append(' ');\n      }\n      reader.close();\n      \n      addBytes(f.length());\n      \n      Date date = parseDate(dateStr.trim());\n      \n      docData.clear();\n      docData.setName(name);\n      docData.setBody(bodyBuf.toString());\n      docData.setTitle(title);\n      docData.setDate(date);\n      return docData;\n    } finally {\n      reader.close();\n    }\n  }\n\n","sourceOld":"  @Override\n  public DocData getNextDocData(DocData docData) throws NoMoreDataException, IOException {\n    File f = null;\n    String name = null;\n    synchronized (this) {\n      if (nextFile >= inputFiles.size()) {\n        // exhausted files, start a new round, unless forever set to false.\n        if (!forever) {\n          throw new NoMoreDataException();\n        }\n        nextFile = 0;\n        iteration++;\n      }\n      f = inputFiles.get(nextFile++);\n      name = f.getCanonicalPath() + \"_\" + iteration;\n    }\n\n    BufferedReader reader = new BufferedReader(new FileReader(f));\n    try {\n      // First line is the date, 3rd is the title, rest is body\n      String dateStr = reader.readLine();\n      reader.readLine();// skip an empty line\n      String title = reader.readLine();\n      reader.readLine();// skip an empty line\n      StringBuffer bodyBuf = new StringBuffer(1024);\n      String line = null;\n      while ((line = reader.readLine()) != null) {\n        bodyBuf.append(line).append(' ');\n      }\n      reader.close();\n      \n      addBytes(f.length());\n      \n      Date date = parseDate(dateStr.trim());\n      \n      docData.clear();\n      docData.setName(name);\n      docData.setBody(bodyBuf.toString());\n      docData.setTitle(title);\n      docData.setDate(date);\n      return docData;\n    } finally {\n      reader.close();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"ffdf794cee8d43eb612df752c592cef2dc3e75ae":["6944b9fa6d8ef96b83ae2d3a4332d03b3857355b"],"6944b9fa6d8ef96b83ae2d3a4332d03b3857355b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"d57eb7c98c08c03af6e4cd83509df31c81ac16af":["ffdf794cee8d43eb612df752c592cef2dc3e75ae"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["d57eb7c98c08c03af6e4cd83509df31c81ac16af"]},"commit2Childs":{"ffdf794cee8d43eb612df752c592cef2dc3e75ae":["d57eb7c98c08c03af6e4cd83509df31c81ac16af"],"6944b9fa6d8ef96b83ae2d3a4332d03b3857355b":["ffdf794cee8d43eb612df752c592cef2dc3e75ae"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["6944b9fa6d8ef96b83ae2d3a4332d03b3857355b"],"d57eb7c98c08c03af6e4cd83509df31c81ac16af":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}