{"path":"solr/test-framework/src/java/org/apache/solr/SolrTestCaseJ4#createComparator(String,boolean,boolean,boolean,boolean).mjava","commits":[{"id":"c903c3d15906a3da96b8c0c2fb704491005fdbdb","date":1453508227,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/SolrTestCaseJ4#createComparator(String,boolean,boolean,boolean,boolean).mjava","pathOld":"solr/src/test-framework/org/apache/solr/SolrTestCaseJ4#createComparator(String,boolean,boolean,boolean,boolean).mjava","sourceNew":"  public static Comparator<Doc> createComparator(final String field, final boolean asc, final boolean sortMissingLast, final boolean sortMissingFirst, final boolean sortMissingAsZero) {\n    final int mul = asc ? 1 : -1;\n\n    if (field.equals(\"_docid_\")) {\n     return new Comparator<Doc>() {\n      @Override\n      public int compare(Doc o1, Doc o2) {\n        return (o1.order - o2.order) * mul;\n      }\n     };\n    }\n\n    if (field.equals(\"score\")) {\n      return createComparator(\"score_f\", asc, sortMissingLast, sortMissingFirst, sortMissingAsZero);\n    }\n\n    return new Comparator<Doc>() {\n      private Comparable zeroVal(Comparable template) {\n        if (template == null) return null;\n        if (template instanceof String) return null;  // fast-path for string\n        if (template instanceof Integer) return 0;\n        if (template instanceof Long) return (long)0;\n        if (template instanceof Float) return (float)0;\n        if (template instanceof Double) return (double)0;\n        if (template instanceof Short) return (short)0;\n        if (template instanceof Byte) return (byte)0;\n        if (template instanceof Character) return (char)0;\n        return null;\n      }\n\n      @Override\n      public int compare(Doc o1, Doc o2) {\n        Comparable v1 = o1.getFirstValue(field);\n        Comparable v2 = o2.getFirstValue(field);\n\n        v1 = v1 == null ? zeroVal(v2) : v1;\n        v2 = v2 == null ? zeroVal(v1) : v2;\n\n        int c = 0;\n        if (v1 == v2) {\n          c = 0;\n        } else if (v1 == null) {\n          if (sortMissingLast) c = mul;\n          else if (sortMissingFirst) c = -mul;\n          else c = -1;\n        } else if (v2 == null) {\n          if (sortMissingLast) c = -mul;\n          else if (sortMissingFirst) c = mul;\n          else c = 1;\n        } else {\n          c = v1.compareTo(v2);\n        }\n\n        c = c * mul;\n\n        return c;\n      }\n    };\n  }\n\n","sourceOld":"  public static Comparator<Doc> createComparator(final String field, final boolean asc, final boolean sortMissingLast, final boolean sortMissingFirst, final boolean sortMissingAsZero) {\n    final int mul = asc ? 1 : -1;\n\n    if (field.equals(\"_docid_\")) {\n     return new Comparator<Doc>() {\n      @Override\n      public int compare(Doc o1, Doc o2) {\n        return (o1.order - o2.order) * mul;\n      }\n     };\n    }\n\n    if (field.equals(\"score\")) {\n      return createComparator(\"score_f\", asc, sortMissingLast, sortMissingFirst, sortMissingAsZero);\n    }\n\n    return new Comparator<Doc>() {\n      private Comparable zeroVal(Comparable template) {\n        if (template == null) return null;\n        if (template instanceof String) return null;  // fast-path for string\n        if (template instanceof Integer) return 0;\n        if (template instanceof Long) return (long)0;\n        if (template instanceof Float) return (float)0;\n        if (template instanceof Double) return (double)0;\n        if (template instanceof Short) return (short)0;\n        if (template instanceof Byte) return (byte)0;\n        if (template instanceof Character) return (char)0;\n        return null;\n      }\n\n      @Override\n      public int compare(Doc o1, Doc o2) {\n        Comparable v1 = o1.getFirstValue(field);\n        Comparable v2 = o2.getFirstValue(field);\n\n        v1 = v1 == null ? zeroVal(v2) : v1;\n        v2 = v2 == null ? zeroVal(v1) : v2;\n\n        int c = 0;\n        if (v1 == v2) {\n          c = 0;\n        } else if (v1 == null) {\n          if (sortMissingLast) c = mul;\n          else if (sortMissingFirst) c = -mul;\n          else c = -1;\n        } else if (v2 == null) {\n          if (sortMissingLast) c = -mul;\n          else if (sortMissingFirst) c = mul;\n          else c = 1;\n        } else {\n          c = v1.compareTo(v2);\n        }\n\n        c = c * mul;\n\n        return c;\n      }\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a258fbb26824fd104ed795e5d9033d2d040049ee","date":1453508252,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/SolrTestCaseJ4#createComparator(String,boolean,boolean,boolean,boolean).mjava","pathOld":"solr/src/test-framework/org/apache/solr/SolrTestCaseJ4#createComparator(String,boolean,boolean,boolean,boolean).mjava","sourceNew":"  public static Comparator<Doc> createComparator(final String field, final boolean asc, final boolean sortMissingLast, final boolean sortMissingFirst, final boolean sortMissingAsZero) {\n    final int mul = asc ? 1 : -1;\n\n    if (field.equals(\"_docid_\")) {\n     return new Comparator<Doc>() {\n      @Override\n      public int compare(Doc o1, Doc o2) {\n        return (o1.order - o2.order) * mul;\n      }\n     };\n    }\n\n    if (field.equals(\"score\")) {\n      return createComparator(\"score_f\", asc, sortMissingLast, sortMissingFirst, sortMissingAsZero);\n    }\n\n    return new Comparator<Doc>() {\n      private Comparable zeroVal(Comparable template) {\n        if (template == null) return null;\n        if (template instanceof String) return null;  // fast-path for string\n        if (template instanceof Integer) return 0;\n        if (template instanceof Long) return (long)0;\n        if (template instanceof Float) return (float)0;\n        if (template instanceof Double) return (double)0;\n        if (template instanceof Short) return (short)0;\n        if (template instanceof Byte) return (byte)0;\n        if (template instanceof Character) return (char)0;\n        return null;\n      }\n\n      @Override\n      public int compare(Doc o1, Doc o2) {\n        Comparable v1 = o1.getFirstValue(field);\n        Comparable v2 = o2.getFirstValue(field);\n\n        v1 = v1 == null ? zeroVal(v2) : v1;\n        v2 = v2 == null ? zeroVal(v1) : v2;\n\n        int c = 0;\n        if (v1 == v2) {\n          c = 0;\n        } else if (v1 == null) {\n          if (sortMissingLast) c = mul;\n          else if (sortMissingFirst) c = -mul;\n          else c = -1;\n        } else if (v2 == null) {\n          if (sortMissingLast) c = -mul;\n          else if (sortMissingFirst) c = mul;\n          else c = 1;\n        } else {\n          c = v1.compareTo(v2);\n        }\n\n        c = c * mul;\n\n        return c;\n      }\n    };\n  }\n\n","sourceOld":"  public static Comparator<Doc> createComparator(final String field, final boolean asc, final boolean sortMissingLast, final boolean sortMissingFirst, final boolean sortMissingAsZero) {\n    final int mul = asc ? 1 : -1;\n\n    if (field.equals(\"_docid_\")) {\n     return new Comparator<Doc>() {\n      @Override\n      public int compare(Doc o1, Doc o2) {\n        return (o1.order - o2.order) * mul;\n      }\n     };\n    }\n\n    if (field.equals(\"score\")) {\n      return createComparator(\"score_f\", asc, sortMissingLast, sortMissingFirst, sortMissingAsZero);\n    }\n\n    return new Comparator<Doc>() {\n      private Comparable zeroVal(Comparable template) {\n        if (template == null) return null;\n        if (template instanceof String) return null;  // fast-path for string\n        if (template instanceof Integer) return 0;\n        if (template instanceof Long) return (long)0;\n        if (template instanceof Float) return (float)0;\n        if (template instanceof Double) return (double)0;\n        if (template instanceof Short) return (short)0;\n        if (template instanceof Byte) return (byte)0;\n        if (template instanceof Character) return (char)0;\n        return null;\n      }\n\n      @Override\n      public int compare(Doc o1, Doc o2) {\n        Comparable v1 = o1.getFirstValue(field);\n        Comparable v2 = o2.getFirstValue(field);\n\n        v1 = v1 == null ? zeroVal(v2) : v1;\n        v2 = v2 == null ? zeroVal(v1) : v2;\n\n        int c = 0;\n        if (v1 == v2) {\n          c = 0;\n        } else if (v1 == null) {\n          if (sortMissingLast) c = mul;\n          else if (sortMissingFirst) c = -mul;\n          else c = -1;\n        } else if (v2 == null) {\n          if (sortMissingLast) c = -mul;\n          else if (sortMissingFirst) c = mul;\n          else c = 1;\n        } else {\n          c = v1.compareTo(v2);\n        }\n\n        c = c * mul;\n\n        return c;\n      }\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/test-framework/src/java/org/apache/solr/SolrTestCaseJ4#createComparator(String,boolean,boolean,boolean,boolean).mjava","pathOld":"solr/src/test-framework/org/apache/solr/SolrTestCaseJ4#createComparator(String,boolean,boolean,boolean,boolean).mjava","sourceNew":"  public static Comparator<Doc> createComparator(final String field, final boolean asc, final boolean sortMissingLast, final boolean sortMissingFirst, final boolean sortMissingAsZero) {\n    final int mul = asc ? 1 : -1;\n\n    if (field.equals(\"_docid_\")) {\n     return new Comparator<Doc>() {\n      @Override\n      public int compare(Doc o1, Doc o2) {\n        return (o1.order - o2.order) * mul;\n      }\n     };\n    }\n\n    if (field.equals(\"score\")) {\n      return createComparator(\"score_f\", asc, sortMissingLast, sortMissingFirst, sortMissingAsZero);\n    }\n\n    return new Comparator<Doc>() {\n      private Comparable zeroVal(Comparable template) {\n        if (template == null) return null;\n        if (template instanceof String) return null;  // fast-path for string\n        if (template instanceof Integer) return 0;\n        if (template instanceof Long) return (long)0;\n        if (template instanceof Float) return (float)0;\n        if (template instanceof Double) return (double)0;\n        if (template instanceof Short) return (short)0;\n        if (template instanceof Byte) return (byte)0;\n        if (template instanceof Character) return (char)0;\n        return null;\n      }\n\n      @Override\n      public int compare(Doc o1, Doc o2) {\n        Comparable v1 = o1.getFirstValue(field);\n        Comparable v2 = o2.getFirstValue(field);\n\n        v1 = v1 == null ? zeroVal(v2) : v1;\n        v2 = v2 == null ? zeroVal(v1) : v2;\n\n        int c = 0;\n        if (v1 == v2) {\n          c = 0;\n        } else if (v1 == null) {\n          if (sortMissingLast) c = mul;\n          else if (sortMissingFirst) c = -mul;\n          else c = -1;\n        } else if (v2 == null) {\n          if (sortMissingLast) c = -mul;\n          else if (sortMissingFirst) c = mul;\n          else c = 1;\n        } else {\n          c = v1.compareTo(v2);\n        }\n\n        c = c * mul;\n\n        return c;\n      }\n    };\n  }\n\n","sourceOld":"  public static Comparator<Doc> createComparator(final String field, final boolean asc, final boolean sortMissingLast, final boolean sortMissingFirst, final boolean sortMissingAsZero) {\n    final int mul = asc ? 1 : -1;\n\n    if (field.equals(\"_docid_\")) {\n     return new Comparator<Doc>() {\n      @Override\n      public int compare(Doc o1, Doc o2) {\n        return (o1.order - o2.order) * mul;\n      }\n     };\n    }\n\n    if (field.equals(\"score\")) {\n      return createComparator(\"score_f\", asc, sortMissingLast, sortMissingFirst, sortMissingAsZero);\n    }\n\n    return new Comparator<Doc>() {\n      private Comparable zeroVal(Comparable template) {\n        if (template == null) return null;\n        if (template instanceof String) return null;  // fast-path for string\n        if (template instanceof Integer) return 0;\n        if (template instanceof Long) return (long)0;\n        if (template instanceof Float) return (float)0;\n        if (template instanceof Double) return (double)0;\n        if (template instanceof Short) return (short)0;\n        if (template instanceof Byte) return (byte)0;\n        if (template instanceof Character) return (char)0;\n        return null;\n      }\n\n      @Override\n      public int compare(Doc o1, Doc o2) {\n        Comparable v1 = o1.getFirstValue(field);\n        Comparable v2 = o2.getFirstValue(field);\n\n        v1 = v1 == null ? zeroVal(v2) : v1;\n        v2 = v2 == null ? zeroVal(v1) : v2;\n\n        int c = 0;\n        if (v1 == v2) {\n          c = 0;\n        } else if (v1 == null) {\n          if (sortMissingLast) c = mul;\n          else if (sortMissingFirst) c = -mul;\n          else c = -1;\n        } else if (v2 == null) {\n          if (sortMissingLast) c = -mul;\n          else if (sortMissingFirst) c = mul;\n          else c = 1;\n        } else {\n          c = v1.compareTo(v2);\n        }\n\n        c = c * mul;\n\n        return c;\n      }\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"19275ba31e621f6da1b83bf13af75233876fd3d4","date":1374846698,"type":3,"author":"Han Jiang","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/SolrTestCaseJ4#createComparator(String,boolean,boolean,boolean,boolean).mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/SolrTestCaseJ4#createComparator(String,boolean,boolean,boolean,boolean).mjava","sourceNew":"  public static Comparator<Doc> createComparator(final String field, final boolean asc, final boolean sortMissingLast, final boolean sortMissingFirst, final boolean sortMissingAsZero) {\n    final int mul = asc ? 1 : -1;\n\n    if (field.equals(\"_docid_\")) {\n     return new Comparator<Doc>() {\n      @Override\n      public int compare(Doc o1, Doc o2) {\n        return (o1.order - o2.order) * mul;\n      }\n     };\n    }\n\n    if (field.equals(\"score\")) {\n      return createComparator(\"score_f\", asc, sortMissingLast, sortMissingFirst, sortMissingAsZero);\n    }\n\n    return new Comparator<Doc>() {\n      private Comparable zeroVal(Comparable template) {\n        if (template == null) return null;\n        if (template instanceof String) return null;  // fast-path for string\n        if (template instanceof Integer) return 0;\n        if (template instanceof Long) return (long)0;\n        if (template instanceof Float) return (float)0;\n        if (template instanceof Double) return (double)0;\n        if (template instanceof Short) return (short)0;\n        if (template instanceof Byte) return (byte)0;\n        if (template instanceof Character) return (char)0;\n        return null;\n      }\n\n      @Override\n      public int compare(Doc o1, Doc o2) {\n        Comparable v1 = o1.getFirstValue(field);\n        Comparable v2 = o2.getFirstValue(field);\n\n        v1 = v1 == null ? zeroVal(v2) : v1;\n        v2 = v2 == null ? zeroVal(v1) : v2;\n\n        int c = 0;\n        if (v1 == v2) {\n          c = 0;\n        } else if (v1 == null) {\n          if (sortMissingLast) c = mul;\n          else if (sortMissingFirst) c = -mul;\n          else c = -1;\n        } else if (v2 == null) {\n          if (sortMissingLast) c = -mul;\n          else if (sortMissingFirst) c = mul;\n          else c = 1;\n        } else {\n          c = v1.compareTo(v2);\n        }\n\n        c = c * mul;\n\n        return c;\n      }\n    };\n  }\n\n","sourceOld":"  public static Comparator<Doc> createComparator(final String field, final boolean asc, final boolean sortMissingLast, final boolean sortMissingFirst, final boolean sortMissingAsZero) {\n    final int mul = asc ? 1 : -1;\n\n    if (field.equals(\"_docid_\")) {\n     return new Comparator<Doc>() {\n      @Override\n      public int compare(Doc o1, Doc o2) {\n        return (o1.order - o2.order) * mul;\n      }\n     };\n    }\n\n    if (field.equals(\"score\")) {\n      return createComparator(\"score_f\", asc, sortMissingLast, sortMissingFirst, sortMissingAsZero);\n    }\n\n    return new Comparator<Doc>() {\n      private Comparable zeroVal(Comparable template) {\n        if (template == null) return null;\n        if (template instanceof String) return null;  // fast-path for string\n        if (template instanceof Integer) return 0;\n        if (template instanceof Long) return (long)0;\n        if (template instanceof Float) return (float)0;\n        if (template instanceof Double) return (double)0;\n        if (template instanceof Short) return (short)0;\n        if (template instanceof Byte) return (byte)0;\n        if (template instanceof Character) return (char)0;\n        return null;\n      }\n\n      @Override\n      public int compare(Doc o1, Doc o2) {\n        Comparable v1 = o1.getFirstValue(field);\n        Comparable v2 = o2.getFirstValue(field);\n\n        v1 = v1 == null ? zeroVal(v2) : v1;\n        v2 = v2 == null ? zeroVal(v1) : v2;\n\n        int c = 0;\n        if (v1 == v2) {\n          c = 0;\n        } else if (v1 == null) {\n          if (sortMissingLast) c = mul;\n          else if (sortMissingFirst) c = -mul;\n          else c = -1;\n        } else if (v2 == null) {\n          if (sortMissingLast) c = -mul;\n          else if (sortMissingFirst) c = mul;\n          else c = 1;\n        } else {\n          c = v1.compareTo(v2);\n        }\n\n        c = c * mul;\n\n        return c;\n      }\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"716d18f3a9b0993bc679d7fa7abdc9bfb03411ec","date":1376375609,"type":3,"author":"Han Jiang","isMerge":true,"pathNew":"solr/test-framework/src/java/org/apache/solr/SolrTestCaseJ4#createComparator(String,boolean,boolean,boolean,boolean).mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/SolrTestCaseJ4#createComparator(String,boolean,boolean,boolean,boolean).mjava","sourceNew":"  public static Comparator<Doc> createComparator(final String field, final boolean asc, final boolean sortMissingLast, final boolean sortMissingFirst, final boolean sortMissingAsZero) {\n    final int mul = asc ? 1 : -1;\n\n    if (field.equals(\"_docid_\")) {\n     return new Comparator<Doc>() {\n      @Override\n      public int compare(Doc o1, Doc o2) {\n        return (o1.order - o2.order) * mul;\n      }\n     };\n    }\n\n    if (field.equals(\"score\")) {\n      return createComparator(\"score_f\", asc, sortMissingLast, sortMissingFirst, sortMissingAsZero);\n    }\n\n    return new Comparator<Doc>() {\n      private Comparable zeroVal(Comparable template) {\n        if (template == null) return null;\n        if (template instanceof String) return null;  // fast-path for string\n        if (template instanceof Integer) return 0;\n        if (template instanceof Long) return (long)0;\n        if (template instanceof Float) return (float)0;\n        if (template instanceof Double) return (double)0;\n        if (template instanceof Short) return (short)0;\n        if (template instanceof Byte) return (byte)0;\n        if (template instanceof Character) return (char)0;\n        return null;\n      }\n\n      @Override\n      public int compare(Doc o1, Doc o2) {\n        Comparable v1 = o1.getFirstValue(field);\n        Comparable v2 = o2.getFirstValue(field);\n\n        v1 = v1 == null ? zeroVal(v2) : v1;\n        v2 = v2 == null ? zeroVal(v1) : v2;\n\n        int c = 0;\n        if (v1 == v2) {\n          c = 0;\n        } else if (v1 == null) {\n          if (sortMissingLast) c = mul;\n          else if (sortMissingFirst) c = -mul;\n          else c = -1;\n        } else if (v2 == null) {\n          if (sortMissingLast) c = -mul;\n          else if (sortMissingFirst) c = mul;\n          else c = 1;\n        } else {\n          c = v1.compareTo(v2);\n        }\n\n        c = c * mul;\n\n        return c;\n      }\n    };\n  }\n\n","sourceOld":"  public static Comparator<Doc> createComparator(final String field, final boolean asc, final boolean sortMissingLast, final boolean sortMissingFirst, final boolean sortMissingAsZero) {\n    final int mul = asc ? 1 : -1;\n\n    if (field.equals(\"_docid_\")) {\n     return new Comparator<Doc>() {\n      @Override\n      public int compare(Doc o1, Doc o2) {\n        return (o1.order - o2.order) * mul;\n      }\n     };\n    }\n\n    if (field.equals(\"score\")) {\n      return createComparator(\"score_f\", asc, sortMissingLast, sortMissingFirst, sortMissingAsZero);\n    }\n\n    return new Comparator<Doc>() {\n      private Comparable zeroVal(Comparable template) {\n        if (template == null) return null;\n        if (template instanceof String) return null;  // fast-path for string\n        if (template instanceof Integer) return 0;\n        if (template instanceof Long) return (long)0;\n        if (template instanceof Float) return (float)0;\n        if (template instanceof Double) return (double)0;\n        if (template instanceof Short) return (short)0;\n        if (template instanceof Byte) return (byte)0;\n        if (template instanceof Character) return (char)0;\n        return null;\n      }\n\n      @Override\n      public int compare(Doc o1, Doc o2) {\n        Comparable v1 = o1.getFirstValue(field);\n        Comparable v2 = o2.getFirstValue(field);\n\n        v1 = v1 == null ? zeroVal(v2) : v1;\n        v2 = v2 == null ? zeroVal(v1) : v2;\n\n        int c = 0;\n        if (v1 == v2) {\n          c = 0;\n        } else if (v1 == null) {\n          if (sortMissingLast) c = mul;\n          else if (sortMissingFirst) c = -mul;\n          else c = -1;\n        } else if (v2 == null) {\n          if (sortMissingLast) c = -mul;\n          else if (sortMissingFirst) c = mul;\n          else c = 1;\n        } else {\n          c = v1.compareTo(v2);\n        }\n\n        c = c * mul;\n\n        return c;\n      }\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3a0c04b71951333291abc7f317109a6a5957bd28","date":1457097827,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/SolrTestCaseJ4#createComparator(String,boolean,boolean,boolean,boolean).mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/SolrTestCaseJ4#createComparator(String,boolean,boolean,boolean,boolean).mjava","sourceNew":"  public static Comparator<Doc> createComparator(final String field, final boolean asc, final boolean sortMissingLast, final boolean sortMissingFirst, final boolean sortMissingAsZero) {\n    final int mul = asc ? 1 : -1;\n\n    if (field.equals(\"_docid_\")) {\n     return (o1, o2) -> (o1.order - o2.order) * mul;\n    }\n\n    if (field.equals(\"score\")) {\n      return createComparator(\"score_f\", asc, sortMissingLast, sortMissingFirst, sortMissingAsZero);\n    }\n\n    return new Comparator<Doc>() {\n      private Comparable zeroVal(Comparable template) {\n        if (template == null) return null;\n        if (template instanceof String) return null;  // fast-path for string\n        if (template instanceof Integer) return 0;\n        if (template instanceof Long) return (long)0;\n        if (template instanceof Float) return (float)0;\n        if (template instanceof Double) return (double)0;\n        if (template instanceof Short) return (short)0;\n        if (template instanceof Byte) return (byte)0;\n        if (template instanceof Character) return (char)0;\n        return null;\n      }\n\n      @Override\n      public int compare(Doc o1, Doc o2) {\n        Comparable v1 = o1.getFirstValue(field);\n        Comparable v2 = o2.getFirstValue(field);\n\n        v1 = v1 == null ? zeroVal(v2) : v1;\n        v2 = v2 == null ? zeroVal(v1) : v2;\n\n        int c = 0;\n        if (v1 == v2) {\n          c = 0;\n        } else if (v1 == null) {\n          if (sortMissingLast) c = mul;\n          else if (sortMissingFirst) c = -mul;\n          else c = -1;\n        } else if (v2 == null) {\n          if (sortMissingLast) c = -mul;\n          else if (sortMissingFirst) c = mul;\n          else c = 1;\n        } else {\n          c = v1.compareTo(v2);\n        }\n\n        c = c * mul;\n\n        return c;\n      }\n    };\n  }\n\n","sourceOld":"  public static Comparator<Doc> createComparator(final String field, final boolean asc, final boolean sortMissingLast, final boolean sortMissingFirst, final boolean sortMissingAsZero) {\n    final int mul = asc ? 1 : -1;\n\n    if (field.equals(\"_docid_\")) {\n     return new Comparator<Doc>() {\n      @Override\n      public int compare(Doc o1, Doc o2) {\n        return (o1.order - o2.order) * mul;\n      }\n     };\n    }\n\n    if (field.equals(\"score\")) {\n      return createComparator(\"score_f\", asc, sortMissingLast, sortMissingFirst, sortMissingAsZero);\n    }\n\n    return new Comparator<Doc>() {\n      private Comparable zeroVal(Comparable template) {\n        if (template == null) return null;\n        if (template instanceof String) return null;  // fast-path for string\n        if (template instanceof Integer) return 0;\n        if (template instanceof Long) return (long)0;\n        if (template instanceof Float) return (float)0;\n        if (template instanceof Double) return (double)0;\n        if (template instanceof Short) return (short)0;\n        if (template instanceof Byte) return (byte)0;\n        if (template instanceof Character) return (char)0;\n        return null;\n      }\n\n      @Override\n      public int compare(Doc o1, Doc o2) {\n        Comparable v1 = o1.getFirstValue(field);\n        Comparable v2 = o2.getFirstValue(field);\n\n        v1 = v1 == null ? zeroVal(v2) : v1;\n        v2 = v2 == null ? zeroVal(v1) : v2;\n\n        int c = 0;\n        if (v1 == v2) {\n          c = 0;\n        } else if (v1 == null) {\n          if (sortMissingLast) c = mul;\n          else if (sortMissingFirst) c = -mul;\n          else c = -1;\n        } else if (v2 == null) {\n          if (sortMissingLast) c = -mul;\n          else if (sortMissingFirst) c = mul;\n          else c = 1;\n        } else {\n          c = v1.compareTo(v2);\n        }\n\n        c = c * mul;\n\n        return c;\n      }\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6809a6d7924df2c864d6a5863944aff9dfeb372c","date":1591826750,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/SolrTestCaseJ4#createComparator(String,boolean,boolean,boolean,boolean).mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/SolrTestCaseJ4#createComparator(String,boolean,boolean,boolean,boolean).mjava","sourceNew":"  public static Comparator<Doc> createComparator(final String field, final boolean asc, final boolean sortMissingLast, final boolean sortMissingFirst, final boolean sortMissingAsZero) {\n    final int mul = asc ? 1 : -1;\n\n    if (field.equals(\"_docid_\")) {\n     return (o1, o2) -> (o1.order - o2.order) * mul;\n    }\n\n    if (field.equals(\"score\")) {\n      return createComparator(\"score_f\", asc, sortMissingLast, sortMissingFirst, sortMissingAsZero);\n    }\n\n    return new Comparator<Doc>() {\n      @SuppressWarnings({\"rawtypes\"})\n      private Comparable zeroVal(Comparable template) {\n        if (template == null) return null;\n        if (template instanceof String) return null;  // fast-path for string\n        if (template instanceof Integer) return 0;\n        if (template instanceof Long) return (long)0;\n        if (template instanceof Float) return (float)0;\n        if (template instanceof Double) return (double)0;\n        if (template instanceof Short) return (short)0;\n        if (template instanceof Byte) return (byte)0;\n        if (template instanceof Character) return (char)0;\n        return null;\n      }\n\n      @Override\n      @SuppressWarnings({\"unchecked\"})\n      public int compare(Doc o1, Doc o2) {\n        @SuppressWarnings({\"rawtypes\"})\n        Comparable v1 = o1.getFirstValue(field);\n        @SuppressWarnings({\"rawtypes\"})\n        Comparable v2 = o2.getFirstValue(field);\n\n        v1 = v1 == null ? zeroVal(v2) : v1;\n        v2 = v2 == null ? zeroVal(v1) : v2;\n\n        int c = 0;\n        if (v1 == v2) {\n          c = 0;\n        } else if (v1 == null) {\n          if (sortMissingLast) c = mul;\n          else if (sortMissingFirst) c = -mul;\n          else c = -1;\n        } else if (v2 == null) {\n          if (sortMissingLast) c = -mul;\n          else if (sortMissingFirst) c = mul;\n          else c = 1;\n        } else {\n          c = v1.compareTo(v2);\n        }\n\n        c = c * mul;\n\n        return c;\n      }\n    };\n  }\n\n","sourceOld":"  public static Comparator<Doc> createComparator(final String field, final boolean asc, final boolean sortMissingLast, final boolean sortMissingFirst, final boolean sortMissingAsZero) {\n    final int mul = asc ? 1 : -1;\n\n    if (field.equals(\"_docid_\")) {\n     return (o1, o2) -> (o1.order - o2.order) * mul;\n    }\n\n    if (field.equals(\"score\")) {\n      return createComparator(\"score_f\", asc, sortMissingLast, sortMissingFirst, sortMissingAsZero);\n    }\n\n    return new Comparator<Doc>() {\n      private Comparable zeroVal(Comparable template) {\n        if (template == null) return null;\n        if (template instanceof String) return null;  // fast-path for string\n        if (template instanceof Integer) return 0;\n        if (template instanceof Long) return (long)0;\n        if (template instanceof Float) return (float)0;\n        if (template instanceof Double) return (double)0;\n        if (template instanceof Short) return (short)0;\n        if (template instanceof Byte) return (byte)0;\n        if (template instanceof Character) return (char)0;\n        return null;\n      }\n\n      @Override\n      public int compare(Doc o1, Doc o2) {\n        Comparable v1 = o1.getFirstValue(field);\n        Comparable v2 = o2.getFirstValue(field);\n\n        v1 = v1 == null ? zeroVal(v2) : v1;\n        v2 = v2 == null ? zeroVal(v1) : v2;\n\n        int c = 0;\n        if (v1 == v2) {\n          c = 0;\n        } else if (v1 == null) {\n          if (sortMissingLast) c = mul;\n          else if (sortMissingFirst) c = -mul;\n          else c = -1;\n        } else if (v2 == null) {\n          if (sortMissingLast) c = -mul;\n          else if (sortMissingFirst) c = mul;\n          else c = 1;\n        } else {\n          c = v1.compareTo(v2);\n        }\n\n        c = c * mul;\n\n        return c;\n      }\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"6809a6d7924df2c864d6a5863944aff9dfeb372c":["3a0c04b71951333291abc7f317109a6a5957bd28"],"716d18f3a9b0993bc679d7fa7abdc9bfb03411ec":["c26f00b574427b55127e869b935845554afde1fa","19275ba31e621f6da1b83bf13af75233876fd3d4"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"c26f00b574427b55127e869b935845554afde1fa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","c903c3d15906a3da96b8c0c2fb704491005fdbdb"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"19275ba31e621f6da1b83bf13af75233876fd3d4":["c26f00b574427b55127e869b935845554afde1fa"],"a258fbb26824fd104ed795e5d9033d2d040049ee":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"3a0c04b71951333291abc7f317109a6a5957bd28":["19275ba31e621f6da1b83bf13af75233876fd3d4"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["6809a6d7924df2c864d6a5863944aff9dfeb372c"]},"commit2Childs":{"6809a6d7924df2c864d6a5863944aff9dfeb372c":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"716d18f3a9b0993bc679d7fa7abdc9bfb03411ec":[],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["c26f00b574427b55127e869b935845554afde1fa"],"c26f00b574427b55127e869b935845554afde1fa":["716d18f3a9b0993bc679d7fa7abdc9bfb03411ec","19275ba31e621f6da1b83bf13af75233876fd3d4"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c903c3d15906a3da96b8c0c2fb704491005fdbdb","c26f00b574427b55127e869b935845554afde1fa","a258fbb26824fd104ed795e5d9033d2d040049ee"],"19275ba31e621f6da1b83bf13af75233876fd3d4":["716d18f3a9b0993bc679d7fa7abdc9bfb03411ec","3a0c04b71951333291abc7f317109a6a5957bd28"],"a258fbb26824fd104ed795e5d9033d2d040049ee":[],"3a0c04b71951333291abc7f317109a6a5957bd28":["6809a6d7924df2c864d6a5863944aff9dfeb372c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["716d18f3a9b0993bc679d7fa7abdc9bfb03411ec","a258fbb26824fd104ed795e5d9033d2d040049ee","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}