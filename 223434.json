{"path":"solr/solrj/src/test/org/apache/solr/common/util/TestJavaBinCodec#genBinaryFiles().mjava","commits":[{"id":"9a862f08ffeb00b03b4c641de86b167b1d6f7cd1","date":1402094642,"type":1,"author":"Chris M. Hostetter","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/common/util/TestJavaBinCodec#genBinaryFiles().mjava","pathOld":"solr/solrj/src/test/org/apache/solr/common/util/TestJavaBinCodec#genBinaryFile().mjava","sourceNew":"  public void genBinaryFiles() throws IOException {\n    JavaBinCodec javabin = new JavaBinCodec();\n    ByteArrayOutputStream os = new ByteArrayOutputStream();\n    \n    Object data = generateAllDataTypes();\n    \n    javabin.marshal(data, os);\n    byte[] out = os.toByteArray();\n    FileOutputStream fs = new FileOutputStream(new File(BIN_FILE_LOCATION));\n    BufferedOutputStream bos = new BufferedOutputStream(fs);\n    bos.write(out);\n    bos.close();\n\n    //Binary file with child documents\n    javabin = new JavaBinCodec();\n    SolrDocument sdoc = generateSolrDocumentWithChildDocs();\n    os = new ByteArrayOutputStream();\n    javabin.marshal(sdoc, os);\n    fs = new FileOutputStream(new File(BIN_FILE_LOCATION_CHILD_DOCS));\n    bos = new BufferedOutputStream(fs);\n    bos.write(os.toByteArray());\n    bos.close();\n\n  }\n\n","sourceOld":"  public void genBinaryFile() throws IOException {\n    JavaBinCodec javabin = new JavaBinCodec();\n    ByteArrayOutputStream os = new ByteArrayOutputStream();\n    \n    Object data = generateAllDataTypes();\n    \n    javabin.marshal(data, os);\n    byte[] out = os.toByteArray();\n    FileOutputStream fs = new FileOutputStream(new File(BIN_FILE_LOCATION));\n    BufferedOutputStream bos = new BufferedOutputStream(fs);\n    bos.write(out);\n    bos.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"04aef18a25f8e0d1832199f0cc7607773de5a229","date":1473142144,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/common/util/TestJavaBinCodec#genBinaryFiles().mjava","pathOld":"solr/solrj/src/test/org/apache/solr/common/util/TestJavaBinCodec#genBinaryFiles().mjava","sourceNew":"  public void genBinaryFiles() throws IOException {\n\n    Object data = generateAllDataTypes();\n    byte[] out = getBytes(data);\n    FileOutputStream fs = new FileOutputStream(new File(BIN_FILE_LOCATION));\n    BufferedOutputStream bos = new BufferedOutputStream(fs);\n    bos.write(out);\n    bos.close();\n\n    //Binary file with child documents\n    SolrDocument sdoc = generateSolrDocumentWithChildDocs();\n    fs = new FileOutputStream(new File(BIN_FILE_LOCATION_CHILD_DOCS));\n    bos = new BufferedOutputStream(fs);\n    bos.write(getBytes(sdoc));\n    bos.close();\n\n  }\n\n","sourceOld":"  public void genBinaryFiles() throws IOException {\n    JavaBinCodec javabin = new JavaBinCodec();\n    ByteArrayOutputStream os = new ByteArrayOutputStream();\n    \n    Object data = generateAllDataTypes();\n    \n    javabin.marshal(data, os);\n    byte[] out = os.toByteArray();\n    FileOutputStream fs = new FileOutputStream(new File(BIN_FILE_LOCATION));\n    BufferedOutputStream bos = new BufferedOutputStream(fs);\n    bos.write(out);\n    bos.close();\n\n    //Binary file with child documents\n    javabin = new JavaBinCodec();\n    SolrDocument sdoc = generateSolrDocumentWithChildDocs();\n    os = new ByteArrayOutputStream();\n    javabin.marshal(sdoc, os);\n    fs = new FileOutputStream(new File(BIN_FILE_LOCATION_CHILD_DOCS));\n    bos = new BufferedOutputStream(fs);\n    bos.write(os.toByteArray());\n    bos.close();\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"89424def13674ea17829b41c5883c54ecc31a132","date":1473767373,"type":3,"author":"Noble Paul","isMerge":true,"pathNew":"solr/solrj/src/test/org/apache/solr/common/util/TestJavaBinCodec#genBinaryFiles().mjava","pathOld":"solr/solrj/src/test/org/apache/solr/common/util/TestJavaBinCodec#genBinaryFiles().mjava","sourceNew":"  public void genBinaryFiles() throws IOException {\n\n    Object data = generateAllDataTypes();\n    byte[] out = getBytes(data);\n    FileOutputStream fs = new FileOutputStream(new File(BIN_FILE_LOCATION));\n    BufferedOutputStream bos = new BufferedOutputStream(fs);\n    bos.write(out);\n    bos.close();\n\n    //Binary file with child documents\n    SolrDocument sdoc = generateSolrDocumentWithChildDocs();\n    fs = new FileOutputStream(new File(BIN_FILE_LOCATION_CHILD_DOCS));\n    bos = new BufferedOutputStream(fs);\n    bos.write(getBytes(sdoc));\n    bos.close();\n\n  }\n\n","sourceOld":"  public void genBinaryFiles() throws IOException {\n    JavaBinCodec javabin = new JavaBinCodec();\n    ByteArrayOutputStream os = new ByteArrayOutputStream();\n    \n    Object data = generateAllDataTypes();\n    \n    javabin.marshal(data, os);\n    byte[] out = os.toByteArray();\n    FileOutputStream fs = new FileOutputStream(new File(BIN_FILE_LOCATION));\n    BufferedOutputStream bos = new BufferedOutputStream(fs);\n    bos.write(out);\n    bos.close();\n\n    //Binary file with child documents\n    javabin = new JavaBinCodec();\n    SolrDocument sdoc = generateSolrDocumentWithChildDocs();\n    os = new ByteArrayOutputStream();\n    javabin.marshal(sdoc, os);\n    fs = new FileOutputStream(new File(BIN_FILE_LOCATION_CHILD_DOCS));\n    bos = new BufferedOutputStream(fs);\n    bos.write(os.toByteArray());\n    bos.close();\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"17e5da53e4e5bd659e22add9bba1cfa222e7e30d","date":1475435902,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"solr/solrj/src/test/org/apache/solr/common/util/TestJavaBinCodec#genBinaryFiles().mjava","pathOld":"solr/solrj/src/test/org/apache/solr/common/util/TestJavaBinCodec#genBinaryFiles().mjava","sourceNew":"  public void genBinaryFiles() throws IOException {\n\n    Object data = generateAllDataTypes();\n    byte[] out = getBytes(data);\n    FileOutputStream fs = new FileOutputStream(new File(BIN_FILE_LOCATION));\n    BufferedOutputStream bos = new BufferedOutputStream(fs);\n    bos.write(out);\n    bos.close();\n\n    //Binary file with child documents\n    SolrDocument sdoc = generateSolrDocumentWithChildDocs();\n    fs = new FileOutputStream(new File(BIN_FILE_LOCATION_CHILD_DOCS));\n    bos = new BufferedOutputStream(fs);\n    bos.write(getBytes(sdoc));\n    bos.close();\n\n  }\n\n","sourceOld":"  public void genBinaryFiles() throws IOException {\n    JavaBinCodec javabin = new JavaBinCodec();\n    ByteArrayOutputStream os = new ByteArrayOutputStream();\n    \n    Object data = generateAllDataTypes();\n    \n    javabin.marshal(data, os);\n    byte[] out = os.toByteArray();\n    FileOutputStream fs = new FileOutputStream(new File(BIN_FILE_LOCATION));\n    BufferedOutputStream bos = new BufferedOutputStream(fs);\n    bos.write(out);\n    bos.close();\n\n    //Binary file with child documents\n    javabin = new JavaBinCodec();\n    SolrDocument sdoc = generateSolrDocumentWithChildDocs();\n    os = new ByteArrayOutputStream();\n    javabin.marshal(sdoc, os);\n    fs = new FileOutputStream(new File(BIN_FILE_LOCATION_CHILD_DOCS));\n    bos = new BufferedOutputStream(fs);\n    bos.write(os.toByteArray());\n    bos.close();\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/solrj/src/test/org/apache/solr/common/util/TestJavaBinCodec#genBinaryFiles().mjava","pathOld":"solr/solrj/src/test/org/apache/solr/common/util/TestJavaBinCodec#genBinaryFiles().mjava","sourceNew":"  public void genBinaryFiles() throws IOException {\n\n    Object data = generateAllDataTypes();\n    byte[] out = getBytes(data);\n    FileOutputStream fs = new FileOutputStream(new File(BIN_FILE_LOCATION));\n    BufferedOutputStream bos = new BufferedOutputStream(fs);\n    bos.write(out);\n    bos.close();\n\n    //Binary file with child documents\n    SolrDocument sdoc = generateSolrDocumentWithChildDocs();\n    fs = new FileOutputStream(new File(BIN_FILE_LOCATION_CHILD_DOCS));\n    bos = new BufferedOutputStream(fs);\n    bos.write(getBytes(sdoc));\n    bos.close();\n\n  }\n\n","sourceOld":"  public void genBinaryFiles() throws IOException {\n    JavaBinCodec javabin = new JavaBinCodec();\n    ByteArrayOutputStream os = new ByteArrayOutputStream();\n    \n    Object data = generateAllDataTypes();\n    \n    javabin.marshal(data, os);\n    byte[] out = os.toByteArray();\n    FileOutputStream fs = new FileOutputStream(new File(BIN_FILE_LOCATION));\n    BufferedOutputStream bos = new BufferedOutputStream(fs);\n    bos.write(out);\n    bos.close();\n\n    //Binary file with child documents\n    javabin = new JavaBinCodec();\n    SolrDocument sdoc = generateSolrDocumentWithChildDocs();\n    os = new ByteArrayOutputStream();\n    javabin.marshal(sdoc, os);\n    fs = new FileOutputStream(new File(BIN_FILE_LOCATION_CHILD_DOCS));\n    bos = new BufferedOutputStream(fs);\n    bos.write(os.toByteArray());\n    bos.close();\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"04aef18a25f8e0d1832199f0cc7607773de5a229":["9a862f08ffeb00b03b4c641de86b167b1d6f7cd1"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"17e5da53e4e5bd659e22add9bba1cfa222e7e30d":["9a862f08ffeb00b03b4c641de86b167b1d6f7cd1","89424def13674ea17829b41c5883c54ecc31a132"],"9a862f08ffeb00b03b4c641de86b167b1d6f7cd1":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["9a862f08ffeb00b03b4c641de86b167b1d6f7cd1","17e5da53e4e5bd659e22add9bba1cfa222e7e30d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["17e5da53e4e5bd659e22add9bba1cfa222e7e30d"],"89424def13674ea17829b41c5883c54ecc31a132":["9a862f08ffeb00b03b4c641de86b167b1d6f7cd1","04aef18a25f8e0d1832199f0cc7607773de5a229"]},"commit2Childs":{"04aef18a25f8e0d1832199f0cc7607773de5a229":["89424def13674ea17829b41c5883c54ecc31a132"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9a862f08ffeb00b03b4c641de86b167b1d6f7cd1"],"17e5da53e4e5bd659e22add9bba1cfa222e7e30d":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"9a862f08ffeb00b03b4c641de86b167b1d6f7cd1":["04aef18a25f8e0d1832199f0cc7607773de5a229","17e5da53e4e5bd659e22add9bba1cfa222e7e30d","4cce5816ef15a48a0bc11e5d400497ee4301dd3b","89424def13674ea17829b41c5883c54ecc31a132"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"89424def13674ea17829b41c5883c54ecc31a132":["17e5da53e4e5bd659e22add9bba1cfa222e7e30d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}