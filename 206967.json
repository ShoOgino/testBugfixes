{"path":"lucene/core/src/java/org/apache/lucene/index/CheckIndex#checkSortedNumericDocValues(String,int,SortedNumericDocValues,SortedNumericDocValues).mjava","commits":[{"id":"7f3d2a33d17fc14a585ce28e167b1bb1c31946b0","date":1552989190,"type":1,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/CheckIndex#checkSortedNumericDocValues(String,int,SortedNumericDocValues,SortedNumericDocValues).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/CheckIndex#checkSortedNumericDocValues(String,int,SortedNumericDocValues).mjava","sourceNew":"  private static void checkSortedNumericDocValues(String fieldName, int maxDoc, SortedNumericDocValues ndv, SortedNumericDocValues ndv2) throws IOException {\n    if (ndv.docID() != -1) {\n      throw new RuntimeException(\"dv iterator for field: \" + fieldName + \" should start at docID=-1, but got \" + ndv.docID());\n    }\n    for (int docID = ndv.nextDoc(); docID != NO_MORE_DOCS; docID = ndv.nextDoc()) {\n      int count = ndv.docValueCount();\n      if (count == 0) {\n        throw new RuntimeException(\"sorted numeric dv for field: \" + fieldName + \" returned docValueCount=0 for docID=\" + docID);\n      }\n      if (ndv2.advanceExact(docID) == false) {\n        throw new RuntimeException(\"advanceExact did not find matching doc ID: \" + docID);\n      }\n      int count2 = ndv2.docValueCount();\n      if (count != count2) {\n        throw new RuntimeException(\"advanceExact reports different value count: \" + count + \" != \" + count2);\n      }\n      long previous = Long.MIN_VALUE;\n      for (int j = 0; j < count; j++) {\n        long value = ndv.nextValue();\n        if (value < previous) {\n          throw new RuntimeException(\"values out of order: \" + value + \" < \" + previous + \" for doc: \" + docID);\n        }\n        previous = value;\n\n        long value2 = ndv2.nextValue();\n        if (value != value2) {\n          throw new RuntimeException(\"advanceExact reports different value: \" + value + \" != \" + value2);\n        }\n      }\n    }\n  }\n\n","sourceOld":"  private static void checkSortedNumericDocValues(String fieldName, int maxDoc, SortedNumericDocValues ndv) throws IOException {\n    if (ndv.docID() != -1) {\n      throw new RuntimeException(\"dv iterator for field: \" + fieldName + \" should start at docID=-1, but got \" + ndv.docID());\n    }\n    while (true) {\n      int docID = ndv.nextDoc();\n      if (docID == NO_MORE_DOCS) {\n        break;\n      }\n      int count = ndv.docValueCount();\n      if (count == 0) {\n        throw new RuntimeException(\"sorted numeric dv for field: \" + fieldName + \" returned docValueCount=0 for docID=\" + docID);\n      }\n      long previous = Long.MIN_VALUE;\n      for (int j = 0; j < count; j++) {\n        long value = ndv.nextValue();\n        if (value < previous) {\n          throw new RuntimeException(\"values out of order: \" + value + \" < \" + previous + \" for doc: \" + docID);\n        }\n        previous = value;\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"7f3d2a33d17fc14a585ce28e167b1bb1c31946b0":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["7f3d2a33d17fc14a585ce28e167b1bb1c31946b0"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["7f3d2a33d17fc14a585ce28e167b1bb1c31946b0"],"7f3d2a33d17fc14a585ce28e167b1bb1c31946b0":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}