{"path":"solr/solrj/src/test/org/apache/solr/client/solrj/io/stream/StreamExpressionTest#testFinddelay().mjava","commits":[{"id":"d5af4cf979f31a72154bab227890da4561b327a3","date":1495645850,"type":0,"author":"Joel Bernstein","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/io/stream/StreamExpressionTest#testFinddelay().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testFinddelay() throws Exception {\n    UpdateRequest updateRequest = new UpdateRequest();\n\n    //Pad column 1 with three zeros.\n    updateRequest.add(id, \"10\", \"price_f\", \"0.0\", \"col_s\", \"a\", \"order_i\", \"0\");\n    updateRequest.add(id, \"11\", \"price_f\", \"0.0\", \"col_s\", \"a\", \"order_i\", \"0\");\n    updateRequest.add(id, \"12\", \"price_f\", \"0.0\", \"col_s\", \"a\", \"order_i\", \"0\");\n    updateRequest.add(id, \"1\", \"price_f\", \"100.0\", \"col_s\", \"a\", \"order_i\", \"1\");\n    updateRequest.add(id, \"2\", \"price_f\", \"200.0\", \"col_s\", \"a\", \"order_i\", \"2\");\n    updateRequest.add(id, \"3\", \"price_f\", \"300.0\", \"col_s\", \"a\", \"order_i\", \"3\");\n    updateRequest.add(id, \"4\", \"price_f\", \"100.0\", \"col_s\", \"a\", \"order_i\", \"4\");\n    updateRequest.add(id, \"5\", \"price_f\", \"200.0\", \"col_s\", \"a\", \"order_i\", \"5\");\n    updateRequest.add(id, \"6\", \"price_f\", \"400.0\", \"col_s\", \"a\", \"order_i\", \"6\");\n    updateRequest.add(id, \"7\", \"price_f\", \"600.0\", \"col_s\", \"a\", \"order_i\", \"7\");\n\n    updateRequest.add(id, \"100\", \"price_f\", \"200.0\", \"col_s\", \"b\", \"order_i\", \"1\");\n    updateRequest.add(id, \"101\", \"price_f\", \"400.0\", \"col_s\", \"b\", \"order_i\", \"2\");\n    updateRequest.add(id, \"102\", \"price_f\", \"600.0\", \"col_s\", \"b\", \"order_i\", \"3\");\n    updateRequest.add(id, \"103\", \"price_f\", \"200.0\", \"col_s\", \"b\", \"order_i\", \"4\");\n    updateRequest.add(id, \"104\", \"price_f\", \"400.0\", \"col_s\", \"b\", \"order_i\", \"5\");\n    updateRequest.add(id, \"105\", \"price_f\", \"800.0\", \"col_s\", \"b\", \"order_i\", \"6\");\n    updateRequest.add(id, \"106\", \"price_f\", \"1200.0\", \"col_s\", \"b\", \"order_i\", \"7\");\n\n\n    updateRequest.add(id, \"200\", \"price_f\", \"-200.0\", \"col_s\", \"c\", \"order_i\", \"1\");\n    updateRequest.add(id, \"301\", \"price_f\", \"-400.0\", \"col_s\", \"c\", \"order_i\", \"2\");\n    updateRequest.add(id, \"402\", \"price_f\", \"-600.0\", \"col_s\", \"c\", \"order_i\", \"3\");\n    updateRequest.add(id, \"503\", \"price_f\", \"-200.0\", \"col_s\", \"c\", \"order_i\", \"4\");\n    updateRequest.add(id, \"604\", \"price_f\", \"-400.0\", \"col_s\", \"c\", \"order_i\", \"5\");\n    updateRequest.add(id, \"705\", \"price_f\", \"-800.0\", \"col_s\", \"c\", \"order_i\", \"6\");\n    updateRequest.add(id, \"806\", \"price_f\", \"-1200.0\", \"col_s\", \"c\", \"order_i\", \"7\");\n    updateRequest.commit(cluster.getSolrClient(), COLLECTIONORALIAS);\n\n    String expr1 = \"search(\"+COLLECTIONORALIAS+\", q=\\\"col_s:a\\\", fl=\\\"price_f, order_i\\\", sort=\\\"order_i asc\\\")\";\n    String expr2 = \"search(\"+COLLECTIONORALIAS+\", q=\\\"col_s:b\\\", fl=\\\"price_f, order_i\\\", sort=\\\"order_i asc\\\")\";\n\n    String cexpr = \"let(a=\"+expr1+\", b=\"+expr2+\", c=col(a, price_f), d=col(b, price_f), tuple(delay=finddelay(c, d)))\";\n\n    ModifiableSolrParams paramsLoc = new ModifiableSolrParams();\n    paramsLoc.set(\"expr\", cexpr);\n    paramsLoc.set(\"qt\", \"/stream\");\n\n    String url = cluster.getJettySolrRunners().get(0).getBaseUrl().toString()+\"/\"+COLLECTIONORALIAS;\n    TupleStream solrStream = new SolrStream(url, paramsLoc);\n\n    StreamContext context = new StreamContext();\n    solrStream.setStreamContext(context);\n    List<Tuple> tuples = getTuples(solrStream);\n    assertTrue(tuples.size() == 1);\n    Tuple tuple = tuples.get(0);\n    long delay = tuple.getLong(\"delay\");\n    assert(delay == 3);\n\n    expr1 = \"search(\"+COLLECTIONORALIAS+\", q=\\\"col_s:a\\\", fq=\\\"id:(1 2 3 4 5 6 7)\\\", fl=\\\"price_f, order_i\\\", sort=\\\"order_i asc\\\")\";\n    expr2 = \"search(\"+COLLECTIONORALIAS+\", q=\\\"col_s:b\\\", fl=\\\"price_f, order_i\\\", sort=\\\"order_i asc\\\")\";\n\n    cexpr = \"let(a=\"+expr1+\", b=\"+expr2+\", c=col(a, price_f), d=col(b, price_f), tuple(delay=finddelay(c, d)))\";\n\n    paramsLoc = new ModifiableSolrParams();\n    paramsLoc.set(\"expr\", cexpr);\n    paramsLoc.set(\"qt\", \"/stream\");\n\n    solrStream = new SolrStream(url, paramsLoc);\n\n    solrStream.setStreamContext(context);\n    tuples = getTuples(solrStream);\n    assertTrue(tuples.size() == 1);\n    tuple = tuples.get(0);\n    delay = tuple.getLong(\"delay\");\n    assert(delay == 0);\n\n    //Test negative correlation.\n    expr1 = \"search(\"+COLLECTIONORALIAS+\", q=\\\"col_s:a\\\", fq=\\\"id:(1 2 3 4 5 6 7 11 12)\\\",fl=\\\"price_f, order_i\\\", sort=\\\"order_i asc\\\")\";\n    expr2 = \"search(\"+COLLECTIONORALIAS+\", q=\\\"col_s:c\\\", fl=\\\"price_f, order_i\\\", sort=\\\"order_i asc\\\")\";\n\n    cexpr = \"let(a=\"+expr1+\", b=\"+expr2+\", c=col(a, price_f), d=col(b, price_f), tuple(delay=finddelay(c, d)))\";\n\n    paramsLoc = new ModifiableSolrParams();\n    paramsLoc.set(\"expr\", cexpr);\n    paramsLoc.set(\"qt\", \"/stream\");\n\n    solrStream = new SolrStream(url, paramsLoc);\n\n    solrStream.setStreamContext(context);\n    tuples = getTuples(solrStream);\n    assertTrue(tuples.size() == 1);\n    tuple = tuples.get(0);\n    delay = tuple.getLong(\"delay\");\n    assert(delay == 2);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d1f5728f32a4a256b36cfabd7a2636452f599bb9","date":1496231774,"type":0,"author":"Karl Wright","isMerge":true,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/io/stream/StreamExpressionTest#testFinddelay().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testFinddelay() throws Exception {\n    UpdateRequest updateRequest = new UpdateRequest();\n\n    //Pad column 1 with three zeros.\n    updateRequest.add(id, \"10\", \"price_f\", \"0.0\", \"col_s\", \"a\", \"order_i\", \"0\");\n    updateRequest.add(id, \"11\", \"price_f\", \"0.0\", \"col_s\", \"a\", \"order_i\", \"0\");\n    updateRequest.add(id, \"12\", \"price_f\", \"0.0\", \"col_s\", \"a\", \"order_i\", \"0\");\n    updateRequest.add(id, \"1\", \"price_f\", \"100.0\", \"col_s\", \"a\", \"order_i\", \"1\");\n    updateRequest.add(id, \"2\", \"price_f\", \"200.0\", \"col_s\", \"a\", \"order_i\", \"2\");\n    updateRequest.add(id, \"3\", \"price_f\", \"300.0\", \"col_s\", \"a\", \"order_i\", \"3\");\n    updateRequest.add(id, \"4\", \"price_f\", \"100.0\", \"col_s\", \"a\", \"order_i\", \"4\");\n    updateRequest.add(id, \"5\", \"price_f\", \"200.0\", \"col_s\", \"a\", \"order_i\", \"5\");\n    updateRequest.add(id, \"6\", \"price_f\", \"400.0\", \"col_s\", \"a\", \"order_i\", \"6\");\n    updateRequest.add(id, \"7\", \"price_f\", \"600.0\", \"col_s\", \"a\", \"order_i\", \"7\");\n\n    updateRequest.add(id, \"100\", \"price_f\", \"200.0\", \"col_s\", \"b\", \"order_i\", \"1\");\n    updateRequest.add(id, \"101\", \"price_f\", \"400.0\", \"col_s\", \"b\", \"order_i\", \"2\");\n    updateRequest.add(id, \"102\", \"price_f\", \"600.0\", \"col_s\", \"b\", \"order_i\", \"3\");\n    updateRequest.add(id, \"103\", \"price_f\", \"200.0\", \"col_s\", \"b\", \"order_i\", \"4\");\n    updateRequest.add(id, \"104\", \"price_f\", \"400.0\", \"col_s\", \"b\", \"order_i\", \"5\");\n    updateRequest.add(id, \"105\", \"price_f\", \"800.0\", \"col_s\", \"b\", \"order_i\", \"6\");\n    updateRequest.add(id, \"106\", \"price_f\", \"1200.0\", \"col_s\", \"b\", \"order_i\", \"7\");\n\n\n    updateRequest.add(id, \"200\", \"price_f\", \"-200.0\", \"col_s\", \"c\", \"order_i\", \"1\");\n    updateRequest.add(id, \"301\", \"price_f\", \"-400.0\", \"col_s\", \"c\", \"order_i\", \"2\");\n    updateRequest.add(id, \"402\", \"price_f\", \"-600.0\", \"col_s\", \"c\", \"order_i\", \"3\");\n    updateRequest.add(id, \"503\", \"price_f\", \"-200.0\", \"col_s\", \"c\", \"order_i\", \"4\");\n    updateRequest.add(id, \"604\", \"price_f\", \"-400.0\", \"col_s\", \"c\", \"order_i\", \"5\");\n    updateRequest.add(id, \"705\", \"price_f\", \"-800.0\", \"col_s\", \"c\", \"order_i\", \"6\");\n    updateRequest.add(id, \"806\", \"price_f\", \"-1200.0\", \"col_s\", \"c\", \"order_i\", \"7\");\n    updateRequest.commit(cluster.getSolrClient(), COLLECTIONORALIAS);\n\n    String expr1 = \"search(\"+COLLECTIONORALIAS+\", q=\\\"col_s:a\\\", fl=\\\"price_f, order_i\\\", sort=\\\"order_i asc\\\")\";\n    String expr2 = \"search(\"+COLLECTIONORALIAS+\", q=\\\"col_s:b\\\", fl=\\\"price_f, order_i\\\", sort=\\\"order_i asc\\\")\";\n\n    String cexpr = \"let(a=\"+expr1+\", b=\"+expr2+\", c=col(a, price_f), d=col(b, price_f), tuple(delay=finddelay(c, d)))\";\n\n    ModifiableSolrParams paramsLoc = new ModifiableSolrParams();\n    paramsLoc.set(\"expr\", cexpr);\n    paramsLoc.set(\"qt\", \"/stream\");\n\n    String url = cluster.getJettySolrRunners().get(0).getBaseUrl().toString()+\"/\"+COLLECTIONORALIAS;\n    TupleStream solrStream = new SolrStream(url, paramsLoc);\n\n    StreamContext context = new StreamContext();\n    solrStream.setStreamContext(context);\n    List<Tuple> tuples = getTuples(solrStream);\n    assertTrue(tuples.size() == 1);\n    Tuple tuple = tuples.get(0);\n    long delay = tuple.getLong(\"delay\");\n    assert(delay == 3);\n\n    expr1 = \"search(\"+COLLECTIONORALIAS+\", q=\\\"col_s:a\\\", fq=\\\"id:(1 2 3 4 5 6 7)\\\", fl=\\\"price_f, order_i\\\", sort=\\\"order_i asc\\\")\";\n    expr2 = \"search(\"+COLLECTIONORALIAS+\", q=\\\"col_s:b\\\", fl=\\\"price_f, order_i\\\", sort=\\\"order_i asc\\\")\";\n\n    cexpr = \"let(a=\"+expr1+\", b=\"+expr2+\", c=col(a, price_f), d=col(b, price_f), tuple(delay=finddelay(c, d)))\";\n\n    paramsLoc = new ModifiableSolrParams();\n    paramsLoc.set(\"expr\", cexpr);\n    paramsLoc.set(\"qt\", \"/stream\");\n\n    solrStream = new SolrStream(url, paramsLoc);\n\n    solrStream.setStreamContext(context);\n    tuples = getTuples(solrStream);\n    assertTrue(tuples.size() == 1);\n    tuple = tuples.get(0);\n    delay = tuple.getLong(\"delay\");\n    assert(delay == 0);\n\n    //Test negative correlation.\n    expr1 = \"search(\"+COLLECTIONORALIAS+\", q=\\\"col_s:a\\\", fq=\\\"id:(1 2 3 4 5 6 7 11 12)\\\",fl=\\\"price_f, order_i\\\", sort=\\\"order_i asc\\\")\";\n    expr2 = \"search(\"+COLLECTIONORALIAS+\", q=\\\"col_s:c\\\", fl=\\\"price_f, order_i\\\", sort=\\\"order_i asc\\\")\";\n\n    cexpr = \"let(a=\"+expr1+\", b=\"+expr2+\", c=col(a, price_f), d=col(b, price_f), tuple(delay=finddelay(c, d)))\";\n\n    paramsLoc = new ModifiableSolrParams();\n    paramsLoc.set(\"expr\", cexpr);\n    paramsLoc.set(\"qt\", \"/stream\");\n\n    solrStream = new SolrStream(url, paramsLoc);\n\n    solrStream.setStreamContext(context);\n    tuples = getTuples(solrStream);\n    assertTrue(tuples.size() == 1);\n    tuple = tuples.get(0);\n    delay = tuple.getLong(\"delay\");\n    assert(delay == 2);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e9017cf144952056066919f1ebc7897ff9bd71b1","date":1496757600,"type":0,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/io/stream/StreamExpressionTest#testFinddelay().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testFinddelay() throws Exception {\n    UpdateRequest updateRequest = new UpdateRequest();\n\n    //Pad column 1 with three zeros.\n    updateRequest.add(id, \"10\", \"price_f\", \"0.0\", \"col_s\", \"a\", \"order_i\", \"0\");\n    updateRequest.add(id, \"11\", \"price_f\", \"0.0\", \"col_s\", \"a\", \"order_i\", \"0\");\n    updateRequest.add(id, \"12\", \"price_f\", \"0.0\", \"col_s\", \"a\", \"order_i\", \"0\");\n    updateRequest.add(id, \"1\", \"price_f\", \"100.0\", \"col_s\", \"a\", \"order_i\", \"1\");\n    updateRequest.add(id, \"2\", \"price_f\", \"200.0\", \"col_s\", \"a\", \"order_i\", \"2\");\n    updateRequest.add(id, \"3\", \"price_f\", \"300.0\", \"col_s\", \"a\", \"order_i\", \"3\");\n    updateRequest.add(id, \"4\", \"price_f\", \"100.0\", \"col_s\", \"a\", \"order_i\", \"4\");\n    updateRequest.add(id, \"5\", \"price_f\", \"200.0\", \"col_s\", \"a\", \"order_i\", \"5\");\n    updateRequest.add(id, \"6\", \"price_f\", \"400.0\", \"col_s\", \"a\", \"order_i\", \"6\");\n    updateRequest.add(id, \"7\", \"price_f\", \"600.0\", \"col_s\", \"a\", \"order_i\", \"7\");\n\n    updateRequest.add(id, \"100\", \"price_f\", \"200.0\", \"col_s\", \"b\", \"order_i\", \"1\");\n    updateRequest.add(id, \"101\", \"price_f\", \"400.0\", \"col_s\", \"b\", \"order_i\", \"2\");\n    updateRequest.add(id, \"102\", \"price_f\", \"600.0\", \"col_s\", \"b\", \"order_i\", \"3\");\n    updateRequest.add(id, \"103\", \"price_f\", \"200.0\", \"col_s\", \"b\", \"order_i\", \"4\");\n    updateRequest.add(id, \"104\", \"price_f\", \"400.0\", \"col_s\", \"b\", \"order_i\", \"5\");\n    updateRequest.add(id, \"105\", \"price_f\", \"800.0\", \"col_s\", \"b\", \"order_i\", \"6\");\n    updateRequest.add(id, \"106\", \"price_f\", \"1200.0\", \"col_s\", \"b\", \"order_i\", \"7\");\n\n\n    updateRequest.add(id, \"200\", \"price_f\", \"-200.0\", \"col_s\", \"c\", \"order_i\", \"1\");\n    updateRequest.add(id, \"301\", \"price_f\", \"-400.0\", \"col_s\", \"c\", \"order_i\", \"2\");\n    updateRequest.add(id, \"402\", \"price_f\", \"-600.0\", \"col_s\", \"c\", \"order_i\", \"3\");\n    updateRequest.add(id, \"503\", \"price_f\", \"-200.0\", \"col_s\", \"c\", \"order_i\", \"4\");\n    updateRequest.add(id, \"604\", \"price_f\", \"-400.0\", \"col_s\", \"c\", \"order_i\", \"5\");\n    updateRequest.add(id, \"705\", \"price_f\", \"-800.0\", \"col_s\", \"c\", \"order_i\", \"6\");\n    updateRequest.add(id, \"806\", \"price_f\", \"-1200.0\", \"col_s\", \"c\", \"order_i\", \"7\");\n    updateRequest.commit(cluster.getSolrClient(), COLLECTIONORALIAS);\n\n    String expr1 = \"search(\"+COLLECTIONORALIAS+\", q=\\\"col_s:a\\\", fl=\\\"price_f, order_i\\\", sort=\\\"order_i asc\\\")\";\n    String expr2 = \"search(\"+COLLECTIONORALIAS+\", q=\\\"col_s:b\\\", fl=\\\"price_f, order_i\\\", sort=\\\"order_i asc\\\")\";\n\n    String cexpr = \"let(a=\"+expr1+\", b=\"+expr2+\", c=col(a, price_f), d=col(b, price_f), tuple(delay=finddelay(c, d)))\";\n\n    ModifiableSolrParams paramsLoc = new ModifiableSolrParams();\n    paramsLoc.set(\"expr\", cexpr);\n    paramsLoc.set(\"qt\", \"/stream\");\n\n    String url = cluster.getJettySolrRunners().get(0).getBaseUrl().toString()+\"/\"+COLLECTIONORALIAS;\n    TupleStream solrStream = new SolrStream(url, paramsLoc);\n\n    StreamContext context = new StreamContext();\n    solrStream.setStreamContext(context);\n    List<Tuple> tuples = getTuples(solrStream);\n    assertTrue(tuples.size() == 1);\n    Tuple tuple = tuples.get(0);\n    long delay = tuple.getLong(\"delay\");\n    assert(delay == 3);\n\n    expr1 = \"search(\"+COLLECTIONORALIAS+\", q=\\\"col_s:a\\\", fq=\\\"id:(1 2 3 4 5 6 7)\\\", fl=\\\"price_f, order_i\\\", sort=\\\"order_i asc\\\")\";\n    expr2 = \"search(\"+COLLECTIONORALIAS+\", q=\\\"col_s:b\\\", fl=\\\"price_f, order_i\\\", sort=\\\"order_i asc\\\")\";\n\n    cexpr = \"let(a=\"+expr1+\", b=\"+expr2+\", c=col(a, price_f), d=col(b, price_f), tuple(delay=finddelay(c, d)))\";\n\n    paramsLoc = new ModifiableSolrParams();\n    paramsLoc.set(\"expr\", cexpr);\n    paramsLoc.set(\"qt\", \"/stream\");\n\n    solrStream = new SolrStream(url, paramsLoc);\n\n    solrStream.setStreamContext(context);\n    tuples = getTuples(solrStream);\n    assertTrue(tuples.size() == 1);\n    tuple = tuples.get(0);\n    delay = tuple.getLong(\"delay\");\n    assert(delay == 0);\n\n    //Test negative correlation.\n    expr1 = \"search(\"+COLLECTIONORALIAS+\", q=\\\"col_s:a\\\", fq=\\\"id:(1 2 3 4 5 6 7 11 12)\\\",fl=\\\"price_f, order_i\\\", sort=\\\"order_i asc\\\")\";\n    expr2 = \"search(\"+COLLECTIONORALIAS+\", q=\\\"col_s:c\\\", fl=\\\"price_f, order_i\\\", sort=\\\"order_i asc\\\")\";\n\n    cexpr = \"let(a=\"+expr1+\", b=\"+expr2+\", c=col(a, price_f), d=col(b, price_f), tuple(delay=finddelay(c, d)))\";\n\n    paramsLoc = new ModifiableSolrParams();\n    paramsLoc.set(\"expr\", cexpr);\n    paramsLoc.set(\"qt\", \"/stream\");\n\n    solrStream = new SolrStream(url, paramsLoc);\n\n    solrStream.setStreamContext(context);\n    tuples = getTuples(solrStream);\n    assertTrue(tuples.size() == 1);\n    tuple = tuples.get(0);\n    delay = tuple.getLong(\"delay\");\n    assert(delay == 2);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8ff654a6d1fb7a79aedaa65c23cc052fdc770aaf","date":1522951207,"type":5,"author":"Joel Bernstein","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/io/stream/MathExpressionTest#testFinddelay().mjava","pathOld":"solr/solrj/src/test/org/apache/solr/client/solrj/io/stream/StreamExpressionTest#testFinddelay().mjava","sourceNew":"  @Test\n  public void testFinddelay() throws Exception {\n    UpdateRequest updateRequest = new UpdateRequest();\n\n    //Pad column 1 with three zeros.\n    updateRequest.add(id, \"10\", \"price_f\", \"0.0\", \"col_s\", \"a\", \"order_i\", \"0\");\n    updateRequest.add(id, \"11\", \"price_f\", \"0.0\", \"col_s\", \"a\", \"order_i\", \"0\");\n    updateRequest.add(id, \"12\", \"price_f\", \"0.0\", \"col_s\", \"a\", \"order_i\", \"0\");\n    updateRequest.add(id, \"1\", \"price_f\", \"100.0\", \"col_s\", \"a\", \"order_i\", \"1\");\n    updateRequest.add(id, \"2\", \"price_f\", \"200.0\", \"col_s\", \"a\", \"order_i\", \"2\");\n    updateRequest.add(id, \"3\", \"price_f\", \"300.0\", \"col_s\", \"a\", \"order_i\", \"3\");\n    updateRequest.add(id, \"4\", \"price_f\", \"100.0\", \"col_s\", \"a\", \"order_i\", \"4\");\n    updateRequest.add(id, \"5\", \"price_f\", \"200.0\", \"col_s\", \"a\", \"order_i\", \"5\");\n    updateRequest.add(id, \"6\", \"price_f\", \"400.0\", \"col_s\", \"a\", \"order_i\", \"6\");\n    updateRequest.add(id, \"7\", \"price_f\", \"600.0\", \"col_s\", \"a\", \"order_i\", \"7\");\n\n    updateRequest.add(id, \"100\", \"price_f\", \"200.0\", \"col_s\", \"b\", \"order_i\", \"1\");\n    updateRequest.add(id, \"101\", \"price_f\", \"400.0\", \"col_s\", \"b\", \"order_i\", \"2\");\n    updateRequest.add(id, \"102\", \"price_f\", \"600.0\", \"col_s\", \"b\", \"order_i\", \"3\");\n    updateRequest.add(id, \"103\", \"price_f\", \"200.0\", \"col_s\", \"b\", \"order_i\", \"4\");\n    updateRequest.add(id, \"104\", \"price_f\", \"400.0\", \"col_s\", \"b\", \"order_i\", \"5\");\n    updateRequest.add(id, \"105\", \"price_f\", \"800.0\", \"col_s\", \"b\", \"order_i\", \"6\");\n    updateRequest.add(id, \"106\", \"price_f\", \"1200.0\", \"col_s\", \"b\", \"order_i\", \"7\");\n\n\n    updateRequest.add(id, \"200\", \"price_f\", \"-200.0\", \"col_s\", \"c\", \"order_i\", \"1\");\n    updateRequest.add(id, \"301\", \"price_f\", \"-400.0\", \"col_s\", \"c\", \"order_i\", \"2\");\n    updateRequest.add(id, \"402\", \"price_f\", \"-600.0\", \"col_s\", \"c\", \"order_i\", \"3\");\n    updateRequest.add(id, \"503\", \"price_f\", \"-200.0\", \"col_s\", \"c\", \"order_i\", \"4\");\n    updateRequest.add(id, \"604\", \"price_f\", \"-400.0\", \"col_s\", \"c\", \"order_i\", \"5\");\n    updateRequest.add(id, \"705\", \"price_f\", \"-800.0\", \"col_s\", \"c\", \"order_i\", \"6\");\n    updateRequest.add(id, \"806\", \"price_f\", \"-1200.0\", \"col_s\", \"c\", \"order_i\", \"7\");\n    updateRequest.commit(cluster.getSolrClient(), COLLECTIONORALIAS);\n\n    String expr1 = \"search(\"+COLLECTIONORALIAS+\", q=\\\"col_s:a\\\", fl=\\\"price_f, order_i\\\", sort=\\\"order_i asc\\\")\";\n    String expr2 = \"search(\"+COLLECTIONORALIAS+\", q=\\\"col_s:b\\\", fl=\\\"price_f, order_i\\\", sort=\\\"order_i asc\\\")\";\n\n    String cexpr = \"let(a=\"+expr1+\", b=\"+expr2+\", c=col(a, price_f), d=col(b, price_f), tuple(delay=finddelay(c, d)))\";\n\n    ModifiableSolrParams paramsLoc = new ModifiableSolrParams();\n    paramsLoc.set(\"expr\", cexpr);\n    paramsLoc.set(\"qt\", \"/stream\");\n\n    String url = cluster.getJettySolrRunners().get(0).getBaseUrl().toString()+\"/\"+COLLECTIONORALIAS;\n    TupleStream solrStream = new SolrStream(url, paramsLoc);\n\n    StreamContext context = new StreamContext();\n    solrStream.setStreamContext(context);\n    List<Tuple> tuples = getTuples(solrStream);\n    assertTrue(tuples.size() == 1);\n    Tuple tuple = tuples.get(0);\n    long delay = tuple.getLong(\"delay\");\n    assert(delay == 3);\n\n    expr1 = \"search(\"+COLLECTIONORALIAS+\", q=\\\"col_s:a\\\", fq=\\\"id:(1 2 3 4 5 6 7)\\\", fl=\\\"price_f, order_i\\\", sort=\\\"order_i asc\\\")\";\n    expr2 = \"search(\"+COLLECTIONORALIAS+\", q=\\\"col_s:b\\\", fl=\\\"price_f, order_i\\\", sort=\\\"order_i asc\\\")\";\n\n    cexpr = \"let(a=\"+expr1+\", b=\"+expr2+\", c=col(a, price_f), d=col(b, price_f), tuple(delay=finddelay(c, d)))\";\n\n    paramsLoc = new ModifiableSolrParams();\n    paramsLoc.set(\"expr\", cexpr);\n    paramsLoc.set(\"qt\", \"/stream\");\n\n    solrStream = new SolrStream(url, paramsLoc);\n\n    solrStream.setStreamContext(context);\n    tuples = getTuples(solrStream);\n    assertTrue(tuples.size() == 1);\n    tuple = tuples.get(0);\n    delay = tuple.getLong(\"delay\");\n    assert(delay == 0);\n\n    //Test negative correlation.\n    expr1 = \"search(\"+COLLECTIONORALIAS+\", q=\\\"col_s:a\\\", fq=\\\"id:(1 2 3 4 5 6 7 11 12)\\\",fl=\\\"price_f, order_i\\\", sort=\\\"order_i asc\\\")\";\n    expr2 = \"search(\"+COLLECTIONORALIAS+\", q=\\\"col_s:c\\\", fl=\\\"price_f, order_i\\\", sort=\\\"order_i asc\\\")\";\n\n    cexpr = \"let(a=\"+expr1+\", b=\"+expr2+\", c=col(a, price_f), d=col(b, price_f), tuple(delay=finddelay(c, d)))\";\n\n    paramsLoc = new ModifiableSolrParams();\n    paramsLoc.set(\"expr\", cexpr);\n    paramsLoc.set(\"qt\", \"/stream\");\n\n    solrStream = new SolrStream(url, paramsLoc);\n\n    solrStream.setStreamContext(context);\n    tuples = getTuples(solrStream);\n    assertTrue(tuples.size() == 1);\n    tuple = tuples.get(0);\n    delay = tuple.getLong(\"delay\");\n    assert(delay == 2);\n  }\n\n","sourceOld":"  @Test\n  public void testFinddelay() throws Exception {\n    UpdateRequest updateRequest = new UpdateRequest();\n\n    //Pad column 1 with three zeros.\n    updateRequest.add(id, \"10\", \"price_f\", \"0.0\", \"col_s\", \"a\", \"order_i\", \"0\");\n    updateRequest.add(id, \"11\", \"price_f\", \"0.0\", \"col_s\", \"a\", \"order_i\", \"0\");\n    updateRequest.add(id, \"12\", \"price_f\", \"0.0\", \"col_s\", \"a\", \"order_i\", \"0\");\n    updateRequest.add(id, \"1\", \"price_f\", \"100.0\", \"col_s\", \"a\", \"order_i\", \"1\");\n    updateRequest.add(id, \"2\", \"price_f\", \"200.0\", \"col_s\", \"a\", \"order_i\", \"2\");\n    updateRequest.add(id, \"3\", \"price_f\", \"300.0\", \"col_s\", \"a\", \"order_i\", \"3\");\n    updateRequest.add(id, \"4\", \"price_f\", \"100.0\", \"col_s\", \"a\", \"order_i\", \"4\");\n    updateRequest.add(id, \"5\", \"price_f\", \"200.0\", \"col_s\", \"a\", \"order_i\", \"5\");\n    updateRequest.add(id, \"6\", \"price_f\", \"400.0\", \"col_s\", \"a\", \"order_i\", \"6\");\n    updateRequest.add(id, \"7\", \"price_f\", \"600.0\", \"col_s\", \"a\", \"order_i\", \"7\");\n\n    updateRequest.add(id, \"100\", \"price_f\", \"200.0\", \"col_s\", \"b\", \"order_i\", \"1\");\n    updateRequest.add(id, \"101\", \"price_f\", \"400.0\", \"col_s\", \"b\", \"order_i\", \"2\");\n    updateRequest.add(id, \"102\", \"price_f\", \"600.0\", \"col_s\", \"b\", \"order_i\", \"3\");\n    updateRequest.add(id, \"103\", \"price_f\", \"200.0\", \"col_s\", \"b\", \"order_i\", \"4\");\n    updateRequest.add(id, \"104\", \"price_f\", \"400.0\", \"col_s\", \"b\", \"order_i\", \"5\");\n    updateRequest.add(id, \"105\", \"price_f\", \"800.0\", \"col_s\", \"b\", \"order_i\", \"6\");\n    updateRequest.add(id, \"106\", \"price_f\", \"1200.0\", \"col_s\", \"b\", \"order_i\", \"7\");\n\n\n    updateRequest.add(id, \"200\", \"price_f\", \"-200.0\", \"col_s\", \"c\", \"order_i\", \"1\");\n    updateRequest.add(id, \"301\", \"price_f\", \"-400.0\", \"col_s\", \"c\", \"order_i\", \"2\");\n    updateRequest.add(id, \"402\", \"price_f\", \"-600.0\", \"col_s\", \"c\", \"order_i\", \"3\");\n    updateRequest.add(id, \"503\", \"price_f\", \"-200.0\", \"col_s\", \"c\", \"order_i\", \"4\");\n    updateRequest.add(id, \"604\", \"price_f\", \"-400.0\", \"col_s\", \"c\", \"order_i\", \"5\");\n    updateRequest.add(id, \"705\", \"price_f\", \"-800.0\", \"col_s\", \"c\", \"order_i\", \"6\");\n    updateRequest.add(id, \"806\", \"price_f\", \"-1200.0\", \"col_s\", \"c\", \"order_i\", \"7\");\n    updateRequest.commit(cluster.getSolrClient(), COLLECTIONORALIAS);\n\n    String expr1 = \"search(\"+COLLECTIONORALIAS+\", q=\\\"col_s:a\\\", fl=\\\"price_f, order_i\\\", sort=\\\"order_i asc\\\")\";\n    String expr2 = \"search(\"+COLLECTIONORALIAS+\", q=\\\"col_s:b\\\", fl=\\\"price_f, order_i\\\", sort=\\\"order_i asc\\\")\";\n\n    String cexpr = \"let(a=\"+expr1+\", b=\"+expr2+\", c=col(a, price_f), d=col(b, price_f), tuple(delay=finddelay(c, d)))\";\n\n    ModifiableSolrParams paramsLoc = new ModifiableSolrParams();\n    paramsLoc.set(\"expr\", cexpr);\n    paramsLoc.set(\"qt\", \"/stream\");\n\n    String url = cluster.getJettySolrRunners().get(0).getBaseUrl().toString()+\"/\"+COLLECTIONORALIAS;\n    TupleStream solrStream = new SolrStream(url, paramsLoc);\n\n    StreamContext context = new StreamContext();\n    solrStream.setStreamContext(context);\n    List<Tuple> tuples = getTuples(solrStream);\n    assertTrue(tuples.size() == 1);\n    Tuple tuple = tuples.get(0);\n    long delay = tuple.getLong(\"delay\");\n    assert(delay == 3);\n\n    expr1 = \"search(\"+COLLECTIONORALIAS+\", q=\\\"col_s:a\\\", fq=\\\"id:(1 2 3 4 5 6 7)\\\", fl=\\\"price_f, order_i\\\", sort=\\\"order_i asc\\\")\";\n    expr2 = \"search(\"+COLLECTIONORALIAS+\", q=\\\"col_s:b\\\", fl=\\\"price_f, order_i\\\", sort=\\\"order_i asc\\\")\";\n\n    cexpr = \"let(a=\"+expr1+\", b=\"+expr2+\", c=col(a, price_f), d=col(b, price_f), tuple(delay=finddelay(c, d)))\";\n\n    paramsLoc = new ModifiableSolrParams();\n    paramsLoc.set(\"expr\", cexpr);\n    paramsLoc.set(\"qt\", \"/stream\");\n\n    solrStream = new SolrStream(url, paramsLoc);\n\n    solrStream.setStreamContext(context);\n    tuples = getTuples(solrStream);\n    assertTrue(tuples.size() == 1);\n    tuple = tuples.get(0);\n    delay = tuple.getLong(\"delay\");\n    assert(delay == 0);\n\n    //Test negative correlation.\n    expr1 = \"search(\"+COLLECTIONORALIAS+\", q=\\\"col_s:a\\\", fq=\\\"id:(1 2 3 4 5 6 7 11 12)\\\",fl=\\\"price_f, order_i\\\", sort=\\\"order_i asc\\\")\";\n    expr2 = \"search(\"+COLLECTIONORALIAS+\", q=\\\"col_s:c\\\", fl=\\\"price_f, order_i\\\", sort=\\\"order_i asc\\\")\";\n\n    cexpr = \"let(a=\"+expr1+\", b=\"+expr2+\", c=col(a, price_f), d=col(b, price_f), tuple(delay=finddelay(c, d)))\";\n\n    paramsLoc = new ModifiableSolrParams();\n    paramsLoc.set(\"expr\", cexpr);\n    paramsLoc.set(\"qt\", \"/stream\");\n\n    solrStream = new SolrStream(url, paramsLoc);\n\n    solrStream.setStreamContext(context);\n    tuples = getTuples(solrStream);\n    assertTrue(tuples.size() == 1);\n    tuple = tuples.get(0);\n    delay = tuple.getLong(\"delay\");\n    assert(delay == 2);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"e9017cf144952056066919f1ebc7897ff9bd71b1":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","d5af4cf979f31a72154bab227890da4561b327a3"],"d5af4cf979f31a72154bab227890da4561b327a3":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"d1f5728f32a4a256b36cfabd7a2636452f599bb9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","d5af4cf979f31a72154bab227890da4561b327a3"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["8ff654a6d1fb7a79aedaa65c23cc052fdc770aaf"],"8ff654a6d1fb7a79aedaa65c23cc052fdc770aaf":["d1f5728f32a4a256b36cfabd7a2636452f599bb9"]},"commit2Childs":{"e9017cf144952056066919f1ebc7897ff9bd71b1":[],"d5af4cf979f31a72154bab227890da4561b327a3":["e9017cf144952056066919f1ebc7897ff9bd71b1","d1f5728f32a4a256b36cfabd7a2636452f599bb9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["e9017cf144952056066919f1ebc7897ff9bd71b1","d5af4cf979f31a72154bab227890da4561b327a3","d1f5728f32a4a256b36cfabd7a2636452f599bb9"],"d1f5728f32a4a256b36cfabd7a2636452f599bb9":["8ff654a6d1fb7a79aedaa65c23cc052fdc770aaf"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"8ff654a6d1fb7a79aedaa65c23cc052fdc770aaf":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["e9017cf144952056066919f1ebc7897ff9bd71b1","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}