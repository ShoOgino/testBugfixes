{"path":"lucene/test-framework/src/java/org/apache/lucene/codecs/lucene40/Lucene40PostingsWriter#encodeTerm(long[],DataOutput,FieldInfo,BlockTermState,boolean).mjava","commits":[{"id":"1a88d7b0899b7d22dcbd4cf8ca35d9ec9850ab98","date":1377268487,"type":0,"author":"Han Jiang","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/codecs/lucene40/Lucene40PostingsWriter#encodeTerm(long[],DataOutput,FieldInfo,BlockTermState,boolean).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public void encodeTerm(long[] empty, DataOutput out, FieldInfo fieldInfo, BlockTermState _state, boolean absolute) throws IOException {\n    StandardTermState state = (StandardTermState)_state;\n    if (absolute) {\n      lastState = emptyState;\n    }\n    out.writeVLong(state.freqStart - lastState.freqStart);\n    if (state.skipOffset != -1) {\n      assert state.skipOffset > 0;\n      out.writeVLong(state.skipOffset);\n    }\n    if (indexOptions.compareTo(IndexOptions.DOCS_AND_FREQS_AND_POSITIONS) >= 0) {\n      out.writeVLong(state.proxStart - lastState.proxStart);\n    }\n    lastState = state;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2f948dd442d23baa6cbb28daf77c8db78b351329","date":1378742876,"type":0,"author":"Han Jiang","isMerge":true,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/codecs/lucene40/Lucene40PostingsWriter#encodeTerm(long[],DataOutput,FieldInfo,BlockTermState,boolean).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public void encodeTerm(long[] empty, DataOutput out, FieldInfo fieldInfo, BlockTermState _state, boolean absolute) throws IOException {\n    StandardTermState state = (StandardTermState)_state;\n    if (absolute) {\n      lastState = emptyState;\n    }\n    out.writeVLong(state.freqStart - lastState.freqStart);\n    if (state.skipOffset != -1) {\n      assert state.skipOffset > 0;\n      out.writeVLong(state.skipOffset);\n    }\n    if (indexOptions.compareTo(IndexOptions.DOCS_AND_FREQS_AND_POSITIONS) >= 0) {\n      out.writeVLong(state.proxStart - lastState.proxStart);\n    }\n    lastState = state;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cc45c615dbb82bf79d5f9550286098367874fbf","date":1409571423,"type":5,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/backward-codecs/src/test/org/apache/lucene/codecs/lucene40/Lucene40PostingsWriter#encodeTerm(long[],DataOutput,FieldInfo,BlockTermState,boolean).mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/codecs/lucene40/Lucene40PostingsWriter#encodeTerm(long[],DataOutput,FieldInfo,BlockTermState,boolean).mjava","sourceNew":"  @Override\n  public void encodeTerm(long[] empty, DataOutput out, FieldInfo fieldInfo, BlockTermState _state, boolean absolute) throws IOException {\n    StandardTermState state = (StandardTermState)_state;\n    if (absolute) {\n      lastState = emptyState;\n    }\n    out.writeVLong(state.freqStart - lastState.freqStart);\n    if (state.skipOffset != -1) {\n      assert state.skipOffset > 0;\n      out.writeVLong(state.skipOffset);\n    }\n    if (indexOptions.compareTo(IndexOptions.DOCS_AND_FREQS_AND_POSITIONS) >= 0) {\n      out.writeVLong(state.proxStart - lastState.proxStart);\n    }\n    lastState = state;\n  }\n\n","sourceOld":"  @Override\n  public void encodeTerm(long[] empty, DataOutput out, FieldInfo fieldInfo, BlockTermState _state, boolean absolute) throws IOException {\n    StandardTermState state = (StandardTermState)_state;\n    if (absolute) {\n      lastState = emptyState;\n    }\n    out.writeVLong(state.freqStart - lastState.freqStart);\n    if (state.skipOffset != -1) {\n      assert state.skipOffset > 0;\n      out.writeVLong(state.skipOffset);\n    }\n    if (indexOptions.compareTo(IndexOptions.DOCS_AND_FREQS_AND_POSITIONS) >= 0) {\n      out.writeVLong(state.proxStart - lastState.proxStart);\n    }\n    lastState = state;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"402ad3ddc9da7b70da1b167667a60ece6a1381fb","date":1409656478,"type":5,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/backward-codecs/src/test/org/apache/lucene/codecs/lucene40/Lucene40PostingsWriter#encodeTerm(long[],DataOutput,FieldInfo,BlockTermState,boolean).mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/codecs/lucene40/Lucene40PostingsWriter#encodeTerm(long[],DataOutput,FieldInfo,BlockTermState,boolean).mjava","sourceNew":"  @Override\n  public void encodeTerm(long[] empty, DataOutput out, FieldInfo fieldInfo, BlockTermState _state, boolean absolute) throws IOException {\n    StandardTermState state = (StandardTermState)_state;\n    if (absolute) {\n      lastState = emptyState;\n    }\n    out.writeVLong(state.freqStart - lastState.freqStart);\n    if (state.skipOffset != -1) {\n      assert state.skipOffset > 0;\n      out.writeVLong(state.skipOffset);\n    }\n    if (indexOptions.compareTo(IndexOptions.DOCS_AND_FREQS_AND_POSITIONS) >= 0) {\n      out.writeVLong(state.proxStart - lastState.proxStart);\n    }\n    lastState = state;\n  }\n\n","sourceOld":"  @Override\n  public void encodeTerm(long[] empty, DataOutput out, FieldInfo fieldInfo, BlockTermState _state, boolean absolute) throws IOException {\n    StandardTermState state = (StandardTermState)_state;\n    if (absolute) {\n      lastState = emptyState;\n    }\n    out.writeVLong(state.freqStart - lastState.freqStart);\n    if (state.skipOffset != -1) {\n      assert state.skipOffset > 0;\n      out.writeVLong(state.skipOffset);\n    }\n    if (indexOptions.compareTo(IndexOptions.DOCS_AND_FREQS_AND_POSITIONS) >= 0) {\n      out.writeVLong(state.proxStart - lastState.proxStart);\n    }\n    lastState = state;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"1a88d7b0899b7d22dcbd4cf8ca35d9ec9850ab98":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"4cc45c615dbb82bf79d5f9550286098367874fbf":["2f948dd442d23baa6cbb28daf77c8db78b351329"],"2f948dd442d23baa6cbb28daf77c8db78b351329":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","1a88d7b0899b7d22dcbd4cf8ca35d9ec9850ab98"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["402ad3ddc9da7b70da1b167667a60ece6a1381fb"],"402ad3ddc9da7b70da1b167667a60ece6a1381fb":["2f948dd442d23baa6cbb28daf77c8db78b351329","4cc45c615dbb82bf79d5f9550286098367874fbf"]},"commit2Childs":{"1a88d7b0899b7d22dcbd4cf8ca35d9ec9850ab98":["2f948dd442d23baa6cbb28daf77c8db78b351329"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["1a88d7b0899b7d22dcbd4cf8ca35d9ec9850ab98","2f948dd442d23baa6cbb28daf77c8db78b351329"],"4cc45c615dbb82bf79d5f9550286098367874fbf":["402ad3ddc9da7b70da1b167667a60ece6a1381fb"],"2f948dd442d23baa6cbb28daf77c8db78b351329":["4cc45c615dbb82bf79d5f9550286098367874fbf","402ad3ddc9da7b70da1b167667a60ece6a1381fb"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"402ad3ddc9da7b70da1b167667a60ece6a1381fb":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}