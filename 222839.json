{"path":"contrib/snowball/src/java/org/tartarus/snowball/ext/KpStemmer#r_Step_4().mjava","commits":[{"id":"b62da6a75575f59a016a076b4753dc6e20c74b44","date":1219528967,"type":1,"author":"Karl-Johan Wettin","isMerge":false,"pathNew":"contrib/snowball/src/java/org/tartarus/snowball/ext/KpStemmer#r_Step_4().mjava","pathOld":"contrib/snowball/src/java/net/sf/snowball/ext/KpStemmer#r_Step_4().mjava","sourceNew":"        private boolean r_Step_4() {\n            int among_var;\n            int v_1;\n            // (, line 114\n            // or, line 134\n            lab0: do {\n                v_1 = limit - cursor;\n                lab1: do {\n                    // (, line 115\n                    // [, line 115\n                    ket = cursor;\n                    // among, line 115\n                    among_var = find_among_b(a_3, 16);\n                    if (among_var == 0)\n                    {\n                        break lab1;\n                    }\n                    // (, line 115\n                    // ], line 115\n                    bra = cursor;\n                    switch(among_var) {\n                        case 0:\n                            break lab1;\n                        case 1:\n                            // (, line 116\n                            // call R1, line 116\n                            if (!r_R1())\n                            {\n                                break lab1;\n                            }\n                            // <-, line 116\n                            slice_from(\"ie\");\n                            break;\n                        case 2:\n                            // (, line 117\n                            // call R1, line 117\n                            if (!r_R1())\n                            {\n                                break lab1;\n                            }\n                            // <-, line 117\n                            slice_from(\"eer\");\n                            break;\n                        case 3:\n                            // (, line 118\n                            // call R1, line 118\n                            if (!r_R1())\n                            {\n                                break lab1;\n                            }\n                            // delete, line 118\n                            slice_del();\n                            break;\n                        case 4:\n                            // (, line 119\n                            // call R1, line 119\n                            if (!r_R1())\n                            {\n                                break lab1;\n                            }\n                            // call V, line 119\n                            if (!r_V())\n                            {\n                                break lab1;\n                            }\n                            // <-, line 119\n                            slice_from(\"n\");\n                            break;\n                        case 5:\n                            // (, line 120\n                            // call R1, line 120\n                            if (!r_R1())\n                            {\n                                break lab1;\n                            }\n                            // call V, line 120\n                            if (!r_V())\n                            {\n                                break lab1;\n                            }\n                            // <-, line 120\n                            slice_from(\"l\");\n                            break;\n                        case 6:\n                            // (, line 121\n                            // call R1, line 121\n                            if (!r_R1())\n                            {\n                                break lab1;\n                            }\n                            // call V, line 121\n                            if (!r_V())\n                            {\n                                break lab1;\n                            }\n                            // <-, line 121\n                            slice_from(\"r\");\n                            break;\n                        case 7:\n                            // (, line 122\n                            // call R1, line 122\n                            if (!r_R1())\n                            {\n                                break lab1;\n                            }\n                            // <-, line 122\n                            slice_from(\"teer\");\n                            break;\n                        case 8:\n                            // (, line 124\n                            // call R1, line 124\n                            if (!r_R1())\n                            {\n                                break lab1;\n                            }\n                            // <-, line 124\n                            slice_from(\"lijk\");\n                            break;\n                        case 9:\n                            // (, line 127\n                            // call R1, line 127\n                            if (!r_R1())\n                            {\n                                break lab1;\n                            }\n                            // delete, line 127\n                            slice_del();\n                            break;\n                        case 10:\n                            // (, line 131\n                            // call R1, line 131\n                            if (!r_R1())\n                            {\n                                break lab1;\n                            }\n                            // call C, line 131\n                            if (!r_C())\n                            {\n                                break lab1;\n                            }\n                            // delete, line 131\n                            slice_del();\n                            // call lengthen_V, line 131\n                            if (!r_lengthen_V())\n                            {\n                                break lab1;\n                            }\n                            break;\n                    }\n                    break lab0;\n                } while (false);\n                cursor = limit - v_1;\n                // (, line 135\n                // [, line 135\n                ket = cursor;\n                // among, line 135\n                among_var = find_among_b(a_4, 3);\n                if (among_var == 0)\n                {\n                    return false;\n                }\n                // (, line 135\n                // ], line 135\n                bra = cursor;\n                switch(among_var) {\n                    case 0:\n                        return false;\n                    case 1:\n                        // (, line 138\n                        // call R1, line 138\n                        if (!r_R1())\n                        {\n                            return false;\n                        }\n                        // call C, line 138\n                        if (!r_C())\n                        {\n                            return false;\n                        }\n                        // delete, line 138\n                        slice_del();\n                        // call lengthen_V, line 138\n                        if (!r_lengthen_V())\n                        {\n                            return false;\n                        }\n                        break;\n                }\n            } while (false);\n            return true;\n        }\n\n","sourceOld":"        private boolean r_Step_4() {\n            int among_var;\n            int v_1;\n            // (, line 114\n            // or, line 134\n            lab0: do {\n                v_1 = limit - cursor;\n                lab1: do {\n                    // (, line 115\n                    // [, line 115\n                    ket = cursor;\n                    // among, line 115\n                    among_var = find_among_b(a_3, 16);\n                    if (among_var == 0)\n                    {\n                        break lab1;\n                    }\n                    // (, line 115\n                    // ], line 115\n                    bra = cursor;\n                    switch(among_var) {\n                        case 0:\n                            break lab1;\n                        case 1:\n                            // (, line 116\n                            // call R1, line 116\n                            if (!r_R1())\n                            {\n                                break lab1;\n                            }\n                            // <-, line 116\n                            slice_from(\"ie\");\n                            break;\n                        case 2:\n                            // (, line 117\n                            // call R1, line 117\n                            if (!r_R1())\n                            {\n                                break lab1;\n                            }\n                            // <-, line 117\n                            slice_from(\"eer\");\n                            break;\n                        case 3:\n                            // (, line 118\n                            // call R1, line 118\n                            if (!r_R1())\n                            {\n                                break lab1;\n                            }\n                            // delete, line 118\n                            slice_del();\n                            break;\n                        case 4:\n                            // (, line 119\n                            // call R1, line 119\n                            if (!r_R1())\n                            {\n                                break lab1;\n                            }\n                            // call V, line 119\n                            if (!r_V())\n                            {\n                                break lab1;\n                            }\n                            // <-, line 119\n                            slice_from(\"n\");\n                            break;\n                        case 5:\n                            // (, line 120\n                            // call R1, line 120\n                            if (!r_R1())\n                            {\n                                break lab1;\n                            }\n                            // call V, line 120\n                            if (!r_V())\n                            {\n                                break lab1;\n                            }\n                            // <-, line 120\n                            slice_from(\"l\");\n                            break;\n                        case 6:\n                            // (, line 121\n                            // call R1, line 121\n                            if (!r_R1())\n                            {\n                                break lab1;\n                            }\n                            // call V, line 121\n                            if (!r_V())\n                            {\n                                break lab1;\n                            }\n                            // <-, line 121\n                            slice_from(\"r\");\n                            break;\n                        case 7:\n                            // (, line 122\n                            // call R1, line 122\n                            if (!r_R1())\n                            {\n                                break lab1;\n                            }\n                            // <-, line 122\n                            slice_from(\"teer\");\n                            break;\n                        case 8:\n                            // (, line 124\n                            // call R1, line 124\n                            if (!r_R1())\n                            {\n                                break lab1;\n                            }\n                            // <-, line 124\n                            slice_from(\"lijk\");\n                            break;\n                        case 9:\n                            // (, line 127\n                            // call R1, line 127\n                            if (!r_R1())\n                            {\n                                break lab1;\n                            }\n                            // delete, line 127\n                            slice_del();\n                            break;\n                        case 10:\n                            // (, line 131\n                            // call R1, line 131\n                            if (!r_R1())\n                            {\n                                break lab1;\n                            }\n                            // call C, line 131\n                            if (!r_C())\n                            {\n                                break lab1;\n                            }\n                            // delete, line 131\n                            slice_del();\n                            // call lengthen_V, line 131\n                            if (!r_lengthen_V())\n                            {\n                                break lab1;\n                            }\n                            break;\n                    }\n                    break lab0;\n                } while (false);\n                cursor = limit - v_1;\n                // (, line 135\n                // [, line 135\n                ket = cursor;\n                // among, line 135\n                among_var = find_among_b(a_4, 3);\n                if (among_var == 0)\n                {\n                    return false;\n                }\n                // (, line 135\n                // ], line 135\n                bra = cursor;\n                switch(among_var) {\n                    case 0:\n                        return false;\n                    case 1:\n                        // (, line 138\n                        // call R1, line 138\n                        if (!r_R1())\n                        {\n                            return false;\n                        }\n                        // call C, line 138\n                        if (!r_C())\n                        {\n                            return false;\n                        }\n                        // delete, line 138\n                        slice_del();\n                        // call lengthen_V, line 138\n                        if (!r_lengthen_V())\n                        {\n                            return false;\n                        }\n                        break;\n                }\n            } while (false);\n            return true;\n        }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a5aa159e1ac4009d23cea92797d3804da4f5e7ad","date":1264041909,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"contrib/analyzers/common/src/java/org/tartarus/snowball/ext/KpStemmer#r_Step_4().mjava","pathOld":"contrib/snowball/src/java/org/tartarus/snowball/ext/KpStemmer#r_Step_4().mjava","sourceNew":"        private boolean r_Step_4() {\n            int among_var;\n            int v_1;\n            // (, line 114\n            // or, line 134\n            lab0: do {\n                v_1 = limit - cursor;\n                lab1: do {\n                    // (, line 115\n                    // [, line 115\n                    ket = cursor;\n                    // among, line 115\n                    among_var = find_among_b(a_3, 16);\n                    if (among_var == 0)\n                    {\n                        break lab1;\n                    }\n                    // (, line 115\n                    // ], line 115\n                    bra = cursor;\n                    switch(among_var) {\n                        case 0:\n                            break lab1;\n                        case 1:\n                            // (, line 116\n                            // call R1, line 116\n                            if (!r_R1())\n                            {\n                                break lab1;\n                            }\n                            // <-, line 116\n                            slice_from(\"ie\");\n                            break;\n                        case 2:\n                            // (, line 117\n                            // call R1, line 117\n                            if (!r_R1())\n                            {\n                                break lab1;\n                            }\n                            // <-, line 117\n                            slice_from(\"eer\");\n                            break;\n                        case 3:\n                            // (, line 118\n                            // call R1, line 118\n                            if (!r_R1())\n                            {\n                                break lab1;\n                            }\n                            // delete, line 118\n                            slice_del();\n                            break;\n                        case 4:\n                            // (, line 119\n                            // call R1, line 119\n                            if (!r_R1())\n                            {\n                                break lab1;\n                            }\n                            // call V, line 119\n                            if (!r_V())\n                            {\n                                break lab1;\n                            }\n                            // <-, line 119\n                            slice_from(\"n\");\n                            break;\n                        case 5:\n                            // (, line 120\n                            // call R1, line 120\n                            if (!r_R1())\n                            {\n                                break lab1;\n                            }\n                            // call V, line 120\n                            if (!r_V())\n                            {\n                                break lab1;\n                            }\n                            // <-, line 120\n                            slice_from(\"l\");\n                            break;\n                        case 6:\n                            // (, line 121\n                            // call R1, line 121\n                            if (!r_R1())\n                            {\n                                break lab1;\n                            }\n                            // call V, line 121\n                            if (!r_V())\n                            {\n                                break lab1;\n                            }\n                            // <-, line 121\n                            slice_from(\"r\");\n                            break;\n                        case 7:\n                            // (, line 122\n                            // call R1, line 122\n                            if (!r_R1())\n                            {\n                                break lab1;\n                            }\n                            // <-, line 122\n                            slice_from(\"teer\");\n                            break;\n                        case 8:\n                            // (, line 124\n                            // call R1, line 124\n                            if (!r_R1())\n                            {\n                                break lab1;\n                            }\n                            // <-, line 124\n                            slice_from(\"lijk\");\n                            break;\n                        case 9:\n                            // (, line 127\n                            // call R1, line 127\n                            if (!r_R1())\n                            {\n                                break lab1;\n                            }\n                            // delete, line 127\n                            slice_del();\n                            break;\n                        case 10:\n                            // (, line 131\n                            // call R1, line 131\n                            if (!r_R1())\n                            {\n                                break lab1;\n                            }\n                            // call C, line 131\n                            if (!r_C())\n                            {\n                                break lab1;\n                            }\n                            // delete, line 131\n                            slice_del();\n                            // call lengthen_V, line 131\n                            if (!r_lengthen_V())\n                            {\n                                break lab1;\n                            }\n                            break;\n                    }\n                    break lab0;\n                } while (false);\n                cursor = limit - v_1;\n                // (, line 135\n                // [, line 135\n                ket = cursor;\n                // among, line 135\n                among_var = find_among_b(a_4, 3);\n                if (among_var == 0)\n                {\n                    return false;\n                }\n                // (, line 135\n                // ], line 135\n                bra = cursor;\n                switch(among_var) {\n                    case 0:\n                        return false;\n                    case 1:\n                        // (, line 138\n                        // call R1, line 138\n                        if (!r_R1())\n                        {\n                            return false;\n                        }\n                        // call C, line 138\n                        if (!r_C())\n                        {\n                            return false;\n                        }\n                        // delete, line 138\n                        slice_del();\n                        // call lengthen_V, line 138\n                        if (!r_lengthen_V())\n                        {\n                            return false;\n                        }\n                        break;\n                }\n            } while (false);\n            return true;\n        }\n\n","sourceOld":"        private boolean r_Step_4() {\n            int among_var;\n            int v_1;\n            // (, line 114\n            // or, line 134\n            lab0: do {\n                v_1 = limit - cursor;\n                lab1: do {\n                    // (, line 115\n                    // [, line 115\n                    ket = cursor;\n                    // among, line 115\n                    among_var = find_among_b(a_3, 16);\n                    if (among_var == 0)\n                    {\n                        break lab1;\n                    }\n                    // (, line 115\n                    // ], line 115\n                    bra = cursor;\n                    switch(among_var) {\n                        case 0:\n                            break lab1;\n                        case 1:\n                            // (, line 116\n                            // call R1, line 116\n                            if (!r_R1())\n                            {\n                                break lab1;\n                            }\n                            // <-, line 116\n                            slice_from(\"ie\");\n                            break;\n                        case 2:\n                            // (, line 117\n                            // call R1, line 117\n                            if (!r_R1())\n                            {\n                                break lab1;\n                            }\n                            // <-, line 117\n                            slice_from(\"eer\");\n                            break;\n                        case 3:\n                            // (, line 118\n                            // call R1, line 118\n                            if (!r_R1())\n                            {\n                                break lab1;\n                            }\n                            // delete, line 118\n                            slice_del();\n                            break;\n                        case 4:\n                            // (, line 119\n                            // call R1, line 119\n                            if (!r_R1())\n                            {\n                                break lab1;\n                            }\n                            // call V, line 119\n                            if (!r_V())\n                            {\n                                break lab1;\n                            }\n                            // <-, line 119\n                            slice_from(\"n\");\n                            break;\n                        case 5:\n                            // (, line 120\n                            // call R1, line 120\n                            if (!r_R1())\n                            {\n                                break lab1;\n                            }\n                            // call V, line 120\n                            if (!r_V())\n                            {\n                                break lab1;\n                            }\n                            // <-, line 120\n                            slice_from(\"l\");\n                            break;\n                        case 6:\n                            // (, line 121\n                            // call R1, line 121\n                            if (!r_R1())\n                            {\n                                break lab1;\n                            }\n                            // call V, line 121\n                            if (!r_V())\n                            {\n                                break lab1;\n                            }\n                            // <-, line 121\n                            slice_from(\"r\");\n                            break;\n                        case 7:\n                            // (, line 122\n                            // call R1, line 122\n                            if (!r_R1())\n                            {\n                                break lab1;\n                            }\n                            // <-, line 122\n                            slice_from(\"teer\");\n                            break;\n                        case 8:\n                            // (, line 124\n                            // call R1, line 124\n                            if (!r_R1())\n                            {\n                                break lab1;\n                            }\n                            // <-, line 124\n                            slice_from(\"lijk\");\n                            break;\n                        case 9:\n                            // (, line 127\n                            // call R1, line 127\n                            if (!r_R1())\n                            {\n                                break lab1;\n                            }\n                            // delete, line 127\n                            slice_del();\n                            break;\n                        case 10:\n                            // (, line 131\n                            // call R1, line 131\n                            if (!r_R1())\n                            {\n                                break lab1;\n                            }\n                            // call C, line 131\n                            if (!r_C())\n                            {\n                                break lab1;\n                            }\n                            // delete, line 131\n                            slice_del();\n                            // call lengthen_V, line 131\n                            if (!r_lengthen_V())\n                            {\n                                break lab1;\n                            }\n                            break;\n                    }\n                    break lab0;\n                } while (false);\n                cursor = limit - v_1;\n                // (, line 135\n                // [, line 135\n                ket = cursor;\n                // among, line 135\n                among_var = find_among_b(a_4, 3);\n                if (among_var == 0)\n                {\n                    return false;\n                }\n                // (, line 135\n                // ], line 135\n                bra = cursor;\n                switch(among_var) {\n                    case 0:\n                        return false;\n                    case 1:\n                        // (, line 138\n                        // call R1, line 138\n                        if (!r_R1())\n                        {\n                            return false;\n                        }\n                        // call C, line 138\n                        if (!r_C())\n                        {\n                            return false;\n                        }\n                        // delete, line 138\n                        slice_del();\n                        // call lengthen_V, line 138\n                        if (!r_lengthen_V())\n                        {\n                            return false;\n                        }\n                        break;\n                }\n            } while (false);\n            return true;\n        }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"38c26570a4fd6cf0856801c977a2bc9c28a5424c","date":1264074890,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"contrib/snowball/src/java/org/tartarus/snowball/ext/KpStemmer#r_Step_4().mjava","pathOld":"/dev/null","sourceNew":"        private boolean r_Step_4() {\n            int among_var;\n            int v_1;\n            // (, line 114\n            // or, line 134\n            lab0: do {\n                v_1 = limit - cursor;\n                lab1: do {\n                    // (, line 115\n                    // [, line 115\n                    ket = cursor;\n                    // among, line 115\n                    among_var = find_among_b(a_3, 16);\n                    if (among_var == 0)\n                    {\n                        break lab1;\n                    }\n                    // (, line 115\n                    // ], line 115\n                    bra = cursor;\n                    switch(among_var) {\n                        case 0:\n                            break lab1;\n                        case 1:\n                            // (, line 116\n                            // call R1, line 116\n                            if (!r_R1())\n                            {\n                                break lab1;\n                            }\n                            // <-, line 116\n                            slice_from(\"ie\");\n                            break;\n                        case 2:\n                            // (, line 117\n                            // call R1, line 117\n                            if (!r_R1())\n                            {\n                                break lab1;\n                            }\n                            // <-, line 117\n                            slice_from(\"eer\");\n                            break;\n                        case 3:\n                            // (, line 118\n                            // call R1, line 118\n                            if (!r_R1())\n                            {\n                                break lab1;\n                            }\n                            // delete, line 118\n                            slice_del();\n                            break;\n                        case 4:\n                            // (, line 119\n                            // call R1, line 119\n                            if (!r_R1())\n                            {\n                                break lab1;\n                            }\n                            // call V, line 119\n                            if (!r_V())\n                            {\n                                break lab1;\n                            }\n                            // <-, line 119\n                            slice_from(\"n\");\n                            break;\n                        case 5:\n                            // (, line 120\n                            // call R1, line 120\n                            if (!r_R1())\n                            {\n                                break lab1;\n                            }\n                            // call V, line 120\n                            if (!r_V())\n                            {\n                                break lab1;\n                            }\n                            // <-, line 120\n                            slice_from(\"l\");\n                            break;\n                        case 6:\n                            // (, line 121\n                            // call R1, line 121\n                            if (!r_R1())\n                            {\n                                break lab1;\n                            }\n                            // call V, line 121\n                            if (!r_V())\n                            {\n                                break lab1;\n                            }\n                            // <-, line 121\n                            slice_from(\"r\");\n                            break;\n                        case 7:\n                            // (, line 122\n                            // call R1, line 122\n                            if (!r_R1())\n                            {\n                                break lab1;\n                            }\n                            // <-, line 122\n                            slice_from(\"teer\");\n                            break;\n                        case 8:\n                            // (, line 124\n                            // call R1, line 124\n                            if (!r_R1())\n                            {\n                                break lab1;\n                            }\n                            // <-, line 124\n                            slice_from(\"lijk\");\n                            break;\n                        case 9:\n                            // (, line 127\n                            // call R1, line 127\n                            if (!r_R1())\n                            {\n                                break lab1;\n                            }\n                            // delete, line 127\n                            slice_del();\n                            break;\n                        case 10:\n                            // (, line 131\n                            // call R1, line 131\n                            if (!r_R1())\n                            {\n                                break lab1;\n                            }\n                            // call C, line 131\n                            if (!r_C())\n                            {\n                                break lab1;\n                            }\n                            // delete, line 131\n                            slice_del();\n                            // call lengthen_V, line 131\n                            if (!r_lengthen_V())\n                            {\n                                break lab1;\n                            }\n                            break;\n                    }\n                    break lab0;\n                } while (false);\n                cursor = limit - v_1;\n                // (, line 135\n                // [, line 135\n                ket = cursor;\n                // among, line 135\n                among_var = find_among_b(a_4, 3);\n                if (among_var == 0)\n                {\n                    return false;\n                }\n                // (, line 135\n                // ], line 135\n                bra = cursor;\n                switch(among_var) {\n                    case 0:\n                        return false;\n                    case 1:\n                        // (, line 138\n                        // call R1, line 138\n                        if (!r_R1())\n                        {\n                            return false;\n                        }\n                        // call C, line 138\n                        if (!r_C())\n                        {\n                            return false;\n                        }\n                        // delete, line 138\n                        slice_del();\n                        // call lengthen_V, line 138\n                        if (!r_lengthen_V())\n                        {\n                            return false;\n                        }\n                        break;\n                }\n            } while (false);\n            return true;\n        }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d40ff39db4a2b90a440b97f2a7d7eda344f004ef","date":1264074978,"type":4,"author":"Michael McCandless","isMerge":false,"pathNew":"/dev/null","pathOld":"contrib/snowball/src/java/org/tartarus/snowball/ext/KpStemmer#r_Step_4().mjava","sourceNew":null,"sourceOld":"        private boolean r_Step_4() {\n            int among_var;\n            int v_1;\n            // (, line 114\n            // or, line 134\n            lab0: do {\n                v_1 = limit - cursor;\n                lab1: do {\n                    // (, line 115\n                    // [, line 115\n                    ket = cursor;\n                    // among, line 115\n                    among_var = find_among_b(a_3, 16);\n                    if (among_var == 0)\n                    {\n                        break lab1;\n                    }\n                    // (, line 115\n                    // ], line 115\n                    bra = cursor;\n                    switch(among_var) {\n                        case 0:\n                            break lab1;\n                        case 1:\n                            // (, line 116\n                            // call R1, line 116\n                            if (!r_R1())\n                            {\n                                break lab1;\n                            }\n                            // <-, line 116\n                            slice_from(\"ie\");\n                            break;\n                        case 2:\n                            // (, line 117\n                            // call R1, line 117\n                            if (!r_R1())\n                            {\n                                break lab1;\n                            }\n                            // <-, line 117\n                            slice_from(\"eer\");\n                            break;\n                        case 3:\n                            // (, line 118\n                            // call R1, line 118\n                            if (!r_R1())\n                            {\n                                break lab1;\n                            }\n                            // delete, line 118\n                            slice_del();\n                            break;\n                        case 4:\n                            // (, line 119\n                            // call R1, line 119\n                            if (!r_R1())\n                            {\n                                break lab1;\n                            }\n                            // call V, line 119\n                            if (!r_V())\n                            {\n                                break lab1;\n                            }\n                            // <-, line 119\n                            slice_from(\"n\");\n                            break;\n                        case 5:\n                            // (, line 120\n                            // call R1, line 120\n                            if (!r_R1())\n                            {\n                                break lab1;\n                            }\n                            // call V, line 120\n                            if (!r_V())\n                            {\n                                break lab1;\n                            }\n                            // <-, line 120\n                            slice_from(\"l\");\n                            break;\n                        case 6:\n                            // (, line 121\n                            // call R1, line 121\n                            if (!r_R1())\n                            {\n                                break lab1;\n                            }\n                            // call V, line 121\n                            if (!r_V())\n                            {\n                                break lab1;\n                            }\n                            // <-, line 121\n                            slice_from(\"r\");\n                            break;\n                        case 7:\n                            // (, line 122\n                            // call R1, line 122\n                            if (!r_R1())\n                            {\n                                break lab1;\n                            }\n                            // <-, line 122\n                            slice_from(\"teer\");\n                            break;\n                        case 8:\n                            // (, line 124\n                            // call R1, line 124\n                            if (!r_R1())\n                            {\n                                break lab1;\n                            }\n                            // <-, line 124\n                            slice_from(\"lijk\");\n                            break;\n                        case 9:\n                            // (, line 127\n                            // call R1, line 127\n                            if (!r_R1())\n                            {\n                                break lab1;\n                            }\n                            // delete, line 127\n                            slice_del();\n                            break;\n                        case 10:\n                            // (, line 131\n                            // call R1, line 131\n                            if (!r_R1())\n                            {\n                                break lab1;\n                            }\n                            // call C, line 131\n                            if (!r_C())\n                            {\n                                break lab1;\n                            }\n                            // delete, line 131\n                            slice_del();\n                            // call lengthen_V, line 131\n                            if (!r_lengthen_V())\n                            {\n                                break lab1;\n                            }\n                            break;\n                    }\n                    break lab0;\n                } while (false);\n                cursor = limit - v_1;\n                // (, line 135\n                // [, line 135\n                ket = cursor;\n                // among, line 135\n                among_var = find_among_b(a_4, 3);\n                if (among_var == 0)\n                {\n                    return false;\n                }\n                // (, line 135\n                // ], line 135\n                bra = cursor;\n                switch(among_var) {\n                    case 0:\n                        return false;\n                    case 1:\n                        // (, line 138\n                        // call R1, line 138\n                        if (!r_R1())\n                        {\n                            return false;\n                        }\n                        // call C, line 138\n                        if (!r_C())\n                        {\n                            return false;\n                        }\n                        // delete, line 138\n                        slice_del();\n                        // call lengthen_V, line 138\n                        if (!r_lengthen_V())\n                        {\n                            return false;\n                        }\n                        break;\n                }\n            } while (false);\n            return true;\n        }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b62da6a75575f59a016a076b4753dc6e20c74b44":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a5aa159e1ac4009d23cea92797d3804da4f5e7ad":["b62da6a75575f59a016a076b4753dc6e20c74b44"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"38c26570a4fd6cf0856801c977a2bc9c28a5424c":["a5aa159e1ac4009d23cea92797d3804da4f5e7ad"],"d40ff39db4a2b90a440b97f2a7d7eda344f004ef":["38c26570a4fd6cf0856801c977a2bc9c28a5424c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["d40ff39db4a2b90a440b97f2a7d7eda344f004ef"]},"commit2Childs":{"b62da6a75575f59a016a076b4753dc6e20c74b44":["a5aa159e1ac4009d23cea92797d3804da4f5e7ad"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b62da6a75575f59a016a076b4753dc6e20c74b44"],"a5aa159e1ac4009d23cea92797d3804da4f5e7ad":["38c26570a4fd6cf0856801c977a2bc9c28a5424c"],"38c26570a4fd6cf0856801c977a2bc9c28a5424c":["d40ff39db4a2b90a440b97f2a7d7eda344f004ef"],"d40ff39db4a2b90a440b97f2a7d7eda344f004ef":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}