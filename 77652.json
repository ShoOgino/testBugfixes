{"path":"solr/src/java/org/apache/solr/core/JmxMonitoredMap#JmxMonitoredMap(String,JmxConfiguration).mjava","commits":[{"id":"893269407f5c988a4b2ee13c7ffc01ec43136c1d","date":1268598046,"type":0,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/src/java/org/apache/solr/core/JmxMonitoredMap#JmxMonitoredMap(String,JmxConfiguration).mjava","pathOld":"/dev/null","sourceNew":"  public JmxMonitoredMap(String coreName, JmxConfiguration jmxConfig) {\n    jmxRootName = \"solr\" + (coreName == null ? \"\" : \"/\" + coreName);\n\n    if (jmxConfig.agentId != null && jmxConfig.serviceUrl != null) {\n      throw new SolrException(\n              SolrException.ErrorCode.SERVER_ERROR,\n              \"Incorrect JMX Configuration in solrconfig.xml, both agentId and serviceUrl cannot be specified at the same time\");\n    }\n\n    if (jmxConfig.serviceUrl == null) {\n      List<MBeanServer> servers = null;\n\n      if (jmxConfig.agentId == null) {\n        // Try to find the first MBeanServer\n        servers = MBeanServerFactory.findMBeanServer(null);\n      } else if (jmxConfig.agentId != null) {\n        // Try to find the first MBean server with the given agentId\n        servers = MBeanServerFactory.findMBeanServer(jmxConfig.agentId);\n        // throw Exception if no servers were found with the given agentId\n        if (servers == null || servers.isEmpty())\n          throw new SolrException(SolrException.ErrorCode.SERVER_ERROR,\n                  \"No JMX Servers found with agentId: \" + jmxConfig.agentId);\n      }\n\n      if (servers == null || servers.isEmpty()) {\n        LOG\n                .info(\"No JMX servers found, not exposing Solr information with JMX.\");\n        return;\n      }\n      server = servers.get(0);\n      LOG.info(\"JMX monitoring is enabled. Adding Solr mbeans to JMX Server: \"\n              + server);\n    } else {\n      try {\n        // Create a new MBeanServer with the given serviceUrl\n        server = MBeanServerFactory.newMBeanServer();\n        JMXConnectorServer connector = JMXConnectorServerFactory\n                .newJMXConnectorServer(new JMXServiceURL(jmxConfig.serviceUrl),\n                        null, server);\n        connector.start();\n        LOG.info(\"JMX monitoring is enabled at \" + jmxConfig.serviceUrl);\n      } catch (Exception e) {\n        // Release the reference\n        server = null;\n        throw new RuntimeException(\"Could not start JMX monitoring \", e);\n      }\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8","date":1268599006,"type":4,"author":"Mark Robert Miller","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/src/java/org/apache/solr/core/JmxMonitoredMap#JmxMonitoredMap(String,JmxConfiguration).mjava","sourceNew":null,"sourceOld":"  public JmxMonitoredMap(String coreName, JmxConfiguration jmxConfig) {\n    jmxRootName = \"solr\" + (coreName == null ? \"\" : \"/\" + coreName);\n\n    if (jmxConfig.agentId != null && jmxConfig.serviceUrl != null) {\n      throw new SolrException(\n              SolrException.ErrorCode.SERVER_ERROR,\n              \"Incorrect JMX Configuration in solrconfig.xml, both agentId and serviceUrl cannot be specified at the same time\");\n    }\n\n    if (jmxConfig.serviceUrl == null) {\n      List<MBeanServer> servers = null;\n\n      if (jmxConfig.agentId == null) {\n        // Try to find the first MBeanServer\n        servers = MBeanServerFactory.findMBeanServer(null);\n      } else if (jmxConfig.agentId != null) {\n        // Try to find the first MBean server with the given agentId\n        servers = MBeanServerFactory.findMBeanServer(jmxConfig.agentId);\n        // throw Exception if no servers were found with the given agentId\n        if (servers == null || servers.isEmpty())\n          throw new SolrException(SolrException.ErrorCode.SERVER_ERROR,\n                  \"No JMX Servers found with agentId: \" + jmxConfig.agentId);\n      }\n\n      if (servers == null || servers.isEmpty()) {\n        LOG\n                .info(\"No JMX servers found, not exposing Solr information with JMX.\");\n        return;\n      }\n      server = servers.get(0);\n      LOG.info(\"JMX monitoring is enabled. Adding Solr mbeans to JMX Server: \"\n              + server);\n    } else {\n      try {\n        // Create a new MBeanServer with the given serviceUrl\n        server = MBeanServerFactory.newMBeanServer();\n        JMXConnectorServer connector = JMXConnectorServerFactory\n                .newJMXConnectorServer(new JMXServiceURL(jmxConfig.serviceUrl),\n                        null, server);\n        connector.start();\n        LOG.info(\"JMX monitoring is enabled at \" + jmxConfig.serviceUrl);\n      } catch (Exception e) {\n        // Release the reference\n        server = null;\n        throw new RuntimeException(\"Could not start JMX monitoring \", e);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ad94625fb8d088209f46650c8097196fec67f00c","date":1453508319,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/src/java/org/apache/solr/core/JmxMonitoredMap#JmxMonitoredMap(String,JmxConfiguration).mjava","pathOld":"src/java/org/apache/solr/core/JmxMonitoredMap#JmxMonitoredMap(String,JmxConfiguration).mjava","sourceNew":"  public JmxMonitoredMap(String coreName, JmxConfiguration jmxConfig) {\n    jmxRootName = \"solr\" + (coreName == null ? \"\" : \"/\" + coreName);\n\n    if (jmxConfig.agentId != null && jmxConfig.serviceUrl != null) {\n      throw new SolrException(\n              SolrException.ErrorCode.SERVER_ERROR,\n              \"Incorrect JMX Configuration in solrconfig.xml, both agentId and serviceUrl cannot be specified at the same time\");\n    }\n\n    if (jmxConfig.serviceUrl == null) {\n      List<MBeanServer> servers = null;\n\n      if (jmxConfig.agentId == null) {\n        // Try to find the first MBeanServer\n        servers = MBeanServerFactory.findMBeanServer(null);\n      } else if (jmxConfig.agentId != null) {\n        // Try to find the first MBean server with the given agentId\n        servers = MBeanServerFactory.findMBeanServer(jmxConfig.agentId);\n        // throw Exception if no servers were found with the given agentId\n        if (servers == null || servers.isEmpty())\n          throw new SolrException(SolrException.ErrorCode.SERVER_ERROR,\n                  \"No JMX Servers found with agentId: \" + jmxConfig.agentId);\n      }\n\n      if (servers == null || servers.isEmpty()) {\n        LOG\n                .info(\"No JMX servers found, not exposing Solr information with JMX.\");\n        return;\n      }\n      server = servers.get(0);\n      LOG.info(\"JMX monitoring is enabled. Adding Solr mbeans to JMX Server: \"\n              + server);\n    } else {\n      try {\n        // Create a new MBeanServer with the given serviceUrl\n        server = MBeanServerFactory.newMBeanServer();\n        JMXConnectorServer connector = JMXConnectorServerFactory\n                .newJMXConnectorServer(new JMXServiceURL(jmxConfig.serviceUrl),\n                        null, server);\n        connector.start();\n        LOG.info(\"JMX monitoring is enabled at \" + jmxConfig.serviceUrl);\n      } catch (Exception e) {\n        // Release the reference\n        server = null;\n        throw new RuntimeException(\"Could not start JMX monitoring \", e);\n      }\n    }\n  }\n\n","sourceOld":"  public JmxMonitoredMap(String coreName, JmxConfiguration jmxConfig) {\n    jmxRootName = \"solr\" + (coreName == null ? \"\" : \"/\" + coreName);\n\n    if (jmxConfig.agentId != null && jmxConfig.serviceUrl != null) {\n      throw new SolrException(\n              SolrException.ErrorCode.SERVER_ERROR,\n              \"Incorrect JMX Configuration in solrconfig.xml, both agentId and serviceUrl cannot be specified at the same time\");\n    }\n\n    if (jmxConfig.serviceUrl == null) {\n      List<MBeanServer> servers = null;\n\n      if (jmxConfig.agentId == null) {\n        // Try to find the first MBeanServer\n        servers = MBeanServerFactory.findMBeanServer(null);\n      } else if (jmxConfig.agentId != null) {\n        // Try to find the first MBean server with the given agentId\n        servers = MBeanServerFactory.findMBeanServer(jmxConfig.agentId);\n        // throw Exception if no servers were found with the given agentId\n        if (servers == null || servers.isEmpty())\n          throw new SolrException(SolrException.ErrorCode.SERVER_ERROR,\n                  \"No JMX Servers found with agentId: \" + jmxConfig.agentId);\n      }\n\n      if (servers == null || servers.isEmpty()) {\n        LOG\n                .info(\"No JMX servers found, not exposing Solr information with JMX.\");\n        return;\n      }\n      server = servers.get(0);\n      LOG.info(\"JMX monitoring is enabled. Adding Solr mbeans to JMX Server: \"\n              + server);\n    } else {\n      try {\n        // Create a new MBeanServer with the given serviceUrl\n        server = MBeanServerFactory.newMBeanServer();\n        JMXConnectorServer connector = JMXConnectorServerFactory\n                .newJMXConnectorServer(new JMXServiceURL(jmxConfig.serviceUrl),\n                        null, server);\n        connector.start();\n        LOG.info(\"JMX monitoring is enabled at \" + jmxConfig.serviceUrl);\n      } catch (Exception e) {\n        // Release the reference\n        server = null;\n        throw new RuntimeException(\"Could not start JMX monitoring \", e);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1da8d55113b689b06716246649de6f62430f15c0","date":1453508340,"type":0,"author":"Dawid Weiss","isMerge":true,"pathNew":"solr/src/java/org/apache/solr/core/JmxMonitoredMap#JmxMonitoredMap(String,JmxConfiguration).mjava","pathOld":"/dev/null","sourceNew":"  public JmxMonitoredMap(String coreName, JmxConfiguration jmxConfig) {\n    jmxRootName = \"solr\" + (coreName == null ? \"\" : \"/\" + coreName);\n\n    if (jmxConfig.agentId != null && jmxConfig.serviceUrl != null) {\n      throw new SolrException(\n              SolrException.ErrorCode.SERVER_ERROR,\n              \"Incorrect JMX Configuration in solrconfig.xml, both agentId and serviceUrl cannot be specified at the same time\");\n    }\n\n    if (jmxConfig.serviceUrl == null) {\n      List<MBeanServer> servers = null;\n\n      if (jmxConfig.agentId == null) {\n        // Try to find the first MBeanServer\n        servers = MBeanServerFactory.findMBeanServer(null);\n      } else if (jmxConfig.agentId != null) {\n        // Try to find the first MBean server with the given agentId\n        servers = MBeanServerFactory.findMBeanServer(jmxConfig.agentId);\n        // throw Exception if no servers were found with the given agentId\n        if (servers == null || servers.isEmpty())\n          throw new SolrException(SolrException.ErrorCode.SERVER_ERROR,\n                  \"No JMX Servers found with agentId: \" + jmxConfig.agentId);\n      }\n\n      if (servers == null || servers.isEmpty()) {\n        LOG\n                .info(\"No JMX servers found, not exposing Solr information with JMX.\");\n        return;\n      }\n      server = servers.get(0);\n      LOG.info(\"JMX monitoring is enabled. Adding Solr mbeans to JMX Server: \"\n              + server);\n    } else {\n      try {\n        // Create a new MBeanServer with the given serviceUrl\n        server = MBeanServerFactory.newMBeanServer();\n        JMXConnectorServer connector = JMXConnectorServerFactory\n                .newJMXConnectorServer(new JMXServiceURL(jmxConfig.serviceUrl),\n                        null, server);\n        connector.start();\n        LOG.info(\"JMX monitoring is enabled at \" + jmxConfig.serviceUrl);\n      } catch (Exception e) {\n        // Release the reference\n        server = null;\n        throw new RuntimeException(\"Could not start JMX monitoring \", e);\n      }\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d73a8a1e6997c2a6f3d04ad1b08b13e6220cac94","date":1273283476,"type":3,"author":"Chris M. Hostetter","isMerge":false,"pathNew":"solr/src/java/org/apache/solr/core/JmxMonitoredMap#JmxMonitoredMap(String,JmxConfiguration).mjava","pathOld":"solr/src/java/org/apache/solr/core/JmxMonitoredMap#JmxMonitoredMap(String,JmxConfiguration).mjava","sourceNew":"  public JmxMonitoredMap(final String coreName, \n                         final JmxConfiguration jmxConfig) {\n    jmxRootName = (null != jmxConfig.rootName ? \n                   jmxConfig.rootName\n                   : (\"solr\" + (null != coreName ? \"/\" + coreName : \"\")));\n      \n    if (jmxConfig.serviceUrl == null) {\n      List<MBeanServer> servers = null;\n\n      if (jmxConfig.agentId == null) {\n        // Try to find the first MBeanServer\n        servers = MBeanServerFactory.findMBeanServer(null);\n      } else if (jmxConfig.agentId != null) {\n        // Try to find the first MBean server with the given agentId\n        servers = MBeanServerFactory.findMBeanServer(jmxConfig.agentId);\n        // throw Exception if no servers were found with the given agentId\n        if (servers == null || servers.isEmpty())\n          throw new SolrException(SolrException.ErrorCode.SERVER_ERROR,\n                  \"No JMX Servers found with agentId: \" + jmxConfig.agentId);\n      }\n\n      if (servers == null || servers.isEmpty()) {\n        LOG.info(\"No JMX servers found, not exposing Solr information with JMX.\");\n        return;\n      }\n      server = servers.get(0);\n      LOG.info(\"JMX monitoring is enabled. Adding Solr mbeans to JMX Server: \"\n               + server);\n    } else {\n      try {\n        // Create a new MBeanServer with the given serviceUrl\n        server = MBeanServerFactory.newMBeanServer();\n        JMXConnectorServer connector = JMXConnectorServerFactory\n                .newJMXConnectorServer(new JMXServiceURL(jmxConfig.serviceUrl),\n                        null, server);\n        connector.start();\n        LOG.info(\"JMX monitoring is enabled at \" + jmxConfig.serviceUrl);\n      } catch (Exception e) {\n        // Release the reference\n        server = null;\n        throw new RuntimeException(\"Could not start JMX monitoring \", e);\n      }\n    }\n  }\n\n","sourceOld":"  public JmxMonitoredMap(String coreName, JmxConfiguration jmxConfig) {\n    jmxRootName = \"solr\" + (coreName == null ? \"\" : \"/\" + coreName);\n\n    if (jmxConfig.agentId != null && jmxConfig.serviceUrl != null) {\n      throw new SolrException(\n              SolrException.ErrorCode.SERVER_ERROR,\n              \"Incorrect JMX Configuration in solrconfig.xml, both agentId and serviceUrl cannot be specified at the same time\");\n    }\n\n    if (jmxConfig.serviceUrl == null) {\n      List<MBeanServer> servers = null;\n\n      if (jmxConfig.agentId == null) {\n        // Try to find the first MBeanServer\n        servers = MBeanServerFactory.findMBeanServer(null);\n      } else if (jmxConfig.agentId != null) {\n        // Try to find the first MBean server with the given agentId\n        servers = MBeanServerFactory.findMBeanServer(jmxConfig.agentId);\n        // throw Exception if no servers were found with the given agentId\n        if (servers == null || servers.isEmpty())\n          throw new SolrException(SolrException.ErrorCode.SERVER_ERROR,\n                  \"No JMX Servers found with agentId: \" + jmxConfig.agentId);\n      }\n\n      if (servers == null || servers.isEmpty()) {\n        LOG\n                .info(\"No JMX servers found, not exposing Solr information with JMX.\");\n        return;\n      }\n      server = servers.get(0);\n      LOG.info(\"JMX monitoring is enabled. Adding Solr mbeans to JMX Server: \"\n              + server);\n    } else {\n      try {\n        // Create a new MBeanServer with the given serviceUrl\n        server = MBeanServerFactory.newMBeanServer();\n        JMXConnectorServer connector = JMXConnectorServerFactory\n                .newJMXConnectorServer(new JMXServiceURL(jmxConfig.serviceUrl),\n                        null, server);\n        connector.start();\n        LOG.info(\"JMX monitoring is enabled at \" + jmxConfig.serviceUrl);\n      } catch (Exception e) {\n        // Release the reference\n        server = null;\n        throw new RuntimeException(\"Could not start JMX monitoring \", e);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c903c3d15906a3da96b8c0c2fb704491005fdbdb","date":1453508227,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/JmxMonitoredMap#JmxMonitoredMap(String,JmxConfiguration).mjava","pathOld":"solr/src/java/org/apache/solr/core/JmxMonitoredMap#JmxMonitoredMap(String,JmxConfiguration).mjava","sourceNew":"  public JmxMonitoredMap(final String coreName, \n                         final JmxConfiguration jmxConfig) {\n    jmxRootName = (null != jmxConfig.rootName ? \n                   jmxConfig.rootName\n                   : (\"solr\" + (null != coreName ? \"/\" + coreName : \"\")));\n      \n    if (jmxConfig.serviceUrl == null) {\n      List<MBeanServer> servers = null;\n\n      if (jmxConfig.agentId == null) {\n        // Try to find the first MBeanServer\n        servers = MBeanServerFactory.findMBeanServer(null);\n      } else if (jmxConfig.agentId != null) {\n        // Try to find the first MBean server with the given agentId\n        servers = MBeanServerFactory.findMBeanServer(jmxConfig.agentId);\n        // throw Exception if no servers were found with the given agentId\n        if (servers == null || servers.isEmpty())\n          throw new SolrException(SolrException.ErrorCode.SERVER_ERROR,\n                  \"No JMX Servers found with agentId: \" + jmxConfig.agentId);\n      }\n\n      if (servers == null || servers.isEmpty()) {\n        LOG.info(\"No JMX servers found, not exposing Solr information with JMX.\");\n        return;\n      }\n      server = servers.get(0);\n      LOG.info(\"JMX monitoring is enabled. Adding Solr mbeans to JMX Server: \"\n               + server);\n    } else {\n      try {\n        // Create a new MBeanServer with the given serviceUrl\n        server = MBeanServerFactory.newMBeanServer();\n        JMXConnectorServer connector = JMXConnectorServerFactory\n                .newJMXConnectorServer(new JMXServiceURL(jmxConfig.serviceUrl),\n                        null, server);\n        connector.start();\n        LOG.info(\"JMX monitoring is enabled at \" + jmxConfig.serviceUrl);\n      } catch (Exception e) {\n        // Release the reference\n        server = null;\n        throw new RuntimeException(\"Could not start JMX monitoring \", e);\n      }\n    }\n  }\n\n","sourceOld":"  public JmxMonitoredMap(final String coreName, \n                         final JmxConfiguration jmxConfig) {\n    jmxRootName = (null != jmxConfig.rootName ? \n                   jmxConfig.rootName\n                   : (\"solr\" + (null != coreName ? \"/\" + coreName : \"\")));\n      \n    if (jmxConfig.serviceUrl == null) {\n      List<MBeanServer> servers = null;\n\n      if (jmxConfig.agentId == null) {\n        // Try to find the first MBeanServer\n        servers = MBeanServerFactory.findMBeanServer(null);\n      } else if (jmxConfig.agentId != null) {\n        // Try to find the first MBean server with the given agentId\n        servers = MBeanServerFactory.findMBeanServer(jmxConfig.agentId);\n        // throw Exception if no servers were found with the given agentId\n        if (servers == null || servers.isEmpty())\n          throw new SolrException(SolrException.ErrorCode.SERVER_ERROR,\n                  \"No JMX Servers found with agentId: \" + jmxConfig.agentId);\n      }\n\n      if (servers == null || servers.isEmpty()) {\n        LOG.info(\"No JMX servers found, not exposing Solr information with JMX.\");\n        return;\n      }\n      server = servers.get(0);\n      LOG.info(\"JMX monitoring is enabled. Adding Solr mbeans to JMX Server: \"\n               + server);\n    } else {\n      try {\n        // Create a new MBeanServer with the given serviceUrl\n        server = MBeanServerFactory.newMBeanServer();\n        JMXConnectorServer connector = JMXConnectorServerFactory\n                .newJMXConnectorServer(new JMXServiceURL(jmxConfig.serviceUrl),\n                        null, server);\n        connector.start();\n        LOG.info(\"JMX monitoring is enabled at \" + jmxConfig.serviceUrl);\n      } catch (Exception e) {\n        // Release the reference\n        server = null;\n        throw new RuntimeException(\"Could not start JMX monitoring \", e);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a258fbb26824fd104ed795e5d9033d2d040049ee","date":1453508252,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/JmxMonitoredMap#JmxMonitoredMap(String,JmxConfiguration).mjava","pathOld":"solr/src/java/org/apache/solr/core/JmxMonitoredMap#JmxMonitoredMap(String,JmxConfiguration).mjava","sourceNew":"  public JmxMonitoredMap(final String coreName, \n                         final JmxConfiguration jmxConfig) {\n    jmxRootName = (null != jmxConfig.rootName ? \n                   jmxConfig.rootName\n                   : (\"solr\" + (null != coreName ? \"/\" + coreName : \"\")));\n      \n    if (jmxConfig.serviceUrl == null) {\n      List<MBeanServer> servers = null;\n\n      if (jmxConfig.agentId == null) {\n        // Try to find the first MBeanServer\n        servers = MBeanServerFactory.findMBeanServer(null);\n      } else if (jmxConfig.agentId != null) {\n        // Try to find the first MBean server with the given agentId\n        servers = MBeanServerFactory.findMBeanServer(jmxConfig.agentId);\n        // throw Exception if no servers were found with the given agentId\n        if (servers == null || servers.isEmpty())\n          throw new SolrException(SolrException.ErrorCode.SERVER_ERROR,\n                  \"No JMX Servers found with agentId: \" + jmxConfig.agentId);\n      }\n\n      if (servers == null || servers.isEmpty()) {\n        LOG.info(\"No JMX servers found, not exposing Solr information with JMX.\");\n        return;\n      }\n      server = servers.get(0);\n      LOG.info(\"JMX monitoring is enabled. Adding Solr mbeans to JMX Server: \"\n               + server);\n    } else {\n      try {\n        // Create a new MBeanServer with the given serviceUrl\n        server = MBeanServerFactory.newMBeanServer();\n        JMXConnectorServer connector = JMXConnectorServerFactory\n                .newJMXConnectorServer(new JMXServiceURL(jmxConfig.serviceUrl),\n                        null, server);\n        connector.start();\n        LOG.info(\"JMX monitoring is enabled at \" + jmxConfig.serviceUrl);\n      } catch (Exception e) {\n        // Release the reference\n        server = null;\n        throw new RuntimeException(\"Could not start JMX monitoring \", e);\n      }\n    }\n  }\n\n","sourceOld":"  public JmxMonitoredMap(final String coreName, \n                         final JmxConfiguration jmxConfig) {\n    jmxRootName = (null != jmxConfig.rootName ? \n                   jmxConfig.rootName\n                   : (\"solr\" + (null != coreName ? \"/\" + coreName : \"\")));\n      \n    if (jmxConfig.serviceUrl == null) {\n      List<MBeanServer> servers = null;\n\n      if (jmxConfig.agentId == null) {\n        // Try to find the first MBeanServer\n        servers = MBeanServerFactory.findMBeanServer(null);\n      } else if (jmxConfig.agentId != null) {\n        // Try to find the first MBean server with the given agentId\n        servers = MBeanServerFactory.findMBeanServer(jmxConfig.agentId);\n        // throw Exception if no servers were found with the given agentId\n        if (servers == null || servers.isEmpty())\n          throw new SolrException(SolrException.ErrorCode.SERVER_ERROR,\n                  \"No JMX Servers found with agentId: \" + jmxConfig.agentId);\n      }\n\n      if (servers == null || servers.isEmpty()) {\n        LOG.info(\"No JMX servers found, not exposing Solr information with JMX.\");\n        return;\n      }\n      server = servers.get(0);\n      LOG.info(\"JMX monitoring is enabled. Adding Solr mbeans to JMX Server: \"\n               + server);\n    } else {\n      try {\n        // Create a new MBeanServer with the given serviceUrl\n        server = MBeanServerFactory.newMBeanServer();\n        JMXConnectorServer connector = JMXConnectorServerFactory\n                .newJMXConnectorServer(new JMXServiceURL(jmxConfig.serviceUrl),\n                        null, server);\n        connector.start();\n        LOG.info(\"JMX monitoring is enabled at \" + jmxConfig.serviceUrl);\n      } catch (Exception e) {\n        // Release the reference\n        server = null;\n        throw new RuntimeException(\"Could not start JMX monitoring \", e);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":5,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/core/JmxMonitoredMap#JmxMonitoredMap(String,JmxConfiguration).mjava","pathOld":"solr/src/java/org/apache/solr/core/JmxMonitoredMap#JmxMonitoredMap(String,JmxConfiguration).mjava","sourceNew":"  public JmxMonitoredMap(final String coreName, \n                         final JmxConfiguration jmxConfig) {\n    jmxRootName = (null != jmxConfig.rootName ? \n                   jmxConfig.rootName\n                   : (\"solr\" + (null != coreName ? \"/\" + coreName : \"\")));\n      \n    if (jmxConfig.serviceUrl == null) {\n      List<MBeanServer> servers = null;\n\n      if (jmxConfig.agentId == null) {\n        // Try to find the first MBeanServer\n        servers = MBeanServerFactory.findMBeanServer(null);\n      } else if (jmxConfig.agentId != null) {\n        // Try to find the first MBean server with the given agentId\n        servers = MBeanServerFactory.findMBeanServer(jmxConfig.agentId);\n        // throw Exception if no servers were found with the given agentId\n        if (servers == null || servers.isEmpty())\n          throw new SolrException(SolrException.ErrorCode.SERVER_ERROR,\n                  \"No JMX Servers found with agentId: \" + jmxConfig.agentId);\n      }\n\n      if (servers == null || servers.isEmpty()) {\n        LOG.info(\"No JMX servers found, not exposing Solr information with JMX.\");\n        return;\n      }\n      server = servers.get(0);\n      LOG.info(\"JMX monitoring is enabled. Adding Solr mbeans to JMX Server: \"\n               + server);\n    } else {\n      try {\n        // Create a new MBeanServer with the given serviceUrl\n        server = MBeanServerFactory.newMBeanServer();\n        JMXConnectorServer connector = JMXConnectorServerFactory\n                .newJMXConnectorServer(new JMXServiceURL(jmxConfig.serviceUrl),\n                        null, server);\n        connector.start();\n        LOG.info(\"JMX monitoring is enabled at \" + jmxConfig.serviceUrl);\n      } catch (Exception e) {\n        // Release the reference\n        server = null;\n        throw new RuntimeException(\"Could not start JMX monitoring \", e);\n      }\n    }\n  }\n\n","sourceOld":"  public JmxMonitoredMap(final String coreName, \n                         final JmxConfiguration jmxConfig) {\n    jmxRootName = (null != jmxConfig.rootName ? \n                   jmxConfig.rootName\n                   : (\"solr\" + (null != coreName ? \"/\" + coreName : \"\")));\n      \n    if (jmxConfig.serviceUrl == null) {\n      List<MBeanServer> servers = null;\n\n      if (jmxConfig.agentId == null) {\n        // Try to find the first MBeanServer\n        servers = MBeanServerFactory.findMBeanServer(null);\n      } else if (jmxConfig.agentId != null) {\n        // Try to find the first MBean server with the given agentId\n        servers = MBeanServerFactory.findMBeanServer(jmxConfig.agentId);\n        // throw Exception if no servers were found with the given agentId\n        if (servers == null || servers.isEmpty())\n          throw new SolrException(SolrException.ErrorCode.SERVER_ERROR,\n                  \"No JMX Servers found with agentId: \" + jmxConfig.agentId);\n      }\n\n      if (servers == null || servers.isEmpty()) {\n        LOG.info(\"No JMX servers found, not exposing Solr information with JMX.\");\n        return;\n      }\n      server = servers.get(0);\n      LOG.info(\"JMX monitoring is enabled. Adding Solr mbeans to JMX Server: \"\n               + server);\n    } else {\n      try {\n        // Create a new MBeanServer with the given serviceUrl\n        server = MBeanServerFactory.newMBeanServer();\n        JMXConnectorServer connector = JMXConnectorServerFactory\n                .newJMXConnectorServer(new JMXServiceURL(jmxConfig.serviceUrl),\n                        null, server);\n        connector.start();\n        LOG.info(\"JMX monitoring is enabled at \" + jmxConfig.serviceUrl);\n      } catch (Exception e) {\n        // Release the reference\n        server = null;\n        throw new RuntimeException(\"Could not start JMX monitoring \", e);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"1da8d55113b689b06716246649de6f62430f15c0":["a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8","ad94625fb8d088209f46650c8097196fec67f00c"],"893269407f5c988a4b2ee13c7ffc01ec43136c1d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"d73a8a1e6997c2a6f3d04ad1b08b13e6220cac94":["1da8d55113b689b06716246649de6f62430f15c0"],"a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8":["893269407f5c988a4b2ee13c7ffc01ec43136c1d"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["d73a8a1e6997c2a6f3d04ad1b08b13e6220cac94"],"c26f00b574427b55127e869b935845554afde1fa":["d73a8a1e6997c2a6f3d04ad1b08b13e6220cac94","c903c3d15906a3da96b8c0c2fb704491005fdbdb"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"a258fbb26824fd104ed795e5d9033d2d040049ee":["d73a8a1e6997c2a6f3d04ad1b08b13e6220cac94"],"ad94625fb8d088209f46650c8097196fec67f00c":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["c26f00b574427b55127e869b935845554afde1fa"]},"commit2Childs":{"1da8d55113b689b06716246649de6f62430f15c0":["d73a8a1e6997c2a6f3d04ad1b08b13e6220cac94"],"893269407f5c988a4b2ee13c7ffc01ec43136c1d":["a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8"],"d73a8a1e6997c2a6f3d04ad1b08b13e6220cac94":["c903c3d15906a3da96b8c0c2fb704491005fdbdb","c26f00b574427b55127e869b935845554afde1fa","a258fbb26824fd104ed795e5d9033d2d040049ee"],"a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8":["1da8d55113b689b06716246649de6f62430f15c0"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["c26f00b574427b55127e869b935845554afde1fa"],"c26f00b574427b55127e869b935845554afde1fa":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["893269407f5c988a4b2ee13c7ffc01ec43136c1d"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["ad94625fb8d088209f46650c8097196fec67f00c"],"a258fbb26824fd104ed795e5d9033d2d040049ee":[],"ad94625fb8d088209f46650c8097196fec67f00c":["1da8d55113b689b06716246649de6f62430f15c0"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a258fbb26824fd104ed795e5d9033d2d040049ee","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"pathCommit":null}