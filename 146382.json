{"path":"lucene/core/src/test/org/apache/lucene/geo/TestPolygon2D#testPacMan().mjava","commits":[{"id":"925fce43f3bac029d912b9b7de03c789e258a333","date":1461612714,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/geo/TestPolygon2D#testPacMan().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/geo/TestPolygon#testPacMan().mjava","sourceNew":"  public void testPacMan() throws Exception {\n    // pacman\n    double[] px = {0, 10, 10, 0, -8, -10, -8, 0, 10, 10, 0};\n    double[] py = {0, 5, 9, 10, 9, 0, -9, -10, -9, -5, 0};\n\n    // candidate crosses cell\n    double xMin = 2;//-5;\n    double xMax = 11;//0.000001;\n    double yMin = -1;//0;\n    double yMax = 1;//5;\n\n    // test cell crossing poly\n    Polygon2D polygon = Polygon2D.create(new Polygon(py, px));\n    assertEquals(Relation.CELL_CROSSES_QUERY, polygon.relate(yMin, yMax, xMin, xMax));\n  }\n\n","sourceOld":"  public void testPacMan() throws Exception {\n    // pacman\n    double[] px = {0, 10, 10, 0, -8, -10, -8, 0, 10, 10, 0};\n    double[] py = {0, 5, 9, 10, 9, 0, -9, -10, -9, -5, 0};\n\n    // candidate crosses cell\n    double xMin = 2;//-5;\n    double xMax = 11;//0.000001;\n    double yMin = -1;//0;\n    double yMax = 1;//5;\n\n    // test cell crossing poly\n    Polygon polygon = new Polygon(py, px);\n    assertEquals(Relation.CELL_CROSSES_QUERY, polygon.relate(yMin, yMax, xMin, xMax));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f7f901826e47f75f810d7aae24b0455d21ea1fe2","date":1461678892,"type":1,"author":"Noble Paul","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/geo/TestPolygon2D#testPacMan().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/geo/TestPolygon#testPacMan().mjava","sourceNew":"  public void testPacMan() throws Exception {\n    // pacman\n    double[] px = {0, 10, 10, 0, -8, -10, -8, 0, 10, 10, 0};\n    double[] py = {0, 5, 9, 10, 9, 0, -9, -10, -9, -5, 0};\n\n    // candidate crosses cell\n    double xMin = 2;//-5;\n    double xMax = 11;//0.000001;\n    double yMin = -1;//0;\n    double yMax = 1;//5;\n\n    // test cell crossing poly\n    Polygon2D polygon = Polygon2D.create(new Polygon(py, px));\n    assertEquals(Relation.CELL_CROSSES_QUERY, polygon.relate(yMin, yMax, xMin, xMax));\n  }\n\n","sourceOld":"  public void testPacMan() throws Exception {\n    // pacman\n    double[] px = {0, 10, 10, 0, -8, -10, -8, 0, 10, 10, 0};\n    double[] py = {0, 5, 9, 10, 9, 0, -9, -10, -9, -5, 0};\n\n    // candidate crosses cell\n    double xMin = 2;//-5;\n    double xMax = 11;//0.000001;\n    double yMin = -1;//0;\n    double yMax = 1;//5;\n\n    // test cell crossing poly\n    Polygon polygon = new Polygon(py, px);\n    assertEquals(Relation.CELL_CROSSES_QUERY, polygon.relate(yMin, yMax, xMin, xMax));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b5e250f1fb163f190f5ec72b6eeb8271162d8ae1","date":1571074565,"type":3,"author":"Ignacio Vera","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/geo/TestPolygon2D#testPacMan().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/geo/TestPolygon2D#testPacMan().mjava","sourceNew":"  public void testPacMan() throws Exception {\n    // pacman\n    double[] px = {0, 10, 10, 0, -8, -10, -8, 0, 10, 10, 0};\n    double[] py = {0, 5, 9, 10, 9, 0, -9, -10, -9, -5, 0};\n\n    // candidate crosses cell\n    double xMin = 2;//-5;\n    double xMax = 11;//0.000001;\n    double yMin = -1;//0;\n    double yMax = 1;//5;\n\n    // test cell crossing poly\n    Component2D polygon = Polygon2D.create(new Polygon(py, px));\n    assertEquals(Relation.CELL_CROSSES_QUERY, polygon.relate(yMin, yMax, xMin, xMax));\n  }\n\n","sourceOld":"  public void testPacMan() throws Exception {\n    // pacman\n    double[] px = {0, 10, 10, 0, -8, -10, -8, 0, 10, 10, 0};\n    double[] py = {0, 5, 9, 10, 9, 0, -9, -10, -9, -5, 0};\n\n    // candidate crosses cell\n    double xMin = 2;//-5;\n    double xMax = 11;//0.000001;\n    double yMin = -1;//0;\n    double yMax = 1;//5;\n\n    // test cell crossing poly\n    Polygon2D polygon = Polygon2D.create(new Polygon(py, px));\n    assertEquals(Relation.CELL_CROSSES_QUERY, polygon.relate(yMin, yMax, xMin, xMax));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b0b597c65628ca9e73913a07e81691f8229bae35","date":1571224353,"type":3,"author":"jimczi","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/geo/TestPolygon2D#testPacMan().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/geo/TestPolygon2D#testPacMan().mjava","sourceNew":"  public void testPacMan() throws Exception {\n    // pacman\n    double[] px = {0, 10, 10, 0, -8, -10, -8, 0, 10, 10, 0};\n    double[] py = {0, 5, 9, 10, 9, 0, -9, -10, -9, -5, 0};\n\n    // candidate crosses cell\n    double xMin = 2;//-5;\n    double xMax = 11;//0.000001;\n    double yMin = -1;//0;\n    double yMax = 1;//5;\n\n    // test cell crossing poly\n    Component2D polygon = Polygon2D.create(new Polygon(py, px));\n    assertEquals(Relation.CELL_CROSSES_QUERY, polygon.relate(yMin, yMax, xMin, xMax));\n  }\n\n","sourceOld":"  public void testPacMan() throws Exception {\n    // pacman\n    double[] px = {0, 10, 10, 0, -8, -10, -8, 0, 10, 10, 0};\n    double[] py = {0, 5, 9, 10, 9, 0, -9, -10, -9, -5, 0};\n\n    // candidate crosses cell\n    double xMin = 2;//-5;\n    double xMax = 11;//0.000001;\n    double yMin = -1;//0;\n    double yMax = 1;//5;\n\n    // test cell crossing poly\n    Polygon2D polygon = Polygon2D.create(new Polygon(py, px));\n    assertEquals(Relation.CELL_CROSSES_QUERY, polygon.relate(yMin, yMax, xMin, xMax));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b5e250f1fb163f190f5ec72b6eeb8271162d8ae1":["f7f901826e47f75f810d7aae24b0455d21ea1fe2"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"f7f901826e47f75f810d7aae24b0455d21ea1fe2":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","925fce43f3bac029d912b9b7de03c789e258a333"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b5e250f1fb163f190f5ec72b6eeb8271162d8ae1"],"925fce43f3bac029d912b9b7de03c789e258a333":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"b0b597c65628ca9e73913a07e81691f8229bae35":["f7f901826e47f75f810d7aae24b0455d21ea1fe2","b5e250f1fb163f190f5ec72b6eeb8271162d8ae1"]},"commit2Childs":{"b5e250f1fb163f190f5ec72b6eeb8271162d8ae1":["cd5edd1f2b162a5cfa08efd17851a07373a96817","b0b597c65628ca9e73913a07e81691f8229bae35"],"f7f901826e47f75f810d7aae24b0455d21ea1fe2":["b5e250f1fb163f190f5ec72b6eeb8271162d8ae1","b0b597c65628ca9e73913a07e81691f8229bae35"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["f7f901826e47f75f810d7aae24b0455d21ea1fe2","925fce43f3bac029d912b9b7de03c789e258a333"],"925fce43f3bac029d912b9b7de03c789e258a333":["f7f901826e47f75f810d7aae24b0455d21ea1fe2"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"b0b597c65628ca9e73913a07e81691f8229bae35":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817","b0b597c65628ca9e73913a07e81691f8229bae35"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}