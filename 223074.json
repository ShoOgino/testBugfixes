{"path":"lucene/core/src/java/org/apache/lucene/codecs/BlockTreeTermsReader.FieldReader.SegmentTermsEnum#SegmentTermsEnum().mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/BlockTreeTermsReader.FieldReader.SegmentTermsEnum#SegmentTermsEnum().mjava","pathOld":"lucene/src/java/org/apache/lucene/codecs/BlockTreeTermsReader.FieldReader.SegmentTermsEnum#SegmentTermsEnum().mjava","sourceNew":"      public SegmentTermsEnum() throws IOException {\n        //if (DEBUG) System.out.println(\"BTTR.init seg=\" + segment);\n        stack = new Frame[0];\n        \n        // Used to hold seek by TermState, or cached seek\n        staticFrame = new Frame(-1);\n\n        if (index == null) {\n          fstReader = null;\n        } else {\n          fstReader = index.getBytesReader(0);\n        }\n\n        // Init w/ root block; don't use index since it may\n        // not (and need not) have been loaded\n        for(int arcIdx=0;arcIdx<arcs.length;arcIdx++) {\n          arcs[arcIdx] = new FST.Arc<BytesRef>();\n        }\n\n        currentFrame = staticFrame;\n        final FST.Arc<BytesRef> arc;\n        if (index != null) {\n          arc = index.getFirstArc(arcs[0]);\n          // Empty string prefix must have an output in the index!\n          assert arc.isFinal();\n        } else {\n          arc = null;\n        }\n        currentFrame = staticFrame;\n        //currentFrame = pushFrame(arc, rootCode, 0);\n        //currentFrame.loadBlock();\n        validIndexPrefix = 0;\n        // if (DEBUG) {\n        //   System.out.println(\"init frame state \" + currentFrame.ord);\n        //   printSeekState();\n        // }\n\n        //System.out.println();\n        // computeBlockStats().print(System.out);\n      }\n\n","sourceOld":"      public SegmentTermsEnum() throws IOException {\n        //if (DEBUG) System.out.println(\"BTTR.init seg=\" + segment);\n        stack = new Frame[0];\n        \n        // Used to hold seek by TermState, or cached seek\n        staticFrame = new Frame(-1);\n\n        if (index == null) {\n          fstReader = null;\n        } else {\n          fstReader = index.getBytesReader(0);\n        }\n\n        // Init w/ root block; don't use index since it may\n        // not (and need not) have been loaded\n        for(int arcIdx=0;arcIdx<arcs.length;arcIdx++) {\n          arcs[arcIdx] = new FST.Arc<BytesRef>();\n        }\n\n        currentFrame = staticFrame;\n        final FST.Arc<BytesRef> arc;\n        if (index != null) {\n          arc = index.getFirstArc(arcs[0]);\n          // Empty string prefix must have an output in the index!\n          assert arc.isFinal();\n        } else {\n          arc = null;\n        }\n        currentFrame = staticFrame;\n        //currentFrame = pushFrame(arc, rootCode, 0);\n        //currentFrame.loadBlock();\n        validIndexPrefix = 0;\n        // if (DEBUG) {\n        //   System.out.println(\"init frame state \" + currentFrame.ord);\n        //   printSeekState();\n        // }\n\n        //System.out.println();\n        // computeBlockStats().print(System.out);\n      }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"82557a475db3e0849171dc0be5b02e3ae0745ddb","date":1358195918,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/BlockTreeTermsReader.FieldReader.SegmentTermsEnum#SegmentTermsEnum().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/BlockTreeTermsReader.FieldReader.SegmentTermsEnum#SegmentTermsEnum().mjava","sourceNew":"      public SegmentTermsEnum() throws IOException {\n        //if (DEBUG) System.out.println(\"BTTR.init seg=\" + segment);\n        stack = new Frame[0];\n        \n        // Used to hold seek by TermState, or cached seek\n        staticFrame = new Frame(-1);\n\n        if (index == null) {\n          fstReader = null;\n        } else {\n          fstReader = index.getBytesReader();\n        }\n\n        // Init w/ root block; don't use index since it may\n        // not (and need not) have been loaded\n        for(int arcIdx=0;arcIdx<arcs.length;arcIdx++) {\n          arcs[arcIdx] = new FST.Arc<BytesRef>();\n        }\n\n        currentFrame = staticFrame;\n        final FST.Arc<BytesRef> arc;\n        if (index != null) {\n          arc = index.getFirstArc(arcs[0]);\n          // Empty string prefix must have an output in the index!\n          assert arc.isFinal();\n        } else {\n          arc = null;\n        }\n        currentFrame = staticFrame;\n        //currentFrame = pushFrame(arc, rootCode, 0);\n        //currentFrame.loadBlock();\n        validIndexPrefix = 0;\n        // if (DEBUG) {\n        //   System.out.println(\"init frame state \" + currentFrame.ord);\n        //   printSeekState();\n        // }\n\n        //System.out.println();\n        // computeBlockStats().print(System.out);\n      }\n\n","sourceOld":"      public SegmentTermsEnum() throws IOException {\n        //if (DEBUG) System.out.println(\"BTTR.init seg=\" + segment);\n        stack = new Frame[0];\n        \n        // Used to hold seek by TermState, or cached seek\n        staticFrame = new Frame(-1);\n\n        if (index == null) {\n          fstReader = null;\n        } else {\n          fstReader = index.getBytesReader(0);\n        }\n\n        // Init w/ root block; don't use index since it may\n        // not (and need not) have been loaded\n        for(int arcIdx=0;arcIdx<arcs.length;arcIdx++) {\n          arcs[arcIdx] = new FST.Arc<BytesRef>();\n        }\n\n        currentFrame = staticFrame;\n        final FST.Arc<BytesRef> arc;\n        if (index != null) {\n          arc = index.getFirstArc(arcs[0]);\n          // Empty string prefix must have an output in the index!\n          assert arc.isFinal();\n        } else {\n          arc = null;\n        }\n        currentFrame = staticFrame;\n        //currentFrame = pushFrame(arc, rootCode, 0);\n        //currentFrame.loadBlock();\n        validIndexPrefix = 0;\n        // if (DEBUG) {\n        //   System.out.println(\"init frame state \" + currentFrame.ord);\n        //   printSeekState();\n        // }\n\n        //System.out.println();\n        // computeBlockStats().print(System.out);\n      }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c4015cd39dff8d4dec562d909f9766debac53aa6","date":1358548736,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/BlockTreeTermsReader.FieldReader.SegmentTermsEnum#SegmentTermsEnum().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/BlockTreeTermsReader.FieldReader.SegmentTermsEnum#SegmentTermsEnum().mjava","sourceNew":"      public SegmentTermsEnum() throws IOException {\n        //if (DEBUG) System.out.println(\"BTTR.init seg=\" + segment);\n        stack = new Frame[0];\n        \n        // Used to hold seek by TermState, or cached seek\n        staticFrame = new Frame(-1);\n\n        if (index == null) {\n          fstReader = null;\n        } else {\n          fstReader = index.getBytesReader();\n        }\n\n        // Init w/ root block; don't use index since it may\n        // not (and need not) have been loaded\n        for(int arcIdx=0;arcIdx<arcs.length;arcIdx++) {\n          arcs[arcIdx] = new FST.Arc<BytesRef>();\n        }\n\n        currentFrame = staticFrame;\n        final FST.Arc<BytesRef> arc;\n        if (index != null) {\n          arc = index.getFirstArc(arcs[0]);\n          // Empty string prefix must have an output in the index!\n          assert arc.isFinal();\n        } else {\n          arc = null;\n        }\n        currentFrame = staticFrame;\n        //currentFrame = pushFrame(arc, rootCode, 0);\n        //currentFrame.loadBlock();\n        validIndexPrefix = 0;\n        // if (DEBUG) {\n        //   System.out.println(\"init frame state \" + currentFrame.ord);\n        //   printSeekState();\n        // }\n\n        //System.out.println();\n        // computeBlockStats().print(System.out);\n      }\n\n","sourceOld":"      public SegmentTermsEnum() throws IOException {\n        //if (DEBUG) System.out.println(\"BTTR.init seg=\" + segment);\n        stack = new Frame[0];\n        \n        // Used to hold seek by TermState, or cached seek\n        staticFrame = new Frame(-1);\n\n        if (index == null) {\n          fstReader = null;\n        } else {\n          fstReader = index.getBytesReader(0);\n        }\n\n        // Init w/ root block; don't use index since it may\n        // not (and need not) have been loaded\n        for(int arcIdx=0;arcIdx<arcs.length;arcIdx++) {\n          arcs[arcIdx] = new FST.Arc<BytesRef>();\n        }\n\n        currentFrame = staticFrame;\n        final FST.Arc<BytesRef> arc;\n        if (index != null) {\n          arc = index.getFirstArc(arcs[0]);\n          // Empty string prefix must have an output in the index!\n          assert arc.isFinal();\n        } else {\n          arc = null;\n        }\n        currentFrame = staticFrame;\n        //currentFrame = pushFrame(arc, rootCode, 0);\n        //currentFrame.loadBlock();\n        validIndexPrefix = 0;\n        // if (DEBUG) {\n        //   System.out.println(\"init frame state \" + currentFrame.ord);\n        //   printSeekState();\n        // }\n\n        //System.out.println();\n        // computeBlockStats().print(System.out);\n      }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"634f330c54fd3f9f491d52036dc3f40b4f4d8934","date":1394635157,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/BlockTreeTermsReader.FieldReader.SegmentTermsEnum#SegmentTermsEnum().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/BlockTreeTermsReader.FieldReader.SegmentTermsEnum#SegmentTermsEnum().mjava","sourceNew":"      public SegmentTermsEnum() throws IOException {\n        //if (DEBUG) System.out.println(\"BTTR.init seg=\" + segment);\n        stack = new Frame[0];\n        \n        // Used to hold seek by TermState, or cached seek\n        staticFrame = new Frame(-1);\n\n        if (index == null) {\n          fstReader = null;\n        } else {\n          fstReader = index.getBytesReader();\n        }\n\n        // Init w/ root block; don't use index since it may\n        // not (and need not) have been loaded\n        for(int arcIdx=0;arcIdx<arcs.length;arcIdx++) {\n          arcs[arcIdx] = new FST.Arc<>();\n        }\n\n        currentFrame = staticFrame;\n        final FST.Arc<BytesRef> arc;\n        if (index != null) {\n          arc = index.getFirstArc(arcs[0]);\n          // Empty string prefix must have an output in the index!\n          assert arc.isFinal();\n        } else {\n          arc = null;\n        }\n        currentFrame = staticFrame;\n        //currentFrame = pushFrame(arc, rootCode, 0);\n        //currentFrame.loadBlock();\n        validIndexPrefix = 0;\n        // if (DEBUG) {\n        //   System.out.println(\"init frame state \" + currentFrame.ord);\n        //   printSeekState();\n        // }\n\n        //System.out.println();\n        // computeBlockStats().print(System.out);\n      }\n\n","sourceOld":"      public SegmentTermsEnum() throws IOException {\n        //if (DEBUG) System.out.println(\"BTTR.init seg=\" + segment);\n        stack = new Frame[0];\n        \n        // Used to hold seek by TermState, or cached seek\n        staticFrame = new Frame(-1);\n\n        if (index == null) {\n          fstReader = null;\n        } else {\n          fstReader = index.getBytesReader();\n        }\n\n        // Init w/ root block; don't use index since it may\n        // not (and need not) have been loaded\n        for(int arcIdx=0;arcIdx<arcs.length;arcIdx++) {\n          arcs[arcIdx] = new FST.Arc<BytesRef>();\n        }\n\n        currentFrame = staticFrame;\n        final FST.Arc<BytesRef> arc;\n        if (index != null) {\n          arc = index.getFirstArc(arcs[0]);\n          // Empty string prefix must have an output in the index!\n          assert arc.isFinal();\n        } else {\n          arc = null;\n        }\n        currentFrame = staticFrame;\n        //currentFrame = pushFrame(arc, rootCode, 0);\n        //currentFrame.loadBlock();\n        validIndexPrefix = 0;\n        // if (DEBUG) {\n        //   System.out.println(\"init frame state \" + currentFrame.ord);\n        //   printSeekState();\n        // }\n\n        //System.out.println();\n        // computeBlockStats().print(System.out);\n      }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5ad80176d91a6f70fe93880e43dfd697dc4e63ed","date":1400176913,"type":5,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/blocktree/BlockTreeTermsReader.FieldReader.SegmentTermsEnum#SegmentTermsEnum().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/BlockTreeTermsReader.FieldReader.SegmentTermsEnum#SegmentTermsEnum().mjava","sourceNew":"      public SegmentTermsEnum() throws IOException {\n        //if (DEBUG) System.out.println(\"BTTR.init seg=\" + segment);\n        stack = new Frame[0];\n        \n        // Used to hold seek by TermState, or cached seek\n        staticFrame = new Frame(-1);\n\n        if (index == null) {\n          fstReader = null;\n        } else {\n          fstReader = index.getBytesReader();\n        }\n\n        // Init w/ root block; don't use index since it may\n        // not (and need not) have been loaded\n        for(int arcIdx=0;arcIdx<arcs.length;arcIdx++) {\n          arcs[arcIdx] = new FST.Arc<>();\n        }\n\n        currentFrame = staticFrame;\n        final FST.Arc<BytesRef> arc;\n        if (index != null) {\n          arc = index.getFirstArc(arcs[0]);\n          // Empty string prefix must have an output in the index!\n          assert arc.isFinal();\n        } else {\n          arc = null;\n        }\n        currentFrame = staticFrame;\n        //currentFrame = pushFrame(arc, rootCode, 0);\n        //currentFrame.loadBlock();\n        validIndexPrefix = 0;\n        // if (DEBUG) {\n        //   System.out.println(\"init frame state \" + currentFrame.ord);\n        //   printSeekState();\n        // }\n\n        //System.out.println();\n        // computeBlockStats().print(System.out);\n      }\n\n","sourceOld":"      public SegmentTermsEnum() throws IOException {\n        //if (DEBUG) System.out.println(\"BTTR.init seg=\" + segment);\n        stack = new Frame[0];\n        \n        // Used to hold seek by TermState, or cached seek\n        staticFrame = new Frame(-1);\n\n        if (index == null) {\n          fstReader = null;\n        } else {\n          fstReader = index.getBytesReader();\n        }\n\n        // Init w/ root block; don't use index since it may\n        // not (and need not) have been loaded\n        for(int arcIdx=0;arcIdx<arcs.length;arcIdx++) {\n          arcs[arcIdx] = new FST.Arc<>();\n        }\n\n        currentFrame = staticFrame;\n        final FST.Arc<BytesRef> arc;\n        if (index != null) {\n          arc = index.getFirstArc(arcs[0]);\n          // Empty string prefix must have an output in the index!\n          assert arc.isFinal();\n        } else {\n          arc = null;\n        }\n        currentFrame = staticFrame;\n        //currentFrame = pushFrame(arc, rootCode, 0);\n        //currentFrame.loadBlock();\n        validIndexPrefix = 0;\n        // if (DEBUG) {\n        //   System.out.println(\"init frame state \" + currentFrame.ord);\n        //   printSeekState();\n        // }\n\n        //System.out.println();\n        // computeBlockStats().print(System.out);\n      }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4d637064d608752565d4f9f41b2497dfdfdde50e","date":1400798123,"type":4,"author":"Michael McCandless","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/BlockTreeTermsReader.FieldReader.SegmentTermsEnum#SegmentTermsEnum().mjava","sourceNew":null,"sourceOld":"      public SegmentTermsEnum() throws IOException {\n        //if (DEBUG) System.out.println(\"BTTR.init seg=\" + segment);\n        stack = new Frame[0];\n        \n        // Used to hold seek by TermState, or cached seek\n        staticFrame = new Frame(-1);\n\n        if (index == null) {\n          fstReader = null;\n        } else {\n          fstReader = index.getBytesReader();\n        }\n\n        // Init w/ root block; don't use index since it may\n        // not (and need not) have been loaded\n        for(int arcIdx=0;arcIdx<arcs.length;arcIdx++) {\n          arcs[arcIdx] = new FST.Arc<>();\n        }\n\n        currentFrame = staticFrame;\n        final FST.Arc<BytesRef> arc;\n        if (index != null) {\n          arc = index.getFirstArc(arcs[0]);\n          // Empty string prefix must have an output in the index!\n          assert arc.isFinal();\n        } else {\n          arc = null;\n        }\n        currentFrame = staticFrame;\n        //currentFrame = pushFrame(arc, rootCode, 0);\n        //currentFrame.loadBlock();\n        validIndexPrefix = 0;\n        // if (DEBUG) {\n        //   System.out.println(\"init frame state \" + currentFrame.ord);\n        //   printSeekState();\n        // }\n\n        //System.out.println();\n        // computeBlockStats().print(System.out);\n      }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"634f330c54fd3f9f491d52036dc3f40b4f4d8934":["82557a475db3e0849171dc0be5b02e3ae0745ddb"],"82557a475db3e0849171dc0be5b02e3ae0745ddb":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"4d637064d608752565d4f9f41b2497dfdfdde50e":["634f330c54fd3f9f491d52036dc3f40b4f4d8934","5ad80176d91a6f70fe93880e43dfd697dc4e63ed"],"5ad80176d91a6f70fe93880e43dfd697dc4e63ed":["634f330c54fd3f9f491d52036dc3f40b4f4d8934"],"c4015cd39dff8d4dec562d909f9766debac53aa6":["3a119bbc8703c10faa329ec201c654b3a35a1e3e","82557a475db3e0849171dc0be5b02e3ae0745ddb"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["4d637064d608752565d4f9f41b2497dfdfdde50e"]},"commit2Childs":{"634f330c54fd3f9f491d52036dc3f40b4f4d8934":["4d637064d608752565d4f9f41b2497dfdfdde50e","5ad80176d91a6f70fe93880e43dfd697dc4e63ed"],"82557a475db3e0849171dc0be5b02e3ae0745ddb":["634f330c54fd3f9f491d52036dc3f40b4f4d8934","c4015cd39dff8d4dec562d909f9766debac53aa6"],"4d637064d608752565d4f9f41b2497dfdfdde50e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"5ad80176d91a6f70fe93880e43dfd697dc4e63ed":["4d637064d608752565d4f9f41b2497dfdfdde50e"],"c4015cd39dff8d4dec562d909f9766debac53aa6":[],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["82557a475db3e0849171dc0be5b02e3ae0745ddb","c4015cd39dff8d4dec562d909f9766debac53aa6"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["c4015cd39dff8d4dec562d909f9766debac53aa6","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}