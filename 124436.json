{"path":"src/test/org/apache/solr/core/TestConfig#testLib().mjava","commits":[{"id":"5dc524639edfdfa4edfb67ae889c2b6029f9314c","date":1255358511,"type":0,"author":"Yonik Seeley","isMerge":false,"pathNew":"src/test/org/apache/solr/core/TestConfig#testLib().mjava","pathOld":"/dev/null","sourceNew":"  public void testLib() throws IOException {\n    SolrResourceLoader loader = h.getCore().getResourceLoader();\n    InputStream data = null;\n    String[] expectedFiles = new String[] { \"empty-file-main-lib.txt\",\n            \"empty-file-a1.txt\",\n            \"empty-file-a2.txt\",\n            \"empty-file-b1.txt\",\n            \"empty-file-b2.txt\",\n            \"empty-file-c1.txt\" };\n    for (String f : expectedFiles) {\n      data = loader.openResource(f);\n      assertNotNull(\"Should have found file \" + f, data);\n      data.close();\n    }\n    String[] unexpectedFiles = new String[] { \"empty-file-c2.txt\",\n            \"empty-file-d2.txt\" };\n    for (String f : unexpectedFiles) {\n      data = null;\n      try {\n        data = loader.openResource(f);\n      } catch (Exception e) { /* :NOOP: (un)expected */ }\n      assertNull(\"should not have been able to find \" + f, data);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ad94625fb8d088209f46650c8097196fec67f00c","date":1453508319,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/src/test/org/apache/solr/core/TestConfig#testLib().mjava","pathOld":"src/test/org/apache/solr/core/TestConfig#testLib().mjava","sourceNew":"  public void testLib() throws IOException {\n    SolrResourceLoader loader = h.getCore().getResourceLoader();\n    InputStream data = null;\n    String[] expectedFiles = new String[] { \"empty-file-main-lib.txt\",\n            \"empty-file-a1.txt\",\n            \"empty-file-a2.txt\",\n            \"empty-file-b1.txt\",\n            \"empty-file-b2.txt\",\n            \"empty-file-c1.txt\" };\n    for (String f : expectedFiles) {\n      data = loader.openResource(f);\n      assertNotNull(\"Should have found file \" + f, data);\n      data.close();\n    }\n    String[] unexpectedFiles = new String[] { \"empty-file-c2.txt\",\n            \"empty-file-d2.txt\" };\n    for (String f : unexpectedFiles) {\n      data = null;\n      try {\n        data = loader.openResource(f);\n      } catch (Exception e) { /* :NOOP: (un)expected */ }\n      assertNull(\"should not have been able to find \" + f, data);\n    }\n  }\n\n","sourceOld":"  public void testLib() throws IOException {\n    SolrResourceLoader loader = h.getCore().getResourceLoader();\n    InputStream data = null;\n    String[] expectedFiles = new String[] { \"empty-file-main-lib.txt\",\n            \"empty-file-a1.txt\",\n            \"empty-file-a2.txt\",\n            \"empty-file-b1.txt\",\n            \"empty-file-b2.txt\",\n            \"empty-file-c1.txt\" };\n    for (String f : expectedFiles) {\n      data = loader.openResource(f);\n      assertNotNull(\"Should have found file \" + f, data);\n      data.close();\n    }\n    String[] unexpectedFiles = new String[] { \"empty-file-c2.txt\",\n            \"empty-file-d2.txt\" };\n    for (String f : unexpectedFiles) {\n      data = null;\n      try {\n        data = loader.openResource(f);\n      } catch (Exception e) { /* :NOOP: (un)expected */ }\n      assertNull(\"should not have been able to find \" + f, data);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"5dc524639edfdfa4edfb67ae889c2b6029f9314c":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"ad94625fb8d088209f46650c8097196fec67f00c":["5dc524639edfdfa4edfb67ae889c2b6029f9314c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["5dc524639edfdfa4edfb67ae889c2b6029f9314c"],"5dc524639edfdfa4edfb67ae889c2b6029f9314c":["ad94625fb8d088209f46650c8097196fec67f00c"],"ad94625fb8d088209f46650c8097196fec67f00c":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["ad94625fb8d088209f46650c8097196fec67f00c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"pathCommit":null}