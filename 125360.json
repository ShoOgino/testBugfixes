{"path":"contrib/gdata-server/src/hivemind/org/apache/lucene/gdata/hivemind/webservice/HessianSkeletonProviderImpl#getMappingFromPath(String).mjava","commits":[{"id":"c9e6f249a1c651e7f8209b0d01fcb968455f618f","date":1163415064,"type":0,"author":"Simon Willnauer","isMerge":false,"pathNew":"contrib/gdata-server/src/hivemind/org/apache/lucene/gdata/hivemind/webservice/HessianSkeletonProviderImpl#getMappingFromPath(String).mjava","pathOld":"/dev/null","sourceNew":"    /**\n     * The last part of the request URL is used to identify a configured service\n     * mapping.\n     * \n     * @param path -\n     *            the servletrequest path info\n     * @return - the corresponding HessianSkeleton\n     */\n    protected HessianSkeleton getMappingFromPath(String path) {\n        if (path.endsWith(\"/\"))\n            path = path.substring(0, path.length() - 1);\n        String requestedService = path.substring(path.lastIndexOf(\"/\") + 1);\n        HessianSkeleton retVal = this.skeletonCache.get(requestedService);\n        if (retVal == null) {\n            WebserviceMappingBean wsBean = this.mapping.get(requestedService);\n            if (wsBean == null)\n                throw new NoSuchServiceException();\n            if (!checkInterface(wsBean))\n                throw new RuntimeException(\n                        \"The configured webservice interface is not assignable from the corresponding service\");\n            retVal = new HessianSkeleton(wsBean.getServiceImpl(), wsBean\n                    .getServiceInterface());\n            /*\n             * rather create this service twice as synchronize the whole block\n             */\n            this.skeletonCache.putIfAbsent(requestedService, retVal);\n        }\n        return retVal;\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5824af871ba6863399636aa5989bfc0ef2ea448c","date":1166013128,"type":5,"author":"Simon Willnauer","isMerge":false,"pathNew":"contrib/gdata-server/src/hivemind/java/org/apache/lucene/gdata/hivemind/webservice/HessianSkeletonProviderImpl#getMappingFromPath(String).mjava","pathOld":"contrib/gdata-server/src/hivemind/org/apache/lucene/gdata/hivemind/webservice/HessianSkeletonProviderImpl#getMappingFromPath(String).mjava","sourceNew":"    /**\n     * The last part of the request URL is used to identify a configured service\n     * mapping.\n     * \n     * @param path -\n     *            the servletrequest path info\n     * @return - the corresponding HessianSkeleton\n     */\n    protected HessianSkeleton getMappingFromPath(String path) {\n        if (path.endsWith(\"/\"))\n            path = path.substring(0, path.length() - 1);\n        String requestedService = path.substring(path.lastIndexOf(\"/\") + 1);\n        HessianSkeleton retVal = this.skeletonCache.get(requestedService);\n        if (retVal == null) {\n            WebserviceMappingBean wsBean = this.mapping.get(requestedService);\n            if (wsBean == null)\n                throw new NoSuchServiceException();\n            if (!checkInterface(wsBean))\n                throw new RuntimeException(\n                        \"The configured webservice interface is not assignable from the corresponding service\");\n            retVal = new HessianSkeleton(wsBean.getServiceImpl(), wsBean\n                    .getServiceInterface());\n            /*\n             * rather create this service twice as synchronize the whole block\n             */\n            this.skeletonCache.putIfAbsent(requestedService, retVal);\n        }\n        return retVal;\n    }\n\n","sourceOld":"    /**\n     * The last part of the request URL is used to identify a configured service\n     * mapping.\n     * \n     * @param path -\n     *            the servletrequest path info\n     * @return - the corresponding HessianSkeleton\n     */\n    protected HessianSkeleton getMappingFromPath(String path) {\n        if (path.endsWith(\"/\"))\n            path = path.substring(0, path.length() - 1);\n        String requestedService = path.substring(path.lastIndexOf(\"/\") + 1);\n        HessianSkeleton retVal = this.skeletonCache.get(requestedService);\n        if (retVal == null) {\n            WebserviceMappingBean wsBean = this.mapping.get(requestedService);\n            if (wsBean == null)\n                throw new NoSuchServiceException();\n            if (!checkInterface(wsBean))\n                throw new RuntimeException(\n                        \"The configured webservice interface is not assignable from the corresponding service\");\n            retVal = new HessianSkeleton(wsBean.getServiceImpl(), wsBean\n                    .getServiceInterface());\n            /*\n             * rather create this service twice as synchronize the whole block\n             */\n            this.skeletonCache.putIfAbsent(requestedService, retVal);\n        }\n        return retVal;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"c9e6f249a1c651e7f8209b0d01fcb968455f618f":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"5824af871ba6863399636aa5989bfc0ef2ea448c":["c9e6f249a1c651e7f8209b0d01fcb968455f618f"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["5824af871ba6863399636aa5989bfc0ef2ea448c"]},"commit2Childs":{"c9e6f249a1c651e7f8209b0d01fcb968455f618f":["5824af871ba6863399636aa5989bfc0ef2ea448c"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c9e6f249a1c651e7f8209b0d01fcb968455f618f"],"5824af871ba6863399636aa5989bfc0ef2ea448c":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}