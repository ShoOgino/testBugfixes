{"path":"lucene/src/java/org/apache/lucene/codecs/lucene40/Lucene40PostingsReader.SegmentDocsEnumBase#advance(int).mjava","commits":[{"id":"a0ae5e3ed1232483b7b8a014f175a5fe43595982","date":1324062192,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/codecs/lucene40/Lucene40PostingsReader.SegmentDocsEnumBase#advance(int).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/lucene40/Lucene40PostingsReader.SegmentDocsEnumBase#advance(int).mjava","sourceNew":"    @Override\n    public final int advance(int target) throws IOException {\n      // last doc in our buffer is >= target, binary search + next()\n      if (++start < count && maxBufferedDocId >= target) {\n        if ((count-start) > 32) { // 32 seemed to be a sweetspot here so use binsearch if the pending results are a lot\n          start = binarySearch(count - 1, start, target, docs);\n          return nextDoc();\n        } else {\n          return linearScan(target);\n        }\n      }\n      \n      start = count; // buffer is consumed\n      \n      return doc = skipTo(target, liveDocs);\n    }\n\n","sourceOld":"    @Override\n    public final int advance(int target) throws IOException {\n      // last doc in our buffer is >= target, binary search + next()\n      if (++start < count && maxBufferedDocId >= target) {\n        if ((count-start) > 32) { // 32 seemed to be a sweetspot here so use binsearch if the pending results are a lot\n          start = binarySearch(count - 1, start, target, docs);\n          return nextDoc();\n        } else {\n          return linearScan(target);\n        }\n      }\n      \n      start = count; // buffer is consumed\n      \n      return doc = skipTo(target, liveDocs);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"31f025ae60076ae95274433f3fe8e6ace2857a87","date":1326669465,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/codecs/lucene40/Lucene40PostingsReader.SegmentDocsEnumBase#advance(int).mjava","pathOld":"lucene/src/java/org/apache/lucene/codecs/lucene40/Lucene40PostingsReader.SegmentDocsEnumBase#advance(int).mjava","sourceNew":"    @Override\n    public final int advance(int target) throws IOException {\n      // last doc in our buffer is >= target, binary search + next()\n      if (++start < count && maxBufferedDocId >= target) {\n        if ((count-start) > 32) { // 32 seemed to be a sweetspot here so use binsearch if the pending results are a lot\n          start = binarySearch(count - 1, start, target, docs);\n          return nextDoc();\n        } else {\n          return linearScan(target);\n        }\n      }\n      \n      start = count; // buffer is consumed\n      \n      return doc = skipTo(target);\n    }\n\n","sourceOld":"    @Override\n    public final int advance(int target) throws IOException {\n      // last doc in our buffer is >= target, binary search + next()\n      if (++start < count && maxBufferedDocId >= target) {\n        if ((count-start) > 32) { // 32 seemed to be a sweetspot here so use binsearch if the pending results are a lot\n          start = binarySearch(count - 1, start, target, docs);\n          return nextDoc();\n        } else {\n          return linearScan(target);\n        }\n      }\n      \n      start = count; // buffer is consumed\n      \n      return doc = skipTo(target, liveDocs);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":5,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/lucene40/Lucene40PostingsReader.SegmentDocsEnumBase#advance(int).mjava","pathOld":"lucene/src/java/org/apache/lucene/codecs/lucene40/Lucene40PostingsReader.SegmentDocsEnumBase#advance(int).mjava","sourceNew":"    @Override\n    public final int advance(int target) throws IOException {\n      // last doc in our buffer is >= target, binary search + next()\n      if (++start < count && maxBufferedDocId >= target) {\n        if ((count-start) > 32) { // 32 seemed to be a sweetspot here so use binsearch if the pending results are a lot\n          start = binarySearch(count - 1, start, target, docs);\n          return nextDoc();\n        } else {\n          return linearScan(target);\n        }\n      }\n      \n      start = count; // buffer is consumed\n      \n      return doc = skipTo(target);\n    }\n\n","sourceOld":"    @Override\n    public final int advance(int target) throws IOException {\n      // last doc in our buffer is >= target, binary search + next()\n      if (++start < count && maxBufferedDocId >= target) {\n        if ((count-start) > 32) { // 32 seemed to be a sweetspot here so use binsearch if the pending results are a lot\n          start = binarySearch(count - 1, start, target, docs);\n          return nextDoc();\n        } else {\n          return linearScan(target);\n        }\n      }\n      \n      start = count; // buffer is consumed\n      \n      return doc = skipTo(target);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["31f025ae60076ae95274433f3fe8e6ace2857a87"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a0ae5e3ed1232483b7b8a014f175a5fe43595982":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"31f025ae60076ae95274433f3fe8e6ace2857a87":["a0ae5e3ed1232483b7b8a014f175a5fe43595982"]},"commit2Childs":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["a0ae5e3ed1232483b7b8a014f175a5fe43595982"],"a0ae5e3ed1232483b7b8a014f175a5fe43595982":["31f025ae60076ae95274433f3fe8e6ace2857a87"],"31f025ae60076ae95274433f3fe8e6ace2857a87":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}