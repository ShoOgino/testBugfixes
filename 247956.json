{"path":"lucene/misc/src/java/org/apache/lucene/index/sorter/SortingMergePolicy#findForcedMerges(SegmentInfos,int,Map[SegmentCommitInfo,Boolean]).mjava","commits":[{"id":"73b0a97ef3bd519a5e43398ea9eabe6eed97f6b0","date":1383367127,"type":1,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/misc/src/java/org/apache/lucene/index/sorter/SortingMergePolicy#findForcedMerges(SegmentInfos,int,Map[SegmentCommitInfo,Boolean]).mjava","pathOld":"lucene/misc/src/java/org/apache/lucene/index/sorter/SortingMergePolicy#findForcedMerges(SegmentInfos,int,Map[SegmentInfoPerCommit,Boolean]).mjava","sourceNew":"  @Override\n  public MergeSpecification findForcedMerges(SegmentInfos segmentInfos,\n      int maxSegmentCount, Map<SegmentCommitInfo,Boolean> segmentsToMerge)\n      throws IOException {\n    return sortedMergeSpecification(in.findForcedMerges(segmentInfos, maxSegmentCount, segmentsToMerge));\n  }\n\n","sourceOld":"  @Override\n  public MergeSpecification findForcedMerges(SegmentInfos segmentInfos,\n      int maxSegmentCount, Map<SegmentInfoPerCommit,Boolean> segmentsToMerge)\n      throws IOException {\n    return sortedMergeSpecification(in.findForcedMerges(segmentInfos, maxSegmentCount, segmentsToMerge));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"027bee21e09164c9ee230395405076d1e0034b30","date":1401521821,"type":5,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/misc/src/java/org/apache/lucene/index/sorter/SortingMergePolicy#findForcedMerges(SegmentInfos,int,Map[SegmentCommitInfo,Boolean],IndexWriter).mjava","pathOld":"lucene/misc/src/java/org/apache/lucene/index/sorter/SortingMergePolicy#findForcedMerges(SegmentInfos,int,Map[SegmentCommitInfo,Boolean]).mjava","sourceNew":"  @Override\n  public MergeSpecification findForcedMerges(SegmentInfos segmentInfos,\n      int maxSegmentCount, Map<SegmentCommitInfo,Boolean> segmentsToMerge, IndexWriter writer)\n      throws IOException {\n    return sortedMergeSpecification(in.findForcedMerges(segmentInfos, maxSegmentCount, segmentsToMerge, writer));\n  }\n\n","sourceOld":"  @Override\n  public MergeSpecification findForcedMerges(SegmentInfos segmentInfos,\n      int maxSegmentCount, Map<SegmentCommitInfo,Boolean> segmentsToMerge)\n      throws IOException {\n    return sortedMergeSpecification(in.findForcedMerges(segmentInfos, maxSegmentCount, segmentsToMerge));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"73b0a97ef3bd519a5e43398ea9eabe6eed97f6b0":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"027bee21e09164c9ee230395405076d1e0034b30":["73b0a97ef3bd519a5e43398ea9eabe6eed97f6b0"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["027bee21e09164c9ee230395405076d1e0034b30"]},"commit2Childs":{"73b0a97ef3bd519a5e43398ea9eabe6eed97f6b0":["027bee21e09164c9ee230395405076d1e0034b30"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["73b0a97ef3bd519a5e43398ea9eabe6eed97f6b0"],"027bee21e09164c9ee230395405076d1e0034b30":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}