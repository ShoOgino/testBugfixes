{"path":"solr/core/src/test/org/apache/solr/cloud/CustomCollectionTest#testRouteFieldForImplicitRouter().mjava","commits":[{"id":"a4efd3fffdd7acd625bb88e455c8097e17f75735","date":1477647201,"type":0,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/CustomCollectionTest#testRouteFieldForImplicitRouter().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testRouteFieldForImplicitRouter() throws Exception {\n\n    int numShards = 4;\n    int replicationFactor = TestUtil.nextInt(random(), 0, 3) + 2;\n    int maxShardsPerNode = ((numShards * replicationFactor) / NODE_COUNT) + 1;\n    String shard_fld = \"shard_s\";\n\n    final String collection = \"withShardField\";\n\n    CollectionAdminRequest.createCollectionWithImplicitRouter(collection, \"conf\", \"a,b,c,d\", replicationFactor)\n        .setMaxShardsPerNode(maxShardsPerNode)\n        .setRouterField(shard_fld)\n        .process(cluster.getSolrClient());\n\n    new UpdateRequest()\n        .add(\"id\", \"6\", shard_fld, \"a\")\n        .add(\"id\", \"7\", shard_fld, \"a\")\n        .add(\"id\", \"8\", shard_fld, \"b\")\n        .commit(cluster.getSolrClient(), collection);\n\n    assertEquals(3, cluster.getSolrClient().query(collection, new SolrQuery(\"*:*\")).getResults().getNumFound());\n    assertEquals(1, cluster.getSolrClient().query(collection, new SolrQuery(\"*:*\").setParam(_ROUTE_, \"b\")).getResults().getNumFound());\n    assertEquals(2, cluster.getSolrClient().query(collection, new SolrQuery(\"*:*\").setParam(_ROUTE_, \"a\")).getResults().getNumFound());\n\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"59dce44d6a0b58c171de1d47ad8c0a75831f94fd","date":1477668573,"type":0,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/cloud/CustomCollectionTest#testRouteFieldForImplicitRouter().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testRouteFieldForImplicitRouter() throws Exception {\n\n    int numShards = 4;\n    int replicationFactor = TestUtil.nextInt(random(), 0, 3) + 2;\n    int maxShardsPerNode = ((numShards * replicationFactor) / NODE_COUNT) + 1;\n    String shard_fld = \"shard_s\";\n\n    final String collection = \"withShardField\";\n\n    CollectionAdminRequest.createCollectionWithImplicitRouter(collection, \"conf\", \"a,b,c,d\", replicationFactor)\n        .setMaxShardsPerNode(maxShardsPerNode)\n        .setRouterField(shard_fld)\n        .process(cluster.getSolrClient());\n\n    new UpdateRequest()\n        .add(\"id\", \"6\", shard_fld, \"a\")\n        .add(\"id\", \"7\", shard_fld, \"a\")\n        .add(\"id\", \"8\", shard_fld, \"b\")\n        .commit(cluster.getSolrClient(), collection);\n\n    assertEquals(3, cluster.getSolrClient().query(collection, new SolrQuery(\"*:*\")).getResults().getNumFound());\n    assertEquals(1, cluster.getSolrClient().query(collection, new SolrQuery(\"*:*\").setParam(_ROUTE_, \"b\")).getResults().getNumFound());\n    assertEquals(2, cluster.getSolrClient().query(collection, new SolrQuery(\"*:*\").setParam(_ROUTE_, \"a\")).getResults().getNumFound());\n\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6146c07c0dee1ae1e42926167acd127fed5ef59d","date":1516129420,"type":5,"author":"Varun Thacker","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/api/collections/CustomCollectionTest#testRouteFieldForImplicitRouter().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/CustomCollectionTest#testRouteFieldForImplicitRouter().mjava","sourceNew":"  @Test\n  public void testRouteFieldForImplicitRouter() throws Exception {\n\n    int numShards = 4;\n    int replicationFactor = TestUtil.nextInt(random(), 0, 3) + 2;\n    int maxShardsPerNode = ((numShards * replicationFactor) / NODE_COUNT) + 1;\n    String shard_fld = \"shard_s\";\n\n    final String collection = \"withShardField\";\n\n    CollectionAdminRequest.createCollectionWithImplicitRouter(collection, \"conf\", \"a,b,c,d\", replicationFactor)\n        .setMaxShardsPerNode(maxShardsPerNode)\n        .setRouterField(shard_fld)\n        .process(cluster.getSolrClient());\n\n    new UpdateRequest()\n        .add(\"id\", \"6\", shard_fld, \"a\")\n        .add(\"id\", \"7\", shard_fld, \"a\")\n        .add(\"id\", \"8\", shard_fld, \"b\")\n        .commit(cluster.getSolrClient(), collection);\n\n    assertEquals(3, cluster.getSolrClient().query(collection, new SolrQuery(\"*:*\")).getResults().getNumFound());\n    assertEquals(1, cluster.getSolrClient().query(collection, new SolrQuery(\"*:*\").setParam(_ROUTE_, \"b\")).getResults().getNumFound());\n    assertEquals(2, cluster.getSolrClient().query(collection, new SolrQuery(\"*:*\").setParam(_ROUTE_, \"a\")).getResults().getNumFound());\n\n  }\n\n","sourceOld":"  @Test\n  public void testRouteFieldForImplicitRouter() throws Exception {\n\n    int numShards = 4;\n    int replicationFactor = TestUtil.nextInt(random(), 0, 3) + 2;\n    int maxShardsPerNode = ((numShards * replicationFactor) / NODE_COUNT) + 1;\n    String shard_fld = \"shard_s\";\n\n    final String collection = \"withShardField\";\n\n    CollectionAdminRequest.createCollectionWithImplicitRouter(collection, \"conf\", \"a,b,c,d\", replicationFactor)\n        .setMaxShardsPerNode(maxShardsPerNode)\n        .setRouterField(shard_fld)\n        .process(cluster.getSolrClient());\n\n    new UpdateRequest()\n        .add(\"id\", \"6\", shard_fld, \"a\")\n        .add(\"id\", \"7\", shard_fld, \"a\")\n        .add(\"id\", \"8\", shard_fld, \"b\")\n        .commit(cluster.getSolrClient(), collection);\n\n    assertEquals(3, cluster.getSolrClient().query(collection, new SolrQuery(\"*:*\")).getResults().getNumFound());\n    assertEquals(1, cluster.getSolrClient().query(collection, new SolrQuery(\"*:*\").setParam(_ROUTE_, \"b\")).getResults().getNumFound());\n    assertEquals(2, cluster.getSolrClient().query(collection, new SolrQuery(\"*:*\").setParam(_ROUTE_, \"a\")).getResults().getNumFound());\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b94236357aaa22b76c10629851fe4e376e0cea82","date":1516710914,"type":5,"author":"Karl Wright","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/cloud/api/collections/CustomCollectionTest#testRouteFieldForImplicitRouter().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/CustomCollectionTest#testRouteFieldForImplicitRouter().mjava","sourceNew":"  @Test\n  public void testRouteFieldForImplicitRouter() throws Exception {\n\n    int numShards = 4;\n    int replicationFactor = TestUtil.nextInt(random(), 0, 3) + 2;\n    int maxShardsPerNode = ((numShards * replicationFactor) / NODE_COUNT) + 1;\n    String shard_fld = \"shard_s\";\n\n    final String collection = \"withShardField\";\n\n    CollectionAdminRequest.createCollectionWithImplicitRouter(collection, \"conf\", \"a,b,c,d\", replicationFactor)\n        .setMaxShardsPerNode(maxShardsPerNode)\n        .setRouterField(shard_fld)\n        .process(cluster.getSolrClient());\n\n    new UpdateRequest()\n        .add(\"id\", \"6\", shard_fld, \"a\")\n        .add(\"id\", \"7\", shard_fld, \"a\")\n        .add(\"id\", \"8\", shard_fld, \"b\")\n        .commit(cluster.getSolrClient(), collection);\n\n    assertEquals(3, cluster.getSolrClient().query(collection, new SolrQuery(\"*:*\")).getResults().getNumFound());\n    assertEquals(1, cluster.getSolrClient().query(collection, new SolrQuery(\"*:*\").setParam(_ROUTE_, \"b\")).getResults().getNumFound());\n    assertEquals(2, cluster.getSolrClient().query(collection, new SolrQuery(\"*:*\").setParam(_ROUTE_, \"a\")).getResults().getNumFound());\n\n  }\n\n","sourceOld":"  @Test\n  public void testRouteFieldForImplicitRouter() throws Exception {\n\n    int numShards = 4;\n    int replicationFactor = TestUtil.nextInt(random(), 0, 3) + 2;\n    int maxShardsPerNode = ((numShards * replicationFactor) / NODE_COUNT) + 1;\n    String shard_fld = \"shard_s\";\n\n    final String collection = \"withShardField\";\n\n    CollectionAdminRequest.createCollectionWithImplicitRouter(collection, \"conf\", \"a,b,c,d\", replicationFactor)\n        .setMaxShardsPerNode(maxShardsPerNode)\n        .setRouterField(shard_fld)\n        .process(cluster.getSolrClient());\n\n    new UpdateRequest()\n        .add(\"id\", \"6\", shard_fld, \"a\")\n        .add(\"id\", \"7\", shard_fld, \"a\")\n        .add(\"id\", \"8\", shard_fld, \"b\")\n        .commit(cluster.getSolrClient(), collection);\n\n    assertEquals(3, cluster.getSolrClient().query(collection, new SolrQuery(\"*:*\")).getResults().getNumFound());\n    assertEquals(1, cluster.getSolrClient().query(collection, new SolrQuery(\"*:*\").setParam(_ROUTE_, \"b\")).getResults().getNumFound());\n    assertEquals(2, cluster.getSolrClient().query(collection, new SolrQuery(\"*:*\").setParam(_ROUTE_, \"a\")).getResults().getNumFound());\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a4efd3fffdd7acd625bb88e455c8097e17f75735":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"b94236357aaa22b76c10629851fe4e376e0cea82":["a4efd3fffdd7acd625bb88e455c8097e17f75735","6146c07c0dee1ae1e42926167acd127fed5ef59d"],"59dce44d6a0b58c171de1d47ad8c0a75831f94fd":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","a4efd3fffdd7acd625bb88e455c8097e17f75735"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"6146c07c0dee1ae1e42926167acd127fed5ef59d":["a4efd3fffdd7acd625bb88e455c8097e17f75735"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b94236357aaa22b76c10629851fe4e376e0cea82"]},"commit2Childs":{"a4efd3fffdd7acd625bb88e455c8097e17f75735":["b94236357aaa22b76c10629851fe4e376e0cea82","59dce44d6a0b58c171de1d47ad8c0a75831f94fd","6146c07c0dee1ae1e42926167acd127fed5ef59d"],"b94236357aaa22b76c10629851fe4e376e0cea82":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"59dce44d6a0b58c171de1d47ad8c0a75831f94fd":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["a4efd3fffdd7acd625bb88e455c8097e17f75735","59dce44d6a0b58c171de1d47ad8c0a75831f94fd"],"6146c07c0dee1ae1e42926167acd127fed5ef59d":["b94236357aaa22b76c10629851fe4e376e0cea82"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["59dce44d6a0b58c171de1d47ad8c0a75831f94fd","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}