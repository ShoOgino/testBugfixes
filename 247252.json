{"path":"src/java/org/apache/solr/core/SolrDeletionPolicy#init(NamedList).mjava","commits":[{"id":"97fc5a00245e9b31c118c53df88b1376237ea87b","date":1222659461,"type":0,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"src/java/org/apache/solr/core/SolrDeletionPolicy#init(NamedList).mjava","pathOld":"/dev/null","sourceNew":"  public void init(NamedList args) {\n    String keepOptimizedOnlyString = (String) args.get(\"keepOptimizedOnly\");\n    String maxCommitsToKeepString = (String) args.get(\"maxCommitsToKeep\");\n    String maxCommitAgeString = (String) args.get(\"maxCommitAge\");\n    if (keepOptimizedOnlyString != null && keepOptimizedOnlyString.trim().length() > 0)\n      keepOptimizedOnly = Boolean.parseBoolean(keepOptimizedOnlyString);\n    if (maxCommitsToKeepString != null && maxCommitsToKeepString.trim().length() > 0)\n      maxCommitsToKeep = Integer.parseInt(maxCommitsToKeepString);\n    if (maxCommitAgeString != null && maxCommitAgeString.trim().length() > 0)\n      maxCommitAge = \"-\" + maxCommitAgeString;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7cdac6591b64f43f87663e70518d79dd137454b4","date":1254069460,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"src/java/org/apache/solr/core/SolrDeletionPolicy#init(NamedList).mjava","pathOld":"src/java/org/apache/solr/core/SolrDeletionPolicy#init(NamedList).mjava","sourceNew":"  public void init(NamedList args) {\n    String keepOptimizedOnlyString = (String) args.get(\"keepOptimizedOnly\");\n    String maxCommitsToKeepString = (String) args.get(\"maxCommitsToKeep\");\n    String maxOptimizedCommitsToKeepString = (String) args.get(\"maxOptimizedCommitsToKeep\");\n    String maxCommitAgeString = (String) args.get(\"maxCommitAge\");\n\n    if (maxCommitsToKeepString != null && maxCommitsToKeepString.trim().length() > 0)\n      maxCommitsToKeep = Integer.parseInt(maxCommitsToKeepString);\n    if (maxCommitAgeString != null && maxCommitAgeString.trim().length() > 0)\n      maxCommitAge = \"-\" + maxCommitAgeString;\n    if (maxOptimizedCommitsToKeepString != null && maxOptimizedCommitsToKeepString.trim().length() > 0) {\n      maxOptimizedCommitsToKeep = Integer.parseInt(maxOptimizedCommitsToKeepString);\n    }\n    \n    // legacy support\n    if (keepOptimizedOnlyString != null && keepOptimizedOnlyString.trim().length() > 0) {\n      boolean keepOptimizedOnly = Boolean.parseBoolean(keepOptimizedOnlyString);\n      if (keepOptimizedOnly) {\n        maxOptimizedCommitsToKeep = Math.max(maxOptimizedCommitsToKeep, maxCommitsToKeep);\n        maxCommitsToKeep=0;\n      }\n    }\n  }\n\n","sourceOld":"  public void init(NamedList args) {\n    String keepOptimizedOnlyString = (String) args.get(\"keepOptimizedOnly\");\n    String maxCommitsToKeepString = (String) args.get(\"maxCommitsToKeep\");\n    String maxCommitAgeString = (String) args.get(\"maxCommitAge\");\n    if (keepOptimizedOnlyString != null && keepOptimizedOnlyString.trim().length() > 0)\n      keepOptimizedOnly = Boolean.parseBoolean(keepOptimizedOnlyString);\n    if (maxCommitsToKeepString != null && maxCommitsToKeepString.trim().length() > 0)\n      maxCommitsToKeep = Integer.parseInt(maxCommitsToKeepString);\n    if (maxCommitAgeString != null && maxCommitAgeString.trim().length() > 0)\n      maxCommitAge = \"-\" + maxCommitAgeString;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ad94625fb8d088209f46650c8097196fec67f00c","date":1453508319,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/src/java/org/apache/solr/core/SolrDeletionPolicy#init(NamedList).mjava","pathOld":"src/java/org/apache/solr/core/SolrDeletionPolicy#init(NamedList).mjava","sourceNew":"  public void init(NamedList args) {\n    String keepOptimizedOnlyString = (String) args.get(\"keepOptimizedOnly\");\n    String maxCommitsToKeepString = (String) args.get(\"maxCommitsToKeep\");\n    String maxOptimizedCommitsToKeepString = (String) args.get(\"maxOptimizedCommitsToKeep\");\n    String maxCommitAgeString = (String) args.get(\"maxCommitAge\");\n\n    if (maxCommitsToKeepString != null && maxCommitsToKeepString.trim().length() > 0)\n      maxCommitsToKeep = Integer.parseInt(maxCommitsToKeepString);\n    if (maxCommitAgeString != null && maxCommitAgeString.trim().length() > 0)\n      maxCommitAge = \"-\" + maxCommitAgeString;\n    if (maxOptimizedCommitsToKeepString != null && maxOptimizedCommitsToKeepString.trim().length() > 0) {\n      maxOptimizedCommitsToKeep = Integer.parseInt(maxOptimizedCommitsToKeepString);\n    }\n    \n    // legacy support\n    if (keepOptimizedOnlyString != null && keepOptimizedOnlyString.trim().length() > 0) {\n      boolean keepOptimizedOnly = Boolean.parseBoolean(keepOptimizedOnlyString);\n      if (keepOptimizedOnly) {\n        maxOptimizedCommitsToKeep = Math.max(maxOptimizedCommitsToKeep, maxCommitsToKeep);\n        maxCommitsToKeep=0;\n      }\n    }\n  }\n\n","sourceOld":"  public void init(NamedList args) {\n    String keepOptimizedOnlyString = (String) args.get(\"keepOptimizedOnly\");\n    String maxCommitsToKeepString = (String) args.get(\"maxCommitsToKeep\");\n    String maxOptimizedCommitsToKeepString = (String) args.get(\"maxOptimizedCommitsToKeep\");\n    String maxCommitAgeString = (String) args.get(\"maxCommitAge\");\n\n    if (maxCommitsToKeepString != null && maxCommitsToKeepString.trim().length() > 0)\n      maxCommitsToKeep = Integer.parseInt(maxCommitsToKeepString);\n    if (maxCommitAgeString != null && maxCommitAgeString.trim().length() > 0)\n      maxCommitAge = \"-\" + maxCommitAgeString;\n    if (maxOptimizedCommitsToKeepString != null && maxOptimizedCommitsToKeepString.trim().length() > 0) {\n      maxOptimizedCommitsToKeep = Integer.parseInt(maxOptimizedCommitsToKeepString);\n    }\n    \n    // legacy support\n    if (keepOptimizedOnlyString != null && keepOptimizedOnlyString.trim().length() > 0) {\n      boolean keepOptimizedOnly = Boolean.parseBoolean(keepOptimizedOnlyString);\n      if (keepOptimizedOnly) {\n        maxOptimizedCommitsToKeep = Math.max(maxOptimizedCommitsToKeep, maxCommitsToKeep);\n        maxCommitsToKeep=0;\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"97fc5a00245e9b31c118c53df88b1376237ea87b":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"ad94625fb8d088209f46650c8097196fec67f00c":["7cdac6591b64f43f87663e70518d79dd137454b4"],"7cdac6591b64f43f87663e70518d79dd137454b4":["97fc5a00245e9b31c118c53df88b1376237ea87b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"97fc5a00245e9b31c118c53df88b1376237ea87b":["7cdac6591b64f43f87663e70518d79dd137454b4"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["97fc5a00245e9b31c118c53df88b1376237ea87b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"ad94625fb8d088209f46650c8097196fec67f00c":[],"7cdac6591b64f43f87663e70518d79dd137454b4":["ad94625fb8d088209f46650c8097196fec67f00c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["ad94625fb8d088209f46650c8097196fec67f00c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b","a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}