{"path":"solr/core/src/test/org/apache/solr/request/SmileWriterTest#sampleDoc(Random,int).mjava","commits":[{"id":"be73df8ac65c8f1ebef4eed2c0bd3a3b8167e235","date":1435150219,"type":0,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/request/SmileWriterTest#sampleDoc(Random,int).mjava","pathOld":"/dev/null","sourceNew":"  public static SolrDocument sampleDoc(Random r, int bufnum) {\n    SolrDocument sdoc = new SolrDocument();\n    sdoc.put(\"id\", \"my_id_\" + bufnum);\n    sdoc.put(\"author\", str(r, 10 + r.nextInt(10)));\n    sdoc.put(\"address\", str(r, 20 + r.nextInt(20)));\n    sdoc.put(\"license\", str(r, 10));\n    sdoc.put(\"title\", str(r, 5 + r.nextInt(10)));\n    sdoc.put(\"title_bin\", str(r, 5 + r.nextInt(10)).getBytes(StandardCharsets.UTF_8));\n    sdoc.put(\"modified_dt\", r.nextInt(1000000));\n    sdoc.put(\"creation_dt\", r.nextInt(1000000));\n    sdoc.put(\"birthdate_dt\", r.nextInt(1000000));\n    sdoc.put(\"clean\", r.nextBoolean());\n    sdoc.put(\"dirty\", r.nextBoolean());\n    sdoc.put(\"employed\", r.nextBoolean());\n    sdoc.put(\"priority\", r.nextInt(100));\n    sdoc.put(\"dependents\", r.nextInt(6));\n    sdoc.put(\"level\", r.nextInt(101));\n    sdoc.put(\"education_level\", r.nextInt(10));\n    // higher level of reuse for string values\n    sdoc.put(\"state\", \"S\"+r.nextInt(50));\n    sdoc.put(\"country\", \"Country\"+r.nextInt(20));\n    sdoc.put(\"some_boolean\", \"\"+r.nextBoolean());\n    sdoc.put(\"another_boolean\", \"\"+r.nextBoolean());\n    return sdoc;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b564b6c464f1c4b1f8e676b2b9b1558c34634b3a","date":1474893506,"type":4,"author":"Christine Poerschke","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/core/src/test/org/apache/solr/request/SmileWriterTest#sampleDoc(Random,int).mjava","sourceNew":null,"sourceOld":"  public static SolrDocument sampleDoc(Random r, int bufnum) {\n    SolrDocument sdoc = new SolrDocument();\n    sdoc.put(\"id\", \"my_id_\" + bufnum);\n    sdoc.put(\"author\", str(r, 10 + r.nextInt(10)));\n    sdoc.put(\"address\", str(r, 20 + r.nextInt(20)));\n    sdoc.put(\"license\", str(r, 10));\n    sdoc.put(\"title\", str(r, 5 + r.nextInt(10)));\n    sdoc.put(\"title_bin\", str(r, 5 + r.nextInt(10)).getBytes(StandardCharsets.UTF_8));\n    sdoc.put(\"modified_dt\", r.nextInt(1000000));\n    sdoc.put(\"creation_dt\", r.nextInt(1000000));\n    sdoc.put(\"birthdate_dt\", r.nextInt(1000000));\n    sdoc.put(\"clean\", r.nextBoolean());\n    sdoc.put(\"dirty\", r.nextBoolean());\n    sdoc.put(\"employed\", r.nextBoolean());\n    sdoc.put(\"priority\", r.nextInt(100));\n    sdoc.put(\"dependents\", r.nextInt(6));\n    sdoc.put(\"level\", r.nextInt(101));\n    sdoc.put(\"education_level\", r.nextInt(10));\n    // higher level of reuse for string values\n    sdoc.put(\"state\", \"S\"+r.nextInt(50));\n    sdoc.put(\"country\", \"Country\"+r.nextInt(20));\n    sdoc.put(\"some_boolean\", \"\"+r.nextBoolean());\n    sdoc.put(\"another_boolean\", \"\"+r.nextBoolean());\n    return sdoc;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"17e5da53e4e5bd659e22add9bba1cfa222e7e30d","date":1475435902,"type":5,"author":"Karl Wright","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/response/SmileWriterTest#sampleDoc(Random,int).mjava","pathOld":"solr/core/src/test/org/apache/solr/request/SmileWriterTest#sampleDoc(Random,int).mjava","sourceNew":"  public static SolrDocument sampleDoc(Random r, int bufnum) {\n    SolrDocument sdoc = new SolrDocument();\n    sdoc.put(\"id\", \"my_id_\" + bufnum);\n    sdoc.put(\"author\", str(r, 10 + r.nextInt(10)));\n    sdoc.put(\"address\", str(r, 20 + r.nextInt(20)));\n    sdoc.put(\"license\", str(r, 10));\n    sdoc.put(\"title\", str(r, 5 + r.nextInt(10)));\n    sdoc.put(\"title_bin\", str(r, 5 + r.nextInt(10)).getBytes(StandardCharsets.UTF_8));\n    sdoc.put(\"modified_dt\", r.nextInt(1000000));\n    sdoc.put(\"creation_dt\", r.nextInt(1000000));\n    sdoc.put(\"birthdate_dt\", r.nextInt(1000000));\n    sdoc.put(\"clean\", r.nextBoolean());\n    sdoc.put(\"dirty\", r.nextBoolean());\n    sdoc.put(\"employed\", r.nextBoolean());\n    sdoc.put(\"priority\", r.nextInt(100));\n    sdoc.put(\"dependents\", r.nextInt(6));\n    sdoc.put(\"level\", r.nextInt(101));\n    sdoc.put(\"education_level\", r.nextInt(10));\n    // higher level of reuse for string values\n    sdoc.put(\"state\", \"S\"+r.nextInt(50));\n    sdoc.put(\"country\", \"Country\"+r.nextInt(20));\n    sdoc.put(\"some_boolean\", \"\"+r.nextBoolean());\n    sdoc.put(\"another_boolean\", \"\"+r.nextBoolean());\n    return sdoc;\n  }\n\n","sourceOld":"  public static SolrDocument sampleDoc(Random r, int bufnum) {\n    SolrDocument sdoc = new SolrDocument();\n    sdoc.put(\"id\", \"my_id_\" + bufnum);\n    sdoc.put(\"author\", str(r, 10 + r.nextInt(10)));\n    sdoc.put(\"address\", str(r, 20 + r.nextInt(20)));\n    sdoc.put(\"license\", str(r, 10));\n    sdoc.put(\"title\", str(r, 5 + r.nextInt(10)));\n    sdoc.put(\"title_bin\", str(r, 5 + r.nextInt(10)).getBytes(StandardCharsets.UTF_8));\n    sdoc.put(\"modified_dt\", r.nextInt(1000000));\n    sdoc.put(\"creation_dt\", r.nextInt(1000000));\n    sdoc.put(\"birthdate_dt\", r.nextInt(1000000));\n    sdoc.put(\"clean\", r.nextBoolean());\n    sdoc.put(\"dirty\", r.nextBoolean());\n    sdoc.put(\"employed\", r.nextBoolean());\n    sdoc.put(\"priority\", r.nextInt(100));\n    sdoc.put(\"dependents\", r.nextInt(6));\n    sdoc.put(\"level\", r.nextInt(101));\n    sdoc.put(\"education_level\", r.nextInt(10));\n    // higher level of reuse for string values\n    sdoc.put(\"state\", \"S\"+r.nextInt(50));\n    sdoc.put(\"country\", \"Country\"+r.nextInt(20));\n    sdoc.put(\"some_boolean\", \"\"+r.nextBoolean());\n    sdoc.put(\"another_boolean\", \"\"+r.nextBoolean());\n    return sdoc;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":5,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/response/SmileWriterTest#sampleDoc(Random,int).mjava","pathOld":"solr/core/src/test/org/apache/solr/request/SmileWriterTest#sampleDoc(Random,int).mjava","sourceNew":"  public static SolrDocument sampleDoc(Random r, int bufnum) {\n    SolrDocument sdoc = new SolrDocument();\n    sdoc.put(\"id\", \"my_id_\" + bufnum);\n    sdoc.put(\"author\", str(r, 10 + r.nextInt(10)));\n    sdoc.put(\"address\", str(r, 20 + r.nextInt(20)));\n    sdoc.put(\"license\", str(r, 10));\n    sdoc.put(\"title\", str(r, 5 + r.nextInt(10)));\n    sdoc.put(\"title_bin\", str(r, 5 + r.nextInt(10)).getBytes(StandardCharsets.UTF_8));\n    sdoc.put(\"modified_dt\", r.nextInt(1000000));\n    sdoc.put(\"creation_dt\", r.nextInt(1000000));\n    sdoc.put(\"birthdate_dt\", r.nextInt(1000000));\n    sdoc.put(\"clean\", r.nextBoolean());\n    sdoc.put(\"dirty\", r.nextBoolean());\n    sdoc.put(\"employed\", r.nextBoolean());\n    sdoc.put(\"priority\", r.nextInt(100));\n    sdoc.put(\"dependents\", r.nextInt(6));\n    sdoc.put(\"level\", r.nextInt(101));\n    sdoc.put(\"education_level\", r.nextInt(10));\n    // higher level of reuse for string values\n    sdoc.put(\"state\", \"S\"+r.nextInt(50));\n    sdoc.put(\"country\", \"Country\"+r.nextInt(20));\n    sdoc.put(\"some_boolean\", \"\"+r.nextBoolean());\n    sdoc.put(\"another_boolean\", \"\"+r.nextBoolean());\n    return sdoc;\n  }\n\n","sourceOld":"  public static SolrDocument sampleDoc(Random r, int bufnum) {\n    SolrDocument sdoc = new SolrDocument();\n    sdoc.put(\"id\", \"my_id_\" + bufnum);\n    sdoc.put(\"author\", str(r, 10 + r.nextInt(10)));\n    sdoc.put(\"address\", str(r, 20 + r.nextInt(20)));\n    sdoc.put(\"license\", str(r, 10));\n    sdoc.put(\"title\", str(r, 5 + r.nextInt(10)));\n    sdoc.put(\"title_bin\", str(r, 5 + r.nextInt(10)).getBytes(StandardCharsets.UTF_8));\n    sdoc.put(\"modified_dt\", r.nextInt(1000000));\n    sdoc.put(\"creation_dt\", r.nextInt(1000000));\n    sdoc.put(\"birthdate_dt\", r.nextInt(1000000));\n    sdoc.put(\"clean\", r.nextBoolean());\n    sdoc.put(\"dirty\", r.nextBoolean());\n    sdoc.put(\"employed\", r.nextBoolean());\n    sdoc.put(\"priority\", r.nextInt(100));\n    sdoc.put(\"dependents\", r.nextInt(6));\n    sdoc.put(\"level\", r.nextInt(101));\n    sdoc.put(\"education_level\", r.nextInt(10));\n    // higher level of reuse for string values\n    sdoc.put(\"state\", \"S\"+r.nextInt(50));\n    sdoc.put(\"country\", \"Country\"+r.nextInt(20));\n    sdoc.put(\"some_boolean\", \"\"+r.nextBoolean());\n    sdoc.put(\"another_boolean\", \"\"+r.nextBoolean());\n    return sdoc;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b564b6c464f1c4b1f8e676b2b9b1558c34634b3a":["be73df8ac65c8f1ebef4eed2c0bd3a3b8167e235"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"17e5da53e4e5bd659e22add9bba1cfa222e7e30d":["be73df8ac65c8f1ebef4eed2c0bd3a3b8167e235","b564b6c464f1c4b1f8e676b2b9b1558c34634b3a"],"be73df8ac65c8f1ebef4eed2c0bd3a3b8167e235":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["be73df8ac65c8f1ebef4eed2c0bd3a3b8167e235","17e5da53e4e5bd659e22add9bba1cfa222e7e30d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["17e5da53e4e5bd659e22add9bba1cfa222e7e30d"]},"commit2Childs":{"b564b6c464f1c4b1f8e676b2b9b1558c34634b3a":["17e5da53e4e5bd659e22add9bba1cfa222e7e30d"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["be73df8ac65c8f1ebef4eed2c0bd3a3b8167e235"],"17e5da53e4e5bd659e22add9bba1cfa222e7e30d":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"be73df8ac65c8f1ebef4eed2c0bd3a3b8167e235":["b564b6c464f1c4b1f8e676b2b9b1558c34634b3a","17e5da53e4e5bd659e22add9bba1cfa222e7e30d","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}