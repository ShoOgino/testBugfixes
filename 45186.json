{"path":"solr/core/src/java/org/apache/solr/util/hll/HLL#initializeStorage(HLLType).mjava","commits":[{"id":"6d8714f9ceaaff94f0968d1c2d037978c3fde569","date":1437042727,"type":0,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/util/hll/HLL#initializeStorage(HLLType).mjava","pathOld":"/dev/null","sourceNew":"    // ------------------------------------------------------------------------\n    // Storage helper\n    /**\n     * Initializes storage for the specified {@link HLLType} and changes the\n     * instance's {@link #type}.\n     *\n     * @param type the {@link HLLType} to initialize storage for. This cannot be\n     *        <code>null</code> and must be an instantiable type.\n     */\n    private void initializeStorage(final HLLType type) {\n        this.type = type;\n        switch(type) {\n            case EMPTY:\n                // nothing to be done\n                break;\n            case EXPLICIT:\n                this.explicitStorage = new LongOpenHashSet();\n                break;\n            case SPARSE:\n                this.sparseProbabilisticStorage = new IntByteOpenHashMap();\n                break;\n            case FULL:\n                this.probabilisticStorage = new BitVector(regwidth, m);\n                break;\n            default:\n                throw new RuntimeException(\"Unsupported HLL type \" + type);\n        }\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3b5ee4c66244bdfcc4796a114519d47701b2c026","date":1437132013,"type":0,"author":"Dawid Weiss","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/util/hll/HLL#initializeStorage(HLLType).mjava","pathOld":"/dev/null","sourceNew":"    // ------------------------------------------------------------------------\n    // Storage helper\n    /**\n     * Initializes storage for the specified {@link HLLType} and changes the\n     * instance's {@link #type}.\n     *\n     * @param type the {@link HLLType} to initialize storage for. This cannot be\n     *        <code>null</code> and must be an instantiable type.\n     */\n    private void initializeStorage(final HLLType type) {\n        this.type = type;\n        switch(type) {\n            case EMPTY:\n                // nothing to be done\n                break;\n            case EXPLICIT:\n                this.explicitStorage = new LongOpenHashSet();\n                break;\n            case SPARSE:\n                this.sparseProbabilisticStorage = new IntByteOpenHashMap();\n                break;\n            case FULL:\n                this.probabilisticStorage = new BitVector(regwidth, m);\n                break;\n            default:\n                throw new RuntimeException(\"Unsupported HLL type \" + type);\n        }\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1fcee2c3acd9aa64a73a3b441b3f6cb492af0b87","date":1440409984,"type":3,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/util/hll/HLL#initializeStorage(HLLType).mjava","pathOld":"solr/core/src/java/org/apache/solr/util/hll/HLL#initializeStorage(HLLType).mjava","sourceNew":"    // ------------------------------------------------------------------------\n    // Storage helper\n    /**\n     * Initializes storage for the specified {@link HLLType} and changes the\n     * instance's {@link #type}.\n     *\n     * @param type the {@link HLLType} to initialize storage for. This cannot be\n     *        <code>null</code> and must be an instantiable type.\n     */\n    private void initializeStorage(final HLLType type) {\n        this.type = type;\n        switch(type) {\n            case EMPTY:\n                // nothing to be done\n                break;\n            case EXPLICIT:\n                this.explicitStorage = new LongHashSet();\n                break;\n            case SPARSE:\n                this.sparseProbabilisticStorage = new IntByteHashMap();\n                break;\n            case FULL:\n                this.probabilisticStorage = new BitVector(regwidth, m);\n                break;\n            default:\n                throw new RuntimeException(\"Unsupported HLL type \" + type);\n        }\n    }\n\n","sourceOld":"    // ------------------------------------------------------------------------\n    // Storage helper\n    /**\n     * Initializes storage for the specified {@link HLLType} and changes the\n     * instance's {@link #type}.\n     *\n     * @param type the {@link HLLType} to initialize storage for. This cannot be\n     *        <code>null</code> and must be an instantiable type.\n     */\n    private void initializeStorage(final HLLType type) {\n        this.type = type;\n        switch(type) {\n            case EMPTY:\n                // nothing to be done\n                break;\n            case EXPLICIT:\n                this.explicitStorage = new LongOpenHashSet();\n                break;\n            case SPARSE:\n                this.sparseProbabilisticStorage = new IntByteOpenHashMap();\n                break;\n            case FULL:\n                this.probabilisticStorage = new BitVector(regwidth, m);\n                break;\n            default:\n                throw new RuntimeException(\"Unsupported HLL type \" + type);\n        }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3b5ee4c66244bdfcc4796a114519d47701b2c026":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","6d8714f9ceaaff94f0968d1c2d037978c3fde569"],"1fcee2c3acd9aa64a73a3b441b3f6cb492af0b87":["3b5ee4c66244bdfcc4796a114519d47701b2c026"],"6d8714f9ceaaff94f0968d1c2d037978c3fde569":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["1fcee2c3acd9aa64a73a3b441b3f6cb492af0b87"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3b5ee4c66244bdfcc4796a114519d47701b2c026","6d8714f9ceaaff94f0968d1c2d037978c3fde569"],"3b5ee4c66244bdfcc4796a114519d47701b2c026":["1fcee2c3acd9aa64a73a3b441b3f6cb492af0b87"],"6d8714f9ceaaff94f0968d1c2d037978c3fde569":["3b5ee4c66244bdfcc4796a114519d47701b2c026"],"1fcee2c3acd9aa64a73a3b441b3f6cb492af0b87":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}