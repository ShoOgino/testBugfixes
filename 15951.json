{"path":"lucene/contrib/spatial/src/java/org/apache/lucene/spatial/tier/projections/CartesianTierPlotter#setTierVerticalPosDivider().mjava","commits":[{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/contrib/spatial/src/java/org/apache/lucene/spatial/tier/projections/CartesianTierPlotter#setTierVerticalPosDivider().mjava","pathOld":"contrib/spatial/src/java/org/apache/lucene/spatial/tier/projections/CartesianTierPlotter#setTierVerticalPosDivider().mjava","sourceNew":"  /**\n   * Get nearest max power of 10 greater than\n   * the tierlen\n   * e.g\n   * tierId of 13 has tierLen 8192\n   * nearest max power of 10 greater than tierLen \n   * would be 10,000\n   */\n  \n  private void setTierVerticalPosDivider() {\n    \n    // ceiling of log base 10 of tierLen\n    \n    tierVerticalPosDivider = Double.valueOf(Math.ceil(\n          Math.log10(Integer.valueOf(this.tierLength).doubleValue()))).intValue();\n    \n    // \n    tierVerticalPosDivider = (int)Math.pow(10, tierVerticalPosDivider );\n    \n  }\n\n","sourceOld":"  /**\n   * Get nearest max power of 10 greater than\n   * the tierlen\n   * e.g\n   * tierId of 13 has tierLen 8192\n   * nearest max power of 10 greater than tierLen \n   * would be 10,000\n   */\n  \n  private void setTierVerticalPosDivider() {\n    \n    // ceiling of log base 10 of tierLen\n    \n    tierVerticalPosDivider = Double.valueOf(Math.ceil(\n          Math.log10(Integer.valueOf(this.tierLength).doubleValue()))).intValue();\n    \n    // \n    tierVerticalPosDivider = (int)Math.pow(10, tierVerticalPosDivider );\n    \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2fb7e38713d15939e085d376c6391e6e6262a81f","date":1329897272,"type":4,"author":"David Wayne Smiley","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/contrib/spatial/src/java/org/apache/lucene/spatial/tier/projections/CartesianTierPlotter#setTierVerticalPosDivider().mjava","sourceNew":null,"sourceOld":"  /**\n   * Get nearest max power of 10 greater than\n   * the tierlen\n   * e.g\n   * tierId of 13 has tierLen 8192\n   * nearest max power of 10 greater than tierLen \n   * would be 10,000\n   */\n  \n  private void setTierVerticalPosDivider() {\n    \n    // ceiling of log base 10 of tierLen\n    \n    tierVerticalPosDivider = Double.valueOf(Math.ceil(\n          Math.log10(Integer.valueOf(this.tierLength).doubleValue()))).intValue();\n    \n    // \n    tierVerticalPosDivider = (int)Math.pow(10, tierVerticalPosDivider );\n    \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e47768b261c28e7e6032060e8331475c81057953","date":1331681297,"type":4,"author":"Ryan McKinley","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/contrib/spatial/src/java/org/apache/lucene/spatial/tier/projections/CartesianTierPlotter#setTierVerticalPosDivider().mjava","sourceNew":null,"sourceOld":"  /**\n   * Get nearest max power of 10 greater than\n   * the tierlen\n   * e.g\n   * tierId of 13 has tierLen 8192\n   * nearest max power of 10 greater than tierLen \n   * would be 10,000\n   */\n  \n  private void setTierVerticalPosDivider() {\n    \n    // ceiling of log base 10 of tierLen\n    \n    tierVerticalPosDivider = Double.valueOf(Math.ceil(\n          Math.log10(Integer.valueOf(this.tierLength).doubleValue()))).intValue();\n    \n    // \n    tierVerticalPosDivider = (int)Math.pow(10, tierVerticalPosDivider );\n    \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"e47768b261c28e7e6032060e8331475c81057953":["9454a6510e2db155fb01faa5c049b06ece95fab9","2fb7e38713d15939e085d376c6391e6e6262a81f"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["e47768b261c28e7e6032060e8331475c81057953"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"2fb7e38713d15939e085d376c6391e6e6262a81f":["9454a6510e2db155fb01faa5c049b06ece95fab9"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"e47768b261c28e7e6032060e8331475c81057953":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["e47768b261c28e7e6032060e8331475c81057953","2fb7e38713d15939e085d376c6391e6e6262a81f"],"2fb7e38713d15939e085d376c6391e6e6262a81f":["e47768b261c28e7e6032060e8331475c81057953"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}