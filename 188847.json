{"path":"solr/solrj/src/java/org/apache/solr/cloud/autoscaling/Policy.ReplicaInfo#writeMap(EntryWriter).mjava","commits":[{"id":"653c1ca305e0065ee988a09e59c8316b8cde02fd","date":1492506780,"type":1,"author":"Noble Paul","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/cloud/autoscaling/Policy.ReplicaInfo#writeMap(EntryWriter).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/recipe/Policy.ReplicaInfo#writeMap(EntryWriter).mjava","sourceNew":"    @Override\n    public void writeMap(EntryWriter ew) throws IOException {\n      ew.put(name, variables);\n    }\n\n","sourceOld":"    @Override\n    public void writeMap(EntryWriter ew) throws IOException {\n      ew.put(name, variables);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a513b6a92751e54c76fb5447948c9e7d437163a7","date":1496136565,"type":0,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/cloud/autoscaling/Policy.ReplicaInfo#writeMap(EntryWriter).mjava","pathOld":"/dev/null","sourceNew":"    @Override\n    public void writeMap(EntryWriter ew) throws IOException {\n      ew.put(name, variables);\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"74aea047dff7f7c38a2d766827bd20d356f98c6a","date":1496721416,"type":0,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"solr/solrj/src/java/org/apache/solr/cloud/autoscaling/Policy.ReplicaInfo#writeMap(EntryWriter).mjava","pathOld":"/dev/null","sourceNew":"    @Override\n    public void writeMap(EntryWriter ew) throws IOException {\n      ew.put(name, variables);\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1852ff897aecd2f7c8376a02aedfd44104533f28","date":1498224361,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/cloud/autoscaling/Policy.ReplicaInfo#writeMap(EntryWriter).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/cloud/autoscaling/Policy.ReplicaInfo#writeMap(EntryWriter).mjava","sourceNew":"    @Override\n    public void writeMap(EntryWriter ew) throws IOException {\n      ew.put(name, (MapWriter) ew1 -> {\n        if(variables !=null){\n          for (Map.Entry<String, Object> e : variables.entrySet()) {\n            ew1.put(e.getKey(), e.getValue());\n          }\n        }\n        if(type != null) ew1.put(\"type\", type.toString());\n      });\n    }\n\n","sourceOld":"    @Override\n    public void writeMap(EntryWriter ew) throws IOException {\n      ew.put(name, variables);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8d1f7b3f5e5e45b15b9649564c72301c248de1b8","date":1498557572,"type":4,"author":"Noble Paul","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/solrj/src/java/org/apache/solr/cloud/autoscaling/Policy.ReplicaInfo#writeMap(EntryWriter).mjava","sourceNew":null,"sourceOld":"    @Override\n    public void writeMap(EntryWriter ew) throws IOException {\n      ew.put(name, (MapWriter) ew1 -> {\n        if(variables !=null){\n          for (Map.Entry<String, Object> e : variables.entrySet()) {\n            ew1.put(e.getKey(), e.getValue());\n          }\n        }\n        if(type != null) ew1.put(\"type\", type.toString());\n      });\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6249f3a9e6b3580715fd7ab5f4da0bf6e096f8f2","date":1498616740,"type":5,"author":"Ishan Chattopadhyaya","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/cloud/autoscaling/Policy.ReplicaInfo#writeMap(EntryWriter).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/cloud/autoscaling/Policy.ReplicaInfo#writeMap(EntryWriter).mjava","sourceNew":"    @Override\n    public void writeMap(EntryWriter ew) throws IOException {\n      ew.put(name, variables);\n    }\n\n","sourceOld":"    @Override\n    public void writeMap(EntryWriter ew) throws IOException {\n      ew.put(name, variables);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"6249f3a9e6b3580715fd7ab5f4da0bf6e096f8f2":["74aea047dff7f7c38a2d766827bd20d356f98c6a"],"1852ff897aecd2f7c8376a02aedfd44104533f28":["653c1ca305e0065ee988a09e59c8316b8cde02fd"],"74aea047dff7f7c38a2d766827bd20d356f98c6a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","a513b6a92751e54c76fb5447948c9e7d437163a7"],"8d1f7b3f5e5e45b15b9649564c72301c248de1b8":["1852ff897aecd2f7c8376a02aedfd44104533f28"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a513b6a92751e54c76fb5447948c9e7d437163a7":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"653c1ca305e0065ee988a09e59c8316b8cde02fd":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"6249f3a9e6b3580715fd7ab5f4da0bf6e096f8f2":[],"1852ff897aecd2f7c8376a02aedfd44104533f28":["8d1f7b3f5e5e45b15b9649564c72301c248de1b8"],"74aea047dff7f7c38a2d766827bd20d356f98c6a":["6249f3a9e6b3580715fd7ab5f4da0bf6e096f8f2"],"8d1f7b3f5e5e45b15b9649564c72301c248de1b8":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["74aea047dff7f7c38a2d766827bd20d356f98c6a","a513b6a92751e54c76fb5447948c9e7d437163a7","653c1ca305e0065ee988a09e59c8316b8cde02fd","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a513b6a92751e54c76fb5447948c9e7d437163a7":["74aea047dff7f7c38a2d766827bd20d356f98c6a"],"653c1ca305e0065ee988a09e59c8316b8cde02fd":["1852ff897aecd2f7c8376a02aedfd44104533f28"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["6249f3a9e6b3580715fd7ab5f4da0bf6e096f8f2","8d1f7b3f5e5e45b15b9649564c72301c248de1b8","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}