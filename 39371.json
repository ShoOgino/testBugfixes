{"path":"solr/test-framework/src/java/org/apache/solr/util/TestHarness#TestHarness(String,SolrConfig,IndexSchema).mjava","commits":[{"id":"c903c3d15906a3da96b8c0c2fb704491005fdbdb","date":1453508227,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/util/TestHarness#TestHarness(String,SolrConfig,IndexSchema).mjava","pathOld":"solr/src/test-framework/org/apache/solr/util/TestHarness#TestHarness(String,SolrConfig,IndexSchema).mjava","sourceNew":"   /**\n    * @param dataDirectory path for index data, will not be cleaned up\n    * @param solrConfig solrconfig instance\n    * @param indexSchema schema instance\n    */\n  public TestHarness( String dataDirectory,\n                      SolrConfig solrConfig,\n                      IndexSchema indexSchema) {\n      this(\"\", new Initializer(\"\", dataDirectory, solrConfig, indexSchema));\n  }\n\n","sourceOld":"   /**\n    * @param dataDirectory path for index data, will not be cleaned up\n    * @param solrConfig solrconfig instance\n    * @param indexSchema schema instance\n    */\n  public TestHarness( String dataDirectory,\n                      SolrConfig solrConfig,\n                      IndexSchema indexSchema) {\n      this(\"\", new Initializer(\"\", dataDirectory, solrConfig, indexSchema));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a258fbb26824fd104ed795e5d9033d2d040049ee","date":1453508252,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/util/TestHarness#TestHarness(String,SolrConfig,IndexSchema).mjava","pathOld":"solr/src/test-framework/org/apache/solr/util/TestHarness#TestHarness(String,SolrConfig,IndexSchema).mjava","sourceNew":"   /**\n    * @param dataDirectory path for index data, will not be cleaned up\n    * @param solrConfig solrconfig instance\n    * @param indexSchema schema instance\n    */\n  public TestHarness( String dataDirectory,\n                      SolrConfig solrConfig,\n                      IndexSchema indexSchema) {\n      this(\"\", new Initializer(\"\", dataDirectory, solrConfig, indexSchema));\n  }\n\n","sourceOld":"   /**\n    * @param dataDirectory path for index data, will not be cleaned up\n    * @param solrConfig solrconfig instance\n    * @param indexSchema schema instance\n    */\n  public TestHarness( String dataDirectory,\n                      SolrConfig solrConfig,\n                      IndexSchema indexSchema) {\n      this(\"\", new Initializer(\"\", dataDirectory, solrConfig, indexSchema));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/test-framework/src/java/org/apache/solr/util/TestHarness#TestHarness(String,SolrConfig,IndexSchema).mjava","pathOld":"solr/src/test-framework/org/apache/solr/util/TestHarness#TestHarness(String,SolrConfig,IndexSchema).mjava","sourceNew":"   /**\n    * @param dataDirectory path for index data, will not be cleaned up\n    * @param solrConfig solrconfig instance\n    * @param indexSchema schema instance\n    */\n  public TestHarness( String dataDirectory,\n                      SolrConfig solrConfig,\n                      IndexSchema indexSchema) {\n      this(\"\", new Initializer(\"\", dataDirectory, solrConfig, indexSchema));\n  }\n\n","sourceOld":"   /**\n    * @param dataDirectory path for index data, will not be cleaned up\n    * @param solrConfig solrconfig instance\n    * @param indexSchema schema instance\n    */\n  public TestHarness( String dataDirectory,\n                      SolrConfig solrConfig,\n                      IndexSchema indexSchema) {\n      this(\"\", new Initializer(\"\", dataDirectory, solrConfig, indexSchema));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e635cfcf66f9e8b914c54c24d337820e475f44a5","date":1335303739,"type":3,"author":"Chris M. Hostetter","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/util/TestHarness#TestHarness(String,SolrConfig,IndexSchema).mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/util/TestHarness#TestHarness(String,SolrConfig,IndexSchema).mjava","sourceNew":"   /**\n    * @param dataDirectory path for index data, will not be cleaned up\n    * @param solrConfig solrconfig instance\n    * @param indexSchema schema instance\n    */\n  public TestHarness( String dataDirectory,\n                      SolrConfig solrConfig,\n                      IndexSchema indexSchema) {\n      this(null, new Initializer(null, dataDirectory, solrConfig, indexSchema));\n  }\n\n","sourceOld":"   /**\n    * @param dataDirectory path for index data, will not be cleaned up\n    * @param solrConfig solrconfig instance\n    * @param indexSchema schema instance\n    */\n  public TestHarness( String dataDirectory,\n                      SolrConfig solrConfig,\n                      IndexSchema indexSchema) {\n      this(\"\", new Initializer(\"\", dataDirectory, solrConfig, indexSchema));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d264f386d864b5751209060e8886ca9845f70469","date":1372172126,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/util/TestHarness#TestHarness(String,SolrConfig,IndexSchema).mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/util/TestHarness#TestHarness(String,SolrConfig,IndexSchema).mjava","sourceNew":"   /**\n    * @param dataDirectory path for index data, will not be cleaned up\n    * @param solrConfig solrconfig instance\n    * @param indexSchema schema instance\n    */\n  public TestHarness( String dataDirectory,\n                      SolrConfig solrConfig,\n                      IndexSchema indexSchema) {\n      this(CoreContainer.DEFAULT_DEFAULT_CORE_NAME, dataDirectory, solrConfig, indexSchema);\n  }\n\n","sourceOld":"   /**\n    * @param dataDirectory path for index data, will not be cleaned up\n    * @param solrConfig solrconfig instance\n    * @param indexSchema schema instance\n    */\n  public TestHarness( String dataDirectory,\n                      SolrConfig solrConfig,\n                      IndexSchema indexSchema) {\n      this(null, new Initializer(null, dataDirectory, solrConfig, indexSchema));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"354983dcdf70c800bf2573d10b54a7391b1dc167","date":1372183171,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/util/TestHarness#TestHarness(String,SolrConfig,IndexSchema).mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/util/TestHarness#TestHarness(String,SolrConfig,IndexSchema).mjava","sourceNew":"   /**\n    * @param dataDirectory path for index data, will not be cleaned up\n    * @param solrConfig solrconfig instance\n    * @param indexSchema schema instance\n    */\n  public TestHarness( String dataDirectory,\n                      SolrConfig solrConfig,\n                      IndexSchema indexSchema) {\n      this(null, new Initializer(null, dataDirectory, solrConfig, indexSchema));\n  }\n\n","sourceOld":"   /**\n    * @param dataDirectory path for index data, will not be cleaned up\n    * @param solrConfig solrconfig instance\n    * @param indexSchema schema instance\n    */\n  public TestHarness( String dataDirectory,\n                      SolrConfig solrConfig,\n                      IndexSchema indexSchema) {\n      this(CoreContainer.DEFAULT_DEFAULT_CORE_NAME, dataDirectory, solrConfig, indexSchema);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7116474e2e390259937401cf928323e0cbc75e60","date":1372780249,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/util/TestHarness#TestHarness(String,SolrConfig,IndexSchema).mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/util/TestHarness#TestHarness(String,SolrConfig,IndexSchema).mjava","sourceNew":"   /**\n    * @param dataDirectory path for index data, will not be cleaned up\n    * @param solrConfig solrconfig instance\n    * @param indexSchema schema instance\n    */\n  public TestHarness( String dataDirectory,\n                      SolrConfig solrConfig,\n                      IndexSchema indexSchema) {\n      this(CoreContainer.DEFAULT_DEFAULT_CORE_NAME, dataDirectory, solrConfig, indexSchema);\n  }\n\n","sourceOld":"   /**\n    * @param dataDirectory path for index data, will not be cleaned up\n    * @param solrConfig solrconfig instance\n    * @param indexSchema schema instance\n    */\n  public TestHarness( String dataDirectory,\n                      SolrConfig solrConfig,\n                      IndexSchema indexSchema) {\n      this(null, new Initializer(null, dataDirectory, solrConfig, indexSchema));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"37a0f60745e53927c4c876cfe5b5a58170f0646c","date":1373994005,"type":3,"author":"Han Jiang","isMerge":true,"pathNew":"solr/test-framework/src/java/org/apache/solr/util/TestHarness#TestHarness(String,SolrConfig,IndexSchema).mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/util/TestHarness#TestHarness(String,SolrConfig,IndexSchema).mjava","sourceNew":"   /**\n    * @param dataDirectory path for index data, will not be cleaned up\n    * @param solrConfig solrconfig instance\n    * @param indexSchema schema instance\n    */\n  public TestHarness( String dataDirectory,\n                      SolrConfig solrConfig,\n                      IndexSchema indexSchema) {\n      this(CoreContainer.DEFAULT_DEFAULT_CORE_NAME, dataDirectory, solrConfig, indexSchema);\n  }\n\n","sourceOld":"   /**\n    * @param dataDirectory path for index data, will not be cleaned up\n    * @param solrConfig solrconfig instance\n    * @param indexSchema schema instance\n    */\n  public TestHarness( String dataDirectory,\n                      SolrConfig solrConfig,\n                      IndexSchema indexSchema) {\n      this(null, new Initializer(null, dataDirectory, solrConfig, indexSchema));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"92a4da96826f502cf1a56a096929b37ce73e523a","date":1374584011,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/util/TestHarness#TestHarness(String,SolrConfig,IndexSchema).mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/util/TestHarness#TestHarness(String,SolrConfig,IndexSchema).mjava","sourceNew":"   /**\n    * @param dataDirectory path for index data, will not be cleaned up\n    * @param solrConfig solrconfig instance\n    * @param indexSchema schema instance\n    */\n  public TestHarness( String dataDirectory,\n                      SolrConfig solrConfig,\n                      IndexSchema indexSchema) {\n      this(ConfigSolrXmlOld.DEFAULT_DEFAULT_CORE_NAME, dataDirectory, solrConfig, indexSchema);\n  }\n\n","sourceOld":"   /**\n    * @param dataDirectory path for index data, will not be cleaned up\n    * @param solrConfig solrconfig instance\n    * @param indexSchema schema instance\n    */\n  public TestHarness( String dataDirectory,\n                      SolrConfig solrConfig,\n                      IndexSchema indexSchema) {\n      this(CoreContainer.DEFAULT_DEFAULT_CORE_NAME, dataDirectory, solrConfig, indexSchema);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"716d18f3a9b0993bc679d7fa7abdc9bfb03411ec","date":1376375609,"type":3,"author":"Han Jiang","isMerge":true,"pathNew":"solr/test-framework/src/java/org/apache/solr/util/TestHarness#TestHarness(String,SolrConfig,IndexSchema).mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/util/TestHarness#TestHarness(String,SolrConfig,IndexSchema).mjava","sourceNew":"   /**\n    * @param dataDirectory path for index data, will not be cleaned up\n    * @param solrConfig solrconfig instance\n    * @param indexSchema schema instance\n    */\n  public TestHarness( String dataDirectory,\n                      SolrConfig solrConfig,\n                      IndexSchema indexSchema) {\n      this(ConfigSolrXmlOld.DEFAULT_DEFAULT_CORE_NAME, dataDirectory, solrConfig, indexSchema);\n  }\n\n","sourceOld":"   /**\n    * @param dataDirectory path for index data, will not be cleaned up\n    * @param solrConfig solrconfig instance\n    * @param indexSchema schema instance\n    */\n  public TestHarness( String dataDirectory,\n                      SolrConfig solrConfig,\n                      IndexSchema indexSchema) {\n      this(CoreContainer.DEFAULT_DEFAULT_CORE_NAME, dataDirectory, solrConfig, indexSchema);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fd44bec977a26a118d9e809e2de6f7edb5ca0f39","date":1421673929,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/util/TestHarness#TestHarness(String,SolrConfig,IndexSchema).mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/util/TestHarness#TestHarness(String,SolrConfig,IndexSchema).mjava","sourceNew":"   /**\n    * @param dataDirectory path for index data, will not be cleaned up\n    * @param solrConfig solrconfig instance\n    * @param indexSchema schema instance\n    */\n  public TestHarness( String dataDirectory,\n                      SolrConfig solrConfig,\n                      IndexSchema indexSchema) {\n      this(SolrTestCaseJ4.DEFAULT_TEST_CORENAME, dataDirectory, solrConfig, indexSchema);\n  }\n\n","sourceOld":"   /**\n    * @param dataDirectory path for index data, will not be cleaned up\n    * @param solrConfig solrconfig instance\n    * @param indexSchema schema instance\n    */\n  public TestHarness( String dataDirectory,\n                      SolrConfig solrConfig,\n                      IndexSchema indexSchema) {\n      this(ConfigSolrXmlOld.DEFAULT_DEFAULT_CORE_NAME, dataDirectory, solrConfig, indexSchema);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"7116474e2e390259937401cf928323e0cbc75e60":["354983dcdf70c800bf2573d10b54a7391b1dc167"],"716d18f3a9b0993bc679d7fa7abdc9bfb03411ec":["37a0f60745e53927c4c876cfe5b5a58170f0646c","92a4da96826f502cf1a56a096929b37ce73e523a"],"37a0f60745e53927c4c876cfe5b5a58170f0646c":["e635cfcf66f9e8b914c54c24d337820e475f44a5","7116474e2e390259937401cf928323e0cbc75e60"],"c26f00b574427b55127e869b935845554afde1fa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","c903c3d15906a3da96b8c0c2fb704491005fdbdb"],"92a4da96826f502cf1a56a096929b37ce73e523a":["7116474e2e390259937401cf928323e0cbc75e60"],"354983dcdf70c800bf2573d10b54a7391b1dc167":["d264f386d864b5751209060e8886ca9845f70469"],"fd44bec977a26a118d9e809e2de6f7edb5ca0f39":["92a4da96826f502cf1a56a096929b37ce73e523a"],"d264f386d864b5751209060e8886ca9845f70469":["e635cfcf66f9e8b914c54c24d337820e475f44a5"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a258fbb26824fd104ed795e5d9033d2d040049ee":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"e635cfcf66f9e8b914c54c24d337820e475f44a5":["c26f00b574427b55127e869b935845554afde1fa"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["fd44bec977a26a118d9e809e2de6f7edb5ca0f39"]},"commit2Childs":{"7116474e2e390259937401cf928323e0cbc75e60":["37a0f60745e53927c4c876cfe5b5a58170f0646c","92a4da96826f502cf1a56a096929b37ce73e523a"],"716d18f3a9b0993bc679d7fa7abdc9bfb03411ec":[],"37a0f60745e53927c4c876cfe5b5a58170f0646c":["716d18f3a9b0993bc679d7fa7abdc9bfb03411ec"],"c26f00b574427b55127e869b935845554afde1fa":["e635cfcf66f9e8b914c54c24d337820e475f44a5"],"92a4da96826f502cf1a56a096929b37ce73e523a":["716d18f3a9b0993bc679d7fa7abdc9bfb03411ec","fd44bec977a26a118d9e809e2de6f7edb5ca0f39"],"354983dcdf70c800bf2573d10b54a7391b1dc167":["7116474e2e390259937401cf928323e0cbc75e60"],"fd44bec977a26a118d9e809e2de6f7edb5ca0f39":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"d264f386d864b5751209060e8886ca9845f70469":["354983dcdf70c800bf2573d10b54a7391b1dc167"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["c26f00b574427b55127e869b935845554afde1fa"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c26f00b574427b55127e869b935845554afde1fa","c903c3d15906a3da96b8c0c2fb704491005fdbdb","a258fbb26824fd104ed795e5d9033d2d040049ee"],"a258fbb26824fd104ed795e5d9033d2d040049ee":[],"e635cfcf66f9e8b914c54c24d337820e475f44a5":["37a0f60745e53927c4c876cfe5b5a58170f0646c","d264f386d864b5751209060e8886ca9845f70469"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["716d18f3a9b0993bc679d7fa7abdc9bfb03411ec","a258fbb26824fd104ed795e5d9033d2d040049ee","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}