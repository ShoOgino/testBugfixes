{"path":"lucene/facet/src/java/org/apache/lucene/facet/LongRangeFacetCounts#getTopChildren(int,String,String...).mjava","commits":[{"id":"bd3ed8c8fa2a4b995f5dfca3f00e5ce80161de0e","date":1385900513,"type":1,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/LongRangeFacetCounts#getTopChildren(int,String,String...).mjava","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/RangeFacetCounts#getTopChildren(int,String,String...).mjava","sourceNew":"  @Override\n  public FacetResult getTopChildren(int topN, String dim, String... path) {\n    if (dim.equals(field) == false) {\n      throw new IllegalArgumentException(\"invalid dim \\\"\" + dim + \"\\\"; should be \\\"\" + field + \"\\\"\");\n    }\n    LabelAndValue[] labelValues = new LabelAndValue[counts.length];\n    for(int i=0;i<counts.length;i++) {\n      // nocommit can we add the range into this?\n      labelValues[i] = new LabelAndValue(ranges[i].label, counts[i]);\n    }\n\n    return new FacetResult(totCount, labelValues, labelValues.length);\n  }\n\n","sourceOld":"  @Override\n  public FacetResult getTopChildren(int topN, String dim, String... path) {\n    if (dim.equals(field) == false) {\n      throw new IllegalArgumentException(\"invalid dim \\\"\" + dim + \"\\\"; should be \\\"\" + field + \"\\\"\");\n    }\n    LabelAndValue[] labelValues = new LabelAndValue[counts.length];\n    for(int i=0;i<counts.length;i++) {\n      // nocommit can we add the range into this?\n      labelValues[i] = new LabelAndValue(ranges[i].label, counts[i]);\n    }\n\n    return new FacetResult(totCount, labelValues, labelValues.length);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"56d44586f4c409c6c6c5942b9f0227df806b7300","date":1386027853,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/LongRangeFacetCounts#getTopChildren(int,String,String...).mjava","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/LongRangeFacetCounts#getTopChildren(int,String,String...).mjava","sourceNew":"  @Override\n  public FacetResult getTopChildren(int topN, String dim, String... path) {\n    if (dim.equals(field) == false) {\n      throw new IllegalArgumentException(\"invalid dim \\\"\" + dim + \"\\\"; should be \\\"\" + field + \"\\\"\");\n    }\n    if (path.length != 0) {\n      throw new IllegalArgumentException(\"path.length should be 0\");\n    }\n    LabelAndValue[] labelValues = new LabelAndValue[counts.length];\n    for(int i=0;i<counts.length;i++) {\n      // nocommit can we add the range into this?\n      labelValues[i] = new LabelAndValue(ranges[i].label, counts[i]);\n    }\n\n    return new FacetResult(dim, path, totCount, labelValues, labelValues.length);\n  }\n\n","sourceOld":"  @Override\n  public FacetResult getTopChildren(int topN, String dim, String... path) {\n    if (dim.equals(field) == false) {\n      throw new IllegalArgumentException(\"invalid dim \\\"\" + dim + \"\\\"; should be \\\"\" + field + \"\\\"\");\n    }\n    LabelAndValue[] labelValues = new LabelAndValue[counts.length];\n    for(int i=0;i<counts.length;i++) {\n      // nocommit can we add the range into this?\n      labelValues[i] = new LabelAndValue(ranges[i].label, counts[i]);\n    }\n\n    return new FacetResult(totCount, labelValues, labelValues.length);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9264c0cc71ca63967ca4c832e5d3514c000b55e6","date":1386094934,"type":4,"author":"Michael McCandless","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/LongRangeFacetCounts#getTopChildren(int,String,String...).mjava","sourceNew":null,"sourceOld":"  @Override\n  public FacetResult getTopChildren(int topN, String dim, String... path) {\n    if (dim.equals(field) == false) {\n      throw new IllegalArgumentException(\"invalid dim \\\"\" + dim + \"\\\"; should be \\\"\" + field + \"\\\"\");\n    }\n    if (path.length != 0) {\n      throw new IllegalArgumentException(\"path.length should be 0\");\n    }\n    LabelAndValue[] labelValues = new LabelAndValue[counts.length];\n    for(int i=0;i<counts.length;i++) {\n      // nocommit can we add the range into this?\n      labelValues[i] = new LabelAndValue(ranges[i].label, counts[i]);\n    }\n\n    return new FacetResult(dim, path, totCount, labelValues, labelValues.length);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"56d44586f4c409c6c6c5942b9f0227df806b7300":["bd3ed8c8fa2a4b995f5dfca3f00e5ce80161de0e"],"9264c0cc71ca63967ca4c832e5d3514c000b55e6":["56d44586f4c409c6c6c5942b9f0227df806b7300"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"bd3ed8c8fa2a4b995f5dfca3f00e5ce80161de0e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"56d44586f4c409c6c6c5942b9f0227df806b7300":["9264c0cc71ca63967ca4c832e5d3514c000b55e6"],"9264c0cc71ca63967ca4c832e5d3514c000b55e6":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["bd3ed8c8fa2a4b995f5dfca3f00e5ce80161de0e","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"bd3ed8c8fa2a4b995f5dfca3f00e5ce80161de0e":["56d44586f4c409c6c6c5942b9f0227df806b7300"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["9264c0cc71ca63967ca4c832e5d3514c000b55e6","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}