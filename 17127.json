{"path":"solr/solrj/src/java/org/apache/solr/client/solrj/response/json/BucketBasedJsonFacet#BucketBasedJsonFacet(NamedList[Object]).mjava","commits":[{"id":"07feaa572dd3645c2013be127176350b3f4cd6a2","date":1542492880,"type":0,"author":"Jason Gerlowski","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/response/json/BucketBasedJsonFacet#BucketBasedJsonFacet(NamedList[Object]).mjava","pathOld":"/dev/null","sourceNew":"  public BucketBasedJsonFacet(NamedList<Object> bucketBasedFacet) {\n    for (Map.Entry<String, Object> entry : bucketBasedFacet) {\n      final String key = entry.getKey();\n      final Object value = entry.getValue();\n      if (\"buckets\".equals(key)) {\n        final List<NamedList> bucketListUnparsed = (List<NamedList>) value;\n        buckets = new ArrayList<>();\n        for (NamedList bucket : bucketListUnparsed) {\n          buckets.add(new BucketJsonFacet(bucket));\n        }\n      } else if (\"numBuckets\".equals(key)) {\n        numBuckets = (int) value;\n      } else if (\"allBuckets\".equals(key)) {\n        allBuckets = (long) ((NamedList)value).get(\"count\");\n      } else if (\"before\".equals(key)) {\n        beforeFirstBucketCount = (int) ((NamedList)value).get(\"count\");\n      } else if (\"after\".equals(key)) {\n        afterLastBucketCount = (int) ((NamedList)value).get(\"count\");\n      } else if (\"between\".equals(key)) {\n        betweenAllBucketsCount = (int) ((NamedList)value).get(\"count\");\n      } else {\n        // We don't recognize the key.  Possible JSON faceting schema has changed without updating client.\n        // Silently ignore for now, though we may want to consider throwing an error if this proves problematic.\n      }\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["56c9e69640fb64823aca5fc811a27ed6acc4ee29"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"56c9e69640fb64823aca5fc811a27ed6acc4ee29","date":1557113885,"type":3,"author":"Jason Gerlowski","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/response/json/BucketBasedJsonFacet#BucketBasedJsonFacet(NamedList[Object]).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/response/json/BucketBasedJsonFacet#BucketBasedJsonFacet(NamedList[Object]).mjava","sourceNew":"  public BucketBasedJsonFacet(NamedList<Object> bucketBasedFacet) {\n    for (Map.Entry<String, Object> entry : bucketBasedFacet) {\n      final String key = entry.getKey();\n      final Object value = entry.getValue();\n      if (\"buckets\".equals(key)) {\n        final List<NamedList> bucketListUnparsed = (List<NamedList>) value;\n        buckets = new ArrayList<>();\n        for (NamedList bucket : bucketListUnparsed) {\n          buckets.add(new BucketJsonFacet(bucket));\n        }\n      } else if (\"numBuckets\".equals(key)) {\n        numBuckets = ((Number) value).longValue();\n      } else if (\"allBuckets\".equals(key)) {\n        allBuckets = ((Number) ((NamedList)value).get(\"count\")).longValue();\n      } else if (\"before\".equals(key)) {\n        beforeFirstBucketCount = ((Number) ((NamedList)value).get(\"count\")).longValue();\n      } else if (\"after\".equals(key)) {\n        afterLastBucketCount = ((Number) ((NamedList)value).get(\"count\")).longValue();\n      } else if (\"between\".equals(key)) {\n        betweenAllBucketsCount = ((Number) ((NamedList)value).get(\"count\")).longValue();\n      } else {\n        // We don't recognize the key.  Possible JSON faceting schema has changed without updating client.\n        // Silently ignore for now, though we may want to consider throwing an error if this proves problematic.\n      }\n    }\n  }\n\n","sourceOld":"  public BucketBasedJsonFacet(NamedList<Object> bucketBasedFacet) {\n    for (Map.Entry<String, Object> entry : bucketBasedFacet) {\n      final String key = entry.getKey();\n      final Object value = entry.getValue();\n      if (\"buckets\".equals(key)) {\n        final List<NamedList> bucketListUnparsed = (List<NamedList>) value;\n        buckets = new ArrayList<>();\n        for (NamedList bucket : bucketListUnparsed) {\n          buckets.add(new BucketJsonFacet(bucket));\n        }\n      } else if (\"numBuckets\".equals(key)) {\n        numBuckets = (int) value;\n      } else if (\"allBuckets\".equals(key)) {\n        allBuckets = (long) ((NamedList)value).get(\"count\");\n      } else if (\"before\".equals(key)) {\n        beforeFirstBucketCount = (int) ((NamedList)value).get(\"count\");\n      } else if (\"after\".equals(key)) {\n        afterLastBucketCount = (int) ((NamedList)value).get(\"count\");\n      } else if (\"between\".equals(key)) {\n        betweenAllBucketsCount = (int) ((NamedList)value).get(\"count\");\n      } else {\n        // We don't recognize the key.  Possible JSON faceting schema has changed without updating client.\n        // Silently ignore for now, though we may want to consider throwing an error if this proves problematic.\n      }\n    }\n  }\n\n","bugFix":["07feaa572dd3645c2013be127176350b3f4cd6a2"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a7dfea4f7c80813344b0152e37fc18b31369e8ff","date":1592136683,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/response/json/BucketBasedJsonFacet#BucketBasedJsonFacet(NamedList[Object]).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/response/json/BucketBasedJsonFacet#BucketBasedJsonFacet(NamedList[Object]).mjava","sourceNew":"  @SuppressWarnings({\"unchecked\", \"rawtypes\"})\n  public BucketBasedJsonFacet(NamedList<Object> bucketBasedFacet) {\n    for (Map.Entry<String, Object> entry : bucketBasedFacet) {\n      final String key = entry.getKey();\n      final Object value = entry.getValue();\n      if (\"buckets\".equals(key)) {\n        final List<NamedList> bucketListUnparsed = (List<NamedList>) value;\n        buckets = new ArrayList<>();\n        for (NamedList bucket : bucketListUnparsed) {\n          buckets.add(new BucketJsonFacet(bucket));\n        }\n      } else if (\"numBuckets\".equals(key)) {\n        numBuckets = ((Number) value).longValue();\n      } else if (\"allBuckets\".equals(key)) {\n        allBuckets = ((Number) ((NamedList)value).get(\"count\")).longValue();\n      } else if (\"before\".equals(key)) {\n        beforeFirstBucketCount = ((Number) ((NamedList)value).get(\"count\")).longValue();\n      } else if (\"after\".equals(key)) {\n        afterLastBucketCount = ((Number) ((NamedList)value).get(\"count\")).longValue();\n      } else if (\"between\".equals(key)) {\n        betweenAllBucketsCount = ((Number) ((NamedList)value).get(\"count\")).longValue();\n      } else {\n        // We don't recognize the key.  Possible JSON faceting schema has changed without updating client.\n        // Silently ignore for now, though we may want to consider throwing an error if this proves problematic.\n      }\n    }\n  }\n\n","sourceOld":"  public BucketBasedJsonFacet(NamedList<Object> bucketBasedFacet) {\n    for (Map.Entry<String, Object> entry : bucketBasedFacet) {\n      final String key = entry.getKey();\n      final Object value = entry.getValue();\n      if (\"buckets\".equals(key)) {\n        final List<NamedList> bucketListUnparsed = (List<NamedList>) value;\n        buckets = new ArrayList<>();\n        for (NamedList bucket : bucketListUnparsed) {\n          buckets.add(new BucketJsonFacet(bucket));\n        }\n      } else if (\"numBuckets\".equals(key)) {\n        numBuckets = ((Number) value).longValue();\n      } else if (\"allBuckets\".equals(key)) {\n        allBuckets = ((Number) ((NamedList)value).get(\"count\")).longValue();\n      } else if (\"before\".equals(key)) {\n        beforeFirstBucketCount = ((Number) ((NamedList)value).get(\"count\")).longValue();\n      } else if (\"after\".equals(key)) {\n        afterLastBucketCount = ((Number) ((NamedList)value).get(\"count\")).longValue();\n      } else if (\"between\".equals(key)) {\n        betweenAllBucketsCount = ((Number) ((NamedList)value).get(\"count\")).longValue();\n      } else {\n        // We don't recognize the key.  Possible JSON faceting schema has changed without updating client.\n        // Silently ignore for now, though we may want to consider throwing an error if this proves problematic.\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"56c9e69640fb64823aca5fc811a27ed6acc4ee29":["07feaa572dd3645c2013be127176350b3f4cd6a2"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a7dfea4f7c80813344b0152e37fc18b31369e8ff":["56c9e69640fb64823aca5fc811a27ed6acc4ee29"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a7dfea4f7c80813344b0152e37fc18b31369e8ff"],"07feaa572dd3645c2013be127176350b3f4cd6a2":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"56c9e69640fb64823aca5fc811a27ed6acc4ee29":["a7dfea4f7c80813344b0152e37fc18b31369e8ff"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["07feaa572dd3645c2013be127176350b3f4cd6a2"],"a7dfea4f7c80813344b0152e37fc18b31369e8ff":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"07feaa572dd3645c2013be127176350b3f4cd6a2":["56c9e69640fb64823aca5fc811a27ed6acc4ee29"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}