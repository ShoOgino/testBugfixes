{"path":"solr/core/src/java/org/apache/solr/handler/admin/CoreAdminHandler#handleReloadAction(SolrQueryRequest,SolrQueryResponse).mjava","commits":[{"id":"c903c3d15906a3da96b8c0c2fb704491005fdbdb","date":1453508227,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/admin/CoreAdminHandler#handleReloadAction(SolrQueryRequest,SolrQueryResponse).mjava","pathOld":"solr/src/java/org/apache/solr/handler/admin/CoreAdminHandler#handleReloadAction(SolrQueryRequest,SolrQueryResponse).mjava","sourceNew":"  /**\n   * Handler \"RELOAD\" action\n   *\n   * @param req\n   * @param rsp\n   *\n   * @return true if a modification has resulted that requires persistance \n   *         of the CoreContainer configuration.\n   */\n  protected boolean handleReloadAction(SolrQueryRequest req, SolrQueryResponse rsp) {\n    SolrParams params = req.getParams();\n    String cname = params.get(CoreAdminParams.CORE);\n    try {\n      coreContainer.reload(cname);\n      return false; // no change on reload\n    } catch (Exception ex) {\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, \"Error handling 'reload' action\", ex);\n    }\n  }\n\n","sourceOld":"  /**\n   * Handler \"RELOAD\" action\n   *\n   * @param req\n   * @param rsp\n   *\n   * @return true if a modification has resulted that requires persistance \n   *         of the CoreContainer configuration.\n   */\n  protected boolean handleReloadAction(SolrQueryRequest req, SolrQueryResponse rsp) {\n    SolrParams params = req.getParams();\n    String cname = params.get(CoreAdminParams.CORE);\n    try {\n      coreContainer.reload(cname);\n      return false; // no change on reload\n    } catch (Exception ex) {\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, \"Error handling 'reload' action\", ex);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a258fbb26824fd104ed795e5d9033d2d040049ee","date":1453508252,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/admin/CoreAdminHandler#handleReloadAction(SolrQueryRequest,SolrQueryResponse).mjava","pathOld":"solr/src/java/org/apache/solr/handler/admin/CoreAdminHandler#handleReloadAction(SolrQueryRequest,SolrQueryResponse).mjava","sourceNew":"  /**\n   * Handler \"RELOAD\" action\n   *\n   * @param req\n   * @param rsp\n   *\n   * @return true if a modification has resulted that requires persistance \n   *         of the CoreContainer configuration.\n   */\n  protected boolean handleReloadAction(SolrQueryRequest req, SolrQueryResponse rsp) {\n    SolrParams params = req.getParams();\n    String cname = params.get(CoreAdminParams.CORE);\n    try {\n      coreContainer.reload(cname);\n      return false; // no change on reload\n    } catch (Exception ex) {\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, \"Error handling 'reload' action\", ex);\n    }\n  }\n\n","sourceOld":"  /**\n   * Handler \"RELOAD\" action\n   *\n   * @param req\n   * @param rsp\n   *\n   * @return true if a modification has resulted that requires persistance \n   *         of the CoreContainer configuration.\n   */\n  protected boolean handleReloadAction(SolrQueryRequest req, SolrQueryResponse rsp) {\n    SolrParams params = req.getParams();\n    String cname = params.get(CoreAdminParams.CORE);\n    try {\n      coreContainer.reload(cname);\n      return false; // no change on reload\n    } catch (Exception ex) {\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, \"Error handling 'reload' action\", ex);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/handler/admin/CoreAdminHandler#handleReloadAction(SolrQueryRequest,SolrQueryResponse).mjava","pathOld":"solr/src/java/org/apache/solr/handler/admin/CoreAdminHandler#handleReloadAction(SolrQueryRequest,SolrQueryResponse).mjava","sourceNew":"  /**\n   * Handler \"RELOAD\" action\n   *\n   * @param req\n   * @param rsp\n   *\n   * @return true if a modification has resulted that requires persistance \n   *         of the CoreContainer configuration.\n   */\n  protected boolean handleReloadAction(SolrQueryRequest req, SolrQueryResponse rsp) {\n    SolrParams params = req.getParams();\n    String cname = params.get(CoreAdminParams.CORE);\n    try {\n      coreContainer.reload(cname);\n      return false; // no change on reload\n    } catch (Exception ex) {\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, \"Error handling 'reload' action\", ex);\n    }\n  }\n\n","sourceOld":"  /**\n   * Handler \"RELOAD\" action\n   *\n   * @param req\n   * @param rsp\n   *\n   * @return true if a modification has resulted that requires persistance \n   *         of the CoreContainer configuration.\n   */\n  protected boolean handleReloadAction(SolrQueryRequest req, SolrQueryResponse rsp) {\n    SolrParams params = req.getParams();\n    String cname = params.get(CoreAdminParams.CORE);\n    try {\n      coreContainer.reload(cname);\n      return false; // no change on reload\n    } catch (Exception ex) {\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, \"Error handling 'reload' action\", ex);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c7bd1fdddb8e84c1857d1a55c32ced51f0ed2069","date":1348430063,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/admin/CoreAdminHandler#handleReloadAction(SolrQueryRequest,SolrQueryResponse).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/admin/CoreAdminHandler#handleReloadAction(SolrQueryRequest,SolrQueryResponse).mjava","sourceNew":"  /**\n   * Handler \"RELOAD\" action\n   *\n   * @return true if a modification has resulted that requires persistence \n   *         of the CoreContainer configuration.\n   */\n  protected boolean handleReloadAction(SolrQueryRequest req, SolrQueryResponse rsp) {\n    SolrParams params = req.getParams();\n    String cname = params.get(CoreAdminParams.CORE);\n    try {\n      coreContainer.reload(cname);\n      return false; // no change on reload\n    } catch (Exception ex) {\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, \"Error handling 'reload' action\", ex);\n    }\n  }\n\n","sourceOld":"  /**\n   * Handler \"RELOAD\" action\n   *\n   * @param req\n   * @param rsp\n   *\n   * @return true if a modification has resulted that requires persistance \n   *         of the CoreContainer configuration.\n   */\n  protected boolean handleReloadAction(SolrQueryRequest req, SolrQueryResponse rsp) {\n    SolrParams params = req.getParams();\n    String cname = params.get(CoreAdminParams.CORE);\n    try {\n      coreContainer.reload(cname);\n      return false; // no change on reload\n    } catch (Exception ex) {\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, \"Error handling 'reload' action\", ex);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6e764e9a107f93be9fa3c922bc6a197b3eec387e","date":1373560501,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/admin/CoreAdminHandler#handleReloadAction(SolrQueryRequest,SolrQueryResponse).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/admin/CoreAdminHandler#handleReloadAction(SolrQueryRequest,SolrQueryResponse).mjava","sourceNew":"  /**\n   * Handler \"RELOAD\" action\n   */\n  protected void handleReloadAction(SolrQueryRequest req, SolrQueryResponse rsp) {\n    SolrParams params = req.getParams();\n    String cname = params.get(CoreAdminParams.CORE);\n    try {\n      coreContainer.reload(cname);\n    } catch (Exception ex) {\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, \"Error handling 'reload' action\", ex);\n    }\n  }\n\n","sourceOld":"  /**\n   * Handler \"RELOAD\" action\n   *\n   * @return true if a modification has resulted that requires persistence \n   *         of the CoreContainer configuration.\n   */\n  protected boolean handleReloadAction(SolrQueryRequest req, SolrQueryResponse rsp) {\n    SolrParams params = req.getParams();\n    String cname = params.get(CoreAdminParams.CORE);\n    try {\n      coreContainer.reload(cname);\n      return false; // no change on reload\n    } catch (Exception ex) {\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, \"Error handling 'reload' action\", ex);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"37a0f60745e53927c4c876cfe5b5a58170f0646c","date":1373994005,"type":3,"author":"Han Jiang","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/handler/admin/CoreAdminHandler#handleReloadAction(SolrQueryRequest,SolrQueryResponse).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/admin/CoreAdminHandler#handleReloadAction(SolrQueryRequest,SolrQueryResponse).mjava","sourceNew":"  /**\n   * Handler \"RELOAD\" action\n   */\n  protected void handleReloadAction(SolrQueryRequest req, SolrQueryResponse rsp) {\n    SolrParams params = req.getParams();\n    String cname = params.get(CoreAdminParams.CORE);\n    try {\n      coreContainer.reload(cname);\n    } catch (Exception ex) {\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, \"Error handling 'reload' action\", ex);\n    }\n  }\n\n","sourceOld":"  /**\n   * Handler \"RELOAD\" action\n   *\n   * @return true if a modification has resulted that requires persistence \n   *         of the CoreContainer configuration.\n   */\n  protected boolean handleReloadAction(SolrQueryRequest req, SolrQueryResponse rsp) {\n    SolrParams params = req.getParams();\n    String cname = params.get(CoreAdminParams.CORE);\n    try {\n      coreContainer.reload(cname);\n      return false; // no change on reload\n    } catch (Exception ex) {\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, \"Error handling 'reload' action\", ex);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a186504f1a3b9b01975b92a172e3081e034ec90b","date":1389804265,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/admin/CoreAdminHandler#handleReloadAction(SolrQueryRequest,SolrQueryResponse).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/admin/CoreAdminHandler#handleReloadAction(SolrQueryRequest,SolrQueryResponse).mjava","sourceNew":"  /**\n   * Handler \"RELOAD\" action\n   */\n  protected void handleReloadAction(SolrQueryRequest req, SolrQueryResponse rsp) {\n    SolrParams params = req.getParams();\n    String cname = params.get(CoreAdminParams.CORE);\n\n    if(coreContainer.getCore(cname) == null) {\n      throw new SolrException(ErrorCode.BAD_REQUEST, \"Core with core name [\" + cname + \"] does not exist.\");\n    }\n\n    try {\n      coreContainer.reload(cname);\n    } catch (Exception ex) {\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, \"Error handling 'reload' action\", ex);\n    }\n  }\n\n","sourceOld":"  /**\n   * Handler \"RELOAD\" action\n   */\n  protected void handleReloadAction(SolrQueryRequest req, SolrQueryResponse rsp) {\n    SolrParams params = req.getParams();\n    String cname = params.get(CoreAdminParams.CORE);\n    try {\n      coreContainer.reload(cname);\n    } catch (Exception ex) {\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, \"Error handling 'reload' action\", ex);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"24f51fc6f243f7668c0ea1821e8c9dad93ee9465","date":1389805706,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/admin/CoreAdminHandler#handleReloadAction(SolrQueryRequest,SolrQueryResponse).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/admin/CoreAdminHandler#handleReloadAction(SolrQueryRequest,SolrQueryResponse).mjava","sourceNew":"  /**\n   * Handler \"RELOAD\" action\n   */\n  protected void handleReloadAction(SolrQueryRequest req, SolrQueryResponse rsp) {\n    SolrParams params = req.getParams();\n    String cname = params.get(CoreAdminParams.CORE);\n\n    if(!coreContainer.getCoreNames().contains(cname)) {\n      throw new SolrException(ErrorCode.BAD_REQUEST, \"Core with core name [\" + cname + \"] does not exist.\");\n    }\n\n    try {\n      coreContainer.reload(cname);\n    } catch (Exception ex) {\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, \"Error handling 'reload' action\", ex);\n    }\n  }\n\n","sourceOld":"  /**\n   * Handler \"RELOAD\" action\n   */\n  protected void handleReloadAction(SolrQueryRequest req, SolrQueryResponse rsp) {\n    SolrParams params = req.getParams();\n    String cname = params.get(CoreAdminParams.CORE);\n\n    if(coreContainer.getCore(cname) == null) {\n      throw new SolrException(ErrorCode.BAD_REQUEST, \"Core with core name [\" + cname + \"] does not exist.\");\n    }\n\n    try {\n      coreContainer.reload(cname);\n    } catch (Exception ex) {\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, \"Error handling 'reload' action\", ex);\n    }\n  }\n\n","bugFix":null,"bugIntro":["130496c25626b9e6af5f1833f861e778722b9894"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"130496c25626b9e6af5f1833f861e778722b9894","date":1436679365,"type":3,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/admin/CoreAdminHandler#handleReloadAction(SolrQueryRequest,SolrQueryResponse).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/admin/CoreAdminHandler#handleReloadAction(SolrQueryRequest,SolrQueryResponse).mjava","sourceNew":"  /**\n   * Handler \"RELOAD\" action\n   */\n  protected void handleReloadAction(SolrQueryRequest req, SolrQueryResponse rsp) {\n    SolrParams params = req.getParams();\n    String cname = params.get(CoreAdminParams.CORE);\n\n    if (cname == null || !coreContainer.getCoreNames().contains(cname)) {\n      throw new SolrException(ErrorCode.BAD_REQUEST, \"Core with core name [\" + cname + \"] does not exist.\");\n    }\n\n    try {\n      coreContainer.reload(cname);\n    } catch (Exception ex) {\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, \"Error handling 'reload' action\", ex);\n    }\n  }\n\n","sourceOld":"  /**\n   * Handler \"RELOAD\" action\n   */\n  protected void handleReloadAction(SolrQueryRequest req, SolrQueryResponse rsp) {\n    SolrParams params = req.getParams();\n    String cname = params.get(CoreAdminParams.CORE);\n\n    if(!coreContainer.getCoreNames().contains(cname)) {\n      throw new SolrException(ErrorCode.BAD_REQUEST, \"Core with core name [\" + cname + \"] does not exist.\");\n    }\n\n    try {\n      coreContainer.reload(cname);\n    } catch (Exception ex) {\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, \"Error handling 'reload' action\", ex);\n    }\n  }\n\n","bugFix":["24f51fc6f243f7668c0ea1821e8c9dad93ee9465"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fa0876236f0bd8be403747120d248bdd42b75a96","date":1451844229,"type":4,"author":"Noble Paul","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/core/src/java/org/apache/solr/handler/admin/CoreAdminHandler#handleReloadAction(SolrQueryRequest,SolrQueryResponse).mjava","sourceNew":null,"sourceOld":"  /**\n   * Handler \"RELOAD\" action\n   */\n  protected void handleReloadAction(SolrQueryRequest req, SolrQueryResponse rsp) {\n    SolrParams params = req.getParams();\n    String cname = params.get(CoreAdminParams.CORE);\n\n    if (cname == null || !coreContainer.getCoreNames().contains(cname)) {\n      throw new SolrException(ErrorCode.BAD_REQUEST, \"Core with core name [\" + cname + \"] does not exist.\");\n    }\n\n    try {\n      coreContainer.reload(cname);\n    } catch (Exception ex) {\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, \"Error handling 'reload' action\", ex);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a186504f1a3b9b01975b92a172e3081e034ec90b":["6e764e9a107f93be9fa3c922bc6a197b3eec387e"],"c7bd1fdddb8e84c1857d1a55c32ced51f0ed2069":["c26f00b574427b55127e869b935845554afde1fa"],"130496c25626b9e6af5f1833f861e778722b9894":["24f51fc6f243f7668c0ea1821e8c9dad93ee9465"],"37a0f60745e53927c4c876cfe5b5a58170f0646c":["c7bd1fdddb8e84c1857d1a55c32ced51f0ed2069","6e764e9a107f93be9fa3c922bc6a197b3eec387e"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"c26f00b574427b55127e869b935845554afde1fa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","c903c3d15906a3da96b8c0c2fb704491005fdbdb"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"24f51fc6f243f7668c0ea1821e8c9dad93ee9465":["a186504f1a3b9b01975b92a172e3081e034ec90b"],"fa0876236f0bd8be403747120d248bdd42b75a96":["130496c25626b9e6af5f1833f861e778722b9894"],"a258fbb26824fd104ed795e5d9033d2d040049ee":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"6e764e9a107f93be9fa3c922bc6a197b3eec387e":["c7bd1fdddb8e84c1857d1a55c32ced51f0ed2069"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["fa0876236f0bd8be403747120d248bdd42b75a96"]},"commit2Childs":{"a186504f1a3b9b01975b92a172e3081e034ec90b":["24f51fc6f243f7668c0ea1821e8c9dad93ee9465"],"c7bd1fdddb8e84c1857d1a55c32ced51f0ed2069":["37a0f60745e53927c4c876cfe5b5a58170f0646c","6e764e9a107f93be9fa3c922bc6a197b3eec387e"],"130496c25626b9e6af5f1833f861e778722b9894":["fa0876236f0bd8be403747120d248bdd42b75a96"],"37a0f60745e53927c4c876cfe5b5a58170f0646c":[],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["c26f00b574427b55127e869b935845554afde1fa"],"c26f00b574427b55127e869b935845554afde1fa":["c7bd1fdddb8e84c1857d1a55c32ced51f0ed2069"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c903c3d15906a3da96b8c0c2fb704491005fdbdb","c26f00b574427b55127e869b935845554afde1fa","a258fbb26824fd104ed795e5d9033d2d040049ee"],"24f51fc6f243f7668c0ea1821e8c9dad93ee9465":["130496c25626b9e6af5f1833f861e778722b9894"],"fa0876236f0bd8be403747120d248bdd42b75a96":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a258fbb26824fd104ed795e5d9033d2d040049ee":[],"6e764e9a107f93be9fa3c922bc6a197b3eec387e":["a186504f1a3b9b01975b92a172e3081e034ec90b","37a0f60745e53927c4c876cfe5b5a58170f0646c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["37a0f60745e53927c4c876cfe5b5a58170f0646c","a258fbb26824fd104ed795e5d9033d2d040049ee","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}