{"path":"lucene/codecs/src/java/org/apache/lucene/codecs/memory/DirectDocValuesProducer#readFields(IndexInput,FieldInfos).mjava","commits":[{"id":"0936055c0eed56be3e4ae5c9db5b0e355390736a","date":1410874015,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/codecs/src/java/org/apache/lucene/codecs/memory/DirectDocValuesProducer#readFields(IndexInput,FieldInfos).mjava","pathOld":"lucene/codecs/src/java/org/apache/lucene/codecs/memory/DirectDocValuesProducer#readFields(IndexInput).mjava","sourceNew":"  private int readFields(IndexInput meta, FieldInfos infos) throws IOException {\n    int numEntries = 0;\n    int fieldNumber = meta.readVInt();\n    while (fieldNumber != -1) {\n      numEntries++;\n      FieldInfo info = infos.fieldInfo(fieldNumber);\n      int fieldType = meta.readByte();\n      if (fieldType == NUMBER) {\n        numerics.put(info.name, readNumericEntry(meta));\n      } else if (fieldType == BYTES) {\n        binaries.put(info.name, readBinaryEntry(meta));\n      } else if (fieldType == SORTED) {\n        SortedEntry entry = readSortedEntry(meta);\n        sorteds.put(info.name, entry);\n        binaries.put(info.name, entry.values);\n      } else if (fieldType == SORTED_SET) {\n        SortedSetEntry entry = readSortedSetEntry(meta, false);\n        sortedSets.put(info.name, entry);\n        binaries.put(info.name, entry.values);\n      } else if (fieldType == SORTED_SET_SINGLETON) {\n        SortedSetEntry entry = readSortedSetEntry(meta, true);\n        sortedSets.put(info.name, entry);\n        binaries.put(info.name, entry.values);\n      } else if (fieldType == SORTED_NUMERIC) {\n        SortedNumericEntry entry = readSortedNumericEntry(meta, false);\n        sortedNumerics.put(info.name, entry);\n      } else if (fieldType == SORTED_NUMERIC_SINGLETON) {\n        SortedNumericEntry entry = readSortedNumericEntry(meta, true);\n        sortedNumerics.put(info.name, entry);\n      } else {\n        throw new CorruptIndexException(\"invalid entry type: \" + fieldType + \", field= \" + info.name + \", input=\" + meta);\n      }\n      fieldNumber = meta.readVInt();\n    }\n    return numEntries;\n  }\n\n","sourceOld":"  private void readFields(IndexInput meta) throws IOException {\n    int fieldNumber = meta.readVInt();\n    while (fieldNumber != -1) {\n      int fieldType = meta.readByte();\n      if (fieldType == NUMBER) {\n        numerics.put(fieldNumber, readNumericEntry(meta));\n      } else if (fieldType == BYTES) {\n        binaries.put(fieldNumber, readBinaryEntry(meta));\n      } else if (fieldType == SORTED) {\n        SortedEntry entry = readSortedEntry(meta);\n        sorteds.put(fieldNumber, entry);\n        binaries.put(fieldNumber, entry.values);\n      } else if (fieldType == SORTED_SET) {\n        SortedSetEntry entry = readSortedSetEntry(meta, false);\n        sortedSets.put(fieldNumber, entry);\n        binaries.put(fieldNumber, entry.values);\n      } else if (fieldType == SORTED_SET_SINGLETON) {\n        SortedSetEntry entry = readSortedSetEntry(meta, true);\n        sortedSets.put(fieldNumber, entry);\n        binaries.put(fieldNumber, entry.values);\n      } else if (fieldType == SORTED_NUMERIC) {\n        SortedNumericEntry entry = readSortedNumericEntry(meta, false);\n        sortedNumerics.put(fieldNumber, entry);\n      } else if (fieldType == SORTED_NUMERIC_SINGLETON) {\n        SortedNumericEntry entry = readSortedNumericEntry(meta, true);\n        sortedNumerics.put(fieldNumber, entry);\n      } else {\n        throw new CorruptIndexException(\"invalid entry type: \" + fieldType + \", input=\" + meta);\n      }\n      fieldNumber = meta.readVInt();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9a70ce9bddc6f985feb8e5e182aebe20872328d4","date":1411172748,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/codecs/src/java/org/apache/lucene/codecs/memory/DirectDocValuesProducer#readFields(IndexInput,FieldInfos).mjava","pathOld":"lucene/codecs/src/java/org/apache/lucene/codecs/memory/DirectDocValuesProducer#readFields(IndexInput,FieldInfos).mjava","sourceNew":"  private int readFields(IndexInput meta, FieldInfos infos) throws IOException {\n    int numEntries = 0;\n    int fieldNumber = meta.readVInt();\n    while (fieldNumber != -1) {\n      numEntries++;\n      FieldInfo info = infos.fieldInfo(fieldNumber);\n      int fieldType = meta.readByte();\n      if (fieldType == NUMBER) {\n        numerics.put(info.name, readNumericEntry(meta));\n      } else if (fieldType == BYTES) {\n        binaries.put(info.name, readBinaryEntry(meta));\n      } else if (fieldType == SORTED) {\n        SortedEntry entry = readSortedEntry(meta);\n        sorteds.put(info.name, entry);\n        binaries.put(info.name, entry.values);\n      } else if (fieldType == SORTED_SET) {\n        SortedSetEntry entry = readSortedSetEntry(meta, false);\n        sortedSets.put(info.name, entry);\n        binaries.put(info.name, entry.values);\n      } else if (fieldType == SORTED_SET_SINGLETON) {\n        SortedSetEntry entry = readSortedSetEntry(meta, true);\n        sortedSets.put(info.name, entry);\n        binaries.put(info.name, entry.values);\n      } else if (fieldType == SORTED_NUMERIC) {\n        SortedNumericEntry entry = readSortedNumericEntry(meta, false);\n        sortedNumerics.put(info.name, entry);\n      } else if (fieldType == SORTED_NUMERIC_SINGLETON) {\n        SortedNumericEntry entry = readSortedNumericEntry(meta, true);\n        sortedNumerics.put(info.name, entry);\n      } else {\n        throw new CorruptIndexException(\"invalid entry type: \" + fieldType + \", field= \" + info.name, meta);\n      }\n      fieldNumber = meta.readVInt();\n    }\n    return numEntries;\n  }\n\n","sourceOld":"  private int readFields(IndexInput meta, FieldInfos infos) throws IOException {\n    int numEntries = 0;\n    int fieldNumber = meta.readVInt();\n    while (fieldNumber != -1) {\n      numEntries++;\n      FieldInfo info = infos.fieldInfo(fieldNumber);\n      int fieldType = meta.readByte();\n      if (fieldType == NUMBER) {\n        numerics.put(info.name, readNumericEntry(meta));\n      } else if (fieldType == BYTES) {\n        binaries.put(info.name, readBinaryEntry(meta));\n      } else if (fieldType == SORTED) {\n        SortedEntry entry = readSortedEntry(meta);\n        sorteds.put(info.name, entry);\n        binaries.put(info.name, entry.values);\n      } else if (fieldType == SORTED_SET) {\n        SortedSetEntry entry = readSortedSetEntry(meta, false);\n        sortedSets.put(info.name, entry);\n        binaries.put(info.name, entry.values);\n      } else if (fieldType == SORTED_SET_SINGLETON) {\n        SortedSetEntry entry = readSortedSetEntry(meta, true);\n        sortedSets.put(info.name, entry);\n        binaries.put(info.name, entry.values);\n      } else if (fieldType == SORTED_NUMERIC) {\n        SortedNumericEntry entry = readSortedNumericEntry(meta, false);\n        sortedNumerics.put(info.name, entry);\n      } else if (fieldType == SORTED_NUMERIC_SINGLETON) {\n        SortedNumericEntry entry = readSortedNumericEntry(meta, true);\n        sortedNumerics.put(info.name, entry);\n      } else {\n        throw new CorruptIndexException(\"invalid entry type: \" + fieldType + \", field= \" + info.name + \", input=\" + meta);\n      }\n      fieldNumber = meta.readVInt();\n    }\n    return numEntries;\n  }\n\n","bugFix":["0936055c0eed56be3e4ae5c9db5b0e355390736a"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"74f18fb78980c55a781fd9fdc505634171059b1d","date":1567674462,"type":4,"author":"Adrien Grand","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/codecs/src/java/org/apache/lucene/codecs/memory/DirectDocValuesProducer#readFields(IndexInput,FieldInfos).mjava","sourceNew":null,"sourceOld":"  private int readFields(IndexInput meta, FieldInfos infos) throws IOException {\n    int numEntries = 0;\n    int fieldNumber = meta.readVInt();\n    while (fieldNumber != -1) {\n      numEntries++;\n      FieldInfo info = infos.fieldInfo(fieldNumber);\n      int fieldType = meta.readByte();\n      if (fieldType == NUMBER) {\n        numerics.put(info.name, readNumericEntry(meta));\n      } else if (fieldType == BYTES) {\n        binaries.put(info.name, readBinaryEntry(meta));\n      } else if (fieldType == SORTED) {\n        SortedEntry entry = readSortedEntry(meta);\n        sorteds.put(info.name, entry);\n        binaries.put(info.name, entry.values);\n      } else if (fieldType == SORTED_SET) {\n        SortedSetEntry entry = readSortedSetEntry(meta, false);\n        sortedSets.put(info.name, entry);\n        binaries.put(info.name, entry.values);\n      } else if (fieldType == SORTED_SET_SINGLETON) {\n        SortedSetEntry entry = readSortedSetEntry(meta, true);\n        sortedSets.put(info.name, entry);\n        binaries.put(info.name, entry.values);\n      } else if (fieldType == SORTED_NUMERIC) {\n        SortedNumericEntry entry = readSortedNumericEntry(meta, false);\n        sortedNumerics.put(info.name, entry);\n      } else if (fieldType == SORTED_NUMERIC_SINGLETON) {\n        SortedNumericEntry entry = readSortedNumericEntry(meta, true);\n        sortedNumerics.put(info.name, entry);\n      } else {\n        throw new CorruptIndexException(\"invalid entry type: \" + fieldType + \", field= \" + info.name, meta);\n      }\n      fieldNumber = meta.readVInt();\n    }\n    return numEntries;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"9a70ce9bddc6f985feb8e5e182aebe20872328d4":["0936055c0eed56be3e4ae5c9db5b0e355390736a"],"74f18fb78980c55a781fd9fdc505634171059b1d":["9a70ce9bddc6f985feb8e5e182aebe20872328d4"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"0936055c0eed56be3e4ae5c9db5b0e355390736a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["74f18fb78980c55a781fd9fdc505634171059b1d"]},"commit2Childs":{"9a70ce9bddc6f985feb8e5e182aebe20872328d4":["74f18fb78980c55a781fd9fdc505634171059b1d"],"74f18fb78980c55a781fd9fdc505634171059b1d":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["0936055c0eed56be3e4ae5c9db5b0e355390736a"],"0936055c0eed56be3e4ae5c9db5b0e355390736a":["9a70ce9bddc6f985feb8e5e182aebe20872328d4"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}