{"path":"lucene/core/src/java/org/apache/lucene/search/TermInSetQuery#toString(String).mjava","commits":[{"id":"8d73510b39df24d6b65de48e56f8dccb136b9d01","date":1483971905,"type":1,"author":"Alan Woodward","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/TermInSetQuery#toString(String).mjava","pathOld":"lucene/queries/src/java/org/apache/lucene/queries/TermsQuery#toString(String).mjava","sourceNew":"  @Override\n  public String toString(String defaultField) {\n    StringBuilder builder = new StringBuilder();\n    boolean first = true;\n    TermIterator iterator = termData.iterator();\n    for (BytesRef term = iterator.next(); term != null; term = iterator.next()) {\n      if (!first) {\n        builder.append(' ');\n      }\n      first = false;\n      builder.append(new Term(iterator.field(), term).toString());\n    }\n\n    return builder.toString();\n  }\n\n","sourceOld":"  @Override\n  public String toString(String defaultField) {\n    StringBuilder builder = new StringBuilder();\n    boolean first = true;\n    TermIterator iterator = termData.iterator();\n    for (BytesRef term = iterator.next(); term != null; term = iterator.next()) {\n      if (!first) {\n        builder.append(' ');\n      }\n      first = false;\n      builder.append(new Term(iterator.field(), term).toString());\n    }\n\n    return builder.toString();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"09ab8ee44ca898536770d0106a7c0ee4be4f0eb7","date":1484239864,"type":1,"author":"Kevin Risden","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/search/TermInSetQuery#toString(String).mjava","pathOld":"lucene/queries/src/java/org/apache/lucene/queries/TermsQuery#toString(String).mjava","sourceNew":"  @Override\n  public String toString(String defaultField) {\n    StringBuilder builder = new StringBuilder();\n    boolean first = true;\n    TermIterator iterator = termData.iterator();\n    for (BytesRef term = iterator.next(); term != null; term = iterator.next()) {\n      if (!first) {\n        builder.append(' ');\n      }\n      first = false;\n      builder.append(new Term(iterator.field(), term).toString());\n    }\n\n    return builder.toString();\n  }\n\n","sourceOld":"  @Override\n  public String toString(String defaultField) {\n    StringBuilder builder = new StringBuilder();\n    boolean first = true;\n    TermIterator iterator = termData.iterator();\n    for (BytesRef term = iterator.next(); term != null; term = iterator.next()) {\n      if (!first) {\n        builder.append(' ');\n      }\n      first = false;\n      builder.append(new Term(iterator.field(), term).toString());\n    }\n\n    return builder.toString();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fd90ffc8896077bd68387a0f6275a15de18aeeab","date":1513882644,"type":3,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/TermInSetQuery#toString(String).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/TermInSetQuery#toString(String).mjava","sourceNew":"  @Override\n  public String toString(String defaultField) {\n    StringBuilder builder = new StringBuilder();\n    builder.append(field);\n    builder.append(\":(\");\n\n    TermIterator iterator = termData.iterator();\n    boolean first = true;\n    for (BytesRef term = iterator.next(); term != null; term = iterator.next()) {\n      if (!first) {\n        builder.append(' ');\n      }\n      first = false;\n      builder.append(Term.toString(term));\n    }\n    builder.append(')');\n\n    return builder.toString();\n  }\n\n","sourceOld":"  @Override\n  public String toString(String defaultField) {\n    StringBuilder builder = new StringBuilder();\n    boolean first = true;\n    TermIterator iterator = termData.iterator();\n    for (BytesRef term = iterator.next(); term != null; term = iterator.next()) {\n      if (!first) {\n        builder.append(' ');\n      }\n      first = false;\n      builder.append(new Term(iterator.field(), term).toString());\n    }\n\n    return builder.toString();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"fd90ffc8896077bd68387a0f6275a15de18aeeab":["8d73510b39df24d6b65de48e56f8dccb136b9d01"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"8d73510b39df24d6b65de48e56f8dccb136b9d01":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"09ab8ee44ca898536770d0106a7c0ee4be4f0eb7":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","8d73510b39df24d6b65de48e56f8dccb136b9d01"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["fd90ffc8896077bd68387a0f6275a15de18aeeab"]},"commit2Childs":{"fd90ffc8896077bd68387a0f6275a15de18aeeab":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["8d73510b39df24d6b65de48e56f8dccb136b9d01","09ab8ee44ca898536770d0106a7c0ee4be4f0eb7"],"8d73510b39df24d6b65de48e56f8dccb136b9d01":["fd90ffc8896077bd68387a0f6275a15de18aeeab","09ab8ee44ca898536770d0106a7c0ee4be4f0eb7"],"09ab8ee44ca898536770d0106a7c0ee4be4f0eb7":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["09ab8ee44ca898536770d0106a7c0ee4be4f0eb7","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}