{"path":"lucene/core/src/test/org/apache/lucene/util/TestFixedLengthBytesRefArray#testBasic().mjava","commits":[{"id":"ee52259641568741fbc6ecc51284431e2a36475c","date":1459331525,"type":0,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/util/TestFixedLengthBytesRefArray#testBasic().mjava","pathOld":"/dev/null","sourceNew":"  public void testBasic() throws Exception {\n    FixedLengthBytesRefArray a = new FixedLengthBytesRefArray(Integer.BYTES);\n    int numValues = 100;\n    for(int i=0;i<numValues;i++) {      \n      byte[] bytes = {0, 0, 0, (byte) (10-i)};\n      a.append(new BytesRef(bytes));\n    }\n\n    BytesRefIterator iterator = a.iterator(new Comparator<BytesRef>() {\n        @Override\n        public int compare(BytesRef a, BytesRef b) {\n          return a.compareTo(b);\n        }\n      });\n\n    BytesRef last = null;\n\n    int count = 0;\n    while (true) {\n      BytesRef bytes = iterator.next();\n      if (bytes == null) {\n        break;\n      }\n      if (last != null) {\n        assertTrue(\"count=\" + count + \" last=\" + last + \" bytes=\" + bytes, last.compareTo(bytes) < 0);\n      }\n      last = BytesRef.deepCopyOf(bytes);\n      count++;\n    }\n\n    assertEquals(numValues, count);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"ee52259641568741fbc6ecc51284431e2a36475c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["ee52259641568741fbc6ecc51284431e2a36475c"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["ee52259641568741fbc6ecc51284431e2a36475c"],"ee52259641568741fbc6ecc51284431e2a36475c":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}