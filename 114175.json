{"path":"lucene/analysis/common/src/test/org/apache/lucene/analysis/lv/TestLatvianStemmer#testNouns5().mjava","commits":[{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/lv/TestLatvianStemmer#testNouns5().mjava","pathOld":"modules/analysis/common/src/test/org/apache/lucene/analysis/lv/TestLatvianStemmer#testNouns5().mjava","sourceNew":"  /**\n   * Genitive plural forms with (s,t) -> š and (d,z) -> ž\n   * will not conflate due to ambiguity.\n   */\n  public void testNouns5() throws IOException {\n    // decl V\n    // l -> ļ palatalization\n    checkOneTerm(a, \"egle\",  \"egl\"); // nom. sing.\n    checkOneTerm(a, \"egles\", \"egl\"); // nom. pl.\n    checkOneTerm(a, \"egles\", \"egl\"); // gen. sing.\n    checkOneTerm(a, \"egļu\",  \"egl\"); // gen. pl.\n    checkOneTerm(a, \"eglei\", \"egl\"); // dat. sing.\n    checkOneTerm(a, \"eglēm\", \"egl\"); // dat. pl.\n    checkOneTerm(a, \"egli\",  \"egl\"); // acc. sing.\n    checkOneTerm(a, \"egles\", \"egl\"); // acc. pl.\n    checkOneTerm(a, \"eglē\",  \"egl\"); // loc. sing.\n    checkOneTerm(a, \"eglēs\", \"egl\"); // loc. pl.\n    checkOneTerm(a, \"egle\",  \"egl\"); // voc. sing.\n    checkOneTerm(a, \"egles\", \"egl\"); // voc. pl.\n  }\n\n","sourceOld":"  /**\n   * Genitive plural forms with (s,t) -> š and (d,z) -> ž\n   * will not conflate due to ambiguity.\n   */\n  public void testNouns5() throws IOException {\n    // decl V\n    // l -> ļ palatalization\n    checkOneTerm(a, \"egle\",  \"egl\"); // nom. sing.\n    checkOneTerm(a, \"egles\", \"egl\"); // nom. pl.\n    checkOneTerm(a, \"egles\", \"egl\"); // gen. sing.\n    checkOneTerm(a, \"egļu\",  \"egl\"); // gen. pl.\n    checkOneTerm(a, \"eglei\", \"egl\"); // dat. sing.\n    checkOneTerm(a, \"eglēm\", \"egl\"); // dat. pl.\n    checkOneTerm(a, \"egli\",  \"egl\"); // acc. sing.\n    checkOneTerm(a, \"egles\", \"egl\"); // acc. pl.\n    checkOneTerm(a, \"eglē\",  \"egl\"); // loc. sing.\n    checkOneTerm(a, \"eglēs\", \"egl\"); // loc. pl.\n    checkOneTerm(a, \"egle\",  \"egl\"); // voc. sing.\n    checkOneTerm(a, \"egles\", \"egl\"); // voc. pl.\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b1eb427f2c6beed80d1724555fc1db003ccf3030","date":1417137397,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/lv/TestLatvianStemmer#testNouns5().mjava","pathOld":"lucene/analysis/common/src/test/org/apache/lucene/analysis/lv/TestLatvianStemmer#testNouns5().mjava","sourceNew":"  /**\n   * Genitive plural forms with (s,t) -&gt; š and (d,z) -&gt; ž\n   * will not conflate due to ambiguity.\n   */\n  public void testNouns5() throws IOException {\n    // decl V\n    // l -> ļ palatalization\n    checkOneTerm(a, \"egle\",  \"egl\"); // nom. sing.\n    checkOneTerm(a, \"egles\", \"egl\"); // nom. pl.\n    checkOneTerm(a, \"egles\", \"egl\"); // gen. sing.\n    checkOneTerm(a, \"egļu\",  \"egl\"); // gen. pl.\n    checkOneTerm(a, \"eglei\", \"egl\"); // dat. sing.\n    checkOneTerm(a, \"eglēm\", \"egl\"); // dat. pl.\n    checkOneTerm(a, \"egli\",  \"egl\"); // acc. sing.\n    checkOneTerm(a, \"egles\", \"egl\"); // acc. pl.\n    checkOneTerm(a, \"eglē\",  \"egl\"); // loc. sing.\n    checkOneTerm(a, \"eglēs\", \"egl\"); // loc. pl.\n    checkOneTerm(a, \"egle\",  \"egl\"); // voc. sing.\n    checkOneTerm(a, \"egles\", \"egl\"); // voc. pl.\n  }\n\n","sourceOld":"  /**\n   * Genitive plural forms with (s,t) -> š and (d,z) -> ž\n   * will not conflate due to ambiguity.\n   */\n  public void testNouns5() throws IOException {\n    // decl V\n    // l -> ļ palatalization\n    checkOneTerm(a, \"egle\",  \"egl\"); // nom. sing.\n    checkOneTerm(a, \"egles\", \"egl\"); // nom. pl.\n    checkOneTerm(a, \"egles\", \"egl\"); // gen. sing.\n    checkOneTerm(a, \"egļu\",  \"egl\"); // gen. pl.\n    checkOneTerm(a, \"eglei\", \"egl\"); // dat. sing.\n    checkOneTerm(a, \"eglēm\", \"egl\"); // dat. pl.\n    checkOneTerm(a, \"egli\",  \"egl\"); // acc. sing.\n    checkOneTerm(a, \"egles\", \"egl\"); // acc. pl.\n    checkOneTerm(a, \"eglē\",  \"egl\"); // loc. sing.\n    checkOneTerm(a, \"eglēs\", \"egl\"); // loc. pl.\n    checkOneTerm(a, \"egle\",  \"egl\"); // voc. sing.\n    checkOneTerm(a, \"egles\", \"egl\"); // voc. pl.\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b1eb427f2c6beed80d1724555fc1db003ccf3030":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b1eb427f2c6beed80d1724555fc1db003ccf3030"]},"commit2Childs":{"b1eb427f2c6beed80d1724555fc1db003ccf3030":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["b1eb427f2c6beed80d1724555fc1db003ccf3030"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}