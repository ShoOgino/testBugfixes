{"path":"lucene/monitor/src/java/org/apache/lucene/monitor/MultipassTermFilteredPresearcher#MultipassTermFilteredPresearcher(int,float,TermWeightor,List[CustomQueryHandler],Set[String]).mjava","commits":[{"id":"7c529b189e09de25455d82ebd7260748cf11ee14","date":1560415257,"type":0,"author":"Alan Woodward","isMerge":false,"pathNew":"lucene/monitor/src/java/org/apache/lucene/monitor/MultipassTermFilteredPresearcher#MultipassTermFilteredPresearcher(int,float,TermWeightor,List[CustomQueryHandler],Set[String]).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Construct a new MultipassTermFilteredPresearcher\n   *\n   * @param passes        the number of times a query should be indexed\n   * @param minWeight     the minimum weight a querytree should be advanced over\n   * @param weightor      the TreeWeightor to use\n   * @param queryHandlers a list of custom query handlers\n   * @param filterFields  a set of fields to use as filters\n   */\n  public MultipassTermFilteredPresearcher(int passes, float minWeight, TermWeightor weightor,\n                                          List<CustomQueryHandler> queryHandlers, Set<String> filterFields) {\n    super(weightor, queryHandlers, filterFields);\n    this.passes = passes;\n    this.minWeight = minWeight;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"7c529b189e09de25455d82ebd7260748cf11ee14":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["7c529b189e09de25455d82ebd7260748cf11ee14"]},"commit2Childs":{"7c529b189e09de25455d82ebd7260748cf11ee14":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["7c529b189e09de25455d82ebd7260748cf11ee14"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}