{"path":"lucene/facet/src/java/org/apache/lucene/facet/taxonomy/directory/DirectoryTaxonomyWriter#addToCache(CategoryPath,int).mjava","commits":[{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/taxonomy/directory/DirectoryTaxonomyWriter#addToCache(CategoryPath,int).mjava","pathOld":"modules/facet/src/java/org/apache/lucene/facet/taxonomy/directory/DirectoryTaxonomyWriter#addToCache(CategoryPath,int).mjava","sourceNew":"  private void addToCache(CategoryPath categoryPath, int id)\n  throws CorruptIndexException, IOException {\n    if (cache.put(categoryPath, id)) {\n      // If cache.put() returned true, it means the cache was limited in\n      // size, became full, so parts of it had to be cleared.\n      // Unfortunately we don't know which part was cleared - it is\n      // possible that a relatively-new category that hasn't yet been\n      // committed to disk (and therefore isn't yet visible in our\n      // \"reader\") was deleted from the cache, and therefore we must\n      // now refresh the reader.\n      // Because this is a slow operation, cache implementations are\n      // expected not to delete entries one-by-one but rather in bulk\n      // (LruTaxonomyWriterCache removes the 2/3rd oldest entries).\n      refreshReader();\n      cacheIsComplete = false;\n    }\n  }\n\n","sourceOld":"  private void addToCache(CategoryPath categoryPath, int id)\n  throws CorruptIndexException, IOException {\n    if (cache.put(categoryPath, id)) {\n      // If cache.put() returned true, it means the cache was limited in\n      // size, became full, so parts of it had to be cleared.\n      // Unfortunately we don't know which part was cleared - it is\n      // possible that a relatively-new category that hasn't yet been\n      // committed to disk (and therefore isn't yet visible in our\n      // \"reader\") was deleted from the cache, and therefore we must\n      // now refresh the reader.\n      // Because this is a slow operation, cache implementations are\n      // expected not to delete entries one-by-one but rather in bulk\n      // (LruTaxonomyWriterCache removes the 2/3rd oldest entries).\n      refreshReader();\n      cacheIsComplete = false;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"533890d1266aa8169162ec556395d0c5d0377566","date":1337173867,"type":3,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/taxonomy/directory/DirectoryTaxonomyWriter#addToCache(CategoryPath,int).mjava","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/taxonomy/directory/DirectoryTaxonomyWriter#addToCache(CategoryPath,int).mjava","sourceNew":"  private void addToCache(CategoryPath categoryPath, int id) throws IOException {\n    if (cache.put(categoryPath, id)) {\n      // If cache.put() returned true, it means the cache was limited in\n      // size, became full, so parts of it had to be cleared.\n      // Unfortunately we don't know which part was cleared - it is\n      // possible that a relatively-new category that hasn't yet been\n      // committed to disk (and therefore isn't yet visible in our\n      // \"reader\") was deleted from the cache, and therefore we must\n      // now refresh the reader.\n      // Because this is a slow operation, cache implementations are\n      // expected not to delete entries one-by-one but rather in bulk\n      // (LruTaxonomyWriterCache removes the 2/3rd oldest entries).\n      refreshReader();\n      cacheIsComplete = false;\n    }\n  }\n\n","sourceOld":"  private void addToCache(CategoryPath categoryPath, int id)\n  throws CorruptIndexException, IOException {\n    if (cache.put(categoryPath, id)) {\n      // If cache.put() returned true, it means the cache was limited in\n      // size, became full, so parts of it had to be cleared.\n      // Unfortunately we don't know which part was cleared - it is\n      // possible that a relatively-new category that hasn't yet been\n      // committed to disk (and therefore isn't yet visible in our\n      // \"reader\") was deleted from the cache, and therefore we must\n      // now refresh the reader.\n      // Because this is a slow operation, cache implementations are\n      // expected not to delete entries one-by-one but rather in bulk\n      // (LruTaxonomyWriterCache removes the 2/3rd oldest entries).\n      refreshReader();\n      cacheIsComplete = false;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"119bc02554a192b2954b73d79389ec441257b624","date":1337232699,"type":3,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/taxonomy/directory/DirectoryTaxonomyWriter#addToCache(CategoryPath,int).mjava","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/taxonomy/directory/DirectoryTaxonomyWriter#addToCache(CategoryPath,int).mjava","sourceNew":"  private void addToCache(CategoryPath categoryPath, int id) throws IOException {\n    if (cache.put(categoryPath, id)) {\n      // If cache.put() returned true, it means the cache was limited in\n      // size, became full, so parts of it had to be cleared.\n      // Unfortunately we don't know which part was cleared - it is\n      // possible that a relatively-new category that hasn't yet been\n      // committed to disk (and therefore isn't yet visible in our\n      // \"reader\") was deleted from the cache, and therefore we must\n      // now refresh the reader.\n      // Because this is a slow operation, cache implementations are\n      // expected not to delete entries one-by-one but rather in bulk\n      // (LruTaxonomyWriterCache removes the 2/3rd oldest entries).\n      refreshInternalReader();\n      cacheIsComplete = false;\n    }\n  }\n\n","sourceOld":"  private void addToCache(CategoryPath categoryPath, int id) throws IOException {\n    if (cache.put(categoryPath, id)) {\n      // If cache.put() returned true, it means the cache was limited in\n      // size, became full, so parts of it had to be cleared.\n      // Unfortunately we don't know which part was cleared - it is\n      // possible that a relatively-new category that hasn't yet been\n      // committed to disk (and therefore isn't yet visible in our\n      // \"reader\") was deleted from the cache, and therefore we must\n      // now refresh the reader.\n      // Because this is a slow operation, cache implementations are\n      // expected not to delete entries one-by-one but rather in bulk\n      // (LruTaxonomyWriterCache removes the 2/3rd oldest entries).\n      refreshReader();\n      cacheIsComplete = false;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ef0d8a69209261514c5739c770bba706c2308450","date":1337607597,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/taxonomy/directory/DirectoryTaxonomyWriter#addToCache(CategoryPath,int).mjava","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/taxonomy/directory/DirectoryTaxonomyWriter#addToCache(CategoryPath,int).mjava","sourceNew":"  private void addToCache(CategoryPath categoryPath, int id) throws IOException {\n    if (cache.put(categoryPath, id)) {\n      // If cache.put() returned true, it means the cache was limited in\n      // size, became full, so parts of it had to be cleared.\n      // Unfortunately we don't know which part was cleared - it is\n      // possible that a relatively-new category that hasn't yet been\n      // committed to disk (and therefore isn't yet visible in our\n      // \"reader\") was deleted from the cache, and therefore we must\n      // now refresh the reader.\n      // Because this is a slow operation, cache implementations are\n      // expected not to delete entries one-by-one but rather in bulk\n      // (LruTaxonomyWriterCache removes the 2/3rd oldest entries).\n      refreshInternalReader();\n      cacheIsComplete = false;\n    }\n  }\n\n","sourceOld":"  private void addToCache(CategoryPath categoryPath, int id)\n  throws CorruptIndexException, IOException {\n    if (cache.put(categoryPath, id)) {\n      // If cache.put() returned true, it means the cache was limited in\n      // size, became full, so parts of it had to be cleared.\n      // Unfortunately we don't know which part was cleared - it is\n      // possible that a relatively-new category that hasn't yet been\n      // committed to disk (and therefore isn't yet visible in our\n      // \"reader\") was deleted from the cache, and therefore we must\n      // now refresh the reader.\n      // Because this is a slow operation, cache implementations are\n      // expected not to delete entries one-by-one but rather in bulk\n      // (LruTaxonomyWriterCache removes the 2/3rd oldest entries).\n      refreshReader();\n      cacheIsComplete = false;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8b7a1bc6030c258e47d63eff3455a2b1bbf32683","date":1339494023,"type":3,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/taxonomy/directory/DirectoryTaxonomyWriter#addToCache(CategoryPath,int).mjava","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/taxonomy/directory/DirectoryTaxonomyWriter#addToCache(CategoryPath,int).mjava","sourceNew":"  private void addToCache(CategoryPath categoryPath, int id) throws IOException {\n    if (cache.put(categoryPath, id)) {\n      // If cache.put() returned true, it means the cache was limited in\n      // size, became full, and parts of it had to be evicted. It is\n      // possible that a relatively-new category that isn't yet visible\n      // to our 'reader' was evicted, and therefore we must now refresh \n      // the reader.\n      refreshReaderManager();\n      cacheIsComplete = false;\n    }\n  }\n\n","sourceOld":"  private void addToCache(CategoryPath categoryPath, int id) throws IOException {\n    if (cache.put(categoryPath, id)) {\n      // If cache.put() returned true, it means the cache was limited in\n      // size, became full, so parts of it had to be cleared.\n      // Unfortunately we don't know which part was cleared - it is\n      // possible that a relatively-new category that hasn't yet been\n      // committed to disk (and therefore isn't yet visible in our\n      // \"reader\") was deleted from the cache, and therefore we must\n      // now refresh the reader.\n      // Because this is a slow operation, cache implementations are\n      // expected not to delete entries one-by-one but rather in bulk\n      // (LruTaxonomyWriterCache removes the 2/3rd oldest entries).\n      refreshInternalReader();\n      cacheIsComplete = false;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c190847801a50f4dd20fd639bdc29b54ea3b288b","date":1384461522,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/taxonomy/directory/DirectoryTaxonomyWriter#addToCache(FacetLabel,int).mjava","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/taxonomy/directory/DirectoryTaxonomyWriter#addToCache(CategoryPath,int).mjava","sourceNew":"  private void addToCache(FacetLabel categoryPath, int id) throws IOException {\n    if (cache.put(categoryPath, id)) {\n      // If cache.put() returned true, it means the cache was limited in\n      // size, became full, and parts of it had to be evicted. It is\n      // possible that a relatively-new category that isn't yet visible\n      // to our 'reader' was evicted, and therefore we must now refresh \n      // the reader.\n      refreshReaderManager();\n      cacheIsComplete = false;\n    }\n  }\n\n","sourceOld":"  private void addToCache(CategoryPath categoryPath, int id) throws IOException {\n    if (cache.put(categoryPath, id)) {\n      // If cache.put() returned true, it means the cache was limited in\n      // size, became full, and parts of it had to be evicted. It is\n      // possible that a relatively-new category that isn't yet visible\n      // to our 'reader' was evicted, and therefore we must now refresh \n      // the reader.\n      refreshReaderManager();\n      cacheIsComplete = false;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3cc728b07df73b197e6d940d27f9b08b63918f13","date":1388834348,"type":4,"author":"Michael McCandless","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/taxonomy/directory/DirectoryTaxonomyWriter#addToCache(CategoryPath,int).mjava","sourceNew":null,"sourceOld":"  private void addToCache(CategoryPath categoryPath, int id) throws IOException {\n    if (cache.put(categoryPath, id)) {\n      // If cache.put() returned true, it means the cache was limited in\n      // size, became full, and parts of it had to be evicted. It is\n      // possible that a relatively-new category that isn't yet visible\n      // to our 'reader' was evicted, and therefore we must now refresh \n      // the reader.\n      refreshReaderManager();\n      cacheIsComplete = false;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"119bc02554a192b2954b73d79389ec441257b624":["533890d1266aa8169162ec556395d0c5d0377566"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"8b7a1bc6030c258e47d63eff3455a2b1bbf32683":["119bc02554a192b2954b73d79389ec441257b624"],"3cc728b07df73b197e6d940d27f9b08b63918f13":["8b7a1bc6030c258e47d63eff3455a2b1bbf32683","c190847801a50f4dd20fd639bdc29b54ea3b288b"],"533890d1266aa8169162ec556395d0c5d0377566":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"ef0d8a69209261514c5739c770bba706c2308450":["b89678825b68eccaf09e6ab71675fc0b0af1e099","119bc02554a192b2954b73d79389ec441257b624"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3cc728b07df73b197e6d940d27f9b08b63918f13"],"c190847801a50f4dd20fd639bdc29b54ea3b288b":["8b7a1bc6030c258e47d63eff3455a2b1bbf32683"]},"commit2Childs":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["533890d1266aa8169162ec556395d0c5d0377566","ef0d8a69209261514c5739c770bba706c2308450"],"119bc02554a192b2954b73d79389ec441257b624":["8b7a1bc6030c258e47d63eff3455a2b1bbf32683","ef0d8a69209261514c5739c770bba706c2308450"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"8b7a1bc6030c258e47d63eff3455a2b1bbf32683":["3cc728b07df73b197e6d940d27f9b08b63918f13","c190847801a50f4dd20fd639bdc29b54ea3b288b"],"3cc728b07df73b197e6d940d27f9b08b63918f13":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"533890d1266aa8169162ec556395d0c5d0377566":["119bc02554a192b2954b73d79389ec441257b624"],"ef0d8a69209261514c5739c770bba706c2308450":[],"c190847801a50f4dd20fd639bdc29b54ea3b288b":["3cc728b07df73b197e6d940d27f9b08b63918f13"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["ef0d8a69209261514c5739c770bba706c2308450","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}