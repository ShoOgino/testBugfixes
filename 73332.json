{"path":"lucene/core/src/java/org/apache/lucene/util/packed/BulkOperationPacked63#decode(byte[],int,long[],int,int).mjava","commits":[{"id":"3edb451c214b0d41e9d16514e3a1d6984ca2ca5f","date":1345677220,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/packed/BulkOperationPacked63#decode(byte[],int,long[],int,int).mjava","pathOld":"/dev/null","sourceNew":"    public void decode(byte[] blocks, int blocksOffset, long[] values, int valuesOffset, int iterations) {\n      assert blocksOffset + 8 * iterations * blockCount() <= blocks.length;\n      assert valuesOffset + iterations * valueCount() <= values.length;\n      for (int i = 0; i < iterations; ++i) {\n        final long byte0 = blocks[blocksOffset++] & 0xFF;\n        final long byte1 = blocks[blocksOffset++] & 0xFF;\n        final long byte2 = blocks[blocksOffset++] & 0xFF;\n        final long byte3 = blocks[blocksOffset++] & 0xFF;\n        final long byte4 = blocks[blocksOffset++] & 0xFF;\n        final long byte5 = blocks[blocksOffset++] & 0xFF;\n        final long byte6 = blocks[blocksOffset++] & 0xFF;\n        final long byte7 = blocks[blocksOffset++] & 0xFF;\n        values[valuesOffset++] = (byte0 << 55) | (byte1 << 47) | (byte2 << 39) | (byte3 << 31) | (byte4 << 23) | (byte5 << 15) | (byte6 << 7) | (byte7 >>> 1);\n        final long byte8 = blocks[blocksOffset++] & 0xFF;\n        final long byte9 = blocks[blocksOffset++] & 0xFF;\n        final long byte10 = blocks[blocksOffset++] & 0xFF;\n        final long byte11 = blocks[blocksOffset++] & 0xFF;\n        final long byte12 = blocks[blocksOffset++] & 0xFF;\n        final long byte13 = blocks[blocksOffset++] & 0xFF;\n        final long byte14 = blocks[blocksOffset++] & 0xFF;\n        final long byte15 = blocks[blocksOffset++] & 0xFF;\n        values[valuesOffset++] = ((byte7 & 1) << 62) | (byte8 << 54) | (byte9 << 46) | (byte10 << 38) | (byte11 << 30) | (byte12 << 22) | (byte13 << 14) | (byte14 << 6) | (byte15 >>> 2);\n        final long byte16 = blocks[blocksOffset++] & 0xFF;\n        final long byte17 = blocks[blocksOffset++] & 0xFF;\n        final long byte18 = blocks[blocksOffset++] & 0xFF;\n        final long byte19 = blocks[blocksOffset++] & 0xFF;\n        final long byte20 = blocks[blocksOffset++] & 0xFF;\n        final long byte21 = blocks[blocksOffset++] & 0xFF;\n        final long byte22 = blocks[blocksOffset++] & 0xFF;\n        final long byte23 = blocks[blocksOffset++] & 0xFF;\n        values[valuesOffset++] = ((byte15 & 3) << 61) | (byte16 << 53) | (byte17 << 45) | (byte18 << 37) | (byte19 << 29) | (byte20 << 21) | (byte21 << 13) | (byte22 << 5) | (byte23 >>> 3);\n        final long byte24 = blocks[blocksOffset++] & 0xFF;\n        final long byte25 = blocks[blocksOffset++] & 0xFF;\n        final long byte26 = blocks[blocksOffset++] & 0xFF;\n        final long byte27 = blocks[blocksOffset++] & 0xFF;\n        final long byte28 = blocks[blocksOffset++] & 0xFF;\n        final long byte29 = blocks[blocksOffset++] & 0xFF;\n        final long byte30 = blocks[blocksOffset++] & 0xFF;\n        final long byte31 = blocks[blocksOffset++] & 0xFF;\n        values[valuesOffset++] = ((byte23 & 7) << 60) | (byte24 << 52) | (byte25 << 44) | (byte26 << 36) | (byte27 << 28) | (byte28 << 20) | (byte29 << 12) | (byte30 << 4) | (byte31 >>> 4);\n        final long byte32 = blocks[blocksOffset++] & 0xFF;\n        final long byte33 = blocks[blocksOffset++] & 0xFF;\n        final long byte34 = blocks[blocksOffset++] & 0xFF;\n        final long byte35 = blocks[blocksOffset++] & 0xFF;\n        final long byte36 = blocks[blocksOffset++] & 0xFF;\n        final long byte37 = blocks[blocksOffset++] & 0xFF;\n        final long byte38 = blocks[blocksOffset++] & 0xFF;\n        final long byte39 = blocks[blocksOffset++] & 0xFF;\n        values[valuesOffset++] = ((byte31 & 15) << 59) | (byte32 << 51) | (byte33 << 43) | (byte34 << 35) | (byte35 << 27) | (byte36 << 19) | (byte37 << 11) | (byte38 << 3) | (byte39 >>> 5);\n        final long byte40 = blocks[blocksOffset++] & 0xFF;\n        final long byte41 = blocks[blocksOffset++] & 0xFF;\n        final long byte42 = blocks[blocksOffset++] & 0xFF;\n        final long byte43 = blocks[blocksOffset++] & 0xFF;\n        final long byte44 = blocks[blocksOffset++] & 0xFF;\n        final long byte45 = blocks[blocksOffset++] & 0xFF;\n        final long byte46 = blocks[blocksOffset++] & 0xFF;\n        final long byte47 = blocks[blocksOffset++] & 0xFF;\n        values[valuesOffset++] = ((byte39 & 31) << 58) | (byte40 << 50) | (byte41 << 42) | (byte42 << 34) | (byte43 << 26) | (byte44 << 18) | (byte45 << 10) | (byte46 << 2) | (byte47 >>> 6);\n        final long byte48 = blocks[blocksOffset++] & 0xFF;\n        final long byte49 = blocks[blocksOffset++] & 0xFF;\n        final long byte50 = blocks[blocksOffset++] & 0xFF;\n        final long byte51 = blocks[blocksOffset++] & 0xFF;\n        final long byte52 = blocks[blocksOffset++] & 0xFF;\n        final long byte53 = blocks[blocksOffset++] & 0xFF;\n        final long byte54 = blocks[blocksOffset++] & 0xFF;\n        final long byte55 = blocks[blocksOffset++] & 0xFF;\n        values[valuesOffset++] = ((byte47 & 63) << 57) | (byte48 << 49) | (byte49 << 41) | (byte50 << 33) | (byte51 << 25) | (byte52 << 17) | (byte53 << 9) | (byte54 << 1) | (byte55 >>> 7);\n        final long byte56 = blocks[blocksOffset++] & 0xFF;\n        final long byte57 = blocks[blocksOffset++] & 0xFF;\n        final long byte58 = blocks[blocksOffset++] & 0xFF;\n        final long byte59 = blocks[blocksOffset++] & 0xFF;\n        final long byte60 = blocks[blocksOffset++] & 0xFF;\n        final long byte61 = blocks[blocksOffset++] & 0xFF;\n        final long byte62 = blocks[blocksOffset++] & 0xFF;\n        values[valuesOffset++] = ((byte55 & 127) << 56) | (byte56 << 48) | (byte57 << 40) | (byte58 << 32) | (byte59 << 24) | (byte60 << 16) | (byte61 << 8) | byte62;\n        final long byte63 = blocks[blocksOffset++] & 0xFF;\n        final long byte64 = blocks[blocksOffset++] & 0xFF;\n        final long byte65 = blocks[blocksOffset++] & 0xFF;\n        final long byte66 = blocks[blocksOffset++] & 0xFF;\n        final long byte67 = blocks[blocksOffset++] & 0xFF;\n        final long byte68 = blocks[blocksOffset++] & 0xFF;\n        final long byte69 = blocks[blocksOffset++] & 0xFF;\n        final long byte70 = blocks[blocksOffset++] & 0xFF;\n        values[valuesOffset++] = (byte63 << 55) | (byte64 << 47) | (byte65 << 39) | (byte66 << 31) | (byte67 << 23) | (byte68 << 15) | (byte69 << 7) | (byte70 >>> 1);\n        final long byte71 = blocks[blocksOffset++] & 0xFF;\n        final long byte72 = blocks[blocksOffset++] & 0xFF;\n        final long byte73 = blocks[blocksOffset++] & 0xFF;\n        final long byte74 = blocks[blocksOffset++] & 0xFF;\n        final long byte75 = blocks[blocksOffset++] & 0xFF;\n        final long byte76 = blocks[blocksOffset++] & 0xFF;\n        final long byte77 = blocks[blocksOffset++] & 0xFF;\n        final long byte78 = blocks[blocksOffset++] & 0xFF;\n        values[valuesOffset++] = ((byte70 & 1) << 62) | (byte71 << 54) | (byte72 << 46) | (byte73 << 38) | (byte74 << 30) | (byte75 << 22) | (byte76 << 14) | (byte77 << 6) | (byte78 >>> 2);\n        final long byte79 = blocks[blocksOffset++] & 0xFF;\n        final long byte80 = blocks[blocksOffset++] & 0xFF;\n        final long byte81 = blocks[blocksOffset++] & 0xFF;\n        final long byte82 = blocks[blocksOffset++] & 0xFF;\n        final long byte83 = blocks[blocksOffset++] & 0xFF;\n        final long byte84 = blocks[blocksOffset++] & 0xFF;\n        final long byte85 = blocks[blocksOffset++] & 0xFF;\n        final long byte86 = blocks[blocksOffset++] & 0xFF;\n        values[valuesOffset++] = ((byte78 & 3) << 61) | (byte79 << 53) | (byte80 << 45) | (byte81 << 37) | (byte82 << 29) | (byte83 << 21) | (byte84 << 13) | (byte85 << 5) | (byte86 >>> 3);\n        final long byte87 = blocks[blocksOffset++] & 0xFF;\n        final long byte88 = blocks[blocksOffset++] & 0xFF;\n        final long byte89 = blocks[blocksOffset++] & 0xFF;\n        final long byte90 = blocks[blocksOffset++] & 0xFF;\n        final long byte91 = blocks[blocksOffset++] & 0xFF;\n        final long byte92 = blocks[blocksOffset++] & 0xFF;\n        final long byte93 = blocks[blocksOffset++] & 0xFF;\n        final long byte94 = blocks[blocksOffset++] & 0xFF;\n        values[valuesOffset++] = ((byte86 & 7) << 60) | (byte87 << 52) | (byte88 << 44) | (byte89 << 36) | (byte90 << 28) | (byte91 << 20) | (byte92 << 12) | (byte93 << 4) | (byte94 >>> 4);\n        final long byte95 = blocks[blocksOffset++] & 0xFF;\n        final long byte96 = blocks[blocksOffset++] & 0xFF;\n        final long byte97 = blocks[blocksOffset++] & 0xFF;\n        final long byte98 = blocks[blocksOffset++] & 0xFF;\n        final long byte99 = blocks[blocksOffset++] & 0xFF;\n        final long byte100 = blocks[blocksOffset++] & 0xFF;\n        final long byte101 = blocks[blocksOffset++] & 0xFF;\n        final long byte102 = blocks[blocksOffset++] & 0xFF;\n        values[valuesOffset++] = ((byte94 & 15) << 59) | (byte95 << 51) | (byte96 << 43) | (byte97 << 35) | (byte98 << 27) | (byte99 << 19) | (byte100 << 11) | (byte101 << 3) | (byte102 >>> 5);\n        final long byte103 = blocks[blocksOffset++] & 0xFF;\n        final long byte104 = blocks[blocksOffset++] & 0xFF;\n        final long byte105 = blocks[blocksOffset++] & 0xFF;\n        final long byte106 = blocks[blocksOffset++] & 0xFF;\n        final long byte107 = blocks[blocksOffset++] & 0xFF;\n        final long byte108 = blocks[blocksOffset++] & 0xFF;\n        final long byte109 = blocks[blocksOffset++] & 0xFF;\n        final long byte110 = blocks[blocksOffset++] & 0xFF;\n        values[valuesOffset++] = ((byte102 & 31) << 58) | (byte103 << 50) | (byte104 << 42) | (byte105 << 34) | (byte106 << 26) | (byte107 << 18) | (byte108 << 10) | (byte109 << 2) | (byte110 >>> 6);\n        final long byte111 = blocks[blocksOffset++] & 0xFF;\n        final long byte112 = blocks[blocksOffset++] & 0xFF;\n        final long byte113 = blocks[blocksOffset++] & 0xFF;\n        final long byte114 = blocks[blocksOffset++] & 0xFF;\n        final long byte115 = blocks[blocksOffset++] & 0xFF;\n        final long byte116 = blocks[blocksOffset++] & 0xFF;\n        final long byte117 = blocks[blocksOffset++] & 0xFF;\n        final long byte118 = blocks[blocksOffset++] & 0xFF;\n        values[valuesOffset++] = ((byte110 & 63) << 57) | (byte111 << 49) | (byte112 << 41) | (byte113 << 33) | (byte114 << 25) | (byte115 << 17) | (byte116 << 9) | (byte117 << 1) | (byte118 >>> 7);\n        final long byte119 = blocks[blocksOffset++] & 0xFF;\n        final long byte120 = blocks[blocksOffset++] & 0xFF;\n        final long byte121 = blocks[blocksOffset++] & 0xFF;\n        final long byte122 = blocks[blocksOffset++] & 0xFF;\n        final long byte123 = blocks[blocksOffset++] & 0xFF;\n        final long byte124 = blocks[blocksOffset++] & 0xFF;\n        final long byte125 = blocks[blocksOffset++] & 0xFF;\n        values[valuesOffset++] = ((byte118 & 127) << 56) | (byte119 << 48) | (byte120 << 40) | (byte121 << 32) | (byte122 << 24) | (byte123 << 16) | (byte124 << 8) | byte125;\n        final long byte126 = blocks[blocksOffset++] & 0xFF;\n        final long byte127 = blocks[blocksOffset++] & 0xFF;\n        final long byte128 = blocks[blocksOffset++] & 0xFF;\n        final long byte129 = blocks[blocksOffset++] & 0xFF;\n        final long byte130 = blocks[blocksOffset++] & 0xFF;\n        final long byte131 = blocks[blocksOffset++] & 0xFF;\n        final long byte132 = blocks[blocksOffset++] & 0xFF;\n        final long byte133 = blocks[blocksOffset++] & 0xFF;\n        values[valuesOffset++] = (byte126 << 55) | (byte127 << 47) | (byte128 << 39) | (byte129 << 31) | (byte130 << 23) | (byte131 << 15) | (byte132 << 7) | (byte133 >>> 1);\n        final long byte134 = blocks[blocksOffset++] & 0xFF;\n        final long byte135 = blocks[blocksOffset++] & 0xFF;\n        final long byte136 = blocks[blocksOffset++] & 0xFF;\n        final long byte137 = blocks[blocksOffset++] & 0xFF;\n        final long byte138 = blocks[blocksOffset++] & 0xFF;\n        final long byte139 = blocks[blocksOffset++] & 0xFF;\n        final long byte140 = blocks[blocksOffset++] & 0xFF;\n        final long byte141 = blocks[blocksOffset++] & 0xFF;\n        values[valuesOffset++] = ((byte133 & 1) << 62) | (byte134 << 54) | (byte135 << 46) | (byte136 << 38) | (byte137 << 30) | (byte138 << 22) | (byte139 << 14) | (byte140 << 6) | (byte141 >>> 2);\n        final long byte142 = blocks[blocksOffset++] & 0xFF;\n        final long byte143 = blocks[blocksOffset++] & 0xFF;\n        final long byte144 = blocks[blocksOffset++] & 0xFF;\n        final long byte145 = blocks[blocksOffset++] & 0xFF;\n        final long byte146 = blocks[blocksOffset++] & 0xFF;\n        final long byte147 = blocks[blocksOffset++] & 0xFF;\n        final long byte148 = blocks[blocksOffset++] & 0xFF;\n        final long byte149 = blocks[blocksOffset++] & 0xFF;\n        values[valuesOffset++] = ((byte141 & 3) << 61) | (byte142 << 53) | (byte143 << 45) | (byte144 << 37) | (byte145 << 29) | (byte146 << 21) | (byte147 << 13) | (byte148 << 5) | (byte149 >>> 3);\n        final long byte150 = blocks[blocksOffset++] & 0xFF;\n        final long byte151 = blocks[blocksOffset++] & 0xFF;\n        final long byte152 = blocks[blocksOffset++] & 0xFF;\n        final long byte153 = blocks[blocksOffset++] & 0xFF;\n        final long byte154 = blocks[blocksOffset++] & 0xFF;\n        final long byte155 = blocks[blocksOffset++] & 0xFF;\n        final long byte156 = blocks[blocksOffset++] & 0xFF;\n        final long byte157 = blocks[blocksOffset++] & 0xFF;\n        values[valuesOffset++] = ((byte149 & 7) << 60) | (byte150 << 52) | (byte151 << 44) | (byte152 << 36) | (byte153 << 28) | (byte154 << 20) | (byte155 << 12) | (byte156 << 4) | (byte157 >>> 4);\n        final long byte158 = blocks[blocksOffset++] & 0xFF;\n        final long byte159 = blocks[blocksOffset++] & 0xFF;\n        final long byte160 = blocks[blocksOffset++] & 0xFF;\n        final long byte161 = blocks[blocksOffset++] & 0xFF;\n        final long byte162 = blocks[blocksOffset++] & 0xFF;\n        final long byte163 = blocks[blocksOffset++] & 0xFF;\n        final long byte164 = blocks[blocksOffset++] & 0xFF;\n        final long byte165 = blocks[blocksOffset++] & 0xFF;\n        values[valuesOffset++] = ((byte157 & 15) << 59) | (byte158 << 51) | (byte159 << 43) | (byte160 << 35) | (byte161 << 27) | (byte162 << 19) | (byte163 << 11) | (byte164 << 3) | (byte165 >>> 5);\n        final long byte166 = blocks[blocksOffset++] & 0xFF;\n        final long byte167 = blocks[blocksOffset++] & 0xFF;\n        final long byte168 = blocks[blocksOffset++] & 0xFF;\n        final long byte169 = blocks[blocksOffset++] & 0xFF;\n        final long byte170 = blocks[blocksOffset++] & 0xFF;\n        final long byte171 = blocks[blocksOffset++] & 0xFF;\n        final long byte172 = blocks[blocksOffset++] & 0xFF;\n        final long byte173 = blocks[blocksOffset++] & 0xFF;\n        values[valuesOffset++] = ((byte165 & 31) << 58) | (byte166 << 50) | (byte167 << 42) | (byte168 << 34) | (byte169 << 26) | (byte170 << 18) | (byte171 << 10) | (byte172 << 2) | (byte173 >>> 6);\n        final long byte174 = blocks[blocksOffset++] & 0xFF;\n        final long byte175 = blocks[blocksOffset++] & 0xFF;\n        final long byte176 = blocks[blocksOffset++] & 0xFF;\n        final long byte177 = blocks[blocksOffset++] & 0xFF;\n        final long byte178 = blocks[blocksOffset++] & 0xFF;\n        final long byte179 = blocks[blocksOffset++] & 0xFF;\n        final long byte180 = blocks[blocksOffset++] & 0xFF;\n        final long byte181 = blocks[blocksOffset++] & 0xFF;\n        values[valuesOffset++] = ((byte173 & 63) << 57) | (byte174 << 49) | (byte175 << 41) | (byte176 << 33) | (byte177 << 25) | (byte178 << 17) | (byte179 << 9) | (byte180 << 1) | (byte181 >>> 7);\n        final long byte182 = blocks[blocksOffset++] & 0xFF;\n        final long byte183 = blocks[blocksOffset++] & 0xFF;\n        final long byte184 = blocks[blocksOffset++] & 0xFF;\n        final long byte185 = blocks[blocksOffset++] & 0xFF;\n        final long byte186 = blocks[blocksOffset++] & 0xFF;\n        final long byte187 = blocks[blocksOffset++] & 0xFF;\n        final long byte188 = blocks[blocksOffset++] & 0xFF;\n        values[valuesOffset++] = ((byte181 & 127) << 56) | (byte182 << 48) | (byte183 << 40) | (byte184 << 32) | (byte185 << 24) | (byte186 << 16) | (byte187 << 8) | byte188;\n        final long byte189 = blocks[blocksOffset++] & 0xFF;\n        final long byte190 = blocks[blocksOffset++] & 0xFF;\n        final long byte191 = blocks[blocksOffset++] & 0xFF;\n        final long byte192 = blocks[blocksOffset++] & 0xFF;\n        final long byte193 = blocks[blocksOffset++] & 0xFF;\n        final long byte194 = blocks[blocksOffset++] & 0xFF;\n        final long byte195 = blocks[blocksOffset++] & 0xFF;\n        final long byte196 = blocks[blocksOffset++] & 0xFF;\n        values[valuesOffset++] = (byte189 << 55) | (byte190 << 47) | (byte191 << 39) | (byte192 << 31) | (byte193 << 23) | (byte194 << 15) | (byte195 << 7) | (byte196 >>> 1);\n        final long byte197 = blocks[blocksOffset++] & 0xFF;\n        final long byte198 = blocks[blocksOffset++] & 0xFF;\n        final long byte199 = blocks[blocksOffset++] & 0xFF;\n        final long byte200 = blocks[blocksOffset++] & 0xFF;\n        final long byte201 = blocks[blocksOffset++] & 0xFF;\n        final long byte202 = blocks[blocksOffset++] & 0xFF;\n        final long byte203 = blocks[blocksOffset++] & 0xFF;\n        final long byte204 = blocks[blocksOffset++] & 0xFF;\n        values[valuesOffset++] = ((byte196 & 1) << 62) | (byte197 << 54) | (byte198 << 46) | (byte199 << 38) | (byte200 << 30) | (byte201 << 22) | (byte202 << 14) | (byte203 << 6) | (byte204 >>> 2);\n        final long byte205 = blocks[blocksOffset++] & 0xFF;\n        final long byte206 = blocks[blocksOffset++] & 0xFF;\n        final long byte207 = blocks[blocksOffset++] & 0xFF;\n        final long byte208 = blocks[blocksOffset++] & 0xFF;\n        final long byte209 = blocks[blocksOffset++] & 0xFF;\n        final long byte210 = blocks[blocksOffset++] & 0xFF;\n        final long byte211 = blocks[blocksOffset++] & 0xFF;\n        final long byte212 = blocks[blocksOffset++] & 0xFF;\n        values[valuesOffset++] = ((byte204 & 3) << 61) | (byte205 << 53) | (byte206 << 45) | (byte207 << 37) | (byte208 << 29) | (byte209 << 21) | (byte210 << 13) | (byte211 << 5) | (byte212 >>> 3);\n        final long byte213 = blocks[blocksOffset++] & 0xFF;\n        final long byte214 = blocks[blocksOffset++] & 0xFF;\n        final long byte215 = blocks[blocksOffset++] & 0xFF;\n        final long byte216 = blocks[blocksOffset++] & 0xFF;\n        final long byte217 = blocks[blocksOffset++] & 0xFF;\n        final long byte218 = blocks[blocksOffset++] & 0xFF;\n        final long byte219 = blocks[blocksOffset++] & 0xFF;\n        final long byte220 = blocks[blocksOffset++] & 0xFF;\n        values[valuesOffset++] = ((byte212 & 7) << 60) | (byte213 << 52) | (byte214 << 44) | (byte215 << 36) | (byte216 << 28) | (byte217 << 20) | (byte218 << 12) | (byte219 << 4) | (byte220 >>> 4);\n        final long byte221 = blocks[blocksOffset++] & 0xFF;\n        final long byte222 = blocks[blocksOffset++] & 0xFF;\n        final long byte223 = blocks[blocksOffset++] & 0xFF;\n        final long byte224 = blocks[blocksOffset++] & 0xFF;\n        final long byte225 = blocks[blocksOffset++] & 0xFF;\n        final long byte226 = blocks[blocksOffset++] & 0xFF;\n        final long byte227 = blocks[blocksOffset++] & 0xFF;\n        final long byte228 = blocks[blocksOffset++] & 0xFF;\n        values[valuesOffset++] = ((byte220 & 15) << 59) | (byte221 << 51) | (byte222 << 43) | (byte223 << 35) | (byte224 << 27) | (byte225 << 19) | (byte226 << 11) | (byte227 << 3) | (byte228 >>> 5);\n        final long byte229 = blocks[blocksOffset++] & 0xFF;\n        final long byte230 = blocks[blocksOffset++] & 0xFF;\n        final long byte231 = blocks[blocksOffset++] & 0xFF;\n        final long byte232 = blocks[blocksOffset++] & 0xFF;\n        final long byte233 = blocks[blocksOffset++] & 0xFF;\n        final long byte234 = blocks[blocksOffset++] & 0xFF;\n        final long byte235 = blocks[blocksOffset++] & 0xFF;\n        final long byte236 = blocks[blocksOffset++] & 0xFF;\n        values[valuesOffset++] = ((byte228 & 31) << 58) | (byte229 << 50) | (byte230 << 42) | (byte231 << 34) | (byte232 << 26) | (byte233 << 18) | (byte234 << 10) | (byte235 << 2) | (byte236 >>> 6);\n        final long byte237 = blocks[blocksOffset++] & 0xFF;\n        final long byte238 = blocks[blocksOffset++] & 0xFF;\n        final long byte239 = blocks[blocksOffset++] & 0xFF;\n        final long byte240 = blocks[blocksOffset++] & 0xFF;\n        final long byte241 = blocks[blocksOffset++] & 0xFF;\n        final long byte242 = blocks[blocksOffset++] & 0xFF;\n        final long byte243 = blocks[blocksOffset++] & 0xFF;\n        final long byte244 = blocks[blocksOffset++] & 0xFF;\n        values[valuesOffset++] = ((byte236 & 63) << 57) | (byte237 << 49) | (byte238 << 41) | (byte239 << 33) | (byte240 << 25) | (byte241 << 17) | (byte242 << 9) | (byte243 << 1) | (byte244 >>> 7);\n        final long byte245 = blocks[blocksOffset++] & 0xFF;\n        final long byte246 = blocks[blocksOffset++] & 0xFF;\n        final long byte247 = blocks[blocksOffset++] & 0xFF;\n        final long byte248 = blocks[blocksOffset++] & 0xFF;\n        final long byte249 = blocks[blocksOffset++] & 0xFF;\n        final long byte250 = blocks[blocksOffset++] & 0xFF;\n        final long byte251 = blocks[blocksOffset++] & 0xFF;\n        values[valuesOffset++] = ((byte244 & 127) << 56) | (byte245 << 48) | (byte246 << 40) | (byte247 << 32) | (byte248 << 24) | (byte249 << 16) | (byte250 << 8) | byte251;\n        final long byte252 = blocks[blocksOffset++] & 0xFF;\n        final long byte253 = blocks[blocksOffset++] & 0xFF;\n        final long byte254 = blocks[blocksOffset++] & 0xFF;\n        final long byte255 = blocks[blocksOffset++] & 0xFF;\n        final long byte256 = blocks[blocksOffset++] & 0xFF;\n        final long byte257 = blocks[blocksOffset++] & 0xFF;\n        final long byte258 = blocks[blocksOffset++] & 0xFF;\n        final long byte259 = blocks[blocksOffset++] & 0xFF;\n        values[valuesOffset++] = (byte252 << 55) | (byte253 << 47) | (byte254 << 39) | (byte255 << 31) | (byte256 << 23) | (byte257 << 15) | (byte258 << 7) | (byte259 >>> 1);\n        final long byte260 = blocks[blocksOffset++] & 0xFF;\n        final long byte261 = blocks[blocksOffset++] & 0xFF;\n        final long byte262 = blocks[blocksOffset++] & 0xFF;\n        final long byte263 = blocks[blocksOffset++] & 0xFF;\n        final long byte264 = blocks[blocksOffset++] & 0xFF;\n        final long byte265 = blocks[blocksOffset++] & 0xFF;\n        final long byte266 = blocks[blocksOffset++] & 0xFF;\n        final long byte267 = blocks[blocksOffset++] & 0xFF;\n        values[valuesOffset++] = ((byte259 & 1) << 62) | (byte260 << 54) | (byte261 << 46) | (byte262 << 38) | (byte263 << 30) | (byte264 << 22) | (byte265 << 14) | (byte266 << 6) | (byte267 >>> 2);\n        final long byte268 = blocks[blocksOffset++] & 0xFF;\n        final long byte269 = blocks[blocksOffset++] & 0xFF;\n        final long byte270 = blocks[blocksOffset++] & 0xFF;\n        final long byte271 = blocks[blocksOffset++] & 0xFF;\n        final long byte272 = blocks[blocksOffset++] & 0xFF;\n        final long byte273 = blocks[blocksOffset++] & 0xFF;\n        final long byte274 = blocks[blocksOffset++] & 0xFF;\n        final long byte275 = blocks[blocksOffset++] & 0xFF;\n        values[valuesOffset++] = ((byte267 & 3) << 61) | (byte268 << 53) | (byte269 << 45) | (byte270 << 37) | (byte271 << 29) | (byte272 << 21) | (byte273 << 13) | (byte274 << 5) | (byte275 >>> 3);\n        final long byte276 = blocks[blocksOffset++] & 0xFF;\n        final long byte277 = blocks[blocksOffset++] & 0xFF;\n        final long byte278 = blocks[blocksOffset++] & 0xFF;\n        final long byte279 = blocks[blocksOffset++] & 0xFF;\n        final long byte280 = blocks[blocksOffset++] & 0xFF;\n        final long byte281 = blocks[blocksOffset++] & 0xFF;\n        final long byte282 = blocks[blocksOffset++] & 0xFF;\n        final long byte283 = blocks[blocksOffset++] & 0xFF;\n        values[valuesOffset++] = ((byte275 & 7) << 60) | (byte276 << 52) | (byte277 << 44) | (byte278 << 36) | (byte279 << 28) | (byte280 << 20) | (byte281 << 12) | (byte282 << 4) | (byte283 >>> 4);\n        final long byte284 = blocks[blocksOffset++] & 0xFF;\n        final long byte285 = blocks[blocksOffset++] & 0xFF;\n        final long byte286 = blocks[blocksOffset++] & 0xFF;\n        final long byte287 = blocks[blocksOffset++] & 0xFF;\n        final long byte288 = blocks[blocksOffset++] & 0xFF;\n        final long byte289 = blocks[blocksOffset++] & 0xFF;\n        final long byte290 = blocks[blocksOffset++] & 0xFF;\n        final long byte291 = blocks[blocksOffset++] & 0xFF;\n        values[valuesOffset++] = ((byte283 & 15) << 59) | (byte284 << 51) | (byte285 << 43) | (byte286 << 35) | (byte287 << 27) | (byte288 << 19) | (byte289 << 11) | (byte290 << 3) | (byte291 >>> 5);\n        final long byte292 = blocks[blocksOffset++] & 0xFF;\n        final long byte293 = blocks[blocksOffset++] & 0xFF;\n        final long byte294 = blocks[blocksOffset++] & 0xFF;\n        final long byte295 = blocks[blocksOffset++] & 0xFF;\n        final long byte296 = blocks[blocksOffset++] & 0xFF;\n        final long byte297 = blocks[blocksOffset++] & 0xFF;\n        final long byte298 = blocks[blocksOffset++] & 0xFF;\n        final long byte299 = blocks[blocksOffset++] & 0xFF;\n        values[valuesOffset++] = ((byte291 & 31) << 58) | (byte292 << 50) | (byte293 << 42) | (byte294 << 34) | (byte295 << 26) | (byte296 << 18) | (byte297 << 10) | (byte298 << 2) | (byte299 >>> 6);\n        final long byte300 = blocks[blocksOffset++] & 0xFF;\n        final long byte301 = blocks[blocksOffset++] & 0xFF;\n        final long byte302 = blocks[blocksOffset++] & 0xFF;\n        final long byte303 = blocks[blocksOffset++] & 0xFF;\n        final long byte304 = blocks[blocksOffset++] & 0xFF;\n        final long byte305 = blocks[blocksOffset++] & 0xFF;\n        final long byte306 = blocks[blocksOffset++] & 0xFF;\n        final long byte307 = blocks[blocksOffset++] & 0xFF;\n        values[valuesOffset++] = ((byte299 & 63) << 57) | (byte300 << 49) | (byte301 << 41) | (byte302 << 33) | (byte303 << 25) | (byte304 << 17) | (byte305 << 9) | (byte306 << 1) | (byte307 >>> 7);\n        final long byte308 = blocks[blocksOffset++] & 0xFF;\n        final long byte309 = blocks[blocksOffset++] & 0xFF;\n        final long byte310 = blocks[blocksOffset++] & 0xFF;\n        final long byte311 = blocks[blocksOffset++] & 0xFF;\n        final long byte312 = blocks[blocksOffset++] & 0xFF;\n        final long byte313 = blocks[blocksOffset++] & 0xFF;\n        final long byte314 = blocks[blocksOffset++] & 0xFF;\n        values[valuesOffset++] = ((byte307 & 127) << 56) | (byte308 << 48) | (byte309 << 40) | (byte310 << 32) | (byte311 << 24) | (byte312 << 16) | (byte313 << 8) | byte314;\n        final long byte315 = blocks[blocksOffset++] & 0xFF;\n        final long byte316 = blocks[blocksOffset++] & 0xFF;\n        final long byte317 = blocks[blocksOffset++] & 0xFF;\n        final long byte318 = blocks[blocksOffset++] & 0xFF;\n        final long byte319 = blocks[blocksOffset++] & 0xFF;\n        final long byte320 = blocks[blocksOffset++] & 0xFF;\n        final long byte321 = blocks[blocksOffset++] & 0xFF;\n        final long byte322 = blocks[blocksOffset++] & 0xFF;\n        values[valuesOffset++] = (byte315 << 55) | (byte316 << 47) | (byte317 << 39) | (byte318 << 31) | (byte319 << 23) | (byte320 << 15) | (byte321 << 7) | (byte322 >>> 1);\n        final long byte323 = blocks[blocksOffset++] & 0xFF;\n        final long byte324 = blocks[blocksOffset++] & 0xFF;\n        final long byte325 = blocks[blocksOffset++] & 0xFF;\n        final long byte326 = blocks[blocksOffset++] & 0xFF;\n        final long byte327 = blocks[blocksOffset++] & 0xFF;\n        final long byte328 = blocks[blocksOffset++] & 0xFF;\n        final long byte329 = blocks[blocksOffset++] & 0xFF;\n        final long byte330 = blocks[blocksOffset++] & 0xFF;\n        values[valuesOffset++] = ((byte322 & 1) << 62) | (byte323 << 54) | (byte324 << 46) | (byte325 << 38) | (byte326 << 30) | (byte327 << 22) | (byte328 << 14) | (byte329 << 6) | (byte330 >>> 2);\n        final long byte331 = blocks[blocksOffset++] & 0xFF;\n        final long byte332 = blocks[blocksOffset++] & 0xFF;\n        final long byte333 = blocks[blocksOffset++] & 0xFF;\n        final long byte334 = blocks[blocksOffset++] & 0xFF;\n        final long byte335 = blocks[blocksOffset++] & 0xFF;\n        final long byte336 = blocks[blocksOffset++] & 0xFF;\n        final long byte337 = blocks[blocksOffset++] & 0xFF;\n        final long byte338 = blocks[blocksOffset++] & 0xFF;\n        values[valuesOffset++] = ((byte330 & 3) << 61) | (byte331 << 53) | (byte332 << 45) | (byte333 << 37) | (byte334 << 29) | (byte335 << 21) | (byte336 << 13) | (byte337 << 5) | (byte338 >>> 3);\n        final long byte339 = blocks[blocksOffset++] & 0xFF;\n        final long byte340 = blocks[blocksOffset++] & 0xFF;\n        final long byte341 = blocks[blocksOffset++] & 0xFF;\n        final long byte342 = blocks[blocksOffset++] & 0xFF;\n        final long byte343 = blocks[blocksOffset++] & 0xFF;\n        final long byte344 = blocks[blocksOffset++] & 0xFF;\n        final long byte345 = blocks[blocksOffset++] & 0xFF;\n        final long byte346 = blocks[blocksOffset++] & 0xFF;\n        values[valuesOffset++] = ((byte338 & 7) << 60) | (byte339 << 52) | (byte340 << 44) | (byte341 << 36) | (byte342 << 28) | (byte343 << 20) | (byte344 << 12) | (byte345 << 4) | (byte346 >>> 4);\n        final long byte347 = blocks[blocksOffset++] & 0xFF;\n        final long byte348 = blocks[blocksOffset++] & 0xFF;\n        final long byte349 = blocks[blocksOffset++] & 0xFF;\n        final long byte350 = blocks[blocksOffset++] & 0xFF;\n        final long byte351 = blocks[blocksOffset++] & 0xFF;\n        final long byte352 = blocks[blocksOffset++] & 0xFF;\n        final long byte353 = blocks[blocksOffset++] & 0xFF;\n        final long byte354 = blocks[blocksOffset++] & 0xFF;\n        values[valuesOffset++] = ((byte346 & 15) << 59) | (byte347 << 51) | (byte348 << 43) | (byte349 << 35) | (byte350 << 27) | (byte351 << 19) | (byte352 << 11) | (byte353 << 3) | (byte354 >>> 5);\n        final long byte355 = blocks[blocksOffset++] & 0xFF;\n        final long byte356 = blocks[blocksOffset++] & 0xFF;\n        final long byte357 = blocks[blocksOffset++] & 0xFF;\n        final long byte358 = blocks[blocksOffset++] & 0xFF;\n        final long byte359 = blocks[blocksOffset++] & 0xFF;\n        final long byte360 = blocks[blocksOffset++] & 0xFF;\n        final long byte361 = blocks[blocksOffset++] & 0xFF;\n        final long byte362 = blocks[blocksOffset++] & 0xFF;\n        values[valuesOffset++] = ((byte354 & 31) << 58) | (byte355 << 50) | (byte356 << 42) | (byte357 << 34) | (byte358 << 26) | (byte359 << 18) | (byte360 << 10) | (byte361 << 2) | (byte362 >>> 6);\n        final long byte363 = blocks[blocksOffset++] & 0xFF;\n        final long byte364 = blocks[blocksOffset++] & 0xFF;\n        final long byte365 = blocks[blocksOffset++] & 0xFF;\n        final long byte366 = blocks[blocksOffset++] & 0xFF;\n        final long byte367 = blocks[blocksOffset++] & 0xFF;\n        final long byte368 = blocks[blocksOffset++] & 0xFF;\n        final long byte369 = blocks[blocksOffset++] & 0xFF;\n        final long byte370 = blocks[blocksOffset++] & 0xFF;\n        values[valuesOffset++] = ((byte362 & 63) << 57) | (byte363 << 49) | (byte364 << 41) | (byte365 << 33) | (byte366 << 25) | (byte367 << 17) | (byte368 << 9) | (byte369 << 1) | (byte370 >>> 7);\n        final long byte371 = blocks[blocksOffset++] & 0xFF;\n        final long byte372 = blocks[blocksOffset++] & 0xFF;\n        final long byte373 = blocks[blocksOffset++] & 0xFF;\n        final long byte374 = blocks[blocksOffset++] & 0xFF;\n        final long byte375 = blocks[blocksOffset++] & 0xFF;\n        final long byte376 = blocks[blocksOffset++] & 0xFF;\n        final long byte377 = blocks[blocksOffset++] & 0xFF;\n        values[valuesOffset++] = ((byte370 & 127) << 56) | (byte371 << 48) | (byte372 << 40) | (byte373 << 32) | (byte374 << 24) | (byte375 << 16) | (byte376 << 8) | byte377;\n        final long byte378 = blocks[blocksOffset++] & 0xFF;\n        final long byte379 = blocks[blocksOffset++] & 0xFF;\n        final long byte380 = blocks[blocksOffset++] & 0xFF;\n        final long byte381 = blocks[blocksOffset++] & 0xFF;\n        final long byte382 = blocks[blocksOffset++] & 0xFF;\n        final long byte383 = blocks[blocksOffset++] & 0xFF;\n        final long byte384 = blocks[blocksOffset++] & 0xFF;\n        final long byte385 = blocks[blocksOffset++] & 0xFF;\n        values[valuesOffset++] = (byte378 << 55) | (byte379 << 47) | (byte380 << 39) | (byte381 << 31) | (byte382 << 23) | (byte383 << 15) | (byte384 << 7) | (byte385 >>> 1);\n        final long byte386 = blocks[blocksOffset++] & 0xFF;\n        final long byte387 = blocks[blocksOffset++] & 0xFF;\n        final long byte388 = blocks[blocksOffset++] & 0xFF;\n        final long byte389 = blocks[blocksOffset++] & 0xFF;\n        final long byte390 = blocks[blocksOffset++] & 0xFF;\n        final long byte391 = blocks[blocksOffset++] & 0xFF;\n        final long byte392 = blocks[blocksOffset++] & 0xFF;\n        final long byte393 = blocks[blocksOffset++] & 0xFF;\n        values[valuesOffset++] = ((byte385 & 1) << 62) | (byte386 << 54) | (byte387 << 46) | (byte388 << 38) | (byte389 << 30) | (byte390 << 22) | (byte391 << 14) | (byte392 << 6) | (byte393 >>> 2);\n        final long byte394 = blocks[blocksOffset++] & 0xFF;\n        final long byte395 = blocks[blocksOffset++] & 0xFF;\n        final long byte396 = blocks[blocksOffset++] & 0xFF;\n        final long byte397 = blocks[blocksOffset++] & 0xFF;\n        final long byte398 = blocks[blocksOffset++] & 0xFF;\n        final long byte399 = blocks[blocksOffset++] & 0xFF;\n        final long byte400 = blocks[blocksOffset++] & 0xFF;\n        final long byte401 = blocks[blocksOffset++] & 0xFF;\n        values[valuesOffset++] = ((byte393 & 3) << 61) | (byte394 << 53) | (byte395 << 45) | (byte396 << 37) | (byte397 << 29) | (byte398 << 21) | (byte399 << 13) | (byte400 << 5) | (byte401 >>> 3);\n        final long byte402 = blocks[blocksOffset++] & 0xFF;\n        final long byte403 = blocks[blocksOffset++] & 0xFF;\n        final long byte404 = blocks[blocksOffset++] & 0xFF;\n        final long byte405 = blocks[blocksOffset++] & 0xFF;\n        final long byte406 = blocks[blocksOffset++] & 0xFF;\n        final long byte407 = blocks[blocksOffset++] & 0xFF;\n        final long byte408 = blocks[blocksOffset++] & 0xFF;\n        final long byte409 = blocks[blocksOffset++] & 0xFF;\n        values[valuesOffset++] = ((byte401 & 7) << 60) | (byte402 << 52) | (byte403 << 44) | (byte404 << 36) | (byte405 << 28) | (byte406 << 20) | (byte407 << 12) | (byte408 << 4) | (byte409 >>> 4);\n        final long byte410 = blocks[blocksOffset++] & 0xFF;\n        final long byte411 = blocks[blocksOffset++] & 0xFF;\n        final long byte412 = blocks[blocksOffset++] & 0xFF;\n        final long byte413 = blocks[blocksOffset++] & 0xFF;\n        final long byte414 = blocks[blocksOffset++] & 0xFF;\n        final long byte415 = blocks[blocksOffset++] & 0xFF;\n        final long byte416 = blocks[blocksOffset++] & 0xFF;\n        final long byte417 = blocks[blocksOffset++] & 0xFF;\n        values[valuesOffset++] = ((byte409 & 15) << 59) | (byte410 << 51) | (byte411 << 43) | (byte412 << 35) | (byte413 << 27) | (byte414 << 19) | (byte415 << 11) | (byte416 << 3) | (byte417 >>> 5);\n        final long byte418 = blocks[blocksOffset++] & 0xFF;\n        final long byte419 = blocks[blocksOffset++] & 0xFF;\n        final long byte420 = blocks[blocksOffset++] & 0xFF;\n        final long byte421 = blocks[blocksOffset++] & 0xFF;\n        final long byte422 = blocks[blocksOffset++] & 0xFF;\n        final long byte423 = blocks[blocksOffset++] & 0xFF;\n        final long byte424 = blocks[blocksOffset++] & 0xFF;\n        final long byte425 = blocks[blocksOffset++] & 0xFF;\n        values[valuesOffset++] = ((byte417 & 31) << 58) | (byte418 << 50) | (byte419 << 42) | (byte420 << 34) | (byte421 << 26) | (byte422 << 18) | (byte423 << 10) | (byte424 << 2) | (byte425 >>> 6);\n        final long byte426 = blocks[blocksOffset++] & 0xFF;\n        final long byte427 = blocks[blocksOffset++] & 0xFF;\n        final long byte428 = blocks[blocksOffset++] & 0xFF;\n        final long byte429 = blocks[blocksOffset++] & 0xFF;\n        final long byte430 = blocks[blocksOffset++] & 0xFF;\n        final long byte431 = blocks[blocksOffset++] & 0xFF;\n        final long byte432 = blocks[blocksOffset++] & 0xFF;\n        final long byte433 = blocks[blocksOffset++] & 0xFF;\n        values[valuesOffset++] = ((byte425 & 63) << 57) | (byte426 << 49) | (byte427 << 41) | (byte428 << 33) | (byte429 << 25) | (byte430 << 17) | (byte431 << 9) | (byte432 << 1) | (byte433 >>> 7);\n        final long byte434 = blocks[blocksOffset++] & 0xFF;\n        final long byte435 = blocks[blocksOffset++] & 0xFF;\n        final long byte436 = blocks[blocksOffset++] & 0xFF;\n        final long byte437 = blocks[blocksOffset++] & 0xFF;\n        final long byte438 = blocks[blocksOffset++] & 0xFF;\n        final long byte439 = blocks[blocksOffset++] & 0xFF;\n        final long byte440 = blocks[blocksOffset++] & 0xFF;\n        values[valuesOffset++] = ((byte433 & 127) << 56) | (byte434 << 48) | (byte435 << 40) | (byte436 << 32) | (byte437 << 24) | (byte438 << 16) | (byte439 << 8) | byte440;\n        final long byte441 = blocks[blocksOffset++] & 0xFF;\n        final long byte442 = blocks[blocksOffset++] & 0xFF;\n        final long byte443 = blocks[blocksOffset++] & 0xFF;\n        final long byte444 = blocks[blocksOffset++] & 0xFF;\n        final long byte445 = blocks[blocksOffset++] & 0xFF;\n        final long byte446 = blocks[blocksOffset++] & 0xFF;\n        final long byte447 = blocks[blocksOffset++] & 0xFF;\n        final long byte448 = blocks[blocksOffset++] & 0xFF;\n        values[valuesOffset++] = (byte441 << 55) | (byte442 << 47) | (byte443 << 39) | (byte444 << 31) | (byte445 << 23) | (byte446 << 15) | (byte447 << 7) | (byte448 >>> 1);\n        final long byte449 = blocks[blocksOffset++] & 0xFF;\n        final long byte450 = blocks[blocksOffset++] & 0xFF;\n        final long byte451 = blocks[blocksOffset++] & 0xFF;\n        final long byte452 = blocks[blocksOffset++] & 0xFF;\n        final long byte453 = blocks[blocksOffset++] & 0xFF;\n        final long byte454 = blocks[blocksOffset++] & 0xFF;\n        final long byte455 = blocks[blocksOffset++] & 0xFF;\n        final long byte456 = blocks[blocksOffset++] & 0xFF;\n        values[valuesOffset++] = ((byte448 & 1) << 62) | (byte449 << 54) | (byte450 << 46) | (byte451 << 38) | (byte452 << 30) | (byte453 << 22) | (byte454 << 14) | (byte455 << 6) | (byte456 >>> 2);\n        final long byte457 = blocks[blocksOffset++] & 0xFF;\n        final long byte458 = blocks[blocksOffset++] & 0xFF;\n        final long byte459 = blocks[blocksOffset++] & 0xFF;\n        final long byte460 = blocks[blocksOffset++] & 0xFF;\n        final long byte461 = blocks[blocksOffset++] & 0xFF;\n        final long byte462 = blocks[blocksOffset++] & 0xFF;\n        final long byte463 = blocks[blocksOffset++] & 0xFF;\n        final long byte464 = blocks[blocksOffset++] & 0xFF;\n        values[valuesOffset++] = ((byte456 & 3) << 61) | (byte457 << 53) | (byte458 << 45) | (byte459 << 37) | (byte460 << 29) | (byte461 << 21) | (byte462 << 13) | (byte463 << 5) | (byte464 >>> 3);\n        final long byte465 = blocks[blocksOffset++] & 0xFF;\n        final long byte466 = blocks[blocksOffset++] & 0xFF;\n        final long byte467 = blocks[blocksOffset++] & 0xFF;\n        final long byte468 = blocks[blocksOffset++] & 0xFF;\n        final long byte469 = blocks[blocksOffset++] & 0xFF;\n        final long byte470 = blocks[blocksOffset++] & 0xFF;\n        final long byte471 = blocks[blocksOffset++] & 0xFF;\n        final long byte472 = blocks[blocksOffset++] & 0xFF;\n        values[valuesOffset++] = ((byte464 & 7) << 60) | (byte465 << 52) | (byte466 << 44) | (byte467 << 36) | (byte468 << 28) | (byte469 << 20) | (byte470 << 12) | (byte471 << 4) | (byte472 >>> 4);\n        final long byte473 = blocks[blocksOffset++] & 0xFF;\n        final long byte474 = blocks[blocksOffset++] & 0xFF;\n        final long byte475 = blocks[blocksOffset++] & 0xFF;\n        final long byte476 = blocks[blocksOffset++] & 0xFF;\n        final long byte477 = blocks[blocksOffset++] & 0xFF;\n        final long byte478 = blocks[blocksOffset++] & 0xFF;\n        final long byte479 = blocks[blocksOffset++] & 0xFF;\n        final long byte480 = blocks[blocksOffset++] & 0xFF;\n        values[valuesOffset++] = ((byte472 & 15) << 59) | (byte473 << 51) | (byte474 << 43) | (byte475 << 35) | (byte476 << 27) | (byte477 << 19) | (byte478 << 11) | (byte479 << 3) | (byte480 >>> 5);\n        final long byte481 = blocks[blocksOffset++] & 0xFF;\n        final long byte482 = blocks[blocksOffset++] & 0xFF;\n        final long byte483 = blocks[blocksOffset++] & 0xFF;\n        final long byte484 = blocks[blocksOffset++] & 0xFF;\n        final long byte485 = blocks[blocksOffset++] & 0xFF;\n        final long byte486 = blocks[blocksOffset++] & 0xFF;\n        final long byte487 = blocks[blocksOffset++] & 0xFF;\n        final long byte488 = blocks[blocksOffset++] & 0xFF;\n        values[valuesOffset++] = ((byte480 & 31) << 58) | (byte481 << 50) | (byte482 << 42) | (byte483 << 34) | (byte484 << 26) | (byte485 << 18) | (byte486 << 10) | (byte487 << 2) | (byte488 >>> 6);\n        final long byte489 = blocks[blocksOffset++] & 0xFF;\n        final long byte490 = blocks[blocksOffset++] & 0xFF;\n        final long byte491 = blocks[blocksOffset++] & 0xFF;\n        final long byte492 = blocks[blocksOffset++] & 0xFF;\n        final long byte493 = blocks[blocksOffset++] & 0xFF;\n        final long byte494 = blocks[blocksOffset++] & 0xFF;\n        final long byte495 = blocks[blocksOffset++] & 0xFF;\n        final long byte496 = blocks[blocksOffset++] & 0xFF;\n        values[valuesOffset++] = ((byte488 & 63) << 57) | (byte489 << 49) | (byte490 << 41) | (byte491 << 33) | (byte492 << 25) | (byte493 << 17) | (byte494 << 9) | (byte495 << 1) | (byte496 >>> 7);\n        final long byte497 = blocks[blocksOffset++] & 0xFF;\n        final long byte498 = blocks[blocksOffset++] & 0xFF;\n        final long byte499 = blocks[blocksOffset++] & 0xFF;\n        final long byte500 = blocks[blocksOffset++] & 0xFF;\n        final long byte501 = blocks[blocksOffset++] & 0xFF;\n        final long byte502 = blocks[blocksOffset++] & 0xFF;\n        final long byte503 = blocks[blocksOffset++] & 0xFF;\n        values[valuesOffset++] = ((byte496 & 127) << 56) | (byte497 << 48) | (byte498 << 40) | (byte499 << 32) | (byte500 << 24) | (byte501 << 16) | (byte502 << 8) | byte503;\n      }\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"353f5909b00345d98d079a7db9a1bbe7485b1ea6","date":1345745476,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/packed/BulkOperationPacked63#decode(byte[],int,long[],int,int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/packed/BulkOperationPacked63#decode(byte[],int,long[],int,int).mjava","sourceNew":"    @Override\n    public void decode(byte[] blocks, int blocksOffset, long[] values, int valuesOffset, int iterations) {\n      assert blocksOffset + 8 * iterations * blockCount() <= blocks.length;\n      assert valuesOffset + iterations * valueCount() <= values.length;\n      for (int i = 0; i < iterations; ++i) {\n        final long byte0 = blocks[blocksOffset++] & 0xFF;\n        final long byte1 = blocks[blocksOffset++] & 0xFF;\n        final long byte2 = blocks[blocksOffset++] & 0xFF;\n        final long byte3 = blocks[blocksOffset++] & 0xFF;\n        final long byte4 = blocks[blocksOffset++] & 0xFF;\n        final long byte5 = blocks[blocksOffset++] & 0xFF;\n        final long byte6 = blocks[blocksOffset++] & 0xFF;\n        final long byte7 = blocks[blocksOffset++] & 0xFF;\n        values[valuesOffset++] = (byte0 << 55) | (byte1 << 47) | (byte2 << 39) | (byte3 << 31) | (byte4 << 23) | (byte5 << 15) | (byte6 << 7) | (byte7 >>> 1);\n        final long byte8 = blocks[blocksOffset++] & 0xFF;\n        final long byte9 = blocks[blocksOffset++] & 0xFF;\n        final long byte10 = blocks[blocksOffset++] & 0xFF;\n        final long byte11 = blocks[blocksOffset++] & 0xFF;\n        final long byte12 = blocks[blocksOffset++] & 0xFF;\n        final long byte13 = blocks[blocksOffset++] & 0xFF;\n        final long byte14 = blocks[blocksOffset++] & 0xFF;\n        final long byte15 = blocks[blocksOffset++] & 0xFF;\n        values[valuesOffset++] = ((byte7 & 1) << 62) | (byte8 << 54) | (byte9 << 46) | (byte10 << 38) | (byte11 << 30) | (byte12 << 22) | (byte13 << 14) | (byte14 << 6) | (byte15 >>> 2);\n        final long byte16 = blocks[blocksOffset++] & 0xFF;\n        final long byte17 = blocks[blocksOffset++] & 0xFF;\n        final long byte18 = blocks[blocksOffset++] & 0xFF;\n        final long byte19 = blocks[blocksOffset++] & 0xFF;\n        final long byte20 = blocks[blocksOffset++] & 0xFF;\n        final long byte21 = blocks[blocksOffset++] & 0xFF;\n        final long byte22 = blocks[blocksOffset++] & 0xFF;\n        final long byte23 = blocks[blocksOffset++] & 0xFF;\n        values[valuesOffset++] = ((byte15 & 3) << 61) | (byte16 << 53) | (byte17 << 45) | (byte18 << 37) | (byte19 << 29) | (byte20 << 21) | (byte21 << 13) | (byte22 << 5) | (byte23 >>> 3);\n        final long byte24 = blocks[blocksOffset++] & 0xFF;\n        final long byte25 = blocks[blocksOffset++] & 0xFF;\n        final long byte26 = blocks[blocksOffset++] & 0xFF;\n        final long byte27 = blocks[blocksOffset++] & 0xFF;\n        final long byte28 = blocks[blocksOffset++] & 0xFF;\n        final long byte29 = blocks[blocksOffset++] & 0xFF;\n        final long byte30 = blocks[blocksOffset++] & 0xFF;\n        final long byte31 = blocks[blocksOffset++] & 0xFF;\n        values[valuesOffset++] = ((byte23 & 7) << 60) | (byte24 << 52) | (byte25 << 44) | (byte26 << 36) | (byte27 << 28) | (byte28 << 20) | (byte29 << 12) | (byte30 << 4) | (byte31 >>> 4);\n        final long byte32 = blocks[blocksOffset++] & 0xFF;\n        final long byte33 = blocks[blocksOffset++] & 0xFF;\n        final long byte34 = blocks[blocksOffset++] & 0xFF;\n        final long byte35 = blocks[blocksOffset++] & 0xFF;\n        final long byte36 = blocks[blocksOffset++] & 0xFF;\n        final long byte37 = blocks[blocksOffset++] & 0xFF;\n        final long byte38 = blocks[blocksOffset++] & 0xFF;\n        final long byte39 = blocks[blocksOffset++] & 0xFF;\n        values[valuesOffset++] = ((byte31 & 15) << 59) | (byte32 << 51) | (byte33 << 43) | (byte34 << 35) | (byte35 << 27) | (byte36 << 19) | (byte37 << 11) | (byte38 << 3) | (byte39 >>> 5);\n        final long byte40 = blocks[blocksOffset++] & 0xFF;\n        final long byte41 = blocks[blocksOffset++] & 0xFF;\n        final long byte42 = blocks[blocksOffset++] & 0xFF;\n        final long byte43 = blocks[blocksOffset++] & 0xFF;\n        final long byte44 = blocks[blocksOffset++] & 0xFF;\n        final long byte45 = blocks[blocksOffset++] & 0xFF;\n        final long byte46 = blocks[blocksOffset++] & 0xFF;\n        final long byte47 = blocks[blocksOffset++] & 0xFF;\n        values[valuesOffset++] = ((byte39 & 31) << 58) | (byte40 << 50) | (byte41 << 42) | (byte42 << 34) | (byte43 << 26) | (byte44 << 18) | (byte45 << 10) | (byte46 << 2) | (byte47 >>> 6);\n        final long byte48 = blocks[blocksOffset++] & 0xFF;\n        final long byte49 = blocks[blocksOffset++] & 0xFF;\n        final long byte50 = blocks[blocksOffset++] & 0xFF;\n        final long byte51 = blocks[blocksOffset++] & 0xFF;\n        final long byte52 = blocks[blocksOffset++] & 0xFF;\n        final long byte53 = blocks[blocksOffset++] & 0xFF;\n        final long byte54 = blocks[blocksOffset++] & 0xFF;\n        final long byte55 = blocks[blocksOffset++] & 0xFF;\n        values[valuesOffset++] = ((byte47 & 63) << 57) | (byte48 << 49) | (byte49 << 41) | (byte50 << 33) | (byte51 << 25) | (byte52 << 17) | (byte53 << 9) | (byte54 << 1) | (byte55 >>> 7);\n        final long byte56 = blocks[blocksOffset++] & 0xFF;\n        final long byte57 = blocks[blocksOffset++] & 0xFF;\n        final long byte58 = blocks[blocksOffset++] & 0xFF;\n        final long byte59 = blocks[blocksOffset++] & 0xFF;\n        final long byte60 = blocks[blocksOffset++] & 0xFF;\n        final long byte61 = blocks[blocksOffset++] & 0xFF;\n        final long byte62 = blocks[blocksOffset++] & 0xFF;\n        values[valuesOffset++] = ((byte55 & 127) << 56) | (byte56 << 48) | (byte57 << 40) | (byte58 << 32) | (byte59 << 24) | (byte60 << 16) | (byte61 << 8) | byte62;\n        final long byte63 = blocks[blocksOffset++] & 0xFF;\n        final long byte64 = blocks[blocksOffset++] & 0xFF;\n        final long byte65 = blocks[blocksOffset++] & 0xFF;\n        final long byte66 = blocks[blocksOffset++] & 0xFF;\n        final long byte67 = blocks[blocksOffset++] & 0xFF;\n        final long byte68 = blocks[blocksOffset++] & 0xFF;\n        final long byte69 = blocks[blocksOffset++] & 0xFF;\n        final long byte70 = blocks[blocksOffset++] & 0xFF;\n        values[valuesOffset++] = (byte63 << 55) | (byte64 << 47) | (byte65 << 39) | (byte66 << 31) | (byte67 << 23) | (byte68 << 15) | (byte69 << 7) | (byte70 >>> 1);\n        final long byte71 = blocks[blocksOffset++] & 0xFF;\n        final long byte72 = blocks[blocksOffset++] & 0xFF;\n        final long byte73 = blocks[blocksOffset++] & 0xFF;\n        final long byte74 = blocks[blocksOffset++] & 0xFF;\n        final long byte75 = blocks[blocksOffset++] & 0xFF;\n        final long byte76 = blocks[blocksOffset++] & 0xFF;\n        final long byte77 = blocks[blocksOffset++] & 0xFF;\n        final long byte78 = blocks[blocksOffset++] & 0xFF;\n        values[valuesOffset++] = ((byte70 & 1) << 62) | (byte71 << 54) | (byte72 << 46) | (byte73 << 38) | (byte74 << 30) | (byte75 << 22) | (byte76 << 14) | (byte77 << 6) | (byte78 >>> 2);\n        final long byte79 = blocks[blocksOffset++] & 0xFF;\n        final long byte80 = blocks[blocksOffset++] & 0xFF;\n        final long byte81 = blocks[blocksOffset++] & 0xFF;\n        final long byte82 = blocks[blocksOffset++] & 0xFF;\n        final long byte83 = blocks[blocksOffset++] & 0xFF;\n        final long byte84 = blocks[blocksOffset++] & 0xFF;\n        final long byte85 = blocks[blocksOffset++] & 0xFF;\n        final long byte86 = blocks[blocksOffset++] & 0xFF;\n        values[valuesOffset++] = ((byte78 & 3) << 61) | (byte79 << 53) | (byte80 << 45) | (byte81 << 37) | (byte82 << 29) | (byte83 << 21) | (byte84 << 13) | (byte85 << 5) | (byte86 >>> 3);\n        final long byte87 = blocks[blocksOffset++] & 0xFF;\n        final long byte88 = blocks[blocksOffset++] & 0xFF;\n        final long byte89 = blocks[blocksOffset++] & 0xFF;\n        final long byte90 = blocks[blocksOffset++] & 0xFF;\n        final long byte91 = blocks[blocksOffset++] & 0xFF;\n        final long byte92 = blocks[blocksOffset++] & 0xFF;\n        final long byte93 = blocks[blocksOffset++] & 0xFF;\n        final long byte94 = blocks[blocksOffset++] & 0xFF;\n        values[valuesOffset++] = ((byte86 & 7) << 60) | (byte87 << 52) | (byte88 << 44) | (byte89 << 36) | (byte90 << 28) | (byte91 << 20) | (byte92 << 12) | (byte93 << 4) | (byte94 >>> 4);\n        final long byte95 = blocks[blocksOffset++] & 0xFF;\n        final long byte96 = blocks[blocksOffset++] & 0xFF;\n        final long byte97 = blocks[blocksOffset++] & 0xFF;\n        final long byte98 = blocks[blocksOffset++] & 0xFF;\n        final long byte99 = blocks[blocksOffset++] & 0xFF;\n        final long byte100 = blocks[blocksOffset++] & 0xFF;\n        final long byte101 = blocks[blocksOffset++] & 0xFF;\n        final long byte102 = blocks[blocksOffset++] & 0xFF;\n        values[valuesOffset++] = ((byte94 & 15) << 59) | (byte95 << 51) | (byte96 << 43) | (byte97 << 35) | (byte98 << 27) | (byte99 << 19) | (byte100 << 11) | (byte101 << 3) | (byte102 >>> 5);\n        final long byte103 = blocks[blocksOffset++] & 0xFF;\n        final long byte104 = blocks[blocksOffset++] & 0xFF;\n        final long byte105 = blocks[blocksOffset++] & 0xFF;\n        final long byte106 = blocks[blocksOffset++] & 0xFF;\n        final long byte107 = blocks[blocksOffset++] & 0xFF;\n        final long byte108 = blocks[blocksOffset++] & 0xFF;\n        final long byte109 = blocks[blocksOffset++] & 0xFF;\n        final long byte110 = blocks[blocksOffset++] & 0xFF;\n        values[valuesOffset++] = ((byte102 & 31) << 58) | (byte103 << 50) | (byte104 << 42) | (byte105 << 34) | (byte106 << 26) | (byte107 << 18) | (byte108 << 10) | (byte109 << 2) | (byte110 >>> 6);\n        final long byte111 = blocks[blocksOffset++] & 0xFF;\n        final long byte112 = blocks[blocksOffset++] & 0xFF;\n        final long byte113 = blocks[blocksOffset++] & 0xFF;\n        final long byte114 = blocks[blocksOffset++] & 0xFF;\n        final long byte115 = blocks[blocksOffset++] & 0xFF;\n        final long byte116 = blocks[blocksOffset++] & 0xFF;\n        final long byte117 = blocks[blocksOffset++] & 0xFF;\n        final long byte118 = blocks[blocksOffset++] & 0xFF;\n        values[valuesOffset++] = ((byte110 & 63) << 57) | (byte111 << 49) | (byte112 << 41) | (byte113 << 33) | (byte114 << 25) | (byte115 << 17) | (byte116 << 9) | (byte117 << 1) | (byte118 >>> 7);\n        final long byte119 = blocks[blocksOffset++] & 0xFF;\n        final long byte120 = blocks[blocksOffset++] & 0xFF;\n        final long byte121 = blocks[blocksOffset++] & 0xFF;\n        final long byte122 = blocks[blocksOffset++] & 0xFF;\n        final long byte123 = blocks[blocksOffset++] & 0xFF;\n        final long byte124 = blocks[blocksOffset++] & 0xFF;\n        final long byte125 = blocks[blocksOffset++] & 0xFF;\n        values[valuesOffset++] = ((byte118 & 127) << 56) | (byte119 << 48) | (byte120 << 40) | (byte121 << 32) | (byte122 << 24) | (byte123 << 16) | (byte124 << 8) | byte125;\n        final long byte126 = blocks[blocksOffset++] & 0xFF;\n        final long byte127 = blocks[blocksOffset++] & 0xFF;\n        final long byte128 = blocks[blocksOffset++] & 0xFF;\n        final long byte129 = blocks[blocksOffset++] & 0xFF;\n        final long byte130 = blocks[blocksOffset++] & 0xFF;\n        final long byte131 = blocks[blocksOffset++] & 0xFF;\n        final long byte132 = blocks[blocksOffset++] & 0xFF;\n        final long byte133 = blocks[blocksOffset++] & 0xFF;\n        values[valuesOffset++] = (byte126 << 55) | (byte127 << 47) | (byte128 << 39) | (byte129 << 31) | (byte130 << 23) | (byte131 << 15) | (byte132 << 7) | (byte133 >>> 1);\n        final long byte134 = blocks[blocksOffset++] & 0xFF;\n        final long byte135 = blocks[blocksOffset++] & 0xFF;\n        final long byte136 = blocks[blocksOffset++] & 0xFF;\n        final long byte137 = blocks[blocksOffset++] & 0xFF;\n        final long byte138 = blocks[blocksOffset++] & 0xFF;\n        final long byte139 = blocks[blocksOffset++] & 0xFF;\n        final long byte140 = blocks[blocksOffset++] & 0xFF;\n        final long byte141 = blocks[blocksOffset++] & 0xFF;\n        values[valuesOffset++] = ((byte133 & 1) << 62) | (byte134 << 54) | (byte135 << 46) | (byte136 << 38) | (byte137 << 30) | (byte138 << 22) | (byte139 << 14) | (byte140 << 6) | (byte141 >>> 2);\n        final long byte142 = blocks[blocksOffset++] & 0xFF;\n        final long byte143 = blocks[blocksOffset++] & 0xFF;\n        final long byte144 = blocks[blocksOffset++] & 0xFF;\n        final long byte145 = blocks[blocksOffset++] & 0xFF;\n        final long byte146 = blocks[blocksOffset++] & 0xFF;\n        final long byte147 = blocks[blocksOffset++] & 0xFF;\n        final long byte148 = blocks[blocksOffset++] & 0xFF;\n        final long byte149 = blocks[blocksOffset++] & 0xFF;\n        values[valuesOffset++] = ((byte141 & 3) << 61) | (byte142 << 53) | (byte143 << 45) | (byte144 << 37) | (byte145 << 29) | (byte146 << 21) | (byte147 << 13) | (byte148 << 5) | (byte149 >>> 3);\n        final long byte150 = blocks[blocksOffset++] & 0xFF;\n        final long byte151 = blocks[blocksOffset++] & 0xFF;\n        final long byte152 = blocks[blocksOffset++] & 0xFF;\n        final long byte153 = blocks[blocksOffset++] & 0xFF;\n        final long byte154 = blocks[blocksOffset++] & 0xFF;\n        final long byte155 = blocks[blocksOffset++] & 0xFF;\n        final long byte156 = blocks[blocksOffset++] & 0xFF;\n        final long byte157 = blocks[blocksOffset++] & 0xFF;\n        values[valuesOffset++] = ((byte149 & 7) << 60) | (byte150 << 52) | (byte151 << 44) | (byte152 << 36) | (byte153 << 28) | (byte154 << 20) | (byte155 << 12) | (byte156 << 4) | (byte157 >>> 4);\n        final long byte158 = blocks[blocksOffset++] & 0xFF;\n        final long byte159 = blocks[blocksOffset++] & 0xFF;\n        final long byte160 = blocks[blocksOffset++] & 0xFF;\n        final long byte161 = blocks[blocksOffset++] & 0xFF;\n        final long byte162 = blocks[blocksOffset++] & 0xFF;\n        final long byte163 = blocks[blocksOffset++] & 0xFF;\n        final long byte164 = blocks[blocksOffset++] & 0xFF;\n        final long byte165 = blocks[blocksOffset++] & 0xFF;\n        values[valuesOffset++] = ((byte157 & 15) << 59) | (byte158 << 51) | (byte159 << 43) | (byte160 << 35) | (byte161 << 27) | (byte162 << 19) | (byte163 << 11) | (byte164 << 3) | (byte165 >>> 5);\n        final long byte166 = blocks[blocksOffset++] & 0xFF;\n        final long byte167 = blocks[blocksOffset++] & 0xFF;\n        final long byte168 = blocks[blocksOffset++] & 0xFF;\n        final long byte169 = blocks[blocksOffset++] & 0xFF;\n        final long byte170 = blocks[blocksOffset++] & 0xFF;\n        final long byte171 = blocks[blocksOffset++] & 0xFF;\n        final long byte172 = blocks[blocksOffset++] & 0xFF;\n        final long byte173 = blocks[blocksOffset++] & 0xFF;\n        values[valuesOffset++] = ((byte165 & 31) << 58) | (byte166 << 50) | (byte167 << 42) | (byte168 << 34) | (byte169 << 26) | (byte170 << 18) | (byte171 << 10) | (byte172 << 2) | (byte173 >>> 6);\n        final long byte174 = blocks[blocksOffset++] & 0xFF;\n        final long byte175 = blocks[blocksOffset++] & 0xFF;\n        final long byte176 = blocks[blocksOffset++] & 0xFF;\n        final long byte177 = blocks[blocksOffset++] & 0xFF;\n        final long byte178 = blocks[blocksOffset++] & 0xFF;\n        final long byte179 = blocks[blocksOffset++] & 0xFF;\n        final long byte180 = blocks[blocksOffset++] & 0xFF;\n        final long byte181 = blocks[blocksOffset++] & 0xFF;\n        values[valuesOffset++] = ((byte173 & 63) << 57) | (byte174 << 49) | (byte175 << 41) | (byte176 << 33) | (byte177 << 25) | (byte178 << 17) | (byte179 << 9) | (byte180 << 1) | (byte181 >>> 7);\n        final long byte182 = blocks[blocksOffset++] & 0xFF;\n        final long byte183 = blocks[blocksOffset++] & 0xFF;\n        final long byte184 = blocks[blocksOffset++] & 0xFF;\n        final long byte185 = blocks[blocksOffset++] & 0xFF;\n        final long byte186 = blocks[blocksOffset++] & 0xFF;\n        final long byte187 = blocks[blocksOffset++] & 0xFF;\n        final long byte188 = blocks[blocksOffset++] & 0xFF;\n        values[valuesOffset++] = ((byte181 & 127) << 56) | (byte182 << 48) | (byte183 << 40) | (byte184 << 32) | (byte185 << 24) | (byte186 << 16) | (byte187 << 8) | byte188;\n        final long byte189 = blocks[blocksOffset++] & 0xFF;\n        final long byte190 = blocks[blocksOffset++] & 0xFF;\n        final long byte191 = blocks[blocksOffset++] & 0xFF;\n        final long byte192 = blocks[blocksOffset++] & 0xFF;\n        final long byte193 = blocks[blocksOffset++] & 0xFF;\n        final long byte194 = blocks[blocksOffset++] & 0xFF;\n        final long byte195 = blocks[blocksOffset++] & 0xFF;\n        final long byte196 = blocks[blocksOffset++] & 0xFF;\n        values[valuesOffset++] = (byte189 << 55) | (byte190 << 47) | (byte191 << 39) | (byte192 << 31) | (byte193 << 23) | (byte194 << 15) | (byte195 << 7) | (byte196 >>> 1);\n        final long byte197 = blocks[blocksOffset++] & 0xFF;\n        final long byte198 = blocks[blocksOffset++] & 0xFF;\n        final long byte199 = blocks[blocksOffset++] & 0xFF;\n        final long byte200 = blocks[blocksOffset++] & 0xFF;\n        final long byte201 = blocks[blocksOffset++] & 0xFF;\n        final long byte202 = blocks[blocksOffset++] & 0xFF;\n        final long byte203 = blocks[blocksOffset++] & 0xFF;\n        final long byte204 = blocks[blocksOffset++] & 0xFF;\n        values[valuesOffset++] = ((byte196 & 1) << 62) | (byte197 << 54) | (byte198 << 46) | (byte199 << 38) | (byte200 << 30) | (byte201 << 22) | (byte202 << 14) | (byte203 << 6) | (byte204 >>> 2);\n        final long byte205 = blocks[blocksOffset++] & 0xFF;\n        final long byte206 = blocks[blocksOffset++] & 0xFF;\n        final long byte207 = blocks[blocksOffset++] & 0xFF;\n        final long byte208 = blocks[blocksOffset++] & 0xFF;\n        final long byte209 = blocks[blocksOffset++] & 0xFF;\n        final long byte210 = blocks[blocksOffset++] & 0xFF;\n        final long byte211 = blocks[blocksOffset++] & 0xFF;\n        final long byte212 = blocks[blocksOffset++] & 0xFF;\n        values[valuesOffset++] = ((byte204 & 3) << 61) | (byte205 << 53) | (byte206 << 45) | (byte207 << 37) | (byte208 << 29) | (byte209 << 21) | (byte210 << 13) | (byte211 << 5) | (byte212 >>> 3);\n        final long byte213 = blocks[blocksOffset++] & 0xFF;\n        final long byte214 = blocks[blocksOffset++] & 0xFF;\n        final long byte215 = blocks[blocksOffset++] & 0xFF;\n        final long byte216 = blocks[blocksOffset++] & 0xFF;\n        final long byte217 = blocks[blocksOffset++] & 0xFF;\n        final long byte218 = blocks[blocksOffset++] & 0xFF;\n        final long byte219 = blocks[blocksOffset++] & 0xFF;\n        final long byte220 = blocks[blocksOffset++] & 0xFF;\n        values[valuesOffset++] = ((byte212 & 7) << 60) | (byte213 << 52) | (byte214 << 44) | (byte215 << 36) | (byte216 << 28) | (byte217 << 20) | (byte218 << 12) | (byte219 << 4) | (byte220 >>> 4);\n        final long byte221 = blocks[blocksOffset++] & 0xFF;\n        final long byte222 = blocks[blocksOffset++] & 0xFF;\n        final long byte223 = blocks[blocksOffset++] & 0xFF;\n        final long byte224 = blocks[blocksOffset++] & 0xFF;\n        final long byte225 = blocks[blocksOffset++] & 0xFF;\n        final long byte226 = blocks[blocksOffset++] & 0xFF;\n        final long byte227 = blocks[blocksOffset++] & 0xFF;\n        final long byte228 = blocks[blocksOffset++] & 0xFF;\n        values[valuesOffset++] = ((byte220 & 15) << 59) | (byte221 << 51) | (byte222 << 43) | (byte223 << 35) | (byte224 << 27) | (byte225 << 19) | (byte226 << 11) | (byte227 << 3) | (byte228 >>> 5);\n        final long byte229 = blocks[blocksOffset++] & 0xFF;\n        final long byte230 = blocks[blocksOffset++] & 0xFF;\n        final long byte231 = blocks[blocksOffset++] & 0xFF;\n        final long byte232 = blocks[blocksOffset++] & 0xFF;\n        final long byte233 = blocks[blocksOffset++] & 0xFF;\n        final long byte234 = blocks[blocksOffset++] & 0xFF;\n        final long byte235 = blocks[blocksOffset++] & 0xFF;\n        final long byte236 = blocks[blocksOffset++] & 0xFF;\n        values[valuesOffset++] = ((byte228 & 31) << 58) | (byte229 << 50) | (byte230 << 42) | (byte231 << 34) | (byte232 << 26) | (byte233 << 18) | (byte234 << 10) | (byte235 << 2) | (byte236 >>> 6);\n        final long byte237 = blocks[blocksOffset++] & 0xFF;\n        final long byte238 = blocks[blocksOffset++] & 0xFF;\n        final long byte239 = blocks[blocksOffset++] & 0xFF;\n        final long byte240 = blocks[blocksOffset++] & 0xFF;\n        final long byte241 = blocks[blocksOffset++] & 0xFF;\n        final long byte242 = blocks[blocksOffset++] & 0xFF;\n        final long byte243 = blocks[blocksOffset++] & 0xFF;\n        final long byte244 = blocks[blocksOffset++] & 0xFF;\n        values[valuesOffset++] = ((byte236 & 63) << 57) | (byte237 << 49) | (byte238 << 41) | (byte239 << 33) | (byte240 << 25) | (byte241 << 17) | (byte242 << 9) | (byte243 << 1) | (byte244 >>> 7);\n        final long byte245 = blocks[blocksOffset++] & 0xFF;\n        final long byte246 = blocks[blocksOffset++] & 0xFF;\n        final long byte247 = blocks[blocksOffset++] & 0xFF;\n        final long byte248 = blocks[blocksOffset++] & 0xFF;\n        final long byte249 = blocks[blocksOffset++] & 0xFF;\n        final long byte250 = blocks[blocksOffset++] & 0xFF;\n        final long byte251 = blocks[blocksOffset++] & 0xFF;\n        values[valuesOffset++] = ((byte244 & 127) << 56) | (byte245 << 48) | (byte246 << 40) | (byte247 << 32) | (byte248 << 24) | (byte249 << 16) | (byte250 << 8) | byte251;\n        final long byte252 = blocks[blocksOffset++] & 0xFF;\n        final long byte253 = blocks[blocksOffset++] & 0xFF;\n        final long byte254 = blocks[blocksOffset++] & 0xFF;\n        final long byte255 = blocks[blocksOffset++] & 0xFF;\n        final long byte256 = blocks[blocksOffset++] & 0xFF;\n        final long byte257 = blocks[blocksOffset++] & 0xFF;\n        final long byte258 = blocks[blocksOffset++] & 0xFF;\n        final long byte259 = blocks[blocksOffset++] & 0xFF;\n        values[valuesOffset++] = (byte252 << 55) | (byte253 << 47) | (byte254 << 39) | (byte255 << 31) | (byte256 << 23) | (byte257 << 15) | (byte258 << 7) | (byte259 >>> 1);\n        final long byte260 = blocks[blocksOffset++] & 0xFF;\n        final long byte261 = blocks[blocksOffset++] & 0xFF;\n        final long byte262 = blocks[blocksOffset++] & 0xFF;\n        final long byte263 = blocks[blocksOffset++] & 0xFF;\n        final long byte264 = blocks[blocksOffset++] & 0xFF;\n        final long byte265 = blocks[blocksOffset++] & 0xFF;\n        final long byte266 = blocks[blocksOffset++] & 0xFF;\n        final long byte267 = blocks[blocksOffset++] & 0xFF;\n        values[valuesOffset++] = ((byte259 & 1) << 62) | (byte260 << 54) | (byte261 << 46) | (byte262 << 38) | (byte263 << 30) | (byte264 << 22) | (byte265 << 14) | (byte266 << 6) | (byte267 >>> 2);\n        final long byte268 = blocks[blocksOffset++] & 0xFF;\n        final long byte269 = blocks[blocksOffset++] & 0xFF;\n        final long byte270 = blocks[blocksOffset++] & 0xFF;\n        final long byte271 = blocks[blocksOffset++] & 0xFF;\n        final long byte272 = blocks[blocksOffset++] & 0xFF;\n        final long byte273 = blocks[blocksOffset++] & 0xFF;\n        final long byte274 = blocks[blocksOffset++] & 0xFF;\n        final long byte275 = blocks[blocksOffset++] & 0xFF;\n        values[valuesOffset++] = ((byte267 & 3) << 61) | (byte268 << 53) | (byte269 << 45) | (byte270 << 37) | (byte271 << 29) | (byte272 << 21) | (byte273 << 13) | (byte274 << 5) | (byte275 >>> 3);\n        final long byte276 = blocks[blocksOffset++] & 0xFF;\n        final long byte277 = blocks[blocksOffset++] & 0xFF;\n        final long byte278 = blocks[blocksOffset++] & 0xFF;\n        final long byte279 = blocks[blocksOffset++] & 0xFF;\n        final long byte280 = blocks[blocksOffset++] & 0xFF;\n        final long byte281 = blocks[blocksOffset++] & 0xFF;\n        final long byte282 = blocks[blocksOffset++] & 0xFF;\n        final long byte283 = blocks[blocksOffset++] & 0xFF;\n        values[valuesOffset++] = ((byte275 & 7) << 60) | (byte276 << 52) | (byte277 << 44) | (byte278 << 36) | (byte279 << 28) | (byte280 << 20) | (byte281 << 12) | (byte282 << 4) | (byte283 >>> 4);\n        final long byte284 = blocks[blocksOffset++] & 0xFF;\n        final long byte285 = blocks[blocksOffset++] & 0xFF;\n        final long byte286 = blocks[blocksOffset++] & 0xFF;\n        final long byte287 = blocks[blocksOffset++] & 0xFF;\n        final long byte288 = blocks[blocksOffset++] & 0xFF;\n        final long byte289 = blocks[blocksOffset++] & 0xFF;\n        final long byte290 = blocks[blocksOffset++] & 0xFF;\n        final long byte291 = blocks[blocksOffset++] & 0xFF;\n        values[valuesOffset++] = ((byte283 & 15) << 59) | (byte284 << 51) | (byte285 << 43) | (byte286 << 35) | (byte287 << 27) | (byte288 << 19) | (byte289 << 11) | (byte290 << 3) | (byte291 >>> 5);\n        final long byte292 = blocks[blocksOffset++] & 0xFF;\n        final long byte293 = blocks[blocksOffset++] & 0xFF;\n        final long byte294 = blocks[blocksOffset++] & 0xFF;\n        final long byte295 = blocks[blocksOffset++] & 0xFF;\n        final long byte296 = blocks[blocksOffset++] & 0xFF;\n        final long byte297 = blocks[blocksOffset++] & 0xFF;\n        final long byte298 = blocks[blocksOffset++] & 0xFF;\n        final long byte299 = blocks[blocksOffset++] & 0xFF;\n        values[valuesOffset++] = ((byte291 & 31) << 58) | (byte292 << 50) | (byte293 << 42) | (byte294 << 34) | (byte295 << 26) | (byte296 << 18) | (byte297 << 10) | (byte298 << 2) | (byte299 >>> 6);\n        final long byte300 = blocks[blocksOffset++] & 0xFF;\n        final long byte301 = blocks[blocksOffset++] & 0xFF;\n        final long byte302 = blocks[blocksOffset++] & 0xFF;\n        final long byte303 = blocks[blocksOffset++] & 0xFF;\n        final long byte304 = blocks[blocksOffset++] & 0xFF;\n        final long byte305 = blocks[blocksOffset++] & 0xFF;\n        final long byte306 = blocks[blocksOffset++] & 0xFF;\n        final long byte307 = blocks[blocksOffset++] & 0xFF;\n        values[valuesOffset++] = ((byte299 & 63) << 57) | (byte300 << 49) | (byte301 << 41) | (byte302 << 33) | (byte303 << 25) | (byte304 << 17) | (byte305 << 9) | (byte306 << 1) | (byte307 >>> 7);\n        final long byte308 = blocks[blocksOffset++] & 0xFF;\n        final long byte309 = blocks[blocksOffset++] & 0xFF;\n        final long byte310 = blocks[blocksOffset++] & 0xFF;\n        final long byte311 = blocks[blocksOffset++] & 0xFF;\n        final long byte312 = blocks[blocksOffset++] & 0xFF;\n        final long byte313 = blocks[blocksOffset++] & 0xFF;\n        final long byte314 = blocks[blocksOffset++] & 0xFF;\n        values[valuesOffset++] = ((byte307 & 127) << 56) | (byte308 << 48) | (byte309 << 40) | (byte310 << 32) | (byte311 << 24) | (byte312 << 16) | (byte313 << 8) | byte314;\n        final long byte315 = blocks[blocksOffset++] & 0xFF;\n        final long byte316 = blocks[blocksOffset++] & 0xFF;\n        final long byte317 = blocks[blocksOffset++] & 0xFF;\n        final long byte318 = blocks[blocksOffset++] & 0xFF;\n        final long byte319 = blocks[blocksOffset++] & 0xFF;\n        final long byte320 = blocks[blocksOffset++] & 0xFF;\n        final long byte321 = blocks[blocksOffset++] & 0xFF;\n        final long byte322 = blocks[blocksOffset++] & 0xFF;\n        values[valuesOffset++] = (byte315 << 55) | (byte316 << 47) | (byte317 << 39) | (byte318 << 31) | (byte319 << 23) | (byte320 << 15) | (byte321 << 7) | (byte322 >>> 1);\n        final long byte323 = blocks[blocksOffset++] & 0xFF;\n        final long byte324 = blocks[blocksOffset++] & 0xFF;\n        final long byte325 = blocks[blocksOffset++] & 0xFF;\n        final long byte326 = blocks[blocksOffset++] & 0xFF;\n        final long byte327 = blocks[blocksOffset++] & 0xFF;\n        final long byte328 = blocks[blocksOffset++] & 0xFF;\n        final long byte329 = blocks[blocksOffset++] & 0xFF;\n        final long byte330 = blocks[blocksOffset++] & 0xFF;\n        values[valuesOffset++] = ((byte322 & 1) << 62) | (byte323 << 54) | (byte324 << 46) | (byte325 << 38) | (byte326 << 30) | (byte327 << 22) | (byte328 << 14) | (byte329 << 6) | (byte330 >>> 2);\n        final long byte331 = blocks[blocksOffset++] & 0xFF;\n        final long byte332 = blocks[blocksOffset++] & 0xFF;\n        final long byte333 = blocks[blocksOffset++] & 0xFF;\n        final long byte334 = blocks[blocksOffset++] & 0xFF;\n        final long byte335 = blocks[blocksOffset++] & 0xFF;\n        final long byte336 = blocks[blocksOffset++] & 0xFF;\n        final long byte337 = blocks[blocksOffset++] & 0xFF;\n        final long byte338 = blocks[blocksOffset++] & 0xFF;\n        values[valuesOffset++] = ((byte330 & 3) << 61) | (byte331 << 53) | (byte332 << 45) | (byte333 << 37) | (byte334 << 29) | (byte335 << 21) | (byte336 << 13) | (byte337 << 5) | (byte338 >>> 3);\n        final long byte339 = blocks[blocksOffset++] & 0xFF;\n        final long byte340 = blocks[blocksOffset++] & 0xFF;\n        final long byte341 = blocks[blocksOffset++] & 0xFF;\n        final long byte342 = blocks[blocksOffset++] & 0xFF;\n        final long byte343 = blocks[blocksOffset++] & 0xFF;\n        final long byte344 = blocks[blocksOffset++] & 0xFF;\n        final long byte345 = blocks[blocksOffset++] & 0xFF;\n        final long byte346 = blocks[blocksOffset++] & 0xFF;\n        values[valuesOffset++] = ((byte338 & 7) << 60) | (byte339 << 52) | (byte340 << 44) | (byte341 << 36) | (byte342 << 28) | (byte343 << 20) | (byte344 << 12) | (byte345 << 4) | (byte346 >>> 4);\n        final long byte347 = blocks[blocksOffset++] & 0xFF;\n        final long byte348 = blocks[blocksOffset++] & 0xFF;\n        final long byte349 = blocks[blocksOffset++] & 0xFF;\n        final long byte350 = blocks[blocksOffset++] & 0xFF;\n        final long byte351 = blocks[blocksOffset++] & 0xFF;\n        final long byte352 = blocks[blocksOffset++] & 0xFF;\n        final long byte353 = blocks[blocksOffset++] & 0xFF;\n        final long byte354 = blocks[blocksOffset++] & 0xFF;\n        values[valuesOffset++] = ((byte346 & 15) << 59) | (byte347 << 51) | (byte348 << 43) | (byte349 << 35) | (byte350 << 27) | (byte351 << 19) | (byte352 << 11) | (byte353 << 3) | (byte354 >>> 5);\n        final long byte355 = blocks[blocksOffset++] & 0xFF;\n        final long byte356 = blocks[blocksOffset++] & 0xFF;\n        final long byte357 = blocks[blocksOffset++] & 0xFF;\n        final long byte358 = blocks[blocksOffset++] & 0xFF;\n        final long byte359 = blocks[blocksOffset++] & 0xFF;\n        final long byte360 = blocks[blocksOffset++] & 0xFF;\n        final long byte361 = blocks[blocksOffset++] & 0xFF;\n        final long byte362 = blocks[blocksOffset++] & 0xFF;\n        values[valuesOffset++] = ((byte354 & 31) << 58) | (byte355 << 50) | (byte356 << 42) | (byte357 << 34) | (byte358 << 26) | (byte359 << 18) | (byte360 << 10) | (byte361 << 2) | (byte362 >>> 6);\n        final long byte363 = blocks[blocksOffset++] & 0xFF;\n        final long byte364 = blocks[blocksOffset++] & 0xFF;\n        final long byte365 = blocks[blocksOffset++] & 0xFF;\n        final long byte366 = blocks[blocksOffset++] & 0xFF;\n        final long byte367 = blocks[blocksOffset++] & 0xFF;\n        final long byte368 = blocks[blocksOffset++] & 0xFF;\n        final long byte369 = blocks[blocksOffset++] & 0xFF;\n        final long byte370 = blocks[blocksOffset++] & 0xFF;\n        values[valuesOffset++] = ((byte362 & 63) << 57) | (byte363 << 49) | (byte364 << 41) | (byte365 << 33) | (byte366 << 25) | (byte367 << 17) | (byte368 << 9) | (byte369 << 1) | (byte370 >>> 7);\n        final long byte371 = blocks[blocksOffset++] & 0xFF;\n        final long byte372 = blocks[blocksOffset++] & 0xFF;\n        final long byte373 = blocks[blocksOffset++] & 0xFF;\n        final long byte374 = blocks[blocksOffset++] & 0xFF;\n        final long byte375 = blocks[blocksOffset++] & 0xFF;\n        final long byte376 = blocks[blocksOffset++] & 0xFF;\n        final long byte377 = blocks[blocksOffset++] & 0xFF;\n        values[valuesOffset++] = ((byte370 & 127) << 56) | (byte371 << 48) | (byte372 << 40) | (byte373 << 32) | (byte374 << 24) | (byte375 << 16) | (byte376 << 8) | byte377;\n        final long byte378 = blocks[blocksOffset++] & 0xFF;\n        final long byte379 = blocks[blocksOffset++] & 0xFF;\n        final long byte380 = blocks[blocksOffset++] & 0xFF;\n        final long byte381 = blocks[blocksOffset++] & 0xFF;\n        final long byte382 = blocks[blocksOffset++] & 0xFF;\n        final long byte383 = blocks[blocksOffset++] & 0xFF;\n        final long byte384 = blocks[blocksOffset++] & 0xFF;\n        final long byte385 = blocks[blocksOffset++] & 0xFF;\n        values[valuesOffset++] = (byte378 << 55) | (byte379 << 47) | (byte380 << 39) | (byte381 << 31) | (byte382 << 23) | (byte383 << 15) | (byte384 << 7) | (byte385 >>> 1);\n        final long byte386 = blocks[blocksOffset++] & 0xFF;\n        final long byte387 = blocks[blocksOffset++] & 0xFF;\n        final long byte388 = blocks[blocksOffset++] & 0xFF;\n        final long byte389 = blocks[blocksOffset++] & 0xFF;\n        final long byte390 = blocks[blocksOffset++] & 0xFF;\n        final long byte391 = blocks[blocksOffset++] & 0xFF;\n        final long byte392 = blocks[blocksOffset++] & 0xFF;\n        final long byte393 = blocks[blocksOffset++] & 0xFF;\n        values[valuesOffset++] = ((byte385 & 1) << 62) | (byte386 << 54) | (byte387 << 46) | (byte388 << 38) | (byte389 << 30) | (byte390 << 22) | (byte391 << 14) | (byte392 << 6) | (byte393 >>> 2);\n        final long byte394 = blocks[blocksOffset++] & 0xFF;\n        final long byte395 = blocks[blocksOffset++] & 0xFF;\n        final long byte396 = blocks[blocksOffset++] & 0xFF;\n        final long byte397 = blocks[blocksOffset++] & 0xFF;\n        final long byte398 = blocks[blocksOffset++] & 0xFF;\n        final long byte399 = blocks[blocksOffset++] & 0xFF;\n        final long byte400 = blocks[blocksOffset++] & 0xFF;\n        final long byte401 = blocks[blocksOffset++] & 0xFF;\n        values[valuesOffset++] = ((byte393 & 3) << 61) | (byte394 << 53) | (byte395 << 45) | (byte396 << 37) | (byte397 << 29) | (byte398 << 21) | (byte399 << 13) | (byte400 << 5) | (byte401 >>> 3);\n        final long byte402 = blocks[blocksOffset++] & 0xFF;\n        final long byte403 = blocks[blocksOffset++] & 0xFF;\n        final long byte404 = blocks[blocksOffset++] & 0xFF;\n        final long byte405 = blocks[blocksOffset++] & 0xFF;\n        final long byte406 = blocks[blocksOffset++] & 0xFF;\n        final long byte407 = blocks[blocksOffset++] & 0xFF;\n        final long byte408 = blocks[blocksOffset++] & 0xFF;\n        final long byte409 = blocks[blocksOffset++] & 0xFF;\n        values[valuesOffset++] = ((byte401 & 7) << 60) | (byte402 << 52) | (byte403 << 44) | (byte404 << 36) | (byte405 << 28) | (byte406 << 20) | (byte407 << 12) | (byte408 << 4) | (byte409 >>> 4);\n        final long byte410 = blocks[blocksOffset++] & 0xFF;\n        final long byte411 = blocks[blocksOffset++] & 0xFF;\n        final long byte412 = blocks[blocksOffset++] & 0xFF;\n        final long byte413 = blocks[blocksOffset++] & 0xFF;\n        final long byte414 = blocks[blocksOffset++] & 0xFF;\n        final long byte415 = blocks[blocksOffset++] & 0xFF;\n        final long byte416 = blocks[blocksOffset++] & 0xFF;\n        final long byte417 = blocks[blocksOffset++] & 0xFF;\n        values[valuesOffset++] = ((byte409 & 15) << 59) | (byte410 << 51) | (byte411 << 43) | (byte412 << 35) | (byte413 << 27) | (byte414 << 19) | (byte415 << 11) | (byte416 << 3) | (byte417 >>> 5);\n        final long byte418 = blocks[blocksOffset++] & 0xFF;\n        final long byte419 = blocks[blocksOffset++] & 0xFF;\n        final long byte420 = blocks[blocksOffset++] & 0xFF;\n        final long byte421 = blocks[blocksOffset++] & 0xFF;\n        final long byte422 = blocks[blocksOffset++] & 0xFF;\n        final long byte423 = blocks[blocksOffset++] & 0xFF;\n        final long byte424 = blocks[blocksOffset++] & 0xFF;\n        final long byte425 = blocks[blocksOffset++] & 0xFF;\n        values[valuesOffset++] = ((byte417 & 31) << 58) | (byte418 << 50) | (byte419 << 42) | (byte420 << 34) | (byte421 << 26) | (byte422 << 18) | (byte423 << 10) | (byte424 << 2) | (byte425 >>> 6);\n        final long byte426 = blocks[blocksOffset++] & 0xFF;\n        final long byte427 = blocks[blocksOffset++] & 0xFF;\n        final long byte428 = blocks[blocksOffset++] & 0xFF;\n        final long byte429 = blocks[blocksOffset++] & 0xFF;\n        final long byte430 = blocks[blocksOffset++] & 0xFF;\n        final long byte431 = blocks[blocksOffset++] & 0xFF;\n        final long byte432 = blocks[blocksOffset++] & 0xFF;\n        final long byte433 = blocks[blocksOffset++] & 0xFF;\n        values[valuesOffset++] = ((byte425 & 63) << 57) | (byte426 << 49) | (byte427 << 41) | (byte428 << 33) | (byte429 << 25) | (byte430 << 17) | (byte431 << 9) | (byte432 << 1) | (byte433 >>> 7);\n        final long byte434 = blocks[blocksOffset++] & 0xFF;\n        final long byte435 = blocks[blocksOffset++] & 0xFF;\n        final long byte436 = blocks[blocksOffset++] & 0xFF;\n        final long byte437 = blocks[blocksOffset++] & 0xFF;\n        final long byte438 = blocks[blocksOffset++] & 0xFF;\n        final long byte439 = blocks[blocksOffset++] & 0xFF;\n        final long byte440 = blocks[blocksOffset++] & 0xFF;\n        values[valuesOffset++] = ((byte433 & 127) << 56) | (byte434 << 48) | (byte435 << 40) | (byte436 << 32) | (byte437 << 24) | (byte438 << 16) | (byte439 << 8) | byte440;\n        final long byte441 = blocks[blocksOffset++] & 0xFF;\n        final long byte442 = blocks[blocksOffset++] & 0xFF;\n        final long byte443 = blocks[blocksOffset++] & 0xFF;\n        final long byte444 = blocks[blocksOffset++] & 0xFF;\n        final long byte445 = blocks[blocksOffset++] & 0xFF;\n        final long byte446 = blocks[blocksOffset++] & 0xFF;\n        final long byte447 = blocks[blocksOffset++] & 0xFF;\n        final long byte448 = blocks[blocksOffset++] & 0xFF;\n        values[valuesOffset++] = (byte441 << 55) | (byte442 << 47) | (byte443 << 39) | (byte444 << 31) | (byte445 << 23) | (byte446 << 15) | (byte447 << 7) | (byte448 >>> 1);\n        final long byte449 = blocks[blocksOffset++] & 0xFF;\n        final long byte450 = blocks[blocksOffset++] & 0xFF;\n        final long byte451 = blocks[blocksOffset++] & 0xFF;\n        final long byte452 = blocks[blocksOffset++] & 0xFF;\n        final long byte453 = blocks[blocksOffset++] & 0xFF;\n        final long byte454 = blocks[blocksOffset++] & 0xFF;\n        final long byte455 = blocks[blocksOffset++] & 0xFF;\n        final long byte456 = blocks[blocksOffset++] & 0xFF;\n        values[valuesOffset++] = ((byte448 & 1) << 62) | (byte449 << 54) | (byte450 << 46) | (byte451 << 38) | (byte452 << 30) | (byte453 << 22) | (byte454 << 14) | (byte455 << 6) | (byte456 >>> 2);\n        final long byte457 = blocks[blocksOffset++] & 0xFF;\n        final long byte458 = blocks[blocksOffset++] & 0xFF;\n        final long byte459 = blocks[blocksOffset++] & 0xFF;\n        final long byte460 = blocks[blocksOffset++] & 0xFF;\n        final long byte461 = blocks[blocksOffset++] & 0xFF;\n        final long byte462 = blocks[blocksOffset++] & 0xFF;\n        final long byte463 = blocks[blocksOffset++] & 0xFF;\n        final long byte464 = blocks[blocksOffset++] & 0xFF;\n        values[valuesOffset++] = ((byte456 & 3) << 61) | (byte457 << 53) | (byte458 << 45) | (byte459 << 37) | (byte460 << 29) | (byte461 << 21) | (byte462 << 13) | (byte463 << 5) | (byte464 >>> 3);\n        final long byte465 = blocks[blocksOffset++] & 0xFF;\n        final long byte466 = blocks[blocksOffset++] & 0xFF;\n        final long byte467 = blocks[blocksOffset++] & 0xFF;\n        final long byte468 = blocks[blocksOffset++] & 0xFF;\n        final long byte469 = blocks[blocksOffset++] & 0xFF;\n        final long byte470 = blocks[blocksOffset++] & 0xFF;\n        final long byte471 = blocks[blocksOffset++] & 0xFF;\n        final long byte472 = blocks[blocksOffset++] & 0xFF;\n        values[valuesOffset++] = ((byte464 & 7) << 60) | (byte465 << 52) | (byte466 << 44) | (byte467 << 36) | (byte468 << 28) | (byte469 << 20) | (byte470 << 12) | (byte471 << 4) | (byte472 >>> 4);\n        final long byte473 = blocks[blocksOffset++] & 0xFF;\n        final long byte474 = blocks[blocksOffset++] & 0xFF;\n        final long byte475 = blocks[blocksOffset++] & 0xFF;\n        final long byte476 = blocks[blocksOffset++] & 0xFF;\n        final long byte477 = blocks[blocksOffset++] & 0xFF;\n        final long byte478 = blocks[blocksOffset++] & 0xFF;\n        final long byte479 = blocks[blocksOffset++] & 0xFF;\n        final long byte480 = blocks[blocksOffset++] & 0xFF;\n        values[valuesOffset++] = ((byte472 & 15) << 59) | (byte473 << 51) | (byte474 << 43) | (byte475 << 35) | (byte476 << 27) | (byte477 << 19) | (byte478 << 11) | (byte479 << 3) | (byte480 >>> 5);\n        final long byte481 = blocks[blocksOffset++] & 0xFF;\n        final long byte482 = blocks[blocksOffset++] & 0xFF;\n        final long byte483 = blocks[blocksOffset++] & 0xFF;\n        final long byte484 = blocks[blocksOffset++] & 0xFF;\n        final long byte485 = blocks[blocksOffset++] & 0xFF;\n        final long byte486 = blocks[blocksOffset++] & 0xFF;\n        final long byte487 = blocks[blocksOffset++] & 0xFF;\n        final long byte488 = blocks[blocksOffset++] & 0xFF;\n        values[valuesOffset++] = ((byte480 & 31) << 58) | (byte481 << 50) | (byte482 << 42) | (byte483 << 34) | (byte484 << 26) | (byte485 << 18) | (byte486 << 10) | (byte487 << 2) | (byte488 >>> 6);\n        final long byte489 = blocks[blocksOffset++] & 0xFF;\n        final long byte490 = blocks[blocksOffset++] & 0xFF;\n        final long byte491 = blocks[blocksOffset++] & 0xFF;\n        final long byte492 = blocks[blocksOffset++] & 0xFF;\n        final long byte493 = blocks[blocksOffset++] & 0xFF;\n        final long byte494 = blocks[blocksOffset++] & 0xFF;\n        final long byte495 = blocks[blocksOffset++] & 0xFF;\n        final long byte496 = blocks[blocksOffset++] & 0xFF;\n        values[valuesOffset++] = ((byte488 & 63) << 57) | (byte489 << 49) | (byte490 << 41) | (byte491 << 33) | (byte492 << 25) | (byte493 << 17) | (byte494 << 9) | (byte495 << 1) | (byte496 >>> 7);\n        final long byte497 = blocks[blocksOffset++] & 0xFF;\n        final long byte498 = blocks[blocksOffset++] & 0xFF;\n        final long byte499 = blocks[blocksOffset++] & 0xFF;\n        final long byte500 = blocks[blocksOffset++] & 0xFF;\n        final long byte501 = blocks[blocksOffset++] & 0xFF;\n        final long byte502 = blocks[blocksOffset++] & 0xFF;\n        final long byte503 = blocks[blocksOffset++] & 0xFF;\n        values[valuesOffset++] = ((byte496 & 127) << 56) | (byte497 << 48) | (byte498 << 40) | (byte499 << 32) | (byte500 << 24) | (byte501 << 16) | (byte502 << 8) | byte503;\n      }\n    }\n\n","sourceOld":"    public void decode(byte[] blocks, int blocksOffset, long[] values, int valuesOffset, int iterations) {\n      assert blocksOffset + 8 * iterations * blockCount() <= blocks.length;\n      assert valuesOffset + iterations * valueCount() <= values.length;\n      for (int i = 0; i < iterations; ++i) {\n        final long byte0 = blocks[blocksOffset++] & 0xFF;\n        final long byte1 = blocks[blocksOffset++] & 0xFF;\n        final long byte2 = blocks[blocksOffset++] & 0xFF;\n        final long byte3 = blocks[blocksOffset++] & 0xFF;\n        final long byte4 = blocks[blocksOffset++] & 0xFF;\n        final long byte5 = blocks[blocksOffset++] & 0xFF;\n        final long byte6 = blocks[blocksOffset++] & 0xFF;\n        final long byte7 = blocks[blocksOffset++] & 0xFF;\n        values[valuesOffset++] = (byte0 << 55) | (byte1 << 47) | (byte2 << 39) | (byte3 << 31) | (byte4 << 23) | (byte5 << 15) | (byte6 << 7) | (byte7 >>> 1);\n        final long byte8 = blocks[blocksOffset++] & 0xFF;\n        final long byte9 = blocks[blocksOffset++] & 0xFF;\n        final long byte10 = blocks[blocksOffset++] & 0xFF;\n        final long byte11 = blocks[blocksOffset++] & 0xFF;\n        final long byte12 = blocks[blocksOffset++] & 0xFF;\n        final long byte13 = blocks[blocksOffset++] & 0xFF;\n        final long byte14 = blocks[blocksOffset++] & 0xFF;\n        final long byte15 = blocks[blocksOffset++] & 0xFF;\n        values[valuesOffset++] = ((byte7 & 1) << 62) | (byte8 << 54) | (byte9 << 46) | (byte10 << 38) | (byte11 << 30) | (byte12 << 22) | (byte13 << 14) | (byte14 << 6) | (byte15 >>> 2);\n        final long byte16 = blocks[blocksOffset++] & 0xFF;\n        final long byte17 = blocks[blocksOffset++] & 0xFF;\n        final long byte18 = blocks[blocksOffset++] & 0xFF;\n        final long byte19 = blocks[blocksOffset++] & 0xFF;\n        final long byte20 = blocks[blocksOffset++] & 0xFF;\n        final long byte21 = blocks[blocksOffset++] & 0xFF;\n        final long byte22 = blocks[blocksOffset++] & 0xFF;\n        final long byte23 = blocks[blocksOffset++] & 0xFF;\n        values[valuesOffset++] = ((byte15 & 3) << 61) | (byte16 << 53) | (byte17 << 45) | (byte18 << 37) | (byte19 << 29) | (byte20 << 21) | (byte21 << 13) | (byte22 << 5) | (byte23 >>> 3);\n        final long byte24 = blocks[blocksOffset++] & 0xFF;\n        final long byte25 = blocks[blocksOffset++] & 0xFF;\n        final long byte26 = blocks[blocksOffset++] & 0xFF;\n        final long byte27 = blocks[blocksOffset++] & 0xFF;\n        final long byte28 = blocks[blocksOffset++] & 0xFF;\n        final long byte29 = blocks[blocksOffset++] & 0xFF;\n        final long byte30 = blocks[blocksOffset++] & 0xFF;\n        final long byte31 = blocks[blocksOffset++] & 0xFF;\n        values[valuesOffset++] = ((byte23 & 7) << 60) | (byte24 << 52) | (byte25 << 44) | (byte26 << 36) | (byte27 << 28) | (byte28 << 20) | (byte29 << 12) | (byte30 << 4) | (byte31 >>> 4);\n        final long byte32 = blocks[blocksOffset++] & 0xFF;\n        final long byte33 = blocks[blocksOffset++] & 0xFF;\n        final long byte34 = blocks[blocksOffset++] & 0xFF;\n        final long byte35 = blocks[blocksOffset++] & 0xFF;\n        final long byte36 = blocks[blocksOffset++] & 0xFF;\n        final long byte37 = blocks[blocksOffset++] & 0xFF;\n        final long byte38 = blocks[blocksOffset++] & 0xFF;\n        final long byte39 = blocks[blocksOffset++] & 0xFF;\n        values[valuesOffset++] = ((byte31 & 15) << 59) | (byte32 << 51) | (byte33 << 43) | (byte34 << 35) | (byte35 << 27) | (byte36 << 19) | (byte37 << 11) | (byte38 << 3) | (byte39 >>> 5);\n        final long byte40 = blocks[blocksOffset++] & 0xFF;\n        final long byte41 = blocks[blocksOffset++] & 0xFF;\n        final long byte42 = blocks[blocksOffset++] & 0xFF;\n        final long byte43 = blocks[blocksOffset++] & 0xFF;\n        final long byte44 = blocks[blocksOffset++] & 0xFF;\n        final long byte45 = blocks[blocksOffset++] & 0xFF;\n        final long byte46 = blocks[blocksOffset++] & 0xFF;\n        final long byte47 = blocks[blocksOffset++] & 0xFF;\n        values[valuesOffset++] = ((byte39 & 31) << 58) | (byte40 << 50) | (byte41 << 42) | (byte42 << 34) | (byte43 << 26) | (byte44 << 18) | (byte45 << 10) | (byte46 << 2) | (byte47 >>> 6);\n        final long byte48 = blocks[blocksOffset++] & 0xFF;\n        final long byte49 = blocks[blocksOffset++] & 0xFF;\n        final long byte50 = blocks[blocksOffset++] & 0xFF;\n        final long byte51 = blocks[blocksOffset++] & 0xFF;\n        final long byte52 = blocks[blocksOffset++] & 0xFF;\n        final long byte53 = blocks[blocksOffset++] & 0xFF;\n        final long byte54 = blocks[blocksOffset++] & 0xFF;\n        final long byte55 = blocks[blocksOffset++] & 0xFF;\n        values[valuesOffset++] = ((byte47 & 63) << 57) | (byte48 << 49) | (byte49 << 41) | (byte50 << 33) | (byte51 << 25) | (byte52 << 17) | (byte53 << 9) | (byte54 << 1) | (byte55 >>> 7);\n        final long byte56 = blocks[blocksOffset++] & 0xFF;\n        final long byte57 = blocks[blocksOffset++] & 0xFF;\n        final long byte58 = blocks[blocksOffset++] & 0xFF;\n        final long byte59 = blocks[blocksOffset++] & 0xFF;\n        final long byte60 = blocks[blocksOffset++] & 0xFF;\n        final long byte61 = blocks[blocksOffset++] & 0xFF;\n        final long byte62 = blocks[blocksOffset++] & 0xFF;\n        values[valuesOffset++] = ((byte55 & 127) << 56) | (byte56 << 48) | (byte57 << 40) | (byte58 << 32) | (byte59 << 24) | (byte60 << 16) | (byte61 << 8) | byte62;\n        final long byte63 = blocks[blocksOffset++] & 0xFF;\n        final long byte64 = blocks[blocksOffset++] & 0xFF;\n        final long byte65 = blocks[blocksOffset++] & 0xFF;\n        final long byte66 = blocks[blocksOffset++] & 0xFF;\n        final long byte67 = blocks[blocksOffset++] & 0xFF;\n        final long byte68 = blocks[blocksOffset++] & 0xFF;\n        final long byte69 = blocks[blocksOffset++] & 0xFF;\n        final long byte70 = blocks[blocksOffset++] & 0xFF;\n        values[valuesOffset++] = (byte63 << 55) | (byte64 << 47) | (byte65 << 39) | (byte66 << 31) | (byte67 << 23) | (byte68 << 15) | (byte69 << 7) | (byte70 >>> 1);\n        final long byte71 = blocks[blocksOffset++] & 0xFF;\n        final long byte72 = blocks[blocksOffset++] & 0xFF;\n        final long byte73 = blocks[blocksOffset++] & 0xFF;\n        final long byte74 = blocks[blocksOffset++] & 0xFF;\n        final long byte75 = blocks[blocksOffset++] & 0xFF;\n        final long byte76 = blocks[blocksOffset++] & 0xFF;\n        final long byte77 = blocks[blocksOffset++] & 0xFF;\n        final long byte78 = blocks[blocksOffset++] & 0xFF;\n        values[valuesOffset++] = ((byte70 & 1) << 62) | (byte71 << 54) | (byte72 << 46) | (byte73 << 38) | (byte74 << 30) | (byte75 << 22) | (byte76 << 14) | (byte77 << 6) | (byte78 >>> 2);\n        final long byte79 = blocks[blocksOffset++] & 0xFF;\n        final long byte80 = blocks[blocksOffset++] & 0xFF;\n        final long byte81 = blocks[blocksOffset++] & 0xFF;\n        final long byte82 = blocks[blocksOffset++] & 0xFF;\n        final long byte83 = blocks[blocksOffset++] & 0xFF;\n        final long byte84 = blocks[blocksOffset++] & 0xFF;\n        final long byte85 = blocks[blocksOffset++] & 0xFF;\n        final long byte86 = blocks[blocksOffset++] & 0xFF;\n        values[valuesOffset++] = ((byte78 & 3) << 61) | (byte79 << 53) | (byte80 << 45) | (byte81 << 37) | (byte82 << 29) | (byte83 << 21) | (byte84 << 13) | (byte85 << 5) | (byte86 >>> 3);\n        final long byte87 = blocks[blocksOffset++] & 0xFF;\n        final long byte88 = blocks[blocksOffset++] & 0xFF;\n        final long byte89 = blocks[blocksOffset++] & 0xFF;\n        final long byte90 = blocks[blocksOffset++] & 0xFF;\n        final long byte91 = blocks[blocksOffset++] & 0xFF;\n        final long byte92 = blocks[blocksOffset++] & 0xFF;\n        final long byte93 = blocks[blocksOffset++] & 0xFF;\n        final long byte94 = blocks[blocksOffset++] & 0xFF;\n        values[valuesOffset++] = ((byte86 & 7) << 60) | (byte87 << 52) | (byte88 << 44) | (byte89 << 36) | (byte90 << 28) | (byte91 << 20) | (byte92 << 12) | (byte93 << 4) | (byte94 >>> 4);\n        final long byte95 = blocks[blocksOffset++] & 0xFF;\n        final long byte96 = blocks[blocksOffset++] & 0xFF;\n        final long byte97 = blocks[blocksOffset++] & 0xFF;\n        final long byte98 = blocks[blocksOffset++] & 0xFF;\n        final long byte99 = blocks[blocksOffset++] & 0xFF;\n        final long byte100 = blocks[blocksOffset++] & 0xFF;\n        final long byte101 = blocks[blocksOffset++] & 0xFF;\n        final long byte102 = blocks[blocksOffset++] & 0xFF;\n        values[valuesOffset++] = ((byte94 & 15) << 59) | (byte95 << 51) | (byte96 << 43) | (byte97 << 35) | (byte98 << 27) | (byte99 << 19) | (byte100 << 11) | (byte101 << 3) | (byte102 >>> 5);\n        final long byte103 = blocks[blocksOffset++] & 0xFF;\n        final long byte104 = blocks[blocksOffset++] & 0xFF;\n        final long byte105 = blocks[blocksOffset++] & 0xFF;\n        final long byte106 = blocks[blocksOffset++] & 0xFF;\n        final long byte107 = blocks[blocksOffset++] & 0xFF;\n        final long byte108 = blocks[blocksOffset++] & 0xFF;\n        final long byte109 = blocks[blocksOffset++] & 0xFF;\n        final long byte110 = blocks[blocksOffset++] & 0xFF;\n        values[valuesOffset++] = ((byte102 & 31) << 58) | (byte103 << 50) | (byte104 << 42) | (byte105 << 34) | (byte106 << 26) | (byte107 << 18) | (byte108 << 10) | (byte109 << 2) | (byte110 >>> 6);\n        final long byte111 = blocks[blocksOffset++] & 0xFF;\n        final long byte112 = blocks[blocksOffset++] & 0xFF;\n        final long byte113 = blocks[blocksOffset++] & 0xFF;\n        final long byte114 = blocks[blocksOffset++] & 0xFF;\n        final long byte115 = blocks[blocksOffset++] & 0xFF;\n        final long byte116 = blocks[blocksOffset++] & 0xFF;\n        final long byte117 = blocks[blocksOffset++] & 0xFF;\n        final long byte118 = blocks[blocksOffset++] & 0xFF;\n        values[valuesOffset++] = ((byte110 & 63) << 57) | (byte111 << 49) | (byte112 << 41) | (byte113 << 33) | (byte114 << 25) | (byte115 << 17) | (byte116 << 9) | (byte117 << 1) | (byte118 >>> 7);\n        final long byte119 = blocks[blocksOffset++] & 0xFF;\n        final long byte120 = blocks[blocksOffset++] & 0xFF;\n        final long byte121 = blocks[blocksOffset++] & 0xFF;\n        final long byte122 = blocks[blocksOffset++] & 0xFF;\n        final long byte123 = blocks[blocksOffset++] & 0xFF;\n        final long byte124 = blocks[blocksOffset++] & 0xFF;\n        final long byte125 = blocks[blocksOffset++] & 0xFF;\n        values[valuesOffset++] = ((byte118 & 127) << 56) | (byte119 << 48) | (byte120 << 40) | (byte121 << 32) | (byte122 << 24) | (byte123 << 16) | (byte124 << 8) | byte125;\n        final long byte126 = blocks[blocksOffset++] & 0xFF;\n        final long byte127 = blocks[blocksOffset++] & 0xFF;\n        final long byte128 = blocks[blocksOffset++] & 0xFF;\n        final long byte129 = blocks[blocksOffset++] & 0xFF;\n        final long byte130 = blocks[blocksOffset++] & 0xFF;\n        final long byte131 = blocks[blocksOffset++] & 0xFF;\n        final long byte132 = blocks[blocksOffset++] & 0xFF;\n        final long byte133 = blocks[blocksOffset++] & 0xFF;\n        values[valuesOffset++] = (byte126 << 55) | (byte127 << 47) | (byte128 << 39) | (byte129 << 31) | (byte130 << 23) | (byte131 << 15) | (byte132 << 7) | (byte133 >>> 1);\n        final long byte134 = blocks[blocksOffset++] & 0xFF;\n        final long byte135 = blocks[blocksOffset++] & 0xFF;\n        final long byte136 = blocks[blocksOffset++] & 0xFF;\n        final long byte137 = blocks[blocksOffset++] & 0xFF;\n        final long byte138 = blocks[blocksOffset++] & 0xFF;\n        final long byte139 = blocks[blocksOffset++] & 0xFF;\n        final long byte140 = blocks[blocksOffset++] & 0xFF;\n        final long byte141 = blocks[blocksOffset++] & 0xFF;\n        values[valuesOffset++] = ((byte133 & 1) << 62) | (byte134 << 54) | (byte135 << 46) | (byte136 << 38) | (byte137 << 30) | (byte138 << 22) | (byte139 << 14) | (byte140 << 6) | (byte141 >>> 2);\n        final long byte142 = blocks[blocksOffset++] & 0xFF;\n        final long byte143 = blocks[blocksOffset++] & 0xFF;\n        final long byte144 = blocks[blocksOffset++] & 0xFF;\n        final long byte145 = blocks[blocksOffset++] & 0xFF;\n        final long byte146 = blocks[blocksOffset++] & 0xFF;\n        final long byte147 = blocks[blocksOffset++] & 0xFF;\n        final long byte148 = blocks[blocksOffset++] & 0xFF;\n        final long byte149 = blocks[blocksOffset++] & 0xFF;\n        values[valuesOffset++] = ((byte141 & 3) << 61) | (byte142 << 53) | (byte143 << 45) | (byte144 << 37) | (byte145 << 29) | (byte146 << 21) | (byte147 << 13) | (byte148 << 5) | (byte149 >>> 3);\n        final long byte150 = blocks[blocksOffset++] & 0xFF;\n        final long byte151 = blocks[blocksOffset++] & 0xFF;\n        final long byte152 = blocks[blocksOffset++] & 0xFF;\n        final long byte153 = blocks[blocksOffset++] & 0xFF;\n        final long byte154 = blocks[blocksOffset++] & 0xFF;\n        final long byte155 = blocks[blocksOffset++] & 0xFF;\n        final long byte156 = blocks[blocksOffset++] & 0xFF;\n        final long byte157 = blocks[blocksOffset++] & 0xFF;\n        values[valuesOffset++] = ((byte149 & 7) << 60) | (byte150 << 52) | (byte151 << 44) | (byte152 << 36) | (byte153 << 28) | (byte154 << 20) | (byte155 << 12) | (byte156 << 4) | (byte157 >>> 4);\n        final long byte158 = blocks[blocksOffset++] & 0xFF;\n        final long byte159 = blocks[blocksOffset++] & 0xFF;\n        final long byte160 = blocks[blocksOffset++] & 0xFF;\n        final long byte161 = blocks[blocksOffset++] & 0xFF;\n        final long byte162 = blocks[blocksOffset++] & 0xFF;\n        final long byte163 = blocks[blocksOffset++] & 0xFF;\n        final long byte164 = blocks[blocksOffset++] & 0xFF;\n        final long byte165 = blocks[blocksOffset++] & 0xFF;\n        values[valuesOffset++] = ((byte157 & 15) << 59) | (byte158 << 51) | (byte159 << 43) | (byte160 << 35) | (byte161 << 27) | (byte162 << 19) | (byte163 << 11) | (byte164 << 3) | (byte165 >>> 5);\n        final long byte166 = blocks[blocksOffset++] & 0xFF;\n        final long byte167 = blocks[blocksOffset++] & 0xFF;\n        final long byte168 = blocks[blocksOffset++] & 0xFF;\n        final long byte169 = blocks[blocksOffset++] & 0xFF;\n        final long byte170 = blocks[blocksOffset++] & 0xFF;\n        final long byte171 = blocks[blocksOffset++] & 0xFF;\n        final long byte172 = blocks[blocksOffset++] & 0xFF;\n        final long byte173 = blocks[blocksOffset++] & 0xFF;\n        values[valuesOffset++] = ((byte165 & 31) << 58) | (byte166 << 50) | (byte167 << 42) | (byte168 << 34) | (byte169 << 26) | (byte170 << 18) | (byte171 << 10) | (byte172 << 2) | (byte173 >>> 6);\n        final long byte174 = blocks[blocksOffset++] & 0xFF;\n        final long byte175 = blocks[blocksOffset++] & 0xFF;\n        final long byte176 = blocks[blocksOffset++] & 0xFF;\n        final long byte177 = blocks[blocksOffset++] & 0xFF;\n        final long byte178 = blocks[blocksOffset++] & 0xFF;\n        final long byte179 = blocks[blocksOffset++] & 0xFF;\n        final long byte180 = blocks[blocksOffset++] & 0xFF;\n        final long byte181 = blocks[blocksOffset++] & 0xFF;\n        values[valuesOffset++] = ((byte173 & 63) << 57) | (byte174 << 49) | (byte175 << 41) | (byte176 << 33) | (byte177 << 25) | (byte178 << 17) | (byte179 << 9) | (byte180 << 1) | (byte181 >>> 7);\n        final long byte182 = blocks[blocksOffset++] & 0xFF;\n        final long byte183 = blocks[blocksOffset++] & 0xFF;\n        final long byte184 = blocks[blocksOffset++] & 0xFF;\n        final long byte185 = blocks[blocksOffset++] & 0xFF;\n        final long byte186 = blocks[blocksOffset++] & 0xFF;\n        final long byte187 = blocks[blocksOffset++] & 0xFF;\n        final long byte188 = blocks[blocksOffset++] & 0xFF;\n        values[valuesOffset++] = ((byte181 & 127) << 56) | (byte182 << 48) | (byte183 << 40) | (byte184 << 32) | (byte185 << 24) | (byte186 << 16) | (byte187 << 8) | byte188;\n        final long byte189 = blocks[blocksOffset++] & 0xFF;\n        final long byte190 = blocks[blocksOffset++] & 0xFF;\n        final long byte191 = blocks[blocksOffset++] & 0xFF;\n        final long byte192 = blocks[blocksOffset++] & 0xFF;\n        final long byte193 = blocks[blocksOffset++] & 0xFF;\n        final long byte194 = blocks[blocksOffset++] & 0xFF;\n        final long byte195 = blocks[blocksOffset++] & 0xFF;\n        final long byte196 = blocks[blocksOffset++] & 0xFF;\n        values[valuesOffset++] = (byte189 << 55) | (byte190 << 47) | (byte191 << 39) | (byte192 << 31) | (byte193 << 23) | (byte194 << 15) | (byte195 << 7) | (byte196 >>> 1);\n        final long byte197 = blocks[blocksOffset++] & 0xFF;\n        final long byte198 = blocks[blocksOffset++] & 0xFF;\n        final long byte199 = blocks[blocksOffset++] & 0xFF;\n        final long byte200 = blocks[blocksOffset++] & 0xFF;\n        final long byte201 = blocks[blocksOffset++] & 0xFF;\n        final long byte202 = blocks[blocksOffset++] & 0xFF;\n        final long byte203 = blocks[blocksOffset++] & 0xFF;\n        final long byte204 = blocks[blocksOffset++] & 0xFF;\n        values[valuesOffset++] = ((byte196 & 1) << 62) | (byte197 << 54) | (byte198 << 46) | (byte199 << 38) | (byte200 << 30) | (byte201 << 22) | (byte202 << 14) | (byte203 << 6) | (byte204 >>> 2);\n        final long byte205 = blocks[blocksOffset++] & 0xFF;\n        final long byte206 = blocks[blocksOffset++] & 0xFF;\n        final long byte207 = blocks[blocksOffset++] & 0xFF;\n        final long byte208 = blocks[blocksOffset++] & 0xFF;\n        final long byte209 = blocks[blocksOffset++] & 0xFF;\n        final long byte210 = blocks[blocksOffset++] & 0xFF;\n        final long byte211 = blocks[blocksOffset++] & 0xFF;\n        final long byte212 = blocks[blocksOffset++] & 0xFF;\n        values[valuesOffset++] = ((byte204 & 3) << 61) | (byte205 << 53) | (byte206 << 45) | (byte207 << 37) | (byte208 << 29) | (byte209 << 21) | (byte210 << 13) | (byte211 << 5) | (byte212 >>> 3);\n        final long byte213 = blocks[blocksOffset++] & 0xFF;\n        final long byte214 = blocks[blocksOffset++] & 0xFF;\n        final long byte215 = blocks[blocksOffset++] & 0xFF;\n        final long byte216 = blocks[blocksOffset++] & 0xFF;\n        final long byte217 = blocks[blocksOffset++] & 0xFF;\n        final long byte218 = blocks[blocksOffset++] & 0xFF;\n        final long byte219 = blocks[blocksOffset++] & 0xFF;\n        final long byte220 = blocks[blocksOffset++] & 0xFF;\n        values[valuesOffset++] = ((byte212 & 7) << 60) | (byte213 << 52) | (byte214 << 44) | (byte215 << 36) | (byte216 << 28) | (byte217 << 20) | (byte218 << 12) | (byte219 << 4) | (byte220 >>> 4);\n        final long byte221 = blocks[blocksOffset++] & 0xFF;\n        final long byte222 = blocks[blocksOffset++] & 0xFF;\n        final long byte223 = blocks[blocksOffset++] & 0xFF;\n        final long byte224 = blocks[blocksOffset++] & 0xFF;\n        final long byte225 = blocks[blocksOffset++] & 0xFF;\n        final long byte226 = blocks[blocksOffset++] & 0xFF;\n        final long byte227 = blocks[blocksOffset++] & 0xFF;\n        final long byte228 = blocks[blocksOffset++] & 0xFF;\n        values[valuesOffset++] = ((byte220 & 15) << 59) | (byte221 << 51) | (byte222 << 43) | (byte223 << 35) | (byte224 << 27) | (byte225 << 19) | (byte226 << 11) | (byte227 << 3) | (byte228 >>> 5);\n        final long byte229 = blocks[blocksOffset++] & 0xFF;\n        final long byte230 = blocks[blocksOffset++] & 0xFF;\n        final long byte231 = blocks[blocksOffset++] & 0xFF;\n        final long byte232 = blocks[blocksOffset++] & 0xFF;\n        final long byte233 = blocks[blocksOffset++] & 0xFF;\n        final long byte234 = blocks[blocksOffset++] & 0xFF;\n        final long byte235 = blocks[blocksOffset++] & 0xFF;\n        final long byte236 = blocks[blocksOffset++] & 0xFF;\n        values[valuesOffset++] = ((byte228 & 31) << 58) | (byte229 << 50) | (byte230 << 42) | (byte231 << 34) | (byte232 << 26) | (byte233 << 18) | (byte234 << 10) | (byte235 << 2) | (byte236 >>> 6);\n        final long byte237 = blocks[blocksOffset++] & 0xFF;\n        final long byte238 = blocks[blocksOffset++] & 0xFF;\n        final long byte239 = blocks[blocksOffset++] & 0xFF;\n        final long byte240 = blocks[blocksOffset++] & 0xFF;\n        final long byte241 = blocks[blocksOffset++] & 0xFF;\n        final long byte242 = blocks[blocksOffset++] & 0xFF;\n        final long byte243 = blocks[blocksOffset++] & 0xFF;\n        final long byte244 = blocks[blocksOffset++] & 0xFF;\n        values[valuesOffset++] = ((byte236 & 63) << 57) | (byte237 << 49) | (byte238 << 41) | (byte239 << 33) | (byte240 << 25) | (byte241 << 17) | (byte242 << 9) | (byte243 << 1) | (byte244 >>> 7);\n        final long byte245 = blocks[blocksOffset++] & 0xFF;\n        final long byte246 = blocks[blocksOffset++] & 0xFF;\n        final long byte247 = blocks[blocksOffset++] & 0xFF;\n        final long byte248 = blocks[blocksOffset++] & 0xFF;\n        final long byte249 = blocks[blocksOffset++] & 0xFF;\n        final long byte250 = blocks[blocksOffset++] & 0xFF;\n        final long byte251 = blocks[blocksOffset++] & 0xFF;\n        values[valuesOffset++] = ((byte244 & 127) << 56) | (byte245 << 48) | (byte246 << 40) | (byte247 << 32) | (byte248 << 24) | (byte249 << 16) | (byte250 << 8) | byte251;\n        final long byte252 = blocks[blocksOffset++] & 0xFF;\n        final long byte253 = blocks[blocksOffset++] & 0xFF;\n        final long byte254 = blocks[blocksOffset++] & 0xFF;\n        final long byte255 = blocks[blocksOffset++] & 0xFF;\n        final long byte256 = blocks[blocksOffset++] & 0xFF;\n        final long byte257 = blocks[blocksOffset++] & 0xFF;\n        final long byte258 = blocks[blocksOffset++] & 0xFF;\n        final long byte259 = blocks[blocksOffset++] & 0xFF;\n        values[valuesOffset++] = (byte252 << 55) | (byte253 << 47) | (byte254 << 39) | (byte255 << 31) | (byte256 << 23) | (byte257 << 15) | (byte258 << 7) | (byte259 >>> 1);\n        final long byte260 = blocks[blocksOffset++] & 0xFF;\n        final long byte261 = blocks[blocksOffset++] & 0xFF;\n        final long byte262 = blocks[blocksOffset++] & 0xFF;\n        final long byte263 = blocks[blocksOffset++] & 0xFF;\n        final long byte264 = blocks[blocksOffset++] & 0xFF;\n        final long byte265 = blocks[blocksOffset++] & 0xFF;\n        final long byte266 = blocks[blocksOffset++] & 0xFF;\n        final long byte267 = blocks[blocksOffset++] & 0xFF;\n        values[valuesOffset++] = ((byte259 & 1) << 62) | (byte260 << 54) | (byte261 << 46) | (byte262 << 38) | (byte263 << 30) | (byte264 << 22) | (byte265 << 14) | (byte266 << 6) | (byte267 >>> 2);\n        final long byte268 = blocks[blocksOffset++] & 0xFF;\n        final long byte269 = blocks[blocksOffset++] & 0xFF;\n        final long byte270 = blocks[blocksOffset++] & 0xFF;\n        final long byte271 = blocks[blocksOffset++] & 0xFF;\n        final long byte272 = blocks[blocksOffset++] & 0xFF;\n        final long byte273 = blocks[blocksOffset++] & 0xFF;\n        final long byte274 = blocks[blocksOffset++] & 0xFF;\n        final long byte275 = blocks[blocksOffset++] & 0xFF;\n        values[valuesOffset++] = ((byte267 & 3) << 61) | (byte268 << 53) | (byte269 << 45) | (byte270 << 37) | (byte271 << 29) | (byte272 << 21) | (byte273 << 13) | (byte274 << 5) | (byte275 >>> 3);\n        final long byte276 = blocks[blocksOffset++] & 0xFF;\n        final long byte277 = blocks[blocksOffset++] & 0xFF;\n        final long byte278 = blocks[blocksOffset++] & 0xFF;\n        final long byte279 = blocks[blocksOffset++] & 0xFF;\n        final long byte280 = blocks[blocksOffset++] & 0xFF;\n        final long byte281 = blocks[blocksOffset++] & 0xFF;\n        final long byte282 = blocks[blocksOffset++] & 0xFF;\n        final long byte283 = blocks[blocksOffset++] & 0xFF;\n        values[valuesOffset++] = ((byte275 & 7) << 60) | (byte276 << 52) | (byte277 << 44) | (byte278 << 36) | (byte279 << 28) | (byte280 << 20) | (byte281 << 12) | (byte282 << 4) | (byte283 >>> 4);\n        final long byte284 = blocks[blocksOffset++] & 0xFF;\n        final long byte285 = blocks[blocksOffset++] & 0xFF;\n        final long byte286 = blocks[blocksOffset++] & 0xFF;\n        final long byte287 = blocks[blocksOffset++] & 0xFF;\n        final long byte288 = blocks[blocksOffset++] & 0xFF;\n        final long byte289 = blocks[blocksOffset++] & 0xFF;\n        final long byte290 = blocks[blocksOffset++] & 0xFF;\n        final long byte291 = blocks[blocksOffset++] & 0xFF;\n        values[valuesOffset++] = ((byte283 & 15) << 59) | (byte284 << 51) | (byte285 << 43) | (byte286 << 35) | (byte287 << 27) | (byte288 << 19) | (byte289 << 11) | (byte290 << 3) | (byte291 >>> 5);\n        final long byte292 = blocks[blocksOffset++] & 0xFF;\n        final long byte293 = blocks[blocksOffset++] & 0xFF;\n        final long byte294 = blocks[blocksOffset++] & 0xFF;\n        final long byte295 = blocks[blocksOffset++] & 0xFF;\n        final long byte296 = blocks[blocksOffset++] & 0xFF;\n        final long byte297 = blocks[blocksOffset++] & 0xFF;\n        final long byte298 = blocks[blocksOffset++] & 0xFF;\n        final long byte299 = blocks[blocksOffset++] & 0xFF;\n        values[valuesOffset++] = ((byte291 & 31) << 58) | (byte292 << 50) | (byte293 << 42) | (byte294 << 34) | (byte295 << 26) | (byte296 << 18) | (byte297 << 10) | (byte298 << 2) | (byte299 >>> 6);\n        final long byte300 = blocks[blocksOffset++] & 0xFF;\n        final long byte301 = blocks[blocksOffset++] & 0xFF;\n        final long byte302 = blocks[blocksOffset++] & 0xFF;\n        final long byte303 = blocks[blocksOffset++] & 0xFF;\n        final long byte304 = blocks[blocksOffset++] & 0xFF;\n        final long byte305 = blocks[blocksOffset++] & 0xFF;\n        final long byte306 = blocks[blocksOffset++] & 0xFF;\n        final long byte307 = blocks[blocksOffset++] & 0xFF;\n        values[valuesOffset++] = ((byte299 & 63) << 57) | (byte300 << 49) | (byte301 << 41) | (byte302 << 33) | (byte303 << 25) | (byte304 << 17) | (byte305 << 9) | (byte306 << 1) | (byte307 >>> 7);\n        final long byte308 = blocks[blocksOffset++] & 0xFF;\n        final long byte309 = blocks[blocksOffset++] & 0xFF;\n        final long byte310 = blocks[blocksOffset++] & 0xFF;\n        final long byte311 = blocks[blocksOffset++] & 0xFF;\n        final long byte312 = blocks[blocksOffset++] & 0xFF;\n        final long byte313 = blocks[blocksOffset++] & 0xFF;\n        final long byte314 = blocks[blocksOffset++] & 0xFF;\n        values[valuesOffset++] = ((byte307 & 127) << 56) | (byte308 << 48) | (byte309 << 40) | (byte310 << 32) | (byte311 << 24) | (byte312 << 16) | (byte313 << 8) | byte314;\n        final long byte315 = blocks[blocksOffset++] & 0xFF;\n        final long byte316 = blocks[blocksOffset++] & 0xFF;\n        final long byte317 = blocks[blocksOffset++] & 0xFF;\n        final long byte318 = blocks[blocksOffset++] & 0xFF;\n        final long byte319 = blocks[blocksOffset++] & 0xFF;\n        final long byte320 = blocks[blocksOffset++] & 0xFF;\n        final long byte321 = blocks[blocksOffset++] & 0xFF;\n        final long byte322 = blocks[blocksOffset++] & 0xFF;\n        values[valuesOffset++] = (byte315 << 55) | (byte316 << 47) | (byte317 << 39) | (byte318 << 31) | (byte319 << 23) | (byte320 << 15) | (byte321 << 7) | (byte322 >>> 1);\n        final long byte323 = blocks[blocksOffset++] & 0xFF;\n        final long byte324 = blocks[blocksOffset++] & 0xFF;\n        final long byte325 = blocks[blocksOffset++] & 0xFF;\n        final long byte326 = blocks[blocksOffset++] & 0xFF;\n        final long byte327 = blocks[blocksOffset++] & 0xFF;\n        final long byte328 = blocks[blocksOffset++] & 0xFF;\n        final long byte329 = blocks[blocksOffset++] & 0xFF;\n        final long byte330 = blocks[blocksOffset++] & 0xFF;\n        values[valuesOffset++] = ((byte322 & 1) << 62) | (byte323 << 54) | (byte324 << 46) | (byte325 << 38) | (byte326 << 30) | (byte327 << 22) | (byte328 << 14) | (byte329 << 6) | (byte330 >>> 2);\n        final long byte331 = blocks[blocksOffset++] & 0xFF;\n        final long byte332 = blocks[blocksOffset++] & 0xFF;\n        final long byte333 = blocks[blocksOffset++] & 0xFF;\n        final long byte334 = blocks[blocksOffset++] & 0xFF;\n        final long byte335 = blocks[blocksOffset++] & 0xFF;\n        final long byte336 = blocks[blocksOffset++] & 0xFF;\n        final long byte337 = blocks[blocksOffset++] & 0xFF;\n        final long byte338 = blocks[blocksOffset++] & 0xFF;\n        values[valuesOffset++] = ((byte330 & 3) << 61) | (byte331 << 53) | (byte332 << 45) | (byte333 << 37) | (byte334 << 29) | (byte335 << 21) | (byte336 << 13) | (byte337 << 5) | (byte338 >>> 3);\n        final long byte339 = blocks[blocksOffset++] & 0xFF;\n        final long byte340 = blocks[blocksOffset++] & 0xFF;\n        final long byte341 = blocks[blocksOffset++] & 0xFF;\n        final long byte342 = blocks[blocksOffset++] & 0xFF;\n        final long byte343 = blocks[blocksOffset++] & 0xFF;\n        final long byte344 = blocks[blocksOffset++] & 0xFF;\n        final long byte345 = blocks[blocksOffset++] & 0xFF;\n        final long byte346 = blocks[blocksOffset++] & 0xFF;\n        values[valuesOffset++] = ((byte338 & 7) << 60) | (byte339 << 52) | (byte340 << 44) | (byte341 << 36) | (byte342 << 28) | (byte343 << 20) | (byte344 << 12) | (byte345 << 4) | (byte346 >>> 4);\n        final long byte347 = blocks[blocksOffset++] & 0xFF;\n        final long byte348 = blocks[blocksOffset++] & 0xFF;\n        final long byte349 = blocks[blocksOffset++] & 0xFF;\n        final long byte350 = blocks[blocksOffset++] & 0xFF;\n        final long byte351 = blocks[blocksOffset++] & 0xFF;\n        final long byte352 = blocks[blocksOffset++] & 0xFF;\n        final long byte353 = blocks[blocksOffset++] & 0xFF;\n        final long byte354 = blocks[blocksOffset++] & 0xFF;\n        values[valuesOffset++] = ((byte346 & 15) << 59) | (byte347 << 51) | (byte348 << 43) | (byte349 << 35) | (byte350 << 27) | (byte351 << 19) | (byte352 << 11) | (byte353 << 3) | (byte354 >>> 5);\n        final long byte355 = blocks[blocksOffset++] & 0xFF;\n        final long byte356 = blocks[blocksOffset++] & 0xFF;\n        final long byte357 = blocks[blocksOffset++] & 0xFF;\n        final long byte358 = blocks[blocksOffset++] & 0xFF;\n        final long byte359 = blocks[blocksOffset++] & 0xFF;\n        final long byte360 = blocks[blocksOffset++] & 0xFF;\n        final long byte361 = blocks[blocksOffset++] & 0xFF;\n        final long byte362 = blocks[blocksOffset++] & 0xFF;\n        values[valuesOffset++] = ((byte354 & 31) << 58) | (byte355 << 50) | (byte356 << 42) | (byte357 << 34) | (byte358 << 26) | (byte359 << 18) | (byte360 << 10) | (byte361 << 2) | (byte362 >>> 6);\n        final long byte363 = blocks[blocksOffset++] & 0xFF;\n        final long byte364 = blocks[blocksOffset++] & 0xFF;\n        final long byte365 = blocks[blocksOffset++] & 0xFF;\n        final long byte366 = blocks[blocksOffset++] & 0xFF;\n        final long byte367 = blocks[blocksOffset++] & 0xFF;\n        final long byte368 = blocks[blocksOffset++] & 0xFF;\n        final long byte369 = blocks[blocksOffset++] & 0xFF;\n        final long byte370 = blocks[blocksOffset++] & 0xFF;\n        values[valuesOffset++] = ((byte362 & 63) << 57) | (byte363 << 49) | (byte364 << 41) | (byte365 << 33) | (byte366 << 25) | (byte367 << 17) | (byte368 << 9) | (byte369 << 1) | (byte370 >>> 7);\n        final long byte371 = blocks[blocksOffset++] & 0xFF;\n        final long byte372 = blocks[blocksOffset++] & 0xFF;\n        final long byte373 = blocks[blocksOffset++] & 0xFF;\n        final long byte374 = blocks[blocksOffset++] & 0xFF;\n        final long byte375 = blocks[blocksOffset++] & 0xFF;\n        final long byte376 = blocks[blocksOffset++] & 0xFF;\n        final long byte377 = blocks[blocksOffset++] & 0xFF;\n        values[valuesOffset++] = ((byte370 & 127) << 56) | (byte371 << 48) | (byte372 << 40) | (byte373 << 32) | (byte374 << 24) | (byte375 << 16) | (byte376 << 8) | byte377;\n        final long byte378 = blocks[blocksOffset++] & 0xFF;\n        final long byte379 = blocks[blocksOffset++] & 0xFF;\n        final long byte380 = blocks[blocksOffset++] & 0xFF;\n        final long byte381 = blocks[blocksOffset++] & 0xFF;\n        final long byte382 = blocks[blocksOffset++] & 0xFF;\n        final long byte383 = blocks[blocksOffset++] & 0xFF;\n        final long byte384 = blocks[blocksOffset++] & 0xFF;\n        final long byte385 = blocks[blocksOffset++] & 0xFF;\n        values[valuesOffset++] = (byte378 << 55) | (byte379 << 47) | (byte380 << 39) | (byte381 << 31) | (byte382 << 23) | (byte383 << 15) | (byte384 << 7) | (byte385 >>> 1);\n        final long byte386 = blocks[blocksOffset++] & 0xFF;\n        final long byte387 = blocks[blocksOffset++] & 0xFF;\n        final long byte388 = blocks[blocksOffset++] & 0xFF;\n        final long byte389 = blocks[blocksOffset++] & 0xFF;\n        final long byte390 = blocks[blocksOffset++] & 0xFF;\n        final long byte391 = blocks[blocksOffset++] & 0xFF;\n        final long byte392 = blocks[blocksOffset++] & 0xFF;\n        final long byte393 = blocks[blocksOffset++] & 0xFF;\n        values[valuesOffset++] = ((byte385 & 1) << 62) | (byte386 << 54) | (byte387 << 46) | (byte388 << 38) | (byte389 << 30) | (byte390 << 22) | (byte391 << 14) | (byte392 << 6) | (byte393 >>> 2);\n        final long byte394 = blocks[blocksOffset++] & 0xFF;\n        final long byte395 = blocks[blocksOffset++] & 0xFF;\n        final long byte396 = blocks[blocksOffset++] & 0xFF;\n        final long byte397 = blocks[blocksOffset++] & 0xFF;\n        final long byte398 = blocks[blocksOffset++] & 0xFF;\n        final long byte399 = blocks[blocksOffset++] & 0xFF;\n        final long byte400 = blocks[blocksOffset++] & 0xFF;\n        final long byte401 = blocks[blocksOffset++] & 0xFF;\n        values[valuesOffset++] = ((byte393 & 3) << 61) | (byte394 << 53) | (byte395 << 45) | (byte396 << 37) | (byte397 << 29) | (byte398 << 21) | (byte399 << 13) | (byte400 << 5) | (byte401 >>> 3);\n        final long byte402 = blocks[blocksOffset++] & 0xFF;\n        final long byte403 = blocks[blocksOffset++] & 0xFF;\n        final long byte404 = blocks[blocksOffset++] & 0xFF;\n        final long byte405 = blocks[blocksOffset++] & 0xFF;\n        final long byte406 = blocks[blocksOffset++] & 0xFF;\n        final long byte407 = blocks[blocksOffset++] & 0xFF;\n        final long byte408 = blocks[blocksOffset++] & 0xFF;\n        final long byte409 = blocks[blocksOffset++] & 0xFF;\n        values[valuesOffset++] = ((byte401 & 7) << 60) | (byte402 << 52) | (byte403 << 44) | (byte404 << 36) | (byte405 << 28) | (byte406 << 20) | (byte407 << 12) | (byte408 << 4) | (byte409 >>> 4);\n        final long byte410 = blocks[blocksOffset++] & 0xFF;\n        final long byte411 = blocks[blocksOffset++] & 0xFF;\n        final long byte412 = blocks[blocksOffset++] & 0xFF;\n        final long byte413 = blocks[blocksOffset++] & 0xFF;\n        final long byte414 = blocks[blocksOffset++] & 0xFF;\n        final long byte415 = blocks[blocksOffset++] & 0xFF;\n        final long byte416 = blocks[blocksOffset++] & 0xFF;\n        final long byte417 = blocks[blocksOffset++] & 0xFF;\n        values[valuesOffset++] = ((byte409 & 15) << 59) | (byte410 << 51) | (byte411 << 43) | (byte412 << 35) | (byte413 << 27) | (byte414 << 19) | (byte415 << 11) | (byte416 << 3) | (byte417 >>> 5);\n        final long byte418 = blocks[blocksOffset++] & 0xFF;\n        final long byte419 = blocks[blocksOffset++] & 0xFF;\n        final long byte420 = blocks[blocksOffset++] & 0xFF;\n        final long byte421 = blocks[blocksOffset++] & 0xFF;\n        final long byte422 = blocks[blocksOffset++] & 0xFF;\n        final long byte423 = blocks[blocksOffset++] & 0xFF;\n        final long byte424 = blocks[blocksOffset++] & 0xFF;\n        final long byte425 = blocks[blocksOffset++] & 0xFF;\n        values[valuesOffset++] = ((byte417 & 31) << 58) | (byte418 << 50) | (byte419 << 42) | (byte420 << 34) | (byte421 << 26) | (byte422 << 18) | (byte423 << 10) | (byte424 << 2) | (byte425 >>> 6);\n        final long byte426 = blocks[blocksOffset++] & 0xFF;\n        final long byte427 = blocks[blocksOffset++] & 0xFF;\n        final long byte428 = blocks[blocksOffset++] & 0xFF;\n        final long byte429 = blocks[blocksOffset++] & 0xFF;\n        final long byte430 = blocks[blocksOffset++] & 0xFF;\n        final long byte431 = blocks[blocksOffset++] & 0xFF;\n        final long byte432 = blocks[blocksOffset++] & 0xFF;\n        final long byte433 = blocks[blocksOffset++] & 0xFF;\n        values[valuesOffset++] = ((byte425 & 63) << 57) | (byte426 << 49) | (byte427 << 41) | (byte428 << 33) | (byte429 << 25) | (byte430 << 17) | (byte431 << 9) | (byte432 << 1) | (byte433 >>> 7);\n        final long byte434 = blocks[blocksOffset++] & 0xFF;\n        final long byte435 = blocks[blocksOffset++] & 0xFF;\n        final long byte436 = blocks[blocksOffset++] & 0xFF;\n        final long byte437 = blocks[blocksOffset++] & 0xFF;\n        final long byte438 = blocks[blocksOffset++] & 0xFF;\n        final long byte439 = blocks[blocksOffset++] & 0xFF;\n        final long byte440 = blocks[blocksOffset++] & 0xFF;\n        values[valuesOffset++] = ((byte433 & 127) << 56) | (byte434 << 48) | (byte435 << 40) | (byte436 << 32) | (byte437 << 24) | (byte438 << 16) | (byte439 << 8) | byte440;\n        final long byte441 = blocks[blocksOffset++] & 0xFF;\n        final long byte442 = blocks[blocksOffset++] & 0xFF;\n        final long byte443 = blocks[blocksOffset++] & 0xFF;\n        final long byte444 = blocks[blocksOffset++] & 0xFF;\n        final long byte445 = blocks[blocksOffset++] & 0xFF;\n        final long byte446 = blocks[blocksOffset++] & 0xFF;\n        final long byte447 = blocks[blocksOffset++] & 0xFF;\n        final long byte448 = blocks[blocksOffset++] & 0xFF;\n        values[valuesOffset++] = (byte441 << 55) | (byte442 << 47) | (byte443 << 39) | (byte444 << 31) | (byte445 << 23) | (byte446 << 15) | (byte447 << 7) | (byte448 >>> 1);\n        final long byte449 = blocks[blocksOffset++] & 0xFF;\n        final long byte450 = blocks[blocksOffset++] & 0xFF;\n        final long byte451 = blocks[blocksOffset++] & 0xFF;\n        final long byte452 = blocks[blocksOffset++] & 0xFF;\n        final long byte453 = blocks[blocksOffset++] & 0xFF;\n        final long byte454 = blocks[blocksOffset++] & 0xFF;\n        final long byte455 = blocks[blocksOffset++] & 0xFF;\n        final long byte456 = blocks[blocksOffset++] & 0xFF;\n        values[valuesOffset++] = ((byte448 & 1) << 62) | (byte449 << 54) | (byte450 << 46) | (byte451 << 38) | (byte452 << 30) | (byte453 << 22) | (byte454 << 14) | (byte455 << 6) | (byte456 >>> 2);\n        final long byte457 = blocks[blocksOffset++] & 0xFF;\n        final long byte458 = blocks[blocksOffset++] & 0xFF;\n        final long byte459 = blocks[blocksOffset++] & 0xFF;\n        final long byte460 = blocks[blocksOffset++] & 0xFF;\n        final long byte461 = blocks[blocksOffset++] & 0xFF;\n        final long byte462 = blocks[blocksOffset++] & 0xFF;\n        final long byte463 = blocks[blocksOffset++] & 0xFF;\n        final long byte464 = blocks[blocksOffset++] & 0xFF;\n        values[valuesOffset++] = ((byte456 & 3) << 61) | (byte457 << 53) | (byte458 << 45) | (byte459 << 37) | (byte460 << 29) | (byte461 << 21) | (byte462 << 13) | (byte463 << 5) | (byte464 >>> 3);\n        final long byte465 = blocks[blocksOffset++] & 0xFF;\n        final long byte466 = blocks[blocksOffset++] & 0xFF;\n        final long byte467 = blocks[blocksOffset++] & 0xFF;\n        final long byte468 = blocks[blocksOffset++] & 0xFF;\n        final long byte469 = blocks[blocksOffset++] & 0xFF;\n        final long byte470 = blocks[blocksOffset++] & 0xFF;\n        final long byte471 = blocks[blocksOffset++] & 0xFF;\n        final long byte472 = blocks[blocksOffset++] & 0xFF;\n        values[valuesOffset++] = ((byte464 & 7) << 60) | (byte465 << 52) | (byte466 << 44) | (byte467 << 36) | (byte468 << 28) | (byte469 << 20) | (byte470 << 12) | (byte471 << 4) | (byte472 >>> 4);\n        final long byte473 = blocks[blocksOffset++] & 0xFF;\n        final long byte474 = blocks[blocksOffset++] & 0xFF;\n        final long byte475 = blocks[blocksOffset++] & 0xFF;\n        final long byte476 = blocks[blocksOffset++] & 0xFF;\n        final long byte477 = blocks[blocksOffset++] & 0xFF;\n        final long byte478 = blocks[blocksOffset++] & 0xFF;\n        final long byte479 = blocks[blocksOffset++] & 0xFF;\n        final long byte480 = blocks[blocksOffset++] & 0xFF;\n        values[valuesOffset++] = ((byte472 & 15) << 59) | (byte473 << 51) | (byte474 << 43) | (byte475 << 35) | (byte476 << 27) | (byte477 << 19) | (byte478 << 11) | (byte479 << 3) | (byte480 >>> 5);\n        final long byte481 = blocks[blocksOffset++] & 0xFF;\n        final long byte482 = blocks[blocksOffset++] & 0xFF;\n        final long byte483 = blocks[blocksOffset++] & 0xFF;\n        final long byte484 = blocks[blocksOffset++] & 0xFF;\n        final long byte485 = blocks[blocksOffset++] & 0xFF;\n        final long byte486 = blocks[blocksOffset++] & 0xFF;\n        final long byte487 = blocks[blocksOffset++] & 0xFF;\n        final long byte488 = blocks[blocksOffset++] & 0xFF;\n        values[valuesOffset++] = ((byte480 & 31) << 58) | (byte481 << 50) | (byte482 << 42) | (byte483 << 34) | (byte484 << 26) | (byte485 << 18) | (byte486 << 10) | (byte487 << 2) | (byte488 >>> 6);\n        final long byte489 = blocks[blocksOffset++] & 0xFF;\n        final long byte490 = blocks[blocksOffset++] & 0xFF;\n        final long byte491 = blocks[blocksOffset++] & 0xFF;\n        final long byte492 = blocks[blocksOffset++] & 0xFF;\n        final long byte493 = blocks[blocksOffset++] & 0xFF;\n        final long byte494 = blocks[blocksOffset++] & 0xFF;\n        final long byte495 = blocks[blocksOffset++] & 0xFF;\n        final long byte496 = blocks[blocksOffset++] & 0xFF;\n        values[valuesOffset++] = ((byte488 & 63) << 57) | (byte489 << 49) | (byte490 << 41) | (byte491 << 33) | (byte492 << 25) | (byte493 << 17) | (byte494 << 9) | (byte495 << 1) | (byte496 >>> 7);\n        final long byte497 = blocks[blocksOffset++] & 0xFF;\n        final long byte498 = blocks[blocksOffset++] & 0xFF;\n        final long byte499 = blocks[blocksOffset++] & 0xFF;\n        final long byte500 = blocks[blocksOffset++] & 0xFF;\n        final long byte501 = blocks[blocksOffset++] & 0xFF;\n        final long byte502 = blocks[blocksOffset++] & 0xFF;\n        final long byte503 = blocks[blocksOffset++] & 0xFF;\n        values[valuesOffset++] = ((byte496 & 127) << 56) | (byte497 << 48) | (byte498 << 40) | (byte499 << 32) | (byte500 << 24) | (byte501 << 16) | (byte502 << 8) | byte503;\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"001b25b42373b22a52f399dbf072f1224632e8e6","date":1345889167,"type":0,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/util/packed/BulkOperationPacked63#decode(byte[],int,long[],int,int).mjava","pathOld":"/dev/null","sourceNew":"    @Override\n    public void decode(byte[] blocks, int blocksOffset, long[] values, int valuesOffset, int iterations) {\n      assert blocksOffset + 8 * iterations * blockCount() <= blocks.length;\n      assert valuesOffset + iterations * valueCount() <= values.length;\n      for (int i = 0; i < iterations; ++i) {\n        final long byte0 = blocks[blocksOffset++] & 0xFF;\n        final long byte1 = blocks[blocksOffset++] & 0xFF;\n        final long byte2 = blocks[blocksOffset++] & 0xFF;\n        final long byte3 = blocks[blocksOffset++] & 0xFF;\n        final long byte4 = blocks[blocksOffset++] & 0xFF;\n        final long byte5 = blocks[blocksOffset++] & 0xFF;\n        final long byte6 = blocks[blocksOffset++] & 0xFF;\n        final long byte7 = blocks[blocksOffset++] & 0xFF;\n        values[valuesOffset++] = (byte0 << 55) | (byte1 << 47) | (byte2 << 39) | (byte3 << 31) | (byte4 << 23) | (byte5 << 15) | (byte6 << 7) | (byte7 >>> 1);\n        final long byte8 = blocks[blocksOffset++] & 0xFF;\n        final long byte9 = blocks[blocksOffset++] & 0xFF;\n        final long byte10 = blocks[blocksOffset++] & 0xFF;\n        final long byte11 = blocks[blocksOffset++] & 0xFF;\n        final long byte12 = blocks[blocksOffset++] & 0xFF;\n        final long byte13 = blocks[blocksOffset++] & 0xFF;\n        final long byte14 = blocks[blocksOffset++] & 0xFF;\n        final long byte15 = blocks[blocksOffset++] & 0xFF;\n        values[valuesOffset++] = ((byte7 & 1) << 62) | (byte8 << 54) | (byte9 << 46) | (byte10 << 38) | (byte11 << 30) | (byte12 << 22) | (byte13 << 14) | (byte14 << 6) | (byte15 >>> 2);\n        final long byte16 = blocks[blocksOffset++] & 0xFF;\n        final long byte17 = blocks[blocksOffset++] & 0xFF;\n        final long byte18 = blocks[blocksOffset++] & 0xFF;\n        final long byte19 = blocks[blocksOffset++] & 0xFF;\n        final long byte20 = blocks[blocksOffset++] & 0xFF;\n        final long byte21 = blocks[blocksOffset++] & 0xFF;\n        final long byte22 = blocks[blocksOffset++] & 0xFF;\n        final long byte23 = blocks[blocksOffset++] & 0xFF;\n        values[valuesOffset++] = ((byte15 & 3) << 61) | (byte16 << 53) | (byte17 << 45) | (byte18 << 37) | (byte19 << 29) | (byte20 << 21) | (byte21 << 13) | (byte22 << 5) | (byte23 >>> 3);\n        final long byte24 = blocks[blocksOffset++] & 0xFF;\n        final long byte25 = blocks[blocksOffset++] & 0xFF;\n        final long byte26 = blocks[blocksOffset++] & 0xFF;\n        final long byte27 = blocks[blocksOffset++] & 0xFF;\n        final long byte28 = blocks[blocksOffset++] & 0xFF;\n        final long byte29 = blocks[blocksOffset++] & 0xFF;\n        final long byte30 = blocks[blocksOffset++] & 0xFF;\n        final long byte31 = blocks[blocksOffset++] & 0xFF;\n        values[valuesOffset++] = ((byte23 & 7) << 60) | (byte24 << 52) | (byte25 << 44) | (byte26 << 36) | (byte27 << 28) | (byte28 << 20) | (byte29 << 12) | (byte30 << 4) | (byte31 >>> 4);\n        final long byte32 = blocks[blocksOffset++] & 0xFF;\n        final long byte33 = blocks[blocksOffset++] & 0xFF;\n        final long byte34 = blocks[blocksOffset++] & 0xFF;\n        final long byte35 = blocks[blocksOffset++] & 0xFF;\n        final long byte36 = blocks[blocksOffset++] & 0xFF;\n        final long byte37 = blocks[blocksOffset++] & 0xFF;\n        final long byte38 = blocks[blocksOffset++] & 0xFF;\n        final long byte39 = blocks[blocksOffset++] & 0xFF;\n        values[valuesOffset++] = ((byte31 & 15) << 59) | (byte32 << 51) | (byte33 << 43) | (byte34 << 35) | (byte35 << 27) | (byte36 << 19) | (byte37 << 11) | (byte38 << 3) | (byte39 >>> 5);\n        final long byte40 = blocks[blocksOffset++] & 0xFF;\n        final long byte41 = blocks[blocksOffset++] & 0xFF;\n        final long byte42 = blocks[blocksOffset++] & 0xFF;\n        final long byte43 = blocks[blocksOffset++] & 0xFF;\n        final long byte44 = blocks[blocksOffset++] & 0xFF;\n        final long byte45 = blocks[blocksOffset++] & 0xFF;\n        final long byte46 = blocks[blocksOffset++] & 0xFF;\n        final long byte47 = blocks[blocksOffset++] & 0xFF;\n        values[valuesOffset++] = ((byte39 & 31) << 58) | (byte40 << 50) | (byte41 << 42) | (byte42 << 34) | (byte43 << 26) | (byte44 << 18) | (byte45 << 10) | (byte46 << 2) | (byte47 >>> 6);\n        final long byte48 = blocks[blocksOffset++] & 0xFF;\n        final long byte49 = blocks[blocksOffset++] & 0xFF;\n        final long byte50 = blocks[blocksOffset++] & 0xFF;\n        final long byte51 = blocks[blocksOffset++] & 0xFF;\n        final long byte52 = blocks[blocksOffset++] & 0xFF;\n        final long byte53 = blocks[blocksOffset++] & 0xFF;\n        final long byte54 = blocks[blocksOffset++] & 0xFF;\n        final long byte55 = blocks[blocksOffset++] & 0xFF;\n        values[valuesOffset++] = ((byte47 & 63) << 57) | (byte48 << 49) | (byte49 << 41) | (byte50 << 33) | (byte51 << 25) | (byte52 << 17) | (byte53 << 9) | (byte54 << 1) | (byte55 >>> 7);\n        final long byte56 = blocks[blocksOffset++] & 0xFF;\n        final long byte57 = blocks[blocksOffset++] & 0xFF;\n        final long byte58 = blocks[blocksOffset++] & 0xFF;\n        final long byte59 = blocks[blocksOffset++] & 0xFF;\n        final long byte60 = blocks[blocksOffset++] & 0xFF;\n        final long byte61 = blocks[blocksOffset++] & 0xFF;\n        final long byte62 = blocks[blocksOffset++] & 0xFF;\n        values[valuesOffset++] = ((byte55 & 127) << 56) | (byte56 << 48) | (byte57 << 40) | (byte58 << 32) | (byte59 << 24) | (byte60 << 16) | (byte61 << 8) | byte62;\n        final long byte63 = blocks[blocksOffset++] & 0xFF;\n        final long byte64 = blocks[blocksOffset++] & 0xFF;\n        final long byte65 = blocks[blocksOffset++] & 0xFF;\n        final long byte66 = blocks[blocksOffset++] & 0xFF;\n        final long byte67 = blocks[blocksOffset++] & 0xFF;\n        final long byte68 = blocks[blocksOffset++] & 0xFF;\n        final long byte69 = blocks[blocksOffset++] & 0xFF;\n        final long byte70 = blocks[blocksOffset++] & 0xFF;\n        values[valuesOffset++] = (byte63 << 55) | (byte64 << 47) | (byte65 << 39) | (byte66 << 31) | (byte67 << 23) | (byte68 << 15) | (byte69 << 7) | (byte70 >>> 1);\n        final long byte71 = blocks[blocksOffset++] & 0xFF;\n        final long byte72 = blocks[blocksOffset++] & 0xFF;\n        final long byte73 = blocks[blocksOffset++] & 0xFF;\n        final long byte74 = blocks[blocksOffset++] & 0xFF;\n        final long byte75 = blocks[blocksOffset++] & 0xFF;\n        final long byte76 = blocks[blocksOffset++] & 0xFF;\n        final long byte77 = blocks[blocksOffset++] & 0xFF;\n        final long byte78 = blocks[blocksOffset++] & 0xFF;\n        values[valuesOffset++] = ((byte70 & 1) << 62) | (byte71 << 54) | (byte72 << 46) | (byte73 << 38) | (byte74 << 30) | (byte75 << 22) | (byte76 << 14) | (byte77 << 6) | (byte78 >>> 2);\n        final long byte79 = blocks[blocksOffset++] & 0xFF;\n        final long byte80 = blocks[blocksOffset++] & 0xFF;\n        final long byte81 = blocks[blocksOffset++] & 0xFF;\n        final long byte82 = blocks[blocksOffset++] & 0xFF;\n        final long byte83 = blocks[blocksOffset++] & 0xFF;\n        final long byte84 = blocks[blocksOffset++] & 0xFF;\n        final long byte85 = blocks[blocksOffset++] & 0xFF;\n        final long byte86 = blocks[blocksOffset++] & 0xFF;\n        values[valuesOffset++] = ((byte78 & 3) << 61) | (byte79 << 53) | (byte80 << 45) | (byte81 << 37) | (byte82 << 29) | (byte83 << 21) | (byte84 << 13) | (byte85 << 5) | (byte86 >>> 3);\n        final long byte87 = blocks[blocksOffset++] & 0xFF;\n        final long byte88 = blocks[blocksOffset++] & 0xFF;\n        final long byte89 = blocks[blocksOffset++] & 0xFF;\n        final long byte90 = blocks[blocksOffset++] & 0xFF;\n        final long byte91 = blocks[blocksOffset++] & 0xFF;\n        final long byte92 = blocks[blocksOffset++] & 0xFF;\n        final long byte93 = blocks[blocksOffset++] & 0xFF;\n        final long byte94 = blocks[blocksOffset++] & 0xFF;\n        values[valuesOffset++] = ((byte86 & 7) << 60) | (byte87 << 52) | (byte88 << 44) | (byte89 << 36) | (byte90 << 28) | (byte91 << 20) | (byte92 << 12) | (byte93 << 4) | (byte94 >>> 4);\n        final long byte95 = blocks[blocksOffset++] & 0xFF;\n        final long byte96 = blocks[blocksOffset++] & 0xFF;\n        final long byte97 = blocks[blocksOffset++] & 0xFF;\n        final long byte98 = blocks[blocksOffset++] & 0xFF;\n        final long byte99 = blocks[blocksOffset++] & 0xFF;\n        final long byte100 = blocks[blocksOffset++] & 0xFF;\n        final long byte101 = blocks[blocksOffset++] & 0xFF;\n        final long byte102 = blocks[blocksOffset++] & 0xFF;\n        values[valuesOffset++] = ((byte94 & 15) << 59) | (byte95 << 51) | (byte96 << 43) | (byte97 << 35) | (byte98 << 27) | (byte99 << 19) | (byte100 << 11) | (byte101 << 3) | (byte102 >>> 5);\n        final long byte103 = blocks[blocksOffset++] & 0xFF;\n        final long byte104 = blocks[blocksOffset++] & 0xFF;\n        final long byte105 = blocks[blocksOffset++] & 0xFF;\n        final long byte106 = blocks[blocksOffset++] & 0xFF;\n        final long byte107 = blocks[blocksOffset++] & 0xFF;\n        final long byte108 = blocks[blocksOffset++] & 0xFF;\n        final long byte109 = blocks[blocksOffset++] & 0xFF;\n        final long byte110 = blocks[blocksOffset++] & 0xFF;\n        values[valuesOffset++] = ((byte102 & 31) << 58) | (byte103 << 50) | (byte104 << 42) | (byte105 << 34) | (byte106 << 26) | (byte107 << 18) | (byte108 << 10) | (byte109 << 2) | (byte110 >>> 6);\n        final long byte111 = blocks[blocksOffset++] & 0xFF;\n        final long byte112 = blocks[blocksOffset++] & 0xFF;\n        final long byte113 = blocks[blocksOffset++] & 0xFF;\n        final long byte114 = blocks[blocksOffset++] & 0xFF;\n        final long byte115 = blocks[blocksOffset++] & 0xFF;\n        final long byte116 = blocks[blocksOffset++] & 0xFF;\n        final long byte117 = blocks[blocksOffset++] & 0xFF;\n        final long byte118 = blocks[blocksOffset++] & 0xFF;\n        values[valuesOffset++] = ((byte110 & 63) << 57) | (byte111 << 49) | (byte112 << 41) | (byte113 << 33) | (byte114 << 25) | (byte115 << 17) | (byte116 << 9) | (byte117 << 1) | (byte118 >>> 7);\n        final long byte119 = blocks[blocksOffset++] & 0xFF;\n        final long byte120 = blocks[blocksOffset++] & 0xFF;\n        final long byte121 = blocks[blocksOffset++] & 0xFF;\n        final long byte122 = blocks[blocksOffset++] & 0xFF;\n        final long byte123 = blocks[blocksOffset++] & 0xFF;\n        final long byte124 = blocks[blocksOffset++] & 0xFF;\n        final long byte125 = blocks[blocksOffset++] & 0xFF;\n        values[valuesOffset++] = ((byte118 & 127) << 56) | (byte119 << 48) | (byte120 << 40) | (byte121 << 32) | (byte122 << 24) | (byte123 << 16) | (byte124 << 8) | byte125;\n        final long byte126 = blocks[blocksOffset++] & 0xFF;\n        final long byte127 = blocks[blocksOffset++] & 0xFF;\n        final long byte128 = blocks[blocksOffset++] & 0xFF;\n        final long byte129 = blocks[blocksOffset++] & 0xFF;\n        final long byte130 = blocks[blocksOffset++] & 0xFF;\n        final long byte131 = blocks[blocksOffset++] & 0xFF;\n        final long byte132 = blocks[blocksOffset++] & 0xFF;\n        final long byte133 = blocks[blocksOffset++] & 0xFF;\n        values[valuesOffset++] = (byte126 << 55) | (byte127 << 47) | (byte128 << 39) | (byte129 << 31) | (byte130 << 23) | (byte131 << 15) | (byte132 << 7) | (byte133 >>> 1);\n        final long byte134 = blocks[blocksOffset++] & 0xFF;\n        final long byte135 = blocks[blocksOffset++] & 0xFF;\n        final long byte136 = blocks[blocksOffset++] & 0xFF;\n        final long byte137 = blocks[blocksOffset++] & 0xFF;\n        final long byte138 = blocks[blocksOffset++] & 0xFF;\n        final long byte139 = blocks[blocksOffset++] & 0xFF;\n        final long byte140 = blocks[blocksOffset++] & 0xFF;\n        final long byte141 = blocks[blocksOffset++] & 0xFF;\n        values[valuesOffset++] = ((byte133 & 1) << 62) | (byte134 << 54) | (byte135 << 46) | (byte136 << 38) | (byte137 << 30) | (byte138 << 22) | (byte139 << 14) | (byte140 << 6) | (byte141 >>> 2);\n        final long byte142 = blocks[blocksOffset++] & 0xFF;\n        final long byte143 = blocks[blocksOffset++] & 0xFF;\n        final long byte144 = blocks[blocksOffset++] & 0xFF;\n        final long byte145 = blocks[blocksOffset++] & 0xFF;\n        final long byte146 = blocks[blocksOffset++] & 0xFF;\n        final long byte147 = blocks[blocksOffset++] & 0xFF;\n        final long byte148 = blocks[blocksOffset++] & 0xFF;\n        final long byte149 = blocks[blocksOffset++] & 0xFF;\n        values[valuesOffset++] = ((byte141 & 3) << 61) | (byte142 << 53) | (byte143 << 45) | (byte144 << 37) | (byte145 << 29) | (byte146 << 21) | (byte147 << 13) | (byte148 << 5) | (byte149 >>> 3);\n        final long byte150 = blocks[blocksOffset++] & 0xFF;\n        final long byte151 = blocks[blocksOffset++] & 0xFF;\n        final long byte152 = blocks[blocksOffset++] & 0xFF;\n        final long byte153 = blocks[blocksOffset++] & 0xFF;\n        final long byte154 = blocks[blocksOffset++] & 0xFF;\n        final long byte155 = blocks[blocksOffset++] & 0xFF;\n        final long byte156 = blocks[blocksOffset++] & 0xFF;\n        final long byte157 = blocks[blocksOffset++] & 0xFF;\n        values[valuesOffset++] = ((byte149 & 7) << 60) | (byte150 << 52) | (byte151 << 44) | (byte152 << 36) | (byte153 << 28) | (byte154 << 20) | (byte155 << 12) | (byte156 << 4) | (byte157 >>> 4);\n        final long byte158 = blocks[blocksOffset++] & 0xFF;\n        final long byte159 = blocks[blocksOffset++] & 0xFF;\n        final long byte160 = blocks[blocksOffset++] & 0xFF;\n        final long byte161 = blocks[blocksOffset++] & 0xFF;\n        final long byte162 = blocks[blocksOffset++] & 0xFF;\n        final long byte163 = blocks[blocksOffset++] & 0xFF;\n        final long byte164 = blocks[blocksOffset++] & 0xFF;\n        final long byte165 = blocks[blocksOffset++] & 0xFF;\n        values[valuesOffset++] = ((byte157 & 15) << 59) | (byte158 << 51) | (byte159 << 43) | (byte160 << 35) | (byte161 << 27) | (byte162 << 19) | (byte163 << 11) | (byte164 << 3) | (byte165 >>> 5);\n        final long byte166 = blocks[blocksOffset++] & 0xFF;\n        final long byte167 = blocks[blocksOffset++] & 0xFF;\n        final long byte168 = blocks[blocksOffset++] & 0xFF;\n        final long byte169 = blocks[blocksOffset++] & 0xFF;\n        final long byte170 = blocks[blocksOffset++] & 0xFF;\n        final long byte171 = blocks[blocksOffset++] & 0xFF;\n        final long byte172 = blocks[blocksOffset++] & 0xFF;\n        final long byte173 = blocks[blocksOffset++] & 0xFF;\n        values[valuesOffset++] = ((byte165 & 31) << 58) | (byte166 << 50) | (byte167 << 42) | (byte168 << 34) | (byte169 << 26) | (byte170 << 18) | (byte171 << 10) | (byte172 << 2) | (byte173 >>> 6);\n        final long byte174 = blocks[blocksOffset++] & 0xFF;\n        final long byte175 = blocks[blocksOffset++] & 0xFF;\n        final long byte176 = blocks[blocksOffset++] & 0xFF;\n        final long byte177 = blocks[blocksOffset++] & 0xFF;\n        final long byte178 = blocks[blocksOffset++] & 0xFF;\n        final long byte179 = blocks[blocksOffset++] & 0xFF;\n        final long byte180 = blocks[blocksOffset++] & 0xFF;\n        final long byte181 = blocks[blocksOffset++] & 0xFF;\n        values[valuesOffset++] = ((byte173 & 63) << 57) | (byte174 << 49) | (byte175 << 41) | (byte176 << 33) | (byte177 << 25) | (byte178 << 17) | (byte179 << 9) | (byte180 << 1) | (byte181 >>> 7);\n        final long byte182 = blocks[blocksOffset++] & 0xFF;\n        final long byte183 = blocks[blocksOffset++] & 0xFF;\n        final long byte184 = blocks[blocksOffset++] & 0xFF;\n        final long byte185 = blocks[blocksOffset++] & 0xFF;\n        final long byte186 = blocks[blocksOffset++] & 0xFF;\n        final long byte187 = blocks[blocksOffset++] & 0xFF;\n        final long byte188 = blocks[blocksOffset++] & 0xFF;\n        values[valuesOffset++] = ((byte181 & 127) << 56) | (byte182 << 48) | (byte183 << 40) | (byte184 << 32) | (byte185 << 24) | (byte186 << 16) | (byte187 << 8) | byte188;\n        final long byte189 = blocks[blocksOffset++] & 0xFF;\n        final long byte190 = blocks[blocksOffset++] & 0xFF;\n        final long byte191 = blocks[blocksOffset++] & 0xFF;\n        final long byte192 = blocks[blocksOffset++] & 0xFF;\n        final long byte193 = blocks[blocksOffset++] & 0xFF;\n        final long byte194 = blocks[blocksOffset++] & 0xFF;\n        final long byte195 = blocks[blocksOffset++] & 0xFF;\n        final long byte196 = blocks[blocksOffset++] & 0xFF;\n        values[valuesOffset++] = (byte189 << 55) | (byte190 << 47) | (byte191 << 39) | (byte192 << 31) | (byte193 << 23) | (byte194 << 15) | (byte195 << 7) | (byte196 >>> 1);\n        final long byte197 = blocks[blocksOffset++] & 0xFF;\n        final long byte198 = blocks[blocksOffset++] & 0xFF;\n        final long byte199 = blocks[blocksOffset++] & 0xFF;\n        final long byte200 = blocks[blocksOffset++] & 0xFF;\n        final long byte201 = blocks[blocksOffset++] & 0xFF;\n        final long byte202 = blocks[blocksOffset++] & 0xFF;\n        final long byte203 = blocks[blocksOffset++] & 0xFF;\n        final long byte204 = blocks[blocksOffset++] & 0xFF;\n        values[valuesOffset++] = ((byte196 & 1) << 62) | (byte197 << 54) | (byte198 << 46) | (byte199 << 38) | (byte200 << 30) | (byte201 << 22) | (byte202 << 14) | (byte203 << 6) | (byte204 >>> 2);\n        final long byte205 = blocks[blocksOffset++] & 0xFF;\n        final long byte206 = blocks[blocksOffset++] & 0xFF;\n        final long byte207 = blocks[blocksOffset++] & 0xFF;\n        final long byte208 = blocks[blocksOffset++] & 0xFF;\n        final long byte209 = blocks[blocksOffset++] & 0xFF;\n        final long byte210 = blocks[blocksOffset++] & 0xFF;\n        final long byte211 = blocks[blocksOffset++] & 0xFF;\n        final long byte212 = blocks[blocksOffset++] & 0xFF;\n        values[valuesOffset++] = ((byte204 & 3) << 61) | (byte205 << 53) | (byte206 << 45) | (byte207 << 37) | (byte208 << 29) | (byte209 << 21) | (byte210 << 13) | (byte211 << 5) | (byte212 >>> 3);\n        final long byte213 = blocks[blocksOffset++] & 0xFF;\n        final long byte214 = blocks[blocksOffset++] & 0xFF;\n        final long byte215 = blocks[blocksOffset++] & 0xFF;\n        final long byte216 = blocks[blocksOffset++] & 0xFF;\n        final long byte217 = blocks[blocksOffset++] & 0xFF;\n        final long byte218 = blocks[blocksOffset++] & 0xFF;\n        final long byte219 = blocks[blocksOffset++] & 0xFF;\n        final long byte220 = blocks[blocksOffset++] & 0xFF;\n        values[valuesOffset++] = ((byte212 & 7) << 60) | (byte213 << 52) | (byte214 << 44) | (byte215 << 36) | (byte216 << 28) | (byte217 << 20) | (byte218 << 12) | (byte219 << 4) | (byte220 >>> 4);\n        final long byte221 = blocks[blocksOffset++] & 0xFF;\n        final long byte222 = blocks[blocksOffset++] & 0xFF;\n        final long byte223 = blocks[blocksOffset++] & 0xFF;\n        final long byte224 = blocks[blocksOffset++] & 0xFF;\n        final long byte225 = blocks[blocksOffset++] & 0xFF;\n        final long byte226 = blocks[blocksOffset++] & 0xFF;\n        final long byte227 = blocks[blocksOffset++] & 0xFF;\n        final long byte228 = blocks[blocksOffset++] & 0xFF;\n        values[valuesOffset++] = ((byte220 & 15) << 59) | (byte221 << 51) | (byte222 << 43) | (byte223 << 35) | (byte224 << 27) | (byte225 << 19) | (byte226 << 11) | (byte227 << 3) | (byte228 >>> 5);\n        final long byte229 = blocks[blocksOffset++] & 0xFF;\n        final long byte230 = blocks[blocksOffset++] & 0xFF;\n        final long byte231 = blocks[blocksOffset++] & 0xFF;\n        final long byte232 = blocks[blocksOffset++] & 0xFF;\n        final long byte233 = blocks[blocksOffset++] & 0xFF;\n        final long byte234 = blocks[blocksOffset++] & 0xFF;\n        final long byte235 = blocks[blocksOffset++] & 0xFF;\n        final long byte236 = blocks[blocksOffset++] & 0xFF;\n        values[valuesOffset++] = ((byte228 & 31) << 58) | (byte229 << 50) | (byte230 << 42) | (byte231 << 34) | (byte232 << 26) | (byte233 << 18) | (byte234 << 10) | (byte235 << 2) | (byte236 >>> 6);\n        final long byte237 = blocks[blocksOffset++] & 0xFF;\n        final long byte238 = blocks[blocksOffset++] & 0xFF;\n        final long byte239 = blocks[blocksOffset++] & 0xFF;\n        final long byte240 = blocks[blocksOffset++] & 0xFF;\n        final long byte241 = blocks[blocksOffset++] & 0xFF;\n        final long byte242 = blocks[blocksOffset++] & 0xFF;\n        final long byte243 = blocks[blocksOffset++] & 0xFF;\n        final long byte244 = blocks[blocksOffset++] & 0xFF;\n        values[valuesOffset++] = ((byte236 & 63) << 57) | (byte237 << 49) | (byte238 << 41) | (byte239 << 33) | (byte240 << 25) | (byte241 << 17) | (byte242 << 9) | (byte243 << 1) | (byte244 >>> 7);\n        final long byte245 = blocks[blocksOffset++] & 0xFF;\n        final long byte246 = blocks[blocksOffset++] & 0xFF;\n        final long byte247 = blocks[blocksOffset++] & 0xFF;\n        final long byte248 = blocks[blocksOffset++] & 0xFF;\n        final long byte249 = blocks[blocksOffset++] & 0xFF;\n        final long byte250 = blocks[blocksOffset++] & 0xFF;\n        final long byte251 = blocks[blocksOffset++] & 0xFF;\n        values[valuesOffset++] = ((byte244 & 127) << 56) | (byte245 << 48) | (byte246 << 40) | (byte247 << 32) | (byte248 << 24) | (byte249 << 16) | (byte250 << 8) | byte251;\n        final long byte252 = blocks[blocksOffset++] & 0xFF;\n        final long byte253 = blocks[blocksOffset++] & 0xFF;\n        final long byte254 = blocks[blocksOffset++] & 0xFF;\n        final long byte255 = blocks[blocksOffset++] & 0xFF;\n        final long byte256 = blocks[blocksOffset++] & 0xFF;\n        final long byte257 = blocks[blocksOffset++] & 0xFF;\n        final long byte258 = blocks[blocksOffset++] & 0xFF;\n        final long byte259 = blocks[blocksOffset++] & 0xFF;\n        values[valuesOffset++] = (byte252 << 55) | (byte253 << 47) | (byte254 << 39) | (byte255 << 31) | (byte256 << 23) | (byte257 << 15) | (byte258 << 7) | (byte259 >>> 1);\n        final long byte260 = blocks[blocksOffset++] & 0xFF;\n        final long byte261 = blocks[blocksOffset++] & 0xFF;\n        final long byte262 = blocks[blocksOffset++] & 0xFF;\n        final long byte263 = blocks[blocksOffset++] & 0xFF;\n        final long byte264 = blocks[blocksOffset++] & 0xFF;\n        final long byte265 = blocks[blocksOffset++] & 0xFF;\n        final long byte266 = blocks[blocksOffset++] & 0xFF;\n        final long byte267 = blocks[blocksOffset++] & 0xFF;\n        values[valuesOffset++] = ((byte259 & 1) << 62) | (byte260 << 54) | (byte261 << 46) | (byte262 << 38) | (byte263 << 30) | (byte264 << 22) | (byte265 << 14) | (byte266 << 6) | (byte267 >>> 2);\n        final long byte268 = blocks[blocksOffset++] & 0xFF;\n        final long byte269 = blocks[blocksOffset++] & 0xFF;\n        final long byte270 = blocks[blocksOffset++] & 0xFF;\n        final long byte271 = blocks[blocksOffset++] & 0xFF;\n        final long byte272 = blocks[blocksOffset++] & 0xFF;\n        final long byte273 = blocks[blocksOffset++] & 0xFF;\n        final long byte274 = blocks[blocksOffset++] & 0xFF;\n        final long byte275 = blocks[blocksOffset++] & 0xFF;\n        values[valuesOffset++] = ((byte267 & 3) << 61) | (byte268 << 53) | (byte269 << 45) | (byte270 << 37) | (byte271 << 29) | (byte272 << 21) | (byte273 << 13) | (byte274 << 5) | (byte275 >>> 3);\n        final long byte276 = blocks[blocksOffset++] & 0xFF;\n        final long byte277 = blocks[blocksOffset++] & 0xFF;\n        final long byte278 = blocks[blocksOffset++] & 0xFF;\n        final long byte279 = blocks[blocksOffset++] & 0xFF;\n        final long byte280 = blocks[blocksOffset++] & 0xFF;\n        final long byte281 = blocks[blocksOffset++] & 0xFF;\n        final long byte282 = blocks[blocksOffset++] & 0xFF;\n        final long byte283 = blocks[blocksOffset++] & 0xFF;\n        values[valuesOffset++] = ((byte275 & 7) << 60) | (byte276 << 52) | (byte277 << 44) | (byte278 << 36) | (byte279 << 28) | (byte280 << 20) | (byte281 << 12) | (byte282 << 4) | (byte283 >>> 4);\n        final long byte284 = blocks[blocksOffset++] & 0xFF;\n        final long byte285 = blocks[blocksOffset++] & 0xFF;\n        final long byte286 = blocks[blocksOffset++] & 0xFF;\n        final long byte287 = blocks[blocksOffset++] & 0xFF;\n        final long byte288 = blocks[blocksOffset++] & 0xFF;\n        final long byte289 = blocks[blocksOffset++] & 0xFF;\n        final long byte290 = blocks[blocksOffset++] & 0xFF;\n        final long byte291 = blocks[blocksOffset++] & 0xFF;\n        values[valuesOffset++] = ((byte283 & 15) << 59) | (byte284 << 51) | (byte285 << 43) | (byte286 << 35) | (byte287 << 27) | (byte288 << 19) | (byte289 << 11) | (byte290 << 3) | (byte291 >>> 5);\n        final long byte292 = blocks[blocksOffset++] & 0xFF;\n        final long byte293 = blocks[blocksOffset++] & 0xFF;\n        final long byte294 = blocks[blocksOffset++] & 0xFF;\n        final long byte295 = blocks[blocksOffset++] & 0xFF;\n        final long byte296 = blocks[blocksOffset++] & 0xFF;\n        final long byte297 = blocks[blocksOffset++] & 0xFF;\n        final long byte298 = blocks[blocksOffset++] & 0xFF;\n        final long byte299 = blocks[blocksOffset++] & 0xFF;\n        values[valuesOffset++] = ((byte291 & 31) << 58) | (byte292 << 50) | (byte293 << 42) | (byte294 << 34) | (byte295 << 26) | (byte296 << 18) | (byte297 << 10) | (byte298 << 2) | (byte299 >>> 6);\n        final long byte300 = blocks[blocksOffset++] & 0xFF;\n        final long byte301 = blocks[blocksOffset++] & 0xFF;\n        final long byte302 = blocks[blocksOffset++] & 0xFF;\n        final long byte303 = blocks[blocksOffset++] & 0xFF;\n        final long byte304 = blocks[blocksOffset++] & 0xFF;\n        final long byte305 = blocks[blocksOffset++] & 0xFF;\n        final long byte306 = blocks[blocksOffset++] & 0xFF;\n        final long byte307 = blocks[blocksOffset++] & 0xFF;\n        values[valuesOffset++] = ((byte299 & 63) << 57) | (byte300 << 49) | (byte301 << 41) | (byte302 << 33) | (byte303 << 25) | (byte304 << 17) | (byte305 << 9) | (byte306 << 1) | (byte307 >>> 7);\n        final long byte308 = blocks[blocksOffset++] & 0xFF;\n        final long byte309 = blocks[blocksOffset++] & 0xFF;\n        final long byte310 = blocks[blocksOffset++] & 0xFF;\n        final long byte311 = blocks[blocksOffset++] & 0xFF;\n        final long byte312 = blocks[blocksOffset++] & 0xFF;\n        final long byte313 = blocks[blocksOffset++] & 0xFF;\n        final long byte314 = blocks[blocksOffset++] & 0xFF;\n        values[valuesOffset++] = ((byte307 & 127) << 56) | (byte308 << 48) | (byte309 << 40) | (byte310 << 32) | (byte311 << 24) | (byte312 << 16) | (byte313 << 8) | byte314;\n        final long byte315 = blocks[blocksOffset++] & 0xFF;\n        final long byte316 = blocks[blocksOffset++] & 0xFF;\n        final long byte317 = blocks[blocksOffset++] & 0xFF;\n        final long byte318 = blocks[blocksOffset++] & 0xFF;\n        final long byte319 = blocks[blocksOffset++] & 0xFF;\n        final long byte320 = blocks[blocksOffset++] & 0xFF;\n        final long byte321 = blocks[blocksOffset++] & 0xFF;\n        final long byte322 = blocks[blocksOffset++] & 0xFF;\n        values[valuesOffset++] = (byte315 << 55) | (byte316 << 47) | (byte317 << 39) | (byte318 << 31) | (byte319 << 23) | (byte320 << 15) | (byte321 << 7) | (byte322 >>> 1);\n        final long byte323 = blocks[blocksOffset++] & 0xFF;\n        final long byte324 = blocks[blocksOffset++] & 0xFF;\n        final long byte325 = blocks[blocksOffset++] & 0xFF;\n        final long byte326 = blocks[blocksOffset++] & 0xFF;\n        final long byte327 = blocks[blocksOffset++] & 0xFF;\n        final long byte328 = blocks[blocksOffset++] & 0xFF;\n        final long byte329 = blocks[blocksOffset++] & 0xFF;\n        final long byte330 = blocks[blocksOffset++] & 0xFF;\n        values[valuesOffset++] = ((byte322 & 1) << 62) | (byte323 << 54) | (byte324 << 46) | (byte325 << 38) | (byte326 << 30) | (byte327 << 22) | (byte328 << 14) | (byte329 << 6) | (byte330 >>> 2);\n        final long byte331 = blocks[blocksOffset++] & 0xFF;\n        final long byte332 = blocks[blocksOffset++] & 0xFF;\n        final long byte333 = blocks[blocksOffset++] & 0xFF;\n        final long byte334 = blocks[blocksOffset++] & 0xFF;\n        final long byte335 = blocks[blocksOffset++] & 0xFF;\n        final long byte336 = blocks[blocksOffset++] & 0xFF;\n        final long byte337 = blocks[blocksOffset++] & 0xFF;\n        final long byte338 = blocks[blocksOffset++] & 0xFF;\n        values[valuesOffset++] = ((byte330 & 3) << 61) | (byte331 << 53) | (byte332 << 45) | (byte333 << 37) | (byte334 << 29) | (byte335 << 21) | (byte336 << 13) | (byte337 << 5) | (byte338 >>> 3);\n        final long byte339 = blocks[blocksOffset++] & 0xFF;\n        final long byte340 = blocks[blocksOffset++] & 0xFF;\n        final long byte341 = blocks[blocksOffset++] & 0xFF;\n        final long byte342 = blocks[blocksOffset++] & 0xFF;\n        final long byte343 = blocks[blocksOffset++] & 0xFF;\n        final long byte344 = blocks[blocksOffset++] & 0xFF;\n        final long byte345 = blocks[blocksOffset++] & 0xFF;\n        final long byte346 = blocks[blocksOffset++] & 0xFF;\n        values[valuesOffset++] = ((byte338 & 7) << 60) | (byte339 << 52) | (byte340 << 44) | (byte341 << 36) | (byte342 << 28) | (byte343 << 20) | (byte344 << 12) | (byte345 << 4) | (byte346 >>> 4);\n        final long byte347 = blocks[blocksOffset++] & 0xFF;\n        final long byte348 = blocks[blocksOffset++] & 0xFF;\n        final long byte349 = blocks[blocksOffset++] & 0xFF;\n        final long byte350 = blocks[blocksOffset++] & 0xFF;\n        final long byte351 = blocks[blocksOffset++] & 0xFF;\n        final long byte352 = blocks[blocksOffset++] & 0xFF;\n        final long byte353 = blocks[blocksOffset++] & 0xFF;\n        final long byte354 = blocks[blocksOffset++] & 0xFF;\n        values[valuesOffset++] = ((byte346 & 15) << 59) | (byte347 << 51) | (byte348 << 43) | (byte349 << 35) | (byte350 << 27) | (byte351 << 19) | (byte352 << 11) | (byte353 << 3) | (byte354 >>> 5);\n        final long byte355 = blocks[blocksOffset++] & 0xFF;\n        final long byte356 = blocks[blocksOffset++] & 0xFF;\n        final long byte357 = blocks[blocksOffset++] & 0xFF;\n        final long byte358 = blocks[blocksOffset++] & 0xFF;\n        final long byte359 = blocks[blocksOffset++] & 0xFF;\n        final long byte360 = blocks[blocksOffset++] & 0xFF;\n        final long byte361 = blocks[blocksOffset++] & 0xFF;\n        final long byte362 = blocks[blocksOffset++] & 0xFF;\n        values[valuesOffset++] = ((byte354 & 31) << 58) | (byte355 << 50) | (byte356 << 42) | (byte357 << 34) | (byte358 << 26) | (byte359 << 18) | (byte360 << 10) | (byte361 << 2) | (byte362 >>> 6);\n        final long byte363 = blocks[blocksOffset++] & 0xFF;\n        final long byte364 = blocks[blocksOffset++] & 0xFF;\n        final long byte365 = blocks[blocksOffset++] & 0xFF;\n        final long byte366 = blocks[blocksOffset++] & 0xFF;\n        final long byte367 = blocks[blocksOffset++] & 0xFF;\n        final long byte368 = blocks[blocksOffset++] & 0xFF;\n        final long byte369 = blocks[blocksOffset++] & 0xFF;\n        final long byte370 = blocks[blocksOffset++] & 0xFF;\n        values[valuesOffset++] = ((byte362 & 63) << 57) | (byte363 << 49) | (byte364 << 41) | (byte365 << 33) | (byte366 << 25) | (byte367 << 17) | (byte368 << 9) | (byte369 << 1) | (byte370 >>> 7);\n        final long byte371 = blocks[blocksOffset++] & 0xFF;\n        final long byte372 = blocks[blocksOffset++] & 0xFF;\n        final long byte373 = blocks[blocksOffset++] & 0xFF;\n        final long byte374 = blocks[blocksOffset++] & 0xFF;\n        final long byte375 = blocks[blocksOffset++] & 0xFF;\n        final long byte376 = blocks[blocksOffset++] & 0xFF;\n        final long byte377 = blocks[blocksOffset++] & 0xFF;\n        values[valuesOffset++] = ((byte370 & 127) << 56) | (byte371 << 48) | (byte372 << 40) | (byte373 << 32) | (byte374 << 24) | (byte375 << 16) | (byte376 << 8) | byte377;\n        final long byte378 = blocks[blocksOffset++] & 0xFF;\n        final long byte379 = blocks[blocksOffset++] & 0xFF;\n        final long byte380 = blocks[blocksOffset++] & 0xFF;\n        final long byte381 = blocks[blocksOffset++] & 0xFF;\n        final long byte382 = blocks[blocksOffset++] & 0xFF;\n        final long byte383 = blocks[blocksOffset++] & 0xFF;\n        final long byte384 = blocks[blocksOffset++] & 0xFF;\n        final long byte385 = blocks[blocksOffset++] & 0xFF;\n        values[valuesOffset++] = (byte378 << 55) | (byte379 << 47) | (byte380 << 39) | (byte381 << 31) | (byte382 << 23) | (byte383 << 15) | (byte384 << 7) | (byte385 >>> 1);\n        final long byte386 = blocks[blocksOffset++] & 0xFF;\n        final long byte387 = blocks[blocksOffset++] & 0xFF;\n        final long byte388 = blocks[blocksOffset++] & 0xFF;\n        final long byte389 = blocks[blocksOffset++] & 0xFF;\n        final long byte390 = blocks[blocksOffset++] & 0xFF;\n        final long byte391 = blocks[blocksOffset++] & 0xFF;\n        final long byte392 = blocks[blocksOffset++] & 0xFF;\n        final long byte393 = blocks[blocksOffset++] & 0xFF;\n        values[valuesOffset++] = ((byte385 & 1) << 62) | (byte386 << 54) | (byte387 << 46) | (byte388 << 38) | (byte389 << 30) | (byte390 << 22) | (byte391 << 14) | (byte392 << 6) | (byte393 >>> 2);\n        final long byte394 = blocks[blocksOffset++] & 0xFF;\n        final long byte395 = blocks[blocksOffset++] & 0xFF;\n        final long byte396 = blocks[blocksOffset++] & 0xFF;\n        final long byte397 = blocks[blocksOffset++] & 0xFF;\n        final long byte398 = blocks[blocksOffset++] & 0xFF;\n        final long byte399 = blocks[blocksOffset++] & 0xFF;\n        final long byte400 = blocks[blocksOffset++] & 0xFF;\n        final long byte401 = blocks[blocksOffset++] & 0xFF;\n        values[valuesOffset++] = ((byte393 & 3) << 61) | (byte394 << 53) | (byte395 << 45) | (byte396 << 37) | (byte397 << 29) | (byte398 << 21) | (byte399 << 13) | (byte400 << 5) | (byte401 >>> 3);\n        final long byte402 = blocks[blocksOffset++] & 0xFF;\n        final long byte403 = blocks[blocksOffset++] & 0xFF;\n        final long byte404 = blocks[blocksOffset++] & 0xFF;\n        final long byte405 = blocks[blocksOffset++] & 0xFF;\n        final long byte406 = blocks[blocksOffset++] & 0xFF;\n        final long byte407 = blocks[blocksOffset++] & 0xFF;\n        final long byte408 = blocks[blocksOffset++] & 0xFF;\n        final long byte409 = blocks[blocksOffset++] & 0xFF;\n        values[valuesOffset++] = ((byte401 & 7) << 60) | (byte402 << 52) | (byte403 << 44) | (byte404 << 36) | (byte405 << 28) | (byte406 << 20) | (byte407 << 12) | (byte408 << 4) | (byte409 >>> 4);\n        final long byte410 = blocks[blocksOffset++] & 0xFF;\n        final long byte411 = blocks[blocksOffset++] & 0xFF;\n        final long byte412 = blocks[blocksOffset++] & 0xFF;\n        final long byte413 = blocks[blocksOffset++] & 0xFF;\n        final long byte414 = blocks[blocksOffset++] & 0xFF;\n        final long byte415 = blocks[blocksOffset++] & 0xFF;\n        final long byte416 = blocks[blocksOffset++] & 0xFF;\n        final long byte417 = blocks[blocksOffset++] & 0xFF;\n        values[valuesOffset++] = ((byte409 & 15) << 59) | (byte410 << 51) | (byte411 << 43) | (byte412 << 35) | (byte413 << 27) | (byte414 << 19) | (byte415 << 11) | (byte416 << 3) | (byte417 >>> 5);\n        final long byte418 = blocks[blocksOffset++] & 0xFF;\n        final long byte419 = blocks[blocksOffset++] & 0xFF;\n        final long byte420 = blocks[blocksOffset++] & 0xFF;\n        final long byte421 = blocks[blocksOffset++] & 0xFF;\n        final long byte422 = blocks[blocksOffset++] & 0xFF;\n        final long byte423 = blocks[blocksOffset++] & 0xFF;\n        final long byte424 = blocks[blocksOffset++] & 0xFF;\n        final long byte425 = blocks[blocksOffset++] & 0xFF;\n        values[valuesOffset++] = ((byte417 & 31) << 58) | (byte418 << 50) | (byte419 << 42) | (byte420 << 34) | (byte421 << 26) | (byte422 << 18) | (byte423 << 10) | (byte424 << 2) | (byte425 >>> 6);\n        final long byte426 = blocks[blocksOffset++] & 0xFF;\n        final long byte427 = blocks[blocksOffset++] & 0xFF;\n        final long byte428 = blocks[blocksOffset++] & 0xFF;\n        final long byte429 = blocks[blocksOffset++] & 0xFF;\n        final long byte430 = blocks[blocksOffset++] & 0xFF;\n        final long byte431 = blocks[blocksOffset++] & 0xFF;\n        final long byte432 = blocks[blocksOffset++] & 0xFF;\n        final long byte433 = blocks[blocksOffset++] & 0xFF;\n        values[valuesOffset++] = ((byte425 & 63) << 57) | (byte426 << 49) | (byte427 << 41) | (byte428 << 33) | (byte429 << 25) | (byte430 << 17) | (byte431 << 9) | (byte432 << 1) | (byte433 >>> 7);\n        final long byte434 = blocks[blocksOffset++] & 0xFF;\n        final long byte435 = blocks[blocksOffset++] & 0xFF;\n        final long byte436 = blocks[blocksOffset++] & 0xFF;\n        final long byte437 = blocks[blocksOffset++] & 0xFF;\n        final long byte438 = blocks[blocksOffset++] & 0xFF;\n        final long byte439 = blocks[blocksOffset++] & 0xFF;\n        final long byte440 = blocks[blocksOffset++] & 0xFF;\n        values[valuesOffset++] = ((byte433 & 127) << 56) | (byte434 << 48) | (byte435 << 40) | (byte436 << 32) | (byte437 << 24) | (byte438 << 16) | (byte439 << 8) | byte440;\n        final long byte441 = blocks[blocksOffset++] & 0xFF;\n        final long byte442 = blocks[blocksOffset++] & 0xFF;\n        final long byte443 = blocks[blocksOffset++] & 0xFF;\n        final long byte444 = blocks[blocksOffset++] & 0xFF;\n        final long byte445 = blocks[blocksOffset++] & 0xFF;\n        final long byte446 = blocks[blocksOffset++] & 0xFF;\n        final long byte447 = blocks[blocksOffset++] & 0xFF;\n        final long byte448 = blocks[blocksOffset++] & 0xFF;\n        values[valuesOffset++] = (byte441 << 55) | (byte442 << 47) | (byte443 << 39) | (byte444 << 31) | (byte445 << 23) | (byte446 << 15) | (byte447 << 7) | (byte448 >>> 1);\n        final long byte449 = blocks[blocksOffset++] & 0xFF;\n        final long byte450 = blocks[blocksOffset++] & 0xFF;\n        final long byte451 = blocks[blocksOffset++] & 0xFF;\n        final long byte452 = blocks[blocksOffset++] & 0xFF;\n        final long byte453 = blocks[blocksOffset++] & 0xFF;\n        final long byte454 = blocks[blocksOffset++] & 0xFF;\n        final long byte455 = blocks[blocksOffset++] & 0xFF;\n        final long byte456 = blocks[blocksOffset++] & 0xFF;\n        values[valuesOffset++] = ((byte448 & 1) << 62) | (byte449 << 54) | (byte450 << 46) | (byte451 << 38) | (byte452 << 30) | (byte453 << 22) | (byte454 << 14) | (byte455 << 6) | (byte456 >>> 2);\n        final long byte457 = blocks[blocksOffset++] & 0xFF;\n        final long byte458 = blocks[blocksOffset++] & 0xFF;\n        final long byte459 = blocks[blocksOffset++] & 0xFF;\n        final long byte460 = blocks[blocksOffset++] & 0xFF;\n        final long byte461 = blocks[blocksOffset++] & 0xFF;\n        final long byte462 = blocks[blocksOffset++] & 0xFF;\n        final long byte463 = blocks[blocksOffset++] & 0xFF;\n        final long byte464 = blocks[blocksOffset++] & 0xFF;\n        values[valuesOffset++] = ((byte456 & 3) << 61) | (byte457 << 53) | (byte458 << 45) | (byte459 << 37) | (byte460 << 29) | (byte461 << 21) | (byte462 << 13) | (byte463 << 5) | (byte464 >>> 3);\n        final long byte465 = blocks[blocksOffset++] & 0xFF;\n        final long byte466 = blocks[blocksOffset++] & 0xFF;\n        final long byte467 = blocks[blocksOffset++] & 0xFF;\n        final long byte468 = blocks[blocksOffset++] & 0xFF;\n        final long byte469 = blocks[blocksOffset++] & 0xFF;\n        final long byte470 = blocks[blocksOffset++] & 0xFF;\n        final long byte471 = blocks[blocksOffset++] & 0xFF;\n        final long byte472 = blocks[blocksOffset++] & 0xFF;\n        values[valuesOffset++] = ((byte464 & 7) << 60) | (byte465 << 52) | (byte466 << 44) | (byte467 << 36) | (byte468 << 28) | (byte469 << 20) | (byte470 << 12) | (byte471 << 4) | (byte472 >>> 4);\n        final long byte473 = blocks[blocksOffset++] & 0xFF;\n        final long byte474 = blocks[blocksOffset++] & 0xFF;\n        final long byte475 = blocks[blocksOffset++] & 0xFF;\n        final long byte476 = blocks[blocksOffset++] & 0xFF;\n        final long byte477 = blocks[blocksOffset++] & 0xFF;\n        final long byte478 = blocks[blocksOffset++] & 0xFF;\n        final long byte479 = blocks[blocksOffset++] & 0xFF;\n        final long byte480 = blocks[blocksOffset++] & 0xFF;\n        values[valuesOffset++] = ((byte472 & 15) << 59) | (byte473 << 51) | (byte474 << 43) | (byte475 << 35) | (byte476 << 27) | (byte477 << 19) | (byte478 << 11) | (byte479 << 3) | (byte480 >>> 5);\n        final long byte481 = blocks[blocksOffset++] & 0xFF;\n        final long byte482 = blocks[blocksOffset++] & 0xFF;\n        final long byte483 = blocks[blocksOffset++] & 0xFF;\n        final long byte484 = blocks[blocksOffset++] & 0xFF;\n        final long byte485 = blocks[blocksOffset++] & 0xFF;\n        final long byte486 = blocks[blocksOffset++] & 0xFF;\n        final long byte487 = blocks[blocksOffset++] & 0xFF;\n        final long byte488 = blocks[blocksOffset++] & 0xFF;\n        values[valuesOffset++] = ((byte480 & 31) << 58) | (byte481 << 50) | (byte482 << 42) | (byte483 << 34) | (byte484 << 26) | (byte485 << 18) | (byte486 << 10) | (byte487 << 2) | (byte488 >>> 6);\n        final long byte489 = blocks[blocksOffset++] & 0xFF;\n        final long byte490 = blocks[blocksOffset++] & 0xFF;\n        final long byte491 = blocks[blocksOffset++] & 0xFF;\n        final long byte492 = blocks[blocksOffset++] & 0xFF;\n        final long byte493 = blocks[blocksOffset++] & 0xFF;\n        final long byte494 = blocks[blocksOffset++] & 0xFF;\n        final long byte495 = blocks[blocksOffset++] & 0xFF;\n        final long byte496 = blocks[blocksOffset++] & 0xFF;\n        values[valuesOffset++] = ((byte488 & 63) << 57) | (byte489 << 49) | (byte490 << 41) | (byte491 << 33) | (byte492 << 25) | (byte493 << 17) | (byte494 << 9) | (byte495 << 1) | (byte496 >>> 7);\n        final long byte497 = blocks[blocksOffset++] & 0xFF;\n        final long byte498 = blocks[blocksOffset++] & 0xFF;\n        final long byte499 = blocks[blocksOffset++] & 0xFF;\n        final long byte500 = blocks[blocksOffset++] & 0xFF;\n        final long byte501 = blocks[blocksOffset++] & 0xFF;\n        final long byte502 = blocks[blocksOffset++] & 0xFF;\n        final long byte503 = blocks[blocksOffset++] & 0xFF;\n        values[valuesOffset++] = ((byte496 & 127) << 56) | (byte497 << 48) | (byte498 << 40) | (byte499 << 32) | (byte500 << 24) | (byte501 << 16) | (byte502 << 8) | byte503;\n      }\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"58d488e3fd72dfc95fa76fcb24f58e90c343323c","date":1346235723,"type":4,"author":"Adrien Grand","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/util/packed/BulkOperationPacked63#decode(byte[],int,long[],int,int).mjava","sourceNew":null,"sourceOld":"    @Override\n    public void decode(byte[] blocks, int blocksOffset, long[] values, int valuesOffset, int iterations) {\n      assert blocksOffset + 8 * iterations * blockCount() <= blocks.length;\n      assert valuesOffset + iterations * valueCount() <= values.length;\n      for (int i = 0; i < iterations; ++i) {\n        final long byte0 = blocks[blocksOffset++] & 0xFF;\n        final long byte1 = blocks[blocksOffset++] & 0xFF;\n        final long byte2 = blocks[blocksOffset++] & 0xFF;\n        final long byte3 = blocks[blocksOffset++] & 0xFF;\n        final long byte4 = blocks[blocksOffset++] & 0xFF;\n        final long byte5 = blocks[blocksOffset++] & 0xFF;\n        final long byte6 = blocks[blocksOffset++] & 0xFF;\n        final long byte7 = blocks[blocksOffset++] & 0xFF;\n        values[valuesOffset++] = (byte0 << 55) | (byte1 << 47) | (byte2 << 39) | (byte3 << 31) | (byte4 << 23) | (byte5 << 15) | (byte6 << 7) | (byte7 >>> 1);\n        final long byte8 = blocks[blocksOffset++] & 0xFF;\n        final long byte9 = blocks[blocksOffset++] & 0xFF;\n        final long byte10 = blocks[blocksOffset++] & 0xFF;\n        final long byte11 = blocks[blocksOffset++] & 0xFF;\n        final long byte12 = blocks[blocksOffset++] & 0xFF;\n        final long byte13 = blocks[blocksOffset++] & 0xFF;\n        final long byte14 = blocks[blocksOffset++] & 0xFF;\n        final long byte15 = blocks[blocksOffset++] & 0xFF;\n        values[valuesOffset++] = ((byte7 & 1) << 62) | (byte8 << 54) | (byte9 << 46) | (byte10 << 38) | (byte11 << 30) | (byte12 << 22) | (byte13 << 14) | (byte14 << 6) | (byte15 >>> 2);\n        final long byte16 = blocks[blocksOffset++] & 0xFF;\n        final long byte17 = blocks[blocksOffset++] & 0xFF;\n        final long byte18 = blocks[blocksOffset++] & 0xFF;\n        final long byte19 = blocks[blocksOffset++] & 0xFF;\n        final long byte20 = blocks[blocksOffset++] & 0xFF;\n        final long byte21 = blocks[blocksOffset++] & 0xFF;\n        final long byte22 = blocks[blocksOffset++] & 0xFF;\n        final long byte23 = blocks[blocksOffset++] & 0xFF;\n        values[valuesOffset++] = ((byte15 & 3) << 61) | (byte16 << 53) | (byte17 << 45) | (byte18 << 37) | (byte19 << 29) | (byte20 << 21) | (byte21 << 13) | (byte22 << 5) | (byte23 >>> 3);\n        final long byte24 = blocks[blocksOffset++] & 0xFF;\n        final long byte25 = blocks[blocksOffset++] & 0xFF;\n        final long byte26 = blocks[blocksOffset++] & 0xFF;\n        final long byte27 = blocks[blocksOffset++] & 0xFF;\n        final long byte28 = blocks[blocksOffset++] & 0xFF;\n        final long byte29 = blocks[blocksOffset++] & 0xFF;\n        final long byte30 = blocks[blocksOffset++] & 0xFF;\n        final long byte31 = blocks[blocksOffset++] & 0xFF;\n        values[valuesOffset++] = ((byte23 & 7) << 60) | (byte24 << 52) | (byte25 << 44) | (byte26 << 36) | (byte27 << 28) | (byte28 << 20) | (byte29 << 12) | (byte30 << 4) | (byte31 >>> 4);\n        final long byte32 = blocks[blocksOffset++] & 0xFF;\n        final long byte33 = blocks[blocksOffset++] & 0xFF;\n        final long byte34 = blocks[blocksOffset++] & 0xFF;\n        final long byte35 = blocks[blocksOffset++] & 0xFF;\n        final long byte36 = blocks[blocksOffset++] & 0xFF;\n        final long byte37 = blocks[blocksOffset++] & 0xFF;\n        final long byte38 = blocks[blocksOffset++] & 0xFF;\n        final long byte39 = blocks[blocksOffset++] & 0xFF;\n        values[valuesOffset++] = ((byte31 & 15) << 59) | (byte32 << 51) | (byte33 << 43) | (byte34 << 35) | (byte35 << 27) | (byte36 << 19) | (byte37 << 11) | (byte38 << 3) | (byte39 >>> 5);\n        final long byte40 = blocks[blocksOffset++] & 0xFF;\n        final long byte41 = blocks[blocksOffset++] & 0xFF;\n        final long byte42 = blocks[blocksOffset++] & 0xFF;\n        final long byte43 = blocks[blocksOffset++] & 0xFF;\n        final long byte44 = blocks[blocksOffset++] & 0xFF;\n        final long byte45 = blocks[blocksOffset++] & 0xFF;\n        final long byte46 = blocks[blocksOffset++] & 0xFF;\n        final long byte47 = blocks[blocksOffset++] & 0xFF;\n        values[valuesOffset++] = ((byte39 & 31) << 58) | (byte40 << 50) | (byte41 << 42) | (byte42 << 34) | (byte43 << 26) | (byte44 << 18) | (byte45 << 10) | (byte46 << 2) | (byte47 >>> 6);\n        final long byte48 = blocks[blocksOffset++] & 0xFF;\n        final long byte49 = blocks[blocksOffset++] & 0xFF;\n        final long byte50 = blocks[blocksOffset++] & 0xFF;\n        final long byte51 = blocks[blocksOffset++] & 0xFF;\n        final long byte52 = blocks[blocksOffset++] & 0xFF;\n        final long byte53 = blocks[blocksOffset++] & 0xFF;\n        final long byte54 = blocks[blocksOffset++] & 0xFF;\n        final long byte55 = blocks[blocksOffset++] & 0xFF;\n        values[valuesOffset++] = ((byte47 & 63) << 57) | (byte48 << 49) | (byte49 << 41) | (byte50 << 33) | (byte51 << 25) | (byte52 << 17) | (byte53 << 9) | (byte54 << 1) | (byte55 >>> 7);\n        final long byte56 = blocks[blocksOffset++] & 0xFF;\n        final long byte57 = blocks[blocksOffset++] & 0xFF;\n        final long byte58 = blocks[blocksOffset++] & 0xFF;\n        final long byte59 = blocks[blocksOffset++] & 0xFF;\n        final long byte60 = blocks[blocksOffset++] & 0xFF;\n        final long byte61 = blocks[blocksOffset++] & 0xFF;\n        final long byte62 = blocks[blocksOffset++] & 0xFF;\n        values[valuesOffset++] = ((byte55 & 127) << 56) | (byte56 << 48) | (byte57 << 40) | (byte58 << 32) | (byte59 << 24) | (byte60 << 16) | (byte61 << 8) | byte62;\n        final long byte63 = blocks[blocksOffset++] & 0xFF;\n        final long byte64 = blocks[blocksOffset++] & 0xFF;\n        final long byte65 = blocks[blocksOffset++] & 0xFF;\n        final long byte66 = blocks[blocksOffset++] & 0xFF;\n        final long byte67 = blocks[blocksOffset++] & 0xFF;\n        final long byte68 = blocks[blocksOffset++] & 0xFF;\n        final long byte69 = blocks[blocksOffset++] & 0xFF;\n        final long byte70 = blocks[blocksOffset++] & 0xFF;\n        values[valuesOffset++] = (byte63 << 55) | (byte64 << 47) | (byte65 << 39) | (byte66 << 31) | (byte67 << 23) | (byte68 << 15) | (byte69 << 7) | (byte70 >>> 1);\n        final long byte71 = blocks[blocksOffset++] & 0xFF;\n        final long byte72 = blocks[blocksOffset++] & 0xFF;\n        final long byte73 = blocks[blocksOffset++] & 0xFF;\n        final long byte74 = blocks[blocksOffset++] & 0xFF;\n        final long byte75 = blocks[blocksOffset++] & 0xFF;\n        final long byte76 = blocks[blocksOffset++] & 0xFF;\n        final long byte77 = blocks[blocksOffset++] & 0xFF;\n        final long byte78 = blocks[blocksOffset++] & 0xFF;\n        values[valuesOffset++] = ((byte70 & 1) << 62) | (byte71 << 54) | (byte72 << 46) | (byte73 << 38) | (byte74 << 30) | (byte75 << 22) | (byte76 << 14) | (byte77 << 6) | (byte78 >>> 2);\n        final long byte79 = blocks[blocksOffset++] & 0xFF;\n        final long byte80 = blocks[blocksOffset++] & 0xFF;\n        final long byte81 = blocks[blocksOffset++] & 0xFF;\n        final long byte82 = blocks[blocksOffset++] & 0xFF;\n        final long byte83 = blocks[blocksOffset++] & 0xFF;\n        final long byte84 = blocks[blocksOffset++] & 0xFF;\n        final long byte85 = blocks[blocksOffset++] & 0xFF;\n        final long byte86 = blocks[blocksOffset++] & 0xFF;\n        values[valuesOffset++] = ((byte78 & 3) << 61) | (byte79 << 53) | (byte80 << 45) | (byte81 << 37) | (byte82 << 29) | (byte83 << 21) | (byte84 << 13) | (byte85 << 5) | (byte86 >>> 3);\n        final long byte87 = blocks[blocksOffset++] & 0xFF;\n        final long byte88 = blocks[blocksOffset++] & 0xFF;\n        final long byte89 = blocks[blocksOffset++] & 0xFF;\n        final long byte90 = blocks[blocksOffset++] & 0xFF;\n        final long byte91 = blocks[blocksOffset++] & 0xFF;\n        final long byte92 = blocks[blocksOffset++] & 0xFF;\n        final long byte93 = blocks[blocksOffset++] & 0xFF;\n        final long byte94 = blocks[blocksOffset++] & 0xFF;\n        values[valuesOffset++] = ((byte86 & 7) << 60) | (byte87 << 52) | (byte88 << 44) | (byte89 << 36) | (byte90 << 28) | (byte91 << 20) | (byte92 << 12) | (byte93 << 4) | (byte94 >>> 4);\n        final long byte95 = blocks[blocksOffset++] & 0xFF;\n        final long byte96 = blocks[blocksOffset++] & 0xFF;\n        final long byte97 = blocks[blocksOffset++] & 0xFF;\n        final long byte98 = blocks[blocksOffset++] & 0xFF;\n        final long byte99 = blocks[blocksOffset++] & 0xFF;\n        final long byte100 = blocks[blocksOffset++] & 0xFF;\n        final long byte101 = blocks[blocksOffset++] & 0xFF;\n        final long byte102 = blocks[blocksOffset++] & 0xFF;\n        values[valuesOffset++] = ((byte94 & 15) << 59) | (byte95 << 51) | (byte96 << 43) | (byte97 << 35) | (byte98 << 27) | (byte99 << 19) | (byte100 << 11) | (byte101 << 3) | (byte102 >>> 5);\n        final long byte103 = blocks[blocksOffset++] & 0xFF;\n        final long byte104 = blocks[blocksOffset++] & 0xFF;\n        final long byte105 = blocks[blocksOffset++] & 0xFF;\n        final long byte106 = blocks[blocksOffset++] & 0xFF;\n        final long byte107 = blocks[blocksOffset++] & 0xFF;\n        final long byte108 = blocks[blocksOffset++] & 0xFF;\n        final long byte109 = blocks[blocksOffset++] & 0xFF;\n        final long byte110 = blocks[blocksOffset++] & 0xFF;\n        values[valuesOffset++] = ((byte102 & 31) << 58) | (byte103 << 50) | (byte104 << 42) | (byte105 << 34) | (byte106 << 26) | (byte107 << 18) | (byte108 << 10) | (byte109 << 2) | (byte110 >>> 6);\n        final long byte111 = blocks[blocksOffset++] & 0xFF;\n        final long byte112 = blocks[blocksOffset++] & 0xFF;\n        final long byte113 = blocks[blocksOffset++] & 0xFF;\n        final long byte114 = blocks[blocksOffset++] & 0xFF;\n        final long byte115 = blocks[blocksOffset++] & 0xFF;\n        final long byte116 = blocks[blocksOffset++] & 0xFF;\n        final long byte117 = blocks[blocksOffset++] & 0xFF;\n        final long byte118 = blocks[blocksOffset++] & 0xFF;\n        values[valuesOffset++] = ((byte110 & 63) << 57) | (byte111 << 49) | (byte112 << 41) | (byte113 << 33) | (byte114 << 25) | (byte115 << 17) | (byte116 << 9) | (byte117 << 1) | (byte118 >>> 7);\n        final long byte119 = blocks[blocksOffset++] & 0xFF;\n        final long byte120 = blocks[blocksOffset++] & 0xFF;\n        final long byte121 = blocks[blocksOffset++] & 0xFF;\n        final long byte122 = blocks[blocksOffset++] & 0xFF;\n        final long byte123 = blocks[blocksOffset++] & 0xFF;\n        final long byte124 = blocks[blocksOffset++] & 0xFF;\n        final long byte125 = blocks[blocksOffset++] & 0xFF;\n        values[valuesOffset++] = ((byte118 & 127) << 56) | (byte119 << 48) | (byte120 << 40) | (byte121 << 32) | (byte122 << 24) | (byte123 << 16) | (byte124 << 8) | byte125;\n        final long byte126 = blocks[blocksOffset++] & 0xFF;\n        final long byte127 = blocks[blocksOffset++] & 0xFF;\n        final long byte128 = blocks[blocksOffset++] & 0xFF;\n        final long byte129 = blocks[blocksOffset++] & 0xFF;\n        final long byte130 = blocks[blocksOffset++] & 0xFF;\n        final long byte131 = blocks[blocksOffset++] & 0xFF;\n        final long byte132 = blocks[blocksOffset++] & 0xFF;\n        final long byte133 = blocks[blocksOffset++] & 0xFF;\n        values[valuesOffset++] = (byte126 << 55) | (byte127 << 47) | (byte128 << 39) | (byte129 << 31) | (byte130 << 23) | (byte131 << 15) | (byte132 << 7) | (byte133 >>> 1);\n        final long byte134 = blocks[blocksOffset++] & 0xFF;\n        final long byte135 = blocks[blocksOffset++] & 0xFF;\n        final long byte136 = blocks[blocksOffset++] & 0xFF;\n        final long byte137 = blocks[blocksOffset++] & 0xFF;\n        final long byte138 = blocks[blocksOffset++] & 0xFF;\n        final long byte139 = blocks[blocksOffset++] & 0xFF;\n        final long byte140 = blocks[blocksOffset++] & 0xFF;\n        final long byte141 = blocks[blocksOffset++] & 0xFF;\n        values[valuesOffset++] = ((byte133 & 1) << 62) | (byte134 << 54) | (byte135 << 46) | (byte136 << 38) | (byte137 << 30) | (byte138 << 22) | (byte139 << 14) | (byte140 << 6) | (byte141 >>> 2);\n        final long byte142 = blocks[blocksOffset++] & 0xFF;\n        final long byte143 = blocks[blocksOffset++] & 0xFF;\n        final long byte144 = blocks[blocksOffset++] & 0xFF;\n        final long byte145 = blocks[blocksOffset++] & 0xFF;\n        final long byte146 = blocks[blocksOffset++] & 0xFF;\n        final long byte147 = blocks[blocksOffset++] & 0xFF;\n        final long byte148 = blocks[blocksOffset++] & 0xFF;\n        final long byte149 = blocks[blocksOffset++] & 0xFF;\n        values[valuesOffset++] = ((byte141 & 3) << 61) | (byte142 << 53) | (byte143 << 45) | (byte144 << 37) | (byte145 << 29) | (byte146 << 21) | (byte147 << 13) | (byte148 << 5) | (byte149 >>> 3);\n        final long byte150 = blocks[blocksOffset++] & 0xFF;\n        final long byte151 = blocks[blocksOffset++] & 0xFF;\n        final long byte152 = blocks[blocksOffset++] & 0xFF;\n        final long byte153 = blocks[blocksOffset++] & 0xFF;\n        final long byte154 = blocks[blocksOffset++] & 0xFF;\n        final long byte155 = blocks[blocksOffset++] & 0xFF;\n        final long byte156 = blocks[blocksOffset++] & 0xFF;\n        final long byte157 = blocks[blocksOffset++] & 0xFF;\n        values[valuesOffset++] = ((byte149 & 7) << 60) | (byte150 << 52) | (byte151 << 44) | (byte152 << 36) | (byte153 << 28) | (byte154 << 20) | (byte155 << 12) | (byte156 << 4) | (byte157 >>> 4);\n        final long byte158 = blocks[blocksOffset++] & 0xFF;\n        final long byte159 = blocks[blocksOffset++] & 0xFF;\n        final long byte160 = blocks[blocksOffset++] & 0xFF;\n        final long byte161 = blocks[blocksOffset++] & 0xFF;\n        final long byte162 = blocks[blocksOffset++] & 0xFF;\n        final long byte163 = blocks[blocksOffset++] & 0xFF;\n        final long byte164 = blocks[blocksOffset++] & 0xFF;\n        final long byte165 = blocks[blocksOffset++] & 0xFF;\n        values[valuesOffset++] = ((byte157 & 15) << 59) | (byte158 << 51) | (byte159 << 43) | (byte160 << 35) | (byte161 << 27) | (byte162 << 19) | (byte163 << 11) | (byte164 << 3) | (byte165 >>> 5);\n        final long byte166 = blocks[blocksOffset++] & 0xFF;\n        final long byte167 = blocks[blocksOffset++] & 0xFF;\n        final long byte168 = blocks[blocksOffset++] & 0xFF;\n        final long byte169 = blocks[blocksOffset++] & 0xFF;\n        final long byte170 = blocks[blocksOffset++] & 0xFF;\n        final long byte171 = blocks[blocksOffset++] & 0xFF;\n        final long byte172 = blocks[blocksOffset++] & 0xFF;\n        final long byte173 = blocks[blocksOffset++] & 0xFF;\n        values[valuesOffset++] = ((byte165 & 31) << 58) | (byte166 << 50) | (byte167 << 42) | (byte168 << 34) | (byte169 << 26) | (byte170 << 18) | (byte171 << 10) | (byte172 << 2) | (byte173 >>> 6);\n        final long byte174 = blocks[blocksOffset++] & 0xFF;\n        final long byte175 = blocks[blocksOffset++] & 0xFF;\n        final long byte176 = blocks[blocksOffset++] & 0xFF;\n        final long byte177 = blocks[blocksOffset++] & 0xFF;\n        final long byte178 = blocks[blocksOffset++] & 0xFF;\n        final long byte179 = blocks[blocksOffset++] & 0xFF;\n        final long byte180 = blocks[blocksOffset++] & 0xFF;\n        final long byte181 = blocks[blocksOffset++] & 0xFF;\n        values[valuesOffset++] = ((byte173 & 63) << 57) | (byte174 << 49) | (byte175 << 41) | (byte176 << 33) | (byte177 << 25) | (byte178 << 17) | (byte179 << 9) | (byte180 << 1) | (byte181 >>> 7);\n        final long byte182 = blocks[blocksOffset++] & 0xFF;\n        final long byte183 = blocks[blocksOffset++] & 0xFF;\n        final long byte184 = blocks[blocksOffset++] & 0xFF;\n        final long byte185 = blocks[blocksOffset++] & 0xFF;\n        final long byte186 = blocks[blocksOffset++] & 0xFF;\n        final long byte187 = blocks[blocksOffset++] & 0xFF;\n        final long byte188 = blocks[blocksOffset++] & 0xFF;\n        values[valuesOffset++] = ((byte181 & 127) << 56) | (byte182 << 48) | (byte183 << 40) | (byte184 << 32) | (byte185 << 24) | (byte186 << 16) | (byte187 << 8) | byte188;\n        final long byte189 = blocks[blocksOffset++] & 0xFF;\n        final long byte190 = blocks[blocksOffset++] & 0xFF;\n        final long byte191 = blocks[blocksOffset++] & 0xFF;\n        final long byte192 = blocks[blocksOffset++] & 0xFF;\n        final long byte193 = blocks[blocksOffset++] & 0xFF;\n        final long byte194 = blocks[blocksOffset++] & 0xFF;\n        final long byte195 = blocks[blocksOffset++] & 0xFF;\n        final long byte196 = blocks[blocksOffset++] & 0xFF;\n        values[valuesOffset++] = (byte189 << 55) | (byte190 << 47) | (byte191 << 39) | (byte192 << 31) | (byte193 << 23) | (byte194 << 15) | (byte195 << 7) | (byte196 >>> 1);\n        final long byte197 = blocks[blocksOffset++] & 0xFF;\n        final long byte198 = blocks[blocksOffset++] & 0xFF;\n        final long byte199 = blocks[blocksOffset++] & 0xFF;\n        final long byte200 = blocks[blocksOffset++] & 0xFF;\n        final long byte201 = blocks[blocksOffset++] & 0xFF;\n        final long byte202 = blocks[blocksOffset++] & 0xFF;\n        final long byte203 = blocks[blocksOffset++] & 0xFF;\n        final long byte204 = blocks[blocksOffset++] & 0xFF;\n        values[valuesOffset++] = ((byte196 & 1) << 62) | (byte197 << 54) | (byte198 << 46) | (byte199 << 38) | (byte200 << 30) | (byte201 << 22) | (byte202 << 14) | (byte203 << 6) | (byte204 >>> 2);\n        final long byte205 = blocks[blocksOffset++] & 0xFF;\n        final long byte206 = blocks[blocksOffset++] & 0xFF;\n        final long byte207 = blocks[blocksOffset++] & 0xFF;\n        final long byte208 = blocks[blocksOffset++] & 0xFF;\n        final long byte209 = blocks[blocksOffset++] & 0xFF;\n        final long byte210 = blocks[blocksOffset++] & 0xFF;\n        final long byte211 = blocks[blocksOffset++] & 0xFF;\n        final long byte212 = blocks[blocksOffset++] & 0xFF;\n        values[valuesOffset++] = ((byte204 & 3) << 61) | (byte205 << 53) | (byte206 << 45) | (byte207 << 37) | (byte208 << 29) | (byte209 << 21) | (byte210 << 13) | (byte211 << 5) | (byte212 >>> 3);\n        final long byte213 = blocks[blocksOffset++] & 0xFF;\n        final long byte214 = blocks[blocksOffset++] & 0xFF;\n        final long byte215 = blocks[blocksOffset++] & 0xFF;\n        final long byte216 = blocks[blocksOffset++] & 0xFF;\n        final long byte217 = blocks[blocksOffset++] & 0xFF;\n        final long byte218 = blocks[blocksOffset++] & 0xFF;\n        final long byte219 = blocks[blocksOffset++] & 0xFF;\n        final long byte220 = blocks[blocksOffset++] & 0xFF;\n        values[valuesOffset++] = ((byte212 & 7) << 60) | (byte213 << 52) | (byte214 << 44) | (byte215 << 36) | (byte216 << 28) | (byte217 << 20) | (byte218 << 12) | (byte219 << 4) | (byte220 >>> 4);\n        final long byte221 = blocks[blocksOffset++] & 0xFF;\n        final long byte222 = blocks[blocksOffset++] & 0xFF;\n        final long byte223 = blocks[blocksOffset++] & 0xFF;\n        final long byte224 = blocks[blocksOffset++] & 0xFF;\n        final long byte225 = blocks[blocksOffset++] & 0xFF;\n        final long byte226 = blocks[blocksOffset++] & 0xFF;\n        final long byte227 = blocks[blocksOffset++] & 0xFF;\n        final long byte228 = blocks[blocksOffset++] & 0xFF;\n        values[valuesOffset++] = ((byte220 & 15) << 59) | (byte221 << 51) | (byte222 << 43) | (byte223 << 35) | (byte224 << 27) | (byte225 << 19) | (byte226 << 11) | (byte227 << 3) | (byte228 >>> 5);\n        final long byte229 = blocks[blocksOffset++] & 0xFF;\n        final long byte230 = blocks[blocksOffset++] & 0xFF;\n        final long byte231 = blocks[blocksOffset++] & 0xFF;\n        final long byte232 = blocks[blocksOffset++] & 0xFF;\n        final long byte233 = blocks[blocksOffset++] & 0xFF;\n        final long byte234 = blocks[blocksOffset++] & 0xFF;\n        final long byte235 = blocks[blocksOffset++] & 0xFF;\n        final long byte236 = blocks[blocksOffset++] & 0xFF;\n        values[valuesOffset++] = ((byte228 & 31) << 58) | (byte229 << 50) | (byte230 << 42) | (byte231 << 34) | (byte232 << 26) | (byte233 << 18) | (byte234 << 10) | (byte235 << 2) | (byte236 >>> 6);\n        final long byte237 = blocks[blocksOffset++] & 0xFF;\n        final long byte238 = blocks[blocksOffset++] & 0xFF;\n        final long byte239 = blocks[blocksOffset++] & 0xFF;\n        final long byte240 = blocks[blocksOffset++] & 0xFF;\n        final long byte241 = blocks[blocksOffset++] & 0xFF;\n        final long byte242 = blocks[blocksOffset++] & 0xFF;\n        final long byte243 = blocks[blocksOffset++] & 0xFF;\n        final long byte244 = blocks[blocksOffset++] & 0xFF;\n        values[valuesOffset++] = ((byte236 & 63) << 57) | (byte237 << 49) | (byte238 << 41) | (byte239 << 33) | (byte240 << 25) | (byte241 << 17) | (byte242 << 9) | (byte243 << 1) | (byte244 >>> 7);\n        final long byte245 = blocks[blocksOffset++] & 0xFF;\n        final long byte246 = blocks[blocksOffset++] & 0xFF;\n        final long byte247 = blocks[blocksOffset++] & 0xFF;\n        final long byte248 = blocks[blocksOffset++] & 0xFF;\n        final long byte249 = blocks[blocksOffset++] & 0xFF;\n        final long byte250 = blocks[blocksOffset++] & 0xFF;\n        final long byte251 = blocks[blocksOffset++] & 0xFF;\n        values[valuesOffset++] = ((byte244 & 127) << 56) | (byte245 << 48) | (byte246 << 40) | (byte247 << 32) | (byte248 << 24) | (byte249 << 16) | (byte250 << 8) | byte251;\n        final long byte252 = blocks[blocksOffset++] & 0xFF;\n        final long byte253 = blocks[blocksOffset++] & 0xFF;\n        final long byte254 = blocks[blocksOffset++] & 0xFF;\n        final long byte255 = blocks[blocksOffset++] & 0xFF;\n        final long byte256 = blocks[blocksOffset++] & 0xFF;\n        final long byte257 = blocks[blocksOffset++] & 0xFF;\n        final long byte258 = blocks[blocksOffset++] & 0xFF;\n        final long byte259 = blocks[blocksOffset++] & 0xFF;\n        values[valuesOffset++] = (byte252 << 55) | (byte253 << 47) | (byte254 << 39) | (byte255 << 31) | (byte256 << 23) | (byte257 << 15) | (byte258 << 7) | (byte259 >>> 1);\n        final long byte260 = blocks[blocksOffset++] & 0xFF;\n        final long byte261 = blocks[blocksOffset++] & 0xFF;\n        final long byte262 = blocks[blocksOffset++] & 0xFF;\n        final long byte263 = blocks[blocksOffset++] & 0xFF;\n        final long byte264 = blocks[blocksOffset++] & 0xFF;\n        final long byte265 = blocks[blocksOffset++] & 0xFF;\n        final long byte266 = blocks[blocksOffset++] & 0xFF;\n        final long byte267 = blocks[blocksOffset++] & 0xFF;\n        values[valuesOffset++] = ((byte259 & 1) << 62) | (byte260 << 54) | (byte261 << 46) | (byte262 << 38) | (byte263 << 30) | (byte264 << 22) | (byte265 << 14) | (byte266 << 6) | (byte267 >>> 2);\n        final long byte268 = blocks[blocksOffset++] & 0xFF;\n        final long byte269 = blocks[blocksOffset++] & 0xFF;\n        final long byte270 = blocks[blocksOffset++] & 0xFF;\n        final long byte271 = blocks[blocksOffset++] & 0xFF;\n        final long byte272 = blocks[blocksOffset++] & 0xFF;\n        final long byte273 = blocks[blocksOffset++] & 0xFF;\n        final long byte274 = blocks[blocksOffset++] & 0xFF;\n        final long byte275 = blocks[blocksOffset++] & 0xFF;\n        values[valuesOffset++] = ((byte267 & 3) << 61) | (byte268 << 53) | (byte269 << 45) | (byte270 << 37) | (byte271 << 29) | (byte272 << 21) | (byte273 << 13) | (byte274 << 5) | (byte275 >>> 3);\n        final long byte276 = blocks[blocksOffset++] & 0xFF;\n        final long byte277 = blocks[blocksOffset++] & 0xFF;\n        final long byte278 = blocks[blocksOffset++] & 0xFF;\n        final long byte279 = blocks[blocksOffset++] & 0xFF;\n        final long byte280 = blocks[blocksOffset++] & 0xFF;\n        final long byte281 = blocks[blocksOffset++] & 0xFF;\n        final long byte282 = blocks[blocksOffset++] & 0xFF;\n        final long byte283 = blocks[blocksOffset++] & 0xFF;\n        values[valuesOffset++] = ((byte275 & 7) << 60) | (byte276 << 52) | (byte277 << 44) | (byte278 << 36) | (byte279 << 28) | (byte280 << 20) | (byte281 << 12) | (byte282 << 4) | (byte283 >>> 4);\n        final long byte284 = blocks[blocksOffset++] & 0xFF;\n        final long byte285 = blocks[blocksOffset++] & 0xFF;\n        final long byte286 = blocks[blocksOffset++] & 0xFF;\n        final long byte287 = blocks[blocksOffset++] & 0xFF;\n        final long byte288 = blocks[blocksOffset++] & 0xFF;\n        final long byte289 = blocks[blocksOffset++] & 0xFF;\n        final long byte290 = blocks[blocksOffset++] & 0xFF;\n        final long byte291 = blocks[blocksOffset++] & 0xFF;\n        values[valuesOffset++] = ((byte283 & 15) << 59) | (byte284 << 51) | (byte285 << 43) | (byte286 << 35) | (byte287 << 27) | (byte288 << 19) | (byte289 << 11) | (byte290 << 3) | (byte291 >>> 5);\n        final long byte292 = blocks[blocksOffset++] & 0xFF;\n        final long byte293 = blocks[blocksOffset++] & 0xFF;\n        final long byte294 = blocks[blocksOffset++] & 0xFF;\n        final long byte295 = blocks[blocksOffset++] & 0xFF;\n        final long byte296 = blocks[blocksOffset++] & 0xFF;\n        final long byte297 = blocks[blocksOffset++] & 0xFF;\n        final long byte298 = blocks[blocksOffset++] & 0xFF;\n        final long byte299 = blocks[blocksOffset++] & 0xFF;\n        values[valuesOffset++] = ((byte291 & 31) << 58) | (byte292 << 50) | (byte293 << 42) | (byte294 << 34) | (byte295 << 26) | (byte296 << 18) | (byte297 << 10) | (byte298 << 2) | (byte299 >>> 6);\n        final long byte300 = blocks[blocksOffset++] & 0xFF;\n        final long byte301 = blocks[blocksOffset++] & 0xFF;\n        final long byte302 = blocks[blocksOffset++] & 0xFF;\n        final long byte303 = blocks[blocksOffset++] & 0xFF;\n        final long byte304 = blocks[blocksOffset++] & 0xFF;\n        final long byte305 = blocks[blocksOffset++] & 0xFF;\n        final long byte306 = blocks[blocksOffset++] & 0xFF;\n        final long byte307 = blocks[blocksOffset++] & 0xFF;\n        values[valuesOffset++] = ((byte299 & 63) << 57) | (byte300 << 49) | (byte301 << 41) | (byte302 << 33) | (byte303 << 25) | (byte304 << 17) | (byte305 << 9) | (byte306 << 1) | (byte307 >>> 7);\n        final long byte308 = blocks[blocksOffset++] & 0xFF;\n        final long byte309 = blocks[blocksOffset++] & 0xFF;\n        final long byte310 = blocks[blocksOffset++] & 0xFF;\n        final long byte311 = blocks[blocksOffset++] & 0xFF;\n        final long byte312 = blocks[blocksOffset++] & 0xFF;\n        final long byte313 = blocks[blocksOffset++] & 0xFF;\n        final long byte314 = blocks[blocksOffset++] & 0xFF;\n        values[valuesOffset++] = ((byte307 & 127) << 56) | (byte308 << 48) | (byte309 << 40) | (byte310 << 32) | (byte311 << 24) | (byte312 << 16) | (byte313 << 8) | byte314;\n        final long byte315 = blocks[blocksOffset++] & 0xFF;\n        final long byte316 = blocks[blocksOffset++] & 0xFF;\n        final long byte317 = blocks[blocksOffset++] & 0xFF;\n        final long byte318 = blocks[blocksOffset++] & 0xFF;\n        final long byte319 = blocks[blocksOffset++] & 0xFF;\n        final long byte320 = blocks[blocksOffset++] & 0xFF;\n        final long byte321 = blocks[blocksOffset++] & 0xFF;\n        final long byte322 = blocks[blocksOffset++] & 0xFF;\n        values[valuesOffset++] = (byte315 << 55) | (byte316 << 47) | (byte317 << 39) | (byte318 << 31) | (byte319 << 23) | (byte320 << 15) | (byte321 << 7) | (byte322 >>> 1);\n        final long byte323 = blocks[blocksOffset++] & 0xFF;\n        final long byte324 = blocks[blocksOffset++] & 0xFF;\n        final long byte325 = blocks[blocksOffset++] & 0xFF;\n        final long byte326 = blocks[blocksOffset++] & 0xFF;\n        final long byte327 = blocks[blocksOffset++] & 0xFF;\n        final long byte328 = blocks[blocksOffset++] & 0xFF;\n        final long byte329 = blocks[blocksOffset++] & 0xFF;\n        final long byte330 = blocks[blocksOffset++] & 0xFF;\n        values[valuesOffset++] = ((byte322 & 1) << 62) | (byte323 << 54) | (byte324 << 46) | (byte325 << 38) | (byte326 << 30) | (byte327 << 22) | (byte328 << 14) | (byte329 << 6) | (byte330 >>> 2);\n        final long byte331 = blocks[blocksOffset++] & 0xFF;\n        final long byte332 = blocks[blocksOffset++] & 0xFF;\n        final long byte333 = blocks[blocksOffset++] & 0xFF;\n        final long byte334 = blocks[blocksOffset++] & 0xFF;\n        final long byte335 = blocks[blocksOffset++] & 0xFF;\n        final long byte336 = blocks[blocksOffset++] & 0xFF;\n        final long byte337 = blocks[blocksOffset++] & 0xFF;\n        final long byte338 = blocks[blocksOffset++] & 0xFF;\n        values[valuesOffset++] = ((byte330 & 3) << 61) | (byte331 << 53) | (byte332 << 45) | (byte333 << 37) | (byte334 << 29) | (byte335 << 21) | (byte336 << 13) | (byte337 << 5) | (byte338 >>> 3);\n        final long byte339 = blocks[blocksOffset++] & 0xFF;\n        final long byte340 = blocks[blocksOffset++] & 0xFF;\n        final long byte341 = blocks[blocksOffset++] & 0xFF;\n        final long byte342 = blocks[blocksOffset++] & 0xFF;\n        final long byte343 = blocks[blocksOffset++] & 0xFF;\n        final long byte344 = blocks[blocksOffset++] & 0xFF;\n        final long byte345 = blocks[blocksOffset++] & 0xFF;\n        final long byte346 = blocks[blocksOffset++] & 0xFF;\n        values[valuesOffset++] = ((byte338 & 7) << 60) | (byte339 << 52) | (byte340 << 44) | (byte341 << 36) | (byte342 << 28) | (byte343 << 20) | (byte344 << 12) | (byte345 << 4) | (byte346 >>> 4);\n        final long byte347 = blocks[blocksOffset++] & 0xFF;\n        final long byte348 = blocks[blocksOffset++] & 0xFF;\n        final long byte349 = blocks[blocksOffset++] & 0xFF;\n        final long byte350 = blocks[blocksOffset++] & 0xFF;\n        final long byte351 = blocks[blocksOffset++] & 0xFF;\n        final long byte352 = blocks[blocksOffset++] & 0xFF;\n        final long byte353 = blocks[blocksOffset++] & 0xFF;\n        final long byte354 = blocks[blocksOffset++] & 0xFF;\n        values[valuesOffset++] = ((byte346 & 15) << 59) | (byte347 << 51) | (byte348 << 43) | (byte349 << 35) | (byte350 << 27) | (byte351 << 19) | (byte352 << 11) | (byte353 << 3) | (byte354 >>> 5);\n        final long byte355 = blocks[blocksOffset++] & 0xFF;\n        final long byte356 = blocks[blocksOffset++] & 0xFF;\n        final long byte357 = blocks[blocksOffset++] & 0xFF;\n        final long byte358 = blocks[blocksOffset++] & 0xFF;\n        final long byte359 = blocks[blocksOffset++] & 0xFF;\n        final long byte360 = blocks[blocksOffset++] & 0xFF;\n        final long byte361 = blocks[blocksOffset++] & 0xFF;\n        final long byte362 = blocks[blocksOffset++] & 0xFF;\n        values[valuesOffset++] = ((byte354 & 31) << 58) | (byte355 << 50) | (byte356 << 42) | (byte357 << 34) | (byte358 << 26) | (byte359 << 18) | (byte360 << 10) | (byte361 << 2) | (byte362 >>> 6);\n        final long byte363 = blocks[blocksOffset++] & 0xFF;\n        final long byte364 = blocks[blocksOffset++] & 0xFF;\n        final long byte365 = blocks[blocksOffset++] & 0xFF;\n        final long byte366 = blocks[blocksOffset++] & 0xFF;\n        final long byte367 = blocks[blocksOffset++] & 0xFF;\n        final long byte368 = blocks[blocksOffset++] & 0xFF;\n        final long byte369 = blocks[blocksOffset++] & 0xFF;\n        final long byte370 = blocks[blocksOffset++] & 0xFF;\n        values[valuesOffset++] = ((byte362 & 63) << 57) | (byte363 << 49) | (byte364 << 41) | (byte365 << 33) | (byte366 << 25) | (byte367 << 17) | (byte368 << 9) | (byte369 << 1) | (byte370 >>> 7);\n        final long byte371 = blocks[blocksOffset++] & 0xFF;\n        final long byte372 = blocks[blocksOffset++] & 0xFF;\n        final long byte373 = blocks[blocksOffset++] & 0xFF;\n        final long byte374 = blocks[blocksOffset++] & 0xFF;\n        final long byte375 = blocks[blocksOffset++] & 0xFF;\n        final long byte376 = blocks[blocksOffset++] & 0xFF;\n        final long byte377 = blocks[blocksOffset++] & 0xFF;\n        values[valuesOffset++] = ((byte370 & 127) << 56) | (byte371 << 48) | (byte372 << 40) | (byte373 << 32) | (byte374 << 24) | (byte375 << 16) | (byte376 << 8) | byte377;\n        final long byte378 = blocks[blocksOffset++] & 0xFF;\n        final long byte379 = blocks[blocksOffset++] & 0xFF;\n        final long byte380 = blocks[blocksOffset++] & 0xFF;\n        final long byte381 = blocks[blocksOffset++] & 0xFF;\n        final long byte382 = blocks[blocksOffset++] & 0xFF;\n        final long byte383 = blocks[blocksOffset++] & 0xFF;\n        final long byte384 = blocks[blocksOffset++] & 0xFF;\n        final long byte385 = blocks[blocksOffset++] & 0xFF;\n        values[valuesOffset++] = (byte378 << 55) | (byte379 << 47) | (byte380 << 39) | (byte381 << 31) | (byte382 << 23) | (byte383 << 15) | (byte384 << 7) | (byte385 >>> 1);\n        final long byte386 = blocks[blocksOffset++] & 0xFF;\n        final long byte387 = blocks[blocksOffset++] & 0xFF;\n        final long byte388 = blocks[blocksOffset++] & 0xFF;\n        final long byte389 = blocks[blocksOffset++] & 0xFF;\n        final long byte390 = blocks[blocksOffset++] & 0xFF;\n        final long byte391 = blocks[blocksOffset++] & 0xFF;\n        final long byte392 = blocks[blocksOffset++] & 0xFF;\n        final long byte393 = blocks[blocksOffset++] & 0xFF;\n        values[valuesOffset++] = ((byte385 & 1) << 62) | (byte386 << 54) | (byte387 << 46) | (byte388 << 38) | (byte389 << 30) | (byte390 << 22) | (byte391 << 14) | (byte392 << 6) | (byte393 >>> 2);\n        final long byte394 = blocks[blocksOffset++] & 0xFF;\n        final long byte395 = blocks[blocksOffset++] & 0xFF;\n        final long byte396 = blocks[blocksOffset++] & 0xFF;\n        final long byte397 = blocks[blocksOffset++] & 0xFF;\n        final long byte398 = blocks[blocksOffset++] & 0xFF;\n        final long byte399 = blocks[blocksOffset++] & 0xFF;\n        final long byte400 = blocks[blocksOffset++] & 0xFF;\n        final long byte401 = blocks[blocksOffset++] & 0xFF;\n        values[valuesOffset++] = ((byte393 & 3) << 61) | (byte394 << 53) | (byte395 << 45) | (byte396 << 37) | (byte397 << 29) | (byte398 << 21) | (byte399 << 13) | (byte400 << 5) | (byte401 >>> 3);\n        final long byte402 = blocks[blocksOffset++] & 0xFF;\n        final long byte403 = blocks[blocksOffset++] & 0xFF;\n        final long byte404 = blocks[blocksOffset++] & 0xFF;\n        final long byte405 = blocks[blocksOffset++] & 0xFF;\n        final long byte406 = blocks[blocksOffset++] & 0xFF;\n        final long byte407 = blocks[blocksOffset++] & 0xFF;\n        final long byte408 = blocks[blocksOffset++] & 0xFF;\n        final long byte409 = blocks[blocksOffset++] & 0xFF;\n        values[valuesOffset++] = ((byte401 & 7) << 60) | (byte402 << 52) | (byte403 << 44) | (byte404 << 36) | (byte405 << 28) | (byte406 << 20) | (byte407 << 12) | (byte408 << 4) | (byte409 >>> 4);\n        final long byte410 = blocks[blocksOffset++] & 0xFF;\n        final long byte411 = blocks[blocksOffset++] & 0xFF;\n        final long byte412 = blocks[blocksOffset++] & 0xFF;\n        final long byte413 = blocks[blocksOffset++] & 0xFF;\n        final long byte414 = blocks[blocksOffset++] & 0xFF;\n        final long byte415 = blocks[blocksOffset++] & 0xFF;\n        final long byte416 = blocks[blocksOffset++] & 0xFF;\n        final long byte417 = blocks[blocksOffset++] & 0xFF;\n        values[valuesOffset++] = ((byte409 & 15) << 59) | (byte410 << 51) | (byte411 << 43) | (byte412 << 35) | (byte413 << 27) | (byte414 << 19) | (byte415 << 11) | (byte416 << 3) | (byte417 >>> 5);\n        final long byte418 = blocks[blocksOffset++] & 0xFF;\n        final long byte419 = blocks[blocksOffset++] & 0xFF;\n        final long byte420 = blocks[blocksOffset++] & 0xFF;\n        final long byte421 = blocks[blocksOffset++] & 0xFF;\n        final long byte422 = blocks[blocksOffset++] & 0xFF;\n        final long byte423 = blocks[blocksOffset++] & 0xFF;\n        final long byte424 = blocks[blocksOffset++] & 0xFF;\n        final long byte425 = blocks[blocksOffset++] & 0xFF;\n        values[valuesOffset++] = ((byte417 & 31) << 58) | (byte418 << 50) | (byte419 << 42) | (byte420 << 34) | (byte421 << 26) | (byte422 << 18) | (byte423 << 10) | (byte424 << 2) | (byte425 >>> 6);\n        final long byte426 = blocks[blocksOffset++] & 0xFF;\n        final long byte427 = blocks[blocksOffset++] & 0xFF;\n        final long byte428 = blocks[blocksOffset++] & 0xFF;\n        final long byte429 = blocks[blocksOffset++] & 0xFF;\n        final long byte430 = blocks[blocksOffset++] & 0xFF;\n        final long byte431 = blocks[blocksOffset++] & 0xFF;\n        final long byte432 = blocks[blocksOffset++] & 0xFF;\n        final long byte433 = blocks[blocksOffset++] & 0xFF;\n        values[valuesOffset++] = ((byte425 & 63) << 57) | (byte426 << 49) | (byte427 << 41) | (byte428 << 33) | (byte429 << 25) | (byte430 << 17) | (byte431 << 9) | (byte432 << 1) | (byte433 >>> 7);\n        final long byte434 = blocks[blocksOffset++] & 0xFF;\n        final long byte435 = blocks[blocksOffset++] & 0xFF;\n        final long byte436 = blocks[blocksOffset++] & 0xFF;\n        final long byte437 = blocks[blocksOffset++] & 0xFF;\n        final long byte438 = blocks[blocksOffset++] & 0xFF;\n        final long byte439 = blocks[blocksOffset++] & 0xFF;\n        final long byte440 = blocks[blocksOffset++] & 0xFF;\n        values[valuesOffset++] = ((byte433 & 127) << 56) | (byte434 << 48) | (byte435 << 40) | (byte436 << 32) | (byte437 << 24) | (byte438 << 16) | (byte439 << 8) | byte440;\n        final long byte441 = blocks[blocksOffset++] & 0xFF;\n        final long byte442 = blocks[blocksOffset++] & 0xFF;\n        final long byte443 = blocks[blocksOffset++] & 0xFF;\n        final long byte444 = blocks[blocksOffset++] & 0xFF;\n        final long byte445 = blocks[blocksOffset++] & 0xFF;\n        final long byte446 = blocks[blocksOffset++] & 0xFF;\n        final long byte447 = blocks[blocksOffset++] & 0xFF;\n        final long byte448 = blocks[blocksOffset++] & 0xFF;\n        values[valuesOffset++] = (byte441 << 55) | (byte442 << 47) | (byte443 << 39) | (byte444 << 31) | (byte445 << 23) | (byte446 << 15) | (byte447 << 7) | (byte448 >>> 1);\n        final long byte449 = blocks[blocksOffset++] & 0xFF;\n        final long byte450 = blocks[blocksOffset++] & 0xFF;\n        final long byte451 = blocks[blocksOffset++] & 0xFF;\n        final long byte452 = blocks[blocksOffset++] & 0xFF;\n        final long byte453 = blocks[blocksOffset++] & 0xFF;\n        final long byte454 = blocks[blocksOffset++] & 0xFF;\n        final long byte455 = blocks[blocksOffset++] & 0xFF;\n        final long byte456 = blocks[blocksOffset++] & 0xFF;\n        values[valuesOffset++] = ((byte448 & 1) << 62) | (byte449 << 54) | (byte450 << 46) | (byte451 << 38) | (byte452 << 30) | (byte453 << 22) | (byte454 << 14) | (byte455 << 6) | (byte456 >>> 2);\n        final long byte457 = blocks[blocksOffset++] & 0xFF;\n        final long byte458 = blocks[blocksOffset++] & 0xFF;\n        final long byte459 = blocks[blocksOffset++] & 0xFF;\n        final long byte460 = blocks[blocksOffset++] & 0xFF;\n        final long byte461 = blocks[blocksOffset++] & 0xFF;\n        final long byte462 = blocks[blocksOffset++] & 0xFF;\n        final long byte463 = blocks[blocksOffset++] & 0xFF;\n        final long byte464 = blocks[blocksOffset++] & 0xFF;\n        values[valuesOffset++] = ((byte456 & 3) << 61) | (byte457 << 53) | (byte458 << 45) | (byte459 << 37) | (byte460 << 29) | (byte461 << 21) | (byte462 << 13) | (byte463 << 5) | (byte464 >>> 3);\n        final long byte465 = blocks[blocksOffset++] & 0xFF;\n        final long byte466 = blocks[blocksOffset++] & 0xFF;\n        final long byte467 = blocks[blocksOffset++] & 0xFF;\n        final long byte468 = blocks[blocksOffset++] & 0xFF;\n        final long byte469 = blocks[blocksOffset++] & 0xFF;\n        final long byte470 = blocks[blocksOffset++] & 0xFF;\n        final long byte471 = blocks[blocksOffset++] & 0xFF;\n        final long byte472 = blocks[blocksOffset++] & 0xFF;\n        values[valuesOffset++] = ((byte464 & 7) << 60) | (byte465 << 52) | (byte466 << 44) | (byte467 << 36) | (byte468 << 28) | (byte469 << 20) | (byte470 << 12) | (byte471 << 4) | (byte472 >>> 4);\n        final long byte473 = blocks[blocksOffset++] & 0xFF;\n        final long byte474 = blocks[blocksOffset++] & 0xFF;\n        final long byte475 = blocks[blocksOffset++] & 0xFF;\n        final long byte476 = blocks[blocksOffset++] & 0xFF;\n        final long byte477 = blocks[blocksOffset++] & 0xFF;\n        final long byte478 = blocks[blocksOffset++] & 0xFF;\n        final long byte479 = blocks[blocksOffset++] & 0xFF;\n        final long byte480 = blocks[blocksOffset++] & 0xFF;\n        values[valuesOffset++] = ((byte472 & 15) << 59) | (byte473 << 51) | (byte474 << 43) | (byte475 << 35) | (byte476 << 27) | (byte477 << 19) | (byte478 << 11) | (byte479 << 3) | (byte480 >>> 5);\n        final long byte481 = blocks[blocksOffset++] & 0xFF;\n        final long byte482 = blocks[blocksOffset++] & 0xFF;\n        final long byte483 = blocks[blocksOffset++] & 0xFF;\n        final long byte484 = blocks[blocksOffset++] & 0xFF;\n        final long byte485 = blocks[blocksOffset++] & 0xFF;\n        final long byte486 = blocks[blocksOffset++] & 0xFF;\n        final long byte487 = blocks[blocksOffset++] & 0xFF;\n        final long byte488 = blocks[blocksOffset++] & 0xFF;\n        values[valuesOffset++] = ((byte480 & 31) << 58) | (byte481 << 50) | (byte482 << 42) | (byte483 << 34) | (byte484 << 26) | (byte485 << 18) | (byte486 << 10) | (byte487 << 2) | (byte488 >>> 6);\n        final long byte489 = blocks[blocksOffset++] & 0xFF;\n        final long byte490 = blocks[blocksOffset++] & 0xFF;\n        final long byte491 = blocks[blocksOffset++] & 0xFF;\n        final long byte492 = blocks[blocksOffset++] & 0xFF;\n        final long byte493 = blocks[blocksOffset++] & 0xFF;\n        final long byte494 = blocks[blocksOffset++] & 0xFF;\n        final long byte495 = blocks[blocksOffset++] & 0xFF;\n        final long byte496 = blocks[blocksOffset++] & 0xFF;\n        values[valuesOffset++] = ((byte488 & 63) << 57) | (byte489 << 49) | (byte490 << 41) | (byte491 << 33) | (byte492 << 25) | (byte493 << 17) | (byte494 << 9) | (byte495 << 1) | (byte496 >>> 7);\n        final long byte497 = blocks[blocksOffset++] & 0xFF;\n        final long byte498 = blocks[blocksOffset++] & 0xFF;\n        final long byte499 = blocks[blocksOffset++] & 0xFF;\n        final long byte500 = blocks[blocksOffset++] & 0xFF;\n        final long byte501 = blocks[blocksOffset++] & 0xFF;\n        final long byte502 = blocks[blocksOffset++] & 0xFF;\n        final long byte503 = blocks[blocksOffset++] & 0xFF;\n        values[valuesOffset++] = ((byte496 & 127) << 56) | (byte497 << 48) | (byte498 << 40) | (byte499 << 32) | (byte500 << 24) | (byte501 << 16) | (byte502 << 8) | byte503;\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"05a14b2611ead08655a2b2bdc61632eb31316e57","date":1346366621,"type":4,"author":"Uwe Schindler","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/util/packed/BulkOperationPacked63#decode(byte[],int,long[],int,int).mjava","sourceNew":null,"sourceOld":"    @Override\n    public void decode(byte[] blocks, int blocksOffset, long[] values, int valuesOffset, int iterations) {\n      assert blocksOffset + 8 * iterations * blockCount() <= blocks.length;\n      assert valuesOffset + iterations * valueCount() <= values.length;\n      for (int i = 0; i < iterations; ++i) {\n        final long byte0 = blocks[blocksOffset++] & 0xFF;\n        final long byte1 = blocks[blocksOffset++] & 0xFF;\n        final long byte2 = blocks[blocksOffset++] & 0xFF;\n        final long byte3 = blocks[blocksOffset++] & 0xFF;\n        final long byte4 = blocks[blocksOffset++] & 0xFF;\n        final long byte5 = blocks[blocksOffset++] & 0xFF;\n        final long byte6 = blocks[blocksOffset++] & 0xFF;\n        final long byte7 = blocks[blocksOffset++] & 0xFF;\n        values[valuesOffset++] = (byte0 << 55) | (byte1 << 47) | (byte2 << 39) | (byte3 << 31) | (byte4 << 23) | (byte5 << 15) | (byte6 << 7) | (byte7 >>> 1);\n        final long byte8 = blocks[blocksOffset++] & 0xFF;\n        final long byte9 = blocks[blocksOffset++] & 0xFF;\n        final long byte10 = blocks[blocksOffset++] & 0xFF;\n        final long byte11 = blocks[blocksOffset++] & 0xFF;\n        final long byte12 = blocks[blocksOffset++] & 0xFF;\n        final long byte13 = blocks[blocksOffset++] & 0xFF;\n        final long byte14 = blocks[blocksOffset++] & 0xFF;\n        final long byte15 = blocks[blocksOffset++] & 0xFF;\n        values[valuesOffset++] = ((byte7 & 1) << 62) | (byte8 << 54) | (byte9 << 46) | (byte10 << 38) | (byte11 << 30) | (byte12 << 22) | (byte13 << 14) | (byte14 << 6) | (byte15 >>> 2);\n        final long byte16 = blocks[blocksOffset++] & 0xFF;\n        final long byte17 = blocks[blocksOffset++] & 0xFF;\n        final long byte18 = blocks[blocksOffset++] & 0xFF;\n        final long byte19 = blocks[blocksOffset++] & 0xFF;\n        final long byte20 = blocks[blocksOffset++] & 0xFF;\n        final long byte21 = blocks[blocksOffset++] & 0xFF;\n        final long byte22 = blocks[blocksOffset++] & 0xFF;\n        final long byte23 = blocks[blocksOffset++] & 0xFF;\n        values[valuesOffset++] = ((byte15 & 3) << 61) | (byte16 << 53) | (byte17 << 45) | (byte18 << 37) | (byte19 << 29) | (byte20 << 21) | (byte21 << 13) | (byte22 << 5) | (byte23 >>> 3);\n        final long byte24 = blocks[blocksOffset++] & 0xFF;\n        final long byte25 = blocks[blocksOffset++] & 0xFF;\n        final long byte26 = blocks[blocksOffset++] & 0xFF;\n        final long byte27 = blocks[blocksOffset++] & 0xFF;\n        final long byte28 = blocks[blocksOffset++] & 0xFF;\n        final long byte29 = blocks[blocksOffset++] & 0xFF;\n        final long byte30 = blocks[blocksOffset++] & 0xFF;\n        final long byte31 = blocks[blocksOffset++] & 0xFF;\n        values[valuesOffset++] = ((byte23 & 7) << 60) | (byte24 << 52) | (byte25 << 44) | (byte26 << 36) | (byte27 << 28) | (byte28 << 20) | (byte29 << 12) | (byte30 << 4) | (byte31 >>> 4);\n        final long byte32 = blocks[blocksOffset++] & 0xFF;\n        final long byte33 = blocks[blocksOffset++] & 0xFF;\n        final long byte34 = blocks[blocksOffset++] & 0xFF;\n        final long byte35 = blocks[blocksOffset++] & 0xFF;\n        final long byte36 = blocks[blocksOffset++] & 0xFF;\n        final long byte37 = blocks[blocksOffset++] & 0xFF;\n        final long byte38 = blocks[blocksOffset++] & 0xFF;\n        final long byte39 = blocks[blocksOffset++] & 0xFF;\n        values[valuesOffset++] = ((byte31 & 15) << 59) | (byte32 << 51) | (byte33 << 43) | (byte34 << 35) | (byte35 << 27) | (byte36 << 19) | (byte37 << 11) | (byte38 << 3) | (byte39 >>> 5);\n        final long byte40 = blocks[blocksOffset++] & 0xFF;\n        final long byte41 = blocks[blocksOffset++] & 0xFF;\n        final long byte42 = blocks[blocksOffset++] & 0xFF;\n        final long byte43 = blocks[blocksOffset++] & 0xFF;\n        final long byte44 = blocks[blocksOffset++] & 0xFF;\n        final long byte45 = blocks[blocksOffset++] & 0xFF;\n        final long byte46 = blocks[blocksOffset++] & 0xFF;\n        final long byte47 = blocks[blocksOffset++] & 0xFF;\n        values[valuesOffset++] = ((byte39 & 31) << 58) | (byte40 << 50) | (byte41 << 42) | (byte42 << 34) | (byte43 << 26) | (byte44 << 18) | (byte45 << 10) | (byte46 << 2) | (byte47 >>> 6);\n        final long byte48 = blocks[blocksOffset++] & 0xFF;\n        final long byte49 = blocks[blocksOffset++] & 0xFF;\n        final long byte50 = blocks[blocksOffset++] & 0xFF;\n        final long byte51 = blocks[blocksOffset++] & 0xFF;\n        final long byte52 = blocks[blocksOffset++] & 0xFF;\n        final long byte53 = blocks[blocksOffset++] & 0xFF;\n        final long byte54 = blocks[blocksOffset++] & 0xFF;\n        final long byte55 = blocks[blocksOffset++] & 0xFF;\n        values[valuesOffset++] = ((byte47 & 63) << 57) | (byte48 << 49) | (byte49 << 41) | (byte50 << 33) | (byte51 << 25) | (byte52 << 17) | (byte53 << 9) | (byte54 << 1) | (byte55 >>> 7);\n        final long byte56 = blocks[blocksOffset++] & 0xFF;\n        final long byte57 = blocks[blocksOffset++] & 0xFF;\n        final long byte58 = blocks[blocksOffset++] & 0xFF;\n        final long byte59 = blocks[blocksOffset++] & 0xFF;\n        final long byte60 = blocks[blocksOffset++] & 0xFF;\n        final long byte61 = blocks[blocksOffset++] & 0xFF;\n        final long byte62 = blocks[blocksOffset++] & 0xFF;\n        values[valuesOffset++] = ((byte55 & 127) << 56) | (byte56 << 48) | (byte57 << 40) | (byte58 << 32) | (byte59 << 24) | (byte60 << 16) | (byte61 << 8) | byte62;\n        final long byte63 = blocks[blocksOffset++] & 0xFF;\n        final long byte64 = blocks[blocksOffset++] & 0xFF;\n        final long byte65 = blocks[blocksOffset++] & 0xFF;\n        final long byte66 = blocks[blocksOffset++] & 0xFF;\n        final long byte67 = blocks[blocksOffset++] & 0xFF;\n        final long byte68 = blocks[blocksOffset++] & 0xFF;\n        final long byte69 = blocks[blocksOffset++] & 0xFF;\n        final long byte70 = blocks[blocksOffset++] & 0xFF;\n        values[valuesOffset++] = (byte63 << 55) | (byte64 << 47) | (byte65 << 39) | (byte66 << 31) | (byte67 << 23) | (byte68 << 15) | (byte69 << 7) | (byte70 >>> 1);\n        final long byte71 = blocks[blocksOffset++] & 0xFF;\n        final long byte72 = blocks[blocksOffset++] & 0xFF;\n        final long byte73 = blocks[blocksOffset++] & 0xFF;\n        final long byte74 = blocks[blocksOffset++] & 0xFF;\n        final long byte75 = blocks[blocksOffset++] & 0xFF;\n        final long byte76 = blocks[blocksOffset++] & 0xFF;\n        final long byte77 = blocks[blocksOffset++] & 0xFF;\n        final long byte78 = blocks[blocksOffset++] & 0xFF;\n        values[valuesOffset++] = ((byte70 & 1) << 62) | (byte71 << 54) | (byte72 << 46) | (byte73 << 38) | (byte74 << 30) | (byte75 << 22) | (byte76 << 14) | (byte77 << 6) | (byte78 >>> 2);\n        final long byte79 = blocks[blocksOffset++] & 0xFF;\n        final long byte80 = blocks[blocksOffset++] & 0xFF;\n        final long byte81 = blocks[blocksOffset++] & 0xFF;\n        final long byte82 = blocks[blocksOffset++] & 0xFF;\n        final long byte83 = blocks[blocksOffset++] & 0xFF;\n        final long byte84 = blocks[blocksOffset++] & 0xFF;\n        final long byte85 = blocks[blocksOffset++] & 0xFF;\n        final long byte86 = blocks[blocksOffset++] & 0xFF;\n        values[valuesOffset++] = ((byte78 & 3) << 61) | (byte79 << 53) | (byte80 << 45) | (byte81 << 37) | (byte82 << 29) | (byte83 << 21) | (byte84 << 13) | (byte85 << 5) | (byte86 >>> 3);\n        final long byte87 = blocks[blocksOffset++] & 0xFF;\n        final long byte88 = blocks[blocksOffset++] & 0xFF;\n        final long byte89 = blocks[blocksOffset++] & 0xFF;\n        final long byte90 = blocks[blocksOffset++] & 0xFF;\n        final long byte91 = blocks[blocksOffset++] & 0xFF;\n        final long byte92 = blocks[blocksOffset++] & 0xFF;\n        final long byte93 = blocks[blocksOffset++] & 0xFF;\n        final long byte94 = blocks[blocksOffset++] & 0xFF;\n        values[valuesOffset++] = ((byte86 & 7) << 60) | (byte87 << 52) | (byte88 << 44) | (byte89 << 36) | (byte90 << 28) | (byte91 << 20) | (byte92 << 12) | (byte93 << 4) | (byte94 >>> 4);\n        final long byte95 = blocks[blocksOffset++] & 0xFF;\n        final long byte96 = blocks[blocksOffset++] & 0xFF;\n        final long byte97 = blocks[blocksOffset++] & 0xFF;\n        final long byte98 = blocks[blocksOffset++] & 0xFF;\n        final long byte99 = blocks[blocksOffset++] & 0xFF;\n        final long byte100 = blocks[blocksOffset++] & 0xFF;\n        final long byte101 = blocks[blocksOffset++] & 0xFF;\n        final long byte102 = blocks[blocksOffset++] & 0xFF;\n        values[valuesOffset++] = ((byte94 & 15) << 59) | (byte95 << 51) | (byte96 << 43) | (byte97 << 35) | (byte98 << 27) | (byte99 << 19) | (byte100 << 11) | (byte101 << 3) | (byte102 >>> 5);\n        final long byte103 = blocks[blocksOffset++] & 0xFF;\n        final long byte104 = blocks[blocksOffset++] & 0xFF;\n        final long byte105 = blocks[blocksOffset++] & 0xFF;\n        final long byte106 = blocks[blocksOffset++] & 0xFF;\n        final long byte107 = blocks[blocksOffset++] & 0xFF;\n        final long byte108 = blocks[blocksOffset++] & 0xFF;\n        final long byte109 = blocks[blocksOffset++] & 0xFF;\n        final long byte110 = blocks[blocksOffset++] & 0xFF;\n        values[valuesOffset++] = ((byte102 & 31) << 58) | (byte103 << 50) | (byte104 << 42) | (byte105 << 34) | (byte106 << 26) | (byte107 << 18) | (byte108 << 10) | (byte109 << 2) | (byte110 >>> 6);\n        final long byte111 = blocks[blocksOffset++] & 0xFF;\n        final long byte112 = blocks[blocksOffset++] & 0xFF;\n        final long byte113 = blocks[blocksOffset++] & 0xFF;\n        final long byte114 = blocks[blocksOffset++] & 0xFF;\n        final long byte115 = blocks[blocksOffset++] & 0xFF;\n        final long byte116 = blocks[blocksOffset++] & 0xFF;\n        final long byte117 = blocks[blocksOffset++] & 0xFF;\n        final long byte118 = blocks[blocksOffset++] & 0xFF;\n        values[valuesOffset++] = ((byte110 & 63) << 57) | (byte111 << 49) | (byte112 << 41) | (byte113 << 33) | (byte114 << 25) | (byte115 << 17) | (byte116 << 9) | (byte117 << 1) | (byte118 >>> 7);\n        final long byte119 = blocks[blocksOffset++] & 0xFF;\n        final long byte120 = blocks[blocksOffset++] & 0xFF;\n        final long byte121 = blocks[blocksOffset++] & 0xFF;\n        final long byte122 = blocks[blocksOffset++] & 0xFF;\n        final long byte123 = blocks[blocksOffset++] & 0xFF;\n        final long byte124 = blocks[blocksOffset++] & 0xFF;\n        final long byte125 = blocks[blocksOffset++] & 0xFF;\n        values[valuesOffset++] = ((byte118 & 127) << 56) | (byte119 << 48) | (byte120 << 40) | (byte121 << 32) | (byte122 << 24) | (byte123 << 16) | (byte124 << 8) | byte125;\n        final long byte126 = blocks[blocksOffset++] & 0xFF;\n        final long byte127 = blocks[blocksOffset++] & 0xFF;\n        final long byte128 = blocks[blocksOffset++] & 0xFF;\n        final long byte129 = blocks[blocksOffset++] & 0xFF;\n        final long byte130 = blocks[blocksOffset++] & 0xFF;\n        final long byte131 = blocks[blocksOffset++] & 0xFF;\n        final long byte132 = blocks[blocksOffset++] & 0xFF;\n        final long byte133 = blocks[blocksOffset++] & 0xFF;\n        values[valuesOffset++] = (byte126 << 55) | (byte127 << 47) | (byte128 << 39) | (byte129 << 31) | (byte130 << 23) | (byte131 << 15) | (byte132 << 7) | (byte133 >>> 1);\n        final long byte134 = blocks[blocksOffset++] & 0xFF;\n        final long byte135 = blocks[blocksOffset++] & 0xFF;\n        final long byte136 = blocks[blocksOffset++] & 0xFF;\n        final long byte137 = blocks[blocksOffset++] & 0xFF;\n        final long byte138 = blocks[blocksOffset++] & 0xFF;\n        final long byte139 = blocks[blocksOffset++] & 0xFF;\n        final long byte140 = blocks[blocksOffset++] & 0xFF;\n        final long byte141 = blocks[blocksOffset++] & 0xFF;\n        values[valuesOffset++] = ((byte133 & 1) << 62) | (byte134 << 54) | (byte135 << 46) | (byte136 << 38) | (byte137 << 30) | (byte138 << 22) | (byte139 << 14) | (byte140 << 6) | (byte141 >>> 2);\n        final long byte142 = blocks[blocksOffset++] & 0xFF;\n        final long byte143 = blocks[blocksOffset++] & 0xFF;\n        final long byte144 = blocks[blocksOffset++] & 0xFF;\n        final long byte145 = blocks[blocksOffset++] & 0xFF;\n        final long byte146 = blocks[blocksOffset++] & 0xFF;\n        final long byte147 = blocks[blocksOffset++] & 0xFF;\n        final long byte148 = blocks[blocksOffset++] & 0xFF;\n        final long byte149 = blocks[blocksOffset++] & 0xFF;\n        values[valuesOffset++] = ((byte141 & 3) << 61) | (byte142 << 53) | (byte143 << 45) | (byte144 << 37) | (byte145 << 29) | (byte146 << 21) | (byte147 << 13) | (byte148 << 5) | (byte149 >>> 3);\n        final long byte150 = blocks[blocksOffset++] & 0xFF;\n        final long byte151 = blocks[blocksOffset++] & 0xFF;\n        final long byte152 = blocks[blocksOffset++] & 0xFF;\n        final long byte153 = blocks[blocksOffset++] & 0xFF;\n        final long byte154 = blocks[blocksOffset++] & 0xFF;\n        final long byte155 = blocks[blocksOffset++] & 0xFF;\n        final long byte156 = blocks[blocksOffset++] & 0xFF;\n        final long byte157 = blocks[blocksOffset++] & 0xFF;\n        values[valuesOffset++] = ((byte149 & 7) << 60) | (byte150 << 52) | (byte151 << 44) | (byte152 << 36) | (byte153 << 28) | (byte154 << 20) | (byte155 << 12) | (byte156 << 4) | (byte157 >>> 4);\n        final long byte158 = blocks[blocksOffset++] & 0xFF;\n        final long byte159 = blocks[blocksOffset++] & 0xFF;\n        final long byte160 = blocks[blocksOffset++] & 0xFF;\n        final long byte161 = blocks[blocksOffset++] & 0xFF;\n        final long byte162 = blocks[blocksOffset++] & 0xFF;\n        final long byte163 = blocks[blocksOffset++] & 0xFF;\n        final long byte164 = blocks[blocksOffset++] & 0xFF;\n        final long byte165 = blocks[blocksOffset++] & 0xFF;\n        values[valuesOffset++] = ((byte157 & 15) << 59) | (byte158 << 51) | (byte159 << 43) | (byte160 << 35) | (byte161 << 27) | (byte162 << 19) | (byte163 << 11) | (byte164 << 3) | (byte165 >>> 5);\n        final long byte166 = blocks[blocksOffset++] & 0xFF;\n        final long byte167 = blocks[blocksOffset++] & 0xFF;\n        final long byte168 = blocks[blocksOffset++] & 0xFF;\n        final long byte169 = blocks[blocksOffset++] & 0xFF;\n        final long byte170 = blocks[blocksOffset++] & 0xFF;\n        final long byte171 = blocks[blocksOffset++] & 0xFF;\n        final long byte172 = blocks[blocksOffset++] & 0xFF;\n        final long byte173 = blocks[blocksOffset++] & 0xFF;\n        values[valuesOffset++] = ((byte165 & 31) << 58) | (byte166 << 50) | (byte167 << 42) | (byte168 << 34) | (byte169 << 26) | (byte170 << 18) | (byte171 << 10) | (byte172 << 2) | (byte173 >>> 6);\n        final long byte174 = blocks[blocksOffset++] & 0xFF;\n        final long byte175 = blocks[blocksOffset++] & 0xFF;\n        final long byte176 = blocks[blocksOffset++] & 0xFF;\n        final long byte177 = blocks[blocksOffset++] & 0xFF;\n        final long byte178 = blocks[blocksOffset++] & 0xFF;\n        final long byte179 = blocks[blocksOffset++] & 0xFF;\n        final long byte180 = blocks[blocksOffset++] & 0xFF;\n        final long byte181 = blocks[blocksOffset++] & 0xFF;\n        values[valuesOffset++] = ((byte173 & 63) << 57) | (byte174 << 49) | (byte175 << 41) | (byte176 << 33) | (byte177 << 25) | (byte178 << 17) | (byte179 << 9) | (byte180 << 1) | (byte181 >>> 7);\n        final long byte182 = blocks[blocksOffset++] & 0xFF;\n        final long byte183 = blocks[blocksOffset++] & 0xFF;\n        final long byte184 = blocks[blocksOffset++] & 0xFF;\n        final long byte185 = blocks[blocksOffset++] & 0xFF;\n        final long byte186 = blocks[blocksOffset++] & 0xFF;\n        final long byte187 = blocks[blocksOffset++] & 0xFF;\n        final long byte188 = blocks[blocksOffset++] & 0xFF;\n        values[valuesOffset++] = ((byte181 & 127) << 56) | (byte182 << 48) | (byte183 << 40) | (byte184 << 32) | (byte185 << 24) | (byte186 << 16) | (byte187 << 8) | byte188;\n        final long byte189 = blocks[blocksOffset++] & 0xFF;\n        final long byte190 = blocks[blocksOffset++] & 0xFF;\n        final long byte191 = blocks[blocksOffset++] & 0xFF;\n        final long byte192 = blocks[blocksOffset++] & 0xFF;\n        final long byte193 = blocks[blocksOffset++] & 0xFF;\n        final long byte194 = blocks[blocksOffset++] & 0xFF;\n        final long byte195 = blocks[blocksOffset++] & 0xFF;\n        final long byte196 = blocks[blocksOffset++] & 0xFF;\n        values[valuesOffset++] = (byte189 << 55) | (byte190 << 47) | (byte191 << 39) | (byte192 << 31) | (byte193 << 23) | (byte194 << 15) | (byte195 << 7) | (byte196 >>> 1);\n        final long byte197 = blocks[blocksOffset++] & 0xFF;\n        final long byte198 = blocks[blocksOffset++] & 0xFF;\n        final long byte199 = blocks[blocksOffset++] & 0xFF;\n        final long byte200 = blocks[blocksOffset++] & 0xFF;\n        final long byte201 = blocks[blocksOffset++] & 0xFF;\n        final long byte202 = blocks[blocksOffset++] & 0xFF;\n        final long byte203 = blocks[blocksOffset++] & 0xFF;\n        final long byte204 = blocks[blocksOffset++] & 0xFF;\n        values[valuesOffset++] = ((byte196 & 1) << 62) | (byte197 << 54) | (byte198 << 46) | (byte199 << 38) | (byte200 << 30) | (byte201 << 22) | (byte202 << 14) | (byte203 << 6) | (byte204 >>> 2);\n        final long byte205 = blocks[blocksOffset++] & 0xFF;\n        final long byte206 = blocks[blocksOffset++] & 0xFF;\n        final long byte207 = blocks[blocksOffset++] & 0xFF;\n        final long byte208 = blocks[blocksOffset++] & 0xFF;\n        final long byte209 = blocks[blocksOffset++] & 0xFF;\n        final long byte210 = blocks[blocksOffset++] & 0xFF;\n        final long byte211 = blocks[blocksOffset++] & 0xFF;\n        final long byte212 = blocks[blocksOffset++] & 0xFF;\n        values[valuesOffset++] = ((byte204 & 3) << 61) | (byte205 << 53) | (byte206 << 45) | (byte207 << 37) | (byte208 << 29) | (byte209 << 21) | (byte210 << 13) | (byte211 << 5) | (byte212 >>> 3);\n        final long byte213 = blocks[blocksOffset++] & 0xFF;\n        final long byte214 = blocks[blocksOffset++] & 0xFF;\n        final long byte215 = blocks[blocksOffset++] & 0xFF;\n        final long byte216 = blocks[blocksOffset++] & 0xFF;\n        final long byte217 = blocks[blocksOffset++] & 0xFF;\n        final long byte218 = blocks[blocksOffset++] & 0xFF;\n        final long byte219 = blocks[blocksOffset++] & 0xFF;\n        final long byte220 = blocks[blocksOffset++] & 0xFF;\n        values[valuesOffset++] = ((byte212 & 7) << 60) | (byte213 << 52) | (byte214 << 44) | (byte215 << 36) | (byte216 << 28) | (byte217 << 20) | (byte218 << 12) | (byte219 << 4) | (byte220 >>> 4);\n        final long byte221 = blocks[blocksOffset++] & 0xFF;\n        final long byte222 = blocks[blocksOffset++] & 0xFF;\n        final long byte223 = blocks[blocksOffset++] & 0xFF;\n        final long byte224 = blocks[blocksOffset++] & 0xFF;\n        final long byte225 = blocks[blocksOffset++] & 0xFF;\n        final long byte226 = blocks[blocksOffset++] & 0xFF;\n        final long byte227 = blocks[blocksOffset++] & 0xFF;\n        final long byte228 = blocks[blocksOffset++] & 0xFF;\n        values[valuesOffset++] = ((byte220 & 15) << 59) | (byte221 << 51) | (byte222 << 43) | (byte223 << 35) | (byte224 << 27) | (byte225 << 19) | (byte226 << 11) | (byte227 << 3) | (byte228 >>> 5);\n        final long byte229 = blocks[blocksOffset++] & 0xFF;\n        final long byte230 = blocks[blocksOffset++] & 0xFF;\n        final long byte231 = blocks[blocksOffset++] & 0xFF;\n        final long byte232 = blocks[blocksOffset++] & 0xFF;\n        final long byte233 = blocks[blocksOffset++] & 0xFF;\n        final long byte234 = blocks[blocksOffset++] & 0xFF;\n        final long byte235 = blocks[blocksOffset++] & 0xFF;\n        final long byte236 = blocks[blocksOffset++] & 0xFF;\n        values[valuesOffset++] = ((byte228 & 31) << 58) | (byte229 << 50) | (byte230 << 42) | (byte231 << 34) | (byte232 << 26) | (byte233 << 18) | (byte234 << 10) | (byte235 << 2) | (byte236 >>> 6);\n        final long byte237 = blocks[blocksOffset++] & 0xFF;\n        final long byte238 = blocks[blocksOffset++] & 0xFF;\n        final long byte239 = blocks[blocksOffset++] & 0xFF;\n        final long byte240 = blocks[blocksOffset++] & 0xFF;\n        final long byte241 = blocks[blocksOffset++] & 0xFF;\n        final long byte242 = blocks[blocksOffset++] & 0xFF;\n        final long byte243 = blocks[blocksOffset++] & 0xFF;\n        final long byte244 = blocks[blocksOffset++] & 0xFF;\n        values[valuesOffset++] = ((byte236 & 63) << 57) | (byte237 << 49) | (byte238 << 41) | (byte239 << 33) | (byte240 << 25) | (byte241 << 17) | (byte242 << 9) | (byte243 << 1) | (byte244 >>> 7);\n        final long byte245 = blocks[blocksOffset++] & 0xFF;\n        final long byte246 = blocks[blocksOffset++] & 0xFF;\n        final long byte247 = blocks[blocksOffset++] & 0xFF;\n        final long byte248 = blocks[blocksOffset++] & 0xFF;\n        final long byte249 = blocks[blocksOffset++] & 0xFF;\n        final long byte250 = blocks[blocksOffset++] & 0xFF;\n        final long byte251 = blocks[blocksOffset++] & 0xFF;\n        values[valuesOffset++] = ((byte244 & 127) << 56) | (byte245 << 48) | (byte246 << 40) | (byte247 << 32) | (byte248 << 24) | (byte249 << 16) | (byte250 << 8) | byte251;\n        final long byte252 = blocks[blocksOffset++] & 0xFF;\n        final long byte253 = blocks[blocksOffset++] & 0xFF;\n        final long byte254 = blocks[blocksOffset++] & 0xFF;\n        final long byte255 = blocks[blocksOffset++] & 0xFF;\n        final long byte256 = blocks[blocksOffset++] & 0xFF;\n        final long byte257 = blocks[blocksOffset++] & 0xFF;\n        final long byte258 = blocks[blocksOffset++] & 0xFF;\n        final long byte259 = blocks[blocksOffset++] & 0xFF;\n        values[valuesOffset++] = (byte252 << 55) | (byte253 << 47) | (byte254 << 39) | (byte255 << 31) | (byte256 << 23) | (byte257 << 15) | (byte258 << 7) | (byte259 >>> 1);\n        final long byte260 = blocks[blocksOffset++] & 0xFF;\n        final long byte261 = blocks[blocksOffset++] & 0xFF;\n        final long byte262 = blocks[blocksOffset++] & 0xFF;\n        final long byte263 = blocks[blocksOffset++] & 0xFF;\n        final long byte264 = blocks[blocksOffset++] & 0xFF;\n        final long byte265 = blocks[blocksOffset++] & 0xFF;\n        final long byte266 = blocks[blocksOffset++] & 0xFF;\n        final long byte267 = blocks[blocksOffset++] & 0xFF;\n        values[valuesOffset++] = ((byte259 & 1) << 62) | (byte260 << 54) | (byte261 << 46) | (byte262 << 38) | (byte263 << 30) | (byte264 << 22) | (byte265 << 14) | (byte266 << 6) | (byte267 >>> 2);\n        final long byte268 = blocks[blocksOffset++] & 0xFF;\n        final long byte269 = blocks[blocksOffset++] & 0xFF;\n        final long byte270 = blocks[blocksOffset++] & 0xFF;\n        final long byte271 = blocks[blocksOffset++] & 0xFF;\n        final long byte272 = blocks[blocksOffset++] & 0xFF;\n        final long byte273 = blocks[blocksOffset++] & 0xFF;\n        final long byte274 = blocks[blocksOffset++] & 0xFF;\n        final long byte275 = blocks[blocksOffset++] & 0xFF;\n        values[valuesOffset++] = ((byte267 & 3) << 61) | (byte268 << 53) | (byte269 << 45) | (byte270 << 37) | (byte271 << 29) | (byte272 << 21) | (byte273 << 13) | (byte274 << 5) | (byte275 >>> 3);\n        final long byte276 = blocks[blocksOffset++] & 0xFF;\n        final long byte277 = blocks[blocksOffset++] & 0xFF;\n        final long byte278 = blocks[blocksOffset++] & 0xFF;\n        final long byte279 = blocks[blocksOffset++] & 0xFF;\n        final long byte280 = blocks[blocksOffset++] & 0xFF;\n        final long byte281 = blocks[blocksOffset++] & 0xFF;\n        final long byte282 = blocks[blocksOffset++] & 0xFF;\n        final long byte283 = blocks[blocksOffset++] & 0xFF;\n        values[valuesOffset++] = ((byte275 & 7) << 60) | (byte276 << 52) | (byte277 << 44) | (byte278 << 36) | (byte279 << 28) | (byte280 << 20) | (byte281 << 12) | (byte282 << 4) | (byte283 >>> 4);\n        final long byte284 = blocks[blocksOffset++] & 0xFF;\n        final long byte285 = blocks[blocksOffset++] & 0xFF;\n        final long byte286 = blocks[blocksOffset++] & 0xFF;\n        final long byte287 = blocks[blocksOffset++] & 0xFF;\n        final long byte288 = blocks[blocksOffset++] & 0xFF;\n        final long byte289 = blocks[blocksOffset++] & 0xFF;\n        final long byte290 = blocks[blocksOffset++] & 0xFF;\n        final long byte291 = blocks[blocksOffset++] & 0xFF;\n        values[valuesOffset++] = ((byte283 & 15) << 59) | (byte284 << 51) | (byte285 << 43) | (byte286 << 35) | (byte287 << 27) | (byte288 << 19) | (byte289 << 11) | (byte290 << 3) | (byte291 >>> 5);\n        final long byte292 = blocks[blocksOffset++] & 0xFF;\n        final long byte293 = blocks[blocksOffset++] & 0xFF;\n        final long byte294 = blocks[blocksOffset++] & 0xFF;\n        final long byte295 = blocks[blocksOffset++] & 0xFF;\n        final long byte296 = blocks[blocksOffset++] & 0xFF;\n        final long byte297 = blocks[blocksOffset++] & 0xFF;\n        final long byte298 = blocks[blocksOffset++] & 0xFF;\n        final long byte299 = blocks[blocksOffset++] & 0xFF;\n        values[valuesOffset++] = ((byte291 & 31) << 58) | (byte292 << 50) | (byte293 << 42) | (byte294 << 34) | (byte295 << 26) | (byte296 << 18) | (byte297 << 10) | (byte298 << 2) | (byte299 >>> 6);\n        final long byte300 = blocks[blocksOffset++] & 0xFF;\n        final long byte301 = blocks[blocksOffset++] & 0xFF;\n        final long byte302 = blocks[blocksOffset++] & 0xFF;\n        final long byte303 = blocks[blocksOffset++] & 0xFF;\n        final long byte304 = blocks[blocksOffset++] & 0xFF;\n        final long byte305 = blocks[blocksOffset++] & 0xFF;\n        final long byte306 = blocks[blocksOffset++] & 0xFF;\n        final long byte307 = blocks[blocksOffset++] & 0xFF;\n        values[valuesOffset++] = ((byte299 & 63) << 57) | (byte300 << 49) | (byte301 << 41) | (byte302 << 33) | (byte303 << 25) | (byte304 << 17) | (byte305 << 9) | (byte306 << 1) | (byte307 >>> 7);\n        final long byte308 = blocks[blocksOffset++] & 0xFF;\n        final long byte309 = blocks[blocksOffset++] & 0xFF;\n        final long byte310 = blocks[blocksOffset++] & 0xFF;\n        final long byte311 = blocks[blocksOffset++] & 0xFF;\n        final long byte312 = blocks[blocksOffset++] & 0xFF;\n        final long byte313 = blocks[blocksOffset++] & 0xFF;\n        final long byte314 = blocks[blocksOffset++] & 0xFF;\n        values[valuesOffset++] = ((byte307 & 127) << 56) | (byte308 << 48) | (byte309 << 40) | (byte310 << 32) | (byte311 << 24) | (byte312 << 16) | (byte313 << 8) | byte314;\n        final long byte315 = blocks[blocksOffset++] & 0xFF;\n        final long byte316 = blocks[blocksOffset++] & 0xFF;\n        final long byte317 = blocks[blocksOffset++] & 0xFF;\n        final long byte318 = blocks[blocksOffset++] & 0xFF;\n        final long byte319 = blocks[blocksOffset++] & 0xFF;\n        final long byte320 = blocks[blocksOffset++] & 0xFF;\n        final long byte321 = blocks[blocksOffset++] & 0xFF;\n        final long byte322 = blocks[blocksOffset++] & 0xFF;\n        values[valuesOffset++] = (byte315 << 55) | (byte316 << 47) | (byte317 << 39) | (byte318 << 31) | (byte319 << 23) | (byte320 << 15) | (byte321 << 7) | (byte322 >>> 1);\n        final long byte323 = blocks[blocksOffset++] & 0xFF;\n        final long byte324 = blocks[blocksOffset++] & 0xFF;\n        final long byte325 = blocks[blocksOffset++] & 0xFF;\n        final long byte326 = blocks[blocksOffset++] & 0xFF;\n        final long byte327 = blocks[blocksOffset++] & 0xFF;\n        final long byte328 = blocks[blocksOffset++] & 0xFF;\n        final long byte329 = blocks[blocksOffset++] & 0xFF;\n        final long byte330 = blocks[blocksOffset++] & 0xFF;\n        values[valuesOffset++] = ((byte322 & 1) << 62) | (byte323 << 54) | (byte324 << 46) | (byte325 << 38) | (byte326 << 30) | (byte327 << 22) | (byte328 << 14) | (byte329 << 6) | (byte330 >>> 2);\n        final long byte331 = blocks[blocksOffset++] & 0xFF;\n        final long byte332 = blocks[blocksOffset++] & 0xFF;\n        final long byte333 = blocks[blocksOffset++] & 0xFF;\n        final long byte334 = blocks[blocksOffset++] & 0xFF;\n        final long byte335 = blocks[blocksOffset++] & 0xFF;\n        final long byte336 = blocks[blocksOffset++] & 0xFF;\n        final long byte337 = blocks[blocksOffset++] & 0xFF;\n        final long byte338 = blocks[blocksOffset++] & 0xFF;\n        values[valuesOffset++] = ((byte330 & 3) << 61) | (byte331 << 53) | (byte332 << 45) | (byte333 << 37) | (byte334 << 29) | (byte335 << 21) | (byte336 << 13) | (byte337 << 5) | (byte338 >>> 3);\n        final long byte339 = blocks[blocksOffset++] & 0xFF;\n        final long byte340 = blocks[blocksOffset++] & 0xFF;\n        final long byte341 = blocks[blocksOffset++] & 0xFF;\n        final long byte342 = blocks[blocksOffset++] & 0xFF;\n        final long byte343 = blocks[blocksOffset++] & 0xFF;\n        final long byte344 = blocks[blocksOffset++] & 0xFF;\n        final long byte345 = blocks[blocksOffset++] & 0xFF;\n        final long byte346 = blocks[blocksOffset++] & 0xFF;\n        values[valuesOffset++] = ((byte338 & 7) << 60) | (byte339 << 52) | (byte340 << 44) | (byte341 << 36) | (byte342 << 28) | (byte343 << 20) | (byte344 << 12) | (byte345 << 4) | (byte346 >>> 4);\n        final long byte347 = blocks[blocksOffset++] & 0xFF;\n        final long byte348 = blocks[blocksOffset++] & 0xFF;\n        final long byte349 = blocks[blocksOffset++] & 0xFF;\n        final long byte350 = blocks[blocksOffset++] & 0xFF;\n        final long byte351 = blocks[blocksOffset++] & 0xFF;\n        final long byte352 = blocks[blocksOffset++] & 0xFF;\n        final long byte353 = blocks[blocksOffset++] & 0xFF;\n        final long byte354 = blocks[blocksOffset++] & 0xFF;\n        values[valuesOffset++] = ((byte346 & 15) << 59) | (byte347 << 51) | (byte348 << 43) | (byte349 << 35) | (byte350 << 27) | (byte351 << 19) | (byte352 << 11) | (byte353 << 3) | (byte354 >>> 5);\n        final long byte355 = blocks[blocksOffset++] & 0xFF;\n        final long byte356 = blocks[blocksOffset++] & 0xFF;\n        final long byte357 = blocks[blocksOffset++] & 0xFF;\n        final long byte358 = blocks[blocksOffset++] & 0xFF;\n        final long byte359 = blocks[blocksOffset++] & 0xFF;\n        final long byte360 = blocks[blocksOffset++] & 0xFF;\n        final long byte361 = blocks[blocksOffset++] & 0xFF;\n        final long byte362 = blocks[blocksOffset++] & 0xFF;\n        values[valuesOffset++] = ((byte354 & 31) << 58) | (byte355 << 50) | (byte356 << 42) | (byte357 << 34) | (byte358 << 26) | (byte359 << 18) | (byte360 << 10) | (byte361 << 2) | (byte362 >>> 6);\n        final long byte363 = blocks[blocksOffset++] & 0xFF;\n        final long byte364 = blocks[blocksOffset++] & 0xFF;\n        final long byte365 = blocks[blocksOffset++] & 0xFF;\n        final long byte366 = blocks[blocksOffset++] & 0xFF;\n        final long byte367 = blocks[blocksOffset++] & 0xFF;\n        final long byte368 = blocks[blocksOffset++] & 0xFF;\n        final long byte369 = blocks[blocksOffset++] & 0xFF;\n        final long byte370 = blocks[blocksOffset++] & 0xFF;\n        values[valuesOffset++] = ((byte362 & 63) << 57) | (byte363 << 49) | (byte364 << 41) | (byte365 << 33) | (byte366 << 25) | (byte367 << 17) | (byte368 << 9) | (byte369 << 1) | (byte370 >>> 7);\n        final long byte371 = blocks[blocksOffset++] & 0xFF;\n        final long byte372 = blocks[blocksOffset++] & 0xFF;\n        final long byte373 = blocks[blocksOffset++] & 0xFF;\n        final long byte374 = blocks[blocksOffset++] & 0xFF;\n        final long byte375 = blocks[blocksOffset++] & 0xFF;\n        final long byte376 = blocks[blocksOffset++] & 0xFF;\n        final long byte377 = blocks[blocksOffset++] & 0xFF;\n        values[valuesOffset++] = ((byte370 & 127) << 56) | (byte371 << 48) | (byte372 << 40) | (byte373 << 32) | (byte374 << 24) | (byte375 << 16) | (byte376 << 8) | byte377;\n        final long byte378 = blocks[blocksOffset++] & 0xFF;\n        final long byte379 = blocks[blocksOffset++] & 0xFF;\n        final long byte380 = blocks[blocksOffset++] & 0xFF;\n        final long byte381 = blocks[blocksOffset++] & 0xFF;\n        final long byte382 = blocks[blocksOffset++] & 0xFF;\n        final long byte383 = blocks[blocksOffset++] & 0xFF;\n        final long byte384 = blocks[blocksOffset++] & 0xFF;\n        final long byte385 = blocks[blocksOffset++] & 0xFF;\n        values[valuesOffset++] = (byte378 << 55) | (byte379 << 47) | (byte380 << 39) | (byte381 << 31) | (byte382 << 23) | (byte383 << 15) | (byte384 << 7) | (byte385 >>> 1);\n        final long byte386 = blocks[blocksOffset++] & 0xFF;\n        final long byte387 = blocks[blocksOffset++] & 0xFF;\n        final long byte388 = blocks[blocksOffset++] & 0xFF;\n        final long byte389 = blocks[blocksOffset++] & 0xFF;\n        final long byte390 = blocks[blocksOffset++] & 0xFF;\n        final long byte391 = blocks[blocksOffset++] & 0xFF;\n        final long byte392 = blocks[blocksOffset++] & 0xFF;\n        final long byte393 = blocks[blocksOffset++] & 0xFF;\n        values[valuesOffset++] = ((byte385 & 1) << 62) | (byte386 << 54) | (byte387 << 46) | (byte388 << 38) | (byte389 << 30) | (byte390 << 22) | (byte391 << 14) | (byte392 << 6) | (byte393 >>> 2);\n        final long byte394 = blocks[blocksOffset++] & 0xFF;\n        final long byte395 = blocks[blocksOffset++] & 0xFF;\n        final long byte396 = blocks[blocksOffset++] & 0xFF;\n        final long byte397 = blocks[blocksOffset++] & 0xFF;\n        final long byte398 = blocks[blocksOffset++] & 0xFF;\n        final long byte399 = blocks[blocksOffset++] & 0xFF;\n        final long byte400 = blocks[blocksOffset++] & 0xFF;\n        final long byte401 = blocks[blocksOffset++] & 0xFF;\n        values[valuesOffset++] = ((byte393 & 3) << 61) | (byte394 << 53) | (byte395 << 45) | (byte396 << 37) | (byte397 << 29) | (byte398 << 21) | (byte399 << 13) | (byte400 << 5) | (byte401 >>> 3);\n        final long byte402 = blocks[blocksOffset++] & 0xFF;\n        final long byte403 = blocks[blocksOffset++] & 0xFF;\n        final long byte404 = blocks[blocksOffset++] & 0xFF;\n        final long byte405 = blocks[blocksOffset++] & 0xFF;\n        final long byte406 = blocks[blocksOffset++] & 0xFF;\n        final long byte407 = blocks[blocksOffset++] & 0xFF;\n        final long byte408 = blocks[blocksOffset++] & 0xFF;\n        final long byte409 = blocks[blocksOffset++] & 0xFF;\n        values[valuesOffset++] = ((byte401 & 7) << 60) | (byte402 << 52) | (byte403 << 44) | (byte404 << 36) | (byte405 << 28) | (byte406 << 20) | (byte407 << 12) | (byte408 << 4) | (byte409 >>> 4);\n        final long byte410 = blocks[blocksOffset++] & 0xFF;\n        final long byte411 = blocks[blocksOffset++] & 0xFF;\n        final long byte412 = blocks[blocksOffset++] & 0xFF;\n        final long byte413 = blocks[blocksOffset++] & 0xFF;\n        final long byte414 = blocks[blocksOffset++] & 0xFF;\n        final long byte415 = blocks[blocksOffset++] & 0xFF;\n        final long byte416 = blocks[blocksOffset++] & 0xFF;\n        final long byte417 = blocks[blocksOffset++] & 0xFF;\n        values[valuesOffset++] = ((byte409 & 15) << 59) | (byte410 << 51) | (byte411 << 43) | (byte412 << 35) | (byte413 << 27) | (byte414 << 19) | (byte415 << 11) | (byte416 << 3) | (byte417 >>> 5);\n        final long byte418 = blocks[blocksOffset++] & 0xFF;\n        final long byte419 = blocks[blocksOffset++] & 0xFF;\n        final long byte420 = blocks[blocksOffset++] & 0xFF;\n        final long byte421 = blocks[blocksOffset++] & 0xFF;\n        final long byte422 = blocks[blocksOffset++] & 0xFF;\n        final long byte423 = blocks[blocksOffset++] & 0xFF;\n        final long byte424 = blocks[blocksOffset++] & 0xFF;\n        final long byte425 = blocks[blocksOffset++] & 0xFF;\n        values[valuesOffset++] = ((byte417 & 31) << 58) | (byte418 << 50) | (byte419 << 42) | (byte420 << 34) | (byte421 << 26) | (byte422 << 18) | (byte423 << 10) | (byte424 << 2) | (byte425 >>> 6);\n        final long byte426 = blocks[blocksOffset++] & 0xFF;\n        final long byte427 = blocks[blocksOffset++] & 0xFF;\n        final long byte428 = blocks[blocksOffset++] & 0xFF;\n        final long byte429 = blocks[blocksOffset++] & 0xFF;\n        final long byte430 = blocks[blocksOffset++] & 0xFF;\n        final long byte431 = blocks[blocksOffset++] & 0xFF;\n        final long byte432 = blocks[blocksOffset++] & 0xFF;\n        final long byte433 = blocks[blocksOffset++] & 0xFF;\n        values[valuesOffset++] = ((byte425 & 63) << 57) | (byte426 << 49) | (byte427 << 41) | (byte428 << 33) | (byte429 << 25) | (byte430 << 17) | (byte431 << 9) | (byte432 << 1) | (byte433 >>> 7);\n        final long byte434 = blocks[blocksOffset++] & 0xFF;\n        final long byte435 = blocks[blocksOffset++] & 0xFF;\n        final long byte436 = blocks[blocksOffset++] & 0xFF;\n        final long byte437 = blocks[blocksOffset++] & 0xFF;\n        final long byte438 = blocks[blocksOffset++] & 0xFF;\n        final long byte439 = blocks[blocksOffset++] & 0xFF;\n        final long byte440 = blocks[blocksOffset++] & 0xFF;\n        values[valuesOffset++] = ((byte433 & 127) << 56) | (byte434 << 48) | (byte435 << 40) | (byte436 << 32) | (byte437 << 24) | (byte438 << 16) | (byte439 << 8) | byte440;\n        final long byte441 = blocks[blocksOffset++] & 0xFF;\n        final long byte442 = blocks[blocksOffset++] & 0xFF;\n        final long byte443 = blocks[blocksOffset++] & 0xFF;\n        final long byte444 = blocks[blocksOffset++] & 0xFF;\n        final long byte445 = blocks[blocksOffset++] & 0xFF;\n        final long byte446 = blocks[blocksOffset++] & 0xFF;\n        final long byte447 = blocks[blocksOffset++] & 0xFF;\n        final long byte448 = blocks[blocksOffset++] & 0xFF;\n        values[valuesOffset++] = (byte441 << 55) | (byte442 << 47) | (byte443 << 39) | (byte444 << 31) | (byte445 << 23) | (byte446 << 15) | (byte447 << 7) | (byte448 >>> 1);\n        final long byte449 = blocks[blocksOffset++] & 0xFF;\n        final long byte450 = blocks[blocksOffset++] & 0xFF;\n        final long byte451 = blocks[blocksOffset++] & 0xFF;\n        final long byte452 = blocks[blocksOffset++] & 0xFF;\n        final long byte453 = blocks[blocksOffset++] & 0xFF;\n        final long byte454 = blocks[blocksOffset++] & 0xFF;\n        final long byte455 = blocks[blocksOffset++] & 0xFF;\n        final long byte456 = blocks[blocksOffset++] & 0xFF;\n        values[valuesOffset++] = ((byte448 & 1) << 62) | (byte449 << 54) | (byte450 << 46) | (byte451 << 38) | (byte452 << 30) | (byte453 << 22) | (byte454 << 14) | (byte455 << 6) | (byte456 >>> 2);\n        final long byte457 = blocks[blocksOffset++] & 0xFF;\n        final long byte458 = blocks[blocksOffset++] & 0xFF;\n        final long byte459 = blocks[blocksOffset++] & 0xFF;\n        final long byte460 = blocks[blocksOffset++] & 0xFF;\n        final long byte461 = blocks[blocksOffset++] & 0xFF;\n        final long byte462 = blocks[blocksOffset++] & 0xFF;\n        final long byte463 = blocks[blocksOffset++] & 0xFF;\n        final long byte464 = blocks[blocksOffset++] & 0xFF;\n        values[valuesOffset++] = ((byte456 & 3) << 61) | (byte457 << 53) | (byte458 << 45) | (byte459 << 37) | (byte460 << 29) | (byte461 << 21) | (byte462 << 13) | (byte463 << 5) | (byte464 >>> 3);\n        final long byte465 = blocks[blocksOffset++] & 0xFF;\n        final long byte466 = blocks[blocksOffset++] & 0xFF;\n        final long byte467 = blocks[blocksOffset++] & 0xFF;\n        final long byte468 = blocks[blocksOffset++] & 0xFF;\n        final long byte469 = blocks[blocksOffset++] & 0xFF;\n        final long byte470 = blocks[blocksOffset++] & 0xFF;\n        final long byte471 = blocks[blocksOffset++] & 0xFF;\n        final long byte472 = blocks[blocksOffset++] & 0xFF;\n        values[valuesOffset++] = ((byte464 & 7) << 60) | (byte465 << 52) | (byte466 << 44) | (byte467 << 36) | (byte468 << 28) | (byte469 << 20) | (byte470 << 12) | (byte471 << 4) | (byte472 >>> 4);\n        final long byte473 = blocks[blocksOffset++] & 0xFF;\n        final long byte474 = blocks[blocksOffset++] & 0xFF;\n        final long byte475 = blocks[blocksOffset++] & 0xFF;\n        final long byte476 = blocks[blocksOffset++] & 0xFF;\n        final long byte477 = blocks[blocksOffset++] & 0xFF;\n        final long byte478 = blocks[blocksOffset++] & 0xFF;\n        final long byte479 = blocks[blocksOffset++] & 0xFF;\n        final long byte480 = blocks[blocksOffset++] & 0xFF;\n        values[valuesOffset++] = ((byte472 & 15) << 59) | (byte473 << 51) | (byte474 << 43) | (byte475 << 35) | (byte476 << 27) | (byte477 << 19) | (byte478 << 11) | (byte479 << 3) | (byte480 >>> 5);\n        final long byte481 = blocks[blocksOffset++] & 0xFF;\n        final long byte482 = blocks[blocksOffset++] & 0xFF;\n        final long byte483 = blocks[blocksOffset++] & 0xFF;\n        final long byte484 = blocks[blocksOffset++] & 0xFF;\n        final long byte485 = blocks[blocksOffset++] & 0xFF;\n        final long byte486 = blocks[blocksOffset++] & 0xFF;\n        final long byte487 = blocks[blocksOffset++] & 0xFF;\n        final long byte488 = blocks[blocksOffset++] & 0xFF;\n        values[valuesOffset++] = ((byte480 & 31) << 58) | (byte481 << 50) | (byte482 << 42) | (byte483 << 34) | (byte484 << 26) | (byte485 << 18) | (byte486 << 10) | (byte487 << 2) | (byte488 >>> 6);\n        final long byte489 = blocks[blocksOffset++] & 0xFF;\n        final long byte490 = blocks[blocksOffset++] & 0xFF;\n        final long byte491 = blocks[blocksOffset++] & 0xFF;\n        final long byte492 = blocks[blocksOffset++] & 0xFF;\n        final long byte493 = blocks[blocksOffset++] & 0xFF;\n        final long byte494 = blocks[blocksOffset++] & 0xFF;\n        final long byte495 = blocks[blocksOffset++] & 0xFF;\n        final long byte496 = blocks[blocksOffset++] & 0xFF;\n        values[valuesOffset++] = ((byte488 & 63) << 57) | (byte489 << 49) | (byte490 << 41) | (byte491 << 33) | (byte492 << 25) | (byte493 << 17) | (byte494 << 9) | (byte495 << 1) | (byte496 >>> 7);\n        final long byte497 = blocks[blocksOffset++] & 0xFF;\n        final long byte498 = blocks[blocksOffset++] & 0xFF;\n        final long byte499 = blocks[blocksOffset++] & 0xFF;\n        final long byte500 = blocks[blocksOffset++] & 0xFF;\n        final long byte501 = blocks[blocksOffset++] & 0xFF;\n        final long byte502 = blocks[blocksOffset++] & 0xFF;\n        final long byte503 = blocks[blocksOffset++] & 0xFF;\n        values[valuesOffset++] = ((byte496 & 127) << 56) | (byte497 << 48) | (byte498 << 40) | (byte499 << 32) | (byte500 << 24) | (byte501 << 16) | (byte502 << 8) | byte503;\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"353f5909b00345d98d079a7db9a1bbe7485b1ea6":["3edb451c214b0d41e9d16514e3a1d6984ca2ca5f"],"001b25b42373b22a52f399dbf072f1224632e8e6":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","353f5909b00345d98d079a7db9a1bbe7485b1ea6"],"58d488e3fd72dfc95fa76fcb24f58e90c343323c":["353f5909b00345d98d079a7db9a1bbe7485b1ea6"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"05a14b2611ead08655a2b2bdc61632eb31316e57":["001b25b42373b22a52f399dbf072f1224632e8e6","58d488e3fd72dfc95fa76fcb24f58e90c343323c"],"3edb451c214b0d41e9d16514e3a1d6984ca2ca5f":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["58d488e3fd72dfc95fa76fcb24f58e90c343323c"]},"commit2Childs":{"353f5909b00345d98d079a7db9a1bbe7485b1ea6":["001b25b42373b22a52f399dbf072f1224632e8e6","58d488e3fd72dfc95fa76fcb24f58e90c343323c"],"001b25b42373b22a52f399dbf072f1224632e8e6":["05a14b2611ead08655a2b2bdc61632eb31316e57"],"58d488e3fd72dfc95fa76fcb24f58e90c343323c":["05a14b2611ead08655a2b2bdc61632eb31316e57","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["001b25b42373b22a52f399dbf072f1224632e8e6","3edb451c214b0d41e9d16514e3a1d6984ca2ca5f"],"05a14b2611ead08655a2b2bdc61632eb31316e57":[],"3edb451c214b0d41e9d16514e3a1d6984ca2ca5f":["353f5909b00345d98d079a7db9a1bbe7485b1ea6"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["05a14b2611ead08655a2b2bdc61632eb31316e57","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}