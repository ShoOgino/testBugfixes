{"path":"lucene/codecs/src/test/org/apache/lucene/codecs/idversion/TestIDVersionPostingsFormat#makeIDField(String,long).mjava","commits":[{"id":"6d3eedff9ce5a77e403f9d084a3f5a7a9d9eeaed","date":1400194410,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/codecs/src/test/org/apache/lucene/codecs/idversion/TestIDVersionPostingsFormat#makeIDField(String,long).mjava","pathOld":"/dev/null","sourceNew":"  private static Field makeIDField(String id, long version) {\n    Field field = newTextField(\"id\", \"\", Field.Store.NO);\n    Token token = new Token(id, 0, id.length());\n    BytesRef payload = new BytesRef(8);\n    IDVersionPostingsFormat.longToBytes(100, payload);\n    token.setPayload(payload);\n    field.setTokenStream(new CannedTokenStream(token));\n    return field;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e82ae1be1dc68d59626e4bb94d2029d309b20878","date":1400195857,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/codecs/src/test/org/apache/lucene/codecs/idversion/TestIDVersionPostingsFormat#makeIDField(String,long).mjava","pathOld":"lucene/codecs/src/test/org/apache/lucene/codecs/idversion/TestIDVersionPostingsFormat#makeIDField(String,long).mjava","sourceNew":"  private static Field makeIDField(String id, long version) {\n    Field field = newTextField(\"id\", \"\", Field.Store.NO);\n    Token token = new Token(id, 0, id.length());\n    BytesRef payload = new BytesRef(8);\n    payload.length = 8;\n    IDVersionPostingsFormat.longToBytes(100, payload);\n    token.setPayload(payload);\n    field.setTokenStream(new CannedTokenStream(token));\n    return field;\n  }\n\n","sourceOld":"  private static Field makeIDField(String id, long version) {\n    Field field = newTextField(\"id\", \"\", Field.Store.NO);\n    Token token = new Token(id, 0, id.length());\n    BytesRef payload = new BytesRef(8);\n    IDVersionPostingsFormat.longToBytes(100, payload);\n    token.setPayload(payload);\n    field.setTokenStream(new CannedTokenStream(token));\n    return field;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b7d615ef411046679022f6728bb2b876273d13ae","date":1400253450,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/codecs/src/test/org/apache/lucene/codecs/idversion/TestIDVersionPostingsFormat#makeIDField(String,long).mjava","pathOld":"lucene/codecs/src/test/org/apache/lucene/codecs/idversion/TestIDVersionPostingsFormat#makeIDField(String,long).mjava","sourceNew":"  private static Field makeIDField(String id, long version) {\n    BytesRef payload = new BytesRef(8);\n    payload.length = 8;\n    IDVersionPostingsFormat.longToBytes(version, payload);\n    return new StringAndPayloadField(\"id\", id, payload);\n\n    /*\n    Field field = newTextField(\"id\", \"\", Field.Store.NO);\n    Token token = new Token(id, 0, id.length());\n    token.setPayload(payload);\n    field.setTokenStream(new CannedTokenStream(token));\n    return field;\n    */\n  }\n\n","sourceOld":"  private static Field makeIDField(String id, long version) {\n    Field field = newTextField(\"id\", \"\", Field.Store.NO);\n    Token token = new Token(id, 0, id.length());\n    BytesRef payload = new BytesRef(8);\n    payload.length = 8;\n    IDVersionPostingsFormat.longToBytes(100, payload);\n    token.setPayload(payload);\n    field.setTokenStream(new CannedTokenStream(token));\n    return field;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0efcf27cd5ca23def8376b4c321970c14dd71623","date":1400662679,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/codecs/src/test/org/apache/lucene/codecs/idversion/TestIDVersionPostingsFormat#makeIDField(String,long).mjava","pathOld":"lucene/codecs/src/test/org/apache/lucene/codecs/idversion/TestIDVersionPostingsFormat#makeIDField(String,long).mjava","sourceNew":"  private static Field makeIDField(String id, long version) {\n    BytesRef payload = new BytesRef(8);\n    payload.length = 8;\n    IDVersionPostingsFormat.longToBytes(version, payload);\n    return new StringAndPayloadField(\"id\", id, payload);\n  }\n\n","sourceOld":"  private static Field makeIDField(String id, long version) {\n    BytesRef payload = new BytesRef(8);\n    payload.length = 8;\n    IDVersionPostingsFormat.longToBytes(version, payload);\n    return new StringAndPayloadField(\"id\", id, payload);\n\n    /*\n    Field field = newTextField(\"id\", \"\", Field.Store.NO);\n    Token token = new Token(id, 0, id.length());\n    token.setPayload(payload);\n    field.setTokenStream(new CannedTokenStream(token));\n    return field;\n    */\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3cf3e973ce145ef8b164e2e7c0d57cf807cf9a6e","date":1400786907,"type":5,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/sandbox/src/test/org/apache/lucene/codecs/idversion/TestIDVersionPostingsFormat#makeIDField(String,long).mjava","pathOld":"lucene/codecs/src/test/org/apache/lucene/codecs/idversion/TestIDVersionPostingsFormat#makeIDField(String,long).mjava","sourceNew":"  private static Field makeIDField(String id, long version) {\n    BytesRef payload = new BytesRef(8);\n    payload.length = 8;\n    IDVersionPostingsFormat.longToBytes(version, payload);\n    return new StringAndPayloadField(\"id\", id, payload);\n  }\n\n","sourceOld":"  private static Field makeIDField(String id, long version) {\n    BytesRef payload = new BytesRef(8);\n    payload.length = 8;\n    IDVersionPostingsFormat.longToBytes(version, payload);\n    return new StringAndPayloadField(\"id\", id, payload);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3cf3e973ce145ef8b164e2e7c0d57cf807cf9a6e":["0efcf27cd5ca23def8376b4c321970c14dd71623"],"0efcf27cd5ca23def8376b4c321970c14dd71623":["b7d615ef411046679022f6728bb2b876273d13ae"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"6d3eedff9ce5a77e403f9d084a3f5a7a9d9eeaed":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"b7d615ef411046679022f6728bb2b876273d13ae":["e82ae1be1dc68d59626e4bb94d2029d309b20878"],"e82ae1be1dc68d59626e4bb94d2029d309b20878":["6d3eedff9ce5a77e403f9d084a3f5a7a9d9eeaed"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"3cf3e973ce145ef8b164e2e7c0d57cf807cf9a6e":[],"0efcf27cd5ca23def8376b4c321970c14dd71623":["3cf3e973ce145ef8b164e2e7c0d57cf807cf9a6e"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["6d3eedff9ce5a77e403f9d084a3f5a7a9d9eeaed","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"6d3eedff9ce5a77e403f9d084a3f5a7a9d9eeaed":["e82ae1be1dc68d59626e4bb94d2029d309b20878"],"b7d615ef411046679022f6728bb2b876273d13ae":["0efcf27cd5ca23def8376b4c321970c14dd71623"],"e82ae1be1dc68d59626e4bb94d2029d309b20878":["b7d615ef411046679022f6728bb2b876273d13ae"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["3cf3e973ce145ef8b164e2e7c0d57cf807cf9a6e","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}