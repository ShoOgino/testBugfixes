{"path":"solr/core/src/test/org/apache/solr/update/processor/AddSchemaFieldsUpdateProcessorFactoryTest#testSingleFieldRoundTrip().mjava","commits":[{"id":"fe3edda347939cc6859dbf4287e84f3e8e4bb939","date":1372696449,"type":0,"author":"Steven Rowe","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/update/processor/AddSchemaFieldsUpdateProcessorFactoryTest#testSingleFieldRoundTrip().mjava","pathOld":"/dev/null","sourceNew":"  public void testSingleFieldRoundTrip() throws Exception {\n    IndexSchema schema = h.getCore().getLatestSchema();\n    final String fieldName = \"newfield2\";\n    assertNull(schema.getFieldOrNull(fieldName));\n    Float floatValue = -13258.992f;\n    SolrInputDocument d = processAdd(\"add-fields\", doc(f(\"id\", \"2\"), f(fieldName, floatValue)));\n    assertNotNull(d);\n    schema = h.getCore().getLatestSchema();\n    assertNotNull(schema.getFieldOrNull(fieldName));\n    assertEquals(\"tfloat\", schema.getFieldType(fieldName).getTypeName());\n    assertU(commit());\n    assertQ(req(\"id:2\"), \"//arr[@name='\" + fieldName + \"']/float[.='\" + floatValue.toString() + \"']\");\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"37a0f60745e53927c4c876cfe5b5a58170f0646c","date":1373994005,"type":0,"author":"Han Jiang","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/update/processor/AddSchemaFieldsUpdateProcessorFactoryTest#testSingleFieldRoundTrip().mjava","pathOld":"/dev/null","sourceNew":"  public void testSingleFieldRoundTrip() throws Exception {\n    IndexSchema schema = h.getCore().getLatestSchema();\n    final String fieldName = \"newfield2\";\n    assertNull(schema.getFieldOrNull(fieldName));\n    Float floatValue = -13258.992f;\n    SolrInputDocument d = processAdd(\"add-fields\", doc(f(\"id\", \"2\"), f(fieldName, floatValue)));\n    assertNotNull(d);\n    schema = h.getCore().getLatestSchema();\n    assertNotNull(schema.getFieldOrNull(fieldName));\n    assertEquals(\"tfloat\", schema.getFieldType(fieldName).getTypeName());\n    assertU(commit());\n    assertQ(req(\"id:2\"), \"//arr[@name='\" + fieldName + \"']/float[.='\" + floatValue.toString() + \"']\");\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5ac4994ad4b84366f9bf298f175d0cef16932581","date":1497051781,"type":3,"author":"Steve Rowe","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/update/processor/AddSchemaFieldsUpdateProcessorFactoryTest#testSingleFieldRoundTrip().mjava","pathOld":"solr/core/src/test/org/apache/solr/update/processor/AddSchemaFieldsUpdateProcessorFactoryTest#testSingleFieldRoundTrip().mjava","sourceNew":"  public void testSingleFieldRoundTrip() throws Exception {\n    IndexSchema schema = h.getCore().getLatestSchema();\n    final String fieldName = \"newfield2\";\n    assertNull(schema.getFieldOrNull(fieldName));\n    Float floatValue = -13258.992f;\n    SolrInputDocument d = processAdd(\"add-fields\", doc(f(\"id\", \"2\"), f(fieldName, floatValue)));\n    assertNotNull(d);\n    schema = h.getCore().getLatestSchema();\n    assertNotNull(schema.getFieldOrNull(fieldName));\n    assertEquals(\"pfloats\", schema.getFieldType(fieldName).getTypeName());\n    assertU(commit());\n    assertQ(req(\"id:2\"), \"//arr[@name='\" + fieldName + \"']/float[.='\" + floatValue.toString() + \"']\");\n  }\n\n","sourceOld":"  public void testSingleFieldRoundTrip() throws Exception {\n    IndexSchema schema = h.getCore().getLatestSchema();\n    final String fieldName = \"newfield2\";\n    assertNull(schema.getFieldOrNull(fieldName));\n    Float floatValue = -13258.992f;\n    SolrInputDocument d = processAdd(\"add-fields\", doc(f(\"id\", \"2\"), f(fieldName, floatValue)));\n    assertNotNull(d);\n    schema = h.getCore().getLatestSchema();\n    assertNotNull(schema.getFieldOrNull(fieldName));\n    assertEquals(\"tfloat\", schema.getFieldType(fieldName).getTypeName());\n    assertU(commit());\n    assertQ(req(\"id:2\"), \"//arr[@name='\" + fieldName + \"']/float[.='\" + floatValue.toString() + \"']\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2a3ed3f77cdd034e789d00d1ca8bb7054c9fb8e9","date":1498028748,"type":3,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/update/processor/AddSchemaFieldsUpdateProcessorFactoryTest#testSingleFieldRoundTrip().mjava","pathOld":"solr/core/src/test/org/apache/solr/update/processor/AddSchemaFieldsUpdateProcessorFactoryTest#testSingleFieldRoundTrip().mjava","sourceNew":"  public void testSingleFieldRoundTrip() throws Exception {\n    IndexSchema schema = h.getCore().getLatestSchema();\n    final String fieldName = \"newfield2\";\n    assertNull(schema.getFieldOrNull(fieldName));\n    Float floatValue = -13258.992f;\n    SolrInputDocument d = processAdd(\"add-fields\", doc(f(\"id\", \"2\"), f(fieldName, floatValue)));\n    assertNotNull(d);\n    schema = h.getCore().getLatestSchema();\n    assertNotNull(schema.getFieldOrNull(fieldName));\n    assertEquals(\"pfloats\", schema.getFieldType(fieldName).getTypeName());\n    assertU(commit());\n    assertQ(req(\"id:2\"), \"//arr[@name='\" + fieldName + \"']/float[.='\" + floatValue.toString() + \"']\");\n  }\n\n","sourceOld":"  public void testSingleFieldRoundTrip() throws Exception {\n    IndexSchema schema = h.getCore().getLatestSchema();\n    final String fieldName = \"newfield2\";\n    assertNull(schema.getFieldOrNull(fieldName));\n    Float floatValue = -13258.992f;\n    SolrInputDocument d = processAdd(\"add-fields\", doc(f(\"id\", \"2\"), f(fieldName, floatValue)));\n    assertNotNull(d);\n    schema = h.getCore().getLatestSchema();\n    assertNotNull(schema.getFieldOrNull(fieldName));\n    assertEquals(\"tfloat\", schema.getFieldType(fieldName).getTypeName());\n    assertU(commit());\n    assertQ(req(\"id:2\"), \"//arr[@name='\" + fieldName + \"']/float[.='\" + floatValue.toString() + \"']\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"28288370235ed02234a64753cdbf0c6ec096304a","date":1498726817,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/update/processor/AddSchemaFieldsUpdateProcessorFactoryTest#testSingleFieldRoundTrip().mjava","pathOld":"solr/core/src/test/org/apache/solr/update/processor/AddSchemaFieldsUpdateProcessorFactoryTest#testSingleFieldRoundTrip().mjava","sourceNew":"  public void testSingleFieldRoundTrip() throws Exception {\n    IndexSchema schema = h.getCore().getLatestSchema();\n    final String fieldName = \"newfield2\";\n    assertNull(schema.getFieldOrNull(fieldName));\n    Float floatValue = -13258.992f;\n    SolrInputDocument d = processAdd(\"add-fields\", doc(f(\"id\", \"2\"), f(fieldName, floatValue)));\n    assertNotNull(d);\n    schema = h.getCore().getLatestSchema();\n    assertNotNull(schema.getFieldOrNull(fieldName));\n    assertEquals(\"pfloats\", schema.getFieldType(fieldName).getTypeName());\n    assertU(commit());\n    assertQ(req(\"id:2\"), \"//arr[@name='\" + fieldName + \"']/float[.='\" + floatValue.toString() + \"']\");\n  }\n\n","sourceOld":"  public void testSingleFieldRoundTrip() throws Exception {\n    IndexSchema schema = h.getCore().getLatestSchema();\n    final String fieldName = \"newfield2\";\n    assertNull(schema.getFieldOrNull(fieldName));\n    Float floatValue = -13258.992f;\n    SolrInputDocument d = processAdd(\"add-fields\", doc(f(\"id\", \"2\"), f(fieldName, floatValue)));\n    assertNotNull(d);\n    schema = h.getCore().getLatestSchema();\n    assertNotNull(schema.getFieldOrNull(fieldName));\n    assertEquals(\"tfloat\", schema.getFieldType(fieldName).getTypeName());\n    assertU(commit());\n    assertQ(req(\"id:2\"), \"//arr[@name='\" + fieldName + \"']/float[.='\" + floatValue.toString() + \"']\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"37a0f60745e53927c4c876cfe5b5a58170f0646c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","fe3edda347939cc6859dbf4287e84f3e8e4bb939"],"fe3edda347939cc6859dbf4287e84f3e8e4bb939":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"5ac4994ad4b84366f9bf298f175d0cef16932581":["fe3edda347939cc6859dbf4287e84f3e8e4bb939"],"28288370235ed02234a64753cdbf0c6ec096304a":["fe3edda347939cc6859dbf4287e84f3e8e4bb939","5ac4994ad4b84366f9bf298f175d0cef16932581"],"2a3ed3f77cdd034e789d00d1ca8bb7054c9fb8e9":["fe3edda347939cc6859dbf4287e84f3e8e4bb939","5ac4994ad4b84366f9bf298f175d0cef16932581"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["28288370235ed02234a64753cdbf0c6ec096304a"]},"commit2Childs":{"37a0f60745e53927c4c876cfe5b5a58170f0646c":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["37a0f60745e53927c4c876cfe5b5a58170f0646c","fe3edda347939cc6859dbf4287e84f3e8e4bb939"],"fe3edda347939cc6859dbf4287e84f3e8e4bb939":["37a0f60745e53927c4c876cfe5b5a58170f0646c","5ac4994ad4b84366f9bf298f175d0cef16932581","28288370235ed02234a64753cdbf0c6ec096304a","2a3ed3f77cdd034e789d00d1ca8bb7054c9fb8e9"],"5ac4994ad4b84366f9bf298f175d0cef16932581":["28288370235ed02234a64753cdbf0c6ec096304a","2a3ed3f77cdd034e789d00d1ca8bb7054c9fb8e9"],"28288370235ed02234a64753cdbf0c6ec096304a":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"2a3ed3f77cdd034e789d00d1ca8bb7054c9fb8e9":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["37a0f60745e53927c4c876cfe5b5a58170f0646c","2a3ed3f77cdd034e789d00d1ca8bb7054c9fb8e9","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}