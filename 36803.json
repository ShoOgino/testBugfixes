{"path":"solr/core/src/test/org/apache/solr/search/TestLFUCache#testTimeDecayParams().mjava","commits":[{"id":"3a2591037a85ef083e6588e0b846a5a34ff9b5a3","date":1326403130,"type":0,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/search/TestLFUCache#testTimeDecayParams().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testTimeDecayParams() throws IOException {\n    RefCounted<SolrIndexSearcher> holder = h.getCore().getSearcher();\n    try {\n      SolrIndexSearcher searcher = holder.get();\n      LFUCache cacheDecayTrue = (LFUCache) searcher.getCache(\"lfuCacheDecayTrue\");\n      assertNotNull(cacheDecayTrue);\n      NamedList stats = cacheDecayTrue.getStatistics();\n      assertTrue((Boolean) stats.get(\"timeDecay\"));\n      addCache(cacheDecayTrue, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n      for (int idx = 0; idx < 64; ++idx) {\n        assertCache(cacheDecayTrue, 1, 2, 3, 4, 5);\n      }\n      addCache(cacheDecayTrue, 11, 12, 13, 14, 15);\n      assertCache(cacheDecayTrue, 1, 2, 3, 4, 5, 12, 13, 14, 15);\n\n      LFUCache cacheDecayDefault = (LFUCache) searcher.getCache(\"lfuCacheDecayDefault\");\n      assertNotNull(cacheDecayDefault);\n      stats = cacheDecayDefault.getStatistics();\n      assertTrue((Boolean) stats.get(\"timeDecay\"));\n      addCache(cacheDecayDefault, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n      assertCache(cacheDecayDefault, 1, 2, 3, 4, 5);\n      for (int idx = 0; idx < 64; ++idx) {\n        assertCache(cacheDecayDefault, 1, 2, 3, 4, 5);\n      }\n      addCache(cacheDecayDefault, 11, 12, 13, 14, 15);\n      assertCache(cacheDecayDefault, 1, 2, 3, 4, 5, 12, 13, 14, 15);\n      addCache(cacheDecayDefault, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21);\n      assertCache(cacheDecayDefault, 1, 2, 3, 4, 5, 17, 18, 19, 20, 21);\n\n      LFUCache cacheDecayFalse = (LFUCache) searcher.getCache(\"lfuCacheDecayFalse\");\n      assertNotNull(cacheDecayFalse);\n      stats = cacheDecayFalse.getStatistics();\n      assertFalse((Boolean) stats.get(\"timeDecay\"));\n      addCache(cacheDecayFalse, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n      assertCache(cacheDecayFalse, 1, 2, 3, 4, 5);\n      for (int idx = 0; idx < 16; ++idx) {\n        assertCache(cacheDecayFalse, 1, 2, 3, 4, 5);\n      }\n      addCache(cacheDecayFalse, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21);\n\n      assertCache(cacheDecayFalse, 1, 2, 3, 4, 5);\n      assertNotCache(cacheDecayFalse, 6, 7, 8, 9, 10);\n      for (int idx = 22; idx < 256; ++idx) {\n        addCache(cacheDecayFalse, idx);\n      }\n      assertCache(cacheDecayFalse, 1, 2, 3, 4, 5);\n\n    } finally {\n      holder.decref();\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"816521ebaad5add9cb96bb88c577394e2938c40b","date":1491931343,"type":3,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/search/TestLFUCache#testTimeDecayParams().mjava","pathOld":"solr/core/src/test/org/apache/solr/search/TestLFUCache#testTimeDecayParams().mjava","sourceNew":"  @Test\n  public void testTimeDecayParams() throws IOException {\n    RefCounted<SolrIndexSearcher> holder = h.getCore().getSearcher();\n    try {\n      SolrIndexSearcher searcher = holder.get();\n      LFUCache cacheDecayTrue = (LFUCache) searcher.getCache(\"lfuCacheDecayTrue\");\n      assertNotNull(cacheDecayTrue);\n      Map<String,Object> stats = cacheDecayTrue.getMetricsMap().getValue();\n      assertTrue((Boolean) stats.get(\"timeDecay\"));\n      addCache(cacheDecayTrue, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n      for (int idx = 0; idx < 64; ++idx) {\n        assertCache(cacheDecayTrue, 1, 2, 3, 4, 5);\n      }\n      addCache(cacheDecayTrue, 11, 12, 13, 14, 15);\n      assertCache(cacheDecayTrue, 1, 2, 3, 4, 5, 12, 13, 14, 15);\n\n      LFUCache cacheDecayDefault = (LFUCache) searcher.getCache(\"lfuCacheDecayDefault\");\n      assertNotNull(cacheDecayDefault);\n      stats = cacheDecayDefault.getMetricsMap().getValue();\n      assertTrue((Boolean) stats.get(\"timeDecay\"));\n      addCache(cacheDecayDefault, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n      assertCache(cacheDecayDefault, 1, 2, 3, 4, 5);\n      for (int idx = 0; idx < 64; ++idx) {\n        assertCache(cacheDecayDefault, 1, 2, 3, 4, 5);\n      }\n      addCache(cacheDecayDefault, 11, 12, 13, 14, 15);\n      assertCache(cacheDecayDefault, 1, 2, 3, 4, 5, 12, 13, 14, 15);\n      addCache(cacheDecayDefault, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21);\n      assertCache(cacheDecayDefault, 1, 2, 3, 4, 5, 17, 18, 19, 20, 21);\n\n      LFUCache cacheDecayFalse = (LFUCache) searcher.getCache(\"lfuCacheDecayFalse\");\n      assertNotNull(cacheDecayFalse);\n      stats = cacheDecayFalse.getMetricsMap().getValue();\n      assertFalse((Boolean) stats.get(\"timeDecay\"));\n      addCache(cacheDecayFalse, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n      assertCache(cacheDecayFalse, 1, 2, 3, 4, 5);\n      for (int idx = 0; idx < 16; ++idx) {\n        assertCache(cacheDecayFalse, 1, 2, 3, 4, 5);\n      }\n      addCache(cacheDecayFalse, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21);\n\n      assertCache(cacheDecayFalse, 1, 2, 3, 4, 5);\n      assertNotCache(cacheDecayFalse, 6, 7, 8, 9, 10);\n      for (int idx = 22; idx < 256; ++idx) {\n        addCache(cacheDecayFalse, idx);\n      }\n      assertCache(cacheDecayFalse, 1, 2, 3, 4, 5);\n\n    } finally {\n      holder.decref();\n    }\n  }\n\n","sourceOld":"  @Test\n  public void testTimeDecayParams() throws IOException {\n    RefCounted<SolrIndexSearcher> holder = h.getCore().getSearcher();\n    try {\n      SolrIndexSearcher searcher = holder.get();\n      LFUCache cacheDecayTrue = (LFUCache) searcher.getCache(\"lfuCacheDecayTrue\");\n      assertNotNull(cacheDecayTrue);\n      NamedList stats = cacheDecayTrue.getStatistics();\n      assertTrue((Boolean) stats.get(\"timeDecay\"));\n      addCache(cacheDecayTrue, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n      for (int idx = 0; idx < 64; ++idx) {\n        assertCache(cacheDecayTrue, 1, 2, 3, 4, 5);\n      }\n      addCache(cacheDecayTrue, 11, 12, 13, 14, 15);\n      assertCache(cacheDecayTrue, 1, 2, 3, 4, 5, 12, 13, 14, 15);\n\n      LFUCache cacheDecayDefault = (LFUCache) searcher.getCache(\"lfuCacheDecayDefault\");\n      assertNotNull(cacheDecayDefault);\n      stats = cacheDecayDefault.getStatistics();\n      assertTrue((Boolean) stats.get(\"timeDecay\"));\n      addCache(cacheDecayDefault, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n      assertCache(cacheDecayDefault, 1, 2, 3, 4, 5);\n      for (int idx = 0; idx < 64; ++idx) {\n        assertCache(cacheDecayDefault, 1, 2, 3, 4, 5);\n      }\n      addCache(cacheDecayDefault, 11, 12, 13, 14, 15);\n      assertCache(cacheDecayDefault, 1, 2, 3, 4, 5, 12, 13, 14, 15);\n      addCache(cacheDecayDefault, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21);\n      assertCache(cacheDecayDefault, 1, 2, 3, 4, 5, 17, 18, 19, 20, 21);\n\n      LFUCache cacheDecayFalse = (LFUCache) searcher.getCache(\"lfuCacheDecayFalse\");\n      assertNotNull(cacheDecayFalse);\n      stats = cacheDecayFalse.getStatistics();\n      assertFalse((Boolean) stats.get(\"timeDecay\"));\n      addCache(cacheDecayFalse, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n      assertCache(cacheDecayFalse, 1, 2, 3, 4, 5);\n      for (int idx = 0; idx < 16; ++idx) {\n        assertCache(cacheDecayFalse, 1, 2, 3, 4, 5);\n      }\n      addCache(cacheDecayFalse, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21);\n\n      assertCache(cacheDecayFalse, 1, 2, 3, 4, 5);\n      assertNotCache(cacheDecayFalse, 6, 7, 8, 9, 10);\n      for (int idx = 22; idx < 256; ++idx) {\n        addCache(cacheDecayFalse, idx);\n      }\n      assertCache(cacheDecayFalse, 1, 2, 3, 4, 5);\n\n    } finally {\n      holder.decref();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"54ca69905c5d9d1529286f06ab1d12c68f6c13cb","date":1492683554,"type":3,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/search/TestLFUCache#testTimeDecayParams().mjava","pathOld":"solr/core/src/test/org/apache/solr/search/TestLFUCache#testTimeDecayParams().mjava","sourceNew":"  @Test\n  public void testTimeDecayParams() throws IOException {\n    RefCounted<SolrIndexSearcher> holder = h.getCore().getSearcher();\n    try {\n      SolrIndexSearcher searcher = holder.get();\n      LFUCache cacheDecayTrue = (LFUCache) searcher.getCache(\"lfuCacheDecayTrue\");\n      assertNotNull(cacheDecayTrue);\n      Map<String,Object> stats = cacheDecayTrue.getMetricsMap().getValue();\n      assertTrue((Boolean) stats.get(\"timeDecay\"));\n      addCache(cacheDecayTrue, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n      for (int idx = 0; idx < 64; ++idx) {\n        assertCache(cacheDecayTrue, 1, 2, 3, 4, 5);\n      }\n      addCache(cacheDecayTrue, 11, 12, 13, 14, 15);\n      assertCache(cacheDecayTrue, 1, 2, 3, 4, 5, 12, 13, 14, 15);\n\n      LFUCache cacheDecayDefault = (LFUCache) searcher.getCache(\"lfuCacheDecayDefault\");\n      assertNotNull(cacheDecayDefault);\n      stats = cacheDecayDefault.getMetricsMap().getValue();\n      assertTrue((Boolean) stats.get(\"timeDecay\"));\n      addCache(cacheDecayDefault, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n      assertCache(cacheDecayDefault, 1, 2, 3, 4, 5);\n      for (int idx = 0; idx < 64; ++idx) {\n        assertCache(cacheDecayDefault, 1, 2, 3, 4, 5);\n      }\n      addCache(cacheDecayDefault, 11, 12, 13, 14, 15);\n      assertCache(cacheDecayDefault, 1, 2, 3, 4, 5, 12, 13, 14, 15);\n      addCache(cacheDecayDefault, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21);\n      assertCache(cacheDecayDefault, 1, 2, 3, 4, 5, 17, 18, 19, 20, 21);\n\n      LFUCache cacheDecayFalse = (LFUCache) searcher.getCache(\"lfuCacheDecayFalse\");\n      assertNotNull(cacheDecayFalse);\n      stats = cacheDecayFalse.getMetricsMap().getValue();\n      assertFalse((Boolean) stats.get(\"timeDecay\"));\n      addCache(cacheDecayFalse, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n      assertCache(cacheDecayFalse, 1, 2, 3, 4, 5);\n      for (int idx = 0; idx < 16; ++idx) {\n        assertCache(cacheDecayFalse, 1, 2, 3, 4, 5);\n      }\n      addCache(cacheDecayFalse, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21);\n\n      assertCache(cacheDecayFalse, 1, 2, 3, 4, 5);\n      assertNotCache(cacheDecayFalse, 6, 7, 8, 9, 10);\n      for (int idx = 22; idx < 256; ++idx) {\n        addCache(cacheDecayFalse, idx);\n      }\n      assertCache(cacheDecayFalse, 1, 2, 3, 4, 5);\n\n    } finally {\n      holder.decref();\n    }\n  }\n\n","sourceOld":"  @Test\n  public void testTimeDecayParams() throws IOException {\n    RefCounted<SolrIndexSearcher> holder = h.getCore().getSearcher();\n    try {\n      SolrIndexSearcher searcher = holder.get();\n      LFUCache cacheDecayTrue = (LFUCache) searcher.getCache(\"lfuCacheDecayTrue\");\n      assertNotNull(cacheDecayTrue);\n      NamedList stats = cacheDecayTrue.getStatistics();\n      assertTrue((Boolean) stats.get(\"timeDecay\"));\n      addCache(cacheDecayTrue, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n      for (int idx = 0; idx < 64; ++idx) {\n        assertCache(cacheDecayTrue, 1, 2, 3, 4, 5);\n      }\n      addCache(cacheDecayTrue, 11, 12, 13, 14, 15);\n      assertCache(cacheDecayTrue, 1, 2, 3, 4, 5, 12, 13, 14, 15);\n\n      LFUCache cacheDecayDefault = (LFUCache) searcher.getCache(\"lfuCacheDecayDefault\");\n      assertNotNull(cacheDecayDefault);\n      stats = cacheDecayDefault.getStatistics();\n      assertTrue((Boolean) stats.get(\"timeDecay\"));\n      addCache(cacheDecayDefault, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n      assertCache(cacheDecayDefault, 1, 2, 3, 4, 5);\n      for (int idx = 0; idx < 64; ++idx) {\n        assertCache(cacheDecayDefault, 1, 2, 3, 4, 5);\n      }\n      addCache(cacheDecayDefault, 11, 12, 13, 14, 15);\n      assertCache(cacheDecayDefault, 1, 2, 3, 4, 5, 12, 13, 14, 15);\n      addCache(cacheDecayDefault, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21);\n      assertCache(cacheDecayDefault, 1, 2, 3, 4, 5, 17, 18, 19, 20, 21);\n\n      LFUCache cacheDecayFalse = (LFUCache) searcher.getCache(\"lfuCacheDecayFalse\");\n      assertNotNull(cacheDecayFalse);\n      stats = cacheDecayFalse.getStatistics();\n      assertFalse((Boolean) stats.get(\"timeDecay\"));\n      addCache(cacheDecayFalse, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n      assertCache(cacheDecayFalse, 1, 2, 3, 4, 5);\n      for (int idx = 0; idx < 16; ++idx) {\n        assertCache(cacheDecayFalse, 1, 2, 3, 4, 5);\n      }\n      addCache(cacheDecayFalse, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21);\n\n      assertCache(cacheDecayFalse, 1, 2, 3, 4, 5);\n      assertNotCache(cacheDecayFalse, 6, 7, 8, 9, 10);\n      for (int idx = 22; idx < 256; ++idx) {\n        addCache(cacheDecayFalse, idx);\n      }\n      assertCache(cacheDecayFalse, 1, 2, 3, 4, 5);\n\n    } finally {\n      holder.decref();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4ab833f2b623042c834458d4cbcad05073a93793","date":1527625631,"type":3,"author":"David Smiley","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/search/TestLFUCache#testTimeDecayParams().mjava","pathOld":"solr/core/src/test/org/apache/solr/search/TestLFUCache#testTimeDecayParams().mjava","sourceNew":"  @Test\n  public void testTimeDecayParams() throws IOException {\n    h.getCore().withSearcher(searcher -> {\n      LFUCache cacheDecayTrue = (LFUCache) searcher.getCache(\"lfuCacheDecayTrue\");\n      assertNotNull(cacheDecayTrue);\n      Map<String,Object> stats = cacheDecayTrue.getMetricsMap().getValue();\n      assertTrue((Boolean) stats.get(\"timeDecay\"));\n      addCache(cacheDecayTrue, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n      for (int idx = 0; idx < 64; ++idx) {\n        assertCache(cacheDecayTrue, 1, 2, 3, 4, 5);\n      }\n      addCache(cacheDecayTrue, 11, 12, 13, 14, 15);\n      assertCache(cacheDecayTrue, 1, 2, 3, 4, 5, 12, 13, 14, 15);\n\n      LFUCache cacheDecayDefault = (LFUCache) searcher.getCache(\"lfuCacheDecayDefault\");\n      assertNotNull(cacheDecayDefault);\n      stats = cacheDecayDefault.getMetricsMap().getValue();\n      assertTrue((Boolean) stats.get(\"timeDecay\"));\n      addCache(cacheDecayDefault, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n      assertCache(cacheDecayDefault, 1, 2, 3, 4, 5);\n      for (int idx = 0; idx < 64; ++idx) {\n        assertCache(cacheDecayDefault, 1, 2, 3, 4, 5);\n      }\n      addCache(cacheDecayDefault, 11, 12, 13, 14, 15);\n      assertCache(cacheDecayDefault, 1, 2, 3, 4, 5, 12, 13, 14, 15);\n      addCache(cacheDecayDefault, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21);\n      assertCache(cacheDecayDefault, 1, 2, 3, 4, 5, 17, 18, 19, 20, 21);\n\n      LFUCache cacheDecayFalse = (LFUCache) searcher.getCache(\"lfuCacheDecayFalse\");\n      assertNotNull(cacheDecayFalse);\n      stats = cacheDecayFalse.getMetricsMap().getValue();\n      assertFalse((Boolean) stats.get(\"timeDecay\"));\n      addCache(cacheDecayFalse, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n      assertCache(cacheDecayFalse, 1, 2, 3, 4, 5);\n      for (int idx = 0; idx < 16; ++idx) {\n        assertCache(cacheDecayFalse, 1, 2, 3, 4, 5);\n      }\n      addCache(cacheDecayFalse, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21);\n\n      assertCache(cacheDecayFalse, 1, 2, 3, 4, 5);\n      assertNotCache(cacheDecayFalse, 6, 7, 8, 9, 10);\n      for (int idx = 22; idx < 256; ++idx) {\n        addCache(cacheDecayFalse, idx);\n      }\n      assertCache(cacheDecayFalse, 1, 2, 3, 4, 5);\n      return null;\n    });\n  }\n\n","sourceOld":"  @Test\n  public void testTimeDecayParams() throws IOException {\n    RefCounted<SolrIndexSearcher> holder = h.getCore().getSearcher();\n    try {\n      SolrIndexSearcher searcher = holder.get();\n      LFUCache cacheDecayTrue = (LFUCache) searcher.getCache(\"lfuCacheDecayTrue\");\n      assertNotNull(cacheDecayTrue);\n      Map<String,Object> stats = cacheDecayTrue.getMetricsMap().getValue();\n      assertTrue((Boolean) stats.get(\"timeDecay\"));\n      addCache(cacheDecayTrue, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n      for (int idx = 0; idx < 64; ++idx) {\n        assertCache(cacheDecayTrue, 1, 2, 3, 4, 5);\n      }\n      addCache(cacheDecayTrue, 11, 12, 13, 14, 15);\n      assertCache(cacheDecayTrue, 1, 2, 3, 4, 5, 12, 13, 14, 15);\n\n      LFUCache cacheDecayDefault = (LFUCache) searcher.getCache(\"lfuCacheDecayDefault\");\n      assertNotNull(cacheDecayDefault);\n      stats = cacheDecayDefault.getMetricsMap().getValue();\n      assertTrue((Boolean) stats.get(\"timeDecay\"));\n      addCache(cacheDecayDefault, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n      assertCache(cacheDecayDefault, 1, 2, 3, 4, 5);\n      for (int idx = 0; idx < 64; ++idx) {\n        assertCache(cacheDecayDefault, 1, 2, 3, 4, 5);\n      }\n      addCache(cacheDecayDefault, 11, 12, 13, 14, 15);\n      assertCache(cacheDecayDefault, 1, 2, 3, 4, 5, 12, 13, 14, 15);\n      addCache(cacheDecayDefault, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21);\n      assertCache(cacheDecayDefault, 1, 2, 3, 4, 5, 17, 18, 19, 20, 21);\n\n      LFUCache cacheDecayFalse = (LFUCache) searcher.getCache(\"lfuCacheDecayFalse\");\n      assertNotNull(cacheDecayFalse);\n      stats = cacheDecayFalse.getMetricsMap().getValue();\n      assertFalse((Boolean) stats.get(\"timeDecay\"));\n      addCache(cacheDecayFalse, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n      assertCache(cacheDecayFalse, 1, 2, 3, 4, 5);\n      for (int idx = 0; idx < 16; ++idx) {\n        assertCache(cacheDecayFalse, 1, 2, 3, 4, 5);\n      }\n      addCache(cacheDecayFalse, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21);\n\n      assertCache(cacheDecayFalse, 1, 2, 3, 4, 5);\n      assertNotCache(cacheDecayFalse, 6, 7, 8, 9, 10);\n      for (int idx = 22; idx < 256; ++idx) {\n        addCache(cacheDecayFalse, idx);\n      }\n      assertCache(cacheDecayFalse, 1, 2, 3, 4, 5);\n\n    } finally {\n      holder.decref();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2138c838f1c8052d94d61eb1e205dce7fa6932ef","date":1527642223,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/search/TestLFUCache#testTimeDecayParams().mjava","pathOld":"solr/core/src/test/org/apache/solr/search/TestLFUCache#testTimeDecayParams().mjava","sourceNew":"  @Test\n  public void testTimeDecayParams() throws IOException {\n    h.getCore().withSearcher(searcher -> {\n      LFUCache cacheDecayTrue = (LFUCache) searcher.getCache(\"lfuCacheDecayTrue\");\n      assertNotNull(cacheDecayTrue);\n      Map<String,Object> stats = cacheDecayTrue.getMetricsMap().getValue();\n      assertTrue((Boolean) stats.get(\"timeDecay\"));\n      addCache(cacheDecayTrue, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n      for (int idx = 0; idx < 64; ++idx) {\n        assertCache(cacheDecayTrue, 1, 2, 3, 4, 5);\n      }\n      addCache(cacheDecayTrue, 11, 12, 13, 14, 15);\n      assertCache(cacheDecayTrue, 1, 2, 3, 4, 5, 12, 13, 14, 15);\n\n      LFUCache cacheDecayDefault = (LFUCache) searcher.getCache(\"lfuCacheDecayDefault\");\n      assertNotNull(cacheDecayDefault);\n      stats = cacheDecayDefault.getMetricsMap().getValue();\n      assertTrue((Boolean) stats.get(\"timeDecay\"));\n      addCache(cacheDecayDefault, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n      assertCache(cacheDecayDefault, 1, 2, 3, 4, 5);\n      for (int idx = 0; idx < 64; ++idx) {\n        assertCache(cacheDecayDefault, 1, 2, 3, 4, 5);\n      }\n      addCache(cacheDecayDefault, 11, 12, 13, 14, 15);\n      assertCache(cacheDecayDefault, 1, 2, 3, 4, 5, 12, 13, 14, 15);\n      addCache(cacheDecayDefault, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21);\n      assertCache(cacheDecayDefault, 1, 2, 3, 4, 5, 17, 18, 19, 20, 21);\n\n      LFUCache cacheDecayFalse = (LFUCache) searcher.getCache(\"lfuCacheDecayFalse\");\n      assertNotNull(cacheDecayFalse);\n      stats = cacheDecayFalse.getMetricsMap().getValue();\n      assertFalse((Boolean) stats.get(\"timeDecay\"));\n      addCache(cacheDecayFalse, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n      assertCache(cacheDecayFalse, 1, 2, 3, 4, 5);\n      for (int idx = 0; idx < 16; ++idx) {\n        assertCache(cacheDecayFalse, 1, 2, 3, 4, 5);\n      }\n      addCache(cacheDecayFalse, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21);\n\n      assertCache(cacheDecayFalse, 1, 2, 3, 4, 5);\n      assertNotCache(cacheDecayFalse, 6, 7, 8, 9, 10);\n      for (int idx = 22; idx < 256; ++idx) {\n        addCache(cacheDecayFalse, idx);\n      }\n      assertCache(cacheDecayFalse, 1, 2, 3, 4, 5);\n      return null;\n    });\n  }\n\n","sourceOld":"  @Test\n  public void testTimeDecayParams() throws IOException {\n    RefCounted<SolrIndexSearcher> holder = h.getCore().getSearcher();\n    try {\n      SolrIndexSearcher searcher = holder.get();\n      LFUCache cacheDecayTrue = (LFUCache) searcher.getCache(\"lfuCacheDecayTrue\");\n      assertNotNull(cacheDecayTrue);\n      Map<String,Object> stats = cacheDecayTrue.getMetricsMap().getValue();\n      assertTrue((Boolean) stats.get(\"timeDecay\"));\n      addCache(cacheDecayTrue, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n      for (int idx = 0; idx < 64; ++idx) {\n        assertCache(cacheDecayTrue, 1, 2, 3, 4, 5);\n      }\n      addCache(cacheDecayTrue, 11, 12, 13, 14, 15);\n      assertCache(cacheDecayTrue, 1, 2, 3, 4, 5, 12, 13, 14, 15);\n\n      LFUCache cacheDecayDefault = (LFUCache) searcher.getCache(\"lfuCacheDecayDefault\");\n      assertNotNull(cacheDecayDefault);\n      stats = cacheDecayDefault.getMetricsMap().getValue();\n      assertTrue((Boolean) stats.get(\"timeDecay\"));\n      addCache(cacheDecayDefault, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n      assertCache(cacheDecayDefault, 1, 2, 3, 4, 5);\n      for (int idx = 0; idx < 64; ++idx) {\n        assertCache(cacheDecayDefault, 1, 2, 3, 4, 5);\n      }\n      addCache(cacheDecayDefault, 11, 12, 13, 14, 15);\n      assertCache(cacheDecayDefault, 1, 2, 3, 4, 5, 12, 13, 14, 15);\n      addCache(cacheDecayDefault, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21);\n      assertCache(cacheDecayDefault, 1, 2, 3, 4, 5, 17, 18, 19, 20, 21);\n\n      LFUCache cacheDecayFalse = (LFUCache) searcher.getCache(\"lfuCacheDecayFalse\");\n      assertNotNull(cacheDecayFalse);\n      stats = cacheDecayFalse.getMetricsMap().getValue();\n      assertFalse((Boolean) stats.get(\"timeDecay\"));\n      addCache(cacheDecayFalse, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n      assertCache(cacheDecayFalse, 1, 2, 3, 4, 5);\n      for (int idx = 0; idx < 16; ++idx) {\n        assertCache(cacheDecayFalse, 1, 2, 3, 4, 5);\n      }\n      addCache(cacheDecayFalse, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21);\n\n      assertCache(cacheDecayFalse, 1, 2, 3, 4, 5);\n      assertNotCache(cacheDecayFalse, 6, 7, 8, 9, 10);\n      for (int idx = 22; idx < 256; ++idx) {\n        addCache(cacheDecayFalse, idx);\n      }\n      assertCache(cacheDecayFalse, 1, 2, 3, 4, 5);\n\n    } finally {\n      holder.decref();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"053c4cbd30d228154839dc536ca5a15a5f0c48bf","date":1564559417,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/search/TestLFUCache#testTimeDecayParams().mjava","pathOld":"solr/core/src/test/org/apache/solr/search/TestLFUCache#testTimeDecayParams().mjava","sourceNew":"  @Test\n  public void testTimeDecayParams() throws IOException {\n    h.getCore().withSearcher(searcher -> {\n      LFUCache cacheDecayTrue = (LFUCache) ((SolrCacheHolder) searcher.getCache(\"lfuCacheDecayTrue\")).get();\n      assertNotNull(cacheDecayTrue);\n      Map<String,Object> stats = cacheDecayTrue.getMetricsMap().getValue();\n      assertTrue((Boolean) stats.get(\"timeDecay\"));\n      addCache(cacheDecayTrue, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n      for (int idx = 0; idx < 64; ++idx) {\n        assertCache(cacheDecayTrue, 1, 2, 3, 4, 5);\n      }\n      addCache(cacheDecayTrue, 11, 12, 13, 14, 15);\n      assertCache(cacheDecayTrue, 1, 2, 3, 4, 5, 12, 13, 14, 15);\n\n      LFUCache cacheDecayDefault = (LFUCache) ((SolrCacheHolder) searcher.getCache(\"lfuCacheDecayDefault\")).get();\n      assertNotNull(cacheDecayDefault);\n      stats = cacheDecayDefault.getMetricsMap().getValue();\n      assertTrue((Boolean) stats.get(\"timeDecay\"));\n      addCache(cacheDecayDefault, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n      assertCache(cacheDecayDefault, 1, 2, 3, 4, 5);\n      for (int idx = 0; idx < 64; ++idx) {\n        assertCache(cacheDecayDefault, 1, 2, 3, 4, 5);\n      }\n      addCache(cacheDecayDefault, 11, 12, 13, 14, 15);\n      assertCache(cacheDecayDefault, 1, 2, 3, 4, 5, 12, 13, 14, 15);\n      addCache(cacheDecayDefault, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21);\n      assertCache(cacheDecayDefault, 1, 2, 3, 4, 5, 17, 18, 19, 20, 21);\n\n      LFUCache cacheDecayFalse = (LFUCache) ((SolrCacheHolder) searcher.getCache(\"lfuCacheDecayFalse\")).get();\n      assertNotNull(cacheDecayFalse);\n      stats = cacheDecayFalse.getMetricsMap().getValue();\n      assertFalse((Boolean) stats.get(\"timeDecay\"));\n      addCache(cacheDecayFalse, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n      assertCache(cacheDecayFalse, 1, 2, 3, 4, 5);\n      for (int idx = 0; idx < 16; ++idx) {\n        assertCache(cacheDecayFalse, 1, 2, 3, 4, 5);\n      }\n      addCache(cacheDecayFalse, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21);\n\n      assertCache(cacheDecayFalse, 1, 2, 3, 4, 5);\n      assertNotCache(cacheDecayFalse, 6, 7, 8, 9, 10);\n      for (int idx = 22; idx < 256; ++idx) {\n        addCache(cacheDecayFalse, idx);\n      }\n      assertCache(cacheDecayFalse, 1, 2, 3, 4, 5);\n      return null;\n    });\n  }\n\n","sourceOld":"  @Test\n  public void testTimeDecayParams() throws IOException {\n    h.getCore().withSearcher(searcher -> {\n      LFUCache cacheDecayTrue = (LFUCache) searcher.getCache(\"lfuCacheDecayTrue\");\n      assertNotNull(cacheDecayTrue);\n      Map<String,Object> stats = cacheDecayTrue.getMetricsMap().getValue();\n      assertTrue((Boolean) stats.get(\"timeDecay\"));\n      addCache(cacheDecayTrue, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n      for (int idx = 0; idx < 64; ++idx) {\n        assertCache(cacheDecayTrue, 1, 2, 3, 4, 5);\n      }\n      addCache(cacheDecayTrue, 11, 12, 13, 14, 15);\n      assertCache(cacheDecayTrue, 1, 2, 3, 4, 5, 12, 13, 14, 15);\n\n      LFUCache cacheDecayDefault = (LFUCache) searcher.getCache(\"lfuCacheDecayDefault\");\n      assertNotNull(cacheDecayDefault);\n      stats = cacheDecayDefault.getMetricsMap().getValue();\n      assertTrue((Boolean) stats.get(\"timeDecay\"));\n      addCache(cacheDecayDefault, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n      assertCache(cacheDecayDefault, 1, 2, 3, 4, 5);\n      for (int idx = 0; idx < 64; ++idx) {\n        assertCache(cacheDecayDefault, 1, 2, 3, 4, 5);\n      }\n      addCache(cacheDecayDefault, 11, 12, 13, 14, 15);\n      assertCache(cacheDecayDefault, 1, 2, 3, 4, 5, 12, 13, 14, 15);\n      addCache(cacheDecayDefault, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21);\n      assertCache(cacheDecayDefault, 1, 2, 3, 4, 5, 17, 18, 19, 20, 21);\n\n      LFUCache cacheDecayFalse = (LFUCache) searcher.getCache(\"lfuCacheDecayFalse\");\n      assertNotNull(cacheDecayFalse);\n      stats = cacheDecayFalse.getMetricsMap().getValue();\n      assertFalse((Boolean) stats.get(\"timeDecay\"));\n      addCache(cacheDecayFalse, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n      assertCache(cacheDecayFalse, 1, 2, 3, 4, 5);\n      for (int idx = 0; idx < 16; ++idx) {\n        assertCache(cacheDecayFalse, 1, 2, 3, 4, 5);\n      }\n      addCache(cacheDecayFalse, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21);\n\n      assertCache(cacheDecayFalse, 1, 2, 3, 4, 5);\n      assertNotCache(cacheDecayFalse, 6, 7, 8, 9, 10);\n      for (int idx = 22; idx < 256; ++idx) {\n        addCache(cacheDecayFalse, idx);\n      }\n      assertCache(cacheDecayFalse, 1, 2, 3, 4, 5);\n      return null;\n    });\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f8061ddd97f3352007d927dae445884a6f3d857b","date":1564988276,"type":3,"author":"Atri Sharma","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/search/TestLFUCache#testTimeDecayParams().mjava","pathOld":"solr/core/src/test/org/apache/solr/search/TestLFUCache#testTimeDecayParams().mjava","sourceNew":"  @Test\n  public void testTimeDecayParams() throws IOException {\n    h.getCore().withSearcher(searcher -> {\n      LFUCache cacheDecayTrue = (LFUCache) ((SolrCacheHolder) searcher.getCache(\"lfuCacheDecayTrue\")).get();\n      assertNotNull(cacheDecayTrue);\n      Map<String,Object> stats = cacheDecayTrue.getMetricsMap().getValue();\n      assertTrue((Boolean) stats.get(\"timeDecay\"));\n      addCache(cacheDecayTrue, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n      for (int idx = 0; idx < 64; ++idx) {\n        assertCache(cacheDecayTrue, 1, 2, 3, 4, 5);\n      }\n      addCache(cacheDecayTrue, 11, 12, 13, 14, 15);\n      assertCache(cacheDecayTrue, 1, 2, 3, 4, 5, 12, 13, 14, 15);\n\n      LFUCache cacheDecayDefault = (LFUCache) ((SolrCacheHolder) searcher.getCache(\"lfuCacheDecayDefault\")).get();\n      assertNotNull(cacheDecayDefault);\n      stats = cacheDecayDefault.getMetricsMap().getValue();\n      assertTrue((Boolean) stats.get(\"timeDecay\"));\n      addCache(cacheDecayDefault, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n      assertCache(cacheDecayDefault, 1, 2, 3, 4, 5);\n      for (int idx = 0; idx < 64; ++idx) {\n        assertCache(cacheDecayDefault, 1, 2, 3, 4, 5);\n      }\n      addCache(cacheDecayDefault, 11, 12, 13, 14, 15);\n      assertCache(cacheDecayDefault, 1, 2, 3, 4, 5, 12, 13, 14, 15);\n      addCache(cacheDecayDefault, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21);\n      assertCache(cacheDecayDefault, 1, 2, 3, 4, 5, 17, 18, 19, 20, 21);\n\n      LFUCache cacheDecayFalse = (LFUCache) ((SolrCacheHolder) searcher.getCache(\"lfuCacheDecayFalse\")).get();\n      assertNotNull(cacheDecayFalse);\n      stats = cacheDecayFalse.getMetricsMap().getValue();\n      assertFalse((Boolean) stats.get(\"timeDecay\"));\n      addCache(cacheDecayFalse, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n      assertCache(cacheDecayFalse, 1, 2, 3, 4, 5);\n      for (int idx = 0; idx < 16; ++idx) {\n        assertCache(cacheDecayFalse, 1, 2, 3, 4, 5);\n      }\n      addCache(cacheDecayFalse, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21);\n\n      assertCache(cacheDecayFalse, 1, 2, 3, 4, 5);\n      assertNotCache(cacheDecayFalse, 6, 7, 8, 9, 10);\n      for (int idx = 22; idx < 256; ++idx) {\n        addCache(cacheDecayFalse, idx);\n      }\n      assertCache(cacheDecayFalse, 1, 2, 3, 4, 5);\n      return null;\n    });\n  }\n\n","sourceOld":"  @Test\n  public void testTimeDecayParams() throws IOException {\n    h.getCore().withSearcher(searcher -> {\n      LFUCache cacheDecayTrue = (LFUCache) searcher.getCache(\"lfuCacheDecayTrue\");\n      assertNotNull(cacheDecayTrue);\n      Map<String,Object> stats = cacheDecayTrue.getMetricsMap().getValue();\n      assertTrue((Boolean) stats.get(\"timeDecay\"));\n      addCache(cacheDecayTrue, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n      for (int idx = 0; idx < 64; ++idx) {\n        assertCache(cacheDecayTrue, 1, 2, 3, 4, 5);\n      }\n      addCache(cacheDecayTrue, 11, 12, 13, 14, 15);\n      assertCache(cacheDecayTrue, 1, 2, 3, 4, 5, 12, 13, 14, 15);\n\n      LFUCache cacheDecayDefault = (LFUCache) searcher.getCache(\"lfuCacheDecayDefault\");\n      assertNotNull(cacheDecayDefault);\n      stats = cacheDecayDefault.getMetricsMap().getValue();\n      assertTrue((Boolean) stats.get(\"timeDecay\"));\n      addCache(cacheDecayDefault, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n      assertCache(cacheDecayDefault, 1, 2, 3, 4, 5);\n      for (int idx = 0; idx < 64; ++idx) {\n        assertCache(cacheDecayDefault, 1, 2, 3, 4, 5);\n      }\n      addCache(cacheDecayDefault, 11, 12, 13, 14, 15);\n      assertCache(cacheDecayDefault, 1, 2, 3, 4, 5, 12, 13, 14, 15);\n      addCache(cacheDecayDefault, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21);\n      assertCache(cacheDecayDefault, 1, 2, 3, 4, 5, 17, 18, 19, 20, 21);\n\n      LFUCache cacheDecayFalse = (LFUCache) searcher.getCache(\"lfuCacheDecayFalse\");\n      assertNotNull(cacheDecayFalse);\n      stats = cacheDecayFalse.getMetricsMap().getValue();\n      assertFalse((Boolean) stats.get(\"timeDecay\"));\n      addCache(cacheDecayFalse, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n      assertCache(cacheDecayFalse, 1, 2, 3, 4, 5);\n      for (int idx = 0; idx < 16; ++idx) {\n        assertCache(cacheDecayFalse, 1, 2, 3, 4, 5);\n      }\n      addCache(cacheDecayFalse, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21);\n\n      assertCache(cacheDecayFalse, 1, 2, 3, 4, 5);\n      assertNotCache(cacheDecayFalse, 6, 7, 8, 9, 10);\n      for (int idx = 22; idx < 256; ++idx) {\n        addCache(cacheDecayFalse, idx);\n      }\n      assertCache(cacheDecayFalse, 1, 2, 3, 4, 5);\n      return null;\n    });\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c44cc06c26e456fe9c215072b79fce30babe3975","date":1570365040,"type":3,"author":"Ishan Chattopadhyaya","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/search/TestLFUCache#testTimeDecayParams().mjava","pathOld":"solr/core/src/test/org/apache/solr/search/TestLFUCache#testTimeDecayParams().mjava","sourceNew":"  @Test\n  public void testTimeDecayParams() throws IOException {\n    h.getCore().withSearcher(searcher -> {\n      LFUCache cacheDecayTrue = (LFUCache) searcher.getCache(\"lfuCacheDecayTrue\");\n      assertNotNull(cacheDecayTrue);\n      Map<String,Object> stats = cacheDecayTrue.getMetricsMap().getValue();\n      assertTrue((Boolean) stats.get(\"timeDecay\"));\n      addCache(cacheDecayTrue, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n      for (int idx = 0; idx < 64; ++idx) {\n        assertCache(cacheDecayTrue, 1, 2, 3, 4, 5);\n      }\n      addCache(cacheDecayTrue, 11, 12, 13, 14, 15);\n      assertCache(cacheDecayTrue, 1, 2, 3, 4, 5, 12, 13, 14, 15);\n\n      LFUCache cacheDecayDefault = (LFUCache) searcher.getCache(\"lfuCacheDecayDefault\");\n      assertNotNull(cacheDecayDefault);\n      stats = cacheDecayDefault.getMetricsMap().getValue();\n      assertTrue((Boolean) stats.get(\"timeDecay\"));\n      addCache(cacheDecayDefault, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n      assertCache(cacheDecayDefault, 1, 2, 3, 4, 5);\n      for (int idx = 0; idx < 64; ++idx) {\n        assertCache(cacheDecayDefault, 1, 2, 3, 4, 5);\n      }\n      addCache(cacheDecayDefault, 11, 12, 13, 14, 15);\n      assertCache(cacheDecayDefault, 1, 2, 3, 4, 5, 12, 13, 14, 15);\n      addCache(cacheDecayDefault, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21);\n      assertCache(cacheDecayDefault, 1, 2, 3, 4, 5, 17, 18, 19, 20, 21);\n\n      LFUCache cacheDecayFalse = (LFUCache) searcher.getCache(\"lfuCacheDecayFalse\");\n      assertNotNull(cacheDecayFalse);\n      stats = cacheDecayFalse.getMetricsMap().getValue();\n      assertFalse((Boolean) stats.get(\"timeDecay\"));\n      addCache(cacheDecayFalse, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n      assertCache(cacheDecayFalse, 1, 2, 3, 4, 5);\n      for (int idx = 0; idx < 16; ++idx) {\n        assertCache(cacheDecayFalse, 1, 2, 3, 4, 5);\n      }\n      addCache(cacheDecayFalse, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21);\n\n      assertCache(cacheDecayFalse, 1, 2, 3, 4, 5);\n      assertNotCache(cacheDecayFalse, 6, 7, 8, 9, 10);\n      for (int idx = 22; idx < 256; ++idx) {\n        addCache(cacheDecayFalse, idx);\n      }\n      assertCache(cacheDecayFalse, 1, 2, 3, 4, 5);\n      return null;\n    });\n  }\n\n","sourceOld":"  @Test\n  public void testTimeDecayParams() throws IOException {\n    h.getCore().withSearcher(searcher -> {\n      LFUCache cacheDecayTrue = (LFUCache) ((SolrCacheHolder) searcher.getCache(\"lfuCacheDecayTrue\")).get();\n      assertNotNull(cacheDecayTrue);\n      Map<String,Object> stats = cacheDecayTrue.getMetricsMap().getValue();\n      assertTrue((Boolean) stats.get(\"timeDecay\"));\n      addCache(cacheDecayTrue, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n      for (int idx = 0; idx < 64; ++idx) {\n        assertCache(cacheDecayTrue, 1, 2, 3, 4, 5);\n      }\n      addCache(cacheDecayTrue, 11, 12, 13, 14, 15);\n      assertCache(cacheDecayTrue, 1, 2, 3, 4, 5, 12, 13, 14, 15);\n\n      LFUCache cacheDecayDefault = (LFUCache) ((SolrCacheHolder) searcher.getCache(\"lfuCacheDecayDefault\")).get();\n      assertNotNull(cacheDecayDefault);\n      stats = cacheDecayDefault.getMetricsMap().getValue();\n      assertTrue((Boolean) stats.get(\"timeDecay\"));\n      addCache(cacheDecayDefault, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n      assertCache(cacheDecayDefault, 1, 2, 3, 4, 5);\n      for (int idx = 0; idx < 64; ++idx) {\n        assertCache(cacheDecayDefault, 1, 2, 3, 4, 5);\n      }\n      addCache(cacheDecayDefault, 11, 12, 13, 14, 15);\n      assertCache(cacheDecayDefault, 1, 2, 3, 4, 5, 12, 13, 14, 15);\n      addCache(cacheDecayDefault, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21);\n      assertCache(cacheDecayDefault, 1, 2, 3, 4, 5, 17, 18, 19, 20, 21);\n\n      LFUCache cacheDecayFalse = (LFUCache) ((SolrCacheHolder) searcher.getCache(\"lfuCacheDecayFalse\")).get();\n      assertNotNull(cacheDecayFalse);\n      stats = cacheDecayFalse.getMetricsMap().getValue();\n      assertFalse((Boolean) stats.get(\"timeDecay\"));\n      addCache(cacheDecayFalse, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n      assertCache(cacheDecayFalse, 1, 2, 3, 4, 5);\n      for (int idx = 0; idx < 16; ++idx) {\n        assertCache(cacheDecayFalse, 1, 2, 3, 4, 5);\n      }\n      addCache(cacheDecayFalse, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21);\n\n      assertCache(cacheDecayFalse, 1, 2, 3, 4, 5);\n      assertNotCache(cacheDecayFalse, 6, 7, 8, 9, 10);\n      for (int idx = 22; idx < 256; ++idx) {\n        addCache(cacheDecayFalse, idx);\n      }\n      assertCache(cacheDecayFalse, 1, 2, 3, 4, 5);\n      return null;\n    });\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b0b597c65628ca9e73913a07e81691f8229bae35","date":1571224353,"type":3,"author":"jimczi","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/search/TestLFUCache#testTimeDecayParams().mjava","pathOld":"solr/core/src/test/org/apache/solr/search/TestLFUCache#testTimeDecayParams().mjava","sourceNew":"  @Test\n  public void testTimeDecayParams() throws IOException {\n    h.getCore().withSearcher(searcher -> {\n      LFUCache cacheDecayTrue = (LFUCache) searcher.getCache(\"lfuCacheDecayTrue\");\n      assertNotNull(cacheDecayTrue);\n      Map<String,Object> stats = cacheDecayTrue.getMetricsMap().getValue();\n      assertTrue((Boolean) stats.get(\"timeDecay\"));\n      addCache(cacheDecayTrue, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n      for (int idx = 0; idx < 64; ++idx) {\n        assertCache(cacheDecayTrue, 1, 2, 3, 4, 5);\n      }\n      addCache(cacheDecayTrue, 11, 12, 13, 14, 15);\n      assertCache(cacheDecayTrue, 1, 2, 3, 4, 5, 12, 13, 14, 15);\n\n      LFUCache cacheDecayDefault = (LFUCache) searcher.getCache(\"lfuCacheDecayDefault\");\n      assertNotNull(cacheDecayDefault);\n      stats = cacheDecayDefault.getMetricsMap().getValue();\n      assertTrue((Boolean) stats.get(\"timeDecay\"));\n      addCache(cacheDecayDefault, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n      assertCache(cacheDecayDefault, 1, 2, 3, 4, 5);\n      for (int idx = 0; idx < 64; ++idx) {\n        assertCache(cacheDecayDefault, 1, 2, 3, 4, 5);\n      }\n      addCache(cacheDecayDefault, 11, 12, 13, 14, 15);\n      assertCache(cacheDecayDefault, 1, 2, 3, 4, 5, 12, 13, 14, 15);\n      addCache(cacheDecayDefault, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21);\n      assertCache(cacheDecayDefault, 1, 2, 3, 4, 5, 17, 18, 19, 20, 21);\n\n      LFUCache cacheDecayFalse = (LFUCache) searcher.getCache(\"lfuCacheDecayFalse\");\n      assertNotNull(cacheDecayFalse);\n      stats = cacheDecayFalse.getMetricsMap().getValue();\n      assertFalse((Boolean) stats.get(\"timeDecay\"));\n      addCache(cacheDecayFalse, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n      assertCache(cacheDecayFalse, 1, 2, 3, 4, 5);\n      for (int idx = 0; idx < 16; ++idx) {\n        assertCache(cacheDecayFalse, 1, 2, 3, 4, 5);\n      }\n      addCache(cacheDecayFalse, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21);\n\n      assertCache(cacheDecayFalse, 1, 2, 3, 4, 5);\n      assertNotCache(cacheDecayFalse, 6, 7, 8, 9, 10);\n      for (int idx = 22; idx < 256; ++idx) {\n        addCache(cacheDecayFalse, idx);\n      }\n      assertCache(cacheDecayFalse, 1, 2, 3, 4, 5);\n      return null;\n    });\n  }\n\n","sourceOld":"  @Test\n  public void testTimeDecayParams() throws IOException {\n    h.getCore().withSearcher(searcher -> {\n      LFUCache cacheDecayTrue = (LFUCache) ((SolrCacheHolder) searcher.getCache(\"lfuCacheDecayTrue\")).get();\n      assertNotNull(cacheDecayTrue);\n      Map<String,Object> stats = cacheDecayTrue.getMetricsMap().getValue();\n      assertTrue((Boolean) stats.get(\"timeDecay\"));\n      addCache(cacheDecayTrue, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n      for (int idx = 0; idx < 64; ++idx) {\n        assertCache(cacheDecayTrue, 1, 2, 3, 4, 5);\n      }\n      addCache(cacheDecayTrue, 11, 12, 13, 14, 15);\n      assertCache(cacheDecayTrue, 1, 2, 3, 4, 5, 12, 13, 14, 15);\n\n      LFUCache cacheDecayDefault = (LFUCache) ((SolrCacheHolder) searcher.getCache(\"lfuCacheDecayDefault\")).get();\n      assertNotNull(cacheDecayDefault);\n      stats = cacheDecayDefault.getMetricsMap().getValue();\n      assertTrue((Boolean) stats.get(\"timeDecay\"));\n      addCache(cacheDecayDefault, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n      assertCache(cacheDecayDefault, 1, 2, 3, 4, 5);\n      for (int idx = 0; idx < 64; ++idx) {\n        assertCache(cacheDecayDefault, 1, 2, 3, 4, 5);\n      }\n      addCache(cacheDecayDefault, 11, 12, 13, 14, 15);\n      assertCache(cacheDecayDefault, 1, 2, 3, 4, 5, 12, 13, 14, 15);\n      addCache(cacheDecayDefault, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21);\n      assertCache(cacheDecayDefault, 1, 2, 3, 4, 5, 17, 18, 19, 20, 21);\n\n      LFUCache cacheDecayFalse = (LFUCache) ((SolrCacheHolder) searcher.getCache(\"lfuCacheDecayFalse\")).get();\n      assertNotNull(cacheDecayFalse);\n      stats = cacheDecayFalse.getMetricsMap().getValue();\n      assertFalse((Boolean) stats.get(\"timeDecay\"));\n      addCache(cacheDecayFalse, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n      assertCache(cacheDecayFalse, 1, 2, 3, 4, 5);\n      for (int idx = 0; idx < 16; ++idx) {\n        assertCache(cacheDecayFalse, 1, 2, 3, 4, 5);\n      }\n      addCache(cacheDecayFalse, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21);\n\n      assertCache(cacheDecayFalse, 1, 2, 3, 4, 5);\n      assertNotCache(cacheDecayFalse, 6, 7, 8, 9, 10);\n      for (int idx = 22; idx < 256; ++idx) {\n        addCache(cacheDecayFalse, idx);\n      }\n      assertCache(cacheDecayFalse, 1, 2, 3, 4, 5);\n      return null;\n    });\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4d7d3943904804560937e6239effeebda0f920e4","date":1573762904,"type":4,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/core/src/test/org/apache/solr/search/TestLFUCache#testTimeDecayParams().mjava","sourceNew":null,"sourceOld":"  @Test\n  public void testTimeDecayParams() throws IOException {\n    h.getCore().withSearcher(searcher -> {\n      LFUCache cacheDecayTrue = (LFUCache) searcher.getCache(\"lfuCacheDecayTrue\");\n      assertNotNull(cacheDecayTrue);\n      Map<String,Object> stats = cacheDecayTrue.getMetricsMap().getValue();\n      assertTrue((Boolean) stats.get(\"timeDecay\"));\n      addCache(cacheDecayTrue, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n      for (int idx = 0; idx < 64; ++idx) {\n        assertCache(cacheDecayTrue, 1, 2, 3, 4, 5);\n      }\n      addCache(cacheDecayTrue, 11, 12, 13, 14, 15);\n      assertCache(cacheDecayTrue, 1, 2, 3, 4, 5, 12, 13, 14, 15);\n\n      LFUCache cacheDecayDefault = (LFUCache) searcher.getCache(\"lfuCacheDecayDefault\");\n      assertNotNull(cacheDecayDefault);\n      stats = cacheDecayDefault.getMetricsMap().getValue();\n      assertTrue((Boolean) stats.get(\"timeDecay\"));\n      addCache(cacheDecayDefault, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n      assertCache(cacheDecayDefault, 1, 2, 3, 4, 5);\n      for (int idx = 0; idx < 64; ++idx) {\n        assertCache(cacheDecayDefault, 1, 2, 3, 4, 5);\n      }\n      addCache(cacheDecayDefault, 11, 12, 13, 14, 15);\n      assertCache(cacheDecayDefault, 1, 2, 3, 4, 5, 12, 13, 14, 15);\n      addCache(cacheDecayDefault, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21);\n      assertCache(cacheDecayDefault, 1, 2, 3, 4, 5, 17, 18, 19, 20, 21);\n\n      LFUCache cacheDecayFalse = (LFUCache) searcher.getCache(\"lfuCacheDecayFalse\");\n      assertNotNull(cacheDecayFalse);\n      stats = cacheDecayFalse.getMetricsMap().getValue();\n      assertFalse((Boolean) stats.get(\"timeDecay\"));\n      addCache(cacheDecayFalse, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n      assertCache(cacheDecayFalse, 1, 2, 3, 4, 5);\n      for (int idx = 0; idx < 16; ++idx) {\n        assertCache(cacheDecayFalse, 1, 2, 3, 4, 5);\n      }\n      addCache(cacheDecayFalse, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21);\n\n      assertCache(cacheDecayFalse, 1, 2, 3, 4, 5);\n      assertNotCache(cacheDecayFalse, 6, 7, 8, 9, 10);\n      for (int idx = 22; idx < 256; ++idx) {\n        addCache(cacheDecayFalse, idx);\n      }\n      assertCache(cacheDecayFalse, 1, 2, 3, 4, 5);\n      return null;\n    });\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"54ca69905c5d9d1529286f06ab1d12c68f6c13cb":["3a2591037a85ef083e6588e0b846a5a34ff9b5a3"],"053c4cbd30d228154839dc536ca5a15a5f0c48bf":["2138c838f1c8052d94d61eb1e205dce7fa6932ef"],"4d7d3943904804560937e6239effeebda0f920e4":["c44cc06c26e456fe9c215072b79fce30babe3975"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"c44cc06c26e456fe9c215072b79fce30babe3975":["053c4cbd30d228154839dc536ca5a15a5f0c48bf"],"816521ebaad5add9cb96bb88c577394e2938c40b":["3a2591037a85ef083e6588e0b846a5a34ff9b5a3"],"3a2591037a85ef083e6588e0b846a5a34ff9b5a3":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"4ab833f2b623042c834458d4cbcad05073a93793":["816521ebaad5add9cb96bb88c577394e2938c40b"],"f8061ddd97f3352007d927dae445884a6f3d857b":["2138c838f1c8052d94d61eb1e205dce7fa6932ef","053c4cbd30d228154839dc536ca5a15a5f0c48bf"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["4d7d3943904804560937e6239effeebda0f920e4"],"2138c838f1c8052d94d61eb1e205dce7fa6932ef":["816521ebaad5add9cb96bb88c577394e2938c40b","4ab833f2b623042c834458d4cbcad05073a93793"],"b0b597c65628ca9e73913a07e81691f8229bae35":["053c4cbd30d228154839dc536ca5a15a5f0c48bf","c44cc06c26e456fe9c215072b79fce30babe3975"]},"commit2Childs":{"54ca69905c5d9d1529286f06ab1d12c68f6c13cb":[],"053c4cbd30d228154839dc536ca5a15a5f0c48bf":["c44cc06c26e456fe9c215072b79fce30babe3975","f8061ddd97f3352007d927dae445884a6f3d857b","b0b597c65628ca9e73913a07e81691f8229bae35"],"4d7d3943904804560937e6239effeebda0f920e4":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a2591037a85ef083e6588e0b846a5a34ff9b5a3"],"c44cc06c26e456fe9c215072b79fce30babe3975":["4d7d3943904804560937e6239effeebda0f920e4","b0b597c65628ca9e73913a07e81691f8229bae35"],"3a2591037a85ef083e6588e0b846a5a34ff9b5a3":["54ca69905c5d9d1529286f06ab1d12c68f6c13cb","816521ebaad5add9cb96bb88c577394e2938c40b"],"816521ebaad5add9cb96bb88c577394e2938c40b":["4ab833f2b623042c834458d4cbcad05073a93793","2138c838f1c8052d94d61eb1e205dce7fa6932ef"],"4ab833f2b623042c834458d4cbcad05073a93793":["2138c838f1c8052d94d61eb1e205dce7fa6932ef"],"f8061ddd97f3352007d927dae445884a6f3d857b":[],"2138c838f1c8052d94d61eb1e205dce7fa6932ef":["053c4cbd30d228154839dc536ca5a15a5f0c48bf","f8061ddd97f3352007d927dae445884a6f3d857b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"b0b597c65628ca9e73913a07e81691f8229bae35":[]},"heads":["54ca69905c5d9d1529286f06ab1d12c68f6c13cb","f8061ddd97f3352007d927dae445884a6f3d857b","cd5edd1f2b162a5cfa08efd17851a07373a96817","b0b597c65628ca9e73913a07e81691f8229bae35"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}