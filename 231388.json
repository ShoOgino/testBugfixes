{"path":"solr/core/src/java/org/apache/solr/search/facet/FacetRangeProcessor.Calc#getGap(String).mjava","commits":[{"id":"a56a9893014b284af4d1af451e6c02e7ffdf5b6e","date":1590065972,"type":1,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/facet/FacetRangeProcessor.Calc#getGap(String).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/facet/FacetRangeProcessor[FacetRange].Calc#getGap(String).mjava","sourceNew":"    /**\n     * Parses a String param into a value that represents the gap and\n     * can be included in the response, throwing\n     * a useful exception if not possible.\n     *\n     * Note: uses Object as the return type instead of T for things like\n     * Date where gap is just a DateMathParser string\n     */\n    public final Object getGap(final String gap) {\n      try {\n        return parseGap(gap);\n      } catch (Exception e) {\n        throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,\n            \"Can't parse gap \"+gap+\" for field: \" +\n                field.getName(), e);\n      }\n    }\n\n","sourceOld":"    /**\n     * Parses a String param into a value that represents the gap and\n     * can be included in the response, throwing\n     * a useful exception if not possible.\n     *\n     * Note: uses Object as the return type instead of T for things like\n     * Date where gap is just a DateMathParser string\n     */\n    public final Object getGap(final String gap) {\n      try {\n        return parseGap(gap);\n      } catch (Exception e) {\n        throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,\n            \"Can't parse gap \"+gap+\" for field: \" +\n                field.getName(), e);\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a56a9893014b284af4d1af451e6c02e7ffdf5b6e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a56a9893014b284af4d1af451e6c02e7ffdf5b6e"]},"commit2Childs":{"a56a9893014b284af4d1af451e6c02e7ffdf5b6e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["a56a9893014b284af4d1af451e6c02e7ffdf5b6e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}