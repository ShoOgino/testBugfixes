{"path":"solr/core/src/test/org/apache/solr/update/MockingHttp2SolrClient#asyncRequest(SolrRequest,String,AsyncListener[NamedList[Object]]).mjava","commits":[{"id":"1964c059f45ae1de1877f9f0fe3ca327ea4218e8","date":1594088246,"type":1,"author":"Cao Manh Dat","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/update/MockingHttp2SolrClient#asyncRequest(SolrRequest,String,AsyncListener[NamedList[Object]]).mjava","pathOld":"solr/core/src/test/org/apache/solr/update/MockingHttp2SolrClient#request(SolrRequest,String,OnComplete).mjava","sourceNew":"  @Override\n  public Cancellable asyncRequest(@SuppressWarnings({\"rawtypes\"}) SolrRequest request,\n                                  String collection, AsyncListener<NamedList<Object>> asyncListener) {\n    if (request instanceof UpdateRequest) {\n      UpdateRequest ur = (UpdateRequest) request;\n      // won't throw exception if request is DBQ\n      if (ur.getDeleteQuery() != null && !ur.getDeleteQuery().isEmpty()) {\n        return super.asyncRequest(request, collection, asyncListener);\n      }\n    }\n\n    if (exp != null) {\n      if (oneExpPerReq) {\n        if (reqGotException.contains(request)) {\n          return super.asyncRequest(request, collection, asyncListener);\n        }\n        else\n          reqGotException.add(request);\n      }\n\n      Exception e = exception();\n      if (e instanceof IOException) {\n        if (LuceneTestCase.random().nextBoolean()) {\n          e = new SolrServerException(e);\n        }\n      }\n      asyncListener.onFailure(e);\n    }\n\n    return super.asyncRequest(request, collection, asyncListener);\n  }\n\n","sourceOld":"  public NamedList<Object> request(@SuppressWarnings({\"rawtypes\"})SolrRequest request,\n                                   String collection, OnComplete onComplete)\n      throws SolrServerException, IOException {\n    if (request instanceof UpdateRequest) {\n      UpdateRequest ur = (UpdateRequest) request;\n      // won't throw exception if request is DBQ\n      if (ur.getDeleteQuery() != null && !ur.getDeleteQuery().isEmpty()) {\n        return super.request(request, collection, onComplete);\n      }\n    }\n\n    if (exp != null) {\n      if (oneExpPerReq) {\n        if (reqGotException.contains(request)) {\n          return super.request(request, collection, onComplete);\n        }\n        else\n          reqGotException.add(request);\n      }\n\n      Exception e = exception();\n      if (e instanceof IOException) {\n        if (LuceneTestCase.random().nextBoolean()) {\n          throw (IOException) e;\n        } else {\n          throw new SolrServerException(e);\n        }\n      } else if (e instanceof SolrServerException) {\n        throw (SolrServerException) e;\n      } else {\n        throw new SolrServerException(e);\n      }\n    }\n\n    return super.request(request, collection, onComplete);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"1964c059f45ae1de1877f9f0fe3ca327ea4218e8":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["1964c059f45ae1de1877f9f0fe3ca327ea4218e8"]},"commit2Childs":{"1964c059f45ae1de1877f9f0fe3ca327ea4218e8":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["1964c059f45ae1de1877f9f0fe3ca327ea4218e8"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}