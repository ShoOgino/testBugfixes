{"path":"lucene/benchmark/src/java/org/apache/lucene/benchmark/byTask/tasks/CloseTaxonomyReaderTask#doLogic().mjava","commits":[{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/benchmark/src/java/org/apache/lucene/benchmark/byTask/tasks/CloseTaxonomyReaderTask#doLogic().mjava","pathOld":"modules/benchmark/src/java/org/apache/lucene/benchmark/byTask/tasks/CloseTaxonomyReaderTask#doLogic().mjava","sourceNew":"  @Override\n  public int doLogic() throws IOException {\n    TaxonomyReader taxoReader = getRunData().getTaxonomyReader();\n    getRunData().setTaxonomyReader(null);\n    if (taxoReader.getRefCount() != 1) {\n      System.out.println(\"WARNING: CloseTaxonomyReader: reference count is currently \" + taxoReader.getRefCount());\n    }\n    taxoReader.close();\n    return 1;\n  }\n\n","sourceOld":"  @Override\n  public int doLogic() throws IOException {\n    TaxonomyReader taxoReader = getRunData().getTaxonomyReader();\n    getRunData().setTaxonomyReader(null);\n    if (taxoReader.getRefCount() != 1) {\n      System.out.println(\"WARNING: CloseTaxonomyReader: reference count is currently \" + taxoReader.getRefCount());\n    }\n    taxoReader.close();\n    return 1;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bf30702df55f3384decc4b0e1033e8bc322e4c71","date":1465480090,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/benchmark/src/java/org/apache/lucene/benchmark/byTask/tasks/CloseTaxonomyReaderTask#doLogic().mjava","pathOld":"lucene/benchmark/src/java/org/apache/lucene/benchmark/byTask/tasks/CloseTaxonomyReaderTask#doLogic().mjava","sourceNew":"  @Override\n  public int doLogic() throws IOException {\n    try (TaxonomyReader taxoReader = getRunData().getTaxonomyReader()) {\n      getRunData().setTaxonomyReader(null);\n      if (taxoReader.getRefCount() != 1) {\n        System.out.println(\"WARNING: CloseTaxonomyReader: reference count is currently \" + taxoReader.getRefCount());\n      }\n    }\n    return 1;\n  }\n\n","sourceOld":"  @Override\n  public int doLogic() throws IOException {\n    TaxonomyReader taxoReader = getRunData().getTaxonomyReader();\n    getRunData().setTaxonomyReader(null);\n    if (taxoReader.getRefCount() != 1) {\n      System.out.println(\"WARNING: CloseTaxonomyReader: reference count is currently \" + taxoReader.getRefCount());\n    }\n    taxoReader.close();\n    return 1;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"lucene/benchmark/src/java/org/apache/lucene/benchmark/byTask/tasks/CloseTaxonomyReaderTask#doLogic().mjava","pathOld":"lucene/benchmark/src/java/org/apache/lucene/benchmark/byTask/tasks/CloseTaxonomyReaderTask#doLogic().mjava","sourceNew":"  @Override\n  public int doLogic() throws IOException {\n    try (TaxonomyReader taxoReader = getRunData().getTaxonomyReader()) {\n      getRunData().setTaxonomyReader(null);\n      if (taxoReader.getRefCount() != 1) {\n        System.out.println(\"WARNING: CloseTaxonomyReader: reference count is currently \" + taxoReader.getRefCount());\n      }\n    }\n    return 1;\n  }\n\n","sourceOld":"  @Override\n  public int doLogic() throws IOException {\n    TaxonomyReader taxoReader = getRunData().getTaxonomyReader();\n    getRunData().setTaxonomyReader(null);\n    if (taxoReader.getRefCount() != 1) {\n      System.out.println(\"WARNING: CloseTaxonomyReader: reference count is currently \" + taxoReader.getRefCount());\n    }\n    taxoReader.close();\n    return 1;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"bf30702df55f3384decc4b0e1033e8bc322e4c71":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["b89678825b68eccaf09e6ab71675fc0b0af1e099","bf30702df55f3384decc4b0e1033e8bc322e4c71"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["bf30702df55f3384decc4b0e1033e8bc322e4c71"]},"commit2Childs":{"bf30702df55f3384decc4b0e1033e8bc322e4c71":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["bf30702df55f3384decc4b0e1033e8bc322e4c71","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}