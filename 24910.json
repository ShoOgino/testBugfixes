{"path":"solr/core/src/test/org/apache/solr/request/TestFaceting#assertQforUIF(String,SolrQueryRequest,String...).mjava","commits":[{"id":"3802d95c3a31be21ea2971945049b711d95ef8d5","date":1455055616,"type":0,"author":"Mikhail Khludnev","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/request/TestFaceting#assertQforUIF(String,SolrQueryRequest,String...).mjava","pathOld":"/dev/null","sourceNew":"  private void assertQforUIF(String message, SolrQueryRequest request, String ... tests) {\n    final String paramString = request.getParamString();\n    if (paramString.contains(\"uif\") && paramString.contains(\"prefix\")){\n      assertQEx(\"uif prohibits prefix\", \"not supported\", request, ErrorCode.BAD_REQUEST);\n    }else{\n      assertQ(message,request, tests);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["550bbe5ffcdb614551686767f4d5a6ee38ef3e85"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"3c64189697927b548f74ba66dfa5051548662938","date":1455059336,"type":0,"author":"Noble Paul","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/request/TestFaceting#assertQforUIF(String,SolrQueryRequest,String...).mjava","pathOld":"/dev/null","sourceNew":"  private void assertQforUIF(String message, SolrQueryRequest request, String ... tests) {\n    final String paramString = request.getParamString();\n    if (paramString.contains(\"uif\") && paramString.contains(\"prefix\")){\n      assertQEx(\"uif prohibits prefix\", \"not supported\", request, ErrorCode.BAD_REQUEST);\n    }else{\n      assertQ(message,request, tests);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"550bbe5ffcdb614551686767f4d5a6ee38ef3e85","date":1457221653,"type":3,"author":"yonik","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/request/TestFaceting#assertQforUIF(String,SolrQueryRequest,String...).mjava","pathOld":"solr/core/src/test/org/apache/solr/request/TestFaceting#assertQforUIF(String,SolrQueryRequest,String...).mjava","sourceNew":"  private void assertQforUIF(String message, SolrQueryRequest request, String ... tests) {\n    // handle any differences for uif here, like skipping unsupported options\n    assertQ(message,request, tests);\n  }\n\n","sourceOld":"  private void assertQforUIF(String message, SolrQueryRequest request, String ... tests) {\n    final String paramString = request.getParamString();\n    if (paramString.contains(\"uif\") && paramString.contains(\"prefix\")){\n      assertQEx(\"uif prohibits prefix\", \"not supported\", request, ErrorCode.BAD_REQUEST);\n    }else{\n      assertQ(message,request, tests);\n    }\n  }\n\n","bugFix":["3802d95c3a31be21ea2971945049b711d95ef8d5"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3c64189697927b548f74ba66dfa5051548662938":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","3802d95c3a31be21ea2971945049b711d95ef8d5"],"550bbe5ffcdb614551686767f4d5a6ee38ef3e85":["3c64189697927b548f74ba66dfa5051548662938"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["550bbe5ffcdb614551686767f4d5a6ee38ef3e85"],"3802d95c3a31be21ea2971945049b711d95ef8d5":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3c64189697927b548f74ba66dfa5051548662938","3802d95c3a31be21ea2971945049b711d95ef8d5"],"3c64189697927b548f74ba66dfa5051548662938":["550bbe5ffcdb614551686767f4d5a6ee38ef3e85"],"550bbe5ffcdb614551686767f4d5a6ee38ef3e85":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3802d95c3a31be21ea2971945049b711d95ef8d5":["3c64189697927b548f74ba66dfa5051548662938"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}