{"path":"lucene/src/java/org/apache/lucene/index/DocumentsWriterPerThreadPool#getPerThreadsIterator(int).mjava","commits":[{"id":"ff78505662c0b741e2663a9f38a4889c12a32c9f","date":1294908561,"type":1,"author":"Michael Busch","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/DocumentsWriterPerThreadPool#getPerThreadsIterator(int).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/DocumentsWriterThreadPool#getPerThreadIterator(ThreadState[]).mjava","sourceNew":"  private Iterator<ThreadState> getPerThreadsIterator(final int upto) {\n    return new Iterator<ThreadState>() {\n      int i = 0;\n\n      @Override\n      public boolean hasNext() {\n        return i < upto;\n      }\n\n      @Override\n      public ThreadState next() {\n        return perThreads[i++];\n      }\n\n      @Override\n      public void remove() {\n        throw new UnsupportedOperationException(\"remove() not supported.\");\n      }\n    };\n  }\n\n","sourceOld":"  private static final Iterator<DocumentsWriterPerThread> getPerThreadIterator(final ThreadState[] localAllThreads) {\n    return new Iterator<DocumentsWriterPerThread>() {\n      int i = 0;\n\n      @Override\n      public boolean hasNext() {\n        return i < localAllThreads.length;\n      }\n\n      @Override\n      public DocumentsWriterPerThread next() {\n        return localAllThreads[i++].perThread;\n      }\n\n      @Override\n      public void remove() {\n        throw new UnsupportedOperationException(\"remove() not supported.\");\n      }\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"96d301e25c07a27f5b7347903cc1d5ad4c57607c","date":1298820221,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/DocumentsWriterPerThreadPool#getPerThreadsIterator(int).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/DocumentsWriterPerThreadPool#getPerThreadsIterator(int).mjava","sourceNew":"  private Iterator<ThreadState> getPerThreadsIterator(final int upto) {\n    return new Iterator<ThreadState>() {\n      int i = 0;\n\n      public boolean hasNext() {\n        return i < upto;\n      }\n\n      public ThreadState next() {\n        return perThreads[i++];\n      }\n\n      public void remove() {\n        throw new UnsupportedOperationException(\"remove() not supported.\");\n      }\n    };\n  }\n\n","sourceOld":"  private Iterator<ThreadState> getPerThreadsIterator(final int upto) {\n    return new Iterator<ThreadState>() {\n      int i = 0;\n\n      @Override\n      public boolean hasNext() {\n        return i < upto;\n      }\n\n      @Override\n      public ThreadState next() {\n        return perThreads[i++];\n      }\n\n      @Override\n      public void remove() {\n        throw new UnsupportedOperationException(\"remove() not supported.\");\n      }\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b3e06be49006ecac364d39d12b9c9f74882f9b9f","date":1304289513,"type":0,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/DocumentsWriterPerThreadPool#getPerThreadsIterator(int).mjava","pathOld":"/dev/null","sourceNew":"  private Iterator<ThreadState> getPerThreadsIterator(final int upto) {\n    return new Iterator<ThreadState>() {\n      int i = 0;\n\n      public boolean hasNext() {\n        return i < upto;\n      }\n\n      public ThreadState next() {\n        return perThreads[i++];\n      }\n\n      public void remove() {\n        throw new UnsupportedOperationException(\"remove() not supported.\");\n      }\n    };\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"135621f3a0670a9394eb563224a3b76cc4dddc0f","date":1304344257,"type":0,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/DocumentsWriterPerThreadPool#getPerThreadsIterator(int).mjava","pathOld":"/dev/null","sourceNew":"  private Iterator<ThreadState> getPerThreadsIterator(final int upto) {\n    return new Iterator<ThreadState>() {\n      int i = 0;\n\n      public boolean hasNext() {\n        return i < upto;\n      }\n\n      public ThreadState next() {\n        return perThreads[i++];\n      }\n\n      public void remove() {\n        throw new UnsupportedOperationException(\"remove() not supported.\");\n      }\n    };\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a3776dccca01c11e7046323cfad46a3b4a471233","date":1306100719,"type":0,"author":"Steven Rowe","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/DocumentsWriterPerThreadPool#getPerThreadsIterator(int).mjava","pathOld":"/dev/null","sourceNew":"  private Iterator<ThreadState> getPerThreadsIterator(final int upto) {\n    return new Iterator<ThreadState>() {\n      int i = 0;\n\n      public boolean hasNext() {\n        return i < upto;\n      }\n\n      public ThreadState next() {\n        return perThreads[i++];\n      }\n\n      public void remove() {\n        throw new UnsupportedOperationException(\"remove() not supported.\");\n      }\n    };\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":5,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/DocumentsWriterPerThreadPool#getPerThreadsIterator(int).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/DocumentsWriterPerThreadPool#getPerThreadsIterator(int).mjava","sourceNew":"  private Iterator<ThreadState> getPerThreadsIterator(final int upto) {\n    return new Iterator<ThreadState>() {\n      int i = 0;\n\n      public boolean hasNext() {\n        return i < upto;\n      }\n\n      public ThreadState next() {\n        return perThreads[i++];\n      }\n\n      public void remove() {\n        throw new UnsupportedOperationException(\"remove() not supported.\");\n      }\n    };\n  }\n\n","sourceOld":"  private Iterator<ThreadState> getPerThreadsIterator(final int upto) {\n    return new Iterator<ThreadState>() {\n      int i = 0;\n\n      public boolean hasNext() {\n        return i < upto;\n      }\n\n      public ThreadState next() {\n        return perThreads[i++];\n      }\n\n      public void remove() {\n        throw new UnsupportedOperationException(\"remove() not supported.\");\n      }\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"ff78505662c0b741e2663a9f38a4889c12a32c9f":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["b3e06be49006ecac364d39d12b9c9f74882f9b9f"],"a3776dccca01c11e7046323cfad46a3b4a471233":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","b3e06be49006ecac364d39d12b9c9f74882f9b9f"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"135621f3a0670a9394eb563224a3b76cc4dddc0f":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","b3e06be49006ecac364d39d12b9c9f74882f9b9f"],"b3e06be49006ecac364d39d12b9c9f74882f9b9f":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","96d301e25c07a27f5b7347903cc1d5ad4c57607c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"96d301e25c07a27f5b7347903cc1d5ad4c57607c":["ff78505662c0b741e2663a9f38a4889c12a32c9f"]},"commit2Childs":{"ff78505662c0b741e2663a9f38a4889c12a32c9f":["96d301e25c07a27f5b7347903cc1d5ad4c57607c"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a3776dccca01c11e7046323cfad46a3b4a471233":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["ff78505662c0b741e2663a9f38a4889c12a32c9f","a3776dccca01c11e7046323cfad46a3b4a471233","135621f3a0670a9394eb563224a3b76cc4dddc0f","b3e06be49006ecac364d39d12b9c9f74882f9b9f"],"135621f3a0670a9394eb563224a3b76cc4dddc0f":[],"b3e06be49006ecac364d39d12b9c9f74882f9b9f":["3a119bbc8703c10faa329ec201c654b3a35a1e3e","a3776dccca01c11e7046323cfad46a3b4a471233","135621f3a0670a9394eb563224a3b76cc4dddc0f"],"96d301e25c07a27f5b7347903cc1d5ad4c57607c":["b3e06be49006ecac364d39d12b9c9f74882f9b9f"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a3776dccca01c11e7046323cfad46a3b4a471233","135621f3a0670a9394eb563224a3b76cc4dddc0f","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}