{"path":"solr/core/src/test/org/apache/solr/handler/TestSolrConfigHandlerConcurrent#getAsMap(String,CloudSolrServer).mjava","commits":[{"id":"d8d1f2c78f560980e5822db6905bb3b2f52fdbe5","date":1417094182,"type":1,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/TestSolrConfigHandlerConcurrent#getAsMap(String,CloudSolrServer).mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/TestSolrConfigHandlerConcurrent#getAsMap(String).mjava","sourceNew":"  public static Map getAsMap(String uri, CloudSolrServer cloudClient) throws Exception {\n    HttpGet get = new HttpGet(uri) ;\n    HttpEntity entity = null;\n    try {\n      entity = cloudClient.getLbServer().getHttpClient().execute(get).getEntity();\n      String response = EntityUtils.toString(entity, StandardCharsets.UTF_8);\n      return (Map) ObjectBuilder.getVal(new JSONParser(new StringReader(response)));\n    } finally {\n      EntityUtils.consumeQuietly(entity);\n    }\n  }\n\n","sourceOld":"  private  Map getAsMap(String uri) throws Exception {\n    HttpGet get = new HttpGet(uri) ;\n    HttpEntity entity = null;\n    try {\n      entity = cloudClient.getLbServer().getHttpClient().execute(get).getEntity();\n      String response = EntityUtils.toString(entity, StandardCharsets.UTF_8);\n      return (Map) ObjectBuilder.getVal(new JSONParser(new StringReader(response)));\n    } finally {\n      EntityUtils.consumeQuietly(entity);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a0d196318cb8ce39ae32035f290cd1397833e472","date":1418140712,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/TestSolrConfigHandlerConcurrent#getAsMap(String,CloudSolrServer).mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/TestSolrConfigHandlerConcurrent#getAsMap(String,CloudSolrServer).mjava","sourceNew":"  public static Map getAsMap(String uri, CloudSolrServer cloudClient) throws Exception {\n    HttpGet get = new HttpGet(uri) ;\n    HttpEntity entity = null;\n    try {\n      entity = cloudClient.getLbServer().getHttpClient().execute(get).getEntity();\n      String response = EntityUtils.toString(entity, StandardCharsets.UTF_8);\n      return (Map) ObjectBuilder.getVal(new JSONParser(new StringReader(response)));\n    } finally {\n      EntityUtils.consumeQuietly(entity);\n      get.releaseConnection();\n    }\n  }\n\n","sourceOld":"  public static Map getAsMap(String uri, CloudSolrServer cloudClient) throws Exception {\n    HttpGet get = new HttpGet(uri) ;\n    HttpEntity entity = null;\n    try {\n      entity = cloudClient.getLbServer().getHttpClient().execute(get).getEntity();\n      String response = EntityUtils.toString(entity, StandardCharsets.UTF_8);\n      return (Map) ObjectBuilder.getVal(new JSONParser(new StringReader(response)));\n    } finally {\n      EntityUtils.consumeQuietly(entity);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c2d72c3e6563e08675f940d4c74139309c5e3db2","date":1419411068,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/TestSolrConfigHandlerConcurrent#getAsMap(String,CloudSolrServer).mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/TestSolrConfigHandlerConcurrent#getAsMap(String,CloudSolrServer).mjava","sourceNew":"  public static Map getAsMap(String uri, CloudSolrServer cloudClient) throws Exception {\n    HttpGet get = new HttpGet(uri) ;\n    HttpEntity entity = null;\n    try {\n      entity = cloudClient.getLbServer().getHttpClient().execute(get).getEntity();\n      String response = EntityUtils.toString(entity, StandardCharsets.UTF_8);\n      try {\n        return (Map) ObjectBuilder.getVal(new JSONParser(new StringReader(response)));\n      } catch (JSONParser.ParseException e) {\n        log.error(response,e);\n        throw e;\n      }\n    } finally {\n      EntityUtils.consumeQuietly(entity);\n      get.releaseConnection();\n    }\n  }\n\n","sourceOld":"  public static Map getAsMap(String uri, CloudSolrServer cloudClient) throws Exception {\n    HttpGet get = new HttpGet(uri) ;\n    HttpEntity entity = null;\n    try {\n      entity = cloudClient.getLbServer().getHttpClient().execute(get).getEntity();\n      String response = EntityUtils.toString(entity, StandardCharsets.UTF_8);\n      return (Map) ObjectBuilder.getVal(new JSONParser(new StringReader(response)));\n    } finally {\n      EntityUtils.consumeQuietly(entity);\n      get.releaseConnection();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bafca15d8e408346a67f4282ad1143b88023893b","date":1420034748,"type":5,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/TestSolrConfigHandlerConcurrent#getAsMap(String,CloudSolrClient).mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/TestSolrConfigHandlerConcurrent#getAsMap(String,CloudSolrServer).mjava","sourceNew":"  public static Map getAsMap(String uri, CloudSolrClient cloudClient) throws Exception {\n    HttpGet get = new HttpGet(uri) ;\n    HttpEntity entity = null;\n    try {\n      entity = cloudClient.getLbClient().getHttpClient().execute(get).getEntity();\n      String response = EntityUtils.toString(entity, StandardCharsets.UTF_8);\n      try {\n        return (Map) ObjectBuilder.getVal(new JSONParser(new StringReader(response)));\n      } catch (JSONParser.ParseException e) {\n        log.error(response,e);\n        throw e;\n      }\n    } finally {\n      EntityUtils.consumeQuietly(entity);\n      get.releaseConnection();\n    }\n  }\n\n","sourceOld":"  public static Map getAsMap(String uri, CloudSolrServer cloudClient) throws Exception {\n    HttpGet get = new HttpGet(uri) ;\n    HttpEntity entity = null;\n    try {\n      entity = cloudClient.getLbServer().getHttpClient().execute(get).getEntity();\n      String response = EntityUtils.toString(entity, StandardCharsets.UTF_8);\n      try {\n        return (Map) ObjectBuilder.getVal(new JSONParser(new StringReader(response)));\n      } catch (JSONParser.ParseException e) {\n        log.error(response,e);\n        throw e;\n      }\n    } finally {\n      EntityUtils.consumeQuietly(entity);\n      get.releaseConnection();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0d196318cb8ce39ae32035f290cd1397833e472":["d8d1f2c78f560980e5822db6905bb3b2f52fdbe5"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"bafca15d8e408346a67f4282ad1143b88023893b":["c2d72c3e6563e08675f940d4c74139309c5e3db2"],"d8d1f2c78f560980e5822db6905bb3b2f52fdbe5":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"c2d72c3e6563e08675f940d4c74139309c5e3db2":["a0d196318cb8ce39ae32035f290cd1397833e472"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["bafca15d8e408346a67f4282ad1143b88023893b"]},"commit2Childs":{"a0d196318cb8ce39ae32035f290cd1397833e472":["c2d72c3e6563e08675f940d4c74139309c5e3db2"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["d8d1f2c78f560980e5822db6905bb3b2f52fdbe5"],"bafca15d8e408346a67f4282ad1143b88023893b":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"d8d1f2c78f560980e5822db6905bb3b2f52fdbe5":["a0d196318cb8ce39ae32035f290cd1397833e472"],"c2d72c3e6563e08675f940d4c74139309c5e3db2":["bafca15d8e408346a67f4282ad1143b88023893b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}