{"path":"solr/solrj/src/java/org/apache/solr/cloud/autoscaling/Clause#compareTo(Clause).mjava","commits":[{"id":"653c1ca305e0065ee988a09e59c8316b8cde02fd","date":1492506780,"type":1,"author":"Noble Paul","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/cloud/autoscaling/Clause#compareTo(Clause).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/recipe/Clause#compareTo(Clause).mjava","sourceNew":"  @Override\n  public int compareTo(Clause that) {\n    int v = Integer.compare(this.tag.op.priority, that.tag.op.priority);\n    if (v != 0) return v;\n    return Integer.compare(this.replica.op.priority, that.replica.op.priority);\n  }\n\n","sourceOld":"  @Override\n  public int compareTo(Clause that) {\n    int v = Integer.compare(this.tag.op.priority, that.tag.op.priority);\n    if (v != 0) return v;\n    return Integer.compare(this.replica.op.priority, that.replica.op.priority);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8439b737e0aa59b02fd1f14b436d75050e70076f","date":1493715391,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/cloud/autoscaling/Clause#compareTo(Clause).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/cloud/autoscaling/Clause#compareTo(Clause).mjava","sourceNew":"  @Override\n  public int compareTo(Clause that) {\n    try {\n      int v = Integer.compare(this.tag.op.priority, that.tag.op.priority);\n      if (v != 0) return v;\n      return this.isPerCollectiontag() && that.isPerCollectiontag() ?\n          Integer.compare(this.replica.op.priority, that.replica.op.priority) :\n          0;\n    } catch (NullPointerException e) {\n      System.out.println(\"this: \" + Utils.toJSONString(this));\n      System.out.println(\"thAt: \" + Utils.toJSONString(that));\n      throw e;\n    }\n  }\n\n","sourceOld":"  @Override\n  public int compareTo(Clause that) {\n    int v = Integer.compare(this.tag.op.priority, that.tag.op.priority);\n    if (v != 0) return v;\n    return Integer.compare(this.replica.op.priority, that.replica.op.priority);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a4b9ebbc68c1b39e292c3efe82bfa15e372351b4","date":1495700700,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/cloud/autoscaling/Clause#compareTo(Clause).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/cloud/autoscaling/Clause#compareTo(Clause).mjava","sourceNew":"  @Override\n  public int compareTo(Clause that) {\n    try {\n      int v = Integer.compare(this.tag.op.priority, that.tag.op.priority);\n      if (v != 0) return v;\n      if (this.isPerCollectiontag() && that.isPerCollectiontag()) {\n        v = Integer.compare(this.replica.op.priority, that.replica.op.priority);\n        if(v ==0) {\n          v = Integer.compare((Integer)this.replica.val, (Integer)that.replica.val);\n          v = this.replica.op == LESS_THAN ? v : v * -1;\n        }\n        return v;\n      } else {\n        return 0;\n      }\n    } catch (NullPointerException e) {\n      throw e;\n    }\n  }\n\n","sourceOld":"  @Override\n  public int compareTo(Clause that) {\n    try {\n      int v = Integer.compare(this.tag.op.priority, that.tag.op.priority);\n      if (v != 0) return v;\n      return this.isPerCollectiontag() && that.isPerCollectiontag() ?\n          Integer.compare(this.replica.op.priority, that.replica.op.priority) :\n          0;\n    } catch (NullPointerException e) {\n      System.out.println(\"this: \" + Utils.toJSONString(this));\n      System.out.println(\"thAt: \" + Utils.toJSONString(that));\n      throw e;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"901d2a2f2fe0ff00c1c8578904e1f42e6ccbb21b","date":1495756308,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/cloud/autoscaling/Clause#compareTo(Clause).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/cloud/autoscaling/Clause#compareTo(Clause).mjava","sourceNew":"  @Override\n  public int compareTo(Clause that) {\n    try {\n      int v = Integer.compare(this.tag.op.priority, that.tag.op.priority);\n      if (v != 0) return v;\n      if (this.isPerCollectiontag() && that.isPerCollectiontag()) {\n        v = Integer.compare(this.replica.op.priority, that.replica.op.priority);\n        if (v == 0) {\n          v = Integer.compare((Integer) this.replica.val, (Integer) that.replica.val);\n          v = this.replica.op == LESS_THAN ? v : v * -1;\n        }\n        return v;\n      } else {\n        return 0;\n      }\n    } catch (NullPointerException e) {\n      throw e;\n    }\n  }\n\n","sourceOld":"  @Override\n  public int compareTo(Clause that) {\n    try {\n      int v = Integer.compare(this.tag.op.priority, that.tag.op.priority);\n      if (v != 0) return v;\n      if (this.isPerCollectiontag() && that.isPerCollectiontag()) {\n        v = Integer.compare(this.replica.op.priority, that.replica.op.priority);\n        if(v ==0) {\n          v = Integer.compare((Integer)this.replica.val, (Integer)that.replica.val);\n          v = this.replica.op == LESS_THAN ? v : v * -1;\n        }\n        return v;\n      } else {\n        return 0;\n      }\n    } catch (NullPointerException e) {\n      throw e;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a513b6a92751e54c76fb5447948c9e7d437163a7","date":1496136565,"type":0,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/cloud/autoscaling/Clause#compareTo(Clause).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public int compareTo(Clause that) {\n    try {\n      int v = Integer.compare(this.tag.op.priority, that.tag.op.priority);\n      if (v != 0) return v;\n      if (this.isPerCollectiontag() && that.isPerCollectiontag()) {\n        v = Integer.compare(this.replica.op.priority, that.replica.op.priority);\n        if (v == 0) {\n          v = Integer.compare((Integer) this.replica.val, (Integer) that.replica.val);\n          v = this.replica.op == LESS_THAN ? v : v * -1;\n        }\n        return v;\n      } else {\n        return 0;\n      }\n    } catch (NullPointerException e) {\n      throw e;\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0126e386bbcccd3e2fb0a93ac12c9ea3e4a51c15","date":1496411842,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/cloud/autoscaling/Clause#compareTo(Clause).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/cloud/autoscaling/Clause#compareTo(Clause).mjava","sourceNew":"  @Override\n  public int compareTo(Clause that) {\n    try {\n      int v = Integer.compare(this.tag.op.priority, that.tag.op.priority);\n      if (v != 0) return v;\n      if (this.isPerCollectiontag() && that.isPerCollectiontag()) {\n        v = Integer.compare(this.replica.op.priority, that.replica.op.priority);\n        if (v == 0) {\n          v = Long.compare((Long) this.replica.val, (Long) that.replica.val);\n          v = this.replica.op == LESS_THAN ? v : v * -1;\n        }\n        return v;\n      } else {\n        return 0;\n      }\n    } catch (NullPointerException e) {\n      throw e;\n    }\n  }\n\n","sourceOld":"  @Override\n  public int compareTo(Clause that) {\n    try {\n      int v = Integer.compare(this.tag.op.priority, that.tag.op.priority);\n      if (v != 0) return v;\n      if (this.isPerCollectiontag() && that.isPerCollectiontag()) {\n        v = Integer.compare(this.replica.op.priority, that.replica.op.priority);\n        if (v == 0) {\n          v = Integer.compare((Integer) this.replica.val, (Integer) that.replica.val);\n          v = this.replica.op == LESS_THAN ? v : v * -1;\n        }\n        return v;\n      } else {\n        return 0;\n      }\n    } catch (NullPointerException e) {\n      throw e;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"74aea047dff7f7c38a2d766827bd20d356f98c6a","date":1496721416,"type":0,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"solr/solrj/src/java/org/apache/solr/cloud/autoscaling/Clause#compareTo(Clause).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public int compareTo(Clause that) {\n    try {\n      int v = Integer.compare(this.tag.op.priority, that.tag.op.priority);\n      if (v != 0) return v;\n      if (this.isPerCollectiontag() && that.isPerCollectiontag()) {\n        v = Integer.compare(this.replica.op.priority, that.replica.op.priority);\n        if (v == 0) {\n          v = Long.compare((Long) this.replica.val, (Long) that.replica.val);\n          v = this.replica.op == LESS_THAN ? v : v * -1;\n        }\n        return v;\n      } else {\n        return 0;\n      }\n    } catch (NullPointerException e) {\n      throw e;\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e9017cf144952056066919f1ebc7897ff9bd71b1","date":1496757600,"type":3,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"solr/solrj/src/java/org/apache/solr/cloud/autoscaling/Clause#compareTo(Clause).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/cloud/autoscaling/Clause#compareTo(Clause).mjava","sourceNew":"  @Override\n  public int compareTo(Clause that) {\n    try {\n      int v = Integer.compare(this.tag.op.priority, that.tag.op.priority);\n      if (v != 0) return v;\n      if (this.isPerCollectiontag() && that.isPerCollectiontag()) {\n        v = Integer.compare(this.replica.op.priority, that.replica.op.priority);\n        if (v == 0) {\n          v = Long.compare((Long) this.replica.val, (Long) that.replica.val);\n          v = this.replica.op == LESS_THAN ? v : v * -1;\n        }\n        return v;\n      } else {\n        return 0;\n      }\n    } catch (NullPointerException e) {\n      throw e;\n    }\n  }\n\n","sourceOld":"  @Override\n  public int compareTo(Clause that) {\n    try {\n      int v = Integer.compare(this.tag.op.priority, that.tag.op.priority);\n      if (v != 0) return v;\n      if (this.isPerCollectiontag() && that.isPerCollectiontag()) {\n        v = Integer.compare(this.replica.op.priority, that.replica.op.priority);\n        if (v == 0) {\n          v = Integer.compare((Integer) this.replica.val, (Integer) that.replica.val);\n          v = this.replica.op == LESS_THAN ? v : v * -1;\n        }\n        return v;\n      } else {\n        return 0;\n      }\n    } catch (NullPointerException e) {\n      throw e;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1852ff897aecd2f7c8376a02aedfd44104533f28","date":1498224361,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/cloud/autoscaling/Clause#compareTo(Clause).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/cloud/autoscaling/Clause#compareTo(Clause).mjava","sourceNew":"  @Override\n  public int compareTo(Clause that) {\n    int v = Integer.compare(this.tag.op.priority, that.tag.op.priority);\n    if (v != 0) return v;\n    if (this.isPerCollectiontag() && that.isPerCollectiontag()) {\n      v = Integer.compare(this.replica.op.priority, that.replica.op.priority);\n      if (v == 0) {// higher the number of replicas , harder to satisfy\n        v = Long.compare((Long) this.replica.val, (Long) that.replica.val);\n        v = this.replica.op == LESS_THAN ? v : v * -1;\n      }\n      if (v == 0) v = compareTypes(this.type, that.type);\n      return v;\n    } else {\n      return 0;\n    }\n\n  }\n\n","sourceOld":"  @Override\n  public int compareTo(Clause that) {\n    try {\n      int v = Integer.compare(this.tag.op.priority, that.tag.op.priority);\n      if (v != 0) return v;\n      if (this.isPerCollectiontag() && that.isPerCollectiontag()) {\n        v = Integer.compare(this.replica.op.priority, that.replica.op.priority);\n        if (v == 0) {\n          v = Long.compare((Long) this.replica.val, (Long) that.replica.val);\n          v = this.replica.op == LESS_THAN ? v : v * -1;\n        }\n        return v;\n      } else {\n        return 0;\n      }\n    } catch (NullPointerException e) {\n      throw e;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6249f3a9e6b3580715fd7ab5f4da0bf6e096f8f2","date":1498616740,"type":5,"author":"Ishan Chattopadhyaya","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/cloud/autoscaling/Clause#compareTo(Clause).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/cloud/autoscaling/Clause#compareTo(Clause).mjava","sourceNew":"  @Override\n  public int compareTo(Clause that) {\n    try {\n      int v = Integer.compare(this.tag.op.priority, that.tag.op.priority);\n      if (v != 0) return v;\n      if (this.isPerCollectiontag() && that.isPerCollectiontag()) {\n        v = Integer.compare(this.replica.op.priority, that.replica.op.priority);\n        if (v == 0) {\n          v = Long.compare((Long) this.replica.val, (Long) that.replica.val);\n          v = this.replica.op == LESS_THAN ? v : v * -1;\n        }\n        return v;\n      } else {\n        return 0;\n      }\n    } catch (NullPointerException e) {\n      throw e;\n    }\n  }\n\n","sourceOld":"  @Override\n  public int compareTo(Clause that) {\n    try {\n      int v = Integer.compare(this.tag.op.priority, that.tag.op.priority);\n      if (v != 0) return v;\n      if (this.isPerCollectiontag() && that.isPerCollectiontag()) {\n        v = Integer.compare(this.replica.op.priority, that.replica.op.priority);\n        if (v == 0) {\n          v = Long.compare((Long) this.replica.val, (Long) that.replica.val);\n          v = this.replica.op == LESS_THAN ? v : v * -1;\n        }\n        return v;\n      } else {\n        return 0;\n      }\n    } catch (NullPointerException e) {\n      throw e;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"98f11c416d30e556e0004a9a84960702d12d35b1","date":1498628359,"type":5,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/cloud/autoscaling/Clause#compareTo(Clause).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/cloud/autoscaling/Clause#compareTo(Clause).mjava","sourceNew":"  @Override\n  public int compareTo(Clause that) {\n    int v = Integer.compare(this.tag.op.priority, that.tag.op.priority);\n    if (v != 0) return v;\n    if (this.isPerCollectiontag() && that.isPerCollectiontag()) {\n      v = Integer.compare(this.replica.op.priority, that.replica.op.priority);\n      if (v == 0) {// higher the number of replicas , harder to satisfy\n        v = Long.compare((Long) this.replica.val, (Long) that.replica.val);\n        v = this.replica.op == LESS_THAN ? v : v * -1;\n      }\n      if (v == 0) v = compareTypes(this.type, that.type);\n      return v;\n    } else {\n      return 0;\n    }\n\n  }\n\n","sourceOld":"  @Override\n  public int compareTo(Clause that) {\n    int v = Integer.compare(this.tag.op.priority, that.tag.op.priority);\n    if (v != 0) return v;\n    if (this.isPerCollectiontag() && that.isPerCollectiontag()) {\n      v = Integer.compare(this.replica.op.priority, that.replica.op.priority);\n      if (v == 0) {// higher the number of replicas , harder to satisfy\n        v = Long.compare((Long) this.replica.val, (Long) that.replica.val);\n        v = this.replica.op == LESS_THAN ? v : v * -1;\n      }\n      if (v == 0) v = compareTypes(this.type, that.type);\n      return v;\n    } else {\n      return 0;\n    }\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"6249f3a9e6b3580715fd7ab5f4da0bf6e096f8f2":["74aea047dff7f7c38a2d766827bd20d356f98c6a"],"0126e386bbcccd3e2fb0a93ac12c9ea3e4a51c15":["a513b6a92751e54c76fb5447948c9e7d437163a7"],"a4b9ebbc68c1b39e292c3efe82bfa15e372351b4":["8439b737e0aa59b02fd1f14b436d75050e70076f"],"901d2a2f2fe0ff00c1c8578904e1f42e6ccbb21b":["a4b9ebbc68c1b39e292c3efe82bfa15e372351b4"],"e9017cf144952056066919f1ebc7897ff9bd71b1":["901d2a2f2fe0ff00c1c8578904e1f42e6ccbb21b","74aea047dff7f7c38a2d766827bd20d356f98c6a"],"1852ff897aecd2f7c8376a02aedfd44104533f28":["e9017cf144952056066919f1ebc7897ff9bd71b1"],"8439b737e0aa59b02fd1f14b436d75050e70076f":["653c1ca305e0065ee988a09e59c8316b8cde02fd"],"74aea047dff7f7c38a2d766827bd20d356f98c6a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","0126e386bbcccd3e2fb0a93ac12c9ea3e4a51c15"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a513b6a92751e54c76fb5447948c9e7d437163a7":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"653c1ca305e0065ee988a09e59c8316b8cde02fd":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"98f11c416d30e556e0004a9a84960702d12d35b1":["1852ff897aecd2f7c8376a02aedfd44104533f28","6249f3a9e6b3580715fd7ab5f4da0bf6e096f8f2"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"6249f3a9e6b3580715fd7ab5f4da0bf6e096f8f2":["98f11c416d30e556e0004a9a84960702d12d35b1"],"0126e386bbcccd3e2fb0a93ac12c9ea3e4a51c15":["74aea047dff7f7c38a2d766827bd20d356f98c6a"],"a4b9ebbc68c1b39e292c3efe82bfa15e372351b4":["901d2a2f2fe0ff00c1c8578904e1f42e6ccbb21b"],"901d2a2f2fe0ff00c1c8578904e1f42e6ccbb21b":["e9017cf144952056066919f1ebc7897ff9bd71b1"],"e9017cf144952056066919f1ebc7897ff9bd71b1":["1852ff897aecd2f7c8376a02aedfd44104533f28"],"8439b737e0aa59b02fd1f14b436d75050e70076f":["a4b9ebbc68c1b39e292c3efe82bfa15e372351b4"],"1852ff897aecd2f7c8376a02aedfd44104533f28":["98f11c416d30e556e0004a9a84960702d12d35b1"],"74aea047dff7f7c38a2d766827bd20d356f98c6a":["6249f3a9e6b3580715fd7ab5f4da0bf6e096f8f2","e9017cf144952056066919f1ebc7897ff9bd71b1"],"a513b6a92751e54c76fb5447948c9e7d437163a7":["0126e386bbcccd3e2fb0a93ac12c9ea3e4a51c15"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["74aea047dff7f7c38a2d766827bd20d356f98c6a","a513b6a92751e54c76fb5447948c9e7d437163a7","653c1ca305e0065ee988a09e59c8316b8cde02fd","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"653c1ca305e0065ee988a09e59c8316b8cde02fd":["8439b737e0aa59b02fd1f14b436d75050e70076f"],"98f11c416d30e556e0004a9a84960702d12d35b1":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["98f11c416d30e556e0004a9a84960702d12d35b1","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}