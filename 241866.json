{"path":"lucene/contrib/analyzers/smartcn/src/java/org/apache/lucene/analysis/cn/smart/SmartChineseAnalyzer#reusableTokenStream(String,Reader).mjava","commits":[{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/contrib/analyzers/smartcn/src/java/org/apache/lucene/analysis/cn/smart/SmartChineseAnalyzer#reusableTokenStream(String,Reader).mjava","pathOld":"contrib/analyzers/smartcn/src/java/org/apache/lucene/analysis/cn/smart/SmartChineseAnalyzer#reusableTokenStream(String,Reader).mjava","sourceNew":"  @Override\n  public TokenStream reusableTokenStream(String fieldName, Reader reader)\n      throws IOException {\n    SavedStreams streams = (SavedStreams) getPreviousTokenStream();\n    if (streams == null) {\n      streams = new SavedStreams();\n      setPreviousTokenStream(streams);\n      streams.tokenStream = new SentenceTokenizer(reader);\n      streams.filteredTokenStream = new WordTokenFilter(streams.tokenStream);\n      streams.filteredTokenStream = new PorterStemFilter(streams.filteredTokenStream);\n      if (!stopWords.isEmpty()) {\n        streams.filteredTokenStream = new StopFilter(matchVersion, streams.filteredTokenStream, stopWords, false);\n      }\n    } else {\n      streams.tokenStream.reset(reader);\n      streams.filteredTokenStream.reset(); // reset WordTokenFilter's state\n    }\n\n    return streams.filteredTokenStream;\n  }\n\n","sourceOld":"  @Override\n  public TokenStream reusableTokenStream(String fieldName, Reader reader)\n      throws IOException {\n    SavedStreams streams = (SavedStreams) getPreviousTokenStream();\n    if (streams == null) {\n      streams = new SavedStreams();\n      setPreviousTokenStream(streams);\n      streams.tokenStream = new SentenceTokenizer(reader);\n      streams.filteredTokenStream = new WordTokenFilter(streams.tokenStream);\n      streams.filteredTokenStream = new PorterStemFilter(streams.filteredTokenStream);\n      if (!stopWords.isEmpty()) {\n        streams.filteredTokenStream = new StopFilter(matchVersion, streams.filteredTokenStream, stopWords, false);\n      }\n    } else {\n      streams.tokenStream.reset(reader);\n      streams.filteredTokenStream.reset(); // reset WordTokenFilter's state\n    }\n\n    return streams.filteredTokenStream;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0f080986da691a3bba7b757f43ab72cdc82b57ce","date":1273069619,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"modules/analysis/smartcn/src/java/org/apache/lucene/analysis/cn/smart/SmartChineseAnalyzer#reusableTokenStream(String,Reader).mjava","pathOld":"lucene/contrib/analyzers/smartcn/src/java/org/apache/lucene/analysis/cn/smart/SmartChineseAnalyzer#reusableTokenStream(String,Reader).mjava","sourceNew":"  @Override\n  public TokenStream reusableTokenStream(String fieldName, Reader reader)\n      throws IOException {\n    SavedStreams streams = (SavedStreams) getPreviousTokenStream();\n    if (streams == null) {\n      streams = new SavedStreams();\n      setPreviousTokenStream(streams);\n      streams.tokenStream = new SentenceTokenizer(reader);\n      streams.filteredTokenStream = new WordTokenFilter(streams.tokenStream);\n      streams.filteredTokenStream = new PorterStemFilter(streams.filteredTokenStream);\n      if (!stopWords.isEmpty()) {\n        streams.filteredTokenStream = new StopFilter(matchVersion, streams.filteredTokenStream, stopWords, false);\n      }\n    } else {\n      streams.tokenStream.reset(reader);\n      streams.filteredTokenStream.reset(); // reset WordTokenFilter's state\n    }\n\n    return streams.filteredTokenStream;\n  }\n\n","sourceOld":"  @Override\n  public TokenStream reusableTokenStream(String fieldName, Reader reader)\n      throws IOException {\n    SavedStreams streams = (SavedStreams) getPreviousTokenStream();\n    if (streams == null) {\n      streams = new SavedStreams();\n      setPreviousTokenStream(streams);\n      streams.tokenStream = new SentenceTokenizer(reader);\n      streams.filteredTokenStream = new WordTokenFilter(streams.tokenStream);\n      streams.filteredTokenStream = new PorterStemFilter(streams.filteredTokenStream);\n      if (!stopWords.isEmpty()) {\n        streams.filteredTokenStream = new StopFilter(matchVersion, streams.filteredTokenStream, stopWords, false);\n      }\n    } else {\n      streams.tokenStream.reset(reader);\n      streams.filteredTokenStream.reset(); // reset WordTokenFilter's state\n    }\n\n    return streams.filteredTokenStream;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"0f080986da691a3bba7b757f43ab72cdc82b57ce":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["0f080986da691a3bba7b757f43ab72cdc82b57ce"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"0f080986da691a3bba7b757f43ab72cdc82b57ce":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["0f080986da691a3bba7b757f43ab72cdc82b57ce"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}