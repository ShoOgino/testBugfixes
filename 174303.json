{"path":"contrib/queries/src/java/org/apache/lucene/search/similar/MoreLikeThisQuery#rewrite(IndexReader).mjava","commits":[{"id":"d3c3c2404d1200c39220fa15054fae854db4e1ee","date":1140827958,"type":0,"author":"Mark Harwood","isMerge":false,"pathNew":"contrib/queries/src/java/org/apache/lucene/search/similar/MoreLikeThisQuery#rewrite(IndexReader).mjava","pathOld":"/dev/null","sourceNew":"    public Query rewrite(IndexReader reader) throws IOException\r\n    {\r\n        MoreLikeThis mlt=new MoreLikeThis(reader);\r\n        \r\n        mlt.setFieldNames(moreLikeFields);\r\n        mlt.setAnalyzer(analyzer);\r\n        mlt.setMinTermFreq(minTermFrequency);\r\n        mlt.setMaxQueryTerms(maxQueryTerms);\r\n        BooleanQuery bq= (BooleanQuery) mlt.like(new ByteArrayInputStream(likeText.getBytes()));        \r\n        BooleanClause[] clauses = bq.getClauses();\r\n        //make at least half the terms match\r\n        bq.setMinimumNumberShouldMatch((int)(clauses.length*percentTermsToMatch));\r\n        return bq;\r\n    }\r\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7acb6449cf0b2c3d36f7d7ab5d173dc3300e42a7","date":1152738169,"type":3,"author":"Mark Harwood","isMerge":false,"pathNew":"contrib/queries/src/java/org/apache/lucene/search/similar/MoreLikeThisQuery#rewrite(IndexReader).mjava","pathOld":"contrib/queries/src/java/org/apache/lucene/search/similar/MoreLikeThisQuery#rewrite(IndexReader).mjava","sourceNew":"    public Query rewrite(IndexReader reader) throws IOException\r\n    {\r\n        MoreLikeThis mlt=new MoreLikeThis(reader);\r\n        \r\n        mlt.setFieldNames(moreLikeFields);\r\n        mlt.setAnalyzer(analyzer);\r\n        mlt.setMinTermFreq(minTermFrequency);\r\n        mlt.setMaxQueryTerms(maxQueryTerms);\r\n        mlt.setStopWords(stopWords);\r\n        BooleanQuery bq= (BooleanQuery) mlt.like(new ByteArrayInputStream(likeText.getBytes()));        \r\n        BooleanClause[] clauses = bq.getClauses();\r\n        //make at least half the terms match\r\n        bq.setMinimumNumberShouldMatch((int)(clauses.length*percentTermsToMatch));\r\n        return bq;\r\n    }\r\n\n","sourceOld":"    public Query rewrite(IndexReader reader) throws IOException\r\n    {\r\n        MoreLikeThis mlt=new MoreLikeThis(reader);\r\n        \r\n        mlt.setFieldNames(moreLikeFields);\r\n        mlt.setAnalyzer(analyzer);\r\n        mlt.setMinTermFreq(minTermFrequency);\r\n        mlt.setMaxQueryTerms(maxQueryTerms);\r\n        BooleanQuery bq= (BooleanQuery) mlt.like(new ByteArrayInputStream(likeText.getBytes()));        \r\n        BooleanClause[] clauses = bq.getClauses();\r\n        //make at least half the terms match\r\n        bq.setMinimumNumberShouldMatch((int)(clauses.length*percentTermsToMatch));\r\n        return bq;\r\n    }\r\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5a90cc8f220330c2def1d91a24b75545cedf6230","date":1181254417,"type":3,"author":"Mark Harwood","isMerge":false,"pathNew":"contrib/queries/src/java/org/apache/lucene/search/similar/MoreLikeThisQuery#rewrite(IndexReader).mjava","pathOld":"contrib/queries/src/java/org/apache/lucene/search/similar/MoreLikeThisQuery#rewrite(IndexReader).mjava","sourceNew":"    public Query rewrite(IndexReader reader) throws IOException\r\n    {\r\n        MoreLikeThis mlt=new MoreLikeThis(reader);\r\n        \r\n        mlt.setFieldNames(moreLikeFields);\r\n        mlt.setAnalyzer(analyzer);\r\n        mlt.setMinTermFreq(minTermFrequency);\r\n        if(minDocFreq>=0)\r\n        {\r\n        \tmlt.setMinDocFreq(minDocFreq);\r\n        }        \r\n        mlt.setMaxQueryTerms(maxQueryTerms);\r\n        mlt.setStopWords(stopWords);\r\n        BooleanQuery bq= (BooleanQuery) mlt.like(new ByteArrayInputStream(likeText.getBytes()));        \r\n        BooleanClause[] clauses = bq.getClauses();\r\n        //make at least half the terms match\r\n        bq.setMinimumNumberShouldMatch((int)(clauses.length*percentTermsToMatch));\r\n        return bq;\r\n    }\r\n\n","sourceOld":"    public Query rewrite(IndexReader reader) throws IOException\r\n    {\r\n        MoreLikeThis mlt=new MoreLikeThis(reader);\r\n        \r\n        mlt.setFieldNames(moreLikeFields);\r\n        mlt.setAnalyzer(analyzer);\r\n        mlt.setMinTermFreq(minTermFrequency);\r\n        mlt.setMaxQueryTerms(maxQueryTerms);\r\n        mlt.setStopWords(stopWords);\r\n        BooleanQuery bq= (BooleanQuery) mlt.like(new ByteArrayInputStream(likeText.getBytes()));        \r\n        BooleanClause[] clauses = bq.getClauses();\r\n        //make at least half the terms match\r\n        bq.setMinimumNumberShouldMatch((int)(clauses.length*percentTermsToMatch));\r\n        return bq;\r\n    }\r\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6a361a621b184d9b73c9c9a37323a9845b8f8260","date":1226370946,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"contrib/queries/src/java/org/apache/lucene/search/similar/MoreLikeThisQuery#rewrite(IndexReader).mjava","pathOld":"contrib/queries/src/java/org/apache/lucene/search/similar/MoreLikeThisQuery#rewrite(IndexReader).mjava","sourceNew":"    public Query rewrite(IndexReader reader) throws IOException\n    {\n        MoreLikeThis mlt=new MoreLikeThis(reader);\n        \n        mlt.setFieldNames(moreLikeFields);\n        mlt.setAnalyzer(analyzer);\n        mlt.setMinTermFreq(minTermFrequency);\n        if(minDocFreq>=0)\n        {\n        \tmlt.setMinDocFreq(minDocFreq);\n        }        \n        mlt.setMaxQueryTerms(maxQueryTerms);\n        mlt.setStopWords(stopWords);\n        BooleanQuery bq= (BooleanQuery) mlt.like(new ByteArrayInputStream(likeText.getBytes()));        \n        BooleanClause[] clauses = bq.getClauses();\n        //make at least half the terms match\n        bq.setMinimumNumberShouldMatch((int)(clauses.length*percentTermsToMatch));\n        return bq;\n    }\n\n","sourceOld":"    public Query rewrite(IndexReader reader) throws IOException\r\n    {\r\n        MoreLikeThis mlt=new MoreLikeThis(reader);\r\n        \r\n        mlt.setFieldNames(moreLikeFields);\r\n        mlt.setAnalyzer(analyzer);\r\n        mlt.setMinTermFreq(minTermFrequency);\r\n        if(minDocFreq>=0)\r\n        {\r\n        \tmlt.setMinDocFreq(minDocFreq);\r\n        }        \r\n        mlt.setMaxQueryTerms(maxQueryTerms);\r\n        mlt.setStopWords(stopWords);\r\n        BooleanQuery bq= (BooleanQuery) mlt.like(new ByteArrayInputStream(likeText.getBytes()));        \r\n        BooleanClause[] clauses = bq.getClauses();\r\n        //make at least half the terms match\r\n        bq.setMinimumNumberShouldMatch((int)(clauses.length*percentTermsToMatch));\r\n        return bq;\r\n    }\r\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d57eb7c98c08c03af6e4cd83509df31c81ac16af","date":1257684312,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"contrib/queries/src/java/org/apache/lucene/search/similar/MoreLikeThisQuery#rewrite(IndexReader).mjava","pathOld":"contrib/queries/src/java/org/apache/lucene/search/similar/MoreLikeThisQuery#rewrite(IndexReader).mjava","sourceNew":"    @Override\n    public Query rewrite(IndexReader reader) throws IOException\n    {\n        MoreLikeThis mlt=new MoreLikeThis(reader);\n        \n        mlt.setFieldNames(moreLikeFields);\n        mlt.setAnalyzer(analyzer);\n        mlt.setMinTermFreq(minTermFrequency);\n        if(minDocFreq>=0)\n        {\n        \tmlt.setMinDocFreq(minDocFreq);\n        }        \n        mlt.setMaxQueryTerms(maxQueryTerms);\n        mlt.setStopWords(stopWords);\n        BooleanQuery bq= (BooleanQuery) mlt.like(new ByteArrayInputStream(likeText.getBytes()));        \n        BooleanClause[] clauses = bq.getClauses();\n        //make at least half the terms match\n        bq.setMinimumNumberShouldMatch((int)(clauses.length*percentTermsToMatch));\n        return bq;\n    }\n\n","sourceOld":"    public Query rewrite(IndexReader reader) throws IOException\n    {\n        MoreLikeThis mlt=new MoreLikeThis(reader);\n        \n        mlt.setFieldNames(moreLikeFields);\n        mlt.setAnalyzer(analyzer);\n        mlt.setMinTermFreq(minTermFrequency);\n        if(minDocFreq>=0)\n        {\n        \tmlt.setMinDocFreq(minDocFreq);\n        }        \n        mlt.setMaxQueryTerms(maxQueryTerms);\n        mlt.setStopWords(stopWords);\n        BooleanQuery bq= (BooleanQuery) mlt.like(new ByteArrayInputStream(likeText.getBytes()));        \n        BooleanClause[] clauses = bq.getClauses();\n        //make at least half the terms match\n        bq.setMinimumNumberShouldMatch((int)(clauses.length*percentTermsToMatch));\n        return bq;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/contrib/queries/src/java/org/apache/lucene/search/similar/MoreLikeThisQuery#rewrite(IndexReader).mjava","pathOld":"contrib/queries/src/java/org/apache/lucene/search/similar/MoreLikeThisQuery#rewrite(IndexReader).mjava","sourceNew":"    @Override\n    public Query rewrite(IndexReader reader) throws IOException\n    {\n        MoreLikeThis mlt=new MoreLikeThis(reader);\n        \n        mlt.setFieldNames(moreLikeFields);\n        mlt.setAnalyzer(analyzer);\n        mlt.setMinTermFreq(minTermFrequency);\n        if(minDocFreq>=0)\n        {\n        \tmlt.setMinDocFreq(minDocFreq);\n        }        \n        mlt.setMaxQueryTerms(maxQueryTerms);\n        mlt.setStopWords(stopWords);\n        BooleanQuery bq= (BooleanQuery) mlt.like(new ByteArrayInputStream(likeText.getBytes()));        \n        BooleanClause[] clauses = bq.getClauses();\n        //make at least half the terms match\n        bq.setMinimumNumberShouldMatch((int)(clauses.length*percentTermsToMatch));\n        return bq;\n    }\n\n","sourceOld":"    @Override\n    public Query rewrite(IndexReader reader) throws IOException\n    {\n        MoreLikeThis mlt=new MoreLikeThis(reader);\n        \n        mlt.setFieldNames(moreLikeFields);\n        mlt.setAnalyzer(analyzer);\n        mlt.setMinTermFreq(minTermFrequency);\n        if(minDocFreq>=0)\n        {\n        \tmlt.setMinDocFreq(minDocFreq);\n        }        \n        mlt.setMaxQueryTerms(maxQueryTerms);\n        mlt.setStopWords(stopWords);\n        BooleanQuery bq= (BooleanQuery) mlt.like(new ByteArrayInputStream(likeText.getBytes()));        \n        BooleanClause[] clauses = bq.getClauses();\n        //make at least half the terms match\n        bq.setMinimumNumberShouldMatch((int)(clauses.length*percentTermsToMatch));\n        return bq;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"7acb6449cf0b2c3d36f7d7ab5d173dc3300e42a7":["d3c3c2404d1200c39220fa15054fae854db4e1ee"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"5a90cc8f220330c2def1d91a24b75545cedf6230":["7acb6449cf0b2c3d36f7d7ab5d173dc3300e42a7"],"d57eb7c98c08c03af6e4cd83509df31c81ac16af":["6a361a621b184d9b73c9c9a37323a9845b8f8260"],"6a361a621b184d9b73c9c9a37323a9845b8f8260":["5a90cc8f220330c2def1d91a24b75545cedf6230"],"d3c3c2404d1200c39220fa15054fae854db4e1ee":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["d57eb7c98c08c03af6e4cd83509df31c81ac16af"]},"commit2Childs":{"7acb6449cf0b2c3d36f7d7ab5d173dc3300e42a7":["5a90cc8f220330c2def1d91a24b75545cedf6230"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["d3c3c2404d1200c39220fa15054fae854db4e1ee"],"5a90cc8f220330c2def1d91a24b75545cedf6230":["6a361a621b184d9b73c9c9a37323a9845b8f8260"],"d3c3c2404d1200c39220fa15054fae854db4e1ee":["7acb6449cf0b2c3d36f7d7ab5d173dc3300e42a7"],"d57eb7c98c08c03af6e4cd83509df31c81ac16af":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"6a361a621b184d9b73c9c9a37323a9845b8f8260":["d57eb7c98c08c03af6e4cd83509df31c81ac16af"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}