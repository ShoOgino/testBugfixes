{"path":"src/java/org/apache/lucene/search/DocIdSetIterator#nextDoc().mjava","commits":[{"id":"30a558487f2298c2c19ceca9103c1b6865d64708","date":1244393921,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/search/DocIdSetIterator#nextDoc().mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Advances to the next document in the set and returns the doc it is\n   * currently on, or {@link #NO_MORE_DOCS} if there are no more docs in the\n   * set.<br>\n   * \n   * <b>NOTE:</b> in 3.0 this method will become abstract, following the removal\n   * of {@link #next()}. For backward compatibility it is implemented as:\n   * \n   * <pre>\n   * public int nextDoc() throws IOException {\n   *   return next() ? doc() : NO_MORE_DOCS;\n   * }\n   * </pre>\n   * \n   * <b>NOTE:</b> after the iterator has exhausted you should not call this\n   * method, as it may result in unpredicted behavior.\n   * \n   * @since 2.9\n   */\n  public int nextDoc() throws IOException {\n    return doc = next() ? doc() : NO_MORE_DOCS;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"438aef2dc00a23f2716882753fe225fbce4cfbfc","date":1255281460,"type":3,"author":"Michael Busch","isMerge":false,"pathNew":"src/java/org/apache/lucene/search/DocIdSetIterator#nextDoc().mjava","pathOld":"src/java/org/apache/lucene/search/DocIdSetIterator#nextDoc().mjava","sourceNew":"  /**\n   * Advances to the next document in the set and returns the doc it is\n   * currently on, or {@link #NO_MORE_DOCS} if there are no more docs in the\n   * set.<br>\n   * \n   * <b>NOTE:</b> after the iterator has exhausted you should not call this\n   * method, as it may result in unpredicted behavior.\n   * \n   * @since 2.9\n   */\n  public abstract int nextDoc() throws IOException;\n\n","sourceOld":"  /**\n   * Advances to the next document in the set and returns the doc it is\n   * currently on, or {@link #NO_MORE_DOCS} if there are no more docs in the\n   * set.<br>\n   * \n   * <b>NOTE:</b> in 3.0 this method will become abstract, following the removal\n   * of {@link #next()}. For backward compatibility it is implemented as:\n   * \n   * <pre>\n   * public int nextDoc() throws IOException {\n   *   return next() ? doc() : NO_MORE_DOCS;\n   * }\n   * </pre>\n   * \n   * <b>NOTE:</b> after the iterator has exhausted you should not call this\n   * method, as it may result in unpredicted behavior.\n   * \n   * @since 2.9\n   */\n  public int nextDoc() throws IOException {\n    return doc = next() ? doc() : NO_MORE_DOCS;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/search/DocIdSetIterator#nextDoc().mjava","pathOld":"src/java/org/apache/lucene/search/DocIdSetIterator#nextDoc().mjava","sourceNew":"  /**\n   * Advances to the next document in the set and returns the doc it is\n   * currently on, or {@link #NO_MORE_DOCS} if there are no more docs in the\n   * set.<br>\n   * \n   * <b>NOTE:</b> after the iterator has exhausted you should not call this\n   * method, as it may result in unpredicted behavior.\n   * \n   * @since 2.9\n   */\n  public abstract int nextDoc() throws IOException;\n\n","sourceOld":"  /**\n   * Advances to the next document in the set and returns the doc it is\n   * currently on, or {@link #NO_MORE_DOCS} if there are no more docs in the\n   * set.<br>\n   * \n   * <b>NOTE:</b> after the iterator has exhausted you should not call this\n   * method, as it may result in unpredicted behavior.\n   * \n   * @since 2.9\n   */\n  public abstract int nextDoc() throws IOException;\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"30a558487f2298c2c19ceca9103c1b6865d64708":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"438aef2dc00a23f2716882753fe225fbce4cfbfc":["30a558487f2298c2c19ceca9103c1b6865d64708"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["438aef2dc00a23f2716882753fe225fbce4cfbfc"]},"commit2Childs":{"30a558487f2298c2c19ceca9103c1b6865d64708":["438aef2dc00a23f2716882753fe225fbce4cfbfc"],"438aef2dc00a23f2716882753fe225fbce4cfbfc":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["30a558487f2298c2c19ceca9103c1b6865d64708"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}