{"path":"solr/core/src/java/org/apache/solr/security/RuleBasedAuthorizationPluginBase#init(Map[String,Object]).mjava","commits":[{"id":"8076096f334b0665d0a69a63ee98ac09baad402b","date":1589405373,"type":0,"author":"Jan HÃ¸ydahl","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/security/RuleBasedAuthorizationPluginBase#init(Map[String,Object]).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public void init(Map<String, Object> initInfo) {\n    mapping.put(null, new WildCardSupportMap());\n    List<Map> perms = getListValue(initInfo, \"permissions\");\n    for (Map o : perms) {\n      Permission p;\n      try {\n        p = Permission.load(o);\n      } catch (Exception exp) {\n        log.error(\"Invalid permission \", exp);\n        continue;\n      }\n      permissions.add(p);\n      add2Mapping(p);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"06a8891f085f71282bb3ece1b1732b68f07813a3","date":1591912889,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/security/RuleBasedAuthorizationPluginBase#init(Map[String,Object]).mjava","pathOld":"solr/core/src/java/org/apache/solr/security/RuleBasedAuthorizationPluginBase#init(Map[String,Object]).mjava","sourceNew":"  @Override\n  @SuppressWarnings({\"unchecked\"})\n  public void init(@SuppressWarnings({\"rawtypes\"})Map<String, Object> initInfo) {\n    mapping.put(null, new WildCardSupportMap());\n    @SuppressWarnings({\"rawtypes\"})\n    List<Map> perms = getListValue(initInfo, \"permissions\");\n    for (@SuppressWarnings({\"rawtypes\"})Map o : perms) {\n      Permission p;\n      try {\n        p = Permission.load(o);\n      } catch (Exception exp) {\n        log.error(\"Invalid permission \", exp);\n        continue;\n      }\n      permissions.add(p);\n      add2Mapping(p);\n    }\n  }\n\n","sourceOld":"  @Override\n  public void init(Map<String, Object> initInfo) {\n    mapping.put(null, new WildCardSupportMap());\n    List<Map> perms = getListValue(initInfo, \"permissions\");\n    for (Map o : perms) {\n      Permission p;\n      try {\n        p = Permission.load(o);\n      } catch (Exception exp) {\n        log.error(\"Invalid permission \", exp);\n        continue;\n      }\n      permissions.add(p);\n      add2Mapping(p);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5e0ac06a3dde3a146042d8eb8820dc45326e9263","date":1594139870,"type":3,"author":"Mike Drob","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/security/RuleBasedAuthorizationPluginBase#init(Map[String,Object]).mjava","pathOld":"solr/core/src/java/org/apache/solr/security/RuleBasedAuthorizationPluginBase#init(Map[String,Object]).mjava","sourceNew":"  @Override\n  @SuppressWarnings({\"unchecked\"})\n  public void init(Map<String, Object> initInfo) {\n    mapping.put(null, new WildCardSupportMap());\n    @SuppressWarnings({\"rawtypes\"})\n    List<Map> perms = getListValue(initInfo, \"permissions\");\n    for (@SuppressWarnings({\"rawtypes\"})Map o : perms) {\n      Permission p;\n      try {\n        p = Permission.load(o);\n      } catch (Exception exp) {\n        log.error(\"Invalid permission \", exp);\n        continue;\n      }\n      add2Mapping(p);\n    }\n  }\n\n","sourceOld":"  @Override\n  @SuppressWarnings({\"unchecked\"})\n  public void init(@SuppressWarnings({\"rawtypes\"})Map<String, Object> initInfo) {\n    mapping.put(null, new WildCardSupportMap());\n    @SuppressWarnings({\"rawtypes\"})\n    List<Map> perms = getListValue(initInfo, \"permissions\");\n    for (@SuppressWarnings({\"rawtypes\"})Map o : perms) {\n      Permission p;\n      try {\n        p = Permission.load(o);\n      } catch (Exception exp) {\n        log.error(\"Invalid permission \", exp);\n        continue;\n      }\n      permissions.add(p);\n      add2Mapping(p);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"8076096f334b0665d0a69a63ee98ac09baad402b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"5e0ac06a3dde3a146042d8eb8820dc45326e9263":["06a8891f085f71282bb3ece1b1732b68f07813a3"],"06a8891f085f71282bb3ece1b1732b68f07813a3":["8076096f334b0665d0a69a63ee98ac09baad402b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["5e0ac06a3dde3a146042d8eb8820dc45326e9263"]},"commit2Childs":{"8076096f334b0665d0a69a63ee98ac09baad402b":["06a8891f085f71282bb3ece1b1732b68f07813a3"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["8076096f334b0665d0a69a63ee98ac09baad402b"],"5e0ac06a3dde3a146042d8eb8820dc45326e9263":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"06a8891f085f71282bb3ece1b1732b68f07813a3":["5e0ac06a3dde3a146042d8eb8820dc45326e9263"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}