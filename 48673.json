{"path":"lucene/contrib/queries/src/java/org/apache/lucene/search/FuzzyLikeThisQuery.FuzzyTermQuery#getSimilarity(IndexSearcher).mjava","commits":[{"id":"8b241ea5e635d896cc0af83cd96ffd0322e0aba7","date":1294226200,"type":1,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/contrib/queries/src/java/org/apache/lucene/search/FuzzyLikeThisQuery.FuzzyTermQuery#getSimilarity(IndexSearcher).mjava","pathOld":"lucene/contrib/queries/src/java/org/apache/lucene/search/FuzzyLikeThisQuery.FuzzyTermQuery#getSimilarity(Searcher).mjava","sourceNew":"          @Override\n          public Similarity getSimilarity(IndexSearcher searcher)\n          {            \n              Similarity result = super.getSimilarity(searcher);\n              result = new SimilarityDelegator(result) {\n                  \n                  @Override\n                  public float tf(float freq)\n                  {\n                \t  if(ignoreTF)\n                \t  {\n                          return 1; //ignore tf\n                \t  }\n            \t\t  return super.tf(freq);\n                  }\n                  @Override\n                  public float idf(int docFreq, int numDocs)\n                  {\n                      //IDF is already factored into individual term boosts\n                      return 1;\n                  }               \n              };\n              return result;\n          }        \n\n","sourceOld":"          @Override\n          public Similarity getSimilarity(Searcher searcher)\n          {            \n              Similarity result = super.getSimilarity(searcher);\n              result = new SimilarityDelegator(result) {\n                  \n                  @Override\n                  public float tf(float freq)\n                  {\n                \t  if(ignoreTF)\n                \t  {\n                          return 1; //ignore tf\n                \t  }\n            \t\t  return super.tf(freq);\n                  }\n                  @Override\n                  public float idf(int docFreq, int numDocs)\n                  {\n                      //IDF is already factored into individual term boosts\n                      return 1;\n                  }               \n              };\n              return result;\n          }        \n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"70ad682703b8585f5d0a637efec044d57ec05efb","date":1294259117,"type":0,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/contrib/queries/src/java/org/apache/lucene/search/FuzzyLikeThisQuery.FuzzyTermQuery#getSimilarity(IndexSearcher).mjava","pathOld":"/dev/null","sourceNew":"          @Override\n          public Similarity getSimilarity(IndexSearcher searcher)\n          {            \n              Similarity result = super.getSimilarity(searcher);\n              result = new SimilarityDelegator(result) {\n                  \n                  @Override\n                  public float tf(float freq)\n                  {\n                \t  if(ignoreTF)\n                \t  {\n                          return 1; //ignore tf\n                \t  }\n            \t\t  return super.tf(freq);\n                  }\n                  @Override\n                  public float idf(int docFreq, int numDocs)\n                  {\n                      //IDF is already factored into individual term boosts\n                      return 1;\n                  }               \n              };\n              return result;\n          }        \n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3e00f80591de714c6975f454e33e0fa5218b5902","date":1294514405,"type":4,"author":"Michael McCandless","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/contrib/queries/src/java/org/apache/lucene/search/FuzzyLikeThisQuery.FuzzyTermQuery#getSimilarity(IndexSearcher).mjava","sourceNew":null,"sourceOld":"          @Override\n          public Similarity getSimilarity(IndexSearcher searcher)\n          {            \n              Similarity result = super.getSimilarity(searcher);\n              result = new SimilarityDelegator(result) {\n                  \n                  @Override\n                  public float tf(float freq)\n                  {\n                \t  if(ignoreTF)\n                \t  {\n                          return 1; //ignore tf\n                \t  }\n            \t\t  return super.tf(freq);\n                  }\n                  @Override\n                  public float idf(int docFreq, int numDocs)\n                  {\n                      //IDF is already factored into individual term boosts\n                      return 1;\n                  }               \n              };\n              return result;\n          }        \n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"29ef99d61cda9641b6250bf9567329a6e65f901d","date":1297244127,"type":4,"author":"Simon Willnauer","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/contrib/queries/src/java/org/apache/lucene/search/FuzzyLikeThisQuery.FuzzyTermQuery#getSimilarity(IndexSearcher).mjava","sourceNew":null,"sourceOld":"          @Override\n          public Similarity getSimilarity(IndexSearcher searcher)\n          {            \n              Similarity result = super.getSimilarity(searcher);\n              result = new SimilarityDelegator(result) {\n                  \n                  @Override\n                  public float tf(float freq)\n                  {\n                \t  if(ignoreTF)\n                \t  {\n                          return 1; //ignore tf\n                \t  }\n            \t\t  return super.tf(freq);\n                  }\n                  @Override\n                  public float idf(int docFreq, int numDocs)\n                  {\n                      //IDF is already factored into individual term boosts\n                      return 1;\n                  }               \n              };\n              return result;\n          }        \n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"70ad682703b8585f5d0a637efec044d57ec05efb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","8b241ea5e635d896cc0af83cd96ffd0322e0aba7"],"3e00f80591de714c6975f454e33e0fa5218b5902":["8b241ea5e635d896cc0af83cd96ffd0322e0aba7"],"8b241ea5e635d896cc0af83cd96ffd0322e0aba7":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"29ef99d61cda9641b6250bf9567329a6e65f901d":["70ad682703b8585f5d0a637efec044d57ec05efb","3e00f80591de714c6975f454e33e0fa5218b5902"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3e00f80591de714c6975f454e33e0fa5218b5902"]},"commit2Childs":{"70ad682703b8585f5d0a637efec044d57ec05efb":["29ef99d61cda9641b6250bf9567329a6e65f901d"],"8b241ea5e635d896cc0af83cd96ffd0322e0aba7":["70ad682703b8585f5d0a637efec044d57ec05efb","3e00f80591de714c6975f454e33e0fa5218b5902"],"3e00f80591de714c6975f454e33e0fa5218b5902":["29ef99d61cda9641b6250bf9567329a6e65f901d","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"29ef99d61cda9641b6250bf9567329a6e65f901d":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["70ad682703b8585f5d0a637efec044d57ec05efb","8b241ea5e635d896cc0af83cd96ffd0322e0aba7"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["29ef99d61cda9641b6250bf9567329a6e65f901d","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}