{"path":"backwards/src/test/org/apache/lucene/index/TestNRTReaderWithThreads#testIndexing().mjava","commits":[{"id":"480d01e5b0ef8efb136d51670fec297ae5ae2c9c","date":1268821447,"type":0,"author":"Uwe Schindler","isMerge":false,"pathNew":"backwards/src/test/org/apache/lucene/index/TestNRTReaderWithThreads#testIndexing().mjava","pathOld":"/dev/null","sourceNew":"  public void testIndexing() throws Exception {\n    Directory mainDir = new MockRAMDirectory();\n    IndexWriter writer = new IndexWriter(mainDir, new WhitespaceAnalyzer(),\n        IndexWriter.MaxFieldLength.LIMITED);\n    writer.setUseCompoundFile(false);\n    IndexReader reader = writer.getReader(); // start pooling readers\n    reader.close();\n    writer.setMergeFactor(2);\n    writer.setMaxBufferedDocs(10);\n    RunThread[] indexThreads = new RunThread[4];\n    for (int x=0; x < indexThreads.length; x++) {\n      indexThreads[x] = new RunThread(x % 2, writer);\n      indexThreads[x].setName(\"Thread \" + x);\n      indexThreads[x].start();\n    }    \n    long startTime = System.currentTimeMillis();\n    long duration = 1000;\n    while ((System.currentTimeMillis() - startTime) < duration) {\n      Thread.sleep(100);\n    }\n    int delCount = 0;\n    int addCount = 0;\n    for (int x=0; x < indexThreads.length; x++) {\n      indexThreads[x].run = false;\n      assertNull(\"Exception thrown: \"+indexThreads[x].ex, indexThreads[x].ex);\n      addCount += indexThreads[x].addCount;\n      delCount += indexThreads[x].delCount;\n    }\n    for (int x=0; x < indexThreads.length; x++) {\n      indexThreads[x].join();\n    }\n    for (int x=0; x < indexThreads.length; x++) {\n      assertNull(\"Exception thrown: \"+indexThreads[x].ex, indexThreads[x].ex);\n    }\n    //System.out.println(\"addCount:\"+addCount);\n    //System.out.println(\"delCount:\"+delCount);\n    writer.close();\n    mainDir.close();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/backwards/src/test/org/apache/lucene/index/TestNRTReaderWithThreads#testIndexing().mjava","pathOld":"backwards/src/test/org/apache/lucene/index/TestNRTReaderWithThreads#testIndexing().mjava","sourceNew":"  public void testIndexing() throws Exception {\n    Directory mainDir = new MockRAMDirectory();\n    IndexWriter writer = new IndexWriter(mainDir, new WhitespaceAnalyzer(),\n        IndexWriter.MaxFieldLength.LIMITED);\n    writer.setUseCompoundFile(false);\n    IndexReader reader = writer.getReader(); // start pooling readers\n    reader.close();\n    writer.setMergeFactor(2);\n    writer.setMaxBufferedDocs(10);\n    RunThread[] indexThreads = new RunThread[4];\n    for (int x=0; x < indexThreads.length; x++) {\n      indexThreads[x] = new RunThread(x % 2, writer);\n      indexThreads[x].setName(\"Thread \" + x);\n      indexThreads[x].start();\n    }    \n    long startTime = System.currentTimeMillis();\n    long duration = 1000;\n    while ((System.currentTimeMillis() - startTime) < duration) {\n      Thread.sleep(100);\n    }\n    int delCount = 0;\n    int addCount = 0;\n    for (int x=0; x < indexThreads.length; x++) {\n      indexThreads[x].run = false;\n      assertNull(\"Exception thrown: \"+indexThreads[x].ex, indexThreads[x].ex);\n      addCount += indexThreads[x].addCount;\n      delCount += indexThreads[x].delCount;\n    }\n    for (int x=0; x < indexThreads.length; x++) {\n      indexThreads[x].join();\n    }\n    for (int x=0; x < indexThreads.length; x++) {\n      assertNull(\"Exception thrown: \"+indexThreads[x].ex, indexThreads[x].ex);\n    }\n    //System.out.println(\"addCount:\"+addCount);\n    //System.out.println(\"delCount:\"+delCount);\n    writer.close();\n    mainDir.close();\n  }\n\n","sourceOld":"  public void testIndexing() throws Exception {\n    Directory mainDir = new MockRAMDirectory();\n    IndexWriter writer = new IndexWriter(mainDir, new WhitespaceAnalyzer(),\n        IndexWriter.MaxFieldLength.LIMITED);\n    writer.setUseCompoundFile(false);\n    IndexReader reader = writer.getReader(); // start pooling readers\n    reader.close();\n    writer.setMergeFactor(2);\n    writer.setMaxBufferedDocs(10);\n    RunThread[] indexThreads = new RunThread[4];\n    for (int x=0; x < indexThreads.length; x++) {\n      indexThreads[x] = new RunThread(x % 2, writer);\n      indexThreads[x].setName(\"Thread \" + x);\n      indexThreads[x].start();\n    }    \n    long startTime = System.currentTimeMillis();\n    long duration = 1000;\n    while ((System.currentTimeMillis() - startTime) < duration) {\n      Thread.sleep(100);\n    }\n    int delCount = 0;\n    int addCount = 0;\n    for (int x=0; x < indexThreads.length; x++) {\n      indexThreads[x].run = false;\n      assertNull(\"Exception thrown: \"+indexThreads[x].ex, indexThreads[x].ex);\n      addCount += indexThreads[x].addCount;\n      delCount += indexThreads[x].delCount;\n    }\n    for (int x=0; x < indexThreads.length; x++) {\n      indexThreads[x].join();\n    }\n    for (int x=0; x < indexThreads.length; x++) {\n      assertNull(\"Exception thrown: \"+indexThreads[x].ex, indexThreads[x].ex);\n    }\n    //System.out.println(\"addCount:\"+addCount);\n    //System.out.println(\"delCount:\"+delCount);\n    writer.close();\n    mainDir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"480d01e5b0ef8efb136d51670fec297ae5ae2c9c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["480d01e5b0ef8efb136d51670fec297ae5ae2c9c"]},"commit2Childs":{"480d01e5b0ef8efb136d51670fec297ae5ae2c9c":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["480d01e5b0ef8efb136d51670fec297ae5ae2c9c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}