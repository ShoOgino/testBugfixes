{"path":"solr/core/src/test/org/apache/solr/response/TestChildDocTransformer#testParentFilterXML().mjava","commits":[{"id":"9a862f08ffeb00b03b4c641de86b167b1d6f7cd1","date":1402094642,"type":0,"author":"Chris M. Hostetter","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/response/TestChildDocTransformer#testParentFilterXML().mjava","pathOld":"/dev/null","sourceNew":"  private void testParentFilterXML() {\n\n    String tests[] = new String[] {\n        \"//*[@numFound='2']\",\n        \"/response/result/doc[1]/doc[1]/int[@name='id']='3'\" ,\n        \"/response/result/doc[1]/doc[2]/int[@name='id']='2'\" ,\n        \"/response/result/doc[1]/doc/arr[@name='cat']/str[1]='childDocument'\" ,\n        \"/response/result/doc[1]/doc/arr[@name='title']/str[1]='\" + titleVals[0] + \"'\" ,\n        \"/response/result/doc[2]/doc[1]/int[@name='id']='6'\",\n        \"/response/result/doc[2]/doc[2]/int[@name='id']='5'\",\n        \"/response/result/doc[2]/doc/arr[@name='cat']/str[1]='childDocument'\",\n        \"/response/result/doc[2]/doc/arr[@name='title']/str[1]='\" + titleVals[1] + \"'\"};\n\n    assertQ(req(\"q\", \"*:*\", \"fq\", \"subject:\\\"parentDocument\\\" \",\n        \"fl\", \"*,[child parentFilter=\\\"subject:parentDocument\\\"]\"), tests);\n\n    assertQ(req(\"q\", \"*:*\", \"fq\", \"subject:\\\"parentDocument\\\" \",\n        \"fl\", \"subject,[child parentFilter=\\\"subject:parentDocument\\\"]\"), tests);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7bd5b0172f9653691c0b2f6c50446465766073bb","date":1403547632,"type":3,"author":"Chris M. Hostetter","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/response/TestChildDocTransformer#testParentFilterXML().mjava","pathOld":"solr/core/src/test/org/apache/solr/response/TestChildDocTransformer#testParentFilterXML().mjava","sourceNew":"  private void testParentFilterXML() {\n\n    String tests[] = new String[] {\n        \"//*[@numFound='2']\",\n        \"/response/result/doc[1]/int[@name='id']='1'\" ,\n        \"/response/result/doc[1]/doc[1]/int[@name='id']='2'\" ,\n        \"/response/result/doc[1]/doc[1]/arr[@name='cat']/str[1]='childDocument'\" ,\n        \"/response/result/doc[1]/doc[1]/arr[@name='title']/str[1]='\" + titleVals[0] + \"'\" ,\n        \"/response/result/doc[2]/int[@name='id']='4'\" ,\n        \"/response/result/doc[2]/doc[1]/int[@name='id']='5'\",\n        \"/response/result/doc[2]/doc[1]/arr[@name='cat']/str[1]='childDocument'\",\n        \"/response/result/doc[2]/doc[1]/arr[@name='title']/str[1]='\" + titleVals[1] + \"'\"};\n\n    assertQ(req(\"q\", \"*:*\", \n                \"sort\", \"id asc\",\n                \"fq\", \"subject:\\\"parentDocument\\\" \",\n                \"fl\", \"*,[child childFilter='cat:childDocument' parentFilter=\\\"subject:parentDocument\\\"]\"), \n            tests);\n\n    assertQ(req(\"q\", \"*:*\", \n                \"sort\", \"id asc\",\n                \"fq\", \"subject:\\\"parentDocument\\\" \",\n                \"fl\", \"id,[child childFilter='cat:childDocument' parentFilter=\\\"subject:parentDocument\\\"]\"), \n            tests);\n  }\n\n","sourceOld":"  private void testParentFilterXML() {\n\n    String tests[] = new String[] {\n        \"//*[@numFound='2']\",\n        \"/response/result/doc[1]/doc[1]/int[@name='id']='3'\" ,\n        \"/response/result/doc[1]/doc[2]/int[@name='id']='2'\" ,\n        \"/response/result/doc[1]/doc/arr[@name='cat']/str[1]='childDocument'\" ,\n        \"/response/result/doc[1]/doc/arr[@name='title']/str[1]='\" + titleVals[0] + \"'\" ,\n        \"/response/result/doc[2]/doc[1]/int[@name='id']='6'\",\n        \"/response/result/doc[2]/doc[2]/int[@name='id']='5'\",\n        \"/response/result/doc[2]/doc/arr[@name='cat']/str[1]='childDocument'\",\n        \"/response/result/doc[2]/doc/arr[@name='title']/str[1]='\" + titleVals[1] + \"'\"};\n\n    assertQ(req(\"q\", \"*:*\", \"fq\", \"subject:\\\"parentDocument\\\" \",\n        \"fl\", \"*,[child parentFilter=\\\"subject:parentDocument\\\"]\"), tests);\n\n    assertQ(req(\"q\", \"*:*\", \"fq\", \"subject:\\\"parentDocument\\\" \",\n        \"fl\", \"subject,[child parentFilter=\\\"subject:parentDocument\\\"]\"), tests);\n  }\n\n","bugFix":null,"bugIntro":["817fc4762cd649397b27305970dad27295735f3a","817fc4762cd649397b27305970dad27295735f3a","817fc4762cd649397b27305970dad27295735f3a","817fc4762cd649397b27305970dad27295735f3a"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"561c2351baf6dd64061addef891359954c1a7faa","date":1462788487,"type":5,"author":"Mikhail Khludnev","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/response/transform/TestChildDocTransformer#testParentFilterXML().mjava","pathOld":"solr/core/src/test/org/apache/solr/response/TestChildDocTransformer#testParentFilterXML().mjava","sourceNew":"  private void testParentFilterXML() {\n\n    String tests[] = new String[] {\n        \"//*[@numFound='2']\",\n        \"/response/result/doc[1]/int[@name='id']='1'\" ,\n        \"/response/result/doc[1]/doc[1]/int[@name='id']='2'\" ,\n        \"/response/result/doc[1]/doc[1]/arr[@name='cat']/str[1]='childDocument'\" ,\n        \"/response/result/doc[1]/doc[1]/arr[@name='title']/str[1]='\" + titleVals[0] + \"'\" ,\n        \"/response/result/doc[2]/int[@name='id']='4'\" ,\n        \"/response/result/doc[2]/doc[1]/int[@name='id']='5'\",\n        \"/response/result/doc[2]/doc[1]/arr[@name='cat']/str[1]='childDocument'\",\n        \"/response/result/doc[2]/doc[1]/arr[@name='title']/str[1]='\" + titleVals[1] + \"'\"};\n\n    assertQ(req(\"q\", \"*:*\", \n                \"sort\", \"id asc\",\n                \"fq\", \"subject:\\\"parentDocument\\\" \",\n                \"fl\", \"*,[child childFilter='cat:childDocument' parentFilter=\\\"subject:parentDocument\\\"]\"), \n            tests);\n\n    assertQ(req(\"q\", \"*:*\", \n                \"sort\", \"id asc\",\n                \"fq\", \"subject:\\\"parentDocument\\\" \",\n                \"fl\", \"id,[child childFilter='cat:childDocument' parentFilter=\\\"subject:parentDocument\\\"]\"), \n            tests);\n  }\n\n","sourceOld":"  private void testParentFilterXML() {\n\n    String tests[] = new String[] {\n        \"//*[@numFound='2']\",\n        \"/response/result/doc[1]/int[@name='id']='1'\" ,\n        \"/response/result/doc[1]/doc[1]/int[@name='id']='2'\" ,\n        \"/response/result/doc[1]/doc[1]/arr[@name='cat']/str[1]='childDocument'\" ,\n        \"/response/result/doc[1]/doc[1]/arr[@name='title']/str[1]='\" + titleVals[0] + \"'\" ,\n        \"/response/result/doc[2]/int[@name='id']='4'\" ,\n        \"/response/result/doc[2]/doc[1]/int[@name='id']='5'\",\n        \"/response/result/doc[2]/doc[1]/arr[@name='cat']/str[1]='childDocument'\",\n        \"/response/result/doc[2]/doc[1]/arr[@name='title']/str[1]='\" + titleVals[1] + \"'\"};\n\n    assertQ(req(\"q\", \"*:*\", \n                \"sort\", \"id asc\",\n                \"fq\", \"subject:\\\"parentDocument\\\" \",\n                \"fl\", \"*,[child childFilter='cat:childDocument' parentFilter=\\\"subject:parentDocument\\\"]\"), \n            tests);\n\n    assertQ(req(\"q\", \"*:*\", \n                \"sort\", \"id asc\",\n                \"fq\", \"subject:\\\"parentDocument\\\" \",\n                \"fl\", \"id,[child childFilter='cat:childDocument' parentFilter=\\\"subject:parentDocument\\\"]\"), \n            tests);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"e66a459d38c1c4a2f97128433dab546f683a9fed","date":1462873476,"type":5,"author":"Mike McCandless","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/response/transform/TestChildDocTransformer#testParentFilterXML().mjava","pathOld":"solr/core/src/test/org/apache/solr/response/TestChildDocTransformer#testParentFilterXML().mjava","sourceNew":"  private void testParentFilterXML() {\n\n    String tests[] = new String[] {\n        \"//*[@numFound='2']\",\n        \"/response/result/doc[1]/int[@name='id']='1'\" ,\n        \"/response/result/doc[1]/doc[1]/int[@name='id']='2'\" ,\n        \"/response/result/doc[1]/doc[1]/arr[@name='cat']/str[1]='childDocument'\" ,\n        \"/response/result/doc[1]/doc[1]/arr[@name='title']/str[1]='\" + titleVals[0] + \"'\" ,\n        \"/response/result/doc[2]/int[@name='id']='4'\" ,\n        \"/response/result/doc[2]/doc[1]/int[@name='id']='5'\",\n        \"/response/result/doc[2]/doc[1]/arr[@name='cat']/str[1]='childDocument'\",\n        \"/response/result/doc[2]/doc[1]/arr[@name='title']/str[1]='\" + titleVals[1] + \"'\"};\n\n    assertQ(req(\"q\", \"*:*\", \n                \"sort\", \"id asc\",\n                \"fq\", \"subject:\\\"parentDocument\\\" \",\n                \"fl\", \"*,[child childFilter='cat:childDocument' parentFilter=\\\"subject:parentDocument\\\"]\"), \n            tests);\n\n    assertQ(req(\"q\", \"*:*\", \n                \"sort\", \"id asc\",\n                \"fq\", \"subject:\\\"parentDocument\\\" \",\n                \"fl\", \"id,[child childFilter='cat:childDocument' parentFilter=\\\"subject:parentDocument\\\"]\"), \n            tests);\n  }\n\n","sourceOld":"  private void testParentFilterXML() {\n\n    String tests[] = new String[] {\n        \"//*[@numFound='2']\",\n        \"/response/result/doc[1]/int[@name='id']='1'\" ,\n        \"/response/result/doc[1]/doc[1]/int[@name='id']='2'\" ,\n        \"/response/result/doc[1]/doc[1]/arr[@name='cat']/str[1]='childDocument'\" ,\n        \"/response/result/doc[1]/doc[1]/arr[@name='title']/str[1]='\" + titleVals[0] + \"'\" ,\n        \"/response/result/doc[2]/int[@name='id']='4'\" ,\n        \"/response/result/doc[2]/doc[1]/int[@name='id']='5'\",\n        \"/response/result/doc[2]/doc[1]/arr[@name='cat']/str[1]='childDocument'\",\n        \"/response/result/doc[2]/doc[1]/arr[@name='title']/str[1]='\" + titleVals[1] + \"'\"};\n\n    assertQ(req(\"q\", \"*:*\", \n                \"sort\", \"id asc\",\n                \"fq\", \"subject:\\\"parentDocument\\\" \",\n                \"fl\", \"*,[child childFilter='cat:childDocument' parentFilter=\\\"subject:parentDocument\\\"]\"), \n            tests);\n\n    assertQ(req(\"q\", \"*:*\", \n                \"sort\", \"id asc\",\n                \"fq\", \"subject:\\\"parentDocument\\\" \",\n                \"fl\", \"id,[child childFilter='cat:childDocument' parentFilter=\\\"subject:parentDocument\\\"]\"), \n            tests);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d470c8182e92b264680e34081b75e70a9f2b3c89","date":1463985353,"type":5,"author":"Noble Paul","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/response/transform/TestChildDocTransformer#testParentFilterXML().mjava","pathOld":"solr/core/src/test/org/apache/solr/response/TestChildDocTransformer#testParentFilterXML().mjava","sourceNew":"  private void testParentFilterXML() {\n\n    String tests[] = new String[] {\n        \"//*[@numFound='2']\",\n        \"/response/result/doc[1]/int[@name='id']='1'\" ,\n        \"/response/result/doc[1]/doc[1]/int[@name='id']='2'\" ,\n        \"/response/result/doc[1]/doc[1]/arr[@name='cat']/str[1]='childDocument'\" ,\n        \"/response/result/doc[1]/doc[1]/arr[@name='title']/str[1]='\" + titleVals[0] + \"'\" ,\n        \"/response/result/doc[2]/int[@name='id']='4'\" ,\n        \"/response/result/doc[2]/doc[1]/int[@name='id']='5'\",\n        \"/response/result/doc[2]/doc[1]/arr[@name='cat']/str[1]='childDocument'\",\n        \"/response/result/doc[2]/doc[1]/arr[@name='title']/str[1]='\" + titleVals[1] + \"'\"};\n\n    assertQ(req(\"q\", \"*:*\", \n                \"sort\", \"id asc\",\n                \"fq\", \"subject:\\\"parentDocument\\\" \",\n                \"fl\", \"*,[child childFilter='cat:childDocument' parentFilter=\\\"subject:parentDocument\\\"]\"), \n            tests);\n\n    assertQ(req(\"q\", \"*:*\", \n                \"sort\", \"id asc\",\n                \"fq\", \"subject:\\\"parentDocument\\\" \",\n                \"fl\", \"id,[child childFilter='cat:childDocument' parentFilter=\\\"subject:parentDocument\\\"]\"), \n            tests);\n  }\n\n","sourceOld":"  private void testParentFilterXML() {\n\n    String tests[] = new String[] {\n        \"//*[@numFound='2']\",\n        \"/response/result/doc[1]/int[@name='id']='1'\" ,\n        \"/response/result/doc[1]/doc[1]/int[@name='id']='2'\" ,\n        \"/response/result/doc[1]/doc[1]/arr[@name='cat']/str[1]='childDocument'\" ,\n        \"/response/result/doc[1]/doc[1]/arr[@name='title']/str[1]='\" + titleVals[0] + \"'\" ,\n        \"/response/result/doc[2]/int[@name='id']='4'\" ,\n        \"/response/result/doc[2]/doc[1]/int[@name='id']='5'\",\n        \"/response/result/doc[2]/doc[1]/arr[@name='cat']/str[1]='childDocument'\",\n        \"/response/result/doc[2]/doc[1]/arr[@name='title']/str[1]='\" + titleVals[1] + \"'\"};\n\n    assertQ(req(\"q\", \"*:*\", \n                \"sort\", \"id asc\",\n                \"fq\", \"subject:\\\"parentDocument\\\" \",\n                \"fl\", \"*,[child childFilter='cat:childDocument' parentFilter=\\\"subject:parentDocument\\\"]\"), \n            tests);\n\n    assertQ(req(\"q\", \"*:*\", \n                \"sort\", \"id asc\",\n                \"fq\", \"subject:\\\"parentDocument\\\" \",\n                \"fl\", \"id,[child childFilter='cat:childDocument' parentFilter=\\\"subject:parentDocument\\\"]\"), \n            tests);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":5,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/response/transform/TestChildDocTransformer#testParentFilterXML().mjava","pathOld":"solr/core/src/test/org/apache/solr/response/TestChildDocTransformer#testParentFilterXML().mjava","sourceNew":"  private void testParentFilterXML() {\n\n    String tests[] = new String[] {\n        \"//*[@numFound='2']\",\n        \"/response/result/doc[1]/int[@name='id']='1'\" ,\n        \"/response/result/doc[1]/doc[1]/int[@name='id']='2'\" ,\n        \"/response/result/doc[1]/doc[1]/arr[@name='cat']/str[1]='childDocument'\" ,\n        \"/response/result/doc[1]/doc[1]/arr[@name='title']/str[1]='\" + titleVals[0] + \"'\" ,\n        \"/response/result/doc[2]/int[@name='id']='4'\" ,\n        \"/response/result/doc[2]/doc[1]/int[@name='id']='5'\",\n        \"/response/result/doc[2]/doc[1]/arr[@name='cat']/str[1]='childDocument'\",\n        \"/response/result/doc[2]/doc[1]/arr[@name='title']/str[1]='\" + titleVals[1] + \"'\"};\n\n    assertQ(req(\"q\", \"*:*\", \n                \"sort\", \"id asc\",\n                \"fq\", \"subject:\\\"parentDocument\\\" \",\n                \"fl\", \"*,[child childFilter='cat:childDocument' parentFilter=\\\"subject:parentDocument\\\"]\"), \n            tests);\n\n    assertQ(req(\"q\", \"*:*\", \n                \"sort\", \"id asc\",\n                \"fq\", \"subject:\\\"parentDocument\\\" \",\n                \"fl\", \"id,[child childFilter='cat:childDocument' parentFilter=\\\"subject:parentDocument\\\"]\"), \n            tests);\n  }\n\n","sourceOld":"  private void testParentFilterXML() {\n\n    String tests[] = new String[] {\n        \"//*[@numFound='2']\",\n        \"/response/result/doc[1]/int[@name='id']='1'\" ,\n        \"/response/result/doc[1]/doc[1]/int[@name='id']='2'\" ,\n        \"/response/result/doc[1]/doc[1]/arr[@name='cat']/str[1]='childDocument'\" ,\n        \"/response/result/doc[1]/doc[1]/arr[@name='title']/str[1]='\" + titleVals[0] + \"'\" ,\n        \"/response/result/doc[2]/int[@name='id']='4'\" ,\n        \"/response/result/doc[2]/doc[1]/int[@name='id']='5'\",\n        \"/response/result/doc[2]/doc[1]/arr[@name='cat']/str[1]='childDocument'\",\n        \"/response/result/doc[2]/doc[1]/arr[@name='title']/str[1]='\" + titleVals[1] + \"'\"};\n\n    assertQ(req(\"q\", \"*:*\", \n                \"sort\", \"id asc\",\n                \"fq\", \"subject:\\\"parentDocument\\\" \",\n                \"fl\", \"*,[child childFilter='cat:childDocument' parentFilter=\\\"subject:parentDocument\\\"]\"), \n            tests);\n\n    assertQ(req(\"q\", \"*:*\", \n                \"sort\", \"id asc\",\n                \"fq\", \"subject:\\\"parentDocument\\\" \",\n                \"fl\", \"id,[child childFilter='cat:childDocument' parentFilter=\\\"subject:parentDocument\\\"]\"), \n            tests);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"7bd5b0172f9653691c0b2f6c50446465766073bb":["9a862f08ffeb00b03b4c641de86b167b1d6f7cd1"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"9a862f08ffeb00b03b4c641de86b167b1d6f7cd1":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"e66a459d38c1c4a2f97128433dab546f683a9fed":["7bd5b0172f9653691c0b2f6c50446465766073bb","561c2351baf6dd64061addef891359954c1a7faa"],"561c2351baf6dd64061addef891359954c1a7faa":["7bd5b0172f9653691c0b2f6c50446465766073bb"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["7bd5b0172f9653691c0b2f6c50446465766073bb","d470c8182e92b264680e34081b75e70a9f2b3c89"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["d470c8182e92b264680e34081b75e70a9f2b3c89"],"d470c8182e92b264680e34081b75e70a9f2b3c89":["7bd5b0172f9653691c0b2f6c50446465766073bb","561c2351baf6dd64061addef891359954c1a7faa"]},"commit2Childs":{"7bd5b0172f9653691c0b2f6c50446465766073bb":["e66a459d38c1c4a2f97128433dab546f683a9fed","561c2351baf6dd64061addef891359954c1a7faa","4cce5816ef15a48a0bc11e5d400497ee4301dd3b","d470c8182e92b264680e34081b75e70a9f2b3c89"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9a862f08ffeb00b03b4c641de86b167b1d6f7cd1"],"9a862f08ffeb00b03b4c641de86b167b1d6f7cd1":["7bd5b0172f9653691c0b2f6c50446465766073bb"],"e66a459d38c1c4a2f97128433dab546f683a9fed":[],"561c2351baf6dd64061addef891359954c1a7faa":["e66a459d38c1c4a2f97128433dab546f683a9fed","d470c8182e92b264680e34081b75e70a9f2b3c89"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"d470c8182e92b264680e34081b75e70a9f2b3c89":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["e66a459d38c1c4a2f97128433dab546f683a9fed","4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}