{"path":"lucene/core/src/java/org/apache/lucene/codecs/lucene50/CompoundFileWriter#writeEntryTable(Collection[FileEntry],IndexOutput).mjava","commits":[{"id":"989d940c4bf402188f4f0ae13736836885227383","date":1412263633,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/lucene50/CompoundFileWriter#writeEntryTable(Collection[FileEntry],IndexOutput).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/store/CompoundFileWriter#writeEntryTable(Collection[FileEntry],IndexOutput).mjava","sourceNew":"  protected void writeEntryTable(Collection<FileEntry> entries,\n      IndexOutput entryOut) throws IOException {\n    CodecUtil.writeSegmentHeader(entryOut, ENTRY_CODEC, VERSION_CURRENT, segmentID, \"\");\n    entryOut.writeVInt(entries.size());\n    for (FileEntry fe : entries) {\n      entryOut.writeString(IndexFileNames.stripSegmentName(fe.file));\n      entryOut.writeLong(fe.offset);\n      entryOut.writeLong(fe.length);\n    }\n    CodecUtil.writeFooter(entryOut);\n  }\n\n","sourceOld":"  protected void writeEntryTable(Collection<FileEntry> entries,\n      IndexOutput entryOut) throws IOException {\n    CodecUtil.writeSegmentHeader(entryOut, ENTRY_CODEC, VERSION_CURRENT, segmentID, \"\");\n    entryOut.writeVInt(entries.size());\n    for (FileEntry fe : entries) {\n      entryOut.writeString(IndexFileNames.stripSegmentName(fe.file));\n      entryOut.writeLong(fe.offset);\n      entryOut.writeLong(fe.length);\n    }\n    CodecUtil.writeFooter(entryOut);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7f936b67ab4a872d22231aae4f63608e7f411071","date":1412266152,"type":4,"author":"Robert Muir","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/lucene50/CompoundFileWriter#writeEntryTable(Collection[FileEntry],IndexOutput).mjava","sourceNew":null,"sourceOld":"  protected void writeEntryTable(Collection<FileEntry> entries,\n      IndexOutput entryOut) throws IOException {\n    CodecUtil.writeSegmentHeader(entryOut, ENTRY_CODEC, VERSION_CURRENT, segmentID, \"\");\n    entryOut.writeVInt(entries.size());\n    for (FileEntry fe : entries) {\n      entryOut.writeString(IndexFileNames.stripSegmentName(fe.file));\n      entryOut.writeLong(fe.offset);\n      entryOut.writeLong(fe.length);\n    }\n    CodecUtil.writeFooter(entryOut);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"989d940c4bf402188f4f0ae13736836885227383":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"7f936b67ab4a872d22231aae4f63608e7f411071":["989d940c4bf402188f4f0ae13736836885227383"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"989d940c4bf402188f4f0ae13736836885227383":["7f936b67ab4a872d22231aae4f63608e7f411071"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["989d940c4bf402188f4f0ae13736836885227383","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"7f936b67ab4a872d22231aae4f63608e7f411071":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["7f936b67ab4a872d22231aae4f63608e7f411071","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}