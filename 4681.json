{"path":"lucene/src/java/org/apache/lucene/collation/CollationKeyFilter#incrementToken().mjava","commits":[{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/collation/CollationKeyFilter#incrementToken().mjava","pathOld":"src/java/org/apache/lucene/collation/CollationKeyFilter#incrementToken().mjava","sourceNew":"  @Override\n  public boolean incrementToken() throws IOException {\n    if (input.incrementToken()) {\n      char[] termBuffer = termAtt.termBuffer();\n      String termText = new String(termBuffer, 0, termAtt.termLength());\n      byte[] collationKey = collator.getCollationKey(termText).toByteArray();\n      int encodedLength = IndexableBinaryStringTools.getEncodedLength(\n          collationKey, 0, collationKey.length);\n      if (encodedLength > termBuffer.length) {\n        termAtt.resizeTermBuffer(encodedLength);\n      }\n      termAtt.setTermLength(encodedLength);\n      IndexableBinaryStringTools.encode(collationKey, 0, collationKey.length,\n          termAtt.termBuffer(), 0, encodedLength);\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n","sourceOld":"  @Override\n  public boolean incrementToken() throws IOException {\n    if (input.incrementToken()) {\n      char[] termBuffer = termAtt.termBuffer();\n      String termText = new String(termBuffer, 0, termAtt.termLength());\n      byte[] collationKey = collator.getCollationKey(termText).toByteArray();\n      int encodedLength = IndexableBinaryStringTools.getEncodedLength(\n          collationKey, 0, collationKey.length);\n      if (encodedLength > termBuffer.length) {\n        termAtt.resizeTermBuffer(encodedLength);\n      }\n      termAtt.setTermLength(encodedLength);\n      IndexableBinaryStringTools.encode(collationKey, 0, collationKey.length,\n          termAtt.termBuffer(), 0, encodedLength);\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a775c547c3519b47efd41c09cb47100ddb9604c7","date":1270914087,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/collation/CollationKeyFilter#incrementToken().mjava","pathOld":"lucene/src/java/org/apache/lucene/collation/CollationKeyFilter#incrementToken().mjava","sourceNew":"  @Override\n  public boolean incrementToken() throws IOException {\n    if (input.incrementToken()) {\n      byte[] collationKey = collator.getCollationKey(termAtt.toString()).toByteArray();\n      int encodedLength = IndexableBinaryStringTools.getEncodedLength(\n          collationKey, 0, collationKey.length);\n      termAtt.resizeBuffer(encodedLength);\n      termAtt.setLength(encodedLength);\n      IndexableBinaryStringTools.encode(collationKey, 0, collationKey.length,\n          termAtt.buffer(), 0, encodedLength);\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n","sourceOld":"  @Override\n  public boolean incrementToken() throws IOException {\n    if (input.incrementToken()) {\n      char[] termBuffer = termAtt.termBuffer();\n      String termText = new String(termBuffer, 0, termAtt.termLength());\n      byte[] collationKey = collator.getCollationKey(termText).toByteArray();\n      int encodedLength = IndexableBinaryStringTools.getEncodedLength(\n          collationKey, 0, collationKey.length);\n      if (encodedLength > termBuffer.length) {\n        termAtt.resizeTermBuffer(encodedLength);\n      }\n      termAtt.setTermLength(encodedLength);\n      IndexableBinaryStringTools.encode(collationKey, 0, collationKey.length,\n          termAtt.termBuffer(), 0, encodedLength);\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"790c3f61c9b891d66d919c5d10db9fa5216eb0f1","date":1274818604,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"modules/analysis/common/src/java/org/apache/lucene/collation/CollationKeyFilter#incrementToken().mjava","pathOld":"lucene/src/java/org/apache/lucene/collation/CollationKeyFilter#incrementToken().mjava","sourceNew":"  @Override\n  public boolean incrementToken() throws IOException {\n    if (input.incrementToken()) {\n      byte[] collationKey = collator.getCollationKey(termAtt.toString()).toByteArray();\n      int encodedLength = IndexableBinaryStringTools.getEncodedLength(\n          collationKey, 0, collationKey.length);\n      termAtt.resizeBuffer(encodedLength);\n      termAtt.setLength(encodedLength);\n      IndexableBinaryStringTools.encode(collationKey, 0, collationKey.length,\n          termAtt.buffer(), 0, encodedLength);\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n","sourceOld":"  @Override\n  public boolean incrementToken() throws IOException {\n    if (input.incrementToken()) {\n      byte[] collationKey = collator.getCollationKey(termAtt.toString()).toByteArray();\n      int encodedLength = IndexableBinaryStringTools.getEncodedLength(\n          collationKey, 0, collationKey.length);\n      termAtt.resizeBuffer(encodedLength);\n      termAtt.setLength(encodedLength);\n      IndexableBinaryStringTools.encode(collationKey, 0, collationKey.length,\n          termAtt.buffer(), 0, encodedLength);\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["790c3f61c9b891d66d919c5d10db9fa5216eb0f1"],"790c3f61c9b891d66d919c5d10db9fa5216eb0f1":["a775c547c3519b47efd41c09cb47100ddb9604c7"],"a775c547c3519b47efd41c09cb47100ddb9604c7":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"790c3f61c9b891d66d919c5d10db9fa5216eb0f1":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a775c547c3519b47efd41c09cb47100ddb9604c7":["790c3f61c9b891d66d919c5d10db9fa5216eb0f1"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a775c547c3519b47efd41c09cb47100ddb9604c7"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}