{"path":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriterReader#testDeleteFromIndexWriter().mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriterReader#testDeleteFromIndexWriter().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexWriterReader#testDeleteFromIndexWriter().mjava","sourceNew":"  /**\n   * Deletes using IW.deleteDocuments\n   * \n   * @throws Exception\n   */\n  public void testDeleteFromIndexWriter() throws Exception {\n    boolean doFullMerge = true;\n\n    Directory dir1 = newDirectory();\n    IndexWriter writer = new IndexWriter(dir1, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)).setReaderTermsIndexDivisor(2));\n    // create the index\n    createIndexNoClose(!doFullMerge, \"index1\", writer);\n    writer.flush(false, true);\n    // get a reader\n    IndexReader r1 = writer.getReader();\n\n    String id10 = r1.document(10).getField(\"id\").stringValue();\n\n    // deleted IW docs should not show up in the next getReader\n    writer.deleteDocuments(new Term(\"id\", id10));\n    IndexReader r2 = writer.getReader();\n    assertEquals(1, count(new Term(\"id\", id10), r1));\n    assertEquals(0, count(new Term(\"id\", id10), r2));\n    \n    String id50 = r1.document(50).getField(\"id\").stringValue();\n    assertEquals(1, count(new Term(\"id\", id50), r1));\n    \n    writer.deleteDocuments(new Term(\"id\", id50));\n    \n    IndexReader r3 = writer.getReader();\n    assertEquals(0, count(new Term(\"id\", id10), r3));\n    assertEquals(0, count(new Term(\"id\", id50), r3));\n    \n    String id75 = r1.document(75).getField(\"id\").stringValue();\n    writer.deleteDocuments(new TermQuery(new Term(\"id\", id75)));\n    IndexReader r4 = writer.getReader();\n    assertEquals(1, count(new Term(\"id\", id75), r3));\n    assertEquals(0, count(new Term(\"id\", id75), r4));\n    \n    r1.close();\n    r2.close();\n    r3.close();\n    r4.close();\n    writer.close();\n        \n    // reopen the writer to verify the delete made it to the directory\n    writer = new IndexWriter(dir1, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n    IndexReader w2r1 = writer.getReader();\n    assertEquals(0, count(new Term(\"id\", id10), w2r1));\n    w2r1.close();\n    writer.close();\n    dir1.close();\n  }\n\n","sourceOld":"  /**\n   * Deletes using IW.deleteDocuments\n   * \n   * @throws Exception\n   */\n  public void testDeleteFromIndexWriter() throws Exception {\n    boolean doFullMerge = true;\n\n    Directory dir1 = newDirectory();\n    IndexWriter writer = new IndexWriter(dir1, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)).setReaderTermsIndexDivisor(2));\n    // create the index\n    createIndexNoClose(!doFullMerge, \"index1\", writer);\n    writer.flush(false, true);\n    // get a reader\n    IndexReader r1 = writer.getReader();\n\n    String id10 = r1.document(10).getField(\"id\").stringValue();\n\n    // deleted IW docs should not show up in the next getReader\n    writer.deleteDocuments(new Term(\"id\", id10));\n    IndexReader r2 = writer.getReader();\n    assertEquals(1, count(new Term(\"id\", id10), r1));\n    assertEquals(0, count(new Term(\"id\", id10), r2));\n    \n    String id50 = r1.document(50).getField(\"id\").stringValue();\n    assertEquals(1, count(new Term(\"id\", id50), r1));\n    \n    writer.deleteDocuments(new Term(\"id\", id50));\n    \n    IndexReader r3 = writer.getReader();\n    assertEquals(0, count(new Term(\"id\", id10), r3));\n    assertEquals(0, count(new Term(\"id\", id50), r3));\n    \n    String id75 = r1.document(75).getField(\"id\").stringValue();\n    writer.deleteDocuments(new TermQuery(new Term(\"id\", id75)));\n    IndexReader r4 = writer.getReader();\n    assertEquals(1, count(new Term(\"id\", id75), r3));\n    assertEquals(0, count(new Term(\"id\", id75), r4));\n    \n    r1.close();\n    r2.close();\n    r3.close();\n    r4.close();\n    writer.close();\n        \n    // reopen the writer to verify the delete made it to the directory\n    writer = new IndexWriter(dir1, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n    IndexReader w2r1 = writer.getReader();\n    assertEquals(0, count(new Term(\"id\", id10), w2r1));\n    w2r1.close();\n    writer.close();\n    dir1.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"629c38c4ae4e303d0617e05fbfe508140b32f0a3","date":1334500904,"type":3,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriterReader#testDeleteFromIndexWriter().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriterReader#testDeleteFromIndexWriter().mjava","sourceNew":"  /**\n   * Deletes using IW.deleteDocuments\n   * \n   * @throws Exception\n   */\n  public void testDeleteFromIndexWriter() throws Exception {\n    boolean doFullMerge = true;\n\n    Directory dir1 = newDirectory();\n    IndexWriter writer = new IndexWriter(dir1, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random())).setReaderTermsIndexDivisor(2));\n    // create the index\n    createIndexNoClose(!doFullMerge, \"index1\", writer);\n    writer.flush(false, true);\n    // get a reader\n    IndexReader r1 = writer.getReader();\n\n    String id10 = r1.document(10).getField(\"id\").stringValue();\n\n    // deleted IW docs should not show up in the next getReader\n    writer.deleteDocuments(new Term(\"id\", id10));\n    IndexReader r2 = writer.getReader();\n    assertEquals(1, count(new Term(\"id\", id10), r1));\n    assertEquals(0, count(new Term(\"id\", id10), r2));\n    \n    String id50 = r1.document(50).getField(\"id\").stringValue();\n    assertEquals(1, count(new Term(\"id\", id50), r1));\n    \n    writer.deleteDocuments(new Term(\"id\", id50));\n    \n    IndexReader r3 = writer.getReader();\n    assertEquals(0, count(new Term(\"id\", id10), r3));\n    assertEquals(0, count(new Term(\"id\", id50), r3));\n    \n    String id75 = r1.document(75).getField(\"id\").stringValue();\n    writer.deleteDocuments(new TermQuery(new Term(\"id\", id75)));\n    IndexReader r4 = writer.getReader();\n    assertEquals(1, count(new Term(\"id\", id75), r3));\n    assertEquals(0, count(new Term(\"id\", id75), r4));\n    \n    r1.close();\n    r2.close();\n    r3.close();\n    r4.close();\n    writer.close();\n        \n    // reopen the writer to verify the delete made it to the directory\n    writer = new IndexWriter(dir1, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random())));\n    IndexReader w2r1 = writer.getReader();\n    assertEquals(0, count(new Term(\"id\", id10), w2r1));\n    w2r1.close();\n    writer.close();\n    dir1.close();\n  }\n\n","sourceOld":"  /**\n   * Deletes using IW.deleteDocuments\n   * \n   * @throws Exception\n   */\n  public void testDeleteFromIndexWriter() throws Exception {\n    boolean doFullMerge = true;\n\n    Directory dir1 = newDirectory();\n    IndexWriter writer = new IndexWriter(dir1, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)).setReaderTermsIndexDivisor(2));\n    // create the index\n    createIndexNoClose(!doFullMerge, \"index1\", writer);\n    writer.flush(false, true);\n    // get a reader\n    IndexReader r1 = writer.getReader();\n\n    String id10 = r1.document(10).getField(\"id\").stringValue();\n\n    // deleted IW docs should not show up in the next getReader\n    writer.deleteDocuments(new Term(\"id\", id10));\n    IndexReader r2 = writer.getReader();\n    assertEquals(1, count(new Term(\"id\", id10), r1));\n    assertEquals(0, count(new Term(\"id\", id10), r2));\n    \n    String id50 = r1.document(50).getField(\"id\").stringValue();\n    assertEquals(1, count(new Term(\"id\", id50), r1));\n    \n    writer.deleteDocuments(new Term(\"id\", id50));\n    \n    IndexReader r3 = writer.getReader();\n    assertEquals(0, count(new Term(\"id\", id10), r3));\n    assertEquals(0, count(new Term(\"id\", id50), r3));\n    \n    String id75 = r1.document(75).getField(\"id\").stringValue();\n    writer.deleteDocuments(new TermQuery(new Term(\"id\", id75)));\n    IndexReader r4 = writer.getReader();\n    assertEquals(1, count(new Term(\"id\", id75), r3));\n    assertEquals(0, count(new Term(\"id\", id75), r4));\n    \n    r1.close();\n    r2.close();\n    r3.close();\n    r4.close();\n    writer.close();\n        \n    // reopen the writer to verify the delete made it to the directory\n    writer = new IndexWriter(dir1, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n    IndexReader w2r1 = writer.getReader();\n    assertEquals(0, count(new Term(\"id\", id10), w2r1));\n    w2r1.close();\n    writer.close();\n    dir1.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"c7bd1fdddb8e84c1857d1a55c32ced51f0ed2069","date":1348430063,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriterReader#testDeleteFromIndexWriter().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriterReader#testDeleteFromIndexWriter().mjava","sourceNew":"  /**\n   * Deletes using IW.deleteDocuments\n   */\n  public void testDeleteFromIndexWriter() throws Exception {\n    boolean doFullMerge = true;\n\n    Directory dir1 = newDirectory();\n    IndexWriter writer = new IndexWriter(dir1, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random())).setReaderTermsIndexDivisor(2));\n    // create the index\n    createIndexNoClose(!doFullMerge, \"index1\", writer);\n    writer.flush(false, true);\n    // get a reader\n    IndexReader r1 = writer.getReader();\n\n    String id10 = r1.document(10).getField(\"id\").stringValue();\n\n    // deleted IW docs should not show up in the next getReader\n    writer.deleteDocuments(new Term(\"id\", id10));\n    IndexReader r2 = writer.getReader();\n    assertEquals(1, count(new Term(\"id\", id10), r1));\n    assertEquals(0, count(new Term(\"id\", id10), r2));\n    \n    String id50 = r1.document(50).getField(\"id\").stringValue();\n    assertEquals(1, count(new Term(\"id\", id50), r1));\n    \n    writer.deleteDocuments(new Term(\"id\", id50));\n    \n    IndexReader r3 = writer.getReader();\n    assertEquals(0, count(new Term(\"id\", id10), r3));\n    assertEquals(0, count(new Term(\"id\", id50), r3));\n    \n    String id75 = r1.document(75).getField(\"id\").stringValue();\n    writer.deleteDocuments(new TermQuery(new Term(\"id\", id75)));\n    IndexReader r4 = writer.getReader();\n    assertEquals(1, count(new Term(\"id\", id75), r3));\n    assertEquals(0, count(new Term(\"id\", id75), r4));\n    \n    r1.close();\n    r2.close();\n    r3.close();\n    r4.close();\n    writer.close();\n        \n    // reopen the writer to verify the delete made it to the directory\n    writer = new IndexWriter(dir1, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random())));\n    IndexReader w2r1 = writer.getReader();\n    assertEquals(0, count(new Term(\"id\", id10), w2r1));\n    w2r1.close();\n    writer.close();\n    dir1.close();\n  }\n\n","sourceOld":"  /**\n   * Deletes using IW.deleteDocuments\n   * \n   * @throws Exception\n   */\n  public void testDeleteFromIndexWriter() throws Exception {\n    boolean doFullMerge = true;\n\n    Directory dir1 = newDirectory();\n    IndexWriter writer = new IndexWriter(dir1, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random())).setReaderTermsIndexDivisor(2));\n    // create the index\n    createIndexNoClose(!doFullMerge, \"index1\", writer);\n    writer.flush(false, true);\n    // get a reader\n    IndexReader r1 = writer.getReader();\n\n    String id10 = r1.document(10).getField(\"id\").stringValue();\n\n    // deleted IW docs should not show up in the next getReader\n    writer.deleteDocuments(new Term(\"id\", id10));\n    IndexReader r2 = writer.getReader();\n    assertEquals(1, count(new Term(\"id\", id10), r1));\n    assertEquals(0, count(new Term(\"id\", id10), r2));\n    \n    String id50 = r1.document(50).getField(\"id\").stringValue();\n    assertEquals(1, count(new Term(\"id\", id50), r1));\n    \n    writer.deleteDocuments(new Term(\"id\", id50));\n    \n    IndexReader r3 = writer.getReader();\n    assertEquals(0, count(new Term(\"id\", id10), r3));\n    assertEquals(0, count(new Term(\"id\", id50), r3));\n    \n    String id75 = r1.document(75).getField(\"id\").stringValue();\n    writer.deleteDocuments(new TermQuery(new Term(\"id\", id75)));\n    IndexReader r4 = writer.getReader();\n    assertEquals(1, count(new Term(\"id\", id75), r3));\n    assertEquals(0, count(new Term(\"id\", id75), r4));\n    \n    r1.close();\n    r2.close();\n    r3.close();\n    r4.close();\n    writer.close();\n        \n    // reopen the writer to verify the delete made it to the directory\n    writer = new IndexWriter(dir1, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random())));\n    IndexReader w2r1 = writer.getReader();\n    assertEquals(0, count(new Term(\"id\", id10), w2r1));\n    w2r1.close();\n    writer.close();\n    dir1.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"a45bec74b98f6fc05f52770cfb425739e6563960","date":1375119292,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriterReader#testDeleteFromIndexWriter().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriterReader#testDeleteFromIndexWriter().mjava","sourceNew":"  /**\n   * Deletes using IW.deleteDocuments\n   */\n  public void testDeleteFromIndexWriter() throws Exception {\n    boolean doFullMerge = true;\n\n    Directory dir1 = newDirectory();\n    IndexWriter writer = new IndexWriter(dir1, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random())));\n    // create the index\n    createIndexNoClose(!doFullMerge, \"index1\", writer);\n    writer.flush(false, true);\n    // get a reader\n    IndexReader r1 = writer.getReader();\n\n    String id10 = r1.document(10).getField(\"id\").stringValue();\n\n    // deleted IW docs should not show up in the next getReader\n    writer.deleteDocuments(new Term(\"id\", id10));\n    IndexReader r2 = writer.getReader();\n    assertEquals(1, count(new Term(\"id\", id10), r1));\n    assertEquals(0, count(new Term(\"id\", id10), r2));\n    \n    String id50 = r1.document(50).getField(\"id\").stringValue();\n    assertEquals(1, count(new Term(\"id\", id50), r1));\n    \n    writer.deleteDocuments(new Term(\"id\", id50));\n    \n    IndexReader r3 = writer.getReader();\n    assertEquals(0, count(new Term(\"id\", id10), r3));\n    assertEquals(0, count(new Term(\"id\", id50), r3));\n    \n    String id75 = r1.document(75).getField(\"id\").stringValue();\n    writer.deleteDocuments(new TermQuery(new Term(\"id\", id75)));\n    IndexReader r4 = writer.getReader();\n    assertEquals(1, count(new Term(\"id\", id75), r3));\n    assertEquals(0, count(new Term(\"id\", id75), r4));\n    \n    r1.close();\n    r2.close();\n    r3.close();\n    r4.close();\n    writer.close();\n        \n    // reopen the writer to verify the delete made it to the directory\n    writer = new IndexWriter(dir1, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random())));\n    IndexReader w2r1 = writer.getReader();\n    assertEquals(0, count(new Term(\"id\", id10), w2r1));\n    w2r1.close();\n    writer.close();\n    dir1.close();\n  }\n\n","sourceOld":"  /**\n   * Deletes using IW.deleteDocuments\n   */\n  public void testDeleteFromIndexWriter() throws Exception {\n    boolean doFullMerge = true;\n\n    Directory dir1 = newDirectory();\n    IndexWriter writer = new IndexWriter(dir1, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random())).setReaderTermsIndexDivisor(2));\n    // create the index\n    createIndexNoClose(!doFullMerge, \"index1\", writer);\n    writer.flush(false, true);\n    // get a reader\n    IndexReader r1 = writer.getReader();\n\n    String id10 = r1.document(10).getField(\"id\").stringValue();\n\n    // deleted IW docs should not show up in the next getReader\n    writer.deleteDocuments(new Term(\"id\", id10));\n    IndexReader r2 = writer.getReader();\n    assertEquals(1, count(new Term(\"id\", id10), r1));\n    assertEquals(0, count(new Term(\"id\", id10), r2));\n    \n    String id50 = r1.document(50).getField(\"id\").stringValue();\n    assertEquals(1, count(new Term(\"id\", id50), r1));\n    \n    writer.deleteDocuments(new Term(\"id\", id50));\n    \n    IndexReader r3 = writer.getReader();\n    assertEquals(0, count(new Term(\"id\", id10), r3));\n    assertEquals(0, count(new Term(\"id\", id50), r3));\n    \n    String id75 = r1.document(75).getField(\"id\").stringValue();\n    writer.deleteDocuments(new TermQuery(new Term(\"id\", id75)));\n    IndexReader r4 = writer.getReader();\n    assertEquals(1, count(new Term(\"id\", id75), r3));\n    assertEquals(0, count(new Term(\"id\", id75), r4));\n    \n    r1.close();\n    r2.close();\n    r3.close();\n    r4.close();\n    writer.close();\n        \n    // reopen the writer to verify the delete made it to the directory\n    writer = new IndexWriter(dir1, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random())));\n    IndexReader w2r1 = writer.getReader();\n    assertEquals(0, count(new Term(\"id\", id10), w2r1));\n    w2r1.close();\n    writer.close();\n    dir1.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee","date":1376366778,"type":3,"author":"Han Jiang","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriterReader#testDeleteFromIndexWriter().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriterReader#testDeleteFromIndexWriter().mjava","sourceNew":"  /**\n   * Deletes using IW.deleteDocuments\n   */\n  public void testDeleteFromIndexWriter() throws Exception {\n    boolean doFullMerge = true;\n\n    Directory dir1 = newDirectory();\n    IndexWriter writer = new IndexWriter(dir1, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random())));\n    // create the index\n    createIndexNoClose(!doFullMerge, \"index1\", writer);\n    writer.flush(false, true);\n    // get a reader\n    IndexReader r1 = writer.getReader();\n\n    String id10 = r1.document(10).getField(\"id\").stringValue();\n\n    // deleted IW docs should not show up in the next getReader\n    writer.deleteDocuments(new Term(\"id\", id10));\n    IndexReader r2 = writer.getReader();\n    assertEquals(1, count(new Term(\"id\", id10), r1));\n    assertEquals(0, count(new Term(\"id\", id10), r2));\n    \n    String id50 = r1.document(50).getField(\"id\").stringValue();\n    assertEquals(1, count(new Term(\"id\", id50), r1));\n    \n    writer.deleteDocuments(new Term(\"id\", id50));\n    \n    IndexReader r3 = writer.getReader();\n    assertEquals(0, count(new Term(\"id\", id10), r3));\n    assertEquals(0, count(new Term(\"id\", id50), r3));\n    \n    String id75 = r1.document(75).getField(\"id\").stringValue();\n    writer.deleteDocuments(new TermQuery(new Term(\"id\", id75)));\n    IndexReader r4 = writer.getReader();\n    assertEquals(1, count(new Term(\"id\", id75), r3));\n    assertEquals(0, count(new Term(\"id\", id75), r4));\n    \n    r1.close();\n    r2.close();\n    r3.close();\n    r4.close();\n    writer.close();\n        \n    // reopen the writer to verify the delete made it to the directory\n    writer = new IndexWriter(dir1, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random())));\n    IndexReader w2r1 = writer.getReader();\n    assertEquals(0, count(new Term(\"id\", id10), w2r1));\n    w2r1.close();\n    writer.close();\n    dir1.close();\n  }\n\n","sourceOld":"  /**\n   * Deletes using IW.deleteDocuments\n   */\n  public void testDeleteFromIndexWriter() throws Exception {\n    boolean doFullMerge = true;\n\n    Directory dir1 = newDirectory();\n    IndexWriter writer = new IndexWriter(dir1, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random())).setReaderTermsIndexDivisor(2));\n    // create the index\n    createIndexNoClose(!doFullMerge, \"index1\", writer);\n    writer.flush(false, true);\n    // get a reader\n    IndexReader r1 = writer.getReader();\n\n    String id10 = r1.document(10).getField(\"id\").stringValue();\n\n    // deleted IW docs should not show up in the next getReader\n    writer.deleteDocuments(new Term(\"id\", id10));\n    IndexReader r2 = writer.getReader();\n    assertEquals(1, count(new Term(\"id\", id10), r1));\n    assertEquals(0, count(new Term(\"id\", id10), r2));\n    \n    String id50 = r1.document(50).getField(\"id\").stringValue();\n    assertEquals(1, count(new Term(\"id\", id50), r1));\n    \n    writer.deleteDocuments(new Term(\"id\", id50));\n    \n    IndexReader r3 = writer.getReader();\n    assertEquals(0, count(new Term(\"id\", id10), r3));\n    assertEquals(0, count(new Term(\"id\", id50), r3));\n    \n    String id75 = r1.document(75).getField(\"id\").stringValue();\n    writer.deleteDocuments(new TermQuery(new Term(\"id\", id75)));\n    IndexReader r4 = writer.getReader();\n    assertEquals(1, count(new Term(\"id\", id75), r3));\n    assertEquals(0, count(new Term(\"id\", id75), r4));\n    \n    r1.close();\n    r2.close();\n    r3.close();\n    r4.close();\n    writer.close();\n        \n    // reopen the writer to verify the delete made it to the directory\n    writer = new IndexWriter(dir1, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random())));\n    IndexReader w2r1 = writer.getReader();\n    assertEquals(0, count(new Term(\"id\", id10), w2r1));\n    w2r1.close();\n    writer.close();\n    dir1.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"527cc14542789f47d75da436cb4287d1ab887e34","date":1391705548,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriterReader#testDeleteFromIndexWriter().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriterReader#testDeleteFromIndexWriter().mjava","sourceNew":"  /**\n   * Deletes using IW.deleteDocuments\n   */\n  public void testDeleteFromIndexWriter() throws Exception {\n    boolean doFullMerge = true;\n\n    Directory dir1 = getAssertNoDeletesDirectory(newDirectory());\n    IndexWriter writer = new IndexWriter(dir1, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random())));\n    // create the index\n    createIndexNoClose(!doFullMerge, \"index1\", writer);\n    writer.flush(false, true);\n    // get a reader\n    IndexReader r1 = writer.getReader();\n\n    String id10 = r1.document(10).getField(\"id\").stringValue();\n\n    // deleted IW docs should not show up in the next getReader\n    writer.deleteDocuments(new Term(\"id\", id10));\n    IndexReader r2 = writer.getReader();\n    assertEquals(1, count(new Term(\"id\", id10), r1));\n    assertEquals(0, count(new Term(\"id\", id10), r2));\n    \n    String id50 = r1.document(50).getField(\"id\").stringValue();\n    assertEquals(1, count(new Term(\"id\", id50), r1));\n    \n    writer.deleteDocuments(new Term(\"id\", id50));\n    \n    IndexReader r3 = writer.getReader();\n    assertEquals(0, count(new Term(\"id\", id10), r3));\n    assertEquals(0, count(new Term(\"id\", id50), r3));\n    \n    String id75 = r1.document(75).getField(\"id\").stringValue();\n    writer.deleteDocuments(new TermQuery(new Term(\"id\", id75)));\n    IndexReader r4 = writer.getReader();\n    assertEquals(1, count(new Term(\"id\", id75), r3));\n    assertEquals(0, count(new Term(\"id\", id75), r4));\n    \n    r1.close();\n    r2.close();\n    r3.close();\n    r4.close();\n    writer.close();\n        \n    // reopen the writer to verify the delete made it to the directory\n    writer = new IndexWriter(dir1, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random())));\n    IndexReader w2r1 = writer.getReader();\n    assertEquals(0, count(new Term(\"id\", id10), w2r1));\n    w2r1.close();\n    writer.close();\n    dir1.close();\n  }\n\n","sourceOld":"  /**\n   * Deletes using IW.deleteDocuments\n   */\n  public void testDeleteFromIndexWriter() throws Exception {\n    boolean doFullMerge = true;\n\n    Directory dir1 = newDirectory();\n    IndexWriter writer = new IndexWriter(dir1, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random())));\n    // create the index\n    createIndexNoClose(!doFullMerge, \"index1\", writer);\n    writer.flush(false, true);\n    // get a reader\n    IndexReader r1 = writer.getReader();\n\n    String id10 = r1.document(10).getField(\"id\").stringValue();\n\n    // deleted IW docs should not show up in the next getReader\n    writer.deleteDocuments(new Term(\"id\", id10));\n    IndexReader r2 = writer.getReader();\n    assertEquals(1, count(new Term(\"id\", id10), r1));\n    assertEquals(0, count(new Term(\"id\", id10), r2));\n    \n    String id50 = r1.document(50).getField(\"id\").stringValue();\n    assertEquals(1, count(new Term(\"id\", id50), r1));\n    \n    writer.deleteDocuments(new Term(\"id\", id50));\n    \n    IndexReader r3 = writer.getReader();\n    assertEquals(0, count(new Term(\"id\", id10), r3));\n    assertEquals(0, count(new Term(\"id\", id50), r3));\n    \n    String id75 = r1.document(75).getField(\"id\").stringValue();\n    writer.deleteDocuments(new TermQuery(new Term(\"id\", id75)));\n    IndexReader r4 = writer.getReader();\n    assertEquals(1, count(new Term(\"id\", id75), r3));\n    assertEquals(0, count(new Term(\"id\", id75), r4));\n    \n    r1.close();\n    r2.close();\n    r3.close();\n    r4.close();\n    writer.close();\n        \n    // reopen the writer to verify the delete made it to the directory\n    writer = new IndexWriter(dir1, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random())));\n    IndexReader w2r1 = writer.getReader();\n    assertEquals(0, count(new Term(\"id\", id10), w2r1));\n    w2r1.close();\n    writer.close();\n    dir1.close();\n  }\n\n","bugFix":["1f653cfcf159baeaafe5d01682a911e95bba4012"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ae14298f4eec6d5faee6a149f88ba57d14a6f21a","date":1396971290,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriterReader#testDeleteFromIndexWriter().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriterReader#testDeleteFromIndexWriter().mjava","sourceNew":"  /**\n   * Deletes using IW.deleteDocuments\n   */\n  public void testDeleteFromIndexWriter() throws Exception {\n    boolean doFullMerge = true;\n\n    Directory dir1 = getAssertNoDeletesDirectory(newDirectory());\n    IndexWriter writer = new IndexWriter(dir1, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random())));\n    // create the index\n    createIndexNoClose(!doFullMerge, \"index1\", writer);\n    writer.flush(false, true);\n    // get a reader\n    IndexReader r1 = writer.getReader();\n\n    String id10 = r1.document(10).getField(\"id\").stringValue();\n\n    // deleted IW docs should not show up in the next getReader\n    writer.deleteDocuments(new Term(\"id\", id10));\n    IndexReader r2 = writer.getReader();\n    assertEquals(1, count(new Term(\"id\", id10), r1));\n    assertEquals(0, count(new Term(\"id\", id10), r2));\n    \n    String id50 = r1.document(50).getField(\"id\").stringValue();\n    assertEquals(1, count(new Term(\"id\", id50), r1));\n    \n    writer.deleteDocuments(new Term(\"id\", id50));\n    \n    IndexReader r3 = writer.getReader();\n    assertEquals(0, count(new Term(\"id\", id10), r3));\n    assertEquals(0, count(new Term(\"id\", id50), r3));\n    \n    String id75 = r1.document(75).getField(\"id\").stringValue();\n    writer.deleteDocuments(new TermQuery(new Term(\"id\", id75)));\n    IndexReader r4 = writer.getReader();\n    assertEquals(1, count(new Term(\"id\", id75), r3));\n    assertEquals(0, count(new Term(\"id\", id75), r4));\n    \n    r1.close();\n    r2.close();\n    r3.close();\n    r4.close();\n    writer.shutdown();\n        \n    // reopen the writer to verify the delete made it to the directory\n    writer = new IndexWriter(dir1, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random())));\n    IndexReader w2r1 = writer.getReader();\n    assertEquals(0, count(new Term(\"id\", id10), w2r1));\n    w2r1.close();\n    writer.shutdown();\n    dir1.close();\n  }\n\n","sourceOld":"  /**\n   * Deletes using IW.deleteDocuments\n   */\n  public void testDeleteFromIndexWriter() throws Exception {\n    boolean doFullMerge = true;\n\n    Directory dir1 = getAssertNoDeletesDirectory(newDirectory());\n    IndexWriter writer = new IndexWriter(dir1, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random())));\n    // create the index\n    createIndexNoClose(!doFullMerge, \"index1\", writer);\n    writer.flush(false, true);\n    // get a reader\n    IndexReader r1 = writer.getReader();\n\n    String id10 = r1.document(10).getField(\"id\").stringValue();\n\n    // deleted IW docs should not show up in the next getReader\n    writer.deleteDocuments(new Term(\"id\", id10));\n    IndexReader r2 = writer.getReader();\n    assertEquals(1, count(new Term(\"id\", id10), r1));\n    assertEquals(0, count(new Term(\"id\", id10), r2));\n    \n    String id50 = r1.document(50).getField(\"id\").stringValue();\n    assertEquals(1, count(new Term(\"id\", id50), r1));\n    \n    writer.deleteDocuments(new Term(\"id\", id50));\n    \n    IndexReader r3 = writer.getReader();\n    assertEquals(0, count(new Term(\"id\", id10), r3));\n    assertEquals(0, count(new Term(\"id\", id50), r3));\n    \n    String id75 = r1.document(75).getField(\"id\").stringValue();\n    writer.deleteDocuments(new TermQuery(new Term(\"id\", id75)));\n    IndexReader r4 = writer.getReader();\n    assertEquals(1, count(new Term(\"id\", id75), r3));\n    assertEquals(0, count(new Term(\"id\", id75), r4));\n    \n    r1.close();\n    r2.close();\n    r3.close();\n    r4.close();\n    writer.close();\n        \n    // reopen the writer to verify the delete made it to the directory\n    writer = new IndexWriter(dir1, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random())));\n    IndexReader w2r1 = writer.getReader();\n    assertEquals(0, count(new Term(\"id\", id10), w2r1));\n    w2r1.close();\n    writer.close();\n    dir1.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"54a6bea0b991120a99ad0e2f72ae853fd5ecae0e","date":1406737224,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriterReader#testDeleteFromIndexWriter().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriterReader#testDeleteFromIndexWriter().mjava","sourceNew":"  /**\n   * Deletes using IW.deleteDocuments\n   */\n  public void testDeleteFromIndexWriter() throws Exception {\n    boolean doFullMerge = true;\n\n    Directory dir1 = getAssertNoDeletesDirectory(newDirectory());\n    IndexWriter writer = new IndexWriter(dir1, newIndexWriterConfig(new MockAnalyzer(random())));\n    // create the index\n    createIndexNoClose(!doFullMerge, \"index1\", writer);\n    writer.flush(false, true);\n    // get a reader\n    IndexReader r1 = writer.getReader();\n\n    String id10 = r1.document(10).getField(\"id\").stringValue();\n\n    // deleted IW docs should not show up in the next getReader\n    writer.deleteDocuments(new Term(\"id\", id10));\n    IndexReader r2 = writer.getReader();\n    assertEquals(1, count(new Term(\"id\", id10), r1));\n    assertEquals(0, count(new Term(\"id\", id10), r2));\n    \n    String id50 = r1.document(50).getField(\"id\").stringValue();\n    assertEquals(1, count(new Term(\"id\", id50), r1));\n    \n    writer.deleteDocuments(new Term(\"id\", id50));\n    \n    IndexReader r3 = writer.getReader();\n    assertEquals(0, count(new Term(\"id\", id10), r3));\n    assertEquals(0, count(new Term(\"id\", id50), r3));\n    \n    String id75 = r1.document(75).getField(\"id\").stringValue();\n    writer.deleteDocuments(new TermQuery(new Term(\"id\", id75)));\n    IndexReader r4 = writer.getReader();\n    assertEquals(1, count(new Term(\"id\", id75), r3));\n    assertEquals(0, count(new Term(\"id\", id75), r4));\n    \n    r1.close();\n    r2.close();\n    r3.close();\n    r4.close();\n    writer.shutdown();\n        \n    // reopen the writer to verify the delete made it to the directory\n    writer = new IndexWriter(dir1, newIndexWriterConfig(new MockAnalyzer(random())));\n    IndexReader w2r1 = writer.getReader();\n    assertEquals(0, count(new Term(\"id\", id10), w2r1));\n    w2r1.close();\n    writer.shutdown();\n    dir1.close();\n  }\n\n","sourceOld":"  /**\n   * Deletes using IW.deleteDocuments\n   */\n  public void testDeleteFromIndexWriter() throws Exception {\n    boolean doFullMerge = true;\n\n    Directory dir1 = getAssertNoDeletesDirectory(newDirectory());\n    IndexWriter writer = new IndexWriter(dir1, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random())));\n    // create the index\n    createIndexNoClose(!doFullMerge, \"index1\", writer);\n    writer.flush(false, true);\n    // get a reader\n    IndexReader r1 = writer.getReader();\n\n    String id10 = r1.document(10).getField(\"id\").stringValue();\n\n    // deleted IW docs should not show up in the next getReader\n    writer.deleteDocuments(new Term(\"id\", id10));\n    IndexReader r2 = writer.getReader();\n    assertEquals(1, count(new Term(\"id\", id10), r1));\n    assertEquals(0, count(new Term(\"id\", id10), r2));\n    \n    String id50 = r1.document(50).getField(\"id\").stringValue();\n    assertEquals(1, count(new Term(\"id\", id50), r1));\n    \n    writer.deleteDocuments(new Term(\"id\", id50));\n    \n    IndexReader r3 = writer.getReader();\n    assertEquals(0, count(new Term(\"id\", id10), r3));\n    assertEquals(0, count(new Term(\"id\", id50), r3));\n    \n    String id75 = r1.document(75).getField(\"id\").stringValue();\n    writer.deleteDocuments(new TermQuery(new Term(\"id\", id75)));\n    IndexReader r4 = writer.getReader();\n    assertEquals(1, count(new Term(\"id\", id75), r3));\n    assertEquals(0, count(new Term(\"id\", id75), r4));\n    \n    r1.close();\n    r2.close();\n    r3.close();\n    r4.close();\n    writer.shutdown();\n        \n    // reopen the writer to verify the delete made it to the directory\n    writer = new IndexWriter(dir1, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random())));\n    IndexReader w2r1 = writer.getReader();\n    assertEquals(0, count(new Term(\"id\", id10), w2r1));\n    w2r1.close();\n    writer.shutdown();\n    dir1.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d0ef034a4f10871667ae75181537775ddcf8ade4","date":1407610475,"type":3,"author":"Ryan Ernst","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriterReader#testDeleteFromIndexWriter().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriterReader#testDeleteFromIndexWriter().mjava","sourceNew":"  /**\n   * Deletes using IW.deleteDocuments\n   */\n  public void testDeleteFromIndexWriter() throws Exception {\n    boolean doFullMerge = true;\n\n    Directory dir1 = getAssertNoDeletesDirectory(newDirectory());\n    IndexWriter writer = new IndexWriter(dir1, newIndexWriterConfig(new MockAnalyzer(random())));\n    // create the index\n    createIndexNoClose(!doFullMerge, \"index1\", writer);\n    writer.flush(false, true);\n    // get a reader\n    IndexReader r1 = writer.getReader();\n\n    String id10 = r1.document(10).getField(\"id\").stringValue();\n\n    // deleted IW docs should not show up in the next getReader\n    writer.deleteDocuments(new Term(\"id\", id10));\n    IndexReader r2 = writer.getReader();\n    assertEquals(1, count(new Term(\"id\", id10), r1));\n    assertEquals(0, count(new Term(\"id\", id10), r2));\n    \n    String id50 = r1.document(50).getField(\"id\").stringValue();\n    assertEquals(1, count(new Term(\"id\", id50), r1));\n    \n    writer.deleteDocuments(new Term(\"id\", id50));\n    \n    IndexReader r3 = writer.getReader();\n    assertEquals(0, count(new Term(\"id\", id10), r3));\n    assertEquals(0, count(new Term(\"id\", id50), r3));\n    \n    String id75 = r1.document(75).getField(\"id\").stringValue();\n    writer.deleteDocuments(new TermQuery(new Term(\"id\", id75)));\n    IndexReader r4 = writer.getReader();\n    assertEquals(1, count(new Term(\"id\", id75), r3));\n    assertEquals(0, count(new Term(\"id\", id75), r4));\n    \n    r1.close();\n    r2.close();\n    r3.close();\n    r4.close();\n    writer.close();\n        \n    // reopen the writer to verify the delete made it to the directory\n    writer = new IndexWriter(dir1, newIndexWriterConfig(new MockAnalyzer(random())));\n    IndexReader w2r1 = writer.getReader();\n    assertEquals(0, count(new Term(\"id\", id10), w2r1));\n    w2r1.close();\n    writer.close();\n    dir1.close();\n  }\n\n","sourceOld":"  /**\n   * Deletes using IW.deleteDocuments\n   */\n  public void testDeleteFromIndexWriter() throws Exception {\n    boolean doFullMerge = true;\n\n    Directory dir1 = getAssertNoDeletesDirectory(newDirectory());\n    IndexWriter writer = new IndexWriter(dir1, newIndexWriterConfig(new MockAnalyzer(random())));\n    // create the index\n    createIndexNoClose(!doFullMerge, \"index1\", writer);\n    writer.flush(false, true);\n    // get a reader\n    IndexReader r1 = writer.getReader();\n\n    String id10 = r1.document(10).getField(\"id\").stringValue();\n\n    // deleted IW docs should not show up in the next getReader\n    writer.deleteDocuments(new Term(\"id\", id10));\n    IndexReader r2 = writer.getReader();\n    assertEquals(1, count(new Term(\"id\", id10), r1));\n    assertEquals(0, count(new Term(\"id\", id10), r2));\n    \n    String id50 = r1.document(50).getField(\"id\").stringValue();\n    assertEquals(1, count(new Term(\"id\", id50), r1));\n    \n    writer.deleteDocuments(new Term(\"id\", id50));\n    \n    IndexReader r3 = writer.getReader();\n    assertEquals(0, count(new Term(\"id\", id10), r3));\n    assertEquals(0, count(new Term(\"id\", id50), r3));\n    \n    String id75 = r1.document(75).getField(\"id\").stringValue();\n    writer.deleteDocuments(new TermQuery(new Term(\"id\", id75)));\n    IndexReader r4 = writer.getReader();\n    assertEquals(1, count(new Term(\"id\", id75), r3));\n    assertEquals(0, count(new Term(\"id\", id75), r4));\n    \n    r1.close();\n    r2.close();\n    r3.close();\n    r4.close();\n    writer.shutdown();\n        \n    // reopen the writer to verify the delete made it to the directory\n    writer = new IndexWriter(dir1, newIndexWriterConfig(new MockAnalyzer(random())));\n    IndexReader w2r1 = writer.getReader();\n    assertEquals(0, count(new Term(\"id\", id10), w2r1));\n    w2r1.close();\n    writer.shutdown();\n    dir1.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3f354ba79a5a3e8491ec2953f14f365a02c058ac","date":1598293148,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriterReader#testDeleteFromIndexWriter().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriterReader#testDeleteFromIndexWriter().mjava","sourceNew":"  /**\n   * Deletes using IW.deleteDocuments\n   */\n  public void testDeleteFromIndexWriter() throws Exception {\n    boolean doFullMerge = true;\n\n    Directory dir1 = getAssertNoDeletesDirectory(newDirectory());\n    IndexWriter writer = new IndexWriter(dir1, newIndexWriterConfig(new MockAnalyzer(random())).setMaxFullFlushMergeWaitMillis(0));\n    // create the index\n    createIndexNoClose(!doFullMerge, \"index1\", writer);\n    writer.flush(false, true);\n    // get a reader\n    IndexReader r1 = writer.getReader();\n\n    String id10 = r1.document(10).getField(\"id\").stringValue();\n\n    // deleted IW docs should not show up in the next getReader\n    writer.deleteDocuments(new Term(\"id\", id10));\n    IndexReader r2 = writer.getReader();\n    assertEquals(1, count(new Term(\"id\", id10), r1));\n    assertEquals(0, count(new Term(\"id\", id10), r2));\n    \n    String id50 = r1.document(50).getField(\"id\").stringValue();\n    assertEquals(1, count(new Term(\"id\", id50), r1));\n    \n    writer.deleteDocuments(new Term(\"id\", id50));\n    \n    IndexReader r3 = writer.getReader();\n    assertEquals(0, count(new Term(\"id\", id10), r3));\n    assertEquals(0, count(new Term(\"id\", id50), r3));\n    \n    String id75 = r1.document(75).getField(\"id\").stringValue();\n    writer.deleteDocuments(new TermQuery(new Term(\"id\", id75)));\n    IndexReader r4 = writer.getReader();\n    assertEquals(1, count(new Term(\"id\", id75), r3));\n    assertEquals(0, count(new Term(\"id\", id75), r4));\n    \n    r1.close();\n    r2.close();\n    r3.close();\n    r4.close();\n    writer.close();\n        \n    // reopen the writer to verify the delete made it to the directory\n    writer = new IndexWriter(dir1, newIndexWriterConfig(new MockAnalyzer(random())).setMaxFullFlushMergeWaitMillis(0));\n    IndexReader w2r1 = writer.getReader();\n    assertEquals(0, count(new Term(\"id\", id10), w2r1));\n    w2r1.close();\n    writer.close();\n    dir1.close();\n  }\n\n","sourceOld":"  /**\n   * Deletes using IW.deleteDocuments\n   */\n  public void testDeleteFromIndexWriter() throws Exception {\n    boolean doFullMerge = true;\n\n    Directory dir1 = getAssertNoDeletesDirectory(newDirectory());\n    IndexWriter writer = new IndexWriter(dir1, newIndexWriterConfig(new MockAnalyzer(random())));\n    // create the index\n    createIndexNoClose(!doFullMerge, \"index1\", writer);\n    writer.flush(false, true);\n    // get a reader\n    IndexReader r1 = writer.getReader();\n\n    String id10 = r1.document(10).getField(\"id\").stringValue();\n\n    // deleted IW docs should not show up in the next getReader\n    writer.deleteDocuments(new Term(\"id\", id10));\n    IndexReader r2 = writer.getReader();\n    assertEquals(1, count(new Term(\"id\", id10), r1));\n    assertEquals(0, count(new Term(\"id\", id10), r2));\n    \n    String id50 = r1.document(50).getField(\"id\").stringValue();\n    assertEquals(1, count(new Term(\"id\", id50), r1));\n    \n    writer.deleteDocuments(new Term(\"id\", id50));\n    \n    IndexReader r3 = writer.getReader();\n    assertEquals(0, count(new Term(\"id\", id10), r3));\n    assertEquals(0, count(new Term(\"id\", id50), r3));\n    \n    String id75 = r1.document(75).getField(\"id\").stringValue();\n    writer.deleteDocuments(new TermQuery(new Term(\"id\", id75)));\n    IndexReader r4 = writer.getReader();\n    assertEquals(1, count(new Term(\"id\", id75), r3));\n    assertEquals(0, count(new Term(\"id\", id75), r4));\n    \n    r1.close();\n    r2.close();\n    r3.close();\n    r4.close();\n    writer.close();\n        \n    // reopen the writer to verify the delete made it to the directory\n    writer = new IndexWriter(dir1, newIndexWriterConfig(new MockAnalyzer(random())));\n    IndexReader w2r1 = writer.getReader();\n    assertEquals(0, count(new Term(\"id\", id10), w2r1));\n    w2r1.close();\n    writer.close();\n    dir1.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"527cc14542789f47d75da436cb4287d1ab887e34":["a45bec74b98f6fc05f52770cfb425739e6563960"],"c7bd1fdddb8e84c1857d1a55c32ced51f0ed2069":["629c38c4ae4e303d0617e05fbfe508140b32f0a3"],"54a6bea0b991120a99ad0e2f72ae853fd5ecae0e":["ae14298f4eec6d5faee6a149f88ba57d14a6f21a"],"a45bec74b98f6fc05f52770cfb425739e6563960":["c7bd1fdddb8e84c1857d1a55c32ced51f0ed2069"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"d0ef034a4f10871667ae75181537775ddcf8ade4":["54a6bea0b991120a99ad0e2f72ae853fd5ecae0e"],"8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee":["c7bd1fdddb8e84c1857d1a55c32ced51f0ed2069"],"ae14298f4eec6d5faee6a149f88ba57d14a6f21a":["527cc14542789f47d75da436cb4287d1ab887e34"],"629c38c4ae4e303d0617e05fbfe508140b32f0a3":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"3f354ba79a5a3e8491ec2953f14f365a02c058ac":["d0ef034a4f10871667ae75181537775ddcf8ade4"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3f354ba79a5a3e8491ec2953f14f365a02c058ac"]},"commit2Childs":{"527cc14542789f47d75da436cb4287d1ab887e34":["ae14298f4eec6d5faee6a149f88ba57d14a6f21a"],"c7bd1fdddb8e84c1857d1a55c32ced51f0ed2069":["a45bec74b98f6fc05f52770cfb425739e6563960","8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee"],"54a6bea0b991120a99ad0e2f72ae853fd5ecae0e":["d0ef034a4f10871667ae75181537775ddcf8ade4"],"a45bec74b98f6fc05f52770cfb425739e6563960":["527cc14542789f47d75da436cb4287d1ab887e34"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["629c38c4ae4e303d0617e05fbfe508140b32f0a3"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"d0ef034a4f10871667ae75181537775ddcf8ade4":["3f354ba79a5a3e8491ec2953f14f365a02c058ac"],"8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee":[],"ae14298f4eec6d5faee6a149f88ba57d14a6f21a":["54a6bea0b991120a99ad0e2f72ae853fd5ecae0e"],"629c38c4ae4e303d0617e05fbfe508140b32f0a3":["c7bd1fdddb8e84c1857d1a55c32ced51f0ed2069"],"3f354ba79a5a3e8491ec2953f14f365a02c058ac":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}