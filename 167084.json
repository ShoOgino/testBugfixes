{"path":"modules/analysis/common/src/java/org/apache/lucene/analysis/core/StopFilter#setEnablePositionIncrements(boolean).mjava","commits":[{"id":"790c3f61c9b891d66d919c5d10db9fa5216eb0f1","date":1274818604,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"modules/analysis/common/src/java/org/apache/lucene/analysis/core/StopFilter#setEnablePositionIncrements(boolean).mjava","pathOld":"lucene/src/java/org/apache/lucene/analysis/StopFilter#setEnablePositionIncrements(boolean).mjava","sourceNew":"  /**\n   * If <code>true</code>, this StopFilter will preserve\n   * positions of the incoming tokens (ie, accumulate and\n   * set position increments of the removed stop tokens).\n   * Generally, <code>true</code> is best as it does not\n   * lose information (positions of the original tokens)\n   * during indexing.\n   * \n   * <p> When set, when a token is stopped\n   * (omitted), the position increment of the following\n   * token is incremented.\n   *\n   * <p> <b>NOTE</b>: be sure to also\n   * set {@link QueryParser#setEnablePositionIncrements} if\n   * you use QueryParser to create queries.\n   */\n  public void setEnablePositionIncrements(boolean enable) {\n    this.enablePositionIncrements = enable;\n  }\n\n","sourceOld":"  /**\n   * If <code>true</code>, this StopFilter will preserve\n   * positions of the incoming tokens (ie, accumulate and\n   * set position increments of the removed stop tokens).\n   * Generally, <code>true</code> is best as it does not\n   * lose information (positions of the original tokens)\n   * during indexing.\n   * \n   * <p> When set, when a token is stopped\n   * (omitted), the position increment of the following\n   * token is incremented.\n   *\n   * <p> <b>NOTE</b>: be sure to also\n   * set {@link QueryParser#setEnablePositionIncrements} if\n   * you use QueryParser to create queries.\n   */\n  public void setEnablePositionIncrements(boolean enable) {\n    this.enablePositionIncrements = enable;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4e8cc373c801e54cec75daf9f52792cb4b17f536","date":1291116159,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"modules/analysis/common/src/java/org/apache/lucene/analysis/core/StopFilter#setEnablePositionIncrements(boolean).mjava","pathOld":"modules/analysis/common/src/java/org/apache/lucene/analysis/core/StopFilter#setEnablePositionIncrements(boolean).mjava","sourceNew":"  /**\n   * If <code>true</code>, this StopFilter will preserve\n   * positions of the incoming tokens (ie, accumulate and\n   * set position increments of the removed stop tokens).\n   * Generally, <code>true</code> is best as it does not\n   * lose information (positions of the original tokens)\n   * during indexing.\n   *\n   * Default is true.\n   * \n   * <p> When set, when a token is stopped\n   * (omitted), the position increment of the following\n   * token is incremented.\n   *\n   * <p> <b>NOTE</b>: be sure to also\n   * set {@link QueryParser#setEnablePositionIncrements} if\n   * you use QueryParser to create queries.\n   */\n  public void setEnablePositionIncrements(boolean enable) {\n    this.enablePositionIncrements = enable;\n  }\n\n","sourceOld":"  /**\n   * If <code>true</code>, this StopFilter will preserve\n   * positions of the incoming tokens (ie, accumulate and\n   * set position increments of the removed stop tokens).\n   * Generally, <code>true</code> is best as it does not\n   * lose information (positions of the original tokens)\n   * during indexing.\n   * \n   * <p> When set, when a token is stopped\n   * (omitted), the position increment of the following\n   * token is incremented.\n   *\n   * <p> <b>NOTE</b>: be sure to also\n   * set {@link QueryParser#setEnablePositionIncrements} if\n   * you use QueryParser to create queries.\n   */\n  public void setEnablePositionIncrements(boolean enable) {\n    this.enablePositionIncrements = enable;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3bb13258feba31ab676502787ab2e1779f129b7a","date":1291596436,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"modules/analysis/common/src/java/org/apache/lucene/analysis/core/StopFilter#setEnablePositionIncrements(boolean).mjava","pathOld":"modules/analysis/common/src/java/org/apache/lucene/analysis/core/StopFilter#setEnablePositionIncrements(boolean).mjava","sourceNew":"  /**\n   * If <code>true</code>, this StopFilter will preserve\n   * positions of the incoming tokens (ie, accumulate and\n   * set position increments of the removed stop tokens).\n   * Generally, <code>true</code> is best as it does not\n   * lose information (positions of the original tokens)\n   * during indexing.\n   *\n   * Default is true.\n   * \n   * <p> When set, when a token is stopped\n   * (omitted), the position increment of the following\n   * token is incremented.\n   *\n   * <p> <b>NOTE</b>: be sure to also\n   * set {@link QueryParser#setEnablePositionIncrements} if\n   * you use QueryParser to create queries.\n   */\n  public void setEnablePositionIncrements(boolean enable) {\n    this.enablePositionIncrements = enable;\n  }\n\n","sourceOld":"  /**\n   * If <code>true</code>, this StopFilter will preserve\n   * positions of the incoming tokens (ie, accumulate and\n   * set position increments of the removed stop tokens).\n   * Generally, <code>true</code> is best as it does not\n   * lose information (positions of the original tokens)\n   * during indexing.\n   * \n   * <p> When set, when a token is stopped\n   * (omitted), the position increment of the following\n   * token is incremented.\n   *\n   * <p> <b>NOTE</b>: be sure to also\n   * set {@link QueryParser#setEnablePositionIncrements} if\n   * you use QueryParser to create queries.\n   */\n  public void setEnablePositionIncrements(boolean enable) {\n    this.enablePositionIncrements = enable;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","date":1292920096,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"modules/analysis/common/src/java/org/apache/lucene/analysis/core/StopFilter#setEnablePositionIncrements(boolean).mjava","pathOld":"modules/analysis/common/src/java/org/apache/lucene/analysis/core/StopFilter#setEnablePositionIncrements(boolean).mjava","sourceNew":"  /**\n   * If <code>true</code>, this StopFilter will preserve\n   * positions of the incoming tokens (ie, accumulate and\n   * set position increments of the removed stop tokens).\n   * Generally, <code>true</code> is best as it does not\n   * lose information (positions of the original tokens)\n   * during indexing.\n   *\n   * Default is true.\n   * \n   * <p> When set, when a token is stopped\n   * (omitted), the position increment of the following\n   * token is incremented.\n   *\n   * <p> <b>NOTE</b>: be sure to also\n   * set {@link QueryParser#setEnablePositionIncrements} if\n   * you use QueryParser to create queries.\n   */\n  public void setEnablePositionIncrements(boolean enable) {\n    this.enablePositionIncrements = enable;\n  }\n\n","sourceOld":"  /**\n   * If <code>true</code>, this StopFilter will preserve\n   * positions of the incoming tokens (ie, accumulate and\n   * set position increments of the removed stop tokens).\n   * Generally, <code>true</code> is best as it does not\n   * lose information (positions of the original tokens)\n   * during indexing.\n   * \n   * <p> When set, when a token is stopped\n   * (omitted), the position increment of the following\n   * token is incremented.\n   *\n   * <p> <b>NOTE</b>: be sure to also\n   * set {@link QueryParser#setEnablePositionIncrements} if\n   * you use QueryParser to create queries.\n   */\n  public void setEnablePositionIncrements(boolean enable) {\n    this.enablePositionIncrements = enable;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f714d3d16beb7d9cc74e7ae85c110a7976c62938","date":1296412234,"type":5,"author":"Uwe Schindler","isMerge":false,"pathNew":"modules/analysis/common/src/java/org/apache/lucene/analysis/util/FilteringTokenFilter#setEnablePositionIncrements(boolean).mjava","pathOld":"modules/analysis/common/src/java/org/apache/lucene/analysis/core/StopFilter#setEnablePositionIncrements(boolean).mjava","sourceNew":"  /**\n   * If <code>true</code>, this TokenFilter will preserve\n   * positions of the incoming tokens (ie, accumulate and\n   * set position increments of the removed tokens).\n   * Generally, <code>true</code> is best as it does not\n   * lose information (positions of the original tokens)\n   * during indexing.\n   * \n   * <p> When set, when a token is stopped\n   * (omitted), the position increment of the following\n   * token is incremented.\n   *\n   * <p> <b>NOTE</b>: be sure to also\n   * set {@link QueryParser#setEnablePositionIncrements} if\n   * you use QueryParser to create queries.\n   */\n  public void setEnablePositionIncrements(boolean enable) {\n    this.enablePositionIncrements = enable;\n  }\n\n","sourceOld":"  /**\n   * If <code>true</code>, this StopFilter will preserve\n   * positions of the incoming tokens (ie, accumulate and\n   * set position increments of the removed stop tokens).\n   * Generally, <code>true</code> is best as it does not\n   * lose information (positions of the original tokens)\n   * during indexing.\n   *\n   * Default is true.\n   * \n   * <p> When set, when a token is stopped\n   * (omitted), the position increment of the following\n   * token is incremented.\n   *\n   * <p> <b>NOTE</b>: be sure to also\n   * set {@link QueryParser#setEnablePositionIncrements} if\n   * you use QueryParser to create queries.\n   */\n  public void setEnablePositionIncrements(boolean enable) {\n    this.enablePositionIncrements = enable;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"29ef99d61cda9641b6250bf9567329a6e65f901d","date":1297244127,"type":4,"author":"Simon Willnauer","isMerge":true,"pathNew":"/dev/null","pathOld":"modules/analysis/common/src/java/org/apache/lucene/analysis/core/StopFilter#setEnablePositionIncrements(boolean).mjava","sourceNew":null,"sourceOld":"  /**\n   * If <code>true</code>, this StopFilter will preserve\n   * positions of the incoming tokens (ie, accumulate and\n   * set position increments of the removed stop tokens).\n   * Generally, <code>true</code> is best as it does not\n   * lose information (positions of the original tokens)\n   * during indexing.\n   *\n   * Default is true.\n   * \n   * <p> When set, when a token is stopped\n   * (omitted), the position increment of the following\n   * token is incremented.\n   *\n   * <p> <b>NOTE</b>: be sure to also\n   * set {@link QueryParser#setEnablePositionIncrements} if\n   * you use QueryParser to create queries.\n   */\n  public void setEnablePositionIncrements(boolean enable) {\n    this.enablePositionIncrements = enable;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bde51b089eb7f86171eb3406e38a274743f9b7ac","date":1298336439,"type":5,"author":"Michael Busch","isMerge":true,"pathNew":"modules/analysis/common/src/java/org/apache/lucene/analysis/util/FilteringTokenFilter#setEnablePositionIncrements(boolean).mjava","pathOld":"modules/analysis/common/src/java/org/apache/lucene/analysis/core/StopFilter#setEnablePositionIncrements(boolean).mjava","sourceNew":"  /**\n   * If <code>true</code>, this TokenFilter will preserve\n   * positions of the incoming tokens (ie, accumulate and\n   * set position increments of the removed tokens).\n   * Generally, <code>true</code> is best as it does not\n   * lose information (positions of the original tokens)\n   * during indexing.\n   * \n   * <p> When set, when a token is stopped\n   * (omitted), the position increment of the following\n   * token is incremented.\n   *\n   * <p> <b>NOTE</b>: be sure to also\n   * set {@link QueryParser#setEnablePositionIncrements} if\n   * you use QueryParser to create queries.\n   */\n  public void setEnablePositionIncrements(boolean enable) {\n    this.enablePositionIncrements = enable;\n  }\n\n","sourceOld":"  /**\n   * If <code>true</code>, this StopFilter will preserve\n   * positions of the incoming tokens (ie, accumulate and\n   * set position increments of the removed stop tokens).\n   * Generally, <code>true</code> is best as it does not\n   * lose information (positions of the original tokens)\n   * during indexing.\n   *\n   * Default is true.\n   * \n   * <p> When set, when a token is stopped\n   * (omitted), the position increment of the following\n   * token is incremented.\n   *\n   * <p> <b>NOTE</b>: be sure to also\n   * set {@link QueryParser#setEnablePositionIncrements} if\n   * you use QueryParser to create queries.\n   */\n  public void setEnablePositionIncrements(boolean enable) {\n    this.enablePositionIncrements = enable;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"f714d3d16beb7d9cc74e7ae85c110a7976c62938":["4e8cc373c801e54cec75daf9f52792cb4b17f536"],"29ef99d61cda9641b6250bf9567329a6e65f901d":["3bb13258feba31ab676502787ab2e1779f129b7a","f714d3d16beb7d9cc74e7ae85c110a7976c62938"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["790c3f61c9b891d66d919c5d10db9fa5216eb0f1","4e8cc373c801e54cec75daf9f52792cb4b17f536"],"bde51b089eb7f86171eb3406e38a274743f9b7ac":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","f714d3d16beb7d9cc74e7ae85c110a7976c62938"],"3bb13258feba31ab676502787ab2e1779f129b7a":["790c3f61c9b891d66d919c5d10db9fa5216eb0f1","4e8cc373c801e54cec75daf9f52792cb4b17f536"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["f714d3d16beb7d9cc74e7ae85c110a7976c62938"],"4e8cc373c801e54cec75daf9f52792cb4b17f536":["790c3f61c9b891d66d919c5d10db9fa5216eb0f1"],"790c3f61c9b891d66d919c5d10db9fa5216eb0f1":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"f714d3d16beb7d9cc74e7ae85c110a7976c62938":["29ef99d61cda9641b6250bf9567329a6e65f901d","bde51b089eb7f86171eb3406e38a274743f9b7ac","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"29ef99d61cda9641b6250bf9567329a6e65f901d":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["790c3f61c9b891d66d919c5d10db9fa5216eb0f1"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["bde51b089eb7f86171eb3406e38a274743f9b7ac"],"3bb13258feba31ab676502787ab2e1779f129b7a":["29ef99d61cda9641b6250bf9567329a6e65f901d"],"bde51b089eb7f86171eb3406e38a274743f9b7ac":[],"4e8cc373c801e54cec75daf9f52792cb4b17f536":["f714d3d16beb7d9cc74e7ae85c110a7976c62938","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","3bb13258feba31ab676502787ab2e1779f129b7a"],"790c3f61c9b891d66d919c5d10db9fa5216eb0f1":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","3bb13258feba31ab676502787ab2e1779f129b7a","4e8cc373c801e54cec75daf9f52792cb4b17f536"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["29ef99d61cda9641b6250bf9567329a6e65f901d","bde51b089eb7f86171eb3406e38a274743f9b7ac","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}