{"path":"solr/core/src/test/org/apache/solr/handler/export/TestExportWriter#testSmallChains().mjava","commits":[{"id":"16502203cfbb2b9695ec18dbb9d2d2c70dd1ff80","date":1532111887,"type":0,"author":"Varun Thacker","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/export/TestExportWriter#testSmallChains().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testSmallChains() throws Exception {\n    clearIndex();\n\n    assertU(adoc(\"id\",\"1\",\n        \"field1_i_p\",Integer.toString(Integer.MIN_VALUE),\n        \"field2_i_p\",\"1\"));\n    assertU(commit());\n\n    assertU(adoc(\"id\",\"2\",\n        \"field1_i_p\",Integer.toString(Integer.MIN_VALUE),\n        \"field2_i_p\",Integer.toString(Integer.MIN_VALUE + 1)));\n    assertU(commit());\n\n    assertU(adoc(\"id\",\"3\",\n        \"field1_i_p\",Integer.toString(Integer.MIN_VALUE),\n        \"field2_i_p\",Integer.toString(Integer.MIN_VALUE)));\n    assertU(commit());\n\n    //Test single value DocValue output\n    //Expected for asc sort doc3 -> doc2 -> doc1\n    String s =  h.query(req(\"q\", \"*:*\", \"qt\", \"/export\", \"fl\", \"id\", \"sort\", \"field1_i_p asc,field2_i_p asc\"));\n    assertJsonEquals(s, \"{\\n\" +\n        \"  \\\"responseHeader\\\":{\\\"status\\\":0},\\n\" +\n        \"  \\\"response\\\":{\\n\" +\n        \"    \\\"numFound\\\":3,\\n\" +\n        \"    \\\"docs\\\":[{\\n\" +\n        \"        \\\"id\\\":\\\"3\\\"}\\n\" +\n        \"      ,{\\n\" +\n        \"        \\\"id\\\":\\\"2\\\"}\\n\" +\n        \"      ,{\\n\" +\n        \"        \\\"id\\\":\\\"1\\\"}]}}\");\n\n    clearIndex();\n    //Adding 3 docs of integers with the following values\n    //  doc1: Integer.MIN_VALUE,1,2,Integer.MAX_VALUE,3,4,5,6\n    //  doc2: Integer.MIN_VALUE,Integer.MIN_VALUE,2,Integer.MAX_VALUE,4,4,5,6\n    //  doc3: Integer.MIN_VALUE,Integer.MIN_VALUE,2,Integer.MAX_VALUE,3,4,5,6\n\n    assertU(adoc(\"id\",\"1\",\n        \"field1_i_p\",Integer.toString(Integer.MIN_VALUE),\n        \"field2_i_p\",\"1\",\n        \"field3_i_p\",\"2\",\n        \"field4_i_p\",Integer.toString(Integer.MAX_VALUE),\n        \"field5_i_p\",\"3\",\n        \"field6_i_p\",\"4\",\n        \"field7_i_p\",\"5\",\n        \"field8_i_p\",\"6\"));\n    assertU(commit());\n\n    assertU(adoc(\"id\",\"2\",\n        \"field1_i_p\",Integer.toString(Integer.MIN_VALUE),\n        \"field2_i_p\",Integer.toString(Integer.MIN_VALUE),\n        \"field3_i_p\",\"2\",\n        \"field4_i_p\",Integer.toString(Integer.MAX_VALUE),\n        \"field5_i_p\",\"4\",\n        \"field6_i_p\",\"4\",\n        \"field7_i_p\",\"5\",\n        \"field8_i_p\",\"6\"));\n    assertU(commit());\n\n    assertU(adoc(\"id\",\"3\",\n        \"field1_i_p\",Integer.toString(Integer.MIN_VALUE),\n        \"field2_i_p\",Integer.toString(Integer.MIN_VALUE),\n        \"field3_i_p\",\"2\",\n        \"field4_i_p\",Integer.toString(Integer.MAX_VALUE),\n        \"field5_i_p\",\"3\",\n        \"field6_i_p\",\"4\",\n        \"field7_i_p\",\"5\",\n        \"field8_i_p\",\"6\"));\n    assertU(commit());\n\n    s =  h.query(req(\"q\", \"*:*\", \"qt\", \"/export\", \"fl\", \"id\", \"sort\", \"field1_i_p asc,field2_i_p asc,field3_i_p asc,field4_i_p asc,field5_i_p desc,field6_i_p desc,field7_i_p desc,field8_i_p asc\"));\n    assertJsonEquals(s, \"{\\n\" +\n        \"  \\\"responseHeader\\\":{\\\"status\\\":0},\\n\" +\n        \"  \\\"response\\\":{\\n\" +\n        \"    \\\"numFound\\\":3,\\n\" +\n        \"    \\\"docs\\\":[{\\n\" +\n        \"        \\\"id\\\":\\\"2\\\"}\\n\" +\n        \"      ,{\\n\" +\n        \"        \\\"id\\\":\\\"3\\\"}\\n\" +\n        \"      ,{\\n\" +\n        \"        \\\"id\\\":\\\"1\\\"}]}}\");\n\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"16502203cfbb2b9695ec18dbb9d2d2c70dd1ff80":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["16502203cfbb2b9695ec18dbb9d2d2c70dd1ff80"]},"commit2Childs":{"16502203cfbb2b9695ec18dbb9d2d2c70dd1ff80":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["16502203cfbb2b9695ec18dbb9d2d2c70dd1ff80"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}