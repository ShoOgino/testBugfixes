{"path":"lucene/core/src/test/org/apache/lucene/index/TestDirectoryReader#testTryIncRef().mjava","commits":[{"id":"83e99d44c4a660a48c0fcc7a0108ad0a56dc2f87","date":1328967626,"type":1,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestDirectoryReader#testTryIncRef().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestIndexReader#testTryIncRef().mjava","sourceNew":"  public void testTryIncRef() throws CorruptIndexException, LockObtainFailedException, IOException {\n    Directory dir = newDirectory();\n    IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n    writer.addDocument(new Document());\n    writer.commit();\n    DirectoryReader r = DirectoryReader.open(dir);\n    assertTrue(r.tryIncRef());\n    r.decRef();\n    r.close();\n    assertFalse(r.tryIncRef());\n    writer.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testTryIncRef() throws CorruptIndexException, LockObtainFailedException, IOException {\n    Directory dir = newDirectory();\n    IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n    writer.addDocument(new Document());\n    writer.commit();\n    DirectoryReader r = DirectoryReader.open(dir);\n    assertTrue(r.tryIncRef());\n    r.decRef();\n    r.close();\n    assertFalse(r.tryIncRef());\n    writer.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"629c38c4ae4e303d0617e05fbfe508140b32f0a3","date":1334500904,"type":3,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestDirectoryReader#testTryIncRef().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestDirectoryReader#testTryIncRef().mjava","sourceNew":"  public void testTryIncRef() throws CorruptIndexException, LockObtainFailedException, IOException {\n    Directory dir = newDirectory();\n    IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random())));\n    writer.addDocument(new Document());\n    writer.commit();\n    DirectoryReader r = DirectoryReader.open(dir);\n    assertTrue(r.tryIncRef());\n    r.decRef();\n    r.close();\n    assertFalse(r.tryIncRef());\n    writer.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testTryIncRef() throws CorruptIndexException, LockObtainFailedException, IOException {\n    Directory dir = newDirectory();\n    IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n    writer.addDocument(new Document());\n    writer.commit();\n    DirectoryReader r = DirectoryReader.open(dir);\n    assertTrue(r.tryIncRef());\n    r.decRef();\n    r.close();\n    assertFalse(r.tryIncRef());\n    writer.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"4d3e8520fd031bab31fd0e4d480e55958bc45efe","date":1340901565,"type":3,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestDirectoryReader#testTryIncRef().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestDirectoryReader#testTryIncRef().mjava","sourceNew":"  public void testTryIncRef() throws IOException {\n    Directory dir = newDirectory();\n    IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random())));\n    writer.addDocument(new Document());\n    writer.commit();\n    DirectoryReader r = DirectoryReader.open(dir);\n    assertTrue(r.tryIncRef());\n    r.decRef();\n    r.close();\n    assertFalse(r.tryIncRef());\n    writer.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testTryIncRef() throws CorruptIndexException, LockObtainFailedException, IOException {\n    Directory dir = newDirectory();\n    IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random())));\n    writer.addDocument(new Document());\n    writer.commit();\n    DirectoryReader r = DirectoryReader.open(dir);\n    assertTrue(r.tryIncRef());\n    r.decRef();\n    r.close();\n    assertFalse(r.tryIncRef());\n    writer.close();\n    dir.close();\n  }\n\n","bugFix":["abba29aa88f170f3d51899c885b760337dd1c47c"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fe33227f6805edab2036cbb80645cc4e2d1fa424","date":1342713534,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestDirectoryReader#testTryIncRef().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestDirectoryReader#testTryIncRef().mjava","sourceNew":"  public void testTryIncRef() throws IOException {\n    Directory dir = newDirectory();\n    IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random())));\n    writer.addDocument(new Document());\n    writer.commit();\n    DirectoryReader r = DirectoryReader.open(dir);\n    assertTrue(r.tryIncRef());\n    r.decRef();\n    r.close();\n    assertFalse(r.tryIncRef());\n    writer.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testTryIncRef() throws CorruptIndexException, LockObtainFailedException, IOException {\n    Directory dir = newDirectory();\n    IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random())));\n    writer.addDocument(new Document());\n    writer.commit();\n    DirectoryReader r = DirectoryReader.open(dir);\n    assertTrue(r.tryIncRef());\n    r.decRef();\n    r.close();\n    assertFalse(r.tryIncRef());\n    writer.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ae14298f4eec6d5faee6a149f88ba57d14a6f21a","date":1396971290,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestDirectoryReader#testTryIncRef().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestDirectoryReader#testTryIncRef().mjava","sourceNew":"  public void testTryIncRef() throws IOException {\n    Directory dir = newDirectory();\n    IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random())));\n    writer.addDocument(new Document());\n    writer.commit();\n    DirectoryReader r = DirectoryReader.open(dir);\n    assertTrue(r.tryIncRef());\n    r.decRef();\n    r.close();\n    assertFalse(r.tryIncRef());\n    writer.shutdown();\n    dir.close();\n  }\n\n","sourceOld":"  public void testTryIncRef() throws IOException {\n    Directory dir = newDirectory();\n    IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random())));\n    writer.addDocument(new Document());\n    writer.commit();\n    DirectoryReader r = DirectoryReader.open(dir);\n    assertTrue(r.tryIncRef());\n    r.decRef();\n    r.close();\n    assertFalse(r.tryIncRef());\n    writer.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"54a6bea0b991120a99ad0e2f72ae853fd5ecae0e","date":1406737224,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestDirectoryReader#testTryIncRef().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestDirectoryReader#testTryIncRef().mjava","sourceNew":"  public void testTryIncRef() throws IOException {\n    Directory dir = newDirectory();\n    IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig(new MockAnalyzer(random())));\n    writer.addDocument(new Document());\n    writer.commit();\n    DirectoryReader r = DirectoryReader.open(dir);\n    assertTrue(r.tryIncRef());\n    r.decRef();\n    r.close();\n    assertFalse(r.tryIncRef());\n    writer.shutdown();\n    dir.close();\n  }\n\n","sourceOld":"  public void testTryIncRef() throws IOException {\n    Directory dir = newDirectory();\n    IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random())));\n    writer.addDocument(new Document());\n    writer.commit();\n    DirectoryReader r = DirectoryReader.open(dir);\n    assertTrue(r.tryIncRef());\n    r.decRef();\n    r.close();\n    assertFalse(r.tryIncRef());\n    writer.shutdown();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d0ef034a4f10871667ae75181537775ddcf8ade4","date":1407610475,"type":3,"author":"Ryan Ernst","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestDirectoryReader#testTryIncRef().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestDirectoryReader#testTryIncRef().mjava","sourceNew":"  public void testTryIncRef() throws IOException {\n    Directory dir = newDirectory();\n    IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig(new MockAnalyzer(random())));\n    writer.addDocument(new Document());\n    writer.commit();\n    DirectoryReader r = DirectoryReader.open(dir);\n    assertTrue(r.tryIncRef());\n    r.decRef();\n    r.close();\n    assertFalse(r.tryIncRef());\n    writer.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testTryIncRef() throws IOException {\n    Directory dir = newDirectory();\n    IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig(new MockAnalyzer(random())));\n    writer.addDocument(new Document());\n    writer.commit();\n    DirectoryReader r = DirectoryReader.open(dir);\n    assertTrue(r.tryIncRef());\n    r.decRef();\n    r.close();\n    assertFalse(r.tryIncRef());\n    writer.shutdown();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"54a6bea0b991120a99ad0e2f72ae853fd5ecae0e":["ae14298f4eec6d5faee6a149f88ba57d14a6f21a"],"83e99d44c4a660a48c0fcc7a0108ad0a56dc2f87":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"fe33227f6805edab2036cbb80645cc4e2d1fa424":["629c38c4ae4e303d0617e05fbfe508140b32f0a3","4d3e8520fd031bab31fd0e4d480e55958bc45efe"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"d0ef034a4f10871667ae75181537775ddcf8ade4":["54a6bea0b991120a99ad0e2f72ae853fd5ecae0e"],"ae14298f4eec6d5faee6a149f88ba57d14a6f21a":["4d3e8520fd031bab31fd0e4d480e55958bc45efe"],"4d3e8520fd031bab31fd0e4d480e55958bc45efe":["629c38c4ae4e303d0617e05fbfe508140b32f0a3"],"629c38c4ae4e303d0617e05fbfe508140b32f0a3":["83e99d44c4a660a48c0fcc7a0108ad0a56dc2f87"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["d0ef034a4f10871667ae75181537775ddcf8ade4"]},"commit2Childs":{"54a6bea0b991120a99ad0e2f72ae853fd5ecae0e":["d0ef034a4f10871667ae75181537775ddcf8ade4"],"83e99d44c4a660a48c0fcc7a0108ad0a56dc2f87":["629c38c4ae4e303d0617e05fbfe508140b32f0a3"],"fe33227f6805edab2036cbb80645cc4e2d1fa424":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["83e99d44c4a660a48c0fcc7a0108ad0a56dc2f87"],"d0ef034a4f10871667ae75181537775ddcf8ade4":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"ae14298f4eec6d5faee6a149f88ba57d14a6f21a":["54a6bea0b991120a99ad0e2f72ae853fd5ecae0e"],"629c38c4ae4e303d0617e05fbfe508140b32f0a3":["fe33227f6805edab2036cbb80645cc4e2d1fa424","4d3e8520fd031bab31fd0e4d480e55958bc45efe"],"4d3e8520fd031bab31fd0e4d480e55958bc45efe":["fe33227f6805edab2036cbb80645cc4e2d1fa424","ae14298f4eec6d5faee6a149f88ba57d14a6f21a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["fe33227f6805edab2036cbb80645cc4e2d1fa424","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}