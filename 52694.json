{"path":"lucene/src/java/org/apache/lucene/util/BytesRef#copy(BytesRef).mjava","commits":[{"id":"955c32f886db6f6356c9fcdea6b1f1cb4effda24","date":1270581567,"type":0,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/util/BytesRef#copy(BytesRef).mjava","pathOld":"/dev/null","sourceNew":"  public void copy(BytesRef other) {\n    if (bytes == null) {\n      bytes = new byte[other.length];\n    } else {\n      bytes = ArrayUtil.grow(bytes, other.length);\n    }\n    System.arraycopy(other.bytes, other.offset, bytes, 0, other.length);\n    length = other.length;\n    offset = 0;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6fdc35812ba3a566ec91032d28da131ae8dc601c","date":1272905807,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/util/BytesRef#copy(BytesRef).mjava","pathOld":"lucene/src/java/org/apache/lucene/util/BytesRef#copy(BytesRef).mjava","sourceNew":"  public void copy(BytesRef other) {\n    if (bytes.length < other.length) {\n      bytes = new byte[other.length];\n    }\n    System.arraycopy(other.bytes, other.offset, bytes, 0, other.length);\n    length = other.length;\n    offset = 0;\n  }\n\n","sourceOld":"  public void copy(BytesRef other) {\n    if (bytes == null) {\n      bytes = new byte[other.length];\n    } else {\n      bytes = ArrayUtil.grow(bytes, other.length);\n    }\n    System.arraycopy(other.bytes, other.offset, bytes, 0, other.length);\n    length = other.length;\n    offset = 0;\n  }\n\n","bugFix":null,"bugIntro":["ecb9a70c11e1f9dea44bb46bc2f75ed0c2603b57"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"85eb75e0c0203e44dcf686f35876cf6080f3a671","date":1317221550,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/util/BytesRef#copy(BytesRef).mjava","pathOld":"lucene/src/java/org/apache/lucene/util/BytesRef#copy(BytesRef).mjava","sourceNew":"  /**\n   * Copies the given {@link BytesRef}\n   * <p>\n   * NOTE: this method resets the offset to 0 and resizes the reference array\n   * if needed.\n   */\n  public void copy(BytesRef other) {\n    if (bytes.length < other.length) {\n      bytes = new byte[other.length];\n    }\n    System.arraycopy(other.bytes, other.offset, bytes, 0, other.length);\n    length = other.length;\n    offset = 0;\n  }\n\n","sourceOld":"  public void copy(BytesRef other) {\n    if (bytes.length < other.length) {\n      bytes = new byte[other.length];\n    }\n    System.arraycopy(other.bytes, other.offset, bytes, 0, other.length);\n    length = other.length;\n    offset = 0;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"e6e919043fa85ee891123768dd655a98edbbf63c","date":1322225413,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/util/BytesRef#copyBytes(BytesRef).mjava","pathOld":"lucene/src/java/org/apache/lucene/util/BytesRef#copy(BytesRef).mjava","sourceNew":"  /**\n   * Copies the bytes from the given {@link BytesRef}\n   * <p>\n   * NOTE: this method resets the offset to 0 and resizes the reference array\n   * if needed.\n   */\n  public void copyBytes(BytesRef other) {\n    if (bytes.length < other.length) {\n      bytes = new byte[other.length];\n    }\n    System.arraycopy(other.bytes, other.offset, bytes, 0, other.length);\n    length = other.length;\n    offset = 0;\n  }\n\n","sourceOld":"  /**\n   * Copies the given {@link BytesRef}\n   * <p>\n   * NOTE: this method resets the offset to 0 and resizes the reference array\n   * if needed.\n   */\n  public void copy(BytesRef other) {\n    if (bytes.length < other.length) {\n      bytes = new byte[other.length];\n    }\n    System.arraycopy(other.bytes, other.offset, bytes, 0, other.length);\n    length = other.length;\n    offset = 0;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"6fdc35812ba3a566ec91032d28da131ae8dc601c":["955c32f886db6f6356c9fcdea6b1f1cb4effda24"],"85eb75e0c0203e44dcf686f35876cf6080f3a671":["6fdc35812ba3a566ec91032d28da131ae8dc601c"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"955c32f886db6f6356c9fcdea6b1f1cb4effda24":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"e6e919043fa85ee891123768dd655a98edbbf63c":["85eb75e0c0203e44dcf686f35876cf6080f3a671"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["e6e919043fa85ee891123768dd655a98edbbf63c"]},"commit2Childs":{"6fdc35812ba3a566ec91032d28da131ae8dc601c":["85eb75e0c0203e44dcf686f35876cf6080f3a671"],"85eb75e0c0203e44dcf686f35876cf6080f3a671":["e6e919043fa85ee891123768dd655a98edbbf63c"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["955c32f886db6f6356c9fcdea6b1f1cb4effda24"],"955c32f886db6f6356c9fcdea6b1f1cb4effda24":["6fdc35812ba3a566ec91032d28da131ae8dc601c"],"e6e919043fa85ee891123768dd655a98edbbf63c":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}