{"path":"solr/core/src/java/org/apache/solr/util/FileUtils#createDirectories(Path).mjava","commits":[{"id":"70b2efeb7bccc1079ae626cbdfcdcceb1a22ce1b","date":1496113724,"type":0,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/util/FileUtils#createDirectories(Path).mjava","pathOld":"/dev/null","sourceNew":"  // Files.createDirectories has odd behavior if the path is a symlink and it already exists\n  // _even if it's a symlink to a directory_. \n  // \n  // oddly, if the path to be created just contains a symlink in intermediate levels, Files.createDirectories\n  // works just fine.\n  //\n  // This works around that issue\n  public static Path createDirectories(Path path) throws IOException {\n    if (Files.exists(path) && Files.isSymbolicLink(path)) {\n      Path real = path.toRealPath();\n      if (Files.isDirectory(real)) return real;\n      throw new FileExistsException(\"Tried to create a directory at to an existing non-directory symlink: \" + path.toString());\n    }\n    return Files.createDirectories(path);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d1f5728f32a4a256b36cfabd7a2636452f599bb9","date":1496231774,"type":0,"author":"Karl Wright","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/util/FileUtils#createDirectories(Path).mjava","pathOld":"/dev/null","sourceNew":"  // Files.createDirectories has odd behavior if the path is a symlink and it already exists\n  // _even if it's a symlink to a directory_. \n  // \n  // oddly, if the path to be created just contains a symlink in intermediate levels, Files.createDirectories\n  // works just fine.\n  //\n  // This works around that issue\n  public static Path createDirectories(Path path) throws IOException {\n    if (Files.exists(path) && Files.isSymbolicLink(path)) {\n      Path real = path.toRealPath();\n      if (Files.isDirectory(real)) return real;\n      throw new FileExistsException(\"Tried to create a directory at to an existing non-directory symlink: \" + path.toString());\n    }\n    return Files.createDirectories(path);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e9017cf144952056066919f1ebc7897ff9bd71b1","date":1496757600,"type":0,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/util/FileUtils#createDirectories(Path).mjava","pathOld":"/dev/null","sourceNew":"  // Files.createDirectories has odd behavior if the path is a symlink and it already exists\n  // _even if it's a symlink to a directory_. \n  // \n  // oddly, if the path to be created just contains a symlink in intermediate levels, Files.createDirectories\n  // works just fine.\n  //\n  // This works around that issue\n  public static Path createDirectories(Path path) throws IOException {\n    if (Files.exists(path) && Files.isSymbolicLink(path)) {\n      Path real = path.toRealPath();\n      if (Files.isDirectory(real)) return real;\n      throw new FileExistsException(\"Tried to create a directory at to an existing non-directory symlink: \" + path.toString());\n    }\n    return Files.createDirectories(path);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"e9017cf144952056066919f1ebc7897ff9bd71b1":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","70b2efeb7bccc1079ae626cbdfcdcceb1a22ce1b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"70b2efeb7bccc1079ae626cbdfcdcceb1a22ce1b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"d1f5728f32a4a256b36cfabd7a2636452f599bb9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","70b2efeb7bccc1079ae626cbdfcdcceb1a22ce1b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["d1f5728f32a4a256b36cfabd7a2636452f599bb9"]},"commit2Childs":{"e9017cf144952056066919f1ebc7897ff9bd71b1":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["e9017cf144952056066919f1ebc7897ff9bd71b1","70b2efeb7bccc1079ae626cbdfcdcceb1a22ce1b","d1f5728f32a4a256b36cfabd7a2636452f599bb9"],"70b2efeb7bccc1079ae626cbdfcdcceb1a22ce1b":["e9017cf144952056066919f1ebc7897ff9bd71b1","d1f5728f32a4a256b36cfabd7a2636452f599bb9"],"d1f5728f32a4a256b36cfabd7a2636452f599bb9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["e9017cf144952056066919f1ebc7897ff9bd71b1","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}