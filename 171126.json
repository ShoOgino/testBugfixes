{"path":"lucene/src/java/org/apache/lucene/index/SegmentReader#checkLiveCounts(boolean).mjava","commits":[{"id":"9ce667c6d3400b22523701c549c0d35e26da8b46","date":1324405053,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/SegmentReader#checkLiveCounts(boolean).mjava","pathOld":"/dev/null","sourceNew":"  private boolean checkLiveCounts(boolean isNRT) throws IOException {\n    if (liveDocs != null) {\n      if (liveDocs.size() != si.docCount) {\n        throw new CorruptIndexException(\"document count mismatch: deleted docs count \" + liveDocs.size() + \" vs segment doc count \" + si.docCount + \" segment=\" + si.name);\n      }\n\n      final int recomputedCount = liveDocs.getRecomputedCount();\n      // Verify BitVector is self consistent:\n      assert liveDocs.count() == recomputedCount : \"live count=\" + liveDocs.count() + \" vs recomputed count=\" + recomputedCount;\n\n      // Verify our docCount matches:\n      assert numDocs == recomputedCount :\n      \"delete count mismatch: numDocs=\" + numDocs + \" vs BitVector=\" + (si.docCount-recomputedCount);\n\n      assert isNRT || si.docCount - si.getDelCount() == recomputedCount :\n        \"si.docCount=\" + si.docCount + \"si.getDelCount()=\" + si.getDelCount() + \" recomputedCount=\" + recomputedCount;\n    }\n  \n    return true;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e3a73b15d807e41306466aec106b4cb85b8d5335","date":1326993385,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/SegmentReader#checkLiveCounts(boolean).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/SegmentReader#checkLiveCounts(boolean).mjava","sourceNew":"  // nocommit\n  private boolean checkLiveCounts(boolean isNRT) throws IOException {\n    BitVector liveDocs = (BitVector) this.liveDocs;\n    if (liveDocs != null) {\n      if (liveDocs.size() != si.docCount) {\n        throw new CorruptIndexException(\"document count mismatch: deleted docs count \" + liveDocs.size() + \" vs segment doc count \" + si.docCount + \" segment=\" + si.name);\n      }\n\n      final int recomputedCount = liveDocs.getRecomputedCount();\n      // Verify BitVector is self consistent:\n      assert liveDocs.count() == recomputedCount : \"live count=\" + liveDocs.count() + \" vs recomputed count=\" + recomputedCount;\n\n      // Verify our docCount matches:\n      assert numDocs == recomputedCount :\n      \"delete count mismatch: numDocs=\" + numDocs + \" vs BitVector=\" + (si.docCount-recomputedCount);\n\n      assert isNRT || si.docCount - si.getDelCount() == recomputedCount :\n        \"si.docCount=\" + si.docCount + \"si.getDelCount()=\" + si.getDelCount() + \" recomputedCount=\" + recomputedCount;\n    }\n  \n    return true;\n  }\n\n","sourceOld":"  private boolean checkLiveCounts(boolean isNRT) throws IOException {\n    if (liveDocs != null) {\n      if (liveDocs.size() != si.docCount) {\n        throw new CorruptIndexException(\"document count mismatch: deleted docs count \" + liveDocs.size() + \" vs segment doc count \" + si.docCount + \" segment=\" + si.name);\n      }\n\n      final int recomputedCount = liveDocs.getRecomputedCount();\n      // Verify BitVector is self consistent:\n      assert liveDocs.count() == recomputedCount : \"live count=\" + liveDocs.count() + \" vs recomputed count=\" + recomputedCount;\n\n      // Verify our docCount matches:\n      assert numDocs == recomputedCount :\n      \"delete count mismatch: numDocs=\" + numDocs + \" vs BitVector=\" + (si.docCount-recomputedCount);\n\n      assert isNRT || si.docCount - si.getDelCount() == recomputedCount :\n        \"si.docCount=\" + si.docCount + \"si.getDelCount()=\" + si.getDelCount() + \" recomputedCount=\" + recomputedCount;\n    }\n  \n    return true;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ded448fbb3c1d4443e31756e5009bf18c97c8d5b","date":1326999147,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/SegmentReader#checkLiveCounts(boolean).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/SegmentReader#checkLiveCounts(boolean).mjava","sourceNew":"  private boolean checkLiveCounts(boolean isNRT) throws IOException {\n    MutableBits liveDocs = (MutableBits) this.liveDocs;\n    if (liveDocs != null) {\n      if (liveDocs.length() != si.docCount) {\n        throw new CorruptIndexException(\"document count mismatch: deleted docs count \" + liveDocs.length() + \" vs segment doc count \" + si.docCount + \" segment=\" + si.name);\n      }\n\n      final int count = liveDocs.count();\n\n      // Verify our docCount matches:\n      assert numDocs == count :\n      \"delete count mismatch: numDocs=\" + numDocs + \" vs BitVector=\" + (si.docCount-count);\n\n      assert isNRT || si.docCount - si.getDelCount() == count :\n        \"si.docCount=\" + si.docCount + \"si.getDelCount()=\" + si.getDelCount() + \" recomputedCount=\" + count;\n    }\n  \n    return true;\n  }\n\n","sourceOld":"  // nocommit\n  private boolean checkLiveCounts(boolean isNRT) throws IOException {\n    BitVector liveDocs = (BitVector) this.liveDocs;\n    if (liveDocs != null) {\n      if (liveDocs.size() != si.docCount) {\n        throw new CorruptIndexException(\"document count mismatch: deleted docs count \" + liveDocs.size() + \" vs segment doc count \" + si.docCount + \" segment=\" + si.name);\n      }\n\n      final int recomputedCount = liveDocs.getRecomputedCount();\n      // Verify BitVector is self consistent:\n      assert liveDocs.count() == recomputedCount : \"live count=\" + liveDocs.count() + \" vs recomputed count=\" + recomputedCount;\n\n      // Verify our docCount matches:\n      assert numDocs == recomputedCount :\n      \"delete count mismatch: numDocs=\" + numDocs + \" vs BitVector=\" + (si.docCount-recomputedCount);\n\n      assert isNRT || si.docCount - si.getDelCount() == recomputedCount :\n        \"si.docCount=\" + si.docCount + \"si.getDelCount()=\" + si.getDelCount() + \" recomputedCount=\" + recomputedCount;\n    }\n  \n    return true;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"18ba66f0f960331e35a950b05056276857e57d18","date":1326999254,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/SegmentReader#checkLiveCounts(boolean).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/SegmentReader#checkLiveCounts(boolean).mjava","sourceNew":"  private boolean checkLiveCounts(boolean isNRT) throws IOException {\n    MutableBits liveDocs = (MutableBits) this.liveDocs;\n    if (liveDocs != null) {\n      if (liveDocs.length() != si.docCount) {\n        throw new CorruptIndexException(\"document count mismatch: deleted docs count \" + liveDocs.length() + \" vs segment doc count \" + si.docCount + \" segment=\" + si.name);\n      }\n\n      final int count = liveDocs.count();\n\n      // Verify our docCount matches:\n      assert numDocs == count :\n      \"delete count mismatch: numDocs=\" + numDocs + \" vs MutableBits=\" + (si.docCount-count);\n\n      assert isNRT || si.docCount - si.getDelCount() == count :\n        \"si.docCount=\" + si.docCount + \"si.getDelCount()=\" + si.getDelCount() + \" recomputedCount=\" + count;\n    }\n  \n    return true;\n  }\n\n","sourceOld":"  private boolean checkLiveCounts(boolean isNRT) throws IOException {\n    MutableBits liveDocs = (MutableBits) this.liveDocs;\n    if (liveDocs != null) {\n      if (liveDocs.length() != si.docCount) {\n        throw new CorruptIndexException(\"document count mismatch: deleted docs count \" + liveDocs.length() + \" vs segment doc count \" + si.docCount + \" segment=\" + si.name);\n      }\n\n      final int count = liveDocs.count();\n\n      // Verify our docCount matches:\n      assert numDocs == count :\n      \"delete count mismatch: numDocs=\" + numDocs + \" vs BitVector=\" + (si.docCount-count);\n\n      assert isNRT || si.docCount - si.getDelCount() == count :\n        \"si.docCount=\" + si.docCount + \"si.getDelCount()=\" + si.getDelCount() + \" recomputedCount=\" + count;\n    }\n  \n    return true;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d3d53ad7b9687e0dfaacaab099d3c7e98bfbe78e","date":1327757020,"type":4,"author":"Michael McCandless","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/src/java/org/apache/lucene/index/SegmentReader#checkLiveCounts(boolean).mjava","sourceNew":null,"sourceOld":"  private boolean checkLiveCounts(boolean isNRT) throws IOException {\n    MutableBits liveDocs = (MutableBits) this.liveDocs;\n    if (liveDocs != null) {\n      if (liveDocs.length() != si.docCount) {\n        throw new CorruptIndexException(\"document count mismatch: deleted docs count \" + liveDocs.length() + \" vs segment doc count \" + si.docCount + \" segment=\" + si.name);\n      }\n\n      final int count = liveDocs.count();\n\n      // Verify our docCount matches:\n      assert numDocs == count :\n      \"delete count mismatch: numDocs=\" + numDocs + \" vs MutableBits=\" + (si.docCount-count);\n\n      assert isNRT || si.docCount - si.getDelCount() == count :\n        \"si.docCount=\" + si.docCount + \"si.getDelCount()=\" + si.getDelCount() + \" recomputedCount=\" + count;\n    }\n  \n    return true;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c9f2d6bb11ccaac366d9b7652b2feb0c715d9c31","date":1327836826,"type":4,"author":"Robert Muir","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/src/java/org/apache/lucene/index/SegmentReader#checkLiveCounts(boolean).mjava","sourceNew":null,"sourceOld":"  private boolean checkLiveCounts(boolean isNRT) throws IOException {\n    if (liveDocs != null) {\n      if (liveDocs.size() != si.docCount) {\n        throw new CorruptIndexException(\"document count mismatch: deleted docs count \" + liveDocs.size() + \" vs segment doc count \" + si.docCount + \" segment=\" + si.name);\n      }\n\n      final int recomputedCount = liveDocs.getRecomputedCount();\n      // Verify BitVector is self consistent:\n      assert liveDocs.count() == recomputedCount : \"live count=\" + liveDocs.count() + \" vs recomputed count=\" + recomputedCount;\n\n      // Verify our docCount matches:\n      assert numDocs == recomputedCount :\n      \"delete count mismatch: numDocs=\" + numDocs + \" vs BitVector=\" + (si.docCount-recomputedCount);\n\n      assert isNRT || si.docCount - si.getDelCount() == recomputedCount :\n        \"si.docCount=\" + si.docCount + \"si.getDelCount()=\" + si.getDelCount() + \" recomputedCount=\" + recomputedCount;\n    }\n  \n    return true;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fd92b8bcc88e969302510acf77bd6970da3994c4","date":1327839530,"type":4,"author":"Uwe Schindler","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/src/java/org/apache/lucene/index/SegmentReader#checkLiveCounts(boolean).mjava","sourceNew":null,"sourceOld":"  private boolean checkLiveCounts(boolean isNRT) throws IOException {\n    if (liveDocs != null) {\n      if (liveDocs.size() != si.docCount) {\n        throw new CorruptIndexException(\"document count mismatch: deleted docs count \" + liveDocs.size() + \" vs segment doc count \" + si.docCount + \" segment=\" + si.name);\n      }\n\n      final int recomputedCount = liveDocs.getRecomputedCount();\n      // Verify BitVector is self consistent:\n      assert liveDocs.count() == recomputedCount : \"live count=\" + liveDocs.count() + \" vs recomputed count=\" + recomputedCount;\n\n      // Verify our docCount matches:\n      assert numDocs == recomputedCount :\n      \"delete count mismatch: numDocs=\" + numDocs + \" vs BitVector=\" + (si.docCount-recomputedCount);\n\n      assert isNRT || si.docCount - si.getDelCount() == recomputedCount :\n        \"si.docCount=\" + si.docCount + \"si.getDelCount()=\" + si.getDelCount() + \" recomputedCount=\" + recomputedCount;\n    }\n  \n    return true;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"e3a73b15d807e41306466aec106b4cb85b8d5335":["9ce667c6d3400b22523701c549c0d35e26da8b46"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"d3d53ad7b9687e0dfaacaab099d3c7e98bfbe78e":["18ba66f0f960331e35a950b05056276857e57d18"],"fd92b8bcc88e969302510acf77bd6970da3994c4":["9ce667c6d3400b22523701c549c0d35e26da8b46","c9f2d6bb11ccaac366d9b7652b2feb0c715d9c31"],"c9f2d6bb11ccaac366d9b7652b2feb0c715d9c31":["9ce667c6d3400b22523701c549c0d35e26da8b46","d3d53ad7b9687e0dfaacaab099d3c7e98bfbe78e"],"ded448fbb3c1d4443e31756e5009bf18c97c8d5b":["e3a73b15d807e41306466aec106b4cb85b8d5335"],"9ce667c6d3400b22523701c549c0d35e26da8b46":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"18ba66f0f960331e35a950b05056276857e57d18":["ded448fbb3c1d4443e31756e5009bf18c97c8d5b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["c9f2d6bb11ccaac366d9b7652b2feb0c715d9c31"]},"commit2Childs":{"e3a73b15d807e41306466aec106b4cb85b8d5335":["ded448fbb3c1d4443e31756e5009bf18c97c8d5b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9ce667c6d3400b22523701c549c0d35e26da8b46"],"d3d53ad7b9687e0dfaacaab099d3c7e98bfbe78e":["c9f2d6bb11ccaac366d9b7652b2feb0c715d9c31"],"fd92b8bcc88e969302510acf77bd6970da3994c4":[],"c9f2d6bb11ccaac366d9b7652b2feb0c715d9c31":["fd92b8bcc88e969302510acf77bd6970da3994c4","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"ded448fbb3c1d4443e31756e5009bf18c97c8d5b":["18ba66f0f960331e35a950b05056276857e57d18"],"9ce667c6d3400b22523701c549c0d35e26da8b46":["e3a73b15d807e41306466aec106b4cb85b8d5335","fd92b8bcc88e969302510acf77bd6970da3994c4","c9f2d6bb11ccaac366d9b7652b2feb0c715d9c31"],"18ba66f0f960331e35a950b05056276857e57d18":["d3d53ad7b9687e0dfaacaab099d3c7e98bfbe78e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["fd92b8bcc88e969302510acf77bd6970da3994c4","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}