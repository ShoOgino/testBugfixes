{"path":"solr/src/solrj/org/apache/solr/client/solrj/response/TermsResponse#TermsResponse(NamedList[NamedList[Number]]).mjava","commits":[{"id":"fbd02ee70d00f41133d28f0c1f8e9f68168c50d3","date":1294448351,"type":1,"author":"Chris M. Hostetter","isMerge":false,"pathNew":"solr/src/solrj/org/apache/solr/client/solrj/response/TermsResponse#TermsResponse(NamedList[NamedList[Number]]).mjava","pathOld":"solr/src/solrj/org/apache/solr/client/solrj/response/TermsResponse#TermsResponse(NamedList[Object]).mjava","sourceNew":"  public TermsResponse(NamedList<NamedList<Number>> termsInfo) {\n    for (int i = 0; i < termsInfo.size(); i++) {\n      String fieldName = termsInfo.getName(i);\n      List<Term> itemList = new ArrayList<Term>();\n      NamedList<Number> items = termsInfo.getVal(i);\n      \n      for (int j = 0; j < items.size(); j++) {\n        Term t = new Term(items.getName(j), items.getVal(j).longValue());\n        itemList.add(t);\n      }\n      \n      termMap.put(fieldName, itemList);\n    }\n  }\n\n","sourceOld":"  public TermsResponse(NamedList<Object> termsInfo) {\n    for (int i = 0; i < termsInfo.size(); i++) {\n      String fieldName = termsInfo.getName(i);\n      List<Term> itemList = new ArrayList<Term>();\n      NamedList<Object> items = (NamedList<Object>) termsInfo.getVal(i);\n      \n      for (int j = 0; j < items.size(); j++) {\n        Term t = new Term(items.getName(j), ((Number) items.getVal(j)).longValue());\n        itemList.add(t);\n      }\n      \n      termMap.put(fieldName, itemList);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"868da859b43505d9d2a023bfeae6dd0c795f5295","date":1294948401,"type":0,"author":"Michael Busch","isMerge":true,"pathNew":"solr/src/solrj/org/apache/solr/client/solrj/response/TermsResponse#TermsResponse(NamedList[NamedList[Number]]).mjava","pathOld":"/dev/null","sourceNew":"  public TermsResponse(NamedList<NamedList<Number>> termsInfo) {\n    for (int i = 0; i < termsInfo.size(); i++) {\n      String fieldName = termsInfo.getName(i);\n      List<Term> itemList = new ArrayList<Term>();\n      NamedList<Number> items = termsInfo.getVal(i);\n      \n      for (int j = 0; j < items.size(); j++) {\n        Term t = new Term(items.getName(j), items.getVal(j).longValue());\n        itemList.add(t);\n      }\n      \n      termMap.put(fieldName, itemList);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"29ef99d61cda9641b6250bf9567329a6e65f901d","date":1297244127,"type":0,"author":"Simon Willnauer","isMerge":true,"pathNew":"solr/src/solrj/org/apache/solr/client/solrj/response/TermsResponse#TermsResponse(NamedList[NamedList[Number]]).mjava","pathOld":"/dev/null","sourceNew":"  public TermsResponse(NamedList<NamedList<Number>> termsInfo) {\n    for (int i = 0; i < termsInfo.size(); i++) {\n      String fieldName = termsInfo.getName(i);\n      List<Term> itemList = new ArrayList<Term>();\n      NamedList<Number> items = termsInfo.getVal(i);\n      \n      for (int j = 0; j < items.size(); j++) {\n        Term t = new Term(items.getName(j), items.getVal(j).longValue());\n        itemList.add(t);\n      }\n      \n      termMap.put(fieldName, itemList);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c903c3d15906a3da96b8c0c2fb704491005fdbdb","date":1453508227,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/response/TermsResponse#TermsResponse(NamedList[NamedList[Number]]).mjava","pathOld":"solr/src/solrj/org/apache/solr/client/solrj/response/TermsResponse#TermsResponse(NamedList[NamedList[Number]]).mjava","sourceNew":"  public TermsResponse(NamedList<NamedList<Number>> termsInfo) {\n    for (int i = 0; i < termsInfo.size(); i++) {\n      String fieldName = termsInfo.getName(i);\n      List<Term> itemList = new ArrayList<Term>();\n      NamedList<Number> items = termsInfo.getVal(i);\n      \n      for (int j = 0; j < items.size(); j++) {\n        Term t = new Term(items.getName(j), items.getVal(j).longValue());\n        itemList.add(t);\n      }\n      \n      termMap.put(fieldName, itemList);\n    }\n  }\n\n","sourceOld":"  public TermsResponse(NamedList<NamedList<Number>> termsInfo) {\n    for (int i = 0; i < termsInfo.size(); i++) {\n      String fieldName = termsInfo.getName(i);\n      List<Term> itemList = new ArrayList<Term>();\n      NamedList<Number> items = termsInfo.getVal(i);\n      \n      for (int j = 0; j < items.size(); j++) {\n        Term t = new Term(items.getName(j), items.getVal(j).longValue());\n        itemList.add(t);\n      }\n      \n      termMap.put(fieldName, itemList);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a258fbb26824fd104ed795e5d9033d2d040049ee","date":1453508252,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/response/TermsResponse#TermsResponse(NamedList[NamedList[Number]]).mjava","pathOld":"solr/src/solrj/org/apache/solr/client/solrj/response/TermsResponse#TermsResponse(NamedList[NamedList[Number]]).mjava","sourceNew":"  public TermsResponse(NamedList<NamedList<Number>> termsInfo) {\n    for (int i = 0; i < termsInfo.size(); i++) {\n      String fieldName = termsInfo.getName(i);\n      List<Term> itemList = new ArrayList<Term>();\n      NamedList<Number> items = termsInfo.getVal(i);\n      \n      for (int j = 0; j < items.size(); j++) {\n        Term t = new Term(items.getName(j), items.getVal(j).longValue());\n        itemList.add(t);\n      }\n      \n      termMap.put(fieldName, itemList);\n    }\n  }\n\n","sourceOld":"  public TermsResponse(NamedList<NamedList<Number>> termsInfo) {\n    for (int i = 0; i < termsInfo.size(); i++) {\n      String fieldName = termsInfo.getName(i);\n      List<Term> itemList = new ArrayList<Term>();\n      NamedList<Number> items = termsInfo.getVal(i);\n      \n      for (int j = 0; j < items.size(); j++) {\n        Term t = new Term(items.getName(j), items.getVal(j).longValue());\n        itemList.add(t);\n      }\n      \n      termMap.put(fieldName, itemList);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":5,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/response/TermsResponse#TermsResponse(NamedList[NamedList[Number]]).mjava","pathOld":"solr/src/solrj/org/apache/solr/client/solrj/response/TermsResponse#TermsResponse(NamedList[NamedList[Number]]).mjava","sourceNew":"  public TermsResponse(NamedList<NamedList<Number>> termsInfo) {\n    for (int i = 0; i < termsInfo.size(); i++) {\n      String fieldName = termsInfo.getName(i);\n      List<Term> itemList = new ArrayList<Term>();\n      NamedList<Number> items = termsInfo.getVal(i);\n      \n      for (int j = 0; j < items.size(); j++) {\n        Term t = new Term(items.getName(j), items.getVal(j).longValue());\n        itemList.add(t);\n      }\n      \n      termMap.put(fieldName, itemList);\n    }\n  }\n\n","sourceOld":"  public TermsResponse(NamedList<NamedList<Number>> termsInfo) {\n    for (int i = 0; i < termsInfo.size(); i++) {\n      String fieldName = termsInfo.getName(i);\n      List<Term> itemList = new ArrayList<Term>();\n      NamedList<Number> items = termsInfo.getVal(i);\n      \n      for (int j = 0; j < items.size(); j++) {\n        Term t = new Term(items.getName(j), items.getVal(j).longValue());\n        itemList.add(t);\n      }\n      \n      termMap.put(fieldName, itemList);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["fbd02ee70d00f41133d28f0c1f8e9f68168c50d3"],"c26f00b574427b55127e869b935845554afde1fa":["fbd02ee70d00f41133d28f0c1f8e9f68168c50d3","c903c3d15906a3da96b8c0c2fb704491005fdbdb"],"29ef99d61cda9641b6250bf9567329a6e65f901d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","fbd02ee70d00f41133d28f0c1f8e9f68168c50d3"],"fbd02ee70d00f41133d28f0c1f8e9f68168c50d3":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a258fbb26824fd104ed795e5d9033d2d040049ee":["fbd02ee70d00f41133d28f0c1f8e9f68168c50d3"],"868da859b43505d9d2a023bfeae6dd0c795f5295":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","fbd02ee70d00f41133d28f0c1f8e9f68168c50d3"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["c26f00b574427b55127e869b935845554afde1fa"]},"commit2Childs":{"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["c26f00b574427b55127e869b935845554afde1fa"],"c26f00b574427b55127e869b935845554afde1fa":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"29ef99d61cda9641b6250bf9567329a6e65f901d":[],"fbd02ee70d00f41133d28f0c1f8e9f68168c50d3":["c903c3d15906a3da96b8c0c2fb704491005fdbdb","c26f00b574427b55127e869b935845554afde1fa","29ef99d61cda9641b6250bf9567329a6e65f901d","a258fbb26824fd104ed795e5d9033d2d040049ee","868da859b43505d9d2a023bfeae6dd0c795f5295"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["29ef99d61cda9641b6250bf9567329a6e65f901d","fbd02ee70d00f41133d28f0c1f8e9f68168c50d3","868da859b43505d9d2a023bfeae6dd0c795f5295"],"a258fbb26824fd104ed795e5d9033d2d040049ee":[],"868da859b43505d9d2a023bfeae6dd0c795f5295":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["29ef99d61cda9641b6250bf9567329a6e65f901d","a258fbb26824fd104ed795e5d9033d2d040049ee","868da859b43505d9d2a023bfeae6dd0c795f5295","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}