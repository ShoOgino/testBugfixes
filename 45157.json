{"path":"src/java/org/apache/solr/handler/admin/CoreAdminHandler#handleReloadAction(SolrQueryRequest,SolrQueryResponse).mjava","commits":[{"id":"64dd09b29d9d8046920d09defbc90ae1791c725d","date":1240554655,"type":0,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"src/java/org/apache/solr/handler/admin/CoreAdminHandler#handleReloadAction(SolrQueryRequest,SolrQueryResponse).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Handler \"RELOAD\" action\n   *\n   * @param req\n   * @param rsp\n   *\n   * @return\n   */\n  protected boolean handleReloadAction(SolrQueryRequest req, SolrQueryResponse rsp) {\n    SolrParams params = req.getParams();\n    String cname = params.get(CoreAdminParams.CORE);\n    try {\n      coreContainer.reload(cname);\n      return false; // no change on reload\n    } catch (Exception ex) {\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, \"Error handling 'reload' action\", ex);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"38c1e32df11d451c5548a0b1fb4f5609088ef0cf","date":1255111670,"type":3,"author":"Chris M. Hostetter","isMerge":false,"pathNew":"src/java/org/apache/solr/handler/admin/CoreAdminHandler#handleReloadAction(SolrQueryRequest,SolrQueryResponse).mjava","pathOld":"src/java/org/apache/solr/handler/admin/CoreAdminHandler#handleReloadAction(SolrQueryRequest,SolrQueryResponse).mjava","sourceNew":"  /**\n   * Handler \"RELOAD\" action\n   *\n   * @param req\n   * @param rsp\n   *\n   * @return true if a modification has resulted that requires persistance \n   *         of the CoreContainer configuration.\n   */\n  protected boolean handleReloadAction(SolrQueryRequest req, SolrQueryResponse rsp) {\n    SolrParams params = req.getParams();\n    String cname = params.get(CoreAdminParams.CORE);\n    try {\n      coreContainer.reload(cname);\n      return false; // no change on reload\n    } catch (Exception ex) {\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, \"Error handling 'reload' action\", ex);\n    }\n  }\n\n","sourceOld":"  /**\n   * Handler \"RELOAD\" action\n   *\n   * @param req\n   * @param rsp\n   *\n   * @return\n   */\n  protected boolean handleReloadAction(SolrQueryRequest req, SolrQueryResponse rsp) {\n    SolrParams params = req.getParams();\n    String cname = params.get(CoreAdminParams.CORE);\n    try {\n      coreContainer.reload(cname);\n      return false; // no change on reload\n    } catch (Exception ex) {\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, \"Error handling 'reload' action\", ex);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ad94625fb8d088209f46650c8097196fec67f00c","date":1453508319,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/src/java/org/apache/solr/handler/admin/CoreAdminHandler#handleReloadAction(SolrQueryRequest,SolrQueryResponse).mjava","pathOld":"src/java/org/apache/solr/handler/admin/CoreAdminHandler#handleReloadAction(SolrQueryRequest,SolrQueryResponse).mjava","sourceNew":"  /**\n   * Handler \"RELOAD\" action\n   *\n   * @param req\n   * @param rsp\n   *\n   * @return true if a modification has resulted that requires persistance \n   *         of the CoreContainer configuration.\n   */\n  protected boolean handleReloadAction(SolrQueryRequest req, SolrQueryResponse rsp) {\n    SolrParams params = req.getParams();\n    String cname = params.get(CoreAdminParams.CORE);\n    try {\n      coreContainer.reload(cname);\n      return false; // no change on reload\n    } catch (Exception ex) {\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, \"Error handling 'reload' action\", ex);\n    }\n  }\n\n","sourceOld":"  /**\n   * Handler \"RELOAD\" action\n   *\n   * @param req\n   * @param rsp\n   *\n   * @return true if a modification has resulted that requires persistance \n   *         of the CoreContainer configuration.\n   */\n  protected boolean handleReloadAction(SolrQueryRequest req, SolrQueryResponse rsp) {\n    SolrParams params = req.getParams();\n    String cname = params.get(CoreAdminParams.CORE);\n    try {\n      coreContainer.reload(cname);\n      return false; // no change on reload\n    } catch (Exception ex) {\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, \"Error handling 'reload' action\", ex);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"38c1e32df11d451c5548a0b1fb4f5609088ef0cf":["64dd09b29d9d8046920d09defbc90ae1791c725d"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"ad94625fb8d088209f46650c8097196fec67f00c":["38c1e32df11d451c5548a0b1fb4f5609088ef0cf"],"64dd09b29d9d8046920d09defbc90ae1791c725d":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"38c1e32df11d451c5548a0b1fb4f5609088ef0cf":["ad94625fb8d088209f46650c8097196fec67f00c"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["64dd09b29d9d8046920d09defbc90ae1791c725d"],"64dd09b29d9d8046920d09defbc90ae1791c725d":["38c1e32df11d451c5548a0b1fb4f5609088ef0cf"],"ad94625fb8d088209f46650c8097196fec67f00c":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["ad94625fb8d088209f46650c8097196fec67f00c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"pathCommit":null}