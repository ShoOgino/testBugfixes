{"path":"lucene/facet/src/test/org/apache/lucene/facet/TestDrillSideways#testMultipleRequestsPerDim().mjava","commits":[{"id":"21d36d0db865f7b84026b447bec653469a6e66df","date":1385495602,"type":1,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/TestDrillSideways#testMultipleRequestsPerDim().mjava","pathOld":"lucene/facet/src/test/org/apache/lucene/facet/simple/TestSimpleDrillSideways#testMultipleRequestsPerDim().mjava","sourceNew":"  public void testMultipleRequestsPerDim() throws Exception {\n    Directory dir = newDirectory();\n    Directory taxoDir = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir);\n\n    // Writes facet ords to a separate directory from the\n    // main index:\n    DirectoryTaxonomyWriter taxoWriter = new DirectoryTaxonomyWriter(taxoDir, IndexWriterConfig.OpenMode.CREATE);\n\n    FacetsConfig config = new FacetsConfig(taxoWriter);\n    config.setHierarchical(\"dim\", true);\n\n    Document doc = new Document();\n    doc.add(new FacetField(\"dim\", \"a\", \"x\"));\n    writer.addDocument(config.build(doc));\n\n    doc = new Document();\n    doc.add(new FacetField(\"dim\", \"a\", \"y\"));\n    writer.addDocument(config.build(doc));\n\n    doc = new Document();\n    doc.add(new FacetField(\"dim\", \"a\", \"z\"));\n    writer.addDocument(config.build(doc));\n\n    doc = new Document();\n    doc.add(new FacetField(\"dim\", \"b\"));\n    writer.addDocument(config.build(doc));\n\n    doc = new Document();\n    doc.add(new FacetField(\"dim\", \"c\"));\n    writer.addDocument(config.build(doc));\n\n    doc = new Document();\n    doc.add(new FacetField(\"dim\", \"d\"));\n    writer.addDocument(config.build(doc));\n\n    // NRT open\n    IndexSearcher searcher = newSearcher(writer.getReader());\n\n    //System.out.println(\"searcher=\" + searcher);\n\n    // NRT open\n    TaxonomyReader taxoReader = new DirectoryTaxonomyReader(taxoWriter);\n\n    DrillDownQuery ddq = new DrillDownQuery(config);\n    ddq.add(\"dim\", \"a\");\n    DrillSidewaysResult r = new DrillSideways(searcher, config, taxoReader).search(null, ddq, 10);\n\n    assertEquals(3, r.hits.totalHits);\n    assertEquals(\"value=6 childCount=4\\n  a (3)\\n  b (1)\\n  c (1)\\n  d (1)\\n\", r.facets.getTopChildren(10, \"dim\").toString());\n    assertEquals(\"value=3 childCount=3\\n  x (1)\\n  y (1)\\n  z (1)\\n\", r.facets.getTopChildren(10, \"dim\", \"a\").toString());\n\n    IOUtils.close(searcher.getIndexReader(), taxoReader, writer, taxoWriter, dir, taxoDir);\n  }\n\n","sourceOld":"  public void testMultipleRequestsPerDim() throws Exception {\n    Directory dir = newDirectory();\n    Directory taxoDir = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir);\n\n    // Writes facet ords to a separate directory from the\n    // main index:\n    DirectoryTaxonomyWriter taxoWriter = new DirectoryTaxonomyWriter(taxoDir, IndexWriterConfig.OpenMode.CREATE);\n\n    FacetsConfig config = new FacetsConfig(taxoWriter);\n    config.setHierarchical(\"dim\", true);\n\n    Document doc = new Document();\n    doc.add(new FacetField(\"dim\", \"a\", \"x\"));\n    writer.addDocument(config.build(doc));\n\n    doc = new Document();\n    doc.add(new FacetField(\"dim\", \"a\", \"y\"));\n    writer.addDocument(config.build(doc));\n\n    doc = new Document();\n    doc.add(new FacetField(\"dim\", \"a\", \"z\"));\n    writer.addDocument(config.build(doc));\n\n    doc = new Document();\n    doc.add(new FacetField(\"dim\", \"b\"));\n    writer.addDocument(config.build(doc));\n\n    doc = new Document();\n    doc.add(new FacetField(\"dim\", \"c\"));\n    writer.addDocument(config.build(doc));\n\n    doc = new Document();\n    doc.add(new FacetField(\"dim\", \"d\"));\n    writer.addDocument(config.build(doc));\n\n    // NRT open\n    IndexSearcher searcher = newSearcher(writer.getReader());\n\n    //System.out.println(\"searcher=\" + searcher);\n\n    // NRT open\n    TaxonomyReader taxoReader = new DirectoryTaxonomyReader(taxoWriter);\n\n    SimpleDrillDownQuery ddq = new SimpleDrillDownQuery(config);\n    ddq.add(\"dim\", \"a\");\n    SimpleDrillSidewaysResult r = new SimpleDrillSideways(searcher, config, taxoReader).search(null, ddq, 10);\n\n    assertEquals(3, r.hits.totalHits);\n    assertEquals(\"value=6 childCount=4\\n  a (3)\\n  b (1)\\n  c (1)\\n  d (1)\\n\", r.facets.getTopChildren(10, \"dim\").toString());\n    assertEquals(\"value=3 childCount=3\\n  x (1)\\n  y (1)\\n  z (1)\\n\", r.facets.getTopChildren(10, \"dim\", \"a\").toString());\n\n    IOUtils.close(searcher.getIndexReader(), taxoReader, writer, taxoWriter, dir, taxoDir);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fd83550e4b0bdd36e7d9dca9273264100782440b","date":1385761753,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/TestDrillSideways#testMultipleRequestsPerDim().mjava","pathOld":"lucene/facet/src/test/org/apache/lucene/facet/TestDrillSideways#testMultipleRequestsPerDim().mjava","sourceNew":"  public void testMultipleRequestsPerDim() throws Exception {\n    Directory dir = newDirectory();\n    Directory taxoDir = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir);\n\n    // Writes facet ords to a separate directory from the\n    // main index:\n    DirectoryTaxonomyWriter taxoWriter = new DirectoryTaxonomyWriter(taxoDir, IndexWriterConfig.OpenMode.CREATE);\n\n    FacetsConfig config = new FacetsConfig();\n    config.setHierarchical(\"dim\", true);\n\n    Document doc = new Document();\n    doc.add(new FacetField(\"dim\", \"a\", \"x\"));\n    writer.addDocument(config.build(taxoWriter, doc));\n\n    doc = new Document();\n    doc.add(new FacetField(\"dim\", \"a\", \"y\"));\n    writer.addDocument(config.build(taxoWriter, doc));\n\n    doc = new Document();\n    doc.add(new FacetField(\"dim\", \"a\", \"z\"));\n    writer.addDocument(config.build(taxoWriter, doc));\n\n    doc = new Document();\n    doc.add(new FacetField(\"dim\", \"b\"));\n    writer.addDocument(config.build(taxoWriter, doc));\n\n    doc = new Document();\n    doc.add(new FacetField(\"dim\", \"c\"));\n    writer.addDocument(config.build(taxoWriter, doc));\n\n    doc = new Document();\n    doc.add(new FacetField(\"dim\", \"d\"));\n    writer.addDocument(config.build(taxoWriter, doc));\n\n    // NRT open\n    IndexSearcher searcher = newSearcher(writer.getReader());\n\n    //System.out.println(\"searcher=\" + searcher);\n\n    // NRT open\n    TaxonomyReader taxoReader = new DirectoryTaxonomyReader(taxoWriter);\n\n    DrillDownQuery ddq = new DrillDownQuery(config);\n    ddq.add(\"dim\", \"a\");\n    DrillSidewaysResult r = new DrillSideways(searcher, config, taxoReader).search(null, ddq, 10);\n\n    assertEquals(3, r.hits.totalHits);\n    assertEquals(\"value=6 childCount=4\\n  a (3)\\n  b (1)\\n  c (1)\\n  d (1)\\n\", r.facets.getTopChildren(10, \"dim\").toString());\n    assertEquals(\"value=3 childCount=3\\n  x (1)\\n  y (1)\\n  z (1)\\n\", r.facets.getTopChildren(10, \"dim\", \"a\").toString());\n\n    IOUtils.close(searcher.getIndexReader(), taxoReader, writer, taxoWriter, dir, taxoDir);\n  }\n\n","sourceOld":"  public void testMultipleRequestsPerDim() throws Exception {\n    Directory dir = newDirectory();\n    Directory taxoDir = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir);\n\n    // Writes facet ords to a separate directory from the\n    // main index:\n    DirectoryTaxonomyWriter taxoWriter = new DirectoryTaxonomyWriter(taxoDir, IndexWriterConfig.OpenMode.CREATE);\n\n    FacetsConfig config = new FacetsConfig(taxoWriter);\n    config.setHierarchical(\"dim\", true);\n\n    Document doc = new Document();\n    doc.add(new FacetField(\"dim\", \"a\", \"x\"));\n    writer.addDocument(config.build(doc));\n\n    doc = new Document();\n    doc.add(new FacetField(\"dim\", \"a\", \"y\"));\n    writer.addDocument(config.build(doc));\n\n    doc = new Document();\n    doc.add(new FacetField(\"dim\", \"a\", \"z\"));\n    writer.addDocument(config.build(doc));\n\n    doc = new Document();\n    doc.add(new FacetField(\"dim\", \"b\"));\n    writer.addDocument(config.build(doc));\n\n    doc = new Document();\n    doc.add(new FacetField(\"dim\", \"c\"));\n    writer.addDocument(config.build(doc));\n\n    doc = new Document();\n    doc.add(new FacetField(\"dim\", \"d\"));\n    writer.addDocument(config.build(doc));\n\n    // NRT open\n    IndexSearcher searcher = newSearcher(writer.getReader());\n\n    //System.out.println(\"searcher=\" + searcher);\n\n    // NRT open\n    TaxonomyReader taxoReader = new DirectoryTaxonomyReader(taxoWriter);\n\n    DrillDownQuery ddq = new DrillDownQuery(config);\n    ddq.add(\"dim\", \"a\");\n    DrillSidewaysResult r = new DrillSideways(searcher, config, taxoReader).search(null, ddq, 10);\n\n    assertEquals(3, r.hits.totalHits);\n    assertEquals(\"value=6 childCount=4\\n  a (3)\\n  b (1)\\n  c (1)\\n  d (1)\\n\", r.facets.getTopChildren(10, \"dim\").toString());\n    assertEquals(\"value=3 childCount=3\\n  x (1)\\n  y (1)\\n  z (1)\\n\", r.facets.getTopChildren(10, \"dim\", \"a\").toString());\n\n    IOUtils.close(searcher.getIndexReader(), taxoReader, writer, taxoWriter, dir, taxoDir);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"56d44586f4c409c6c6c5942b9f0227df806b7300","date":1386027853,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/TestDrillSideways#testMultipleRequestsPerDim().mjava","pathOld":"lucene/facet/src/test/org/apache/lucene/facet/TestDrillSideways#testMultipleRequestsPerDim().mjava","sourceNew":"  public void testMultipleRequestsPerDim() throws Exception {\n    Directory dir = newDirectory();\n    Directory taxoDir = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir);\n\n    // Writes facet ords to a separate directory from the\n    // main index:\n    DirectoryTaxonomyWriter taxoWriter = new DirectoryTaxonomyWriter(taxoDir, IndexWriterConfig.OpenMode.CREATE);\n\n    FacetsConfig config = new FacetsConfig();\n    config.setHierarchical(\"dim\", true);\n\n    Document doc = new Document();\n    doc.add(new FacetField(\"dim\", \"a\", \"x\"));\n    writer.addDocument(config.build(taxoWriter, doc));\n\n    doc = new Document();\n    doc.add(new FacetField(\"dim\", \"a\", \"y\"));\n    writer.addDocument(config.build(taxoWriter, doc));\n\n    doc = new Document();\n    doc.add(new FacetField(\"dim\", \"a\", \"z\"));\n    writer.addDocument(config.build(taxoWriter, doc));\n\n    doc = new Document();\n    doc.add(new FacetField(\"dim\", \"b\"));\n    writer.addDocument(config.build(taxoWriter, doc));\n\n    doc = new Document();\n    doc.add(new FacetField(\"dim\", \"c\"));\n    writer.addDocument(config.build(taxoWriter, doc));\n\n    doc = new Document();\n    doc.add(new FacetField(\"dim\", \"d\"));\n    writer.addDocument(config.build(taxoWriter, doc));\n\n    // NRT open\n    IndexSearcher searcher = newSearcher(writer.getReader());\n\n    //System.out.println(\"searcher=\" + searcher);\n\n    // NRT open\n    TaxonomyReader taxoReader = new DirectoryTaxonomyReader(taxoWriter);\n\n    DrillDownQuery ddq = new DrillDownQuery(config);\n    ddq.add(\"dim\", \"a\");\n    DrillSidewaysResult r = new DrillSideways(searcher, config, taxoReader).search(null, ddq, 10);\n\n    assertEquals(3, r.hits.totalHits);\n    assertEquals(\"dim=dim path=[] value=6 childCount=4\\n  a (3)\\n  b (1)\\n  c (1)\\n  d (1)\\n\", r.facets.getTopChildren(10, \"dim\").toString());\n    assertEquals(\"dim=dim path=[a] value=3 childCount=3\\n  x (1)\\n  y (1)\\n  z (1)\\n\", r.facets.getTopChildren(10, \"dim\", \"a\").toString());\n\n    IOUtils.close(searcher.getIndexReader(), taxoReader, writer, taxoWriter, dir, taxoDir);\n  }\n\n","sourceOld":"  public void testMultipleRequestsPerDim() throws Exception {\n    Directory dir = newDirectory();\n    Directory taxoDir = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir);\n\n    // Writes facet ords to a separate directory from the\n    // main index:\n    DirectoryTaxonomyWriter taxoWriter = new DirectoryTaxonomyWriter(taxoDir, IndexWriterConfig.OpenMode.CREATE);\n\n    FacetsConfig config = new FacetsConfig();\n    config.setHierarchical(\"dim\", true);\n\n    Document doc = new Document();\n    doc.add(new FacetField(\"dim\", \"a\", \"x\"));\n    writer.addDocument(config.build(taxoWriter, doc));\n\n    doc = new Document();\n    doc.add(new FacetField(\"dim\", \"a\", \"y\"));\n    writer.addDocument(config.build(taxoWriter, doc));\n\n    doc = new Document();\n    doc.add(new FacetField(\"dim\", \"a\", \"z\"));\n    writer.addDocument(config.build(taxoWriter, doc));\n\n    doc = new Document();\n    doc.add(new FacetField(\"dim\", \"b\"));\n    writer.addDocument(config.build(taxoWriter, doc));\n\n    doc = new Document();\n    doc.add(new FacetField(\"dim\", \"c\"));\n    writer.addDocument(config.build(taxoWriter, doc));\n\n    doc = new Document();\n    doc.add(new FacetField(\"dim\", \"d\"));\n    writer.addDocument(config.build(taxoWriter, doc));\n\n    // NRT open\n    IndexSearcher searcher = newSearcher(writer.getReader());\n\n    //System.out.println(\"searcher=\" + searcher);\n\n    // NRT open\n    TaxonomyReader taxoReader = new DirectoryTaxonomyReader(taxoWriter);\n\n    DrillDownQuery ddq = new DrillDownQuery(config);\n    ddq.add(\"dim\", \"a\");\n    DrillSidewaysResult r = new DrillSideways(searcher, config, taxoReader).search(null, ddq, 10);\n\n    assertEquals(3, r.hits.totalHits);\n    assertEquals(\"value=6 childCount=4\\n  a (3)\\n  b (1)\\n  c (1)\\n  d (1)\\n\", r.facets.getTopChildren(10, \"dim\").toString());\n    assertEquals(\"value=3 childCount=3\\n  x (1)\\n  y (1)\\n  z (1)\\n\", r.facets.getTopChildren(10, \"dim\", \"a\").toString());\n\n    IOUtils.close(searcher.getIndexReader(), taxoReader, writer, taxoWriter, dir, taxoDir);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3cc728b07df73b197e6d940d27f9b08b63918f13","date":1388834348,"type":0,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/TestDrillSideways#testMultipleRequestsPerDim().mjava","pathOld":"/dev/null","sourceNew":"  public void testMultipleRequestsPerDim() throws Exception {\n    Directory dir = newDirectory();\n    Directory taxoDir = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir);\n\n    // Writes facet ords to a separate directory from the\n    // main index:\n    DirectoryTaxonomyWriter taxoWriter = new DirectoryTaxonomyWriter(taxoDir, IndexWriterConfig.OpenMode.CREATE);\n\n    FacetsConfig config = new FacetsConfig();\n    config.setHierarchical(\"dim\", true);\n\n    Document doc = new Document();\n    doc.add(new FacetField(\"dim\", \"a\", \"x\"));\n    writer.addDocument(config.build(taxoWriter, doc));\n\n    doc = new Document();\n    doc.add(new FacetField(\"dim\", \"a\", \"y\"));\n    writer.addDocument(config.build(taxoWriter, doc));\n\n    doc = new Document();\n    doc.add(new FacetField(\"dim\", \"a\", \"z\"));\n    writer.addDocument(config.build(taxoWriter, doc));\n\n    doc = new Document();\n    doc.add(new FacetField(\"dim\", \"b\"));\n    writer.addDocument(config.build(taxoWriter, doc));\n\n    doc = new Document();\n    doc.add(new FacetField(\"dim\", \"c\"));\n    writer.addDocument(config.build(taxoWriter, doc));\n\n    doc = new Document();\n    doc.add(new FacetField(\"dim\", \"d\"));\n    writer.addDocument(config.build(taxoWriter, doc));\n\n    // NRT open\n    IndexSearcher searcher = newSearcher(writer.getReader());\n\n    //System.out.println(\"searcher=\" + searcher);\n\n    // NRT open\n    TaxonomyReader taxoReader = new DirectoryTaxonomyReader(taxoWriter);\n\n    DrillDownQuery ddq = new DrillDownQuery(config);\n    ddq.add(\"dim\", \"a\");\n    DrillSidewaysResult r = new DrillSideways(searcher, config, taxoReader).search(null, ddq, 10);\n\n    assertEquals(3, r.hits.totalHits);\n    assertEquals(\"dim=dim path=[] value=6 childCount=4\\n  a (3)\\n  b (1)\\n  c (1)\\n  d (1)\\n\", r.facets.getTopChildren(10, \"dim\").toString());\n    assertEquals(\"dim=dim path=[a] value=3 childCount=3\\n  x (1)\\n  y (1)\\n  z (1)\\n\", r.facets.getTopChildren(10, \"dim\", \"a\").toString());\n\n    IOUtils.close(searcher.getIndexReader(), taxoReader, writer, taxoWriter, dir, taxoDir);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ae14298f4eec6d5faee6a149f88ba57d14a6f21a","date":1396971290,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/TestDrillSideways#testMultipleRequestsPerDim().mjava","pathOld":"lucene/facet/src/test/org/apache/lucene/facet/TestDrillSideways#testMultipleRequestsPerDim().mjava","sourceNew":"  public void testMultipleRequestsPerDim() throws Exception {\n    Directory dir = newDirectory();\n    Directory taxoDir = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir);\n\n    // Writes facet ords to a separate directory from the\n    // main index:\n    DirectoryTaxonomyWriter taxoWriter = new DirectoryTaxonomyWriter(taxoDir, IndexWriterConfig.OpenMode.CREATE);\n\n    FacetsConfig config = new FacetsConfig();\n    config.setHierarchical(\"dim\", true);\n\n    Document doc = new Document();\n    doc.add(new FacetField(\"dim\", \"a\", \"x\"));\n    writer.addDocument(config.build(taxoWriter, doc));\n\n    doc = new Document();\n    doc.add(new FacetField(\"dim\", \"a\", \"y\"));\n    writer.addDocument(config.build(taxoWriter, doc));\n\n    doc = new Document();\n    doc.add(new FacetField(\"dim\", \"a\", \"z\"));\n    writer.addDocument(config.build(taxoWriter, doc));\n\n    doc = new Document();\n    doc.add(new FacetField(\"dim\", \"b\"));\n    writer.addDocument(config.build(taxoWriter, doc));\n\n    doc = new Document();\n    doc.add(new FacetField(\"dim\", \"c\"));\n    writer.addDocument(config.build(taxoWriter, doc));\n\n    doc = new Document();\n    doc.add(new FacetField(\"dim\", \"d\"));\n    writer.addDocument(config.build(taxoWriter, doc));\n\n    // NRT open\n    IndexSearcher searcher = newSearcher(writer.getReader());\n\n    //System.out.println(\"searcher=\" + searcher);\n\n    // NRT open\n    TaxonomyReader taxoReader = new DirectoryTaxonomyReader(taxoWriter);\n\n    DrillDownQuery ddq = new DrillDownQuery(config);\n    ddq.add(\"dim\", \"a\");\n    DrillSidewaysResult r = new DrillSideways(searcher, config, taxoReader).search(null, ddq, 10);\n\n    assertEquals(3, r.hits.totalHits);\n    assertEquals(\"dim=dim path=[] value=6 childCount=4\\n  a (3)\\n  b (1)\\n  c (1)\\n  d (1)\\n\", r.facets.getTopChildren(10, \"dim\").toString());\n    assertEquals(\"dim=dim path=[a] value=3 childCount=3\\n  x (1)\\n  y (1)\\n  z (1)\\n\", r.facets.getTopChildren(10, \"dim\", \"a\").toString());\n\n    writer.shutdown();\n    IOUtils.close(searcher.getIndexReader(), taxoReader, taxoWriter, dir, taxoDir);\n  }\n\n","sourceOld":"  public void testMultipleRequestsPerDim() throws Exception {\n    Directory dir = newDirectory();\n    Directory taxoDir = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir);\n\n    // Writes facet ords to a separate directory from the\n    // main index:\n    DirectoryTaxonomyWriter taxoWriter = new DirectoryTaxonomyWriter(taxoDir, IndexWriterConfig.OpenMode.CREATE);\n\n    FacetsConfig config = new FacetsConfig();\n    config.setHierarchical(\"dim\", true);\n\n    Document doc = new Document();\n    doc.add(new FacetField(\"dim\", \"a\", \"x\"));\n    writer.addDocument(config.build(taxoWriter, doc));\n\n    doc = new Document();\n    doc.add(new FacetField(\"dim\", \"a\", \"y\"));\n    writer.addDocument(config.build(taxoWriter, doc));\n\n    doc = new Document();\n    doc.add(new FacetField(\"dim\", \"a\", \"z\"));\n    writer.addDocument(config.build(taxoWriter, doc));\n\n    doc = new Document();\n    doc.add(new FacetField(\"dim\", \"b\"));\n    writer.addDocument(config.build(taxoWriter, doc));\n\n    doc = new Document();\n    doc.add(new FacetField(\"dim\", \"c\"));\n    writer.addDocument(config.build(taxoWriter, doc));\n\n    doc = new Document();\n    doc.add(new FacetField(\"dim\", \"d\"));\n    writer.addDocument(config.build(taxoWriter, doc));\n\n    // NRT open\n    IndexSearcher searcher = newSearcher(writer.getReader());\n\n    //System.out.println(\"searcher=\" + searcher);\n\n    // NRT open\n    TaxonomyReader taxoReader = new DirectoryTaxonomyReader(taxoWriter);\n\n    DrillDownQuery ddq = new DrillDownQuery(config);\n    ddq.add(\"dim\", \"a\");\n    DrillSidewaysResult r = new DrillSideways(searcher, config, taxoReader).search(null, ddq, 10);\n\n    assertEquals(3, r.hits.totalHits);\n    assertEquals(\"dim=dim path=[] value=6 childCount=4\\n  a (3)\\n  b (1)\\n  c (1)\\n  d (1)\\n\", r.facets.getTopChildren(10, \"dim\").toString());\n    assertEquals(\"dim=dim path=[a] value=3 childCount=3\\n  x (1)\\n  y (1)\\n  z (1)\\n\", r.facets.getTopChildren(10, \"dim\", \"a\").toString());\n\n    IOUtils.close(searcher.getIndexReader(), taxoReader, writer, taxoWriter, dir, taxoDir);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d0ef034a4f10871667ae75181537775ddcf8ade4","date":1407610475,"type":3,"author":"Ryan Ernst","isMerge":false,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/TestDrillSideways#testMultipleRequestsPerDim().mjava","pathOld":"lucene/facet/src/test/org/apache/lucene/facet/TestDrillSideways#testMultipleRequestsPerDim().mjava","sourceNew":"  public void testMultipleRequestsPerDim() throws Exception {\n    Directory dir = newDirectory();\n    Directory taxoDir = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir);\n\n    // Writes facet ords to a separate directory from the\n    // main index:\n    DirectoryTaxonomyWriter taxoWriter = new DirectoryTaxonomyWriter(taxoDir, IndexWriterConfig.OpenMode.CREATE);\n\n    FacetsConfig config = new FacetsConfig();\n    config.setHierarchical(\"dim\", true);\n\n    Document doc = new Document();\n    doc.add(new FacetField(\"dim\", \"a\", \"x\"));\n    writer.addDocument(config.build(taxoWriter, doc));\n\n    doc = new Document();\n    doc.add(new FacetField(\"dim\", \"a\", \"y\"));\n    writer.addDocument(config.build(taxoWriter, doc));\n\n    doc = new Document();\n    doc.add(new FacetField(\"dim\", \"a\", \"z\"));\n    writer.addDocument(config.build(taxoWriter, doc));\n\n    doc = new Document();\n    doc.add(new FacetField(\"dim\", \"b\"));\n    writer.addDocument(config.build(taxoWriter, doc));\n\n    doc = new Document();\n    doc.add(new FacetField(\"dim\", \"c\"));\n    writer.addDocument(config.build(taxoWriter, doc));\n\n    doc = new Document();\n    doc.add(new FacetField(\"dim\", \"d\"));\n    writer.addDocument(config.build(taxoWriter, doc));\n\n    // NRT open\n    IndexSearcher searcher = newSearcher(writer.getReader());\n\n    //System.out.println(\"searcher=\" + searcher);\n\n    // NRT open\n    TaxonomyReader taxoReader = new DirectoryTaxonomyReader(taxoWriter);\n\n    DrillDownQuery ddq = new DrillDownQuery(config);\n    ddq.add(\"dim\", \"a\");\n    DrillSidewaysResult r = new DrillSideways(searcher, config, taxoReader).search(null, ddq, 10);\n\n    assertEquals(3, r.hits.totalHits);\n    assertEquals(\"dim=dim path=[] value=6 childCount=4\\n  a (3)\\n  b (1)\\n  c (1)\\n  d (1)\\n\", r.facets.getTopChildren(10, \"dim\").toString());\n    assertEquals(\"dim=dim path=[a] value=3 childCount=3\\n  x (1)\\n  y (1)\\n  z (1)\\n\", r.facets.getTopChildren(10, \"dim\", \"a\").toString());\n\n    writer.close();\n    IOUtils.close(searcher.getIndexReader(), taxoReader, taxoWriter, dir, taxoDir);\n  }\n\n","sourceOld":"  public void testMultipleRequestsPerDim() throws Exception {\n    Directory dir = newDirectory();\n    Directory taxoDir = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir);\n\n    // Writes facet ords to a separate directory from the\n    // main index:\n    DirectoryTaxonomyWriter taxoWriter = new DirectoryTaxonomyWriter(taxoDir, IndexWriterConfig.OpenMode.CREATE);\n\n    FacetsConfig config = new FacetsConfig();\n    config.setHierarchical(\"dim\", true);\n\n    Document doc = new Document();\n    doc.add(new FacetField(\"dim\", \"a\", \"x\"));\n    writer.addDocument(config.build(taxoWriter, doc));\n\n    doc = new Document();\n    doc.add(new FacetField(\"dim\", \"a\", \"y\"));\n    writer.addDocument(config.build(taxoWriter, doc));\n\n    doc = new Document();\n    doc.add(new FacetField(\"dim\", \"a\", \"z\"));\n    writer.addDocument(config.build(taxoWriter, doc));\n\n    doc = new Document();\n    doc.add(new FacetField(\"dim\", \"b\"));\n    writer.addDocument(config.build(taxoWriter, doc));\n\n    doc = new Document();\n    doc.add(new FacetField(\"dim\", \"c\"));\n    writer.addDocument(config.build(taxoWriter, doc));\n\n    doc = new Document();\n    doc.add(new FacetField(\"dim\", \"d\"));\n    writer.addDocument(config.build(taxoWriter, doc));\n\n    // NRT open\n    IndexSearcher searcher = newSearcher(writer.getReader());\n\n    //System.out.println(\"searcher=\" + searcher);\n\n    // NRT open\n    TaxonomyReader taxoReader = new DirectoryTaxonomyReader(taxoWriter);\n\n    DrillDownQuery ddq = new DrillDownQuery(config);\n    ddq.add(\"dim\", \"a\");\n    DrillSidewaysResult r = new DrillSideways(searcher, config, taxoReader).search(null, ddq, 10);\n\n    assertEquals(3, r.hits.totalHits);\n    assertEquals(\"dim=dim path=[] value=6 childCount=4\\n  a (3)\\n  b (1)\\n  c (1)\\n  d (1)\\n\", r.facets.getTopChildren(10, \"dim\").toString());\n    assertEquals(\"dim=dim path=[a] value=3 childCount=3\\n  x (1)\\n  y (1)\\n  z (1)\\n\", r.facets.getTopChildren(10, \"dim\", \"a\").toString());\n\n    writer.shutdown();\n    IOUtils.close(searcher.getIndexReader(), taxoReader, taxoWriter, dir, taxoDir);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"91eb857a56b1a3a6659c666f88e2398347fc1c5a","date":1483442809,"type":3,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/TestDrillSideways#testMultipleRequestsPerDim().mjava","pathOld":"lucene/facet/src/test/org/apache/lucene/facet/TestDrillSideways#testMultipleRequestsPerDim().mjava","sourceNew":"  public void testMultipleRequestsPerDim() throws Exception {\n    Directory dir = newDirectory();\n    Directory taxoDir = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir);\n\n    // Writes facet ords to a separate directory from the\n    // main index:\n    DirectoryTaxonomyWriter taxoWriter = new DirectoryTaxonomyWriter(taxoDir, IndexWriterConfig.OpenMode.CREATE);\n\n    FacetsConfig config = new FacetsConfig();\n    config.setHierarchical(\"dim\", true);\n\n    Document doc = new Document();\n    doc.add(new FacetField(\"dim\", \"a\", \"x\"));\n    writer.addDocument(config.build(taxoWriter, doc));\n\n    doc = new Document();\n    doc.add(new FacetField(\"dim\", \"a\", \"y\"));\n    writer.addDocument(config.build(taxoWriter, doc));\n\n    doc = new Document();\n    doc.add(new FacetField(\"dim\", \"a\", \"z\"));\n    writer.addDocument(config.build(taxoWriter, doc));\n\n    doc = new Document();\n    doc.add(new FacetField(\"dim\", \"b\"));\n    writer.addDocument(config.build(taxoWriter, doc));\n\n    doc = new Document();\n    doc.add(new FacetField(\"dim\", \"c\"));\n    writer.addDocument(config.build(taxoWriter, doc));\n\n    doc = new Document();\n    doc.add(new FacetField(\"dim\", \"d\"));\n    writer.addDocument(config.build(taxoWriter, doc));\n\n    // NRT open\n    IndexSearcher searcher = newSearcher(writer.getReader());\n\n    //System.out.println(\"searcher=\" + searcher);\n\n    // NRT open\n    TaxonomyReader taxoReader = new DirectoryTaxonomyReader(taxoWriter);\n\n    DrillDownQuery ddq = new DrillDownQuery(config);\n    ddq.add(\"dim\", \"a\");\n    DrillSidewaysResult r = getNewDrillSideways(searcher, config, taxoReader).search(null, ddq, 10);\n\n    assertEquals(3, r.hits.totalHits);\n    assertEquals(\"dim=dim path=[] value=6 childCount=4\\n  a (3)\\n  b (1)\\n  c (1)\\n  d (1)\\n\",\n            r.facets.getTopChildren(10, \"dim\").toString());\n    assertEquals(\"dim=dim path=[a] value=3 childCount=3\\n  x (1)\\n  y (1)\\n  z (1)\\n\",\n            r.facets.getTopChildren(10, \"dim\", \"a\").toString());\n\n    writer.close();\n    IOUtils.close(searcher.getIndexReader(), taxoReader, taxoWriter, dir, taxoDir);\n  }\n\n","sourceOld":"  public void testMultipleRequestsPerDim() throws Exception {\n    Directory dir = newDirectory();\n    Directory taxoDir = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir);\n\n    // Writes facet ords to a separate directory from the\n    // main index:\n    DirectoryTaxonomyWriter taxoWriter = new DirectoryTaxonomyWriter(taxoDir, IndexWriterConfig.OpenMode.CREATE);\n\n    FacetsConfig config = new FacetsConfig();\n    config.setHierarchical(\"dim\", true);\n\n    Document doc = new Document();\n    doc.add(new FacetField(\"dim\", \"a\", \"x\"));\n    writer.addDocument(config.build(taxoWriter, doc));\n\n    doc = new Document();\n    doc.add(new FacetField(\"dim\", \"a\", \"y\"));\n    writer.addDocument(config.build(taxoWriter, doc));\n\n    doc = new Document();\n    doc.add(new FacetField(\"dim\", \"a\", \"z\"));\n    writer.addDocument(config.build(taxoWriter, doc));\n\n    doc = new Document();\n    doc.add(new FacetField(\"dim\", \"b\"));\n    writer.addDocument(config.build(taxoWriter, doc));\n\n    doc = new Document();\n    doc.add(new FacetField(\"dim\", \"c\"));\n    writer.addDocument(config.build(taxoWriter, doc));\n\n    doc = new Document();\n    doc.add(new FacetField(\"dim\", \"d\"));\n    writer.addDocument(config.build(taxoWriter, doc));\n\n    // NRT open\n    IndexSearcher searcher = newSearcher(writer.getReader());\n\n    //System.out.println(\"searcher=\" + searcher);\n\n    // NRT open\n    TaxonomyReader taxoReader = new DirectoryTaxonomyReader(taxoWriter);\n\n    DrillDownQuery ddq = new DrillDownQuery(config);\n    ddq.add(\"dim\", \"a\");\n    DrillSidewaysResult r = new DrillSideways(searcher, config, taxoReader).search(null, ddq, 10);\n\n    assertEquals(3, r.hits.totalHits);\n    assertEquals(\"dim=dim path=[] value=6 childCount=4\\n  a (3)\\n  b (1)\\n  c (1)\\n  d (1)\\n\", r.facets.getTopChildren(10, \"dim\").toString());\n    assertEquals(\"dim=dim path=[a] value=3 childCount=3\\n  x (1)\\n  y (1)\\n  z (1)\\n\", r.facets.getTopChildren(10, \"dim\", \"a\").toString());\n\n    writer.close();\n    IOUtils.close(searcher.getIndexReader(), taxoReader, taxoWriter, dir, taxoDir);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f03e4bed5023ec3ef93a771b8888cae991cf448d","date":1483469262,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/TestDrillSideways#testMultipleRequestsPerDim().mjava","pathOld":"lucene/facet/src/test/org/apache/lucene/facet/TestDrillSideways#testMultipleRequestsPerDim().mjava","sourceNew":"  public void testMultipleRequestsPerDim() throws Exception {\n    Directory dir = newDirectory();\n    Directory taxoDir = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir);\n\n    // Writes facet ords to a separate directory from the\n    // main index:\n    DirectoryTaxonomyWriter taxoWriter = new DirectoryTaxonomyWriter(taxoDir, IndexWriterConfig.OpenMode.CREATE);\n\n    FacetsConfig config = new FacetsConfig();\n    config.setHierarchical(\"dim\", true);\n\n    Document doc = new Document();\n    doc.add(new FacetField(\"dim\", \"a\", \"x\"));\n    writer.addDocument(config.build(taxoWriter, doc));\n\n    doc = new Document();\n    doc.add(new FacetField(\"dim\", \"a\", \"y\"));\n    writer.addDocument(config.build(taxoWriter, doc));\n\n    doc = new Document();\n    doc.add(new FacetField(\"dim\", \"a\", \"z\"));\n    writer.addDocument(config.build(taxoWriter, doc));\n\n    doc = new Document();\n    doc.add(new FacetField(\"dim\", \"b\"));\n    writer.addDocument(config.build(taxoWriter, doc));\n\n    doc = new Document();\n    doc.add(new FacetField(\"dim\", \"c\"));\n    writer.addDocument(config.build(taxoWriter, doc));\n\n    doc = new Document();\n    doc.add(new FacetField(\"dim\", \"d\"));\n    writer.addDocument(config.build(taxoWriter, doc));\n\n    // NRT open\n    IndexSearcher searcher = newSearcher(writer.getReader());\n\n    //System.out.println(\"searcher=\" + searcher);\n\n    // NRT open\n    TaxonomyReader taxoReader = new DirectoryTaxonomyReader(taxoWriter);\n\n    DrillDownQuery ddq = new DrillDownQuery(config);\n    ddq.add(\"dim\", \"a\");\n    DrillSidewaysResult r = getNewDrillSideways(searcher, config, taxoReader).search(null, ddq, 10);\n\n    assertEquals(3, r.hits.totalHits);\n    assertEquals(\"dim=dim path=[] value=6 childCount=4\\n  a (3)\\n  b (1)\\n  c (1)\\n  d (1)\\n\",\n            r.facets.getTopChildren(10, \"dim\").toString());\n    assertEquals(\"dim=dim path=[a] value=3 childCount=3\\n  x (1)\\n  y (1)\\n  z (1)\\n\",\n            r.facets.getTopChildren(10, \"dim\", \"a\").toString());\n\n    writer.close();\n    IOUtils.close(searcher.getIndexReader(), taxoReader, taxoWriter, dir, taxoDir);\n  }\n\n","sourceOld":"  public void testMultipleRequestsPerDim() throws Exception {\n    Directory dir = newDirectory();\n    Directory taxoDir = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir);\n\n    // Writes facet ords to a separate directory from the\n    // main index:\n    DirectoryTaxonomyWriter taxoWriter = new DirectoryTaxonomyWriter(taxoDir, IndexWriterConfig.OpenMode.CREATE);\n\n    FacetsConfig config = new FacetsConfig();\n    config.setHierarchical(\"dim\", true);\n\n    Document doc = new Document();\n    doc.add(new FacetField(\"dim\", \"a\", \"x\"));\n    writer.addDocument(config.build(taxoWriter, doc));\n\n    doc = new Document();\n    doc.add(new FacetField(\"dim\", \"a\", \"y\"));\n    writer.addDocument(config.build(taxoWriter, doc));\n\n    doc = new Document();\n    doc.add(new FacetField(\"dim\", \"a\", \"z\"));\n    writer.addDocument(config.build(taxoWriter, doc));\n\n    doc = new Document();\n    doc.add(new FacetField(\"dim\", \"b\"));\n    writer.addDocument(config.build(taxoWriter, doc));\n\n    doc = new Document();\n    doc.add(new FacetField(\"dim\", \"c\"));\n    writer.addDocument(config.build(taxoWriter, doc));\n\n    doc = new Document();\n    doc.add(new FacetField(\"dim\", \"d\"));\n    writer.addDocument(config.build(taxoWriter, doc));\n\n    // NRT open\n    IndexSearcher searcher = newSearcher(writer.getReader());\n\n    //System.out.println(\"searcher=\" + searcher);\n\n    // NRT open\n    TaxonomyReader taxoReader = new DirectoryTaxonomyReader(taxoWriter);\n\n    DrillDownQuery ddq = new DrillDownQuery(config);\n    ddq.add(\"dim\", \"a\");\n    DrillSidewaysResult r = new DrillSideways(searcher, config, taxoReader).search(null, ddq, 10);\n\n    assertEquals(3, r.hits.totalHits);\n    assertEquals(\"dim=dim path=[] value=6 childCount=4\\n  a (3)\\n  b (1)\\n  c (1)\\n  d (1)\\n\", r.facets.getTopChildren(10, \"dim\").toString());\n    assertEquals(\"dim=dim path=[a] value=3 childCount=3\\n  x (1)\\n  y (1)\\n  z (1)\\n\", r.facets.getTopChildren(10, \"dim\", \"a\").toString());\n\n    writer.close();\n    IOUtils.close(searcher.getIndexReader(), taxoReader, taxoWriter, dir, taxoDir);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"83788ad129a5154d5c6562c4e8ce3db48793aada","date":1532961485,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/TestDrillSideways#testMultipleRequestsPerDim().mjava","pathOld":"lucene/facet/src/test/org/apache/lucene/facet/TestDrillSideways#testMultipleRequestsPerDim().mjava","sourceNew":"  public void testMultipleRequestsPerDim() throws Exception {\n    Directory dir = newDirectory();\n    Directory taxoDir = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir);\n\n    // Writes facet ords to a separate directory from the\n    // main index:\n    DirectoryTaxonomyWriter taxoWriter = new DirectoryTaxonomyWriter(taxoDir, IndexWriterConfig.OpenMode.CREATE);\n\n    FacetsConfig config = new FacetsConfig();\n    config.setHierarchical(\"dim\", true);\n\n    Document doc = new Document();\n    doc.add(new FacetField(\"dim\", \"a\", \"x\"));\n    writer.addDocument(config.build(taxoWriter, doc));\n\n    doc = new Document();\n    doc.add(new FacetField(\"dim\", \"a\", \"y\"));\n    writer.addDocument(config.build(taxoWriter, doc));\n\n    doc = new Document();\n    doc.add(new FacetField(\"dim\", \"a\", \"z\"));\n    writer.addDocument(config.build(taxoWriter, doc));\n\n    doc = new Document();\n    doc.add(new FacetField(\"dim\", \"b\"));\n    writer.addDocument(config.build(taxoWriter, doc));\n\n    doc = new Document();\n    doc.add(new FacetField(\"dim\", \"c\"));\n    writer.addDocument(config.build(taxoWriter, doc));\n\n    doc = new Document();\n    doc.add(new FacetField(\"dim\", \"d\"));\n    writer.addDocument(config.build(taxoWriter, doc));\n\n    // NRT open\n    IndexSearcher searcher = newSearcher(writer.getReader());\n\n    //System.out.println(\"searcher=\" + searcher);\n\n    // NRT open\n    TaxonomyReader taxoReader = new DirectoryTaxonomyReader(taxoWriter);\n\n    DrillDownQuery ddq = new DrillDownQuery(config);\n    ddq.add(\"dim\", \"a\");\n    DrillSidewaysResult r = getNewDrillSideways(searcher, config, taxoReader).search(null, ddq, 10);\n\n    assertEquals(3, r.hits.totalHits.value);\n    assertEquals(\"dim=dim path=[] value=6 childCount=4\\n  a (3)\\n  b (1)\\n  c (1)\\n  d (1)\\n\",\n            r.facets.getTopChildren(10, \"dim\").toString());\n    assertEquals(\"dim=dim path=[a] value=3 childCount=3\\n  x (1)\\n  y (1)\\n  z (1)\\n\",\n            r.facets.getTopChildren(10, \"dim\", \"a\").toString());\n\n    writer.close();\n    IOUtils.close(searcher.getIndexReader(), taxoReader, taxoWriter, dir, taxoDir);\n  }\n\n","sourceOld":"  public void testMultipleRequestsPerDim() throws Exception {\n    Directory dir = newDirectory();\n    Directory taxoDir = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir);\n\n    // Writes facet ords to a separate directory from the\n    // main index:\n    DirectoryTaxonomyWriter taxoWriter = new DirectoryTaxonomyWriter(taxoDir, IndexWriterConfig.OpenMode.CREATE);\n\n    FacetsConfig config = new FacetsConfig();\n    config.setHierarchical(\"dim\", true);\n\n    Document doc = new Document();\n    doc.add(new FacetField(\"dim\", \"a\", \"x\"));\n    writer.addDocument(config.build(taxoWriter, doc));\n\n    doc = new Document();\n    doc.add(new FacetField(\"dim\", \"a\", \"y\"));\n    writer.addDocument(config.build(taxoWriter, doc));\n\n    doc = new Document();\n    doc.add(new FacetField(\"dim\", \"a\", \"z\"));\n    writer.addDocument(config.build(taxoWriter, doc));\n\n    doc = new Document();\n    doc.add(new FacetField(\"dim\", \"b\"));\n    writer.addDocument(config.build(taxoWriter, doc));\n\n    doc = new Document();\n    doc.add(new FacetField(\"dim\", \"c\"));\n    writer.addDocument(config.build(taxoWriter, doc));\n\n    doc = new Document();\n    doc.add(new FacetField(\"dim\", \"d\"));\n    writer.addDocument(config.build(taxoWriter, doc));\n\n    // NRT open\n    IndexSearcher searcher = newSearcher(writer.getReader());\n\n    //System.out.println(\"searcher=\" + searcher);\n\n    // NRT open\n    TaxonomyReader taxoReader = new DirectoryTaxonomyReader(taxoWriter);\n\n    DrillDownQuery ddq = new DrillDownQuery(config);\n    ddq.add(\"dim\", \"a\");\n    DrillSidewaysResult r = getNewDrillSideways(searcher, config, taxoReader).search(null, ddq, 10);\n\n    assertEquals(3, r.hits.totalHits);\n    assertEquals(\"dim=dim path=[] value=6 childCount=4\\n  a (3)\\n  b (1)\\n  c (1)\\n  d (1)\\n\",\n            r.facets.getTopChildren(10, \"dim\").toString());\n    assertEquals(\"dim=dim path=[a] value=3 childCount=3\\n  x (1)\\n  y (1)\\n  z (1)\\n\",\n            r.facets.getTopChildren(10, \"dim\", \"a\").toString());\n\n    writer.close();\n    IOUtils.close(searcher.getIndexReader(), taxoReader, taxoWriter, dir, taxoDir);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"132e4d2b791f182f095041c89860f21eb11c31a5","date":1600099601,"type":3,"author":"Julie Tibshirani","isMerge":false,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/TestDrillSideways#testMultipleRequestsPerDim().mjava","pathOld":"lucene/facet/src/test/org/apache/lucene/facet/TestDrillSideways#testMultipleRequestsPerDim().mjava","sourceNew":"  public void testMultipleRequestsPerDim() throws Exception {\n    Directory dir = newDirectory();\n    Directory taxoDir = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir);\n\n    // Writes facet ords to a separate directory from the\n    // main index:\n    DirectoryTaxonomyWriter taxoWriter = new DirectoryTaxonomyWriter(taxoDir, IndexWriterConfig.OpenMode.CREATE);\n\n    FacetsConfig config = new FacetsConfig();\n    config.setHierarchical(\"dim\", true);\n\n    Document doc = new Document();\n    doc.add(new FacetField(\"dim\", \"a\", \"x\"));\n    writer.addDocument(config.build(taxoWriter, doc));\n\n    doc = new Document();\n    doc.add(new FacetField(\"dim\", \"a\", \"y\"));\n    writer.addDocument(config.build(taxoWriter, doc));\n\n    doc = new Document();\n    doc.add(new FacetField(\"dim\", \"a\", \"z\"));\n    writer.addDocument(config.build(taxoWriter, doc));\n\n    doc = new Document();\n    doc.add(new FacetField(\"dim\", \"b\"));\n    writer.addDocument(config.build(taxoWriter, doc));\n\n    doc = new Document();\n    doc.add(new FacetField(\"dim\", \"c\"));\n    writer.addDocument(config.build(taxoWriter, doc));\n\n    doc = new Document();\n    doc.add(new FacetField(\"dim\", \"d\"));\n    writer.addDocument(config.build(taxoWriter, doc));\n\n    // NRT open\n    IndexSearcher searcher = getNewSearcher(writer.getReader());\n\n    //System.out.println(\"searcher=\" + searcher);\n\n    // NRT open\n    TaxonomyReader taxoReader = new DirectoryTaxonomyReader(taxoWriter);\n\n    DrillDownQuery ddq = new DrillDownQuery(config);\n    ddq.add(\"dim\", \"a\");\n    DrillSidewaysResult r = getNewDrillSideways(searcher, config, taxoReader).search(null, ddq, 10);\n\n    assertEquals(3, r.hits.totalHits.value);\n    assertEquals(\"dim=dim path=[] value=6 childCount=4\\n  a (3)\\n  b (1)\\n  c (1)\\n  d (1)\\n\",\n            r.facets.getTopChildren(10, \"dim\").toString());\n    assertEquals(\"dim=dim path=[a] value=3 childCount=3\\n  x (1)\\n  y (1)\\n  z (1)\\n\",\n            r.facets.getTopChildren(10, \"dim\", \"a\").toString());\n\n    writer.close();\n    IOUtils.close(searcher.getIndexReader(), taxoReader, taxoWriter, dir, taxoDir);\n  }\n\n","sourceOld":"  public void testMultipleRequestsPerDim() throws Exception {\n    Directory dir = newDirectory();\n    Directory taxoDir = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir);\n\n    // Writes facet ords to a separate directory from the\n    // main index:\n    DirectoryTaxonomyWriter taxoWriter = new DirectoryTaxonomyWriter(taxoDir, IndexWriterConfig.OpenMode.CREATE);\n\n    FacetsConfig config = new FacetsConfig();\n    config.setHierarchical(\"dim\", true);\n\n    Document doc = new Document();\n    doc.add(new FacetField(\"dim\", \"a\", \"x\"));\n    writer.addDocument(config.build(taxoWriter, doc));\n\n    doc = new Document();\n    doc.add(new FacetField(\"dim\", \"a\", \"y\"));\n    writer.addDocument(config.build(taxoWriter, doc));\n\n    doc = new Document();\n    doc.add(new FacetField(\"dim\", \"a\", \"z\"));\n    writer.addDocument(config.build(taxoWriter, doc));\n\n    doc = new Document();\n    doc.add(new FacetField(\"dim\", \"b\"));\n    writer.addDocument(config.build(taxoWriter, doc));\n\n    doc = new Document();\n    doc.add(new FacetField(\"dim\", \"c\"));\n    writer.addDocument(config.build(taxoWriter, doc));\n\n    doc = new Document();\n    doc.add(new FacetField(\"dim\", \"d\"));\n    writer.addDocument(config.build(taxoWriter, doc));\n\n    // NRT open\n    IndexSearcher searcher = newSearcher(writer.getReader());\n\n    //System.out.println(\"searcher=\" + searcher);\n\n    // NRT open\n    TaxonomyReader taxoReader = new DirectoryTaxonomyReader(taxoWriter);\n\n    DrillDownQuery ddq = new DrillDownQuery(config);\n    ddq.add(\"dim\", \"a\");\n    DrillSidewaysResult r = getNewDrillSideways(searcher, config, taxoReader).search(null, ddq, 10);\n\n    assertEquals(3, r.hits.totalHits.value);\n    assertEquals(\"dim=dim path=[] value=6 childCount=4\\n  a (3)\\n  b (1)\\n  c (1)\\n  d (1)\\n\",\n            r.facets.getTopChildren(10, \"dim\").toString());\n    assertEquals(\"dim=dim path=[a] value=3 childCount=3\\n  x (1)\\n  y (1)\\n  z (1)\\n\",\n            r.facets.getTopChildren(10, \"dim\", \"a\").toString());\n\n    writer.close();\n    IOUtils.close(searcher.getIndexReader(), taxoReader, taxoWriter, dir, taxoDir);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"680b6449f09827f58fe987aff279e014c311d966","date":1600247985,"type":3,"author":"noblepaul","isMerge":true,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/TestDrillSideways#testMultipleRequestsPerDim().mjava","pathOld":"lucene/facet/src/test/org/apache/lucene/facet/TestDrillSideways#testMultipleRequestsPerDim().mjava","sourceNew":"  public void testMultipleRequestsPerDim() throws Exception {\n    Directory dir = newDirectory();\n    Directory taxoDir = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir);\n\n    // Writes facet ords to a separate directory from the\n    // main index:\n    DirectoryTaxonomyWriter taxoWriter = new DirectoryTaxonomyWriter(taxoDir, IndexWriterConfig.OpenMode.CREATE);\n\n    FacetsConfig config = new FacetsConfig();\n    config.setHierarchical(\"dim\", true);\n\n    Document doc = new Document();\n    doc.add(new FacetField(\"dim\", \"a\", \"x\"));\n    writer.addDocument(config.build(taxoWriter, doc));\n\n    doc = new Document();\n    doc.add(new FacetField(\"dim\", \"a\", \"y\"));\n    writer.addDocument(config.build(taxoWriter, doc));\n\n    doc = new Document();\n    doc.add(new FacetField(\"dim\", \"a\", \"z\"));\n    writer.addDocument(config.build(taxoWriter, doc));\n\n    doc = new Document();\n    doc.add(new FacetField(\"dim\", \"b\"));\n    writer.addDocument(config.build(taxoWriter, doc));\n\n    doc = new Document();\n    doc.add(new FacetField(\"dim\", \"c\"));\n    writer.addDocument(config.build(taxoWriter, doc));\n\n    doc = new Document();\n    doc.add(new FacetField(\"dim\", \"d\"));\n    writer.addDocument(config.build(taxoWriter, doc));\n\n    // NRT open\n    IndexSearcher searcher = getNewSearcher(writer.getReader());\n\n    //System.out.println(\"searcher=\" + searcher);\n\n    // NRT open\n    TaxonomyReader taxoReader = new DirectoryTaxonomyReader(taxoWriter);\n\n    DrillDownQuery ddq = new DrillDownQuery(config);\n    ddq.add(\"dim\", \"a\");\n    DrillSidewaysResult r = getNewDrillSideways(searcher, config, taxoReader).search(null, ddq, 10);\n\n    assertEquals(3, r.hits.totalHits.value);\n    assertEquals(\"dim=dim path=[] value=6 childCount=4\\n  a (3)\\n  b (1)\\n  c (1)\\n  d (1)\\n\",\n            r.facets.getTopChildren(10, \"dim\").toString());\n    assertEquals(\"dim=dim path=[a] value=3 childCount=3\\n  x (1)\\n  y (1)\\n  z (1)\\n\",\n            r.facets.getTopChildren(10, \"dim\", \"a\").toString());\n\n    writer.close();\n    IOUtils.close(searcher.getIndexReader(), taxoReader, taxoWriter, dir, taxoDir);\n  }\n\n","sourceOld":"  public void testMultipleRequestsPerDim() throws Exception {\n    Directory dir = newDirectory();\n    Directory taxoDir = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir);\n\n    // Writes facet ords to a separate directory from the\n    // main index:\n    DirectoryTaxonomyWriter taxoWriter = new DirectoryTaxonomyWriter(taxoDir, IndexWriterConfig.OpenMode.CREATE);\n\n    FacetsConfig config = new FacetsConfig();\n    config.setHierarchical(\"dim\", true);\n\n    Document doc = new Document();\n    doc.add(new FacetField(\"dim\", \"a\", \"x\"));\n    writer.addDocument(config.build(taxoWriter, doc));\n\n    doc = new Document();\n    doc.add(new FacetField(\"dim\", \"a\", \"y\"));\n    writer.addDocument(config.build(taxoWriter, doc));\n\n    doc = new Document();\n    doc.add(new FacetField(\"dim\", \"a\", \"z\"));\n    writer.addDocument(config.build(taxoWriter, doc));\n\n    doc = new Document();\n    doc.add(new FacetField(\"dim\", \"b\"));\n    writer.addDocument(config.build(taxoWriter, doc));\n\n    doc = new Document();\n    doc.add(new FacetField(\"dim\", \"c\"));\n    writer.addDocument(config.build(taxoWriter, doc));\n\n    doc = new Document();\n    doc.add(new FacetField(\"dim\", \"d\"));\n    writer.addDocument(config.build(taxoWriter, doc));\n\n    // NRT open\n    IndexSearcher searcher = newSearcher(writer.getReader());\n\n    //System.out.println(\"searcher=\" + searcher);\n\n    // NRT open\n    TaxonomyReader taxoReader = new DirectoryTaxonomyReader(taxoWriter);\n\n    DrillDownQuery ddq = new DrillDownQuery(config);\n    ddq.add(\"dim\", \"a\");\n    DrillSidewaysResult r = getNewDrillSideways(searcher, config, taxoReader).search(null, ddq, 10);\n\n    assertEquals(3, r.hits.totalHits.value);\n    assertEquals(\"dim=dim path=[] value=6 childCount=4\\n  a (3)\\n  b (1)\\n  c (1)\\n  d (1)\\n\",\n            r.facets.getTopChildren(10, \"dim\").toString());\n    assertEquals(\"dim=dim path=[a] value=3 childCount=3\\n  x (1)\\n  y (1)\\n  z (1)\\n\",\n            r.facets.getTopChildren(10, \"dim\", \"a\").toString());\n\n    writer.close();\n    IOUtils.close(searcher.getIndexReader(), taxoReader, taxoWriter, dir, taxoDir);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"56d44586f4c409c6c6c5942b9f0227df806b7300":["fd83550e4b0bdd36e7d9dca9273264100782440b"],"91eb857a56b1a3a6659c666f88e2398347fc1c5a":["d0ef034a4f10871667ae75181537775ddcf8ade4"],"f03e4bed5023ec3ef93a771b8888cae991cf448d":["d0ef034a4f10871667ae75181537775ddcf8ade4","91eb857a56b1a3a6659c666f88e2398347fc1c5a"],"132e4d2b791f182f095041c89860f21eb11c31a5":["83788ad129a5154d5c6562c4e8ce3db48793aada"],"680b6449f09827f58fe987aff279e014c311d966":["83788ad129a5154d5c6562c4e8ce3db48793aada","132e4d2b791f182f095041c89860f21eb11c31a5"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"d0ef034a4f10871667ae75181537775ddcf8ade4":["ae14298f4eec6d5faee6a149f88ba57d14a6f21a"],"21d36d0db865f7b84026b447bec653469a6e66df":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"fd83550e4b0bdd36e7d9dca9273264100782440b":["21d36d0db865f7b84026b447bec653469a6e66df"],"ae14298f4eec6d5faee6a149f88ba57d14a6f21a":["3cc728b07df73b197e6d940d27f9b08b63918f13"],"3cc728b07df73b197e6d940d27f9b08b63918f13":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","56d44586f4c409c6c6c5942b9f0227df806b7300"],"83788ad129a5154d5c6562c4e8ce3db48793aada":["91eb857a56b1a3a6659c666f88e2398347fc1c5a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["680b6449f09827f58fe987aff279e014c311d966"]},"commit2Childs":{"56d44586f4c409c6c6c5942b9f0227df806b7300":["3cc728b07df73b197e6d940d27f9b08b63918f13"],"91eb857a56b1a3a6659c666f88e2398347fc1c5a":["f03e4bed5023ec3ef93a771b8888cae991cf448d","83788ad129a5154d5c6562c4e8ce3db48793aada"],"f03e4bed5023ec3ef93a771b8888cae991cf448d":[],"132e4d2b791f182f095041c89860f21eb11c31a5":["680b6449f09827f58fe987aff279e014c311d966"],"680b6449f09827f58fe987aff279e014c311d966":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["21d36d0db865f7b84026b447bec653469a6e66df","3cc728b07df73b197e6d940d27f9b08b63918f13"],"d0ef034a4f10871667ae75181537775ddcf8ade4":["91eb857a56b1a3a6659c666f88e2398347fc1c5a","f03e4bed5023ec3ef93a771b8888cae991cf448d"],"21d36d0db865f7b84026b447bec653469a6e66df":["fd83550e4b0bdd36e7d9dca9273264100782440b"],"fd83550e4b0bdd36e7d9dca9273264100782440b":["56d44586f4c409c6c6c5942b9f0227df806b7300"],"ae14298f4eec6d5faee6a149f88ba57d14a6f21a":["d0ef034a4f10871667ae75181537775ddcf8ade4"],"3cc728b07df73b197e6d940d27f9b08b63918f13":["ae14298f4eec6d5faee6a149f88ba57d14a6f21a"],"83788ad129a5154d5c6562c4e8ce3db48793aada":["132e4d2b791f182f095041c89860f21eb11c31a5","680b6449f09827f58fe987aff279e014c311d966"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["f03e4bed5023ec3ef93a771b8888cae991cf448d","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}