{"path":"contrib/snowball/src/java/net/sf/snowball/ext/PorterStemmer#r_Step_5a().mjava","commits":[{"id":"043c298cb215f13ba7b9b81d20760704e8f93d66","date":1107566743,"type":1,"author":"Erik Hatcher","isMerge":false,"pathNew":"contrib/snowball/src/java/net/sf/snowball/ext/PorterStemmer#r_Step_5a().mjava","pathOld":"sandbox/contributions/snowball/src/java/net/sf/snowball/ext/PorterStemmer#r_Step_5a().mjava","sourceNew":"        private boolean r_Step_5a() {\n            int v_1;\n            int v_2;\n            // (, line 100\n            // [, line 101\n            ket = cursor;\n            // literal, line 101\n            if (!(eq_s_b(1, \"e\")))\n            {\n                return false;\n            }\n            // ], line 101\n            bra = cursor;\n            // or, line 102\n            lab0: do {\n                v_1 = limit - cursor;\n                lab1: do {\n                    // call R2, line 102\n                    if (!r_R2())\n                    {\n                        break lab1;\n                    }\n                    break lab0;\n                } while (false);\n                cursor = limit - v_1;\n                // (, line 102\n                // call R1, line 102\n                if (!r_R1())\n                {\n                    return false;\n                }\n                // not, line 102\n                {\n                    v_2 = limit - cursor;\n                    lab2: do {\n                        // call shortv, line 102\n                        if (!r_shortv())\n                        {\n                            break lab2;\n                        }\n                        return false;\n                    } while (false);\n                    cursor = limit - v_2;\n                }\n            } while (false);\n            // delete, line 103\n            slice_del();\n            return true;\n        }\n\n","sourceOld":"        private boolean r_Step_5a() {\n            int v_1;\n            int v_2;\n            // (, line 100\n            // [, line 101\n            ket = cursor;\n            // literal, line 101\n            if (!(eq_s_b(1, \"e\")))\n            {\n                return false;\n            }\n            // ], line 101\n            bra = cursor;\n            // or, line 102\n            lab0: do {\n                v_1 = limit - cursor;\n                lab1: do {\n                    // call R2, line 102\n                    if (!r_R2())\n                    {\n                        break lab1;\n                    }\n                    break lab0;\n                } while (false);\n                cursor = limit - v_1;\n                // (, line 102\n                // call R1, line 102\n                if (!r_R1())\n                {\n                    return false;\n                }\n                // not, line 102\n                {\n                    v_2 = limit - cursor;\n                    lab2: do {\n                        // call shortv, line 102\n                        if (!r_shortv())\n                        {\n                            break lab2;\n                        }\n                        return false;\n                    } while (false);\n                    cursor = limit - v_2;\n                }\n            } while (false);\n            // delete, line 103\n            slice_del();\n            return true;\n        }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b62da6a75575f59a016a076b4753dc6e20c74b44","date":1219528967,"type":5,"author":"Karl-Johan Wettin","isMerge":false,"pathNew":"contrib/snowball/src/java/org/tartarus/snowball/ext/PorterStemmer#r_Step_5a().mjava","pathOld":"contrib/snowball/src/java/net/sf/snowball/ext/PorterStemmer#r_Step_5a().mjava","sourceNew":"        private boolean r_Step_5a() {\n            int v_1;\n            int v_2;\n            // (, line 100\n            // [, line 101\n            ket = cursor;\n            // literal, line 101\n            if (!(eq_s_b(1, \"e\")))\n            {\n                return false;\n            }\n            // ], line 101\n            bra = cursor;\n            // or, line 102\n            lab0: do {\n                v_1 = limit - cursor;\n                lab1: do {\n                    // call R2, line 102\n                    if (!r_R2())\n                    {\n                        break lab1;\n                    }\n                    break lab0;\n                } while (false);\n                cursor = limit - v_1;\n                // (, line 102\n                // call R1, line 102\n                if (!r_R1())\n                {\n                    return false;\n                }\n                // not, line 102\n                {\n                    v_2 = limit - cursor;\n                    lab2: do {\n                        // call shortv, line 102\n                        if (!r_shortv())\n                        {\n                            break lab2;\n                        }\n                        return false;\n                    } while (false);\n                    cursor = limit - v_2;\n                }\n            } while (false);\n            // delete, line 103\n            slice_del();\n            return true;\n        }\n\n","sourceOld":"        private boolean r_Step_5a() {\n            int v_1;\n            int v_2;\n            // (, line 100\n            // [, line 101\n            ket = cursor;\n            // literal, line 101\n            if (!(eq_s_b(1, \"e\")))\n            {\n                return false;\n            }\n            // ], line 101\n            bra = cursor;\n            // or, line 102\n            lab0: do {\n                v_1 = limit - cursor;\n                lab1: do {\n                    // call R2, line 102\n                    if (!r_R2())\n                    {\n                        break lab1;\n                    }\n                    break lab0;\n                } while (false);\n                cursor = limit - v_1;\n                // (, line 102\n                // call R1, line 102\n                if (!r_R1())\n                {\n                    return false;\n                }\n                // not, line 102\n                {\n                    v_2 = limit - cursor;\n                    lab2: do {\n                        // call shortv, line 102\n                        if (!r_shortv())\n                        {\n                            break lab2;\n                        }\n                        return false;\n                    } while (false);\n                    cursor = limit - v_2;\n                }\n            } while (false);\n            // delete, line 103\n            slice_del();\n            return true;\n        }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b62da6a75575f59a016a076b4753dc6e20c74b44":["043c298cb215f13ba7b9b81d20760704e8f93d66"],"043c298cb215f13ba7b9b81d20760704e8f93d66":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b62da6a75575f59a016a076b4753dc6e20c74b44"]},"commit2Childs":{"b62da6a75575f59a016a076b4753dc6e20c74b44":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"043c298cb215f13ba7b9b81d20760704e8f93d66":["b62da6a75575f59a016a076b4753dc6e20c74b44"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["043c298cb215f13ba7b9b81d20760704e8f93d66"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}