{"path":"src/java/org/apache/solr/search/QueryParsing.StrParser#getId().mjava","commits":[{"id":"0c3e228bf650e96f3002a8fb73dd0c13d55af077","date":1138253849,"type":0,"author":"Yonik Seeley","isMerge":false,"pathNew":"src/java/org/apache/solr/search/QueryParsing.StrParser#getId().mjava","pathOld":"/dev/null","sourceNew":"    String getId() throws ParseException {\n      eatws();\n      int id_start=pos;\n      while (pos<end && Character.isJavaIdentifierPart(val.charAt(pos))) pos++;\n      return val.substring(id_start, pos);\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"66ab3886c1d845c59c9e5b23b2fb247b927db498","date":1193060587,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"src/java/org/apache/solr/search/QueryParsing.StrParser#getId().mjava","pathOld":"src/java/org/apache/solr/search/QueryParsing.StrParser#getId().mjava","sourceNew":"    String getId() throws ParseException {\n      eatws();\n      int id_start=pos;\n      if (pos<end && Character.isJavaIdentifierStart(val.charAt(pos))) {\n        pos++;\n        while (pos<end) {\n          char ch = val.charAt(pos);\n          if (!Character.isJavaIdentifierPart(ch) && ch!='.') {\n            break;\n          }\n          pos++;\n        }\n        return val.substring(id_start, pos);\n      }\n      throw new ParseException(\"Expected identifier at pos \" + pos + \" str='\" + val + \"'\");\n    }\n\n","sourceOld":"    String getId() throws ParseException {\n      eatws();\n      int id_start=pos;\n      while (pos<end && Character.isJavaIdentifierPart(val.charAt(pos))) pos++;\n      return val.substring(id_start, pos);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"32ef722831135736529762b4b97a13dd58b06f66","date":1260567610,"type":3,"author":"Grant Ingersoll","isMerge":false,"pathNew":"src/java/org/apache/solr/search/QueryParsing.StrParser#getId().mjava","pathOld":"src/java/org/apache/solr/search/QueryParsing.StrParser#getId().mjava","sourceNew":"    String getId() throws ParseException {\n      eatws();\n      int id_start = pos;\n      if (pos < end && Character.isJavaIdentifierStart(val.charAt(pos))) {\n        pos++;\n        while (pos < end) {\n          char ch = val.charAt(pos);\n          if (!Character.isJavaIdentifierPart(ch) && ch != '.') {\n            break;\n          }\n          pos++;\n        }\n        return val.substring(id_start, pos);\n      }\n      throw new ParseException(\"Expected identifier at pos \" + pos + \" str='\" + val + \"'\");\n    }\n\n","sourceOld":"    String getId() throws ParseException {\n      eatws();\n      int id_start=pos;\n      if (pos<end && Character.isJavaIdentifierStart(val.charAt(pos))) {\n        pos++;\n        while (pos<end) {\n          char ch = val.charAt(pos);\n          if (!Character.isJavaIdentifierPart(ch) && ch!='.') {\n            break;\n          }\n          pos++;\n        }\n        return val.substring(id_start, pos);\n      }\n      throw new ParseException(\"Expected identifier at pos \" + pos + \" str='\" + val + \"'\");\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ad94625fb8d088209f46650c8097196fec67f00c","date":1453508319,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/src/java/org/apache/solr/search/QueryParsing.StrParser#getId().mjava","pathOld":"src/java/org/apache/solr/search/QueryParsing.StrParser#getId().mjava","sourceNew":"    String getId() throws ParseException {\n      eatws();\n      int id_start = pos;\n      if (pos < end && Character.isJavaIdentifierStart(val.charAt(pos))) {\n        pos++;\n        while (pos < end) {\n          char ch = val.charAt(pos);\n          if (!Character.isJavaIdentifierPart(ch) && ch != '.') {\n            break;\n          }\n          pos++;\n        }\n        return val.substring(id_start, pos);\n      }\n      throw new ParseException(\"Expected identifier at pos \" + pos + \" str='\" + val + \"'\");\n    }\n\n","sourceOld":"    String getId() throws ParseException {\n      eatws();\n      int id_start = pos;\n      if (pos < end && Character.isJavaIdentifierStart(val.charAt(pos))) {\n        pos++;\n        while (pos < end) {\n          char ch = val.charAt(pos);\n          if (!Character.isJavaIdentifierPart(ch) && ch != '.') {\n            break;\n          }\n          pos++;\n        }\n        return val.substring(id_start, pos);\n      }\n      throw new ParseException(\"Expected identifier at pos \" + pos + \" str='\" + val + \"'\");\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"0c3e228bf650e96f3002a8fb73dd0c13d55af077":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"66ab3886c1d845c59c9e5b23b2fb247b927db498":["0c3e228bf650e96f3002a8fb73dd0c13d55af077"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"32ef722831135736529762b4b97a13dd58b06f66":["66ab3886c1d845c59c9e5b23b2fb247b927db498"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"ad94625fb8d088209f46650c8097196fec67f00c":["32ef722831135736529762b4b97a13dd58b06f66"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"0c3e228bf650e96f3002a8fb73dd0c13d55af077":["66ab3886c1d845c59c9e5b23b2fb247b927db498"],"66ab3886c1d845c59c9e5b23b2fb247b927db498":["32ef722831135736529762b4b97a13dd58b06f66"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["0c3e228bf650e96f3002a8fb73dd0c13d55af077"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"32ef722831135736529762b4b97a13dd58b06f66":["ad94625fb8d088209f46650c8097196fec67f00c"],"ad94625fb8d088209f46650c8097196fec67f00c":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["ad94625fb8d088209f46650c8097196fec67f00c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b","a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}