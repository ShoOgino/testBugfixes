{"path":"lucene/facet/src/java/org/apache/lucene/facet/taxonomy/TaxonomyMergeUtils#merge(Directory,Directory,OrdinalMap,IndexWriter,DirectoryTaxonomyWriter).mjava","commits":[{"id":"8bc40adb64449806b9414b240913b974b69ade73","date":1404384579,"type":0,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/taxonomy/TaxonomyMergeUtils#merge(Directory,Directory,OrdinalMap,IndexWriter,DirectoryTaxonomyWriter).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Merges the given taxonomy and index directories and commits the changes to\n   * the given writers.\n   */\n  public static void merge(Directory srcIndexDir, Directory srcTaxDir, OrdinalMap map, IndexWriter destIndexWriter, \n      DirectoryTaxonomyWriter destTaxWriter) throws IOException {\n    \n    // merge the taxonomies\n    destTaxWriter.addTaxonomy(srcTaxDir, map);\n    int ordinalMap[] = map.getMap();\n    DirectoryReader reader = DirectoryReader.open(srcIndexDir);\n    List<AtomicReaderContext> leaves = reader.leaves();\n    int numReaders = leaves.size();\n    AtomicReader wrappedLeaves[] = new AtomicReader[numReaders];\n    for (int i = 0; i < numReaders; i++) {\n      wrappedLeaves[i] = new OrdinalMappingAtomicReader(leaves.get(i).reader(), ordinalMap);\n    }\n    try {\n      destIndexWriter.addIndexes(new MultiReader(wrappedLeaves));\n      \n      // commit changes to taxonomy and index respectively.\n      destTaxWriter.commit();\n      destIndexWriter.commit();\n    } finally {\n      reader.close();\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["0fa3fa46c67543546ab45142cc8ee7cf34fc9aaa"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"eea8c27c2188d3e8ca3bf2d389f1038806956abd","date":1404444860,"type":3,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/taxonomy/TaxonomyMergeUtils#merge(Directory,Directory,OrdinalMap,IndexWriter,DirectoryTaxonomyWriter).mjava","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/taxonomy/TaxonomyMergeUtils#merge(Directory,Directory,OrdinalMap,IndexWriter,DirectoryTaxonomyWriter).mjava","sourceNew":"  /**\n   * Merges the given taxonomy and index directories and commits the changes to\n   * the given writers.\n   */\n  public static void merge(Directory srcIndexDir, Directory srcTaxoDir, OrdinalMap map, IndexWriter destIndexWriter,\n      DirectoryTaxonomyWriter destTaxoWriter) throws IOException {\n    \n    // merge the taxonomies\n    destTaxoWriter.addTaxonomy(srcTaxoDir, map);\n    int ordinalMap[] = map.getMap();\n    DirectoryReader reader = DirectoryReader.open(srcIndexDir);\n    try {\n      List<AtomicReaderContext> leaves = reader.leaves();\n      int numReaders = leaves.size();\n      AtomicReader wrappedLeaves[] = new AtomicReader[numReaders];\n      for (int i = 0; i < numReaders; i++) {\n        wrappedLeaves[i] = new OrdinalMappingAtomicReader(leaves.get(i).reader(), ordinalMap);\n      }\n      destIndexWriter.addIndexes(new MultiReader(wrappedLeaves));\n      \n      // commit changes to taxonomy and index respectively.\n      destTaxoWriter.commit();\n      destIndexWriter.commit();\n    } finally {\n      reader.close();\n    }\n  }\n\n","sourceOld":"  /**\n   * Merges the given taxonomy and index directories and commits the changes to\n   * the given writers.\n   */\n  public static void merge(Directory srcIndexDir, Directory srcTaxDir, OrdinalMap map, IndexWriter destIndexWriter, \n      DirectoryTaxonomyWriter destTaxWriter) throws IOException {\n    \n    // merge the taxonomies\n    destTaxWriter.addTaxonomy(srcTaxDir, map);\n    int ordinalMap[] = map.getMap();\n    DirectoryReader reader = DirectoryReader.open(srcIndexDir);\n    List<AtomicReaderContext> leaves = reader.leaves();\n    int numReaders = leaves.size();\n    AtomicReader wrappedLeaves[] = new AtomicReader[numReaders];\n    for (int i = 0; i < numReaders; i++) {\n      wrappedLeaves[i] = new OrdinalMappingAtomicReader(leaves.get(i).reader(), ordinalMap);\n    }\n    try {\n      destIndexWriter.addIndexes(new MultiReader(wrappedLeaves));\n      \n      // commit changes to taxonomy and index respectively.\n      destTaxWriter.commit();\n      destIndexWriter.commit();\n    } finally {\n      reader.close();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"da07b17df48cd6809d50473d39ce15f3c54a7773","date":1405858094,"type":5,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/taxonomy/TaxonomyMergeUtils#merge(Directory,Directory,OrdinalMap,IndexWriter,DirectoryTaxonomyWriter,FacetsConfig).mjava","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/taxonomy/TaxonomyMergeUtils#merge(Directory,Directory,OrdinalMap,IndexWriter,DirectoryTaxonomyWriter).mjava","sourceNew":"  /**\n   * Merges the given taxonomy and index directories and commits the changes to\n   * the given writers.\n   */\n  public static void merge(Directory srcIndexDir, Directory srcTaxoDir, OrdinalMap map, IndexWriter destIndexWriter,\n      DirectoryTaxonomyWriter destTaxoWriter, FacetsConfig srcConfig) throws IOException {\n    \n    // merge the taxonomies\n    destTaxoWriter.addTaxonomy(srcTaxoDir, map);\n    int ordinalMap[] = map.getMap();\n    DirectoryReader reader = DirectoryReader.open(srcIndexDir);\n    try {\n      List<AtomicReaderContext> leaves = reader.leaves();\n      int numReaders = leaves.size();\n      AtomicReader wrappedLeaves[] = new AtomicReader[numReaders];\n      for (int i = 0; i < numReaders; i++) {\n        wrappedLeaves[i] = new OrdinalMappingAtomicReader(leaves.get(i).reader(), ordinalMap, srcConfig);\n      }\n      destIndexWriter.addIndexes(new MultiReader(wrappedLeaves));\n      \n      // commit changes to taxonomy and index respectively.\n      destTaxoWriter.commit();\n      destIndexWriter.commit();\n    } finally {\n      reader.close();\n    }\n  }\n\n","sourceOld":"  /**\n   * Merges the given taxonomy and index directories and commits the changes to\n   * the given writers.\n   */\n  public static void merge(Directory srcIndexDir, Directory srcTaxoDir, OrdinalMap map, IndexWriter destIndexWriter,\n      DirectoryTaxonomyWriter destTaxoWriter) throws IOException {\n    \n    // merge the taxonomies\n    destTaxoWriter.addTaxonomy(srcTaxoDir, map);\n    int ordinalMap[] = map.getMap();\n    DirectoryReader reader = DirectoryReader.open(srcIndexDir);\n    try {\n      List<AtomicReaderContext> leaves = reader.leaves();\n      int numReaders = leaves.size();\n      AtomicReader wrappedLeaves[] = new AtomicReader[numReaders];\n      for (int i = 0; i < numReaders; i++) {\n        wrappedLeaves[i] = new OrdinalMappingAtomicReader(leaves.get(i).reader(), ordinalMap);\n      }\n      destIndexWriter.addIndexes(new MultiReader(wrappedLeaves));\n      \n      // commit changes to taxonomy and index respectively.\n      destTaxoWriter.commit();\n      destIndexWriter.commit();\n    } finally {\n      reader.close();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"da07b17df48cd6809d50473d39ce15f3c54a7773":["eea8c27c2188d3e8ca3bf2d389f1038806956abd"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"eea8c27c2188d3e8ca3bf2d389f1038806956abd":["8bc40adb64449806b9414b240913b974b69ade73"],"8bc40adb64449806b9414b240913b974b69ade73":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["da07b17df48cd6809d50473d39ce15f3c54a7773"]},"commit2Childs":{"da07b17df48cd6809d50473d39ce15f3c54a7773":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["8bc40adb64449806b9414b240913b974b69ade73"],"eea8c27c2188d3e8ca3bf2d389f1038806956abd":["da07b17df48cd6809d50473d39ce15f3c54a7773"],"8bc40adb64449806b9414b240913b974b69ade73":["eea8c27c2188d3e8ca3bf2d389f1038806956abd"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}