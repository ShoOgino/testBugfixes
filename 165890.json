{"path":"lucene/contrib/analyzers/common/src/java/org/apache/lucene/analysis/commongrams/CommonGramsFilter#CommonGramsFilter(TokenStream,String[],boolean).mjava","commits":[{"id":"116545389190ea5d0d9a35977d09ef0fe49716ac","date":1272959441,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/contrib/analyzers/common/src/java/org/apache/lucene/analysis/commongrams/CommonGramsFilter#CommonGramsFilter(TokenStream,String[],boolean).mjava","pathOld":"solr/src/java/org/apache/solr/analysis/CommonGramsFilter#CommonGramsFilter(TokenStream,String[],boolean).mjava","sourceNew":"  /**\n   * Construct a token stream filtering the given input using an Array of common\n   * words to create bigrams and is case-sensitive if ignoreCase is false.\n   * \n   * @param input Tokenstream in filter chain\n   * @param commonWords words to be used in constructing bigrams\n   * @param ignoreCase -Ignore case when constructing bigrams for common words.\n   * @deprecated Use {@link #CommonGramsFilter(Version, TokenStream, Set, boolean)} instead.\n   */\n  @Deprecated\n  public CommonGramsFilter(TokenStream input, String[] commonWords, boolean ignoreCase) {\n    super(input);\n    this.commonWords = makeCommonSet(commonWords, ignoreCase);\n  }\n\n","sourceOld":"  /**\n   * Construct a token stream filtering the given input using an Array of common\n   * words to create bigrams and is case-sensitive if ignoreCase is false.\n   * \n   * @param input Tokenstream in filter chain\n   * @param commonWords words to be used in constructing bigrams\n   * @param ignoreCase -Ignore case when constructing bigrams for common words.\n   * @deprecated Use {@link #CommonGramsFilter(Version, TokenStream, Set, boolean)} instead.\n   */\n  @Deprecated\n  public CommonGramsFilter(TokenStream input, String[] commonWords, boolean ignoreCase) {\n    super(input);\n    this.commonWords = makeCommonSet(commonWords, ignoreCase);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0f080986da691a3bba7b757f43ab72cdc82b57ce","date":1273069619,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"modules/analysis/common/src/java/org/apache/lucene/analysis/commongrams/CommonGramsFilter#CommonGramsFilter(TokenStream,String[],boolean).mjava","pathOld":"lucene/contrib/analyzers/common/src/java/org/apache/lucene/analysis/commongrams/CommonGramsFilter#CommonGramsFilter(TokenStream,String[],boolean).mjava","sourceNew":"  /**\n   * Construct a token stream filtering the given input using an Array of common\n   * words to create bigrams and is case-sensitive if ignoreCase is false.\n   * \n   * @param input Tokenstream in filter chain\n   * @param commonWords words to be used in constructing bigrams\n   * @param ignoreCase -Ignore case when constructing bigrams for common words.\n   * @deprecated Use {@link #CommonGramsFilter(Version, TokenStream, Set, boolean)} instead.\n   */\n  @Deprecated\n  public CommonGramsFilter(TokenStream input, String[] commonWords, boolean ignoreCase) {\n    super(input);\n    this.commonWords = makeCommonSet(commonWords, ignoreCase);\n  }\n\n","sourceOld":"  /**\n   * Construct a token stream filtering the given input using an Array of common\n   * words to create bigrams and is case-sensitive if ignoreCase is false.\n   * \n   * @param input Tokenstream in filter chain\n   * @param commonWords words to be used in constructing bigrams\n   * @param ignoreCase -Ignore case when constructing bigrams for common words.\n   * @deprecated Use {@link #CommonGramsFilter(Version, TokenStream, Set, boolean)} instead.\n   */\n  @Deprecated\n  public CommonGramsFilter(TokenStream input, String[] commonWords, boolean ignoreCase) {\n    super(input);\n    this.commonWords = makeCommonSet(commonWords, ignoreCase);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"116545389190ea5d0d9a35977d09ef0fe49716ac":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"0f080986da691a3bba7b757f43ab72cdc82b57ce":["116545389190ea5d0d9a35977d09ef0fe49716ac"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["0f080986da691a3bba7b757f43ab72cdc82b57ce"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["116545389190ea5d0d9a35977d09ef0fe49716ac"],"116545389190ea5d0d9a35977d09ef0fe49716ac":["0f080986da691a3bba7b757f43ab72cdc82b57ce"],"0f080986da691a3bba7b757f43ab72cdc82b57ce":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}