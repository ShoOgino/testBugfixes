{"path":"lucene/core/src/java/org/apache/lucene/index/SegmentInfo#loadFieldInfos(Directory,boolean).mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/SegmentInfo#loadFieldInfos(Directory,boolean).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/SegmentInfo#loadFieldInfos(Directory,boolean).mjava","sourceNew":"  synchronized void loadFieldInfos(Directory dir, boolean checkCompoundFile) throws IOException {\n    if (fieldInfos == null) {\n      Directory dir0 = dir;\n      if (isCompoundFile && checkCompoundFile) {\n        dir0 = new CompoundFileDirectory(dir, IndexFileNames.segmentFileName(name,\n            \"\", IndexFileNames.COMPOUND_FILE_EXTENSION), IOContext.READONCE, false);\n      }\n      try {\n        FieldInfosReader reader = codec.fieldInfosFormat().getFieldInfosReader();\n        fieldInfos = reader.read(dir0, name, IOContext.READONCE);\n      } finally {\n        if (dir != dir0) {\n          dir0.close();\n        }\n      }\n    }\n  }\n\n","sourceOld":"  synchronized void loadFieldInfos(Directory dir, boolean checkCompoundFile) throws IOException {\n    if (fieldInfos == null) {\n      Directory dir0 = dir;\n      if (isCompoundFile && checkCompoundFile) {\n        dir0 = new CompoundFileDirectory(dir, IndexFileNames.segmentFileName(name,\n            \"\", IndexFileNames.COMPOUND_FILE_EXTENSION), IOContext.READONCE, false);\n      }\n      try {\n        FieldInfosReader reader = codec.fieldInfosFormat().getFieldInfosReader();\n        fieldInfos = reader.read(dir0, name, IOContext.READONCE);\n      } finally {\n        if (dir != dir0) {\n          dir0.close();\n        }\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d2dee33619431ada2a7a07f5fe2dbd94bac6a460","date":1337274029,"type":4,"author":"Michael McCandless","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/index/SegmentInfo#loadFieldInfos(Directory,boolean).mjava","sourceNew":null,"sourceOld":"  synchronized void loadFieldInfos(Directory dir, boolean checkCompoundFile) throws IOException {\n    if (fieldInfos == null) {\n      Directory dir0 = dir;\n      if (isCompoundFile && checkCompoundFile) {\n        dir0 = new CompoundFileDirectory(dir, IndexFileNames.segmentFileName(name,\n            \"\", IndexFileNames.COMPOUND_FILE_EXTENSION), IOContext.READONCE, false);\n      }\n      try {\n        FieldInfosReader reader = codec.fieldInfosFormat().getFieldInfosReader();\n        fieldInfos = reader.read(dir0, name, IOContext.READONCE);\n      } finally {\n        if (dir != dir0) {\n          dir0.close();\n        }\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"615ddbd81799980d0fdd95e0238e1c498b6f47b0","date":1338233290,"type":4,"author":"Robert Muir","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/index/SegmentInfo#loadFieldInfos(Directory,boolean).mjava","sourceNew":null,"sourceOld":"  synchronized void loadFieldInfos(Directory dir, boolean checkCompoundFile) throws IOException {\n    if (fieldInfos == null) {\n      Directory dir0 = dir;\n      if (isCompoundFile && checkCompoundFile) {\n        dir0 = new CompoundFileDirectory(dir, IndexFileNames.segmentFileName(name,\n            \"\", IndexFileNames.COMPOUND_FILE_EXTENSION), IOContext.READONCE, false);\n      }\n      try {\n        FieldInfosReader reader = codec.fieldInfosFormat().getFieldInfosReader();\n        fieldInfos = reader.read(dir0, name, IOContext.READONCE);\n      } finally {\n        if (dir != dir0) {\n          dir0.close();\n        }\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"d2dee33619431ada2a7a07f5fe2dbd94bac6a460":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"615ddbd81799980d0fdd95e0238e1c498b6f47b0":["3a119bbc8703c10faa329ec201c654b3a35a1e3e","d2dee33619431ada2a7a07f5fe2dbd94bac6a460"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["615ddbd81799980d0fdd95e0238e1c498b6f47b0"]},"commit2Childs":{"d2dee33619431ada2a7a07f5fe2dbd94bac6a460":["615ddbd81799980d0fdd95e0238e1c498b6f47b0"],"615ddbd81799980d0fdd95e0238e1c498b6f47b0":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["d2dee33619431ada2a7a07f5fe2dbd94bac6a460","615ddbd81799980d0fdd95e0238e1c498b6f47b0"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}