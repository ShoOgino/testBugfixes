{"path":"lucene/core/src/java/org/apache/lucene/search/PointInSetQuery#toString(byte[]).mjava","commits":[{"id":"321ec990395a1d617f3097ce37d74fdfab56b34f","date":1456265570,"type":0,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/PointInSetQuery#toString(byte[]).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Returns a string of a single value in a human-readable format for debugging.\n   * This is used by {@link #toString()}.\n   *\n   * The default implementation encodes the individual byte values.\n   *\n   * @param value single value, never null\n   * @return human readable value for debugging\n   */\n  protected String toString(byte[] value) {\n    assert value != null;\n    StringBuilder sb = new StringBuilder();\n    sb.append(\"binary(\");\n    for (int i = 0; i < value.length; i++) {\n      if (i > 0) {\n        sb.append(' ');\n      }\n      sb.append(Integer.toHexString(value[i] & 0xFF));\n    }\n    sb.append(')');\n    return sb.toString();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"868f63baffb79407d4b49f3c0be8dc4725ffc6e1","date":1456423715,"type":0,"author":"Mike McCandless","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/search/PointInSetQuery#toString(byte[]).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Returns a string of a single value in a human-readable format for debugging.\n   * This is used by {@link #toString()}.\n   *\n   * The default implementation encodes the individual byte values.\n   *\n   * @param value single value, never null\n   * @return human readable value for debugging\n   */\n  protected String toString(byte[] value) {\n    assert value != null;\n    StringBuilder sb = new StringBuilder();\n    sb.append(\"binary(\");\n    for (int i = 0; i < value.length; i++) {\n      if (i > 0) {\n        sb.append(' ');\n      }\n      sb.append(Integer.toHexString(value[i] & 0xFF));\n    }\n    sb.append(')');\n    return sb.toString();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"12b53ecc8c96eda774de891182d2275d981caf78","date":1456536351,"type":3,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/PointInSetQuery#toString(byte[]).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/PointInSetQuery#toString(byte[]).mjava","sourceNew":"  /**\n   * Returns a string of a single value in a human-readable format for debugging.\n   * This is used by {@link #toString()}.\n   *\n   * The default implementation encodes the individual byte values.\n   *\n   * @param value single value, never null\n   * @return human readable value for debugging\n   */\n  protected abstract String toString(byte[] value);\n\n","sourceOld":"  /**\n   * Returns a string of a single value in a human-readable format for debugging.\n   * This is used by {@link #toString()}.\n   *\n   * The default implementation encodes the individual byte values.\n   *\n   * @param value single value, never null\n   * @return human readable value for debugging\n   */\n  protected String toString(byte[] value) {\n    assert value != null;\n    StringBuilder sb = new StringBuilder();\n    sb.append(\"binary(\");\n    for (int i = 0; i < value.length; i++) {\n      if (i > 0) {\n        sb.append(' ');\n      }\n      sb.append(Integer.toHexString(value[i] & 0xFF));\n    }\n    sb.append(')');\n    return sb.toString();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"af2638813028b254a88b418ebeafb541afb49653","date":1456804822,"type":3,"author":"Noble Paul","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/search/PointInSetQuery#toString(byte[]).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/PointInSetQuery#toString(byte[]).mjava","sourceNew":"  /**\n   * Returns a string of a single value in a human-readable format for debugging.\n   * This is used by {@link #toString()}.\n   *\n   * The default implementation encodes the individual byte values.\n   *\n   * @param value single value, never null\n   * @return human readable value for debugging\n   */\n  protected abstract String toString(byte[] value);\n\n","sourceOld":"  /**\n   * Returns a string of a single value in a human-readable format for debugging.\n   * This is used by {@link #toString()}.\n   *\n   * The default implementation encodes the individual byte values.\n   *\n   * @param value single value, never null\n   * @return human readable value for debugging\n   */\n  protected String toString(byte[] value) {\n    assert value != null;\n    StringBuilder sb = new StringBuilder();\n    sb.append(\"binary(\");\n    for (int i = 0; i < value.length; i++) {\n      if (i > 0) {\n        sb.append(' ');\n      }\n      sb.append(Integer.toHexString(value[i] & 0xFF));\n    }\n    sb.append(')');\n    return sb.toString();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"af2638813028b254a88b418ebeafb541afb49653":["868f63baffb79407d4b49f3c0be8dc4725ffc6e1","12b53ecc8c96eda774de891182d2275d981caf78"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"868f63baffb79407d4b49f3c0be8dc4725ffc6e1":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","321ec990395a1d617f3097ce37d74fdfab56b34f"],"12b53ecc8c96eda774de891182d2275d981caf78":["868f63baffb79407d4b49f3c0be8dc4725ffc6e1"],"321ec990395a1d617f3097ce37d74fdfab56b34f":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["af2638813028b254a88b418ebeafb541afb49653"]},"commit2Childs":{"af2638813028b254a88b418ebeafb541afb49653":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"868f63baffb79407d4b49f3c0be8dc4725ffc6e1":["af2638813028b254a88b418ebeafb541afb49653","12b53ecc8c96eda774de891182d2275d981caf78"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["868f63baffb79407d4b49f3c0be8dc4725ffc6e1","321ec990395a1d617f3097ce37d74fdfab56b34f"],"12b53ecc8c96eda774de891182d2275d981caf78":["af2638813028b254a88b418ebeafb541afb49653"],"321ec990395a1d617f3097ce37d74fdfab56b34f":["868f63baffb79407d4b49f3c0be8dc4725ffc6e1"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}