{"path":"lucene/backward-codecs/src/java/org/apache/lucene/codecs/lucene41/Lucene41SkipReader#readSkipData(int,IndexInput).mjava","commits":[{"id":"99eb4a732d1a908f4636ace52928876136bf1896","date":1413829552,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/backward-codecs/src/java/org/apache/lucene/codecs/lucene41/Lucene41SkipReader#readSkipData(int,IndexInput).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/lucene41/Lucene41SkipReader#readSkipData(int,IndexInput).mjava","sourceNew":"  @Override\n  protected int readSkipData(int level, IndexInput skipStream) throws IOException {\n    // if (DEBUG) {\n    //   System.out.println(\"readSkipData level=\" + level);\n    // }\n    int delta = skipStream.readVInt();\n    // if (DEBUG) {\n    //   System.out.println(\"  delta=\" + delta);\n    // }\n    docPointer[level] += skipStream.readVInt();\n    // if (DEBUG) {\n    //   System.out.println(\"  docFP=\" + docPointer[level]);\n    // }\n\n    if (posPointer != null) {\n      posPointer[level] += skipStream.readVInt();\n      // if (DEBUG) {\n      //   System.out.println(\"  posFP=\" + posPointer[level]);\n      // }\n      posBufferUpto[level] = skipStream.readVInt();\n      // if (DEBUG) {\n      //   System.out.println(\"  posBufferUpto=\" + posBufferUpto[level]);\n      // }\n\n      if (payloadByteUpto != null) {\n        payloadByteUpto[level] = skipStream.readVInt();\n      }\n\n      if (payPointer != null) {\n        payPointer[level] += skipStream.readVInt();\n      }\n    }\n    return delta;\n  }\n\n","sourceOld":"  @Override\n  protected int readSkipData(int level, IndexInput skipStream) throws IOException {\n    // if (DEBUG) {\n    //   System.out.println(\"readSkipData level=\" + level);\n    // }\n    int delta = skipStream.readVInt();\n    // if (DEBUG) {\n    //   System.out.println(\"  delta=\" + delta);\n    // }\n    docPointer[level] += skipStream.readVInt();\n    // if (DEBUG) {\n    //   System.out.println(\"  docFP=\" + docPointer[level]);\n    // }\n\n    if (posPointer != null) {\n      posPointer[level] += skipStream.readVInt();\n      // if (DEBUG) {\n      //   System.out.println(\"  posFP=\" + posPointer[level]);\n      // }\n      posBufferUpto[level] = skipStream.readVInt();\n      // if (DEBUG) {\n      //   System.out.println(\"  posBufferUpto=\" + posBufferUpto[level]);\n      // }\n\n      if (payloadByteUpto != null) {\n        payloadByteUpto[level] = skipStream.readVInt();\n      }\n\n      if (payPointer != null) {\n        payPointer[level] += skipStream.readVInt();\n      }\n    }\n    return delta;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"db68c63cbfaa8698b9c4475f75ed2b9c9696d238","date":1414118621,"type":1,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/backward-codecs/src/java/org/apache/lucene/codecs/lucene41/Lucene41SkipReader#readSkipData(int,IndexInput).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/lucene41/Lucene41SkipReader#readSkipData(int,IndexInput).mjava","sourceNew":"  @Override\n  protected int readSkipData(int level, IndexInput skipStream) throws IOException {\n    // if (DEBUG) {\n    //   System.out.println(\"readSkipData level=\" + level);\n    // }\n    int delta = skipStream.readVInt();\n    // if (DEBUG) {\n    //   System.out.println(\"  delta=\" + delta);\n    // }\n    docPointer[level] += skipStream.readVInt();\n    // if (DEBUG) {\n    //   System.out.println(\"  docFP=\" + docPointer[level]);\n    // }\n\n    if (posPointer != null) {\n      posPointer[level] += skipStream.readVInt();\n      // if (DEBUG) {\n      //   System.out.println(\"  posFP=\" + posPointer[level]);\n      // }\n      posBufferUpto[level] = skipStream.readVInt();\n      // if (DEBUG) {\n      //   System.out.println(\"  posBufferUpto=\" + posBufferUpto[level]);\n      // }\n\n      if (payloadByteUpto != null) {\n        payloadByteUpto[level] = skipStream.readVInt();\n      }\n\n      if (payPointer != null) {\n        payPointer[level] += skipStream.readVInt();\n      }\n    }\n    return delta;\n  }\n\n","sourceOld":"  @Override\n  protected int readSkipData(int level, IndexInput skipStream) throws IOException {\n    // if (DEBUG) {\n    //   System.out.println(\"readSkipData level=\" + level);\n    // }\n    int delta = skipStream.readVInt();\n    // if (DEBUG) {\n    //   System.out.println(\"  delta=\" + delta);\n    // }\n    docPointer[level] += skipStream.readVInt();\n    // if (DEBUG) {\n    //   System.out.println(\"  docFP=\" + docPointer[level]);\n    // }\n\n    if (posPointer != null) {\n      posPointer[level] += skipStream.readVInt();\n      // if (DEBUG) {\n      //   System.out.println(\"  posFP=\" + posPointer[level]);\n      // }\n      posBufferUpto[level] = skipStream.readVInt();\n      // if (DEBUG) {\n      //   System.out.println(\"  posBufferUpto=\" + posBufferUpto[level]);\n      // }\n\n      if (payloadByteUpto != null) {\n        payloadByteUpto[level] = skipStream.readVInt();\n      }\n\n      if (payPointer != null) {\n        payPointer[level] += skipStream.readVInt();\n      }\n    }\n    return delta;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"71387d8cb6923eb831b17a8b734608ba2e21c653","date":1414126093,"type":4,"author":"Robert Muir","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/backward-codecs/src/java/org/apache/lucene/codecs/lucene41/Lucene41SkipReader#readSkipData(int,IndexInput).mjava","sourceNew":null,"sourceOld":"  @Override\n  protected int readSkipData(int level, IndexInput skipStream) throws IOException {\n    // if (DEBUG) {\n    //   System.out.println(\"readSkipData level=\" + level);\n    // }\n    int delta = skipStream.readVInt();\n    // if (DEBUG) {\n    //   System.out.println(\"  delta=\" + delta);\n    // }\n    docPointer[level] += skipStream.readVInt();\n    // if (DEBUG) {\n    //   System.out.println(\"  docFP=\" + docPointer[level]);\n    // }\n\n    if (posPointer != null) {\n      posPointer[level] += skipStream.readVInt();\n      // if (DEBUG) {\n      //   System.out.println(\"  posFP=\" + posPointer[level]);\n      // }\n      posBufferUpto[level] = skipStream.readVInt();\n      // if (DEBUG) {\n      //   System.out.println(\"  posBufferUpto=\" + posBufferUpto[level]);\n      // }\n\n      if (payloadByteUpto != null) {\n        payloadByteUpto[level] = skipStream.readVInt();\n      }\n\n      if (payPointer != null) {\n        payPointer[level] += skipStream.readVInt();\n      }\n    }\n    return delta;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"99eb4a732d1a908f4636ace52928876136bf1896":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"db68c63cbfaa8698b9c4475f75ed2b9c9696d238":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","99eb4a732d1a908f4636ace52928876136bf1896"],"71387d8cb6923eb831b17a8b734608ba2e21c653":["db68c63cbfaa8698b9c4475f75ed2b9c9696d238"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["71387d8cb6923eb831b17a8b734608ba2e21c653"]},"commit2Childs":{"99eb4a732d1a908f4636ace52928876136bf1896":["db68c63cbfaa8698b9c4475f75ed2b9c9696d238"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["99eb4a732d1a908f4636ace52928876136bf1896","db68c63cbfaa8698b9c4475f75ed2b9c9696d238"],"db68c63cbfaa8698b9c4475f75ed2b9c9696d238":["71387d8cb6923eb831b17a8b734608ba2e21c653"],"71387d8cb6923eb831b17a8b734608ba2e21c653":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}