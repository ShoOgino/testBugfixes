{"path":"solr/core/src/java/org/apache/solr/handler/component/ExpandComponent#getGroupQuery(String,FieldType,int,LongOpenHashSet).mjava","commits":[{"id":"8ced52befdc8d88d90766aadbaac496f3fd0e4ee","date":1421070034,"type":0,"author":"Joel Bernstein","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/component/ExpandComponent#getGroupQuery(String,FieldType,int,LongOpenHashSet).mjava","pathOld":"/dev/null","sourceNew":"  private Query getGroupQuery(String fname,\n                           FieldType ft,\n                           int size,\n                           LongOpenHashSet groupSet) {\n\n    BytesRef[] bytesRefs = new BytesRef[size];\n    BytesRefBuilder term = new BytesRefBuilder();\n    Iterator<LongCursor> it = groupSet.iterator();\n    int index = -1;\n    String stringVal =  null;\n    while (it.hasNext()) {\n      LongCursor cursor = it.next();\n      if(ft instanceof TrieIntField || ft instanceof TrieLongField) {\n        stringVal = Long.toString(cursor.value);\n      } else {\n        if(ft instanceof TrieFloatField) {\n          stringVal = Float.toString(Float.intBitsToFloat((int)cursor.value));\n        } else {\n          stringVal = Double.toString(Double.longBitsToDouble(cursor.value));\n        }\n      }\n      ft.readableToIndexed(stringVal, term);\n      bytesRefs[++index] = term.toBytesRef();\n    }\n\n    return new SolrConstantScoreQuery(new TermsFilter(fname, bytesRefs));\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c2042d3e27841c5b60112990fc33559e10ccf6dd","date":1424537395,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/component/ExpandComponent#getGroupQuery(String,FieldType,int,LongOpenHashSet).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/component/ExpandComponent#getGroupQuery(String,FieldType,int,LongOpenHashSet).mjava","sourceNew":"  private Query getGroupQuery(String fname,\n                           FieldType ft,\n                           int size,\n                           LongOpenHashSet groupSet) {\n\n    BytesRef[] bytesRefs = new BytesRef[size];\n    BytesRefBuilder term = new BytesRefBuilder();\n    Iterator<LongCursor> it = groupSet.iterator();\n    int index = -1;\n    String stringVal =  null;\n    while (it.hasNext()) {\n      LongCursor cursor = it.next();\n      if(ft instanceof TrieIntField || ft instanceof TrieLongField) {\n        stringVal = Long.toString(cursor.value);\n      } else {\n        if(ft instanceof TrieFloatField) {\n          stringVal = Float.toString(Float.intBitsToFloat((int)cursor.value));\n        } else {\n          stringVal = Double.toString(Double.longBitsToDouble(cursor.value));\n        }\n      }\n      ft.readableToIndexed(stringVal, term);\n      bytesRefs[++index] = term.toBytesRef();\n    }\n\n    return new SolrConstantScoreQuery(new QueryWrapperFilter(new TermsQuery(fname, bytesRefs)));\n  }\n\n","sourceOld":"  private Query getGroupQuery(String fname,\n                           FieldType ft,\n                           int size,\n                           LongOpenHashSet groupSet) {\n\n    BytesRef[] bytesRefs = new BytesRef[size];\n    BytesRefBuilder term = new BytesRefBuilder();\n    Iterator<LongCursor> it = groupSet.iterator();\n    int index = -1;\n    String stringVal =  null;\n    while (it.hasNext()) {\n      LongCursor cursor = it.next();\n      if(ft instanceof TrieIntField || ft instanceof TrieLongField) {\n        stringVal = Long.toString(cursor.value);\n      } else {\n        if(ft instanceof TrieFloatField) {\n          stringVal = Float.toString(Float.intBitsToFloat((int)cursor.value));\n        } else {\n          stringVal = Double.toString(Double.longBitsToDouble(cursor.value));\n        }\n      }\n      ft.readableToIndexed(stringVal, term);\n      bytesRefs[++index] = term.toBytesRef();\n    }\n\n    return new SolrConstantScoreQuery(new TermsFilter(fname, bytesRefs));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1fcee2c3acd9aa64a73a3b441b3f6cb492af0b87","date":1440409984,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/component/ExpandComponent#getGroupQuery(String,FieldType,int,LongHashSet).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/component/ExpandComponent#getGroupQuery(String,FieldType,int,LongOpenHashSet).mjava","sourceNew":"  private Query getGroupQuery(String fname,\n                           FieldType ft,\n                           int size,\n                           LongHashSet groupSet) {\n\n    BytesRef[] bytesRefs = new BytesRef[size];\n    BytesRefBuilder term = new BytesRefBuilder();\n    Iterator<LongCursor> it = groupSet.iterator();\n    int index = -1;\n    String stringVal =  null;\n    while (it.hasNext()) {\n      LongCursor cursor = it.next();\n      if(ft instanceof TrieIntField || ft instanceof TrieLongField) {\n        stringVal = Long.toString(cursor.value);\n      } else {\n        if(ft instanceof TrieFloatField) {\n          stringVal = Float.toString(Float.intBitsToFloat((int)cursor.value));\n        } else {\n          stringVal = Double.toString(Double.longBitsToDouble(cursor.value));\n        }\n      }\n      ft.readableToIndexed(stringVal, term);\n      bytesRefs[++index] = term.toBytesRef();\n    }\n\n    return new SolrConstantScoreQuery(new QueryWrapperFilter(new TermsQuery(fname, bytesRefs)));\n  }\n\n","sourceOld":"  private Query getGroupQuery(String fname,\n                           FieldType ft,\n                           int size,\n                           LongOpenHashSet groupSet) {\n\n    BytesRef[] bytesRefs = new BytesRef[size];\n    BytesRefBuilder term = new BytesRefBuilder();\n    Iterator<LongCursor> it = groupSet.iterator();\n    int index = -1;\n    String stringVal =  null;\n    while (it.hasNext()) {\n      LongCursor cursor = it.next();\n      if(ft instanceof TrieIntField || ft instanceof TrieLongField) {\n        stringVal = Long.toString(cursor.value);\n      } else {\n        if(ft instanceof TrieFloatField) {\n          stringVal = Float.toString(Float.intBitsToFloat((int)cursor.value));\n        } else {\n          stringVal = Double.toString(Double.longBitsToDouble(cursor.value));\n        }\n      }\n      ft.readableToIndexed(stringVal, term);\n      bytesRefs[++index] = term.toBytesRef();\n    }\n\n    return new SolrConstantScoreQuery(new QueryWrapperFilter(new TermsQuery(fname, bytesRefs)));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"8ced52befdc8d88d90766aadbaac496f3fd0e4ee":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"1fcee2c3acd9aa64a73a3b441b3f6cb492af0b87":["c2042d3e27841c5b60112990fc33559e10ccf6dd"],"c2042d3e27841c5b60112990fc33559e10ccf6dd":["8ced52befdc8d88d90766aadbaac496f3fd0e4ee"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["1fcee2c3acd9aa64a73a3b441b3f6cb492af0b87"]},"commit2Childs":{"8ced52befdc8d88d90766aadbaac496f3fd0e4ee":["c2042d3e27841c5b60112990fc33559e10ccf6dd"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["8ced52befdc8d88d90766aadbaac496f3fd0e4ee"],"1fcee2c3acd9aa64a73a3b441b3f6cb492af0b87":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"c2042d3e27841c5b60112990fc33559e10ccf6dd":["1fcee2c3acd9aa64a73a3b441b3f6cb492af0b87"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}