{"path":"src/java/org/apache/solr/update/DocumentBuilder#build(SolrInputDocument).mjava","commits":[{"id":"0902cc3e4d3f7e4fe37a1474010f51523cafbbef","date":1181874468,"type":0,"author":"Ryan McKinley","isMerge":false,"pathNew":"src/java/org/apache/solr/update/DocumentBuilder#build(SolrInputDocument).mjava","pathOld":"/dev/null","sourceNew":"  /** \n   * Build a lucene document from a SolrInputDocument\n   * \n   * @since solr 1.3\n   */\n  public Document build( SolrInputDocument doc )\n  {\n    this.startDoc();\n    \n    for( String name : doc.getFieldNames() ) {\n      Float boost = doc.getBoost( name );\n      if( boost == null ) {\n        boost = new Float( 1 );\n      }\n      \n      for( Object v : doc.getFieldValues( name ) ) {\n        if( v instanceof Date ) {\n          // Make sure to format dates\n          SchemaField sfield = schema.getField(name);\n          if( sfield.getType() instanceof DateField ) {\n            DateField df = (DateField)sfield.getType();\n            this.addField( name, df.toInternal( (Date)v )+'Z', boost );\n            continue;\n          }\n        }\n        this.addField( name, v==null ? null : v.toString(), boost ); \n      }\n    }\n  \n    // set the full document boost\n    Document luceneDoc = this.getDoc();\n    if( doc.getBoost( null ) != null ) {\n      luceneDoc.setBoost( doc.getBoost( null ) );\n    }\n    return luceneDoc;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4230c91a8f260cc364b5a46269bd21d6122b4fbd","date":1182024063,"type":4,"author":"Ryan McKinley","isMerge":false,"pathNew":"/dev/null","pathOld":"src/java/org/apache/solr/update/DocumentBuilder#build(SolrInputDocument).mjava","sourceNew":null,"sourceOld":"  /** \n   * Build a lucene document from a SolrInputDocument\n   * \n   * @since solr 1.3\n   */\n  public Document build( SolrInputDocument doc )\n  {\n    this.startDoc();\n    \n    for( String name : doc.getFieldNames() ) {\n      Float boost = doc.getBoost( name );\n      if( boost == null ) {\n        boost = new Float( 1 );\n      }\n      \n      for( Object v : doc.getFieldValues( name ) ) {\n        if( v instanceof Date ) {\n          // Make sure to format dates\n          SchemaField sfield = schema.getField(name);\n          if( sfield.getType() instanceof DateField ) {\n            DateField df = (DateField)sfield.getType();\n            this.addField( name, df.toInternal( (Date)v )+'Z', boost );\n            continue;\n          }\n        }\n        this.addField( name, v==null ? null : v.toString(), boost ); \n      }\n    }\n  \n    // set the full document boost\n    Document luceneDoc = this.getDoc();\n    if( doc.getBoost( null ) != null ) {\n      luceneDoc.setBoost( doc.getBoost( null ) );\n    }\n    return luceneDoc;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"4230c91a8f260cc364b5a46269bd21d6122b4fbd":["0902cc3e4d3f7e4fe37a1474010f51523cafbbef"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"0902cc3e4d3f7e4fe37a1474010f51523cafbbef":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"4230c91a8f260cc364b5a46269bd21d6122b4fbd":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["0902cc3e4d3f7e4fe37a1474010f51523cafbbef"],"0902cc3e4d3f7e4fe37a1474010f51523cafbbef":["4230c91a8f260cc364b5a46269bd21d6122b4fbd"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["4230c91a8f260cc364b5a46269bd21d6122b4fbd","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"pathCommit":null}