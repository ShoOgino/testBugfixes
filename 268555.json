{"path":"solr/core/src/java/org/apache/solr/update/HdfsTransactionLog#endsWithCommit().mjava","commits":[{"id":"849494cf2f3a96af5c8c84995108ddd8456fcd04","date":1372277913,"type":0,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/update/HdfsTransactionLog#endsWithCommit().mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public boolean endsWithCommit() throws IOException {\n    long size;\n    synchronized (this) {\n      fos.flush();\n      tlogOutStream.hflush();\n      size = fos.size();\n    }\n\n    \n    // the end of the file should have the end message (added during a commit) plus a 4 byte size\n    byte[] buf = new byte[ END_MESSAGE.length() ];\n    long pos = size - END_MESSAGE.length() - 4;\n    if (pos < 0) return false;\n    \n    FSDataFastInputStream dis = new FSDataFastInputStream(fs.open(tlogFile), pos);\n    try {\n    //ChannelFastInputStream is = new ChannelFastInputStream(channel, pos);\n    dis.read(buf);\n    for (int i=0; i<buf.length; i++) {\n      if (buf[i] != END_MESSAGE.charAt(i)) return false;\n    }\n    } finally {\n      dis.close();\n    }\n    return true;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["d9da6af0d6e0b9ee92e3adbfd2796792453afbef"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"37a0f60745e53927c4c876cfe5b5a58170f0646c","date":1373994005,"type":0,"author":"Han Jiang","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/update/HdfsTransactionLog#endsWithCommit().mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public boolean endsWithCommit() throws IOException {\n    long size;\n    synchronized (this) {\n      fos.flush();\n      tlogOutStream.hflush();\n      size = fos.size();\n    }\n\n    \n    // the end of the file should have the end message (added during a commit) plus a 4 byte size\n    byte[] buf = new byte[ END_MESSAGE.length() ];\n    long pos = size - END_MESSAGE.length() - 4;\n    if (pos < 0) return false;\n    \n    FSDataFastInputStream dis = new FSDataFastInputStream(fs.open(tlogFile), pos);\n    try {\n    //ChannelFastInputStream is = new ChannelFastInputStream(channel, pos);\n    dis.read(buf);\n    for (int i=0; i<buf.length; i++) {\n      if (buf[i] != END_MESSAGE.charAt(i)) return false;\n    }\n    } finally {\n      dis.close();\n    }\n    return true;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d9da6af0d6e0b9ee92e3adbfd2796792453afbef","date":1472233199,"type":3,"author":"markrmiller","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/update/HdfsTransactionLog#endsWithCommit().mjava","pathOld":"solr/core/src/java/org/apache/solr/update/HdfsTransactionLog#endsWithCommit().mjava","sourceNew":"  @Override\n  public boolean endsWithCommit() throws IOException {\n    ensureFlushed();\n    long size = getLogSize();\n    \n    // the end of the file should have the end message (added during a commit) plus a 4 byte size\n    byte[] buf = new byte[ END_MESSAGE.length() ];\n    long pos = size - END_MESSAGE.length() - 4;\n    if (pos < 0) return false;\n    \n    FSDataFastInputStream dis = new FSDataFastInputStream(fs.open(tlogFile), pos);\n    try {\n      dis.read(buf);\n      for (int i=0; i<buf.length; i++) {\n        if (buf[i] != END_MESSAGE.charAt(i)) return false;\n      }\n    } finally {\n      dis.close();\n    }\n    return true;\n  }\n\n","sourceOld":"  @Override\n  public boolean endsWithCommit() throws IOException {\n    long size;\n    synchronized (this) {\n      fos.flush();\n      tlogOutStream.hflush();\n      size = fos.size();\n    }\n\n    \n    // the end of the file should have the end message (added during a commit) plus a 4 byte size\n    byte[] buf = new byte[ END_MESSAGE.length() ];\n    long pos = size - END_MESSAGE.length() - 4;\n    if (pos < 0) return false;\n    \n    FSDataFastInputStream dis = new FSDataFastInputStream(fs.open(tlogFile), pos);\n    try {\n    //ChannelFastInputStream is = new ChannelFastInputStream(channel, pos);\n    dis.read(buf);\n    for (int i=0; i<buf.length; i++) {\n      if (buf[i] != END_MESSAGE.charAt(i)) return false;\n    }\n    } finally {\n      dis.close();\n    }\n    return true;\n  }\n\n","bugFix":["849494cf2f3a96af5c8c84995108ddd8456fcd04"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"17e5da53e4e5bd659e22add9bba1cfa222e7e30d","date":1475435902,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/update/HdfsTransactionLog#endsWithCommit().mjava","pathOld":"solr/core/src/java/org/apache/solr/update/HdfsTransactionLog#endsWithCommit().mjava","sourceNew":"  @Override\n  public boolean endsWithCommit() throws IOException {\n    ensureFlushed();\n    long size = getLogSize();\n    \n    // the end of the file should have the end message (added during a commit) plus a 4 byte size\n    byte[] buf = new byte[ END_MESSAGE.length() ];\n    long pos = size - END_MESSAGE.length() - 4;\n    if (pos < 0) return false;\n    \n    FSDataFastInputStream dis = new FSDataFastInputStream(fs.open(tlogFile), pos);\n    try {\n      dis.read(buf);\n      for (int i=0; i<buf.length; i++) {\n        if (buf[i] != END_MESSAGE.charAt(i)) return false;\n      }\n    } finally {\n      dis.close();\n    }\n    return true;\n  }\n\n","sourceOld":"  @Override\n  public boolean endsWithCommit() throws IOException {\n    long size;\n    synchronized (this) {\n      fos.flush();\n      tlogOutStream.hflush();\n      size = fos.size();\n    }\n\n    \n    // the end of the file should have the end message (added during a commit) plus a 4 byte size\n    byte[] buf = new byte[ END_MESSAGE.length() ];\n    long pos = size - END_MESSAGE.length() - 4;\n    if (pos < 0) return false;\n    \n    FSDataFastInputStream dis = new FSDataFastInputStream(fs.open(tlogFile), pos);\n    try {\n    //ChannelFastInputStream is = new ChannelFastInputStream(channel, pos);\n    dis.read(buf);\n    for (int i=0; i<buf.length; i++) {\n      if (buf[i] != END_MESSAGE.charAt(i)) return false;\n    }\n    } finally {\n      dis.close();\n    }\n    return true;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/update/HdfsTransactionLog#endsWithCommit().mjava","pathOld":"solr/core/src/java/org/apache/solr/update/HdfsTransactionLog#endsWithCommit().mjava","sourceNew":"  @Override\n  public boolean endsWithCommit() throws IOException {\n    ensureFlushed();\n    long size = getLogSize();\n    \n    // the end of the file should have the end message (added during a commit) plus a 4 byte size\n    byte[] buf = new byte[ END_MESSAGE.length() ];\n    long pos = size - END_MESSAGE.length() - 4;\n    if (pos < 0) return false;\n    \n    FSDataFastInputStream dis = new FSDataFastInputStream(fs.open(tlogFile), pos);\n    try {\n      dis.read(buf);\n      for (int i=0; i<buf.length; i++) {\n        if (buf[i] != END_MESSAGE.charAt(i)) return false;\n      }\n    } finally {\n      dis.close();\n    }\n    return true;\n  }\n\n","sourceOld":"  @Override\n  public boolean endsWithCommit() throws IOException {\n    long size;\n    synchronized (this) {\n      fos.flush();\n      tlogOutStream.hflush();\n      size = fos.size();\n    }\n\n    \n    // the end of the file should have the end message (added during a commit) plus a 4 byte size\n    byte[] buf = new byte[ END_MESSAGE.length() ];\n    long pos = size - END_MESSAGE.length() - 4;\n    if (pos < 0) return false;\n    \n    FSDataFastInputStream dis = new FSDataFastInputStream(fs.open(tlogFile), pos);\n    try {\n    //ChannelFastInputStream is = new ChannelFastInputStream(channel, pos);\n    dis.read(buf);\n    for (int i=0; i<buf.length; i++) {\n      if (buf[i] != END_MESSAGE.charAt(i)) return false;\n    }\n    } finally {\n      dis.close();\n    }\n    return true;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"849494cf2f3a96af5c8c84995108ddd8456fcd04":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"d9da6af0d6e0b9ee92e3adbfd2796792453afbef":["849494cf2f3a96af5c8c84995108ddd8456fcd04"],"37a0f60745e53927c4c876cfe5b5a58170f0646c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","849494cf2f3a96af5c8c84995108ddd8456fcd04"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"17e5da53e4e5bd659e22add9bba1cfa222e7e30d":["849494cf2f3a96af5c8c84995108ddd8456fcd04","d9da6af0d6e0b9ee92e3adbfd2796792453afbef"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["849494cf2f3a96af5c8c84995108ddd8456fcd04","17e5da53e4e5bd659e22add9bba1cfa222e7e30d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["17e5da53e4e5bd659e22add9bba1cfa222e7e30d"]},"commit2Childs":{"849494cf2f3a96af5c8c84995108ddd8456fcd04":["d9da6af0d6e0b9ee92e3adbfd2796792453afbef","37a0f60745e53927c4c876cfe5b5a58170f0646c","17e5da53e4e5bd659e22add9bba1cfa222e7e30d","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"d9da6af0d6e0b9ee92e3adbfd2796792453afbef":["17e5da53e4e5bd659e22add9bba1cfa222e7e30d"],"37a0f60745e53927c4c876cfe5b5a58170f0646c":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["849494cf2f3a96af5c8c84995108ddd8456fcd04","37a0f60745e53927c4c876cfe5b5a58170f0646c"],"17e5da53e4e5bd659e22add9bba1cfa222e7e30d":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["37a0f60745e53927c4c876cfe5b5a58170f0646c","4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}