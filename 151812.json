{"path":"src/test/org/apache/solr/BasicFunctionalityTest#testRequestHandlerBaseException().mjava","commits":[{"id":"54679bc74d3b78600ac7d170f1e166084d9d7d1f","date":1170881290,"type":0,"author":"Chris M. Hostetter","isMerge":false,"pathNew":"src/test/org/apache/solr/BasicFunctionalityTest#testRequestHandlerBaseException().mjava","pathOld":"/dev/null","sourceNew":"  public void testRequestHandlerBaseException() {\n    final String tmp = \"BOO!\";\n    SolrRequestHandler handler = new RequestHandlerBase() {\n        public String getDescription() { return tmp; }\n        public String getSourceId() { return tmp; }\n        public String getSource() { return tmp; }\n        public String getVersion() { return tmp; }\n        public void handleRequestBody\n          ( SolrQueryRequest req, SolrQueryResponse rsp ) {\n          throw new RuntimeException(tmp);\n        }\n      };\n    handler.init(new NamedList());\n    SolrQueryResponse rsp = new SolrQueryResponse();\n    h.getCore().execute(handler, \n                        new LocalSolrQueryRequest(h.getCore(),\n                                                  new NamedList()),\n                        rsp);\n    assertNotNull(\"should have found an exception\", rsp.getException());\n                        \n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ad94625fb8d088209f46650c8097196fec67f00c","date":1453508319,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/src/test/org/apache/solr/BasicFunctionalityTest#testRequestHandlerBaseException().mjava","pathOld":"src/test/org/apache/solr/BasicFunctionalityTest#testRequestHandlerBaseException().mjava","sourceNew":"  public void testRequestHandlerBaseException() {\n    final String tmp = \"BOO!\";\n    SolrRequestHandler handler = new RequestHandlerBase() {\n        public String getDescription() { return tmp; }\n        public String getSourceId() { return tmp; }\n        public String getSource() { return tmp; }\n        public String getVersion() { return tmp; }\n        public void handleRequestBody\n          ( SolrQueryRequest req, SolrQueryResponse rsp ) {\n          throw new RuntimeException(tmp);\n        }\n      };\n    handler.init(new NamedList());\n    SolrQueryResponse rsp = new SolrQueryResponse();\n    h.getCore().execute(handler, \n                        new LocalSolrQueryRequest(h.getCore(),\n                                                  new NamedList()),\n                        rsp);\n    assertNotNull(\"should have found an exception\", rsp.getException());\n                        \n  }\n\n","sourceOld":"  public void testRequestHandlerBaseException() {\n    final String tmp = \"BOO!\";\n    SolrRequestHandler handler = new RequestHandlerBase() {\n        public String getDescription() { return tmp; }\n        public String getSourceId() { return tmp; }\n        public String getSource() { return tmp; }\n        public String getVersion() { return tmp; }\n        public void handleRequestBody\n          ( SolrQueryRequest req, SolrQueryResponse rsp ) {\n          throw new RuntimeException(tmp);\n        }\n      };\n    handler.init(new NamedList());\n    SolrQueryResponse rsp = new SolrQueryResponse();\n    h.getCore().execute(handler, \n                        new LocalSolrQueryRequest(h.getCore(),\n                                                  new NamedList()),\n                        rsp);\n    assertNotNull(\"should have found an exception\", rsp.getException());\n                        \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"ad94625fb8d088209f46650c8097196fec67f00c":["54679bc74d3b78600ac7d170f1e166084d9d7d1f"],"54679bc74d3b78600ac7d170f1e166084d9d7d1f":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["54679bc74d3b78600ac7d170f1e166084d9d7d1f"],"ad94625fb8d088209f46650c8097196fec67f00c":[],"54679bc74d3b78600ac7d170f1e166084d9d7d1f":["ad94625fb8d088209f46650c8097196fec67f00c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["ad94625fb8d088209f46650c8097196fec67f00c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"pathCommit":null}