{"path":"lucene/core/src/java/org/apache/lucene/index/MultiDocValues.MultiSortedDocValues#getOrd(int).mjava","commits":[{"id":"10cd984eebb9656e4afcd6ccf6968b710d630704","date":1360002935,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/MultiDocValues.MultiSortedDocValues#getOrd(int).mjava","pathOld":"/dev/null","sourceNew":"    @Override\n    public int getOrd(int docID) {\n      int subIndex = ReaderUtil.subIndex(docID, docStarts);\n      int segmentOrd = values[subIndex].getOrd(docID - docStarts[subIndex]);\n      return (int) (segmentOrd + mapping.ordDeltas[subIndex].get(segmentOrd));\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d4d69c535930b5cce125cff868d40f6373dc27d4","date":1360270101,"type":0,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/MultiDocValues.MultiSortedDocValues#getOrd(int).mjava","pathOld":"/dev/null","sourceNew":"    @Override\n    public int getOrd(int docID) {\n      int subIndex = ReaderUtil.subIndex(docID, docStarts);\n      int segmentOrd = values[subIndex].getOrd(docID - docStarts[subIndex]);\n      return (int) (segmentOrd + mapping.ordDeltas[subIndex].get(segmentOrd));\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f366ce28775e2b8ea4e06355009471328711666d","date":1360551293,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/MultiDocValues.MultiSortedDocValues#getOrd(int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/MultiDocValues.MultiSortedDocValues#getOrd(int).mjava","sourceNew":"    @Override\n    public int getOrd(int docID) {\n      int subIndex = ReaderUtil.subIndex(docID, docStarts);\n      int segmentOrd = values[subIndex].getOrd(docID - docStarts[subIndex]);\n      return (int) mapping.getGlobalOrd(subIndex, segmentOrd);\n    }\n\n","sourceOld":"    @Override\n    public int getOrd(int docID) {\n      int subIndex = ReaderUtil.subIndex(docID, docStarts);\n      int segmentOrd = values[subIndex].getOrd(docID - docStarts[subIndex]);\n      return (int) (segmentOrd + mapping.ordDeltas[subIndex].get(segmentOrd));\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ddbb72a33557d2b5bc22ee95daf3281c43560502","date":1361334582,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/MultiDocValues.MultiSortedDocValues#getOrd(int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/MultiDocValues.MultiSortedDocValues#getOrd(int).mjava","sourceNew":"    @Override\n    public int getOrd(int docID) {\n      int subIndex = ReaderUtil.subIndex(docID, docStarts);\n      int segmentOrd = values[subIndex].getOrd(docID - docStarts[subIndex]);\n      return (int) mapping.getGlobalOrd(subIndex, segmentOrd);\n    }\n\n","sourceOld":"    @Override\n    public int getOrd(int docID) {\n      int subIndex = ReaderUtil.subIndex(docID, docStarts);\n      int segmentOrd = values[subIndex].getOrd(docID - docStarts[subIndex]);\n      return (int) (segmentOrd + mapping.ordDeltas[subIndex].get(segmentOrd));\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"259738a0b6cee3365b95a8a72134e52e6d32756d","date":1377180576,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/MultiDocValues.MultiSortedDocValues#getOrd(int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/MultiDocValues.MultiSortedDocValues#getOrd(int).mjava","sourceNew":"    @Override\n    public int getOrd(int docID) {\n      int subIndex = ReaderUtil.subIndex(docID, docStarts);\n      int segmentOrd = values[subIndex].getOrd(docID - docStarts[subIndex]);\n      return segmentOrd == -1 ? segmentOrd : (int) mapping.getGlobalOrd(subIndex, segmentOrd);\n    }\n\n","sourceOld":"    @Override\n    public int getOrd(int docID) {\n      int subIndex = ReaderUtil.subIndex(docID, docStarts);\n      int segmentOrd = values[subIndex].getOrd(docID - docStarts[subIndex]);\n      return (int) mapping.getGlobalOrd(subIndex, segmentOrd);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3dffec77fb8f7d0e9ca4869dddd6af94528b4576","date":1377875202,"type":3,"author":"Han Jiang","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/MultiDocValues.MultiSortedDocValues#getOrd(int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/MultiDocValues.MultiSortedDocValues#getOrd(int).mjava","sourceNew":"    @Override\n    public int getOrd(int docID) {\n      int subIndex = ReaderUtil.subIndex(docID, docStarts);\n      int segmentOrd = values[subIndex].getOrd(docID - docStarts[subIndex]);\n      return segmentOrd == -1 ? segmentOrd : (int) mapping.getGlobalOrd(subIndex, segmentOrd);\n    }\n\n","sourceOld":"    @Override\n    public int getOrd(int docID) {\n      int subIndex = ReaderUtil.subIndex(docID, docStarts);\n      int segmentOrd = values[subIndex].getOrd(docID - docStarts[subIndex]);\n      return (int) mapping.getGlobalOrd(subIndex, segmentOrd);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9b25d26ad3e8f824d95db88ecc5e5d9d71d3c595","date":1402950824,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/MultiDocValues.MultiSortedDocValues#getOrd(int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/MultiDocValues.MultiSortedDocValues#getOrd(int).mjava","sourceNew":"    @Override\n    public int getOrd(int docID) {\n      int subIndex = ReaderUtil.subIndex(docID, docStarts);\n      int segmentOrd = values[subIndex].getOrd(docID - docStarts[subIndex]);\n      return segmentOrd == -1 ? segmentOrd : (int) mapping.segmentToGlobalOrds[subIndex].get(segmentOrd);\n    }\n\n","sourceOld":"    @Override\n    public int getOrd(int docID) {\n      int subIndex = ReaderUtil.subIndex(docID, docStarts);\n      int segmentOrd = values[subIndex].getOrd(docID - docStarts[subIndex]);\n      return segmentOrd == -1 ? segmentOrd : (int) mapping.getGlobalOrd(subIndex, segmentOrd);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f6d0aee18c1653f7ee634fa8830abdb001dcfe1b","date":1402998114,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/MultiDocValues.MultiSortedDocValues#getOrd(int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/MultiDocValues.MultiSortedDocValues#getOrd(int).mjava","sourceNew":"    @Override\n    public int getOrd(int docID) {\n      int subIndex = ReaderUtil.subIndex(docID, docStarts);\n      int segmentOrd = values[subIndex].getOrd(docID - docStarts[subIndex]);\n      return segmentOrd == -1 ? segmentOrd : (int) mapping.segmentToGlobalOrds[subIndex].get(segmentOrd);\n    }\n\n","sourceOld":"    @Override\n    public int getOrd(int docID) {\n      int subIndex = ReaderUtil.subIndex(docID, docStarts);\n      int segmentOrd = values[subIndex].getOrd(docID - docStarts[subIndex]);\n      return segmentOrd == -1 ? segmentOrd : (int) mapping.getGlobalOrd(subIndex, segmentOrd);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5bcfd864fb8b916f7d21f2579d2010a31892055d","date":1403359094,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/MultiDocValues.MultiSortedDocValues#getOrd(int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/MultiDocValues.MultiSortedDocValues#getOrd(int).mjava","sourceNew":"    @Override\n    public int getOrd(int docID) {\n      int subIndex = ReaderUtil.subIndex(docID, docStarts);\n      int segmentOrd = values[subIndex].getOrd(docID - docStarts[subIndex]);\n      return segmentOrd == -1 ? segmentOrd : (int) mapping.getGlobalOrds(subIndex).get(segmentOrd);\n    }\n\n","sourceOld":"    @Override\n    public int getOrd(int docID) {\n      int subIndex = ReaderUtil.subIndex(docID, docStarts);\n      int segmentOrd = values[subIndex].getOrd(docID - docStarts[subIndex]);\n      return segmentOrd == -1 ? segmentOrd : (int) mapping.segmentToGlobalOrds[subIndex].get(segmentOrd);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6652c74b2358a0b13223817a6a793bf1c9d0749d","date":1474465301,"type":4,"author":"Mike McCandless","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/index/MultiDocValues.MultiSortedDocValues#getOrd(int).mjava","sourceNew":null,"sourceOld":"    @Override\n    public int getOrd(int docID) {\n      int subIndex = ReaderUtil.subIndex(docID, docStarts);\n      int segmentOrd = values[subIndex].getOrd(docID - docStarts[subIndex]);\n      return segmentOrd == -1 ? segmentOrd : (int) mapping.getGlobalOrds(subIndex).get(segmentOrd);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"17e5da53e4e5bd659e22add9bba1cfa222e7e30d","date":1475435902,"type":4,"author":"Karl Wright","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/index/MultiDocValues.MultiSortedDocValues#getOrd(int).mjava","sourceNew":null,"sourceOld":"    @Override\n    public int getOrd(int docID) {\n      int subIndex = ReaderUtil.subIndex(docID, docStarts);\n      int segmentOrd = values[subIndex].getOrd(docID - docStarts[subIndex]);\n      return segmentOrd == -1 ? segmentOrd : (int) mapping.getGlobalOrds(subIndex).get(segmentOrd);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":4,"author":"Kevin Risden","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/index/MultiDocValues.MultiSortedDocValues#getOrd(int).mjava","sourceNew":null,"sourceOld":"    @Override\n    public int getOrd(int docID) {\n      int subIndex = ReaderUtil.subIndex(docID, docStarts);\n      int segmentOrd = values[subIndex].getOrd(docID - docStarts[subIndex]);\n      return segmentOrd == -1 ? segmentOrd : (int) mapping.getGlobalOrds(subIndex).get(segmentOrd);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"10cd984eebb9656e4afcd6ccf6968b710d630704":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"3dffec77fb8f7d0e9ca4869dddd6af94528b4576":["ddbb72a33557d2b5bc22ee95daf3281c43560502","259738a0b6cee3365b95a8a72134e52e6d32756d"],"ddbb72a33557d2b5bc22ee95daf3281c43560502":["d4d69c535930b5cce125cff868d40f6373dc27d4","f366ce28775e2b8ea4e06355009471328711666d"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["5bcfd864fb8b916f7d21f2579d2010a31892055d","17e5da53e4e5bd659e22add9bba1cfa222e7e30d"],"f6d0aee18c1653f7ee634fa8830abdb001dcfe1b":["259738a0b6cee3365b95a8a72134e52e6d32756d","9b25d26ad3e8f824d95db88ecc5e5d9d71d3c595"],"d4d69c535930b5cce125cff868d40f6373dc27d4":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","10cd984eebb9656e4afcd6ccf6968b710d630704"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"17e5da53e4e5bd659e22add9bba1cfa222e7e30d":["5bcfd864fb8b916f7d21f2579d2010a31892055d","6652c74b2358a0b13223817a6a793bf1c9d0749d"],"6652c74b2358a0b13223817a6a793bf1c9d0749d":["5bcfd864fb8b916f7d21f2579d2010a31892055d"],"259738a0b6cee3365b95a8a72134e52e6d32756d":["ddbb72a33557d2b5bc22ee95daf3281c43560502"],"f366ce28775e2b8ea4e06355009471328711666d":["d4d69c535930b5cce125cff868d40f6373dc27d4"],"9b25d26ad3e8f824d95db88ecc5e5d9d71d3c595":["259738a0b6cee3365b95a8a72134e52e6d32756d"],"5bcfd864fb8b916f7d21f2579d2010a31892055d":["9b25d26ad3e8f824d95db88ecc5e5d9d71d3c595"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["17e5da53e4e5bd659e22add9bba1cfa222e7e30d"]},"commit2Childs":{"10cd984eebb9656e4afcd6ccf6968b710d630704":["d4d69c535930b5cce125cff868d40f6373dc27d4"],"3dffec77fb8f7d0e9ca4869dddd6af94528b4576":[],"ddbb72a33557d2b5bc22ee95daf3281c43560502":["3dffec77fb8f7d0e9ca4869dddd6af94528b4576","259738a0b6cee3365b95a8a72134e52e6d32756d"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"f6d0aee18c1653f7ee634fa8830abdb001dcfe1b":[],"d4d69c535930b5cce125cff868d40f6373dc27d4":["ddbb72a33557d2b5bc22ee95daf3281c43560502","f366ce28775e2b8ea4e06355009471328711666d"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["10cd984eebb9656e4afcd6ccf6968b710d630704","d4d69c535930b5cce125cff868d40f6373dc27d4"],"17e5da53e4e5bd659e22add9bba1cfa222e7e30d":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"6652c74b2358a0b13223817a6a793bf1c9d0749d":["17e5da53e4e5bd659e22add9bba1cfa222e7e30d"],"259738a0b6cee3365b95a8a72134e52e6d32756d":["3dffec77fb8f7d0e9ca4869dddd6af94528b4576","f6d0aee18c1653f7ee634fa8830abdb001dcfe1b","9b25d26ad3e8f824d95db88ecc5e5d9d71d3c595"],"f366ce28775e2b8ea4e06355009471328711666d":["ddbb72a33557d2b5bc22ee95daf3281c43560502"],"9b25d26ad3e8f824d95db88ecc5e5d9d71d3c595":["f6d0aee18c1653f7ee634fa8830abdb001dcfe1b","5bcfd864fb8b916f7d21f2579d2010a31892055d"],"5bcfd864fb8b916f7d21f2579d2010a31892055d":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","17e5da53e4e5bd659e22add9bba1cfa222e7e30d","6652c74b2358a0b13223817a6a793bf1c9d0749d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["3dffec77fb8f7d0e9ca4869dddd6af94528b4576","4cce5816ef15a48a0bc11e5d400497ee4301dd3b","f6d0aee18c1653f7ee634fa8830abdb001dcfe1b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}