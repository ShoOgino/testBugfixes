{"path":"lucene/test-framework/src/java/org/apache/lucene/codecs/asserting/AssertingPointFormat.AssertingIntersectVisitor#visit(int).mjava","commits":[{"id":"adc9dc8ef0ce617b940a039fd12f79e8b098cc7f","date":1456936072,"type":0,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/codecs/asserting/AssertingPointFormat.AssertingIntersectVisitor#visit(int).mjava","pathOld":"/dev/null","sourceNew":"    @Override\n    public void visit(int docID) throws IOException {\n      // This method, not filtering each hit, should only be invoked when the cell is inside the query shape:\n      assert lastCompareResult == Relation.CELL_INSIDE_QUERY;\n      in.visit(docID);\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"cf1a614098b46c9c22afebd7b898ae4d1d2fc273","date":1457088850,"type":0,"author":"Noble Paul","isMerge":true,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/codecs/asserting/AssertingPointFormat.AssertingIntersectVisitor#visit(int).mjava","pathOld":"/dev/null","sourceNew":"    @Override\n    public void visit(int docID) throws IOException {\n      // This method, not filtering each hit, should only be invoked when the cell is inside the query shape:\n      assert lastCompareResult == Relation.CELL_INSIDE_QUERY;\n      in.visit(docID);\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4522ffca5a1f420c6a02198c9332d7c596a30ca5","date":1457270822,"type":5,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/codecs/asserting/AssertingPointsFormat.AssertingIntersectVisitor#visit(int).mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/codecs/asserting/AssertingPointFormat.AssertingIntersectVisitor#visit(int).mjava","sourceNew":"    @Override\n    public void visit(int docID) throws IOException {\n      // This method, not filtering each hit, should only be invoked when the cell is inside the query shape:\n      assert lastCompareResult == Relation.CELL_INSIDE_QUERY;\n      in.visit(docID);\n    }\n\n","sourceOld":"    @Override\n    public void visit(int docID) throws IOException {\n      // This method, not filtering each hit, should only be invoked when the cell is inside the query shape:\n      assert lastCompareResult == Relation.CELL_INSIDE_QUERY;\n      in.visit(docID);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"4522ffca5a1f420c6a02198c9332d7c596a30ca5":["cf1a614098b46c9c22afebd7b898ae4d1d2fc273"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cf1a614098b46c9c22afebd7b898ae4d1d2fc273":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","adc9dc8ef0ce617b940a039fd12f79e8b098cc7f"],"adc9dc8ef0ce617b940a039fd12f79e8b098cc7f":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["4522ffca5a1f420c6a02198c9332d7c596a30ca5"]},"commit2Childs":{"4522ffca5a1f420c6a02198c9332d7c596a30ca5":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cf1a614098b46c9c22afebd7b898ae4d1d2fc273","adc9dc8ef0ce617b940a039fd12f79e8b098cc7f"],"cf1a614098b46c9c22afebd7b898ae4d1d2fc273":["4522ffca5a1f420c6a02198c9332d7c596a30ca5"],"adc9dc8ef0ce617b940a039fd12f79e8b098cc7f":["cf1a614098b46c9c22afebd7b898ae4d1d2fc273"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}