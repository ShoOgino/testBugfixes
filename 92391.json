{"path":"lucene/core/src/test/org/apache/lucene/index/TestNRTReaderCleanup#testClosingNRTReaderDoesNotCorruptYourIndex().mjava","commits":[{"id":"b185840df853cd910fb9ef34e8ad534560d3ce5a","date":1424440830,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestNRTReaderCleanup#testClosingNRTReaderDoesNotCorruptYourIndex().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriter#testClosingNRTReaderDoesNotCorruptYourIndex().mjava","sourceNew":"  public void testClosingNRTReaderDoesNotCorruptYourIndex() throws IOException {\n\n    // Windows disallows deleting & overwriting files still\n    // open for reading:\n    assumeFalse(\"this test can't run on Windows\", Constants.WINDOWS);\n\n    MockDirectoryWrapper dir = newMockDirectory();\n    \n    // don't act like windows either, or the test won't simulate the condition\n    dir.setEnableVirusScanner(false);\n\n    // Allow deletion of still open files:\n    dir.setNoDeleteOpenFile(false);\n\n    // Allow writing to same file more than once:\n    dir.setPreventDoubleWrite(false);\n\n    IndexWriterConfig iwc = newIndexWriterConfig(new MockAnalyzer(random()));\n    LogMergePolicy lmp = new LogDocMergePolicy();\n    lmp.setMergeFactor(2);\n    iwc.setMergePolicy(lmp);\n\n    RandomIndexWriter w = new RandomIndexWriter(random(), dir, iwc);\n    Document doc = new Document();\n    doc.add(new TextField(\"a\", \"foo\", Field.Store.NO));\n    w.addDocument(doc);\n    w.commit();\n    w.addDocument(doc);\n\n    // Get a new reader, but this also sets off a merge:\n    IndexReader r = w.getReader();\n    w.close();\n\n    // Blow away index and make a new writer:\n    for(String fileName : dir.listAll()) {\n      dir.deleteFile(fileName);\n    }\n\n    w = new RandomIndexWriter(random(), dir);\n    w.addDocument(doc);\n    w.close();\n    r.close();\n    dir.close();\n  }\n\n","sourceOld":"  // LUCENE-5574\n  public void testClosingNRTReaderDoesNotCorruptYourIndex() throws IOException {\n\n    // Windows disallows deleting & overwriting files still\n    // open for reading:\n    assumeFalse(\"this test can't run on Windows\", Constants.WINDOWS);\n\n    MockDirectoryWrapper dir = newMockDirectory();\n    if (TestUtil.isWindowsFS(dir)) {\n      dir.close();\n      assumeFalse(\"this test can't run on simulated windows (WindowsFS)\", true);\n    }\n    \n    // don't act like windows either, or the test won't simulate the condition\n    dir.setEnableVirusScanner(false);\n\n    // Allow deletion of still open files:\n    dir.setNoDeleteOpenFile(false);\n\n    // Allow writing to same file more than once:\n    dir.setPreventDoubleWrite(false);\n\n    IndexWriterConfig iwc = newIndexWriterConfig(new MockAnalyzer(random()));\n    LogMergePolicy lmp = new LogDocMergePolicy();\n    lmp.setMergeFactor(2);\n    iwc.setMergePolicy(lmp);\n\n    RandomIndexWriter w = new RandomIndexWriter(random(), dir, iwc);\n    Document doc = new Document();\n    doc.add(new TextField(\"a\", \"foo\", Field.Store.NO));\n    w.addDocument(doc);\n    w.commit();\n    w.addDocument(doc);\n\n    // Get a new reader, but this also sets off a merge:\n    IndexReader r = w.getReader();\n    w.close();\n\n    // Blow away index and make a new writer:\n    for(String fileName : dir.listAll()) {\n      dir.deleteFile(fileName);\n    }\n\n    w = new RandomIndexWriter(random(), dir);\n    w.addDocument(doc);\n    w.close();\n    r.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6bfe104fc023fadc9e709f8d17403d2cc61133fe","date":1454446396,"type":3,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestNRTReaderCleanup#testClosingNRTReaderDoesNotCorruptYourIndex().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestNRTReaderCleanup#testClosingNRTReaderDoesNotCorruptYourIndex().mjava","sourceNew":"  public void testClosingNRTReaderDoesNotCorruptYourIndex() throws IOException {\n\n    // Windows disallows deleting & overwriting files still\n    // open for reading:\n    assumeFalse(\"this test can't run on Windows\", Constants.WINDOWS);\n\n    MockDirectoryWrapper dir = newMockDirectory();\n    \n    // Allow writing to same file more than once:\n    dir.setPreventDoubleWrite(false);\n\n    IndexWriterConfig iwc = newIndexWriterConfig(new MockAnalyzer(random()));\n    LogMergePolicy lmp = new LogDocMergePolicy();\n    lmp.setMergeFactor(2);\n    iwc.setMergePolicy(lmp);\n\n    RandomIndexWriter w = new RandomIndexWriter(random(), dir, iwc);\n    Document doc = new Document();\n    doc.add(new TextField(\"a\", \"foo\", Field.Store.NO));\n    w.addDocument(doc);\n    w.commit();\n    w.addDocument(doc);\n\n    // Get a new reader, but this also sets off a merge:\n    IndexReader r = w.getReader();\n    w.close();\n\n    // Blow away index and make a new writer:\n    dir.deleteFiles(Arrays.asList(dir.listAll()));\n\n    w = new RandomIndexWriter(random(), dir);\n    w.addDocument(doc);\n    w.close();\n    r.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testClosingNRTReaderDoesNotCorruptYourIndex() throws IOException {\n\n    // Windows disallows deleting & overwriting files still\n    // open for reading:\n    assumeFalse(\"this test can't run on Windows\", Constants.WINDOWS);\n\n    MockDirectoryWrapper dir = newMockDirectory();\n    \n    // don't act like windows either, or the test won't simulate the condition\n    dir.setEnableVirusScanner(false);\n\n    // Allow deletion of still open files:\n    dir.setNoDeleteOpenFile(false);\n\n    // Allow writing to same file more than once:\n    dir.setPreventDoubleWrite(false);\n\n    IndexWriterConfig iwc = newIndexWriterConfig(new MockAnalyzer(random()));\n    LogMergePolicy lmp = new LogDocMergePolicy();\n    lmp.setMergeFactor(2);\n    iwc.setMergePolicy(lmp);\n\n    RandomIndexWriter w = new RandomIndexWriter(random(), dir, iwc);\n    Document doc = new Document();\n    doc.add(new TextField(\"a\", \"foo\", Field.Store.NO));\n    w.addDocument(doc);\n    w.commit();\n    w.addDocument(doc);\n\n    // Get a new reader, but this also sets off a merge:\n    IndexReader r = w.getReader();\n    w.close();\n\n    // Blow away index and make a new writer:\n    for(String fileName : dir.listAll()) {\n      dir.deleteFile(fileName);\n    }\n\n    w = new RandomIndexWriter(random(), dir);\n    w.addDocument(doc);\n    w.close();\n    r.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"8f4e2dcb5e470991d83a63c264bfe20880d3b3c1","date":1454513757,"type":3,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestNRTReaderCleanup#testClosingNRTReaderDoesNotCorruptYourIndex().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestNRTReaderCleanup#testClosingNRTReaderDoesNotCorruptYourIndex().mjava","sourceNew":"  public void testClosingNRTReaderDoesNotCorruptYourIndex() throws IOException {\n\n    // Windows disallows deleting & overwriting files still\n    // open for reading:\n    assumeFalse(\"this test can't run on Windows\", Constants.WINDOWS);\n\n    MockDirectoryWrapper dir = newMockDirectory();\n    \n    // Allow writing to same file more than once:\n    dir.setPreventDoubleWrite(false);\n\n    IndexWriterConfig iwc = newIndexWriterConfig(new MockAnalyzer(random()));\n    LogMergePolicy lmp = new LogDocMergePolicy();\n    lmp.setMergeFactor(2);\n    iwc.setMergePolicy(lmp);\n\n    RandomIndexWriter w = new RandomIndexWriter(random(), dir, iwc);\n    Document doc = new Document();\n    doc.add(new TextField(\"a\", \"foo\", Field.Store.NO));\n    w.addDocument(doc);\n    w.commit();\n    w.addDocument(doc);\n\n    // Get a new reader, but this also sets off a merge:\n    IndexReader r = w.getReader();\n    w.close();\n\n    // Blow away index and make a new writer:\n    for(String name : dir.listAll()) {\n      dir.deleteFile(name);\n    }\n\n    w = new RandomIndexWriter(random(), dir);\n    w.addDocument(doc);\n    w.close();\n    r.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testClosingNRTReaderDoesNotCorruptYourIndex() throws IOException {\n\n    // Windows disallows deleting & overwriting files still\n    // open for reading:\n    assumeFalse(\"this test can't run on Windows\", Constants.WINDOWS);\n\n    MockDirectoryWrapper dir = newMockDirectory();\n    \n    // Allow writing to same file more than once:\n    dir.setPreventDoubleWrite(false);\n\n    IndexWriterConfig iwc = newIndexWriterConfig(new MockAnalyzer(random()));\n    LogMergePolicy lmp = new LogDocMergePolicy();\n    lmp.setMergeFactor(2);\n    iwc.setMergePolicy(lmp);\n\n    RandomIndexWriter w = new RandomIndexWriter(random(), dir, iwc);\n    Document doc = new Document();\n    doc.add(new TextField(\"a\", \"foo\", Field.Store.NO));\n    w.addDocument(doc);\n    w.commit();\n    w.addDocument(doc);\n\n    // Get a new reader, but this also sets off a merge:\n    IndexReader r = w.getReader();\n    w.close();\n\n    // Blow away index and make a new writer:\n    dir.deleteFiles(Arrays.asList(dir.listAll()));\n\n    w = new RandomIndexWriter(random(), dir);\n    w.addDocument(doc);\n    w.close();\n    r.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"b470f36a9372c97283360b1304eacbde22df6c0d","date":1454765175,"type":3,"author":"Mike McCandless","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestNRTReaderCleanup#testClosingNRTReaderDoesNotCorruptYourIndex().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestNRTReaderCleanup#testClosingNRTReaderDoesNotCorruptYourIndex().mjava","sourceNew":"  public void testClosingNRTReaderDoesNotCorruptYourIndex() throws IOException {\n\n    // Windows disallows deleting & overwriting files still\n    // open for reading:\n    assumeFalse(\"this test can't run on Windows\", Constants.WINDOWS);\n\n    MockDirectoryWrapper dir = newMockDirectory();\n    \n    // Allow writing to same file more than once:\n    dir.setPreventDoubleWrite(false);\n\n    IndexWriterConfig iwc = newIndexWriterConfig(new MockAnalyzer(random()));\n    LogMergePolicy lmp = new LogDocMergePolicy();\n    lmp.setMergeFactor(2);\n    iwc.setMergePolicy(lmp);\n\n    RandomIndexWriter w = new RandomIndexWriter(random(), dir, iwc);\n    Document doc = new Document();\n    doc.add(new TextField(\"a\", \"foo\", Field.Store.NO));\n    w.addDocument(doc);\n    w.commit();\n    w.addDocument(doc);\n\n    // Get a new reader, but this also sets off a merge:\n    IndexReader r = w.getReader();\n    w.close();\n\n    // Blow away index and make a new writer:\n    for(String name : dir.listAll()) {\n      dir.deleteFile(name);\n    }\n\n    w = new RandomIndexWriter(random(), dir);\n    w.addDocument(doc);\n    w.close();\n    r.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testClosingNRTReaderDoesNotCorruptYourIndex() throws IOException {\n\n    // Windows disallows deleting & overwriting files still\n    // open for reading:\n    assumeFalse(\"this test can't run on Windows\", Constants.WINDOWS);\n\n    MockDirectoryWrapper dir = newMockDirectory();\n    \n    // don't act like windows either, or the test won't simulate the condition\n    dir.setEnableVirusScanner(false);\n\n    // Allow deletion of still open files:\n    dir.setNoDeleteOpenFile(false);\n\n    // Allow writing to same file more than once:\n    dir.setPreventDoubleWrite(false);\n\n    IndexWriterConfig iwc = newIndexWriterConfig(new MockAnalyzer(random()));\n    LogMergePolicy lmp = new LogDocMergePolicy();\n    lmp.setMergeFactor(2);\n    iwc.setMergePolicy(lmp);\n\n    RandomIndexWriter w = new RandomIndexWriter(random(), dir, iwc);\n    Document doc = new Document();\n    doc.add(new TextField(\"a\", \"foo\", Field.Store.NO));\n    w.addDocument(doc);\n    w.commit();\n    w.addDocument(doc);\n\n    // Get a new reader, but this also sets off a merge:\n    IndexReader r = w.getReader();\n    w.close();\n\n    // Blow away index and make a new writer:\n    for(String fileName : dir.listAll()) {\n      dir.deleteFile(fileName);\n    }\n\n    w = new RandomIndexWriter(random(), dir);\n    w.addDocument(doc);\n    w.close();\n    r.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"1e6acbaae7af722f17204ceccf0f7db5753eccf3","date":1454775255,"type":3,"author":"Mike McCandless","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestNRTReaderCleanup#testClosingNRTReaderDoesNotCorruptYourIndex().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestNRTReaderCleanup#testClosingNRTReaderDoesNotCorruptYourIndex().mjava","sourceNew":"  public void testClosingNRTReaderDoesNotCorruptYourIndex() throws IOException {\n\n    // Windows disallows deleting & overwriting files still\n    // open for reading:\n    assumeFalse(\"this test can't run on Windows\", Constants.WINDOWS);\n\n    MockDirectoryWrapper dir = newMockDirectory();\n    \n    // Allow writing to same file more than once:\n    dir.setPreventDoubleWrite(false);\n\n    IndexWriterConfig iwc = newIndexWriterConfig(new MockAnalyzer(random()));\n    LogMergePolicy lmp = new LogDocMergePolicy();\n    lmp.setMergeFactor(2);\n    iwc.setMergePolicy(lmp);\n\n    RandomIndexWriter w = new RandomIndexWriter(random(), dir, iwc);\n    Document doc = new Document();\n    doc.add(new TextField(\"a\", \"foo\", Field.Store.NO));\n    w.addDocument(doc);\n    w.commit();\n    w.addDocument(doc);\n\n    // Get a new reader, but this also sets off a merge:\n    IndexReader r = w.getReader();\n    w.close();\n\n    // Blow away index and make a new writer:\n    for(String name : dir.listAll()) {\n      dir.deleteFile(name);\n    }\n\n    w = new RandomIndexWriter(random(), dir);\n    w.addDocument(doc);\n    w.close();\n    r.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testClosingNRTReaderDoesNotCorruptYourIndex() throws IOException {\n\n    // Windows disallows deleting & overwriting files still\n    // open for reading:\n    assumeFalse(\"this test can't run on Windows\", Constants.WINDOWS);\n\n    MockDirectoryWrapper dir = newMockDirectory();\n    \n    // don't act like windows either, or the test won't simulate the condition\n    dir.setEnableVirusScanner(false);\n\n    // Allow deletion of still open files:\n    dir.setNoDeleteOpenFile(false);\n\n    // Allow writing to same file more than once:\n    dir.setPreventDoubleWrite(false);\n\n    IndexWriterConfig iwc = newIndexWriterConfig(new MockAnalyzer(random()));\n    LogMergePolicy lmp = new LogDocMergePolicy();\n    lmp.setMergeFactor(2);\n    iwc.setMergePolicy(lmp);\n\n    RandomIndexWriter w = new RandomIndexWriter(random(), dir, iwc);\n    Document doc = new Document();\n    doc.add(new TextField(\"a\", \"foo\", Field.Store.NO));\n    w.addDocument(doc);\n    w.commit();\n    w.addDocument(doc);\n\n    // Get a new reader, but this also sets off a merge:\n    IndexReader r = w.getReader();\n    w.close();\n\n    // Blow away index and make a new writer:\n    for(String fileName : dir.listAll()) {\n      dir.deleteFile(fileName);\n    }\n\n    w = new RandomIndexWriter(random(), dir);\n    w.addDocument(doc);\n    w.close();\n    r.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5a207d19eac354d649c3f0e2cce070017c78125e","date":1454776470,"type":3,"author":"Erick Erickson","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestNRTReaderCleanup#testClosingNRTReaderDoesNotCorruptYourIndex().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestNRTReaderCleanup#testClosingNRTReaderDoesNotCorruptYourIndex().mjava","sourceNew":"  public void testClosingNRTReaderDoesNotCorruptYourIndex() throws IOException {\n\n    // Windows disallows deleting & overwriting files still\n    // open for reading:\n    assumeFalse(\"this test can't run on Windows\", Constants.WINDOWS);\n\n    MockDirectoryWrapper dir = newMockDirectory();\n    \n    // Allow writing to same file more than once:\n    dir.setPreventDoubleWrite(false);\n\n    IndexWriterConfig iwc = newIndexWriterConfig(new MockAnalyzer(random()));\n    LogMergePolicy lmp = new LogDocMergePolicy();\n    lmp.setMergeFactor(2);\n    iwc.setMergePolicy(lmp);\n\n    RandomIndexWriter w = new RandomIndexWriter(random(), dir, iwc);\n    Document doc = new Document();\n    doc.add(new TextField(\"a\", \"foo\", Field.Store.NO));\n    w.addDocument(doc);\n    w.commit();\n    w.addDocument(doc);\n\n    // Get a new reader, but this also sets off a merge:\n    IndexReader r = w.getReader();\n    w.close();\n\n    // Blow away index and make a new writer:\n    for(String name : dir.listAll()) {\n      dir.deleteFile(name);\n    }\n\n    w = new RandomIndexWriter(random(), dir);\n    w.addDocument(doc);\n    w.close();\n    r.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testClosingNRTReaderDoesNotCorruptYourIndex() throws IOException {\n\n    // Windows disallows deleting & overwriting files still\n    // open for reading:\n    assumeFalse(\"this test can't run on Windows\", Constants.WINDOWS);\n\n    MockDirectoryWrapper dir = newMockDirectory();\n    \n    // don't act like windows either, or the test won't simulate the condition\n    dir.setEnableVirusScanner(false);\n\n    // Allow deletion of still open files:\n    dir.setNoDeleteOpenFile(false);\n\n    // Allow writing to same file more than once:\n    dir.setPreventDoubleWrite(false);\n\n    IndexWriterConfig iwc = newIndexWriterConfig(new MockAnalyzer(random()));\n    LogMergePolicy lmp = new LogDocMergePolicy();\n    lmp.setMergeFactor(2);\n    iwc.setMergePolicy(lmp);\n\n    RandomIndexWriter w = new RandomIndexWriter(random(), dir, iwc);\n    Document doc = new Document();\n    doc.add(new TextField(\"a\", \"foo\", Field.Store.NO));\n    w.addDocument(doc);\n    w.commit();\n    w.addDocument(doc);\n\n    // Get a new reader, but this also sets off a merge:\n    IndexReader r = w.getReader();\n    w.close();\n\n    // Blow away index and make a new writer:\n    for(String fileName : dir.listAll()) {\n      dir.deleteFile(fileName);\n    }\n\n    w = new RandomIndexWriter(random(), dir);\n    w.addDocument(doc);\n    w.close();\n    r.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"11c6df42fb3eba174c3ca0d9a5194eaecd893b77","date":1465931757,"type":3,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestNRTReaderCleanup#testClosingNRTReaderDoesNotCorruptYourIndex().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestNRTReaderCleanup#testClosingNRTReaderDoesNotCorruptYourIndex().mjava","sourceNew":"  public void testClosingNRTReaderDoesNotCorruptYourIndex() throws IOException {\n\n    // Windows disallows deleting & overwriting files still\n    // open for reading:\n    assumeFalse(\"this test can't run on Windows\", Constants.WINDOWS);\n\n    MockDirectoryWrapper dir = newMockDirectory();\n    \n    IndexWriterConfig iwc = newIndexWriterConfig(new MockAnalyzer(random()));\n    LogMergePolicy lmp = new LogDocMergePolicy();\n    lmp.setMergeFactor(2);\n    iwc.setMergePolicy(lmp);\n\n    RandomIndexWriter w = new RandomIndexWriter(random(), dir, iwc);\n    Document doc = new Document();\n    doc.add(new TextField(\"a\", \"foo\", Field.Store.NO));\n    w.addDocument(doc);\n    w.commit();\n    w.addDocument(doc);\n\n    // Get a new reader, but this also sets off a merge:\n    IndexReader r = w.getReader();\n    w.close();\n\n    // Blow away index and make a new writer:\n    for(String name : dir.listAll()) {\n      dir.deleteFile(name);\n    }\n\n    w = new RandomIndexWriter(random(), dir);\n    w.addDocument(doc);\n    w.close();\n    r.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testClosingNRTReaderDoesNotCorruptYourIndex() throws IOException {\n\n    // Windows disallows deleting & overwriting files still\n    // open for reading:\n    assumeFalse(\"this test can't run on Windows\", Constants.WINDOWS);\n\n    MockDirectoryWrapper dir = newMockDirectory();\n    \n    // Allow writing to same file more than once:\n    dir.setPreventDoubleWrite(false);\n\n    IndexWriterConfig iwc = newIndexWriterConfig(new MockAnalyzer(random()));\n    LogMergePolicy lmp = new LogDocMergePolicy();\n    lmp.setMergeFactor(2);\n    iwc.setMergePolicy(lmp);\n\n    RandomIndexWriter w = new RandomIndexWriter(random(), dir, iwc);\n    Document doc = new Document();\n    doc.add(new TextField(\"a\", \"foo\", Field.Store.NO));\n    w.addDocument(doc);\n    w.commit();\n    w.addDocument(doc);\n\n    // Get a new reader, but this also sets off a merge:\n    IndexReader r = w.getReader();\n    w.close();\n\n    // Blow away index and make a new writer:\n    for(String name : dir.listAll()) {\n      dir.deleteFile(name);\n    }\n\n    w = new RandomIndexWriter(random(), dir);\n    w.addDocument(doc);\n    w.close();\n    r.close();\n    dir.close();\n  }\n\n","bugFix":["bda0fc5c3d9b2f54f3539261daa7fe9c789bac5c"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestNRTReaderCleanup#testClosingNRTReaderDoesNotCorruptYourIndex().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestNRTReaderCleanup#testClosingNRTReaderDoesNotCorruptYourIndex().mjava","sourceNew":"  public void testClosingNRTReaderDoesNotCorruptYourIndex() throws IOException {\n\n    // Windows disallows deleting & overwriting files still\n    // open for reading:\n    assumeFalse(\"this test can't run on Windows\", Constants.WINDOWS);\n\n    MockDirectoryWrapper dir = newMockDirectory();\n    \n    IndexWriterConfig iwc = newIndexWriterConfig(new MockAnalyzer(random()));\n    LogMergePolicy lmp = new LogDocMergePolicy();\n    lmp.setMergeFactor(2);\n    iwc.setMergePolicy(lmp);\n\n    RandomIndexWriter w = new RandomIndexWriter(random(), dir, iwc);\n    Document doc = new Document();\n    doc.add(new TextField(\"a\", \"foo\", Field.Store.NO));\n    w.addDocument(doc);\n    w.commit();\n    w.addDocument(doc);\n\n    // Get a new reader, but this also sets off a merge:\n    IndexReader r = w.getReader();\n    w.close();\n\n    // Blow away index and make a new writer:\n    for(String name : dir.listAll()) {\n      dir.deleteFile(name);\n    }\n\n    w = new RandomIndexWriter(random(), dir);\n    w.addDocument(doc);\n    w.close();\n    r.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testClosingNRTReaderDoesNotCorruptYourIndex() throws IOException {\n\n    // Windows disallows deleting & overwriting files still\n    // open for reading:\n    assumeFalse(\"this test can't run on Windows\", Constants.WINDOWS);\n\n    MockDirectoryWrapper dir = newMockDirectory();\n    \n    // Allow writing to same file more than once:\n    dir.setPreventDoubleWrite(false);\n\n    IndexWriterConfig iwc = newIndexWriterConfig(new MockAnalyzer(random()));\n    LogMergePolicy lmp = new LogDocMergePolicy();\n    lmp.setMergeFactor(2);\n    iwc.setMergePolicy(lmp);\n\n    RandomIndexWriter w = new RandomIndexWriter(random(), dir, iwc);\n    Document doc = new Document();\n    doc.add(new TextField(\"a\", \"foo\", Field.Store.NO));\n    w.addDocument(doc);\n    w.commit();\n    w.addDocument(doc);\n\n    // Get a new reader, but this also sets off a merge:\n    IndexReader r = w.getReader();\n    w.close();\n\n    // Blow away index and make a new writer:\n    for(String name : dir.listAll()) {\n      dir.deleteFile(name);\n    }\n\n    w = new RandomIndexWriter(random(), dir);\n    w.addDocument(doc);\n    w.close();\n    r.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"8f4e2dcb5e470991d83a63c264bfe20880d3b3c1":["6bfe104fc023fadc9e709f8d17403d2cc61133fe"],"b185840df853cd910fb9ef34e8ad534560d3ce5a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"5a207d19eac354d649c3f0e2cce070017c78125e":["b185840df853cd910fb9ef34e8ad534560d3ce5a","b470f36a9372c97283360b1304eacbde22df6c0d"],"b470f36a9372c97283360b1304eacbde22df6c0d":["b185840df853cd910fb9ef34e8ad534560d3ce5a","8f4e2dcb5e470991d83a63c264bfe20880d3b3c1"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"1e6acbaae7af722f17204ceccf0f7db5753eccf3":["b185840df853cd910fb9ef34e8ad534560d3ce5a","b470f36a9372c97283360b1304eacbde22df6c0d"],"11c6df42fb3eba174c3ca0d9a5194eaecd893b77":["5a207d19eac354d649c3f0e2cce070017c78125e"],"6bfe104fc023fadc9e709f8d17403d2cc61133fe":["b185840df853cd910fb9ef34e8ad534560d3ce5a"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["5a207d19eac354d649c3f0e2cce070017c78125e","11c6df42fb3eba174c3ca0d9a5194eaecd893b77"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["11c6df42fb3eba174c3ca0d9a5194eaecd893b77"]},"commit2Childs":{"8f4e2dcb5e470991d83a63c264bfe20880d3b3c1":["b470f36a9372c97283360b1304eacbde22df6c0d"],"b185840df853cd910fb9ef34e8ad534560d3ce5a":["5a207d19eac354d649c3f0e2cce070017c78125e","b470f36a9372c97283360b1304eacbde22df6c0d","1e6acbaae7af722f17204ceccf0f7db5753eccf3","6bfe104fc023fadc9e709f8d17403d2cc61133fe"],"5a207d19eac354d649c3f0e2cce070017c78125e":["11c6df42fb3eba174c3ca0d9a5194eaecd893b77","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"b470f36a9372c97283360b1304eacbde22df6c0d":["5a207d19eac354d649c3f0e2cce070017c78125e","1e6acbaae7af722f17204ceccf0f7db5753eccf3"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b185840df853cd910fb9ef34e8ad534560d3ce5a"],"1e6acbaae7af722f17204ceccf0f7db5753eccf3":[],"6bfe104fc023fadc9e709f8d17403d2cc61133fe":["8f4e2dcb5e470991d83a63c264bfe20880d3b3c1"],"11c6df42fb3eba174c3ca0d9a5194eaecd893b77":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["1e6acbaae7af722f17204ceccf0f7db5753eccf3","4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}