{"path":"lucene/spatial3d/src/test/org/apache/lucene/spatial3d/geom/CompositeGeoPolygonRelationshipsTest#testMultiPolygon1().mjava","commits":[{"id":"0ca94ad4d6120f10fa13ce40a60a7fd1ede51705","date":1501767131,"type":0,"author":"Karl Wright","isMerge":false,"pathNew":"lucene/spatial3d/src/test/org/apache/lucene/spatial3d/geom/CompositeGeoPolygonRelationshipsTest#testMultiPolygon1().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testMultiPolygon1() {\n    //MULTIPOLYGON(((-145.790967486 -5.17543698881, -145.790854979 -5.11348060995, -145.853073512 -5.11339421216, -145.853192037 -5.17535061936, -145.790967486 -5.17543698881)),\n    //((-145.8563923 -5.17527125408, -145.856222168 -5.11332154814, -145.918433943 -5.11317773171, -145.918610092 -5.17512738429, -145.8563923 -5.17527125408)))\n    GeoPolygon multiPol=  getMultiPolygon();\n\n    //POLYGON((-145.8555 -5.13, -145.8540 -5.13, -145.8540 -5.12, -145.8555 -5.12, -145.8555 -5.13))\n    GeoPolygon polConvex = buildGeoPolygon(-145.8555, -5.13,\n        -145.8540, -5.13,\n        -145.8540, -5.12,\n        -145.8555, -5.12,\n        -145.8555, -5.12);\n\n    GeoPolygon polConcave = buildConcaveGeoPolygon(-145.8555, -5.13,\n        -145.8540, -5.13,\n        -145.8540, -5.12,\n        -145.8555, -5.12);\n\n    int rel = multiPol.getRelationship(polConvex);\n    assertEquals(GeoArea.DISJOINT, rel);\n    rel = polConvex.getRelationship(multiPol);\n    assertEquals(GeoArea.DISJOINT, rel);\n    assertEquals(false,multiPol.intersects(polConvex));\n    assertEquals(false,polConvex.intersects(multiPol));\n\n    rel = multiPol.getRelationship(polConcave);\n    assertEquals(GeoArea.CONTAINS, rel);\n    rel = polConcave.getRelationship(multiPol);\n    assertEquals(GeoArea.WITHIN, rel);\n    assertEquals(false,multiPol.intersects(polConcave));\n    assertEquals(false,polConcave.intersects(multiPol));\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7a23cf16c8fa265dc0a564adcabb55e3f054e0ac","date":1502192746,"type":0,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"lucene/spatial3d/src/test/org/apache/lucene/spatial3d/geom/CompositeGeoPolygonRelationshipsTest#testMultiPolygon1().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testMultiPolygon1() {\n    //MULTIPOLYGON(((-145.790967486 -5.17543698881, -145.790854979 -5.11348060995, -145.853073512 -5.11339421216, -145.853192037 -5.17535061936, -145.790967486 -5.17543698881)),\n    //((-145.8563923 -5.17527125408, -145.856222168 -5.11332154814, -145.918433943 -5.11317773171, -145.918610092 -5.17512738429, -145.8563923 -5.17527125408)))\n    GeoPolygon multiPol=  getMultiPolygon();\n\n    //POLYGON((-145.8555 -5.13, -145.8540 -5.13, -145.8540 -5.12, -145.8555 -5.12, -145.8555 -5.13))\n    GeoPolygon polConvex = buildGeoPolygon(-145.8555, -5.13,\n        -145.8540, -5.13,\n        -145.8540, -5.12,\n        -145.8555, -5.12,\n        -145.8555, -5.12);\n\n    GeoPolygon polConcave = buildConcaveGeoPolygon(-145.8555, -5.13,\n        -145.8540, -5.13,\n        -145.8540, -5.12,\n        -145.8555, -5.12);\n\n    int rel = multiPol.getRelationship(polConvex);\n    assertEquals(GeoArea.DISJOINT, rel);\n    rel = polConvex.getRelationship(multiPol);\n    assertEquals(GeoArea.DISJOINT, rel);\n    assertEquals(false,multiPol.intersects(polConvex));\n    assertEquals(false,polConvex.intersects(multiPol));\n\n    rel = multiPol.getRelationship(polConcave);\n    assertEquals(GeoArea.CONTAINS, rel);\n    rel = polConcave.getRelationship(multiPol);\n    assertEquals(GeoArea.WITHIN, rel);\n    assertEquals(false,multiPol.intersects(polConcave));\n    assertEquals(false,polConcave.intersects(multiPol));\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"7a23cf16c8fa265dc0a564adcabb55e3f054e0ac":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","0ca94ad4d6120f10fa13ce40a60a7fd1ede51705"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"0ca94ad4d6120f10fa13ce40a60a7fd1ede51705":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["0ca94ad4d6120f10fa13ce40a60a7fd1ede51705"]},"commit2Childs":{"7a23cf16c8fa265dc0a564adcabb55e3f054e0ac":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["7a23cf16c8fa265dc0a564adcabb55e3f054e0ac","0ca94ad4d6120f10fa13ce40a60a7fd1ede51705"],"0ca94ad4d6120f10fa13ce40a60a7fd1ede51705":["7a23cf16c8fa265dc0a564adcabb55e3f054e0ac","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["7a23cf16c8fa265dc0a564adcabb55e3f054e0ac","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}