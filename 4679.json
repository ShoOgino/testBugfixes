{"path":"solr/solrj/src/test/org/apache/solr/client/solrj/embedded/MultiCoreExampleJettyTest#setUp().mjava","commits":[{"id":"c903c3d15906a3da96b8c0c2fb704491005fdbdb","date":1453508227,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/embedded/MultiCoreExampleJettyTest#setUp().mjava","pathOld":"solr/src/test/org/apache/solr/client/solrj/embedded/MultiCoreExampleJettyTest#setUp().mjava","sourceNew":"  @Override public void setUp() throws Exception \n  {    \n    // TODO: fix this test to use MockDirectoryFactory\n    System.clearProperty(\"solr.directoryFactory\");\n    super.setUp();\n\n    jetty = new JettySolrRunner( context, 0 );\n    jetty.start(false);\n    port = jetty.getLocalPort();\n\n    h.getCoreContainer().setPersistent(false);    \n  }\n\n","sourceOld":"  @Override public void setUp() throws Exception \n  {    \n    // TODO: fix this test to use MockDirectoryFactory\n    System.clearProperty(\"solr.directoryFactory\");\n    super.setUp();\n\n    jetty = new JettySolrRunner( context, 0 );\n    jetty.start(false);\n    port = jetty.getLocalPort();\n\n    h.getCoreContainer().setPersistent(false);    \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a258fbb26824fd104ed795e5d9033d2d040049ee","date":1453508252,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/embedded/MultiCoreExampleJettyTest#setUp().mjava","pathOld":"solr/src/test/org/apache/solr/client/solrj/embedded/MultiCoreExampleJettyTest#setUp().mjava","sourceNew":"  @Override public void setUp() throws Exception \n  {    \n    // TODO: fix this test to use MockDirectoryFactory\n    System.clearProperty(\"solr.directoryFactory\");\n    super.setUp();\n\n    jetty = new JettySolrRunner( context, 0 );\n    jetty.start(false);\n    port = jetty.getLocalPort();\n\n    h.getCoreContainer().setPersistent(false);    \n  }\n\n","sourceOld":"  @Override public void setUp() throws Exception \n  {    \n    // TODO: fix this test to use MockDirectoryFactory\n    System.clearProperty(\"solr.directoryFactory\");\n    super.setUp();\n\n    jetty = new JettySolrRunner( context, 0 );\n    jetty.start(false);\n    port = jetty.getLocalPort();\n\n    h.getCoreContainer().setPersistent(false);    \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/embedded/MultiCoreExampleJettyTest#setUp().mjava","pathOld":"solr/src/test/org/apache/solr/client/solrj/embedded/MultiCoreExampleJettyTest#setUp().mjava","sourceNew":"  @Override public void setUp() throws Exception \n  {    \n    // TODO: fix this test to use MockDirectoryFactory\n    System.clearProperty(\"solr.directoryFactory\");\n    super.setUp();\n\n    jetty = new JettySolrRunner( context, 0 );\n    jetty.start(false);\n    port = jetty.getLocalPort();\n\n    h.getCoreContainer().setPersistent(false);    \n  }\n\n","sourceOld":"  @Override public void setUp() throws Exception \n  {    \n    // TODO: fix this test to use MockDirectoryFactory\n    System.clearProperty(\"solr.directoryFactory\");\n    super.setUp();\n\n    jetty = new JettySolrRunner( context, 0 );\n    jetty.start(false);\n    port = jetty.getLocalPort();\n\n    h.getCoreContainer().setPersistent(false);    \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2c007e7c4cf8c55bc2a5884e315123afaaeec87f","date":1327520966,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/embedded/MultiCoreExampleJettyTest#setUp().mjava","pathOld":"solr/solrj/src/test/org/apache/solr/client/solrj/embedded/MultiCoreExampleJettyTest#setUp().mjava","sourceNew":"  @Override public void setUp() throws Exception \n  {    \n    // TODO: fix this test to use MockDirectoryFactory\n    System.clearProperty(\"solr.directoryFactory\");\n    super.setUp();\n\n    jetty = new JettySolrRunner(getSolrHome(), context, 0 );\n    jetty.start(false);\n    port = jetty.getLocalPort();\n\n    h.getCoreContainer().setPersistent(false);    \n  }\n\n","sourceOld":"  @Override public void setUp() throws Exception \n  {    \n    // TODO: fix this test to use MockDirectoryFactory\n    System.clearProperty(\"solr.directoryFactory\");\n    super.setUp();\n\n    jetty = new JettySolrRunner( context, 0 );\n    jetty.start(false);\n    port = jetty.getLocalPort();\n\n    h.getCoreContainer().setPersistent(false);    \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a3c68e20c73359a10cf3eb4a35c9fa7ab1f3c30d","date":1327523564,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/embedded/MultiCoreExampleJettyTest#setUp().mjava","pathOld":"solr/solrj/src/test/org/apache/solr/client/solrj/embedded/MultiCoreExampleJettyTest#setUp().mjava","sourceNew":"  @Override public void setUp() throws Exception \n  {    \n    // TODO: fix this test to use MockDirectoryFactory\n    System.clearProperty(\"solr.directoryFactory\");\n    super.setUp();\n\n    jetty = new JettySolrRunner(getSolrHome(), context, 0 );\n    jetty.start(false);\n    port = jetty.getLocalPort();\n\n    h.getCoreContainer().setPersistent(false);    \n  }\n\n","sourceOld":"  @Override public void setUp() throws Exception \n  {    \n    // TODO: fix this test to use MockDirectoryFactory\n    System.clearProperty(\"solr.directoryFactory\");\n    super.setUp();\n\n    jetty = new JettySolrRunner( context, 0 );\n    jetty.start(false);\n    port = jetty.getLocalPort();\n\n    h.getCoreContainer().setPersistent(false);    \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0d22ac6a4146774c1bc8400160fc0b6150294e92","date":1327528604,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/embedded/MultiCoreExampleJettyTest#setUp().mjava","pathOld":"solr/solrj/src/test/org/apache/solr/client/solrj/embedded/MultiCoreExampleJettyTest#setUp().mjava","sourceNew":"  @Override public void setUp() throws Exception \n  {    \n    // TODO: fix this test to use MockDirectoryFactory\n    System.clearProperty(\"solr.directoryFactory\");\n    super.setUp();\n\n    jetty = new JettySolrRunner(getSolrHome(), context, 0 );\n    jetty.start(false);\n    port = jetty.getLocalPort();\n\n    h.getCoreContainer().setPersistent(false);    \n  }\n\n","sourceOld":"  @Override public void setUp() throws Exception \n  {    \n    // TODO: fix this test to use MockDirectoryFactory\n    System.clearProperty(\"solr.directoryFactory\");\n    super.setUp();\n\n    jetty = new JettySolrRunner( context, 0 );\n    jetty.start(false);\n    port = jetty.getLocalPort();\n\n    h.getCoreContainer().setPersistent(false);    \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d9405f486872f1e416304dfe389741f4ee2f8a4d","date":1351276739,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/embedded/MultiCoreExampleJettyTest#setUp().mjava","pathOld":"solr/solrj/src/test/org/apache/solr/client/solrj/embedded/MultiCoreExampleJettyTest#setUp().mjava","sourceNew":"  @Override public void setUp() throws Exception \n  {    \n    // TODO: fix this test to use MockDirectoryFactory\n    System.clearProperty(\"solr.directoryFactory\");\n    super.setUp();\n\n    jetty = new JettySolrRunner(getSolrHome(), context, 0 );\n    jetty.start(false);\n    port = jetty.getLocalPort();\n\n    cores.setPersistent(false);    \n  }\n\n","sourceOld":"  @Override public void setUp() throws Exception \n  {    \n    // TODO: fix this test to use MockDirectoryFactory\n    System.clearProperty(\"solr.directoryFactory\");\n    super.setUp();\n\n    jetty = new JettySolrRunner(getSolrHome(), context, 0 );\n    jetty.start(false);\n    port = jetty.getLocalPort();\n\n    h.getCoreContainer().setPersistent(false);    \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f2126b84bd093fa3d921582a109a0ee578c28126","date":1351522501,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/embedded/MultiCoreExampleJettyTest#setUp().mjava","pathOld":"solr/solrj/src/test/org/apache/solr/client/solrj/embedded/MultiCoreExampleJettyTest#setUp().mjava","sourceNew":"  @Override public void setUp() throws Exception \n  {    \n    // TODO: fix this test to use MockDirectoryFactory\n    System.clearProperty(\"solr.directoryFactory\");\n    super.setUp();\n\n    jetty = new JettySolrRunner(getSolrHome(), context, 0 );\n    jetty.start(false);\n    port = jetty.getLocalPort();\n\n    cores.setPersistent(false);    \n  }\n\n","sourceOld":"  @Override public void setUp() throws Exception \n  {    \n    // TODO: fix this test to use MockDirectoryFactory\n    System.clearProperty(\"solr.directoryFactory\");\n    super.setUp();\n\n    jetty = new JettySolrRunner(getSolrHome(), context, 0 );\n    jetty.start(false);\n    port = jetty.getLocalPort();\n\n    h.getCoreContainer().setPersistent(false);    \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"92a4da96826f502cf1a56a096929b37ce73e523a","date":1374584011,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/embedded/MultiCoreExampleJettyTest#setUp().mjava","pathOld":"solr/solrj/src/test/org/apache/solr/client/solrj/embedded/MultiCoreExampleJettyTest#setUp().mjava","sourceNew":"  @Override public void setUp() throws Exception \n  {    \n    // TODO: fix this test to use MockDirectoryFactory\n    System.clearProperty(\"solr.directoryFactory\");\n    super.setUp();\n\n    jetty = new JettySolrRunner(getSolrHome(), context, 0 );\n    jetty.start(false);\n    port = jetty.getLocalPort();\n\n  }\n\n","sourceOld":"  @Override public void setUp() throws Exception \n  {    \n    // TODO: fix this test to use MockDirectoryFactory\n    System.clearProperty(\"solr.directoryFactory\");\n    super.setUp();\n\n    jetty = new JettySolrRunner(getSolrHome(), context, 0 );\n    jetty.start(false);\n    port = jetty.getLocalPort();\n\n    cores.setPersistent(false);    \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"716d18f3a9b0993bc679d7fa7abdc9bfb03411ec","date":1376375609,"type":3,"author":"Han Jiang","isMerge":true,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/embedded/MultiCoreExampleJettyTest#setUp().mjava","pathOld":"solr/solrj/src/test/org/apache/solr/client/solrj/embedded/MultiCoreExampleJettyTest#setUp().mjava","sourceNew":"  @Override public void setUp() throws Exception \n  {    \n    // TODO: fix this test to use MockDirectoryFactory\n    System.clearProperty(\"solr.directoryFactory\");\n    super.setUp();\n\n    jetty = new JettySolrRunner(getSolrHome(), context, 0 );\n    jetty.start(false);\n    port = jetty.getLocalPort();\n\n  }\n\n","sourceOld":"  @Override public void setUp() throws Exception \n  {    \n    // TODO: fix this test to use MockDirectoryFactory\n    System.clearProperty(\"solr.directoryFactory\");\n    super.setUp();\n\n    jetty = new JettySolrRunner(getSolrHome(), context, 0 );\n    jetty.start(false);\n    port = jetty.getLocalPort();\n\n    cores.setPersistent(false);    \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"57641b2e9dc6155be493cfb6ae9b8a9c8ceffa72","date":1391985588,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/embedded/MultiCoreExampleJettyTest#setUp().mjava","pathOld":"solr/solrj/src/test/org/apache/solr/client/solrj/embedded/MultiCoreExampleJettyTest#setUp().mjava","sourceNew":"  @Override public void setUp() throws Exception \n  {    \n    // TODO: fix this test to use MockDirectoryFactory\n    System.clearProperty(\"solr.directoryFactory\");\n    super.setUp();\n\n    jetty = new JettySolrRunner(getSolrHome(), context, 0, null, null, true, null, sslConfig);\n    jetty.start(false);\n    port = jetty.getLocalPort();\n\n  }\n\n","sourceOld":"  @Override public void setUp() throws Exception \n  {    \n    // TODO: fix this test to use MockDirectoryFactory\n    System.clearProperty(\"solr.directoryFactory\");\n    super.setUp();\n\n    jetty = new JettySolrRunner(getSolrHome(), context, 0 );\n    jetty.start(false);\n    port = jetty.getLocalPort();\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6fb75838ea3c6b1fa977394f436bfffb53b417bc","date":1418226395,"type":4,"author":"Timothy Potter","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/solrj/src/test/org/apache/solr/client/solrj/embedded/MultiCoreExampleJettyTest#setUp().mjava","sourceNew":null,"sourceOld":"  @Override public void setUp() throws Exception \n  {    \n    // TODO: fix this test to use MockDirectoryFactory\n    System.clearProperty(\"solr.directoryFactory\");\n    super.setUp();\n\n    jetty = new JettySolrRunner(getSolrHome(), context, 0, null, null, true, null, sslConfig);\n    jetty.start(false);\n    port = jetty.getLocalPort();\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"716d18f3a9b0993bc679d7fa7abdc9bfb03411ec":["d9405f486872f1e416304dfe389741f4ee2f8a4d","92a4da96826f502cf1a56a096929b37ce73e523a"],"c26f00b574427b55127e869b935845554afde1fa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","c903c3d15906a3da96b8c0c2fb704491005fdbdb"],"6fb75838ea3c6b1fa977394f436bfffb53b417bc":["57641b2e9dc6155be493cfb6ae9b8a9c8ceffa72"],"92a4da96826f502cf1a56a096929b37ce73e523a":["d9405f486872f1e416304dfe389741f4ee2f8a4d"],"a3c68e20c73359a10cf3eb4a35c9fa7ab1f3c30d":["c26f00b574427b55127e869b935845554afde1fa","2c007e7c4cf8c55bc2a5884e315123afaaeec87f"],"d9405f486872f1e416304dfe389741f4ee2f8a4d":["2c007e7c4cf8c55bc2a5884e315123afaaeec87f"],"0d22ac6a4146774c1bc8400160fc0b6150294e92":["c26f00b574427b55127e869b935845554afde1fa","2c007e7c4cf8c55bc2a5884e315123afaaeec87f"],"57641b2e9dc6155be493cfb6ae9b8a9c8ceffa72":["92a4da96826f502cf1a56a096929b37ce73e523a"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"2c007e7c4cf8c55bc2a5884e315123afaaeec87f":["c26f00b574427b55127e869b935845554afde1fa"],"a258fbb26824fd104ed795e5d9033d2d040049ee":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"f2126b84bd093fa3d921582a109a0ee578c28126":["2c007e7c4cf8c55bc2a5884e315123afaaeec87f","d9405f486872f1e416304dfe389741f4ee2f8a4d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["6fb75838ea3c6b1fa977394f436bfffb53b417bc"]},"commit2Childs":{"716d18f3a9b0993bc679d7fa7abdc9bfb03411ec":[],"c26f00b574427b55127e869b935845554afde1fa":["a3c68e20c73359a10cf3eb4a35c9fa7ab1f3c30d","0d22ac6a4146774c1bc8400160fc0b6150294e92","2c007e7c4cf8c55bc2a5884e315123afaaeec87f"],"92a4da96826f502cf1a56a096929b37ce73e523a":["716d18f3a9b0993bc679d7fa7abdc9bfb03411ec","57641b2e9dc6155be493cfb6ae9b8a9c8ceffa72"],"6fb75838ea3c6b1fa977394f436bfffb53b417bc":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a3c68e20c73359a10cf3eb4a35c9fa7ab1f3c30d":[],"d9405f486872f1e416304dfe389741f4ee2f8a4d":["716d18f3a9b0993bc679d7fa7abdc9bfb03411ec","92a4da96826f502cf1a56a096929b37ce73e523a","f2126b84bd093fa3d921582a109a0ee578c28126"],"0d22ac6a4146774c1bc8400160fc0b6150294e92":[],"57641b2e9dc6155be493cfb6ae9b8a9c8ceffa72":["6fb75838ea3c6b1fa977394f436bfffb53b417bc"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["c26f00b574427b55127e869b935845554afde1fa"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c26f00b574427b55127e869b935845554afde1fa","c903c3d15906a3da96b8c0c2fb704491005fdbdb","a258fbb26824fd104ed795e5d9033d2d040049ee"],"2c007e7c4cf8c55bc2a5884e315123afaaeec87f":["a3c68e20c73359a10cf3eb4a35c9fa7ab1f3c30d","d9405f486872f1e416304dfe389741f4ee2f8a4d","0d22ac6a4146774c1bc8400160fc0b6150294e92","f2126b84bd093fa3d921582a109a0ee578c28126"],"a258fbb26824fd104ed795e5d9033d2d040049ee":[],"f2126b84bd093fa3d921582a109a0ee578c28126":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["716d18f3a9b0993bc679d7fa7abdc9bfb03411ec","a3c68e20c73359a10cf3eb4a35c9fa7ab1f3c30d","0d22ac6a4146774c1bc8400160fc0b6150294e92","a258fbb26824fd104ed795e5d9033d2d040049ee","f2126b84bd093fa3d921582a109a0ee578c28126","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}