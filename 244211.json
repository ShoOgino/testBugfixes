{"path":"solr/core/src/test/org/apache/solr/SolrInfoMBeanTest#testCallMBeanInfo().mjava","commits":[{"id":"c903c3d15906a3da96b8c0c2fb704491005fdbdb","date":1453508227,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/SolrInfoMBeanTest#testCallMBeanInfo().mjava","pathOld":"solr/src/test/org/apache/solr/SolrInfoMBeanTest#testCallMBeanInfo().mjava","sourceNew":"  /**\n   * Gets a list of everything we can find in the classpath and makes sure it has\n   * a name, description, etc...\n   */\n  public void testCallMBeanInfo() throws Exception {\n    List<Class> classes = new ArrayList<Class>();\n    classes.addAll(getClassesForPackage(StandardRequestHandler.class.getPackage().getName()));\n    classes.addAll(getClassesForPackage(SearchHandler.class.getPackage().getName()));\n    classes.addAll(getClassesForPackage(SearchComponent.class.getPackage().getName()));\n    classes.addAll(getClassesForPackage(LukeRequestHandler.class.getPackage().getName()));\n    classes.addAll(getClassesForPackage(DefaultSolrHighlighter.class.getPackage().getName()));\n    classes.addAll(getClassesForPackage(LRUCache.class.getPackage().getName()));\n   // System.out.println(classes);\n    \n    int checked = 0;\n    for( Class clazz : classes ) {\n      if( SolrInfoMBean.class.isAssignableFrom( clazz ) ) {\n        try {\n          SolrInfoMBean info = (SolrInfoMBean)clazz.newInstance();\n          \n          //System.out.println( info.getClass() );\n          assertNotNull( info.getName() );\n          assertNotNull( info.getDescription() );\n          assertNotNull( info.getSource() );\n          assertNotNull( info.getSourceId() );\n          assertNotNull( info.getVersion() );\n          assertNotNull( info.getCategory() );\n\n          if( info instanceof LRUCache ) {\n            continue;\n          }\n          \n          assertNotNull( info.toString() );\n          // increase code coverage...\n          assertNotNull( info.getDocs() + \"\" );\n          assertNotNull( info.getStatistics()+\"\" );\n          checked++;\n        }\n        catch( InstantiationException ex ) {\n          // expected...\n          //System.out.println( \"unable to initalize: \"+clazz );\n        }\n      }\n    }\n    assertTrue( \"there are at least 10 SolrInfoMBean that should be found in the classpath, found \" + checked, checked > 10 );\n  }\n\n","sourceOld":"  /**\n   * Gets a list of everything we can find in the classpath and makes sure it has\n   * a name, description, etc...\n   */\n  public void testCallMBeanInfo() throws Exception {\n    List<Class> classes = new ArrayList<Class>();\n    classes.addAll(getClassesForPackage(StandardRequestHandler.class.getPackage().getName()));\n    classes.addAll(getClassesForPackage(SearchHandler.class.getPackage().getName()));\n    classes.addAll(getClassesForPackage(SearchComponent.class.getPackage().getName()));\n    classes.addAll(getClassesForPackage(LukeRequestHandler.class.getPackage().getName()));\n    classes.addAll(getClassesForPackage(DefaultSolrHighlighter.class.getPackage().getName()));\n    classes.addAll(getClassesForPackage(LRUCache.class.getPackage().getName()));\n   // System.out.println(classes);\n    \n    int checked = 0;\n    for( Class clazz : classes ) {\n      if( SolrInfoMBean.class.isAssignableFrom( clazz ) ) {\n        try {\n          SolrInfoMBean info = (SolrInfoMBean)clazz.newInstance();\n          \n          //System.out.println( info.getClass() );\n          assertNotNull( info.getName() );\n          assertNotNull( info.getDescription() );\n          assertNotNull( info.getSource() );\n          assertNotNull( info.getSourceId() );\n          assertNotNull( info.getVersion() );\n          assertNotNull( info.getCategory() );\n\n          if( info instanceof LRUCache ) {\n            continue;\n          }\n          \n          assertNotNull( info.toString() );\n          // increase code coverage...\n          assertNotNull( info.getDocs() + \"\" );\n          assertNotNull( info.getStatistics()+\"\" );\n          checked++;\n        }\n        catch( InstantiationException ex ) {\n          // expected...\n          //System.out.println( \"unable to initalize: \"+clazz );\n        }\n      }\n    }\n    assertTrue( \"there are at least 10 SolrInfoMBean that should be found in the classpath, found \" + checked, checked > 10 );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a258fbb26824fd104ed795e5d9033d2d040049ee","date":1453508252,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/SolrInfoMBeanTest#testCallMBeanInfo().mjava","pathOld":"solr/src/test/org/apache/solr/SolrInfoMBeanTest#testCallMBeanInfo().mjava","sourceNew":"  /**\n   * Gets a list of everything we can find in the classpath and makes sure it has\n   * a name, description, etc...\n   */\n  public void testCallMBeanInfo() throws Exception {\n    List<Class> classes = new ArrayList<Class>();\n    classes.addAll(getClassesForPackage(StandardRequestHandler.class.getPackage().getName()));\n    classes.addAll(getClassesForPackage(SearchHandler.class.getPackage().getName()));\n    classes.addAll(getClassesForPackage(SearchComponent.class.getPackage().getName()));\n    classes.addAll(getClassesForPackage(LukeRequestHandler.class.getPackage().getName()));\n    classes.addAll(getClassesForPackage(DefaultSolrHighlighter.class.getPackage().getName()));\n    classes.addAll(getClassesForPackage(LRUCache.class.getPackage().getName()));\n   // System.out.println(classes);\n    \n    int checked = 0;\n    for( Class clazz : classes ) {\n      if( SolrInfoMBean.class.isAssignableFrom( clazz ) ) {\n        try {\n          SolrInfoMBean info = (SolrInfoMBean)clazz.newInstance();\n          \n          //System.out.println( info.getClass() );\n          assertNotNull( info.getName() );\n          assertNotNull( info.getDescription() );\n          assertNotNull( info.getSource() );\n          assertNotNull( info.getSourceId() );\n          assertNotNull( info.getVersion() );\n          assertNotNull( info.getCategory() );\n\n          if( info instanceof LRUCache ) {\n            continue;\n          }\n          \n          assertNotNull( info.toString() );\n          // increase code coverage...\n          assertNotNull( info.getDocs() + \"\" );\n          assertNotNull( info.getStatistics()+\"\" );\n          checked++;\n        }\n        catch( InstantiationException ex ) {\n          // expected...\n          //System.out.println( \"unable to initalize: \"+clazz );\n        }\n      }\n    }\n    assertTrue( \"there are at least 10 SolrInfoMBean that should be found in the classpath, found \" + checked, checked > 10 );\n  }\n\n","sourceOld":"  /**\n   * Gets a list of everything we can find in the classpath and makes sure it has\n   * a name, description, etc...\n   */\n  public void testCallMBeanInfo() throws Exception {\n    List<Class> classes = new ArrayList<Class>();\n    classes.addAll(getClassesForPackage(StandardRequestHandler.class.getPackage().getName()));\n    classes.addAll(getClassesForPackage(SearchHandler.class.getPackage().getName()));\n    classes.addAll(getClassesForPackage(SearchComponent.class.getPackage().getName()));\n    classes.addAll(getClassesForPackage(LukeRequestHandler.class.getPackage().getName()));\n    classes.addAll(getClassesForPackage(DefaultSolrHighlighter.class.getPackage().getName()));\n    classes.addAll(getClassesForPackage(LRUCache.class.getPackage().getName()));\n   // System.out.println(classes);\n    \n    int checked = 0;\n    for( Class clazz : classes ) {\n      if( SolrInfoMBean.class.isAssignableFrom( clazz ) ) {\n        try {\n          SolrInfoMBean info = (SolrInfoMBean)clazz.newInstance();\n          \n          //System.out.println( info.getClass() );\n          assertNotNull( info.getName() );\n          assertNotNull( info.getDescription() );\n          assertNotNull( info.getSource() );\n          assertNotNull( info.getSourceId() );\n          assertNotNull( info.getVersion() );\n          assertNotNull( info.getCategory() );\n\n          if( info instanceof LRUCache ) {\n            continue;\n          }\n          \n          assertNotNull( info.toString() );\n          // increase code coverage...\n          assertNotNull( info.getDocs() + \"\" );\n          assertNotNull( info.getStatistics()+\"\" );\n          checked++;\n        }\n        catch( InstantiationException ex ) {\n          // expected...\n          //System.out.println( \"unable to initalize: \"+clazz );\n        }\n      }\n    }\n    assertTrue( \"there are at least 10 SolrInfoMBean that should be found in the classpath, found \" + checked, checked > 10 );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/SolrInfoMBeanTest#testCallMBeanInfo().mjava","pathOld":"solr/src/test/org/apache/solr/SolrInfoMBeanTest#testCallMBeanInfo().mjava","sourceNew":"  /**\n   * Gets a list of everything we can find in the classpath and makes sure it has\n   * a name, description, etc...\n   */\n  public void testCallMBeanInfo() throws Exception {\n    List<Class> classes = new ArrayList<Class>();\n    classes.addAll(getClassesForPackage(StandardRequestHandler.class.getPackage().getName()));\n    classes.addAll(getClassesForPackage(SearchHandler.class.getPackage().getName()));\n    classes.addAll(getClassesForPackage(SearchComponent.class.getPackage().getName()));\n    classes.addAll(getClassesForPackage(LukeRequestHandler.class.getPackage().getName()));\n    classes.addAll(getClassesForPackage(DefaultSolrHighlighter.class.getPackage().getName()));\n    classes.addAll(getClassesForPackage(LRUCache.class.getPackage().getName()));\n   // System.out.println(classes);\n    \n    int checked = 0;\n    for( Class clazz : classes ) {\n      if( SolrInfoMBean.class.isAssignableFrom( clazz ) ) {\n        try {\n          SolrInfoMBean info = (SolrInfoMBean)clazz.newInstance();\n          \n          //System.out.println( info.getClass() );\n          assertNotNull( info.getName() );\n          assertNotNull( info.getDescription() );\n          assertNotNull( info.getSource() );\n          assertNotNull( info.getSourceId() );\n          assertNotNull( info.getVersion() );\n          assertNotNull( info.getCategory() );\n\n          if( info instanceof LRUCache ) {\n            continue;\n          }\n          \n          assertNotNull( info.toString() );\n          // increase code coverage...\n          assertNotNull( info.getDocs() + \"\" );\n          assertNotNull( info.getStatistics()+\"\" );\n          checked++;\n        }\n        catch( InstantiationException ex ) {\n          // expected...\n          //System.out.println( \"unable to initalize: \"+clazz );\n        }\n      }\n    }\n    assertTrue( \"there are at least 10 SolrInfoMBean that should be found in the classpath, found \" + checked, checked > 10 );\n  }\n\n","sourceOld":"  /**\n   * Gets a list of everything we can find in the classpath and makes sure it has\n   * a name, description, etc...\n   */\n  public void testCallMBeanInfo() throws Exception {\n    List<Class> classes = new ArrayList<Class>();\n    classes.addAll(getClassesForPackage(StandardRequestHandler.class.getPackage().getName()));\n    classes.addAll(getClassesForPackage(SearchHandler.class.getPackage().getName()));\n    classes.addAll(getClassesForPackage(SearchComponent.class.getPackage().getName()));\n    classes.addAll(getClassesForPackage(LukeRequestHandler.class.getPackage().getName()));\n    classes.addAll(getClassesForPackage(DefaultSolrHighlighter.class.getPackage().getName()));\n    classes.addAll(getClassesForPackage(LRUCache.class.getPackage().getName()));\n   // System.out.println(classes);\n    \n    int checked = 0;\n    for( Class clazz : classes ) {\n      if( SolrInfoMBean.class.isAssignableFrom( clazz ) ) {\n        try {\n          SolrInfoMBean info = (SolrInfoMBean)clazz.newInstance();\n          \n          //System.out.println( info.getClass() );\n          assertNotNull( info.getName() );\n          assertNotNull( info.getDescription() );\n          assertNotNull( info.getSource() );\n          assertNotNull( info.getSourceId() );\n          assertNotNull( info.getVersion() );\n          assertNotNull( info.getCategory() );\n\n          if( info instanceof LRUCache ) {\n            continue;\n          }\n          \n          assertNotNull( info.toString() );\n          // increase code coverage...\n          assertNotNull( info.getDocs() + \"\" );\n          assertNotNull( info.getStatistics()+\"\" );\n          checked++;\n        }\n        catch( InstantiationException ex ) {\n          // expected...\n          //System.out.println( \"unable to initalize: \"+clazz );\n        }\n      }\n    }\n    assertTrue( \"there are at least 10 SolrInfoMBean that should be found in the classpath, found \" + checked, checked > 10 );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"18c264904f4236696be3696a0d998a37931a8a50","date":1333699995,"type":3,"author":"Ryan McKinley","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/SolrInfoMBeanTest#testCallMBeanInfo().mjava","pathOld":"solr/core/src/test/org/apache/solr/SolrInfoMBeanTest#testCallMBeanInfo().mjava","sourceNew":"  /**\n   * Gets a list of everything we can find in the classpath and makes sure it has\n   * a name, description, etc...\n   */\n  public void testCallMBeanInfo() throws Exception {\n    List<Class> classes = new ArrayList<Class>();\n    classes.addAll(getClassesForPackage(StandardRequestHandler.class.getPackage().getName()));\n    classes.addAll(getClassesForPackage(SearchHandler.class.getPackage().getName()));\n    classes.addAll(getClassesForPackage(SearchComponent.class.getPackage().getName()));\n    classes.addAll(getClassesForPackage(LukeRequestHandler.class.getPackage().getName()));\n    classes.addAll(getClassesForPackage(DefaultSolrHighlighter.class.getPackage().getName()));\n    classes.addAll(getClassesForPackage(LRUCache.class.getPackage().getName()));\n   // System.out.println(classes);\n    \n    int checked = 0;\n    for( Class clazz : classes ) {\n      if( SolrInfoMBean.class.isAssignableFrom( clazz ) ) {\n        try {\n          SolrInfoMBean info = (SolrInfoMBean)clazz.newInstance();\n          \n          //System.out.println( info.getClass() );\n          assertNotNull( info.getName() );\n          assertNotNull( info.getDescription() );\n          assertNotNull( info.getSource() );\n          assertNotNull( info.getCategory() );\n          \n          // Make sure the URL has the classname in it\n          //assertTrue(info.getSource(), info.getSource().indexOf(info.getClass().getSimpleName()+\".java\")>0 );\n\n          if( info instanceof LRUCache ) {\n            continue;\n          }\n          \n          assertNotNull( info.toString() );\n          // increase code coverage...\n          assertNotNull( info.getDocs() + \"\" );\n          assertNotNull( info.getStatistics()+\"\" );\n          checked++;\n        }\n        catch( InstantiationException ex ) {\n          // expected...\n          //System.out.println( \"unable to initalize: \"+clazz );\n        }\n      }\n    }\n    assertTrue( \"there are at least 10 SolrInfoMBean that should be found in the classpath, found \" + checked, checked > 10 );\n  }\n\n","sourceOld":"  /**\n   * Gets a list of everything we can find in the classpath and makes sure it has\n   * a name, description, etc...\n   */\n  public void testCallMBeanInfo() throws Exception {\n    List<Class> classes = new ArrayList<Class>();\n    classes.addAll(getClassesForPackage(StandardRequestHandler.class.getPackage().getName()));\n    classes.addAll(getClassesForPackage(SearchHandler.class.getPackage().getName()));\n    classes.addAll(getClassesForPackage(SearchComponent.class.getPackage().getName()));\n    classes.addAll(getClassesForPackage(LukeRequestHandler.class.getPackage().getName()));\n    classes.addAll(getClassesForPackage(DefaultSolrHighlighter.class.getPackage().getName()));\n    classes.addAll(getClassesForPackage(LRUCache.class.getPackage().getName()));\n   // System.out.println(classes);\n    \n    int checked = 0;\n    for( Class clazz : classes ) {\n      if( SolrInfoMBean.class.isAssignableFrom( clazz ) ) {\n        try {\n          SolrInfoMBean info = (SolrInfoMBean)clazz.newInstance();\n          \n          //System.out.println( info.getClass() );\n          assertNotNull( info.getName() );\n          assertNotNull( info.getDescription() );\n          assertNotNull( info.getSource() );\n          assertNotNull( info.getSourceId() );\n          assertNotNull( info.getVersion() );\n          assertNotNull( info.getCategory() );\n\n          if( info instanceof LRUCache ) {\n            continue;\n          }\n          \n          assertNotNull( info.toString() );\n          // increase code coverage...\n          assertNotNull( info.getDocs() + \"\" );\n          assertNotNull( info.getStatistics()+\"\" );\n          checked++;\n        }\n        catch( InstantiationException ex ) {\n          // expected...\n          //System.out.println( \"unable to initalize: \"+clazz );\n        }\n      }\n    }\n    assertTrue( \"there are at least 10 SolrInfoMBean that should be found in the classpath, found \" + checked, checked > 10 );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"634f330c54fd3f9f491d52036dc3f40b4f4d8934","date":1394635157,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/SolrInfoMBeanTest#testCallMBeanInfo().mjava","pathOld":"solr/core/src/test/org/apache/solr/SolrInfoMBeanTest#testCallMBeanInfo().mjava","sourceNew":"  /**\n   * Gets a list of everything we can find in the classpath and makes sure it has\n   * a name, description, etc...\n   */\n  public void testCallMBeanInfo() throws Exception {\n    List<Class> classes = new ArrayList<>();\n    classes.addAll(getClassesForPackage(StandardRequestHandler.class.getPackage().getName()));\n    classes.addAll(getClassesForPackage(SearchHandler.class.getPackage().getName()));\n    classes.addAll(getClassesForPackage(SearchComponent.class.getPackage().getName()));\n    classes.addAll(getClassesForPackage(LukeRequestHandler.class.getPackage().getName()));\n    classes.addAll(getClassesForPackage(DefaultSolrHighlighter.class.getPackage().getName()));\n    classes.addAll(getClassesForPackage(LRUCache.class.getPackage().getName()));\n   // System.out.println(classes);\n    \n    int checked = 0;\n    for( Class clazz : classes ) {\n      if( SolrInfoMBean.class.isAssignableFrom( clazz ) ) {\n        try {\n          SolrInfoMBean info = (SolrInfoMBean)clazz.newInstance();\n          \n          //System.out.println( info.getClass() );\n          assertNotNull( info.getName() );\n          assertNotNull( info.getDescription() );\n          assertNotNull( info.getSource() );\n          assertNotNull( info.getCategory() );\n          \n          // Make sure the URL has the classname in it\n          //assertTrue(info.getSource(), info.getSource().indexOf(info.getClass().getSimpleName()+\".java\")>0 );\n\n          if( info instanceof LRUCache ) {\n            continue;\n          }\n          \n          assertNotNull( info.toString() );\n          // increase code coverage...\n          assertNotNull( info.getDocs() + \"\" );\n          assertNotNull( info.getStatistics()+\"\" );\n          checked++;\n        }\n        catch( InstantiationException ex ) {\n          // expected...\n          //System.out.println( \"unable to initalize: \"+clazz );\n        }\n      }\n    }\n    assertTrue( \"there are at least 10 SolrInfoMBean that should be found in the classpath, found \" + checked, checked > 10 );\n  }\n\n","sourceOld":"  /**\n   * Gets a list of everything we can find in the classpath and makes sure it has\n   * a name, description, etc...\n   */\n  public void testCallMBeanInfo() throws Exception {\n    List<Class> classes = new ArrayList<Class>();\n    classes.addAll(getClassesForPackage(StandardRequestHandler.class.getPackage().getName()));\n    classes.addAll(getClassesForPackage(SearchHandler.class.getPackage().getName()));\n    classes.addAll(getClassesForPackage(SearchComponent.class.getPackage().getName()));\n    classes.addAll(getClassesForPackage(LukeRequestHandler.class.getPackage().getName()));\n    classes.addAll(getClassesForPackage(DefaultSolrHighlighter.class.getPackage().getName()));\n    classes.addAll(getClassesForPackage(LRUCache.class.getPackage().getName()));\n   // System.out.println(classes);\n    \n    int checked = 0;\n    for( Class clazz : classes ) {\n      if( SolrInfoMBean.class.isAssignableFrom( clazz ) ) {\n        try {\n          SolrInfoMBean info = (SolrInfoMBean)clazz.newInstance();\n          \n          //System.out.println( info.getClass() );\n          assertNotNull( info.getName() );\n          assertNotNull( info.getDescription() );\n          assertNotNull( info.getSource() );\n          assertNotNull( info.getCategory() );\n          \n          // Make sure the URL has the classname in it\n          //assertTrue(info.getSource(), info.getSource().indexOf(info.getClass().getSimpleName()+\".java\")>0 );\n\n          if( info instanceof LRUCache ) {\n            continue;\n          }\n          \n          assertNotNull( info.toString() );\n          // increase code coverage...\n          assertNotNull( info.getDocs() + \"\" );\n          assertNotNull( info.getStatistics()+\"\" );\n          checked++;\n        }\n        catch( InstantiationException ex ) {\n          // expected...\n          //System.out.println( \"unable to initalize: \"+clazz );\n        }\n      }\n    }\n    assertTrue( \"there are at least 10 SolrInfoMBean that should be found in the classpath, found \" + checked, checked > 10 );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4e934676279282bfb002923aa7baf6c4564fef19","date":1407381940,"type":3,"author":"Steven Rowe","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/SolrInfoMBeanTest#testCallMBeanInfo().mjava","pathOld":"solr/core/src/test/org/apache/solr/SolrInfoMBeanTest#testCallMBeanInfo().mjava","sourceNew":"  /**\n   * Gets a list of everything we can find in the classpath and makes sure it has\n   * a name, description, etc...\n   */\n  public void testCallMBeanInfo() throws Exception {\n    List<Class> classes = new ArrayList<>();\n    classes.addAll(getClassesForPackage(StandardRequestHandler.class.getPackage().getName()));\n    classes.addAll(getClassesForPackage(SearchHandler.class.getPackage().getName()));\n    classes.addAll(getClassesForPackage(SearchComponent.class.getPackage().getName()));\n    classes.addAll(getClassesForPackage(LukeRequestHandler.class.getPackage().getName()));\n    classes.addAll(getClassesForPackage(DefaultSolrHighlighter.class.getPackage().getName()));\n    classes.addAll(getClassesForPackage(LRUCache.class.getPackage().getName()));\n   // System.out.println(classes);\n    \n    int checked = 0;\n    for( Class clazz : classes ) {\n      if( SolrInfoMBean.class.isAssignableFrom( clazz ) ) {\n        try {\n          SolrInfoMBean info = (SolrInfoMBean)clazz.newInstance();\n          \n          //System.out.println( info.getClass() );\n          assertNotNull( info.getName() );\n          assertNotNull( info.getDescription() );\n          assertNotNull( info.getCategory() );\n          \n          if( info instanceof LRUCache ) {\n            continue;\n          }\n          \n          assertNotNull( info.toString() );\n          // increase code coverage...\n          assertNotNull( info.getDocs() + \"\" );\n          assertNotNull( info.getStatistics()+\"\" );\n          checked++;\n        }\n        catch( InstantiationException ex ) {\n          // expected...\n          //System.out.println( \"unable to initalize: \"+clazz );\n        }\n      }\n    }\n    assertTrue( \"there are at least 10 SolrInfoMBean that should be found in the classpath, found \" + checked, checked > 10 );\n  }\n\n","sourceOld":"  /**\n   * Gets a list of everything we can find in the classpath and makes sure it has\n   * a name, description, etc...\n   */\n  public void testCallMBeanInfo() throws Exception {\n    List<Class> classes = new ArrayList<>();\n    classes.addAll(getClassesForPackage(StandardRequestHandler.class.getPackage().getName()));\n    classes.addAll(getClassesForPackage(SearchHandler.class.getPackage().getName()));\n    classes.addAll(getClassesForPackage(SearchComponent.class.getPackage().getName()));\n    classes.addAll(getClassesForPackage(LukeRequestHandler.class.getPackage().getName()));\n    classes.addAll(getClassesForPackage(DefaultSolrHighlighter.class.getPackage().getName()));\n    classes.addAll(getClassesForPackage(LRUCache.class.getPackage().getName()));\n   // System.out.println(classes);\n    \n    int checked = 0;\n    for( Class clazz : classes ) {\n      if( SolrInfoMBean.class.isAssignableFrom( clazz ) ) {\n        try {\n          SolrInfoMBean info = (SolrInfoMBean)clazz.newInstance();\n          \n          //System.out.println( info.getClass() );\n          assertNotNull( info.getName() );\n          assertNotNull( info.getDescription() );\n          assertNotNull( info.getSource() );\n          assertNotNull( info.getCategory() );\n          \n          // Make sure the URL has the classname in it\n          //assertTrue(info.getSource(), info.getSource().indexOf(info.getClass().getSimpleName()+\".java\")>0 );\n\n          if( info instanceof LRUCache ) {\n            continue;\n          }\n          \n          assertNotNull( info.toString() );\n          // increase code coverage...\n          assertNotNull( info.getDocs() + \"\" );\n          assertNotNull( info.getStatistics()+\"\" );\n          checked++;\n        }\n        catch( InstantiationException ex ) {\n          // expected...\n          //System.out.println( \"unable to initalize: \"+clazz );\n        }\n      }\n    }\n    assertTrue( \"there are at least 10 SolrInfoMBean that should be found in the classpath, found \" + checked, checked > 10 );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"60e4efc947592a22b8b79c8b7a18bfb8f1eb89b9","date":1419431639,"type":3,"author":"Steven Rowe","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/SolrInfoMBeanTest#testCallMBeanInfo().mjava","pathOld":"solr/core/src/test/org/apache/solr/SolrInfoMBeanTest#testCallMBeanInfo().mjava","sourceNew":"  /**\n   * Gets a list of everything we can find in the classpath and makes sure it has\n   * a name, description, etc...\n   */\n  public void testCallMBeanInfo() throws Exception {\n    List<Class> classes = new ArrayList<>();\n    classes.addAll(getClassesForPackage(StandardRequestHandler.class.getPackage().getName()));\n    classes.addAll(getClassesForPackage(SearchHandler.class.getPackage().getName()));\n    classes.addAll(getClassesForPackage(SearchComponent.class.getPackage().getName()));\n    classes.addAll(getClassesForPackage(LukeRequestHandler.class.getPackage().getName()));\n    classes.addAll(getClassesForPackage(DefaultSolrHighlighter.class.getPackage().getName()));\n    classes.addAll(getClassesForPackage(LRUCache.class.getPackage().getName()));\n   // System.out.println(classes);\n    \n    int checked = 0;\n    for( Class clazz : classes ) {\n      if( SolrInfoMBean.class.isAssignableFrom( clazz ) ) {\n        try {\n          SolrInfoMBean info = (SolrInfoMBean)clazz.newInstance();\n          \n          //System.out.println( info.getClass() );\n          assertNotNull( info.getName() );\n          assertNotNull( info.getDescription() );\n          assertNotNull( info.getCategory() );\n          \n          if( info instanceof LRUCache ) {\n            continue;\n          }\n          \n          assertNotNull( info.toString() );\n          // increase code coverage...\n          assertNotNull( info.getDocs() + \"\" );\n          assertNotNull( info.getStatistics()+\"\" );\n          checked++;\n        }\n        catch( InstantiationException ex ) {\n          // expected...\n          //System.out.println( \"unable to initialize: \"+clazz );\n        }\n      }\n    }\n    assertTrue( \"there are at least 10 SolrInfoMBean that should be found in the classpath, found \" + checked, checked > 10 );\n  }\n\n","sourceOld":"  /**\n   * Gets a list of everything we can find in the classpath and makes sure it has\n   * a name, description, etc...\n   */\n  public void testCallMBeanInfo() throws Exception {\n    List<Class> classes = new ArrayList<>();\n    classes.addAll(getClassesForPackage(StandardRequestHandler.class.getPackage().getName()));\n    classes.addAll(getClassesForPackage(SearchHandler.class.getPackage().getName()));\n    classes.addAll(getClassesForPackage(SearchComponent.class.getPackage().getName()));\n    classes.addAll(getClassesForPackage(LukeRequestHandler.class.getPackage().getName()));\n    classes.addAll(getClassesForPackage(DefaultSolrHighlighter.class.getPackage().getName()));\n    classes.addAll(getClassesForPackage(LRUCache.class.getPackage().getName()));\n   // System.out.println(classes);\n    \n    int checked = 0;\n    for( Class clazz : classes ) {\n      if( SolrInfoMBean.class.isAssignableFrom( clazz ) ) {\n        try {\n          SolrInfoMBean info = (SolrInfoMBean)clazz.newInstance();\n          \n          //System.out.println( info.getClass() );\n          assertNotNull( info.getName() );\n          assertNotNull( info.getDescription() );\n          assertNotNull( info.getCategory() );\n          \n          if( info instanceof LRUCache ) {\n            continue;\n          }\n          \n          assertNotNull( info.toString() );\n          // increase code coverage...\n          assertNotNull( info.getDocs() + \"\" );\n          assertNotNull( info.getStatistics()+\"\" );\n          checked++;\n        }\n        catch( InstantiationException ex ) {\n          // expected...\n          //System.out.println( \"unable to initalize: \"+clazz );\n        }\n      }\n    }\n    assertTrue( \"there are at least 10 SolrInfoMBean that should be found in the classpath, found \" + checked, checked > 10 );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bcf9886c8ff537aafde14de48ebf744f5673f08b","date":1439041198,"type":3,"author":"Ramkumar Aiyengar","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/SolrInfoMBeanTest#testCallMBeanInfo().mjava","pathOld":"solr/core/src/test/org/apache/solr/SolrInfoMBeanTest#testCallMBeanInfo().mjava","sourceNew":"  /**\n   * Gets a list of everything we can find in the classpath and makes sure it has\n   * a name, description, etc...\n   */\n  public void testCallMBeanInfo() throws Exception {\n    List<Class> classes = new ArrayList<>();\n    classes.addAll(getClassesForPackage(StandardRequestHandler.class.getPackage().getName()));\n    classes.addAll(getClassesForPackage(SearchComponent.class.getPackage().getName()));\n    classes.addAll(getClassesForPackage(LukeRequestHandler.class.getPackage().getName()));\n    classes.addAll(getClassesForPackage(DefaultSolrHighlighter.class.getPackage().getName()));\n    classes.addAll(getClassesForPackage(LRUCache.class.getPackage().getName()));\n   // System.out.println(classes);\n    \n    int checked = 0;\n    for( Class clazz : classes ) {\n      if( SolrInfoMBean.class.isAssignableFrom( clazz ) ) {\n        try {\n          SolrInfoMBean info = (SolrInfoMBean)clazz.newInstance();\n          \n          //System.out.println( info.getClass() );\n          assertNotNull( info.getName() );\n          assertNotNull( info.getDescription() );\n          assertNotNull( info.getCategory() );\n          \n          if( info instanceof LRUCache ) {\n            continue;\n          }\n          \n          assertNotNull( info.toString() );\n          // increase code coverage...\n          assertNotNull( info.getDocs() + \"\" );\n          assertNotNull( info.getStatistics()+\"\" );\n          checked++;\n        }\n        catch( InstantiationException ex ) {\n          // expected...\n          //System.out.println( \"unable to initialize: \"+clazz );\n        }\n      }\n    }\n    assertTrue( \"there are at least 10 SolrInfoMBean that should be found in the classpath, found \" + checked, checked > 10 );\n  }\n\n","sourceOld":"  /**\n   * Gets a list of everything we can find in the classpath and makes sure it has\n   * a name, description, etc...\n   */\n  public void testCallMBeanInfo() throws Exception {\n    List<Class> classes = new ArrayList<>();\n    classes.addAll(getClassesForPackage(StandardRequestHandler.class.getPackage().getName()));\n    classes.addAll(getClassesForPackage(SearchHandler.class.getPackage().getName()));\n    classes.addAll(getClassesForPackage(SearchComponent.class.getPackage().getName()));\n    classes.addAll(getClassesForPackage(LukeRequestHandler.class.getPackage().getName()));\n    classes.addAll(getClassesForPackage(DefaultSolrHighlighter.class.getPackage().getName()));\n    classes.addAll(getClassesForPackage(LRUCache.class.getPackage().getName()));\n   // System.out.println(classes);\n    \n    int checked = 0;\n    for( Class clazz : classes ) {\n      if( SolrInfoMBean.class.isAssignableFrom( clazz ) ) {\n        try {\n          SolrInfoMBean info = (SolrInfoMBean)clazz.newInstance();\n          \n          //System.out.println( info.getClass() );\n          assertNotNull( info.getName() );\n          assertNotNull( info.getDescription() );\n          assertNotNull( info.getCategory() );\n          \n          if( info instanceof LRUCache ) {\n            continue;\n          }\n          \n          assertNotNull( info.toString() );\n          // increase code coverage...\n          assertNotNull( info.getDocs() + \"\" );\n          assertNotNull( info.getStatistics()+\"\" );\n          checked++;\n        }\n        catch( InstantiationException ex ) {\n          // expected...\n          //System.out.println( \"unable to initialize: \"+clazz );\n        }\n      }\n    }\n    assertTrue( \"there are at least 10 SolrInfoMBean that should be found in the classpath, found \" + checked, checked > 10 );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"816521ebaad5add9cb96bb88c577394e2938c40b","date":1491931343,"type":5,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/SolrInfoBeanTest#testCallMBeanInfo().mjava","pathOld":"solr/core/src/test/org/apache/solr/SolrInfoMBeanTest#testCallMBeanInfo().mjava","sourceNew":"  /**\n   * Gets a list of everything we can find in the classpath and makes sure it has\n   * a name, description, etc...\n   */\n  public void testCallMBeanInfo() throws Exception {\n    List<Class> classes = new ArrayList<>();\n    classes.addAll(getClassesForPackage(StandardRequestHandler.class.getPackage().getName()));\n    classes.addAll(getClassesForPackage(SearchComponent.class.getPackage().getName()));\n    classes.addAll(getClassesForPackage(LukeRequestHandler.class.getPackage().getName()));\n    classes.addAll(getClassesForPackage(DefaultSolrHighlighter.class.getPackage().getName()));\n    classes.addAll(getClassesForPackage(LRUCache.class.getPackage().getName()));\n   // System.out.println(classes);\n    \n    int checked = 0;\n    SolrMetricManager metricManager = h.getCoreContainer().getMetricManager();\n    String registry = h.getCore().getCoreMetricManager().getRegistryName();\n    String scope = TestUtil.randomSimpleString(random(), 2, 10);\n    for( Class clazz : classes ) {\n      if( SolrInfoBean.class.isAssignableFrom( clazz ) ) {\n        try {\n          SolrInfoBean info = (SolrInfoBean)clazz.newInstance();\n          if (info instanceof SolrMetricProducer) {\n            ((SolrMetricProducer)info).initializeMetrics(metricManager, registry, scope);\n          }\n          \n          //System.out.println( info.getClass() );\n          assertNotNull( info.getName() );\n          assertNotNull( info.getDescription() );\n          assertNotNull( info.getCategory() );\n          \n          if( info instanceof LRUCache ) {\n            continue;\n          }\n          \n          assertNotNull( info.toString() );\n          checked++;\n        }\n        catch( InstantiationException ex ) {\n          // expected...\n          //System.out.println( \"unable to initialize: \"+clazz );\n        }\n      }\n    }\n    assertTrue( \"there are at least 10 SolrInfoBean that should be found in the classpath, found \" + checked, checked > 10 );\n  }\n\n","sourceOld":"  /**\n   * Gets a list of everything we can find in the classpath and makes sure it has\n   * a name, description, etc...\n   */\n  public void testCallMBeanInfo() throws Exception {\n    List<Class> classes = new ArrayList<>();\n    classes.addAll(getClassesForPackage(StandardRequestHandler.class.getPackage().getName()));\n    classes.addAll(getClassesForPackage(SearchComponent.class.getPackage().getName()));\n    classes.addAll(getClassesForPackage(LukeRequestHandler.class.getPackage().getName()));\n    classes.addAll(getClassesForPackage(DefaultSolrHighlighter.class.getPackage().getName()));\n    classes.addAll(getClassesForPackage(LRUCache.class.getPackage().getName()));\n   // System.out.println(classes);\n    \n    int checked = 0;\n    for( Class clazz : classes ) {\n      if( SolrInfoMBean.class.isAssignableFrom( clazz ) ) {\n        try {\n          SolrInfoMBean info = (SolrInfoMBean)clazz.newInstance();\n          \n          //System.out.println( info.getClass() );\n          assertNotNull( info.getName() );\n          assertNotNull( info.getDescription() );\n          assertNotNull( info.getCategory() );\n          \n          if( info instanceof LRUCache ) {\n            continue;\n          }\n          \n          assertNotNull( info.toString() );\n          // increase code coverage...\n          assertNotNull( info.getDocs() + \"\" );\n          assertNotNull( info.getStatistics()+\"\" );\n          checked++;\n        }\n        catch( InstantiationException ex ) {\n          // expected...\n          //System.out.println( \"unable to initialize: \"+clazz );\n        }\n      }\n    }\n    assertTrue( \"there are at least 10 SolrInfoMBean that should be found in the classpath, found \" + checked, checked > 10 );\n  }\n\n","bugFix":null,"bugIntro":["bfc52860e6d13d034226a760813c59d984c6817a"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"54ca69905c5d9d1529286f06ab1d12c68f6c13cb","date":1492683554,"type":4,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/core/src/test/org/apache/solr/SolrInfoMBeanTest#testCallMBeanInfo().mjava","sourceNew":null,"sourceOld":"  /**\n   * Gets a list of everything we can find in the classpath and makes sure it has\n   * a name, description, etc...\n   */\n  public void testCallMBeanInfo() throws Exception {\n    List<Class> classes = new ArrayList<>();\n    classes.addAll(getClassesForPackage(StandardRequestHandler.class.getPackage().getName()));\n    classes.addAll(getClassesForPackage(SearchComponent.class.getPackage().getName()));\n    classes.addAll(getClassesForPackage(LukeRequestHandler.class.getPackage().getName()));\n    classes.addAll(getClassesForPackage(DefaultSolrHighlighter.class.getPackage().getName()));\n    classes.addAll(getClassesForPackage(LRUCache.class.getPackage().getName()));\n   // System.out.println(classes);\n    \n    int checked = 0;\n    for( Class clazz : classes ) {\n      if( SolrInfoMBean.class.isAssignableFrom( clazz ) ) {\n        try {\n          SolrInfoMBean info = (SolrInfoMBean)clazz.newInstance();\n          \n          //System.out.println( info.getClass() );\n          assertNotNull( info.getName() );\n          assertNotNull( info.getDescription() );\n          assertNotNull( info.getCategory() );\n          \n          if( info instanceof LRUCache ) {\n            continue;\n          }\n          \n          assertNotNull( info.toString() );\n          // increase code coverage...\n          assertNotNull( info.getDocs() + \"\" );\n          assertNotNull( info.getStatistics()+\"\" );\n          checked++;\n        }\n        catch( InstantiationException ex ) {\n          // expected...\n          //System.out.println( \"unable to initialize: \"+clazz );\n        }\n      }\n    }\n    assertTrue( \"there are at least 10 SolrInfoMBean that should be found in the classpath, found \" + checked, checked > 10 );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"54ca69905c5d9d1529286f06ab1d12c68f6c13cb":["bcf9886c8ff537aafde14de48ebf744f5673f08b"],"4e934676279282bfb002923aa7baf6c4564fef19":["634f330c54fd3f9f491d52036dc3f40b4f4d8934"],"634f330c54fd3f9f491d52036dc3f40b4f4d8934":["18c264904f4236696be3696a0d998a37931a8a50"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"c26f00b574427b55127e869b935845554afde1fa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","c903c3d15906a3da96b8c0c2fb704491005fdbdb"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"bcf9886c8ff537aafde14de48ebf744f5673f08b":["60e4efc947592a22b8b79c8b7a18bfb8f1eb89b9"],"a258fbb26824fd104ed795e5d9033d2d040049ee":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"816521ebaad5add9cb96bb88c577394e2938c40b":["bcf9886c8ff537aafde14de48ebf744f5673f08b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["816521ebaad5add9cb96bb88c577394e2938c40b"],"60e4efc947592a22b8b79c8b7a18bfb8f1eb89b9":["4e934676279282bfb002923aa7baf6c4564fef19"],"18c264904f4236696be3696a0d998a37931a8a50":["c26f00b574427b55127e869b935845554afde1fa"]},"commit2Childs":{"54ca69905c5d9d1529286f06ab1d12c68f6c13cb":[],"4e934676279282bfb002923aa7baf6c4564fef19":["60e4efc947592a22b8b79c8b7a18bfb8f1eb89b9"],"634f330c54fd3f9f491d52036dc3f40b4f4d8934":["4e934676279282bfb002923aa7baf6c4564fef19"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["c26f00b574427b55127e869b935845554afde1fa"],"c26f00b574427b55127e869b935845554afde1fa":["18c264904f4236696be3696a0d998a37931a8a50"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c903c3d15906a3da96b8c0c2fb704491005fdbdb","c26f00b574427b55127e869b935845554afde1fa","a258fbb26824fd104ed795e5d9033d2d040049ee"],"bcf9886c8ff537aafde14de48ebf744f5673f08b":["54ca69905c5d9d1529286f06ab1d12c68f6c13cb","816521ebaad5add9cb96bb88c577394e2938c40b"],"a258fbb26824fd104ed795e5d9033d2d040049ee":[],"816521ebaad5add9cb96bb88c577394e2938c40b":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"18c264904f4236696be3696a0d998a37931a8a50":["634f330c54fd3f9f491d52036dc3f40b4f4d8934"],"60e4efc947592a22b8b79c8b7a18bfb8f1eb89b9":["bcf9886c8ff537aafde14de48ebf744f5673f08b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["54ca69905c5d9d1529286f06ab1d12c68f6c13cb","a258fbb26824fd104ed795e5d9033d2d040049ee","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}