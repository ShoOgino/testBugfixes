{"path":"lucene/core/src/java/org/apache/lucene/index/SegmentReader#getSortedNumericDocValues(String).mjava","commits":[{"id":"d14ffaac9c4a4a2c750bf0cd956506802561e062","date":1402602036,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/SegmentReader#getSortedNumericDocValues(String).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public SortedNumericDocValues getSortedNumericDocValues(String field) throws IOException {\n    ensureOpen();\n    Map<String,Object> dvFields = docValuesLocal.get();\n\n    Object previous = dvFields.get(field);\n    if (previous != null && previous instanceof SortedNumericDocValues) {\n      return (SortedNumericDocValues) previous;\n    } else {\n      FieldInfo fi = getDVField(field, DocValuesType.SORTED_NUMERIC);\n      if (fi == null) {\n        return null;\n      }\n      DocValuesProducer dvProducer = dvProducersByField.get(field);\n      assert dvProducer != null;\n      SortedNumericDocValues dv = dvProducer.getSortedNumeric(fi);\n      dvFields.put(field, dv);\n      return dv;\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c6f080a2ab37c464dd98db173f6cbf10dc74f211","date":1402946779,"type":0,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/SegmentReader#getSortedNumericDocValues(String).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public SortedNumericDocValues getSortedNumericDocValues(String field) throws IOException {\n    ensureOpen();\n    Map<String,Object> dvFields = docValuesLocal.get();\n\n    Object previous = dvFields.get(field);\n    if (previous != null && previous instanceof SortedNumericDocValues) {\n      return (SortedNumericDocValues) previous;\n    } else {\n      FieldInfo fi = getDVField(field, DocValuesType.SORTED_NUMERIC);\n      if (fi == null) {\n        return null;\n      }\n      DocValuesProducer dvProducer = dvProducersByField.get(field);\n      assert dvProducer != null;\n      SortedNumericDocValues dv = dvProducer.getSortedNumeric(fi);\n      dvFields.put(field, dv);\n      return dv;\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"22a2e66dfda83847e80095b8693c660742ab3e9c","date":1408628796,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/SegmentReader#getSortedNumericDocValues(String).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/SegmentReader#getSortedNumericDocValues(String).mjava","sourceNew":"  @Override\n  public SortedNumericDocValues getSortedNumericDocValues(String field) throws IOException {\n    ensureOpen();\n    Map<String,Object> dvFields = docValuesLocal.get();\n\n    Object previous = dvFields.get(field);\n    if (previous != null && previous instanceof SortedNumericDocValues) {\n      return (SortedNumericDocValues) previous;\n    } else {\n      FieldInfo fi = getDVField(field, DocValuesType.SORTED_NUMERIC);\n      if (fi == null) {\n        return null;\n      }\n      SortedNumericDocValues dv = docValuesProducer.getSortedNumeric(fi);\n      dvFields.put(field, dv);\n      return dv;\n    }\n  }\n\n","sourceOld":"  @Override\n  public SortedNumericDocValues getSortedNumericDocValues(String field) throws IOException {\n    ensureOpen();\n    Map<String,Object> dvFields = docValuesLocal.get();\n\n    Object previous = dvFields.get(field);\n    if (previous != null && previous instanceof SortedNumericDocValues) {\n      return (SortedNumericDocValues) previous;\n    } else {\n      FieldInfo fi = getDVField(field, DocValuesType.SORTED_NUMERIC);\n      if (fi == null) {\n        return null;\n      }\n      DocValuesProducer dvProducer = dvProducersByField.get(field);\n      assert dvProducer != null;\n      SortedNumericDocValues dv = dvProducer.getSortedNumeric(fi);\n      dvFields.put(field, dv);\n      return dv;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"505bff044e47a553f461b6f4484d1d08faf4ac85","date":1420728783,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/CodecReader#getSortedNumericDocValues(String).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/SegmentReader#getSortedNumericDocValues(String).mjava","sourceNew":"  @Override\n  public final SortedNumericDocValues getSortedNumericDocValues(String field) throws IOException {\n    ensureOpen();\n    Map<String,Object> dvFields = docValuesLocal.get();\n\n    Object previous = dvFields.get(field);\n    if (previous != null && previous instanceof SortedNumericDocValues) {\n      return (SortedNumericDocValues) previous;\n    } else {\n      FieldInfo fi = getDVField(field, DocValuesType.SORTED_NUMERIC);\n      if (fi == null) {\n        return null;\n      }\n      SortedNumericDocValues dv = getDocValuesReader().getSortedNumeric(fi);\n      dvFields.put(field, dv);\n      return dv;\n    }\n  }\n\n","sourceOld":"  @Override\n  public SortedNumericDocValues getSortedNumericDocValues(String field) throws IOException {\n    ensureOpen();\n    Map<String,Object> dvFields = docValuesLocal.get();\n\n    Object previous = dvFields.get(field);\n    if (previous != null && previous instanceof SortedNumericDocValues) {\n      return (SortedNumericDocValues) previous;\n    } else {\n      FieldInfo fi = getDVField(field, DocValuesType.SORTED_NUMERIC);\n      if (fi == null) {\n        return null;\n      }\n      SortedNumericDocValues dv = docValuesProducer.getSortedNumeric(fi);\n      dvFields.put(field, dv);\n      return dv;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"22a2e66dfda83847e80095b8693c660742ab3e9c":["d14ffaac9c4a4a2c750bf0cd956506802561e062"],"c6f080a2ab37c464dd98db173f6cbf10dc74f211":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","d14ffaac9c4a4a2c750bf0cd956506802561e062"],"505bff044e47a553f461b6f4484d1d08faf4ac85":["22a2e66dfda83847e80095b8693c660742ab3e9c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["505bff044e47a553f461b6f4484d1d08faf4ac85"],"d14ffaac9c4a4a2c750bf0cd956506802561e062":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c6f080a2ab37c464dd98db173f6cbf10dc74f211","d14ffaac9c4a4a2c750bf0cd956506802561e062"],"22a2e66dfda83847e80095b8693c660742ab3e9c":["505bff044e47a553f461b6f4484d1d08faf4ac85"],"c6f080a2ab37c464dd98db173f6cbf10dc74f211":[],"505bff044e47a553f461b6f4484d1d08faf4ac85":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"d14ffaac9c4a4a2c750bf0cd956506802561e062":["22a2e66dfda83847e80095b8693c660742ab3e9c","c6f080a2ab37c464dd98db173f6cbf10dc74f211"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["c6f080a2ab37c464dd98db173f6cbf10dc74f211","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}