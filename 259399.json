{"path":"lucene/contrib/queries/src/java/org/apache/lucene/search/regex/JakartaRegexpCapabilities#prefix().mjava","commits":[{"id":"36f91bf9cfc9d0c3155edab43359e7670ea8a5af","date":1269580873,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/contrib/queries/src/java/org/apache/lucene/search/regex/JakartaRegexpCapabilities#prefix().mjava","pathOld":"lucene/contrib/regex/src/java/org/apache/lucene/search/regex/JakartaRegexpCapabilities#prefix().mjava","sourceNew":"  public String prefix() {\n    char[] prefix = RegexpTunnel.getPrefix(regexp);\n    return prefix == null ? null : new String(prefix);\n  }\n\n","sourceOld":"  public String prefix() {\n    char[] prefix = RegexpTunnel.getPrefix(regexp);\n    return prefix == null ? null : new String(prefix);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"08decff6ca2f7d40c0a3c726936ac664a272b96d","date":1272041030,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/contrib/queries/src/java/org/apache/lucene/search/regex/JakartaRegexpCapabilities#prefix().mjava","pathOld":"lucene/contrib/queries/src/java/org/apache/lucene/search/regex/JakartaRegexpCapabilities#prefix().mjava","sourceNew":"  public String prefix() {\n    try {\n      final char[] prefix;\n      if (getPrefixMethod != null) {\n        prefix = (char[]) getPrefixMethod.invoke(regexp.getProgram());\n      } else if (prefixField != null) {\n        prefix = (char[]) prefixField.get(regexp.getProgram());\n      } else {\n        return null;\n      }\n      return prefix == null ? null : new String(prefix);\n    } catch (Exception e) {\n      // if we cannot get the prefix, return none\n      return null;\n    }\n  }\n\n","sourceOld":"  public String prefix() {\n    char[] prefix = RegexpTunnel.getPrefix(regexp);\n    return prefix == null ? null : new String(prefix);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0f67387bc16fbb80062f4ee9865abd90aed3e207","date":1282216842,"type":4,"author":"Robert Muir","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/contrib/queries/src/java/org/apache/lucene/search/regex/JakartaRegexpCapabilities#prefix().mjava","sourceNew":null,"sourceOld":"  public String prefix() {\n    try {\n      final char[] prefix;\n      if (getPrefixMethod != null) {\n        prefix = (char[]) getPrefixMethod.invoke(regexp.getProgram());\n      } else if (prefixField != null) {\n        prefix = (char[]) prefixField.get(regexp.getProgram());\n      } else {\n        return null;\n      }\n      return prefix == null ? null : new String(prefix);\n    } catch (Exception e) {\n      // if we cannot get the prefix, return none\n      return null;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","date":1292920096,"type":4,"author":"Michael Busch","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/contrib/queries/src/java/org/apache/lucene/search/regex/JakartaRegexpCapabilities#prefix().mjava","sourceNew":null,"sourceOld":"  public String prefix() {\n    try {\n      final char[] prefix;\n      if (getPrefixMethod != null) {\n        prefix = (char[]) getPrefixMethod.invoke(regexp.getProgram());\n      } else if (prefixField != null) {\n        prefix = (char[]) prefixField.get(regexp.getProgram());\n      } else {\n        return null;\n      }\n      return prefix == null ? null : new String(prefix);\n    } catch (Exception e) {\n      // if we cannot get the prefix, return none\n      return null;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"36f91bf9cfc9d0c3155edab43359e7670ea8a5af":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"0f67387bc16fbb80062f4ee9865abd90aed3e207":["08decff6ca2f7d40c0a3c726936ac664a272b96d"],"08decff6ca2f7d40c0a3c726936ac664a272b96d":["36f91bf9cfc9d0c3155edab43359e7670ea8a5af"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["08decff6ca2f7d40c0a3c726936ac664a272b96d","0f67387bc16fbb80062f4ee9865abd90aed3e207"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["0f67387bc16fbb80062f4ee9865abd90aed3e207"]},"commit2Childs":{"36f91bf9cfc9d0c3155edab43359e7670ea8a5af":["08decff6ca2f7d40c0a3c726936ac664a272b96d"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["36f91bf9cfc9d0c3155edab43359e7670ea8a5af"],"0f67387bc16fbb80062f4ee9865abd90aed3e207":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"08decff6ca2f7d40c0a3c726936ac664a272b96d":["0f67387bc16fbb80062f4ee9865abd90aed3e207","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}