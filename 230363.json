{"path":"lucene/src/java/org/apache/lucene/search/ParallelMultiSearcher#ParallelMultiSearcher(Searchable...).mjava","commits":[{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/search/ParallelMultiSearcher#ParallelMultiSearcher(Searchable...).mjava","pathOld":"src/java/org/apache/lucene/search/ParallelMultiSearcher#ParallelMultiSearcher(Searchable...).mjava","sourceNew":"  /** Creates a {@link Searchable} which searches <i>searchables</i>. */\n  public ParallelMultiSearcher(Searchable... searchables) throws IOException {\n    super(searchables);\n    this.searchables = searchables;\n    this.starts = getStarts();\n    executor = Executors.newCachedThreadPool(new NamedThreadFactory(this.getClass().getSimpleName())); \n  }\n\n","sourceOld":"  /** Creates a {@link Searchable} which searches <i>searchables</i>. */\n  public ParallelMultiSearcher(Searchable... searchables) throws IOException {\n    super(searchables);\n    this.searchables = searchables;\n    this.starts = getStarts();\n    executor = Executors.newCachedThreadPool(new NamedThreadFactory(this.getClass().getSimpleName())); \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"48bbf4cfe7f858e4a1f1fd757cf80525dceb20ce","date":1274295503,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/search/ParallelMultiSearcher#ParallelMultiSearcher(Searchable...).mjava","pathOld":"lucene/src/java/org/apache/lucene/search/ParallelMultiSearcher#ParallelMultiSearcher(Searchable...).mjava","sourceNew":"  /** Creates a {@link Searchable} which searches <i>searchables</i> with the default \n   * executor service (a cached thread pool). */\n  public ParallelMultiSearcher(Searchable... searchables) throws IOException {\n    this(Executors.newCachedThreadPool(new NamedThreadFactory(ParallelMultiSearcher.class.getSimpleName())), searchables);\n  }\n\n","sourceOld":"  /** Creates a {@link Searchable} which searches <i>searchables</i>. */\n  public ParallelMultiSearcher(Searchable... searchables) throws IOException {\n    super(searchables);\n    this.searchables = searchables;\n    this.starts = getStarts();\n    executor = Executors.newCachedThreadPool(new NamedThreadFactory(this.getClass().getSimpleName())); \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8b241ea5e635d896cc0af83cd96ffd0322e0aba7","date":1294226200,"type":4,"author":"Michael McCandless","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/src/java/org/apache/lucene/search/ParallelMultiSearcher#ParallelMultiSearcher(Searchable...).mjava","sourceNew":null,"sourceOld":"  /** Creates a {@link Searchable} which searches <i>searchables</i> with the default \n   * executor service (a cached thread pool). */\n  public ParallelMultiSearcher(Searchable... searchables) throws IOException {\n    this(Executors.newCachedThreadPool(new NamedThreadFactory(ParallelMultiSearcher.class.getSimpleName())), searchables);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"70ad682703b8585f5d0a637efec044d57ec05efb","date":1294259117,"type":4,"author":"Simon Willnauer","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/src/java/org/apache/lucene/search/ParallelMultiSearcher#ParallelMultiSearcher(Searchable...).mjava","sourceNew":null,"sourceOld":"  /** Creates a {@link Searchable} which searches <i>searchables</i> with the default \n   * executor service (a cached thread pool). */\n  public ParallelMultiSearcher(Searchable... searchables) throws IOException {\n    this(Executors.newCachedThreadPool(new NamedThreadFactory(ParallelMultiSearcher.class.getSimpleName())), searchables);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"868da859b43505d9d2a023bfeae6dd0c795f5295","date":1294948401,"type":4,"author":"Michael Busch","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/src/java/org/apache/lucene/search/ParallelMultiSearcher#ParallelMultiSearcher(Searchable...).mjava","sourceNew":null,"sourceOld":"  /** Creates a {@link Searchable} which searches <i>searchables</i> with the default \n   * executor service (a cached thread pool). */\n  public ParallelMultiSearcher(Searchable... searchables) throws IOException {\n    this(Executors.newCachedThreadPool(new NamedThreadFactory(ParallelMultiSearcher.class.getSimpleName())), searchables);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"70ad682703b8585f5d0a637efec044d57ec05efb":["48bbf4cfe7f858e4a1f1fd757cf80525dceb20ce","8b241ea5e635d896cc0af83cd96ffd0322e0aba7"],"8b241ea5e635d896cc0af83cd96ffd0322e0aba7":["48bbf4cfe7f858e4a1f1fd757cf80525dceb20ce"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"868da859b43505d9d2a023bfeae6dd0c795f5295":["48bbf4cfe7f858e4a1f1fd757cf80525dceb20ce","8b241ea5e635d896cc0af83cd96ffd0322e0aba7"],"48bbf4cfe7f858e4a1f1fd757cf80525dceb20ce":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["8b241ea5e635d896cc0af83cd96ffd0322e0aba7"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"70ad682703b8585f5d0a637efec044d57ec05efb":[],"8b241ea5e635d896cc0af83cd96ffd0322e0aba7":["70ad682703b8585f5d0a637efec044d57ec05efb","868da859b43505d9d2a023bfeae6dd0c795f5295","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"868da859b43505d9d2a023bfeae6dd0c795f5295":[],"48bbf4cfe7f858e4a1f1fd757cf80525dceb20ce":["70ad682703b8585f5d0a637efec044d57ec05efb","8b241ea5e635d896cc0af83cd96ffd0322e0aba7","868da859b43505d9d2a023bfeae6dd0c795f5295"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["48bbf4cfe7f858e4a1f1fd757cf80525dceb20ce"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["70ad682703b8585f5d0a637efec044d57ec05efb","868da859b43505d9d2a023bfeae6dd0c795f5295","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}