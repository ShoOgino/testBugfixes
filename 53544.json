{"path":"src/test-deprecated/org/apache/lucene/search/TestPositionIncrement#testSetPosition().mjava","commits":[{"id":"5b5461affe637a07375542c763a4805300802be8","date":1102270918,"type":0,"author":"Bernhard Messer","isMerge":false,"pathNew":"src/test-deprecated/org/apache/lucene/search/TestPositionIncrement#testSetPosition().mjava","pathOld":"/dev/null","sourceNew":"  public void testSetPosition() throws Exception {\n    Analyzer analyzer = new Analyzer() {\n      public TokenStream tokenStream(String fieldName, Reader reader) {\n        return new TokenStream() {\n          private final String[] TOKENS = {\"1\", \"2\", \"3\", \"4\", \"5\"};\n          private final int[] INCREMENTS = {1, 2, 1, 0, 1};\n          private int i = 0;\n\n          public Token next() throws IOException {\n            if (i == TOKENS.length)\n              return null;\n            Token t = new Token(TOKENS[i], i, i);\n            t.setPositionIncrement(INCREMENTS[i]);\n            i++;\n            return t;\n          }\n        };\n      }\n    };\n    RAMDirectory store = new RAMDirectory();\n    IndexWriter writer = new IndexWriter(store, analyzer, true);\n    Document d = new Document();\n    d.add(Field.Text(\"field\", \"bogus\"));\n    writer.addDocument(d);\n    writer.optimize();\n    writer.close();\n\n    IndexSearcher searcher = new IndexSearcher(store);\n    PhraseQuery q;\n    Hits hits;\n\n    q = new PhraseQuery();\n    q.add(new Term(\"field\", \"1\"));\n    q.add(new Term(\"field\", \"2\"));\n    hits = searcher.search(q);\n    assertEquals(0, hits.length());\n\n    q = new PhraseQuery();\n    q.add(new Term(\"field\", \"2\"));\n    q.add(new Term(\"field\", \"3\"));\n    hits = searcher.search(q);\n    assertEquals(1, hits.length());\n\n    q = new PhraseQuery();\n    q.add(new Term(\"field\", \"3\"));\n    q.add(new Term(\"field\", \"4\"));\n    hits = searcher.search(q);\n    assertEquals(0, hits.length());\n\n    q = new PhraseQuery();\n    q.add(new Term(\"field\", \"2\"));\n    q.add(new Term(\"field\", \"4\"));\n    hits = searcher.search(q);\n    assertEquals(1, hits.length());\n\n    q = new PhraseQuery();\n    q.add(new Term(\"field\", \"3\"));\n    q.add(new Term(\"field\", \"5\"));\n    hits = searcher.search(q);\n    assertEquals(1, hits.length());\n\n    q = new PhraseQuery();\n    q.add(new Term(\"field\", \"4\"));\n    q.add(new Term(\"field\", \"5\"));\n    hits = searcher.search(q);\n    assertEquals(1, hits.length());\n\n    q = new PhraseQuery();\n    q.add(new Term(\"field\", \"2\"));\n    q.add(new Term(\"field\", \"5\"));\n    hits = searcher.search(q);\n    assertEquals(0, hits.length());\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c69e98ffd83f56083b99e5443ca713cd5783a2ae","date":1142955392,"type":4,"author":"Yonik Seeley","isMerge":false,"pathNew":"/dev/null","pathOld":"src/test-deprecated/org/apache/lucene/search/TestPositionIncrement#testSetPosition().mjava","sourceNew":null,"sourceOld":"  public void testSetPosition() throws Exception {\n    Analyzer analyzer = new Analyzer() {\n      public TokenStream tokenStream(String fieldName, Reader reader) {\n        return new TokenStream() {\n          private final String[] TOKENS = {\"1\", \"2\", \"3\", \"4\", \"5\"};\n          private final int[] INCREMENTS = {1, 2, 1, 0, 1};\n          private int i = 0;\n\n          public Token next() throws IOException {\n            if (i == TOKENS.length)\n              return null;\n            Token t = new Token(TOKENS[i], i, i);\n            t.setPositionIncrement(INCREMENTS[i]);\n            i++;\n            return t;\n          }\n        };\n      }\n    };\n    RAMDirectory store = new RAMDirectory();\n    IndexWriter writer = new IndexWriter(store, analyzer, true);\n    Document d = new Document();\n    d.add(Field.Text(\"field\", \"bogus\"));\n    writer.addDocument(d);\n    writer.optimize();\n    writer.close();\n\n    IndexSearcher searcher = new IndexSearcher(store);\n    PhraseQuery q;\n    Hits hits;\n\n    q = new PhraseQuery();\n    q.add(new Term(\"field\", \"1\"));\n    q.add(new Term(\"field\", \"2\"));\n    hits = searcher.search(q);\n    assertEquals(0, hits.length());\n\n    q = new PhraseQuery();\n    q.add(new Term(\"field\", \"2\"));\n    q.add(new Term(\"field\", \"3\"));\n    hits = searcher.search(q);\n    assertEquals(1, hits.length());\n\n    q = new PhraseQuery();\n    q.add(new Term(\"field\", \"3\"));\n    q.add(new Term(\"field\", \"4\"));\n    hits = searcher.search(q);\n    assertEquals(0, hits.length());\n\n    q = new PhraseQuery();\n    q.add(new Term(\"field\", \"2\"));\n    q.add(new Term(\"field\", \"4\"));\n    hits = searcher.search(q);\n    assertEquals(1, hits.length());\n\n    q = new PhraseQuery();\n    q.add(new Term(\"field\", \"3\"));\n    q.add(new Term(\"field\", \"5\"));\n    hits = searcher.search(q);\n    assertEquals(1, hits.length());\n\n    q = new PhraseQuery();\n    q.add(new Term(\"field\", \"4\"));\n    q.add(new Term(\"field\", \"5\"));\n    hits = searcher.search(q);\n    assertEquals(1, hits.length());\n\n    q = new PhraseQuery();\n    q.add(new Term(\"field\", \"2\"));\n    q.add(new Term(\"field\", \"5\"));\n    hits = searcher.search(q);\n    assertEquals(0, hits.length());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"5b5461affe637a07375542c763a4805300802be8":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"c69e98ffd83f56083b99e5443ca713cd5783a2ae":["5b5461affe637a07375542c763a4805300802be8"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["c69e98ffd83f56083b99e5443ca713cd5783a2ae"]},"commit2Childs":{"5b5461affe637a07375542c763a4805300802be8":["c69e98ffd83f56083b99e5443ca713cd5783a2ae"],"c69e98ffd83f56083b99e5443ca713cd5783a2ae":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["5b5461affe637a07375542c763a4805300802be8"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}