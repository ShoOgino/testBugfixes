{"path":"modules/analysis/common/src/java/org/apache/lucene/analysis/util/FilteringTokenFilter#setEnablePositionIncrements(boolean).mjava","commits":[{"id":"f714d3d16beb7d9cc74e7ae85c110a7976c62938","date":1296412234,"type":1,"author":"Uwe Schindler","isMerge":false,"pathNew":"modules/analysis/common/src/java/org/apache/lucene/analysis/util/FilteringTokenFilter#setEnablePositionIncrements(boolean).mjava","pathOld":"modules/analysis/common/src/java/org/apache/lucene/analysis/core/StopFilter#setEnablePositionIncrements(boolean).mjava","sourceNew":"  /**\n   * If <code>true</code>, this TokenFilter will preserve\n   * positions of the incoming tokens (ie, accumulate and\n   * set position increments of the removed tokens).\n   * Generally, <code>true</code> is best as it does not\n   * lose information (positions of the original tokens)\n   * during indexing.\n   * \n   * <p> When set, when a token is stopped\n   * (omitted), the position increment of the following\n   * token is incremented.\n   *\n   * <p> <b>NOTE</b>: be sure to also\n   * set {@link QueryParser#setEnablePositionIncrements} if\n   * you use QueryParser to create queries.\n   */\n  public void setEnablePositionIncrements(boolean enable) {\n    this.enablePositionIncrements = enable;\n  }\n\n","sourceOld":"  /**\n   * If <code>true</code>, this StopFilter will preserve\n   * positions of the incoming tokens (ie, accumulate and\n   * set position increments of the removed stop tokens).\n   * Generally, <code>true</code> is best as it does not\n   * lose information (positions of the original tokens)\n   * during indexing.\n   *\n   * Default is true.\n   * \n   * <p> When set, when a token is stopped\n   * (omitted), the position increment of the following\n   * token is incremented.\n   *\n   * <p> <b>NOTE</b>: be sure to also\n   * set {@link QueryParser#setEnablePositionIncrements} if\n   * you use QueryParser to create queries.\n   */\n  public void setEnablePositionIncrements(boolean enable) {\n    this.enablePositionIncrements = enable;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"29ef99d61cda9641b6250bf9567329a6e65f901d","date":1297244127,"type":0,"author":"Simon Willnauer","isMerge":true,"pathNew":"modules/analysis/common/src/java/org/apache/lucene/analysis/util/FilteringTokenFilter#setEnablePositionIncrements(boolean).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * If <code>true</code>, this TokenFilter will preserve\n   * positions of the incoming tokens (ie, accumulate and\n   * set position increments of the removed tokens).\n   * Generally, <code>true</code> is best as it does not\n   * lose information (positions of the original tokens)\n   * during indexing.\n   * \n   * <p> When set, when a token is stopped\n   * (omitted), the position increment of the following\n   * token is incremented.\n   *\n   * <p> <b>NOTE</b>: be sure to also\n   * set {@link QueryParser#setEnablePositionIncrements} if\n   * you use QueryParser to create queries.\n   */\n  public void setEnablePositionIncrements(boolean enable) {\n    this.enablePositionIncrements = enable;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bde51b089eb7f86171eb3406e38a274743f9b7ac","date":1298336439,"type":1,"author":"Michael Busch","isMerge":true,"pathNew":"modules/analysis/common/src/java/org/apache/lucene/analysis/util/FilteringTokenFilter#setEnablePositionIncrements(boolean).mjava","pathOld":"modules/analysis/common/src/java/org/apache/lucene/analysis/core/StopFilter#setEnablePositionIncrements(boolean).mjava","sourceNew":"  /**\n   * If <code>true</code>, this TokenFilter will preserve\n   * positions of the incoming tokens (ie, accumulate and\n   * set position increments of the removed tokens).\n   * Generally, <code>true</code> is best as it does not\n   * lose information (positions of the original tokens)\n   * during indexing.\n   * \n   * <p> When set, when a token is stopped\n   * (omitted), the position increment of the following\n   * token is incremented.\n   *\n   * <p> <b>NOTE</b>: be sure to also\n   * set {@link QueryParser#setEnablePositionIncrements} if\n   * you use QueryParser to create queries.\n   */\n  public void setEnablePositionIncrements(boolean enable) {\n    this.enablePositionIncrements = enable;\n  }\n\n","sourceOld":"  /**\n   * If <code>true</code>, this StopFilter will preserve\n   * positions of the incoming tokens (ie, accumulate and\n   * set position increments of the removed stop tokens).\n   * Generally, <code>true</code> is best as it does not\n   * lose information (positions of the original tokens)\n   * during indexing.\n   *\n   * Default is true.\n   * \n   * <p> When set, when a token is stopped\n   * (omitted), the position increment of the following\n   * token is incremented.\n   *\n   * <p> <b>NOTE</b>: be sure to also\n   * set {@link QueryParser#setEnablePositionIncrements} if\n   * you use QueryParser to create queries.\n   */\n  public void setEnablePositionIncrements(boolean enable) {\n    this.enablePositionIncrements = enable;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"91a3609ac9a09ca0c8eee1b765401bbdacaceaf8","date":1310355420,"type":3,"author":"Christopher John Male","isMerge":false,"pathNew":"modules/analysis/common/src/java/org/apache/lucene/analysis/util/FilteringTokenFilter#setEnablePositionIncrements(boolean).mjava","pathOld":"modules/analysis/common/src/java/org/apache/lucene/analysis/util/FilteringTokenFilter#setEnablePositionIncrements(boolean).mjava","sourceNew":"  /**\n   * If <code>true</code>, this TokenFilter will preserve\n   * positions of the incoming tokens (ie, accumulate and\n   * set position increments of the removed tokens).\n   * Generally, <code>true</code> is best as it does not\n   * lose information (positions of the original tokens)\n   * during indexing.\n   * \n   * <p> When set, when a token is stopped\n   * (omitted), the position increment of the following\n   * token is incremented.\n   *\n   * <p> <b>NOTE</b>: be sure to also\n   * set org.apache.lucene.queryparser.classic.QueryParser#setEnablePositionIncrements if\n   * you use QueryParser to create queries.\n   */\n  public void setEnablePositionIncrements(boolean enable) {\n    this.enablePositionIncrements = enable;\n  }\n\n","sourceOld":"  /**\n   * If <code>true</code>, this TokenFilter will preserve\n   * positions of the incoming tokens (ie, accumulate and\n   * set position increments of the removed tokens).\n   * Generally, <code>true</code> is best as it does not\n   * lose information (positions of the original tokens)\n   * during indexing.\n   * \n   * <p> When set, when a token is stopped\n   * (omitted), the position increment of the following\n   * token is incremented.\n   *\n   * <p> <b>NOTE</b>: be sure to also\n   * set {@link QueryParser#setEnablePositionIncrements} if\n   * you use QueryParser to create queries.\n   */\n  public void setEnablePositionIncrements(boolean enable) {\n    this.enablePositionIncrements = enable;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/common/src/java/org/apache/lucene/analysis/util/FilteringTokenFilter#setEnablePositionIncrements(boolean).mjava","pathOld":"modules/analysis/common/src/java/org/apache/lucene/analysis/util/FilteringTokenFilter#setEnablePositionIncrements(boolean).mjava","sourceNew":"  /**\n   * If <code>true</code>, this TokenFilter will preserve\n   * positions of the incoming tokens (ie, accumulate and\n   * set position increments of the removed tokens).\n   * Generally, <code>true</code> is best as it does not\n   * lose information (positions of the original tokens)\n   * during indexing.\n   * \n   * <p> When set, when a token is stopped\n   * (omitted), the position increment of the following\n   * token is incremented.\n   *\n   * <p> <b>NOTE</b>: be sure to also\n   * set org.apache.lucene.queryparser.classic.QueryParser#setEnablePositionIncrements if\n   * you use QueryParser to create queries.\n   */\n  public void setEnablePositionIncrements(boolean enable) {\n    this.enablePositionIncrements = enable;\n  }\n\n","sourceOld":"  /**\n   * If <code>true</code>, this TokenFilter will preserve\n   * positions of the incoming tokens (ie, accumulate and\n   * set position increments of the removed tokens).\n   * Generally, <code>true</code> is best as it does not\n   * lose information (positions of the original tokens)\n   * during indexing.\n   * \n   * <p> When set, when a token is stopped\n   * (omitted), the position increment of the following\n   * token is incremented.\n   *\n   * <p> <b>NOTE</b>: be sure to also\n   * set org.apache.lucene.queryparser.classic.QueryParser#setEnablePositionIncrements if\n   * you use QueryParser to create queries.\n   */\n  public void setEnablePositionIncrements(boolean enable) {\n    this.enablePositionIncrements = enable;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["91a3609ac9a09ca0c8eee1b765401bbdacaceaf8"],"f714d3d16beb7d9cc74e7ae85c110a7976c62938":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"29ef99d61cda9641b6250bf9567329a6e65f901d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","f714d3d16beb7d9cc74e7ae85c110a7976c62938"],"91a3609ac9a09ca0c8eee1b765401bbdacaceaf8":["f714d3d16beb7d9cc74e7ae85c110a7976c62938"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"bde51b089eb7f86171eb3406e38a274743f9b7ac":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","f714d3d16beb7d9cc74e7ae85c110a7976c62938"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b89678825b68eccaf09e6ab71675fc0b0af1e099"]},"commit2Childs":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"f714d3d16beb7d9cc74e7ae85c110a7976c62938":["29ef99d61cda9641b6250bf9567329a6e65f901d","91a3609ac9a09ca0c8eee1b765401bbdacaceaf8","bde51b089eb7f86171eb3406e38a274743f9b7ac"],"29ef99d61cda9641b6250bf9567329a6e65f901d":[],"91a3609ac9a09ca0c8eee1b765401bbdacaceaf8":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["f714d3d16beb7d9cc74e7ae85c110a7976c62938","29ef99d61cda9641b6250bf9567329a6e65f901d","bde51b089eb7f86171eb3406e38a274743f9b7ac"],"bde51b089eb7f86171eb3406e38a274743f9b7ac":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["29ef99d61cda9641b6250bf9567329a6e65f901d","bde51b089eb7f86171eb3406e38a274743f9b7ac","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}