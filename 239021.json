{"path":"lucene/queries/src/java/org/apache/lucene/queries/function/docvalues/LongDocValues#getRangeScorer(Weight,LeafReaderContext,String,String,boolean,boolean).mjava","commits":[{"id":"6dbd758f2776b0129f6b3641b6490ddc68d7b0f3","date":1536316907,"type":1,"author":"Alan Woodward","isMerge":false,"pathNew":"lucene/queries/src/java/org/apache/lucene/queries/function/docvalues/LongDocValues#getRangeScorer(Weight,LeafReaderContext,String,String,boolean,boolean).mjava","pathOld":"lucene/queries/src/java/org/apache/lucene/queries/function/docvalues/LongDocValues#getRangeScorer(LeafReaderContext,String,String,boolean,boolean).mjava","sourceNew":"  @Override\n  public ValueSourceScorer getRangeScorer(Weight weight,  LeafReaderContext readerContext, String lowerVal, String upperVal, boolean includeLower, boolean includeUpper) {\n    long lower,upper;\n\n    // instead of using separate comparison functions, adjust the endpoints.\n\n    if (lowerVal==null) {\n      lower = Long.MIN_VALUE;\n    } else {\n      lower = externalToLong(lowerVal);\n      if (!includeLower && lower < Long.MAX_VALUE) lower++;\n    }\n\n     if (upperVal==null) {\n      upper = Long.MAX_VALUE;\n    } else {\n      upper = externalToLong(upperVal);\n      if (!includeUpper && upper > Long.MIN_VALUE) upper--;\n    }\n\n    final long ll = lower;\n    final long uu = upper;\n\n    return new ValueSourceScorer(weight, readerContext, this) {\n      @Override\n      public boolean matches(int doc) throws IOException {\n        if (!exists(doc)) return false;\n        long val = longVal(doc);\n        return val >= ll && val <= uu;\n      }\n    };\n  }\n\n","sourceOld":"  @Override\n  public ValueSourceScorer getRangeScorer(LeafReaderContext readerContext, String lowerVal, String upperVal, boolean includeLower, boolean includeUpper) {\n    long lower,upper;\n\n    // instead of using separate comparison functions, adjust the endpoints.\n\n    if (lowerVal==null) {\n      lower = Long.MIN_VALUE;\n    } else {\n      lower = externalToLong(lowerVal);\n      if (!includeLower && lower < Long.MAX_VALUE) lower++;\n    }\n\n     if (upperVal==null) {\n      upper = Long.MAX_VALUE;\n    } else {\n      upper = externalToLong(upperVal);\n      if (!includeUpper && upper > Long.MIN_VALUE) upper--;\n    }\n\n    final long ll = lower;\n    final long uu = upper;\n\n    return new ValueSourceScorer(readerContext, this) {\n      @Override\n      public boolean matches(int doc) throws IOException {\n        if (!exists(doc)) return false;\n        long val = longVal(doc);\n        return val >= ll && val <= uu;\n      }\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"6dbd758f2776b0129f6b3641b6490ddc68d7b0f3":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["6dbd758f2776b0129f6b3641b6490ddc68d7b0f3"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["6dbd758f2776b0129f6b3641b6490ddc68d7b0f3"],"6dbd758f2776b0129f6b3641b6490ddc68d7b0f3":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}