{"path":"lucene/src/java/org/apache/lucene/index/FieldInfos#clone().mjava","commits":[{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/FieldInfos#clone().mjava","pathOld":"src/java/org/apache/lucene/index/FieldInfos#clone().mjava","sourceNew":"  /**\n   * Returns a deep clone of this FieldInfos instance.\n   */\n  @Override\n  synchronized public Object clone() {\n    FieldInfos fis = new FieldInfos();\n    final int numField = byNumber.size();\n    for(int i=0;i<numField;i++) {\n      FieldInfo fi = (FieldInfo) ( byNumber.get(i)).clone();\n      fis.byNumber.add(fi);\n      fis.byName.put(fi.name, fi);\n    }\n    return fis;\n  }\n\n","sourceOld":"  /**\n   * Returns a deep clone of this FieldInfos instance.\n   */\n  @Override\n  synchronized public Object clone() {\n    FieldInfos fis = new FieldInfos();\n    final int numField = byNumber.size();\n    for(int i=0;i<numField;i++) {\n      FieldInfo fi = (FieldInfo) ( byNumber.get(i)).clone();\n      fis.byNumber.add(fi);\n      fis.byName.put(fi.name, fi);\n    }\n    return fis;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b0c7a8f7304b75b1528814c5820fa23a96816c27","date":1298314239,"type":3,"author":"Michael Busch","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/FieldInfos#clone().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/FieldInfos#clone().mjava","sourceNew":"  /**\n   * Returns a deep clone of this FieldInfos instance.\n   */\n  @Override\n  synchronized public Object clone() {\n    FieldInfos fis = new FieldInfos(globalFieldNumbers);\n    for (FieldInfo fi : this) {\n      FieldInfo clone = (FieldInfo) (fi).clone();\n      fis.localFieldInfos.put(clone);\n    }\n    return fis;\n  }\n\n","sourceOld":"  /**\n   * Returns a deep clone of this FieldInfos instance.\n   */\n  @Override\n  synchronized public Object clone() {\n    FieldInfos fis = new FieldInfos();\n    final int numField = byNumber.size();\n    for(int i=0;i<numField;i++) {\n      FieldInfo fi = (FieldInfo) ( byNumber.get(i)).clone();\n      fis.byNumber.add(fi);\n      fis.byName.put(fi.name, fi);\n    }\n    return fis;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bde51b089eb7f86171eb3406e38a274743f9b7ac","date":1298336439,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/FieldInfos#clone().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/FieldInfos#clone().mjava","sourceNew":"  /**\n   * Returns a deep clone of this FieldInfos instance.\n   */\n  @Override\n  synchronized public Object clone() {\n    FieldInfos fis = new FieldInfos(globalFieldNumbers);\n    for (FieldInfo fi : this) {\n      FieldInfo clone = (FieldInfo) (fi).clone();\n      fis.localFieldInfos.put(clone);\n    }\n    return fis;\n  }\n\n","sourceOld":"  /**\n   * Returns a deep clone of this FieldInfos instance.\n   */\n  @Override\n  synchronized public Object clone() {\n    FieldInfos fis = new FieldInfos();\n    final int numField = byNumber.size();\n    for(int i=0;i<numField;i++) {\n      FieldInfo fi = (FieldInfo) ( byNumber.get(i)).clone();\n      fis.byNumber.add(fi);\n      fis.byName.put(fi.name, fi);\n    }\n    return fis;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"14ec33385f6fbb6ce172882d14605790418a5d31","date":1298910796,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/FieldInfos#clone().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/FieldInfos#clone().mjava","sourceNew":"  /**\n   * Returns a deep clone of this FieldInfos instance.\n   */\n  @Override\n  synchronized public Object clone() {\n    FieldInfos fis = new FieldInfos();\n    final int numField = byNumber.size();\n    for(int i=0;i<numField;i++) {\n      FieldInfo fi = (FieldInfo) ( byNumber.get(i)).clone();\n      fis.byNumber.add(fi);\n      fis.byName.put(fi.name, fi);\n    }\n    return fis;\n  }\n\n","sourceOld":"  /**\n   * Returns a deep clone of this FieldInfos instance.\n   */\n  @Override\n  synchronized public Object clone() {\n    FieldInfos fis = new FieldInfos(globalFieldNumbers);\n    for (FieldInfo fi : this) {\n      FieldInfo clone = (FieldInfo) (fi).clone();\n      fis.localFieldInfos.put(clone);\n    }\n    return fis;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1224a4027481acce15495b03bce9b48b93b42722","date":1300792329,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/FieldInfos#clone().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/FieldInfos#clone().mjava","sourceNew":"  /**\n   * Returns a deep clone of this FieldInfos instance.\n   */\n  @Override\n  synchronized public Object clone() {\n    FieldInfos fis = new FieldInfos(globalFieldNumbers);\n    for (FieldInfo fi : this) {\n      FieldInfo clone = (FieldInfo) (fi).clone();\n      fis.putInternal(clone);\n    }\n    return fis;\n  }\n\n","sourceOld":"  /**\n   * Returns a deep clone of this FieldInfos instance.\n   */\n  @Override\n  synchronized public Object clone() {\n    FieldInfos fis = new FieldInfos();\n    final int numField = byNumber.size();\n    for(int i=0;i<numField;i++) {\n      FieldInfo fi = (FieldInfo) ( byNumber.get(i)).clone();\n      fis.byNumber.add(fi);\n      fis.byName.put(fi.name, fi);\n    }\n    return fis;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e92442af786151ee55bc283eb472f629e3c7b52b","date":1301070252,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/FieldInfos#clone().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/FieldInfos#clone().mjava","sourceNew":"  /**\n   * Returns a deep clone of this FieldInfos instance.\n   */\n  @Override\n  synchronized public Object clone() {\n    FieldInfos fis = new FieldInfos(globalFieldNumbers, segmentCodecsBuilder);\n    for (FieldInfo fi : this) {\n      FieldInfo clone = (FieldInfo) (fi).clone();\n      fis.putInternal(clone);\n    }\n    return fis;\n  }\n\n","sourceOld":"  /**\n   * Returns a deep clone of this FieldInfos instance.\n   */\n  @Override\n  synchronized public Object clone() {\n    FieldInfos fis = new FieldInfos(globalFieldNumbers);\n    for (FieldInfo fi : this) {\n      FieldInfo clone = (FieldInfo) (fi).clone();\n      fis.putInternal(clone);\n    }\n    return fis;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d619839baa8ce5503e496b94a9e42ad6f079293f","date":1301309428,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/FieldInfos#clone().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/FieldInfos#clone().mjava","sourceNew":"  /**\n   * Returns a deep clone of this FieldInfos instance.\n   */\n  @Override\n  synchronized public Object clone() {\n    FieldInfos fis = new FieldInfos(globalFieldNumbers, segmentCodecsBuilder);\n    for (FieldInfo fi : this) {\n      FieldInfo clone = (FieldInfo) (fi).clone();\n      fis.putInternal(clone);\n    }\n    return fis;\n  }\n\n","sourceOld":"  /**\n   * Returns a deep clone of this FieldInfos instance.\n   */\n  @Override\n  synchronized public Object clone() {\n    FieldInfos fis = new FieldInfos();\n    final int numField = byNumber.size();\n    for(int i=0;i<numField;i++) {\n      FieldInfo fi = (FieldInfo) ( byNumber.get(i)).clone();\n      fis.byNumber.add(fi);\n      fis.byName.put(fi.name, fi);\n    }\n    return fis;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c0ef0193974807e4bddf5432a6b0287fe4d6c9df","date":1301476645,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/FieldInfos#clone().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/FieldInfos#clone().mjava","sourceNew":"  /**\n   * Returns a deep clone of this FieldInfos instance.\n   */\n  @Override\n  synchronized public Object clone() {\n    FieldInfos fis = new FieldInfos(globalFieldNumbers, segmentCodecsBuilder);\n    for (FieldInfo fi : this) {\n      FieldInfo clone = (FieldInfo) (fi).clone();\n      fis.putInternal(clone);\n    }\n    return fis;\n  }\n\n","sourceOld":"  /**\n   * Returns a deep clone of this FieldInfos instance.\n   */\n  @Override\n  synchronized public Object clone() {\n    FieldInfos fis = new FieldInfos(globalFieldNumbers);\n    for (FieldInfo fi : this) {\n      FieldInfo clone = (FieldInfo) (fi).clone();\n      fis.localFieldInfos.put(clone);\n    }\n    return fis;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d3fe2fc74577855eadfb5eae3153c2fffdaaf791","date":1305237079,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/FieldInfos#clone().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/FieldInfos#clone().mjava","sourceNew":"  /**\n   * Returns a deep clone of this FieldInfos instance.\n   */\n  @Override\n  synchronized public Object clone() {\n    FieldInfos fis = new FieldInfos(globalFieldNumbers, segmentCodecsBuilder);\n    fis.format = format;\n    fis.hasProx = hasProx;\n    fis.hasVectors = hasVectors;\n    for (FieldInfo fi : this) {\n      FieldInfo clone = (FieldInfo) (fi).clone();\n      fis.putInternal(clone);\n    }\n    return fis;\n  }\n\n","sourceOld":"  /**\n   * Returns a deep clone of this FieldInfos instance.\n   */\n  @Override\n  synchronized public Object clone() {\n    FieldInfos fis = new FieldInfos(globalFieldNumbers, segmentCodecsBuilder);\n    for (FieldInfo fi : this) {\n      FieldInfo clone = (FieldInfo) (fi).clone();\n      fis.putInternal(clone);\n    }\n    return fis;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c700f8d0842d3e52bb2bdfbfdc046a137e836edb","date":1305285499,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/FieldInfos#clone().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/FieldInfos#clone().mjava","sourceNew":"  /**\n   * Returns a deep clone of this FieldInfos instance.\n   */\n  @Override\n  synchronized public Object clone() {\n    FieldInfos fis = new FieldInfos(globalFieldNumbers, segmentCodecsBuilder);\n    fis.format = format;\n    fis.hasProx = hasProx;\n    fis.hasVectors = hasVectors;\n    for (FieldInfo fi : this) {\n      FieldInfo clone = (FieldInfo) (fi).clone();\n      fis.putInternal(clone);\n    }\n    return fis;\n  }\n\n","sourceOld":"  /**\n   * Returns a deep clone of this FieldInfos instance.\n   */\n  @Override\n  synchronized public Object clone() {\n    FieldInfos fis = new FieldInfos(globalFieldNumbers, segmentCodecsBuilder);\n    for (FieldInfo fi : this) {\n      FieldInfo clone = (FieldInfo) (fi).clone();\n      fis.putInternal(clone);\n    }\n    return fis;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a3776dccca01c11e7046323cfad46a3b4a471233","date":1306100719,"type":3,"author":"Steven Rowe","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/FieldInfos#clone().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/FieldInfos#clone().mjava","sourceNew":"  /**\n   * Returns a deep clone of this FieldInfos instance.\n   */\n  @Override\n  synchronized public Object clone() {\n    FieldInfos fis = new FieldInfos(globalFieldNumbers, segmentCodecsBuilder);\n    fis.format = format;\n    fis.hasProx = hasProx;\n    fis.hasVectors = hasVectors;\n    for (FieldInfo fi : this) {\n      FieldInfo clone = (FieldInfo) (fi).clone();\n      fis.putInternal(clone);\n    }\n    return fis;\n  }\n\n","sourceOld":"  /**\n   * Returns a deep clone of this FieldInfos instance.\n   */\n  @Override\n  synchronized public Object clone() {\n    FieldInfos fis = new FieldInfos(globalFieldNumbers, segmentCodecsBuilder);\n    for (FieldInfo fi : this) {\n      FieldInfo clone = (FieldInfo) (fi).clone();\n      fis.putInternal(clone);\n    }\n    return fis;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2afd23a6f1242190c3409d8d81d5c5912d607fc9","date":1310477482,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/FieldInfos#clone().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/FieldInfos#clone().mjava","sourceNew":"  /**\n   * Returns a deep clone of this FieldInfos instance.\n   */\n  @Override\n  synchronized public Object clone() {\n    FieldInfos fis = new FieldInfos(globalFieldNumbers, segmentCodecsBuilder);\n    fis.format = format;\n    fis.hasFreq = hasFreq;\n    fis.hasProx = hasProx;\n    fis.hasVectors = hasVectors;\n    for (FieldInfo fi : this) {\n      FieldInfo clone = (FieldInfo) (fi).clone();\n      fis.putInternal(clone);\n    }\n    return fis;\n  }\n\n","sourceOld":"  /**\n   * Returns a deep clone of this FieldInfos instance.\n   */\n  @Override\n  synchronized public Object clone() {\n    FieldInfos fis = new FieldInfos(globalFieldNumbers, segmentCodecsBuilder);\n    fis.format = format;\n    fis.hasProx = hasProx;\n    fis.hasVectors = hasVectors;\n    for (FieldInfo fi : this) {\n      FieldInfo clone = (FieldInfo) (fi).clone();\n      fis.putInternal(clone);\n    }\n    return fis;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7b91922b55d15444d554721b352861d028eb8278","date":1320421415,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/FieldInfos#clone().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/FieldInfos#clone().mjava","sourceNew":"  /**\n   * Returns a deep clone of this FieldInfos instance.\n   */\n  @Override\n  synchronized public Object clone() {\n    FieldInfos fis = new FieldInfos(globalFieldNumbers);\n    fis.format = format;\n    fis.hasFreq = hasFreq;\n    fis.hasProx = hasProx;\n    fis.hasVectors = hasVectors;\n    for (FieldInfo fi : this) {\n      FieldInfo clone = (FieldInfo) (fi).clone();\n      fis.putInternal(clone);\n    }\n    return fis;\n  }\n\n","sourceOld":"  /**\n   * Returns a deep clone of this FieldInfos instance.\n   */\n  @Override\n  synchronized public Object clone() {\n    FieldInfos fis = new FieldInfos(globalFieldNumbers, segmentCodecsBuilder);\n    fis.format = format;\n    fis.hasFreq = hasFreq;\n    fis.hasProx = hasProx;\n    fis.hasVectors = hasVectors;\n    for (FieldInfo fi : this) {\n      FieldInfo clone = (FieldInfo) (fi).clone();\n      fis.putInternal(clone);\n    }\n    return fis;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3cc749c053615f5871f3b95715fe292f34e70a53","date":1321470575,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/FieldInfos#clone().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/FieldInfos#clone().mjava","sourceNew":"  /**\n   * Returns a deep clone of this FieldInfos instance.\n   */\n  @Override\n  synchronized public Object clone() {\n    FieldInfos fis = new FieldInfos(globalFieldNumbers);\n    fis.hasFreq = hasFreq;\n    fis.hasProx = hasProx;\n    fis.hasVectors = hasVectors;\n    for (FieldInfo fi : this) {\n      FieldInfo clone = (FieldInfo) (fi).clone();\n      fis.putInternal(clone);\n    }\n    return fis;\n  }\n\n","sourceOld":"  /**\n   * Returns a deep clone of this FieldInfos instance.\n   */\n  @Override\n  synchronized public Object clone() {\n    FieldInfos fis = new FieldInfos(globalFieldNumbers);\n    fis.format = format;\n    fis.hasFreq = hasFreq;\n    fis.hasProx = hasProx;\n    fis.hasVectors = hasVectors;\n    for (FieldInfo fi : this) {\n      FieldInfo clone = (FieldInfo) (fi).clone();\n      fis.putInternal(clone);\n    }\n    return fis;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":5,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/FieldInfos#clone().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/FieldInfos#clone().mjava","sourceNew":"  /**\n   * Returns a deep clone of this FieldInfos instance.\n   */\n  @Override\n  synchronized public Object clone() {\n    FieldInfos fis = new FieldInfos(globalFieldNumbers);\n    fis.hasFreq = hasFreq;\n    fis.hasProx = hasProx;\n    fis.hasVectors = hasVectors;\n    for (FieldInfo fi : this) {\n      FieldInfo clone = (FieldInfo) (fi).clone();\n      fis.putInternal(clone);\n    }\n    return fis;\n  }\n\n","sourceOld":"  /**\n   * Returns a deep clone of this FieldInfos instance.\n   */\n  @Override\n  synchronized public Object clone() {\n    FieldInfos fis = new FieldInfos(globalFieldNumbers);\n    fis.hasFreq = hasFreq;\n    fis.hasProx = hasProx;\n    fis.hasVectors = hasVectors;\n    for (FieldInfo fi : this) {\n      FieldInfo clone = (FieldInfo) (fi).clone();\n      fis.putInternal(clone);\n    }\n    return fis;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"2afd23a6f1242190c3409d8d81d5c5912d607fc9":["d3fe2fc74577855eadfb5eae3153c2fffdaaf791"],"d3fe2fc74577855eadfb5eae3153c2fffdaaf791":["e92442af786151ee55bc283eb472f629e3c7b52b"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["3cc749c053615f5871f3b95715fe292f34e70a53"],"3cc749c053615f5871f3b95715fe292f34e70a53":["7b91922b55d15444d554721b352861d028eb8278"],"7b91922b55d15444d554721b352861d028eb8278":["2afd23a6f1242190c3409d8d81d5c5912d607fc9"],"e92442af786151ee55bc283eb472f629e3c7b52b":["1224a4027481acce15495b03bce9b48b93b42722"],"c0ef0193974807e4bddf5432a6b0287fe4d6c9df":["bde51b089eb7f86171eb3406e38a274743f9b7ac","e92442af786151ee55bc283eb472f629e3c7b52b"],"14ec33385f6fbb6ce172882d14605790418a5d31":["b0c7a8f7304b75b1528814c5820fa23a96816c27"],"d619839baa8ce5503e496b94a9e42ad6f079293f":["9454a6510e2db155fb01faa5c049b06ece95fab9","e92442af786151ee55bc283eb472f629e3c7b52b"],"b0c7a8f7304b75b1528814c5820fa23a96816c27":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"a3776dccca01c11e7046323cfad46a3b4a471233":["e92442af786151ee55bc283eb472f629e3c7b52b","d3fe2fc74577855eadfb5eae3153c2fffdaaf791"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"c700f8d0842d3e52bb2bdfbfdc046a137e836edb":["d619839baa8ce5503e496b94a9e42ad6f079293f","d3fe2fc74577855eadfb5eae3153c2fffdaaf791"],"bde51b089eb7f86171eb3406e38a274743f9b7ac":["9454a6510e2db155fb01faa5c049b06ece95fab9","b0c7a8f7304b75b1528814c5820fa23a96816c27"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"1224a4027481acce15495b03bce9b48b93b42722":["14ec33385f6fbb6ce172882d14605790418a5d31"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"2afd23a6f1242190c3409d8d81d5c5912d607fc9":["7b91922b55d15444d554721b352861d028eb8278"],"d3fe2fc74577855eadfb5eae3153c2fffdaaf791":["2afd23a6f1242190c3409d8d81d5c5912d607fc9","a3776dccca01c11e7046323cfad46a3b4a471233","c700f8d0842d3e52bb2bdfbfdc046a137e836edb"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3cc749c053615f5871f3b95715fe292f34e70a53":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"7b91922b55d15444d554721b352861d028eb8278":["3cc749c053615f5871f3b95715fe292f34e70a53"],"e92442af786151ee55bc283eb472f629e3c7b52b":["d3fe2fc74577855eadfb5eae3153c2fffdaaf791","c0ef0193974807e4bddf5432a6b0287fe4d6c9df","d619839baa8ce5503e496b94a9e42ad6f079293f","a3776dccca01c11e7046323cfad46a3b4a471233"],"c0ef0193974807e4bddf5432a6b0287fe4d6c9df":[],"14ec33385f6fbb6ce172882d14605790418a5d31":["1224a4027481acce15495b03bce9b48b93b42722"],"d619839baa8ce5503e496b94a9e42ad6f079293f":["c700f8d0842d3e52bb2bdfbfdc046a137e836edb"],"b0c7a8f7304b75b1528814c5820fa23a96816c27":["14ec33385f6fbb6ce172882d14605790418a5d31","bde51b089eb7f86171eb3406e38a274743f9b7ac"],"a3776dccca01c11e7046323cfad46a3b4a471233":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"c700f8d0842d3e52bb2bdfbfdc046a137e836edb":[],"bde51b089eb7f86171eb3406e38a274743f9b7ac":["c0ef0193974807e4bddf5432a6b0287fe4d6c9df"],"1224a4027481acce15495b03bce9b48b93b42722":["e92442af786151ee55bc283eb472f629e3c7b52b"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["d619839baa8ce5503e496b94a9e42ad6f079293f","b0c7a8f7304b75b1528814c5820fa23a96816c27","bde51b089eb7f86171eb3406e38a274743f9b7ac"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["c0ef0193974807e4bddf5432a6b0287fe4d6c9df","a3776dccca01c11e7046323cfad46a3b4a471233","c700f8d0842d3e52bb2bdfbfdc046a137e836edb","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}