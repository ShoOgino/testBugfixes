{"path":"solr/src/java/org/apache/solr/search/function/LiteralValueSource#getValues(Map,AtomicReaderContext).mjava","commits":[{"id":"c220849f876de24a79f756f65b3eb045db59f63f","date":1294902803,"type":1,"author":"Simon Willnauer","isMerge":false,"pathNew":"solr/src/java/org/apache/solr/search/function/LiteralValueSource#getValues(Map,AtomicReaderContext).mjava","pathOld":"solr/src/java/org/apache/solr/search/function/LiteralValueSource#getValues(Map,IndexReader).mjava","sourceNew":"  @Override\n  public DocValues getValues(Map context, AtomicReaderContext readerContext) throws IOException {\n\n    return new DocValues() {\n      @Override\n      public String strVal(int doc) {\n        return string;\n      }\n\n      @Override\n      public String toString(int doc) {\n        return string;\n      }\n    };\n  }\n\n","sourceOld":"  @Override\n  public DocValues getValues(Map context, IndexReader reader) throws IOException {\n\n    return new DocValues() {\n      @Override\n      public String strVal(int doc) {\n        return string;\n      }\n\n      @Override\n      public String toString(int doc) {\n        return string;\n      }\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"868da859b43505d9d2a023bfeae6dd0c795f5295","date":1294948401,"type":0,"author":"Michael Busch","isMerge":true,"pathNew":"solr/src/java/org/apache/solr/search/function/LiteralValueSource#getValues(Map,AtomicReaderContext).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public DocValues getValues(Map context, AtomicReaderContext readerContext) throws IOException {\n\n    return new DocValues() {\n      @Override\n      public String strVal(int doc) {\n        return string;\n      }\n\n      @Override\n      public String toString(int doc) {\n        return string;\n      }\n    };\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"29ef99d61cda9641b6250bf9567329a6e65f901d","date":1297244127,"type":0,"author":"Simon Willnauer","isMerge":true,"pathNew":"solr/src/java/org/apache/solr/search/function/LiteralValueSource#getValues(Map,AtomicReaderContext).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public DocValues getValues(Map context, AtomicReaderContext readerContext) throws IOException {\n\n    return new DocValues() {\n      @Override\n      public String strVal(int doc) {\n        return string;\n      }\n\n      @Override\n      public String toString(int doc) {\n        return string;\n      }\n    };\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"5eeff6b8391d7b5e70e37193643d76c05a3abf75","date":1302902022,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"solr/src/java/org/apache/solr/search/function/LiteralValueSource#getValues(Map,AtomicReaderContext).mjava","pathOld":"solr/src/java/org/apache/solr/search/function/LiteralValueSource#getValues(Map,AtomicReaderContext).mjava","sourceNew":"  @Override\n  public DocValues getValues(Map context, AtomicReaderContext readerContext) throws IOException {\n\n    return new StrDocValues(this) {\n      @Override\n      public String strVal(int doc) {\n        return string;\n      }\n\n      @Override\n      public boolean bytesVal(int doc, BytesRef target) {\n        target.copy(bytesRef);\n        return true;\n      }\n\n      @Override\n      public String toString(int doc) {\n        return string;\n      }\n    };\n  }\n\n","sourceOld":"  @Override\n  public DocValues getValues(Map context, AtomicReaderContext readerContext) throws IOException {\n\n    return new DocValues() {\n      @Override\n      public String strVal(int doc) {\n        return string;\n      }\n\n      @Override\n      public String toString(int doc) {\n        return string;\n      }\n    };\n  }\n\n","bugFix":["8f403af4d6e4de7f9c0881d6592dfb522d5fad41"],"bugIntro":["7dc6ea5fd38ce7aa8f36b3bac8b757da77f31d50","7dc6ea5fd38ce7aa8f36b3bac8b757da77f31d50","7dc6ea5fd38ce7aa8f36b3bac8b757da77f31d50"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"d493718201f0d0c54c773fb323d87bbd2fbffe41","date":1303546048,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"solr/src/java/org/apache/solr/search/function/LiteralValueSource#getValues(Map,AtomicReaderContext).mjava","pathOld":"solr/src/java/org/apache/solr/search/function/LiteralValueSource#getValues(Map,AtomicReaderContext).mjava","sourceNew":"  @Override\n  public DocValues getValues(Map context, AtomicReaderContext readerContext) throws IOException {\n\n    return new StrDocValues(this) {\n      @Override\n      public String strVal(int doc) {\n        return string;\n      }\n\n      @Override\n      public boolean bytesVal(int doc, BytesRef target) {\n        target.copy(bytesRef);\n        return true;\n      }\n\n      @Override\n      public String toString(int doc) {\n        return string;\n      }\n    };\n  }\n\n","sourceOld":"  @Override\n  public DocValues getValues(Map context, AtomicReaderContext readerContext) throws IOException {\n\n    return new DocValues() {\n      @Override\n      public String strVal(int doc) {\n        return string;\n      }\n\n      @Override\n      public String toString(int doc) {\n        return string;\n      }\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"135621f3a0670a9394eb563224a3b76cc4dddc0f","date":1304344257,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"solr/src/java/org/apache/solr/search/function/LiteralValueSource#getValues(Map,AtomicReaderContext).mjava","pathOld":"solr/src/java/org/apache/solr/search/function/LiteralValueSource#getValues(Map,AtomicReaderContext).mjava","sourceNew":"  @Override\n  public DocValues getValues(Map context, AtomicReaderContext readerContext) throws IOException {\n\n    return new StrDocValues(this) {\n      @Override\n      public String strVal(int doc) {\n        return string;\n      }\n\n      @Override\n      public boolean bytesVal(int doc, BytesRef target) {\n        target.copy(bytesRef);\n        return true;\n      }\n\n      @Override\n      public String toString(int doc) {\n        return string;\n      }\n    };\n  }\n\n","sourceOld":"  @Override\n  public DocValues getValues(Map context, AtomicReaderContext readerContext) throws IOException {\n\n    return new DocValues() {\n      @Override\n      public String strVal(int doc) {\n        return string;\n      }\n\n      @Override\n      public String toString(int doc) {\n        return string;\n      }\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a3776dccca01c11e7046323cfad46a3b4a471233","date":1306100719,"type":3,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/src/java/org/apache/solr/search/function/LiteralValueSource#getValues(Map,AtomicReaderContext).mjava","pathOld":"solr/src/java/org/apache/solr/search/function/LiteralValueSource#getValues(Map,AtomicReaderContext).mjava","sourceNew":"  @Override\n  public DocValues getValues(Map context, AtomicReaderContext readerContext) throws IOException {\n\n    return new StrDocValues(this) {\n      @Override\n      public String strVal(int doc) {\n        return string;\n      }\n\n      @Override\n      public boolean bytesVal(int doc, BytesRef target) {\n        target.copy(bytesRef);\n        return true;\n      }\n\n      @Override\n      public String toString(int doc) {\n        return string;\n      }\n    };\n  }\n\n","sourceOld":"  @Override\n  public DocValues getValues(Map context, AtomicReaderContext readerContext) throws IOException {\n\n    return new DocValues() {\n      @Override\n      public String strVal(int doc) {\n        return string;\n      }\n\n      @Override\n      public String toString(int doc) {\n        return string;\n      }\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"51cb88215648c6da23e00f2ffb57a5e3e1ef14be","date":1309303947,"type":5,"author":"Christopher John Male","isMerge":false,"pathNew":"modules/queries/src/java/org/apache/lucene/queries/function/valuesource/LiteralValueSource#getValues(Map,AtomicReaderContext).mjava","pathOld":"solr/src/java/org/apache/solr/search/function/LiteralValueSource#getValues(Map,AtomicReaderContext).mjava","sourceNew":"  @Override\n  public DocValues getValues(Map context, AtomicReaderContext readerContext) throws IOException {\n\n    return new StrDocValues(this) {\n      @Override\n      public String strVal(int doc) {\n        return string;\n      }\n\n      @Override\n      public boolean bytesVal(int doc, BytesRef target) {\n        target.copy(bytesRef);\n        return true;\n      }\n\n      @Override\n      public String toString(int doc) {\n        return string;\n      }\n    };\n  }\n\n","sourceOld":"  @Override\n  public DocValues getValues(Map context, AtomicReaderContext readerContext) throws IOException {\n\n    return new StrDocValues(this) {\n      @Override\n      public String strVal(int doc) {\n        return string;\n      }\n\n      @Override\n      public boolean bytesVal(int doc, BytesRef target) {\n        target.copy(bytesRef);\n        return true;\n      }\n\n      @Override\n      public String toString(int doc) {\n        return string;\n      }\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"817d8435e9135b756f08ce6710ab0baac51bdf88","date":1309986993,"type":5,"author":"Steven Rowe","isMerge":true,"pathNew":"modules/queries/src/java/org/apache/lucene/queries/function/valuesource/LiteralValueSource#getValues(Map,AtomicReaderContext).mjava","pathOld":"solr/src/java/org/apache/solr/search/function/LiteralValueSource#getValues(Map,AtomicReaderContext).mjava","sourceNew":"  @Override\n  public DocValues getValues(Map context, AtomicReaderContext readerContext) throws IOException {\n\n    return new StrDocValues(this) {\n      @Override\n      public String strVal(int doc) {\n        return string;\n      }\n\n      @Override\n      public boolean bytesVal(int doc, BytesRef target) {\n        target.copy(bytesRef);\n        return true;\n      }\n\n      @Override\n      public String toString(int doc) {\n        return string;\n      }\n    };\n  }\n\n","sourceOld":"  @Override\n  public DocValues getValues(Map context, AtomicReaderContext readerContext) throws IOException {\n\n    return new StrDocValues(this) {\n      @Override\n      public String strVal(int doc) {\n        return string;\n      }\n\n      @Override\n      public boolean bytesVal(int doc, BytesRef target) {\n        target.copy(bytesRef);\n        return true;\n      }\n\n      @Override\n      public String toString(int doc) {\n        return string;\n      }\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d083e83f225b11e5fdd900e83d26ddb385b6955c","date":1310029438,"type":5,"author":"Simon Willnauer","isMerge":true,"pathNew":"modules/queries/src/java/org/apache/lucene/queries/function/valuesource/LiteralValueSource#getValues(Map,AtomicReaderContext).mjava","pathOld":"solr/src/java/org/apache/solr/search/function/LiteralValueSource#getValues(Map,AtomicReaderContext).mjava","sourceNew":"  @Override\n  public DocValues getValues(Map context, AtomicReaderContext readerContext) throws IOException {\n\n    return new StrDocValues(this) {\n      @Override\n      public String strVal(int doc) {\n        return string;\n      }\n\n      @Override\n      public boolean bytesVal(int doc, BytesRef target) {\n        target.copy(bytesRef);\n        return true;\n      }\n\n      @Override\n      public String toString(int doc) {\n        return string;\n      }\n    };\n  }\n\n","sourceOld":"  @Override\n  public DocValues getValues(Map context, AtomicReaderContext readerContext) throws IOException {\n\n    return new StrDocValues(this) {\n      @Override\n      public String strVal(int doc) {\n        return string;\n      }\n\n      @Override\n      public boolean bytesVal(int doc, BytesRef target) {\n        target.copy(bytesRef);\n        return true;\n      }\n\n      @Override\n      public String toString(int doc) {\n        return string;\n      }\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"5eeff6b8391d7b5e70e37193643d76c05a3abf75":["c220849f876de24a79f756f65b3eb045db59f63f"],"c220849f876de24a79f756f65b3eb045db59f63f":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a3776dccca01c11e7046323cfad46a3b4a471233":["c220849f876de24a79f756f65b3eb045db59f63f","5eeff6b8391d7b5e70e37193643d76c05a3abf75"],"29ef99d61cda9641b6250bf9567329a6e65f901d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","c220849f876de24a79f756f65b3eb045db59f63f"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"135621f3a0670a9394eb563224a3b76cc4dddc0f":["29ef99d61cda9641b6250bf9567329a6e65f901d","5eeff6b8391d7b5e70e37193643d76c05a3abf75"],"d493718201f0d0c54c773fb323d87bbd2fbffe41":["868da859b43505d9d2a023bfeae6dd0c795f5295","5eeff6b8391d7b5e70e37193643d76c05a3abf75"],"d083e83f225b11e5fdd900e83d26ddb385b6955c":["5eeff6b8391d7b5e70e37193643d76c05a3abf75","51cb88215648c6da23e00f2ffb57a5e3e1ef14be"],"868da859b43505d9d2a023bfeae6dd0c795f5295":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","c220849f876de24a79f756f65b3eb045db59f63f"],"817d8435e9135b756f08ce6710ab0baac51bdf88":["a3776dccca01c11e7046323cfad46a3b4a471233","51cb88215648c6da23e00f2ffb57a5e3e1ef14be"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["51cb88215648c6da23e00f2ffb57a5e3e1ef14be"],"51cb88215648c6da23e00f2ffb57a5e3e1ef14be":["5eeff6b8391d7b5e70e37193643d76c05a3abf75"]},"commit2Childs":{"5eeff6b8391d7b5e70e37193643d76c05a3abf75":["a3776dccca01c11e7046323cfad46a3b4a471233","135621f3a0670a9394eb563224a3b76cc4dddc0f","d493718201f0d0c54c773fb323d87bbd2fbffe41","d083e83f225b11e5fdd900e83d26ddb385b6955c","51cb88215648c6da23e00f2ffb57a5e3e1ef14be"],"c220849f876de24a79f756f65b3eb045db59f63f":["5eeff6b8391d7b5e70e37193643d76c05a3abf75","a3776dccca01c11e7046323cfad46a3b4a471233","29ef99d61cda9641b6250bf9567329a6e65f901d","868da859b43505d9d2a023bfeae6dd0c795f5295"],"a3776dccca01c11e7046323cfad46a3b4a471233":["817d8435e9135b756f08ce6710ab0baac51bdf88"],"29ef99d61cda9641b6250bf9567329a6e65f901d":["135621f3a0670a9394eb563224a3b76cc4dddc0f"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c220849f876de24a79f756f65b3eb045db59f63f","29ef99d61cda9641b6250bf9567329a6e65f901d","868da859b43505d9d2a023bfeae6dd0c795f5295"],"135621f3a0670a9394eb563224a3b76cc4dddc0f":[],"d493718201f0d0c54c773fb323d87bbd2fbffe41":[],"868da859b43505d9d2a023bfeae6dd0c795f5295":["d493718201f0d0c54c773fb323d87bbd2fbffe41"],"d083e83f225b11e5fdd900e83d26ddb385b6955c":[],"817d8435e9135b756f08ce6710ab0baac51bdf88":[],"51cb88215648c6da23e00f2ffb57a5e3e1ef14be":["d083e83f225b11e5fdd900e83d26ddb385b6955c","817d8435e9135b756f08ce6710ab0baac51bdf88","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["135621f3a0670a9394eb563224a3b76cc4dddc0f","d493718201f0d0c54c773fb323d87bbd2fbffe41","d083e83f225b11e5fdd900e83d26ddb385b6955c","817d8435e9135b756f08ce6710ab0baac51bdf88","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}