{"path":"lucene/core/src/test/org/apache/lucene/util/TestIOUtils#testGetMountPoint().mjava","commits":[{"id":"f1db7bd2068060be0b68fcca95c8270c7cb60f6c","date":1419003415,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/util/TestIOUtils#testGetMountPoint().mjava","pathOld":"/dev/null","sourceNew":"  public void testGetMountPoint() throws Exception {\n    Path dir = createTempDir();\n    FileStore actual = Files.getFileStore(dir);\n\n    assertEquals(\"/\", IOUtils.getMountPoint(new MockFileStore(actual, \"/ (/dev/sda1)\")));\n    assertEquals(\"/test/ space(((trash)))/\", IOUtils.getMountPoint(new MockFileStore(actual, \"/test/ space(((trash)))/ (/dev/sda1)\")));\n    assertEquals(\"/\", IOUtils.getMountPoint(new MockFileStore(actual, \"/ (notreal)\")));\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["685c242a4f1bc78f1fa61c131bd557355edad6c7"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"685c242a4f1bc78f1fa61c131bd557355edad6c7","date":1429208182,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/util/TestIOUtils#testGetMountPoint().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/util/TestIOUtils#testGetMountPoint().mjava","sourceNew":"  public void testGetMountPoint() throws Exception {\n    assertEquals(\"/\", IOUtils.getMountPoint(new MockFileStore(\"/ (/dev/sda1)\", \"ext4\", \"/dev/sda1\")));\n    assertEquals(\"/test/ space(((trash)))/\", IOUtils.getMountPoint(new MockFileStore(\"/test/ space(((trash)))/ (/dev/sda1)\", \"ext3\", \"/dev/sda1\")));\n    assertEquals(\"/\", IOUtils.getMountPoint(new MockFileStore(\"/ (notreal)\", \"ext2\", \"notreal\")));\n  }\n\n","sourceOld":"  public void testGetMountPoint() throws Exception {\n    Path dir = createTempDir();\n    FileStore actual = Files.getFileStore(dir);\n\n    assertEquals(\"/\", IOUtils.getMountPoint(new MockFileStore(actual, \"/ (/dev/sda1)\")));\n    assertEquals(\"/test/ space(((trash)))/\", IOUtils.getMountPoint(new MockFileStore(actual, \"/test/ space(((trash)))/ (/dev/sda1)\")));\n    assertEquals(\"/\", IOUtils.getMountPoint(new MockFileStore(actual, \"/ (notreal)\")));\n  }\n\n","bugFix":["f1db7bd2068060be0b68fcca95c8270c7cb60f6c"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"685c242a4f1bc78f1fa61c131bd557355edad6c7":["f1db7bd2068060be0b68fcca95c8270c7cb60f6c"],"f1db7bd2068060be0b68fcca95c8270c7cb60f6c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["685c242a4f1bc78f1fa61c131bd557355edad6c7"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["f1db7bd2068060be0b68fcca95c8270c7cb60f6c"],"685c242a4f1bc78f1fa61c131bd557355edad6c7":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"f1db7bd2068060be0b68fcca95c8270c7cb60f6c":["685c242a4f1bc78f1fa61c131bd557355edad6c7"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}