{"path":"contrib/spatial/src/java/org/apache/lucene/spatial/tier/projections/CartesianTierPlotter#setTierVerticalPosDivider().mjava","commits":[{"id":"04a4a94db1eb59c8583adb166acfe686a031bedc","date":1230622637,"type":0,"author":"Ryan McKinley","isMerge":false,"pathNew":"contrib/spatial/src/java/org/apache/lucene/spatial/tier/projections/CartesianTierPlotter#setTierVerticalPosDivider().mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Get nearest max power of 10 greater than\n   * the tierlen\n   * e.g\n   * tierId of 13 has tierLen 8192\n   * nearest max power of 10 greater than tierLen \n   * would be 10,000\n   */\n  \n  private void setTierVerticalPosDivider() {\n    \n    // ceiling of log base 10 of tierLen\n    \n    tierVerticalPosDivider = new Double(Math.ceil(\n          Math.log10(new Integer(this.tierLength).doubleValue()))).intValue();\n    \n    // \n    tierVerticalPosDivider = (int)Math.pow(10, tierVerticalPosDivider );\n    \n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6bcde5e3f23911110baa101ed062b544162825b5","date":1254521804,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"contrib/spatial/src/java/org/apache/lucene/spatial/tier/projections/CartesianTierPlotter#setTierVerticalPosDivider().mjava","pathOld":"contrib/spatial/src/java/org/apache/lucene/spatial/tier/projections/CartesianTierPlotter#setTierVerticalPosDivider().mjava","sourceNew":"  /**\n   * Get nearest max power of 10 greater than\n   * the tierlen\n   * e.g\n   * tierId of 13 has tierLen 8192\n   * nearest max power of 10 greater than tierLen \n   * would be 10,000\n   */\n  \n  private void setTierVerticalPosDivider() {\n    \n    // ceiling of log base 10 of tierLen\n    \n    tierVerticalPosDivider = Double.valueOf(Math.ceil(\n          Math.log10(Integer.valueOf(this.tierLength).doubleValue()))).intValue();\n    \n    // \n    tierVerticalPosDivider = (int)Math.pow(10, tierVerticalPosDivider );\n    \n  }\n\n","sourceOld":"  /**\n   * Get nearest max power of 10 greater than\n   * the tierlen\n   * e.g\n   * tierId of 13 has tierLen 8192\n   * nearest max power of 10 greater than tierLen \n   * would be 10,000\n   */\n  \n  private void setTierVerticalPosDivider() {\n    \n    // ceiling of log base 10 of tierLen\n    \n    tierVerticalPosDivider = new Double(Math.ceil(\n          Math.log10(new Integer(this.tierLength).doubleValue()))).intValue();\n    \n    // \n    tierVerticalPosDivider = (int)Math.pow(10, tierVerticalPosDivider );\n    \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/contrib/spatial/src/java/org/apache/lucene/spatial/tier/projections/CartesianTierPlotter#setTierVerticalPosDivider().mjava","pathOld":"contrib/spatial/src/java/org/apache/lucene/spatial/tier/projections/CartesianTierPlotter#setTierVerticalPosDivider().mjava","sourceNew":"  /**\n   * Get nearest max power of 10 greater than\n   * the tierlen\n   * e.g\n   * tierId of 13 has tierLen 8192\n   * nearest max power of 10 greater than tierLen \n   * would be 10,000\n   */\n  \n  private void setTierVerticalPosDivider() {\n    \n    // ceiling of log base 10 of tierLen\n    \n    tierVerticalPosDivider = Double.valueOf(Math.ceil(\n          Math.log10(Integer.valueOf(this.tierLength).doubleValue()))).intValue();\n    \n    // \n    tierVerticalPosDivider = (int)Math.pow(10, tierVerticalPosDivider );\n    \n  }\n\n","sourceOld":"  /**\n   * Get nearest max power of 10 greater than\n   * the tierlen\n   * e.g\n   * tierId of 13 has tierLen 8192\n   * nearest max power of 10 greater than tierLen \n   * would be 10,000\n   */\n  \n  private void setTierVerticalPosDivider() {\n    \n    // ceiling of log base 10 of tierLen\n    \n    tierVerticalPosDivider = Double.valueOf(Math.ceil(\n          Math.log10(Integer.valueOf(this.tierLength).doubleValue()))).intValue();\n    \n    // \n    tierVerticalPosDivider = (int)Math.pow(10, tierVerticalPosDivider );\n    \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"6bcde5e3f23911110baa101ed062b544162825b5":["04a4a94db1eb59c8583adb166acfe686a031bedc"],"04a4a94db1eb59c8583adb166acfe686a031bedc":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["6bcde5e3f23911110baa101ed062b544162825b5"]},"commit2Childs":{"6bcde5e3f23911110baa101ed062b544162825b5":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"04a4a94db1eb59c8583adb166acfe686a031bedc":["6bcde5e3f23911110baa101ed062b544162825b5"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["04a4a94db1eb59c8583adb166acfe686a031bedc"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}