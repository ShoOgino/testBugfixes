{"path":"solr/core/src/java/org/apache/solr/handler/SQLHandler.TableStream#open().mjava","commits":[{"id":"aa9b48fdb08e049dc94a4077226b510eb68f2b24","date":1458766161,"type":0,"author":"Kevin Risden","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/SQLHandler.TableStream#open().mjava","pathOld":"/dev/null","sourceNew":"    public void open() throws IOException {\n      this.tables = new ArrayList<>();\n\n      CloudSolrClient cloudSolrClient = this.context.getSolrClientCache().getCloudSolrClient(this.zkHost);\n      cloudSolrClient.connect();\n      ZkStateReader zkStateReader = cloudSolrClient.getZkStateReader();\n      if (zkStateReader.getClusterState().getCollections().size() != 0) {\n        this.tables.addAll(zkStateReader.getClusterState().getCollections());\n      }\n      Collections.sort(this.tables);\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d984627825732e682759c22df7a3b171a80f3812","date":1461857653,"type":4,"author":"Kevin Risden","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/core/src/java/org/apache/solr/handler/SQLHandler.TableStream#open().mjava","sourceNew":null,"sourceOld":"    public void open() throws IOException {\n      this.tables = new ArrayList<>();\n\n      CloudSolrClient cloudSolrClient = this.context.getSolrClientCache().getCloudSolrClient(this.zkHost);\n      cloudSolrClient.connect();\n      ZkStateReader zkStateReader = cloudSolrClient.getZkStateReader();\n      if (zkStateReader.getClusterState().getCollections().size() != 0) {\n        this.tables.addAll(zkStateReader.getClusterState().getCollections());\n      }\n      Collections.sort(this.tables);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e9974f61802aea1d15849a1053f88f5e89fc32b4","date":1462405923,"type":3,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/SQLHandler.TableStream#open().mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/SQLHandler.TableStream#open().mjava","sourceNew":"    public void open() throws IOException {\n      this.tables = new ArrayList<>();\n\n      CloudSolrClient cloudSolrClient = this.context.getSolrClientCache().getCloudSolrClient(this.zkHost);\n      cloudSolrClient.connect();\n      ZkStateReader zkStateReader = cloudSolrClient.getZkStateReader();\n      Map<String, DocCollection> collections = zkStateReader.getClusterState().getCollectionsMap();\n      if (collections.size() != 0) {\n        this.tables.addAll(collections.keySet());\n      }\n      Collections.sort(this.tables);\n    }\n\n","sourceOld":"    public void open() throws IOException {\n      this.tables = new ArrayList<>();\n\n      CloudSolrClient cloudSolrClient = this.context.getSolrClientCache().getCloudSolrClient(this.zkHost);\n      cloudSolrClient.connect();\n      ZkStateReader zkStateReader = cloudSolrClient.getZkStateReader();\n      if (zkStateReader.getClusterState().getCollections().size() != 0) {\n        this.tables.addAll(zkStateReader.getClusterState().getCollections());\n      }\n      Collections.sort(this.tables);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"73450c0955930295d34703e7ddbfc6973b7a121a","date":1462431925,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/handler/SQLHandler.TableStream#open().mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/SQLHandler.TableStream#open().mjava","sourceNew":"    public void open() throws IOException {\n      this.tables = new ArrayList<>();\n\n      CloudSolrClient cloudSolrClient = this.context.getSolrClientCache().getCloudSolrClient(this.zkHost);\n      cloudSolrClient.connect();\n      ZkStateReader zkStateReader = cloudSolrClient.getZkStateReader();\n      Map<String, DocCollection> collections = zkStateReader.getClusterState().getCollectionsMap();\n      if (collections.size() != 0) {\n        this.tables.addAll(collections.keySet());\n      }\n      Collections.sort(this.tables);\n    }\n\n","sourceOld":"    public void open() throws IOException {\n      this.tables = new ArrayList<>();\n\n      CloudSolrClient cloudSolrClient = this.context.getSolrClientCache().getCloudSolrClient(this.zkHost);\n      cloudSolrClient.connect();\n      ZkStateReader zkStateReader = cloudSolrClient.getZkStateReader();\n      if (zkStateReader.getClusterState().getCollections().size() != 0) {\n        this.tables.addAll(zkStateReader.getClusterState().getCollections());\n      }\n      Collections.sort(this.tables);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a8ed5da4b0191db6bc7f77f9feb35da6bd76f904","date":1462576651,"type":3,"author":"Mike McCandless","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/handler/SQLHandler.TableStream#open().mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/SQLHandler.TableStream#open().mjava","sourceNew":"    public void open() throws IOException {\n      this.tables = new ArrayList<>();\n\n      CloudSolrClient cloudSolrClient = this.context.getSolrClientCache().getCloudSolrClient(this.zkHost);\n      cloudSolrClient.connect();\n      ZkStateReader zkStateReader = cloudSolrClient.getZkStateReader();\n      Map<String, DocCollection> collections = zkStateReader.getClusterState().getCollectionsMap();\n      if (collections.size() != 0) {\n        this.tables.addAll(collections.keySet());\n      }\n      Collections.sort(this.tables);\n    }\n\n","sourceOld":"    public void open() throws IOException {\n      this.tables = new ArrayList<>();\n\n      CloudSolrClient cloudSolrClient = this.context.getSolrClientCache().getCloudSolrClient(this.zkHost);\n      cloudSolrClient.connect();\n      ZkStateReader zkStateReader = cloudSolrClient.getZkStateReader();\n      if (zkStateReader.getClusterState().getCollections().size() != 0) {\n        this.tables.addAll(zkStateReader.getClusterState().getCollections());\n      }\n      Collections.sort(this.tables);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7acafb1138acd128fde4037d3d5124b66eb07a04","date":1469176018,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/SQLHandler.TableStream#open().mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/SQLHandler.TableStream#open().mjava","sourceNew":"    public void open() throws IOException {\n      this.tables = new ArrayList<>();\n\n      CloudSolrClient cloudSolrClient = this.context.getSolrClientCache().getCloudSolrClient(this.zkHost);\n      cloudSolrClient.connect();\n      ZkStateReader zkStateReader = cloudSolrClient.getZkStateReader();\n      Set<String> collections = zkStateReader.getClusterState().getCollectionStates().keySet();\n      if (collections.size() != 0) {\n        this.tables.addAll(collections);\n      }\n      Collections.sort(this.tables);\n    }\n\n","sourceOld":"    public void open() throws IOException {\n      this.tables = new ArrayList<>();\n\n      CloudSolrClient cloudSolrClient = this.context.getSolrClientCache().getCloudSolrClient(this.zkHost);\n      cloudSolrClient.connect();\n      ZkStateReader zkStateReader = cloudSolrClient.getZkStateReader();\n      Map<String, DocCollection> collections = zkStateReader.getClusterState().getCollectionsMap();\n      if (collections.size() != 0) {\n        this.tables.addAll(collections.keySet());\n      }\n      Collections.sort(this.tables);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"116fdd6b9e04e18a6547a5650bc0afd3fda020aa","date":1487184909,"type":4,"author":"Joel Bernstein","isMerge":true,"pathNew":"/dev/null","pathOld":"solr/core/src/java/org/apache/solr/handler/SQLHandler.TableStream#open().mjava","sourceNew":null,"sourceOld":"    public void open() throws IOException {\n      this.tables = new ArrayList<>();\n\n      CloudSolrClient cloudSolrClient = this.context.getSolrClientCache().getCloudSolrClient(this.zkHost);\n      cloudSolrClient.connect();\n      ZkStateReader zkStateReader = cloudSolrClient.getZkStateReader();\n      Set<String> collections = zkStateReader.getClusterState().getCollectionStates().keySet();\n      if (collections.size() != 0) {\n        this.tables.addAll(collections);\n      }\n      Collections.sort(this.tables);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"7acafb1138acd128fde4037d3d5124b66eb07a04":["73450c0955930295d34703e7ddbfc6973b7a121a"],"116fdd6b9e04e18a6547a5650bc0afd3fda020aa":["7acafb1138acd128fde4037d3d5124b66eb07a04","d984627825732e682759c22df7a3b171a80f3812"],"d984627825732e682759c22df7a3b171a80f3812":["aa9b48fdb08e049dc94a4077226b510eb68f2b24"],"73450c0955930295d34703e7ddbfc6973b7a121a":["aa9b48fdb08e049dc94a4077226b510eb68f2b24","e9974f61802aea1d15849a1053f88f5e89fc32b4"],"a8ed5da4b0191db6bc7f77f9feb35da6bd76f904":["aa9b48fdb08e049dc94a4077226b510eb68f2b24","73450c0955930295d34703e7ddbfc6973b7a121a"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"aa9b48fdb08e049dc94a4077226b510eb68f2b24":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"e9974f61802aea1d15849a1053f88f5e89fc32b4":["aa9b48fdb08e049dc94a4077226b510eb68f2b24"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["116fdd6b9e04e18a6547a5650bc0afd3fda020aa"]},"commit2Childs":{"7acafb1138acd128fde4037d3d5124b66eb07a04":["116fdd6b9e04e18a6547a5650bc0afd3fda020aa"],"116fdd6b9e04e18a6547a5650bc0afd3fda020aa":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"d984627825732e682759c22df7a3b171a80f3812":["116fdd6b9e04e18a6547a5650bc0afd3fda020aa"],"73450c0955930295d34703e7ddbfc6973b7a121a":["7acafb1138acd128fde4037d3d5124b66eb07a04","a8ed5da4b0191db6bc7f77f9feb35da6bd76f904"],"a8ed5da4b0191db6bc7f77f9feb35da6bd76f904":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["aa9b48fdb08e049dc94a4077226b510eb68f2b24"],"aa9b48fdb08e049dc94a4077226b510eb68f2b24":["d984627825732e682759c22df7a3b171a80f3812","73450c0955930295d34703e7ddbfc6973b7a121a","a8ed5da4b0191db6bc7f77f9feb35da6bd76f904","e9974f61802aea1d15849a1053f88f5e89fc32b4"],"e9974f61802aea1d15849a1053f88f5e89fc32b4":["73450c0955930295d34703e7ddbfc6973b7a121a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a8ed5da4b0191db6bc7f77f9feb35da6bd76f904","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}