{"path":"lucene/contrib/queries/src/test/org/apache/lucene/search/BooleanFilterTest#setUp().mjava","commits":[{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/contrib/queries/src/test/org/apache/lucene/search/BooleanFilterTest#setUp().mjava","pathOld":"contrib/queries/src/test/org/apache/lucene/search/BooleanFilterTest#setUp().mjava","sourceNew":"\t@Override\n\tprotected void setUp() throws Exception {\n\t  super.setUp();\n\t\tdirectory = new RAMDirectory();\n\t\tIndexWriter writer = new IndexWriter(directory, new IndexWriterConfig(\n        TEST_VERSION_CURRENT, new WhitespaceAnalyzer(TEST_VERSION_CURRENT)));\n\t\t\n\t\t//Add series of docs with filterable fields : acces rights, prices, dates and \"in-stock\" flags\n\t\taddDoc(writer, \"admin guest\", \"010\", \"20040101\",\"Y\");\n\t\taddDoc(writer, \"guest\", \"020\", \"20040101\",\"Y\");\n\t\taddDoc(writer, \"guest\", \"020\", \"20050101\",\"Y\");\n\t\taddDoc(writer, \"admin\", \"020\", \"20050101\",\"Maybe\");\n\t\taddDoc(writer, \"admin guest\", \"030\", \"20050101\",\"N\");\n\t\t\n\t\twriter.close();\n\t\treader=IndexReader.open(directory, true);\t\t\t\n\t}\n\n","sourceOld":"\t@Override\n\tprotected void setUp() throws Exception {\n\t  super.setUp();\n\t\tdirectory = new RAMDirectory();\n\t\tIndexWriter writer = new IndexWriter(directory, new IndexWriterConfig(\n        TEST_VERSION_CURRENT, new WhitespaceAnalyzer(TEST_VERSION_CURRENT)));\n\t\t\n\t\t//Add series of docs with filterable fields : acces rights, prices, dates and \"in-stock\" flags\n\t\taddDoc(writer, \"admin guest\", \"010\", \"20040101\",\"Y\");\n\t\taddDoc(writer, \"guest\", \"020\", \"20040101\",\"Y\");\n\t\taddDoc(writer, \"guest\", \"020\", \"20050101\",\"Y\");\n\t\taddDoc(writer, \"admin\", \"020\", \"20050101\",\"Maybe\");\n\t\taddDoc(writer, \"admin guest\", \"030\", \"20050101\",\"N\");\n\t\t\n\t\twriter.close();\n\t\treader=IndexReader.open(directory, true);\t\t\t\n\t}\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c7f8e68717c68517265937c911e1ce9f25750247","date":1274071103,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/contrib/queries/src/test/org/apache/lucene/search/BooleanFilterTest#setUp().mjava","pathOld":"lucene/contrib/queries/src/test/org/apache/lucene/search/BooleanFilterTest#setUp().mjava","sourceNew":"\t@Override\n\tprotected void setUp() throws Exception {\n\t  super.setUp();\n\t\tdirectory = new RAMDirectory();\n\t\tIndexWriter writer = new IndexWriter(directory, new IndexWriterConfig(\n        TEST_VERSION_CURRENT, new MockAnalyzer(MockTokenizer.WHITESPACE, false)));\n\t\t\n\t\t//Add series of docs with filterable fields : acces rights, prices, dates and \"in-stock\" flags\n\t\taddDoc(writer, \"admin guest\", \"010\", \"20040101\",\"Y\");\n\t\taddDoc(writer, \"guest\", \"020\", \"20040101\",\"Y\");\n\t\taddDoc(writer, \"guest\", \"020\", \"20050101\",\"Y\");\n\t\taddDoc(writer, \"admin\", \"020\", \"20050101\",\"Maybe\");\n\t\taddDoc(writer, \"admin guest\", \"030\", \"20050101\",\"N\");\n\t\t\n\t\twriter.close();\n\t\treader=IndexReader.open(directory, true);\t\t\t\n\t}\n\n","sourceOld":"\t@Override\n\tprotected void setUp() throws Exception {\n\t  super.setUp();\n\t\tdirectory = new RAMDirectory();\n\t\tIndexWriter writer = new IndexWriter(directory, new IndexWriterConfig(\n        TEST_VERSION_CURRENT, new WhitespaceAnalyzer(TEST_VERSION_CURRENT)));\n\t\t\n\t\t//Add series of docs with filterable fields : acces rights, prices, dates and \"in-stock\" flags\n\t\taddDoc(writer, \"admin guest\", \"010\", \"20040101\",\"Y\");\n\t\taddDoc(writer, \"guest\", \"020\", \"20040101\",\"Y\");\n\t\taddDoc(writer, \"guest\", \"020\", \"20050101\",\"Y\");\n\t\taddDoc(writer, \"admin\", \"020\", \"20050101\",\"Maybe\");\n\t\taddDoc(writer, \"admin guest\", \"030\", \"20050101\",\"N\");\n\t\t\n\t\twriter.close();\n\t\treader=IndexReader.open(directory, true);\t\t\t\n\t}\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c084e47df29de3330311d69dabf515ceaa989512","date":1279030906,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/contrib/queries/src/test/org/apache/lucene/search/BooleanFilterTest#setUp().mjava","pathOld":"lucene/contrib/queries/src/test/org/apache/lucene/search/BooleanFilterTest#setUp().mjava","sourceNew":"\t@Override\n\tprotected void setUp() throws Exception {\n\t  super.setUp();\n\t\tdirectory = new RAMDirectory();\n\t\tRandomIndexWriter writer = new RandomIndexWriter(newRandom(), directory, new IndexWriterConfig(\n        TEST_VERSION_CURRENT, new MockAnalyzer(MockTokenizer.WHITESPACE, false)));\n\t\t\n\t\t//Add series of docs with filterable fields : acces rights, prices, dates and \"in-stock\" flags\n\t\taddDoc(writer, \"admin guest\", \"010\", \"20040101\",\"Y\");\n\t\taddDoc(writer, \"guest\", \"020\", \"20040101\",\"Y\");\n\t\taddDoc(writer, \"guest\", \"020\", \"20050101\",\"Y\");\n\t\taddDoc(writer, \"admin\", \"020\", \"20050101\",\"Maybe\");\n\t\taddDoc(writer, \"admin guest\", \"030\", \"20050101\",\"N\");\n\t\treader = writer.getReader();\n\t\twriter.close();\t\n\t}\n\n","sourceOld":"\t@Override\n\tprotected void setUp() throws Exception {\n\t  super.setUp();\n\t\tdirectory = new RAMDirectory();\n\t\tIndexWriter writer = new IndexWriter(directory, new IndexWriterConfig(\n        TEST_VERSION_CURRENT, new MockAnalyzer(MockTokenizer.WHITESPACE, false)));\n\t\t\n\t\t//Add series of docs with filterable fields : acces rights, prices, dates and \"in-stock\" flags\n\t\taddDoc(writer, \"admin guest\", \"010\", \"20040101\",\"Y\");\n\t\taddDoc(writer, \"guest\", \"020\", \"20040101\",\"Y\");\n\t\taddDoc(writer, \"guest\", \"020\", \"20050101\",\"Y\");\n\t\taddDoc(writer, \"admin\", \"020\", \"20050101\",\"Maybe\");\n\t\taddDoc(writer, \"admin guest\", \"030\", \"20050101\",\"N\");\n\t\t\n\t\twriter.close();\n\t\treader=IndexReader.open(directory, true);\t\t\t\n\t}\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5f4e87790277826a2aea119328600dfb07761f32","date":1279827275,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/contrib/queries/src/test/org/apache/lucene/search/BooleanFilterTest#setUp().mjava","pathOld":"lucene/contrib/queries/src/test/org/apache/lucene/search/BooleanFilterTest#setUp().mjava","sourceNew":"\t@Override\n\tprotected void setUp() throws Exception {\n\t  super.setUp();\n\t\tdirectory = new RAMDirectory();\n\t\tRandomIndexWriter writer = new RandomIndexWriter(newRandom(), directory, new IndexWriterConfig(\n        TEST_VERSION_CURRENT, new MockAnalyzer(MockTokenizer.WHITESPACE, false)));\n\t\t\n\t\t//Add series of docs with filterable fields : acces rights, prices, dates and \"in-stock\" flags\n\t\taddDoc(writer, \"admin guest\", \"010\", \"20040101\",\"Y\");\n\t\taddDoc(writer, \"guest\", \"020\", \"20040101\",\"Y\");\n\t\taddDoc(writer, \"guest\", \"020\", \"20050101\",\"Y\");\n\t\taddDoc(writer, \"admin\", \"020\", \"20050101\",\"Maybe\");\n\t\taddDoc(writer, \"admin guest\", \"030\", \"20050101\",\"N\");\n\t\treader = writer.getReader();\n\t\twriter.close();\t\n\t}\n\n","sourceOld":"\t@Override\n\tprotected void setUp() throws Exception {\n\t  super.setUp();\n\t\tdirectory = new RAMDirectory();\n\t\tIndexWriter writer = new IndexWriter(directory, new IndexWriterConfig(\n        TEST_VERSION_CURRENT, new MockAnalyzer(MockTokenizer.WHITESPACE, false)));\n\t\t\n\t\t//Add series of docs with filterable fields : acces rights, prices, dates and \"in-stock\" flags\n\t\taddDoc(writer, \"admin guest\", \"010\", \"20040101\",\"Y\");\n\t\taddDoc(writer, \"guest\", \"020\", \"20040101\",\"Y\");\n\t\taddDoc(writer, \"guest\", \"020\", \"20050101\",\"Y\");\n\t\taddDoc(writer, \"admin\", \"020\", \"20050101\",\"Maybe\");\n\t\taddDoc(writer, \"admin guest\", \"030\", \"20050101\",\"N\");\n\t\t\n\t\twriter.close();\n\t\treader=IndexReader.open(directory, true);\t\t\t\n\t}\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"15bbd254c1506df5299c4df8c148262c7bd6301e","date":1279913113,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/contrib/queries/src/test/org/apache/lucene/search/BooleanFilterTest#setUp().mjava","pathOld":"lucene/contrib/queries/src/test/org/apache/lucene/search/BooleanFilterTest#setUp().mjava","sourceNew":"\t@Override\n\tprotected void setUp() throws Exception {\n\t  super.setUp();\n\t\tdirectory = new RAMDirectory();\n\t\tRandomIndexWriter writer = new RandomIndexWriter(newRandom(), directory, new MockAnalyzer(MockTokenizer.WHITESPACE, false));\n\t\t\n\t\t//Add series of docs with filterable fields : acces rights, prices, dates and \"in-stock\" flags\n\t\taddDoc(writer, \"admin guest\", \"010\", \"20040101\",\"Y\");\n\t\taddDoc(writer, \"guest\", \"020\", \"20040101\",\"Y\");\n\t\taddDoc(writer, \"guest\", \"020\", \"20050101\",\"Y\");\n\t\taddDoc(writer, \"admin\", \"020\", \"20050101\",\"Maybe\");\n\t\taddDoc(writer, \"admin guest\", \"030\", \"20050101\",\"N\");\n\t\treader = writer.getReader();\n\t\twriter.close();\t\n\t}\n\n","sourceOld":"\t@Override\n\tprotected void setUp() throws Exception {\n\t  super.setUp();\n\t\tdirectory = new RAMDirectory();\n\t\tRandomIndexWriter writer = new RandomIndexWriter(newRandom(), directory, new IndexWriterConfig(\n        TEST_VERSION_CURRENT, new MockAnalyzer(MockTokenizer.WHITESPACE, false)));\n\t\t\n\t\t//Add series of docs with filterable fields : acces rights, prices, dates and \"in-stock\" flags\n\t\taddDoc(writer, \"admin guest\", \"010\", \"20040101\",\"Y\");\n\t\taddDoc(writer, \"guest\", \"020\", \"20040101\",\"Y\");\n\t\taddDoc(writer, \"guest\", \"020\", \"20050101\",\"Y\");\n\t\taddDoc(writer, \"admin\", \"020\", \"20050101\",\"Maybe\");\n\t\taddDoc(writer, \"admin guest\", \"030\", \"20050101\",\"N\");\n\t\treader = writer.getReader();\n\t\twriter.close();\t\n\t}\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4b103252dee6afa1b6d7a622c773d178788eb85a","date":1280180143,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/contrib/queries/src/test/org/apache/lucene/search/BooleanFilterTest#setUp().mjava","pathOld":"lucene/contrib/queries/src/test/org/apache/lucene/search/BooleanFilterTest#setUp().mjava","sourceNew":"\t@Override\n\tprotected void setUp() throws Exception {\n\t  super.setUp();\n\t\tdirectory = new RAMDirectory();\n\t\tRandomIndexWriter writer = new RandomIndexWriter(newRandom(), directory, new MockAnalyzer(MockTokenizer.WHITESPACE, false));\n\t\t\n\t\t//Add series of docs with filterable fields : acces rights, prices, dates and \"in-stock\" flags\n\t\taddDoc(writer, \"admin guest\", \"010\", \"20040101\",\"Y\");\n\t\taddDoc(writer, \"guest\", \"020\", \"20040101\",\"Y\");\n\t\taddDoc(writer, \"guest\", \"020\", \"20050101\",\"Y\");\n\t\taddDoc(writer, \"admin\", \"020\", \"20050101\",\"Maybe\");\n\t\taddDoc(writer, \"admin guest\", \"030\", \"20050101\",\"N\");\n\t\treader = writer.getReader();\n\t\twriter.close();\t\n\t}\n\n","sourceOld":"\t@Override\n\tprotected void setUp() throws Exception {\n\t  super.setUp();\n\t\tdirectory = new RAMDirectory();\n\t\tRandomIndexWriter writer = new RandomIndexWriter(newRandom(), directory, new IndexWriterConfig(\n        TEST_VERSION_CURRENT, new MockAnalyzer(MockTokenizer.WHITESPACE, false)));\n\t\t\n\t\t//Add series of docs with filterable fields : acces rights, prices, dates and \"in-stock\" flags\n\t\taddDoc(writer, \"admin guest\", \"010\", \"20040101\",\"Y\");\n\t\taddDoc(writer, \"guest\", \"020\", \"20040101\",\"Y\");\n\t\taddDoc(writer, \"guest\", \"020\", \"20050101\",\"Y\");\n\t\taddDoc(writer, \"admin\", \"020\", \"20050101\",\"Maybe\");\n\t\taddDoc(writer, \"admin guest\", \"030\", \"20050101\",\"N\");\n\t\treader = writer.getReader();\n\t\twriter.close();\t\n\t}\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3242a09f703274d3b9283f2064a1a33064b53a1b","date":1280263474,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/contrib/queries/src/test/org/apache/lucene/search/BooleanFilterTest#setUp().mjava","pathOld":"lucene/contrib/queries/src/test/org/apache/lucene/search/BooleanFilterTest#setUp().mjava","sourceNew":"\t@Override\n\tprotected void setUp() throws Exception {\n\t  super.setUp();\n\t\tdirectory = new RAMDirectory();\n\t\tRandomIndexWriter writer = new RandomIndexWriter(newRandom(), directory, new MockAnalyzer(MockTokenizer.WHITESPACE, false));\n\t\t\n\t\t//Add series of docs with filterable fields : acces rights, prices, dates and \"in-stock\" flags\n\t\taddDoc(writer, \"admin guest\", \"010\", \"20040101\",\"Y\");\n\t\taddDoc(writer, \"guest\", \"020\", \"20040101\",\"Y\");\n\t\taddDoc(writer, \"guest\", \"020\", \"20050101\",\"Y\");\n\t\taddDoc(writer, \"admin\", \"020\", \"20050101\",\"Maybe\");\n\t\taddDoc(writer, \"admin guest\", \"030\", \"20050101\",\"N\");\n\t\treader = writer.getReader();\n\t\twriter.close();\t\n\t}\n\n","sourceOld":"\t@Override\n\tprotected void setUp() throws Exception {\n\t  super.setUp();\n\t\tdirectory = new RAMDirectory();\n\t\tRandomIndexWriter writer = new RandomIndexWriter(newRandom(), directory, new IndexWriterConfig(\n        TEST_VERSION_CURRENT, new MockAnalyzer(MockTokenizer.WHITESPACE, false)));\n\t\t\n\t\t//Add series of docs with filterable fields : acces rights, prices, dates and \"in-stock\" flags\n\t\taddDoc(writer, \"admin guest\", \"010\", \"20040101\",\"Y\");\n\t\taddDoc(writer, \"guest\", \"020\", \"20040101\",\"Y\");\n\t\taddDoc(writer, \"guest\", \"020\", \"20050101\",\"Y\");\n\t\taddDoc(writer, \"admin\", \"020\", \"20050101\",\"Maybe\");\n\t\taddDoc(writer, \"admin guest\", \"030\", \"20050101\",\"N\");\n\t\treader = writer.getReader();\n\t\twriter.close();\t\n\t}\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1a2e46fd1b7cbc52d7d6461a6ef99e7107ae2a9c","date":1281477834,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/contrib/queries/src/test/org/apache/lucene/search/BooleanFilterTest#setUp().mjava","pathOld":"lucene/contrib/queries/src/test/org/apache/lucene/search/BooleanFilterTest#setUp().mjava","sourceNew":"\t@Override\n\tprotected void setUp() throws Exception {\n\t  super.setUp();\n\t\tdirectory = new MockRAMDirectory();\n\t\tRandomIndexWriter writer = new RandomIndexWriter(newRandom(), directory, new MockAnalyzer(MockTokenizer.WHITESPACE, false));\n\t\t\n\t\t//Add series of docs with filterable fields : acces rights, prices, dates and \"in-stock\" flags\n\t\taddDoc(writer, \"admin guest\", \"010\", \"20040101\",\"Y\");\n\t\taddDoc(writer, \"guest\", \"020\", \"20040101\",\"Y\");\n\t\taddDoc(writer, \"guest\", \"020\", \"20050101\",\"Y\");\n\t\taddDoc(writer, \"admin\", \"020\", \"20050101\",\"Maybe\");\n\t\taddDoc(writer, \"admin guest\", \"030\", \"20050101\",\"N\");\n\t\treader = writer.getReader();\n\t\twriter.close();\t\n\t}\n\n","sourceOld":"\t@Override\n\tprotected void setUp() throws Exception {\n\t  super.setUp();\n\t\tdirectory = new RAMDirectory();\n\t\tRandomIndexWriter writer = new RandomIndexWriter(newRandom(), directory, new MockAnalyzer(MockTokenizer.WHITESPACE, false));\n\t\t\n\t\t//Add series of docs with filterable fields : acces rights, prices, dates and \"in-stock\" flags\n\t\taddDoc(writer, \"admin guest\", \"010\", \"20040101\",\"Y\");\n\t\taddDoc(writer, \"guest\", \"020\", \"20040101\",\"Y\");\n\t\taddDoc(writer, \"guest\", \"020\", \"20050101\",\"Y\");\n\t\taddDoc(writer, \"admin\", \"020\", \"20050101\",\"Maybe\");\n\t\taddDoc(writer, \"admin guest\", \"030\", \"20050101\",\"N\");\n\t\treader = writer.getReader();\n\t\twriter.close();\t\n\t}\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0d302ba328993a5b449c2e0b3b5e15ae53e45879","date":1281609097,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/contrib/queries/src/test/org/apache/lucene/search/BooleanFilterTest#setUp().mjava","pathOld":"lucene/contrib/queries/src/test/org/apache/lucene/search/BooleanFilterTest#setUp().mjava","sourceNew":"\t@Override\n\tprotected void setUp() throws Exception {\n\t  super.setUp();\n\t\tdirectory = new MockRAMDirectory();\n\t\tRandomIndexWriter writer = new RandomIndexWriter(newRandom(), directory, new MockAnalyzer(MockTokenizer.WHITESPACE, false));\n\t\t\n\t\t//Add series of docs with filterable fields : acces rights, prices, dates and \"in-stock\" flags\n\t\taddDoc(writer, \"admin guest\", \"010\", \"20040101\",\"Y\");\n\t\taddDoc(writer, \"guest\", \"020\", \"20040101\",\"Y\");\n\t\taddDoc(writer, \"guest\", \"020\", \"20050101\",\"Y\");\n\t\taddDoc(writer, \"admin\", \"020\", \"20050101\",\"Maybe\");\n\t\taddDoc(writer, \"admin guest\", \"030\", \"20050101\",\"N\");\n\t\tmainReader = writer.getReader();\n\t\treader = SlowMultiReaderWrapper.wrap(mainReader);\n\t\twriter.close();\t\n\t}\n\n","sourceOld":"\t@Override\n\tprotected void setUp() throws Exception {\n\t  super.setUp();\n\t\tdirectory = new MockRAMDirectory();\n\t\tRandomIndexWriter writer = new RandomIndexWriter(newRandom(), directory, new MockAnalyzer(MockTokenizer.WHITESPACE, false));\n\t\t\n\t\t//Add series of docs with filterable fields : acces rights, prices, dates and \"in-stock\" flags\n\t\taddDoc(writer, \"admin guest\", \"010\", \"20040101\",\"Y\");\n\t\taddDoc(writer, \"guest\", \"020\", \"20040101\",\"Y\");\n\t\taddDoc(writer, \"guest\", \"020\", \"20050101\",\"Y\");\n\t\taddDoc(writer, \"admin\", \"020\", \"20050101\",\"Maybe\");\n\t\taddDoc(writer, \"admin guest\", \"030\", \"20050101\",\"N\");\n\t\treader = writer.getReader();\n\t\twriter.close();\t\n\t}\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ab9633cb67e3c0aec3c066147a23a957d6e7ad8c","date":1281646583,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/contrib/queries/src/test/org/apache/lucene/search/BooleanFilterTest#setUp().mjava","pathOld":"lucene/contrib/queries/src/test/org/apache/lucene/search/BooleanFilterTest#setUp().mjava","sourceNew":"\t@Override\n\tprotected void setUp() throws Exception {\n\t  super.setUp();\n\t  Random random = newRandom();\n\t\tdirectory = newDirectory(random);\n\t\tRandomIndexWriter writer = new RandomIndexWriter(random, directory, new MockAnalyzer(MockTokenizer.WHITESPACE, false));\n\t\t\n\t\t//Add series of docs with filterable fields : acces rights, prices, dates and \"in-stock\" flags\n\t\taddDoc(writer, \"admin guest\", \"010\", \"20040101\",\"Y\");\n\t\taddDoc(writer, \"guest\", \"020\", \"20040101\",\"Y\");\n\t\taddDoc(writer, \"guest\", \"020\", \"20050101\",\"Y\");\n\t\taddDoc(writer, \"admin\", \"020\", \"20050101\",\"Maybe\");\n\t\taddDoc(writer, \"admin guest\", \"030\", \"20050101\",\"N\");\n\t\tmainReader = writer.getReader();\n\t\treader = SlowMultiReaderWrapper.wrap(mainReader);\n\t\twriter.close();\t\n\t}\n\n","sourceOld":"\t@Override\n\tprotected void setUp() throws Exception {\n\t  super.setUp();\n\t\tdirectory = new MockRAMDirectory();\n\t\tRandomIndexWriter writer = new RandomIndexWriter(newRandom(), directory, new MockAnalyzer(MockTokenizer.WHITESPACE, false));\n\t\t\n\t\t//Add series of docs with filterable fields : acces rights, prices, dates and \"in-stock\" flags\n\t\taddDoc(writer, \"admin guest\", \"010\", \"20040101\",\"Y\");\n\t\taddDoc(writer, \"guest\", \"020\", \"20040101\",\"Y\");\n\t\taddDoc(writer, \"guest\", \"020\", \"20050101\",\"Y\");\n\t\taddDoc(writer, \"admin\", \"020\", \"20050101\",\"Maybe\");\n\t\taddDoc(writer, \"admin guest\", \"030\", \"20050101\",\"N\");\n\t\tmainReader = writer.getReader();\n\t\treader = SlowMultiReaderWrapper.wrap(mainReader);\n\t\twriter.close();\t\n\t}\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1f653cfcf159baeaafe5d01682a911e95bba4012","date":1284122058,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/contrib/queries/src/test/org/apache/lucene/search/BooleanFilterTest#setUp().mjava","pathOld":"lucene/contrib/queries/src/test/org/apache/lucene/search/BooleanFilterTest#setUp().mjava","sourceNew":"\t@Override\n\tprotected void setUp() throws Exception {\n\t  super.setUp();\n\t\tdirectory = newDirectory();\n\t\tRandomIndexWriter writer = new RandomIndexWriter(random, directory, new MockAnalyzer(MockTokenizer.WHITESPACE, false));\n\t\t\n\t\t//Add series of docs with filterable fields : acces rights, prices, dates and \"in-stock\" flags\n\t\taddDoc(writer, \"admin guest\", \"010\", \"20040101\",\"Y\");\n\t\taddDoc(writer, \"guest\", \"020\", \"20040101\",\"Y\");\n\t\taddDoc(writer, \"guest\", \"020\", \"20050101\",\"Y\");\n\t\taddDoc(writer, \"admin\", \"020\", \"20050101\",\"Maybe\");\n\t\taddDoc(writer, \"admin guest\", \"030\", \"20050101\",\"N\");\n\t\tmainReader = writer.getReader();\n\t\treader = SlowMultiReaderWrapper.wrap(mainReader);\n\t\twriter.close();\t\n\t}\n\n","sourceOld":"\t@Override\n\tprotected void setUp() throws Exception {\n\t  super.setUp();\n\t  Random random = newRandom();\n\t\tdirectory = newDirectory(random);\n\t\tRandomIndexWriter writer = new RandomIndexWriter(random, directory, new MockAnalyzer(MockTokenizer.WHITESPACE, false));\n\t\t\n\t\t//Add series of docs with filterable fields : acces rights, prices, dates and \"in-stock\" flags\n\t\taddDoc(writer, \"admin guest\", \"010\", \"20040101\",\"Y\");\n\t\taddDoc(writer, \"guest\", \"020\", \"20040101\",\"Y\");\n\t\taddDoc(writer, \"guest\", \"020\", \"20050101\",\"Y\");\n\t\taddDoc(writer, \"admin\", \"020\", \"20050101\",\"Maybe\");\n\t\taddDoc(writer, \"admin guest\", \"030\", \"20050101\",\"N\");\n\t\tmainReader = writer.getReader();\n\t\treader = SlowMultiReaderWrapper.wrap(mainReader);\n\t\twriter.close();\t\n\t}\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"43b04c27924fe393e38e9f0986e32c634f261859","date":1284399440,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/contrib/queries/src/test/org/apache/lucene/search/BooleanFilterTest#setUp().mjava","pathOld":"lucene/contrib/queries/src/test/org/apache/lucene/search/BooleanFilterTest#setUp().mjava","sourceNew":"\t@Override\n\tpublic void setUp() throws Exception {\n\t  super.setUp();\n\t\tdirectory = newDirectory();\n\t\tRandomIndexWriter writer = new RandomIndexWriter(random, directory, new MockAnalyzer(MockTokenizer.WHITESPACE, false));\n\t\t\n\t\t//Add series of docs with filterable fields : acces rights, prices, dates and \"in-stock\" flags\n\t\taddDoc(writer, \"admin guest\", \"010\", \"20040101\",\"Y\");\n\t\taddDoc(writer, \"guest\", \"020\", \"20040101\",\"Y\");\n\t\taddDoc(writer, \"guest\", \"020\", \"20050101\",\"Y\");\n\t\taddDoc(writer, \"admin\", \"020\", \"20050101\",\"Maybe\");\n\t\taddDoc(writer, \"admin guest\", \"030\", \"20050101\",\"N\");\n\t\tmainReader = writer.getReader();\n\t\treader = SlowMultiReaderWrapper.wrap(mainReader);\n\t\twriter.close();\t\n\t}\n\n","sourceOld":"\t@Override\n\tprotected void setUp() throws Exception {\n\t  super.setUp();\n\t\tdirectory = newDirectory();\n\t\tRandomIndexWriter writer = new RandomIndexWriter(random, directory, new MockAnalyzer(MockTokenizer.WHITESPACE, false));\n\t\t\n\t\t//Add series of docs with filterable fields : acces rights, prices, dates and \"in-stock\" flags\n\t\taddDoc(writer, \"admin guest\", \"010\", \"20040101\",\"Y\");\n\t\taddDoc(writer, \"guest\", \"020\", \"20040101\",\"Y\");\n\t\taddDoc(writer, \"guest\", \"020\", \"20050101\",\"Y\");\n\t\taddDoc(writer, \"admin\", \"020\", \"20050101\",\"Maybe\");\n\t\taddDoc(writer, \"admin guest\", \"030\", \"20050101\",\"N\");\n\t\tmainReader = writer.getReader();\n\t\treader = SlowMultiReaderWrapper.wrap(mainReader);\n\t\twriter.close();\t\n\t}\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"51c34a3639838887e7997850b6be80f838a4d6f7","date":1290278815,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/contrib/queries/src/test/org/apache/lucene/search/BooleanFilterTest#setUp().mjava","pathOld":"lucene/contrib/queries/src/test/org/apache/lucene/search/BooleanFilterTest#setUp().mjava","sourceNew":"\t@Override\n\tpublic void setUp() throws Exception {\n\t  super.setUp();\n\t\tdirectory = newDirectory();\n\t\tRandomIndexWriter writer = new RandomIndexWriter(random, directory, new MockAnalyzer(MockTokenizer.WHITESPACE, false));\n\t\t\n\t\t//Add series of docs with filterable fields : acces rights, prices, dates and \"in-stock\" flags\n\t\taddDoc(writer, \"admin guest\", \"010\", \"20040101\",\"Y\");\n\t\taddDoc(writer, \"guest\", \"020\", \"20040101\",\"Y\");\n\t\taddDoc(writer, \"guest\", \"020\", \"20050101\",\"Y\");\n\t\taddDoc(writer, \"admin\", \"020\", \"20050101\",\"Maybe\");\n\t\taddDoc(writer, \"admin guest\", \"030\", \"20050101\",\"N\");\n\t\treader = new SlowMultiReaderWrapper(writer.getReader());\n\t\twriter.close();\t\n\t}\n\n","sourceOld":"\t@Override\n\tpublic void setUp() throws Exception {\n\t  super.setUp();\n\t\tdirectory = newDirectory();\n\t\tRandomIndexWriter writer = new RandomIndexWriter(random, directory, new MockAnalyzer(MockTokenizer.WHITESPACE, false));\n\t\t\n\t\t//Add series of docs with filterable fields : acces rights, prices, dates and \"in-stock\" flags\n\t\taddDoc(writer, \"admin guest\", \"010\", \"20040101\",\"Y\");\n\t\taddDoc(writer, \"guest\", \"020\", \"20040101\",\"Y\");\n\t\taddDoc(writer, \"guest\", \"020\", \"20050101\",\"Y\");\n\t\taddDoc(writer, \"admin\", \"020\", \"20050101\",\"Maybe\");\n\t\taddDoc(writer, \"admin guest\", \"030\", \"20050101\",\"N\");\n\t\tmainReader = writer.getReader();\n\t\treader = SlowMultiReaderWrapper.wrap(mainReader);\n\t\twriter.close();\t\n\t}\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3bb13258feba31ab676502787ab2e1779f129b7a","date":1291596436,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/contrib/queries/src/test/org/apache/lucene/search/BooleanFilterTest#setUp().mjava","pathOld":"lucene/contrib/queries/src/test/org/apache/lucene/search/BooleanFilterTest#setUp().mjava","sourceNew":"\t@Override\n\tpublic void setUp() throws Exception {\n\t  super.setUp();\n\t\tdirectory = newDirectory();\n\t\tRandomIndexWriter writer = new RandomIndexWriter(random, directory, new MockAnalyzer(MockTokenizer.WHITESPACE, false));\n\t\t\n\t\t//Add series of docs with filterable fields : acces rights, prices, dates and \"in-stock\" flags\n\t\taddDoc(writer, \"admin guest\", \"010\", \"20040101\",\"Y\");\n\t\taddDoc(writer, \"guest\", \"020\", \"20040101\",\"Y\");\n\t\taddDoc(writer, \"guest\", \"020\", \"20050101\",\"Y\");\n\t\taddDoc(writer, \"admin\", \"020\", \"20050101\",\"Maybe\");\n\t\taddDoc(writer, \"admin guest\", \"030\", \"20050101\",\"N\");\n\t\treader = new SlowMultiReaderWrapper(writer.getReader());\n\t\twriter.close();\t\n\t}\n\n","sourceOld":"\t@Override\n\tpublic void setUp() throws Exception {\n\t  super.setUp();\n\t\tdirectory = newDirectory();\n\t\tRandomIndexWriter writer = new RandomIndexWriter(random, directory, new MockAnalyzer(MockTokenizer.WHITESPACE, false));\n\t\t\n\t\t//Add series of docs with filterable fields : acces rights, prices, dates and \"in-stock\" flags\n\t\taddDoc(writer, \"admin guest\", \"010\", \"20040101\",\"Y\");\n\t\taddDoc(writer, \"guest\", \"020\", \"20040101\",\"Y\");\n\t\taddDoc(writer, \"guest\", \"020\", \"20050101\",\"Y\");\n\t\taddDoc(writer, \"admin\", \"020\", \"20050101\",\"Maybe\");\n\t\taddDoc(writer, \"admin guest\", \"030\", \"20050101\",\"N\");\n\t\tmainReader = writer.getReader();\n\t\treader = SlowMultiReaderWrapper.wrap(mainReader);\n\t\twriter.close();\t\n\t}\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","date":1292920096,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/contrib/queries/src/test/org/apache/lucene/search/BooleanFilterTest#setUp().mjava","pathOld":"lucene/contrib/queries/src/test/org/apache/lucene/search/BooleanFilterTest#setUp().mjava","sourceNew":"\t@Override\n\tpublic void setUp() throws Exception {\n\t  super.setUp();\n\t\tdirectory = newDirectory();\n\t\tRandomIndexWriter writer = new RandomIndexWriter(random, directory, new MockAnalyzer(MockTokenizer.WHITESPACE, false));\n\t\t\n\t\t//Add series of docs with filterable fields : acces rights, prices, dates and \"in-stock\" flags\n\t\taddDoc(writer, \"admin guest\", \"010\", \"20040101\",\"Y\");\n\t\taddDoc(writer, \"guest\", \"020\", \"20040101\",\"Y\");\n\t\taddDoc(writer, \"guest\", \"020\", \"20050101\",\"Y\");\n\t\taddDoc(writer, \"admin\", \"020\", \"20050101\",\"Maybe\");\n\t\taddDoc(writer, \"admin guest\", \"030\", \"20050101\",\"N\");\n\t\treader = new SlowMultiReaderWrapper(writer.getReader());\n\t\twriter.close();\t\n\t}\n\n","sourceOld":"\t@Override\n\tprotected void setUp() throws Exception {\n\t  super.setUp();\n\t\tdirectory = new RAMDirectory();\n\t\tRandomIndexWriter writer = new RandomIndexWriter(newRandom(), directory, new MockAnalyzer(MockTokenizer.WHITESPACE, false));\n\t\t\n\t\t//Add series of docs with filterable fields : acces rights, prices, dates and \"in-stock\" flags\n\t\taddDoc(writer, \"admin guest\", \"010\", \"20040101\",\"Y\");\n\t\taddDoc(writer, \"guest\", \"020\", \"20040101\",\"Y\");\n\t\taddDoc(writer, \"guest\", \"020\", \"20050101\",\"Y\");\n\t\taddDoc(writer, \"admin\", \"020\", \"20050101\",\"Maybe\");\n\t\taddDoc(writer, \"admin guest\", \"030\", \"20050101\",\"N\");\n\t\treader = writer.getReader();\n\t\twriter.close();\t\n\t}\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f2c5f0cb44df114db4228c8f77861714b5cabaea","date":1302542431,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/contrib/queries/src/test/org/apache/lucene/search/BooleanFilterTest#setUp().mjava","pathOld":"lucene/contrib/queries/src/test/org/apache/lucene/search/BooleanFilterTest#setUp().mjava","sourceNew":"\t@Override\n\tpublic void setUp() throws Exception {\n\t  super.setUp();\n\t\tdirectory = newDirectory();\n\t\tRandomIndexWriter writer = new RandomIndexWriter(random, directory, new MockAnalyzer(random, MockTokenizer.WHITESPACE, false));\n\t\t\n\t\t//Add series of docs with filterable fields : acces rights, prices, dates and \"in-stock\" flags\n\t\taddDoc(writer, \"admin guest\", \"010\", \"20040101\",\"Y\");\n\t\taddDoc(writer, \"guest\", \"020\", \"20040101\",\"Y\");\n\t\taddDoc(writer, \"guest\", \"020\", \"20050101\",\"Y\");\n\t\taddDoc(writer, \"admin\", \"020\", \"20050101\",\"Maybe\");\n\t\taddDoc(writer, \"admin guest\", \"030\", \"20050101\",\"N\");\n\t\treader = new SlowMultiReaderWrapper(writer.getReader());\n\t\twriter.close();\t\n\t}\n\n","sourceOld":"\t@Override\n\tpublic void setUp() throws Exception {\n\t  super.setUp();\n\t\tdirectory = newDirectory();\n\t\tRandomIndexWriter writer = new RandomIndexWriter(random, directory, new MockAnalyzer(MockTokenizer.WHITESPACE, false));\n\t\t\n\t\t//Add series of docs with filterable fields : acces rights, prices, dates and \"in-stock\" flags\n\t\taddDoc(writer, \"admin guest\", \"010\", \"20040101\",\"Y\");\n\t\taddDoc(writer, \"guest\", \"020\", \"20040101\",\"Y\");\n\t\taddDoc(writer, \"guest\", \"020\", \"20050101\",\"Y\");\n\t\taddDoc(writer, \"admin\", \"020\", \"20050101\",\"Maybe\");\n\t\taddDoc(writer, \"admin guest\", \"030\", \"20050101\",\"N\");\n\t\treader = new SlowMultiReaderWrapper(writer.getReader());\n\t\twriter.close();\t\n\t}\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"962d04139994fce5193143ef35615499a9a96d78","date":1302693744,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/contrib/queries/src/test/org/apache/lucene/search/BooleanFilterTest#setUp().mjava","pathOld":"lucene/contrib/queries/src/test/org/apache/lucene/search/BooleanFilterTest#setUp().mjava","sourceNew":"\t@Override\n\tpublic void setUp() throws Exception {\n\t  super.setUp();\n\t\tdirectory = newDirectory();\n\t\tRandomIndexWriter writer = new RandomIndexWriter(random, directory, new MockAnalyzer(random, MockTokenizer.WHITESPACE, false));\n\t\t\n\t\t//Add series of docs with filterable fields : acces rights, prices, dates and \"in-stock\" flags\n\t\taddDoc(writer, \"admin guest\", \"010\", \"20040101\",\"Y\");\n\t\taddDoc(writer, \"guest\", \"020\", \"20040101\",\"Y\");\n\t\taddDoc(writer, \"guest\", \"020\", \"20050101\",\"Y\");\n\t\taddDoc(writer, \"admin\", \"020\", \"20050101\",\"Maybe\");\n\t\taddDoc(writer, \"admin guest\", \"030\", \"20050101\",\"N\");\n\t\treader = new SlowMultiReaderWrapper(writer.getReader());\n\t\twriter.close();\t\n\t}\n\n","sourceOld":"\t@Override\n\tpublic void setUp() throws Exception {\n\t  super.setUp();\n\t\tdirectory = newDirectory();\n\t\tRandomIndexWriter writer = new RandomIndexWriter(random, directory, new MockAnalyzer(MockTokenizer.WHITESPACE, false));\n\t\t\n\t\t//Add series of docs with filterable fields : acces rights, prices, dates and \"in-stock\" flags\n\t\taddDoc(writer, \"admin guest\", \"010\", \"20040101\",\"Y\");\n\t\taddDoc(writer, \"guest\", \"020\", \"20040101\",\"Y\");\n\t\taddDoc(writer, \"guest\", \"020\", \"20050101\",\"Y\");\n\t\taddDoc(writer, \"admin\", \"020\", \"20050101\",\"Maybe\");\n\t\taddDoc(writer, \"admin guest\", \"030\", \"20050101\",\"N\");\n\t\treader = new SlowMultiReaderWrapper(writer.getReader());\n\t\twriter.close();\t\n\t}\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"135621f3a0670a9394eb563224a3b76cc4dddc0f","date":1304344257,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/contrib/queries/src/test/org/apache/lucene/search/BooleanFilterTest#setUp().mjava","pathOld":"lucene/contrib/queries/src/test/org/apache/lucene/search/BooleanFilterTest#setUp().mjava","sourceNew":"\t@Override\n\tpublic void setUp() throws Exception {\n\t  super.setUp();\n\t\tdirectory = newDirectory();\n\t\tRandomIndexWriter writer = new RandomIndexWriter(random, directory, new MockAnalyzer(random, MockTokenizer.WHITESPACE, false));\n\t\t\n\t\t//Add series of docs with filterable fields : acces rights, prices, dates and \"in-stock\" flags\n\t\taddDoc(writer, \"admin guest\", \"010\", \"20040101\",\"Y\");\n\t\taddDoc(writer, \"guest\", \"020\", \"20040101\",\"Y\");\n\t\taddDoc(writer, \"guest\", \"020\", \"20050101\",\"Y\");\n\t\taddDoc(writer, \"admin\", \"020\", \"20050101\",\"Maybe\");\n\t\taddDoc(writer, \"admin guest\", \"030\", \"20050101\",\"N\");\n\t\treader = new SlowMultiReaderWrapper(writer.getReader());\n\t\twriter.close();\t\n\t}\n\n","sourceOld":"\t@Override\n\tpublic void setUp() throws Exception {\n\t  super.setUp();\n\t\tdirectory = newDirectory();\n\t\tRandomIndexWriter writer = new RandomIndexWriter(random, directory, new MockAnalyzer(MockTokenizer.WHITESPACE, false));\n\t\t\n\t\t//Add series of docs with filterable fields : acces rights, prices, dates and \"in-stock\" flags\n\t\taddDoc(writer, \"admin guest\", \"010\", \"20040101\",\"Y\");\n\t\taddDoc(writer, \"guest\", \"020\", \"20040101\",\"Y\");\n\t\taddDoc(writer, \"guest\", \"020\", \"20050101\",\"Y\");\n\t\taddDoc(writer, \"admin\", \"020\", \"20050101\",\"Maybe\");\n\t\taddDoc(writer, \"admin guest\", \"030\", \"20050101\",\"N\");\n\t\treader = new SlowMultiReaderWrapper(writer.getReader());\n\t\twriter.close();\t\n\t}\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a3776dccca01c11e7046323cfad46a3b4a471233","date":1306100719,"type":3,"author":"Steven Rowe","isMerge":true,"pathNew":"lucene/contrib/queries/src/test/org/apache/lucene/search/BooleanFilterTest#setUp().mjava","pathOld":"lucene/contrib/queries/src/test/org/apache/lucene/search/BooleanFilterTest#setUp().mjava","sourceNew":"\t@Override\n\tpublic void setUp() throws Exception {\n\t  super.setUp();\n\t\tdirectory = newDirectory();\n\t\tRandomIndexWriter writer = new RandomIndexWriter(random, directory, new MockAnalyzer(random, MockTokenizer.WHITESPACE, false));\n\t\t\n\t\t//Add series of docs with filterable fields : acces rights, prices, dates and \"in-stock\" flags\n\t\taddDoc(writer, \"admin guest\", \"010\", \"20040101\",\"Y\");\n\t\taddDoc(writer, \"guest\", \"020\", \"20040101\",\"Y\");\n\t\taddDoc(writer, \"guest\", \"020\", \"20050101\",\"Y\");\n\t\taddDoc(writer, \"admin\", \"020\", \"20050101\",\"Maybe\");\n\t\taddDoc(writer, \"admin guest\", \"030\", \"20050101\",\"N\");\n\t\treader = new SlowMultiReaderWrapper(writer.getReader());\n\t\twriter.close();\t\n\t}\n\n","sourceOld":"\t@Override\n\tpublic void setUp() throws Exception {\n\t  super.setUp();\n\t\tdirectory = newDirectory();\n\t\tRandomIndexWriter writer = new RandomIndexWriter(random, directory, new MockAnalyzer(MockTokenizer.WHITESPACE, false));\n\t\t\n\t\t//Add series of docs with filterable fields : acces rights, prices, dates and \"in-stock\" flags\n\t\taddDoc(writer, \"admin guest\", \"010\", \"20040101\",\"Y\");\n\t\taddDoc(writer, \"guest\", \"020\", \"20040101\",\"Y\");\n\t\taddDoc(writer, \"guest\", \"020\", \"20050101\",\"Y\");\n\t\taddDoc(writer, \"admin\", \"020\", \"20050101\",\"Maybe\");\n\t\taddDoc(writer, \"admin guest\", \"030\", \"20050101\",\"N\");\n\t\treader = new SlowMultiReaderWrapper(writer.getReader());\n\t\twriter.close();\t\n\t}\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e141595402370bee958745de8b1c9de1fa182581","date":1310547892,"type":3,"author":"Christopher John Male","isMerge":false,"pathNew":"lucene/contrib/queries/src/test/org/apache/lucene/search/BooleanFilterTest#setUp().mjava","pathOld":"lucene/contrib/queries/src/test/org/apache/lucene/search/BooleanFilterTest#setUp().mjava","sourceNew":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    directory = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random, directory, new MockAnalyzer(random, MockTokenizer.WHITESPACE, false));\n\n    //Add series of docs with filterable fields : acces rights, prices, dates and \"in-stock\" flags\n    addDoc(writer, \"admin guest\", \"010\", \"20040101\", \"Y\");\n    addDoc(writer, \"guest\", \"020\", \"20040101\", \"Y\");\n    addDoc(writer, \"guest\", \"020\", \"20050101\", \"Y\");\n    addDoc(writer, \"admin\", \"020\", \"20050101\", \"Maybe\");\n    addDoc(writer, \"admin guest\", \"030\", \"20050101\", \"N\");\n    reader = new SlowMultiReaderWrapper(writer.getReader());\n    writer.close();\n  }\n\n","sourceOld":"\t@Override\n\tpublic void setUp() throws Exception {\n\t  super.setUp();\n\t\tdirectory = newDirectory();\n\t\tRandomIndexWriter writer = new RandomIndexWriter(random, directory, new MockAnalyzer(random, MockTokenizer.WHITESPACE, false));\n\t\t\n\t\t//Add series of docs with filterable fields : acces rights, prices, dates and \"in-stock\" flags\n\t\taddDoc(writer, \"admin guest\", \"010\", \"20040101\",\"Y\");\n\t\taddDoc(writer, \"guest\", \"020\", \"20040101\",\"Y\");\n\t\taddDoc(writer, \"guest\", \"020\", \"20050101\",\"Y\");\n\t\taddDoc(writer, \"admin\", \"020\", \"20050101\",\"Maybe\");\n\t\taddDoc(writer, \"admin guest\", \"030\", \"20050101\",\"N\");\n\t\treader = new SlowMultiReaderWrapper(writer.getReader());\n\t\twriter.close();\t\n\t}\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1f9f2355d68aab1348539f7a1603279405e566a4","date":1313634992,"type":5,"author":"Christopher John Male","isMerge":false,"pathNew":"modules/queries/src/test/org/apache/lucene/queries/BooleanFilterTest#setUp().mjava","pathOld":"lucene/contrib/queries/src/test/org/apache/lucene/search/BooleanFilterTest#setUp().mjava","sourceNew":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    directory = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random, directory, new MockAnalyzer(random, MockTokenizer.WHITESPACE, false));\n\n    //Add series of docs with filterable fields : acces rights, prices, dates and \"in-stock\" flags\n    addDoc(writer, \"admin guest\", \"010\", \"20040101\", \"Y\");\n    addDoc(writer, \"guest\", \"020\", \"20040101\", \"Y\");\n    addDoc(writer, \"guest\", \"020\", \"20050101\", \"Y\");\n    addDoc(writer, \"admin\", \"020\", \"20050101\", \"Maybe\");\n    addDoc(writer, \"admin guest\", \"030\", \"20050101\", \"N\");\n    reader = new SlowMultiReaderWrapper(writer.getReader());\n    writer.close();\n  }\n\n","sourceOld":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    directory = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random, directory, new MockAnalyzer(random, MockTokenizer.WHITESPACE, false));\n\n    //Add series of docs with filterable fields : acces rights, prices, dates and \"in-stock\" flags\n    addDoc(writer, \"admin guest\", \"010\", \"20040101\", \"Y\");\n    addDoc(writer, \"guest\", \"020\", \"20040101\", \"Y\");\n    addDoc(writer, \"guest\", \"020\", \"20050101\", \"Y\");\n    addDoc(writer, \"admin\", \"020\", \"20050101\", \"Maybe\");\n    addDoc(writer, \"admin guest\", \"030\", \"20050101\", \"N\");\n    reader = new SlowMultiReaderWrapper(writer.getReader());\n    writer.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3242a09f703274d3b9283f2064a1a33064b53a1b":["5f4e87790277826a2aea119328600dfb07761f32","4b103252dee6afa1b6d7a622c773d178788eb85a"],"4b103252dee6afa1b6d7a622c773d178788eb85a":["c084e47df29de3330311d69dabf515ceaa989512","15bbd254c1506df5299c4df8c148262c7bd6301e"],"ab9633cb67e3c0aec3c066147a23a957d6e7ad8c":["0d302ba328993a5b449c2e0b3b5e15ae53e45879"],"51c34a3639838887e7997850b6be80f838a4d6f7":["43b04c27924fe393e38e9f0986e32c634f261859"],"15bbd254c1506df5299c4df8c148262c7bd6301e":["c084e47df29de3330311d69dabf515ceaa989512"],"135621f3a0670a9394eb563224a3b76cc4dddc0f":["3bb13258feba31ab676502787ab2e1779f129b7a","f2c5f0cb44df114db4228c8f77861714b5cabaea"],"0d302ba328993a5b449c2e0b3b5e15ae53e45879":["1a2e46fd1b7cbc52d7d6461a6ef99e7107ae2a9c"],"c7f8e68717c68517265937c911e1ce9f25750247":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"5f4e87790277826a2aea119328600dfb07761f32":["c7f8e68717c68517265937c911e1ce9f25750247","c084e47df29de3330311d69dabf515ceaa989512"],"962d04139994fce5193143ef35615499a9a96d78":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","f2c5f0cb44df114db4228c8f77861714b5cabaea"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["3242a09f703274d3b9283f2064a1a33064b53a1b","51c34a3639838887e7997850b6be80f838a4d6f7"],"e141595402370bee958745de8b1c9de1fa182581":["f2c5f0cb44df114db4228c8f77861714b5cabaea"],"43b04c27924fe393e38e9f0986e32c634f261859":["1f653cfcf159baeaafe5d01682a911e95bba4012"],"1f9f2355d68aab1348539f7a1603279405e566a4":["e141595402370bee958745de8b1c9de1fa182581"],"c084e47df29de3330311d69dabf515ceaa989512":["c7f8e68717c68517265937c911e1ce9f25750247"],"f2c5f0cb44df114db4228c8f77861714b5cabaea":["51c34a3639838887e7997850b6be80f838a4d6f7"],"1f653cfcf159baeaafe5d01682a911e95bba4012":["ab9633cb67e3c0aec3c066147a23a957d6e7ad8c"],"a3776dccca01c11e7046323cfad46a3b4a471233":["51c34a3639838887e7997850b6be80f838a4d6f7","f2c5f0cb44df114db4228c8f77861714b5cabaea"],"1a2e46fd1b7cbc52d7d6461a6ef99e7107ae2a9c":["4b103252dee6afa1b6d7a622c773d178788eb85a"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3bb13258feba31ab676502787ab2e1779f129b7a":["43b04c27924fe393e38e9f0986e32c634f261859","51c34a3639838887e7997850b6be80f838a4d6f7"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["1f9f2355d68aab1348539f7a1603279405e566a4"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"3242a09f703274d3b9283f2064a1a33064b53a1b":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a"],"4b103252dee6afa1b6d7a622c773d178788eb85a":["3242a09f703274d3b9283f2064a1a33064b53a1b","1a2e46fd1b7cbc52d7d6461a6ef99e7107ae2a9c"],"ab9633cb67e3c0aec3c066147a23a957d6e7ad8c":["1f653cfcf159baeaafe5d01682a911e95bba4012"],"51c34a3639838887e7997850b6be80f838a4d6f7":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","f2c5f0cb44df114db4228c8f77861714b5cabaea","a3776dccca01c11e7046323cfad46a3b4a471233","3bb13258feba31ab676502787ab2e1779f129b7a"],"15bbd254c1506df5299c4df8c148262c7bd6301e":["4b103252dee6afa1b6d7a622c773d178788eb85a"],"135621f3a0670a9394eb563224a3b76cc4dddc0f":[],"5f4e87790277826a2aea119328600dfb07761f32":["3242a09f703274d3b9283f2064a1a33064b53a1b"],"0d302ba328993a5b449c2e0b3b5e15ae53e45879":["ab9633cb67e3c0aec3c066147a23a957d6e7ad8c"],"c7f8e68717c68517265937c911e1ce9f25750247":["5f4e87790277826a2aea119328600dfb07761f32","c084e47df29de3330311d69dabf515ceaa989512"],"962d04139994fce5193143ef35615499a9a96d78":[],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["962d04139994fce5193143ef35615499a9a96d78"],"43b04c27924fe393e38e9f0986e32c634f261859":["51c34a3639838887e7997850b6be80f838a4d6f7","3bb13258feba31ab676502787ab2e1779f129b7a"],"e141595402370bee958745de8b1c9de1fa182581":["1f9f2355d68aab1348539f7a1603279405e566a4"],"1f9f2355d68aab1348539f7a1603279405e566a4":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"c084e47df29de3330311d69dabf515ceaa989512":["4b103252dee6afa1b6d7a622c773d178788eb85a","15bbd254c1506df5299c4df8c148262c7bd6301e","5f4e87790277826a2aea119328600dfb07761f32"],"f2c5f0cb44df114db4228c8f77861714b5cabaea":["135621f3a0670a9394eb563224a3b76cc4dddc0f","962d04139994fce5193143ef35615499a9a96d78","e141595402370bee958745de8b1c9de1fa182581","a3776dccca01c11e7046323cfad46a3b4a471233"],"1f653cfcf159baeaafe5d01682a911e95bba4012":["43b04c27924fe393e38e9f0986e32c634f261859"],"a3776dccca01c11e7046323cfad46a3b4a471233":[],"1a2e46fd1b7cbc52d7d6461a6ef99e7107ae2a9c":["0d302ba328993a5b449c2e0b3b5e15ae53e45879"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"3bb13258feba31ab676502787ab2e1779f129b7a":["135621f3a0670a9394eb563224a3b76cc4dddc0f"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["c7f8e68717c68517265937c911e1ce9f25750247"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["135621f3a0670a9394eb563224a3b76cc4dddc0f","962d04139994fce5193143ef35615499a9a96d78","a3776dccca01c11e7046323cfad46a3b4a471233","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}