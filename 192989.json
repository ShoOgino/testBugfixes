{"path":"lucene/codecs/src/java/org/apache/lucene/codecs/blockterms/BlockTermsReader#seekDir(IndexInput,long).mjava","commits":[{"id":"038e2a9b07e2f8ae58336613cea227bf8b973484","date":1346850972,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/codecs/src/java/org/apache/lucene/codecs/blockterms/BlockTermsReader#seekDir(IndexInput,long).mjava","pathOld":"lucene/codecs/src/java/org/apache/lucene/codecs/BlockTermsReader#seekDir(IndexInput,long).mjava","sourceNew":"  protected void seekDir(IndexInput input, long dirOffset)\n      throws IOException {\n    input.seek(dirOffset);\n  }\n\n","sourceOld":"  protected void seekDir(IndexInput input, long dirOffset)\n      throws IOException {\n    input.seek(dirOffset);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5bfcba4bd0c8918a6db1993d4e7818f08cc2a827","date":1349788355,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/codecs/src/java/org/apache/lucene/codecs/blockterms/BlockTermsReader#seekDir(IndexInput,long).mjava","pathOld":"lucene/codecs/src/java/org/apache/lucene/codecs/blockterms/BlockTermsReader#seekDir(IndexInput,long).mjava","sourceNew":"  private void seekDir(IndexInput input, long dirOffset) throws IOException {\n    if (version >= BlockTermsWriter.VERSION_APPEND_ONLY) {\n      input.seek(input.length() - 8);\n      dirOffset = input.readLong();\n    }\n    input.seek(dirOffset);\n  }\n\n","sourceOld":"  protected void seekDir(IndexInput input, long dirOffset)\n      throws IOException {\n    input.seek(dirOffset);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1f3b037cd083286b2af89f96e768f85dcd8072d6","date":1396337805,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/codecs/src/java/org/apache/lucene/codecs/blockterms/BlockTermsReader#seekDir(IndexInput,long).mjava","pathOld":"lucene/codecs/src/java/org/apache/lucene/codecs/blockterms/BlockTermsReader#seekDir(IndexInput,long).mjava","sourceNew":"  private void seekDir(IndexInput input, long dirOffset) throws IOException {\n    if (version >= BlockTermsWriter.VERSION_CHECKSUM) {\n      input.seek(input.length() - CodecUtil.footerLength() - 8);\n      dirOffset = input.readLong();\n    } else if (version >= BlockTermsWriter.VERSION_APPEND_ONLY) {\n      input.seek(input.length() - 8);\n      dirOffset = input.readLong();\n    }\n    input.seek(dirOffset);\n  }\n\n","sourceOld":"  private void seekDir(IndexInput input, long dirOffset) throws IOException {\n    if (version >= BlockTermsWriter.VERSION_APPEND_ONLY) {\n      input.seek(input.length() - 8);\n      dirOffset = input.readLong();\n    }\n    input.seek(dirOffset);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5eb2511ababf862ea11e10761c70ee560cd84510","date":1396607225,"type":3,"author":"Dawid Weiss","isMerge":true,"pathNew":"lucene/codecs/src/java/org/apache/lucene/codecs/blockterms/BlockTermsReader#seekDir(IndexInput,long).mjava","pathOld":"lucene/codecs/src/java/org/apache/lucene/codecs/blockterms/BlockTermsReader#seekDir(IndexInput,long).mjava","sourceNew":"  private void seekDir(IndexInput input, long dirOffset) throws IOException {\n    if (version >= BlockTermsWriter.VERSION_CHECKSUM) {\n      input.seek(input.length() - CodecUtil.footerLength() - 8);\n      dirOffset = input.readLong();\n    } else if (version >= BlockTermsWriter.VERSION_APPEND_ONLY) {\n      input.seek(input.length() - 8);\n      dirOffset = input.readLong();\n    }\n    input.seek(dirOffset);\n  }\n\n","sourceOld":"  private void seekDir(IndexInput input, long dirOffset) throws IOException {\n    if (version >= BlockTermsWriter.VERSION_APPEND_ONLY) {\n      input.seek(input.length() - 8);\n      dirOffset = input.readLong();\n    }\n    input.seek(dirOffset);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8d35e791a979f62bb7484ccd9f83fa833c1606e8","date":1412164445,"type":4,"author":"Robert Muir","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/codecs/src/java/org/apache/lucene/codecs/blockterms/BlockTermsReader#seekDir(IndexInput,long).mjava","sourceNew":null,"sourceOld":"  private void seekDir(IndexInput input, long dirOffset) throws IOException {\n    if (version >= BlockTermsWriter.VERSION_CHECKSUM) {\n      input.seek(input.length() - CodecUtil.footerLength() - 8);\n      dirOffset = input.readLong();\n    } else if (version >= BlockTermsWriter.VERSION_APPEND_ONLY) {\n      input.seek(input.length() - 8);\n      dirOffset = input.readLong();\n    }\n    input.seek(dirOffset);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9bb9a29a5e71a90295f175df8919802993142c9a","date":1412517673,"type":4,"author":"Robert Muir","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/codecs/src/java/org/apache/lucene/codecs/blockterms/BlockTermsReader#seekDir(IndexInput,long).mjava","sourceNew":null,"sourceOld":"  private void seekDir(IndexInput input, long dirOffset) throws IOException {\n    if (version >= BlockTermsWriter.VERSION_CHECKSUM) {\n      input.seek(input.length() - CodecUtil.footerLength() - 8);\n      dirOffset = input.readLong();\n    } else if (version >= BlockTermsWriter.VERSION_APPEND_ONLY) {\n      input.seek(input.length() - 8);\n      dirOffset = input.readLong();\n    }\n    input.seek(dirOffset);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"5eb2511ababf862ea11e10761c70ee560cd84510":["5bfcba4bd0c8918a6db1993d4e7818f08cc2a827","1f3b037cd083286b2af89f96e768f85dcd8072d6"],"1f3b037cd083286b2af89f96e768f85dcd8072d6":["5bfcba4bd0c8918a6db1993d4e7818f08cc2a827"],"8d35e791a979f62bb7484ccd9f83fa833c1606e8":["1f3b037cd083286b2af89f96e768f85dcd8072d6"],"9bb9a29a5e71a90295f175df8919802993142c9a":["1f3b037cd083286b2af89f96e768f85dcd8072d6","8d35e791a979f62bb7484ccd9f83fa833c1606e8"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"5bfcba4bd0c8918a6db1993d4e7818f08cc2a827":["038e2a9b07e2f8ae58336613cea227bf8b973484"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9bb9a29a5e71a90295f175df8919802993142c9a"],"038e2a9b07e2f8ae58336613cea227bf8b973484":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"5eb2511ababf862ea11e10761c70ee560cd84510":[],"1f3b037cd083286b2af89f96e768f85dcd8072d6":["5eb2511ababf862ea11e10761c70ee560cd84510","8d35e791a979f62bb7484ccd9f83fa833c1606e8","9bb9a29a5e71a90295f175df8919802993142c9a"],"8d35e791a979f62bb7484ccd9f83fa833c1606e8":["9bb9a29a5e71a90295f175df8919802993142c9a"],"9bb9a29a5e71a90295f175df8919802993142c9a":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["038e2a9b07e2f8ae58336613cea227bf8b973484"],"5bfcba4bd0c8918a6db1993d4e7818f08cc2a827":["5eb2511ababf862ea11e10761c70ee560cd84510","1f3b037cd083286b2af89f96e768f85dcd8072d6"],"038e2a9b07e2f8ae58336613cea227bf8b973484":["5bfcba4bd0c8918a6db1993d4e7818f08cc2a827"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["5eb2511ababf862ea11e10761c70ee560cd84510","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}