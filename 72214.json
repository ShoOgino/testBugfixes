{"path":"solr/contrib/langid/src/java/org/apache/solr/update/processor/OpenNLPLangDetectUpdateProcessor#detectLanguage(Reader).mjava","commits":[{"id":"a4da5f9e2a1f2ac76feac0c0796bdce4881cb687","date":1546536444,"type":1,"author":"Jan HÃ¸ydahl","isMerge":false,"pathNew":"solr/contrib/langid/src/java/org/apache/solr/update/processor/OpenNLPLangDetectUpdateProcessor#detectLanguage(Reader).mjava","pathOld":"solr/contrib/langid/src/java/org/apache/solr/update/processor/OpenNLPLangDetectUpdateProcessor#detectLanguage(SolrInputDocument).mjava","sourceNew":"  @Override\n  protected List<DetectedLanguage> detectLanguage(Reader solrDocReader) {\n    List<DetectedLanguage> languages = new ArrayList<>();\n    String content = SolrInputDocumentReader.asString(solrDocReader);\n    if (content.length() != 0) {\n      LanguageDetectorME ldme = new LanguageDetectorME(model);\n      Language[] langs = ldme.predictLanguages(content);\n      for(Language language: langs){\n        languages.add(new DetectedLanguage(ISO639_MAP.get(language.getLang()), language.getConfidence()));\n      }\n    } else {\n      log.debug(\"No input text to detect language from, returning empty list\");\n    }\n    return languages;\n  }\n\n","sourceOld":"  @Override\n  protected List<DetectedLanguage> detectLanguage(SolrInputDocument doc) {\n    List<DetectedLanguage> languages = new ArrayList<>();\n    String content = concatFields(doc);\n    if (content.length() != 0) {\n      LanguageDetectorME ldme = new LanguageDetectorME(model);\n      Language[] langs = ldme.predictLanguages(content);\n      for(Language language: langs){\n        languages.add(new DetectedLanguage(ISO639_MAP.get(language.getLang()), language.getConfidence()));\n      }\n    } else {\n      log.debug(\"No input text to detect language from, returning empty list\");\n    }\n    return languages;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a4da5f9e2a1f2ac76feac0c0796bdce4881cb687":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a4da5f9e2a1f2ac76feac0c0796bdce4881cb687"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["a4da5f9e2a1f2ac76feac0c0796bdce4881cb687"],"a4da5f9e2a1f2ac76feac0c0796bdce4881cb687":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}