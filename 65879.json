{"path":"lucene/src/java/org/apache/lucene/search/FieldComparator.TermOrdValDocValuesComparator#setBottom(int).mjava","commits":[{"id":"28088b0a688977b79dec2cc9119cff2fb4aab7ee","date":1321197996,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/search/FieldComparator.TermOrdValDocValuesComparator#setBottom(int).mjava","pathOld":"/dev/null","sourceNew":"    @Override\n    public void setBottom(final int bottom) {\n      bottomSlot = bottom;\n\n      bottomValue = values[bottomSlot];\n      if (currentReaderGen == readerGen[bottomSlot]) {\n        bottomOrd = ords[bottomSlot];\n        bottomSameReader = true;\n      } else {\n        if (bottomValue == null) {\n          // 0 ord is null for all segments\n          assert ords[bottomSlot] == 0;\n          bottomOrd = 0;\n          bottomSameReader = true;\n          readerGen[bottomSlot] = currentReaderGen;\n        } else {\n          final int index = termsIndex.getByValue(bottomValue, tempBR);\n          if (index < 0) {\n            bottomOrd = -index - 2;\n            bottomSameReader = false;\n          } else {\n            bottomOrd = index;\n            // exact value match\n            bottomSameReader = true;\n            readerGen[bottomSlot] = currentReaderGen;            \n            ords[bottomSlot] = bottomOrd;\n          }\n        }\n      }\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":5,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/FieldComparator.TermOrdValDocValuesComparator#setBottom(int).mjava","pathOld":"lucene/src/java/org/apache/lucene/search/FieldComparator.TermOrdValDocValuesComparator#setBottom(int).mjava","sourceNew":"    @Override\n    public void setBottom(final int bottom) {\n      bottomSlot = bottom;\n\n      bottomValue = values[bottomSlot];\n      if (currentReaderGen == readerGen[bottomSlot]) {\n        bottomOrd = ords[bottomSlot];\n        bottomSameReader = true;\n      } else {\n        if (bottomValue == null) {\n          // 0 ord is null for all segments\n          assert ords[bottomSlot] == 0;\n          bottomOrd = 0;\n          bottomSameReader = true;\n          readerGen[bottomSlot] = currentReaderGen;\n        } else {\n          final int index = termsIndex.getByValue(bottomValue, tempBR);\n          if (index < 0) {\n            bottomOrd = -index - 2;\n            bottomSameReader = false;\n          } else {\n            bottomOrd = index;\n            // exact value match\n            bottomSameReader = true;\n            readerGen[bottomSlot] = currentReaderGen;            \n            ords[bottomSlot] = bottomOrd;\n          }\n        }\n      }\n    }\n\n","sourceOld":"    @Override\n    public void setBottom(final int bottom) {\n      bottomSlot = bottom;\n\n      bottomValue = values[bottomSlot];\n      if (currentReaderGen == readerGen[bottomSlot]) {\n        bottomOrd = ords[bottomSlot];\n        bottomSameReader = true;\n      } else {\n        if (bottomValue == null) {\n          // 0 ord is null for all segments\n          assert ords[bottomSlot] == 0;\n          bottomOrd = 0;\n          bottomSameReader = true;\n          readerGen[bottomSlot] = currentReaderGen;\n        } else {\n          final int index = termsIndex.getByValue(bottomValue, tempBR);\n          if (index < 0) {\n            bottomOrd = -index - 2;\n            bottomSameReader = false;\n          } else {\n            bottomOrd = index;\n            // exact value match\n            bottomSameReader = true;\n            readerGen[bottomSlot] = currentReaderGen;            \n            ords[bottomSlot] = bottomOrd;\n          }\n        }\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["28088b0a688977b79dec2cc9119cff2fb4aab7ee"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"28088b0a688977b79dec2cc9119cff2fb4aab7ee":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"]},"commit2Childs":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["28088b0a688977b79dec2cc9119cff2fb4aab7ee"],"28088b0a688977b79dec2cc9119cff2fb4aab7ee":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}