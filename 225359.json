{"path":"lucene/queryparser/src/java/org/apache/lucene/queryparser/flexible/standard/config/PointsConfig#setType(Class[#-extends-Number]).mjava","commits":[{"id":"683242c67a3f6086bae8b1354748fcaa38edfbd5","date":1457575601,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/queryparser/src/java/org/apache/lucene/queryparser/flexible/standard/config/PointsConfig#setType(Class[#-extends-Number]).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Sets the numeric type used to index the numeric values\n   * \n   * @param type the numeric type used to index the numeric values\n   */\n  public void setType(Class<? extends Number> type) {\n    if (type == null) {\n      throw new IllegalArgumentException(\"type cannot be null!\");\n    }\n    if (Integer.class.equals(type) == false &&\n        Long.class.equals(type) == false &&\n        Float.class.equals(type) == false &&\n        Double.class.equals(type) == false) {\n      throw new IllegalArgumentException(\"unsupported numeric type: \" + type);\n    }\n    this.type = type;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["ad0d09e969f4763b0df4230f8e3f74357872a4e4"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"ad0d09e969f4763b0df4230f8e3f74357872a4e4","date":1459188769,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/queryparser/src/java/org/apache/lucene/queryparser/flexible/standard/config/PointsConfig#setType(Class[#-extends-Number]).mjava","pathOld":"lucene/queryparser/src/java/org/apache/lucene/queryparser/flexible/standard/config/PointsConfig#setType(Class[#-extends-Number]).mjava","sourceNew":"  /**\n   * Sets the numeric type used to index the numeric values\n   * \n   * @param type the numeric type used to index the numeric values\n   */\n  public void setType(Class<? extends Number> type) {\n    if (type == null) {\n      throw new IllegalArgumentException(\"type must not be null!\");\n    }\n    if (Integer.class.equals(type) == false &&\n        Long.class.equals(type) == false &&\n        Float.class.equals(type) == false &&\n        Double.class.equals(type) == false) {\n      throw new IllegalArgumentException(\"unsupported numeric type: \" + type);\n    }\n    this.type = type;\n  }\n\n","sourceOld":"  /**\n   * Sets the numeric type used to index the numeric values\n   * \n   * @param type the numeric type used to index the numeric values\n   */\n  public void setType(Class<? extends Number> type) {\n    if (type == null) {\n      throw new IllegalArgumentException(\"type cannot be null!\");\n    }\n    if (Integer.class.equals(type) == false &&\n        Long.class.equals(type) == false &&\n        Float.class.equals(type) == false &&\n        Double.class.equals(type) == false) {\n      throw new IllegalArgumentException(\"unsupported numeric type: \" + type);\n    }\n    this.type = type;\n  }\n\n","bugFix":["683242c67a3f6086bae8b1354748fcaa38edfbd5"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"683242c67a3f6086bae8b1354748fcaa38edfbd5":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"ad0d09e969f4763b0df4230f8e3f74357872a4e4":["683242c67a3f6086bae8b1354748fcaa38edfbd5"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["ad0d09e969f4763b0df4230f8e3f74357872a4e4"]},"commit2Childs":{"683242c67a3f6086bae8b1354748fcaa38edfbd5":["ad0d09e969f4763b0df4230f8e3f74357872a4e4"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["683242c67a3f6086bae8b1354748fcaa38edfbd5"],"ad0d09e969f4763b0df4230f8e3f74357872a4e4":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}