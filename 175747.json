{"path":"sandbox/contributions/similarity/src/java/org/apache/lucene/search/similar/MoreLikeThis#main(String[]).mjava","commits":[{"id":"0d57805a939f8923b86ca8202ccef1f7cf548098","date":1105995946,"type":0,"author":"David Spencer","isMerge":false,"pathNew":"sandbox/contributions/similarity/src/java/org/apache/lucene/search/similar/MoreLikeThis#main(String[]).mjava","pathOld":"/dev/null","sourceNew":"    /**\n     * Test driver.\n     * Pass in \"-i INDEX\" and then either \"-fn FILE\" or \"-url URL\".\n     */\n    public static void main(String[] a) throws Throwable {\n        String indexName = \"localhost_index\";\n        String fn = \"c:/Program Files/Apache Group/Apache/htdocs/manual/vhosts/index.html.en\";\n        URL url = null;\n        for (int i = 0; i < a.length; i++) {\n            if (a[i].equals(\"-i\")) {\n                indexName = a[++i];\n            }\n            else if (a[i].equals(\"-f\")) {\n                fn = a[++i];\n            }\n            else if (a[i].equals(\"-url\")) {\n                url = new URL(a[++i]);\n            }\n        }\n\n        PrintStream o = System.out;\n        IndexReader r = IndexReader.open(indexName);\n        o.println(\"Open index \" + indexName + \" which has \" + r.numDocs() + \" docs\");\n\n        MoreLikeThis mlt = new MoreLikeThis(r);\n\n        o.println(\"Query generation parameters:\");\n        o.println(mlt.describeParams());\n        o.println();\n\n        Query query = null;\n        if (url != null) {\n            o.println(\"Parsing URL: \" + url);\n            query = mlt.like(url);\n        }\n        else if (fn != null) {\n            o.println(\"Parsing file: \" + fn);\n            query = mlt.like(new File(fn));\n        }\n\n        o.println(\"q: \" + query);\n        o.println();\n        IndexSearcher searcher = new IndexSearcher(indexName);\n\n        Hits hits = searcher.search(query);\n        int len = hits.length();\n        o.println(\"found: \" + len + \" documents matching\");\n        o.println();\n        for (int i = 0; i < Math.min(25, len); i++) {\n            Document d = hits.doc(i);\n            o.println(\"score  : \" + hits.score(i));\n            o.println(\"url    : \" + d.get(\"url\"));\n            o.println(\"\\ttitle  : \" + d.get(\"title\"));\n            o.println(\"\\tsummary: \" + d.get(\"summary\"));\n            o.println();\n        }\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"aa8dcd4adc562c6e8da67c42872ef9194f8598fa","date":1108145465,"type":5,"author":"Erik Hatcher","isMerge":false,"pathNew":"contrib/similarity/src/java/org/apache/lucene/search/similar/MoreLikeThis#main(String[]).mjava","pathOld":"sandbox/contributions/similarity/src/java/org/apache/lucene/search/similar/MoreLikeThis#main(String[]).mjava","sourceNew":"    /**\n     * Test driver.\n     * Pass in \"-i INDEX\" and then either \"-fn FILE\" or \"-url URL\".\n     */\n    public static void main(String[] a) throws Throwable {\n        String indexName = \"localhost_index\";\n        String fn = \"c:/Program Files/Apache Group/Apache/htdocs/manual/vhosts/index.html.en\";\n        URL url = null;\n        for (int i = 0; i < a.length; i++) {\n            if (a[i].equals(\"-i\")) {\n                indexName = a[++i];\n            }\n            else if (a[i].equals(\"-f\")) {\n                fn = a[++i];\n            }\n            else if (a[i].equals(\"-url\")) {\n                url = new URL(a[++i]);\n            }\n        }\n\n        PrintStream o = System.out;\n        IndexReader r = IndexReader.open(indexName);\n        o.println(\"Open index \" + indexName + \" which has \" + r.numDocs() + \" docs\");\n\n        MoreLikeThis mlt = new MoreLikeThis(r);\n\n        o.println(\"Query generation parameters:\");\n        o.println(mlt.describeParams());\n        o.println();\n\n        Query query = null;\n        if (url != null) {\n            o.println(\"Parsing URL: \" + url);\n            query = mlt.like(url);\n        }\n        else if (fn != null) {\n            o.println(\"Parsing file: \" + fn);\n            query = mlt.like(new File(fn));\n        }\n\n        o.println(\"q: \" + query);\n        o.println();\n        IndexSearcher searcher = new IndexSearcher(indexName);\n\n        Hits hits = searcher.search(query);\n        int len = hits.length();\n        o.println(\"found: \" + len + \" documents matching\");\n        o.println();\n        for (int i = 0; i < Math.min(25, len); i++) {\n            Document d = hits.doc(i);\n            o.println(\"score  : \" + hits.score(i));\n            o.println(\"url    : \" + d.get(\"url\"));\n            o.println(\"\\ttitle  : \" + d.get(\"title\"));\n            o.println(\"\\tsummary: \" + d.get(\"summary\"));\n            o.println();\n        }\n    }\n\n","sourceOld":"    /**\n     * Test driver.\n     * Pass in \"-i INDEX\" and then either \"-fn FILE\" or \"-url URL\".\n     */\n    public static void main(String[] a) throws Throwable {\n        String indexName = \"localhost_index\";\n        String fn = \"c:/Program Files/Apache Group/Apache/htdocs/manual/vhosts/index.html.en\";\n        URL url = null;\n        for (int i = 0; i < a.length; i++) {\n            if (a[i].equals(\"-i\")) {\n                indexName = a[++i];\n            }\n            else if (a[i].equals(\"-f\")) {\n                fn = a[++i];\n            }\n            else if (a[i].equals(\"-url\")) {\n                url = new URL(a[++i]);\n            }\n        }\n\n        PrintStream o = System.out;\n        IndexReader r = IndexReader.open(indexName);\n        o.println(\"Open index \" + indexName + \" which has \" + r.numDocs() + \" docs\");\n\n        MoreLikeThis mlt = new MoreLikeThis(r);\n\n        o.println(\"Query generation parameters:\");\n        o.println(mlt.describeParams());\n        o.println();\n\n        Query query = null;\n        if (url != null) {\n            o.println(\"Parsing URL: \" + url);\n            query = mlt.like(url);\n        }\n        else if (fn != null) {\n            o.println(\"Parsing file: \" + fn);\n            query = mlt.like(new File(fn));\n        }\n\n        o.println(\"q: \" + query);\n        o.println();\n        IndexSearcher searcher = new IndexSearcher(indexName);\n\n        Hits hits = searcher.search(query);\n        int len = hits.length();\n        o.println(\"found: \" + len + \" documents matching\");\n        o.println();\n        for (int i = 0; i < Math.min(25, len); i++) {\n            Document d = hits.doc(i);\n            o.println(\"score  : \" + hits.score(i));\n            o.println(\"url    : \" + d.get(\"url\"));\n            o.println(\"\\ttitle  : \" + d.get(\"title\"));\n            o.println(\"\\tsummary: \" + d.get(\"summary\"));\n            o.println();\n        }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"0d57805a939f8923b86ca8202ccef1f7cf548098":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"aa8dcd4adc562c6e8da67c42872ef9194f8598fa":["0d57805a939f8923b86ca8202ccef1f7cf548098"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["aa8dcd4adc562c6e8da67c42872ef9194f8598fa"]},"commit2Childs":{"0d57805a939f8923b86ca8202ccef1f7cf548098":["aa8dcd4adc562c6e8da67c42872ef9194f8598fa"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["0d57805a939f8923b86ca8202ccef1f7cf548098"],"aa8dcd4adc562c6e8da67c42872ef9194f8598fa":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}