{"path":"lucene/contrib/sandbox/src/test/org/apache/lucene/sandbox/queries/regex/TestSpanRegexQuery#createRAMDirectories().mjava","commits":[{"id":"f9fdc0777b84633cc8cfa8995ff5b0d411e4515b","date":1313816278,"type":1,"author":"Christopher John Male","isMerge":false,"pathNew":"lucene/contrib/sandbox/src/test/org/apache/lucene/sandbox/queries/regex/TestSpanRegexQuery#createRAMDirectories().mjava","pathOld":"lucene/contrib/queries/src/test/org/apache/lucene/search/regex/TestSpanRegexQuery#createRAMDirectories().mjava","sourceNew":"  private void createRAMDirectories() throws CorruptIndexException,\n      LockObtainFailedException, IOException {\n    // creating a document to store\n    Document lDoc = new Document();\n    lDoc.add(newField(\"field\", \"a1 b1\", Field.Store.NO,\n        Field.Index.ANALYZED_NO_NORMS));\n\n    // creating a document to store\n    Document lDoc2 = new Document();\n    lDoc2.add(newField(\"field\", \"a2 b2\", Field.Store.NO,\n        Field.Index.ANALYZED_NO_NORMS));\n\n    // creating first index writer\n    IndexWriter writerA = new IndexWriter(indexStoreA, newIndexWriterConfig(\n        TEST_VERSION_CURRENT, new MockAnalyzer(random)).setOpenMode(OpenMode.CREATE));\n    writerA.addDocument(lDoc);\n    writerA.optimize();\n    writerA.close();\n\n    // creating second index writer\n    IndexWriter writerB = new IndexWriter(indexStoreB, newIndexWriterConfig(\n        TEST_VERSION_CURRENT, new MockAnalyzer(random)).setOpenMode(OpenMode.CREATE));\n    writerB.addDocument(lDoc2);\n    writerB.optimize();\n    writerB.close();\n  }\n\n","sourceOld":"  private void createRAMDirectories() throws CorruptIndexException,\n      LockObtainFailedException, IOException {\n    // creating a document to store\n    Document lDoc = new Document();\n    lDoc.add(newField(\"field\", \"a1 b1\", Field.Store.NO,\n        Field.Index.ANALYZED_NO_NORMS));\n\n    // creating a document to store\n    Document lDoc2 = new Document();\n    lDoc2.add(newField(\"field\", \"a2 b2\", Field.Store.NO,\n        Field.Index.ANALYZED_NO_NORMS));\n\n    // creating first index writer\n    IndexWriter writerA = new IndexWriter(indexStoreA, newIndexWriterConfig(\n        TEST_VERSION_CURRENT, new MockAnalyzer(random)).setOpenMode(OpenMode.CREATE));\n    writerA.addDocument(lDoc);\n    writerA.optimize();\n    writerA.close();\n\n    // creating second index writer\n    IndexWriter writerB = new IndexWriter(indexStoreB, newIndexWriterConfig(\n        TEST_VERSION_CURRENT, new MockAnalyzer(random)).setOpenMode(OpenMode.CREATE));\n    writerB.addDocument(lDoc2);\n    writerB.optimize();\n    writerB.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1509f151d7692d84fae414b2b799ac06ba60fcb4","date":1314451621,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/contrib/sandbox/src/test/org/apache/lucene/sandbox/queries/regex/TestSpanRegexQuery#createRAMDirectories().mjava","pathOld":"lucene/contrib/sandbox/src/test/org/apache/lucene/sandbox/queries/regex/TestSpanRegexQuery#createRAMDirectories().mjava","sourceNew":"  private void createRAMDirectories() throws CorruptIndexException,\n      LockObtainFailedException, IOException {\n    // creating a document to store\n    Document lDoc = new Document();\n    FieldType customType = new FieldType(TextField.TYPE_UNSTORED);\n    customType.setOmitNorms(true);\n    lDoc.add(newField(\"field\", \"a1 b1\", customType));\n\n    // creating a document to store\n    Document lDoc2 = new Document();\n    lDoc2.add(newField(\"field\", \"a2 b2\", customType));\n\n    // creating first index writer\n    IndexWriter writerA = new IndexWriter(indexStoreA, newIndexWriterConfig(\n        TEST_VERSION_CURRENT, new MockAnalyzer(random)).setOpenMode(OpenMode.CREATE));\n    writerA.addDocument(lDoc);\n    writerA.optimize();\n    writerA.close();\n\n    // creating second index writer\n    IndexWriter writerB = new IndexWriter(indexStoreB, newIndexWriterConfig(\n        TEST_VERSION_CURRENT, new MockAnalyzer(random)).setOpenMode(OpenMode.CREATE));\n    writerB.addDocument(lDoc2);\n    writerB.optimize();\n    writerB.close();\n  }\n\n","sourceOld":"  private void createRAMDirectories() throws CorruptIndexException,\n      LockObtainFailedException, IOException {\n    // creating a document to store\n    Document lDoc = new Document();\n    lDoc.add(newField(\"field\", \"a1 b1\", Field.Store.NO,\n        Field.Index.ANALYZED_NO_NORMS));\n\n    // creating a document to store\n    Document lDoc2 = new Document();\n    lDoc2.add(newField(\"field\", \"a2 b2\", Field.Store.NO,\n        Field.Index.ANALYZED_NO_NORMS));\n\n    // creating first index writer\n    IndexWriter writerA = new IndexWriter(indexStoreA, newIndexWriterConfig(\n        TEST_VERSION_CURRENT, new MockAnalyzer(random)).setOpenMode(OpenMode.CREATE));\n    writerA.addDocument(lDoc);\n    writerA.optimize();\n    writerA.close();\n\n    // creating second index writer\n    IndexWriter writerB = new IndexWriter(indexStoreB, newIndexWriterConfig(\n        TEST_VERSION_CURRENT, new MockAnalyzer(random)).setOpenMode(OpenMode.CREATE));\n    writerB.addDocument(lDoc2);\n    writerB.optimize();\n    writerB.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d14e8d18c0e3970c20354dbeeb49da11bd587fbd","date":1321041051,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/contrib/sandbox/src/test/org/apache/lucene/sandbox/queries/regex/TestSpanRegexQuery#createRAMDirectories().mjava","pathOld":"lucene/contrib/sandbox/src/test/org/apache/lucene/sandbox/queries/regex/TestSpanRegexQuery#createRAMDirectories().mjava","sourceNew":"  private void createRAMDirectories() throws CorruptIndexException,\n      LockObtainFailedException, IOException {\n    // creating a document to store\n    Document lDoc = new Document();\n    FieldType customType = new FieldType(TextField.TYPE_UNSTORED);\n    customType.setOmitNorms(true);\n    lDoc.add(newField(\"field\", \"a1 b1\", customType));\n\n    // creating a document to store\n    Document lDoc2 = new Document();\n    lDoc2.add(newField(\"field\", \"a2 b2\", customType));\n\n    // creating first index writer\n    IndexWriter writerA = new IndexWriter(indexStoreA, newIndexWriterConfig(\n        TEST_VERSION_CURRENT, new MockAnalyzer(random)).setOpenMode(OpenMode.CREATE));\n    writerA.addDocument(lDoc);\n    writerA.forceMerge(1);\n    writerA.close();\n\n    // creating second index writer\n    IndexWriter writerB = new IndexWriter(indexStoreB, newIndexWriterConfig(\n        TEST_VERSION_CURRENT, new MockAnalyzer(random)).setOpenMode(OpenMode.CREATE));\n    writerB.addDocument(lDoc2);\n    writerB.forceMerge(1);\n    writerB.close();\n  }\n\n","sourceOld":"  private void createRAMDirectories() throws CorruptIndexException,\n      LockObtainFailedException, IOException {\n    // creating a document to store\n    Document lDoc = new Document();\n    FieldType customType = new FieldType(TextField.TYPE_UNSTORED);\n    customType.setOmitNorms(true);\n    lDoc.add(newField(\"field\", \"a1 b1\", customType));\n\n    // creating a document to store\n    Document lDoc2 = new Document();\n    lDoc2.add(newField(\"field\", \"a2 b2\", customType));\n\n    // creating first index writer\n    IndexWriter writerA = new IndexWriter(indexStoreA, newIndexWriterConfig(\n        TEST_VERSION_CURRENT, new MockAnalyzer(random)).setOpenMode(OpenMode.CREATE));\n    writerA.addDocument(lDoc);\n    writerA.optimize();\n    writerA.close();\n\n    // creating second index writer\n    IndexWriter writerB = new IndexWriter(indexStoreB, newIndexWriterConfig(\n        TEST_VERSION_CURRENT, new MockAnalyzer(random)).setOpenMode(OpenMode.CREATE));\n    writerB.addDocument(lDoc2);\n    writerB.optimize();\n    writerB.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8bfa39296944e5fddc334aa89243d91f9cbb8367","date":1330973284,"type":4,"author":"Uwe Schindler","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/contrib/sandbox/src/test/org/apache/lucene/sandbox/queries/regex/TestSpanRegexQuery#createRAMDirectories().mjava","sourceNew":null,"sourceOld":"  private void createRAMDirectories() throws CorruptIndexException,\n      LockObtainFailedException, IOException {\n    // creating a document to store\n    Document lDoc = new Document();\n    FieldType customType = new FieldType(TextField.TYPE_UNSTORED);\n    customType.setOmitNorms(true);\n    lDoc.add(newField(\"field\", \"a1 b1\", customType));\n\n    // creating a document to store\n    Document lDoc2 = new Document();\n    lDoc2.add(newField(\"field\", \"a2 b2\", customType));\n\n    // creating first index writer\n    IndexWriter writerA = new IndexWriter(indexStoreA, newIndexWriterConfig(\n        TEST_VERSION_CURRENT, new MockAnalyzer(random)).setOpenMode(OpenMode.CREATE));\n    writerA.addDocument(lDoc);\n    writerA.forceMerge(1);\n    writerA.close();\n\n    // creating second index writer\n    IndexWriter writerB = new IndexWriter(indexStoreB, newIndexWriterConfig(\n        TEST_VERSION_CURRENT, new MockAnalyzer(random)).setOpenMode(OpenMode.CREATE));\n    writerB.addDocument(lDoc2);\n    writerB.forceMerge(1);\n    writerB.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab","date":1331075828,"type":4,"author":"Ryan McKinley","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/contrib/sandbox/src/test/org/apache/lucene/sandbox/queries/regex/TestSpanRegexQuery#createRAMDirectories().mjava","sourceNew":null,"sourceOld":"  private void createRAMDirectories() throws CorruptIndexException,\n      LockObtainFailedException, IOException {\n    // creating a document to store\n    Document lDoc = new Document();\n    FieldType customType = new FieldType(TextField.TYPE_UNSTORED);\n    customType.setOmitNorms(true);\n    lDoc.add(newField(\"field\", \"a1 b1\", customType));\n\n    // creating a document to store\n    Document lDoc2 = new Document();\n    lDoc2.add(newField(\"field\", \"a2 b2\", customType));\n\n    // creating first index writer\n    IndexWriter writerA = new IndexWriter(indexStoreA, newIndexWriterConfig(\n        TEST_VERSION_CURRENT, new MockAnalyzer(random)).setOpenMode(OpenMode.CREATE));\n    writerA.addDocument(lDoc);\n    writerA.forceMerge(1);\n    writerA.close();\n\n    // creating second index writer\n    IndexWriter writerB = new IndexWriter(indexStoreB, newIndexWriterConfig(\n        TEST_VERSION_CURRENT, new MockAnalyzer(random)).setOpenMode(OpenMode.CREATE));\n    writerB.addDocument(lDoc2);\n    writerB.forceMerge(1);\n    writerB.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"f9fdc0777b84633cc8cfa8995ff5b0d411e4515b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab":["d14e8d18c0e3970c20354dbeeb49da11bd587fbd","8bfa39296944e5fddc334aa89243d91f9cbb8367"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"8bfa39296944e5fddc334aa89243d91f9cbb8367":["d14e8d18c0e3970c20354dbeeb49da11bd587fbd"],"d14e8d18c0e3970c20354dbeeb49da11bd587fbd":["1509f151d7692d84fae414b2b799ac06ba60fcb4"],"1509f151d7692d84fae414b2b799ac06ba60fcb4":["f9fdc0777b84633cc8cfa8995ff5b0d411e4515b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["8bfa39296944e5fddc334aa89243d91f9cbb8367"]},"commit2Childs":{"f9fdc0777b84633cc8cfa8995ff5b0d411e4515b":["1509f151d7692d84fae414b2b799ac06ba60fcb4"],"9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["f9fdc0777b84633cc8cfa8995ff5b0d411e4515b"],"d14e8d18c0e3970c20354dbeeb49da11bd587fbd":["9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab","8bfa39296944e5fddc334aa89243d91f9cbb8367"],"8bfa39296944e5fddc334aa89243d91f9cbb8367":["9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"1509f151d7692d84fae414b2b799ac06ba60fcb4":["d14e8d18c0e3970c20354dbeeb49da11bd587fbd"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}