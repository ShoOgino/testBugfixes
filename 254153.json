{"path":"lucene/core/src/test/org/apache/lucene/search/TestControlledRealTimeReopenThread.LatchedIndexWriter#updateDocument(Term,IndexDocument).mjava","commits":[{"id":"5c1c5aa8e88aa52c9e1cbfc696b611d3a56223c0","date":1422781929,"type":1,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestControlledRealTimeReopenThread.LatchedIndexWriter#updateDocument(Term,IndexDocument).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestControlledRealTimeReopenThread.LatchedIndexWriter#updateDocument(Term,IndexDocument,Analyzer).mjava","sourceNew":"    @Override\n    public void updateDocument(Term term,\n        IndexDocument doc)\n        throws IOException {\n      super.updateDocument(term, doc);\n      try {\n        if (waitAfterUpdate) {\n          signal.countDown();\n          latch.await();\n        }\n      } catch (InterruptedException e) {\n        throw new ThreadInterruptedException(e);\n      }\n    }\n\n","sourceOld":"    @Override\n    public void updateDocument(Term term,\n        IndexDocument doc, Analyzer analyzer)\n        throws IOException {\n      super.updateDocument(term, doc, analyzer);\n      try {\n        if (waitAfterUpdate) {\n          signal.countDown();\n          latch.await();\n        }\n      } catch (InterruptedException e) {\n        throw new ThreadInterruptedException(e);\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6654c5f3ec2e4a84ef867c82d4eec872c2372c8c","date":1453060490,"type":5,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestControlledRealTimeReopenThread.LatchedIndexWriter#updateDocument(Term,Iterable[#-extends-IndexableField]).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestControlledRealTimeReopenThread.LatchedIndexWriter#updateDocument(Term,IndexDocument).mjava","sourceNew":"    @Override\n    public void updateDocument(Term term,\n        Iterable<? extends IndexableField> doc)\n        throws IOException {\n      super.updateDocument(term, doc);\n      try {\n        if (waitAfterUpdate) {\n          signal.countDown();\n          latch.await();\n        }\n      } catch (InterruptedException e) {\n        throw new ThreadInterruptedException(e);\n      }\n    }\n\n","sourceOld":"    @Override\n    public void updateDocument(Term term,\n        IndexDocument doc)\n        throws IOException {\n      super.updateDocument(term, doc);\n      try {\n        if (waitAfterUpdate) {\n          signal.countDown();\n          latch.await();\n        }\n      } catch (InterruptedException e) {\n        throw new ThreadInterruptedException(e);\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["6654c5f3ec2e4a84ef867c82d4eec872c2372c8c"],"6654c5f3ec2e4a84ef867c82d4eec872c2372c8c":["5c1c5aa8e88aa52c9e1cbfc696b611d3a56223c0"],"5c1c5aa8e88aa52c9e1cbfc696b611d3a56223c0":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["5c1c5aa8e88aa52c9e1cbfc696b611d3a56223c0"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"6654c5f3ec2e4a84ef867c82d4eec872c2372c8c":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"5c1c5aa8e88aa52c9e1cbfc696b611d3a56223c0":["6654c5f3ec2e4a84ef867c82d4eec872c2372c8c"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}