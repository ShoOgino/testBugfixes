{"path":"solr/core/src/test/org/apache/solr/BasicFunctionalityTest#beforeTests().mjava","commits":[{"id":"c903c3d15906a3da96b8c0c2fb704491005fdbdb","date":1453508227,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/BasicFunctionalityTest#beforeTests().mjava","pathOld":"solr/src/test/org/apache/solr/BasicFunctionalityTest#beforeTests().mjava","sourceNew":"  @BeforeClass\n  public static void beforeTests() throws Exception {\n    initCore(\"solrconfig.xml\",\"schema.xml\");\n  }\n\n","sourceOld":"  @BeforeClass\n  public static void beforeTests() throws Exception {\n    initCore(\"solrconfig.xml\",\"schema.xml\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a258fbb26824fd104ed795e5d9033d2d040049ee","date":1453508252,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/BasicFunctionalityTest#beforeTests().mjava","pathOld":"solr/src/test/org/apache/solr/BasicFunctionalityTest#beforeTests().mjava","sourceNew":"  @BeforeClass\n  public static void beforeTests() throws Exception {\n    initCore(\"solrconfig.xml\",\"schema.xml\");\n  }\n\n","sourceOld":"  @BeforeClass\n  public static void beforeTests() throws Exception {\n    initCore(\"solrconfig.xml\",\"schema.xml\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/BasicFunctionalityTest#beforeTests().mjava","pathOld":"solr/src/test/org/apache/solr/BasicFunctionalityTest#beforeTests().mjava","sourceNew":"  @BeforeClass\n  public static void beforeTests() throws Exception {\n    initCore(\"solrconfig.xml\",\"schema.xml\");\n  }\n\n","sourceOld":"  @BeforeClass\n  public static void beforeTests() throws Exception {\n    initCore(\"solrconfig.xml\",\"schema.xml\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1e210ae1e604402eb4eeff2a52e56d189cd4f2f1","date":1423508552,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/BasicFunctionalityTest#beforeTests().mjava","pathOld":"solr/core/src/test/org/apache/solr/BasicFunctionalityTest#beforeTests().mjava","sourceNew":"  @BeforeClass\n  public static void beforeTests() throws Exception {\n    initCore(\"solrconfig.xml\",\"schema.xml\");\n  }\n  // tests the performance of dynamic field creation and\n  // field property testing.\n  /*\n  public void testFieldPerf() {\n    IndexSchema schema = h.getCore().getSchema();\n    SchemaField[] fields = schema.getDynamicFieldPrototypes();\n    boolean createNew = false;\n\n    long start = System.currentTimeMillis();\n    int ret = 0;\n    for (int i=0; i<10000000; i++) {\n      for (SchemaField f : fields) {\n        if (createNew) f = new SchemaField(f, \"fakename\");\n        if (f.indexed()) ret += 1;\n        if (f.isCompressed()) ret += 2;\n        if (f.isRequired()) ret += 3;\n        if (f.multiValued()) ret += 4;\n        if (f.omitNorms()) ret += 5;\n        if (f.sortMissingFirst()) ret += 6;\n        if (f.sortMissingLast())ret += 7;\n        if (f.stored()) ret += 8;\n        if (f.storeTermOffsets()) ret += 9;\n        if (f.storeTermPositions()) ret += 10;\n        if (f.storeTermVector()) ret += 11;\n      }\n    }\n    long end = System.currentTimeMillis();\n    System.out.println(\"ret=\" + ret + \" time=\"+ (end-start));\n  }\n  ***/\n\n","sourceOld":"  @BeforeClass\n  public static void beforeTests() throws Exception {\n    initCore(\"solrconfig.xml\",\"schema.xml\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"c26f00b574427b55127e869b935845554afde1fa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","c903c3d15906a3da96b8c0c2fb704491005fdbdb"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a258fbb26824fd104ed795e5d9033d2d040049ee":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"1e210ae1e604402eb4eeff2a52e56d189cd4f2f1":["c26f00b574427b55127e869b935845554afde1fa"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["1e210ae1e604402eb4eeff2a52e56d189cd4f2f1"]},"commit2Childs":{"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["c26f00b574427b55127e869b935845554afde1fa"],"c26f00b574427b55127e869b935845554afde1fa":["1e210ae1e604402eb4eeff2a52e56d189cd4f2f1"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c903c3d15906a3da96b8c0c2fb704491005fdbdb","c26f00b574427b55127e869b935845554afde1fa","a258fbb26824fd104ed795e5d9033d2d040049ee"],"a258fbb26824fd104ed795e5d9033d2d040049ee":[],"1e210ae1e604402eb4eeff2a52e56d189cd4f2f1":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a258fbb26824fd104ed795e5d9033d2d040049ee","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}