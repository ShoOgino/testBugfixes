{"path":"src/java/org/apache/solr/core/SolrConfig#readPingQueryParams(SolrConfig).mjava","commits":[{"id":"6d6338c87060be5f66757a94945975f3bbd377a9","date":1189278234,"type":0,"author":"Ryan McKinley","isMerge":false,"pathNew":"src/java/org/apache/solr/core/SolrConfig#readPingQueryParams(SolrConfig).mjava","pathOld":"/dev/null","sourceNew":"  static private NamedList readPingQueryParams(SolrConfig config) {  \n    // TODO: check for nested tags and parse as a named list instead\n    String urlSnippet = config.get(\"admin/pingQuery\", \"\").trim();\n    \n    StringTokenizer qtokens = new StringTokenizer(urlSnippet,\"&\");\n    String tok;\n    NamedList params = new NamedList();\n    while (qtokens.hasMoreTokens()) {\n      tok = qtokens.nextToken();\n      String[] split = tok.split(\"=\", 2);\n      params.add(split[0], split[1]);\n    }\n    return params;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2e89d633f82354315faf28f43c9a5bc0b1c9a335","date":1240957428,"type":3,"author":"Chris M. Hostetter","isMerge":false,"pathNew":"src/java/org/apache/solr/core/SolrConfig#readPingQueryParams(SolrConfig).mjava","pathOld":"src/java/org/apache/solr/core/SolrConfig#readPingQueryParams(SolrConfig).mjava","sourceNew":"  static private NamedList readPingQueryParams(SolrConfig config) {  \n    String urlSnippet = config.get(\"admin/pingQuery\", \"\").trim();\n    \n    StringTokenizer qtokens = new StringTokenizer(urlSnippet,\"&\");\n    String tok;\n    NamedList params = new NamedList();\n    while (qtokens.hasMoreTokens()) {\n      tok = qtokens.nextToken();\n      String[] split = tok.split(\"=\", 2);\n      params.add(split[0], split[1]);\n    }\n    if (0 < params.size()) {\n      log.warn(\"The <pingQuery> syntax is deprecated, \" +\n               \"please use PingRequestHandler instead\");\n    }\n    return params;\n  }\n\n","sourceOld":"  static private NamedList readPingQueryParams(SolrConfig config) {  \n    // TODO: check for nested tags and parse as a named list instead\n    String urlSnippet = config.get(\"admin/pingQuery\", \"\").trim();\n    \n    StringTokenizer qtokens = new StringTokenizer(urlSnippet,\"&\");\n    String tok;\n    NamedList params = new NamedList();\n    while (qtokens.hasMoreTokens()) {\n      tok = qtokens.nextToken();\n      String[] split = tok.split(\"=\", 2);\n      params.add(split[0], split[1]);\n    }\n    return params;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ad94625fb8d088209f46650c8097196fec67f00c","date":1453508319,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/src/java/org/apache/solr/core/SolrConfig#readPingQueryParams(SolrConfig).mjava","pathOld":"src/java/org/apache/solr/core/SolrConfig#readPingQueryParams(SolrConfig).mjava","sourceNew":"  static private NamedList readPingQueryParams(SolrConfig config) {  \n    String urlSnippet = config.get(\"admin/pingQuery\", \"\").trim();\n    \n    StringTokenizer qtokens = new StringTokenizer(urlSnippet,\"&\");\n    String tok;\n    NamedList params = new NamedList();\n    while (qtokens.hasMoreTokens()) {\n      tok = qtokens.nextToken();\n      String[] split = tok.split(\"=\", 2);\n      params.add(split[0], split[1]);\n    }\n    if (0 < params.size()) {\n      log.warn(\"The <pingQuery> syntax is deprecated, \" +\n               \"please use PingRequestHandler instead\");\n    }\n    return params;\n  }\n\n","sourceOld":"  static private NamedList readPingQueryParams(SolrConfig config) {  \n    String urlSnippet = config.get(\"admin/pingQuery\", \"\").trim();\n    \n    StringTokenizer qtokens = new StringTokenizer(urlSnippet,\"&\");\n    String tok;\n    NamedList params = new NamedList();\n    while (qtokens.hasMoreTokens()) {\n      tok = qtokens.nextToken();\n      String[] split = tok.split(\"=\", 2);\n      params.add(split[0], split[1]);\n    }\n    if (0 < params.size()) {\n      log.warn(\"The <pingQuery> syntax is deprecated, \" +\n               \"please use PingRequestHandler instead\");\n    }\n    return params;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"6d6338c87060be5f66757a94945975f3bbd377a9":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"2e89d633f82354315faf28f43c9a5bc0b1c9a335":["6d6338c87060be5f66757a94945975f3bbd377a9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"ad94625fb8d088209f46650c8097196fec67f00c":["2e89d633f82354315faf28f43c9a5bc0b1c9a335"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"6d6338c87060be5f66757a94945975f3bbd377a9":["2e89d633f82354315faf28f43c9a5bc0b1c9a335"],"2e89d633f82354315faf28f43c9a5bc0b1c9a335":["ad94625fb8d088209f46650c8097196fec67f00c"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["6d6338c87060be5f66757a94945975f3bbd377a9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"ad94625fb8d088209f46650c8097196fec67f00c":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["ad94625fb8d088209f46650c8097196fec67f00c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b","a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}