{"path":"solr/core/src/java/org/apache/solr/core/PluginBag#alias(String,String).mjava","commits":[{"id":"69cad0546debf9ce9d44e309ecfa26760fecd5d8","date":1425846082,"type":1,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/PluginBag#alias(String,String).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/PluginRegistry#alias(String,String).mjava","sourceNew":"  boolean alias(String src, String target) {\n    PluginHolder<T> a = registry.get(src);\n    if (a == null) return false;\n    PluginHolder<T> b = registry.get(target);\n    if (b != null) return false;\n    registry.put(target, a);\n    return true;\n  }\n\n","sourceOld":"  boolean alias(String src, String target) {\n    PluginHolder<T> a = registry.get(src);\n    if (a == null) return false;\n    PluginHolder<T> b = registry.get(target);\n    if (b != null) return false;\n    registry.put(target, a);\n    return true;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"57a7a3882a7c8834862c3757917f6b4df37425df","date":1426781496,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/PluginBag#alias(String,String).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/PluginBag#alias(String,String).mjava","sourceNew":"  boolean alias(String src, String target) {\n    if (src == null) return false;\n    PluginHolder<T> a = registry.get(src);\n    if (a == null) return false;\n    PluginHolder<T> b = registry.get(target);\n    if (b != null) return false;\n    registry.put(target, a);\n    return true;\n  }\n\n","sourceOld":"  boolean alias(String src, String target) {\n    PluginHolder<T> a = registry.get(src);\n    if (a == null) return false;\n    PluginHolder<T> b = registry.get(target);\n    if (b != null) return false;\n    registry.put(target, a);\n    return true;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","date":1427779360,"type":0,"author":"Ryan Ernst","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/core/PluginBag#alias(String,String).mjava","pathOld":"/dev/null","sourceNew":"  boolean alias(String src, String target) {\n    if (src == null) return false;\n    PluginHolder<T> a = registry.get(src);\n    if (a == null) return false;\n    PluginHolder<T> b = registry.get(target);\n    if (b != null) return false;\n    registry.put(target, a);\n    return true;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"34bf23a16b810a773a95a9ed1d14d68a71a22a2e","date":1446459154,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/PluginBag#alias(String,String).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/PluginBag#alias(String,String).mjava","sourceNew":"  /** make a plugin available in an alternate name. This is an internal API and not for public use\n   * @param src key in which the plugin is already registered\n   * @param target the new key in which the plugin should be aliased to. If target exists already, the alias fails\n   * @return flag if the operation is successful or not\n   */\n  boolean alias(String src, String target) {\n    if (src == null) return false;\n    PluginHolder<T> a = registry.get(src);\n    if (a == null) return false;\n    PluginHolder<T> b = registry.get(target);\n    if (b != null) return false;\n    registry.put(target, a);\n    return true;\n  }\n\n","sourceOld":"  boolean alias(String src, String target) {\n    if (src == null) return false;\n    PluginHolder<T> a = registry.get(src);\n    if (a == null) return false;\n    PluginHolder<T> b = registry.get(target);\n    if (b != null) return false;\n    registry.put(target, a);\n    return true;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"954ae83b7dfacaa33d48ea056448ae11f7745a93","date":1571867711,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/PluginBag#alias(String,String).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/PluginBag#alias(String,String).mjava","sourceNew":"  /**\n   * make a plugin available in an alternate name. This is an internal API and not for public use\n   *\n   * @param src    key in which the plugin is already registered\n   * @param target the new key in which the plugin should be aliased to. If target exists already, the alias fails\n   * @return flag if the operation is successful or not\n   */\n  boolean alias(String src, String target) {\n    if (src == null) return false;\n    PluginHolder<T> a = registry.get(src);\n    if (a == null) return false;\n    PluginHolder<T> b = registry.get(target);\n    if (b != null) return false;\n    registry.put(target, a);\n    return true;\n  }\n\n","sourceOld":"  /** make a plugin available in an alternate name. This is an internal API and not for public use\n   * @param src key in which the plugin is already registered\n   * @param target the new key in which the plugin should be aliased to. If target exists already, the alias fails\n   * @return flag if the operation is successful or not\n   */\n  boolean alias(String src, String target) {\n    if (src == null) return false;\n    PluginHolder<T> a = registry.get(src);\n    if (a == null) return false;\n    PluginHolder<T> b = registry.get(target);\n    if (b != null) return false;\n    registry.put(target, a);\n    return true;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"57a7a3882a7c8834862c3757917f6b4df37425df":["69cad0546debf9ce9d44e309ecfa26760fecd5d8"],"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","57a7a3882a7c8834862c3757917f6b4df37425df"],"954ae83b7dfacaa33d48ea056448ae11f7745a93":["34bf23a16b810a773a95a9ed1d14d68a71a22a2e"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"34bf23a16b810a773a95a9ed1d14d68a71a22a2e":["57a7a3882a7c8834862c3757917f6b4df37425df"],"69cad0546debf9ce9d44e309ecfa26760fecd5d8":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["954ae83b7dfacaa33d48ea056448ae11f7745a93"]},"commit2Childs":{"57a7a3882a7c8834862c3757917f6b4df37425df":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","34bf23a16b810a773a95a9ed1d14d68a71a22a2e"],"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":[],"954ae83b7dfacaa33d48ea056448ae11f7745a93":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","69cad0546debf9ce9d44e309ecfa26760fecd5d8"],"34bf23a16b810a773a95a9ed1d14d68a71a22a2e":["954ae83b7dfacaa33d48ea056448ae11f7745a93"],"69cad0546debf9ce9d44e309ecfa26760fecd5d8":["57a7a3882a7c8834862c3757917f6b4df37425df"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}