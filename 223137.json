{"path":"contrib/analyzers/common/src/test/org/apache/lucene/analysis/ngram/NGramTokenFilterTest#testReset().mjava","commits":[{"id":"18359c8e12d55f66c27cfe7babe86283f06a6aa5","date":1250426225,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"contrib/analyzers/common/src/test/org/apache/lucene/analysis/ngram/NGramTokenFilterTest#testReset().mjava","pathOld":"/dev/null","sourceNew":"    public void testReset() throws Exception {\n      WhitespaceTokenizer tokenizer = new WhitespaceTokenizer(new StringReader(\"abcde\"));\n      NGramTokenFilter filter = new NGramTokenFilter(tokenizer, 1, 3);\n      TermAttribute termAtt = (TermAttribute) filter.addAttribute(TermAttribute.class);\n      assertTrue(filter.incrementToken());\n      assertEquals(\"(a,0,1)\", termAtt.toString());\n      assertTrue(filter.incrementToken());\n      assertEquals(\"(b,1,2)\", termAtt.toString());\n      tokenizer.reset(new StringReader(\"abcde\"));\n      filter.reset();\n      assertTrue(filter.incrementToken());\n      assertEquals(\"(a,0,1)\", termAtt.toString());\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9fa6d7a7e7208b52f1b0c4c87005d34ab0dd37dc","date":1251117853,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"contrib/analyzers/common/src/test/org/apache/lucene/analysis/ngram/NGramTokenFilterTest#testReset().mjava","pathOld":"contrib/analyzers/common/src/test/org/apache/lucene/analysis/ngram/NGramTokenFilterTest#testReset().mjava","sourceNew":"    public void testReset() throws Exception {\n      WhitespaceTokenizer tokenizer = new WhitespaceTokenizer(new StringReader(\"abcde\"));\n      NGramTokenFilter filter = new NGramTokenFilter(tokenizer, 1, 1);\n      assertTokenStreamContents(filter, new String[]{\"a\",\"b\",\"c\",\"d\",\"e\"}, new int[]{0,1,2,3,4}, new int[]{1,2,3,4,5});\n      tokenizer.reset(new StringReader(\"abcde\"));\n      assertTokenStreamContents(filter, new String[]{\"a\",\"b\",\"c\",\"d\",\"e\"}, new int[]{0,1,2,3,4}, new int[]{1,2,3,4,5});\n    }\n\n","sourceOld":"    public void testReset() throws Exception {\n      WhitespaceTokenizer tokenizer = new WhitespaceTokenizer(new StringReader(\"abcde\"));\n      NGramTokenFilter filter = new NGramTokenFilter(tokenizer, 1, 3);\n      TermAttribute termAtt = (TermAttribute) filter.addAttribute(TermAttribute.class);\n      assertTrue(filter.incrementToken());\n      assertEquals(\"(a,0,1)\", termAtt.toString());\n      assertTrue(filter.incrementToken());\n      assertEquals(\"(b,1,2)\", termAtt.toString());\n      tokenizer.reset(new StringReader(\"abcde\"));\n      filter.reset();\n      assertTrue(filter.incrementToken());\n      assertEquals(\"(a,0,1)\", termAtt.toString());\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"85722042902595d9b0fbf38b7b57b139bdc12e4b","date":1264953677,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"contrib/analyzers/common/src/test/org/apache/lucene/analysis/ngram/NGramTokenFilterTest#testReset().mjava","pathOld":"contrib/analyzers/common/src/test/org/apache/lucene/analysis/ngram/NGramTokenFilterTest#testReset().mjava","sourceNew":"    public void testReset() throws Exception {\n      WhitespaceTokenizer tokenizer = new WhitespaceTokenizer(Version.LUCENE_CURRENT, new StringReader(\"abcde\"));\n      NGramTokenFilter filter = new NGramTokenFilter(tokenizer, 1, 1);\n      assertTokenStreamContents(filter, new String[]{\"a\",\"b\",\"c\",\"d\",\"e\"}, new int[]{0,1,2,3,4}, new int[]{1,2,3,4,5});\n      tokenizer.reset(new StringReader(\"abcde\"));\n      assertTokenStreamContents(filter, new String[]{\"a\",\"b\",\"c\",\"d\",\"e\"}, new int[]{0,1,2,3,4}, new int[]{1,2,3,4,5});\n    }\n\n","sourceOld":"    public void testReset() throws Exception {\n      WhitespaceTokenizer tokenizer = new WhitespaceTokenizer(new StringReader(\"abcde\"));\n      NGramTokenFilter filter = new NGramTokenFilter(tokenizer, 1, 1);\n      assertTokenStreamContents(filter, new String[]{\"a\",\"b\",\"c\",\"d\",\"e\"}, new int[]{0,1,2,3,4}, new int[]{1,2,3,4,5});\n      tokenizer.reset(new StringReader(\"abcde\"));\n      assertTokenStreamContents(filter, new String[]{\"a\",\"b\",\"c\",\"d\",\"e\"}, new int[]{0,1,2,3,4}, new int[]{1,2,3,4,5});\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a9ac13b5f0ce5ef1b2ce168367d993a79594b23a","date":1267298041,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"contrib/analyzers/common/src/test/org/apache/lucene/analysis/ngram/NGramTokenFilterTest#testReset().mjava","pathOld":"contrib/analyzers/common/src/test/org/apache/lucene/analysis/ngram/NGramTokenFilterTest#testReset().mjava","sourceNew":"    public void testReset() throws Exception {\n      WhitespaceTokenizer tokenizer = new WhitespaceTokenizer(TEST_VERSION_CURRENT, new StringReader(\"abcde\"));\n      NGramTokenFilter filter = new NGramTokenFilter(tokenizer, 1, 1);\n      assertTokenStreamContents(filter, new String[]{\"a\",\"b\",\"c\",\"d\",\"e\"}, new int[]{0,1,2,3,4}, new int[]{1,2,3,4,5});\n      tokenizer.reset(new StringReader(\"abcde\"));\n      assertTokenStreamContents(filter, new String[]{\"a\",\"b\",\"c\",\"d\",\"e\"}, new int[]{0,1,2,3,4}, new int[]{1,2,3,4,5});\n    }\n\n","sourceOld":"    public void testReset() throws Exception {\n      WhitespaceTokenizer tokenizer = new WhitespaceTokenizer(Version.LUCENE_CURRENT, new StringReader(\"abcde\"));\n      NGramTokenFilter filter = new NGramTokenFilter(tokenizer, 1, 1);\n      assertTokenStreamContents(filter, new String[]{\"a\",\"b\",\"c\",\"d\",\"e\"}, new int[]{0,1,2,3,4}, new int[]{1,2,3,4,5});\n      tokenizer.reset(new StringReader(\"abcde\"));\n      assertTokenStreamContents(filter, new String[]{\"a\",\"b\",\"c\",\"d\",\"e\"}, new int[]{0,1,2,3,4}, new int[]{1,2,3,4,5});\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/contrib/analyzers/common/src/test/org/apache/lucene/analysis/ngram/NGramTokenFilterTest#testReset().mjava","pathOld":"contrib/analyzers/common/src/test/org/apache/lucene/analysis/ngram/NGramTokenFilterTest#testReset().mjava","sourceNew":"    public void testReset() throws Exception {\n      WhitespaceTokenizer tokenizer = new WhitespaceTokenizer(TEST_VERSION_CURRENT, new StringReader(\"abcde\"));\n      NGramTokenFilter filter = new NGramTokenFilter(tokenizer, 1, 1);\n      assertTokenStreamContents(filter, new String[]{\"a\",\"b\",\"c\",\"d\",\"e\"}, new int[]{0,1,2,3,4}, new int[]{1,2,3,4,5});\n      tokenizer.reset(new StringReader(\"abcde\"));\n      assertTokenStreamContents(filter, new String[]{\"a\",\"b\",\"c\",\"d\",\"e\"}, new int[]{0,1,2,3,4}, new int[]{1,2,3,4,5});\n    }\n\n","sourceOld":"    public void testReset() throws Exception {\n      WhitespaceTokenizer tokenizer = new WhitespaceTokenizer(TEST_VERSION_CURRENT, new StringReader(\"abcde\"));\n      NGramTokenFilter filter = new NGramTokenFilter(tokenizer, 1, 1);\n      assertTokenStreamContents(filter, new String[]{\"a\",\"b\",\"c\",\"d\",\"e\"}, new int[]{0,1,2,3,4}, new int[]{1,2,3,4,5});\n      tokenizer.reset(new StringReader(\"abcde\"));\n      assertTokenStreamContents(filter, new String[]{\"a\",\"b\",\"c\",\"d\",\"e\"}, new int[]{0,1,2,3,4}, new int[]{1,2,3,4,5});\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"18359c8e12d55f66c27cfe7babe86283f06a6aa5":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a9ac13b5f0ce5ef1b2ce168367d993a79594b23a":["85722042902595d9b0fbf38b7b57b139bdc12e4b"],"9fa6d7a7e7208b52f1b0c4c87005d34ab0dd37dc":["18359c8e12d55f66c27cfe7babe86283f06a6aa5"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a9ac13b5f0ce5ef1b2ce168367d993a79594b23a"],"85722042902595d9b0fbf38b7b57b139bdc12e4b":["9fa6d7a7e7208b52f1b0c4c87005d34ab0dd37dc"]},"commit2Childs":{"18359c8e12d55f66c27cfe7babe86283f06a6aa5":["9fa6d7a7e7208b52f1b0c4c87005d34ab0dd37dc"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["18359c8e12d55f66c27cfe7babe86283f06a6aa5"],"a9ac13b5f0ce5ef1b2ce168367d993a79594b23a":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9fa6d7a7e7208b52f1b0c4c87005d34ab0dd37dc":["85722042902595d9b0fbf38b7b57b139bdc12e4b"],"85722042902595d9b0fbf38b7b57b139bdc12e4b":["a9ac13b5f0ce5ef1b2ce168367d993a79594b23a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}