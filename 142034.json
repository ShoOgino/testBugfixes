{"path":"lucene/src/java/org/apache/lucene/index/DocConsumerPerThread#processDocument().mjava","commits":[{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/DocConsumerPerThread#processDocument().mjava","pathOld":"src/java/org/apache/lucene/index/DocConsumerPerThread#processDocument().mjava","sourceNew":"  /** Process the document. If there is\n   *  something for this document to be done in docID order,\n   *  you should encapsulate that as a\n   *  DocumentsWriter.DocWriter and return it.\n   *  DocumentsWriter then calls finish() on this object\n   *  when it's its turn. */\n  abstract DocumentsWriter.DocWriter processDocument() throws IOException;\n\n","sourceOld":"  /** Process the document. If there is\n   *  something for this document to be done in docID order,\n   *  you should encapsulate that as a\n   *  DocumentsWriter.DocWriter and return it.\n   *  DocumentsWriter then calls finish() on this object\n   *  when it's its turn. */\n  abstract DocumentsWriter.DocWriter processDocument() throws IOException;\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6c18273ea5b3974d2f30117f46f1ae416c28f727","date":1279708040,"type":4,"author":"Michael Busch","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/src/java/org/apache/lucene/index/DocConsumerPerThread#processDocument().mjava","sourceNew":null,"sourceOld":"  /** Process the document. If there is\n   *  something for this document to be done in docID order,\n   *  you should encapsulate that as a\n   *  DocumentsWriter.DocWriter and return it.\n   *  DocumentsWriter then calls finish() on this object\n   *  when it's its turn. */\n  abstract DocumentsWriter.DocWriter processDocument() throws IOException;\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b0c7a8f7304b75b1528814c5820fa23a96816c27","date":1298314239,"type":5,"author":"Michael Busch","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/DocConsumerPerThread#processDocument(FieldInfos).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/DocConsumerPerThread#processDocument().mjava","sourceNew":"  /** Process the document. If there is\n   *  something for this document to be done in docID order,\n   *  you should encapsulate that as a\n   *  DocumentsWriter.DocWriter and return it.\n   *  DocumentsWriter then calls finish() on this object\n   *  when it's its turn. */\n  abstract DocumentsWriter.DocWriter processDocument(FieldInfos fieldInfos) throws IOException;\n\n","sourceOld":"  /** Process the document. If there is\n   *  something for this document to be done in docID order,\n   *  you should encapsulate that as a\n   *  DocumentsWriter.DocWriter and return it.\n   *  DocumentsWriter then calls finish() on this object\n   *  when it's its turn. */\n  abstract DocumentsWriter.DocWriter processDocument() throws IOException;\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"14ec33385f6fbb6ce172882d14605790418a5d31","date":1298910796,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/DocConsumerPerThread#processDocument().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/DocConsumerPerThread#processDocument(FieldInfos).mjava","sourceNew":"  /** Process the document. If there is\n   *  something for this document to be done in docID order,\n   *  you should encapsulate that as a\n   *  DocumentsWriter.DocWriter and return it.\n   *  DocumentsWriter then calls finish() on this object\n   *  when it's its turn. */\n  abstract DocumentsWriter.DocWriter processDocument() throws IOException;\n\n","sourceOld":"  /** Process the document. If there is\n   *  something for this document to be done in docID order,\n   *  you should encapsulate that as a\n   *  DocumentsWriter.DocWriter and return it.\n   *  DocumentsWriter then calls finish() on this object\n   *  when it's its turn. */\n  abstract DocumentsWriter.DocWriter processDocument(FieldInfos fieldInfos) throws IOException;\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1224a4027481acce15495b03bce9b48b93b42722","date":1300792329,"type":5,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/DocConsumerPerThread#processDocument(FieldInfos).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/DocConsumerPerThread#processDocument().mjava","sourceNew":"  /** Process the document. If there is\n   *  something for this document to be done in docID order,\n   *  you should encapsulate that as a\n   *  DocumentsWriter.DocWriter and return it.\n   *  DocumentsWriter then calls finish() on this object\n   *  when it's its turn. */\n  abstract DocumentsWriter.DocWriter processDocument(FieldInfos fieldInfos) throws IOException;\n\n","sourceOld":"  /** Process the document. If there is\n   *  something for this document to be done in docID order,\n   *  you should encapsulate that as a\n   *  DocumentsWriter.DocWriter and return it.\n   *  DocumentsWriter then calls finish() on this object\n   *  when it's its turn. */\n  abstract DocumentsWriter.DocWriter processDocument() throws IOException;\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d619839baa8ce5503e496b94a9e42ad6f079293f","date":1301309428,"type":4,"author":"Simon Willnauer","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/src/java/org/apache/lucene/index/DocConsumerPerThread#processDocument().mjava","sourceNew":null,"sourceOld":"  /** Process the document. If there is\n   *  something for this document to be done in docID order,\n   *  you should encapsulate that as a\n   *  DocumentsWriter.DocWriter and return it.\n   *  DocumentsWriter then calls finish() on this object\n   *  when it's its turn. */\n  abstract DocumentsWriter.DocWriter processDocument() throws IOException;\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"14ec33385f6fbb6ce172882d14605790418a5d31":["b0c7a8f7304b75b1528814c5820fa23a96816c27"],"6c18273ea5b3974d2f30117f46f1ae416c28f727":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"d619839baa8ce5503e496b94a9e42ad6f079293f":["9454a6510e2db155fb01faa5c049b06ece95fab9","1224a4027481acce15495b03bce9b48b93b42722"],"b0c7a8f7304b75b1528814c5820fa23a96816c27":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["1224a4027481acce15495b03bce9b48b93b42722"],"1224a4027481acce15495b03bce9b48b93b42722":["14ec33385f6fbb6ce172882d14605790418a5d31"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"14ec33385f6fbb6ce172882d14605790418a5d31":["1224a4027481acce15495b03bce9b48b93b42722"],"6c18273ea5b3974d2f30117f46f1ae416c28f727":[],"d619839baa8ce5503e496b94a9e42ad6f079293f":[],"b0c7a8f7304b75b1528814c5820fa23a96816c27":["14ec33385f6fbb6ce172882d14605790418a5d31"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["6c18273ea5b3974d2f30117f46f1ae416c28f727","d619839baa8ce5503e496b94a9e42ad6f079293f","b0c7a8f7304b75b1528814c5820fa23a96816c27"],"1224a4027481acce15495b03bce9b48b93b42722":["d619839baa8ce5503e496b94a9e42ad6f079293f","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["6c18273ea5b3974d2f30117f46f1ae416c28f727","d619839baa8ce5503e496b94a9e42ad6f079293f","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}