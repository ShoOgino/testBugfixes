{"path":"solr/contrib/extraction/src/test/org/apache/solr/handler/extraction/TestExtractionDateUtil#testISO8601().mjava","commits":[{"id":"7d60e61c65a1b9de0ec7baf2c94de9f228a9ba69","date":1459364429,"type":0,"author":"David Smiley","isMerge":false,"pathNew":"solr/contrib/extraction/src/test/org/apache/solr/handler/extraction/TestExtractionDateUtil#testISO8601().mjava","pathOld":"/dev/null","sourceNew":"  public void testISO8601() throws Exception {\n    // dates with atypical years\n    assertParseFormatEquals(\"0001-01-01T01:01:01Z\", null);\n    assertParseFormatEquals(\"+12021-12-01T03:03:03Z\", null);\n\n    assertParseFormatEquals(\"0000-04-04T04:04:04Z\", null); // note: 0 AD is also known as 1 BC\n\n    // dates with negative years (BC)\n    assertParseFormatEquals(\"-0005-05-05T05:05:05Z\", null);\n    assertParseFormatEquals(\"-2021-12-01T04:04:04Z\", null);\n    assertParseFormatEquals(\"-12021-12-01T02:02:02Z\", null);\n\n    // dates that only parse thanks to lenient mode of DateTimeFormatter\n    assertParseFormatEquals(\"10995-12-31T23:59:59.990Z\", \"+10995-12-31T23:59:59.990Z\"); // missing '+' 5 digit year\n    assertParseFormatEquals(\"995-1-2T3:4:5Z\", \"0995-01-02T03:04:05Z\"); // wasn't 0 padded\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0982ea5c2b7f50890065ccf2b59068efc40eaafe","date":1538167811,"type":4,"author":"David Smiley","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/contrib/extraction/src/test/org/apache/solr/handler/extraction/TestExtractionDateUtil#testISO8601().mjava","sourceNew":null,"sourceOld":"  public void testISO8601() throws Exception {\n    // dates with atypical years\n    assertParseFormatEquals(\"0001-01-01T01:01:01Z\", null);\n    assertParseFormatEquals(\"+12021-12-01T03:03:03Z\", null);\n\n    assertParseFormatEquals(\"0000-04-04T04:04:04Z\", null); // note: 0 AD is also known as 1 BC\n\n    // dates with negative years (BC)\n    assertParseFormatEquals(\"-0005-05-05T05:05:05Z\", null);\n    assertParseFormatEquals(\"-2021-12-01T04:04:04Z\", null);\n    assertParseFormatEquals(\"-12021-12-01T02:02:02Z\", null);\n\n    // dates that only parse thanks to lenient mode of DateTimeFormatter\n    assertParseFormatEquals(\"10995-12-31T23:59:59.990Z\", \"+10995-12-31T23:59:59.990Z\"); // missing '+' 5 digit year\n    assertParseFormatEquals(\"995-1-2T3:4:5Z\", \"0995-01-02T03:04:05Z\"); // wasn't 0 padded\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"7d60e61c65a1b9de0ec7baf2c94de9f228a9ba69":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"0982ea5c2b7f50890065ccf2b59068efc40eaafe":["7d60e61c65a1b9de0ec7baf2c94de9f228a9ba69"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["0982ea5c2b7f50890065ccf2b59068efc40eaafe"]},"commit2Childs":{"7d60e61c65a1b9de0ec7baf2c94de9f228a9ba69":["0982ea5c2b7f50890065ccf2b59068efc40eaafe"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["7d60e61c65a1b9de0ec7baf2c94de9f228a9ba69"],"0982ea5c2b7f50890065ccf2b59068efc40eaafe":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}