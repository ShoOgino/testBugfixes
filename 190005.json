{"path":"solr/core/src/test/org/apache/solr/schema/AbstractCurrencyFieldTest#testMockExchangeRateProvider().mjava","commits":[{"id":"4ce5a0276b8637186ae6adfa516e332132d197ad","date":1362165863,"type":1,"author":"Chris M. Hostetter","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/schema/AbstractCurrencyFieldTest#testMockExchangeRateProvider().mjava","pathOld":"solr/core/src/test/org/apache/solr/schema/CurrencyFieldTest#testMockExchangeRateProvider().mjava","sourceNew":"  @Test\n  public void testMockExchangeRateProvider() throws Exception {\n    SolrCore core = h.getCore();\n    IndexSchema schema = core.getSchema();\n    SchemaField amount = schema.getField(\"mock_amount\");\n\n    // A few tests on the provider directly\n    ExchangeRateProvider p = ((CurrencyField)amount.getType()).getProvider();\n    Set<String> availableCurrencies = p.listAvailableCurrencies();\n    assert(availableCurrencies.size() == 3);\n    assert(p.reload() == true);\n    assert(p.getExchangeRate(\"USD\", \"EUR\") == 0.8);\n  }\n\n","sourceOld":"  @Test\n  public void testMockExchangeRateProvider() throws Exception {\n    SolrCore core = h.getCore();\n    IndexSchema schema = core.getSchema();\n    SchemaField amount = schema.getField(\"mock_amount\");\n\n    // A few tests on the provider directly\n    ExchangeRateProvider p = ((CurrencyField)amount.getType()).getProvider();\n    Set<String> availableCurrencies = p.listAvailableCurrencies();\n    assert(availableCurrencies.size() == 3);\n    assert(p.reload() == true);\n    assert(p.getExchangeRate(\"USD\", \"EUR\") == 0.8);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"08970e5b8411182a29412c177eff67ec1110095b","date":1366640815,"type":3,"author":"Steven Rowe","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/schema/AbstractCurrencyFieldTest#testMockExchangeRateProvider().mjava","pathOld":"solr/core/src/test/org/apache/solr/schema/AbstractCurrencyFieldTest#testMockExchangeRateProvider().mjava","sourceNew":"  @Test\n  public void testMockExchangeRateProvider() throws Exception {\n    SolrCore core = h.getCore();\n    IndexSchema schema = core.getLatestSchema();\n    SchemaField amount = schema.getField(\"mock_amount\");\n\n    // A few tests on the provider directly\n    ExchangeRateProvider p = ((CurrencyField)amount.getType()).getProvider();\n    Set<String> availableCurrencies = p.listAvailableCurrencies();\n    assert(availableCurrencies.size() == 3);\n    assert(p.reload() == true);\n    assert(p.getExchangeRate(\"USD\", \"EUR\") == 0.8);\n  }\n\n","sourceOld":"  @Test\n  public void testMockExchangeRateProvider() throws Exception {\n    SolrCore core = h.getCore();\n    IndexSchema schema = core.getSchema();\n    SchemaField amount = schema.getField(\"mock_amount\");\n\n    // A few tests on the provider directly\n    ExchangeRateProvider p = ((CurrencyField)amount.getType()).getProvider();\n    Set<String> availableCurrencies = p.listAvailableCurrencies();\n    assert(availableCurrencies.size() == 3);\n    assert(p.reload() == true);\n    assert(p.getExchangeRate(\"USD\", \"EUR\") == 0.8);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f107636c2cc82350a2607d774c092da5b73152e5","date":1498227268,"type":4,"author":"Steve Rowe","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/core/src/test/org/apache/solr/schema/AbstractCurrencyFieldTest#testMockExchangeRateProvider().mjava","sourceNew":null,"sourceOld":"  @Test\n  public void testMockExchangeRateProvider() throws Exception {\n    SolrCore core = h.getCore();\n    IndexSchema schema = core.getLatestSchema();\n    SchemaField amount = schema.getField(\"mock_amount\");\n\n    // A few tests on the provider directly\n    ExchangeRateProvider p = ((CurrencyField)amount.getType()).getProvider();\n    Set<String> availableCurrencies = p.listAvailableCurrencies();\n    assert(availableCurrencies.size() == 3);\n    assert(p.reload() == true);\n    assert(p.getExchangeRate(\"USD\", \"EUR\") == 0.8);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b7dfa64bc2074fb87d0ca70095a644c1ead107e1","date":1498356339,"type":4,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"/dev/null","pathOld":"solr/core/src/test/org/apache/solr/schema/AbstractCurrencyFieldTest#testMockExchangeRateProvider().mjava","sourceNew":null,"sourceOld":"  @Test\n  public void testMockExchangeRateProvider() throws Exception {\n    SolrCore core = h.getCore();\n    IndexSchema schema = core.getLatestSchema();\n    SchemaField amount = schema.getField(\"mock_amount\");\n\n    // A few tests on the provider directly\n    ExchangeRateProvider p = ((CurrencyField)amount.getType()).getProvider();\n    Set<String> availableCurrencies = p.listAvailableCurrencies();\n    assert(availableCurrencies.size() == 3);\n    assert(p.reload() == true);\n    assert(p.getExchangeRate(\"USD\", \"EUR\") == 0.8);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"28288370235ed02234a64753cdbf0c6ec096304a","date":1498726817,"type":4,"author":"Karl Wright","isMerge":true,"pathNew":"/dev/null","pathOld":"solr/core/src/test/org/apache/solr/schema/AbstractCurrencyFieldTest#testMockExchangeRateProvider().mjava","sourceNew":null,"sourceOld":"  @Test\n  public void testMockExchangeRateProvider() throws Exception {\n    SolrCore core = h.getCore();\n    IndexSchema schema = core.getLatestSchema();\n    SchemaField amount = schema.getField(\"mock_amount\");\n\n    // A few tests on the provider directly\n    ExchangeRateProvider p = ((CurrencyField)amount.getType()).getProvider();\n    Set<String> availableCurrencies = p.listAvailableCurrencies();\n    assert(availableCurrencies.size() == 3);\n    assert(p.reload() == true);\n    assert(p.getExchangeRate(\"USD\", \"EUR\") == 0.8);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"4ce5a0276b8637186ae6adfa516e332132d197ad":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"b7dfa64bc2074fb87d0ca70095a644c1ead107e1":["08970e5b8411182a29412c177eff67ec1110095b","f107636c2cc82350a2607d774c092da5b73152e5"],"28288370235ed02234a64753cdbf0c6ec096304a":["08970e5b8411182a29412c177eff67ec1110095b","f107636c2cc82350a2607d774c092da5b73152e5"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["28288370235ed02234a64753cdbf0c6ec096304a"],"08970e5b8411182a29412c177eff67ec1110095b":["4ce5a0276b8637186ae6adfa516e332132d197ad"],"f107636c2cc82350a2607d774c092da5b73152e5":["08970e5b8411182a29412c177eff67ec1110095b"]},"commit2Childs":{"4ce5a0276b8637186ae6adfa516e332132d197ad":["08970e5b8411182a29412c177eff67ec1110095b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["4ce5a0276b8637186ae6adfa516e332132d197ad"],"b7dfa64bc2074fb87d0ca70095a644c1ead107e1":[],"28288370235ed02234a64753cdbf0c6ec096304a":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"08970e5b8411182a29412c177eff67ec1110095b":["b7dfa64bc2074fb87d0ca70095a644c1ead107e1","28288370235ed02234a64753cdbf0c6ec096304a","f107636c2cc82350a2607d774c092da5b73152e5"],"f107636c2cc82350a2607d774c092da5b73152e5":["b7dfa64bc2074fb87d0ca70095a644c1ead107e1","28288370235ed02234a64753cdbf0c6ec096304a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["b7dfa64bc2074fb87d0ca70095a644c1ead107e1","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}