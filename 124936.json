{"path":"lucene/core/src/test/org/apache/lucene/index/TestSnapshotDeletionPolicy#testSnapshotLastCommitTwice().mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestSnapshotDeletionPolicy#testSnapshotLastCommitTwice().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestSnapshotDeletionPolicy#testSnapshotLastCommitTwice().mjava","sourceNew":"  @Test\n  public void testSnapshotLastCommitTwice() throws Exception {\n    Directory dir = newDirectory();\n    SnapshotDeletionPolicy sdp = getDeletionPolicy();\n    IndexWriter writer = new IndexWriter(dir, getConfig(random, sdp));\n    writer.addDocument(new Document());\n    writer.commit();\n    \n    String s1 = \"s1\";\n    String s2 = \"s2\";\n    IndexCommit ic1 = sdp.snapshot(s1);\n    IndexCommit ic2 = sdp.snapshot(s2);\n    assertTrue(ic1 == ic2); // should be the same instance\n    \n    // create another commit\n    writer.addDocument(new Document());\n    writer.commit();\n    \n    // release \"s1\" should not delete \"s2\"\n    sdp.release(s1);\n    writer.deleteUnusedFiles();\n    checkSnapshotExists(dir, ic2);\n    \n    writer.close();\n    dir.close();\n  }\n\n","sourceOld":"  @Test\n  public void testSnapshotLastCommitTwice() throws Exception {\n    Directory dir = newDirectory();\n    SnapshotDeletionPolicy sdp = getDeletionPolicy();\n    IndexWriter writer = new IndexWriter(dir, getConfig(random, sdp));\n    writer.addDocument(new Document());\n    writer.commit();\n    \n    String s1 = \"s1\";\n    String s2 = \"s2\";\n    IndexCommit ic1 = sdp.snapshot(s1);\n    IndexCommit ic2 = sdp.snapshot(s2);\n    assertTrue(ic1 == ic2); // should be the same instance\n    \n    // create another commit\n    writer.addDocument(new Document());\n    writer.commit();\n    \n    // release \"s1\" should not delete \"s2\"\n    sdp.release(s1);\n    writer.deleteUnusedFiles();\n    checkSnapshotExists(dir, ic2);\n    \n    writer.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"629c38c4ae4e303d0617e05fbfe508140b32f0a3","date":1334500904,"type":3,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestSnapshotDeletionPolicy#testSnapshotLastCommitTwice().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestSnapshotDeletionPolicy#testSnapshotLastCommitTwice().mjava","sourceNew":"  @Test\n  public void testSnapshotLastCommitTwice() throws Exception {\n    Directory dir = newDirectory();\n    SnapshotDeletionPolicy sdp = getDeletionPolicy();\n    IndexWriter writer = new IndexWriter(dir, getConfig(random(), sdp));\n    writer.addDocument(new Document());\n    writer.commit();\n    \n    String s1 = \"s1\";\n    String s2 = \"s2\";\n    IndexCommit ic1 = sdp.snapshot(s1);\n    IndexCommit ic2 = sdp.snapshot(s2);\n    assertTrue(ic1 == ic2); // should be the same instance\n    \n    // create another commit\n    writer.addDocument(new Document());\n    writer.commit();\n    \n    // release \"s1\" should not delete \"s2\"\n    sdp.release(s1);\n    writer.deleteUnusedFiles();\n    checkSnapshotExists(dir, ic2);\n    \n    writer.close();\n    dir.close();\n  }\n\n","sourceOld":"  @Test\n  public void testSnapshotLastCommitTwice() throws Exception {\n    Directory dir = newDirectory();\n    SnapshotDeletionPolicy sdp = getDeletionPolicy();\n    IndexWriter writer = new IndexWriter(dir, getConfig(random, sdp));\n    writer.addDocument(new Document());\n    writer.commit();\n    \n    String s1 = \"s1\";\n    String s2 = \"s2\";\n    IndexCommit ic1 = sdp.snapshot(s1);\n    IndexCommit ic2 = sdp.snapshot(s2);\n    assertTrue(ic1 == ic2); // should be the same instance\n    \n    // create another commit\n    writer.addDocument(new Document());\n    writer.commit();\n    \n    // release \"s1\" should not delete \"s2\"\n    sdp.release(s1);\n    writer.deleteUnusedFiles();\n    checkSnapshotExists(dir, ic2);\n    \n    writer.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9eae2a56dc810a17cf807d831f720dec931a03de","date":1349262073,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestSnapshotDeletionPolicy#testSnapshotLastCommitTwice().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestSnapshotDeletionPolicy#testSnapshotLastCommitTwice().mjava","sourceNew":"  @Test\n  public void testSnapshotLastCommitTwice() throws Exception {\n    Directory dir = newDirectory();\n\n    SnapshotDeletionPolicy sdp = getDeletionPolicy();\n    IndexWriter writer = new IndexWriter(dir, getConfig(random(), sdp));\n    writer.addDocument(new Document());\n    writer.commit();\n    \n    String s1 = \"s1\";\n    String s2 = \"s2\";\n    IndexCommit ic1 = sdp.snapshot(s1);\n    IndexCommit ic2 = sdp.snapshot(s2);\n    assertTrue(ic1 == ic2); // should be the same instance\n    \n    // create another commit\n    writer.addDocument(new Document());\n    writer.commit();\n    \n    // release \"s1\" should not delete \"s2\"\n    sdp.release(s1);\n    writer.deleteUnusedFiles();\n    checkSnapshotExists(dir, ic2);\n    \n    writer.close();\n    dir.close();\n  }\n\n","sourceOld":"  @Test\n  public void testSnapshotLastCommitTwice() throws Exception {\n    Directory dir = newDirectory();\n    SnapshotDeletionPolicy sdp = getDeletionPolicy();\n    IndexWriter writer = new IndexWriter(dir, getConfig(random(), sdp));\n    writer.addDocument(new Document());\n    writer.commit();\n    \n    String s1 = \"s1\";\n    String s2 = \"s2\";\n    IndexCommit ic1 = sdp.snapshot(s1);\n    IndexCommit ic2 = sdp.snapshot(s2);\n    assertTrue(ic1 == ic2); // should be the same instance\n    \n    // create another commit\n    writer.addDocument(new Document());\n    writer.commit();\n    \n    // release \"s1\" should not delete \"s2\"\n    sdp.release(s1);\n    writer.deleteUnusedFiles();\n    checkSnapshotExists(dir, ic2);\n    \n    writer.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"70790b11e79a0366b21b2cc5b82d03b6fddcef81","date":1364594206,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestSnapshotDeletionPolicy#testSnapshotLastCommitTwice().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestSnapshotDeletionPolicy#testSnapshotLastCommitTwice().mjava","sourceNew":"  @Test\n  public void testSnapshotLastCommitTwice() throws Exception {\n    Directory dir = newDirectory();\n\n    IndexWriter writer = new IndexWriter(dir, getConfig(random(), getDeletionPolicy()));\n    SnapshotDeletionPolicy sdp = (SnapshotDeletionPolicy) writer.getConfig().getIndexDeletionPolicy();\n    writer.addDocument(new Document());\n    writer.commit();\n    \n    String s1 = \"s1\";\n    String s2 = \"s2\";\n    IndexCommit ic1 = sdp.snapshot(s1);\n    IndexCommit ic2 = sdp.snapshot(s2);\n    assertTrue(ic1 == ic2); // should be the same instance\n    \n    // create another commit\n    writer.addDocument(new Document());\n    writer.commit();\n    \n    // release \"s1\" should not delete \"s2\"\n    sdp.release(s1);\n    writer.deleteUnusedFiles();\n    checkSnapshotExists(dir, ic2);\n    \n    writer.close();\n    dir.close();\n  }\n\n","sourceOld":"  @Test\n  public void testSnapshotLastCommitTwice() throws Exception {\n    Directory dir = newDirectory();\n\n    SnapshotDeletionPolicy sdp = getDeletionPolicy();\n    IndexWriter writer = new IndexWriter(dir, getConfig(random(), sdp));\n    writer.addDocument(new Document());\n    writer.commit();\n    \n    String s1 = \"s1\";\n    String s2 = \"s2\";\n    IndexCommit ic1 = sdp.snapshot(s1);\n    IndexCommit ic2 = sdp.snapshot(s2);\n    assertTrue(ic1 == ic2); // should be the same instance\n    \n    // create another commit\n    writer.addDocument(new Document());\n    writer.commit();\n    \n    // release \"s1\" should not delete \"s2\"\n    sdp.release(s1);\n    writer.deleteUnusedFiles();\n    checkSnapshotExists(dir, ic2);\n    \n    writer.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8a207624ce3e468bca1819861084438d936e3b1c","date":1367514967,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestSnapshotDeletionPolicy#testSnapshotLastCommitTwice().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestSnapshotDeletionPolicy#testSnapshotLastCommitTwice().mjava","sourceNew":"  @Test\n  public void testSnapshotLastCommitTwice() throws Exception {\n    Directory dir = newDirectory();\n\n    IndexWriter writer = new IndexWriter(dir, getConfig(random(), getDeletionPolicy()));\n    SnapshotDeletionPolicy sdp = (SnapshotDeletionPolicy) writer.getConfig().getIndexDeletionPolicy();\n    writer.addDocument(new Document());\n    writer.commit();\n    \n    IndexCommit s1 = sdp.snapshot();\n    IndexCommit s2 = sdp.snapshot();\n    assertSame(s1, s2); // should be the same instance\n    \n    // create another commit\n    writer.addDocument(new Document());\n    writer.commit();\n    \n    // release \"s1\" should not delete \"s2\"\n    sdp.release(s1);\n    writer.deleteUnusedFiles();\n    checkSnapshotExists(dir, s2);\n    \n    writer.close();\n    dir.close();\n  }\n\n","sourceOld":"  @Test\n  public void testSnapshotLastCommitTwice() throws Exception {\n    Directory dir = newDirectory();\n\n    IndexWriter writer = new IndexWriter(dir, getConfig(random(), getDeletionPolicy()));\n    SnapshotDeletionPolicy sdp = (SnapshotDeletionPolicy) writer.getConfig().getIndexDeletionPolicy();\n    writer.addDocument(new Document());\n    writer.commit();\n    \n    String s1 = \"s1\";\n    String s2 = \"s2\";\n    IndexCommit ic1 = sdp.snapshot(s1);\n    IndexCommit ic2 = sdp.snapshot(s2);\n    assertTrue(ic1 == ic2); // should be the same instance\n    \n    // create another commit\n    writer.addDocument(new Document());\n    writer.commit();\n    \n    // release \"s1\" should not delete \"s2\"\n    sdp.release(s1);\n    writer.deleteUnusedFiles();\n    checkSnapshotExists(dir, ic2);\n    \n    writer.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ae14298f4eec6d5faee6a149f88ba57d14a6f21a","date":1396971290,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestSnapshotDeletionPolicy#testSnapshotLastCommitTwice().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestSnapshotDeletionPolicy#testSnapshotLastCommitTwice().mjava","sourceNew":"  @Test\n  public void testSnapshotLastCommitTwice() throws Exception {\n    Directory dir = newDirectory();\n\n    IndexWriter writer = new IndexWriter(dir, getConfig(random(), getDeletionPolicy()));\n    SnapshotDeletionPolicy sdp = (SnapshotDeletionPolicy) writer.getConfig().getIndexDeletionPolicy();\n    writer.addDocument(new Document());\n    writer.commit();\n    \n    IndexCommit s1 = sdp.snapshot();\n    IndexCommit s2 = sdp.snapshot();\n    assertSame(s1, s2); // should be the same instance\n    \n    // create another commit\n    writer.addDocument(new Document());\n    writer.commit();\n    \n    // release \"s1\" should not delete \"s2\"\n    sdp.release(s1);\n    writer.deleteUnusedFiles();\n    checkSnapshotExists(dir, s2);\n    \n    writer.shutdown();\n    dir.close();\n  }\n\n","sourceOld":"  @Test\n  public void testSnapshotLastCommitTwice() throws Exception {\n    Directory dir = newDirectory();\n\n    IndexWriter writer = new IndexWriter(dir, getConfig(random(), getDeletionPolicy()));\n    SnapshotDeletionPolicy sdp = (SnapshotDeletionPolicy) writer.getConfig().getIndexDeletionPolicy();\n    writer.addDocument(new Document());\n    writer.commit();\n    \n    IndexCommit s1 = sdp.snapshot();\n    IndexCommit s2 = sdp.snapshot();\n    assertSame(s1, s2); // should be the same instance\n    \n    // create another commit\n    writer.addDocument(new Document());\n    writer.commit();\n    \n    // release \"s1\" should not delete \"s2\"\n    sdp.release(s1);\n    writer.deleteUnusedFiles();\n    checkSnapshotExists(dir, s2);\n    \n    writer.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d0ef034a4f10871667ae75181537775ddcf8ade4","date":1407610475,"type":3,"author":"Ryan Ernst","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestSnapshotDeletionPolicy#testSnapshotLastCommitTwice().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestSnapshotDeletionPolicy#testSnapshotLastCommitTwice().mjava","sourceNew":"  @Test\n  public void testSnapshotLastCommitTwice() throws Exception {\n    Directory dir = newDirectory();\n\n    IndexWriter writer = new IndexWriter(dir, getConfig(random(), getDeletionPolicy()));\n    SnapshotDeletionPolicy sdp = (SnapshotDeletionPolicy) writer.getConfig().getIndexDeletionPolicy();\n    writer.addDocument(new Document());\n    writer.commit();\n    \n    IndexCommit s1 = sdp.snapshot();\n    IndexCommit s2 = sdp.snapshot();\n    assertSame(s1, s2); // should be the same instance\n    \n    // create another commit\n    writer.addDocument(new Document());\n    writer.commit();\n    \n    // release \"s1\" should not delete \"s2\"\n    sdp.release(s1);\n    writer.deleteUnusedFiles();\n    checkSnapshotExists(dir, s2);\n    \n    writer.close();\n    dir.close();\n  }\n\n","sourceOld":"  @Test\n  public void testSnapshotLastCommitTwice() throws Exception {\n    Directory dir = newDirectory();\n\n    IndexWriter writer = new IndexWriter(dir, getConfig(random(), getDeletionPolicy()));\n    SnapshotDeletionPolicy sdp = (SnapshotDeletionPolicy) writer.getConfig().getIndexDeletionPolicy();\n    writer.addDocument(new Document());\n    writer.commit();\n    \n    IndexCommit s1 = sdp.snapshot();\n    IndexCommit s2 = sdp.snapshot();\n    assertSame(s1, s2); // should be the same instance\n    \n    // create another commit\n    writer.addDocument(new Document());\n    writer.commit();\n    \n    // release \"s1\" should not delete \"s2\"\n    sdp.release(s1);\n    writer.deleteUnusedFiles();\n    checkSnapshotExists(dir, s2);\n    \n    writer.shutdown();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"70790b11e79a0366b21b2cc5b82d03b6fddcef81":["9eae2a56dc810a17cf807d831f720dec931a03de"],"9eae2a56dc810a17cf807d831f720dec931a03de":["629c38c4ae4e303d0617e05fbfe508140b32f0a3"],"8a207624ce3e468bca1819861084438d936e3b1c":["70790b11e79a0366b21b2cc5b82d03b6fddcef81"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"d0ef034a4f10871667ae75181537775ddcf8ade4":["ae14298f4eec6d5faee6a149f88ba57d14a6f21a"],"ae14298f4eec6d5faee6a149f88ba57d14a6f21a":["8a207624ce3e468bca1819861084438d936e3b1c"],"629c38c4ae4e303d0617e05fbfe508140b32f0a3":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["d0ef034a4f10871667ae75181537775ddcf8ade4"]},"commit2Childs":{"70790b11e79a0366b21b2cc5b82d03b6fddcef81":["8a207624ce3e468bca1819861084438d936e3b1c"],"9eae2a56dc810a17cf807d831f720dec931a03de":["70790b11e79a0366b21b2cc5b82d03b6fddcef81"],"8a207624ce3e468bca1819861084438d936e3b1c":["ae14298f4eec6d5faee6a149f88ba57d14a6f21a"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["629c38c4ae4e303d0617e05fbfe508140b32f0a3"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"d0ef034a4f10871667ae75181537775ddcf8ade4":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"ae14298f4eec6d5faee6a149f88ba57d14a6f21a":["d0ef034a4f10871667ae75181537775ddcf8ade4"],"629c38c4ae4e303d0617e05fbfe508140b32f0a3":["9eae2a56dc810a17cf807d831f720dec931a03de"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}