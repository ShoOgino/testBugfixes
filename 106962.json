{"path":"src/test/org/apache/lucene/store/TestLockFactory#_testStressLocks(LockFactory,File).mjava","commits":[{"id":"8f7faff7550034759516ce7f4898cd16c1816cde","date":1245778901,"type":1,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/test/org/apache/lucene/store/TestLockFactory#_testStressLocks(LockFactory,File).mjava","pathOld":"src/test/org/apache/lucene/store/TestLockFactory#_testStressLocks(LockFactory,String).mjava","sourceNew":"    public void _testStressLocks(LockFactory lockFactory, File indexDir) throws Exception {\n        FSDirectory fs1 = FSDirectory.open(indexDir, lockFactory);\n\n        // First create a 1 doc index:\n        IndexWriter w = new IndexWriter(fs1, new WhitespaceAnalyzer(), true,\n                                        IndexWriter.MaxFieldLength.LIMITED);\n        addDoc(w);\n        w.close();\n\n        WriterThread writer = new WriterThread(100, fs1);\n        SearcherThread searcher = new SearcherThread(100, fs1);\n        writer.start();\n        searcher.start();\n\n        while(writer.isAlive() || searcher.isAlive()) {\n          Thread.sleep(1000);\n        }\n\n        assertTrue(\"IndexWriter hit unexpected exceptions\", !writer.hitException);\n        assertTrue(\"IndexSearcher hit unexpected exceptions\", !searcher.hitException);\n\n        // Cleanup\n        _TestUtil.rmDir(indexDir);\n    }\n\n","sourceOld":"    public void _testStressLocks(LockFactory lockFactory, String indexDirName) throws Exception {\n        File indexDir = _TestUtil.getTempDir(indexDirName);\n        FSDirectory fs1 = FSDirectory.open(indexDir, lockFactory);\n\n        // First create a 1 doc index:\n        IndexWriter w = new IndexWriter(fs1, new WhitespaceAnalyzer(), true,\n                                        IndexWriter.MaxFieldLength.LIMITED);\n        addDoc(w);\n        w.close();\n\n        WriterThread writer = new WriterThread(100, fs1);\n        SearcherThread searcher = new SearcherThread(100, fs1);\n        writer.start();\n        searcher.start();\n\n        while(writer.isAlive() || searcher.isAlive()) {\n          Thread.sleep(1000);\n        }\n\n        assertTrue(\"IndexWriter hit unexpected exceptions\", !writer.hitException);\n        assertTrue(\"IndexSearcher hit unexpected exceptions\", !searcher.hitException);\n\n        // Cleanup\n        _TestUtil.rmDir(indexDir);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fe0932c1d340f83fb0a611e5829b3046a1cc1152","date":1264946739,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/test/org/apache/lucene/store/TestLockFactory#_testStressLocks(LockFactory,File).mjava","pathOld":"src/test/org/apache/lucene/store/TestLockFactory#_testStressLocks(LockFactory,File).mjava","sourceNew":"    public void _testStressLocks(LockFactory lockFactory, File indexDir) throws Exception {\n        FSDirectory fs1 = FSDirectory.open(indexDir, lockFactory);\n\n        // First create a 1 doc index:\n        IndexWriter w = new IndexWriter(fs1, new WhitespaceAnalyzer(Version.LUCENE_CURRENT), true,\n                                        IndexWriter.MaxFieldLength.LIMITED);\n        addDoc(w);\n        w.close();\n\n        WriterThread writer = new WriterThread(100, fs1);\n        SearcherThread searcher = new SearcherThread(100, fs1);\n        writer.start();\n        searcher.start();\n\n        while(writer.isAlive() || searcher.isAlive()) {\n          Thread.sleep(1000);\n        }\n\n        assertTrue(\"IndexWriter hit unexpected exceptions\", !writer.hitException);\n        assertTrue(\"IndexSearcher hit unexpected exceptions\", !searcher.hitException);\n\n        // Cleanup\n        _TestUtil.rmDir(indexDir);\n    }\n\n","sourceOld":"    public void _testStressLocks(LockFactory lockFactory, File indexDir) throws Exception {\n        FSDirectory fs1 = FSDirectory.open(indexDir, lockFactory);\n\n        // First create a 1 doc index:\n        IndexWriter w = new IndexWriter(fs1, new WhitespaceAnalyzer(), true,\n                                        IndexWriter.MaxFieldLength.LIMITED);\n        addDoc(w);\n        w.close();\n\n        WriterThread writer = new WriterThread(100, fs1);\n        SearcherThread searcher = new SearcherThread(100, fs1);\n        writer.start();\n        searcher.start();\n\n        while(writer.isAlive() || searcher.isAlive()) {\n          Thread.sleep(1000);\n        }\n\n        assertTrue(\"IndexWriter hit unexpected exceptions\", !writer.hitException);\n        assertTrue(\"IndexSearcher hit unexpected exceptions\", !searcher.hitException);\n\n        // Cleanup\n        _TestUtil.rmDir(indexDir);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"55f083e91bb056b57de136da1dfc3b9b6ecc4ef6","date":1265808957,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/test/org/apache/lucene/store/TestLockFactory#_testStressLocks(LockFactory,File).mjava","pathOld":"src/test/org/apache/lucene/store/TestLockFactory#_testStressLocks(LockFactory,File).mjava","sourceNew":"    public void _testStressLocks(LockFactory lockFactory, File indexDir) throws Exception {\n        FSDirectory fs1 = FSDirectory.open(indexDir, lockFactory);\n\n        // First create a 1 doc index:\n        IndexWriter w = new IndexWriter(fs1, new WhitespaceAnalyzer(TEST_VERSION_CURRENT), true,\n                                        IndexWriter.MaxFieldLength.LIMITED);\n        addDoc(w);\n        w.close();\n\n        WriterThread writer = new WriterThread(100, fs1);\n        SearcherThread searcher = new SearcherThread(100, fs1);\n        writer.start();\n        searcher.start();\n\n        while(writer.isAlive() || searcher.isAlive()) {\n          Thread.sleep(1000);\n        }\n\n        assertTrue(\"IndexWriter hit unexpected exceptions\", !writer.hitException);\n        assertTrue(\"IndexSearcher hit unexpected exceptions\", !searcher.hitException);\n\n        // Cleanup\n        _TestUtil.rmDir(indexDir);\n    }\n\n","sourceOld":"    public void _testStressLocks(LockFactory lockFactory, File indexDir) throws Exception {\n        FSDirectory fs1 = FSDirectory.open(indexDir, lockFactory);\n\n        // First create a 1 doc index:\n        IndexWriter w = new IndexWriter(fs1, new WhitespaceAnalyzer(Version.LUCENE_CURRENT), true,\n                                        IndexWriter.MaxFieldLength.LIMITED);\n        addDoc(w);\n        w.close();\n\n        WriterThread writer = new WriterThread(100, fs1);\n        SearcherThread searcher = new SearcherThread(100, fs1);\n        writer.start();\n        searcher.start();\n\n        while(writer.isAlive() || searcher.isAlive()) {\n          Thread.sleep(1000);\n        }\n\n        assertTrue(\"IndexWriter hit unexpected exceptions\", !writer.hitException);\n        assertTrue(\"IndexSearcher hit unexpected exceptions\", !searcher.hitException);\n\n        // Cleanup\n        _TestUtil.rmDir(indexDir);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1cedb00d2dd44640194401179358a2e3ba6051bf","date":1268243626,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/test/org/apache/lucene/store/TestLockFactory#_testStressLocks(LockFactory,File).mjava","pathOld":"src/test/org/apache/lucene/store/TestLockFactory#_testStressLocks(LockFactory,File).mjava","sourceNew":"    public void _testStressLocks(LockFactory lockFactory, File indexDir) throws Exception {\n        FSDirectory fs1 = FSDirectory.open(indexDir, lockFactory);\n\n        // First create a 1 doc index:\n        IndexWriter w = new IndexWriter(fs1, new IndexWriterConfig(TEST_VERSION_CURRENT).setOpenMode(OpenMode.CREATE));\n        addDoc(w);\n        w.close();\n\n        WriterThread writer = new WriterThread(100, fs1);\n        SearcherThread searcher = new SearcherThread(100, fs1);\n        writer.start();\n        searcher.start();\n\n        while(writer.isAlive() || searcher.isAlive()) {\n          Thread.sleep(1000);\n        }\n\n        assertTrue(\"IndexWriter hit unexpected exceptions\", !writer.hitException);\n        assertTrue(\"IndexSearcher hit unexpected exceptions\", !searcher.hitException);\n\n        // Cleanup\n        _TestUtil.rmDir(indexDir);\n    }\n\n","sourceOld":"    public void _testStressLocks(LockFactory lockFactory, File indexDir) throws Exception {\n        FSDirectory fs1 = FSDirectory.open(indexDir, lockFactory);\n\n        // First create a 1 doc index:\n        IndexWriter w = new IndexWriter(fs1, new WhitespaceAnalyzer(TEST_VERSION_CURRENT), true,\n                                        IndexWriter.MaxFieldLength.LIMITED);\n        addDoc(w);\n        w.close();\n\n        WriterThread writer = new WriterThread(100, fs1);\n        SearcherThread searcher = new SearcherThread(100, fs1);\n        writer.start();\n        searcher.start();\n\n        while(writer.isAlive() || searcher.isAlive()) {\n          Thread.sleep(1000);\n        }\n\n        assertTrue(\"IndexWriter hit unexpected exceptions\", !writer.hitException);\n        assertTrue(\"IndexSearcher hit unexpected exceptions\", !searcher.hitException);\n\n        // Cleanup\n        _TestUtil.rmDir(indexDir);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e52fea2c4081a1e552b98506691990be59503168","date":1268250331,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/test/org/apache/lucene/store/TestLockFactory#_testStressLocks(LockFactory,File).mjava","pathOld":"src/test/org/apache/lucene/store/TestLockFactory#_testStressLocks(LockFactory,File).mjava","sourceNew":"    public void _testStressLocks(LockFactory lockFactory, File indexDir) throws Exception {\n        FSDirectory fs1 = FSDirectory.open(indexDir, lockFactory);\n\n        // First create a 1 doc index:\n        IndexWriter w = new IndexWriter(fs1, new WhitespaceAnalyzer(TEST_VERSION_CURRENT), true,\n                                        IndexWriter.MaxFieldLength.LIMITED);\n        addDoc(w);\n        w.close();\n\n        WriterThread writer = new WriterThread(100, fs1);\n        SearcherThread searcher = new SearcherThread(100, fs1);\n        writer.start();\n        searcher.start();\n\n        while(writer.isAlive() || searcher.isAlive()) {\n          Thread.sleep(1000);\n        }\n\n        assertTrue(\"IndexWriter hit unexpected exceptions\", !writer.hitException);\n        assertTrue(\"IndexSearcher hit unexpected exceptions\", !searcher.hitException);\n\n        // Cleanup\n        _TestUtil.rmDir(indexDir);\n    }\n\n","sourceOld":"    public void _testStressLocks(LockFactory lockFactory, File indexDir) throws Exception {\n        FSDirectory fs1 = FSDirectory.open(indexDir, lockFactory);\n\n        // First create a 1 doc index:\n        IndexWriter w = new IndexWriter(fs1, new IndexWriterConfig(TEST_VERSION_CURRENT).setOpenMode(OpenMode.CREATE));\n        addDoc(w);\n        w.close();\n\n        WriterThread writer = new WriterThread(100, fs1);\n        SearcherThread searcher = new SearcherThread(100, fs1);\n        writer.start();\n        searcher.start();\n\n        while(writer.isAlive() || searcher.isAlive()) {\n          Thread.sleep(1000);\n        }\n\n        assertTrue(\"IndexWriter hit unexpected exceptions\", !writer.hitException);\n        assertTrue(\"IndexSearcher hit unexpected exceptions\", !searcher.hitException);\n\n        // Cleanup\n        _TestUtil.rmDir(indexDir);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"84080a7d7dbdaa3e6a4a1c9f1bb6221be40f47e8","date":1268494368,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/test/org/apache/lucene/store/TestLockFactory#_testStressLocks(LockFactory,File).mjava","pathOld":"src/test/org/apache/lucene/store/TestLockFactory#_testStressLocks(LockFactory,File).mjava","sourceNew":"    public void _testStressLocks(LockFactory lockFactory, File indexDir) throws Exception {\n        FSDirectory fs1 = FSDirectory.open(indexDir, lockFactory);\n\n        // First create a 1 doc index:\n        IndexWriter w = new IndexWriter(fs1, new IndexWriterConfig(TEST_VERSION_CURRENT, new WhitespaceAnalyzer(TEST_VERSION_CURRENT)).setOpenMode(OpenMode.CREATE));\n        addDoc(w);\n        w.close();\n\n        WriterThread writer = new WriterThread(100, fs1);\n        SearcherThread searcher = new SearcherThread(100, fs1);\n        writer.start();\n        searcher.start();\n\n        while(writer.isAlive() || searcher.isAlive()) {\n          Thread.sleep(1000);\n        }\n\n        assertTrue(\"IndexWriter hit unexpected exceptions\", !writer.hitException);\n        assertTrue(\"IndexSearcher hit unexpected exceptions\", !searcher.hitException);\n\n        // Cleanup\n        _TestUtil.rmDir(indexDir);\n    }\n\n","sourceOld":"    public void _testStressLocks(LockFactory lockFactory, File indexDir) throws Exception {\n        FSDirectory fs1 = FSDirectory.open(indexDir, lockFactory);\n\n        // First create a 1 doc index:\n        IndexWriter w = new IndexWriter(fs1, new WhitespaceAnalyzer(TEST_VERSION_CURRENT), true,\n                                        IndexWriter.MaxFieldLength.LIMITED);\n        addDoc(w);\n        w.close();\n\n        WriterThread writer = new WriterThread(100, fs1);\n        SearcherThread searcher = new SearcherThread(100, fs1);\n        writer.start();\n        searcher.start();\n\n        while(writer.isAlive() || searcher.isAlive()) {\n          Thread.sleep(1000);\n        }\n\n        assertTrue(\"IndexWriter hit unexpected exceptions\", !writer.hitException);\n        assertTrue(\"IndexSearcher hit unexpected exceptions\", !searcher.hitException);\n\n        // Cleanup\n        _TestUtil.rmDir(indexDir);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/store/TestLockFactory#_testStressLocks(LockFactory,File).mjava","pathOld":"src/test/org/apache/lucene/store/TestLockFactory#_testStressLocks(LockFactory,File).mjava","sourceNew":"    public void _testStressLocks(LockFactory lockFactory, File indexDir) throws Exception {\n        FSDirectory fs1 = FSDirectory.open(indexDir, lockFactory);\n\n        // First create a 1 doc index:\n        IndexWriter w = new IndexWriter(fs1, new IndexWriterConfig(TEST_VERSION_CURRENT, new WhitespaceAnalyzer(TEST_VERSION_CURRENT)).setOpenMode(OpenMode.CREATE));\n        addDoc(w);\n        w.close();\n\n        WriterThread writer = new WriterThread(100, fs1);\n        SearcherThread searcher = new SearcherThread(100, fs1);\n        writer.start();\n        searcher.start();\n\n        while(writer.isAlive() || searcher.isAlive()) {\n          Thread.sleep(1000);\n        }\n\n        assertTrue(\"IndexWriter hit unexpected exceptions\", !writer.hitException);\n        assertTrue(\"IndexSearcher hit unexpected exceptions\", !searcher.hitException);\n\n        // Cleanup\n        _TestUtil.rmDir(indexDir);\n    }\n\n","sourceOld":"    public void _testStressLocks(LockFactory lockFactory, File indexDir) throws Exception {\n        FSDirectory fs1 = FSDirectory.open(indexDir, lockFactory);\n\n        // First create a 1 doc index:\n        IndexWriter w = new IndexWriter(fs1, new IndexWriterConfig(TEST_VERSION_CURRENT, new WhitespaceAnalyzer(TEST_VERSION_CURRENT)).setOpenMode(OpenMode.CREATE));\n        addDoc(w);\n        w.close();\n\n        WriterThread writer = new WriterThread(100, fs1);\n        SearcherThread searcher = new SearcherThread(100, fs1);\n        writer.start();\n        searcher.start();\n\n        while(writer.isAlive() || searcher.isAlive()) {\n          Thread.sleep(1000);\n        }\n\n        assertTrue(\"IndexWriter hit unexpected exceptions\", !writer.hitException);\n        assertTrue(\"IndexSearcher hit unexpected exceptions\", !searcher.hitException);\n\n        // Cleanup\n        _TestUtil.rmDir(indexDir);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"84080a7d7dbdaa3e6a4a1c9f1bb6221be40f47e8":["e52fea2c4081a1e552b98506691990be59503168"],"fe0932c1d340f83fb0a611e5829b3046a1cc1152":["8f7faff7550034759516ce7f4898cd16c1816cde"],"55f083e91bb056b57de136da1dfc3b9b6ecc4ef6":["fe0932c1d340f83fb0a611e5829b3046a1cc1152"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"1cedb00d2dd44640194401179358a2e3ba6051bf":["55f083e91bb056b57de136da1dfc3b9b6ecc4ef6"],"8f7faff7550034759516ce7f4898cd16c1816cde":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"e52fea2c4081a1e552b98506691990be59503168":["1cedb00d2dd44640194401179358a2e3ba6051bf"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["84080a7d7dbdaa3e6a4a1c9f1bb6221be40f47e8"]},"commit2Childs":{"84080a7d7dbdaa3e6a4a1c9f1bb6221be40f47e8":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"fe0932c1d340f83fb0a611e5829b3046a1cc1152":["55f083e91bb056b57de136da1dfc3b9b6ecc4ef6"],"55f083e91bb056b57de136da1dfc3b9b6ecc4ef6":["1cedb00d2dd44640194401179358a2e3ba6051bf"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["8f7faff7550034759516ce7f4898cd16c1816cde"],"1cedb00d2dd44640194401179358a2e3ba6051bf":["e52fea2c4081a1e552b98506691990be59503168"],"8f7faff7550034759516ce7f4898cd16c1816cde":["fe0932c1d340f83fb0a611e5829b3046a1cc1152"],"e52fea2c4081a1e552b98506691990be59503168":["84080a7d7dbdaa3e6a4a1c9f1bb6221be40f47e8"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}