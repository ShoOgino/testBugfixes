{"path":"solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/DocBuilder#getVariableResolver().mjava","commits":[{"id":"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91","date":1306767085,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/DocBuilder#getVariableResolver().mjava","pathOld":"solr/contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/DocBuilder#getVariableResolver().mjava","sourceNew":"  public VariableResolverImpl getVariableResolver() {\n    try {\n      VariableResolverImpl resolver = null;\n      if(dataImporter != null && dataImporter.getCore() != null){\n        resolver =  new VariableResolverImpl(dataImporter.getCore().getResourceLoader().getCoreProperties());\n      } else resolver = new VariableResolverImpl();\n      Map<String, Object> indexerNamespace = new HashMap<String, Object>();\n      if (persistedProperties.getProperty(LAST_INDEX_TIME) != null) {\n        indexerNamespace.put(LAST_INDEX_TIME, persistedProperties.getProperty(LAST_INDEX_TIME));\n      } else  {\n        // set epoch\n        indexerNamespace.put(LAST_INDEX_TIME, DataImporter.DATE_TIME_FORMAT.get().format(EPOCH));\n      }\n      indexerNamespace.put(INDEX_START_TIME, dataImporter.getIndexStartTime());\n      indexerNamespace.put(\"request\", requestParameters.requestParams);\n      indexerNamespace.put(\"functions\", functionsNamespace);\n      for (DataConfig.Entity entity : dataImporter.getConfig().document.entities) {\n        String key = entity.name + \".\" + SolrWriter.LAST_INDEX_KEY;\n        String lastIndex = persistedProperties.getProperty(key);\n        if (lastIndex != null) {\n          indexerNamespace.put(key, lastIndex);\n        } else  {\n          indexerNamespace.put(key, DataImporter.DATE_TIME_FORMAT.get().format(EPOCH));\n        }\n      }\n      resolver.addNamespace(DataConfig.IMPORTER_NS_SHORT, indexerNamespace);\n      resolver.addNamespace(DataConfig.IMPORTER_NS, indexerNamespace);\n      return resolver;\n    } catch (Exception e) {\n      wrapAndThrow(SEVERE, e);\n      // unreachable statement\n      return null;\n    }\n  }\n\n","sourceOld":"  public VariableResolverImpl getVariableResolver() {\n    try {\n      VariableResolverImpl resolver = null;\n      if(dataImporter != null && dataImporter.getCore() != null){\n        resolver =  new VariableResolverImpl(dataImporter.getCore().getResourceLoader().getCoreProperties());\n      } else resolver = new VariableResolverImpl();\n      Map<String, Object> indexerNamespace = new HashMap<String, Object>();\n      if (persistedProperties.getProperty(LAST_INDEX_TIME) != null) {\n        indexerNamespace.put(LAST_INDEX_TIME, persistedProperties.getProperty(LAST_INDEX_TIME));\n      } else  {\n        // set epoch\n        indexerNamespace.put(LAST_INDEX_TIME, DataImporter.DATE_TIME_FORMAT.get().format(EPOCH));\n      }\n      indexerNamespace.put(INDEX_START_TIME, dataImporter.getIndexStartTime());\n      indexerNamespace.put(\"request\", requestParameters.requestParams);\n      indexerNamespace.put(\"functions\", functionsNamespace);\n      for (DataConfig.Entity entity : dataImporter.getConfig().document.entities) {\n        String key = entity.name + \".\" + SolrWriter.LAST_INDEX_KEY;\n        String lastIndex = persistedProperties.getProperty(key);\n        if (lastIndex != null) {\n          indexerNamespace.put(key, lastIndex);\n        } else  {\n          indexerNamespace.put(key, DataImporter.DATE_TIME_FORMAT.get().format(EPOCH));\n        }\n      }\n      resolver.addNamespace(DataConfig.IMPORTER_NS_SHORT, indexerNamespace);\n      resolver.addNamespace(DataConfig.IMPORTER_NS, indexerNamespace);\n      return resolver;\n    } catch (Exception e) {\n      wrapAndThrow(SEVERE, e);\n      // unreachable statement\n      return null;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/DocBuilder#getVariableResolver().mjava","pathOld":"solr/contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/DocBuilder#getVariableResolver().mjava","sourceNew":"  public VariableResolverImpl getVariableResolver() {\n    try {\n      VariableResolverImpl resolver = null;\n      if(dataImporter != null && dataImporter.getCore() != null){\n        resolver =  new VariableResolverImpl(dataImporter.getCore().getResourceLoader().getCoreProperties());\n      } else resolver = new VariableResolverImpl();\n      Map<String, Object> indexerNamespace = new HashMap<String, Object>();\n      if (persistedProperties.getProperty(LAST_INDEX_TIME) != null) {\n        indexerNamespace.put(LAST_INDEX_TIME, persistedProperties.getProperty(LAST_INDEX_TIME));\n      } else  {\n        // set epoch\n        indexerNamespace.put(LAST_INDEX_TIME, DataImporter.DATE_TIME_FORMAT.get().format(EPOCH));\n      }\n      indexerNamespace.put(INDEX_START_TIME, dataImporter.getIndexStartTime());\n      indexerNamespace.put(\"request\", requestParameters.requestParams);\n      indexerNamespace.put(\"functions\", functionsNamespace);\n      for (DataConfig.Entity entity : dataImporter.getConfig().document.entities) {\n        String key = entity.name + \".\" + SolrWriter.LAST_INDEX_KEY;\n        String lastIndex = persistedProperties.getProperty(key);\n        if (lastIndex != null) {\n          indexerNamespace.put(key, lastIndex);\n        } else  {\n          indexerNamespace.put(key, DataImporter.DATE_TIME_FORMAT.get().format(EPOCH));\n        }\n      }\n      resolver.addNamespace(DataConfig.IMPORTER_NS_SHORT, indexerNamespace);\n      resolver.addNamespace(DataConfig.IMPORTER_NS, indexerNamespace);\n      return resolver;\n    } catch (Exception e) {\n      wrapAndThrow(SEVERE, e);\n      // unreachable statement\n      return null;\n    }\n  }\n\n","sourceOld":"  public VariableResolverImpl getVariableResolver() {\n    try {\n      VariableResolverImpl resolver = null;\n      if(dataImporter != null && dataImporter.getCore() != null){\n        resolver =  new VariableResolverImpl(dataImporter.getCore().getResourceLoader().getCoreProperties());\n      } else resolver = new VariableResolverImpl();\n      Map<String, Object> indexerNamespace = new HashMap<String, Object>();\n      if (persistedProperties.getProperty(LAST_INDEX_TIME) != null) {\n        indexerNamespace.put(LAST_INDEX_TIME, persistedProperties.getProperty(LAST_INDEX_TIME));\n      } else  {\n        // set epoch\n        indexerNamespace.put(LAST_INDEX_TIME, DataImporter.DATE_TIME_FORMAT.get().format(EPOCH));\n      }\n      indexerNamespace.put(INDEX_START_TIME, dataImporter.getIndexStartTime());\n      indexerNamespace.put(\"request\", requestParameters.requestParams);\n      indexerNamespace.put(\"functions\", functionsNamespace);\n      for (DataConfig.Entity entity : dataImporter.getConfig().document.entities) {\n        String key = entity.name + \".\" + SolrWriter.LAST_INDEX_KEY;\n        String lastIndex = persistedProperties.getProperty(key);\n        if (lastIndex != null) {\n          indexerNamespace.put(key, lastIndex);\n        } else  {\n          indexerNamespace.put(key, DataImporter.DATE_TIME_FORMAT.get().format(EPOCH));\n        }\n      }\n      resolver.addNamespace(DataConfig.IMPORTER_NS_SHORT, indexerNamespace);\n      resolver.addNamespace(DataConfig.IMPORTER_NS, indexerNamespace);\n      return resolver;\n    } catch (Exception e) {\n      wrapAndThrow(SEVERE, e);\n      // unreachable statement\n      return null;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"17a92a6c6955645d64747d96f75583d591643464","date":1311245814,"type":3,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/DocBuilder#getVariableResolver().mjava","pathOld":"solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/DocBuilder#getVariableResolver().mjava","sourceNew":"  public VariableResolverImpl getVariableResolver() {\n    try {\n      VariableResolverImpl resolver = null;\n      if(dataImporter != null && dataImporter.getCore() != null\n          && dataImporter.getCore().getResourceLoader().getCoreProperties() != null){\n        resolver =  new VariableResolverImpl(dataImporter.getCore().getResourceLoader().getCoreProperties());\n      } else resolver = new VariableResolverImpl();\n      Map<String, Object> indexerNamespace = new HashMap<String, Object>();\n      if (persistedProperties.getProperty(LAST_INDEX_TIME) != null) {\n        indexerNamespace.put(LAST_INDEX_TIME, persistedProperties.getProperty(LAST_INDEX_TIME));\n      } else  {\n        // set epoch\n        indexerNamespace.put(LAST_INDEX_TIME, DataImporter.DATE_TIME_FORMAT.get().format(EPOCH));\n      }\n      indexerNamespace.put(INDEX_START_TIME, dataImporter.getIndexStartTime());\n      indexerNamespace.put(\"request\", requestParameters.requestParams);\n      indexerNamespace.put(\"functions\", functionsNamespace);\n      for (DataConfig.Entity entity : dataImporter.getConfig().document.entities) {\n        String key = entity.name + \".\" + SolrWriter.LAST_INDEX_KEY;\n        String lastIndex = persistedProperties.getProperty(key);\n        if (lastIndex != null) {\n          indexerNamespace.put(key, lastIndex);\n        } else  {\n          indexerNamespace.put(key, DataImporter.DATE_TIME_FORMAT.get().format(EPOCH));\n        }\n      }\n      resolver.addNamespace(DataConfig.IMPORTER_NS_SHORT, indexerNamespace);\n      resolver.addNamespace(DataConfig.IMPORTER_NS, indexerNamespace);\n      return resolver;\n    } catch (Exception e) {\n      wrapAndThrow(SEVERE, e);\n      // unreachable statement\n      return null;\n    }\n  }\n\n","sourceOld":"  public VariableResolverImpl getVariableResolver() {\n    try {\n      VariableResolverImpl resolver = null;\n      if(dataImporter != null && dataImporter.getCore() != null){\n        resolver =  new VariableResolverImpl(dataImporter.getCore().getResourceLoader().getCoreProperties());\n      } else resolver = new VariableResolverImpl();\n      Map<String, Object> indexerNamespace = new HashMap<String, Object>();\n      if (persistedProperties.getProperty(LAST_INDEX_TIME) != null) {\n        indexerNamespace.put(LAST_INDEX_TIME, persistedProperties.getProperty(LAST_INDEX_TIME));\n      } else  {\n        // set epoch\n        indexerNamespace.put(LAST_INDEX_TIME, DataImporter.DATE_TIME_FORMAT.get().format(EPOCH));\n      }\n      indexerNamespace.put(INDEX_START_TIME, dataImporter.getIndexStartTime());\n      indexerNamespace.put(\"request\", requestParameters.requestParams);\n      indexerNamespace.put(\"functions\", functionsNamespace);\n      for (DataConfig.Entity entity : dataImporter.getConfig().document.entities) {\n        String key = entity.name + \".\" + SolrWriter.LAST_INDEX_KEY;\n        String lastIndex = persistedProperties.getProperty(key);\n        if (lastIndex != null) {\n          indexerNamespace.put(key, lastIndex);\n        } else  {\n          indexerNamespace.put(key, DataImporter.DATE_TIME_FORMAT.get().format(EPOCH));\n        }\n      }\n      resolver.addNamespace(DataConfig.IMPORTER_NS_SHORT, indexerNamespace);\n      resolver.addNamespace(DataConfig.IMPORTER_NS, indexerNamespace);\n      return resolver;\n    } catch (Exception e) {\n      wrapAndThrow(SEVERE, e);\n      // unreachable statement\n      return null;\n    }\n  }\n\n","bugFix":["65f4e997b946a4eadce22b758749046a63ba2eff"],"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"4ebea96bbe279c4a8dc0cd5cd1f987cc9b33436c","date":1335805170,"type":3,"author":"James Dyer","isMerge":false,"pathNew":"solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/DocBuilder#getVariableResolver().mjava","pathOld":"solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/DocBuilder#getVariableResolver().mjava","sourceNew":"  public VariableResolverImpl getVariableResolver() {\n    try {\n      VariableResolverImpl resolver = null;\n      if(dataImporter != null && dataImporter.getCore() != null\n          && dataImporter.getCore().getResourceLoader().getCoreProperties() != null){\n        resolver =  new VariableResolverImpl(dataImporter.getCore().getResourceLoader().getCoreProperties());\n      } else resolver = new VariableResolverImpl();\n      Map<String, Object> indexerNamespace = new HashMap<String, Object>();\n      if (persistedProperties.getProperty(LAST_INDEX_TIME) != null) {\n        indexerNamespace.put(LAST_INDEX_TIME, persistedProperties.getProperty(LAST_INDEX_TIME));\n      } else  {\n        // set epoch\n        indexerNamespace.put(LAST_INDEX_TIME, DataImporter.DATE_TIME_FORMAT.get().format(EPOCH));\n      }\n      indexerNamespace.put(INDEX_START_TIME, dataImporter.getIndexStartTime());\n      indexerNamespace.put(\"request\", reqParams.getRawParams());\n      indexerNamespace.put(\"functions\", functionsNamespace);\n      for (Entity entity : dataImporter.getConfig().getEntities()) {\n        String key = entity.getName() + \".\" + SolrWriter.LAST_INDEX_KEY;\n        String lastIndex = persistedProperties.getProperty(key);\n        if (lastIndex != null) {\n          indexerNamespace.put(key, lastIndex);\n        } else  {\n          indexerNamespace.put(key, DataImporter.DATE_TIME_FORMAT.get().format(EPOCH));\n        }\n      }\n      resolver.addNamespace(ConfigNameConstants.IMPORTER_NS_SHORT, indexerNamespace);\n      resolver.addNamespace(ConfigNameConstants.IMPORTER_NS, indexerNamespace);\n      return resolver;\n    } catch (Exception e) {\n      wrapAndThrow(SEVERE, e);\n      // unreachable statement\n      return null;\n    }\n  }\n\n","sourceOld":"  public VariableResolverImpl getVariableResolver() {\n    try {\n      VariableResolverImpl resolver = null;\n      if(dataImporter != null && dataImporter.getCore() != null\n          && dataImporter.getCore().getResourceLoader().getCoreProperties() != null){\n        resolver =  new VariableResolverImpl(dataImporter.getCore().getResourceLoader().getCoreProperties());\n      } else resolver = new VariableResolverImpl();\n      Map<String, Object> indexerNamespace = new HashMap<String, Object>();\n      if (persistedProperties.getProperty(LAST_INDEX_TIME) != null) {\n        indexerNamespace.put(LAST_INDEX_TIME, persistedProperties.getProperty(LAST_INDEX_TIME));\n      } else  {\n        // set epoch\n        indexerNamespace.put(LAST_INDEX_TIME, DataImporter.DATE_TIME_FORMAT.get().format(EPOCH));\n      }\n      indexerNamespace.put(INDEX_START_TIME, dataImporter.getIndexStartTime());\n      indexerNamespace.put(\"request\", requestParameters.requestParams);\n      indexerNamespace.put(\"functions\", functionsNamespace);\n      for (DataConfig.Entity entity : dataImporter.getConfig().document.entities) {\n        String key = entity.name + \".\" + SolrWriter.LAST_INDEX_KEY;\n        String lastIndex = persistedProperties.getProperty(key);\n        if (lastIndex != null) {\n          indexerNamespace.put(key, lastIndex);\n        } else  {\n          indexerNamespace.put(key, DataImporter.DATE_TIME_FORMAT.get().format(EPOCH));\n        }\n      }\n      resolver.addNamespace(DataConfig.IMPORTER_NS_SHORT, indexerNamespace);\n      resolver.addNamespace(DataConfig.IMPORTER_NS, indexerNamespace);\n      return resolver;\n    } catch (Exception e) {\n      wrapAndThrow(SEVERE, e);\n      // unreachable statement\n      return null;\n    }\n  }\n\n","bugFix":null,"bugIntro":["e28c473b1fded16de59a8fb37a0652fe2d27f702"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"b4804614e0358954d5d9f51128fcf3cd79e6e25b","date":1352831451,"type":3,"author":"James Dyer","isMerge":false,"pathNew":"solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/DocBuilder#getVariableResolver().mjava","pathOld":"solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/DocBuilder#getVariableResolver().mjava","sourceNew":"  public VariableResolverImpl getVariableResolver() {\n    try {\n      VariableResolverImpl resolver = null;\n      if(dataImporter != null && dataImporter.getCore() != null\n          && dataImporter.getCore().getResourceLoader().getCoreProperties() != null){\n        resolver =  new VariableResolverImpl(dataImporter.getCore().getResourceLoader().getCoreProperties());\n      } else resolver = new VariableResolverImpl();\n      Map<String, Object> indexerNamespace = new HashMap<String, Object>();\n      if (persistedProperties.get(LAST_INDEX_TIME) != null) {\n        indexerNamespace.put(LAST_INDEX_TIME, persistedProperties.get(LAST_INDEX_TIME));\n      } else  {\n        // set epoch\n        indexerNamespace.put(LAST_INDEX_TIME, EPOCH);\n      }\n      indexerNamespace.put(INDEX_START_TIME, dataImporter.getIndexStartTime());\n      indexerNamespace.put(\"request\", reqParams.getRawParams());\n      indexerNamespace.put(\"functions\", functionsNamespace);\n      for (Entity entity : dataImporter.getConfig().getEntities()) {\n        String key = entity.getName() + \".\" + SolrWriter.LAST_INDEX_KEY;\n        Object lastIndex = persistedProperties.get(key);\n        if (lastIndex != null && lastIndex instanceof Date) {\n          indexerNamespace.put(key, lastIndex);\n        } else  {\n          indexerNamespace.put(key, EPOCH);\n        }\n      }\n      resolver.addNamespace(ConfigNameConstants.IMPORTER_NS_SHORT, indexerNamespace);\n      resolver.addNamespace(ConfigNameConstants.IMPORTER_NS, indexerNamespace);\n      return resolver;\n    } catch (Exception e) {\n      wrapAndThrow(SEVERE, e);\n      // unreachable statement\n      return null;\n    }\n  }\n\n","sourceOld":"  public VariableResolverImpl getVariableResolver() {\n    try {\n      VariableResolverImpl resolver = null;\n      if(dataImporter != null && dataImporter.getCore() != null\n          && dataImporter.getCore().getResourceLoader().getCoreProperties() != null){\n        resolver =  new VariableResolverImpl(dataImporter.getCore().getResourceLoader().getCoreProperties());\n      } else resolver = new VariableResolverImpl();\n      Map<String, Object> indexerNamespace = new HashMap<String, Object>();\n      if (persistedProperties.getProperty(LAST_INDEX_TIME) != null) {\n        indexerNamespace.put(LAST_INDEX_TIME, persistedProperties.getProperty(LAST_INDEX_TIME));\n      } else  {\n        // set epoch\n        indexerNamespace.put(LAST_INDEX_TIME, DataImporter.DATE_TIME_FORMAT.get().format(EPOCH));\n      }\n      indexerNamespace.put(INDEX_START_TIME, dataImporter.getIndexStartTime());\n      indexerNamespace.put(\"request\", reqParams.getRawParams());\n      indexerNamespace.put(\"functions\", functionsNamespace);\n      for (Entity entity : dataImporter.getConfig().getEntities()) {\n        String key = entity.getName() + \".\" + SolrWriter.LAST_INDEX_KEY;\n        String lastIndex = persistedProperties.getProperty(key);\n        if (lastIndex != null) {\n          indexerNamespace.put(key, lastIndex);\n        } else  {\n          indexerNamespace.put(key, DataImporter.DATE_TIME_FORMAT.get().format(EPOCH));\n        }\n      }\n      resolver.addNamespace(ConfigNameConstants.IMPORTER_NS_SHORT, indexerNamespace);\n      resolver.addNamespace(ConfigNameConstants.IMPORTER_NS, indexerNamespace);\n      return resolver;\n    } catch (Exception e) {\n      wrapAndThrow(SEVERE, e);\n      // unreachable statement\n      return null;\n    }\n  }\n\n","bugFix":null,"bugIntro":["e84a214a78cfdea9b86daf30ead5616378025f5b","e28c473b1fded16de59a8fb37a0652fe2d27f702"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"7c7b0ae5716b6c2044195a818e9ae58205175659","date":1353342230,"type":3,"author":"James Dyer","isMerge":false,"pathNew":"solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/DocBuilder#getVariableResolver().mjava","pathOld":"solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/DocBuilder#getVariableResolver().mjava","sourceNew":"  private VariableResolver getVariableResolver() {\n    try {\n      VariableResolver resolver = null;\n      if(dataImporter != null && dataImporter.getCore() != null\n          && dataImporter.getCore().getResourceLoader().getCoreProperties() != null){\n        resolver =  new VariableResolver(dataImporter.getCore().getResourceLoader().getCoreProperties());\n      } else {\n        resolver = new VariableResolver();\n      }\n      resolver.setEvaluators(dataImporter.getEvaluators());\n      Map<String, Object> indexerNamespace = new HashMap<String, Object>();\n      if (persistedProperties.get(LAST_INDEX_TIME) != null) {\n        indexerNamespace.put(LAST_INDEX_TIME, persistedProperties.get(LAST_INDEX_TIME));\n      } else  {\n        // set epoch\n        indexerNamespace.put(LAST_INDEX_TIME, EPOCH);\n      }\n      indexerNamespace.put(INDEX_START_TIME, dataImporter.getIndexStartTime());\n      indexerNamespace.put(\"request\", reqParams.getRawParams());\n      for (Entity entity : dataImporter.getConfig().getEntities()) {\n        String key = entity.getName() + \".\" + SolrWriter.LAST_INDEX_KEY;\n        Object lastIndex = persistedProperties.get(key);\n        if (lastIndex != null && lastIndex instanceof Date) {\n          indexerNamespace.put(key, lastIndex);\n        } else  {\n          indexerNamespace.put(key, EPOCH);\n        }\n      }\n      resolver.addNamespace(ConfigNameConstants.IMPORTER_NS_SHORT, indexerNamespace);\n      resolver.addNamespace(ConfigNameConstants.IMPORTER_NS, indexerNamespace);\n      return resolver;\n    } catch (Exception e) {\n      wrapAndThrow(SEVERE, e);\n      // unreachable statement\n      return null;\n    }\n  }\n\n","sourceOld":"  public VariableResolverImpl getVariableResolver() {\n    try {\n      VariableResolverImpl resolver = null;\n      if(dataImporter != null && dataImporter.getCore() != null\n          && dataImporter.getCore().getResourceLoader().getCoreProperties() != null){\n        resolver =  new VariableResolverImpl(dataImporter.getCore().getResourceLoader().getCoreProperties());\n      } else resolver = new VariableResolverImpl();\n      Map<String, Object> indexerNamespace = new HashMap<String, Object>();\n      if (persistedProperties.get(LAST_INDEX_TIME) != null) {\n        indexerNamespace.put(LAST_INDEX_TIME, persistedProperties.get(LAST_INDEX_TIME));\n      } else  {\n        // set epoch\n        indexerNamespace.put(LAST_INDEX_TIME, EPOCH);\n      }\n      indexerNamespace.put(INDEX_START_TIME, dataImporter.getIndexStartTime());\n      indexerNamespace.put(\"request\", reqParams.getRawParams());\n      indexerNamespace.put(\"functions\", functionsNamespace);\n      for (Entity entity : dataImporter.getConfig().getEntities()) {\n        String key = entity.getName() + \".\" + SolrWriter.LAST_INDEX_KEY;\n        Object lastIndex = persistedProperties.get(key);\n        if (lastIndex != null && lastIndex instanceof Date) {\n          indexerNamespace.put(key, lastIndex);\n        } else  {\n          indexerNamespace.put(key, EPOCH);\n        }\n      }\n      resolver.addNamespace(ConfigNameConstants.IMPORTER_NS_SHORT, indexerNamespace);\n      resolver.addNamespace(ConfigNameConstants.IMPORTER_NS, indexerNamespace);\n      return resolver;\n    } catch (Exception e) {\n      wrapAndThrow(SEVERE, e);\n      // unreachable statement\n      return null;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"407687e67faf6e1f02a211ca078d8e3eed631027","date":1355157407,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/DocBuilder#getVariableResolver().mjava","pathOld":"solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/DocBuilder#getVariableResolver().mjava","sourceNew":"  private VariableResolver getVariableResolver() {\n    try {\n      VariableResolver resolver = null;\n      if(dataImporter != null && dataImporter.getCore() != null\n          && dataImporter.getCore().getResourceLoader().getCoreProperties() != null){\n        resolver =  new VariableResolver(dataImporter.getCore().getResourceLoader().getCoreProperties());\n      } else {\n        resolver = new VariableResolver();\n      }\n      resolver.setEvaluators(dataImporter.getEvaluators());\n      Map<String, Object> indexerNamespace = new HashMap<String, Object>();\n      if (persistedProperties.get(LAST_INDEX_TIME) != null) {\n        indexerNamespace.put(LAST_INDEX_TIME, persistedProperties.get(LAST_INDEX_TIME));\n      } else  {\n        // set epoch\n        indexerNamespace.put(LAST_INDEX_TIME, EPOCH);\n      }\n      indexerNamespace.put(INDEX_START_TIME, dataImporter.getIndexStartTime());\n      indexerNamespace.put(\"request\", reqParams.getRawParams());\n      for (Entity entity : dataImporter.getConfig().getEntities()) {\n        String key = entity.getName() + \".\" + SolrWriter.LAST_INDEX_KEY;\n        Object lastIndex = persistedProperties.get(key);\n        if (lastIndex != null && lastIndex instanceof Date) {\n          indexerNamespace.put(key, lastIndex);\n        } else  {\n          indexerNamespace.put(key, EPOCH);\n        }\n      }\n      resolver.addNamespace(ConfigNameConstants.IMPORTER_NS_SHORT, indexerNamespace);\n      resolver.addNamespace(ConfigNameConstants.IMPORTER_NS, indexerNamespace);\n      return resolver;\n    } catch (Exception e) {\n      wrapAndThrow(SEVERE, e);\n      // unreachable statement\n      return null;\n    }\n  }\n\n","sourceOld":"  public VariableResolverImpl getVariableResolver() {\n    try {\n      VariableResolverImpl resolver = null;\n      if(dataImporter != null && dataImporter.getCore() != null\n          && dataImporter.getCore().getResourceLoader().getCoreProperties() != null){\n        resolver =  new VariableResolverImpl(dataImporter.getCore().getResourceLoader().getCoreProperties());\n      } else resolver = new VariableResolverImpl();\n      Map<String, Object> indexerNamespace = new HashMap<String, Object>();\n      if (persistedProperties.getProperty(LAST_INDEX_TIME) != null) {\n        indexerNamespace.put(LAST_INDEX_TIME, persistedProperties.getProperty(LAST_INDEX_TIME));\n      } else  {\n        // set epoch\n        indexerNamespace.put(LAST_INDEX_TIME, DataImporter.DATE_TIME_FORMAT.get().format(EPOCH));\n      }\n      indexerNamespace.put(INDEX_START_TIME, dataImporter.getIndexStartTime());\n      indexerNamespace.put(\"request\", reqParams.getRawParams());\n      indexerNamespace.put(\"functions\", functionsNamespace);\n      for (Entity entity : dataImporter.getConfig().getEntities()) {\n        String key = entity.getName() + \".\" + SolrWriter.LAST_INDEX_KEY;\n        String lastIndex = persistedProperties.getProperty(key);\n        if (lastIndex != null) {\n          indexerNamespace.put(key, lastIndex);\n        } else  {\n          indexerNamespace.put(key, DataImporter.DATE_TIME_FORMAT.get().format(EPOCH));\n        }\n      }\n      resolver.addNamespace(ConfigNameConstants.IMPORTER_NS_SHORT, indexerNamespace);\n      resolver.addNamespace(ConfigNameConstants.IMPORTER_NS, indexerNamespace);\n      return resolver;\n    } catch (Exception e) {\n      wrapAndThrow(SEVERE, e);\n      // unreachable statement\n      return null;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ba58b751368f9b74be72216b17abfb47ecb18588","date":1363023437,"type":3,"author":"James Dyer","isMerge":false,"pathNew":"solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/DocBuilder#getVariableResolver().mjava","pathOld":"solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/DocBuilder#getVariableResolver().mjava","sourceNew":"  private VariableResolver getVariableResolver() {\n    try {\n      VariableResolver resolver = null;\n      if(dataImporter != null && dataImporter.getCore() != null\n          && dataImporter.getCore().getResourceLoader().getCoreProperties() != null){\n        resolver =  new VariableResolver(dataImporter.getCore().getResourceLoader().getCoreProperties());\n      } else {\n        resolver = new VariableResolver();\n      }\n      resolver.setEvaluators(dataImporter.getEvaluators());\n      Map<String, Object> indexerNamespace = new HashMap<String, Object>();\n      if (persistedProperties.get(LAST_INDEX_TIME) != null) {\n        indexerNamespace.put(LAST_INDEX_TIME, persistedProperties.get(LAST_INDEX_TIME));\n      } else  {\n        // set epoch\n        indexerNamespace.put(LAST_INDEX_TIME, EPOCH);\n      }\n      indexerNamespace.put(INDEX_START_TIME, dataImporter.getIndexStartTime());\n      indexerNamespace.put(\"request\", new HashMap<String,Object>(reqParams.getRawParams()));\n      for (Entity entity : dataImporter.getConfig().getEntities()) {\n        String key = entity.getName() + \".\" + SolrWriter.LAST_INDEX_KEY;\n        Object lastIndex = persistedProperties.get(key);\n        if (lastIndex != null && lastIndex instanceof Date) {\n          indexerNamespace.put(key, lastIndex);\n        } else  {\n          indexerNamespace.put(key, EPOCH);\n        }\n      }\n      resolver.addNamespace(ConfigNameConstants.IMPORTER_NS_SHORT, indexerNamespace);\n      resolver.addNamespace(ConfigNameConstants.IMPORTER_NS, indexerNamespace);\n      return resolver;\n    } catch (Exception e) {\n      wrapAndThrow(SEVERE, e);\n      // unreachable statement\n      return null;\n    }\n  }\n\n","sourceOld":"  private VariableResolver getVariableResolver() {\n    try {\n      VariableResolver resolver = null;\n      if(dataImporter != null && dataImporter.getCore() != null\n          && dataImporter.getCore().getResourceLoader().getCoreProperties() != null){\n        resolver =  new VariableResolver(dataImporter.getCore().getResourceLoader().getCoreProperties());\n      } else {\n        resolver = new VariableResolver();\n      }\n      resolver.setEvaluators(dataImporter.getEvaluators());\n      Map<String, Object> indexerNamespace = new HashMap<String, Object>();\n      if (persistedProperties.get(LAST_INDEX_TIME) != null) {\n        indexerNamespace.put(LAST_INDEX_TIME, persistedProperties.get(LAST_INDEX_TIME));\n      } else  {\n        // set epoch\n        indexerNamespace.put(LAST_INDEX_TIME, EPOCH);\n      }\n      indexerNamespace.put(INDEX_START_TIME, dataImporter.getIndexStartTime());\n      indexerNamespace.put(\"request\", reqParams.getRawParams());\n      for (Entity entity : dataImporter.getConfig().getEntities()) {\n        String key = entity.getName() + \".\" + SolrWriter.LAST_INDEX_KEY;\n        Object lastIndex = persistedProperties.get(key);\n        if (lastIndex != null && lastIndex instanceof Date) {\n          indexerNamespace.put(key, lastIndex);\n        } else  {\n          indexerNamespace.put(key, EPOCH);\n        }\n      }\n      resolver.addNamespace(ConfigNameConstants.IMPORTER_NS_SHORT, indexerNamespace);\n      resolver.addNamespace(ConfigNameConstants.IMPORTER_NS, indexerNamespace);\n      return resolver;\n    } catch (Exception e) {\n      wrapAndThrow(SEVERE, e);\n      // unreachable statement\n      return null;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"e28c473b1fded16de59a8fb37a0652fe2d27f702","date":1373281918,"type":3,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/DocBuilder#getVariableResolver().mjava","pathOld":"solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/DocBuilder#getVariableResolver().mjava","sourceNew":"  private VariableResolver getVariableResolver() {\n    try {\n      VariableResolver resolver = null;\n      if(dataImporter != null && dataImporter.getCore() != null\n          && dataImporter.getCore().getResourceLoader().getCoreProperties() != null){\n        resolver =  new VariableResolver(dataImporter.getCore().getResourceLoader().getCoreProperties());\n      } else {\n        resolver = new VariableResolver();\n      }\n      resolver.setEvaluators(dataImporter.getEvaluators());\n      Map<String, Object> indexerNamespace = new HashMap<String, Object>();\n      if (persistedProperties.get(LAST_INDEX_TIME) != null) {\n        indexerNamespace.put(LAST_INDEX_TIME, persistedProperties.get(LAST_INDEX_TIME));\n      } else  {\n        // set epoch\n        indexerNamespace.put(LAST_INDEX_TIME, EPOCH);\n      }\n      indexerNamespace.put(INDEX_START_TIME, dataImporter.getIndexStartTime());\n      indexerNamespace.put(\"request\", new HashMap<String,Object>(reqParams.getRawParams()));\n      for (Entity entity : dataImporter.getConfig().getEntities()) {\n        Map<String, Object> entityNamespace = new HashMap<String, Object>();        \n        String key = SolrWriter.LAST_INDEX_KEY;\n        Object lastIndex = persistedProperties.get(entity.getName() + \".\" + key);\n        if (lastIndex != null) {\n          entityNamespace.put(SolrWriter.LAST_INDEX_KEY, lastIndex);\n        } else  {\n          entityNamespace.put(SolrWriter.LAST_INDEX_KEY, EPOCH);\n        }\n        indexerNamespace.put(entity.getName(), entityNamespace);\n      }\n      resolver.addNamespace(ConfigNameConstants.IMPORTER_NS_SHORT, indexerNamespace);\n      resolver.addNamespace(ConfigNameConstants.IMPORTER_NS, indexerNamespace);\n      return resolver;\n    } catch (Exception e) {\n      wrapAndThrow(SEVERE, e);\n      // unreachable statement\n      return null;\n    }\n  }\n\n","sourceOld":"  private VariableResolver getVariableResolver() {\n    try {\n      VariableResolver resolver = null;\n      if(dataImporter != null && dataImporter.getCore() != null\n          && dataImporter.getCore().getResourceLoader().getCoreProperties() != null){\n        resolver =  new VariableResolver(dataImporter.getCore().getResourceLoader().getCoreProperties());\n      } else {\n        resolver = new VariableResolver();\n      }\n      resolver.setEvaluators(dataImporter.getEvaluators());\n      Map<String, Object> indexerNamespace = new HashMap<String, Object>();\n      if (persistedProperties.get(LAST_INDEX_TIME) != null) {\n        indexerNamespace.put(LAST_INDEX_TIME, persistedProperties.get(LAST_INDEX_TIME));\n      } else  {\n        // set epoch\n        indexerNamespace.put(LAST_INDEX_TIME, EPOCH);\n      }\n      indexerNamespace.put(INDEX_START_TIME, dataImporter.getIndexStartTime());\n      indexerNamespace.put(\"request\", new HashMap<String,Object>(reqParams.getRawParams()));\n      for (Entity entity : dataImporter.getConfig().getEntities()) {\n        String key = entity.getName() + \".\" + SolrWriter.LAST_INDEX_KEY;\n        Object lastIndex = persistedProperties.get(key);\n        if (lastIndex != null && lastIndex instanceof Date) {\n          indexerNamespace.put(key, lastIndex);\n        } else  {\n          indexerNamespace.put(key, EPOCH);\n        }\n      }\n      resolver.addNamespace(ConfigNameConstants.IMPORTER_NS_SHORT, indexerNamespace);\n      resolver.addNamespace(ConfigNameConstants.IMPORTER_NS, indexerNamespace);\n      return resolver;\n    } catch (Exception e) {\n      wrapAndThrow(SEVERE, e);\n      // unreachable statement\n      return null;\n    }\n  }\n\n","bugFix":["b4804614e0358954d5d9f51128fcf3cd79e6e25b","ee2d03087a1d5477a3ee9ce02e08967f4a979766","4ebea96bbe279c4a8dc0cd5cd1f987cc9b33436c"],"bugIntro":["e84a214a78cfdea9b86daf30ead5616378025f5b"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"37a0f60745e53927c4c876cfe5b5a58170f0646c","date":1373994005,"type":3,"author":"Han Jiang","isMerge":true,"pathNew":"solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/DocBuilder#getVariableResolver().mjava","pathOld":"solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/DocBuilder#getVariableResolver().mjava","sourceNew":"  private VariableResolver getVariableResolver() {\n    try {\n      VariableResolver resolver = null;\n      if(dataImporter != null && dataImporter.getCore() != null\n          && dataImporter.getCore().getResourceLoader().getCoreProperties() != null){\n        resolver =  new VariableResolver(dataImporter.getCore().getResourceLoader().getCoreProperties());\n      } else {\n        resolver = new VariableResolver();\n      }\n      resolver.setEvaluators(dataImporter.getEvaluators());\n      Map<String, Object> indexerNamespace = new HashMap<String, Object>();\n      if (persistedProperties.get(LAST_INDEX_TIME) != null) {\n        indexerNamespace.put(LAST_INDEX_TIME, persistedProperties.get(LAST_INDEX_TIME));\n      } else  {\n        // set epoch\n        indexerNamespace.put(LAST_INDEX_TIME, EPOCH);\n      }\n      indexerNamespace.put(INDEX_START_TIME, dataImporter.getIndexStartTime());\n      indexerNamespace.put(\"request\", new HashMap<String,Object>(reqParams.getRawParams()));\n      for (Entity entity : dataImporter.getConfig().getEntities()) {\n        Map<String, Object> entityNamespace = new HashMap<String, Object>();        \n        String key = SolrWriter.LAST_INDEX_KEY;\n        Object lastIndex = persistedProperties.get(entity.getName() + \".\" + key);\n        if (lastIndex != null) {\n          entityNamespace.put(SolrWriter.LAST_INDEX_KEY, lastIndex);\n        } else  {\n          entityNamespace.put(SolrWriter.LAST_INDEX_KEY, EPOCH);\n        }\n        indexerNamespace.put(entity.getName(), entityNamespace);\n      }\n      resolver.addNamespace(ConfigNameConstants.IMPORTER_NS_SHORT, indexerNamespace);\n      resolver.addNamespace(ConfigNameConstants.IMPORTER_NS, indexerNamespace);\n      return resolver;\n    } catch (Exception e) {\n      wrapAndThrow(SEVERE, e);\n      // unreachable statement\n      return null;\n    }\n  }\n\n","sourceOld":"  private VariableResolver getVariableResolver() {\n    try {\n      VariableResolver resolver = null;\n      if(dataImporter != null && dataImporter.getCore() != null\n          && dataImporter.getCore().getResourceLoader().getCoreProperties() != null){\n        resolver =  new VariableResolver(dataImporter.getCore().getResourceLoader().getCoreProperties());\n      } else {\n        resolver = new VariableResolver();\n      }\n      resolver.setEvaluators(dataImporter.getEvaluators());\n      Map<String, Object> indexerNamespace = new HashMap<String, Object>();\n      if (persistedProperties.get(LAST_INDEX_TIME) != null) {\n        indexerNamespace.put(LAST_INDEX_TIME, persistedProperties.get(LAST_INDEX_TIME));\n      } else  {\n        // set epoch\n        indexerNamespace.put(LAST_INDEX_TIME, EPOCH);\n      }\n      indexerNamespace.put(INDEX_START_TIME, dataImporter.getIndexStartTime());\n      indexerNamespace.put(\"request\", new HashMap<String,Object>(reqParams.getRawParams()));\n      for (Entity entity : dataImporter.getConfig().getEntities()) {\n        String key = entity.getName() + \".\" + SolrWriter.LAST_INDEX_KEY;\n        Object lastIndex = persistedProperties.get(key);\n        if (lastIndex != null && lastIndex instanceof Date) {\n          indexerNamespace.put(key, lastIndex);\n        } else  {\n          indexerNamespace.put(key, EPOCH);\n        }\n      }\n      resolver.addNamespace(ConfigNameConstants.IMPORTER_NS_SHORT, indexerNamespace);\n      resolver.addNamespace(ConfigNameConstants.IMPORTER_NS, indexerNamespace);\n      return resolver;\n    } catch (Exception e) {\n      wrapAndThrow(SEVERE, e);\n      // unreachable statement\n      return null;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e84a214a78cfdea9b86daf30ead5616378025f5b","date":1385102714,"type":3,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/DocBuilder#getVariableResolver().mjava","pathOld":"solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/DocBuilder#getVariableResolver().mjava","sourceNew":"  private VariableResolver getVariableResolver() {\n    try {\n      VariableResolver resolver = null;\n      String epoch = propWriter.convertDateToString(EPOCH);\n      if(dataImporter != null && dataImporter.getCore() != null\n          && dataImporter.getCore().getResourceLoader().getCoreProperties() != null){\n        resolver =  new VariableResolver(dataImporter.getCore().getResourceLoader().getCoreProperties());\n      } else {\n        resolver = new VariableResolver();\n      }\n      resolver.setEvaluators(dataImporter.getEvaluators());\n      Map<String, Object> indexerNamespace = new HashMap<String, Object>();\n      if (persistedProperties.get(LAST_INDEX_TIME) != null) {\n        indexerNamespace.put(LAST_INDEX_TIME, persistedProperties.get(LAST_INDEX_TIME));\n      } else  {\n        // set epoch\n        indexerNamespace.put(LAST_INDEX_TIME, epoch);\n      }\n      indexerNamespace.put(INDEX_START_TIME, dataImporter.getIndexStartTime());\n      indexerNamespace.put(\"request\", new HashMap<String,Object>(reqParams.getRawParams()));\n      for (Entity entity : dataImporter.getConfig().getEntities()) {\n        Map<String, Object> entityNamespace = new HashMap<String, Object>();        \n        String key = SolrWriter.LAST_INDEX_KEY;\n        Object lastIndex = persistedProperties.get(entity.getName() + \".\" + key);\n        if (lastIndex != null) {\n          entityNamespace.put(SolrWriter.LAST_INDEX_KEY, lastIndex);\n        } else  {\n          entityNamespace.put(SolrWriter.LAST_INDEX_KEY, epoch);\n        }\n        indexerNamespace.put(entity.getName(), entityNamespace);\n      }\n      resolver.addNamespace(ConfigNameConstants.IMPORTER_NS_SHORT, indexerNamespace);\n      resolver.addNamespace(ConfigNameConstants.IMPORTER_NS, indexerNamespace);\n      return resolver;\n    } catch (Exception e) {\n      wrapAndThrow(SEVERE, e);\n      // unreachable statement\n      return null;\n    }\n  }\n\n","sourceOld":"  private VariableResolver getVariableResolver() {\n    try {\n      VariableResolver resolver = null;\n      if(dataImporter != null && dataImporter.getCore() != null\n          && dataImporter.getCore().getResourceLoader().getCoreProperties() != null){\n        resolver =  new VariableResolver(dataImporter.getCore().getResourceLoader().getCoreProperties());\n      } else {\n        resolver = new VariableResolver();\n      }\n      resolver.setEvaluators(dataImporter.getEvaluators());\n      Map<String, Object> indexerNamespace = new HashMap<String, Object>();\n      if (persistedProperties.get(LAST_INDEX_TIME) != null) {\n        indexerNamespace.put(LAST_INDEX_TIME, persistedProperties.get(LAST_INDEX_TIME));\n      } else  {\n        // set epoch\n        indexerNamespace.put(LAST_INDEX_TIME, EPOCH);\n      }\n      indexerNamespace.put(INDEX_START_TIME, dataImporter.getIndexStartTime());\n      indexerNamespace.put(\"request\", new HashMap<String,Object>(reqParams.getRawParams()));\n      for (Entity entity : dataImporter.getConfig().getEntities()) {\n        Map<String, Object> entityNamespace = new HashMap<String, Object>();        \n        String key = SolrWriter.LAST_INDEX_KEY;\n        Object lastIndex = persistedProperties.get(entity.getName() + \".\" + key);\n        if (lastIndex != null) {\n          entityNamespace.put(SolrWriter.LAST_INDEX_KEY, lastIndex);\n        } else  {\n          entityNamespace.put(SolrWriter.LAST_INDEX_KEY, EPOCH);\n        }\n        indexerNamespace.put(entity.getName(), entityNamespace);\n      }\n      resolver.addNamespace(ConfigNameConstants.IMPORTER_NS_SHORT, indexerNamespace);\n      resolver.addNamespace(ConfigNameConstants.IMPORTER_NS, indexerNamespace);\n      return resolver;\n    } catch (Exception e) {\n      wrapAndThrow(SEVERE, e);\n      // unreachable statement\n      return null;\n    }\n  }\n\n","bugFix":["b4804614e0358954d5d9f51128fcf3cd79e6e25b","e28c473b1fded16de59a8fb37a0652fe2d27f702"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"74f45af4339b0daf7a95c820ab88c1aea74fbce0","date":1387475327,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/DocBuilder#getVariableResolver().mjava","pathOld":"solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/DocBuilder#getVariableResolver().mjava","sourceNew":"  private VariableResolver getVariableResolver() {\n    try {\n      VariableResolver resolver = null;\n      String epoch = propWriter.convertDateToString(EPOCH);\n      if(dataImporter != null && dataImporter.getCore() != null\n          && dataImporter.getCore().getResourceLoader().getCoreProperties() != null){\n        resolver =  new VariableResolver(dataImporter.getCore().getResourceLoader().getCoreProperties());\n      } else {\n        resolver = new VariableResolver();\n      }\n      resolver.setEvaluators(dataImporter.getEvaluators());\n      Map<String, Object> indexerNamespace = new HashMap<String, Object>();\n      if (persistedProperties.get(LAST_INDEX_TIME) != null) {\n        indexerNamespace.put(LAST_INDEX_TIME, persistedProperties.get(LAST_INDEX_TIME));\n      } else  {\n        // set epoch\n        indexerNamespace.put(LAST_INDEX_TIME, epoch);\n      }\n      indexerNamespace.put(INDEX_START_TIME, dataImporter.getIndexStartTime());\n      indexerNamespace.put(\"request\", new HashMap<String,Object>(reqParams.getRawParams()));\n      for (Entity entity : dataImporter.getConfig().getEntities()) {\n        Map<String, Object> entityNamespace = new HashMap<String, Object>();        \n        String key = SolrWriter.LAST_INDEX_KEY;\n        Object lastIndex = persistedProperties.get(entity.getName() + \".\" + key);\n        if (lastIndex != null) {\n          entityNamespace.put(SolrWriter.LAST_INDEX_KEY, lastIndex);\n        } else  {\n          entityNamespace.put(SolrWriter.LAST_INDEX_KEY, epoch);\n        }\n        indexerNamespace.put(entity.getName(), entityNamespace);\n      }\n      resolver.addNamespace(ConfigNameConstants.IMPORTER_NS_SHORT, indexerNamespace);\n      resolver.addNamespace(ConfigNameConstants.IMPORTER_NS, indexerNamespace);\n      return resolver;\n    } catch (Exception e) {\n      wrapAndThrow(SEVERE, e);\n      // unreachable statement\n      return null;\n    }\n  }\n\n","sourceOld":"  private VariableResolver getVariableResolver() {\n    try {\n      VariableResolver resolver = null;\n      if(dataImporter != null && dataImporter.getCore() != null\n          && dataImporter.getCore().getResourceLoader().getCoreProperties() != null){\n        resolver =  new VariableResolver(dataImporter.getCore().getResourceLoader().getCoreProperties());\n      } else {\n        resolver = new VariableResolver();\n      }\n      resolver.setEvaluators(dataImporter.getEvaluators());\n      Map<String, Object> indexerNamespace = new HashMap<String, Object>();\n      if (persistedProperties.get(LAST_INDEX_TIME) != null) {\n        indexerNamespace.put(LAST_INDEX_TIME, persistedProperties.get(LAST_INDEX_TIME));\n      } else  {\n        // set epoch\n        indexerNamespace.put(LAST_INDEX_TIME, EPOCH);\n      }\n      indexerNamespace.put(INDEX_START_TIME, dataImporter.getIndexStartTime());\n      indexerNamespace.put(\"request\", new HashMap<String,Object>(reqParams.getRawParams()));\n      for (Entity entity : dataImporter.getConfig().getEntities()) {\n        Map<String, Object> entityNamespace = new HashMap<String, Object>();        \n        String key = SolrWriter.LAST_INDEX_KEY;\n        Object lastIndex = persistedProperties.get(entity.getName() + \".\" + key);\n        if (lastIndex != null) {\n          entityNamespace.put(SolrWriter.LAST_INDEX_KEY, lastIndex);\n        } else  {\n          entityNamespace.put(SolrWriter.LAST_INDEX_KEY, EPOCH);\n        }\n        indexerNamespace.put(entity.getName(), entityNamespace);\n      }\n      resolver.addNamespace(ConfigNameConstants.IMPORTER_NS_SHORT, indexerNamespace);\n      resolver.addNamespace(ConfigNameConstants.IMPORTER_NS, indexerNamespace);\n      return resolver;\n    } catch (Exception e) {\n      wrapAndThrow(SEVERE, e);\n      // unreachable statement\n      return null;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"634f330c54fd3f9f491d52036dc3f40b4f4d8934","date":1394635157,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/DocBuilder#getVariableResolver().mjava","pathOld":"solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/DocBuilder#getVariableResolver().mjava","sourceNew":"  private VariableResolver getVariableResolver() {\n    try {\n      VariableResolver resolver = null;\n      String epoch = propWriter.convertDateToString(EPOCH);\n      if(dataImporter != null && dataImporter.getCore() != null\n          && dataImporter.getCore().getResourceLoader().getCoreProperties() != null){\n        resolver =  new VariableResolver(dataImporter.getCore().getResourceLoader().getCoreProperties());\n      } else {\n        resolver = new VariableResolver();\n      }\n      resolver.setEvaluators(dataImporter.getEvaluators());\n      Map<String, Object> indexerNamespace = new HashMap<>();\n      if (persistedProperties.get(LAST_INDEX_TIME) != null) {\n        indexerNamespace.put(LAST_INDEX_TIME, persistedProperties.get(LAST_INDEX_TIME));\n      } else  {\n        // set epoch\n        indexerNamespace.put(LAST_INDEX_TIME, epoch);\n      }\n      indexerNamespace.put(INDEX_START_TIME, dataImporter.getIndexStartTime());\n      indexerNamespace.put(\"request\", new HashMap<>(reqParams.getRawParams()));\n      for (Entity entity : dataImporter.getConfig().getEntities()) {\n        Map<String, Object> entityNamespace = new HashMap<>();\n        String key = SolrWriter.LAST_INDEX_KEY;\n        Object lastIndex = persistedProperties.get(entity.getName() + \".\" + key);\n        if (lastIndex != null) {\n          entityNamespace.put(SolrWriter.LAST_INDEX_KEY, lastIndex);\n        } else  {\n          entityNamespace.put(SolrWriter.LAST_INDEX_KEY, epoch);\n        }\n        indexerNamespace.put(entity.getName(), entityNamespace);\n      }\n      resolver.addNamespace(ConfigNameConstants.IMPORTER_NS_SHORT, indexerNamespace);\n      resolver.addNamespace(ConfigNameConstants.IMPORTER_NS, indexerNamespace);\n      return resolver;\n    } catch (Exception e) {\n      wrapAndThrow(SEVERE, e);\n      // unreachable statement\n      return null;\n    }\n  }\n\n","sourceOld":"  private VariableResolver getVariableResolver() {\n    try {\n      VariableResolver resolver = null;\n      String epoch = propWriter.convertDateToString(EPOCH);\n      if(dataImporter != null && dataImporter.getCore() != null\n          && dataImporter.getCore().getResourceLoader().getCoreProperties() != null){\n        resolver =  new VariableResolver(dataImporter.getCore().getResourceLoader().getCoreProperties());\n      } else {\n        resolver = new VariableResolver();\n      }\n      resolver.setEvaluators(dataImporter.getEvaluators());\n      Map<String, Object> indexerNamespace = new HashMap<String, Object>();\n      if (persistedProperties.get(LAST_INDEX_TIME) != null) {\n        indexerNamespace.put(LAST_INDEX_TIME, persistedProperties.get(LAST_INDEX_TIME));\n      } else  {\n        // set epoch\n        indexerNamespace.put(LAST_INDEX_TIME, epoch);\n      }\n      indexerNamespace.put(INDEX_START_TIME, dataImporter.getIndexStartTime());\n      indexerNamespace.put(\"request\", new HashMap<String,Object>(reqParams.getRawParams()));\n      for (Entity entity : dataImporter.getConfig().getEntities()) {\n        Map<String, Object> entityNamespace = new HashMap<String, Object>();        \n        String key = SolrWriter.LAST_INDEX_KEY;\n        Object lastIndex = persistedProperties.get(entity.getName() + \".\" + key);\n        if (lastIndex != null) {\n          entityNamespace.put(SolrWriter.LAST_INDEX_KEY, lastIndex);\n        } else  {\n          entityNamespace.put(SolrWriter.LAST_INDEX_KEY, epoch);\n        }\n        indexerNamespace.put(entity.getName(), entityNamespace);\n      }\n      resolver.addNamespace(ConfigNameConstants.IMPORTER_NS_SHORT, indexerNamespace);\n      resolver.addNamespace(ConfigNameConstants.IMPORTER_NS, indexerNamespace);\n      return resolver;\n    } catch (Exception e) {\n      wrapAndThrow(SEVERE, e);\n      // unreachable statement\n      return null;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8a416e707c4e347a8d254617fdf03e34c5451e94","date":1405963574,"type":3,"author":"Erik Hatcher","isMerge":false,"pathNew":"solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/DocBuilder#getVariableResolver().mjava","pathOld":"solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/DocBuilder#getVariableResolver().mjava","sourceNew":"  private VariableResolver getVariableResolver() {\n    try {\n      VariableResolver resolver = null;\n      String epoch = propWriter.convertDateToString(EPOCH);\n      if(dataImporter != null && dataImporter.getCore() != null\n          && dataImporter.getCore().getResourceLoader().getCoreProperties() != null){\n        resolver =  new VariableResolver(dataImporter.getCore().getResourceLoader().getCoreProperties());\n      } else {\n        resolver = new VariableResolver();\n      }\n      resolver.setEvaluators(dataImporter.getEvaluators());\n      Map<String, Object> indexerNamespace = new HashMap<>();\n      if (persistedProperties.get(LAST_INDEX_TIME) != null) {\n        indexerNamespace.put(LAST_INDEX_TIME, persistedProperties.get(LAST_INDEX_TIME));\n      } else  {\n        // set epoch\n        indexerNamespace.put(LAST_INDEX_TIME, epoch);\n      }\n      indexerNamespace.put(INDEX_START_TIME, dataImporter.getIndexStartTime());\n      indexerNamespace.put(\"request\", new HashMap<>(reqParams.getRawParams()));\n      indexerNamespace.put(\"handlerName\", dataImporter.getHandlerName());\n      for (Entity entity : dataImporter.getConfig().getEntities()) {\n        Map<String, Object> entityNamespace = new HashMap<>();\n        String key = SolrWriter.LAST_INDEX_KEY;\n        Object lastIndex = persistedProperties.get(entity.getName() + \".\" + key);\n        if (lastIndex != null) {\n          entityNamespace.put(SolrWriter.LAST_INDEX_KEY, lastIndex);\n        } else  {\n          entityNamespace.put(SolrWriter.LAST_INDEX_KEY, epoch);\n        }\n        indexerNamespace.put(entity.getName(), entityNamespace);\n      }\n      resolver.addNamespace(ConfigNameConstants.IMPORTER_NS_SHORT, indexerNamespace);\n      resolver.addNamespace(ConfigNameConstants.IMPORTER_NS, indexerNamespace);\n      return resolver;\n    } catch (Exception e) {\n      wrapAndThrow(SEVERE, e);\n      // unreachable statement\n      return null;\n    }\n  }\n\n","sourceOld":"  private VariableResolver getVariableResolver() {\n    try {\n      VariableResolver resolver = null;\n      String epoch = propWriter.convertDateToString(EPOCH);\n      if(dataImporter != null && dataImporter.getCore() != null\n          && dataImporter.getCore().getResourceLoader().getCoreProperties() != null){\n        resolver =  new VariableResolver(dataImporter.getCore().getResourceLoader().getCoreProperties());\n      } else {\n        resolver = new VariableResolver();\n      }\n      resolver.setEvaluators(dataImporter.getEvaluators());\n      Map<String, Object> indexerNamespace = new HashMap<>();\n      if (persistedProperties.get(LAST_INDEX_TIME) != null) {\n        indexerNamespace.put(LAST_INDEX_TIME, persistedProperties.get(LAST_INDEX_TIME));\n      } else  {\n        // set epoch\n        indexerNamespace.put(LAST_INDEX_TIME, epoch);\n      }\n      indexerNamespace.put(INDEX_START_TIME, dataImporter.getIndexStartTime());\n      indexerNamespace.put(\"request\", new HashMap<>(reqParams.getRawParams()));\n      for (Entity entity : dataImporter.getConfig().getEntities()) {\n        Map<String, Object> entityNamespace = new HashMap<>();\n        String key = SolrWriter.LAST_INDEX_KEY;\n        Object lastIndex = persistedProperties.get(entity.getName() + \".\" + key);\n        if (lastIndex != null) {\n          entityNamespace.put(SolrWriter.LAST_INDEX_KEY, lastIndex);\n        } else  {\n          entityNamespace.put(SolrWriter.LAST_INDEX_KEY, epoch);\n        }\n        indexerNamespace.put(entity.getName(), entityNamespace);\n      }\n      resolver.addNamespace(ConfigNameConstants.IMPORTER_NS_SHORT, indexerNamespace);\n      resolver.addNamespace(ConfigNameConstants.IMPORTER_NS, indexerNamespace);\n      return resolver;\n    } catch (Exception e) {\n      wrapAndThrow(SEVERE, e);\n      // unreachable statement\n      return null;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ec5a4e4c455009870c1cb8d21cf6671b8b78d3e3","date":1583932828,"type":3,"author":"David Smiley","isMerge":false,"pathNew":"solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/DocBuilder#getVariableResolver().mjava","pathOld":"solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/DocBuilder#getVariableResolver().mjava","sourceNew":"  private VariableResolver getVariableResolver() {\n    try {\n      VariableResolver resolver = null;\n      String epoch = propWriter.convertDateToString(EPOCH);\n      if(dataImporter != null && dataImporter.getCore() != null\n          && dataImporter.getCore().getCoreDescriptor().getSubstitutableProperties() != null){\n        resolver =  new VariableResolver(dataImporter.getCore().getCoreDescriptor().getSubstitutableProperties());\n      } else {\n        resolver = new VariableResolver();\n      }\n      resolver.setEvaluators(dataImporter.getEvaluators());\n      Map<String, Object> indexerNamespace = new HashMap<>();\n      if (persistedProperties.get(LAST_INDEX_TIME) != null) {\n        indexerNamespace.put(LAST_INDEX_TIME, persistedProperties.get(LAST_INDEX_TIME));\n      } else  {\n        // set epoch\n        indexerNamespace.put(LAST_INDEX_TIME, epoch);\n      }\n      indexerNamespace.put(INDEX_START_TIME, dataImporter.getIndexStartTime());\n      indexerNamespace.put(\"request\", new HashMap<>(reqParams.getRawParams()));\n      indexerNamespace.put(\"handlerName\", dataImporter.getHandlerName());\n      for (Entity entity : dataImporter.getConfig().getEntities()) {\n        Map<String, Object> entityNamespace = new HashMap<>();\n        String key = SolrWriter.LAST_INDEX_KEY;\n        Object lastIndex = persistedProperties.get(entity.getName() + \".\" + key);\n        if (lastIndex != null) {\n          entityNamespace.put(SolrWriter.LAST_INDEX_KEY, lastIndex);\n        } else  {\n          entityNamespace.put(SolrWriter.LAST_INDEX_KEY, epoch);\n        }\n        indexerNamespace.put(entity.getName(), entityNamespace);\n      }\n      resolver.addNamespace(ConfigNameConstants.IMPORTER_NS_SHORT, indexerNamespace);\n      resolver.addNamespace(ConfigNameConstants.IMPORTER_NS, indexerNamespace);\n      return resolver;\n    } catch (Exception e) {\n      wrapAndThrow(SEVERE, e);\n      // unreachable statement\n      return null;\n    }\n  }\n\n","sourceOld":"  private VariableResolver getVariableResolver() {\n    try {\n      VariableResolver resolver = null;\n      String epoch = propWriter.convertDateToString(EPOCH);\n      if(dataImporter != null && dataImporter.getCore() != null\n          && dataImporter.getCore().getResourceLoader().getCoreProperties() != null){\n        resolver =  new VariableResolver(dataImporter.getCore().getResourceLoader().getCoreProperties());\n      } else {\n        resolver = new VariableResolver();\n      }\n      resolver.setEvaluators(dataImporter.getEvaluators());\n      Map<String, Object> indexerNamespace = new HashMap<>();\n      if (persistedProperties.get(LAST_INDEX_TIME) != null) {\n        indexerNamespace.put(LAST_INDEX_TIME, persistedProperties.get(LAST_INDEX_TIME));\n      } else  {\n        // set epoch\n        indexerNamespace.put(LAST_INDEX_TIME, epoch);\n      }\n      indexerNamespace.put(INDEX_START_TIME, dataImporter.getIndexStartTime());\n      indexerNamespace.put(\"request\", new HashMap<>(reqParams.getRawParams()));\n      indexerNamespace.put(\"handlerName\", dataImporter.getHandlerName());\n      for (Entity entity : dataImporter.getConfig().getEntities()) {\n        Map<String, Object> entityNamespace = new HashMap<>();\n        String key = SolrWriter.LAST_INDEX_KEY;\n        Object lastIndex = persistedProperties.get(entity.getName() + \".\" + key);\n        if (lastIndex != null) {\n          entityNamespace.put(SolrWriter.LAST_INDEX_KEY, lastIndex);\n        } else  {\n          entityNamespace.put(SolrWriter.LAST_INDEX_KEY, epoch);\n        }\n        indexerNamespace.put(entity.getName(), entityNamespace);\n      }\n      resolver.addNamespace(ConfigNameConstants.IMPORTER_NS_SHORT, indexerNamespace);\n      resolver.addNamespace(ConfigNameConstants.IMPORTER_NS, indexerNamespace);\n      return resolver;\n    } catch (Exception e) {\n      wrapAndThrow(SEVERE, e);\n      // unreachable statement\n      return null;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d2c8f5c46c2501b61e2f55eb7ee59e6c5372290b","date":1598712724,"type":4,"author":"Alexandre Rafalovitch","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/DocBuilder#getVariableResolver().mjava","sourceNew":null,"sourceOld":"  private VariableResolver getVariableResolver() {\n    try {\n      VariableResolver resolver = null;\n      String epoch = propWriter.convertDateToString(EPOCH);\n      if(dataImporter != null && dataImporter.getCore() != null\n          && dataImporter.getCore().getCoreDescriptor().getSubstitutableProperties() != null){\n        resolver =  new VariableResolver(dataImporter.getCore().getCoreDescriptor().getSubstitutableProperties());\n      } else {\n        resolver = new VariableResolver();\n      }\n      resolver.setEvaluators(dataImporter.getEvaluators());\n      Map<String, Object> indexerNamespace = new HashMap<>();\n      if (persistedProperties.get(LAST_INDEX_TIME) != null) {\n        indexerNamespace.put(LAST_INDEX_TIME, persistedProperties.get(LAST_INDEX_TIME));\n      } else  {\n        // set epoch\n        indexerNamespace.put(LAST_INDEX_TIME, epoch);\n      }\n      indexerNamespace.put(INDEX_START_TIME, dataImporter.getIndexStartTime());\n      indexerNamespace.put(\"request\", new HashMap<>(reqParams.getRawParams()));\n      indexerNamespace.put(\"handlerName\", dataImporter.getHandlerName());\n      for (Entity entity : dataImporter.getConfig().getEntities()) {\n        Map<String, Object> entityNamespace = new HashMap<>();\n        String key = SolrWriter.LAST_INDEX_KEY;\n        Object lastIndex = persistedProperties.get(entity.getName() + \".\" + key);\n        if (lastIndex != null) {\n          entityNamespace.put(SolrWriter.LAST_INDEX_KEY, lastIndex);\n        } else  {\n          entityNamespace.put(SolrWriter.LAST_INDEX_KEY, epoch);\n        }\n        indexerNamespace.put(entity.getName(), entityNamespace);\n      }\n      resolver.addNamespace(ConfigNameConstants.IMPORTER_NS_SHORT, indexerNamespace);\n      resolver.addNamespace(ConfigNameConstants.IMPORTER_NS, indexerNamespace);\n      return resolver;\n    } catch (Exception e) {\n      wrapAndThrow(SEVERE, e);\n      // unreachable statement\n      return null;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"634f330c54fd3f9f491d52036dc3f40b4f4d8934":["e84a214a78cfdea9b86daf30ead5616378025f5b"],"8a416e707c4e347a8d254617fdf03e34c5451e94":["634f330c54fd3f9f491d52036dc3f40b4f4d8934"],"4ebea96bbe279c4a8dc0cd5cd1f987cc9b33436c":["17a92a6c6955645d64747d96f75583d591643464"],"7c7b0ae5716b6c2044195a818e9ae58205175659":["b4804614e0358954d5d9f51128fcf3cd79e6e25b"],"37a0f60745e53927c4c876cfe5b5a58170f0646c":["ba58b751368f9b74be72216b17abfb47ecb18588","e28c473b1fded16de59a8fb37a0652fe2d27f702"],"c26f00b574427b55127e869b935845554afde1fa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","5128b7b3b73fedff05fdc5ea2e6be53c1020bb91"],"407687e67faf6e1f02a211ca078d8e3eed631027":["4ebea96bbe279c4a8dc0cd5cd1f987cc9b33436c","7c7b0ae5716b6c2044195a818e9ae58205175659"],"17a92a6c6955645d64747d96f75583d591643464":["c26f00b574427b55127e869b935845554afde1fa"],"ba58b751368f9b74be72216b17abfb47ecb18588":["7c7b0ae5716b6c2044195a818e9ae58205175659"],"b4804614e0358954d5d9f51128fcf3cd79e6e25b":["4ebea96bbe279c4a8dc0cd5cd1f987cc9b33436c"],"d2c8f5c46c2501b61e2f55eb7ee59e6c5372290b":["ec5a4e4c455009870c1cb8d21cf6671b8b78d3e3"],"ec5a4e4c455009870c1cb8d21cf6671b8b78d3e3":["8a416e707c4e347a8d254617fdf03e34c5451e94"],"e84a214a78cfdea9b86daf30ead5616378025f5b":["e28c473b1fded16de59a8fb37a0652fe2d27f702"],"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"74f45af4339b0daf7a95c820ab88c1aea74fbce0":["e28c473b1fded16de59a8fb37a0652fe2d27f702","e84a214a78cfdea9b86daf30ead5616378025f5b"],"e28c473b1fded16de59a8fb37a0652fe2d27f702":["ba58b751368f9b74be72216b17abfb47ecb18588"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["d2c8f5c46c2501b61e2f55eb7ee59e6c5372290b"]},"commit2Childs":{"634f330c54fd3f9f491d52036dc3f40b4f4d8934":["8a416e707c4e347a8d254617fdf03e34c5451e94"],"8a416e707c4e347a8d254617fdf03e34c5451e94":["ec5a4e4c455009870c1cb8d21cf6671b8b78d3e3"],"4ebea96bbe279c4a8dc0cd5cd1f987cc9b33436c":["407687e67faf6e1f02a211ca078d8e3eed631027","b4804614e0358954d5d9f51128fcf3cd79e6e25b"],"7c7b0ae5716b6c2044195a818e9ae58205175659":["407687e67faf6e1f02a211ca078d8e3eed631027","ba58b751368f9b74be72216b17abfb47ecb18588"],"37a0f60745e53927c4c876cfe5b5a58170f0646c":[],"c26f00b574427b55127e869b935845554afde1fa":["17a92a6c6955645d64747d96f75583d591643464"],"407687e67faf6e1f02a211ca078d8e3eed631027":[],"17a92a6c6955645d64747d96f75583d591643464":["4ebea96bbe279c4a8dc0cd5cd1f987cc9b33436c"],"ba58b751368f9b74be72216b17abfb47ecb18588":["37a0f60745e53927c4c876cfe5b5a58170f0646c","e28c473b1fded16de59a8fb37a0652fe2d27f702"],"b4804614e0358954d5d9f51128fcf3cd79e6e25b":["7c7b0ae5716b6c2044195a818e9ae58205175659"],"d2c8f5c46c2501b61e2f55eb7ee59e6c5372290b":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"ec5a4e4c455009870c1cb8d21cf6671b8b78d3e3":["d2c8f5c46c2501b61e2f55eb7ee59e6c5372290b"],"e84a214a78cfdea9b86daf30ead5616378025f5b":["634f330c54fd3f9f491d52036dc3f40b4f4d8934","74f45af4339b0daf7a95c820ab88c1aea74fbce0"],"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91":["c26f00b574427b55127e869b935845554afde1fa"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c26f00b574427b55127e869b935845554afde1fa","5128b7b3b73fedff05fdc5ea2e6be53c1020bb91"],"74f45af4339b0daf7a95c820ab88c1aea74fbce0":[],"e28c473b1fded16de59a8fb37a0652fe2d27f702":["37a0f60745e53927c4c876cfe5b5a58170f0646c","e84a214a78cfdea9b86daf30ead5616378025f5b","74f45af4339b0daf7a95c820ab88c1aea74fbce0"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["37a0f60745e53927c4c876cfe5b5a58170f0646c","407687e67faf6e1f02a211ca078d8e3eed631027","74f45af4339b0daf7a95c820ab88c1aea74fbce0","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}