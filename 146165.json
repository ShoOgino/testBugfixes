{"path":"lucene/core/src/java/org/apache/lucene/index/TermsHash#TermsHash(DocumentsWriterPerThread,boolean,TermsHash).mjava","commits":[{"id":"52c7e49be259508735752fba88085255014a6ecf","date":1398706273,"type":1,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/TermsHash#TermsHash(DocumentsWriterPerThread,boolean,TermsHash).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/TermsHash#TermsHash(DocumentsWriterPerThread,TermsHashConsumer,boolean,TermsHash).mjava","sourceNew":"  TermsHash(final DocumentsWriterPerThread docWriter, boolean trackAllocations, TermsHash nextTermsHash) {\n    this.docState = docWriter.docState;\n    this.trackAllocations = trackAllocations; \n    this.nextTermsHash = nextTermsHash;\n    this.bytesUsed = trackAllocations ? docWriter.bytesUsed : Counter.newCounter();\n    intPool = new IntBlockPool(docWriter.intBlockAllocator);\n    bytePool = new ByteBlockPool(docWriter.byteBlockAllocator);\n\n    if (nextTermsHash != null) {\n      // We are primary\n      termBytePool = bytePool;\n      nextTermsHash.termBytePool = bytePool;\n    }\n  }\n\n","sourceOld":"  public TermsHash(final DocumentsWriterPerThread docWriter, final TermsHashConsumer consumer, boolean trackAllocations, final TermsHash nextTermsHash) {\n    this.docState = docWriter.docState;\n    this.consumer = consumer;\n    this.trackAllocations = trackAllocations; \n    this.nextTermsHash = nextTermsHash;\n    this.bytesUsed = trackAllocations ? docWriter.bytesUsed : Counter.newCounter();\n    intPool = new IntBlockPool(docWriter.intBlockAllocator);\n    bytePool = new ByteBlockPool(docWriter.byteBlockAllocator);\n\n    if (nextTermsHash != null) {\n      // We are primary\n      primary = true;\n      termBytePool = bytePool;\n      nextTermsHash.termBytePool = bytePool;\n    } else {\n      primary = false;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3394716f52b34ab259ad5247e7595d9f9db6e935","date":1398791921,"type":1,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/TermsHash#TermsHash(DocumentsWriterPerThread,boolean,TermsHash).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/TermsHash#TermsHash(DocumentsWriterPerThread,TermsHashConsumer,boolean,TermsHash).mjava","sourceNew":"  TermsHash(final DocumentsWriterPerThread docWriter, boolean trackAllocations, TermsHash nextTermsHash) {\n    this.docState = docWriter.docState;\n    this.trackAllocations = trackAllocations; \n    this.nextTermsHash = nextTermsHash;\n    this.bytesUsed = trackAllocations ? docWriter.bytesUsed : Counter.newCounter();\n    intPool = new IntBlockPool(docWriter.intBlockAllocator);\n    bytePool = new ByteBlockPool(docWriter.byteBlockAllocator);\n\n    if (nextTermsHash != null) {\n      // We are primary\n      termBytePool = bytePool;\n      nextTermsHash.termBytePool = bytePool;\n    }\n  }\n\n","sourceOld":"  public TermsHash(final DocumentsWriterPerThread docWriter, final TermsHashConsumer consumer, boolean trackAllocations, final TermsHash nextTermsHash) {\n    this.docState = docWriter.docState;\n    this.consumer = consumer;\n    this.trackAllocations = trackAllocations; \n    this.nextTermsHash = nextTermsHash;\n    this.bytesUsed = trackAllocations ? docWriter.bytesUsed : Counter.newCounter();\n    intPool = new IntBlockPool(docWriter.intBlockAllocator);\n    bytePool = new ByteBlockPool(docWriter.byteBlockAllocator);\n\n    if (nextTermsHash != null) {\n      // We are primary\n      primary = true;\n      termBytePool = bytePool;\n      nextTermsHash.termBytePool = bytePool;\n    } else {\n      primary = false;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c0cd85fde84cb318b4dc97710dcf15e2959a1bbe","date":1398844771,"type":1,"author":"Dawid Weiss","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/TermsHash#TermsHash(DocumentsWriterPerThread,boolean,TermsHash).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/TermsHash#TermsHash(DocumentsWriterPerThread,TermsHashConsumer,boolean,TermsHash).mjava","sourceNew":"  TermsHash(final DocumentsWriterPerThread docWriter, boolean trackAllocations, TermsHash nextTermsHash) {\n    this.docState = docWriter.docState;\n    this.trackAllocations = trackAllocations; \n    this.nextTermsHash = nextTermsHash;\n    this.bytesUsed = trackAllocations ? docWriter.bytesUsed : Counter.newCounter();\n    intPool = new IntBlockPool(docWriter.intBlockAllocator);\n    bytePool = new ByteBlockPool(docWriter.byteBlockAllocator);\n\n    if (nextTermsHash != null) {\n      // We are primary\n      termBytePool = bytePool;\n      nextTermsHash.termBytePool = bytePool;\n    }\n  }\n\n","sourceOld":"  public TermsHash(final DocumentsWriterPerThread docWriter, final TermsHashConsumer consumer, boolean trackAllocations, final TermsHash nextTermsHash) {\n    this.docState = docWriter.docState;\n    this.consumer = consumer;\n    this.trackAllocations = trackAllocations; \n    this.nextTermsHash = nextTermsHash;\n    this.bytesUsed = trackAllocations ? docWriter.bytesUsed : Counter.newCounter();\n    intPool = new IntBlockPool(docWriter.intBlockAllocator);\n    bytePool = new ByteBlockPool(docWriter.byteBlockAllocator);\n\n    if (nextTermsHash != null) {\n      // We are primary\n      primary = true;\n      termBytePool = bytePool;\n      nextTermsHash.termBytePool = bytePool;\n    } else {\n      primary = false;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f97270426d92300e08ac1bd1a4ef499ae02e88b7","date":1592503330,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/TermsHash#TermsHash(DocumentsWriterPerThread,boolean,TermsHash).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/TermsHash#TermsHash(DocumentsWriterPerThread,boolean,TermsHash).mjava","sourceNew":"  TermsHash(final DocumentsWriterPerThread docWriter, boolean trackAllocations, TermsHash nextTermsHash) {\n    this.trackAllocations = trackAllocations;\n    this.nextTermsHash = nextTermsHash;\n    this.bytesUsed = trackAllocations ? docWriter.bytesUsed : Counter.newCounter();\n    intPool = new IntBlockPool(docWriter.intBlockAllocator);\n    bytePool = new ByteBlockPool(docWriter.byteBlockAllocator);\n\n    if (nextTermsHash != null) {\n      // We are primary\n      termBytePool = bytePool;\n      nextTermsHash.termBytePool = bytePool;\n    }\n  }\n\n","sourceOld":"  TermsHash(final DocumentsWriterPerThread docWriter, boolean trackAllocations, TermsHash nextTermsHash) {\n    this.docState = docWriter.docState;\n    this.trackAllocations = trackAllocations; \n    this.nextTermsHash = nextTermsHash;\n    this.bytesUsed = trackAllocations ? docWriter.bytesUsed : Counter.newCounter();\n    intPool = new IntBlockPool(docWriter.intBlockAllocator);\n    bytePool = new ByteBlockPool(docWriter.byteBlockAllocator);\n\n    if (nextTermsHash != null) {\n      // We are primary\n      termBytePool = bytePool;\n      nextTermsHash.termBytePool = bytePool;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6926606ec5e0dd8d4ec79166d39a3b4ddb862bf4","date":1599581893,"type":5,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/TermsHash#TermsHash(DocumentsWriterPerThread,Counter,TermsHash).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/TermsHash#TermsHash(DocumentsWriterPerThread,boolean,TermsHash).mjava","sourceNew":"  TermsHash(final DocumentsWriterPerThread docWriter, Counter bytesUsed, TermsHash nextTermsHash) {\n    this.nextTermsHash = nextTermsHash;\n    this.bytesUsed = bytesUsed;\n    intPool = new IntBlockPool(docWriter.intBlockAllocator);\n    bytePool = new ByteBlockPool(docWriter.byteBlockAllocator);\n\n    if (nextTermsHash != null) {\n      // We are primary\n      termBytePool = bytePool;\n      nextTermsHash.termBytePool = bytePool;\n    }\n  }\n\n","sourceOld":"  TermsHash(final DocumentsWriterPerThread docWriter, boolean trackAllocations, TermsHash nextTermsHash) {\n    this.trackAllocations = trackAllocations;\n    this.nextTermsHash = nextTermsHash;\n    this.bytesUsed = trackAllocations ? docWriter.bytesUsed : Counter.newCounter();\n    intPool = new IntBlockPool(docWriter.intBlockAllocator);\n    bytePool = new ByteBlockPool(docWriter.byteBlockAllocator);\n\n    if (nextTermsHash != null) {\n      // We are primary\n      termBytePool = bytePool;\n      nextTermsHash.termBytePool = bytePool;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3394716f52b34ab259ad5247e7595d9f9db6e935":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","52c7e49be259508735752fba88085255014a6ecf"],"6926606ec5e0dd8d4ec79166d39a3b4ddb862bf4":["f97270426d92300e08ac1bd1a4ef499ae02e88b7"],"c0cd85fde84cb318b4dc97710dcf15e2959a1bbe":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","3394716f52b34ab259ad5247e7595d9f9db6e935"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"f97270426d92300e08ac1bd1a4ef499ae02e88b7":["3394716f52b34ab259ad5247e7595d9f9db6e935"],"52c7e49be259508735752fba88085255014a6ecf":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["6926606ec5e0dd8d4ec79166d39a3b4ddb862bf4"]},"commit2Childs":{"3394716f52b34ab259ad5247e7595d9f9db6e935":["c0cd85fde84cb318b4dc97710dcf15e2959a1bbe","f97270426d92300e08ac1bd1a4ef499ae02e88b7"],"6926606ec5e0dd8d4ec79166d39a3b4ddb862bf4":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"c0cd85fde84cb318b4dc97710dcf15e2959a1bbe":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3394716f52b34ab259ad5247e7595d9f9db6e935","c0cd85fde84cb318b4dc97710dcf15e2959a1bbe","52c7e49be259508735752fba88085255014a6ecf"],"52c7e49be259508735752fba88085255014a6ecf":["3394716f52b34ab259ad5247e7595d9f9db6e935"],"f97270426d92300e08ac1bd1a4ef499ae02e88b7":["6926606ec5e0dd8d4ec79166d39a3b4ddb862bf4"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["c0cd85fde84cb318b4dc97710dcf15e2959a1bbe","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}