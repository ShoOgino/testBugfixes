{"path":"lucene/core/src/java/org/apache/lucene/util/ArrayUtil#parse(char[],int,int,int,boolean).mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/ArrayUtil#parse(char[],int,int,int,boolean).mjava","pathOld":"lucene/src/java/org/apache/lucene/util/ArrayUtil#parse(char[],int,int,int,boolean).mjava","sourceNew":"  private static int parse(char[] chars, int offset, int len, int radix,\n                           boolean negative) throws NumberFormatException {\n    int max = Integer.MIN_VALUE / radix;\n    int result = 0;\n    for (int i = 0; i < len; i++){\n      int digit = Character.digit(chars[i + offset], radix);\n      if (digit == -1) {\n        throw new NumberFormatException(\"Unable to parse\");\n      }\n      if (max > result) {\n        throw new NumberFormatException(\"Unable to parse\");\n      }\n      int next = result * radix - digit;\n      if (next > result) {\n        throw new NumberFormatException(\"Unable to parse\");\n      }\n      result = next;\n    }\n    /*while (offset < len) {\n\n    }*/\n    if (!negative) {\n      result = -result;\n      if (result < 0) {\n        throw new NumberFormatException(\"Unable to parse\");\n      }\n    }\n    return result;\n  }\n\n","sourceOld":"  private static int parse(char[] chars, int offset, int len, int radix,\n                           boolean negative) throws NumberFormatException {\n    int max = Integer.MIN_VALUE / radix;\n    int result = 0;\n    for (int i = 0; i < len; i++){\n      int digit = Character.digit(chars[i + offset], radix);\n      if (digit == -1) {\n        throw new NumberFormatException(\"Unable to parse\");\n      }\n      if (max > result) {\n        throw new NumberFormatException(\"Unable to parse\");\n      }\n      int next = result * radix - digit;\n      if (next > result) {\n        throw new NumberFormatException(\"Unable to parse\");\n      }\n      result = next;\n    }\n    /*while (offset < len) {\n\n    }*/\n    if (!negative) {\n      result = -result;\n      if (result < 0) {\n        throw new NumberFormatException(\"Unable to parse\");\n      }\n    }\n    return result;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"]},"commit2Childs":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}