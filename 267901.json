{"path":"lucene/src/java/org/apache/lucene/store/Directory#copy(Directory,String,String).mjava","commits":[{"id":"fb10b6bcde550b87d8f10e5f010bd8f3021023b6","date":1274974592,"type":0,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/store/Directory#copy(Directory,String,String).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Copies the file <i>src</i> to {@link Directory} <i>to</i> under the new\n   * file name <i>dest</i>.\n   * <p>\n   * If you want to copy the entire source directory to the destination one, you\n   * can do so like this:\n   * \n   * <pre>\n   * Directory to; // the directory to copy to\n   * for (String file : dir.listAll()) {\n   *   dir.copy(to, file, newFile); // newFile can be either file, or a new name\n   * }\n   * </pre>\n   * <p>\n   * <b>NOTE:</b> this method does not check whether <i>dest<i> exist and will\n   * overwrite it if it does.\n   */\n  public void copy(Directory to, String src, String dest) throws IOException {\n    IndexOutput os = null;\n    IndexInput is = null;\n    IOException priorException = null;\n    int bufSize = BufferedIndexOutput.BUFFER_SIZE;\n    byte[] buf = new byte[bufSize];\n    try {\n      // create file in dest directory\n      os = to.createOutput(dest);\n      // read current file\n      is = openInput(src);\n      // and copy to dest directory\n      long len = is.length();\n      long numRead = 0;\n      while (numRead < len) {\n        long left = len - numRead;\n        int toRead = (int) (bufSize < left ? bufSize : left);\n        is.readBytes(buf, 0, toRead);\n        os.writeBytes(buf, toRead);\n        numRead += toRead;\n      }\n    } catch (IOException ioe) {\n      priorException = ioe;\n    } finally {\n      IOUtils.closeSafely(priorException, os, is);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d05b801583d7568b68b06c67b22136d2a3b3e3bb","date":1280470393,"type":3,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/store/Directory#copy(Directory,String,String).mjava","pathOld":"lucene/src/java/org/apache/lucene/store/Directory#copy(Directory,String,String).mjava","sourceNew":"  /**\n   * Copies the file <i>src</i> to {@link Directory} <i>to</i> under the new\n   * file name <i>dest</i>.\n   * <p>\n   * If you want to copy the entire source directory to the destination one, you\n   * can do so like this:\n   * \n   * <pre>\n   * Directory to; // the directory to copy to\n   * for (String file : dir.listAll()) {\n   *   dir.copy(to, file, newFile); // newFile can be either file, or a new name\n   * }\n   * </pre>\n   * <p>\n   * <b>NOTE:</b> this method does not check whether <i>dest<i> exist and will\n   * overwrite it if it does.\n   */\n  public void copy(Directory to, String src, String dest) throws IOException {\n    IndexOutput os = to.createOutput(dest);\n    IndexInput is = openInput(src);\n    IOException priorException = null;\n    try {\n      is.copyBytes(os, is.length());\n    } catch (IOException ioe) {\n      priorException = ioe;\n    } finally {\n      IOUtils.closeSafely(priorException, os, is);\n    }\n  }\n\n","sourceOld":"  /**\n   * Copies the file <i>src</i> to {@link Directory} <i>to</i> under the new\n   * file name <i>dest</i>.\n   * <p>\n   * If you want to copy the entire source directory to the destination one, you\n   * can do so like this:\n   * \n   * <pre>\n   * Directory to; // the directory to copy to\n   * for (String file : dir.listAll()) {\n   *   dir.copy(to, file, newFile); // newFile can be either file, or a new name\n   * }\n   * </pre>\n   * <p>\n   * <b>NOTE:</b> this method does not check whether <i>dest<i> exist and will\n   * overwrite it if it does.\n   */\n  public void copy(Directory to, String src, String dest) throws IOException {\n    IndexOutput os = null;\n    IndexInput is = null;\n    IOException priorException = null;\n    int bufSize = BufferedIndexOutput.BUFFER_SIZE;\n    byte[] buf = new byte[bufSize];\n    try {\n      // create file in dest directory\n      os = to.createOutput(dest);\n      // read current file\n      is = openInput(src);\n      // and copy to dest directory\n      long len = is.length();\n      long numRead = 0;\n      while (numRead < len) {\n        long left = len - numRead;\n        int toRead = (int) (bufSize < left ? bufSize : left);\n        is.readBytes(buf, 0, toRead);\n        os.writeBytes(buf, toRead);\n        numRead += toRead;\n      }\n    } catch (IOException ioe) {\n      priorException = ioe;\n    } finally {\n      IOUtils.closeSafely(priorException, os, is);\n    }\n  }\n\n","bugFix":null,"bugIntro":["66ad5d52334c6be735b490059924589a69b97bd6","66ad5d52334c6be735b490059924589a69b97bd6","66ad5d52334c6be735b490059924589a69b97bd6","c3c8e14c247e6a0efd33802be31a4a5fcc4bc36a"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","date":1292920096,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/store/Directory#copy(Directory,String,String).mjava","pathOld":"lucene/src/java/org/apache/lucene/store/Directory#copy(Directory,String,String).mjava","sourceNew":"  /**\n   * Copies the file <i>src</i> to {@link Directory} <i>to</i> under the new\n   * file name <i>dest</i>.\n   * <p>\n   * If you want to copy the entire source directory to the destination one, you\n   * can do so like this:\n   * \n   * <pre>\n   * Directory to; // the directory to copy to\n   * for (String file : dir.listAll()) {\n   *   dir.copy(to, file, newFile); // newFile can be either file, or a new name\n   * }\n   * </pre>\n   * <p>\n   * <b>NOTE:</b> this method does not check whether <i>dest<i> exist and will\n   * overwrite it if it does.\n   */\n  public void copy(Directory to, String src, String dest) throws IOException {\n    IndexOutput os = to.createOutput(dest);\n    IndexInput is = openInput(src);\n    IOException priorException = null;\n    try {\n      is.copyBytes(os, is.length());\n    } catch (IOException ioe) {\n      priorException = ioe;\n    } finally {\n      IOUtils.closeSafely(priorException, os, is);\n    }\n  }\n\n","sourceOld":"  /**\n   * Copies the file <i>src</i> to {@link Directory} <i>to</i> under the new\n   * file name <i>dest</i>.\n   * <p>\n   * If you want to copy the entire source directory to the destination one, you\n   * can do so like this:\n   * \n   * <pre>\n   * Directory to; // the directory to copy to\n   * for (String file : dir.listAll()) {\n   *   dir.copy(to, file, newFile); // newFile can be either file, or a new name\n   * }\n   * </pre>\n   * <p>\n   * <b>NOTE:</b> this method does not check whether <i>dest<i> exist and will\n   * overwrite it if it does.\n   */\n  public void copy(Directory to, String src, String dest) throws IOException {\n    IndexOutput os = null;\n    IndexInput is = null;\n    IOException priorException = null;\n    int bufSize = BufferedIndexOutput.BUFFER_SIZE;\n    byte[] buf = new byte[bufSize];\n    try {\n      // create file in dest directory\n      os = to.createOutput(dest);\n      // read current file\n      is = openInput(src);\n      // and copy to dest directory\n      long len = is.length();\n      long numRead = 0;\n      while (numRead < len) {\n        long left = len - numRead;\n        int toRead = (int) (bufSize < left ? bufSize : left);\n        is.readBytes(buf, 0, toRead);\n        os.writeBytes(buf, toRead);\n        numRead += toRead;\n      }\n    } catch (IOException ioe) {\n      priorException = ioe;\n    } finally {\n      IOUtils.closeSafely(priorException, os, is);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"639c36565ce03aed5b0fce7c9e4448e53a1f7efd","date":1308580104,"type":5,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/store/Directory#copy(Directory,String,String,IOContext).mjava","pathOld":"lucene/src/java/org/apache/lucene/store/Directory#copy(Directory,String,String).mjava","sourceNew":"  /**\n   * Copies the file <i>src</i> to {@link Directory} <i>to</i> under the new\n   * file name <i>dest</i>.\n   * <p>\n   * If you want to copy the entire source directory to the destination one, you\n   * can do so like this:\n   * \n   * <pre>\n   * Directory to; // the directory to copy to\n   * for (String file : dir.listAll()) {\n   *   dir.copy(to, file, newFile); // newFile can be either file, or a new name\n   * }\n   * </pre>\n   * <p>\n   * <b>NOTE:</b> this method does not check whether <i>dest<i> exist and will\n   * overwrite it if it does.\n   */\n  public void copy(Directory to, String src, String dest, IOContext context) throws IOException {\n    IndexOutput os = to.createOutput(dest, context);\n    IndexInput is = openInput(src, context);\n    IOException priorException = null;\n    try {\n      is.copyBytes(os, is.length());\n    } catch (IOException ioe) {\n      priorException = ioe;\n    } finally {\n      IOUtils.closeSafely(priorException, os, is);\n    }\n  }\n\n","sourceOld":"  /**\n   * Copies the file <i>src</i> to {@link Directory} <i>to</i> under the new\n   * file name <i>dest</i>.\n   * <p>\n   * If you want to copy the entire source directory to the destination one, you\n   * can do so like this:\n   * \n   * <pre>\n   * Directory to; // the directory to copy to\n   * for (String file : dir.listAll()) {\n   *   dir.copy(to, file, newFile); // newFile can be either file, or a new name\n   * }\n   * </pre>\n   * <p>\n   * <b>NOTE:</b> this method does not check whether <i>dest<i> exist and will\n   * overwrite it if it does.\n   */\n  public void copy(Directory to, String src, String dest) throws IOException {\n    IndexOutput os = to.createOutput(dest);\n    IndexInput is = openInput(src);\n    IOException priorException = null;\n    try {\n      is.copyBytes(os, is.length());\n    } catch (IOException ioe) {\n      priorException = ioe;\n    } finally {\n      IOUtils.closeSafely(priorException, os, is);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"c3c8e14c247e6a0efd33802be31a4a5fcc4bc36a","date":1309253953,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/store/Directory#copy(Directory,String,String).mjava","pathOld":"lucene/src/java/org/apache/lucene/store/Directory#copy(Directory,String,String).mjava","sourceNew":"  /**\n   * Copies the file <i>src</i> to {@link Directory} <i>to</i> under the new\n   * file name <i>dest</i>.\n   * <p>\n   * If you want to copy the entire source directory to the destination one, you\n   * can do so like this:\n   * \n   * <pre>\n   * Directory to; // the directory to copy to\n   * for (String file : dir.listAll()) {\n   *   dir.copy(to, file, newFile); // newFile can be either file, or a new name\n   * }\n   * </pre>\n   * <p>\n   * <b>NOTE:</b> this method does not check whether <i>dest<i> exist and will\n   * overwrite it if it does.\n   */\n  public void copy(Directory to, String src, String dest) throws IOException {\n    IndexOutput os = null;\n    IndexInput is = null;\n    IOException priorException = null;\n    try {\n      os = to.createOutput(dest);\n      is = openInput(src);\n      is.copyBytes(os, is.length());\n    } catch (IOException ioe) {\n      priorException = ioe;\n    } finally {\n      IOUtils.closeSafely(priorException, os, is);\n    }\n  }\n\n","sourceOld":"  /**\n   * Copies the file <i>src</i> to {@link Directory} <i>to</i> under the new\n   * file name <i>dest</i>.\n   * <p>\n   * If you want to copy the entire source directory to the destination one, you\n   * can do so like this:\n   * \n   * <pre>\n   * Directory to; // the directory to copy to\n   * for (String file : dir.listAll()) {\n   *   dir.copy(to, file, newFile); // newFile can be either file, or a new name\n   * }\n   * </pre>\n   * <p>\n   * <b>NOTE:</b> this method does not check whether <i>dest<i> exist and will\n   * overwrite it if it does.\n   */\n  public void copy(Directory to, String src, String dest) throws IOException {\n    IndexOutput os = to.createOutput(dest);\n    IndexInput is = openInput(src);\n    IOException priorException = null;\n    try {\n      is.copyBytes(os, is.length());\n    } catch (IOException ioe) {\n      priorException = ioe;\n    } finally {\n      IOUtils.closeSafely(priorException, os, is);\n    }\n  }\n\n","bugFix":["d05b801583d7568b68b06c67b22136d2a3b3e3bb"],"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"2553b00f699380c64959ccb27991289aae87be2e","date":1309290151,"type":3,"author":"Steven Rowe","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/store/Directory#copy(Directory,String,String).mjava","pathOld":"lucene/src/java/org/apache/lucene/store/Directory#copy(Directory,String,String).mjava","sourceNew":"  /**\n   * Copies the file <i>src</i> to {@link Directory} <i>to</i> under the new\n   * file name <i>dest</i>.\n   * <p>\n   * If you want to copy the entire source directory to the destination one, you\n   * can do so like this:\n   * \n   * <pre>\n   * Directory to; // the directory to copy to\n   * for (String file : dir.listAll()) {\n   *   dir.copy(to, file, newFile); // newFile can be either file, or a new name\n   * }\n   * </pre>\n   * <p>\n   * <b>NOTE:</b> this method does not check whether <i>dest<i> exist and will\n   * overwrite it if it does.\n   */\n  public void copy(Directory to, String src, String dest) throws IOException {\n    IndexOutput os = null;\n    IndexInput is = null;\n    IOException priorException = null;\n    try {\n      os = to.createOutput(dest);\n      is = openInput(src);\n      is.copyBytes(os, is.length());\n    } catch (IOException ioe) {\n      priorException = ioe;\n    } finally {\n      IOUtils.closeSafely(priorException, os, is);\n    }\n  }\n\n","sourceOld":"  /**\n   * Copies the file <i>src</i> to {@link Directory} <i>to</i> under the new\n   * file name <i>dest</i>.\n   * <p>\n   * If you want to copy the entire source directory to the destination one, you\n   * can do so like this:\n   * \n   * <pre>\n   * Directory to; // the directory to copy to\n   * for (String file : dir.listAll()) {\n   *   dir.copy(to, file, newFile); // newFile can be either file, or a new name\n   * }\n   * </pre>\n   * <p>\n   * <b>NOTE:</b> this method does not check whether <i>dest<i> exist and will\n   * overwrite it if it does.\n   */\n  public void copy(Directory to, String src, String dest) throws IOException {\n    IndexOutput os = to.createOutput(dest);\n    IndexInput is = openInput(src);\n    IOException priorException = null;\n    try {\n      is.copyBytes(os, is.length());\n    } catch (IOException ioe) {\n      priorException = ioe;\n    } finally {\n      IOUtils.closeSafely(priorException, os, is);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ddc4c914be86e34b54f70023f45a60fa7f04e929","date":1310115160,"type":5,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/store/Directory#copy(Directory,String,String,IOContext).mjava","pathOld":"lucene/src/java/org/apache/lucene/store/Directory#copy(Directory,String,String).mjava","sourceNew":"  /**\n   * Copies the file <i>src</i> to {@link Directory} <i>to</i> under the new\n   * file name <i>dest</i>.\n   * <p>\n   * If you want to copy the entire source directory to the destination one, you\n   * can do so like this:\n   * \n   * <pre>\n   * Directory to; // the directory to copy to\n   * for (String file : dir.listAll()) {\n   *   dir.copy(to, file, newFile); // newFile can be either file, or a new name\n   * }\n   * </pre>\n   * <p>\n   * <b>NOTE:</b> this method does not check whether <i>dest<i> exist and will\n   * overwrite it if it does.\n   */\n  public void copy(Directory to, String src, String dest, IOContext context) throws IOException {\n    IndexOutput os = null;\n    IndexInput is = null;\n    IOException priorException = null;\n    try {\n      os = to.createOutput(dest, context);\n      is = openInput(src, context);\n      is.copyBytes(os, is.length());\n    } catch (IOException ioe) {\n      priorException = ioe;\n    } finally {\n      IOUtils.closeSafely(priorException, os, is);\n    }\n  }\n\n","sourceOld":"  /**\n   * Copies the file <i>src</i> to {@link Directory} <i>to</i> under the new\n   * file name <i>dest</i>.\n   * <p>\n   * If you want to copy the entire source directory to the destination one, you\n   * can do so like this:\n   * \n   * <pre>\n   * Directory to; // the directory to copy to\n   * for (String file : dir.listAll()) {\n   *   dir.copy(to, file, newFile); // newFile can be either file, or a new name\n   * }\n   * </pre>\n   * <p>\n   * <b>NOTE:</b> this method does not check whether <i>dest<i> exist and will\n   * overwrite it if it does.\n   */\n  public void copy(Directory to, String src, String dest) throws IOException {\n    IndexOutput os = null;\n    IndexInput is = null;\n    IOException priorException = null;\n    try {\n      os = to.createOutput(dest);\n      is = openInput(src);\n      is.copyBytes(os, is.length());\n    } catch (IOException ioe) {\n      priorException = ioe;\n    } finally {\n      IOUtils.closeSafely(priorException, os, is);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"5d004d0e0b3f65bb40da76d476d659d7888270e8","date":1310158940,"type":5,"author":"Steven Rowe","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/store/Directory#copy(Directory,String,String,IOContext).mjava","pathOld":"lucene/src/java/org/apache/lucene/store/Directory#copy(Directory,String,String).mjava","sourceNew":"  /**\n   * Copies the file <i>src</i> to {@link Directory} <i>to</i> under the new\n   * file name <i>dest</i>.\n   * <p>\n   * If you want to copy the entire source directory to the destination one, you\n   * can do so like this:\n   * \n   * <pre>\n   * Directory to; // the directory to copy to\n   * for (String file : dir.listAll()) {\n   *   dir.copy(to, file, newFile); // newFile can be either file, or a new name\n   * }\n   * </pre>\n   * <p>\n   * <b>NOTE:</b> this method does not check whether <i>dest<i> exist and will\n   * overwrite it if it does.\n   */\n  public void copy(Directory to, String src, String dest, IOContext context) throws IOException {\n    IndexOutput os = null;\n    IndexInput is = null;\n    IOException priorException = null;\n    try {\n      os = to.createOutput(dest, context);\n      is = openInput(src, context);\n      is.copyBytes(os, is.length());\n    } catch (IOException ioe) {\n      priorException = ioe;\n    } finally {\n      IOUtils.closeSafely(priorException, os, is);\n    }\n  }\n\n","sourceOld":"  /**\n   * Copies the file <i>src</i> to {@link Directory} <i>to</i> under the new\n   * file name <i>dest</i>.\n   * <p>\n   * If you want to copy the entire source directory to the destination one, you\n   * can do so like this:\n   * \n   * <pre>\n   * Directory to; // the directory to copy to\n   * for (String file : dir.listAll()) {\n   *   dir.copy(to, file, newFile); // newFile can be either file, or a new name\n   * }\n   * </pre>\n   * <p>\n   * <b>NOTE:</b> this method does not check whether <i>dest<i> exist and will\n   * overwrite it if it does.\n   */\n  public void copy(Directory to, String src, String dest) throws IOException {\n    IndexOutput os = null;\n    IndexInput is = null;\n    IOException priorException = null;\n    try {\n      os = to.createOutput(dest);\n      is = openInput(src);\n      is.copyBytes(os, is.length());\n    } catch (IOException ioe) {\n      priorException = ioe;\n    } finally {\n      IOUtils.closeSafely(priorException, os, is);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"d05b801583d7568b68b06c67b22136d2a3b3e3bb":["fb10b6bcde550b87d8f10e5f010bd8f3021023b6"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"639c36565ce03aed5b0fce7c9e4448e53a1f7efd":["d05b801583d7568b68b06c67b22136d2a3b3e3bb"],"5d004d0e0b3f65bb40da76d476d659d7888270e8":["2553b00f699380c64959ccb27991289aae87be2e","ddc4c914be86e34b54f70023f45a60fa7f04e929"],"ddc4c914be86e34b54f70023f45a60fa7f04e929":["c3c8e14c247e6a0efd33802be31a4a5fcc4bc36a","639c36565ce03aed5b0fce7c9e4448e53a1f7efd"],"2553b00f699380c64959ccb27991289aae87be2e":["d05b801583d7568b68b06c67b22136d2a3b3e3bb","c3c8e14c247e6a0efd33802be31a4a5fcc4bc36a"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["fb10b6bcde550b87d8f10e5f010bd8f3021023b6","d05b801583d7568b68b06c67b22136d2a3b3e3bb"],"c3c8e14c247e6a0efd33802be31a4a5fcc4bc36a":["d05b801583d7568b68b06c67b22136d2a3b3e3bb"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["ddc4c914be86e34b54f70023f45a60fa7f04e929"],"fb10b6bcde550b87d8f10e5f010bd8f3021023b6":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"d05b801583d7568b68b06c67b22136d2a3b3e3bb":["639c36565ce03aed5b0fce7c9e4448e53a1f7efd","2553b00f699380c64959ccb27991289aae87be2e","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","c3c8e14c247e6a0efd33802be31a4a5fcc4bc36a"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["fb10b6bcde550b87d8f10e5f010bd8f3021023b6"],"639c36565ce03aed5b0fce7c9e4448e53a1f7efd":["ddc4c914be86e34b54f70023f45a60fa7f04e929"],"5d004d0e0b3f65bb40da76d476d659d7888270e8":[],"ddc4c914be86e34b54f70023f45a60fa7f04e929":["5d004d0e0b3f65bb40da76d476d659d7888270e8","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"2553b00f699380c64959ccb27991289aae87be2e":["5d004d0e0b3f65bb40da76d476d659d7888270e8"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":[],"c3c8e14c247e6a0efd33802be31a4a5fcc4bc36a":["ddc4c914be86e34b54f70023f45a60fa7f04e929","2553b00f699380c64959ccb27991289aae87be2e"],"fb10b6bcde550b87d8f10e5f010bd8f3021023b6":["d05b801583d7568b68b06c67b22136d2a3b3e3bb","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["5d004d0e0b3f65bb40da76d476d659d7888270e8","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}