{"path":"contrib/benchmark/src/java/org/apache/lucene/benchmark/byTask/feeds/DocMaker#printDocStatistics().mjava","commits":[{"id":"b2e70b697d9f5a6130848741a4f0cdc08a1fe258","date":1168661303,"type":0,"author":"Grant Ingersoll","isMerge":false,"pathNew":"contrib/benchmark/src/java/org/apache/lucene/benchmark/byTask/feeds/DocMaker#printDocStatistics().mjava","pathOld":"/dev/null","sourceNew":"  /** Print some statistics on docs available/added/etc. */ \r\n  public void printDocStatistics();\r\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3738fa43eaa87dc7b393fe98b04cde1019e20bac","date":1175557034,"type":3,"author":"Otis Gospodnetic","isMerge":false,"pathNew":"contrib/benchmark/src/java/org/apache/lucene/benchmark/byTask/feeds/DocMaker#printDocStatistics().mjava","pathOld":"contrib/benchmark/src/java/org/apache/lucene/benchmark/byTask/feeds/DocMaker#printDocStatistics().mjava","sourceNew":"  /** Print some statistics on docs available/added/etc. */ \n  public void printDocStatistics();\n\n","sourceOld":"  /** Print some statistics on docs available/added/etc. */ \r\n  public void printDocStatistics();\r\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6944b9fa6d8ef96b83ae2d3a4332d03b3857355b","date":1245355139,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"contrib/benchmark/src/java/org/apache/lucene/benchmark/byTask/feeds/DocMaker#printDocStatistics().mjava","pathOld":"contrib/benchmark/src/java/org/apache/lucene/benchmark/byTask/feeds/DocMaker#printDocStatistics().mjava","sourceNew":"  public void printDocStatistics() {\n    boolean print = false;\n    String col = \"                  \";\n    StringBuffer sb = new StringBuffer();\n    String newline = System.getProperty(\"line.separator\");\n    sb.append(\"------------> \").append(Format.simpleName(getClass())).append(\" statistics (\").append(printNum).append(\"): \").append(newline);\n    int nut = source.getTotalDocsCount();\n    if (nut > lastPrintedNumUniqueTexts) {\n      print = true;\n      sb.append(\"total count of unique texts: \").append(Format.format(0,nut,col)).append(newline);\n      lastPrintedNumUniqueTexts = nut;\n    }\n    long nub = getTotalBytesCount();\n    if (nub > lastPrintedNumUniqueBytes) {\n      print = true;\n      sb.append(\"total bytes of unique texts: \").append(Format.format(0,nub,col)).append(newline);\n      lastPrintedNumUniqueBytes = nub;\n    }\n    if (source.getDocsCount() > 0) {\n      print = true;\n      sb.append(\"num docs added since last inputs reset:   \").append(Format.format(0,source.getDocsCount(),col)).append(newline);\n      sb.append(\"total bytes added since last inputs reset: \").append(Format.format(0,getBytesCount(),col)).append(newline);\n    }\n    if (print) {\n      System.out.println(sb.append(newline).toString());\n      printNum++;\n    }\n  }\n\n","sourceOld":"  /** Print some statistics on docs available/added/etc. */ \n  public void printDocStatistics();\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/contrib/benchmark/src/java/org/apache/lucene/benchmark/byTask/feeds/DocMaker#printDocStatistics().mjava","pathOld":"contrib/benchmark/src/java/org/apache/lucene/benchmark/byTask/feeds/DocMaker#printDocStatistics().mjava","sourceNew":"  public void printDocStatistics() {\n    boolean print = false;\n    String col = \"                  \";\n    StringBuffer sb = new StringBuffer();\n    String newline = System.getProperty(\"line.separator\");\n    sb.append(\"------------> \").append(Format.simpleName(getClass())).append(\" statistics (\").append(printNum).append(\"): \").append(newline);\n    int nut = source.getTotalDocsCount();\n    if (nut > lastPrintedNumUniqueTexts) {\n      print = true;\n      sb.append(\"total count of unique texts: \").append(Format.format(0,nut,col)).append(newline);\n      lastPrintedNumUniqueTexts = nut;\n    }\n    long nub = getTotalBytesCount();\n    if (nub > lastPrintedNumUniqueBytes) {\n      print = true;\n      sb.append(\"total bytes of unique texts: \").append(Format.format(0,nub,col)).append(newline);\n      lastPrintedNumUniqueBytes = nub;\n    }\n    if (source.getDocsCount() > 0) {\n      print = true;\n      sb.append(\"num docs added since last inputs reset:   \").append(Format.format(0,source.getDocsCount(),col)).append(newline);\n      sb.append(\"total bytes added since last inputs reset: \").append(Format.format(0,getBytesCount(),col)).append(newline);\n    }\n    if (print) {\n      System.out.println(sb.append(newline).toString());\n      printNum++;\n    }\n  }\n\n","sourceOld":"  public void printDocStatistics() {\n    boolean print = false;\n    String col = \"                  \";\n    StringBuffer sb = new StringBuffer();\n    String newline = System.getProperty(\"line.separator\");\n    sb.append(\"------------> \").append(Format.simpleName(getClass())).append(\" statistics (\").append(printNum).append(\"): \").append(newline);\n    int nut = source.getTotalDocsCount();\n    if (nut > lastPrintedNumUniqueTexts) {\n      print = true;\n      sb.append(\"total count of unique texts: \").append(Format.format(0,nut,col)).append(newline);\n      lastPrintedNumUniqueTexts = nut;\n    }\n    long nub = getTotalBytesCount();\n    if (nub > lastPrintedNumUniqueBytes) {\n      print = true;\n      sb.append(\"total bytes of unique texts: \").append(Format.format(0,nub,col)).append(newline);\n      lastPrintedNumUniqueBytes = nub;\n    }\n    if (source.getDocsCount() > 0) {\n      print = true;\n      sb.append(\"num docs added since last inputs reset:   \").append(Format.format(0,source.getDocsCount(),col)).append(newline);\n      sb.append(\"total bytes added since last inputs reset: \").append(Format.format(0,getBytesCount(),col)).append(newline);\n    }\n    if (print) {\n      System.out.println(sb.append(newline).toString());\n      printNum++;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"6944b9fa6d8ef96b83ae2d3a4332d03b3857355b":["3738fa43eaa87dc7b393fe98b04cde1019e20bac"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3738fa43eaa87dc7b393fe98b04cde1019e20bac":["b2e70b697d9f5a6130848741a4f0cdc08a1fe258"],"b2e70b697d9f5a6130848741a4f0cdc08a1fe258":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["6944b9fa6d8ef96b83ae2d3a4332d03b3857355b"]},"commit2Childs":{"6944b9fa6d8ef96b83ae2d3a4332d03b3857355b":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b2e70b697d9f5a6130848741a4f0cdc08a1fe258"],"3738fa43eaa87dc7b393fe98b04cde1019e20bac":["6944b9fa6d8ef96b83ae2d3a4332d03b3857355b"],"b2e70b697d9f5a6130848741a4f0cdc08a1fe258":["3738fa43eaa87dc7b393fe98b04cde1019e20bac"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}