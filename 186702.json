{"path":"lucene/analysis/smartcn/src/java/org/apache/lucene/analysis/cn/smart/hhmm/SegGraph#makeIndex().mjava","commits":[{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/smartcn/src/java/org/apache/lucene/analysis/cn/smart/hhmm/SegGraph#makeIndex().mjava","pathOld":"modules/analysis/smartcn/src/java/org/apache/lucene/analysis/cn/smart/hhmm/SegGraph#makeIndex().mjava","sourceNew":"  /**\n   * Set the {@link SegToken#index} for each token, based upon its order by startOffset. \n   * @return a {@link List} of these ordered tokens.\n   */\n  public List<SegToken> makeIndex() {\n    List<SegToken> result = new ArrayList<SegToken>();\n    int s = -1, count = 0, size = tokenListTable.size();\n    List<SegToken> tokenList;\n    int index = 0;\n    while (count < size) {\n      if (isStartExist(s)) {\n        tokenList = tokenListTable.get(s);\n        for (SegToken st : tokenList) {\n          st.index = index;\n          result.add(st);\n          index++;\n        }\n        count++;\n      }\n      s++;\n    }\n    return result;\n  }\n\n","sourceOld":"  /**\n   * Set the {@link SegToken#index} for each token, based upon its order by startOffset. \n   * @return a {@link List} of these ordered tokens.\n   */\n  public List<SegToken> makeIndex() {\n    List<SegToken> result = new ArrayList<SegToken>();\n    int s = -1, count = 0, size = tokenListTable.size();\n    List<SegToken> tokenList;\n    int index = 0;\n    while (count < size) {\n      if (isStartExist(s)) {\n        tokenList = tokenListTable.get(s);\n        for (SegToken st : tokenList) {\n          st.index = index;\n          result.add(st);\n          index++;\n        }\n        count++;\n      }\n      s++;\n    }\n    return result;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"634f330c54fd3f9f491d52036dc3f40b4f4d8934","date":1394635157,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/smartcn/src/java/org/apache/lucene/analysis/cn/smart/hhmm/SegGraph#makeIndex().mjava","pathOld":"lucene/analysis/smartcn/src/java/org/apache/lucene/analysis/cn/smart/hhmm/SegGraph#makeIndex().mjava","sourceNew":"  /**\n   * Set the {@link SegToken#index} for each token, based upon its order by startOffset. \n   * @return a {@link List} of these ordered tokens.\n   */\n  public List<SegToken> makeIndex() {\n    List<SegToken> result = new ArrayList<>();\n    int s = -1, count = 0, size = tokenListTable.size();\n    List<SegToken> tokenList;\n    int index = 0;\n    while (count < size) {\n      if (isStartExist(s)) {\n        tokenList = tokenListTable.get(s);\n        for (SegToken st : tokenList) {\n          st.index = index;\n          result.add(st);\n          index++;\n        }\n        count++;\n      }\n      s++;\n    }\n    return result;\n  }\n\n","sourceOld":"  /**\n   * Set the {@link SegToken#index} for each token, based upon its order by startOffset. \n   * @return a {@link List} of these ordered tokens.\n   */\n  public List<SegToken> makeIndex() {\n    List<SegToken> result = new ArrayList<SegToken>();\n    int s = -1, count = 0, size = tokenListTable.size();\n    List<SegToken> tokenList;\n    int index = 0;\n    while (count < size) {\n      if (isStartExist(s)) {\n        tokenList = tokenListTable.get(s);\n        for (SegToken st : tokenList) {\n          st.index = index;\n          result.add(st);\n          index++;\n        }\n        count++;\n      }\n      s++;\n    }\n    return result;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"634f330c54fd3f9f491d52036dc3f40b4f4d8934":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["634f330c54fd3f9f491d52036dc3f40b4f4d8934"]},"commit2Childs":{"634f330c54fd3f9f491d52036dc3f40b4f4d8934":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["634f330c54fd3f9f491d52036dc3f40b4f4d8934"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}