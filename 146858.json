{"path":"solr/core/src/java/org/apache/solr/search/CollapsingQParserPlugin.OrdValueSourceStrategy#OrdValueSourceStrategy(int,String,int,int[],boolean,boolean,IntIntOpenHashMap,FunctionQuery,IndexSearcher,SortedDocValues).mjava","commits":[{"id":"8ced52befdc8d88d90766aadbaac496f3fd0e4ee","date":1421070034,"type":1,"author":"Joel Bernstein","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/CollapsingQParserPlugin.OrdValueSourceStrategy#OrdValueSourceStrategy(int,String,int,int[],boolean,boolean,IntIntOpenHashMap,FunctionQuery,IndexSearcher,SortedDocValues).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/CollapsingQParserPlugin.ValueSourceCollapse#ValueSourceCollapse(int,String,int,int[],boolean,boolean,IntIntOpenHashMap,FunctionQuery,IndexSearcher,SortedDocValues).mjava","sourceNew":"    public OrdValueSourceStrategy(int maxDoc,\n                                  String funcStr,\n                                  int nullPolicy,\n                                  int[] ords,\n                                  boolean max,\n                                  boolean needsScores,\n                                  IntIntOpenHashMap boostDocs,\n                                  FunctionQuery funcQuery,\n                                  IndexSearcher searcher,\n                                  SortedDocValues values) throws IOException {\n      super(maxDoc, null, nullPolicy, max, needsScores, boostDocs, values);\n      this.valueSource = funcQuery.getValueSource();\n      this.rcontext = ValueSource.newContext(searcher);\n      this.ords = ords;\n      this.ordVals = new float[ords.length];\n      Arrays.fill(ords, -1);\n\n      if(max) {\n        comp = new MaxFloatComp();\n        Arrays.fill(ordVals, -Float.MAX_VALUE );\n      } else {\n        this.nullVal = Float.MAX_VALUE;\n        comp = new MinFloatComp();\n        Arrays.fill(ordVals, Float.MAX_VALUE);\n      }\n\n      if(funcStr.indexOf(\"cscore()\") != -1) {\n        this.cscore = true;\n        this.rcontext.put(\"CSCORE\",this.collapseScore);\n      }\n\n      if(this.needsScores) {\n        this.scores = new float[ords.length];\n        if(nullPolicy == CollapsingPostFilter.NULL_POLICY_EXPAND) {\n          nullScores = new FloatArrayList();\n        }\n      }\n    }\n\n","sourceOld":"    public ValueSourceCollapse(int maxDoc,\n                               String funcStr,\n                               int nullPolicy,\n                               int[] ords,\n                               boolean max,\n                               boolean needsScores,\n                               IntIntOpenHashMap boostDocs,\n                               FunctionQuery funcQuery, IndexSearcher searcher, SortedDocValues values) throws IOException {\n      super(maxDoc, null, nullPolicy, max, needsScores, boostDocs, values);\n      this.valueSource = funcQuery.getValueSource();\n      this.rcontext = ValueSource.newContext(searcher);\n      this.ords = ords;\n      this.ordVals = new float[ords.length];\n      Arrays.fill(ords, -1);\n\n      if(max) {\n        comp = new MaxFloatComp();\n        Arrays.fill(ordVals, -Float.MAX_VALUE );\n      } else {\n        this.nullVal = Float.MAX_VALUE;\n        comp = new MinFloatComp();\n        Arrays.fill(ordVals, Float.MAX_VALUE);\n      }\n\n      if(funcStr.indexOf(\"cscore()\") != -1) {\n        this.cscore = true;\n        this.rcontext.put(\"CSCORE\",this.collapseScore);\n      }\n\n      if(this.needsScores) {\n        this.scores = new float[ords.length];\n        if(nullPolicy == CollapsingPostFilter.NULL_POLICY_EXPAND) {\n          nullScores = new FloatArrayList();\n        }\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1fcee2c3acd9aa64a73a3b441b3f6cb492af0b87","date":1440409984,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/CollapsingQParserPlugin.OrdValueSourceStrategy#OrdValueSourceStrategy(int,String,int,int[],boolean,boolean,IntIntHashMap,FunctionQuery,IndexSearcher,SortedDocValues).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/CollapsingQParserPlugin.OrdValueSourceStrategy#OrdValueSourceStrategy(int,String,int,int[],boolean,boolean,IntIntOpenHashMap,FunctionQuery,IndexSearcher,SortedDocValues).mjava","sourceNew":"    public OrdValueSourceStrategy(int maxDoc,\n                                  String funcStr,\n                                  int nullPolicy,\n                                  int[] ords,\n                                  boolean max,\n                                  boolean needsScores,\n                                  IntIntHashMap boostDocs,\n                                  FunctionQuery funcQuery,\n                                  IndexSearcher searcher,\n                                  SortedDocValues values) throws IOException {\n      super(maxDoc, null, nullPolicy, max, needsScores, boostDocs, values);\n      this.valueSource = funcQuery.getValueSource();\n      this.rcontext = ValueSource.newContext(searcher);\n      this.ords = ords;\n      this.ordVals = new float[ords.length];\n      Arrays.fill(ords, -1);\n\n      if(max) {\n        comp = new MaxFloatComp();\n        Arrays.fill(ordVals, -Float.MAX_VALUE );\n      } else {\n        this.nullVal = Float.MAX_VALUE;\n        comp = new MinFloatComp();\n        Arrays.fill(ordVals, Float.MAX_VALUE);\n      }\n\n      if(funcStr.indexOf(\"cscore()\") != -1) {\n        this.cscore = true;\n        this.rcontext.put(\"CSCORE\",this.collapseScore);\n      }\n\n      if(this.needsScores) {\n        this.scores = new float[ords.length];\n        if(nullPolicy == CollapsingPostFilter.NULL_POLICY_EXPAND) {\n          nullScores = new FloatArrayList();\n        }\n      }\n    }\n\n","sourceOld":"    public OrdValueSourceStrategy(int maxDoc,\n                                  String funcStr,\n                                  int nullPolicy,\n                                  int[] ords,\n                                  boolean max,\n                                  boolean needsScores,\n                                  IntIntOpenHashMap boostDocs,\n                                  FunctionQuery funcQuery,\n                                  IndexSearcher searcher,\n                                  SortedDocValues values) throws IOException {\n      super(maxDoc, null, nullPolicy, max, needsScores, boostDocs, values);\n      this.valueSource = funcQuery.getValueSource();\n      this.rcontext = ValueSource.newContext(searcher);\n      this.ords = ords;\n      this.ordVals = new float[ords.length];\n      Arrays.fill(ords, -1);\n\n      if(max) {\n        comp = new MaxFloatComp();\n        Arrays.fill(ordVals, -Float.MAX_VALUE );\n      } else {\n        this.nullVal = Float.MAX_VALUE;\n        comp = new MinFloatComp();\n        Arrays.fill(ordVals, Float.MAX_VALUE);\n      }\n\n      if(funcStr.indexOf(\"cscore()\") != -1) {\n        this.cscore = true;\n        this.rcontext.put(\"CSCORE\",this.collapseScore);\n      }\n\n      if(this.needsScores) {\n        this.scores = new float[ords.length];\n        if(nullPolicy == CollapsingPostFilter.NULL_POLICY_EXPAND) {\n          nullScores = new FloatArrayList();\n        }\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"8ced52befdc8d88d90766aadbaac496f3fd0e4ee":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"1fcee2c3acd9aa64a73a3b441b3f6cb492af0b87":["8ced52befdc8d88d90766aadbaac496f3fd0e4ee"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["1fcee2c3acd9aa64a73a3b441b3f6cb492af0b87"]},"commit2Childs":{"8ced52befdc8d88d90766aadbaac496f3fd0e4ee":["1fcee2c3acd9aa64a73a3b441b3f6cb492af0b87"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["8ced52befdc8d88d90766aadbaac496f3fd0e4ee"],"1fcee2c3acd9aa64a73a3b441b3f6cb492af0b87":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}