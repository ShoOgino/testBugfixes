{"path":"solr/core/src/java/org/apache/solr/request/SimpleFacets#newBytesRefFilter(String,SolrParams).mjava","commits":[{"id":"862ed062e72c1c01ecd8593b17804ac02b69cf0e","date":1486641184,"type":0,"author":"Christine Poerschke","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/request/SimpleFacets#newBytesRefFilter(String,SolrParams).mjava","pathOld":"/dev/null","sourceNew":"  protected Predicate<BytesRef> newBytesRefFilter(String field, SolrParams params) {\n    final String contains = params.getFieldParam(field, FacetParams.FACET_CONTAINS);\n    final boolean ignoreCase = params.getFieldBool(field, FacetParams.FACET_CONTAINS_IGNORE_CASE, false);\n\n    if (contains == null) {\n      return null;\n    }\n\n    return new SubstringBytesRefFilter(contains, ignoreCase);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5a19f08b39212024938a7d0daa611ed2918ac233","date":1486652106,"type":3,"author":"Christine Poerschke","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/request/SimpleFacets#newBytesRefFilter(String,SolrParams).mjava","pathOld":"solr/core/src/java/org/apache/solr/request/SimpleFacets#newBytesRefFilter(String,SolrParams).mjava","sourceNew":"  protected Predicate<BytesRef> newBytesRefFilter(String field, SolrParams params) {\n    final String contains = params.getFieldParam(field, FacetParams.FACET_CONTAINS);\n\n    final Predicate<BytesRef> containsFilter;\n    if (contains != null) {\n      final boolean containsIgnoreCase = params.getFieldBool(field, FacetParams.FACET_CONTAINS_IGNORE_CASE, false);\n      containsFilter = new SubstringBytesRefFilter(contains, containsIgnoreCase);\n    } else {\n      containsFilter = null;\n    }\n\n    final Predicate<BytesRef> excludeFilter = newExcludeBytesRefFilter(field, params);\n\n    if (containsFilter == null && excludeFilter == null) {\n      return null;\n    }\n\n    if (containsFilter != null && excludeFilter == null) {\n      return containsFilter;\n    } else if (containsFilter == null && excludeFilter != null) {\n      return excludeFilter;\n    }\n\n    return containsFilter.and(excludeFilter);\n  }\n\n","sourceOld":"  protected Predicate<BytesRef> newBytesRefFilter(String field, SolrParams params) {\n    final String contains = params.getFieldParam(field, FacetParams.FACET_CONTAINS);\n    final boolean ignoreCase = params.getFieldBool(field, FacetParams.FACET_CONTAINS_IGNORE_CASE, false);\n\n    if (contains == null) {\n      return null;\n    }\n\n    return new SubstringBytesRefFilter(contains, ignoreCase);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f59e5a034782f8d1b0eec0ec9a74be9b713764f4","date":1509386605,"type":3,"author":"Christine Poerschke","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/request/SimpleFacets#newBytesRefFilter(String,SolrParams).mjava","pathOld":"solr/core/src/java/org/apache/solr/request/SimpleFacets#newBytesRefFilter(String,SolrParams).mjava","sourceNew":"  /**\n   * Create a new bytes ref filter for filtering facet terms. If more than one filter is\n   * applicable the applicable filters will be returned as an {@link Predicate#and(Predicate)}\n   * of all such filters.\n   *\n   * @param field the field to check for facet term filters\n   * @param params the request parameter object\n   * @return A predicate for filtering terms or null if no filters are applicable.\n   */\n  protected Predicate<BytesRef> newBytesRefFilter(String field, SolrParams params) {\n    final String contains = params.getFieldParam(field, FacetParams.FACET_CONTAINS);\n\n    Predicate<BytesRef> finalFilter = null;\n\n    if (contains != null) {\n      final boolean containsIgnoreCase = params.getFieldBool(field, FacetParams.FACET_CONTAINS_IGNORE_CASE, false);\n      finalFilter = new SubstringBytesRefFilter(contains, containsIgnoreCase);\n    }\n\n    final String regex = params.getFieldParam(field, FacetParams.FACET_MATCHES);\n    if (regex != null) {\n      final RegexBytesRefFilter regexBytesRefFilter = new RegexBytesRefFilter(regex);\n      finalFilter = (finalFilter == null) ? regexBytesRefFilter : finalFilter.and(regexBytesRefFilter);\n    }\n\n    final Predicate<BytesRef> excludeFilter = newExcludeBytesRefFilter(field, params);\n    if (excludeFilter != null) {\n      finalFilter = (finalFilter == null) ? excludeFilter : finalFilter.and(excludeFilter);\n    }\n\n    return finalFilter;\n  }\n\n","sourceOld":"  protected Predicate<BytesRef> newBytesRefFilter(String field, SolrParams params) {\n    final String contains = params.getFieldParam(field, FacetParams.FACET_CONTAINS);\n\n    final Predicate<BytesRef> containsFilter;\n    if (contains != null) {\n      final boolean containsIgnoreCase = params.getFieldBool(field, FacetParams.FACET_CONTAINS_IGNORE_CASE, false);\n      containsFilter = new SubstringBytesRefFilter(contains, containsIgnoreCase);\n    } else {\n      containsFilter = null;\n    }\n\n    final Predicate<BytesRef> excludeFilter = newExcludeBytesRefFilter(field, params);\n\n    if (containsFilter == null && excludeFilter == null) {\n      return null;\n    }\n\n    if (containsFilter != null && excludeFilter == null) {\n      return containsFilter;\n    } else if (containsFilter == null && excludeFilter != null) {\n      return excludeFilter;\n    }\n\n    return containsFilter.and(excludeFilter);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"862ed062e72c1c01ecd8593b17804ac02b69cf0e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"5a19f08b39212024938a7d0daa611ed2918ac233":["862ed062e72c1c01ecd8593b17804ac02b69cf0e"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"f59e5a034782f8d1b0eec0ec9a74be9b713764f4":["5a19f08b39212024938a7d0daa611ed2918ac233"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["f59e5a034782f8d1b0eec0ec9a74be9b713764f4"]},"commit2Childs":{"862ed062e72c1c01ecd8593b17804ac02b69cf0e":["5a19f08b39212024938a7d0daa611ed2918ac233"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["862ed062e72c1c01ecd8593b17804ac02b69cf0e"],"5a19f08b39212024938a7d0daa611ed2918ac233":["f59e5a034782f8d1b0eec0ec9a74be9b713764f4"],"f59e5a034782f8d1b0eec0ec9a74be9b713764f4":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}