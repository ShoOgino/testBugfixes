{"path":"solr/core/src/java/org/apache/solr/cloud/autoscaling/ScheduledTriggers#removeAll().mjava","commits":[{"id":"01e3e55745c6667006f67aaa604466b9974425f4","date":1518776937,"type":0,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/autoscaling/ScheduledTriggers#removeAll().mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Remove and stop all triggers. Also cleans up any leftover\n   * state / events in ZK.\n   */\n  public synchronized void removeAll() {\n    getScheduledTriggerNames().forEach(t -> {\n      log.info(\"-- removing trigger: \" + t);\n      remove(t);\n    });\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e35f2dde06b35aa9904949a3a93fabd090371077","date":1587906921,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/autoscaling/ScheduledTriggers#removeAll().mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/autoscaling/ScheduledTriggers#removeAll().mjava","sourceNew":"  /**\n   * Remove and stop all triggers. Also cleans up any leftover\n   * state / events in ZK.\n   */\n  public synchronized void removeAll() {\n    getScheduledTriggerNames().forEach(t -> {\n      log.info(\"-- removing trigger: {}\", t);\n      remove(t);\n    });\n  }\n\n","sourceOld":"  /**\n   * Remove and stop all triggers. Also cleans up any leftover\n   * state / events in ZK.\n   */\n  public synchronized void removeAll() {\n    getScheduledTriggerNames().forEach(t -> {\n      log.info(\"-- removing trigger: \" + t);\n      remove(t);\n    });\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3f504512a03d978990cbff30db0522b354e846db","date":1595247421,"type":4,"author":"Ishan Chattopadhyaya","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/core/src/java/org/apache/solr/cloud/autoscaling/ScheduledTriggers#removeAll().mjava","sourceNew":null,"sourceOld":"  /**\n   * Remove and stop all triggers. Also cleans up any leftover\n   * state / events in ZK.\n   */\n  public synchronized void removeAll() {\n    getScheduledTriggerNames().forEach(t -> {\n      log.info(\"-- removing trigger: {}\", t);\n      remove(t);\n    });\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3f504512a03d978990cbff30db0522b354e846db":["e35f2dde06b35aa9904949a3a93fabd090371077"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"e35f2dde06b35aa9904949a3a93fabd090371077":["01e3e55745c6667006f67aaa604466b9974425f4"],"01e3e55745c6667006f67aaa604466b9974425f4":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3f504512a03d978990cbff30db0522b354e846db"]},"commit2Childs":{"3f504512a03d978990cbff30db0522b354e846db":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["01e3e55745c6667006f67aaa604466b9974425f4"],"e35f2dde06b35aa9904949a3a93fabd090371077":["3f504512a03d978990cbff30db0522b354e846db"],"01e3e55745c6667006f67aaa604466b9974425f4":["e35f2dde06b35aa9904949a3a93fabd090371077"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}