{"path":"solr/contrib/ltr/src/test/org/apache/solr/ltr/store/rest/TestModelManager#test().mjava","commits":[{"id":"58c36d634c9789cb739fbd175c1a8d50b3303f6b","date":1478022614,"type":0,"author":"Christine Poerschke","isMerge":false,"pathNew":"solr/contrib/ltr/src/test/org/apache/solr/ltr/store/rest/TestModelManager#test().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void test() throws Exception {\n    final SolrResourceLoader loader = new SolrResourceLoader(\n        tmpSolrHome.toPath());\n\n    final RestManager.Registry registry = loader.getManagedResourceRegistry();\n    assertNotNull(\n        \"Expected a non-null RestManager.Registry from the SolrResourceLoader!\",\n        registry);\n\n    final String resourceId = \"/schema/fstore1\";\n    registry.registerManagedResource(resourceId, ManagedFeatureStore.class,\n        new LTRQParserPlugin());\n\n    final String resourceId2 = \"/schema/mstore1\";\n    registry.registerManagedResource(resourceId2, ManagedModelStore.class,\n        new LTRQParserPlugin());\n\n    final NamedList<String> initArgs = new NamedList<>();\n\n    final RestManager restManager = new RestManager();\n    restManager.init(loader, initArgs,\n        new ManagedResourceStorage.InMemoryStorageIO());\n\n    final ManagedResource res = restManager.getManagedResource(resourceId);\n    assertTrue(res instanceof ManagedFeatureStore);\n    assertEquals(res.getResourceId(), resourceId);\n\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9720b151fde2073f4e401450f4574e5f31c2d0ff","date":1478184029,"type":0,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/contrib/ltr/src/test/org/apache/solr/ltr/store/rest/TestModelManager#test().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void test() throws Exception {\n    final SolrResourceLoader loader = new SolrResourceLoader(\n        tmpSolrHome.toPath());\n\n    final RestManager.Registry registry = loader.getManagedResourceRegistry();\n    assertNotNull(\n        \"Expected a non-null RestManager.Registry from the SolrResourceLoader!\",\n        registry);\n\n    final String resourceId = \"/schema/fstore1\";\n    registry.registerManagedResource(resourceId, ManagedFeatureStore.class,\n        new LTRQParserPlugin());\n\n    final String resourceId2 = \"/schema/mstore1\";\n    registry.registerManagedResource(resourceId2, ManagedModelStore.class,\n        new LTRQParserPlugin());\n\n    final NamedList<String> initArgs = new NamedList<>();\n\n    final RestManager restManager = new RestManager();\n    restManager.init(loader, initArgs,\n        new ManagedResourceStorage.InMemoryStorageIO());\n\n    final ManagedResource res = restManager.getManagedResource(resourceId);\n    assertTrue(res instanceof ManagedFeatureStore);\n    assertEquals(res.getResourceId(), resourceId);\n\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"58c36d634c9789cb739fbd175c1a8d50b3303f6b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"9720b151fde2073f4e401450f4574e5f31c2d0ff":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","58c36d634c9789cb739fbd175c1a8d50b3303f6b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["58c36d634c9789cb739fbd175c1a8d50b3303f6b"]},"commit2Childs":{"58c36d634c9789cb739fbd175c1a8d50b3303f6b":["9720b151fde2073f4e401450f4574e5f31c2d0ff","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"9720b151fde2073f4e401450f4574e5f31c2d0ff":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["58c36d634c9789cb739fbd175c1a8d50b3303f6b","9720b151fde2073f4e401450f4574e5f31c2d0ff"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["9720b151fde2073f4e401450f4574e5f31c2d0ff","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}