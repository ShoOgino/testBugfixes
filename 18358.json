{"path":"solr/core/src/test/org/apache/solr/cloud/OverseerSolrResponseTest#testException().mjava","commits":[{"id":"2dfb8001b6712216ccbf7ccc85f830f08ce3b544","date":1576882501,"type":0,"author":"Tomas Fernandez Lobbe","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/OverseerSolrResponseTest#testException().mjava","pathOld":"/dev/null","sourceNew":"  public void testException() {\n    NamedList<Object> responseNl = new NamedList<>();\n    SolrException e = new SolrException(SolrException.ErrorCode.BAD_REQUEST, \"Foo\");\n    SimpleOrderedMap<Object> exceptionNl = new SimpleOrderedMap<>();\n    exceptionNl.add(\"msg\", e.getMessage());\n    exceptionNl.add(\"rspCode\", e.code());\n    responseNl.add(\"exception\", exceptionNl);\n    OverseerSolrResponse deserialized = OverseerSolrResponse.deserialize(OverseerSolrResponse.serialize(new OverseerSolrResponse(responseNl)));\n    assertNotNull(\"Expecting an exception\", deserialized.getException());\n    assertEquals(\"Unexpected exception type in deserialized response\", SolrException.class, deserialized.getException().getClass());\n    assertEquals(\"Unexpected exception code in deserialized response\", e.code(), ((SolrException)deserialized.getException()).code());\n    assertEquals(\"Unexpected exception message in deserialized response\", e.getMessage(), deserialized.getException().getMessage());\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["b6a4045268caa5f6094d5a8d80519a1c152295f3"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"96b4a3cd1f2463ebc4ffc0f61acdb3359637fe2a","date":1577276097,"type":0,"author":"Dawid Weiss","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/cloud/OverseerSolrResponseTest#testException().mjava","pathOld":"/dev/null","sourceNew":"  public void testException() {\n    NamedList<Object> responseNl = new NamedList<>();\n    SolrException e = new SolrException(SolrException.ErrorCode.BAD_REQUEST, \"Foo\");\n    SimpleOrderedMap<Object> exceptionNl = new SimpleOrderedMap<>();\n    exceptionNl.add(\"msg\", e.getMessage());\n    exceptionNl.add(\"rspCode\", e.code());\n    responseNl.add(\"exception\", exceptionNl);\n    OverseerSolrResponse deserialized = OverseerSolrResponse.deserialize(OverseerSolrResponse.serialize(new OverseerSolrResponse(responseNl)));\n    assertNotNull(\"Expecting an exception\", deserialized.getException());\n    assertEquals(\"Unexpected exception type in deserialized response\", SolrException.class, deserialized.getException().getClass());\n    assertEquals(\"Unexpected exception code in deserialized response\", e.code(), ((SolrException)deserialized.getException()).code());\n    assertEquals(\"Unexpected exception message in deserialized response\", e.getMessage(), deserialized.getException().getMessage());\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b6a4045268caa5f6094d5a8d80519a1c152295f3","date":1580840817,"type":3,"author":"Tomas Fernandez Lobbe","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/OverseerSolrResponseTest#testException().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/OverseerSolrResponseTest#testException().mjava","sourceNew":"  public void testException() {\n    NamedList<Object> responseNl = new NamedList<>();\n    SolrException e = new SolrException(SolrException.ErrorCode.BAD_REQUEST, \"Foo\");\n    SimpleOrderedMap<Object> exceptionNl = new SimpleOrderedMap<>();\n    exceptionNl.add(\"msg\", e.getMessage());\n    exceptionNl.add(\"rspCode\", e.code());\n    responseNl.add(\"exception\", exceptionNl);\n    OverseerSolrResponse deserialized = OverseerSolrResponseSerializer.deserialize(OverseerSolrResponseSerializer.serialize(new OverseerSolrResponse(responseNl)));\n    assertNotNull(\"Expecting an exception\", deserialized.getException());\n    assertEquals(\"Unexpected exception type in deserialized response\", SolrException.class, deserialized.getException().getClass());\n    assertEquals(\"Unexpected exception code in deserialized response\", e.code(), ((SolrException)deserialized.getException()).code());\n    assertEquals(\"Unexpected exception message in deserialized response\", e.getMessage(), deserialized.getException().getMessage());\n  }\n\n","sourceOld":"  public void testException() {\n    NamedList<Object> responseNl = new NamedList<>();\n    SolrException e = new SolrException(SolrException.ErrorCode.BAD_REQUEST, \"Foo\");\n    SimpleOrderedMap<Object> exceptionNl = new SimpleOrderedMap<>();\n    exceptionNl.add(\"msg\", e.getMessage());\n    exceptionNl.add(\"rspCode\", e.code());\n    responseNl.add(\"exception\", exceptionNl);\n    OverseerSolrResponse deserialized = OverseerSolrResponse.deserialize(OverseerSolrResponse.serialize(new OverseerSolrResponse(responseNl)));\n    assertNotNull(\"Expecting an exception\", deserialized.getException());\n    assertEquals(\"Unexpected exception type in deserialized response\", SolrException.class, deserialized.getException().getClass());\n    assertEquals(\"Unexpected exception code in deserialized response\", e.code(), ((SolrException)deserialized.getException()).code());\n    assertEquals(\"Unexpected exception message in deserialized response\", e.getMessage(), deserialized.getException().getMessage());\n  }\n\n","bugFix":["2dfb8001b6712216ccbf7ccc85f830f08ce3b544"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"96b4a3cd1f2463ebc4ffc0f61acdb3359637fe2a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","2dfb8001b6712216ccbf7ccc85f830f08ce3b544"],"2dfb8001b6712216ccbf7ccc85f830f08ce3b544":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"b6a4045268caa5f6094d5a8d80519a1c152295f3":["2dfb8001b6712216ccbf7ccc85f830f08ce3b544"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b6a4045268caa5f6094d5a8d80519a1c152295f3"]},"commit2Childs":{"96b4a3cd1f2463ebc4ffc0f61acdb3359637fe2a":[],"2dfb8001b6712216ccbf7ccc85f830f08ce3b544":["96b4a3cd1f2463ebc4ffc0f61acdb3359637fe2a","b6a4045268caa5f6094d5a8d80519a1c152295f3"],"b6a4045268caa5f6094d5a8d80519a1c152295f3":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["96b4a3cd1f2463ebc4ffc0f61acdb3359637fe2a","2dfb8001b6712216ccbf7ccc85f830f08ce3b544"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["96b4a3cd1f2463ebc4ffc0f61acdb3359637fe2a","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}