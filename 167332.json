{"path":"lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/GeoPoint#arcDistance(Vector).mjava","commits":[{"id":"f9f156572c6e1245055b705603088061b42ab3a1","date":1462449249,"type":1,"author":"Karl Wright","isMerge":false,"pathNew":"lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/GeoPoint#arcDistance(Vector).mjava","pathOld":"lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/GeoPoint#arcDistance(GeoPoint).mjava","sourceNew":"  /** Compute an arc distance between two points.\n   * Note: this is an angular distance, and not a surface distance, and is therefore independent of planet model.\n   * For surface distance, see {@link PlanetModel#surfaceDistance(GeoPoint, GeoPoint)}\n   * @param v is the second point.\n   * @return the angle, in radians, between the two points.\n   */\n  public double arcDistance(final Vector v) {\n    return Tools.safeAcos(dotProduct(v)/(magnitude() * v.magnitude()));\n  }\n\n","sourceOld":"  /** Compute an arc distance between two points.\n   * Note: this is an angular distance, and not a surface distance, and is therefore independent of planet model.\n   * For surface distance, see {@link PlanetModel#surfaceDistance(GeoPoint, GeoPoint)}\n   * @param v is the second point.\n   * @return the angle, in radians, between the two points.\n   */\n  public double arcDistance(final GeoPoint v) {\n    return Tools.safeAcos(dotProduct(v)/(magnitude() * v.magnitude()));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7dc08f02757dd10637b16a5c65eaaef839a91a9a","date":1462455462,"type":1,"author":"Kevin Risden","isMerge":true,"pathNew":"lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/GeoPoint#arcDistance(Vector).mjava","pathOld":"lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/GeoPoint#arcDistance(GeoPoint).mjava","sourceNew":"  /** Compute an arc distance between two points.\n   * Note: this is an angular distance, and not a surface distance, and is therefore independent of planet model.\n   * For surface distance, see {@link PlanetModel#surfaceDistance(GeoPoint, GeoPoint)}\n   * @param v is the second point.\n   * @return the angle, in radians, between the two points.\n   */\n  public double arcDistance(final Vector v) {\n    return Tools.safeAcos(dotProduct(v)/(magnitude() * v.magnitude()));\n  }\n\n","sourceOld":"  /** Compute an arc distance between two points.\n   * Note: this is an angular distance, and not a surface distance, and is therefore independent of planet model.\n   * For surface distance, see {@link PlanetModel#surfaceDistance(GeoPoint, GeoPoint)}\n   * @param v is the second point.\n   * @return the angle, in radians, between the two points.\n   */\n  public double arcDistance(final GeoPoint v) {\n    return Tools.safeAcos(dotProduct(v)/(magnitude() * v.magnitude()));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a8ed5da4b0191db6bc7f77f9feb35da6bd76f904","date":1462576651,"type":1,"author":"Mike McCandless","isMerge":true,"pathNew":"lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/GeoPoint#arcDistance(Vector).mjava","pathOld":"lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/GeoPoint#arcDistance(GeoPoint).mjava","sourceNew":"  /** Compute an arc distance between two points.\n   * Note: this is an angular distance, and not a surface distance, and is therefore independent of planet model.\n   * For surface distance, see {@link PlanetModel#surfaceDistance(GeoPoint, GeoPoint)}\n   * @param v is the second point.\n   * @return the angle, in radians, between the two points.\n   */\n  public double arcDistance(final Vector v) {\n    return Tools.safeAcos(dotProduct(v)/(magnitude() * v.magnitude()));\n  }\n\n","sourceOld":"  /** Compute an arc distance between two points.\n   * Note: this is an angular distance, and not a surface distance, and is therefore independent of planet model.\n   * For surface distance, see {@link PlanetModel#surfaceDistance(GeoPoint, GeoPoint)}\n   * @param v is the second point.\n   * @return the angle, in radians, between the two points.\n   */\n  public double arcDistance(final GeoPoint v) {\n    return Tools.safeAcos(dotProduct(v)/(magnitude() * v.magnitude()));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"7dc08f02757dd10637b16a5c65eaaef839a91a9a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","f9f156572c6e1245055b705603088061b42ab3a1"],"f9f156572c6e1245055b705603088061b42ab3a1":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a8ed5da4b0191db6bc7f77f9feb35da6bd76f904":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","f9f156572c6e1245055b705603088061b42ab3a1"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["f9f156572c6e1245055b705603088061b42ab3a1"]},"commit2Childs":{"7dc08f02757dd10637b16a5c65eaaef839a91a9a":[],"f9f156572c6e1245055b705603088061b42ab3a1":["7dc08f02757dd10637b16a5c65eaaef839a91a9a","a8ed5da4b0191db6bc7f77f9feb35da6bd76f904","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a8ed5da4b0191db6bc7f77f9feb35da6bd76f904":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["7dc08f02757dd10637b16a5c65eaaef839a91a9a","f9f156572c6e1245055b705603088061b42ab3a1","a8ed5da4b0191db6bc7f77f9feb35da6bd76f904"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["7dc08f02757dd10637b16a5c65eaaef839a91a9a","a8ed5da4b0191db6bc7f77f9feb35da6bd76f904","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}