{"path":"lucene/core/src/test/org/apache/lucene/search/TestMatchesIterator#testSynonymQueryNoPositions().mjava","commits":[{"id":"657704b225b01c6ff4bada5b6667f1f60aaaad0f","date":1523436207,"type":0,"author":"Alan Woodward","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestMatchesIterator#testSynonymQueryNoPositions().mjava","pathOld":"/dev/null","sourceNew":"  public void testSynonymQueryNoPositions() throws IOException {\n    for (String field : new String[]{ FIELD_FREQS, FIELD_DOCS_ONLY }) {\n      Query q = new SynonymQuery(new Term(field, \"w1\"), new Term(field, \"w2\"));\n      checkNoPositionsMatches(q, field, new boolean[]{ true, true, true, true, false });\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"43345f1452f9510f8aaadae6156fe0c834e7d957","date":1523483670,"type":0,"author":"Karl Wright","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestMatchesIterator#testSynonymQueryNoPositions().mjava","pathOld":"/dev/null","sourceNew":"  public void testSynonymQueryNoPositions() throws IOException {\n    for (String field : new String[]{ FIELD_FREQS, FIELD_DOCS_ONLY }) {\n      Query q = new SynonymQuery(new Term(field, \"w1\"), new Term(field, \"w2\"));\n      checkNoPositionsMatches(q, field, new boolean[]{ true, true, true, true, false });\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"df25592b82060bc1c800e87bf019444bf0ddf9d4","date":1552296011,"type":3,"author":"jimczi","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestMatchesIterator#testSynonymQueryNoPositions().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestMatchesIterator#testSynonymQueryNoPositions().mjava","sourceNew":"  public void testSynonymQueryNoPositions() throws IOException {\n    for (String field : new String[]{ FIELD_FREQS, FIELD_DOCS_ONLY }) {\n      Query q = new SynonymQuery.Builder(field).addTerm(new Term(field, \"w1\")).addTerm(new Term(field, \"w2\")).build();\n      checkNoPositionsMatches(q, field, new boolean[]{ true, true, true, true, false });\n    }\n  }\n\n","sourceOld":"  public void testSynonymQueryNoPositions() throws IOException {\n    for (String field : new String[]{ FIELD_FREQS, FIELD_DOCS_ONLY }) {\n      Query q = new SynonymQuery(new Term(field, \"w1\"), new Term(field, \"w2\"));\n      checkNoPositionsMatches(q, field, new boolean[]{ true, true, true, true, false });\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"df25592b82060bc1c800e87bf019444bf0ddf9d4":["43345f1452f9510f8aaadae6156fe0c834e7d957"],"657704b225b01c6ff4bada5b6667f1f60aaaad0f":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"43345f1452f9510f8aaadae6156fe0c834e7d957":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","657704b225b01c6ff4bada5b6667f1f60aaaad0f"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["df25592b82060bc1c800e87bf019444bf0ddf9d4"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["657704b225b01c6ff4bada5b6667f1f60aaaad0f","43345f1452f9510f8aaadae6156fe0c834e7d957"],"df25592b82060bc1c800e87bf019444bf0ddf9d4":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"657704b225b01c6ff4bada5b6667f1f60aaaad0f":["43345f1452f9510f8aaadae6156fe0c834e7d957"],"43345f1452f9510f8aaadae6156fe0c834e7d957":["df25592b82060bc1c800e87bf019444bf0ddf9d4"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}