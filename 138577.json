{"path":"lucene/codecs/src/java/org/apache/lucene/codecs/blockterms/FixedGapTermsIndexWriter.SimpleFieldWriter#finish(long).mjava","commits":[{"id":"038e2a9b07e2f8ae58336613cea227bf8b973484","date":1346850972,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/codecs/src/java/org/apache/lucene/codecs/blockterms/FixedGapTermsIndexWriter.SimpleFieldWriter#finish(long).mjava","pathOld":"lucene/codecs/src/java/org/apache/lucene/codecs/FixedGapTermsIndexWriter.SimpleFieldWriter#finish(long).mjava","sourceNew":"    @Override\n    public void finish(long termsFilePointer) throws IOException {\n\n      // write primary terms dict offsets\n      packedIndexStart = out.getFilePointer();\n\n      PackedInts.Writer w = PackedInts.getWriter(out, numIndexTerms, PackedInts.bitsRequired(termsFilePointer), PackedInts.DEFAULT);\n\n      // relative to our indexStart\n      long upto = 0;\n      for(int i=0;i<numIndexTerms;i++) {\n        upto += termsPointerDeltas[i];\n        w.add(upto);\n      }\n      w.finish();\n\n      packedOffsetsStart = out.getFilePointer();\n\n      // write offsets into the byte[] terms\n      w = PackedInts.getWriter(out, 1+numIndexTerms, PackedInts.bitsRequired(totTermLength), PackedInts.DEFAULT);\n      upto = 0;\n      for(int i=0;i<numIndexTerms;i++) {\n        w.add(upto);\n        upto += termLengths[i];\n      }\n      w.add(upto);\n      w.finish();\n\n      // our referrer holds onto us, while other fields are\n      // being written, so don't tie up this RAM:\n      termLengths = null;\n      termsPointerDeltas = null;\n    }\n\n","sourceOld":"    @Override\n    public void finish(long termsFilePointer) throws IOException {\n\n      // write primary terms dict offsets\n      packedIndexStart = out.getFilePointer();\n\n      PackedInts.Writer w = PackedInts.getWriter(out, numIndexTerms, PackedInts.bitsRequired(termsFilePointer), PackedInts.DEFAULT);\n\n      // relative to our indexStart\n      long upto = 0;\n      for(int i=0;i<numIndexTerms;i++) {\n        upto += termsPointerDeltas[i];\n        w.add(upto);\n      }\n      w.finish();\n\n      packedOffsetsStart = out.getFilePointer();\n\n      // write offsets into the byte[] terms\n      w = PackedInts.getWriter(out, 1+numIndexTerms, PackedInts.bitsRequired(totTermLength), PackedInts.DEFAULT);\n      upto = 0;\n      for(int i=0;i<numIndexTerms;i++) {\n        w.add(upto);\n        upto += termLengths[i];\n      }\n      w.add(upto);\n      w.finish();\n\n      // our referrer holds onto us, while other fields are\n      // being written, so don't tie up this RAM:\n      termLengths = null;\n      termsPointerDeltas = null;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a45bec74b98f6fc05f52770cfb425739e6563960","date":1375119292,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/codecs/src/java/org/apache/lucene/codecs/blockterms/FixedGapTermsIndexWriter.SimpleFieldWriter#finish(long).mjava","pathOld":"lucene/codecs/src/java/org/apache/lucene/codecs/blockterms/FixedGapTermsIndexWriter.SimpleFieldWriter#finish(long).mjava","sourceNew":"    @Override\n    public void finish(long termsFilePointer) throws IOException {\n\n      // write primary terms dict offsets\n      packedIndexStart = out.getFilePointer();\n\n      // relative to our indexStart\n      termAddresses.finish();\n      addressBuffer.writeTo(out);\n\n      packedOffsetsStart = out.getFilePointer();\n\n      // write offsets into the byte[] terms\n      termOffsets.finish();\n      offsetsBuffer.writeTo(out);\n\n      // our referrer holds onto us, while other fields are\n      // being written, so don't tie up this RAM:\n      termOffsets = termAddresses = null;\n      addressBuffer = offsetsBuffer = null;\n    }\n\n","sourceOld":"    @Override\n    public void finish(long termsFilePointer) throws IOException {\n\n      // write primary terms dict offsets\n      packedIndexStart = out.getFilePointer();\n\n      PackedInts.Writer w = PackedInts.getWriter(out, numIndexTerms, PackedInts.bitsRequired(termsFilePointer), PackedInts.DEFAULT);\n\n      // relative to our indexStart\n      long upto = 0;\n      for(int i=0;i<numIndexTerms;i++) {\n        upto += termsPointerDeltas[i];\n        w.add(upto);\n      }\n      w.finish();\n\n      packedOffsetsStart = out.getFilePointer();\n\n      // write offsets into the byte[] terms\n      w = PackedInts.getWriter(out, 1+numIndexTerms, PackedInts.bitsRequired(totTermLength), PackedInts.DEFAULT);\n      upto = 0;\n      for(int i=0;i<numIndexTerms;i++) {\n        w.add(upto);\n        upto += termLengths[i];\n      }\n      w.add(upto);\n      w.finish();\n\n      // our referrer holds onto us, while other fields are\n      // being written, so don't tie up this RAM:\n      termLengths = null;\n      termsPointerDeltas = null;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee","date":1376366778,"type":3,"author":"Han Jiang","isMerge":false,"pathNew":"lucene/codecs/src/java/org/apache/lucene/codecs/blockterms/FixedGapTermsIndexWriter.SimpleFieldWriter#finish(long).mjava","pathOld":"lucene/codecs/src/java/org/apache/lucene/codecs/blockterms/FixedGapTermsIndexWriter.SimpleFieldWriter#finish(long).mjava","sourceNew":"    @Override\n    public void finish(long termsFilePointer) throws IOException {\n\n      // write primary terms dict offsets\n      packedIndexStart = out.getFilePointer();\n\n      // relative to our indexStart\n      termAddresses.finish();\n      addressBuffer.writeTo(out);\n\n      packedOffsetsStart = out.getFilePointer();\n\n      // write offsets into the byte[] terms\n      termOffsets.finish();\n      offsetsBuffer.writeTo(out);\n\n      // our referrer holds onto us, while other fields are\n      // being written, so don't tie up this RAM:\n      termOffsets = termAddresses = null;\n      addressBuffer = offsetsBuffer = null;\n    }\n\n","sourceOld":"    @Override\n    public void finish(long termsFilePointer) throws IOException {\n\n      // write primary terms dict offsets\n      packedIndexStart = out.getFilePointer();\n\n      PackedInts.Writer w = PackedInts.getWriter(out, numIndexTerms, PackedInts.bitsRequired(termsFilePointer), PackedInts.DEFAULT);\n\n      // relative to our indexStart\n      long upto = 0;\n      for(int i=0;i<numIndexTerms;i++) {\n        upto += termsPointerDeltas[i];\n        w.add(upto);\n      }\n      w.finish();\n\n      packedOffsetsStart = out.getFilePointer();\n\n      // write offsets into the byte[] terms\n      w = PackedInts.getWriter(out, 1+numIndexTerms, PackedInts.bitsRequired(totTermLength), PackedInts.DEFAULT);\n      upto = 0;\n      for(int i=0;i<numIndexTerms;i++) {\n        w.add(upto);\n        upto += termLengths[i];\n      }\n      w.add(upto);\n      w.finish();\n\n      // our referrer holds onto us, while other fields are\n      // being written, so don't tie up this RAM:\n      termLengths = null;\n      termsPointerDeltas = null;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"409da428f28953cf35fddd5c9ff5c7e4f5439863","date":1547556145,"type":3,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/codecs/src/java/org/apache/lucene/codecs/blockterms/FixedGapTermsIndexWriter.SimpleFieldWriter#finish(long).mjava","pathOld":"lucene/codecs/src/java/org/apache/lucene/codecs/blockterms/FixedGapTermsIndexWriter.SimpleFieldWriter#finish(long).mjava","sourceNew":"    @Override\n    public void finish(long termsFilePointer) throws IOException {\n\n      // write primary terms dict offsets\n      packedIndexStart = out.getFilePointer();\n\n      // relative to our indexStart\n      termAddresses.finish();\n      addressBuffer.copyTo(out);\n\n      packedOffsetsStart = out.getFilePointer();\n\n      // write offsets into the byte[] terms\n      termOffsets.finish();\n      offsetsBuffer.copyTo(out);\n\n      // our referrer holds onto us, while other fields are\n      // being written, so don't tie up this RAM:\n      termOffsets = termAddresses = null;\n      addressBuffer = null;\n      offsetsBuffer = null;\n    }\n\n","sourceOld":"    @Override\n    public void finish(long termsFilePointer) throws IOException {\n\n      // write primary terms dict offsets\n      packedIndexStart = out.getFilePointer();\n\n      // relative to our indexStart\n      termAddresses.finish();\n      addressBuffer.writeTo(out);\n\n      packedOffsetsStart = out.getFilePointer();\n\n      // write offsets into the byte[] terms\n      termOffsets.finish();\n      offsetsBuffer.writeTo(out);\n\n      // our referrer holds onto us, while other fields are\n      // being written, so don't tie up this RAM:\n      termOffsets = termAddresses = null;\n      addressBuffer = offsetsBuffer = null;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"409da428f28953cf35fddd5c9ff5c7e4f5439863":["a45bec74b98f6fc05f52770cfb425739e6563960"],"a45bec74b98f6fc05f52770cfb425739e6563960":["038e2a9b07e2f8ae58336613cea227bf8b973484"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee":["038e2a9b07e2f8ae58336613cea227bf8b973484"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["409da428f28953cf35fddd5c9ff5c7e4f5439863"],"038e2a9b07e2f8ae58336613cea227bf8b973484":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"409da428f28953cf35fddd5c9ff5c7e4f5439863":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a45bec74b98f6fc05f52770cfb425739e6563960":["409da428f28953cf35fddd5c9ff5c7e4f5439863"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["038e2a9b07e2f8ae58336613cea227bf8b973484"],"8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee":[],"038e2a9b07e2f8ae58336613cea227bf8b973484":["a45bec74b98f6fc05f52770cfb425739e6563960","8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}