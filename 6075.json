{"path":"solr/core/src/java/org/apache/solr/schema/EnumField#createFields(SchemaField,Object).mjava","commits":[{"id":"acd9883560fd89e6448b2b447302fe543040cd4f","date":1488478696,"type":1,"author":"Adrien Grand","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/schema/EnumField#createFields(SchemaField,Object).mjava","pathOld":"solr/core/src/java/org/apache/solr/schema/EnumField#createFields(SchemaField,Object,float).mjava","sourceNew":"  /**\n   * {@inheritDoc}\n   */\n  @Override\n  public List<IndexableField> createFields(SchemaField sf, Object value) {\n    if (sf.hasDocValues()) {\n      List<IndexableField> fields = new ArrayList<>();\n      final IndexableField field = createField(sf, value);\n      fields.add(field);\n\n      if (sf.multiValued()) {\n        BytesRefBuilder bytes = new BytesRefBuilder();\n        readableToIndexed(stringValueToIntValue(value.toString()).toString(), bytes);\n        fields.add(new SortedSetDocValuesField(sf.getName(), bytes.toBytesRef()));\n      } else {\n        final long bits = field.numericValue().intValue();\n        fields.add(new NumericDocValuesField(sf.getName(), bits));\n      }\n      return fields;\n    } else {\n      return Collections.singletonList(createField(sf, value));\n    }\n  }\n\n","sourceOld":"  /**\n   * {@inheritDoc}\n   */\n  @Override\n  public List<IndexableField> createFields(SchemaField sf, Object value, float boost) {\n    if (sf.hasDocValues()) {\n      List<IndexableField> fields = new ArrayList<>();\n      final IndexableField field = createField(sf, value, boost);\n      fields.add(field);\n\n      if (sf.multiValued()) {\n        BytesRefBuilder bytes = new BytesRefBuilder();\n        readableToIndexed(stringValueToIntValue(value.toString()).toString(), bytes);\n        fields.add(new SortedSetDocValuesField(sf.getName(), bytes.toBytesRef()));\n      } else {\n        final long bits = field.numericValue().intValue();\n        fields.add(new NumericDocValuesField(sf.getName(), bits));\n      }\n      return fields;\n    } else {\n      return Collections.singletonList(createField(sf, value, boost));\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"54ad8c9e9210e008dc7b8ad5a037ff20879150ea","date":1501889566,"type":3,"author":"Steve Rowe","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/schema/EnumField#createFields(SchemaField,Object).mjava","pathOld":"solr/core/src/java/org/apache/solr/schema/EnumField#createFields(SchemaField,Object).mjava","sourceNew":"  @Override\n  public List<IndexableField> createFields(SchemaField sf, Object value) {\n    if (sf.hasDocValues()) {\n      List<IndexableField> fields = new ArrayList<>();\n      final IndexableField field = createField(sf, value);\n      fields.add(field);\n\n      if (sf.multiValued()) {\n        BytesRefBuilder bytes = new BytesRefBuilder();\n        readableToIndexed(enumMapping.stringValueToIntValue(value.toString()).toString(), bytes);\n        fields.add(new SortedSetDocValuesField(sf.getName(), bytes.toBytesRef()));\n      } else {\n        final long bits = field.numericValue().intValue();\n        fields.add(new NumericDocValuesField(sf.getName(), bits));\n      }\n      return fields;\n    } else {\n      return Collections.singletonList(createField(sf, value));\n    }\n  }\n\n","sourceOld":"  /**\n   * {@inheritDoc}\n   */\n  @Override\n  public List<IndexableField> createFields(SchemaField sf, Object value) {\n    if (sf.hasDocValues()) {\n      List<IndexableField> fields = new ArrayList<>();\n      final IndexableField field = createField(sf, value);\n      fields.add(field);\n\n      if (sf.multiValued()) {\n        BytesRefBuilder bytes = new BytesRefBuilder();\n        readableToIndexed(stringValueToIntValue(value.toString()).toString(), bytes);\n        fields.add(new SortedSetDocValuesField(sf.getName(), bytes.toBytesRef()));\n      } else {\n        final long bits = field.numericValue().intValue();\n        fields.add(new NumericDocValuesField(sf.getName(), bits));\n      }\n      return fields;\n    } else {\n      return Collections.singletonList(createField(sf, value));\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7a23cf16c8fa265dc0a564adcabb55e3f054e0ac","date":1502192746,"type":3,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/schema/EnumField#createFields(SchemaField,Object).mjava","pathOld":"solr/core/src/java/org/apache/solr/schema/EnumField#createFields(SchemaField,Object).mjava","sourceNew":"  @Override\n  public List<IndexableField> createFields(SchemaField sf, Object value) {\n    if (sf.hasDocValues()) {\n      List<IndexableField> fields = new ArrayList<>();\n      final IndexableField field = createField(sf, value);\n      fields.add(field);\n\n      if (sf.multiValued()) {\n        BytesRefBuilder bytes = new BytesRefBuilder();\n        readableToIndexed(enumMapping.stringValueToIntValue(value.toString()).toString(), bytes);\n        fields.add(new SortedSetDocValuesField(sf.getName(), bytes.toBytesRef()));\n      } else {\n        final long bits = field.numericValue().intValue();\n        fields.add(new NumericDocValuesField(sf.getName(), bits));\n      }\n      return fields;\n    } else {\n      return Collections.singletonList(createField(sf, value));\n    }\n  }\n\n","sourceOld":"  /**\n   * {@inheritDoc}\n   */\n  @Override\n  public List<IndexableField> createFields(SchemaField sf, Object value) {\n    if (sf.hasDocValues()) {\n      List<IndexableField> fields = new ArrayList<>();\n      final IndexableField field = createField(sf, value);\n      fields.add(field);\n\n      if (sf.multiValued()) {\n        BytesRefBuilder bytes = new BytesRefBuilder();\n        readableToIndexed(stringValueToIntValue(value.toString()).toString(), bytes);\n        fields.add(new SortedSetDocValuesField(sf.getName(), bytes.toBytesRef()));\n      } else {\n        final long bits = field.numericValue().intValue();\n        fields.add(new NumericDocValuesField(sf.getName(), bits));\n      }\n      return fields;\n    } else {\n      return Collections.singletonList(createField(sf, value));\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"7a23cf16c8fa265dc0a564adcabb55e3f054e0ac":["acd9883560fd89e6448b2b447302fe543040cd4f","54ad8c9e9210e008dc7b8ad5a037ff20879150ea"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"54ad8c9e9210e008dc7b8ad5a037ff20879150ea":["acd9883560fd89e6448b2b447302fe543040cd4f"],"acd9883560fd89e6448b2b447302fe543040cd4f":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["54ad8c9e9210e008dc7b8ad5a037ff20879150ea"]},"commit2Childs":{"7a23cf16c8fa265dc0a564adcabb55e3f054e0ac":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["acd9883560fd89e6448b2b447302fe543040cd4f"],"acd9883560fd89e6448b2b447302fe543040cd4f":["7a23cf16c8fa265dc0a564adcabb55e3f054e0ac","54ad8c9e9210e008dc7b8ad5a037ff20879150ea"],"54ad8c9e9210e008dc7b8ad5a037ff20879150ea":["7a23cf16c8fa265dc0a564adcabb55e3f054e0ac","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["7a23cf16c8fa265dc0a564adcabb55e3f054e0ac","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}