{"path":"solr/solrj/src/java/org/apache/solr/client/solrj/cloud/autoscaling/Suggester#testChangedMatrix(boolean,Policy.Session,double[]).mjava","commits":[{"id":"16a22f8085bb46850c91784e94f7714345011404","date":1533741843,"type":1,"author":"Noble Paul","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/cloud/autoscaling/Suggester#testChangedMatrix(boolean,Policy.Session,double[]).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/cloud/autoscaling/Suggester#testChangedMatrix(boolean,Policy.Session).mjava","sourceNew":"  List<Violation> testChangedMatrix(boolean strict, Policy.Session session, double[] deviation) {\n    Policy.setApproxValuesAndSortNodes(session.getPolicy().clusterPreferences, session.matrix);\n    List<Violation> errors = new ArrayList<>();\n    for (Clause clause : session.expandedClauses) {\n      if (strict || clause.strict) {\n        List<Violation> errs = clause.test(session, deviation);\n        if (!errs.isEmpty()) {\n          errors.addAll(errs);\n        }\n      }\n    }\n    return errors;\n  }\n\n","sourceOld":"  List<Violation> testChangedMatrix(boolean strict, Policy.Session session) {\n    Policy.setApproxValuesAndSortNodes(session.getPolicy().clusterPreferences, session.matrix);\n    List<Violation> errors = new ArrayList<>();\n    for (Clause clause : session.expandedClauses) {\n      if (strict || clause.strict) {\n        List<Violation> errs = clause.test(session);\n        if (!errs.isEmpty()) {\n          errors.addAll(errs);\n        }\n      }\n    }\n    return errors;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c73f63a2a7b9f4a6b21e8723912461026968d87e","date":1539669411,"type":4,"author":"Noble Paul","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/cloud/autoscaling/Suggester#testChangedMatrix(boolean,Policy.Session,double[]).mjava","sourceNew":null,"sourceOld":"  List<Violation> testChangedMatrix(boolean strict, Policy.Session session, double[] deviation) {\n    Policy.setApproxValuesAndSortNodes(session.getPolicy().clusterPreferences, session.matrix);\n    List<Violation> errors = new ArrayList<>();\n    for (Clause clause : session.expandedClauses) {\n      if (strict || clause.strict) {\n        List<Violation> errs = clause.test(session, deviation);\n        if (!errs.isEmpty()) {\n          errors.addAll(errs);\n        }\n      }\n    }\n    return errors;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"c73f63a2a7b9f4a6b21e8723912461026968d87e":["16a22f8085bb46850c91784e94f7714345011404"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["c73f63a2a7b9f4a6b21e8723912461026968d87e"],"16a22f8085bb46850c91784e94f7714345011404":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["16a22f8085bb46850c91784e94f7714345011404"],"c73f63a2a7b9f4a6b21e8723912461026968d87e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"16a22f8085bb46850c91784e94f7714345011404":["c73f63a2a7b9f4a6b21e8723912461026968d87e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}