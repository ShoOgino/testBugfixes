{"path":"src/test/org/apache/lucene/analysis/TestToken#testMixedStringArray().mjava","commits":[{"id":"6864413dbc0c12104c978c05456f3da1d45adb03","date":1186770873,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"src/test/org/apache/lucene/analysis/TestToken#testMixedStringArray().mjava","pathOld":"/dev/null","sourceNew":"  public void testMixedStringArray() throws Exception {\n    Token t = new Token(\"hello\", 0, 5);\n    assertEquals(t.termText(), \"hello\");\n    assertEquals(t.termLength(), 5);\n    assertEquals(new String(t.termBuffer(), 0, 5), \"hello\");\n    t.setTermText(\"hello2\");\n    assertEquals(t.termLength(), 6);\n    assertEquals(new String(t.termBuffer(), 0, 6), \"hello2\");\n    t.setTermBuffer(\"hello3\".toCharArray(), 0, 6);\n    assertEquals(t.termText(), \"hello3\");\n\n    // Make sure if we get the buffer and change a character\n    // that termText() reflects the change\n    char[] buffer = t.termBuffer();\n    buffer[1] = 'o';\n    assertEquals(t.termText(), \"hollo3\");\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7e2cb543b41c145f33390f460ee743d6693c9c6c","date":1219243087,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/test/org/apache/lucene/analysis/TestToken#testMixedStringArray().mjava","pathOld":"src/test/org/apache/lucene/analysis/TestToken#testMixedStringArray().mjava","sourceNew":"  public void testMixedStringArray() throws Exception {\n    Token t = new Token(\"hello\", 0, 5);\n    assertEquals(t.termText(), \"hello\");\n    assertEquals(t.termLength(), 5);\n    assertEquals(t.term(), \"hello\");\n    t.setTermText(\"hello2\");\n    assertEquals(t.termLength(), 6);\n    assertEquals(t.term(), \"hello2\");\n    t.setTermBuffer(\"hello3\".toCharArray(), 0, 6);\n    assertEquals(t.termText(), \"hello3\");\n\n    // Make sure if we get the buffer and change a character\n    // that termText() reflects the change\n    char[] buffer = t.termBuffer();\n    buffer[1] = 'o';\n    assertEquals(t.termText(), \"hollo3\");\n  }\n\n","sourceOld":"  public void testMixedStringArray() throws Exception {\n    Token t = new Token(\"hello\", 0, 5);\n    assertEquals(t.termText(), \"hello\");\n    assertEquals(t.termLength(), 5);\n    assertEquals(new String(t.termBuffer(), 0, 5), \"hello\");\n    t.setTermText(\"hello2\");\n    assertEquals(t.termLength(), 6);\n    assertEquals(new String(t.termBuffer(), 0, 6), \"hello2\");\n    t.setTermBuffer(\"hello3\".toCharArray(), 0, 6);\n    assertEquals(t.termText(), \"hello3\");\n\n    // Make sure if we get the buffer and change a character\n    // that termText() reflects the change\n    char[] buffer = t.termBuffer();\n    buffer[1] = 'o';\n    assertEquals(t.termText(), \"hollo3\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"64af8690a948c97feaa9e2844a0c7051034f153d","date":1255862276,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/test/org/apache/lucene/analysis/TestToken#testMixedStringArray().mjava","pathOld":"src/test/org/apache/lucene/analysis/TestToken#testMixedStringArray().mjava","sourceNew":"  public void testMixedStringArray() throws Exception {\n    Token t = new Token(\"hello\", 0, 5);\n    assertEquals(t.termLength(), 5);\n    assertEquals(t.term(), \"hello\");\n    t.setTermBuffer(\"hello2\");\n    assertEquals(t.termLength(), 6);\n    assertEquals(t.term(), \"hello2\");\n    t.setTermBuffer(\"hello3\".toCharArray(), 0, 6);\n    assertEquals(t.term(), \"hello3\");\n\n    char[] buffer = t.termBuffer();\n    buffer[1] = 'o';\n    assertEquals(t.term(), \"hollo3\");\n  }\n\n","sourceOld":"  public void testMixedStringArray() throws Exception {\n    Token t = new Token(\"hello\", 0, 5);\n    assertEquals(t.termText(), \"hello\");\n    assertEquals(t.termLength(), 5);\n    assertEquals(t.term(), \"hello\");\n    t.setTermText(\"hello2\");\n    assertEquals(t.termLength(), 6);\n    assertEquals(t.term(), \"hello2\");\n    t.setTermBuffer(\"hello3\".toCharArray(), 0, 6);\n    assertEquals(t.termText(), \"hello3\");\n\n    // Make sure if we get the buffer and change a character\n    // that termText() reflects the change\n    char[] buffer = t.termBuffer();\n    buffer[1] = 'o';\n    assertEquals(t.termText(), \"hollo3\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":4,"author":"Dawid Weiss","isMerge":false,"pathNew":"/dev/null","pathOld":"src/test/org/apache/lucene/analysis/TestToken#testMixedStringArray().mjava","sourceNew":null,"sourceOld":"  public void testMixedStringArray() throws Exception {\n    Token t = new Token(\"hello\", 0, 5);\n    assertEquals(t.termLength(), 5);\n    assertEquals(t.term(), \"hello\");\n    t.setTermBuffer(\"hello2\");\n    assertEquals(t.termLength(), 6);\n    assertEquals(t.term(), \"hello2\");\n    t.setTermBuffer(\"hello3\".toCharArray(), 0, 6);\n    assertEquals(t.term(), \"hello3\");\n\n    char[] buffer = t.termBuffer();\n    buffer[1] = 'o';\n    assertEquals(t.term(), \"hollo3\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"7e2cb543b41c145f33390f460ee743d6693c9c6c":["6864413dbc0c12104c978c05456f3da1d45adb03"],"6864413dbc0c12104c978c05456f3da1d45adb03":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"64af8690a948c97feaa9e2844a0c7051034f153d":["7e2cb543b41c145f33390f460ee743d6693c9c6c"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["64af8690a948c97feaa9e2844a0c7051034f153d"]},"commit2Childs":{"7e2cb543b41c145f33390f460ee743d6693c9c6c":["64af8690a948c97feaa9e2844a0c7051034f153d"],"6864413dbc0c12104c978c05456f3da1d45adb03":["7e2cb543b41c145f33390f460ee743d6693c9c6c"],"64af8690a948c97feaa9e2844a0c7051034f153d":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["6864413dbc0c12104c978c05456f3da1d45adb03"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}