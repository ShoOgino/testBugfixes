{"path":"lucene/facet/src/java/org/apache/lucene/facet/DrillSidewaysQuery#rewrite(IndexReader).mjava","commits":[{"id":"21d36d0db865f7b84026b447bec653469a6e66df","date":1385495602,"type":1,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/DrillSidewaysQuery#rewrite(IndexReader).mjava","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/simple/SimpleDrillSidewaysQuery#rewrite(IndexReader).mjava","sourceNew":"  @Override\n  public Query rewrite(IndexReader reader) throws IOException {\n    Query newQuery = baseQuery;\n    while(true) {\n      Query rewrittenQuery = newQuery.rewrite(reader);\n      if (rewrittenQuery == newQuery) {\n        break;\n      }\n      newQuery = rewrittenQuery;\n    }\n    if (newQuery == baseQuery) {\n      return this;\n    } else {\n      return new DrillSidewaysQuery(newQuery, drillDownCollector, drillSidewaysCollectors, drillDownTerms);\n    }\n  }\n\n","sourceOld":"  @Override\n  public Query rewrite(IndexReader reader) throws IOException {\n    Query newQuery = baseQuery;\n    while(true) {\n      Query rewrittenQuery = newQuery.rewrite(reader);\n      if (rewrittenQuery == newQuery) {\n        break;\n      }\n      newQuery = rewrittenQuery;\n    }\n    if (newQuery == baseQuery) {\n      return this;\n    } else {\n      return new SimpleDrillSidewaysQuery(newQuery, drillDownCollector, drillSidewaysCollectors, drillDownTerms);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3cc728b07df73b197e6d940d27f9b08b63918f13","date":1388834348,"type":1,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/DrillSidewaysQuery#rewrite(IndexReader).mjava","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/search/DrillSidewaysQuery#rewrite(IndexReader).mjava","sourceNew":"  @Override\n  public Query rewrite(IndexReader reader) throws IOException {\n    Query newQuery = baseQuery;\n    while(true) {\n      Query rewrittenQuery = newQuery.rewrite(reader);\n      if (rewrittenQuery == newQuery) {\n        break;\n      }\n      newQuery = rewrittenQuery;\n    }\n    if (newQuery == baseQuery) {\n      return this;\n    } else {\n      return new DrillSidewaysQuery(newQuery, drillDownCollector, drillSidewaysCollectors, drillDownTerms);\n    }\n  }\n\n","sourceOld":"  @Override\n  public Query rewrite(IndexReader reader) throws IOException {\n    Query newQuery = baseQuery;\n    while(true) {\n      Query rewrittenQuery = newQuery.rewrite(reader);\n      if (rewrittenQuery == newQuery) {\n        break;\n      }\n      newQuery = rewrittenQuery;\n    }\n    if (newQuery == baseQuery) {\n      return this;\n    } else {\n      return new DrillSidewaysQuery(newQuery, drillDownCollector, drillSidewaysCollectors, drillDownTerms);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"40640359164f629dd440a47df2e145d084ce9645","date":1391711808,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/DrillSidewaysQuery#rewrite(IndexReader).mjava","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/DrillSidewaysQuery#rewrite(IndexReader).mjava","sourceNew":"  @Override\n  public Query rewrite(IndexReader reader) throws IOException {\n    Query newQuery = baseQuery;\n    while(true) {\n      Query rewrittenQuery = newQuery.rewrite(reader);\n      if (rewrittenQuery == newQuery) {\n        break;\n      }\n      newQuery = rewrittenQuery;\n    }\n    if (newQuery == baseQuery) {\n      return this;\n    } else {\n      return new DrillSidewaysQuery(newQuery, drillDownCollector, drillSidewaysCollectors, drillDownQueries, scoreSubDocsAtOnce);\n    }\n  }\n\n","sourceOld":"  @Override\n  public Query rewrite(IndexReader reader) throws IOException {\n    Query newQuery = baseQuery;\n    while(true) {\n      Query rewrittenQuery = newQuery.rewrite(reader);\n      if (rewrittenQuery == newQuery) {\n        break;\n      }\n      newQuery = rewrittenQuery;\n    }\n    if (newQuery == baseQuery) {\n      return this;\n    } else {\n      return new DrillSidewaysQuery(newQuery, drillDownCollector, drillSidewaysCollectors, drillDownTerms);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2dfdf766e55e943d942055d7de53c7ad6bc45283","date":1441632886,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/DrillSidewaysQuery#rewrite(IndexReader).mjava","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/DrillSidewaysQuery#rewrite(IndexReader).mjava","sourceNew":"  @Override\n  public Query rewrite(IndexReader reader) throws IOException {\n    Query newQuery = baseQuery;\n    while(true) {\n      Query rewrittenQuery = newQuery.rewrite(reader);\n      if (rewrittenQuery == newQuery) {\n        break;\n      }\n      newQuery = rewrittenQuery;\n    }\n    if (newQuery == baseQuery) {\n      return super.rewrite(reader);\n    } else {\n      return new DrillSidewaysQuery(newQuery, drillDownCollector, drillSidewaysCollectors, drillDownQueries, scoreSubDocsAtOnce);\n    }\n  }\n\n","sourceOld":"  @Override\n  public Query rewrite(IndexReader reader) throws IOException {\n    Query newQuery = baseQuery;\n    while(true) {\n      Query rewrittenQuery = newQuery.rewrite(reader);\n      if (rewrittenQuery == newQuery) {\n        break;\n      }\n      newQuery = rewrittenQuery;\n    }\n    if (newQuery == baseQuery) {\n      return this;\n    } else {\n      return new DrillSidewaysQuery(newQuery, drillDownCollector, drillSidewaysCollectors, drillDownQueries, scoreSubDocsAtOnce);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"2dfdf766e55e943d942055d7de53c7ad6bc45283":["40640359164f629dd440a47df2e145d084ce9645"],"21d36d0db865f7b84026b447bec653469a6e66df":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"3cc728b07df73b197e6d940d27f9b08b63918f13":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","21d36d0db865f7b84026b447bec653469a6e66df"],"40640359164f629dd440a47df2e145d084ce9645":["3cc728b07df73b197e6d940d27f9b08b63918f13"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["2dfdf766e55e943d942055d7de53c7ad6bc45283"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["21d36d0db865f7b84026b447bec653469a6e66df","3cc728b07df73b197e6d940d27f9b08b63918f13"],"2dfdf766e55e943d942055d7de53c7ad6bc45283":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"21d36d0db865f7b84026b447bec653469a6e66df":["3cc728b07df73b197e6d940d27f9b08b63918f13"],"3cc728b07df73b197e6d940d27f9b08b63918f13":["40640359164f629dd440a47df2e145d084ce9645"],"40640359164f629dd440a47df2e145d084ce9645":["2dfdf766e55e943d942055d7de53c7ad6bc45283"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}