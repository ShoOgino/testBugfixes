{"path":"lucene/queries/src/java/org/apache/lucene/queries/intervals/UnorderedIntervalsSource.UnorderedIntervalIterator#gaps().mjava","commits":[{"id":"97ee2282ff806e9bc9d705f389cf40451ab81c3e","date":1561721333,"type":1,"author":"Alan Woodward","isMerge":false,"pathNew":"lucene/queries/src/java/org/apache/lucene/queries/intervals/UnorderedIntervalsSource.UnorderedIntervalIterator#gaps().mjava","pathOld":"lucene/sandbox/src/java/org/apache/lucene/search/intervals/UnorderedIntervalsSource.UnorderedIntervalIterator#gaps().mjava","sourceNew":"    @Override\n    public int gaps() {\n      for (int i = 0; i < subIterators.length; i++) {\n        if (subIterators[i].end() > end) {\n          innerPositions[i * 2] = start;\n          innerPositions[i * 2 + 1] = firstEnd;\n        }\n        else {\n          innerPositions[i * 2] = subIterators[i].start();\n          innerPositions[i * 2 + 1] = subIterators[i].end();\n        }\n      }\n      Arrays.sort(innerPositions);\n      int gaps = 0;\n      for (int i = 1; i < subIterators.length; i++) {\n        gaps += (innerPositions[i * 2] - innerPositions[i * 2 - 1] - 1);\n      }\n      return gaps;\n    }\n\n","sourceOld":"    @Override\n    public int gaps() {\n      for (int i = 0; i < subIterators.length; i++) {\n        if (subIterators[i].end() > end) {\n          innerPositions[i * 2] = start;\n          innerPositions[i * 2 + 1] = firstEnd;\n        }\n        else {\n          innerPositions[i * 2] = subIterators[i].start();\n          innerPositions[i * 2 + 1] = subIterators[i].end();\n        }\n      }\n      Arrays.sort(innerPositions);\n      int gaps = 0;\n      for (int i = 1; i < subIterators.length; i++) {\n        gaps += (innerPositions[i * 2] - innerPositions[i * 2 - 1] - 1);\n      }\n      return gaps;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"30c78dc09f599cd42c186ddd94084249c8db1ede","date":1581000287,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"lucene/queries/src/java/org/apache/lucene/queries/intervals/UnorderedIntervalsSource.UnorderedIntervalIterator#gaps().mjava","pathOld":"lucene/queries/src/java/org/apache/lucene/queries/intervals/UnorderedIntervalsSource.UnorderedIntervalIterator#gaps().mjava","sourceNew":"    @Override\n    public int gaps() {\n      return slop;\n    }\n\n","sourceOld":"    @Override\n    public int gaps() {\n      for (int i = 0; i < subIterators.length; i++) {\n        if (subIterators[i].end() > end) {\n          innerPositions[i * 2] = start;\n          innerPositions[i * 2 + 1] = firstEnd;\n        }\n        else {\n          innerPositions[i * 2] = subIterators[i].start();\n          innerPositions[i * 2 + 1] = subIterators[i].end();\n        }\n      }\n      Arrays.sort(innerPositions);\n      int gaps = 0;\n      for (int i = 1; i < subIterators.length; i++) {\n        gaps += (innerPositions[i * 2] - innerPositions[i * 2 - 1] - 1);\n      }\n      return gaps;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"97ee2282ff806e9bc9d705f389cf40451ab81c3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"30c78dc09f599cd42c186ddd94084249c8db1ede":["97ee2282ff806e9bc9d705f389cf40451ab81c3e"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["30c78dc09f599cd42c186ddd94084249c8db1ede"]},"commit2Childs":{"97ee2282ff806e9bc9d705f389cf40451ab81c3e":["30c78dc09f599cd42c186ddd94084249c8db1ede"],"30c78dc09f599cd42c186ddd94084249c8db1ede":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["97ee2282ff806e9bc9d705f389cf40451ab81c3e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}