{"path":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriterExceptions#testRollbackExceptionHang().mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriterExceptions#testRollbackExceptionHang().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexWriterExceptions#testRollbackExceptionHang().mjava","sourceNew":"  // LUCENE-1347\n  public void testRollbackExceptionHang() throws Throwable {\n    Directory dir = newDirectory();\n    MockIndexWriter4 w = new MockIndexWriter4(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n\n    addDoc(w);\n    w.doFail = true;\n    try {\n      w.rollback();\n      fail(\"did not hit intentional RuntimeException\");\n    } catch (RuntimeException re) {\n      // expected\n    }\n\n    w.doFail = false;\n    w.rollback();\n    dir.close();\n  }\n\n","sourceOld":"  // LUCENE-1347\n  public void testRollbackExceptionHang() throws Throwable {\n    Directory dir = newDirectory();\n    MockIndexWriter4 w = new MockIndexWriter4(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n\n    addDoc(w);\n    w.doFail = true;\n    try {\n      w.rollback();\n      fail(\"did not hit intentional RuntimeException\");\n    } catch (RuntimeException re) {\n      // expected\n    }\n\n    w.doFail = false;\n    w.rollback();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"629c38c4ae4e303d0617e05fbfe508140b32f0a3","date":1334500904,"type":3,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriterExceptions#testRollbackExceptionHang().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriterExceptions#testRollbackExceptionHang().mjava","sourceNew":"  // LUCENE-1347\n  public void testRollbackExceptionHang() throws Throwable {\n    Directory dir = newDirectory();\n    MockIndexWriter4 w = new MockIndexWriter4(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random())));\n\n    addDoc(w);\n    w.doFail = true;\n    try {\n      w.rollback();\n      fail(\"did not hit intentional RuntimeException\");\n    } catch (RuntimeException re) {\n      // expected\n    }\n\n    w.doFail = false;\n    w.rollback();\n    dir.close();\n  }\n\n","sourceOld":"  // LUCENE-1347\n  public void testRollbackExceptionHang() throws Throwable {\n    Directory dir = newDirectory();\n    MockIndexWriter4 w = new MockIndexWriter4(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n\n    addDoc(w);\n    w.doFail = true;\n    try {\n      w.rollback();\n      fail(\"did not hit intentional RuntimeException\");\n    } catch (RuntimeException re) {\n      // expected\n    }\n\n    w.doFail = false;\n    w.rollback();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"978de4e2d23054c6624dd5928ddeb734dca68eec","date":1370592803,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriterExceptions#testRollbackExceptionHang().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriterExceptions#testRollbackExceptionHang().mjava","sourceNew":"  // LUCENE-1347\n  public void testRollbackExceptionHang() throws Throwable {\n    Directory dir = newDirectory();\n    TestPoint4 testPoint = new TestPoint4();\n    IndexWriter w = RandomIndexWriter.mockIndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random())), testPoint);\n    \n\n    addDoc(w);\n    testPoint.doFail = true;\n    try {\n      w.rollback();\n      fail(\"did not hit intentional RuntimeException\");\n    } catch (RuntimeException re) {\n      // expected\n    }\n\n    testPoint.doFail = false;\n    w.rollback();\n    dir.close();\n  }\n\n","sourceOld":"  // LUCENE-1347\n  public void testRollbackExceptionHang() throws Throwable {\n    Directory dir = newDirectory();\n    MockIndexWriter4 w = new MockIndexWriter4(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random())));\n\n    addDoc(w);\n    w.doFail = true;\n    try {\n      w.rollback();\n      fail(\"did not hit intentional RuntimeException\");\n    } catch (RuntimeException re) {\n      // expected\n    }\n\n    w.doFail = false;\n    w.rollback();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"54a6bea0b991120a99ad0e2f72ae853fd5ecae0e","date":1406737224,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriterExceptions#testRollbackExceptionHang().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriterExceptions#testRollbackExceptionHang().mjava","sourceNew":"  // LUCENE-1347\n  public void testRollbackExceptionHang() throws Throwable {\n    Directory dir = newDirectory();\n    TestPoint4 testPoint = new TestPoint4();\n    IndexWriter w = RandomIndexWriter.mockIndexWriter(dir, newIndexWriterConfig(new MockAnalyzer(random())), testPoint);\n    \n\n    addDoc(w);\n    testPoint.doFail = true;\n    try {\n      w.rollback();\n      fail(\"did not hit intentional RuntimeException\");\n    } catch (RuntimeException re) {\n      // expected\n    }\n\n    testPoint.doFail = false;\n    w.rollback();\n    dir.close();\n  }\n\n","sourceOld":"  // LUCENE-1347\n  public void testRollbackExceptionHang() throws Throwable {\n    Directory dir = newDirectory();\n    TestPoint4 testPoint = new TestPoint4();\n    IndexWriter w = RandomIndexWriter.mockIndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random())), testPoint);\n    \n\n    addDoc(w);\n    testPoint.doFail = true;\n    try {\n      w.rollback();\n      fail(\"did not hit intentional RuntimeException\");\n    } catch (RuntimeException re) {\n      // expected\n    }\n\n    testPoint.doFail = false;\n    w.rollback();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"a6b82a3644db30161c3cbd3e23aeefe19cb88113","date":1435478870,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriterExceptions#testRollbackExceptionHang().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriterExceptions#testRollbackExceptionHang().mjava","sourceNew":"  // LUCENE-1347\n  public void testRollbackExceptionHang() throws Throwable {\n    Directory dir = newDirectory();\n    TestPoint4 testPoint = new TestPoint4();\n    IndexWriter w = RandomIndexWriter.mockIndexWriter(random(), dir, newIndexWriterConfig(new MockAnalyzer(random())), testPoint);\n    \n\n    addDoc(w);\n    testPoint.doFail = true;\n    try {\n      w.rollback();\n      fail(\"did not hit intentional RuntimeException\");\n    } catch (RuntimeException re) {\n      // expected\n    }\n\n    testPoint.doFail = false;\n    w.rollback();\n    dir.close();\n  }\n\n","sourceOld":"  // LUCENE-1347\n  public void testRollbackExceptionHang() throws Throwable {\n    Directory dir = newDirectory();\n    TestPoint4 testPoint = new TestPoint4();\n    IndexWriter w = RandomIndexWriter.mockIndexWriter(dir, newIndexWriterConfig(new MockAnalyzer(random())), testPoint);\n    \n\n    addDoc(w);\n    testPoint.doFail = true;\n    try {\n      w.rollback();\n      fail(\"did not hit intentional RuntimeException\");\n    } catch (RuntimeException re) {\n      // expected\n    }\n\n    testPoint.doFail = false;\n    w.rollback();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"05fe562aa248790944d43cdd478f512572835ba0","date":1455901667,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriterExceptions#testRollbackExceptionHang().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriterExceptions#testRollbackExceptionHang().mjava","sourceNew":"  // LUCENE-1347\n  public void testRollbackExceptionHang() throws Throwable {\n    Directory dir = newDirectory();\n    TestPoint4 testPoint = new TestPoint4();\n    IndexWriter w = RandomIndexWriter.mockIndexWriter(random(), dir, newIndexWriterConfig(new MockAnalyzer(random())), testPoint);\n    \n\n    addDoc(w);\n    testPoint.doFail = true;\n    expectThrows(RuntimeException.class, () -> {\n      w.rollback();\n    });\n\n    testPoint.doFail = false;\n    w.rollback();\n    dir.close();\n  }\n\n","sourceOld":"  // LUCENE-1347\n  public void testRollbackExceptionHang() throws Throwable {\n    Directory dir = newDirectory();\n    TestPoint4 testPoint = new TestPoint4();\n    IndexWriter w = RandomIndexWriter.mockIndexWriter(random(), dir, newIndexWriterConfig(new MockAnalyzer(random())), testPoint);\n    \n\n    addDoc(w);\n    testPoint.doFail = true;\n    try {\n      w.rollback();\n      fail(\"did not hit intentional RuntimeException\");\n    } catch (RuntimeException re) {\n      // expected\n    }\n\n    testPoint.doFail = false;\n    w.rollback();\n    dir.close();\n  }\n\n","bugFix":["c619aff1490fbcbfb8aee81049da5e5120a986d6"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"978de4e2d23054c6624dd5928ddeb734dca68eec":["629c38c4ae4e303d0617e05fbfe508140b32f0a3"],"54a6bea0b991120a99ad0e2f72ae853fd5ecae0e":["978de4e2d23054c6624dd5928ddeb734dca68eec"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"05fe562aa248790944d43cdd478f512572835ba0":["a6b82a3644db30161c3cbd3e23aeefe19cb88113"],"a6b82a3644db30161c3cbd3e23aeefe19cb88113":["54a6bea0b991120a99ad0e2f72ae853fd5ecae0e"],"629c38c4ae4e303d0617e05fbfe508140b32f0a3":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["05fe562aa248790944d43cdd478f512572835ba0"]},"commit2Childs":{"978de4e2d23054c6624dd5928ddeb734dca68eec":["54a6bea0b991120a99ad0e2f72ae853fd5ecae0e"],"54a6bea0b991120a99ad0e2f72ae853fd5ecae0e":["a6b82a3644db30161c3cbd3e23aeefe19cb88113"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["629c38c4ae4e303d0617e05fbfe508140b32f0a3"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"05fe562aa248790944d43cdd478f512572835ba0":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a6b82a3644db30161c3cbd3e23aeefe19cb88113":["05fe562aa248790944d43cdd478f512572835ba0"],"629c38c4ae4e303d0617e05fbfe508140b32f0a3":["978de4e2d23054c6624dd5928ddeb734dca68eec"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}