{"path":"lucene/src/java/org/apache/lucene/index/codecs/memory/MemoryCodec#fieldsConsumer(SegmentWriteState).mjava","commits":[{"id":"7a2ad3e19433f4c343b5e95ecc8a85cc33dffccc","date":1308411958,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/memory/MemoryCodec#fieldsConsumer(SegmentWriteState).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public FieldsConsumer fieldsConsumer(SegmentWriteState state) throws IOException {\n\n    final String fileName = IndexFileNames.segmentFileName(state.segmentName, state.codecId, EXTENSION);\n    final IndexOutput out = state.directory.createOutput(fileName);\n    \n    return new FieldsConsumer() {\n      @Override\n      public TermsConsumer addField(FieldInfo field) {\n        if (VERBOSE) System.out.println(\"\\naddField field=\" + field.name);\n        return new TermsWriter(out, field);\n      }\n\n      @Override\n      public void close() throws IOException {\n        // EOF marker:\n        try {\n          out.writeVInt(0);\n        } finally {\n          out.close();\n        }\n      }\n    };\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d1ded5d4f5b5e3e5f32bff69cd6fe5e64322a886","date":1308439813,"type":0,"author":"Steven Rowe","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/memory/MemoryCodec#fieldsConsumer(SegmentWriteState).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public FieldsConsumer fieldsConsumer(SegmentWriteState state) throws IOException {\n\n    final String fileName = IndexFileNames.segmentFileName(state.segmentName, state.codecId, EXTENSION);\n    final IndexOutput out = state.directory.createOutput(fileName);\n    \n    return new FieldsConsumer() {\n      @Override\n      public TermsConsumer addField(FieldInfo field) {\n        if (VERBOSE) System.out.println(\"\\naddField field=\" + field.name);\n        return new TermsWriter(out, field);\n      }\n\n      @Override\n      public void close() throws IOException {\n        // EOF marker:\n        try {\n          out.writeVInt(0);\n        } finally {\n          out.close();\n        }\n      }\n    };\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"639c36565ce03aed5b0fce7c9e4448e53a1f7efd","date":1308580104,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/memory/MemoryCodec#fieldsConsumer(SegmentWriteState).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/memory/MemoryCodec#fieldsConsumer(SegmentWriteState).mjava","sourceNew":"  @Override\n  public FieldsConsumer fieldsConsumer(SegmentWriteState state) throws IOException {\n\n    final String fileName = IndexFileNames.segmentFileName(state.segmentName, state.codecId, EXTENSION);\n    final IndexOutput out = state.directory.createOutput(fileName, state.context);\n    \n    return new FieldsConsumer() {\n      @Override\n      public TermsConsumer addField(FieldInfo field) {\n        if (VERBOSE) System.out.println(\"\\naddField field=\" + field.name);\n        return new TermsWriter(out, field);\n      }\n\n      @Override\n      public void close() throws IOException {\n        // EOF marker:\n        try {\n          out.writeVInt(0);\n        } finally {\n          out.close();\n        }\n      }\n    };\n  }\n\n","sourceOld":"  @Override\n  public FieldsConsumer fieldsConsumer(SegmentWriteState state) throws IOException {\n\n    final String fileName = IndexFileNames.segmentFileName(state.segmentName, state.codecId, EXTENSION);\n    final IndexOutput out = state.directory.createOutput(fileName);\n    \n    return new FieldsConsumer() {\n      @Override\n      public TermsConsumer addField(FieldInfo field) {\n        if (VERBOSE) System.out.println(\"\\naddField field=\" + field.name);\n        return new TermsWriter(out, field);\n      }\n\n      @Override\n      public void close() throws IOException {\n        // EOF marker:\n        try {\n          out.writeVInt(0);\n        } finally {\n          out.close();\n        }\n      }\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ddc4c914be86e34b54f70023f45a60fa7f04e929","date":1310115160,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/memory/MemoryCodec#fieldsConsumer(SegmentWriteState).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/memory/MemoryCodec#fieldsConsumer(SegmentWriteState).mjava","sourceNew":"  @Override\n  public FieldsConsumer fieldsConsumer(SegmentWriteState state) throws IOException {\n\n    final String fileName = IndexFileNames.segmentFileName(state.segmentName, state.codecId, EXTENSION);\n    final IndexOutput out = state.directory.createOutput(fileName, state.context);\n    \n    return new FieldsConsumer() {\n      @Override\n      public TermsConsumer addField(FieldInfo field) {\n        if (VERBOSE) System.out.println(\"\\naddField field=\" + field.name);\n        return new TermsWriter(out, field);\n      }\n\n      @Override\n      public void close() throws IOException {\n        // EOF marker:\n        try {\n          out.writeVInt(0);\n        } finally {\n          out.close();\n        }\n      }\n    };\n  }\n\n","sourceOld":"  @Override\n  public FieldsConsumer fieldsConsumer(SegmentWriteState state) throws IOException {\n\n    final String fileName = IndexFileNames.segmentFileName(state.segmentName, state.codecId, EXTENSION);\n    final IndexOutput out = state.directory.createOutput(fileName);\n    \n    return new FieldsConsumer() {\n      @Override\n      public TermsConsumer addField(FieldInfo field) {\n        if (VERBOSE) System.out.println(\"\\naddField field=\" + field.name);\n        return new TermsWriter(out, field);\n      }\n\n      @Override\n      public void close() throws IOException {\n        // EOF marker:\n        try {\n          out.writeVInt(0);\n        } finally {\n          out.close();\n        }\n      }\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5d004d0e0b3f65bb40da76d476d659d7888270e8","date":1310158940,"type":3,"author":"Steven Rowe","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/memory/MemoryCodec#fieldsConsumer(SegmentWriteState).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/memory/MemoryCodec#fieldsConsumer(SegmentWriteState).mjava","sourceNew":"  @Override\n  public FieldsConsumer fieldsConsumer(SegmentWriteState state) throws IOException {\n\n    final String fileName = IndexFileNames.segmentFileName(state.segmentName, state.codecId, EXTENSION);\n    final IndexOutput out = state.directory.createOutput(fileName, state.context);\n    \n    return new FieldsConsumer() {\n      @Override\n      public TermsConsumer addField(FieldInfo field) {\n        if (VERBOSE) System.out.println(\"\\naddField field=\" + field.name);\n        return new TermsWriter(out, field);\n      }\n\n      @Override\n      public void close() throws IOException {\n        // EOF marker:\n        try {\n          out.writeVInt(0);\n        } finally {\n          out.close();\n        }\n      }\n    };\n  }\n\n","sourceOld":"  @Override\n  public FieldsConsumer fieldsConsumer(SegmentWriteState state) throws IOException {\n\n    final String fileName = IndexFileNames.segmentFileName(state.segmentName, state.codecId, EXTENSION);\n    final IndexOutput out = state.directory.createOutput(fileName);\n    \n    return new FieldsConsumer() {\n      @Override\n      public TermsConsumer addField(FieldInfo field) {\n        if (VERBOSE) System.out.println(\"\\naddField field=\" + field.name);\n        return new TermsWriter(out, field);\n      }\n\n      @Override\n      public void close() throws IOException {\n        // EOF marker:\n        try {\n          out.writeVInt(0);\n        } finally {\n          out.close();\n        }\n      }\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7b91922b55d15444d554721b352861d028eb8278","date":1320421415,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/memory/MemoryPostingsFormat#fieldsConsumer(SegmentWriteState).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/memory/MemoryCodec#fieldsConsumer(SegmentWriteState).mjava","sourceNew":"  @Override\n  public FieldsConsumer fieldsConsumer(SegmentWriteState state) throws IOException {\n\n    final String fileName = IndexFileNames.segmentFileName(state.segmentName, state.segmentSuffix, EXTENSION);\n    final IndexOutput out = state.directory.createOutput(fileName, state.context);\n    \n    return new FieldsConsumer() {\n      @Override\n      public TermsConsumer addField(FieldInfo field) {\n        if (VERBOSE) System.out.println(\"\\naddField field=\" + field.name);\n        return new TermsWriter(out, field);\n      }\n\n      @Override\n      public void close() throws IOException {\n        // EOF marker:\n        try {\n          out.writeVInt(0);\n        } finally {\n          out.close();\n        }\n      }\n    };\n  }\n\n","sourceOld":"  @Override\n  public FieldsConsumer fieldsConsumer(SegmentWriteState state) throws IOException {\n\n    final String fileName = IndexFileNames.segmentFileName(state.segmentName, state.codecId, EXTENSION);\n    final IndexOutput out = state.directory.createOutput(fileName, state.context);\n    \n    return new FieldsConsumer() {\n      @Override\n      public TermsConsumer addField(FieldInfo field) {\n        if (VERBOSE) System.out.println(\"\\naddField field=\" + field.name);\n        return new TermsWriter(out, field);\n      }\n\n      @Override\n      public void close() throws IOException {\n        // EOF marker:\n        try {\n          out.writeVInt(0);\n        } finally {\n          out.close();\n        }\n      }\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"7b91922b55d15444d554721b352861d028eb8278":["ddc4c914be86e34b54f70023f45a60fa7f04e929"],"d1ded5d4f5b5e3e5f32bff69cd6fe5e64322a886":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","7a2ad3e19433f4c343b5e95ecc8a85cc33dffccc"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"639c36565ce03aed5b0fce7c9e4448e53a1f7efd":["7a2ad3e19433f4c343b5e95ecc8a85cc33dffccc"],"5d004d0e0b3f65bb40da76d476d659d7888270e8":["d1ded5d4f5b5e3e5f32bff69cd6fe5e64322a886","ddc4c914be86e34b54f70023f45a60fa7f04e929"],"ddc4c914be86e34b54f70023f45a60fa7f04e929":["7a2ad3e19433f4c343b5e95ecc8a85cc33dffccc","639c36565ce03aed5b0fce7c9e4448e53a1f7efd"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["7b91922b55d15444d554721b352861d028eb8278"],"7a2ad3e19433f4c343b5e95ecc8a85cc33dffccc":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"7b91922b55d15444d554721b352861d028eb8278":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"d1ded5d4f5b5e3e5f32bff69cd6fe5e64322a886":["5d004d0e0b3f65bb40da76d476d659d7888270e8"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["d1ded5d4f5b5e3e5f32bff69cd6fe5e64322a886","7a2ad3e19433f4c343b5e95ecc8a85cc33dffccc"],"639c36565ce03aed5b0fce7c9e4448e53a1f7efd":["ddc4c914be86e34b54f70023f45a60fa7f04e929"],"5d004d0e0b3f65bb40da76d476d659d7888270e8":[],"ddc4c914be86e34b54f70023f45a60fa7f04e929":["7b91922b55d15444d554721b352861d028eb8278","5d004d0e0b3f65bb40da76d476d659d7888270e8"],"7a2ad3e19433f4c343b5e95ecc8a85cc33dffccc":["d1ded5d4f5b5e3e5f32bff69cd6fe5e64322a886","639c36565ce03aed5b0fce7c9e4448e53a1f7efd","ddc4c914be86e34b54f70023f45a60fa7f04e929"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["5d004d0e0b3f65bb40da76d476d659d7888270e8","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}