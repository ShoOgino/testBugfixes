{"path":"solr/test-framework/src/java/org/apache/solr/BaseDistributedSearchTestCase#seedSolrHome(File).mjava","commits":[{"id":"87e71a21d5a987fc33ae9a0f50353e220e64f2c7","date":1425319675,"type":0,"author":"Chris M. Hostetter","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/BaseDistributedSearchTestCase#seedSolrHome(File).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Given a directory that will be used as the SOLR_HOME for a jetty instance, seeds that \n   * directory with the contents of {@link #getSolrHome} and ensures that the proper {@link #getSolrXml} \n   * file is in place.\n   */\n  private void seedSolrHome(File jettyHome) throws IOException {\n    FileUtils.copyDirectory(new File(getSolrHome()), jettyHome);\n    String solrxml = getSolrXml();\n    if (solrxml != null) {\n      FileUtils.copyFile(new File(getSolrHome(), solrxml), new File(jettyHome, \"solr.xml\"));\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b06445ae1731e049327712db0454e5643ca9b7fe","date":1425329139,"type":0,"author":"Dawid Weiss","isMerge":true,"pathNew":"solr/test-framework/src/java/org/apache/solr/BaseDistributedSearchTestCase#seedSolrHome(File).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Given a directory that will be used as the SOLR_HOME for a jetty instance, seeds that \n   * directory with the contents of {@link #getSolrHome} and ensures that the proper {@link #getSolrXml} \n   * file is in place.\n   */\n  private void seedSolrHome(File jettyHome) throws IOException {\n    FileUtils.copyDirectory(new File(getSolrHome()), jettyHome);\n    String solrxml = getSolrXml();\n    if (solrxml != null) {\n      FileUtils.copyFile(new File(getSolrHome(), solrxml), new File(jettyHome, \"solr.xml\"));\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9bc766d645fa848f86c381c7f6acf2c881c99399","date":1425549246,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/BaseDistributedSearchTestCase#seedSolrHome(File).mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/BaseDistributedSearchTestCase#seedSolrHome(File).mjava","sourceNew":"  /**\n   * Given a directory that will be used as the SOLR_HOME for a jetty instance, seeds that \n   * directory with the contents of {@link #getSolrHome} and ensures that the proper {@link #getSolrXml} \n   * file is in place.\n   */\n  protected void seedSolrHome(File jettyHome) throws IOException {\n    FileUtils.copyDirectory(new File(getSolrHome()), jettyHome);\n    String solrxml = getSolrXml();\n    if (solrxml != null) {\n      FileUtils.copyFile(new File(getSolrHome(), solrxml), new File(jettyHome, \"solr.xml\"));\n    }\n  }\n\n","sourceOld":"  /**\n   * Given a directory that will be used as the SOLR_HOME for a jetty instance, seeds that \n   * directory with the contents of {@link #getSolrHome} and ensures that the proper {@link #getSolrXml} \n   * file is in place.\n   */\n  private void seedSolrHome(File jettyHome) throws IOException {\n    FileUtils.copyDirectory(new File(getSolrHome()), jettyHome);\n    String solrxml = getSolrXml();\n    if (solrxml != null) {\n      FileUtils.copyFile(new File(getSolrHome(), solrxml), new File(jettyHome, \"solr.xml\"));\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","date":1427779360,"type":0,"author":"Ryan Ernst","isMerge":true,"pathNew":"solr/test-framework/src/java/org/apache/solr/BaseDistributedSearchTestCase#seedSolrHome(File).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Given a directory that will be used as the SOLR_HOME for a jetty instance, seeds that \n   * directory with the contents of {@link #getSolrHome} and ensures that the proper {@link #getSolrXml} \n   * file is in place.\n   */\n  protected void seedSolrHome(File jettyHome) throws IOException {\n    FileUtils.copyDirectory(new File(getSolrHome()), jettyHome);\n    String solrxml = getSolrXml();\n    if (solrxml != null) {\n      FileUtils.copyFile(new File(getSolrHome(), solrxml), new File(jettyHome, \"solr.xml\"));\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","9bc766d645fa848f86c381c7f6acf2c881c99399"],"87e71a21d5a987fc33ae9a0f50353e220e64f2c7":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"b06445ae1731e049327712db0454e5643ca9b7fe":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","87e71a21d5a987fc33ae9a0f50353e220e64f2c7"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"9bc766d645fa848f86c381c7f6acf2c881c99399":["87e71a21d5a987fc33ae9a0f50353e220e64f2c7"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9bc766d645fa848f86c381c7f6acf2c881c99399"]},"commit2Childs":{"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":[],"87e71a21d5a987fc33ae9a0f50353e220e64f2c7":["b06445ae1731e049327712db0454e5643ca9b7fe","9bc766d645fa848f86c381c7f6acf2c881c99399"],"b06445ae1731e049327712db0454e5643ca9b7fe":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","87e71a21d5a987fc33ae9a0f50353e220e64f2c7","b06445ae1731e049327712db0454e5643ca9b7fe"],"9bc766d645fa848f86c381c7f6acf2c881c99399":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","b06445ae1731e049327712db0454e5643ca9b7fe","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}