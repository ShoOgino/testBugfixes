{"path":"lucene/core/src/java/org/apache/lucene/index/SegmentWriteState#SegmentWriteState(SegmentWriteState,String).mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/SegmentWriteState#SegmentWriteState(SegmentWriteState,String).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/SegmentWriteState#SegmentWriteState(SegmentWriteState,String).mjava","sourceNew":"  /**\n   * Create a shallow {@link SegmentWriteState} copy final a format ID\n   */\n  public SegmentWriteState(SegmentWriteState state, String segmentSuffix) {\n    infoStream = state.infoStream;\n    directory = state.directory;\n    segmentName = state.segmentName;\n    fieldInfos = state.fieldInfos;\n    numDocs = state.numDocs;\n    termIndexInterval = state.termIndexInterval;\n    context = state.context;\n    codec = state.codec;\n    this.segmentSuffix = segmentSuffix;\n    segDeletes = state.segDeletes;\n    delCountOnFlush = state.delCountOnFlush;\n  }\n\n","sourceOld":"  /**\n   * Create a shallow {@link SegmentWriteState} copy final a format ID\n   */\n  public SegmentWriteState(SegmentWriteState state, String segmentSuffix) {\n    infoStream = state.infoStream;\n    directory = state.directory;\n    segmentName = state.segmentName;\n    fieldInfos = state.fieldInfos;\n    numDocs = state.numDocs;\n    termIndexInterval = state.termIndexInterval;\n    context = state.context;\n    codec = state.codec;\n    this.segmentSuffix = segmentSuffix;\n    segDeletes = state.segDeletes;\n    delCountOnFlush = state.delCountOnFlush;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"129c6e8ac0c0d9a110ba29e4b5f1889374f30076","date":1337725510,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/SegmentWriteState#SegmentWriteState(SegmentWriteState,String).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/SegmentWriteState#SegmentWriteState(SegmentWriteState,String).mjava","sourceNew":"  /**\n   * Create a shallow {@link SegmentWriteState} copy final a format ID\n   */\n  public SegmentWriteState(SegmentWriteState state, String segmentSuffix) {\n    infoStream = state.infoStream;\n    directory = state.directory;\n    segmentInfo = state.segmentInfo;\n    fieldInfos = state.fieldInfos;\n    numDocs = state.numDocs;\n    termIndexInterval = state.termIndexInterval;\n    context = state.context;\n    codec = state.codec;\n    this.segmentSuffix = segmentSuffix;\n    segDeletes = state.segDeletes;\n    delCountOnFlush = state.delCountOnFlush;\n  }\n\n","sourceOld":"  /**\n   * Create a shallow {@link SegmentWriteState} copy final a format ID\n   */\n  public SegmentWriteState(SegmentWriteState state, String segmentSuffix) {\n    infoStream = state.infoStream;\n    directory = state.directory;\n    segmentName = state.segmentName;\n    fieldInfos = state.fieldInfos;\n    numDocs = state.numDocs;\n    termIndexInterval = state.termIndexInterval;\n    context = state.context;\n    codec = state.codec;\n    this.segmentSuffix = segmentSuffix;\n    segDeletes = state.segDeletes;\n    delCountOnFlush = state.delCountOnFlush;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0cadbbc3b8df99c8c7acd19da62f6b35eb126c85","date":1337798576,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/SegmentWriteState#SegmentWriteState(SegmentWriteState,String).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/SegmentWriteState#SegmentWriteState(SegmentWriteState,String).mjava","sourceNew":"  /**\n   * Create a shallow {@link SegmentWriteState} copy final a format ID\n   */\n  public SegmentWriteState(SegmentWriteState state, String segmentSuffix) {\n    infoStream = state.infoStream;\n    directory = state.directory;\n    segmentInfo = state.segmentInfo;\n    fieldInfos = state.fieldInfos;\n    numDocs = state.numDocs;\n    termIndexInterval = state.termIndexInterval;\n    context = state.context;\n    this.segmentSuffix = segmentSuffix;\n    segDeletes = state.segDeletes;\n    delCountOnFlush = state.delCountOnFlush;\n  }\n\n","sourceOld":"  /**\n   * Create a shallow {@link SegmentWriteState} copy final a format ID\n   */\n  public SegmentWriteState(SegmentWriteState state, String segmentSuffix) {\n    infoStream = state.infoStream;\n    directory = state.directory;\n    segmentInfo = state.segmentInfo;\n    fieldInfos = state.fieldInfos;\n    numDocs = state.numDocs;\n    termIndexInterval = state.termIndexInterval;\n    context = state.context;\n    codec = state.codec;\n    this.segmentSuffix = segmentSuffix;\n    segDeletes = state.segDeletes;\n    delCountOnFlush = state.delCountOnFlush;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"16cbef32b882ec68df422af3f08845ec82620335","date":1337802266,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/SegmentWriteState#SegmentWriteState(SegmentWriteState,String).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/SegmentWriteState#SegmentWriteState(SegmentWriteState,String).mjava","sourceNew":"  /**\n   * Create a shallow {@link SegmentWriteState} copy final a format ID\n   */\n  public SegmentWriteState(SegmentWriteState state, String segmentSuffix) {\n    infoStream = state.infoStream;\n    directory = state.directory;\n    segmentInfo = state.segmentInfo;\n    fieldInfos = state.fieldInfos;\n    termIndexInterval = state.termIndexInterval;\n    context = state.context;\n    this.segmentSuffix = segmentSuffix;\n    segDeletes = state.segDeletes;\n    delCountOnFlush = state.delCountOnFlush;\n  }\n\n","sourceOld":"  /**\n   * Create a shallow {@link SegmentWriteState} copy final a format ID\n   */\n  public SegmentWriteState(SegmentWriteState state, String segmentSuffix) {\n    infoStream = state.infoStream;\n    directory = state.directory;\n    segmentInfo = state.segmentInfo;\n    fieldInfos = state.fieldInfos;\n    numDocs = state.numDocs;\n    termIndexInterval = state.termIndexInterval;\n    context = state.context;\n    this.segmentSuffix = segmentSuffix;\n    segDeletes = state.segDeletes;\n    delCountOnFlush = state.delCountOnFlush;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"615ddbd81799980d0fdd95e0238e1c498b6f47b0","date":1338233290,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/SegmentWriteState#SegmentWriteState(SegmentWriteState,String).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/SegmentWriteState#SegmentWriteState(SegmentWriteState,String).mjava","sourceNew":"  /**\n   * Create a shallow {@link SegmentWriteState} copy final a format ID\n   */\n  public SegmentWriteState(SegmentWriteState state, String segmentSuffix) {\n    infoStream = state.infoStream;\n    directory = state.directory;\n    segmentInfo = state.segmentInfo;\n    fieldInfos = state.fieldInfos;\n    termIndexInterval = state.termIndexInterval;\n    context = state.context;\n    this.segmentSuffix = segmentSuffix;\n    segDeletes = state.segDeletes;\n    delCountOnFlush = state.delCountOnFlush;\n  }\n\n","sourceOld":"  /**\n   * Create a shallow {@link SegmentWriteState} copy final a format ID\n   */\n  public SegmentWriteState(SegmentWriteState state, String segmentSuffix) {\n    infoStream = state.infoStream;\n    directory = state.directory;\n    segmentName = state.segmentName;\n    fieldInfos = state.fieldInfos;\n    numDocs = state.numDocs;\n    termIndexInterval = state.termIndexInterval;\n    context = state.context;\n    codec = state.codec;\n    this.segmentSuffix = segmentSuffix;\n    segDeletes = state.segDeletes;\n    delCountOnFlush = state.delCountOnFlush;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a45bec74b98f6fc05f52770cfb425739e6563960","date":1375119292,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/SegmentWriteState#SegmentWriteState(SegmentWriteState,String).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/SegmentWriteState#SegmentWriteState(SegmentWriteState,String).mjava","sourceNew":"  /**\n   * Create a shallow {@link SegmentWriteState} copy final a format ID\n   */\n  public SegmentWriteState(SegmentWriteState state, String segmentSuffix) {\n    infoStream = state.infoStream;\n    directory = state.directory;\n    segmentInfo = state.segmentInfo;\n    fieldInfos = state.fieldInfos;\n    context = state.context;\n    this.segmentSuffix = segmentSuffix;\n    segDeletes = state.segDeletes;\n    delCountOnFlush = state.delCountOnFlush;\n  }\n\n","sourceOld":"  /**\n   * Create a shallow {@link SegmentWriteState} copy final a format ID\n   */\n  public SegmentWriteState(SegmentWriteState state, String segmentSuffix) {\n    infoStream = state.infoStream;\n    directory = state.directory;\n    segmentInfo = state.segmentInfo;\n    fieldInfos = state.fieldInfos;\n    termIndexInterval = state.termIndexInterval;\n    context = state.context;\n    this.segmentSuffix = segmentSuffix;\n    segDeletes = state.segDeletes;\n    delCountOnFlush = state.delCountOnFlush;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"758b67c292d546f06d958a30c05b76e3987a11de","date":1375382531,"type":3,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/SegmentWriteState#SegmentWriteState(SegmentWriteState,String).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/SegmentWriteState#SegmentWriteState(SegmentWriteState,String).mjava","sourceNew":"  /** Create a shallow copy of {@link SegmentWriteState} with a new segment suffix. */\n  public SegmentWriteState(SegmentWriteState state, String segmentSuffix) {\n    infoStream = state.infoStream;\n    directory = state.directory;\n    segmentInfo = state.segmentInfo;\n    fieldInfos = state.fieldInfos;\n    context = state.context;\n    this.segmentSuffix = segmentSuffix;\n    segDeletes = state.segDeletes;\n    delCountOnFlush = state.delCountOnFlush;\n  }\n\n","sourceOld":"  /**\n   * Create a shallow {@link SegmentWriteState} copy final a format ID\n   */\n  public SegmentWriteState(SegmentWriteState state, String segmentSuffix) {\n    infoStream = state.infoStream;\n    directory = state.directory;\n    segmentInfo = state.segmentInfo;\n    fieldInfos = state.fieldInfos;\n    context = state.context;\n    this.segmentSuffix = segmentSuffix;\n    segDeletes = state.segDeletes;\n    delCountOnFlush = state.delCountOnFlush;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee","date":1376366778,"type":3,"author":"Han Jiang","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/SegmentWriteState#SegmentWriteState(SegmentWriteState,String).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/SegmentWriteState#SegmentWriteState(SegmentWriteState,String).mjava","sourceNew":"  /** Create a shallow copy of {@link SegmentWriteState} with a new segment suffix. */\n  public SegmentWriteState(SegmentWriteState state, String segmentSuffix) {\n    infoStream = state.infoStream;\n    directory = state.directory;\n    segmentInfo = state.segmentInfo;\n    fieldInfos = state.fieldInfos;\n    context = state.context;\n    this.segmentSuffix = segmentSuffix;\n    segDeletes = state.segDeletes;\n    delCountOnFlush = state.delCountOnFlush;\n  }\n\n","sourceOld":"  /**\n   * Create a shallow {@link SegmentWriteState} copy final a format ID\n   */\n  public SegmentWriteState(SegmentWriteState state, String segmentSuffix) {\n    infoStream = state.infoStream;\n    directory = state.directory;\n    segmentInfo = state.segmentInfo;\n    fieldInfos = state.fieldInfos;\n    termIndexInterval = state.termIndexInterval;\n    context = state.context;\n    this.segmentSuffix = segmentSuffix;\n    segDeletes = state.segDeletes;\n    delCountOnFlush = state.delCountOnFlush;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e072d0b1fc19e0533d8ce432eed245196bca6fde","date":1379265112,"type":3,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/SegmentWriteState#SegmentWriteState(SegmentWriteState,String).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/SegmentWriteState#SegmentWriteState(SegmentWriteState,String).mjava","sourceNew":"  /** Create a shallow copy of {@link SegmentWriteState} with a new segment suffix. */\n  public SegmentWriteState(SegmentWriteState state, String segmentSuffix) {\n    infoStream = state.infoStream;\n    directory = state.directory;\n    segmentInfo = state.segmentInfo;\n    fieldInfos = state.fieldInfos;\n    context = state.context;\n    this.segmentSuffix = segmentSuffix;\n    segDeletes = state.segDeletes;\n    delCountOnFlush = state.delCountOnFlush;\n    isFieldUpdate = state.isFieldUpdate;\n  }\n\n","sourceOld":"  /** Create a shallow copy of {@link SegmentWriteState} with a new segment suffix. */\n  public SegmentWriteState(SegmentWriteState state, String segmentSuffix) {\n    infoStream = state.infoStream;\n    directory = state.directory;\n    segmentInfo = state.segmentInfo;\n    fieldInfos = state.fieldInfos;\n    context = state.context;\n    this.segmentSuffix = segmentSuffix;\n    segDeletes = state.segDeletes;\n    delCountOnFlush = state.delCountOnFlush;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8435160e9702b19398118ddf76b61c846612b6a4","date":1380349140,"type":3,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/SegmentWriteState#SegmentWriteState(SegmentWriteState,String).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/SegmentWriteState#SegmentWriteState(SegmentWriteState,String).mjava","sourceNew":"  /** Create a shallow copy of {@link SegmentWriteState} with a new segment suffix. */\n  public SegmentWriteState(SegmentWriteState state, String segmentSuffix) {\n    infoStream = state.infoStream;\n    directory = state.directory;\n    segmentInfo = state.segmentInfo;\n    fieldInfos = state.fieldInfos;\n    context = state.context;\n    this.segmentSuffix = segmentSuffix;\n    segDeletes = state.segDeletes;\n    delCountOnFlush = state.delCountOnFlush;\n  }\n\n","sourceOld":"  /** Create a shallow copy of {@link SegmentWriteState} with a new segment suffix. */\n  public SegmentWriteState(SegmentWriteState state, String segmentSuffix) {\n    infoStream = state.infoStream;\n    directory = state.directory;\n    segmentInfo = state.segmentInfo;\n    fieldInfos = state.fieldInfos;\n    context = state.context;\n    this.segmentSuffix = segmentSuffix;\n    segDeletes = state.segDeletes;\n    delCountOnFlush = state.delCountOnFlush;\n    isFieldUpdate = state.isFieldUpdate;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"73b0a97ef3bd519a5e43398ea9eabe6eed97f6b0","date":1383367127,"type":3,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/SegmentWriteState#SegmentWriteState(SegmentWriteState,String).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/SegmentWriteState#SegmentWriteState(SegmentWriteState,String).mjava","sourceNew":"  /** Create a shallow copy of {@link SegmentWriteState} with a new segment suffix. */\n  public SegmentWriteState(SegmentWriteState state, String segmentSuffix) {\n    infoStream = state.infoStream;\n    directory = state.directory;\n    segmentInfo = state.segmentInfo;\n    fieldInfos = state.fieldInfos;\n    context = state.context;\n    this.segmentSuffix = segmentSuffix;\n    segUpdates = state.segUpdates;\n    delCountOnFlush = state.delCountOnFlush;\n  }\n\n","sourceOld":"  /** Create a shallow copy of {@link SegmentWriteState} with a new segment suffix. */\n  public SegmentWriteState(SegmentWriteState state, String segmentSuffix) {\n    infoStream = state.infoStream;\n    directory = state.directory;\n    segmentInfo = state.segmentInfo;\n    fieldInfos = state.fieldInfos;\n    context = state.context;\n    this.segmentSuffix = segmentSuffix;\n    segDeletes = state.segDeletes;\n    delCountOnFlush = state.delCountOnFlush;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0a16b40feb4e6e0d55c1716733bde48296bedd20","date":1400540388,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/SegmentWriteState#SegmentWriteState(SegmentWriteState,String).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/SegmentWriteState#SegmentWriteState(SegmentWriteState,String).mjava","sourceNew":"  /** Create a shallow copy of {@link SegmentWriteState} with a new segment suffix. */\n  public SegmentWriteState(SegmentWriteState state, String segmentSuffix) {\n    infoStream = state.infoStream;\n    directory = state.directory;\n    segmentInfo = state.segmentInfo;\n    fieldInfos = state.fieldInfos;\n    context = state.context;\n    this.segmentSuffix = segmentSuffix;\n    segUpdates = state.segUpdates;\n    delCountOnFlush = state.delCountOnFlush;\n    liveDocs = state.liveDocs;\n  }\n\n","sourceOld":"  /** Create a shallow copy of {@link SegmentWriteState} with a new segment suffix. */\n  public SegmentWriteState(SegmentWriteState state, String segmentSuffix) {\n    infoStream = state.infoStream;\n    directory = state.directory;\n    segmentInfo = state.segmentInfo;\n    fieldInfos = state.fieldInfos;\n    context = state.context;\n    this.segmentSuffix = segmentSuffix;\n    segUpdates = state.segUpdates;\n    delCountOnFlush = state.delCountOnFlush;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4d637064d608752565d4f9f41b2497dfdfdde50e","date":1400798123,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/SegmentWriteState#SegmentWriteState(SegmentWriteState,String).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/SegmentWriteState#SegmentWriteState(SegmentWriteState,String).mjava","sourceNew":"  /** Create a shallow copy of {@link SegmentWriteState} with a new segment suffix. */\n  public SegmentWriteState(SegmentWriteState state, String segmentSuffix) {\n    infoStream = state.infoStream;\n    directory = state.directory;\n    segmentInfo = state.segmentInfo;\n    fieldInfos = state.fieldInfos;\n    context = state.context;\n    this.segmentSuffix = segmentSuffix;\n    segUpdates = state.segUpdates;\n    delCountOnFlush = state.delCountOnFlush;\n    liveDocs = state.liveDocs;\n  }\n\n","sourceOld":"  /** Create a shallow copy of {@link SegmentWriteState} with a new segment suffix. */\n  public SegmentWriteState(SegmentWriteState state, String segmentSuffix) {\n    infoStream = state.infoStream;\n    directory = state.directory;\n    segmentInfo = state.segmentInfo;\n    fieldInfos = state.fieldInfos;\n    context = state.context;\n    this.segmentSuffix = segmentSuffix;\n    segUpdates = state.segUpdates;\n    delCountOnFlush = state.delCountOnFlush;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"e072d0b1fc19e0533d8ce432eed245196bca6fde":["758b67c292d546f06d958a30c05b76e3987a11de"],"0a16b40feb4e6e0d55c1716733bde48296bedd20":["73b0a97ef3bd519a5e43398ea9eabe6eed97f6b0"],"73b0a97ef3bd519a5e43398ea9eabe6eed97f6b0":["8435160e9702b19398118ddf76b61c846612b6a4"],"a45bec74b98f6fc05f52770cfb425739e6563960":["615ddbd81799980d0fdd95e0238e1c498b6f47b0"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"16cbef32b882ec68df422af3f08845ec82620335":["0cadbbc3b8df99c8c7acd19da62f6b35eb126c85"],"8435160e9702b19398118ddf76b61c846612b6a4":["e072d0b1fc19e0533d8ce432eed245196bca6fde"],"758b67c292d546f06d958a30c05b76e3987a11de":["a45bec74b98f6fc05f52770cfb425739e6563960"],"4d637064d608752565d4f9f41b2497dfdfdde50e":["73b0a97ef3bd519a5e43398ea9eabe6eed97f6b0","0a16b40feb4e6e0d55c1716733bde48296bedd20"],"615ddbd81799980d0fdd95e0238e1c498b6f47b0":["3a119bbc8703c10faa329ec201c654b3a35a1e3e","16cbef32b882ec68df422af3f08845ec82620335"],"129c6e8ac0c0d9a110ba29e4b5f1889374f30076":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee":["615ddbd81799980d0fdd95e0238e1c498b6f47b0"],"0cadbbc3b8df99c8c7acd19da62f6b35eb126c85":["129c6e8ac0c0d9a110ba29e4b5f1889374f30076"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["4d637064d608752565d4f9f41b2497dfdfdde50e"]},"commit2Childs":{"e072d0b1fc19e0533d8ce432eed245196bca6fde":["8435160e9702b19398118ddf76b61c846612b6a4"],"0a16b40feb4e6e0d55c1716733bde48296bedd20":["4d637064d608752565d4f9f41b2497dfdfdde50e"],"73b0a97ef3bd519a5e43398ea9eabe6eed97f6b0":["0a16b40feb4e6e0d55c1716733bde48296bedd20","4d637064d608752565d4f9f41b2497dfdfdde50e"],"a45bec74b98f6fc05f52770cfb425739e6563960":["758b67c292d546f06d958a30c05b76e3987a11de"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["615ddbd81799980d0fdd95e0238e1c498b6f47b0","129c6e8ac0c0d9a110ba29e4b5f1889374f30076"],"16cbef32b882ec68df422af3f08845ec82620335":["615ddbd81799980d0fdd95e0238e1c498b6f47b0"],"8435160e9702b19398118ddf76b61c846612b6a4":["73b0a97ef3bd519a5e43398ea9eabe6eed97f6b0"],"758b67c292d546f06d958a30c05b76e3987a11de":["e072d0b1fc19e0533d8ce432eed245196bca6fde"],"4d637064d608752565d4f9f41b2497dfdfdde50e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"615ddbd81799980d0fdd95e0238e1c498b6f47b0":["a45bec74b98f6fc05f52770cfb425739e6563960","8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee"],"129c6e8ac0c0d9a110ba29e4b5f1889374f30076":["0cadbbc3b8df99c8c7acd19da62f6b35eb126c85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee":[],"0cadbbc3b8df99c8c7acd19da62f6b35eb126c85":["16cbef32b882ec68df422af3f08845ec82620335"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}