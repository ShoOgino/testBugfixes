{"path":"solr/solrj/src/test/org/apache/solr/client/solrj/io/stream/JDBCStreamTest#assertOrderOf(List[Tuple],String,double...).mjava","commits":[{"id":"c533b201163bd7b15aa8881f922f9289a7668187","date":1452268593,"type":0,"author":"Dennis Gove","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/io/stream/JDBCStreamTest#assertOrderOf(List[Tuple],String,double...).mjava","pathOld":"/dev/null","sourceNew":"  protected boolean assertOrderOf(List<Tuple> tuples, String fieldName, double... values) throws Exception {\n    int i = 0;\n    for(double val : values) {\n      Tuple t = tuples.get(i);\n      double tip = (double)t.get(fieldName);\n      if(tip != val) {\n        throw new Exception(\"Found value:\"+tip+\" expecting:\"+val);\n      }\n      ++i;\n    }\n    return true;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["a0835c162df064ad3c43aac0b10381d502773335"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"a0835c162df064ad3c43aac0b10381d502773335","date":1551395594,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/io/stream/JDBCStreamTest#assertOrderOf(List[Tuple],String,double...).mjava","pathOld":"solr/solrj/src/test/org/apache/solr/client/solrj/io/stream/JDBCStreamTest#assertOrderOf(List[Tuple],String,double...).mjava","sourceNew":"  protected boolean assertOrderOf(List<Tuple> tuples, String fieldName, double... values) throws Exception {\n    int i = 0;\n    for(double val : values) {\n      Tuple t = tuples.get(i);\n      double tip = (double)t.get(fieldName);\n      assertEquals(\"Found value:\"+tip+\" expecting:\"+val, val, tip, 0.00001);\n      ++i;\n    }\n    return true;\n  }\n\n","sourceOld":"  protected boolean assertOrderOf(List<Tuple> tuples, String fieldName, double... values) throws Exception {\n    int i = 0;\n    for(double val : values) {\n      Tuple t = tuples.get(i);\n      double tip = (double)t.get(fieldName);\n      if(tip != val) {\n        throw new Exception(\"Found value:\"+tip+\" expecting:\"+val);\n      }\n      ++i;\n    }\n    return true;\n  }\n\n","bugFix":["c533b201163bd7b15aa8881f922f9289a7668187"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0835c162df064ad3c43aac0b10381d502773335":["c533b201163bd7b15aa8881f922f9289a7668187"],"c533b201163bd7b15aa8881f922f9289a7668187":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0835c162df064ad3c43aac0b10381d502773335"]},"commit2Childs":{"a0835c162df064ad3c43aac0b10381d502773335":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"c533b201163bd7b15aa8881f922f9289a7668187":["a0835c162df064ad3c43aac0b10381d502773335"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c533b201163bd7b15aa8881f922f9289a7668187"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}