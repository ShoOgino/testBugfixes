{"path":"contrib/gdata-server/src/test/org/apache/lucene/gdata/storage/db4o/TestDb4oStorage#testStoreAccount().mjava","commits":[{"id":"bf1c3e657b66c65904354d158dd1cebb302dc8f9","date":1153873200,"type":0,"author":"Yonik Seeley","isMerge":false,"pathNew":"contrib/gdata-server/src/test/org/apache/lucene/gdata/storage/db4o/TestDb4oStorage#testStoreAccount().mjava","pathOld":"/dev/null","sourceNew":"    /*\n     * Test method for\n     * 'org.apache.lucene.gdata.storage.db4o.DB4oStorage.storeAccount(GDataAccount)'\n     */\n    public void testStoreAccount() throws StorageException {\n        GDataAccount account = new GDataAccount();\n        account.setName(\"simon\");\n        account.setPassword(\"somepass\");\n        Storage storage = this.controller.getStorage();\n        storage.storeAccount(account);\n        ObjectContainer container = getContainer();\n        Query q = container.query();\n        q.constrain(GDataAccount.class);\n        q.descend(\"name\").constrain(account.getName());\n        ObjectSet set = q.execute();\n        assertEquals(1, set.size());\n        assertEquals(account.getPassword(), ((GDataAccount) set.next())\n                .getPassword());\n        try {\n            storage.storeAccount(account);\n            fail(\"Account already stored\");\n        } catch (Exception e) {\n\n        }\n        container.close();\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5824af871ba6863399636aa5989bfc0ef2ea448c","date":1166013128,"type":5,"author":"Simon Willnauer","isMerge":false,"pathNew":"contrib/gdata-server/src/core/test/org/apache/lucene/gdata/storage/db4o/TestDb4oStorage#testStoreAccount().mjava","pathOld":"contrib/gdata-server/src/test/org/apache/lucene/gdata/storage/db4o/TestDb4oStorage#testStoreAccount().mjava","sourceNew":"    /*\n     * Test method for\n     * 'org.apache.lucene.gdata.storage.db4o.DB4oStorage.storeAccount(GDataAccount)'\n     */\n    public void testStoreAccount() throws StorageException {\n        GDataAccount account = new GDataAccount();\n        account.setName(\"simon\");\n        account.setPassword(\"somepass\");\n        Storage storage = this.controller.getStorage();\n        storage.storeAccount(account);\n        ObjectContainer container = getContainer();\n        Query q = container.query();\n        q.constrain(GDataAccount.class);\n        q.descend(\"name\").constrain(account.getName());\n        ObjectSet set = q.execute();\n        assertEquals(1, set.size());\n        assertEquals(account.getPassword(), ((GDataAccount) set.next())\n                .getPassword());\n        try {\n            storage.storeAccount(account);\n            fail(\"Account already stored\");\n        } catch (Exception e) {\n\n        }\n        container.close();\n    }\n\n","sourceOld":"    /*\n     * Test method for\n     * 'org.apache.lucene.gdata.storage.db4o.DB4oStorage.storeAccount(GDataAccount)'\n     */\n    public void testStoreAccount() throws StorageException {\n        GDataAccount account = new GDataAccount();\n        account.setName(\"simon\");\n        account.setPassword(\"somepass\");\n        Storage storage = this.controller.getStorage();\n        storage.storeAccount(account);\n        ObjectContainer container = getContainer();\n        Query q = container.query();\n        q.constrain(GDataAccount.class);\n        q.descend(\"name\").constrain(account.getName());\n        ObjectSet set = q.execute();\n        assertEquals(1, set.size());\n        assertEquals(account.getPassword(), ((GDataAccount) set.next())\n                .getPassword());\n        try {\n            storage.storeAccount(account);\n            fail(\"Account already stored\");\n        } catch (Exception e) {\n\n        }\n        container.close();\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"bf1c3e657b66c65904354d158dd1cebb302dc8f9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"5824af871ba6863399636aa5989bfc0ef2ea448c":["bf1c3e657b66c65904354d158dd1cebb302dc8f9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["5824af871ba6863399636aa5989bfc0ef2ea448c"]},"commit2Childs":{"bf1c3e657b66c65904354d158dd1cebb302dc8f9":["5824af871ba6863399636aa5989bfc0ef2ea448c"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["bf1c3e657b66c65904354d158dd1cebb302dc8f9"],"5824af871ba6863399636aa5989bfc0ef2ea448c":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}