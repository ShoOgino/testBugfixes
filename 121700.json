{"path":"src/java/org/apache/solr/highlight/DefaultSolrHighlighter#getQueryScorer(Query,String,SolrQueryRequest).mjava","commits":[{"id":"303b28b90016c2de1b5870759794476dbf4fd6ce","date":1206052767,"type":1,"author":"Mike Klaas","isMerge":false,"pathNew":"src/java/org/apache/solr/highlight/DefaultSolrHighlighter#getQueryScorer(Query,String,SolrQueryRequest).mjava","pathOld":"src/java/org/apache/solr/highlight/SolrHighlighter#getQueryScorer(Query,String,SolrQueryRequest).mjava","sourceNew":"  /**\n   * Return a QueryScorer suitable for this Query and field.\n   * @param query The current query\n   * @param fieldName The name of the field\n   * @param request The SolrQueryRequest\n   */\n  protected QueryScorer getQueryScorer(Query query, String fieldName, SolrQueryRequest request) {\n     boolean reqFieldMatch = request.getParams().getFieldBool(fieldName, HighlightParams.FIELD_MATCH, false);\n     if (reqFieldMatch) {\n        return new QueryScorer(query, request.getSearcher().getReader(), fieldName);\n     }\n     else {\n        return new QueryScorer(query);\n     }\n  }\n\n","sourceOld":"  /**\n   * Return a QueryScorer suitable for this Query and field.\n   * @param query The current query\n   * @param fieldName The name of the field\n   * @param request The SolrQueryRequest\n   */\n  protected QueryScorer getQueryScorer(Query query, String fieldName, SolrQueryRequest request) {\n     boolean reqFieldMatch = request.getParams().getFieldBool(fieldName, HighlightParams.FIELD_MATCH, false);\n     if (reqFieldMatch) {\n        return new QueryScorer(query, request.getSearcher().getReader(), fieldName);\n     }\n     else {\n        return new QueryScorer(query);\n     }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c20f931a6f10b153366015604398a5eb7a4d17fa","date":1249615266,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"src/java/org/apache/solr/highlight/DefaultSolrHighlighter#getQueryScorer(Query,String,SolrQueryRequest).mjava","pathOld":"src/java/org/apache/solr/highlight/DefaultSolrHighlighter#getQueryScorer(Query,String,SolrQueryRequest).mjava","sourceNew":"  /**\n   * Return a QueryScorer suitable for this Query and field.\n   * @param query The current query\n   * @param fieldName The name of the field\n   * @param request The SolrQueryRequest\n   */\n  protected QueryTermScorer getQueryScorer(Query query, String fieldName, SolrQueryRequest request) {\n     boolean reqFieldMatch = request.getParams().getFieldBool(fieldName, HighlightParams.FIELD_MATCH, false);\n     if (reqFieldMatch) {\n        return new QueryTermScorer(query, request.getSearcher().getReader(), fieldName);\n     }\n     else {\n        return new QueryTermScorer(query);\n     }\n  }\n\n","sourceOld":"  /**\n   * Return a QueryScorer suitable for this Query and field.\n   * @param query The current query\n   * @param fieldName The name of the field\n   * @param request The SolrQueryRequest\n   */\n  protected QueryScorer getQueryScorer(Query query, String fieldName, SolrQueryRequest request) {\n     boolean reqFieldMatch = request.getParams().getFieldBool(fieldName, HighlightParams.FIELD_MATCH, false);\n     if (reqFieldMatch) {\n        return new QueryScorer(query, request.getSearcher().getReader(), fieldName);\n     }\n     else {\n        return new QueryScorer(query);\n     }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0930283abfcf8d794f25b921044f8a9aa1263166","date":1254673479,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"src/java/org/apache/solr/highlight/DefaultSolrHighlighter#getQueryScorer(Query,String,SolrQueryRequest).mjava","pathOld":"src/java/org/apache/solr/highlight/DefaultSolrHighlighter#getQueryScorer(Query,String,SolrQueryRequest).mjava","sourceNew":"  /**\n   * Return a QueryScorer suitable for this Query and field.\n   * @param query The current query\n   * @param fieldName The name of the field\n   * @param request The SolrQueryRequest\n   */\n  private Scorer getQueryScorer(Query query, String fieldName, SolrQueryRequest request) {\n     boolean reqFieldMatch = request.getParams().getFieldBool(fieldName, HighlightParams.FIELD_MATCH, false);\n     if (reqFieldMatch) {\n        return new QueryTermScorer(query, request.getSearcher().getReader(), fieldName);\n     }\n     else {\n        return new QueryTermScorer(query);\n     }\n  }\n\n","sourceOld":"  /**\n   * Return a QueryScorer suitable for this Query and field.\n   * @param query The current query\n   * @param fieldName The name of the field\n   * @param request The SolrQueryRequest\n   */\n  protected QueryTermScorer getQueryScorer(Query query, String fieldName, SolrQueryRequest request) {\n     boolean reqFieldMatch = request.getParams().getFieldBool(fieldName, HighlightParams.FIELD_MATCH, false);\n     if (reqFieldMatch) {\n        return new QueryTermScorer(query, request.getSearcher().getReader(), fieldName);\n     }\n     else {\n        return new QueryTermScorer(query);\n     }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ad94625fb8d088209f46650c8097196fec67f00c","date":1453508319,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/src/java/org/apache/solr/highlight/DefaultSolrHighlighter#getQueryScorer(Query,String,SolrQueryRequest).mjava","pathOld":"src/java/org/apache/solr/highlight/DefaultSolrHighlighter#getQueryScorer(Query,String,SolrQueryRequest).mjava","sourceNew":"  /**\n   * Return a QueryScorer suitable for this Query and field.\n   * @param query The current query\n   * @param fieldName The name of the field\n   * @param request The SolrQueryRequest\n   */\n  private Scorer getQueryScorer(Query query, String fieldName, SolrQueryRequest request) {\n     boolean reqFieldMatch = request.getParams().getFieldBool(fieldName, HighlightParams.FIELD_MATCH, false);\n     if (reqFieldMatch) {\n        return new QueryTermScorer(query, request.getSearcher().getReader(), fieldName);\n     }\n     else {\n        return new QueryTermScorer(query);\n     }\n  }\n\n","sourceOld":"  /**\n   * Return a QueryScorer suitable for this Query and field.\n   * @param query The current query\n   * @param fieldName The name of the field\n   * @param request The SolrQueryRequest\n   */\n  private Scorer getQueryScorer(Query query, String fieldName, SolrQueryRequest request) {\n     boolean reqFieldMatch = request.getParams().getFieldBool(fieldName, HighlightParams.FIELD_MATCH, false);\n     if (reqFieldMatch) {\n        return new QueryTermScorer(query, request.getSearcher().getReader(), fieldName);\n     }\n     else {\n        return new QueryTermScorer(query);\n     }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"0930283abfcf8d794f25b921044f8a9aa1263166":["c20f931a6f10b153366015604398a5eb7a4d17fa"],"c20f931a6f10b153366015604398a5eb7a4d17fa":["303b28b90016c2de1b5870759794476dbf4fd6ce"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"ad94625fb8d088209f46650c8097196fec67f00c":["0930283abfcf8d794f25b921044f8a9aa1263166"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"303b28b90016c2de1b5870759794476dbf4fd6ce":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"]},"commit2Childs":{"0930283abfcf8d794f25b921044f8a9aa1263166":["ad94625fb8d088209f46650c8097196fec67f00c"],"c20f931a6f10b153366015604398a5eb7a4d17fa":["0930283abfcf8d794f25b921044f8a9aa1263166"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["303b28b90016c2de1b5870759794476dbf4fd6ce"],"ad94625fb8d088209f46650c8097196fec67f00c":[],"303b28b90016c2de1b5870759794476dbf4fd6ce":["c20f931a6f10b153366015604398a5eb7a4d17fa"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["ad94625fb8d088209f46650c8097196fec67f00c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"pathCommit":null}