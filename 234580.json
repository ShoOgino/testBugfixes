{"path":"lucene/src/java/org/apache/lucene/queryParser/QueryParser#Clause(String).mjava","commits":[{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/queryParser/QueryParser#Clause(String).mjava","pathOld":"src/java/org/apache/lucene/queryParser/QueryParser#Clause(String).mjava","sourceNew":"  final public Query Clause(String field) throws ParseException {\n  Query q;\n  Token fieldToken=null, boost=null;\n    if (jj_2_1(2)) {\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case TERM:\n        fieldToken = jj_consume_token(TERM);\n        jj_consume_token(COLON);\n                               field=discardEscapeChar(fieldToken.image);\n        break;\n      case STAR:\n        jj_consume_token(STAR);\n        jj_consume_token(COLON);\n                      field=\"*\";\n        break;\n      default:\n        jj_la1[5] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n    } else {\n      ;\n    }\n    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n    case STAR:\n    case QUOTED:\n    case TERM:\n    case PREFIXTERM:\n    case WILDTERM:\n    case RANGEIN_START:\n    case RANGEEX_START:\n    case NUMBER:\n      q = Term(field);\n      break;\n    case LPAREN:\n      jj_consume_token(LPAREN);\n      q = Query(field);\n      jj_consume_token(RPAREN);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[6] = jj_gen;\n        ;\n      }\n      break;\n    default:\n      jj_la1[7] = jj_gen;\n      jj_consume_token(-1);\n      throw new ParseException();\n    }\n      if (boost != null) {\n        float f = (float)1.0;\n  try {\n    f = Float.valueOf(boost.image).floatValue();\n          q.setBoost(f);\n  } catch (Exception ignored) { }\n      }\n      {if (true) return q;}\n    throw new Error(\"Missing return statement in function\");\n  }\n\n","sourceOld":"  final public Query Clause(String field) throws ParseException {\n  Query q;\n  Token fieldToken=null, boost=null;\n    if (jj_2_1(2)) {\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case TERM:\n        fieldToken = jj_consume_token(TERM);\n        jj_consume_token(COLON);\n                               field=discardEscapeChar(fieldToken.image);\n        break;\n      case STAR:\n        jj_consume_token(STAR);\n        jj_consume_token(COLON);\n                      field=\"*\";\n        break;\n      default:\n        jj_la1[5] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n    } else {\n      ;\n    }\n    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n    case STAR:\n    case QUOTED:\n    case TERM:\n    case PREFIXTERM:\n    case WILDTERM:\n    case RANGEIN_START:\n    case RANGEEX_START:\n    case NUMBER:\n      q = Term(field);\n      break;\n    case LPAREN:\n      jj_consume_token(LPAREN);\n      q = Query(field);\n      jj_consume_token(RPAREN);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[6] = jj_gen;\n        ;\n      }\n      break;\n    default:\n      jj_la1[7] = jj_gen;\n      jj_consume_token(-1);\n      throw new ParseException();\n    }\n      if (boost != null) {\n        float f = (float)1.0;\n  try {\n    f = Float.valueOf(boost.image).floatValue();\n          q.setBoost(f);\n  } catch (Exception ignored) { }\n      }\n      {if (true) return q;}\n    throw new Error(\"Missing return statement in function\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d94d6afa51157e490fc169e192a154ffc4cdad0b","date":1283184289,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/queryParser/QueryParser#Clause(String).mjava","pathOld":"lucene/src/java/org/apache/lucene/queryParser/QueryParser#Clause(String).mjava","sourceNew":"  final public Query Clause(String field) throws ParseException {\n  Query q;\n  Token fieldToken=null, boost=null;\n    if (jj_2_1(2)) {\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case TERM:\n        fieldToken = jj_consume_token(TERM);\n        jj_consume_token(COLON);\n                               field=discardEscapeChar(fieldToken.image);\n        break;\n      case STAR:\n        jj_consume_token(STAR);\n        jj_consume_token(COLON);\n                      field=\"*\";\n        break;\n      default:\n        jj_la1[5] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n    } else {\n      ;\n    }\n    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n    case STAR:\n    case QUOTED:\n    case TERM:\n    case PREFIXTERM:\n    case WILDTERM:\n    case REGEXPTERM:\n    case RANGEIN_START:\n    case RANGEEX_START:\n    case NUMBER:\n      q = Term(field);\n      break;\n    case LPAREN:\n      jj_consume_token(LPAREN);\n      q = Query(field);\n      jj_consume_token(RPAREN);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[6] = jj_gen;\n        ;\n      }\n      break;\n    default:\n      jj_la1[7] = jj_gen;\n      jj_consume_token(-1);\n      throw new ParseException();\n    }\n      if (boost != null) {\n        float f = (float)1.0;\n  try {\n    f = Float.valueOf(boost.image).floatValue();\n          q.setBoost(f);\n  } catch (Exception ignored) { }\n      }\n      {if (true) return q;}\n    throw new Error(\"Missing return statement in function\");\n  }\n\n","sourceOld":"  final public Query Clause(String field) throws ParseException {\n  Query q;\n  Token fieldToken=null, boost=null;\n    if (jj_2_1(2)) {\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case TERM:\n        fieldToken = jj_consume_token(TERM);\n        jj_consume_token(COLON);\n                               field=discardEscapeChar(fieldToken.image);\n        break;\n      case STAR:\n        jj_consume_token(STAR);\n        jj_consume_token(COLON);\n                      field=\"*\";\n        break;\n      default:\n        jj_la1[5] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n    } else {\n      ;\n    }\n    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n    case STAR:\n    case QUOTED:\n    case TERM:\n    case PREFIXTERM:\n    case WILDTERM:\n    case RANGEIN_START:\n    case RANGEEX_START:\n    case NUMBER:\n      q = Term(field);\n      break;\n    case LPAREN:\n      jj_consume_token(LPAREN);\n      q = Query(field);\n      jj_consume_token(RPAREN);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[6] = jj_gen;\n        ;\n      }\n      break;\n    default:\n      jj_la1[7] = jj_gen;\n      jj_consume_token(-1);\n      throw new ParseException();\n    }\n      if (boost != null) {\n        float f = (float)1.0;\n  try {\n    f = Float.valueOf(boost.image).floatValue();\n          q.setBoost(f);\n  } catch (Exception ignored) { }\n      }\n      {if (true) return q;}\n    throw new Error(\"Missing return statement in function\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9e87c4193bc100c3b96235f14bee01a5b2009ce5","date":1287756261,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/queryParser/QueryParser#Clause(String).mjava","pathOld":"lucene/src/java/org/apache/lucene/queryParser/QueryParser#Clause(String).mjava","sourceNew":"  final public Query Clause(String field) throws ParseException {\n  Query q;\n  Token fieldToken=null, boost=null;\n    if (jj_2_1(2)) {\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case TERM:\n        fieldToken = jj_consume_token(TERM);\n        jj_consume_token(COLON);\n                               field=discardEscapeChar(fieldToken.image);\n        break;\n      case STAR:\n        jj_consume_token(STAR);\n        jj_consume_token(COLON);\n                      field=\"*\";\n        break;\n      default:\n        jj_la1[5] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n    } else {\n      ;\n    }\n    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n    case STAR:\n    case QUOTED:\n    case TERM:\n    case PREFIXTERM:\n    case WILDTERM:\n    case REGEXPTERM:\n    case RANGEIN_START:\n    case RANGEEX_START:\n    case NUMBER:\n      q = Term(field);\n      break;\n    case LPAREN:\n      jj_consume_token(LPAREN);\n      q = Query(field);\n      jj_consume_token(RPAREN);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[6] = jj_gen;\n        ;\n      }\n      break;\n    default:\n      jj_la1[7] = jj_gen;\n      jj_consume_token(-1);\n      throw new ParseException();\n    }\n       {if (true) return handleBoost(q, boost);}\n    throw new Error(\"Missing return statement in function\");\n  }\n\n","sourceOld":"  final public Query Clause(String field) throws ParseException {\n  Query q;\n  Token fieldToken=null, boost=null;\n    if (jj_2_1(2)) {\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case TERM:\n        fieldToken = jj_consume_token(TERM);\n        jj_consume_token(COLON);\n                               field=discardEscapeChar(fieldToken.image);\n        break;\n      case STAR:\n        jj_consume_token(STAR);\n        jj_consume_token(COLON);\n                      field=\"*\";\n        break;\n      default:\n        jj_la1[5] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n    } else {\n      ;\n    }\n    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n    case STAR:\n    case QUOTED:\n    case TERM:\n    case PREFIXTERM:\n    case WILDTERM:\n    case REGEXPTERM:\n    case RANGEIN_START:\n    case RANGEEX_START:\n    case NUMBER:\n      q = Term(field);\n      break;\n    case LPAREN:\n      jj_consume_token(LPAREN);\n      q = Query(field);\n      jj_consume_token(RPAREN);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[6] = jj_gen;\n        ;\n      }\n      break;\n    default:\n      jj_la1[7] = jj_gen;\n      jj_consume_token(-1);\n      throw new ParseException();\n    }\n      if (boost != null) {\n        float f = (float)1.0;\n  try {\n    f = Float.valueOf(boost.image).floatValue();\n          q.setBoost(f);\n  } catch (Exception ignored) { }\n      }\n      {if (true) return q;}\n    throw new Error(\"Missing return statement in function\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b12d3e81e0f95a4527b5703953c503f71120ffcc","date":1288080933,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/queryParser/QueryParser#Clause(String).mjava","pathOld":"lucene/src/java/org/apache/lucene/queryParser/QueryParser#Clause(String).mjava","sourceNew":"  final public Query Clause(String field) throws ParseException {\n  Query q;\n  Token fieldToken=null, boost=null;\n    if (jj_2_1(2)) {\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case TERM:\n        fieldToken = jj_consume_token(TERM);\n        jj_consume_token(COLON);\n                               field=discardEscapeChar(fieldToken.image);\n        break;\n      case STAR:\n        jj_consume_token(STAR);\n        jj_consume_token(COLON);\n                      field=\"*\";\n        break;\n      default:\n        jj_la1[5] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n    } else {\n      ;\n    }\n    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n    case STAR:\n    case QUOTED:\n    case TERM:\n    case PREFIXTERM:\n    case WILDTERM:\n    case REGEXPTERM:\n    case RANGEIN_START:\n    case RANGEEX_START:\n    case NUMBER:\n      q = Term(field);\n      break;\n    case LPAREN:\n      jj_consume_token(LPAREN);\n      q = Query(field);\n      jj_consume_token(RPAREN);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[6] = jj_gen;\n        ;\n      }\n      break;\n    default:\n      jj_la1[7] = jj_gen;\n      jj_consume_token(-1);\n      throw new ParseException();\n    }\n       {if (true) return handleBoost(q, boost);}\n    throw new Error(\"Missing return statement in function\");\n  }\n\n","sourceOld":"  final public Query Clause(String field) throws ParseException {\n  Query q;\n  Token fieldToken=null, boost=null;\n    if (jj_2_1(2)) {\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case TERM:\n        fieldToken = jj_consume_token(TERM);\n        jj_consume_token(COLON);\n                               field=discardEscapeChar(fieldToken.image);\n        break;\n      case STAR:\n        jj_consume_token(STAR);\n        jj_consume_token(COLON);\n                      field=\"*\";\n        break;\n      default:\n        jj_la1[5] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n    } else {\n      ;\n    }\n    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n    case STAR:\n    case QUOTED:\n    case TERM:\n    case PREFIXTERM:\n    case WILDTERM:\n    case REGEXPTERM:\n    case RANGEIN_START:\n    case RANGEEX_START:\n    case NUMBER:\n      q = Term(field);\n      break;\n    case LPAREN:\n      jj_consume_token(LPAREN);\n      q = Query(field);\n      jj_consume_token(RPAREN);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[6] = jj_gen;\n        ;\n      }\n      break;\n    default:\n      jj_la1[7] = jj_gen;\n      jj_consume_token(-1);\n      throw new ParseException();\n    }\n      if (boost != null) {\n        float f = (float)1.0;\n  try {\n    f = Float.valueOf(boost.image).floatValue();\n          q.setBoost(f);\n  } catch (Exception ignored) { }\n      }\n      {if (true) return q;}\n    throw new Error(\"Missing return statement in function\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8b8488cadcd1dfaaf25307c360bb8cbb6ce8ab4f","date":1288120493,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/queryParser/QueryParser#Clause(String).mjava","pathOld":"lucene/src/java/org/apache/lucene/queryParser/QueryParser#Clause(String).mjava","sourceNew":"  final public Query Clause(String field) throws ParseException {\n  Query q;\n  Token fieldToken=null, boost=null;\n    if (jj_2_1(2)) {\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case TERM:\n        fieldToken = jj_consume_token(TERM);\n        jj_consume_token(COLON);\n                               field=discardEscapeChar(fieldToken.image);\n        break;\n      case STAR:\n        jj_consume_token(STAR);\n        jj_consume_token(COLON);\n                      field=\"*\";\n        break;\n      default:\n        jj_la1[5] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n    } else {\n      ;\n    }\n    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n    case BAREOPER:\n    case STAR:\n    case QUOTED:\n    case TERM:\n    case PREFIXTERM:\n    case WILDTERM:\n    case REGEXPTERM:\n    case RANGEIN_START:\n    case RANGEEX_START:\n    case NUMBER:\n      q = Term(field);\n      break;\n    case LPAREN:\n      jj_consume_token(LPAREN);\n      q = Query(field);\n      jj_consume_token(RPAREN);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[6] = jj_gen;\n        ;\n      }\n      break;\n    default:\n      jj_la1[7] = jj_gen;\n      jj_consume_token(-1);\n      throw new ParseException();\n    }\n       {if (true) return handleBoost(q, boost);}\n    throw new Error(\"Missing return statement in function\");\n  }\n\n","sourceOld":"  final public Query Clause(String field) throws ParseException {\n  Query q;\n  Token fieldToken=null, boost=null;\n    if (jj_2_1(2)) {\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case TERM:\n        fieldToken = jj_consume_token(TERM);\n        jj_consume_token(COLON);\n                               field=discardEscapeChar(fieldToken.image);\n        break;\n      case STAR:\n        jj_consume_token(STAR);\n        jj_consume_token(COLON);\n                      field=\"*\";\n        break;\n      default:\n        jj_la1[5] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n    } else {\n      ;\n    }\n    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n    case STAR:\n    case QUOTED:\n    case TERM:\n    case PREFIXTERM:\n    case WILDTERM:\n    case REGEXPTERM:\n    case RANGEIN_START:\n    case RANGEEX_START:\n    case NUMBER:\n      q = Term(field);\n      break;\n    case LPAREN:\n      jj_consume_token(LPAREN);\n      q = Query(field);\n      jj_consume_token(RPAREN);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[6] = jj_gen;\n        ;\n      }\n      break;\n    default:\n      jj_la1[7] = jj_gen;\n      jj_consume_token(-1);\n      throw new ParseException();\n    }\n       {if (true) return handleBoost(q, boost);}\n    throw new Error(\"Missing return statement in function\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ca0ffea399542e8aac8ed7608f34f8ec4cb8904d","date":1288424244,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/queryParser/QueryParser#Clause(String).mjava","pathOld":"lucene/src/java/org/apache/lucene/queryParser/QueryParser#Clause(String).mjava","sourceNew":"  final public Query Clause(String field) throws ParseException {\n  Query q;\n  Token fieldToken=null, boost=null;\n    if (jj_2_1(2)) {\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case TERM:\n        fieldToken = jj_consume_token(TERM);\n        jj_consume_token(COLON);\n                               field=discardEscapeChar(fieldToken.image);\n        break;\n      case STAR:\n        jj_consume_token(STAR);\n        jj_consume_token(COLON);\n                      field=\"*\";\n        break;\n      default:\n        jj_la1[5] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n    } else {\n      ;\n    }\n    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n    case BAREOPER:\n    case STAR:\n    case QUOTED:\n    case TERM:\n    case PREFIXTERM:\n    case WILDTERM:\n    case REGEXPTERM:\n    case RANGEIN_START:\n    case RANGEEX_START:\n    case NUMBER:\n      q = Term(field);\n      break;\n    case LPAREN:\n      jj_consume_token(LPAREN);\n      q = Query(field);\n      jj_consume_token(RPAREN);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[6] = jj_gen;\n        ;\n      }\n      break;\n    default:\n      jj_la1[7] = jj_gen;\n      jj_consume_token(-1);\n      throw new ParseException();\n    }\n       {if (true) return handleBoost(q, boost);}\n    throw new Error(\"Missing return statement in function\");\n  }\n\n","sourceOld":"  final public Query Clause(String field) throws ParseException {\n  Query q;\n  Token fieldToken=null, boost=null;\n    if (jj_2_1(2)) {\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case TERM:\n        fieldToken = jj_consume_token(TERM);\n        jj_consume_token(COLON);\n                               field=discardEscapeChar(fieldToken.image);\n        break;\n      case STAR:\n        jj_consume_token(STAR);\n        jj_consume_token(COLON);\n                      field=\"*\";\n        break;\n      default:\n        jj_la1[5] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n    } else {\n      ;\n    }\n    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n    case STAR:\n    case QUOTED:\n    case TERM:\n    case PREFIXTERM:\n    case WILDTERM:\n    case REGEXPTERM:\n    case RANGEIN_START:\n    case RANGEEX_START:\n    case NUMBER:\n      q = Term(field);\n      break;\n    case LPAREN:\n      jj_consume_token(LPAREN);\n      q = Query(field);\n      jj_consume_token(RPAREN);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[6] = jj_gen;\n        ;\n      }\n      break;\n    default:\n      jj_la1[7] = jj_gen;\n      jj_consume_token(-1);\n      throw new ParseException();\n    }\n       {if (true) return handleBoost(q, boost);}\n    throw new Error(\"Missing return statement in function\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","date":1292920096,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/queryParser/QueryParser#Clause(String).mjava","pathOld":"lucene/src/java/org/apache/lucene/queryParser/QueryParser#Clause(String).mjava","sourceNew":"  final public Query Clause(String field) throws ParseException {\n  Query q;\n  Token fieldToken=null, boost=null;\n    if (jj_2_1(2)) {\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case TERM:\n        fieldToken = jj_consume_token(TERM);\n        jj_consume_token(COLON);\n                               field=discardEscapeChar(fieldToken.image);\n        break;\n      case STAR:\n        jj_consume_token(STAR);\n        jj_consume_token(COLON);\n                      field=\"*\";\n        break;\n      default:\n        jj_la1[5] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n    } else {\n      ;\n    }\n    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n    case BAREOPER:\n    case STAR:\n    case QUOTED:\n    case TERM:\n    case PREFIXTERM:\n    case WILDTERM:\n    case REGEXPTERM:\n    case RANGEIN_START:\n    case RANGEEX_START:\n    case NUMBER:\n      q = Term(field);\n      break;\n    case LPAREN:\n      jj_consume_token(LPAREN);\n      q = Query(field);\n      jj_consume_token(RPAREN);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[6] = jj_gen;\n        ;\n      }\n      break;\n    default:\n      jj_la1[7] = jj_gen;\n      jj_consume_token(-1);\n      throw new ParseException();\n    }\n       {if (true) return handleBoost(q, boost);}\n    throw new Error(\"Missing return statement in function\");\n  }\n\n","sourceOld":"  final public Query Clause(String field) throws ParseException {\n  Query q;\n  Token fieldToken=null, boost=null;\n    if (jj_2_1(2)) {\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case TERM:\n        fieldToken = jj_consume_token(TERM);\n        jj_consume_token(COLON);\n                               field=discardEscapeChar(fieldToken.image);\n        break;\n      case STAR:\n        jj_consume_token(STAR);\n        jj_consume_token(COLON);\n                      field=\"*\";\n        break;\n      default:\n        jj_la1[5] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n    } else {\n      ;\n    }\n    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n    case STAR:\n    case QUOTED:\n    case TERM:\n    case PREFIXTERM:\n    case WILDTERM:\n    case RANGEIN_START:\n    case RANGEEX_START:\n    case NUMBER:\n      q = Term(field);\n      break;\n    case LPAREN:\n      jj_consume_token(LPAREN);\n      q = Query(field);\n      jj_consume_token(RPAREN);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[6] = jj_gen;\n        ;\n      }\n      break;\n    default:\n      jj_la1[7] = jj_gen;\n      jj_consume_token(-1);\n      throw new ParseException();\n    }\n      if (boost != null) {\n        float f = (float)1.0;\n  try {\n    f = Float.valueOf(boost.image).floatValue();\n          q.setBoost(f);\n  } catch (Exception ignored) { }\n      }\n      {if (true) return q;}\n    throw new Error(\"Missing return statement in function\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"91a3609ac9a09ca0c8eee1b765401bbdacaceaf8","date":1310355420,"type":5,"author":"Christopher John Male","isMerge":false,"pathNew":"modules/queryparser/src/java/org/apache/lucene/queryparser/classic/QueryParser#Clause(String).mjava","pathOld":"lucene/src/java/org/apache/lucene/queryParser/QueryParser#Clause(String).mjava","sourceNew":"  final public Query Clause(String field) throws ParseException {\n  Query q;\n  Token fieldToken=null, boost=null;\n    if (jj_2_1(2)) {\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case TERM:\n        fieldToken = jj_consume_token(TERM);\n        jj_consume_token(COLON);\n                               field=discardEscapeChar(fieldToken.image);\n        break;\n      case STAR:\n        jj_consume_token(STAR);\n        jj_consume_token(COLON);\n                      field=\"*\";\n        break;\n      default:\n        jj_la1[5] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n    } else {\n      ;\n    }\n    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n    case BAREOPER:\n    case STAR:\n    case QUOTED:\n    case TERM:\n    case PREFIXTERM:\n    case WILDTERM:\n    case REGEXPTERM:\n    case RANGEIN_START:\n    case RANGEEX_START:\n    case NUMBER:\n      q = Term(field);\n      break;\n    case LPAREN:\n      jj_consume_token(LPAREN);\n      q = Query(field);\n      jj_consume_token(RPAREN);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[6] = jj_gen;\n        ;\n      }\n      break;\n    default:\n      jj_la1[7] = jj_gen;\n      jj_consume_token(-1);\n      throw new ParseException();\n    }\n       {if (true) return handleBoost(q, boost);}\n    throw new Error(\"Missing return statement in function\");\n  }\n\n","sourceOld":"  final public Query Clause(String field) throws ParseException {\n  Query q;\n  Token fieldToken=null, boost=null;\n    if (jj_2_1(2)) {\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case TERM:\n        fieldToken = jj_consume_token(TERM);\n        jj_consume_token(COLON);\n                               field=discardEscapeChar(fieldToken.image);\n        break;\n      case STAR:\n        jj_consume_token(STAR);\n        jj_consume_token(COLON);\n                      field=\"*\";\n        break;\n      default:\n        jj_la1[5] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n    } else {\n      ;\n    }\n    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n    case BAREOPER:\n    case STAR:\n    case QUOTED:\n    case TERM:\n    case PREFIXTERM:\n    case WILDTERM:\n    case REGEXPTERM:\n    case RANGEIN_START:\n    case RANGEEX_START:\n    case NUMBER:\n      q = Term(field);\n      break;\n    case LPAREN:\n      jj_consume_token(LPAREN);\n      q = Query(field);\n      jj_consume_token(RPAREN);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[6] = jj_gen;\n        ;\n      }\n      break;\n    default:\n      jj_la1[7] = jj_gen;\n      jj_consume_token(-1);\n      throw new ParseException();\n    }\n       {if (true) return handleBoost(q, boost);}\n    throw new Error(\"Missing return statement in function\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"d94d6afa51157e490fc169e192a154ffc4cdad0b":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"91a3609ac9a09ca0c8eee1b765401bbdacaceaf8":["8b8488cadcd1dfaaf25307c360bb8cbb6ce8ab4f"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"9e87c4193bc100c3b96235f14bee01a5b2009ce5":["d94d6afa51157e490fc169e192a154ffc4cdad0b"],"b12d3e81e0f95a4527b5703953c503f71120ffcc":["d94d6afa51157e490fc169e192a154ffc4cdad0b","9e87c4193bc100c3b96235f14bee01a5b2009ce5"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["9454a6510e2db155fb01faa5c049b06ece95fab9","8b8488cadcd1dfaaf25307c360bb8cbb6ce8ab4f"],"ca0ffea399542e8aac8ed7608f34f8ec4cb8904d":["b12d3e81e0f95a4527b5703953c503f71120ffcc","8b8488cadcd1dfaaf25307c360bb8cbb6ce8ab4f"],"8b8488cadcd1dfaaf25307c360bb8cbb6ce8ab4f":["9e87c4193bc100c3b96235f14bee01a5b2009ce5"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["91a3609ac9a09ca0c8eee1b765401bbdacaceaf8"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"d94d6afa51157e490fc169e192a154ffc4cdad0b":["9e87c4193bc100c3b96235f14bee01a5b2009ce5","b12d3e81e0f95a4527b5703953c503f71120ffcc"],"91a3609ac9a09ca0c8eee1b765401bbdacaceaf8":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9e87c4193bc100c3b96235f14bee01a5b2009ce5":["b12d3e81e0f95a4527b5703953c503f71120ffcc","8b8488cadcd1dfaaf25307c360bb8cbb6ce8ab4f"],"b12d3e81e0f95a4527b5703953c503f71120ffcc":["ca0ffea399542e8aac8ed7608f34f8ec4cb8904d"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":[],"ca0ffea399542e8aac8ed7608f34f8ec4cb8904d":[],"8b8488cadcd1dfaaf25307c360bb8cbb6ce8ab4f":["91a3609ac9a09ca0c8eee1b765401bbdacaceaf8","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","ca0ffea399542e8aac8ed7608f34f8ec4cb8904d"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["d94d6afa51157e490fc169e192a154ffc4cdad0b","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","ca0ffea399542e8aac8ed7608f34f8ec4cb8904d","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}