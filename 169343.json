{"path":"solr/core/src/java/org/apache/solr/util/DateFormatUtil.ISO8601CanonicalDateFormat#format(Date,StringBuffer,FieldPosition).mjava","commits":[{"id":"0c38a05f7a7b43c2dabbd25f12f9941c64bb2331","date":1437383270,"type":1,"author":"Uwe Schindler","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/util/DateFormatUtil.ISO8601CanonicalDateFormat#format(Date,StringBuffer,FieldPosition).mjava","pathOld":"solr/core/src/java/org/apache/solr/schema/TrieDateField.ISO8601CanonicalDateFormat#format(Date,StringBuffer,FieldPosition).mjava","sourceNew":"    @Override\n    public StringBuffer format(Date d, StringBuffer toAppendTo, FieldPosition pos) {\n      /* delegate to SimpleDateFormat for easy stuff */\n      super.format(d, toAppendTo, pos);\n      /* worry about the milliseconds ourselves */\n      long millis = d.getTime() % 1000l;\n      if (0L == millis) {\n        return toAppendTo;\n      }\n      if (millis < 0L) {\n        // original date was prior to epoch\n        millis += 1000L;\n      }\n      int posBegin = toAppendTo.length();\n      toAppendTo.append(millisFormat.format(millis / 1000d));\n      if (DateFormat.MILLISECOND_FIELD == pos.getField()) {\n        pos.setBeginIndex(posBegin);\n        pos.setEndIndex(toAppendTo.length());\n      }\n      return toAppendTo;\n    }\n\n","sourceOld":"    @Override\n    public StringBuffer format(Date d, StringBuffer toAppendTo, FieldPosition pos) {\n      /* delegate to SimpleDateFormat for easy stuff */\n      super.format(d, toAppendTo, pos);\n      /* worry about the milliseconds ourselves */\n      long millis = d.getTime() % 1000l;\n      if (0L == millis) {\n        return toAppendTo;\n      }\n      if (millis < 0L) {\n        // original date was prior to epoch\n        millis += 1000L;\n      }\n      int posBegin = toAppendTo.length();\n      toAppendTo.append(millisFormat.format(millis / 1000d));\n      if (DateFormat.MILLISECOND_FIELD == pos.getField()) {\n        pos.setBeginIndex(posBegin);\n        pos.setEndIndex(toAppendTo.length());\n      }\n      return toAppendTo;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d3f6c7717a0f1decd1668144537943efcc70cd95","date":1459359762,"type":4,"author":"David Smiley","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/core/src/java/org/apache/solr/util/DateFormatUtil.ISO8601CanonicalDateFormat#format(Date,StringBuffer,FieldPosition).mjava","sourceNew":null,"sourceOld":"    @Override\n    public StringBuffer format(Date d, StringBuffer toAppendTo, FieldPosition pos) {\n      /* delegate to SimpleDateFormat for easy stuff */\n      super.format(d, toAppendTo, pos);\n      /* worry about the milliseconds ourselves */\n      long millis = d.getTime() % 1000l;\n      if (0L == millis) {\n        return toAppendTo;\n      }\n      if (millis < 0L) {\n        // original date was prior to epoch\n        millis += 1000L;\n      }\n      int posBegin = toAppendTo.length();\n      toAppendTo.append(millisFormat.format(millis / 1000d));\n      if (DateFormat.MILLISECOND_FIELD == pos.getField()) {\n        pos.setBeginIndex(posBegin);\n        pos.setEndIndex(toAppendTo.length());\n      }\n      return toAppendTo;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"d3f6c7717a0f1decd1668144537943efcc70cd95":["0c38a05f7a7b43c2dabbd25f12f9941c64bb2331"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["d3f6c7717a0f1decd1668144537943efcc70cd95"],"0c38a05f7a7b43c2dabbd25f12f9941c64bb2331":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"d3f6c7717a0f1decd1668144537943efcc70cd95":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["0c38a05f7a7b43c2dabbd25f12f9941c64bb2331"],"0c38a05f7a7b43c2dabbd25f12f9941c64bb2331":["d3f6c7717a0f1decd1668144537943efcc70cd95"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}