{"path":"solr/src/test/org/apache/solr/handler/component/QueryElevationComponentTest#testEmptyQuery().mjava","commits":[{"id":"893269407f5c988a4b2ee13c7ffc01ec43136c1d","date":1268598046,"type":0,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/src/test/org/apache/solr/handler/component/QueryElevationComponentTest#testEmptyQuery().mjava","pathOld":"/dev/null","sourceNew":"  public void testEmptyQuery() throws Exception {\n    SolrCore core = h.getCore();\n\n    //String query = \"title:ipod\";\n\n    Map<String,String> args = new HashMap<String, String>();\n    args.put( \"q.alt\", \"*:*\" );\n    args.put( \"defType\", \"dismax\");\n    args.put( CommonParams.QT, \"/elevate\" );\n    //args.put( CommonParams.FL, \"id,title,score\" );\n    SolrQueryRequest req = new LocalSolrQueryRequest( core, new MapSolrParams( args) );\n    assertQ(\"Make sure QEC handles null queries\", req, \"//*[@numFound='0']\");\n\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8","date":1268599006,"type":4,"author":"Mark Robert Miller","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/src/test/org/apache/solr/handler/component/QueryElevationComponentTest#testEmptyQuery().mjava","sourceNew":null,"sourceOld":"  public void testEmptyQuery() throws Exception {\n    SolrCore core = h.getCore();\n\n    //String query = \"title:ipod\";\n\n    Map<String,String> args = new HashMap<String, String>();\n    args.put( \"q.alt\", \"*:*\" );\n    args.put( \"defType\", \"dismax\");\n    args.put( CommonParams.QT, \"/elevate\" );\n    //args.put( CommonParams.FL, \"id,title,score\" );\n    SolrQueryRequest req = new LocalSolrQueryRequest( core, new MapSolrParams( args) );\n    assertQ(\"Make sure QEC handles null queries\", req, \"//*[@numFound='0']\");\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ad94625fb8d088209f46650c8097196fec67f00c","date":1453508319,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/src/test/org/apache/solr/handler/component/QueryElevationComponentTest#testEmptyQuery().mjava","pathOld":"src/test/org/apache/solr/handler/component/QueryElevationComponentTest#testEmptyQuery().mjava","sourceNew":"  public void testEmptyQuery() throws Exception {\n    SolrCore core = h.getCore();\n\n    //String query = \"title:ipod\";\n\n    Map<String,String> args = new HashMap<String, String>();\n    args.put( \"q.alt\", \"*:*\" );\n    args.put( \"defType\", \"dismax\");\n    args.put( CommonParams.QT, \"/elevate\" );\n    //args.put( CommonParams.FL, \"id,title,score\" );\n    SolrQueryRequest req = new LocalSolrQueryRequest( core, new MapSolrParams( args) );\n    assertQ(\"Make sure QEC handles null queries\", req, \"//*[@numFound='0']\");\n\n  }\n\n","sourceOld":"  public void testEmptyQuery() throws Exception {\n    SolrCore core = h.getCore();\n\n    //String query = \"title:ipod\";\n\n    Map<String,String> args = new HashMap<String, String>();\n    args.put( \"q.alt\", \"*:*\" );\n    args.put( \"defType\", \"dismax\");\n    args.put( CommonParams.QT, \"/elevate\" );\n    //args.put( CommonParams.FL, \"id,title,score\" );\n    SolrQueryRequest req = new LocalSolrQueryRequest( core, new MapSolrParams( args) );\n    assertQ(\"Make sure QEC handles null queries\", req, \"//*[@numFound='0']\");\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1da8d55113b689b06716246649de6f62430f15c0","date":1453508340,"type":0,"author":"Dawid Weiss","isMerge":true,"pathNew":"solr/src/test/org/apache/solr/handler/component/QueryElevationComponentTest#testEmptyQuery().mjava","pathOld":"/dev/null","sourceNew":"  public void testEmptyQuery() throws Exception {\n    SolrCore core = h.getCore();\n\n    //String query = \"title:ipod\";\n\n    Map<String,String> args = new HashMap<String, String>();\n    args.put( \"q.alt\", \"*:*\" );\n    args.put( \"defType\", \"dismax\");\n    args.put( CommonParams.QT, \"/elevate\" );\n    //args.put( CommonParams.FL, \"id,title,score\" );\n    SolrQueryRequest req = new LocalSolrQueryRequest( core, new MapSolrParams( args) );\n    assertQ(\"Make sure QEC handles null queries\", req, \"//*[@numFound='0']\");\n\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"afeb033b2bd36d8ce9d82142b197da4dde13068b","date":1269115863,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"solr/src/test/org/apache/solr/handler/component/QueryElevationComponentTest#testEmptyQuery().mjava","pathOld":"solr/src/test/org/apache/solr/handler/component/QueryElevationComponentTest#testEmptyQuery().mjava","sourceNew":"  @Test\n  public void testEmptyQuery() throws Exception {\n    SolrCore core = h.getCore();\n\n    //String query = \"title:ipod\";\n\n    Map<String,String> args = new HashMap<String, String>();\n    args.put( \"q.alt\", \"*:*\" );\n    args.put( \"defType\", \"dismax\");\n    args.put( CommonParams.QT, \"/elevate\" );\n    //args.put( CommonParams.FL, \"id,title,score\" );\n    SolrQueryRequest req = new LocalSolrQueryRequest( core, new MapSolrParams( args) );\n    assertQ(\"Make sure QEC handles null queries\", req, \"//*[@numFound='0']\");\n\n  }\n\n","sourceOld":"  public void testEmptyQuery() throws Exception {\n    SolrCore core = h.getCore();\n\n    //String query = \"title:ipod\";\n\n    Map<String,String> args = new HashMap<String, String>();\n    args.put( \"q.alt\", \"*:*\" );\n    args.put( \"defType\", \"dismax\");\n    args.put( CommonParams.QT, \"/elevate\" );\n    //args.put( CommonParams.FL, \"id,title,score\" );\n    SolrQueryRequest req = new LocalSolrQueryRequest( core, new MapSolrParams( args) );\n    assertQ(\"Make sure QEC handles null queries\", req, \"//*[@numFound='0']\");\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"cdd1db40ae856a49ef526079829c557533f2b50f","date":1287093509,"type":4,"author":"Yonik Seeley","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/src/test/org/apache/solr/handler/component/QueryElevationComponentTest#testEmptyQuery().mjava","sourceNew":null,"sourceOld":"  @Test\n  public void testEmptyQuery() throws Exception {\n    SolrCore core = h.getCore();\n\n    //String query = \"title:ipod\";\n\n    Map<String,String> args = new HashMap<String, String>();\n    args.put( \"q.alt\", \"*:*\" );\n    args.put( \"defType\", \"dismax\");\n    args.put( CommonParams.QT, \"/elevate\" );\n    //args.put( CommonParams.FL, \"id,title,score\" );\n    SolrQueryRequest req = new LocalSolrQueryRequest( core, new MapSolrParams( args) );\n    assertQ(\"Make sure QEC handles null queries\", req, \"//*[@numFound='0']\");\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4ecea1664e8617d82eca3b8055a3c37cb4da8511","date":1287578668,"type":4,"author":"Simon Willnauer","isMerge":true,"pathNew":"/dev/null","pathOld":"solr/src/test/org/apache/solr/handler/component/QueryElevationComponentTest#testEmptyQuery().mjava","sourceNew":null,"sourceOld":"  @Test\n  public void testEmptyQuery() throws Exception {\n    SolrCore core = h.getCore();\n\n    //String query = \"title:ipod\";\n\n    Map<String,String> args = new HashMap<String, String>();\n    args.put( \"q.alt\", \"*:*\" );\n    args.put( \"defType\", \"dismax\");\n    args.put( CommonParams.QT, \"/elevate\" );\n    //args.put( CommonParams.FL, \"id,title,score\" );\n    SolrQueryRequest req = new LocalSolrQueryRequest( core, new MapSolrParams( args) );\n    assertQ(\"Make sure QEC handles null queries\", req, \"//*[@numFound='0']\");\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","date":1292920096,"type":4,"author":"Michael Busch","isMerge":true,"pathNew":"/dev/null","pathOld":"solr/src/test/org/apache/solr/handler/component/QueryElevationComponentTest#testEmptyQuery().mjava","sourceNew":null,"sourceOld":"  @Test\n  public void testEmptyQuery() throws Exception {\n    SolrCore core = h.getCore();\n\n    //String query = \"title:ipod\";\n\n    Map<String,String> args = new HashMap<String, String>();\n    args.put( \"q.alt\", \"*:*\" );\n    args.put( \"defType\", \"dismax\");\n    args.put( CommonParams.QT, \"/elevate\" );\n    //args.put( CommonParams.FL, \"id,title,score\" );\n    SolrQueryRequest req = new LocalSolrQueryRequest( core, new MapSolrParams( args) );\n    assertQ(\"Make sure QEC handles null queries\", req, \"//*[@numFound='0']\");\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"1da8d55113b689b06716246649de6f62430f15c0":["a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8","ad94625fb8d088209f46650c8097196fec67f00c"],"cdd1db40ae856a49ef526079829c557533f2b50f":["afeb033b2bd36d8ce9d82142b197da4dde13068b"],"893269407f5c988a4b2ee13c7ffc01ec43136c1d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8":["893269407f5c988a4b2ee13c7ffc01ec43136c1d"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"afeb033b2bd36d8ce9d82142b197da4dde13068b":["1da8d55113b689b06716246649de6f62430f15c0"],"ad94625fb8d088209f46650c8097196fec67f00c":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["afeb033b2bd36d8ce9d82142b197da4dde13068b","cdd1db40ae856a49ef526079829c557533f2b50f"],"4ecea1664e8617d82eca3b8055a3c37cb4da8511":["afeb033b2bd36d8ce9d82142b197da4dde13068b","cdd1db40ae856a49ef526079829c557533f2b50f"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["cdd1db40ae856a49ef526079829c557533f2b50f"]},"commit2Childs":{"1da8d55113b689b06716246649de6f62430f15c0":["afeb033b2bd36d8ce9d82142b197da4dde13068b"],"cdd1db40ae856a49ef526079829c557533f2b50f":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","4ecea1664e8617d82eca3b8055a3c37cb4da8511","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"893269407f5c988a4b2ee13c7ffc01ec43136c1d":["a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8"],"a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8":["1da8d55113b689b06716246649de6f62430f15c0"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["893269407f5c988a4b2ee13c7ffc01ec43136c1d"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["ad94625fb8d088209f46650c8097196fec67f00c"],"afeb033b2bd36d8ce9d82142b197da4dde13068b":["cdd1db40ae856a49ef526079829c557533f2b50f","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","4ecea1664e8617d82eca3b8055a3c37cb4da8511"],"ad94625fb8d088209f46650c8097196fec67f00c":["1da8d55113b689b06716246649de6f62430f15c0"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":[],"4ecea1664e8617d82eca3b8055a3c37cb4da8511":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","4ecea1664e8617d82eca3b8055a3c37cb4da8511","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"pathCommit":null}