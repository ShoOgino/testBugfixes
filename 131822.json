{"path":"solr/core/src/java/org/apache/solr/util/SolrPluginUtils#applyParamSet(RequestParams,SolrParams,String,String).mjava","commits":[{"id":"b5991832ae4bac45cecfff0fc33125aeac823d3d","date":1456229449,"type":0,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/util/SolrPluginUtils#applyParamSet(RequestParams,SolrParams,String,String).mjava","pathOld":"/dev/null","sourceNew":"  private static SolrParams applyParamSet(RequestParams requestParams,\n                                          SolrParams defaults, String paramSets, String type) {\n    if (paramSets == null) return defaults;\n    for (String name : StrUtils.splitSmart(paramSets, ',')) {\n      RequestParams.VersionedParams params = requestParams.getParams(name, type);\n      if (type.equals(DEFAULTS)) {\n        defaults = SolrParams.wrapDefaults(params, defaults);\n      } else if (type.equals(INVARIANTS)) {\n        defaults = SolrParams.wrapAppended(params, defaults);\n      } else {\n        defaults = SolrParams.wrapAppended(params, defaults);\n      }\n    }\n    return defaults;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a5296efc4b319f5647b606629c093a94b23692c6","date":1456267155,"type":0,"author":"Mike McCandless","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/util/SolrPluginUtils#applyParamSet(RequestParams,SolrParams,String,String).mjava","pathOld":"/dev/null","sourceNew":"  private static SolrParams applyParamSet(RequestParams requestParams,\n                                          SolrParams defaults, String paramSets, String type) {\n    if (paramSets == null) return defaults;\n    for (String name : StrUtils.splitSmart(paramSets, ',')) {\n      RequestParams.VersionedParams params = requestParams.getParams(name, type);\n      if (type.equals(DEFAULTS)) {\n        defaults = SolrParams.wrapDefaults(params, defaults);\n      } else if (type.equals(INVARIANTS)) {\n        defaults = SolrParams.wrapAppended(params, defaults);\n      } else {\n        defaults = SolrParams.wrapAppended(params, defaults);\n      }\n    }\n    return defaults;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"403083ff7458a420d21d0aef7488ba088755894f","date":1474889417,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/util/SolrPluginUtils#applyParamSet(RequestParams,SolrParams,String,String).mjava","pathOld":"solr/core/src/java/org/apache/solr/util/SolrPluginUtils#applyParamSet(RequestParams,SolrParams,String,String).mjava","sourceNew":"  private static SolrParams applyParamSet(RequestParams requestParams,\n                                          SolrParams defaults, String paramSets, String type) {\n    if (paramSets == null) return defaults;\n    for (String name : StrUtils.splitSmart(paramSets, ',')) {\n      RequestParams.VersionedParams params = requestParams.getParams(name, type);\n      if (params == null) return defaults;\n      if (type.equals(DEFAULTS)) {\n        defaults = SolrParams.wrapDefaults(params, defaults);\n      } else if (type.equals(INVARIANTS)) {\n        defaults = SolrParams.wrapAppended(params, defaults);\n      } else {\n        defaults = SolrParams.wrapAppended(params, defaults);\n      }\n    }\n    return defaults;\n  }\n\n","sourceOld":"  private static SolrParams applyParamSet(RequestParams requestParams,\n                                          SolrParams defaults, String paramSets, String type) {\n    if (paramSets == null) return defaults;\n    for (String name : StrUtils.splitSmart(paramSets, ',')) {\n      RequestParams.VersionedParams params = requestParams.getParams(name, type);\n      if (type.equals(DEFAULTS)) {\n        defaults = SolrParams.wrapDefaults(params, defaults);\n      } else if (type.equals(INVARIANTS)) {\n        defaults = SolrParams.wrapAppended(params, defaults);\n      } else {\n        defaults = SolrParams.wrapAppended(params, defaults);\n      }\n    }\n    return defaults;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2f566efac8819b86fa6c5bb315b7bb253ffe8297","date":1474910829,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/util/SolrPluginUtils#applyParamSet(RequestParams,SolrParams,String,String).mjava","pathOld":"solr/core/src/java/org/apache/solr/util/SolrPluginUtils#applyParamSet(RequestParams,SolrParams,String,String).mjava","sourceNew":"  private static SolrParams applyParamSet(RequestParams requestParams,\n                                          SolrParams defaults, String paramSets, String type) {\n    if (paramSets == null) return defaults;\n    List<String> paramSetList = paramSets.indexOf(',') == -1 ? singletonList(paramSets) : StrUtils.splitSmart(paramSets, ',');\n    for (String name : paramSetList) {\n      RequestParams.VersionedParams params = requestParams.getParams(name, type);\n      if (params == null) return defaults;\n      if (type.equals(DEFAULTS)) {\n        defaults = SolrParams.wrapDefaults(params, defaults);\n      } else if (type.equals(INVARIANTS)) {\n        defaults = SolrParams.wrapAppended(params, defaults);\n      } else {\n        defaults = SolrParams.wrapAppended(params, defaults);\n      }\n    }\n    return defaults;\n  }\n\n","sourceOld":"  private static SolrParams applyParamSet(RequestParams requestParams,\n                                          SolrParams defaults, String paramSets, String type) {\n    if (paramSets == null) return defaults;\n    for (String name : StrUtils.splitSmart(paramSets, ',')) {\n      RequestParams.VersionedParams params = requestParams.getParams(name, type);\n      if (params == null) return defaults;\n      if (type.equals(DEFAULTS)) {\n        defaults = SolrParams.wrapDefaults(params, defaults);\n      } else if (type.equals(INVARIANTS)) {\n        defaults = SolrParams.wrapAppended(params, defaults);\n      } else {\n        defaults = SolrParams.wrapAppended(params, defaults);\n      }\n    }\n    return defaults;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"17e5da53e4e5bd659e22add9bba1cfa222e7e30d","date":1475435902,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/util/SolrPluginUtils#applyParamSet(RequestParams,SolrParams,String,String).mjava","pathOld":"solr/core/src/java/org/apache/solr/util/SolrPluginUtils#applyParamSet(RequestParams,SolrParams,String,String).mjava","sourceNew":"  private static SolrParams applyParamSet(RequestParams requestParams,\n                                          SolrParams defaults, String paramSets, String type) {\n    if (paramSets == null) return defaults;\n    List<String> paramSetList = paramSets.indexOf(',') == -1 ? singletonList(paramSets) : StrUtils.splitSmart(paramSets, ',');\n    for (String name : paramSetList) {\n      RequestParams.VersionedParams params = requestParams.getParams(name, type);\n      if (params == null) return defaults;\n      if (type.equals(DEFAULTS)) {\n        defaults = SolrParams.wrapDefaults(params, defaults);\n      } else if (type.equals(INVARIANTS)) {\n        defaults = SolrParams.wrapAppended(params, defaults);\n      } else {\n        defaults = SolrParams.wrapAppended(params, defaults);\n      }\n    }\n    return defaults;\n  }\n\n","sourceOld":"  private static SolrParams applyParamSet(RequestParams requestParams,\n                                          SolrParams defaults, String paramSets, String type) {\n    if (paramSets == null) return defaults;\n    for (String name : StrUtils.splitSmart(paramSets, ',')) {\n      RequestParams.VersionedParams params = requestParams.getParams(name, type);\n      if (type.equals(DEFAULTS)) {\n        defaults = SolrParams.wrapDefaults(params, defaults);\n      } else if (type.equals(INVARIANTS)) {\n        defaults = SolrParams.wrapAppended(params, defaults);\n      } else {\n        defaults = SolrParams.wrapAppended(params, defaults);\n      }\n    }\n    return defaults;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/util/SolrPluginUtils#applyParamSet(RequestParams,SolrParams,String,String).mjava","pathOld":"solr/core/src/java/org/apache/solr/util/SolrPluginUtils#applyParamSet(RequestParams,SolrParams,String,String).mjava","sourceNew":"  private static SolrParams applyParamSet(RequestParams requestParams,\n                                          SolrParams defaults, String paramSets, String type) {\n    if (paramSets == null) return defaults;\n    List<String> paramSetList = paramSets.indexOf(',') == -1 ? singletonList(paramSets) : StrUtils.splitSmart(paramSets, ',');\n    for (String name : paramSetList) {\n      RequestParams.VersionedParams params = requestParams.getParams(name, type);\n      if (params == null) return defaults;\n      if (type.equals(DEFAULTS)) {\n        defaults = SolrParams.wrapDefaults(params, defaults);\n      } else if (type.equals(INVARIANTS)) {\n        defaults = SolrParams.wrapAppended(params, defaults);\n      } else {\n        defaults = SolrParams.wrapAppended(params, defaults);\n      }\n    }\n    return defaults;\n  }\n\n","sourceOld":"  private static SolrParams applyParamSet(RequestParams requestParams,\n                                          SolrParams defaults, String paramSets, String type) {\n    if (paramSets == null) return defaults;\n    for (String name : StrUtils.splitSmart(paramSets, ',')) {\n      RequestParams.VersionedParams params = requestParams.getParams(name, type);\n      if (type.equals(DEFAULTS)) {\n        defaults = SolrParams.wrapDefaults(params, defaults);\n      } else if (type.equals(INVARIANTS)) {\n        defaults = SolrParams.wrapAppended(params, defaults);\n      } else {\n        defaults = SolrParams.wrapAppended(params, defaults);\n      }\n    }\n    return defaults;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"403083ff7458a420d21d0aef7488ba088755894f":["b5991832ae4bac45cecfff0fc33125aeac823d3d"],"2f566efac8819b86fa6c5bb315b7bb253ffe8297":["403083ff7458a420d21d0aef7488ba088755894f"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"17e5da53e4e5bd659e22add9bba1cfa222e7e30d":["b5991832ae4bac45cecfff0fc33125aeac823d3d","2f566efac8819b86fa6c5bb315b7bb253ffe8297"],"a5296efc4b319f5647b606629c093a94b23692c6":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","b5991832ae4bac45cecfff0fc33125aeac823d3d"],"b5991832ae4bac45cecfff0fc33125aeac823d3d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["b5991832ae4bac45cecfff0fc33125aeac823d3d","17e5da53e4e5bd659e22add9bba1cfa222e7e30d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["17e5da53e4e5bd659e22add9bba1cfa222e7e30d"]},"commit2Childs":{"403083ff7458a420d21d0aef7488ba088755894f":["2f566efac8819b86fa6c5bb315b7bb253ffe8297"],"2f566efac8819b86fa6c5bb315b7bb253ffe8297":["17e5da53e4e5bd659e22add9bba1cfa222e7e30d"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["a5296efc4b319f5647b606629c093a94b23692c6","b5991832ae4bac45cecfff0fc33125aeac823d3d"],"17e5da53e4e5bd659e22add9bba1cfa222e7e30d":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a5296efc4b319f5647b606629c093a94b23692c6":[],"b5991832ae4bac45cecfff0fc33125aeac823d3d":["403083ff7458a420d21d0aef7488ba088755894f","17e5da53e4e5bd659e22add9bba1cfa222e7e30d","a5296efc4b319f5647b606629c093a94b23692c6","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a5296efc4b319f5647b606629c093a94b23692c6","4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}