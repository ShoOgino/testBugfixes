{"path":"src/java/org/apache/lucene/util/ReaderUtil#subIndex(int,int[]).mjava","commits":[{"id":"fe941135bdfc28c81e20b4d21422f8726af34925","date":1250040150,"type":0,"author":"Mark Robert Miller","isMerge":false,"pathNew":"src/java/org/apache/lucene/util/ReaderUtil#subIndex(int,int[]).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Returns index of the searcher/reader for document <code>n</code> in the\n   * array used to construct this searcher/reader.\n   */\n  public static int subIndex(int n, int[] docStarts) { // find\n    // searcher/reader for doc n:\n    int size = docStarts.length;\n    int lo = 0; // search starts array\n    int hi = size - 1; // for first element less than n, return its index\n    while (hi >= lo) {\n      int mid = (lo + hi) >>> 1;\n      int midValue = docStarts[mid];\n      if (n < midValue)\n        hi = mid - 1;\n      else if (n > midValue)\n        lo = mid + 1;\n      else { // found a match\n        while (mid + 1 < size && docStarts[mid + 1] == midValue) {\n          mid++; // scan to last match\n        }\n        return mid;\n      }\n    }\n    return hi;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/util/ReaderUtil#subIndex(int,int[]).mjava","pathOld":"src/java/org/apache/lucene/util/ReaderUtil#subIndex(int,int[]).mjava","sourceNew":"  /**\n   * Returns index of the searcher/reader for document <code>n</code> in the\n   * array used to construct this searcher/reader.\n   */\n  public static int subIndex(int n, int[] docStarts) { // find\n    // searcher/reader for doc n:\n    int size = docStarts.length;\n    int lo = 0; // search starts array\n    int hi = size - 1; // for first element less than n, return its index\n    while (hi >= lo) {\n      int mid = (lo + hi) >>> 1;\n      int midValue = docStarts[mid];\n      if (n < midValue)\n        hi = mid - 1;\n      else if (n > midValue)\n        lo = mid + 1;\n      else { // found a match\n        while (mid + 1 < size && docStarts[mid + 1] == midValue) {\n          mid++; // scan to last match\n        }\n        return mid;\n      }\n    }\n    return hi;\n  }\n\n","sourceOld":"  /**\n   * Returns index of the searcher/reader for document <code>n</code> in the\n   * array used to construct this searcher/reader.\n   */\n  public static int subIndex(int n, int[] docStarts) { // find\n    // searcher/reader for doc n:\n    int size = docStarts.length;\n    int lo = 0; // search starts array\n    int hi = size - 1; // for first element less than n, return its index\n    while (hi >= lo) {\n      int mid = (lo + hi) >>> 1;\n      int midValue = docStarts[mid];\n      if (n < midValue)\n        hi = mid - 1;\n      else if (n > midValue)\n        lo = mid + 1;\n      else { // found a match\n        while (mid + 1 < size && docStarts[mid + 1] == midValue) {\n          mid++; // scan to last match\n        }\n        return mid;\n      }\n    }\n    return hi;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"fe941135bdfc28c81e20b4d21422f8726af34925":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["fe941135bdfc28c81e20b4d21422f8726af34925"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["fe941135bdfc28c81e20b4d21422f8726af34925"],"fe941135bdfc28c81e20b4d21422f8726af34925":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}