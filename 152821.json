{"path":"solr/core/src/java/org/apache/solr/update/UpdateLog#delete(DeleteUpdateCommand).mjava","commits":[{"id":"bd0ef6574805f3cb9880e0983b7548a6aa933508","date":1315345052,"type":0,"author":"Yonik Seeley","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/update/UpdateLog#delete(DeleteUpdateCommand).mjava","pathOld":"/dev/null","sourceNew":"  public abstract void delete(DeleteUpdateCommand cmd);\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2c007e7c4cf8c55bc2a5884e315123afaaeec87f","date":1327520966,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/update/UpdateLog#delete(DeleteUpdateCommand).mjava","pathOld":"solr/core/src/java/org/apache/solr/update/UpdateLog#delete(DeleteUpdateCommand).mjava","sourceNew":"  public void delete(DeleteUpdateCommand cmd) {\n    BytesRef br = cmd.getIndexedId();\n\n    synchronized (this) {\n      long pos = -1;\n\n      // don't log if we are replaying from another log\n      if ((cmd.getFlags() & UpdateCommand.REPLAY) == 0) {\n        ensureLog();\n        pos = tlog.writeDelete(cmd);\n      }\n\n      LogPtr ptr = new LogPtr(pos, cmd.version);\n\n      // only update our map if we're not buffering\n      if ((cmd.getFlags() & UpdateCommand.BUFFERING) == 0) {\n        map.put(br, ptr);\n\n        oldDeletes.put(br, ptr);\n      }\n\n      if (debug) {\n        log.debug(\"TLOG: added delete for id \" + cmd.id + \" to \" + tlog + \" \" + ptr + \" map=\" + System.identityHashCode(map));\n      }\n    }\n  }\n\n","sourceOld":"  public abstract void delete(DeleteUpdateCommand cmd);\n\n","bugFix":null,"bugIntro":["e99829242bceda4cf974ec0eb5d82d713615b3da"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"a3c68e20c73359a10cf3eb4a35c9fa7ab1f3c30d","date":1327523564,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/update/UpdateLog#delete(DeleteUpdateCommand).mjava","pathOld":"solr/core/src/java/org/apache/solr/update/UpdateLog#delete(DeleteUpdateCommand).mjava","sourceNew":"  public void delete(DeleteUpdateCommand cmd) {\n    BytesRef br = cmd.getIndexedId();\n\n    synchronized (this) {\n      long pos = -1;\n\n      // don't log if we are replaying from another log\n      if ((cmd.getFlags() & UpdateCommand.REPLAY) == 0) {\n        ensureLog();\n        pos = tlog.writeDelete(cmd);\n      }\n\n      LogPtr ptr = new LogPtr(pos, cmd.version);\n\n      // only update our map if we're not buffering\n      if ((cmd.getFlags() & UpdateCommand.BUFFERING) == 0) {\n        map.put(br, ptr);\n\n        oldDeletes.put(br, ptr);\n      }\n\n      if (debug) {\n        log.debug(\"TLOG: added delete for id \" + cmd.id + \" to \" + tlog + \" \" + ptr + \" map=\" + System.identityHashCode(map));\n      }\n    }\n  }\n\n","sourceOld":"  public abstract void delete(DeleteUpdateCommand cmd);\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0d22ac6a4146774c1bc8400160fc0b6150294e92","date":1327528604,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/update/UpdateLog#delete(DeleteUpdateCommand).mjava","pathOld":"solr/core/src/java/org/apache/solr/update/UpdateLog#delete(DeleteUpdateCommand).mjava","sourceNew":"  public void delete(DeleteUpdateCommand cmd) {\n    BytesRef br = cmd.getIndexedId();\n\n    synchronized (this) {\n      long pos = -1;\n\n      // don't log if we are replaying from another log\n      if ((cmd.getFlags() & UpdateCommand.REPLAY) == 0) {\n        ensureLog();\n        pos = tlog.writeDelete(cmd);\n      }\n\n      LogPtr ptr = new LogPtr(pos, cmd.version);\n\n      // only update our map if we're not buffering\n      if ((cmd.getFlags() & UpdateCommand.BUFFERING) == 0) {\n        map.put(br, ptr);\n\n        oldDeletes.put(br, ptr);\n      }\n\n      if (debug) {\n        log.debug(\"TLOG: added delete for id \" + cmd.id + \" to \" + tlog + \" \" + ptr + \" map=\" + System.identityHashCode(map));\n      }\n    }\n  }\n\n","sourceOld":"  public abstract void delete(DeleteUpdateCommand cmd);\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4404c73eb4b69219f283c2f08a34a08bfdb6327f","date":1327615748,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/update/UpdateLog#delete(DeleteUpdateCommand).mjava","pathOld":"solr/core/src/java/org/apache/solr/update/UpdateLog#delete(DeleteUpdateCommand).mjava","sourceNew":"  public void delete(DeleteUpdateCommand cmd) {\n    BytesRef br = cmd.getIndexedId();\n\n    synchronized (this) {\n      long pos = -1;\n\n      // don't log if we are replaying from another log\n      if ((cmd.getFlags() & UpdateCommand.REPLAY) == 0) {\n        ensureLog();\n        pos = tlog.writeDelete(cmd);\n      }\n\n      LogPtr ptr = new LogPtr(pos, cmd.version);\n\n      // only update our map if we're not buffering\n      if ((cmd.getFlags() & UpdateCommand.BUFFERING) == 0) {\n        map.put(br, ptr);\n\n        oldDeletes.put(br, ptr);\n      }\n\n      if (trace) {\n        log.trace(\"TLOG: added delete for id \" + cmd.id + \" to \" + tlog + \" \" + ptr + \" map=\" + System.identityHashCode(map));\n      }\n    }\n  }\n\n","sourceOld":"  public void delete(DeleteUpdateCommand cmd) {\n    BytesRef br = cmd.getIndexedId();\n\n    synchronized (this) {\n      long pos = -1;\n\n      // don't log if we are replaying from another log\n      if ((cmd.getFlags() & UpdateCommand.REPLAY) == 0) {\n        ensureLog();\n        pos = tlog.writeDelete(cmd);\n      }\n\n      LogPtr ptr = new LogPtr(pos, cmd.version);\n\n      // only update our map if we're not buffering\n      if ((cmd.getFlags() & UpdateCommand.BUFFERING) == 0) {\n        map.put(br, ptr);\n\n        oldDeletes.put(br, ptr);\n      }\n\n      if (debug) {\n        log.debug(\"TLOG: added delete for id \" + cmd.id + \" to \" + tlog + \" \" + ptr + \" map=\" + System.identityHashCode(map));\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"78a55f24d9b493c2a1cecf79f1d78279062b545b","date":1327688152,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/update/UpdateLog#delete(DeleteUpdateCommand).mjava","pathOld":"solr/core/src/java/org/apache/solr/update/UpdateLog#delete(DeleteUpdateCommand).mjava","sourceNew":"  public void delete(DeleteUpdateCommand cmd) {\n    BytesRef br = cmd.getIndexedId();\n\n    synchronized (this) {\n      long pos = -1;\n\n      // don't log if we are replaying from another log\n      if ((cmd.getFlags() & UpdateCommand.REPLAY) == 0) {\n        ensureLog();\n        pos = tlog.writeDelete(cmd);\n      }\n\n      LogPtr ptr = new LogPtr(pos, cmd.version);\n\n      // only update our map if we're not buffering\n      if ((cmd.getFlags() & UpdateCommand.BUFFERING) == 0) {\n        map.put(br, ptr);\n\n        oldDeletes.put(br, ptr);\n      }\n\n      if (trace) {\n        log.trace(\"TLOG: added delete for id \" + cmd.id + \" to \" + tlog + \" \" + ptr + \" map=\" + System.identityHashCode(map));\n      }\n    }\n  }\n\n","sourceOld":"  public void delete(DeleteUpdateCommand cmd) {\n    BytesRef br = cmd.getIndexedId();\n\n    synchronized (this) {\n      long pos = -1;\n\n      // don't log if we are replaying from another log\n      if ((cmd.getFlags() & UpdateCommand.REPLAY) == 0) {\n        ensureLog();\n        pos = tlog.writeDelete(cmd);\n      }\n\n      LogPtr ptr = new LogPtr(pos, cmd.version);\n\n      // only update our map if we're not buffering\n      if ((cmd.getFlags() & UpdateCommand.BUFFERING) == 0) {\n        map.put(br, ptr);\n\n        oldDeletes.put(br, ptr);\n      }\n\n      if (debug) {\n        log.debug(\"TLOG: added delete for id \" + cmd.id + \" to \" + tlog + \" \" + ptr + \" map=\" + System.identityHashCode(map));\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fd92b8bcc88e969302510acf77bd6970da3994c4","date":1327839530,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/update/UpdateLog#delete(DeleteUpdateCommand).mjava","pathOld":"solr/core/src/java/org/apache/solr/update/UpdateLog#delete(DeleteUpdateCommand).mjava","sourceNew":"  public void delete(DeleteUpdateCommand cmd) {\n    BytesRef br = cmd.getIndexedId();\n\n    synchronized (this) {\n      long pos = -1;\n\n      // don't log if we are replaying from another log\n      if ((cmd.getFlags() & UpdateCommand.REPLAY) == 0) {\n        ensureLog();\n        pos = tlog.writeDelete(cmd);\n      }\n\n      LogPtr ptr = new LogPtr(pos, cmd.version);\n\n      // only update our map if we're not buffering\n      if ((cmd.getFlags() & UpdateCommand.BUFFERING) == 0) {\n        map.put(br, ptr);\n\n        oldDeletes.put(br, ptr);\n      }\n\n      if (trace) {\n        log.trace(\"TLOG: added delete for id \" + cmd.id + \" to \" + tlog + \" \" + ptr + \" map=\" + System.identityHashCode(map));\n      }\n    }\n  }\n\n","sourceOld":"  public void delete(DeleteUpdateCommand cmd) {\n    BytesRef br = cmd.getIndexedId();\n\n    synchronized (this) {\n      long pos = -1;\n\n      // don't log if we are replaying from another log\n      if ((cmd.getFlags() & UpdateCommand.REPLAY) == 0) {\n        ensureLog();\n        pos = tlog.writeDelete(cmd);\n      }\n\n      LogPtr ptr = new LogPtr(pos, cmd.version);\n\n      // only update our map if we're not buffering\n      if ((cmd.getFlags() & UpdateCommand.BUFFERING) == 0) {\n        map.put(br, ptr);\n\n        oldDeletes.put(br, ptr);\n      }\n\n      if (debug) {\n        log.debug(\"TLOG: added delete for id \" + cmd.id + \" to \" + tlog + \" \" + ptr + \" map=\" + System.identityHashCode(map));\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e99829242bceda4cf974ec0eb5d82d713615b3da","date":1337646971,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/update/UpdateLog#delete(DeleteUpdateCommand).mjava","pathOld":"solr/core/src/java/org/apache/solr/update/UpdateLog#delete(DeleteUpdateCommand).mjava","sourceNew":"  public void delete(DeleteUpdateCommand cmd) {\n    BytesRef br = cmd.getIndexedId();\n\n    synchronized (this) {\n      long pos = -1;\n\n      // don't log if we are replaying from another log\n      if ((cmd.getFlags() & UpdateCommand.REPLAY) == 0) {\n        ensureLog();\n        pos = tlog.writeDelete(cmd, operationFlags);\n      }\n\n      LogPtr ptr = new LogPtr(pos, cmd.version);\n\n      // only update our map if we're not buffering\n      if ((cmd.getFlags() & UpdateCommand.BUFFERING) == 0) {\n        map.put(br, ptr);\n\n        oldDeletes.put(br, ptr);\n      }\n\n      if (trace) {\n        log.trace(\"TLOG: added delete for id \" + cmd.id + \" to \" + tlog + \" \" + ptr + \" map=\" + System.identityHashCode(map));\n      }\n    }\n  }\n\n","sourceOld":"  public void delete(DeleteUpdateCommand cmd) {\n    BytesRef br = cmd.getIndexedId();\n\n    synchronized (this) {\n      long pos = -1;\n\n      // don't log if we are replaying from another log\n      if ((cmd.getFlags() & UpdateCommand.REPLAY) == 0) {\n        ensureLog();\n        pos = tlog.writeDelete(cmd);\n      }\n\n      LogPtr ptr = new LogPtr(pos, cmd.version);\n\n      // only update our map if we're not buffering\n      if ((cmd.getFlags() & UpdateCommand.BUFFERING) == 0) {\n        map.put(br, ptr);\n\n        oldDeletes.put(br, ptr);\n      }\n\n      if (trace) {\n        log.trace(\"TLOG: added delete for id \" + cmd.id + \" to \" + tlog + \" \" + ptr + \" map=\" + System.identityHashCode(map));\n      }\n    }\n  }\n\n","bugFix":["2c007e7c4cf8c55bc2a5884e315123afaaeec87f"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3599646b4d4c346cf74d334813488b8b337b5bf5","date":1337790261,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/update/UpdateLog#delete(DeleteUpdateCommand).mjava","pathOld":"solr/core/src/java/org/apache/solr/update/UpdateLog#delete(DeleteUpdateCommand).mjava","sourceNew":"  public void delete(DeleteUpdateCommand cmd) {\n    BytesRef br = cmd.getIndexedId();\n\n    synchronized (this) {\n      long pos = -1;\n\n      // don't log if we are replaying from another log\n      if ((cmd.getFlags() & UpdateCommand.REPLAY) == 0) {\n        ensureLog();\n        pos = tlog.writeDelete(cmd, operationFlags);\n      }\n\n      LogPtr ptr = new LogPtr(pos, cmd.version);\n\n      // only update our map if we're not buffering\n      if ((cmd.getFlags() & UpdateCommand.BUFFERING) == 0) {\n        map.put(br, ptr);\n\n        oldDeletes.put(br, ptr);\n      }\n\n      if (trace) {\n        log.trace(\"TLOG: added delete for id \" + cmd.id + \" to \" + tlog + \" \" + ptr + \" map=\" + System.identityHashCode(map));\n      }\n    }\n  }\n\n","sourceOld":"  public void delete(DeleteUpdateCommand cmd) {\n    BytesRef br = cmd.getIndexedId();\n\n    synchronized (this) {\n      long pos = -1;\n\n      // don't log if we are replaying from another log\n      if ((cmd.getFlags() & UpdateCommand.REPLAY) == 0) {\n        ensureLog();\n        pos = tlog.writeDelete(cmd);\n      }\n\n      LogPtr ptr = new LogPtr(pos, cmd.version);\n\n      // only update our map if we're not buffering\n      if ((cmd.getFlags() & UpdateCommand.BUFFERING) == 0) {\n        map.put(br, ptr);\n\n        oldDeletes.put(br, ptr);\n      }\n\n      if (trace) {\n        log.trace(\"TLOG: added delete for id \" + cmd.id + \" to \" + tlog + \" \" + ptr + \" map=\" + System.identityHashCode(map));\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1455c941cc4ce652efc776fc23471b0e499246f6","date":1528086751,"type":3,"author":"Cao Manh Dat","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/update/UpdateLog#delete(DeleteUpdateCommand).mjava","pathOld":"solr/core/src/java/org/apache/solr/update/UpdateLog#delete(DeleteUpdateCommand).mjava","sourceNew":"  public void delete(DeleteUpdateCommand cmd) {\n    BytesRef br = cmd.getIndexedId();\n\n    synchronized (this) {\n      if ((cmd.getFlags() & UpdateCommand.BUFFERING) != 0) {\n        ensureBufferTlog();\n        bufferTlog.writeDelete(cmd);\n        return;\n      }\n\n      long pos = -1;\n      if (!updateFromOldTlogs(cmd)) {\n        ensureLog();\n        pos = tlog.writeDelete(cmd);\n      }\n\n      LogPtr ptr = new LogPtr(pos, cmd.version);\n      map.put(br, ptr);\n      oldDeletes.put(br, ptr);\n\n      if (trace) {\n        log.trace(\"TLOG: added delete for id \" + cmd.id + \" to \" + tlog + \" \" + ptr + \" map=\" + System.identityHashCode(map));\n      }\n    }\n  }\n\n","sourceOld":"  public void delete(DeleteUpdateCommand cmd) {\n    BytesRef br = cmd.getIndexedId();\n\n    synchronized (this) {\n      long pos = -1;\n\n      // don't log if we are replaying from another log\n      if ((cmd.getFlags() & UpdateCommand.REPLAY) == 0) {\n        ensureLog();\n        pos = tlog.writeDelete(cmd, operationFlags);\n      }\n\n      LogPtr ptr = new LogPtr(pos, cmd.version);\n\n      // only update our map if we're not buffering\n      if ((cmd.getFlags() & UpdateCommand.BUFFERING) == 0) {\n        map.put(br, ptr);\n\n        oldDeletes.put(br, ptr);\n      }\n\n      if (trace) {\n        log.trace(\"TLOG: added delete for id \" + cmd.id + \" to \" + tlog + \" \" + ptr + \" map=\" + System.identityHashCode(map));\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f592209545c71895260367152601e9200399776d","date":1528238935,"type":3,"author":"Michael Braun","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/update/UpdateLog#delete(DeleteUpdateCommand).mjava","pathOld":"solr/core/src/java/org/apache/solr/update/UpdateLog#delete(DeleteUpdateCommand).mjava","sourceNew":"  public void delete(DeleteUpdateCommand cmd) {\n    BytesRef br = cmd.getIndexedId();\n\n    synchronized (this) {\n      if ((cmd.getFlags() & UpdateCommand.BUFFERING) != 0) {\n        ensureBufferTlog();\n        bufferTlog.writeDelete(cmd);\n        return;\n      }\n\n      long pos = -1;\n      if (!updateFromOldTlogs(cmd)) {\n        ensureLog();\n        pos = tlog.writeDelete(cmd);\n      }\n\n      LogPtr ptr = new LogPtr(pos, cmd.version);\n      map.put(br, ptr);\n      oldDeletes.put(br, ptr);\n\n      if (trace) {\n        log.trace(\"TLOG: added delete for id \" + cmd.id + \" to \" + tlog + \" \" + ptr + \" map=\" + System.identityHashCode(map));\n      }\n    }\n  }\n\n","sourceOld":"  public void delete(DeleteUpdateCommand cmd) {\n    BytesRef br = cmd.getIndexedId();\n\n    synchronized (this) {\n      long pos = -1;\n\n      // don't log if we are replaying from another log\n      if ((cmd.getFlags() & UpdateCommand.REPLAY) == 0) {\n        ensureLog();\n        pos = tlog.writeDelete(cmd, operationFlags);\n      }\n\n      LogPtr ptr = new LogPtr(pos, cmd.version);\n\n      // only update our map if we're not buffering\n      if ((cmd.getFlags() & UpdateCommand.BUFFERING) == 0) {\n        map.put(br, ptr);\n\n        oldDeletes.put(br, ptr);\n      }\n\n      if (trace) {\n        log.trace(\"TLOG: added delete for id \" + cmd.id + \" to \" + tlog + \" \" + ptr + \" map=\" + System.identityHashCode(map));\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b70042a8a492f7054d480ccdd2be9796510d4327","date":1528386658,"type":3,"author":"Alessandro Benedetti","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/update/UpdateLog#delete(DeleteUpdateCommand).mjava","pathOld":"solr/core/src/java/org/apache/solr/update/UpdateLog#delete(DeleteUpdateCommand).mjava","sourceNew":"  public void delete(DeleteUpdateCommand cmd) {\n    BytesRef br = cmd.getIndexedId();\n\n    synchronized (this) {\n      if ((cmd.getFlags() & UpdateCommand.BUFFERING) != 0) {\n        ensureBufferTlog();\n        bufferTlog.writeDelete(cmd);\n        return;\n      }\n\n      long pos = -1;\n      if (!updateFromOldTlogs(cmd)) {\n        ensureLog();\n        pos = tlog.writeDelete(cmd);\n      }\n\n      LogPtr ptr = new LogPtr(pos, cmd.version);\n      map.put(br, ptr);\n      oldDeletes.put(br, ptr);\n\n      if (trace) {\n        log.trace(\"TLOG: added delete for id \" + cmd.id + \" to \" + tlog + \" \" + ptr + \" map=\" + System.identityHashCode(map));\n      }\n    }\n  }\n\n","sourceOld":"  public void delete(DeleteUpdateCommand cmd) {\n    BytesRef br = cmd.getIndexedId();\n\n    synchronized (this) {\n      long pos = -1;\n\n      // don't log if we are replaying from another log\n      if ((cmd.getFlags() & UpdateCommand.REPLAY) == 0) {\n        ensureLog();\n        pos = tlog.writeDelete(cmd, operationFlags);\n      }\n\n      LogPtr ptr = new LogPtr(pos, cmd.version);\n\n      // only update our map if we're not buffering\n      if ((cmd.getFlags() & UpdateCommand.BUFFERING) == 0) {\n        map.put(br, ptr);\n\n        oldDeletes.put(br, ptr);\n      }\n\n      if (trace) {\n        log.trace(\"TLOG: added delete for id \" + cmd.id + \" to \" + tlog + \" \" + ptr + \" map=\" + System.identityHashCode(map));\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"740d649f013f07efbeb73ca854f106c60166e7c0","date":1587431295,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/update/UpdateLog#delete(DeleteUpdateCommand).mjava","pathOld":"solr/core/src/java/org/apache/solr/update/UpdateLog#delete(DeleteUpdateCommand).mjava","sourceNew":"  public void delete(DeleteUpdateCommand cmd) {\n    BytesRef br = cmd.getIndexedId();\n\n    synchronized (this) {\n      if ((cmd.getFlags() & UpdateCommand.BUFFERING) != 0) {\n        ensureBufferTlog();\n        bufferTlog.writeDelete(cmd);\n        return;\n      }\n\n      long pos = -1;\n      if (!updateFromOldTlogs(cmd)) {\n        ensureLog();\n        pos = tlog.writeDelete(cmd);\n      }\n\n      LogPtr ptr = new LogPtr(pos, cmd.version);\n      map.put(br, ptr);\n      oldDeletes.put(br, ptr);\n\n      if (trace) {\n        log.trace(\"TLOG: added delete for id {} to {} {} map={}\", cmd.id, tlog, ptr, System.identityHashCode(map));\n      }\n    }\n  }\n\n","sourceOld":"  public void delete(DeleteUpdateCommand cmd) {\n    BytesRef br = cmd.getIndexedId();\n\n    synchronized (this) {\n      if ((cmd.getFlags() & UpdateCommand.BUFFERING) != 0) {\n        ensureBufferTlog();\n        bufferTlog.writeDelete(cmd);\n        return;\n      }\n\n      long pos = -1;\n      if (!updateFromOldTlogs(cmd)) {\n        ensureLog();\n        pos = tlog.writeDelete(cmd);\n      }\n\n      LogPtr ptr = new LogPtr(pos, cmd.version);\n      map.put(br, ptr);\n      oldDeletes.put(br, ptr);\n\n      if (trace) {\n        log.trace(\"TLOG: added delete for id \" + cmd.id + \" to \" + tlog + \" \" + ptr + \" map=\" + System.identityHashCode(map));\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"78a55f24d9b493c2a1cecf79f1d78279062b545b":["a3c68e20c73359a10cf3eb4a35c9fa7ab1f3c30d","4404c73eb4b69219f283c2f08a34a08bfdb6327f"],"740d649f013f07efbeb73ca854f106c60166e7c0":["1455c941cc4ce652efc776fc23471b0e499246f6"],"fd92b8bcc88e969302510acf77bd6970da3994c4":["0d22ac6a4146774c1bc8400160fc0b6150294e92","4404c73eb4b69219f283c2f08a34a08bfdb6327f"],"a3c68e20c73359a10cf3eb4a35c9fa7ab1f3c30d":["bd0ef6574805f3cb9880e0983b7548a6aa933508","2c007e7c4cf8c55bc2a5884e315123afaaeec87f"],"4404c73eb4b69219f283c2f08a34a08bfdb6327f":["2c007e7c4cf8c55bc2a5884e315123afaaeec87f"],"1455c941cc4ce652efc776fc23471b0e499246f6":["e99829242bceda4cf974ec0eb5d82d713615b3da"],"0d22ac6a4146774c1bc8400160fc0b6150294e92":["bd0ef6574805f3cb9880e0983b7548a6aa933508","2c007e7c4cf8c55bc2a5884e315123afaaeec87f"],"bd0ef6574805f3cb9880e0983b7548a6aa933508":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"b70042a8a492f7054d480ccdd2be9796510d4327":["e99829242bceda4cf974ec0eb5d82d713615b3da","1455c941cc4ce652efc776fc23471b0e499246f6"],"3599646b4d4c346cf74d334813488b8b337b5bf5":["4404c73eb4b69219f283c2f08a34a08bfdb6327f","e99829242bceda4cf974ec0eb5d82d713615b3da"],"2c007e7c4cf8c55bc2a5884e315123afaaeec87f":["bd0ef6574805f3cb9880e0983b7548a6aa933508"],"e99829242bceda4cf974ec0eb5d82d713615b3da":["4404c73eb4b69219f283c2f08a34a08bfdb6327f"],"f592209545c71895260367152601e9200399776d":["e99829242bceda4cf974ec0eb5d82d713615b3da","1455c941cc4ce652efc776fc23471b0e499246f6"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["740d649f013f07efbeb73ca854f106c60166e7c0"]},"commit2Childs":{"78a55f24d9b493c2a1cecf79f1d78279062b545b":[],"740d649f013f07efbeb73ca854f106c60166e7c0":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a3c68e20c73359a10cf3eb4a35c9fa7ab1f3c30d":["78a55f24d9b493c2a1cecf79f1d78279062b545b"],"fd92b8bcc88e969302510acf77bd6970da3994c4":[],"4404c73eb4b69219f283c2f08a34a08bfdb6327f":["78a55f24d9b493c2a1cecf79f1d78279062b545b","fd92b8bcc88e969302510acf77bd6970da3994c4","3599646b4d4c346cf74d334813488b8b337b5bf5","e99829242bceda4cf974ec0eb5d82d713615b3da"],"1455c941cc4ce652efc776fc23471b0e499246f6":["740d649f013f07efbeb73ca854f106c60166e7c0","b70042a8a492f7054d480ccdd2be9796510d4327","f592209545c71895260367152601e9200399776d"],"0d22ac6a4146774c1bc8400160fc0b6150294e92":["fd92b8bcc88e969302510acf77bd6970da3994c4"],"bd0ef6574805f3cb9880e0983b7548a6aa933508":["a3c68e20c73359a10cf3eb4a35c9fa7ab1f3c30d","0d22ac6a4146774c1bc8400160fc0b6150294e92","2c007e7c4cf8c55bc2a5884e315123afaaeec87f"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["bd0ef6574805f3cb9880e0983b7548a6aa933508"],"b70042a8a492f7054d480ccdd2be9796510d4327":[],"3599646b4d4c346cf74d334813488b8b337b5bf5":[],"2c007e7c4cf8c55bc2a5884e315123afaaeec87f":["a3c68e20c73359a10cf3eb4a35c9fa7ab1f3c30d","4404c73eb4b69219f283c2f08a34a08bfdb6327f","0d22ac6a4146774c1bc8400160fc0b6150294e92"],"e99829242bceda4cf974ec0eb5d82d713615b3da":["1455c941cc4ce652efc776fc23471b0e499246f6","b70042a8a492f7054d480ccdd2be9796510d4327","3599646b4d4c346cf74d334813488b8b337b5bf5","f592209545c71895260367152601e9200399776d"],"f592209545c71895260367152601e9200399776d":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["78a55f24d9b493c2a1cecf79f1d78279062b545b","fd92b8bcc88e969302510acf77bd6970da3994c4","b70042a8a492f7054d480ccdd2be9796510d4327","3599646b4d4c346cf74d334813488b8b337b5bf5","f592209545c71895260367152601e9200399776d","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}