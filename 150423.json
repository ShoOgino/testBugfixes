{"path":"modules/analysis/common/src/java/org/tartarus/snowball/ext/RomanianStemmer#r_standard_suffix().mjava","commits":[{"id":"0f080986da691a3bba7b757f43ab72cdc82b57ce","date":1273069619,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"modules/analysis/common/src/java/org/tartarus/snowball/ext/RomanianStemmer#r_standard_suffix().mjava","pathOld":"lucene/contrib/analyzers/common/src/java/org/tartarus/snowball/ext/RomanianStemmer#r_standard_suffix().mjava","sourceNew":"        private boolean r_standard_suffix() {\n            int among_var;\n            int v_1;\n            // (, line 129\n            // unset standard_suffix_removed, line 130\n            B_standard_suffix_removed = false;\n            // repeat, line 131\n            replab0: while(true)\n            {\n                v_1 = limit - cursor;\n                lab1: do {\n                    // call combo_suffix, line 131\n                    if (!r_combo_suffix())\n                    {\n                        break lab1;\n                    }\n                    continue replab0;\n                } while (false);\n                cursor = limit - v_1;\n                break replab0;\n            }\n            // [, line 132\n            ket = cursor;\n            // substring, line 132\n            among_var = find_among_b(a_3, 62);\n            if (among_var == 0)\n            {\n                return false;\n            }\n            // ], line 132\n            bra = cursor;\n            // call R2, line 132\n            if (!r_R2())\n            {\n                return false;\n            }\n            // (, line 132\n            switch(among_var) {\n                case 0:\n                    return false;\n                case 1:\n                    // (, line 148\n                    // delete, line 149\n                    slice_del();\n                    break;\n                case 2:\n                    // (, line 151\n                    // literal, line 152\n                    if (!(eq_s_b(1, \"\\u0163\")))\n                    {\n                        return false;\n                    }\n                    // ], line 152\n                    bra = cursor;\n                    // <-, line 152\n                    slice_from(\"t\");\n                    break;\n                case 3:\n                    // (, line 155\n                    // <-, line 156\n                    slice_from(\"ist\");\n                    break;\n            }\n            // set standard_suffix_removed, line 160\n            B_standard_suffix_removed = true;\n            return true;\n        }\n\n","sourceOld":"        private boolean r_standard_suffix() {\n            int among_var;\n            int v_1;\n            // (, line 129\n            // unset standard_suffix_removed, line 130\n            B_standard_suffix_removed = false;\n            // repeat, line 131\n            replab0: while(true)\n            {\n                v_1 = limit - cursor;\n                lab1: do {\n                    // call combo_suffix, line 131\n                    if (!r_combo_suffix())\n                    {\n                        break lab1;\n                    }\n                    continue replab0;\n                } while (false);\n                cursor = limit - v_1;\n                break replab0;\n            }\n            // [, line 132\n            ket = cursor;\n            // substring, line 132\n            among_var = find_among_b(a_3, 62);\n            if (among_var == 0)\n            {\n                return false;\n            }\n            // ], line 132\n            bra = cursor;\n            // call R2, line 132\n            if (!r_R2())\n            {\n                return false;\n            }\n            // (, line 132\n            switch(among_var) {\n                case 0:\n                    return false;\n                case 1:\n                    // (, line 148\n                    // delete, line 149\n                    slice_del();\n                    break;\n                case 2:\n                    // (, line 151\n                    // literal, line 152\n                    if (!(eq_s_b(1, \"\\u0163\")))\n                    {\n                        return false;\n                    }\n                    // ], line 152\n                    bra = cursor;\n                    // <-, line 152\n                    slice_from(\"t\");\n                    break;\n                case 3:\n                    // (, line 155\n                    // <-, line 156\n                    slice_from(\"ist\");\n                    break;\n            }\n            // set standard_suffix_removed, line 160\n            B_standard_suffix_removed = true;\n            return true;\n        }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/common/src/java/org/tartarus/snowball/ext/RomanianStemmer#r_standard_suffix().mjava","pathOld":"modules/analysis/common/src/java/org/tartarus/snowball/ext/RomanianStemmer#r_standard_suffix().mjava","sourceNew":"        private boolean r_standard_suffix() {\n            int among_var;\n            int v_1;\n            // (, line 129\n            // unset standard_suffix_removed, line 130\n            B_standard_suffix_removed = false;\n            // repeat, line 131\n            replab0: while(true)\n            {\n                v_1 = limit - cursor;\n                lab1: do {\n                    // call combo_suffix, line 131\n                    if (!r_combo_suffix())\n                    {\n                        break lab1;\n                    }\n                    continue replab0;\n                } while (false);\n                cursor = limit - v_1;\n                break replab0;\n            }\n            // [, line 132\n            ket = cursor;\n            // substring, line 132\n            among_var = find_among_b(a_3, 62);\n            if (among_var == 0)\n            {\n                return false;\n            }\n            // ], line 132\n            bra = cursor;\n            // call R2, line 132\n            if (!r_R2())\n            {\n                return false;\n            }\n            // (, line 132\n            switch(among_var) {\n                case 0:\n                    return false;\n                case 1:\n                    // (, line 148\n                    // delete, line 149\n                    slice_del();\n                    break;\n                case 2:\n                    // (, line 151\n                    // literal, line 152\n                    if (!(eq_s_b(1, \"\\u0163\")))\n                    {\n                        return false;\n                    }\n                    // ], line 152\n                    bra = cursor;\n                    // <-, line 152\n                    slice_from(\"t\");\n                    break;\n                case 3:\n                    // (, line 155\n                    // <-, line 156\n                    slice_from(\"ist\");\n                    break;\n            }\n            // set standard_suffix_removed, line 160\n            B_standard_suffix_removed = true;\n            return true;\n        }\n\n","sourceOld":"        private boolean r_standard_suffix() {\n            int among_var;\n            int v_1;\n            // (, line 129\n            // unset standard_suffix_removed, line 130\n            B_standard_suffix_removed = false;\n            // repeat, line 131\n            replab0: while(true)\n            {\n                v_1 = limit - cursor;\n                lab1: do {\n                    // call combo_suffix, line 131\n                    if (!r_combo_suffix())\n                    {\n                        break lab1;\n                    }\n                    continue replab0;\n                } while (false);\n                cursor = limit - v_1;\n                break replab0;\n            }\n            // [, line 132\n            ket = cursor;\n            // substring, line 132\n            among_var = find_among_b(a_3, 62);\n            if (among_var == 0)\n            {\n                return false;\n            }\n            // ], line 132\n            bra = cursor;\n            // call R2, line 132\n            if (!r_R2())\n            {\n                return false;\n            }\n            // (, line 132\n            switch(among_var) {\n                case 0:\n                    return false;\n                case 1:\n                    // (, line 148\n                    // delete, line 149\n                    slice_del();\n                    break;\n                case 2:\n                    // (, line 151\n                    // literal, line 152\n                    if (!(eq_s_b(1, \"\\u0163\")))\n                    {\n                        return false;\n                    }\n                    // ], line 152\n                    bra = cursor;\n                    // <-, line 152\n                    slice_from(\"t\");\n                    break;\n                case 3:\n                    // (, line 155\n                    // <-, line 156\n                    slice_from(\"ist\");\n                    break;\n            }\n            // set standard_suffix_removed, line 160\n            B_standard_suffix_removed = true;\n            return true;\n        }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["0f080986da691a3bba7b757f43ab72cdc82b57ce"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"0f080986da691a3bba7b757f43ab72cdc82b57ce":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b89678825b68eccaf09e6ab71675fc0b0af1e099"]},"commit2Childs":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["0f080986da691a3bba7b757f43ab72cdc82b57ce"],"0f080986da691a3bba7b757f43ab72cdc82b57ce":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}