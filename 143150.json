{"path":"lucene/core/src/test/org/apache/lucene/search/TestConstantScoreScorer#testEarlyTermination().mjava","commits":[{"id":"b0ec17eecd6c6f767b4d4d2cf85b8ddcbeb5d0d6","date":1553706563,"type":0,"author":"jimczi","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestConstantScoreScorer#testEarlyTermination().mjava","pathOld":"/dev/null","sourceNew":"  public void testEarlyTermination() throws IOException {\n    Analyzer analyzer = new MockAnalyzer(random());\n    Directory dir = newDirectory();\n    IndexWriter iw = new IndexWriter(dir, newIndexWriterConfig(analyzer).setMaxBufferedDocs(2).setMergePolicy(newLogMergePolicy()));\n    final int numDocs = 50;\n    for (int i = 0; i < numDocs; i++) {\n      Document doc = new Document();\n      Field f = newTextField(\"key\", i % 2 == 0 ? \"foo bar\" : \"baz\", Field.Store.YES);\n      doc.add(f);\n      iw.addDocument(doc);\n    }\n    IndexReader ir = DirectoryReader.open(iw);\n\n    IndexSearcher is = newSearcher(ir);\n\n    TopScoreDocCollector c = TopScoreDocCollector.create(10, null, 10);\n    is.search(new ConstantScoreQuery(new TermQuery(new Term(\"key\", \"foo\"))), c);\n    assertEquals(11, c.totalHits);\n    assertEquals(TotalHits.Relation.GREATER_THAN_OR_EQUAL_TO, c.totalHitsRelation);\n\n    c = TopScoreDocCollector.create(10, null, 10);\n    Query query = new BooleanQuery.Builder()\n        .add(new ConstantScoreQuery(new TermQuery(new Term(\"key\", \"foo\"))), Occur.SHOULD)\n        .add(new ConstantScoreQuery(new TermQuery(new Term(\"key\", \"bar\"))), Occur.FILTER)\n        .build();\n    is.search(query, c);\n    assertEquals(11, c.totalHits);\n    assertEquals(TotalHits.Relation.GREATER_THAN_OR_EQUAL_TO, c.totalHitsRelation);\n\n    iw.close();\n    ir.close();\n    dir.close();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"b0ec17eecd6c6f767b4d4d2cf85b8ddcbeb5d0d6":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b0ec17eecd6c6f767b4d4d2cf85b8ddcbeb5d0d6"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b0ec17eecd6c6f767b4d4d2cf85b8ddcbeb5d0d6"],"b0ec17eecd6c6f767b4d4d2cf85b8ddcbeb5d0d6":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}