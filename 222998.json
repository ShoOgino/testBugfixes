{"path":"lucene/src/java/org/apache/lucene/index/codecs/sep/SepPostingsReader#docsAndPositions(FieldInfo,BlockTermState,Bits,DocsAndPositionsEnum).mjava","commits":[{"id":"60ba444201d2570214b6fcf1d15600dc1a01f548","date":1313868045,"type":1,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/sep/SepPostingsReader#docsAndPositions(FieldInfo,BlockTermState,Bits,DocsAndPositionsEnum).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/sep/SepPostingsReaderImpl#docsAndPositions(FieldInfo,BlockTermState,Bits,DocsAndPositionsEnum).mjava","sourceNew":"  @Override\n  public DocsAndPositionsEnum docsAndPositions(FieldInfo fieldInfo, BlockTermState _termState, Bits liveDocs, DocsAndPositionsEnum reuse) throws IOException {\n    assert fieldInfo.indexOptions == IndexOptions.DOCS_AND_FREQS_AND_POSITIONS;\n    final SepTermState termState = (SepTermState) _termState;\n    SepDocsAndPositionsEnum postingsEnum;\n    if (reuse == null || !(reuse instanceof SepDocsAndPositionsEnum)) {\n      postingsEnum = new SepDocsAndPositionsEnum();\n    } else {\n      postingsEnum = (SepDocsAndPositionsEnum) reuse;\n      if (postingsEnum.startDocIn != docIn) {\n        // If you are using ParellelReader, and pass in a\n        // reused DocsAndPositionsEnum, it could have come\n        // from another reader also using sep codec\n        postingsEnum = new SepDocsAndPositionsEnum();        \n      }\n    }\n\n    return postingsEnum.init(fieldInfo, termState, liveDocs);\n  }\n\n","sourceOld":"  @Override\n  public DocsAndPositionsEnum docsAndPositions(FieldInfo fieldInfo, BlockTermState _termState, Bits liveDocs, DocsAndPositionsEnum reuse) throws IOException {\n    assert fieldInfo.indexOptions == IndexOptions.DOCS_AND_FREQS_AND_POSITIONS;\n    final SepTermState termState = (SepTermState) _termState;\n    SepDocsAndPositionsEnum postingsEnum;\n    if (reuse == null || !(reuse instanceof SepDocsAndPositionsEnum)) {\n      postingsEnum = new SepDocsAndPositionsEnum();\n    } else {\n      postingsEnum = (SepDocsAndPositionsEnum) reuse;\n      if (postingsEnum.startDocIn != docIn) {\n        // If you are using ParellelReader, and pass in a\n        // reused DocsAndPositionsEnum, it could have come\n        // from another reader also using sep codec\n        postingsEnum = new SepDocsAndPositionsEnum();        \n      }\n    }\n\n    return postingsEnum.init(fieldInfo, termState, liveDocs);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a0ae5e3ed1232483b7b8a014f175a5fe43595982","date":1324062192,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/codecs/sep/SepPostingsReader#docsAndPositions(FieldInfo,BlockTermState,Bits,DocsAndPositionsEnum).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/sep/SepPostingsReader#docsAndPositions(FieldInfo,BlockTermState,Bits,DocsAndPositionsEnum).mjava","sourceNew":"  @Override\n  public DocsAndPositionsEnum docsAndPositions(FieldInfo fieldInfo, BlockTermState _termState, Bits liveDocs, DocsAndPositionsEnum reuse) throws IOException {\n    assert fieldInfo.indexOptions == IndexOptions.DOCS_AND_FREQS_AND_POSITIONS;\n    final SepTermState termState = (SepTermState) _termState;\n    SepDocsAndPositionsEnum postingsEnum;\n    if (reuse == null || !(reuse instanceof SepDocsAndPositionsEnum)) {\n      postingsEnum = new SepDocsAndPositionsEnum();\n    } else {\n      postingsEnum = (SepDocsAndPositionsEnum) reuse;\n      if (postingsEnum.startDocIn != docIn) {\n        // If you are using ParellelReader, and pass in a\n        // reused DocsAndPositionsEnum, it could have come\n        // from another reader also using sep codec\n        postingsEnum = new SepDocsAndPositionsEnum();        \n      }\n    }\n\n    return postingsEnum.init(fieldInfo, termState, liveDocs);\n  }\n\n","sourceOld":"  @Override\n  public DocsAndPositionsEnum docsAndPositions(FieldInfo fieldInfo, BlockTermState _termState, Bits liveDocs, DocsAndPositionsEnum reuse) throws IOException {\n    assert fieldInfo.indexOptions == IndexOptions.DOCS_AND_FREQS_AND_POSITIONS;\n    final SepTermState termState = (SepTermState) _termState;\n    SepDocsAndPositionsEnum postingsEnum;\n    if (reuse == null || !(reuse instanceof SepDocsAndPositionsEnum)) {\n      postingsEnum = new SepDocsAndPositionsEnum();\n    } else {\n      postingsEnum = (SepDocsAndPositionsEnum) reuse;\n      if (postingsEnum.startDocIn != docIn) {\n        // If you are using ParellelReader, and pass in a\n        // reused DocsAndPositionsEnum, it could have come\n        // from another reader also using sep codec\n        postingsEnum = new SepDocsAndPositionsEnum();        \n      }\n    }\n\n    return postingsEnum.init(fieldInfo, termState, liveDocs);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"60ba444201d2570214b6fcf1d15600dc1a01f548":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a0ae5e3ed1232483b7b8a014f175a5fe43595982":["60ba444201d2570214b6fcf1d15600dc1a01f548"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0ae5e3ed1232483b7b8a014f175a5fe43595982"]},"commit2Childs":{"60ba444201d2570214b6fcf1d15600dc1a01f548":["a0ae5e3ed1232483b7b8a014f175a5fe43595982"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["60ba444201d2570214b6fcf1d15600dc1a01f548"],"a0ae5e3ed1232483b7b8a014f175a5fe43595982":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}