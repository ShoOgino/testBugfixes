{"path":"lucene/core/src/java/org/apache/lucene/index/FieldInfos.Builder#add(FieldInfo).mjava","commits":[{"id":"a851824c09818632c94eba41e60ef5e72e323c8e","date":1337355760,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/FieldInfos.Builder#add(FieldInfo).mjava","pathOld":"/dev/null","sourceNew":"    synchronized public FieldInfo add(FieldInfo fi) {\n      // IMPORTANT - reuse the field number if possible for consistent field numbers across segments\n      return addOrUpdateInternal(fi.name, fi.number, fi.isIndexed(), fi.hasVectors(),\n                 fi.omitsNorms(), fi.hasPayloads(),\n                 fi.getIndexOptions(), fi.getDocValuesType(), fi.getNormType());\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"db170c1c8faa054c4e52af9aadc6cd12460af7a9","date":1337357757,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/FieldInfos.Builder#add(FieldInfo).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/FieldInfos.Builder#add(FieldInfo).mjava","sourceNew":"    public FieldInfo add(FieldInfo fi) {\n      // IMPORTANT - reuse the field number if possible for consistent field numbers across segments\n      return addOrUpdateInternal(fi.name, fi.number, fi.isIndexed(), fi.hasVectors(),\n                 fi.omitsNorms(), fi.hasPayloads(),\n                 fi.getIndexOptions(), fi.getDocValuesType(), fi.getNormType());\n    }\n\n","sourceOld":"    synchronized public FieldInfo add(FieldInfo fi) {\n      // IMPORTANT - reuse the field number if possible for consistent field numbers across segments\n      return addOrUpdateInternal(fi.name, fi.number, fi.isIndexed(), fi.hasVectors(),\n                 fi.omitsNorms(), fi.hasPayloads(),\n                 fi.getIndexOptions(), fi.getDocValuesType(), fi.getNormType());\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"615ddbd81799980d0fdd95e0238e1c498b6f47b0","date":1338233290,"type":0,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/FieldInfos.Builder#add(FieldInfo).mjava","pathOld":"/dev/null","sourceNew":"    public FieldInfo add(FieldInfo fi) {\n      // IMPORTANT - reuse the field number if possible for consistent field numbers across segments\n      return addOrUpdateInternal(fi.name, fi.number, fi.isIndexed(), fi.hasVectors(),\n                 fi.omitsNorms(), fi.hasPayloads(),\n                 fi.getIndexOptions(), fi.getDocValuesType(), fi.getNormType());\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"05da2d758a6089e737cdfc230e57a51b472b94b6","date":1413392310,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/FieldInfos.Builder#add(FieldInfo).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/FieldInfos.Builder#add(FieldInfo).mjava","sourceNew":"    public FieldInfo add(FieldInfo fi) {\n      // IMPORTANT - reuse the field number if possible for consistent field numbers across segments\n      return addOrUpdateInternal(fi.name, fi.number, fi.isIndexed(), fi.hasVectors(),\n                 fi.omitsNorms(), fi.hasPayloads(),\n                 fi.getIndexOptions(), fi.getDocValuesType());\n    }\n\n","sourceOld":"    public FieldInfo add(FieldInfo fi) {\n      // IMPORTANT - reuse the field number if possible for consistent field numbers across segments\n      return addOrUpdateInternal(fi.name, fi.number, fi.isIndexed(), fi.hasVectors(),\n                 fi.omitsNorms(), fi.hasPayloads(),\n                 fi.getIndexOptions(), fi.getDocValuesType(), fi.getNormType());\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c93b0dbaa6abe99bc8d1b476bcacc27b324b2b84","date":1413458798,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/FieldInfos.Builder#add(FieldInfo).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/FieldInfos.Builder#add(FieldInfo).mjava","sourceNew":"    public FieldInfo add(FieldInfo fi) {\n      // IMPORTANT - reuse the field number if possible for consistent field numbers across segments\n      return addOrUpdateInternal(fi.name, fi.number, fi.isIndexed(), fi.hasVectors(),\n                 fi.omitsNorms(), fi.hasPayloads(),\n                 fi.getIndexOptions(), fi.getDocValuesType());\n    }\n\n","sourceOld":"    public FieldInfo add(FieldInfo fi) {\n      // IMPORTANT - reuse the field number if possible for consistent field numbers across segments\n      return addOrUpdateInternal(fi.name, fi.number, fi.isIndexed(), fi.hasVectors(),\n                 fi.omitsNorms(), fi.hasPayloads(),\n                 fi.getIndexOptions(), fi.getDocValuesType(), fi.getNormType());\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3184874f7f3aca850248483485b4995343066875","date":1413876758,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/FieldInfos.Builder#add(FieldInfo).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/FieldInfos.Builder#add(FieldInfo).mjava","sourceNew":"    public FieldInfo add(FieldInfo fi) {\n      // IMPORTANT - reuse the field number if possible for consistent field numbers across segments\n      return addOrUpdateInternal(fi.name, fi.number, fi.hasVectors(),\n                 fi.omitsNorms(), fi.hasPayloads(),\n                 fi.getIndexOptions(), fi.getDocValuesType());\n    }\n\n","sourceOld":"    public FieldInfo add(FieldInfo fi) {\n      // IMPORTANT - reuse the field number if possible for consistent field numbers across segments\n      return addOrUpdateInternal(fi.name, fi.number, fi.isIndexed(), fi.hasVectors(),\n                 fi.omitsNorms(), fi.hasPayloads(),\n                 fi.getIndexOptions(), fi.getDocValuesType());\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0a22eafe3f72a4c2945eaad9547e6c78816978f4","date":1413956657,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/FieldInfos.Builder#add(FieldInfo).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/FieldInfos.Builder#add(FieldInfo).mjava","sourceNew":"    public FieldInfo add(FieldInfo fi) {\n      // IMPORTANT - reuse the field number if possible for consistent field numbers across segments\n      return addOrUpdateInternal(fi.name, fi.number, fi.hasVectors(),\n                 fi.omitsNorms(), fi.hasPayloads(),\n                 fi.getIndexOptions(), fi.getDocValuesType());\n    }\n\n","sourceOld":"    public FieldInfo add(FieldInfo fi) {\n      // IMPORTANT - reuse the field number if possible for consistent field numbers across segments\n      return addOrUpdateInternal(fi.name, fi.number, fi.isIndexed(), fi.hasVectors(),\n                 fi.omitsNorms(), fi.hasPayloads(),\n                 fi.getIndexOptions(), fi.getDocValuesType());\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ca792c26af46bd6c4a08d81117c60440cf6a7e3d","date":1445938295,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/FieldInfos.Builder#add(FieldInfo).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/FieldInfos.Builder#add(FieldInfo).mjava","sourceNew":"    public FieldInfo add(FieldInfo fi) {\n      // IMPORTANT - reuse the field number if possible for consistent field numbers across segments\n      return addOrUpdateInternal(fi.name, fi.number, fi.hasVectors(),\n                                 fi.omitsNorms(), fi.hasPayloads(),\n                                 fi.getIndexOptions(), fi.getDocValuesType(),\n                                 fi.getDimensionCount(), fi.getDimensionNumBytes());\n    }\n\n","sourceOld":"    public FieldInfo add(FieldInfo fi) {\n      // IMPORTANT - reuse the field number if possible for consistent field numbers across segments\n      return addOrUpdateInternal(fi.name, fi.number, fi.hasVectors(),\n                 fi.omitsNorms(), fi.hasPayloads(),\n                 fi.getIndexOptions(), fi.getDocValuesType());\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"cab7a79353f33d1a94cd307bf33aa5148601ebe6","date":1453391888,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/FieldInfos.Builder#add(FieldInfo).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/FieldInfos.Builder#add(FieldInfo).mjava","sourceNew":"    public FieldInfo add(FieldInfo fi) {\n      // IMPORTANT - reuse the field number if possible for consistent field numbers across segments\n      return addOrUpdateInternal(fi.name, fi.number, fi.hasVectors(),\n                                 fi.omitsNorms(), fi.hasPayloads(),\n                                 fi.getIndexOptions(), fi.getDocValuesType(),\n                                 fi.getPointDimensionCount(), fi.getPointNumBytes());\n    }\n\n","sourceOld":"    public FieldInfo add(FieldInfo fi) {\n      // IMPORTANT - reuse the field number if possible for consistent field numbers across segments\n      return addOrUpdateInternal(fi.name, fi.number, fi.hasVectors(),\n                                 fi.omitsNorms(), fi.hasPayloads(),\n                                 fi.getIndexOptions(), fi.getDocValuesType(),\n                                 fi.getDimensionCount(), fi.getDimensionNumBytes());\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b213cb4b7b825687d73e7ec995c615eb0cf68305","date":1510236177,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/FieldInfos.Builder#add(FieldInfo).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/FieldInfos.Builder#add(FieldInfo).mjava","sourceNew":"    public FieldInfo add(FieldInfo fi) {\n      return add(fi, -1);\n    }\n\n","sourceOld":"    public FieldInfo add(FieldInfo fi) {\n      // IMPORTANT - reuse the field number if possible for consistent field numbers across segments\n      return addOrUpdateInternal(fi.name, fi.number, fi.hasVectors(),\n                                 fi.omitsNorms(), fi.hasPayloads(),\n                                 fi.getIndexOptions(), fi.getDocValuesType(),\n                                 fi.getPointDimensionCount(), fi.getPointNumBytes());\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"05da2d758a6089e737cdfc230e57a51b472b94b6":["615ddbd81799980d0fdd95e0238e1c498b6f47b0"],"c93b0dbaa6abe99bc8d1b476bcacc27b324b2b84":["615ddbd81799980d0fdd95e0238e1c498b6f47b0","05da2d758a6089e737cdfc230e57a51b472b94b6"],"cab7a79353f33d1a94cd307bf33aa5148601ebe6":["ca792c26af46bd6c4a08d81117c60440cf6a7e3d"],"615ddbd81799980d0fdd95e0238e1c498b6f47b0":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","db170c1c8faa054c4e52af9aadc6cd12460af7a9"],"0a22eafe3f72a4c2945eaad9547e6c78816978f4":["c93b0dbaa6abe99bc8d1b476bcacc27b324b2b84","3184874f7f3aca850248483485b4995343066875"],"b213cb4b7b825687d73e7ec995c615eb0cf68305":["cab7a79353f33d1a94cd307bf33aa5148601ebe6"],"db170c1c8faa054c4e52af9aadc6cd12460af7a9":["a851824c09818632c94eba41e60ef5e72e323c8e"],"ca792c26af46bd6c4a08d81117c60440cf6a7e3d":["3184874f7f3aca850248483485b4995343066875"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a851824c09818632c94eba41e60ef5e72e323c8e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"3184874f7f3aca850248483485b4995343066875":["05da2d758a6089e737cdfc230e57a51b472b94b6"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b213cb4b7b825687d73e7ec995c615eb0cf68305"]},"commit2Childs":{"05da2d758a6089e737cdfc230e57a51b472b94b6":["c93b0dbaa6abe99bc8d1b476bcacc27b324b2b84","3184874f7f3aca850248483485b4995343066875"],"c93b0dbaa6abe99bc8d1b476bcacc27b324b2b84":["0a22eafe3f72a4c2945eaad9547e6c78816978f4"],"615ddbd81799980d0fdd95e0238e1c498b6f47b0":["05da2d758a6089e737cdfc230e57a51b472b94b6","c93b0dbaa6abe99bc8d1b476bcacc27b324b2b84"],"cab7a79353f33d1a94cd307bf33aa5148601ebe6":["b213cb4b7b825687d73e7ec995c615eb0cf68305"],"0a22eafe3f72a4c2945eaad9547e6c78816978f4":[],"b213cb4b7b825687d73e7ec995c615eb0cf68305":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"db170c1c8faa054c4e52af9aadc6cd12460af7a9":["615ddbd81799980d0fdd95e0238e1c498b6f47b0"],"ca792c26af46bd6c4a08d81117c60440cf6a7e3d":["cab7a79353f33d1a94cd307bf33aa5148601ebe6"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["615ddbd81799980d0fdd95e0238e1c498b6f47b0","a851824c09818632c94eba41e60ef5e72e323c8e"],"a851824c09818632c94eba41e60ef5e72e323c8e":["db170c1c8faa054c4e52af9aadc6cd12460af7a9"],"3184874f7f3aca850248483485b4995343066875":["0a22eafe3f72a4c2945eaad9547e6c78816978f4","ca792c26af46bd6c4a08d81117c60440cf6a7e3d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["0a22eafe3f72a4c2945eaad9547e6c78816978f4","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}