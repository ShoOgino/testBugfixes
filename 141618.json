{"path":"src/java/org/apache/lucene/index/DirectoryIndexReader.ReaderCommit#ReaderCommit(SegmentInfos,Directory).mjava","commits":[{"id":"8a1559506fd82ede79bd8e60facef2a57524e175","date":1204808228,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/DirectoryIndexReader.ReaderCommit#ReaderCommit(SegmentInfos,Directory).mjava","pathOld":"/dev/null","sourceNew":"    ReaderCommit(SegmentInfos infos, Directory dir) throws IOException {\n      segmentsFileName = infos.getCurrentSegmentFileName();\n      this.dir = dir;\n      final int size = infos.size();\n      files = new ArrayList(size);\n      files.add(segmentsFileName);\n      for(int i=0;i<size;i++) {\n        SegmentInfo info = infos.info(i);\n        if (info.dir == dir)\n          files.addAll(info.files());\n      }\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["0f44610301174bfb430443d89a88dc1c502feea1"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"59818e85900870556e1bdd604772c77d74f57d89","date":1211972433,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/DirectoryIndexReader.ReaderCommit#ReaderCommit(SegmentInfos,Directory).mjava","pathOld":"src/java/org/apache/lucene/index/DirectoryIndexReader.ReaderCommit#ReaderCommit(SegmentInfos,Directory).mjava","sourceNew":"    ReaderCommit(SegmentInfos infos, Directory dir) throws IOException {\n      segmentsFileName = infos.getCurrentSegmentFileName();\n      this.dir = dir;\n      final int size = infos.size();\n      files = new ArrayList(size);\n      files.add(segmentsFileName);\n      for(int i=0;i<size;i++) {\n        SegmentInfo info = infos.info(i);\n        if (info.dir == dir)\n          files.addAll(info.files());\n      }\n      version = infos.getVersion();\n      generation = infos.getGeneration();\n    }\n\n","sourceOld":"    ReaderCommit(SegmentInfos infos, Directory dir) throws IOException {\n      segmentsFileName = infos.getCurrentSegmentFileName();\n      this.dir = dir;\n      final int size = infos.size();\n      files = new ArrayList(size);\n      files.add(segmentsFileName);\n      for(int i=0;i<size;i++) {\n        SegmentInfo info = infos.info(i);\n        if (info.dir == dir)\n          files.addAll(info.files());\n      }\n    }\n\n","bugFix":null,"bugIntro":["c01638f4dd94981c1d3d52c4f7991246a5a24aba"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"0607932f46aecaff6aa9d5498ef1eac67a64b7d9","date":1215164592,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/DirectoryIndexReader.ReaderCommit#ReaderCommit(SegmentInfos,Directory).mjava","pathOld":"src/java/org/apache/lucene/index/DirectoryIndexReader.ReaderCommit#ReaderCommit(SegmentInfos,Directory).mjava","sourceNew":"    ReaderCommit(SegmentInfos infos, Directory dir) throws IOException {\n      segmentsFileName = infos.getCurrentSegmentFileName();\n      this.dir = dir;\n      final int size = infos.size();\n      files = new ArrayList(size);\n      files.add(segmentsFileName);\n      for(int i=0;i<size;i++) {\n        SegmentInfo info = infos.info(i);\n        if (info.dir == dir)\n          files.addAll(info.files());\n      }\n      version = infos.getVersion();\n      generation = infos.getGeneration();\n      isOptimized = infos.size() == 1 && !infos.info(0).hasDeletions();\n    }\n\n","sourceOld":"    ReaderCommit(SegmentInfos infos, Directory dir) throws IOException {\n      segmentsFileName = infos.getCurrentSegmentFileName();\n      this.dir = dir;\n      final int size = infos.size();\n      files = new ArrayList(size);\n      files.add(segmentsFileName);\n      for(int i=0;i<size;i++) {\n        SegmentInfo info = infos.info(i);\n        if (info.dir == dir)\n          files.addAll(info.files());\n      }\n      version = infos.getVersion();\n      generation = infos.getGeneration();\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"4b1444275c93a8051a6fe6158639467a144ae0a4","date":1224502393,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/DirectoryIndexReader.ReaderCommit#ReaderCommit(SegmentInfos,Directory).mjava","pathOld":"src/java/org/apache/lucene/index/DirectoryIndexReader.ReaderCommit#ReaderCommit(SegmentInfos,Directory).mjava","sourceNew":"    ReaderCommit(SegmentInfos infos, Directory dir) throws IOException {\n      segmentsFileName = infos.getCurrentSegmentFileName();\n      this.dir = dir;\n      final int size = infos.size();\n      userData = infos.getUserData();\n      files = new ArrayList(size);\n      files.add(segmentsFileName);\n      for(int i=0;i<size;i++) {\n        SegmentInfo info = infos.info(i);\n        if (info.dir == dir)\n          files.addAll(info.files());\n      }\n      version = infos.getVersion();\n      generation = infos.getGeneration();\n      isOptimized = infos.size() == 1 && !infos.info(0).hasDeletions();\n    }\n\n","sourceOld":"    ReaderCommit(SegmentInfos infos, Directory dir) throws IOException {\n      segmentsFileName = infos.getCurrentSegmentFileName();\n      this.dir = dir;\n      final int size = infos.size();\n      files = new ArrayList(size);\n      files.add(segmentsFileName);\n      for(int i=0;i<size;i++) {\n        SegmentInfo info = infos.info(i);\n        if (info.dir == dir)\n          files.addAll(info.files());\n      }\n      version = infos.getVersion();\n      generation = infos.getGeneration();\n      isOptimized = infos.size() == 1 && !infos.info(0).hasDeletions();\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"0f44610301174bfb430443d89a88dc1c502feea1","date":1231194664,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/DirectoryIndexReader.ReaderCommit#ReaderCommit(SegmentInfos,Directory).mjava","pathOld":"src/java/org/apache/lucene/index/DirectoryIndexReader.ReaderCommit#ReaderCommit(SegmentInfos,Directory).mjava","sourceNew":"    ReaderCommit(SegmentInfos infos, Directory dir) throws IOException {\n      segmentsFileName = infos.getCurrentSegmentFileName();\n      this.dir = dir;\n      userData = infos.getUserData();\n      files = Collections.unmodifiableCollection(infos.files(dir, true));\n      version = infos.getVersion();\n      generation = infos.getGeneration();\n      isOptimized = infos.size() == 1 && !infos.info(0).hasDeletions();\n    }\n\n","sourceOld":"    ReaderCommit(SegmentInfos infos, Directory dir) throws IOException {\n      segmentsFileName = infos.getCurrentSegmentFileName();\n      this.dir = dir;\n      final int size = infos.size();\n      userData = infos.getUserData();\n      files = new ArrayList(size);\n      files.add(segmentsFileName);\n      for(int i=0;i<size;i++) {\n        SegmentInfo info = infos.info(i);\n        if (info.dir == dir)\n          files.addAll(info.files());\n      }\n      version = infos.getVersion();\n      generation = infos.getGeneration();\n      isOptimized = infos.size() == 1 && !infos.info(0).hasDeletions();\n    }\n\n","bugFix":["8a1559506fd82ede79bd8e60facef2a57524e175"],"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"0f4b0a12e9aa5d9fd24932c99a893fb6a04c74c1","date":1244392278,"type":5,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/DirectoryReader.ReaderCommit#ReaderCommit(SegmentInfos,Directory).mjava","pathOld":"src/java/org/apache/lucene/index/DirectoryIndexReader.ReaderCommit#ReaderCommit(SegmentInfos,Directory).mjava","sourceNew":"    ReaderCommit(SegmentInfos infos, Directory dir) throws IOException {\n      segmentsFileName = infos.getCurrentSegmentFileName();\n      this.dir = dir;\n      userData = infos.getUserData();\n      files = Collections.unmodifiableCollection(infos.files(dir, true));\n      version = infos.getVersion();\n      generation = infos.getGeneration();\n      isOptimized = infos.size() == 1 && !infos.info(0).hasDeletions();\n    }\n\n","sourceOld":"    ReaderCommit(SegmentInfos infos, Directory dir) throws IOException {\n      segmentsFileName = infos.getCurrentSegmentFileName();\n      this.dir = dir;\n      userData = infos.getUserData();\n      files = Collections.unmodifiableCollection(infos.files(dir, true));\n      version = infos.getVersion();\n      generation = infos.getGeneration();\n      isOptimized = infos.size() == 1 && !infos.info(0).hasDeletions();\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"0f4b0a12e9aa5d9fd24932c99a893fb6a04c74c1":["0f44610301174bfb430443d89a88dc1c502feea1"],"0f44610301174bfb430443d89a88dc1c502feea1":["4b1444275c93a8051a6fe6158639467a144ae0a4"],"4b1444275c93a8051a6fe6158639467a144ae0a4":["0607932f46aecaff6aa9d5498ef1eac67a64b7d9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"0607932f46aecaff6aa9d5498ef1eac67a64b7d9":["59818e85900870556e1bdd604772c77d74f57d89"],"59818e85900870556e1bdd604772c77d74f57d89":["8a1559506fd82ede79bd8e60facef2a57524e175"],"8a1559506fd82ede79bd8e60facef2a57524e175":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["0f4b0a12e9aa5d9fd24932c99a893fb6a04c74c1"]},"commit2Childs":{"0f4b0a12e9aa5d9fd24932c99a893fb6a04c74c1":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"0f44610301174bfb430443d89a88dc1c502feea1":["0f4b0a12e9aa5d9fd24932c99a893fb6a04c74c1"],"4b1444275c93a8051a6fe6158639467a144ae0a4":["0f44610301174bfb430443d89a88dc1c502feea1"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["8a1559506fd82ede79bd8e60facef2a57524e175"],"0607932f46aecaff6aa9d5498ef1eac67a64b7d9":["4b1444275c93a8051a6fe6158639467a144ae0a4"],"59818e85900870556e1bdd604772c77d74f57d89":["0607932f46aecaff6aa9d5498ef1eac67a64b7d9"],"8a1559506fd82ede79bd8e60facef2a57524e175":["59818e85900870556e1bdd604772c77d74f57d89"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}