{"path":"solr/solrj/src/java/org/apache/solr/common/util/JavaBinCodec#readMapEntry(DataInputInputStream).mjava","commits":[{"id":"ab8657e27d6bdd6107b9d64da71c635e1f47b59e","date":1390524786,"type":0,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/common/util/JavaBinCodec#readMapEntry(DataInputInputStream).mjava","pathOld":"/dev/null","sourceNew":"  public Map.Entry<Object,Object> readMapEntry(DataInputInputStream dis) throws IOException {\n    final Object key = readVal(dis);\n    final Object value = readVal(dis);\n    return new Map.Entry<Object,Object>() {\n\n      @Override\n      public Object getKey() {\n        return key;\n      }\n\n      @Override\n      public Object getValue() {\n        return value;\n      }\n      \n      @Override\n      public String toString() {\n        return \"MapEntry[\" + key.toString() + \":\" + value.toString() + \"]\";\n      }\n\n      @Override\n      public Object setValue(Object value) {\n        throw new UnsupportedOperationException();\n      }};\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f4cdb4d252303817a657f62a39d7a8ca669abc2a","date":1394456576,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/common/util/JavaBinCodec#readMapEntry(DataInputInputStream).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/common/util/JavaBinCodec#readMapEntry(DataInputInputStream).mjava","sourceNew":"  public Map.Entry<Object,Object> readMapEntry(DataInputInputStream dis) throws IOException {\n    final Object key = readVal(dis);\n    final Object value = readVal(dis);\n    //return new AbstractMap.SimpleImmutableEntry(key, value);\n    return new Map.Entry<Object,Object>() {\n\n      @Override\n      public Object getKey() {\n        return key;\n      }\n\n      @Override\n      public Object getValue() {\n        return value;\n      }\n\n      @Override\n      public String toString() {\n        return \"MapEntry[\" + key.toString() + \":\" + value.toString() + \"]\";\n      }\n\n      @Override\n      public Object setValue(Object value) {\n        throw new UnsupportedOperationException();\n      }\n\n      @Override\n      public int hashCode() {\n        int result = 31;\n        result *=31 + getKey().hashCode();\n        result *=31 + getValue().hashCode();\n        return result;\n      }\n\n      @Override\n      public boolean equals(Object obj) {\n        if(this == obj) {\n          return true;\n        }\n        if(!(obj instanceof Entry)) {\n          return false;\n        }\n        Map.Entry<Object, Object> entry = (Entry<Object, Object>) obj;\n        return (this.getKey().equals(entry.getKey()) && this.getValue().equals(entry.getValue()));\n      }\n    };\n  }\n\n","sourceOld":"  public Map.Entry<Object,Object> readMapEntry(DataInputInputStream dis) throws IOException {\n    final Object key = readVal(dis);\n    final Object value = readVal(dis);\n    return new Map.Entry<Object,Object>() {\n\n      @Override\n      public Object getKey() {\n        return key;\n      }\n\n      @Override\n      public Object getValue() {\n        return value;\n      }\n      \n      @Override\n      public String toString() {\n        return \"MapEntry[\" + key.toString() + \":\" + value.toString() + \"]\";\n      }\n\n      @Override\n      public Object setValue(Object value) {\n        throw new UnsupportedOperationException();\n      }};\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0146597a1c108e2e637e97237e4619e0e5ba2aef","date":1394471404,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/common/util/JavaBinCodec#readMapEntry(DataInputInputStream).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/common/util/JavaBinCodec#readMapEntry(DataInputInputStream).mjava","sourceNew":"  public Map.Entry<Object,Object> readMapEntry(DataInputInputStream dis) throws IOException {\n    final Object key = readVal(dis);\n    final Object value = readVal(dis);\n    return new Map.Entry<Object,Object>() {\n\n      @Override\n      public Object getKey() {\n        return key;\n      }\n\n      @Override\n      public Object getValue() {\n        return value;\n      }\n\n      @Override\n      public String toString() {\n        return \"MapEntry[\" + key.toString() + \":\" + value.toString() + \"]\";\n      }\n\n      @Override\n      public Object setValue(Object value) {\n        throw new UnsupportedOperationException();\n      }\n\n      @Override\n      public int hashCode() {\n        int result = 31;\n        result *=31 + getKey().hashCode();\n        result *=31 + getValue().hashCode();\n        return result;\n      }\n\n      @Override\n      public boolean equals(Object obj) {\n        if(this == obj) {\n          return true;\n        }\n        if(!(obj instanceof Entry)) {\n          return false;\n        }\n        Map.Entry<Object, Object> entry = (Entry<Object, Object>) obj;\n        return (this.getKey().equals(entry.getKey()) && this.getValue().equals(entry.getValue()));\n      }\n    };\n  }\n\n","sourceOld":"  public Map.Entry<Object,Object> readMapEntry(DataInputInputStream dis) throws IOException {\n    final Object key = readVal(dis);\n    final Object value = readVal(dis);\n    //return new AbstractMap.SimpleImmutableEntry(key, value);\n    return new Map.Entry<Object,Object>() {\n\n      @Override\n      public Object getKey() {\n        return key;\n      }\n\n      @Override\n      public Object getValue() {\n        return value;\n      }\n\n      @Override\n      public String toString() {\n        return \"MapEntry[\" + key.toString() + \":\" + value.toString() + \"]\";\n      }\n\n      @Override\n      public Object setValue(Object value) {\n        throw new UnsupportedOperationException();\n      }\n\n      @Override\n      public int hashCode() {\n        int result = 31;\n        result *=31 + getKey().hashCode();\n        result *=31 + getValue().hashCode();\n        return result;\n      }\n\n      @Override\n      public boolean equals(Object obj) {\n        if(this == obj) {\n          return true;\n        }\n        if(!(obj instanceof Entry)) {\n          return false;\n        }\n        Map.Entry<Object, Object> entry = (Entry<Object, Object>) obj;\n        return (this.getKey().equals(entry.getKey()) && this.getValue().equals(entry.getValue()));\n      }\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a58bbbe1c866963764d3f15d3a26a6a85f6c6af4","date":1394564625,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"solr/solrj/src/java/org/apache/solr/common/util/JavaBinCodec#readMapEntry(DataInputInputStream).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/common/util/JavaBinCodec#readMapEntry(DataInputInputStream).mjava","sourceNew":"  public Map.Entry<Object,Object> readMapEntry(DataInputInputStream dis) throws IOException {\n    final Object key = readVal(dis);\n    final Object value = readVal(dis);\n    return new Map.Entry<Object,Object>() {\n\n      @Override\n      public Object getKey() {\n        return key;\n      }\n\n      @Override\n      public Object getValue() {\n        return value;\n      }\n\n      @Override\n      public String toString() {\n        return \"MapEntry[\" + key.toString() + \":\" + value.toString() + \"]\";\n      }\n\n      @Override\n      public Object setValue(Object value) {\n        throw new UnsupportedOperationException();\n      }\n\n      @Override\n      public int hashCode() {\n        int result = 31;\n        result *=31 + getKey().hashCode();\n        result *=31 + getValue().hashCode();\n        return result;\n      }\n\n      @Override\n      public boolean equals(Object obj) {\n        if(this == obj) {\n          return true;\n        }\n        if(!(obj instanceof Entry)) {\n          return false;\n        }\n        Map.Entry<Object, Object> entry = (Entry<Object, Object>) obj;\n        return (this.getKey().equals(entry.getKey()) && this.getValue().equals(entry.getValue()));\n      }\n    };\n  }\n\n","sourceOld":"  public Map.Entry<Object,Object> readMapEntry(DataInputInputStream dis) throws IOException {\n    final Object key = readVal(dis);\n    final Object value = readVal(dis);\n    return new Map.Entry<Object,Object>() {\n\n      @Override\n      public Object getKey() {\n        return key;\n      }\n\n      @Override\n      public Object getValue() {\n        return value;\n      }\n      \n      @Override\n      public String toString() {\n        return \"MapEntry[\" + key.toString() + \":\" + value.toString() + \"]\";\n      }\n\n      @Override\n      public Object setValue(Object value) {\n        throw new UnsupportedOperationException();\n      }};\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7749d6fa52f4781f8f7488f2bd18b0fbb5959d0b","date":1432083803,"type":3,"author":"Timothy Potter","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/common/util/JavaBinCodec#readMapEntry(DataInputInputStream).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/common/util/JavaBinCodec#readMapEntry(DataInputInputStream).mjava","sourceNew":"  public Map.Entry<Object,Object> readMapEntry(DataInputInputStream dis) throws IOException {\n    final Object key = readVal(dis);\n    final Object value = readVal(dis);\n    return new Map.Entry<Object,Object>() {\n\n      @Override\n      public Object getKey() {\n        return key;\n      }\n\n      @Override\n      public Object getValue() {\n        return value;\n      }\n\n      @Override\n      public String toString() {\n        return \"MapEntry[\" + key + \":\" + value + \"]\";\n      }\n\n      @Override\n      public Object setValue(Object value) {\n        throw new UnsupportedOperationException();\n      }\n\n      @Override\n      public int hashCode() {\n        int result = 31;\n        result *=31 + getKey().hashCode();\n        result *=31 + getValue().hashCode();\n        return result;\n      }\n\n      @Override\n      public boolean equals(Object obj) {\n        if(this == obj) {\n          return true;\n        }\n        if(!(obj instanceof Entry)) {\n          return false;\n        }\n        Map.Entry<Object, Object> entry = (Entry<Object, Object>) obj;\n        return (this.getKey().equals(entry.getKey()) && this.getValue().equals(entry.getValue()));\n      }\n    };\n  }\n\n","sourceOld":"  public Map.Entry<Object,Object> readMapEntry(DataInputInputStream dis) throws IOException {\n    final Object key = readVal(dis);\n    final Object value = readVal(dis);\n    return new Map.Entry<Object,Object>() {\n\n      @Override\n      public Object getKey() {\n        return key;\n      }\n\n      @Override\n      public Object getValue() {\n        return value;\n      }\n\n      @Override\n      public String toString() {\n        return \"MapEntry[\" + key.toString() + \":\" + value.toString() + \"]\";\n      }\n\n      @Override\n      public Object setValue(Object value) {\n        throw new UnsupportedOperationException();\n      }\n\n      @Override\n      public int hashCode() {\n        int result = 31;\n        result *=31 + getKey().hashCode();\n        result *=31 + getValue().hashCode();\n        return result;\n      }\n\n      @Override\n      public boolean equals(Object obj) {\n        if(this == obj) {\n          return true;\n        }\n        if(!(obj instanceof Entry)) {\n          return false;\n        }\n        Map.Entry<Object, Object> entry = (Entry<Object, Object>) obj;\n        return (this.getKey().equals(entry.getKey()) && this.getValue().equals(entry.getValue()));\n      }\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7497784107a97f549e9503ad420ec9354f7178b2","date":1584032101,"type":3,"author":"Aroop","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/common/util/JavaBinCodec#readMapEntry(DataInputInputStream).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/common/util/JavaBinCodec#readMapEntry(DataInputInputStream).mjava","sourceNew":"  public Map.Entry<Object,Object> readMapEntry(DataInputInputStream dis) throws IOException {\n    final Object key = readVal(dis);\n    final Object value = readVal(dis);\n    return new Map.Entry<Object,Object>() {\n\n      @Override\n      public Object getKey() {\n        return key;\n      }\n\n      @Override\n      public Object getValue() {\n        return value;\n      }\n\n      @Override\n      public String toString() {\n        return \"MapEntry[\" + key + \":\" + value + \"]\";\n      }\n\n      @Override\n      public Object setValue(Object value) {\n        throw new UnsupportedOperationException();\n      }\n\n      @Override\n      public int hashCode() {\n        int result = 31;\n        result *=31 + getKey().hashCode();\n        result *=31 + getValue().hashCode();\n        return result;\n      }\n\n      @Override\n      public boolean equals(Object obj) {\n        if(this == obj) {\n          return true;\n        }\n        if (obj instanceof Map.Entry<?, ?>) {\n          Entry<?, ?> entry = (Entry<?, ?>) obj;\n          return (this.getKey().equals(entry.getKey()) && this.getValue().equals(entry.getValue()));\n        }\n        return false;\n      }\n    };\n  }\n\n","sourceOld":"  public Map.Entry<Object,Object> readMapEntry(DataInputInputStream dis) throws IOException {\n    final Object key = readVal(dis);\n    final Object value = readVal(dis);\n    return new Map.Entry<Object,Object>() {\n\n      @Override\n      public Object getKey() {\n        return key;\n      }\n\n      @Override\n      public Object getValue() {\n        return value;\n      }\n\n      @Override\n      public String toString() {\n        return \"MapEntry[\" + key + \":\" + value + \"]\";\n      }\n\n      @Override\n      public Object setValue(Object value) {\n        throw new UnsupportedOperationException();\n      }\n\n      @Override\n      public int hashCode() {\n        int result = 31;\n        result *=31 + getKey().hashCode();\n        result *=31 + getValue().hashCode();\n        return result;\n      }\n\n      @Override\n      public boolean equals(Object obj) {\n        if(this == obj) {\n          return true;\n        }\n        if(!(obj instanceof Entry)) {\n          return false;\n        }\n        Map.Entry<Object, Object> entry = (Entry<Object, Object>) obj;\n        return (this.getKey().equals(entry.getKey()) && this.getValue().equals(entry.getValue()));\n      }\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"7497784107a97f549e9503ad420ec9354f7178b2":["7749d6fa52f4781f8f7488f2bd18b0fbb5959d0b"],"ab8657e27d6bdd6107b9d64da71c635e1f47b59e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"7749d6fa52f4781f8f7488f2bd18b0fbb5959d0b":["0146597a1c108e2e637e97237e4619e0e5ba2aef"],"a58bbbe1c866963764d3f15d3a26a6a85f6c6af4":["ab8657e27d6bdd6107b9d64da71c635e1f47b59e","0146597a1c108e2e637e97237e4619e0e5ba2aef"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"0146597a1c108e2e637e97237e4619e0e5ba2aef":["f4cdb4d252303817a657f62a39d7a8ca669abc2a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["7497784107a97f549e9503ad420ec9354f7178b2"],"f4cdb4d252303817a657f62a39d7a8ca669abc2a":["ab8657e27d6bdd6107b9d64da71c635e1f47b59e"]},"commit2Childs":{"7497784107a97f549e9503ad420ec9354f7178b2":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"ab8657e27d6bdd6107b9d64da71c635e1f47b59e":["a58bbbe1c866963764d3f15d3a26a6a85f6c6af4","f4cdb4d252303817a657f62a39d7a8ca669abc2a"],"7749d6fa52f4781f8f7488f2bd18b0fbb5959d0b":["7497784107a97f549e9503ad420ec9354f7178b2"],"a58bbbe1c866963764d3f15d3a26a6a85f6c6af4":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["ab8657e27d6bdd6107b9d64da71c635e1f47b59e"],"0146597a1c108e2e637e97237e4619e0e5ba2aef":["7749d6fa52f4781f8f7488f2bd18b0fbb5959d0b","a58bbbe1c866963764d3f15d3a26a6a85f6c6af4"],"f4cdb4d252303817a657f62a39d7a8ca669abc2a":["0146597a1c108e2e637e97237e4619e0e5ba2aef"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a58bbbe1c866963764d3f15d3a26a6a85f6c6af4","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}