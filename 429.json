{"path":"dev-tools/missing-doclet/src/main/java/org/apache/lucene/missingdoclet/MissingDoclet#checkComment(Element).mjava","commits":[{"id":"0818fc555aefcb0330785d4ad1c1487980a0b04b","date":1599049757,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"dev-tools/missing-doclet/src/main/java/org/apache/lucene/missingdoclet/MissingDoclet#checkComment(Element).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Checks that an element doesn't have missing javadocs.\n   * In addition to truly \"missing\", check that comments aren't solely whitespace (generated by some IDEs),\n   * that they aren't a license header masquerading as a javadoc comment.\n   */\n  private void checkComment(Element element) {\n    // sanity check that the element is really \"included\", because we do some recursion into types\n    if (!docEnv.isIncluded(element)) {\n      return;\n    }\n    // check that this element isn't on our ignore list. This is only used as a workaround for \"split packages\".\n    // ignoring a package isn't recursive (on purpose), we still check all the classes, etc. inside it.\n    // we just need to cope with the fact package-info.java isn't there because it is split across multiple jars.\n    if (ignored.contains(element.toString())) {\n      return;\n    }\n    var tree = docTrees.getDocCommentTree(element);\n    if (tree == null || tree.getFirstSentence().isEmpty()) {\n      // Check for methods that override other stuff and perhaps inherit their Javadocs.\n      if (hasInheritedJavadocs(element)) {\n        return;\n      } else {\n        error(element, \"javadocs are missing\");\n      }\n    } else {\n      var normalized = tree.getFirstSentence().get(0).toString()\n                       .replace('\\u00A0', ' ')\n                       .trim()\n                       .toLowerCase(Locale.ROOT);\n      if (normalized.isEmpty()) {\n        error(element, \"blank javadoc comment\");\n      } else if (normalized.startsWith(\"licensed to the apache software foundation\") ||\n                 normalized.startsWith(\"copyright 2004 the apache software foundation\")) {\n        error(element, \"comment is really a license\");\n      }\n    }\n    if (level >= PARAMETER) {\n      checkParameters(element, tree);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"0818fc555aefcb0330785d4ad1c1487980a0b04b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["0818fc555aefcb0330785d4ad1c1487980a0b04b"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["0818fc555aefcb0330785d4ad1c1487980a0b04b"],"0818fc555aefcb0330785d4ad1c1487980a0b04b":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}