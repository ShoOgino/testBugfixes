{"path":"lucene/core/src/test/org/apache/lucene/search/spans/TestSpanSearchEquivalence#testSpanWithinVsContaining().mjava","commits":[{"id":"80ff50a565777c812ef7871453d715713fb6fb9c","date":1430307731,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/spans/TestSpanSearchEquivalence#testSpanWithinVsContaining().mjava","pathOld":"/dev/null","sourceNew":"  /** SpanWithinQuery(A, B) = SpanContainingQuery(A, B) */\n  public void testSpanWithinVsContaining() throws Exception {\n    Term t1 = randomTerm();\n    Term t2 = randomTerm();\n    SpanQuery subquery[] = new SpanQuery[] { \n        spanQuery(new SpanTermQuery(t1)), \n        spanQuery(new SpanTermQuery(t2)) \n      };\n    SpanQuery nearQuery = spanQuery(new SpanNearQuery(subquery, 10, true));\n    \n    Term t3 = randomTerm();\n    SpanQuery termQuery = spanQuery(new SpanTermQuery(t3));\n    Query q1 = spanQuery(new SpanWithinQuery(nearQuery, termQuery));\n    Query q2 = spanQuery(new SpanContainingQuery(nearQuery, termQuery));\n    assertSameSet(q1, q2);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"80ff50a565777c812ef7871453d715713fb6fb9c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["80ff50a565777c812ef7871453d715713fb6fb9c"]},"commit2Childs":{"80ff50a565777c812ef7871453d715713fb6fb9c":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["80ff50a565777c812ef7871453d715713fb6fb9c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}