{"path":"lucene/src/test/org/apache/lucene/index/TestStressIndexing2#verifyEquals(Random,IndexReader,Directory,String).mjava","commits":[{"id":"24b91b08ba3110a0904b8ba9803276bf9a9b5f6d","date":1279972526,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestStressIndexing2#verifyEquals(Random,IndexReader,Directory,String).mjava","pathOld":"/dev/null","sourceNew":"  public static void verifyEquals(Random r, IndexReader r1, Directory dir2, String idField) throws Throwable {\n    // When we're testing w/ PreFlex codec, we must open\n    // this reader with UTF16 terms since incoming NRT\n    // reader is sorted this way:\n    IndexReader r2 = IndexReader.open(dir2, null, true, _TestUtil.nextInt(r, 1, 3), _TestUtil.alwaysCodec(new PreFlexRWCodec(\"utf16\")));\n    verifyEquals(r1, r2, idField);\n    r2.close();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"399a364d374f2132b6d9ff9fd7f997a9f2ef734f","date":1279978822,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestStressIndexing2#verifyEquals(Random,IndexReader,Directory,String).mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestStressIndexing2#verifyEquals(Random,IndexReader,Directory,String).mjava","sourceNew":"  public static void verifyEquals(Random r, IndexReader r1, Directory dir2, String idField) throws Throwable {\n    IndexReader r2 = IndexReader.open(dir2);\n    verifyEquals(r1, r2, idField);\n    r2.close();\n  }\n\n","sourceOld":"  public static void verifyEquals(Random r, IndexReader r1, Directory dir2, String idField) throws Throwable {\n    // When we're testing w/ PreFlex codec, we must open\n    // this reader with UTF16 terms since incoming NRT\n    // reader is sorted this way:\n    IndexReader r2 = IndexReader.open(dir2, null, true, _TestUtil.nextInt(r, 1, 3), _TestUtil.alwaysCodec(new PreFlexRWCodec(\"utf16\")));\n    verifyEquals(r1, r2, idField);\n    r2.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4b103252dee6afa1b6d7a622c773d178788eb85a","date":1280180143,"type":0,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestStressIndexing2#verifyEquals(Random,IndexReader,Directory,String).mjava","pathOld":"/dev/null","sourceNew":"  public static void verifyEquals(Random r, IndexReader r1, Directory dir2, String idField) throws Throwable {\n    IndexReader r2 = IndexReader.open(dir2);\n    verifyEquals(r1, r2, idField);\n    r2.close();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3242a09f703274d3b9283f2064a1a33064b53a1b","date":1280263474,"type":0,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestStressIndexing2#verifyEquals(Random,IndexReader,Directory,String).mjava","pathOld":"/dev/null","sourceNew":"  public static void verifyEquals(Random r, IndexReader r1, Directory dir2, String idField) throws Throwable {\n    IndexReader r2 = IndexReader.open(dir2);\n    verifyEquals(r1, r2, idField);\n    r2.close();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"913fa4c710b6d1168655966e59f0f4de566907a8","date":1327858476,"type":4,"author":"Robert Muir","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/src/test/org/apache/lucene/index/TestStressIndexing2#verifyEquals(Random,IndexReader,Directory,String).mjava","sourceNew":null,"sourceOld":"  public static void verifyEquals(Random r, IndexReader r1, Directory dir2, String idField) throws Throwable {\n    IndexReader r2 = IndexReader.open(dir2);\n    verifyEquals(r1, r2, idField);\n    r2.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5cab9a86bd67202d20b6adc463008c8e982b070a","date":1327966443,"type":4,"author":"Uwe Schindler","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/src/test/org/apache/lucene/index/TestStressIndexing2#verifyEquals(Random,IndexReader,Directory,String).mjava","sourceNew":null,"sourceOld":"  public static void verifyEquals(Random r, IndexReader r1, Directory dir2, String idField) throws Throwable {\n    IndexReader r2 = IndexReader.open(dir2);\n    verifyEquals(r1, r2, idField);\n    r2.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3242a09f703274d3b9283f2064a1a33064b53a1b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","4b103252dee6afa1b6d7a622c773d178788eb85a"],"4b103252dee6afa1b6d7a622c773d178788eb85a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","399a364d374f2132b6d9ff9fd7f997a9f2ef734f"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"399a364d374f2132b6d9ff9fd7f997a9f2ef734f":["24b91b08ba3110a0904b8ba9803276bf9a9b5f6d"],"913fa4c710b6d1168655966e59f0f4de566907a8":["4b103252dee6afa1b6d7a622c773d178788eb85a"],"5cab9a86bd67202d20b6adc463008c8e982b070a":["4b103252dee6afa1b6d7a622c773d178788eb85a","913fa4c710b6d1168655966e59f0f4de566907a8"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["5cab9a86bd67202d20b6adc463008c8e982b070a"],"24b91b08ba3110a0904b8ba9803276bf9a9b5f6d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"3242a09f703274d3b9283f2064a1a33064b53a1b":[],"4b103252dee6afa1b6d7a622c773d178788eb85a":["3242a09f703274d3b9283f2064a1a33064b53a1b","913fa4c710b6d1168655966e59f0f4de566907a8","5cab9a86bd67202d20b6adc463008c8e982b070a"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3242a09f703274d3b9283f2064a1a33064b53a1b","4b103252dee6afa1b6d7a622c773d178788eb85a","24b91b08ba3110a0904b8ba9803276bf9a9b5f6d"],"399a364d374f2132b6d9ff9fd7f997a9f2ef734f":["4b103252dee6afa1b6d7a622c773d178788eb85a"],"913fa4c710b6d1168655966e59f0f4de566907a8":["5cab9a86bd67202d20b6adc463008c8e982b070a"],"5cab9a86bd67202d20b6adc463008c8e982b070a":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"24b91b08ba3110a0904b8ba9803276bf9a9b5f6d":["399a364d374f2132b6d9ff9fd7f997a9f2ef734f"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["3242a09f703274d3b9283f2064a1a33064b53a1b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}