{"path":"solr/core/src/java/org/apache/solr/handler/admin/CoreAdminHandler#checkIfCoreNodeNameAlreadyExists(CoreDescriptor).mjava","commits":[{"id":"0ad7bdba3e91cf3373cda2e52239cb761fc0b452","date":1408019547,"type":0,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/admin/CoreAdminHandler#checkIfCoreNodeNameAlreadyExists(CoreDescriptor).mjava","pathOld":"/dev/null","sourceNew":"  private boolean checkIfCoreNodeNameAlreadyExists(CoreDescriptor dcore) {\n    ZkStateReader zkStateReader = coreContainer.getZkController()\n        .getZkStateReader();\n    DocCollection collection = zkStateReader.getClusterState().getCollectionOrNull(dcore.getCollectionName());\n    if (collection != null) {\n      Collection<Slice> slices = collection.getSlices();\n      \n      for (Slice slice : slices) {\n        Collection<Replica> replicas = slice.getReplicas();\n        for (Replica replica : replicas) {\n          if (replica.getName().equals(\n              dcore.getCloudDescriptor().getCoreNodeName())) {\n            return true;\n          }\n        }\n      }\n    }\n    return false;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"11d8a050b7d5f98040f790d32ec1cfd2fc3490e3","date":1448892165,"type":5,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/ZkController#checkIfCoreNodeNameAlreadyExists(CoreDescriptor).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/admin/CoreAdminHandler#checkIfCoreNodeNameAlreadyExists(CoreDescriptor).mjava","sourceNew":"  public boolean checkIfCoreNodeNameAlreadyExists(CoreDescriptor dcore) {\n    DocCollection collection = zkStateReader.getClusterState().getCollectionOrNull(dcore.getCollectionName());\n    if (collection != null) {\n      Collection<Slice> slices = collection.getSlices();\n\n      for (Slice slice : slices) {\n        Collection<Replica> replicas = slice.getReplicas();\n        for (Replica replica : replicas) {\n          if (replica.getName().equals(\n              dcore.getCloudDescriptor().getCoreNodeName())) {\n            return true;\n          }\n        }\n      }\n    }\n    return false;\n  }\n\n","sourceOld":"  private boolean checkIfCoreNodeNameAlreadyExists(CoreDescriptor dcore) {\n    ZkStateReader zkStateReader = coreContainer.getZkController()\n        .getZkStateReader();\n    DocCollection collection = zkStateReader.getClusterState().getCollectionOrNull(dcore.getCollectionName());\n    if (collection != null) {\n      Collection<Slice> slices = collection.getSlices();\n      \n      for (Slice slice : slices) {\n        Collection<Replica> replicas = slice.getReplicas();\n        for (Replica replica : replicas) {\n          if (replica.getName().equals(\n              dcore.getCloudDescriptor().getCoreNodeName())) {\n            return true;\n          }\n        }\n      }\n    }\n    return false;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"11d8a050b7d5f98040f790d32ec1cfd2fc3490e3":["0ad7bdba3e91cf3373cda2e52239cb761fc0b452"],"0ad7bdba3e91cf3373cda2e52239cb761fc0b452":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["11d8a050b7d5f98040f790d32ec1cfd2fc3490e3"]},"commit2Childs":{"11d8a050b7d5f98040f790d32ec1cfd2fc3490e3":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"0ad7bdba3e91cf3373cda2e52239cb761fc0b452":["11d8a050b7d5f98040f790d32ec1cfd2fc3490e3"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["0ad7bdba3e91cf3373cda2e52239cb761fc0b452"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}