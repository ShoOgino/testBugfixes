{"path":"src/java/org/apache/solr/util/TestHarness#update(String).mjava","commits":[{"id":"f66f1826f07774581d2ec661444fc987bdd1a85d","date":1144730206,"type":0,"author":"Chris M. Hostetter","isMerge":false,"pathNew":"src/java/org/apache/solr/util/TestHarness#update(String).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Processes an \"update\" (add, commit or optimize) and\n   * returns the response as a String.\n   *\n   * @param xml The XML of the update\n   * @return The XML response to the update\n   */\n  public String update(String xml) {\n                \n    StringReader req = new StringReader(xml);\n    StringWriter writer = new StringWriter(32000);\n    core.update(req, writer);\n    return writer.toString();\n                \n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d80013b5e260def972025c93a0b08524f9c38f49","date":1170102801,"type":3,"author":"Chris M. Hostetter","isMerge":false,"pathNew":"src/java/org/apache/solr/util/TestHarness#update(String).mjava","pathOld":"src/java/org/apache/solr/util/TestHarness#update(String).mjava","sourceNew":"  /**\n   * Processes an \"update\" (add, commit or optimize) and\n   * returns the response as a String.\n   * \n   * The better approach is to instanciate a Updatehandler directly\n   *\n   * @param xml The XML of the update\n   * @return The XML response to the update\n   */\n  @Deprecated\n  public String update(String xml) {\n                \n    StringReader req = new StringReader(xml);\n    StringWriter writer = new StringWriter(32000);\n    \n    updater.doLegacyUpdate(req, writer);\n    \n    return writer.toString();\n  }\n\n","sourceOld":"  /**\n   * Processes an \"update\" (add, commit or optimize) and\n   * returns the response as a String.\n   *\n   * @param xml The XML of the update\n   * @return The XML response to the update\n   */\n  public String update(String xml) {\n                \n    StringReader req = new StringReader(xml);\n    StringWriter writer = new StringWriter(32000);\n    core.update(req, writer);\n    return writer.toString();\n                \n  }\n\n","bugFix":null,"bugIntro":["c28792ff7d1774c306e16afbd44ded91a417049b"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"ee4f075a5b1a77c2fb5eb752bdedabf6497aaf9b","date":1182321983,"type":3,"author":"Ryan McKinley","isMerge":false,"pathNew":"src/java/org/apache/solr/util/TestHarness#update(String).mjava","pathOld":"src/java/org/apache/solr/util/TestHarness#update(String).mjava","sourceNew":"  /**\n   * Processes an \"update\" (add, commit or optimize) and\n   * returns the response as a String.\n   * \n   * The better approach is to instanciate a Updatehandler directly\n   *\n   * @param xml The XML of the update\n   * @return The XML response to the update\n   */\n  @Deprecated\n  public String update(String xml) {\n                \n    StringReader req = new StringReader(xml);\n    StringWriter writer = new StringWriter(32000);\n    \n    updater.doLegacyUpdate(req, writer);\n    return writer.toString();\n  }\n\n","sourceOld":"  /**\n   * Processes an \"update\" (add, commit or optimize) and\n   * returns the response as a String.\n   * \n   * The better approach is to instanciate a Updatehandler directly\n   *\n   * @param xml The XML of the update\n   * @return The XML response to the update\n   */\n  @Deprecated\n  public String update(String xml) {\n                \n    StringReader req = new StringReader(xml);\n    StringWriter writer = new StringWriter(32000);\n    \n    updater.doLegacyUpdate(req, writer);\n    \n    return writer.toString();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"6d6338c87060be5f66757a94945975f3bbd377a9","date":1189278234,"type":3,"author":"Ryan McKinley","isMerge":false,"pathNew":"src/java/org/apache/solr/util/TestHarness#update(String).mjava","pathOld":"src/java/org/apache/solr/util/TestHarness#update(String).mjava","sourceNew":"  /**\n   * Processes an \"update\" (add, commit or optimize) and\n   * returns the response as a String.\n   * \n   * The better approach is to instanciate a Updatehandler directly\n   *\n   * @param xml The XML of the update\n   * @return The XML response to the update\n   */\n  @Deprecated\n  public String update(String xml) {\n                \n    StringReader req = new StringReader(xml);\n    StringWriter writer = new StringWriter(32000);\n    \n    updater.doLegacyUpdate(core, req, writer);\n    return writer.toString();\n  }\n\n","sourceOld":"  /**\n   * Processes an \"update\" (add, commit or optimize) and\n   * returns the response as a String.\n   * \n   * The better approach is to instanciate a Updatehandler directly\n   *\n   * @param xml The XML of the update\n   * @return The XML response to the update\n   */\n  @Deprecated\n  public String update(String xml) {\n                \n    StringReader req = new StringReader(xml);\n    StringWriter writer = new StringWriter(32000);\n    \n    updater.doLegacyUpdate(req, writer);\n    return writer.toString();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"abbfb3ad1f90df8ebf4751c8e72b2756ace50699","date":1190497478,"type":3,"author":"Ryan McKinley","isMerge":false,"pathNew":"src/java/org/apache/solr/util/TestHarness#update(String).mjava","pathOld":"src/java/org/apache/solr/util/TestHarness#update(String).mjava","sourceNew":"  /**\n   * Processes an \"update\" (add, commit or optimize) and\n   * returns the response as a String.\n   * \n   * The better approach is to instanciate a Updatehandler directly\n   *\n   * @param xml The XML of the update\n   * @return The XML response to the update\n   */\n  @Deprecated\n  public String update(String xml) {\n                \n    StringReader req = new StringReader(xml);\n    StringWriter writer = new StringWriter(32000);\n    \n    // This relies on the fact that SolrCore.getSolrCore() uses the \n    // last instantiated SolrCore.\n    updater.doLegacyUpdate(req, writer);\n    return writer.toString();\n  }\n\n","sourceOld":"  /**\n   * Processes an \"update\" (add, commit or optimize) and\n   * returns the response as a String.\n   * \n   * The better approach is to instanciate a Updatehandler directly\n   *\n   * @param xml The XML of the update\n   * @return The XML response to the update\n   */\n  @Deprecated\n  public String update(String xml) {\n                \n    StringReader req = new StringReader(xml);\n    StringWriter writer = new StringWriter(32000);\n    \n    updater.doLegacyUpdate(core, req, writer);\n    return writer.toString();\n  }\n\n","bugFix":null,"bugIntro":["c28792ff7d1774c306e16afbd44ded91a417049b"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"f1771cff5959fd3829db46f5fa9a2bc21e408b11","date":1204013966,"type":3,"author":"Chris M. Hostetter","isMerge":false,"pathNew":"src/java/org/apache/solr/util/TestHarness#update(String).mjava","pathOld":"src/java/org/apache/solr/util/TestHarness#update(String).mjava","sourceNew":"  /**\n   * Processes an \"update\" (add, commit or optimize) and\n   * returns the response as a String.\n   * \n   * @deprecated The better approach is to instantiate an Updatehandler directly\n   *\n   * @param xml The XML of the update\n   * @return The XML response to the update\n   */\n  @Deprecated\n  public String update(String xml) {\n                \n    StringReader req = new StringReader(xml);\n    StringWriter writer = new StringWriter(32000);\n    \n    // This relies on the fact that SolrCore.getSolrCore() uses the \n    // last instantiated SolrCore.\n    updater.doLegacyUpdate(req, writer);\n    return writer.toString();\n  }\n\n","sourceOld":"  /**\n   * Processes an \"update\" (add, commit or optimize) and\n   * returns the response as a String.\n   * \n   * The better approach is to instanciate a Updatehandler directly\n   *\n   * @param xml The XML of the update\n   * @return The XML response to the update\n   */\n  @Deprecated\n  public String update(String xml) {\n                \n    StringReader req = new StringReader(xml);\n    StringWriter writer = new StringWriter(32000);\n    \n    // This relies on the fact that SolrCore.getSolrCore() uses the \n    // last instantiated SolrCore.\n    updater.doLegacyUpdate(req, writer);\n    return writer.toString();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"c28792ff7d1774c306e16afbd44ded91a417049b","date":1219072108,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"src/java/org/apache/solr/util/TestHarness#update(String).mjava","pathOld":"src/java/org/apache/solr/util/TestHarness#update(String).mjava","sourceNew":"  /**\n   * Processes an \"update\" (add, commit or optimize) and\n   * returns the response as a String.\n   * \n   * @deprecated The better approach is to instantiate an Updatehandler directly\n   *\n   * @param xml The XML of the update\n   * @return The XML response to the update\n   */\n  @Deprecated\n  public String update(String xml) {\n                \n    StringReader req = new StringReader(xml);\n    StringWriter writer = new StringWriter(32000);\n\n    updater.doLegacyUpdate(req, writer);\n    return writer.toString();\n  }\n\n","sourceOld":"  /**\n   * Processes an \"update\" (add, commit or optimize) and\n   * returns the response as a String.\n   * \n   * @deprecated The better approach is to instantiate an Updatehandler directly\n   *\n   * @param xml The XML of the update\n   * @return The XML response to the update\n   */\n  @Deprecated\n  public String update(String xml) {\n                \n    StringReader req = new StringReader(xml);\n    StringWriter writer = new StringWriter(32000);\n    \n    // This relies on the fact that SolrCore.getSolrCore() uses the \n    // last instantiated SolrCore.\n    updater.doLegacyUpdate(req, writer);\n    return writer.toString();\n  }\n\n","bugFix":["d80013b5e260def972025c93a0b08524f9c38f49","abbfb3ad1f90df8ebf4751c8e72b2756ace50699"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ad94625fb8d088209f46650c8097196fec67f00c","date":1453508319,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/src/java/org/apache/solr/util/TestHarness#update(String).mjava","pathOld":"src/java/org/apache/solr/util/TestHarness#update(String).mjava","sourceNew":"  /**\n   * Processes an \"update\" (add, commit or optimize) and\n   * returns the response as a String.\n   * \n   * @deprecated The better approach is to instantiate an Updatehandler directly\n   *\n   * @param xml The XML of the update\n   * @return The XML response to the update\n   */\n  @Deprecated\n  public String update(String xml) {\n                \n    StringReader req = new StringReader(xml);\n    StringWriter writer = new StringWriter(32000);\n\n    updater.doLegacyUpdate(req, writer);\n    return writer.toString();\n  }\n\n","sourceOld":"  /**\n   * Processes an \"update\" (add, commit or optimize) and\n   * returns the response as a String.\n   * \n   * @deprecated The better approach is to instantiate an Updatehandler directly\n   *\n   * @param xml The XML of the update\n   * @return The XML response to the update\n   */\n  @Deprecated\n  public String update(String xml) {\n                \n    StringReader req = new StringReader(xml);\n    StringWriter writer = new StringWriter(32000);\n\n    updater.doLegacyUpdate(req, writer);\n    return writer.toString();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"6d6338c87060be5f66757a94945975f3bbd377a9":["ee4f075a5b1a77c2fb5eb752bdedabf6497aaf9b"],"ee4f075a5b1a77c2fb5eb752bdedabf6497aaf9b":["d80013b5e260def972025c93a0b08524f9c38f49"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"c28792ff7d1774c306e16afbd44ded91a417049b":["f1771cff5959fd3829db46f5fa9a2bc21e408b11"],"ad94625fb8d088209f46650c8097196fec67f00c":["c28792ff7d1774c306e16afbd44ded91a417049b"],"abbfb3ad1f90df8ebf4751c8e72b2756ace50699":["6d6338c87060be5f66757a94945975f3bbd377a9"],"f66f1826f07774581d2ec661444fc987bdd1a85d":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"f1771cff5959fd3829db46f5fa9a2bc21e408b11":["abbfb3ad1f90df8ebf4751c8e72b2756ace50699"],"d80013b5e260def972025c93a0b08524f9c38f49":["f66f1826f07774581d2ec661444fc987bdd1a85d"]},"commit2Childs":{"6d6338c87060be5f66757a94945975f3bbd377a9":["abbfb3ad1f90df8ebf4751c8e72b2756ace50699"],"ee4f075a5b1a77c2fb5eb752bdedabf6497aaf9b":["6d6338c87060be5f66757a94945975f3bbd377a9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["f66f1826f07774581d2ec661444fc987bdd1a85d"],"c28792ff7d1774c306e16afbd44ded91a417049b":["ad94625fb8d088209f46650c8097196fec67f00c"],"ad94625fb8d088209f46650c8097196fec67f00c":[],"abbfb3ad1f90df8ebf4751c8e72b2756ace50699":["f1771cff5959fd3829db46f5fa9a2bc21e408b11"],"f66f1826f07774581d2ec661444fc987bdd1a85d":["d80013b5e260def972025c93a0b08524f9c38f49"],"d80013b5e260def972025c93a0b08524f9c38f49":["ee4f075a5b1a77c2fb5eb752bdedabf6497aaf9b"],"f1771cff5959fd3829db46f5fa9a2bc21e408b11":["c28792ff7d1774c306e16afbd44ded91a417049b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["ad94625fb8d088209f46650c8097196fec67f00c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"pathCommit":null}