{"path":"lucene/core/src/java/org/apache/lucene/index/ParallelAtomicReader#simpleNormValues(String).mjava","commits":[{"id":"55eeb2534cd53d2a985669829df942468ebf5314","date":1354409119,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/ParallelAtomicReader#simpleNormValues(String).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public NumericDocValues simpleNormValues(String field) throws IOException {\n    ensureOpen();\n    AtomicReader reader = fieldToReader.get(field);\n    return reader == null ? null : reader.simpleNormValues(field);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e13078ebcbc41380853f4612578b706f40699cf5","date":1358203044,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/ParallelAtomicReader#simpleNormValues(String).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/ParallelAtomicReader#simpleNormValues(String).mjava","sourceNew":"  @Override\n  public NumericDocValues simpleNormValues(String field) throws IOException {\n    ensureOpen();\n    AtomicReader reader = fieldToReader.get(field);\n    NumericDocValues values = reader == null ? null : reader.simpleNormValues(field);\n    return values;\n  }\n\n","sourceOld":"  @Override\n  public NumericDocValues simpleNormValues(String field) throws IOException {\n    ensureOpen();\n    AtomicReader reader = fieldToReader.get(field);\n    return reader == null ? null : reader.simpleNormValues(field);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b8acf0807ca5f38beda8e0f7d5ab46ff39f81200","date":1358521790,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/ParallelAtomicReader#getNormValues(String).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/ParallelAtomicReader#simpleNormValues(String).mjava","sourceNew":"  @Override\n  public NumericDocValues getNormValues(String field) throws IOException {\n    ensureOpen();\n    AtomicReader reader = fieldToReader.get(field);\n    NumericDocValues values = reader == null ? null : reader.getNormValues(field);\n    return values;\n  }\n\n","sourceOld":"  @Override\n  public NumericDocValues simpleNormValues(String field) throws IOException {\n    ensureOpen();\n    AtomicReader reader = fieldToReader.get(field);\n    NumericDocValues values = reader == null ? null : reader.simpleNormValues(field);\n    return values;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b8acf0807ca5f38beda8e0f7d5ab46ff39f81200":["e13078ebcbc41380853f4612578b706f40699cf5"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"e13078ebcbc41380853f4612578b706f40699cf5":["55eeb2534cd53d2a985669829df942468ebf5314"],"55eeb2534cd53d2a985669829df942468ebf5314":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"b8acf0807ca5f38beda8e0f7d5ab46ff39f81200":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["55eeb2534cd53d2a985669829df942468ebf5314","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"e13078ebcbc41380853f4612578b706f40699cf5":["b8acf0807ca5f38beda8e0f7d5ab46ff39f81200"],"55eeb2534cd53d2a985669829df942468ebf5314":["e13078ebcbc41380853f4612578b706f40699cf5"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["b8acf0807ca5f38beda8e0f7d5ab46ff39f81200","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}