{"path":"lucene/sandbox/src/java/org/apache/lucene/sandbox/queries/regex/RegexTermsEnum#RegexTermsEnum(TermsEnum,Term,RegexCapabilities).mjava","commits":[{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/sandbox/src/java/org/apache/lucene/sandbox/queries/regex/RegexTermsEnum#RegexTermsEnum(TermsEnum,Term,RegexCapabilities).mjava","pathOld":"lucene/contrib/sandbox/src/java/org/apache/lucene/sandbox/queries/regex/RegexTermsEnum#RegexTermsEnum(TermsEnum,Term,RegexCapabilities).mjava","sourceNew":"  public RegexTermsEnum(TermsEnum tenum, Term term, RegexCapabilities regexCap) throws IOException {\n    super(tenum);\n    String text = term.text();\n    this.regexImpl = regexCap.compile(text);\n\n    String pre = regexImpl.prefix();\n    if (pre == null) {\n      pre = \"\";\n    }\n\n    setInitialSeekTerm(prefixRef = new BytesRef(pre));\n  }\n\n","sourceOld":"  public RegexTermsEnum(TermsEnum tenum, Term term, RegexCapabilities regexCap) throws IOException {\n    super(tenum);\n    String text = term.text();\n    this.regexImpl = regexCap.compile(text);\n\n    String pre = regexImpl.prefix();\n    if (pre == null) {\n      pre = \"\";\n    }\n\n    setInitialSeekTerm(prefixRef = new BytesRef(pre));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4d3e8520fd031bab31fd0e4d480e55958bc45efe","date":1340901565,"type":3,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/sandbox/src/java/org/apache/lucene/sandbox/queries/regex/RegexTermsEnum#RegexTermsEnum(TermsEnum,Term,RegexCapabilities).mjava","pathOld":"lucene/sandbox/src/java/org/apache/lucene/sandbox/queries/regex/RegexTermsEnum#RegexTermsEnum(TermsEnum,Term,RegexCapabilities).mjava","sourceNew":"  public RegexTermsEnum(TermsEnum tenum, Term term, RegexCapabilities regexCap) {\n    super(tenum);\n    String text = term.text();\n    this.regexImpl = regexCap.compile(text);\n\n    String pre = regexImpl.prefix();\n    if (pre == null) {\n      pre = \"\";\n    }\n\n    setInitialSeekTerm(prefixRef = new BytesRef(pre));\n  }\n\n","sourceOld":"  public RegexTermsEnum(TermsEnum tenum, Term term, RegexCapabilities regexCap) throws IOException {\n    super(tenum);\n    String text = term.text();\n    this.regexImpl = regexCap.compile(text);\n\n    String pre = regexImpl.prefix();\n    if (pre == null) {\n      pre = \"\";\n    }\n\n    setInitialSeekTerm(prefixRef = new BytesRef(pre));\n  }\n\n","bugFix":["e8dd2a69747e9f2922fd8b6970bd1661b26a692d"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fe33227f6805edab2036cbb80645cc4e2d1fa424","date":1342713534,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/sandbox/src/java/org/apache/lucene/sandbox/queries/regex/RegexTermsEnum#RegexTermsEnum(TermsEnum,Term,RegexCapabilities).mjava","pathOld":"lucene/sandbox/src/java/org/apache/lucene/sandbox/queries/regex/RegexTermsEnum#RegexTermsEnum(TermsEnum,Term,RegexCapabilities).mjava","sourceNew":"  public RegexTermsEnum(TermsEnum tenum, Term term, RegexCapabilities regexCap) {\n    super(tenum);\n    String text = term.text();\n    this.regexImpl = regexCap.compile(text);\n\n    String pre = regexImpl.prefix();\n    if (pre == null) {\n      pre = \"\";\n    }\n\n    setInitialSeekTerm(prefixRef = new BytesRef(pre));\n  }\n\n","sourceOld":"  public RegexTermsEnum(TermsEnum tenum, Term term, RegexCapabilities regexCap) throws IOException {\n    super(tenum);\n    String text = term.text();\n    this.regexImpl = regexCap.compile(text);\n\n    String pre = regexImpl.prefix();\n    if (pre == null) {\n      pre = \"\";\n    }\n\n    setInitialSeekTerm(prefixRef = new BytesRef(pre));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a6162e2e0751bef4c7b97a35f1df8349c226b2cd","date":1444489751,"type":4,"author":"Uwe Schindler","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/sandbox/src/java/org/apache/lucene/sandbox/queries/regex/RegexTermsEnum#RegexTermsEnum(TermsEnum,Term,RegexCapabilities).mjava","sourceNew":null,"sourceOld":"  public RegexTermsEnum(TermsEnum tenum, Term term, RegexCapabilities regexCap) {\n    super(tenum);\n    String text = term.text();\n    this.regexImpl = regexCap.compile(text);\n\n    String pre = regexImpl.prefix();\n    if (pre == null) {\n      pre = \"\";\n    }\n\n    setInitialSeekTerm(prefixRef = new BytesRef(pre));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"fe33227f6805edab2036cbb80645cc4e2d1fa424":["b89678825b68eccaf09e6ab71675fc0b0af1e099","4d3e8520fd031bab31fd0e4d480e55958bc45efe"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"4d3e8520fd031bab31fd0e4d480e55958bc45efe":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"a6162e2e0751bef4c7b97a35f1df8349c226b2cd":["4d3e8520fd031bab31fd0e4d480e55958bc45efe"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a6162e2e0751bef4c7b97a35f1df8349c226b2cd"]},"commit2Childs":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["fe33227f6805edab2036cbb80645cc4e2d1fa424","4d3e8520fd031bab31fd0e4d480e55958bc45efe"],"fe33227f6805edab2036cbb80645cc4e2d1fa424":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"4d3e8520fd031bab31fd0e4d480e55958bc45efe":["fe33227f6805edab2036cbb80645cc4e2d1fa424","a6162e2e0751bef4c7b97a35f1df8349c226b2cd"],"a6162e2e0751bef4c7b97a35f1df8349c226b2cd":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["fe33227f6805edab2036cbb80645cc4e2d1fa424","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}