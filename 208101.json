{"path":"solr/core/src/java/org/apache/solr/handler/loader/JsonLoader.SingleThreadedJsonLoader#load(SolrQueryRequest,SolrQueryResponse,ContentStream,UpdateRequestProcessor).mjava","commits":[{"id":"042e4d934397657ba04c82b46cc5665076bc5c58","date":1336511170,"type":0,"author":"Ryan McKinley","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/loader/JsonLoader.SingleThreadedJsonLoader#load(SolrQueryRequest,SolrQueryResponse,ContentStream,UpdateRequestProcessor).mjava","pathOld":"/dev/null","sourceNew":"    @Override\n    public void load(SolrQueryRequest req, \n        SolrQueryResponse rsp, \n        ContentStream stream, \n        UpdateRequestProcessor processor) throws Exception {\n      \n      Reader reader = null;\n      try {\n        reader = stream.getReader();\n        if (log.isTraceEnabled()) {\n          String body = IOUtils.toString(reader);\n          log.trace(\"body\", body);\n          reader = new StringReader(body);\n        }\n  \n        parser = new JSONParser(reader);\n        this.processUpdate();\n      }\n      finally {\n        IOUtils.closeQuietly(reader);\n      }\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["6afb0ba86024b96e8b34cfc2e15562239dc36360"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"ab10d7c14ce9f8db61956611a57a5a377362a633","date":1413903184,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/loader/JsonLoader.SingleThreadedJsonLoader#load(SolrQueryRequest,SolrQueryResponse,ContentStream,UpdateRequestProcessor).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/loader/JsonLoader.SingleThreadedJsonLoader#load(SolrQueryRequest,SolrQueryResponse,ContentStream,UpdateRequestProcessor).mjava","sourceNew":"    @Override\n    public void load(SolrQueryRequest req,\n        SolrQueryResponse rsp,\n        ContentStream stream,\n        UpdateRequestProcessor processor) throws Exception {\n\n      Reader reader = null;\n      try {\n        reader = stream.getReader();\n        if (log.isTraceEnabled()) {\n          String body = IOUtils.toString(reader);\n          log.trace(\"body\", body);\n          reader = new StringReader(body);\n        }\n\n        this.processUpdate(reader);\n      } finally {\n        IOUtils.closeQuietly(reader);\n      }\n    }\n\n","sourceOld":"    @Override\n    public void load(SolrQueryRequest req, \n        SolrQueryResponse rsp, \n        ContentStream stream, \n        UpdateRequestProcessor processor) throws Exception {\n      \n      Reader reader = null;\n      try {\n        reader = stream.getReader();\n        if (log.isTraceEnabled()) {\n          String body = IOUtils.toString(reader);\n          log.trace(\"body\", body);\n          reader = new StringReader(body);\n        }\n  \n        parser = new JSONParser(reader);\n        this.processUpdate();\n      }\n      finally {\n        IOUtils.closeQuietly(reader);\n      }\n    }\n\n","bugFix":null,"bugIntro":["edca3939219468f2ba2563c20d6ae96f01f6f1ff"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"0a22eafe3f72a4c2945eaad9547e6c78816978f4","date":1413956657,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/handler/loader/JsonLoader.SingleThreadedJsonLoader#load(SolrQueryRequest,SolrQueryResponse,ContentStream,UpdateRequestProcessor).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/loader/JsonLoader.SingleThreadedJsonLoader#load(SolrQueryRequest,SolrQueryResponse,ContentStream,UpdateRequestProcessor).mjava","sourceNew":"    @Override\n    public void load(SolrQueryRequest req,\n        SolrQueryResponse rsp,\n        ContentStream stream,\n        UpdateRequestProcessor processor) throws Exception {\n\n      Reader reader = null;\n      try {\n        reader = stream.getReader();\n        if (log.isTraceEnabled()) {\n          String body = IOUtils.toString(reader);\n          log.trace(\"body\", body);\n          reader = new StringReader(body);\n        }\n\n        this.processUpdate(reader);\n      } finally {\n        IOUtils.closeQuietly(reader);\n      }\n    }\n\n","sourceOld":"    @Override\n    public void load(SolrQueryRequest req, \n        SolrQueryResponse rsp, \n        ContentStream stream, \n        UpdateRequestProcessor processor) throws Exception {\n      \n      Reader reader = null;\n      try {\n        reader = stream.getReader();\n        if (log.isTraceEnabled()) {\n          String body = IOUtils.toString(reader);\n          log.trace(\"body\", body);\n          reader = new StringReader(body);\n        }\n  \n        parser = new JSONParser(reader);\n        this.processUpdate();\n      }\n      finally {\n        IOUtils.closeQuietly(reader);\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6f5f8e831e266692b649e39dad7a64f525aa6d21","date":1427506910,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/loader/JsonLoader.SingleThreadedJsonLoader#load(SolrQueryRequest,SolrQueryResponse,ContentStream,UpdateRequestProcessor).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/loader/JsonLoader.SingleThreadedJsonLoader#load(SolrQueryRequest,SolrQueryResponse,ContentStream,UpdateRequestProcessor).mjava","sourceNew":"    @Override\n    public void load(SolrQueryRequest req,\n                     SolrQueryResponse rsp,\n                     ContentStream stream,\n                     UpdateRequestProcessor processor) throws Exception {\n\n      Reader reader = null;\n      try {\n        reader = stream.getReader();\n        if (log.isTraceEnabled()) {\n          String body = IOUtils.toString(reader);\n          log.trace(\"body\", body);\n          reader = new StringReader(body);\n        }\n\n        this.processUpdate(reader);\n      } finally {\n        IOUtils.closeQuietly(reader);\n      }\n    }\n\n","sourceOld":"    @Override\n    public void load(SolrQueryRequest req,\n        SolrQueryResponse rsp,\n        ContentStream stream,\n        UpdateRequestProcessor processor) throws Exception {\n\n      Reader reader = null;\n      try {\n        reader = stream.getReader();\n        if (log.isTraceEnabled()) {\n          String body = IOUtils.toString(reader);\n          log.trace(\"body\", body);\n          reader = new StringReader(body);\n        }\n\n        this.processUpdate(reader);\n      } finally {\n        IOUtils.closeQuietly(reader);\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","date":1427779360,"type":3,"author":"Ryan Ernst","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/handler/loader/JsonLoader.SingleThreadedJsonLoader#load(SolrQueryRequest,SolrQueryResponse,ContentStream,UpdateRequestProcessor).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/loader/JsonLoader.SingleThreadedJsonLoader#load(SolrQueryRequest,SolrQueryResponse,ContentStream,UpdateRequestProcessor).mjava","sourceNew":"    @Override\n    public void load(SolrQueryRequest req,\n                     SolrQueryResponse rsp,\n                     ContentStream stream,\n                     UpdateRequestProcessor processor) throws Exception {\n\n      Reader reader = null;\n      try {\n        reader = stream.getReader();\n        if (log.isTraceEnabled()) {\n          String body = IOUtils.toString(reader);\n          log.trace(\"body\", body);\n          reader = new StringReader(body);\n        }\n\n        this.processUpdate(reader);\n      } finally {\n        IOUtils.closeQuietly(reader);\n      }\n    }\n\n","sourceOld":"    @Override\n    public void load(SolrQueryRequest req,\n        SolrQueryResponse rsp,\n        ContentStream stream,\n        UpdateRequestProcessor processor) throws Exception {\n\n      Reader reader = null;\n      try {\n        reader = stream.getReader();\n        if (log.isTraceEnabled()) {\n          String body = IOUtils.toString(reader);\n          log.trace(\"body\", body);\n          reader = new StringReader(body);\n        }\n\n        this.processUpdate(reader);\n      } finally {\n        IOUtils.closeQuietly(reader);\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"edca3939219468f2ba2563c20d6ae96f01f6f1ff","date":1458064520,"type":3,"author":"anshum","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/loader/JsonLoader.SingleThreadedJsonLoader#load(SolrQueryRequest,SolrQueryResponse,ContentStream,UpdateRequestProcessor).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/loader/JsonLoader.SingleThreadedJsonLoader#load(SolrQueryRequest,SolrQueryResponse,ContentStream,UpdateRequestProcessor).mjava","sourceNew":"    @Override\n    public void load(SolrQueryRequest req,\n                     SolrQueryResponse rsp,\n                     ContentStream stream,\n                     UpdateRequestProcessor processor) throws Exception {\n\n      Reader reader = null;\n      try {\n        reader = stream.getReader();\n        if (log.isTraceEnabled()) {\n          String body = IOUtils.toString(reader);\n          log.trace(\"body\", body);\n          reader = new StringReader(body);\n        }\n\n        this.processUpdate(reader);\n      } catch (ParseException e) {\n        throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \"Cannot parse provided JSON: \" + e.getMessage());\n      }\n      finally {\n        IOUtils.closeQuietly(reader);\n      }\n    }\n\n","sourceOld":"    @Override\n    public void load(SolrQueryRequest req,\n                     SolrQueryResponse rsp,\n                     ContentStream stream,\n                     UpdateRequestProcessor processor) throws Exception {\n\n      Reader reader = null;\n      try {\n        reader = stream.getReader();\n        if (log.isTraceEnabled()) {\n          String body = IOUtils.toString(reader);\n          log.trace(\"body\", body);\n          reader = new StringReader(body);\n        }\n\n        this.processUpdate(reader);\n      } finally {\n        IOUtils.closeQuietly(reader);\n      }\n    }\n\n","bugFix":["ab10d7c14ce9f8db61956611a57a5a377362a633"],"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"6afb0ba86024b96e8b34cfc2e15562239dc36360","date":1579768208,"type":3,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/loader/JsonLoader.SingleThreadedJsonLoader#load(SolrQueryRequest,SolrQueryResponse,ContentStream,UpdateRequestProcessor).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/loader/JsonLoader.SingleThreadedJsonLoader#load(SolrQueryRequest,SolrQueryResponse,ContentStream,UpdateRequestProcessor).mjava","sourceNew":"    @Override\n    public void load(SolrQueryRequest req,\n                     SolrQueryResponse rsp,\n                     ContentStream stream,\n                     UpdateRequestProcessor processor) throws Exception {\n\n      Reader reader = null;\n      try {\n        reader = stream.getReader();\n        if (log.isTraceEnabled()) {\n          String body = IOUtils.toString(reader);\n          log.trace(\"body: {}\", body);\n          reader = new StringReader(body);\n        }\n\n        this.processUpdate(reader);\n      } catch (ParseException e) {\n        throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \"Cannot parse provided JSON: \" + e.getMessage());\n      }\n      finally {\n        IOUtils.closeQuietly(reader);\n      }\n    }\n\n","sourceOld":"    @Override\n    public void load(SolrQueryRequest req,\n                     SolrQueryResponse rsp,\n                     ContentStream stream,\n                     UpdateRequestProcessor processor) throws Exception {\n\n      Reader reader = null;\n      try {\n        reader = stream.getReader();\n        if (log.isTraceEnabled()) {\n          String body = IOUtils.toString(reader);\n          log.trace(\"body\", body);\n          reader = new StringReader(body);\n        }\n\n        this.processUpdate(reader);\n      } catch (ParseException e) {\n        throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \"Cannot parse provided JSON: \" + e.getMessage());\n      }\n      finally {\n        IOUtils.closeQuietly(reader);\n      }\n    }\n\n","bugFix":["042e4d934397657ba04c82b46cc5665076bc5c58"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":["ab10d7c14ce9f8db61956611a57a5a377362a633","6f5f8e831e266692b649e39dad7a64f525aa6d21"],"edca3939219468f2ba2563c20d6ae96f01f6f1ff":["6f5f8e831e266692b649e39dad7a64f525aa6d21"],"0a22eafe3f72a4c2945eaad9547e6c78816978f4":["042e4d934397657ba04c82b46cc5665076bc5c58","ab10d7c14ce9f8db61956611a57a5a377362a633"],"6afb0ba86024b96e8b34cfc2e15562239dc36360":["edca3939219468f2ba2563c20d6ae96f01f6f1ff"],"6f5f8e831e266692b649e39dad7a64f525aa6d21":["ab10d7c14ce9f8db61956611a57a5a377362a633"],"ab10d7c14ce9f8db61956611a57a5a377362a633":["042e4d934397657ba04c82b46cc5665076bc5c58"],"042e4d934397657ba04c82b46cc5665076bc5c58":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["6afb0ba86024b96e8b34cfc2e15562239dc36360"]},"commit2Childs":{"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":[],"edca3939219468f2ba2563c20d6ae96f01f6f1ff":["6afb0ba86024b96e8b34cfc2e15562239dc36360"],"0a22eafe3f72a4c2945eaad9547e6c78816978f4":[],"6f5f8e831e266692b649e39dad7a64f525aa6d21":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","edca3939219468f2ba2563c20d6ae96f01f6f1ff"],"6afb0ba86024b96e8b34cfc2e15562239dc36360":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"ab10d7c14ce9f8db61956611a57a5a377362a633":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","0a22eafe3f72a4c2945eaad9547e6c78816978f4","6f5f8e831e266692b649e39dad7a64f525aa6d21"],"042e4d934397657ba04c82b46cc5665076bc5c58":["0a22eafe3f72a4c2945eaad9547e6c78816978f4","ab10d7c14ce9f8db61956611a57a5a377362a633"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["042e4d934397657ba04c82b46cc5665076bc5c58"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","0a22eafe3f72a4c2945eaad9547e6c78816978f4","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}