{"path":"lucene/facet/src/java/org/apache/lucene/facet/taxonomy/directory/ParentArray#ParentArray(IndexReader).mjava","commits":[{"id":"219dcddcdf2fc13f6271d9e5836bd19c53a4abf1","date":1353511594,"type":0,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/taxonomy/directory/ParentArray#ParentArray(IndexReader).mjava","pathOld":"/dev/null","sourceNew":"  public ParentArray(IndexReader reader) throws IOException {\n    parentOrdinals = new int[reader.maxDoc()];\n    if (parentOrdinals.length > 0) {\n      initFromReader(reader, 0);\n      // Starting Lucene 2.9, following the change LUCENE-1542, we can\n      // no longer reliably read the parent \"-1\" (see comment in\n      // LuceneTaxonomyWriter.SinglePositionTokenStream). We have no way\n      // to fix this in indexing without breaking backward-compatibility\n      // with existing indexes, so what we'll do instead is just\n      // hard-code the parent of ordinal 0 to be -1, and assume (as is\n      // indeed the case) that no other parent can be -1.\n      parentOrdinals[0] = TaxonomyReader.INVALID_ORDINAL;\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3d58d08788c3fd51172ba34474cca42499d6391b","date":1354802133,"type":5,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/taxonomy/directory/ParallelTaxonomyArrays#ParallelTaxonomyArrays(IndexReader).mjava","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/taxonomy/directory/ParentArray#ParentArray(IndexReader).mjava","sourceNew":"  public ParallelTaxonomyArrays(IndexReader reader) throws IOException {\n    parents = new int[reader.maxDoc()];\n    if (parents.length > 0) {\n      initParents(reader, 0);\n      // Starting Lucene 2.9, following the change LUCENE-1542, we can\n      // no longer reliably read the parent \"-1\" (see comment in\n      // LuceneTaxonomyWriter.SinglePositionTokenStream). We have no way\n      // to fix this in indexing without breaking backward-compatibility\n      // with existing indexes, so what we'll do instead is just\n      // hard-code the parent of ordinal 0 to be -1, and assume (as is\n      // indeed the case) that no other parent can be -1.\n      parents[0] = TaxonomyReader.INVALID_ORDINAL;\n    }\n  }\n\n","sourceOld":"  public ParentArray(IndexReader reader) throws IOException {\n    parentOrdinals = new int[reader.maxDoc()];\n    if (parentOrdinals.length > 0) {\n      initFromReader(reader, 0);\n      // Starting Lucene 2.9, following the change LUCENE-1542, we can\n      // no longer reliably read the parent \"-1\" (see comment in\n      // LuceneTaxonomyWriter.SinglePositionTokenStream). We have no way\n      // to fix this in indexing without breaking backward-compatibility\n      // with existing indexes, so what we'll do instead is just\n      // hard-code the parent of ordinal 0 to be -1, and assume (as is\n      // indeed the case) that no other parent can be -1.\n      parentOrdinals[0] = TaxonomyReader.INVALID_ORDINAL;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3d58d08788c3fd51172ba34474cca42499d6391b":["219dcddcdf2fc13f6271d9e5836bd19c53a4abf1"],"219dcddcdf2fc13f6271d9e5836bd19c53a4abf1":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3d58d08788c3fd51172ba34474cca42499d6391b"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["219dcddcdf2fc13f6271d9e5836bd19c53a4abf1"],"3d58d08788c3fd51172ba34474cca42499d6391b":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"219dcddcdf2fc13f6271d9e5836bd19c53a4abf1":["3d58d08788c3fd51172ba34474cca42499d6391b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}