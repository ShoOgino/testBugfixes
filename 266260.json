{"path":"lucene/core/src/test/org/apache/lucene/util/TestSparseFixedBitDocIdSet#copyOf(BitSet,int).mjava","commits":[{"id":"0abcec02c9851c46c70a75bd42fb6e4d5348ac9e","date":1414135939,"type":0,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/util/TestSparseFixedBitDocIdSet#copyOf(BitSet,int).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public BitDocIdSet copyOf(BitSet bs, int length) throws IOException {\n    final SparseFixedBitSet set = new SparseFixedBitSet(length);\n    // SparseFixedBitSet can be sensitive to the order of insertion so\n    // randomize insertion a bit\n    List<Integer> buffer = new ArrayList<>();\n    for (int doc = bs.nextSetBit(0); doc != -1; doc = bs.nextSetBit(doc + 1)) {\n      buffer.add(doc);\n      if (buffer.size() >= 100000) {\n        Collections.shuffle(buffer, random());\n        for (int i : buffer) {\n          set.set(i);\n        }\n        buffer.clear();\n      }\n    }\n    Collections.shuffle(buffer, random());\n    for (int i : buffer) {\n      set.set(i);\n    }\n    return new BitDocIdSet(set, set.approximateCardinality());\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"0abcec02c9851c46c70a75bd42fb6e4d5348ac9e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["0abcec02c9851c46c70a75bd42fb6e4d5348ac9e"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["0abcec02c9851c46c70a75bd42fb6e4d5348ac9e"],"0abcec02c9851c46c70a75bd42fb6e4d5348ac9e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}