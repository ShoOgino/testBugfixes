{"path":"solr/core/src/java/org/apache/solr/schema/LatLonPointSpatialField.LatLonPointSpatialStrategy#makeDistanceValueSource(Point,double).mjava","commits":[{"id":"7280772020b860cd9a473ed847c5b79251a850d7","date":1489283281,"type":0,"author":"David Smiley","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/schema/LatLonPointSpatialField.LatLonPointSpatialStrategy#makeDistanceValueSource(Point,double).mjava","pathOld":"/dev/null","sourceNew":"    @Override\n    public ValueSource makeDistanceValueSource(Point queryPoint, double multiplier) {\n      if (!docValues) {\n        throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,\n            getFieldName() + \" must have docValues enabled to support this feature\");\n      }\n      // Internally, the distance from LatLonPointSortField/Comparator is in meters. So we must also go from meters to\n      //  degrees, which is what Lucene spatial-extras is oriented around.\n      return new DistanceSortValueSource(getFieldName(), queryPoint,\n          DistanceUtils.KM_TO_DEG / 1000.0 * multiplier);\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"32b9119890a8e82252b6cc341ac491d18fa1e49b","date":1498575219,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/schema/LatLonPointSpatialField.LatLonPointSpatialStrategy#makeDistanceValueSource(Point,double).mjava","pathOld":"solr/core/src/java/org/apache/solr/schema/LatLonPointSpatialField.LatLonPointSpatialStrategy#makeDistanceValueSource(Point,double).mjava","sourceNew":"    @Override\n    public DoubleValuesSource makeDistanceValueSource(Point queryPoint, double multiplier) {\n      if (!docValues) {\n        throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,\n            getFieldName() + \" must have docValues enabled to support this feature\");\n      }\n      // Internally, the distance from LatLonPointSortField/Comparator is in meters. So we must also go from meters to\n      //  degrees, which is what Lucene spatial-extras is oriented around.\n      return new DistanceSortValueSource(getFieldName(), queryPoint,\n          DistanceUtils.KM_TO_DEG / 1000.0 * multiplier);\n    }\n\n","sourceOld":"    @Override\n    public ValueSource makeDistanceValueSource(Point queryPoint, double multiplier) {\n      if (!docValues) {\n        throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,\n            getFieldName() + \" must have docValues enabled to support this feature\");\n      }\n      // Internally, the distance from LatLonPointSortField/Comparator is in meters. So we must also go from meters to\n      //  degrees, which is what Lucene spatial-extras is oriented around.\n      return new DistanceSortValueSource(getFieldName(), queryPoint,\n          DistanceUtils.KM_TO_DEG / 1000.0 * multiplier);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"98f11c416d30e556e0004a9a84960702d12d35b1","date":1498628359,"type":3,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/schema/LatLonPointSpatialField.LatLonPointSpatialStrategy#makeDistanceValueSource(Point,double).mjava","pathOld":"solr/core/src/java/org/apache/solr/schema/LatLonPointSpatialField.LatLonPointSpatialStrategy#makeDistanceValueSource(Point,double).mjava","sourceNew":"    @Override\n    public DoubleValuesSource makeDistanceValueSource(Point queryPoint, double multiplier) {\n      if (!docValues) {\n        throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,\n            getFieldName() + \" must have docValues enabled to support this feature\");\n      }\n      // Internally, the distance from LatLonPointSortField/Comparator is in meters. So we must also go from meters to\n      //  degrees, which is what Lucene spatial-extras is oriented around.\n      return new DistanceSortValueSource(getFieldName(), queryPoint,\n          DistanceUtils.KM_TO_DEG / 1000.0 * multiplier);\n    }\n\n","sourceOld":"    @Override\n    public ValueSource makeDistanceValueSource(Point queryPoint, double multiplier) {\n      if (!docValues) {\n        throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,\n            getFieldName() + \" must have docValues enabled to support this feature\");\n      }\n      // Internally, the distance from LatLonPointSortField/Comparator is in meters. So we must also go from meters to\n      //  degrees, which is what Lucene spatial-extras is oriented around.\n      return new DistanceSortValueSource(getFieldName(), queryPoint,\n          DistanceUtils.KM_TO_DEG / 1000.0 * multiplier);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"28288370235ed02234a64753cdbf0c6ec096304a","date":1498726817,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/schema/LatLonPointSpatialField.LatLonPointSpatialStrategy#makeDistanceValueSource(Point,double).mjava","pathOld":"solr/core/src/java/org/apache/solr/schema/LatLonPointSpatialField.LatLonPointSpatialStrategy#makeDistanceValueSource(Point,double).mjava","sourceNew":"    @Override\n    public DoubleValuesSource makeDistanceValueSource(Point queryPoint, double multiplier) {\n      if (!docValues) {\n        throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,\n            getFieldName() + \" must have docValues enabled to support this feature\");\n      }\n      // Internally, the distance from LatLonPointSortField/Comparator is in meters. So we must also go from meters to\n      //  degrees, which is what Lucene spatial-extras is oriented around.\n      return new DistanceSortValueSource(getFieldName(), queryPoint,\n          DistanceUtils.KM_TO_DEG / 1000.0 * multiplier);\n    }\n\n","sourceOld":"    @Override\n    public ValueSource makeDistanceValueSource(Point queryPoint, double multiplier) {\n      if (!docValues) {\n        throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,\n            getFieldName() + \" must have docValues enabled to support this feature\");\n      }\n      // Internally, the distance from LatLonPointSortField/Comparator is in meters. So we must also go from meters to\n      //  degrees, which is what Lucene spatial-extras is oriented around.\n      return new DistanceSortValueSource(getFieldName(), queryPoint,\n          DistanceUtils.KM_TO_DEG / 1000.0 * multiplier);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"32b9119890a8e82252b6cc341ac491d18fa1e49b":["7280772020b860cd9a473ed847c5b79251a850d7"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"7280772020b860cd9a473ed847c5b79251a850d7":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"28288370235ed02234a64753cdbf0c6ec096304a":["7280772020b860cd9a473ed847c5b79251a850d7","32b9119890a8e82252b6cc341ac491d18fa1e49b"],"98f11c416d30e556e0004a9a84960702d12d35b1":["7280772020b860cd9a473ed847c5b79251a850d7","32b9119890a8e82252b6cc341ac491d18fa1e49b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["28288370235ed02234a64753cdbf0c6ec096304a"]},"commit2Childs":{"32b9119890a8e82252b6cc341ac491d18fa1e49b":["28288370235ed02234a64753cdbf0c6ec096304a","98f11c416d30e556e0004a9a84960702d12d35b1"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["7280772020b860cd9a473ed847c5b79251a850d7"],"7280772020b860cd9a473ed847c5b79251a850d7":["32b9119890a8e82252b6cc341ac491d18fa1e49b","28288370235ed02234a64753cdbf0c6ec096304a","98f11c416d30e556e0004a9a84960702d12d35b1"],"28288370235ed02234a64753cdbf0c6ec096304a":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"98f11c416d30e556e0004a9a84960702d12d35b1":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["98f11c416d30e556e0004a9a84960702d12d35b1","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}