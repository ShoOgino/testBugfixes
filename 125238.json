{"path":"lucene/luke/src/java/org/apache/lucene/luke/models/documents/DocumentField#of(FieldInfo,IndexableField,IndexReader,int).mjava","commits":[{"id":"f554f2d9b5456248ab6467b9d4f6015686797a6c","date":1554891357,"type":0,"author":"Tomoko Uchida","isMerge":false,"pathNew":"lucene/luke/src/java/org/apache/lucene/luke/models/documents/DocumentField#of(FieldInfo,IndexableField,IndexReader,int).mjava","pathOld":"/dev/null","sourceNew":"  static DocumentField of(FieldInfo finfo, IndexableField field, IndexReader reader, int docId)\n      throws IOException {\n\n    Objects.requireNonNull(finfo);\n    Objects.requireNonNull(reader);\n\n    DocumentField dfield = new DocumentField();\n\n    dfield.name = finfo.name;\n    dfield.idxOptions = finfo.getIndexOptions();\n    dfield.hasTermVectors = finfo.hasVectors();\n    dfield.hasPayloads = finfo.hasPayloads();\n    dfield.hasNorms = finfo.hasNorms();\n\n    if (finfo.hasNorms()) {\n      NumericDocValues norms = MultiDocValues.getNormValues(reader, finfo.name);\n      if (norms.advanceExact(docId)) {\n        dfield.norm = norms.longValue();\n      }\n    }\n\n    dfield.dvType = finfo.getDocValuesType();\n\n    dfield.pointDimensionCount = finfo.getPointDataDimensionCount();\n    dfield.pointNumBytes = finfo.getPointNumBytes();\n\n    if (field != null) {\n      dfield.isStored = field.fieldType().stored();\n      dfield.stringValue = field.stringValue();\n      if (field.binaryValue() != null) {\n        dfield.binaryValue = BytesRef.deepCopyOf(field.binaryValue());\n      }\n      dfield.numericValue = field.numericValue();\n    }\n\n    return dfield;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"59ed8c026ba85e3c42fb89605b2032dc6f9cc241","date":1581113294,"type":3,"author":"Nicholas Knize","isMerge":false,"pathNew":"lucene/luke/src/java/org/apache/lucene/luke/models/documents/DocumentField#of(FieldInfo,IndexableField,IndexReader,int).mjava","pathOld":"lucene/luke/src/java/org/apache/lucene/luke/models/documents/DocumentField#of(FieldInfo,IndexableField,IndexReader,int).mjava","sourceNew":"  static DocumentField of(FieldInfo finfo, IndexableField field, IndexReader reader, int docId)\n      throws IOException {\n\n    Objects.requireNonNull(finfo);\n    Objects.requireNonNull(reader);\n\n    DocumentField dfield = new DocumentField();\n\n    dfield.name = finfo.name;\n    dfield.idxOptions = finfo.getIndexOptions();\n    dfield.hasTermVectors = finfo.hasVectors();\n    dfield.hasPayloads = finfo.hasPayloads();\n    dfield.hasNorms = finfo.hasNorms();\n\n    if (finfo.hasNorms()) {\n      NumericDocValues norms = MultiDocValues.getNormValues(reader, finfo.name);\n      if (norms.advanceExact(docId)) {\n        dfield.norm = norms.longValue();\n      }\n    }\n\n    dfield.dvType = finfo.getDocValuesType();\n\n    dfield.pointDimensionCount = finfo.getPointDimensionCount();\n    dfield.pointNumBytes = finfo.getPointNumBytes();\n\n    if (field != null) {\n      dfield.isStored = field.fieldType().stored();\n      dfield.stringValue = field.stringValue();\n      if (field.binaryValue() != null) {\n        dfield.binaryValue = BytesRef.deepCopyOf(field.binaryValue());\n      }\n      dfield.numericValue = field.numericValue();\n    }\n\n    return dfield;\n  }\n\n","sourceOld":"  static DocumentField of(FieldInfo finfo, IndexableField field, IndexReader reader, int docId)\n      throws IOException {\n\n    Objects.requireNonNull(finfo);\n    Objects.requireNonNull(reader);\n\n    DocumentField dfield = new DocumentField();\n\n    dfield.name = finfo.name;\n    dfield.idxOptions = finfo.getIndexOptions();\n    dfield.hasTermVectors = finfo.hasVectors();\n    dfield.hasPayloads = finfo.hasPayloads();\n    dfield.hasNorms = finfo.hasNorms();\n\n    if (finfo.hasNorms()) {\n      NumericDocValues norms = MultiDocValues.getNormValues(reader, finfo.name);\n      if (norms.advanceExact(docId)) {\n        dfield.norm = norms.longValue();\n      }\n    }\n\n    dfield.dvType = finfo.getDocValuesType();\n\n    dfield.pointDimensionCount = finfo.getPointDataDimensionCount();\n    dfield.pointNumBytes = finfo.getPointNumBytes();\n\n    if (field != null) {\n      dfield.isStored = field.fieldType().stored();\n      dfield.stringValue = field.stringValue();\n      if (field.binaryValue() != null) {\n        dfield.binaryValue = BytesRef.deepCopyOf(field.binaryValue());\n      }\n      dfield.numericValue = field.numericValue();\n    }\n\n    return dfield;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"59ed8c026ba85e3c42fb89605b2032dc6f9cc241":["f554f2d9b5456248ab6467b9d4f6015686797a6c"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"f554f2d9b5456248ab6467b9d4f6015686797a6c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["59ed8c026ba85e3c42fb89605b2032dc6f9cc241"]},"commit2Childs":{"59ed8c026ba85e3c42fb89605b2032dc6f9cc241":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["f554f2d9b5456248ab6467b9d4f6015686797a6c"],"f554f2d9b5456248ab6467b9d4f6015686797a6c":["59ed8c026ba85e3c42fb89605b2032dc6f9cc241"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}