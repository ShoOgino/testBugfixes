{"path":"lucene/replicator/src/java/org/apache/lucene/replicator/nrt/ReplicaFileDeleter#delete(String).mjava","commits":[{"id":"0d49a158012a8ff48f328a4558e4bfcffbaed16f","date":1453677440,"type":0,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/replicator/src/java/org/apache/lucene/replicator/nrt/ReplicaFileDeleter#delete(String).mjava","pathOld":"/dev/null","sourceNew":"  private synchronized boolean delete(String fileName) {\n    try {\n      if (Node.VERBOSE_FILES) {\n        node.message(\"file \" + fileName + \": now delete\");\n      }\n      dir.deleteFile(fileName);\n      pending.remove(fileName);\n      return true;\n    } catch (FileNotFoundException|NoSuchFileException missing) {\n      // This should never happen: we should only be asked to track files that do exist\n      node.message(\"file \" + fileName + \": delete failed: \" + missing);\n      throw new IllegalStateException(\"file \" + fileName + \": we attempted delete but the file does not exist?\", missing);\n    } catch (IOException ioe) {\n      if (Node.VERBOSE_FILES) {\n        node.message(\"file \" + fileName + \": delete failed: \" + ioe + \"; will retry later\");\n      }\n      pending.add(fileName);\n      return false;\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4a8ec0889b27701f0ad90a25c95b75454e898cf3","date":1454871481,"type":3,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/replicator/src/java/org/apache/lucene/replicator/nrt/ReplicaFileDeleter#delete(String).mjava","pathOld":"lucene/replicator/src/java/org/apache/lucene/replicator/nrt/ReplicaFileDeleter#delete(String).mjava","sourceNew":"  private synchronized boolean delete(String fileName) {\n    try {\n      if (Node.VERBOSE_FILES) {\n        node.message(\"file \" + fileName + \": now delete\");\n      }\n      dir.deleteFile(fileName);\n      pending.remove(fileName);\n      return true;\n    } catch (FileNotFoundException|NoSuchFileException missing) {\n      // This should never happen: we should only be asked to track files that do exist\n      node.message(\"file \" + fileName + \": delete failed: \" + missing);\n      throw new IllegalStateException(\"file \" + fileName + \": we attempted delete but the file does not exist?\", missing);\n    } catch (IOException ioe) {\n      // nocommit remove this retry logic!  it's Directory's job now...\n      if (Node.VERBOSE_FILES) {\n        node.message(\"file \" + fileName + \": delete failed: \" + ioe + \"; will retry later\");\n      }\n      pending.add(fileName);\n      return false;\n    }\n  }\n\n","sourceOld":"  private synchronized boolean delete(String fileName) {\n    try {\n      if (Node.VERBOSE_FILES) {\n        node.message(\"file \" + fileName + \": now delete\");\n      }\n      dir.deleteFile(fileName);\n      pending.remove(fileName);\n      return true;\n    } catch (FileNotFoundException|NoSuchFileException missing) {\n      // This should never happen: we should only be asked to track files that do exist\n      node.message(\"file \" + fileName + \": delete failed: \" + missing);\n      throw new IllegalStateException(\"file \" + fileName + \": we attempted delete but the file does not exist?\", missing);\n    } catch (IOException ioe) {\n      if (Node.VERBOSE_FILES) {\n        node.message(\"file \" + fileName + \": delete failed: \" + ioe + \"; will retry later\");\n      }\n      pending.add(fileName);\n      return false;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b72a3c8c250ce67d9dd59e06316f982cd77bdb3c","date":1454874368,"type":3,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/replicator/src/java/org/apache/lucene/replicator/nrt/ReplicaFileDeleter#delete(String).mjava","pathOld":"lucene/replicator/src/java/org/apache/lucene/replicator/nrt/ReplicaFileDeleter#delete(String).mjava","sourceNew":"  private synchronized void delete(String fileName) throws IOException {\n    if (Node.VERBOSE_FILES) {\n      node.message(\"file \" + fileName + \": now delete\");\n    }\n    dir.deleteFile(fileName);\n  }\n\n","sourceOld":"  private synchronized boolean delete(String fileName) {\n    try {\n      if (Node.VERBOSE_FILES) {\n        node.message(\"file \" + fileName + \": now delete\");\n      }\n      dir.deleteFile(fileName);\n      pending.remove(fileName);\n      return true;\n    } catch (FileNotFoundException|NoSuchFileException missing) {\n      // This should never happen: we should only be asked to track files that do exist\n      node.message(\"file \" + fileName + \": delete failed: \" + missing);\n      throw new IllegalStateException(\"file \" + fileName + \": we attempted delete but the file does not exist?\", missing);\n    } catch (IOException ioe) {\n      // nocommit remove this retry logic!  it's Directory's job now...\n      if (Node.VERBOSE_FILES) {\n        node.message(\"file \" + fileName + \": delete failed: \" + ioe + \"; will retry later\");\n      }\n      pending.add(fileName);\n      return false;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"68496c2200e559fb7802f7575427b7a482659afb","date":1455207618,"type":0,"author":"Mike McCandless","isMerge":true,"pathNew":"lucene/replicator/src/java/org/apache/lucene/replicator/nrt/ReplicaFileDeleter#delete(String).mjava","pathOld":"/dev/null","sourceNew":"  private synchronized void delete(String fileName) throws IOException {\n    if (Node.VERBOSE_FILES) {\n      node.message(\"file \" + fileName + \": now delete\");\n    }\n    dir.deleteFile(fileName);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"4a8ec0889b27701f0ad90a25c95b75454e898cf3":["0d49a158012a8ff48f328a4558e4bfcffbaed16f"],"b72a3c8c250ce67d9dd59e06316f982cd77bdb3c":["4a8ec0889b27701f0ad90a25c95b75454e898cf3"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"68496c2200e559fb7802f7575427b7a482659afb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","b72a3c8c250ce67d9dd59e06316f982cd77bdb3c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["68496c2200e559fb7802f7575427b7a482659afb"],"0d49a158012a8ff48f328a4558e4bfcffbaed16f":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"4a8ec0889b27701f0ad90a25c95b75454e898cf3":["b72a3c8c250ce67d9dd59e06316f982cd77bdb3c"],"b72a3c8c250ce67d9dd59e06316f982cd77bdb3c":["68496c2200e559fb7802f7575427b7a482659afb"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["68496c2200e559fb7802f7575427b7a482659afb","0d49a158012a8ff48f328a4558e4bfcffbaed16f"],"68496c2200e559fb7802f7575427b7a482659afb":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"0d49a158012a8ff48f328a4558e4bfcffbaed16f":["4a8ec0889b27701f0ad90a25c95b75454e898cf3"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}