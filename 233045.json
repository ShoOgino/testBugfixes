{"path":"solr/core/src/java/org/apache/solr/util/SimplePostTool#postFiles(File[],OutputStream,String).mjava","commits":[{"id":"2b40eba7ffeb9689a49c3e3ed7f07e2c25a594fa","date":1343692569,"type":0,"author":"Jan Høydahl","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/util/SimplePostTool#postFiles(File[],OutputStream,String).mjava","pathOld":"/dev/null","sourceNew":"  int postFiles(File[] files, OutputStream out, String type) {\n    int filesPosted = 0;\n    for(File srcFile : files) {\n      if(!srcFile.isFile() || srcFile.isHidden())\n        continue;\n      postFile(srcFile, out, type);\n      filesPosted++;\n    }\n    return filesPosted;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f","date":1343768312,"type":0,"author":"Michael McCandless","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/util/SimplePostTool#postFiles(File[],OutputStream,String).mjava","pathOld":"/dev/null","sourceNew":"  int postFiles(File[] files, OutputStream out, String type) {\n    int filesPosted = 0;\n    for(File srcFile : files) {\n      if(!srcFile.isFile() || srcFile.isHidden())\n        continue;\n      postFile(srcFile, out, type);\n      filesPosted++;\n    }\n    return filesPosted;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d6f074e73200c07d54f242d3880a8da5a35ff97b","date":1344507653,"type":0,"author":"Uwe Schindler","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/util/SimplePostTool#postFiles(File[],OutputStream,String).mjava","pathOld":"/dev/null","sourceNew":"  int postFiles(File[] files, OutputStream out, String type) {\n    int filesPosted = 0;\n    for(File srcFile : files) {\n      if(!srcFile.isFile() || srcFile.isHidden())\n        continue;\n      postFile(srcFile, out, type);\n      filesPosted++;\n    }\n    return filesPosted;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c2c3a504730329ae644b009dee43024116605d47","date":1345253449,"type":3,"author":"Jan Høydahl","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/util/SimplePostTool#postFiles(File[],OutputStream,String).mjava","pathOld":"solr/core/src/java/org/apache/solr/util/SimplePostTool#postFiles(File[],OutputStream,String).mjava","sourceNew":"  /**\n   * Posts a list of file names\n   * @return number of files posted\n   */\n  int postFiles(File[] files, OutputStream out, String type) {\n    int filesPosted = 0;\n    for(File srcFile : files) {\n      try {\n        if(!srcFile.isFile() || srcFile.isHidden())\n          continue;\n        postFile(srcFile, out, type);\n        Thread.sleep(delay * 1000);\n        filesPosted++;\n      } catch (InterruptedException e) {\n        throw new RuntimeException();\n      }\n    }\n    return filesPosted;\n  }\n\n","sourceOld":"  int postFiles(File[] files, OutputStream out, String type) {\n    int filesPosted = 0;\n    for(File srcFile : files) {\n      if(!srcFile.isFile() || srcFile.isHidden())\n        continue;\n      postFile(srcFile, out, type);\n      filesPosted++;\n    }\n    return filesPosted;\n  }\n\n","bugFix":null,"bugIntro":["437e65c578cab603d9201916b0e285f3d68aff45"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"70fa1c0f4d75735ff2e1485e059d9bc5efa50598","date":1345296911,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/util/SimplePostTool#postFiles(File[],OutputStream,String).mjava","pathOld":"solr/core/src/java/org/apache/solr/util/SimplePostTool#postFiles(File[],OutputStream,String).mjava","sourceNew":"  /**\n   * Posts a list of file names\n   * @return number of files posted\n   */\n  int postFiles(File[] files, OutputStream out, String type) {\n    int filesPosted = 0;\n    for(File srcFile : files) {\n      try {\n        if(!srcFile.isFile() || srcFile.isHidden())\n          continue;\n        postFile(srcFile, out, type);\n        Thread.sleep(delay * 1000);\n        filesPosted++;\n      } catch (InterruptedException e) {\n        throw new RuntimeException();\n      }\n    }\n    return filesPosted;\n  }\n\n","sourceOld":"  int postFiles(File[] files, OutputStream out, String type) {\n    int filesPosted = 0;\n    for(File srcFile : files) {\n      if(!srcFile.isFile() || srcFile.isHidden())\n        continue;\n      postFile(srcFile, out, type);\n      filesPosted++;\n    }\n    return filesPosted;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"616c1830142ff5c1ddedec1ed898733b73c8e23b","date":1345368925,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/util/SimplePostTool#postFiles(File[],OutputStream,String).mjava","pathOld":"solr/core/src/java/org/apache/solr/util/SimplePostTool#postFiles(File[],OutputStream,String).mjava","sourceNew":"  /**\n   * Posts a list of file names\n   * @return number of files posted\n   */\n  int postFiles(File[] files, OutputStream out, String type) {\n    int filesPosted = 0;\n    for(File srcFile : files) {\n      try {\n        if(!srcFile.isFile() || srcFile.isHidden())\n          continue;\n        postFile(srcFile, out, type);\n        Thread.sleep(delay * 1000);\n        filesPosted++;\n      } catch (InterruptedException e) {\n        throw new RuntimeException();\n      }\n    }\n    return filesPosted;\n  }\n\n","sourceOld":"  int postFiles(File[] files, OutputStream out, String type) {\n    int filesPosted = 0;\n    for(File srcFile : files) {\n      if(!srcFile.isFile() || srcFile.isHidden())\n        continue;\n      postFile(srcFile, out, type);\n      filesPosted++;\n    }\n    return filesPosted;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"437e65c578cab603d9201916b0e285f3d68aff45","date":1427831677,"type":3,"author":"Varun Thacker","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/util/SimplePostTool#postFiles(File[],OutputStream,String).mjava","pathOld":"solr/core/src/java/org/apache/solr/util/SimplePostTool#postFiles(File[],OutputStream,String).mjava","sourceNew":"  /**\n   * Posts a list of file names\n   * @return number of files posted\n   */\n  int postFiles(File[] files, OutputStream out, String type) {\n    int filesPosted = 0;\n    for(File srcFile : files) {\n      try {\n        if(!srcFile.isFile() || srcFile.isHidden())\n          continue;\n        postFile(srcFile, out, type);\n        Thread.sleep(delay * 1000);\n        filesPosted++;\n      } catch (InterruptedException e) {\n        throw new RuntimeException(e);\n      }\n    }\n    return filesPosted;\n  }\n\n","sourceOld":"  /**\n   * Posts a list of file names\n   * @return number of files posted\n   */\n  int postFiles(File[] files, OutputStream out, String type) {\n    int filesPosted = 0;\n    for(File srcFile : files) {\n      try {\n        if(!srcFile.isFile() || srcFile.isHidden())\n          continue;\n        postFile(srcFile, out, type);\n        Thread.sleep(delay * 1000);\n        filesPosted++;\n      } catch (InterruptedException e) {\n        throw new RuntimeException();\n      }\n    }\n    return filesPosted;\n  }\n\n","bugFix":["c2c3a504730329ae644b009dee43024116605d47"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fab172655716b96f7e42376116235017a922de3a","date":1427850611,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/util/SimplePostTool#postFiles(File[],OutputStream,String).mjava","pathOld":"solr/core/src/java/org/apache/solr/util/SimplePostTool#postFiles(File[],OutputStream,String).mjava","sourceNew":"  /**\n   * Posts a list of file names\n   * @return number of files posted\n   */\n  int postFiles(File[] files, OutputStream out, String type) {\n    int filesPosted = 0;\n    for(File srcFile : files) {\n      try {\n        if(!srcFile.isFile() || srcFile.isHidden())\n          continue;\n        postFile(srcFile, out, type);\n        Thread.sleep(delay * 1000);\n        filesPosted++;\n      } catch (InterruptedException e) {\n        throw new RuntimeException(e);\n      }\n    }\n    return filesPosted;\n  }\n\n","sourceOld":"  /**\n   * Posts a list of file names\n   * @return number of files posted\n   */\n  int postFiles(File[] files, OutputStream out, String type) {\n    int filesPosted = 0;\n    for(File srcFile : files) {\n      try {\n        if(!srcFile.isFile() || srcFile.isHidden())\n          continue;\n        postFile(srcFile, out, type);\n        Thread.sleep(delay * 1000);\n        filesPosted++;\n      } catch (InterruptedException e) {\n        throw new RuntimeException();\n      }\n    }\n    return filesPosted;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"2b40eba7ffeb9689a49c3e3ed7f07e2c25a594fa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"616c1830142ff5c1ddedec1ed898733b73c8e23b":["d6f074e73200c07d54f242d3880a8da5a35ff97b","c2c3a504730329ae644b009dee43024116605d47"],"70fa1c0f4d75735ff2e1485e059d9bc5efa50598":["b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f","c2c3a504730329ae644b009dee43024116605d47"],"c2c3a504730329ae644b009dee43024116605d47":["2b40eba7ffeb9689a49c3e3ed7f07e2c25a594fa"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","2b40eba7ffeb9689a49c3e3ed7f07e2c25a594fa"],"d6f074e73200c07d54f242d3880a8da5a35ff97b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","2b40eba7ffeb9689a49c3e3ed7f07e2c25a594fa"],"437e65c578cab603d9201916b0e285f3d68aff45":["c2c3a504730329ae644b009dee43024116605d47"],"fab172655716b96f7e42376116235017a922de3a":["c2c3a504730329ae644b009dee43024116605d47","437e65c578cab603d9201916b0e285f3d68aff45"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["437e65c578cab603d9201916b0e285f3d68aff45"]},"commit2Childs":{"2b40eba7ffeb9689a49c3e3ed7f07e2c25a594fa":["c2c3a504730329ae644b009dee43024116605d47","b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f","d6f074e73200c07d54f242d3880a8da5a35ff97b"],"616c1830142ff5c1ddedec1ed898733b73c8e23b":[],"70fa1c0f4d75735ff2e1485e059d9bc5efa50598":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["2b40eba7ffeb9689a49c3e3ed7f07e2c25a594fa","b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f","d6f074e73200c07d54f242d3880a8da5a35ff97b"],"c2c3a504730329ae644b009dee43024116605d47":["616c1830142ff5c1ddedec1ed898733b73c8e23b","70fa1c0f4d75735ff2e1485e059d9bc5efa50598","437e65c578cab603d9201916b0e285f3d68aff45","fab172655716b96f7e42376116235017a922de3a"],"b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f":["70fa1c0f4d75735ff2e1485e059d9bc5efa50598"],"d6f074e73200c07d54f242d3880a8da5a35ff97b":["616c1830142ff5c1ddedec1ed898733b73c8e23b"],"437e65c578cab603d9201916b0e285f3d68aff45":["fab172655716b96f7e42376116235017a922de3a","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"fab172655716b96f7e42376116235017a922de3a":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["616c1830142ff5c1ddedec1ed898733b73c8e23b","70fa1c0f4d75735ff2e1485e059d9bc5efa50598","fab172655716b96f7e42376116235017a922de3a","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}