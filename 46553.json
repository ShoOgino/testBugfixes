{"path":"modules/queryparser/src/java/org/apache/lucene/queryparser/flexible/standard/parser/JavaCharStream#ExpandBuff(boolean).mjava","commits":[{"id":"4cf7d991c51b580d4b7bf2ad583dba058c0a2dd1","date":1310612214,"type":1,"author":"Christopher John Male","isMerge":false,"pathNew":"modules/queryparser/src/java/org/apache/lucene/queryparser/flexible/standard/parser/JavaCharStream#ExpandBuff(boolean).mjava","pathOld":"lucene/contrib/queryparser/src/java/org/apache/lucene/queryParser/standard/parser/JavaCharStream#ExpandBuff(boolean).mjava","sourceNew":"  protected void ExpandBuff(boolean wrapAround)\n  {\n     char[] newbuffer = new char[bufsize + 2048];\n     int newbufline[] = new int[bufsize + 2048];\n     int newbufcolumn[] = new int[bufsize + 2048];\n\n     try\n     {\n        if (wrapAround)\n        {\n           System.arraycopy(buffer, tokenBegin, newbuffer, 0, bufsize - tokenBegin);\n           System.arraycopy(buffer, 0, newbuffer,\n                                             bufsize - tokenBegin, bufpos);\n           buffer = newbuffer;\n\n           System.arraycopy(bufline, tokenBegin, newbufline, 0, bufsize - tokenBegin);\n           System.arraycopy(bufline, 0, newbufline, bufsize - tokenBegin, bufpos);\n           bufline = newbufline;\n\n           System.arraycopy(bufcolumn, tokenBegin, newbufcolumn, 0, bufsize - tokenBegin);\n           System.arraycopy(bufcolumn, 0, newbufcolumn, bufsize - tokenBegin, bufpos);\n           bufcolumn = newbufcolumn;\n\n           bufpos += (bufsize - tokenBegin);\n        }\n        else\n        {\n           System.arraycopy(buffer, tokenBegin, newbuffer, 0, bufsize - tokenBegin);\n           buffer = newbuffer;\n\n           System.arraycopy(bufline, tokenBegin, newbufline, 0, bufsize - tokenBegin);\n           bufline = newbufline;\n\n           System.arraycopy(bufcolumn, tokenBegin, newbufcolumn, 0, bufsize - tokenBegin);\n           bufcolumn = newbufcolumn;\n\n           bufpos -= tokenBegin;\n        }\n     }\n     catch (Throwable t)\n     {\n        throw new Error(t.getMessage());\n     }\n\n     available = (bufsize += 2048);\n     tokenBegin = 0;\n  }\n\n","sourceOld":"  protected void ExpandBuff(boolean wrapAround)\n  {\n     char[] newbuffer = new char[bufsize + 2048];\n     int newbufline[] = new int[bufsize + 2048];\n     int newbufcolumn[] = new int[bufsize + 2048];\n\n     try\n     {\n        if (wrapAround)\n        {\n           System.arraycopy(buffer, tokenBegin, newbuffer, 0, bufsize - tokenBegin);\n           System.arraycopy(buffer, 0, newbuffer,\n                                             bufsize - tokenBegin, bufpos);\n           buffer = newbuffer;\n\n           System.arraycopy(bufline, tokenBegin, newbufline, 0, bufsize - tokenBegin);\n           System.arraycopy(bufline, 0, newbufline, bufsize - tokenBegin, bufpos);\n           bufline = newbufline;\n\n           System.arraycopy(bufcolumn, tokenBegin, newbufcolumn, 0, bufsize - tokenBegin);\n           System.arraycopy(bufcolumn, 0, newbufcolumn, bufsize - tokenBegin, bufpos);\n           bufcolumn = newbufcolumn;\n\n           bufpos += (bufsize - tokenBegin);\n        }\n        else\n        {\n           System.arraycopy(buffer, tokenBegin, newbuffer, 0, bufsize - tokenBegin);\n           buffer = newbuffer;\n\n           System.arraycopy(bufline, tokenBegin, newbufline, 0, bufsize - tokenBegin);\n           bufline = newbufline;\n\n           System.arraycopy(bufcolumn, tokenBegin, newbufcolumn, 0, bufsize - tokenBegin);\n           bufcolumn = newbufcolumn;\n\n           bufpos -= tokenBegin;\n        }\n     }\n     catch (Throwable t)\n     {\n        throw new Error(t.getMessage());\n     }\n\n     available = (bufsize += 2048);\n     tokenBegin = 0;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/queryparser/src/java/org/apache/lucene/queryparser/flexible/standard/parser/JavaCharStream#ExpandBuff(boolean).mjava","pathOld":"modules/queryparser/src/java/org/apache/lucene/queryparser/flexible/standard/parser/JavaCharStream#ExpandBuff(boolean).mjava","sourceNew":"  protected void ExpandBuff(boolean wrapAround)\n  {\n     char[] newbuffer = new char[bufsize + 2048];\n     int newbufline[] = new int[bufsize + 2048];\n     int newbufcolumn[] = new int[bufsize + 2048];\n\n     try\n     {\n        if (wrapAround)\n        {\n           System.arraycopy(buffer, tokenBegin, newbuffer, 0, bufsize - tokenBegin);\n           System.arraycopy(buffer, 0, newbuffer,\n                                             bufsize - tokenBegin, bufpos);\n           buffer = newbuffer;\n\n           System.arraycopy(bufline, tokenBegin, newbufline, 0, bufsize - tokenBegin);\n           System.arraycopy(bufline, 0, newbufline, bufsize - tokenBegin, bufpos);\n           bufline = newbufline;\n\n           System.arraycopy(bufcolumn, tokenBegin, newbufcolumn, 0, bufsize - tokenBegin);\n           System.arraycopy(bufcolumn, 0, newbufcolumn, bufsize - tokenBegin, bufpos);\n           bufcolumn = newbufcolumn;\n\n           bufpos += (bufsize - tokenBegin);\n        }\n        else\n        {\n           System.arraycopy(buffer, tokenBegin, newbuffer, 0, bufsize - tokenBegin);\n           buffer = newbuffer;\n\n           System.arraycopy(bufline, tokenBegin, newbufline, 0, bufsize - tokenBegin);\n           bufline = newbufline;\n\n           System.arraycopy(bufcolumn, tokenBegin, newbufcolumn, 0, bufsize - tokenBegin);\n           bufcolumn = newbufcolumn;\n\n           bufpos -= tokenBegin;\n        }\n     }\n     catch (Throwable t)\n     {\n        throw new Error(t.getMessage());\n     }\n\n     available = (bufsize += 2048);\n     tokenBegin = 0;\n  }\n\n","sourceOld":"  protected void ExpandBuff(boolean wrapAround)\n  {\n     char[] newbuffer = new char[bufsize + 2048];\n     int newbufline[] = new int[bufsize + 2048];\n     int newbufcolumn[] = new int[bufsize + 2048];\n\n     try\n     {\n        if (wrapAround)\n        {\n           System.arraycopy(buffer, tokenBegin, newbuffer, 0, bufsize - tokenBegin);\n           System.arraycopy(buffer, 0, newbuffer,\n                                             bufsize - tokenBegin, bufpos);\n           buffer = newbuffer;\n\n           System.arraycopy(bufline, tokenBegin, newbufline, 0, bufsize - tokenBegin);\n           System.arraycopy(bufline, 0, newbufline, bufsize - tokenBegin, bufpos);\n           bufline = newbufline;\n\n           System.arraycopy(bufcolumn, tokenBegin, newbufcolumn, 0, bufsize - tokenBegin);\n           System.arraycopy(bufcolumn, 0, newbufcolumn, bufsize - tokenBegin, bufpos);\n           bufcolumn = newbufcolumn;\n\n           bufpos += (bufsize - tokenBegin);\n        }\n        else\n        {\n           System.arraycopy(buffer, tokenBegin, newbuffer, 0, bufsize - tokenBegin);\n           buffer = newbuffer;\n\n           System.arraycopy(bufline, tokenBegin, newbufline, 0, bufsize - tokenBegin);\n           bufline = newbufline;\n\n           System.arraycopy(bufcolumn, tokenBegin, newbufcolumn, 0, bufsize - tokenBegin);\n           bufcolumn = newbufcolumn;\n\n           bufpos -= tokenBegin;\n        }\n     }\n     catch (Throwable t)\n     {\n        throw new Error(t.getMessage());\n     }\n\n     available = (bufsize += 2048);\n     tokenBegin = 0;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"4cf7d991c51b580d4b7bf2ad583dba058c0a2dd1":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["4cf7d991c51b580d4b7bf2ad583dba058c0a2dd1"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b89678825b68eccaf09e6ab71675fc0b0af1e099"]},"commit2Childs":{"4cf7d991c51b580d4b7bf2ad583dba058c0a2dd1":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["4cf7d991c51b580d4b7bf2ad583dba058c0a2dd1"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}