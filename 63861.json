{"path":"lucene/core/src/java/org/apache/lucene/search/NRTManager#afterRefresh().mjava","commits":[{"id":"c380c22ff3b659b2d7412a3335f853d354d17568","date":1329505731,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/NRTManager#afterRefresh().mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  protected void afterRefresh() {\n    genLock.lock();\n    try {\n      if (searchingGen != MAX_SEARCHER_GEN) {\n        // update searchingGen:\n        assert lastRefreshGen >= searchingGen;\n        searchingGen = lastRefreshGen;\n      }\n      // wake up threads if we have a new generation:\n      newGeneration.signalAll();\n    } finally {\n      genLock.unlock();\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a333953f2d3ad264dca2d3f4c5b46ad3077b0838","date":1354369573,"type":5,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/NRTManager#afterMaybeRefresh().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/NRTManager#afterRefresh().mjava","sourceNew":"  @Override\n  protected void afterMaybeRefresh() {\n    genLock.lock();\n    try {\n      if (searchingGen != MAX_SEARCHER_GEN) {\n        // update searchingGen:\n        assert lastRefreshGen >= searchingGen;\n        searchingGen = lastRefreshGen;\n      }\n      // wake up threads if we have a new generation:\n      newGeneration.signalAll();\n    } finally {\n      genLock.unlock();\n    }\n  }\n\n","sourceOld":"  @Override\n  protected void afterRefresh() {\n    genLock.lock();\n    try {\n      if (searchingGen != MAX_SEARCHER_GEN) {\n        // update searchingGen:\n        assert lastRefreshGen >= searchingGen;\n        searchingGen = lastRefreshGen;\n      }\n      // wake up threads if we have a new generation:\n      newGeneration.signalAll();\n    } finally {\n      genLock.unlock();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"407687e67faf6e1f02a211ca078d8e3eed631027","date":1355157407,"type":4,"author":"Robert Muir","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/search/NRTManager#afterRefresh().mjava","sourceNew":null,"sourceOld":"  @Override\n  protected void afterRefresh() {\n    genLock.lock();\n    try {\n      if (searchingGen != MAX_SEARCHER_GEN) {\n        // update searchingGen:\n        assert lastRefreshGen >= searchingGen;\n        searchingGen = lastRefreshGen;\n      }\n      // wake up threads if we have a new generation:\n      newGeneration.signalAll();\n    } finally {\n      genLock.unlock();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a333953f2d3ad264dca2d3f4c5b46ad3077b0838":["c380c22ff3b659b2d7412a3335f853d354d17568"],"c380c22ff3b659b2d7412a3335f853d354d17568":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"407687e67faf6e1f02a211ca078d8e3eed631027":["c380c22ff3b659b2d7412a3335f853d354d17568","a333953f2d3ad264dca2d3f4c5b46ad3077b0838"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a333953f2d3ad264dca2d3f4c5b46ad3077b0838"]},"commit2Childs":{"a333953f2d3ad264dca2d3f4c5b46ad3077b0838":["407687e67faf6e1f02a211ca078d8e3eed631027","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"c380c22ff3b659b2d7412a3335f853d354d17568":["a333953f2d3ad264dca2d3f4c5b46ad3077b0838","407687e67faf6e1f02a211ca078d8e3eed631027"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c380c22ff3b659b2d7412a3335f853d354d17568"],"407687e67faf6e1f02a211ca078d8e3eed631027":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["407687e67faf6e1f02a211ca078d8e3eed631027","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}