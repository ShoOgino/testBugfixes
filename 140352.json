{"path":"lucene/sandbox/src/java/org/apache/lucene/sandbox/queries/FuzzyLikeThisQuery#addTerms(String,String,float,int).mjava","commits":[{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/sandbox/src/java/org/apache/lucene/sandbox/queries/FuzzyLikeThisQuery#addTerms(String,String,float,int).mjava","pathOld":"lucene/contrib/sandbox/src/java/org/apache/lucene/sandbox/queries/FuzzyLikeThisQuery#addTerms(String,String,float,int).mjava","sourceNew":"    /**\n     * Adds user input for \"fuzzification\" \n     * @param queryString The string which will be parsed by the analyzer and for which fuzzy variants will be parsed\n     * @param fieldName\n     * @param minSimilarity The minimum similarity of the term variants (see FuzzyTermsEnum)\n     * @param prefixLength Length of required common prefix on variant terms (see FuzzyTermsEnum)\n     */\n    public void addTerms(String queryString, String fieldName,float minSimilarity, int prefixLength) \n    {\n    \tfieldVals.add(new FieldVals(fieldName,minSimilarity,prefixLength,queryString));\n    }\n\n","sourceOld":"    /**\n     * Adds user input for \"fuzzification\" \n     * @param queryString The string which will be parsed by the analyzer and for which fuzzy variants will be parsed\n     * @param fieldName\n     * @param minSimilarity The minimum similarity of the term variants (see FuzzyTermsEnum)\n     * @param prefixLength Length of required common prefix on variant terms (see FuzzyTermsEnum)\n     */\n    public void addTerms(String queryString, String fieldName,float minSimilarity, int prefixLength) \n    {\n    \tfieldVals.add(new FieldVals(fieldName,minSimilarity,prefixLength,queryString));\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4093b270ba337f9c25a4c0e6cb2ae2c07f697376","date":1347897716,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"lucene/sandbox/src/java/org/apache/lucene/sandbox/queries/FuzzyLikeThisQuery#addTerms(String,String,float,int).mjava","pathOld":"lucene/sandbox/src/java/org/apache/lucene/sandbox/queries/FuzzyLikeThisQuery#addTerms(String,String,float,int).mjava","sourceNew":"    /**\n     * Adds user input for \"fuzzification\" \n     * @param queryString The string which will be parsed by the analyzer and for which fuzzy variants will be parsed\n     * @param fieldName\n     * @param minSimilarity The minimum similarity of the term variants (see FuzzyTermsEnum)\n     * @param prefixLength Length of required common prefix on variant terms (see FuzzyTermsEnum)\n     */\n    public void addTerms(String queryString, String fieldName,float minSimilarity, int prefixLength) \n    {\n      fieldVals.add(new FieldVals(fieldName,minSimilarity,prefixLength,queryString));\n    }\n\n","sourceOld":"    /**\n     * Adds user input for \"fuzzification\" \n     * @param queryString The string which will be parsed by the analyzer and for which fuzzy variants will be parsed\n     * @param fieldName\n     * @param minSimilarity The minimum similarity of the term variants (see FuzzyTermsEnum)\n     * @param prefixLength Length of required common prefix on variant terms (see FuzzyTermsEnum)\n     */\n    public void addTerms(String queryString, String fieldName,float minSimilarity, int prefixLength) \n    {\n    \tfieldVals.add(new FieldVals(fieldName,minSimilarity,prefixLength,queryString));\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c7bd1fdddb8e84c1857d1a55c32ced51f0ed2069","date":1348430063,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/sandbox/src/java/org/apache/lucene/sandbox/queries/FuzzyLikeThisQuery#addTerms(String,String,float,int).mjava","pathOld":"lucene/sandbox/src/java/org/apache/lucene/sandbox/queries/FuzzyLikeThisQuery#addTerms(String,String,float,int).mjava","sourceNew":"    /**\n     * Adds user input for \"fuzzification\" \n     * @param queryString The string which will be parsed by the analyzer and for which fuzzy variants will be parsed\n     * @param minSimilarity The minimum similarity of the term variants (see FuzzyTermsEnum)\n     * @param prefixLength Length of required common prefix on variant terms (see FuzzyTermsEnum)\n     */\n    public void addTerms(String queryString, String fieldName,float minSimilarity, int prefixLength) \n    {\n      fieldVals.add(new FieldVals(fieldName,minSimilarity,prefixLength,queryString));\n    }\n\n","sourceOld":"    /**\n     * Adds user input for \"fuzzification\" \n     * @param queryString The string which will be parsed by the analyzer and for which fuzzy variants will be parsed\n     * @param fieldName\n     * @param minSimilarity The minimum similarity of the term variants (see FuzzyTermsEnum)\n     * @param prefixLength Length of required common prefix on variant terms (see FuzzyTermsEnum)\n     */\n    public void addTerms(String queryString, String fieldName,float minSimilarity, int prefixLength) \n    {\n      fieldVals.add(new FieldVals(fieldName,minSimilarity,prefixLength,queryString));\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b9c5c0e8e826d8fd169840564bcf8606cf81d15b","date":1473715404,"type":3,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/sandbox/src/java/org/apache/lucene/sandbox/queries/FuzzyLikeThisQuery#addTerms(String,String,float,int).mjava","pathOld":"lucene/sandbox/src/java/org/apache/lucene/sandbox/queries/FuzzyLikeThisQuery#addTerms(String,String,float,int).mjava","sourceNew":"  /**\n   * Adds user input for \"fuzzification\" \n   * @param queryString The string which will be parsed by the analyzer and for which fuzzy variants will be parsed\n   * @param minSimilarity The minimum similarity of the term variants; must be 0, 1 or 2 (see FuzzyTermsEnum)\n   * @param prefixLength Length of required common prefix on variant terms (see FuzzyTermsEnum)\n   */\n  public void addTerms(String queryString, String fieldName,float minSimilarity, int prefixLength) \n  {\n    int maxEdits = (int) minSimilarity;\n    if (maxEdits != minSimilarity || maxEdits < 0 || maxEdits > LevenshteinAutomata.MAXIMUM_SUPPORTED_DISTANCE) {\n      throw new IllegalArgumentException(\"minSimilarity must integer value between 0 and \" + LevenshteinAutomata.MAXIMUM_SUPPORTED_DISTANCE + \", inclusive; got \" + minSimilarity);\n    }\n    fieldVals.add(new FieldVals(fieldName,maxEdits,prefixLength,queryString));\n  }\n\n","sourceOld":"    /**\n     * Adds user input for \"fuzzification\" \n     * @param queryString The string which will be parsed by the analyzer and for which fuzzy variants will be parsed\n     * @param minSimilarity The minimum similarity of the term variants (see FuzzyTermsEnum)\n     * @param prefixLength Length of required common prefix on variant terms (see FuzzyTermsEnum)\n     */\n    public void addTerms(String queryString, String fieldName,float minSimilarity, int prefixLength) \n    {\n      fieldVals.add(new FieldVals(fieldName,minSimilarity,prefixLength,queryString));\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"89424def13674ea17829b41c5883c54ecc31a132","date":1473767373,"type":3,"author":"Noble Paul","isMerge":true,"pathNew":"lucene/sandbox/src/java/org/apache/lucene/sandbox/queries/FuzzyLikeThisQuery#addTerms(String,String,float,int).mjava","pathOld":"lucene/sandbox/src/java/org/apache/lucene/sandbox/queries/FuzzyLikeThisQuery#addTerms(String,String,float,int).mjava","sourceNew":"  /**\n   * Adds user input for \"fuzzification\" \n   * @param queryString The string which will be parsed by the analyzer and for which fuzzy variants will be parsed\n   * @param minSimilarity The minimum similarity of the term variants; must be 0, 1 or 2 (see FuzzyTermsEnum)\n   * @param prefixLength Length of required common prefix on variant terms (see FuzzyTermsEnum)\n   */\n  public void addTerms(String queryString, String fieldName,float minSimilarity, int prefixLength) \n  {\n    int maxEdits = (int) minSimilarity;\n    if (maxEdits != minSimilarity || maxEdits < 0 || maxEdits > LevenshteinAutomata.MAXIMUM_SUPPORTED_DISTANCE) {\n      throw new IllegalArgumentException(\"minSimilarity must integer value between 0 and \" + LevenshteinAutomata.MAXIMUM_SUPPORTED_DISTANCE + \", inclusive; got \" + minSimilarity);\n    }\n    fieldVals.add(new FieldVals(fieldName,maxEdits,prefixLength,queryString));\n  }\n\n","sourceOld":"    /**\n     * Adds user input for \"fuzzification\" \n     * @param queryString The string which will be parsed by the analyzer and for which fuzzy variants will be parsed\n     * @param minSimilarity The minimum similarity of the term variants (see FuzzyTermsEnum)\n     * @param prefixLength Length of required common prefix on variant terms (see FuzzyTermsEnum)\n     */\n    public void addTerms(String queryString, String fieldName,float minSimilarity, int prefixLength) \n    {\n      fieldVals.add(new FieldVals(fieldName,minSimilarity,prefixLength,queryString));\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"17e5da53e4e5bd659e22add9bba1cfa222e7e30d","date":1475435902,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"lucene/sandbox/src/java/org/apache/lucene/sandbox/queries/FuzzyLikeThisQuery#addTerms(String,String,float,int).mjava","pathOld":"lucene/sandbox/src/java/org/apache/lucene/sandbox/queries/FuzzyLikeThisQuery#addTerms(String,String,float,int).mjava","sourceNew":"  /**\n   * Adds user input for \"fuzzification\" \n   * @param queryString The string which will be parsed by the analyzer and for which fuzzy variants will be parsed\n   * @param minSimilarity The minimum similarity of the term variants; must be 0, 1 or 2 (see FuzzyTermsEnum)\n   * @param prefixLength Length of required common prefix on variant terms (see FuzzyTermsEnum)\n   */\n  public void addTerms(String queryString, String fieldName,float minSimilarity, int prefixLength) \n  {\n    int maxEdits = (int) minSimilarity;\n    if (maxEdits != minSimilarity || maxEdits < 0 || maxEdits > LevenshteinAutomata.MAXIMUM_SUPPORTED_DISTANCE) {\n      throw new IllegalArgumentException(\"minSimilarity must integer value between 0 and \" + LevenshteinAutomata.MAXIMUM_SUPPORTED_DISTANCE + \", inclusive; got \" + minSimilarity);\n    }\n    fieldVals.add(new FieldVals(fieldName,maxEdits,prefixLength,queryString));\n  }\n\n","sourceOld":"    /**\n     * Adds user input for \"fuzzification\" \n     * @param queryString The string which will be parsed by the analyzer and for which fuzzy variants will be parsed\n     * @param minSimilarity The minimum similarity of the term variants (see FuzzyTermsEnum)\n     * @param prefixLength Length of required common prefix on variant terms (see FuzzyTermsEnum)\n     */\n    public void addTerms(String queryString, String fieldName,float minSimilarity, int prefixLength) \n    {\n      fieldVals.add(new FieldVals(fieldName,minSimilarity,prefixLength,queryString));\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"lucene/sandbox/src/java/org/apache/lucene/sandbox/queries/FuzzyLikeThisQuery#addTerms(String,String,float,int).mjava","pathOld":"lucene/sandbox/src/java/org/apache/lucene/sandbox/queries/FuzzyLikeThisQuery#addTerms(String,String,float,int).mjava","sourceNew":"  /**\n   * Adds user input for \"fuzzification\" \n   * @param queryString The string which will be parsed by the analyzer and for which fuzzy variants will be parsed\n   * @param minSimilarity The minimum similarity of the term variants; must be 0, 1 or 2 (see FuzzyTermsEnum)\n   * @param prefixLength Length of required common prefix on variant terms (see FuzzyTermsEnum)\n   */\n  public void addTerms(String queryString, String fieldName,float minSimilarity, int prefixLength) \n  {\n    int maxEdits = (int) minSimilarity;\n    if (maxEdits != minSimilarity || maxEdits < 0 || maxEdits > LevenshteinAutomata.MAXIMUM_SUPPORTED_DISTANCE) {\n      throw new IllegalArgumentException(\"minSimilarity must integer value between 0 and \" + LevenshteinAutomata.MAXIMUM_SUPPORTED_DISTANCE + \", inclusive; got \" + minSimilarity);\n    }\n    fieldVals.add(new FieldVals(fieldName,maxEdits,prefixLength,queryString));\n  }\n\n","sourceOld":"    /**\n     * Adds user input for \"fuzzification\" \n     * @param queryString The string which will be parsed by the analyzer and for which fuzzy variants will be parsed\n     * @param minSimilarity The minimum similarity of the term variants (see FuzzyTermsEnum)\n     * @param prefixLength Length of required common prefix on variant terms (see FuzzyTermsEnum)\n     */\n    public void addTerms(String queryString, String fieldName,float minSimilarity, int prefixLength) \n    {\n      fieldVals.add(new FieldVals(fieldName,minSimilarity,prefixLength,queryString));\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"c7bd1fdddb8e84c1857d1a55c32ced51f0ed2069":["4093b270ba337f9c25a4c0e6cb2ae2c07f697376"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"17e5da53e4e5bd659e22add9bba1cfa222e7e30d":["c7bd1fdddb8e84c1857d1a55c32ced51f0ed2069","89424def13674ea17829b41c5883c54ecc31a132"],"b9c5c0e8e826d8fd169840564bcf8606cf81d15b":["c7bd1fdddb8e84c1857d1a55c32ced51f0ed2069"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["c7bd1fdddb8e84c1857d1a55c32ced51f0ed2069","17e5da53e4e5bd659e22add9bba1cfa222e7e30d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["17e5da53e4e5bd659e22add9bba1cfa222e7e30d"],"4093b270ba337f9c25a4c0e6cb2ae2c07f697376":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"89424def13674ea17829b41c5883c54ecc31a132":["c7bd1fdddb8e84c1857d1a55c32ced51f0ed2069","b9c5c0e8e826d8fd169840564bcf8606cf81d15b"]},"commit2Childs":{"c7bd1fdddb8e84c1857d1a55c32ced51f0ed2069":["17e5da53e4e5bd659e22add9bba1cfa222e7e30d","b9c5c0e8e826d8fd169840564bcf8606cf81d15b","4cce5816ef15a48a0bc11e5d400497ee4301dd3b","89424def13674ea17829b41c5883c54ecc31a132"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["4093b270ba337f9c25a4c0e6cb2ae2c07f697376"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"17e5da53e4e5bd659e22add9bba1cfa222e7e30d":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"b9c5c0e8e826d8fd169840564bcf8606cf81d15b":["89424def13674ea17829b41c5883c54ecc31a132"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"4093b270ba337f9c25a4c0e6cb2ae2c07f697376":["c7bd1fdddb8e84c1857d1a55c32ced51f0ed2069"],"89424def13674ea17829b41c5883c54ecc31a132":["17e5da53e4e5bd659e22add9bba1cfa222e7e30d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}