{"path":"lucene/test-framework/src/java/org/apache/lucene/search/RandomOrderCollector#shuffle().mjava","commits":[{"id":"658a1d7b74c99b3d845fb1f852331a1c4623368e","date":1396631281,"type":1,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/search/RandomOrderCollector#shuffle().mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/search/AssertingBulkOutOfOrderScorer#shuffle(int[],float[],int[],int).mjava","sourceNew":"  private void shuffle() {\n    for (int i = buffered - 1; i > 0; --i) {\n      final int other = random.nextInt(i + 1);\n\n      final int tmpDoc = docIDs[i];\n      docIDs[i] = docIDs[other];\n      docIDs[other] = tmpDoc;\n\n      final float tmpScore = scores[i];\n      scores[i] = scores[other];\n      scores[other] = tmpScore;\n\n      final int tmpFreq = freqs[i];\n      freqs[i] = freqs[other];\n      freqs[other] = tmpFreq;\n    }\n  }\n\n","sourceOld":"  private void shuffle(int[] docIDs, float[] scores, int[] freqs, int size) {\n    for (int i = size - 1; i > 0; --i) {\n      final int other = random.nextInt(i + 1);\n\n      final int tmpDoc = docIDs[i];\n      docIDs[i] = docIDs[other];\n      docIDs[other] = tmpDoc;\n\n      final float tmpScore = scores[i];\n      scores[i] = scores[other];\n      scores[other] = tmpScore;\n      \n      final int tmpFreq = freqs[i];\n      freqs[i] = freqs[other];\n      freqs[other] = tmpFreq;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"15e323346eac5e4685c0a9f2df85eb96b4239bbb","date":1396688577,"type":1,"author":"Dawid Weiss","isMerge":true,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/search/RandomOrderCollector#shuffle().mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/search/AssertingBulkOutOfOrderScorer#shuffle(int[],float[],int[],int).mjava","sourceNew":"  private void shuffle() {\n    for (int i = buffered - 1; i > 0; --i) {\n      final int other = random.nextInt(i + 1);\n\n      final int tmpDoc = docIDs[i];\n      docIDs[i] = docIDs[other];\n      docIDs[other] = tmpDoc;\n\n      final float tmpScore = scores[i];\n      scores[i] = scores[other];\n      scores[other] = tmpScore;\n\n      final int tmpFreq = freqs[i];\n      freqs[i] = freqs[other];\n      freqs[other] = tmpFreq;\n    }\n  }\n\n","sourceOld":"  private void shuffle(int[] docIDs, float[] scores, int[] freqs, int size) {\n    for (int i = size - 1; i > 0; --i) {\n      final int other = random.nextInt(i + 1);\n\n      final int tmpDoc = docIDs[i];\n      docIDs[i] = docIDs[other];\n      docIDs[other] = tmpDoc;\n\n      final float tmpScore = scores[i];\n      scores[i] = scores[other];\n      scores[other] = tmpScore;\n      \n      final int tmpFreq = freqs[i];\n      freqs[i] = freqs[other];\n      freqs[other] = tmpFreq;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f582f18c13d4852b01d4fe0a0196432c5c6f2b7f","date":1421314520,"type":4,"author":"Adrien Grand","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/test-framework/src/java/org/apache/lucene/search/RandomOrderCollector#shuffle().mjava","sourceNew":null,"sourceOld":"  private void shuffle() {\n    for (int i = buffered - 1; i > 0; --i) {\n      final int other = random.nextInt(i + 1);\n\n      final int tmpDoc = docIDs[i];\n      docIDs[i] = docIDs[other];\n      docIDs[other] = tmpDoc;\n\n      final float tmpScore = scores[i];\n      scores[i] = scores[other];\n      scores[other] = tmpScore;\n\n      final int tmpFreq = freqs[i];\n      freqs[i] = freqs[other];\n      freqs[other] = tmpFreq;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"f582f18c13d4852b01d4fe0a0196432c5c6f2b7f":["658a1d7b74c99b3d845fb1f852331a1c4623368e"],"15e323346eac5e4685c0a9f2df85eb96b4239bbb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","658a1d7b74c99b3d845fb1f852331a1c4623368e"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"658a1d7b74c99b3d845fb1f852331a1c4623368e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["f582f18c13d4852b01d4fe0a0196432c5c6f2b7f"]},"commit2Childs":{"f582f18c13d4852b01d4fe0a0196432c5c6f2b7f":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"15e323346eac5e4685c0a9f2df85eb96b4239bbb":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["15e323346eac5e4685c0a9f2df85eb96b4239bbb","658a1d7b74c99b3d845fb1f852331a1c4623368e"],"658a1d7b74c99b3d845fb1f852331a1c4623368e":["f582f18c13d4852b01d4fe0a0196432c5c6f2b7f","15e323346eac5e4685c0a9f2df85eb96b4239bbb"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["15e323346eac5e4685c0a9f2df85eb96b4239bbb","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}