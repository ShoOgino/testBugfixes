{"path":"src/java/org/apache/lucene/search/spans/SpanScorer#setFreqCurrentDoc().mjava","commits":[{"id":"7c62564d5adf82d1fc178ea3e881841b5ae83a94","date":1144164358,"type":0,"author":"Yonik Seeley","isMerge":false,"pathNew":"src/java/org/apache/lucene/search/spans/SpanScorer#setFreqCurrentDoc().mjava","pathOld":"/dev/null","sourceNew":"  private boolean setFreqCurrentDoc() throws IOException {\n    if (! more) {\n      return false;\n    }\n    doc = spans.doc();\n    freq = 0.0f;\n    while (more && doc == spans.doc()) {\n      int matchLength = spans.end() - spans.start();\n      freq += getSimilarity().sloppyFreq(matchLength);\n      more = spans.next();\n    }\n    return more || (freq != 0);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["7903c83b7b751fd2ba24d44bc08b5d8ffceaf7ee"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"32c97797222c63ae0cce3322818565bdb8d2b8c9","date":1177418982,"type":3,"author":"Grant Ingersoll","isMerge":false,"pathNew":"src/java/org/apache/lucene/search/spans/SpanScorer#setFreqCurrentDoc().mjava","pathOld":"src/java/org/apache/lucene/search/spans/SpanScorer#setFreqCurrentDoc().mjava","sourceNew":"  protected boolean setFreqCurrentDoc() throws IOException {\n    if (! more) {\n      return false;\n    }\n    doc = spans.doc();\n    freq = 0.0f;\n    while (more && doc == spans.doc()) {\n      int matchLength = spans.end() - spans.start();\n      freq += getSimilarity().sloppyFreq(matchLength);\n      more = spans.next();\n    }\n    return more || (freq != 0);\n  }\n\n","sourceOld":"  private boolean setFreqCurrentDoc() throws IOException {\n    if (! more) {\n      return false;\n    }\n    doc = spans.doc();\n    freq = 0.0f;\n    while (more && doc == spans.doc()) {\n      int matchLength = spans.end() - spans.start();\n      freq += getSimilarity().sloppyFreq(matchLength);\n      more = spans.next();\n    }\n    return more || (freq != 0);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"7903c83b7b751fd2ba24d44bc08b5d8ffceaf7ee","date":1221593107,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/search/spans/SpanScorer#setFreqCurrentDoc().mjava","pathOld":"src/java/org/apache/lucene/search/spans/SpanScorer#setFreqCurrentDoc().mjava","sourceNew":"  protected boolean setFreqCurrentDoc() throws IOException {\n    if (! more) {\n      return false;\n    }\n    doc = spans.doc();\n    freq = 0.0f;\n    do {\n      int matchLength = spans.end() - spans.start();\n      freq += getSimilarity().sloppyFreq(matchLength);\n      more = spans.next();\n    } while (more && (doc == spans.doc()));\n    return true;\n  }\n\n","sourceOld":"  protected boolean setFreqCurrentDoc() throws IOException {\n    if (! more) {\n      return false;\n    }\n    doc = spans.doc();\n    freq = 0.0f;\n    while (more && doc == spans.doc()) {\n      int matchLength = spans.end() - spans.start();\n      freq += getSimilarity().sloppyFreq(matchLength);\n      more = spans.next();\n    }\n    return more || (freq != 0);\n  }\n\n","bugFix":["7c62564d5adf82d1fc178ea3e881841b5ae83a94"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"30a558487f2298c2c19ceca9103c1b6865d64708","date":1244393921,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/search/spans/SpanScorer#setFreqCurrentDoc().mjava","pathOld":"src/java/org/apache/lucene/search/spans/SpanScorer#setFreqCurrentDoc().mjava","sourceNew":"  protected boolean setFreqCurrentDoc() throws IOException {\n    if (!more) {\n      return false;\n    }\n    doc = spans.doc();\n    freq = 0.0f;\n    do {\n      int matchLength = spans.end() - spans.start();\n      freq += getSimilarity().sloppyFreq(matchLength);\n      more = spans.next();\n    } while (more && (doc == spans.doc()));\n    return true;\n  }\n\n","sourceOld":"  protected boolean setFreqCurrentDoc() throws IOException {\n    if (! more) {\n      return false;\n    }\n    doc = spans.doc();\n    freq = 0.0f;\n    do {\n      int matchLength = spans.end() - spans.start();\n      freq += getSimilarity().sloppyFreq(matchLength);\n      more = spans.next();\n    } while (more && (doc == spans.doc()));\n    return true;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/search/spans/SpanScorer#setFreqCurrentDoc().mjava","pathOld":"src/java/org/apache/lucene/search/spans/SpanScorer#setFreqCurrentDoc().mjava","sourceNew":"  protected boolean setFreqCurrentDoc() throws IOException {\n    if (!more) {\n      return false;\n    }\n    doc = spans.doc();\n    freq = 0.0f;\n    do {\n      int matchLength = spans.end() - spans.start();\n      freq += getSimilarity().sloppyFreq(matchLength);\n      more = spans.next();\n    } while (more && (doc == spans.doc()));\n    return true;\n  }\n\n","sourceOld":"  protected boolean setFreqCurrentDoc() throws IOException {\n    if (!more) {\n      return false;\n    }\n    doc = spans.doc();\n    freq = 0.0f;\n    do {\n      int matchLength = spans.end() - spans.start();\n      freq += getSimilarity().sloppyFreq(matchLength);\n      more = spans.next();\n    } while (more && (doc == spans.doc()));\n    return true;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"30a558487f2298c2c19ceca9103c1b6865d64708":["7903c83b7b751fd2ba24d44bc08b5d8ffceaf7ee"],"7903c83b7b751fd2ba24d44bc08b5d8ffceaf7ee":["32c97797222c63ae0cce3322818565bdb8d2b8c9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["30a558487f2298c2c19ceca9103c1b6865d64708"],"32c97797222c63ae0cce3322818565bdb8d2b8c9":["7c62564d5adf82d1fc178ea3e881841b5ae83a94"],"7c62564d5adf82d1fc178ea3e881841b5ae83a94":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"30a558487f2298c2c19ceca9103c1b6865d64708":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"7903c83b7b751fd2ba24d44bc08b5d8ffceaf7ee":["30a558487f2298c2c19ceca9103c1b6865d64708"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["7c62564d5adf82d1fc178ea3e881841b5ae83a94"],"32c97797222c63ae0cce3322818565bdb8d2b8c9":["7903c83b7b751fd2ba24d44bc08b5d8ffceaf7ee"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"7c62564d5adf82d1fc178ea3e881841b5ae83a94":["32c97797222c63ae0cce3322818565bdb8d2b8c9"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}