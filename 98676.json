{"path":"modules/benchmark/src/java/org/apache/lucene/benchmark/byTask/tasks/WriteLineDocTask#doLogic().mjava","commits":[{"id":"ecc11368dc265bfdad90214f8bf5da99016ab1e2","date":1294144090,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"modules/benchmark/src/java/org/apache/lucene/benchmark/byTask/tasks/WriteLineDocTask#doLogic().mjava","pathOld":"lucene/contrib/benchmark/src/java/org/apache/lucene/benchmark/byTask/tasks/WriteLineDocTask#doLogic().mjava","sourceNew":"  @Override\n  public int doLogic() throws Exception {\n    Document doc = docSize > 0 ? docMaker.makeDocument(docSize) : docMaker.makeDocument();\n\n    Matcher matcher = threadNormalizer.get();\n    if (matcher == null) {\n      matcher = Pattern.compile(\"[\\t\\r\\n]+\").matcher(\"\");\n      threadNormalizer.set(matcher);\n    }\n    \n    Field f = doc.getField(DocMaker.BODY_FIELD);\n    String body = f != null ? matcher.reset(f.stringValue()).replaceAll(\" \") : \"\";\n    \n    f = doc.getField(DocMaker.TITLE_FIELD);\n    String title = f != null ? matcher.reset(f.stringValue()).replaceAll(\" \") : \"\";\n    \n    if (body.length() > 0 || title.length() > 0) {\n      \n      f = doc.getField(DocMaker.DATE_FIELD);\n      String date = f != null ? matcher.reset(f.stringValue()).replaceAll(\" \") : \"\";\n      \n      StringBuilder sb = threadBuffer.get();\n      if (sb == null) {\n        sb = new StringBuilder();\n        threadBuffer.set(sb);\n      }\n      sb.setLength(0);\n      sb.append(title).append(SEP).append(date).append(SEP).append(body);\n      // lineFileOut is a PrintWriter, which synchronizes internally in println.\n      lineFileOut.println(sb.toString());\n    }\n    return 1;\n  }\n\n","sourceOld":"  @Override\n  public int doLogic() throws Exception {\n    Document doc = docSize > 0 ? docMaker.makeDocument(docSize) : docMaker.makeDocument();\n\n    Matcher matcher = threadNormalizer.get();\n    if (matcher == null) {\n      matcher = Pattern.compile(\"[\\t\\r\\n]+\").matcher(\"\");\n      threadNormalizer.set(matcher);\n    }\n    \n    Field f = doc.getField(DocMaker.BODY_FIELD);\n    String body = f != null ? matcher.reset(f.stringValue()).replaceAll(\" \") : \"\";\n    \n    f = doc.getField(DocMaker.TITLE_FIELD);\n    String title = f != null ? matcher.reset(f.stringValue()).replaceAll(\" \") : \"\";\n    \n    if (body.length() > 0 || title.length() > 0) {\n      \n      f = doc.getField(DocMaker.DATE_FIELD);\n      String date = f != null ? matcher.reset(f.stringValue()).replaceAll(\" \") : \"\";\n      \n      StringBuilder sb = threadBuffer.get();\n      if (sb == null) {\n        sb = new StringBuilder();\n        threadBuffer.set(sb);\n      }\n      sb.setLength(0);\n      sb.append(title).append(SEP).append(date).append(SEP).append(body);\n      // lineFileOut is a PrintWriter, which synchronizes internally in println.\n      lineFileOut.println(sb.toString());\n    }\n    return 1;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"70ad682703b8585f5d0a637efec044d57ec05efb","date":1294259117,"type":1,"author":"Simon Willnauer","isMerge":true,"pathNew":"modules/benchmark/src/java/org/apache/lucene/benchmark/byTask/tasks/WriteLineDocTask#doLogic().mjava","pathOld":"lucene/contrib/benchmark/src/java/org/apache/lucene/benchmark/byTask/tasks/WriteLineDocTask#doLogic().mjava","sourceNew":"  @Override\n  public int doLogic() throws Exception {\n    Document doc = docSize > 0 ? docMaker.makeDocument(docSize) : docMaker.makeDocument();\n\n    Matcher matcher = threadNormalizer.get();\n    if (matcher == null) {\n      matcher = Pattern.compile(\"[\\t\\r\\n]+\").matcher(\"\");\n      threadNormalizer.set(matcher);\n    }\n    \n    Field f = doc.getField(DocMaker.BODY_FIELD);\n    String body = f != null ? matcher.reset(f.stringValue()).replaceAll(\" \") : \"\";\n    \n    f = doc.getField(DocMaker.TITLE_FIELD);\n    String title = f != null ? matcher.reset(f.stringValue()).replaceAll(\" \") : \"\";\n    \n    if (body.length() > 0 || title.length() > 0) {\n      \n      f = doc.getField(DocMaker.DATE_FIELD);\n      String date = f != null ? matcher.reset(f.stringValue()).replaceAll(\" \") : \"\";\n      \n      StringBuilder sb = threadBuffer.get();\n      if (sb == null) {\n        sb = new StringBuilder();\n        threadBuffer.set(sb);\n      }\n      sb.setLength(0);\n      sb.append(title).append(SEP).append(date).append(SEP).append(body);\n      // lineFileOut is a PrintWriter, which synchronizes internally in println.\n      lineFileOut.println(sb.toString());\n    }\n    return 1;\n  }\n\n","sourceOld":"  @Override\n  public int doLogic() throws Exception {\n    Document doc = docSize > 0 ? docMaker.makeDocument(docSize) : docMaker.makeDocument();\n\n    Matcher matcher = threadNormalizer.get();\n    if (matcher == null) {\n      matcher = Pattern.compile(\"[\\t\\r\\n]+\").matcher(\"\");\n      threadNormalizer.set(matcher);\n    }\n    \n    Field f = doc.getField(DocMaker.BODY_FIELD);\n    String body = f != null ? matcher.reset(f.stringValue()).replaceAll(\" \") : \"\";\n    \n    f = doc.getField(DocMaker.TITLE_FIELD);\n    String title = f != null ? matcher.reset(f.stringValue()).replaceAll(\" \") : \"\";\n    \n    if (body.length() > 0 || title.length() > 0) {\n      \n      f = doc.getField(DocMaker.DATE_FIELD);\n      String date = f != null ? matcher.reset(f.stringValue()).replaceAll(\" \") : \"\";\n      \n      StringBuilder sb = threadBuffer.get();\n      if (sb == null) {\n        sb = new StringBuilder();\n        threadBuffer.set(sb);\n      }\n      sb.setLength(0);\n      sb.append(title).append(SEP).append(date).append(SEP).append(body);\n      // lineFileOut is a PrintWriter, which synchronizes internally in println.\n      lineFileOut.println(sb.toString());\n    }\n    return 1;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"868da859b43505d9d2a023bfeae6dd0c795f5295","date":1294948401,"type":1,"author":"Michael Busch","isMerge":true,"pathNew":"modules/benchmark/src/java/org/apache/lucene/benchmark/byTask/tasks/WriteLineDocTask#doLogic().mjava","pathOld":"lucene/contrib/benchmark/src/java/org/apache/lucene/benchmark/byTask/tasks/WriteLineDocTask#doLogic().mjava","sourceNew":"  @Override\n  public int doLogic() throws Exception {\n    Document doc = docSize > 0 ? docMaker.makeDocument(docSize) : docMaker.makeDocument();\n\n    Matcher matcher = threadNormalizer.get();\n    if (matcher == null) {\n      matcher = Pattern.compile(\"[\\t\\r\\n]+\").matcher(\"\");\n      threadNormalizer.set(matcher);\n    }\n    \n    Field f = doc.getField(DocMaker.BODY_FIELD);\n    String body = f != null ? matcher.reset(f.stringValue()).replaceAll(\" \") : \"\";\n    \n    f = doc.getField(DocMaker.TITLE_FIELD);\n    String title = f != null ? matcher.reset(f.stringValue()).replaceAll(\" \") : \"\";\n    \n    if (body.length() > 0 || title.length() > 0) {\n      \n      f = doc.getField(DocMaker.DATE_FIELD);\n      String date = f != null ? matcher.reset(f.stringValue()).replaceAll(\" \") : \"\";\n      \n      StringBuilder sb = threadBuffer.get();\n      if (sb == null) {\n        sb = new StringBuilder();\n        threadBuffer.set(sb);\n      }\n      sb.setLength(0);\n      sb.append(title).append(SEP).append(date).append(SEP).append(body);\n      // lineFileOut is a PrintWriter, which synchronizes internally in println.\n      lineFileOut.println(sb.toString());\n    }\n    return 1;\n  }\n\n","sourceOld":"  @Override\n  public int doLogic() throws Exception {\n    Document doc = docSize > 0 ? docMaker.makeDocument(docSize) : docMaker.makeDocument();\n\n    Matcher matcher = threadNormalizer.get();\n    if (matcher == null) {\n      matcher = Pattern.compile(\"[\\t\\r\\n]+\").matcher(\"\");\n      threadNormalizer.set(matcher);\n    }\n    \n    Field f = doc.getField(DocMaker.BODY_FIELD);\n    String body = f != null ? matcher.reset(f.stringValue()).replaceAll(\" \") : \"\";\n    \n    f = doc.getField(DocMaker.TITLE_FIELD);\n    String title = f != null ? matcher.reset(f.stringValue()).replaceAll(\" \") : \"\";\n    \n    if (body.length() > 0 || title.length() > 0) {\n      \n      f = doc.getField(DocMaker.DATE_FIELD);\n      String date = f != null ? matcher.reset(f.stringValue()).replaceAll(\" \") : \"\";\n      \n      StringBuilder sb = threadBuffer.get();\n      if (sb == null) {\n        sb = new StringBuilder();\n        threadBuffer.set(sb);\n      }\n      sb.setLength(0);\n      sb.append(title).append(SEP).append(date).append(SEP).append(body);\n      // lineFileOut is a PrintWriter, which synchronizes internally in println.\n      lineFileOut.println(sb.toString());\n    }\n    return 1;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7d8d7a81c29a594c8d28e66f3a9029ed7458af42","date":1300719582,"type":3,"author":"Doron Cohen","isMerge":false,"pathNew":"modules/benchmark/src/java/org/apache/lucene/benchmark/byTask/tasks/WriteLineDocTask#doLogic().mjava","pathOld":"modules/benchmark/src/java/org/apache/lucene/benchmark/byTask/tasks/WriteLineDocTask#doLogic().mjava","sourceNew":"  @Override\n  public int doLogic() throws Exception {\n    Document doc = docSize > 0 ? docMaker.makeDocument(docSize) : docMaker.makeDocument();\n\n    Matcher matcher = threadNormalizer.get();\n    if (matcher == null) {\n      matcher = Pattern.compile(\"[\\t\\r\\n]+\").matcher(\"\");\n      threadNormalizer.set(matcher);\n    }\n    \n    StringBuilder sb = threadBuffer.get();\n    if (sb == null) {\n      sb = new StringBuilder();\n      threadBuffer.set(sb);\n    }\n    sb.setLength(0);\n\n    boolean sufficient = !checkSufficientFields;\n    for (int i=0; i<fieldsToWrite.length; i++) {\n      Field f = doc.getField(fieldsToWrite[i]);\n      String text = f == null ? \"\" : matcher.reset(f.stringValue()).replaceAll(\" \").trim();\n      sb.append(text).append(SEP);\n      sufficient |= text.length()>0 && sufficientFields[i];\n    }\n    if (sufficient) {\n      sb.setLength(sb.length()-1); // remove redundant last separator\n      // lineFileOut is a PrintWriter, which synchronizes internally in println.\n      lineFileOut.println(sb.toString());\n    }\n\n    return 1;\n  }\n\n","sourceOld":"  @Override\n  public int doLogic() throws Exception {\n    Document doc = docSize > 0 ? docMaker.makeDocument(docSize) : docMaker.makeDocument();\n\n    Matcher matcher = threadNormalizer.get();\n    if (matcher == null) {\n      matcher = Pattern.compile(\"[\\t\\r\\n]+\").matcher(\"\");\n      threadNormalizer.set(matcher);\n    }\n    \n    Field f = doc.getField(DocMaker.BODY_FIELD);\n    String body = f != null ? matcher.reset(f.stringValue()).replaceAll(\" \") : \"\";\n    \n    f = doc.getField(DocMaker.TITLE_FIELD);\n    String title = f != null ? matcher.reset(f.stringValue()).replaceAll(\" \") : \"\";\n    \n    if (body.length() > 0 || title.length() > 0) {\n      \n      f = doc.getField(DocMaker.DATE_FIELD);\n      String date = f != null ? matcher.reset(f.stringValue()).replaceAll(\" \") : \"\";\n      \n      StringBuilder sb = threadBuffer.get();\n      if (sb == null) {\n        sb = new StringBuilder();\n        threadBuffer.set(sb);\n      }\n      sb.setLength(0);\n      sb.append(title).append(SEP).append(date).append(SEP).append(body);\n      // lineFileOut is a PrintWriter, which synchronizes internally in println.\n      lineFileOut.println(sb.toString());\n    }\n    return 1;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d619839baa8ce5503e496b94a9e42ad6f079293f","date":1301309428,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"modules/benchmark/src/java/org/apache/lucene/benchmark/byTask/tasks/WriteLineDocTask#doLogic().mjava","pathOld":"modules/benchmark/src/java/org/apache/lucene/benchmark/byTask/tasks/WriteLineDocTask#doLogic().mjava","sourceNew":"  @Override\n  public int doLogic() throws Exception {\n    Document doc = docSize > 0 ? docMaker.makeDocument(docSize) : docMaker.makeDocument();\n\n    Matcher matcher = threadNormalizer.get();\n    if (matcher == null) {\n      matcher = Pattern.compile(\"[\\t\\r\\n]+\").matcher(\"\");\n      threadNormalizer.set(matcher);\n    }\n    \n    StringBuilder sb = threadBuffer.get();\n    if (sb == null) {\n      sb = new StringBuilder();\n      threadBuffer.set(sb);\n    }\n    sb.setLength(0);\n\n    boolean sufficient = !checkSufficientFields;\n    for (int i=0; i<fieldsToWrite.length; i++) {\n      Field f = doc.getField(fieldsToWrite[i]);\n      String text = f == null ? \"\" : matcher.reset(f.stringValue()).replaceAll(\" \").trim();\n      sb.append(text).append(SEP);\n      sufficient |= text.length()>0 && sufficientFields[i];\n    }\n    if (sufficient) {\n      sb.setLength(sb.length()-1); // remove redundant last separator\n      // lineFileOut is a PrintWriter, which synchronizes internally in println.\n      lineFileOut.println(sb.toString());\n    }\n\n    return 1;\n  }\n\n","sourceOld":"  @Override\n  public int doLogic() throws Exception {\n    Document doc = docSize > 0 ? docMaker.makeDocument(docSize) : docMaker.makeDocument();\n\n    Matcher matcher = threadNormalizer.get();\n    if (matcher == null) {\n      matcher = Pattern.compile(\"[\\t\\r\\n]+\").matcher(\"\");\n      threadNormalizer.set(matcher);\n    }\n    \n    Field f = doc.getField(DocMaker.BODY_FIELD);\n    String body = f != null ? matcher.reset(f.stringValue()).replaceAll(\" \") : \"\";\n    \n    f = doc.getField(DocMaker.TITLE_FIELD);\n    String title = f != null ? matcher.reset(f.stringValue()).replaceAll(\" \") : \"\";\n    \n    if (body.length() > 0 || title.length() > 0) {\n      \n      f = doc.getField(DocMaker.DATE_FIELD);\n      String date = f != null ? matcher.reset(f.stringValue()).replaceAll(\" \") : \"\";\n      \n      StringBuilder sb = threadBuffer.get();\n      if (sb == null) {\n        sb = new StringBuilder();\n        threadBuffer.set(sb);\n      }\n      sb.setLength(0);\n      sb.append(title).append(SEP).append(date).append(SEP).append(body);\n      // lineFileOut is a PrintWriter, which synchronizes internally in println.\n      lineFileOut.println(sb.toString());\n    }\n    return 1;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c0ef0193974807e4bddf5432a6b0287fe4d6c9df","date":1301476645,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"modules/benchmark/src/java/org/apache/lucene/benchmark/byTask/tasks/WriteLineDocTask#doLogic().mjava","pathOld":"modules/benchmark/src/java/org/apache/lucene/benchmark/byTask/tasks/WriteLineDocTask#doLogic().mjava","sourceNew":"  @Override\n  public int doLogic() throws Exception {\n    Document doc = docSize > 0 ? docMaker.makeDocument(docSize) : docMaker.makeDocument();\n\n    Matcher matcher = threadNormalizer.get();\n    if (matcher == null) {\n      matcher = Pattern.compile(\"[\\t\\r\\n]+\").matcher(\"\");\n      threadNormalizer.set(matcher);\n    }\n    \n    StringBuilder sb = threadBuffer.get();\n    if (sb == null) {\n      sb = new StringBuilder();\n      threadBuffer.set(sb);\n    }\n    sb.setLength(0);\n\n    boolean sufficient = !checkSufficientFields;\n    for (int i=0; i<fieldsToWrite.length; i++) {\n      Field f = doc.getField(fieldsToWrite[i]);\n      String text = f == null ? \"\" : matcher.reset(f.stringValue()).replaceAll(\" \").trim();\n      sb.append(text).append(SEP);\n      sufficient |= text.length()>0 && sufficientFields[i];\n    }\n    if (sufficient) {\n      sb.setLength(sb.length()-1); // remove redundant last separator\n      // lineFileOut is a PrintWriter, which synchronizes internally in println.\n      lineFileOut.println(sb.toString());\n    }\n\n    return 1;\n  }\n\n","sourceOld":"  @Override\n  public int doLogic() throws Exception {\n    Document doc = docSize > 0 ? docMaker.makeDocument(docSize) : docMaker.makeDocument();\n\n    Matcher matcher = threadNormalizer.get();\n    if (matcher == null) {\n      matcher = Pattern.compile(\"[\\t\\r\\n]+\").matcher(\"\");\n      threadNormalizer.set(matcher);\n    }\n    \n    Field f = doc.getField(DocMaker.BODY_FIELD);\n    String body = f != null ? matcher.reset(f.stringValue()).replaceAll(\" \") : \"\";\n    \n    f = doc.getField(DocMaker.TITLE_FIELD);\n    String title = f != null ? matcher.reset(f.stringValue()).replaceAll(\" \") : \"\";\n    \n    if (body.length() > 0 || title.length() > 0) {\n      \n      f = doc.getField(DocMaker.DATE_FIELD);\n      String date = f != null ? matcher.reset(f.stringValue()).replaceAll(\" \") : \"\";\n      \n      StringBuilder sb = threadBuffer.get();\n      if (sb == null) {\n        sb = new StringBuilder();\n        threadBuffer.set(sb);\n      }\n      sb.setLength(0);\n      sb.append(title).append(SEP).append(date).append(SEP).append(body);\n      // lineFileOut is a PrintWriter, which synchronizes internally in println.\n      lineFileOut.println(sb.toString());\n    }\n    return 1;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1509f151d7692d84fae414b2b799ac06ba60fcb4","date":1314451621,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"modules/benchmark/src/java/org/apache/lucene/benchmark/byTask/tasks/WriteLineDocTask#doLogic().mjava","pathOld":"modules/benchmark/src/java/org/apache/lucene/benchmark/byTask/tasks/WriteLineDocTask#doLogic().mjava","sourceNew":"  @Override\n  public int doLogic() throws Exception {\n    Document doc = docSize > 0 ? docMaker.makeDocument(docSize) : docMaker.makeDocument();\n\n    Matcher matcher = threadNormalizer.get();\n    if (matcher == null) {\n      matcher = Pattern.compile(\"[\\t\\r\\n]+\").matcher(\"\");\n      threadNormalizer.set(matcher);\n    }\n    \n    StringBuilder sb = threadBuffer.get();\n    if (sb == null) {\n      sb = new StringBuilder();\n      threadBuffer.set(sb);\n    }\n    sb.setLength(0);\n\n    boolean sufficient = !checkSufficientFields;\n    for (int i=0; i<fieldsToWrite.length; i++) {\n      IndexableField f = doc.getField(fieldsToWrite[i]);\n      String text = f == null ? \"\" : matcher.reset(f.stringValue()).replaceAll(\" \").trim();\n      sb.append(text).append(SEP);\n      sufficient |= text.length()>0 && sufficientFields[i];\n    }\n    if (sufficient) {\n      sb.setLength(sb.length()-1); // remove redundant last separator\n      // lineFileOut is a PrintWriter, which synchronizes internally in println.\n      lineFileOut.println(sb.toString());\n    }\n\n    return 1;\n  }\n\n","sourceOld":"  @Override\n  public int doLogic() throws Exception {\n    Document doc = docSize > 0 ? docMaker.makeDocument(docSize) : docMaker.makeDocument();\n\n    Matcher matcher = threadNormalizer.get();\n    if (matcher == null) {\n      matcher = Pattern.compile(\"[\\t\\r\\n]+\").matcher(\"\");\n      threadNormalizer.set(matcher);\n    }\n    \n    StringBuilder sb = threadBuffer.get();\n    if (sb == null) {\n      sb = new StringBuilder();\n      threadBuffer.set(sb);\n    }\n    sb.setLength(0);\n\n    boolean sufficient = !checkSufficientFields;\n    for (int i=0; i<fieldsToWrite.length; i++) {\n      Field f = doc.getField(fieldsToWrite[i]);\n      String text = f == null ? \"\" : matcher.reset(f.stringValue()).replaceAll(\" \").trim();\n      sb.append(text).append(SEP);\n      sufficient |= text.length()>0 && sufficientFields[i];\n    }\n    if (sufficient) {\n      sb.setLength(sb.length()-1); // remove redundant last separator\n      // lineFileOut is a PrintWriter, which synchronizes internally in println.\n      lineFileOut.println(sb.toString());\n    }\n\n    return 1;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/benchmark/src/java/org/apache/lucene/benchmark/byTask/tasks/WriteLineDocTask#doLogic().mjava","pathOld":"modules/benchmark/src/java/org/apache/lucene/benchmark/byTask/tasks/WriteLineDocTask#doLogic().mjava","sourceNew":"  @Override\n  public int doLogic() throws Exception {\n    Document doc = docSize > 0 ? docMaker.makeDocument(docSize) : docMaker.makeDocument();\n\n    Matcher matcher = threadNormalizer.get();\n    if (matcher == null) {\n      matcher = Pattern.compile(\"[\\t\\r\\n]+\").matcher(\"\");\n      threadNormalizer.set(matcher);\n    }\n    \n    StringBuilder sb = threadBuffer.get();\n    if (sb == null) {\n      sb = new StringBuilder();\n      threadBuffer.set(sb);\n    }\n    sb.setLength(0);\n\n    boolean sufficient = !checkSufficientFields;\n    for (int i=0; i<fieldsToWrite.length; i++) {\n      IndexableField f = doc.getField(fieldsToWrite[i]);\n      String text = f == null ? \"\" : matcher.reset(f.stringValue()).replaceAll(\" \").trim();\n      sb.append(text).append(SEP);\n      sufficient |= text.length()>0 && sufficientFields[i];\n    }\n    if (sufficient) {\n      sb.setLength(sb.length()-1); // remove redundant last separator\n      // lineFileOut is a PrintWriter, which synchronizes internally in println.\n      lineFileOut.println(sb.toString());\n    }\n\n    return 1;\n  }\n\n","sourceOld":"  @Override\n  public int doLogic() throws Exception {\n    Document doc = docSize > 0 ? docMaker.makeDocument(docSize) : docMaker.makeDocument();\n\n    Matcher matcher = threadNormalizer.get();\n    if (matcher == null) {\n      matcher = Pattern.compile(\"[\\t\\r\\n]+\").matcher(\"\");\n      threadNormalizer.set(matcher);\n    }\n    \n    StringBuilder sb = threadBuffer.get();\n    if (sb == null) {\n      sb = new StringBuilder();\n      threadBuffer.set(sb);\n    }\n    sb.setLength(0);\n\n    boolean sufficient = !checkSufficientFields;\n    for (int i=0; i<fieldsToWrite.length; i++) {\n      IndexableField f = doc.getField(fieldsToWrite[i]);\n      String text = f == null ? \"\" : matcher.reset(f.stringValue()).replaceAll(\" \").trim();\n      sb.append(text).append(SEP);\n      sufficient |= text.length()>0 && sufficientFields[i];\n    }\n    if (sufficient) {\n      sb.setLength(sb.length()-1); // remove redundant last separator\n      // lineFileOut is a PrintWriter, which synchronizes internally in println.\n      lineFileOut.println(sb.toString());\n    }\n\n    return 1;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"70ad682703b8585f5d0a637efec044d57ec05efb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","ecc11368dc265bfdad90214f8bf5da99016ab1e2"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["1509f151d7692d84fae414b2b799ac06ba60fcb4"],"ecc11368dc265bfdad90214f8bf5da99016ab1e2":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"c0ef0193974807e4bddf5432a6b0287fe4d6c9df":["868da859b43505d9d2a023bfeae6dd0c795f5295","7d8d7a81c29a594c8d28e66f3a9029ed7458af42"],"d619839baa8ce5503e496b94a9e42ad6f079293f":["70ad682703b8585f5d0a637efec044d57ec05efb","7d8d7a81c29a594c8d28e66f3a9029ed7458af42"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"1509f151d7692d84fae414b2b799ac06ba60fcb4":["7d8d7a81c29a594c8d28e66f3a9029ed7458af42"],"7d8d7a81c29a594c8d28e66f3a9029ed7458af42":["ecc11368dc265bfdad90214f8bf5da99016ab1e2"],"868da859b43505d9d2a023bfeae6dd0c795f5295":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","ecc11368dc265bfdad90214f8bf5da99016ab1e2"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b89678825b68eccaf09e6ab71675fc0b0af1e099"]},"commit2Childs":{"70ad682703b8585f5d0a637efec044d57ec05efb":["d619839baa8ce5503e496b94a9e42ad6f079293f"],"ecc11368dc265bfdad90214f8bf5da99016ab1e2":["70ad682703b8585f5d0a637efec044d57ec05efb","7d8d7a81c29a594c8d28e66f3a9029ed7458af42","868da859b43505d9d2a023bfeae6dd0c795f5295"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"c0ef0193974807e4bddf5432a6b0287fe4d6c9df":[],"d619839baa8ce5503e496b94a9e42ad6f079293f":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["70ad682703b8585f5d0a637efec044d57ec05efb","ecc11368dc265bfdad90214f8bf5da99016ab1e2","868da859b43505d9d2a023bfeae6dd0c795f5295"],"1509f151d7692d84fae414b2b799ac06ba60fcb4":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"7d8d7a81c29a594c8d28e66f3a9029ed7458af42":["c0ef0193974807e4bddf5432a6b0287fe4d6c9df","d619839baa8ce5503e496b94a9e42ad6f079293f","1509f151d7692d84fae414b2b799ac06ba60fcb4"],"868da859b43505d9d2a023bfeae6dd0c795f5295":["c0ef0193974807e4bddf5432a6b0287fe4d6c9df"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["c0ef0193974807e4bddf5432a6b0287fe4d6c9df","d619839baa8ce5503e496b94a9e42ad6f079293f","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}