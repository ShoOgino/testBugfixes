{"path":"lucene/facet/src/java/org/apache/lucene/facet/search/FacetArrays#free().mjava","commits":[{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/search/FacetArrays#free().mjava","pathOld":"modules/facet/src/java/org/apache/lucene/facet/search/FacetArrays#free().mjava","sourceNew":"  /**\n   * Notify allocators that they can free arrays allocated \n   * on behalf of this FacetArrays object. \n   */\n  public void free() {\n    if (intArrayAllocator!=null) {\n      intArrayAllocator.free(intArray);\n      // Should give up handle to the array now\n      // that it is freed.\n      intArray = null;\n    }\n    if (floatArrayAllocator!=null) {\n      floatArrayAllocator.free(floatArray);\n      // Should give up handle to the array now\n      // that it is freed.\n      floatArray = null;\n    }\n    arraysLength = 0;\n  }\n\n","sourceOld":"  /**\n   * Notify allocators that they can free arrays allocated \n   * on behalf of this FacetArrays object. \n   */\n  public void free() {\n    if (intArrayAllocator!=null) {\n      intArrayAllocator.free(intArray);\n      // Should give up handle to the array now\n      // that it is freed.\n      intArray = null;\n    }\n    if (floatArrayAllocator!=null) {\n      floatArrayAllocator.free(floatArray);\n      // Should give up handle to the array now\n      // that it is freed.\n      floatArray = null;\n    }\n    arraysLength = 0;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2a2548b7f050533ac9a884b31cab5fb6f0386fbb","date":1355233860,"type":3,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/search/FacetArrays#free().mjava","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/search/FacetArrays#free().mjava","sourceNew":"  /**\n   * Notifies that the arrays obtained from {@link #getIntArray()}\n   * or {@link #getFloatArray()} are no longer needed and can be freed.\n   */\n  public final void free() {\n    doFree(floats, ints);\n    ints = null;\n    floats = null;\n  }\n\n","sourceOld":"  /**\n   * Notify allocators that they can free arrays allocated \n   * on behalf of this FacetArrays object. \n   */\n  public void free() {\n    if (intArrayAllocator!=null) {\n      intArrayAllocator.free(intArray);\n      // Should give up handle to the array now\n      // that it is freed.\n      intArray = null;\n    }\n    if (floatArrayAllocator!=null) {\n      floatArrayAllocator.free(floatArray);\n      // Should give up handle to the array now\n      // that it is freed.\n      floatArray = null;\n    }\n    arraysLength = 0;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d3fcb70cf561547c7bb1506e0cf32ca7b1287064","date":1357616416,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/search/FacetArrays#free().mjava","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/search/FacetArrays#free().mjava","sourceNew":"  /**\n   * Notifies that the arrays obtained from {@link #getIntArray()}\n   * or {@link #getFloatArray()} are no longer needed and can be freed.\n   */\n  public final void free() {\n    doFree(floats, ints);\n    ints = null;\n    floats = null;\n  }\n\n","sourceOld":"  /**\n   * Notify allocators that they can free arrays allocated \n   * on behalf of this FacetArrays object. \n   */\n  public void free() {\n    if (intArrayAllocator!=null) {\n      intArrayAllocator.free(intArray);\n      // Should give up handle to the array now\n      // that it is freed.\n      intArray = null;\n    }\n    if (floatArrayAllocator!=null) {\n      floatArrayAllocator.free(floatArray);\n      // Should give up handle to the array now\n      // that it is freed.\n      floatArray = null;\n    }\n    arraysLength = 0;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d33e19a97046248623a7591aeaa6547233fd15e2","date":1385424777,"type":4,"author":"Michael McCandless","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/search/FacetArrays#free().mjava","sourceNew":null,"sourceOld":"  /**\n   * Notifies that the arrays obtained from {@link #getIntArray()}\n   * or {@link #getFloatArray()} are no longer needed and can be freed.\n   */\n  public final void free() {\n    doFree(floats, ints);\n    ints = null;\n    floats = null;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3cc728b07df73b197e6d940d27f9b08b63918f13","date":1388834348,"type":4,"author":"Michael McCandless","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/search/FacetArrays#free().mjava","sourceNew":null,"sourceOld":"  /**\n   * Notifies that the arrays obtained from {@link #getIntArray()}\n   * or {@link #getFloatArray()} are no longer needed and can be freed.\n   */\n  public final void free() {\n    doFree(floats, ints);\n    ints = null;\n    floats = null;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"d3fcb70cf561547c7bb1506e0cf32ca7b1287064":["b89678825b68eccaf09e6ab71675fc0b0af1e099","2a2548b7f050533ac9a884b31cab5fb6f0386fbb"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"d33e19a97046248623a7591aeaa6547233fd15e2":["2a2548b7f050533ac9a884b31cab5fb6f0386fbb"],"2a2548b7f050533ac9a884b31cab5fb6f0386fbb":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cc728b07df73b197e6d940d27f9b08b63918f13":["2a2548b7f050533ac9a884b31cab5fb6f0386fbb","d33e19a97046248623a7591aeaa6547233fd15e2"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3cc728b07df73b197e6d940d27f9b08b63918f13"]},"commit2Childs":{"d3fcb70cf561547c7bb1506e0cf32ca7b1287064":[],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","2a2548b7f050533ac9a884b31cab5fb6f0386fbb"],"d33e19a97046248623a7591aeaa6547233fd15e2":["3cc728b07df73b197e6d940d27f9b08b63918f13"],"2a2548b7f050533ac9a884b31cab5fb6f0386fbb":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","d33e19a97046248623a7591aeaa6547233fd15e2","3cc728b07df73b197e6d940d27f9b08b63918f13"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"3cc728b07df73b197e6d940d27f9b08b63918f13":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}