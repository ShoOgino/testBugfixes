{"path":"lucene/core/src/java/org/apache/lucene/codecs/CompetitiveImpactAccumulator#CompetitiveImpactAccumulator().mjava","commits":[{"id":"6a692be6c8e120ef6dbfcd5dde3de42815813cd2","date":1525265372,"type":1,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/CompetitiveImpactAccumulator#CompetitiveImpactAccumulator().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/CompetitiveFreqNormAccumulator#CompetitiveFreqNormAccumulator().mjava","sourceNew":"  /** Sole constructor. */\n  public CompetitiveImpactAccumulator() {\n    maxFreqs = new int[256];\n    Comparator<Impact> comparator = new Comparator<Impact>() {\n      @Override\n      public int compare(Impact o1, Impact o2) {\n        // greater freqs compare greater\n        int cmp = Integer.compare(o1.freq, o2.freq);\n        if (cmp == 0) {\n          // greater norms compare lower\n          cmp = Long.compareUnsigned(o2.norm, o1.norm);\n        }\n        return cmp;\n      }\n    };\n    freqNormPairs = new TreeSet<>(comparator);\n  }\n\n","sourceOld":"  /** Sole constructor. */\n  public CompetitiveFreqNormAccumulator() {\n    maxFreqs = new int[256];\n    Comparator<FreqAndNorm> comparator = new Comparator<CompetitiveFreqNormAccumulator.FreqAndNorm>() {\n      @Override\n      public int compare(FreqAndNorm o1, FreqAndNorm o2) {\n        // greater freqs compare greater\n        int cmp = Integer.compare(o1.freq, o2.freq);\n        if (cmp == 0) {\n          // greater norms compare lower\n          cmp = Long.compareUnsigned(o2.norm, o1.norm);\n        }\n        return cmp;\n      }\n    };\n    freqNormPairs = new TreeSet<>(comparator);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f50c9e80683584f12bcb862485e917b70cad163f","date":1574765397,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/CompetitiveImpactAccumulator#CompetitiveImpactAccumulator().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/CompetitiveImpactAccumulator#CompetitiveImpactAccumulator().mjava","sourceNew":"  /** Sole constructor. */\n  public CompetitiveImpactAccumulator() {\n    maxFreqs = new int[256];\n    Comparator<Impact> comparator = new Comparator<Impact>() {\n      @Override\n      public int compare(Impact o1, Impact o2) {\n        // greater freqs compare greater\n        int cmp = Integer.compare(o1.freq, o2.freq);\n        if (cmp == 0) {\n          // greater norms compare lower\n          cmp = Long.compareUnsigned(o2.norm, o1.norm);\n        }\n        return cmp;\n      }\n    };\n    otherFreqNormPairs = new TreeSet<>(comparator);\n  }\n\n","sourceOld":"  /** Sole constructor. */\n  public CompetitiveImpactAccumulator() {\n    maxFreqs = new int[256];\n    Comparator<Impact> comparator = new Comparator<Impact>() {\n      @Override\n      public int compare(Impact o1, Impact o2) {\n        // greater freqs compare greater\n        int cmp = Integer.compare(o1.freq, o2.freq);\n        if (cmp == 0) {\n          // greater norms compare lower\n          cmp = Long.compareUnsigned(o2.norm, o1.norm);\n        }\n        return cmp;\n      }\n    };\n    freqNormPairs = new TreeSet<>(comparator);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"6a692be6c8e120ef6dbfcd5dde3de42815813cd2":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"f50c9e80683584f12bcb862485e917b70cad163f":["6a692be6c8e120ef6dbfcd5dde3de42815813cd2"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["f50c9e80683584f12bcb862485e917b70cad163f"]},"commit2Childs":{"6a692be6c8e120ef6dbfcd5dde3de42815813cd2":["f50c9e80683584f12bcb862485e917b70cad163f"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["6a692be6c8e120ef6dbfcd5dde3de42815813cd2"],"f50c9e80683584f12bcb862485e917b70cad163f":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}