{"path":"src/test/org/apache/lucene/index/TestIndexReader#testOpenReaderAfterDelete().mjava","commits":[{"id":"4755ae1e745961fcdde166cfbfe292a42597cd64","date":1173257158,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"src/test/org/apache/lucene/index/TestIndexReader#testOpenReaderAfterDelete().mjava","pathOld":"/dev/null","sourceNew":"    public void testOpenReaderAfterDelete() throws IOException {\n      File dirFile = new File(System.getProperty(\"tempDir\"),\n                          \"deletetest\");\n      Directory dir = FSDirectory.getDirectory(dirFile);\n      try {\n        IndexReader reader = IndexReader.open(dir);\n        fail(\"expected CorruptIndexException\");\n      } catch (FileNotFoundException e) {\n        // expected\n      }\n\n      dirFile.delete();\n\n      // Make sure we still get a CorruptIndexException (not NPE):\n      try {\n        IndexReader reader = IndexReader.open(dir);\n        fail(\"expected CorruptIndexException\");\n      } catch (FileNotFoundException e) {\n        // expected\n      }\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["daaba12f8cbc8a402310a4c4d0ee3fe71f67b051"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"daaba12f8cbc8a402310a4c4d0ee3fe71f67b051","date":1173376751,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/test/org/apache/lucene/index/TestIndexReader#testOpenReaderAfterDelete().mjava","pathOld":"src/test/org/apache/lucene/index/TestIndexReader#testOpenReaderAfterDelete().mjava","sourceNew":"    public void testOpenReaderAfterDelete() throws IOException {\n      File dirFile = new File(System.getProperty(\"tempDir\"),\n                          \"deletetest\");\n      Directory dir = FSDirectory.getDirectory(dirFile);\n      try {\n        IndexReader reader = IndexReader.open(dir);\n        fail(\"expected FileNotFoundException\");\n      } catch (FileNotFoundException e) {\n        // expected\n      }\n\n      dirFile.delete();\n\n      // Make sure we still get a CorruptIndexException (not NPE):\n      try {\n        IndexReader reader = IndexReader.open(dir);\n        fail(\"expected FileNotFoundException\");\n      } catch (FileNotFoundException e) {\n        // expected\n      }\n    }\n\n","sourceOld":"    public void testOpenReaderAfterDelete() throws IOException {\n      File dirFile = new File(System.getProperty(\"tempDir\"),\n                          \"deletetest\");\n      Directory dir = FSDirectory.getDirectory(dirFile);\n      try {\n        IndexReader reader = IndexReader.open(dir);\n        fail(\"expected CorruptIndexException\");\n      } catch (FileNotFoundException e) {\n        // expected\n      }\n\n      dirFile.delete();\n\n      // Make sure we still get a CorruptIndexException (not NPE):\n      try {\n        IndexReader reader = IndexReader.open(dir);\n        fail(\"expected CorruptIndexException\");\n      } catch (FileNotFoundException e) {\n        // expected\n      }\n    }\n\n","bugFix":["4755ae1e745961fcdde166cfbfe292a42597cd64"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e82780afe6097066eb5befb86e9432f077667e3d","date":1202756169,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/test/org/apache/lucene/index/TestIndexReader#testOpenReaderAfterDelete().mjava","pathOld":"src/test/org/apache/lucene/index/TestIndexReader#testOpenReaderAfterDelete().mjava","sourceNew":"    public void testOpenReaderAfterDelete() throws IOException {\n      File dirFile = new File(System.getProperty(\"tempDir\"),\n                          \"deletetest\");\n      Directory dir = FSDirectory.getDirectory(dirFile);\n      try {\n        IndexReader.open(dir);\n        fail(\"expected FileNotFoundException\");\n      } catch (FileNotFoundException e) {\n        // expected\n      }\n\n      dirFile.delete();\n\n      // Make sure we still get a CorruptIndexException (not NPE):\n      try {\n        IndexReader.open(dir);\n        fail(\"expected FileNotFoundException\");\n      } catch (FileNotFoundException e) {\n        // expected\n      }\n    }\n\n","sourceOld":"    public void testOpenReaderAfterDelete() throws IOException {\n      File dirFile = new File(System.getProperty(\"tempDir\"),\n                          \"deletetest\");\n      Directory dir = FSDirectory.getDirectory(dirFile);\n      try {\n        IndexReader reader = IndexReader.open(dir);\n        fail(\"expected FileNotFoundException\");\n      } catch (FileNotFoundException e) {\n        // expected\n      }\n\n      dirFile.delete();\n\n      // Make sure we still get a CorruptIndexException (not NPE):\n      try {\n        IndexReader reader = IndexReader.open(dir);\n        fail(\"expected FileNotFoundException\");\n      } catch (FileNotFoundException e) {\n        // expected\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5309ea37b2a7ec9c5f21c9eeacc9d9fb808cdb02","date":1243677645,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/test/org/apache/lucene/index/TestIndexReader#testOpenReaderAfterDelete().mjava","pathOld":"src/test/org/apache/lucene/index/TestIndexReader#testOpenReaderAfterDelete().mjava","sourceNew":"    public void testOpenReaderAfterDelete() throws IOException {\n      File dirFile = new File(System.getProperty(\"tempDir\"),\n                          \"deletetest\");\n      Directory dir = FSDirectory.open(dirFile);\n      try {\n        IndexReader.open(dir);\n        fail(\"expected FileNotFoundException\");\n      } catch (FileNotFoundException e) {\n        // expected\n      }\n\n      dirFile.delete();\n\n      // Make sure we still get a CorruptIndexException (not NPE):\n      try {\n        IndexReader.open(dir);\n        fail(\"expected FileNotFoundException\");\n      } catch (FileNotFoundException e) {\n        // expected\n      }\n    }\n\n","sourceOld":"    public void testOpenReaderAfterDelete() throws IOException {\n      File dirFile = new File(System.getProperty(\"tempDir\"),\n                          \"deletetest\");\n      Directory dir = FSDirectory.getDirectory(dirFile);\n      try {\n        IndexReader.open(dir);\n        fail(\"expected FileNotFoundException\");\n      } catch (FileNotFoundException e) {\n        // expected\n      }\n\n      dirFile.delete();\n\n      // Make sure we still get a CorruptIndexException (not NPE):\n      try {\n        IndexReader.open(dir);\n        fail(\"expected FileNotFoundException\");\n      } catch (FileNotFoundException e) {\n        // expected\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"73bc1851682757b5184768cbdf6de3f4f5a5f432","date":1244636487,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/test/org/apache/lucene/index/TestIndexReader#testOpenReaderAfterDelete().mjava","pathOld":"src/test/org/apache/lucene/index/TestIndexReader#testOpenReaderAfterDelete().mjava","sourceNew":"    public void testOpenReaderAfterDelete() throws IOException {\n      File dirFile = new File(System.getProperty(\"tempDir\"),\n                          \"deletetest\");\n      Directory dir = FSDirectory.open(dirFile);\n      try {\n        IndexReader.open(dir);\n        fail(\"expected FileNotFoundException\");\n      } catch (FileNotFoundException e) {\n        // expected\n      }\n\n      dirFile.delete();\n\n      // Make sure we still get a CorruptIndexException (not NPE):\n      try {\n        IndexReader.open(dir);\n        fail(\"expected FileNotFoundException\");\n      } catch (FileNotFoundException e) {\n        // expected\n      }\n      \n      dir.close();\n    }\n\n","sourceOld":"    public void testOpenReaderAfterDelete() throws IOException {\n      File dirFile = new File(System.getProperty(\"tempDir\"),\n                          \"deletetest\");\n      Directory dir = FSDirectory.open(dirFile);\n      try {\n        IndexReader.open(dir);\n        fail(\"expected FileNotFoundException\");\n      } catch (FileNotFoundException e) {\n        // expected\n      }\n\n      dirFile.delete();\n\n      // Make sure we still get a CorruptIndexException (not NPE):\n      try {\n        IndexReader.open(dir);\n        fail(\"expected FileNotFoundException\");\n      } catch (FileNotFoundException e) {\n        // expected\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e8d1458a2543cbd30cbfe7929be4dcb5c5251659","date":1254582241,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/test/org/apache/lucene/index/TestIndexReader#testOpenReaderAfterDelete().mjava","pathOld":"src/test/org/apache/lucene/index/TestIndexReader#testOpenReaderAfterDelete().mjava","sourceNew":"    public void testOpenReaderAfterDelete() throws IOException {\n      File dirFile = new File(System.getProperty(\"tempDir\"),\n                          \"deletetest\");\n      Directory dir = FSDirectory.open(dirFile);\n      try {\n        IndexReader.open(dir, false);\n        fail(\"expected FileNotFoundException\");\n      } catch (FileNotFoundException e) {\n        // expected\n      }\n\n      dirFile.delete();\n\n      // Make sure we still get a CorruptIndexException (not NPE):\n      try {\n        IndexReader.open(dir, false);\n        fail(\"expected FileNotFoundException\");\n      } catch (FileNotFoundException e) {\n        // expected\n      }\n      \n      dir.close();\n    }\n\n","sourceOld":"    public void testOpenReaderAfterDelete() throws IOException {\n      File dirFile = new File(System.getProperty(\"tempDir\"),\n                          \"deletetest\");\n      Directory dir = FSDirectory.open(dirFile);\n      try {\n        IndexReader.open(dir);\n        fail(\"expected FileNotFoundException\");\n      } catch (FileNotFoundException e) {\n        // expected\n      }\n\n      dirFile.delete();\n\n      // Make sure we still get a CorruptIndexException (not NPE):\n      try {\n        IndexReader.open(dir);\n        fail(\"expected FileNotFoundException\");\n      } catch (FileNotFoundException e) {\n        // expected\n      }\n      \n      dir.close();\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0a046c0c310bc77931fc8441bd920053b607dd14","date":1254584734,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"src/test/org/apache/lucene/index/TestIndexReader#testOpenReaderAfterDelete().mjava","pathOld":"src/test/org/apache/lucene/index/TestIndexReader#testOpenReaderAfterDelete().mjava","sourceNew":"    public void testOpenReaderAfterDelete() throws IOException {\n      File dirFile = new File(System.getProperty(\"tempDir\"),\n                          \"deletetest\");\n      Directory dir = FSDirectory.open(dirFile);\n      try {\n        IndexReader.open(dir, false);\n        fail(\"expected FileNotFoundException\");\n      } catch (FileNotFoundException e) {\n        // expected\n      }\n\n      dirFile.delete();\n\n      // Make sure we still get a CorruptIndexException (not NPE):\n      try {\n        IndexReader.open(dir, false);\n        fail(\"expected FileNotFoundException\");\n      } catch (FileNotFoundException e) {\n        // expected\n      }\n      \n      dir.close();\n    }\n\n","sourceOld":"    public void testOpenReaderAfterDelete() throws IOException {\n      File dirFile = new File(System.getProperty(\"tempDir\"),\n                          \"deletetest\");\n      Directory dir = FSDirectory.open(dirFile);\n      try {\n        IndexReader.open(dir);\n        fail(\"expected FileNotFoundException\");\n      } catch (FileNotFoundException e) {\n        // expected\n      }\n\n      dirFile.delete();\n\n      // Make sure we still get a CorruptIndexException (not NPE):\n      try {\n        IndexReader.open(dir);\n        fail(\"expected FileNotFoundException\");\n      } catch (FileNotFoundException e) {\n        // expected\n      }\n      \n      dir.close();\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1d16275d75dfe0b780ed62df4c811d083187c71a","date":1268583591,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/test/org/apache/lucene/index/TestIndexReader#testOpenReaderAfterDelete().mjava","pathOld":"src/test/org/apache/lucene/index/TestIndexReader#testOpenReaderAfterDelete().mjava","sourceNew":"    public void testOpenReaderAfterDelete() throws IOException {\n      File dirFile = new File(TEMP_DIR, \"deletetest\");\n      Directory dir = FSDirectory.open(dirFile);\n      try {\n        IndexReader.open(dir, false);\n        fail(\"expected FileNotFoundException\");\n      } catch (FileNotFoundException e) {\n        // expected\n      }\n\n      dirFile.delete();\n\n      // Make sure we still get a CorruptIndexException (not NPE):\n      try {\n        IndexReader.open(dir, false);\n        fail(\"expected FileNotFoundException\");\n      } catch (FileNotFoundException e) {\n        // expected\n      }\n      \n      dir.close();\n    }\n\n","sourceOld":"    public void testOpenReaderAfterDelete() throws IOException {\n      File dirFile = new File(System.getProperty(\"tempDir\"),\n                          \"deletetest\");\n      Directory dir = FSDirectory.open(dirFile);\n      try {\n        IndexReader.open(dir, false);\n        fail(\"expected FileNotFoundException\");\n      } catch (FileNotFoundException e) {\n        // expected\n      }\n\n      dirFile.delete();\n\n      // Make sure we still get a CorruptIndexException (not NPE):\n      try {\n        IndexReader.open(dir, false);\n        fail(\"expected FileNotFoundException\");\n      } catch (FileNotFoundException e) {\n        // expected\n      }\n      \n      dir.close();\n    }\n\n","bugFix":null,"bugIntro":["3741149a89925c02f14dbeef8365b896798d91fc"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexReader#testOpenReaderAfterDelete().mjava","pathOld":"src/test/org/apache/lucene/index/TestIndexReader#testOpenReaderAfterDelete().mjava","sourceNew":"    public void testOpenReaderAfterDelete() throws IOException {\n      File dirFile = new File(TEMP_DIR, \"deletetest\");\n      Directory dir = FSDirectory.open(dirFile);\n      try {\n        IndexReader.open(dir, false);\n        fail(\"expected FileNotFoundException\");\n      } catch (FileNotFoundException e) {\n        // expected\n      }\n\n      dirFile.delete();\n\n      // Make sure we still get a CorruptIndexException (not NPE):\n      try {\n        IndexReader.open(dir, false);\n        fail(\"expected FileNotFoundException\");\n      } catch (FileNotFoundException e) {\n        // expected\n      }\n      \n      dir.close();\n    }\n\n","sourceOld":"    public void testOpenReaderAfterDelete() throws IOException {\n      File dirFile = new File(TEMP_DIR, \"deletetest\");\n      Directory dir = FSDirectory.open(dirFile);\n      try {\n        IndexReader.open(dir, false);\n        fail(\"expected FileNotFoundException\");\n      } catch (FileNotFoundException e) {\n        // expected\n      }\n\n      dirFile.delete();\n\n      // Make sure we still get a CorruptIndexException (not NPE):\n      try {\n        IndexReader.open(dir, false);\n        fail(\"expected FileNotFoundException\");\n      } catch (FileNotFoundException e) {\n        // expected\n      }\n      \n      dir.close();\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"daaba12f8cbc8a402310a4c4d0ee3fe71f67b051":["4755ae1e745961fcdde166cfbfe292a42597cd64"],"e8d1458a2543cbd30cbfe7929be4dcb5c5251659":["73bc1851682757b5184768cbdf6de3f4f5a5f432"],"5309ea37b2a7ec9c5f21c9eeacc9d9fb808cdb02":["e82780afe6097066eb5befb86e9432f077667e3d"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"0a046c0c310bc77931fc8441bd920053b607dd14":["73bc1851682757b5184768cbdf6de3f4f5a5f432","e8d1458a2543cbd30cbfe7929be4dcb5c5251659"],"1d16275d75dfe0b780ed62df4c811d083187c71a":["0a046c0c310bc77931fc8441bd920053b607dd14"],"e82780afe6097066eb5befb86e9432f077667e3d":["daaba12f8cbc8a402310a4c4d0ee3fe71f67b051"],"73bc1851682757b5184768cbdf6de3f4f5a5f432":["5309ea37b2a7ec9c5f21c9eeacc9d9fb808cdb02"],"4755ae1e745961fcdde166cfbfe292a42597cd64":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["1d16275d75dfe0b780ed62df4c811d083187c71a"]},"commit2Childs":{"daaba12f8cbc8a402310a4c4d0ee3fe71f67b051":["e82780afe6097066eb5befb86e9432f077667e3d"],"e8d1458a2543cbd30cbfe7929be4dcb5c5251659":["0a046c0c310bc77931fc8441bd920053b607dd14"],"5309ea37b2a7ec9c5f21c9eeacc9d9fb808cdb02":["73bc1851682757b5184768cbdf6de3f4f5a5f432"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["4755ae1e745961fcdde166cfbfe292a42597cd64"],"0a046c0c310bc77931fc8441bd920053b607dd14":["1d16275d75dfe0b780ed62df4c811d083187c71a"],"e82780afe6097066eb5befb86e9432f077667e3d":["5309ea37b2a7ec9c5f21c9eeacc9d9fb808cdb02"],"1d16275d75dfe0b780ed62df4c811d083187c71a":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"4755ae1e745961fcdde166cfbfe292a42597cd64":["daaba12f8cbc8a402310a4c4d0ee3fe71f67b051"],"73bc1851682757b5184768cbdf6de3f4f5a5f432":["e8d1458a2543cbd30cbfe7929be4dcb5c5251659","0a046c0c310bc77931fc8441bd920053b607dd14"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}