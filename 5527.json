{"path":"lucene/core/src/java/org/apache/lucene/index/ByteSliceReader#nextSlice().mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/ByteSliceReader#nextSlice().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/ByteSliceReader#nextSlice().mjava","sourceNew":"  public void nextSlice() {\n\n    // Skip to our next slice\n    final int nextIndex = ((buffer[limit]&0xff)<<24) + ((buffer[1+limit]&0xff)<<16) + ((buffer[2+limit]&0xff)<<8) + (buffer[3+limit]&0xff);\n\n    level = ByteBlockPool.nextLevelArray[level];\n    final int newSize = ByteBlockPool.levelSizeArray[level];\n\n    bufferUpto = nextIndex / ByteBlockPool.BYTE_BLOCK_SIZE;\n    bufferOffset = bufferUpto * ByteBlockPool.BYTE_BLOCK_SIZE;\n\n    buffer = pool.buffers[bufferUpto];\n    upto = nextIndex & ByteBlockPool.BYTE_BLOCK_MASK;\n\n    if (nextIndex + newSize >= endIndex) {\n      // We are advancing to the final slice\n      assert endIndex - nextIndex > 0;\n      limit = endIndex - bufferOffset;\n    } else {\n      // This is not the final slice (subtract 4 for the\n      // forwarding address at the end of this new slice)\n      limit = upto+newSize-4;\n    }\n  }\n\n","sourceOld":"  public void nextSlice() {\n\n    // Skip to our next slice\n    final int nextIndex = ((buffer[limit]&0xff)<<24) + ((buffer[1+limit]&0xff)<<16) + ((buffer[2+limit]&0xff)<<8) + (buffer[3+limit]&0xff);\n\n    level = ByteBlockPool.nextLevelArray[level];\n    final int newSize = ByteBlockPool.levelSizeArray[level];\n\n    bufferUpto = nextIndex / ByteBlockPool.BYTE_BLOCK_SIZE;\n    bufferOffset = bufferUpto * ByteBlockPool.BYTE_BLOCK_SIZE;\n\n    buffer = pool.buffers[bufferUpto];\n    upto = nextIndex & ByteBlockPool.BYTE_BLOCK_MASK;\n\n    if (nextIndex + newSize >= endIndex) {\n      // We are advancing to the final slice\n      assert endIndex - nextIndex > 0;\n      limit = endIndex - bufferOffset;\n    } else {\n      // This is not the final slice (subtract 4 for the\n      // forwarding address at the end of this new slice)\n      limit = upto+newSize-4;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"30fd30bfbfa6b9e036bcd99c8339712e965d4a63","date":1351859294,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/ByteSliceReader#nextSlice().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/ByteSliceReader#nextSlice().mjava","sourceNew":"  public void nextSlice() {\n\n    // Skip to our next slice\n    final int nextIndex = ((buffer[limit]&0xff)<<24) + ((buffer[1+limit]&0xff)<<16) + ((buffer[2+limit]&0xff)<<8) + (buffer[3+limit]&0xff);\n\n    level = ByteBlockPool.NEXT_LEVEL_ARRAY[level];\n    final int newSize = ByteBlockPool.LEVEL_SIZE_ARRAY[level];\n\n    bufferUpto = nextIndex / ByteBlockPool.BYTE_BLOCK_SIZE;\n    bufferOffset = bufferUpto * ByteBlockPool.BYTE_BLOCK_SIZE;\n\n    buffer = pool.buffers[bufferUpto];\n    upto = nextIndex & ByteBlockPool.BYTE_BLOCK_MASK;\n\n    if (nextIndex + newSize >= endIndex) {\n      // We are advancing to the final slice\n      assert endIndex - nextIndex > 0;\n      limit = endIndex - bufferOffset;\n    } else {\n      // This is not the final slice (subtract 4 for the\n      // forwarding address at the end of this new slice)\n      limit = upto+newSize-4;\n    }\n  }\n\n","sourceOld":"  public void nextSlice() {\n\n    // Skip to our next slice\n    final int nextIndex = ((buffer[limit]&0xff)<<24) + ((buffer[1+limit]&0xff)<<16) + ((buffer[2+limit]&0xff)<<8) + (buffer[3+limit]&0xff);\n\n    level = ByteBlockPool.nextLevelArray[level];\n    final int newSize = ByteBlockPool.levelSizeArray[level];\n\n    bufferUpto = nextIndex / ByteBlockPool.BYTE_BLOCK_SIZE;\n    bufferOffset = bufferUpto * ByteBlockPool.BYTE_BLOCK_SIZE;\n\n    buffer = pool.buffers[bufferUpto];\n    upto = nextIndex & ByteBlockPool.BYTE_BLOCK_MASK;\n\n    if (nextIndex + newSize >= endIndex) {\n      // We are advancing to the final slice\n      assert endIndex - nextIndex > 0;\n      limit = endIndex - bufferOffset;\n    } else {\n      // This is not the final slice (subtract 4 for the\n      // forwarding address at the end of this new slice)\n      limit = upto+newSize-4;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"30fd30bfbfa6b9e036bcd99c8339712e965d4a63":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["30fd30bfbfa6b9e036bcd99c8339712e965d4a63"]},"commit2Childs":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["30fd30bfbfa6b9e036bcd99c8339712e965d4a63"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"30fd30bfbfa6b9e036bcd99c8339712e965d4a63":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}