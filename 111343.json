{"path":"lucene/facet/src/java/org/apache/lucene/facet/TaxonomyFacetCounts#count(List[MatchingDocs]).mjava","commits":[{"id":"21d36d0db865f7b84026b447bec653469a6e66df","date":1385495602,"type":1,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/TaxonomyFacetCounts#count(List[MatchingDocs]).mjava","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/simple/TaxonomyFacetCounts#count(List[MatchingDocs]).mjava","sourceNew":"  private final void count(List<MatchingDocs> matchingDocs) throws IOException {\n    IntsRef scratch  = new IntsRef();\n    for(MatchingDocs hits : matchingDocs) {\n      OrdinalsReader.OrdinalsSegmentReader ords = ordinalsReader.getReader(hits.context);\n      FixedBitSet bits = hits.bits;\n    \n      final int length = hits.bits.length();\n      int doc = 0;\n      while (doc < length && (doc = bits.nextSetBit(doc)) != -1) {\n        ords.get(doc, scratch);\n        for(int i=0;i<scratch.length;i++) {\n          counts[scratch.ints[scratch.offset+i]]++;\n        }\n        ++doc;\n      }\n    }\n\n    // nocommit we could do this lazily instead:\n\n    // Rollup any necessary dims:\n    for(Map.Entry<String,FacetsConfig.DimConfig> ent : config.getDimConfigs().entrySet()) {\n      String dim = ent.getKey();\n      FacetsConfig.DimConfig ft = ent.getValue();\n      if (ft.hierarchical && ft.multiValued == false) {\n        int dimRootOrd = taxoReader.getOrdinal(new FacetLabel(dim));\n        // It can be -1 if this field was declared in the\n        // config but never indexed:\n        if (dimRootOrd > 0) {\n          counts[dimRootOrd] += rollup(children[dimRootOrd]);\n        }\n      }\n    }\n  }\n\n","sourceOld":"  private final void count(List<MatchingDocs> matchingDocs) throws IOException {\n    IntsRef scratch  = new IntsRef();\n    for(MatchingDocs hits : matchingDocs) {\n      OrdinalsReader.OrdinalsSegmentReader ords = ordinalsReader.getReader(hits.context);\n      FixedBitSet bits = hits.bits;\n    \n      final int length = hits.bits.length();\n      int doc = 0;\n      while (doc < length && (doc = bits.nextSetBit(doc)) != -1) {\n        ords.get(doc, scratch);\n        for(int i=0;i<scratch.length;i++) {\n          counts[scratch.ints[scratch.offset+i]]++;\n        }\n        ++doc;\n      }\n    }\n\n    // nocommit we could do this lazily instead:\n\n    // Rollup any necessary dims:\n    for(Map.Entry<String,FacetsConfig.DimConfig> ent : config.getDimConfigs().entrySet()) {\n      String dim = ent.getKey();\n      FacetsConfig.DimConfig ft = ent.getValue();\n      if (ft.hierarchical && ft.multiValued == false) {\n        int dimRootOrd = taxoReader.getOrdinal(new FacetLabel(dim));\n        // It can be -1 if this field was declared in the\n        // config but never indexed:\n        if (dimRootOrd > 0) {\n          counts[dimRootOrd] += rollup(children[dimRootOrd]);\n        }\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1536855b62f453c22bb60258029b3b2a07b2532c","date":1385570079,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/TaxonomyFacetCounts#count(List[MatchingDocs]).mjava","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/TaxonomyFacetCounts#count(List[MatchingDocs]).mjava","sourceNew":"  private final void count(List<MatchingDocs> matchingDocs) throws IOException {\n    IntsRef scratch  = new IntsRef();\n    for(MatchingDocs hits : matchingDocs) {\n      OrdinalsReader.OrdinalsSegmentReader ords = ordinalsReader.getReader(hits.context);\n      FixedBitSet bits = hits.bits;\n    \n      final int length = hits.bits.length();\n      int doc = 0;\n      while (doc < length && (doc = bits.nextSetBit(doc)) != -1) {\n        ords.get(doc, scratch);\n        for(int i=0;i<scratch.length;i++) {\n          values[scratch.ints[scratch.offset+i]]++;\n        }\n        ++doc;\n      }\n    }\n\n    rollup();\n  }\n\n","sourceOld":"  private final void count(List<MatchingDocs> matchingDocs) throws IOException {\n    IntsRef scratch  = new IntsRef();\n    for(MatchingDocs hits : matchingDocs) {\n      OrdinalsReader.OrdinalsSegmentReader ords = ordinalsReader.getReader(hits.context);\n      FixedBitSet bits = hits.bits;\n    \n      final int length = hits.bits.length();\n      int doc = 0;\n      while (doc < length && (doc = bits.nextSetBit(doc)) != -1) {\n        ords.get(doc, scratch);\n        for(int i=0;i<scratch.length;i++) {\n          counts[scratch.ints[scratch.offset+i]]++;\n        }\n        ++doc;\n      }\n    }\n\n    // nocommit we could do this lazily instead:\n\n    // Rollup any necessary dims:\n    for(Map.Entry<String,FacetsConfig.DimConfig> ent : config.getDimConfigs().entrySet()) {\n      String dim = ent.getKey();\n      FacetsConfig.DimConfig ft = ent.getValue();\n      if (ft.hierarchical && ft.multiValued == false) {\n        int dimRootOrd = taxoReader.getOrdinal(new FacetLabel(dim));\n        // It can be -1 if this field was declared in the\n        // config but never indexed:\n        if (dimRootOrd > 0) {\n          counts[dimRootOrd] += rollup(children[dimRootOrd]);\n        }\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4edc984f0f4ac77c37e48ace2932f780f888453c","date":1388475218,"type":5,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/taxonomy/TaxonomyFacetCounts#count(List[MatchingDocs]).mjava","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/TaxonomyFacetCounts#count(List[MatchingDocs]).mjava","sourceNew":"  private final void count(List<MatchingDocs> matchingDocs) throws IOException {\n    IntsRef scratch  = new IntsRef();\n    for(MatchingDocs hits : matchingDocs) {\n      OrdinalsReader.OrdinalsSegmentReader ords = ordinalsReader.getReader(hits.context);\n      FixedBitSet bits = hits.bits;\n    \n      final int length = hits.bits.length();\n      int doc = 0;\n      while (doc < length && (doc = bits.nextSetBit(doc)) != -1) {\n        ords.get(doc, scratch);\n        for(int i=0;i<scratch.length;i++) {\n          values[scratch.ints[scratch.offset+i]]++;\n        }\n        ++doc;\n      }\n    }\n\n    rollup();\n  }\n\n","sourceOld":"  private final void count(List<MatchingDocs> matchingDocs) throws IOException {\n    IntsRef scratch  = new IntsRef();\n    for(MatchingDocs hits : matchingDocs) {\n      OrdinalsReader.OrdinalsSegmentReader ords = ordinalsReader.getReader(hits.context);\n      FixedBitSet bits = hits.bits;\n    \n      final int length = hits.bits.length();\n      int doc = 0;\n      while (doc < length && (doc = bits.nextSetBit(doc)) != -1) {\n        ords.get(doc, scratch);\n        for(int i=0;i<scratch.length;i++) {\n          values[scratch.ints[scratch.offset+i]]++;\n        }\n        ++doc;\n      }\n    }\n\n    rollup();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"4edc984f0f4ac77c37e48ace2932f780f888453c":["1536855b62f453c22bb60258029b3b2a07b2532c"],"21d36d0db865f7b84026b447bec653469a6e66df":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"1536855b62f453c22bb60258029b3b2a07b2532c":["21d36d0db865f7b84026b447bec653469a6e66df"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["21d36d0db865f7b84026b447bec653469a6e66df","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"4edc984f0f4ac77c37e48ace2932f780f888453c":[],"21d36d0db865f7b84026b447bec653469a6e66df":["1536855b62f453c22bb60258029b3b2a07b2532c"],"1536855b62f453c22bb60258029b3b2a07b2532c":["4edc984f0f4ac77c37e48ace2932f780f888453c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["4edc984f0f4ac77c37e48ace2932f780f888453c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}