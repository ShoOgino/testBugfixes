{"path":"lucene/analysis/common/src/java/org/apache/lucene/analysis/query/QueryAutoStopWordAnalyzer#QueryAutoStopWordAnalyzer(Analyzer,IndexReader,float).mjava","commits":[{"id":"ff4227bb146f97aabae888091c19e48c88dbb0db","date":1406758576,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/common/src/java/org/apache/lucene/analysis/query/QueryAutoStopWordAnalyzer#QueryAutoStopWordAnalyzer(Analyzer,IndexReader,float).mjava","pathOld":"lucene/analysis/common/src/java/org/apache/lucene/analysis/query/QueryAutoStopWordAnalyzer#QueryAutoStopWordAnalyzer(Version,Analyzer,IndexReader,float).mjava","sourceNew":"  /**\n   * Creates a new QueryAutoStopWordAnalyzer with stopwords calculated for all\n   * indexed fields from terms with a document frequency percentage greater than\n   * the given maxPercentDocs\n   *\n   * @param delegate Analyzer whose TokenStream will be filtered\n   * @param indexReader IndexReader to identify the stopwords from\n   * @param maxPercentDocs The maximum percentage (between 0.0 and 1.0) of index documents which\n   *                      contain a term, after which the word is considered to be a stop word\n   * @throws IOException Can be thrown while reading from the IndexReader\n   */\n  public QueryAutoStopWordAnalyzer(\n      Analyzer delegate,\n      IndexReader indexReader,\n      float maxPercentDocs) throws IOException {\n    this(delegate, indexReader, MultiFields.getIndexedFields(indexReader), maxPercentDocs);\n  }\n\n","sourceOld":"  /**\n   * Creates a new QueryAutoStopWordAnalyzer with stopwords calculated for all\n   * indexed fields from terms with a document frequency percentage greater than\n   * the given maxPercentDocs\n   *\n   * @param matchVersion Version to be used in {@link StopFilter}\n   * @param delegate Analyzer whose TokenStream will be filtered\n   * @param indexReader IndexReader to identify the stopwords from\n   * @param maxPercentDocs The maximum percentage (between 0.0 and 1.0) of index documents which\n   *                      contain a term, after which the word is considered to be a stop word\n   * @throws IOException Can be thrown while reading from the IndexReader\n   */\n  public QueryAutoStopWordAnalyzer(\n      Version matchVersion,\n      Analyzer delegate,\n      IndexReader indexReader,\n      float maxPercentDocs) throws IOException {\n    this(matchVersion, delegate, indexReader, MultiFields.getIndexedFields(indexReader), maxPercentDocs);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5cdab62f058ea765dd33deb05b4f19b7d626c801","date":1406803479,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/common/src/java/org/apache/lucene/analysis/query/QueryAutoStopWordAnalyzer#QueryAutoStopWordAnalyzer(Version,Analyzer,IndexReader,float).mjava","pathOld":"lucene/analysis/common/src/java/org/apache/lucene/analysis/query/QueryAutoStopWordAnalyzer#QueryAutoStopWordAnalyzer(Analyzer,IndexReader,float).mjava","sourceNew":"  /**\n   * Creates a new QueryAutoStopWordAnalyzer with stopwords calculated for all\n   * indexed fields from terms with a document frequency percentage greater than\n   * the given maxPercentDocs\n   *\n   * @param matchVersion Version to be used in {@link StopFilter}\n   * @param delegate Analyzer whose TokenStream will be filtered\n   * @param indexReader IndexReader to identify the stopwords from\n   * @param maxPercentDocs The maximum percentage (between 0.0 and 1.0) of index documents which\n   *                      contain a term, after which the word is considered to be a stop word\n   * @throws IOException Can be thrown while reading from the IndexReader\n   */\n  public QueryAutoStopWordAnalyzer(\n      Version matchVersion,\n      Analyzer delegate,\n      IndexReader indexReader,\n      float maxPercentDocs) throws IOException {\n    this(matchVersion, delegate, indexReader, MultiFields.getIndexedFields(indexReader), maxPercentDocs);\n  }\n\n","sourceOld":"  /**\n   * Creates a new QueryAutoStopWordAnalyzer with stopwords calculated for all\n   * indexed fields from terms with a document frequency percentage greater than\n   * the given maxPercentDocs\n   *\n   * @param delegate Analyzer whose TokenStream will be filtered\n   * @param indexReader IndexReader to identify the stopwords from\n   * @param maxPercentDocs The maximum percentage (between 0.0 and 1.0) of index documents which\n   *                      contain a term, after which the word is considered to be a stop word\n   * @throws IOException Can be thrown while reading from the IndexReader\n   */\n  public QueryAutoStopWordAnalyzer(\n      Analyzer delegate,\n      IndexReader indexReader,\n      float maxPercentDocs) throws IOException {\n    this(delegate, indexReader, MultiFields.getIndexedFields(indexReader), maxPercentDocs);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"379db3ad24c4f0214f30a122265a6d6be003a99d","date":1407537768,"type":1,"author":"Ryan Ernst","isMerge":false,"pathNew":"lucene/analysis/common/src/java/org/apache/lucene/analysis/query/QueryAutoStopWordAnalyzer#QueryAutoStopWordAnalyzer(Analyzer,IndexReader,float).mjava","pathOld":"lucene/analysis/common/src/java/org/apache/lucene/analysis/query/QueryAutoStopWordAnalyzer#QueryAutoStopWordAnalyzer(Version,Analyzer,IndexReader,float).mjava","sourceNew":"  /**\n   * Creates a new QueryAutoStopWordAnalyzer with stopwords calculated for all\n   * indexed fields from terms with a document frequency percentage greater than\n   * the given maxPercentDocs\n   *\n   * @param delegate Analyzer whose TokenStream will be filtered\n   * @param indexReader IndexReader to identify the stopwords from\n   * @param maxPercentDocs The maximum percentage (between 0.0 and 1.0) of index documents which\n   *                      contain a term, after which the word is considered to be a stop word\n   * @throws IOException Can be thrown while reading from the IndexReader\n   */\n  public QueryAutoStopWordAnalyzer(\n      Analyzer delegate,\n      IndexReader indexReader,\n      float maxPercentDocs) throws IOException {\n    this(delegate, indexReader, MultiFields.getIndexedFields(indexReader), maxPercentDocs);\n  }\n\n","sourceOld":"  /**\n   * Creates a new QueryAutoStopWordAnalyzer with stopwords calculated for all\n   * indexed fields from terms with a document frequency percentage greater than\n   * the given maxPercentDocs\n   *\n   * @param matchVersion Version to be used in {@link StopFilter}\n   * @param delegate Analyzer whose TokenStream will be filtered\n   * @param indexReader IndexReader to identify the stopwords from\n   * @param maxPercentDocs The maximum percentage (between 0.0 and 1.0) of index documents which\n   *                      contain a term, after which the word is considered to be a stop word\n   * @throws IOException Can be thrown while reading from the IndexReader\n   */\n  public QueryAutoStopWordAnalyzer(\n      Version matchVersion,\n      Analyzer delegate,\n      IndexReader indexReader,\n      float maxPercentDocs) throws IOException {\n    this(matchVersion, delegate, indexReader, MultiFields.getIndexedFields(indexReader), maxPercentDocs);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"04e775de416dd2d8067b10db1c8af975a1d5017e","date":1539906554,"type":3,"author":"David Smiley","isMerge":false,"pathNew":"lucene/analysis/common/src/java/org/apache/lucene/analysis/query/QueryAutoStopWordAnalyzer#QueryAutoStopWordAnalyzer(Analyzer,IndexReader,float).mjava","pathOld":"lucene/analysis/common/src/java/org/apache/lucene/analysis/query/QueryAutoStopWordAnalyzer#QueryAutoStopWordAnalyzer(Analyzer,IndexReader,float).mjava","sourceNew":"  /**\n   * Creates a new QueryAutoStopWordAnalyzer with stopwords calculated for all\n   * indexed fields from terms with a document frequency percentage greater than\n   * the given maxPercentDocs\n   *\n   * @param delegate Analyzer whose TokenStream will be filtered\n   * @param indexReader IndexReader to identify the stopwords from\n   * @param maxPercentDocs The maximum percentage (between 0.0 and 1.0) of index documents which\n   *                      contain a term, after which the word is considered to be a stop word\n   * @throws IOException Can be thrown while reading from the IndexReader\n   */\n  public QueryAutoStopWordAnalyzer(\n      Analyzer delegate,\n      IndexReader indexReader,\n      float maxPercentDocs) throws IOException {\n    this(delegate, indexReader, FieldInfos.getIndexedFields(indexReader), maxPercentDocs);\n  }\n\n","sourceOld":"  /**\n   * Creates a new QueryAutoStopWordAnalyzer with stopwords calculated for all\n   * indexed fields from terms with a document frequency percentage greater than\n   * the given maxPercentDocs\n   *\n   * @param delegate Analyzer whose TokenStream will be filtered\n   * @param indexReader IndexReader to identify the stopwords from\n   * @param maxPercentDocs The maximum percentage (between 0.0 and 1.0) of index documents which\n   *                      contain a term, after which the word is considered to be a stop word\n   * @throws IOException Can be thrown while reading from the IndexReader\n   */\n  public QueryAutoStopWordAnalyzer(\n      Analyzer delegate,\n      IndexReader indexReader,\n      float maxPercentDocs) throws IOException {\n    this(delegate, indexReader, MultiFields.getIndexedFields(indexReader), maxPercentDocs);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"ff4227bb146f97aabae888091c19e48c88dbb0db":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"379db3ad24c4f0214f30a122265a6d6be003a99d":["5cdab62f058ea765dd33deb05b4f19b7d626c801"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"04e775de416dd2d8067b10db1c8af975a1d5017e":["379db3ad24c4f0214f30a122265a6d6be003a99d"],"5cdab62f058ea765dd33deb05b4f19b7d626c801":["ff4227bb146f97aabae888091c19e48c88dbb0db"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["04e775de416dd2d8067b10db1c8af975a1d5017e"]},"commit2Childs":{"ff4227bb146f97aabae888091c19e48c88dbb0db":["5cdab62f058ea765dd33deb05b4f19b7d626c801"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["ff4227bb146f97aabae888091c19e48c88dbb0db"],"379db3ad24c4f0214f30a122265a6d6be003a99d":["04e775de416dd2d8067b10db1c8af975a1d5017e"],"04e775de416dd2d8067b10db1c8af975a1d5017e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"5cdab62f058ea765dd33deb05b4f19b7d626c801":["379db3ad24c4f0214f30a122265a6d6be003a99d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}