{"path":"solr/core/src/java/org/apache/solr/core/JmxMonitoredMap.SolrDynamicMBean#SolrDynamicMBean(String,SolrInfoMBean).mjava","commits":[{"id":"feb75c13cdf6b27b36407e4b15b35cf3142ab619","date":1310465075,"type":1,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/JmxMonitoredMap.SolrDynamicMBean#SolrDynamicMBean(String,SolrInfoMBean).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/JmxMonitoredMap.SolrDynamicMBean#SolrDynamicMBean(SolrInfoMBean).mjava","sourceNew":"    public SolrDynamicMBean(String coreHashCode, SolrInfoMBean managedResource) {\n      this.infoBean = managedResource;\n      staticStats = new HashSet<String>();\n\n      // For which getters are already available in SolrInfoMBean\n      staticStats.add(\"name\");\n      staticStats.add(\"version\");\n      staticStats.add(\"description\");\n      staticStats.add(\"category\");\n      staticStats.add(\"sourceId\");\n      staticStats.add(\"source\");\n      this.coreHashCode = coreHashCode;\n    }\n\n","sourceOld":"    public SolrDynamicMBean(SolrInfoMBean managedResource) {\n      this.infoBean = managedResource;\n      staticStats = new HashSet<String>();\n\n      // For which getters are already available in SolrInfoMBean\n      staticStats.add(\"name\");\n      staticStats.add(\"version\");\n      staticStats.add(\"description\");\n      staticStats.add(\"category\");\n      staticStats.add(\"sourceId\");\n      staticStats.add(\"source\");\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a5b5c8b6fe2f63b35d03b80574e5899f76bc54ea","date":1369803313,"type":3,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/JmxMonitoredMap.SolrDynamicMBean#SolrDynamicMBean(String,SolrInfoMBean).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/JmxMonitoredMap.SolrDynamicMBean#SolrDynamicMBean(String,SolrInfoMBean).mjava","sourceNew":"    public SolrDynamicMBean(String coreHashCode, SolrInfoMBean managedResource) {\n      this.infoBean = managedResource;\n      staticStats = new HashSet<String>();\n\n      // For which getters are already available in SolrInfoMBean\n      staticStats.add(\"name\");\n      staticStats.add(\"version\");\n      staticStats.add(\"description\");\n      staticStats.add(\"category\");\n      staticStats.add(\"source\");\n      this.coreHashCode = coreHashCode;\n    }\n\n","sourceOld":"    public SolrDynamicMBean(String coreHashCode, SolrInfoMBean managedResource) {\n      this.infoBean = managedResource;\n      staticStats = new HashSet<String>();\n\n      // For which getters are already available in SolrInfoMBean\n      staticStats.add(\"name\");\n      staticStats.add(\"version\");\n      staticStats.add(\"description\");\n      staticStats.add(\"category\");\n      staticStats.add(\"sourceId\");\n      staticStats.add(\"source\");\n      this.coreHashCode = coreHashCode;\n    }\n\n","bugFix":["6ec2a01e62b7b206d9466aafaf04d8a9d6aee77b"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"634f330c54fd3f9f491d52036dc3f40b4f4d8934","date":1394635157,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/JmxMonitoredMap.SolrDynamicMBean#SolrDynamicMBean(String,SolrInfoMBean).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/JmxMonitoredMap.SolrDynamicMBean#SolrDynamicMBean(String,SolrInfoMBean).mjava","sourceNew":"    public SolrDynamicMBean(String coreHashCode, SolrInfoMBean managedResource) {\n      this.infoBean = managedResource;\n      staticStats = new HashSet<>();\n\n      // For which getters are already available in SolrInfoMBean\n      staticStats.add(\"name\");\n      staticStats.add(\"version\");\n      staticStats.add(\"description\");\n      staticStats.add(\"category\");\n      staticStats.add(\"source\");\n      this.coreHashCode = coreHashCode;\n    }\n\n","sourceOld":"    public SolrDynamicMBean(String coreHashCode, SolrInfoMBean managedResource) {\n      this.infoBean = managedResource;\n      staticStats = new HashSet<String>();\n\n      // For which getters are already available in SolrInfoMBean\n      staticStats.add(\"name\");\n      staticStats.add(\"version\");\n      staticStats.add(\"description\");\n      staticStats.add(\"category\");\n      staticStats.add(\"source\");\n      this.coreHashCode = coreHashCode;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3532ef9e3edcbdf674841a5f549101f5416c62a5","date":1416413081,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/JmxMonitoredMap.SolrDynamicMBean#SolrDynamicMBean(String,SolrInfoMBean).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/JmxMonitoredMap.SolrDynamicMBean#SolrDynamicMBean(String,SolrInfoMBean).mjava","sourceNew":"    public SolrDynamicMBean(String coreHashCode, SolrInfoMBean managedResource) {\n      this(coreHashCode, managedResource, false);\n    }\n\n","sourceOld":"    public SolrDynamicMBean(String coreHashCode, SolrInfoMBean managedResource) {\n      this.infoBean = managedResource;\n      staticStats = new HashSet<>();\n\n      // For which getters are already available in SolrInfoMBean\n      staticStats.add(\"name\");\n      staticStats.add(\"version\");\n      staticStats.add(\"description\");\n      staticStats.add(\"category\");\n      staticStats.add(\"source\");\n      this.coreHashCode = coreHashCode;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"816521ebaad5add9cb96bb88c577394e2938c40b","date":1491931343,"type":4,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/core/src/java/org/apache/solr/core/JmxMonitoredMap.SolrDynamicMBean#SolrDynamicMBean(String,SolrInfoMBean).mjava","sourceNew":null,"sourceOld":"    public SolrDynamicMBean(String coreHashCode, SolrInfoMBean managedResource) {\n      this(coreHashCode, managedResource, false);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"54ca69905c5d9d1529286f06ab1d12c68f6c13cb","date":1492683554,"type":4,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/core/src/java/org/apache/solr/core/JmxMonitoredMap.SolrDynamicMBean#SolrDynamicMBean(String,SolrInfoMBean).mjava","sourceNew":null,"sourceOld":"    public SolrDynamicMBean(String coreHashCode, SolrInfoMBean managedResource) {\n      this(coreHashCode, managedResource, false);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3532ef9e3edcbdf674841a5f549101f5416c62a5":["634f330c54fd3f9f491d52036dc3f40b4f4d8934"],"a5b5c8b6fe2f63b35d03b80574e5899f76bc54ea":["feb75c13cdf6b27b36407e4b15b35cf3142ab619"],"54ca69905c5d9d1529286f06ab1d12c68f6c13cb":["3532ef9e3edcbdf674841a5f549101f5416c62a5"],"634f330c54fd3f9f491d52036dc3f40b4f4d8934":["a5b5c8b6fe2f63b35d03b80574e5899f76bc54ea"],"feb75c13cdf6b27b36407e4b15b35cf3142ab619":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"816521ebaad5add9cb96bb88c577394e2938c40b":["3532ef9e3edcbdf674841a5f549101f5416c62a5"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["816521ebaad5add9cb96bb88c577394e2938c40b"]},"commit2Childs":{"3532ef9e3edcbdf674841a5f549101f5416c62a5":["54ca69905c5d9d1529286f06ab1d12c68f6c13cb","816521ebaad5add9cb96bb88c577394e2938c40b"],"a5b5c8b6fe2f63b35d03b80574e5899f76bc54ea":["634f330c54fd3f9f491d52036dc3f40b4f4d8934"],"54ca69905c5d9d1529286f06ab1d12c68f6c13cb":[],"634f330c54fd3f9f491d52036dc3f40b4f4d8934":["3532ef9e3edcbdf674841a5f549101f5416c62a5"],"feb75c13cdf6b27b36407e4b15b35cf3142ab619":["a5b5c8b6fe2f63b35d03b80574e5899f76bc54ea"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["feb75c13cdf6b27b36407e4b15b35cf3142ab619"],"816521ebaad5add9cb96bb88c577394e2938c40b":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["54ca69905c5d9d1529286f06ab1d12c68f6c13cb","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}