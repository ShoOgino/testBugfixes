{"path":"lucene/core/src/java/org/apache/lucene/util/bkd/BKDReader#readCommonPrefixes(int[],byte[],IndexInput).mjava","commits":[{"id":"3ca40baa99f9578eb8408ee5b9177f7ffe6f65d6","date":1468339076,"type":0,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/bkd/BKDReader#readCommonPrefixes(int[],byte[],IndexInput).mjava","pathOld":"/dev/null","sourceNew":"  private void readCommonPrefixes(int[] commonPrefixLengths, byte[] scratchPackedValue, IndexInput in) throws IOException {\n    for(int dim=0;dim<numDims;dim++) {\n      int prefix = in.readVInt();\n      commonPrefixLengths[dim] = prefix;\n      if (prefix > 0) {\n        in.readBytes(scratchPackedValue, dim*bytesPerDim, prefix);\n      }\n      //System.out.println(\"R: \" + dim + \" of \" + numDims + \" prefix=\" + prefix);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":0,"author":"Kevin Risden","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/util/bkd/BKDReader#readCommonPrefixes(int[],byte[],IndexInput).mjava","pathOld":"/dev/null","sourceNew":"  private void readCommonPrefixes(int[] commonPrefixLengths, byte[] scratchPackedValue, IndexInput in) throws IOException {\n    for(int dim=0;dim<numDims;dim++) {\n      int prefix = in.readVInt();\n      commonPrefixLengths[dim] = prefix;\n      if (prefix > 0) {\n        in.readBytes(scratchPackedValue, dim*bytesPerDim, prefix);\n      }\n      //System.out.println(\"R: \" + dim + \" of \" + numDims + \" prefix=\" + prefix);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f6652c943595e92c187ee904c382863013eae28f","date":1539042663,"type":3,"author":"Nicholas Knize","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/bkd/BKDReader#readCommonPrefixes(int[],byte[],IndexInput).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/bkd/BKDReader#readCommonPrefixes(int[],byte[],IndexInput).mjava","sourceNew":"  private void readCommonPrefixes(int[] commonPrefixLengths, byte[] scratchPackedValue, IndexInput in) throws IOException {\n    for(int dim=0;dim<numDataDims;dim++) {\n      int prefix = in.readVInt();\n      commonPrefixLengths[dim] = prefix;\n      if (prefix > 0) {\n        in.readBytes(scratchPackedValue, dim*bytesPerDim, prefix);\n      }\n      //System.out.println(\"R: \" + dim + \" of \" + numDims + \" prefix=\" + prefix);\n    }\n  }\n\n","sourceOld":"  private void readCommonPrefixes(int[] commonPrefixLengths, byte[] scratchPackedValue, IndexInput in) throws IOException {\n    for(int dim=0;dim<numDims;dim++) {\n      int prefix = in.readVInt();\n      commonPrefixLengths[dim] = prefix;\n      if (prefix > 0) {\n        in.readBytes(scratchPackedValue, dim*bytesPerDim, prefix);\n      }\n      //System.out.println(\"R: \" + dim + \" of \" + numDims + \" prefix=\" + prefix);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bb94bf667d51f9c390c99d97afb36b7caab6b6e9","date":1599548621,"type":3,"author":"Ignacio Vera","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/bkd/BKDReader#readCommonPrefixes(int[],byte[],IndexInput).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/bkd/BKDReader#readCommonPrefixes(int[],byte[],IndexInput).mjava","sourceNew":"  private void readCommonPrefixes(int[] commonPrefixLengths, byte[] scratchPackedValue, IndexInput in) throws IOException {\n    for(int dim=0;dim<config.numDims;dim++) {\n      int prefix = in.readVInt();\n      commonPrefixLengths[dim] = prefix;\n      if (prefix > 0) {\n        in.readBytes(scratchPackedValue, dim*config.bytesPerDim, prefix);\n      }\n      //System.out.println(\"R: \" + dim + \" of \" + numDims + \" prefix=\" + prefix);\n    }\n  }\n\n","sourceOld":"  private void readCommonPrefixes(int[] commonPrefixLengths, byte[] scratchPackedValue, IndexInput in) throws IOException {\n    for(int dim=0;dim<numDataDims;dim++) {\n      int prefix = in.readVInt();\n      commonPrefixLengths[dim] = prefix;\n      if (prefix > 0) {\n        in.readBytes(scratchPackedValue, dim*bytesPerDim, prefix);\n      }\n      //System.out.println(\"R: \" + dim + \" of \" + numDims + \" prefix=\" + prefix);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"bb94bf667d51f9c390c99d97afb36b7caab6b6e9":["f6652c943595e92c187ee904c382863013eae28f"],"f6652c943595e92c187ee904c382863013eae28f":["3ca40baa99f9578eb8408ee5b9177f7ffe6f65d6"],"3ca40baa99f9578eb8408ee5b9177f7ffe6f65d6":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","3ca40baa99f9578eb8408ee5b9177f7ffe6f65d6"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["bb94bf667d51f9c390c99d97afb36b7caab6b6e9"]},"commit2Childs":{"bb94bf667d51f9c390c99d97afb36b7caab6b6e9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"f6652c943595e92c187ee904c382863013eae28f":["bb94bf667d51f9c390c99d97afb36b7caab6b6e9"],"3ca40baa99f9578eb8408ee5b9177f7ffe6f65d6":["f6652c943595e92c187ee904c382863013eae28f","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3ca40baa99f9578eb8408ee5b9177f7ffe6f65d6","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}