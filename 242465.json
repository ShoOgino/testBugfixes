{"path":"src/java/org/apache/solr/search/ValueSourceParser#getMultiValueSources(List[ValueSource]).mjava","commits":[{"id":"abec2fd822be07fc74ef5ba3609b9c5625a87d6d","date":1261659802,"type":0,"author":"Grant Ingersoll","isMerge":false,"pathNew":"src/java/org/apache/solr/search/ValueSourceParser#getMultiValueSources(List[ValueSource]).mjava","pathOld":"/dev/null","sourceNew":"  private static MVResult getMultiValueSources(List<ValueSource> sources) {\n    MVResult mvr = new MVResult();\n    if (sources.size() % 2 != 0) {\n      throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \"Illegal number of sources.  There must be an even number of sources\");\n    }\n    if (sources.size() == 2) {\n\n      //check to see if these are MultiValueSource\n      boolean s1MV = sources.get(0) instanceof MultiValueSource;\n      boolean s2MV = sources.get(1) instanceof MultiValueSource;\n      if (s1MV && s2MV) {\n        mvr.mv1 = (MultiValueSource) sources.get(0);\n        mvr.mv2 = (MultiValueSource) sources.get(1);\n      } else if (s1MV ||\n              s2MV) {\n        //if one is a MultiValueSource, than the other one needs to be too.\n        throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \"Illegal number of sources.  There must be an even number of sources\");\n      } else {\n        mvr.mv1 = new ToMultiValueSource(Collections.singletonList(sources.get(0)));\n        mvr.mv2 = new ToMultiValueSource(Collections.singletonList(sources.get(1)));\n      }\n    } else {\n      int dim = sources.size() / 2;\n      List<ValueSource> sources1 = new ArrayList<ValueSource>(dim);\n      List<ValueSource> sources2 = new ArrayList<ValueSource>(dim);\n      //Get dim value sources for the first vector\n      splitSources(dim, sources, sources1, sources2);\n      mvr.mv1 = new ToMultiValueSource(sources1);\n      mvr.mv2 = new ToMultiValueSource(sources2);\n    }\n\n    return mvr;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5703611aa66d862b378d511ccaa2e6d68bab5326","date":1262011278,"type":3,"author":"Grant Ingersoll","isMerge":false,"pathNew":"src/java/org/apache/solr/search/ValueSourceParser#getMultiValueSources(List[ValueSource]).mjava","pathOld":"src/java/org/apache/solr/search/ValueSourceParser#getMultiValueSources(List[ValueSource]).mjava","sourceNew":"  private static MVResult getMultiValueSources(List<ValueSource> sources) {\n    MVResult mvr = new MVResult();\n    if (sources.size() % 2 != 0) {\n      throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \"Illegal number of sources.  There must be an even number of sources\");\n    }\n    if (sources.size() == 2) {\n\n      //check to see if these are MultiValueSource\n      boolean s1MV = sources.get(0) instanceof MultiValueSource;\n      boolean s2MV = sources.get(1) instanceof MultiValueSource;\n      if (s1MV && s2MV) {\n        mvr.mv1 = (MultiValueSource) sources.get(0);\n        mvr.mv2 = (MultiValueSource) sources.get(1);\n      } else if (s1MV ||\n              s2MV) {\n        //if one is a MultiValueSource, than the other one needs to be too.\n        throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \"Illegal number of sources.  There must be an even number of sources\");\n      } else {\n        mvr.mv1 = new VectorValueSource(Collections.singletonList(sources.get(0)));\n        mvr.mv2 = new VectorValueSource(Collections.singletonList(sources.get(1)));\n      }\n    } else {\n      int dim = sources.size() / 2;\n      List<ValueSource> sources1 = new ArrayList<ValueSource>(dim);\n      List<ValueSource> sources2 = new ArrayList<ValueSource>(dim);\n      //Get dim value sources for the first vector\n      splitSources(dim, sources, sources1, sources2);\n      mvr.mv1 = new VectorValueSource(sources1);\n      mvr.mv2 = new VectorValueSource(sources2);\n    }\n\n    return mvr;\n  }\n\n","sourceOld":"  private static MVResult getMultiValueSources(List<ValueSource> sources) {\n    MVResult mvr = new MVResult();\n    if (sources.size() % 2 != 0) {\n      throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \"Illegal number of sources.  There must be an even number of sources\");\n    }\n    if (sources.size() == 2) {\n\n      //check to see if these are MultiValueSource\n      boolean s1MV = sources.get(0) instanceof MultiValueSource;\n      boolean s2MV = sources.get(1) instanceof MultiValueSource;\n      if (s1MV && s2MV) {\n        mvr.mv1 = (MultiValueSource) sources.get(0);\n        mvr.mv2 = (MultiValueSource) sources.get(1);\n      } else if (s1MV ||\n              s2MV) {\n        //if one is a MultiValueSource, than the other one needs to be too.\n        throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \"Illegal number of sources.  There must be an even number of sources\");\n      } else {\n        mvr.mv1 = new ToMultiValueSource(Collections.singletonList(sources.get(0)));\n        mvr.mv2 = new ToMultiValueSource(Collections.singletonList(sources.get(1)));\n      }\n    } else {\n      int dim = sources.size() / 2;\n      List<ValueSource> sources1 = new ArrayList<ValueSource>(dim);\n      List<ValueSource> sources2 = new ArrayList<ValueSource>(dim);\n      //Get dim value sources for the first vector\n      splitSources(dim, sources, sources1, sources2);\n      mvr.mv1 = new ToMultiValueSource(sources1);\n      mvr.mv2 = new ToMultiValueSource(sources2);\n    }\n\n    return mvr;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ad94625fb8d088209f46650c8097196fec67f00c","date":1453508319,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/src/java/org/apache/solr/search/ValueSourceParser#getMultiValueSources(List[ValueSource]).mjava","pathOld":"src/java/org/apache/solr/search/ValueSourceParser#getMultiValueSources(List[ValueSource]).mjava","sourceNew":"  private static MVResult getMultiValueSources(List<ValueSource> sources) {\n    MVResult mvr = new MVResult();\n    if (sources.size() % 2 != 0) {\n      throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \"Illegal number of sources.  There must be an even number of sources\");\n    }\n    if (sources.size() == 2) {\n\n      //check to see if these are MultiValueSource\n      boolean s1MV = sources.get(0) instanceof MultiValueSource;\n      boolean s2MV = sources.get(1) instanceof MultiValueSource;\n      if (s1MV && s2MV) {\n        mvr.mv1 = (MultiValueSource) sources.get(0);\n        mvr.mv2 = (MultiValueSource) sources.get(1);\n      } else if (s1MV ||\n              s2MV) {\n        //if one is a MultiValueSource, than the other one needs to be too.\n        throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \"Illegal number of sources.  There must be an even number of sources\");\n      } else {\n        mvr.mv1 = new VectorValueSource(Collections.singletonList(sources.get(0)));\n        mvr.mv2 = new VectorValueSource(Collections.singletonList(sources.get(1)));\n      }\n    } else {\n      int dim = sources.size() / 2;\n      List<ValueSource> sources1 = new ArrayList<ValueSource>(dim);\n      List<ValueSource> sources2 = new ArrayList<ValueSource>(dim);\n      //Get dim value sources for the first vector\n      splitSources(dim, sources, sources1, sources2);\n      mvr.mv1 = new VectorValueSource(sources1);\n      mvr.mv2 = new VectorValueSource(sources2);\n    }\n\n    return mvr;\n  }\n\n","sourceOld":"  private static MVResult getMultiValueSources(List<ValueSource> sources) {\n    MVResult mvr = new MVResult();\n    if (sources.size() % 2 != 0) {\n      throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \"Illegal number of sources.  There must be an even number of sources\");\n    }\n    if (sources.size() == 2) {\n\n      //check to see if these are MultiValueSource\n      boolean s1MV = sources.get(0) instanceof MultiValueSource;\n      boolean s2MV = sources.get(1) instanceof MultiValueSource;\n      if (s1MV && s2MV) {\n        mvr.mv1 = (MultiValueSource) sources.get(0);\n        mvr.mv2 = (MultiValueSource) sources.get(1);\n      } else if (s1MV ||\n              s2MV) {\n        //if one is a MultiValueSource, than the other one needs to be too.\n        throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \"Illegal number of sources.  There must be an even number of sources\");\n      } else {\n        mvr.mv1 = new VectorValueSource(Collections.singletonList(sources.get(0)));\n        mvr.mv2 = new VectorValueSource(Collections.singletonList(sources.get(1)));\n      }\n    } else {\n      int dim = sources.size() / 2;\n      List<ValueSource> sources1 = new ArrayList<ValueSource>(dim);\n      List<ValueSource> sources2 = new ArrayList<ValueSource>(dim);\n      //Get dim value sources for the first vector\n      splitSources(dim, sources, sources1, sources2);\n      mvr.mv1 = new VectorValueSource(sources1);\n      mvr.mv2 = new VectorValueSource(sources2);\n    }\n\n    return mvr;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"abec2fd822be07fc74ef5ba3609b9c5625a87d6d":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"5703611aa66d862b378d511ccaa2e6d68bab5326":["abec2fd822be07fc74ef5ba3609b9c5625a87d6d"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"ad94625fb8d088209f46650c8097196fec67f00c":["5703611aa66d862b378d511ccaa2e6d68bab5326"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"abec2fd822be07fc74ef5ba3609b9c5625a87d6d":["5703611aa66d862b378d511ccaa2e6d68bab5326"],"5703611aa66d862b378d511ccaa2e6d68bab5326":["ad94625fb8d088209f46650c8097196fec67f00c"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["abec2fd822be07fc74ef5ba3609b9c5625a87d6d"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"ad94625fb8d088209f46650c8097196fec67f00c":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["ad94625fb8d088209f46650c8097196fec67f00c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b","a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}