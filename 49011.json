{"path":"src/test/org/apache/lucene/store/TestRAMDirectory#testRAMDirectory().mjava","commits":[{"id":"f0ccb38525d59e4082f912797fe4d0a7d9bead43","date":1245100309,"type":1,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/test/org/apache/lucene/store/TestRAMDirectory#testRAMDirectory().mjava","pathOld":"src/test/org/apache/lucene/index/store/TestRAMDirectory#testRAMDirectory().mjava","sourceNew":"  public void testRAMDirectory () throws IOException {\n    \n    Directory dir = FSDirectory.open(indexDir);\n    MockRAMDirectory ramDir = new MockRAMDirectory(dir);\n    \n    // close the underlaying directory\n    dir.close();\n    \n    // Check size\n    assertEquals(ramDir.sizeInBytes(), ramDir.getRecomputedSizeInBytes());\n    \n    // open reader to test document count\n    IndexReader reader = IndexReader.open(ramDir);\n    assertEquals(docsToAdd, reader.numDocs());\n    \n    // open search zo check if all doc's are there\n    IndexSearcher searcher = new IndexSearcher(reader);\n    \n    // search for all documents\n    for (int i = 0; i < docsToAdd; i++) {\n      Document doc = searcher.doc(i);\n      assertTrue(doc.getField(\"content\") != null);\n    }\n\n    // cleanup\n    reader.close();\n    searcher.close();\n  }\n\n","sourceOld":"  public void testRAMDirectory () throws IOException {\n    \n    Directory dir = FSDirectory.open(indexDir);\n    MockRAMDirectory ramDir = new MockRAMDirectory(dir);\n    \n    // close the underlaying directory\n    dir.close();\n    \n    // Check size\n    assertEquals(ramDir.sizeInBytes(), ramDir.getRecomputedSizeInBytes());\n    \n    // open reader to test document count\n    IndexReader reader = IndexReader.open(ramDir);\n    assertEquals(docsToAdd, reader.numDocs());\n    \n    // open search zo check if all doc's are there\n    IndexSearcher searcher = new IndexSearcher(reader);\n    \n    // search for all documents\n    for (int i = 0; i < docsToAdd; i++) {\n      Document doc = searcher.doc(i);\n      assertTrue(doc.getField(\"content\") != null);\n    }\n\n    // cleanup\n    reader.close();\n    searcher.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e8d1458a2543cbd30cbfe7929be4dcb5c5251659","date":1254582241,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/test/org/apache/lucene/store/TestRAMDirectory#testRAMDirectory().mjava","pathOld":"src/test/org/apache/lucene/store/TestRAMDirectory#testRAMDirectory().mjava","sourceNew":"  public void testRAMDirectory () throws IOException {\n    \n    Directory dir = FSDirectory.open(indexDir);\n    MockRAMDirectory ramDir = new MockRAMDirectory(dir);\n    \n    // close the underlaying directory\n    dir.close();\n    \n    // Check size\n    assertEquals(ramDir.sizeInBytes(), ramDir.getRecomputedSizeInBytes());\n    \n    // open reader to test document count\n    IndexReader reader = IndexReader.open(ramDir, true);\n    assertEquals(docsToAdd, reader.numDocs());\n    \n    // open search zo check if all doc's are there\n    IndexSearcher searcher = new IndexSearcher(reader);\n    \n    // search for all documents\n    for (int i = 0; i < docsToAdd; i++) {\n      Document doc = searcher.doc(i);\n      assertTrue(doc.getField(\"content\") != null);\n    }\n\n    // cleanup\n    reader.close();\n    searcher.close();\n  }\n\n","sourceOld":"  public void testRAMDirectory () throws IOException {\n    \n    Directory dir = FSDirectory.open(indexDir);\n    MockRAMDirectory ramDir = new MockRAMDirectory(dir);\n    \n    // close the underlaying directory\n    dir.close();\n    \n    // Check size\n    assertEquals(ramDir.sizeInBytes(), ramDir.getRecomputedSizeInBytes());\n    \n    // open reader to test document count\n    IndexReader reader = IndexReader.open(ramDir);\n    assertEquals(docsToAdd, reader.numDocs());\n    \n    // open search zo check if all doc's are there\n    IndexSearcher searcher = new IndexSearcher(reader);\n    \n    // search for all documents\n    for (int i = 0; i < docsToAdd; i++) {\n      Document doc = searcher.doc(i);\n      assertTrue(doc.getField(\"content\") != null);\n    }\n\n    // cleanup\n    reader.close();\n    searcher.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0a046c0c310bc77931fc8441bd920053b607dd14","date":1254584734,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"src/test/org/apache/lucene/store/TestRAMDirectory#testRAMDirectory().mjava","pathOld":"src/test/org/apache/lucene/store/TestRAMDirectory#testRAMDirectory().mjava","sourceNew":"  public void testRAMDirectory () throws IOException {\n    \n    Directory dir = FSDirectory.open(indexDir);\n    MockRAMDirectory ramDir = new MockRAMDirectory(dir);\n    \n    // close the underlaying directory\n    dir.close();\n    \n    // Check size\n    assertEquals(ramDir.sizeInBytes(), ramDir.getRecomputedSizeInBytes());\n    \n    // open reader to test document count\n    IndexReader reader = IndexReader.open(ramDir, true);\n    assertEquals(docsToAdd, reader.numDocs());\n    \n    // open search zo check if all doc's are there\n    IndexSearcher searcher = new IndexSearcher(reader);\n    \n    // search for all documents\n    for (int i = 0; i < docsToAdd; i++) {\n      Document doc = searcher.doc(i);\n      assertTrue(doc.getField(\"content\") != null);\n    }\n\n    // cleanup\n    reader.close();\n    searcher.close();\n  }\n\n","sourceOld":"  public void testRAMDirectory () throws IOException {\n    \n    Directory dir = FSDirectory.open(indexDir);\n    MockRAMDirectory ramDir = new MockRAMDirectory(dir);\n    \n    // close the underlaying directory\n    dir.close();\n    \n    // Check size\n    assertEquals(ramDir.sizeInBytes(), ramDir.getRecomputedSizeInBytes());\n    \n    // open reader to test document count\n    IndexReader reader = IndexReader.open(ramDir);\n    assertEquals(docsToAdd, reader.numDocs());\n    \n    // open search zo check if all doc's are there\n    IndexSearcher searcher = new IndexSearcher(reader);\n    \n    // search for all documents\n    for (int i = 0; i < docsToAdd; i++) {\n      Document doc = searcher.doc(i);\n      assertTrue(doc.getField(\"content\") != null);\n    }\n\n    // cleanup\n    reader.close();\n    searcher.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/store/TestRAMDirectory#testRAMDirectory().mjava","pathOld":"src/test/org/apache/lucene/store/TestRAMDirectory#testRAMDirectory().mjava","sourceNew":"  public void testRAMDirectory () throws IOException {\n    \n    Directory dir = FSDirectory.open(indexDir);\n    MockRAMDirectory ramDir = new MockRAMDirectory(dir);\n    \n    // close the underlaying directory\n    dir.close();\n    \n    // Check size\n    assertEquals(ramDir.sizeInBytes(), ramDir.getRecomputedSizeInBytes());\n    \n    // open reader to test document count\n    IndexReader reader = IndexReader.open(ramDir, true);\n    assertEquals(docsToAdd, reader.numDocs());\n    \n    // open search zo check if all doc's are there\n    IndexSearcher searcher = new IndexSearcher(reader);\n    \n    // search for all documents\n    for (int i = 0; i < docsToAdd; i++) {\n      Document doc = searcher.doc(i);\n      assertTrue(doc.getField(\"content\") != null);\n    }\n\n    // cleanup\n    reader.close();\n    searcher.close();\n  }\n\n","sourceOld":"  public void testRAMDirectory () throws IOException {\n    \n    Directory dir = FSDirectory.open(indexDir);\n    MockRAMDirectory ramDir = new MockRAMDirectory(dir);\n    \n    // close the underlaying directory\n    dir.close();\n    \n    // Check size\n    assertEquals(ramDir.sizeInBytes(), ramDir.getRecomputedSizeInBytes());\n    \n    // open reader to test document count\n    IndexReader reader = IndexReader.open(ramDir, true);\n    assertEquals(docsToAdd, reader.numDocs());\n    \n    // open search zo check if all doc's are there\n    IndexSearcher searcher = new IndexSearcher(reader);\n    \n    // search for all documents\n    for (int i = 0; i < docsToAdd; i++) {\n      Document doc = searcher.doc(i);\n      assertTrue(doc.getField(\"content\") != null);\n    }\n\n    // cleanup\n    reader.close();\n    searcher.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"e8d1458a2543cbd30cbfe7929be4dcb5c5251659":["f0ccb38525d59e4082f912797fe4d0a7d9bead43"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"0a046c0c310bc77931fc8441bd920053b607dd14":["f0ccb38525d59e4082f912797fe4d0a7d9bead43","e8d1458a2543cbd30cbfe7929be4dcb5c5251659"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["0a046c0c310bc77931fc8441bd920053b607dd14"],"f0ccb38525d59e4082f912797fe4d0a7d9bead43":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"e8d1458a2543cbd30cbfe7929be4dcb5c5251659":["0a046c0c310bc77931fc8441bd920053b607dd14"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["f0ccb38525d59e4082f912797fe4d0a7d9bead43"],"0a046c0c310bc77931fc8441bd920053b607dd14":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"f0ccb38525d59e4082f912797fe4d0a7d9bead43":["e8d1458a2543cbd30cbfe7929be4dcb5c5251659","0a046c0c310bc77931fc8441bd920053b607dd14"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}