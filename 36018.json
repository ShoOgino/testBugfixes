{"path":"lucene/spatial/src/java/org/apache/lucene/spatial/prefix/ContainsPrefixTreeFilter.ContainsVisitor#seek(Cell).mjava","commits":[{"id":"11ac40ec1cc2f6d61b8c8f0cd9b306dfcef5aaf0","date":1426015524,"type":0,"author":"David Wayne Smiley","isMerge":false,"pathNew":"lucene/spatial/src/java/org/apache/lucene/spatial/prefix/ContainsPrefixTreeFilter.ContainsVisitor#seek(Cell).mjava","pathOld":"/dev/null","sourceNew":"    private boolean seek(Cell cell) throws IOException {\n      if (thisTerm == null)\n        return false;\n      final int compare = indexedCell.compareToNoLeaf(cell);\n      if (compare > 0) {\n        return false;//leap-frog effect\n      } else if (compare == 0) {\n        return true; // already there!\n      } else {//compare > 0\n        //seek!\n        seekTerm = cell.getTokenBytesNoLeaf(seekTerm);\n        final TermsEnum.SeekStatus seekStatus = termsEnum.seekCeil(seekTerm);\n        if (seekStatus == TermsEnum.SeekStatus.END) {\n          thisTerm = null;//all done\n          return false;\n        }\n        thisTerm = termsEnum.term();\n        indexedCell = grid.readCell(thisTerm, indexedCell);\n        if (seekStatus == TermsEnum.SeekStatus.FOUND) {\n          return true;\n        }\n        return indexedCell.isLeaf() && indexedCell.compareToNoLeaf(cell) == 0;\n      }\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","date":1427779360,"type":0,"author":"Ryan Ernst","isMerge":true,"pathNew":"lucene/spatial/src/java/org/apache/lucene/spatial/prefix/ContainsPrefixTreeFilter.ContainsVisitor#seek(Cell).mjava","pathOld":"/dev/null","sourceNew":"    private boolean seek(Cell cell) throws IOException {\n      if (thisTerm == null)\n        return false;\n      final int compare = indexedCell.compareToNoLeaf(cell);\n      if (compare > 0) {\n        return false;//leap-frog effect\n      } else if (compare == 0) {\n        return true; // already there!\n      } else {//compare > 0\n        //seek!\n        seekTerm = cell.getTokenBytesNoLeaf(seekTerm);\n        final TermsEnum.SeekStatus seekStatus = termsEnum.seekCeil(seekTerm);\n        if (seekStatus == TermsEnum.SeekStatus.END) {\n          thisTerm = null;//all done\n          return false;\n        }\n        thisTerm = termsEnum.term();\n        indexedCell = grid.readCell(thisTerm, indexedCell);\n        if (seekStatus == TermsEnum.SeekStatus.FOUND) {\n          return true;\n        }\n        return indexedCell.isLeaf() && indexedCell.compareToNoLeaf(cell) == 0;\n      }\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"672b198fc3dce868916c727917cae58c2906763d","date":1443669960,"type":5,"author":"David Wayne Smiley","isMerge":false,"pathNew":"lucene/spatial/src/java/org/apache/lucene/spatial/prefix/ContainsPrefixTreeQuery.ContainsVisitor#seek(Cell).mjava","pathOld":"lucene/spatial/src/java/org/apache/lucene/spatial/prefix/ContainsPrefixTreeFilter.ContainsVisitor#seek(Cell).mjava","sourceNew":"    private boolean seek(Cell cell) throws IOException {\n      if (thisTerm == null)\n        return false;\n      final int compare = indexedCell.compareToNoLeaf(cell);\n      if (compare > 0) {\n        return false;//leap-frog effect\n      } else if (compare == 0) {\n        return true; // already there!\n      } else {//compare > 0\n        //seek!\n        seekTerm = cell.getTokenBytesNoLeaf(seekTerm);\n        final TermsEnum.SeekStatus seekStatus = termsEnum.seekCeil(seekTerm);\n        if (seekStatus == TermsEnum.SeekStatus.END) {\n          thisTerm = null;//all done\n          return false;\n        }\n        thisTerm = termsEnum.term();\n        indexedCell = grid.readCell(thisTerm, indexedCell);\n        if (seekStatus == TermsEnum.SeekStatus.FOUND) {\n          return true;\n        }\n        return indexedCell.isLeaf() && indexedCell.compareToNoLeaf(cell) == 0;\n      }\n    }\n\n","sourceOld":"    private boolean seek(Cell cell) throws IOException {\n      if (thisTerm == null)\n        return false;\n      final int compare = indexedCell.compareToNoLeaf(cell);\n      if (compare > 0) {\n        return false;//leap-frog effect\n      } else if (compare == 0) {\n        return true; // already there!\n      } else {//compare > 0\n        //seek!\n        seekTerm = cell.getTokenBytesNoLeaf(seekTerm);\n        final TermsEnum.SeekStatus seekStatus = termsEnum.seekCeil(seekTerm);\n        if (seekStatus == TermsEnum.SeekStatus.END) {\n          thisTerm = null;//all done\n          return false;\n        }\n        thisTerm = termsEnum.term();\n        indexedCell = grid.readCell(thisTerm, indexedCell);\n        if (seekStatus == TermsEnum.SeekStatus.FOUND) {\n          return true;\n        }\n        return indexedCell.isLeaf() && indexedCell.compareToNoLeaf(cell) == 0;\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","11ac40ec1cc2f6d61b8c8f0cd9b306dfcef5aaf0"],"672b198fc3dce868916c727917cae58c2906763d":["11ac40ec1cc2f6d61b8c8f0cd9b306dfcef5aaf0"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"11ac40ec1cc2f6d61b8c8f0cd9b306dfcef5aaf0":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["672b198fc3dce868916c727917cae58c2906763d"]},"commit2Childs":{"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":[],"672b198fc3dce868916c727917cae58c2906763d":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","11ac40ec1cc2f6d61b8c8f0cd9b306dfcef5aaf0"],"11ac40ec1cc2f6d61b8c8f0cd9b306dfcef5aaf0":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","672b198fc3dce868916c727917cae58c2906763d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}