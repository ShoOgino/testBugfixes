{"path":"lucene/core/src/test/org/apache/lucene/util/TestNotDocIdSet#copyOf(BitSet,int).mjava","commits":[{"id":"9cd756794a4a9e33f786119818f9d56162965cf8","date":1412591300,"type":0,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/util/TestNotDocIdSet#copyOf(BitSet,int).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public NotDocIdSet copyOf(BitSet bs, int length) throws IOException {\n    final FixedBitSet set = new FixedBitSet(length);\n    for (int doc = bs.nextClearBit(0); doc < length; doc = bs.nextClearBit(doc + 1)) {\n      set.set(doc);\n    }\n    return new NotDocIdSet(length, set);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"55980207f1977bd1463465de1659b821347e2fa8","date":1413336386,"type":0,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/util/TestNotDocIdSet#copyOf(BitSet,int).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public NotDocIdSet copyOf(BitSet bs, int length) throws IOException {\n    final FixedBitSet set = new FixedBitSet(length);\n    for (int doc = bs.nextClearBit(0); doc < length; doc = bs.nextClearBit(doc + 1)) {\n      set.set(doc);\n    }\n    return new NotDocIdSet(length, set);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"80c55596a764e2d397e982828e75fcac5ce430a0","date":1413987559,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/util/TestNotDocIdSet#copyOf(BitSet,int).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/util/TestNotDocIdSet#copyOf(BitSet,int).mjava","sourceNew":"  @Override\n  public NotDocIdSet copyOf(BitSet bs, int length) throws IOException {\n    final FixedBitSet set = new FixedBitSet(length);\n    for (int doc = bs.nextClearBit(0); doc < length; doc = bs.nextClearBit(doc + 1)) {\n      set.set(doc);\n    }\n    return new NotDocIdSet(length, new FixedBitDocIdSet(set));\n  }\n\n","sourceOld":"  @Override\n  public NotDocIdSet copyOf(BitSet bs, int length) throws IOException {\n    final FixedBitSet set = new FixedBitSet(length);\n    for (int doc = bs.nextClearBit(0); doc < length; doc = bs.nextClearBit(doc + 1)) {\n      set.set(doc);\n    }\n    return new NotDocIdSet(length, set);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0abcec02c9851c46c70a75bd42fb6e4d5348ac9e","date":1414135939,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/util/TestNotDocIdSet#copyOf(BitSet,int).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/util/TestNotDocIdSet#copyOf(BitSet,int).mjava","sourceNew":"  @Override\n  public NotDocIdSet copyOf(BitSet bs, int length) throws IOException {\n    final FixedBitSet set = new FixedBitSet(length);\n    for (int doc = bs.nextClearBit(0); doc < length; doc = bs.nextClearBit(doc + 1)) {\n      set.set(doc);\n    }\n    return new NotDocIdSet(length, new BitDocIdSet(set));\n  }\n\n","sourceOld":"  @Override\n  public NotDocIdSet copyOf(BitSet bs, int length) throws IOException {\n    final FixedBitSet set = new FixedBitSet(length);\n    for (int doc = bs.nextClearBit(0); doc < length; doc = bs.nextClearBit(doc + 1)) {\n      set.set(doc);\n    }\n    return new NotDocIdSet(length, new FixedBitDocIdSet(set));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"9cd756794a4a9e33f786119818f9d56162965cf8":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"55980207f1977bd1463465de1659b821347e2fa8":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","9cd756794a4a9e33f786119818f9d56162965cf8"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"80c55596a764e2d397e982828e75fcac5ce430a0":["9cd756794a4a9e33f786119818f9d56162965cf8"],"0abcec02c9851c46c70a75bd42fb6e4d5348ac9e":["80c55596a764e2d397e982828e75fcac5ce430a0"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["0abcec02c9851c46c70a75bd42fb6e4d5348ac9e"]},"commit2Childs":{"9cd756794a4a9e33f786119818f9d56162965cf8":["55980207f1977bd1463465de1659b821347e2fa8","80c55596a764e2d397e982828e75fcac5ce430a0"],"55980207f1977bd1463465de1659b821347e2fa8":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9cd756794a4a9e33f786119818f9d56162965cf8","55980207f1977bd1463465de1659b821347e2fa8"],"80c55596a764e2d397e982828e75fcac5ce430a0":["0abcec02c9851c46c70a75bd42fb6e4d5348ac9e"],"0abcec02c9851c46c70a75bd42fb6e4d5348ac9e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["55980207f1977bd1463465de1659b821347e2fa8","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}