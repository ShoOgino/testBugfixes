{"path":"lucene/core/src/test/org/apache/lucene/document/TestLatLonPointDistanceFeatureQuery#testRandom().mjava","commits":[{"id":"607e7af5082700f0a5d1b5e92452084cf94058d4","date":1537346996,"type":0,"author":"iverase","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/document/TestLatLonPointDistanceFeatureQuery#testRandom().mjava","pathOld":"/dev/null","sourceNew":"  public void testRandom() throws IOException {\n    Directory dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig()\n        .setMergePolicy(newLogMergePolicy(random().nextBoolean())));\n    Document doc = new Document();\n    LatLonPoint point = new LatLonPoint(\"foo\", 0., 0.);\n    doc.add(point);\n    LatLonDocValuesField docValue = new LatLonDocValuesField(\"foo\", 0., 0.);\n    doc.add(docValue);\n\n    int numDocs = atLeast(10000);\n    for (int i = 0; i < numDocs; ++i) {\n      double lat = random().nextDouble() * 180 - 90;\n      double lon = random().nextDouble() * 360 - 180;\n      point.setLocationValue(lat, lon);\n      docValue.setLocationValue(lat, lon);\n      w.addDocument(doc);\n    }\n\n    IndexReader reader = DirectoryReader.open(w);\n    IndexSearcher searcher = newSearcher(reader);\n\n    for (int iter = 0; iter < 10; ++iter) {\n      double lat = random().nextDouble() * 180 - 90;\n      double lon = random().nextDouble() * 360 - 180;\n      double  pivotDistance = random().nextDouble() * random().nextDouble() * Math.PI * GeoUtils.EARTH_MEAN_RADIUS_METERS;\n      float boost = (1 + random().nextInt(10)) / 3f;\n      Query q = LatLonPoint.newDistanceFeatureQuery(\"foo\", boost, lat, lon, pivotDistance);\n\n      CheckHits.checkTopScores(random(), q, searcher);\n    }\n\n    reader.close();\n    w.close();\n    dir.close();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["71da933d30aea361ccc224d6544c451cbf49916d"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"71da933d30aea361ccc224d6544c451cbf49916d","date":1579874339,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/document/TestLatLonPointDistanceFeatureQuery#testRandom().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/document/TestLatLonPointDistanceFeatureQuery#testRandom().mjava","sourceNew":"  public void testRandom() throws IOException {\n    Directory dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig()\n        .setMergePolicy(newLogMergePolicy(random().nextBoolean())));\n    Document doc = new Document();\n    LatLonPoint point = new LatLonPoint(\"foo\", 0., 0.);\n    doc.add(point);\n    LatLonDocValuesField docValue = new LatLonDocValuesField(\"foo\", 0., 0.);\n    doc.add(docValue);\n\n    int numDocs = atLeast(1000);\n    for (int i = 0; i < numDocs; ++i) {\n      double lat = random().nextDouble() * 180 - 90;\n      double lon = random().nextDouble() * 360 - 180;\n      point.setLocationValue(lat, lon);\n      docValue.setLocationValue(lat, lon);\n      w.addDocument(doc);\n    }\n\n    IndexReader reader = DirectoryReader.open(w);\n    IndexSearcher searcher = newSearcher(reader);\n\n    int numIters = atLeast(3);\n    for (int iter = 0; iter < numIters; ++iter) {\n      double lat = random().nextDouble() * 180 - 90;\n      double lon = random().nextDouble() * 360 - 180;\n      double  pivotDistance = random().nextDouble() * random().nextDouble() * Math.PI * GeoUtils.EARTH_MEAN_RADIUS_METERS;\n      float boost = (1 + random().nextInt(10)) / 3f;\n      Query q = LatLonPoint.newDistanceFeatureQuery(\"foo\", boost, lat, lon, pivotDistance);\n\n      CheckHits.checkTopScores(random(), q, searcher);\n    }\n\n    reader.close();\n    w.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testRandom() throws IOException {\n    Directory dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig()\n        .setMergePolicy(newLogMergePolicy(random().nextBoolean())));\n    Document doc = new Document();\n    LatLonPoint point = new LatLonPoint(\"foo\", 0., 0.);\n    doc.add(point);\n    LatLonDocValuesField docValue = new LatLonDocValuesField(\"foo\", 0., 0.);\n    doc.add(docValue);\n\n    int numDocs = atLeast(10000);\n    for (int i = 0; i < numDocs; ++i) {\n      double lat = random().nextDouble() * 180 - 90;\n      double lon = random().nextDouble() * 360 - 180;\n      point.setLocationValue(lat, lon);\n      docValue.setLocationValue(lat, lon);\n      w.addDocument(doc);\n    }\n\n    IndexReader reader = DirectoryReader.open(w);\n    IndexSearcher searcher = newSearcher(reader);\n\n    for (int iter = 0; iter < 10; ++iter) {\n      double lat = random().nextDouble() * 180 - 90;\n      double lon = random().nextDouble() * 360 - 180;\n      double  pivotDistance = random().nextDouble() * random().nextDouble() * Math.PI * GeoUtils.EARTH_MEAN_RADIUS_METERS;\n      float boost = (1 + random().nextInt(10)) / 3f;\n      Query q = LatLonPoint.newDistanceFeatureQuery(\"foo\", boost, lat, lon, pivotDistance);\n\n      CheckHits.checkTopScores(random(), q, searcher);\n    }\n\n    reader.close();\n    w.close();\n    dir.close();\n  }\n\n","bugFix":["607e7af5082700f0a5d1b5e92452084cf94058d4"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"607e7af5082700f0a5d1b5e92452084cf94058d4":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["71da933d30aea361ccc224d6544c451cbf49916d"],"71da933d30aea361ccc224d6544c451cbf49916d":["607e7af5082700f0a5d1b5e92452084cf94058d4"]},"commit2Childs":{"607e7af5082700f0a5d1b5e92452084cf94058d4":["71da933d30aea361ccc224d6544c451cbf49916d"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["607e7af5082700f0a5d1b5e92452084cf94058d4"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"71da933d30aea361ccc224d6544c451cbf49916d":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}