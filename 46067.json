{"path":"src/java/org/apache/solr/schema/IntField#write(TextResponseWriter,String,Fieldable).mjava","commits":[{"id":"434ff4225627b937a533128f8746eb1e9009fc95","date":1153247240,"type":0,"author":"Yonik Seeley","isMerge":false,"pathNew":"src/java/org/apache/solr/schema/IntField#write(TextResponseWriter,String,Fieldable).mjava","pathOld":"/dev/null","sourceNew":"  public void write(TextResponseWriter writer, String name, Fieldable f) throws IOException {\n    writer.writeInt(name, f.stringValue());\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["5778062586084b6aa07f7c3c649ccfccc155377f"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"5778062586084b6aa07f7c3c649ccfccc155377f","date":1194881685,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"src/java/org/apache/solr/schema/IntField#write(TextResponseWriter,String,Fieldable).mjava","pathOld":"src/java/org/apache/solr/schema/IntField#write(TextResponseWriter,String,Fieldable).mjava","sourceNew":"  public void write(TextResponseWriter writer, String name, Fieldable f) throws IOException {\n    String s = f.stringValue();\n    int len = s.length();\n    if (len>=2) {\n      char ch = s.charAt(0);\n      if ((ch=='0') || (ch=='-' && s.charAt(1)=='0')) {\n        s = Integer.toString(Integer.parseInt(s));\n      }\n    }\n    writer.writeInt(name, s);\n  }\n\n","sourceOld":"  public void write(TextResponseWriter writer, String name, Fieldable f) throws IOException {\n    writer.writeInt(name, f.stringValue());\n  }\n\n","bugFix":["434ff4225627b937a533128f8746eb1e9009fc95"],"bugIntro":["f8e60bbd6afc5b3216d5504e5f34a4ce2b96f20a"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"6b9d74c3f9cde708cb158049f28729ff96eaf0c6","date":1213912253,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"src/java/org/apache/solr/schema/IntField#write(TextResponseWriter,String,Fieldable).mjava","pathOld":"src/java/org/apache/solr/schema/IntField#write(TextResponseWriter,String,Fieldable).mjava","sourceNew":"  public void write(TextResponseWriter writer, String name, Fieldable f) throws IOException {\n    String s = f.stringValue();\n    int len = s.length();\n    // these values may be from a legacy lucene index, which may contain\n    // integer values padded with zeros, or a zero length value.\n    if (len>=2) {\n      char ch = s.charAt(0);\n      if ((ch=='0') || (ch=='-' && s.charAt(1)=='0')) {\n        s = Integer.toString(Integer.parseInt(s));\n      }\n    } else if (len == 0) {\n      // zero length value means someone mistakenly indexed the value\n      // instead of simply leaving it out.  Write a null value instead\n      // of an integer value in this case.\n      writer.writeNull(name);\n      return;\n    }\n    writer.writeInt(name, s);\n  }\n\n","sourceOld":"  public void write(TextResponseWriter writer, String name, Fieldable f) throws IOException {\n    String s = f.stringValue();\n    int len = s.length();\n    if (len>=2) {\n      char ch = s.charAt(0);\n      if ((ch=='0') || (ch=='-' && s.charAt(1)=='0')) {\n        s = Integer.toString(Integer.parseInt(s));\n      }\n    }\n    writer.writeInt(name, s);\n  }\n\n","bugFix":null,"bugIntro":["f8e60bbd6afc5b3216d5504e5f34a4ce2b96f20a"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"f8e60bbd6afc5b3216d5504e5f34a4ce2b96f20a","date":1249419072,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"src/java/org/apache/solr/schema/IntField#write(TextResponseWriter,String,Fieldable).mjava","pathOld":"src/java/org/apache/solr/schema/IntField#write(TextResponseWriter,String,Fieldable).mjava","sourceNew":"  public void write(TextResponseWriter writer, String name, Fieldable f) throws IOException {\n    String s = f.stringValue();\n\n    // these values may be from a legacy lucene index, which may\n    // not be properly formatted in some output formats, or may\n    // incorrectly have a zero length.\n\n    if (s.length()==0) {\n      // zero length value means someone mistakenly indexed the value\n      // instead of simply leaving it out.  Write a null value instead of a numeric.\n      writer.writeNull(name);\n      return;\n    }\n\n    try {\n      int val = Integer.parseInt(s);\n      writer.writeInt(name, val);\n    } catch (NumberFormatException e){\n      // can't parse - write out the contents as a string so nothing is lost and\n      // clients don't get a parse error.\n      writer.writeStr(name, s, true);\n    }\n  }\n\n","sourceOld":"  public void write(TextResponseWriter writer, String name, Fieldable f) throws IOException {\n    String s = f.stringValue();\n    int len = s.length();\n    // these values may be from a legacy lucene index, which may contain\n    // integer values padded with zeros, or a zero length value.\n    if (len>=2) {\n      char ch = s.charAt(0);\n      if ((ch=='0') || (ch=='-' && s.charAt(1)=='0')) {\n        s = Integer.toString(Integer.parseInt(s));\n      }\n    } else if (len == 0) {\n      // zero length value means someone mistakenly indexed the value\n      // instead of simply leaving it out.  Write a null value instead\n      // of an integer value in this case.\n      writer.writeNull(name);\n      return;\n    }\n    writer.writeInt(name, s);\n  }\n\n","bugFix":["5778062586084b6aa07f7c3c649ccfccc155377f","6b9d74c3f9cde708cb158049f28729ff96eaf0c6"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ad94625fb8d088209f46650c8097196fec67f00c","date":1453508319,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/src/java/org/apache/solr/schema/IntField#write(TextResponseWriter,String,Fieldable).mjava","pathOld":"src/java/org/apache/solr/schema/IntField#write(TextResponseWriter,String,Fieldable).mjava","sourceNew":"  public void write(TextResponseWriter writer, String name, Fieldable f) throws IOException {\n    String s = f.stringValue();\n\n    // these values may be from a legacy lucene index, which may\n    // not be properly formatted in some output formats, or may\n    // incorrectly have a zero length.\n\n    if (s.length()==0) {\n      // zero length value means someone mistakenly indexed the value\n      // instead of simply leaving it out.  Write a null value instead of a numeric.\n      writer.writeNull(name);\n      return;\n    }\n\n    try {\n      int val = Integer.parseInt(s);\n      writer.writeInt(name, val);\n    } catch (NumberFormatException e){\n      // can't parse - write out the contents as a string so nothing is lost and\n      // clients don't get a parse error.\n      writer.writeStr(name, s, true);\n    }\n  }\n\n","sourceOld":"  public void write(TextResponseWriter writer, String name, Fieldable f) throws IOException {\n    String s = f.stringValue();\n\n    // these values may be from a legacy lucene index, which may\n    // not be properly formatted in some output formats, or may\n    // incorrectly have a zero length.\n\n    if (s.length()==0) {\n      // zero length value means someone mistakenly indexed the value\n      // instead of simply leaving it out.  Write a null value instead of a numeric.\n      writer.writeNull(name);\n      return;\n    }\n\n    try {\n      int val = Integer.parseInt(s);\n      writer.writeInt(name, val);\n    } catch (NumberFormatException e){\n      // can't parse - write out the contents as a string so nothing is lost and\n      // clients don't get a parse error.\n      writer.writeStr(name, s, true);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"434ff4225627b937a533128f8746eb1e9009fc95":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"f8e60bbd6afc5b3216d5504e5f34a4ce2b96f20a":["6b9d74c3f9cde708cb158049f28729ff96eaf0c6"],"6b9d74c3f9cde708cb158049f28729ff96eaf0c6":["5778062586084b6aa07f7c3c649ccfccc155377f"],"5778062586084b6aa07f7c3c649ccfccc155377f":["434ff4225627b937a533128f8746eb1e9009fc95"],"ad94625fb8d088209f46650c8097196fec67f00c":["f8e60bbd6afc5b3216d5504e5f34a4ce2b96f20a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"434ff4225627b937a533128f8746eb1e9009fc95":["5778062586084b6aa07f7c3c649ccfccc155377f"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["434ff4225627b937a533128f8746eb1e9009fc95"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"f8e60bbd6afc5b3216d5504e5f34a4ce2b96f20a":["ad94625fb8d088209f46650c8097196fec67f00c"],"6b9d74c3f9cde708cb158049f28729ff96eaf0c6":["f8e60bbd6afc5b3216d5504e5f34a4ce2b96f20a"],"5778062586084b6aa07f7c3c649ccfccc155377f":["6b9d74c3f9cde708cb158049f28729ff96eaf0c6"],"ad94625fb8d088209f46650c8097196fec67f00c":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["ad94625fb8d088209f46650c8097196fec67f00c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b","a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}