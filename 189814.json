{"path":"solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/TestScriptTransformer#testBasic().mjava","commits":[{"id":"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91","date":1306767085,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/TestScriptTransformer#testBasic().mjava","pathOld":"solr/contrib/dataimporthandler/src/test/java/org/apache/solr/handler/dataimport/TestScriptTransformer#testBasic().mjava","sourceNew":"  @Test\n  public void testBasic() {\n    try {\n      String script = \"function f1(row,context){\"\n              + \"row.put('name','Hello ' + row.get('name'));\" + \"return row;\\n\" + \"}\";\n      Context context = getContext(\"f1\", script);\n      Map<String, Object> map = new HashMap<String, Object>();\n      map.put(\"name\", \"Scott\");\n      EntityProcessorWrapper sep = new EntityProcessorWrapper(new SqlEntityProcessor(), null);\n      sep.init(context);\n      sep.applyTransformer(map);\n      assertEquals(map.get(\"name\"), \"Hello Scott\");\n    } catch (DataImportHandlerException e) {\n      assumeFalse(\"JRE does not contain a JavaScript engine (OpenJDK)\", \"<script> can be used only in java 6 or above\".equals(e.getMessage()));\n      throw e;\n    }\n  }\n\n","sourceOld":"  @Test\n  public void testBasic() {\n    try {\n      String script = \"function f1(row,context){\"\n              + \"row.put('name','Hello ' + row.get('name'));\" + \"return row;\\n\" + \"}\";\n      Context context = getContext(\"f1\", script);\n      Map<String, Object> map = new HashMap<String, Object>();\n      map.put(\"name\", \"Scott\");\n      EntityProcessorWrapper sep = new EntityProcessorWrapper(new SqlEntityProcessor(), null);\n      sep.init(context);\n      sep.applyTransformer(map);\n      assertEquals(map.get(\"name\"), \"Hello Scott\");\n    } catch (DataImportHandlerException e) {\n      assumeFalse(\"JRE does not contain a JavaScript engine (OpenJDK)\", \"<script> can be used only in java 6 or above\".equals(e.getMessage()));\n      throw e;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/TestScriptTransformer#testBasic().mjava","pathOld":"solr/contrib/dataimporthandler/src/test/java/org/apache/solr/handler/dataimport/TestScriptTransformer#testBasic().mjava","sourceNew":"  @Test\n  public void testBasic() {\n    try {\n      String script = \"function f1(row,context){\"\n              + \"row.put('name','Hello ' + row.get('name'));\" + \"return row;\\n\" + \"}\";\n      Context context = getContext(\"f1\", script);\n      Map<String, Object> map = new HashMap<String, Object>();\n      map.put(\"name\", \"Scott\");\n      EntityProcessorWrapper sep = new EntityProcessorWrapper(new SqlEntityProcessor(), null);\n      sep.init(context);\n      sep.applyTransformer(map);\n      assertEquals(map.get(\"name\"), \"Hello Scott\");\n    } catch (DataImportHandlerException e) {\n      assumeFalse(\"JRE does not contain a JavaScript engine (OpenJDK)\", \"<script> can be used only in java 6 or above\".equals(e.getMessage()));\n      throw e;\n    }\n  }\n\n","sourceOld":"  @Test\n  public void testBasic() {\n    try {\n      String script = \"function f1(row,context){\"\n              + \"row.put('name','Hello ' + row.get('name'));\" + \"return row;\\n\" + \"}\";\n      Context context = getContext(\"f1\", script);\n      Map<String, Object> map = new HashMap<String, Object>();\n      map.put(\"name\", \"Scott\");\n      EntityProcessorWrapper sep = new EntityProcessorWrapper(new SqlEntityProcessor(), null);\n      sep.init(context);\n      sep.applyTransformer(map);\n      assertEquals(map.get(\"name\"), \"Hello Scott\");\n    } catch (DataImportHandlerException e) {\n      assumeFalse(\"JRE does not contain a JavaScript engine (OpenJDK)\", \"<script> can be used only in java 6 or above\".equals(e.getMessage()));\n      throw e;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a507ba86bd46252f5c881f22005d68d59724793a","date":1329851131,"type":3,"author":"Steven Rowe","isMerge":false,"pathNew":"solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/TestScriptTransformer#testBasic().mjava","pathOld":"solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/TestScriptTransformer#testBasic().mjava","sourceNew":"  @Test\n  public void testBasic() {\n    try {\n      String script = \"function f1(row,context){\"\n              + \"row.put('name','Hello ' + row.get('name'));\" + \"return row;\\n\" + \"}\";\n      Context context = getContext(\"f1\", script);\n      Map<String, Object> map = new HashMap<String, Object>();\n      map.put(\"name\", \"Scott\");\n      EntityProcessorWrapper sep = new EntityProcessorWrapper(new SqlEntityProcessor(), null);\n      sep.init(context);\n      sep.applyTransformer(map);\n      assertEquals(map.get(\"name\"), \"Hello Scott\");\n    } catch (DataImportHandlerException e) {\n      assumeFalse(\"JRE does not contain a JavaScript engine (OpenJDK)\", \n                  e.getMessage().startsWith(\"<script> can be used only in java 6 or above\"));      \n      throw e;\n    }\n  }\n\n","sourceOld":"  @Test\n  public void testBasic() {\n    try {\n      String script = \"function f1(row,context){\"\n              + \"row.put('name','Hello ' + row.get('name'));\" + \"return row;\\n\" + \"}\";\n      Context context = getContext(\"f1\", script);\n      Map<String, Object> map = new HashMap<String, Object>();\n      map.put(\"name\", \"Scott\");\n      EntityProcessorWrapper sep = new EntityProcessorWrapper(new SqlEntityProcessor(), null);\n      sep.init(context);\n      sep.applyTransformer(map);\n      assertEquals(map.get(\"name\"), \"Hello Scott\");\n    } catch (DataImportHandlerException e) {\n      assumeFalse(\"JRE does not contain a JavaScript engine (OpenJDK)\", \"<script> can be used only in java 6 or above\".equals(e.getMessage()));\n      throw e;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab","date":1331075828,"type":3,"author":"Ryan McKinley","isMerge":true,"pathNew":"solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/TestScriptTransformer#testBasic().mjava","pathOld":"solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/TestScriptTransformer#testBasic().mjava","sourceNew":"  @Test\n  public void testBasic() {\n    try {\n      String script = \"function f1(row,context){\"\n              + \"row.put('name','Hello ' + row.get('name'));\" + \"return row;\\n\" + \"}\";\n      Context context = getContext(\"f1\", script);\n      Map<String, Object> map = new HashMap<String, Object>();\n      map.put(\"name\", \"Scott\");\n      EntityProcessorWrapper sep = new EntityProcessorWrapper(new SqlEntityProcessor(), null);\n      sep.init(context);\n      sep.applyTransformer(map);\n      assertEquals(map.get(\"name\"), \"Hello Scott\");\n    } catch (DataImportHandlerException e) {\n      assumeFalse(\"JRE does not contain a JavaScript engine (OpenJDK)\", \n                  e.getMessage().startsWith(\"<script> can be used only in java 6 or above\"));      \n      throw e;\n    }\n  }\n\n","sourceOld":"  @Test\n  public void testBasic() {\n    try {\n      String script = \"function f1(row,context){\"\n              + \"row.put('name','Hello ' + row.get('name'));\" + \"return row;\\n\" + \"}\";\n      Context context = getContext(\"f1\", script);\n      Map<String, Object> map = new HashMap<String, Object>();\n      map.put(\"name\", \"Scott\");\n      EntityProcessorWrapper sep = new EntityProcessorWrapper(new SqlEntityProcessor(), null);\n      sep.init(context);\n      sep.applyTransformer(map);\n      assertEquals(map.get(\"name\"), \"Hello Scott\");\n    } catch (DataImportHandlerException e) {\n      assumeFalse(\"JRE does not contain a JavaScript engine (OpenJDK)\", \"<script> can be used only in java 6 or above\".equals(e.getMessage()));\n      throw e;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"aae2a73c5ef2043e514f991fa7e95acc6f856ecb","date":1332350533,"type":3,"author":"James Dyer","isMerge":false,"pathNew":"solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/TestScriptTransformer#testBasic().mjava","pathOld":"solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/TestScriptTransformer#testBasic().mjava","sourceNew":"  @Test\n  public void testBasic() {\n    try {\n      String script = \"function f1(row,context){\"\n              + \"row.put('name','Hello ' + row.get('name'));\" + \"return row;\\n\" + \"}\";\n      Context context = getContext(\"f1\", script);\n      Map<String, Object> map = new HashMap<String, Object>();\n      map.put(\"name\", \"Scott\");\n      EntityProcessorWrapper sep = new EntityProcessorWrapper(new SqlEntityProcessor(), null);\n      sep.init(context);\n      sep.applyTransformer(map);\n      assertEquals(map.get(\"name\"), \"Hello Scott\");\n    } catch (DataImportHandlerException e) {           \n      throw e;\n    }\n  }\n\n","sourceOld":"  @Test\n  public void testBasic() {\n    try {\n      String script = \"function f1(row,context){\"\n              + \"row.put('name','Hello ' + row.get('name'));\" + \"return row;\\n\" + \"}\";\n      Context context = getContext(\"f1\", script);\n      Map<String, Object> map = new HashMap<String, Object>();\n      map.put(\"name\", \"Scott\");\n      EntityProcessorWrapper sep = new EntityProcessorWrapper(new SqlEntityProcessor(), null);\n      sep.init(context);\n      sep.applyTransformer(map);\n      assertEquals(map.get(\"name\"), \"Hello Scott\");\n    } catch (DataImportHandlerException e) {\n      assumeFalse(\"JRE does not contain a JavaScript engine (OpenJDK)\", \n                  e.getMessage().startsWith(\"<script> can be used only in java 6 or above\"));      \n      throw e;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"4497c1ddd45c5eb380881eee74af502c3eee13d9","date":1332363317,"type":3,"author":"James Dyer","isMerge":false,"pathNew":"solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/TestScriptTransformer#testBasic().mjava","pathOld":"solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/TestScriptTransformer#testBasic().mjava","sourceNew":"  @Test\n  public void testBasic() {\n    try {\n      String script = \"function f1(row,context){\"\n              + \"row.put('name','Hello ' + row.get('name'));\" + \"return row;\\n\" + \"}\";\n      Context context = getContext(\"f1\", script);\n      Map<String, Object> map = new HashMap<String, Object>();\n      map.put(\"name\", \"Scott\");\n      EntityProcessorWrapper sep = new EntityProcessorWrapper(new SqlEntityProcessor(), null);\n      sep.init(context);\n      sep.applyTransformer(map);\n      assertEquals(map.get(\"name\"), \"Hello Scott\");\n    } catch (DataImportHandlerException e) {    \n      assumeFalse(\"This JVM does not have Rhino installed.  Test Skipped.\", e\n          .getMessage().startsWith(\"Cannot load Script Engine for language\"));\n      throw e;\n    }\n  }\n\n","sourceOld":"  @Test\n  public void testBasic() {\n    try {\n      String script = \"function f1(row,context){\"\n              + \"row.put('name','Hello ' + row.get('name'));\" + \"return row;\\n\" + \"}\";\n      Context context = getContext(\"f1\", script);\n      Map<String, Object> map = new HashMap<String, Object>();\n      map.put(\"name\", \"Scott\");\n      EntityProcessorWrapper sep = new EntityProcessorWrapper(new SqlEntityProcessor(), null);\n      sep.init(context);\n      sep.applyTransformer(map);\n      assertEquals(map.get(\"name\"), \"Hello Scott\");\n    } catch (DataImportHandlerException e) {           \n      throw e;\n    }\n  }\n\n","bugFix":null,"bugIntro":["d7cb8d0a1ba6a886ec4f07b3205bd0618d98982e"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"4ebea96bbe279c4a8dc0cd5cd1f987cc9b33436c","date":1335805170,"type":3,"author":"James Dyer","isMerge":false,"pathNew":"solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/TestScriptTransformer#testBasic().mjava","pathOld":"solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/TestScriptTransformer#testBasic().mjava","sourceNew":"  @Test\n  public void testBasic() {\n    try {\n      String script = \"function f1(row,context){\"\n              + \"row.put('name','Hello ' + row.get('name'));\" + \"return row;\\n\" + \"}\";\n      Context context = getContext(\"f1\", script);\n      Map<String, Object> map = new HashMap<String, Object>();\n      map.put(\"name\", \"Scott\");\n      EntityProcessorWrapper sep = new EntityProcessorWrapper(new SqlEntityProcessor(), null, null);\n      sep.init(context);\n      sep.applyTransformer(map);\n      assertEquals(map.get(\"name\"), \"Hello Scott\");\n    } catch (DataImportHandlerException e) {    \n      assumeFalse(\"This JVM does not have Rhino installed.  Test Skipped.\", e\n          .getMessage().startsWith(\"Cannot load Script Engine for language\"));\n      throw e;\n    }\n  }\n\n","sourceOld":"  @Test\n  public void testBasic() {\n    try {\n      String script = \"function f1(row,context){\"\n              + \"row.put('name','Hello ' + row.get('name'));\" + \"return row;\\n\" + \"}\";\n      Context context = getContext(\"f1\", script);\n      Map<String, Object> map = new HashMap<String, Object>();\n      map.put(\"name\", \"Scott\");\n      EntityProcessorWrapper sep = new EntityProcessorWrapper(new SqlEntityProcessor(), null);\n      sep.init(context);\n      sep.applyTransformer(map);\n      assertEquals(map.get(\"name\"), \"Hello Scott\");\n    } catch (DataImportHandlerException e) {    \n      assumeFalse(\"This JVM does not have Rhino installed.  Test Skipped.\", e\n          .getMessage().startsWith(\"Cannot load Script Engine for language\"));\n      throw e;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"d7cb8d0a1ba6a886ec4f07b3205bd0618d98982e","date":1364000005,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/TestScriptTransformer#testBasic().mjava","pathOld":"solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/TestScriptTransformer#testBasic().mjava","sourceNew":"  @Test\n  public void testBasic() {\n    try {\n      String script = \"function f1(row,context){\"\n              + \"row.put('name','Hello ' + row.get('name'));\" + \"return row;\\n\" + \"}\";\n      Context context = getContext(\"f1\", script);\n      Map<String, Object> map = new HashMap<String, Object>();\n      map.put(\"name\", \"Scott\");\n      EntityProcessorWrapper sep = new EntityProcessorWrapper(new SqlEntityProcessor(), null, null);\n      sep.init(context);\n      sep.applyTransformer(map);\n      assertEquals(\"Hello Scott\", map.get(\"name\").toString());\n    } catch (DataImportHandlerException e) {    \n      assumeFalse(\"This JVM does not have JavaScript installed.  Test Skipped.\", e\n          .getMessage().startsWith(\"Cannot load Script Engine for language\"));\n      throw e;\n    }\n  }\n\n","sourceOld":"  @Test\n  public void testBasic() {\n    try {\n      String script = \"function f1(row,context){\"\n              + \"row.put('name','Hello ' + row.get('name'));\" + \"return row;\\n\" + \"}\";\n      Context context = getContext(\"f1\", script);\n      Map<String, Object> map = new HashMap<String, Object>();\n      map.put(\"name\", \"Scott\");\n      EntityProcessorWrapper sep = new EntityProcessorWrapper(new SqlEntityProcessor(), null, null);\n      sep.init(context);\n      sep.applyTransformer(map);\n      assertEquals(map.get(\"name\"), \"Hello Scott\");\n    } catch (DataImportHandlerException e) {    \n      assumeFalse(\"This JVM does not have Rhino installed.  Test Skipped.\", e\n          .getMessage().startsWith(\"Cannot load Script Engine for language\"));\n      throw e;\n    }\n  }\n\n","bugFix":["5964dd1e558949587f9d060ccdff7e59bae1b01a","4497c1ddd45c5eb380881eee74af502c3eee13d9"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"634f330c54fd3f9f491d52036dc3f40b4f4d8934","date":1394635157,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/TestScriptTransformer#testBasic().mjava","pathOld":"solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/TestScriptTransformer#testBasic().mjava","sourceNew":"  @Test\n  public void testBasic() {\n    try {\n      String script = \"function f1(row,context){\"\n              + \"row.put('name','Hello ' + row.get('name'));\" + \"return row;\\n\" + \"}\";\n      Context context = getContext(\"f1\", script);\n      Map<String, Object> map = new HashMap<>();\n      map.put(\"name\", \"Scott\");\n      EntityProcessorWrapper sep = new EntityProcessorWrapper(new SqlEntityProcessor(), null, null);\n      sep.init(context);\n      sep.applyTransformer(map);\n      assertEquals(\"Hello Scott\", map.get(\"name\").toString());\n    } catch (DataImportHandlerException e) {    \n      assumeFalse(\"This JVM does not have JavaScript installed.  Test Skipped.\", e\n          .getMessage().startsWith(\"Cannot load Script Engine for language\"));\n      throw e;\n    }\n  }\n\n","sourceOld":"  @Test\n  public void testBasic() {\n    try {\n      String script = \"function f1(row,context){\"\n              + \"row.put('name','Hello ' + row.get('name'));\" + \"return row;\\n\" + \"}\";\n      Context context = getContext(\"f1\", script);\n      Map<String, Object> map = new HashMap<String, Object>();\n      map.put(\"name\", \"Scott\");\n      EntityProcessorWrapper sep = new EntityProcessorWrapper(new SqlEntityProcessor(), null, null);\n      sep.init(context);\n      sep.applyTransformer(map);\n      assertEquals(\"Hello Scott\", map.get(\"name\").toString());\n    } catch (DataImportHandlerException e) {    \n      assumeFalse(\"This JVM does not have JavaScript installed.  Test Skipped.\", e\n          .getMessage().startsWith(\"Cannot load Script Engine for language\"));\n      throw e;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d2c8f5c46c2501b61e2f55eb7ee59e6c5372290b","date":1598712724,"type":4,"author":"Alexandre Rafalovitch","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/TestScriptTransformer#testBasic().mjava","sourceNew":null,"sourceOld":"  @Test\n  public void testBasic() {\n    try {\n      String script = \"function f1(row,context){\"\n              + \"row.put('name','Hello ' + row.get('name'));\" + \"return row;\\n\" + \"}\";\n      Context context = getContext(\"f1\", script);\n      Map<String, Object> map = new HashMap<>();\n      map.put(\"name\", \"Scott\");\n      EntityProcessorWrapper sep = new EntityProcessorWrapper(new SqlEntityProcessor(), null, null);\n      sep.init(context);\n      sep.applyTransformer(map);\n      assertEquals(\"Hello Scott\", map.get(\"name\").toString());\n    } catch (DataImportHandlerException e) {    \n      assumeFalse(\"This JVM does not have JavaScript installed.  Test Skipped.\", e\n          .getMessage().startsWith(\"Cannot load Script Engine for language\"));\n      throw e;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"634f330c54fd3f9f491d52036dc3f40b4f4d8934":["d7cb8d0a1ba6a886ec4f07b3205bd0618d98982e"],"d2c8f5c46c2501b61e2f55eb7ee59e6c5372290b":["634f330c54fd3f9f491d52036dc3f40b4f4d8934"],"4ebea96bbe279c4a8dc0cd5cd1f987cc9b33436c":["4497c1ddd45c5eb380881eee74af502c3eee13d9"],"9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab":["c26f00b574427b55127e869b935845554afde1fa","a507ba86bd46252f5c881f22005d68d59724793a"],"aae2a73c5ef2043e514f991fa7e95acc6f856ecb":["a507ba86bd46252f5c881f22005d68d59724793a"],"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"c26f00b574427b55127e869b935845554afde1fa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","5128b7b3b73fedff05fdc5ea2e6be53c1020bb91"],"d7cb8d0a1ba6a886ec4f07b3205bd0618d98982e":["4ebea96bbe279c4a8dc0cd5cd1f987cc9b33436c"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a507ba86bd46252f5c881f22005d68d59724793a":["c26f00b574427b55127e869b935845554afde1fa"],"4497c1ddd45c5eb380881eee74af502c3eee13d9":["aae2a73c5ef2043e514f991fa7e95acc6f856ecb"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["d2c8f5c46c2501b61e2f55eb7ee59e6c5372290b"]},"commit2Childs":{"634f330c54fd3f9f491d52036dc3f40b4f4d8934":["d2c8f5c46c2501b61e2f55eb7ee59e6c5372290b"],"d2c8f5c46c2501b61e2f55eb7ee59e6c5372290b":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"4ebea96bbe279c4a8dc0cd5cd1f987cc9b33436c":["d7cb8d0a1ba6a886ec4f07b3205bd0618d98982e"],"9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab":[],"aae2a73c5ef2043e514f991fa7e95acc6f856ecb":["4497c1ddd45c5eb380881eee74af502c3eee13d9"],"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91":["c26f00b574427b55127e869b935845554afde1fa"],"c26f00b574427b55127e869b935845554afde1fa":["9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab","a507ba86bd46252f5c881f22005d68d59724793a"],"d7cb8d0a1ba6a886ec4f07b3205bd0618d98982e":["634f330c54fd3f9f491d52036dc3f40b4f4d8934"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["5128b7b3b73fedff05fdc5ea2e6be53c1020bb91","c26f00b574427b55127e869b935845554afde1fa"],"a507ba86bd46252f5c881f22005d68d59724793a":["9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab","aae2a73c5ef2043e514f991fa7e95acc6f856ecb"],"4497c1ddd45c5eb380881eee74af502c3eee13d9":["4ebea96bbe279c4a8dc0cd5cd1f987cc9b33436c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}