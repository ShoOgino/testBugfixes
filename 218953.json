{"path":"solr/test-framework/src/java/org/apache/solr/cloud/MiniSolrCloudCluster#startJettySolrRunner(String,SortedMap[ServletHolder,String],SortedMap[Class[#-extends-Filter],String],SSLConfig).mjava","commits":[{"id":"c66158bb16e902a21272772f1b911f04b1a55abb","date":1424959524,"type":1,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/cloud/MiniSolrCloudCluster#startJettySolrRunner(String,SortedMap[ServletHolder,String],SortedMap[Class[#-extends-Filter],String],SSLConfig).mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/cloud/MiniSolrCloudCluster#startJettySolrRunner(String,SortedMap[ServletHolder,String],SortedMap[Class,String],SSLConfig).mjava","sourceNew":"  /**\n   * Start a new Solr instance\n   *\n   * @param hostContext context path of Solr servers used by Jetty\n   * @param extraServlets Extra servlets to be started by Jetty\n   * @param extraRequestFilters extra filters to be started by Jetty\n   * @param sslConfig SSL configuration\n   *\n   * @return new Solr instance\n   */\n  public JettySolrRunner startJettySolrRunner(String hostContext,\n      SortedMap<ServletHolder, String> extraServlets,\n      SortedMap<Class<? extends Filter>, String> extraRequestFilters, SSLConfig sslConfig) throws Exception {\n    return startJettySolrRunner(hostContext, JettyConfig.builder()\n        .withServlets(extraServlets)\n        .withFilters(extraRequestFilters)\n        .withSSLConfig(sslConfig)\n        .build());\n  }\n\n","sourceOld":"  /**\n   * Start a new Solr instance\n   * @param hostContext context path of Solr servers used by Jetty\n   * @param extraServlets Extra servlets to be started by Jetty\n   * @param extraRequestFilters extra filters to be started by Jetty\n   * @param sslConfig SSL configuration\n   * @return new Solr instance\n   */\n  public JettySolrRunner startJettySolrRunner(String hostContext,\n      SortedMap<ServletHolder, String> extraServlets,\n      SortedMap<Class, String> extraRequestFilters, SSLConfig sslConfig) throws Exception {\n    String context = getHostContextSuitableForServletContext(hostContext);\n    JettySolrRunner jetty = new JettySolrRunner(testDir.getAbsolutePath(), context,\n      0, null, null, true, extraServlets, sslConfig, extraRequestFilters);\n    jetty.start();\n    jettys.add(jetty);\n    return jetty;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","date":1427779360,"type":0,"author":"Ryan Ernst","isMerge":true,"pathNew":"solr/test-framework/src/java/org/apache/solr/cloud/MiniSolrCloudCluster#startJettySolrRunner(String,SortedMap[ServletHolder,String],SortedMap[Class[#-extends-Filter],String],SSLConfig).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Start a new Solr instance\n   *\n   * @param hostContext context path of Solr servers used by Jetty\n   * @param extraServlets Extra servlets to be started by Jetty\n   * @param extraRequestFilters extra filters to be started by Jetty\n   * @param sslConfig SSL configuration\n   *\n   * @return new Solr instance\n   */\n  public JettySolrRunner startJettySolrRunner(String hostContext,\n      SortedMap<ServletHolder, String> extraServlets,\n      SortedMap<Class<? extends Filter>, String> extraRequestFilters, SSLConfig sslConfig) throws Exception {\n    return startJettySolrRunner(hostContext, JettyConfig.builder()\n        .withServlets(extraServlets)\n        .withFilters(extraRequestFilters)\n        .withSSLConfig(sslConfig)\n        .build());\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f0c130ec24cbb2eef3d8e7f0e971736f0bea8f54","date":1446047031,"type":5,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/cloud/MiniSolrCloudCluster#startJettySolrRunner(String,String,SortedMap[ServletHolder,String],SortedMap[Class[#-extends-Filter],String],SSLConfig).mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/cloud/MiniSolrCloudCluster#startJettySolrRunner(String,SortedMap[ServletHolder,String],SortedMap[Class[#-extends-Filter],String],SSLConfig).mjava","sourceNew":"  /**\n   * Start a new Solr instance\n   *\n   * @param hostContext context path of Solr servers used by Jetty\n   * @param extraServlets Extra servlets to be started by Jetty\n   * @param extraRequestFilters extra filters to be started by Jetty\n   * @param sslConfig SSL configuration\n   *\n   * @return new Solr instance\n   */\n  public JettySolrRunner startJettySolrRunner(String name, String hostContext,\n      SortedMap<ServletHolder, String> extraServlets,\n      SortedMap<Class<? extends Filter>, String> extraRequestFilters, SSLConfig sslConfig) throws Exception {\n    return startJettySolrRunner(name, hostContext, JettyConfig.builder()\n        .withServlets(extraServlets)\n        .withFilters(extraRequestFilters)\n        .withSSLConfig(sslConfig)\n        .build());\n  }\n\n","sourceOld":"  /**\n   * Start a new Solr instance\n   *\n   * @param hostContext context path of Solr servers used by Jetty\n   * @param extraServlets Extra servlets to be started by Jetty\n   * @param extraRequestFilters extra filters to be started by Jetty\n   * @param sslConfig SSL configuration\n   *\n   * @return new Solr instance\n   */\n  public JettySolrRunner startJettySolrRunner(String hostContext,\n      SortedMap<ServletHolder, String> extraServlets,\n      SortedMap<Class<? extends Filter>, String> extraRequestFilters, SSLConfig sslConfig) throws Exception {\n    return startJettySolrRunner(hostContext, JettyConfig.builder()\n        .withServlets(extraServlets)\n        .withFilters(extraRequestFilters)\n        .withSSLConfig(sslConfig)\n        .build());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","c66158bb16e902a21272772f1b911f04b1a55abb"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"f0c130ec24cbb2eef3d8e7f0e971736f0bea8f54":["c66158bb16e902a21272772f1b911f04b1a55abb"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["f0c130ec24cbb2eef3d8e7f0e971736f0bea8f54"],"c66158bb16e902a21272772f1b911f04b1a55abb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","c66158bb16e902a21272772f1b911f04b1a55abb"],"f0c130ec24cbb2eef3d8e7f0e971736f0bea8f54":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"c66158bb16e902a21272772f1b911f04b1a55abb":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","f0c130ec24cbb2eef3d8e7f0e971736f0bea8f54"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}