{"path":"lucene/core/src/java/org/apache/lucene/search/TopDocs#merge(int,int,TopDocs[],Comparator[ScoreDoc]).mjava","commits":[{"id":"36510a8e3c1ec60d366b45f8f716e9dc47589661","date":1561989412,"type":0,"author":"Atri Sharma","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/TopDocs#merge(int,int,TopDocs[],Comparator[ScoreDoc]).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Same as above, but accepts the passed in tie breaker\n   *\n   * docIDs are expected to be in consistent pattern i.e. either all ScoreDocs have their shardIndex set,\n   * or all have them as -1 (signifying that all hits belong to same searcher)\n   *\n   * @lucene.experimental\n   */\n  public static TopDocs merge(int start, int topN, TopDocs[] shardHits, Comparator<ScoreDoc> tieBreaker) {\n    return mergeAux(null, start, topN, shardHits, tieBreaker);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5f4f6b0fb6f08ac48f438f03002a283a63cb9992","date":1561992803,"type":4,"author":"Adrien Grand","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/search/TopDocs#merge(int,int,TopDocs[],Comparator[ScoreDoc]).mjava","sourceNew":null,"sourceOld":"  /**\n   * Same as above, but accepts the passed in tie breaker\n   *\n   * docIDs are expected to be in consistent pattern i.e. either all ScoreDocs have their shardIndex set,\n   * or all have them as -1 (signifying that all hits belong to same searcher)\n   *\n   * @lucene.experimental\n   */\n  public static TopDocs merge(int start, int topN, TopDocs[] shardHits, Comparator<ScoreDoc> tieBreaker) {\n    return mergeAux(null, start, topN, shardHits, tieBreaker);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fccd4a691aac1aff06ab8110d8693514a34160c3","date":1562092518,"type":0,"author":"Atri Sharma","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/TopDocs#merge(int,int,TopDocs[],Comparator[ScoreDoc]).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Same as above, but accepts the passed in tie breaker\n   *\n   * docIDs are expected to be in consistent pattern i.e. either all ScoreDocs have their shardIndex set,\n   * or all have them as -1 (signifying that all hits belong to same searcher)\n   *\n   * @lucene.experimental\n   */\n  public static TopDocs merge(int start, int topN, TopDocs[] shardHits, Comparator<ScoreDoc> tieBreaker) {\n    return mergeAux(null, start, topN, shardHits, tieBreaker);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"36510a8e3c1ec60d366b45f8f716e9dc47589661":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"fccd4a691aac1aff06ab8110d8693514a34160c3":["5f4f6b0fb6f08ac48f438f03002a283a63cb9992"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["fccd4a691aac1aff06ab8110d8693514a34160c3"],"5f4f6b0fb6f08ac48f438f03002a283a63cb9992":["36510a8e3c1ec60d366b45f8f716e9dc47589661"]},"commit2Childs":{"36510a8e3c1ec60d366b45f8f716e9dc47589661":["5f4f6b0fb6f08ac48f438f03002a283a63cb9992"],"fccd4a691aac1aff06ab8110d8693514a34160c3":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["36510a8e3c1ec60d366b45f8f716e9dc47589661"],"5f4f6b0fb6f08ac48f438f03002a283a63cb9992":["fccd4a691aac1aff06ab8110d8693514a34160c3"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}