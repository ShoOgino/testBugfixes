{"path":"lucene/contrib/misc/src/java/org/apache/lucene/index/IndexSplitter#listSegments().mjava","commits":[{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/contrib/misc/src/java/org/apache/lucene/index/IndexSplitter#listSegments().mjava","pathOld":"contrib/misc/src/java/org/apache/lucene/index/IndexSplitter#listSegments().mjava","sourceNew":"  public void listSegments() throws IOException {\n    DecimalFormat formatter = new DecimalFormat(\"###,###.###\");\n    for (int x = 0; x < infos.size(); x++) {\n      SegmentInfo info = infos.info(x);\n      String sizeStr = formatter.format(info.sizeInBytes());\n      System.out.println(info.name + \" \" + sizeStr);\n    }\n  }\n\n","sourceOld":"  public void listSegments() throws IOException {\n    DecimalFormat formatter = new DecimalFormat(\"###,###.###\");\n    for (int x = 0; x < infos.size(); x++) {\n      SegmentInfo info = infos.info(x);\n      String sizeStr = formatter.format(info.sizeInBytes());\n      System.out.println(info.name + \" \" + sizeStr);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d5efdc434c21e20adcb20d316e227be9eaf377d2","date":1292842437,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/contrib/misc/src/java/org/apache/lucene/index/IndexSplitter#listSegments().mjava","pathOld":"lucene/contrib/misc/src/java/org/apache/lucene/index/IndexSplitter#listSegments().mjava","sourceNew":"  public void listSegments() throws IOException {\n    DecimalFormat formatter = new DecimalFormat(\"###,###.###\");\n    for (int x = 0; x < infos.size(); x++) {\n      SegmentInfo info = infos.info(x);\n      String sizeStr = formatter.format(info.sizeInBytes(true));\n      System.out.println(info.name + \" \" + sizeStr);\n    }\n  }\n\n","sourceOld":"  public void listSegments() throws IOException {\n    DecimalFormat formatter = new DecimalFormat(\"###,###.###\");\n    for (int x = 0; x < infos.size(); x++) {\n      SegmentInfo info = infos.info(x);\n      String sizeStr = formatter.format(info.sizeInBytes());\n      System.out.println(info.name + \" \" + sizeStr);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","date":1292920096,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/contrib/misc/src/java/org/apache/lucene/index/IndexSplitter#listSegments().mjava","pathOld":"lucene/contrib/misc/src/java/org/apache/lucene/index/IndexSplitter#listSegments().mjava","sourceNew":"  public void listSegments() throws IOException {\n    DecimalFormat formatter = new DecimalFormat(\"###,###.###\");\n    for (int x = 0; x < infos.size(); x++) {\n      SegmentInfo info = infos.info(x);\n      String sizeStr = formatter.format(info.sizeInBytes(true));\n      System.out.println(info.name + \" \" + sizeStr);\n    }\n  }\n\n","sourceOld":"  public void listSegments() throws IOException {\n    DecimalFormat formatter = new DecimalFormat(\"###,###.###\");\n    for (int x = 0; x < infos.size(); x++) {\n      SegmentInfo info = infos.info(x);\n      String sizeStr = formatter.format(info.sizeInBytes());\n      System.out.println(info.name + \" \" + sizeStr);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"70ad682703b8585f5d0a637efec044d57ec05efb","date":1294259117,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/contrib/misc/src/java/org/apache/lucene/index/IndexSplitter#listSegments().mjava","pathOld":"lucene/contrib/misc/src/java/org/apache/lucene/index/IndexSplitter#listSegments().mjava","sourceNew":"  public void listSegments() throws IOException {\n    DecimalFormat formatter = new DecimalFormat(\"###,###.###\");\n    for (int x = 0; x < infos.size(); x++) {\n      SegmentInfo info = infos.info(x);\n      String sizeStr = formatter.format(info.sizeInBytes(true));\n      System.out.println(info.name + \" \" + sizeStr);\n    }\n  }\n\n","sourceOld":"  public void listSegments() throws IOException {\n    DecimalFormat formatter = new DecimalFormat(\"###,###.###\");\n    for (int x = 0; x < infos.size(); x++) {\n      SegmentInfo info = infos.info(x);\n      String sizeStr = formatter.format(info.sizeInBytes());\n      System.out.println(info.name + \" \" + sizeStr);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3cc749c053615f5871f3b95715fe292f34e70a53","date":1321470575,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/contrib/misc/src/java/org/apache/lucene/index/IndexSplitter#listSegments().mjava","pathOld":"lucene/contrib/misc/src/java/org/apache/lucene/index/IndexSplitter#listSegments().mjava","sourceNew":"  public void listSegments() throws IOException {\n    DecimalFormat formatter = new DecimalFormat(\"###,###.###\");\n    for (int x = 0; x < infos.size(); x++) {\n      SegmentInfo info = infos.info(x);\n      String sizeStr = formatter.format(info.sizeInBytes());\n      System.out.println(info.name + \" \" + sizeStr);\n    }\n  }\n\n","sourceOld":"  public void listSegments() throws IOException {\n    DecimalFormat formatter = new DecimalFormat(\"###,###.###\");\n    for (int x = 0; x < infos.size(); x++) {\n      SegmentInfo info = infos.info(x);\n      String sizeStr = formatter.format(info.sizeInBytes(true));\n      System.out.println(info.name + \" \" + sizeStr);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/misc/src/java/org/apache/lucene/index/IndexSplitter#listSegments().mjava","pathOld":"lucene/contrib/misc/src/java/org/apache/lucene/index/IndexSplitter#listSegments().mjava","sourceNew":"  public void listSegments() throws IOException {\n    DecimalFormat formatter = new DecimalFormat(\"###,###.###\");\n    for (int x = 0; x < infos.size(); x++) {\n      SegmentInfo info = infos.info(x);\n      String sizeStr = formatter.format(info.sizeInBytes());\n      System.out.println(info.name + \" \" + sizeStr);\n    }\n  }\n\n","sourceOld":"  public void listSegments() throws IOException {\n    DecimalFormat formatter = new DecimalFormat(\"###,###.###\");\n    for (int x = 0; x < infos.size(); x++) {\n      SegmentInfo info = infos.info(x);\n      String sizeStr = formatter.format(info.sizeInBytes());\n      System.out.println(info.name + \" \" + sizeStr);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"70ad682703b8585f5d0a637efec044d57ec05efb":["9454a6510e2db155fb01faa5c049b06ece95fab9","d5efdc434c21e20adcb20d316e227be9eaf377d2"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["3cc749c053615f5871f3b95715fe292f34e70a53"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cc749c053615f5871f3b95715fe292f34e70a53":["d5efdc434c21e20adcb20d316e227be9eaf377d2"],"d5efdc434c21e20adcb20d316e227be9eaf377d2":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["9454a6510e2db155fb01faa5c049b06ece95fab9","d5efdc434c21e20adcb20d316e227be9eaf377d2"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"70ad682703b8585f5d0a637efec044d57ec05efb":[],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"3cc749c053615f5871f3b95715fe292f34e70a53":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"d5efdc434c21e20adcb20d316e227be9eaf377d2":["70ad682703b8585f5d0a637efec044d57ec05efb","3cc749c053615f5871f3b95715fe292f34e70a53","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["70ad682703b8585f5d0a637efec044d57ec05efb","d5efdc434c21e20adcb20d316e227be9eaf377d2","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["70ad682703b8585f5d0a637efec044d57ec05efb","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}