{"path":"lucene/highlighter/src/java/org/apache/lucene/search/uhighlight/UnifiedHighlighter#requiresRewrite(SpanQuery).mjava","commits":[{"id":"1f5ce59aaf4a055cc9ec62c15a89c263a05ff4b2","date":1475611903,"type":0,"author":"David Smiley","isMerge":false,"pathNew":"lucene/highlighter/src/java/org/apache/lucene/search/uhighlight/UnifiedHighlighter#requiresRewrite(SpanQuery).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * When highlighting phrases accurately, we need to know which {@link SpanQuery}'s need to have\n   * {@link Query#rewrite(IndexReader)} called on them.  It helps performance to avoid it if it's not needed.\n   * This method will be invoked on all SpanQuery instances recursively. If you have custom SpanQuery queries then\n   * override this to check instanceof and provide a definitive answer. If the query isn't your custom one, simply\n   * return null to have the default rules apply, which govern the ones included in Lucene.\n   */\n  protected Boolean requiresRewrite(SpanQuery spanQuery) {\n    return null;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":0,"author":"Kevin Risden","isMerge":true,"pathNew":"lucene/highlighter/src/java/org/apache/lucene/search/uhighlight/UnifiedHighlighter#requiresRewrite(SpanQuery).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * When highlighting phrases accurately, we need to know which {@link SpanQuery}'s need to have\n   * {@link Query#rewrite(IndexReader)} called on them.  It helps performance to avoid it if it's not needed.\n   * This method will be invoked on all SpanQuery instances recursively. If you have custom SpanQuery queries then\n   * override this to check instanceof and provide a definitive answer. If the query isn't your custom one, simply\n   * return null to have the default rules apply, which govern the ones included in Lucene.\n   */\n  protected Boolean requiresRewrite(SpanQuery spanQuery) {\n    return null;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"1f5ce59aaf4a055cc9ec62c15a89c263a05ff4b2":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","1f5ce59aaf4a055cc9ec62c15a89c263a05ff4b2"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["1f5ce59aaf4a055cc9ec62c15a89c263a05ff4b2"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["1f5ce59aaf4a055cc9ec62c15a89c263a05ff4b2","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"1f5ce59aaf4a055cc9ec62c15a89c263a05ff4b2":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}