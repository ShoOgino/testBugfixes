{"path":"lucene/test-framework/src/java/org/apache/lucene/util/TestRuleSetupTeardownChained#apply(Statement,Description).mjava","commits":[{"id":"5da0b42730b6b99b31389ef94cb97384e83b9ede","date":1337107665,"type":0,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/util/TestRuleSetupTeardownChained#apply(Statement,Description).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public Statement apply(final Statement base, Description description) {\n    return new Statement() {\n      @Override\n      public void evaluate() throws Throwable {\n        setupCalled = false;\n        teardownCalled = false;\n        base.evaluate();\n\n        // I assume we don't want to check teardown chaining if something happens in the\n        // test because this would obscure the original exception?\n        if (!setupCalled) { \n          Assert.fail(\"One of the overrides of setUp does not propagate the call.\");\n        }\n        if (!teardownCalled) { \n          Assert.fail(\"One of the overrides of tearDown does not propagate the call.\");\n        }\n      }\n    };\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"5da0b42730b6b99b31389ef94cb97384e83b9ede":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["5da0b42730b6b99b31389ef94cb97384e83b9ede"]},"commit2Childs":{"5da0b42730b6b99b31389ef94cb97384e83b9ede":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["5da0b42730b6b99b31389ef94cb97384e83b9ede"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}