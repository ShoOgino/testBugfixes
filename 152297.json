{"path":"lucene/analysis/common/src/test/org/apache/lucene/analysis/miscellaneous/TestLengthFilter#testFilterNoPosIncr().mjava","commits":[{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/miscellaneous/TestLengthFilter#testFilterNoPosIncr().mjava","pathOld":"modules/analysis/common/src/test/org/apache/lucene/analysis/miscellaneous/TestLengthFilter#testFilterNoPosIncr().mjava","sourceNew":"  public void testFilterNoPosIncr() throws Exception {\n    TokenStream stream = new MockTokenizer(\n        new StringReader(\"short toolong evenmuchlongertext a ab toolong foo\"), MockTokenizer.WHITESPACE, false);\n    LengthFilter filter = new LengthFilter(false, stream, 2, 6);\n    assertTokenStreamContents(filter,\n      new String[]{\"short\", \"ab\", \"foo\"},\n      new int[]{1, 1, 1}\n    );\n  }\n\n","sourceOld":"  public void testFilterNoPosIncr() throws Exception {\n    TokenStream stream = new MockTokenizer(\n        new StringReader(\"short toolong evenmuchlongertext a ab toolong foo\"), MockTokenizer.WHITESPACE, false);\n    LengthFilter filter = new LengthFilter(false, stream, 2, 6);\n    assertTokenStreamContents(filter,\n      new String[]{\"short\", \"ab\", \"foo\"},\n      new int[]{1, 1, 1}\n    );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"eafa8c5eabc3dacd34680054e6a33bda024080ac","date":1367691488,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/miscellaneous/TestLengthFilter#testFilterNoPosIncr().mjava","pathOld":"lucene/analysis/common/src/test/org/apache/lucene/analysis/miscellaneous/TestLengthFilter#testFilterNoPosIncr().mjava","sourceNew":"  public void testFilterNoPosIncr() throws Exception {\n    TokenStream stream = new MockTokenizer(\n        new StringReader(\"short toolong evenmuchlongertext a ab toolong foo\"), MockTokenizer.WHITESPACE, false);\n    LengthFilter filter = new LengthFilter(Version.LUCENE_43, false, stream, 2, 6);\n    assertTokenStreamContents(filter,\n      new String[]{\"short\", \"ab\", \"foo\"},\n      new int[]{1, 1, 1}\n    );\n  }\n\n","sourceOld":"  public void testFilterNoPosIncr() throws Exception {\n    TokenStream stream = new MockTokenizer(\n        new StringReader(\"short toolong evenmuchlongertext a ab toolong foo\"), MockTokenizer.WHITESPACE, false);\n    LengthFilter filter = new LengthFilter(false, stream, 2, 6);\n    assertTokenStreamContents(filter,\n      new String[]{\"short\", \"ab\", \"foo\"},\n      new int[]{1, 1, 1}\n    );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"192e49c0445803405b0bc0eebc8b758485480c21","date":1367699151,"type":4,"author":"Adrien Grand","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/analysis/common/src/test/org/apache/lucene/analysis/miscellaneous/TestLengthFilter#testFilterNoPosIncr().mjava","sourceNew":null,"sourceOld":"  public void testFilterNoPosIncr() throws Exception {\n    TokenStream stream = new MockTokenizer(\n        new StringReader(\"short toolong evenmuchlongertext a ab toolong foo\"), MockTokenizer.WHITESPACE, false);\n    LengthFilter filter = new LengthFilter(Version.LUCENE_43, false, stream, 2, 6);\n    assertTokenStreamContents(filter,\n      new String[]{\"short\", \"ab\", \"foo\"},\n      new int[]{1, 1, 1}\n    );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"192e49c0445803405b0bc0eebc8b758485480c21":["eafa8c5eabc3dacd34680054e6a33bda024080ac"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"eafa8c5eabc3dacd34680054e6a33bda024080ac":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["192e49c0445803405b0bc0eebc8b758485480c21"]},"commit2Childs":{"192e49c0445803405b0bc0eebc8b758485480c21":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["eafa8c5eabc3dacd34680054e6a33bda024080ac"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"eafa8c5eabc3dacd34680054e6a33bda024080ac":["192e49c0445803405b0bc0eebc8b758485480c21"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}