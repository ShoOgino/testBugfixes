{"path":"lucene/core/src/test/org/apache/lucene/util/TestCharsRef#testCharSequenceSubSequence().mjava","commits":[{"id":"ecb9a70c11e1f9dea44bb46bc2f75ed0c2603b57","date":1338306244,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/util/TestCharsRef#testCharSequenceSubSequence().mjava","pathOld":"/dev/null","sourceNew":"  // LUCENE-3590: fix off-by-one in subsequence, and fully obey interface\n  public void testCharSequenceSubSequence() {\n    CharSequence c = new CharsRef(\"abc\");\n    \n    // slice\n    assertEquals(\"a\", c.subSequence(0, 1).toString());\n    // empty subsequence\n    assertEquals(\"\", c.subSequence(0, 0).toString());\n    \n    try {\n      c.subSequence(-1, 1);\n      fail();\n    } catch (IndexOutOfBoundsException expected) {\n      // expected exception\n    }\n    \n    try {\n      c.subSequence(0, -1);\n      fail();\n    } catch (IndexOutOfBoundsException expected) {\n      // expected exception\n    }\n    \n    try {\n      c.subSequence(0, 4);\n      fail();\n    } catch (IndexOutOfBoundsException expected) {\n      // expected exception\n    }\n    \n    try {\n      c.subSequence(2, 1);\n      fail();\n    } catch (IndexOutOfBoundsException expected) {\n      // expected exception\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["8ac870f1b2b56640544c830e5957b1ccd7812135"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"8ac870f1b2b56640544c830e5957b1ccd7812135","date":1357759883,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/util/TestCharsRef#testCharSequenceSubSequence().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/util/TestCharsRef#testCharSequenceSubSequence().mjava","sourceNew":"  // LUCENE-3590: fix off-by-one in subsequence, and fully obey interface\n  // LUCENE-4671: fix subSequence\n  public void testCharSequenceSubSequence() {\n    CharSequence sequences[] =  {\n        new CharsRef(\"abc\"),\n        new CharsRef(\"0abc\".toCharArray(), 1, 3),\n        new CharsRef(\"abc0\".toCharArray(), 0, 3),\n        new CharsRef(\"0abc0\".toCharArray(), 1, 3)\n    };\n    \n    for (CharSequence c : sequences) {\n      doTestSequence(c);\n    }\n  }\n\n","sourceOld":"  // LUCENE-3590: fix off-by-one in subsequence, and fully obey interface\n  public void testCharSequenceSubSequence() {\n    CharSequence c = new CharsRef(\"abc\");\n    \n    // slice\n    assertEquals(\"a\", c.subSequence(0, 1).toString());\n    // empty subsequence\n    assertEquals(\"\", c.subSequence(0, 0).toString());\n    \n    try {\n      c.subSequence(-1, 1);\n      fail();\n    } catch (IndexOutOfBoundsException expected) {\n      // expected exception\n    }\n    \n    try {\n      c.subSequence(0, -1);\n      fail();\n    } catch (IndexOutOfBoundsException expected) {\n      // expected exception\n    }\n    \n    try {\n      c.subSequence(0, 4);\n      fail();\n    } catch (IndexOutOfBoundsException expected) {\n      // expected exception\n    }\n    \n    try {\n      c.subSequence(2, 1);\n      fail();\n    } catch (IndexOutOfBoundsException expected) {\n      // expected exception\n    }\n  }\n\n","bugFix":["ecb9a70c11e1f9dea44bb46bc2f75ed0c2603b57"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4e6354dd7c71fe122926fc53d7d29f715b1283db","date":1357915185,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/util/TestCharsRef#testCharSequenceSubSequence().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/util/TestCharsRef#testCharSequenceSubSequence().mjava","sourceNew":"  // LUCENE-3590: fix off-by-one in subsequence, and fully obey interface\n  // LUCENE-4671: fix subSequence\n  public void testCharSequenceSubSequence() {\n    CharSequence sequences[] =  {\n        new CharsRef(\"abc\"),\n        new CharsRef(\"0abc\".toCharArray(), 1, 3),\n        new CharsRef(\"abc0\".toCharArray(), 0, 3),\n        new CharsRef(\"0abc0\".toCharArray(), 1, 3)\n    };\n    \n    for (CharSequence c : sequences) {\n      doTestSequence(c);\n    }\n  }\n\n","sourceOld":"  // LUCENE-3590: fix off-by-one in subsequence, and fully obey interface\n  public void testCharSequenceSubSequence() {\n    CharSequence c = new CharsRef(\"abc\");\n    \n    // slice\n    assertEquals(\"a\", c.subSequence(0, 1).toString());\n    // empty subsequence\n    assertEquals(\"\", c.subSequence(0, 0).toString());\n    \n    try {\n      c.subSequence(-1, 1);\n      fail();\n    } catch (IndexOutOfBoundsException expected) {\n      // expected exception\n    }\n    \n    try {\n      c.subSequence(0, -1);\n      fail();\n    } catch (IndexOutOfBoundsException expected) {\n      // expected exception\n    }\n    \n    try {\n      c.subSequence(0, 4);\n      fail();\n    } catch (IndexOutOfBoundsException expected) {\n      // expected exception\n    }\n    \n    try {\n      c.subSequence(2, 1);\n      fail();\n    } catch (IndexOutOfBoundsException expected) {\n      // expected exception\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"ecb9a70c11e1f9dea44bb46bc2f75ed0c2603b57":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"4e6354dd7c71fe122926fc53d7d29f715b1283db":["ecb9a70c11e1f9dea44bb46bc2f75ed0c2603b57","8ac870f1b2b56640544c830e5957b1ccd7812135"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["8ac870f1b2b56640544c830e5957b1ccd7812135"],"8ac870f1b2b56640544c830e5957b1ccd7812135":["ecb9a70c11e1f9dea44bb46bc2f75ed0c2603b57"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["ecb9a70c11e1f9dea44bb46bc2f75ed0c2603b57"],"ecb9a70c11e1f9dea44bb46bc2f75ed0c2603b57":["4e6354dd7c71fe122926fc53d7d29f715b1283db","8ac870f1b2b56640544c830e5957b1ccd7812135"],"4e6354dd7c71fe122926fc53d7d29f715b1283db":[],"8ac870f1b2b56640544c830e5957b1ccd7812135":["4e6354dd7c71fe122926fc53d7d29f715b1283db","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["4e6354dd7c71fe122926fc53d7d29f715b1283db","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}