{"path":"lucene/codecs/src/java/org/apache/lucene/codecs/diskdv/DiskDocValuesConsumer#DiskDocValuesConsumer(SegmentWriteState).mjava","commits":[{"id":"d7a738ebbf9537051521dcc7e49f69208f91e2fc","date":1358194026,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/codecs/src/java/org/apache/lucene/codecs/diskdv/DiskDocValuesConsumer#DiskDocValuesConsumer(SegmentWriteState).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/lucene41/Lucene41SimpleDocValuesConsumer#Lucene41SimpleDocValuesConsumer(SegmentWriteState).mjava","sourceNew":"  DiskDocValuesConsumer(SegmentWriteState state) throws IOException {\n    String dataName = IndexFileNames.segmentFileName(state.segmentInfo.name, state.segmentSuffix, \"dvd\");\n    data = state.directory.createOutput(dataName, state.context);\n    CodecUtil.writeHeader(data, DiskDocValuesFormat.DATA_CODEC, \n                                DiskDocValuesFormat.VERSION_CURRENT);\n    String metaName = IndexFileNames.segmentFileName(state.segmentInfo.name, state.segmentSuffix, \"dvm\");\n    meta = state.directory.createOutput(metaName, state.context);\n    CodecUtil.writeHeader(meta, DiskDocValuesFormat.METADATA_CODEC, \n                                DiskDocValuesFormat.VERSION_CURRENT);\n    maxDoc = state.segmentInfo.getDocCount();\n  }\n\n","sourceOld":"  Lucene41SimpleDocValuesConsumer(SegmentWriteState state) throws IOException {\n    String dataName = IndexFileNames.segmentFileName(state.segmentInfo.name, state.segmentSuffix, \"dvd\");\n    data = state.directory.createOutput(dataName, state.context);\n    CodecUtil.writeHeader(data, Lucene41SimpleDocValuesFormat.DATA_CODEC, \n                                Lucene41SimpleDocValuesFormat.VERSION_CURRENT);\n    String metaName = IndexFileNames.segmentFileName(state.segmentInfo.name, state.segmentSuffix, \"dvm\");\n    meta = state.directory.createOutput(metaName, state.context);\n    CodecUtil.writeHeader(meta, Lucene41SimpleDocValuesFormat.METADATA_CODEC, \n                                Lucene41SimpleDocValuesFormat.VERSION_CURRENT);\n    maxDoc = state.segmentInfo.getDocCount();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"96b29edfb831f9c0aeeca88ad2293b2a9cd529f6","date":1358196500,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/codecs/src/java/org/apache/lucene/codecs/diskdv/DiskDocValuesConsumer#DiskDocValuesConsumer(SegmentWriteState).mjava","pathOld":"lucene/codecs/src/java/org/apache/lucene/codecs/diskdv/DiskDocValuesConsumer#DiskDocValuesConsumer(SegmentWriteState).mjava","sourceNew":"  DiskDocValuesConsumer(SegmentWriteState state) throws IOException {\n    String dataName = IndexFileNames.segmentFileName(state.segmentInfo.name, state.segmentSuffix, \"ddvd\");\n    data = state.directory.createOutput(dataName, state.context);\n    CodecUtil.writeHeader(data, DiskDocValuesFormat.DATA_CODEC, \n                                DiskDocValuesFormat.VERSION_CURRENT);\n    String metaName = IndexFileNames.segmentFileName(state.segmentInfo.name, state.segmentSuffix, \"ddvm\");\n    meta = state.directory.createOutput(metaName, state.context);\n    CodecUtil.writeHeader(meta, DiskDocValuesFormat.METADATA_CODEC, \n                                DiskDocValuesFormat.VERSION_CURRENT);\n    maxDoc = state.segmentInfo.getDocCount();\n  }\n\n","sourceOld":"  DiskDocValuesConsumer(SegmentWriteState state) throws IOException {\n    String dataName = IndexFileNames.segmentFileName(state.segmentInfo.name, state.segmentSuffix, \"dvd\");\n    data = state.directory.createOutput(dataName, state.context);\n    CodecUtil.writeHeader(data, DiskDocValuesFormat.DATA_CODEC, \n                                DiskDocValuesFormat.VERSION_CURRENT);\n    String metaName = IndexFileNames.segmentFileName(state.segmentInfo.name, state.segmentSuffix, \"dvm\");\n    meta = state.directory.createOutput(metaName, state.context);\n    CodecUtil.writeHeader(meta, DiskDocValuesFormat.METADATA_CODEC, \n                                DiskDocValuesFormat.VERSION_CURRENT);\n    maxDoc = state.segmentInfo.getDocCount();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"108734069d2c88e21774458fb016ab95c8a643d1","date":1358782151,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/codecs/src/java/org/apache/lucene/codecs/diskdv/DiskDocValuesConsumer#DiskDocValuesConsumer(SegmentWriteState).mjava","pathOld":"lucene/codecs/src/java/org/apache/lucene/codecs/diskdv/DiskDocValuesConsumer#DiskDocValuesConsumer(SegmentWriteState).mjava","sourceNew":"  DiskDocValuesConsumer(SegmentWriteState state) throws IOException {\n    boolean success = false;\n    try {\n      String dataName = IndexFileNames.segmentFileName(state.segmentInfo.name, state.segmentSuffix, \"ddvd\");\n      data = state.directory.createOutput(dataName, state.context);\n      CodecUtil.writeHeader(data, DiskDocValuesFormat.DATA_CODEC, \n                                  DiskDocValuesFormat.VERSION_CURRENT);\n      String metaName = IndexFileNames.segmentFileName(state.segmentInfo.name, state.segmentSuffix, \"ddvm\");\n      meta = state.directory.createOutput(metaName, state.context);\n      CodecUtil.writeHeader(meta, DiskDocValuesFormat.METADATA_CODEC, \n                                  DiskDocValuesFormat.VERSION_CURRENT);\n      maxDoc = state.segmentInfo.getDocCount();\n      success = true;\n    } finally {\n      if (!success) {\n        IOUtils.closeWhileHandlingException(this);\n      }\n    }\n  }\n\n","sourceOld":"  DiskDocValuesConsumer(SegmentWriteState state) throws IOException {\n    String dataName = IndexFileNames.segmentFileName(state.segmentInfo.name, state.segmentSuffix, \"ddvd\");\n    data = state.directory.createOutput(dataName, state.context);\n    CodecUtil.writeHeader(data, DiskDocValuesFormat.DATA_CODEC, \n                                DiskDocValuesFormat.VERSION_CURRENT);\n    String metaName = IndexFileNames.segmentFileName(state.segmentInfo.name, state.segmentSuffix, \"ddvm\");\n    meta = state.directory.createOutput(metaName, state.context);\n    CodecUtil.writeHeader(meta, DiskDocValuesFormat.METADATA_CODEC, \n                                DiskDocValuesFormat.VERSION_CURRENT);\n    maxDoc = state.segmentInfo.getDocCount();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9f2be786bbf3746ffcd9720e0b473f4b121c4228","date":1359663177,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/codecs/src/java/org/apache/lucene/codecs/diskdv/DiskDocValuesConsumer#DiskDocValuesConsumer(SegmentWriteState,String,String,String,String).mjava","pathOld":"lucene/codecs/src/java/org/apache/lucene/codecs/diskdv/DiskDocValuesConsumer#DiskDocValuesConsumer(SegmentWriteState).mjava","sourceNew":"  public DiskDocValuesConsumer(SegmentWriteState state, String dataCodec, String dataExtension, String metaCodec, String metaExtension) throws IOException {\n    boolean success = false;\n    try {\n      String dataName = IndexFileNames.segmentFileName(state.segmentInfo.name, state.segmentSuffix, dataExtension);\n      data = state.directory.createOutput(dataName, state.context);\n      CodecUtil.writeHeader(data, dataCodec, DiskDocValuesFormat.VERSION_CURRENT);\n      String metaName = IndexFileNames.segmentFileName(state.segmentInfo.name, state.segmentSuffix, metaExtension);\n      meta = state.directory.createOutput(metaName, state.context);\n      CodecUtil.writeHeader(meta, metaCodec, DiskDocValuesFormat.VERSION_CURRENT);\n      maxDoc = state.segmentInfo.getDocCount();\n      success = true;\n    } finally {\n      if (!success) {\n        IOUtils.closeWhileHandlingException(this);\n      }\n    }\n  }\n\n","sourceOld":"  DiskDocValuesConsumer(SegmentWriteState state) throws IOException {\n    boolean success = false;\n    try {\n      String dataName = IndexFileNames.segmentFileName(state.segmentInfo.name, state.segmentSuffix, \"ddvd\");\n      data = state.directory.createOutput(dataName, state.context);\n      CodecUtil.writeHeader(data, DiskDocValuesFormat.DATA_CODEC, \n                                  DiskDocValuesFormat.VERSION_CURRENT);\n      String metaName = IndexFileNames.segmentFileName(state.segmentInfo.name, state.segmentSuffix, \"ddvm\");\n      meta = state.directory.createOutput(metaName, state.context);\n      CodecUtil.writeHeader(meta, DiskDocValuesFormat.METADATA_CODEC, \n                                  DiskDocValuesFormat.VERSION_CURRENT);\n      maxDoc = state.segmentInfo.getDocCount();\n      success = true;\n    } finally {\n      if (!success) {\n        IOUtils.closeWhileHandlingException(this);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"9f2be786bbf3746ffcd9720e0b473f4b121c4228":["108734069d2c88e21774458fb016ab95c8a643d1"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"96b29edfb831f9c0aeeca88ad2293b2a9cd529f6":["d7a738ebbf9537051521dcc7e49f69208f91e2fc"],"d7a738ebbf9537051521dcc7e49f69208f91e2fc":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"108734069d2c88e21774458fb016ab95c8a643d1":["96b29edfb831f9c0aeeca88ad2293b2a9cd529f6"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"9f2be786bbf3746ffcd9720e0b473f4b121c4228":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["d7a738ebbf9537051521dcc7e49f69208f91e2fc","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"96b29edfb831f9c0aeeca88ad2293b2a9cd529f6":["108734069d2c88e21774458fb016ab95c8a643d1"],"d7a738ebbf9537051521dcc7e49f69208f91e2fc":["96b29edfb831f9c0aeeca88ad2293b2a9cd529f6"],"108734069d2c88e21774458fb016ab95c8a643d1":["9f2be786bbf3746ffcd9720e0b473f4b121c4228"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["9f2be786bbf3746ffcd9720e0b473f4b121c4228","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}