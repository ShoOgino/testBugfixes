{"path":"solr/core/src/java/org/apache/solr/util/SolrPluginUtils#partialEscape(CharSequence).mjava","commits":[{"id":"c903c3d15906a3da96b8c0c2fb704491005fdbdb","date":1453508227,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/util/SolrPluginUtils#partialEscape(CharSequence).mjava","pathOld":"solr/src/java/org/apache/solr/util/SolrPluginUtils#partialEscape(CharSequence).mjava","sourceNew":"  /**\n   * Escapes all special characters except '\"', '-', and '+'\n   *\n   * @see QueryParser#escape\n   */\n  public static CharSequence partialEscape(CharSequence s) {\n    StringBuilder sb = new StringBuilder();\n    for (int i = 0; i < s.length(); i++) {\n      char c = s.charAt(i);\n      if (c == '\\\\' || c == '!' || c == '(' || c == ')' ||\n          c == ':'  || c == '^' || c == '[' || c == ']' ||\n          c == '{'  || c == '}' || c == '~' || c == '*' || c == '?'\n          ) {\n        sb.append('\\\\');\n      }\n      sb.append(c);\n    }\n    return sb;\n  }\n\n","sourceOld":"  /**\n   * Escapes all special characters except '\"', '-', and '+'\n   *\n   * @see QueryParser#escape\n   */\n  public static CharSequence partialEscape(CharSequence s) {\n    StringBuilder sb = new StringBuilder();\n    for (int i = 0; i < s.length(); i++) {\n      char c = s.charAt(i);\n      if (c == '\\\\' || c == '!' || c == '(' || c == ')' ||\n          c == ':'  || c == '^' || c == '[' || c == ']' ||\n          c == '{'  || c == '}' || c == '~' || c == '*' || c == '?'\n          ) {\n        sb.append('\\\\');\n      }\n      sb.append(c);\n    }\n    return sb;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a258fbb26824fd104ed795e5d9033d2d040049ee","date":1453508252,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/util/SolrPluginUtils#partialEscape(CharSequence).mjava","pathOld":"solr/src/java/org/apache/solr/util/SolrPluginUtils#partialEscape(CharSequence).mjava","sourceNew":"  /**\n   * Escapes all special characters except '\"', '-', and '+'\n   *\n   * @see QueryParser#escape\n   */\n  public static CharSequence partialEscape(CharSequence s) {\n    StringBuilder sb = new StringBuilder();\n    for (int i = 0; i < s.length(); i++) {\n      char c = s.charAt(i);\n      if (c == '\\\\' || c == '!' || c == '(' || c == ')' ||\n          c == ':'  || c == '^' || c == '[' || c == ']' ||\n          c == '{'  || c == '}' || c == '~' || c == '*' || c == '?'\n          ) {\n        sb.append('\\\\');\n      }\n      sb.append(c);\n    }\n    return sb;\n  }\n\n","sourceOld":"  /**\n   * Escapes all special characters except '\"', '-', and '+'\n   *\n   * @see QueryParser#escape\n   */\n  public static CharSequence partialEscape(CharSequence s) {\n    StringBuilder sb = new StringBuilder();\n    for (int i = 0; i < s.length(); i++) {\n      char c = s.charAt(i);\n      if (c == '\\\\' || c == '!' || c == '(' || c == ')' ||\n          c == ':'  || c == '^' || c == '[' || c == ']' ||\n          c == '{'  || c == '}' || c == '~' || c == '*' || c == '?'\n          ) {\n        sb.append('\\\\');\n      }\n      sb.append(c);\n    }\n    return sb;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/util/SolrPluginUtils#partialEscape(CharSequence).mjava","pathOld":"solr/src/java/org/apache/solr/util/SolrPluginUtils#partialEscape(CharSequence).mjava","sourceNew":"  /**\n   * Escapes all special characters except '\"', '-', and '+'\n   *\n   * @see QueryParser#escape\n   */\n  public static CharSequence partialEscape(CharSequence s) {\n    StringBuilder sb = new StringBuilder();\n    for (int i = 0; i < s.length(); i++) {\n      char c = s.charAt(i);\n      if (c == '\\\\' || c == '!' || c == '(' || c == ')' ||\n          c == ':'  || c == '^' || c == '[' || c == ']' ||\n          c == '{'  || c == '}' || c == '~' || c == '*' || c == '?'\n          ) {\n        sb.append('\\\\');\n      }\n      sb.append(c);\n    }\n    return sb;\n  }\n\n","sourceOld":"  /**\n   * Escapes all special characters except '\"', '-', and '+'\n   *\n   * @see QueryParser#escape\n   */\n  public static CharSequence partialEscape(CharSequence s) {\n    StringBuilder sb = new StringBuilder();\n    for (int i = 0; i < s.length(); i++) {\n      char c = s.charAt(i);\n      if (c == '\\\\' || c == '!' || c == '(' || c == ')' ||\n          c == ':'  || c == '^' || c == '[' || c == ']' ||\n          c == '{'  || c == '}' || c == '~' || c == '*' || c == '?'\n          ) {\n        sb.append('\\\\');\n      }\n      sb.append(c);\n    }\n    return sb;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d7768541e2346b5def32bdf3ae20869498755403","date":1330487921,"type":3,"author":"Chris M. Hostetter","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/util/SolrPluginUtils#partialEscape(CharSequence).mjava","pathOld":"solr/core/src/java/org/apache/solr/util/SolrPluginUtils#partialEscape(CharSequence).mjava","sourceNew":"  /**\n   * Escapes all special characters except '\"', '-', and '+'\n   *\n   * @see QueryParser#escape\n   */\n  public static CharSequence partialEscape(CharSequence s) {\n    StringBuilder sb = new StringBuilder();\n    for (int i = 0; i < s.length(); i++) {\n      char c = s.charAt(i);\n      if (c == '\\\\' || c == '!' || c == '(' || c == ')' ||\n          c == ':'  || c == '^' || c == '[' || c == ']' || c == '/' ||\n          c == '{'  || c == '}' || c == '~' || c == '*' || c == '?'\n          ) {\n        sb.append('\\\\');\n      }\n      sb.append(c);\n    }\n    return sb;\n  }\n\n","sourceOld":"  /**\n   * Escapes all special characters except '\"', '-', and '+'\n   *\n   * @see QueryParser#escape\n   */\n  public static CharSequence partialEscape(CharSequence s) {\n    StringBuilder sb = new StringBuilder();\n    for (int i = 0; i < s.length(); i++) {\n      char c = s.charAt(i);\n      if (c == '\\\\' || c == '!' || c == '(' || c == ')' ||\n          c == ':'  || c == '^' || c == '[' || c == ']' ||\n          c == '{'  || c == '}' || c == '~' || c == '*' || c == '?'\n          ) {\n        sb.append('\\\\');\n      }\n      sb.append(c);\n    }\n    return sb;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab","date":1331075828,"type":3,"author":"Ryan McKinley","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/util/SolrPluginUtils#partialEscape(CharSequence).mjava","pathOld":"solr/core/src/java/org/apache/solr/util/SolrPluginUtils#partialEscape(CharSequence).mjava","sourceNew":"  /**\n   * Escapes all special characters except '\"', '-', and '+'\n   *\n   * @see QueryParser#escape\n   */\n  public static CharSequence partialEscape(CharSequence s) {\n    StringBuilder sb = new StringBuilder();\n    for (int i = 0; i < s.length(); i++) {\n      char c = s.charAt(i);\n      if (c == '\\\\' || c == '!' || c == '(' || c == ')' ||\n          c == ':'  || c == '^' || c == '[' || c == ']' || c == '/' ||\n          c == '{'  || c == '}' || c == '~' || c == '*' || c == '?'\n          ) {\n        sb.append('\\\\');\n      }\n      sb.append(c);\n    }\n    return sb;\n  }\n\n","sourceOld":"  /**\n   * Escapes all special characters except '\"', '-', and '+'\n   *\n   * @see QueryParser#escape\n   */\n  public static CharSequence partialEscape(CharSequence s) {\n    StringBuilder sb = new StringBuilder();\n    for (int i = 0; i < s.length(); i++) {\n      char c = s.charAt(i);\n      if (c == '\\\\' || c == '!' || c == '(' || c == ')' ||\n          c == ':'  || c == '^' || c == '[' || c == ']' ||\n          c == '{'  || c == '}' || c == '~' || c == '*' || c == '?'\n          ) {\n        sb.append('\\\\');\n      }\n      sb.append(c);\n    }\n    return sb;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3cdb67100dc016748799a77218aa409478372d79","date":1353699950,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/util/SolrPluginUtils#partialEscape(CharSequence).mjava","pathOld":"solr/core/src/java/org/apache/solr/util/SolrPluginUtils#partialEscape(CharSequence).mjava","sourceNew":"  /**\n   * Escapes all special characters except '\"', '-', and '+'\n   */\n  public static CharSequence partialEscape(CharSequence s) {\n    StringBuilder sb = new StringBuilder();\n    for (int i = 0; i < s.length(); i++) {\n      char c = s.charAt(i);\n      if (c == '\\\\' || c == '!' || c == '(' || c == ')' ||\n          c == ':'  || c == '^' || c == '[' || c == ']' || c == '/' ||\n          c == '{'  || c == '}' || c == '~' || c == '*' || c == '?'\n          ) {\n        sb.append('\\\\');\n      }\n      sb.append(c);\n    }\n    return sb;\n  }\n\n","sourceOld":"  /**\n   * Escapes all special characters except '\"', '-', and '+'\n   *\n   * @see QueryParser#escape\n   */\n  public static CharSequence partialEscape(CharSequence s) {\n    StringBuilder sb = new StringBuilder();\n    for (int i = 0; i < s.length(); i++) {\n      char c = s.charAt(i);\n      if (c == '\\\\' || c == '!' || c == '(' || c == ')' ||\n          c == ':'  || c == '^' || c == '[' || c == ']' || c == '/' ||\n          c == '{'  || c == '}' || c == '~' || c == '*' || c == '?'\n          ) {\n        sb.append('\\\\');\n      }\n      sb.append(c);\n    }\n    return sb;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"407687e67faf6e1f02a211ca078d8e3eed631027","date":1355157407,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/util/SolrPluginUtils#partialEscape(CharSequence).mjava","pathOld":"solr/core/src/java/org/apache/solr/util/SolrPluginUtils#partialEscape(CharSequence).mjava","sourceNew":"  /**\n   * Escapes all special characters except '\"', '-', and '+'\n   */\n  public static CharSequence partialEscape(CharSequence s) {\n    StringBuilder sb = new StringBuilder();\n    for (int i = 0; i < s.length(); i++) {\n      char c = s.charAt(i);\n      if (c == '\\\\' || c == '!' || c == '(' || c == ')' ||\n          c == ':'  || c == '^' || c == '[' || c == ']' || c == '/' ||\n          c == '{'  || c == '}' || c == '~' || c == '*' || c == '?'\n          ) {\n        sb.append('\\\\');\n      }\n      sb.append(c);\n    }\n    return sb;\n  }\n\n","sourceOld":"  /**\n   * Escapes all special characters except '\"', '-', and '+'\n   *\n   * @see QueryParser#escape\n   */\n  public static CharSequence partialEscape(CharSequence s) {\n    StringBuilder sb = new StringBuilder();\n    for (int i = 0; i < s.length(); i++) {\n      char c = s.charAt(i);\n      if (c == '\\\\' || c == '!' || c == '(' || c == ')' ||\n          c == ':'  || c == '^' || c == '[' || c == ']' || c == '/' ||\n          c == '{'  || c == '}' || c == '~' || c == '*' || c == '?'\n          ) {\n        sb.append('\\\\');\n      }\n      sb.append(c);\n    }\n    return sb;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"d7768541e2346b5def32bdf3ae20869498755403":["c26f00b574427b55127e869b935845554afde1fa"],"9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab":["c26f00b574427b55127e869b935845554afde1fa","d7768541e2346b5def32bdf3ae20869498755403"],"3cdb67100dc016748799a77218aa409478372d79":["d7768541e2346b5def32bdf3ae20869498755403"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"c26f00b574427b55127e869b935845554afde1fa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","c903c3d15906a3da96b8c0c2fb704491005fdbdb"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"407687e67faf6e1f02a211ca078d8e3eed631027":["d7768541e2346b5def32bdf3ae20869498755403","3cdb67100dc016748799a77218aa409478372d79"],"a258fbb26824fd104ed795e5d9033d2d040049ee":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3cdb67100dc016748799a77218aa409478372d79"]},"commit2Childs":{"d7768541e2346b5def32bdf3ae20869498755403":["9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab","3cdb67100dc016748799a77218aa409478372d79","407687e67faf6e1f02a211ca078d8e3eed631027"],"9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab":[],"3cdb67100dc016748799a77218aa409478372d79":["407687e67faf6e1f02a211ca078d8e3eed631027","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["c26f00b574427b55127e869b935845554afde1fa"],"c26f00b574427b55127e869b935845554afde1fa":["d7768541e2346b5def32bdf3ae20869498755403","9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c903c3d15906a3da96b8c0c2fb704491005fdbdb","c26f00b574427b55127e869b935845554afde1fa","a258fbb26824fd104ed795e5d9033d2d040049ee"],"407687e67faf6e1f02a211ca078d8e3eed631027":[],"a258fbb26824fd104ed795e5d9033d2d040049ee":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab","407687e67faf6e1f02a211ca078d8e3eed631027","a258fbb26824fd104ed795e5d9033d2d040049ee","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}