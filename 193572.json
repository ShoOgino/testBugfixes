{"path":"lucene/core/src/test/org/apache/lucene/index/TestIndexReader#testIsCurrent().mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestIndexReader#testIsCurrent().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexReader#testIsCurrent().mjava","sourceNew":"    public void testIsCurrent() throws Exception {\n      Directory d = newDirectory();\n      IndexWriter writer = new IndexWriter(d, newIndexWriterConfig( \n        TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n      addDocumentWithFields(writer);\n      writer.close();\n      // set up reader:\n      DirectoryReader reader = DirectoryReader.open(d);\n      assertTrue(reader.isCurrent());\n      // modify index by adding another document:\n      writer = new IndexWriter(d, newIndexWriterConfig(TEST_VERSION_CURRENT,\n          new MockAnalyzer(random)).setOpenMode(OpenMode.APPEND));\n      addDocumentWithFields(writer);\n      writer.close();\n      assertFalse(reader.isCurrent());\n      // re-create index:\n      writer = new IndexWriter(d, newIndexWriterConfig(TEST_VERSION_CURRENT,\n          new MockAnalyzer(random)).setOpenMode(OpenMode.CREATE));\n      addDocumentWithFields(writer);\n      writer.close();\n      assertFalse(reader.isCurrent());\n      reader.close();\n      d.close();\n    }\n\n","sourceOld":"    public void testIsCurrent() throws Exception {\n      Directory d = newDirectory();\n      IndexWriter writer = new IndexWriter(d, newIndexWriterConfig( \n        TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n      addDocumentWithFields(writer);\n      writer.close();\n      // set up reader:\n      DirectoryReader reader = DirectoryReader.open(d);\n      assertTrue(reader.isCurrent());\n      // modify index by adding another document:\n      writer = new IndexWriter(d, newIndexWriterConfig(TEST_VERSION_CURRENT,\n          new MockAnalyzer(random)).setOpenMode(OpenMode.APPEND));\n      addDocumentWithFields(writer);\n      writer.close();\n      assertFalse(reader.isCurrent());\n      // re-create index:\n      writer = new IndexWriter(d, newIndexWriterConfig(TEST_VERSION_CURRENT,\n          new MockAnalyzer(random)).setOpenMode(OpenMode.CREATE));\n      addDocumentWithFields(writer);\n      writer.close();\n      assertFalse(reader.isCurrent());\n      reader.close();\n      d.close();\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"83e99d44c4a660a48c0fcc7a0108ad0a56dc2f87","date":1328967626,"type":4,"author":"Uwe Schindler","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestIndexReader#testIsCurrent().mjava","sourceNew":null,"sourceOld":"    public void testIsCurrent() throws Exception {\n      Directory d = newDirectory();\n      IndexWriter writer = new IndexWriter(d, newIndexWriterConfig( \n        TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n      addDocumentWithFields(writer);\n      writer.close();\n      // set up reader:\n      DirectoryReader reader = DirectoryReader.open(d);\n      assertTrue(reader.isCurrent());\n      // modify index by adding another document:\n      writer = new IndexWriter(d, newIndexWriterConfig(TEST_VERSION_CURRENT,\n          new MockAnalyzer(random)).setOpenMode(OpenMode.APPEND));\n      addDocumentWithFields(writer);\n      writer.close();\n      assertFalse(reader.isCurrent());\n      // re-create index:\n      writer = new IndexWriter(d, newIndexWriterConfig(TEST_VERSION_CURRENT,\n          new MockAnalyzer(random)).setOpenMode(OpenMode.CREATE));\n      addDocumentWithFields(writer);\n      writer.close();\n      assertFalse(reader.isCurrent());\n      reader.close();\n      d.close();\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"83e99d44c4a660a48c0fcc7a0108ad0a56dc2f87":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["83e99d44c4a660a48c0fcc7a0108ad0a56dc2f87"]},"commit2Childs":{"83e99d44c4a660a48c0fcc7a0108ad0a56dc2f87":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["83e99d44c4a660a48c0fcc7a0108ad0a56dc2f87"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}