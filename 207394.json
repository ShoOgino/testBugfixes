{"path":"solr/core/src/java/org/apache/solr/handler/component/ShardFieldSortedHitQueue[ShardDoc]#getCachedComparator(SortField,IndexSearcher).mjava","commits":[{"id":"faff74992839549208db29d95b9ad4a1d3846c79","date":1385672428,"type":0,"author":"Steven Rowe","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/component/ShardFieldSortedHitQueue[ShardDoc]#getCachedComparator(SortField,IndexSearcher).mjava","pathOld":"/dev/null","sourceNew":"  Comparator<ShardDoc> getCachedComparator(SortField sortField, IndexSearcher searcher) {\n    SortField.Type type = sortField.getType();\n    if (type == SortField.Type.SCORE) {\n      return comparatorScore();\n    } else if (type == SortField.Type.REWRITEABLE) {\n      try {\n        sortField = sortField.rewrite(searcher);\n      } catch (IOException e) {\n        throw new SolrException(SERVER_ERROR, \"Exception rewriting sort field \" + sortField, e);\n      }\n    }\n    return comparatorFieldComparator(sortField);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"74f45af4339b0daf7a95c820ab88c1aea74fbce0","date":1387475327,"type":0,"author":"Michael McCandless","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/handler/component/ShardFieldSortedHitQueue[ShardDoc]#getCachedComparator(SortField,IndexSearcher).mjava","pathOld":"/dev/null","sourceNew":"  Comparator<ShardDoc> getCachedComparator(SortField sortField, IndexSearcher searcher) {\n    SortField.Type type = sortField.getType();\n    if (type == SortField.Type.SCORE) {\n      return comparatorScore();\n    } else if (type == SortField.Type.REWRITEABLE) {\n      try {\n        sortField = sortField.rewrite(searcher);\n      } catch (IOException e) {\n        throw new SolrException(SERVER_ERROR, \"Exception rewriting sort field \" + sortField, e);\n      }\n    }\n    return comparatorFieldComparator(sortField);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"35d59689803f4ad27f96148bb7c7167e373c6770","date":1454297137,"type":5,"author":"David Smiley","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/component/ShardFieldSortedHitQueue#getCachedComparator(SortField,IndexSearcher).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/component/ShardFieldSortedHitQueue[ShardDoc]#getCachedComparator(SortField,IndexSearcher).mjava","sourceNew":"  Comparator<ShardDoc> getCachedComparator(SortField sortField, IndexSearcher searcher) {\n    SortField.Type type = sortField.getType();\n    if (type == SortField.Type.SCORE) {\n      return comparatorScore();\n    } else if (type == SortField.Type.REWRITEABLE) {\n      try {\n        sortField = sortField.rewrite(searcher);\n      } catch (IOException e) {\n        throw new SolrException(SERVER_ERROR, \"Exception rewriting sort field \" + sortField, e);\n      }\n    }\n    return comparatorFieldComparator(sortField);\n  }\n\n","sourceOld":"  Comparator<ShardDoc> getCachedComparator(SortField sortField, IndexSearcher searcher) {\n    SortField.Type type = sortField.getType();\n    if (type == SortField.Type.SCORE) {\n      return comparatorScore();\n    } else if (type == SortField.Type.REWRITEABLE) {\n      try {\n        sortField = sortField.rewrite(searcher);\n      } catch (IOException e) {\n        throw new SolrException(SERVER_ERROR, \"Exception rewriting sort field \" + sortField, e);\n      }\n    }\n    return comparatorFieldComparator(sortField);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1e6acbaae7af722f17204ceccf0f7db5753eccf3","date":1454775255,"type":5,"author":"Mike McCandless","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/handler/component/ShardFieldSortedHitQueue#getCachedComparator(SortField,IndexSearcher).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/component/ShardFieldSortedHitQueue[ShardDoc]#getCachedComparator(SortField,IndexSearcher).mjava","sourceNew":"  Comparator<ShardDoc> getCachedComparator(SortField sortField, IndexSearcher searcher) {\n    SortField.Type type = sortField.getType();\n    if (type == SortField.Type.SCORE) {\n      return comparatorScore();\n    } else if (type == SortField.Type.REWRITEABLE) {\n      try {\n        sortField = sortField.rewrite(searcher);\n      } catch (IOException e) {\n        throw new SolrException(SERVER_ERROR, \"Exception rewriting sort field \" + sortField, e);\n      }\n    }\n    return comparatorFieldComparator(sortField);\n  }\n\n","sourceOld":"  Comparator<ShardDoc> getCachedComparator(SortField sortField, IndexSearcher searcher) {\n    SortField.Type type = sortField.getType();\n    if (type == SortField.Type.SCORE) {\n      return comparatorScore();\n    } else if (type == SortField.Type.REWRITEABLE) {\n      try {\n        sortField = sortField.rewrite(searcher);\n      } catch (IOException e) {\n        throw new SolrException(SERVER_ERROR, \"Exception rewriting sort field \" + sortField, e);\n      }\n    }\n    return comparatorFieldComparator(sortField);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"1e6acbaae7af722f17204ceccf0f7db5753eccf3":["faff74992839549208db29d95b9ad4a1d3846c79","35d59689803f4ad27f96148bb7c7167e373c6770"],"74f45af4339b0daf7a95c820ab88c1aea74fbce0":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","faff74992839549208db29d95b9ad4a1d3846c79"],"35d59689803f4ad27f96148bb7c7167e373c6770":["faff74992839549208db29d95b9ad4a1d3846c79"],"faff74992839549208db29d95b9ad4a1d3846c79":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["35d59689803f4ad27f96148bb7c7167e373c6770"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["74f45af4339b0daf7a95c820ab88c1aea74fbce0","faff74992839549208db29d95b9ad4a1d3846c79"],"1e6acbaae7af722f17204ceccf0f7db5753eccf3":[],"74f45af4339b0daf7a95c820ab88c1aea74fbce0":[],"35d59689803f4ad27f96148bb7c7167e373c6770":["1e6acbaae7af722f17204ceccf0f7db5753eccf3","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"faff74992839549208db29d95b9ad4a1d3846c79":["1e6acbaae7af722f17204ceccf0f7db5753eccf3","74f45af4339b0daf7a95c820ab88c1aea74fbce0","35d59689803f4ad27f96148bb7c7167e373c6770"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["1e6acbaae7af722f17204ceccf0f7db5753eccf3","74f45af4339b0daf7a95c820ab88c1aea74fbce0","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}