{"path":"lucene/highlighter/src/java/org/apache/lucene/search/vectorhighlight/FieldPhraseList.WeightedPhraseInfo#WeightedPhraseInfo(LinkedList[TermInfo],float,int).mjava","commits":[{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/highlighter/src/java/org/apache/lucene/search/vectorhighlight/FieldPhraseList.WeightedPhraseInfo#WeightedPhraseInfo(LinkedList[TermInfo],float,int).mjava","pathOld":"lucene/contrib/highlighter/src/java/org/apache/lucene/search/vectorhighlight/FieldPhraseList.WeightedPhraseInfo#WeightedPhraseInfo(LinkedList[TermInfo],float,int).mjava","sourceNew":"    public WeightedPhraseInfo( LinkedList<TermInfo> terms, float boost, int number ){\n      this.boost = boost;\n      this.seqnum = number;\n      termsOffsets = new ArrayList<Toffs>( terms.size() );\n      TermInfo ti = terms.get( 0 );\n      termsOffsets.add( new Toffs( ti.getStartOffset(), ti.getEndOffset() ) );\n      if( terms.size() == 1 ){\n        text = ti.getText();\n        return;\n      }\n      StringBuilder sb = new StringBuilder();\n      sb.append( ti.getText() );\n      int pos = ti.getPosition();\n      for( int i = 1; i < terms.size(); i++ ){\n        ti = terms.get( i );\n        sb.append( ti.getText() );\n        if( ti.getPosition() - pos == 1 ){\n          Toffs to = termsOffsets.get( termsOffsets.size() - 1 );\n          to.setEndOffset( ti.getEndOffset() );\n        }\n        else{\n          termsOffsets.add( new Toffs( ti.getStartOffset(), ti.getEndOffset() ) );\n        }\n        pos = ti.getPosition();\n      }\n      text = sb.toString();\n    }\n\n","sourceOld":"    public WeightedPhraseInfo( LinkedList<TermInfo> terms, float boost, int number ){\n      this.boost = boost;\n      this.seqnum = number;\n      termsOffsets = new ArrayList<Toffs>( terms.size() );\n      TermInfo ti = terms.get( 0 );\n      termsOffsets.add( new Toffs( ti.getStartOffset(), ti.getEndOffset() ) );\n      if( terms.size() == 1 ){\n        text = ti.getText();\n        return;\n      }\n      StringBuilder sb = new StringBuilder();\n      sb.append( ti.getText() );\n      int pos = ti.getPosition();\n      for( int i = 1; i < terms.size(); i++ ){\n        ti = terms.get( i );\n        sb.append( ti.getText() );\n        if( ti.getPosition() - pos == 1 ){\n          Toffs to = termsOffsets.get( termsOffsets.size() - 1 );\n          to.setEndOffset( ti.getEndOffset() );\n        }\n        else{\n          termsOffsets.add( new Toffs( ti.getStartOffset(), ti.getEndOffset() ) );\n        }\n        pos = ti.getPosition();\n      }\n      text = sb.toString();\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8241a3cb17762c5dcb75012f6eb9f20726a886f5","date":1338513430,"type":3,"author":"Koji Sekiguchi","isMerge":false,"pathNew":"lucene/highlighter/src/java/org/apache/lucene/search/vectorhighlight/FieldPhraseList.WeightedPhraseInfo#WeightedPhraseInfo(LinkedList[TermInfo],float,int).mjava","pathOld":"lucene/highlighter/src/java/org/apache/lucene/search/vectorhighlight/FieldPhraseList.WeightedPhraseInfo#WeightedPhraseInfo(LinkedList[TermInfo],float,int).mjava","sourceNew":"    public WeightedPhraseInfo( LinkedList<TermInfo> terms, float boost, int seqnum ){\n      this.boost = boost;\n      this.seqnum = seqnum;\n      termsOffsets = new ArrayList<Toffs>( terms.size() );\n      TermInfo ti = terms.get( 0 );\n      termsOffsets.add( new Toffs( ti.getStartOffset(), ti.getEndOffset() ) );\n      if( terms.size() == 1 ){\n        text = ti.getText();\n        return;\n      }\n      StringBuilder sb = new StringBuilder();\n      sb.append( ti.getText() );\n      int pos = ti.getPosition();\n      for( int i = 1; i < terms.size(); i++ ){\n        ti = terms.get( i );\n        sb.append( ti.getText() );\n        if( ti.getPosition() - pos == 1 ){\n          Toffs to = termsOffsets.get( termsOffsets.size() - 1 );\n          to.setEndOffset( ti.getEndOffset() );\n        }\n        else{\n          termsOffsets.add( new Toffs( ti.getStartOffset(), ti.getEndOffset() ) );\n        }\n        pos = ti.getPosition();\n      }\n      text = sb.toString();\n    }\n\n","sourceOld":"    public WeightedPhraseInfo( LinkedList<TermInfo> terms, float boost, int number ){\n      this.boost = boost;\n      this.seqnum = number;\n      termsOffsets = new ArrayList<Toffs>( terms.size() );\n      TermInfo ti = terms.get( 0 );\n      termsOffsets.add( new Toffs( ti.getStartOffset(), ti.getEndOffset() ) );\n      if( terms.size() == 1 ){\n        text = ti.getText();\n        return;\n      }\n      StringBuilder sb = new StringBuilder();\n      sb.append( ti.getText() );\n      int pos = ti.getPosition();\n      for( int i = 1; i < terms.size(); i++ ){\n        ti = terms.get( i );\n        sb.append( ti.getText() );\n        if( ti.getPosition() - pos == 1 ){\n          Toffs to = termsOffsets.get( termsOffsets.size() - 1 );\n          to.setEndOffset( ti.getEndOffset() );\n        }\n        else{\n          termsOffsets.add( new Toffs( ti.getStartOffset(), ti.getEndOffset() ) );\n        }\n        pos = ti.getPosition();\n      }\n      text = sb.toString();\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"79acd0ca7a7750de61516c6b6687a37c8765313b","date":1338910729,"type":3,"author":"Koji Sekiguchi","isMerge":false,"pathNew":"lucene/highlighter/src/java/org/apache/lucene/search/vectorhighlight/FieldPhraseList.WeightedPhraseInfo#WeightedPhraseInfo(LinkedList[TermInfo],float,int).mjava","pathOld":"lucene/highlighter/src/java/org/apache/lucene/search/vectorhighlight/FieldPhraseList.WeightedPhraseInfo#WeightedPhraseInfo(LinkedList[TermInfo],float,int).mjava","sourceNew":"    public WeightedPhraseInfo( LinkedList<TermInfo> terms, float boost, int seqnum ){\n      this.boost = boost;\n      this.seqnum = seqnum;\n      \n      // now we keep TermInfos for further operations\n      termsInfos = new ArrayList<TermInfo>( terms );\n      \n      termsOffsets = new ArrayList<Toffs>( terms.size() );\n      TermInfo ti = terms.get( 0 );\n      termsOffsets.add( new Toffs( ti.getStartOffset(), ti.getEndOffset() ) );\n      if( terms.size() == 1 ){\n        text = ti.getText();\n        return;\n      }\n      StringBuilder sb = new StringBuilder();\n      sb.append( ti.getText() );\n      int pos = ti.getPosition();\n      for( int i = 1; i < terms.size(); i++ ){\n        ti = terms.get( i );\n        sb.append( ti.getText() );\n        if( ti.getPosition() - pos == 1 ){\n          Toffs to = termsOffsets.get( termsOffsets.size() - 1 );\n          to.setEndOffset( ti.getEndOffset() );\n        }\n        else{\n          termsOffsets.add( new Toffs( ti.getStartOffset(), ti.getEndOffset() ) );\n        }\n        pos = ti.getPosition();\n      }\n      text = sb.toString();\n    }\n\n","sourceOld":"    public WeightedPhraseInfo( LinkedList<TermInfo> terms, float boost, int seqnum ){\n      this.boost = boost;\n      this.seqnum = seqnum;\n      termsOffsets = new ArrayList<Toffs>( terms.size() );\n      TermInfo ti = terms.get( 0 );\n      termsOffsets.add( new Toffs( ti.getStartOffset(), ti.getEndOffset() ) );\n      if( terms.size() == 1 ){\n        text = ti.getText();\n        return;\n      }\n      StringBuilder sb = new StringBuilder();\n      sb.append( ti.getText() );\n      int pos = ti.getPosition();\n      for( int i = 1; i < terms.size(); i++ ){\n        ti = terms.get( i );\n        sb.append( ti.getText() );\n        if( ti.getPosition() - pos == 1 ){\n          Toffs to = termsOffsets.get( termsOffsets.size() - 1 );\n          to.setEndOffset( ti.getEndOffset() );\n        }\n        else{\n          termsOffsets.add( new Toffs( ti.getStartOffset(), ti.getEndOffset() ) );\n        }\n        pos = ti.getPosition();\n      }\n      text = sb.toString();\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b5c9602de3e9cfe5d0cc9e3a068199b57d5d85ef","date":1339509577,"type":3,"author":"Koji Sekiguchi","isMerge":false,"pathNew":"lucene/highlighter/src/java/org/apache/lucene/search/vectorhighlight/FieldPhraseList.WeightedPhraseInfo#WeightedPhraseInfo(LinkedList[TermInfo],float,int).mjava","pathOld":"lucene/highlighter/src/java/org/apache/lucene/search/vectorhighlight/FieldPhraseList.WeightedPhraseInfo#WeightedPhraseInfo(LinkedList[TermInfo],float,int).mjava","sourceNew":"    public WeightedPhraseInfo( LinkedList<TermInfo> terms, float boost, int seqnum ){\n      this.boost = boost;\n      this.seqnum = seqnum;\n      \n      // We keep TermInfos for further operations\n      termsInfos = new ArrayList<TermInfo>( terms );\n      \n      termsOffsets = new ArrayList<Toffs>( terms.size() );\n      TermInfo ti = terms.get( 0 );\n      termsOffsets.add( new Toffs( ti.getStartOffset(), ti.getEndOffset() ) );\n      if( terms.size() == 1 ){\n        text = ti.getText();\n        return;\n      }\n      StringBuilder sb = new StringBuilder();\n      sb.append( ti.getText() );\n      int pos = ti.getPosition();\n      for( int i = 1; i < terms.size(); i++ ){\n        ti = terms.get( i );\n        sb.append( ti.getText() );\n        if( ti.getPosition() - pos == 1 ){\n          Toffs to = termsOffsets.get( termsOffsets.size() - 1 );\n          to.setEndOffset( ti.getEndOffset() );\n        }\n        else{\n          termsOffsets.add( new Toffs( ti.getStartOffset(), ti.getEndOffset() ) );\n        }\n        pos = ti.getPosition();\n      }\n      text = sb.toString();\n    }\n\n","sourceOld":"    public WeightedPhraseInfo( LinkedList<TermInfo> terms, float boost, int seqnum ){\n      this.boost = boost;\n      this.seqnum = seqnum;\n      \n      // now we keep TermInfos for further operations\n      termsInfos = new ArrayList<TermInfo>( terms );\n      \n      termsOffsets = new ArrayList<Toffs>( terms.size() );\n      TermInfo ti = terms.get( 0 );\n      termsOffsets.add( new Toffs( ti.getStartOffset(), ti.getEndOffset() ) );\n      if( terms.size() == 1 ){\n        text = ti.getText();\n        return;\n      }\n      StringBuilder sb = new StringBuilder();\n      sb.append( ti.getText() );\n      int pos = ti.getPosition();\n      for( int i = 1; i < terms.size(); i++ ){\n        ti = terms.get( i );\n        sb.append( ti.getText() );\n        if( ti.getPosition() - pos == 1 ){\n          Toffs to = termsOffsets.get( termsOffsets.size() - 1 );\n          to.setEndOffset( ti.getEndOffset() );\n        }\n        else{\n          termsOffsets.add( new Toffs( ti.getStartOffset(), ti.getEndOffset() ) );\n        }\n        pos = ti.getPosition();\n      }\n      text = sb.toString();\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7327eec6fde8afb35c01f6234cb50c42a7c737d3","date":1374238360,"type":5,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/highlighter/src/java/org/apache/lucene/search/vectorhighlight/FieldPhraseList.WeightedPhraseInfo#WeightedPhraseInfo(List[TermInfo],float,int).mjava","pathOld":"lucene/highlighter/src/java/org/apache/lucene/search/vectorhighlight/FieldPhraseList.WeightedPhraseInfo#WeightedPhraseInfo(LinkedList[TermInfo],float,int).mjava","sourceNew":"    public WeightedPhraseInfo( List<TermInfo> terms, float boost, int seqnum ){\n      this.boost = boost;\n      this.seqnum = seqnum;\n      \n      // We keep TermInfos for further operations\n      termsInfos = new ArrayList<TermInfo>( terms );\n      \n      termsOffsets = new ArrayList<Toffs>( terms.size() );\n      TermInfo ti = terms.get( 0 );\n      termsOffsets.add( new Toffs( ti.getStartOffset(), ti.getEndOffset() ) );\n      if( terms.size() == 1 ){\n        text = ti.getText();\n        return;\n      }\n      StringBuilder sb = new StringBuilder();\n      sb.append( ti.getText() );\n      int pos = ti.getPosition();\n      for( int i = 1; i < terms.size(); i++ ){\n        ti = terms.get( i );\n        sb.append( ti.getText() );\n        if( ti.getPosition() - pos == 1 ){\n          Toffs to = termsOffsets.get( termsOffsets.size() - 1 );\n          to.setEndOffset( ti.getEndOffset() );\n        }\n        else{\n          termsOffsets.add( new Toffs( ti.getStartOffset(), ti.getEndOffset() ) );\n        }\n        pos = ti.getPosition();\n      }\n      text = sb.toString();\n    }\n\n","sourceOld":"    public WeightedPhraseInfo( LinkedList<TermInfo> terms, float boost, int seqnum ){\n      this.boost = boost;\n      this.seqnum = seqnum;\n      \n      // We keep TermInfos for further operations\n      termsInfos = new ArrayList<TermInfo>( terms );\n      \n      termsOffsets = new ArrayList<Toffs>( terms.size() );\n      TermInfo ti = terms.get( 0 );\n      termsOffsets.add( new Toffs( ti.getStartOffset(), ti.getEndOffset() ) );\n      if( terms.size() == 1 ){\n        text = ti.getText();\n        return;\n      }\n      StringBuilder sb = new StringBuilder();\n      sb.append( ti.getText() );\n      int pos = ti.getPosition();\n      for( int i = 1; i < terms.size(); i++ ){\n        ti = terms.get( i );\n        sb.append( ti.getText() );\n        if( ti.getPosition() - pos == 1 ){\n          Toffs to = termsOffsets.get( termsOffsets.size() - 1 );\n          to.setEndOffset( ti.getEndOffset() );\n        }\n        else{\n          termsOffsets.add( new Toffs( ti.getStartOffset(), ti.getEndOffset() ) );\n        }\n        pos = ti.getPosition();\n      }\n      text = sb.toString();\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee","date":1376366778,"type":5,"author":"Han Jiang","isMerge":false,"pathNew":"lucene/highlighter/src/java/org/apache/lucene/search/vectorhighlight/FieldPhraseList.WeightedPhraseInfo#WeightedPhraseInfo(List[TermInfo],float,int).mjava","pathOld":"lucene/highlighter/src/java/org/apache/lucene/search/vectorhighlight/FieldPhraseList.WeightedPhraseInfo#WeightedPhraseInfo(LinkedList[TermInfo],float,int).mjava","sourceNew":"    public WeightedPhraseInfo( List<TermInfo> terms, float boost, int seqnum ){\n      this.boost = boost;\n      this.seqnum = seqnum;\n      \n      // We keep TermInfos for further operations\n      termsInfos = new ArrayList<TermInfo>( terms );\n      \n      termsOffsets = new ArrayList<Toffs>( terms.size() );\n      TermInfo ti = terms.get( 0 );\n      termsOffsets.add( new Toffs( ti.getStartOffset(), ti.getEndOffset() ) );\n      if( terms.size() == 1 ){\n        text = ti.getText();\n        return;\n      }\n      StringBuilder sb = new StringBuilder();\n      sb.append( ti.getText() );\n      int pos = ti.getPosition();\n      for( int i = 1; i < terms.size(); i++ ){\n        ti = terms.get( i );\n        sb.append( ti.getText() );\n        if( ti.getPosition() - pos == 1 ){\n          Toffs to = termsOffsets.get( termsOffsets.size() - 1 );\n          to.setEndOffset( ti.getEndOffset() );\n        }\n        else{\n          termsOffsets.add( new Toffs( ti.getStartOffset(), ti.getEndOffset() ) );\n        }\n        pos = ti.getPosition();\n      }\n      text = sb.toString();\n    }\n\n","sourceOld":"    public WeightedPhraseInfo( LinkedList<TermInfo> terms, float boost, int seqnum ){\n      this.boost = boost;\n      this.seqnum = seqnum;\n      \n      // We keep TermInfos for further operations\n      termsInfos = new ArrayList<TermInfo>( terms );\n      \n      termsOffsets = new ArrayList<Toffs>( terms.size() );\n      TermInfo ti = terms.get( 0 );\n      termsOffsets.add( new Toffs( ti.getStartOffset(), ti.getEndOffset() ) );\n      if( terms.size() == 1 ){\n        text = ti.getText();\n        return;\n      }\n      StringBuilder sb = new StringBuilder();\n      sb.append( ti.getText() );\n      int pos = ti.getPosition();\n      for( int i = 1; i < terms.size(); i++ ){\n        ti = terms.get( i );\n        sb.append( ti.getText() );\n        if( ti.getPosition() - pos == 1 ){\n          Toffs to = termsOffsets.get( termsOffsets.size() - 1 );\n          to.setEndOffset( ti.getEndOffset() );\n        }\n        else{\n          termsOffsets.add( new Toffs( ti.getStartOffset(), ti.getEndOffset() ) );\n        }\n        pos = ti.getPosition();\n      }\n      text = sb.toString();\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"cfd0cdef6d792d7bc9c123a4d51723e2ba3f6e08","date":1378464767,"type":1,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/highlighter/src/java/org/apache/lucene/search/vectorhighlight/FieldPhraseList.WeightedPhraseInfo#WeightedPhraseInfo(LinkedList[TermInfo],float,int).mjava","pathOld":"lucene/highlighter/src/java/org/apache/lucene/search/vectorhighlight/FieldPhraseList.WeightedPhraseInfo#WeightedPhraseInfo(List[TermInfo],float,int).mjava","sourceNew":"    public WeightedPhraseInfo( LinkedList<TermInfo> terms, float boost, int seqnum ){\n      this.boost = boost;\n      this.seqnum = seqnum;\n      \n      // We keep TermInfos for further operations\n      termsInfos = new ArrayList<TermInfo>( terms );\n      \n      termsOffsets = new ArrayList<Toffs>( terms.size() );\n      TermInfo ti = terms.get( 0 );\n      termsOffsets.add( new Toffs( ti.getStartOffset(), ti.getEndOffset() ) );\n      if( terms.size() == 1 ){\n        text = ti.getText();\n        return;\n      }\n      StringBuilder sb = new StringBuilder();\n      sb.append( ti.getText() );\n      int pos = ti.getPosition();\n      for( int i = 1; i < terms.size(); i++ ){\n        ti = terms.get( i );\n        sb.append( ti.getText() );\n        if( ti.getPosition() - pos == 1 ){\n          Toffs to = termsOffsets.get( termsOffsets.size() - 1 );\n          to.setEndOffset( ti.getEndOffset() );\n        }\n        else{\n          termsOffsets.add( new Toffs( ti.getStartOffset(), ti.getEndOffset() ) );\n        }\n        pos = ti.getPosition();\n      }\n      text = sb.toString();\n    }\n\n","sourceOld":"    public WeightedPhraseInfo( List<TermInfo> terms, float boost, int seqnum ){\n      this.boost = boost;\n      this.seqnum = seqnum;\n      \n      // We keep TermInfos for further operations\n      termsInfos = new ArrayList<TermInfo>( terms );\n      \n      termsOffsets = new ArrayList<Toffs>( terms.size() );\n      TermInfo ti = terms.get( 0 );\n      termsOffsets.add( new Toffs( ti.getStartOffset(), ti.getEndOffset() ) );\n      if( terms.size() == 1 ){\n        text = ti.getText();\n        return;\n      }\n      StringBuilder sb = new StringBuilder();\n      sb.append( ti.getText() );\n      int pos = ti.getPosition();\n      for( int i = 1; i < terms.size(); i++ ){\n        ti = terms.get( i );\n        sb.append( ti.getText() );\n        if( ti.getPosition() - pos == 1 ){\n          Toffs to = termsOffsets.get( termsOffsets.size() - 1 );\n          to.setEndOffset( ti.getEndOffset() );\n        }\n        else{\n          termsOffsets.add( new Toffs( ti.getStartOffset(), ti.getEndOffset() ) );\n        }\n        pos = ti.getPosition();\n      }\n      text = sb.toString();\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"050e6201c3a7d4c351ebc06cbe4822e26e028117","date":1382375603,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/highlighter/src/java/org/apache/lucene/search/vectorhighlight/FieldPhraseList.WeightedPhraseInfo#WeightedPhraseInfo(LinkedList[TermInfo],float,int).mjava","pathOld":"lucene/highlighter/src/java/org/apache/lucene/search/vectorhighlight/FieldPhraseList.WeightedPhraseInfo#WeightedPhraseInfo(LinkedList[TermInfo],float,int).mjava","sourceNew":"    public WeightedPhraseInfo( LinkedList<TermInfo> terms, float boost, int seqnum ){\n      this.boost = boost;\n      this.seqnum = seqnum;\n      \n      // We keep TermInfos for further operations\n      termsInfos = new ArrayList<TermInfo>( terms );\n      \n      termsOffsets = new ArrayList<Toffs>( terms.size() );\n      TermInfo ti = terms.get( 0 );\n      termsOffsets.add( new Toffs( ti.getStartOffset(), ti.getEndOffset() ) );\n      if( terms.size() == 1 ){\n        return;\n      }\n      int pos = ti.getPosition();\n      for( int i = 1; i < terms.size(); i++ ){\n        ti = terms.get( i );\n        if( ti.getPosition() - pos == 1 ){\n          Toffs to = termsOffsets.get( termsOffsets.size() - 1 );\n          to.setEndOffset( ti.getEndOffset() );\n        }\n        else{\n          termsOffsets.add( new Toffs( ti.getStartOffset(), ti.getEndOffset() ) );\n        }\n        pos = ti.getPosition();\n      }\n    }\n\n","sourceOld":"    public WeightedPhraseInfo( LinkedList<TermInfo> terms, float boost, int seqnum ){\n      this.boost = boost;\n      this.seqnum = seqnum;\n      \n      // We keep TermInfos for further operations\n      termsInfos = new ArrayList<TermInfo>( terms );\n      \n      termsOffsets = new ArrayList<Toffs>( terms.size() );\n      TermInfo ti = terms.get( 0 );\n      termsOffsets.add( new Toffs( ti.getStartOffset(), ti.getEndOffset() ) );\n      if( terms.size() == 1 ){\n        text = ti.getText();\n        return;\n      }\n      StringBuilder sb = new StringBuilder();\n      sb.append( ti.getText() );\n      int pos = ti.getPosition();\n      for( int i = 1; i < terms.size(); i++ ){\n        ti = terms.get( i );\n        sb.append( ti.getText() );\n        if( ti.getPosition() - pos == 1 ){\n          Toffs to = termsOffsets.get( termsOffsets.size() - 1 );\n          to.setEndOffset( ti.getEndOffset() );\n        }\n        else{\n          termsOffsets.add( new Toffs( ti.getStartOffset(), ti.getEndOffset() ) );\n        }\n        pos = ti.getPosition();\n      }\n      text = sb.toString();\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"634f330c54fd3f9f491d52036dc3f40b4f4d8934","date":1394635157,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/highlighter/src/java/org/apache/lucene/search/vectorhighlight/FieldPhraseList.WeightedPhraseInfo#WeightedPhraseInfo(LinkedList[TermInfo],float,int).mjava","pathOld":"lucene/highlighter/src/java/org/apache/lucene/search/vectorhighlight/FieldPhraseList.WeightedPhraseInfo#WeightedPhraseInfo(LinkedList[TermInfo],float,int).mjava","sourceNew":"    public WeightedPhraseInfo( LinkedList<TermInfo> terms, float boost, int seqnum ){\n      this.boost = boost;\n      this.seqnum = seqnum;\n      \n      // We keep TermInfos for further operations\n      termsInfos = new ArrayList<>( terms );\n      \n      termsOffsets = new ArrayList<>( terms.size() );\n      TermInfo ti = terms.get( 0 );\n      termsOffsets.add( new Toffs( ti.getStartOffset(), ti.getEndOffset() ) );\n      if( terms.size() == 1 ){\n        return;\n      }\n      int pos = ti.getPosition();\n      for( int i = 1; i < terms.size(); i++ ){\n        ti = terms.get( i );\n        if( ti.getPosition() - pos == 1 ){\n          Toffs to = termsOffsets.get( termsOffsets.size() - 1 );\n          to.setEndOffset( ti.getEndOffset() );\n        }\n        else{\n          termsOffsets.add( new Toffs( ti.getStartOffset(), ti.getEndOffset() ) );\n        }\n        pos = ti.getPosition();\n      }\n    }\n\n","sourceOld":"    public WeightedPhraseInfo( LinkedList<TermInfo> terms, float boost, int seqnum ){\n      this.boost = boost;\n      this.seqnum = seqnum;\n      \n      // We keep TermInfos for further operations\n      termsInfos = new ArrayList<TermInfo>( terms );\n      \n      termsOffsets = new ArrayList<Toffs>( terms.size() );\n      TermInfo ti = terms.get( 0 );\n      termsOffsets.add( new Toffs( ti.getStartOffset(), ti.getEndOffset() ) );\n      if( terms.size() == 1 ){\n        return;\n      }\n      int pos = ti.getPosition();\n      for( int i = 1; i < terms.size(); i++ ){\n        ti = terms.get( i );\n        if( ti.getPosition() - pos == 1 ){\n          Toffs to = termsOffsets.get( termsOffsets.size() - 1 );\n          to.setEndOffset( ti.getEndOffset() );\n        }\n        else{\n          termsOffsets.add( new Toffs( ti.getStartOffset(), ti.getEndOffset() ) );\n        }\n        pos = ti.getPosition();\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"634f330c54fd3f9f491d52036dc3f40b4f4d8934":["050e6201c3a7d4c351ebc06cbe4822e26e028117"],"b5c9602de3e9cfe5d0cc9e3a068199b57d5d85ef":["79acd0ca7a7750de61516c6b6687a37c8765313b"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"8241a3cb17762c5dcb75012f6eb9f20726a886f5":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"050e6201c3a7d4c351ebc06cbe4822e26e028117":["cfd0cdef6d792d7bc9c123a4d51723e2ba3f6e08"],"79acd0ca7a7750de61516c6b6687a37c8765313b":["8241a3cb17762c5dcb75012f6eb9f20726a886f5"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee":["b5c9602de3e9cfe5d0cc9e3a068199b57d5d85ef"],"7327eec6fde8afb35c01f6234cb50c42a7c737d3":["b5c9602de3e9cfe5d0cc9e3a068199b57d5d85ef"],"cfd0cdef6d792d7bc9c123a4d51723e2ba3f6e08":["7327eec6fde8afb35c01f6234cb50c42a7c737d3"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["634f330c54fd3f9f491d52036dc3f40b4f4d8934"]},"commit2Childs":{"634f330c54fd3f9f491d52036dc3f40b4f4d8934":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"b5c9602de3e9cfe5d0cc9e3a068199b57d5d85ef":["8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee","7327eec6fde8afb35c01f6234cb50c42a7c737d3"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["8241a3cb17762c5dcb75012f6eb9f20726a886f5"],"8241a3cb17762c5dcb75012f6eb9f20726a886f5":["79acd0ca7a7750de61516c6b6687a37c8765313b"],"050e6201c3a7d4c351ebc06cbe4822e26e028117":["634f330c54fd3f9f491d52036dc3f40b4f4d8934"],"79acd0ca7a7750de61516c6b6687a37c8765313b":["b5c9602de3e9cfe5d0cc9e3a068199b57d5d85ef"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee":[],"7327eec6fde8afb35c01f6234cb50c42a7c737d3":["cfd0cdef6d792d7bc9c123a4d51723e2ba3f6e08"],"cfd0cdef6d792d7bc9c123a4d51723e2ba3f6e08":["050e6201c3a7d4c351ebc06cbe4822e26e028117"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}