{"path":"lucene/src/java/org/apache/lucene/index/values/Bytes.BytesWriterBase#getIndexOut().mjava","commits":[{"id":"3b7a068f550e13e49517c6899cc3b94c8eeb72e5","date":1309354772,"type":1,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/values/Bytes.BytesWriterBase#getIndexOut().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/values/Bytes.BytesWriterBase#BytesWriterBase(Directory,String,String,int,boolean,ByteBlockPool,AtomicLong).mjava","sourceNew":"    protected IndexOutput getIndexOut() throws IOException {\n      boolean success = false;\n      try {\n        if (idxOut == null) {\n          idxOut = dir.createOutput(IndexFileNames.segmentFileName(id, \"\",\n              INDEX_EXTENSION));\n          CodecUtil.writeHeader(idxOut, codecName, version);\n        }\n        success = true;\n      } finally {\n        if (!success) {\n          IOUtils.closeSafely(true, idxOut);\n        }\n      }\n      return idxOut;\n    }\n\n","sourceOld":"    protected BytesWriterBase(Directory dir, String id, String codecName,\n        int version, boolean initIndex, ByteBlockPool pool,\n        AtomicLong bytesUsed) throws IOException {\n      super(bytesUsed);\n      this.id = id;\n      this.pool = pool;\n      datOut = dir.createOutput(IndexFileNames.segmentFileName(id, \"\",\n            DATA_EXTENSION));\n      boolean success = false;\n      try {\n        CodecUtil.writeHeader(datOut, codecName, version);\n        if (initIndex) {\n          idxOut = dir.createOutput(IndexFileNames.segmentFileName(id, \"\",\n              INDEX_EXTENSION));\n          CodecUtil.writeHeader(idxOut, codecName, version);\n        } else {\n          idxOut = null;\n        }\n        success = true;\n      } finally {\n        if (!success) {\n          IOUtils.closeSafely(true, datOut, idxOut);\n        }\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"817d8435e9135b756f08ce6710ab0baac51bdf88","date":1309986993,"type":0,"author":"Steven Rowe","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/values/Bytes.BytesWriterBase#getIndexOut().mjava","pathOld":"/dev/null","sourceNew":"    protected IndexOutput getIndexOut() throws IOException {\n      boolean success = false;\n      try {\n        if (idxOut == null) {\n          idxOut = dir.createOutput(IndexFileNames.segmentFileName(id, \"\",\n              INDEX_EXTENSION));\n          CodecUtil.writeHeader(idxOut, codecName, version);\n        }\n        success = true;\n      } finally {\n        if (!success) {\n          IOUtils.closeSafely(true, idxOut);\n        }\n      }\n      return idxOut;\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d083e83f225b11e5fdd900e83d26ddb385b6955c","date":1310029438,"type":0,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/values/Bytes.BytesWriterBase#getIndexOut().mjava","pathOld":"/dev/null","sourceNew":"    protected IndexOutput getIndexOut() throws IOException {\n      boolean success = false;\n      try {\n        if (idxOut == null) {\n          idxOut = dir.createOutput(IndexFileNames.segmentFileName(id, \"\",\n              INDEX_EXTENSION), context);\n          CodecUtil.writeHeader(idxOut, codecName, version);\n        }\n        success = true;\n      } finally {\n        if (!success) {\n          IOUtils.closeSafely(true, idxOut);\n        }\n      }\n      return idxOut;\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ddc4c914be86e34b54f70023f45a60fa7f04e929","date":1310115160,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/values/Bytes.BytesWriterBase#getIndexOut().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/values/Bytes.BytesWriterBase#getIndexOut().mjava","sourceNew":"    protected IndexOutput getIndexOut() throws IOException {\n      boolean success = false;\n      try {\n        if (idxOut == null) {\n          idxOut = dir.createOutput(IndexFileNames.segmentFileName(id, \"\",\n              INDEX_EXTENSION), context);\n          CodecUtil.writeHeader(idxOut, codecName, version);\n        }\n        success = true;\n      } finally {\n        if (!success) {\n          IOUtils.closeSafely(true, idxOut);\n        }\n      }\n      return idxOut;\n    }\n\n","sourceOld":"    protected IndexOutput getIndexOut() throws IOException {\n      boolean success = false;\n      try {\n        if (idxOut == null) {\n          idxOut = dir.createOutput(IndexFileNames.segmentFileName(id, \"\",\n              INDEX_EXTENSION));\n          CodecUtil.writeHeader(idxOut, codecName, version);\n        }\n        success = true;\n      } finally {\n        if (!success) {\n          IOUtils.closeSafely(true, idxOut);\n        }\n      }\n      return idxOut;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5d004d0e0b3f65bb40da76d476d659d7888270e8","date":1310158940,"type":3,"author":"Steven Rowe","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/values/Bytes.BytesWriterBase#getIndexOut().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/values/Bytes.BytesWriterBase#getIndexOut().mjava","sourceNew":"    protected IndexOutput getIndexOut() throws IOException {\n      boolean success = false;\n      try {\n        if (idxOut == null) {\n          idxOut = dir.createOutput(IndexFileNames.segmentFileName(id, \"\",\n              INDEX_EXTENSION), context);\n          CodecUtil.writeHeader(idxOut, codecName, version);\n        }\n        success = true;\n      } finally {\n        if (!success) {\n          IOUtils.closeSafely(true, idxOut);\n        }\n      }\n      return idxOut;\n    }\n\n","sourceOld":"    protected IndexOutput getIndexOut() throws IOException {\n      boolean success = false;\n      try {\n        if (idxOut == null) {\n          idxOut = dir.createOutput(IndexFileNames.segmentFileName(id, \"\",\n              INDEX_EXTENSION));\n          CodecUtil.writeHeader(idxOut, codecName, version);\n        }\n        success = true;\n      } finally {\n        if (!success) {\n          IOUtils.closeSafely(true, idxOut);\n        }\n      }\n      return idxOut;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"24230fe54121f9be9d85f2c2067536296785e421","date":1314462346,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/values/Bytes.BytesWriterBase#getIndexOut().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/values/Bytes.BytesWriterBase#getIndexOut().mjava","sourceNew":"    protected IndexOutput getIndexOut() throws IOException {\n      boolean success = false;\n      try {\n        if (idxOut == null) {\n          idxOut = dir.createOutput(IndexFileNames.segmentFileName(id, \"\",\n              INDEX_EXTENSION), context);\n          CodecUtil.writeHeader(idxOut, codecName, version);\n        }\n        success = true;\n      } finally {\n        if (!success) {\n          IOUtils.closeWhileHandlingException(idxOut);\n        }\n      }\n      return idxOut;\n    }\n\n","sourceOld":"    protected IndexOutput getIndexOut() throws IOException {\n      boolean success = false;\n      try {\n        if (idxOut == null) {\n          idxOut = dir.createOutput(IndexFileNames.segmentFileName(id, \"\",\n              INDEX_EXTENSION), context);\n          CodecUtil.writeHeader(idxOut, codecName, version);\n        }\n        success = true;\n      } finally {\n        if (!success) {\n          IOUtils.closeSafely(true, idxOut);\n        }\n      }\n      return idxOut;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"85eb75e0c0203e44dcf686f35876cf6080f3a671","date":1317221550,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/values/Bytes.BytesWriterBase#getIndexOut().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/values/Bytes.BytesWriterBase#getIndexOut().mjava","sourceNew":"    protected IndexOutput getIndexOut() {\n      return idxOut;\n    }\n\n","sourceOld":"    protected IndexOutput getIndexOut() throws IOException {\n      boolean success = false;\n      try {\n        if (idxOut == null) {\n          idxOut = dir.createOutput(IndexFileNames.segmentFileName(id, \"\",\n              INDEX_EXTENSION), context);\n          CodecUtil.writeHeader(idxOut, codecName, version);\n        }\n        success = true;\n      } finally {\n        if (!success) {\n          IOUtils.closeWhileHandlingException(idxOut);\n        }\n      }\n      return idxOut;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f9efc72acdea22f5285be0a808f8bba51bb8e367","date":1323217280,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/lucene40/values/Bytes.BytesWriterBase#getIndexOut().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/values/Bytes.BytesWriterBase#getIndexOut().mjava","sourceNew":"    protected IndexOutput getIndexOut() {\n      return idxOut;\n    }\n\n","sourceOld":"    protected IndexOutput getIndexOut() {\n      return idxOut;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d638301ad1cfcae567b681b893bc8781f0ee48a5","date":1323801546,"type":5,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/lucene40/values/Bytes.BytesWriterBase#getIndexOut().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/values/Bytes.BytesWriterBase#getIndexOut().mjava","sourceNew":"    protected IndexOutput getIndexOut() {\n      return idxOut;\n    }\n\n","sourceOld":"    protected IndexOutput getIndexOut() {\n      return idxOut;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"24230fe54121f9be9d85f2c2067536296785e421":["ddc4c914be86e34b54f70023f45a60fa7f04e929"],"85eb75e0c0203e44dcf686f35876cf6080f3a671":["24230fe54121f9be9d85f2c2067536296785e421"],"3b7a068f550e13e49517c6899cc3b94c8eeb72e5":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"5d004d0e0b3f65bb40da76d476d659d7888270e8":["817d8435e9135b756f08ce6710ab0baac51bdf88","ddc4c914be86e34b54f70023f45a60fa7f04e929"],"ddc4c914be86e34b54f70023f45a60fa7f04e929":["3b7a068f550e13e49517c6899cc3b94c8eeb72e5","d083e83f225b11e5fdd900e83d26ddb385b6955c"],"f9efc72acdea22f5285be0a808f8bba51bb8e367":["85eb75e0c0203e44dcf686f35876cf6080f3a671"],"d083e83f225b11e5fdd900e83d26ddb385b6955c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","3b7a068f550e13e49517c6899cc3b94c8eeb72e5"],"817d8435e9135b756f08ce6710ab0baac51bdf88":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","3b7a068f550e13e49517c6899cc3b94c8eeb72e5"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["d638301ad1cfcae567b681b893bc8781f0ee48a5"],"d638301ad1cfcae567b681b893bc8781f0ee48a5":["85eb75e0c0203e44dcf686f35876cf6080f3a671","f9efc72acdea22f5285be0a808f8bba51bb8e367"]},"commit2Childs":{"24230fe54121f9be9d85f2c2067536296785e421":["85eb75e0c0203e44dcf686f35876cf6080f3a671"],"85eb75e0c0203e44dcf686f35876cf6080f3a671":["f9efc72acdea22f5285be0a808f8bba51bb8e367","d638301ad1cfcae567b681b893bc8781f0ee48a5"],"3b7a068f550e13e49517c6899cc3b94c8eeb72e5":["ddc4c914be86e34b54f70023f45a60fa7f04e929","d083e83f225b11e5fdd900e83d26ddb385b6955c","817d8435e9135b756f08ce6710ab0baac51bdf88"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3b7a068f550e13e49517c6899cc3b94c8eeb72e5","d083e83f225b11e5fdd900e83d26ddb385b6955c","817d8435e9135b756f08ce6710ab0baac51bdf88"],"5d004d0e0b3f65bb40da76d476d659d7888270e8":[],"ddc4c914be86e34b54f70023f45a60fa7f04e929":["24230fe54121f9be9d85f2c2067536296785e421","5d004d0e0b3f65bb40da76d476d659d7888270e8"],"f9efc72acdea22f5285be0a808f8bba51bb8e367":["d638301ad1cfcae567b681b893bc8781f0ee48a5"],"d083e83f225b11e5fdd900e83d26ddb385b6955c":["ddc4c914be86e34b54f70023f45a60fa7f04e929"],"817d8435e9135b756f08ce6710ab0baac51bdf88":["5d004d0e0b3f65bb40da76d476d659d7888270e8"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"d638301ad1cfcae567b681b893bc8781f0ee48a5":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["5d004d0e0b3f65bb40da76d476d659d7888270e8","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}