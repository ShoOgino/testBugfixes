{"path":"lucene/facet/src/java/org/apache/lucene/facet/taxonomy/directory/DirectoryTaxonomyWriter#initReaderManager().mjava","commits":[{"id":"8b7a1bc6030c258e47d63eff3455a2b1bbf32683","date":1339494023,"type":0,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/taxonomy/directory/DirectoryTaxonomyWriter#initReaderManager().mjava","pathOld":"/dev/null","sourceNew":"  /** Opens a {@link ReaderManager} from the internal {@link IndexWriter}. */\n  private void initReaderManager() throws IOException {\n    if (readerManager == null) {\n      synchronized (this) {\n        // verify that the taxo-writer hasn't been closed on us.\n        ensureOpen();\n        if (readerManager == null) {\n          readerManager = new ReaderManager(indexWriter, false); \n        }\n      }\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b52ea8b7f80d4a0600efc9765dc896387008ebd4","date":1340109038,"type":3,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/taxonomy/directory/DirectoryTaxonomyWriter#initReaderManager().mjava","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/taxonomy/directory/DirectoryTaxonomyWriter#initReaderManager().mjava","sourceNew":"  /** Opens a {@link ReaderManager} from the internal {@link IndexWriter}. */\n  private void initReaderManager() throws IOException {\n    if (readerManager == null) {\n      synchronized (this) {\n        // verify that the taxo-writer hasn't been closed on us.\n        ensureOpen();\n        if (readerManager == null) {\n          readerManager = new ReaderManager(indexWriter, false);\n          shouldRefreshReaderManager = false;\n        }\n      }\n    }\n  }\n\n","sourceOld":"  /** Opens a {@link ReaderManager} from the internal {@link IndexWriter}. */\n  private void initReaderManager() throws IOException {\n    if (readerManager == null) {\n      synchronized (this) {\n        // verify that the taxo-writer hasn't been closed on us.\n        ensureOpen();\n        if (readerManager == null) {\n          readerManager = new ReaderManager(indexWriter, false); \n        }\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3d58d08788c3fd51172ba34474cca42499d6391b","date":1354802133,"type":3,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/taxonomy/directory/DirectoryTaxonomyWriter#initReaderManager().mjava","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/taxonomy/directory/DirectoryTaxonomyWriter#initReaderManager().mjava","sourceNew":"  /** Opens a {@link ReaderManager} from the internal {@link IndexWriter}. */\n  private void initReaderManager() throws IOException {\n    if (!initializedReaderManager) {\n      synchronized (this) {\n        // verify that the taxo-writer hasn't been closed on us.\n        ensureOpen();\n        if (!initializedReaderManager) {\n          readerManager = new ReaderManager(indexWriter, false);\n          shouldRefreshReaderManager = false;\n          initializedReaderManager = true;\n        }\n      }\n    }\n  }\n\n","sourceOld":"  /** Opens a {@link ReaderManager} from the internal {@link IndexWriter}. */\n  private void initReaderManager() throws IOException {\n    if (readerManager == null) {\n      synchronized (this) {\n        // verify that the taxo-writer hasn't been closed on us.\n        ensureOpen();\n        if (readerManager == null) {\n          readerManager = new ReaderManager(indexWriter, false);\n          shouldRefreshReaderManager = false;\n        }\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"407687e67faf6e1f02a211ca078d8e3eed631027","date":1355157407,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/taxonomy/directory/DirectoryTaxonomyWriter#initReaderManager().mjava","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/taxonomy/directory/DirectoryTaxonomyWriter#initReaderManager().mjava","sourceNew":"  /** Opens a {@link ReaderManager} from the internal {@link IndexWriter}. */\n  private void initReaderManager() throws IOException {\n    if (!initializedReaderManager) {\n      synchronized (this) {\n        // verify that the taxo-writer hasn't been closed on us.\n        ensureOpen();\n        if (!initializedReaderManager) {\n          readerManager = new ReaderManager(indexWriter, false);\n          shouldRefreshReaderManager = false;\n          initializedReaderManager = true;\n        }\n      }\n    }\n  }\n\n","sourceOld":"  /** Opens a {@link ReaderManager} from the internal {@link IndexWriter}. */\n  private void initReaderManager() throws IOException {\n    if (readerManager == null) {\n      synchronized (this) {\n        // verify that the taxo-writer hasn't been closed on us.\n        ensureOpen();\n        if (readerManager == null) {\n          readerManager = new ReaderManager(indexWriter, false);\n          shouldRefreshReaderManager = false;\n        }\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0d49a158012a8ff48f328a4558e4bfcffbaed16f","date":1453677440,"type":3,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/taxonomy/directory/DirectoryTaxonomyWriter#initReaderManager().mjava","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/taxonomy/directory/DirectoryTaxonomyWriter#initReaderManager().mjava","sourceNew":"  /** Opens a {@link ReaderManager} from the internal {@link IndexWriter}. */\n  private void initReaderManager() throws IOException {\n    if (!initializedReaderManager) {\n      synchronized (this) {\n        // verify that the taxo-writer hasn't been closed on us.\n        ensureOpen();\n        if (!initializedReaderManager) {\n          readerManager = new ReaderManager(indexWriter, false, false);\n          shouldRefreshReaderManager = false;\n          initializedReaderManager = true;\n        }\n      }\n    }\n  }\n\n","sourceOld":"  /** Opens a {@link ReaderManager} from the internal {@link IndexWriter}. */\n  private void initReaderManager() throws IOException {\n    if (!initializedReaderManager) {\n      synchronized (this) {\n        // verify that the taxo-writer hasn't been closed on us.\n        ensureOpen();\n        if (!initializedReaderManager) {\n          readerManager = new ReaderManager(indexWriter, false);\n          shouldRefreshReaderManager = false;\n          initializedReaderManager = true;\n        }\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"68496c2200e559fb7802f7575427b7a482659afb","date":1455207618,"type":3,"author":"Mike McCandless","isMerge":true,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/taxonomy/directory/DirectoryTaxonomyWriter#initReaderManager().mjava","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/taxonomy/directory/DirectoryTaxonomyWriter#initReaderManager().mjava","sourceNew":"  /** Opens a {@link ReaderManager} from the internal {@link IndexWriter}. */\n  private void initReaderManager() throws IOException {\n    if (!initializedReaderManager) {\n      synchronized (this) {\n        // verify that the taxo-writer hasn't been closed on us.\n        ensureOpen();\n        if (!initializedReaderManager) {\n          readerManager = new ReaderManager(indexWriter, false, false);\n          shouldRefreshReaderManager = false;\n          initializedReaderManager = true;\n        }\n      }\n    }\n  }\n\n","sourceOld":"  /** Opens a {@link ReaderManager} from the internal {@link IndexWriter}. */\n  private void initReaderManager() throws IOException {\n    if (!initializedReaderManager) {\n      synchronized (this) {\n        // verify that the taxo-writer hasn't been closed on us.\n        ensureOpen();\n        if (!initializedReaderManager) {\n          readerManager = new ReaderManager(indexWriter, false);\n          shouldRefreshReaderManager = false;\n          initializedReaderManager = true;\n        }\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"407687e67faf6e1f02a211ca078d8e3eed631027":["b52ea8b7f80d4a0600efc9765dc896387008ebd4","3d58d08788c3fd51172ba34474cca42499d6391b"],"3d58d08788c3fd51172ba34474cca42499d6391b":["b52ea8b7f80d4a0600efc9765dc896387008ebd4"],"b52ea8b7f80d4a0600efc9765dc896387008ebd4":["8b7a1bc6030c258e47d63eff3455a2b1bbf32683"],"8b7a1bc6030c258e47d63eff3455a2b1bbf32683":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"68496c2200e559fb7802f7575427b7a482659afb":["3d58d08788c3fd51172ba34474cca42499d6391b","0d49a158012a8ff48f328a4558e4bfcffbaed16f"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["68496c2200e559fb7802f7575427b7a482659afb"],"0d49a158012a8ff48f328a4558e4bfcffbaed16f":["3d58d08788c3fd51172ba34474cca42499d6391b"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["8b7a1bc6030c258e47d63eff3455a2b1bbf32683"],"407687e67faf6e1f02a211ca078d8e3eed631027":[],"b52ea8b7f80d4a0600efc9765dc896387008ebd4":["407687e67faf6e1f02a211ca078d8e3eed631027","3d58d08788c3fd51172ba34474cca42499d6391b"],"3d58d08788c3fd51172ba34474cca42499d6391b":["407687e67faf6e1f02a211ca078d8e3eed631027","68496c2200e559fb7802f7575427b7a482659afb","0d49a158012a8ff48f328a4558e4bfcffbaed16f"],"8b7a1bc6030c258e47d63eff3455a2b1bbf32683":["b52ea8b7f80d4a0600efc9765dc896387008ebd4"],"68496c2200e559fb7802f7575427b7a482659afb":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"0d49a158012a8ff48f328a4558e4bfcffbaed16f":["68496c2200e559fb7802f7575427b7a482659afb"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["407687e67faf6e1f02a211ca078d8e3eed631027","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}