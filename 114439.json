{"path":"modules/grouping/src/test/org/apache/lucene/search/grouping/GroupFacetCollectorTest#testSimple().mjava","commits":[{"id":"8b89f8e2c44ce7efaf10978b9e5c6b95a31706b2","date":1331803866,"type":1,"author":"Martijn van Groningen","isMerge":false,"pathNew":"modules/grouping/src/test/org/apache/lucene/search/grouping/GroupFacetCollectorTest#testSimple().mjava","pathOld":"modules/grouping/src/test/org/apache/lucene/search/grouping/TermGroupFacetCollectorTest#testSimple().mjava","sourceNew":"  public void testSimple() throws Exception {\n    final String groupField = \"hotel\";\n    FieldType customType = new FieldType();\n    customType.setStored(true);\n\n    Directory dir = newDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(\n        random,\n        dir,\n        newIndexWriterConfig(TEST_VERSION_CURRENT,\n            new MockAnalyzer(random)).setMergePolicy(newLogMergePolicy()));\n    boolean canUseDV = !\"Lucene3x\".equals(w.w.getConfig().getCodec().getName());\n    boolean useDv = canUseDV && random.nextBoolean();\n\n    // 0\n    Document doc = new Document();\n    addField(doc, groupField, \"a\", canUseDV);\n    addField(doc, \"airport\", \"ams\", canUseDV);\n    addField(doc, \"duration\", \"5\", canUseDV);\n    w.addDocument(doc);\n\n    // 1\n    doc = new Document();\n    addField(doc, groupField, \"a\", canUseDV);\n    addField(doc, \"airport\", \"dus\", canUseDV);\n    addField(doc, \"duration\", \"10\", canUseDV);\n    w.addDocument(doc);\n\n    // 2\n    doc = new Document();\n    addField(doc, groupField, \"b\", canUseDV);\n    addField(doc, \"airport\", \"ams\", canUseDV);\n    addField(doc, \"duration\", \"10\", canUseDV);\n    w.addDocument(doc);\n    w.commit(); // To ensure a second segment\n\n    // 3\n    doc = new Document();\n    addField(doc, groupField, \"b\", canUseDV);\n    addField(doc, \"airport\", \"ams\", canUseDV);\n    addField(doc, \"duration\", \"5\", canUseDV);\n    w.addDocument(doc);\n\n    // 4\n    doc = new Document();\n    addField(doc, groupField, \"b\", canUseDV);\n    addField(doc, \"airport\", \"ams\", canUseDV);\n    addField(doc, \"duration\", \"5\", canUseDV);\n    w.addDocument(doc);\n\n    IndexSearcher indexSearcher = new IndexSearcher(w.getReader());\n    AbstractGroupFacetCollector groupedAirportFacetCollector = createRandomCollector(groupField, \"airport\", null, false, useDv);\n    indexSearcher.search(new MatchAllDocsQuery(), groupedAirportFacetCollector);\n    TermGroupFacetCollector.GroupedFacetResult airportResult = groupedAirportFacetCollector.mergeSegmentResults(10, 0, false);\n    assertEquals(3, airportResult.getTotalCount());\n    assertEquals(0, airportResult.getTotalMissingCount());\n\n    List<TermGroupFacetCollector.FacetEntry> entries = airportResult.getFacetEntries(0, 10);\n    assertEquals(2, entries.size());\n    assertEquals(\"ams\", entries.get(0).getValue().utf8ToString());\n    assertEquals(2, entries.get(0).getCount());\n    assertEquals(\"dus\", entries.get(1).getValue().utf8ToString());\n    assertEquals(1, entries.get(1).getCount());\n\n\n    AbstractGroupFacetCollector groupedDurationFacetCollector = createRandomCollector(groupField, \"duration\", null, false, useDv);\n    indexSearcher.search(new MatchAllDocsQuery(), groupedDurationFacetCollector);\n    TermGroupFacetCollector.GroupedFacetResult durationResult = groupedDurationFacetCollector.mergeSegmentResults(10, 0, false);\n    assertEquals(4, durationResult.getTotalCount());\n    assertEquals(0, durationResult.getTotalMissingCount());\n\n    entries = durationResult.getFacetEntries(0, 10);\n    assertEquals(2, entries.size());\n    assertEquals(\"10\", entries.get(0).getValue().utf8ToString());\n    assertEquals(2, entries.get(0).getCount());\n    assertEquals(\"5\", entries.get(1).getValue().utf8ToString());\n    assertEquals(2, entries.get(1).getCount());\n\n    // 5\n    doc = new Document();\n    addField(doc, groupField, \"b\", canUseDV);\n    addField(doc, \"duration\", \"5\", canUseDV);\n    w.addDocument(doc);\n\n    // 6\n    doc = new Document();\n    addField(doc, groupField, \"b\", canUseDV);\n    addField(doc, \"airport\", \"bru\", canUseDV);\n    addField(doc, \"duration\", \"10\", canUseDV);\n    w.addDocument(doc);\n\n    // 7\n    doc = new Document();\n    addField(doc, groupField, \"b\", canUseDV);\n    addField(doc, \"airport\", \"bru\", canUseDV);\n    addField(doc, \"duration\", \"15\", canUseDV);\n    w.addDocument(doc);\n\n    // 8\n    doc = new Document();\n    addField(doc, groupField, \"a\", canUseDV);\n    addField(doc, \"airport\", \"bru\", canUseDV);\n    addField(doc, \"duration\", \"10\", canUseDV);\n    w.addDocument(doc);\n\n    indexSearcher.getIndexReader().close();\n    indexSearcher = new IndexSearcher(w.getReader());\n    groupedAirportFacetCollector = createRandomCollector(groupField, \"airport\", null, true, useDv);\n    indexSearcher.search(new MatchAllDocsQuery(), groupedAirportFacetCollector);\n    airportResult = groupedAirportFacetCollector.mergeSegmentResults(3, 0, true);\n    assertEquals(5, airportResult.getTotalCount());\n    assertEquals(1, airportResult.getTotalMissingCount());\n\n    entries = airportResult.getFacetEntries(1, 2);\n    assertEquals(2, entries.size());\n    assertEquals(\"bru\", entries.get(0).getValue().utf8ToString());\n    assertEquals(2, entries.get(0).getCount());\n    assertEquals(\"dus\", entries.get(1).getValue().utf8ToString());\n    assertEquals(1, entries.get(1).getCount());\n\n    groupedDurationFacetCollector = createRandomCollector(groupField, \"duration\", null, false, useDv);\n    indexSearcher.search(new MatchAllDocsQuery(), groupedDurationFacetCollector);\n    durationResult = groupedDurationFacetCollector.mergeSegmentResults(10, 2, true);\n    assertEquals(5, durationResult.getTotalCount());\n    assertEquals(0, durationResult.getTotalMissingCount());\n\n    entries = durationResult.getFacetEntries(1, 1);\n    assertEquals(1, entries.size());\n    assertEquals(\"5\", entries.get(0).getValue().utf8ToString());\n    assertEquals(2, entries.get(0).getCount());\n\n    // 9\n    doc = new Document();\n    addField(doc, groupField, \"c\", canUseDV);\n    addField(doc, \"airport\", \"bru\", canUseDV);\n    addField(doc, \"duration\", \"15\", canUseDV);\n    w.addDocument(doc);\n\n    // 10\n    doc = new Document();\n    addField(doc, groupField, \"c\", canUseDV);\n    addField(doc, \"airport\", \"dus\", canUseDV);\n    addField(doc, \"duration\", \"10\", canUseDV);\n    w.addDocument(doc);\n\n    indexSearcher.getIndexReader().close();\n    indexSearcher = new IndexSearcher(w.getReader());\n    groupedAirportFacetCollector = createRandomCollector(groupField, \"airport\", null, false, useDv);\n    indexSearcher.search(new MatchAllDocsQuery(), groupedAirportFacetCollector);\n    airportResult = groupedAirportFacetCollector.mergeSegmentResults(10, 0, false);\n    assertEquals(7, airportResult.getTotalCount());\n    assertEquals(1, airportResult.getTotalMissingCount());\n\n    entries = airportResult.getFacetEntries(0, 10);\n    assertEquals(3, entries.size());\n    assertEquals(\"ams\", entries.get(0).getValue().utf8ToString());\n    assertEquals(2, entries.get(0).getCount());\n    assertEquals(\"bru\", entries.get(1).getValue().utf8ToString());\n    assertEquals(3, entries.get(1).getCount());\n    assertEquals(\"dus\", entries.get(2).getValue().utf8ToString());\n    assertEquals(2, entries.get(2).getCount());\n\n    groupedDurationFacetCollector = createRandomCollector(groupField, \"duration\", \"1\", false, useDv);\n    indexSearcher.search(new MatchAllDocsQuery(), groupedDurationFacetCollector);\n    durationResult = groupedDurationFacetCollector.mergeSegmentResults(10, 0, true);\n    assertEquals(5, durationResult.getTotalCount());\n    assertEquals(0, durationResult.getTotalMissingCount());\n\n    entries = durationResult.getFacetEntries(0, 10);\n    assertEquals(2, entries.size());\n    assertEquals(\"10\", entries.get(0).getValue().utf8ToString());\n    assertEquals(3, entries.get(0).getCount());\n    assertEquals(\"15\", entries.get(1).getValue().utf8ToString());\n    assertEquals(2, entries.get(1).getCount());\n\n    w.close();\n    indexSearcher.getIndexReader().close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testSimple() throws Exception {\n    final String groupField = \"hotel\";\n    FieldType customType = new FieldType();\n    customType.setStored(true);\n\n    Directory dir = newDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(\n        random,\n        dir,\n        newIndexWriterConfig(TEST_VERSION_CURRENT,\n            new MockAnalyzer(random)).setMergePolicy(newLogMergePolicy()));\n    boolean canUseIDV = false;// Enable later... !\"Lucene3x\".equals(w.w.getConfig().getCodec().getName());\n\n    // 0\n    Document doc = new Document();\n    addGroupField(doc, groupField, \"a\", canUseIDV);\n    doc.add(new Field(\"airport\", \"ams\", TextField.TYPE_UNSTORED));\n    doc.add(new Field(\"duration\", \"5\", TextField.TYPE_UNSTORED));\n    w.addDocument(doc);\n\n    // 1\n    doc = new Document();\n    addGroupField(doc, groupField, \"a\", canUseIDV);\n    doc.add(new Field(\"airport\", \"dus\", TextField.TYPE_STORED));\n    doc.add(new Field(\"duration\", \"10\", TextField.TYPE_UNSTORED));\n    w.addDocument(doc);\n\n    // 2\n    doc = new Document();\n    addGroupField(doc, groupField, \"b\", canUseIDV);\n    doc.add(new Field(\"airport\", \"ams\", TextField.TYPE_UNSTORED));\n    doc.add(new Field(\"duration\", \"10\", TextField.TYPE_UNSTORED));\n    w.addDocument(doc);\n    w.commit(); // To ensure a second segment\n\n    // 3\n    doc = new Document();\n    addGroupField(doc, groupField, \"b\", canUseIDV);\n    doc.add(new Field(\"airport\", \"ams\", TextField.TYPE_UNSTORED));\n    doc.add(new Field(\"duration\", \"5\", TextField.TYPE_UNSTORED));\n    w.addDocument(doc);\n\n    // 4\n    doc = new Document();\n    addGroupField(doc, groupField, \"b\", canUseIDV);\n    doc.add(new Field(\"airport\", \"ams\", TextField.TYPE_UNSTORED));\n    doc.add(new Field(\"duration\", \"5\", TextField.TYPE_UNSTORED));\n    w.addDocument(doc);\n\n    IndexSearcher indexSearcher = new IndexSearcher(w.getReader());\n    TermGroupFacetCollector groupedAirportFacetCollector =\n        TermGroupFacetCollector.createTermGroupFacetCollector(groupField, \"airport\", false, null, 128);\n    indexSearcher.search(new MatchAllDocsQuery(), groupedAirportFacetCollector);\n    TermGroupFacetCollector.GroupedFacetResult airportResult = groupedAirportFacetCollector.mergeSegmentResults(10, 0, false);\n    assertEquals(3, airportResult.getTotalCount());\n    assertEquals(0, airportResult.getTotalMissingCount());\n\n    List<TermGroupFacetCollector.FacetEntry> entries = airportResult.getFacetEntries(0, 10);\n    assertEquals(2, entries.size());\n    assertEquals(\"ams\", entries.get(0).getValue().utf8ToString());\n    assertEquals(2, entries.get(0).getCount());\n    assertEquals(\"dus\", entries.get(1).getValue().utf8ToString());\n    assertEquals(1, entries.get(1).getCount());\n\n\n    TermGroupFacetCollector groupedDurationFacetCollector =\n        TermGroupFacetCollector.createTermGroupFacetCollector(groupField, \"duration\", false, null, 128);\n    indexSearcher.search(new MatchAllDocsQuery(), groupedDurationFacetCollector);\n    TermGroupFacetCollector.GroupedFacetResult durationResult = groupedDurationFacetCollector.mergeSegmentResults(10, 0, false);\n    assertEquals(4, durationResult.getTotalCount());\n    assertEquals(0, durationResult.getTotalMissingCount());\n\n    entries = durationResult.getFacetEntries(0, 10);\n    assertEquals(2, entries.size());\n    assertEquals(\"10\", entries.get(0).getValue().utf8ToString());\n    assertEquals(2, entries.get(0).getCount());\n    assertEquals(\"5\", entries.get(1).getValue().utf8ToString());\n    assertEquals(2, entries.get(1).getCount());\n\n    // 5\n    doc = new Document();\n    addGroupField(doc, groupField, \"b\", canUseIDV);\n    doc.add(new Field(\"duration\", \"5\", TextField.TYPE_UNSTORED));\n    w.addDocument(doc);\n\n    // 6\n    doc = new Document();\n    addGroupField(doc, groupField, \"b\", canUseIDV);\n    doc.add(new Field(\"airport\", \"bru\", TextField.TYPE_UNSTORED));\n    doc.add(new Field(\"duration\", \"10\", TextField.TYPE_UNSTORED));\n    w.addDocument(doc);\n\n    // 7\n    doc = new Document();\n    addGroupField(doc, groupField, \"b\", canUseIDV);\n    doc.add(new Field(\"airport\", \"bru\", TextField.TYPE_UNSTORED));\n    doc.add(new Field(\"duration\", \"15\", TextField.TYPE_UNSTORED));\n    w.addDocument(doc);\n\n    // 8\n    doc = new Document();\n    addGroupField(doc, groupField, \"a\", canUseIDV);\n    doc.add(new Field(\"airport\", \"bru\", TextField.TYPE_UNSTORED));\n    doc.add(new Field(\"duration\", \"10\", TextField.TYPE_UNSTORED));\n    w.addDocument(doc);\n\n    indexSearcher.getIndexReader().close();\n    indexSearcher = new IndexSearcher(w.getReader());\n    groupedAirportFacetCollector = TermGroupFacetCollector.createTermGroupFacetCollector(groupField, \"airport\", true, null, 128);\n    indexSearcher.search(new MatchAllDocsQuery(), groupedAirportFacetCollector);\n    airportResult = groupedAirportFacetCollector.mergeSegmentResults(3, 0, true);\n    assertEquals(5, airportResult.getTotalCount());\n    assertEquals(1, airportResult.getTotalMissingCount());\n\n    entries = airportResult.getFacetEntries(1, 2);\n    assertEquals(2, entries.size());\n    assertEquals(\"bru\", entries.get(0).getValue().utf8ToString());\n    assertEquals(2, entries.get(0).getCount());\n    assertEquals(\"dus\", entries.get(1).getValue().utf8ToString());\n    assertEquals(1, entries.get(1).getCount());\n\n    groupedDurationFacetCollector = TermGroupFacetCollector.createTermGroupFacetCollector(groupField, \"duration\", false, null, 128);\n    indexSearcher.search(new MatchAllDocsQuery(), groupedDurationFacetCollector);\n    durationResult = groupedDurationFacetCollector.mergeSegmentResults(10, 2, true);\n    assertEquals(5, durationResult.getTotalCount());\n    assertEquals(0, durationResult.getTotalMissingCount());\n\n    entries = durationResult.getFacetEntries(1, 1);\n    assertEquals(1, entries.size());\n    assertEquals(\"5\", entries.get(0).getValue().utf8ToString());\n    assertEquals(2, entries.get(0).getCount());\n\n    // 9\n    doc = new Document();\n    addGroupField(doc, groupField, \"c\", canUseIDV);\n    doc.add(new Field(\"airport\", \"bru\", TextField.TYPE_UNSTORED));\n    doc.add(new Field(\"duration\", \"15\", TextField.TYPE_UNSTORED));\n    w.addDocument(doc);\n\n    // 10\n    doc = new Document();\n    addGroupField(doc, groupField, \"c\", canUseIDV);\n    doc.add(new Field(\"airport\", \"dus\", TextField.TYPE_UNSTORED));\n    doc.add(new Field(\"duration\", \"10\", TextField.TYPE_UNSTORED));\n    w.addDocument(doc);\n\n    indexSearcher.getIndexReader().close();\n    indexSearcher = new IndexSearcher(w.getReader());\n    groupedAirportFacetCollector = TermGroupFacetCollector.createTermGroupFacetCollector(groupField, \"airport\", false, null, 128);\n    indexSearcher.search(new MatchAllDocsQuery(), groupedAirportFacetCollector);\n    airportResult = groupedAirportFacetCollector.mergeSegmentResults(10, 0, false);\n    assertEquals(7, airportResult.getTotalCount());\n    assertEquals(1, airportResult.getTotalMissingCount());\n\n    entries = airportResult.getFacetEntries(0, 10);\n    assertEquals(3, entries.size());\n    assertEquals(\"ams\", entries.get(0).getValue().utf8ToString());\n    assertEquals(2, entries.get(0).getCount());\n    assertEquals(\"bru\", entries.get(1).getValue().utf8ToString());\n    assertEquals(3, entries.get(1).getCount());\n    assertEquals(\"dus\", entries.get(2).getValue().utf8ToString());\n    assertEquals(2, entries.get(2).getCount());\n\n    groupedDurationFacetCollector = TermGroupFacetCollector.createTermGroupFacetCollector(groupField, \"duration\", false, new BytesRef(\"1\"), 128);\n    indexSearcher.search(new MatchAllDocsQuery(), groupedDurationFacetCollector);\n    durationResult = groupedDurationFacetCollector.mergeSegmentResults(10, 0, true);\n    assertEquals(5, durationResult.getTotalCount());\n    assertEquals(0, durationResult.getTotalMissingCount());\n\n    entries = durationResult.getFacetEntries(0, 10);\n    assertEquals(2, entries.size());\n    assertEquals(\"10\", entries.get(0).getValue().utf8ToString());\n    assertEquals(3, entries.get(0).getCount());\n    assertEquals(\"15\", entries.get(1).getValue().utf8ToString());\n    assertEquals(2, entries.get(1).getCount());\n\n    w.close();\n    indexSearcher.getIndexReader().close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"629c38c4ae4e303d0617e05fbfe508140b32f0a3","date":1334500904,"type":3,"author":"Dawid Weiss","isMerge":false,"pathNew":"modules/grouping/src/test/org/apache/lucene/search/grouping/GroupFacetCollectorTest#testSimple().mjava","pathOld":"modules/grouping/src/test/org/apache/lucene/search/grouping/GroupFacetCollectorTest#testSimple().mjava","sourceNew":"  public void testSimple() throws Exception {\n    final String groupField = \"hotel\";\n    FieldType customType = new FieldType();\n    customType.setStored(true);\n\n    Directory dir = newDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(\n        random(),\n        dir,\n        newIndexWriterConfig(TEST_VERSION_CURRENT,\n            new MockAnalyzer(random())).setMergePolicy(newLogMergePolicy()));\n    boolean canUseDV = !\"Lucene3x\".equals(w.w.getConfig().getCodec().getName());\n    boolean useDv = canUseDV && random().nextBoolean();\n\n    // 0\n    Document doc = new Document();\n    addField(doc, groupField, \"a\", canUseDV);\n    addField(doc, \"airport\", \"ams\", canUseDV);\n    addField(doc, \"duration\", \"5\", canUseDV);\n    w.addDocument(doc);\n\n    // 1\n    doc = new Document();\n    addField(doc, groupField, \"a\", canUseDV);\n    addField(doc, \"airport\", \"dus\", canUseDV);\n    addField(doc, \"duration\", \"10\", canUseDV);\n    w.addDocument(doc);\n\n    // 2\n    doc = new Document();\n    addField(doc, groupField, \"b\", canUseDV);\n    addField(doc, \"airport\", \"ams\", canUseDV);\n    addField(doc, \"duration\", \"10\", canUseDV);\n    w.addDocument(doc);\n    w.commit(); // To ensure a second segment\n\n    // 3\n    doc = new Document();\n    addField(doc, groupField, \"b\", canUseDV);\n    addField(doc, \"airport\", \"ams\", canUseDV);\n    addField(doc, \"duration\", \"5\", canUseDV);\n    w.addDocument(doc);\n\n    // 4\n    doc = new Document();\n    addField(doc, groupField, \"b\", canUseDV);\n    addField(doc, \"airport\", \"ams\", canUseDV);\n    addField(doc, \"duration\", \"5\", canUseDV);\n    w.addDocument(doc);\n\n    IndexSearcher indexSearcher = new IndexSearcher(w.getReader());\n    AbstractGroupFacetCollector groupedAirportFacetCollector = createRandomCollector(groupField, \"airport\", null, false, useDv);\n    indexSearcher.search(new MatchAllDocsQuery(), groupedAirportFacetCollector);\n    TermGroupFacetCollector.GroupedFacetResult airportResult = groupedAirportFacetCollector.mergeSegmentResults(10, 0, false);\n    assertEquals(3, airportResult.getTotalCount());\n    assertEquals(0, airportResult.getTotalMissingCount());\n\n    List<TermGroupFacetCollector.FacetEntry> entries = airportResult.getFacetEntries(0, 10);\n    assertEquals(2, entries.size());\n    assertEquals(\"ams\", entries.get(0).getValue().utf8ToString());\n    assertEquals(2, entries.get(0).getCount());\n    assertEquals(\"dus\", entries.get(1).getValue().utf8ToString());\n    assertEquals(1, entries.get(1).getCount());\n\n\n    AbstractGroupFacetCollector groupedDurationFacetCollector = createRandomCollector(groupField, \"duration\", null, false, useDv);\n    indexSearcher.search(new MatchAllDocsQuery(), groupedDurationFacetCollector);\n    TermGroupFacetCollector.GroupedFacetResult durationResult = groupedDurationFacetCollector.mergeSegmentResults(10, 0, false);\n    assertEquals(4, durationResult.getTotalCount());\n    assertEquals(0, durationResult.getTotalMissingCount());\n\n    entries = durationResult.getFacetEntries(0, 10);\n    assertEquals(2, entries.size());\n    assertEquals(\"10\", entries.get(0).getValue().utf8ToString());\n    assertEquals(2, entries.get(0).getCount());\n    assertEquals(\"5\", entries.get(1).getValue().utf8ToString());\n    assertEquals(2, entries.get(1).getCount());\n\n    // 5\n    doc = new Document();\n    addField(doc, groupField, \"b\", canUseDV);\n    addField(doc, \"duration\", \"5\", canUseDV);\n    w.addDocument(doc);\n\n    // 6\n    doc = new Document();\n    addField(doc, groupField, \"b\", canUseDV);\n    addField(doc, \"airport\", \"bru\", canUseDV);\n    addField(doc, \"duration\", \"10\", canUseDV);\n    w.addDocument(doc);\n\n    // 7\n    doc = new Document();\n    addField(doc, groupField, \"b\", canUseDV);\n    addField(doc, \"airport\", \"bru\", canUseDV);\n    addField(doc, \"duration\", \"15\", canUseDV);\n    w.addDocument(doc);\n\n    // 8\n    doc = new Document();\n    addField(doc, groupField, \"a\", canUseDV);\n    addField(doc, \"airport\", \"bru\", canUseDV);\n    addField(doc, \"duration\", \"10\", canUseDV);\n    w.addDocument(doc);\n\n    indexSearcher.getIndexReader().close();\n    indexSearcher = new IndexSearcher(w.getReader());\n    groupedAirportFacetCollector = createRandomCollector(groupField, \"airport\", null, true, useDv);\n    indexSearcher.search(new MatchAllDocsQuery(), groupedAirportFacetCollector);\n    airportResult = groupedAirportFacetCollector.mergeSegmentResults(3, 0, true);\n    assertEquals(5, airportResult.getTotalCount());\n    assertEquals(1, airportResult.getTotalMissingCount());\n\n    entries = airportResult.getFacetEntries(1, 2);\n    assertEquals(2, entries.size());\n    assertEquals(\"bru\", entries.get(0).getValue().utf8ToString());\n    assertEquals(2, entries.get(0).getCount());\n    assertEquals(\"dus\", entries.get(1).getValue().utf8ToString());\n    assertEquals(1, entries.get(1).getCount());\n\n    groupedDurationFacetCollector = createRandomCollector(groupField, \"duration\", null, false, useDv);\n    indexSearcher.search(new MatchAllDocsQuery(), groupedDurationFacetCollector);\n    durationResult = groupedDurationFacetCollector.mergeSegmentResults(10, 2, true);\n    assertEquals(5, durationResult.getTotalCount());\n    assertEquals(0, durationResult.getTotalMissingCount());\n\n    entries = durationResult.getFacetEntries(1, 1);\n    assertEquals(1, entries.size());\n    assertEquals(\"5\", entries.get(0).getValue().utf8ToString());\n    assertEquals(2, entries.get(0).getCount());\n\n    // 9\n    doc = new Document();\n    addField(doc, groupField, \"c\", canUseDV);\n    addField(doc, \"airport\", \"bru\", canUseDV);\n    addField(doc, \"duration\", \"15\", canUseDV);\n    w.addDocument(doc);\n\n    // 10\n    doc = new Document();\n    addField(doc, groupField, \"c\", canUseDV);\n    addField(doc, \"airport\", \"dus\", canUseDV);\n    addField(doc, \"duration\", \"10\", canUseDV);\n    w.addDocument(doc);\n\n    indexSearcher.getIndexReader().close();\n    indexSearcher = new IndexSearcher(w.getReader());\n    groupedAirportFacetCollector = createRandomCollector(groupField, \"airport\", null, false, useDv);\n    indexSearcher.search(new MatchAllDocsQuery(), groupedAirportFacetCollector);\n    airportResult = groupedAirportFacetCollector.mergeSegmentResults(10, 0, false);\n    assertEquals(7, airportResult.getTotalCount());\n    assertEquals(1, airportResult.getTotalMissingCount());\n\n    entries = airportResult.getFacetEntries(0, 10);\n    assertEquals(3, entries.size());\n    assertEquals(\"ams\", entries.get(0).getValue().utf8ToString());\n    assertEquals(2, entries.get(0).getCount());\n    assertEquals(\"bru\", entries.get(1).getValue().utf8ToString());\n    assertEquals(3, entries.get(1).getCount());\n    assertEquals(\"dus\", entries.get(2).getValue().utf8ToString());\n    assertEquals(2, entries.get(2).getCount());\n\n    groupedDurationFacetCollector = createRandomCollector(groupField, \"duration\", \"1\", false, useDv);\n    indexSearcher.search(new MatchAllDocsQuery(), groupedDurationFacetCollector);\n    durationResult = groupedDurationFacetCollector.mergeSegmentResults(10, 0, true);\n    assertEquals(5, durationResult.getTotalCount());\n    assertEquals(0, durationResult.getTotalMissingCount());\n\n    entries = durationResult.getFacetEntries(0, 10);\n    assertEquals(2, entries.size());\n    assertEquals(\"10\", entries.get(0).getValue().utf8ToString());\n    assertEquals(3, entries.get(0).getCount());\n    assertEquals(\"15\", entries.get(1).getValue().utf8ToString());\n    assertEquals(2, entries.get(1).getCount());\n\n    w.close();\n    indexSearcher.getIndexReader().close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testSimple() throws Exception {\n    final String groupField = \"hotel\";\n    FieldType customType = new FieldType();\n    customType.setStored(true);\n\n    Directory dir = newDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(\n        random,\n        dir,\n        newIndexWriterConfig(TEST_VERSION_CURRENT,\n            new MockAnalyzer(random)).setMergePolicy(newLogMergePolicy()));\n    boolean canUseDV = !\"Lucene3x\".equals(w.w.getConfig().getCodec().getName());\n    boolean useDv = canUseDV && random.nextBoolean();\n\n    // 0\n    Document doc = new Document();\n    addField(doc, groupField, \"a\", canUseDV);\n    addField(doc, \"airport\", \"ams\", canUseDV);\n    addField(doc, \"duration\", \"5\", canUseDV);\n    w.addDocument(doc);\n\n    // 1\n    doc = new Document();\n    addField(doc, groupField, \"a\", canUseDV);\n    addField(doc, \"airport\", \"dus\", canUseDV);\n    addField(doc, \"duration\", \"10\", canUseDV);\n    w.addDocument(doc);\n\n    // 2\n    doc = new Document();\n    addField(doc, groupField, \"b\", canUseDV);\n    addField(doc, \"airport\", \"ams\", canUseDV);\n    addField(doc, \"duration\", \"10\", canUseDV);\n    w.addDocument(doc);\n    w.commit(); // To ensure a second segment\n\n    // 3\n    doc = new Document();\n    addField(doc, groupField, \"b\", canUseDV);\n    addField(doc, \"airport\", \"ams\", canUseDV);\n    addField(doc, \"duration\", \"5\", canUseDV);\n    w.addDocument(doc);\n\n    // 4\n    doc = new Document();\n    addField(doc, groupField, \"b\", canUseDV);\n    addField(doc, \"airport\", \"ams\", canUseDV);\n    addField(doc, \"duration\", \"5\", canUseDV);\n    w.addDocument(doc);\n\n    IndexSearcher indexSearcher = new IndexSearcher(w.getReader());\n    AbstractGroupFacetCollector groupedAirportFacetCollector = createRandomCollector(groupField, \"airport\", null, false, useDv);\n    indexSearcher.search(new MatchAllDocsQuery(), groupedAirportFacetCollector);\n    TermGroupFacetCollector.GroupedFacetResult airportResult = groupedAirportFacetCollector.mergeSegmentResults(10, 0, false);\n    assertEquals(3, airportResult.getTotalCount());\n    assertEquals(0, airportResult.getTotalMissingCount());\n\n    List<TermGroupFacetCollector.FacetEntry> entries = airportResult.getFacetEntries(0, 10);\n    assertEquals(2, entries.size());\n    assertEquals(\"ams\", entries.get(0).getValue().utf8ToString());\n    assertEquals(2, entries.get(0).getCount());\n    assertEquals(\"dus\", entries.get(1).getValue().utf8ToString());\n    assertEquals(1, entries.get(1).getCount());\n\n\n    AbstractGroupFacetCollector groupedDurationFacetCollector = createRandomCollector(groupField, \"duration\", null, false, useDv);\n    indexSearcher.search(new MatchAllDocsQuery(), groupedDurationFacetCollector);\n    TermGroupFacetCollector.GroupedFacetResult durationResult = groupedDurationFacetCollector.mergeSegmentResults(10, 0, false);\n    assertEquals(4, durationResult.getTotalCount());\n    assertEquals(0, durationResult.getTotalMissingCount());\n\n    entries = durationResult.getFacetEntries(0, 10);\n    assertEquals(2, entries.size());\n    assertEquals(\"10\", entries.get(0).getValue().utf8ToString());\n    assertEquals(2, entries.get(0).getCount());\n    assertEquals(\"5\", entries.get(1).getValue().utf8ToString());\n    assertEquals(2, entries.get(1).getCount());\n\n    // 5\n    doc = new Document();\n    addField(doc, groupField, \"b\", canUseDV);\n    addField(doc, \"duration\", \"5\", canUseDV);\n    w.addDocument(doc);\n\n    // 6\n    doc = new Document();\n    addField(doc, groupField, \"b\", canUseDV);\n    addField(doc, \"airport\", \"bru\", canUseDV);\n    addField(doc, \"duration\", \"10\", canUseDV);\n    w.addDocument(doc);\n\n    // 7\n    doc = new Document();\n    addField(doc, groupField, \"b\", canUseDV);\n    addField(doc, \"airport\", \"bru\", canUseDV);\n    addField(doc, \"duration\", \"15\", canUseDV);\n    w.addDocument(doc);\n\n    // 8\n    doc = new Document();\n    addField(doc, groupField, \"a\", canUseDV);\n    addField(doc, \"airport\", \"bru\", canUseDV);\n    addField(doc, \"duration\", \"10\", canUseDV);\n    w.addDocument(doc);\n\n    indexSearcher.getIndexReader().close();\n    indexSearcher = new IndexSearcher(w.getReader());\n    groupedAirportFacetCollector = createRandomCollector(groupField, \"airport\", null, true, useDv);\n    indexSearcher.search(new MatchAllDocsQuery(), groupedAirportFacetCollector);\n    airportResult = groupedAirportFacetCollector.mergeSegmentResults(3, 0, true);\n    assertEquals(5, airportResult.getTotalCount());\n    assertEquals(1, airportResult.getTotalMissingCount());\n\n    entries = airportResult.getFacetEntries(1, 2);\n    assertEquals(2, entries.size());\n    assertEquals(\"bru\", entries.get(0).getValue().utf8ToString());\n    assertEquals(2, entries.get(0).getCount());\n    assertEquals(\"dus\", entries.get(1).getValue().utf8ToString());\n    assertEquals(1, entries.get(1).getCount());\n\n    groupedDurationFacetCollector = createRandomCollector(groupField, \"duration\", null, false, useDv);\n    indexSearcher.search(new MatchAllDocsQuery(), groupedDurationFacetCollector);\n    durationResult = groupedDurationFacetCollector.mergeSegmentResults(10, 2, true);\n    assertEquals(5, durationResult.getTotalCount());\n    assertEquals(0, durationResult.getTotalMissingCount());\n\n    entries = durationResult.getFacetEntries(1, 1);\n    assertEquals(1, entries.size());\n    assertEquals(\"5\", entries.get(0).getValue().utf8ToString());\n    assertEquals(2, entries.get(0).getCount());\n\n    // 9\n    doc = new Document();\n    addField(doc, groupField, \"c\", canUseDV);\n    addField(doc, \"airport\", \"bru\", canUseDV);\n    addField(doc, \"duration\", \"15\", canUseDV);\n    w.addDocument(doc);\n\n    // 10\n    doc = new Document();\n    addField(doc, groupField, \"c\", canUseDV);\n    addField(doc, \"airport\", \"dus\", canUseDV);\n    addField(doc, \"duration\", \"10\", canUseDV);\n    w.addDocument(doc);\n\n    indexSearcher.getIndexReader().close();\n    indexSearcher = new IndexSearcher(w.getReader());\n    groupedAirportFacetCollector = createRandomCollector(groupField, \"airport\", null, false, useDv);\n    indexSearcher.search(new MatchAllDocsQuery(), groupedAirportFacetCollector);\n    airportResult = groupedAirportFacetCollector.mergeSegmentResults(10, 0, false);\n    assertEquals(7, airportResult.getTotalCount());\n    assertEquals(1, airportResult.getTotalMissingCount());\n\n    entries = airportResult.getFacetEntries(0, 10);\n    assertEquals(3, entries.size());\n    assertEquals(\"ams\", entries.get(0).getValue().utf8ToString());\n    assertEquals(2, entries.get(0).getCount());\n    assertEquals(\"bru\", entries.get(1).getValue().utf8ToString());\n    assertEquals(3, entries.get(1).getCount());\n    assertEquals(\"dus\", entries.get(2).getValue().utf8ToString());\n    assertEquals(2, entries.get(2).getCount());\n\n    groupedDurationFacetCollector = createRandomCollector(groupField, \"duration\", \"1\", false, useDv);\n    indexSearcher.search(new MatchAllDocsQuery(), groupedDurationFacetCollector);\n    durationResult = groupedDurationFacetCollector.mergeSegmentResults(10, 0, true);\n    assertEquals(5, durationResult.getTotalCount());\n    assertEquals(0, durationResult.getTotalMissingCount());\n\n    entries = durationResult.getFacetEntries(0, 10);\n    assertEquals(2, entries.size());\n    assertEquals(\"10\", entries.get(0).getValue().utf8ToString());\n    assertEquals(3, entries.get(0).getCount());\n    assertEquals(\"15\", entries.get(1).getValue().utf8ToString());\n    assertEquals(2, entries.get(1).getCount());\n\n    w.close();\n    indexSearcher.getIndexReader().close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/grouping/src/test/org/apache/lucene/search/grouping/GroupFacetCollectorTest#testSimple().mjava","pathOld":"modules/grouping/src/test/org/apache/lucene/search/grouping/GroupFacetCollectorTest#testSimple().mjava","sourceNew":"  public void testSimple() throws Exception {\n    final String groupField = \"hotel\";\n    FieldType customType = new FieldType();\n    customType.setStored(true);\n\n    Directory dir = newDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(\n        random(),\n        dir,\n        newIndexWriterConfig(TEST_VERSION_CURRENT,\n            new MockAnalyzer(random())).setMergePolicy(newLogMergePolicy()));\n    boolean canUseDV = !\"Lucene3x\".equals(w.w.getConfig().getCodec().getName());\n    boolean useDv = canUseDV && random().nextBoolean();\n\n    // 0\n    Document doc = new Document();\n    addField(doc, groupField, \"a\", canUseDV);\n    addField(doc, \"airport\", \"ams\", canUseDV);\n    addField(doc, \"duration\", \"5\", canUseDV);\n    w.addDocument(doc);\n\n    // 1\n    doc = new Document();\n    addField(doc, groupField, \"a\", canUseDV);\n    addField(doc, \"airport\", \"dus\", canUseDV);\n    addField(doc, \"duration\", \"10\", canUseDV);\n    w.addDocument(doc);\n\n    // 2\n    doc = new Document();\n    addField(doc, groupField, \"b\", canUseDV);\n    addField(doc, \"airport\", \"ams\", canUseDV);\n    addField(doc, \"duration\", \"10\", canUseDV);\n    w.addDocument(doc);\n    w.commit(); // To ensure a second segment\n\n    // 3\n    doc = new Document();\n    addField(doc, groupField, \"b\", canUseDV);\n    addField(doc, \"airport\", \"ams\", canUseDV);\n    addField(doc, \"duration\", \"5\", canUseDV);\n    w.addDocument(doc);\n\n    // 4\n    doc = new Document();\n    addField(doc, groupField, \"b\", canUseDV);\n    addField(doc, \"airport\", \"ams\", canUseDV);\n    addField(doc, \"duration\", \"5\", canUseDV);\n    w.addDocument(doc);\n\n    IndexSearcher indexSearcher = new IndexSearcher(w.getReader());\n    AbstractGroupFacetCollector groupedAirportFacetCollector = createRandomCollector(groupField, \"airport\", null, false, useDv);\n    indexSearcher.search(new MatchAllDocsQuery(), groupedAirportFacetCollector);\n    TermGroupFacetCollector.GroupedFacetResult airportResult = groupedAirportFacetCollector.mergeSegmentResults(10, 0, false);\n    assertEquals(3, airportResult.getTotalCount());\n    assertEquals(0, airportResult.getTotalMissingCount());\n\n    List<TermGroupFacetCollector.FacetEntry> entries = airportResult.getFacetEntries(0, 10);\n    assertEquals(2, entries.size());\n    assertEquals(\"ams\", entries.get(0).getValue().utf8ToString());\n    assertEquals(2, entries.get(0).getCount());\n    assertEquals(\"dus\", entries.get(1).getValue().utf8ToString());\n    assertEquals(1, entries.get(1).getCount());\n\n\n    AbstractGroupFacetCollector groupedDurationFacetCollector = createRandomCollector(groupField, \"duration\", null, false, useDv);\n    indexSearcher.search(new MatchAllDocsQuery(), groupedDurationFacetCollector);\n    TermGroupFacetCollector.GroupedFacetResult durationResult = groupedDurationFacetCollector.mergeSegmentResults(10, 0, false);\n    assertEquals(4, durationResult.getTotalCount());\n    assertEquals(0, durationResult.getTotalMissingCount());\n\n    entries = durationResult.getFacetEntries(0, 10);\n    assertEquals(2, entries.size());\n    assertEquals(\"10\", entries.get(0).getValue().utf8ToString());\n    assertEquals(2, entries.get(0).getCount());\n    assertEquals(\"5\", entries.get(1).getValue().utf8ToString());\n    assertEquals(2, entries.get(1).getCount());\n\n    // 5\n    doc = new Document();\n    addField(doc, groupField, \"b\", canUseDV);\n    addField(doc, \"duration\", \"5\", canUseDV);\n    w.addDocument(doc);\n\n    // 6\n    doc = new Document();\n    addField(doc, groupField, \"b\", canUseDV);\n    addField(doc, \"airport\", \"bru\", canUseDV);\n    addField(doc, \"duration\", \"10\", canUseDV);\n    w.addDocument(doc);\n\n    // 7\n    doc = new Document();\n    addField(doc, groupField, \"b\", canUseDV);\n    addField(doc, \"airport\", \"bru\", canUseDV);\n    addField(doc, \"duration\", \"15\", canUseDV);\n    w.addDocument(doc);\n\n    // 8\n    doc = new Document();\n    addField(doc, groupField, \"a\", canUseDV);\n    addField(doc, \"airport\", \"bru\", canUseDV);\n    addField(doc, \"duration\", \"10\", canUseDV);\n    w.addDocument(doc);\n\n    indexSearcher.getIndexReader().close();\n    indexSearcher = new IndexSearcher(w.getReader());\n    groupedAirportFacetCollector = createRandomCollector(groupField, \"airport\", null, true, useDv);\n    indexSearcher.search(new MatchAllDocsQuery(), groupedAirportFacetCollector);\n    airportResult = groupedAirportFacetCollector.mergeSegmentResults(3, 0, true);\n    assertEquals(5, airportResult.getTotalCount());\n    assertEquals(1, airportResult.getTotalMissingCount());\n\n    entries = airportResult.getFacetEntries(1, 2);\n    assertEquals(2, entries.size());\n    assertEquals(\"bru\", entries.get(0).getValue().utf8ToString());\n    assertEquals(2, entries.get(0).getCount());\n    assertEquals(\"dus\", entries.get(1).getValue().utf8ToString());\n    assertEquals(1, entries.get(1).getCount());\n\n    groupedDurationFacetCollector = createRandomCollector(groupField, \"duration\", null, false, useDv);\n    indexSearcher.search(new MatchAllDocsQuery(), groupedDurationFacetCollector);\n    durationResult = groupedDurationFacetCollector.mergeSegmentResults(10, 2, true);\n    assertEquals(5, durationResult.getTotalCount());\n    assertEquals(0, durationResult.getTotalMissingCount());\n\n    entries = durationResult.getFacetEntries(1, 1);\n    assertEquals(1, entries.size());\n    assertEquals(\"5\", entries.get(0).getValue().utf8ToString());\n    assertEquals(2, entries.get(0).getCount());\n\n    // 9\n    doc = new Document();\n    addField(doc, groupField, \"c\", canUseDV);\n    addField(doc, \"airport\", \"bru\", canUseDV);\n    addField(doc, \"duration\", \"15\", canUseDV);\n    w.addDocument(doc);\n\n    // 10\n    doc = new Document();\n    addField(doc, groupField, \"c\", canUseDV);\n    addField(doc, \"airport\", \"dus\", canUseDV);\n    addField(doc, \"duration\", \"10\", canUseDV);\n    w.addDocument(doc);\n\n    indexSearcher.getIndexReader().close();\n    indexSearcher = new IndexSearcher(w.getReader());\n    groupedAirportFacetCollector = createRandomCollector(groupField, \"airport\", null, false, useDv);\n    indexSearcher.search(new MatchAllDocsQuery(), groupedAirportFacetCollector);\n    airportResult = groupedAirportFacetCollector.mergeSegmentResults(10, 0, false);\n    assertEquals(7, airportResult.getTotalCount());\n    assertEquals(1, airportResult.getTotalMissingCount());\n\n    entries = airportResult.getFacetEntries(0, 10);\n    assertEquals(3, entries.size());\n    assertEquals(\"ams\", entries.get(0).getValue().utf8ToString());\n    assertEquals(2, entries.get(0).getCount());\n    assertEquals(\"bru\", entries.get(1).getValue().utf8ToString());\n    assertEquals(3, entries.get(1).getCount());\n    assertEquals(\"dus\", entries.get(2).getValue().utf8ToString());\n    assertEquals(2, entries.get(2).getCount());\n\n    groupedDurationFacetCollector = createRandomCollector(groupField, \"duration\", \"1\", false, useDv);\n    indexSearcher.search(new MatchAllDocsQuery(), groupedDurationFacetCollector);\n    durationResult = groupedDurationFacetCollector.mergeSegmentResults(10, 0, true);\n    assertEquals(5, durationResult.getTotalCount());\n    assertEquals(0, durationResult.getTotalMissingCount());\n\n    entries = durationResult.getFacetEntries(0, 10);\n    assertEquals(2, entries.size());\n    assertEquals(\"10\", entries.get(0).getValue().utf8ToString());\n    assertEquals(3, entries.get(0).getCount());\n    assertEquals(\"15\", entries.get(1).getValue().utf8ToString());\n    assertEquals(2, entries.get(1).getCount());\n\n    w.close();\n    indexSearcher.getIndexReader().close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testSimple() throws Exception {\n    final String groupField = \"hotel\";\n    FieldType customType = new FieldType();\n    customType.setStored(true);\n\n    Directory dir = newDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(\n        random(),\n        dir,\n        newIndexWriterConfig(TEST_VERSION_CURRENT,\n            new MockAnalyzer(random())).setMergePolicy(newLogMergePolicy()));\n    boolean canUseDV = !\"Lucene3x\".equals(w.w.getConfig().getCodec().getName());\n    boolean useDv = canUseDV && random().nextBoolean();\n\n    // 0\n    Document doc = new Document();\n    addField(doc, groupField, \"a\", canUseDV);\n    addField(doc, \"airport\", \"ams\", canUseDV);\n    addField(doc, \"duration\", \"5\", canUseDV);\n    w.addDocument(doc);\n\n    // 1\n    doc = new Document();\n    addField(doc, groupField, \"a\", canUseDV);\n    addField(doc, \"airport\", \"dus\", canUseDV);\n    addField(doc, \"duration\", \"10\", canUseDV);\n    w.addDocument(doc);\n\n    // 2\n    doc = new Document();\n    addField(doc, groupField, \"b\", canUseDV);\n    addField(doc, \"airport\", \"ams\", canUseDV);\n    addField(doc, \"duration\", \"10\", canUseDV);\n    w.addDocument(doc);\n    w.commit(); // To ensure a second segment\n\n    // 3\n    doc = new Document();\n    addField(doc, groupField, \"b\", canUseDV);\n    addField(doc, \"airport\", \"ams\", canUseDV);\n    addField(doc, \"duration\", \"5\", canUseDV);\n    w.addDocument(doc);\n\n    // 4\n    doc = new Document();\n    addField(doc, groupField, \"b\", canUseDV);\n    addField(doc, \"airport\", \"ams\", canUseDV);\n    addField(doc, \"duration\", \"5\", canUseDV);\n    w.addDocument(doc);\n\n    IndexSearcher indexSearcher = new IndexSearcher(w.getReader());\n    AbstractGroupFacetCollector groupedAirportFacetCollector = createRandomCollector(groupField, \"airport\", null, false, useDv);\n    indexSearcher.search(new MatchAllDocsQuery(), groupedAirportFacetCollector);\n    TermGroupFacetCollector.GroupedFacetResult airportResult = groupedAirportFacetCollector.mergeSegmentResults(10, 0, false);\n    assertEquals(3, airportResult.getTotalCount());\n    assertEquals(0, airportResult.getTotalMissingCount());\n\n    List<TermGroupFacetCollector.FacetEntry> entries = airportResult.getFacetEntries(0, 10);\n    assertEquals(2, entries.size());\n    assertEquals(\"ams\", entries.get(0).getValue().utf8ToString());\n    assertEquals(2, entries.get(0).getCount());\n    assertEquals(\"dus\", entries.get(1).getValue().utf8ToString());\n    assertEquals(1, entries.get(1).getCount());\n\n\n    AbstractGroupFacetCollector groupedDurationFacetCollector = createRandomCollector(groupField, \"duration\", null, false, useDv);\n    indexSearcher.search(new MatchAllDocsQuery(), groupedDurationFacetCollector);\n    TermGroupFacetCollector.GroupedFacetResult durationResult = groupedDurationFacetCollector.mergeSegmentResults(10, 0, false);\n    assertEquals(4, durationResult.getTotalCount());\n    assertEquals(0, durationResult.getTotalMissingCount());\n\n    entries = durationResult.getFacetEntries(0, 10);\n    assertEquals(2, entries.size());\n    assertEquals(\"10\", entries.get(0).getValue().utf8ToString());\n    assertEquals(2, entries.get(0).getCount());\n    assertEquals(\"5\", entries.get(1).getValue().utf8ToString());\n    assertEquals(2, entries.get(1).getCount());\n\n    // 5\n    doc = new Document();\n    addField(doc, groupField, \"b\", canUseDV);\n    addField(doc, \"duration\", \"5\", canUseDV);\n    w.addDocument(doc);\n\n    // 6\n    doc = new Document();\n    addField(doc, groupField, \"b\", canUseDV);\n    addField(doc, \"airport\", \"bru\", canUseDV);\n    addField(doc, \"duration\", \"10\", canUseDV);\n    w.addDocument(doc);\n\n    // 7\n    doc = new Document();\n    addField(doc, groupField, \"b\", canUseDV);\n    addField(doc, \"airport\", \"bru\", canUseDV);\n    addField(doc, \"duration\", \"15\", canUseDV);\n    w.addDocument(doc);\n\n    // 8\n    doc = new Document();\n    addField(doc, groupField, \"a\", canUseDV);\n    addField(doc, \"airport\", \"bru\", canUseDV);\n    addField(doc, \"duration\", \"10\", canUseDV);\n    w.addDocument(doc);\n\n    indexSearcher.getIndexReader().close();\n    indexSearcher = new IndexSearcher(w.getReader());\n    groupedAirportFacetCollector = createRandomCollector(groupField, \"airport\", null, true, useDv);\n    indexSearcher.search(new MatchAllDocsQuery(), groupedAirportFacetCollector);\n    airportResult = groupedAirportFacetCollector.mergeSegmentResults(3, 0, true);\n    assertEquals(5, airportResult.getTotalCount());\n    assertEquals(1, airportResult.getTotalMissingCount());\n\n    entries = airportResult.getFacetEntries(1, 2);\n    assertEquals(2, entries.size());\n    assertEquals(\"bru\", entries.get(0).getValue().utf8ToString());\n    assertEquals(2, entries.get(0).getCount());\n    assertEquals(\"dus\", entries.get(1).getValue().utf8ToString());\n    assertEquals(1, entries.get(1).getCount());\n\n    groupedDurationFacetCollector = createRandomCollector(groupField, \"duration\", null, false, useDv);\n    indexSearcher.search(new MatchAllDocsQuery(), groupedDurationFacetCollector);\n    durationResult = groupedDurationFacetCollector.mergeSegmentResults(10, 2, true);\n    assertEquals(5, durationResult.getTotalCount());\n    assertEquals(0, durationResult.getTotalMissingCount());\n\n    entries = durationResult.getFacetEntries(1, 1);\n    assertEquals(1, entries.size());\n    assertEquals(\"5\", entries.get(0).getValue().utf8ToString());\n    assertEquals(2, entries.get(0).getCount());\n\n    // 9\n    doc = new Document();\n    addField(doc, groupField, \"c\", canUseDV);\n    addField(doc, \"airport\", \"bru\", canUseDV);\n    addField(doc, \"duration\", \"15\", canUseDV);\n    w.addDocument(doc);\n\n    // 10\n    doc = new Document();\n    addField(doc, groupField, \"c\", canUseDV);\n    addField(doc, \"airport\", \"dus\", canUseDV);\n    addField(doc, \"duration\", \"10\", canUseDV);\n    w.addDocument(doc);\n\n    indexSearcher.getIndexReader().close();\n    indexSearcher = new IndexSearcher(w.getReader());\n    groupedAirportFacetCollector = createRandomCollector(groupField, \"airport\", null, false, useDv);\n    indexSearcher.search(new MatchAllDocsQuery(), groupedAirportFacetCollector);\n    airportResult = groupedAirportFacetCollector.mergeSegmentResults(10, 0, false);\n    assertEquals(7, airportResult.getTotalCount());\n    assertEquals(1, airportResult.getTotalMissingCount());\n\n    entries = airportResult.getFacetEntries(0, 10);\n    assertEquals(3, entries.size());\n    assertEquals(\"ams\", entries.get(0).getValue().utf8ToString());\n    assertEquals(2, entries.get(0).getCount());\n    assertEquals(\"bru\", entries.get(1).getValue().utf8ToString());\n    assertEquals(3, entries.get(1).getCount());\n    assertEquals(\"dus\", entries.get(2).getValue().utf8ToString());\n    assertEquals(2, entries.get(2).getCount());\n\n    groupedDurationFacetCollector = createRandomCollector(groupField, \"duration\", \"1\", false, useDv);\n    indexSearcher.search(new MatchAllDocsQuery(), groupedDurationFacetCollector);\n    durationResult = groupedDurationFacetCollector.mergeSegmentResults(10, 0, true);\n    assertEquals(5, durationResult.getTotalCount());\n    assertEquals(0, durationResult.getTotalMissingCount());\n\n    entries = durationResult.getFacetEntries(0, 10);\n    assertEquals(2, entries.size());\n    assertEquals(\"10\", entries.get(0).getValue().utf8ToString());\n    assertEquals(3, entries.get(0).getCount());\n    assertEquals(\"15\", entries.get(1).getValue().utf8ToString());\n    assertEquals(2, entries.get(1).getCount());\n\n    w.close();\n    indexSearcher.getIndexReader().close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["629c38c4ae4e303d0617e05fbfe508140b32f0a3"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"629c38c4ae4e303d0617e05fbfe508140b32f0a3":["8b89f8e2c44ce7efaf10978b9e5c6b95a31706b2"],"8b89f8e2c44ce7efaf10978b9e5c6b95a31706b2":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b89678825b68eccaf09e6ab71675fc0b0af1e099"]},"commit2Childs":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["8b89f8e2c44ce7efaf10978b9e5c6b95a31706b2"],"629c38c4ae4e303d0617e05fbfe508140b32f0a3":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"8b89f8e2c44ce7efaf10978b9e5c6b95a31706b2":["629c38c4ae4e303d0617e05fbfe508140b32f0a3"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}