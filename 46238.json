{"path":"modules/spatial/src/java/org/apache/lucene/spatial/base/prefix/geohash/GeohashUtils#encodeLatLon(double,double,int).mjava","commits":[{"id":"935445a30e9e8dc0240a7c78efc73d08c2faa6a8","date":1329778521,"type":1,"author":"David Wayne Smiley","isMerge":false,"pathNew":"modules/spatial/src/java/org/apache/lucene/spatial/base/prefix/geohash/GeohashUtils#encodeLatLon(double,double,int).mjava","pathOld":"modules/spatial/src/main/java/org/apache/lucene/spatial/base/prefix/geohash/GeohashUtils#encodeLatLon(double,double,int).mjava","sourceNew":"  public static String encodeLatLon(double latitude, double longitude, int precision) {\n    double[] latInterval = {-90.0, 90.0};\n    double[] lngInterval = {-180.0, 180.0};\n\n    final StringBuilder geohash = new StringBuilder(precision);\n    boolean isEven = true;\n\n    int bit = 0;\n    int ch = 0;\n\n    while (geohash.length() < precision) {\n      double mid = 0.0;\n      if (isEven) {\n        mid = (lngInterval[0] + lngInterval[1]) / 2D;\n        if (longitude > mid) {\n          ch |= BITS[bit];\n          lngInterval[0] = mid;\n        } else {\n          lngInterval[1] = mid;\n        }\n      } else {\n        mid = (latInterval[0] + latInterval[1]) / 2D;\n        if (latitude > mid) {\n          ch |= BITS[bit];\n          latInterval[0] = mid;\n        } else {\n          latInterval[1] = mid;\n        }\n      }\n\n      isEven = !isEven;\n\n      if (bit < 4) {\n        bit++;\n      } else {\n        geohash.append(BASE_32[ch]);\n        bit = 0;\n        ch = 0;\n      }\n    }\n\n    return geohash.toString();\n  }\n\n","sourceOld":"  public static String encodeLatLon(double latitude, double longitude, int precision) {\n    double[] latInterval = {-90.0, 90.0};\n    double[] lngInterval = {-180.0, 180.0};\n\n    final StringBuilder geohash = new StringBuilder(precision);\n    boolean isEven = true;\n\n    int bit = 0;\n    int ch = 0;\n\n    while (geohash.length() < precision) {\n      double mid = 0.0;\n      if (isEven) {\n        mid = (lngInterval[0] + lngInterval[1]) / 2D;\n        if (longitude > mid) {\n          ch |= BITS[bit];\n          lngInterval[0] = mid;\n        } else {\n          lngInterval[1] = mid;\n        }\n      } else {\n        mid = (latInterval[0] + latInterval[1]) / 2D;\n        if (latitude > mid) {\n          ch |= BITS[bit];\n          latInterval[0] = mid;\n        } else {\n          latInterval[1] = mid;\n        }\n      }\n\n      isEven = !isEven;\n\n      if (bit < 4) {\n        bit++;\n      } else {\n        geohash.append(BASE_32[ch]);\n        bit = 0;\n        ch = 0;\n      }\n    }\n\n    return geohash.toString();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"33ee89d976c91275e5be5da438ca0977b1c5b90f","date":1329808149,"type":5,"author":"Ryan McKinley","isMerge":false,"pathNew":"modules/spatial-TEMP/src/java/org/apache/lucene/spatial/base/prefix/geohash/GeohashUtils#encodeLatLon(double,double,int).mjava","pathOld":"modules/spatial/src/java/org/apache/lucene/spatial/base/prefix/geohash/GeohashUtils#encodeLatLon(double,double,int).mjava","sourceNew":"  public static String encodeLatLon(double latitude, double longitude, int precision) {\n    double[] latInterval = {-90.0, 90.0};\n    double[] lngInterval = {-180.0, 180.0};\n\n    final StringBuilder geohash = new StringBuilder(precision);\n    boolean isEven = true;\n\n    int bit = 0;\n    int ch = 0;\n\n    while (geohash.length() < precision) {\n      double mid = 0.0;\n      if (isEven) {\n        mid = (lngInterval[0] + lngInterval[1]) / 2D;\n        if (longitude > mid) {\n          ch |= BITS[bit];\n          lngInterval[0] = mid;\n        } else {\n          lngInterval[1] = mid;\n        }\n      } else {\n        mid = (latInterval[0] + latInterval[1]) / 2D;\n        if (latitude > mid) {\n          ch |= BITS[bit];\n          latInterval[0] = mid;\n        } else {\n          latInterval[1] = mid;\n        }\n      }\n\n      isEven = !isEven;\n\n      if (bit < 4) {\n        bit++;\n      } else {\n        geohash.append(BASE_32[ch]);\n        bit = 0;\n        ch = 0;\n      }\n    }\n\n    return geohash.toString();\n  }\n\n","sourceOld":"  public static String encodeLatLon(double latitude, double longitude, int precision) {\n    double[] latInterval = {-90.0, 90.0};\n    double[] lngInterval = {-180.0, 180.0};\n\n    final StringBuilder geohash = new StringBuilder(precision);\n    boolean isEven = true;\n\n    int bit = 0;\n    int ch = 0;\n\n    while (geohash.length() < precision) {\n      double mid = 0.0;\n      if (isEven) {\n        mid = (lngInterval[0] + lngInterval[1]) / 2D;\n        if (longitude > mid) {\n          ch |= BITS[bit];\n          lngInterval[0] = mid;\n        } else {\n          lngInterval[1] = mid;\n        }\n      } else {\n        mid = (latInterval[0] + latInterval[1]) / 2D;\n        if (latitude > mid) {\n          ch |= BITS[bit];\n          latInterval[0] = mid;\n        } else {\n          latInterval[1] = mid;\n        }\n      }\n\n      isEven = !isEven;\n\n      if (bit < 4) {\n        bit++;\n      } else {\n        geohash.append(BASE_32[ch]);\n        bit = 0;\n        ch = 0;\n      }\n    }\n\n    return geohash.toString();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"935445a30e9e8dc0240a7c78efc73d08c2faa6a8":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"33ee89d976c91275e5be5da438ca0977b1c5b90f":["935445a30e9e8dc0240a7c78efc73d08c2faa6a8"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"935445a30e9e8dc0240a7c78efc73d08c2faa6a8":["33ee89d976c91275e5be5da438ca0977b1c5b90f"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["935445a30e9e8dc0240a7c78efc73d08c2faa6a8","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"33ee89d976c91275e5be5da438ca0977b1c5b90f":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["33ee89d976c91275e5be5da438ca0977b1c5b90f","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}