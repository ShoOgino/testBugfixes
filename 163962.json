{"path":"modules/analysis/common/src/java/org/apache/lucene/analysis/query/QueryAutoStopWordAnalyzer#tokenStream(String,Reader).mjava","commits":[{"id":"0f080986da691a3bba7b757f43ab72cdc82b57ce","date":1273069619,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"modules/analysis/common/src/java/org/apache/lucene/analysis/query/QueryAutoStopWordAnalyzer#tokenStream(String,Reader).mjava","pathOld":"lucene/contrib/analyzers/common/src/java/org/apache/lucene/analysis/query/QueryAutoStopWordAnalyzer#tokenStream(String,Reader).mjava","sourceNew":"  @Override\n  public TokenStream tokenStream(String fieldName, Reader reader) {\n    TokenStream result;\n    try {\n      result = delegate.reusableTokenStream(fieldName, reader);\n    } catch (IOException e) {\n      result = delegate.tokenStream(fieldName, reader);\n    }\n    HashSet<String> stopWords = stopWordsPerField.get(fieldName);\n    if (stopWords != null) {\n      result = new StopFilter(matchVersion, result, stopWords);\n    }\n    return result;\n  }\n\n","sourceOld":"  @Override\n  public TokenStream tokenStream(String fieldName, Reader reader) {\n    TokenStream result;\n    try {\n      result = delegate.reusableTokenStream(fieldName, reader);\n    } catch (IOException e) {\n      result = delegate.tokenStream(fieldName, reader);\n    }\n    HashSet<String> stopWords = stopWordsPerField.get(fieldName);\n    if (stopWords != null) {\n      result = new StopFilter(matchVersion, result, stopWords);\n    }\n    return result;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"193a8346fc41165af561d084bb5f40a62125a878","date":1315971230,"type":3,"author":"Christopher John Male","isMerge":false,"pathNew":"modules/analysis/common/src/java/org/apache/lucene/analysis/query/QueryAutoStopWordAnalyzer#tokenStream(String,Reader).mjava","pathOld":"modules/analysis/common/src/java/org/apache/lucene/analysis/query/QueryAutoStopWordAnalyzer#tokenStream(String,Reader).mjava","sourceNew":"  @Override\n  public TokenStream tokenStream(String fieldName, Reader reader) {\n    TokenStream result;\n    try {\n      result = delegate.reusableTokenStream(fieldName, reader);\n    } catch (IOException e) {\n      result = delegate.tokenStream(fieldName, reader);\n    }\n    Set<String> stopWords = stopWordsPerField.get(fieldName);\n    if (stopWords != null) {\n      result = new StopFilter(matchVersion, result, stopWords);\n    }\n    return result;\n  }\n\n","sourceOld":"  @Override\n  public TokenStream tokenStream(String fieldName, Reader reader) {\n    TokenStream result;\n    try {\n      result = delegate.reusableTokenStream(fieldName, reader);\n    } catch (IOException e) {\n      result = delegate.tokenStream(fieldName, reader);\n    }\n    HashSet<String> stopWords = stopWordsPerField.get(fieldName);\n    if (stopWords != null) {\n      result = new StopFilter(matchVersion, result, stopWords);\n    }\n    return result;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2f49143da0a5d278a72f741432047fcfa6da996e","date":1316927425,"type":4,"author":"Christopher John Male","isMerge":false,"pathNew":"/dev/null","pathOld":"modules/analysis/common/src/java/org/apache/lucene/analysis/query/QueryAutoStopWordAnalyzer#tokenStream(String,Reader).mjava","sourceNew":null,"sourceOld":"  @Override\n  public TokenStream tokenStream(String fieldName, Reader reader) {\n    TokenStream result;\n    try {\n      result = delegate.reusableTokenStream(fieldName, reader);\n    } catch (IOException e) {\n      result = delegate.tokenStream(fieldName, reader);\n    }\n    Set<String> stopWords = stopWordsPerField.get(fieldName);\n    if (stopWords != null) {\n      result = new StopFilter(matchVersion, result, stopWords);\n    }\n    return result;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"193a8346fc41165af561d084bb5f40a62125a878":["0f080986da691a3bba7b757f43ab72cdc82b57ce"],"2f49143da0a5d278a72f741432047fcfa6da996e":["193a8346fc41165af561d084bb5f40a62125a878"],"0f080986da691a3bba7b757f43ab72cdc82b57ce":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["2f49143da0a5d278a72f741432047fcfa6da996e"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["0f080986da691a3bba7b757f43ab72cdc82b57ce"],"193a8346fc41165af561d084bb5f40a62125a878":["2f49143da0a5d278a72f741432047fcfa6da996e"],"2f49143da0a5d278a72f741432047fcfa6da996e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"0f080986da691a3bba7b757f43ab72cdc82b57ce":["193a8346fc41165af561d084bb5f40a62125a878"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}