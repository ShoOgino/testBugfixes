{"path":"lucene/spatial3d/src/test/org/apache/lucene/spatial3d/TestGeo3DPoint#testComplexPolygons().mjava","commits":[{"id":"a75c862521bb895a29958e7bc5cb188597205a08","date":1459977470,"type":0,"author":"Karl Wright","isMerge":false,"pathNew":"lucene/spatial3d/src/test/org/apache/lucene/spatial3d/TestGeo3DPoint#testComplexPolygons().mjava","pathOld":"/dev/null","sourceNew":"  @Ignore\n  public void testComplexPolygons() {\n    final PlanetModel pm = PlanetModel.WGS84;\n    // Pick a random pole\n    final GeoPoint randomPole = new GeoPoint(pm, Math.toRadians(randomLat()), Math.toRadians(randomLon()));\n    // Create a polygon that's less than 180 degrees\n    final Polygon clockWise = makePoly(pm, randomPole, true);\n    // Create a polygon that's greater than 180 degrees\n    final Polygon counterClockWise = makePoly(pm, randomPole, false);\n    \n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4426b4db58382f44a19bd3bbd62c69df9e9fa84a","date":1459983420,"type":3,"author":"Karl Wright","isMerge":false,"pathNew":"lucene/spatial3d/src/test/org/apache/lucene/spatial3d/TestGeo3DPoint#testComplexPolygons().mjava","pathOld":"lucene/spatial3d/src/test/org/apache/lucene/spatial3d/TestGeo3DPoint#testComplexPolygons().mjava","sourceNew":"  public void testComplexPolygons() {\n    final PlanetModel pm = PlanetModel.WGS84;\n    // Pick a random pole\n    final GeoPoint randomPole = new GeoPoint(pm, Math.toRadians(randomLat()), Math.toRadians(randomLon()));\n    // Create a polygon that's less than 180 degrees\n    final Polygon clockWise = makePoly(pm, randomPole, true, true);\n    // Create a polygon that's greater than 180 degrees\n    final Polygon counterClockWise = makePoly(pm, randomPole, false, true);\n    \n  }\n\n","sourceOld":"  @Ignore\n  public void testComplexPolygons() {\n    final PlanetModel pm = PlanetModel.WGS84;\n    // Pick a random pole\n    final GeoPoint randomPole = new GeoPoint(pm, Math.toRadians(randomLat()), Math.toRadians(randomLon()));\n    // Create a polygon that's less than 180 degrees\n    final Polygon clockWise = makePoly(pm, randomPole, true);\n    // Create a polygon that's greater than 180 degrees\n    final Polygon counterClockWise = makePoly(pm, randomPole, false);\n    \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4d3a37d877793d2b7b46b7d8b0b0319d65f7d2a9","date":1459984736,"type":3,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/spatial3d/src/test/org/apache/lucene/spatial3d/TestGeo3DPoint#testComplexPolygons().mjava","pathOld":"lucene/spatial3d/src/test/org/apache/lucene/spatial3d/TestGeo3DPoint#testComplexPolygons().mjava","sourceNew":"  public void testComplexPolygons() {\n    final PlanetModel pm = PlanetModel.WGS84;\n    // Pick a random pole\n    final GeoPoint randomPole = new GeoPoint(pm, Math.toRadians(GeoTestUtil.nextLatitude()), Math.toRadians(GeoTestUtil.nextLongitude()));\n    // Create a polygon that's less than 180 degrees\n    final Polygon clockWise = makePoly(pm, randomPole, true, true);\n    // Create a polygon that's greater than 180 degrees\n    final Polygon counterClockWise = makePoly(pm, randomPole, false, true);\n  }\n\n","sourceOld":"  public void testComplexPolygons() {\n    final PlanetModel pm = PlanetModel.WGS84;\n    // Pick a random pole\n    final GeoPoint randomPole = new GeoPoint(pm, Math.toRadians(randomLat()), Math.toRadians(randomLon()));\n    // Create a polygon that's less than 180 degrees\n    final Polygon clockWise = makePoly(pm, randomPole, true, true);\n    // Create a polygon that's greater than 180 degrees\n    final Polygon counterClockWise = makePoly(pm, randomPole, false, true);\n    \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"069b6399199067f948768d592a47668c8efa6a76","date":1460066373,"type":3,"author":"Karl Wright","isMerge":false,"pathNew":"lucene/spatial3d/src/test/org/apache/lucene/spatial3d/TestGeo3DPoint#testComplexPolygons().mjava","pathOld":"lucene/spatial3d/src/test/org/apache/lucene/spatial3d/TestGeo3DPoint#testComplexPolygons().mjava","sourceNew":"  public void testComplexPolygons() {\n    final PlanetModel pm = PlanetModel.WGS84;\n    // Pick a random pole\n    final GeoPoint randomPole = new GeoPoint(pm, Math.toRadians(GeoTestUtil.nextLatitude()), Math.toRadians(GeoTestUtil.nextLongitude()));\n    int iters = atLeast(100);\n    for (int i = 0; i < iters; i++) {\n      // Create a polygon that's less than 180 degrees\n      final Polygon clockWise = makePoly(pm, randomPole, true, true);\n    }\n    iters = atLeast(100);\n    for (int i = 0; i < iters; i++) {\n      // Create a polygon that's greater than 180 degrees\n      final Polygon counterClockWise = makePoly(pm, randomPole, false, true);\n    }\n  }\n\n","sourceOld":"  public void testComplexPolygons() {\n    final PlanetModel pm = PlanetModel.WGS84;\n    // Pick a random pole\n    final GeoPoint randomPole = new GeoPoint(pm, Math.toRadians(GeoTestUtil.nextLatitude()), Math.toRadians(GeoTestUtil.nextLongitude()));\n    // Create a polygon that's less than 180 degrees\n    final Polygon clockWise = makePoly(pm, randomPole, true, true);\n    // Create a polygon that's greater than 180 degrees\n    final Polygon counterClockWise = makePoly(pm, randomPole, false, true);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6edf4e73fba5b40b042f1f2dda5752e95a10b393","date":1460279472,"type":3,"author":"Karl Wright","isMerge":false,"pathNew":"lucene/spatial3d/src/test/org/apache/lucene/spatial3d/TestGeo3DPoint#testComplexPolygons().mjava","pathOld":"lucene/spatial3d/src/test/org/apache/lucene/spatial3d/TestGeo3DPoint#testComplexPolygons().mjava","sourceNew":"  public void testComplexPolygons() {\n    final PlanetModel pm = PlanetModel.WGS84;\n    // Pick a random pole\n    final GeoPoint randomPole = new GeoPoint(pm, toRadians(GeoTestUtil.nextLatitude()), toRadians(GeoTestUtil.nextLongitude()));\n    int iters = atLeast(100);\n    for (int i = 0; i < iters; i++) {\n      // Create a polygon that's less than 180 degrees\n      final Polygon clockWise = makePoly(pm, randomPole, true, true);\n    }\n    iters = atLeast(100);\n    for (int i = 0; i < iters; i++) {\n      // Create a polygon that's greater than 180 degrees\n      final Polygon counterClockWise = makePoly(pm, randomPole, false, true);\n    }\n  }\n\n","sourceOld":"  public void testComplexPolygons() {\n    final PlanetModel pm = PlanetModel.WGS84;\n    // Pick a random pole\n    final GeoPoint randomPole = new GeoPoint(pm, Math.toRadians(GeoTestUtil.nextLatitude()), Math.toRadians(GeoTestUtil.nextLongitude()));\n    int iters = atLeast(100);\n    for (int i = 0; i < iters; i++) {\n      // Create a polygon that's less than 180 degrees\n      final Polygon clockWise = makePoly(pm, randomPole, true, true);\n    }\n    iters = atLeast(100);\n    for (int i = 0; i < iters; i++) {\n      // Create a polygon that's greater than 180 degrees\n      final Polygon counterClockWise = makePoly(pm, randomPole, false, true);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c33ed6824db1d3c54aaf0208e68c3df3fd43d93a","date":1583186777,"type":3,"author":"Nicholas Knize","isMerge":false,"pathNew":"lucene/spatial3d/src/test/org/apache/lucene/spatial3d/TestGeo3DPoint#testComplexPolygons().mjava","pathOld":"lucene/spatial3d/src/test/org/apache/lucene/spatial3d/TestGeo3DPoint#testComplexPolygons().mjava","sourceNew":"  public void testComplexPolygons() {\n    final PlanetModel pm = randomPlanetModel();\n    // Pick a random pole\n    final GeoPoint randomPole = new GeoPoint(pm, toRadians(GeoTestUtil.nextLatitude()), toRadians(GeoTestUtil.nextLongitude()));\n    int iters = atLeast(100);\n    for (int i = 0; i < iters; i++) {\n      // Create a polygon that's less than 180 degrees\n      final Polygon clockWise = makePoly(pm, randomPole, true, true);\n    }\n    iters = atLeast(100);\n    for (int i = 0; i < iters; i++) {\n      // Create a polygon that's greater than 180 degrees\n      final Polygon counterClockWise = makePoly(pm, randomPole, false, true);\n    }\n  }\n\n","sourceOld":"  public void testComplexPolygons() {\n    final PlanetModel pm = PlanetModel.WGS84;\n    // Pick a random pole\n    final GeoPoint randomPole = new GeoPoint(pm, toRadians(GeoTestUtil.nextLatitude()), toRadians(GeoTestUtil.nextLongitude()));\n    int iters = atLeast(100);\n    for (int i = 0; i < iters; i++) {\n      // Create a polygon that's less than 180 degrees\n      final Polygon clockWise = makePoly(pm, randomPole, true, true);\n    }\n    iters = atLeast(100);\n    for (int i = 0; i < iters; i++) {\n      // Create a polygon that's greater than 180 degrees\n      final Polygon counterClockWise = makePoly(pm, randomPole, false, true);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"4d3a37d877793d2b7b46b7d8b0b0319d65f7d2a9":["4426b4db58382f44a19bd3bbd62c69df9e9fa84a"],"4426b4db58382f44a19bd3bbd62c69df9e9fa84a":["a75c862521bb895a29958e7bc5cb188597205a08"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"069b6399199067f948768d592a47668c8efa6a76":["4d3a37d877793d2b7b46b7d8b0b0319d65f7d2a9"],"c33ed6824db1d3c54aaf0208e68c3df3fd43d93a":["6edf4e73fba5b40b042f1f2dda5752e95a10b393"],"6edf4e73fba5b40b042f1f2dda5752e95a10b393":["069b6399199067f948768d592a47668c8efa6a76"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["c33ed6824db1d3c54aaf0208e68c3df3fd43d93a"],"a75c862521bb895a29958e7bc5cb188597205a08":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"4d3a37d877793d2b7b46b7d8b0b0319d65f7d2a9":["069b6399199067f948768d592a47668c8efa6a76"],"4426b4db58382f44a19bd3bbd62c69df9e9fa84a":["4d3a37d877793d2b7b46b7d8b0b0319d65f7d2a9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["a75c862521bb895a29958e7bc5cb188597205a08"],"069b6399199067f948768d592a47668c8efa6a76":["6edf4e73fba5b40b042f1f2dda5752e95a10b393"],"c33ed6824db1d3c54aaf0208e68c3df3fd43d93a":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"6edf4e73fba5b40b042f1f2dda5752e95a10b393":["c33ed6824db1d3c54aaf0208e68c3df3fd43d93a"],"a75c862521bb895a29958e7bc5cb188597205a08":["4426b4db58382f44a19bd3bbd62c69df9e9fa84a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}