{"path":"lucene/src/java/org/apache/lucene/index/values/IntsImpl.PackedIntsEnumImpl#PackedIntsEnumImpl(AttributeSource,IndexInput).mjava","commits":[{"id":"605b061fadf71aa6458c0005eaae83a98350c403","date":1307117658,"type":1,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/values/IntsImpl.PackedIntsEnumImpl#PackedIntsEnumImpl(AttributeSource,IndexInput).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/values/PackedIntsImpl.PackedIntsEnumImpl#PackedIntsEnumImpl(AttributeSource,IndexInput).mjava","sourceNew":"    private PackedIntsEnumImpl(AttributeSource source, IndexInput dataIn)\n        throws IOException {\n      super(source, ValueType.INTS);\n      intsRef.offset = 0;\n      this.dataIn = dataIn;\n      dataIn.seek(CodecUtil.headerLength(CODEC_NAME) + 1);\n      minValue = dataIn.readLong();\n      defaultValue = dataIn.readLong();\n      this.ints = PackedInts.getReaderIterator(dataIn);\n      maxDoc = ints.size();\n    }\n\n","sourceOld":"    private PackedIntsEnumImpl(AttributeSource source, IndexInput dataIn)\n        throws IOException {\n      super(source, ValueType.INTS);\n      intsRef.offset = 0;\n      this.dataIn = dataIn;\n      dataIn.seek(CodecUtil.headerLength(CODEC_NAME) + 1);\n      minValue = dataIn.readLong();\n      defaultValue = dataIn.readLong();\n      this.ints = PackedInts.getReaderIterator(dataIn);\n      maxDoc = ints.size();\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2e8d7ba2175f47e280231533f7d3016249cea88b","date":1307711934,"type":0,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/values/IntsImpl.PackedIntsEnumImpl#PackedIntsEnumImpl(AttributeSource,IndexInput).mjava","pathOld":"/dev/null","sourceNew":"    private PackedIntsEnumImpl(AttributeSource source, IndexInput dataIn)\n        throws IOException {\n      super(source, ValueType.INTS);\n      intsRef.offset = 0;\n      this.dataIn = dataIn;\n      dataIn.seek(CodecUtil.headerLength(CODEC_NAME) + 1);\n      minValue = dataIn.readLong();\n      defaultValue = dataIn.readLong();\n      this.ints = PackedInts.getReaderIterator(dataIn);\n      maxDoc = ints.size();\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a02058e0eaba4bbd5d05e6b06b9522c0acfd1655","date":1307729864,"type":0,"author":"Steven Rowe","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/values/IntsImpl.PackedIntsEnumImpl#PackedIntsEnumImpl(AttributeSource,IndexInput).mjava","pathOld":"/dev/null","sourceNew":"    private PackedIntsEnumImpl(AttributeSource source, IndexInput dataIn)\n        throws IOException {\n      super(source, ValueType.INTS);\n      intsRef.offset = 0;\n      this.dataIn = dataIn;\n      dataIn.seek(CodecUtil.headerLength(CODEC_NAME) + 1);\n      minValue = dataIn.readLong();\n      defaultValue = dataIn.readLong();\n      this.ints = PackedInts.getReaderIterator(dataIn);\n      maxDoc = ints.size();\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"93c59ad5034eecd863f267bd75e1df7b8a51e427","date":1309162882,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/values/IntsImpl.PackedIntsEnumImpl#PackedIntsEnumImpl(AttributeSource,IndexInput).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/values/IntsImpl.PackedIntsEnumImpl#PackedIntsEnumImpl(AttributeSource,IndexInput).mjava","sourceNew":"    private PackedIntsEnumImpl(AttributeSource source, IndexInput dataIn)\n        throws IOException {\n      super(source, ValueType.VAR_INTS);\n      intsRef.offset = 0;\n      this.dataIn = dataIn;\n      minValue = dataIn.readLong();\n      defaultValue = dataIn.readLong();\n      this.ints = PackedInts.getReaderIterator(dataIn);\n      maxDoc = ints.size();\n    }\n\n","sourceOld":"    private PackedIntsEnumImpl(AttributeSource source, IndexInput dataIn)\n        throws IOException {\n      super(source, ValueType.INTS);\n      intsRef.offset = 0;\n      this.dataIn = dataIn;\n      dataIn.seek(CodecUtil.headerLength(CODEC_NAME) + 1);\n      minValue = dataIn.readLong();\n      defaultValue = dataIn.readLong();\n      this.ints = PackedInts.getReaderIterator(dataIn);\n      maxDoc = ints.size();\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2553b00f699380c64959ccb27991289aae87be2e","date":1309290151,"type":3,"author":"Steven Rowe","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/values/IntsImpl.PackedIntsEnumImpl#PackedIntsEnumImpl(AttributeSource,IndexInput).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/values/IntsImpl.PackedIntsEnumImpl#PackedIntsEnumImpl(AttributeSource,IndexInput).mjava","sourceNew":"    private PackedIntsEnumImpl(AttributeSource source, IndexInput dataIn)\n        throws IOException {\n      super(source, ValueType.VAR_INTS);\n      intsRef.offset = 0;\n      this.dataIn = dataIn;\n      minValue = dataIn.readLong();\n      defaultValue = dataIn.readLong();\n      this.ints = PackedInts.getReaderIterator(dataIn);\n      maxDoc = ints.size();\n    }\n\n","sourceOld":"    private PackedIntsEnumImpl(AttributeSource source, IndexInput dataIn)\n        throws IOException {\n      super(source, ValueType.INTS);\n      intsRef.offset = 0;\n      this.dataIn = dataIn;\n      dataIn.seek(CodecUtil.headerLength(CODEC_NAME) + 1);\n      minValue = dataIn.readLong();\n      defaultValue = dataIn.readLong();\n      this.ints = PackedInts.getReaderIterator(dataIn);\n      maxDoc = ints.size();\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d083e83f225b11e5fdd900e83d26ddb385b6955c","date":1310029438,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/values/IntsImpl.PackedIntsEnumImpl#PackedIntsEnumImpl(AttributeSource,IndexInput).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/values/IntsImpl.PackedIntsEnumImpl#PackedIntsEnumImpl(AttributeSource,IndexInput).mjava","sourceNew":"    private PackedIntsEnumImpl(AttributeSource source, IndexInput dataIn)\n        throws IOException {\n      super(source, ValueType.VAR_INTS);\n      intsRef.offset = 0;\n      this.dataIn = dataIn;\n      minValue = dataIn.readLong();\n      defaultValue = dataIn.readLong();\n      this.ints = PackedInts.getReaderIterator(dataIn);\n      maxDoc = ints.size();\n    }\n\n","sourceOld":"    private PackedIntsEnumImpl(AttributeSource source, IndexInput dataIn)\n        throws IOException {\n      super(source, ValueType.INTS);\n      intsRef.offset = 0;\n      this.dataIn = dataIn;\n      dataIn.seek(CodecUtil.headerLength(CODEC_NAME) + 1);\n      minValue = dataIn.readLong();\n      defaultValue = dataIn.readLong();\n      this.ints = PackedInts.getReaderIterator(dataIn);\n      maxDoc = ints.size();\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"85eb75e0c0203e44dcf686f35876cf6080f3a671","date":1317221550,"type":5,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/values/PackedIntValues.PackedIntsEnumImpl#PackedIntsEnumImpl(AttributeSource,IndexInput).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/values/IntsImpl.PackedIntsEnumImpl#PackedIntsEnumImpl(AttributeSource,IndexInput).mjava","sourceNew":"    private PackedIntsEnumImpl(AttributeSource source, IndexInput dataIn)\n        throws IOException {\n      super(source, ValueType.VAR_INTS);\n      intsRef.offset = 0;\n      this.dataIn = dataIn;\n      minValue = dataIn.readLong();\n      defaultValue = dataIn.readLong();\n      this.ints = PackedInts.getReaderIterator(dataIn);\n      maxDoc = ints.size();\n    }\n\n","sourceOld":"    private PackedIntsEnumImpl(AttributeSource source, IndexInput dataIn)\n        throws IOException {\n      super(source, ValueType.VAR_INTS);\n      intsRef.offset = 0;\n      this.dataIn = dataIn;\n      minValue = dataIn.readLong();\n      defaultValue = dataIn.readLong();\n      this.ints = PackedInts.getReaderIterator(dataIn);\n      maxDoc = ints.size();\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a02058e0eaba4bbd5d05e6b06b9522c0acfd1655":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","2e8d7ba2175f47e280231533f7d3016249cea88b"],"2e8d7ba2175f47e280231533f7d3016249cea88b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","605b061fadf71aa6458c0005eaae83a98350c403"],"605b061fadf71aa6458c0005eaae83a98350c403":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"93c59ad5034eecd863f267bd75e1df7b8a51e427":["2e8d7ba2175f47e280231533f7d3016249cea88b"],"85eb75e0c0203e44dcf686f35876cf6080f3a671":["93c59ad5034eecd863f267bd75e1df7b8a51e427"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"2553b00f699380c64959ccb27991289aae87be2e":["a02058e0eaba4bbd5d05e6b06b9522c0acfd1655","93c59ad5034eecd863f267bd75e1df7b8a51e427"],"d083e83f225b11e5fdd900e83d26ddb385b6955c":["2e8d7ba2175f47e280231533f7d3016249cea88b","93c59ad5034eecd863f267bd75e1df7b8a51e427"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["85eb75e0c0203e44dcf686f35876cf6080f3a671"]},"commit2Childs":{"a02058e0eaba4bbd5d05e6b06b9522c0acfd1655":["2553b00f699380c64959ccb27991289aae87be2e"],"2e8d7ba2175f47e280231533f7d3016249cea88b":["a02058e0eaba4bbd5d05e6b06b9522c0acfd1655","93c59ad5034eecd863f267bd75e1df7b8a51e427","d083e83f225b11e5fdd900e83d26ddb385b6955c"],"605b061fadf71aa6458c0005eaae83a98350c403":["2e8d7ba2175f47e280231533f7d3016249cea88b"],"93c59ad5034eecd863f267bd75e1df7b8a51e427":["85eb75e0c0203e44dcf686f35876cf6080f3a671","2553b00f699380c64959ccb27991289aae87be2e","d083e83f225b11e5fdd900e83d26ddb385b6955c"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["a02058e0eaba4bbd5d05e6b06b9522c0acfd1655","2e8d7ba2175f47e280231533f7d3016249cea88b","605b061fadf71aa6458c0005eaae83a98350c403"],"85eb75e0c0203e44dcf686f35876cf6080f3a671":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"2553b00f699380c64959ccb27991289aae87be2e":[],"d083e83f225b11e5fdd900e83d26ddb385b6955c":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["2553b00f699380c64959ccb27991289aae87be2e","d083e83f225b11e5fdd900e83d26ddb385b6955c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}