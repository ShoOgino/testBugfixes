{"path":"solr/core/src/java/org/apache/solr/handler/loader/JsonLoader.SingleThreadedJsonLoader#getDocMap(Map[String,Object],JSONParser,String,boolean).mjava","commits":[{"id":"ab10d7c14ce9f8db61956611a57a5a377362a633","date":1413903184,"type":0,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/loader/JsonLoader.SingleThreadedJsonLoader#getDocMap(Map[String,Object],JSONParser,String,boolean).mjava","pathOld":"/dev/null","sourceNew":"    private Map<String, Object> getDocMap(Map<String, Object> record, JSONParser parser, String srcField, boolean mapUniqueKeyOnly) {\n      Map result = record;\n      if(srcField != null && parser instanceof RecordingJSONParser){\n        //if srcFIeld specified extract it out first\n        result = new LinkedHashMap(record);\n        RecordingJSONParser rjp = (RecordingJSONParser) parser;\n        result.put(srcField, rjp.getBuf());\n        rjp.resetBuf();\n      }\n      if(mapUniqueKeyOnly){\n        SchemaField sf = req.getSchema().getUniqueKeyField();\n        if(sf == null) throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \"No uniqueKey specified in schema\");\n        String df = req.getParams().get(CommonParams.DF);\n        if(df == null)throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \"No 'df' specified in request\");\n        Map copy = new LinkedHashMap();\n        String uniqueField = (String) record.get(sf.getName());\n        if(uniqueField == null) uniqueField = UUID.randomUUID().toString().toLowerCase(Locale.ROOT);\n        copy.put(sf.getName(),uniqueField);\n        if(srcField != null && result.containsKey(srcField)){\n          copy.put(srcField, result.remove(srcField));\n        }\n        copy.put(df, result.values());\n        result = copy;\n      }\n\n\n      return result;\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0a22eafe3f72a4c2945eaad9547e6c78816978f4","date":1413956657,"type":0,"author":"Robert Muir","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/handler/loader/JsonLoader.SingleThreadedJsonLoader#getDocMap(Map[String,Object],JSONParser,String,boolean).mjava","pathOld":"/dev/null","sourceNew":"    private Map<String, Object> getDocMap(Map<String, Object> record, JSONParser parser, String srcField, boolean mapUniqueKeyOnly) {\n      Map result = record;\n      if(srcField != null && parser instanceof RecordingJSONParser){\n        //if srcFIeld specified extract it out first\n        result = new LinkedHashMap(record);\n        RecordingJSONParser rjp = (RecordingJSONParser) parser;\n        result.put(srcField, rjp.getBuf());\n        rjp.resetBuf();\n      }\n      if(mapUniqueKeyOnly){\n        SchemaField sf = req.getSchema().getUniqueKeyField();\n        if(sf == null) throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \"No uniqueKey specified in schema\");\n        String df = req.getParams().get(CommonParams.DF);\n        if(df == null)throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \"No 'df' specified in request\");\n        Map copy = new LinkedHashMap();\n        String uniqueField = (String) record.get(sf.getName());\n        if(uniqueField == null) uniqueField = UUID.randomUUID().toString().toLowerCase(Locale.ROOT);\n        copy.put(sf.getName(),uniqueField);\n        if(srcField != null && result.containsKey(srcField)){\n          copy.put(srcField, result.remove(srcField));\n        }\n        copy.put(df, result.values());\n        result = copy;\n      }\n\n\n      return result;\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6f5f8e831e266692b649e39dad7a64f525aa6d21","date":1427506910,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/loader/JsonLoader.SingleThreadedJsonLoader#getDocMap(Map[String,Object],JSONParser,String,boolean).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/loader/JsonLoader.SingleThreadedJsonLoader#getDocMap(Map[String,Object],JSONParser,String,boolean).mjava","sourceNew":"    private Map<String, Object> getDocMap(Map<String, Object> record, JSONParser parser, String srcField, boolean mapUniqueKeyOnly) {\n      Map result = record;\n      if (srcField != null && parser instanceof RecordingJSONParser) {\n        //if srcFIeld specified extract it out first\n        result = new LinkedHashMap(record);\n        RecordingJSONParser rjp = (RecordingJSONParser) parser;\n        result.put(srcField, rjp.getBuf());\n        rjp.resetBuf();\n      }\n      if (mapUniqueKeyOnly) {\n        SchemaField sf = req.getSchema().getUniqueKeyField();\n        if (sf == null)\n          throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \"No uniqueKey specified in schema\");\n        String df = req.getParams().get(CommonParams.DF);\n        if (df == null) throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \"No 'df' specified in request\");\n        Map copy = new LinkedHashMap();\n        String uniqueField = (String) record.get(sf.getName());\n        if (uniqueField == null) uniqueField = UUID.randomUUID().toString().toLowerCase(Locale.ROOT);\n        copy.put(sf.getName(), uniqueField);\n        if (srcField != null && result.containsKey(srcField)) {\n          copy.put(srcField, result.remove(srcField));\n        }\n        copy.put(df, result.values());\n        result = copy;\n      }\n\n\n      return result;\n    }\n\n","sourceOld":"    private Map<String, Object> getDocMap(Map<String, Object> record, JSONParser parser, String srcField, boolean mapUniqueKeyOnly) {\n      Map result = record;\n      if(srcField != null && parser instanceof RecordingJSONParser){\n        //if srcFIeld specified extract it out first\n        result = new LinkedHashMap(record);\n        RecordingJSONParser rjp = (RecordingJSONParser) parser;\n        result.put(srcField, rjp.getBuf());\n        rjp.resetBuf();\n      }\n      if(mapUniqueKeyOnly){\n        SchemaField sf = req.getSchema().getUniqueKeyField();\n        if(sf == null) throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \"No uniqueKey specified in schema\");\n        String df = req.getParams().get(CommonParams.DF);\n        if(df == null)throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \"No 'df' specified in request\");\n        Map copy = new LinkedHashMap();\n        String uniqueField = (String) record.get(sf.getName());\n        if(uniqueField == null) uniqueField = UUID.randomUUID().toString().toLowerCase(Locale.ROOT);\n        copy.put(sf.getName(),uniqueField);\n        if(srcField != null && result.containsKey(srcField)){\n          copy.put(srcField, result.remove(srcField));\n        }\n        copy.put(df, result.values());\n        result = copy;\n      }\n\n\n      return result;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","date":1427779360,"type":3,"author":"Ryan Ernst","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/handler/loader/JsonLoader.SingleThreadedJsonLoader#getDocMap(Map[String,Object],JSONParser,String,boolean).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/loader/JsonLoader.SingleThreadedJsonLoader#getDocMap(Map[String,Object],JSONParser,String,boolean).mjava","sourceNew":"    private Map<String, Object> getDocMap(Map<String, Object> record, JSONParser parser, String srcField, boolean mapUniqueKeyOnly) {\n      Map result = record;\n      if (srcField != null && parser instanceof RecordingJSONParser) {\n        //if srcFIeld specified extract it out first\n        result = new LinkedHashMap(record);\n        RecordingJSONParser rjp = (RecordingJSONParser) parser;\n        result.put(srcField, rjp.getBuf());\n        rjp.resetBuf();\n      }\n      if (mapUniqueKeyOnly) {\n        SchemaField sf = req.getSchema().getUniqueKeyField();\n        if (sf == null)\n          throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \"No uniqueKey specified in schema\");\n        String df = req.getParams().get(CommonParams.DF);\n        if (df == null) throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \"No 'df' specified in request\");\n        Map copy = new LinkedHashMap();\n        String uniqueField = (String) record.get(sf.getName());\n        if (uniqueField == null) uniqueField = UUID.randomUUID().toString().toLowerCase(Locale.ROOT);\n        copy.put(sf.getName(), uniqueField);\n        if (srcField != null && result.containsKey(srcField)) {\n          copy.put(srcField, result.remove(srcField));\n        }\n        copy.put(df, result.values());\n        result = copy;\n      }\n\n\n      return result;\n    }\n\n","sourceOld":"    private Map<String, Object> getDocMap(Map<String, Object> record, JSONParser parser, String srcField, boolean mapUniqueKeyOnly) {\n      Map result = record;\n      if(srcField != null && parser instanceof RecordingJSONParser){\n        //if srcFIeld specified extract it out first\n        result = new LinkedHashMap(record);\n        RecordingJSONParser rjp = (RecordingJSONParser) parser;\n        result.put(srcField, rjp.getBuf());\n        rjp.resetBuf();\n      }\n      if(mapUniqueKeyOnly){\n        SchemaField sf = req.getSchema().getUniqueKeyField();\n        if(sf == null) throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \"No uniqueKey specified in schema\");\n        String df = req.getParams().get(CommonParams.DF);\n        if(df == null)throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \"No 'df' specified in request\");\n        Map copy = new LinkedHashMap();\n        String uniqueField = (String) record.get(sf.getName());\n        if(uniqueField == null) uniqueField = UUID.randomUUID().toString().toLowerCase(Locale.ROOT);\n        copy.put(sf.getName(),uniqueField);\n        if(srcField != null && result.containsKey(srcField)){\n          copy.put(srcField, result.remove(srcField));\n        }\n        copy.put(df, result.values());\n        result = copy;\n      }\n\n\n      return result;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8582f07e9350eaeb33bf6c4617b8c9895d99c839","date":1591307386,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/loader/JsonLoader.SingleThreadedJsonLoader#getDocMap(Map[String,Object],JSONParser,String,boolean).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/loader/JsonLoader.SingleThreadedJsonLoader#getDocMap(Map[String,Object],JSONParser,String,boolean).mjava","sourceNew":"    @SuppressWarnings({\"unchecked\", \"rawtypes\"})\n    private Map<String, Object> getDocMap(Map<String, Object> record, JSONParser parser, String srcField, boolean mapUniqueKeyOnly) {\n      Map result = record;\n      if (srcField != null && parser instanceof RecordingJSONParser) {\n        //if srcFIeld specified extract it out first\n        result = new LinkedHashMap(record);\n        RecordingJSONParser rjp = (RecordingJSONParser) parser;\n        result.put(srcField, rjp.getBuf());\n        rjp.resetBuf();\n      }\n      if (mapUniqueKeyOnly) {\n        SchemaField sf = req.getSchema().getUniqueKeyField();\n        if (sf == null)\n          throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \"No uniqueKey specified in schema\");\n        String df = req.getParams().get(CommonParams.DF);\n        if (df == null) throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \"No 'df' specified in request\");\n        Map copy = new LinkedHashMap();\n        String uniqueField = (String) record.get(sf.getName());\n        if (uniqueField == null) uniqueField = UUID.randomUUID().toString().toLowerCase(Locale.ROOT);\n        copy.put(sf.getName(), uniqueField);\n        if (srcField != null && result.containsKey(srcField)) {\n          copy.put(srcField, result.remove(srcField));\n        }\n        copy.put(df, result.values());\n        result = copy;\n      }\n\n\n      return result;\n    }\n\n","sourceOld":"    private Map<String, Object> getDocMap(Map<String, Object> record, JSONParser parser, String srcField, boolean mapUniqueKeyOnly) {\n      Map result = record;\n      if (srcField != null && parser instanceof RecordingJSONParser) {\n        //if srcFIeld specified extract it out first\n        result = new LinkedHashMap(record);\n        RecordingJSONParser rjp = (RecordingJSONParser) parser;\n        result.put(srcField, rjp.getBuf());\n        rjp.resetBuf();\n      }\n      if (mapUniqueKeyOnly) {\n        SchemaField sf = req.getSchema().getUniqueKeyField();\n        if (sf == null)\n          throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \"No uniqueKey specified in schema\");\n        String df = req.getParams().get(CommonParams.DF);\n        if (df == null) throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \"No 'df' specified in request\");\n        Map copy = new LinkedHashMap();\n        String uniqueField = (String) record.get(sf.getName());\n        if (uniqueField == null) uniqueField = UUID.randomUUID().toString().toLowerCase(Locale.ROOT);\n        copy.put(sf.getName(), uniqueField);\n        if (srcField != null && result.containsKey(srcField)) {\n          copy.put(srcField, result.remove(srcField));\n        }\n        copy.put(df, result.values());\n        result = copy;\n      }\n\n\n      return result;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":["ab10d7c14ce9f8db61956611a57a5a377362a633","6f5f8e831e266692b649e39dad7a64f525aa6d21"],"0a22eafe3f72a4c2945eaad9547e6c78816978f4":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","ab10d7c14ce9f8db61956611a57a5a377362a633"],"6f5f8e831e266692b649e39dad7a64f525aa6d21":["ab10d7c14ce9f8db61956611a57a5a377362a633"],"ab10d7c14ce9f8db61956611a57a5a377362a633":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["8582f07e9350eaeb33bf6c4617b8c9895d99c839"],"8582f07e9350eaeb33bf6c4617b8c9895d99c839":["6f5f8e831e266692b649e39dad7a64f525aa6d21"]},"commit2Childs":{"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":[],"0a22eafe3f72a4c2945eaad9547e6c78816978f4":[],"6f5f8e831e266692b649e39dad7a64f525aa6d21":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","8582f07e9350eaeb33bf6c4617b8c9895d99c839"],"ab10d7c14ce9f8db61956611a57a5a377362a633":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","0a22eafe3f72a4c2945eaad9547e6c78816978f4","6f5f8e831e266692b649e39dad7a64f525aa6d21"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["0a22eafe3f72a4c2945eaad9547e6c78816978f4","ab10d7c14ce9f8db61956611a57a5a377362a633"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"8582f07e9350eaeb33bf6c4617b8c9895d99c839":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","0a22eafe3f72a4c2945eaad9547e6c78816978f4","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}