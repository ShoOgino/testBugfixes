{"path":"solr/core/src/test/org/apache/solr/schema/SpatialRPTFieldTypeTest#testShapeToFromStringGeoJSON().mjava","commits":[{"id":"03d8df7e95735d8cda6a255c42e0997c699bb176","date":1458157920,"type":0,"author":"Ryan McKinley","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/schema/SpatialRPTFieldTypeTest#testShapeToFromStringGeoJSON().mjava","pathOld":"/dev/null","sourceNew":"  public void testShapeToFromStringGeoJSON() throws Exception {\n    // Check WKT\n    setupRPTField(\"miles\", \"true\", \"GeoJSON\");\n\n    AbstractSpatialFieldType ftype = (AbstractSpatialFieldType)\n        h.getCore().getLatestSchema().getField(\"geo\").getType();\n\n    String json = \"{\\\"type\\\":\\\"Point\\\",\\\"coordinates\\\":[1,2]}\";\n    Shape shape = ftype.parseShape(json);\n    String out = ftype.shapeToString(shape);\n\n    assertEquals(json, out);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"23aec8f6a0b5a11d050d784a13871261bef7c925","date":1465332514,"type":3,"author":"David Smiley","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/schema/SpatialRPTFieldTypeTest#testShapeToFromStringGeoJSON().mjava","pathOld":"solr/core/src/test/org/apache/solr/schema/SpatialRPTFieldTypeTest#testShapeToFromStringGeoJSON().mjava","sourceNew":"  public void testShapeToFromStringGeoJSON() throws Exception {\n    setupRPTField(\"miles\", \"true\", \"GeoJSON\", random().nextBoolean()\n        ? new SpatialRecursivePrefixTreeFieldType() : new RptWithGeometrySpatialField());\n\n    AbstractSpatialFieldType ftype = (AbstractSpatialFieldType)\n        h.getCore().getLatestSchema().getField(\"geo\").getType();\n\n    String json = \"{\\\"type\\\":\\\"Point\\\",\\\"coordinates\\\":[1,2]}\";\n    Shape shape = ftype.parseShape(json);\n    String out = ftype.shapeToString(shape);\n\n    assertEquals(json, out);\n  }\n\n","sourceOld":"  public void testShapeToFromStringGeoJSON() throws Exception {\n    // Check WKT\n    setupRPTField(\"miles\", \"true\", \"GeoJSON\");\n\n    AbstractSpatialFieldType ftype = (AbstractSpatialFieldType)\n        h.getCore().getLatestSchema().getField(\"geo\").getType();\n\n    String json = \"{\\\"type\\\":\\\"Point\\\",\\\"coordinates\\\":[1,2]}\";\n    Shape shape = ftype.parseShape(json);\n    String out = ftype.shapeToString(shape);\n\n    assertEquals(json, out);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/schema/SpatialRPTFieldTypeTest#testShapeToFromStringGeoJSON().mjava","pathOld":"solr/core/src/test/org/apache/solr/schema/SpatialRPTFieldTypeTest#testShapeToFromStringGeoJSON().mjava","sourceNew":"  public void testShapeToFromStringGeoJSON() throws Exception {\n    setupRPTField(\"miles\", \"true\", \"GeoJSON\", random().nextBoolean()\n        ? new SpatialRecursivePrefixTreeFieldType() : new RptWithGeometrySpatialField());\n\n    AbstractSpatialFieldType ftype = (AbstractSpatialFieldType)\n        h.getCore().getLatestSchema().getField(\"geo\").getType();\n\n    String json = \"{\\\"type\\\":\\\"Point\\\",\\\"coordinates\\\":[1,2]}\";\n    Shape shape = ftype.parseShape(json);\n    String out = ftype.shapeToString(shape);\n\n    assertEquals(json, out);\n  }\n\n","sourceOld":"  public void testShapeToFromStringGeoJSON() throws Exception {\n    // Check WKT\n    setupRPTField(\"miles\", \"true\", \"GeoJSON\");\n\n    AbstractSpatialFieldType ftype = (AbstractSpatialFieldType)\n        h.getCore().getLatestSchema().getField(\"geo\").getType();\n\n    String json = \"{\\\"type\\\":\\\"Point\\\",\\\"coordinates\\\":[1,2]}\";\n    Shape shape = ftype.parseShape(json);\n    String out = ftype.shapeToString(shape);\n\n    assertEquals(json, out);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e98520789adb1d5ad05afb4956eca0944a929688","date":1592430701,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/schema/SpatialRPTFieldTypeTest#testShapeToFromStringGeoJSON().mjava","pathOld":"solr/core/src/test/org/apache/solr/schema/SpatialRPTFieldTypeTest#testShapeToFromStringGeoJSON().mjava","sourceNew":"  public void testShapeToFromStringGeoJSON() throws Exception {\n    setupRPTField(\"miles\", \"true\", \"GeoJSON\", random().nextBoolean()\n        ? new SpatialRecursivePrefixTreeFieldType() : new RptWithGeometrySpatialField());\n\n    @SuppressWarnings({\"rawtypes\"})\n    AbstractSpatialFieldType ftype = (AbstractSpatialFieldType)\n        h.getCore().getLatestSchema().getField(\"geo\").getType();\n\n    String json = \"{\\\"type\\\":\\\"Point\\\",\\\"coordinates\\\":[1,2]}\";\n    Shape shape = ftype.parseShape(json);\n    String out = ftype.shapeToString(shape);\n\n    assertEquals(json, out);\n  }\n\n","sourceOld":"  public void testShapeToFromStringGeoJSON() throws Exception {\n    setupRPTField(\"miles\", \"true\", \"GeoJSON\", random().nextBoolean()\n        ? new SpatialRecursivePrefixTreeFieldType() : new RptWithGeometrySpatialField());\n\n    AbstractSpatialFieldType ftype = (AbstractSpatialFieldType)\n        h.getCore().getLatestSchema().getField(\"geo\").getType();\n\n    String json = \"{\\\"type\\\":\\\"Point\\\",\\\"coordinates\\\":[1,2]}\";\n    Shape shape = ftype.parseShape(json);\n    String out = ftype.shapeToString(shape);\n\n    assertEquals(json, out);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"03d8df7e95735d8cda6a255c42e0997c699bb176":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"23aec8f6a0b5a11d050d784a13871261bef7c925":["03d8df7e95735d8cda6a255c42e0997c699bb176"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["03d8df7e95735d8cda6a255c42e0997c699bb176","23aec8f6a0b5a11d050d784a13871261bef7c925"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["e98520789adb1d5ad05afb4956eca0944a929688"],"e98520789adb1d5ad05afb4956eca0944a929688":["23aec8f6a0b5a11d050d784a13871261bef7c925"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["03d8df7e95735d8cda6a255c42e0997c699bb176"],"03d8df7e95735d8cda6a255c42e0997c699bb176":["23aec8f6a0b5a11d050d784a13871261bef7c925","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"23aec8f6a0b5a11d050d784a13871261bef7c925":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","e98520789adb1d5ad05afb4956eca0944a929688"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"e98520789adb1d5ad05afb4956eca0944a929688":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}