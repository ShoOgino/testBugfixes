{"path":"src/java/org/apache/lucene/index/SegmentInfo#getUseCompoundFile().mjava","commits":[{"id":"284c1d3c8b19931bf6f312fae7470487f5d9e580","date":1163805527,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/SegmentInfo#getUseCompoundFile().mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Returns true if this segment is stored as a compound\n   * file; else, false.\n   *\n   * @param directory directory to check.  This parameter is\n   * only used when the segment was written before version\n   * XXX (at which point compound file or not became stored\n   * in the segments info file).\n   */\n  boolean getUseCompoundFile() throws IOException {\n    if (isCompoundFile == -1) {\n      return false;\n    } else if (isCompoundFile == 1) {\n      return true;\n    } else {\n      return dir.fileExists(name + \".cfs\");\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"79dbdf4d83edb46b4f14d31e026a0be0f33141e4","date":1163807027,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/SegmentInfo#getUseCompoundFile().mjava","pathOld":"src/java/org/apache/lucene/index/SegmentInfo#getUseCompoundFile().mjava","sourceNew":"  /**\n   * Returns true if this segment is stored as a compound\n   * file; else, false.\n   *\n   * @param directory directory to check.  This parameter is\n   * only used when the segment was written before version\n   * 2.1 (at which point compound file or not became stored\n   * in the segments info file).\n   */\n  boolean getUseCompoundFile() throws IOException {\n    if (isCompoundFile == -1) {\n      return false;\n    } else if (isCompoundFile == 1) {\n      return true;\n    } else {\n      return dir.fileExists(name + \".cfs\");\n    }\n  }\n\n","sourceOld":"  /**\n   * Returns true if this segment is stored as a compound\n   * file; else, false.\n   *\n   * @param directory directory to check.  This parameter is\n   * only used when the segment was written before version\n   * XXX (at which point compound file or not became stored\n   * in the segments info file).\n   */\n  boolean getUseCompoundFile() throws IOException {\n    if (isCompoundFile == -1) {\n      return false;\n    } else if (isCompoundFile == 1) {\n      return true;\n    } else {\n      return dir.fileExists(name + \".cfs\");\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8969a184df55d25d61e85be785987fbf830d4028","date":1168143561,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/SegmentInfo#getUseCompoundFile().mjava","pathOld":"src/java/org/apache/lucene/index/SegmentInfo#getUseCompoundFile().mjava","sourceNew":"  /**\n   * Returns true if this segment is stored as a compound\n   * file; else, false.\n   */\n  boolean getUseCompoundFile() throws IOException {\n    if (isCompoundFile == -1) {\n      return false;\n    } else if (isCompoundFile == 1) {\n      return true;\n    } else {\n      return dir.fileExists(name + \".cfs\");\n    }\n  }\n\n","sourceOld":"  /**\n   * Returns true if this segment is stored as a compound\n   * file; else, false.\n   *\n   * @param directory directory to check.  This parameter is\n   * only used when the segment was written before version\n   * 2.1 (at which point compound file or not became stored\n   * in the segments info file).\n   */\n  boolean getUseCompoundFile() throws IOException {\n    if (isCompoundFile == -1) {\n      return false;\n    } else if (isCompoundFile == 1) {\n      return true;\n    } else {\n      return dir.fileExists(name + \".cfs\");\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8b6187898fc4413ccd18229711786550a280383c","date":1173776782,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/SegmentInfo#getUseCompoundFile().mjava","pathOld":"src/java/org/apache/lucene/index/SegmentInfo#getUseCompoundFile().mjava","sourceNew":"  /**\n   * Returns true if this segment is stored as a compound\n   * file; else, false.\n   */\n  boolean getUseCompoundFile() throws IOException {\n    if (isCompoundFile == -1) {\n      return false;\n    } else if (isCompoundFile == 1) {\n      return true;\n    } else {\n      return dir.fileExists(name + \".\" + IndexFileNames.COMPOUND_FILE_EXTENSION);\n    }\n  }\n\n","sourceOld":"  /**\n   * Returns true if this segment is stored as a compound\n   * file; else, false.\n   */\n  boolean getUseCompoundFile() throws IOException {\n    if (isCompoundFile == -1) {\n      return false;\n    } else if (isCompoundFile == 1) {\n      return true;\n    } else {\n      return dir.fileExists(name + \".cfs\");\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b685e89f45e34ea31f9ca89912e4f29038818ff6","date":1173986546,"type":3,"author":"Doron Cohen","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/SegmentInfo#getUseCompoundFile().mjava","pathOld":"src/java/org/apache/lucene/index/SegmentInfo#getUseCompoundFile().mjava","sourceNew":"  /**\n   * Returns true if this segment is stored as a compound\n   * file; else, false.\n   */\n  boolean getUseCompoundFile() throws IOException {\n    if (isCompoundFile == NO) {\n      return false;\n    } else if (isCompoundFile == YES) {\n      return true;\n    } else {\n      return dir.fileExists(name + \".\" + IndexFileNames.COMPOUND_FILE_EXTENSION);\n    }\n  }\n\n","sourceOld":"  /**\n   * Returns true if this segment is stored as a compound\n   * file; else, false.\n   */\n  boolean getUseCompoundFile() throws IOException {\n    if (isCompoundFile == -1) {\n      return false;\n    } else if (isCompoundFile == 1) {\n      return true;\n    } else {\n      return dir.fileExists(name + \".\" + IndexFileNames.COMPOUND_FILE_EXTENSION);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f33fc116e28d7704378c9dd333711753bd0c9706","date":1248010179,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/SegmentInfo#getUseCompoundFile().mjava","pathOld":"src/java/org/apache/lucene/index/SegmentInfo#getUseCompoundFile().mjava","sourceNew":"  /**\n   * Returns true if this segment is stored as a compound\n   * file; else, false.\n   */\n  public boolean getUseCompoundFile() throws IOException {\n    if (isCompoundFile == NO) {\n      return false;\n    } else if (isCompoundFile == YES) {\n      return true;\n    } else {\n      return dir.fileExists(name + \".\" + IndexFileNames.COMPOUND_FILE_EXTENSION);\n    }\n  }\n\n","sourceOld":"  /**\n   * Returns true if this segment is stored as a compound\n   * file; else, false.\n   */\n  boolean getUseCompoundFile() throws IOException {\n    if (isCompoundFile == NO) {\n      return false;\n    } else if (isCompoundFile == YES) {\n      return true;\n    } else {\n      return dir.fileExists(name + \".\" + IndexFileNames.COMPOUND_FILE_EXTENSION);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"775efee7f959e0dd3df7960b93767d9e00b78751","date":1267203159,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/SegmentInfo#getUseCompoundFile().mjava","pathOld":"src/java/org/apache/lucene/index/SegmentInfo#getUseCompoundFile().mjava","sourceNew":"  /**\n   * Returns true if this segment is stored as a compound\n   * file; else, false.\n   */\n  public boolean getUseCompoundFile() throws IOException {\n    if (isCompoundFile == NO) {\n      return false;\n    } else if (isCompoundFile == YES) {\n      return true;\n    } else {\n      return dir.fileExists(IndexFileNames.segmentFileName(name, IndexFileNames.COMPOUND_FILE_EXTENSION));\n    }\n  }\n\n","sourceOld":"  /**\n   * Returns true if this segment is stored as a compound\n   * file; else, false.\n   */\n  public boolean getUseCompoundFile() throws IOException {\n    if (isCompoundFile == NO) {\n      return false;\n    } else if (isCompoundFile == YES) {\n      return true;\n    } else {\n      return dir.fileExists(name + \".\" + IndexFileNames.COMPOUND_FILE_EXTENSION);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/SegmentInfo#getUseCompoundFile().mjava","pathOld":"src/java/org/apache/lucene/index/SegmentInfo#getUseCompoundFile().mjava","sourceNew":"  /**\n   * Returns true if this segment is stored as a compound\n   * file; else, false.\n   */\n  public boolean getUseCompoundFile() throws IOException {\n    if (isCompoundFile == NO) {\n      return false;\n    } else if (isCompoundFile == YES) {\n      return true;\n    } else {\n      return dir.fileExists(IndexFileNames.segmentFileName(name, IndexFileNames.COMPOUND_FILE_EXTENSION));\n    }\n  }\n\n","sourceOld":"  /**\n   * Returns true if this segment is stored as a compound\n   * file; else, false.\n   */\n  public boolean getUseCompoundFile() throws IOException {\n    if (isCompoundFile == NO) {\n      return false;\n    } else if (isCompoundFile == YES) {\n      return true;\n    } else {\n      return dir.fileExists(IndexFileNames.segmentFileName(name, IndexFileNames.COMPOUND_FILE_EXTENSION));\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"f33fc116e28d7704378c9dd333711753bd0c9706":["b685e89f45e34ea31f9ca89912e4f29038818ff6"],"79dbdf4d83edb46b4f14d31e026a0be0f33141e4":["284c1d3c8b19931bf6f312fae7470487f5d9e580"],"284c1d3c8b19931bf6f312fae7470487f5d9e580":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"775efee7f959e0dd3df7960b93767d9e00b78751":["f33fc116e28d7704378c9dd333711753bd0c9706"],"b685e89f45e34ea31f9ca89912e4f29038818ff6":["8b6187898fc4413ccd18229711786550a280383c"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"8b6187898fc4413ccd18229711786550a280383c":["8969a184df55d25d61e85be785987fbf830d4028"],"8969a184df55d25d61e85be785987fbf830d4028":["79dbdf4d83edb46b4f14d31e026a0be0f33141e4"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["775efee7f959e0dd3df7960b93767d9e00b78751"]},"commit2Childs":{"f33fc116e28d7704378c9dd333711753bd0c9706":["775efee7f959e0dd3df7960b93767d9e00b78751"],"79dbdf4d83edb46b4f14d31e026a0be0f33141e4":["8969a184df55d25d61e85be785987fbf830d4028"],"284c1d3c8b19931bf6f312fae7470487f5d9e580":["79dbdf4d83edb46b4f14d31e026a0be0f33141e4"],"b685e89f45e34ea31f9ca89912e4f29038818ff6":["f33fc116e28d7704378c9dd333711753bd0c9706"],"775efee7f959e0dd3df7960b93767d9e00b78751":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["284c1d3c8b19931bf6f312fae7470487f5d9e580"],"8b6187898fc4413ccd18229711786550a280383c":["b685e89f45e34ea31f9ca89912e4f29038818ff6"],"8969a184df55d25d61e85be785987fbf830d4028":["8b6187898fc4413ccd18229711786550a280383c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}