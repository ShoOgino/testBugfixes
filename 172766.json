{"path":"lucene/core/src/java/org/apache/lucene/document/FeatureField#newSaturationQuery(String,String,float,float).mjava","commits":[{"id":"966dd6f2a1942842f7efe2bdcc7537ea6597a290","date":1521543449,"type":0,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/document/FeatureField#newSaturationQuery(String,String,float,float).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Return a new {@link Query} that will score documents as\n   * {@code weight * S / (S + pivot)} where S is the value of the static feature.\n   * @param fieldName   field that stores features\n   * @param featureName name of the feature\n   * @param weight      weight to give to this feature, must be in (0,64]\n   * @param pivot       feature value that would give a score contribution equal to weight/2, must be in (0, +Infinity)\n   * @throws IllegalArgumentException if weight is not in (0,64] or pivot is not in (0, +Infinity)\n   */\n  public static Query newSaturationQuery(String fieldName, String featureName, float weight, float pivot) {\n    if (weight <= 0 || weight > MAX_WEIGHT) {\n      throw new IllegalArgumentException(\"weight must be in (0, \" + MAX_WEIGHT + \"], got: \" + weight);\n    }\n    if (pivot <= 0 || Float.isFinite(pivot) == false) {\n      throw new IllegalArgumentException(\"pivot must be > 0, got: \" + pivot);\n    }\n    Query q = new FeatureQuery(fieldName, featureName, new SaturationFunction(pivot));\n    if (weight != 1f) {\n      q = new BoostQuery(q, weight);\n    }\n    return q;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6815b5b5d6334b2245dd7be2f8b6cca949bf7f43","date":1521731438,"type":0,"author":"Karl Wright","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/document/FeatureField#newSaturationQuery(String,String,float,float).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Return a new {@link Query} that will score documents as\n   * {@code weight * S / (S + pivot)} where S is the value of the static feature.\n   * @param fieldName   field that stores features\n   * @param featureName name of the feature\n   * @param weight      weight to give to this feature, must be in (0,64]\n   * @param pivot       feature value that would give a score contribution equal to weight/2, must be in (0, +Infinity)\n   * @throws IllegalArgumentException if weight is not in (0,64] or pivot is not in (0, +Infinity)\n   */\n  public static Query newSaturationQuery(String fieldName, String featureName, float weight, float pivot) {\n    if (weight <= 0 || weight > MAX_WEIGHT) {\n      throw new IllegalArgumentException(\"weight must be in (0, \" + MAX_WEIGHT + \"], got: \" + weight);\n    }\n    if (pivot <= 0 || Float.isFinite(pivot) == false) {\n      throw new IllegalArgumentException(\"pivot must be > 0, got: \" + pivot);\n    }\n    Query q = new FeatureQuery(fieldName, featureName, new SaturationFunction(pivot));\n    if (weight != 1f) {\n      q = new BoostQuery(q, weight);\n    }\n    return q;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"808f86d4b1e5fa52de29b80a5e44b1dcc79ea302","date":1526484586,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/document/FeatureField#newSaturationQuery(String,String,float,float).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/document/FeatureField#newSaturationQuery(String,String,float,float).mjava","sourceNew":"  /**\n   * Return a new {@link Query} that will score documents as\n   * {@code weight * S / (S + pivot)} where S is the value of the static feature.\n   * @param fieldName   field that stores features\n   * @param featureName name of the feature\n   * @param weight      weight to give to this feature, must be in (0,64]\n   * @param pivot       feature value that would give a score contribution equal to weight/2, must be in (0, +Infinity)\n   * @throws IllegalArgumentException if weight is not in (0,64] or pivot is not in (0, +Infinity)\n   */\n  public static Query newSaturationQuery(String fieldName, String featureName, float weight, float pivot) {\n    return newSaturationQuery(fieldName, featureName, weight, Float.valueOf(pivot));\n  }\n\n","sourceOld":"  /**\n   * Return a new {@link Query} that will score documents as\n   * {@code weight * S / (S + pivot)} where S is the value of the static feature.\n   * @param fieldName   field that stores features\n   * @param featureName name of the feature\n   * @param weight      weight to give to this feature, must be in (0,64]\n   * @param pivot       feature value that would give a score contribution equal to weight/2, must be in (0, +Infinity)\n   * @throws IllegalArgumentException if weight is not in (0,64] or pivot is not in (0, +Infinity)\n   */\n  public static Query newSaturationQuery(String fieldName, String featureName, float weight, float pivot) {\n    if (weight <= 0 || weight > MAX_WEIGHT) {\n      throw new IllegalArgumentException(\"weight must be in (0, \" + MAX_WEIGHT + \"], got: \" + weight);\n    }\n    if (pivot <= 0 || Float.isFinite(pivot) == false) {\n      throw new IllegalArgumentException(\"pivot must be > 0, got: \" + pivot);\n    }\n    Query q = new FeatureQuery(fieldName, featureName, new SaturationFunction(pivot));\n    if (weight != 1f) {\n      q = new BoostQuery(q, weight);\n    }\n    return q;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"6815b5b5d6334b2245dd7be2f8b6cca949bf7f43":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","966dd6f2a1942842f7efe2bdcc7537ea6597a290"],"966dd6f2a1942842f7efe2bdcc7537ea6597a290":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"808f86d4b1e5fa52de29b80a5e44b1dcc79ea302":["6815b5b5d6334b2245dd7be2f8b6cca949bf7f43"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["808f86d4b1e5fa52de29b80a5e44b1dcc79ea302"]},"commit2Childs":{"6815b5b5d6334b2245dd7be2f8b6cca949bf7f43":["808f86d4b1e5fa52de29b80a5e44b1dcc79ea302"],"966dd6f2a1942842f7efe2bdcc7537ea6597a290":["6815b5b5d6334b2245dd7be2f8b6cca949bf7f43"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["6815b5b5d6334b2245dd7be2f8b6cca949bf7f43","966dd6f2a1942842f7efe2bdcc7537ea6597a290"],"808f86d4b1e5fa52de29b80a5e44b1dcc79ea302":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}