{"path":"lucene/core/src/java/org/apache/lucene/util/bkd/OfflinePointWriter#OfflinePointWriter(Directory,IndexOutput,int,long,boolean).mjava","commits":[{"id":"9a5a0f27d9486cd33de88627ed3d2ff8dc5074ca","date":1457777566,"type":1,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/bkd/OfflinePointWriter#OfflinePointWriter(Directory,IndexOutput,int,long,boolean).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/bkd/OfflinePointWriter#OfflinePointWriter(Directory,IndexOutput,int,long).mjava","sourceNew":"  /** Initializes on an already written/closed file, just so consumers can use {@link #getReader} to read the file. */\n  public OfflinePointWriter(Directory tempDir, IndexOutput out, int packedBytesLength, long count, boolean longOrds) {\n    this.out = out;\n    this.tempDir = tempDir;\n    this.packedBytesLength = packedBytesLength;\n    this.count = count;\n    closed = true;\n    this.longOrds = longOrds;\n  }\n\n","sourceOld":"  /** Initializes on an already written/closed file, just so consumers can use {@link #getReader} to read the file. */\n  public OfflinePointWriter(Directory tempDir, IndexOutput out, int packedBytesLength, long count) {\n    this.out = out;\n    this.tempDir = tempDir;\n    this.packedBytesLength = packedBytesLength;\n    this.count = count;\n    closed = true;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"416f9e28900210be57b69bc12e2954fb98ed7ebe","date":1458479803,"type":5,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/bkd/OfflinePointWriter#OfflinePointWriter(Directory,IndexOutput,int,long,boolean,boolean).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/bkd/OfflinePointWriter#OfflinePointWriter(Directory,IndexOutput,int,long,boolean).mjava","sourceNew":"  /** Initializes on an already written/closed file, just so consumers can use {@link #getReader} to read the file. */\n  public OfflinePointWriter(Directory tempDir, IndexOutput out, int packedBytesLength, long count, boolean longOrds, boolean singleValuePerDoc) {\n    this.out = out;\n    this.tempDir = tempDir;\n    this.packedBytesLength = packedBytesLength;\n    this.count = count;\n    closed = true;\n    this.longOrds = longOrds;\n    this.singleValuePerDoc = singleValuePerDoc;\n  }\n\n","sourceOld":"  /** Initializes on an already written/closed file, just so consumers can use {@link #getReader} to read the file. */\n  public OfflinePointWriter(Directory tempDir, IndexOutput out, int packedBytesLength, long count, boolean longOrds) {\n    this.out = out;\n    this.tempDir = tempDir;\n    this.packedBytesLength = packedBytesLength;\n    this.count = count;\n    closed = true;\n    this.longOrds = longOrds;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"9a5a0f27d9486cd33de88627ed3d2ff8dc5074ca":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"416f9e28900210be57b69bc12e2954fb98ed7ebe":["9a5a0f27d9486cd33de88627ed3d2ff8dc5074ca"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["416f9e28900210be57b69bc12e2954fb98ed7ebe"]},"commit2Childs":{"9a5a0f27d9486cd33de88627ed3d2ff8dc5074ca":["416f9e28900210be57b69bc12e2954fb98ed7ebe"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9a5a0f27d9486cd33de88627ed3d2ff8dc5074ca"],"416f9e28900210be57b69bc12e2954fb98ed7ebe":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}