{"path":"lucene/luke/src/java/org/apache/lucene/luke/models/util/IndexUtils#countTerms(IndexReader,Collection[String]).mjava","commits":[{"id":"f554f2d9b5456248ab6467b9d4f6015686797a6c","date":1554891357,"type":0,"author":"Tomoko Uchida","isMerge":false,"pathNew":"lucene/luke/src/java/org/apache/lucene/luke/models/util/IndexUtils#countTerms(IndexReader,Collection[String]).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Collect all terms and their counts in the specified fields.\n   *\n   * @param reader - index reader\n   * @param fields - field names\n   * @return a map contains terms and their occurrence frequencies\n   * @throws IOException - if there is a low level IO error.\n   */\n  public static Map<String, Long> countTerms(IndexReader reader, Collection<String> fields) throws IOException {\n    Map<String, Long> res = new HashMap<>();\n    for (String field : fields) {\n      if (!res.containsKey(field)) {\n        res.put(field, 0L);\n      }\n      Terms terms = MultiTerms.getTerms(reader, field);\n      if (terms != null) {\n        TermsEnum te = terms.iterator();\n        while (te.next() != null) {\n          res.put(field, res.get(field) + 1);\n        }\n      }\n    }\n    return res;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"f554f2d9b5456248ab6467b9d4f6015686797a6c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["f554f2d9b5456248ab6467b9d4f6015686797a6c"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["f554f2d9b5456248ab6467b9d4f6015686797a6c"],"f554f2d9b5456248ab6467b9d4f6015686797a6c":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}