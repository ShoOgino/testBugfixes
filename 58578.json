{"path":"lucene/analysis/common/src/test/org/apache/lucene/analysis/charfilter/HTMLStripCharFilterTest#testReserved().mjava","commits":[{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/charfilter/HTMLStripCharFilterTest#testReserved().mjava","pathOld":"modules/analysis/common/src/test/org/apache/lucene/analysis/charfilter/HTMLStripCharFilterTest#testReserved().mjava","sourceNew":"  public void testReserved() throws Exception {\n    String test = \"aaa bbb <reserved ccc=\\\"ddddd\\\"> eeee </reserved> ffff <reserved ggg=\\\"hhhh\\\"/> <other/>\";\n    Set<String> set = new HashSet<String>();\n    set.add(\"reserved\");\n    Reader reader = new HTMLStripCharFilter(CharReader.get(new StringReader(test)), set);\n    StringBuilder builder = new StringBuilder();\n    int ch = 0;\n    while ((ch = reader.read()) != -1){\n      builder.append((char)ch);\n    }\n    String result = builder.toString();\n    // System.out.println(\"Result: \" + result);\n    assertTrue(\"Escaped tag not preserved: \"  + result.indexOf(\"reserved\"), result.indexOf(\"reserved\") == 9);\n    assertTrue(\"Escaped tag not preserved: \" + result.indexOf(\"reserved\", 15), result.indexOf(\"reserved\", 15) == 38);\n    assertTrue(\"Escaped tag not preserved: \" + result.indexOf(\"reserved\", 41), result.indexOf(\"reserved\", 41) == 54);\n    assertTrue(\"Other tag should be removed\", result.indexOf(\"other\") == -1);\n  }\n\n","sourceOld":"  public void testReserved() throws Exception {\n    String test = \"aaa bbb <reserved ccc=\\\"ddddd\\\"> eeee </reserved> ffff <reserved ggg=\\\"hhhh\\\"/> <other/>\";\n    Set<String> set = new HashSet<String>();\n    set.add(\"reserved\");\n    Reader reader = new HTMLStripCharFilter(CharReader.get(new StringReader(test)), set);\n    StringBuilder builder = new StringBuilder();\n    int ch = 0;\n    while ((ch = reader.read()) != -1){\n      builder.append((char)ch);\n    }\n    String result = builder.toString();\n    // System.out.println(\"Result: \" + result);\n    assertTrue(\"Escaped tag not preserved: \"  + result.indexOf(\"reserved\"), result.indexOf(\"reserved\") == 9);\n    assertTrue(\"Escaped tag not preserved: \" + result.indexOf(\"reserved\", 15), result.indexOf(\"reserved\", 15) == 38);\n    assertTrue(\"Escaped tag not preserved: \" + result.indexOf(\"reserved\", 41), result.indexOf(\"reserved\", 41) == 54);\n    assertTrue(\"Other tag should be removed\", result.indexOf(\"other\") == -1);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fc706b1e03a539d44d99998108feb684bb44cbb2","date":1342522408,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/charfilter/HTMLStripCharFilterTest#testReserved().mjava","pathOld":"lucene/analysis/common/src/test/org/apache/lucene/analysis/charfilter/HTMLStripCharFilterTest#testReserved().mjava","sourceNew":"  public void testReserved() throws Exception {\n    String test = \"aaa bbb <reserved ccc=\\\"ddddd\\\"> eeee </reserved> ffff <reserved ggg=\\\"hhhh\\\"/> <other/>\";\n    Set<String> set = new HashSet<String>();\n    set.add(\"reserved\");\n    Reader reader = new HTMLStripCharFilter(new StringReader(test), set);\n    StringBuilder builder = new StringBuilder();\n    int ch = 0;\n    while ((ch = reader.read()) != -1){\n      builder.append((char)ch);\n    }\n    String result = builder.toString();\n    // System.out.println(\"Result: \" + result);\n    assertTrue(\"Escaped tag not preserved: \"  + result.indexOf(\"reserved\"), result.indexOf(\"reserved\") == 9);\n    assertTrue(\"Escaped tag not preserved: \" + result.indexOf(\"reserved\", 15), result.indexOf(\"reserved\", 15) == 38);\n    assertTrue(\"Escaped tag not preserved: \" + result.indexOf(\"reserved\", 41), result.indexOf(\"reserved\", 41) == 54);\n    assertTrue(\"Other tag should be removed\", result.indexOf(\"other\") == -1);\n  }\n\n","sourceOld":"  public void testReserved() throws Exception {\n    String test = \"aaa bbb <reserved ccc=\\\"ddddd\\\"> eeee </reserved> ffff <reserved ggg=\\\"hhhh\\\"/> <other/>\";\n    Set<String> set = new HashSet<String>();\n    set.add(\"reserved\");\n    Reader reader = new HTMLStripCharFilter(CharReader.get(new StringReader(test)), set);\n    StringBuilder builder = new StringBuilder();\n    int ch = 0;\n    while ((ch = reader.read()) != -1){\n      builder.append((char)ch);\n    }\n    String result = builder.toString();\n    // System.out.println(\"Result: \" + result);\n    assertTrue(\"Escaped tag not preserved: \"  + result.indexOf(\"reserved\"), result.indexOf(\"reserved\") == 9);\n    assertTrue(\"Escaped tag not preserved: \" + result.indexOf(\"reserved\", 15), result.indexOf(\"reserved\", 15) == 38);\n    assertTrue(\"Escaped tag not preserved: \" + result.indexOf(\"reserved\", 41), result.indexOf(\"reserved\", 41) == 54);\n    assertTrue(\"Other tag should be removed\", result.indexOf(\"other\") == -1);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fe33227f6805edab2036cbb80645cc4e2d1fa424","date":1342713534,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/charfilter/HTMLStripCharFilterTest#testReserved().mjava","pathOld":"lucene/analysis/common/src/test/org/apache/lucene/analysis/charfilter/HTMLStripCharFilterTest#testReserved().mjava","sourceNew":"  public void testReserved() throws Exception {\n    String test = \"aaa bbb <reserved ccc=\\\"ddddd\\\"> eeee </reserved> ffff <reserved ggg=\\\"hhhh\\\"/> <other/>\";\n    Set<String> set = new HashSet<String>();\n    set.add(\"reserved\");\n    Reader reader = new HTMLStripCharFilter(new StringReader(test), set);\n    StringBuilder builder = new StringBuilder();\n    int ch = 0;\n    while ((ch = reader.read()) != -1){\n      builder.append((char)ch);\n    }\n    String result = builder.toString();\n    // System.out.println(\"Result: \" + result);\n    assertTrue(\"Escaped tag not preserved: \"  + result.indexOf(\"reserved\"), result.indexOf(\"reserved\") == 9);\n    assertTrue(\"Escaped tag not preserved: \" + result.indexOf(\"reserved\", 15), result.indexOf(\"reserved\", 15) == 38);\n    assertTrue(\"Escaped tag not preserved: \" + result.indexOf(\"reserved\", 41), result.indexOf(\"reserved\", 41) == 54);\n    assertTrue(\"Other tag should be removed\", result.indexOf(\"other\") == -1);\n  }\n\n","sourceOld":"  public void testReserved() throws Exception {\n    String test = \"aaa bbb <reserved ccc=\\\"ddddd\\\"> eeee </reserved> ffff <reserved ggg=\\\"hhhh\\\"/> <other/>\";\n    Set<String> set = new HashSet<String>();\n    set.add(\"reserved\");\n    Reader reader = new HTMLStripCharFilter(CharReader.get(new StringReader(test)), set);\n    StringBuilder builder = new StringBuilder();\n    int ch = 0;\n    while ((ch = reader.read()) != -1){\n      builder.append((char)ch);\n    }\n    String result = builder.toString();\n    // System.out.println(\"Result: \" + result);\n    assertTrue(\"Escaped tag not preserved: \"  + result.indexOf(\"reserved\"), result.indexOf(\"reserved\") == 9);\n    assertTrue(\"Escaped tag not preserved: \" + result.indexOf(\"reserved\", 15), result.indexOf(\"reserved\", 15) == 38);\n    assertTrue(\"Escaped tag not preserved: \" + result.indexOf(\"reserved\", 41), result.indexOf(\"reserved\", 41) == 54);\n    assertTrue(\"Other tag should be removed\", result.indexOf(\"other\") == -1);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"aba371508186796cc6151d8223a5b4e16d02e26e","date":1343474871,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/charfilter/HTMLStripCharFilterTest#testReserved().mjava","pathOld":"lucene/analysis/common/src/test/org/apache/lucene/analysis/charfilter/HTMLStripCharFilterTest#testReserved().mjava","sourceNew":"  public void testReserved() throws Exception {\n    String test = \"aaa bbb <reserved ccc=\\\"ddddd\\\"> eeee </reserved> ffff <reserved ggg=\\\"hhhh\\\"/> <other/>\";\n    Set<String> set = new HashSet<String>();\n    set.add(\"reserved\");\n    Reader reader = new HTMLStripCharFilter(new StringReader(test), set);\n    StringBuilder builder = new StringBuilder();\n    int ch = 0;\n    while ((ch = reader.read()) != -1){\n      builder.append((char)ch);\n    }\n    String result = builder.toString();\n    // System.out.println(\"Result: \" + result);\n    assertTrue(\"Escaped tag not preserved: \"  + result.indexOf(\"reserved\"), result.indexOf(\"reserved\") == 9);\n    assertTrue(\"Escaped tag not preserved: \" + result.indexOf(\"reserved\", 15), result.indexOf(\"reserved\", 15) == 38);\n    assertTrue(\"Escaped tag not preserved: \" + result.indexOf(\"reserved\", 41), result.indexOf(\"reserved\", 41) == 54);\n    assertTrue(\"Other tag should be removed\", result.indexOf(\"other\") == -1);\n  }\n\n","sourceOld":"  public void testReserved() throws Exception {\n    String test = \"aaa bbb <reserved ccc=\\\"ddddd\\\"> eeee </reserved> ffff <reserved ggg=\\\"hhhh\\\"/> <other/>\";\n    Set<String> set = new HashSet<String>();\n    set.add(\"reserved\");\n    Reader reader = new HTMLStripCharFilter(CharReader.get(new StringReader(test)), set);\n    StringBuilder builder = new StringBuilder();\n    int ch = 0;\n    while ((ch = reader.read()) != -1){\n      builder.append((char)ch);\n    }\n    String result = builder.toString();\n    // System.out.println(\"Result: \" + result);\n    assertTrue(\"Escaped tag not preserved: \"  + result.indexOf(\"reserved\"), result.indexOf(\"reserved\") == 9);\n    assertTrue(\"Escaped tag not preserved: \" + result.indexOf(\"reserved\", 15), result.indexOf(\"reserved\", 15) == 38);\n    assertTrue(\"Escaped tag not preserved: \" + result.indexOf(\"reserved\", 41), result.indexOf(\"reserved\", 41) == 54);\n    assertTrue(\"Other tag should be removed\", result.indexOf(\"other\") == -1);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"634f330c54fd3f9f491d52036dc3f40b4f4d8934","date":1394635157,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/charfilter/HTMLStripCharFilterTest#testReserved().mjava","pathOld":"lucene/analysis/common/src/test/org/apache/lucene/analysis/charfilter/HTMLStripCharFilterTest#testReserved().mjava","sourceNew":"  public void testReserved() throws Exception {\n    String test = \"aaa bbb <reserved ccc=\\\"ddddd\\\"> eeee </reserved> ffff <reserved ggg=\\\"hhhh\\\"/> <other/>\";\n    Set<String> set = new HashSet<>();\n    set.add(\"reserved\");\n    Reader reader = new HTMLStripCharFilter(new StringReader(test), set);\n    StringBuilder builder = new StringBuilder();\n    int ch = 0;\n    while ((ch = reader.read()) != -1){\n      builder.append((char)ch);\n    }\n    String result = builder.toString();\n    // System.out.println(\"Result: \" + result);\n    assertTrue(\"Escaped tag not preserved: \"  + result.indexOf(\"reserved\"), result.indexOf(\"reserved\") == 9);\n    assertTrue(\"Escaped tag not preserved: \" + result.indexOf(\"reserved\", 15), result.indexOf(\"reserved\", 15) == 38);\n    assertTrue(\"Escaped tag not preserved: \" + result.indexOf(\"reserved\", 41), result.indexOf(\"reserved\", 41) == 54);\n    assertTrue(\"Other tag should be removed\", result.indexOf(\"other\") == -1);\n  }\n\n","sourceOld":"  public void testReserved() throws Exception {\n    String test = \"aaa bbb <reserved ccc=\\\"ddddd\\\"> eeee </reserved> ffff <reserved ggg=\\\"hhhh\\\"/> <other/>\";\n    Set<String> set = new HashSet<String>();\n    set.add(\"reserved\");\n    Reader reader = new HTMLStripCharFilter(new StringReader(test), set);\n    StringBuilder builder = new StringBuilder();\n    int ch = 0;\n    while ((ch = reader.read()) != -1){\n      builder.append((char)ch);\n    }\n    String result = builder.toString();\n    // System.out.println(\"Result: \" + result);\n    assertTrue(\"Escaped tag not preserved: \"  + result.indexOf(\"reserved\"), result.indexOf(\"reserved\") == 9);\n    assertTrue(\"Escaped tag not preserved: \" + result.indexOf(\"reserved\", 15), result.indexOf(\"reserved\", 15) == 38);\n    assertTrue(\"Escaped tag not preserved: \" + result.indexOf(\"reserved\", 41), result.indexOf(\"reserved\", 41) == 54);\n    assertTrue(\"Other tag should be removed\", result.indexOf(\"other\") == -1);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"634f330c54fd3f9f491d52036dc3f40b4f4d8934":["fc706b1e03a539d44d99998108feb684bb44cbb2"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"aba371508186796cc6151d8223a5b4e16d02e26e":["b89678825b68eccaf09e6ab71675fc0b0af1e099","fc706b1e03a539d44d99998108feb684bb44cbb2"],"fc706b1e03a539d44d99998108feb684bb44cbb2":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"fe33227f6805edab2036cbb80645cc4e2d1fa424":["b89678825b68eccaf09e6ab71675fc0b0af1e099","fc706b1e03a539d44d99998108feb684bb44cbb2"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["634f330c54fd3f9f491d52036dc3f40b4f4d8934"]},"commit2Childs":{"634f330c54fd3f9f491d52036dc3f40b4f4d8934":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["aba371508186796cc6151d8223a5b4e16d02e26e","fc706b1e03a539d44d99998108feb684bb44cbb2","fe33227f6805edab2036cbb80645cc4e2d1fa424"],"aba371508186796cc6151d8223a5b4e16d02e26e":[],"fc706b1e03a539d44d99998108feb684bb44cbb2":["634f330c54fd3f9f491d52036dc3f40b4f4d8934","aba371508186796cc6151d8223a5b4e16d02e26e","fe33227f6805edab2036cbb80645cc4e2d1fa424"],"fe33227f6805edab2036cbb80645cc4e2d1fa424":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["aba371508186796cc6151d8223a5b4e16d02e26e","fe33227f6805edab2036cbb80645cc4e2d1fa424","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}