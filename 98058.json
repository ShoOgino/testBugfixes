{"path":"backwards/src/java/org/apache/lucene/search/MultiSearcher#search(Weight,Filter,int).mjava","commits":[{"id":"480d01e5b0ef8efb136d51670fec297ae5ae2c9c","date":1268821447,"type":0,"author":"Uwe Schindler","isMerge":false,"pathNew":"backwards/src/java/org/apache/lucene/search/MultiSearcher#search(Weight,Filter,int).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public TopDocs search(Weight weight, Filter filter, int nDocs)\n      throws IOException {\n\n    final HitQueue hq = new HitQueue(nDocs, false);\n    int totalHits = 0;\n\n    for (int i = 0; i < searchables.length; i++) { // search each searcher\n      final TopDocs docs = new MultiSearcherCallableNoSort(DummyConcurrentLock.INSTANCE,\n        searchables[i], weight, filter, nDocs, hq, i, starts).call();\n      totalHits += docs.totalHits; // update totalHits\n    }\n\n    final ScoreDoc[] scoreDocs = new ScoreDoc[hq.size()];\n    for (int i = hq.size()-1; i >= 0; i--)\t  // put docs in array\n      scoreDocs[i] = hq.pop();\n    \n    float maxScore = (totalHits==0) ? Float.NEGATIVE_INFINITY : scoreDocs[0].score;\n    \n    return new TopDocs(totalHits, scoreDocs, maxScore);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/backwards/src/java/org/apache/lucene/search/MultiSearcher#search(Weight,Filter,int).mjava","pathOld":"backwards/src/java/org/apache/lucene/search/MultiSearcher#search(Weight,Filter,int).mjava","sourceNew":"  @Override\n  public TopDocs search(Weight weight, Filter filter, int nDocs)\n      throws IOException {\n\n    final HitQueue hq = new HitQueue(nDocs, false);\n    int totalHits = 0;\n\n    for (int i = 0; i < searchables.length; i++) { // search each searcher\n      final TopDocs docs = new MultiSearcherCallableNoSort(DummyConcurrentLock.INSTANCE,\n        searchables[i], weight, filter, nDocs, hq, i, starts).call();\n      totalHits += docs.totalHits; // update totalHits\n    }\n\n    final ScoreDoc[] scoreDocs = new ScoreDoc[hq.size()];\n    for (int i = hq.size()-1; i >= 0; i--)\t  // put docs in array\n      scoreDocs[i] = hq.pop();\n    \n    float maxScore = (totalHits==0) ? Float.NEGATIVE_INFINITY : scoreDocs[0].score;\n    \n    return new TopDocs(totalHits, scoreDocs, maxScore);\n  }\n\n","sourceOld":"  @Override\n  public TopDocs search(Weight weight, Filter filter, int nDocs)\n      throws IOException {\n\n    final HitQueue hq = new HitQueue(nDocs, false);\n    int totalHits = 0;\n\n    for (int i = 0; i < searchables.length; i++) { // search each searcher\n      final TopDocs docs = new MultiSearcherCallableNoSort(DummyConcurrentLock.INSTANCE,\n        searchables[i], weight, filter, nDocs, hq, i, starts).call();\n      totalHits += docs.totalHits; // update totalHits\n    }\n\n    final ScoreDoc[] scoreDocs = new ScoreDoc[hq.size()];\n    for (int i = hq.size()-1; i >= 0; i--)\t  // put docs in array\n      scoreDocs[i] = hq.pop();\n    \n    float maxScore = (totalHits==0) ? Float.NEGATIVE_INFINITY : scoreDocs[0].score;\n    \n    return new TopDocs(totalHits, scoreDocs, maxScore);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"480d01e5b0ef8efb136d51670fec297ae5ae2c9c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["480d01e5b0ef8efb136d51670fec297ae5ae2c9c"]},"commit2Childs":{"480d01e5b0ef8efb136d51670fec297ae5ae2c9c":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["480d01e5b0ef8efb136d51670fec297ae5ae2c9c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}