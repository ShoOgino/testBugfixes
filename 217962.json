{"path":"solr/core/src/test/org/apache/solr/schema/TestManagedSchema#initManagedSchemaCore().mjava","commits":[{"id":"9cf81bc8c6e4078e236f0e38b3a2d0271854f207","date":1364832963,"type":0,"author":"Steven Rowe","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/schema/TestManagedSchema#initManagedSchemaCore().mjava","pathOld":"/dev/null","sourceNew":"  @Before\n  private void initManagedSchemaCore() throws Exception {\n    createTempDir();\n    final String tmpSolrHomePath \n        = TEMP_DIR + File.separator + TestManagedSchema.class.getSimpleName() + System.currentTimeMillis();\n    tmpSolrHome = new File(tmpSolrHomePath).getAbsoluteFile();\n    tmpConfDir = new File(tmpSolrHome, confDir);\n    File testHomeConfDir = new File(TEST_HOME(), confDir);\n    FileUtils.copyFileToDirectory(new File(testHomeConfDir, \"solrconfig-managed-schema.xml\"), tmpConfDir);\n    FileUtils.copyFileToDirectory(new File(testHomeConfDir, \"solrconfig-basic.xml\"), tmpConfDir);\n    FileUtils.copyFileToDirectory(new File(testHomeConfDir, \"schema-minimal.xml\"), tmpConfDir);\n    // initCore will trigger an upgrade to managed schema, since the solrconfig has\n    // <schemaFactory class=\"ManagedIndexSchemaFactory\" ... />\n    initCore(\"solrconfig-managed-schema.xml\", \"schema-minimal.xml\", tmpSolrHome.getPath());\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["1e9ce820cd3ed9efb959c181daaafd22f0c70143"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"08970e5b8411182a29412c177eff67ec1110095b","date":1366640815,"type":3,"author":"Steven Rowe","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/schema/TestManagedSchema#initManagedSchemaCore().mjava","pathOld":"solr/core/src/test/org/apache/solr/schema/TestManagedSchema#initManagedSchemaCore().mjava","sourceNew":"  @Before\n  private void initManagedSchemaCore() throws Exception {\n    createTempDir();\n    final String tmpSolrHomePath \n        = TEMP_DIR + File.separator + TestManagedSchema.class.getSimpleName() + System.currentTimeMillis();\n    tmpSolrHome = new File(tmpSolrHomePath).getAbsoluteFile();\n    tmpConfDir = new File(tmpSolrHome, confDir);\n    File testHomeConfDir = new File(TEST_HOME(), confDir);\n    FileUtils.copyFileToDirectory(new File(testHomeConfDir, \"solrconfig-mutable-managed-schema.xml\"), tmpConfDir);\n    FileUtils.copyFileToDirectory(new File(testHomeConfDir, \"solrconfig-managed-schema.xml\"), tmpConfDir);\n    FileUtils.copyFileToDirectory(new File(testHomeConfDir, \"solrconfig-basic.xml\"), tmpConfDir);\n    FileUtils.copyFileToDirectory(new File(testHomeConfDir, \"schema-one-field-no-dynamic-field.xml\"), tmpConfDir);\n    FileUtils.copyFileToDirectory(new File(testHomeConfDir, \"schema-minimal.xml\"), tmpConfDir);\n    FileUtils.copyFileToDirectory(new File(testHomeConfDir, \"schema_codec.xml\"), tmpConfDir);\n    FileUtils.copyFileToDirectory(new File(testHomeConfDir, \"schema-bm25.xml\"), tmpConfDir);\n\n    // initCore will trigger an upgrade to managed schema, since the solrconfig has\n    // <schemaFactory class=\"ManagedIndexSchemaFactory\" ... />\n    initCore(\"solrconfig-managed-schema.xml\", \"schema-minimal.xml\", tmpSolrHome.getPath());\n  }\n\n","sourceOld":"  @Before\n  private void initManagedSchemaCore() throws Exception {\n    createTempDir();\n    final String tmpSolrHomePath \n        = TEMP_DIR + File.separator + TestManagedSchema.class.getSimpleName() + System.currentTimeMillis();\n    tmpSolrHome = new File(tmpSolrHomePath).getAbsoluteFile();\n    tmpConfDir = new File(tmpSolrHome, confDir);\n    File testHomeConfDir = new File(TEST_HOME(), confDir);\n    FileUtils.copyFileToDirectory(new File(testHomeConfDir, \"solrconfig-managed-schema.xml\"), tmpConfDir);\n    FileUtils.copyFileToDirectory(new File(testHomeConfDir, \"solrconfig-basic.xml\"), tmpConfDir);\n    FileUtils.copyFileToDirectory(new File(testHomeConfDir, \"schema-minimal.xml\"), tmpConfDir);\n    // initCore will trigger an upgrade to managed schema, since the solrconfig has\n    // <schemaFactory class=\"ManagedIndexSchemaFactory\" ... />\n    initCore(\"solrconfig-managed-schema.xml\", \"schema-minimal.xml\", tmpSolrHome.getPath());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"f33ef255480d446ae7aa03506be85d0356a9850f","date":1371880818,"type":3,"author":"Chris M. Hostetter","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/schema/TestManagedSchema#initManagedSchemaCore().mjava","pathOld":"solr/core/src/test/org/apache/solr/schema/TestManagedSchema#initManagedSchemaCore().mjava","sourceNew":"  @Before\n  private void initManagedSchemaCore() throws Exception {\n    createTempDir();\n    final String tmpSolrHomePath \n        = TEMP_DIR + File.separator + TestManagedSchema.class.getSimpleName() + System.currentTimeMillis();\n    tmpSolrHome = new File(tmpSolrHomePath).getAbsoluteFile();\n    tmpConfDir = new File(tmpSolrHome, confDir);\n    File testHomeConfDir = new File(TEST_HOME(), confDir);\n    FileUtils.copyFileToDirectory(new File(testHomeConfDir, \"solrconfig-mutable-managed-schema.xml\"), tmpConfDir);\n    FileUtils.copyFileToDirectory(new File(testHomeConfDir, \"solrconfig-managed-schema.xml\"), tmpConfDir);\n    FileUtils.copyFileToDirectory(new File(testHomeConfDir, \"solrconfig-basic.xml\"), tmpConfDir);\n    FileUtils.copyFileToDirectory(new File(testHomeConfDir, \"solrconfig.snippet.randomindexconfig.xml\"), tmpConfDir);\n    FileUtils.copyFileToDirectory(new File(testHomeConfDir, \"schema-one-field-no-dynamic-field.xml\"), tmpConfDir);\n    FileUtils.copyFileToDirectory(new File(testHomeConfDir, \"schema-minimal.xml\"), tmpConfDir);\n    FileUtils.copyFileToDirectory(new File(testHomeConfDir, \"schema_codec.xml\"), tmpConfDir);\n    FileUtils.copyFileToDirectory(new File(testHomeConfDir, \"schema-bm25.xml\"), tmpConfDir);\n\n    // initCore will trigger an upgrade to managed schema, since the solrconfig has\n    // <schemaFactory class=\"ManagedIndexSchemaFactory\" ... />\n    initCore(\"solrconfig-managed-schema.xml\", \"schema-minimal.xml\", tmpSolrHome.getPath());\n  }\n\n","sourceOld":"  @Before\n  private void initManagedSchemaCore() throws Exception {\n    createTempDir();\n    final String tmpSolrHomePath \n        = TEMP_DIR + File.separator + TestManagedSchema.class.getSimpleName() + System.currentTimeMillis();\n    tmpSolrHome = new File(tmpSolrHomePath).getAbsoluteFile();\n    tmpConfDir = new File(tmpSolrHome, confDir);\n    File testHomeConfDir = new File(TEST_HOME(), confDir);\n    FileUtils.copyFileToDirectory(new File(testHomeConfDir, \"solrconfig-mutable-managed-schema.xml\"), tmpConfDir);\n    FileUtils.copyFileToDirectory(new File(testHomeConfDir, \"solrconfig-managed-schema.xml\"), tmpConfDir);\n    FileUtils.copyFileToDirectory(new File(testHomeConfDir, \"solrconfig-basic.xml\"), tmpConfDir);\n    FileUtils.copyFileToDirectory(new File(testHomeConfDir, \"schema-one-field-no-dynamic-field.xml\"), tmpConfDir);\n    FileUtils.copyFileToDirectory(new File(testHomeConfDir, \"schema-minimal.xml\"), tmpConfDir);\n    FileUtils.copyFileToDirectory(new File(testHomeConfDir, \"schema_codec.xml\"), tmpConfDir);\n    FileUtils.copyFileToDirectory(new File(testHomeConfDir, \"schema-bm25.xml\"), tmpConfDir);\n\n    // initCore will trigger an upgrade to managed schema, since the solrconfig has\n    // <schemaFactory class=\"ManagedIndexSchemaFactory\" ... />\n    initCore(\"solrconfig-managed-schema.xml\", \"schema-minimal.xml\", tmpSolrHome.getPath());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"5a7624bc6b738f100f63bb9902e91a84dd67d86f","date":1372889271,"type":3,"author":"Steven Rowe","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/schema/TestManagedSchema#initManagedSchemaCore().mjava","pathOld":"solr/core/src/test/org/apache/solr/schema/TestManagedSchema#initManagedSchemaCore().mjava","sourceNew":"  @Before\n  private void initManagedSchemaCore() throws Exception {\n    createTempDir();\n    final String tmpSolrHomePath \n        = TEMP_DIR + File.separator + TestManagedSchema.class.getSimpleName() + System.currentTimeMillis();\n    tmpSolrHome = new File(tmpSolrHomePath).getAbsoluteFile();\n    tmpConfDir = new File(tmpSolrHome, confDir);\n    File testHomeConfDir = new File(TEST_HOME(), confDir);\n    FileUtils.copyFileToDirectory(new File(testHomeConfDir, \"solrconfig-mutable-managed-schema.xml\"), tmpConfDir);\n    FileUtils.copyFileToDirectory(new File(testHomeConfDir, \"solrconfig-managed-schema.xml\"), tmpConfDir);\n    FileUtils.copyFileToDirectory(new File(testHomeConfDir, \"solrconfig-basic.xml\"), tmpConfDir);\n    FileUtils.copyFileToDirectory(new File(testHomeConfDir, \"solrconfig.snippet.randomindexconfig.xml\"), tmpConfDir);\n    FileUtils.copyFileToDirectory(new File(testHomeConfDir, \"schema-one-field-no-dynamic-field.xml\"), tmpConfDir);\n    FileUtils.copyFileToDirectory(new File(testHomeConfDir, \"schema-one-field-no-dynamic-field-unique-key.xml\"), tmpConfDir);\n    FileUtils.copyFileToDirectory(new File(testHomeConfDir, \"schema-minimal.xml\"), tmpConfDir);\n    FileUtils.copyFileToDirectory(new File(testHomeConfDir, \"schema_codec.xml\"), tmpConfDir);\n    FileUtils.copyFileToDirectory(new File(testHomeConfDir, \"schema-bm25.xml\"), tmpConfDir);\n\n    // initCore will trigger an upgrade to managed schema, since the solrconfig has\n    // <schemaFactory class=\"ManagedIndexSchemaFactory\" ... />\n    initCore(\"solrconfig-managed-schema.xml\", \"schema-minimal.xml\", tmpSolrHome.getPath());\n  }\n\n","sourceOld":"  @Before\n  private void initManagedSchemaCore() throws Exception {\n    createTempDir();\n    final String tmpSolrHomePath \n        = TEMP_DIR + File.separator + TestManagedSchema.class.getSimpleName() + System.currentTimeMillis();\n    tmpSolrHome = new File(tmpSolrHomePath).getAbsoluteFile();\n    tmpConfDir = new File(tmpSolrHome, confDir);\n    File testHomeConfDir = new File(TEST_HOME(), confDir);\n    FileUtils.copyFileToDirectory(new File(testHomeConfDir, \"solrconfig-mutable-managed-schema.xml\"), tmpConfDir);\n    FileUtils.copyFileToDirectory(new File(testHomeConfDir, \"solrconfig-managed-schema.xml\"), tmpConfDir);\n    FileUtils.copyFileToDirectory(new File(testHomeConfDir, \"solrconfig-basic.xml\"), tmpConfDir);\n    FileUtils.copyFileToDirectory(new File(testHomeConfDir, \"solrconfig.snippet.randomindexconfig.xml\"), tmpConfDir);\n    FileUtils.copyFileToDirectory(new File(testHomeConfDir, \"schema-one-field-no-dynamic-field.xml\"), tmpConfDir);\n    FileUtils.copyFileToDirectory(new File(testHomeConfDir, \"schema-minimal.xml\"), tmpConfDir);\n    FileUtils.copyFileToDirectory(new File(testHomeConfDir, \"schema_codec.xml\"), tmpConfDir);\n    FileUtils.copyFileToDirectory(new File(testHomeConfDir, \"schema-bm25.xml\"), tmpConfDir);\n\n    // initCore will trigger an upgrade to managed schema, since the solrconfig has\n    // <schemaFactory class=\"ManagedIndexSchemaFactory\" ... />\n    initCore(\"solrconfig-managed-schema.xml\", \"schema-minimal.xml\", tmpSolrHome.getPath());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"37a0f60745e53927c4c876cfe5b5a58170f0646c","date":1373994005,"type":3,"author":"Han Jiang","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/schema/TestManagedSchema#initManagedSchemaCore().mjava","pathOld":"solr/core/src/test/org/apache/solr/schema/TestManagedSchema#initManagedSchemaCore().mjava","sourceNew":"  @Before\n  private void initManagedSchemaCore() throws Exception {\n    createTempDir();\n    final String tmpSolrHomePath \n        = TEMP_DIR + File.separator + TestManagedSchema.class.getSimpleName() + System.currentTimeMillis();\n    tmpSolrHome = new File(tmpSolrHomePath).getAbsoluteFile();\n    tmpConfDir = new File(tmpSolrHome, confDir);\n    File testHomeConfDir = new File(TEST_HOME(), confDir);\n    FileUtils.copyFileToDirectory(new File(testHomeConfDir, \"solrconfig-mutable-managed-schema.xml\"), tmpConfDir);\n    FileUtils.copyFileToDirectory(new File(testHomeConfDir, \"solrconfig-managed-schema.xml\"), tmpConfDir);\n    FileUtils.copyFileToDirectory(new File(testHomeConfDir, \"solrconfig-basic.xml\"), tmpConfDir);\n    FileUtils.copyFileToDirectory(new File(testHomeConfDir, \"solrconfig.snippet.randomindexconfig.xml\"), tmpConfDir);\n    FileUtils.copyFileToDirectory(new File(testHomeConfDir, \"schema-one-field-no-dynamic-field.xml\"), tmpConfDir);\n    FileUtils.copyFileToDirectory(new File(testHomeConfDir, \"schema-one-field-no-dynamic-field-unique-key.xml\"), tmpConfDir);\n    FileUtils.copyFileToDirectory(new File(testHomeConfDir, \"schema-minimal.xml\"), tmpConfDir);\n    FileUtils.copyFileToDirectory(new File(testHomeConfDir, \"schema_codec.xml\"), tmpConfDir);\n    FileUtils.copyFileToDirectory(new File(testHomeConfDir, \"schema-bm25.xml\"), tmpConfDir);\n\n    // initCore will trigger an upgrade to managed schema, since the solrconfig has\n    // <schemaFactory class=\"ManagedIndexSchemaFactory\" ... />\n    initCore(\"solrconfig-managed-schema.xml\", \"schema-minimal.xml\", tmpSolrHome.getPath());\n  }\n\n","sourceOld":"  @Before\n  private void initManagedSchemaCore() throws Exception {\n    createTempDir();\n    final String tmpSolrHomePath \n        = TEMP_DIR + File.separator + TestManagedSchema.class.getSimpleName() + System.currentTimeMillis();\n    tmpSolrHome = new File(tmpSolrHomePath).getAbsoluteFile();\n    tmpConfDir = new File(tmpSolrHome, confDir);\n    File testHomeConfDir = new File(TEST_HOME(), confDir);\n    FileUtils.copyFileToDirectory(new File(testHomeConfDir, \"solrconfig-mutable-managed-schema.xml\"), tmpConfDir);\n    FileUtils.copyFileToDirectory(new File(testHomeConfDir, \"solrconfig-managed-schema.xml\"), tmpConfDir);\n    FileUtils.copyFileToDirectory(new File(testHomeConfDir, \"solrconfig-basic.xml\"), tmpConfDir);\n    FileUtils.copyFileToDirectory(new File(testHomeConfDir, \"schema-one-field-no-dynamic-field.xml\"), tmpConfDir);\n    FileUtils.copyFileToDirectory(new File(testHomeConfDir, \"schema-minimal.xml\"), tmpConfDir);\n    FileUtils.copyFileToDirectory(new File(testHomeConfDir, \"schema_codec.xml\"), tmpConfDir);\n    FileUtils.copyFileToDirectory(new File(testHomeConfDir, \"schema-bm25.xml\"), tmpConfDir);\n\n    // initCore will trigger an upgrade to managed schema, since the solrconfig has\n    // <schemaFactory class=\"ManagedIndexSchemaFactory\" ... />\n    initCore(\"solrconfig-managed-schema.xml\", \"schema-minimal.xml\", tmpSolrHome.getPath());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1e0d5dcd5bcba76f5b672a85f179329a4969f456","date":1376419046,"type":3,"author":"Chris M. Hostetter","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/schema/TestManagedSchema#initManagedSchemaCore().mjava","pathOld":"solr/core/src/test/org/apache/solr/schema/TestManagedSchema#initManagedSchemaCore().mjava","sourceNew":"  @Before\n  private void initManagedSchemaCore() throws Exception {\n    createTempDir();\n    final String tmpSolrHomePath \n        = TEMP_DIR + File.separator + TestManagedSchema.class.getSimpleName() + System.currentTimeMillis();\n    tmpSolrHome = new File(tmpSolrHomePath).getAbsoluteFile();\n    tmpConfDir = new File(tmpSolrHome, confDir);\n    File testHomeConfDir = new File(TEST_HOME(), confDir);\n    FileUtils.copyFileToDirectory(new File(testHomeConfDir, \"solrconfig-managed-schema.xml\"), tmpConfDir);\n    FileUtils.copyFileToDirectory(new File(testHomeConfDir, \"solrconfig-basic.xml\"), tmpConfDir);\n    FileUtils.copyFileToDirectory(new File(testHomeConfDir, \"solrconfig.snippet.randomindexconfig.xml\"), tmpConfDir);\n    FileUtils.copyFileToDirectory(new File(testHomeConfDir, \"schema-one-field-no-dynamic-field.xml\"), tmpConfDir);\n    FileUtils.copyFileToDirectory(new File(testHomeConfDir, \"schema-one-field-no-dynamic-field-unique-key.xml\"), tmpConfDir);\n    FileUtils.copyFileToDirectory(new File(testHomeConfDir, \"schema-minimal.xml\"), tmpConfDir);\n    FileUtils.copyFileToDirectory(new File(testHomeConfDir, \"schema_codec.xml\"), tmpConfDir);\n    FileUtils.copyFileToDirectory(new File(testHomeConfDir, \"schema-bm25.xml\"), tmpConfDir);\n\n    // initCore will trigger an upgrade to managed schema, since the solrconfig has\n    // <schemaFactory class=\"ManagedIndexSchemaFactory\" ... />\n    System.setProperty(\"managed.schema.mutable\", \"false\");\n    System.setProperty(\"enable.update.log\", \"false\");\n    initCore(\"solrconfig-managed-schema.xml\", \"schema-minimal.xml\", tmpSolrHome.getPath());\n  }\n\n","sourceOld":"  @Before\n  private void initManagedSchemaCore() throws Exception {\n    createTempDir();\n    final String tmpSolrHomePath \n        = TEMP_DIR + File.separator + TestManagedSchema.class.getSimpleName() + System.currentTimeMillis();\n    tmpSolrHome = new File(tmpSolrHomePath).getAbsoluteFile();\n    tmpConfDir = new File(tmpSolrHome, confDir);\n    File testHomeConfDir = new File(TEST_HOME(), confDir);\n    FileUtils.copyFileToDirectory(new File(testHomeConfDir, \"solrconfig-mutable-managed-schema.xml\"), tmpConfDir);\n    FileUtils.copyFileToDirectory(new File(testHomeConfDir, \"solrconfig-managed-schema.xml\"), tmpConfDir);\n    FileUtils.copyFileToDirectory(new File(testHomeConfDir, \"solrconfig-basic.xml\"), tmpConfDir);\n    FileUtils.copyFileToDirectory(new File(testHomeConfDir, \"solrconfig.snippet.randomindexconfig.xml\"), tmpConfDir);\n    FileUtils.copyFileToDirectory(new File(testHomeConfDir, \"schema-one-field-no-dynamic-field.xml\"), tmpConfDir);\n    FileUtils.copyFileToDirectory(new File(testHomeConfDir, \"schema-one-field-no-dynamic-field-unique-key.xml\"), tmpConfDir);\n    FileUtils.copyFileToDirectory(new File(testHomeConfDir, \"schema-minimal.xml\"), tmpConfDir);\n    FileUtils.copyFileToDirectory(new File(testHomeConfDir, \"schema_codec.xml\"), tmpConfDir);\n    FileUtils.copyFileToDirectory(new File(testHomeConfDir, \"schema-bm25.xml\"), tmpConfDir);\n\n    // initCore will trigger an upgrade to managed schema, since the solrconfig has\n    // <schemaFactory class=\"ManagedIndexSchemaFactory\" ... />\n    initCore(\"solrconfig-managed-schema.xml\", \"schema-minimal.xml\", tmpSolrHome.getPath());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"3dffec77fb8f7d0e9ca4869dddd6af94528b4576","date":1377875202,"type":3,"author":"Han Jiang","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/schema/TestManagedSchema#initManagedSchemaCore().mjava","pathOld":"solr/core/src/test/org/apache/solr/schema/TestManagedSchema#initManagedSchemaCore().mjava","sourceNew":"  @Before\n  private void initManagedSchemaCore() throws Exception {\n    createTempDir();\n    final String tmpSolrHomePath \n        = TEMP_DIR + File.separator + TestManagedSchema.class.getSimpleName() + System.currentTimeMillis();\n    tmpSolrHome = new File(tmpSolrHomePath).getAbsoluteFile();\n    tmpConfDir = new File(tmpSolrHome, confDir);\n    File testHomeConfDir = new File(TEST_HOME(), confDir);\n    FileUtils.copyFileToDirectory(new File(testHomeConfDir, \"solrconfig-managed-schema.xml\"), tmpConfDir);\n    FileUtils.copyFileToDirectory(new File(testHomeConfDir, \"solrconfig-basic.xml\"), tmpConfDir);\n    FileUtils.copyFileToDirectory(new File(testHomeConfDir, \"solrconfig.snippet.randomindexconfig.xml\"), tmpConfDir);\n    FileUtils.copyFileToDirectory(new File(testHomeConfDir, \"schema-one-field-no-dynamic-field.xml\"), tmpConfDir);\n    FileUtils.copyFileToDirectory(new File(testHomeConfDir, \"schema-one-field-no-dynamic-field-unique-key.xml\"), tmpConfDir);\n    FileUtils.copyFileToDirectory(new File(testHomeConfDir, \"schema-minimal.xml\"), tmpConfDir);\n    FileUtils.copyFileToDirectory(new File(testHomeConfDir, \"schema_codec.xml\"), tmpConfDir);\n    FileUtils.copyFileToDirectory(new File(testHomeConfDir, \"schema-bm25.xml\"), tmpConfDir);\n\n    // initCore will trigger an upgrade to managed schema, since the solrconfig has\n    // <schemaFactory class=\"ManagedIndexSchemaFactory\" ... />\n    System.setProperty(\"managed.schema.mutable\", \"false\");\n    System.setProperty(\"enable.update.log\", \"false\");\n    initCore(\"solrconfig-managed-schema.xml\", \"schema-minimal.xml\", tmpSolrHome.getPath());\n  }\n\n","sourceOld":"  @Before\n  private void initManagedSchemaCore() throws Exception {\n    createTempDir();\n    final String tmpSolrHomePath \n        = TEMP_DIR + File.separator + TestManagedSchema.class.getSimpleName() + System.currentTimeMillis();\n    tmpSolrHome = new File(tmpSolrHomePath).getAbsoluteFile();\n    tmpConfDir = new File(tmpSolrHome, confDir);\n    File testHomeConfDir = new File(TEST_HOME(), confDir);\n    FileUtils.copyFileToDirectory(new File(testHomeConfDir, \"solrconfig-mutable-managed-schema.xml\"), tmpConfDir);\n    FileUtils.copyFileToDirectory(new File(testHomeConfDir, \"solrconfig-managed-schema.xml\"), tmpConfDir);\n    FileUtils.copyFileToDirectory(new File(testHomeConfDir, \"solrconfig-basic.xml\"), tmpConfDir);\n    FileUtils.copyFileToDirectory(new File(testHomeConfDir, \"solrconfig.snippet.randomindexconfig.xml\"), tmpConfDir);\n    FileUtils.copyFileToDirectory(new File(testHomeConfDir, \"schema-one-field-no-dynamic-field.xml\"), tmpConfDir);\n    FileUtils.copyFileToDirectory(new File(testHomeConfDir, \"schema-one-field-no-dynamic-field-unique-key.xml\"), tmpConfDir);\n    FileUtils.copyFileToDirectory(new File(testHomeConfDir, \"schema-minimal.xml\"), tmpConfDir);\n    FileUtils.copyFileToDirectory(new File(testHomeConfDir, \"schema_codec.xml\"), tmpConfDir);\n    FileUtils.copyFileToDirectory(new File(testHomeConfDir, \"schema-bm25.xml\"), tmpConfDir);\n\n    // initCore will trigger an upgrade to managed schema, since the solrconfig has\n    // <schemaFactory class=\"ManagedIndexSchemaFactory\" ... />\n    initCore(\"solrconfig-managed-schema.xml\", \"schema-minimal.xml\", tmpSolrHome.getPath());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d0d579490a72f2e6297eaa648940611234c57cf1","date":1395917140,"type":3,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/schema/TestManagedSchema#initManagedSchemaCore().mjava","pathOld":"solr/core/src/test/org/apache/solr/schema/TestManagedSchema#initManagedSchemaCore().mjava","sourceNew":"  @Before\n  private void initManagedSchemaCore() throws Exception {\n    createTempDir();\n    final String tmpSolrHomePath = TestUtil.createTempDir(LuceneTestCase.getTestClass().getSimpleName()).getAbsolutePath();\n    tmpSolrHome = new File(tmpSolrHomePath).getAbsoluteFile();\n    tmpConfDir = new File(tmpSolrHome, confDir);\n    File testHomeConfDir = new File(TEST_HOME(), confDir);\n    FileUtils.copyFileToDirectory(new File(testHomeConfDir, \"solrconfig-managed-schema.xml\"), tmpConfDir);\n    FileUtils.copyFileToDirectory(new File(testHomeConfDir, \"solrconfig-basic.xml\"), tmpConfDir);\n    FileUtils.copyFileToDirectory(new File(testHomeConfDir, \"solrconfig.snippet.randomindexconfig.xml\"), tmpConfDir);\n    FileUtils.copyFileToDirectory(new File(testHomeConfDir, \"schema-one-field-no-dynamic-field.xml\"), tmpConfDir);\n    FileUtils.copyFileToDirectory(new File(testHomeConfDir, \"schema-one-field-no-dynamic-field-unique-key.xml\"), tmpConfDir);\n    FileUtils.copyFileToDirectory(new File(testHomeConfDir, \"schema-minimal.xml\"), tmpConfDir);\n    FileUtils.copyFileToDirectory(new File(testHomeConfDir, \"schema_codec.xml\"), tmpConfDir);\n    FileUtils.copyFileToDirectory(new File(testHomeConfDir, \"schema-bm25.xml\"), tmpConfDir);\n\n    // initCore will trigger an upgrade to managed schema, since the solrconfig has\n    // <schemaFactory class=\"ManagedIndexSchemaFactory\" ... />\n    System.setProperty(\"managed.schema.mutable\", \"false\");\n    System.setProperty(\"enable.update.log\", \"false\");\n    initCore(\"solrconfig-managed-schema.xml\", \"schema-minimal.xml\", tmpSolrHome.getPath());\n  }\n\n","sourceOld":"  @Before\n  private void initManagedSchemaCore() throws Exception {\n    createTempDir();\n    final String tmpSolrHomePath \n        = TEMP_DIR + File.separator + TestManagedSchema.class.getSimpleName() + System.currentTimeMillis();\n    tmpSolrHome = new File(tmpSolrHomePath).getAbsoluteFile();\n    tmpConfDir = new File(tmpSolrHome, confDir);\n    File testHomeConfDir = new File(TEST_HOME(), confDir);\n    FileUtils.copyFileToDirectory(new File(testHomeConfDir, \"solrconfig-managed-schema.xml\"), tmpConfDir);\n    FileUtils.copyFileToDirectory(new File(testHomeConfDir, \"solrconfig-basic.xml\"), tmpConfDir);\n    FileUtils.copyFileToDirectory(new File(testHomeConfDir, \"solrconfig.snippet.randomindexconfig.xml\"), tmpConfDir);\n    FileUtils.copyFileToDirectory(new File(testHomeConfDir, \"schema-one-field-no-dynamic-field.xml\"), tmpConfDir);\n    FileUtils.copyFileToDirectory(new File(testHomeConfDir, \"schema-one-field-no-dynamic-field-unique-key.xml\"), tmpConfDir);\n    FileUtils.copyFileToDirectory(new File(testHomeConfDir, \"schema-minimal.xml\"), tmpConfDir);\n    FileUtils.copyFileToDirectory(new File(testHomeConfDir, \"schema_codec.xml\"), tmpConfDir);\n    FileUtils.copyFileToDirectory(new File(testHomeConfDir, \"schema-bm25.xml\"), tmpConfDir);\n\n    // initCore will trigger an upgrade to managed schema, since the solrconfig has\n    // <schemaFactory class=\"ManagedIndexSchemaFactory\" ... />\n    System.setProperty(\"managed.schema.mutable\", \"false\");\n    System.setProperty(\"enable.update.log\", \"false\");\n    initCore(\"solrconfig-managed-schema.xml\", \"schema-minimal.xml\", tmpSolrHome.getPath());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"1416f9d09d016a6894cd17e1caac137dad2bba59","date":1395941020,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/schema/TestManagedSchema#initManagedSchemaCore().mjava","pathOld":"solr/core/src/test/org/apache/solr/schema/TestManagedSchema#initManagedSchemaCore().mjava","sourceNew":"  @Before\n  private void initManagedSchemaCore() throws Exception {\n    final String tmpSolrHomePath \n        = dataDir + File.separator + TestManagedSchema.class.getSimpleName() + System.currentTimeMillis();\n    tmpSolrHome = new File(tmpSolrHomePath).getAbsoluteFile();\n    tmpConfDir = new File(tmpSolrHome, confDir);\n    File testHomeConfDir = new File(TEST_HOME(), confDir);\n    FileUtils.copyFileToDirectory(new File(testHomeConfDir, \"solrconfig-managed-schema.xml\"), tmpConfDir);\n    FileUtils.copyFileToDirectory(new File(testHomeConfDir, \"solrconfig-basic.xml\"), tmpConfDir);\n    FileUtils.copyFileToDirectory(new File(testHomeConfDir, \"solrconfig.snippet.randomindexconfig.xml\"), tmpConfDir);\n    FileUtils.copyFileToDirectory(new File(testHomeConfDir, \"schema-one-field-no-dynamic-field.xml\"), tmpConfDir);\n    FileUtils.copyFileToDirectory(new File(testHomeConfDir, \"schema-one-field-no-dynamic-field-unique-key.xml\"), tmpConfDir);\n    FileUtils.copyFileToDirectory(new File(testHomeConfDir, \"schema-minimal.xml\"), tmpConfDir);\n    FileUtils.copyFileToDirectory(new File(testHomeConfDir, \"schema_codec.xml\"), tmpConfDir);\n    FileUtils.copyFileToDirectory(new File(testHomeConfDir, \"schema-bm25.xml\"), tmpConfDir);\n\n    // initCore will trigger an upgrade to managed schema, since the solrconfig has\n    // <schemaFactory class=\"ManagedIndexSchemaFactory\" ... />\n    System.setProperty(\"managed.schema.mutable\", \"false\");\n    System.setProperty(\"enable.update.log\", \"false\");\n    initCore(\"solrconfig-managed-schema.xml\", \"schema-minimal.xml\", tmpSolrHome.getPath());\n  }\n\n","sourceOld":"  @Before\n  private void initManagedSchemaCore() throws Exception {\n    createTempDir();\n    final String tmpSolrHomePath \n        = TEMP_DIR + File.separator + TestManagedSchema.class.getSimpleName() + System.currentTimeMillis();\n    tmpSolrHome = new File(tmpSolrHomePath).getAbsoluteFile();\n    tmpConfDir = new File(tmpSolrHome, confDir);\n    File testHomeConfDir = new File(TEST_HOME(), confDir);\n    FileUtils.copyFileToDirectory(new File(testHomeConfDir, \"solrconfig-managed-schema.xml\"), tmpConfDir);\n    FileUtils.copyFileToDirectory(new File(testHomeConfDir, \"solrconfig-basic.xml\"), tmpConfDir);\n    FileUtils.copyFileToDirectory(new File(testHomeConfDir, \"solrconfig.snippet.randomindexconfig.xml\"), tmpConfDir);\n    FileUtils.copyFileToDirectory(new File(testHomeConfDir, \"schema-one-field-no-dynamic-field.xml\"), tmpConfDir);\n    FileUtils.copyFileToDirectory(new File(testHomeConfDir, \"schema-one-field-no-dynamic-field-unique-key.xml\"), tmpConfDir);\n    FileUtils.copyFileToDirectory(new File(testHomeConfDir, \"schema-minimal.xml\"), tmpConfDir);\n    FileUtils.copyFileToDirectory(new File(testHomeConfDir, \"schema_codec.xml\"), tmpConfDir);\n    FileUtils.copyFileToDirectory(new File(testHomeConfDir, \"schema-bm25.xml\"), tmpConfDir);\n\n    // initCore will trigger an upgrade to managed schema, since the solrconfig has\n    // <schemaFactory class=\"ManagedIndexSchemaFactory\" ... />\n    System.setProperty(\"managed.schema.mutable\", \"false\");\n    System.setProperty(\"enable.update.log\", \"false\");\n    initCore(\"solrconfig-managed-schema.xml\", \"schema-minimal.xml\", tmpSolrHome.getPath());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"bb1f22cfa77230b5f05b7784feae5367f6bbb488","date":1395968145,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/schema/TestManagedSchema#initManagedSchemaCore().mjava","pathOld":"solr/core/src/test/org/apache/solr/schema/TestManagedSchema#initManagedSchemaCore().mjava","sourceNew":"  @Before\n  private void initManagedSchemaCore() throws Exception {\n    final String tmpSolrHomePath = createTempDir().getAbsolutePath();\n    tmpSolrHome = new File(tmpSolrHomePath).getAbsoluteFile();\n    tmpConfDir = new File(tmpSolrHome, confDir);\n    File testHomeConfDir = new File(TEST_HOME(), confDir);\n    FileUtils.copyFileToDirectory(new File(testHomeConfDir, \"solrconfig-managed-schema.xml\"), tmpConfDir);\n    FileUtils.copyFileToDirectory(new File(testHomeConfDir, \"solrconfig-basic.xml\"), tmpConfDir);\n    FileUtils.copyFileToDirectory(new File(testHomeConfDir, \"solrconfig.snippet.randomindexconfig.xml\"), tmpConfDir);\n    FileUtils.copyFileToDirectory(new File(testHomeConfDir, \"schema-one-field-no-dynamic-field.xml\"), tmpConfDir);\n    FileUtils.copyFileToDirectory(new File(testHomeConfDir, \"schema-one-field-no-dynamic-field-unique-key.xml\"), tmpConfDir);\n    FileUtils.copyFileToDirectory(new File(testHomeConfDir, \"schema-minimal.xml\"), tmpConfDir);\n    FileUtils.copyFileToDirectory(new File(testHomeConfDir, \"schema_codec.xml\"), tmpConfDir);\n    FileUtils.copyFileToDirectory(new File(testHomeConfDir, \"schema-bm25.xml\"), tmpConfDir);\n\n    // initCore will trigger an upgrade to managed schema, since the solrconfig has\n    // <schemaFactory class=\"ManagedIndexSchemaFactory\" ... />\n    System.setProperty(\"managed.schema.mutable\", \"false\");\n    System.setProperty(\"enable.update.log\", \"false\");\n    initCore(\"solrconfig-managed-schema.xml\", \"schema-minimal.xml\", tmpSolrHome.getPath());\n  }\n\n","sourceOld":"  @Before\n  private void initManagedSchemaCore() throws Exception {\n    createTempDir();\n    final String tmpSolrHomePath = TestUtil.createTempDir(LuceneTestCase.getTestClass().getSimpleName()).getAbsolutePath();\n    tmpSolrHome = new File(tmpSolrHomePath).getAbsoluteFile();\n    tmpConfDir = new File(tmpSolrHome, confDir);\n    File testHomeConfDir = new File(TEST_HOME(), confDir);\n    FileUtils.copyFileToDirectory(new File(testHomeConfDir, \"solrconfig-managed-schema.xml\"), tmpConfDir);\n    FileUtils.copyFileToDirectory(new File(testHomeConfDir, \"solrconfig-basic.xml\"), tmpConfDir);\n    FileUtils.copyFileToDirectory(new File(testHomeConfDir, \"solrconfig.snippet.randomindexconfig.xml\"), tmpConfDir);\n    FileUtils.copyFileToDirectory(new File(testHomeConfDir, \"schema-one-field-no-dynamic-field.xml\"), tmpConfDir);\n    FileUtils.copyFileToDirectory(new File(testHomeConfDir, \"schema-one-field-no-dynamic-field-unique-key.xml\"), tmpConfDir);\n    FileUtils.copyFileToDirectory(new File(testHomeConfDir, \"schema-minimal.xml\"), tmpConfDir);\n    FileUtils.copyFileToDirectory(new File(testHomeConfDir, \"schema_codec.xml\"), tmpConfDir);\n    FileUtils.copyFileToDirectory(new File(testHomeConfDir, \"schema-bm25.xml\"), tmpConfDir);\n\n    // initCore will trigger an upgrade to managed schema, since the solrconfig has\n    // <schemaFactory class=\"ManagedIndexSchemaFactory\" ... />\n    System.setProperty(\"managed.schema.mutable\", \"false\");\n    System.setProperty(\"enable.update.log\", \"false\");\n    initCore(\"solrconfig-managed-schema.xml\", \"schema-minimal.xml\", tmpSolrHome.getPath());\n  }\n\n","bugFix":null,"bugIntro":["1e9ce820cd3ed9efb959c181daaafd22f0c70143"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"1e9ce820cd3ed9efb959c181daaafd22f0c70143","date":1396201051,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/schema/TestManagedSchema#initManagedSchemaCore().mjava","pathOld":"solr/core/src/test/org/apache/solr/schema/TestManagedSchema#initManagedSchemaCore().mjava","sourceNew":"  @Before\n  private void initManagedSchemaCore() throws Exception {\n    tmpSolrHome = createTempDir();\n    tmpConfDir = new File(tmpSolrHome, confDir);\n    File testHomeConfDir = new File(TEST_HOME(), confDir);\n    FileUtils.copyFileToDirectory(new File(testHomeConfDir, \"solrconfig-managed-schema.xml\"), tmpConfDir);\n    FileUtils.copyFileToDirectory(new File(testHomeConfDir, \"solrconfig-basic.xml\"), tmpConfDir);\n    FileUtils.copyFileToDirectory(new File(testHomeConfDir, \"solrconfig.snippet.randomindexconfig.xml\"), tmpConfDir);\n    FileUtils.copyFileToDirectory(new File(testHomeConfDir, \"schema-one-field-no-dynamic-field.xml\"), tmpConfDir);\n    FileUtils.copyFileToDirectory(new File(testHomeConfDir, \"schema-one-field-no-dynamic-field-unique-key.xml\"), tmpConfDir);\n    FileUtils.copyFileToDirectory(new File(testHomeConfDir, \"schema-minimal.xml\"), tmpConfDir);\n    FileUtils.copyFileToDirectory(new File(testHomeConfDir, \"schema_codec.xml\"), tmpConfDir);\n    FileUtils.copyFileToDirectory(new File(testHomeConfDir, \"schema-bm25.xml\"), tmpConfDir);\n\n    // initCore will trigger an upgrade to managed schema, since the solrconfig has\n    // <schemaFactory class=\"ManagedIndexSchemaFactory\" ... />\n    System.setProperty(\"managed.schema.mutable\", \"false\");\n    System.setProperty(\"enable.update.log\", \"false\");\n    initCore(\"solrconfig-managed-schema.xml\", \"schema-minimal.xml\", tmpSolrHome.getPath());\n  }\n\n","sourceOld":"  @Before\n  private void initManagedSchemaCore() throws Exception {\n    final String tmpSolrHomePath = createTempDir().getAbsolutePath();\n    tmpSolrHome = new File(tmpSolrHomePath).getAbsoluteFile();\n    tmpConfDir = new File(tmpSolrHome, confDir);\n    File testHomeConfDir = new File(TEST_HOME(), confDir);\n    FileUtils.copyFileToDirectory(new File(testHomeConfDir, \"solrconfig-managed-schema.xml\"), tmpConfDir);\n    FileUtils.copyFileToDirectory(new File(testHomeConfDir, \"solrconfig-basic.xml\"), tmpConfDir);\n    FileUtils.copyFileToDirectory(new File(testHomeConfDir, \"solrconfig.snippet.randomindexconfig.xml\"), tmpConfDir);\n    FileUtils.copyFileToDirectory(new File(testHomeConfDir, \"schema-one-field-no-dynamic-field.xml\"), tmpConfDir);\n    FileUtils.copyFileToDirectory(new File(testHomeConfDir, \"schema-one-field-no-dynamic-field-unique-key.xml\"), tmpConfDir);\n    FileUtils.copyFileToDirectory(new File(testHomeConfDir, \"schema-minimal.xml\"), tmpConfDir);\n    FileUtils.copyFileToDirectory(new File(testHomeConfDir, \"schema_codec.xml\"), tmpConfDir);\n    FileUtils.copyFileToDirectory(new File(testHomeConfDir, \"schema-bm25.xml\"), tmpConfDir);\n\n    // initCore will trigger an upgrade to managed schema, since the solrconfig has\n    // <schemaFactory class=\"ManagedIndexSchemaFactory\" ... />\n    System.setProperty(\"managed.schema.mutable\", \"false\");\n    System.setProperty(\"enable.update.log\", \"false\");\n    initCore(\"solrconfig-managed-schema.xml\", \"schema-minimal.xml\", tmpSolrHome.getPath());\n  }\n\n","bugFix":["bb1f22cfa77230b5f05b7784feae5367f6bbb488","9cf81bc8c6e4078e236f0e38b3a2d0271854f207"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2a0f5bb79c600763ffe7b8141df59a3169d31e48","date":1396689440,"type":3,"author":"Dawid Weiss","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/schema/TestManagedSchema#initManagedSchemaCore().mjava","pathOld":"solr/core/src/test/org/apache/solr/schema/TestManagedSchema#initManagedSchemaCore().mjava","sourceNew":"  @Before\n  private void initManagedSchemaCore() throws Exception {\n    tmpSolrHome = createTempDir();\n    tmpConfDir = new File(tmpSolrHome, confDir);\n    File testHomeConfDir = new File(TEST_HOME(), confDir);\n    FileUtils.copyFileToDirectory(new File(testHomeConfDir, \"solrconfig-managed-schema.xml\"), tmpConfDir);\n    FileUtils.copyFileToDirectory(new File(testHomeConfDir, \"solrconfig-basic.xml\"), tmpConfDir);\n    FileUtils.copyFileToDirectory(new File(testHomeConfDir, \"solrconfig.snippet.randomindexconfig.xml\"), tmpConfDir);\n    FileUtils.copyFileToDirectory(new File(testHomeConfDir, \"schema-one-field-no-dynamic-field.xml\"), tmpConfDir);\n    FileUtils.copyFileToDirectory(new File(testHomeConfDir, \"schema-one-field-no-dynamic-field-unique-key.xml\"), tmpConfDir);\n    FileUtils.copyFileToDirectory(new File(testHomeConfDir, \"schema-minimal.xml\"), tmpConfDir);\n    FileUtils.copyFileToDirectory(new File(testHomeConfDir, \"schema_codec.xml\"), tmpConfDir);\n    FileUtils.copyFileToDirectory(new File(testHomeConfDir, \"schema-bm25.xml\"), tmpConfDir);\n\n    // initCore will trigger an upgrade to managed schema, since the solrconfig has\n    // <schemaFactory class=\"ManagedIndexSchemaFactory\" ... />\n    System.setProperty(\"managed.schema.mutable\", \"false\");\n    System.setProperty(\"enable.update.log\", \"false\");\n    initCore(\"solrconfig-managed-schema.xml\", \"schema-minimal.xml\", tmpSolrHome.getPath());\n  }\n\n","sourceOld":"  @Before\n  private void initManagedSchemaCore() throws Exception {\n    final String tmpSolrHomePath \n        = dataDir + File.separator + TestManagedSchema.class.getSimpleName() + System.currentTimeMillis();\n    tmpSolrHome = new File(tmpSolrHomePath).getAbsoluteFile();\n    tmpConfDir = new File(tmpSolrHome, confDir);\n    File testHomeConfDir = new File(TEST_HOME(), confDir);\n    FileUtils.copyFileToDirectory(new File(testHomeConfDir, \"solrconfig-managed-schema.xml\"), tmpConfDir);\n    FileUtils.copyFileToDirectory(new File(testHomeConfDir, \"solrconfig-basic.xml\"), tmpConfDir);\n    FileUtils.copyFileToDirectory(new File(testHomeConfDir, \"solrconfig.snippet.randomindexconfig.xml\"), tmpConfDir);\n    FileUtils.copyFileToDirectory(new File(testHomeConfDir, \"schema-one-field-no-dynamic-field.xml\"), tmpConfDir);\n    FileUtils.copyFileToDirectory(new File(testHomeConfDir, \"schema-one-field-no-dynamic-field-unique-key.xml\"), tmpConfDir);\n    FileUtils.copyFileToDirectory(new File(testHomeConfDir, \"schema-minimal.xml\"), tmpConfDir);\n    FileUtils.copyFileToDirectory(new File(testHomeConfDir, \"schema_codec.xml\"), tmpConfDir);\n    FileUtils.copyFileToDirectory(new File(testHomeConfDir, \"schema-bm25.xml\"), tmpConfDir);\n\n    // initCore will trigger an upgrade to managed schema, since the solrconfig has\n    // <schemaFactory class=\"ManagedIndexSchemaFactory\" ... />\n    System.setProperty(\"managed.schema.mutable\", \"false\");\n    System.setProperty(\"enable.update.log\", \"false\");\n    initCore(\"solrconfig-managed-schema.xml\", \"schema-minimal.xml\", tmpSolrHome.getPath());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f4abec28b874149a7223e32cc7a01704c27790de","date":1410644789,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/schema/TestManagedSchema#initManagedSchemaCore().mjava","pathOld":"solr/core/src/test/org/apache/solr/schema/TestManagedSchema#initManagedSchemaCore().mjava","sourceNew":"  @Before\n  private void initManagedSchemaCore() throws Exception {\n    tmpSolrHome = createTempDir().toFile();\n    tmpConfDir = new File(tmpSolrHome, confDir);\n    File testHomeConfDir = new File(TEST_HOME(), confDir);\n    FileUtils.copyFileToDirectory(new File(testHomeConfDir, \"solrconfig-managed-schema.xml\"), tmpConfDir);\n    FileUtils.copyFileToDirectory(new File(testHomeConfDir, \"solrconfig-basic.xml\"), tmpConfDir);\n    FileUtils.copyFileToDirectory(new File(testHomeConfDir, \"solrconfig.snippet.randomindexconfig.xml\"), tmpConfDir);\n    FileUtils.copyFileToDirectory(new File(testHomeConfDir, \"schema-one-field-no-dynamic-field.xml\"), tmpConfDir);\n    FileUtils.copyFileToDirectory(new File(testHomeConfDir, \"schema-one-field-no-dynamic-field-unique-key.xml\"), tmpConfDir);\n    FileUtils.copyFileToDirectory(new File(testHomeConfDir, \"schema-minimal.xml\"), tmpConfDir);\n    FileUtils.copyFileToDirectory(new File(testHomeConfDir, \"schema_codec.xml\"), tmpConfDir);\n    FileUtils.copyFileToDirectory(new File(testHomeConfDir, \"schema-bm25.xml\"), tmpConfDir);\n\n    // initCore will trigger an upgrade to managed schema, since the solrconfig has\n    // <schemaFactory class=\"ManagedIndexSchemaFactory\" ... />\n    System.setProperty(\"managed.schema.mutable\", \"false\");\n    System.setProperty(\"enable.update.log\", \"false\");\n    initCore(\"solrconfig-managed-schema.xml\", \"schema-minimal.xml\", tmpSolrHome.getPath());\n  }\n\n","sourceOld":"  @Before\n  private void initManagedSchemaCore() throws Exception {\n    tmpSolrHome = createTempDir();\n    tmpConfDir = new File(tmpSolrHome, confDir);\n    File testHomeConfDir = new File(TEST_HOME(), confDir);\n    FileUtils.copyFileToDirectory(new File(testHomeConfDir, \"solrconfig-managed-schema.xml\"), tmpConfDir);\n    FileUtils.copyFileToDirectory(new File(testHomeConfDir, \"solrconfig-basic.xml\"), tmpConfDir);\n    FileUtils.copyFileToDirectory(new File(testHomeConfDir, \"solrconfig.snippet.randomindexconfig.xml\"), tmpConfDir);\n    FileUtils.copyFileToDirectory(new File(testHomeConfDir, \"schema-one-field-no-dynamic-field.xml\"), tmpConfDir);\n    FileUtils.copyFileToDirectory(new File(testHomeConfDir, \"schema-one-field-no-dynamic-field-unique-key.xml\"), tmpConfDir);\n    FileUtils.copyFileToDirectory(new File(testHomeConfDir, \"schema-minimal.xml\"), tmpConfDir);\n    FileUtils.copyFileToDirectory(new File(testHomeConfDir, \"schema_codec.xml\"), tmpConfDir);\n    FileUtils.copyFileToDirectory(new File(testHomeConfDir, \"schema-bm25.xml\"), tmpConfDir);\n\n    // initCore will trigger an upgrade to managed schema, since the solrconfig has\n    // <schemaFactory class=\"ManagedIndexSchemaFactory\" ... />\n    System.setProperty(\"managed.schema.mutable\", \"false\");\n    System.setProperty(\"enable.update.log\", \"false\");\n    initCore(\"solrconfig-managed-schema.xml\", \"schema-minimal.xml\", tmpSolrHome.getPath());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6cd2239be52b443d5348781402d9474cece93334","date":1449473561,"type":3,"author":"Varun Thacker","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/schema/TestManagedSchema#initManagedSchemaCore().mjava","pathOld":"solr/core/src/test/org/apache/solr/schema/TestManagedSchema#initManagedSchemaCore().mjava","sourceNew":"  @Before\n  private void initManagedSchemaCore() throws Exception {\n    tmpSolrHome = createTempDir().toFile();\n    tmpConfDir = new File(tmpSolrHome, confDir);\n    File testHomeConfDir = new File(TEST_HOME(), confDir);\n    FileUtils.copyFileToDirectory(new File(testHomeConfDir, \"solrconfig-managed-schema.xml\"), tmpConfDir);\n    FileUtils.copyFileToDirectory(new File(testHomeConfDir, \"solrconfig-basic.xml\"), tmpConfDir);\n    FileUtils.copyFileToDirectory(new File(testHomeConfDir, \"solrconfig-managed-schema-test.xml\"), tmpConfDir);\n    FileUtils.copyFileToDirectory(new File(testHomeConfDir, \"solrconfig.snippet.randomindexconfig.xml\"), tmpConfDir);\n    FileUtils.copyFileToDirectory(new File(testHomeConfDir, \"schema-one-field-no-dynamic-field.xml\"), tmpConfDir);\n    FileUtils.copyFileToDirectory(new File(testHomeConfDir, \"schema-one-field-no-dynamic-field-unique-key.xml\"), tmpConfDir);\n    FileUtils.copyFileToDirectory(new File(testHomeConfDir, \"schema-minimal.xml\"), tmpConfDir);\n    FileUtils.copyFileToDirectory(new File(testHomeConfDir, \"schema_codec.xml\"), tmpConfDir);\n    FileUtils.copyFileToDirectory(new File(testHomeConfDir, \"schema-bm25.xml\"), tmpConfDir);\n\n    // initCore will trigger an upgrade to managed schema, since the solrconfig has\n    // <schemaFactory class=\"ManagedIndexSchemaFactory\" ... />\n    System.setProperty(\"managed.schema.mutable\", \"false\");\n    System.setProperty(\"enable.update.log\", \"false\");\n    initCore(\"solrconfig-managed-schema.xml\", \"schema-minimal.xml\", tmpSolrHome.getPath());\n  }\n\n","sourceOld":"  @Before\n  private void initManagedSchemaCore() throws Exception {\n    tmpSolrHome = createTempDir().toFile();\n    tmpConfDir = new File(tmpSolrHome, confDir);\n    File testHomeConfDir = new File(TEST_HOME(), confDir);\n    FileUtils.copyFileToDirectory(new File(testHomeConfDir, \"solrconfig-managed-schema.xml\"), tmpConfDir);\n    FileUtils.copyFileToDirectory(new File(testHomeConfDir, \"solrconfig-basic.xml\"), tmpConfDir);\n    FileUtils.copyFileToDirectory(new File(testHomeConfDir, \"solrconfig.snippet.randomindexconfig.xml\"), tmpConfDir);\n    FileUtils.copyFileToDirectory(new File(testHomeConfDir, \"schema-one-field-no-dynamic-field.xml\"), tmpConfDir);\n    FileUtils.copyFileToDirectory(new File(testHomeConfDir, \"schema-one-field-no-dynamic-field-unique-key.xml\"), tmpConfDir);\n    FileUtils.copyFileToDirectory(new File(testHomeConfDir, \"schema-minimal.xml\"), tmpConfDir);\n    FileUtils.copyFileToDirectory(new File(testHomeConfDir, \"schema_codec.xml\"), tmpConfDir);\n    FileUtils.copyFileToDirectory(new File(testHomeConfDir, \"schema-bm25.xml\"), tmpConfDir);\n\n    // initCore will trigger an upgrade to managed schema, since the solrconfig has\n    // <schemaFactory class=\"ManagedIndexSchemaFactory\" ... />\n    System.setProperty(\"managed.schema.mutable\", \"false\");\n    System.setProperty(\"enable.update.log\", \"false\");\n    initCore(\"solrconfig-managed-schema.xml\", \"schema-minimal.xml\", tmpSolrHome.getPath());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"bb1f22cfa77230b5f05b7784feae5367f6bbb488":["d0d579490a72f2e6297eaa648940611234c57cf1"],"2a0f5bb79c600763ffe7b8141df59a3169d31e48":["1416f9d09d016a6894cd17e1caac137dad2bba59","1e9ce820cd3ed9efb959c181daaafd22f0c70143"],"37a0f60745e53927c4c876cfe5b5a58170f0646c":["08970e5b8411182a29412c177eff67ec1110095b","5a7624bc6b738f100f63bb9902e91a84dd67d86f"],"3dffec77fb8f7d0e9ca4869dddd6af94528b4576":["37a0f60745e53927c4c876cfe5b5a58170f0646c","1e0d5dcd5bcba76f5b672a85f179329a4969f456"],"f4abec28b874149a7223e32cc7a01704c27790de":["2a0f5bb79c600763ffe7b8141df59a3169d31e48"],"1e0d5dcd5bcba76f5b672a85f179329a4969f456":["5a7624bc6b738f100f63bb9902e91a84dd67d86f"],"d0d579490a72f2e6297eaa648940611234c57cf1":["1e0d5dcd5bcba76f5b672a85f179329a4969f456"],"08970e5b8411182a29412c177eff67ec1110095b":["9cf81bc8c6e4078e236f0e38b3a2d0271854f207"],"6cd2239be52b443d5348781402d9474cece93334":["f4abec28b874149a7223e32cc7a01704c27790de"],"9cf81bc8c6e4078e236f0e38b3a2d0271854f207":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"f33ef255480d446ae7aa03506be85d0356a9850f":["08970e5b8411182a29412c177eff67ec1110095b"],"1416f9d09d016a6894cd17e1caac137dad2bba59":["1e0d5dcd5bcba76f5b672a85f179329a4969f456"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"1e9ce820cd3ed9efb959c181daaafd22f0c70143":["bb1f22cfa77230b5f05b7784feae5367f6bbb488"],"5a7624bc6b738f100f63bb9902e91a84dd67d86f":["f33ef255480d446ae7aa03506be85d0356a9850f"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["6cd2239be52b443d5348781402d9474cece93334"]},"commit2Childs":{"bb1f22cfa77230b5f05b7784feae5367f6bbb488":["1e9ce820cd3ed9efb959c181daaafd22f0c70143"],"2a0f5bb79c600763ffe7b8141df59a3169d31e48":["f4abec28b874149a7223e32cc7a01704c27790de"],"37a0f60745e53927c4c876cfe5b5a58170f0646c":["3dffec77fb8f7d0e9ca4869dddd6af94528b4576"],"3dffec77fb8f7d0e9ca4869dddd6af94528b4576":[],"d0d579490a72f2e6297eaa648940611234c57cf1":["bb1f22cfa77230b5f05b7784feae5367f6bbb488"],"1e0d5dcd5bcba76f5b672a85f179329a4969f456":["3dffec77fb8f7d0e9ca4869dddd6af94528b4576","d0d579490a72f2e6297eaa648940611234c57cf1","1416f9d09d016a6894cd17e1caac137dad2bba59"],"f4abec28b874149a7223e32cc7a01704c27790de":["6cd2239be52b443d5348781402d9474cece93334"],"08970e5b8411182a29412c177eff67ec1110095b":["37a0f60745e53927c4c876cfe5b5a58170f0646c","f33ef255480d446ae7aa03506be85d0356a9850f"],"6cd2239be52b443d5348781402d9474cece93334":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"9cf81bc8c6e4078e236f0e38b3a2d0271854f207":["08970e5b8411182a29412c177eff67ec1110095b"],"f33ef255480d446ae7aa03506be85d0356a9850f":["5a7624bc6b738f100f63bb9902e91a84dd67d86f"],"1416f9d09d016a6894cd17e1caac137dad2bba59":["2a0f5bb79c600763ffe7b8141df59a3169d31e48"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9cf81bc8c6e4078e236f0e38b3a2d0271854f207"],"1e9ce820cd3ed9efb959c181daaafd22f0c70143":["2a0f5bb79c600763ffe7b8141df59a3169d31e48"],"5a7624bc6b738f100f63bb9902e91a84dd67d86f":["37a0f60745e53927c4c876cfe5b5a58170f0646c","1e0d5dcd5bcba76f5b672a85f179329a4969f456"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["3dffec77fb8f7d0e9ca4869dddd6af94528b4576","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}