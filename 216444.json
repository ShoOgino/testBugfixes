{"path":"solr/test-framework/src/java/org/apache/solr/SolrTestCaseJ4#assertJQ(SolrQueryRequest,String...).mjava","commits":[{"id":"c903c3d15906a3da96b8c0c2fb704491005fdbdb","date":1453508227,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/SolrTestCaseJ4#assertJQ(SolrQueryRequest,String...).mjava","pathOld":"solr/src/test-framework/org/apache/solr/SolrTestCaseJ4#assertJQ(SolrQueryRequest,String...).mjava","sourceNew":"  /**\n   * Validates a query matches some JSON test expressions using the default double delta tollerance.\n   * @see JSONTestUtil#DEFAULT_DELTA\n   * @see #assertJQ(SolrQueryRequest,double,String...)\n   */\n  public static void assertJQ(SolrQueryRequest req, String... tests) throws Exception {\n    assertJQ(req, JSONTestUtil.DEFAULT_DELTA, tests);\n  }\n\n","sourceOld":"  /**\n   * Validates a query matches some JSON test expressions using the default double delta tollerance.\n   * @see JSONTestUtil#DEFAULT_DELTA\n   * @see #assertJQ(SolrQueryRequest,double,String...)\n   */\n  public static void assertJQ(SolrQueryRequest req, String... tests) throws Exception {\n    assertJQ(req, JSONTestUtil.DEFAULT_DELTA, tests);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a258fbb26824fd104ed795e5d9033d2d040049ee","date":1453508252,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/SolrTestCaseJ4#assertJQ(SolrQueryRequest,String...).mjava","pathOld":"solr/src/test-framework/org/apache/solr/SolrTestCaseJ4#assertJQ(SolrQueryRequest,String...).mjava","sourceNew":"  /** \n   * Validates a query matches some JSON test expressions using the default double delta tollerance.\n   * @see JSONTestUtil#DEFAULT_DELTA\n   * @see #assertJQ(SolrQueryRequest,double,String...)\n   */\n  public static void assertJQ(SolrQueryRequest req, String... tests) throws Exception {\n    assertJQ(req, JSONTestUtil.DEFAULT_DELTA, tests);\n  }\n\n","sourceOld":"  /** \n   * Validates a query matches some JSON test expressions using the default double delta tollerance.\n   * @see JSONTestUtil#DEFAULT_DELTA\n   * @see #assertJQ(SolrQueryRequest,double,String...)\n   */\n  public static void assertJQ(SolrQueryRequest req, String... tests) throws Exception {\n    assertJQ(req, JSONTestUtil.DEFAULT_DELTA, tests);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/test-framework/src/java/org/apache/solr/SolrTestCaseJ4#assertJQ(SolrQueryRequest,String...).mjava","pathOld":"solr/src/test-framework/org/apache/solr/SolrTestCaseJ4#assertJQ(SolrQueryRequest,String...).mjava","sourceNew":"  /**\n   * Validates a query matches some JSON test expressions using the default double delta tollerance.\n   * @see JSONTestUtil#DEFAULT_DELTA\n   * @see #assertJQ(SolrQueryRequest,double,String...)\n   */\n  public static void assertJQ(SolrQueryRequest req, String... tests) throws Exception {\n    assertJQ(req, JSONTestUtil.DEFAULT_DELTA, tests);\n  }\n\n","sourceOld":"  /** \n   * Validates a query matches some JSON test expressions using the default double delta tollerance.\n   * @see JSONTestUtil#DEFAULT_DELTA\n   * @see #assertJQ(SolrQueryRequest,double,String...)\n   */\n  public static void assertJQ(SolrQueryRequest req, String... tests) throws Exception {\n    assertJQ(req, JSONTestUtil.DEFAULT_DELTA, tests);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7602e63987582091a0e432f8d8f7619d2206fab7","date":1361393626,"type":3,"author":"Steven Rowe","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/SolrTestCaseJ4#assertJQ(SolrQueryRequest,String...).mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/SolrTestCaseJ4#assertJQ(SolrQueryRequest,String...).mjava","sourceNew":"  /**\n   * Validates a query matches some JSON test expressions using the default double delta tolerance.\n   * @see JSONTestUtil#DEFAULT_DELTA\n   * @see #assertJQ(SolrQueryRequest,double,String...)\n   */\n  public static void assertJQ(SolrQueryRequest req, String... tests) throws Exception {\n    assertJQ(req, JSONTestUtil.DEFAULT_DELTA, tests);\n  }\n\n","sourceOld":"  /**\n   * Validates a query matches some JSON test expressions using the default double delta tollerance.\n   * @see JSONTestUtil#DEFAULT_DELTA\n   * @see #assertJQ(SolrQueryRequest,double,String...)\n   */\n  public static void assertJQ(SolrQueryRequest req, String... tests) throws Exception {\n    assertJQ(req, JSONTestUtil.DEFAULT_DELTA, tests);\n  }\n\n","bugFix":["7395bdaa5646a7eb2087b1043b713b4bf3294a5c"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"19275ba31e621f6da1b83bf13af75233876fd3d4","date":1374846698,"type":3,"author":"Han Jiang","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/SolrTestCaseJ4#assertJQ(SolrQueryRequest,String...).mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/SolrTestCaseJ4#assertJQ(SolrQueryRequest,String...).mjava","sourceNew":"  /**\n   * Validates a query matches some JSON test expressions using the default double delta tolerance.\n   * @see JSONTestUtil#DEFAULT_DELTA\n   * @see #assertJQ(SolrQueryRequest,double,String...)\n   */\n  public static void assertJQ(SolrQueryRequest req, String... tests) throws Exception {\n    assertJQ(req, JSONTestUtil.DEFAULT_DELTA, tests);\n  }\n\n","sourceOld":"  /**\n   * Validates a query matches some JSON test expressions using the default double delta tolerance.\n   * @see JSONTestUtil#DEFAULT_DELTA\n   * @see #assertJQ(SolrQueryRequest,double,String...)\n   */\n  public static void assertJQ(SolrQueryRequest req, String... tests) throws Exception {\n    assertJQ(req, JSONTestUtil.DEFAULT_DELTA, tests);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"716d18f3a9b0993bc679d7fa7abdc9bfb03411ec","date":1376375609,"type":3,"author":"Han Jiang","isMerge":true,"pathNew":"solr/test-framework/src/java/org/apache/solr/SolrTestCaseJ4#assertJQ(SolrQueryRequest,String...).mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/SolrTestCaseJ4#assertJQ(SolrQueryRequest,String...).mjava","sourceNew":"  /**\n   * Validates a query matches some JSON test expressions using the default double delta tolerance.\n   * @see JSONTestUtil#DEFAULT_DELTA\n   * @see #assertJQ(SolrQueryRequest,double,String...)\n   */\n  public static void assertJQ(SolrQueryRequest req, String... tests) throws Exception {\n    assertJQ(req, JSONTestUtil.DEFAULT_DELTA, tests);\n  }\n\n","sourceOld":"  /**\n   * Validates a query matches some JSON test expressions using the default double delta tolerance.\n   * @see JSONTestUtil#DEFAULT_DELTA\n   * @see #assertJQ(SolrQueryRequest,double,String...)\n   */\n  public static void assertJQ(SolrQueryRequest req, String... tests) throws Exception {\n    assertJQ(req, JSONTestUtil.DEFAULT_DELTA, tests);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d5bc8e25f59990525f5beb14afe9c96240dcf4a2","date":1389042945,"type":3,"author":"Chris M. Hostetter","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/SolrTestCaseJ4#assertJQ(SolrQueryRequest,String...).mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/SolrTestCaseJ4#assertJQ(SolrQueryRequest,String...).mjava","sourceNew":"  /**\n   * Validates a query matches some JSON test expressions using the default double delta tolerance.\n   * @see JSONTestUtil#DEFAULT_DELTA\n   * @see #assertJQ(SolrQueryRequest,double,String...)\n   * @return The request response as a JSON String if all test patterns pass\n   */\n  public static String assertJQ(SolrQueryRequest req, String... tests) throws Exception {\n    return assertJQ(req, JSONTestUtil.DEFAULT_DELTA, tests);\n  }\n\n","sourceOld":"  /**\n   * Validates a query matches some JSON test expressions using the default double delta tolerance.\n   * @see JSONTestUtil#DEFAULT_DELTA\n   * @see #assertJQ(SolrQueryRequest,double,String...)\n   */\n  public static void assertJQ(SolrQueryRequest req, String... tests) throws Exception {\n    assertJQ(req, JSONTestUtil.DEFAULT_DELTA, tests);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"716d18f3a9b0993bc679d7fa7abdc9bfb03411ec":["7602e63987582091a0e432f8d8f7619d2206fab7","19275ba31e621f6da1b83bf13af75233876fd3d4"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"c26f00b574427b55127e869b935845554afde1fa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","c903c3d15906a3da96b8c0c2fb704491005fdbdb"],"d5bc8e25f59990525f5beb14afe9c96240dcf4a2":["19275ba31e621f6da1b83bf13af75233876fd3d4"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"19275ba31e621f6da1b83bf13af75233876fd3d4":["7602e63987582091a0e432f8d8f7619d2206fab7"],"a258fbb26824fd104ed795e5d9033d2d040049ee":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"7602e63987582091a0e432f8d8f7619d2206fab7":["c26f00b574427b55127e869b935845554afde1fa"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["d5bc8e25f59990525f5beb14afe9c96240dcf4a2"]},"commit2Childs":{"716d18f3a9b0993bc679d7fa7abdc9bfb03411ec":[],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["c26f00b574427b55127e869b935845554afde1fa"],"c26f00b574427b55127e869b935845554afde1fa":["7602e63987582091a0e432f8d8f7619d2206fab7"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c903c3d15906a3da96b8c0c2fb704491005fdbdb","c26f00b574427b55127e869b935845554afde1fa","a258fbb26824fd104ed795e5d9033d2d040049ee"],"d5bc8e25f59990525f5beb14afe9c96240dcf4a2":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"19275ba31e621f6da1b83bf13af75233876fd3d4":["716d18f3a9b0993bc679d7fa7abdc9bfb03411ec","d5bc8e25f59990525f5beb14afe9c96240dcf4a2"],"a258fbb26824fd104ed795e5d9033d2d040049ee":[],"7602e63987582091a0e432f8d8f7619d2206fab7":["716d18f3a9b0993bc679d7fa7abdc9bfb03411ec","19275ba31e621f6da1b83bf13af75233876fd3d4"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["716d18f3a9b0993bc679d7fa7abdc9bfb03411ec","a258fbb26824fd104ed795e5d9033d2d040049ee","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}