{"path":"lucene/core/src/java/org/apache/lucene/search/LongValuesSource.LongValuesComparatorSource#newComparator(String,int,int,boolean).mjava","commits":[{"id":"2a4ff4adbb114e3d4c1b09305005237ee1c28a15","date":1483014160,"type":0,"author":"Alan Woodward","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/LongValuesSource.LongValuesComparatorSource#newComparator(String,int,int,boolean).mjava","pathOld":"/dev/null","sourceNew":"    @Override\n    public FieldComparator<Long> newComparator(String fieldname, int numHits,\n                                                 int sortPos, boolean reversed) throws IOException {\n      return new FieldComparator.LongComparator(numHits, fieldname, 0L){\n\n        LeafReaderContext ctx;\n        LongValuesHolder holder = new LongValuesHolder();\n\n        @Override\n        protected NumericDocValues getNumericDocValues(LeafReaderContext context, String field) throws IOException {\n          ctx = context;\n          return asNumericDocValues(holder);\n        }\n\n        @Override\n        public void setScorer(Scorer scorer) throws IOException {\n          holder.values = producer.getValues(ctx, DoubleValuesSource.fromScorer(scorer));\n        }\n      };\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f03e4bed5023ec3ef93a771b8888cae991cf448d","date":1483469262,"type":0,"author":"Kevin Risden","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/search/LongValuesSource.LongValuesComparatorSource#newComparator(String,int,int,boolean).mjava","pathOld":"/dev/null","sourceNew":"    @Override\n    public FieldComparator<Long> newComparator(String fieldname, int numHits,\n                                                 int sortPos, boolean reversed) throws IOException {\n      return new FieldComparator.LongComparator(numHits, fieldname, 0L){\n\n        LeafReaderContext ctx;\n        LongValuesHolder holder = new LongValuesHolder();\n\n        @Override\n        protected NumericDocValues getNumericDocValues(LeafReaderContext context, String field) throws IOException {\n          ctx = context;\n          return asNumericDocValues(holder);\n        }\n\n        @Override\n        public void setScorer(Scorer scorer) throws IOException {\n          holder.values = producer.getValues(ctx, DoubleValuesSource.fromScorer(scorer));\n        }\n      };\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"03e38c6374c23083c93e212a9498ff0a9c255476","date":1484767039,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/LongValuesSource.LongValuesComparatorSource#newComparator(String,int,int,boolean).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/LongValuesSource.LongValuesComparatorSource#newComparator(String,int,int,boolean).mjava","sourceNew":"    @Override\n    public FieldComparator<Long> newComparator(String fieldname, int numHits,\n                                                 int sortPos, boolean reversed) {\n      return new FieldComparator.LongComparator(numHits, fieldname, 0L){\n\n        LeafReaderContext ctx;\n        LongValuesHolder holder = new LongValuesHolder();\n\n        @Override\n        protected NumericDocValues getNumericDocValues(LeafReaderContext context, String field) throws IOException {\n          ctx = context;\n          return asNumericDocValues(holder);\n        }\n\n        @Override\n        public void setScorer(Scorer scorer) throws IOException {\n          holder.values = producer.getValues(ctx, DoubleValuesSource.fromScorer(scorer));\n        }\n      };\n    }\n\n","sourceOld":"    @Override\n    public FieldComparator<Long> newComparator(String fieldname, int numHits,\n                                                 int sortPos, boolean reversed) throws IOException {\n      return new FieldComparator.LongComparator(numHits, fieldname, 0L){\n\n        LeafReaderContext ctx;\n        LongValuesHolder holder = new LongValuesHolder();\n\n        @Override\n        protected NumericDocValues getNumericDocValues(LeafReaderContext context, String field) throws IOException {\n          ctx = context;\n          return asNumericDocValues(holder);\n        }\n\n        @Override\n        public void setScorer(Scorer scorer) throws IOException {\n          holder.values = producer.getValues(ctx, DoubleValuesSource.fromScorer(scorer));\n        }\n      };\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"90a682dc1bfd188ef61cc28373c7f5d700b4ac75","date":1485186128,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/search/LongValuesSource.LongValuesComparatorSource#newComparator(String,int,int,boolean).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/LongValuesSource.LongValuesComparatorSource#newComparator(String,int,int,boolean).mjava","sourceNew":"    @Override\n    public FieldComparator<Long> newComparator(String fieldname, int numHits,\n                                                 int sortPos, boolean reversed) {\n      return new FieldComparator.LongComparator(numHits, fieldname, 0L){\n\n        LeafReaderContext ctx;\n        LongValuesHolder holder = new LongValuesHolder();\n\n        @Override\n        protected NumericDocValues getNumericDocValues(LeafReaderContext context, String field) throws IOException {\n          ctx = context;\n          return asNumericDocValues(holder);\n        }\n\n        @Override\n        public void setScorer(Scorer scorer) throws IOException {\n          holder.values = producer.getValues(ctx, DoubleValuesSource.fromScorer(scorer));\n        }\n      };\n    }\n\n","sourceOld":"    @Override\n    public FieldComparator<Long> newComparator(String fieldname, int numHits,\n                                                 int sortPos, boolean reversed) throws IOException {\n      return new FieldComparator.LongComparator(numHits, fieldname, 0L){\n\n        LeafReaderContext ctx;\n        LongValuesHolder holder = new LongValuesHolder();\n\n        @Override\n        protected NumericDocValues getNumericDocValues(LeafReaderContext context, String field) throws IOException {\n          ctx = context;\n          return asNumericDocValues(holder);\n        }\n\n        @Override\n        public void setScorer(Scorer scorer) throws IOException {\n          holder.values = producer.getValues(ctx, DoubleValuesSource.fromScorer(scorer));\n        }\n      };\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"285244982ce6aa163d1e60a707f0e6e121736ce5","date":1536055304,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/LongValuesSource.LongValuesComparatorSource#newComparator(String,int,int,boolean).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/LongValuesSource.LongValuesComparatorSource#newComparator(String,int,int,boolean).mjava","sourceNew":"    @Override\n    public FieldComparator<Long> newComparator(String fieldname, int numHits,\n                                                 int sortPos, boolean reversed) {\n      return new FieldComparator.LongComparator(numHits, fieldname, 0L){\n\n        LeafReaderContext ctx;\n        LongValuesHolder holder = new LongValuesHolder();\n\n        @Override\n        protected NumericDocValues getNumericDocValues(LeafReaderContext context, String field) throws IOException {\n          ctx = context;\n          return asNumericDocValues(holder);\n        }\n\n        @Override\n        public void setScorer(Scorable scorer) throws IOException {\n          holder.values = producer.getValues(ctx, DoubleValuesSource.fromScorer(scorer));\n        }\n      };\n    }\n\n","sourceOld":"    @Override\n    public FieldComparator<Long> newComparator(String fieldname, int numHits,\n                                                 int sortPos, boolean reversed) {\n      return new FieldComparator.LongComparator(numHits, fieldname, 0L){\n\n        LeafReaderContext ctx;\n        LongValuesHolder holder = new LongValuesHolder();\n\n        @Override\n        protected NumericDocValues getNumericDocValues(LeafReaderContext context, String field) throws IOException {\n          ctx = context;\n          return asNumericDocValues(holder);\n        }\n\n        @Override\n        public void setScorer(Scorer scorer) throws IOException {\n          holder.values = producer.getValues(ctx, DoubleValuesSource.fromScorer(scorer));\n        }\n      };\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"57e484d60e29c53f71211c63a54834c41663b68c","date":1554280956,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/LongValuesSource.LongValuesComparatorSource#newComparator(String,int,int,boolean).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/LongValuesSource.LongValuesComparatorSource#newComparator(String,int,int,boolean).mjava","sourceNew":"    @Override\n    public FieldComparator<Long> newComparator(String fieldname, int numHits,\n                                               int sortPos, boolean reversed) {\n      return new FieldComparator.LongComparator(numHits, fieldname, missingValue) {\n\n        LeafReaderContext ctx;\n        LongValuesHolder holder = new LongValuesHolder();\n\n        @Override\n        protected NumericDocValues getNumericDocValues(LeafReaderContext context, String field) throws IOException {\n          ctx = context;\n          return asNumericDocValues(holder);\n        }\n\n        @Override\n        public void setScorer(Scorable scorer) throws IOException {\n          holder.values = producer.getValues(ctx, DoubleValuesSource.fromScorer(scorer));\n        }\n      };\n    }\n\n","sourceOld":"    @Override\n    public FieldComparator<Long> newComparator(String fieldname, int numHits,\n                                                 int sortPos, boolean reversed) {\n      return new FieldComparator.LongComparator(numHits, fieldname, 0L){\n\n        LeafReaderContext ctx;\n        LongValuesHolder holder = new LongValuesHolder();\n\n        @Override\n        protected NumericDocValues getNumericDocValues(LeafReaderContext context, String field) throws IOException {\n          ctx = context;\n          return asNumericDocValues(holder);\n        }\n\n        @Override\n        public void setScorer(Scorable scorer) throws IOException {\n          holder.values = producer.getValues(ctx, DoubleValuesSource.fromScorer(scorer));\n        }\n      };\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e3d1c24d2bbe79dcf77ffcb104706e42ae3c9241","date":1599588987,"type":3,"author":"Mayya Sharipova","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/LongValuesSource.LongValuesComparatorSource#newComparator(String,int,int,boolean).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/LongValuesSource.LongValuesComparatorSource#newComparator(String,int,int,boolean).mjava","sourceNew":"    @Override\n    public FieldComparator<Long> newComparator(String fieldname, int numHits,\n                                               int sortPos, boolean reversed) {\n      return new LongComparator(numHits, fieldname, missingValue, reversed, sortPos) {\n        @Override\n        public LeafFieldComparator getLeafComparator(LeafReaderContext context) throws IOException {\n          LongValuesHolder holder = new LongValuesHolder();\n\n          return new LongComparator.LongLeafComparator(context) {\n            LeafReaderContext ctx;\n\n            @Override\n            protected NumericDocValues getNumericDocValues(LeafReaderContext context, String field) {\n              ctx = context;\n              return asNumericDocValues(holder);\n            }\n\n            @Override\n            public void setScorer(Scorable scorer) throws IOException {\n              holder.values = producer.getValues(ctx, DoubleValuesSource.fromScorer(scorer));\n              super.setScorer(scorer);\n            }\n          };\n        }\n      };\n    }\n\n","sourceOld":"    @Override\n    public FieldComparator<Long> newComparator(String fieldname, int numHits,\n                                               int sortPos, boolean reversed) {\n      return new FieldComparator.LongComparator(numHits, fieldname, missingValue) {\n\n        LeafReaderContext ctx;\n        LongValuesHolder holder = new LongValuesHolder();\n\n        @Override\n        protected NumericDocValues getNumericDocValues(LeafReaderContext context, String field) throws IOException {\n          ctx = context;\n          return asNumericDocValues(holder);\n        }\n\n        @Override\n        public void setScorer(Scorable scorer) throws IOException {\n          holder.values = producer.getValues(ctx, DoubleValuesSource.fromScorer(scorer));\n        }\n      };\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"03e38c6374c23083c93e212a9498ff0a9c255476":["2a4ff4adbb114e3d4c1b09305005237ee1c28a15"],"285244982ce6aa163d1e60a707f0e6e121736ce5":["03e38c6374c23083c93e212a9498ff0a9c255476"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"57e484d60e29c53f71211c63a54834c41663b68c":["285244982ce6aa163d1e60a707f0e6e121736ce5"],"2a4ff4adbb114e3d4c1b09305005237ee1c28a15":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"90a682dc1bfd188ef61cc28373c7f5d700b4ac75":["f03e4bed5023ec3ef93a771b8888cae991cf448d","03e38c6374c23083c93e212a9498ff0a9c255476"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["e3d1c24d2bbe79dcf77ffcb104706e42ae3c9241"],"e3d1c24d2bbe79dcf77ffcb104706e42ae3c9241":["57e484d60e29c53f71211c63a54834c41663b68c"],"f03e4bed5023ec3ef93a771b8888cae991cf448d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","2a4ff4adbb114e3d4c1b09305005237ee1c28a15"]},"commit2Childs":{"03e38c6374c23083c93e212a9498ff0a9c255476":["285244982ce6aa163d1e60a707f0e6e121736ce5","90a682dc1bfd188ef61cc28373c7f5d700b4ac75"],"285244982ce6aa163d1e60a707f0e6e121736ce5":["57e484d60e29c53f71211c63a54834c41663b68c"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["2a4ff4adbb114e3d4c1b09305005237ee1c28a15","f03e4bed5023ec3ef93a771b8888cae991cf448d"],"2a4ff4adbb114e3d4c1b09305005237ee1c28a15":["03e38c6374c23083c93e212a9498ff0a9c255476","f03e4bed5023ec3ef93a771b8888cae991cf448d"],"57e484d60e29c53f71211c63a54834c41663b68c":["e3d1c24d2bbe79dcf77ffcb104706e42ae3c9241"],"90a682dc1bfd188ef61cc28373c7f5d700b4ac75":[],"f03e4bed5023ec3ef93a771b8888cae991cf448d":["90a682dc1bfd188ef61cc28373c7f5d700b4ac75"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"e3d1c24d2bbe79dcf77ffcb104706e42ae3c9241":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["90a682dc1bfd188ef61cc28373c7f5d700b4ac75","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}