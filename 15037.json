{"path":"lucene/test-framework/src/java/org/apache/lucene/index/BaseIndexFileFormatTestCase#bytesUsedByExtension(Directory).mjava","commits":[{"id":"3a88f37cd0154833b5c58daac509eb8be347d0f2","date":1397029487,"type":0,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/index/BaseIndexFileFormatTestCase#bytesUsedByExtension(Directory).mjava","pathOld":"/dev/null","sourceNew":"  private Map<String, Long> bytesUsedByExtension(Directory d) throws IOException {\n    Map<String, Long> bytesUsedByExtension = new HashMap<>();\n    for (String file : d.listAll()) {\n      final String ext = IndexFileNames.getExtension(file);\n      final long previousLength = bytesUsedByExtension.containsKey(ext) ? bytesUsedByExtension.get(ext) : 0;\n      bytesUsedByExtension.put(ext, previousLength + d.fileLength(file));\n    }\n    bytesUsedByExtension.keySet().removeAll(excludedExtensionsFromByteCounts());\n\n    return bytesUsedByExtension;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"22989c36ff05c657df26dd3377b37c9ad35859bc","date":1424477375,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/index/BaseIndexFileFormatTestCase#bytesUsedByExtension(Directory).mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/index/BaseIndexFileFormatTestCase#bytesUsedByExtension(Directory).mjava","sourceNew":"  private Map<String, Long> bytesUsedByExtension(Directory d) throws IOException {\n    Map<String, Long> bytesUsedByExtension = new HashMap<>();\n    for (String file : d.listAll()) {\n      if (IndexFileNames.CODEC_FILE_PATTERN.matcher(file).matches()) {\n        final String ext = IndexFileNames.getExtension(file);\n        final long previousLength = bytesUsedByExtension.containsKey(ext) ? bytesUsedByExtension.get(ext) : 0;\n        bytesUsedByExtension.put(ext, previousLength + d.fileLength(file));\n      }\n    }\n    bytesUsedByExtension.keySet().removeAll(excludedExtensionsFromByteCounts());\n\n    return bytesUsedByExtension;\n  }\n\n","sourceOld":"  private Map<String, Long> bytesUsedByExtension(Directory d) throws IOException {\n    Map<String, Long> bytesUsedByExtension = new HashMap<>();\n    for (String file : d.listAll()) {\n      final String ext = IndexFileNames.getExtension(file);\n      final long previousLength = bytesUsedByExtension.containsKey(ext) ? bytesUsedByExtension.get(ext) : 0;\n      bytesUsedByExtension.put(ext, previousLength + d.fileLength(file));\n    }\n    bytesUsedByExtension.keySet().removeAll(excludedExtensionsFromByteCounts());\n\n    return bytesUsedByExtension;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"22989c36ff05c657df26dd3377b37c9ad35859bc":["3a88f37cd0154833b5c58daac509eb8be347d0f2"],"3a88f37cd0154833b5c58daac509eb8be347d0f2":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["22989c36ff05c657df26dd3377b37c9ad35859bc"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a88f37cd0154833b5c58daac509eb8be347d0f2"],"22989c36ff05c657df26dd3377b37c9ad35859bc":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3a88f37cd0154833b5c58daac509eb8be347d0f2":["22989c36ff05c657df26dd3377b37c9ad35859bc"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}