{"path":"lucene/sandbox/src/test/org/apache/lucene/search/TestGeoPointQuery#radiusQueryCanBeWrong(double,double,double,double,double).mjava","commits":[{"id":"a4c5421d43870949fb33be27fc9cba0f8f3a7c8d","date":1437181221,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/sandbox/src/test/org/apache/lucene/search/TestGeoPointQuery#radiusQueryCanBeWrong(double,double,double,double,double).mjava","pathOld":"/dev/null","sourceNew":"  private static boolean radiusQueryCanBeWrong(double centerLat, double centerLon, double ptLon, double ptLat,\n                                               final double radius) {\n    final long hashedCntr = GeoUtils.mortonHash(centerLon, centerLat);\n    centerLon = GeoUtils.mortonUnhashLon(hashedCntr);\n    centerLat = GeoUtils.mortonUnhashLat(hashedCntr);\n    final long hashedPt = GeoUtils.mortonHash(ptLon, ptLat);\n    ptLon = GeoUtils.mortonUnhashLon(hashedPt);\n    ptLat = GeoUtils.mortonUnhashLat(hashedPt);\n\n    double ptDistance = SloppyMath.haversin(centerLat, centerLon, ptLat, ptLon)*1000.0;\n    double delta = StrictMath.abs(ptDistance - radius);\n\n    // if its within the distance error then it can be wrong\n    return delta < DISTANCE_ERR;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["ec60431d008a694828dacb4bc3cda775b6c44a9f","ec60431d008a694828dacb4bc3cda775b6c44a9f"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"07c50cb1eca5629cac5b6702dd0f5e06157af61a","date":1445464748,"type":3,"author":"Nick Knize","isMerge":false,"pathNew":"lucene/sandbox/src/test/org/apache/lucene/search/TestGeoPointQuery#radiusQueryCanBeWrong(double,double,double,double,double).mjava","pathOld":"lucene/sandbox/src/test/org/apache/lucene/search/TestGeoPointQuery#radiusQueryCanBeWrong(double,double,double,double,double).mjava","sourceNew":"  private static boolean radiusQueryCanBeWrong(double centerLat, double centerLon, double ptLon, double ptLat,\n                                               final double radius) {\n    final long hashedCntr = GeoUtils.mortonHash(centerLon, centerLat);\n    centerLon = GeoUtils.mortonUnhashLon(hashedCntr);\n    centerLat = GeoUtils.mortonUnhashLat(hashedCntr);\n    final long hashedPt = GeoUtils.mortonHash(ptLon, ptLat);\n    ptLon = GeoUtils.mortonUnhashLon(hashedPt);\n    ptLat = GeoUtils.mortonUnhashLat(hashedPt);\n\n    double ptDistance = SloppyMath.haversin(centerLat, centerLon, ptLat, ptLon)*1000.0;\n    double delta = StrictMath.abs(ptDistance - radius);\n\n    // if its within the distance error then it can be wrong\n    return delta < (ptDistance*DISTANCE_PCT_ERR);\n  }\n\n","sourceOld":"  private static boolean radiusQueryCanBeWrong(double centerLat, double centerLon, double ptLon, double ptLat,\n                                               final double radius) {\n    final long hashedCntr = GeoUtils.mortonHash(centerLon, centerLat);\n    centerLon = GeoUtils.mortonUnhashLon(hashedCntr);\n    centerLat = GeoUtils.mortonUnhashLat(hashedCntr);\n    final long hashedPt = GeoUtils.mortonHash(ptLon, ptLat);\n    ptLon = GeoUtils.mortonUnhashLon(hashedPt);\n    ptLat = GeoUtils.mortonUnhashLat(hashedPt);\n\n    double ptDistance = SloppyMath.haversin(centerLat, centerLon, ptLat, ptLon)*1000.0;\n    double delta = StrictMath.abs(ptDistance - radius);\n\n    // if its within the distance error then it can be wrong\n    return delta < DISTANCE_ERR;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"937923083e4d137932336fc80f3d78758ff698a6","date":1454691519,"type":5,"author":"nknize","isMerge":false,"pathNew":"lucene/spatial/src/test/org/apache/lucene/spatial/search/TestGeoPointQuery#radiusQueryCanBeWrong(double,double,double,double,double).mjava","pathOld":"lucene/sandbox/src/test/org/apache/lucene/search/TestGeoPointQuery#radiusQueryCanBeWrong(double,double,double,double,double).mjava","sourceNew":"  private static boolean radiusQueryCanBeWrong(double centerLat, double centerLon, double ptLon, double ptLat,\n                                               final double radius) {\n    final long hashedCntr = GeoUtils.mortonHash(centerLon, centerLat);\n    centerLon = GeoUtils.mortonUnhashLon(hashedCntr);\n    centerLat = GeoUtils.mortonUnhashLat(hashedCntr);\n    final long hashedPt = GeoUtils.mortonHash(ptLon, ptLat);\n    ptLon = GeoUtils.mortonUnhashLon(hashedPt);\n    ptLat = GeoUtils.mortonUnhashLat(hashedPt);\n\n    double ptDistance = SloppyMath.haversin(centerLat, centerLon, ptLat, ptLon)*1000.0;\n    double delta = StrictMath.abs(ptDistance - radius);\n\n    // if its within the distance error then it can be wrong\n    return delta < (ptDistance*DISTANCE_PCT_ERR);\n  }\n\n","sourceOld":"  private static boolean radiusQueryCanBeWrong(double centerLat, double centerLon, double ptLon, double ptLat,\n                                               final double radius) {\n    final long hashedCntr = GeoUtils.mortonHash(centerLon, centerLat);\n    centerLon = GeoUtils.mortonUnhashLon(hashedCntr);\n    centerLat = GeoUtils.mortonUnhashLat(hashedCntr);\n    final long hashedPt = GeoUtils.mortonHash(ptLon, ptLat);\n    ptLon = GeoUtils.mortonUnhashLon(hashedPt);\n    ptLat = GeoUtils.mortonUnhashLat(hashedPt);\n\n    double ptDistance = SloppyMath.haversin(centerLat, centerLon, ptLat, ptLon)*1000.0;\n    double delta = StrictMath.abs(ptDistance - radius);\n\n    // if its within the distance error then it can be wrong\n    return delta < (ptDistance*DISTANCE_PCT_ERR);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"1e6acbaae7af722f17204ceccf0f7db5753eccf3","date":1454775255,"type":5,"author":"Mike McCandless","isMerge":true,"pathNew":"lucene/spatial/src/test/org/apache/lucene/spatial/search/TestGeoPointQuery#radiusQueryCanBeWrong(double,double,double,double,double).mjava","pathOld":"lucene/sandbox/src/test/org/apache/lucene/search/TestGeoPointQuery#radiusQueryCanBeWrong(double,double,double,double,double).mjava","sourceNew":"  private static boolean radiusQueryCanBeWrong(double centerLat, double centerLon, double ptLon, double ptLat,\n                                               final double radius) {\n    final long hashedCntr = GeoEncodingUtils.mortonHash(centerLon, centerLat);\n    centerLon = GeoEncodingUtils.mortonUnhashLon(hashedCntr);\n    centerLat = GeoEncodingUtils.mortonUnhashLat(hashedCntr);\n    final long hashedPt = GeoEncodingUtils.mortonHash(ptLon, ptLat);\n    ptLon = GeoEncodingUtils.mortonUnhashLon(hashedPt);\n    ptLat = GeoEncodingUtils.mortonUnhashLat(hashedPt);\n\n    double ptDistance = SloppyMath.haversin(centerLat, centerLon, ptLat, ptLon)*1000.0;\n    double delta = StrictMath.abs(ptDistance - radius);\n\n    // if its within the distance error then it can be wrong\n    return delta < (ptDistance*DISTANCE_PCT_ERR);\n  }\n\n","sourceOld":"  private static boolean radiusQueryCanBeWrong(double centerLat, double centerLon, double ptLon, double ptLat,\n                                               final double radius) {\n    final long hashedCntr = GeoUtils.mortonHash(centerLon, centerLat);\n    centerLon = GeoUtils.mortonUnhashLon(hashedCntr);\n    centerLat = GeoUtils.mortonUnhashLat(hashedCntr);\n    final long hashedPt = GeoUtils.mortonHash(ptLon, ptLat);\n    ptLon = GeoUtils.mortonUnhashLon(hashedPt);\n    ptLat = GeoUtils.mortonUnhashLat(hashedPt);\n\n    double ptDistance = SloppyMath.haversin(centerLat, centerLon, ptLat, ptLon)*1000.0;\n    double delta = StrictMath.abs(ptDistance - radius);\n\n    // if its within the distance error then it can be wrong\n    return delta < (ptDistance*DISTANCE_PCT_ERR);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a4c5421d43870949fb33be27fc9cba0f8f3a7c8d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"1e6acbaae7af722f17204ceccf0f7db5753eccf3":["07c50cb1eca5629cac5b6702dd0f5e06157af61a","937923083e4d137932336fc80f3d78758ff698a6"],"07c50cb1eca5629cac5b6702dd0f5e06157af61a":["a4c5421d43870949fb33be27fc9cba0f8f3a7c8d"],"937923083e4d137932336fc80f3d78758ff698a6":["07c50cb1eca5629cac5b6702dd0f5e06157af61a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["937923083e4d137932336fc80f3d78758ff698a6"]},"commit2Childs":{"a4c5421d43870949fb33be27fc9cba0f8f3a7c8d":["07c50cb1eca5629cac5b6702dd0f5e06157af61a"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["a4c5421d43870949fb33be27fc9cba0f8f3a7c8d"],"1e6acbaae7af722f17204ceccf0f7db5753eccf3":[],"07c50cb1eca5629cac5b6702dd0f5e06157af61a":["1e6acbaae7af722f17204ceccf0f7db5753eccf3","937923083e4d137932336fc80f3d78758ff698a6"],"937923083e4d137932336fc80f3d78758ff698a6":["1e6acbaae7af722f17204ceccf0f7db5753eccf3","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["1e6acbaae7af722f17204ceccf0f7db5753eccf3","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}