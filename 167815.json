{"path":"solr/test-framework/src/java/org/apache/solr/SolrTestCaseJ4#clearObjectTrackerAndCheckEmpty(int,boolean).mjava","commits":[{"id":"ed2d3cbea990a1cd6c54a591a294f629964b01be","date":1488991463,"type":0,"author":"Mark Miller","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/SolrTestCaseJ4#clearObjectTrackerAndCheckEmpty(int,boolean).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * @return null if ok else error message\n   */\n  public static String clearObjectTrackerAndCheckEmpty(int waitSeconds, boolean tryClose) {\n    int retries = 0;\n    String result;\n    do {\n      result = ObjectReleaseTracker.checkEmpty();\n      if (result == null)\n        break;\n      try {\n        if (retries % 10 == 0) {\n          log.info(\"Waiting for all tracked resources to be released\");\n          if (retries > 10) {\n            TraceFormatting tf = new TraceFormatting(DEFAULT_STACK_FILTERS);\n            Map<Thread,StackTraceElement[]> stacksMap = Thread.getAllStackTraces();\n            Set<Entry<Thread,StackTraceElement[]>> entries = stacksMap.entrySet();\n            for (Entry<Thread,StackTraceElement[]> entry : entries) {\n              String stack = tf.formatStackTrace(entry.getValue());\n              System.err.println(entry.getKey().getName() + \":\\n\" + stack);\n            }\n          }\n        }\n        TimeUnit.SECONDS.sleep(1);\n      } catch (InterruptedException e) { break; }\n    }\n    while (retries++ < waitSeconds);\n    \n    \n    log.info(\"------------------------------------------------------- Done waiting for tracked resources to be released\");\n    \n    if (tryClose && result != null && RandomizedContext.current().getTargetClass().isAnnotationPresent(SuppressObjectReleaseTracker.class)) {\n      log.warn(\n          \"Some resources were not closed, shutdown, or released. This has been ignored due to the SuppressObjectReleaseTracker annotation, trying to close them now.\");\n      ObjectReleaseTracker.tryClose();\n    }\n    \n    ObjectReleaseTracker.clear();\n    \n    return result;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["bb222a3f9d9421d5c95afce73013fbd8de07ea1f"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"bb222a3f9d9421d5c95afce73013fbd8de07ea1f","date":1543514331,"type":3,"author":"markrmiller","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/SolrTestCaseJ4#clearObjectTrackerAndCheckEmpty(int,boolean).mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/SolrTestCaseJ4#clearObjectTrackerAndCheckEmpty(int,boolean).mjava","sourceNew":"  /**\n   * @return null if ok else error message\n   */\n  public static String clearObjectTrackerAndCheckEmpty(int waitSeconds, boolean tryClose) {\n    int retries = 0;\n    String result;\n    do {\n      result = ObjectReleaseTracker.checkEmpty();\n      if (result == null)\n        break;\n      try {\n        if (retries % 10 == 0) {\n          log.info(\"Waiting for all tracked resources to be released\");\n          if (retries > 10) {\n            TraceFormatting tf = new TraceFormatting(DEFAULT_STACK_FILTERS);\n            Map<Thread,StackTraceElement[]> stacksMap = Thread.getAllStackTraces();\n            Set<Entry<Thread,StackTraceElement[]>> entries = stacksMap.entrySet();\n            for (Entry<Thread,StackTraceElement[]> entry : entries) {\n              String stack = tf.formatStackTrace(entry.getValue());\n              System.err.println(entry.getKey().getName() + \":\\n\" + stack);\n            }\n          }\n        }\n        TimeUnit.SECONDS.sleep(1);\n      } catch (InterruptedException e) { break; }\n    }\n    while (retries++ < waitSeconds);\n    \n    \n    log.info(\"------------------------------------------------------- Done waiting for tracked resources to be released\");\n    \n    ObjectReleaseTracker.clear();\n    \n    return result;\n  }\n\n","sourceOld":"  /**\n   * @return null if ok else error message\n   */\n  public static String clearObjectTrackerAndCheckEmpty(int waitSeconds, boolean tryClose) {\n    int retries = 0;\n    String result;\n    do {\n      result = ObjectReleaseTracker.checkEmpty();\n      if (result == null)\n        break;\n      try {\n        if (retries % 10 == 0) {\n          log.info(\"Waiting for all tracked resources to be released\");\n          if (retries > 10) {\n            TraceFormatting tf = new TraceFormatting(DEFAULT_STACK_FILTERS);\n            Map<Thread,StackTraceElement[]> stacksMap = Thread.getAllStackTraces();\n            Set<Entry<Thread,StackTraceElement[]>> entries = stacksMap.entrySet();\n            for (Entry<Thread,StackTraceElement[]> entry : entries) {\n              String stack = tf.formatStackTrace(entry.getValue());\n              System.err.println(entry.getKey().getName() + \":\\n\" + stack);\n            }\n          }\n        }\n        TimeUnit.SECONDS.sleep(1);\n      } catch (InterruptedException e) { break; }\n    }\n    while (retries++ < waitSeconds);\n    \n    \n    log.info(\"------------------------------------------------------- Done waiting for tracked resources to be released\");\n    \n    if (tryClose && result != null && RandomizedContext.current().getTargetClass().isAnnotationPresent(SuppressObjectReleaseTracker.class)) {\n      log.warn(\n          \"Some resources were not closed, shutdown, or released. This has been ignored due to the SuppressObjectReleaseTracker annotation, trying to close them now.\");\n      ObjectReleaseTracker.tryClose();\n    }\n    \n    ObjectReleaseTracker.clear();\n    \n    return result;\n  }\n\n","bugFix":["ed2d3cbea990a1cd6c54a591a294f629964b01be"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"ed2d3cbea990a1cd6c54a591a294f629964b01be":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"bb222a3f9d9421d5c95afce73013fbd8de07ea1f":["ed2d3cbea990a1cd6c54a591a294f629964b01be"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["bb222a3f9d9421d5c95afce73013fbd8de07ea1f"]},"commit2Childs":{"ed2d3cbea990a1cd6c54a591a294f629964b01be":["bb222a3f9d9421d5c95afce73013fbd8de07ea1f"],"bb222a3f9d9421d5c95afce73013fbd8de07ea1f":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["ed2d3cbea990a1cd6c54a591a294f629964b01be"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}