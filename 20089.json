{"path":"lucene/core/src/java/org/apache/lucene/search/RegexpQuery#toString(String).mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/RegexpQuery#toString(String).mjava","pathOld":"lucene/src/java/org/apache/lucene/search/RegexpQuery#toString(String).mjava","sourceNew":"  /** Prints a user-readable version of this query. */\n  @Override\n  public String toString(String field) {\n    StringBuilder buffer = new StringBuilder();\n    if (!term.field().equals(field)) {\n      buffer.append(term.field());\n      buffer.append(\":\");\n    }\n    buffer.append(term.text());\n    buffer.append(ToStringUtils.boost(getBoost()));\n    return buffer.toString();\n  }\n\n","sourceOld":"  /** Prints a user-readable version of this query. */\n  @Override\n  public String toString(String field) {\n    StringBuilder buffer = new StringBuilder();\n    if (!term.field().equals(field)) {\n      buffer.append(term.field());\n      buffer.append(\":\");\n    }\n    buffer.append(term.text());\n    buffer.append(ToStringUtils.boost(getBoost()));\n    return buffer.toString();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0150a6b424957cc4ef1552adcd35f3e0d5a2c68a","date":1345766669,"type":3,"author":"Erik Hatcher","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/RegexpQuery#toString(String).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/RegexpQuery#toString(String).mjava","sourceNew":"  /** Prints a user-readable version of this query. */\n  @Override\n  public String toString(String field) {\n    StringBuilder buffer = new StringBuilder();\n    if (!term.field().equals(field)) {\n      buffer.append(term.field());\n      buffer.append(\":\");\n    }\n    buffer.append('/');\n    buffer.append(term.text());\n    buffer.append('/');\n    buffer.append(ToStringUtils.boost(getBoost()));\n    return buffer.toString();\n  }\n\n","sourceOld":"  /** Prints a user-readable version of this query. */\n  @Override\n  public String toString(String field) {\n    StringBuilder buffer = new StringBuilder();\n    if (!term.field().equals(field)) {\n      buffer.append(term.field());\n      buffer.append(\":\");\n    }\n    buffer.append(term.text());\n    buffer.append(ToStringUtils.boost(getBoost()));\n    return buffer.toString();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"001b25b42373b22a52f399dbf072f1224632e8e6","date":1345889167,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/search/RegexpQuery#toString(String).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/RegexpQuery#toString(String).mjava","sourceNew":"  /** Prints a user-readable version of this query. */\n  @Override\n  public String toString(String field) {\n    StringBuilder buffer = new StringBuilder();\n    if (!term.field().equals(field)) {\n      buffer.append(term.field());\n      buffer.append(\":\");\n    }\n    buffer.append('/');\n    buffer.append(term.text());\n    buffer.append('/');\n    buffer.append(ToStringUtils.boost(getBoost()));\n    return buffer.toString();\n  }\n\n","sourceOld":"  /** Prints a user-readable version of this query. */\n  @Override\n  public String toString(String field) {\n    StringBuilder buffer = new StringBuilder();\n    if (!term.field().equals(field)) {\n      buffer.append(term.field());\n      buffer.append(\":\");\n    }\n    buffer.append(term.text());\n    buffer.append(ToStringUtils.boost(getBoost()));\n    return buffer.toString();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2dfdf766e55e943d942055d7de53c7ad6bc45283","date":1441632886,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/RegexpQuery#toString(String).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/RegexpQuery#toString(String).mjava","sourceNew":"  /** Prints a user-readable version of this query. */\n  @Override\n  public String toString(String field) {\n    StringBuilder buffer = new StringBuilder();\n    if (!term.field().equals(field)) {\n      buffer.append(term.field());\n      buffer.append(\":\");\n    }\n    buffer.append('/');\n    buffer.append(term.text());\n    buffer.append('/');\n    return buffer.toString();\n  }\n\n","sourceOld":"  /** Prints a user-readable version of this query. */\n  @Override\n  public String toString(String field) {\n    StringBuilder buffer = new StringBuilder();\n    if (!term.field().equals(field)) {\n      buffer.append(term.field());\n      buffer.append(\":\");\n    }\n    buffer.append('/');\n    buffer.append(term.text());\n    buffer.append('/');\n    buffer.append(ToStringUtils.boost(getBoost()));\n    return buffer.toString();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"001b25b42373b22a52f399dbf072f1224632e8e6":["3a119bbc8703c10faa329ec201c654b3a35a1e3e","0150a6b424957cc4ef1552adcd35f3e0d5a2c68a"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"0150a6b424957cc4ef1552adcd35f3e0d5a2c68a":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"2dfdf766e55e943d942055d7de53c7ad6bc45283":["0150a6b424957cc4ef1552adcd35f3e0d5a2c68a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["2dfdf766e55e943d942055d7de53c7ad6bc45283"]},"commit2Childs":{"001b25b42373b22a52f399dbf072f1224632e8e6":[],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["001b25b42373b22a52f399dbf072f1224632e8e6","0150a6b424957cc4ef1552adcd35f3e0d5a2c68a"],"0150a6b424957cc4ef1552adcd35f3e0d5a2c68a":["001b25b42373b22a52f399dbf072f1224632e8e6","2dfdf766e55e943d942055d7de53c7ad6bc45283"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"2dfdf766e55e943d942055d7de53c7ad6bc45283":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["001b25b42373b22a52f399dbf072f1224632e8e6","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}