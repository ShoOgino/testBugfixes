{"path":"solr/core/src/java/org/apache/solr/search/function/distance/HaversineConstFunction#parsePoint(FunctionQParser).mjava","commits":[{"id":"c903c3d15906a3da96b8c0c2fb704491005fdbdb","date":1453508227,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/function/distance/HaversineConstFunction#parsePoint(FunctionQParser).mjava","pathOld":"solr/src/java/org/apache/solr/search/function/distance/HaversineConstFunction#parsePoint(FunctionQParser).mjava","sourceNew":"  private static MultiValueSource parsePoint(FunctionQParser fp) throws ParseException {\n    String pt = fp.getParam(SpatialParams.POINT);\n    if (pt == null) return null;\n    double[] point = null;\n    try {\n      point = DistanceUtils.parseLatitudeLongitude(pt);\n    } catch (InvalidGeoException e) {\n      throw new ParseException(\"Bad spatial pt:\" + pt);\n    }\n    return new VectorValueSource(Arrays.asList(new ValueSource[] {new DoubleConstValueSource(point[0]),new DoubleConstValueSource(point[1])}));\n  }\n\n","sourceOld":"  private static MultiValueSource parsePoint(FunctionQParser fp) throws ParseException {\n    String pt = fp.getParam(SpatialParams.POINT);\n    if (pt == null) return null;\n    double[] point = null;\n    try {\n      point = DistanceUtils.parseLatitudeLongitude(pt);\n    } catch (InvalidGeoException e) {\n      throw new ParseException(\"Bad spatial pt:\" + pt);\n    }\n    return new VectorValueSource(Arrays.asList(new ValueSource[] {new DoubleConstValueSource(point[0]),new DoubleConstValueSource(point[1])}));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a258fbb26824fd104ed795e5d9033d2d040049ee","date":1453508252,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/function/distance/HaversineConstFunction#parsePoint(FunctionQParser).mjava","pathOld":"solr/src/java/org/apache/solr/search/function/distance/HaversineConstFunction#parsePoint(FunctionQParser).mjava","sourceNew":"  private static MultiValueSource parsePoint(FunctionQParser fp) throws ParseException {\n    String pt = fp.getParam(SpatialParams.POINT);\n    if (pt == null) return null;\n    double[] point = null;\n    try {\n      point = DistanceUtils.parseLatitudeLongitude(pt);\n    } catch (InvalidGeoException e) {\n      throw new ParseException(\"Bad spatial pt:\" + pt);\n    }\n    return new VectorValueSource(Arrays.asList(new ValueSource[] {new DoubleConstValueSource(point[0]),new DoubleConstValueSource(point[1])}));\n  }\n\n","sourceOld":"  private static MultiValueSource parsePoint(FunctionQParser fp) throws ParseException {\n    String pt = fp.getParam(SpatialParams.POINT);\n    if (pt == null) return null;\n    double[] point = null;\n    try {\n      point = DistanceUtils.parseLatitudeLongitude(pt);\n    } catch (InvalidGeoException e) {\n      throw new ParseException(\"Bad spatial pt:\" + pt);\n    }\n    return new VectorValueSource(Arrays.asList(new ValueSource[] {new DoubleConstValueSource(point[0]),new DoubleConstValueSource(point[1])}));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/search/function/distance/HaversineConstFunction#parsePoint(FunctionQParser).mjava","pathOld":"solr/src/java/org/apache/solr/search/function/distance/HaversineConstFunction#parsePoint(FunctionQParser).mjava","sourceNew":"  private static MultiValueSource parsePoint(FunctionQParser fp) throws ParseException {\n    String pt = fp.getParam(SpatialParams.POINT);\n    if (pt == null) return null;\n    double[] point = null;\n    try {\n      point = DistanceUtils.parseLatitudeLongitude(pt);\n    } catch (InvalidGeoException e) {\n      throw new ParseException(\"Bad spatial pt:\" + pt);\n    }\n    return new VectorValueSource(Arrays.asList(new ValueSource[] {new DoubleConstValueSource(point[0]),new DoubleConstValueSource(point[1])}));\n  }\n\n","sourceOld":"  private static MultiValueSource parsePoint(FunctionQParser fp) throws ParseException {\n    String pt = fp.getParam(SpatialParams.POINT);\n    if (pt == null) return null;\n    double[] point = null;\n    try {\n      point = DistanceUtils.parseLatitudeLongitude(pt);\n    } catch (InvalidGeoException e) {\n      throw new ParseException(\"Bad spatial pt:\" + pt);\n    }\n    return new VectorValueSource(Arrays.asList(new ValueSource[] {new DoubleConstValueSource(point[0]),new DoubleConstValueSource(point[1])}));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fae06511695f4be0bce5337deb3b3f813d0c3e7c","date":1323890147,"type":3,"author":"Steven Rowe","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/function/distance/HaversineConstFunction#parsePoint(FunctionQParser).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/function/distance/HaversineConstFunction#parsePoint(FunctionQParser).mjava","sourceNew":"  private static MultiValueSource parsePoint(FunctionQParser fp) throws ParseException {\n    String pt = fp.getParam(SpatialParams.POINT);\n    if (pt == null) return null;\n    double[] point = null;\n    try {\n      point = DistanceUtils.parseLatitudeLongitude(pt);\n    } catch (InvalidGeoException e) {\n      throw new ParseException(\"Bad spatial pt:\" + pt);\n    }\n    return new VectorValueSource(Arrays.<ValueSource>asList(new DoubleConstValueSource(point[0]),new DoubleConstValueSource(point[1])));\n  }\n\n","sourceOld":"  private static MultiValueSource parsePoint(FunctionQParser fp) throws ParseException {\n    String pt = fp.getParam(SpatialParams.POINT);\n    if (pt == null) return null;\n    double[] point = null;\n    try {\n      point = DistanceUtils.parseLatitudeLongitude(pt);\n    } catch (InvalidGeoException e) {\n      throw new ParseException(\"Bad spatial pt:\" + pt);\n    }\n    return new VectorValueSource(Arrays.asList(new ValueSource[] {new DoubleConstValueSource(point[0]),new DoubleConstValueSource(point[1])}));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3859e567816d5987602f2a7ae2469fcdf17f745e","date":1329895924,"type":3,"author":"David Wayne Smiley","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/function/distance/HaversineConstFunction#parsePoint(FunctionQParser).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/function/distance/HaversineConstFunction#parsePoint(FunctionQParser).mjava","sourceNew":"  private static MultiValueSource parsePoint(FunctionQParser fp) throws ParseException {\n    String pt = fp.getParam(SpatialParams.POINT);\n    if (pt == null) return null;\n    double[] point = null;\n    try {\n      point = ParseUtils.parseLatitudeLongitude(pt);\n    } catch (InvalidShapeException e) {\n      throw new ParseException(\"Bad spatial pt:\" + pt);\n    }\n    return new VectorValueSource(Arrays.<ValueSource>asList(new DoubleConstValueSource(point[0]),new DoubleConstValueSource(point[1])));\n  }\n\n","sourceOld":"  private static MultiValueSource parsePoint(FunctionQParser fp) throws ParseException {\n    String pt = fp.getParam(SpatialParams.POINT);\n    if (pt == null) return null;\n    double[] point = null;\n    try {\n      point = DistanceUtils.parseLatitudeLongitude(pt);\n    } catch (InvalidGeoException e) {\n      throw new ParseException(\"Bad spatial pt:\" + pt);\n    }\n    return new VectorValueSource(Arrays.<ValueSource>asList(new DoubleConstValueSource(point[0]),new DoubleConstValueSource(point[1])));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e47768b261c28e7e6032060e8331475c81057953","date":1331681297,"type":3,"author":"Ryan McKinley","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/search/function/distance/HaversineConstFunction#parsePoint(FunctionQParser).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/function/distance/HaversineConstFunction#parsePoint(FunctionQParser).mjava","sourceNew":"  private static MultiValueSource parsePoint(FunctionQParser fp) throws ParseException {\n    String pt = fp.getParam(SpatialParams.POINT);\n    if (pt == null) return null;\n    double[] point = null;\n    try {\n      point = ParseUtils.parseLatitudeLongitude(pt);\n    } catch (InvalidShapeException e) {\n      throw new ParseException(\"Bad spatial pt:\" + pt);\n    }\n    return new VectorValueSource(Arrays.<ValueSource>asList(new DoubleConstValueSource(point[0]),new DoubleConstValueSource(point[1])));\n  }\n\n","sourceOld":"  private static MultiValueSource parsePoint(FunctionQParser fp) throws ParseException {\n    String pt = fp.getParam(SpatialParams.POINT);\n    if (pt == null) return null;\n    double[] point = null;\n    try {\n      point = DistanceUtils.parseLatitudeLongitude(pt);\n    } catch (InvalidGeoException e) {\n      throw new ParseException(\"Bad spatial pt:\" + pt);\n    }\n    return new VectorValueSource(Arrays.<ValueSource>asList(new DoubleConstValueSource(point[0]),new DoubleConstValueSource(point[1])));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3cdb67100dc016748799a77218aa409478372d79","date":1353699950,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/function/distance/HaversineConstFunction#parsePoint(FunctionQParser).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/function/distance/HaversineConstFunction#parsePoint(FunctionQParser).mjava","sourceNew":"  private static MultiValueSource parsePoint(FunctionQParser fp) throws SyntaxError {\n    String pt = fp.getParam(SpatialParams.POINT);\n    if (pt == null) return null;\n    double[] point = null;\n    try {\n      point = ParseUtils.parseLatitudeLongitude(pt);\n    } catch (InvalidShapeException e) {\n      throw new SyntaxError(\"Bad spatial pt:\" + pt);\n    }\n    return new VectorValueSource(Arrays.<ValueSource>asList(new DoubleConstValueSource(point[0]),new DoubleConstValueSource(point[1])));\n  }\n\n","sourceOld":"  private static MultiValueSource parsePoint(FunctionQParser fp) throws ParseException {\n    String pt = fp.getParam(SpatialParams.POINT);\n    if (pt == null) return null;\n    double[] point = null;\n    try {\n      point = ParseUtils.parseLatitudeLongitude(pt);\n    } catch (InvalidShapeException e) {\n      throw new ParseException(\"Bad spatial pt:\" + pt);\n    }\n    return new VectorValueSource(Arrays.<ValueSource>asList(new DoubleConstValueSource(point[0]),new DoubleConstValueSource(point[1])));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"407687e67faf6e1f02a211ca078d8e3eed631027","date":1355157407,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/search/function/distance/HaversineConstFunction#parsePoint(FunctionQParser).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/function/distance/HaversineConstFunction#parsePoint(FunctionQParser).mjava","sourceNew":"  private static MultiValueSource parsePoint(FunctionQParser fp) throws SyntaxError {\n    String pt = fp.getParam(SpatialParams.POINT);\n    if (pt == null) return null;\n    double[] point = null;\n    try {\n      point = ParseUtils.parseLatitudeLongitude(pt);\n    } catch (InvalidShapeException e) {\n      throw new SyntaxError(\"Bad spatial pt:\" + pt);\n    }\n    return new VectorValueSource(Arrays.<ValueSource>asList(new DoubleConstValueSource(point[0]),new DoubleConstValueSource(point[1])));\n  }\n\n","sourceOld":"  private static MultiValueSource parsePoint(FunctionQParser fp) throws ParseException {\n    String pt = fp.getParam(SpatialParams.POINT);\n    if (pt == null) return null;\n    double[] point = null;\n    try {\n      point = ParseUtils.parseLatitudeLongitude(pt);\n    } catch (InvalidShapeException e) {\n      throw new ParseException(\"Bad spatial pt:\" + pt);\n    }\n    return new VectorValueSource(Arrays.<ValueSource>asList(new DoubleConstValueSource(point[0]),new DoubleConstValueSource(point[1])));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"464f6dced2dddb86ebb65fba95eb05169c1b2f7e","date":1372221866,"type":5,"author":"David Wayne Smiley","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/function/distance/GeoDistValueSourceParser#parsePoint(FunctionQParser).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/function/distance/HaversineConstFunction#parsePoint(FunctionQParser).mjava","sourceNew":"  private MultiValueSource parsePoint(FunctionQParser fp) throws SyntaxError {\n    String pt = fp.getParam(SpatialParams.POINT);\n    if (pt == null) return null;\n    double[] point = null;\n    try {\n      point = ParseUtils.parseLatitudeLongitude(pt);\n    } catch (InvalidShapeException e) {\n      throw new SyntaxError(\"Bad spatial pt:\" + pt);\n    }\n    return new VectorValueSource(Arrays.<ValueSource>asList(new DoubleConstValueSource(point[0]), new DoubleConstValueSource(point[1])));\n  }\n\n","sourceOld":"  private static MultiValueSource parsePoint(FunctionQParser fp) throws SyntaxError {\n    String pt = fp.getParam(SpatialParams.POINT);\n    if (pt == null) return null;\n    double[] point = null;\n    try {\n      point = ParseUtils.parseLatitudeLongitude(pt);\n    } catch (InvalidShapeException e) {\n      throw new SyntaxError(\"Bad spatial pt:\" + pt);\n    }\n    return new VectorValueSource(Arrays.<ValueSource>asList(new DoubleConstValueSource(point[0]),new DoubleConstValueSource(point[1])));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"37a0f60745e53927c4c876cfe5b5a58170f0646c","date":1373994005,"type":4,"author":"Han Jiang","isMerge":true,"pathNew":"/dev/null","pathOld":"solr/core/src/java/org/apache/solr/search/function/distance/HaversineConstFunction#parsePoint(FunctionQParser).mjava","sourceNew":null,"sourceOld":"  private static MultiValueSource parsePoint(FunctionQParser fp) throws SyntaxError {\n    String pt = fp.getParam(SpatialParams.POINT);\n    if (pt == null) return null;\n    double[] point = null;\n    try {\n      point = ParseUtils.parseLatitudeLongitude(pt);\n    } catch (InvalidShapeException e) {\n      throw new SyntaxError(\"Bad spatial pt:\" + pt);\n    }\n    return new VectorValueSource(Arrays.<ValueSource>asList(new DoubleConstValueSource(point[0]),new DoubleConstValueSource(point[1])));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"464f6dced2dddb86ebb65fba95eb05169c1b2f7e":["3cdb67100dc016748799a77218aa409478372d79"],"37a0f60745e53927c4c876cfe5b5a58170f0646c":["3cdb67100dc016748799a77218aa409478372d79","464f6dced2dddb86ebb65fba95eb05169c1b2f7e"],"3cdb67100dc016748799a77218aa409478372d79":["e47768b261c28e7e6032060e8331475c81057953"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"c26f00b574427b55127e869b935845554afde1fa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","c903c3d15906a3da96b8c0c2fb704491005fdbdb"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"407687e67faf6e1f02a211ca078d8e3eed631027":["e47768b261c28e7e6032060e8331475c81057953","3cdb67100dc016748799a77218aa409478372d79"],"a258fbb26824fd104ed795e5d9033d2d040049ee":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"fae06511695f4be0bce5337deb3b3f813d0c3e7c":["c26f00b574427b55127e869b935845554afde1fa"],"e47768b261c28e7e6032060e8331475c81057953":["fae06511695f4be0bce5337deb3b3f813d0c3e7c","3859e567816d5987602f2a7ae2469fcdf17f745e"],"3859e567816d5987602f2a7ae2469fcdf17f745e":["fae06511695f4be0bce5337deb3b3f813d0c3e7c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["464f6dced2dddb86ebb65fba95eb05169c1b2f7e"]},"commit2Childs":{"464f6dced2dddb86ebb65fba95eb05169c1b2f7e":["37a0f60745e53927c4c876cfe5b5a58170f0646c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"37a0f60745e53927c4c876cfe5b5a58170f0646c":[],"3cdb67100dc016748799a77218aa409478372d79":["464f6dced2dddb86ebb65fba95eb05169c1b2f7e","37a0f60745e53927c4c876cfe5b5a58170f0646c","407687e67faf6e1f02a211ca078d8e3eed631027"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["c26f00b574427b55127e869b935845554afde1fa"],"c26f00b574427b55127e869b935845554afde1fa":["fae06511695f4be0bce5337deb3b3f813d0c3e7c"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c903c3d15906a3da96b8c0c2fb704491005fdbdb","c26f00b574427b55127e869b935845554afde1fa","a258fbb26824fd104ed795e5d9033d2d040049ee"],"407687e67faf6e1f02a211ca078d8e3eed631027":[],"a258fbb26824fd104ed795e5d9033d2d040049ee":[],"fae06511695f4be0bce5337deb3b3f813d0c3e7c":["e47768b261c28e7e6032060e8331475c81057953","3859e567816d5987602f2a7ae2469fcdf17f745e"],"e47768b261c28e7e6032060e8331475c81057953":["3cdb67100dc016748799a77218aa409478372d79","407687e67faf6e1f02a211ca078d8e3eed631027"],"3859e567816d5987602f2a7ae2469fcdf17f745e":["e47768b261c28e7e6032060e8331475c81057953"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["37a0f60745e53927c4c876cfe5b5a58170f0646c","407687e67faf6e1f02a211ca078d8e3eed631027","a258fbb26824fd104ed795e5d9033d2d040049ee","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}