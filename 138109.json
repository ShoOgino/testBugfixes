{"path":"solr/core/src/test/org/apache/solr/analytics/expression/ExpressionTest#beforeClass().mjava","commits":[{"id":"ff403346522eaa9de75403763e297e83a3ea585c","date":1384904731,"type":0,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/analytics/expression/ExpressionTest#beforeClass().mjava","pathOld":"/dev/null","sourceNew":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n    initCore(\"solrconfig-basic.xml\",\"schema-analytics.xml\");\n    h.update(\"<delete><query>*:*</query></delete>\");\n    \n    for (int j = 0; j < NUM_LOOPS; ++j) {\n      int i = j%INT;\n      long l = j%LONG;\n      float f = j%FLOAT;\n      double d = j%DOUBLE;\n      String dt = (1800+j%DATE) + \"-12-31T23:59:59Z\";\n      String s = \"str\" + (j%STRING);\n      assertU(adoc(\"id\", \"1000\" + j, \"int_id\", \"\" + i, \"long_ld\", \"\" + l, \"float_fd\", \"\" + f, \n            \"double_dd\", \"\" + d,  \"date_dtd\", dt, \"string_sd\", s));\n      \n      if (usually()) {\n        commit(); // to have several segments\n      }\n    }\n    \n    assertU(commit()); \n    \n    //Sort ascending tests\n    response = h.query(request(fileToStringArr(fileName)));\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8b035f2b3f6fe0e60179e9f949a11950ad532cde","date":1385472320,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/analytics/expression/ExpressionTest#beforeClass().mjava","pathOld":"solr/core/src/test/org/apache/solr/analytics/expression/ExpressionTest#beforeClass().mjava","sourceNew":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n    initCore(\"solrconfig-basic.xml\", \"schema-analytics.xml\");\n    h.update(\"<delete><query>*:*</query></delete>\");\n\n    for (int j = 0; j < NUM_LOOPS; ++j) {\n      int i = j % INT;\n      long l = j % LONG;\n      float f = j % FLOAT;\n      double d = j % DOUBLE;\n      String dt = (1800 + j % DATE) + \"-12-31T23:59:59Z\";\n      String s = \"str\" + (j % STRING);\n      assertU(adoc(\"id\", \"1000\" + j, \"int_id\", \"\" + i, \"long_ld\", \"\" + l, \"float_fd\", \"\" + f,\n          \"double_dd\", \"\" + d, \"date_dtd\", dt, \"string_sd\", s));\n\n      if (usually()) {\n        commit(); // to have several segments\n      }\n    }\n\n    assertU(commit());\n\n    setResponse(h.query(request(fileToStringArr(fileName))));\n  }\n\n","sourceOld":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n    initCore(\"solrconfig-basic.xml\",\"schema-analytics.xml\");\n    h.update(\"<delete><query>*:*</query></delete>\");\n    \n    for (int j = 0; j < NUM_LOOPS; ++j) {\n      int i = j%INT;\n      long l = j%LONG;\n      float f = j%FLOAT;\n      double d = j%DOUBLE;\n      String dt = (1800+j%DATE) + \"-12-31T23:59:59Z\";\n      String s = \"str\" + (j%STRING);\n      assertU(adoc(\"id\", \"1000\" + j, \"int_id\", \"\" + i, \"long_ld\", \"\" + l, \"float_fd\", \"\" + f, \n            \"double_dd\", \"\" + d,  \"date_dtd\", dt, \"string_sd\", s));\n      \n      if (usually()) {\n        commit(); // to have several segments\n      }\n    }\n    \n    assertU(commit()); \n    \n    //Sort ascending tests\n    response = h.query(request(fileToStringArr(fileName)));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"74f45af4339b0daf7a95c820ab88c1aea74fbce0","date":1387475327,"type":0,"author":"Michael McCandless","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/analytics/expression/ExpressionTest#beforeClass().mjava","pathOld":"/dev/null","sourceNew":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n    initCore(\"solrconfig-basic.xml\", \"schema-analytics.xml\");\n    h.update(\"<delete><query>*:*</query></delete>\");\n\n    for (int j = 0; j < NUM_LOOPS; ++j) {\n      int i = j % INT;\n      long l = j % LONG;\n      float f = j % FLOAT;\n      double d = j % DOUBLE;\n      String dt = (1800 + j % DATE) + \"-12-31T23:59:59Z\";\n      String s = \"str\" + (j % STRING);\n      assertU(adoc(\"id\", \"1000\" + j, \"int_id\", \"\" + i, \"long_ld\", \"\" + l, \"float_fd\", \"\" + f,\n          \"double_dd\", \"\" + d, \"date_dtd\", dt, \"string_sd\", s));\n\n      if (usually()) {\n        commit(); // to have several segments\n      }\n    }\n\n    assertU(commit());\n\n    setResponse(h.query(request(fileToStringArr(fileName))));\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"404b171beda23ddce9e45366a3dbd6444d8d029c","date":1391180301,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/analytics/expression/ExpressionTest#beforeClass().mjava","pathOld":"solr/core/src/test/org/apache/solr/analytics/expression/ExpressionTest#beforeClass().mjava","sourceNew":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n    initCore(\"solrconfig-basic.xml\", \"schema-analytics.xml\");\n    h.update(\"<delete><query>*:*</query></delete>\");\n\n    for (int j = 0; j < NUM_LOOPS; ++j) {\n      int i = j % INT;\n      long l = j % LONG;\n      float f = j % FLOAT;\n      double d = j % DOUBLE;\n      String dt = (1800 + j % DATE) + \"-12-31T23:59:59Z\";\n      String s = \"str\" + (j % STRING);\n      assertU(adoc(\"id\", \"1000\" + j, \"int_id\", \"\" + i, \"long_ld\", \"\" + l, \"float_fd\", \"\" + f,\n          \"double_dd\", \"\" + d, \"date_dtd\", dt, \"string_sd\", s));\n\n      if (usually()) {\n        assertU(commit()); // to have several segments\n      }\n    }\n\n    assertU(commit());\n\n    setResponse(h.query(request(fileToStringArr(fileName))));\n  }\n\n","sourceOld":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n    initCore(\"solrconfig-basic.xml\", \"schema-analytics.xml\");\n    h.update(\"<delete><query>*:*</query></delete>\");\n\n    for (int j = 0; j < NUM_LOOPS; ++j) {\n      int i = j % INT;\n      long l = j % LONG;\n      float f = j % FLOAT;\n      double d = j % DOUBLE;\n      String dt = (1800 + j % DATE) + \"-12-31T23:59:59Z\";\n      String s = \"str\" + (j % STRING);\n      assertU(adoc(\"id\", \"1000\" + j, \"int_id\", \"\" + i, \"long_ld\", \"\" + l, \"float_fd\", \"\" + f,\n          \"double_dd\", \"\" + d, \"date_dtd\", dt, \"string_sd\", s));\n\n      if (usually()) {\n        commit(); // to have several segments\n      }\n    }\n\n    assertU(commit());\n\n    setResponse(h.query(request(fileToStringArr(fileName))));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a475a1c165e02515bff766b3b7be0c42edf1870c","date":1393099333,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/analytics/expression/ExpressionTest#beforeClass().mjava","pathOld":"solr/core/src/test/org/apache/solr/analytics/expression/ExpressionTest#beforeClass().mjava","sourceNew":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n    initCore(\"solrconfig-basic.xml\", \"schema-analytics.xml\");\n    h.update(\"<delete><query>*:*</query></delete>\");\n\n    for (int j = 0; j < NUM_LOOPS; ++j) {\n      int i = j % INT;\n      long l = j % LONG;\n      float f = j % FLOAT;\n      double d = j % DOUBLE;\n      String dt = (1800 + j % DATE) + \"-12-31T23:59:59Z\";\n      String s = \"str\" + (j % STRING);\n      assertU(adoc(\"id\", \"1000\" + j, \"int_id\", \"\" + i, \"long_ld\", \"\" + l, \"float_fd\", \"\" + f,\n          \"double_dd\", \"\" + d, \"date_dtd\", dt, \"string_sd\", s));\n\n      if (usually()) {\n        assertU(commit()); // to have several segments\n      }\n    }\n\n    assertU(commit());\n\n    setResponse(h.query(request(fileToStringArr(ExpressionTest.class, fileName))));\n  }\n\n","sourceOld":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n    initCore(\"solrconfig-basic.xml\", \"schema-analytics.xml\");\n    h.update(\"<delete><query>*:*</query></delete>\");\n\n    for (int j = 0; j < NUM_LOOPS; ++j) {\n      int i = j % INT;\n      long l = j % LONG;\n      float f = j % FLOAT;\n      double d = j % DOUBLE;\n      String dt = (1800 + j % DATE) + \"-12-31T23:59:59Z\";\n      String s = \"str\" + (j % STRING);\n      assertU(adoc(\"id\", \"1000\" + j, \"int_id\", \"\" + i, \"long_ld\", \"\" + l, \"float_fd\", \"\" + f,\n          \"double_dd\", \"\" + d, \"date_dtd\", dt, \"string_sd\", s));\n\n      if (usually()) {\n        assertU(commit()); // to have several segments\n      }\n    }\n\n    assertU(commit());\n\n    setResponse(h.query(request(fileToStringArr(fileName))));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0f719faa74f7213d4a395510dbc1f1b7cb178484","date":1410881394,"type":5,"author":"Yonik Seeley","isMerge":false,"pathNew":"solr/contrib/analytics/src/test/org/apache/solr/analytics/expression/ExpressionTest#beforeClass().mjava","pathOld":"solr/core/src/test/org/apache/solr/analytics/expression/ExpressionTest#beforeClass().mjava","sourceNew":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n    initCore(\"solrconfig-basic.xml\", \"schema-analytics.xml\");\n    h.update(\"<delete><query>*:*</query></delete>\");\n\n    for (int j = 0; j < NUM_LOOPS; ++j) {\n      int i = j % INT;\n      long l = j % LONG;\n      float f = j % FLOAT;\n      double d = j % DOUBLE;\n      String dt = (1800 + j % DATE) + \"-12-31T23:59:59Z\";\n      String s = \"str\" + (j % STRING);\n      assertU(adoc(\"id\", \"1000\" + j, \"int_id\", \"\" + i, \"long_ld\", \"\" + l, \"float_fd\", \"\" + f,\n          \"double_dd\", \"\" + d, \"date_dtd\", dt, \"string_sd\", s));\n\n      if (usually()) {\n        assertU(commit()); // to have several segments\n      }\n    }\n\n    assertU(commit());\n\n    setResponse(h.query(request(fileToStringArr(ExpressionTest.class, fileName))));\n  }\n\n","sourceOld":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n    initCore(\"solrconfig-basic.xml\", \"schema-analytics.xml\");\n    h.update(\"<delete><query>*:*</query></delete>\");\n\n    for (int j = 0; j < NUM_LOOPS; ++j) {\n      int i = j % INT;\n      long l = j % LONG;\n      float f = j % FLOAT;\n      double d = j % DOUBLE;\n      String dt = (1800 + j % DATE) + \"-12-31T23:59:59Z\";\n      String s = \"str\" + (j % STRING);\n      assertU(adoc(\"id\", \"1000\" + j, \"int_id\", \"\" + i, \"long_ld\", \"\" + l, \"float_fd\", \"\" + f,\n          \"double_dd\", \"\" + d, \"date_dtd\", dt, \"string_sd\", s));\n\n      if (usually()) {\n        assertU(commit()); // to have several segments\n      }\n    }\n\n    assertU(commit());\n\n    setResponse(h.query(request(fileToStringArr(ExpressionTest.class, fileName))));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"8b035f2b3f6fe0e60179e9f949a11950ad532cde":["ff403346522eaa9de75403763e297e83a3ea585c"],"a475a1c165e02515bff766b3b7be0c42edf1870c":["404b171beda23ddce9e45366a3dbd6444d8d029c"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"74f45af4339b0daf7a95c820ab88c1aea74fbce0":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","8b035f2b3f6fe0e60179e9f949a11950ad532cde"],"ff403346522eaa9de75403763e297e83a3ea585c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"404b171beda23ddce9e45366a3dbd6444d8d029c":["8b035f2b3f6fe0e60179e9f949a11950ad532cde"],"0f719faa74f7213d4a395510dbc1f1b7cb178484":["a475a1c165e02515bff766b3b7be0c42edf1870c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["0f719faa74f7213d4a395510dbc1f1b7cb178484"]},"commit2Childs":{"8b035f2b3f6fe0e60179e9f949a11950ad532cde":["74f45af4339b0daf7a95c820ab88c1aea74fbce0","404b171beda23ddce9e45366a3dbd6444d8d029c"],"a475a1c165e02515bff766b3b7be0c42edf1870c":["0f719faa74f7213d4a395510dbc1f1b7cb178484"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["74f45af4339b0daf7a95c820ab88c1aea74fbce0","ff403346522eaa9de75403763e297e83a3ea585c"],"74f45af4339b0daf7a95c820ab88c1aea74fbce0":[],"ff403346522eaa9de75403763e297e83a3ea585c":["8b035f2b3f6fe0e60179e9f949a11950ad532cde"],"404b171beda23ddce9e45366a3dbd6444d8d029c":["a475a1c165e02515bff766b3b7be0c42edf1870c"],"0f719faa74f7213d4a395510dbc1f1b7cb178484":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["74f45af4339b0daf7a95c820ab88c1aea74fbce0","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}