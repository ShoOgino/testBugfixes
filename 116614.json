{"path":"src/java/org/apache/lucene/util/SmallFloat#floatToByte315(float).mjava","commits":[{"id":"0e9a39f67d5c6faaea751aa2325e3e8acec34f58","date":1132431756,"type":0,"author":"Yonik Seeley","isMerge":false,"pathNew":"src/java/org/apache/lucene/util/SmallFloat#floatToByte315(float).mjava","pathOld":"/dev/null","sourceNew":"  /** floatToByte(b, mantissaBits=3, zeroExponent=15)\r\n   * <br>smallest non-zero value = 5.820766E-10\r\n   * <br>largest value = 7.5161928E9\r\n   * <br>epsilon = 0.125\r\n   */\r\n  public static byte floatToByte315(float f) {\r\n    int bits = Float.floatToRawIntBits(f);\r\n    int smallfloat = bits >> (24-3);\r\n    if (smallfloat < (63-15)<<3) {\r\n      return (bits<=0) ? (byte)0 : (byte)1;\r\n    }\r\n    if (smallfloat >= ((63-15)<<3) + 0x100) {\r\n      return -1;\r\n    }\r\n    return (byte)(smallfloat - ((63-15)<<3));\r\n }\r\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2123bddbd65dea198cac380540636ce43a880403","date":1211269254,"type":3,"author":"Michael Busch","isMerge":false,"pathNew":"src/java/org/apache/lucene/util/SmallFloat#floatToByte315(float).mjava","pathOld":"src/java/org/apache/lucene/util/SmallFloat#floatToByte315(float).mjava","sourceNew":"  /** floatToByte(b, mantissaBits=3, zeroExponent=15)\n   * <br>smallest non-zero value = 5.820766E-10\n   * <br>largest value = 7.5161928E9\n   * <br>epsilon = 0.125\n   */\n  public static byte floatToByte315(float f) {\n    int bits = Float.floatToRawIntBits(f);\n    int smallfloat = bits >> (24-3);\n    if (smallfloat < (63-15)<<3) {\n      return (bits<=0) ? (byte)0 : (byte)1;\n    }\n    if (smallfloat >= ((63-15)<<3) + 0x100) {\n      return -1;\n    }\n    return (byte)(smallfloat - ((63-15)<<3));\n }\n\n","sourceOld":"  /** floatToByte(b, mantissaBits=3, zeroExponent=15)\r\n   * <br>smallest non-zero value = 5.820766E-10\r\n   * <br>largest value = 7.5161928E9\r\n   * <br>epsilon = 0.125\r\n   */\r\n  public static byte floatToByte315(float f) {\r\n    int bits = Float.floatToRawIntBits(f);\r\n    int smallfloat = bits >> (24-3);\r\n    if (smallfloat < (63-15)<<3) {\r\n      return (bits<=0) ? (byte)0 : (byte)1;\r\n    }\r\n    if (smallfloat >= ((63-15)<<3) + 0x100) {\r\n      return -1;\r\n    }\r\n    return (byte)(smallfloat - ((63-15)<<3));\r\n }\r\n\n","bugFix":null,"bugIntro":["4c162cf3bb7fd2a150aaeeab80495a0a25bb9aee"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/util/SmallFloat#floatToByte315(float).mjava","pathOld":"src/java/org/apache/lucene/util/SmallFloat#floatToByte315(float).mjava","sourceNew":"  /** floatToByte(b, mantissaBits=3, zeroExponent=15)\n   * <br>smallest non-zero value = 5.820766E-10\n   * <br>largest value = 7.5161928E9\n   * <br>epsilon = 0.125\n   */\n  public static byte floatToByte315(float f) {\n    int bits = Float.floatToRawIntBits(f);\n    int smallfloat = bits >> (24-3);\n    if (smallfloat < (63-15)<<3) {\n      return (bits<=0) ? (byte)0 : (byte)1;\n    }\n    if (smallfloat >= ((63-15)<<3) + 0x100) {\n      return -1;\n    }\n    return (byte)(smallfloat - ((63-15)<<3));\n }\n\n","sourceOld":"  /** floatToByte(b, mantissaBits=3, zeroExponent=15)\n   * <br>smallest non-zero value = 5.820766E-10\n   * <br>largest value = 7.5161928E9\n   * <br>epsilon = 0.125\n   */\n  public static byte floatToByte315(float f) {\n    int bits = Float.floatToRawIntBits(f);\n    int smallfloat = bits >> (24-3);\n    if (smallfloat < (63-15)<<3) {\n      return (bits<=0) ? (byte)0 : (byte)1;\n    }\n    if (smallfloat >= ((63-15)<<3) + 0x100) {\n      return -1;\n    }\n    return (byte)(smallfloat - ((63-15)<<3));\n }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"0e9a39f67d5c6faaea751aa2325e3e8acec34f58":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"2123bddbd65dea198cac380540636ce43a880403":["0e9a39f67d5c6faaea751aa2325e3e8acec34f58"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["2123bddbd65dea198cac380540636ce43a880403"]},"commit2Childs":{"0e9a39f67d5c6faaea751aa2325e3e8acec34f58":["2123bddbd65dea198cac380540636ce43a880403"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["0e9a39f67d5c6faaea751aa2325e3e8acec34f58"],"2123bddbd65dea198cac380540636ce43a880403":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}