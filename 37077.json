{"path":"lucene/core/src/test/org/apache/lucene/search/TestPointQueries#testPointIntSetBoxed().mjava","commits":[{"id":"b0d5df20d7317b5f4bbefc70ca764b5d3ea8cf3c","date":1457540737,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestPointQueries#testPointIntSetBoxed().mjava","pathOld":"/dev/null","sourceNew":"  /** Boxed methods for primitive types should behave the same as unboxed: just sugar */\n  public void testPointIntSetBoxed() throws Exception {\n    assertEquals(IntPoint.newSetQuery(\"foo\", 1, 2, 3), IntPoint.newSetQuery(\"foo\", Arrays.asList(1, 2, 3)));\n    assertEquals(FloatPoint.newSetQuery(\"foo\", 1F, 2F, 3F), FloatPoint.newSetQuery(\"foo\", Arrays.asList(1F, 2F, 3F)));\n    assertEquals(LongPoint.newSetQuery(\"foo\", 1L, 2L, 3L), LongPoint.newSetQuery(\"foo\", Arrays.asList(1L, 2L, 3L)));\n    assertEquals(DoublePoint.newSetQuery(\"foo\", 1D, 2D, 3D), DoublePoint.newSetQuery(\"foo\", Arrays.asList(1D, 2D, 3D)));\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"b0d5df20d7317b5f4bbefc70ca764b5d3ea8cf3c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b0d5df20d7317b5f4bbefc70ca764b5d3ea8cf3c"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b0d5df20d7317b5f4bbefc70ca764b5d3ea8cf3c"],"b0d5df20d7317b5f4bbefc70ca764b5d3ea8cf3c":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}