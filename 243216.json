{"path":"lucene/core/src/java/org/apache/lucene/codecs/blockpacked/BlockPackedPostingsReader#readTermsBlock(IndexInput,FieldInfo,BlockTermState).mjava","commits":[{"id":"7250f5f8fbbaeebf817404fb2b3ce3b26161d5df","date":1343686506,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/blockpacked/BlockPackedPostingsReader#readTermsBlock(IndexInput,FieldInfo,BlockTermState).mjava","pathOld":"/dev/null","sourceNew":"  /* Reads but does not decode the byte[] blob holding\n     metadata for the current terms block */\n  @Override\n  public void readTermsBlock(IndexInput termsIn, FieldInfo fieldInfo, BlockTermState _termState) throws IOException {\n    final IntBlockTermState termState = (IntBlockTermState) _termState;\n\n    final int numBytes = termsIn.readVInt();\n\n    if (termState.bytes == null) {\n      termState.bytes = new byte[ArrayUtil.oversize(numBytes, 1)];\n      termState.bytesReader = new ByteArrayDataInput();\n    } else if (termState.bytes.length < numBytes) {\n      termState.bytes = new byte[ArrayUtil.oversize(numBytes, 1)];\n    }\n\n    termsIn.readBytes(termState.bytes, 0, numBytes);\n    termState.bytesReader.reset(termState.bytes, 0, numBytes);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e6b41208259e8566cba0ecac7da6a331ea9732dd","date":1344551376,"type":4,"author":"Michael McCandless","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/blockpacked/BlockPackedPostingsReader#readTermsBlock(IndexInput,FieldInfo,BlockTermState).mjava","sourceNew":null,"sourceOld":"  /* Reads but does not decode the byte[] blob holding\n     metadata for the current terms block */\n  @Override\n  public void readTermsBlock(IndexInput termsIn, FieldInfo fieldInfo, BlockTermState _termState) throws IOException {\n    final IntBlockTermState termState = (IntBlockTermState) _termState;\n\n    final int numBytes = termsIn.readVInt();\n\n    if (termState.bytes == null) {\n      termState.bytes = new byte[ArrayUtil.oversize(numBytes, 1)];\n      termState.bytesReader = new ByteArrayDataInput();\n    } else if (termState.bytes.length < numBytes) {\n      termState.bytes = new byte[ArrayUtil.oversize(numBytes, 1)];\n    }\n\n    termsIn.readBytes(termState.bytes, 0, numBytes);\n    termState.bytesReader.reset(termState.bytes, 0, numBytes);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"7250f5f8fbbaeebf817404fb2b3ce3b26161d5df":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"e6b41208259e8566cba0ecac7da6a331ea9732dd":["7250f5f8fbbaeebf817404fb2b3ce3b26161d5df"]},"commit2Childs":{"7250f5f8fbbaeebf817404fb2b3ce3b26161d5df":["e6b41208259e8566cba0ecac7da6a331ea9732dd"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["7250f5f8fbbaeebf817404fb2b3ce3b26161d5df","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"e6b41208259e8566cba0ecac7da6a331ea9732dd":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817","e6b41208259e8566cba0ecac7da6a331ea9732dd"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}