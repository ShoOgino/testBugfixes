{"path":"src/java/org/apache/solr/search/FunctionQParser#getNestedQuery().mjava","commits":[{"id":"66ab3886c1d845c59c9e5b23b2fb247b927db498","date":1193060587,"type":0,"author":"Yonik Seeley","isMerge":false,"pathNew":"src/java/org/apache/solr/search/FunctionQParser#getNestedQuery().mjava","pathOld":"/dev/null","sourceNew":"  private Query getNestedQuery() throws ParseException {\n    if (sp.opt(\"$\")) {\n      String param = sp.getId();\n      sp.pos += param.length();\n      String qstr = getParam(param);\n      qstr = qstr==null ? \"\" : qstr;\n      return subQuery(qstr, null).parse();\n    }\n\n    int start = sp.pos;\n    int end = sp.pos;\n    String v = sp.val; \n\n    String qs = v.substring(start);\n    HashMap nestedLocalParams = new HashMap<String,String>();\n    end = QueryParsing.parseLocalParams(qs, start, nestedLocalParams, getParams());\n\n    QParser sub;\n\n    if (end>start) {\n      if (nestedLocalParams.get(QueryParsing.V) != null) {\n        // value specified directly in local params... so the end of the\n        // query should be the end of the local params.\n        sub = subQuery(qs.substring(0, end), null);\n      } else {\n        // value here is *after* the local params... ask the parser.\n        sub = subQuery(qs, null);\n        // int subEnd = sub.findEnd(')');\n        // TODO.. implement functions to find the end of a nested query\n        throw new ParseException(\"Nested local params must have value in v parameter.  got '\" + qs + \"'\");\n      }\n    } else {\n      throw new ParseException(\"Nested function query must use $param or <!v=value> forms. got '\" + qs + \"'\");\n    }\n\n    sp.pos += end-start;  // advance past nested query\n    return sub.getQuery();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1833c624d42634c14299628650e0a70626349a71","date":1204207883,"type":4,"author":"Yonik Seeley","isMerge":false,"pathNew":"/dev/null","pathOld":"src/java/org/apache/solr/search/FunctionQParser#getNestedQuery().mjava","sourceNew":null,"sourceOld":"  private Query getNestedQuery() throws ParseException {\n    if (sp.opt(\"$\")) {\n      String param = sp.getId();\n      sp.pos += param.length();\n      String qstr = getParam(param);\n      qstr = qstr==null ? \"\" : qstr;\n      return subQuery(qstr, null).parse();\n    }\n\n    int start = sp.pos;\n    int end = sp.pos;\n    String v = sp.val; \n\n    String qs = v.substring(start);\n    HashMap nestedLocalParams = new HashMap<String,String>();\n    end = QueryParsing.parseLocalParams(qs, start, nestedLocalParams, getParams());\n\n    QParser sub;\n\n    if (end>start) {\n      if (nestedLocalParams.get(QueryParsing.V) != null) {\n        // value specified directly in local params... so the end of the\n        // query should be the end of the local params.\n        sub = subQuery(qs.substring(0, end), null);\n      } else {\n        // value here is *after* the local params... ask the parser.\n        sub = subQuery(qs, null);\n        // int subEnd = sub.findEnd(')');\n        // TODO.. implement functions to find the end of a nested query\n        throw new ParseException(\"Nested local params must have value in v parameter.  got '\" + qs + \"'\");\n      }\n    } else {\n      throw new ParseException(\"Nested function query must use $param or <!v=value> forms. got '\" + qs + \"'\");\n    }\n\n    sp.pos += end-start;  // advance past nested query\n    return sub.getQuery();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"66ab3886c1d845c59c9e5b23b2fb247b927db498":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"1833c624d42634c14299628650e0a70626349a71":["66ab3886c1d845c59c9e5b23b2fb247b927db498"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"66ab3886c1d845c59c9e5b23b2fb247b927db498":["1833c624d42634c14299628650e0a70626349a71"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["66ab3886c1d845c59c9e5b23b2fb247b927db498"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"1833c624d42634c14299628650e0a70626349a71":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["1833c624d42634c14299628650e0a70626349a71","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b","a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}