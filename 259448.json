{"path":"solr/test-framework/src/java/org/apache/solr/util/BaseTestHarness#makeSimpleDoc(String...).mjava","commits":[{"id":"054c04cf724f73ebdd3b16e3a86ce802c0ba5e37","date":1362545433,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/util/BaseTestHarness#makeSimpleDoc(String...).mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/util/TestHarness#makeSimpleDoc(String...).mjava","sourceNew":"  /**\n   * A helper that creates an xml &lt;doc&gt; containing all of the\n   * fields and values specified\n   *\n   * @param fieldsAndValues 0 and Even numbered args are fields names odds are field values.\n   */\n  public static StringBuffer makeSimpleDoc(String... fieldsAndValues) {\n\n    try {\n      StringWriter w = new StringWriter();\n      w.append(\"<doc>\");\n      for (int i = 0; i < fieldsAndValues.length; i+=2) {\n        XML.writeXML(w, \"field\", fieldsAndValues[i + 1], \"name\",\n            fieldsAndValues[i]);\n      }\n      w.append(\"</doc>\");\n      return w.getBuffer();\n    } catch (IOException e) {\n      throw new RuntimeException\n          (\"this should never happen with a StringWriter\", e);\n    }\n  }\n\n","sourceOld":"  /**\n   * A helper that creates an xml &lt;doc&gt; containing all of the\n   * fields and values specified\n   *\n   * @param fieldsAndValues 0 and Even numbered args are fields names odds are field values.\n   */\n  public static StringBuffer makeSimpleDoc(String... fieldsAndValues) {\n\n    try {\n      StringWriter w = new StringWriter();\n      w.append(\"<doc>\");\n      for (int i = 0; i < fieldsAndValues.length; i+=2) {\n        XML.writeXML(w, \"field\", fieldsAndValues[i+1], \"name\",\n                     fieldsAndValues[i]);\n      }\n      w.append(\"</doc>\");\n      return w.getBuffer();\n    } catch (IOException e) {\n      throw new RuntimeException\n        (\"this should never happen with a StringWriter\", e);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d06343967a29132f5d782f74e8d0988400278a02","date":1388963049,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/util/BaseTestHarness#makeSimpleDoc(String...).mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/util/BaseTestHarness#makeSimpleDoc(String...).mjava","sourceNew":"  /**\n   * A helper that creates an xml &lt;doc&gt; containing all of the\n   * fields and values specified\n   *\n   * @param fieldsAndValues 0 and Even numbered args are fields names odds are field values.\n   */\n  public static String makeSimpleDoc(String... fieldsAndValues) {\n\n    try {\n      StringWriter w = new StringWriter();\n      w.append(\"<doc>\");\n      for (int i = 0; i < fieldsAndValues.length; i+=2) {\n        XML.writeXML(w, \"field\", fieldsAndValues[i + 1], \"name\",\n            fieldsAndValues[i]);\n      }\n      w.append(\"</doc>\");\n      return w.toString();\n    } catch (IOException e) {\n      throw new RuntimeException\n          (\"this should never happen with a StringWriter\", e);\n    }\n  }\n\n","sourceOld":"  /**\n   * A helper that creates an xml &lt;doc&gt; containing all of the\n   * fields and values specified\n   *\n   * @param fieldsAndValues 0 and Even numbered args are fields names odds are field values.\n   */\n  public static StringBuffer makeSimpleDoc(String... fieldsAndValues) {\n\n    try {\n      StringWriter w = new StringWriter();\n      w.append(\"<doc>\");\n      for (int i = 0; i < fieldsAndValues.length; i+=2) {\n        XML.writeXML(w, \"field\", fieldsAndValues[i + 1], \"name\",\n            fieldsAndValues[i]);\n      }\n      w.append(\"</doc>\");\n      return w.getBuffer();\n    } catch (IOException e) {\n      throw new RuntimeException\n          (\"this should never happen with a StringWriter\", e);\n    }\n  }\n\n","bugFix":["f66f1826f07774581d2ec661444fc987bdd1a85d"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"d06343967a29132f5d782f74e8d0988400278a02":["054c04cf724f73ebdd3b16e3a86ce802c0ba5e37"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"054c04cf724f73ebdd3b16e3a86ce802c0ba5e37":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["d06343967a29132f5d782f74e8d0988400278a02"]},"commit2Childs":{"d06343967a29132f5d782f74e8d0988400278a02":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["054c04cf724f73ebdd3b16e3a86ce802c0ba5e37"],"054c04cf724f73ebdd3b16e3a86ce802c0ba5e37":["d06343967a29132f5d782f74e8d0988400278a02"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}