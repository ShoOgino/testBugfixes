{"path":"lucene/sandbox/src/java/org/apache/lucene/search/IndexOrDocValuesQuery#IndexOrDocValuesQuery(Query,Query).mjava","commits":[{"id":"dca67e06c96e95a8d9ef07418b6299bfd981523b","date":1484639518,"type":0,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/sandbox/src/java/org/apache/lucene/search/IndexOrDocValuesQuery#IndexOrDocValuesQuery(Query,Query).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Constructor that takes both a query that executes on an index structure\n   * like the inverted index or the points tree, and another query that\n   * executes on doc values. Both queries must match the same documents and\n   * attribute constant scores.\n   */\n  public IndexOrDocValuesQuery(Query indexQuery, Query dvQuery) {\n    this.indexQuery = indexQuery;\n    this.dvQuery = dvQuery;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"302d34f2c66e8d489ee13078305c330cbf67b226","date":1484754357,"type":0,"author":"Kevin Risden","isMerge":true,"pathNew":"lucene/sandbox/src/java/org/apache/lucene/search/IndexOrDocValuesQuery#IndexOrDocValuesQuery(Query,Query).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Constructor that takes both a query that executes on an index structure\n   * like the inverted index or the points tree, and another query that\n   * executes on doc values. Both queries must match the same documents and\n   * attribute constant scores.\n   */\n  public IndexOrDocValuesQuery(Query indexQuery, Query dvQuery) {\n    this.indexQuery = indexQuery;\n    this.dvQuery = dvQuery;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5a412a7808b2815566cb17117ebe6638112b9a31","date":1484916151,"type":5,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/IndexOrDocValuesQuery#IndexOrDocValuesQuery(Query,Query).mjava","pathOld":"lucene/sandbox/src/java/org/apache/lucene/search/IndexOrDocValuesQuery#IndexOrDocValuesQuery(Query,Query).mjava","sourceNew":"  /**\n   * Create an {@link IndexOrDocValuesQuery}. Both provided queries must match\n   * the same documents and give the same scores.\n   * @param indexQuery a query that has a good iterator but whose scorer may be costly to create\n   * @param dvQuery a query whose scorer is cheap to create that can quickly check whether a given document matches\n   */\n  public IndexOrDocValuesQuery(Query indexQuery, Query dvQuery) {\n    this.indexQuery = indexQuery;\n    this.dvQuery = dvQuery;\n  }\n\n","sourceOld":"  /**\n   * Constructor that takes both a query that executes on an index structure\n   * like the inverted index or the points tree, and another query that\n   * executes on doc values. Both queries must match the same documents and\n   * attribute constant scores.\n   */\n  public IndexOrDocValuesQuery(Query indexQuery, Query dvQuery) {\n    this.indexQuery = indexQuery;\n    this.dvQuery = dvQuery;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"90a682dc1bfd188ef61cc28373c7f5d700b4ac75","date":1485186128,"type":5,"author":"Kevin Risden","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/search/IndexOrDocValuesQuery#IndexOrDocValuesQuery(Query,Query).mjava","pathOld":"lucene/sandbox/src/java/org/apache/lucene/search/IndexOrDocValuesQuery#IndexOrDocValuesQuery(Query,Query).mjava","sourceNew":"  /**\n   * Create an {@link IndexOrDocValuesQuery}. Both provided queries must match\n   * the same documents and give the same scores.\n   * @param indexQuery a query that has a good iterator but whose scorer may be costly to create\n   * @param dvQuery a query whose scorer is cheap to create that can quickly check whether a given document matches\n   */\n  public IndexOrDocValuesQuery(Query indexQuery, Query dvQuery) {\n    this.indexQuery = indexQuery;\n    this.dvQuery = dvQuery;\n  }\n\n","sourceOld":"  /**\n   * Constructor that takes both a query that executes on an index structure\n   * like the inverted index or the points tree, and another query that\n   * executes on doc values. Both queries must match the same documents and\n   * attribute constant scores.\n   */\n  public IndexOrDocValuesQuery(Query indexQuery, Query dvQuery) {\n    this.indexQuery = indexQuery;\n    this.dvQuery = dvQuery;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"dca67e06c96e95a8d9ef07418b6299bfd981523b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"5a412a7808b2815566cb17117ebe6638112b9a31":["dca67e06c96e95a8d9ef07418b6299bfd981523b"],"90a682dc1bfd188ef61cc28373c7f5d700b4ac75":["302d34f2c66e8d489ee13078305c330cbf67b226","5a412a7808b2815566cb17117ebe6638112b9a31"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["5a412a7808b2815566cb17117ebe6638112b9a31"],"302d34f2c66e8d489ee13078305c330cbf67b226":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","dca67e06c96e95a8d9ef07418b6299bfd981523b"]},"commit2Childs":{"dca67e06c96e95a8d9ef07418b6299bfd981523b":["5a412a7808b2815566cb17117ebe6638112b9a31","302d34f2c66e8d489ee13078305c330cbf67b226"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["dca67e06c96e95a8d9ef07418b6299bfd981523b","302d34f2c66e8d489ee13078305c330cbf67b226"],"5a412a7808b2815566cb17117ebe6638112b9a31":["90a682dc1bfd188ef61cc28373c7f5d700b4ac75","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"90a682dc1bfd188ef61cc28373c7f5d700b4ac75":[],"302d34f2c66e8d489ee13078305c330cbf67b226":["90a682dc1bfd188ef61cc28373c7f5d700b4ac75"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["90a682dc1bfd188ef61cc28373c7f5d700b4ac75","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}