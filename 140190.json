{"path":"solr/solrj/src/java/org/apache/solr/client/solrj/io/graph/GatherNodesStream#setStreamContext(StreamContext).mjava","commits":[{"id":"afdf6ff5b1319d8ae254212f1203a6233ed3e1dc","date":1461010196,"type":0,"author":"jbernste","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/io/graph/GatherNodesStream#setStreamContext(StreamContext).mjava","pathOld":"/dev/null","sourceNew":"  public void setStreamContext(StreamContext context) {\n    this.traversal = (Traversal) context.get(\"traversal\");\n    if (traversal == null) {\n      //No traversal in the context. So create a new context and a new traversal.\n      //This ensures that two separate traversals in the same expression don't pollute each others traversal.\n      StreamContext localContext = new StreamContext();\n\n      localContext.numWorkers = context.numWorkers;\n      localContext.workerID = context.workerID;\n      localContext.setSolrClientCache(context.getSolrClientCache());\n      localContext.setStreamFactory(context.getStreamFactory());\n\n      for(Object key :context.getEntries().keySet()) {\n        localContext.put(key, context.get(key));\n      }\n\n      traversal = new Traversal();\n\n      localContext.put(\"traversal\", traversal);\n\n      this.tupleStream.setStreamContext(localContext);\n      this.streamContext = localContext;\n    } else {\n      this.tupleStream.setStreamContext(context);\n      this.streamContext = context;\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0e15955b4980562a0c1c81d08654904f3fadb83b","date":1461068916,"type":0,"author":"Karl Wright","isMerge":true,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/io/graph/GatherNodesStream#setStreamContext(StreamContext).mjava","pathOld":"/dev/null","sourceNew":"  public void setStreamContext(StreamContext context) {\n    this.traversal = (Traversal) context.get(\"traversal\");\n    if (traversal == null) {\n      //No traversal in the context. So create a new context and a new traversal.\n      //This ensures that two separate traversals in the same expression don't pollute each others traversal.\n      StreamContext localContext = new StreamContext();\n\n      localContext.numWorkers = context.numWorkers;\n      localContext.workerID = context.workerID;\n      localContext.setSolrClientCache(context.getSolrClientCache());\n      localContext.setStreamFactory(context.getStreamFactory());\n\n      for(Object key :context.getEntries().keySet()) {\n        localContext.put(key, context.get(key));\n      }\n\n      traversal = new Traversal();\n\n      localContext.put(\"traversal\", traversal);\n\n      this.tupleStream.setStreamContext(localContext);\n      this.streamContext = localContext;\n    } else {\n      this.tupleStream.setStreamContext(context);\n      this.streamContext = context;\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"afdf6ff5b1319d8ae254212f1203a6233ed3e1dc":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"0e15955b4980562a0c1c81d08654904f3fadb83b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","afdf6ff5b1319d8ae254212f1203a6233ed3e1dc"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["0e15955b4980562a0c1c81d08654904f3fadb83b"]},"commit2Childs":{"afdf6ff5b1319d8ae254212f1203a6233ed3e1dc":["0e15955b4980562a0c1c81d08654904f3fadb83b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["afdf6ff5b1319d8ae254212f1203a6233ed3e1dc","0e15955b4980562a0c1c81d08654904f3fadb83b"],"0e15955b4980562a0c1c81d08654904f3fadb83b":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}