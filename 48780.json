{"path":"contrib/snowball/src/java/org/tartarus/snowball/ext/FrenchStemmer#stem().mjava","commits":[{"id":"b62da6a75575f59a016a076b4753dc6e20c74b44","date":1219528967,"type":1,"author":"Karl-Johan Wettin","isMerge":false,"pathNew":"contrib/snowball/src/java/org/tartarus/snowball/ext/FrenchStemmer#stem().mjava","pathOld":"contrib/snowball/src/java/net/sf/snowball/ext/FrenchStemmer#stem().mjava","sourceNew":"        public boolean stem() {\n            int v_1;\n            int v_2;\n            int v_3;\n            int v_4;\n            int v_5;\n            int v_6;\n            int v_7;\n            int v_8;\n            int v_9;\n            int v_10;\n            int v_11;\n            // (, line 221\n            // do, line 223\n            v_1 = cursor;\n            lab0: do {\n                // call prelude, line 223\n                if (!r_prelude())\n                {\n                    break lab0;\n                }\n            } while (false);\n            cursor = v_1;\n            // do, line 224\n            v_2 = cursor;\n            lab1: do {\n                // call mark_regions, line 224\n                if (!r_mark_regions())\n                {\n                    break lab1;\n                }\n            } while (false);\n            cursor = v_2;\n            // backwards, line 225\n            limit_backward = cursor; cursor = limit;\n            // (, line 225\n            // do, line 227\n            v_3 = limit - cursor;\n            lab2: do {\n                // (, line 227\n                // or, line 237\n                lab3: do {\n                    v_4 = limit - cursor;\n                    lab4: do {\n                        // (, line 228\n                        // and, line 233\n                        v_5 = limit - cursor;\n                        // (, line 229\n                        // or, line 229\n                        lab5: do {\n                            v_6 = limit - cursor;\n                            lab6: do {\n                                // call standard_suffix, line 229\n                                if (!r_standard_suffix())\n                                {\n                                    break lab6;\n                                }\n                                break lab5;\n                            } while (false);\n                            cursor = limit - v_6;\n                            lab7: do {\n                                // call i_verb_suffix, line 230\n                                if (!r_i_verb_suffix())\n                                {\n                                    break lab7;\n                                }\n                                break lab5;\n                            } while (false);\n                            cursor = limit - v_6;\n                            // call verb_suffix, line 231\n                            if (!r_verb_suffix())\n                            {\n                                break lab4;\n                            }\n                        } while (false);\n                        cursor = limit - v_5;\n                        // try, line 234\n                        v_7 = limit - cursor;\n                        lab8: do {\n                            // (, line 234\n                            // [, line 234\n                            ket = cursor;\n                            // or, line 234\n                            lab9: do {\n                                v_8 = limit - cursor;\n                                lab10: do {\n                                    // (, line 234\n                                    // literal, line 234\n                                    if (!(eq_s_b(1, \"Y\")))\n                                    {\n                                        break lab10;\n                                    }\n                                    // ], line 234\n                                    bra = cursor;\n                                    // <-, line 234\n                                    slice_from(\"i\");\n                                    break lab9;\n                                } while (false);\n                                cursor = limit - v_8;\n                                // (, line 235\n                                // literal, line 235\n                                if (!(eq_s_b(1, \"\\u00E7\")))\n                                {\n                                    cursor = limit - v_7;\n                                    break lab8;\n                                }\n                                // ], line 235\n                                bra = cursor;\n                                // <-, line 235\n                                slice_from(\"c\");\n                            } while (false);\n                        } while (false);\n                        break lab3;\n                    } while (false);\n                    cursor = limit - v_4;\n                    // call residual_suffix, line 238\n                    if (!r_residual_suffix())\n                    {\n                        break lab2;\n                    }\n                } while (false);\n            } while (false);\n            cursor = limit - v_3;\n            // do, line 243\n            v_9 = limit - cursor;\n            lab11: do {\n                // call un_double, line 243\n                if (!r_un_double())\n                {\n                    break lab11;\n                }\n            } while (false);\n            cursor = limit - v_9;\n            // do, line 244\n            v_10 = limit - cursor;\n            lab12: do {\n                // call un_accent, line 244\n                if (!r_un_accent())\n                {\n                    break lab12;\n                }\n            } while (false);\n            cursor = limit - v_10;\n            cursor = limit_backward;            // do, line 246\n            v_11 = cursor;\n            lab13: do {\n                // call postlude, line 246\n                if (!r_postlude())\n                {\n                    break lab13;\n                }\n            } while (false);\n            cursor = v_11;\n            return true;\n        }\n\n","sourceOld":"        public boolean stem() {\n            int v_1;\n            int v_2;\n            int v_3;\n            int v_4;\n            int v_5;\n            int v_6;\n            int v_7;\n            int v_8;\n            int v_9;\n            int v_10;\n            int v_11;\n            // (, line 212\n            // do, line 214\n            v_1 = cursor;\n            lab0: do {\n                // call prelude, line 214\n                if (!r_prelude())\n                {\n                    break lab0;\n                }\n            } while (false);\n            cursor = v_1;\n            // do, line 215\n            v_2 = cursor;\n            lab1: do {\n                // call mark_regions, line 215\n                if (!r_mark_regions())\n                {\n                    break lab1;\n                }\n            } while (false);\n            cursor = v_2;\n            // backwards, line 216\n            limit_backward = cursor; cursor = limit;\n            // (, line 216\n            // do, line 218\n            v_3 = limit - cursor;\n            lab2: do {\n                // (, line 218\n                // or, line 228\n                lab3: do {\n                    v_4 = limit - cursor;\n                    lab4: do {\n                        // (, line 219\n                        // and, line 224\n                        v_5 = limit - cursor;\n                        // (, line 220\n                        // or, line 220\n                        lab5: do {\n                            v_6 = limit - cursor;\n                            lab6: do {\n                                // call standard_suffix, line 220\n                                if (!r_standard_suffix())\n                                {\n                                    break lab6;\n                                }\n                                break lab5;\n                            } while (false);\n                            cursor = limit - v_6;\n                            lab7: do {\n                                // call i_verb_suffix, line 221\n                                if (!r_i_verb_suffix())\n                                {\n                                    break lab7;\n                                }\n                                break lab5;\n                            } while (false);\n                            cursor = limit - v_6;\n                            // call verb_suffix, line 222\n                            if (!r_verb_suffix())\n                            {\n                                break lab4;\n                            }\n                        } while (false);\n                        cursor = limit - v_5;\n                        // try, line 225\n                        v_7 = limit - cursor;\n                        lab8: do {\n                            // (, line 225\n                            // [, line 225\n                            ket = cursor;\n                            // or, line 225\n                            lab9: do {\n                                v_8 = limit - cursor;\n                                lab10: do {\n                                    // (, line 225\n                                    // literal, line 225\n                                    if (!(eq_s_b(1, \"Y\")))\n                                    {\n                                        break lab10;\n                                    }\n                                    // ], line 225\n                                    bra = cursor;\n                                    // <-, line 225\n                                    slice_from(\"i\");\n                                    break lab9;\n                                } while (false);\n                                cursor = limit - v_8;\n                                // (, line 226\n                                // literal, line 226\n                                if (!(eq_s_b(1, \"\\u00E7\")))\n                                {\n                                    cursor = limit - v_7;\n                                    break lab8;\n                                }\n                                // ], line 226\n                                bra = cursor;\n                                // <-, line 226\n                                slice_from(\"c\");\n                            } while (false);\n                        } while (false);\n                        break lab3;\n                    } while (false);\n                    cursor = limit - v_4;\n                    // call residual_suffix, line 229\n                    if (!r_residual_suffix())\n                    {\n                        break lab2;\n                    }\n                } while (false);\n            } while (false);\n            cursor = limit - v_3;\n            // do, line 234\n            v_9 = limit - cursor;\n            lab11: do {\n                // call un_double, line 234\n                if (!r_un_double())\n                {\n                    break lab11;\n                }\n            } while (false);\n            cursor = limit - v_9;\n            // do, line 235\n            v_10 = limit - cursor;\n            lab12: do {\n                // call un_accent, line 235\n                if (!r_un_accent())\n                {\n                    break lab12;\n                }\n            } while (false);\n            cursor = limit - v_10;\n            cursor = limit_backward;            // do, line 237\n            v_11 = cursor;\n            lab13: do {\n                // call postlude, line 237\n                if (!r_postlude())\n                {\n                    break lab13;\n                }\n            } while (false);\n            cursor = v_11;\n            return true;\n        }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a5aa159e1ac4009d23cea92797d3804da4f5e7ad","date":1264041909,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"contrib/analyzers/common/src/java/org/tartarus/snowball/ext/FrenchStemmer#stem().mjava","pathOld":"contrib/snowball/src/java/org/tartarus/snowball/ext/FrenchStemmer#stem().mjava","sourceNew":"        public boolean stem() {\n            int v_1;\n            int v_2;\n            int v_3;\n            int v_4;\n            int v_5;\n            int v_6;\n            int v_7;\n            int v_8;\n            int v_9;\n            int v_10;\n            int v_11;\n            // (, line 221\n            // do, line 223\n            v_1 = cursor;\n            lab0: do {\n                // call prelude, line 223\n                if (!r_prelude())\n                {\n                    break lab0;\n                }\n            } while (false);\n            cursor = v_1;\n            // do, line 224\n            v_2 = cursor;\n            lab1: do {\n                // call mark_regions, line 224\n                if (!r_mark_regions())\n                {\n                    break lab1;\n                }\n            } while (false);\n            cursor = v_2;\n            // backwards, line 225\n            limit_backward = cursor; cursor = limit;\n            // (, line 225\n            // do, line 227\n            v_3 = limit - cursor;\n            lab2: do {\n                // (, line 227\n                // or, line 237\n                lab3: do {\n                    v_4 = limit - cursor;\n                    lab4: do {\n                        // (, line 228\n                        // and, line 233\n                        v_5 = limit - cursor;\n                        // (, line 229\n                        // or, line 229\n                        lab5: do {\n                            v_6 = limit - cursor;\n                            lab6: do {\n                                // call standard_suffix, line 229\n                                if (!r_standard_suffix())\n                                {\n                                    break lab6;\n                                }\n                                break lab5;\n                            } while (false);\n                            cursor = limit - v_6;\n                            lab7: do {\n                                // call i_verb_suffix, line 230\n                                if (!r_i_verb_suffix())\n                                {\n                                    break lab7;\n                                }\n                                break lab5;\n                            } while (false);\n                            cursor = limit - v_6;\n                            // call verb_suffix, line 231\n                            if (!r_verb_suffix())\n                            {\n                                break lab4;\n                            }\n                        } while (false);\n                        cursor = limit - v_5;\n                        // try, line 234\n                        v_7 = limit - cursor;\n                        lab8: do {\n                            // (, line 234\n                            // [, line 234\n                            ket = cursor;\n                            // or, line 234\n                            lab9: do {\n                                v_8 = limit - cursor;\n                                lab10: do {\n                                    // (, line 234\n                                    // literal, line 234\n                                    if (!(eq_s_b(1, \"Y\")))\n                                    {\n                                        break lab10;\n                                    }\n                                    // ], line 234\n                                    bra = cursor;\n                                    // <-, line 234\n                                    slice_from(\"i\");\n                                    break lab9;\n                                } while (false);\n                                cursor = limit - v_8;\n                                // (, line 235\n                                // literal, line 235\n                                if (!(eq_s_b(1, \"\\u00E7\")))\n                                {\n                                    cursor = limit - v_7;\n                                    break lab8;\n                                }\n                                // ], line 235\n                                bra = cursor;\n                                // <-, line 235\n                                slice_from(\"c\");\n                            } while (false);\n                        } while (false);\n                        break lab3;\n                    } while (false);\n                    cursor = limit - v_4;\n                    // call residual_suffix, line 238\n                    if (!r_residual_suffix())\n                    {\n                        break lab2;\n                    }\n                } while (false);\n            } while (false);\n            cursor = limit - v_3;\n            // do, line 243\n            v_9 = limit - cursor;\n            lab11: do {\n                // call un_double, line 243\n                if (!r_un_double())\n                {\n                    break lab11;\n                }\n            } while (false);\n            cursor = limit - v_9;\n            // do, line 244\n            v_10 = limit - cursor;\n            lab12: do {\n                // call un_accent, line 244\n                if (!r_un_accent())\n                {\n                    break lab12;\n                }\n            } while (false);\n            cursor = limit - v_10;\n            cursor = limit_backward;            // do, line 246\n            v_11 = cursor;\n            lab13: do {\n                // call postlude, line 246\n                if (!r_postlude())\n                {\n                    break lab13;\n                }\n            } while (false);\n            cursor = v_11;\n            return true;\n        }\n\n","sourceOld":"        public boolean stem() {\n            int v_1;\n            int v_2;\n            int v_3;\n            int v_4;\n            int v_5;\n            int v_6;\n            int v_7;\n            int v_8;\n            int v_9;\n            int v_10;\n            int v_11;\n            // (, line 221\n            // do, line 223\n            v_1 = cursor;\n            lab0: do {\n                // call prelude, line 223\n                if (!r_prelude())\n                {\n                    break lab0;\n                }\n            } while (false);\n            cursor = v_1;\n            // do, line 224\n            v_2 = cursor;\n            lab1: do {\n                // call mark_regions, line 224\n                if (!r_mark_regions())\n                {\n                    break lab1;\n                }\n            } while (false);\n            cursor = v_2;\n            // backwards, line 225\n            limit_backward = cursor; cursor = limit;\n            // (, line 225\n            // do, line 227\n            v_3 = limit - cursor;\n            lab2: do {\n                // (, line 227\n                // or, line 237\n                lab3: do {\n                    v_4 = limit - cursor;\n                    lab4: do {\n                        // (, line 228\n                        // and, line 233\n                        v_5 = limit - cursor;\n                        // (, line 229\n                        // or, line 229\n                        lab5: do {\n                            v_6 = limit - cursor;\n                            lab6: do {\n                                // call standard_suffix, line 229\n                                if (!r_standard_suffix())\n                                {\n                                    break lab6;\n                                }\n                                break lab5;\n                            } while (false);\n                            cursor = limit - v_6;\n                            lab7: do {\n                                // call i_verb_suffix, line 230\n                                if (!r_i_verb_suffix())\n                                {\n                                    break lab7;\n                                }\n                                break lab5;\n                            } while (false);\n                            cursor = limit - v_6;\n                            // call verb_suffix, line 231\n                            if (!r_verb_suffix())\n                            {\n                                break lab4;\n                            }\n                        } while (false);\n                        cursor = limit - v_5;\n                        // try, line 234\n                        v_7 = limit - cursor;\n                        lab8: do {\n                            // (, line 234\n                            // [, line 234\n                            ket = cursor;\n                            // or, line 234\n                            lab9: do {\n                                v_8 = limit - cursor;\n                                lab10: do {\n                                    // (, line 234\n                                    // literal, line 234\n                                    if (!(eq_s_b(1, \"Y\")))\n                                    {\n                                        break lab10;\n                                    }\n                                    // ], line 234\n                                    bra = cursor;\n                                    // <-, line 234\n                                    slice_from(\"i\");\n                                    break lab9;\n                                } while (false);\n                                cursor = limit - v_8;\n                                // (, line 235\n                                // literal, line 235\n                                if (!(eq_s_b(1, \"\\u00E7\")))\n                                {\n                                    cursor = limit - v_7;\n                                    break lab8;\n                                }\n                                // ], line 235\n                                bra = cursor;\n                                // <-, line 235\n                                slice_from(\"c\");\n                            } while (false);\n                        } while (false);\n                        break lab3;\n                    } while (false);\n                    cursor = limit - v_4;\n                    // call residual_suffix, line 238\n                    if (!r_residual_suffix())\n                    {\n                        break lab2;\n                    }\n                } while (false);\n            } while (false);\n            cursor = limit - v_3;\n            // do, line 243\n            v_9 = limit - cursor;\n            lab11: do {\n                // call un_double, line 243\n                if (!r_un_double())\n                {\n                    break lab11;\n                }\n            } while (false);\n            cursor = limit - v_9;\n            // do, line 244\n            v_10 = limit - cursor;\n            lab12: do {\n                // call un_accent, line 244\n                if (!r_un_accent())\n                {\n                    break lab12;\n                }\n            } while (false);\n            cursor = limit - v_10;\n            cursor = limit_backward;            // do, line 246\n            v_11 = cursor;\n            lab13: do {\n                // call postlude, line 246\n                if (!r_postlude())\n                {\n                    break lab13;\n                }\n            } while (false);\n            cursor = v_11;\n            return true;\n        }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"38c26570a4fd6cf0856801c977a2bc9c28a5424c","date":1264074890,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"contrib/snowball/src/java/org/tartarus/snowball/ext/FrenchStemmer#stem().mjava","pathOld":"/dev/null","sourceNew":"        public boolean stem() {\n            int v_1;\n            int v_2;\n            int v_3;\n            int v_4;\n            int v_5;\n            int v_6;\n            int v_7;\n            int v_8;\n            int v_9;\n            int v_10;\n            int v_11;\n            // (, line 221\n            // do, line 223\n            v_1 = cursor;\n            lab0: do {\n                // call prelude, line 223\n                if (!r_prelude())\n                {\n                    break lab0;\n                }\n            } while (false);\n            cursor = v_1;\n            // do, line 224\n            v_2 = cursor;\n            lab1: do {\n                // call mark_regions, line 224\n                if (!r_mark_regions())\n                {\n                    break lab1;\n                }\n            } while (false);\n            cursor = v_2;\n            // backwards, line 225\n            limit_backward = cursor; cursor = limit;\n            // (, line 225\n            // do, line 227\n            v_3 = limit - cursor;\n            lab2: do {\n                // (, line 227\n                // or, line 237\n                lab3: do {\n                    v_4 = limit - cursor;\n                    lab4: do {\n                        // (, line 228\n                        // and, line 233\n                        v_5 = limit - cursor;\n                        // (, line 229\n                        // or, line 229\n                        lab5: do {\n                            v_6 = limit - cursor;\n                            lab6: do {\n                                // call standard_suffix, line 229\n                                if (!r_standard_suffix())\n                                {\n                                    break lab6;\n                                }\n                                break lab5;\n                            } while (false);\n                            cursor = limit - v_6;\n                            lab7: do {\n                                // call i_verb_suffix, line 230\n                                if (!r_i_verb_suffix())\n                                {\n                                    break lab7;\n                                }\n                                break lab5;\n                            } while (false);\n                            cursor = limit - v_6;\n                            // call verb_suffix, line 231\n                            if (!r_verb_suffix())\n                            {\n                                break lab4;\n                            }\n                        } while (false);\n                        cursor = limit - v_5;\n                        // try, line 234\n                        v_7 = limit - cursor;\n                        lab8: do {\n                            // (, line 234\n                            // [, line 234\n                            ket = cursor;\n                            // or, line 234\n                            lab9: do {\n                                v_8 = limit - cursor;\n                                lab10: do {\n                                    // (, line 234\n                                    // literal, line 234\n                                    if (!(eq_s_b(1, \"Y\")))\n                                    {\n                                        break lab10;\n                                    }\n                                    // ], line 234\n                                    bra = cursor;\n                                    // <-, line 234\n                                    slice_from(\"i\");\n                                    break lab9;\n                                } while (false);\n                                cursor = limit - v_8;\n                                // (, line 235\n                                // literal, line 235\n                                if (!(eq_s_b(1, \"\\u00E7\")))\n                                {\n                                    cursor = limit - v_7;\n                                    break lab8;\n                                }\n                                // ], line 235\n                                bra = cursor;\n                                // <-, line 235\n                                slice_from(\"c\");\n                            } while (false);\n                        } while (false);\n                        break lab3;\n                    } while (false);\n                    cursor = limit - v_4;\n                    // call residual_suffix, line 238\n                    if (!r_residual_suffix())\n                    {\n                        break lab2;\n                    }\n                } while (false);\n            } while (false);\n            cursor = limit - v_3;\n            // do, line 243\n            v_9 = limit - cursor;\n            lab11: do {\n                // call un_double, line 243\n                if (!r_un_double())\n                {\n                    break lab11;\n                }\n            } while (false);\n            cursor = limit - v_9;\n            // do, line 244\n            v_10 = limit - cursor;\n            lab12: do {\n                // call un_accent, line 244\n                if (!r_un_accent())\n                {\n                    break lab12;\n                }\n            } while (false);\n            cursor = limit - v_10;\n            cursor = limit_backward;            // do, line 246\n            v_11 = cursor;\n            lab13: do {\n                // call postlude, line 246\n                if (!r_postlude())\n                {\n                    break lab13;\n                }\n            } while (false);\n            cursor = v_11;\n            return true;\n        }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d40ff39db4a2b90a440b97f2a7d7eda344f004ef","date":1264074978,"type":4,"author":"Michael McCandless","isMerge":false,"pathNew":"/dev/null","pathOld":"contrib/snowball/src/java/org/tartarus/snowball/ext/FrenchStemmer#stem().mjava","sourceNew":null,"sourceOld":"        public boolean stem() {\n            int v_1;\n            int v_2;\n            int v_3;\n            int v_4;\n            int v_5;\n            int v_6;\n            int v_7;\n            int v_8;\n            int v_9;\n            int v_10;\n            int v_11;\n            // (, line 221\n            // do, line 223\n            v_1 = cursor;\n            lab0: do {\n                // call prelude, line 223\n                if (!r_prelude())\n                {\n                    break lab0;\n                }\n            } while (false);\n            cursor = v_1;\n            // do, line 224\n            v_2 = cursor;\n            lab1: do {\n                // call mark_regions, line 224\n                if (!r_mark_regions())\n                {\n                    break lab1;\n                }\n            } while (false);\n            cursor = v_2;\n            // backwards, line 225\n            limit_backward = cursor; cursor = limit;\n            // (, line 225\n            // do, line 227\n            v_3 = limit - cursor;\n            lab2: do {\n                // (, line 227\n                // or, line 237\n                lab3: do {\n                    v_4 = limit - cursor;\n                    lab4: do {\n                        // (, line 228\n                        // and, line 233\n                        v_5 = limit - cursor;\n                        // (, line 229\n                        // or, line 229\n                        lab5: do {\n                            v_6 = limit - cursor;\n                            lab6: do {\n                                // call standard_suffix, line 229\n                                if (!r_standard_suffix())\n                                {\n                                    break lab6;\n                                }\n                                break lab5;\n                            } while (false);\n                            cursor = limit - v_6;\n                            lab7: do {\n                                // call i_verb_suffix, line 230\n                                if (!r_i_verb_suffix())\n                                {\n                                    break lab7;\n                                }\n                                break lab5;\n                            } while (false);\n                            cursor = limit - v_6;\n                            // call verb_suffix, line 231\n                            if (!r_verb_suffix())\n                            {\n                                break lab4;\n                            }\n                        } while (false);\n                        cursor = limit - v_5;\n                        // try, line 234\n                        v_7 = limit - cursor;\n                        lab8: do {\n                            // (, line 234\n                            // [, line 234\n                            ket = cursor;\n                            // or, line 234\n                            lab9: do {\n                                v_8 = limit - cursor;\n                                lab10: do {\n                                    // (, line 234\n                                    // literal, line 234\n                                    if (!(eq_s_b(1, \"Y\")))\n                                    {\n                                        break lab10;\n                                    }\n                                    // ], line 234\n                                    bra = cursor;\n                                    // <-, line 234\n                                    slice_from(\"i\");\n                                    break lab9;\n                                } while (false);\n                                cursor = limit - v_8;\n                                // (, line 235\n                                // literal, line 235\n                                if (!(eq_s_b(1, \"\\u00E7\")))\n                                {\n                                    cursor = limit - v_7;\n                                    break lab8;\n                                }\n                                // ], line 235\n                                bra = cursor;\n                                // <-, line 235\n                                slice_from(\"c\");\n                            } while (false);\n                        } while (false);\n                        break lab3;\n                    } while (false);\n                    cursor = limit - v_4;\n                    // call residual_suffix, line 238\n                    if (!r_residual_suffix())\n                    {\n                        break lab2;\n                    }\n                } while (false);\n            } while (false);\n            cursor = limit - v_3;\n            // do, line 243\n            v_9 = limit - cursor;\n            lab11: do {\n                // call un_double, line 243\n                if (!r_un_double())\n                {\n                    break lab11;\n                }\n            } while (false);\n            cursor = limit - v_9;\n            // do, line 244\n            v_10 = limit - cursor;\n            lab12: do {\n                // call un_accent, line 244\n                if (!r_un_accent())\n                {\n                    break lab12;\n                }\n            } while (false);\n            cursor = limit - v_10;\n            cursor = limit_backward;            // do, line 246\n            v_11 = cursor;\n            lab13: do {\n                // call postlude, line 246\n                if (!r_postlude())\n                {\n                    break lab13;\n                }\n            } while (false);\n            cursor = v_11;\n            return true;\n        }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b62da6a75575f59a016a076b4753dc6e20c74b44":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a5aa159e1ac4009d23cea92797d3804da4f5e7ad":["b62da6a75575f59a016a076b4753dc6e20c74b44"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"38c26570a4fd6cf0856801c977a2bc9c28a5424c":["a5aa159e1ac4009d23cea92797d3804da4f5e7ad"],"d40ff39db4a2b90a440b97f2a7d7eda344f004ef":["38c26570a4fd6cf0856801c977a2bc9c28a5424c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["d40ff39db4a2b90a440b97f2a7d7eda344f004ef"]},"commit2Childs":{"b62da6a75575f59a016a076b4753dc6e20c74b44":["a5aa159e1ac4009d23cea92797d3804da4f5e7ad"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b62da6a75575f59a016a076b4753dc6e20c74b44"],"a5aa159e1ac4009d23cea92797d3804da4f5e7ad":["38c26570a4fd6cf0856801c977a2bc9c28a5424c"],"38c26570a4fd6cf0856801c977a2bc9c28a5424c":["d40ff39db4a2b90a440b97f2a7d7eda344f004ef"],"d40ff39db4a2b90a440b97f2a7d7eda344f004ef":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}