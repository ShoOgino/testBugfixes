{"path":"lucene/src/java/org/apache/lucene/index/codecs/perfield/PerFieldPostingsFormat.FieldsReader#FieldsReader(SegmentReadState).mjava","commits":[{"id":"7b91922b55d15444d554721b352861d028eb8278","date":1320421415,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/perfield/PerFieldPostingsFormat.FieldsReader#FieldsReader(SegmentReadState).mjava","pathOld":"/dev/null","sourceNew":"    public FieldsReader(final SegmentReadState readState) throws IOException {\n\n      // Read _X.per and init each format:\n      boolean success = false;\n      try {\n        new VisitPerFieldFile(readState.dir, readState.segmentInfo.name, readState.segmentSuffix) {\n          @Override\n          protected void visitOneFormat(String segmentSuffix, PostingsFormat postingsFormat) throws IOException {\n            formats.put(postingsFormat, postingsFormat.fieldsProducer(new SegmentReadState(readState, segmentSuffix)));\n          }\n\n          @Override\n          protected void visitOneField(String fieldName, PostingsFormat postingsFormat) throws IOException {\n            assert formats.containsKey(postingsFormat);\n            fields.put(fieldName, formats.get(postingsFormat));\n          }\n        };\n        success = true;\n      } finally {\n        if (!success) {\n          IOUtils.closeWhileHandlingException(formats.values());\n        }\n      }\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a0ae5e3ed1232483b7b8a014f175a5fe43595982","date":1324062192,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/codecs/perfield/PerFieldPostingsFormat.FieldsReader#FieldsReader(SegmentReadState).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/perfield/PerFieldPostingsFormat.FieldsReader#FieldsReader(SegmentReadState).mjava","sourceNew":"    public FieldsReader(final SegmentReadState readState) throws IOException {\n\n      // Read _X.per and init each format:\n      boolean success = false;\n      try {\n        new VisitPerFieldFile(readState.dir, readState.segmentInfo.name, readState.segmentSuffix) {\n          @Override\n          protected void visitOneFormat(String segmentSuffix, PostingsFormat postingsFormat) throws IOException {\n            formats.put(postingsFormat, postingsFormat.fieldsProducer(new SegmentReadState(readState, segmentSuffix)));\n          }\n\n          @Override\n          protected void visitOneField(String fieldName, PostingsFormat postingsFormat) throws IOException {\n            assert formats.containsKey(postingsFormat);\n            fields.put(fieldName, formats.get(postingsFormat));\n          }\n        };\n        success = true;\n      } finally {\n        if (!success) {\n          IOUtils.closeWhileHandlingException(formats.values());\n        }\n      }\n    }\n\n","sourceOld":"    public FieldsReader(final SegmentReadState readState) throws IOException {\n\n      // Read _X.per and init each format:\n      boolean success = false;\n      try {\n        new VisitPerFieldFile(readState.dir, readState.segmentInfo.name, readState.segmentSuffix) {\n          @Override\n          protected void visitOneFormat(String segmentSuffix, PostingsFormat postingsFormat) throws IOException {\n            formats.put(postingsFormat, postingsFormat.fieldsProducer(new SegmentReadState(readState, segmentSuffix)));\n          }\n\n          @Override\n          protected void visitOneField(String fieldName, PostingsFormat postingsFormat) throws IOException {\n            assert formats.containsKey(postingsFormat);\n            fields.put(fieldName, formats.get(postingsFormat));\n          }\n        };\n        success = true;\n      } finally {\n        if (!success) {\n          IOUtils.closeWhileHandlingException(formats.values());\n        }\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"7b91922b55d15444d554721b352861d028eb8278":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a0ae5e3ed1232483b7b8a014f175a5fe43595982":["7b91922b55d15444d554721b352861d028eb8278"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0ae5e3ed1232483b7b8a014f175a5fe43595982"]},"commit2Childs":{"7b91922b55d15444d554721b352861d028eb8278":["a0ae5e3ed1232483b7b8a014f175a5fe43595982"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["7b91922b55d15444d554721b352861d028eb8278"],"a0ae5e3ed1232483b7b8a014f175a5fe43595982":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}