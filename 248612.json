{"path":"solr/solrj/src/java/org/apache/solr/client/solrj/io/sql/ResultSetMetaDataImpl#getColumnName(int).mjava","commits":[{"id":"cd678ee55c5f56766401950747d256e1ab3ceed1","date":1452884159,"type":0,"author":"Joel Bernstein","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/io/sql/ResultSetMetaDataImpl#getColumnName(int).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public String getColumnName(int column) throws SQLException {\n    return null;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8002782dd7fef31376fe9c711d16558f2eb34fff","date":1453780561,"type":3,"author":"jbernste","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/io/sql/ResultSetMetaDataImpl#getColumnName(int).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/io/sql/ResultSetMetaDataImpl#getColumnName(int).mjava","sourceNew":"  @Override\n  public String getColumnName(int column) throws SQLException {\n    List<String> columns = metadataTuple.getStrings(\"fields\");\n    if(column < 1 || column > columns.size()) {\n      throw new SQLException(\"Column index \" + column + \" is not valid\");\n    }\n    return columns.get(column - 1);\n  }\n\n","sourceOld":"  @Override\n  public String getColumnName(int column) throws SQLException {\n    return null;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1e6acbaae7af722f17204ceccf0f7db5753eccf3","date":1454775255,"type":3,"author":"Mike McCandless","isMerge":true,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/io/sql/ResultSetMetaDataImpl#getColumnName(int).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/io/sql/ResultSetMetaDataImpl#getColumnName(int).mjava","sourceNew":"  @Override\n  public String getColumnName(int column) throws SQLException {\n    List<String> columns = metadataTuple.getStrings(\"fields\");\n    if(column < 1 || column > columns.size()) {\n      throw new SQLException(\"Column index \" + column + \" is not valid\");\n    }\n    return columns.get(column - 1);\n  }\n\n","sourceOld":"  @Override\n  public String getColumnName(int column) throws SQLException {\n    return null;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"1e6acbaae7af722f17204ceccf0f7db5753eccf3":["cd678ee55c5f56766401950747d256e1ab3ceed1","8002782dd7fef31376fe9c711d16558f2eb34fff"],"cd678ee55c5f56766401950747d256e1ab3ceed1":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"8002782dd7fef31376fe9c711d16558f2eb34fff":["cd678ee55c5f56766401950747d256e1ab3ceed1"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["8002782dd7fef31376fe9c711d16558f2eb34fff"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cd678ee55c5f56766401950747d256e1ab3ceed1"],"1e6acbaae7af722f17204ceccf0f7db5753eccf3":[],"cd678ee55c5f56766401950747d256e1ab3ceed1":["1e6acbaae7af722f17204ceccf0f7db5753eccf3","8002782dd7fef31376fe9c711d16558f2eb34fff"],"8002782dd7fef31376fe9c711d16558f2eb34fff":["1e6acbaae7af722f17204ceccf0f7db5753eccf3","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["1e6acbaae7af722f17204ceccf0f7db5753eccf3","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}