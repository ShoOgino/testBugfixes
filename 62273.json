{"path":"lucene/core/src/java/org/apache/lucene/search/LeafCollector#acceptsDocsOutOfOrder().mjava","commits":[{"id":"ae73da626f97850c922c42736f808d0378e165f0","date":1396625460,"type":1,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/LeafCollector#acceptsDocsOutOfOrder().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/Collector#acceptsDocsOutOfOrder().mjava","sourceNew":"  /**\n   * Return <code>true</code> if this collector does not\n   * require the matching docIDs to be delivered in int sort\n   * order (smallest to largest) to {@link #collect}.\n   *\n   * <p> Most Lucene Query implementations will visit\n   * matching docIDs in order.  However, some queries\n   * (currently limited to certain cases of {@link\n   * BooleanQuery}) can achieve faster searching if the\n   * <code>Collector</code> allows them to deliver the\n   * docIDs out of order.</p>\n   *\n   * <p> Many collectors don't mind getting docIDs out of\n   * order, so it's important to return <code>true</code>\n   * here.\n   */\n  boolean acceptsDocsOutOfOrder();\n\n","sourceOld":"  /**\n   * Return <code>true</code> if this collector does not\n   * require the matching docIDs to be delivered in int sort\n   * order (smallest to largest) to {@link #collect}.\n   *\n   * <p> Most Lucene Query implementations will visit\n   * matching docIDs in order.  However, some queries\n   * (currently limited to certain cases of {@link\n   * BooleanQuery}) can achieve faster searching if the\n   * <code>Collector</code> allows them to deliver the\n   * docIDs out of order.</p>\n   *\n   * <p> Many collectors don't mind getting docIDs out of\n   * order, so it's important to return <code>true</code>\n   * here.\n   */\n  public abstract boolean acceptsDocsOutOfOrder();\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"15e323346eac5e4685c0a9f2df85eb96b4239bbb","date":1396688577,"type":1,"author":"Dawid Weiss","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/search/LeafCollector#acceptsDocsOutOfOrder().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/Collector#acceptsDocsOutOfOrder().mjava","sourceNew":"  /**\n   * Return <code>true</code> if this collector does not\n   * require the matching docIDs to be delivered in int sort\n   * order (smallest to largest) to {@link #collect}.\n   *\n   * <p> Most Lucene Query implementations will visit\n   * matching docIDs in order.  However, some queries\n   * (currently limited to certain cases of {@link\n   * BooleanQuery}) can achieve faster searching if the\n   * <code>Collector</code> allows them to deliver the\n   * docIDs out of order.</p>\n   *\n   * <p> Many collectors don't mind getting docIDs out of\n   * order, so it's important to return <code>true</code>\n   * here.\n   */\n  boolean acceptsDocsOutOfOrder();\n\n","sourceOld":"  /**\n   * Return <code>true</code> if this collector does not\n   * require the matching docIDs to be delivered in int sort\n   * order (smallest to largest) to {@link #collect}.\n   *\n   * <p> Most Lucene Query implementations will visit\n   * matching docIDs in order.  However, some queries\n   * (currently limited to certain cases of {@link\n   * BooleanQuery}) can achieve faster searching if the\n   * <code>Collector</code> allows them to deliver the\n   * docIDs out of order.</p>\n   *\n   * <p> Many collectors don't mind getting docIDs out of\n   * order, so it's important to return <code>true</code>\n   * here.\n   */\n  public abstract boolean acceptsDocsOutOfOrder();\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f582f18c13d4852b01d4fe0a0196432c5c6f2b7f","date":1421314520,"type":4,"author":"Adrien Grand","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/search/LeafCollector#acceptsDocsOutOfOrder().mjava","sourceNew":null,"sourceOld":"  /**\n   * Return <code>true</code> if this collector does not\n   * require the matching docIDs to be delivered in int sort\n   * order (smallest to largest) to {@link #collect}.\n   *\n   * <p> Most Lucene Query implementations will visit\n   * matching docIDs in order.  However, some queries\n   * (currently limited to certain cases of {@link\n   * BooleanQuery}) can achieve faster searching if the\n   * <code>Collector</code> allows them to deliver the\n   * docIDs out of order.</p>\n   *\n   * <p> Many collectors don't mind getting docIDs out of\n   * order, so it's important to return <code>true</code>\n   * here.\n   */\n  boolean acceptsDocsOutOfOrder();\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"f582f18c13d4852b01d4fe0a0196432c5c6f2b7f":["ae73da626f97850c922c42736f808d0378e165f0"],"15e323346eac5e4685c0a9f2df85eb96b4239bbb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","ae73da626f97850c922c42736f808d0378e165f0"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"ae73da626f97850c922c42736f808d0378e165f0":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["f582f18c13d4852b01d4fe0a0196432c5c6f2b7f"]},"commit2Childs":{"f582f18c13d4852b01d4fe0a0196432c5c6f2b7f":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"15e323346eac5e4685c0a9f2df85eb96b4239bbb":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["15e323346eac5e4685c0a9f2df85eb96b4239bbb","ae73da626f97850c922c42736f808d0378e165f0"],"ae73da626f97850c922c42736f808d0378e165f0":["f582f18c13d4852b01d4fe0a0196432c5c6f2b7f","15e323346eac5e4685c0a9f2df85eb96b4239bbb"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["15e323346eac5e4685c0a9f2df85eb96b4239bbb","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}