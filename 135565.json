{"path":"solr/core/src/java/org/apache/solr/search/Grouping.Command#createAllGroupCollector().mjava","commits":[{"id":"3738f7d06920ae25ab2884f4efd80c42e95d6271","date":1312707753,"type":0,"author":"Martijn van Groningen","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/Grouping.Command#createAllGroupCollector().mjava","pathOld":"/dev/null","sourceNew":"    /**\n     * Returns a collector that is able to return the most relevant document of all groups.\n     * Returns <code>null</code> if the command doesn't support this type of collector.\n     *\n     * @return a collector that is able to return the most relevant document of all groups.\n     * @throws IOException If I/O related errors occur\n     */\n    public AbstractAllGroupHeadsCollector<?> createAllGroupCollector() throws IOException {\n      return null;\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"19275ba31e621f6da1b83bf13af75233876fd3d4","date":1374846698,"type":3,"author":"Han Jiang","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/Grouping.Command#createAllGroupCollector().mjava","pathOld":"solr/core/src/java/org/apache/solr/search/Grouping.Command#createAllGroupCollector().mjava","sourceNew":"    /**\n     * Returns a collector that is able to return the most relevant document of all groups.\n     * Returns <code>null</code> if the command doesn't support this type of collector.\n     *\n     * @return a collector that is able to return the most relevant document of all groups.\n     * @throws IOException If I/O related errors occur\n     */\n    public AbstractAllGroupHeadsCollector<?> createAllGroupCollector() throws IOException {\n      return null;\n    }\n\n","sourceOld":"    /**\n     * Returns a collector that is able to return the most relevant document of all groups.\n     * Returns <code>null</code> if the command doesn't support this type of collector.\n     *\n     * @return a collector that is able to return the most relevant document of all groups.\n     * @throws IOException If I/O related errors occur\n     */\n    public AbstractAllGroupHeadsCollector<?> createAllGroupCollector() throws IOException {\n      return null;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"716d18f3a9b0993bc679d7fa7abdc9bfb03411ec","date":1376375609,"type":3,"author":"Han Jiang","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/search/Grouping.Command#createAllGroupCollector().mjava","pathOld":"solr/core/src/java/org/apache/solr/search/Grouping.Command#createAllGroupCollector().mjava","sourceNew":"    /**\n     * Returns a collector that is able to return the most relevant document of all groups.\n     * Returns <code>null</code> if the command doesn't support this type of collector.\n     *\n     * @return a collector that is able to return the most relevant document of all groups.\n     * @throws IOException If I/O related errors occur\n     */\n    public AbstractAllGroupHeadsCollector<?> createAllGroupCollector() throws IOException {\n      return null;\n    }\n\n","sourceOld":"    /**\n     * Returns a collector that is able to return the most relevant document of all groups.\n     * Returns <code>null</code> if the command doesn't support this type of collector.\n     *\n     * @return a collector that is able to return the most relevant document of all groups.\n     * @throws IOException If I/O related errors occur\n     */\n    public AbstractAllGroupHeadsCollector<?> createAllGroupCollector() throws IOException {\n      return null;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"20e94e61fe5291647346b70437617e6b6c370408","date":1483783127,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/Grouping.Command#createAllGroupCollector().mjava","pathOld":"solr/core/src/java/org/apache/solr/search/Grouping.Command#createAllGroupCollector().mjava","sourceNew":"    /**\n     * Returns a collector that is able to return the most relevant document of all groups.\n     * Returns <code>null</code> if the command doesn't support this type of collector.\n     *\n     * @return a collector that is able to return the most relevant document of all groups.\n     * @throws IOException If I/O related errors occur\n     */\n    public AllGroupHeadsCollector<?> createAllGroupCollector() throws IOException {\n      return null;\n    }\n\n","sourceOld":"    /**\n     * Returns a collector that is able to return the most relevant document of all groups.\n     * Returns <code>null</code> if the command doesn't support this type of collector.\n     *\n     * @return a collector that is able to return the most relevant document of all groups.\n     * @throws IOException If I/O related errors occur\n     */\n    public AbstractAllGroupHeadsCollector<?> createAllGroupCollector() throws IOException {\n      return null;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"09ab8ee44ca898536770d0106a7c0ee4be4f0eb7","date":1484239864,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/search/Grouping.Command#createAllGroupCollector().mjava","pathOld":"solr/core/src/java/org/apache/solr/search/Grouping.Command#createAllGroupCollector().mjava","sourceNew":"    /**\n     * Returns a collector that is able to return the most relevant document of all groups.\n     * Returns <code>null</code> if the command doesn't support this type of collector.\n     *\n     * @return a collector that is able to return the most relevant document of all groups.\n     * @throws IOException If I/O related errors occur\n     */\n    public AllGroupHeadsCollector<?> createAllGroupCollector() throws IOException {\n      return null;\n    }\n\n","sourceOld":"    /**\n     * Returns a collector that is able to return the most relevant document of all groups.\n     * Returns <code>null</code> if the command doesn't support this type of collector.\n     *\n     * @return a collector that is able to return the most relevant document of all groups.\n     * @throws IOException If I/O related errors occur\n     */\n    public AbstractAllGroupHeadsCollector<?> createAllGroupCollector() throws IOException {\n      return null;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3738f7d06920ae25ab2884f4efd80c42e95d6271":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"716d18f3a9b0993bc679d7fa7abdc9bfb03411ec":["3738f7d06920ae25ab2884f4efd80c42e95d6271","19275ba31e621f6da1b83bf13af75233876fd3d4"],"20e94e61fe5291647346b70437617e6b6c370408":["19275ba31e621f6da1b83bf13af75233876fd3d4"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"19275ba31e621f6da1b83bf13af75233876fd3d4":["3738f7d06920ae25ab2884f4efd80c42e95d6271"],"09ab8ee44ca898536770d0106a7c0ee4be4f0eb7":["19275ba31e621f6da1b83bf13af75233876fd3d4","20e94e61fe5291647346b70437617e6b6c370408"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["20e94e61fe5291647346b70437617e6b6c370408"]},"commit2Childs":{"3738f7d06920ae25ab2884f4efd80c42e95d6271":["716d18f3a9b0993bc679d7fa7abdc9bfb03411ec","19275ba31e621f6da1b83bf13af75233876fd3d4"],"716d18f3a9b0993bc679d7fa7abdc9bfb03411ec":[],"20e94e61fe5291647346b70437617e6b6c370408":["09ab8ee44ca898536770d0106a7c0ee4be4f0eb7","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3738f7d06920ae25ab2884f4efd80c42e95d6271"],"19275ba31e621f6da1b83bf13af75233876fd3d4":["716d18f3a9b0993bc679d7fa7abdc9bfb03411ec","20e94e61fe5291647346b70437617e6b6c370408","09ab8ee44ca898536770d0106a7c0ee4be4f0eb7"],"09ab8ee44ca898536770d0106a7c0ee4be4f0eb7":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["716d18f3a9b0993bc679d7fa7abdc9bfb03411ec","09ab8ee44ca898536770d0106a7c0ee4be4f0eb7","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}