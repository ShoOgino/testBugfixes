{"path":"src/java/org/apache/solr/analysis/TrimFilter#next().mjava","commits":[{"id":"fa271a738c74b4551a7a964f75cb5fc19f80dc79","date":1168391918,"type":0,"author":"Chris M. Hostetter","isMerge":false,"pathNew":"src/java/org/apache/solr/analysis/TrimFilter#next().mjava","pathOld":"/dev/null","sourceNew":"  public final Token next() throws IOException {\n    Token t = input.next();\n    if (null == t || null == t.termText())\n      return t;\n\n    t.setTermText(t.termText().trim());\n    return t;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"de4d615b00f60dce1293e87276b0685ce0f0d621","date":1179940685,"type":3,"author":"Ryan McKinley","isMerge":false,"pathNew":"src/java/org/apache/solr/analysis/TrimFilter#next().mjava","pathOld":"src/java/org/apache/solr/analysis/TrimFilter#next().mjava","sourceNew":"  @Override\n  public final Token next() throws IOException {\n    Token t = input.next();\n    if (null == t || null == t.termText())\n      return t;\n\n    if( updateOffsets ) {\n      String txt = t.termText();\n      int start = 0;\n      int end = txt.length();\n      int endOff = 0;\n      \n      // eat the first characters\n      while ((start < end) && (txt.charAt(start) <= ' ')) {\n        start++;\n      }\n      \n      // eat the end characters\n      while ((start < end) && (txt.charAt(end-1) <= ' ')) {\n        end--;\n        endOff++;\n      }\n      \n      if( start > 0 || end < txt.length() ) {\n        int incr = t.getPositionIncrement();\n        t = new Token( t.termText().substring( start, end ),\n             t.startOffset()+start,\n             t.endOffset()-endOff,\n             t.type() );\n        \n        t.setPositionIncrement( incr ); //+ start ); TODO? what should happen with the offset\n      }\n    }\n    else {\n      t.setTermText( t.termText().trim() );\n    }\n    return t;\n  }\n\n","sourceOld":"  public final Token next() throws IOException {\n    Token t = input.next();\n    if (null == t || null == t.termText())\n      return t;\n\n    t.setTermText(t.termText().trim());\n    return t;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fe8ae1ed027200f075b0de9f264776fa32c4862f","date":1207066219,"type":4,"author":"Grant Ingersoll","isMerge":false,"pathNew":"/dev/null","pathOld":"src/java/org/apache/solr/analysis/TrimFilter#next().mjava","sourceNew":null,"sourceOld":"  @Override\n  public final Token next() throws IOException {\n    Token t = input.next();\n    if (null == t || null == t.termText())\n      return t;\n\n    if( updateOffsets ) {\n      String txt = t.termText();\n      int start = 0;\n      int end = txt.length();\n      int endOff = 0;\n      \n      // eat the first characters\n      while ((start < end) && (txt.charAt(start) <= ' ')) {\n        start++;\n      }\n      \n      // eat the end characters\n      while ((start < end) && (txt.charAt(end-1) <= ' ')) {\n        end--;\n        endOff++;\n      }\n      \n      if( start > 0 || end < txt.length() ) {\n        int incr = t.getPositionIncrement();\n        t = new Token( t.termText().substring( start, end ),\n             t.startOffset()+start,\n             t.endOffset()-endOff,\n             t.type() );\n        \n        t.setPositionIncrement( incr ); //+ start ); TODO? what should happen with the offset\n      }\n    }\n    else {\n      t.setTermText( t.termText().trim() );\n    }\n    return t;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"fe8ae1ed027200f075b0de9f264776fa32c4862f":["de4d615b00f60dce1293e87276b0685ce0f0d621"],"de4d615b00f60dce1293e87276b0685ce0f0d621":["fa271a738c74b4551a7a964f75cb5fc19f80dc79"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"fa271a738c74b4551a7a964f75cb5fc19f80dc79":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"fe8ae1ed027200f075b0de9f264776fa32c4862f":[],"de4d615b00f60dce1293e87276b0685ce0f0d621":["fe8ae1ed027200f075b0de9f264776fa32c4862f"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["fa271a738c74b4551a7a964f75cb5fc19f80dc79"],"fa271a738c74b4551a7a964f75cb5fc19f80dc79":["de4d615b00f60dce1293e87276b0685ce0f0d621"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["fe8ae1ed027200f075b0de9f264776fa32c4862f","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"pathCommit":null}