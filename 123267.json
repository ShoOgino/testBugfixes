{"path":"lucene/grouping/src/test/org/apache/lucene/search/grouping/DistinctValuesCollectorTest#addField(Document,String,String,DocValuesType).mjava","commits":[{"id":"0837ab0472feecb3a54260729d845f839e1cbd72","date":1358283639,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/grouping/src/test/org/apache/lucene/search/grouping/DistinctValuesCollectorTest#addField(Document,String,String,DocValuesType).mjava","pathOld":"/dev/null","sourceNew":"  private void addField(Document doc, String field, String value, DocValuesType type) {\n    doc.add(new StringField(field, value, Field.Store.YES));\n    if (type == null) {\n      return;\n    }\n    String dvField = field + \"_dv\";\n\n    Field valuesField = null;\n    switch (type) {\n      case NUMERIC:\n        valuesField = new PackedLongDocValuesField(dvField, Integer.parseInt(value));\n        break;\n      /* nocommit: case FLOAT_64:\n        valuesField = new DoubleDocValuesField(dvField, Double.parseDouble(value));\n        break; */\n      case BINARY:\n        valuesField = new StraightBytesDocValuesField(dvField, new BytesRef(value));\n        break;\n      case SORTED:\n        valuesField = new SortedBytesDocValuesField(dvField, new BytesRef(value));\n        break;\n    }\n    doc.add(valuesField);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"423d89a2b3cc419b647c07c2b3fdbc54311d07f9","date":1358836612,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/grouping/src/test/org/apache/lucene/search/grouping/DistinctValuesCollectorTest#addField(Document,String,String,DocValuesType).mjava","pathOld":"lucene/grouping/src/test/org/apache/lucene/search/grouping/DistinctValuesCollectorTest#addField(Document,String,String,DocValuesType).mjava","sourceNew":"  private void addField(Document doc, String field, String value, DocValuesType type) {\n    doc.add(new StringField(field, value, Field.Store.YES));\n    if (type == null) {\n      return;\n    }\n    String dvField = field + \"_dv\";\n\n    Field valuesField = null;\n    switch (type) {\n      case NUMERIC:\n        valuesField = new NumericDocValuesField(dvField, Integer.parseInt(value));\n        break;\n      /* nocommit: case FLOAT_64:\n        valuesField = new DoubleDocValuesField(dvField, Double.parseDouble(value));\n        break; */\n      case BINARY:\n        valuesField = new BinaryDocValuesField(dvField, new BytesRef(value));\n        break;\n      case SORTED:\n        valuesField = new SortedDocValuesField(dvField, new BytesRef(value));\n        break;\n    }\n    doc.add(valuesField);\n  }\n\n","sourceOld":"  private void addField(Document doc, String field, String value, DocValuesType type) {\n    doc.add(new StringField(field, value, Field.Store.YES));\n    if (type == null) {\n      return;\n    }\n    String dvField = field + \"_dv\";\n\n    Field valuesField = null;\n    switch (type) {\n      case NUMERIC:\n        valuesField = new PackedLongDocValuesField(dvField, Integer.parseInt(value));\n        break;\n      /* nocommit: case FLOAT_64:\n        valuesField = new DoubleDocValuesField(dvField, Double.parseDouble(value));\n        break; */\n      case BINARY:\n        valuesField = new StraightBytesDocValuesField(dvField, new BytesRef(value));\n        break;\n      case SORTED:\n        valuesField = new SortedBytesDocValuesField(dvField, new BytesRef(value));\n        break;\n    }\n    doc.add(valuesField);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"caa40272511a69bd4ad04b8242ae420932f5799b","date":1359341326,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/grouping/src/test/org/apache/lucene/search/grouping/DistinctValuesCollectorTest#addField(Document,String,String,DocValuesType).mjava","pathOld":"lucene/grouping/src/test/org/apache/lucene/search/grouping/DistinctValuesCollectorTest#addField(Document,String,String,DocValuesType).mjava","sourceNew":"  private void addField(Document doc, String field, String value, DocValuesType type) {\n    doc.add(new StringField(field, value, Field.Store.YES));\n    if (type == null) {\n      return;\n    }\n    String dvField = field + \"_dv\";\n\n    Field valuesField = null;\n    switch (type) {\n      case NUMERIC:\n        valuesField = new NumericDocValuesField(dvField, Integer.parseInt(value));\n        break;\n      case BINARY:\n        valuesField = new BinaryDocValuesField(dvField, new BytesRef(value));\n        break;\n      case SORTED:\n        valuesField = new SortedDocValuesField(dvField, new BytesRef(value));\n        break;\n    }\n    doc.add(valuesField);\n  }\n\n","sourceOld":"  private void addField(Document doc, String field, String value, DocValuesType type) {\n    doc.add(new StringField(field, value, Field.Store.YES));\n    if (type == null) {\n      return;\n    }\n    String dvField = field + \"_dv\";\n\n    Field valuesField = null;\n    switch (type) {\n      case NUMERIC:\n        valuesField = new NumericDocValuesField(dvField, Integer.parseInt(value));\n        break;\n      /* nocommit: case FLOAT_64:\n        valuesField = new DoubleDocValuesField(dvField, Double.parseDouble(value));\n        break; */\n      case BINARY:\n        valuesField = new BinaryDocValuesField(dvField, new BytesRef(value));\n        break;\n      case SORTED:\n        valuesField = new SortedDocValuesField(dvField, new BytesRef(value));\n        break;\n    }\n    doc.add(valuesField);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d4d69c535930b5cce125cff868d40f6373dc27d4","date":1360270101,"type":0,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/grouping/src/test/org/apache/lucene/search/grouping/DistinctValuesCollectorTest#addField(Document,String,String,DocValuesType).mjava","pathOld":"/dev/null","sourceNew":"  private void addField(Document doc, String field, String value, DocValuesType type) {\n    doc.add(new StringField(field, value, Field.Store.YES));\n    if (type == null) {\n      return;\n    }\n    String dvField = field + \"_dv\";\n\n    Field valuesField = null;\n    switch (type) {\n      case NUMERIC:\n        valuesField = new NumericDocValuesField(dvField, Integer.parseInt(value));\n        break;\n      case BINARY:\n        valuesField = new BinaryDocValuesField(dvField, new BytesRef(value));\n        break;\n      case SORTED:\n        valuesField = new SortedDocValuesField(dvField, new BytesRef(value));\n        break;\n    }\n    doc.add(valuesField);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6d1c58e9d1ed4b363d0b00ad5209e1b01c418347","date":1399827661,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/grouping/src/test/org/apache/lucene/search/grouping/DistinctValuesCollectorTest#addField(Document,String,String,DocValuesType).mjava","pathOld":"lucene/grouping/src/test/org/apache/lucene/search/grouping/DistinctValuesCollectorTest#addField(Document,String,String,DocValuesType).mjava","sourceNew":"  private void addField(Document doc, String field, String value, DocValuesType type) {\n    assert type != null;\n\n    Field valuesField = null;\n    switch (type) {\n      case NUMERIC:\n        valuesField = new NumericDocValuesField(field, Integer.parseInt(value));\n        break;\n      case BINARY:\n        valuesField = new BinaryDocValuesField(field, new BytesRef(value));\n        break;\n      case SORTED:\n        valuesField = new SortedDocValuesField(field, new BytesRef(value));\n        break;\n    }\n    doc.add(valuesField);\n  }\n\n","sourceOld":"  private void addField(Document doc, String field, String value, DocValuesType type) {\n    doc.add(new StringField(field, value, Field.Store.YES));\n    if (type == null) {\n      return;\n    }\n    String dvField = field + \"_dv\";\n\n    Field valuesField = null;\n    switch (type) {\n      case NUMERIC:\n        valuesField = new NumericDocValuesField(dvField, Integer.parseInt(value));\n        break;\n      case BINARY:\n        valuesField = new BinaryDocValuesField(dvField, new BytesRef(value));\n        break;\n      case SORTED:\n        valuesField = new SortedDocValuesField(dvField, new BytesRef(value));\n        break;\n    }\n    doc.add(valuesField);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d7d9cc55f861840a92a2bda7a9985ec2e2485902","date":1399828429,"type":4,"author":"Robert Muir","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/grouping/src/test/org/apache/lucene/search/grouping/DistinctValuesCollectorTest#addField(Document,String,String,DocValuesType).mjava","sourceNew":null,"sourceOld":"  private void addField(Document doc, String field, String value, DocValuesType type) {\n    assert type != null;\n\n    Field valuesField = null;\n    switch (type) {\n      case NUMERIC:\n        valuesField = new NumericDocValuesField(field, Integer.parseInt(value));\n        break;\n      case BINARY:\n        valuesField = new BinaryDocValuesField(field, new BytesRef(value));\n        break;\n      case SORTED:\n        valuesField = new SortedDocValuesField(field, new BytesRef(value));\n        break;\n    }\n    doc.add(valuesField);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"93dd449115a9247533e44bab47e8429e5dccbc6d","date":1400258396,"type":4,"author":"Robert Muir","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/grouping/src/test/org/apache/lucene/search/grouping/DistinctValuesCollectorTest#addField(Document,String,String,DocValuesType).mjava","sourceNew":null,"sourceOld":"  private void addField(Document doc, String field, String value, DocValuesType type) {\n    doc.add(new StringField(field, value, Field.Store.YES));\n    if (type == null) {\n      return;\n    }\n    String dvField = field + \"_dv\";\n\n    Field valuesField = null;\n    switch (type) {\n      case NUMERIC:\n        valuesField = new NumericDocValuesField(dvField, Integer.parseInt(value));\n        break;\n      case BINARY:\n        valuesField = new BinaryDocValuesField(dvField, new BytesRef(value));\n        break;\n      case SORTED:\n        valuesField = new SortedDocValuesField(dvField, new BytesRef(value));\n        break;\n    }\n    doc.add(valuesField);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"56572ec06f1407c066d6b7399413178b33176cd8","date":1400495675,"type":4,"author":"Michael McCandless","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/grouping/src/test/org/apache/lucene/search/grouping/DistinctValuesCollectorTest#addField(Document,String,String,DocValuesType).mjava","sourceNew":null,"sourceOld":"  private void addField(Document doc, String field, String value, DocValuesType type) {\n    doc.add(new StringField(field, value, Field.Store.YES));\n    if (type == null) {\n      return;\n    }\n    String dvField = field + \"_dv\";\n\n    Field valuesField = null;\n    switch (type) {\n      case NUMERIC:\n        valuesField = new NumericDocValuesField(dvField, Integer.parseInt(value));\n        break;\n      case BINARY:\n        valuesField = new BinaryDocValuesField(dvField, new BytesRef(value));\n        break;\n      case SORTED:\n        valuesField = new SortedDocValuesField(dvField, new BytesRef(value));\n        break;\n    }\n    doc.add(valuesField);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"6d1c58e9d1ed4b363d0b00ad5209e1b01c418347":["d4d69c535930b5cce125cff868d40f6373dc27d4"],"d4d69c535930b5cce125cff868d40f6373dc27d4":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","caa40272511a69bd4ad04b8242ae420932f5799b"],"93dd449115a9247533e44bab47e8429e5dccbc6d":["d4d69c535930b5cce125cff868d40f6373dc27d4","d7d9cc55f861840a92a2bda7a9985ec2e2485902"],"caa40272511a69bd4ad04b8242ae420932f5799b":["423d89a2b3cc419b647c07c2b3fdbc54311d07f9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"0837ab0472feecb3a54260729d845f839e1cbd72":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"423d89a2b3cc419b647c07c2b3fdbc54311d07f9":["0837ab0472feecb3a54260729d845f839e1cbd72"],"56572ec06f1407c066d6b7399413178b33176cd8":["d4d69c535930b5cce125cff868d40f6373dc27d4","93dd449115a9247533e44bab47e8429e5dccbc6d"],"d7d9cc55f861840a92a2bda7a9985ec2e2485902":["6d1c58e9d1ed4b363d0b00ad5209e1b01c418347"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["93dd449115a9247533e44bab47e8429e5dccbc6d"]},"commit2Childs":{"6d1c58e9d1ed4b363d0b00ad5209e1b01c418347":["d7d9cc55f861840a92a2bda7a9985ec2e2485902"],"d4d69c535930b5cce125cff868d40f6373dc27d4":["6d1c58e9d1ed4b363d0b00ad5209e1b01c418347","93dd449115a9247533e44bab47e8429e5dccbc6d","56572ec06f1407c066d6b7399413178b33176cd8"],"93dd449115a9247533e44bab47e8429e5dccbc6d":["56572ec06f1407c066d6b7399413178b33176cd8","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"caa40272511a69bd4ad04b8242ae420932f5799b":["d4d69c535930b5cce125cff868d40f6373dc27d4"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["d4d69c535930b5cce125cff868d40f6373dc27d4","0837ab0472feecb3a54260729d845f839e1cbd72"],"0837ab0472feecb3a54260729d845f839e1cbd72":["423d89a2b3cc419b647c07c2b3fdbc54311d07f9"],"423d89a2b3cc419b647c07c2b3fdbc54311d07f9":["caa40272511a69bd4ad04b8242ae420932f5799b"],"56572ec06f1407c066d6b7399413178b33176cd8":[],"d7d9cc55f861840a92a2bda7a9985ec2e2485902":["93dd449115a9247533e44bab47e8429e5dccbc6d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["56572ec06f1407c066d6b7399413178b33176cd8","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}