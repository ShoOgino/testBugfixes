{"path":"lucene/suggest/src/java/org/apache/lucene/search/suggest/UnsortedTermFreqIteratorWrapper#UnsortedTermFreqIteratorWrapper(TermFreqIterator).mjava","commits":[{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/suggest/src/java/org/apache/lucene/search/suggest/UnsortedTermFreqIteratorWrapper#UnsortedTermFreqIteratorWrapper(TermFreqIterator).mjava","pathOld":"modules/suggest/src/java/org/apache/lucene/search/suggest/UnsortedTermFreqIteratorWrapper#UnsortedTermFreqIteratorWrapper(TermFreqIterator).mjava","sourceNew":"  public UnsortedTermFreqIteratorWrapper(TermFreqIterator source) throws IOException {\n    super(source);\n    ords = new int[entries.size()];\n    Random random = new Random();\n    for (int i = 0; i < ords.length; i++) {\n      ords[i] = i;\n    }\n    for (int i = 0; i < ords.length; i++) {\n      int randomPosition = random.nextInt(ords.length);\n      int temp = ords[i];\n      ords[i] = ords[randomPosition];\n      ords[randomPosition] = temp;\n    }\n  }\n\n","sourceOld":"  public UnsortedTermFreqIteratorWrapper(TermFreqIterator source) throws IOException {\n    super(source);\n    ords = new int[entries.size()];\n    Random random = new Random();\n    for (int i = 0; i < ords.length; i++) {\n      ords[i] = i;\n    }\n    for (int i = 0; i < ords.length; i++) {\n      int randomPosition = random.nextInt(ords.length);\n      int temp = ords[i];\n      ords[i] = ords[randomPosition];\n      ords[randomPosition] = temp;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1cc849e9f232bea7495964477fb7bfd25aeb7173","date":1348236542,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/suggest/src/java/org/apache/lucene/search/suggest/UnsortedTermFreqIteratorWrapper#UnsortedTermFreqIteratorWrapper(TermFreqIterator).mjava","pathOld":"lucene/suggest/src/java/org/apache/lucene/search/suggest/UnsortedTermFreqIteratorWrapper#UnsortedTermFreqIteratorWrapper(TermFreqIterator).mjava","sourceNew":"  /** \n   * Creates a new iterator, wrapping the specified iterator and\n   * returning elements in a random order.\n   */\n  public UnsortedTermFreqIteratorWrapper(TermFreqIterator source) throws IOException {\n    super(source);\n    ords = new int[entries.size()];\n    Random random = new Random();\n    for (int i = 0; i < ords.length; i++) {\n      ords[i] = i;\n    }\n    for (int i = 0; i < ords.length; i++) {\n      int randomPosition = random.nextInt(ords.length);\n      int temp = ords[i];\n      ords[i] = ords[randomPosition];\n      ords[randomPosition] = temp;\n    }\n  }\n\n","sourceOld":"  public UnsortedTermFreqIteratorWrapper(TermFreqIterator source) throws IOException {\n    super(source);\n    ords = new int[entries.size()];\n    Random random = new Random();\n    for (int i = 0; i < ords.length; i++) {\n      ords[i] = i;\n    }\n    for (int i = 0; i < ords.length; i++) {\n      int randomPosition = random.nextInt(ords.length);\n      int temp = ords[i];\n      ords[i] = ords[randomPosition];\n      ords[randomPosition] = temp;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ada2f7352a7f964fe49bccd13227c4ec38563d39","date":1381659982,"type":5,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/suggest/src/java/org/apache/lucene/search/suggest/UnsortedTermFreqPayloadIteratorWrapper#UnsortedTermFreqPayloadIteratorWrapper(TermFreqPayloadIterator).mjava","pathOld":"lucene/suggest/src/java/org/apache/lucene/search/suggest/UnsortedTermFreqIteratorWrapper#UnsortedTermFreqIteratorWrapper(TermFreqIterator).mjava","sourceNew":"  /** \n   * Creates a new iterator, wrapping the specified iterator and\n   * returning elements in a random order.\n   */\n  public UnsortedTermFreqPayloadIteratorWrapper(TermFreqPayloadIterator source) throws IOException {\n    super(source);\n    ords = new int[entries.size()];\n    Random random = new Random();\n    for (int i = 0; i < ords.length; i++) {\n      ords[i] = i;\n    }\n    for (int i = 0; i < ords.length; i++) {\n      int randomPosition = random.nextInt(ords.length);\n      int temp = ords[i];\n      ords[i] = ords[randomPosition];\n      ords[randomPosition] = temp;\n    }\n  }\n\n","sourceOld":"  /** \n   * Creates a new iterator, wrapping the specified iterator and\n   * returning elements in a random order.\n   */\n  public UnsortedTermFreqIteratorWrapper(TermFreqIterator source) throws IOException {\n    super(source);\n    ords = new int[entries.size()];\n    Random random = new Random();\n    for (int i = 0; i < ords.length; i++) {\n      ords[i] = i;\n    }\n    for (int i = 0; i < ords.length; i++) {\n      int randomPosition = random.nextInt(ords.length);\n      int temp = ords[i];\n      ords[i] = ords[randomPosition];\n      ords[randomPosition] = temp;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"1cc849e9f232bea7495964477fb7bfd25aeb7173":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["ada2f7352a7f964fe49bccd13227c4ec38563d39"],"ada2f7352a7f964fe49bccd13227c4ec38563d39":["1cc849e9f232bea7495964477fb7bfd25aeb7173"]},"commit2Childs":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["1cc849e9f232bea7495964477fb7bfd25aeb7173"],"1cc849e9f232bea7495964477fb7bfd25aeb7173":["ada2f7352a7f964fe49bccd13227c4ec38563d39"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"ada2f7352a7f964fe49bccd13227c4ec38563d39":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}