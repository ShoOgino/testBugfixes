{"path":"lucene/core/src/java/org/apache/lucene/search/spans/SpanOrQuery#addClause(SpanQuery).mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/spans/SpanOrQuery#addClause(SpanQuery).mjava","pathOld":"lucene/src/java/org/apache/lucene/search/spans/SpanOrQuery#addClause(SpanQuery).mjava","sourceNew":"  /** Adds a clause to this query */\n  public final void addClause(SpanQuery clause) {\n    if (field == null) {\n      field = clause.getField();\n    } else if (!clause.getField().equals(field)) {\n      throw new IllegalArgumentException(\"Clauses must have same field.\");\n    }\n    this.clauses.add(clause);\n  }\n\n","sourceOld":"  /** Adds a clause to this query */\n  public final void addClause(SpanQuery clause) {\n    if (field == null) {\n      field = clause.getField();\n    } else if (!clause.getField().equals(field)) {\n      throw new IllegalArgumentException(\"Clauses must have same field.\");\n    }\n    this.clauses.add(clause);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"15b2c0b1d50ad54ea367036e4bd9376be42c2805","date":1392752466,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/spans/SpanOrQuery#addClause(SpanQuery).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/spans/SpanOrQuery#addClause(SpanQuery).mjava","sourceNew":"  /** Adds a clause to this query */\n  public final void addClause(SpanQuery clause) {\n    if (field == null) {\n      field = clause.getField();\n    } else if (clause.getField() != null && !clause.getField().equals(field)) {\n      throw new IllegalArgumentException(\"Clauses must have same field.\");\n    }\n    this.clauses.add(clause);\n  }\n\n","sourceOld":"  /** Adds a clause to this query */\n  public final void addClause(SpanQuery clause) {\n    if (field == null) {\n      field = clause.getField();\n    } else if (!clause.getField().equals(field)) {\n      throw new IllegalArgumentException(\"Clauses must have same field.\");\n    }\n    this.clauses.add(clause);\n  }\n\n","bugFix":["744486748bc5bee772100e49230e5bca39bac99a"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"39d5fdda869d17bc5d83aca861ac9ae5a9ac18d1","date":1444919230,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/spans/SpanOrQuery#addClause(SpanQuery).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/spans/SpanOrQuery#addClause(SpanQuery).mjava","sourceNew":"  /** Adds a clause to this query */\n  private final void addClause(SpanQuery clause) {\n    if (field == null) {\n      field = clause.getField();\n    } else if (clause.getField() != null && !clause.getField().equals(field)) {\n      throw new IllegalArgumentException(\"Clauses must have same field.\");\n    }\n    this.clauses.add(clause);\n  }\n\n","sourceOld":"  /** Adds a clause to this query */\n  public final void addClause(SpanQuery clause) {\n    if (field == null) {\n      field = clause.getField();\n    } else if (clause.getField() != null && !clause.getField().equals(field)) {\n      throw new IllegalArgumentException(\"Clauses must have same field.\");\n    }\n    this.clauses.add(clause);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"39d5fdda869d17bc5d83aca861ac9ae5a9ac18d1":["15b2c0b1d50ad54ea367036e4bd9376be42c2805"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"15b2c0b1d50ad54ea367036e4bd9376be42c2805":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["39d5fdda869d17bc5d83aca861ac9ae5a9ac18d1"]},"commit2Childs":{"39d5fdda869d17bc5d83aca861ac9ae5a9ac18d1":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["15b2c0b1d50ad54ea367036e4bd9376be42c2805"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"15b2c0b1d50ad54ea367036e4bd9376be42c2805":["39d5fdda869d17bc5d83aca861ac9ae5a9ac18d1"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}