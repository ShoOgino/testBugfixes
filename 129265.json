{"path":"solr/core/src/test/org/apache/solr/handler/tagger/TaggingAttributeTest#testTaggingAttribute().mjava","commits":[{"id":"e091f281a6e026f8bb17aaf194efd0bbd3a7f549","date":1528221895,"type":0,"author":"David Smiley","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/tagger/TaggingAttributeTest#testTaggingAttribute().mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Whole matching, no sub-tags. Links only words with &gt; 3 letters.\n   * Because of that \"San\" is not used to start tags\n   *\n   */\n  @Test\n  public void testTaggingAttribute() throws Exception {\n    baseParams.set(\"field\", \"name_tagAttribute\"); // has WordLengthTaggingFilter using the TaggingAttribute\n    // this test is based on the longest dominant right test, so we use the\n    // the same TagClusterReducer setting\n    baseParams.set(\"overlaps\", \"LONGEST_DOMINANT_RIGHT\");\n\n    buildNames(\"in\", \"San\", \"in San\", \"Francisco\", \"San Francisco\",\n        \"San Francisco State College\", \"College of California\",\n        \"Clayton\", \"Clayton North\", \"North Carolina\");\n\n    assertTags(\"He lived in San Francisco.\",\n        //\"in\", \"San Francisco\"); //whis would be expected without taggable\n        \"Francisco\");// this are the expected results with taggable\n\n    assertTags(\"He enrolled in San Francisco State College of California\",\n        //\"in\", \"San Francisco State College\"); //without taggable enabled\n        \"Francisco\", \"College of California\");// With taggable\n    //NOTE this also tests that started tags are advanced for non-taggable\n    //     tokens, as otherwise 'College of California' would not be\n    //     suggested.\n\n    assertTags(\"He lived in Clayton North Carolina\",\n        //\"in\", \"Clayton\", \"North Carolina\");\n        \"Clayton\", \"North Carolina\");\n\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f592209545c71895260367152601e9200399776d","date":1528238935,"type":0,"author":"Michael Braun","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/handler/tagger/TaggingAttributeTest#testTaggingAttribute().mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Whole matching, no sub-tags. Links only words with &gt; 3 letters.\n   * Because of that \"San\" is not used to start tags\n   *\n   */\n  @Test\n  public void testTaggingAttribute() throws Exception {\n    baseParams.set(\"field\", \"name_tagAttribute\"); // has WordLengthTaggingFilter using the TaggingAttribute\n    // this test is based on the longest dominant right test, so we use the\n    // the same TagClusterReducer setting\n    baseParams.set(\"overlaps\", \"LONGEST_DOMINANT_RIGHT\");\n\n    buildNames(\"in\", \"San\", \"in San\", \"Francisco\", \"San Francisco\",\n        \"San Francisco State College\", \"College of California\",\n        \"Clayton\", \"Clayton North\", \"North Carolina\");\n\n    assertTags(\"He lived in San Francisco.\",\n        //\"in\", \"San Francisco\"); //whis would be expected without taggable\n        \"Francisco\");// this are the expected results with taggable\n\n    assertTags(\"He enrolled in San Francisco State College of California\",\n        //\"in\", \"San Francisco State College\"); //without taggable enabled\n        \"Francisco\", \"College of California\");// With taggable\n    //NOTE this also tests that started tags are advanced for non-taggable\n    //     tokens, as otherwise 'College of California' would not be\n    //     suggested.\n\n    assertTags(\"He lived in Clayton North Carolina\",\n        //\"in\", \"Clayton\", \"North Carolina\");\n        \"Clayton\", \"North Carolina\");\n\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b70042a8a492f7054d480ccdd2be9796510d4327","date":1528386658,"type":0,"author":"Alessandro Benedetti","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/handler/tagger/TaggingAttributeTest#testTaggingAttribute().mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Whole matching, no sub-tags. Links only words with &gt; 3 letters.\n   * Because of that \"San\" is not used to start tags\n   *\n   */\n  @Test\n  public void testTaggingAttribute() throws Exception {\n    baseParams.set(\"field\", \"name_tagAttribute\"); // has WordLengthTaggingFilter using the TaggingAttribute\n    // this test is based on the longest dominant right test, so we use the\n    // the same TagClusterReducer setting\n    baseParams.set(\"overlaps\", \"LONGEST_DOMINANT_RIGHT\");\n\n    buildNames(\"in\", \"San\", \"in San\", \"Francisco\", \"San Francisco\",\n        \"San Francisco State College\", \"College of California\",\n        \"Clayton\", \"Clayton North\", \"North Carolina\");\n\n    assertTags(\"He lived in San Francisco.\",\n        //\"in\", \"San Francisco\"); //whis would be expected without taggable\n        \"Francisco\");// this are the expected results with taggable\n\n    assertTags(\"He enrolled in San Francisco State College of California\",\n        //\"in\", \"San Francisco State College\"); //without taggable enabled\n        \"Francisco\", \"College of California\");// With taggable\n    //NOTE this also tests that started tags are advanced for non-taggable\n    //     tokens, as otherwise 'College of California' would not be\n    //     suggested.\n\n    assertTags(\"He lived in Clayton North Carolina\",\n        //\"in\", \"Clayton\", \"North Carolina\");\n        \"Clayton\", \"North Carolina\");\n\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"b70042a8a492f7054d480ccdd2be9796510d4327":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","e091f281a6e026f8bb17aaf194efd0bbd3a7f549"],"f592209545c71895260367152601e9200399776d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","e091f281a6e026f8bb17aaf194efd0bbd3a7f549"],"e091f281a6e026f8bb17aaf194efd0bbd3a7f549":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["e091f281a6e026f8bb17aaf194efd0bbd3a7f549"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b70042a8a492f7054d480ccdd2be9796510d4327","f592209545c71895260367152601e9200399776d","e091f281a6e026f8bb17aaf194efd0bbd3a7f549"],"b70042a8a492f7054d480ccdd2be9796510d4327":[],"f592209545c71895260367152601e9200399776d":[],"e091f281a6e026f8bb17aaf194efd0bbd3a7f549":["b70042a8a492f7054d480ccdd2be9796510d4327","f592209545c71895260367152601e9200399776d","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["b70042a8a492f7054d480ccdd2be9796510d4327","f592209545c71895260367152601e9200399776d","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}