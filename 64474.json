{"path":"lucene/core/src/test/org/apache/lucene/codecs/lucene60/TestLucene60PointsFormat#TestLucene60PointsFormat().mjava","commits":[{"id":"4522ffca5a1f420c6a02198c9332d7c596a30ca5","date":1457270822,"type":1,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/codecs/lucene60/TestLucene60PointsFormat#TestLucene60PointsFormat().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/codecs/lucene60/TestLucene60PointFormat#TestLucene60PointFormat().mjava","sourceNew":"  public TestLucene60PointsFormat() {\n    // standard issue\n    Codec defaultCodec = TestUtil.getDefaultCodec();\n    if (random().nextBoolean()) {\n      // randomize parameters\n      int maxPointsInLeafNode = TestUtil.nextInt(random(), 50, 500);\n      double maxMBSortInHeap = 3.0 + (3*random().nextDouble());\n      if (VERBOSE) {\n        System.out.println(\"TEST: using Lucene60PointsFormat with maxPointsInLeafNode=\" + maxPointsInLeafNode + \" and maxMBSortInHeap=\" + maxMBSortInHeap);\n      }\n\n      // sneaky impersonation!\n      codec = new FilterCodec(defaultCodec.getName(), defaultCodec) {\n        @Override\n        public PointsFormat pointsFormat() {\n          return new PointsFormat() {\n            @Override\n            public PointsWriter fieldsWriter(SegmentWriteState writeState) throws IOException {\n              return new Lucene60PointsWriter(writeState, maxPointsInLeafNode, maxMBSortInHeap);\n            }\n\n            @Override\n            public PointsReader fieldsReader(SegmentReadState readState) throws IOException {\n              return new Lucene60PointsReader(readState);\n            }\n          };\n        }\n      };\n    } else {\n      // standard issue\n      codec = defaultCodec;\n    }\n  }\n\n","sourceOld":"  public TestLucene60PointFormat() {\n    // standard issue\n    Codec defaultCodec = TestUtil.getDefaultCodec();\n    if (random().nextBoolean()) {\n      // randomize parameters\n      int maxPointsInLeafNode = TestUtil.nextInt(random(), 50, 500);\n      double maxMBSortInHeap = 3.0 + (3*random().nextDouble());\n      if (VERBOSE) {\n        System.out.println(\"TEST: using Lucene60PointFormat with maxPointsInLeafNode=\" + maxPointsInLeafNode + \" and maxMBSortInHeap=\" + maxMBSortInHeap);\n      }\n\n      // sneaky impersonation!\n      codec = new FilterCodec(defaultCodec.getName(), defaultCodec) {\n        @Override\n        public PointFormat pointFormat() {\n          return new PointFormat() {\n            @Override\n            public PointWriter fieldsWriter(SegmentWriteState writeState) throws IOException {\n              return new Lucene60PointWriter(writeState, maxPointsInLeafNode, maxMBSortInHeap);\n            }\n\n            @Override\n            public PointReader fieldsReader(SegmentReadState readState) throws IOException {\n              return new Lucene60PointReader(readState);\n            }\n          };\n        }\n      };\n    } else {\n      // standard issue\n      codec = defaultCodec;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"10005c6013abbd1102f2463cf95604d4c8774c99","date":1469460814,"type":3,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/codecs/lucene60/TestLucene60PointsFormat#TestLucene60PointsFormat().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/codecs/lucene60/TestLucene60PointsFormat#TestLucene60PointsFormat().mjava","sourceNew":"  public TestLucene60PointsFormat() {\n    // standard issue\n    Codec defaultCodec = TestUtil.getDefaultCodec();\n    if (random().nextBoolean()) {\n      // randomize parameters\n      int maxPointsInLeafNode = TestUtil.nextInt(random(), 50, 500);\n      if (VERBOSE) {\n        System.out.println(\"TEST: using Lucene60PointsFormat with maxPointsInLeafNode=\" + maxPointsInLeafNode);\n      }\n\n      // sneaky impersonation!\n      codec = new FilterCodec(defaultCodec.getName(), defaultCodec) {\n        @Override\n        public PointsFormat pointsFormat() {\n          return new PointsFormat() {\n            @Override\n            public PointsWriter fieldsWriter(SegmentWriteState writeState) throws IOException {\n              return new Lucene60PointsWriter(writeState, maxPointsInLeafNode);\n            }\n\n            @Override\n            public PointsReader fieldsReader(SegmentReadState readState) throws IOException {\n              return new Lucene60PointsReader(readState);\n            }\n          };\n        }\n      };\n    } else {\n      // standard issue\n      codec = defaultCodec;\n    }\n  }\n\n","sourceOld":"  public TestLucene60PointsFormat() {\n    // standard issue\n    Codec defaultCodec = TestUtil.getDefaultCodec();\n    if (random().nextBoolean()) {\n      // randomize parameters\n      int maxPointsInLeafNode = TestUtil.nextInt(random(), 50, 500);\n      double maxMBSortInHeap = 3.0 + (3*random().nextDouble());\n      if (VERBOSE) {\n        System.out.println(\"TEST: using Lucene60PointsFormat with maxPointsInLeafNode=\" + maxPointsInLeafNode + \" and maxMBSortInHeap=\" + maxMBSortInHeap);\n      }\n\n      // sneaky impersonation!\n      codec = new FilterCodec(defaultCodec.getName(), defaultCodec) {\n        @Override\n        public PointsFormat pointsFormat() {\n          return new PointsFormat() {\n            @Override\n            public PointsWriter fieldsWriter(SegmentWriteState writeState) throws IOException {\n              return new Lucene60PointsWriter(writeState, maxPointsInLeafNode, maxMBSortInHeap);\n            }\n\n            @Override\n            public PointsReader fieldsReader(SegmentReadState readState) throws IOException {\n              return new Lucene60PointsReader(readState);\n            }\n          };\n        }\n      };\n    } else {\n      // standard issue\n      codec = defaultCodec;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d08973aa47f2cf98a588293a53af4e948952ccfb","date":1469518724,"type":3,"author":"Noble Paul","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/codecs/lucene60/TestLucene60PointsFormat#TestLucene60PointsFormat().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/codecs/lucene60/TestLucene60PointsFormat#TestLucene60PointsFormat().mjava","sourceNew":"  public TestLucene60PointsFormat() {\n    // standard issue\n    Codec defaultCodec = TestUtil.getDefaultCodec();\n    if (random().nextBoolean()) {\n      // randomize parameters\n      int maxPointsInLeafNode = TestUtil.nextInt(random(), 50, 500);\n      if (VERBOSE) {\n        System.out.println(\"TEST: using Lucene60PointsFormat with maxPointsInLeafNode=\" + maxPointsInLeafNode);\n      }\n\n      // sneaky impersonation!\n      codec = new FilterCodec(defaultCodec.getName(), defaultCodec) {\n        @Override\n        public PointsFormat pointsFormat() {\n          return new PointsFormat() {\n            @Override\n            public PointsWriter fieldsWriter(SegmentWriteState writeState) throws IOException {\n              return new Lucene60PointsWriter(writeState, maxPointsInLeafNode);\n            }\n\n            @Override\n            public PointsReader fieldsReader(SegmentReadState readState) throws IOException {\n              return new Lucene60PointsReader(readState);\n            }\n          };\n        }\n      };\n    } else {\n      // standard issue\n      codec = defaultCodec;\n    }\n  }\n\n","sourceOld":"  public TestLucene60PointsFormat() {\n    // standard issue\n    Codec defaultCodec = TestUtil.getDefaultCodec();\n    if (random().nextBoolean()) {\n      // randomize parameters\n      int maxPointsInLeafNode = TestUtil.nextInt(random(), 50, 500);\n      double maxMBSortInHeap = 3.0 + (3*random().nextDouble());\n      if (VERBOSE) {\n        System.out.println(\"TEST: using Lucene60PointsFormat with maxPointsInLeafNode=\" + maxPointsInLeafNode + \" and maxMBSortInHeap=\" + maxMBSortInHeap);\n      }\n\n      // sneaky impersonation!\n      codec = new FilterCodec(defaultCodec.getName(), defaultCodec) {\n        @Override\n        public PointsFormat pointsFormat() {\n          return new PointsFormat() {\n            @Override\n            public PointsWriter fieldsWriter(SegmentWriteState writeState) throws IOException {\n              return new Lucene60PointsWriter(writeState, maxPointsInLeafNode, maxMBSortInHeap);\n            }\n\n            @Override\n            public PointsReader fieldsReader(SegmentReadState readState) throws IOException {\n              return new Lucene60PointsReader(readState);\n            }\n          };\n        }\n      };\n    } else {\n      // standard issue\n      codec = defaultCodec;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b0567940defa1ea6eb8a039d9d36e3682063f8a4","date":1469815320,"type":3,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/codecs/lucene60/TestLucene60PointsFormat#TestLucene60PointsFormat().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/codecs/lucene60/TestLucene60PointsFormat#TestLucene60PointsFormat().mjava","sourceNew":"  public TestLucene60PointsFormat() {\n    // standard issue\n    Codec defaultCodec = TestUtil.getDefaultCodec();\n    if (random().nextBoolean()) {\n      // randomize parameters\n      int maxPointsInLeafNode = TestUtil.nextInt(random(), 50, 500);\n      double maxMBSortInHeap = 3.0 + (3*random().nextDouble());\n      if (VERBOSE) {\n        System.out.println(\"TEST: using Lucene60PointsFormat with maxPointsInLeafNode=\" + maxPointsInLeafNode + \" and maxMBSortInHeap=\" + maxMBSortInHeap);\n      }\n\n      // sneaky impersonation!\n      codec = new FilterCodec(defaultCodec.getName(), defaultCodec) {\n        @Override\n        public PointsFormat pointsFormat() {\n          return new PointsFormat() {\n            @Override\n            public PointsWriter fieldsWriter(SegmentWriteState writeState) throws IOException {\n              return new Lucene60PointsWriter(writeState, maxPointsInLeafNode, maxMBSortInHeap);\n            }\n\n            @Override\n            public PointsReader fieldsReader(SegmentReadState readState) throws IOException {\n              return new Lucene60PointsReader(readState);\n            }\n          };\n        }\n      };\n    } else {\n      // standard issue\n      codec = defaultCodec;\n    }\n  }\n\n","sourceOld":"  public TestLucene60PointsFormat() {\n    // standard issue\n    Codec defaultCodec = TestUtil.getDefaultCodec();\n    if (random().nextBoolean()) {\n      // randomize parameters\n      int maxPointsInLeafNode = TestUtil.nextInt(random(), 50, 500);\n      if (VERBOSE) {\n        System.out.println(\"TEST: using Lucene60PointsFormat with maxPointsInLeafNode=\" + maxPointsInLeafNode);\n      }\n\n      // sneaky impersonation!\n      codec = new FilterCodec(defaultCodec.getName(), defaultCodec) {\n        @Override\n        public PointsFormat pointsFormat() {\n          return new PointsFormat() {\n            @Override\n            public PointsWriter fieldsWriter(SegmentWriteState writeState) throws IOException {\n              return new Lucene60PointsWriter(writeState, maxPointsInLeafNode);\n            }\n\n            @Override\n            public PointsReader fieldsReader(SegmentReadState readState) throws IOException {\n              return new Lucene60PointsReader(readState);\n            }\n          };\n        }\n      };\n    } else {\n      // standard issue\n      codec = defaultCodec;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3b013574eedcdbac35dc7e35b0ee616ffc38895d","date":1470897818,"type":3,"author":"Noble Paul","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/codecs/lucene60/TestLucene60PointsFormat#TestLucene60PointsFormat().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/codecs/lucene60/TestLucene60PointsFormat#TestLucene60PointsFormat().mjava","sourceNew":"  public TestLucene60PointsFormat() {\n    // standard issue\n    Codec defaultCodec = TestUtil.getDefaultCodec();\n    if (random().nextBoolean()) {\n      // randomize parameters\n      int maxPointsInLeafNode = TestUtil.nextInt(random(), 50, 500);\n      double maxMBSortInHeap = 3.0 + (3*random().nextDouble());\n      if (VERBOSE) {\n        System.out.println(\"TEST: using Lucene60PointsFormat with maxPointsInLeafNode=\" + maxPointsInLeafNode + \" and maxMBSortInHeap=\" + maxMBSortInHeap);\n      }\n\n      // sneaky impersonation!\n      codec = new FilterCodec(defaultCodec.getName(), defaultCodec) {\n        @Override\n        public PointsFormat pointsFormat() {\n          return new PointsFormat() {\n            @Override\n            public PointsWriter fieldsWriter(SegmentWriteState writeState) throws IOException {\n              return new Lucene60PointsWriter(writeState, maxPointsInLeafNode, maxMBSortInHeap);\n            }\n\n            @Override\n            public PointsReader fieldsReader(SegmentReadState readState) throws IOException {\n              return new Lucene60PointsReader(readState);\n            }\n          };\n        }\n      };\n    } else {\n      // standard issue\n      codec = defaultCodec;\n    }\n  }\n\n","sourceOld":"  public TestLucene60PointsFormat() {\n    // standard issue\n    Codec defaultCodec = TestUtil.getDefaultCodec();\n    if (random().nextBoolean()) {\n      // randomize parameters\n      int maxPointsInLeafNode = TestUtil.nextInt(random(), 50, 500);\n      if (VERBOSE) {\n        System.out.println(\"TEST: using Lucene60PointsFormat with maxPointsInLeafNode=\" + maxPointsInLeafNode);\n      }\n\n      // sneaky impersonation!\n      codec = new FilterCodec(defaultCodec.getName(), defaultCodec) {\n        @Override\n        public PointsFormat pointsFormat() {\n          return new PointsFormat() {\n            @Override\n            public PointsWriter fieldsWriter(SegmentWriteState writeState) throws IOException {\n              return new Lucene60PointsWriter(writeState, maxPointsInLeafNode);\n            }\n\n            @Override\n            public PointsReader fieldsReader(SegmentReadState readState) throws IOException {\n              return new Lucene60PointsReader(readState);\n            }\n          };\n        }\n      };\n    } else {\n      // standard issue\n      codec = defaultCodec;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"069d686c3ab4d51d0d217cff30aad53b2b70ece0","date":1484748426,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/codecs/lucene60/TestLucene60PointsFormat#TestLucene60PointsFormat().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/codecs/lucene60/TestLucene60PointsFormat#TestLucene60PointsFormat().mjava","sourceNew":"  public TestLucene60PointsFormat() {\n    // standard issue\n    Codec defaultCodec = TestUtil.getDefaultCodec();\n    if (random().nextBoolean()) {\n      // randomize parameters\n      maxPointsInLeafNode = TestUtil.nextInt(random(), 50, 500);\n      double maxMBSortInHeap = 3.0 + (3*random().nextDouble());\n      if (VERBOSE) {\n        System.out.println(\"TEST: using Lucene60PointsFormat with maxPointsInLeafNode=\" + maxPointsInLeafNode + \" and maxMBSortInHeap=\" + maxMBSortInHeap);\n      }\n\n      // sneaky impersonation!\n      codec = new FilterCodec(defaultCodec.getName(), defaultCodec) {\n        @Override\n        public PointsFormat pointsFormat() {\n          return new PointsFormat() {\n            @Override\n            public PointsWriter fieldsWriter(SegmentWriteState writeState) throws IOException {\n              return new Lucene60PointsWriter(writeState, maxPointsInLeafNode, maxMBSortInHeap);\n            }\n\n            @Override\n            public PointsReader fieldsReader(SegmentReadState readState) throws IOException {\n              return new Lucene60PointsReader(readState);\n            }\n          };\n        }\n      };\n    } else {\n      // standard issue\n      codec = defaultCodec;\n      maxPointsInLeafNode = BKDWriter.DEFAULT_MAX_POINTS_IN_LEAF_NODE;\n    }\n  }\n\n","sourceOld":"  public TestLucene60PointsFormat() {\n    // standard issue\n    Codec defaultCodec = TestUtil.getDefaultCodec();\n    if (random().nextBoolean()) {\n      // randomize parameters\n      int maxPointsInLeafNode = TestUtil.nextInt(random(), 50, 500);\n      double maxMBSortInHeap = 3.0 + (3*random().nextDouble());\n      if (VERBOSE) {\n        System.out.println(\"TEST: using Lucene60PointsFormat with maxPointsInLeafNode=\" + maxPointsInLeafNode + \" and maxMBSortInHeap=\" + maxMBSortInHeap);\n      }\n\n      // sneaky impersonation!\n      codec = new FilterCodec(defaultCodec.getName(), defaultCodec) {\n        @Override\n        public PointsFormat pointsFormat() {\n          return new PointsFormat() {\n            @Override\n            public PointsWriter fieldsWriter(SegmentWriteState writeState) throws IOException {\n              return new Lucene60PointsWriter(writeState, maxPointsInLeafNode, maxMBSortInHeap);\n            }\n\n            @Override\n            public PointsReader fieldsReader(SegmentReadState readState) throws IOException {\n              return new Lucene60PointsReader(readState);\n            }\n          };\n        }\n      };\n    } else {\n      // standard issue\n      codec = defaultCodec;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"302d34f2c66e8d489ee13078305c330cbf67b226","date":1484754357,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/codecs/lucene60/TestLucene60PointsFormat#TestLucene60PointsFormat().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/codecs/lucene60/TestLucene60PointsFormat#TestLucene60PointsFormat().mjava","sourceNew":"  public TestLucene60PointsFormat() {\n    // standard issue\n    Codec defaultCodec = TestUtil.getDefaultCodec();\n    if (random().nextBoolean()) {\n      // randomize parameters\n      maxPointsInLeafNode = TestUtil.nextInt(random(), 50, 500);\n      double maxMBSortInHeap = 3.0 + (3*random().nextDouble());\n      if (VERBOSE) {\n        System.out.println(\"TEST: using Lucene60PointsFormat with maxPointsInLeafNode=\" + maxPointsInLeafNode + \" and maxMBSortInHeap=\" + maxMBSortInHeap);\n      }\n\n      // sneaky impersonation!\n      codec = new FilterCodec(defaultCodec.getName(), defaultCodec) {\n        @Override\n        public PointsFormat pointsFormat() {\n          return new PointsFormat() {\n            @Override\n            public PointsWriter fieldsWriter(SegmentWriteState writeState) throws IOException {\n              return new Lucene60PointsWriter(writeState, maxPointsInLeafNode, maxMBSortInHeap);\n            }\n\n            @Override\n            public PointsReader fieldsReader(SegmentReadState readState) throws IOException {\n              return new Lucene60PointsReader(readState);\n            }\n          };\n        }\n      };\n    } else {\n      // standard issue\n      codec = defaultCodec;\n      maxPointsInLeafNode = BKDWriter.DEFAULT_MAX_POINTS_IN_LEAF_NODE;\n    }\n  }\n\n","sourceOld":"  public TestLucene60PointsFormat() {\n    // standard issue\n    Codec defaultCodec = TestUtil.getDefaultCodec();\n    if (random().nextBoolean()) {\n      // randomize parameters\n      int maxPointsInLeafNode = TestUtil.nextInt(random(), 50, 500);\n      double maxMBSortInHeap = 3.0 + (3*random().nextDouble());\n      if (VERBOSE) {\n        System.out.println(\"TEST: using Lucene60PointsFormat with maxPointsInLeafNode=\" + maxPointsInLeafNode + \" and maxMBSortInHeap=\" + maxMBSortInHeap);\n      }\n\n      // sneaky impersonation!\n      codec = new FilterCodec(defaultCodec.getName(), defaultCodec) {\n        @Override\n        public PointsFormat pointsFormat() {\n          return new PointsFormat() {\n            @Override\n            public PointsWriter fieldsWriter(SegmentWriteState writeState) throws IOException {\n              return new Lucene60PointsWriter(writeState, maxPointsInLeafNode, maxMBSortInHeap);\n            }\n\n            @Override\n            public PointsReader fieldsReader(SegmentReadState readState) throws IOException {\n              return new Lucene60PointsReader(readState);\n            }\n          };\n        }\n      };\n    } else {\n      // standard issue\n      codec = defaultCodec;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"78e689a3b60e84c75dc6dd7b181a71fc19ef8482","date":1591689554,"type":5,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/codecs/lucene86/TestLucene86PointsFormat#TestLucene86PointsFormat().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/codecs/lucene60/TestLucene60PointsFormat#TestLucene60PointsFormat().mjava","sourceNew":"  public TestLucene86PointsFormat() {\n    // standard issue\n    Codec defaultCodec = new Lucene86Codec();\n    if (random().nextBoolean()) {\n      // randomize parameters\n      maxPointsInLeafNode = TestUtil.nextInt(random(), 50, 500);\n      double maxMBSortInHeap = 3.0 + (3*random().nextDouble());\n      if (VERBOSE) {\n        System.out.println(\"TEST: using Lucene60PointsFormat with maxPointsInLeafNode=\" + maxPointsInLeafNode + \" and maxMBSortInHeap=\" + maxMBSortInHeap);\n      }\n\n      // sneaky impersonation!\n      codec = new FilterCodec(defaultCodec.getName(), defaultCodec) {\n        @Override\n        public PointsFormat pointsFormat() {\n          return new PointsFormat() {\n            @Override\n            public PointsWriter fieldsWriter(SegmentWriteState writeState) throws IOException {\n              return new Lucene86PointsWriter(writeState, maxPointsInLeafNode, maxMBSortInHeap);\n            }\n\n            @Override\n            public PointsReader fieldsReader(SegmentReadState readState) throws IOException {\n              return new Lucene86PointsReader(readState);\n            }\n          };\n        }\n      };\n    } else {\n      // standard issue\n      codec = defaultCodec;\n      maxPointsInLeafNode = BKDWriter.DEFAULT_MAX_POINTS_IN_LEAF_NODE;\n    }\n  }\n\n","sourceOld":"  public TestLucene60PointsFormat() {\n    // standard issue\n    Codec defaultCodec = TestUtil.getDefaultCodec();\n    if (random().nextBoolean()) {\n      // randomize parameters\n      maxPointsInLeafNode = TestUtil.nextInt(random(), 50, 500);\n      double maxMBSortInHeap = 3.0 + (3*random().nextDouble());\n      if (VERBOSE) {\n        System.out.println(\"TEST: using Lucene60PointsFormat with maxPointsInLeafNode=\" + maxPointsInLeafNode + \" and maxMBSortInHeap=\" + maxMBSortInHeap);\n      }\n\n      // sneaky impersonation!\n      codec = new FilterCodec(defaultCodec.getName(), defaultCodec) {\n        @Override\n        public PointsFormat pointsFormat() {\n          return new PointsFormat() {\n            @Override\n            public PointsWriter fieldsWriter(SegmentWriteState writeState) throws IOException {\n              return new Lucene60PointsWriter(writeState, maxPointsInLeafNode, maxMBSortInHeap);\n            }\n\n            @Override\n            public PointsReader fieldsReader(SegmentReadState readState) throws IOException {\n              return new Lucene60PointsReader(readState);\n            }\n          };\n        }\n      };\n    } else {\n      // standard issue\n      codec = defaultCodec;\n      maxPointsInLeafNode = BKDWriter.DEFAULT_MAX_POINTS_IN_LEAF_NODE;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b0567940defa1ea6eb8a039d9d36e3682063f8a4":["d08973aa47f2cf98a588293a53af4e948952ccfb"],"4522ffca5a1f420c6a02198c9332d7c596a30ca5":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"069d686c3ab4d51d0d217cff30aad53b2b70ece0":["b0567940defa1ea6eb8a039d9d36e3682063f8a4"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"78e689a3b60e84c75dc6dd7b181a71fc19ef8482":["069d686c3ab4d51d0d217cff30aad53b2b70ece0"],"10005c6013abbd1102f2463cf95604d4c8774c99":["4522ffca5a1f420c6a02198c9332d7c596a30ca5"],"d08973aa47f2cf98a588293a53af4e948952ccfb":["4522ffca5a1f420c6a02198c9332d7c596a30ca5","10005c6013abbd1102f2463cf95604d4c8774c99"],"3b013574eedcdbac35dc7e35b0ee616ffc38895d":["d08973aa47f2cf98a588293a53af4e948952ccfb","b0567940defa1ea6eb8a039d9d36e3682063f8a4"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["78e689a3b60e84c75dc6dd7b181a71fc19ef8482"],"302d34f2c66e8d489ee13078305c330cbf67b226":["4522ffca5a1f420c6a02198c9332d7c596a30ca5","069d686c3ab4d51d0d217cff30aad53b2b70ece0"]},"commit2Childs":{"b0567940defa1ea6eb8a039d9d36e3682063f8a4":["069d686c3ab4d51d0d217cff30aad53b2b70ece0","3b013574eedcdbac35dc7e35b0ee616ffc38895d"],"4522ffca5a1f420c6a02198c9332d7c596a30ca5":["10005c6013abbd1102f2463cf95604d4c8774c99","d08973aa47f2cf98a588293a53af4e948952ccfb","302d34f2c66e8d489ee13078305c330cbf67b226"],"069d686c3ab4d51d0d217cff30aad53b2b70ece0":["78e689a3b60e84c75dc6dd7b181a71fc19ef8482","302d34f2c66e8d489ee13078305c330cbf67b226"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["4522ffca5a1f420c6a02198c9332d7c596a30ca5"],"78e689a3b60e84c75dc6dd7b181a71fc19ef8482":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"10005c6013abbd1102f2463cf95604d4c8774c99":["d08973aa47f2cf98a588293a53af4e948952ccfb"],"d08973aa47f2cf98a588293a53af4e948952ccfb":["b0567940defa1ea6eb8a039d9d36e3682063f8a4","3b013574eedcdbac35dc7e35b0ee616ffc38895d"],"3b013574eedcdbac35dc7e35b0ee616ffc38895d":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"302d34f2c66e8d489ee13078305c330cbf67b226":[]},"heads":["3b013574eedcdbac35dc7e35b0ee616ffc38895d","cd5edd1f2b162a5cfa08efd17851a07373a96817","302d34f2c66e8d489ee13078305c330cbf67b226"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}