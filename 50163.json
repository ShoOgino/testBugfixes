{"path":"solr/solrj/src/java/org/apache/solr/client/solrj/impl/BaseHttpClusterStateProvider#getState(String).mjava","commits":[{"id":"0544142c22eb88b6d8b3817f2e1190156aa4f9af","date":1551692505,"type":1,"author":"Cao Manh Dat","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/impl/BaseHttpClusterStateProvider#getState(String).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/impl/HttpClusterStateProvider#getState(String).mjava","sourceNew":"  @Override\n  public ClusterState.CollectionRef getState(String collection) {\n    for (String nodeName: liveNodes) {\n      String baseUrl = Utils.getBaseUrlForNodeName(nodeName, urlScheme);\n      try (SolrClient client = getSolrClient(baseUrl)) {\n        ClusterState cs = fetchClusterState(client, collection, null);\n        return cs.getCollectionRef(collection);\n      } catch (SolrServerException | IOException e) {\n        log.warn(\"Attempt to fetch cluster state from \" +\n            Utils.getBaseUrlForNodeName(nodeName, urlScheme) + \" failed.\", e);\n      } catch (RemoteSolrException e) {\n        if (\"NOT_FOUND\".equals(e.getMetadata(\"CLUSTERSTATUS\"))) {\n          return null;\n        }\n        log.warn(\"Attempt to fetch cluster state from {} failed.\", baseUrl, e);\n      } catch (NotACollectionException e) {\n        // Cluster state for the given collection was not found, could be an alias.\n        // Lets fetch/update our aliases:\n        getAliases(true);\n        return null;\n      }\n    }\n    throw new RuntimeException(\"Tried fetching cluster state using the node names we knew of, i.e. \" + liveNodes +\". However, \"\n        + \"succeeded in obtaining the cluster state from none of them.\"\n        + \"If you think your Solr cluster is up and is accessible,\"\n        + \" you could try re-creating a new CloudSolrClient using working\"\n        + \" solrUrl(s) or zkHost(s).\");\n  }\n\n","sourceOld":"  @Override\n  public CollectionRef getState(String collection) {\n    for (String nodeName: liveNodes) {\n      try (HttpSolrClient client = new HttpSolrClient.Builder().\n          withBaseSolrUrl(Utils.getBaseUrlForNodeName(nodeName, urlScheme)).\n          withHttpClient(httpClient).build()) {\n        ClusterState cs = fetchClusterState(client, collection, null);\n        return cs.getCollectionRef(collection);\n      } catch (SolrServerException | IOException e) {\n        log.warn(\"Attempt to fetch cluster state from \" +\n            Utils.getBaseUrlForNodeName(nodeName, urlScheme) + \" failed.\", e);\n      } catch (RemoteSolrException e) {\n        if (\"NOT_FOUND\".equals(e.getMetadata(\"CLUSTERSTATUS\"))) {\n          return null;\n        }\n        log.warn(\"Attempt to fetch cluster state from \" +\n            Utils.getBaseUrlForNodeName(nodeName, urlScheme) + \" failed.\", e);\n      } catch (NotACollectionException e) {\n        // Cluster state for the given collection was not found, could be an alias.\n        // Lets fetch/update our aliases:\n        getAliases(true);\n        return null;\n      }\n    }\n    throw new RuntimeException(\"Tried fetching cluster state using the node names we knew of, i.e. \" + liveNodes +\". However, \"\n        + \"succeeded in obtaining the cluster state from none of them.\"\n        + \"If you think your Solr cluster is up and is accessible,\"\n        + \" you could try re-creating a new CloudSolrClient using working\"\n        + \" solrUrl(s) or zkHost(s).\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6dc613ed6f75d1988140301ee8de8fdb056fa337","date":1588034757,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/impl/BaseHttpClusterStateProvider#getState(String).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/impl/BaseHttpClusterStateProvider#getState(String).mjava","sourceNew":"  @Override\n  public ClusterState.CollectionRef getState(String collection) {\n    for (String nodeName: liveNodes) {\n      String baseUrl = Utils.getBaseUrlForNodeName(nodeName, urlScheme);\n      try (SolrClient client = getSolrClient(baseUrl)) {\n        ClusterState cs = fetchClusterState(client, collection, null);\n        return cs.getCollectionRef(collection);\n      } catch (SolrServerException | IOException e) {\n        log.warn(\"Attempt to fetch cluster state from {} failed.\"\n            , Utils.getBaseUrlForNodeName(nodeName, urlScheme), e);\n      } catch (RemoteSolrException e) {\n        if (\"NOT_FOUND\".equals(e.getMetadata(\"CLUSTERSTATUS\"))) {\n          return null;\n        }\n        log.warn(\"Attempt to fetch cluster state from {} failed.\", baseUrl, e);\n      } catch (NotACollectionException e) {\n        // Cluster state for the given collection was not found, could be an alias.\n        // Lets fetch/update our aliases:\n        getAliases(true);\n        return null;\n      }\n    }\n    throw new RuntimeException(\"Tried fetching cluster state using the node names we knew of, i.e. \" + liveNodes +\". However, \"\n        + \"succeeded in obtaining the cluster state from none of them.\"\n        + \"If you think your Solr cluster is up and is accessible,\"\n        + \" you could try re-creating a new CloudSolrClient using working\"\n        + \" solrUrl(s) or zkHost(s).\");\n  }\n\n","sourceOld":"  @Override\n  public ClusterState.CollectionRef getState(String collection) {\n    for (String nodeName: liveNodes) {\n      String baseUrl = Utils.getBaseUrlForNodeName(nodeName, urlScheme);\n      try (SolrClient client = getSolrClient(baseUrl)) {\n        ClusterState cs = fetchClusterState(client, collection, null);\n        return cs.getCollectionRef(collection);\n      } catch (SolrServerException | IOException e) {\n        log.warn(\"Attempt to fetch cluster state from \" +\n            Utils.getBaseUrlForNodeName(nodeName, urlScheme) + \" failed.\", e);\n      } catch (RemoteSolrException e) {\n        if (\"NOT_FOUND\".equals(e.getMetadata(\"CLUSTERSTATUS\"))) {\n          return null;\n        }\n        log.warn(\"Attempt to fetch cluster state from {} failed.\", baseUrl, e);\n      } catch (NotACollectionException e) {\n        // Cluster state for the given collection was not found, could be an alias.\n        // Lets fetch/update our aliases:\n        getAliases(true);\n        return null;\n      }\n    }\n    throw new RuntimeException(\"Tried fetching cluster state using the node names we knew of, i.e. \" + liveNodes +\". However, \"\n        + \"succeeded in obtaining the cluster state from none of them.\"\n        + \"If you think your Solr cluster is up and is accessible,\"\n        + \" you could try re-creating a new CloudSolrClient using working\"\n        + \" solrUrl(s) or zkHost(s).\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"6dc613ed6f75d1988140301ee8de8fdb056fa337":["0544142c22eb88b6d8b3817f2e1190156aa4f9af"],"0544142c22eb88b6d8b3817f2e1190156aa4f9af":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["6dc613ed6f75d1988140301ee8de8fdb056fa337"]},"commit2Childs":{"6dc613ed6f75d1988140301ee8de8fdb056fa337":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"0544142c22eb88b6d8b3817f2e1190156aa4f9af":["6dc613ed6f75d1988140301ee8de8fdb056fa337"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["0544142c22eb88b6d8b3817f2e1190156aa4f9af"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}