{"path":"src/java/org/apache/lucene/search/DefaultSimilarity#setDiscountOverlaps(boolean).mjava","commits":[{"id":"d41ab32fc87982eab82a896cee390971b5c08fd2","date":1225735438,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/search/DefaultSimilarity#setDiscountOverlaps(boolean).mjava","pathOld":"/dev/null","sourceNew":"  /** Determines whether overlap tokens (Tokens with\n   *  0 position increment) are ignored when computing\n   *  norm.  By default this is false, meaning overlap\n   *  tokens are counted just like non-overlap tokens.\n   *\n   *  <p><b>WARNING</b>: This API is new and experimental, and may suddenly\n   *  change.</p>\n   *\n   *  @see #computeNorm\n   */\n  public void setDiscountOverlaps(boolean v) {\n    discountOverlaps = v;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1e0ca16f14d94e05bda40e00ecb2a2c0225343c6","date":1264951226,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"src/java/org/apache/lucene/search/DefaultSimilarity#setDiscountOverlaps(boolean).mjava","pathOld":"src/java/org/apache/lucene/search/DefaultSimilarity#setDiscountOverlaps(boolean).mjava","sourceNew":"  /** Determines whether overlap tokens (Tokens with\n   *  0 position increment) are ignored when computing\n   *  norm.  By default this is false, meaning overlap\n   *  tokens are counted just like non-overlap tokens.\n   *\n   *  @lucene.experimental\n   *\n   *  @see #computeNorm\n   */\n  public void setDiscountOverlaps(boolean v) {\n    discountOverlaps = v;\n  }\n\n","sourceOld":"  /** Determines whether overlap tokens (Tokens with\n   *  0 position increment) are ignored when computing\n   *  norm.  By default this is false, meaning overlap\n   *  tokens are counted just like non-overlap tokens.\n   *\n   *  <p><b>WARNING</b>: This API is new and experimental, and may suddenly\n   *  change.</p>\n   *\n   *  @see #computeNorm\n   */\n  public void setDiscountOverlaps(boolean v) {\n    discountOverlaps = v;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b97ad57e24dbeef1f5d61d998f1ac7688901eacc","date":1267348698,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"src/java/org/apache/lucene/search/DefaultSimilarity#setDiscountOverlaps(boolean).mjava","pathOld":"src/java/org/apache/lucene/search/DefaultSimilarity#setDiscountOverlaps(boolean).mjava","sourceNew":"  /** Determines whether overlap tokens (Tokens with\n   *  0 position increment) are ignored when computing\n   *  norm.  By default this is true, meaning overlap\n   *  tokens do not count when computing norms.\n   *\n   *  @lucene.experimental\n   *\n   *  @see #computeNorm\n   */\n  public void setDiscountOverlaps(boolean v) {\n    discountOverlaps = v;\n  }\n\n","sourceOld":"  /** Determines whether overlap tokens (Tokens with\n   *  0 position increment) are ignored when computing\n   *  norm.  By default this is false, meaning overlap\n   *  tokens are counted just like non-overlap tokens.\n   *\n   *  @lucene.experimental\n   *\n   *  @see #computeNorm\n   */\n  public void setDiscountOverlaps(boolean v) {\n    discountOverlaps = v;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/search/DefaultSimilarity#setDiscountOverlaps(boolean).mjava","pathOld":"src/java/org/apache/lucene/search/DefaultSimilarity#setDiscountOverlaps(boolean).mjava","sourceNew":"  /** Determines whether overlap tokens (Tokens with\n   *  0 position increment) are ignored when computing\n   *  norm.  By default this is true, meaning overlap\n   *  tokens do not count when computing norms.\n   *\n   *  @lucene.experimental\n   *\n   *  @see #computeNorm\n   */\n  public void setDiscountOverlaps(boolean v) {\n    discountOverlaps = v;\n  }\n\n","sourceOld":"  /** Determines whether overlap tokens (Tokens with\n   *  0 position increment) are ignored when computing\n   *  norm.  By default this is true, meaning overlap\n   *  tokens do not count when computing norms.\n   *\n   *  @lucene.experimental\n   *\n   *  @see #computeNorm\n   */\n  public void setDiscountOverlaps(boolean v) {\n    discountOverlaps = v;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b97ad57e24dbeef1f5d61d998f1ac7688901eacc":["1e0ca16f14d94e05bda40e00ecb2a2c0225343c6"],"d41ab32fc87982eab82a896cee390971b5c08fd2":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"1e0ca16f14d94e05bda40e00ecb2a2c0225343c6":["d41ab32fc87982eab82a896cee390971b5c08fd2"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["b97ad57e24dbeef1f5d61d998f1ac7688901eacc"]},"commit2Childs":{"b97ad57e24dbeef1f5d61d998f1ac7688901eacc":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"d41ab32fc87982eab82a896cee390971b5c08fd2":["1e0ca16f14d94e05bda40e00ecb2a2c0225343c6"],"1e0ca16f14d94e05bda40e00ecb2a2c0225343c6":["b97ad57e24dbeef1f5d61d998f1ac7688901eacc"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["d41ab32fc87982eab82a896cee390971b5c08fd2"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}