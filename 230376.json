{"path":"lucene/monitor/src/java/org/apache/lucene/monitor/RegexpQueryHandler#RegexpQueryHandler(String,int,String,Set[String]).mjava","commits":[{"id":"7c529b189e09de25455d82ebd7260748cf11ee14","date":1560415257,"type":0,"author":"Alan Woodward","isMerge":false,"pathNew":"lucene/monitor/src/java/org/apache/lucene/monitor/RegexpQueryHandler#RegexpQueryHandler(String,int,String,Set[String]).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Creates a new RegexpQueryHandler\n   *\n   * @param ngramSuffix    the suffix with which to mark ngrams\n   * @param maxTokenSize   the maximum length of an input token before WILDCARD tokens are generated\n   * @param wildcardToken  the token to emit if a token is longer than maxTokenSize in length\n   * @param excludedFields a Set of fields to ignore when generating ngrams\n   */\n  public RegexpQueryHandler(String ngramSuffix, int maxTokenSize, String wildcardToken, Set<String> excludedFields) {\n    this.ngramSuffix = ngramSuffix;\n    this.maxTokenSize = maxTokenSize;\n    this.wildcardTokenBytes = new BytesRef(wildcardToken);\n    this.wildcardToken = wildcardToken;\n    this.excludedFields = excludedFields == null ? Collections.emptySet() : excludedFields;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"7c529b189e09de25455d82ebd7260748cf11ee14":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["7c529b189e09de25455d82ebd7260748cf11ee14"]},"commit2Childs":{"7c529b189e09de25455d82ebd7260748cf11ee14":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["7c529b189e09de25455d82ebd7260748cf11ee14"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}