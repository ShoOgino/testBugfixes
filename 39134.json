{"path":"lucene/src/java/org/apache/lucene/index/codecs/PostingsConsumer#startDoc(int,int).mjava","commits":[{"id":"955c32f886db6f6356c9fcdea6b1f1cb4effda24","date":1270581567,"type":0,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/PostingsConsumer#startDoc(int,int).mjava","pathOld":"/dev/null","sourceNew":"  /** Adds a new doc in this term.  Return null if this\n   *  consumer doesn't need to see the positions for this\n   *  doc. */\n  public abstract void startDoc(int docID, int termDocFreq) throws IOException;\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3d53c3f769ca0f9e7434937b792877770271aecf","date":1294785129,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/PostingsConsumer#startDoc(int,int).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/PostingsConsumer#startDoc(int,int).mjava","sourceNew":"  /** Adds a new doc in this term.  If this field omits term\n   *  freqs & positions then termDocFreq should be ignored,\n   *  and, finishDoc will not be called. */\n  public abstract void startDoc(int docID, int termDocFreq) throws IOException;\n\n","sourceOld":"  /** Adds a new doc in this term.  Return null if this\n   *  consumer doesn't need to see the positions for this\n   *  doc. */\n  public abstract void startDoc(int docID, int termDocFreq) throws IOException;\n\n","bugFix":null,"bugIntro":["2c6f93d9250f0d2c776d11fa7fa6ac4ce921052e"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"868da859b43505d9d2a023bfeae6dd0c795f5295","date":1294948401,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/PostingsConsumer#startDoc(int,int).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/PostingsConsumer#startDoc(int,int).mjava","sourceNew":"  /** Adds a new doc in this term.  If this field omits term\n   *  freqs & positions then termDocFreq should be ignored,\n   *  and, finishDoc will not be called. */\n  public abstract void startDoc(int docID, int termDocFreq) throws IOException;\n\n","sourceOld":"  /** Adds a new doc in this term.  Return null if this\n   *  consumer doesn't need to see the positions for this\n   *  doc. */\n  public abstract void startDoc(int docID, int termDocFreq) throws IOException;\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"29ef99d61cda9641b6250bf9567329a6e65f901d","date":1297244127,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/PostingsConsumer#startDoc(int,int).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/PostingsConsumer#startDoc(int,int).mjava","sourceNew":"  /** Adds a new doc in this term.  If this field omits term\n   *  freqs & positions then termDocFreq should be ignored,\n   *  and, finishDoc will not be called. */\n  public abstract void startDoc(int docID, int termDocFreq) throws IOException;\n\n","sourceOld":"  /** Adds a new doc in this term.  Return null if this\n   *  consumer doesn't need to see the positions for this\n   *  doc. */\n  public abstract void startDoc(int docID, int termDocFreq) throws IOException;\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a0ae5e3ed1232483b7b8a014f175a5fe43595982","date":1324062192,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/codecs/PostingsConsumer#startDoc(int,int).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/PostingsConsumer#startDoc(int,int).mjava","sourceNew":"  /** Adds a new doc in this term.  If this field omits term\n   *  freqs & positions then termDocFreq should be ignored,\n   *  and, finishDoc will not be called. */\n  public abstract void startDoc(int docID, int termDocFreq) throws IOException;\n\n","sourceOld":"  /** Adds a new doc in this term.  If this field omits term\n   *  freqs & positions then termDocFreq should be ignored,\n   *  and, finishDoc will not be called. */\n  public abstract void startDoc(int docID, int termDocFreq) throws IOException;\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"29ef99d61cda9641b6250bf9567329a6e65f901d":["955c32f886db6f6356c9fcdea6b1f1cb4effda24","3d53c3f769ca0f9e7434937b792877770271aecf"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3d53c3f769ca0f9e7434937b792877770271aecf":["955c32f886db6f6356c9fcdea6b1f1cb4effda24"],"955c32f886db6f6356c9fcdea6b1f1cb4effda24":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0ae5e3ed1232483b7b8a014f175a5fe43595982":["3d53c3f769ca0f9e7434937b792877770271aecf"],"868da859b43505d9d2a023bfeae6dd0c795f5295":["955c32f886db6f6356c9fcdea6b1f1cb4effda24","3d53c3f769ca0f9e7434937b792877770271aecf"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0ae5e3ed1232483b7b8a014f175a5fe43595982"]},"commit2Childs":{"29ef99d61cda9641b6250bf9567329a6e65f901d":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["955c32f886db6f6356c9fcdea6b1f1cb4effda24"],"955c32f886db6f6356c9fcdea6b1f1cb4effda24":["29ef99d61cda9641b6250bf9567329a6e65f901d","3d53c3f769ca0f9e7434937b792877770271aecf","868da859b43505d9d2a023bfeae6dd0c795f5295"],"3d53c3f769ca0f9e7434937b792877770271aecf":["29ef99d61cda9641b6250bf9567329a6e65f901d","a0ae5e3ed1232483b7b8a014f175a5fe43595982","868da859b43505d9d2a023bfeae6dd0c795f5295"],"a0ae5e3ed1232483b7b8a014f175a5fe43595982":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"868da859b43505d9d2a023bfeae6dd0c795f5295":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["29ef99d61cda9641b6250bf9567329a6e65f901d","868da859b43505d9d2a023bfeae6dd0c795f5295","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}