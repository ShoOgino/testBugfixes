{"path":"lucene/core/src/java/org/apache/lucene/search/payloads/PayloadTermQuery.PayloadTermWeight.PayloadTermSpanScorer#processPayload(Similarity).mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/payloads/PayloadTermQuery.PayloadTermWeight.PayloadTermSpanScorer#processPayload(Similarity).mjava","pathOld":"lucene/src/java/org/apache/lucene/search/payloads/PayloadTermQuery.PayloadTermWeight.PayloadTermSpanScorer#processPayload(Similarity).mjava","sourceNew":"      protected void processPayload(Similarity similarity) throws IOException {\n        final DocsAndPositionsEnum postings = termSpans.getPostings();\n        if (postings.hasPayload()) {\n          payload = postings.getPayload();\n          if (payload != null) {\n            payloadScore = function.currentScore(doc, term.field(),\n                                                 spans.start(), spans.end(), payloadsSeen, payloadScore,\n                                                 docScorer.computePayloadFactor(doc, spans.start(), spans.end(), payload));\n          } else {\n            payloadScore = function.currentScore(doc, term.field(),\n                                                 spans.start(), spans.end(), payloadsSeen, payloadScore, 1F);\n          }\n          payloadsSeen++;\n\n        } else {\n          // zero out the payload?\n        }\n      }\n\n","sourceOld":"      protected void processPayload(Similarity similarity) throws IOException {\n        final DocsAndPositionsEnum postings = termSpans.getPostings();\n        if (postings.hasPayload()) {\n          payload = postings.getPayload();\n          if (payload != null) {\n            payloadScore = function.currentScore(doc, term.field(),\n                                                 spans.start(), spans.end(), payloadsSeen, payloadScore,\n                                                 docScorer.computePayloadFactor(doc, spans.start(), spans.end(), payload));\n          } else {\n            payloadScore = function.currentScore(doc, term.field(),\n                                                 spans.start(), spans.end(), payloadsSeen, payloadScore, 1F);\n          }\n          payloadsSeen++;\n\n        } else {\n          // zero out the payload?\n        }\n      }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2b4c7e630332c5e9e7d7a70f4ace4b3ffd3fc552","date":1344797146,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/payloads/PayloadTermQuery.PayloadTermWeight.PayloadTermSpanScorer#processPayload(Similarity).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/payloads/PayloadTermQuery.PayloadTermWeight.PayloadTermSpanScorer#processPayload(Similarity).mjava","sourceNew":"      protected void processPayload(Similarity similarity) throws IOException {\n        if (termSpans.isPayloadAvailable()) {\n          final DocsAndPositionsEnum postings = termSpans.getPostings();\n          payload = postings.getPayload();\n          if (payload != null) {\n            payloadScore = function.currentScore(doc, term.field(),\n                                                 spans.start(), spans.end(), payloadsSeen, payloadScore,\n                                                 docScorer.computePayloadFactor(doc, spans.start(), spans.end(), payload));\n          } else {\n            payloadScore = function.currentScore(doc, term.field(),\n                                                 spans.start(), spans.end(), payloadsSeen, payloadScore, 1F);\n          }\n          payloadsSeen++;\n\n        } else {\n          // zero out the payload?\n        }\n      }\n\n","sourceOld":"      protected void processPayload(Similarity similarity) throws IOException {\n        final DocsAndPositionsEnum postings = termSpans.getPostings();\n        if (postings.hasPayload()) {\n          payload = postings.getPayload();\n          if (payload != null) {\n            payloadScore = function.currentScore(doc, term.field(),\n                                                 spans.start(), spans.end(), payloadsSeen, payloadScore,\n                                                 docScorer.computePayloadFactor(doc, spans.start(), spans.end(), payload));\n          } else {\n            payloadScore = function.currentScore(doc, term.field(),\n                                                 spans.start(), spans.end(), payloadsSeen, payloadScore, 1F);\n          }\n          payloadsSeen++;\n\n        } else {\n          // zero out the payload?\n        }\n      }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c7869f64c874ebf7f317d22c00baf2b6857797a6","date":1344856617,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/search/payloads/PayloadTermQuery.PayloadTermWeight.PayloadTermSpanScorer#processPayload(Similarity).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/payloads/PayloadTermQuery.PayloadTermWeight.PayloadTermSpanScorer#processPayload(Similarity).mjava","sourceNew":"      protected void processPayload(Similarity similarity) throws IOException {\n        if (termSpans.isPayloadAvailable()) {\n          final DocsAndPositionsEnum postings = termSpans.getPostings();\n          payload = postings.getPayload();\n          if (payload != null) {\n            payloadScore = function.currentScore(doc, term.field(),\n                                                 spans.start(), spans.end(), payloadsSeen, payloadScore,\n                                                 docScorer.computePayloadFactor(doc, spans.start(), spans.end(), payload));\n          } else {\n            payloadScore = function.currentScore(doc, term.field(),\n                                                 spans.start(), spans.end(), payloadsSeen, payloadScore, 1F);\n          }\n          payloadsSeen++;\n\n        } else {\n          // zero out the payload?\n        }\n      }\n\n","sourceOld":"      protected void processPayload(Similarity similarity) throws IOException {\n        final DocsAndPositionsEnum postings = termSpans.getPostings();\n        if (postings.hasPayload()) {\n          payload = postings.getPayload();\n          if (payload != null) {\n            payloadScore = function.currentScore(doc, term.field(),\n                                                 spans.start(), spans.end(), payloadsSeen, payloadScore,\n                                                 docScorer.computePayloadFactor(doc, spans.start(), spans.end(), payload));\n          } else {\n            payloadScore = function.currentScore(doc, term.field(),\n                                                 spans.start(), spans.end(), payloadsSeen, payloadScore, 1F);\n          }\n          payloadsSeen++;\n\n        } else {\n          // zero out the payload?\n        }\n      }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d0ba34ddeec9e4ab657150c29a5614a7bfbb53c9","date":1344867506,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/search/payloads/PayloadTermQuery.PayloadTermWeight.PayloadTermSpanScorer#processPayload(Similarity).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/payloads/PayloadTermQuery.PayloadTermWeight.PayloadTermSpanScorer#processPayload(Similarity).mjava","sourceNew":"      protected void processPayload(Similarity similarity) throws IOException {\n        if (termSpans.isPayloadAvailable()) {\n          final DocsAndPositionsEnum postings = termSpans.getPostings();\n          payload = postings.getPayload();\n          if (payload != null) {\n            payloadScore = function.currentScore(doc, term.field(),\n                                                 spans.start(), spans.end(), payloadsSeen, payloadScore,\n                                                 docScorer.computePayloadFactor(doc, spans.start(), spans.end(), payload));\n          } else {\n            payloadScore = function.currentScore(doc, term.field(),\n                                                 spans.start(), spans.end(), payloadsSeen, payloadScore, 1F);\n          }\n          payloadsSeen++;\n\n        } else {\n          // zero out the payload?\n        }\n      }\n\n","sourceOld":"      protected void processPayload(Similarity similarity) throws IOException {\n        final DocsAndPositionsEnum postings = termSpans.getPostings();\n        if (postings.hasPayload()) {\n          payload = postings.getPayload();\n          if (payload != null) {\n            payloadScore = function.currentScore(doc, term.field(),\n                                                 spans.start(), spans.end(), payloadsSeen, payloadScore,\n                                                 docScorer.computePayloadFactor(doc, spans.start(), spans.end(), payload));\n          } else {\n            payloadScore = function.currentScore(doc, term.field(),\n                                                 spans.start(), spans.end(), payloadsSeen, payloadScore, 1F);\n          }\n          payloadsSeen++;\n\n        } else {\n          // zero out the payload?\n        }\n      }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"51f5280f31484820499077f41fcdfe92d527d9dc","date":1423229122,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/payloads/PayloadTermQuery.PayloadTermWeight.PayloadTermSpanScorer#processPayload(Similarity).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/payloads/PayloadTermQuery.PayloadTermWeight.PayloadTermSpanScorer#processPayload(Similarity).mjava","sourceNew":"      protected void processPayload(Similarity similarity) throws IOException {\n        if (termSpans.isPayloadAvailable()) {\n          final PostingsEnum postings = termSpans.getPostings();\n          payload = postings.getPayload();\n          if (payload != null) {\n            payloadScore = function.currentScore(doc, term.field(),\n                                                 spans.start(), spans.end(), payloadsSeen, payloadScore,\n                                                 docScorer.computePayloadFactor(doc, spans.start(), spans.end(), payload));\n          } else {\n            payloadScore = function.currentScore(doc, term.field(),\n                                                 spans.start(), spans.end(), payloadsSeen, payloadScore, 1F);\n          }\n          payloadsSeen++;\n\n        } else {\n          // zero out the payload?\n        }\n      }\n\n","sourceOld":"      protected void processPayload(Similarity similarity) throws IOException {\n        if (termSpans.isPayloadAvailable()) {\n          final DocsAndPositionsEnum postings = termSpans.getPostings();\n          payload = postings.getPayload();\n          if (payload != null) {\n            payloadScore = function.currentScore(doc, term.field(),\n                                                 spans.start(), spans.end(), payloadsSeen, payloadScore,\n                                                 docScorer.computePayloadFactor(doc, spans.start(), spans.end(), payload));\n          } else {\n            payloadScore = function.currentScore(doc, term.field(),\n                                                 spans.start(), spans.end(), payloadsSeen, payloadScore, 1F);\n          }\n          payloadsSeen++;\n\n        } else {\n          // zero out the payload?\n        }\n      }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"30de45e50bdc1a79a6797f34dca6271c8866cb6e","date":1427790465,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/payloads/PayloadTermQuery.PayloadTermWeight.PayloadTermSpanScorer#processPayload(Similarity).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/payloads/PayloadTermQuery.PayloadTermWeight.PayloadTermSpanScorer#processPayload(Similarity).mjava","sourceNew":"      protected void processPayload(Similarity similarity) throws IOException {\n        if (spans.isPayloadAvailable()) {\n          final PostingsEnum postings = termSpans.getPostings();\n          payload = postings.getPayload();\n          if (payload != null) {\n            payloadScore = function.currentScore(doc, term.field(),\n                                                 spans.startPosition(), spans.endPosition(), payloadsSeen, payloadScore,\n                                                 docScorer.computePayloadFactor(doc, spans.startPosition(), spans.endPosition(), payload));\n          } else {\n            payloadScore = function.currentScore(doc, term.field(),\n                                                 spans.startPosition(), spans.endPosition(), payloadsSeen, payloadScore, 1F);\n          }\n          payloadsSeen++;\n\n        } else {\n          // zero out the payload?\n        }\n      }\n\n","sourceOld":"      protected void processPayload(Similarity similarity) throws IOException {\n        if (termSpans.isPayloadAvailable()) {\n          final PostingsEnum postings = termSpans.getPostings();\n          payload = postings.getPayload();\n          if (payload != null) {\n            payloadScore = function.currentScore(doc, term.field(),\n                                                 spans.start(), spans.end(), payloadsSeen, payloadScore,\n                                                 docScorer.computePayloadFactor(doc, spans.start(), spans.end(), payload));\n          } else {\n            payloadScore = function.currentScore(doc, term.field(),\n                                                 spans.start(), spans.end(), payloadsSeen, payloadScore, 1F);\n          }\n          payloadsSeen++;\n\n        } else {\n          // zero out the payload?\n        }\n      }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fab172655716b96f7e42376116235017a922de3a","date":1427850611,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/search/payloads/PayloadTermQuery.PayloadTermWeight.PayloadTermSpanScorer#processPayload(Similarity).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/payloads/PayloadTermQuery.PayloadTermWeight.PayloadTermSpanScorer#processPayload(Similarity).mjava","sourceNew":"      protected void processPayload(Similarity similarity) throws IOException {\n        if (spans.isPayloadAvailable()) {\n          final PostingsEnum postings = termSpans.getPostings();\n          payload = postings.getPayload();\n          if (payload != null) {\n            payloadScore = function.currentScore(doc, term.field(),\n                                                 spans.startPosition(), spans.endPosition(), payloadsSeen, payloadScore,\n                                                 docScorer.computePayloadFactor(doc, spans.startPosition(), spans.endPosition(), payload));\n          } else {\n            payloadScore = function.currentScore(doc, term.field(),\n                                                 spans.startPosition(), spans.endPosition(), payloadsSeen, payloadScore, 1F);\n          }\n          payloadsSeen++;\n\n        } else {\n          // zero out the payload?\n        }\n      }\n\n","sourceOld":"      protected void processPayload(Similarity similarity) throws IOException {\n        if (termSpans.isPayloadAvailable()) {\n          final PostingsEnum postings = termSpans.getPostings();\n          payload = postings.getPayload();\n          if (payload != null) {\n            payloadScore = function.currentScore(doc, term.field(),\n                                                 spans.start(), spans.end(), payloadsSeen, payloadScore,\n                                                 docScorer.computePayloadFactor(doc, spans.start(), spans.end(), payload));\n          } else {\n            payloadScore = function.currentScore(doc, term.field(),\n                                                 spans.start(), spans.end(), payloadsSeen, payloadScore, 1F);\n          }\n          payloadsSeen++;\n\n        } else {\n          // zero out the payload?\n        }\n      }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f4409879b1445c56c3834b823720d47c08c409c5","date":1428086307,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/payloads/PayloadTermQuery.PayloadTermWeight.PayloadTermSpanScorer#processPayload(Similarity).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/payloads/PayloadTermQuery.PayloadTermWeight.PayloadTermSpanScorer#processPayload(Similarity).mjava","sourceNew":"      protected void processPayload(Similarity similarity) throws IOException {\n        if (spans.isPayloadAvailable()) {\n          final PostingsEnum postings = termSpans.getPostings();\n          payload = postings.getPayload();\n          if (payload != null) {\n            payloadScore = function.currentScore(docID(), term.field(),\n                                                 spans.startPosition(), spans.endPosition(), payloadsSeen, payloadScore,\n                                                 docScorer.computePayloadFactor(docID(), spans.startPosition(), spans.endPosition(), payload));\n          } else {\n            payloadScore = function.currentScore(docID(), term.field(),\n                                                 spans.startPosition(), spans.endPosition(), payloadsSeen, payloadScore, 1F);\n          }\n          payloadsSeen++;\n\n        } else {\n          // zero out the payload?\n        }\n      }\n\n","sourceOld":"      protected void processPayload(Similarity similarity) throws IOException {\n        if (spans.isPayloadAvailable()) {\n          final PostingsEnum postings = termSpans.getPostings();\n          payload = postings.getPayload();\n          if (payload != null) {\n            payloadScore = function.currentScore(doc, term.field(),\n                                                 spans.startPosition(), spans.endPosition(), payloadsSeen, payloadScore,\n                                                 docScorer.computePayloadFactor(doc, spans.startPosition(), spans.endPosition(), payload));\n          } else {\n            payloadScore = function.currentScore(doc, term.field(),\n                                                 spans.startPosition(), spans.endPosition(), payloadsSeen, payloadScore, 1F);\n          }\n          payloadsSeen++;\n\n        } else {\n          // zero out the payload?\n        }\n      }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6c757ac42dd1f3f893db5c4d89c61cbe1a9fab6c","date":1428091986,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/search/payloads/PayloadTermQuery.PayloadTermWeight.PayloadTermSpanScorer#processPayload(Similarity).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/payloads/PayloadTermQuery.PayloadTermWeight.PayloadTermSpanScorer#processPayload(Similarity).mjava","sourceNew":"      protected void processPayload(Similarity similarity) throws IOException {\n        if (spans.isPayloadAvailable()) {\n          final PostingsEnum postings = termSpans.getPostings();\n          payload = postings.getPayload();\n          if (payload != null) {\n            payloadScore = function.currentScore(docID(), term.field(),\n                                                 spans.startPosition(), spans.endPosition(), payloadsSeen, payloadScore,\n                                                 docScorer.computePayloadFactor(docID(), spans.startPosition(), spans.endPosition(), payload));\n          } else {\n            payloadScore = function.currentScore(docID(), term.field(),\n                                                 spans.startPosition(), spans.endPosition(), payloadsSeen, payloadScore, 1F);\n          }\n          payloadsSeen++;\n\n        } else {\n          // zero out the payload?\n        }\n      }\n\n","sourceOld":"      protected void processPayload(Similarity similarity) throws IOException {\n        if (spans.isPayloadAvailable()) {\n          final PostingsEnum postings = termSpans.getPostings();\n          payload = postings.getPayload();\n          if (payload != null) {\n            payloadScore = function.currentScore(doc, term.field(),\n                                                 spans.startPosition(), spans.endPosition(), payloadsSeen, payloadScore,\n                                                 docScorer.computePayloadFactor(doc, spans.startPosition(), spans.endPosition(), payload));\n          } else {\n            payloadScore = function.currentScore(doc, term.field(),\n                                                 spans.startPosition(), spans.endPosition(), payloadsSeen, payloadScore, 1F);\n          }\n          payloadsSeen++;\n\n        } else {\n          // zero out the payload?\n        }\n      }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2d530e71ed32ab23b34ca3fc72b080a554a40404","date":1432026158,"type":4,"author":"Alan Woodward","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/search/payloads/PayloadTermQuery.PayloadTermWeight.PayloadTermSpanScorer#processPayload(Similarity).mjava","sourceNew":null,"sourceOld":"      protected void processPayload(Similarity similarity) throws IOException {\n        if (spans.isPayloadAvailable()) {\n          final PostingsEnum postings = termSpans.getPostings();\n          payload = postings.getPayload();\n          if (payload != null) {\n            payloadScore = function.currentScore(docID(), term.field(),\n                                                 spans.startPosition(), spans.endPosition(), payloadsSeen, payloadScore,\n                                                 docScorer.computePayloadFactor(docID(), spans.startPosition(), spans.endPosition(), payload));\n          } else {\n            payloadScore = function.currentScore(docID(), term.field(),\n                                                 spans.startPosition(), spans.endPosition(), payloadsSeen, payloadScore, 1F);\n          }\n          payloadsSeen++;\n\n        } else {\n          // zero out the payload?\n        }\n      }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"c7869f64c874ebf7f317d22c00baf2b6857797a6":["3a119bbc8703c10faa329ec201c654b3a35a1e3e","2b4c7e630332c5e9e7d7a70f4ace4b3ffd3fc552"],"2b4c7e630332c5e9e7d7a70f4ace4b3ffd3fc552":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"f4409879b1445c56c3834b823720d47c08c409c5":["30de45e50bdc1a79a6797f34dca6271c8866cb6e"],"6c757ac42dd1f3f893db5c4d89c61cbe1a9fab6c":["fab172655716b96f7e42376116235017a922de3a","f4409879b1445c56c3834b823720d47c08c409c5"],"2d530e71ed32ab23b34ca3fc72b080a554a40404":["f4409879b1445c56c3834b823720d47c08c409c5"],"30de45e50bdc1a79a6797f34dca6271c8866cb6e":["51f5280f31484820499077f41fcdfe92d527d9dc"],"51f5280f31484820499077f41fcdfe92d527d9dc":["2b4c7e630332c5e9e7d7a70f4ace4b3ffd3fc552"],"fab172655716b96f7e42376116235017a922de3a":["51f5280f31484820499077f41fcdfe92d527d9dc","30de45e50bdc1a79a6797f34dca6271c8866cb6e"],"d0ba34ddeec9e4ab657150c29a5614a7bfbb53c9":["3a119bbc8703c10faa329ec201c654b3a35a1e3e","2b4c7e630332c5e9e7d7a70f4ace4b3ffd3fc552"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["2d530e71ed32ab23b34ca3fc72b080a554a40404"]},"commit2Childs":{"c7869f64c874ebf7f317d22c00baf2b6857797a6":[],"2b4c7e630332c5e9e7d7a70f4ace4b3ffd3fc552":["c7869f64c874ebf7f317d22c00baf2b6857797a6","51f5280f31484820499077f41fcdfe92d527d9dc","d0ba34ddeec9e4ab657150c29a5614a7bfbb53c9"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["c7869f64c874ebf7f317d22c00baf2b6857797a6","2b4c7e630332c5e9e7d7a70f4ace4b3ffd3fc552","d0ba34ddeec9e4ab657150c29a5614a7bfbb53c9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"f4409879b1445c56c3834b823720d47c08c409c5":["6c757ac42dd1f3f893db5c4d89c61cbe1a9fab6c","2d530e71ed32ab23b34ca3fc72b080a554a40404"],"6c757ac42dd1f3f893db5c4d89c61cbe1a9fab6c":[],"2d530e71ed32ab23b34ca3fc72b080a554a40404":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"30de45e50bdc1a79a6797f34dca6271c8866cb6e":["f4409879b1445c56c3834b823720d47c08c409c5","fab172655716b96f7e42376116235017a922de3a"],"fab172655716b96f7e42376116235017a922de3a":["6c757ac42dd1f3f893db5c4d89c61cbe1a9fab6c"],"51f5280f31484820499077f41fcdfe92d527d9dc":["30de45e50bdc1a79a6797f34dca6271c8866cb6e","fab172655716b96f7e42376116235017a922de3a"],"d0ba34ddeec9e4ab657150c29a5614a7bfbb53c9":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["c7869f64c874ebf7f317d22c00baf2b6857797a6","6c757ac42dd1f3f893db5c4d89c61cbe1a9fab6c","d0ba34ddeec9e4ab657150c29a5614a7bfbb53c9","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}