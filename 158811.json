{"path":"solr/core/src/java/org/apache/solr/highlight/OffsetWindowTokenFilter[DefaultSolrHighlighter]#incrementToken().mjava","commits":[{"id":"bd19a665923f0acf59d3f056adfef60dbe7c1047","date":1419308867,"type":0,"author":"David Wayne Smiley","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/highlight/OffsetWindowTokenFilter[DefaultSolrHighlighter]#incrementToken().mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public boolean incrementToken() throws IOException {\n    assert inputWasReset;\n    windowTokenIncremented = true;\n    while (true) {\n      //increment Token\n      if (capturedState == null) {\n        if (!input.incrementToken()) {\n          return false;\n        }\n      } else {\n        restoreState(capturedState);\n        capturedState = null;\n        //Set posInc to 1 on first token of subsequent windows. To be thorough, we could subtract posIncGap?\n        posIncAtt.setPositionIncrement(1);\n      }\n\n      final int startOffset = offsetAtt.startOffset();\n      final int endOffset = offsetAtt.endOffset();\n      if (startOffset >= windowEndOffset) {//end of window\n        capturedState = captureState();\n        return false;\n      }\n      if (startOffset >= windowStartOffset) {//in this window\n        offsetAtt.setOffset(startOffset - windowStartOffset, endOffset - windowStartOffset);\n        return true;\n      }\n      //otherwise this token is before the window; continue to advance\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"aa2585c33d5d66a1c837c312221eb55ddb3c4300","date":1592493170,"type":4,"author":"Erick Erickson","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/core/src/java/org/apache/solr/highlight/OffsetWindowTokenFilter[DefaultSolrHighlighter]#incrementToken().mjava","sourceNew":null,"sourceOld":"  @Override\n  public boolean incrementToken() throws IOException {\n    assert inputWasReset;\n    windowTokenIncremented = true;\n    while (true) {\n      //increment Token\n      if (capturedState == null) {\n        if (!input.incrementToken()) {\n          return false;\n        }\n      } else {\n        restoreState(capturedState);\n        capturedState = null;\n        //Set posInc to 1 on first token of subsequent windows. To be thorough, we could subtract posIncGap?\n        posIncAtt.setPositionIncrement(1);\n      }\n\n      final int startOffset = offsetAtt.startOffset();\n      final int endOffset = offsetAtt.endOffset();\n      if (startOffset >= windowEndOffset) {//end of window\n        capturedState = captureState();\n        return false;\n      }\n      if (startOffset >= windowStartOffset) {//in this window\n        offsetAtt.setOffset(startOffset - windowStartOffset, endOffset - windowStartOffset);\n        return true;\n      }\n      //otherwise this token is before the window; continue to advance\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"aa2585c33d5d66a1c837c312221eb55ddb3c4300":["bd19a665923f0acf59d3f056adfef60dbe7c1047"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"bd19a665923f0acf59d3f056adfef60dbe7c1047":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["aa2585c33d5d66a1c837c312221eb55ddb3c4300"]},"commit2Childs":{"aa2585c33d5d66a1c837c312221eb55ddb3c4300":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["bd19a665923f0acf59d3f056adfef60dbe7c1047"],"bd19a665923f0acf59d3f056adfef60dbe7c1047":["aa2585c33d5d66a1c837c312221eb55ddb3c4300"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}