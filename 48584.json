{"path":"solr/core/src/java/org/apache/solr/search/Grouping#addFunctionCommand(String,SolrQueryRequest).mjava","commits":[{"id":"c903c3d15906a3da96b8c0c2fb704491005fdbdb","date":1453508227,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/Grouping#addFunctionCommand(String,SolrQueryRequest).mjava","pathOld":"solr/src/java/org/apache/solr/search/Grouping#addFunctionCommand(String,SolrQueryRequest).mjava","sourceNew":"  public void addFunctionCommand(String groupByStr, SolrQueryRequest request) throws ParseException {\n    QParser parser = QParser.getParser(groupByStr, \"func\", request);\n    Query q = parser.getQuery();\n    final Grouping.Command gc;\n    if (q instanceof FunctionQuery) {\n      ValueSource valueSource = ((FunctionQuery)q).getValueSource();\n      if (valueSource instanceof StrFieldSource) {\n        String field = ((StrFieldSource) valueSource).getField();\n        CommandField commandField = new CommandField();\n        commandField.groupBy = field;\n        gc = commandField;\n      } else {\n        CommandFunc commandFunc = new CommandFunc();\n        commandFunc.groupBy = valueSource;\n        gc = commandFunc;\n      }\n    } else {\n      CommandFunc commandFunc = new CommandFunc();\n      commandFunc.groupBy = new QueryValueSource(q, 0.0f);\n      gc = commandFunc;\n    }\n    gc.groupSort = groupSort;\n    gc.key = groupByStr;\n    gc.numGroups = limitDefault;\n    gc.docsPerGroup = docsPerGroupDefault;\n    gc.groupOffset = groupOffsetDefault;\n    gc.offset = cmd.getOffset();\n    gc.sort = sort;\n    gc.format = defaultFormat;\n    gc.totalCount = defaultTotalCount;\n\n    if (main) {\n      gc.main = true;\n      gc.format = Grouping.Format.simple;\n    }\n\n    if (gc.format == Grouping.Format.simple) {\n      gc.groupOffset = 0;  // doesn't make sense\n    }\n\n    commands.add(gc);\n  }\n\n","sourceOld":"  public void addFunctionCommand(String groupByStr, SolrQueryRequest request) throws ParseException {\n    QParser parser = QParser.getParser(groupByStr, \"func\", request);\n    Query q = parser.getQuery();\n    final Grouping.Command gc;\n    if (q instanceof FunctionQuery) {\n      ValueSource valueSource = ((FunctionQuery)q).getValueSource();\n      if (valueSource instanceof StrFieldSource) {\n        String field = ((StrFieldSource) valueSource).getField();\n        CommandField commandField = new CommandField();\n        commandField.groupBy = field;\n        gc = commandField;\n      } else {\n        CommandFunc commandFunc = new CommandFunc();\n        commandFunc.groupBy = valueSource;\n        gc = commandFunc;\n      }\n    } else {\n      CommandFunc commandFunc = new CommandFunc();\n      commandFunc.groupBy = new QueryValueSource(q, 0.0f);\n      gc = commandFunc;\n    }\n    gc.groupSort = groupSort;\n    gc.key = groupByStr;\n    gc.numGroups = limitDefault;\n    gc.docsPerGroup = docsPerGroupDefault;\n    gc.groupOffset = groupOffsetDefault;\n    gc.offset = cmd.getOffset();\n    gc.sort = sort;\n    gc.format = defaultFormat;\n    gc.totalCount = defaultTotalCount;\n\n    if (main) {\n      gc.main = true;\n      gc.format = Grouping.Format.simple;\n    }\n\n    if (gc.format == Grouping.Format.simple) {\n      gc.groupOffset = 0;  // doesn't make sense\n    }\n\n    commands.add(gc);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a258fbb26824fd104ed795e5d9033d2d040049ee","date":1453508252,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/Grouping#addFunctionCommand(String,SolrQueryRequest).mjava","pathOld":"solr/src/java/org/apache/solr/search/Grouping#addFunctionCommand(String,SolrQueryRequest).mjava","sourceNew":"  public void addFunctionCommand(String groupByStr, SolrQueryRequest request) throws ParseException {\n    QParser parser = QParser.getParser(groupByStr, \"func\", request);\n    Query q = parser.getQuery();\n    final Grouping.Command gc;\n    if (q instanceof FunctionQuery) {\n      ValueSource valueSource = ((FunctionQuery)q).getValueSource();\n      if (valueSource instanceof StrFieldSource) {\n        String field = ((StrFieldSource) valueSource).getField();\n        CommandField commandField = new CommandField();\n        commandField.groupBy = field;\n        gc = commandField;\n      } else {\n        CommandFunc commandFunc = new CommandFunc();\n        commandFunc.groupBy = valueSource;\n        gc = commandFunc;\n      }\n    } else {\n      CommandFunc commandFunc = new CommandFunc();\n      commandFunc.groupBy = new QueryValueSource(q, 0.0f);\n      gc = commandFunc;\n    }\n    gc.groupSort = groupSort;\n    gc.key = groupByStr;\n    gc.numGroups = limitDefault;\n    gc.docsPerGroup = docsPerGroupDefault;\n    gc.groupOffset = groupOffsetDefault;\n    gc.offset = cmd.getOffset();\n    gc.sort = sort;\n    gc.format = defaultFormat;\n    gc.totalCount = defaultTotalCount;\n\n    if (main) {\n      gc.main = true;\n      gc.format = Grouping.Format.simple;\n    }\n\n    if (gc.format == Grouping.Format.simple) {\n      gc.groupOffset = 0;  // doesn't make sense\n    }\n\n    commands.add(gc);\n  }\n\n","sourceOld":"  public void addFunctionCommand(String groupByStr, SolrQueryRequest request) throws ParseException {\n    QParser parser = QParser.getParser(groupByStr, \"func\", request);\n    Query q = parser.getQuery();\n    final Grouping.Command gc;\n    if (q instanceof FunctionQuery) {\n      ValueSource valueSource = ((FunctionQuery)q).getValueSource();\n      if (valueSource instanceof StrFieldSource) {\n        String field = ((StrFieldSource) valueSource).getField();\n        CommandField commandField = new CommandField();\n        commandField.groupBy = field;\n        gc = commandField;\n      } else {\n        CommandFunc commandFunc = new CommandFunc();\n        commandFunc.groupBy = valueSource;\n        gc = commandFunc;\n      }\n    } else {\n      CommandFunc commandFunc = new CommandFunc();\n      commandFunc.groupBy = new QueryValueSource(q, 0.0f);\n      gc = commandFunc;\n    }\n    gc.groupSort = groupSort;\n    gc.key = groupByStr;\n    gc.numGroups = limitDefault;\n    gc.docsPerGroup = docsPerGroupDefault;\n    gc.groupOffset = groupOffsetDefault;\n    gc.offset = cmd.getOffset();\n    gc.sort = sort;\n    gc.format = defaultFormat;\n    gc.totalCount = defaultTotalCount;\n\n    if (main) {\n      gc.main = true;\n      gc.format = Grouping.Format.simple;\n    }\n\n    if (gc.format == Grouping.Format.simple) {\n      gc.groupOffset = 0;  // doesn't make sense\n    }\n\n    commands.add(gc);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/search/Grouping#addFunctionCommand(String,SolrQueryRequest).mjava","pathOld":"solr/src/java/org/apache/solr/search/Grouping#addFunctionCommand(String,SolrQueryRequest).mjava","sourceNew":"  public void addFunctionCommand(String groupByStr, SolrQueryRequest request) throws ParseException {\n    QParser parser = QParser.getParser(groupByStr, \"func\", request);\n    Query q = parser.getQuery();\n    final Grouping.Command gc;\n    if (q instanceof FunctionQuery) {\n      ValueSource valueSource = ((FunctionQuery)q).getValueSource();\n      if (valueSource instanceof StrFieldSource) {\n        String field = ((StrFieldSource) valueSource).getField();\n        CommandField commandField = new CommandField();\n        commandField.groupBy = field;\n        gc = commandField;\n      } else {\n        CommandFunc commandFunc = new CommandFunc();\n        commandFunc.groupBy = valueSource;\n        gc = commandFunc;\n      }\n    } else {\n      CommandFunc commandFunc = new CommandFunc();\n      commandFunc.groupBy = new QueryValueSource(q, 0.0f);\n      gc = commandFunc;\n    }\n    gc.groupSort = groupSort;\n    gc.key = groupByStr;\n    gc.numGroups = limitDefault;\n    gc.docsPerGroup = docsPerGroupDefault;\n    gc.groupOffset = groupOffsetDefault;\n    gc.offset = cmd.getOffset();\n    gc.sort = sort;\n    gc.format = defaultFormat;\n    gc.totalCount = defaultTotalCount;\n\n    if (main) {\n      gc.main = true;\n      gc.format = Grouping.Format.simple;\n    }\n\n    if (gc.format == Grouping.Format.simple) {\n      gc.groupOffset = 0;  // doesn't make sense\n    }\n\n    commands.add(gc);\n  }\n\n","sourceOld":"  public void addFunctionCommand(String groupByStr, SolrQueryRequest request) throws ParseException {\n    QParser parser = QParser.getParser(groupByStr, \"func\", request);\n    Query q = parser.getQuery();\n    final Grouping.Command gc;\n    if (q instanceof FunctionQuery) {\n      ValueSource valueSource = ((FunctionQuery)q).getValueSource();\n      if (valueSource instanceof StrFieldSource) {\n        String field = ((StrFieldSource) valueSource).getField();\n        CommandField commandField = new CommandField();\n        commandField.groupBy = field;\n        gc = commandField;\n      } else {\n        CommandFunc commandFunc = new CommandFunc();\n        commandFunc.groupBy = valueSource;\n        gc = commandFunc;\n      }\n    } else {\n      CommandFunc commandFunc = new CommandFunc();\n      commandFunc.groupBy = new QueryValueSource(q, 0.0f);\n      gc = commandFunc;\n    }\n    gc.groupSort = groupSort;\n    gc.key = groupByStr;\n    gc.numGroups = limitDefault;\n    gc.docsPerGroup = docsPerGroupDefault;\n    gc.groupOffset = groupOffsetDefault;\n    gc.offset = cmd.getOffset();\n    gc.sort = sort;\n    gc.format = defaultFormat;\n    gc.totalCount = defaultTotalCount;\n\n    if (main) {\n      gc.main = true;\n      gc.format = Grouping.Format.simple;\n    }\n\n    if (gc.format == Grouping.Format.simple) {\n      gc.groupOffset = 0;  // doesn't make sense\n    }\n\n    commands.add(gc);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3738f7d06920ae25ab2884f4efd80c42e95d6271","date":1312707753,"type":3,"author":"Martijn van Groningen","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/Grouping#addFunctionCommand(String,SolrQueryRequest).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/Grouping#addFunctionCommand(String,SolrQueryRequest).mjava","sourceNew":"  public void addFunctionCommand(String groupByStr, SolrQueryRequest request) throws ParseException {\n    QParser parser = QParser.getParser(groupByStr, \"func\", request);\n    Query q = parser.getQuery();\n    final Grouping.Command gc;\n    if (q instanceof FunctionQuery) {\n      ValueSource valueSource = ((FunctionQuery) q).getValueSource();\n      if (valueSource instanceof StrFieldSource) {\n        String field = ((StrFieldSource) valueSource).getField();\n        CommandField commandField = new CommandField();\n        commandField.groupBy = field;\n        gc = commandField;\n      } else {\n        CommandFunc commandFunc = new CommandFunc();\n        commandFunc.groupBy = valueSource;\n        gc = commandFunc;\n      }\n    } else {\n      CommandFunc commandFunc = new CommandFunc();\n      commandFunc.groupBy = new QueryValueSource(q, 0.0f);\n      gc = commandFunc;\n    }\n    gc.groupSort = groupSort;\n    gc.key = groupByStr;\n    gc.numGroups = limitDefault;\n    gc.docsPerGroup = docsPerGroupDefault;\n    gc.groupOffset = groupOffsetDefault;\n    gc.offset = cmd.getOffset();\n    gc.sort = sort;\n    gc.format = defaultFormat;\n    gc.totalCount = defaultTotalCount;\n\n    if (main) {\n      gc.main = true;\n      gc.format = Grouping.Format.simple;\n    }\n\n    if (gc.format == Grouping.Format.simple) {\n      gc.groupOffset = 0;  // doesn't make sense\n    }\n\n    commands.add(gc);\n  }\n\n","sourceOld":"  public void addFunctionCommand(String groupByStr, SolrQueryRequest request) throws ParseException {\n    QParser parser = QParser.getParser(groupByStr, \"func\", request);\n    Query q = parser.getQuery();\n    final Grouping.Command gc;\n    if (q instanceof FunctionQuery) {\n      ValueSource valueSource = ((FunctionQuery)q).getValueSource();\n      if (valueSource instanceof StrFieldSource) {\n        String field = ((StrFieldSource) valueSource).getField();\n        CommandField commandField = new CommandField();\n        commandField.groupBy = field;\n        gc = commandField;\n      } else {\n        CommandFunc commandFunc = new CommandFunc();\n        commandFunc.groupBy = valueSource;\n        gc = commandFunc;\n      }\n    } else {\n      CommandFunc commandFunc = new CommandFunc();\n      commandFunc.groupBy = new QueryValueSource(q, 0.0f);\n      gc = commandFunc;\n    }\n    gc.groupSort = groupSort;\n    gc.key = groupByStr;\n    gc.numGroups = limitDefault;\n    gc.docsPerGroup = docsPerGroupDefault;\n    gc.groupOffset = groupOffsetDefault;\n    gc.offset = cmd.getOffset();\n    gc.sort = sort;\n    gc.format = defaultFormat;\n    gc.totalCount = defaultTotalCount;\n\n    if (main) {\n      gc.main = true;\n      gc.format = Grouping.Format.simple;\n    }\n\n    if (gc.format == Grouping.Format.simple) {\n      gc.groupOffset = 0;  // doesn't make sense\n    }\n\n    commands.add(gc);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3cdb67100dc016748799a77218aa409478372d79","date":1353699950,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/Grouping#addFunctionCommand(String,SolrQueryRequest).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/Grouping#addFunctionCommand(String,SolrQueryRequest).mjava","sourceNew":"  public void addFunctionCommand(String groupByStr, SolrQueryRequest request) throws SyntaxError {\n    QParser parser = QParser.getParser(groupByStr, \"func\", request);\n    Query q = parser.getQuery();\n    final Grouping.Command gc;\n    if (q instanceof FunctionQuery) {\n      ValueSource valueSource = ((FunctionQuery) q).getValueSource();\n      if (valueSource instanceof StrFieldSource) {\n        String field = ((StrFieldSource) valueSource).getField();\n        CommandField commandField = new CommandField();\n        commandField.groupBy = field;\n        gc = commandField;\n      } else {\n        CommandFunc commandFunc = new CommandFunc();\n        commandFunc.groupBy = valueSource;\n        gc = commandFunc;\n      }\n    } else {\n      CommandFunc commandFunc = new CommandFunc();\n      commandFunc.groupBy = new QueryValueSource(q, 0.0f);\n      gc = commandFunc;\n    }\n    gc.groupSort = groupSort;\n    gc.key = groupByStr;\n    gc.numGroups = limitDefault;\n    gc.docsPerGroup = docsPerGroupDefault;\n    gc.groupOffset = groupOffsetDefault;\n    gc.offset = cmd.getOffset();\n    gc.sort = sort;\n    gc.format = defaultFormat;\n    gc.totalCount = defaultTotalCount;\n\n    if (main) {\n      gc.main = true;\n      gc.format = Grouping.Format.simple;\n    }\n\n    if (gc.format == Grouping.Format.simple) {\n      gc.groupOffset = 0;  // doesn't make sense\n    }\n\n    commands.add(gc);\n  }\n\n","sourceOld":"  public void addFunctionCommand(String groupByStr, SolrQueryRequest request) throws ParseException {\n    QParser parser = QParser.getParser(groupByStr, \"func\", request);\n    Query q = parser.getQuery();\n    final Grouping.Command gc;\n    if (q instanceof FunctionQuery) {\n      ValueSource valueSource = ((FunctionQuery) q).getValueSource();\n      if (valueSource instanceof StrFieldSource) {\n        String field = ((StrFieldSource) valueSource).getField();\n        CommandField commandField = new CommandField();\n        commandField.groupBy = field;\n        gc = commandField;\n      } else {\n        CommandFunc commandFunc = new CommandFunc();\n        commandFunc.groupBy = valueSource;\n        gc = commandFunc;\n      }\n    } else {\n      CommandFunc commandFunc = new CommandFunc();\n      commandFunc.groupBy = new QueryValueSource(q, 0.0f);\n      gc = commandFunc;\n    }\n    gc.groupSort = groupSort;\n    gc.key = groupByStr;\n    gc.numGroups = limitDefault;\n    gc.docsPerGroup = docsPerGroupDefault;\n    gc.groupOffset = groupOffsetDefault;\n    gc.offset = cmd.getOffset();\n    gc.sort = sort;\n    gc.format = defaultFormat;\n    gc.totalCount = defaultTotalCount;\n\n    if (main) {\n      gc.main = true;\n      gc.format = Grouping.Format.simple;\n    }\n\n    if (gc.format == Grouping.Format.simple) {\n      gc.groupOffset = 0;  // doesn't make sense\n    }\n\n    commands.add(gc);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"407687e67faf6e1f02a211ca078d8e3eed631027","date":1355157407,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/search/Grouping#addFunctionCommand(String,SolrQueryRequest).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/Grouping#addFunctionCommand(String,SolrQueryRequest).mjava","sourceNew":"  public void addFunctionCommand(String groupByStr, SolrQueryRequest request) throws SyntaxError {\n    QParser parser = QParser.getParser(groupByStr, \"func\", request);\n    Query q = parser.getQuery();\n    final Grouping.Command gc;\n    if (q instanceof FunctionQuery) {\n      ValueSource valueSource = ((FunctionQuery) q).getValueSource();\n      if (valueSource instanceof StrFieldSource) {\n        String field = ((StrFieldSource) valueSource).getField();\n        CommandField commandField = new CommandField();\n        commandField.groupBy = field;\n        gc = commandField;\n      } else {\n        CommandFunc commandFunc = new CommandFunc();\n        commandFunc.groupBy = valueSource;\n        gc = commandFunc;\n      }\n    } else {\n      CommandFunc commandFunc = new CommandFunc();\n      commandFunc.groupBy = new QueryValueSource(q, 0.0f);\n      gc = commandFunc;\n    }\n    gc.groupSort = groupSort;\n    gc.key = groupByStr;\n    gc.numGroups = limitDefault;\n    gc.docsPerGroup = docsPerGroupDefault;\n    gc.groupOffset = groupOffsetDefault;\n    gc.offset = cmd.getOffset();\n    gc.sort = sort;\n    gc.format = defaultFormat;\n    gc.totalCount = defaultTotalCount;\n\n    if (main) {\n      gc.main = true;\n      gc.format = Grouping.Format.simple;\n    }\n\n    if (gc.format == Grouping.Format.simple) {\n      gc.groupOffset = 0;  // doesn't make sense\n    }\n\n    commands.add(gc);\n  }\n\n","sourceOld":"  public void addFunctionCommand(String groupByStr, SolrQueryRequest request) throws ParseException {\n    QParser parser = QParser.getParser(groupByStr, \"func\", request);\n    Query q = parser.getQuery();\n    final Grouping.Command gc;\n    if (q instanceof FunctionQuery) {\n      ValueSource valueSource = ((FunctionQuery) q).getValueSource();\n      if (valueSource instanceof StrFieldSource) {\n        String field = ((StrFieldSource) valueSource).getField();\n        CommandField commandField = new CommandField();\n        commandField.groupBy = field;\n        gc = commandField;\n      } else {\n        CommandFunc commandFunc = new CommandFunc();\n        commandFunc.groupBy = valueSource;\n        gc = commandFunc;\n      }\n    } else {\n      CommandFunc commandFunc = new CommandFunc();\n      commandFunc.groupBy = new QueryValueSource(q, 0.0f);\n      gc = commandFunc;\n    }\n    gc.groupSort = groupSort;\n    gc.key = groupByStr;\n    gc.numGroups = limitDefault;\n    gc.docsPerGroup = docsPerGroupDefault;\n    gc.groupOffset = groupOffsetDefault;\n    gc.offset = cmd.getOffset();\n    gc.sort = sort;\n    gc.format = defaultFormat;\n    gc.totalCount = defaultTotalCount;\n\n    if (main) {\n      gc.main = true;\n      gc.format = Grouping.Format.simple;\n    }\n\n    if (gc.format == Grouping.Format.simple) {\n      gc.groupOffset = 0;  // doesn't make sense\n    }\n\n    commands.add(gc);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"19275ba31e621f6da1b83bf13af75233876fd3d4","date":1374846698,"type":3,"author":"Han Jiang","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/Grouping#addFunctionCommand(String,SolrQueryRequest).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/Grouping#addFunctionCommand(String,SolrQueryRequest).mjava","sourceNew":"  public void addFunctionCommand(String groupByStr, SolrQueryRequest request) throws SyntaxError {\n    QParser parser = QParser.getParser(groupByStr, \"func\", request);\n    Query q = parser.getQuery();\n    final Grouping.Command gc;\n    if (q instanceof FunctionQuery) {\n      ValueSource valueSource = ((FunctionQuery) q).getValueSource();\n      if (valueSource instanceof StrFieldSource) {\n        String field = ((StrFieldSource) valueSource).getField();\n        CommandField commandField = new CommandField();\n        commandField.groupBy = field;\n        gc = commandField;\n      } else {\n        CommandFunc commandFunc = new CommandFunc();\n        commandFunc.groupBy = valueSource;\n        gc = commandFunc;\n      }\n    } else {\n      CommandFunc commandFunc = new CommandFunc();\n      commandFunc.groupBy = new QueryValueSource(q, 0.0f);\n      gc = commandFunc;\n    }\n    gc.groupSort = groupSort;\n    gc.key = groupByStr;\n    gc.numGroups = limitDefault;\n    gc.docsPerGroup = docsPerGroupDefault;\n    gc.groupOffset = groupOffsetDefault;\n    gc.offset = cmd.getOffset();\n    gc.sort = sort;\n    gc.format = defaultFormat;\n    gc.totalCount = defaultTotalCount;\n\n    if (main) {\n      gc.main = true;\n      gc.format = Grouping.Format.simple;\n    }\n\n    if (gc.format == Grouping.Format.simple) {\n      gc.groupOffset = 0;  // doesn't make sense\n    }\n\n    commands.add(gc);\n  }\n\n","sourceOld":"  public void addFunctionCommand(String groupByStr, SolrQueryRequest request) throws SyntaxError {\n    QParser parser = QParser.getParser(groupByStr, \"func\", request);\n    Query q = parser.getQuery();\n    final Grouping.Command gc;\n    if (q instanceof FunctionQuery) {\n      ValueSource valueSource = ((FunctionQuery) q).getValueSource();\n      if (valueSource instanceof StrFieldSource) {\n        String field = ((StrFieldSource) valueSource).getField();\n        CommandField commandField = new CommandField();\n        commandField.groupBy = field;\n        gc = commandField;\n      } else {\n        CommandFunc commandFunc = new CommandFunc();\n        commandFunc.groupBy = valueSource;\n        gc = commandFunc;\n      }\n    } else {\n      CommandFunc commandFunc = new CommandFunc();\n      commandFunc.groupBy = new QueryValueSource(q, 0.0f);\n      gc = commandFunc;\n    }\n    gc.groupSort = groupSort;\n    gc.key = groupByStr;\n    gc.numGroups = limitDefault;\n    gc.docsPerGroup = docsPerGroupDefault;\n    gc.groupOffset = groupOffsetDefault;\n    gc.offset = cmd.getOffset();\n    gc.sort = sort;\n    gc.format = defaultFormat;\n    gc.totalCount = defaultTotalCount;\n\n    if (main) {\n      gc.main = true;\n      gc.format = Grouping.Format.simple;\n    }\n\n    if (gc.format == Grouping.Format.simple) {\n      gc.groupOffset = 0;  // doesn't make sense\n    }\n\n    commands.add(gc);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"716d18f3a9b0993bc679d7fa7abdc9bfb03411ec","date":1376375609,"type":3,"author":"Han Jiang","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/search/Grouping#addFunctionCommand(String,SolrQueryRequest).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/Grouping#addFunctionCommand(String,SolrQueryRequest).mjava","sourceNew":"  public void addFunctionCommand(String groupByStr, SolrQueryRequest request) throws SyntaxError {\n    QParser parser = QParser.getParser(groupByStr, \"func\", request);\n    Query q = parser.getQuery();\n    final Grouping.Command gc;\n    if (q instanceof FunctionQuery) {\n      ValueSource valueSource = ((FunctionQuery) q).getValueSource();\n      if (valueSource instanceof StrFieldSource) {\n        String field = ((StrFieldSource) valueSource).getField();\n        CommandField commandField = new CommandField();\n        commandField.groupBy = field;\n        gc = commandField;\n      } else {\n        CommandFunc commandFunc = new CommandFunc();\n        commandFunc.groupBy = valueSource;\n        gc = commandFunc;\n      }\n    } else {\n      CommandFunc commandFunc = new CommandFunc();\n      commandFunc.groupBy = new QueryValueSource(q, 0.0f);\n      gc = commandFunc;\n    }\n    gc.groupSort = groupSort;\n    gc.key = groupByStr;\n    gc.numGroups = limitDefault;\n    gc.docsPerGroup = docsPerGroupDefault;\n    gc.groupOffset = groupOffsetDefault;\n    gc.offset = cmd.getOffset();\n    gc.sort = sort;\n    gc.format = defaultFormat;\n    gc.totalCount = defaultTotalCount;\n\n    if (main) {\n      gc.main = true;\n      gc.format = Grouping.Format.simple;\n    }\n\n    if (gc.format == Grouping.Format.simple) {\n      gc.groupOffset = 0;  // doesn't make sense\n    }\n\n    commands.add(gc);\n  }\n\n","sourceOld":"  public void addFunctionCommand(String groupByStr, SolrQueryRequest request) throws SyntaxError {\n    QParser parser = QParser.getParser(groupByStr, \"func\", request);\n    Query q = parser.getQuery();\n    final Grouping.Command gc;\n    if (q instanceof FunctionQuery) {\n      ValueSource valueSource = ((FunctionQuery) q).getValueSource();\n      if (valueSource instanceof StrFieldSource) {\n        String field = ((StrFieldSource) valueSource).getField();\n        CommandField commandField = new CommandField();\n        commandField.groupBy = field;\n        gc = commandField;\n      } else {\n        CommandFunc commandFunc = new CommandFunc();\n        commandFunc.groupBy = valueSource;\n        gc = commandFunc;\n      }\n    } else {\n      CommandFunc commandFunc = new CommandFunc();\n      commandFunc.groupBy = new QueryValueSource(q, 0.0f);\n      gc = commandFunc;\n    }\n    gc.groupSort = groupSort;\n    gc.key = groupByStr;\n    gc.numGroups = limitDefault;\n    gc.docsPerGroup = docsPerGroupDefault;\n    gc.groupOffset = groupOffsetDefault;\n    gc.offset = cmd.getOffset();\n    gc.sort = sort;\n    gc.format = defaultFormat;\n    gc.totalCount = defaultTotalCount;\n\n    if (main) {\n      gc.main = true;\n      gc.format = Grouping.Format.simple;\n    }\n\n    if (gc.format == Grouping.Format.simple) {\n      gc.groupOffset = 0;  // doesn't make sense\n    }\n\n    commands.add(gc);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"de65fb6e86ba37c5409efafefe587d0c897c2764","date":1445143934,"type":3,"author":"Christine Poerschke","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/Grouping#addFunctionCommand(String,SolrQueryRequest).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/Grouping#addFunctionCommand(String,SolrQueryRequest).mjava","sourceNew":"  public void addFunctionCommand(String groupByStr, SolrQueryRequest request) throws SyntaxError {\n    QParser parser = QParser.getParser(groupByStr, \"func\", request);\n    Query q = parser.getQuery();\n    final Grouping.Command gc;\n    if (q instanceof FunctionQuery) {\n      ValueSource valueSource = ((FunctionQuery) q).getValueSource();\n      if (valueSource instanceof StrFieldSource) {\n        String field = ((StrFieldSource) valueSource).getField();\n        CommandField commandField = new CommandField();\n        commandField.groupBy = field;\n        gc = commandField;\n      } else {\n        CommandFunc commandFunc = new CommandFunc();\n        commandFunc.groupBy = valueSource;\n        gc = commandFunc;\n      }\n    } else {\n      CommandFunc commandFunc = new CommandFunc();\n      commandFunc.groupBy = new QueryValueSource(q, 0.0f);\n      gc = commandFunc;\n    }\n    gc.withinGroupSort = withinGroupSort;\n    gc.key = groupByStr;\n    gc.numGroups = limitDefault;\n    gc.docsPerGroup = docsPerGroupDefault;\n    gc.groupOffset = groupOffsetDefault;\n    gc.offset = cmd.getOffset();\n    gc.sort = sort;\n    gc.format = defaultFormat;\n    gc.totalCount = defaultTotalCount;\n\n    if (main) {\n      gc.main = true;\n      gc.format = Grouping.Format.simple;\n    }\n\n    if (gc.format == Grouping.Format.simple) {\n      gc.groupOffset = 0;  // doesn't make sense\n    }\n\n    commands.add(gc);\n  }\n\n","sourceOld":"  public void addFunctionCommand(String groupByStr, SolrQueryRequest request) throws SyntaxError {\n    QParser parser = QParser.getParser(groupByStr, \"func\", request);\n    Query q = parser.getQuery();\n    final Grouping.Command gc;\n    if (q instanceof FunctionQuery) {\n      ValueSource valueSource = ((FunctionQuery) q).getValueSource();\n      if (valueSource instanceof StrFieldSource) {\n        String field = ((StrFieldSource) valueSource).getField();\n        CommandField commandField = new CommandField();\n        commandField.groupBy = field;\n        gc = commandField;\n      } else {\n        CommandFunc commandFunc = new CommandFunc();\n        commandFunc.groupBy = valueSource;\n        gc = commandFunc;\n      }\n    } else {\n      CommandFunc commandFunc = new CommandFunc();\n      commandFunc.groupBy = new QueryValueSource(q, 0.0f);\n      gc = commandFunc;\n    }\n    gc.groupSort = groupSort;\n    gc.key = groupByStr;\n    gc.numGroups = limitDefault;\n    gc.docsPerGroup = docsPerGroupDefault;\n    gc.groupOffset = groupOffsetDefault;\n    gc.offset = cmd.getOffset();\n    gc.sort = sort;\n    gc.format = defaultFormat;\n    gc.totalCount = defaultTotalCount;\n\n    if (main) {\n      gc.main = true;\n      gc.format = Grouping.Format.simple;\n    }\n\n    if (gc.format == Grouping.Format.simple) {\n      gc.groupOffset = 0;  // doesn't make sense\n    }\n\n    commands.add(gc);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"09cb2e0d073412dbf283b88292b70aaf62d55276","date":1445181245,"type":3,"author":"Christine Poerschke","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/Grouping#addFunctionCommand(String,SolrQueryRequest).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/Grouping#addFunctionCommand(String,SolrQueryRequest).mjava","sourceNew":"  public void addFunctionCommand(String groupByStr, SolrQueryRequest request) throws SyntaxError {\n    QParser parser = QParser.getParser(groupByStr, \"func\", request);\n    Query q = parser.getQuery();\n    final Grouping.Command gc;\n    if (q instanceof FunctionQuery) {\n      ValueSource valueSource = ((FunctionQuery) q).getValueSource();\n      if (valueSource instanceof StrFieldSource) {\n        String field = ((StrFieldSource) valueSource).getField();\n        CommandField commandField = new CommandField();\n        commandField.groupBy = field;\n        gc = commandField;\n      } else {\n        CommandFunc commandFunc = new CommandFunc();\n        commandFunc.groupBy = valueSource;\n        gc = commandFunc;\n      }\n    } else {\n      CommandFunc commandFunc = new CommandFunc();\n      commandFunc.groupBy = new QueryValueSource(q, 0.0f);\n      gc = commandFunc;\n    }\n    gc.withinGroupSort = withinGroupSort;\n    gc.key = groupByStr;\n    gc.numGroups = limitDefault;\n    gc.docsPerGroup = docsPerGroupDefault;\n    gc.groupOffset = groupOffsetDefault;\n    gc.offset = cmd.getOffset();\n    gc.groupSort = groupSort;\n    gc.format = defaultFormat;\n    gc.totalCount = defaultTotalCount;\n\n    if (main) {\n      gc.main = true;\n      gc.format = Grouping.Format.simple;\n    }\n\n    if (gc.format == Grouping.Format.simple) {\n      gc.groupOffset = 0;  // doesn't make sense\n    }\n\n    commands.add(gc);\n  }\n\n","sourceOld":"  public void addFunctionCommand(String groupByStr, SolrQueryRequest request) throws SyntaxError {\n    QParser parser = QParser.getParser(groupByStr, \"func\", request);\n    Query q = parser.getQuery();\n    final Grouping.Command gc;\n    if (q instanceof FunctionQuery) {\n      ValueSource valueSource = ((FunctionQuery) q).getValueSource();\n      if (valueSource instanceof StrFieldSource) {\n        String field = ((StrFieldSource) valueSource).getField();\n        CommandField commandField = new CommandField();\n        commandField.groupBy = field;\n        gc = commandField;\n      } else {\n        CommandFunc commandFunc = new CommandFunc();\n        commandFunc.groupBy = valueSource;\n        gc = commandFunc;\n      }\n    } else {\n      CommandFunc commandFunc = new CommandFunc();\n      commandFunc.groupBy = new QueryValueSource(q, 0.0f);\n      gc = commandFunc;\n    }\n    gc.withinGroupSort = withinGroupSort;\n    gc.key = groupByStr;\n    gc.numGroups = limitDefault;\n    gc.docsPerGroup = docsPerGroupDefault;\n    gc.groupOffset = groupOffsetDefault;\n    gc.offset = cmd.getOffset();\n    gc.sort = sort;\n    gc.format = defaultFormat;\n    gc.totalCount = defaultTotalCount;\n\n    if (main) {\n      gc.main = true;\n      gc.format = Grouping.Format.simple;\n    }\n\n    if (gc.format == Grouping.Format.simple) {\n      gc.groupOffset = 0;  // doesn't make sense\n    }\n\n    commands.add(gc);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a91f19e3f7576973404e13b7ecfb8ae94f313921","date":1511358452,"type":3,"author":"David Smiley","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/Grouping#addFunctionCommand(String,SolrQueryRequest).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/Grouping#addFunctionCommand(String,SolrQueryRequest).mjava","sourceNew":"  public void addFunctionCommand(String groupByStr, SolrQueryRequest request) throws SyntaxError {\n    QParser parser = QParser.getParser(groupByStr, FunctionQParserPlugin.NAME, request);\n    Query q = parser.getQuery();\n    final Grouping.Command gc;\n    if (q instanceof FunctionQuery) {\n      ValueSource valueSource = ((FunctionQuery) q).getValueSource();\n      if (valueSource instanceof StrFieldSource) {\n        String field = ((StrFieldSource) valueSource).getField();\n        CommandField commandField = new CommandField();\n        commandField.groupBy = field;\n        gc = commandField;\n      } else {\n        CommandFunc commandFunc = new CommandFunc();\n        commandFunc.groupBy = valueSource;\n        gc = commandFunc;\n      }\n    } else {\n      CommandFunc commandFunc = new CommandFunc();\n      commandFunc.groupBy = new QueryValueSource(q, 0.0f);\n      gc = commandFunc;\n    }\n    gc.withinGroupSort = withinGroupSort;\n    gc.key = groupByStr;\n    gc.numGroups = limitDefault;\n    gc.docsPerGroup = docsPerGroupDefault;\n    gc.groupOffset = groupOffsetDefault;\n    gc.offset = cmd.getOffset();\n    gc.groupSort = groupSort;\n    gc.format = defaultFormat;\n    gc.totalCount = defaultTotalCount;\n\n    if (main) {\n      gc.main = true;\n      gc.format = Grouping.Format.simple;\n    }\n\n    if (gc.format == Grouping.Format.simple) {\n      gc.groupOffset = 0;  // doesn't make sense\n    }\n\n    commands.add(gc);\n  }\n\n","sourceOld":"  public void addFunctionCommand(String groupByStr, SolrQueryRequest request) throws SyntaxError {\n    QParser parser = QParser.getParser(groupByStr, \"func\", request);\n    Query q = parser.getQuery();\n    final Grouping.Command gc;\n    if (q instanceof FunctionQuery) {\n      ValueSource valueSource = ((FunctionQuery) q).getValueSource();\n      if (valueSource instanceof StrFieldSource) {\n        String field = ((StrFieldSource) valueSource).getField();\n        CommandField commandField = new CommandField();\n        commandField.groupBy = field;\n        gc = commandField;\n      } else {\n        CommandFunc commandFunc = new CommandFunc();\n        commandFunc.groupBy = valueSource;\n        gc = commandFunc;\n      }\n    } else {\n      CommandFunc commandFunc = new CommandFunc();\n      commandFunc.groupBy = new QueryValueSource(q, 0.0f);\n      gc = commandFunc;\n    }\n    gc.withinGroupSort = withinGroupSort;\n    gc.key = groupByStr;\n    gc.numGroups = limitDefault;\n    gc.docsPerGroup = docsPerGroupDefault;\n    gc.groupOffset = groupOffsetDefault;\n    gc.offset = cmd.getOffset();\n    gc.groupSort = groupSort;\n    gc.format = defaultFormat;\n    gc.totalCount = defaultTotalCount;\n\n    if (main) {\n      gc.main = true;\n      gc.format = Grouping.Format.simple;\n    }\n\n    if (gc.format == Grouping.Format.simple) {\n      gc.groupOffset = 0;  // doesn't make sense\n    }\n\n    commands.add(gc);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4aee4980038a10791618ea04e79233ce5cbf6607","date":1511366888,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/search/Grouping#addFunctionCommand(String,SolrQueryRequest).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/Grouping#addFunctionCommand(String,SolrQueryRequest).mjava","sourceNew":"  public void addFunctionCommand(String groupByStr, SolrQueryRequest request) throws SyntaxError {\n    QParser parser = QParser.getParser(groupByStr, FunctionQParserPlugin.NAME, request);\n    Query q = parser.getQuery();\n    final Grouping.Command gc;\n    if (q instanceof FunctionQuery) {\n      ValueSource valueSource = ((FunctionQuery) q).getValueSource();\n      if (valueSource instanceof StrFieldSource) {\n        String field = ((StrFieldSource) valueSource).getField();\n        CommandField commandField = new CommandField();\n        commandField.groupBy = field;\n        gc = commandField;\n      } else {\n        CommandFunc commandFunc = new CommandFunc();\n        commandFunc.groupBy = valueSource;\n        gc = commandFunc;\n      }\n    } else {\n      CommandFunc commandFunc = new CommandFunc();\n      commandFunc.groupBy = new QueryValueSource(q, 0.0f);\n      gc = commandFunc;\n    }\n    gc.withinGroupSort = withinGroupSort;\n    gc.key = groupByStr;\n    gc.numGroups = limitDefault;\n    gc.docsPerGroup = docsPerGroupDefault;\n    gc.groupOffset = groupOffsetDefault;\n    gc.offset = cmd.getOffset();\n    gc.groupSort = groupSort;\n    gc.format = defaultFormat;\n    gc.totalCount = defaultTotalCount;\n\n    if (main) {\n      gc.main = true;\n      gc.format = Grouping.Format.simple;\n    }\n\n    if (gc.format == Grouping.Format.simple) {\n      gc.groupOffset = 0;  // doesn't make sense\n    }\n\n    commands.add(gc);\n  }\n\n","sourceOld":"  public void addFunctionCommand(String groupByStr, SolrQueryRequest request) throws SyntaxError {\n    QParser parser = QParser.getParser(groupByStr, \"func\", request);\n    Query q = parser.getQuery();\n    final Grouping.Command gc;\n    if (q instanceof FunctionQuery) {\n      ValueSource valueSource = ((FunctionQuery) q).getValueSource();\n      if (valueSource instanceof StrFieldSource) {\n        String field = ((StrFieldSource) valueSource).getField();\n        CommandField commandField = new CommandField();\n        commandField.groupBy = field;\n        gc = commandField;\n      } else {\n        CommandFunc commandFunc = new CommandFunc();\n        commandFunc.groupBy = valueSource;\n        gc = commandFunc;\n      }\n    } else {\n      CommandFunc commandFunc = new CommandFunc();\n      commandFunc.groupBy = new QueryValueSource(q, 0.0f);\n      gc = commandFunc;\n    }\n    gc.withinGroupSort = withinGroupSort;\n    gc.key = groupByStr;\n    gc.numGroups = limitDefault;\n    gc.docsPerGroup = docsPerGroupDefault;\n    gc.groupOffset = groupOffsetDefault;\n    gc.offset = cmd.getOffset();\n    gc.groupSort = groupSort;\n    gc.format = defaultFormat;\n    gc.totalCount = defaultTotalCount;\n\n    if (main) {\n      gc.main = true;\n      gc.format = Grouping.Format.simple;\n    }\n\n    if (gc.format == Grouping.Format.simple) {\n      gc.groupOffset = 0;  // doesn't make sense\n    }\n\n    commands.add(gc);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"50dfd19525c8d73e856dca6edb64b7aea074037f","date":1591579225,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/Grouping#addFunctionCommand(String,SolrQueryRequest).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/Grouping#addFunctionCommand(String,SolrQueryRequest).mjava","sourceNew":"  public void addFunctionCommand(String groupByStr, SolrQueryRequest request) throws SyntaxError {\n    QParser parser = QParser.getParser(groupByStr, FunctionQParserPlugin.NAME, request);\n    Query q = parser.getQuery();\n    @SuppressWarnings({\"rawtypes\"})\n    final Grouping.Command gc;\n    if (q instanceof FunctionQuery) {\n      ValueSource valueSource = ((FunctionQuery) q).getValueSource();\n      if (valueSource instanceof StrFieldSource) {\n        String field = ((StrFieldSource) valueSource).getField();\n        CommandField commandField = new CommandField();\n        commandField.groupBy = field;\n        gc = commandField;\n      } else {\n        CommandFunc commandFunc = new CommandFunc();\n        commandFunc.groupBy = valueSource;\n        gc = commandFunc;\n      }\n    } else {\n      CommandFunc commandFunc = new CommandFunc();\n      commandFunc.groupBy = new QueryValueSource(q, 0.0f);\n      gc = commandFunc;\n    }\n    gc.withinGroupSort = withinGroupSort;\n    gc.key = groupByStr;\n    gc.numGroups = limitDefault;\n    gc.docsPerGroup = docsPerGroupDefault;\n    gc.groupOffset = groupOffsetDefault;\n    gc.offset = cmd.getOffset();\n    gc.groupSort = groupSort;\n    gc.format = defaultFormat;\n    gc.totalCount = defaultTotalCount;\n\n    if (main) {\n      gc.main = true;\n      gc.format = Grouping.Format.simple;\n    }\n\n    if (gc.format == Grouping.Format.simple) {\n      gc.groupOffset = 0;  // doesn't make sense\n    }\n\n    commands.add(gc);\n  }\n\n","sourceOld":"  public void addFunctionCommand(String groupByStr, SolrQueryRequest request) throws SyntaxError {\n    QParser parser = QParser.getParser(groupByStr, FunctionQParserPlugin.NAME, request);\n    Query q = parser.getQuery();\n    final Grouping.Command gc;\n    if (q instanceof FunctionQuery) {\n      ValueSource valueSource = ((FunctionQuery) q).getValueSource();\n      if (valueSource instanceof StrFieldSource) {\n        String field = ((StrFieldSource) valueSource).getField();\n        CommandField commandField = new CommandField();\n        commandField.groupBy = field;\n        gc = commandField;\n      } else {\n        CommandFunc commandFunc = new CommandFunc();\n        commandFunc.groupBy = valueSource;\n        gc = commandFunc;\n      }\n    } else {\n      CommandFunc commandFunc = new CommandFunc();\n      commandFunc.groupBy = new QueryValueSource(q, 0.0f);\n      gc = commandFunc;\n    }\n    gc.withinGroupSort = withinGroupSort;\n    gc.key = groupByStr;\n    gc.numGroups = limitDefault;\n    gc.docsPerGroup = docsPerGroupDefault;\n    gc.groupOffset = groupOffsetDefault;\n    gc.offset = cmd.getOffset();\n    gc.groupSort = groupSort;\n    gc.format = defaultFormat;\n    gc.totalCount = defaultTotalCount;\n\n    if (main) {\n      gc.main = true;\n      gc.format = Grouping.Format.simple;\n    }\n\n    if (gc.format == Grouping.Format.simple) {\n      gc.groupOffset = 0;  // doesn't make sense\n    }\n\n    commands.add(gc);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"de65fb6e86ba37c5409efafefe587d0c897c2764":["19275ba31e621f6da1b83bf13af75233876fd3d4"],"716d18f3a9b0993bc679d7fa7abdc9bfb03411ec":["3cdb67100dc016748799a77218aa409478372d79","19275ba31e621f6da1b83bf13af75233876fd3d4"],"3cdb67100dc016748799a77218aa409478372d79":["3738f7d06920ae25ab2884f4efd80c42e95d6271"],"c26f00b574427b55127e869b935845554afde1fa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","c903c3d15906a3da96b8c0c2fb704491005fdbdb"],"407687e67faf6e1f02a211ca078d8e3eed631027":["3738f7d06920ae25ab2884f4efd80c42e95d6271","3cdb67100dc016748799a77218aa409478372d79"],"a91f19e3f7576973404e13b7ecfb8ae94f313921":["09cb2e0d073412dbf283b88292b70aaf62d55276"],"19275ba31e621f6da1b83bf13af75233876fd3d4":["3cdb67100dc016748799a77218aa409478372d79"],"3738f7d06920ae25ab2884f4efd80c42e95d6271":["c26f00b574427b55127e869b935845554afde1fa"],"50dfd19525c8d73e856dca6edb64b7aea074037f":["4aee4980038a10791618ea04e79233ce5cbf6607"],"09cb2e0d073412dbf283b88292b70aaf62d55276":["de65fb6e86ba37c5409efafefe587d0c897c2764"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"4aee4980038a10791618ea04e79233ce5cbf6607":["09cb2e0d073412dbf283b88292b70aaf62d55276","a91f19e3f7576973404e13b7ecfb8ae94f313921"],"a258fbb26824fd104ed795e5d9033d2d040049ee":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["50dfd19525c8d73e856dca6edb64b7aea074037f"]},"commit2Childs":{"de65fb6e86ba37c5409efafefe587d0c897c2764":["09cb2e0d073412dbf283b88292b70aaf62d55276"],"716d18f3a9b0993bc679d7fa7abdc9bfb03411ec":[],"3cdb67100dc016748799a77218aa409478372d79":["716d18f3a9b0993bc679d7fa7abdc9bfb03411ec","407687e67faf6e1f02a211ca078d8e3eed631027","19275ba31e621f6da1b83bf13af75233876fd3d4"],"c26f00b574427b55127e869b935845554afde1fa":["3738f7d06920ae25ab2884f4efd80c42e95d6271"],"407687e67faf6e1f02a211ca078d8e3eed631027":[],"a91f19e3f7576973404e13b7ecfb8ae94f313921":["4aee4980038a10791618ea04e79233ce5cbf6607"],"19275ba31e621f6da1b83bf13af75233876fd3d4":["de65fb6e86ba37c5409efafefe587d0c897c2764","716d18f3a9b0993bc679d7fa7abdc9bfb03411ec"],"3738f7d06920ae25ab2884f4efd80c42e95d6271":["3cdb67100dc016748799a77218aa409478372d79","407687e67faf6e1f02a211ca078d8e3eed631027"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["c26f00b574427b55127e869b935845554afde1fa"],"09cb2e0d073412dbf283b88292b70aaf62d55276":["a91f19e3f7576973404e13b7ecfb8ae94f313921","4aee4980038a10791618ea04e79233ce5cbf6607"],"50dfd19525c8d73e856dca6edb64b7aea074037f":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c26f00b574427b55127e869b935845554afde1fa","c903c3d15906a3da96b8c0c2fb704491005fdbdb","a258fbb26824fd104ed795e5d9033d2d040049ee"],"4aee4980038a10791618ea04e79233ce5cbf6607":["50dfd19525c8d73e856dca6edb64b7aea074037f"],"a258fbb26824fd104ed795e5d9033d2d040049ee":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["716d18f3a9b0993bc679d7fa7abdc9bfb03411ec","407687e67faf6e1f02a211ca078d8e3eed631027","a258fbb26824fd104ed795e5d9033d2d040049ee","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}