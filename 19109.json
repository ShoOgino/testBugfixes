{"path":"solr/core/src/java/org/apache/solr/core/snapshots/SolrSnapshotsTool#listSnapshots(String).mjava","commits":[{"id":"2f42765a8ec9db88d334d2931fb3df8c5a2c4c3b","date":1478629715,"type":0,"author":"yonik","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/snapshots/SolrSnapshotsTool#listSnapshots(String).mjava","pathOld":"/dev/null","sourceNew":"  @SuppressWarnings(\"rawtypes\")\n  public void listSnapshots(String collectionName) {\n    CollectionAdminRequest.ListSnapshots listSnaps = new CollectionAdminRequest.ListSnapshots(collectionName);\n    CollectionAdminResponse resp;\n    try {\n      resp = listSnaps.process(solrClient);\n      Preconditions.checkState(resp.getStatus() == 0, \"The LISTSNAPSHOTS request failed. The status code is \" + resp.getStatus());\n\n      NamedList apiResult = (NamedList) resp.getResponse().get(SolrSnapshotManager.SNAPSHOTS_INFO);\n      for (int i = 0; i < apiResult.size(); i++) {\n        System.out.println(apiResult.getName(i));\n      }\n\n    } catch (Exception e) {\n      log.error(\"Failed to list snapshots for collection \" + collectionName, e);\n      System.out.println(\"Failed to list snapshots for collection \" + collectionName\n          +\" due to following error : \"+e.getLocalizedMessage());\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"199dfa410f1fdbfd3294106b04096cce5ed34b21","date":1478812506,"type":0,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/core/snapshots/SolrSnapshotsTool#listSnapshots(String).mjava","pathOld":"/dev/null","sourceNew":"  @SuppressWarnings(\"rawtypes\")\n  public void listSnapshots(String collectionName) {\n    CollectionAdminRequest.ListSnapshots listSnaps = new CollectionAdminRequest.ListSnapshots(collectionName);\n    CollectionAdminResponse resp;\n    try {\n      resp = listSnaps.process(solrClient);\n      Preconditions.checkState(resp.getStatus() == 0, \"The LISTSNAPSHOTS request failed. The status code is \" + resp.getStatus());\n\n      NamedList apiResult = (NamedList) resp.getResponse().get(SolrSnapshotManager.SNAPSHOTS_INFO);\n      for (int i = 0; i < apiResult.size(); i++) {\n        System.out.println(apiResult.getName(i));\n      }\n\n    } catch (Exception e) {\n      log.error(\"Failed to list snapshots for collection \" + collectionName, e);\n      System.out.println(\"Failed to list snapshots for collection \" + collectionName\n          +\" due to following error : \"+e.getLocalizedMessage());\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0db83f1bb855a4ac824c9a2a8e1ee9b29a039c15","date":1554259533,"type":3,"author":"Gus Heck","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/snapshots/SolrSnapshotsTool#listSnapshots(String).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/snapshots/SolrSnapshotsTool#listSnapshots(String).mjava","sourceNew":"  @SuppressWarnings(\"rawtypes\")\n  public void listSnapshots(String collectionName) {\n    CollectionAdminRequest.ListSnapshots listSnaps = new CollectionAdminRequest.ListSnapshots(collectionName);\n    CollectionAdminResponse resp;\n    try {\n      resp = listSnaps.process(solrClient);\n      Preconditions.checkState(resp.getStatus() == 0, \"The LISTSNAPSHOTS request failed. The status code is \" + resp.getStatus());\n\n      NamedList apiResult = (NamedList) resp.getResponse().get(SolrSnapshotManager.SNAPSHOTS_INFO);\n      for (int i = 0; i < apiResult.size(); i++) {\n        CLIO.out(apiResult.getName(i));\n      }\n\n    } catch (Exception e) {\n      log.error(\"Failed to list snapshots for collection \" + collectionName, e);\n      CLIO.out(\"Failed to list snapshots for collection \" + collectionName\n          +\" due to following error : \"+e.getLocalizedMessage());\n    }\n  }\n\n","sourceOld":"  @SuppressWarnings(\"rawtypes\")\n  public void listSnapshots(String collectionName) {\n    CollectionAdminRequest.ListSnapshots listSnaps = new CollectionAdminRequest.ListSnapshots(collectionName);\n    CollectionAdminResponse resp;\n    try {\n      resp = listSnaps.process(solrClient);\n      Preconditions.checkState(resp.getStatus() == 0, \"The LISTSNAPSHOTS request failed. The status code is \" + resp.getStatus());\n\n      NamedList apiResult = (NamedList) resp.getResponse().get(SolrSnapshotManager.SNAPSHOTS_INFO);\n      for (int i = 0; i < apiResult.size(); i++) {\n        System.out.println(apiResult.getName(i));\n      }\n\n    } catch (Exception e) {\n      log.error(\"Failed to list snapshots for collection \" + collectionName, e);\n      System.out.println(\"Failed to list snapshots for collection \" + collectionName\n          +\" due to following error : \"+e.getLocalizedMessage());\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"140be51d03394488536f4aacedace29f9b318347","date":1587170432,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/snapshots/SolrSnapshotsTool#listSnapshots(String).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/snapshots/SolrSnapshotsTool#listSnapshots(String).mjava","sourceNew":"  @SuppressWarnings(\"rawtypes\")\n  public void listSnapshots(String collectionName) {\n    CollectionAdminRequest.ListSnapshots listSnaps = new CollectionAdminRequest.ListSnapshots(collectionName);\n    CollectionAdminResponse resp;\n    try {\n      resp = listSnaps.process(solrClient);\n      Preconditions.checkState(resp.getStatus() == 0, \"The LISTSNAPSHOTS request failed. The status code is \" + resp.getStatus());\n\n      NamedList apiResult = (NamedList) resp.getResponse().get(SolrSnapshotManager.SNAPSHOTS_INFO);\n      for (int i = 0; i < apiResult.size(); i++) {\n        CLIO.out(apiResult.getName(i));\n      }\n\n    } catch (Exception e) {\n      log.error(\"Failed to list snapshots for collection {}\", collectionName, e);\n      CLIO.out(\"Failed to list snapshots for collection \" + collectionName\n          +\" due to following error : \"+e.getLocalizedMessage());\n    }\n  }\n\n","sourceOld":"  @SuppressWarnings(\"rawtypes\")\n  public void listSnapshots(String collectionName) {\n    CollectionAdminRequest.ListSnapshots listSnaps = new CollectionAdminRequest.ListSnapshots(collectionName);\n    CollectionAdminResponse resp;\n    try {\n      resp = listSnaps.process(solrClient);\n      Preconditions.checkState(resp.getStatus() == 0, \"The LISTSNAPSHOTS request failed. The status code is \" + resp.getStatus());\n\n      NamedList apiResult = (NamedList) resp.getResponse().get(SolrSnapshotManager.SNAPSHOTS_INFO);\n      for (int i = 0; i < apiResult.size(); i++) {\n        CLIO.out(apiResult.getName(i));\n      }\n\n    } catch (Exception e) {\n      log.error(\"Failed to list snapshots for collection \" + collectionName, e);\n      CLIO.out(\"Failed to list snapshots for collection \" + collectionName\n          +\" due to following error : \"+e.getLocalizedMessage());\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"140be51d03394488536f4aacedace29f9b318347":["0db83f1bb855a4ac824c9a2a8e1ee9b29a039c15"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"2f42765a8ec9db88d334d2931fb3df8c5a2c4c3b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"199dfa410f1fdbfd3294106b04096cce5ed34b21":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","2f42765a8ec9db88d334d2931fb3df8c5a2c4c3b"],"0db83f1bb855a4ac824c9a2a8e1ee9b29a039c15":["2f42765a8ec9db88d334d2931fb3df8c5a2c4c3b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["140be51d03394488536f4aacedace29f9b318347"]},"commit2Childs":{"140be51d03394488536f4aacedace29f9b318347":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["2f42765a8ec9db88d334d2931fb3df8c5a2c4c3b","199dfa410f1fdbfd3294106b04096cce5ed34b21"],"2f42765a8ec9db88d334d2931fb3df8c5a2c4c3b":["199dfa410f1fdbfd3294106b04096cce5ed34b21","0db83f1bb855a4ac824c9a2a8e1ee9b29a039c15"],"199dfa410f1fdbfd3294106b04096cce5ed34b21":[],"0db83f1bb855a4ac824c9a2a8e1ee9b29a039c15":["140be51d03394488536f4aacedace29f9b318347"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["199dfa410f1fdbfd3294106b04096cce5ed34b21","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}