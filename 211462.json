{"path":"lucene/spatial3d/src/test/org/apache/lucene/spatial3d/TestGeo3DPoint#testMinValueQuantization().mjava","commits":[{"id":"689b5e5c42bc5f2285fe820cd123d03e85d9df8c","date":1541139553,"type":0,"author":"iverase","isMerge":false,"pathNew":"lucene/spatial3d/src/test/org/apache/lucene/spatial3d/TestGeo3DPoint#testMinValueQuantization().mjava","pathOld":"/dev/null","sourceNew":"  public void testMinValueQuantization(){\n    int encoded = Geo3DUtil.MIN_ENCODED_VALUE;\n    double minValue= -PlanetModel.WGS84.getMaximumMagnitude();\n    //Normal encoding\n    double decoded = Geo3DUtil.decodeValue(encoded);\n    assertEquals(minValue, decoded, 0d);\n    assertEquals(encoded, Geo3DUtil.encodeValue(decoded));\n    //Encoding floor\n    double decodedFloor = Geo3DUtil.decodeValueFloor(encoded);\n    assertEquals(minValue, decodedFloor, 0d);\n    assertEquals(encoded, Geo3DUtil.encodeValue(decodedFloor));\n    //Encoding ceiling\n    double decodedCeiling = Geo3DUtil.decodeValueCeil(encoded);\n    assertTrue(decodedCeiling > minValue);\n    assertEquals(encoded, Geo3DUtil.encodeValue(decodedCeiling));\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c33ed6824db1d3c54aaf0208e68c3df3fd43d93a","date":1583186777,"type":3,"author":"Nicholas Knize","isMerge":false,"pathNew":"lucene/spatial3d/src/test/org/apache/lucene/spatial3d/TestGeo3DPoint#testMinValueQuantization().mjava","pathOld":"lucene/spatial3d/src/test/org/apache/lucene/spatial3d/TestGeo3DPoint#testMinValueQuantization().mjava","sourceNew":"  public void testMinValueQuantization(){\n    PlanetModel planetModel = randomPlanetModel();\n    int encoded = planetModel.MIN_ENCODED_VALUE;\n    double minValue= -planetModel.getMaximumMagnitude();\n    //Normal encoding\n    double decoded = planetModel.decodeValue(encoded);\n    assertEquals(minValue, decoded, 0d);\n    assertEquals(encoded, planetModel.encodeValue(decoded));\n    //Encoding floor\n    double decodedFloor = Geo3DUtil.decodeValueFloor(encoded, planetModel);\n    assertEquals(minValue, decodedFloor, 0d);\n    assertEquals(encoded, planetModel.encodeValue(decodedFloor));\n    //Encoding ceiling\n    double decodedCeiling = Geo3DUtil.decodeValueCeil(encoded, planetModel);\n    assertTrue(decodedCeiling > minValue);\n    assertEquals(encoded, planetModel.encodeValue(decodedCeiling));\n  }\n\n","sourceOld":"  public void testMinValueQuantization(){\n    int encoded = Geo3DUtil.MIN_ENCODED_VALUE;\n    double minValue= -PlanetModel.WGS84.getMaximumMagnitude();\n    //Normal encoding\n    double decoded = Geo3DUtil.decodeValue(encoded);\n    assertEquals(minValue, decoded, 0d);\n    assertEquals(encoded, Geo3DUtil.encodeValue(decoded));\n    //Encoding floor\n    double decodedFloor = Geo3DUtil.decodeValueFloor(encoded);\n    assertEquals(minValue, decodedFloor, 0d);\n    assertEquals(encoded, Geo3DUtil.encodeValue(decodedFloor));\n    //Encoding ceiling\n    double decodedCeiling = Geo3DUtil.decodeValueCeil(encoded);\n    assertTrue(decodedCeiling > minValue);\n    assertEquals(encoded, Geo3DUtil.encodeValue(decodedCeiling));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"689b5e5c42bc5f2285fe820cd123d03e85d9df8c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"c33ed6824db1d3c54aaf0208e68c3df3fd43d93a":["689b5e5c42bc5f2285fe820cd123d03e85d9df8c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["c33ed6824db1d3c54aaf0208e68c3df3fd43d93a"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["689b5e5c42bc5f2285fe820cd123d03e85d9df8c"],"689b5e5c42bc5f2285fe820cd123d03e85d9df8c":["c33ed6824db1d3c54aaf0208e68c3df3fd43d93a"],"c33ed6824db1d3c54aaf0208e68c3df3fd43d93a":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}