{"path":"lucene/src/java/org/apache/lucene/store/Directory#copy(Directory,String,String,IOContext).mjava","commits":[{"id":"639c36565ce03aed5b0fce7c9e4448e53a1f7efd","date":1308580104,"type":1,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/store/Directory#copy(Directory,String,String,IOContext).mjava","pathOld":"lucene/src/java/org/apache/lucene/store/Directory#copy(Directory,String,String).mjava","sourceNew":"  /**\n   * Copies the file <i>src</i> to {@link Directory} <i>to</i> under the new\n   * file name <i>dest</i>.\n   * <p>\n   * If you want to copy the entire source directory to the destination one, you\n   * can do so like this:\n   * \n   * <pre>\n   * Directory to; // the directory to copy to\n   * for (String file : dir.listAll()) {\n   *   dir.copy(to, file, newFile); // newFile can be either file, or a new name\n   * }\n   * </pre>\n   * <p>\n   * <b>NOTE:</b> this method does not check whether <i>dest<i> exist and will\n   * overwrite it if it does.\n   */\n  public void copy(Directory to, String src, String dest, IOContext context) throws IOException {\n    IndexOutput os = to.createOutput(dest, context);\n    IndexInput is = openInput(src, context);\n    IOException priorException = null;\n    try {\n      is.copyBytes(os, is.length());\n    } catch (IOException ioe) {\n      priorException = ioe;\n    } finally {\n      IOUtils.closeSafely(priorException, os, is);\n    }\n  }\n\n","sourceOld":"  /**\n   * Copies the file <i>src</i> to {@link Directory} <i>to</i> under the new\n   * file name <i>dest</i>.\n   * <p>\n   * If you want to copy the entire source directory to the destination one, you\n   * can do so like this:\n   * \n   * <pre>\n   * Directory to; // the directory to copy to\n   * for (String file : dir.listAll()) {\n   *   dir.copy(to, file, newFile); // newFile can be either file, or a new name\n   * }\n   * </pre>\n   * <p>\n   * <b>NOTE:</b> this method does not check whether <i>dest<i> exist and will\n   * overwrite it if it does.\n   */\n  public void copy(Directory to, String src, String dest) throws IOException {\n    IndexOutput os = to.createOutput(dest);\n    IndexInput is = openInput(src);\n    IOException priorException = null;\n    try {\n      is.copyBytes(os, is.length());\n    } catch (IOException ioe) {\n      priorException = ioe;\n    } finally {\n      IOUtils.closeSafely(priorException, os, is);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d083e83f225b11e5fdd900e83d26ddb385b6955c","date":1310029438,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/store/Directory#copy(Directory,String,String,IOContext).mjava","pathOld":"lucene/src/java/org/apache/lucene/store/Directory#copy(Directory,String,String,IOContext).mjava","sourceNew":"  /**\n   * Copies the file <i>src</i> to {@link Directory} <i>to</i> under the new\n   * file name <i>dest</i>.\n   * <p>\n   * If you want to copy the entire source directory to the destination one, you\n   * can do so like this:\n   * \n   * <pre>\n   * Directory to; // the directory to copy to\n   * for (String file : dir.listAll()) {\n   *   dir.copy(to, file, newFile); // newFile can be either file, or a new name\n   * }\n   * </pre>\n   * <p>\n   * <b>NOTE:</b> this method does not check whether <i>dest<i> exist and will\n   * overwrite it if it does.\n   */\n  public void copy(Directory to, String src, String dest, IOContext context) throws IOException {\n    IndexOutput os = null;\n    IndexInput is = null;\n    IOException priorException = null;\n    try {\n      os = to.createOutput(dest, context);\n      is = openInput(src, context);\n      is.copyBytes(os, is.length());\n    } catch (IOException ioe) {\n      priorException = ioe;\n    } finally {\n      IOUtils.closeSafely(priorException, os, is);\n    }\n  }\n\n","sourceOld":"  /**\n   * Copies the file <i>src</i> to {@link Directory} <i>to</i> under the new\n   * file name <i>dest</i>.\n   * <p>\n   * If you want to copy the entire source directory to the destination one, you\n   * can do so like this:\n   * \n   * <pre>\n   * Directory to; // the directory to copy to\n   * for (String file : dir.listAll()) {\n   *   dir.copy(to, file, newFile); // newFile can be either file, or a new name\n   * }\n   * </pre>\n   * <p>\n   * <b>NOTE:</b> this method does not check whether <i>dest<i> exist and will\n   * overwrite it if it does.\n   */\n  public void copy(Directory to, String src, String dest, IOContext context) throws IOException {\n    IndexOutput os = to.createOutput(dest, context);\n    IndexInput is = openInput(src, context);\n    IOException priorException = null;\n    try {\n      is.copyBytes(os, is.length());\n    } catch (IOException ioe) {\n      priorException = ioe;\n    } finally {\n      IOUtils.closeSafely(priorException, os, is);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ddc4c914be86e34b54f70023f45a60fa7f04e929","date":1310115160,"type":1,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/store/Directory#copy(Directory,String,String,IOContext).mjava","pathOld":"lucene/src/java/org/apache/lucene/store/Directory#copy(Directory,String,String).mjava","sourceNew":"  /**\n   * Copies the file <i>src</i> to {@link Directory} <i>to</i> under the new\n   * file name <i>dest</i>.\n   * <p>\n   * If you want to copy the entire source directory to the destination one, you\n   * can do so like this:\n   * \n   * <pre>\n   * Directory to; // the directory to copy to\n   * for (String file : dir.listAll()) {\n   *   dir.copy(to, file, newFile); // newFile can be either file, or a new name\n   * }\n   * </pre>\n   * <p>\n   * <b>NOTE:</b> this method does not check whether <i>dest<i> exist and will\n   * overwrite it if it does.\n   */\n  public void copy(Directory to, String src, String dest, IOContext context) throws IOException {\n    IndexOutput os = null;\n    IndexInput is = null;\n    IOException priorException = null;\n    try {\n      os = to.createOutput(dest, context);\n      is = openInput(src, context);\n      is.copyBytes(os, is.length());\n    } catch (IOException ioe) {\n      priorException = ioe;\n    } finally {\n      IOUtils.closeSafely(priorException, os, is);\n    }\n  }\n\n","sourceOld":"  /**\n   * Copies the file <i>src</i> to {@link Directory} <i>to</i> under the new\n   * file name <i>dest</i>.\n   * <p>\n   * If you want to copy the entire source directory to the destination one, you\n   * can do so like this:\n   * \n   * <pre>\n   * Directory to; // the directory to copy to\n   * for (String file : dir.listAll()) {\n   *   dir.copy(to, file, newFile); // newFile can be either file, or a new name\n   * }\n   * </pre>\n   * <p>\n   * <b>NOTE:</b> this method does not check whether <i>dest<i> exist and will\n   * overwrite it if it does.\n   */\n  public void copy(Directory to, String src, String dest) throws IOException {\n    IndexOutput os = null;\n    IndexInput is = null;\n    IOException priorException = null;\n    try {\n      os = to.createOutput(dest);\n      is = openInput(src);\n      is.copyBytes(os, is.length());\n    } catch (IOException ioe) {\n      priorException = ioe;\n    } finally {\n      IOUtils.closeSafely(priorException, os, is);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5d004d0e0b3f65bb40da76d476d659d7888270e8","date":1310158940,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/store/Directory#copy(Directory,String,String,IOContext).mjava","pathOld":"lucene/src/java/org/apache/lucene/store/Directory#copy(Directory,String,String).mjava","sourceNew":"  /**\n   * Copies the file <i>src</i> to {@link Directory} <i>to</i> under the new\n   * file name <i>dest</i>.\n   * <p>\n   * If you want to copy the entire source directory to the destination one, you\n   * can do so like this:\n   * \n   * <pre>\n   * Directory to; // the directory to copy to\n   * for (String file : dir.listAll()) {\n   *   dir.copy(to, file, newFile); // newFile can be either file, or a new name\n   * }\n   * </pre>\n   * <p>\n   * <b>NOTE:</b> this method does not check whether <i>dest<i> exist and will\n   * overwrite it if it does.\n   */\n  public void copy(Directory to, String src, String dest, IOContext context) throws IOException {\n    IndexOutput os = null;\n    IndexInput is = null;\n    IOException priorException = null;\n    try {\n      os = to.createOutput(dest, context);\n      is = openInput(src, context);\n      is.copyBytes(os, is.length());\n    } catch (IOException ioe) {\n      priorException = ioe;\n    } finally {\n      IOUtils.closeSafely(priorException, os, is);\n    }\n  }\n\n","sourceOld":"  /**\n   * Copies the file <i>src</i> to {@link Directory} <i>to</i> under the new\n   * file name <i>dest</i>.\n   * <p>\n   * If you want to copy the entire source directory to the destination one, you\n   * can do so like this:\n   * \n   * <pre>\n   * Directory to; // the directory to copy to\n   * for (String file : dir.listAll()) {\n   *   dir.copy(to, file, newFile); // newFile can be either file, or a new name\n   * }\n   * </pre>\n   * <p>\n   * <b>NOTE:</b> this method does not check whether <i>dest<i> exist and will\n   * overwrite it if it does.\n   */\n  public void copy(Directory to, String src, String dest) throws IOException {\n    IndexOutput os = null;\n    IndexInput is = null;\n    IOException priorException = null;\n    try {\n      os = to.createOutput(dest);\n      is = openInput(src);\n      is.copyBytes(os, is.length());\n    } catch (IOException ioe) {\n      priorException = ioe;\n    } finally {\n      IOUtils.closeSafely(priorException, os, is);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"24230fe54121f9be9d85f2c2067536296785e421","date":1314462346,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/store/Directory#copy(Directory,String,String,IOContext).mjava","pathOld":"lucene/src/java/org/apache/lucene/store/Directory#copy(Directory,String,String,IOContext).mjava","sourceNew":"  /**\n   * Copies the file <i>src</i> to {@link Directory} <i>to</i> under the new\n   * file name <i>dest</i>.\n   * <p>\n   * If you want to copy the entire source directory to the destination one, you\n   * can do so like this:\n   * \n   * <pre>\n   * Directory to; // the directory to copy to\n   * for (String file : dir.listAll()) {\n   *   dir.copy(to, file, newFile); // newFile can be either file, or a new name\n   * }\n   * </pre>\n   * <p>\n   * <b>NOTE:</b> this method does not check whether <i>dest<i> exist and will\n   * overwrite it if it does.\n   */\n  public void copy(Directory to, String src, String dest, IOContext context) throws IOException {\n    IndexOutput os = null;\n    IndexInput is = null;\n    IOException priorException = null;\n    try {\n      os = to.createOutput(dest, context);\n      is = openInput(src, context);\n      is.copyBytes(os, is.length());\n    } catch (IOException ioe) {\n      priorException = ioe;\n    } finally {\n      IOUtils.closeWhileHandlingException(priorException, os, is);\n    }\n  }\n\n","sourceOld":"  /**\n   * Copies the file <i>src</i> to {@link Directory} <i>to</i> under the new\n   * file name <i>dest</i>.\n   * <p>\n   * If you want to copy the entire source directory to the destination one, you\n   * can do so like this:\n   * \n   * <pre>\n   * Directory to; // the directory to copy to\n   * for (String file : dir.listAll()) {\n   *   dir.copy(to, file, newFile); // newFile can be either file, or a new name\n   * }\n   * </pre>\n   * <p>\n   * <b>NOTE:</b> this method does not check whether <i>dest<i> exist and will\n   * overwrite it if it does.\n   */\n  public void copy(Directory to, String src, String dest, IOContext context) throws IOException {\n    IndexOutput os = null;\n    IndexInput is = null;\n    IOException priorException = null;\n    try {\n      os = to.createOutput(dest, context);\n      is = openInput(src, context);\n      is.copyBytes(os, is.length());\n    } catch (IOException ioe) {\n      priorException = ioe;\n    } finally {\n      IOUtils.closeSafely(priorException, os, is);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":5,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/store/Directory#copy(Directory,String,String,IOContext).mjava","pathOld":"lucene/src/java/org/apache/lucene/store/Directory#copy(Directory,String,String,IOContext).mjava","sourceNew":"  /**\n   * Copies the file <i>src</i> to {@link Directory} <i>to</i> under the new\n   * file name <i>dest</i>.\n   * <p>\n   * If you want to copy the entire source directory to the destination one, you\n   * can do so like this:\n   * \n   * <pre>\n   * Directory to; // the directory to copy to\n   * for (String file : dir.listAll()) {\n   *   dir.copy(to, file, newFile); // newFile can be either file, or a new name\n   * }\n   * </pre>\n   * <p>\n   * <b>NOTE:</b> this method does not check whether <i>dest<i> exist and will\n   * overwrite it if it does.\n   */\n  public void copy(Directory to, String src, String dest, IOContext context) throws IOException {\n    IndexOutput os = null;\n    IndexInput is = null;\n    IOException priorException = null;\n    try {\n      os = to.createOutput(dest, context);\n      is = openInput(src, context);\n      is.copyBytes(os, is.length());\n    } catch (IOException ioe) {\n      priorException = ioe;\n    } finally {\n      IOUtils.closeWhileHandlingException(priorException, os, is);\n    }\n  }\n\n","sourceOld":"  /**\n   * Copies the file <i>src</i> to {@link Directory} <i>to</i> under the new\n   * file name <i>dest</i>.\n   * <p>\n   * If you want to copy the entire source directory to the destination one, you\n   * can do so like this:\n   * \n   * <pre>\n   * Directory to; // the directory to copy to\n   * for (String file : dir.listAll()) {\n   *   dir.copy(to, file, newFile); // newFile can be either file, or a new name\n   * }\n   * </pre>\n   * <p>\n   * <b>NOTE:</b> this method does not check whether <i>dest<i> exist and will\n   * overwrite it if it does.\n   */\n  public void copy(Directory to, String src, String dest, IOContext context) throws IOException {\n    IndexOutput os = null;\n    IndexInput is = null;\n    IOException priorException = null;\n    try {\n      os = to.createOutput(dest, context);\n      is = openInput(src, context);\n      is.copyBytes(os, is.length());\n    } catch (IOException ioe) {\n      priorException = ioe;\n    } finally {\n      IOUtils.closeWhileHandlingException(priorException, os, is);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"24230fe54121f9be9d85f2c2067536296785e421":["ddc4c914be86e34b54f70023f45a60fa7f04e929"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["24230fe54121f9be9d85f2c2067536296785e421"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"639c36565ce03aed5b0fce7c9e4448e53a1f7efd":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"5d004d0e0b3f65bb40da76d476d659d7888270e8":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","ddc4c914be86e34b54f70023f45a60fa7f04e929"],"ddc4c914be86e34b54f70023f45a60fa7f04e929":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","d083e83f225b11e5fdd900e83d26ddb385b6955c"],"d083e83f225b11e5fdd900e83d26ddb385b6955c":["639c36565ce03aed5b0fce7c9e4448e53a1f7efd","a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"]},"commit2Childs":{"24230fe54121f9be9d85f2c2067536296785e421":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["639c36565ce03aed5b0fce7c9e4448e53a1f7efd","5d004d0e0b3f65bb40da76d476d659d7888270e8","ddc4c914be86e34b54f70023f45a60fa7f04e929","d083e83f225b11e5fdd900e83d26ddb385b6955c"],"639c36565ce03aed5b0fce7c9e4448e53a1f7efd":["d083e83f225b11e5fdd900e83d26ddb385b6955c"],"5d004d0e0b3f65bb40da76d476d659d7888270e8":[],"ddc4c914be86e34b54f70023f45a60fa7f04e929":["24230fe54121f9be9d85f2c2067536296785e421","5d004d0e0b3f65bb40da76d476d659d7888270e8"],"d083e83f225b11e5fdd900e83d26ddb385b6955c":["ddc4c914be86e34b54f70023f45a60fa7f04e929"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["5d004d0e0b3f65bb40da76d476d659d7888270e8","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}