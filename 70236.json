{"path":"src/java/org/apache/lucene/analysis/de/WordlistLoader#makeWordTable(HashSet).mjava","commits":[{"id":"4230eef3a047e2a85e989e7ced62bf7fd4a9f859","date":1080661498,"type":0,"author":"Otis Gospodnetic","isMerge":false,"pathNew":"src/java/org/apache/lucene/analysis/de/WordlistLoader#makeWordTable(HashSet).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Builds a wordlist table, using words as both keys and values\n   * for backward compatibility.\n   *\n   * @param wordSet   stopword set\n   */\n  private static Hashtable makeWordTable(HashSet wordSet) {\n    Hashtable table = new Hashtable();\n    for (Iterator iter = wordSet.iterator(); iter.hasNext();) {\n      String word = (String)iter.next();\n      table.put(word, word);\n    }\n    return table;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"eb502dc71e908fb2c30e64b73e1f7e7b6238f5a2","date":1092688309,"type":4,"author":"Daniel Naber","isMerge":false,"pathNew":"/dev/null","pathOld":"src/java/org/apache/lucene/analysis/de/WordlistLoader#makeWordTable(HashSet).mjava","sourceNew":null,"sourceOld":"  /**\n   * Builds a wordlist table, using words as both keys and values\n   * for backward compatibility.\n   *\n   * @param wordSet   stopword set\n   */\n  private static Hashtable makeWordTable(HashSet wordSet) {\n    Hashtable table = new Hashtable();\n    for (Iterator iter = wordSet.iterator(); iter.hasNext();) {\n      String word = (String)iter.next();\n      table.put(word, word);\n    }\n    return table;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"266fc7afc9269ff0e59f58194b01d4b42784ba3a","date":1095708421,"type":0,"author":"Daniel Naber","isMerge":false,"pathNew":"src/java/org/apache/lucene/analysis/de/WordlistLoader#makeWordTable(HashSet).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Builds a wordlist table, using words as both keys and values\n   * for backward compatibility.\n   *\n   * @param wordSet   stopword set\n   */\n  private static Hashtable makeWordTable(HashSet wordSet) {\n    Hashtable table = new Hashtable();\n    for (Iterator iter = wordSet.iterator(); iter.hasNext();) {\n      String word = (String)iter.next();\n      table.put(word, word);\n    }\n    return table;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c69e98ffd83f56083b99e5443ca713cd5783a2ae","date":1142955392,"type":4,"author":"Yonik Seeley","isMerge":false,"pathNew":"/dev/null","pathOld":"src/java/org/apache/lucene/analysis/de/WordlistLoader#makeWordTable(HashSet).mjava","sourceNew":null,"sourceOld":"  /**\n   * Builds a wordlist table, using words as both keys and values\n   * for backward compatibility.\n   *\n   * @param wordSet   stopword set\n   */\n  private static Hashtable makeWordTable(HashSet wordSet) {\n    Hashtable table = new Hashtable();\n    for (Iterator iter = wordSet.iterator(); iter.hasNext();) {\n      String word = (String)iter.next();\n      table.put(word, word);\n    }\n    return table;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"eb502dc71e908fb2c30e64b73e1f7e7b6238f5a2":["4230eef3a047e2a85e989e7ced62bf7fd4a9f859"],"4230eef3a047e2a85e989e7ced62bf7fd4a9f859":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"c69e98ffd83f56083b99e5443ca713cd5783a2ae":["266fc7afc9269ff0e59f58194b01d4b42784ba3a"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["c69e98ffd83f56083b99e5443ca713cd5783a2ae"],"266fc7afc9269ff0e59f58194b01d4b42784ba3a":["eb502dc71e908fb2c30e64b73e1f7e7b6238f5a2"]},"commit2Childs":{"eb502dc71e908fb2c30e64b73e1f7e7b6238f5a2":["266fc7afc9269ff0e59f58194b01d4b42784ba3a"],"4230eef3a047e2a85e989e7ced62bf7fd4a9f859":["eb502dc71e908fb2c30e64b73e1f7e7b6238f5a2"],"c69e98ffd83f56083b99e5443ca713cd5783a2ae":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["4230eef3a047e2a85e989e7ced62bf7fd4a9f859"],"266fc7afc9269ff0e59f58194b01d4b42784ba3a":["c69e98ffd83f56083b99e5443ca713cd5783a2ae"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}