{"path":"lucene/src/test-framework/org/apache/lucene/analysis/MockTokenFilter#MockTokenFilter(TokenStream,CharacterRunAutomaton,boolean).mjava","commits":[{"id":"f0b9dc55f42953d6740cddbc92cb0d19fe1ba0ce","date":1297021734,"type":1,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/src/test-framework/org/apache/lucene/analysis/MockTokenFilter#MockTokenFilter(TokenStream,CharacterRunAutomaton,boolean).mjava","pathOld":"lucene/src/test/org/apache/lucene/analysis/MockTokenFilter#MockTokenFilter(TokenStream,CharacterRunAutomaton,boolean).mjava","sourceNew":"  public MockTokenFilter(TokenStream input, CharacterRunAutomaton filter, boolean enablePositionIncrements) {\n    super(input);\n    this.filter = filter;\n    this.enablePositionIncrements = enablePositionIncrements;\n  }\n\n","sourceOld":"  public MockTokenFilter(TokenStream input, CharacterRunAutomaton filter, boolean enablePositionIncrements) {\n    super(input);\n    this.filter = filter;\n    this.enablePositionIncrements = enablePositionIncrements;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"29ef99d61cda9641b6250bf9567329a6e65f901d","date":1297244127,"type":1,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test-framework/org/apache/lucene/analysis/MockTokenFilter#MockTokenFilter(TokenStream,CharacterRunAutomaton,boolean).mjava","pathOld":"lucene/src/test/org/apache/lucene/analysis/MockTokenFilter#MockTokenFilter(TokenStream,CharacterRunAutomaton,boolean).mjava","sourceNew":"  public MockTokenFilter(TokenStream input, CharacterRunAutomaton filter, boolean enablePositionIncrements) {\n    super(input);\n    this.filter = filter;\n    this.enablePositionIncrements = enablePositionIncrements;\n  }\n\n","sourceOld":"  public MockTokenFilter(TokenStream input, CharacterRunAutomaton filter, boolean enablePositionIncrements) {\n    super(input);\n    this.filter = filter;\n    this.enablePositionIncrements = enablePositionIncrements;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0ffe3fbd77ef1d62c9164a042f5bcdb625a7c53d","date":1298208351,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test-framework/org/apache/lucene/analysis/MockTokenFilter#MockTokenFilter(TokenStream,CharacterRunAutomaton,boolean).mjava","pathOld":"lucene/src/test-framework/org/apache/lucene/analysis/MockTokenFilter#MockTokenFilter(TokenStream,CharacterRunAutomaton,boolean).mjava","sourceNew":"  /**\n   * Create a new MockTokenFilter.\n   * \n   * @param input TokenStream to filter\n   * @param filter DFA representing the terms that should be removed.\n   * @param enablePositionIncrements true if the removal should accumulate position increments.\n   */\n  public MockTokenFilter(TokenStream input, CharacterRunAutomaton filter, boolean enablePositionIncrements) {\n    super(input);\n    this.filter = filter;\n    this.enablePositionIncrements = enablePositionIncrements;\n  }\n\n","sourceOld":"  public MockTokenFilter(TokenStream input, CharacterRunAutomaton filter, boolean enablePositionIncrements) {\n    super(input);\n    this.filter = filter;\n    this.enablePositionIncrements = enablePositionIncrements;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f1bdbf92da222965b46c0a942c3857ba56e5c638","date":1298297608,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test-framework/org/apache/lucene/analysis/MockTokenFilter#MockTokenFilter(TokenStream,CharacterRunAutomaton,boolean).mjava","pathOld":"lucene/src/test-framework/org/apache/lucene/analysis/MockTokenFilter#MockTokenFilter(TokenStream,CharacterRunAutomaton,boolean).mjava","sourceNew":"  /**\n   * Create a new MockTokenFilter.\n   * \n   * @param input TokenStream to filter\n   * @param filter DFA representing the terms that should be removed.\n   * @param enablePositionIncrements true if the removal should accumulate position increments.\n   */\n  public MockTokenFilter(TokenStream input, CharacterRunAutomaton filter, boolean enablePositionIncrements) {\n    super(input);\n    this.filter = filter;\n    this.enablePositionIncrements = enablePositionIncrements;\n  }\n\n","sourceOld":"  public MockTokenFilter(TokenStream input, CharacterRunAutomaton filter, boolean enablePositionIncrements) {\n    super(input);\n    this.filter = filter;\n    this.enablePositionIncrements = enablePositionIncrements;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bde51b089eb7f86171eb3406e38a274743f9b7ac","date":1298336439,"type":1,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/test-framework/org/apache/lucene/analysis/MockTokenFilter#MockTokenFilter(TokenStream,CharacterRunAutomaton,boolean).mjava","pathOld":"lucene/src/test/org/apache/lucene/analysis/MockTokenFilter#MockTokenFilter(TokenStream,CharacterRunAutomaton,boolean).mjava","sourceNew":"  public MockTokenFilter(TokenStream input, CharacterRunAutomaton filter, boolean enablePositionIncrements) {\n    super(input);\n    this.filter = filter;\n    this.enablePositionIncrements = enablePositionIncrements;\n  }\n\n","sourceOld":"  public MockTokenFilter(TokenStream input, CharacterRunAutomaton filter, boolean enablePositionIncrements) {\n    super(input);\n    this.filter = filter;\n    this.enablePositionIncrements = enablePositionIncrements;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"70a32e313633383bfadd3bbf8b933611c6a07c7c","date":1303945298,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test-framework/org/apache/lucene/analysis/MockTokenFilter#MockTokenFilter(TokenStream,CharacterRunAutomaton,boolean).mjava","pathOld":"lucene/src/test-framework/org/apache/lucene/analysis/MockTokenFilter#MockTokenFilter(TokenStream,CharacterRunAutomaton,boolean).mjava","sourceNew":"  /**\n   * Create a new MockTokenFilter.\n   * \n   * @param input TokenStream to filter\n   * @param filter DFA representing the terms that should be removed.\n   * @param enablePositionIncrements true if the removal should accumulate position increments.\n   */\n  public MockTokenFilter(TokenStream input, CharacterRunAutomaton filter, boolean enablePositionIncrements) {\n    super(input);\n    this.filter = filter;\n    this.enablePositionIncrements = enablePositionIncrements;\n  }\n\n","sourceOld":"  public MockTokenFilter(TokenStream input, CharacterRunAutomaton filter, boolean enablePositionIncrements) {\n    super(input);\n    this.filter = filter;\n    this.enablePositionIncrements = enablePositionIncrements;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7b91922b55d15444d554721b352861d028eb8278","date":1320421415,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test-framework/java/org/apache/lucene/analysis/MockTokenFilter#MockTokenFilter(TokenStream,CharacterRunAutomaton,boolean).mjava","pathOld":"lucene/src/test-framework/org/apache/lucene/analysis/MockTokenFilter#MockTokenFilter(TokenStream,CharacterRunAutomaton,boolean).mjava","sourceNew":"  /**\n   * Create a new MockTokenFilter.\n   * \n   * @param input TokenStream to filter\n   * @param filter DFA representing the terms that should be removed.\n   * @param enablePositionIncrements true if the removal should accumulate position increments.\n   */\n  public MockTokenFilter(TokenStream input, CharacterRunAutomaton filter, boolean enablePositionIncrements) {\n    super(input);\n    this.filter = filter;\n    this.enablePositionIncrements = enablePositionIncrements;\n  }\n\n","sourceOld":"  /**\n   * Create a new MockTokenFilter.\n   * \n   * @param input TokenStream to filter\n   * @param filter DFA representing the terms that should be removed.\n   * @param enablePositionIncrements true if the removal should accumulate position increments.\n   */\n  public MockTokenFilter(TokenStream input, CharacterRunAutomaton filter, boolean enablePositionIncrements) {\n    super(input);\n    this.filter = filter;\n    this.enablePositionIncrements = enablePositionIncrements;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"7b91922b55d15444d554721b352861d028eb8278":["0ffe3fbd77ef1d62c9164a042f5bcdb625a7c53d"],"0ffe3fbd77ef1d62c9164a042f5bcdb625a7c53d":["f0b9dc55f42953d6740cddbc92cb0d19fe1ba0ce"],"70a32e313633383bfadd3bbf8b933611c6a07c7c":["bde51b089eb7f86171eb3406e38a274743f9b7ac"],"f1bdbf92da222965b46c0a942c3857ba56e5c638":["29ef99d61cda9641b6250bf9567329a6e65f901d","0ffe3fbd77ef1d62c9164a042f5bcdb625a7c53d"],"29ef99d61cda9641b6250bf9567329a6e65f901d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","f0b9dc55f42953d6740cddbc92cb0d19fe1ba0ce"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"bde51b089eb7f86171eb3406e38a274743f9b7ac":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","0ffe3fbd77ef1d62c9164a042f5bcdb625a7c53d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["7b91922b55d15444d554721b352861d028eb8278"],"f0b9dc55f42953d6740cddbc92cb0d19fe1ba0ce":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"7b91922b55d15444d554721b352861d028eb8278":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"0ffe3fbd77ef1d62c9164a042f5bcdb625a7c53d":["7b91922b55d15444d554721b352861d028eb8278","f1bdbf92da222965b46c0a942c3857ba56e5c638","bde51b089eb7f86171eb3406e38a274743f9b7ac"],"70a32e313633383bfadd3bbf8b933611c6a07c7c":[],"f1bdbf92da222965b46c0a942c3857ba56e5c638":[],"29ef99d61cda9641b6250bf9567329a6e65f901d":["f1bdbf92da222965b46c0a942c3857ba56e5c638"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["29ef99d61cda9641b6250bf9567329a6e65f901d","bde51b089eb7f86171eb3406e38a274743f9b7ac","f0b9dc55f42953d6740cddbc92cb0d19fe1ba0ce"],"bde51b089eb7f86171eb3406e38a274743f9b7ac":["70a32e313633383bfadd3bbf8b933611c6a07c7c"],"f0b9dc55f42953d6740cddbc92cb0d19fe1ba0ce":["0ffe3fbd77ef1d62c9164a042f5bcdb625a7c53d","29ef99d61cda9641b6250bf9567329a6e65f901d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["70a32e313633383bfadd3bbf8b933611c6a07c7c","f1bdbf92da222965b46c0a942c3857ba56e5c638","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}