{"path":"src/test/org/apache/lucene/analysis/tokenattributes/TestSimpleAttributeImpls#testTypeAttribute().mjava","commits":[{"id":"881f3cbef4fe1d74529367acf824c7394e2dd11c","date":1248894847,"type":0,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/test/org/apache/lucene/analysis/tokenattributes/TestSimpleAttributeImpls#testTypeAttribute().mjava","pathOld":"/dev/null","sourceNew":"  public void testTypeAttribute() throws Exception {\n    TypeAttributeImpl att = new TypeAttributeImpl();\n    assertEquals(TypeAttributeImpl.DEFAULT_TYPE, att.type());\n\n    att.setType(\"hallo\");\n    assertEquals(\"type=hallo\", att.toString());\n\n    TypeAttributeImpl att2 = (TypeAttributeImpl) assertCloneIsEqual(att);\n    assertEquals(\"hallo\", att2.type());\n\n    att2 = (TypeAttributeImpl) assertCopyIsEqual(att);\n    assertEquals(\"hallo\", att2.type());\n    \n    att.clear();\n    assertEquals(TypeAttributeImpl.DEFAULT_TYPE, att.type());\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"66dab5a56cf3f9a3724b15a119a30fd77cbcb662","date":1268038828,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/test/org/apache/lucene/analysis/tokenattributes/TestSimpleAttributeImpls#testTypeAttribute().mjava","pathOld":"src/test/org/apache/lucene/analysis/tokenattributes/TestSimpleAttributeImpls#testTypeAttribute().mjava","sourceNew":"  public void testTypeAttribute() throws Exception {\n    TypeAttributeImpl att = new TypeAttributeImpl();\n    assertEquals(TypeAttribute.DEFAULT_TYPE, att.type());\n\n    att.setType(\"hallo\");\n    assertEquals(\"type=hallo\", att.toString());\n\n    TypeAttributeImpl att2 = (TypeAttributeImpl) assertCloneIsEqual(att);\n    assertEquals(\"hallo\", att2.type());\n\n    att2 = (TypeAttributeImpl) assertCopyIsEqual(att);\n    assertEquals(\"hallo\", att2.type());\n    \n    att.clear();\n    assertEquals(TypeAttribute.DEFAULT_TYPE, att.type());\n  }\n\n","sourceOld":"  public void testTypeAttribute() throws Exception {\n    TypeAttributeImpl att = new TypeAttributeImpl();\n    assertEquals(TypeAttributeImpl.DEFAULT_TYPE, att.type());\n\n    att.setType(\"hallo\");\n    assertEquals(\"type=hallo\", att.toString());\n\n    TypeAttributeImpl att2 = (TypeAttributeImpl) assertCloneIsEqual(att);\n    assertEquals(\"hallo\", att2.type());\n\n    att2 = (TypeAttributeImpl) assertCopyIsEqual(att);\n    assertEquals(\"hallo\", att2.type());\n    \n    att.clear();\n    assertEquals(TypeAttributeImpl.DEFAULT_TYPE, att.type());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/analysis/tokenattributes/TestSimpleAttributeImpls#testTypeAttribute().mjava","pathOld":"src/test/org/apache/lucene/analysis/tokenattributes/TestSimpleAttributeImpls#testTypeAttribute().mjava","sourceNew":"  public void testTypeAttribute() throws Exception {\n    TypeAttributeImpl att = new TypeAttributeImpl();\n    assertEquals(TypeAttribute.DEFAULT_TYPE, att.type());\n\n    att.setType(\"hallo\");\n    assertEquals(\"type=hallo\", att.toString());\n\n    TypeAttributeImpl att2 = (TypeAttributeImpl) assertCloneIsEqual(att);\n    assertEquals(\"hallo\", att2.type());\n\n    att2 = (TypeAttributeImpl) assertCopyIsEqual(att);\n    assertEquals(\"hallo\", att2.type());\n    \n    att.clear();\n    assertEquals(TypeAttribute.DEFAULT_TYPE, att.type());\n  }\n\n","sourceOld":"  public void testTypeAttribute() throws Exception {\n    TypeAttributeImpl att = new TypeAttributeImpl();\n    assertEquals(TypeAttribute.DEFAULT_TYPE, att.type());\n\n    att.setType(\"hallo\");\n    assertEquals(\"type=hallo\", att.toString());\n\n    TypeAttributeImpl att2 = (TypeAttributeImpl) assertCloneIsEqual(att);\n    assertEquals(\"hallo\", att2.type());\n\n    att2 = (TypeAttributeImpl) assertCopyIsEqual(att);\n    assertEquals(\"hallo\", att2.type());\n    \n    att.clear();\n    assertEquals(TypeAttribute.DEFAULT_TYPE, att.type());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"881f3cbef4fe1d74529367acf824c7394e2dd11c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"66dab5a56cf3f9a3724b15a119a30fd77cbcb662":["881f3cbef4fe1d74529367acf824c7394e2dd11c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["66dab5a56cf3f9a3724b15a119a30fd77cbcb662"]},"commit2Childs":{"881f3cbef4fe1d74529367acf824c7394e2dd11c":["66dab5a56cf3f9a3724b15a119a30fd77cbcb662"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["881f3cbef4fe1d74529367acf824c7394e2dd11c"],"66dab5a56cf3f9a3724b15a119a30fd77cbcb662":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}