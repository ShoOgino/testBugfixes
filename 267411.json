{"path":"solr/core/src/java/org/apache/solr/servlet/HttpSolrCall#getRemoteCoreUrl(String,String).mjava","commits":[{"id":"813335f324f8bd40ae4d83d8391674b42b536cc0","date":1555591986,"type":1,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/servlet/HttpSolrCall#getRemoteCoreUrl(String,String).mjava","pathOld":"solr/core/src/java/org/apache/solr/servlet/HttpSolrCall#getRemotCoreUrl(String,String).mjava","sourceNew":"  protected String getRemoteCoreUrl(String collectionName, String origCorename) {\n    ClusterState clusterState = cores.getZkController().getClusterState();\n    final DocCollection docCollection = clusterState.getCollectionOrNull(collectionName);\n    Slice[] slices = (docCollection != null) ? docCollection.getActiveSlicesArr() : null;\n    List<Slice> activeSlices = new ArrayList<>();\n    boolean byCoreName = false;\n\n    if (slices == null) {\n      byCoreName = true;\n      activeSlices = new ArrayList<>();\n      getSlicesForCollections(clusterState, activeSlices, true);\n      if (activeSlices.isEmpty()) {\n        getSlicesForCollections(clusterState, activeSlices, false);\n      }\n    } else {\n      for (Slice s : slices) {\n        activeSlices.add(s);\n      }\n    }\n\n    if (activeSlices.isEmpty()) {\n      return null;\n    }\n\n    // XXX (ab) most likely this is not needed? it seems all code paths\n    // XXX already make sure the collectionName is on the list\n    if (!collectionsList.contains(collectionName)) {\n      collectionsList = new ArrayList<>(collectionsList);\n      collectionsList.add(collectionName);\n    }\n    String coreUrl = getCoreUrl(collectionName, origCorename, clusterState,\n        activeSlices, byCoreName, true);\n\n    if (coreUrl == null) {\n      coreUrl = getCoreUrl(collectionName, origCorename, clusterState,\n          activeSlices, byCoreName, false);\n    }\n\n    return coreUrl;\n  }\n\n","sourceOld":"  protected String getRemotCoreUrl(String collectionName, String origCorename) {\n    ClusterState clusterState = cores.getZkController().getClusterState();\n    final DocCollection docCollection = clusterState.getCollectionOrNull(collectionName);\n    Slice[] slices = (docCollection != null) ? docCollection.getActiveSlicesArr() : null;\n    List<Slice> activeSlices = new ArrayList<>();\n    boolean byCoreName = false;\n\n    if (slices == null) {\n      byCoreName = true;\n      activeSlices = new ArrayList<>();\n      getSlicesForCollections(clusterState, activeSlices, true);\n      if (activeSlices.isEmpty()) {\n        getSlicesForCollections(clusterState, activeSlices, false);\n      }\n    } else {\n      for (Slice s : slices) {\n        activeSlices.add(s);\n      }\n    }\n\n    if (activeSlices.isEmpty()) {\n      return null;\n    }\n\n    collectionsList.add(collectionName);\n    String coreUrl = getCoreUrl(collectionName, origCorename, clusterState,\n        activeSlices, byCoreName, true);\n\n    if (coreUrl == null) {\n      coreUrl = getCoreUrl(collectionName, origCorename, clusterState,\n          activeSlices, byCoreName, false);\n    }\n\n    return coreUrl;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3ce90eebc5ea0ea353b865b3db6dbe0c51fc1710","date":1571130800,"type":3,"author":"Ishan Chattopadhyaya","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/servlet/HttpSolrCall#getRemoteCoreUrl(String,String).mjava","pathOld":"solr/core/src/java/org/apache/solr/servlet/HttpSolrCall#getRemoteCoreUrl(String,String).mjava","sourceNew":"  protected String getRemoteCoreUrl(String collectionName, String origCorename) throws SolrException {\n    ClusterState clusterState = cores.getZkController().getClusterState();\n    final DocCollection docCollection = clusterState.getCollectionOrNull(collectionName);\n    Slice[] slices = (docCollection != null) ? docCollection.getActiveSlicesArr() : null;\n    List<Slice> activeSlices = new ArrayList<>();\n    boolean byCoreName = false;\n\n    int totalReplicas = 0;\n\n    if (slices == null) {\n      byCoreName = true;\n      activeSlices = new ArrayList<>();\n      getSlicesForCollections(clusterState, activeSlices, true);\n      if (activeSlices.isEmpty()) {\n        getSlicesForCollections(clusterState, activeSlices, false);\n      }\n    } else {\n      for (Slice s : slices) {\n        activeSlices.add(s);\n      }\n    }\n\n    for (Slice s: activeSlices) {\n      totalReplicas += s.getReplicas().size();\n    }\n    if (activeSlices.isEmpty()) {\n      return null;\n    }\n\n    // XXX (ab) most likely this is not needed? it seems all code paths\n    // XXX already make sure the collectionName is on the list\n    if (!collectionsList.contains(collectionName)) {\n      collectionsList = new ArrayList<>(collectionsList);\n      collectionsList.add(collectionName);\n    }\n    String coreUrl = getCoreUrl(collectionName, origCorename, clusterState,\n        activeSlices, byCoreName, true);\n\n    // Avoid getting into a recursive loop of requests being forwarded by\n    // stopping forwarding and erroring out after (totalReplicas) forwards\n    if (coreUrl == null) {\n      if (queryParams.getInt(INTERNAL_REQUEST_COUNT, 0) > totalReplicas){\n        throw new SolrException(SolrException.ErrorCode.INVALID_STATE,\n            \"No active replicas found for collection: \" + collectionName);\n      }\n      coreUrl = getCoreUrl(collectionName, origCorename, clusterState,\n          activeSlices, byCoreName, false);\n    }\n\n    return coreUrl;\n  }\n\n","sourceOld":"  protected String getRemoteCoreUrl(String collectionName, String origCorename) {\n    ClusterState clusterState = cores.getZkController().getClusterState();\n    final DocCollection docCollection = clusterState.getCollectionOrNull(collectionName);\n    Slice[] slices = (docCollection != null) ? docCollection.getActiveSlicesArr() : null;\n    List<Slice> activeSlices = new ArrayList<>();\n    boolean byCoreName = false;\n\n    if (slices == null) {\n      byCoreName = true;\n      activeSlices = new ArrayList<>();\n      getSlicesForCollections(clusterState, activeSlices, true);\n      if (activeSlices.isEmpty()) {\n        getSlicesForCollections(clusterState, activeSlices, false);\n      }\n    } else {\n      for (Slice s : slices) {\n        activeSlices.add(s);\n      }\n    }\n\n    if (activeSlices.isEmpty()) {\n      return null;\n    }\n\n    // XXX (ab) most likely this is not needed? it seems all code paths\n    // XXX already make sure the collectionName is on the list\n    if (!collectionsList.contains(collectionName)) {\n      collectionsList = new ArrayList<>(collectionsList);\n      collectionsList.add(collectionName);\n    }\n    String coreUrl = getCoreUrl(collectionName, origCorename, clusterState,\n        activeSlices, byCoreName, true);\n\n    if (coreUrl == null) {\n      coreUrl = getCoreUrl(collectionName, origCorename, clusterState,\n          activeSlices, byCoreName, false);\n    }\n\n    return coreUrl;\n  }\n\n","bugFix":["813335f324f8bd40ae4d83d8391674b42b536cc0"],"bugIntro":["79411f20952f22cd9b944ff6f25f051554ff8e53"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"b0b597c65628ca9e73913a07e81691f8229bae35","date":1571224353,"type":3,"author":"jimczi","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/servlet/HttpSolrCall#getRemoteCoreUrl(String,String).mjava","pathOld":"solr/core/src/java/org/apache/solr/servlet/HttpSolrCall#getRemoteCoreUrl(String,String).mjava","sourceNew":"  protected String getRemoteCoreUrl(String collectionName, String origCorename) throws SolrException {\n    ClusterState clusterState = cores.getZkController().getClusterState();\n    final DocCollection docCollection = clusterState.getCollectionOrNull(collectionName);\n    Slice[] slices = (docCollection != null) ? docCollection.getActiveSlicesArr() : null;\n    List<Slice> activeSlices = new ArrayList<>();\n    boolean byCoreName = false;\n\n    int totalReplicas = 0;\n\n    if (slices == null) {\n      byCoreName = true;\n      activeSlices = new ArrayList<>();\n      getSlicesForCollections(clusterState, activeSlices, true);\n      if (activeSlices.isEmpty()) {\n        getSlicesForCollections(clusterState, activeSlices, false);\n      }\n    } else {\n      for (Slice s : slices) {\n        activeSlices.add(s);\n      }\n    }\n\n    for (Slice s: activeSlices) {\n      totalReplicas += s.getReplicas().size();\n    }\n    if (activeSlices.isEmpty()) {\n      return null;\n    }\n\n    // XXX (ab) most likely this is not needed? it seems all code paths\n    // XXX already make sure the collectionName is on the list\n    if (!collectionsList.contains(collectionName)) {\n      collectionsList = new ArrayList<>(collectionsList);\n      collectionsList.add(collectionName);\n    }\n    String coreUrl = getCoreUrl(collectionName, origCorename, clusterState,\n        activeSlices, byCoreName, true);\n\n    // Avoid getting into a recursive loop of requests being forwarded by\n    // stopping forwarding and erroring out after (totalReplicas) forwards\n    if (coreUrl == null) {\n      if (queryParams.getInt(INTERNAL_REQUEST_COUNT, 0) > totalReplicas){\n        throw new SolrException(SolrException.ErrorCode.INVALID_STATE,\n            \"No active replicas found for collection: \" + collectionName);\n      }\n      coreUrl = getCoreUrl(collectionName, origCorename, clusterState,\n          activeSlices, byCoreName, false);\n    }\n\n    return coreUrl;\n  }\n\n","sourceOld":"  protected String getRemoteCoreUrl(String collectionName, String origCorename) {\n    ClusterState clusterState = cores.getZkController().getClusterState();\n    final DocCollection docCollection = clusterState.getCollectionOrNull(collectionName);\n    Slice[] slices = (docCollection != null) ? docCollection.getActiveSlicesArr() : null;\n    List<Slice> activeSlices = new ArrayList<>();\n    boolean byCoreName = false;\n\n    if (slices == null) {\n      byCoreName = true;\n      activeSlices = new ArrayList<>();\n      getSlicesForCollections(clusterState, activeSlices, true);\n      if (activeSlices.isEmpty()) {\n        getSlicesForCollections(clusterState, activeSlices, false);\n      }\n    } else {\n      for (Slice s : slices) {\n        activeSlices.add(s);\n      }\n    }\n\n    if (activeSlices.isEmpty()) {\n      return null;\n    }\n\n    // XXX (ab) most likely this is not needed? it seems all code paths\n    // XXX already make sure the collectionName is on the list\n    if (!collectionsList.contains(collectionName)) {\n      collectionsList = new ArrayList<>(collectionsList);\n      collectionsList.add(collectionName);\n    }\n    String coreUrl = getCoreUrl(collectionName, origCorename, clusterState,\n        activeSlices, byCoreName, true);\n\n    if (coreUrl == null) {\n      coreUrl = getCoreUrl(collectionName, origCorename, clusterState,\n          activeSlices, byCoreName, false);\n    }\n\n    return coreUrl;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"79411f20952f22cd9b944ff6f25f051554ff8e53","date":1601389092,"type":3,"author":"Munendra S N","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/servlet/HttpSolrCall#getRemoteCoreUrl(String,String).mjava","pathOld":"solr/core/src/java/org/apache/solr/servlet/HttpSolrCall#getRemoteCoreUrl(String,String).mjava","sourceNew":"  protected String getRemoteCoreUrl(String collectionName, String origCorename) throws SolrException {\n    ClusterState clusterState = cores.getZkController().getClusterState();\n    final DocCollection docCollection = clusterState.getCollectionOrNull(collectionName);\n    Slice[] slices = (docCollection != null) ? docCollection.getActiveSlicesArr() : null;\n    List<Slice> activeSlices = new ArrayList<>();\n    boolean byCoreName = false;\n\n    int totalReplicas = 0;\n\n    if (slices == null) {\n      byCoreName = true;\n      activeSlices = new ArrayList<>();\n      getSlicesForCollections(clusterState, activeSlices, true);\n      if (activeSlices.isEmpty()) {\n        getSlicesForCollections(clusterState, activeSlices, false);\n      }\n    } else {\n      Collections.addAll(activeSlices, slices);\n    }\n\n    for (Slice s: activeSlices) {\n      totalReplicas += s.getReplicas().size();\n    }\n    if (activeSlices.isEmpty()) {\n      return null;\n    }\n\n    // XXX (ab) most likely this is not needed? it seems all code paths\n    // XXX already make sure the collectionName is on the list\n    if (!collectionsList.contains(collectionName)) {\n      collectionsList = new ArrayList<>(collectionsList);\n      collectionsList.add(collectionName);\n    }\n\n    // Avoid getting into a recursive loop of requests being forwarded by\n    // stopping forwarding and erroring out after (totalReplicas) forwards\n    if (queryParams.getInt(INTERNAL_REQUEST_COUNT, 0) > totalReplicas){\n      throw new SolrException(SolrException.ErrorCode.INVALID_STATE,\n          \"No active replicas found for collection: \" + collectionName);\n    }\n\n    String coreUrl = getCoreUrl(collectionName, origCorename, clusterState,\n        activeSlices, byCoreName, true);\n\n    if (coreUrl == null) {\n      coreUrl = getCoreUrl(collectionName, origCorename, clusterState,\n          activeSlices, byCoreName, false);\n    }\n\n    return coreUrl;\n  }\n\n","sourceOld":"  protected String getRemoteCoreUrl(String collectionName, String origCorename) throws SolrException {\n    ClusterState clusterState = cores.getZkController().getClusterState();\n    final DocCollection docCollection = clusterState.getCollectionOrNull(collectionName);\n    Slice[] slices = (docCollection != null) ? docCollection.getActiveSlicesArr() : null;\n    List<Slice> activeSlices = new ArrayList<>();\n    boolean byCoreName = false;\n\n    int totalReplicas = 0;\n\n    if (slices == null) {\n      byCoreName = true;\n      activeSlices = new ArrayList<>();\n      getSlicesForCollections(clusterState, activeSlices, true);\n      if (activeSlices.isEmpty()) {\n        getSlicesForCollections(clusterState, activeSlices, false);\n      }\n    } else {\n      for (Slice s : slices) {\n        activeSlices.add(s);\n      }\n    }\n\n    for (Slice s: activeSlices) {\n      totalReplicas += s.getReplicas().size();\n    }\n    if (activeSlices.isEmpty()) {\n      return null;\n    }\n\n    // XXX (ab) most likely this is not needed? it seems all code paths\n    // XXX already make sure the collectionName is on the list\n    if (!collectionsList.contains(collectionName)) {\n      collectionsList = new ArrayList<>(collectionsList);\n      collectionsList.add(collectionName);\n    }\n    String coreUrl = getCoreUrl(collectionName, origCorename, clusterState,\n        activeSlices, byCoreName, true);\n\n    // Avoid getting into a recursive loop of requests being forwarded by\n    // stopping forwarding and erroring out after (totalReplicas) forwards\n    if (coreUrl == null) {\n      if (queryParams.getInt(INTERNAL_REQUEST_COUNT, 0) > totalReplicas){\n        throw new SolrException(SolrException.ErrorCode.INVALID_STATE,\n            \"No active replicas found for collection: \" + collectionName);\n      }\n      coreUrl = getCoreUrl(collectionName, origCorename, clusterState,\n          activeSlices, byCoreName, false);\n    }\n\n    return coreUrl;\n  }\n\n","bugFix":["0713b289be914e52cc2ec942aeb7306f0593a787","c84df91ca6a2e8d6f26f185663112546a27f6b45","3ce90eebc5ea0ea353b865b3db6dbe0c51fc1710","a760e2135dfe20a04dea360873d4de1c6a0280bb"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"79411f20952f22cd9b944ff6f25f051554ff8e53":["3ce90eebc5ea0ea353b865b3db6dbe0c51fc1710"],"813335f324f8bd40ae4d83d8391674b42b536cc0":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"3ce90eebc5ea0ea353b865b3db6dbe0c51fc1710":["813335f324f8bd40ae4d83d8391674b42b536cc0"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["79411f20952f22cd9b944ff6f25f051554ff8e53"],"b0b597c65628ca9e73913a07e81691f8229bae35":["813335f324f8bd40ae4d83d8391674b42b536cc0","3ce90eebc5ea0ea353b865b3db6dbe0c51fc1710"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["813335f324f8bd40ae4d83d8391674b42b536cc0"],"79411f20952f22cd9b944ff6f25f051554ff8e53":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"813335f324f8bd40ae4d83d8391674b42b536cc0":["3ce90eebc5ea0ea353b865b3db6dbe0c51fc1710","b0b597c65628ca9e73913a07e81691f8229bae35"],"3ce90eebc5ea0ea353b865b3db6dbe0c51fc1710":["79411f20952f22cd9b944ff6f25f051554ff8e53","b0b597c65628ca9e73913a07e81691f8229bae35"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"b0b597c65628ca9e73913a07e81691f8229bae35":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817","b0b597c65628ca9e73913a07e81691f8229bae35"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}