{"path":"lucene/src/java/org/apache/lucene/index/IndexDeletionPolicy#onCommit(List[#-extends-IndexCommit]).mjava","commits":[{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/IndexDeletionPolicy#onCommit(List[#-extends-IndexCommit]).mjava","pathOld":"src/java/org/apache/lucene/index/IndexDeletionPolicy#onCommit(List[#-extends-IndexCommit]).mjava","sourceNew":"  /**\n   * <p>This is called each time the writer completed a commit.\n   * This gives the policy a chance to remove old commit points\n   * with each commit.</p>\n   *\n   * <p>The policy may now choose to delete old commit points \n   * by calling method {@link IndexCommit#delete delete()} \n   * of {@link IndexCommit}.</p>\n   * \n   * <p>This method is only called when {@link\n   * IndexWriter#commit} or {@link IndexWriter#close} is\n   * called, or possibly not at all if the {@link\n   * IndexWriter#rollback} is called.\n   *\n   * <p><u>Note:</u> the last CommitPoint is the most recent one,\n   * i.e. the \"front index state\". Be careful not to delete it,\n   * unless you know for sure what you are doing, and unless \n   * you can afford to lose the index content while doing that.\n   *  \n   * @param commits List of {@link IndexCommit},\n   *  sorted by age (the 0th one is the oldest commit).\n   */\n  public void onCommit(List<? extends IndexCommit> commits) throws IOException;\n\n","sourceOld":"  /**\n   * <p>This is called each time the writer completed a commit.\n   * This gives the policy a chance to remove old commit points\n   * with each commit.</p>\n   *\n   * <p>The policy may now choose to delete old commit points \n   * by calling method {@link IndexCommit#delete delete()} \n   * of {@link IndexCommit}.</p>\n   * \n   * <p>This method is only called when {@link\n   * IndexWriter#commit} or {@link IndexWriter#close} is\n   * called, or possibly not at all if the {@link\n   * IndexWriter#rollback} is called.\n   *\n   * <p><u>Note:</u> the last CommitPoint is the most recent one,\n   * i.e. the \"front index state\". Be careful not to delete it,\n   * unless you know for sure what you are doing, and unless \n   * you can afford to lose the index content while doing that.\n   *  \n   * @param commits List of {@link IndexCommit},\n   *  sorted by age (the 0th one is the oldest commit).\n   */\n  public void onCommit(List<? extends IndexCommit> commits) throws IOException;\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":5,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/IndexDeletionPolicy#onCommit(List[#-extends-IndexCommit]).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/IndexDeletionPolicy#onCommit(List[#-extends-IndexCommit]).mjava","sourceNew":"  /**\n   * <p>This is called each time the writer completed a commit.\n   * This gives the policy a chance to remove old commit points\n   * with each commit.</p>\n   *\n   * <p>The policy may now choose to delete old commit points \n   * by calling method {@link IndexCommit#delete delete()} \n   * of {@link IndexCommit}.</p>\n   * \n   * <p>This method is only called when {@link\n   * IndexWriter#commit} or {@link IndexWriter#close} is\n   * called, or possibly not at all if the {@link\n   * IndexWriter#rollback} is called.\n   *\n   * <p><u>Note:</u> the last CommitPoint is the most recent one,\n   * i.e. the \"front index state\". Be careful not to delete it,\n   * unless you know for sure what you are doing, and unless \n   * you can afford to lose the index content while doing that.\n   *  \n   * @param commits List of {@link IndexCommit},\n   *  sorted by age (the 0th one is the oldest commit).\n   */\n  public void onCommit(List<? extends IndexCommit> commits) throws IOException;\n\n","sourceOld":"  /**\n   * <p>This is called each time the writer completed a commit.\n   * This gives the policy a chance to remove old commit points\n   * with each commit.</p>\n   *\n   * <p>The policy may now choose to delete old commit points \n   * by calling method {@link IndexCommit#delete delete()} \n   * of {@link IndexCommit}.</p>\n   * \n   * <p>This method is only called when {@link\n   * IndexWriter#commit} or {@link IndexWriter#close} is\n   * called, or possibly not at all if the {@link\n   * IndexWriter#rollback} is called.\n   *\n   * <p><u>Note:</u> the last CommitPoint is the most recent one,\n   * i.e. the \"front index state\". Be careful not to delete it,\n   * unless you know for sure what you are doing, and unless \n   * you can afford to lose the index content while doing that.\n   *  \n   * @param commits List of {@link IndexCommit},\n   *  sorted by age (the 0th one is the oldest commit).\n   */\n  public void onCommit(List<? extends IndexCommit> commits) throws IOException;\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}