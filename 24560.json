{"path":"solr/src/test/org/apache/solr/client/solrj/embedded/SolrExampleStreamingTest#createNewSolrServer().mjava","commits":[{"id":"893269407f5c988a4b2ee13c7ffc01ec43136c1d","date":1268598046,"type":0,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/src/test/org/apache/solr/client/solrj/embedded/SolrExampleStreamingTest#createNewSolrServer().mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  protected SolrServer createNewSolrServer()\n  {\n    try {\n      // setup the server...\n      String url = \"http://localhost:\"+port+context;       // smaller queue size hits locks more often\n      CommonsHttpSolrServer s = new StreamingUpdateSolrServer( url, 2, 5 ) {\n        @Override\n        public void handleError(Throwable ex) {\n          // do somethign...\n        }\n      };\n      s.setConnectionTimeout(100); // 1/10th sec\n      s.setDefaultMaxConnectionsPerHost(100);\n      s.setMaxTotalConnections(100);\n      return s;\n    }\n    catch( Exception ex ) {\n      throw new RuntimeException( ex );\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8","date":1268599006,"type":4,"author":"Mark Robert Miller","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/src/test/org/apache/solr/client/solrj/embedded/SolrExampleStreamingTest#createNewSolrServer().mjava","sourceNew":null,"sourceOld":"  @Override\n  protected SolrServer createNewSolrServer()\n  {\n    try {\n      // setup the server...\n      String url = \"http://localhost:\"+port+context;       // smaller queue size hits locks more often\n      CommonsHttpSolrServer s = new StreamingUpdateSolrServer( url, 2, 5 ) {\n        @Override\n        public void handleError(Throwable ex) {\n          // do somethign...\n        }\n      };\n      s.setConnectionTimeout(100); // 1/10th sec\n      s.setDefaultMaxConnectionsPerHost(100);\n      s.setMaxTotalConnections(100);\n      return s;\n    }\n    catch( Exception ex ) {\n      throw new RuntimeException( ex );\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ad94625fb8d088209f46650c8097196fec67f00c","date":1453508319,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/src/test/org/apache/solr/client/solrj/embedded/SolrExampleStreamingTest#createNewSolrServer().mjava","pathOld":"src/test/org/apache/solr/client/solrj/embedded/SolrExampleStreamingTest#createNewSolrServer().mjava","sourceNew":"  @Override\n  protected SolrServer createNewSolrServer()\n  {\n    try {\n      // setup the server...\n      String url = \"http://localhost:\"+port+context;       // smaller queue size hits locks more often\n      CommonsHttpSolrServer s = new StreamingUpdateSolrServer( url, 2, 5 ) {\n        @Override\n        public void handleError(Throwable ex) {\n          // do somethign...\n        }\n      };\n      s.setConnectionTimeout(100); // 1/10th sec\n      s.setDefaultMaxConnectionsPerHost(100);\n      s.setMaxTotalConnections(100);\n      return s;\n    }\n    catch( Exception ex ) {\n      throw new RuntimeException( ex );\n    }\n  }\n\n","sourceOld":"  @Override\n  protected SolrServer createNewSolrServer()\n  {\n    try {\n      // setup the server...\n      String url = \"http://localhost:\"+port+context;       // smaller queue size hits locks more often\n      CommonsHttpSolrServer s = new StreamingUpdateSolrServer( url, 2, 5 ) {\n        @Override\n        public void handleError(Throwable ex) {\n          // do somethign...\n        }\n      };\n      s.setConnectionTimeout(100); // 1/10th sec\n      s.setDefaultMaxConnectionsPerHost(100);\n      s.setMaxTotalConnections(100);\n      return s;\n    }\n    catch( Exception ex ) {\n      throw new RuntimeException( ex );\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1da8d55113b689b06716246649de6f62430f15c0","date":1453508340,"type":0,"author":"Dawid Weiss","isMerge":true,"pathNew":"solr/src/test/org/apache/solr/client/solrj/embedded/SolrExampleStreamingTest#createNewSolrServer().mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  protected SolrServer createNewSolrServer()\n  {\n    try {\n      // setup the server...\n      String url = \"http://localhost:\"+port+context;       // smaller queue size hits locks more often\n      CommonsHttpSolrServer s = new StreamingUpdateSolrServer( url, 2, 5 ) {\n        @Override\n        public void handleError(Throwable ex) {\n          // do somethign...\n        }\n      };\n      s.setConnectionTimeout(100); // 1/10th sec\n      s.setDefaultMaxConnectionsPerHost(100);\n      s.setMaxTotalConnections(100);\n      return s;\n    }\n    catch( Exception ex ) {\n      throw new RuntimeException( ex );\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e79533dc382cd233d6fbed25e3071706d894ceaa","date":1269563301,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"solr/src/test/org/apache/solr/client/solrj/embedded/SolrExampleStreamingTest#createNewSolrServer().mjava","pathOld":"solr/src/test/org/apache/solr/client/solrj/embedded/SolrExampleStreamingTest#createNewSolrServer().mjava","sourceNew":"  @Override\n  public SolrServer createNewSolrServer()\n  {\n    try {\n      // setup the server...\n      String url = \"http://localhost:\"+port+context;       // smaller queue size hits locks more often\n      CommonsHttpSolrServer s = new StreamingUpdateSolrServer( url, 2, 5 ) {\n        @Override\n        public void handleError(Throwable ex) {\n          // do somethign...\n        }\n      };\n      s.setConnectionTimeout(100); // 1/10th sec\n      s.setDefaultMaxConnectionsPerHost(100);\n      s.setMaxTotalConnections(100);\n      return s;\n    }\n    catch( Exception ex ) {\n      throw new RuntimeException( ex );\n    }\n  }\n\n","sourceOld":"  @Override\n  protected SolrServer createNewSolrServer()\n  {\n    try {\n      // setup the server...\n      String url = \"http://localhost:\"+port+context;       // smaller queue size hits locks more often\n      CommonsHttpSolrServer s = new StreamingUpdateSolrServer( url, 2, 5 ) {\n        @Override\n        public void handleError(Throwable ex) {\n          // do somethign...\n        }\n      };\n      s.setConnectionTimeout(100); // 1/10th sec\n      s.setDefaultMaxConnectionsPerHost(100);\n      s.setMaxTotalConnections(100);\n      return s;\n    }\n    catch( Exception ex ) {\n      throw new RuntimeException( ex );\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b22ada474ccaadf111a2d0dbb50135f2dd2fddc7","date":1269564595,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"solr/src/test/org/apache/solr/client/solrj/embedded/SolrExampleStreamingTest#createNewSolrServer().mjava","pathOld":"solr/src/test/org/apache/solr/client/solrj/embedded/SolrExampleStreamingTest#createNewSolrServer().mjava","sourceNew":"  @Override\n  public SolrServer createNewSolrServer()\n  {\n    try {\n      // setup the server...\n      String url = \"http://localhost:\"+port+context;       // smaller queue size hits locks more often\n      CommonsHttpSolrServer s = new StreamingUpdateSolrServer( url, 2, 5 ) {\n        @Override\n        public void handleError(Throwable ex) {\n          // do something...    TODO?\n        }\n      };\n      s.setConnectionTimeout(100); // 1/10th sec\n      s.setDefaultMaxConnectionsPerHost(100);\n      s.setMaxTotalConnections(100);\n      return s;\n    }\n    catch( Exception ex ) {\n      throw new RuntimeException( ex );\n    }\n  }\n\n","sourceOld":"  @Override\n  public SolrServer createNewSolrServer()\n  {\n    try {\n      // setup the server...\n      String url = \"http://localhost:\"+port+context;       // smaller queue size hits locks more often\n      CommonsHttpSolrServer s = new StreamingUpdateSolrServer( url, 2, 5 ) {\n        @Override\n        public void handleError(Throwable ex) {\n          // do somethign...\n        }\n      };\n      s.setConnectionTimeout(100); // 1/10th sec\n      s.setDefaultMaxConnectionsPerHost(100);\n      s.setMaxTotalConnections(100);\n      return s;\n    }\n    catch( Exception ex ) {\n      throw new RuntimeException( ex );\n    }\n  }\n\n","bugFix":null,"bugIntro":["b07da04837dda68434fe9bba384d3c4faaa21235","b07da04837dda68434fe9bba384d3c4faaa21235","b07da04837dda68434fe9bba384d3c4faaa21235"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"c903c3d15906a3da96b8c0c2fb704491005fdbdb","date":1453508227,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/embedded/SolrExampleStreamingTest#createNewSolrServer().mjava","pathOld":"solr/src/test/org/apache/solr/client/solrj/embedded/SolrExampleStreamingTest#createNewSolrServer().mjava","sourceNew":"  @Override\n  public SolrServer createNewSolrServer()\n  {\n    try {\n      // setup the server...\n      String url = \"http://localhost:\"+port+context;       // smaller queue size hits locks more often\n      CommonsHttpSolrServer s = new StreamingUpdateSolrServer( url, 2, 5 ) {\n        @Override\n        public void handleError(Throwable ex) {\n          // do something...    TODO?\n        }\n      };\n      s.setConnectionTimeout(100); // 1/10th sec\n      s.setDefaultMaxConnectionsPerHost(100);\n      s.setMaxTotalConnections(100);\n      return s;\n    }\n    catch( Exception ex ) {\n      throw new RuntimeException( ex );\n    }\n  }\n\n","sourceOld":"  @Override\n  public SolrServer createNewSolrServer()\n  {\n    try {\n      // setup the server...\n      String url = \"http://localhost:\"+port+context;       // smaller queue size hits locks more often\n      CommonsHttpSolrServer s = new StreamingUpdateSolrServer( url, 2, 5 ) {\n        @Override\n        public void handleError(Throwable ex) {\n          // do something...    TODO?\n        }\n      };\n      s.setConnectionTimeout(100); // 1/10th sec\n      s.setDefaultMaxConnectionsPerHost(100);\n      s.setMaxTotalConnections(100);\n      return s;\n    }\n    catch( Exception ex ) {\n      throw new RuntimeException( ex );\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"a258fbb26824fd104ed795e5d9033d2d040049ee","date":1453508252,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/embedded/SolrExampleStreamingTest#createNewSolrServer().mjava","pathOld":"solr/src/test/org/apache/solr/client/solrj/embedded/SolrExampleStreamingTest#createNewSolrServer().mjava","sourceNew":"  @Override\n  public SolrServer createNewSolrServer()\n  {\n    try {\n      // setup the server...\n      String url = \"http://localhost:\"+port+context;       // smaller queue size hits locks more often\n      CommonsHttpSolrServer s = new StreamingUpdateSolrServer( url, 2, 5 ) {\n        @Override\n        public void handleError(Throwable ex) {\n          // do something...    TODO?\n        }\n      };\n      s.setConnectionTimeout(100); // 1/10th sec\n      s.setDefaultMaxConnectionsPerHost(100);\n      s.setMaxTotalConnections(100);\n      return s;\n    }\n    catch( Exception ex ) {\n      throw new RuntimeException( ex );\n    }\n  }\n\n","sourceOld":"  @Override\n  public SolrServer createNewSolrServer()\n  {\n    try {\n      // setup the server...\n      String url = \"http://localhost:\"+port+context;       // smaller queue size hits locks more often\n      CommonsHttpSolrServer s = new StreamingUpdateSolrServer( url, 2, 5 ) {\n        @Override\n        public void handleError(Throwable ex) {\n          // do something...    TODO?\n        }\n      };\n      s.setConnectionTimeout(100); // 1/10th sec\n      s.setDefaultMaxConnectionsPerHost(100);\n      s.setMaxTotalConnections(100);\n      return s;\n    }\n    catch( Exception ex ) {\n      throw new RuntimeException( ex );\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":5,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/embedded/SolrExampleStreamingTest#createNewSolrServer().mjava","pathOld":"solr/src/test/org/apache/solr/client/solrj/embedded/SolrExampleStreamingTest#createNewSolrServer().mjava","sourceNew":"  @Override\n  public SolrServer createNewSolrServer()\n  {\n    try {\n      // setup the server...\n      String url = \"http://localhost:\"+port+context;       // smaller queue size hits locks more often\n      CommonsHttpSolrServer s = new StreamingUpdateSolrServer( url, 2, 5 ) {\n        @Override\n        public void handleError(Throwable ex) {\n          // do something...    TODO?\n        }\n      };\n      s.setConnectionTimeout(100); // 1/10th sec\n      s.setDefaultMaxConnectionsPerHost(100);\n      s.setMaxTotalConnections(100);\n      return s;\n    }\n    catch( Exception ex ) {\n      throw new RuntimeException( ex );\n    }\n  }\n\n","sourceOld":"  @Override\n  public SolrServer createNewSolrServer()\n  {\n    try {\n      // setup the server...\n      String url = \"http://localhost:\"+port+context;       // smaller queue size hits locks more often\n      CommonsHttpSolrServer s = new StreamingUpdateSolrServer( url, 2, 5 ) {\n        @Override\n        public void handleError(Throwable ex) {\n          // do something...    TODO?\n        }\n      };\n      s.setConnectionTimeout(100); // 1/10th sec\n      s.setDefaultMaxConnectionsPerHost(100);\n      s.setMaxTotalConnections(100);\n      return s;\n    }\n    catch( Exception ex ) {\n      throw new RuntimeException( ex );\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"1da8d55113b689b06716246649de6f62430f15c0":["a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8","ad94625fb8d088209f46650c8097196fec67f00c"],"893269407f5c988a4b2ee13c7ffc01ec43136c1d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"e79533dc382cd233d6fbed25e3071706d894ceaa":["1da8d55113b689b06716246649de6f62430f15c0"],"a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8":["893269407f5c988a4b2ee13c7ffc01ec43136c1d"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["b22ada474ccaadf111a2d0dbb50135f2dd2fddc7"],"c26f00b574427b55127e869b935845554afde1fa":["b22ada474ccaadf111a2d0dbb50135f2dd2fddc7","c903c3d15906a3da96b8c0c2fb704491005fdbdb"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"b22ada474ccaadf111a2d0dbb50135f2dd2fddc7":["e79533dc382cd233d6fbed25e3071706d894ceaa"],"a258fbb26824fd104ed795e5d9033d2d040049ee":["b22ada474ccaadf111a2d0dbb50135f2dd2fddc7"],"ad94625fb8d088209f46650c8097196fec67f00c":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["c26f00b574427b55127e869b935845554afde1fa"]},"commit2Childs":{"1da8d55113b689b06716246649de6f62430f15c0":["e79533dc382cd233d6fbed25e3071706d894ceaa"],"893269407f5c988a4b2ee13c7ffc01ec43136c1d":["a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8"],"a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8":["1da8d55113b689b06716246649de6f62430f15c0"],"e79533dc382cd233d6fbed25e3071706d894ceaa":["b22ada474ccaadf111a2d0dbb50135f2dd2fddc7"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["c26f00b574427b55127e869b935845554afde1fa"],"c26f00b574427b55127e869b935845554afde1fa":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["893269407f5c988a4b2ee13c7ffc01ec43136c1d"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["ad94625fb8d088209f46650c8097196fec67f00c"],"b22ada474ccaadf111a2d0dbb50135f2dd2fddc7":["c903c3d15906a3da96b8c0c2fb704491005fdbdb","c26f00b574427b55127e869b935845554afde1fa","a258fbb26824fd104ed795e5d9033d2d040049ee"],"a258fbb26824fd104ed795e5d9033d2d040049ee":[],"ad94625fb8d088209f46650c8097196fec67f00c":["1da8d55113b689b06716246649de6f62430f15c0"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a258fbb26824fd104ed795e5d9033d2d040049ee","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"pathCommit":null}