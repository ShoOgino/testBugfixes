{"path":"lucene/core/src/java/org/apache/lucene/index/StoredFieldsConsumer#fill(int).mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/StoredFieldsConsumer#fill(int).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/StoredFieldsConsumer#fill(int).mjava","sourceNew":"  /** Fills in any hole in the docIDs */\n  void fill(int docID) throws IOException {\n    // We must \"catch up\" for all docs before us\n    // that had no stored fields:\n    while(lastDocID < docID) {\n      fieldsWriter.startDocument(0);\n      lastDocID++;\n    }\n  }\n\n","sourceOld":"  /** Fills in any hole in the docIDs */\n  void fill(int docID) throws IOException {\n    // We must \"catch up\" for all docs before us\n    // that had no stored fields:\n    while(lastDocID < docID) {\n      fieldsWriter.startDocument(0);\n      lastDocID++;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"127981e5a1e1d1425c5fdc816ceacf753ca70ee4","date":1354205321,"type":5,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/StoredFieldsProcessor#fill(int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/StoredFieldsConsumer#fill(int).mjava","sourceNew":"  /** Fills in any hole in the docIDs */\n  void fill(int docID) throws IOException {\n    // We must \"catch up\" for all docs before us\n    // that had no stored fields:\n    while(lastDocID < docID) {\n      fieldsWriter.startDocument(0);\n      lastDocID++;\n    }\n  }\n\n","sourceOld":"  /** Fills in any hole in the docIDs */\n  void fill(int docID) throws IOException {\n    // We must \"catch up\" for all docs before us\n    // that had no stored fields:\n    while(lastDocID < docID) {\n      fieldsWriter.startDocument(0);\n      lastDocID++;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fc7a7bb1aa79cf53564793bb5ffa270250c679da","date":1357817084,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/StoredFieldsConsumer#fill(int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/StoredFieldsConsumer#fill(int).mjava","sourceNew":"  /** Fills in any hole in the docIDs */\n  void fill(int docID) throws IOException {\n    // We must \"catch up\" for all docs before us\n    // that had no stored fields:\n    while(lastDocID < docID) {\n      fieldsWriter.startDocument(0);\n      lastDocID++;\n      fieldsWriter.finishDocument();\n    }\n  }\n\n","sourceOld":"  /** Fills in any hole in the docIDs */\n  void fill(int docID) throws IOException {\n    // We must \"catch up\" for all docs before us\n    // that had no stored fields:\n    while(lastDocID < docID) {\n      fieldsWriter.startDocument(0);\n      lastDocID++;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d4d69c535930b5cce125cff868d40f6373dc27d4","date":1360270101,"type":5,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/StoredFieldsProcessor#fill(int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/StoredFieldsConsumer#fill(int).mjava","sourceNew":"  /** Fills in any hole in the docIDs */\n  void fill(int docID) throws IOException {\n    // We must \"catch up\" for all docs before us\n    // that had no stored fields:\n    while(lastDocID < docID) {\n      fieldsWriter.startDocument(0);\n      lastDocID++;\n      fieldsWriter.finishDocument();\n    }\n  }\n\n","sourceOld":"  /** Fills in any hole in the docIDs */\n  void fill(int docID) throws IOException {\n    // We must \"catch up\" for all docs before us\n    // that had no stored fields:\n    while(lastDocID < docID) {\n      fieldsWriter.startDocument(0);\n      lastDocID++;\n      fieldsWriter.finishDocument();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"d4d69c535930b5cce125cff868d40f6373dc27d4":["fc7a7bb1aa79cf53564793bb5ffa270250c679da","127981e5a1e1d1425c5fdc816ceacf753ca70ee4"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"fc7a7bb1aa79cf53564793bb5ffa270250c679da":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"127981e5a1e1d1425c5fdc816ceacf753ca70ee4":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["d4d69c535930b5cce125cff868d40f6373dc27d4"]},"commit2Childs":{"d4d69c535930b5cce125cff868d40f6373dc27d4":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["fc7a7bb1aa79cf53564793bb5ffa270250c679da","127981e5a1e1d1425c5fdc816ceacf753ca70ee4"],"fc7a7bb1aa79cf53564793bb5ffa270250c679da":["d4d69c535930b5cce125cff868d40f6373dc27d4"],"127981e5a1e1d1425c5fdc816ceacf753ca70ee4":["d4d69c535930b5cce125cff868d40f6373dc27d4"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}