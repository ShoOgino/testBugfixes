{"path":"src/common/org/apache/solr/common/util/JavaBinCodec#readVal(FastInputStream).mjava","commits":[{"id":"18a1b51b47d1035bf90ecfc7d16c739fe983647a","date":1229928361,"type":0,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"src/common/org/apache/solr/common/util/JavaBinCodec#readVal(FastInputStream).mjava","pathOld":"/dev/null","sourceNew":"  public Object readVal(FastInputStream dis) throws IOException {\n    tagByte = dis.readByte();\n\n    // if ((tagByte & 0xe0) == 0) {\n    // if top 3 bits are clear, this is a normal tag\n\n    // OK, try type + size in single byte\n    switch (tagByte >>> 5) {\n      case STR >>> 5:\n        return readStr(dis);\n      case SINT >>> 5:\n        return readSmallInt(dis);\n      case SLONG >>> 5:\n        return readSmallLong(dis);\n      case ARR >>> 5:\n        return readArray(dis);\n      case ORDERED_MAP >>> 5:\n        return readOrderedMap(dis);\n      case NAMED_LST >>> 5:\n        return readNamedList(dis);\n      case EXTERN_STRING >>> 5:\n        return readExternString(dis);\n    }\n\n    switch (tagByte) {\n      case NULL:\n        return null;\n      case DATE:\n        return new Date(dis.readLong());\n      case INT:\n        return dis.readInt();\n      case BOOL_TRUE:\n        return Boolean.TRUE;\n      case BOOL_FALSE:\n        return Boolean.FALSE;\n      case FLOAT:\n        return dis.readFloat();\n      case DOUBLE:\n        return dis.readDouble();\n      case LONG:\n        return dis.readLong();\n      case BYTE:\n        return dis.readByte();\n      case SHORT:\n        return dis.readShort();\n      case MAP:\n        return readMap(dis);\n      case SOLRDOC:\n        return readSolrDocument(dis);\n      case SOLRDOCLST:\n        return readSolrDocumentList(dis);\n      case BYTEARR:\n        return readByteArray(dis);\n      case ITERATOR:\n        return readIterator(dis);\n      case END:\n        return END_OBJ;\n    }\n\n    throw new RuntimeException(\"Unknown type \" + tagByte);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ad94625fb8d088209f46650c8097196fec67f00c","date":1453508319,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/src/common/org/apache/solr/common/util/JavaBinCodec#readVal(FastInputStream).mjava","pathOld":"src/common/org/apache/solr/common/util/JavaBinCodec#readVal(FastInputStream).mjava","sourceNew":"  public Object readVal(FastInputStream dis) throws IOException {\n    tagByte = dis.readByte();\n\n    // if ((tagByte & 0xe0) == 0) {\n    // if top 3 bits are clear, this is a normal tag\n\n    // OK, try type + size in single byte\n    switch (tagByte >>> 5) {\n      case STR >>> 5:\n        return readStr(dis);\n      case SINT >>> 5:\n        return readSmallInt(dis);\n      case SLONG >>> 5:\n        return readSmallLong(dis);\n      case ARR >>> 5:\n        return readArray(dis);\n      case ORDERED_MAP >>> 5:\n        return readOrderedMap(dis);\n      case NAMED_LST >>> 5:\n        return readNamedList(dis);\n      case EXTERN_STRING >>> 5:\n        return readExternString(dis);\n    }\n\n    switch (tagByte) {\n      case NULL:\n        return null;\n      case DATE:\n        return new Date(dis.readLong());\n      case INT:\n        return dis.readInt();\n      case BOOL_TRUE:\n        return Boolean.TRUE;\n      case BOOL_FALSE:\n        return Boolean.FALSE;\n      case FLOAT:\n        return dis.readFloat();\n      case DOUBLE:\n        return dis.readDouble();\n      case LONG:\n        return dis.readLong();\n      case BYTE:\n        return dis.readByte();\n      case SHORT:\n        return dis.readShort();\n      case MAP:\n        return readMap(dis);\n      case SOLRDOC:\n        return readSolrDocument(dis);\n      case SOLRDOCLST:\n        return readSolrDocumentList(dis);\n      case BYTEARR:\n        return readByteArray(dis);\n      case ITERATOR:\n        return readIterator(dis);\n      case END:\n        return END_OBJ;\n    }\n\n    throw new RuntimeException(\"Unknown type \" + tagByte);\n  }\n\n","sourceOld":"  public Object readVal(FastInputStream dis) throws IOException {\n    tagByte = dis.readByte();\n\n    // if ((tagByte & 0xe0) == 0) {\n    // if top 3 bits are clear, this is a normal tag\n\n    // OK, try type + size in single byte\n    switch (tagByte >>> 5) {\n      case STR >>> 5:\n        return readStr(dis);\n      case SINT >>> 5:\n        return readSmallInt(dis);\n      case SLONG >>> 5:\n        return readSmallLong(dis);\n      case ARR >>> 5:\n        return readArray(dis);\n      case ORDERED_MAP >>> 5:\n        return readOrderedMap(dis);\n      case NAMED_LST >>> 5:\n        return readNamedList(dis);\n      case EXTERN_STRING >>> 5:\n        return readExternString(dis);\n    }\n\n    switch (tagByte) {\n      case NULL:\n        return null;\n      case DATE:\n        return new Date(dis.readLong());\n      case INT:\n        return dis.readInt();\n      case BOOL_TRUE:\n        return Boolean.TRUE;\n      case BOOL_FALSE:\n        return Boolean.FALSE;\n      case FLOAT:\n        return dis.readFloat();\n      case DOUBLE:\n        return dis.readDouble();\n      case LONG:\n        return dis.readLong();\n      case BYTE:\n        return dis.readByte();\n      case SHORT:\n        return dis.readShort();\n      case MAP:\n        return readMap(dis);\n      case SOLRDOC:\n        return readSolrDocument(dis);\n      case SOLRDOCLST:\n        return readSolrDocumentList(dis);\n      case BYTEARR:\n        return readByteArray(dis);\n      case ITERATOR:\n        return readIterator(dis);\n      case END:\n        return END_OBJ;\n    }\n\n    throw new RuntimeException(\"Unknown type \" + tagByte);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"18a1b51b47d1035bf90ecfc7d16c739fe983647a":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"ad94625fb8d088209f46650c8097196fec67f00c":["18a1b51b47d1035bf90ecfc7d16c739fe983647a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["18a1b51b47d1035bf90ecfc7d16c739fe983647a"],"18a1b51b47d1035bf90ecfc7d16c739fe983647a":["ad94625fb8d088209f46650c8097196fec67f00c"],"ad94625fb8d088209f46650c8097196fec67f00c":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["ad94625fb8d088209f46650c8097196fec67f00c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"pathCommit":null}