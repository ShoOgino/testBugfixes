{"path":"solr/solrj/src/test/org/apache/solr/common/util/NamedListTest#testRemoveArgs().mjava","commits":[{"id":"3ae0c36347d7586e501169851eb8fe2ad2b8f0dd","date":1380757525,"type":0,"author":"Shawn Heisey","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/common/util/NamedListTest#testRemoveArgs().mjava","pathOld":"/dev/null","sourceNew":"  public void testRemoveArgs() {\n    NamedList<Object> nl = new NamedList<Object>();\n    nl.add(\"key1\", \"value1-1\");\n    nl.add(\"key2\", \"value2-1\");\n    nl.add(\"key1\", \"value1-2\");\n    nl.add(\"key2\", \"value2-2\");\n    nl.add(\"key1\", \"value1-3\");\n    nl.add(\"key2\", \"value2-3\");\n    nl.add(\"key1\", \"value1-4\");\n    nl.add(\"key2\", \"value2-4\");\n    nl.add(\"key1\", \"value1-5\");\n    nl.add(\"key2\", \"value2-5\");\n    nl.add(\"key1\", \"value1-6\");\n    nl.add(\"key2\", 0);\n    nl.add(\"key2\", \"value2-7\");\n    assertEquals(13, nl.size());\n    List<String> values = (ArrayList<String>) nl.removeConfigArgs(\"key1\");\n    assertEquals(\"value1-1\", values.get(0));\n    assertEquals(\"value1-3\", values.get(2));\n    assertEquals(6, values.size());\n    assertEquals(7, nl.size());\n    try {\n      values = (ArrayList<String>) nl.removeConfigArgs(\"key2\");\n      fail();\n    }\n    catch(SolrException e) {\n      // Expected exception.\n      assertTrue(true);\n    }\n    // nl should be unmodified when removeArgs throws an exception.\n    assertEquals(7, nl.size());\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"634f330c54fd3f9f491d52036dc3f40b4f4d8934","date":1394635157,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/common/util/NamedListTest#testRemoveArgs().mjava","pathOld":"solr/solrj/src/test/org/apache/solr/common/util/NamedListTest#testRemoveArgs().mjava","sourceNew":"  public void testRemoveArgs() {\n    NamedList<Object> nl = new NamedList<>();\n    nl.add(\"key1\", \"value1-1\");\n    nl.add(\"key2\", \"value2-1\");\n    nl.add(\"key1\", \"value1-2\");\n    nl.add(\"key2\", \"value2-2\");\n    nl.add(\"key1\", \"value1-3\");\n    nl.add(\"key2\", \"value2-3\");\n    nl.add(\"key1\", \"value1-4\");\n    nl.add(\"key2\", \"value2-4\");\n    nl.add(\"key1\", \"value1-5\");\n    nl.add(\"key2\", \"value2-5\");\n    nl.add(\"key1\", \"value1-6\");\n    nl.add(\"key2\", 0);\n    nl.add(\"key2\", \"value2-7\");\n    assertEquals(13, nl.size());\n    List<String> values = (ArrayList<String>) nl.removeConfigArgs(\"key1\");\n    assertEquals(\"value1-1\", values.get(0));\n    assertEquals(\"value1-3\", values.get(2));\n    assertEquals(6, values.size());\n    assertEquals(7, nl.size());\n    try {\n      values = (ArrayList<String>) nl.removeConfigArgs(\"key2\");\n      fail();\n    }\n    catch(SolrException e) {\n      // Expected exception.\n      assertTrue(true);\n    }\n    // nl should be unmodified when removeArgs throws an exception.\n    assertEquals(7, nl.size());\n  }\n\n","sourceOld":"  public void testRemoveArgs() {\n    NamedList<Object> nl = new NamedList<Object>();\n    nl.add(\"key1\", \"value1-1\");\n    nl.add(\"key2\", \"value2-1\");\n    nl.add(\"key1\", \"value1-2\");\n    nl.add(\"key2\", \"value2-2\");\n    nl.add(\"key1\", \"value1-3\");\n    nl.add(\"key2\", \"value2-3\");\n    nl.add(\"key1\", \"value1-4\");\n    nl.add(\"key2\", \"value2-4\");\n    nl.add(\"key1\", \"value1-5\");\n    nl.add(\"key2\", \"value2-5\");\n    nl.add(\"key1\", \"value1-6\");\n    nl.add(\"key2\", 0);\n    nl.add(\"key2\", \"value2-7\");\n    assertEquals(13, nl.size());\n    List<String> values = (ArrayList<String>) nl.removeConfigArgs(\"key1\");\n    assertEquals(\"value1-1\", values.get(0));\n    assertEquals(\"value1-3\", values.get(2));\n    assertEquals(6, values.size());\n    assertEquals(7, nl.size());\n    try {\n      values = (ArrayList<String>) nl.removeConfigArgs(\"key2\");\n      fail();\n    }\n    catch(SolrException e) {\n      // Expected exception.\n      assertTrue(true);\n    }\n    // nl should be unmodified when removeArgs throws an exception.\n    assertEquals(7, nl.size());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cba13865da71de3b9b0937fcbc66d726089356d","date":1537507909,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/common/util/NamedListTest#testRemoveArgs().mjava","pathOld":"solr/solrj/src/test/org/apache/solr/common/util/NamedListTest#testRemoveArgs().mjava","sourceNew":"  @Test\n  @BadApple(bugUrl=\"https://issues.apache.org/jira/browse/SOLR-12028\") // added 20-Sep-2018\n  public void testRemoveArgs() {\n    NamedList<Object> nl = new NamedList<>();\n    nl.add(\"key1\", \"value1-1\");\n    nl.add(\"key2\", \"value2-1\");\n    nl.add(\"key1\", \"value1-2\");\n    nl.add(\"key2\", \"value2-2\");\n    nl.add(\"key1\", \"value1-3\");\n    nl.add(\"key2\", \"value2-3\");\n    nl.add(\"key1\", \"value1-4\");\n    nl.add(\"key2\", \"value2-4\");\n    nl.add(\"key1\", \"value1-5\");\n    nl.add(\"key2\", \"value2-5\");\n    nl.add(\"key1\", \"value1-6\");\n    nl.add(\"key2\", 0);\n    nl.add(\"key2\", \"value2-7\");\n    assertEquals(13, nl.size());\n    List<String> values = (ArrayList<String>) nl.removeConfigArgs(\"key1\");\n    assertEquals(\"value1-1\", values.get(0));\n    assertEquals(\"value1-3\", values.get(2));\n    assertEquals(6, values.size());\n    assertEquals(7, nl.size());\n    try {\n      values = (ArrayList<String>) nl.removeConfigArgs(\"key2\");\n      fail();\n    }\n    catch(SolrException e) {\n      // Expected exception.\n      assertTrue(true);\n    }\n    // nl should be unmodified when removeArgs throws an exception.\n    assertEquals(7, nl.size());\n  }\n\n","sourceOld":"  public void testRemoveArgs() {\n    NamedList<Object> nl = new NamedList<>();\n    nl.add(\"key1\", \"value1-1\");\n    nl.add(\"key2\", \"value2-1\");\n    nl.add(\"key1\", \"value1-2\");\n    nl.add(\"key2\", \"value2-2\");\n    nl.add(\"key1\", \"value1-3\");\n    nl.add(\"key2\", \"value2-3\");\n    nl.add(\"key1\", \"value1-4\");\n    nl.add(\"key2\", \"value2-4\");\n    nl.add(\"key1\", \"value1-5\");\n    nl.add(\"key2\", \"value2-5\");\n    nl.add(\"key1\", \"value1-6\");\n    nl.add(\"key2\", 0);\n    nl.add(\"key2\", \"value2-7\");\n    assertEquals(13, nl.size());\n    List<String> values = (ArrayList<String>) nl.removeConfigArgs(\"key1\");\n    assertEquals(\"value1-1\", values.get(0));\n    assertEquals(\"value1-3\", values.get(2));\n    assertEquals(6, values.size());\n    assertEquals(7, nl.size());\n    try {\n      values = (ArrayList<String>) nl.removeConfigArgs(\"key2\");\n      fail();\n    }\n    catch(SolrException e) {\n      // Expected exception.\n      assertTrue(true);\n    }\n    // nl should be unmodified when removeArgs throws an exception.\n    assertEquals(7, nl.size());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8d35c84fdef07284c122012ca4000d3b7285a66e","date":1545962630,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/common/util/NamedListTest#testRemoveArgs().mjava","pathOld":"solr/solrj/src/test/org/apache/solr/common/util/NamedListTest#testRemoveArgs().mjava","sourceNew":"  @Test\n  // commented out on: 24-Dec-2018   @BadApple(bugUrl=\"https://issues.apache.org/jira/browse/SOLR-12028\") // added 20-Sep-2018\n  public void testRemoveArgs() {\n    NamedList<Object> nl = new NamedList<>();\n    nl.add(\"key1\", \"value1-1\");\n    nl.add(\"key2\", \"value2-1\");\n    nl.add(\"key1\", \"value1-2\");\n    nl.add(\"key2\", \"value2-2\");\n    nl.add(\"key1\", \"value1-3\");\n    nl.add(\"key2\", \"value2-3\");\n    nl.add(\"key1\", \"value1-4\");\n    nl.add(\"key2\", \"value2-4\");\n    nl.add(\"key1\", \"value1-5\");\n    nl.add(\"key2\", \"value2-5\");\n    nl.add(\"key1\", \"value1-6\");\n    nl.add(\"key2\", 0);\n    nl.add(\"key2\", \"value2-7\");\n    assertEquals(13, nl.size());\n    List<String> values = (ArrayList<String>) nl.removeConfigArgs(\"key1\");\n    assertEquals(\"value1-1\", values.get(0));\n    assertEquals(\"value1-3\", values.get(2));\n    assertEquals(6, values.size());\n    assertEquals(7, nl.size());\n    try {\n      values = (ArrayList<String>) nl.removeConfigArgs(\"key2\");\n      fail();\n    }\n    catch(SolrException e) {\n      // Expected exception.\n      assertTrue(true);\n    }\n    // nl should be unmodified when removeArgs throws an exception.\n    assertEquals(7, nl.size());\n  }\n\n","sourceOld":"  @Test\n  @BadApple(bugUrl=\"https://issues.apache.org/jira/browse/SOLR-12028\") // added 20-Sep-2018\n  public void testRemoveArgs() {\n    NamedList<Object> nl = new NamedList<>();\n    nl.add(\"key1\", \"value1-1\");\n    nl.add(\"key2\", \"value2-1\");\n    nl.add(\"key1\", \"value1-2\");\n    nl.add(\"key2\", \"value2-2\");\n    nl.add(\"key1\", \"value1-3\");\n    nl.add(\"key2\", \"value2-3\");\n    nl.add(\"key1\", \"value1-4\");\n    nl.add(\"key2\", \"value2-4\");\n    nl.add(\"key1\", \"value1-5\");\n    nl.add(\"key2\", \"value2-5\");\n    nl.add(\"key1\", \"value1-6\");\n    nl.add(\"key2\", 0);\n    nl.add(\"key2\", \"value2-7\");\n    assertEquals(13, nl.size());\n    List<String> values = (ArrayList<String>) nl.removeConfigArgs(\"key1\");\n    assertEquals(\"value1-1\", values.get(0));\n    assertEquals(\"value1-3\", values.get(2));\n    assertEquals(6, values.size());\n    assertEquals(7, nl.size());\n    try {\n      values = (ArrayList<String>) nl.removeConfigArgs(\"key2\");\n      fail();\n    }\n    catch(SolrException e) {\n      // Expected exception.\n      assertTrue(true);\n    }\n    // nl should be unmodified when removeArgs throws an exception.\n    assertEquals(7, nl.size());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d1a307447328c95a00248512b40d7a5ff12ecd6a","date":1564817449,"type":3,"author":"Munendra S N","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/common/util/NamedListTest#testRemoveArgs().mjava","pathOld":"solr/solrj/src/test/org/apache/solr/common/util/NamedListTest#testRemoveArgs().mjava","sourceNew":"  @Test\n  // commented out on: 24-Dec-2018   @BadApple(bugUrl=\"https://issues.apache.org/jira/browse/SOLR-12028\") // added 20-Sep-2018\n  public void testRemoveArgs() {\n    NamedList<Object> nl = new NamedList<>();\n    nl.add(\"key1\", \"value1-1\");\n    nl.add(\"key2\", \"value2-1\");\n    nl.add(\"key1\", \"value1-2\");\n    nl.add(\"key2\", \"value2-2\");\n    nl.add(\"key1\", \"value1-3\");\n    nl.add(\"key2\", \"value2-3\");\n    nl.add(\"key1\", \"value1-4\");\n    nl.add(\"key2\", \"value2-4\");\n    nl.add(\"key1\", \"value1-5\");\n    nl.add(\"key2\", \"value2-5\");\n    nl.add(\"key1\", \"value1-6\");\n    nl.add(\"key2\", 0);\n    nl.add(\"key2\", \"value2-7\");\n    assertEquals(13, nl.size());\n    List<String> values = (ArrayList<String>) nl.removeConfigArgs(\"key1\");\n    assertEquals(\"value1-1\", values.get(0));\n    assertEquals(\"value1-3\", values.get(2));\n    assertEquals(6, values.size());\n    assertEquals(7, nl.size());\n\n    expectThrows(SolrException.class, () -> nl.removeConfigArgs(\"key2\"));\n    // nl should be unmodified when removeArgs throws an exception.\n    assertEquals(7, nl.size());\n  }\n\n","sourceOld":"  @Test\n  // commented out on: 24-Dec-2018   @BadApple(bugUrl=\"https://issues.apache.org/jira/browse/SOLR-12028\") // added 20-Sep-2018\n  public void testRemoveArgs() {\n    NamedList<Object> nl = new NamedList<>();\n    nl.add(\"key1\", \"value1-1\");\n    nl.add(\"key2\", \"value2-1\");\n    nl.add(\"key1\", \"value1-2\");\n    nl.add(\"key2\", \"value2-2\");\n    nl.add(\"key1\", \"value1-3\");\n    nl.add(\"key2\", \"value2-3\");\n    nl.add(\"key1\", \"value1-4\");\n    nl.add(\"key2\", \"value2-4\");\n    nl.add(\"key1\", \"value1-5\");\n    nl.add(\"key2\", \"value2-5\");\n    nl.add(\"key1\", \"value1-6\");\n    nl.add(\"key2\", 0);\n    nl.add(\"key2\", \"value2-7\");\n    assertEquals(13, nl.size());\n    List<String> values = (ArrayList<String>) nl.removeConfigArgs(\"key1\");\n    assertEquals(\"value1-1\", values.get(0));\n    assertEquals(\"value1-3\", values.get(2));\n    assertEquals(6, values.size());\n    assertEquals(7, nl.size());\n    try {\n      values = (ArrayList<String>) nl.removeConfigArgs(\"key2\");\n      fail();\n    }\n    catch(SolrException e) {\n      // Expected exception.\n      assertTrue(true);\n    }\n    // nl should be unmodified when removeArgs throws an exception.\n    assertEquals(7, nl.size());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f8061ddd97f3352007d927dae445884a6f3d857b","date":1564988276,"type":3,"author":"Atri Sharma","isMerge":true,"pathNew":"solr/solrj/src/test/org/apache/solr/common/util/NamedListTest#testRemoveArgs().mjava","pathOld":"solr/solrj/src/test/org/apache/solr/common/util/NamedListTest#testRemoveArgs().mjava","sourceNew":"  @Test\n  // commented out on: 24-Dec-2018   @BadApple(bugUrl=\"https://issues.apache.org/jira/browse/SOLR-12028\") // added 20-Sep-2018\n  public void testRemoveArgs() {\n    NamedList<Object> nl = new NamedList<>();\n    nl.add(\"key1\", \"value1-1\");\n    nl.add(\"key2\", \"value2-1\");\n    nl.add(\"key1\", \"value1-2\");\n    nl.add(\"key2\", \"value2-2\");\n    nl.add(\"key1\", \"value1-3\");\n    nl.add(\"key2\", \"value2-3\");\n    nl.add(\"key1\", \"value1-4\");\n    nl.add(\"key2\", \"value2-4\");\n    nl.add(\"key1\", \"value1-5\");\n    nl.add(\"key2\", \"value2-5\");\n    nl.add(\"key1\", \"value1-6\");\n    nl.add(\"key2\", 0);\n    nl.add(\"key2\", \"value2-7\");\n    assertEquals(13, nl.size());\n    List<String> values = (ArrayList<String>) nl.removeConfigArgs(\"key1\");\n    assertEquals(\"value1-1\", values.get(0));\n    assertEquals(\"value1-3\", values.get(2));\n    assertEquals(6, values.size());\n    assertEquals(7, nl.size());\n\n    expectThrows(SolrException.class, () -> nl.removeConfigArgs(\"key2\"));\n    // nl should be unmodified when removeArgs throws an exception.\n    assertEquals(7, nl.size());\n  }\n\n","sourceOld":"  @Test\n  // commented out on: 24-Dec-2018   @BadApple(bugUrl=\"https://issues.apache.org/jira/browse/SOLR-12028\") // added 20-Sep-2018\n  public void testRemoveArgs() {\n    NamedList<Object> nl = new NamedList<>();\n    nl.add(\"key1\", \"value1-1\");\n    nl.add(\"key2\", \"value2-1\");\n    nl.add(\"key1\", \"value1-2\");\n    nl.add(\"key2\", \"value2-2\");\n    nl.add(\"key1\", \"value1-3\");\n    nl.add(\"key2\", \"value2-3\");\n    nl.add(\"key1\", \"value1-4\");\n    nl.add(\"key2\", \"value2-4\");\n    nl.add(\"key1\", \"value1-5\");\n    nl.add(\"key2\", \"value2-5\");\n    nl.add(\"key1\", \"value1-6\");\n    nl.add(\"key2\", 0);\n    nl.add(\"key2\", \"value2-7\");\n    assertEquals(13, nl.size());\n    List<String> values = (ArrayList<String>) nl.removeConfigArgs(\"key1\");\n    assertEquals(\"value1-1\", values.get(0));\n    assertEquals(\"value1-3\", values.get(2));\n    assertEquals(6, values.size());\n    assertEquals(7, nl.size());\n    try {\n      values = (ArrayList<String>) nl.removeConfigArgs(\"key2\");\n      fail();\n    }\n    catch(SolrException e) {\n      // Expected exception.\n      assertTrue(true);\n    }\n    // nl should be unmodified when removeArgs throws an exception.\n    assertEquals(7, nl.size());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d8daa7a1d5d0c033d73962d5ca3bf3f9c9687693","date":1565097295,"type":3,"author":"Jan Høydahl","isMerge":true,"pathNew":"solr/solrj/src/test/org/apache/solr/common/util/NamedListTest#testRemoveArgs().mjava","pathOld":"solr/solrj/src/test/org/apache/solr/common/util/NamedListTest#testRemoveArgs().mjava","sourceNew":"  @Test\n  // commented out on: 24-Dec-2018   @BadApple(bugUrl=\"https://issues.apache.org/jira/browse/SOLR-12028\") // added 20-Sep-2018\n  public void testRemoveArgs() {\n    NamedList<Object> nl = new NamedList<>();\n    nl.add(\"key1\", \"value1-1\");\n    nl.add(\"key2\", \"value2-1\");\n    nl.add(\"key1\", \"value1-2\");\n    nl.add(\"key2\", \"value2-2\");\n    nl.add(\"key1\", \"value1-3\");\n    nl.add(\"key2\", \"value2-3\");\n    nl.add(\"key1\", \"value1-4\");\n    nl.add(\"key2\", \"value2-4\");\n    nl.add(\"key1\", \"value1-5\");\n    nl.add(\"key2\", \"value2-5\");\n    nl.add(\"key1\", \"value1-6\");\n    nl.add(\"key2\", 0);\n    nl.add(\"key2\", \"value2-7\");\n    assertEquals(13, nl.size());\n    List<String> values = (ArrayList<String>) nl.removeConfigArgs(\"key1\");\n    assertEquals(\"value1-1\", values.get(0));\n    assertEquals(\"value1-3\", values.get(2));\n    assertEquals(6, values.size());\n    assertEquals(7, nl.size());\n\n    expectThrows(SolrException.class, () -> nl.removeConfigArgs(\"key2\"));\n    // nl should be unmodified when removeArgs throws an exception.\n    assertEquals(7, nl.size());\n  }\n\n","sourceOld":"  @Test\n  // commented out on: 24-Dec-2018   @BadApple(bugUrl=\"https://issues.apache.org/jira/browse/SOLR-12028\") // added 20-Sep-2018\n  public void testRemoveArgs() {\n    NamedList<Object> nl = new NamedList<>();\n    nl.add(\"key1\", \"value1-1\");\n    nl.add(\"key2\", \"value2-1\");\n    nl.add(\"key1\", \"value1-2\");\n    nl.add(\"key2\", \"value2-2\");\n    nl.add(\"key1\", \"value1-3\");\n    nl.add(\"key2\", \"value2-3\");\n    nl.add(\"key1\", \"value1-4\");\n    nl.add(\"key2\", \"value2-4\");\n    nl.add(\"key1\", \"value1-5\");\n    nl.add(\"key2\", \"value2-5\");\n    nl.add(\"key1\", \"value1-6\");\n    nl.add(\"key2\", 0);\n    nl.add(\"key2\", \"value2-7\");\n    assertEquals(13, nl.size());\n    List<String> values = (ArrayList<String>) nl.removeConfigArgs(\"key1\");\n    assertEquals(\"value1-1\", values.get(0));\n    assertEquals(\"value1-3\", values.get(2));\n    assertEquals(6, values.size());\n    assertEquals(7, nl.size());\n    try {\n      values = (ArrayList<String>) nl.removeConfigArgs(\"key2\");\n      fail();\n    }\n    catch(SolrException e) {\n      // Expected exception.\n      assertTrue(true);\n    }\n    // nl should be unmodified when removeArgs throws an exception.\n    assertEquals(7, nl.size());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"634f330c54fd3f9f491d52036dc3f40b4f4d8934":["3ae0c36347d7586e501169851eb8fe2ad2b8f0dd"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"4cba13865da71de3b9b0937fcbc66d726089356d":["634f330c54fd3f9f491d52036dc3f40b4f4d8934"],"d1a307447328c95a00248512b40d7a5ff12ecd6a":["8d35c84fdef07284c122012ca4000d3b7285a66e"],"d8daa7a1d5d0c033d73962d5ca3bf3f9c9687693":["8d35c84fdef07284c122012ca4000d3b7285a66e","d1a307447328c95a00248512b40d7a5ff12ecd6a"],"f8061ddd97f3352007d927dae445884a6f3d857b":["8d35c84fdef07284c122012ca4000d3b7285a66e","d1a307447328c95a00248512b40d7a5ff12ecd6a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["d1a307447328c95a00248512b40d7a5ff12ecd6a"],"8d35c84fdef07284c122012ca4000d3b7285a66e":["4cba13865da71de3b9b0937fcbc66d726089356d"],"3ae0c36347d7586e501169851eb8fe2ad2b8f0dd":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"634f330c54fd3f9f491d52036dc3f40b4f4d8934":["4cba13865da71de3b9b0937fcbc66d726089356d"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3ae0c36347d7586e501169851eb8fe2ad2b8f0dd"],"4cba13865da71de3b9b0937fcbc66d726089356d":["8d35c84fdef07284c122012ca4000d3b7285a66e"],"d1a307447328c95a00248512b40d7a5ff12ecd6a":["d8daa7a1d5d0c033d73962d5ca3bf3f9c9687693","f8061ddd97f3352007d927dae445884a6f3d857b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"d8daa7a1d5d0c033d73962d5ca3bf3f9c9687693":[],"f8061ddd97f3352007d927dae445884a6f3d857b":[],"3ae0c36347d7586e501169851eb8fe2ad2b8f0dd":["634f330c54fd3f9f491d52036dc3f40b4f4d8934"],"8d35c84fdef07284c122012ca4000d3b7285a66e":["d1a307447328c95a00248512b40d7a5ff12ecd6a","d8daa7a1d5d0c033d73962d5ca3bf3f9c9687693","f8061ddd97f3352007d927dae445884a6f3d857b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["d8daa7a1d5d0c033d73962d5ca3bf3f9c9687693","f8061ddd97f3352007d927dae445884a6f3d857b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}