{"path":"lucene/luke/src/test/org/apache/lucene/luke/models/overview/OverviewTestBase#createIndex().mjava","commits":[{"id":"f554f2d9b5456248ab6467b9d4f6015686797a6c","date":1554891357,"type":0,"author":"Tomoko Uchida","isMerge":false,"pathNew":"lucene/luke/src/test/org/apache/lucene/luke/models/overview/OverviewTestBase#createIndex().mjava","pathOld":"/dev/null","sourceNew":"  private Path createIndex() throws IOException {\n    Path indexDir = createTempDir();\n\n    Directory dir = newFSDirectory(indexDir);\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir, new MockAnalyzer(random()));\n\n    Document doc1 = new Document();\n    doc1.add(newStringField(\"f1\", \"1\", Field.Store.NO));\n    doc1.add(newTextField(\"f2\", \"a b c d e\", Field.Store.NO));\n    writer.addDocument(doc1);\n\n    Document doc2 = new Document();\n    doc2.add(newStringField(\"f1\", \"2\", Field.Store.NO));\n    doc2.add(new TextField(\"f2\", \"a c\", Field.Store.NO));\n    writer.addDocument(doc2);\n\n    Document doc3 = new Document();\n    doc3.add(newStringField(\"f1\", \"3\", Field.Store.NO));\n    doc3.add(newTextField(\"f2\", \"a f\", Field.Store.NO));\n    writer.addDocument(doc3);\n\n    Map<String, String> userData = new HashMap<>();\n    userData.put(\"data\", \"val\");\n    writer.w.setLiveCommitData(userData.entrySet());\n\n    writer.commit();\n\n    writer.close();\n    dir.close();\n\n    return indexDir;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["f98478ea293fc6674d844382c57112b669f1092f"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"f98478ea293fc6674d844382c57112b669f1092f","date":1570263310,"type":3,"author":"Tomoko Uchida","isMerge":false,"pathNew":"lucene/luke/src/test/org/apache/lucene/luke/models/overview/OverviewTestBase#createIndex().mjava","pathOld":"lucene/luke/src/test/org/apache/lucene/luke/models/overview/OverviewTestBase#createIndex().mjava","sourceNew":"  private Path createIndex() throws IOException {\n    Path indexDir = createTempDir();\n\n    Directory dir = newFSDirectory(indexDir);\n    IndexWriterConfig config = new IndexWriterConfig(new MockAnalyzer(random()));\n    config.setMergePolicy(NoMergePolicy.INSTANCE);  // see LUCENE-8998\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir, config);\n\n    Document doc1 = new Document();\n    doc1.add(newStringField(\"f1\", \"1\", Field.Store.NO));\n    doc1.add(newTextField(\"f2\", \"a b c d e\", Field.Store.NO));\n    writer.addDocument(doc1);\n\n    Document doc2 = new Document();\n    doc2.add(newStringField(\"f1\", \"2\", Field.Store.NO));\n    doc2.add(new TextField(\"f2\", \"a c\", Field.Store.NO));\n    writer.addDocument(doc2);\n\n    Document doc3 = new Document();\n    doc3.add(newStringField(\"f1\", \"3\", Field.Store.NO));\n    doc3.add(newTextField(\"f2\", \"a f\", Field.Store.NO));\n    writer.addDocument(doc3);\n\n    Map<String, String> userData = new HashMap<>();\n    userData.put(\"data\", \"val\");\n    writer.w.setLiveCommitData(userData.entrySet());\n\n    writer.commit();\n\n    writer.close();\n    dir.close();\n\n    return indexDir;\n  }\n\n","sourceOld":"  private Path createIndex() throws IOException {\n    Path indexDir = createTempDir();\n\n    Directory dir = newFSDirectory(indexDir);\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir, new MockAnalyzer(random()));\n\n    Document doc1 = new Document();\n    doc1.add(newStringField(\"f1\", \"1\", Field.Store.NO));\n    doc1.add(newTextField(\"f2\", \"a b c d e\", Field.Store.NO));\n    writer.addDocument(doc1);\n\n    Document doc2 = new Document();\n    doc2.add(newStringField(\"f1\", \"2\", Field.Store.NO));\n    doc2.add(new TextField(\"f2\", \"a c\", Field.Store.NO));\n    writer.addDocument(doc2);\n\n    Document doc3 = new Document();\n    doc3.add(newStringField(\"f1\", \"3\", Field.Store.NO));\n    doc3.add(newTextField(\"f2\", \"a f\", Field.Store.NO));\n    writer.addDocument(doc3);\n\n    Map<String, String> userData = new HashMap<>();\n    userData.put(\"data\", \"val\");\n    writer.w.setLiveCommitData(userData.entrySet());\n\n    writer.commit();\n\n    writer.close();\n    dir.close();\n\n    return indexDir;\n  }\n\n","bugFix":["f554f2d9b5456248ab6467b9d4f6015686797a6c"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b0b597c65628ca9e73913a07e81691f8229bae35","date":1571224353,"type":3,"author":"jimczi","isMerge":true,"pathNew":"lucene/luke/src/test/org/apache/lucene/luke/models/overview/OverviewTestBase#createIndex().mjava","pathOld":"lucene/luke/src/test/org/apache/lucene/luke/models/overview/OverviewTestBase#createIndex().mjava","sourceNew":"  private Path createIndex() throws IOException {\n    Path indexDir = createTempDir();\n\n    Directory dir = newFSDirectory(indexDir);\n    IndexWriterConfig config = new IndexWriterConfig(new MockAnalyzer(random()));\n    config.setMergePolicy(NoMergePolicy.INSTANCE);  // see LUCENE-8998\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir, config);\n\n    Document doc1 = new Document();\n    doc1.add(newStringField(\"f1\", \"1\", Field.Store.NO));\n    doc1.add(newTextField(\"f2\", \"a b c d e\", Field.Store.NO));\n    writer.addDocument(doc1);\n\n    Document doc2 = new Document();\n    doc2.add(newStringField(\"f1\", \"2\", Field.Store.NO));\n    doc2.add(new TextField(\"f2\", \"a c\", Field.Store.NO));\n    writer.addDocument(doc2);\n\n    Document doc3 = new Document();\n    doc3.add(newStringField(\"f1\", \"3\", Field.Store.NO));\n    doc3.add(newTextField(\"f2\", \"a f\", Field.Store.NO));\n    writer.addDocument(doc3);\n\n    Map<String, String> userData = new HashMap<>();\n    userData.put(\"data\", \"val\");\n    writer.w.setLiveCommitData(userData.entrySet());\n\n    writer.commit();\n\n    writer.close();\n    dir.close();\n\n    return indexDir;\n  }\n\n","sourceOld":"  private Path createIndex() throws IOException {\n    Path indexDir = createTempDir();\n\n    Directory dir = newFSDirectory(indexDir);\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir, new MockAnalyzer(random()));\n\n    Document doc1 = new Document();\n    doc1.add(newStringField(\"f1\", \"1\", Field.Store.NO));\n    doc1.add(newTextField(\"f2\", \"a b c d e\", Field.Store.NO));\n    writer.addDocument(doc1);\n\n    Document doc2 = new Document();\n    doc2.add(newStringField(\"f1\", \"2\", Field.Store.NO));\n    doc2.add(new TextField(\"f2\", \"a c\", Field.Store.NO));\n    writer.addDocument(doc2);\n\n    Document doc3 = new Document();\n    doc3.add(newStringField(\"f1\", \"3\", Field.Store.NO));\n    doc3.add(newTextField(\"f2\", \"a f\", Field.Store.NO));\n    writer.addDocument(doc3);\n\n    Map<String, String> userData = new HashMap<>();\n    userData.put(\"data\", \"val\");\n    writer.w.setLiveCommitData(userData.entrySet());\n\n    writer.commit();\n\n    writer.close();\n    dir.close();\n\n    return indexDir;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"f554f2d9b5456248ab6467b9d4f6015686797a6c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"f98478ea293fc6674d844382c57112b669f1092f":["f554f2d9b5456248ab6467b9d4f6015686797a6c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["f98478ea293fc6674d844382c57112b669f1092f"],"b0b597c65628ca9e73913a07e81691f8229bae35":["f554f2d9b5456248ab6467b9d4f6015686797a6c","f98478ea293fc6674d844382c57112b669f1092f"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["f554f2d9b5456248ab6467b9d4f6015686797a6c"],"f554f2d9b5456248ab6467b9d4f6015686797a6c":["f98478ea293fc6674d844382c57112b669f1092f","b0b597c65628ca9e73913a07e81691f8229bae35"],"f98478ea293fc6674d844382c57112b669f1092f":["cd5edd1f2b162a5cfa08efd17851a07373a96817","b0b597c65628ca9e73913a07e81691f8229bae35"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"b0b597c65628ca9e73913a07e81691f8229bae35":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817","b0b597c65628ca9e73913a07e81691f8229bae35"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}