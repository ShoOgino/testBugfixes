{"path":"solr/core/src/test/org/apache/solr/cloud/DistribJoinFromCollectionTest#shutdown().mjava","commits":[{"id":"da83c90417e805f2b355afc2d79f4d2b2ce27469","date":1464346037,"type":0,"author":"Mikhail Khludnev","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/DistribJoinFromCollectionTest#shutdown().mjava","pathOld":"/dev/null","sourceNew":"  @AfterClass\n  public static void shutdown() {\n    log.info(\"DistribJoinFromCollectionTest logic complete ... deleting the \" + toColl + \" and \" + fromColl + \" collections\");\n\n    // try to clean up\n    for (String c : new String[]{ toColl, fromColl }) {\n      try {\n        CollectionAdminRequest.Delete req =  CollectionAdminRequest.deleteCollection(c);\n        req.process(cloudClient);\n      } catch (Exception e) {\n        // don't fail the test\n        log.warn(\"Could not delete collection {} after test completed due to: \" + e, c);\n      }\n    }\n\n    log.info(\"DistribJoinFromCollectionTest succeeded ... shutting down now!\");\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d6a95b7b666da79218aa9365b9d9adcb42351ee3","date":1464382787,"type":3,"author":"Mikhail Khludnev","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/DistribJoinFromCollectionTest#shutdown().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/DistribJoinFromCollectionTest#shutdown().mjava","sourceNew":"  @AfterClass\n  public static void shutdown() {\n    log.info(\"DistribJoinFromCollectionTest logic complete ... deleting the \" + toColl + \" and \" + fromColl + \" collections\");\n\n    // try to clean up\n    for (String c : new String[]{ toColl, fromColl }) {\n      try {\n        CollectionAdminRequest.Delete req =  CollectionAdminRequest.deleteCollection(c);\n        req.process(cluster.getSolrClient());\n      } catch (Exception e) {\n        // don't fail the test\n        log.warn(\"Could not delete collection {} after test completed due to: \" + e, c);\n      }\n    }\n\n    log.info(\"DistribJoinFromCollectionTest succeeded ... shutting down now!\");\n  }\n\n","sourceOld":"  @AfterClass\n  public static void shutdown() {\n    log.info(\"DistribJoinFromCollectionTest logic complete ... deleting the \" + toColl + \" and \" + fromColl + \" collections\");\n\n    // try to clean up\n    for (String c : new String[]{ toColl, fromColl }) {\n      try {\n        CollectionAdminRequest.Delete req =  CollectionAdminRequest.deleteCollection(c);\n        req.process(cloudClient);\n      } catch (Exception e) {\n        // don't fail the test\n        log.warn(\"Could not delete collection {} after test completed due to: \" + e, c);\n      }\n    }\n\n    log.info(\"DistribJoinFromCollectionTest succeeded ... shutting down now!\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"da8a02bef7458089240404614139b53c9f875ec7","date":1464597207,"type":0,"author":"Mike McCandless","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/cloud/DistribJoinFromCollectionTest#shutdown().mjava","pathOld":"/dev/null","sourceNew":"  @AfterClass\n  public static void shutdown() {\n    log.info(\"DistribJoinFromCollectionTest logic complete ... deleting the \" + toColl + \" and \" + fromColl + \" collections\");\n\n    // try to clean up\n    for (String c : new String[]{ toColl, fromColl }) {\n      try {\n        CollectionAdminRequest.Delete req =  CollectionAdminRequest.deleteCollection(c);\n        req.process(cluster.getSolrClient());\n      } catch (Exception e) {\n        // don't fail the test\n        log.warn(\"Could not delete collection {} after test completed due to: \" + e, c);\n      }\n    }\n\n    log.info(\"DistribJoinFromCollectionTest succeeded ... shutting down now!\");\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5b8ee93140fd0efef7e101786e3ed5160a700b5f","date":1464820111,"type":0,"author":"Mike McCandless","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/cloud/DistribJoinFromCollectionTest#shutdown().mjava","pathOld":"/dev/null","sourceNew":"  @AfterClass\n  public static void shutdown() {\n    log.info(\"DistribJoinFromCollectionTest logic complete ... deleting the \" + toColl + \" and \" + fromColl + \" collections\");\n\n    // try to clean up\n    for (String c : new String[]{ toColl, fromColl }) {\n      try {\n        CollectionAdminRequest.Delete req =  CollectionAdminRequest.deleteCollection(c);\n        req.process(cluster.getSolrClient());\n      } catch (Exception e) {\n        // don't fail the test\n        log.warn(\"Could not delete collection {} after test completed due to: \" + e, c);\n      }\n    }\n\n    log.info(\"DistribJoinFromCollectionTest succeeded ... shutting down now!\");\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":0,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/cloud/DistribJoinFromCollectionTest#shutdown().mjava","pathOld":"/dev/null","sourceNew":"  @AfterClass\n  public static void shutdown() {\n    log.info(\"DistribJoinFromCollectionTest logic complete ... deleting the \" + toColl + \" and \" + fromColl + \" collections\");\n\n    // try to clean up\n    for (String c : new String[]{ toColl, fromColl }) {\n      try {\n        CollectionAdminRequest.Delete req =  CollectionAdminRequest.deleteCollection(c);\n        req.process(cluster.getSolrClient());\n      } catch (Exception e) {\n        // don't fail the test\n        log.warn(\"Could not delete collection {} after test completed due to: \" + e, c);\n      }\n    }\n\n    log.info(\"DistribJoinFromCollectionTest succeeded ... shutting down now!\");\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a966532d92cf9ba2856f15a8140151bb6b518e4b","date":1588290631,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/DistribJoinFromCollectionTest#shutdown().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/DistribJoinFromCollectionTest#shutdown().mjava","sourceNew":"  @AfterClass\n  public static void shutdown() {\n    log.info(\"DistribJoinFromCollectionTest logic complete ... deleting the {} and {} collections\", toColl, fromColl);\n\n    // try to clean up\n    for (String c : new String[]{ toColl, fromColl }) {\n      try {\n        CollectionAdminRequest.Delete req =  CollectionAdminRequest.deleteCollection(c);\n        req.process(cluster.getSolrClient());\n      } catch (Exception e) {\n        // don't fail the test\n        log.warn(\"Could not delete collection {} after test completed due to:\", c, e);\n      }\n    }\n\n    log.info(\"DistribJoinFromCollectionTest succeeded ... shutting down now!\");\n  }\n\n","sourceOld":"  @AfterClass\n  public static void shutdown() {\n    log.info(\"DistribJoinFromCollectionTest logic complete ... deleting the \" + toColl + \" and \" + fromColl + \" collections\");\n\n    // try to clean up\n    for (String c : new String[]{ toColl, fromColl }) {\n      try {\n        CollectionAdminRequest.Delete req =  CollectionAdminRequest.deleteCollection(c);\n        req.process(cluster.getSolrClient());\n      } catch (Exception e) {\n        // don't fail the test\n        log.warn(\"Could not delete collection {} after test completed due to: \" + e, c);\n      }\n    }\n\n    log.info(\"DistribJoinFromCollectionTest succeeded ... shutting down now!\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"da8a02bef7458089240404614139b53c9f875ec7":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","d6a95b7b666da79218aa9365b9d9adcb42351ee3"],"da83c90417e805f2b355afc2d79f4d2b2ce27469":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"d6a95b7b666da79218aa9365b9d9adcb42351ee3":["da83c90417e805f2b355afc2d79f4d2b2ce27469"],"5b8ee93140fd0efef7e101786e3ed5160a700b5f":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","d6a95b7b666da79218aa9365b9d9adcb42351ee3"],"a966532d92cf9ba2856f15a8140151bb6b518e4b":["d6a95b7b666da79218aa9365b9d9adcb42351ee3"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","d6a95b7b666da79218aa9365b9d9adcb42351ee3"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a966532d92cf9ba2856f15a8140151bb6b518e4b"]},"commit2Childs":{"da8a02bef7458089240404614139b53c9f875ec7":[],"da83c90417e805f2b355afc2d79f4d2b2ce27469":["d6a95b7b666da79218aa9365b9d9adcb42351ee3"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["da8a02bef7458089240404614139b53c9f875ec7","da83c90417e805f2b355afc2d79f4d2b2ce27469","5b8ee93140fd0efef7e101786e3ed5160a700b5f","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"d6a95b7b666da79218aa9365b9d9adcb42351ee3":["da8a02bef7458089240404614139b53c9f875ec7","5b8ee93140fd0efef7e101786e3ed5160a700b5f","a966532d92cf9ba2856f15a8140151bb6b518e4b","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"5b8ee93140fd0efef7e101786e3ed5160a700b5f":[],"a966532d92cf9ba2856f15a8140151bb6b518e4b":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["da8a02bef7458089240404614139b53c9f875ec7","5b8ee93140fd0efef7e101786e3ed5160a700b5f","4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}