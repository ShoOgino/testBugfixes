{"path":"lucene/src/test/org/apache/lucene/queryParser/TestQueryParser#testPositionIncrements().mjava","commits":[{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/queryParser/TestQueryParser#testPositionIncrements().mjava","pathOld":"src/test/org/apache/lucene/queryParser/TestQueryParser#testPositionIncrements().mjava","sourceNew":"  // LUCENE-2002: make sure defaults for StandardAnalyzer's\n  // enableStopPositionIncr & QueryParser's enablePosIncr\n  // \"match\"\n  public void testPositionIncrements() throws Exception {\n    Directory dir = new MockRAMDirectory();\n    Analyzer a = new StandardAnalyzer(TEST_VERSION_CURRENT);\n    IndexWriter w = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, a));\n    Document doc = new Document();\n    doc.add(new Field(\"f\", \"the wizard of ozzy\", Field.Store.NO, Field.Index.ANALYZED));\n    w.addDocument(doc);\n    IndexReader r = w.getReader();\n    w.close();\n    IndexSearcher s = new IndexSearcher(r);\n    QueryParser qp = new QueryParser(TEST_VERSION_CURRENT, \"f\", a);\n    Query q = qp.parse(\"\\\"wizard of ozzy\\\"\");\n    assertEquals(1, s.search(q, 1).totalHits);\n    r.close();\n    dir.close();\n  }\n\n","sourceOld":"  // LUCENE-2002: make sure defaults for StandardAnalyzer's\n  // enableStopPositionIncr & QueryParser's enablePosIncr\n  // \"match\"\n  public void testPositionIncrements() throws Exception {\n    Directory dir = new MockRAMDirectory();\n    Analyzer a = new StandardAnalyzer(TEST_VERSION_CURRENT);\n    IndexWriter w = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, a));\n    Document doc = new Document();\n    doc.add(new Field(\"f\", \"the wizard of ozzy\", Field.Store.NO, Field.Index.ANALYZED));\n    w.addDocument(doc);\n    IndexReader r = w.getReader();\n    w.close();\n    IndexSearcher s = new IndexSearcher(r);\n    QueryParser qp = new QueryParser(TEST_VERSION_CURRENT, \"f\", a);\n    Query q = qp.parse(\"\\\"wizard of ozzy\\\"\");\n    assertEquals(1, s.search(q, 1).totalHits);\n    r.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c7f8e68717c68517265937c911e1ce9f25750247","date":1274071103,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/queryParser/TestQueryParser#testPositionIncrements().mjava","pathOld":"lucene/src/test/org/apache/lucene/queryParser/TestQueryParser#testPositionIncrements().mjava","sourceNew":"  // LUCENE-2002: make sure defaults for StandardAnalyzer's\n  // enableStopPositionIncr & QueryParser's enablePosIncr\n  // \"match\"\n  public void testPositionIncrements() throws Exception {\n    Directory dir = new MockRAMDirectory();\n    Analyzer a = new MockAnalyzer(MockTokenizer.SIMPLE, true, MockTokenFilter.ENGLISH_STOPSET, true);\n    IndexWriter w = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, a));\n    Document doc = new Document();\n    doc.add(new Field(\"f\", \"the wizard of ozzy\", Field.Store.NO, Field.Index.ANALYZED));\n    w.addDocument(doc);\n    IndexReader r = w.getReader();\n    w.close();\n    IndexSearcher s = new IndexSearcher(r);\n    QueryParser qp = new QueryParser(TEST_VERSION_CURRENT, \"f\", a);\n    Query q = qp.parse(\"\\\"wizard of ozzy\\\"\");\n    assertEquals(1, s.search(q, 1).totalHits);\n    r.close();\n    dir.close();\n  }\n\n","sourceOld":"  // LUCENE-2002: make sure defaults for StandardAnalyzer's\n  // enableStopPositionIncr & QueryParser's enablePosIncr\n  // \"match\"\n  public void testPositionIncrements() throws Exception {\n    Directory dir = new MockRAMDirectory();\n    Analyzer a = new StandardAnalyzer(TEST_VERSION_CURRENT);\n    IndexWriter w = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, a));\n    Document doc = new Document();\n    doc.add(new Field(\"f\", \"the wizard of ozzy\", Field.Store.NO, Field.Index.ANALYZED));\n    w.addDocument(doc);\n    IndexReader r = w.getReader();\n    w.close();\n    IndexSearcher s = new IndexSearcher(r);\n    QueryParser qp = new QueryParser(TEST_VERSION_CURRENT, \"f\", a);\n    Query q = qp.parse(\"\\\"wizard of ozzy\\\"\");\n    assertEquals(1, s.search(q, 1).totalHits);\n    r.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"ab9633cb67e3c0aec3c066147a23a957d6e7ad8c","date":1281646583,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/queryParser/TestQueryParser#testPositionIncrements().mjava","pathOld":"lucene/src/test/org/apache/lucene/queryParser/TestQueryParser#testPositionIncrements().mjava","sourceNew":"  // LUCENE-2002: make sure defaults for StandardAnalyzer's\n  // enableStopPositionIncr & QueryParser's enablePosIncr\n  // \"match\"\n  public void testPositionIncrements() throws Exception {\n    Random random = newRandom();\n    Directory dir = newDirectory(random);\n    Analyzer a = new MockAnalyzer(MockTokenizer.SIMPLE, true, MockTokenFilter.ENGLISH_STOPSET, true);\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig(random, TEST_VERSION_CURRENT, a));\n    Document doc = new Document();\n    doc.add(new Field(\"f\", \"the wizard of ozzy\", Field.Store.NO, Field.Index.ANALYZED));\n    w.addDocument(doc);\n    IndexReader r = w.getReader();\n    w.close();\n    IndexSearcher s = new IndexSearcher(r);\n    QueryParser qp = new QueryParser(TEST_VERSION_CURRENT, \"f\", a);\n    Query q = qp.parse(\"\\\"wizard of ozzy\\\"\");\n    assertEquals(1, s.search(q, 1).totalHits);\n    r.close();\n    dir.close();\n  }\n\n","sourceOld":"  // LUCENE-2002: make sure defaults for StandardAnalyzer's\n  // enableStopPositionIncr & QueryParser's enablePosIncr\n  // \"match\"\n  public void testPositionIncrements() throws Exception {\n    Directory dir = new MockRAMDirectory();\n    Analyzer a = new MockAnalyzer(MockTokenizer.SIMPLE, true, MockTokenFilter.ENGLISH_STOPSET, true);\n    IndexWriter w = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, a));\n    Document doc = new Document();\n    doc.add(new Field(\"f\", \"the wizard of ozzy\", Field.Store.NO, Field.Index.ANALYZED));\n    w.addDocument(doc);\n    IndexReader r = w.getReader();\n    w.close();\n    IndexSearcher s = new IndexSearcher(r);\n    QueryParser qp = new QueryParser(TEST_VERSION_CURRENT, \"f\", a);\n    Query q = qp.parse(\"\\\"wizard of ozzy\\\"\");\n    assertEquals(1, s.search(q, 1).totalHits);\n    r.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"1f653cfcf159baeaafe5d01682a911e95bba4012","date":1284122058,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/queryParser/TestQueryParser#testPositionIncrements().mjava","pathOld":"lucene/src/test/org/apache/lucene/queryParser/TestQueryParser#testPositionIncrements().mjava","sourceNew":"  // LUCENE-2002: make sure defaults for StandardAnalyzer's\n  // enableStopPositionIncr & QueryParser's enablePosIncr\n  // \"match\"\n  public void testPositionIncrements() throws Exception {\n    Directory dir = newDirectory();\n    Analyzer a = new MockAnalyzer(MockTokenizer.SIMPLE, true, MockTokenFilter.ENGLISH_STOPSET, true);\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, a));\n    Document doc = new Document();\n    doc.add(new Field(\"f\", \"the wizard of ozzy\", Field.Store.NO, Field.Index.ANALYZED));\n    w.addDocument(doc);\n    IndexReader r = w.getReader();\n    w.close();\n    IndexSearcher s = new IndexSearcher(r);\n    QueryParser qp = new QueryParser(TEST_VERSION_CURRENT, \"f\", a);\n    Query q = qp.parse(\"\\\"wizard of ozzy\\\"\");\n    assertEquals(1, s.search(q, 1).totalHits);\n    r.close();\n    dir.close();\n  }\n\n","sourceOld":"  // LUCENE-2002: make sure defaults for StandardAnalyzer's\n  // enableStopPositionIncr & QueryParser's enablePosIncr\n  // \"match\"\n  public void testPositionIncrements() throws Exception {\n    Random random = newRandom();\n    Directory dir = newDirectory(random);\n    Analyzer a = new MockAnalyzer(MockTokenizer.SIMPLE, true, MockTokenFilter.ENGLISH_STOPSET, true);\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig(random, TEST_VERSION_CURRENT, a));\n    Document doc = new Document();\n    doc.add(new Field(\"f\", \"the wizard of ozzy\", Field.Store.NO, Field.Index.ANALYZED));\n    w.addDocument(doc);\n    IndexReader r = w.getReader();\n    w.close();\n    IndexSearcher s = new IndexSearcher(r);\n    QueryParser qp = new QueryParser(TEST_VERSION_CURRENT, \"f\", a);\n    Query q = qp.parse(\"\\\"wizard of ozzy\\\"\");\n    assertEquals(1, s.search(q, 1).totalHits);\n    r.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"132903c28af3aa6f67284b78de91c0f0a99488c2","date":1284282129,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/queryParser/TestQueryParser#testPositionIncrements().mjava","pathOld":"lucene/src/test/org/apache/lucene/queryParser/TestQueryParser#testPositionIncrements().mjava","sourceNew":"  // LUCENE-2002: make sure defaults for StandardAnalyzer's\n  // enableStopPositionIncr & QueryParser's enablePosIncr\n  // \"match\"\n  public void testPositionIncrements() throws Exception {\n    Directory dir = newDirectory();\n    Analyzer a = new MockAnalyzer(MockTokenizer.SIMPLE, true, MockTokenFilter.ENGLISH_STOPSET, true);\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, a));\n    Document doc = new Document();\n    doc.add(newField(\"f\", \"the wizard of ozzy\", Field.Store.NO, Field.Index.ANALYZED));\n    w.addDocument(doc);\n    IndexReader r = w.getReader();\n    w.close();\n    IndexSearcher s = new IndexSearcher(r);\n    QueryParser qp = new QueryParser(TEST_VERSION_CURRENT, \"f\", a);\n    Query q = qp.parse(\"\\\"wizard of ozzy\\\"\");\n    assertEquals(1, s.search(q, 1).totalHits);\n    r.close();\n    dir.close();\n  }\n\n","sourceOld":"  // LUCENE-2002: make sure defaults for StandardAnalyzer's\n  // enableStopPositionIncr & QueryParser's enablePosIncr\n  // \"match\"\n  public void testPositionIncrements() throws Exception {\n    Directory dir = newDirectory();\n    Analyzer a = new MockAnalyzer(MockTokenizer.SIMPLE, true, MockTokenFilter.ENGLISH_STOPSET, true);\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, a));\n    Document doc = new Document();\n    doc.add(new Field(\"f\", \"the wizard of ozzy\", Field.Store.NO, Field.Index.ANALYZED));\n    w.addDocument(doc);\n    IndexReader r = w.getReader();\n    w.close();\n    IndexSearcher s = new IndexSearcher(r);\n    QueryParser qp = new QueryParser(TEST_VERSION_CURRENT, \"f\", a);\n    Query q = qp.parse(\"\\\"wizard of ozzy\\\"\");\n    assertEquals(1, s.search(q, 1).totalHits);\n    r.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"296e4ed69ccbda3c7b5fdb86c7acaa43c9074e01","date":1286712181,"type":3,"author":"Grant Ingersoll","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/queryParser/TestQueryParser#testPositionIncrements().mjava","pathOld":"lucene/src/test/org/apache/lucene/queryParser/TestQueryParser#testPositionIncrements().mjava","sourceNew":"  // LUCENE-2002: make sure defaults for StandardAnalyzer's\n  // enableStopPositionIncr & QueryParser's enablePosIncr\n  // \"match\"\n  public void testPositionIncrements() throws Exception {\n    Directory dir = newDirectory();\n    Analyzer a = new MockAnalyzer(MockTokenizer.SIMPLE, true, MockTokenFilter.ENGLISH_STOPSET, true);\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, a));\n    Document doc = new Document();\n    doc.add(newField(\"f\", \"the wizard of ozzy\", Field.Store.NO, Field.Index.ANALYZED));\n    w.addDocument(doc);\n    IndexReader r = IndexReader.open(w);\n    w.close();\n    IndexSearcher s = new IndexSearcher(r);\n    QueryParser qp = new QueryParser(TEST_VERSION_CURRENT, \"f\", a);\n    Query q = qp.parse(\"\\\"wizard of ozzy\\\"\");\n    assertEquals(1, s.search(q, 1).totalHits);\n    r.close();\n    dir.close();\n  }\n\n","sourceOld":"  // LUCENE-2002: make sure defaults for StandardAnalyzer's\n  // enableStopPositionIncr & QueryParser's enablePosIncr\n  // \"match\"\n  public void testPositionIncrements() throws Exception {\n    Directory dir = newDirectory();\n    Analyzer a = new MockAnalyzer(MockTokenizer.SIMPLE, true, MockTokenFilter.ENGLISH_STOPSET, true);\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, a));\n    Document doc = new Document();\n    doc.add(newField(\"f\", \"the wizard of ozzy\", Field.Store.NO, Field.Index.ANALYZED));\n    w.addDocument(doc);\n    IndexReader r = w.getReader();\n    w.close();\n    IndexSearcher s = new IndexSearcher(r);\n    QueryParser qp = new QueryParser(TEST_VERSION_CURRENT, \"f\", a);\n    Query q = qp.parse(\"\\\"wizard of ozzy\\\"\");\n    assertEquals(1, s.search(q, 1).totalHits);\n    r.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","date":1292920096,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/queryParser/TestQueryParser#testPositionIncrements().mjava","pathOld":"lucene/src/test/org/apache/lucene/queryParser/TestQueryParser#testPositionIncrements().mjava","sourceNew":"  // LUCENE-2002: make sure defaults for StandardAnalyzer's\n  // enableStopPositionIncr & QueryParser's enablePosIncr\n  // \"match\"\n  public void testPositionIncrements() throws Exception {\n    Directory dir = newDirectory();\n    Analyzer a = new MockAnalyzer(MockTokenizer.SIMPLE, true, MockTokenFilter.ENGLISH_STOPSET, true);\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, a));\n    Document doc = new Document();\n    doc.add(newField(\"f\", \"the wizard of ozzy\", Field.Store.NO, Field.Index.ANALYZED));\n    w.addDocument(doc);\n    IndexReader r = IndexReader.open(w);\n    w.close();\n    IndexSearcher s = new IndexSearcher(r);\n    QueryParser qp = new QueryParser(TEST_VERSION_CURRENT, \"f\", a);\n    Query q = qp.parse(\"\\\"wizard of ozzy\\\"\");\n    assertEquals(1, s.search(q, 1).totalHits);\n    r.close();\n    dir.close();\n  }\n\n","sourceOld":"  // LUCENE-2002: make sure defaults for StandardAnalyzer's\n  // enableStopPositionIncr & QueryParser's enablePosIncr\n  // \"match\"\n  public void testPositionIncrements() throws Exception {\n    Directory dir = new MockRAMDirectory();\n    Analyzer a = new MockAnalyzer(MockTokenizer.SIMPLE, true, MockTokenFilter.ENGLISH_STOPSET, true);\n    IndexWriter w = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, a));\n    Document doc = new Document();\n    doc.add(new Field(\"f\", \"the wizard of ozzy\", Field.Store.NO, Field.Index.ANALYZED));\n    w.addDocument(doc);\n    IndexReader r = w.getReader();\n    w.close();\n    IndexSearcher s = new IndexSearcher(r);\n    QueryParser qp = new QueryParser(TEST_VERSION_CURRENT, \"f\", a);\n    Query q = qp.parse(\"\\\"wizard of ozzy\\\"\");\n    assertEquals(1, s.search(q, 1).totalHits);\n    r.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"eb378f8bdee16a26810e086303a4a86b4930ea12","date":1296410797,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/queryParser/TestQueryParser#testPositionIncrements().mjava","pathOld":"lucene/src/test/org/apache/lucene/queryParser/TestQueryParser#testPositionIncrements().mjava","sourceNew":"  // LUCENE-2002: make sure defaults for StandardAnalyzer's\n  // enableStopPositionIncr & QueryParser's enablePosIncr\n  // \"match\"\n  public void testPositionIncrements() throws Exception {\n    Directory dir = newDirectory();\n    Analyzer a = new MockAnalyzer(MockTokenizer.SIMPLE, true, MockTokenFilter.ENGLISH_STOPSET, true);\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, a));\n    Document doc = new Document();\n    doc.add(newField(\"f\", \"the wizard of ozzy\", Field.Store.NO, Field.Index.ANALYZED));\n    w.addDocument(doc);\n    IndexReader r = IndexReader.open(w, true);\n    w.close();\n    IndexSearcher s = new IndexSearcher(r);\n    QueryParser qp = new QueryParser(TEST_VERSION_CURRENT, \"f\", a);\n    Query q = qp.parse(\"\\\"wizard of ozzy\\\"\");\n    assertEquals(1, s.search(q, 1).totalHits);\n    r.close();\n    dir.close();\n  }\n\n","sourceOld":"  // LUCENE-2002: make sure defaults for StandardAnalyzer's\n  // enableStopPositionIncr & QueryParser's enablePosIncr\n  // \"match\"\n  public void testPositionIncrements() throws Exception {\n    Directory dir = newDirectory();\n    Analyzer a = new MockAnalyzer(MockTokenizer.SIMPLE, true, MockTokenFilter.ENGLISH_STOPSET, true);\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, a));\n    Document doc = new Document();\n    doc.add(newField(\"f\", \"the wizard of ozzy\", Field.Store.NO, Field.Index.ANALYZED));\n    w.addDocument(doc);\n    IndexReader r = IndexReader.open(w);\n    w.close();\n    IndexSearcher s = new IndexSearcher(r);\n    QueryParser qp = new QueryParser(TEST_VERSION_CURRENT, \"f\", a);\n    Query q = qp.parse(\"\\\"wizard of ozzy\\\"\");\n    assertEquals(1, s.search(q, 1).totalHits);\n    r.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"790e1fde4caa765b3faaad3fbcd25c6973450336","date":1296689245,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/queryParser/TestQueryParser#testPositionIncrements().mjava","pathOld":"lucene/src/test/org/apache/lucene/queryParser/TestQueryParser#testPositionIncrements().mjava","sourceNew":"  // LUCENE-2002: make sure defaults for StandardAnalyzer's\n  // enableStopPositionIncr & QueryParser's enablePosIncr\n  // \"match\"\n  public void testPositionIncrements() throws Exception {\n    Directory dir = newDirectory();\n    Analyzer a = new MockAnalyzer(MockTokenizer.SIMPLE, true, MockTokenFilter.ENGLISH_STOPSET, true);\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, a));\n    Document doc = new Document();\n    doc.add(newField(\"f\", \"the wizard of ozzy\", Field.Store.NO, Field.Index.ANALYZED));\n    w.addDocument(doc);\n    IndexReader r = IndexReader.open(w, true);\n    w.close();\n    IndexSearcher s = newSearcher(r);\n    QueryParser qp = new QueryParser(TEST_VERSION_CURRENT, \"f\", a);\n    Query q = qp.parse(\"\\\"wizard of ozzy\\\"\");\n    assertEquals(1, s.search(q, 1).totalHits);\n    s.close();\n    r.close();\n    dir.close();\n  }\n\n","sourceOld":"  // LUCENE-2002: make sure defaults for StandardAnalyzer's\n  // enableStopPositionIncr & QueryParser's enablePosIncr\n  // \"match\"\n  public void testPositionIncrements() throws Exception {\n    Directory dir = newDirectory();\n    Analyzer a = new MockAnalyzer(MockTokenizer.SIMPLE, true, MockTokenFilter.ENGLISH_STOPSET, true);\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, a));\n    Document doc = new Document();\n    doc.add(newField(\"f\", \"the wizard of ozzy\", Field.Store.NO, Field.Index.ANALYZED));\n    w.addDocument(doc);\n    IndexReader r = IndexReader.open(w, true);\n    w.close();\n    IndexSearcher s = new IndexSearcher(r);\n    QueryParser qp = new QueryParser(TEST_VERSION_CURRENT, \"f\", a);\n    Query q = qp.parse(\"\\\"wizard of ozzy\\\"\");\n    assertEquals(1, s.search(q, 1).totalHits);\n    r.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"29ef99d61cda9641b6250bf9567329a6e65f901d","date":1297244127,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/queryParser/TestQueryParser#testPositionIncrements().mjava","pathOld":"lucene/src/test/org/apache/lucene/queryParser/TestQueryParser#testPositionIncrements().mjava","sourceNew":"  // LUCENE-2002: make sure defaults for StandardAnalyzer's\n  // enableStopPositionIncr & QueryParser's enablePosIncr\n  // \"match\"\n  public void testPositionIncrements() throws Exception {\n    Directory dir = newDirectory();\n    Analyzer a = new MockAnalyzer(MockTokenizer.SIMPLE, true, MockTokenFilter.ENGLISH_STOPSET, true);\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, a));\n    Document doc = new Document();\n    doc.add(newField(\"f\", \"the wizard of ozzy\", Field.Store.NO, Field.Index.ANALYZED));\n    w.addDocument(doc);\n    IndexReader r = IndexReader.open(w, true);\n    w.close();\n    IndexSearcher s = newSearcher(r);\n    QueryParser qp = new QueryParser(TEST_VERSION_CURRENT, \"f\", a);\n    Query q = qp.parse(\"\\\"wizard of ozzy\\\"\");\n    assertEquals(1, s.search(q, 1).totalHits);\n    s.close();\n    r.close();\n    dir.close();\n  }\n\n","sourceOld":"  // LUCENE-2002: make sure defaults for StandardAnalyzer's\n  // enableStopPositionIncr & QueryParser's enablePosIncr\n  // \"match\"\n  public void testPositionIncrements() throws Exception {\n    Directory dir = newDirectory();\n    Analyzer a = new MockAnalyzer(MockTokenizer.SIMPLE, true, MockTokenFilter.ENGLISH_STOPSET, true);\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, a));\n    Document doc = new Document();\n    doc.add(newField(\"f\", \"the wizard of ozzy\", Field.Store.NO, Field.Index.ANALYZED));\n    w.addDocument(doc);\n    IndexReader r = IndexReader.open(w);\n    w.close();\n    IndexSearcher s = new IndexSearcher(r);\n    QueryParser qp = new QueryParser(TEST_VERSION_CURRENT, \"f\", a);\n    Query q = qp.parse(\"\\\"wizard of ozzy\\\"\");\n    assertEquals(1, s.search(q, 1).totalHits);\n    r.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bde51b089eb7f86171eb3406e38a274743f9b7ac","date":1298336439,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/queryParser/TestQueryParser#testPositionIncrements().mjava","pathOld":"lucene/src/test/org/apache/lucene/queryParser/TestQueryParser#testPositionIncrements().mjava","sourceNew":"  // LUCENE-2002: make sure defaults for StandardAnalyzer's\n  // enableStopPositionIncr & QueryParser's enablePosIncr\n  // \"match\"\n  public void testPositionIncrements() throws Exception {\n    Directory dir = newDirectory();\n    Analyzer a = new MockAnalyzer(MockTokenizer.SIMPLE, true, MockTokenFilter.ENGLISH_STOPSET, true);\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, a));\n    Document doc = new Document();\n    doc.add(newField(\"f\", \"the wizard of ozzy\", Field.Store.NO, Field.Index.ANALYZED));\n    w.addDocument(doc);\n    IndexReader r = IndexReader.open(w, true);\n    w.close();\n    IndexSearcher s = newSearcher(r);\n    QueryParser qp = new QueryParser(TEST_VERSION_CURRENT, \"f\", a);\n    Query q = qp.parse(\"\\\"wizard of ozzy\\\"\");\n    assertEquals(1, s.search(q, 1).totalHits);\n    s.close();\n    r.close();\n    dir.close();\n  }\n\n","sourceOld":"  // LUCENE-2002: make sure defaults for StandardAnalyzer's\n  // enableStopPositionIncr & QueryParser's enablePosIncr\n  // \"match\"\n  public void testPositionIncrements() throws Exception {\n    Directory dir = newDirectory();\n    Analyzer a = new MockAnalyzer(MockTokenizer.SIMPLE, true, MockTokenFilter.ENGLISH_STOPSET, true);\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, a));\n    Document doc = new Document();\n    doc.add(newField(\"f\", \"the wizard of ozzy\", Field.Store.NO, Field.Index.ANALYZED));\n    w.addDocument(doc);\n    IndexReader r = IndexReader.open(w);\n    w.close();\n    IndexSearcher s = new IndexSearcher(r);\n    QueryParser qp = new QueryParser(TEST_VERSION_CURRENT, \"f\", a);\n    Query q = qp.parse(\"\\\"wizard of ozzy\\\"\");\n    assertEquals(1, s.search(q, 1).totalHits);\n    r.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f2c5f0cb44df114db4228c8f77861714b5cabaea","date":1302542431,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/queryParser/TestQueryParser#testPositionIncrements().mjava","pathOld":"lucene/src/test/org/apache/lucene/queryParser/TestQueryParser#testPositionIncrements().mjava","sourceNew":"  // LUCENE-2002: make sure defaults for StandardAnalyzer's\n  // enableStopPositionIncr & QueryParser's enablePosIncr\n  // \"match\"\n  public void testPositionIncrements() throws Exception {\n    Directory dir = newDirectory();\n    Analyzer a = new MockAnalyzer(random, MockTokenizer.SIMPLE, true, MockTokenFilter.ENGLISH_STOPSET, true);\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, a));\n    Document doc = new Document();\n    doc.add(newField(\"f\", \"the wizard of ozzy\", Field.Store.NO, Field.Index.ANALYZED));\n    w.addDocument(doc);\n    IndexReader r = IndexReader.open(w, true);\n    w.close();\n    IndexSearcher s = newSearcher(r);\n    QueryParser qp = new QueryParser(TEST_VERSION_CURRENT, \"f\", a);\n    Query q = qp.parse(\"\\\"wizard of ozzy\\\"\");\n    assertEquals(1, s.search(q, 1).totalHits);\n    s.close();\n    r.close();\n    dir.close();\n  }\n\n","sourceOld":"  // LUCENE-2002: make sure defaults for StandardAnalyzer's\n  // enableStopPositionIncr & QueryParser's enablePosIncr\n  // \"match\"\n  public void testPositionIncrements() throws Exception {\n    Directory dir = newDirectory();\n    Analyzer a = new MockAnalyzer(MockTokenizer.SIMPLE, true, MockTokenFilter.ENGLISH_STOPSET, true);\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, a));\n    Document doc = new Document();\n    doc.add(newField(\"f\", \"the wizard of ozzy\", Field.Store.NO, Field.Index.ANALYZED));\n    w.addDocument(doc);\n    IndexReader r = IndexReader.open(w, true);\n    w.close();\n    IndexSearcher s = newSearcher(r);\n    QueryParser qp = new QueryParser(TEST_VERSION_CURRENT, \"f\", a);\n    Query q = qp.parse(\"\\\"wizard of ozzy\\\"\");\n    assertEquals(1, s.search(q, 1).totalHits);\n    s.close();\n    r.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"962d04139994fce5193143ef35615499a9a96d78","date":1302693744,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/queryParser/TestQueryParser#testPositionIncrements().mjava","pathOld":"lucene/src/test/org/apache/lucene/queryParser/TestQueryParser#testPositionIncrements().mjava","sourceNew":"  // LUCENE-2002: make sure defaults for StandardAnalyzer's\n  // enableStopPositionIncr & QueryParser's enablePosIncr\n  // \"match\"\n  public void testPositionIncrements() throws Exception {\n    Directory dir = newDirectory();\n    Analyzer a = new MockAnalyzer(random, MockTokenizer.SIMPLE, true, MockTokenFilter.ENGLISH_STOPSET, true);\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, a));\n    Document doc = new Document();\n    doc.add(newField(\"f\", \"the wizard of ozzy\", Field.Store.NO, Field.Index.ANALYZED));\n    w.addDocument(doc);\n    IndexReader r = IndexReader.open(w, true);\n    w.close();\n    IndexSearcher s = newSearcher(r);\n    QueryParser qp = new QueryParser(TEST_VERSION_CURRENT, \"f\", a);\n    Query q = qp.parse(\"\\\"wizard of ozzy\\\"\");\n    assertEquals(1, s.search(q, 1).totalHits);\n    s.close();\n    r.close();\n    dir.close();\n  }\n\n","sourceOld":"  // LUCENE-2002: make sure defaults for StandardAnalyzer's\n  // enableStopPositionIncr & QueryParser's enablePosIncr\n  // \"match\"\n  public void testPositionIncrements() throws Exception {\n    Directory dir = newDirectory();\n    Analyzer a = new MockAnalyzer(MockTokenizer.SIMPLE, true, MockTokenFilter.ENGLISH_STOPSET, true);\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, a));\n    Document doc = new Document();\n    doc.add(newField(\"f\", \"the wizard of ozzy\", Field.Store.NO, Field.Index.ANALYZED));\n    w.addDocument(doc);\n    IndexReader r = IndexReader.open(w, true);\n    w.close();\n    IndexSearcher s = newSearcher(r);\n    QueryParser qp = new QueryParser(TEST_VERSION_CURRENT, \"f\", a);\n    Query q = qp.parse(\"\\\"wizard of ozzy\\\"\");\n    assertEquals(1, s.search(q, 1).totalHits);\n    s.close();\n    r.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"135621f3a0670a9394eb563224a3b76cc4dddc0f","date":1304344257,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/queryParser/TestQueryParser#testPositionIncrements().mjava","pathOld":"lucene/src/test/org/apache/lucene/queryParser/TestQueryParser#testPositionIncrements().mjava","sourceNew":"  // LUCENE-2002: make sure defaults for StandardAnalyzer's\n  // enableStopPositionIncr & QueryParser's enablePosIncr\n  // \"match\"\n  public void testPositionIncrements() throws Exception {\n    Directory dir = newDirectory();\n    Analyzer a = new MockAnalyzer(random, MockTokenizer.SIMPLE, true, MockTokenFilter.ENGLISH_STOPSET, true);\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, a));\n    Document doc = new Document();\n    doc.add(newField(\"f\", \"the wizard of ozzy\", Field.Store.NO, Field.Index.ANALYZED));\n    w.addDocument(doc);\n    IndexReader r = IndexReader.open(w, true);\n    w.close();\n    IndexSearcher s = newSearcher(r);\n    QueryParser qp = new QueryParser(TEST_VERSION_CURRENT, \"f\", a);\n    Query q = qp.parse(\"\\\"wizard of ozzy\\\"\");\n    assertEquals(1, s.search(q, 1).totalHits);\n    s.close();\n    r.close();\n    dir.close();\n  }\n\n","sourceOld":"  // LUCENE-2002: make sure defaults for StandardAnalyzer's\n  // enableStopPositionIncr & QueryParser's enablePosIncr\n  // \"match\"\n  public void testPositionIncrements() throws Exception {\n    Directory dir = newDirectory();\n    Analyzer a = new MockAnalyzer(MockTokenizer.SIMPLE, true, MockTokenFilter.ENGLISH_STOPSET, true);\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, a));\n    Document doc = new Document();\n    doc.add(newField(\"f\", \"the wizard of ozzy\", Field.Store.NO, Field.Index.ANALYZED));\n    w.addDocument(doc);\n    IndexReader r = IndexReader.open(w, true);\n    w.close();\n    IndexSearcher s = newSearcher(r);\n    QueryParser qp = new QueryParser(TEST_VERSION_CURRENT, \"f\", a);\n    Query q = qp.parse(\"\\\"wizard of ozzy\\\"\");\n    assertEquals(1, s.search(q, 1).totalHits);\n    s.close();\n    r.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a3776dccca01c11e7046323cfad46a3b4a471233","date":1306100719,"type":3,"author":"Steven Rowe","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/queryParser/TestQueryParser#testPositionIncrements().mjava","pathOld":"lucene/src/test/org/apache/lucene/queryParser/TestQueryParser#testPositionIncrements().mjava","sourceNew":"  // LUCENE-2002: make sure defaults for StandardAnalyzer's\n  // enableStopPositionIncr & QueryParser's enablePosIncr\n  // \"match\"\n  public void testPositionIncrements() throws Exception {\n    Directory dir = newDirectory();\n    Analyzer a = new MockAnalyzer(random, MockTokenizer.SIMPLE, true, MockTokenFilter.ENGLISH_STOPSET, true);\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, a));\n    Document doc = new Document();\n    doc.add(newField(\"f\", \"the wizard of ozzy\", Field.Store.NO, Field.Index.ANALYZED));\n    w.addDocument(doc);\n    IndexReader r = IndexReader.open(w, true);\n    w.close();\n    IndexSearcher s = newSearcher(r);\n    QueryParser qp = new QueryParser(TEST_VERSION_CURRENT, \"f\", a);\n    Query q = qp.parse(\"\\\"wizard of ozzy\\\"\");\n    assertEquals(1, s.search(q, 1).totalHits);\n    s.close();\n    r.close();\n    dir.close();\n  }\n\n","sourceOld":"  // LUCENE-2002: make sure defaults for StandardAnalyzer's\n  // enableStopPositionIncr & QueryParser's enablePosIncr\n  // \"match\"\n  public void testPositionIncrements() throws Exception {\n    Directory dir = newDirectory();\n    Analyzer a = new MockAnalyzer(MockTokenizer.SIMPLE, true, MockTokenFilter.ENGLISH_STOPSET, true);\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, a));\n    Document doc = new Document();\n    doc.add(newField(\"f\", \"the wizard of ozzy\", Field.Store.NO, Field.Index.ANALYZED));\n    w.addDocument(doc);\n    IndexReader r = IndexReader.open(w, true);\n    w.close();\n    IndexSearcher s = newSearcher(r);\n    QueryParser qp = new QueryParser(TEST_VERSION_CURRENT, \"f\", a);\n    Query q = qp.parse(\"\\\"wizard of ozzy\\\"\");\n    assertEquals(1, s.search(q, 1).totalHits);\n    s.close();\n    r.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"91a3609ac9a09ca0c8eee1b765401bbdacaceaf8","date":1310355420,"type":5,"author":"Christopher John Male","isMerge":false,"pathNew":"modules/queryparser/src/test/org/apache/lucene/queryparser/classic/TestQueryParser#testPositionIncrements().mjava","pathOld":"lucene/src/test/org/apache/lucene/queryParser/TestQueryParser#testPositionIncrements().mjava","sourceNew":"  // LUCENE-2002: make sure defaults for StandardAnalyzer's\n  // enableStopPositionIncr & QueryParser's enablePosIncr\n  // \"match\"\n  public void testPositionIncrements() throws Exception {\n    Directory dir = newDirectory();\n    Analyzer a = new MockAnalyzer(random, MockTokenizer.SIMPLE, true, MockTokenFilter.ENGLISH_STOPSET, true);\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, a));\n    Document doc = new Document();\n    doc.add(newField(\"f\", \"the wizard of ozzy\", Field.Store.NO, Field.Index.ANALYZED));\n    w.addDocument(doc);\n    IndexReader r = IndexReader.open(w, true);\n    w.close();\n    IndexSearcher s = newSearcher(r);\n    QueryParser qp = new QueryParser(TEST_VERSION_CURRENT, \"f\", a);\n    Query q = qp.parse(\"\\\"wizard of ozzy\\\"\");\n    assertEquals(1, s.search(q, 1).totalHits);\n    s.close();\n    r.close();\n    dir.close();\n  }\n\n","sourceOld":"  // LUCENE-2002: make sure defaults for StandardAnalyzer's\n  // enableStopPositionIncr & QueryParser's enablePosIncr\n  // \"match\"\n  public void testPositionIncrements() throws Exception {\n    Directory dir = newDirectory();\n    Analyzer a = new MockAnalyzer(random, MockTokenizer.SIMPLE, true, MockTokenFilter.ENGLISH_STOPSET, true);\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, a));\n    Document doc = new Document();\n    doc.add(newField(\"f\", \"the wizard of ozzy\", Field.Store.NO, Field.Index.ANALYZED));\n    w.addDocument(doc);\n    IndexReader r = IndexReader.open(w, true);\n    w.close();\n    IndexSearcher s = newSearcher(r);\n    QueryParser qp = new QueryParser(TEST_VERSION_CURRENT, \"f\", a);\n    Query q = qp.parse(\"\\\"wizard of ozzy\\\"\");\n    assertEquals(1, s.search(q, 1).totalHits);\n    s.close();\n    r.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"ab9633cb67e3c0aec3c066147a23a957d6e7ad8c":["c7f8e68717c68517265937c911e1ce9f25750247"],"91a3609ac9a09ca0c8eee1b765401bbdacaceaf8":["f2c5f0cb44df114db4228c8f77861714b5cabaea"],"135621f3a0670a9394eb563224a3b76cc4dddc0f":["29ef99d61cda9641b6250bf9567329a6e65f901d","f2c5f0cb44df114db4228c8f77861714b5cabaea"],"132903c28af3aa6f67284b78de91c0f0a99488c2":["1f653cfcf159baeaafe5d01682a911e95bba4012"],"c7f8e68717c68517265937c911e1ce9f25750247":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"962d04139994fce5193143ef35615499a9a96d78":["bde51b089eb7f86171eb3406e38a274743f9b7ac","f2c5f0cb44df114db4228c8f77861714b5cabaea"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["c7f8e68717c68517265937c911e1ce9f25750247","296e4ed69ccbda3c7b5fdb86c7acaa43c9074e01"],"eb378f8bdee16a26810e086303a4a86b4930ea12":["296e4ed69ccbda3c7b5fdb86c7acaa43c9074e01"],"790e1fde4caa765b3faaad3fbcd25c6973450336":["eb378f8bdee16a26810e086303a4a86b4930ea12"],"296e4ed69ccbda3c7b5fdb86c7acaa43c9074e01":["132903c28af3aa6f67284b78de91c0f0a99488c2"],"f2c5f0cb44df114db4228c8f77861714b5cabaea":["790e1fde4caa765b3faaad3fbcd25c6973450336"],"1f653cfcf159baeaafe5d01682a911e95bba4012":["ab9633cb67e3c0aec3c066147a23a957d6e7ad8c"],"a3776dccca01c11e7046323cfad46a3b4a471233":["790e1fde4caa765b3faaad3fbcd25c6973450336","f2c5f0cb44df114db4228c8f77861714b5cabaea"],"29ef99d61cda9641b6250bf9567329a6e65f901d":["296e4ed69ccbda3c7b5fdb86c7acaa43c9074e01","790e1fde4caa765b3faaad3fbcd25c6973450336"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"bde51b089eb7f86171eb3406e38a274743f9b7ac":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","790e1fde4caa765b3faaad3fbcd25c6973450336"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["91a3609ac9a09ca0c8eee1b765401bbdacaceaf8"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"ab9633cb67e3c0aec3c066147a23a957d6e7ad8c":["1f653cfcf159baeaafe5d01682a911e95bba4012"],"91a3609ac9a09ca0c8eee1b765401bbdacaceaf8":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"135621f3a0670a9394eb563224a3b76cc4dddc0f":[],"c7f8e68717c68517265937c911e1ce9f25750247":["ab9633cb67e3c0aec3c066147a23a957d6e7ad8c","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a"],"132903c28af3aa6f67284b78de91c0f0a99488c2":["296e4ed69ccbda3c7b5fdb86c7acaa43c9074e01"],"962d04139994fce5193143ef35615499a9a96d78":[],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["bde51b089eb7f86171eb3406e38a274743f9b7ac"],"eb378f8bdee16a26810e086303a4a86b4930ea12":["790e1fde4caa765b3faaad3fbcd25c6973450336"],"790e1fde4caa765b3faaad3fbcd25c6973450336":["f2c5f0cb44df114db4228c8f77861714b5cabaea","a3776dccca01c11e7046323cfad46a3b4a471233","29ef99d61cda9641b6250bf9567329a6e65f901d","bde51b089eb7f86171eb3406e38a274743f9b7ac"],"296e4ed69ccbda3c7b5fdb86c7acaa43c9074e01":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","eb378f8bdee16a26810e086303a4a86b4930ea12","29ef99d61cda9641b6250bf9567329a6e65f901d"],"f2c5f0cb44df114db4228c8f77861714b5cabaea":["91a3609ac9a09ca0c8eee1b765401bbdacaceaf8","135621f3a0670a9394eb563224a3b76cc4dddc0f","962d04139994fce5193143ef35615499a9a96d78","a3776dccca01c11e7046323cfad46a3b4a471233"],"29ef99d61cda9641b6250bf9567329a6e65f901d":["135621f3a0670a9394eb563224a3b76cc4dddc0f"],"1f653cfcf159baeaafe5d01682a911e95bba4012":["132903c28af3aa6f67284b78de91c0f0a99488c2"],"a3776dccca01c11e7046323cfad46a3b4a471233":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"bde51b089eb7f86171eb3406e38a274743f9b7ac":["962d04139994fce5193143ef35615499a9a96d78"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["c7f8e68717c68517265937c911e1ce9f25750247"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["135621f3a0670a9394eb563224a3b76cc4dddc0f","962d04139994fce5193143ef35615499a9a96d78","a3776dccca01c11e7046323cfad46a3b4a471233","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}