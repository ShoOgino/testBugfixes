{"path":"solr/src/test/org/apache/solr/handler/TestReplicationHandler#testReplicateAfterWrite2Slave().mjava","commits":[{"id":"893269407f5c988a4b2ee13c7ffc01ec43136c1d","date":1268598046,"type":0,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/src/test/org/apache/solr/handler/TestReplicationHandler#testReplicateAfterWrite2Slave().mjava","pathOld":"/dev/null","sourceNew":"  public void testReplicateAfterWrite2Slave() throws Exception {\n    //add 50 docs to master\n    int nDocs = 50;\n    for (int i = 0; i < nDocs; i++) {\n      index(masterClient, \"id\", i, \"name\", \"name = \" + i);\n    }\n\n    String masterUrl = \"http://localhost:\" + masterJetty.getLocalPort() + \"/solr/replication?command=disableReplication\";\n    URL url = new URL(masterUrl);\n    InputStream stream = url.openStream();\n    try {\n      stream.close();\n    } catch (IOException e) {\n      //e.printStackTrace();\n    }\n\n    masterClient.commit();\n\n    NamedList masterQueryRsp = query(\"*:*\", masterClient);\n    SolrDocumentList masterQueryResult = (SolrDocumentList) masterQueryRsp.get(\"response\");\n    assertEquals(nDocs, masterQueryResult.getNumFound());\n\n    // Make sure that both the index version and index generation on the slave is\n    // higher than that of the master, just to make the test harder.\n    Thread.sleep(100);\n    index(slaveClient, \"id\", 551, \"name\", \"name = \" + 551);\n    slaveClient.commit(true, true);\n    index(slaveClient, \"id\", 552, \"name\", \"name = \" + 552);\n    slaveClient.commit(true, true);\n    index(slaveClient, \"id\", 553, \"name\", \"name = \" + 553);\n    slaveClient.commit(true, true);\n    index(slaveClient, \"id\", 554, \"name\", \"name = \" + 554);\n    slaveClient.commit(true, true);\n    index(slaveClient, \"id\", 555, \"name\", \"name = \" + 555);\n    slaveClient.commit(true, true);\n\n    //this doc is added to slave so it should show an item w/ that result\n    NamedList slaveQueryRsp = query(\"id:555\", slaveClient);\n    SolrDocumentList slaveQueryResult = (SolrDocumentList) slaveQueryRsp.get(\"response\");\n    assertEquals(1, slaveQueryResult.getNumFound());\n\n    masterUrl = \"http://localhost:\" + masterJetty.getLocalPort() + \"/solr/replication?command=enableReplication\";\n    url = new URL(masterUrl);\n    stream = url.openStream();\n    try {\n      stream.close();\n    } catch (IOException e) {\n      //e.printStackTrace();\n    }\n\n    //sleep for pollinterval time 3s, to let slave pull data.\n    Thread.sleep(3000);\n    //the slave should have done a full copy of the index so the doc with id:555 should not be there in the slave now\n    slaveQueryRsp = query(\"id:555\", slaveClient);\n    slaveQueryResult = (SolrDocumentList) slaveQueryRsp.get(\"response\");\n    assertEquals(0, slaveQueryResult.getNumFound());\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8","date":1268599006,"type":4,"author":"Mark Robert Miller","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/src/test/org/apache/solr/handler/TestReplicationHandler#testReplicateAfterWrite2Slave().mjava","sourceNew":null,"sourceOld":"  public void testReplicateAfterWrite2Slave() throws Exception {\n    //add 50 docs to master\n    int nDocs = 50;\n    for (int i = 0; i < nDocs; i++) {\n      index(masterClient, \"id\", i, \"name\", \"name = \" + i);\n    }\n\n    String masterUrl = \"http://localhost:\" + masterJetty.getLocalPort() + \"/solr/replication?command=disableReplication\";\n    URL url = new URL(masterUrl);\n    InputStream stream = url.openStream();\n    try {\n      stream.close();\n    } catch (IOException e) {\n      //e.printStackTrace();\n    }\n\n    masterClient.commit();\n\n    NamedList masterQueryRsp = query(\"*:*\", masterClient);\n    SolrDocumentList masterQueryResult = (SolrDocumentList) masterQueryRsp.get(\"response\");\n    assertEquals(nDocs, masterQueryResult.getNumFound());\n\n    // Make sure that both the index version and index generation on the slave is\n    // higher than that of the master, just to make the test harder.\n    Thread.sleep(100);\n    index(slaveClient, \"id\", 551, \"name\", \"name = \" + 551);\n    slaveClient.commit(true, true);\n    index(slaveClient, \"id\", 552, \"name\", \"name = \" + 552);\n    slaveClient.commit(true, true);\n    index(slaveClient, \"id\", 553, \"name\", \"name = \" + 553);\n    slaveClient.commit(true, true);\n    index(slaveClient, \"id\", 554, \"name\", \"name = \" + 554);\n    slaveClient.commit(true, true);\n    index(slaveClient, \"id\", 555, \"name\", \"name = \" + 555);\n    slaveClient.commit(true, true);\n\n    //this doc is added to slave so it should show an item w/ that result\n    NamedList slaveQueryRsp = query(\"id:555\", slaveClient);\n    SolrDocumentList slaveQueryResult = (SolrDocumentList) slaveQueryRsp.get(\"response\");\n    assertEquals(1, slaveQueryResult.getNumFound());\n\n    masterUrl = \"http://localhost:\" + masterJetty.getLocalPort() + \"/solr/replication?command=enableReplication\";\n    url = new URL(masterUrl);\n    stream = url.openStream();\n    try {\n      stream.close();\n    } catch (IOException e) {\n      //e.printStackTrace();\n    }\n\n    //sleep for pollinterval time 3s, to let slave pull data.\n    Thread.sleep(3000);\n    //the slave should have done a full copy of the index so the doc with id:555 should not be there in the slave now\n    slaveQueryRsp = query(\"id:555\", slaveClient);\n    slaveQueryResult = (SolrDocumentList) slaveQueryRsp.get(\"response\");\n    assertEquals(0, slaveQueryResult.getNumFound());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ad94625fb8d088209f46650c8097196fec67f00c","date":1453508319,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/src/test/org/apache/solr/handler/TestReplicationHandler#testReplicateAfterWrite2Slave().mjava","pathOld":"src/test/org/apache/solr/handler/TestReplicationHandler#testReplicateAfterWrite2Slave().mjava","sourceNew":"  public void testReplicateAfterWrite2Slave() throws Exception {\n    //add 50 docs to master\n    int nDocs = 50;\n    for (int i = 0; i < nDocs; i++) {\n      index(masterClient, \"id\", i, \"name\", \"name = \" + i);\n    }\n\n    String masterUrl = \"http://localhost:\" + masterJetty.getLocalPort() + \"/solr/replication?command=disableReplication\";\n    URL url = new URL(masterUrl);\n    InputStream stream = url.openStream();\n    try {\n      stream.close();\n    } catch (IOException e) {\n      //e.printStackTrace();\n    }\n\n    masterClient.commit();\n\n    NamedList masterQueryRsp = query(\"*:*\", masterClient);\n    SolrDocumentList masterQueryResult = (SolrDocumentList) masterQueryRsp.get(\"response\");\n    assertEquals(nDocs, masterQueryResult.getNumFound());\n\n    // Make sure that both the index version and index generation on the slave is\n    // higher than that of the master, just to make the test harder.\n    Thread.sleep(100);\n    index(slaveClient, \"id\", 551, \"name\", \"name = \" + 551);\n    slaveClient.commit(true, true);\n    index(slaveClient, \"id\", 552, \"name\", \"name = \" + 552);\n    slaveClient.commit(true, true);\n    index(slaveClient, \"id\", 553, \"name\", \"name = \" + 553);\n    slaveClient.commit(true, true);\n    index(slaveClient, \"id\", 554, \"name\", \"name = \" + 554);\n    slaveClient.commit(true, true);\n    index(slaveClient, \"id\", 555, \"name\", \"name = \" + 555);\n    slaveClient.commit(true, true);\n\n    //this doc is added to slave so it should show an item w/ that result\n    NamedList slaveQueryRsp = query(\"id:555\", slaveClient);\n    SolrDocumentList slaveQueryResult = (SolrDocumentList) slaveQueryRsp.get(\"response\");\n    assertEquals(1, slaveQueryResult.getNumFound());\n\n    masterUrl = \"http://localhost:\" + masterJetty.getLocalPort() + \"/solr/replication?command=enableReplication\";\n    url = new URL(masterUrl);\n    stream = url.openStream();\n    try {\n      stream.close();\n    } catch (IOException e) {\n      //e.printStackTrace();\n    }\n\n    //sleep for pollinterval time 3s, to let slave pull data.\n    Thread.sleep(3000);\n    //the slave should have done a full copy of the index so the doc with id:555 should not be there in the slave now\n    slaveQueryRsp = query(\"id:555\", slaveClient);\n    slaveQueryResult = (SolrDocumentList) slaveQueryRsp.get(\"response\");\n    assertEquals(0, slaveQueryResult.getNumFound());\n  }\n\n","sourceOld":"  public void testReplicateAfterWrite2Slave() throws Exception {\n    //add 50 docs to master\n    int nDocs = 50;\n    for (int i = 0; i < nDocs; i++) {\n      index(masterClient, \"id\", i, \"name\", \"name = \" + i);\n    }\n\n    String masterUrl = \"http://localhost:\" + masterJetty.getLocalPort() + \"/solr/replication?command=disableReplication\";\n    URL url = new URL(masterUrl);\n    InputStream stream = url.openStream();\n    try {\n      stream.close();\n    } catch (IOException e) {\n      //e.printStackTrace();\n    }\n\n    masterClient.commit();\n\n    NamedList masterQueryRsp = query(\"*:*\", masterClient);\n    SolrDocumentList masterQueryResult = (SolrDocumentList) masterQueryRsp.get(\"response\");\n    assertEquals(nDocs, masterQueryResult.getNumFound());\n\n    // Make sure that both the index version and index generation on the slave is\n    // higher than that of the master, just to make the test harder.\n    Thread.sleep(100);\n    index(slaveClient, \"id\", 551, \"name\", \"name = \" + 551);\n    slaveClient.commit(true, true);\n    index(slaveClient, \"id\", 552, \"name\", \"name = \" + 552);\n    slaveClient.commit(true, true);\n    index(slaveClient, \"id\", 553, \"name\", \"name = \" + 553);\n    slaveClient.commit(true, true);\n    index(slaveClient, \"id\", 554, \"name\", \"name = \" + 554);\n    slaveClient.commit(true, true);\n    index(slaveClient, \"id\", 555, \"name\", \"name = \" + 555);\n    slaveClient.commit(true, true);\n\n    //this doc is added to slave so it should show an item w/ that result\n    NamedList slaveQueryRsp = query(\"id:555\", slaveClient);\n    SolrDocumentList slaveQueryResult = (SolrDocumentList) slaveQueryRsp.get(\"response\");\n    assertEquals(1, slaveQueryResult.getNumFound());\n\n    masterUrl = \"http://localhost:\" + masterJetty.getLocalPort() + \"/solr/replication?command=enableReplication\";\n    url = new URL(masterUrl);\n    stream = url.openStream();\n    try {\n      stream.close();\n    } catch (IOException e) {\n      //e.printStackTrace();\n    }\n\n    //sleep for pollinterval time 3s, to let slave pull data.\n    Thread.sleep(3000);\n    //the slave should have done a full copy of the index so the doc with id:555 should not be there in the slave now\n    slaveQueryRsp = query(\"id:555\", slaveClient);\n    slaveQueryResult = (SolrDocumentList) slaveQueryRsp.get(\"response\");\n    assertEquals(0, slaveQueryResult.getNumFound());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1da8d55113b689b06716246649de6f62430f15c0","date":1453508340,"type":0,"author":"Dawid Weiss","isMerge":true,"pathNew":"solr/src/test/org/apache/solr/handler/TestReplicationHandler#testReplicateAfterWrite2Slave().mjava","pathOld":"/dev/null","sourceNew":"  public void testReplicateAfterWrite2Slave() throws Exception {\n    //add 50 docs to master\n    int nDocs = 50;\n    for (int i = 0; i < nDocs; i++) {\n      index(masterClient, \"id\", i, \"name\", \"name = \" + i);\n    }\n\n    String masterUrl = \"http://localhost:\" + masterJetty.getLocalPort() + \"/solr/replication?command=disableReplication\";\n    URL url = new URL(masterUrl);\n    InputStream stream = url.openStream();\n    try {\n      stream.close();\n    } catch (IOException e) {\n      //e.printStackTrace();\n    }\n\n    masterClient.commit();\n\n    NamedList masterQueryRsp = query(\"*:*\", masterClient);\n    SolrDocumentList masterQueryResult = (SolrDocumentList) masterQueryRsp.get(\"response\");\n    assertEquals(nDocs, masterQueryResult.getNumFound());\n\n    // Make sure that both the index version and index generation on the slave is\n    // higher than that of the master, just to make the test harder.\n    Thread.sleep(100);\n    index(slaveClient, \"id\", 551, \"name\", \"name = \" + 551);\n    slaveClient.commit(true, true);\n    index(slaveClient, \"id\", 552, \"name\", \"name = \" + 552);\n    slaveClient.commit(true, true);\n    index(slaveClient, \"id\", 553, \"name\", \"name = \" + 553);\n    slaveClient.commit(true, true);\n    index(slaveClient, \"id\", 554, \"name\", \"name = \" + 554);\n    slaveClient.commit(true, true);\n    index(slaveClient, \"id\", 555, \"name\", \"name = \" + 555);\n    slaveClient.commit(true, true);\n\n    //this doc is added to slave so it should show an item w/ that result\n    NamedList slaveQueryRsp = query(\"id:555\", slaveClient);\n    SolrDocumentList slaveQueryResult = (SolrDocumentList) slaveQueryRsp.get(\"response\");\n    assertEquals(1, slaveQueryResult.getNumFound());\n\n    masterUrl = \"http://localhost:\" + masterJetty.getLocalPort() + \"/solr/replication?command=enableReplication\";\n    url = new URL(masterUrl);\n    stream = url.openStream();\n    try {\n      stream.close();\n    } catch (IOException e) {\n      //e.printStackTrace();\n    }\n\n    //sleep for pollinterval time 3s, to let slave pull data.\n    Thread.sleep(3000);\n    //the slave should have done a full copy of the index so the doc with id:555 should not be there in the slave now\n    slaveQueryRsp = query(\"id:555\", slaveClient);\n    slaveQueryResult = (SolrDocumentList) slaveQueryRsp.get(\"response\");\n    assertEquals(0, slaveQueryResult.getNumFound());\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"9f72f36b556a12c6d5004378a256b03015ef24d8","date":1279497528,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"solr/src/test/org/apache/solr/handler/TestReplicationHandler#testReplicateAfterWrite2Slave().mjava","pathOld":"solr/src/test/org/apache/solr/handler/TestReplicationHandler#testReplicateAfterWrite2Slave().mjava","sourceNew":"  @Test\n  public void testReplicateAfterWrite2Slave() throws Exception {\n    //add 50 docs to master\n    int nDocs = 50;\n    for (int i = 0; i < nDocs; i++) {\n      index(masterClient, \"id\", i, \"name\", \"name = \" + i);\n    }\n\n    String masterUrl = \"http://localhost:\" + masterJetty.getLocalPort() + \"/solr/replication?command=disableReplication\";\n    URL url = new URL(masterUrl);\n    InputStream stream = url.openStream();\n    try {\n      stream.close();\n    } catch (IOException e) {\n      //e.printStackTrace();\n    }\n\n    masterClient.commit();\n\n    NamedList masterQueryRsp = rQuery(50, \"*:*\", masterClient);\n    SolrDocumentList masterQueryResult = (SolrDocumentList) masterQueryRsp.get(\"response\");\n    assertEquals(nDocs, masterQueryResult.getNumFound());\n\n    // Make sure that both the index version and index generation on the slave is\n    // higher than that of the master, just to make the test harder.\n\n    index(slaveClient, \"id\", 551, \"name\", \"name = \" + 551);\n    slaveClient.commit(true, true);\n    index(slaveClient, \"id\", 552, \"name\", \"name = \" + 552);\n    slaveClient.commit(true, true);\n    index(slaveClient, \"id\", 553, \"name\", \"name = \" + 553);\n    slaveClient.commit(true, true);\n    index(slaveClient, \"id\", 554, \"name\", \"name = \" + 554);\n    slaveClient.commit(true, true);\n    index(slaveClient, \"id\", 555, \"name\", \"name = \" + 555);\n    slaveClient.commit(true, true);\n\n    //this doc is added to slave so it should show an item w/ that result\n    NamedList slaveQueryRsp = rQuery(1, \"id:555\", slaveClient);\n    SolrDocumentList slaveQueryResult = (SolrDocumentList) slaveQueryRsp.get(\"response\");\n    assertEquals(1, slaveQueryResult.getNumFound());\n\n    masterUrl = \"http://localhost:\" + masterJetty.getLocalPort() + \"/solr/replication?command=enableReplication\";\n    url = new URL(masterUrl);\n    stream = url.openStream();\n    try {\n      stream.close();\n    } catch (IOException e) {\n      //e.printStackTrace();\n    }\n\n    //the slave should have done a full copy of the index so the doc with id:555 should not be there in the slave now\n    slaveQueryRsp = rQuery(0, \"id:555\", slaveClient);\n    slaveQueryResult = (SolrDocumentList) slaveQueryRsp.get(\"response\");\n    assertEquals(0, slaveQueryResult.getNumFound());\n  }\n\n","sourceOld":"  public void testReplicateAfterWrite2Slave() throws Exception {\n    //add 50 docs to master\n    int nDocs = 50;\n    for (int i = 0; i < nDocs; i++) {\n      index(masterClient, \"id\", i, \"name\", \"name = \" + i);\n    }\n\n    String masterUrl = \"http://localhost:\" + masterJetty.getLocalPort() + \"/solr/replication?command=disableReplication\";\n    URL url = new URL(masterUrl);\n    InputStream stream = url.openStream();\n    try {\n      stream.close();\n    } catch (IOException e) {\n      //e.printStackTrace();\n    }\n\n    masterClient.commit();\n\n    NamedList masterQueryRsp = query(\"*:*\", masterClient);\n    SolrDocumentList masterQueryResult = (SolrDocumentList) masterQueryRsp.get(\"response\");\n    assertEquals(nDocs, masterQueryResult.getNumFound());\n\n    // Make sure that both the index version and index generation on the slave is\n    // higher than that of the master, just to make the test harder.\n    Thread.sleep(100);\n    index(slaveClient, \"id\", 551, \"name\", \"name = \" + 551);\n    slaveClient.commit(true, true);\n    index(slaveClient, \"id\", 552, \"name\", \"name = \" + 552);\n    slaveClient.commit(true, true);\n    index(slaveClient, \"id\", 553, \"name\", \"name = \" + 553);\n    slaveClient.commit(true, true);\n    index(slaveClient, \"id\", 554, \"name\", \"name = \" + 554);\n    slaveClient.commit(true, true);\n    index(slaveClient, \"id\", 555, \"name\", \"name = \" + 555);\n    slaveClient.commit(true, true);\n\n    //this doc is added to slave so it should show an item w/ that result\n    NamedList slaveQueryRsp = query(\"id:555\", slaveClient);\n    SolrDocumentList slaveQueryResult = (SolrDocumentList) slaveQueryRsp.get(\"response\");\n    assertEquals(1, slaveQueryResult.getNumFound());\n\n    masterUrl = \"http://localhost:\" + masterJetty.getLocalPort() + \"/solr/replication?command=enableReplication\";\n    url = new URL(masterUrl);\n    stream = url.openStream();\n    try {\n      stream.close();\n    } catch (IOException e) {\n      //e.printStackTrace();\n    }\n\n    //sleep for pollinterval time 3s, to let slave pull data.\n    Thread.sleep(3000);\n    //the slave should have done a full copy of the index so the doc with id:555 should not be there in the slave now\n    slaveQueryRsp = query(\"id:555\", slaveClient);\n    slaveQueryResult = (SolrDocumentList) slaveQueryRsp.get(\"response\");\n    assertEquals(0, slaveQueryResult.getNumFound());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"5f4e87790277826a2aea119328600dfb07761f32","date":1279827275,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"solr/src/test/org/apache/solr/handler/TestReplicationHandler#testReplicateAfterWrite2Slave().mjava","pathOld":"solr/src/test/org/apache/solr/handler/TestReplicationHandler#testReplicateAfterWrite2Slave().mjava","sourceNew":"  @Test\n  public void testReplicateAfterWrite2Slave() throws Exception {\n    //add 50 docs to master\n    int nDocs = 50;\n    for (int i = 0; i < nDocs; i++) {\n      index(masterClient, \"id\", i, \"name\", \"name = \" + i);\n    }\n\n    String masterUrl = \"http://localhost:\" + masterJetty.getLocalPort() + \"/solr/replication?command=disableReplication\";\n    URL url = new URL(masterUrl);\n    InputStream stream = url.openStream();\n    try {\n      stream.close();\n    } catch (IOException e) {\n      //e.printStackTrace();\n    }\n\n    masterClient.commit();\n\n    NamedList masterQueryRsp = rQuery(50, \"*:*\", masterClient);\n    SolrDocumentList masterQueryResult = (SolrDocumentList) masterQueryRsp.get(\"response\");\n    assertEquals(nDocs, masterQueryResult.getNumFound());\n\n    // Make sure that both the index version and index generation on the slave is\n    // higher than that of the master, just to make the test harder.\n\n    index(slaveClient, \"id\", 551, \"name\", \"name = \" + 551);\n    slaveClient.commit(true, true);\n    index(slaveClient, \"id\", 552, \"name\", \"name = \" + 552);\n    slaveClient.commit(true, true);\n    index(slaveClient, \"id\", 553, \"name\", \"name = \" + 553);\n    slaveClient.commit(true, true);\n    index(slaveClient, \"id\", 554, \"name\", \"name = \" + 554);\n    slaveClient.commit(true, true);\n    index(slaveClient, \"id\", 555, \"name\", \"name = \" + 555);\n    slaveClient.commit(true, true);\n\n    //this doc is added to slave so it should show an item w/ that result\n    NamedList slaveQueryRsp = rQuery(1, \"id:555\", slaveClient);\n    SolrDocumentList slaveQueryResult = (SolrDocumentList) slaveQueryRsp.get(\"response\");\n    assertEquals(1, slaveQueryResult.getNumFound());\n\n    masterUrl = \"http://localhost:\" + masterJetty.getLocalPort() + \"/solr/replication?command=enableReplication\";\n    url = new URL(masterUrl);\n    stream = url.openStream();\n    try {\n      stream.close();\n    } catch (IOException e) {\n      //e.printStackTrace();\n    }\n\n    //the slave should have done a full copy of the index so the doc with id:555 should not be there in the slave now\n    slaveQueryRsp = rQuery(0, \"id:555\", slaveClient);\n    slaveQueryResult = (SolrDocumentList) slaveQueryRsp.get(\"response\");\n    assertEquals(0, slaveQueryResult.getNumFound());\n  }\n\n","sourceOld":"  public void testReplicateAfterWrite2Slave() throws Exception {\n    //add 50 docs to master\n    int nDocs = 50;\n    for (int i = 0; i < nDocs; i++) {\n      index(masterClient, \"id\", i, \"name\", \"name = \" + i);\n    }\n\n    String masterUrl = \"http://localhost:\" + masterJetty.getLocalPort() + \"/solr/replication?command=disableReplication\";\n    URL url = new URL(masterUrl);\n    InputStream stream = url.openStream();\n    try {\n      stream.close();\n    } catch (IOException e) {\n      //e.printStackTrace();\n    }\n\n    masterClient.commit();\n\n    NamedList masterQueryRsp = query(\"*:*\", masterClient);\n    SolrDocumentList masterQueryResult = (SolrDocumentList) masterQueryRsp.get(\"response\");\n    assertEquals(nDocs, masterQueryResult.getNumFound());\n\n    // Make sure that both the index version and index generation on the slave is\n    // higher than that of the master, just to make the test harder.\n    Thread.sleep(100);\n    index(slaveClient, \"id\", 551, \"name\", \"name = \" + 551);\n    slaveClient.commit(true, true);\n    index(slaveClient, \"id\", 552, \"name\", \"name = \" + 552);\n    slaveClient.commit(true, true);\n    index(slaveClient, \"id\", 553, \"name\", \"name = \" + 553);\n    slaveClient.commit(true, true);\n    index(slaveClient, \"id\", 554, \"name\", \"name = \" + 554);\n    slaveClient.commit(true, true);\n    index(slaveClient, \"id\", 555, \"name\", \"name = \" + 555);\n    slaveClient.commit(true, true);\n\n    //this doc is added to slave so it should show an item w/ that result\n    NamedList slaveQueryRsp = query(\"id:555\", slaveClient);\n    SolrDocumentList slaveQueryResult = (SolrDocumentList) slaveQueryRsp.get(\"response\");\n    assertEquals(1, slaveQueryResult.getNumFound());\n\n    masterUrl = \"http://localhost:\" + masterJetty.getLocalPort() + \"/solr/replication?command=enableReplication\";\n    url = new URL(masterUrl);\n    stream = url.openStream();\n    try {\n      stream.close();\n    } catch (IOException e) {\n      //e.printStackTrace();\n    }\n\n    //sleep for pollinterval time 3s, to let slave pull data.\n    Thread.sleep(3000);\n    //the slave should have done a full copy of the index so the doc with id:555 should not be there in the slave now\n    slaveQueryRsp = query(\"id:555\", slaveClient);\n    slaveQueryResult = (SolrDocumentList) slaveQueryRsp.get(\"response\");\n    assertEquals(0, slaveQueryResult.getNumFound());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"fa11ec6384884a1ce488b8ebe31a56054640c17f","date":1280294823,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/src/test/org/apache/solr/handler/TestReplicationHandler#testReplicateAfterWrite2Slave().mjava","pathOld":"solr/src/test/org/apache/solr/handler/TestReplicationHandler#testReplicateAfterWrite2Slave().mjava","sourceNew":"  @Test\n  public void testReplicateAfterWrite2Slave() throws Exception {\n    //add 50 docs to master\n    int nDocs = 50;\n    for (int i = 0; i < nDocs; i++) {\n      index(masterClient, \"id\", i, \"name\", \"name = \" + i);\n    }\n\n    String masterUrl = \"http://localhost:\" + masterJetty.getLocalPort() + \"/solr/replication?command=disableReplication\";\n    URL url = new URL(masterUrl);\n    InputStream stream = url.openStream();\n    try {\n      stream.close();\n    } catch (IOException e) {\n      //e.printStackTrace();\n    }\n\n    masterClient.commit();\n\n    NamedList masterQueryRsp = rQuery(50, \"*:*\", masterClient);\n    SolrDocumentList masterQueryResult = (SolrDocumentList) masterQueryRsp.get(\"response\");\n    assertEquals(nDocs, masterQueryResult.getNumFound());\n\n    // Make sure that both the index version and index generation on the slave is\n    // higher than that of the master, just to make the test harder.\n\n    index(slaveClient, \"id\", 551, \"name\", \"name = \" + 551);\n    slaveClient.commit(true, true);\n    index(slaveClient, \"id\", 552, \"name\", \"name = \" + 552);\n    slaveClient.commit(true, true);\n    index(slaveClient, \"id\", 553, \"name\", \"name = \" + 553);\n    slaveClient.commit(true, true);\n    index(slaveClient, \"id\", 554, \"name\", \"name = \" + 554);\n    slaveClient.commit(true, true);\n    index(slaveClient, \"id\", 555, \"name\", \"name = \" + 555);\n    slaveClient.commit(true, true);\n\n    //this doc is added to slave so it should show an item w/ that result\n    SolrDocumentList slaveQueryResult = null;\n    NamedList slaveQueryRsp;\n    // try a few times in case tests are running slow\n    for (int i = 0; i < 3; i++) {\n      slaveQueryRsp = rQuery(1, \"id:555\", slaveClient);\n      slaveQueryResult = (SolrDocumentList) slaveQueryRsp.get(\"response\");\n      if (slaveQueryResult.getNumFound() > 0) {\n        break;\n      }\n      Thread.sleep(100);\n    }\n    assertNotNull(slaveQueryResult);\n    assertEquals(1, slaveQueryResult.getNumFound());\n\n    masterUrl = \"http://localhost:\" + masterJetty.getLocalPort() + \"/solr/replication?command=enableReplication\";\n    url = new URL(masterUrl);\n    stream = url.openStream();\n    try {\n      stream.close();\n    } catch (IOException e) {\n      //e.printStackTrace();\n    }\n\n    //the slave should have done a full copy of the index so the doc with id:555 should not be there in the slave now\n    slaveQueryRsp = rQuery(0, \"id:555\", slaveClient);\n    slaveQueryResult = (SolrDocumentList) slaveQueryRsp.get(\"response\");\n    assertEquals(0, slaveQueryResult.getNumFound());\n  }\n\n","sourceOld":"  @Test\n  public void testReplicateAfterWrite2Slave() throws Exception {\n    //add 50 docs to master\n    int nDocs = 50;\n    for (int i = 0; i < nDocs; i++) {\n      index(masterClient, \"id\", i, \"name\", \"name = \" + i);\n    }\n\n    String masterUrl = \"http://localhost:\" + masterJetty.getLocalPort() + \"/solr/replication?command=disableReplication\";\n    URL url = new URL(masterUrl);\n    InputStream stream = url.openStream();\n    try {\n      stream.close();\n    } catch (IOException e) {\n      //e.printStackTrace();\n    }\n\n    masterClient.commit();\n\n    NamedList masterQueryRsp = rQuery(50, \"*:*\", masterClient);\n    SolrDocumentList masterQueryResult = (SolrDocumentList) masterQueryRsp.get(\"response\");\n    assertEquals(nDocs, masterQueryResult.getNumFound());\n\n    // Make sure that both the index version and index generation on the slave is\n    // higher than that of the master, just to make the test harder.\n\n    index(slaveClient, \"id\", 551, \"name\", \"name = \" + 551);\n    slaveClient.commit(true, true);\n    index(slaveClient, \"id\", 552, \"name\", \"name = \" + 552);\n    slaveClient.commit(true, true);\n    index(slaveClient, \"id\", 553, \"name\", \"name = \" + 553);\n    slaveClient.commit(true, true);\n    index(slaveClient, \"id\", 554, \"name\", \"name = \" + 554);\n    slaveClient.commit(true, true);\n    index(slaveClient, \"id\", 555, \"name\", \"name = \" + 555);\n    slaveClient.commit(true, true);\n\n    //this doc is added to slave so it should show an item w/ that result\n    NamedList slaveQueryRsp = rQuery(1, \"id:555\", slaveClient);\n    SolrDocumentList slaveQueryResult = (SolrDocumentList) slaveQueryRsp.get(\"response\");\n    assertEquals(1, slaveQueryResult.getNumFound());\n\n    masterUrl = \"http://localhost:\" + masterJetty.getLocalPort() + \"/solr/replication?command=enableReplication\";\n    url = new URL(masterUrl);\n    stream = url.openStream();\n    try {\n      stream.close();\n    } catch (IOException e) {\n      //e.printStackTrace();\n    }\n\n    //the slave should have done a full copy of the index so the doc with id:555 should not be there in the slave now\n    slaveQueryRsp = rQuery(0, \"id:555\", slaveClient);\n    slaveQueryResult = (SolrDocumentList) slaveQueryRsp.get(\"response\");\n    assertEquals(0, slaveQueryResult.getNumFound());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"ae643525cccc3562951806c0b5b066abdb7b3949","date":1280357864,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/src/test/org/apache/solr/handler/TestReplicationHandler#testReplicateAfterWrite2Slave().mjava","pathOld":"solr/src/test/org/apache/solr/handler/TestReplicationHandler#testReplicateAfterWrite2Slave().mjava","sourceNew":"  @Test\n  public void testReplicateAfterWrite2Slave() throws Exception {\n    //add 50 docs to master\n    int nDocs = 50;\n    for (int i = 0; i < nDocs; i++) {\n      index(masterClient, \"id\", i, \"name\", \"name = \" + i);\n    }\n\n    String masterUrl = \"http://localhost:\" + masterJetty.getLocalPort() + \"/solr/replication?command=disableReplication\";\n    URL url = new URL(masterUrl);\n    InputStream stream = url.openStream();\n    try {\n      stream.close();\n    } catch (IOException e) {\n      //e.printStackTrace();\n    }\n\n    masterClient.commit();\n\n    NamedList masterQueryRsp = rQuery(50, \"*:*\", masterClient);\n    SolrDocumentList masterQueryResult = (SolrDocumentList) masterQueryRsp.get(\"response\");\n    assertEquals(nDocs, masterQueryResult.getNumFound());\n\n    // Make sure that both the index version and index generation on the slave is\n    // higher than that of the master, just to make the test harder.\n\n    index(slaveClient, \"id\", 551, \"name\", \"name = \" + 551);\n    slaveClient.commit(true, true);\n    index(slaveClient, \"id\", 552, \"name\", \"name = \" + 552);\n    slaveClient.commit(true, true);\n    index(slaveClient, \"id\", 553, \"name\", \"name = \" + 553);\n    slaveClient.commit(true, true);\n    index(slaveClient, \"id\", 554, \"name\", \"name = \" + 554);\n    slaveClient.commit(true, true);\n    index(slaveClient, \"id\", 555, \"name\", \"name = \" + 555);\n    slaveClient.commit(true, true);\n\n    //this doc is added to slave so it should show an item w/ that result\n    SolrDocumentList slaveQueryResult = null;\n    NamedList slaveQueryRsp;\n    // try a few times in case tests are running slow\n    for (int i = 0; i < 5; i++) {\n      slaveQueryRsp = rQuery(1, \"id:555\", slaveClient);\n      slaveQueryResult = (SolrDocumentList) slaveQueryRsp.get(\"response\");\n      if (slaveQueryResult.getNumFound() > 0) {\n        break;\n      }\n      Thread.sleep(100);\n    }\n    assertNotNull(slaveQueryResult);\n    assertEquals(1, slaveQueryResult.getNumFound());\n\n    masterUrl = \"http://localhost:\" + masterJetty.getLocalPort() + \"/solr/replication?command=enableReplication\";\n    url = new URL(masterUrl);\n    stream = url.openStream();\n    try {\n      stream.close();\n    } catch (IOException e) {\n      //e.printStackTrace();\n    }\n\n    //the slave should have done a full copy of the index so the doc with id:555 should not be there in the slave now\n    slaveQueryRsp = rQuery(0, \"id:555\", slaveClient);\n    slaveQueryResult = (SolrDocumentList) slaveQueryRsp.get(\"response\");\n    assertEquals(0, slaveQueryResult.getNumFound());\n  }\n\n","sourceOld":"  @Test\n  public void testReplicateAfterWrite2Slave() throws Exception {\n    //add 50 docs to master\n    int nDocs = 50;\n    for (int i = 0; i < nDocs; i++) {\n      index(masterClient, \"id\", i, \"name\", \"name = \" + i);\n    }\n\n    String masterUrl = \"http://localhost:\" + masterJetty.getLocalPort() + \"/solr/replication?command=disableReplication\";\n    URL url = new URL(masterUrl);\n    InputStream stream = url.openStream();\n    try {\n      stream.close();\n    } catch (IOException e) {\n      //e.printStackTrace();\n    }\n\n    masterClient.commit();\n\n    NamedList masterQueryRsp = rQuery(50, \"*:*\", masterClient);\n    SolrDocumentList masterQueryResult = (SolrDocumentList) masterQueryRsp.get(\"response\");\n    assertEquals(nDocs, masterQueryResult.getNumFound());\n\n    // Make sure that both the index version and index generation on the slave is\n    // higher than that of the master, just to make the test harder.\n\n    index(slaveClient, \"id\", 551, \"name\", \"name = \" + 551);\n    slaveClient.commit(true, true);\n    index(slaveClient, \"id\", 552, \"name\", \"name = \" + 552);\n    slaveClient.commit(true, true);\n    index(slaveClient, \"id\", 553, \"name\", \"name = \" + 553);\n    slaveClient.commit(true, true);\n    index(slaveClient, \"id\", 554, \"name\", \"name = \" + 554);\n    slaveClient.commit(true, true);\n    index(slaveClient, \"id\", 555, \"name\", \"name = \" + 555);\n    slaveClient.commit(true, true);\n\n    //this doc is added to slave so it should show an item w/ that result\n    SolrDocumentList slaveQueryResult = null;\n    NamedList slaveQueryRsp;\n    // try a few times in case tests are running slow\n    for (int i = 0; i < 3; i++) {\n      slaveQueryRsp = rQuery(1, \"id:555\", slaveClient);\n      slaveQueryResult = (SolrDocumentList) slaveQueryRsp.get(\"response\");\n      if (slaveQueryResult.getNumFound() > 0) {\n        break;\n      }\n      Thread.sleep(100);\n    }\n    assertNotNull(slaveQueryResult);\n    assertEquals(1, slaveQueryResult.getNumFound());\n\n    masterUrl = \"http://localhost:\" + masterJetty.getLocalPort() + \"/solr/replication?command=enableReplication\";\n    url = new URL(masterUrl);\n    stream = url.openStream();\n    try {\n      stream.close();\n    } catch (IOException e) {\n      //e.printStackTrace();\n    }\n\n    //the slave should have done a full copy of the index so the doc with id:555 should not be there in the slave now\n    slaveQueryRsp = rQuery(0, \"id:555\", slaveClient);\n    slaveQueryResult = (SolrDocumentList) slaveQueryRsp.get(\"response\");\n    assertEquals(0, slaveQueryResult.getNumFound());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"fcf3ea2f4517896c4859eebe7f3dfdab5a920978","date":1280410590,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/src/test/org/apache/solr/handler/TestReplicationHandler#testReplicateAfterWrite2Slave().mjava","pathOld":"solr/src/test/org/apache/solr/handler/TestReplicationHandler#testReplicateAfterWrite2Slave().mjava","sourceNew":"  @Test\n  public void testReplicateAfterWrite2Slave() throws Exception {\n    //add 50 docs to master\n    int nDocs = 50;\n    for (int i = 0; i < nDocs; i++) {\n      index(masterClient, \"id\", i, \"name\", \"name = \" + i);\n    }\n\n    String masterUrl = \"http://localhost:\" + masterJetty.getLocalPort() + \"/solr/replication?command=disableReplication\";\n    URL url = new URL(masterUrl);\n    InputStream stream = url.openStream();\n    try {\n      stream.close();\n    } catch (IOException e) {\n      //e.printStackTrace();\n    }\n\n    masterClient.commit();\n\n    NamedList masterQueryRsp = rQuery(50, \"*:*\", masterClient);\n    SolrDocumentList masterQueryResult = (SolrDocumentList) masterQueryRsp.get(\"response\");\n    assertEquals(nDocs, masterQueryResult.getNumFound());\n\n    // Make sure that both the index version and index generation on the slave is\n    // higher than that of the master, just to make the test harder.\n\n    index(slaveClient, \"id\", 551, \"name\", \"name = \" + 551);\n    slaveClient.commit(true, true);\n    index(slaveClient, \"id\", 552, \"name\", \"name = \" + 552);\n    slaveClient.commit(true, true);\n    index(slaveClient, \"id\", 553, \"name\", \"name = \" + 553);\n    slaveClient.commit(true, true);\n    index(slaveClient, \"id\", 554, \"name\", \"name = \" + 554);\n    slaveClient.commit(true, true);\n    index(slaveClient, \"id\", 555, \"name\", \"name = \" + 555);\n    slaveClient.commit(true, true);\n\n    //this doc is added to slave so it should show an item w/ that result\n    SolrDocumentList slaveQueryResult = null;\n    NamedList slaveQueryRsp;\n    // try a few times in case tests are running slow\n    for (int i = 0; i < 10; i++) {\n      slaveQueryRsp = rQuery(1, \"id:555\", slaveClient);\n      slaveQueryResult = (SolrDocumentList) slaveQueryRsp.get(\"response\");\n      if (slaveQueryResult.getNumFound() > 0) {\n        break;\n      }\n      Thread.sleep(100);\n    }\n    assertNotNull(slaveQueryResult);\n    assertEquals(1, slaveQueryResult.getNumFound());\n\n    masterUrl = \"http://localhost:\" + masterJetty.getLocalPort() + \"/solr/replication?command=enableReplication\";\n    url = new URL(masterUrl);\n    stream = url.openStream();\n    try {\n      stream.close();\n    } catch (IOException e) {\n      //e.printStackTrace();\n    }\n\n    //the slave should have done a full copy of the index so the doc with id:555 should not be there in the slave now\n    slaveQueryRsp = rQuery(0, \"id:555\", slaveClient);\n    slaveQueryResult = (SolrDocumentList) slaveQueryRsp.get(\"response\");\n    assertEquals(0, slaveQueryResult.getNumFound());\n  }\n\n","sourceOld":"  @Test\n  public void testReplicateAfterWrite2Slave() throws Exception {\n    //add 50 docs to master\n    int nDocs = 50;\n    for (int i = 0; i < nDocs; i++) {\n      index(masterClient, \"id\", i, \"name\", \"name = \" + i);\n    }\n\n    String masterUrl = \"http://localhost:\" + masterJetty.getLocalPort() + \"/solr/replication?command=disableReplication\";\n    URL url = new URL(masterUrl);\n    InputStream stream = url.openStream();\n    try {\n      stream.close();\n    } catch (IOException e) {\n      //e.printStackTrace();\n    }\n\n    masterClient.commit();\n\n    NamedList masterQueryRsp = rQuery(50, \"*:*\", masterClient);\n    SolrDocumentList masterQueryResult = (SolrDocumentList) masterQueryRsp.get(\"response\");\n    assertEquals(nDocs, masterQueryResult.getNumFound());\n\n    // Make sure that both the index version and index generation on the slave is\n    // higher than that of the master, just to make the test harder.\n\n    index(slaveClient, \"id\", 551, \"name\", \"name = \" + 551);\n    slaveClient.commit(true, true);\n    index(slaveClient, \"id\", 552, \"name\", \"name = \" + 552);\n    slaveClient.commit(true, true);\n    index(slaveClient, \"id\", 553, \"name\", \"name = \" + 553);\n    slaveClient.commit(true, true);\n    index(slaveClient, \"id\", 554, \"name\", \"name = \" + 554);\n    slaveClient.commit(true, true);\n    index(slaveClient, \"id\", 555, \"name\", \"name = \" + 555);\n    slaveClient.commit(true, true);\n\n    //this doc is added to slave so it should show an item w/ that result\n    SolrDocumentList slaveQueryResult = null;\n    NamedList slaveQueryRsp;\n    // try a few times in case tests are running slow\n    for (int i = 0; i < 5; i++) {\n      slaveQueryRsp = rQuery(1, \"id:555\", slaveClient);\n      slaveQueryResult = (SolrDocumentList) slaveQueryRsp.get(\"response\");\n      if (slaveQueryResult.getNumFound() > 0) {\n        break;\n      }\n      Thread.sleep(100);\n    }\n    assertNotNull(slaveQueryResult);\n    assertEquals(1, slaveQueryResult.getNumFound());\n\n    masterUrl = \"http://localhost:\" + masterJetty.getLocalPort() + \"/solr/replication?command=enableReplication\";\n    url = new URL(masterUrl);\n    stream = url.openStream();\n    try {\n      stream.close();\n    } catch (IOException e) {\n      //e.printStackTrace();\n    }\n\n    //the slave should have done a full copy of the index so the doc with id:555 should not be there in the slave now\n    slaveQueryRsp = rQuery(0, \"id:555\", slaveClient);\n    slaveQueryResult = (SolrDocumentList) slaveQueryRsp.get(\"response\");\n    assertEquals(0, slaveQueryResult.getNumFound());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"84362677be568b68f6b6b39aebf6d0e7e3832b6c","date":1280505948,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/src/test/org/apache/solr/handler/TestReplicationHandler#testReplicateAfterWrite2Slave().mjava","pathOld":"solr/src/test/org/apache/solr/handler/TestReplicationHandler#testReplicateAfterWrite2Slave().mjava","sourceNew":"  @Test\n  public void testReplicateAfterWrite2Slave() throws Exception {\n    //add 50 docs to master\n    int nDocs = 50;\n    for (int i = 0; i < nDocs; i++) {\n      index(masterClient, \"id\", i, \"name\", \"name = \" + i);\n    }\n\n    String masterUrl = \"http://localhost:\" + masterJetty.getLocalPort() + \"/solr/replication?command=disableReplication\";\n    URL url = new URL(masterUrl);\n    InputStream stream = url.openStream();\n    try {\n      stream.close();\n    } catch (IOException e) {\n      //e.printStackTrace();\n    }\n\n    masterClient.commit();\n\n    NamedList masterQueryRsp = rQuery(50, \"*:*\", masterClient);\n    SolrDocumentList masterQueryResult = (SolrDocumentList) masterQueryRsp.get(\"response\");\n    assertEquals(nDocs, masterQueryResult.getNumFound());\n\n    // Make sure that both the index version and index generation on the slave is\n    // higher than that of the master, just to make the test harder.\n\n    index(slaveClient, \"id\", 551, \"name\", \"name = \" + 551);\n    slaveClient.commit(true, true);\n    index(slaveClient, \"id\", 552, \"name\", \"name = \" + 552);\n    slaveClient.commit(true, true);\n    index(slaveClient, \"id\", 553, \"name\", \"name = \" + 553);\n    slaveClient.commit(true, true);\n    index(slaveClient, \"id\", 554, \"name\", \"name = \" + 554);\n    slaveClient.commit(true, true);\n    index(slaveClient, \"id\", 555, \"name\", \"name = \" + 555);\n    slaveClient.commit(true, true);\n\n    //this doc is added to slave so it should show an item w/ that result\n    SolrDocumentList slaveQueryResult = null;\n    NamedList slaveQueryRsp;\n    // try a few times in case tests are running slow\n    for (int i = 0; i < 30; i++) {\n      slaveQueryRsp = rQuery(1, \"id:555\", slaveClient);\n      slaveQueryResult = (SolrDocumentList) slaveQueryRsp.get(\"response\");\n      if (slaveQueryResult.getNumFound() > 0) {\n        break;\n      }\n      Thread.sleep(100);\n    }\n    assertNotNull(slaveQueryResult);\n    assertEquals(1, slaveQueryResult.getNumFound());\n\n    masterUrl = \"http://localhost:\" + masterJetty.getLocalPort() + \"/solr/replication?command=enableReplication\";\n    url = new URL(masterUrl);\n    stream = url.openStream();\n    try {\n      stream.close();\n    } catch (IOException e) {\n      //e.printStackTrace();\n    }\n\n    //the slave should have done a full copy of the index so the doc with id:555 should not be there in the slave now\n    slaveQueryRsp = rQuery(0, \"id:555\", slaveClient);\n    slaveQueryResult = (SolrDocumentList) slaveQueryRsp.get(\"response\");\n    assertEquals(0, slaveQueryResult.getNumFound());\n  }\n\n","sourceOld":"  @Test\n  public void testReplicateAfterWrite2Slave() throws Exception {\n    //add 50 docs to master\n    int nDocs = 50;\n    for (int i = 0; i < nDocs; i++) {\n      index(masterClient, \"id\", i, \"name\", \"name = \" + i);\n    }\n\n    String masterUrl = \"http://localhost:\" + masterJetty.getLocalPort() + \"/solr/replication?command=disableReplication\";\n    URL url = new URL(masterUrl);\n    InputStream stream = url.openStream();\n    try {\n      stream.close();\n    } catch (IOException e) {\n      //e.printStackTrace();\n    }\n\n    masterClient.commit();\n\n    NamedList masterQueryRsp = rQuery(50, \"*:*\", masterClient);\n    SolrDocumentList masterQueryResult = (SolrDocumentList) masterQueryRsp.get(\"response\");\n    assertEquals(nDocs, masterQueryResult.getNumFound());\n\n    // Make sure that both the index version and index generation on the slave is\n    // higher than that of the master, just to make the test harder.\n\n    index(slaveClient, \"id\", 551, \"name\", \"name = \" + 551);\n    slaveClient.commit(true, true);\n    index(slaveClient, \"id\", 552, \"name\", \"name = \" + 552);\n    slaveClient.commit(true, true);\n    index(slaveClient, \"id\", 553, \"name\", \"name = \" + 553);\n    slaveClient.commit(true, true);\n    index(slaveClient, \"id\", 554, \"name\", \"name = \" + 554);\n    slaveClient.commit(true, true);\n    index(slaveClient, \"id\", 555, \"name\", \"name = \" + 555);\n    slaveClient.commit(true, true);\n\n    //this doc is added to slave so it should show an item w/ that result\n    SolrDocumentList slaveQueryResult = null;\n    NamedList slaveQueryRsp;\n    // try a few times in case tests are running slow\n    for (int i = 0; i < 10; i++) {\n      slaveQueryRsp = rQuery(1, \"id:555\", slaveClient);\n      slaveQueryResult = (SolrDocumentList) slaveQueryRsp.get(\"response\");\n      if (slaveQueryResult.getNumFound() > 0) {\n        break;\n      }\n      Thread.sleep(100);\n    }\n    assertNotNull(slaveQueryResult);\n    assertEquals(1, slaveQueryResult.getNumFound());\n\n    masterUrl = \"http://localhost:\" + masterJetty.getLocalPort() + \"/solr/replication?command=enableReplication\";\n    url = new URL(masterUrl);\n    stream = url.openStream();\n    try {\n      stream.close();\n    } catch (IOException e) {\n      //e.printStackTrace();\n    }\n\n    //the slave should have done a full copy of the index so the doc with id:555 should not be there in the slave now\n    slaveQueryRsp = rQuery(0, \"id:555\", slaveClient);\n    slaveQueryResult = (SolrDocumentList) slaveQueryRsp.get(\"response\");\n    assertEquals(0, slaveQueryResult.getNumFound());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"7ae4035d5085153857c956964049164f1d0a3bc7","date":1280590927,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"solr/src/test/org/apache/solr/handler/TestReplicationHandler#testReplicateAfterWrite2Slave().mjava","pathOld":"solr/src/test/org/apache/solr/handler/TestReplicationHandler#testReplicateAfterWrite2Slave().mjava","sourceNew":"  @Test\n  public void testReplicateAfterWrite2Slave() throws Exception {\n    //add 50 docs to master\n    int nDocs = 50;\n    for (int i = 0; i < nDocs; i++) {\n      index(masterClient, \"id\", i, \"name\", \"name = \" + i);\n    }\n\n    String masterUrl = \"http://localhost:\" + masterJetty.getLocalPort() + \"/solr/replication?command=disableReplication\";\n    URL url = new URL(masterUrl);\n    InputStream stream = url.openStream();\n    try {\n      stream.close();\n    } catch (IOException e) {\n      //e.printStackTrace();\n    }\n\n    masterClient.commit();\n\n    NamedList masterQueryRsp = rQuery(50, \"*:*\", masterClient);\n    SolrDocumentList masterQueryResult = (SolrDocumentList) masterQueryRsp.get(\"response\");\n    assertEquals(nDocs, masterQueryResult.getNumFound());\n\n    // Make sure that both the index version and index generation on the slave is\n    // higher than that of the master, just to make the test harder.\n\n    index(slaveClient, \"id\", 551, \"name\", \"name = \" + 551);\n    slaveClient.commit(true, true);\n    index(slaveClient, \"id\", 552, \"name\", \"name = \" + 552);\n    slaveClient.commit(true, true);\n    index(slaveClient, \"id\", 553, \"name\", \"name = \" + 553);\n    slaveClient.commit(true, true);\n    index(slaveClient, \"id\", 554, \"name\", \"name = \" + 554);\n    slaveClient.commit(true, true);\n    index(slaveClient, \"id\", 555, \"name\", \"name = \" + 555);\n    slaveClient.commit(true, true);\n\n\n    //this doc is added to slave so it should show an item w/ that result\n    SolrDocumentList slaveQueryResult = null;\n    NamedList slaveQueryRsp;\n    // try a few times in case tests are running slow\n    for (int i = 0; i < 30; i++) {\n      slaveQueryRsp = rQuery(1, \"id:555\", slaveClient);\n      slaveQueryResult = (SolrDocumentList) slaveQueryRsp.get(\"response\");\n      if (slaveQueryResult.getNumFound() > 0) {\n        break;\n      }\n      Thread.sleep(100);\n\n      // The last commit may have failed due to exceeding max warming searchers.\n      // We'll try again.\n      slaveClient.commit(true, true);\n    }\n    assertNotNull(slaveQueryResult);\n    assertEquals(1, slaveQueryResult.getNumFound());\n\n    masterUrl = \"http://localhost:\" + masterJetty.getLocalPort() + \"/solr/replication?command=enableReplication\";\n    url = new URL(masterUrl);\n    stream = url.openStream();\n    try {\n      stream.close();\n    } catch (IOException e) {\n      //e.printStackTrace();\n    }\n\n    //the slave should have done a full copy of the index so the doc with id:555 should not be there in the slave now\n    slaveQueryRsp = rQuery(0, \"id:555\", slaveClient);\n    slaveQueryResult = (SolrDocumentList) slaveQueryRsp.get(\"response\");\n    assertEquals(0, slaveQueryResult.getNumFound());\n  }\n\n","sourceOld":"  @Test\n  public void testReplicateAfterWrite2Slave() throws Exception {\n    //add 50 docs to master\n    int nDocs = 50;\n    for (int i = 0; i < nDocs; i++) {\n      index(masterClient, \"id\", i, \"name\", \"name = \" + i);\n    }\n\n    String masterUrl = \"http://localhost:\" + masterJetty.getLocalPort() + \"/solr/replication?command=disableReplication\";\n    URL url = new URL(masterUrl);\n    InputStream stream = url.openStream();\n    try {\n      stream.close();\n    } catch (IOException e) {\n      //e.printStackTrace();\n    }\n\n    masterClient.commit();\n\n    NamedList masterQueryRsp = rQuery(50, \"*:*\", masterClient);\n    SolrDocumentList masterQueryResult = (SolrDocumentList) masterQueryRsp.get(\"response\");\n    assertEquals(nDocs, masterQueryResult.getNumFound());\n\n    // Make sure that both the index version and index generation on the slave is\n    // higher than that of the master, just to make the test harder.\n\n    index(slaveClient, \"id\", 551, \"name\", \"name = \" + 551);\n    slaveClient.commit(true, true);\n    index(slaveClient, \"id\", 552, \"name\", \"name = \" + 552);\n    slaveClient.commit(true, true);\n    index(slaveClient, \"id\", 553, \"name\", \"name = \" + 553);\n    slaveClient.commit(true, true);\n    index(slaveClient, \"id\", 554, \"name\", \"name = \" + 554);\n    slaveClient.commit(true, true);\n    index(slaveClient, \"id\", 555, \"name\", \"name = \" + 555);\n    slaveClient.commit(true, true);\n\n    //this doc is added to slave so it should show an item w/ that result\n    SolrDocumentList slaveQueryResult = null;\n    NamedList slaveQueryRsp;\n    // try a few times in case tests are running slow\n    for (int i = 0; i < 30; i++) {\n      slaveQueryRsp = rQuery(1, \"id:555\", slaveClient);\n      slaveQueryResult = (SolrDocumentList) slaveQueryRsp.get(\"response\");\n      if (slaveQueryResult.getNumFound() > 0) {\n        break;\n      }\n      Thread.sleep(100);\n    }\n    assertNotNull(slaveQueryResult);\n    assertEquals(1, slaveQueryResult.getNumFound());\n\n    masterUrl = \"http://localhost:\" + masterJetty.getLocalPort() + \"/solr/replication?command=enableReplication\";\n    url = new URL(masterUrl);\n    stream = url.openStream();\n    try {\n      stream.close();\n    } catch (IOException e) {\n      //e.printStackTrace();\n    }\n\n    //the slave should have done a full copy of the index so the doc with id:555 should not be there in the slave now\n    slaveQueryRsp = rQuery(0, \"id:555\", slaveClient);\n    slaveQueryResult = (SolrDocumentList) slaveQueryRsp.get(\"response\");\n    assertEquals(0, slaveQueryResult.getNumFound());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"46cdd055d680de613fedc34f1cd0241b8aa7f07b","date":1280676549,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"solr/src/test/org/apache/solr/handler/TestReplicationHandler#testReplicateAfterWrite2Slave().mjava","pathOld":"solr/src/test/org/apache/solr/handler/TestReplicationHandler#testReplicateAfterWrite2Slave().mjava","sourceNew":"  @Test\n  public void testReplicateAfterWrite2Slave() throws Exception {\n    //add 50 docs to master\n    int nDocs = 50;\n    for (int i = 0; i < nDocs; i++) {\n      index(masterClient, \"id\", i, \"name\", \"name = \" + i);\n    }\n\n    String masterUrl = \"http://localhost:\" + masterJetty.getLocalPort() + \"/solr/replication?command=disableReplication\";\n    URL url = new URL(masterUrl);\n    InputStream stream = url.openStream();\n    try {\n      stream.close();\n    } catch (IOException e) {\n      //e.printStackTrace();\n    }\n\n    masterClient.commit();\n\n    NamedList masterQueryRsp = rQuery(50, \"*:*\", masterClient);\n    SolrDocumentList masterQueryResult = (SolrDocumentList) masterQueryRsp.get(\"response\");\n    assertEquals(nDocs, masterQueryResult.getNumFound());\n\n    // Make sure that both the index version and index generation on the slave is\n    // higher than that of the master, just to make the test harder.\n\n    index(slaveClient, \"id\", 551, \"name\", \"name = \" + 551);\n    slaveClient.commit(true, true);\n    index(slaveClient, \"id\", 552, \"name\", \"name = \" + 552);\n    slaveClient.commit(true, true);\n    index(slaveClient, \"id\", 553, \"name\", \"name = \" + 553);\n    slaveClient.commit(true, true);\n    index(slaveClient, \"id\", 554, \"name\", \"name = \" + 554);\n    slaveClient.commit(true, true);\n    index(slaveClient, \"id\", 555, \"name\", \"name = \" + 555);\n    slaveClient.commit(true, true);\n\n\n    //this doc is added to slave so it should show an item w/ that result\n    SolrDocumentList slaveQueryResult = null;\n    NamedList slaveQueryRsp;\n    slaveQueryRsp = rQuery(1, \"id:555\", slaveClient);\n    slaveQueryResult = (SolrDocumentList) slaveQueryRsp.get(\"response\");\n    assertEquals(1, slaveQueryResult.getNumFound());\n\n    masterUrl = \"http://localhost:\" + masterJetty.getLocalPort() + \"/solr/replication?command=enableReplication\";\n    url = new URL(masterUrl);\n    stream = url.openStream();\n    try {\n      stream.close();\n    } catch (IOException e) {\n      //e.printStackTrace();\n    }\n\n    //the slave should have done a full copy of the index so the doc with id:555 should not be there in the slave now\n    slaveQueryRsp = rQuery(0, \"id:555\", slaveClient);\n    slaveQueryResult = (SolrDocumentList) slaveQueryRsp.get(\"response\");\n    assertEquals(0, slaveQueryResult.getNumFound());\n  }\n\n","sourceOld":"  @Test\n  public void testReplicateAfterWrite2Slave() throws Exception {\n    //add 50 docs to master\n    int nDocs = 50;\n    for (int i = 0; i < nDocs; i++) {\n      index(masterClient, \"id\", i, \"name\", \"name = \" + i);\n    }\n\n    String masterUrl = \"http://localhost:\" + masterJetty.getLocalPort() + \"/solr/replication?command=disableReplication\";\n    URL url = new URL(masterUrl);\n    InputStream stream = url.openStream();\n    try {\n      stream.close();\n    } catch (IOException e) {\n      //e.printStackTrace();\n    }\n\n    masterClient.commit();\n\n    NamedList masterQueryRsp = rQuery(50, \"*:*\", masterClient);\n    SolrDocumentList masterQueryResult = (SolrDocumentList) masterQueryRsp.get(\"response\");\n    assertEquals(nDocs, masterQueryResult.getNumFound());\n\n    // Make sure that both the index version and index generation on the slave is\n    // higher than that of the master, just to make the test harder.\n\n    index(slaveClient, \"id\", 551, \"name\", \"name = \" + 551);\n    slaveClient.commit(true, true);\n    index(slaveClient, \"id\", 552, \"name\", \"name = \" + 552);\n    slaveClient.commit(true, true);\n    index(slaveClient, \"id\", 553, \"name\", \"name = \" + 553);\n    slaveClient.commit(true, true);\n    index(slaveClient, \"id\", 554, \"name\", \"name = \" + 554);\n    slaveClient.commit(true, true);\n    index(slaveClient, \"id\", 555, \"name\", \"name = \" + 555);\n    slaveClient.commit(true, true);\n\n\n    //this doc is added to slave so it should show an item w/ that result\n    SolrDocumentList slaveQueryResult = null;\n    NamedList slaveQueryRsp;\n    // try a few times in case tests are running slow\n    for (int i = 0; i < 30; i++) {\n      slaveQueryRsp = rQuery(1, \"id:555\", slaveClient);\n      slaveQueryResult = (SolrDocumentList) slaveQueryRsp.get(\"response\");\n      if (slaveQueryResult.getNumFound() > 0) {\n        break;\n      }\n      Thread.sleep(100);\n\n      // The last commit may have failed due to exceeding max warming searchers.\n      // We'll try again.\n      slaveClient.commit(true, true);\n    }\n    assertNotNull(slaveQueryResult);\n    assertEquals(1, slaveQueryResult.getNumFound());\n\n    masterUrl = \"http://localhost:\" + masterJetty.getLocalPort() + \"/solr/replication?command=enableReplication\";\n    url = new URL(masterUrl);\n    stream = url.openStream();\n    try {\n      stream.close();\n    } catch (IOException e) {\n      //e.printStackTrace();\n    }\n\n    //the slave should have done a full copy of the index so the doc with id:555 should not be there in the slave now\n    slaveQueryRsp = rQuery(0, \"id:555\", slaveClient);\n    slaveQueryResult = (SolrDocumentList) slaveQueryRsp.get(\"response\");\n    assertEquals(0, slaveQueryResult.getNumFound());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"15d9f44fef2efc5a53524397c3faabf23d0066bf","date":1280767698,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"solr/src/test/org/apache/solr/handler/TestReplicationHandler#testReplicateAfterWrite2Slave().mjava","pathOld":"solr/src/test/org/apache/solr/handler/TestReplicationHandler#testReplicateAfterWrite2Slave().mjava","sourceNew":"  @Test\n  public void testReplicateAfterWrite2Slave() throws Exception {\n    //add 50 docs to master\n    int nDocs = 50;\n    for (int i = 0; i < nDocs; i++) {\n      index(masterClient, \"id\", i, \"name\", \"name = \" + i);\n    }\n\n    String masterUrl = \"http://localhost:\" + masterJetty.getLocalPort() + \"/solr/replication?command=disableReplication\";\n    URL url = new URL(masterUrl);\n    InputStream stream = url.openStream();\n    try {\n      stream.close();\n    } catch (IOException e) {\n      //e.printStackTrace();\n    }\n\n    masterClient.commit();\n\n    NamedList masterQueryRsp = rQuery(nDocs, \"*:*\", masterClient);\n    SolrDocumentList masterQueryResult = (SolrDocumentList) masterQueryRsp.get(\"response\");\n    assertEquals(nDocs, masterQueryResult.getNumFound());\n\n    // Make sure that both the index version and index generation on the slave is\n    // higher than that of the master, just to make the test harder.\n\n    index(slaveClient, \"id\", 551, \"name\", \"name = \" + 551);\n    slaveClient.commit(true, true);\n    index(slaveClient, \"id\", 552, \"name\", \"name = \" + 552);\n    slaveClient.commit(true, true);\n    index(slaveClient, \"id\", 553, \"name\", \"name = \" + 553);\n    slaveClient.commit(true, true);\n    index(slaveClient, \"id\", 554, \"name\", \"name = \" + 554);\n    slaveClient.commit(true, true);\n    index(slaveClient, \"id\", 555, \"name\", \"name = \" + 555);\n    slaveClient.commit(true, true);\n\n\n    //this doc is added to slave so it should show an item w/ that result\n    SolrDocumentList slaveQueryResult = null;\n    NamedList slaveQueryRsp;\n    slaveQueryRsp = rQuery(1, \"id:555\", slaveClient);\n    slaveQueryResult = (SolrDocumentList) slaveQueryRsp.get(\"response\");\n    assertEquals(1, slaveQueryResult.getNumFound());\n\n    masterUrl = \"http://localhost:\" + masterJetty.getLocalPort() + \"/solr/replication?command=enableReplication\";\n    url = new URL(masterUrl);\n    stream = url.openStream();\n    try {\n      stream.close();\n    } catch (IOException e) {\n      //e.printStackTrace();\n    }\n\n    //the slave should have done a full copy of the index so the doc with id:555 should not be there in the slave now\n    slaveQueryRsp = rQuery(0, \"id:555\", slaveClient);\n    slaveQueryResult = (SolrDocumentList) slaveQueryRsp.get(\"response\");\n    assertEquals(0, slaveQueryResult.getNumFound());\n\n    // make sure we replicated the correct index from the master\n    slaveQueryRsp = rQuery(nDocs, \"*:*\", slaveClient);\n    slaveQueryResult = (SolrDocumentList) slaveQueryRsp.get(\"response\");\n    assertEquals(nDocs, slaveQueryResult.getNumFound());\n  }\n\n","sourceOld":"  @Test\n  public void testReplicateAfterWrite2Slave() throws Exception {\n    //add 50 docs to master\n    int nDocs = 50;\n    for (int i = 0; i < nDocs; i++) {\n      index(masterClient, \"id\", i, \"name\", \"name = \" + i);\n    }\n\n    String masterUrl = \"http://localhost:\" + masterJetty.getLocalPort() + \"/solr/replication?command=disableReplication\";\n    URL url = new URL(masterUrl);\n    InputStream stream = url.openStream();\n    try {\n      stream.close();\n    } catch (IOException e) {\n      //e.printStackTrace();\n    }\n\n    masterClient.commit();\n\n    NamedList masterQueryRsp = rQuery(50, \"*:*\", masterClient);\n    SolrDocumentList masterQueryResult = (SolrDocumentList) masterQueryRsp.get(\"response\");\n    assertEquals(nDocs, masterQueryResult.getNumFound());\n\n    // Make sure that both the index version and index generation on the slave is\n    // higher than that of the master, just to make the test harder.\n\n    index(slaveClient, \"id\", 551, \"name\", \"name = \" + 551);\n    slaveClient.commit(true, true);\n    index(slaveClient, \"id\", 552, \"name\", \"name = \" + 552);\n    slaveClient.commit(true, true);\n    index(slaveClient, \"id\", 553, \"name\", \"name = \" + 553);\n    slaveClient.commit(true, true);\n    index(slaveClient, \"id\", 554, \"name\", \"name = \" + 554);\n    slaveClient.commit(true, true);\n    index(slaveClient, \"id\", 555, \"name\", \"name = \" + 555);\n    slaveClient.commit(true, true);\n\n\n    //this doc is added to slave so it should show an item w/ that result\n    SolrDocumentList slaveQueryResult = null;\n    NamedList slaveQueryRsp;\n    slaveQueryRsp = rQuery(1, \"id:555\", slaveClient);\n    slaveQueryResult = (SolrDocumentList) slaveQueryRsp.get(\"response\");\n    assertEquals(1, slaveQueryResult.getNumFound());\n\n    masterUrl = \"http://localhost:\" + masterJetty.getLocalPort() + \"/solr/replication?command=enableReplication\";\n    url = new URL(masterUrl);\n    stream = url.openStream();\n    try {\n      stream.close();\n    } catch (IOException e) {\n      //e.printStackTrace();\n    }\n\n    //the slave should have done a full copy of the index so the doc with id:555 should not be there in the slave now\n    slaveQueryRsp = rQuery(0, \"id:555\", slaveClient);\n    slaveQueryResult = (SolrDocumentList) slaveQueryRsp.get(\"response\");\n    assertEquals(0, slaveQueryResult.getNumFound());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"379ec215b82e132c6741b5211d9cd8cfc30aa02a","date":1280784799,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"solr/src/test/org/apache/solr/handler/TestReplicationHandler#testReplicateAfterWrite2Slave().mjava","pathOld":"solr/src/test/org/apache/solr/handler/TestReplicationHandler#testReplicateAfterWrite2Slave().mjava","sourceNew":"  @Test\n  public void testReplicateAfterWrite2Slave() throws Exception {\n    clearIndexWithReplication();\n    nDocs--;\n    for (int i = 0; i < nDocs; i++) {\n      index(masterClient, \"id\", i, \"name\", \"name = \" + i);\n    }\n\n    String masterUrl = \"http://localhost:\" + masterJetty.getLocalPort() + \"/solr/replication?command=disableReplication\";\n    URL url = new URL(masterUrl);\n    InputStream stream = url.openStream();\n    try {\n      stream.close();\n    } catch (IOException e) {\n      //e.printStackTrace();\n    }\n\n    masterClient.commit();\n\n    NamedList masterQueryRsp = rQuery(nDocs, \"*:*\", masterClient);\n    SolrDocumentList masterQueryResult = (SolrDocumentList) masterQueryRsp.get(\"response\");\n    assertEquals(nDocs, masterQueryResult.getNumFound());\n\n    // Make sure that both the index version and index generation on the slave is\n    // higher than that of the master, just to make the test harder.\n\n    index(slaveClient, \"id\", 551, \"name\", \"name = \" + 551);\n    slaveClient.commit(true, true);\n    index(slaveClient, \"id\", 552, \"name\", \"name = \" + 552);\n    slaveClient.commit(true, true);\n    index(slaveClient, \"id\", 553, \"name\", \"name = \" + 553);\n    slaveClient.commit(true, true);\n    index(slaveClient, \"id\", 554, \"name\", \"name = \" + 554);\n    slaveClient.commit(true, true);\n    index(slaveClient, \"id\", 555, \"name\", \"name = \" + 555);\n    slaveClient.commit(true, true);\n\n\n    //this doc is added to slave so it should show an item w/ that result\n    SolrDocumentList slaveQueryResult = null;\n    NamedList slaveQueryRsp;\n    slaveQueryRsp = rQuery(1, \"id:555\", slaveClient);\n    slaveQueryResult = (SolrDocumentList) slaveQueryRsp.get(\"response\");\n    assertEquals(1, slaveQueryResult.getNumFound());\n\n    masterUrl = \"http://localhost:\" + masterJetty.getLocalPort() + \"/solr/replication?command=enableReplication\";\n    url = new URL(masterUrl);\n    stream = url.openStream();\n    try {\n      stream.close();\n    } catch (IOException e) {\n      //e.printStackTrace();\n    }\n\n    //the slave should have done a full copy of the index so the doc with id:555 should not be there in the slave now\n    slaveQueryRsp = rQuery(0, \"id:555\", slaveClient);\n    slaveQueryResult = (SolrDocumentList) slaveQueryRsp.get(\"response\");\n    assertEquals(0, slaveQueryResult.getNumFound());\n\n    // make sure we replicated the correct index from the master\n    slaveQueryRsp = rQuery(nDocs, \"*:*\", slaveClient);\n    slaveQueryResult = (SolrDocumentList) slaveQueryRsp.get(\"response\");\n    assertEquals(nDocs, slaveQueryResult.getNumFound());\n  }\n\n","sourceOld":"  @Test\n  public void testReplicateAfterWrite2Slave() throws Exception {\n    //add 50 docs to master\n    int nDocs = 50;\n    for (int i = 0; i < nDocs; i++) {\n      index(masterClient, \"id\", i, \"name\", \"name = \" + i);\n    }\n\n    String masterUrl = \"http://localhost:\" + masterJetty.getLocalPort() + \"/solr/replication?command=disableReplication\";\n    URL url = new URL(masterUrl);\n    InputStream stream = url.openStream();\n    try {\n      stream.close();\n    } catch (IOException e) {\n      //e.printStackTrace();\n    }\n\n    masterClient.commit();\n\n    NamedList masterQueryRsp = rQuery(nDocs, \"*:*\", masterClient);\n    SolrDocumentList masterQueryResult = (SolrDocumentList) masterQueryRsp.get(\"response\");\n    assertEquals(nDocs, masterQueryResult.getNumFound());\n\n    // Make sure that both the index version and index generation on the slave is\n    // higher than that of the master, just to make the test harder.\n\n    index(slaveClient, \"id\", 551, \"name\", \"name = \" + 551);\n    slaveClient.commit(true, true);\n    index(slaveClient, \"id\", 552, \"name\", \"name = \" + 552);\n    slaveClient.commit(true, true);\n    index(slaveClient, \"id\", 553, \"name\", \"name = \" + 553);\n    slaveClient.commit(true, true);\n    index(slaveClient, \"id\", 554, \"name\", \"name = \" + 554);\n    slaveClient.commit(true, true);\n    index(slaveClient, \"id\", 555, \"name\", \"name = \" + 555);\n    slaveClient.commit(true, true);\n\n\n    //this doc is added to slave so it should show an item w/ that result\n    SolrDocumentList slaveQueryResult = null;\n    NamedList slaveQueryRsp;\n    slaveQueryRsp = rQuery(1, \"id:555\", slaveClient);\n    slaveQueryResult = (SolrDocumentList) slaveQueryRsp.get(\"response\");\n    assertEquals(1, slaveQueryResult.getNumFound());\n\n    masterUrl = \"http://localhost:\" + masterJetty.getLocalPort() + \"/solr/replication?command=enableReplication\";\n    url = new URL(masterUrl);\n    stream = url.openStream();\n    try {\n      stream.close();\n    } catch (IOException e) {\n      //e.printStackTrace();\n    }\n\n    //the slave should have done a full copy of the index so the doc with id:555 should not be there in the slave now\n    slaveQueryRsp = rQuery(0, \"id:555\", slaveClient);\n    slaveQueryResult = (SolrDocumentList) slaveQueryRsp.get(\"response\");\n    assertEquals(0, slaveQueryResult.getNumFound());\n\n    // make sure we replicated the correct index from the master\n    slaveQueryRsp = rQuery(nDocs, \"*:*\", slaveClient);\n    slaveQueryResult = (SolrDocumentList) slaveQueryRsp.get(\"response\");\n    assertEquals(nDocs, slaveQueryResult.getNumFound());\n  }\n\n","bugFix":["c73f127dda0f4628ecb8123d310b5d17259ad4fb"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","date":1292920096,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"solr/src/test/org/apache/solr/handler/TestReplicationHandler#testReplicateAfterWrite2Slave().mjava","pathOld":"solr/src/test/org/apache/solr/handler/TestReplicationHandler#testReplicateAfterWrite2Slave().mjava","sourceNew":"  @Test\n  public void testReplicateAfterWrite2Slave() throws Exception {\n    clearIndexWithReplication();\n    nDocs--;\n    for (int i = 0; i < nDocs; i++) {\n      index(masterClient, \"id\", i, \"name\", \"name = \" + i);\n    }\n\n    String masterUrl = \"http://localhost:\" + masterJetty.getLocalPort() + \"/solr/replication?command=disableReplication\";\n    URL url = new URL(masterUrl);\n    InputStream stream = url.openStream();\n    try {\n      stream.close();\n    } catch (IOException e) {\n      //e.printStackTrace();\n    }\n\n    masterClient.commit();\n\n    NamedList masterQueryRsp = rQuery(nDocs, \"*:*\", masterClient);\n    SolrDocumentList masterQueryResult = (SolrDocumentList) masterQueryRsp.get(\"response\");\n    assertEquals(nDocs, masterQueryResult.getNumFound());\n\n    // Make sure that both the index version and index generation on the slave is\n    // higher than that of the master, just to make the test harder.\n\n    index(slaveClient, \"id\", 551, \"name\", \"name = \" + 551);\n    slaveClient.commit(true, true);\n    index(slaveClient, \"id\", 552, \"name\", \"name = \" + 552);\n    slaveClient.commit(true, true);\n    index(slaveClient, \"id\", 553, \"name\", \"name = \" + 553);\n    slaveClient.commit(true, true);\n    index(slaveClient, \"id\", 554, \"name\", \"name = \" + 554);\n    slaveClient.commit(true, true);\n    index(slaveClient, \"id\", 555, \"name\", \"name = \" + 555);\n    slaveClient.commit(true, true);\n\n\n    //this doc is added to slave so it should show an item w/ that result\n    SolrDocumentList slaveQueryResult = null;\n    NamedList slaveQueryRsp;\n    slaveQueryRsp = rQuery(1, \"id:555\", slaveClient);\n    slaveQueryResult = (SolrDocumentList) slaveQueryRsp.get(\"response\");\n    assertEquals(1, slaveQueryResult.getNumFound());\n\n    masterUrl = \"http://localhost:\" + masterJetty.getLocalPort() + \"/solr/replication?command=enableReplication\";\n    url = new URL(masterUrl);\n    stream = url.openStream();\n    try {\n      stream.close();\n    } catch (IOException e) {\n      //e.printStackTrace();\n    }\n\n    //the slave should have done a full copy of the index so the doc with id:555 should not be there in the slave now\n    slaveQueryRsp = rQuery(0, \"id:555\", slaveClient);\n    slaveQueryResult = (SolrDocumentList) slaveQueryRsp.get(\"response\");\n    assertEquals(0, slaveQueryResult.getNumFound());\n\n    // make sure we replicated the correct index from the master\n    slaveQueryRsp = rQuery(nDocs, \"*:*\", slaveClient);\n    slaveQueryResult = (SolrDocumentList) slaveQueryRsp.get(\"response\");\n    assertEquals(nDocs, slaveQueryResult.getNumFound());\n  }\n\n","sourceOld":"  @Test\n  public void testReplicateAfterWrite2Slave() throws Exception {\n    //add 50 docs to master\n    int nDocs = 50;\n    for (int i = 0; i < nDocs; i++) {\n      index(masterClient, \"id\", i, \"name\", \"name = \" + i);\n    }\n\n    String masterUrl = \"http://localhost:\" + masterJetty.getLocalPort() + \"/solr/replication?command=disableReplication\";\n    URL url = new URL(masterUrl);\n    InputStream stream = url.openStream();\n    try {\n      stream.close();\n    } catch (IOException e) {\n      //e.printStackTrace();\n    }\n\n    masterClient.commit();\n\n    NamedList masterQueryRsp = rQuery(50, \"*:*\", masterClient);\n    SolrDocumentList masterQueryResult = (SolrDocumentList) masterQueryRsp.get(\"response\");\n    assertEquals(nDocs, masterQueryResult.getNumFound());\n\n    // Make sure that both the index version and index generation on the slave is\n    // higher than that of the master, just to make the test harder.\n\n    index(slaveClient, \"id\", 551, \"name\", \"name = \" + 551);\n    slaveClient.commit(true, true);\n    index(slaveClient, \"id\", 552, \"name\", \"name = \" + 552);\n    slaveClient.commit(true, true);\n    index(slaveClient, \"id\", 553, \"name\", \"name = \" + 553);\n    slaveClient.commit(true, true);\n    index(slaveClient, \"id\", 554, \"name\", \"name = \" + 554);\n    slaveClient.commit(true, true);\n    index(slaveClient, \"id\", 555, \"name\", \"name = \" + 555);\n    slaveClient.commit(true, true);\n\n    //this doc is added to slave so it should show an item w/ that result\n    NamedList slaveQueryRsp = rQuery(1, \"id:555\", slaveClient);\n    SolrDocumentList slaveQueryResult = (SolrDocumentList) slaveQueryRsp.get(\"response\");\n    assertEquals(1, slaveQueryResult.getNumFound());\n\n    masterUrl = \"http://localhost:\" + masterJetty.getLocalPort() + \"/solr/replication?command=enableReplication\";\n    url = new URL(masterUrl);\n    stream = url.openStream();\n    try {\n      stream.close();\n    } catch (IOException e) {\n      //e.printStackTrace();\n    }\n\n    //the slave should have done a full copy of the index so the doc with id:555 should not be there in the slave now\n    slaveQueryRsp = rQuery(0, \"id:555\", slaveClient);\n    slaveQueryResult = (SolrDocumentList) slaveQueryRsp.get(\"response\");\n    assertEquals(0, slaveQueryResult.getNumFound());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c903c3d15906a3da96b8c0c2fb704491005fdbdb","date":1453508227,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/TestReplicationHandler#testReplicateAfterWrite2Slave().mjava","pathOld":"solr/src/test/org/apache/solr/handler/TestReplicationHandler#testReplicateAfterWrite2Slave().mjava","sourceNew":"  @Test\n  public void testReplicateAfterWrite2Slave() throws Exception {\n    clearIndexWithReplication();\n    nDocs--;\n    for (int i = 0; i < nDocs; i++) {\n      index(masterClient, \"id\", i, \"name\", \"name = \" + i);\n    }\n\n    String masterUrl = \"http://localhost:\" + masterJetty.getLocalPort() + \"/solr/replication?command=disableReplication\";\n    URL url = new URL(masterUrl);\n    InputStream stream = url.openStream();\n    try {\n      stream.close();\n    } catch (IOException e) {\n      //e.printStackTrace();\n    }\n\n    masterClient.commit();\n\n    NamedList masterQueryRsp = rQuery(nDocs, \"*:*\", masterClient);\n    SolrDocumentList masterQueryResult = (SolrDocumentList) masterQueryRsp.get(\"response\");\n    assertEquals(nDocs, masterQueryResult.getNumFound());\n\n    // Make sure that both the index version and index generation on the slave is\n    // higher than that of the master, just to make the test harder.\n\n    index(slaveClient, \"id\", 551, \"name\", \"name = \" + 551);\n    slaveClient.commit(true, true);\n    index(slaveClient, \"id\", 552, \"name\", \"name = \" + 552);\n    slaveClient.commit(true, true);\n    index(slaveClient, \"id\", 553, \"name\", \"name = \" + 553);\n    slaveClient.commit(true, true);\n    index(slaveClient, \"id\", 554, \"name\", \"name = \" + 554);\n    slaveClient.commit(true, true);\n    index(slaveClient, \"id\", 555, \"name\", \"name = \" + 555);\n    slaveClient.commit(true, true);\n\n\n    //this doc is added to slave so it should show an item w/ that result\n    SolrDocumentList slaveQueryResult = null;\n    NamedList slaveQueryRsp;\n    slaveQueryRsp = rQuery(1, \"id:555\", slaveClient);\n    slaveQueryResult = (SolrDocumentList) slaveQueryRsp.get(\"response\");\n    assertEquals(1, slaveQueryResult.getNumFound());\n\n    masterUrl = \"http://localhost:\" + masterJetty.getLocalPort() + \"/solr/replication?command=enableReplication\";\n    url = new URL(masterUrl);\n    stream = url.openStream();\n    try {\n      stream.close();\n    } catch (IOException e) {\n      //e.printStackTrace();\n    }\n\n    //the slave should have done a full copy of the index so the doc with id:555 should not be there in the slave now\n    slaveQueryRsp = rQuery(0, \"id:555\", slaveClient);\n    slaveQueryResult = (SolrDocumentList) slaveQueryRsp.get(\"response\");\n    assertEquals(0, slaveQueryResult.getNumFound());\n\n    // make sure we replicated the correct index from the master\n    slaveQueryRsp = rQuery(nDocs, \"*:*\", slaveClient);\n    slaveQueryResult = (SolrDocumentList) slaveQueryRsp.get(\"response\");\n    assertEquals(nDocs, slaveQueryResult.getNumFound());\n  }\n\n","sourceOld":"  @Test\n  public void testReplicateAfterWrite2Slave() throws Exception {\n    clearIndexWithReplication();\n    nDocs--;\n    for (int i = 0; i < nDocs; i++) {\n      index(masterClient, \"id\", i, \"name\", \"name = \" + i);\n    }\n\n    String masterUrl = \"http://localhost:\" + masterJetty.getLocalPort() + \"/solr/replication?command=disableReplication\";\n    URL url = new URL(masterUrl);\n    InputStream stream = url.openStream();\n    try {\n      stream.close();\n    } catch (IOException e) {\n      //e.printStackTrace();\n    }\n\n    masterClient.commit();\n\n    NamedList masterQueryRsp = rQuery(nDocs, \"*:*\", masterClient);\n    SolrDocumentList masterQueryResult = (SolrDocumentList) masterQueryRsp.get(\"response\");\n    assertEquals(nDocs, masterQueryResult.getNumFound());\n\n    // Make sure that both the index version and index generation on the slave is\n    // higher than that of the master, just to make the test harder.\n\n    index(slaveClient, \"id\", 551, \"name\", \"name = \" + 551);\n    slaveClient.commit(true, true);\n    index(slaveClient, \"id\", 552, \"name\", \"name = \" + 552);\n    slaveClient.commit(true, true);\n    index(slaveClient, \"id\", 553, \"name\", \"name = \" + 553);\n    slaveClient.commit(true, true);\n    index(slaveClient, \"id\", 554, \"name\", \"name = \" + 554);\n    slaveClient.commit(true, true);\n    index(slaveClient, \"id\", 555, \"name\", \"name = \" + 555);\n    slaveClient.commit(true, true);\n\n\n    //this doc is added to slave so it should show an item w/ that result\n    SolrDocumentList slaveQueryResult = null;\n    NamedList slaveQueryRsp;\n    slaveQueryRsp = rQuery(1, \"id:555\", slaveClient);\n    slaveQueryResult = (SolrDocumentList) slaveQueryRsp.get(\"response\");\n    assertEquals(1, slaveQueryResult.getNumFound());\n\n    masterUrl = \"http://localhost:\" + masterJetty.getLocalPort() + \"/solr/replication?command=enableReplication\";\n    url = new URL(masterUrl);\n    stream = url.openStream();\n    try {\n      stream.close();\n    } catch (IOException e) {\n      //e.printStackTrace();\n    }\n\n    //the slave should have done a full copy of the index so the doc with id:555 should not be there in the slave now\n    slaveQueryRsp = rQuery(0, \"id:555\", slaveClient);\n    slaveQueryResult = (SolrDocumentList) slaveQueryRsp.get(\"response\");\n    assertEquals(0, slaveQueryResult.getNumFound());\n\n    // make sure we replicated the correct index from the master\n    slaveQueryRsp = rQuery(nDocs, \"*:*\", slaveClient);\n    slaveQueryResult = (SolrDocumentList) slaveQueryRsp.get(\"response\");\n    assertEquals(nDocs, slaveQueryResult.getNumFound());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a258fbb26824fd104ed795e5d9033d2d040049ee","date":1453508252,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/TestReplicationHandler#testReplicateAfterWrite2Slave().mjava","pathOld":"solr/src/test/org/apache/solr/handler/TestReplicationHandler#testReplicateAfterWrite2Slave().mjava","sourceNew":"  @Test\n  public void testReplicateAfterWrite2Slave() throws Exception {\n    clearIndexWithReplication();\n    nDocs--;\n    for (int i = 0; i < nDocs; i++) {\n      index(masterClient, \"id\", i, \"name\", \"name = \" + i);\n    }\n\n    String masterUrl = \"http://localhost:\" + masterJetty.getLocalPort() + \"/solr/replication?command=disableReplication\";\n    URL url = new URL(masterUrl);\n    InputStream stream = url.openStream();\n    try {\n      stream.close();\n    } catch (IOException e) {\n      //e.printStackTrace();\n    }\n\n    masterClient.commit();\n\n    NamedList masterQueryRsp = rQuery(nDocs, \"*:*\", masterClient);\n    SolrDocumentList masterQueryResult = (SolrDocumentList) masterQueryRsp.get(\"response\");\n    assertEquals(nDocs, masterQueryResult.getNumFound());\n\n    // Make sure that both the index version and index generation on the slave is\n    // higher than that of the master, just to make the test harder.\n\n    index(slaveClient, \"id\", 551, \"name\", \"name = \" + 551);\n    slaveClient.commit(true, true);\n    index(slaveClient, \"id\", 552, \"name\", \"name = \" + 552);\n    slaveClient.commit(true, true);\n    index(slaveClient, \"id\", 553, \"name\", \"name = \" + 553);\n    slaveClient.commit(true, true);\n    index(slaveClient, \"id\", 554, \"name\", \"name = \" + 554);\n    slaveClient.commit(true, true);\n    index(slaveClient, \"id\", 555, \"name\", \"name = \" + 555);\n    slaveClient.commit(true, true);\n\n\n    //this doc is added to slave so it should show an item w/ that result\n    SolrDocumentList slaveQueryResult = null;\n    NamedList slaveQueryRsp;\n    slaveQueryRsp = rQuery(1, \"id:555\", slaveClient);\n    slaveQueryResult = (SolrDocumentList) slaveQueryRsp.get(\"response\");\n    assertEquals(1, slaveQueryResult.getNumFound());\n\n    masterUrl = \"http://localhost:\" + masterJetty.getLocalPort() + \"/solr/replication?command=enableReplication\";\n    url = new URL(masterUrl);\n    stream = url.openStream();\n    try {\n      stream.close();\n    } catch (IOException e) {\n      //e.printStackTrace();\n    }\n\n    //the slave should have done a full copy of the index so the doc with id:555 should not be there in the slave now\n    slaveQueryRsp = rQuery(0, \"id:555\", slaveClient);\n    slaveQueryResult = (SolrDocumentList) slaveQueryRsp.get(\"response\");\n    assertEquals(0, slaveQueryResult.getNumFound());\n\n    // make sure we replicated the correct index from the master\n    slaveQueryRsp = rQuery(nDocs, \"*:*\", slaveClient);\n    slaveQueryResult = (SolrDocumentList) slaveQueryRsp.get(\"response\");\n    assertEquals(nDocs, slaveQueryResult.getNumFound());\n  }\n\n","sourceOld":"  @Test\n  public void testReplicateAfterWrite2Slave() throws Exception {\n    clearIndexWithReplication();\n    nDocs--;\n    for (int i = 0; i < nDocs; i++) {\n      index(masterClient, \"id\", i, \"name\", \"name = \" + i);\n    }\n\n    String masterUrl = \"http://localhost:\" + masterJetty.getLocalPort() + \"/solr/replication?command=disableReplication\";\n    URL url = new URL(masterUrl);\n    InputStream stream = url.openStream();\n    try {\n      stream.close();\n    } catch (IOException e) {\n      //e.printStackTrace();\n    }\n\n    masterClient.commit();\n\n    NamedList masterQueryRsp = rQuery(nDocs, \"*:*\", masterClient);\n    SolrDocumentList masterQueryResult = (SolrDocumentList) masterQueryRsp.get(\"response\");\n    assertEquals(nDocs, masterQueryResult.getNumFound());\n\n    // Make sure that both the index version and index generation on the slave is\n    // higher than that of the master, just to make the test harder.\n\n    index(slaveClient, \"id\", 551, \"name\", \"name = \" + 551);\n    slaveClient.commit(true, true);\n    index(slaveClient, \"id\", 552, \"name\", \"name = \" + 552);\n    slaveClient.commit(true, true);\n    index(slaveClient, \"id\", 553, \"name\", \"name = \" + 553);\n    slaveClient.commit(true, true);\n    index(slaveClient, \"id\", 554, \"name\", \"name = \" + 554);\n    slaveClient.commit(true, true);\n    index(slaveClient, \"id\", 555, \"name\", \"name = \" + 555);\n    slaveClient.commit(true, true);\n\n\n    //this doc is added to slave so it should show an item w/ that result\n    SolrDocumentList slaveQueryResult = null;\n    NamedList slaveQueryRsp;\n    slaveQueryRsp = rQuery(1, \"id:555\", slaveClient);\n    slaveQueryResult = (SolrDocumentList) slaveQueryRsp.get(\"response\");\n    assertEquals(1, slaveQueryResult.getNumFound());\n\n    masterUrl = \"http://localhost:\" + masterJetty.getLocalPort() + \"/solr/replication?command=enableReplication\";\n    url = new URL(masterUrl);\n    stream = url.openStream();\n    try {\n      stream.close();\n    } catch (IOException e) {\n      //e.printStackTrace();\n    }\n\n    //the slave should have done a full copy of the index so the doc with id:555 should not be there in the slave now\n    slaveQueryRsp = rQuery(0, \"id:555\", slaveClient);\n    slaveQueryResult = (SolrDocumentList) slaveQueryRsp.get(\"response\");\n    assertEquals(0, slaveQueryResult.getNumFound());\n\n    // make sure we replicated the correct index from the master\n    slaveQueryRsp = rQuery(nDocs, \"*:*\", slaveClient);\n    slaveQueryResult = (SolrDocumentList) slaveQueryRsp.get(\"response\");\n    assertEquals(nDocs, slaveQueryResult.getNumFound());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":5,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/handler/TestReplicationHandler#testReplicateAfterWrite2Slave().mjava","pathOld":"solr/src/test/org/apache/solr/handler/TestReplicationHandler#testReplicateAfterWrite2Slave().mjava","sourceNew":"  @Test\n  public void testReplicateAfterWrite2Slave() throws Exception {\n    clearIndexWithReplication();\n    nDocs--;\n    for (int i = 0; i < nDocs; i++) {\n      index(masterClient, \"id\", i, \"name\", \"name = \" + i);\n    }\n\n    String masterUrl = \"http://localhost:\" + masterJetty.getLocalPort() + \"/solr/replication?command=disableReplication\";\n    URL url = new URL(masterUrl);\n    InputStream stream = url.openStream();\n    try {\n      stream.close();\n    } catch (IOException e) {\n      //e.printStackTrace();\n    }\n\n    masterClient.commit();\n\n    NamedList masterQueryRsp = rQuery(nDocs, \"*:*\", masterClient);\n    SolrDocumentList masterQueryResult = (SolrDocumentList) masterQueryRsp.get(\"response\");\n    assertEquals(nDocs, masterQueryResult.getNumFound());\n\n    // Make sure that both the index version and index generation on the slave is\n    // higher than that of the master, just to make the test harder.\n\n    index(slaveClient, \"id\", 551, \"name\", \"name = \" + 551);\n    slaveClient.commit(true, true);\n    index(slaveClient, \"id\", 552, \"name\", \"name = \" + 552);\n    slaveClient.commit(true, true);\n    index(slaveClient, \"id\", 553, \"name\", \"name = \" + 553);\n    slaveClient.commit(true, true);\n    index(slaveClient, \"id\", 554, \"name\", \"name = \" + 554);\n    slaveClient.commit(true, true);\n    index(slaveClient, \"id\", 555, \"name\", \"name = \" + 555);\n    slaveClient.commit(true, true);\n\n\n    //this doc is added to slave so it should show an item w/ that result\n    SolrDocumentList slaveQueryResult = null;\n    NamedList slaveQueryRsp;\n    slaveQueryRsp = rQuery(1, \"id:555\", slaveClient);\n    slaveQueryResult = (SolrDocumentList) slaveQueryRsp.get(\"response\");\n    assertEquals(1, slaveQueryResult.getNumFound());\n\n    masterUrl = \"http://localhost:\" + masterJetty.getLocalPort() + \"/solr/replication?command=enableReplication\";\n    url = new URL(masterUrl);\n    stream = url.openStream();\n    try {\n      stream.close();\n    } catch (IOException e) {\n      //e.printStackTrace();\n    }\n\n    //the slave should have done a full copy of the index so the doc with id:555 should not be there in the slave now\n    slaveQueryRsp = rQuery(0, \"id:555\", slaveClient);\n    slaveQueryResult = (SolrDocumentList) slaveQueryRsp.get(\"response\");\n    assertEquals(0, slaveQueryResult.getNumFound());\n\n    // make sure we replicated the correct index from the master\n    slaveQueryRsp = rQuery(nDocs, \"*:*\", slaveClient);\n    slaveQueryResult = (SolrDocumentList) slaveQueryRsp.get(\"response\");\n    assertEquals(nDocs, slaveQueryResult.getNumFound());\n  }\n\n","sourceOld":"  @Test\n  public void testReplicateAfterWrite2Slave() throws Exception {\n    clearIndexWithReplication();\n    nDocs--;\n    for (int i = 0; i < nDocs; i++) {\n      index(masterClient, \"id\", i, \"name\", \"name = \" + i);\n    }\n\n    String masterUrl = \"http://localhost:\" + masterJetty.getLocalPort() + \"/solr/replication?command=disableReplication\";\n    URL url = new URL(masterUrl);\n    InputStream stream = url.openStream();\n    try {\n      stream.close();\n    } catch (IOException e) {\n      //e.printStackTrace();\n    }\n\n    masterClient.commit();\n\n    NamedList masterQueryRsp = rQuery(nDocs, \"*:*\", masterClient);\n    SolrDocumentList masterQueryResult = (SolrDocumentList) masterQueryRsp.get(\"response\");\n    assertEquals(nDocs, masterQueryResult.getNumFound());\n\n    // Make sure that both the index version and index generation on the slave is\n    // higher than that of the master, just to make the test harder.\n\n    index(slaveClient, \"id\", 551, \"name\", \"name = \" + 551);\n    slaveClient.commit(true, true);\n    index(slaveClient, \"id\", 552, \"name\", \"name = \" + 552);\n    slaveClient.commit(true, true);\n    index(slaveClient, \"id\", 553, \"name\", \"name = \" + 553);\n    slaveClient.commit(true, true);\n    index(slaveClient, \"id\", 554, \"name\", \"name = \" + 554);\n    slaveClient.commit(true, true);\n    index(slaveClient, \"id\", 555, \"name\", \"name = \" + 555);\n    slaveClient.commit(true, true);\n\n\n    //this doc is added to slave so it should show an item w/ that result\n    SolrDocumentList slaveQueryResult = null;\n    NamedList slaveQueryRsp;\n    slaveQueryRsp = rQuery(1, \"id:555\", slaveClient);\n    slaveQueryResult = (SolrDocumentList) slaveQueryRsp.get(\"response\");\n    assertEquals(1, slaveQueryResult.getNumFound());\n\n    masterUrl = \"http://localhost:\" + masterJetty.getLocalPort() + \"/solr/replication?command=enableReplication\";\n    url = new URL(masterUrl);\n    stream = url.openStream();\n    try {\n      stream.close();\n    } catch (IOException e) {\n      //e.printStackTrace();\n    }\n\n    //the slave should have done a full copy of the index so the doc with id:555 should not be there in the slave now\n    slaveQueryRsp = rQuery(0, \"id:555\", slaveClient);\n    slaveQueryResult = (SolrDocumentList) slaveQueryRsp.get(\"response\");\n    assertEquals(0, slaveQueryResult.getNumFound());\n\n    // make sure we replicated the correct index from the master\n    slaveQueryRsp = rQuery(nDocs, \"*:*\", slaveClient);\n    slaveQueryResult = (SolrDocumentList) slaveQueryRsp.get(\"response\");\n    assertEquals(nDocs, slaveQueryResult.getNumFound());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"84362677be568b68f6b6b39aebf6d0e7e3832b6c":["fcf3ea2f4517896c4859eebe7f3dfdab5a920978"],"893269407f5c988a4b2ee13c7ffc01ec43136c1d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"379ec215b82e132c6741b5211d9cd8cfc30aa02a":["15d9f44fef2efc5a53524397c3faabf23d0066bf"],"a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8":["893269407f5c988a4b2ee13c7ffc01ec43136c1d"],"c26f00b574427b55127e869b935845554afde1fa":["379ec215b82e132c6741b5211d9cd8cfc30aa02a","c903c3d15906a3da96b8c0c2fb704491005fdbdb"],"7ae4035d5085153857c956964049164f1d0a3bc7":["84362677be568b68f6b6b39aebf6d0e7e3832b6c"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"fa11ec6384884a1ce488b8ebe31a56054640c17f":["9f72f36b556a12c6d5004378a256b03015ef24d8"],"5f4e87790277826a2aea119328600dfb07761f32":["1da8d55113b689b06716246649de6f62430f15c0","9f72f36b556a12c6d5004378a256b03015ef24d8"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["5f4e87790277826a2aea119328600dfb07761f32","379ec215b82e132c6741b5211d9cd8cfc30aa02a"],"1da8d55113b689b06716246649de6f62430f15c0":["a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8","ad94625fb8d088209f46650c8097196fec67f00c"],"ae643525cccc3562951806c0b5b066abdb7b3949":["fa11ec6384884a1ce488b8ebe31a56054640c17f"],"9f72f36b556a12c6d5004378a256b03015ef24d8":["1da8d55113b689b06716246649de6f62430f15c0"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["379ec215b82e132c6741b5211d9cd8cfc30aa02a"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a258fbb26824fd104ed795e5d9033d2d040049ee":["379ec215b82e132c6741b5211d9cd8cfc30aa02a"],"ad94625fb8d088209f46650c8097196fec67f00c":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"15d9f44fef2efc5a53524397c3faabf23d0066bf":["46cdd055d680de613fedc34f1cd0241b8aa7f07b"],"46cdd055d680de613fedc34f1cd0241b8aa7f07b":["7ae4035d5085153857c956964049164f1d0a3bc7"],"fcf3ea2f4517896c4859eebe7f3dfdab5a920978":["ae643525cccc3562951806c0b5b066abdb7b3949"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["c26f00b574427b55127e869b935845554afde1fa"]},"commit2Childs":{"84362677be568b68f6b6b39aebf6d0e7e3832b6c":["7ae4035d5085153857c956964049164f1d0a3bc7"],"893269407f5c988a4b2ee13c7ffc01ec43136c1d":["a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8"],"379ec215b82e132c6741b5211d9cd8cfc30aa02a":["c26f00b574427b55127e869b935845554afde1fa","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","c903c3d15906a3da96b8c0c2fb704491005fdbdb","a258fbb26824fd104ed795e5d9033d2d040049ee"],"a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8":["1da8d55113b689b06716246649de6f62430f15c0"],"c26f00b574427b55127e869b935845554afde1fa":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"7ae4035d5085153857c956964049164f1d0a3bc7":["46cdd055d680de613fedc34f1cd0241b8aa7f07b"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["ad94625fb8d088209f46650c8097196fec67f00c"],"fa11ec6384884a1ce488b8ebe31a56054640c17f":["ae643525cccc3562951806c0b5b066abdb7b3949"],"5f4e87790277826a2aea119328600dfb07761f32":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":[],"1da8d55113b689b06716246649de6f62430f15c0":["5f4e87790277826a2aea119328600dfb07761f32","9f72f36b556a12c6d5004378a256b03015ef24d8"],"9f72f36b556a12c6d5004378a256b03015ef24d8":["fa11ec6384884a1ce488b8ebe31a56054640c17f","5f4e87790277826a2aea119328600dfb07761f32"],"ae643525cccc3562951806c0b5b066abdb7b3949":["fcf3ea2f4517896c4859eebe7f3dfdab5a920978"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["c26f00b574427b55127e869b935845554afde1fa"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["893269407f5c988a4b2ee13c7ffc01ec43136c1d"],"a258fbb26824fd104ed795e5d9033d2d040049ee":[],"ad94625fb8d088209f46650c8097196fec67f00c":["1da8d55113b689b06716246649de6f62430f15c0"],"15d9f44fef2efc5a53524397c3faabf23d0066bf":["379ec215b82e132c6741b5211d9cd8cfc30aa02a"],"46cdd055d680de613fedc34f1cd0241b8aa7f07b":["15d9f44fef2efc5a53524397c3faabf23d0066bf"],"fcf3ea2f4517896c4859eebe7f3dfdab5a920978":["84362677be568b68f6b6b39aebf6d0e7e3832b6c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","a258fbb26824fd104ed795e5d9033d2d040049ee","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b","a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}