{"path":"src/test/org/apache/lucene/document/TestDocument#testFieldSetValueChangeBinary().mjava","commits":[{"id":"9ceeecb10cba0f5a6e9dc34ac3c60a18383745df","date":1237159479,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"src/test/org/apache/lucene/document/TestDocument#testFieldSetValueChangeBinary().mjava","pathOld":"/dev/null","sourceNew":"  public void testFieldSetValueChangeBinary() {\n    Field field1 = new Field(\"field1\", new byte[0],\n                             Field.Store.YES);\n    Field field2 = new Field(\"field2\", \"\",\n                             Field.Store.YES, Field.Index.ANALYZED);\n    try {\n      field1.setValue(\"abc\");\n      fail(\"did not hit expected exception\");\n    } catch (IllegalArgumentException iae) {\n      // expected\n    }\n    try {\n      field2.setValue(new byte[0]);\n      fail(\"did not hit expected exception\");\n    } catch (IllegalArgumentException iae) {\n      // expected\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a9ac13b5f0ce5ef1b2ce168367d993a79594b23a","date":1267298041,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/test/org/apache/lucene/document/TestDocument#testFieldSetValueChangeBinary().mjava","pathOld":"src/test/org/apache/lucene/document/TestDocument#testFieldSetValueChangeBinary().mjava","sourceNew":"  public void testFieldSetValueChangeBinary() {\n    Field field1 = new Field(\"field1\", new byte[0]);\n    Field field2 = new Field(\"field2\", \"\",\n                             Field.Store.YES, Field.Index.ANALYZED);\n    try {\n      field1.setValue(\"abc\");\n      fail(\"did not hit expected exception\");\n    } catch (IllegalArgumentException iae) {\n      // expected\n    }\n    try {\n      field2.setValue(new byte[0]);\n      fail(\"did not hit expected exception\");\n    } catch (IllegalArgumentException iae) {\n      // expected\n    }\n  }\n\n","sourceOld":"  public void testFieldSetValueChangeBinary() {\n    Field field1 = new Field(\"field1\", new byte[0],\n                             Field.Store.YES);\n    Field field2 = new Field(\"field2\", \"\",\n                             Field.Store.YES, Field.Index.ANALYZED);\n    try {\n      field1.setValue(\"abc\");\n      fail(\"did not hit expected exception\");\n    } catch (IllegalArgumentException iae) {\n      // expected\n    }\n    try {\n      field2.setValue(new byte[0]);\n      fail(\"did not hit expected exception\");\n    } catch (IllegalArgumentException iae) {\n      // expected\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/document/TestDocument#testFieldSetValueChangeBinary().mjava","pathOld":"src/test/org/apache/lucene/document/TestDocument#testFieldSetValueChangeBinary().mjava","sourceNew":"  public void testFieldSetValueChangeBinary() {\n    Field field1 = new Field(\"field1\", new byte[0]);\n    Field field2 = new Field(\"field2\", \"\",\n                             Field.Store.YES, Field.Index.ANALYZED);\n    try {\n      field1.setValue(\"abc\");\n      fail(\"did not hit expected exception\");\n    } catch (IllegalArgumentException iae) {\n      // expected\n    }\n    try {\n      field2.setValue(new byte[0]);\n      fail(\"did not hit expected exception\");\n    } catch (IllegalArgumentException iae) {\n      // expected\n    }\n  }\n\n","sourceOld":"  public void testFieldSetValueChangeBinary() {\n    Field field1 = new Field(\"field1\", new byte[0]);\n    Field field2 = new Field(\"field2\", \"\",\n                             Field.Store.YES, Field.Index.ANALYZED);\n    try {\n      field1.setValue(\"abc\");\n      fail(\"did not hit expected exception\");\n    } catch (IllegalArgumentException iae) {\n      // expected\n    }\n    try {\n      field2.setValue(new byte[0]);\n      fail(\"did not hit expected exception\");\n    } catch (IllegalArgumentException iae) {\n      // expected\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"9ceeecb10cba0f5a6e9dc34ac3c60a18383745df":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a9ac13b5f0ce5ef1b2ce168367d993a79594b23a":["9ceeecb10cba0f5a6e9dc34ac3c60a18383745df"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a9ac13b5f0ce5ef1b2ce168367d993a79594b23a"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9ceeecb10cba0f5a6e9dc34ac3c60a18383745df"],"9ceeecb10cba0f5a6e9dc34ac3c60a18383745df":["a9ac13b5f0ce5ef1b2ce168367d993a79594b23a"],"a9ac13b5f0ce5ef1b2ce168367d993a79594b23a":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}