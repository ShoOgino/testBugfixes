{"path":"lucene/src/java/org/apache/lucene/index/FieldInfo#FieldInfo(String,boolean,int,boolean,boolean,boolean,boolean,boolean,IndexOptions,ValueType).mjava","commits":[{"id":"2afd23a6f1242190c3409d8d81d5c5912d607fc9","date":1310477482,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/FieldInfo#FieldInfo(String,boolean,int,boolean,boolean,boolean,boolean,boolean,IndexOptions,ValueType).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/FieldInfo#FieldInfo(String,boolean,int,boolean,boolean,boolean,boolean,boolean,boolean,ValueType).mjava","sourceNew":"  FieldInfo(String na, boolean tk, int nu, boolean storeTermVector, \n            boolean storePositionWithTermVector,  boolean storeOffsetWithTermVector, \n            boolean omitNorms, boolean storePayloads, IndexOptions indexOptions, ValueType docValues) {\n    name = na;\n    isIndexed = tk;\n    number = nu;\n    this.docValues = docValues;\n    if (isIndexed) {\n      this.storeTermVector = storeTermVector;\n      this.storeOffsetWithTermVector = storeOffsetWithTermVector;\n      this.storePositionWithTermVector = storePositionWithTermVector;\n      this.storePayloads = storePayloads;\n      this.omitNorms = omitNorms;\n      this.indexOptions = indexOptions;\n    } else { // for non-indexed fields, leave defaults\n      this.storeTermVector = false;\n      this.storeOffsetWithTermVector = false;\n      this.storePositionWithTermVector = false;\n      this.storePayloads = false;\n      this.omitNorms = false;\n      this.indexOptions = IndexOptions.DOCS_AND_FREQS_AND_POSITIONS;\n    }\n    assert indexOptions == IndexOptions.DOCS_AND_FREQS_AND_POSITIONS || !storePayloads;\n  }\n\n","sourceOld":"  FieldInfo(String na, boolean tk, int nu, boolean storeTermVector, \n            boolean storePositionWithTermVector,  boolean storeOffsetWithTermVector, \n            boolean omitNorms, boolean storePayloads, boolean omitTermFreqAndPositions, ValueType docValues) {\n    name = na;\n    isIndexed = tk;\n    number = nu;\n    this.docValues = docValues;\n    if (isIndexed) {\n      this.storeTermVector = storeTermVector;\n      this.storeOffsetWithTermVector = storeOffsetWithTermVector;\n      this.storePositionWithTermVector = storePositionWithTermVector;\n      this.storePayloads = storePayloads;\n      this.omitNorms = omitNorms;\n      this.omitTermFreqAndPositions = omitTermFreqAndPositions;\n    } else { // for non-indexed fields, leave defaults\n      this.storeTermVector = false;\n      this.storeOffsetWithTermVector = false;\n      this.storePositionWithTermVector = false;\n      this.storePayloads = false;\n      this.omitNorms = false;\n      this.omitTermFreqAndPositions = false;\n    }\n    assert !omitTermFreqAndPositions || !storePayloads;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3cc749c053615f5871f3b95715fe292f34e70a53","date":1321470575,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/FieldInfo#FieldInfo(String,boolean,int,boolean,boolean,boolean,boolean,boolean,IndexOptions,ValueType).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/FieldInfo#FieldInfo(String,boolean,int,boolean,boolean,boolean,boolean,boolean,IndexOptions,ValueType).mjava","sourceNew":"  /**\n   * @lucene.experimental\n   */\n  public FieldInfo(String name, boolean isIndexed, int number, boolean storeTermVector, \n            boolean storePositionWithTermVector,  boolean storeOffsetWithTermVector, \n            boolean omitNorms, boolean storePayloads, IndexOptions indexOptions, ValueType docValues) {\n    this.name = name;\n    this.isIndexed = isIndexed;\n    this.number = number;\n    this.docValues = docValues;\n    if (isIndexed) {\n      this.storeTermVector = storeTermVector;\n      this.storeOffsetWithTermVector = storeOffsetWithTermVector;\n      this.storePositionWithTermVector = storePositionWithTermVector;\n      this.storePayloads = storePayloads;\n      this.omitNorms = omitNorms;\n      this.indexOptions = indexOptions;\n    } else { // for non-indexed fields, leave defaults\n      this.storeTermVector = false;\n      this.storeOffsetWithTermVector = false;\n      this.storePositionWithTermVector = false;\n      this.storePayloads = false;\n      this.omitNorms = false;\n      this.indexOptions = IndexOptions.DOCS_AND_FREQS_AND_POSITIONS;\n    }\n    assert indexOptions == IndexOptions.DOCS_AND_FREQS_AND_POSITIONS || !storePayloads;\n  }\n\n","sourceOld":"  FieldInfo(String na, boolean tk, int nu, boolean storeTermVector, \n            boolean storePositionWithTermVector,  boolean storeOffsetWithTermVector, \n            boolean omitNorms, boolean storePayloads, IndexOptions indexOptions, ValueType docValues) {\n    name = na;\n    isIndexed = tk;\n    number = nu;\n    this.docValues = docValues;\n    if (isIndexed) {\n      this.storeTermVector = storeTermVector;\n      this.storeOffsetWithTermVector = storeOffsetWithTermVector;\n      this.storePositionWithTermVector = storePositionWithTermVector;\n      this.storePayloads = storePayloads;\n      this.omitNorms = omitNorms;\n      this.indexOptions = indexOptions;\n    } else { // for non-indexed fields, leave defaults\n      this.storeTermVector = false;\n      this.storeOffsetWithTermVector = false;\n      this.storePositionWithTermVector = false;\n      this.storePayloads = false;\n      this.omitNorms = false;\n      this.indexOptions = IndexOptions.DOCS_AND_FREQS_AND_POSITIONS;\n    }\n    assert indexOptions == IndexOptions.DOCS_AND_FREQS_AND_POSITIONS || !storePayloads;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"1e59c344a45b9502f40ec44f5fe4e20ed2291dbe","date":1323449025,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/FieldInfo#FieldInfo(String,boolean,int,boolean,boolean,boolean,boolean,boolean,IndexOptions,DocValues.Type).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/FieldInfo#FieldInfo(String,boolean,int,boolean,boolean,boolean,boolean,boolean,IndexOptions,ValueType).mjava","sourceNew":"  /**\n   * @lucene.experimental\n   */\n  public FieldInfo(String name, boolean isIndexed, int number, boolean storeTermVector, \n            boolean storePositionWithTermVector,  boolean storeOffsetWithTermVector, \n            boolean omitNorms, boolean storePayloads, IndexOptions indexOptions, DocValues.Type docValues) {\n    this.name = name;\n    this.isIndexed = isIndexed;\n    this.number = number;\n    this.docValues = docValues;\n    if (isIndexed) {\n      this.storeTermVector = storeTermVector;\n      this.storeOffsetWithTermVector = storeOffsetWithTermVector;\n      this.storePositionWithTermVector = storePositionWithTermVector;\n      this.storePayloads = storePayloads;\n      this.omitNorms = omitNorms;\n      this.indexOptions = indexOptions;\n    } else { // for non-indexed fields, leave defaults\n      this.storeTermVector = false;\n      this.storeOffsetWithTermVector = false;\n      this.storePositionWithTermVector = false;\n      this.storePayloads = false;\n      this.omitNorms = false;\n      this.indexOptions = IndexOptions.DOCS_AND_FREQS_AND_POSITIONS;\n    }\n    assert indexOptions == IndexOptions.DOCS_AND_FREQS_AND_POSITIONS || !storePayloads;\n  }\n\n","sourceOld":"  /**\n   * @lucene.experimental\n   */\n  public FieldInfo(String name, boolean isIndexed, int number, boolean storeTermVector, \n            boolean storePositionWithTermVector,  boolean storeOffsetWithTermVector, \n            boolean omitNorms, boolean storePayloads, IndexOptions indexOptions, ValueType docValues) {\n    this.name = name;\n    this.isIndexed = isIndexed;\n    this.number = number;\n    this.docValues = docValues;\n    if (isIndexed) {\n      this.storeTermVector = storeTermVector;\n      this.storeOffsetWithTermVector = storeOffsetWithTermVector;\n      this.storePositionWithTermVector = storePositionWithTermVector;\n      this.storePayloads = storePayloads;\n      this.omitNorms = omitNorms;\n      this.indexOptions = indexOptions;\n    } else { // for non-indexed fields, leave defaults\n      this.storeTermVector = false;\n      this.storeOffsetWithTermVector = false;\n      this.storePositionWithTermVector = false;\n      this.storePayloads = false;\n      this.omitNorms = false;\n      this.indexOptions = IndexOptions.DOCS_AND_FREQS_AND_POSITIONS;\n    }\n    assert indexOptions == IndexOptions.DOCS_AND_FREQS_AND_POSITIONS || !storePayloads;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"d638301ad1cfcae567b681b893bc8781f0ee48a5","date":1323801546,"type":5,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/FieldInfo#FieldInfo(String,boolean,int,boolean,boolean,boolean,boolean,boolean,IndexOptions,DocValues.Type).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/FieldInfo#FieldInfo(String,boolean,int,boolean,boolean,boolean,boolean,boolean,IndexOptions,ValueType).mjava","sourceNew":"  /**\n   * @lucene.experimental\n   */\n  public FieldInfo(String name, boolean isIndexed, int number, boolean storeTermVector, \n            boolean storePositionWithTermVector,  boolean storeOffsetWithTermVector, \n            boolean omitNorms, boolean storePayloads, IndexOptions indexOptions, DocValues.Type docValues) {\n    this.name = name;\n    this.isIndexed = isIndexed;\n    this.number = number;\n    this.docValues = docValues;\n    if (isIndexed) {\n      this.storeTermVector = storeTermVector;\n      this.storeOffsetWithTermVector = storeOffsetWithTermVector;\n      this.storePositionWithTermVector = storePositionWithTermVector;\n      this.storePayloads = storePayloads;\n      this.omitNorms = omitNorms;\n      this.indexOptions = indexOptions;\n    } else { // for non-indexed fields, leave defaults\n      this.storeTermVector = false;\n      this.storeOffsetWithTermVector = false;\n      this.storePositionWithTermVector = false;\n      this.storePayloads = false;\n      this.omitNorms = false;\n      this.indexOptions = IndexOptions.DOCS_AND_FREQS_AND_POSITIONS;\n    }\n    assert indexOptions == IndexOptions.DOCS_AND_FREQS_AND_POSITIONS || !storePayloads;\n  }\n\n","sourceOld":"  /**\n   * @lucene.experimental\n   */\n  public FieldInfo(String name, boolean isIndexed, int number, boolean storeTermVector, \n            boolean storePositionWithTermVector,  boolean storeOffsetWithTermVector, \n            boolean omitNorms, boolean storePayloads, IndexOptions indexOptions, ValueType docValues) {\n    this.name = name;\n    this.isIndexed = isIndexed;\n    this.number = number;\n    this.docValues = docValues;\n    if (isIndexed) {\n      this.storeTermVector = storeTermVector;\n      this.storeOffsetWithTermVector = storeOffsetWithTermVector;\n      this.storePositionWithTermVector = storePositionWithTermVector;\n      this.storePayloads = storePayloads;\n      this.omitNorms = omitNorms;\n      this.indexOptions = indexOptions;\n    } else { // for non-indexed fields, leave defaults\n      this.storeTermVector = false;\n      this.storeOffsetWithTermVector = false;\n      this.storePositionWithTermVector = false;\n      this.storePayloads = false;\n      this.omitNorms = false;\n      this.indexOptions = IndexOptions.DOCS_AND_FREQS_AND_POSITIONS;\n    }\n    assert indexOptions == IndexOptions.DOCS_AND_FREQS_AND_POSITIONS || !storePayloads;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"2afd23a6f1242190c3409d8d81d5c5912d607fc9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"1e59c344a45b9502f40ec44f5fe4e20ed2291dbe":["3cc749c053615f5871f3b95715fe292f34e70a53"],"3cc749c053615f5871f3b95715fe292f34e70a53":["2afd23a6f1242190c3409d8d81d5c5912d607fc9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["d638301ad1cfcae567b681b893bc8781f0ee48a5"],"d638301ad1cfcae567b681b893bc8781f0ee48a5":["3cc749c053615f5871f3b95715fe292f34e70a53","1e59c344a45b9502f40ec44f5fe4e20ed2291dbe"]},"commit2Childs":{"2afd23a6f1242190c3409d8d81d5c5912d607fc9":["3cc749c053615f5871f3b95715fe292f34e70a53"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["2afd23a6f1242190c3409d8d81d5c5912d607fc9"],"1e59c344a45b9502f40ec44f5fe4e20ed2291dbe":["d638301ad1cfcae567b681b893bc8781f0ee48a5"],"3cc749c053615f5871f3b95715fe292f34e70a53":["1e59c344a45b9502f40ec44f5fe4e20ed2291dbe","d638301ad1cfcae567b681b893bc8781f0ee48a5"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"d638301ad1cfcae567b681b893bc8781f0ee48a5":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}