{"path":"lucene/core/src/java/org/apache/lucene/search/BlockMaxConjunctionScorer#advanceShallow(int).mjava","commits":[{"id":"523cc6563c99a55527ef7993efc5413c6648852d","date":1518704038,"type":0,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/BlockMaxConjunctionScorer#advanceShallow(int).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public int advanceShallow(int target) throws IOException {\n    // We use block boundaries of the lead scorer.\n    // It is tempting to fold in other clauses as well to have better bounds of\n    // the score, but then there is a risk of not progressing fast enough.\n    int result = scorers[0].advanceShallow(target);\n    // But we still need to shallow-advance other clauses, in order to have\n    // better score upper bounds\n    for (int i = 1; i < scorers.length; ++i) {\n      scorers[i].advanceShallow(target);\n    }\n    return result;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"523cc6563c99a55527ef7993efc5413c6648852d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["523cc6563c99a55527ef7993efc5413c6648852d"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["523cc6563c99a55527ef7993efc5413c6648852d"],"523cc6563c99a55527ef7993efc5413c6648852d":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}