{"path":"src/test/org/apache/solr/core/TestBadConfig#setUp().mjava","commits":[{"id":"810d380561c984370e8bfcbf778486c08f7e2cc0","date":1171644169,"type":0,"author":"Erik Hatcher","isMerge":false,"pathNew":"src/test/org/apache/solr/core/TestBadConfig#setUp().mjava","pathOld":"/dev/null","sourceNew":"  public void setUp() throws Exception {\n\n    dataDir = new File(System.getProperty(\"java.io.tmpdir\")\n                       + System.getProperty(\"file.separator\")\n                       + getClass().getName() + \"-\" + getName() + \"-\"\n                       + System.currentTimeMillis());\n    dataDir.mkdirs();\n    try {\n      h = new TestHarness(dataDir.getAbsolutePath(),\n                          getSolrConfigFile(),\n                          getSchemaFile());\n      fail(\"Exception should have been thrown\");\n    } catch (Exception e) {\n      assertTrue(e.getMessage().contains(\"unset.sys.property\"));\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6d6338c87060be5f66757a94945975f3bbd377a9","date":1189278234,"type":3,"author":"Ryan McKinley","isMerge":false,"pathNew":"src/test/org/apache/solr/core/TestBadConfig#setUp().mjava","pathOld":"src/test/org/apache/solr/core/TestBadConfig#setUp().mjava","sourceNew":"  public void setUp() throws Exception {\r\n\r\n    dataDir = new File(System.getProperty(\"java.io.tmpdir\")\r\n                       + System.getProperty(\"file.separator\")\r\n                       + getClass().getName());\r\n    dataDir.mkdirs();\r\n    try {\r\n      solrConfig = new SolrConfig(getSolrConfigFile());\r\n      h = new TestHarness(getName() + \"-\" + System.currentTimeMillis(),\r\n                        dataDir.getAbsolutePath(),\r\n                        solrConfig,\r\n                          getSchemaFile());\r\n      fail(\"Exception should have been thrown\");\r\n    } catch (Exception e) {\r\n      assertTrue(e.getMessage().contains(\"unset.sys.property\"));\r\n    }\r\n  }\r\n\n","sourceOld":"  public void setUp() throws Exception {\n\n    dataDir = new File(System.getProperty(\"java.io.tmpdir\")\n                       + System.getProperty(\"file.separator\")\n                       + getClass().getName() + \"-\" + getName() + \"-\"\n                       + System.currentTimeMillis());\n    dataDir.mkdirs();\n    try {\n      h = new TestHarness(dataDir.getAbsolutePath(),\n                          getSolrConfigFile(),\n                          getSchemaFile());\n      fail(\"Exception should have been thrown\");\n    } catch (Exception e) {\n      assertTrue(e.getMessage().contains(\"unset.sys.property\"));\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8fe3c163c8df3fb3e4248c30f8ae8034cc786589","date":1189317596,"type":3,"author":"Ryan McKinley","isMerge":false,"pathNew":"src/test/org/apache/solr/core/TestBadConfig#setUp().mjava","pathOld":"src/test/org/apache/solr/core/TestBadConfig#setUp().mjava","sourceNew":"  public void setUp() throws Exception {\r\n\r\n    dataDir = new File(System.getProperty(\"java.io.tmpdir\")\r\n                       + System.getProperty(\"file.separator\")\r\n                       + getClass().getName());\r\n    dataDir.mkdirs();\r\n    try {\r\n      solrConfig = new SolrConfig(getSolrConfigFile());\r\n      h = new TestHarness( dataDir.getAbsolutePath(),\r\n                           solrConfig,\r\n                           getSchemaFile());\r\n      fail(\"Exception should have been thrown\");\r\n    } catch (Exception e) {\r\n      assertTrue(e.getMessage().contains(\"unset.sys.property\"));\r\n    }\r\n  }\r\n\n","sourceOld":"  public void setUp() throws Exception {\r\n\r\n    dataDir = new File(System.getProperty(\"java.io.tmpdir\")\r\n                       + System.getProperty(\"file.separator\")\r\n                       + getClass().getName());\r\n    dataDir.mkdirs();\r\n    try {\r\n      solrConfig = new SolrConfig(getSolrConfigFile());\r\n      h = new TestHarness(getName() + \"-\" + System.currentTimeMillis(),\r\n                        dataDir.getAbsolutePath(),\r\n                        solrConfig,\r\n                          getSchemaFile());\r\n      fail(\"Exception should have been thrown\");\r\n    } catch (Exception e) {\r\n      assertTrue(e.getMessage().contains(\"unset.sys.property\"));\r\n    }\r\n  }\r\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ad94625fb8d088209f46650c8097196fec67f00c","date":1453508319,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/src/test/org/apache/solr/core/TestBadConfig#setUp().mjava","pathOld":"src/test/org/apache/solr/core/TestBadConfig#setUp().mjava","sourceNew":"  public void setUp() throws Exception {\r\n\r\n    dataDir = new File(System.getProperty(\"java.io.tmpdir\")\r\n                       + System.getProperty(\"file.separator\")\r\n                       + getClass().getName());\r\n    dataDir.mkdirs();\r\n    try {\r\n      solrConfig = new SolrConfig(getSolrConfigFile());\r\n      h = new TestHarness( dataDir.getAbsolutePath(),\r\n                           solrConfig,\r\n                           getSchemaFile());\r\n      fail(\"Exception should have been thrown\");\r\n    } catch (Exception e) {\r\n      assertTrue(e.getMessage().contains(\"unset.sys.property\"));\r\n    }\r\n  }\r\n\n","sourceOld":"  public void setUp() throws Exception {\r\n\r\n    dataDir = new File(System.getProperty(\"java.io.tmpdir\")\r\n                       + System.getProperty(\"file.separator\")\r\n                       + getClass().getName());\r\n    dataDir.mkdirs();\r\n    try {\r\n      solrConfig = new SolrConfig(getSolrConfigFile());\r\n      h = new TestHarness( dataDir.getAbsolutePath(),\r\n                           solrConfig,\r\n                           getSchemaFile());\r\n      fail(\"Exception should have been thrown\");\r\n    } catch (Exception e) {\r\n      assertTrue(e.getMessage().contains(\"unset.sys.property\"));\r\n    }\r\n  }\r\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"6d6338c87060be5f66757a94945975f3bbd377a9":["810d380561c984370e8bfcbf778486c08f7e2cc0"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"8fe3c163c8df3fb3e4248c30f8ae8034cc786589":["6d6338c87060be5f66757a94945975f3bbd377a9"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"ad94625fb8d088209f46650c8097196fec67f00c":["8fe3c163c8df3fb3e4248c30f8ae8034cc786589"],"810d380561c984370e8bfcbf778486c08f7e2cc0":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"6d6338c87060be5f66757a94945975f3bbd377a9":["8fe3c163c8df3fb3e4248c30f8ae8034cc786589"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"8fe3c163c8df3fb3e4248c30f8ae8034cc786589":["ad94625fb8d088209f46650c8097196fec67f00c"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["810d380561c984370e8bfcbf778486c08f7e2cc0"],"ad94625fb8d088209f46650c8097196fec67f00c":[],"810d380561c984370e8bfcbf778486c08f7e2cc0":["6d6338c87060be5f66757a94945975f3bbd377a9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["ad94625fb8d088209f46650c8097196fec67f00c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"pathCommit":null}