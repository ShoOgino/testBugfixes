{"path":"lucene/analysis/common/src/test/org/apache/lucene/analysis/standard/TestClassicAnalyzer#testLucene1140().mjava","commits":[{"id":"c177b66783fe11c18553f8b57e8b745098cc7607","date":1412798789,"type":1,"author":"Ryan Ernst","isMerge":false,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/standard/TestClassicAnalyzer#testLucene1140().mjava","pathOld":"lucene/analysis/common/src/test/org/apache/lucene/analysis/core/TestClassicAnalyzer#testLucene1140().mjava","sourceNew":"  public void testLucene1140() throws Exception {\n    try {\n      ClassicAnalyzer analyzer = new ClassicAnalyzer();\n      assertAnalyzesTo(analyzer, \"www.nutch.org.\", new String[]{ \"www.nutch.org\" }, new String[] { \"<HOST>\" });\n    } catch (NullPointerException e) {\n      fail(\"Should not throw an NPE and it did\");\n    }\n\n  }\n\n","sourceOld":"  public void testLucene1140() throws Exception {\n    try {\n      ClassicAnalyzer analyzer = new ClassicAnalyzer();\n      assertAnalyzesTo(analyzer, \"www.nutch.org.\", new String[]{ \"www.nutch.org\" }, new String[] { \"<HOST>\" });\n    } catch (NullPointerException e) {\n      fail(\"Should not throw an NPE and it did\");\n    }\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"55980207f1977bd1463465de1659b821347e2fa8","date":1413336386,"type":1,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/standard/TestClassicAnalyzer#testLucene1140().mjava","pathOld":"lucene/analysis/common/src/test/org/apache/lucene/analysis/core/TestClassicAnalyzer#testLucene1140().mjava","sourceNew":"  public void testLucene1140() throws Exception {\n    try {\n      ClassicAnalyzer analyzer = new ClassicAnalyzer();\n      assertAnalyzesTo(analyzer, \"www.nutch.org.\", new String[]{ \"www.nutch.org\" }, new String[] { \"<HOST>\" });\n    } catch (NullPointerException e) {\n      fail(\"Should not throw an NPE and it did\");\n    }\n\n  }\n\n","sourceOld":"  public void testLucene1140() throws Exception {\n    try {\n      ClassicAnalyzer analyzer = new ClassicAnalyzer();\n      assertAnalyzesTo(analyzer, \"www.nutch.org.\", new String[]{ \"www.nutch.org\" }, new String[] { \"<HOST>\" });\n    } catch (NullPointerException e) {\n      fail(\"Should not throw an NPE and it did\");\n    }\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a56958d7f71a28824f20031ffbb2e13502a0274e","date":1425573902,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/standard/TestClassicAnalyzer#testLucene1140().mjava","pathOld":"lucene/analysis/common/src/test/org/apache/lucene/analysis/standard/TestClassicAnalyzer#testLucene1140().mjava","sourceNew":"  public void testLucene1140() throws Exception {\n    try {\n      ClassicAnalyzer analyzer = new ClassicAnalyzer();\n      assertAnalyzesTo(analyzer, \"www.nutch.org.\", new String[]{ \"www.nutch.org\" }, new String[] { \"<HOST>\" });\n      analyzer.close();\n    } catch (NullPointerException e) {\n      fail(\"Should not throw an NPE and it did\");\n    }\n\n  }\n\n","sourceOld":"  public void testLucene1140() throws Exception {\n    try {\n      ClassicAnalyzer analyzer = new ClassicAnalyzer();\n      assertAnalyzesTo(analyzer, \"www.nutch.org.\", new String[]{ \"www.nutch.org\" }, new String[] { \"<HOST>\" });\n    } catch (NullPointerException e) {\n      fail(\"Should not throw an NPE and it did\");\n    }\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","date":1427779360,"type":3,"author":"Ryan Ernst","isMerge":true,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/standard/TestClassicAnalyzer#testLucene1140().mjava","pathOld":"lucene/analysis/common/src/test/org/apache/lucene/analysis/standard/TestClassicAnalyzer#testLucene1140().mjava","sourceNew":"  public void testLucene1140() throws Exception {\n    try {\n      ClassicAnalyzer analyzer = new ClassicAnalyzer();\n      assertAnalyzesTo(analyzer, \"www.nutch.org.\", new String[]{ \"www.nutch.org\" }, new String[] { \"<HOST>\" });\n      analyzer.close();\n    } catch (NullPointerException e) {\n      fail(\"Should not throw an NPE and it did\");\n    }\n\n  }\n\n","sourceOld":"  public void testLucene1140() throws Exception {\n    try {\n      ClassicAnalyzer analyzer = new ClassicAnalyzer();\n      assertAnalyzesTo(analyzer, \"www.nutch.org.\", new String[]{ \"www.nutch.org\" }, new String[] { \"<HOST>\" });\n    } catch (NullPointerException e) {\n      fail(\"Should not throw an NPE and it did\");\n    }\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"313c36388b6cae6118f75a1860ad0ba0af7e1344","date":1601279368,"type":5,"author":"Tomoko Uchida","isMerge":false,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/classic/TestClassicAnalyzer#testLucene1140().mjava","pathOld":"lucene/analysis/common/src/test/org/apache/lucene/analysis/standard/TestClassicAnalyzer#testLucene1140().mjava","sourceNew":"  public void testLucene1140() throws Exception {\n    try {\n      ClassicAnalyzer analyzer = new ClassicAnalyzer();\n      assertAnalyzesTo(analyzer, \"www.nutch.org.\", new String[]{ \"www.nutch.org\" }, new String[] { \"<HOST>\" });\n      analyzer.close();\n    } catch (NullPointerException e) {\n      fail(\"Should not throw an NPE and it did\");\n    }\n\n  }\n\n","sourceOld":"  public void testLucene1140() throws Exception {\n    try {\n      ClassicAnalyzer analyzer = new ClassicAnalyzer();\n      assertAnalyzesTo(analyzer, \"www.nutch.org.\", new String[]{ \"www.nutch.org\" }, new String[] { \"<HOST>\" });\n      analyzer.close();\n    } catch (NullPointerException e) {\n      fail(\"Should not throw an NPE and it did\");\n    }\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":["c177b66783fe11c18553f8b57e8b745098cc7607","a56958d7f71a28824f20031ffbb2e13502a0274e"],"55980207f1977bd1463465de1659b821347e2fa8":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","c177b66783fe11c18553f8b57e8b745098cc7607"],"313c36388b6cae6118f75a1860ad0ba0af7e1344":["a56958d7f71a28824f20031ffbb2e13502a0274e"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"c177b66783fe11c18553f8b57e8b745098cc7607":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a56958d7f71a28824f20031ffbb2e13502a0274e":["c177b66783fe11c18553f8b57e8b745098cc7607"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["313c36388b6cae6118f75a1860ad0ba0af7e1344"]},"commit2Childs":{"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":[],"55980207f1977bd1463465de1659b821347e2fa8":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["55980207f1977bd1463465de1659b821347e2fa8","c177b66783fe11c18553f8b57e8b745098cc7607"],"313c36388b6cae6118f75a1860ad0ba0af7e1344":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"c177b66783fe11c18553f8b57e8b745098cc7607":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","55980207f1977bd1463465de1659b821347e2fa8","a56958d7f71a28824f20031ffbb2e13502a0274e"],"a56958d7f71a28824f20031ffbb2e13502a0274e":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","313c36388b6cae6118f75a1860ad0ba0af7e1344"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","55980207f1977bd1463465de1659b821347e2fa8","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}