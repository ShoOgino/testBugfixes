{"path":"solr/core/src/java/org/apache/solr/cloud/RecoveryStrategy#commitOnLeader(String).mjava","commits":[{"id":"c850a9faa7f2268d78aa6e8a611d281658781a99","date":1329403874,"type":0,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/RecoveryStrategy#commitOnLeader(String).mjava","pathOld":"/dev/null","sourceNew":"  private void commitOnLeader(String leaderUrl) throws MalformedURLException,\n      SolrServerException, IOException {\n    CommonsHttpSolrServer server = new CommonsHttpSolrServer(leaderUrl);\n    server.setConnectionTimeout(30000);\n    server.setSoTimeout(30000);\n    UpdateRequest ureq = new UpdateRequest();\n    ureq.setParams(new ModifiableSolrParams());\n    ureq.getParams().set(DistributedUpdateProcessor.COMMIT_END_POINT, true);\n    ureq.setAction(AbstractUpdateRequest.ACTION.COMMIT, false, true).process(\n        server);\n    server.commit();\n    server.shutdown();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["a8c06b72b38b9b1a65c413f18f8d9a596c4cc26d","4d3e8520fd031bab31fd0e4d480e55958bc45efe"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"7321b77a7bc3edfebd637ef273e9dfaa9969eba6","date":1333023097,"type":3,"author":"Sami Siren","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/RecoveryStrategy#commitOnLeader(String).mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/RecoveryStrategy#commitOnLeader(String).mjava","sourceNew":"  private void commitOnLeader(String leaderUrl) throws MalformedURLException,\n      SolrServerException, IOException {\n    HttpSolrServer server = new HttpSolrServer(leaderUrl);\n    server.setConnectionTimeout(30000);\n    server.setSoTimeout(30000);\n    UpdateRequest ureq = new UpdateRequest();\n    ureq.setParams(new ModifiableSolrParams());\n    ureq.getParams().set(DistributedUpdateProcessor.COMMIT_END_POINT, true);\n    ureq.setAction(AbstractUpdateRequest.ACTION.COMMIT, false, true).process(\n        server);\n    server.commit();\n    server.shutdown();\n  }\n\n","sourceOld":"  private void commitOnLeader(String leaderUrl) throws MalformedURLException,\n      SolrServerException, IOException {\n    CommonsHttpSolrServer server = new CommonsHttpSolrServer(leaderUrl);\n    server.setConnectionTimeout(30000);\n    server.setSoTimeout(30000);\n    UpdateRequest ureq = new UpdateRequest();\n    ureq.setParams(new ModifiableSolrParams());\n    ureq.getParams().set(DistributedUpdateProcessor.COMMIT_END_POINT, true);\n    ureq.setAction(AbstractUpdateRequest.ACTION.COMMIT, false, true).process(\n        server);\n    server.commit();\n    server.shutdown();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"a8c06b72b38b9b1a65c413f18f8d9a596c4cc26d","date":1336237145,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/RecoveryStrategy#commitOnLeader(String).mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/RecoveryStrategy#commitOnLeader(String).mjava","sourceNew":"  private void commitOnLeader(String leaderUrl) throws MalformedURLException,\n      SolrServerException, IOException {\n    HttpSolrServer server = new HttpSolrServer(leaderUrl);\n    server.setConnectionTimeout(30000);\n    server.setSoTimeout(30000);\n    UpdateRequest ureq = new UpdateRequest();\n    ureq.setParams(new ModifiableSolrParams());\n    ureq.getParams().set(DistributedUpdateProcessor.COMMIT_END_POINT, true);\n    ureq.setAction(AbstractUpdateRequest.ACTION.COMMIT, false, true).process(\n        server);\n    server.shutdown();\n  }\n\n","sourceOld":"  private void commitOnLeader(String leaderUrl) throws MalformedURLException,\n      SolrServerException, IOException {\n    HttpSolrServer server = new HttpSolrServer(leaderUrl);\n    server.setConnectionTimeout(30000);\n    server.setSoTimeout(30000);\n    UpdateRequest ureq = new UpdateRequest();\n    ureq.setParams(new ModifiableSolrParams());\n    ureq.getParams().set(DistributedUpdateProcessor.COMMIT_END_POINT, true);\n    ureq.setAction(AbstractUpdateRequest.ACTION.COMMIT, false, true).process(\n        server);\n    server.commit();\n    server.shutdown();\n  }\n\n","bugFix":["c850a9faa7f2268d78aa6e8a611d281658781a99"],"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"4d3e8520fd031bab31fd0e4d480e55958bc45efe","date":1340901565,"type":3,"author":"Steven Rowe","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/RecoveryStrategy#commitOnLeader(String).mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/RecoveryStrategy#commitOnLeader(String).mjava","sourceNew":"  private void commitOnLeader(String leaderUrl) throws SolrServerException, IOException {\n    HttpSolrServer server = new HttpSolrServer(leaderUrl);\n    server.setConnectionTimeout(30000);\n    server.setSoTimeout(30000);\n    UpdateRequest ureq = new UpdateRequest();\n    ureq.setParams(new ModifiableSolrParams());\n    ureq.getParams().set(DistributedUpdateProcessor.COMMIT_END_POINT, true);\n    ureq.setAction(AbstractUpdateRequest.ACTION.COMMIT, false, true).process(\n        server);\n    server.shutdown();\n  }\n\n","sourceOld":"  private void commitOnLeader(String leaderUrl) throws MalformedURLException,\n      SolrServerException, IOException {\n    HttpSolrServer server = new HttpSolrServer(leaderUrl);\n    server.setConnectionTimeout(30000);\n    server.setSoTimeout(30000);\n    UpdateRequest ureq = new UpdateRequest();\n    ureq.setParams(new ModifiableSolrParams());\n    ureq.getParams().set(DistributedUpdateProcessor.COMMIT_END_POINT, true);\n    ureq.setAction(AbstractUpdateRequest.ACTION.COMMIT, false, true).process(\n        server);\n    server.shutdown();\n  }\n\n","bugFix":["c850a9faa7f2268d78aa6e8a611d281658781a99"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fe33227f6805edab2036cbb80645cc4e2d1fa424","date":1342713534,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/cloud/RecoveryStrategy#commitOnLeader(String).mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/RecoveryStrategy#commitOnLeader(String).mjava","sourceNew":"  private void commitOnLeader(String leaderUrl) throws SolrServerException, IOException {\n    HttpSolrServer server = new HttpSolrServer(leaderUrl);\n    server.setConnectionTimeout(30000);\n    server.setSoTimeout(30000);\n    UpdateRequest ureq = new UpdateRequest();\n    ureq.setParams(new ModifiableSolrParams());\n    ureq.getParams().set(DistributedUpdateProcessor.COMMIT_END_POINT, true);\n    ureq.setAction(AbstractUpdateRequest.ACTION.COMMIT, false, true).process(\n        server);\n    server.shutdown();\n  }\n\n","sourceOld":"  private void commitOnLeader(String leaderUrl) throws MalformedURLException,\n      SolrServerException, IOException {\n    HttpSolrServer server = new HttpSolrServer(leaderUrl);\n    server.setConnectionTimeout(30000);\n    server.setSoTimeout(30000);\n    UpdateRequest ureq = new UpdateRequest();\n    ureq.setParams(new ModifiableSolrParams());\n    ureq.getParams().set(DistributedUpdateProcessor.COMMIT_END_POINT, true);\n    ureq.setAction(AbstractUpdateRequest.ACTION.COMMIT, false, true).process(\n        server);\n    server.shutdown();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e55739029feea28daf6e35b6dfc45a5775896a46","date":1350070273,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/RecoveryStrategy#commitOnLeader(String).mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/RecoveryStrategy#commitOnLeader(String).mjava","sourceNew":"  private void commitOnLeader(String leaderUrl) throws SolrServerException, IOException {\n    HttpSolrServer server = new HttpSolrServer(leaderUrl);\n    server.setConnectionTimeout(30000);\n    server.setSoTimeout(30000);\n    UpdateRequest ureq = new UpdateRequest();\n    ureq.setParams(new ModifiableSolrParams());\n    ureq.getParams().set(DistributedUpdateProcessor.COMMIT_END_POINT, true);\n    ureq.getParams().set(UpdateParams.OPEN_SEARCHER, false);\n    ureq.setAction(AbstractUpdateRequest.ACTION.COMMIT, false, true).process(\n        server);\n    server.shutdown();\n  }\n\n","sourceOld":"  private void commitOnLeader(String leaderUrl) throws SolrServerException, IOException {\n    HttpSolrServer server = new HttpSolrServer(leaderUrl);\n    server.setConnectionTimeout(30000);\n    server.setSoTimeout(30000);\n    UpdateRequest ureq = new UpdateRequest();\n    ureq.setParams(new ModifiableSolrParams());\n    ureq.getParams().set(DistributedUpdateProcessor.COMMIT_END_POINT, true);\n    ureq.setAction(AbstractUpdateRequest.ACTION.COMMIT, false, true).process(\n        server);\n    server.shutdown();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d82832af39f94dbb58a3130fd216ff1d49435589","date":1350147242,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/cloud/RecoveryStrategy#commitOnLeader(String).mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/RecoveryStrategy#commitOnLeader(String).mjava","sourceNew":"  private void commitOnLeader(String leaderUrl) throws SolrServerException, IOException {\n    HttpSolrServer server = new HttpSolrServer(leaderUrl);\n    server.setConnectionTimeout(30000);\n    server.setSoTimeout(30000);\n    UpdateRequest ureq = new UpdateRequest();\n    ureq.setParams(new ModifiableSolrParams());\n    ureq.getParams().set(DistributedUpdateProcessor.COMMIT_END_POINT, true);\n    ureq.getParams().set(UpdateParams.OPEN_SEARCHER, false);\n    ureq.setAction(AbstractUpdateRequest.ACTION.COMMIT, false, true).process(\n        server);\n    server.shutdown();\n  }\n\n","sourceOld":"  private void commitOnLeader(String leaderUrl) throws SolrServerException, IOException {\n    HttpSolrServer server = new HttpSolrServer(leaderUrl);\n    server.setConnectionTimeout(30000);\n    server.setSoTimeout(30000);\n    UpdateRequest ureq = new UpdateRequest();\n    ureq.setParams(new ModifiableSolrParams());\n    ureq.getParams().set(DistributedUpdateProcessor.COMMIT_END_POINT, true);\n    ureq.setAction(AbstractUpdateRequest.ACTION.COMMIT, false, true).process(\n        server);\n    server.shutdown();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"db4fdbf3d262768eabc027cd8321edca0cd11fa8","date":1350574784,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/cloud/RecoveryStrategy#commitOnLeader(String).mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/RecoveryStrategy#commitOnLeader(String).mjava","sourceNew":"  private void commitOnLeader(String leaderUrl) throws SolrServerException, IOException {\n    HttpSolrServer server = new HttpSolrServer(leaderUrl);\n    server.setConnectionTimeout(30000);\n    server.setSoTimeout(30000);\n    UpdateRequest ureq = new UpdateRequest();\n    ureq.setParams(new ModifiableSolrParams());\n    ureq.getParams().set(DistributedUpdateProcessor.COMMIT_END_POINT, true);\n    ureq.getParams().set(UpdateParams.OPEN_SEARCHER, false);\n    ureq.setAction(AbstractUpdateRequest.ACTION.COMMIT, false, true).process(\n        server);\n    server.shutdown();\n  }\n\n","sourceOld":"  private void commitOnLeader(String leaderUrl) throws SolrServerException, IOException {\n    HttpSolrServer server = new HttpSolrServer(leaderUrl);\n    server.setConnectionTimeout(30000);\n    server.setSoTimeout(30000);\n    UpdateRequest ureq = new UpdateRequest();\n    ureq.setParams(new ModifiableSolrParams());\n    ureq.getParams().set(DistributedUpdateProcessor.COMMIT_END_POINT, true);\n    ureq.setAction(AbstractUpdateRequest.ACTION.COMMIT, false, true).process(\n        server);\n    server.shutdown();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a69439d0df009e0bb0038d1e427159f449dd670d","date":1355704683,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/RecoveryStrategy#commitOnLeader(String).mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/RecoveryStrategy#commitOnLeader(String).mjava","sourceNew":"  private void commitOnLeader(String leaderUrl) throws SolrServerException, IOException {\n    HttpSolrServer server = new HttpSolrServer(leaderUrl);\n    server.setConnectionTimeout(30000);\n    server.setSoTimeout(60000);\n    UpdateRequest ureq = new UpdateRequest();\n    ureq.setParams(new ModifiableSolrParams());\n    ureq.getParams().set(DistributedUpdateProcessor.COMMIT_END_POINT, true);\n    ureq.getParams().set(UpdateParams.OPEN_SEARCHER, false);\n    ureq.setAction(AbstractUpdateRequest.ACTION.COMMIT, false, true).process(\n        server);\n    server.shutdown();\n  }\n\n","sourceOld":"  private void commitOnLeader(String leaderUrl) throws SolrServerException, IOException {\n    HttpSolrServer server = new HttpSolrServer(leaderUrl);\n    server.setConnectionTimeout(30000);\n    server.setSoTimeout(30000);\n    UpdateRequest ureq = new UpdateRequest();\n    ureq.setParams(new ModifiableSolrParams());\n    ureq.getParams().set(DistributedUpdateProcessor.COMMIT_END_POINT, true);\n    ureq.getParams().set(UpdateParams.OPEN_SEARCHER, false);\n    ureq.setAction(AbstractUpdateRequest.ACTION.COMMIT, false, true).process(\n        server);\n    server.shutdown();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d3fcb70cf561547c7bb1506e0cf32ca7b1287064","date":1357616416,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/cloud/RecoveryStrategy#commitOnLeader(String).mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/RecoveryStrategy#commitOnLeader(String).mjava","sourceNew":"  private void commitOnLeader(String leaderUrl) throws SolrServerException, IOException {\n    HttpSolrServer server = new HttpSolrServer(leaderUrl);\n    server.setConnectionTimeout(30000);\n    server.setSoTimeout(60000);\n    UpdateRequest ureq = new UpdateRequest();\n    ureq.setParams(new ModifiableSolrParams());\n    ureq.getParams().set(DistributedUpdateProcessor.COMMIT_END_POINT, true);\n    ureq.getParams().set(UpdateParams.OPEN_SEARCHER, false);\n    ureq.setAction(AbstractUpdateRequest.ACTION.COMMIT, false, true).process(\n        server);\n    server.shutdown();\n  }\n\n","sourceOld":"  private void commitOnLeader(String leaderUrl) throws SolrServerException, IOException {\n    HttpSolrServer server = new HttpSolrServer(leaderUrl);\n    server.setConnectionTimeout(30000);\n    server.setSoTimeout(30000);\n    UpdateRequest ureq = new UpdateRequest();\n    ureq.setParams(new ModifiableSolrParams());\n    ureq.getParams().set(DistributedUpdateProcessor.COMMIT_END_POINT, true);\n    ureq.getParams().set(UpdateParams.OPEN_SEARCHER, false);\n    ureq.setAction(AbstractUpdateRequest.ACTION.COMMIT, false, true).process(\n        server);\n    server.shutdown();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2d750082a4223c20902ef11ff6a9831d55738ea4","date":1382309916,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/RecoveryStrategy#commitOnLeader(String).mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/RecoveryStrategy#commitOnLeader(String).mjava","sourceNew":"  private void commitOnLeader(String leaderUrl) throws SolrServerException,\n      IOException {\n    HttpSolrServer server = new HttpSolrServer(leaderUrl);\n    try {\n      server.setConnectionTimeout(30000);\n      server.setSoTimeout(60000);\n      UpdateRequest ureq = new UpdateRequest();\n      ureq.setParams(new ModifiableSolrParams());\n      ureq.getParams().set(DistributedUpdateProcessor.COMMIT_END_POINT, true);\n      ureq.getParams().set(UpdateParams.OPEN_SEARCHER, false);\n      ureq.setAction(AbstractUpdateRequest.ACTION.COMMIT, false, true).process(\n          server);\n    } finally {\n      server.shutdown();\n    }\n  }\n\n","sourceOld":"  private void commitOnLeader(String leaderUrl) throws SolrServerException, IOException {\n    HttpSolrServer server = new HttpSolrServer(leaderUrl);\n    server.setConnectionTimeout(30000);\n    server.setSoTimeout(60000);\n    UpdateRequest ureq = new UpdateRequest();\n    ureq.setParams(new ModifiableSolrParams());\n    ureq.getParams().set(DistributedUpdateProcessor.COMMIT_END_POINT, true);\n    ureq.getParams().set(UpdateParams.OPEN_SEARCHER, false);\n    ureq.setAction(AbstractUpdateRequest.ACTION.COMMIT, false, true).process(\n        server);\n    server.shutdown();\n  }\n\n","bugFix":null,"bugIntro":["bb222a3f9d9421d5c95afce73013fbd8de07ea1f"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"e415cc960b0e7b8c945b0ed0004272b8435433ac","date":1384648739,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/RecoveryStrategy#commitOnLeader(String).mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/RecoveryStrategy#commitOnLeader(String).mjava","sourceNew":"  private void commitOnLeader(String leaderUrl) throws SolrServerException,\n      IOException {\n    HttpSolrServer server = new HttpSolrServer(leaderUrl);\n    try {\n      server.setConnectionTimeout(30000);\n      UpdateRequest ureq = new UpdateRequest();\n      ureq.setParams(new ModifiableSolrParams());\n      ureq.getParams().set(DistributedUpdateProcessor.COMMIT_END_POINT, true);\n      ureq.getParams().set(UpdateParams.OPEN_SEARCHER, false);\n      ureq.setAction(AbstractUpdateRequest.ACTION.COMMIT, false, true).process(\n          server);\n    } finally {\n      server.shutdown();\n    }\n  }\n\n","sourceOld":"  private void commitOnLeader(String leaderUrl) throws SolrServerException,\n      IOException {\n    HttpSolrServer server = new HttpSolrServer(leaderUrl);\n    try {\n      server.setConnectionTimeout(30000);\n      server.setSoTimeout(60000);\n      UpdateRequest ureq = new UpdateRequest();\n      ureq.setParams(new ModifiableSolrParams());\n      ureq.getParams().set(DistributedUpdateProcessor.COMMIT_END_POINT, true);\n      ureq.getParams().set(UpdateParams.OPEN_SEARCHER, false);\n      ureq.setAction(AbstractUpdateRequest.ACTION.COMMIT, false, true).process(\n          server);\n    } finally {\n      server.shutdown();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"74f45af4339b0daf7a95c820ab88c1aea74fbce0","date":1387475327,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/cloud/RecoveryStrategy#commitOnLeader(String).mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/RecoveryStrategy#commitOnLeader(String).mjava","sourceNew":"  private void commitOnLeader(String leaderUrl) throws SolrServerException,\n      IOException {\n    HttpSolrServer server = new HttpSolrServer(leaderUrl);\n    try {\n      server.setConnectionTimeout(30000);\n      UpdateRequest ureq = new UpdateRequest();\n      ureq.setParams(new ModifiableSolrParams());\n      ureq.getParams().set(DistributedUpdateProcessor.COMMIT_END_POINT, true);\n      ureq.getParams().set(UpdateParams.OPEN_SEARCHER, false);\n      ureq.setAction(AbstractUpdateRequest.ACTION.COMMIT, false, true).process(\n          server);\n    } finally {\n      server.shutdown();\n    }\n  }\n\n","sourceOld":"  private void commitOnLeader(String leaderUrl) throws SolrServerException,\n      IOException {\n    HttpSolrServer server = new HttpSolrServer(leaderUrl);\n    try {\n      server.setConnectionTimeout(30000);\n      server.setSoTimeout(60000);\n      UpdateRequest ureq = new UpdateRequest();\n      ureq.setParams(new ModifiableSolrParams());\n      ureq.getParams().set(DistributedUpdateProcessor.COMMIT_END_POINT, true);\n      ureq.getParams().set(UpdateParams.OPEN_SEARCHER, false);\n      ureq.setAction(AbstractUpdateRequest.ACTION.COMMIT, false, true).process(\n          server);\n    } finally {\n      server.shutdown();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bafca15d8e408346a67f4282ad1143b88023893b","date":1420034748,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/RecoveryStrategy#commitOnLeader(String).mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/RecoveryStrategy#commitOnLeader(String).mjava","sourceNew":"  private void commitOnLeader(String leaderUrl) throws SolrServerException,\n      IOException {\n    HttpSolrClient server = new HttpSolrClient(leaderUrl);\n    try {\n      server.setConnectionTimeout(30000);\n      UpdateRequest ureq = new UpdateRequest();\n      ureq.setParams(new ModifiableSolrParams());\n      ureq.getParams().set(DistributedUpdateProcessor.COMMIT_END_POINT, true);\n      ureq.getParams().set(UpdateParams.OPEN_SEARCHER, false);\n      ureq.setAction(AbstractUpdateRequest.ACTION.COMMIT, false, true).process(\n          server);\n    } finally {\n      server.shutdown();\n    }\n  }\n\n","sourceOld":"  private void commitOnLeader(String leaderUrl) throws SolrServerException,\n      IOException {\n    HttpSolrServer server = new HttpSolrServer(leaderUrl);\n    try {\n      server.setConnectionTimeout(30000);\n      UpdateRequest ureq = new UpdateRequest();\n      ureq.setParams(new ModifiableSolrParams());\n      ureq.getParams().set(DistributedUpdateProcessor.COMMIT_END_POINT, true);\n      ureq.getParams().set(UpdateParams.OPEN_SEARCHER, false);\n      ureq.setAction(AbstractUpdateRequest.ACTION.COMMIT, false, true).process(\n          server);\n    } finally {\n      server.shutdown();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"cc3b13b430571c2e169f98fe38e1e7666f88522d","date":1422446157,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/RecoveryStrategy#commitOnLeader(String).mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/RecoveryStrategy#commitOnLeader(String).mjava","sourceNew":"  private void commitOnLeader(String leaderUrl) throws SolrServerException,\n      IOException {\n    try (HttpSolrClient client = new HttpSolrClient(leaderUrl)) {\n      client.setConnectionTimeout(30000);\n      UpdateRequest ureq = new UpdateRequest();\n      ureq.setParams(new ModifiableSolrParams());\n      ureq.getParams().set(DistributedUpdateProcessor.COMMIT_END_POINT, true);\n      ureq.getParams().set(UpdateParams.OPEN_SEARCHER, false);\n      ureq.setAction(AbstractUpdateRequest.ACTION.COMMIT, false, true).process(\n          client);\n    }\n  }\n\n","sourceOld":"  private void commitOnLeader(String leaderUrl) throws SolrServerException,\n      IOException {\n    HttpSolrClient server = new HttpSolrClient(leaderUrl);\n    try {\n      server.setConnectionTimeout(30000);\n      UpdateRequest ureq = new UpdateRequest();\n      ureq.setParams(new ModifiableSolrParams());\n      ureq.getParams().set(DistributedUpdateProcessor.COMMIT_END_POINT, true);\n      ureq.getParams().set(UpdateParams.OPEN_SEARCHER, false);\n      ureq.setAction(AbstractUpdateRequest.ACTION.COMMIT, false, true).process(\n          server);\n    } finally {\n      server.shutdown();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"e3c94a8b8bf47db4f968d9ae510ec8bbe1372088","date":1460069869,"type":3,"author":"Anshum Gupta","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/RecoveryStrategy#commitOnLeader(String).mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/RecoveryStrategy#commitOnLeader(String).mjava","sourceNew":"  private void commitOnLeader(String leaderUrl) throws SolrServerException,\n      IOException {\n    try (HttpSolrClient client = new HttpSolrClient.Builder(leaderUrl).build()) {\n      client.setConnectionTimeout(30000);\n      UpdateRequest ureq = new UpdateRequest();\n      ureq.setParams(new ModifiableSolrParams());\n      ureq.getParams().set(DistributedUpdateProcessor.COMMIT_END_POINT, true);\n      ureq.getParams().set(UpdateParams.OPEN_SEARCHER, false);\n      ureq.setAction(AbstractUpdateRequest.ACTION.COMMIT, false, true).process(\n          client);\n    }\n  }\n\n","sourceOld":"  private void commitOnLeader(String leaderUrl) throws SolrServerException,\n      IOException {\n    try (HttpSolrClient client = new HttpSolrClient(leaderUrl)) {\n      client.setConnectionTimeout(30000);\n      UpdateRequest ureq = new UpdateRequest();\n      ureq.setParams(new ModifiableSolrParams());\n      ureq.getParams().set(DistributedUpdateProcessor.COMMIT_END_POINT, true);\n      ureq.getParams().set(UpdateParams.OPEN_SEARCHER, false);\n      ureq.setAction(AbstractUpdateRequest.ACTION.COMMIT, false, true).process(\n          client);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"5bdaf2cee03ff78b0a0cbf23df0095a3590b493b","date":1460110033,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/cloud/RecoveryStrategy#commitOnLeader(String).mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/RecoveryStrategy#commitOnLeader(String).mjava","sourceNew":"  private void commitOnLeader(String leaderUrl) throws SolrServerException,\n      IOException {\n    try (HttpSolrClient client = new HttpSolrClient.Builder(leaderUrl).build()) {\n      client.setConnectionTimeout(30000);\n      UpdateRequest ureq = new UpdateRequest();\n      ureq.setParams(new ModifiableSolrParams());\n      ureq.getParams().set(DistributedUpdateProcessor.COMMIT_END_POINT, true);\n      ureq.getParams().set(UpdateParams.OPEN_SEARCHER, false);\n      ureq.setAction(AbstractUpdateRequest.ACTION.COMMIT, false, true).process(\n          client);\n    }\n  }\n\n","sourceOld":"  private void commitOnLeader(String leaderUrl) throws SolrServerException,\n      IOException {\n    try (HttpSolrClient client = new HttpSolrClient(leaderUrl)) {\n      client.setConnectionTimeout(30000);\n      UpdateRequest ureq = new UpdateRequest();\n      ureq.setParams(new ModifiableSolrParams());\n      ureq.getParams().set(DistributedUpdateProcessor.COMMIT_END_POINT, true);\n      ureq.getParams().set(UpdateParams.OPEN_SEARCHER, false);\n      ureq.setAction(AbstractUpdateRequest.ACTION.COMMIT, false, true).process(\n          client);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"7392b75d2c2f2aecf31188732a0764fe0dc74ade","date":1489420141,"type":3,"author":"Christine Poerschke","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/RecoveryStrategy#commitOnLeader(String).mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/RecoveryStrategy#commitOnLeader(String).mjava","sourceNew":"  final private void commitOnLeader(String leaderUrl) throws SolrServerException,\n      IOException {\n    try (HttpSolrClient client = new HttpSolrClient.Builder(leaderUrl).build()) {\n      client.setConnectionTimeout(30000);\n      UpdateRequest ureq = new UpdateRequest();\n      ureq.setParams(new ModifiableSolrParams());\n      ureq.getParams().set(DistributedUpdateProcessor.COMMIT_END_POINT, true);\n      ureq.getParams().set(UpdateParams.OPEN_SEARCHER, false);\n      ureq.setAction(AbstractUpdateRequest.ACTION.COMMIT, false, true).process(\n          client);\n    }\n  }\n\n","sourceOld":"  private void commitOnLeader(String leaderUrl) throws SolrServerException,\n      IOException {\n    try (HttpSolrClient client = new HttpSolrClient.Builder(leaderUrl).build()) {\n      client.setConnectionTimeout(30000);\n      UpdateRequest ureq = new UpdateRequest();\n      ureq.setParams(new ModifiableSolrParams());\n      ureq.getParams().set(DistributedUpdateProcessor.COMMIT_END_POINT, true);\n      ureq.getParams().set(UpdateParams.OPEN_SEARCHER, false);\n      ureq.setAction(AbstractUpdateRequest.ACTION.COMMIT, false, true).process(\n          client);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"be320990bdc77e643388fa801e75017f19289c42","date":1489477067,"type":3,"author":"Cao Manh Dat","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/RecoveryStrategy#commitOnLeader(String).mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/RecoveryStrategy#commitOnLeader(String).mjava","sourceNew":"  final private void commitOnLeader(String leaderUrl) throws SolrServerException,\n      IOException {\n    try (HttpSolrClient client = new HttpSolrClient.Builder(leaderUrl).build()) {\n      client.setConnectionTimeout(30000);\n      UpdateRequest ureq = new UpdateRequest();\n      ureq.setParams(new ModifiableSolrParams());\n      ureq.getParams().set(DistributedUpdateProcessor.COMMIT_END_POINT, true);\n      ureq.getParams().set(UpdateParams.OPEN_SEARCHER, onlyLeaderIndexes);\n      ureq.setAction(AbstractUpdateRequest.ACTION.COMMIT, false, true).process(\n          client);\n    }\n  }\n\n","sourceOld":"  final private void commitOnLeader(String leaderUrl) throws SolrServerException,\n      IOException {\n    try (HttpSolrClient client = new HttpSolrClient.Builder(leaderUrl).build()) {\n      client.setConnectionTimeout(30000);\n      UpdateRequest ureq = new UpdateRequest();\n      ureq.setParams(new ModifiableSolrParams());\n      ureq.getParams().set(DistributedUpdateProcessor.COMMIT_END_POINT, true);\n      ureq.getParams().set(UpdateParams.OPEN_SEARCHER, false);\n      ureq.setAction(AbstractUpdateRequest.ACTION.COMMIT, false, true).process(\n          client);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"f996f8177b9204bdc92f7164460c6cefad9ac99a","date":1489482690,"type":3,"author":"Cao Manh Dat","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/RecoveryStrategy#commitOnLeader(String).mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/RecoveryStrategy#commitOnLeader(String).mjava","sourceNew":"  final private void commitOnLeader(String leaderUrl) throws SolrServerException,\n      IOException {\n    try (HttpSolrClient client = new HttpSolrClient.Builder(leaderUrl).build()) {\n      client.setConnectionTimeout(30000);\n      UpdateRequest ureq = new UpdateRequest();\n      ureq.setParams(new ModifiableSolrParams());\n      ureq.getParams().set(DistributedUpdateProcessor.COMMIT_END_POINT, true);\n      ureq.getParams().set(UpdateParams.OPEN_SEARCHER, onlyLeaderIndexes);\n      ureq.setAction(AbstractUpdateRequest.ACTION.COMMIT, false, true).process(\n          client);\n    }\n  }\n\n","sourceOld":"  final private void commitOnLeader(String leaderUrl) throws SolrServerException,\n      IOException {\n    try (HttpSolrClient client = new HttpSolrClient.Builder(leaderUrl).build()) {\n      client.setConnectionTimeout(30000);\n      UpdateRequest ureq = new UpdateRequest();\n      ureq.setParams(new ModifiableSolrParams());\n      ureq.getParams().set(DistributedUpdateProcessor.COMMIT_END_POINT, true);\n      ureq.getParams().set(UpdateParams.OPEN_SEARCHER, false);\n      ureq.setAction(AbstractUpdateRequest.ACTION.COMMIT, false, true).process(\n          client);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ab68488225b6a6c357dda72ed11dedca9914a192","date":1490013111,"type":3,"author":"Noble Paul","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/cloud/RecoveryStrategy#commitOnLeader(String).mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/RecoveryStrategy#commitOnLeader(String).mjava","sourceNew":"  final private void commitOnLeader(String leaderUrl) throws SolrServerException,\n      IOException {\n    try (HttpSolrClient client = new HttpSolrClient.Builder(leaderUrl).build()) {\n      client.setConnectionTimeout(30000);\n      UpdateRequest ureq = new UpdateRequest();\n      ureq.setParams(new ModifiableSolrParams());\n      ureq.getParams().set(DistributedUpdateProcessor.COMMIT_END_POINT, true);\n      ureq.getParams().set(UpdateParams.OPEN_SEARCHER, onlyLeaderIndexes);\n      ureq.setAction(AbstractUpdateRequest.ACTION.COMMIT, false, true).process(\n          client);\n    }\n  }\n\n","sourceOld":"  final private void commitOnLeader(String leaderUrl) throws SolrServerException,\n      IOException {\n    try (HttpSolrClient client = new HttpSolrClient.Builder(leaderUrl).build()) {\n      client.setConnectionTimeout(30000);\n      UpdateRequest ureq = new UpdateRequest();\n      ureq.setParams(new ModifiableSolrParams());\n      ureq.getParams().set(DistributedUpdateProcessor.COMMIT_END_POINT, true);\n      ureq.getParams().set(UpdateParams.OPEN_SEARCHER, false);\n      ureq.setAction(AbstractUpdateRequest.ACTION.COMMIT, false, true).process(\n          client);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"61c45e99cf6676da48f19d7511c73712ad39402b","date":1495508331,"type":3,"author":"Tomas Fernandez Lobbe","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/RecoveryStrategy#commitOnLeader(String).mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/RecoveryStrategy#commitOnLeader(String).mjava","sourceNew":"  final private void commitOnLeader(String leaderUrl) throws SolrServerException,\n      IOException {\n    try (HttpSolrClient client = new HttpSolrClient.Builder(leaderUrl).build()) {\n      client.setConnectionTimeout(30000);\n      UpdateRequest ureq = new UpdateRequest();\n      ureq.setParams(new ModifiableSolrParams());\n      ureq.getParams().set(DistributedUpdateProcessor.COMMIT_END_POINT, true);\n//      ureq.getParams().set(UpdateParams.OPEN_SEARCHER, onlyLeaderIndexes);// Why do we need to open searcher if \"onlyLeaderIndexes\"?\n      ureq.getParams().set(UpdateParams.OPEN_SEARCHER, false);\n      ureq.setAction(AbstractUpdateRequest.ACTION.COMMIT, false, true).process(\n          client);\n    }\n  }\n\n","sourceOld":"  final private void commitOnLeader(String leaderUrl) throws SolrServerException,\n      IOException {\n    try (HttpSolrClient client = new HttpSolrClient.Builder(leaderUrl).build()) {\n      client.setConnectionTimeout(30000);\n      UpdateRequest ureq = new UpdateRequest();\n      ureq.setParams(new ModifiableSolrParams());\n      ureq.getParams().set(DistributedUpdateProcessor.COMMIT_END_POINT, true);\n      ureq.getParams().set(UpdateParams.OPEN_SEARCHER, onlyLeaderIndexes);\n      ureq.setAction(AbstractUpdateRequest.ACTION.COMMIT, false, true).process(\n          client);\n    }\n  }\n\n","bugFix":null,"bugIntro":["bb222a3f9d9421d5c95afce73013fbd8de07ea1f"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"e9017cf144952056066919f1ebc7897ff9bd71b1","date":1496757600,"type":3,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/cloud/RecoveryStrategy#commitOnLeader(String).mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/RecoveryStrategy#commitOnLeader(String).mjava","sourceNew":"  final private void commitOnLeader(String leaderUrl) throws SolrServerException,\n      IOException {\n    try (HttpSolrClient client = new HttpSolrClient.Builder(leaderUrl).build()) {\n      client.setConnectionTimeout(30000);\n      UpdateRequest ureq = new UpdateRequest();\n      ureq.setParams(new ModifiableSolrParams());\n      ureq.getParams().set(DistributedUpdateProcessor.COMMIT_END_POINT, true);\n//      ureq.getParams().set(UpdateParams.OPEN_SEARCHER, onlyLeaderIndexes);// Why do we need to open searcher if \"onlyLeaderIndexes\"?\n      ureq.getParams().set(UpdateParams.OPEN_SEARCHER, false);\n      ureq.setAction(AbstractUpdateRequest.ACTION.COMMIT, false, true).process(\n          client);\n    }\n  }\n\n","sourceOld":"  final private void commitOnLeader(String leaderUrl) throws SolrServerException,\n      IOException {\n    try (HttpSolrClient client = new HttpSolrClient.Builder(leaderUrl).build()) {\n      client.setConnectionTimeout(30000);\n      UpdateRequest ureq = new UpdateRequest();\n      ureq.setParams(new ModifiableSolrParams());\n      ureq.getParams().set(DistributedUpdateProcessor.COMMIT_END_POINT, true);\n      ureq.getParams().set(UpdateParams.OPEN_SEARCHER, onlyLeaderIndexes);\n      ureq.setAction(AbstractUpdateRequest.ACTION.COMMIT, false, true).process(\n          client);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"43d1e498704edd2bba13548a189eed4dfccff11b","date":1499143458,"type":3,"author":"Anshum Gupta","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/RecoveryStrategy#commitOnLeader(String).mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/RecoveryStrategy#commitOnLeader(String).mjava","sourceNew":"  final private void commitOnLeader(String leaderUrl) throws SolrServerException,\n      IOException {\n    try (HttpSolrClient client = new HttpSolrClient.Builder(leaderUrl)\n        .withConnectionTimeout(30000)\n        .build()) {\n      UpdateRequest ureq = new UpdateRequest();\n      ureq.setParams(new ModifiableSolrParams());\n      ureq.getParams().set(DistributedUpdateProcessor.COMMIT_END_POINT, true);\n//      ureq.getParams().set(UpdateParams.OPEN_SEARCHER, onlyLeaderIndexes);// Why do we need to open searcher if \"onlyLeaderIndexes\"?\n      ureq.getParams().set(UpdateParams.OPEN_SEARCHER, false);\n      ureq.setAction(AbstractUpdateRequest.ACTION.COMMIT, false, true).process(\n          client);\n    }\n  }\n\n","sourceOld":"  final private void commitOnLeader(String leaderUrl) throws SolrServerException,\n      IOException {\n    try (HttpSolrClient client = new HttpSolrClient.Builder(leaderUrl).build()) {\n      client.setConnectionTimeout(30000);\n      UpdateRequest ureq = new UpdateRequest();\n      ureq.setParams(new ModifiableSolrParams());\n      ureq.getParams().set(DistributedUpdateProcessor.COMMIT_END_POINT, true);\n//      ureq.getParams().set(UpdateParams.OPEN_SEARCHER, onlyLeaderIndexes);// Why do we need to open searcher if \"onlyLeaderIndexes\"?\n      ureq.getParams().set(UpdateParams.OPEN_SEARCHER, false);\n      ureq.setAction(AbstractUpdateRequest.ACTION.COMMIT, false, true).process(\n          client);\n    }\n  }\n\n","bugFix":null,"bugIntro":["9b62c5fc89bd60031bc1f51ff1f8a21c5b0bf791"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"2ea161f828a3a7a6eb9410a431aecda6d7ab1065","date":1499213384,"type":3,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/cloud/RecoveryStrategy#commitOnLeader(String).mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/RecoveryStrategy#commitOnLeader(String).mjava","sourceNew":"  final private void commitOnLeader(String leaderUrl) throws SolrServerException,\n      IOException {\n    try (HttpSolrClient client = new HttpSolrClient.Builder(leaderUrl)\n        .withConnectionTimeout(30000)\n        .build()) {\n      UpdateRequest ureq = new UpdateRequest();\n      ureq.setParams(new ModifiableSolrParams());\n      ureq.getParams().set(DistributedUpdateProcessor.COMMIT_END_POINT, true);\n//      ureq.getParams().set(UpdateParams.OPEN_SEARCHER, onlyLeaderIndexes);// Why do we need to open searcher if \"onlyLeaderIndexes\"?\n      ureq.getParams().set(UpdateParams.OPEN_SEARCHER, false);\n      ureq.setAction(AbstractUpdateRequest.ACTION.COMMIT, false, true).process(\n          client);\n    }\n  }\n\n","sourceOld":"  final private void commitOnLeader(String leaderUrl) throws SolrServerException,\n      IOException {\n    try (HttpSolrClient client = new HttpSolrClient.Builder(leaderUrl).build()) {\n      client.setConnectionTimeout(30000);\n      UpdateRequest ureq = new UpdateRequest();\n      ureq.setParams(new ModifiableSolrParams());\n      ureq.getParams().set(DistributedUpdateProcessor.COMMIT_END_POINT, true);\n//      ureq.getParams().set(UpdateParams.OPEN_SEARCHER, onlyLeaderIndexes);// Why do we need to open searcher if \"onlyLeaderIndexes\"?\n      ureq.getParams().set(UpdateParams.OPEN_SEARCHER, false);\n      ureq.setAction(AbstractUpdateRequest.ACTION.COMMIT, false, true).process(\n          client);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bb222a3f9d9421d5c95afce73013fbd8de07ea1f","date":1543514331,"type":3,"author":"markrmiller","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/RecoveryStrategy#commitOnLeader(String).mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/RecoveryStrategy#commitOnLeader(String).mjava","sourceNew":"  final private void commitOnLeader(String leaderUrl) throws SolrServerException,\n      IOException {\n    try (HttpSolrClient client = new HttpSolrClient.Builder(leaderUrl)\n        .withConnectionTimeout(30000)\n        .withHttpClient(cc.getUpdateShardHandler().getRecoveryOnlyHttpClient())\n        .build()) {\n      UpdateRequest ureq = new UpdateRequest();\n      ureq.setParams(new ModifiableSolrParams());\n      // ureq.getParams().set(DistributedUpdateProcessor.COMMIT_END_POINT, true);\n      // ureq.getParams().set(UpdateParams.OPEN_SEARCHER, onlyLeaderIndexes);// Why do we need to open searcher if\n      // \"onlyLeaderIndexes\"?\n      ureq.getParams().set(UpdateParams.OPEN_SEARCHER, false);\n      ureq.setAction(AbstractUpdateRequest.ACTION.COMMIT, false, true).process(\n          client);\n    }\n  }\n\n","sourceOld":"  final private void commitOnLeader(String leaderUrl) throws SolrServerException,\n      IOException {\n    try (HttpSolrClient client = new HttpSolrClient.Builder(leaderUrl)\n        .withConnectionTimeout(30000)\n        .build()) {\n      UpdateRequest ureq = new UpdateRequest();\n      ureq.setParams(new ModifiableSolrParams());\n      ureq.getParams().set(DistributedUpdateProcessor.COMMIT_END_POINT, true);\n//      ureq.getParams().set(UpdateParams.OPEN_SEARCHER, onlyLeaderIndexes);// Why do we need to open searcher if \"onlyLeaderIndexes\"?\n      ureq.getParams().set(UpdateParams.OPEN_SEARCHER, false);\n      ureq.setAction(AbstractUpdateRequest.ACTION.COMMIT, false, true).process(\n          client);\n    }\n  }\n\n","bugFix":["2d750082a4223c20902ef11ff6a9831d55738ea4","61c45e99cf6676da48f19d7511c73712ad39402b"],"bugIntro":["9b62c5fc89bd60031bc1f51ff1f8a21c5b0bf791"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"9b62c5fc89bd60031bc1f51ff1f8a21c5b0bf791","date":1562879086,"type":3,"author":"Chris Hostetter","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/RecoveryStrategy#commitOnLeader(String).mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/RecoveryStrategy#commitOnLeader(String).mjava","sourceNew":"  final private void commitOnLeader(String leaderUrl) throws SolrServerException,\n      IOException {\n    try (HttpSolrClient client = buildRecoverySolrClient(leaderUrl)) {\n      UpdateRequest ureq = new UpdateRequest();\n      ureq.setParams(new ModifiableSolrParams());\n      // ureq.getParams().set(DistributedUpdateProcessor.COMMIT_END_POINT, true);\n      // ureq.getParams().set(UpdateParams.OPEN_SEARCHER, onlyLeaderIndexes);// Why do we need to open searcher if\n      // \"onlyLeaderIndexes\"?\n      ureq.getParams().set(UpdateParams.OPEN_SEARCHER, false);\n      ureq.setAction(AbstractUpdateRequest.ACTION.COMMIT, false, true).process(\n          client);\n    }\n  }\n\n","sourceOld":"  final private void commitOnLeader(String leaderUrl) throws SolrServerException,\n      IOException {\n    try (HttpSolrClient client = new HttpSolrClient.Builder(leaderUrl)\n        .withConnectionTimeout(30000)\n        .withHttpClient(cc.getUpdateShardHandler().getRecoveryOnlyHttpClient())\n        .build()) {\n      UpdateRequest ureq = new UpdateRequest();\n      ureq.setParams(new ModifiableSolrParams());\n      // ureq.getParams().set(DistributedUpdateProcessor.COMMIT_END_POINT, true);\n      // ureq.getParams().set(UpdateParams.OPEN_SEARCHER, onlyLeaderIndexes);// Why do we need to open searcher if\n      // \"onlyLeaderIndexes\"?\n      ureq.getParams().set(UpdateParams.OPEN_SEARCHER, false);\n      ureq.setAction(AbstractUpdateRequest.ACTION.COMMIT, false, true).process(\n          client);\n    }\n  }\n\n","bugFix":["bb222a3f9d9421d5c95afce73013fbd8de07ea1f","43d1e498704edd2bba13548a189eed4dfccff11b"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"d3fcb70cf561547c7bb1506e0cf32ca7b1287064":["e55739029feea28daf6e35b6dfc45a5775896a46","a69439d0df009e0bb0038d1e427159f449dd670d"],"bb222a3f9d9421d5c95afce73013fbd8de07ea1f":["43d1e498704edd2bba13548a189eed4dfccff11b"],"e3c94a8b8bf47db4f968d9ae510ec8bbe1372088":["cc3b13b430571c2e169f98fe38e1e7666f88522d"],"a69439d0df009e0bb0038d1e427159f449dd670d":["e55739029feea28daf6e35b6dfc45a5775896a46"],"bafca15d8e408346a67f4282ad1143b88023893b":["e415cc960b0e7b8c945b0ed0004272b8435433ac"],"43d1e498704edd2bba13548a189eed4dfccff11b":["61c45e99cf6676da48f19d7511c73712ad39402b"],"e9017cf144952056066919f1ebc7897ff9bd71b1":["ab68488225b6a6c357dda72ed11dedca9914a192","61c45e99cf6676da48f19d7511c73712ad39402b"],"2ea161f828a3a7a6eb9410a431aecda6d7ab1065":["e9017cf144952056066919f1ebc7897ff9bd71b1","43d1e498704edd2bba13548a189eed4dfccff11b"],"d82832af39f94dbb58a3130fd216ff1d49435589":["4d3e8520fd031bab31fd0e4d480e55958bc45efe","e55739029feea28daf6e35b6dfc45a5775896a46"],"9b62c5fc89bd60031bc1f51ff1f8a21c5b0bf791":["bb222a3f9d9421d5c95afce73013fbd8de07ea1f"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cc3b13b430571c2e169f98fe38e1e7666f88522d":["bafca15d8e408346a67f4282ad1143b88023893b"],"e415cc960b0e7b8c945b0ed0004272b8435433ac":["2d750082a4223c20902ef11ff6a9831d55738ea4"],"4d3e8520fd031bab31fd0e4d480e55958bc45efe":["a8c06b72b38b9b1a65c413f18f8d9a596c4cc26d"],"be320990bdc77e643388fa801e75017f19289c42":["7392b75d2c2f2aecf31188732a0764fe0dc74ade"],"ab68488225b6a6c357dda72ed11dedca9914a192":["7392b75d2c2f2aecf31188732a0764fe0dc74ade","f996f8177b9204bdc92f7164460c6cefad9ac99a"],"61c45e99cf6676da48f19d7511c73712ad39402b":["be320990bdc77e643388fa801e75017f19289c42"],"7321b77a7bc3edfebd637ef273e9dfaa9969eba6":["c850a9faa7f2268d78aa6e8a611d281658781a99"],"c850a9faa7f2268d78aa6e8a611d281658781a99":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"db4fdbf3d262768eabc027cd8321edca0cd11fa8":["4d3e8520fd031bab31fd0e4d480e55958bc45efe","e55739029feea28daf6e35b6dfc45a5775896a46"],"f996f8177b9204bdc92f7164460c6cefad9ac99a":["7392b75d2c2f2aecf31188732a0764fe0dc74ade"],"a8c06b72b38b9b1a65c413f18f8d9a596c4cc26d":["7321b77a7bc3edfebd637ef273e9dfaa9969eba6"],"fe33227f6805edab2036cbb80645cc4e2d1fa424":["a8c06b72b38b9b1a65c413f18f8d9a596c4cc26d","4d3e8520fd031bab31fd0e4d480e55958bc45efe"],"2d750082a4223c20902ef11ff6a9831d55738ea4":["a69439d0df009e0bb0038d1e427159f449dd670d"],"5bdaf2cee03ff78b0a0cbf23df0095a3590b493b":["cc3b13b430571c2e169f98fe38e1e7666f88522d","e3c94a8b8bf47db4f968d9ae510ec8bbe1372088"],"74f45af4339b0daf7a95c820ab88c1aea74fbce0":["2d750082a4223c20902ef11ff6a9831d55738ea4","e415cc960b0e7b8c945b0ed0004272b8435433ac"],"7392b75d2c2f2aecf31188732a0764fe0dc74ade":["5bdaf2cee03ff78b0a0cbf23df0095a3590b493b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9b62c5fc89bd60031bc1f51ff1f8a21c5b0bf791"],"e55739029feea28daf6e35b6dfc45a5775896a46":["4d3e8520fd031bab31fd0e4d480e55958bc45efe"]},"commit2Childs":{"d3fcb70cf561547c7bb1506e0cf32ca7b1287064":[],"bb222a3f9d9421d5c95afce73013fbd8de07ea1f":["9b62c5fc89bd60031bc1f51ff1f8a21c5b0bf791"],"e3c94a8b8bf47db4f968d9ae510ec8bbe1372088":["5bdaf2cee03ff78b0a0cbf23df0095a3590b493b"],"a69439d0df009e0bb0038d1e427159f449dd670d":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","2d750082a4223c20902ef11ff6a9831d55738ea4"],"bafca15d8e408346a67f4282ad1143b88023893b":["cc3b13b430571c2e169f98fe38e1e7666f88522d"],"43d1e498704edd2bba13548a189eed4dfccff11b":["bb222a3f9d9421d5c95afce73013fbd8de07ea1f","2ea161f828a3a7a6eb9410a431aecda6d7ab1065"],"e9017cf144952056066919f1ebc7897ff9bd71b1":["2ea161f828a3a7a6eb9410a431aecda6d7ab1065"],"2ea161f828a3a7a6eb9410a431aecda6d7ab1065":[],"d82832af39f94dbb58a3130fd216ff1d49435589":[],"9b62c5fc89bd60031bc1f51ff1f8a21c5b0bf791":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c850a9faa7f2268d78aa6e8a611d281658781a99"],"cc3b13b430571c2e169f98fe38e1e7666f88522d":["e3c94a8b8bf47db4f968d9ae510ec8bbe1372088","5bdaf2cee03ff78b0a0cbf23df0095a3590b493b"],"e415cc960b0e7b8c945b0ed0004272b8435433ac":["bafca15d8e408346a67f4282ad1143b88023893b","74f45af4339b0daf7a95c820ab88c1aea74fbce0"],"4d3e8520fd031bab31fd0e4d480e55958bc45efe":["d82832af39f94dbb58a3130fd216ff1d49435589","db4fdbf3d262768eabc027cd8321edca0cd11fa8","fe33227f6805edab2036cbb80645cc4e2d1fa424","e55739029feea28daf6e35b6dfc45a5775896a46"],"ab68488225b6a6c357dda72ed11dedca9914a192":["e9017cf144952056066919f1ebc7897ff9bd71b1"],"be320990bdc77e643388fa801e75017f19289c42":["61c45e99cf6676da48f19d7511c73712ad39402b"],"61c45e99cf6676da48f19d7511c73712ad39402b":["43d1e498704edd2bba13548a189eed4dfccff11b","e9017cf144952056066919f1ebc7897ff9bd71b1"],"7321b77a7bc3edfebd637ef273e9dfaa9969eba6":["a8c06b72b38b9b1a65c413f18f8d9a596c4cc26d"],"c850a9faa7f2268d78aa6e8a611d281658781a99":["7321b77a7bc3edfebd637ef273e9dfaa9969eba6"],"db4fdbf3d262768eabc027cd8321edca0cd11fa8":[],"f996f8177b9204bdc92f7164460c6cefad9ac99a":["ab68488225b6a6c357dda72ed11dedca9914a192"],"a8c06b72b38b9b1a65c413f18f8d9a596c4cc26d":["4d3e8520fd031bab31fd0e4d480e55958bc45efe","fe33227f6805edab2036cbb80645cc4e2d1fa424"],"fe33227f6805edab2036cbb80645cc4e2d1fa424":[],"2d750082a4223c20902ef11ff6a9831d55738ea4":["e415cc960b0e7b8c945b0ed0004272b8435433ac","74f45af4339b0daf7a95c820ab88c1aea74fbce0"],"5bdaf2cee03ff78b0a0cbf23df0095a3590b493b":["7392b75d2c2f2aecf31188732a0764fe0dc74ade"],"74f45af4339b0daf7a95c820ab88c1aea74fbce0":[],"7392b75d2c2f2aecf31188732a0764fe0dc74ade":["be320990bdc77e643388fa801e75017f19289c42","ab68488225b6a6c357dda72ed11dedca9914a192","f996f8177b9204bdc92f7164460c6cefad9ac99a"],"e55739029feea28daf6e35b6dfc45a5775896a46":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","a69439d0df009e0bb0038d1e427159f449dd670d","d82832af39f94dbb58a3130fd216ff1d49435589","db4fdbf3d262768eabc027cd8321edca0cd11fa8"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","2ea161f828a3a7a6eb9410a431aecda6d7ab1065","d82832af39f94dbb58a3130fd216ff1d49435589","db4fdbf3d262768eabc027cd8321edca0cd11fa8","fe33227f6805edab2036cbb80645cc4e2d1fa424","74f45af4339b0daf7a95c820ab88c1aea74fbce0","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}