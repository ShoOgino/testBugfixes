{"path":"lucene/spatial/src/java/org/apache/lucene/spatial/spatial4j/Geo3dShape#getBoundingBox().mjava","commits":[{"id":"851e4197476b684154a7b65f996f535522e67400","date":1428926498,"type":0,"author":"David Wayne Smiley","isMerge":false,"pathNew":"lucene/spatial/src/java/org/apache/lucene/spatial/spatial4j/Geo3dShape#getBoundingBox().mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public Rectangle getBoundingBox() {\n    if (boundingBox == null) {\n      Bounds bounds = shape.getBounds(null);\n      double leftLon;\n      double rightLon;\n      if (bounds.checkNoLongitudeBound()) {\n        leftLon = -180.0;\n        rightLon = 180.0;\n      } else {\n        leftLon = bounds.getLeftLongitude().doubleValue() * DEGREES_PER_RADIAN;\n        rightLon = bounds.getRightLongitude().doubleValue() * DEGREES_PER_RADIAN;\n      }\n      double minLat;\n      if (bounds.checkNoBottomLatitudeBound()) {\n        minLat = -90.0;\n      } else {\n        minLat = bounds.getMinLatitude().doubleValue() * DEGREES_PER_RADIAN;\n      }\n      double maxLat;\n      if (bounds.checkNoTopLatitudeBound()) {\n        maxLat = 90.0;\n      } else {\n        maxLat = bounds.getMaxLatitude().doubleValue() * DEGREES_PER_RADIAN;\n      }\n      boundingBox = new RectangleImpl(leftLon, rightLon, minLat, maxLat, ctx);\n    }\n    return boundingBox;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c8ba5fe73a7ca70f6d54a333cc3a57d4e01eedb7","date":1430770405,"type":3,"author":"David Wayne Smiley","isMerge":false,"pathNew":"lucene/spatial/src/java/org/apache/lucene/spatial/spatial4j/Geo3dShape#getBoundingBox().mjava","pathOld":"lucene/spatial/src/java/org/apache/lucene/spatial/spatial4j/Geo3dShape#getBoundingBox().mjava","sourceNew":"  @Override\n  public Rectangle getBoundingBox() {\n    if (boundingBox == null) {\n      Bounds bounds = shape.getBounds(null);\n      double leftLon;\n      double rightLon;\n      if (bounds.checkNoLongitudeBound()) {\n        leftLon = -180.0;\n        rightLon = 180.0;\n      } else {\n        leftLon = bounds.getLeftLongitude().doubleValue() * DEGREES_PER_RADIAN;\n        rightLon = bounds.getRightLongitude().doubleValue() * DEGREES_PER_RADIAN;\n      }\n      double minLat;\n      if (bounds.checkNoBottomLatitudeBound()) {\n        minLat = -90.0;\n      } else {\n        minLat = bounds.getMinLatitude().doubleValue() * DEGREES_PER_RADIAN;\n      }\n      double maxLat;\n      if (bounds.checkNoTopLatitudeBound()) {\n        maxLat = 90.0;\n      } else {\n        maxLat = bounds.getMaxLatitude().doubleValue() * DEGREES_PER_RADIAN;\n      }\n      boundingBox = new RectangleImpl(leftLon, rightLon, minLat, maxLat, ctx).getBuffered(ROUNDOFF_ADJUSTMENT, ctx);\n    }\n    return boundingBox;\n  }\n\n","sourceOld":"  @Override\n  public Rectangle getBoundingBox() {\n    if (boundingBox == null) {\n      Bounds bounds = shape.getBounds(null);\n      double leftLon;\n      double rightLon;\n      if (bounds.checkNoLongitudeBound()) {\n        leftLon = -180.0;\n        rightLon = 180.0;\n      } else {\n        leftLon = bounds.getLeftLongitude().doubleValue() * DEGREES_PER_RADIAN;\n        rightLon = bounds.getRightLongitude().doubleValue() * DEGREES_PER_RADIAN;\n      }\n      double minLat;\n      if (bounds.checkNoBottomLatitudeBound()) {\n        minLat = -90.0;\n      } else {\n        minLat = bounds.getMinLatitude().doubleValue() * DEGREES_PER_RADIAN;\n      }\n      double maxLat;\n      if (bounds.checkNoTopLatitudeBound()) {\n        maxLat = 90.0;\n      } else {\n        maxLat = bounds.getMaxLatitude().doubleValue() * DEGREES_PER_RADIAN;\n      }\n      boundingBox = new RectangleImpl(leftLon, rightLon, minLat, maxLat, ctx);\n    }\n    return boundingBox;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c921d81476f94b6686d3f216daa1f6b076b4a6c0","date":1430922284,"type":0,"author":"David Wayne Smiley","isMerge":true,"pathNew":"lucene/spatial/src/java/org/apache/lucene/spatial/spatial4j/Geo3dShape#getBoundingBox().mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public Rectangle getBoundingBox() {\n    if (boundingBox == null) {\n      Bounds bounds = shape.getBounds(null);\n      double leftLon;\n      double rightLon;\n      if (bounds.checkNoLongitudeBound()) {\n        leftLon = -180.0;\n        rightLon = 180.0;\n      } else {\n        leftLon = bounds.getLeftLongitude().doubleValue() * DEGREES_PER_RADIAN;\n        rightLon = bounds.getRightLongitude().doubleValue() * DEGREES_PER_RADIAN;\n      }\n      double minLat;\n      if (bounds.checkNoBottomLatitudeBound()) {\n        minLat = -90.0;\n      } else {\n        minLat = bounds.getMinLatitude().doubleValue() * DEGREES_PER_RADIAN;\n      }\n      double maxLat;\n      if (bounds.checkNoTopLatitudeBound()) {\n        maxLat = 90.0;\n      } else {\n        maxLat = bounds.getMaxLatitude().doubleValue() * DEGREES_PER_RADIAN;\n      }\n      boundingBox = new RectangleImpl(leftLon, rightLon, minLat, maxLat, ctx).getBuffered(ROUNDOFF_ADJUSTMENT, ctx);\n    }\n    return boundingBox;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"535df84251be5af3be84d750beba0021aff9132d","date":1434649368,"type":3,"author":"David Wayne Smiley","isMerge":false,"pathNew":"lucene/spatial/src/java/org/apache/lucene/spatial/spatial4j/Geo3dShape#getBoundingBox().mjava","pathOld":"lucene/spatial/src/java/org/apache/lucene/spatial/spatial4j/Geo3dShape#getBoundingBox().mjava","sourceNew":"  @Override\n  public Rectangle getBoundingBox() {\n    Rectangle bbox = this.boundingBox;//volatile read once\n    if (bbox == null) {\n      Bounds bounds = shape.getBounds(null);\n      double leftLon;\n      double rightLon;\n      if (bounds.checkNoLongitudeBound()) {\n        leftLon = -180.0;\n        rightLon = 180.0;\n      } else {\n        leftLon = bounds.getLeftLongitude().doubleValue() * DistanceUtils.RADIANS_TO_DEGREES;\n        rightLon = bounds.getRightLongitude().doubleValue() * DistanceUtils.RADIANS_TO_DEGREES;\n      }\n      double minLat;\n      if (bounds.checkNoBottomLatitudeBound()) {\n        minLat = -90.0;\n      } else {\n        minLat = bounds.getMinLatitude().doubleValue() * DistanceUtils.RADIANS_TO_DEGREES;\n      }\n      double maxLat;\n      if (bounds.checkNoTopLatitudeBound()) {\n        maxLat = 90.0;\n      } else {\n        maxLat = bounds.getMaxLatitude().doubleValue() * DistanceUtils.RADIANS_TO_DEGREES;\n      }\n      bbox = new RectangleImpl(leftLon, rightLon, minLat, maxLat, ctx).getBuffered(ROUNDOFF_ADJUSTMENT, ctx);\n      this.boundingBox = bbox;\n    }\n    return bbox;\n  }\n\n","sourceOld":"  @Override\n  public Rectangle getBoundingBox() {\n    if (boundingBox == null) {\n      Bounds bounds = shape.getBounds(null);\n      double leftLon;\n      double rightLon;\n      if (bounds.checkNoLongitudeBound()) {\n        leftLon = -180.0;\n        rightLon = 180.0;\n      } else {\n        leftLon = bounds.getLeftLongitude().doubleValue() * DEGREES_PER_RADIAN;\n        rightLon = bounds.getRightLongitude().doubleValue() * DEGREES_PER_RADIAN;\n      }\n      double minLat;\n      if (bounds.checkNoBottomLatitudeBound()) {\n        minLat = -90.0;\n      } else {\n        minLat = bounds.getMinLatitude().doubleValue() * DEGREES_PER_RADIAN;\n      }\n      double maxLat;\n      if (bounds.checkNoTopLatitudeBound()) {\n        maxLat = 90.0;\n      } else {\n        maxLat = bounds.getMaxLatitude().doubleValue() * DEGREES_PER_RADIAN;\n      }\n      boundingBox = new RectangleImpl(leftLon, rightLon, minLat, maxLat, ctx).getBuffered(ROUNDOFF_ADJUSTMENT, ctx);\n    }\n    return boundingBox;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f64b7098768253180859cd8faeae6b1a185b06ed","date":1441223971,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/spatial/src/java/org/apache/lucene/spatial/spatial4j/Geo3dShape#getBoundingBox().mjava","pathOld":"lucene/spatial/src/java/org/apache/lucene/spatial/spatial4j/Geo3dShape#getBoundingBox().mjava","sourceNew":"  @Override\n  public Rectangle getBoundingBox() {\n    Rectangle bbox = this.boundingBox;//volatile read once\n    if (bbox == null) {\n      LatLonBounds bounds = new LatLonBounds();\n      shape.getBounds(bounds);\n      double leftLon;\n      double rightLon;\n      if (bounds.checkNoLongitudeBound()) {\n        leftLon = -180.0;\n        rightLon = 180.0;\n      } else {\n        leftLon = bounds.getLeftLongitude().doubleValue() * DistanceUtils.RADIANS_TO_DEGREES;\n        rightLon = bounds.getRightLongitude().doubleValue() * DistanceUtils.RADIANS_TO_DEGREES;\n      }\n      double minLat;\n      if (bounds.checkNoBottomLatitudeBound()) {\n        minLat = -90.0;\n      } else {\n        minLat = bounds.getMinLatitude().doubleValue() * DistanceUtils.RADIANS_TO_DEGREES;\n      }\n      double maxLat;\n      if (bounds.checkNoTopLatitudeBound()) {\n        maxLat = 90.0;\n      } else {\n        maxLat = bounds.getMaxLatitude().doubleValue() * DistanceUtils.RADIANS_TO_DEGREES;\n      }\n      bbox = new RectangleImpl(leftLon, rightLon, minLat, maxLat, ctx).getBuffered(ROUNDOFF_ADJUSTMENT, ctx);\n      this.boundingBox = bbox;\n    }\n    return bbox;\n  }\n\n","sourceOld":"  @Override\n  public Rectangle getBoundingBox() {\n    Rectangle bbox = this.boundingBox;//volatile read once\n    if (bbox == null) {\n      Bounds bounds = shape.getBounds(null);\n      double leftLon;\n      double rightLon;\n      if (bounds.checkNoLongitudeBound()) {\n        leftLon = -180.0;\n        rightLon = 180.0;\n      } else {\n        leftLon = bounds.getLeftLongitude().doubleValue() * DistanceUtils.RADIANS_TO_DEGREES;\n        rightLon = bounds.getRightLongitude().doubleValue() * DistanceUtils.RADIANS_TO_DEGREES;\n      }\n      double minLat;\n      if (bounds.checkNoBottomLatitudeBound()) {\n        minLat = -90.0;\n      } else {\n        minLat = bounds.getMinLatitude().doubleValue() * DistanceUtils.RADIANS_TO_DEGREES;\n      }\n      double maxLat;\n      if (bounds.checkNoTopLatitudeBound()) {\n        maxLat = 90.0;\n      } else {\n        maxLat = bounds.getMaxLatitude().doubleValue() * DistanceUtils.RADIANS_TO_DEGREES;\n      }\n      bbox = new RectangleImpl(leftLon, rightLon, minLat, maxLat, ctx).getBuffered(ROUNDOFF_ADJUSTMENT, ctx);\n      this.boundingBox = bbox;\n    }\n    return bbox;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"112d77ac8d3e10a362516ad834c9a11d35c94234","date":1456784319,"type":5,"author":"nknize","isMerge":false,"pathNew":"lucene/spatial-extras/src/java/org/apache/lucene/spatial/spatial4j/Geo3dShape#getBoundingBox().mjava","pathOld":"lucene/spatial/src/java/org/apache/lucene/spatial/spatial4j/Geo3dShape#getBoundingBox().mjava","sourceNew":"  @Override\n  public Rectangle getBoundingBox() {\n    Rectangle bbox = this.boundingBox;//volatile read once\n    if (bbox == null) {\n      LatLonBounds bounds = new LatLonBounds();\n      shape.getBounds(bounds);\n      double leftLon;\n      double rightLon;\n      if (bounds.checkNoLongitudeBound()) {\n        leftLon = -180.0;\n        rightLon = 180.0;\n      } else {\n        leftLon = bounds.getLeftLongitude().doubleValue() * DistanceUtils.RADIANS_TO_DEGREES;\n        rightLon = bounds.getRightLongitude().doubleValue() * DistanceUtils.RADIANS_TO_DEGREES;\n      }\n      double minLat;\n      if (bounds.checkNoBottomLatitudeBound()) {\n        minLat = -90.0;\n      } else {\n        minLat = bounds.getMinLatitude().doubleValue() * DistanceUtils.RADIANS_TO_DEGREES;\n      }\n      double maxLat;\n      if (bounds.checkNoTopLatitudeBound()) {\n        maxLat = 90.0;\n      } else {\n        maxLat = bounds.getMaxLatitude().doubleValue() * DistanceUtils.RADIANS_TO_DEGREES;\n      }\n      bbox = new RectangleImpl(leftLon, rightLon, minLat, maxLat, ctx).getBuffered(ROUNDOFF_ADJUSTMENT, ctx);\n      this.boundingBox = bbox;\n    }\n    return bbox;\n  }\n\n","sourceOld":"  @Override\n  public Rectangle getBoundingBox() {\n    Rectangle bbox = this.boundingBox;//volatile read once\n    if (bbox == null) {\n      LatLonBounds bounds = new LatLonBounds();\n      shape.getBounds(bounds);\n      double leftLon;\n      double rightLon;\n      if (bounds.checkNoLongitudeBound()) {\n        leftLon = -180.0;\n        rightLon = 180.0;\n      } else {\n        leftLon = bounds.getLeftLongitude().doubleValue() * DistanceUtils.RADIANS_TO_DEGREES;\n        rightLon = bounds.getRightLongitude().doubleValue() * DistanceUtils.RADIANS_TO_DEGREES;\n      }\n      double minLat;\n      if (bounds.checkNoBottomLatitudeBound()) {\n        minLat = -90.0;\n      } else {\n        minLat = bounds.getMinLatitude().doubleValue() * DistanceUtils.RADIANS_TO_DEGREES;\n      }\n      double maxLat;\n      if (bounds.checkNoTopLatitudeBound()) {\n        maxLat = 90.0;\n      } else {\n        maxLat = bounds.getMaxLatitude().doubleValue() * DistanceUtils.RADIANS_TO_DEGREES;\n      }\n      bbox = new RectangleImpl(leftLon, rightLon, minLat, maxLat, ctx).getBuffered(ROUNDOFF_ADJUSTMENT, ctx);\n      this.boundingBox = bbox;\n    }\n    return bbox;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"af2638813028b254a88b418ebeafb541afb49653","date":1456804822,"type":5,"author":"Noble Paul","isMerge":true,"pathNew":"lucene/spatial-extras/src/java/org/apache/lucene/spatial/spatial4j/Geo3dShape#getBoundingBox().mjava","pathOld":"lucene/spatial/src/java/org/apache/lucene/spatial/spatial4j/Geo3dShape#getBoundingBox().mjava","sourceNew":"  @Override\n  public Rectangle getBoundingBox() {\n    Rectangle bbox = this.boundingBox;//volatile read once\n    if (bbox == null) {\n      LatLonBounds bounds = new LatLonBounds();\n      shape.getBounds(bounds);\n      double leftLon;\n      double rightLon;\n      if (bounds.checkNoLongitudeBound()) {\n        leftLon = -180.0;\n        rightLon = 180.0;\n      } else {\n        leftLon = bounds.getLeftLongitude().doubleValue() * DistanceUtils.RADIANS_TO_DEGREES;\n        rightLon = bounds.getRightLongitude().doubleValue() * DistanceUtils.RADIANS_TO_DEGREES;\n      }\n      double minLat;\n      if (bounds.checkNoBottomLatitudeBound()) {\n        minLat = -90.0;\n      } else {\n        minLat = bounds.getMinLatitude().doubleValue() * DistanceUtils.RADIANS_TO_DEGREES;\n      }\n      double maxLat;\n      if (bounds.checkNoTopLatitudeBound()) {\n        maxLat = 90.0;\n      } else {\n        maxLat = bounds.getMaxLatitude().doubleValue() * DistanceUtils.RADIANS_TO_DEGREES;\n      }\n      bbox = new RectangleImpl(leftLon, rightLon, minLat, maxLat, ctx).getBuffered(ROUNDOFF_ADJUSTMENT, ctx);\n      this.boundingBox = bbox;\n    }\n    return bbox;\n  }\n\n","sourceOld":"  @Override\n  public Rectangle getBoundingBox() {\n    Rectangle bbox = this.boundingBox;//volatile read once\n    if (bbox == null) {\n      LatLonBounds bounds = new LatLonBounds();\n      shape.getBounds(bounds);\n      double leftLon;\n      double rightLon;\n      if (bounds.checkNoLongitudeBound()) {\n        leftLon = -180.0;\n        rightLon = 180.0;\n      } else {\n        leftLon = bounds.getLeftLongitude().doubleValue() * DistanceUtils.RADIANS_TO_DEGREES;\n        rightLon = bounds.getRightLongitude().doubleValue() * DistanceUtils.RADIANS_TO_DEGREES;\n      }\n      double minLat;\n      if (bounds.checkNoBottomLatitudeBound()) {\n        minLat = -90.0;\n      } else {\n        minLat = bounds.getMinLatitude().doubleValue() * DistanceUtils.RADIANS_TO_DEGREES;\n      }\n      double maxLat;\n      if (bounds.checkNoTopLatitudeBound()) {\n        maxLat = 90.0;\n      } else {\n        maxLat = bounds.getMaxLatitude().doubleValue() * DistanceUtils.RADIANS_TO_DEGREES;\n      }\n      bbox = new RectangleImpl(leftLon, rightLon, minLat, maxLat, ctx).getBuffered(ROUNDOFF_ADJUSTMENT, ctx);\n      this.boundingBox = bbox;\n    }\n    return bbox;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"af2638813028b254a88b418ebeafb541afb49653":["f64b7098768253180859cd8faeae6b1a185b06ed","112d77ac8d3e10a362516ad834c9a11d35c94234"],"f64b7098768253180859cd8faeae6b1a185b06ed":["535df84251be5af3be84d750beba0021aff9132d"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"c8ba5fe73a7ca70f6d54a333cc3a57d4e01eedb7":["851e4197476b684154a7b65f996f535522e67400"],"112d77ac8d3e10a362516ad834c9a11d35c94234":["f64b7098768253180859cd8faeae6b1a185b06ed"],"535df84251be5af3be84d750beba0021aff9132d":["c921d81476f94b6686d3f216daa1f6b076b4a6c0"],"c921d81476f94b6686d3f216daa1f6b076b4a6c0":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","c8ba5fe73a7ca70f6d54a333cc3a57d4e01eedb7"],"851e4197476b684154a7b65f996f535522e67400":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["af2638813028b254a88b418ebeafb541afb49653"]},"commit2Childs":{"af2638813028b254a88b418ebeafb541afb49653":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"f64b7098768253180859cd8faeae6b1a185b06ed":["af2638813028b254a88b418ebeafb541afb49653","112d77ac8d3e10a362516ad834c9a11d35c94234"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c921d81476f94b6686d3f216daa1f6b076b4a6c0","851e4197476b684154a7b65f996f535522e67400"],"c8ba5fe73a7ca70f6d54a333cc3a57d4e01eedb7":["c921d81476f94b6686d3f216daa1f6b076b4a6c0"],"112d77ac8d3e10a362516ad834c9a11d35c94234":["af2638813028b254a88b418ebeafb541afb49653"],"535df84251be5af3be84d750beba0021aff9132d":["f64b7098768253180859cd8faeae6b1a185b06ed"],"851e4197476b684154a7b65f996f535522e67400":["c8ba5fe73a7ca70f6d54a333cc3a57d4e01eedb7"],"c921d81476f94b6686d3f216daa1f6b076b4a6c0":["535df84251be5af3be84d750beba0021aff9132d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}