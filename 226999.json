{"path":"src/java/org/apache/lucene/search/FieldValueHitQueue#lessThan(Object,Object).mjava","commits":[{"id":"63bc3238545c6012bd44f5d294077997f236bc4e","date":1233087321,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/search/FieldValueHitQueue#lessThan(Object,Object).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Returns whether <code>a</code> is less relevant than <code>b</code>.\n   * @param a ScoreDoc\n   * @param b ScoreDoc\n   * @return <code>true</code> if document <code>a</code> should be sorted after document <code>b</code>.\n   */\n  protected boolean lessThan (final Object a, final Object b) {\n    final Entry hitA = (Entry) a;\n    final Entry hitB = (Entry) b;\n\n    assert hitA != hitB;\n    assert hitA.slot != hitB.slot;\n\n    if (numComparators == 1) {\n      // Common case\n      final int c = reverseMul1 * comparator1.compare(hitA.slot, hitB.slot);\n      if (c != 0) {\n        return c > 0;\n      }\n    } else {\n      // run comparators\n      for (int i=0; i<numComparators; ++i) {\n        final int c = reverseMul[i] * comparators[i].compare(hitA.slot, hitB.slot);\n        if (c != 0) {\n          // Short circuit\n          return c > 0;\n        }\n      }\n    }\n\n    // avoid random sort order that could lead to duplicates (bug #31241):\n    return hitA.docID > hitB.docID;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"64714133cf5ec732e3bbceee63351bb9af0117dc","date":1239647636,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/search/FieldValueHitQueue#lessThan(Object,Object).mjava","pathOld":"src/java/org/apache/lucene/search/FieldValueHitQueue#lessThan(Object,Object).mjava","sourceNew":"  protected abstract boolean lessThan (final Object a, final Object b);\n\n","sourceOld":"  /**\n   * Returns whether <code>a</code> is less relevant than <code>b</code>.\n   * @param a ScoreDoc\n   * @param b ScoreDoc\n   * @return <code>true</code> if document <code>a</code> should be sorted after document <code>b</code>.\n   */\n  protected boolean lessThan (final Object a, final Object b) {\n    final Entry hitA = (Entry) a;\n    final Entry hitB = (Entry) b;\n\n    assert hitA != hitB;\n    assert hitA.slot != hitB.slot;\n\n    if (numComparators == 1) {\n      // Common case\n      final int c = reverseMul1 * comparator1.compare(hitA.slot, hitB.slot);\n      if (c != 0) {\n        return c > 0;\n      }\n    } else {\n      // run comparators\n      for (int i=0; i<numComparators; ++i) {\n        final int c = reverseMul[i] * comparators[i].compare(hitA.slot, hitB.slot);\n        if (c != 0) {\n          // Short circuit\n          return c > 0;\n        }\n      }\n    }\n\n    // avoid random sort order that could lead to duplicates (bug #31241):\n    return hitA.docID > hitB.docID;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"20ff1ff2aa6f91149e9cd75f65a56fbdda5266ce","date":1255993146,"type":4,"author":"Uwe Schindler","isMerge":false,"pathNew":"/dev/null","pathOld":"src/java/org/apache/lucene/search/FieldValueHitQueue#lessThan(Object,Object).mjava","sourceNew":null,"sourceOld":"  protected abstract boolean lessThan (final Object a, final Object b);\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"64714133cf5ec732e3bbceee63351bb9af0117dc":["63bc3238545c6012bd44f5d294077997f236bc4e"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"20ff1ff2aa6f91149e9cd75f65a56fbdda5266ce":["64714133cf5ec732e3bbceee63351bb9af0117dc"],"63bc3238545c6012bd44f5d294077997f236bc4e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["20ff1ff2aa6f91149e9cd75f65a56fbdda5266ce"]},"commit2Childs":{"64714133cf5ec732e3bbceee63351bb9af0117dc":["20ff1ff2aa6f91149e9cd75f65a56fbdda5266ce"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["63bc3238545c6012bd44f5d294077997f236bc4e"],"63bc3238545c6012bd44f5d294077997f236bc4e":["64714133cf5ec732e3bbceee63351bb9af0117dc"],"20ff1ff2aa6f91149e9cd75f65a56fbdda5266ce":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}