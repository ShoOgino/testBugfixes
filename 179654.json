{"path":"lucene/spatial-extras/src/java/org/apache/lucene/spatial/prefix/tree/QuadPrefixTree.QuadCell#concat(BytesRef,byte).mjava","commits":[{"id":"112d77ac8d3e10a362516ad834c9a11d35c94234","date":1456784319,"type":1,"author":"nknize","isMerge":false,"pathNew":"lucene/spatial-extras/src/java/org/apache/lucene/spatial/prefix/tree/QuadPrefixTree.QuadCell#concat(BytesRef,byte).mjava","pathOld":"lucene/spatial/src/java/org/apache/lucene/spatial/prefix/tree/QuadPrefixTree.QuadCell#concat(BytesRef,byte).mjava","sourceNew":"    protected BytesRef concat(BytesRef source, byte b) {\n      //+2 for new char + potential leaf\n      final byte[] buffer = Arrays.copyOfRange(source.bytes, source.offset, source.offset + source.length + 2);\n      BytesRef target = new BytesRef(buffer);\n      target.length = source.length;\n      target.bytes[target.length++] = b;\n      return target;\n    }\n\n","sourceOld":"    protected BytesRef concat(BytesRef source, byte b) {\n      //+2 for new char + potential leaf\n      final byte[] buffer = Arrays.copyOfRange(source.bytes, source.offset, source.offset + source.length + 2);\n      BytesRef target = new BytesRef(buffer);\n      target.length = source.length;\n      target.bytes[target.length++] = b;\n      return target;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"af2638813028b254a88b418ebeafb541afb49653","date":1456804822,"type":1,"author":"Noble Paul","isMerge":true,"pathNew":"lucene/spatial-extras/src/java/org/apache/lucene/spatial/prefix/tree/QuadPrefixTree.QuadCell#concat(BytesRef,byte).mjava","pathOld":"lucene/spatial/src/java/org/apache/lucene/spatial/prefix/tree/QuadPrefixTree.QuadCell#concat(BytesRef,byte).mjava","sourceNew":"    protected BytesRef concat(BytesRef source, byte b) {\n      //+2 for new char + potential leaf\n      final byte[] buffer = Arrays.copyOfRange(source.bytes, source.offset, source.offset + source.length + 2);\n      BytesRef target = new BytesRef(buffer);\n      target.length = source.length;\n      target.bytes[target.length++] = b;\n      return target;\n    }\n\n","sourceOld":"    protected BytesRef concat(BytesRef source, byte b) {\n      //+2 for new char + potential leaf\n      final byte[] buffer = Arrays.copyOfRange(source.bytes, source.offset, source.offset + source.length + 2);\n      BytesRef target = new BytesRef(buffer);\n      target.length = source.length;\n      target.bytes[target.length++] = b;\n      return target;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9798d0818e7a880546802b509792d3f3d57babd2","date":1528358901,"type":3,"author":"Nhat Nguyen","isMerge":false,"pathNew":"lucene/spatial-extras/src/java/org/apache/lucene/spatial/prefix/tree/QuadPrefixTree.QuadCell#concat(BytesRef,byte).mjava","pathOld":"lucene/spatial-extras/src/java/org/apache/lucene/spatial/prefix/tree/QuadPrefixTree.QuadCell#concat(BytesRef,byte).mjava","sourceNew":"    protected BytesRef concat(BytesRef source, byte b) {\n      //+2 for new char + potential leaf\n      final byte[] buffer = new byte[source.length + 2];\n      System.arraycopy(source.bytes, source.offset, buffer, 0, source.length);\n      BytesRef target = new BytesRef(buffer);\n      target.length = source.length;\n      target.bytes[target.length++] = b;\n      return target;\n    }\n\n","sourceOld":"    protected BytesRef concat(BytesRef source, byte b) {\n      //+2 for new char + potential leaf\n      final byte[] buffer = Arrays.copyOfRange(source.bytes, source.offset, source.offset + source.length + 2);\n      BytesRef target = new BytesRef(buffer);\n      target.length = source.length;\n      target.bytes[target.length++] = b;\n      return target;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b70042a8a492f7054d480ccdd2be9796510d4327","date":1528386658,"type":3,"author":"Alessandro Benedetti","isMerge":true,"pathNew":"lucene/spatial-extras/src/java/org/apache/lucene/spatial/prefix/tree/QuadPrefixTree.QuadCell#concat(BytesRef,byte).mjava","pathOld":"lucene/spatial-extras/src/java/org/apache/lucene/spatial/prefix/tree/QuadPrefixTree.QuadCell#concat(BytesRef,byte).mjava","sourceNew":"    protected BytesRef concat(BytesRef source, byte b) {\n      //+2 for new char + potential leaf\n      final byte[] buffer = new byte[source.length + 2];\n      System.arraycopy(source.bytes, source.offset, buffer, 0, source.length);\n      BytesRef target = new BytesRef(buffer);\n      target.length = source.length;\n      target.bytes[target.length++] = b;\n      return target;\n    }\n\n","sourceOld":"    protected BytesRef concat(BytesRef source, byte b) {\n      //+2 for new char + potential leaf\n      final byte[] buffer = Arrays.copyOfRange(source.bytes, source.offset, source.offset + source.length + 2);\n      BytesRef target = new BytesRef(buffer);\n      target.length = source.length;\n      target.bytes[target.length++] = b;\n      return target;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7eeaaea0106c7d6a2de50acfc8d357121ef8bd26","date":1531589977,"type":3,"author":"Michael Braun","isMerge":true,"pathNew":"lucene/spatial-extras/src/java/org/apache/lucene/spatial/prefix/tree/QuadPrefixTree.QuadCell#concat(BytesRef,byte).mjava","pathOld":"lucene/spatial-extras/src/java/org/apache/lucene/spatial/prefix/tree/QuadPrefixTree.QuadCell#concat(BytesRef,byte).mjava","sourceNew":"    protected BytesRef concat(BytesRef source, byte b) {\n      //+2 for new char + potential leaf\n      final byte[] buffer = new byte[source.length + 2];\n      System.arraycopy(source.bytes, source.offset, buffer, 0, source.length);\n      BytesRef target = new BytesRef(buffer);\n      target.length = source.length;\n      target.bytes[target.length++] = b;\n      return target;\n    }\n\n","sourceOld":"    protected BytesRef concat(BytesRef source, byte b) {\n      //+2 for new char + potential leaf\n      final byte[] buffer = Arrays.copyOfRange(source.bytes, source.offset, source.offset + source.length + 2);\n      BytesRef target = new BytesRef(buffer);\n      target.length = source.length;\n      target.bytes[target.length++] = b;\n      return target;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"af2638813028b254a88b418ebeafb541afb49653":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","112d77ac8d3e10a362516ad834c9a11d35c94234"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"b70042a8a492f7054d480ccdd2be9796510d4327":["af2638813028b254a88b418ebeafb541afb49653","9798d0818e7a880546802b509792d3f3d57babd2"],"112d77ac8d3e10a362516ad834c9a11d35c94234":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"9798d0818e7a880546802b509792d3f3d57babd2":["af2638813028b254a88b418ebeafb541afb49653"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9798d0818e7a880546802b509792d3f3d57babd2"],"7eeaaea0106c7d6a2de50acfc8d357121ef8bd26":["af2638813028b254a88b418ebeafb541afb49653","9798d0818e7a880546802b509792d3f3d57babd2"]},"commit2Childs":{"af2638813028b254a88b418ebeafb541afb49653":["b70042a8a492f7054d480ccdd2be9796510d4327","9798d0818e7a880546802b509792d3f3d57babd2","7eeaaea0106c7d6a2de50acfc8d357121ef8bd26"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["af2638813028b254a88b418ebeafb541afb49653","112d77ac8d3e10a362516ad834c9a11d35c94234"],"b70042a8a492f7054d480ccdd2be9796510d4327":[],"112d77ac8d3e10a362516ad834c9a11d35c94234":["af2638813028b254a88b418ebeafb541afb49653"],"9798d0818e7a880546802b509792d3f3d57babd2":["b70042a8a492f7054d480ccdd2be9796510d4327","cd5edd1f2b162a5cfa08efd17851a07373a96817","7eeaaea0106c7d6a2de50acfc8d357121ef8bd26"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"7eeaaea0106c7d6a2de50acfc8d357121ef8bd26":[]},"heads":["b70042a8a492f7054d480ccdd2be9796510d4327","cd5edd1f2b162a5cfa08efd17851a07373a96817","7eeaaea0106c7d6a2de50acfc8d357121ef8bd26"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}