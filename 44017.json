{"path":"lucene/core/src/test/org/apache/lucene/geo/TestGeoEncodingUtils#testEncodeEdgeCases().mjava","commits":[{"id":"ed48f9723ad1b29c351ea43b5a2c8f90c3a45737","date":1460056040,"type":0,"author":"nknize","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/geo/TestGeoEncodingUtils#testEncodeEdgeCases().mjava","pathOld":"/dev/null","sourceNew":"  // check edge/interesting cases explicitly\n  public void testEncodeEdgeCases() {\n    assertEquals(Integer.MIN_VALUE, encodeLatitude(MIN_LAT_INCL));\n    assertEquals(Integer.MIN_VALUE, encodeLatitudeCeil(MIN_LAT_INCL));\n    assertEquals(Integer.MAX_VALUE, encodeLatitude(MAX_LAT_INCL));\n    assertEquals(Integer.MAX_VALUE, encodeLatitudeCeil(MAX_LAT_INCL));\n\n    assertEquals(Integer.MIN_VALUE, encodeLongitude(MIN_LON_INCL));\n    assertEquals(Integer.MIN_VALUE, encodeLongitudeCeil(MIN_LON_INCL));\n    assertEquals(Integer.MAX_VALUE, encodeLongitude(MAX_LON_INCL));\n    assertEquals(Integer.MAX_VALUE, encodeLongitudeCeil(MAX_LON_INCL));\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"09f15823cf5eb6e807005579e875e117d8598f95","date":1460066385,"type":0,"author":"Karl Wright","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/geo/TestGeoEncodingUtils#testEncodeEdgeCases().mjava","pathOld":"/dev/null","sourceNew":"  // check edge/interesting cases explicitly\n  public void testEncodeEdgeCases() {\n    assertEquals(Integer.MIN_VALUE, encodeLatitude(MIN_LAT_INCL));\n    assertEquals(Integer.MIN_VALUE, encodeLatitudeCeil(MIN_LAT_INCL));\n    assertEquals(Integer.MAX_VALUE, encodeLatitude(MAX_LAT_INCL));\n    assertEquals(Integer.MAX_VALUE, encodeLatitudeCeil(MAX_LAT_INCL));\n\n    assertEquals(Integer.MIN_VALUE, encodeLongitude(MIN_LON_INCL));\n    assertEquals(Integer.MIN_VALUE, encodeLongitudeCeil(MIN_LON_INCL));\n    assertEquals(Integer.MAX_VALUE, encodeLongitude(MAX_LON_INCL));\n    assertEquals(Integer.MAX_VALUE, encodeLongitudeCeil(MAX_LON_INCL));\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"ed48f9723ad1b29c351ea43b5a2c8f90c3a45737":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["09f15823cf5eb6e807005579e875e117d8598f95"],"09f15823cf5eb6e807005579e875e117d8598f95":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","ed48f9723ad1b29c351ea43b5a2c8f90c3a45737"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["ed48f9723ad1b29c351ea43b5a2c8f90c3a45737","09f15823cf5eb6e807005579e875e117d8598f95"],"ed48f9723ad1b29c351ea43b5a2c8f90c3a45737":["09f15823cf5eb6e807005579e875e117d8598f95"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"09f15823cf5eb6e807005579e875e117d8598f95":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}