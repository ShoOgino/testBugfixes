{"path":"lucene/core/src/java/org/apache/lucene/store/CompoundFileWriter#getOutput(IOContext).mjava","commits":[{"id":"a3491d1030513020096bfb21ebca26fd57070ff8","date":1401733016,"type":1,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/store/CompoundFileWriter#getOutput(IOContext).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/store/CompoundFileWriter#getOutput().mjava","sourceNew":"  private synchronized IndexOutput getOutput(IOContext context) throws IOException {\n    if (dataOut == null) {\n      boolean success = false;\n      try {\n        dataOut = directory.createOutput(dataFileName, context);\n        CodecUtil.writeHeader(dataOut, DATA_CODEC, VERSION_CURRENT);\n        success = true;\n      } finally {\n        if (!success) {\n          IOUtils.closeWhileHandlingException(dataOut);\n        }\n      }\n    } \n    return dataOut;\n  }\n\n","sourceOld":"  private synchronized IndexOutput getOutput() throws IOException {\n    if (dataOut == null) {\n      boolean success = false;\n      try {\n        dataOut = directory.createOutput(dataFileName, IOContext.DEFAULT);\n        CodecUtil.writeHeader(dataOut, DATA_CODEC, VERSION_CURRENT);\n        success = true;\n      } finally {\n        if (!success) {\n          IOUtils.closeWhileHandlingException(dataOut);\n        }\n      }\n    } \n    return dataOut;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f382b2e9f4ca7dbe98e2f15da70983ecfc02b171","date":1412231650,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/store/CompoundFileWriter#getOutput(IOContext).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/store/CompoundFileWriter#getOutput(IOContext).mjava","sourceNew":"  private synchronized IndexOutput getOutput(IOContext context) throws IOException {\n    if (dataOut == null) {\n      boolean success = false;\n      try {\n        dataOut = directory.createOutput(dataFileName, context);\n        CodecUtil.writeSegmentHeader(dataOut, DATA_CODEC, VERSION_CURRENT, segmentID, \"\");\n        success = true;\n      } finally {\n        if (!success) {\n          IOUtils.closeWhileHandlingException(dataOut);\n        }\n      }\n    } \n    return dataOut;\n  }\n\n","sourceOld":"  private synchronized IndexOutput getOutput(IOContext context) throws IOException {\n    if (dataOut == null) {\n      boolean success = false;\n      try {\n        dataOut = directory.createOutput(dataFileName, context);\n        CodecUtil.writeHeader(dataOut, DATA_CODEC, VERSION_CURRENT);\n        success = true;\n      } finally {\n        if (!success) {\n          IOUtils.closeWhileHandlingException(dataOut);\n        }\n      }\n    } \n    return dataOut;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"989d940c4bf402188f4f0ae13736836885227383","date":1412263633,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/lucene50/CompoundFileWriter#getOutput(IOContext).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/store/CompoundFileWriter#getOutput(IOContext).mjava","sourceNew":"  private synchronized IndexOutput getOutput(IOContext context) throws IOException {\n    if (dataOut == null) {\n      boolean success = false;\n      try {\n        dataOut = directory.createOutput(dataFileName, context);\n        CodecUtil.writeSegmentHeader(dataOut, DATA_CODEC, VERSION_CURRENT, segmentID, \"\");\n        success = true;\n      } finally {\n        if (!success) {\n          IOUtils.closeWhileHandlingException(dataOut);\n        }\n      }\n    } \n    return dataOut;\n  }\n\n","sourceOld":"  private synchronized IndexOutput getOutput(IOContext context) throws IOException {\n    if (dataOut == null) {\n      boolean success = false;\n      try {\n        dataOut = directory.createOutput(dataFileName, context);\n        CodecUtil.writeSegmentHeader(dataOut, DATA_CODEC, VERSION_CURRENT, segmentID, \"\");\n        success = true;\n      } finally {\n        if (!success) {\n          IOUtils.closeWhileHandlingException(dataOut);\n        }\n      }\n    } \n    return dataOut;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9bb9a29a5e71a90295f175df8919802993142c9a","date":1412517673,"type":5,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/backward-codecs/src/java/org/apache/lucene/codecs/lucene40/Lucene40CompoundWriter#getOutput(IOContext).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/store/CompoundFileWriter#getOutput(IOContext).mjava","sourceNew":"  private synchronized IndexOutput getOutput(IOContext context) throws IOException {\n    if (dataOut == null) {\n      boolean success = false;\n      try {\n        dataOut = directory.createOutput(dataFileName, this.context);\n        CodecUtil.writeHeader(dataOut, DATA_CODEC, VERSION_CURRENT);\n        success = true;\n      } finally {\n        if (!success) {\n          IOUtils.closeWhileHandlingException(dataOut);\n        }\n      }\n    } \n    return dataOut;\n  }\n\n","sourceOld":"  private synchronized IndexOutput getOutput(IOContext context) throws IOException {\n    if (dataOut == null) {\n      boolean success = false;\n      try {\n        dataOut = directory.createOutput(dataFileName, context);\n        CodecUtil.writeHeader(dataOut, DATA_CODEC, VERSION_CURRENT);\n        success = true;\n      } finally {\n        if (!success) {\n          IOUtils.closeWhileHandlingException(dataOut);\n        }\n      }\n    } \n    return dataOut;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"989d940c4bf402188f4f0ae13736836885227383":["f382b2e9f4ca7dbe98e2f15da70983ecfc02b171"],"f382b2e9f4ca7dbe98e2f15da70983ecfc02b171":["a3491d1030513020096bfb21ebca26fd57070ff8"],"9bb9a29a5e71a90295f175df8919802993142c9a":["a3491d1030513020096bfb21ebca26fd57070ff8","989d940c4bf402188f4f0ae13736836885227383"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a3491d1030513020096bfb21ebca26fd57070ff8":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9bb9a29a5e71a90295f175df8919802993142c9a"]},"commit2Childs":{"989d940c4bf402188f4f0ae13736836885227383":["9bb9a29a5e71a90295f175df8919802993142c9a"],"f382b2e9f4ca7dbe98e2f15da70983ecfc02b171":["989d940c4bf402188f4f0ae13736836885227383"],"9bb9a29a5e71a90295f175df8919802993142c9a":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["a3491d1030513020096bfb21ebca26fd57070ff8"],"a3491d1030513020096bfb21ebca26fd57070ff8":["f382b2e9f4ca7dbe98e2f15da70983ecfc02b171","9bb9a29a5e71a90295f175df8919802993142c9a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}