{"path":"solr/solrj/src/java/org/apache/solr/client/solrj/io/sql/DriverImpl#connect(String,Properties).mjava","commits":[{"id":"6209d9025a3f5ce74a8295606b15060efd4d7542","date":1442585859,"type":0,"author":"Joel Bernstein","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/io/sql/DriverImpl#connect(String,Properties).mjava","pathOld":"/dev/null","sourceNew":"  public Connection connect(String url, Properties props) throws SQLException {\n    if(!acceptsURL(url)) {\n      return null;\n    }\n\n    StringBuilder buf = new StringBuilder(url);\n    boolean needsAmp = true;\n    if(!url.contains(\"?\")) {\n      buf.append(\"?\");\n      needsAmp = false;\n    }\n\n    for(Object key : props.keySet()) {\n      Object value = props.get(key);\n      if(needsAmp) {\n        buf.append(\"&\");\n      }\n      buf.append(key.toString()).append(\"=\").append(value);\n      needsAmp = true;\n    }\n\n    return connect(buf.toString());\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["546740f8d88c7cb2343ec9a84ad18f24c66f1d82"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"546740f8d88c7cb2343ec9a84ad18f24c66f1d82","date":1448382444,"type":3,"author":"Joel Bernstein","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/io/sql/DriverImpl#connect(String,Properties).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/io/sql/DriverImpl#connect(String,Properties).mjava","sourceNew":"  public Connection connect(String url, Properties props) throws SQLException {\n    if(!acceptsURL(url)) {\n      return null;\n    }\n\n    URI uri = processUrl(url);\n\n    loadParams(uri, props);\n\n    if (!props.containsKey(\"collection\")) {\n      throw new SQLException(\"The connection url has no connection properties. At a mininum the collection must be specified.\");\n    }\n    String collection = (String) props.remove(\"collection\");\n\n    if (!props.containsKey(\"aggregationMode\")) {\n      props.setProperty(\"aggregationMode\", \"facet\");\n    }\n\n    String zkHost = uri.getAuthority() + uri.getPath();\n\n    return new ConnectionImpl(zkHost, collection, props);\n  }\n\n","sourceOld":"  public Connection connect(String url, Properties props) throws SQLException {\n    if(!acceptsURL(url)) {\n      return null;\n    }\n\n    StringBuilder buf = new StringBuilder(url);\n    boolean needsAmp = true;\n    if(!url.contains(\"?\")) {\n      buf.append(\"?\");\n      needsAmp = false;\n    }\n\n    for(Object key : props.keySet()) {\n      Object value = props.get(key);\n      if(needsAmp) {\n        buf.append(\"&\");\n      }\n      buf.append(key.toString()).append(\"=\").append(value);\n      needsAmp = true;\n    }\n\n    return connect(buf.toString());\n  }\n\n","bugFix":["6209d9025a3f5ce74a8295606b15060efd4d7542"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5d70b751e35173c43ca80385daa4642aedd91a55","date":1452882611,"type":3,"author":"Joel Bernstein","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/io/sql/DriverImpl#connect(String,Properties).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/io/sql/DriverImpl#connect(String,Properties).mjava","sourceNew":"  public Connection connect(String url, Properties props) throws SQLException {\n    if(!acceptsURL(url)) {\n      return null;\n    }\n\n    URI uri = processUrl(url);\n\n    loadParams(uri, props);\n\n    if (!props.containsKey(\"collection\")) {\n      throw new SQLException(\"The connection url has no connection properties. At a mininum the collection must be specified.\");\n    }\n    String collection = (String) props.remove(\"collection\");\n\n    if (!props.containsKey(\"aggregationMode\")) {\n      props.setProperty(\"aggregationMode\", \"facet\");\n    }\n\n    String zkHost = uri.getAuthority() + uri.getPath();\n\n    return new ConnectionImpl(url, zkHost, collection, props);\n  }\n\n","sourceOld":"  public Connection connect(String url, Properties props) throws SQLException {\n    if(!acceptsURL(url)) {\n      return null;\n    }\n\n    URI uri = processUrl(url);\n\n    loadParams(uri, props);\n\n    if (!props.containsKey(\"collection\")) {\n      throw new SQLException(\"The connection url has no connection properties. At a mininum the collection must be specified.\");\n    }\n    String collection = (String) props.remove(\"collection\");\n\n    if (!props.containsKey(\"aggregationMode\")) {\n      props.setProperty(\"aggregationMode\", \"facet\");\n    }\n\n    String zkHost = uri.getAuthority() + uri.getPath();\n\n    return new ConnectionImpl(zkHost, collection, props);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ec77e67e448734229255f16b8e0b1b4402f23095","date":1453748031,"type":3,"author":"jbernste","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/io/sql/DriverImpl#connect(String,Properties).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/io/sql/DriverImpl#connect(String,Properties).mjava","sourceNew":"  public Connection connect(String url, Properties props) throws SQLException {\n    if(!acceptsURL(url)) {\n      return null;\n    }\n\n    URI uri = processUrl(url);\n\n    loadParams(uri, props);\n\n    if (!props.containsKey(\"collection\")) {\n      throw new SQLException(\"The connection url has no connection properties. At a mininum the collection must be specified.\");\n    }\n    String collection = (String) props.remove(\"collection\");\n\n    if (!props.containsKey(\"aggregationMode\")) {\n      props.setProperty(\"aggregationMode\", \"facet\");\n    }\n\n    // JDBC requires metadata like field names from the SQLHandler. Force this property to be true.\n    props.setProperty(\"includeMetadata\", \"true\");\n\n    String zkHost = uri.getAuthority() + uri.getPath();\n\n    return new ConnectionImpl(url, zkHost, collection, props);\n  }\n\n","sourceOld":"  public Connection connect(String url, Properties props) throws SQLException {\n    if(!acceptsURL(url)) {\n      return null;\n    }\n\n    URI uri = processUrl(url);\n\n    loadParams(uri, props);\n\n    if (!props.containsKey(\"collection\")) {\n      throw new SQLException(\"The connection url has no connection properties. At a mininum the collection must be specified.\");\n    }\n    String collection = (String) props.remove(\"collection\");\n\n    if (!props.containsKey(\"aggregationMode\")) {\n      props.setProperty(\"aggregationMode\", \"facet\");\n    }\n\n    String zkHost = uri.getAuthority() + uri.getPath();\n\n    return new ConnectionImpl(url, zkHost, collection, props);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1e6acbaae7af722f17204ceccf0f7db5753eccf3","date":1454775255,"type":3,"author":"Mike McCandless","isMerge":true,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/io/sql/DriverImpl#connect(String,Properties).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/io/sql/DriverImpl#connect(String,Properties).mjava","sourceNew":"  public Connection connect(String url, Properties props) throws SQLException {\n    if(!acceptsURL(url)) {\n      return null;\n    }\n\n    URI uri = processUrl(url);\n\n    loadParams(uri, props);\n\n    if (!props.containsKey(\"collection\")) {\n      throw new SQLException(\"The connection url has no connection properties. At a mininum the collection must be specified.\");\n    }\n    String collection = (String) props.remove(\"collection\");\n\n    if (!props.containsKey(\"aggregationMode\")) {\n      props.setProperty(\"aggregationMode\", \"facet\");\n    }\n\n    // JDBC requires metadata like field names from the SQLHandler. Force this property to be true.\n    props.setProperty(\"includeMetadata\", \"true\");\n\n    String zkHost = uri.getAuthority() + uri.getPath();\n\n    return new ConnectionImpl(url, zkHost, collection, props);\n  }\n\n","sourceOld":"  public Connection connect(String url, Properties props) throws SQLException {\n    if(!acceptsURL(url)) {\n      return null;\n    }\n\n    URI uri = processUrl(url);\n\n    loadParams(uri, props);\n\n    if (!props.containsKey(\"collection\")) {\n      throw new SQLException(\"The connection url has no connection properties. At a mininum the collection must be specified.\");\n    }\n    String collection = (String) props.remove(\"collection\");\n\n    if (!props.containsKey(\"aggregationMode\")) {\n      props.setProperty(\"aggregationMode\", \"facet\");\n    }\n\n    String zkHost = uri.getAuthority() + uri.getPath();\n\n    return new ConnectionImpl(url, zkHost, collection, props);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"546740f8d88c7cb2343ec9a84ad18f24c66f1d82":["6209d9025a3f5ce74a8295606b15060efd4d7542"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"1e6acbaae7af722f17204ceccf0f7db5753eccf3":["5d70b751e35173c43ca80385daa4642aedd91a55","ec77e67e448734229255f16b8e0b1b4402f23095"],"6209d9025a3f5ce74a8295606b15060efd4d7542":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"ec77e67e448734229255f16b8e0b1b4402f23095":["5d70b751e35173c43ca80385daa4642aedd91a55"],"5d70b751e35173c43ca80385daa4642aedd91a55":["546740f8d88c7cb2343ec9a84ad18f24c66f1d82"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["ec77e67e448734229255f16b8e0b1b4402f23095"]},"commit2Childs":{"546740f8d88c7cb2343ec9a84ad18f24c66f1d82":["5d70b751e35173c43ca80385daa4642aedd91a55"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["6209d9025a3f5ce74a8295606b15060efd4d7542"],"1e6acbaae7af722f17204ceccf0f7db5753eccf3":[],"6209d9025a3f5ce74a8295606b15060efd4d7542":["546740f8d88c7cb2343ec9a84ad18f24c66f1d82"],"ec77e67e448734229255f16b8e0b1b4402f23095":["1e6acbaae7af722f17204ceccf0f7db5753eccf3","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"5d70b751e35173c43ca80385daa4642aedd91a55":["1e6acbaae7af722f17204ceccf0f7db5753eccf3","ec77e67e448734229255f16b8e0b1b4402f23095"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["1e6acbaae7af722f17204ceccf0f7db5753eccf3","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}