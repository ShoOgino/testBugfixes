{"path":"lucene/suggest/src/test/org/apache/lucene/search/suggest/analyzing/AnalyzingInfixSuggesterTest#performOperationWithAllOptionCombinations(SuggesterOperation).mjava","commits":[{"id":"e15af9ab52794c4f3888b19ff3cf55ccea043db2","date":1479337431,"type":0,"author":"Steve Rowe","isMerge":false,"pathNew":"lucene/suggest/src/test/org/apache/lucene/search/suggest/analyzing/AnalyzingInfixSuggesterTest#performOperationWithAllOptionCombinations(SuggesterOperation).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Perform the given operation on suggesters constructed with all combinations of options\n   * commitOnBuild and closeIndexWriterOnBuild, including defaults.\n   */\n  private void performOperationWithAllOptionCombinations(SuggesterOperation operation) throws Exception {\n    Analyzer a = new MockAnalyzer(random(), MockTokenizer.WHITESPACE, false);\n\n    AnalyzingInfixSuggester suggester = new AnalyzingInfixSuggester(newDirectory(), a);\n    operation.operate(suggester);\n    suggester.close();\n\n    suggester = new AnalyzingInfixSuggester(newDirectory(), a, a, 3, false);\n    operation.operate(suggester);\n    suggester.close();\n\n    suggester = new AnalyzingInfixSuggester(newDirectory(), a, a, 3, true);\n    operation.operate(suggester);\n    suggester.close();\n\n    suggester = new AnalyzingInfixSuggester(newDirectory(), a, a, 3, true,\n        AnalyzingInfixSuggester.DEFAULT_ALL_TERMS_REQUIRED, AnalyzingInfixSuggester.DEFAULT_HIGHLIGHT, true);\n    operation.operate(suggester);\n    suggester.close();\n\n    suggester = new AnalyzingInfixSuggester(newDirectory(), a, a, 3, true,\n        AnalyzingInfixSuggester.DEFAULT_ALL_TERMS_REQUIRED, AnalyzingInfixSuggester.DEFAULT_HIGHLIGHT, false);\n    operation.operate(suggester);\n    suggester.close();\n\n    suggester = new AnalyzingInfixSuggester(newDirectory(), a, a, 3, false,\n        AnalyzingInfixSuggester.DEFAULT_ALL_TERMS_REQUIRED, AnalyzingInfixSuggester.DEFAULT_HIGHLIGHT, true);\n    operation.operate(suggester);\n    suggester.close();\n\n    suggester = new AnalyzingInfixSuggester(newDirectory(), a, a, 3, false,\n        AnalyzingInfixSuggester.DEFAULT_ALL_TERMS_REQUIRED, AnalyzingInfixSuggester.DEFAULT_HIGHLIGHT, false);\n    operation.operate(suggester);\n    suggester.close();\n\n    a.close();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2e859e664a65796dadf8aaf65db6f66f3a885368","date":1479487334,"type":0,"author":"Kevin Risden","isMerge":true,"pathNew":"lucene/suggest/src/test/org/apache/lucene/search/suggest/analyzing/AnalyzingInfixSuggesterTest#performOperationWithAllOptionCombinations(SuggesterOperation).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Perform the given operation on suggesters constructed with all combinations of options\n   * commitOnBuild and closeIndexWriterOnBuild, including defaults.\n   */\n  private void performOperationWithAllOptionCombinations(SuggesterOperation operation) throws Exception {\n    Analyzer a = new MockAnalyzer(random(), MockTokenizer.WHITESPACE, false);\n\n    AnalyzingInfixSuggester suggester = new AnalyzingInfixSuggester(newDirectory(), a);\n    operation.operate(suggester);\n    suggester.close();\n\n    suggester = new AnalyzingInfixSuggester(newDirectory(), a, a, 3, false);\n    operation.operate(suggester);\n    suggester.close();\n\n    suggester = new AnalyzingInfixSuggester(newDirectory(), a, a, 3, true);\n    operation.operate(suggester);\n    suggester.close();\n\n    suggester = new AnalyzingInfixSuggester(newDirectory(), a, a, 3, true,\n        AnalyzingInfixSuggester.DEFAULT_ALL_TERMS_REQUIRED, AnalyzingInfixSuggester.DEFAULT_HIGHLIGHT, true);\n    operation.operate(suggester);\n    suggester.close();\n\n    suggester = new AnalyzingInfixSuggester(newDirectory(), a, a, 3, true,\n        AnalyzingInfixSuggester.DEFAULT_ALL_TERMS_REQUIRED, AnalyzingInfixSuggester.DEFAULT_HIGHLIGHT, false);\n    operation.operate(suggester);\n    suggester.close();\n\n    suggester = new AnalyzingInfixSuggester(newDirectory(), a, a, 3, false,\n        AnalyzingInfixSuggester.DEFAULT_ALL_TERMS_REQUIRED, AnalyzingInfixSuggester.DEFAULT_HIGHLIGHT, true);\n    operation.operate(suggester);\n    suggester.close();\n\n    suggester = new AnalyzingInfixSuggester(newDirectory(), a, a, 3, false,\n        AnalyzingInfixSuggester.DEFAULT_ALL_TERMS_REQUIRED, AnalyzingInfixSuggester.DEFAULT_HIGHLIGHT, false);\n    operation.operate(suggester);\n    suggester.close();\n\n    a.close();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"e15af9ab52794c4f3888b19ff3cf55ccea043db2":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"2e859e664a65796dadf8aaf65db6f66f3a885368":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","e15af9ab52794c4f3888b19ff3cf55ccea043db2"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["e15af9ab52794c4f3888b19ff3cf55ccea043db2"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["e15af9ab52794c4f3888b19ff3cf55ccea043db2","2e859e664a65796dadf8aaf65db6f66f3a885368"],"e15af9ab52794c4f3888b19ff3cf55ccea043db2":["2e859e664a65796dadf8aaf65db6f66f3a885368","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"2e859e664a65796dadf8aaf65db6f66f3a885368":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["2e859e664a65796dadf8aaf65db6f66f3a885368","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}