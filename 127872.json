{"path":"solr/core/src/java/org/apache/solr/analysis/CollationKeyFilterFactory#createFromRules(String,ResourceLoader).mjava","commits":[{"id":"c903c3d15906a3da96b8c0c2fb704491005fdbdb","date":1453508227,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/analysis/CollationKeyFilterFactory#createFromRules(String,ResourceLoader).mjava","pathOld":"solr/src/java/org/apache/solr/analysis/CollationKeyFilterFactory#createFromRules(String,ResourceLoader).mjava","sourceNew":"  /*\n   * Read custom rules from a file, and create a RuleBasedCollator\n   * The file cannot support comments, as # might be in the rules!\n   */\n  private Collator createFromRules(String fileName, ResourceLoader loader) {\n    InputStream input = null;\n    try {\n     input = loader.openResource(fileName);\n     String rules = IOUtils.toString(input, \"UTF-8\");\n     return new RuleBasedCollator(rules);\n    } catch (IOException e) {\n      // io error\n      throw new RuntimeException(e);\n    } catch (ParseException e) {\n      // invalid rules\n      throw new RuntimeException(e);\n    } finally {\n      IOUtils.closeQuietly(input);\n    }\n  }\n\n","sourceOld":"  /*\n   * Read custom rules from a file, and create a RuleBasedCollator\n   * The file cannot support comments, as # might be in the rules!\n   */\n  private Collator createFromRules(String fileName, ResourceLoader loader) {\n    InputStream input = null;\n    try {\n     input = loader.openResource(fileName);\n     String rules = IOUtils.toString(input, \"UTF-8\");\n     return new RuleBasedCollator(rules);\n    } catch (IOException e) {\n      // io error\n      throw new RuntimeException(e);\n    } catch (ParseException e) {\n      // invalid rules\n      throw new RuntimeException(e);\n    } finally {\n      IOUtils.closeQuietly(input);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a258fbb26824fd104ed795e5d9033d2d040049ee","date":1453508252,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/analysis/CollationKeyFilterFactory#createFromRules(String,ResourceLoader).mjava","pathOld":"solr/src/java/org/apache/solr/analysis/CollationKeyFilterFactory#createFromRules(String,ResourceLoader).mjava","sourceNew":"  /*\n   * Read custom rules from a file, and create a RuleBasedCollator\n   * The file cannot support comments, as # might be in the rules!\n   */\n  private Collator createFromRules(String fileName, ResourceLoader loader) {\n    InputStream input = null;\n    try {\n     input = loader.openResource(fileName);\n     String rules = IOUtils.toString(input, \"UTF-8\");\n     return new RuleBasedCollator(rules);\n    } catch (IOException e) {\n      // io error\n      throw new RuntimeException(e);\n    } catch (ParseException e) {\n      // invalid rules\n      throw new RuntimeException(e);\n    } finally {\n      IOUtils.closeQuietly(input);\n    }\n  }\n\n","sourceOld":"  /*\n   * Read custom rules from a file, and create a RuleBasedCollator\n   * The file cannot support comments, as # might be in the rules!\n   */\n  private Collator createFromRules(String fileName, ResourceLoader loader) {\n    InputStream input = null;\n    try {\n     input = loader.openResource(fileName);\n     String rules = IOUtils.toString(input, \"UTF-8\");\n     return new RuleBasedCollator(rules);\n    } catch (IOException e) {\n      // io error\n      throw new RuntimeException(e);\n    } catch (ParseException e) {\n      // invalid rules\n      throw new RuntimeException(e);\n    } finally {\n      IOUtils.closeQuietly(input);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/analysis/CollationKeyFilterFactory#createFromRules(String,ResourceLoader).mjava","pathOld":"solr/src/java/org/apache/solr/analysis/CollationKeyFilterFactory#createFromRules(String,ResourceLoader).mjava","sourceNew":"  /*\n   * Read custom rules from a file, and create a RuleBasedCollator\n   * The file cannot support comments, as # might be in the rules!\n   */\n  private Collator createFromRules(String fileName, ResourceLoader loader) {\n    InputStream input = null;\n    try {\n     input = loader.openResource(fileName);\n     String rules = IOUtils.toString(input, \"UTF-8\");\n     return new RuleBasedCollator(rules);\n    } catch (IOException e) {\n      // io error\n      throw new RuntimeException(e);\n    } catch (ParseException e) {\n      // invalid rules\n      throw new RuntimeException(e);\n    } finally {\n      IOUtils.closeQuietly(input);\n    }\n  }\n\n","sourceOld":"  /*\n   * Read custom rules from a file, and create a RuleBasedCollator\n   * The file cannot support comments, as # might be in the rules!\n   */\n  private Collator createFromRules(String fileName, ResourceLoader loader) {\n    InputStream input = null;\n    try {\n     input = loader.openResource(fileName);\n     String rules = IOUtils.toString(input, \"UTF-8\");\n     return new RuleBasedCollator(rules);\n    } catch (IOException e) {\n      // io error\n      throw new RuntimeException(e);\n    } catch (ParseException e) {\n      // invalid rules\n      throw new RuntimeException(e);\n    } finally {\n      IOUtils.closeQuietly(input);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"39d25aba1848c644c6d22b943d3d66f661445ac7","date":1335238294,"type":3,"author":"Christopher John Male","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/analysis/CollationKeyFilterFactory#createFromRules(String,ResourceLoader).mjava","pathOld":"solr/core/src/java/org/apache/solr/analysis/CollationKeyFilterFactory#createFromRules(String,ResourceLoader).mjava","sourceNew":"  /*\n   * Read custom rules from a file, and create a RuleBasedCollator\n   * The file cannot support comments, as # might be in the rules!\n   */\n  private Collator createFromRules(String fileName, ResourceLoader loader) {\n    InputStream input = null;\n    try {\n     input = loader.openResource(fileName);\n     String rules = IOUtils.toString(input, \"UTF-8\");\n     return new RuleBasedCollator(rules);\n    } catch (IOException e) {\n      // io error\n      throw new InitializationException(\"IOException thrown while loading rules\", e);\n    } catch (ParseException e) {\n      // invalid rules\n      throw new InitializationException(\"ParseException thrown while parsing rules\", e);\n    } finally {\n      IOUtils.closeQuietly(input);\n    }\n  }\n\n","sourceOld":"  /*\n   * Read custom rules from a file, and create a RuleBasedCollator\n   * The file cannot support comments, as # might be in the rules!\n   */\n  private Collator createFromRules(String fileName, ResourceLoader loader) {\n    InputStream input = null;\n    try {\n     input = loader.openResource(fileName);\n     String rules = IOUtils.toString(input, \"UTF-8\");\n     return new RuleBasedCollator(rules);\n    } catch (IOException e) {\n      // io error\n      throw new RuntimeException(e);\n    } catch (ParseException e) {\n      // invalid rules\n      throw new RuntimeException(e);\n    } finally {\n      IOUtils.closeQuietly(input);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e7e8d6f15900ee22ac3cb0a503f15dc952a3580f","date":1338430031,"type":4,"author":"Robert Muir","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/core/src/java/org/apache/solr/analysis/CollationKeyFilterFactory#createFromRules(String,ResourceLoader).mjava","sourceNew":null,"sourceOld":"  /*\n   * Read custom rules from a file, and create a RuleBasedCollator\n   * The file cannot support comments, as # might be in the rules!\n   */\n  private Collator createFromRules(String fileName, ResourceLoader loader) {\n    InputStream input = null;\n    try {\n     input = loader.openResource(fileName);\n     String rules = IOUtils.toString(input, \"UTF-8\");\n     return new RuleBasedCollator(rules);\n    } catch (IOException e) {\n      // io error\n      throw new InitializationException(\"IOException thrown while loading rules\", e);\n    } catch (ParseException e) {\n      // invalid rules\n      throw new InitializationException(\"ParseException thrown while parsing rules\", e);\n    } finally {\n      IOUtils.closeQuietly(input);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"e7e8d6f15900ee22ac3cb0a503f15dc952a3580f":["39d25aba1848c644c6d22b943d3d66f661445ac7"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"c26f00b574427b55127e869b935845554afde1fa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","c903c3d15906a3da96b8c0c2fb704491005fdbdb"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"39d25aba1848c644c6d22b943d3d66f661445ac7":["c26f00b574427b55127e869b935845554afde1fa"],"a258fbb26824fd104ed795e5d9033d2d040049ee":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["e7e8d6f15900ee22ac3cb0a503f15dc952a3580f"]},"commit2Childs":{"e7e8d6f15900ee22ac3cb0a503f15dc952a3580f":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["c26f00b574427b55127e869b935845554afde1fa"],"c26f00b574427b55127e869b935845554afde1fa":["39d25aba1848c644c6d22b943d3d66f661445ac7"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c903c3d15906a3da96b8c0c2fb704491005fdbdb","c26f00b574427b55127e869b935845554afde1fa","a258fbb26824fd104ed795e5d9033d2d040049ee"],"39d25aba1848c644c6d22b943d3d66f661445ac7":["e7e8d6f15900ee22ac3cb0a503f15dc952a3580f"],"a258fbb26824fd104ed795e5d9033d2d040049ee":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a258fbb26824fd104ed795e5d9033d2d040049ee","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}