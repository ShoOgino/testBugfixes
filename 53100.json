{"path":"lucene/spatial3d/src/test/org/apache/lucene/geo3d/TestGeo3DPoint#testBasic().mjava","commits":[{"id":"cab7a79353f33d1a94cd307bf33aa5148601ebe6","date":1453391888,"type":1,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/spatial3d/src/test/org/apache/lucene/geo3d/TestGeo3DPoint#testBasic().mjava","pathOld":"lucene/spatial3d/src/test/org/apache/lucene/geo3d/TestGeo3DPointField#testBasic().mjava","sourceNew":"  public void testBasic() throws Exception {\n    Directory dir = getDirectory();\n    IndexWriterConfig iwc = newIndexWriterConfig();\n    iwc.setCodec(getCodec());\n    IndexWriter w = new IndexWriter(dir, iwc);\n    Document doc = new Document();\n    doc.add(new Geo3DPoint(\"field\", PlanetModel.WGS84, toRadians(50.7345267), toRadians(-97.5303555)));\n    w.addDocument(doc);\n    IndexReader r = DirectoryReader.open(w, true);\n    // We can't wrap with \"exotic\" readers because the query must see the BKD3DDVFormat:\n    IndexSearcher s = newSearcher(r, false);\n    assertEquals(1, s.search(new PointInGeo3DShapeQuery(PlanetModel.WGS84,\n                                                        \"field\",\n                                                        GeoCircleFactory.makeGeoCircle(PlanetModel.WGS84, toRadians(50), toRadians(-97), Math.PI/180.)), 1).totalHits);\n    w.close();\n    r.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testBasic() throws Exception {\n    Directory dir = getDirectory();\n    IndexWriterConfig iwc = newIndexWriterConfig();\n    iwc.setCodec(getCodec());\n    IndexWriter w = new IndexWriter(dir, iwc);\n    Document doc = new Document();\n    doc.add(new Geo3DPointField(\"field\", PlanetModel.WGS84, toRadians(50.7345267), toRadians(-97.5303555)));\n    w.addDocument(doc);\n    IndexReader r = DirectoryReader.open(w, true);\n    // We can't wrap with \"exotic\" readers because the query must see the BKD3DDVFormat:\n    IndexSearcher s = newSearcher(r, false);\n    assertEquals(1, s.search(new PointInGeo3DShapeQuery(PlanetModel.WGS84,\n                                                        \"field\",\n                                                        GeoCircleFactory.makeGeoCircle(PlanetModel.WGS84, toRadians(50), toRadians(-97), Math.PI/180.)), 1).totalHits);\n    w.close();\n    r.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7b516a692d03225c8f0e81a13ceed2dc32bb457d","date":1453411951,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/spatial3d/src/test/org/apache/lucene/geo3d/TestGeo3DPoint#testBasic().mjava","pathOld":"lucene/spatial3d/src/test/org/apache/lucene/geo3d/TestGeo3DPoint#testBasic().mjava","sourceNew":"  public void testBasic() throws Exception {\n    Directory dir = getDirectory();\n    IndexWriterConfig iwc = newIndexWriterConfig();\n    iwc.setCodec(getCodec());\n    IndexWriter w = new IndexWriter(dir, iwc);\n    Document doc = new Document();\n    doc.add(new Geo3DPoint(\"field\", PlanetModel.WGS84, toRadians(50.7345267), toRadians(-97.5303555)));\n    w.addDocument(doc);\n    IndexReader r = DirectoryReader.open(w);\n    // We can't wrap with \"exotic\" readers because the query must see the BKD3DDVFormat:\n    IndexSearcher s = newSearcher(r, false);\n    assertEquals(1, s.search(new PointInGeo3DShapeQuery(PlanetModel.WGS84,\n                                                        \"field\",\n                                                        GeoCircleFactory.makeGeoCircle(PlanetModel.WGS84, toRadians(50), toRadians(-97), Math.PI/180.)), 1).totalHits);\n    w.close();\n    r.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testBasic() throws Exception {\n    Directory dir = getDirectory();\n    IndexWriterConfig iwc = newIndexWriterConfig();\n    iwc.setCodec(getCodec());\n    IndexWriter w = new IndexWriter(dir, iwc);\n    Document doc = new Document();\n    doc.add(new Geo3DPoint(\"field\", PlanetModel.WGS84, toRadians(50.7345267), toRadians(-97.5303555)));\n    w.addDocument(doc);\n    IndexReader r = DirectoryReader.open(w, true);\n    // We can't wrap with \"exotic\" readers because the query must see the BKD3DDVFormat:\n    IndexSearcher s = newSearcher(r, false);\n    assertEquals(1, s.search(new PointInGeo3DShapeQuery(PlanetModel.WGS84,\n                                                        \"field\",\n                                                        GeoCircleFactory.makeGeoCircle(PlanetModel.WGS84, toRadians(50), toRadians(-97), Math.PI/180.)), 1).totalHits);\n    w.close();\n    r.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"cf8357a0b6e20da8f78592ec8e53dbd375b1026b","date":1456330381,"type":3,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/spatial3d/src/test/org/apache/lucene/geo3d/TestGeo3DPoint#testBasic().mjava","pathOld":"lucene/spatial3d/src/test/org/apache/lucene/geo3d/TestGeo3DPoint#testBasic().mjava","sourceNew":"  public void testBasic() throws Exception {\n    Directory dir = getDirectory();\n    IndexWriterConfig iwc = newIndexWriterConfig();\n    iwc.setCodec(getCodec());\n    IndexWriter w = new IndexWriter(dir, iwc);\n    Document doc = new Document();\n    doc.add(new Geo3DPoint(\"field\", PlanetModel.WGS84, toRadians(50.7345267), toRadians(-97.5303555)));\n    w.addDocument(doc);\n    IndexReader r = DirectoryReader.open(w);\n    // We can't wrap with \"exotic\" readers because the query must see the BKD3DDVFormat:\n    IndexSearcher s = newSearcher(r, false);\n    assertEquals(1, s.search(Geo3DPoint.newShapeQuery(PlanetModel.WGS84,\n                                                      \"field\",\n                                                      GeoCircleFactory.makeGeoCircle(PlanetModel.WGS84, toRadians(50), toRadians(-97), Math.PI/180.)), 1).totalHits);\n    w.close();\n    r.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testBasic() throws Exception {\n    Directory dir = getDirectory();\n    IndexWriterConfig iwc = newIndexWriterConfig();\n    iwc.setCodec(getCodec());\n    IndexWriter w = new IndexWriter(dir, iwc);\n    Document doc = new Document();\n    doc.add(new Geo3DPoint(\"field\", PlanetModel.WGS84, toRadians(50.7345267), toRadians(-97.5303555)));\n    w.addDocument(doc);\n    IndexReader r = DirectoryReader.open(w);\n    // We can't wrap with \"exotic\" readers because the query must see the BKD3DDVFormat:\n    IndexSearcher s = newSearcher(r, false);\n    assertEquals(1, s.search(new PointInGeo3DShapeQuery(PlanetModel.WGS84,\n                                                        \"field\",\n                                                        GeoCircleFactory.makeGeoCircle(PlanetModel.WGS84, toRadians(50), toRadians(-97), Math.PI/180.)), 1).totalHits);\n    w.close();\n    r.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e79a60784094f4a1d4e4b03b3e8086bf55d3eeed","date":1456346320,"type":3,"author":"Mike McCandless","isMerge":true,"pathNew":"lucene/spatial3d/src/test/org/apache/lucene/geo3d/TestGeo3DPoint#testBasic().mjava","pathOld":"lucene/spatial3d/src/test/org/apache/lucene/geo3d/TestGeo3DPoint#testBasic().mjava","sourceNew":"  public void testBasic() throws Exception {\n    Directory dir = getDirectory();\n    IndexWriterConfig iwc = newIndexWriterConfig();\n    iwc.setCodec(getCodec());\n    IndexWriter w = new IndexWriter(dir, iwc);\n    Document doc = new Document();\n    doc.add(new Geo3DPoint(\"field\", PlanetModel.WGS84, toRadians(50.7345267), toRadians(-97.5303555)));\n    w.addDocument(doc);\n    IndexReader r = DirectoryReader.open(w);\n    // We can't wrap with \"exotic\" readers because the query must see the BKD3DDVFormat:\n    IndexSearcher s = newSearcher(r, false);\n    assertEquals(1, s.search(Geo3DPoint.newShapeQuery(PlanetModel.WGS84,\n                                                      \"field\",\n                                                      GeoCircleFactory.makeGeoCircle(PlanetModel.WGS84, toRadians(50), toRadians(-97), Math.PI/180.)), 1).totalHits);\n    w.close();\n    r.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testBasic() throws Exception {\n    Directory dir = getDirectory();\n    IndexWriterConfig iwc = newIndexWriterConfig();\n    iwc.setCodec(getCodec());\n    IndexWriter w = new IndexWriter(dir, iwc);\n    Document doc = new Document();\n    doc.add(new Geo3DPoint(\"field\", PlanetModel.WGS84, toRadians(50.7345267), toRadians(-97.5303555)));\n    w.addDocument(doc);\n    IndexReader r = DirectoryReader.open(w);\n    // We can't wrap with \"exotic\" readers because the query must see the BKD3DDVFormat:\n    IndexSearcher s = newSearcher(r, false);\n    assertEquals(1, s.search(new PointInGeo3DShapeQuery(PlanetModel.WGS84,\n                                                        \"field\",\n                                                        GeoCircleFactory.makeGeoCircle(PlanetModel.WGS84, toRadians(50), toRadians(-97), Math.PI/180.)), 1).totalHits);\n    w.close();\n    r.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"171684e0272517c4ed0b7e61af869397e512d8e5","date":1457346184,"type":3,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/spatial3d/src/test/org/apache/lucene/geo3d/TestGeo3DPoint#testBasic().mjava","pathOld":"lucene/spatial3d/src/test/org/apache/lucene/geo3d/TestGeo3DPoint#testBasic().mjava","sourceNew":"  public void testBasic() throws Exception {\n    Directory dir = getDirectory();\n    IndexWriterConfig iwc = newIndexWriterConfig();\n    iwc.setCodec(getCodec());\n    IndexWriter w = new IndexWriter(dir, iwc);\n    Document doc = new Document();\n    doc.add(new Geo3DPoint(\"field\", toRadians(50.7345267), toRadians(-97.5303555)));\n    w.addDocument(doc);\n    IndexReader r = DirectoryReader.open(w);\n    // We can't wrap with \"exotic\" readers because the query must see the BKD3DDVFormat:\n    IndexSearcher s = newSearcher(r, false);\n    assertEquals(1, s.search(Geo3DPoint.newShapeQuery(\"field\",\n                                                      GeoCircleFactory.makeGeoCircle(PlanetModel.WGS84, toRadians(50), toRadians(-97), Math.PI/180.)), 1).totalHits);\n    w.close();\n    r.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testBasic() throws Exception {\n    Directory dir = getDirectory();\n    IndexWriterConfig iwc = newIndexWriterConfig();\n    iwc.setCodec(getCodec());\n    IndexWriter w = new IndexWriter(dir, iwc);\n    Document doc = new Document();\n    doc.add(new Geo3DPoint(\"field\", PlanetModel.WGS84, toRadians(50.7345267), toRadians(-97.5303555)));\n    w.addDocument(doc);\n    IndexReader r = DirectoryReader.open(w);\n    // We can't wrap with \"exotic\" readers because the query must see the BKD3DDVFormat:\n    IndexSearcher s = newSearcher(r, false);\n    assertEquals(1, s.search(Geo3DPoint.newShapeQuery(PlanetModel.WGS84,\n                                                      \"field\",\n                                                      GeoCircleFactory.makeGeoCircle(PlanetModel.WGS84, toRadians(50), toRadians(-97), Math.PI/180.)), 1).totalHits);\n    w.close();\n    r.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b4e444678504caf66a8060b1d514383aa4feac0c","date":1457399659,"type":5,"author":"David Smiley","isMerge":false,"pathNew":"lucene/spatial3d/src/test/org/apache/lucene/spatial3d/TestGeo3DPoint#testBasic().mjava","pathOld":"lucene/spatial3d/src/test/org/apache/lucene/geo3d/TestGeo3DPoint#testBasic().mjava","sourceNew":"  public void testBasic() throws Exception {\n    Directory dir = getDirectory();\n    IndexWriterConfig iwc = newIndexWriterConfig();\n    iwc.setCodec(getCodec());\n    IndexWriter w = new IndexWriter(dir, iwc);\n    Document doc = new Document();\n    doc.add(new Geo3DPoint(\"field\", toRadians(50.7345267), toRadians(-97.5303555)));\n    w.addDocument(doc);\n    IndexReader r = DirectoryReader.open(w);\n    // We can't wrap with \"exotic\" readers because the query must see the BKD3DDVFormat:\n    IndexSearcher s = newSearcher(r, false);\n    assertEquals(1, s.search(Geo3DPoint.newShapeQuery(\"field\",\n                                                      GeoCircleFactory.makeGeoCircle(PlanetModel.WGS84, toRadians(50), toRadians(-97), Math.PI/180.)), 1).totalHits);\n    w.close();\n    r.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testBasic() throws Exception {\n    Directory dir = getDirectory();\n    IndexWriterConfig iwc = newIndexWriterConfig();\n    iwc.setCodec(getCodec());\n    IndexWriter w = new IndexWriter(dir, iwc);\n    Document doc = new Document();\n    doc.add(new Geo3DPoint(\"field\", toRadians(50.7345267), toRadians(-97.5303555)));\n    w.addDocument(doc);\n    IndexReader r = DirectoryReader.open(w);\n    // We can't wrap with \"exotic\" readers because the query must see the BKD3DDVFormat:\n    IndexSearcher s = newSearcher(r, false);\n    assertEquals(1, s.search(Geo3DPoint.newShapeQuery(\"field\",\n                                                      GeoCircleFactory.makeGeoCircle(PlanetModel.WGS84, toRadians(50), toRadians(-97), Math.PI/180.)), 1).totalHits);\n    w.close();\n    r.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"cf8357a0b6e20da8f78592ec8e53dbd375b1026b":["7b516a692d03225c8f0e81a13ceed2dc32bb457d"],"cab7a79353f33d1a94cd307bf33aa5148601ebe6":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"e79a60784094f4a1d4e4b03b3e8086bf55d3eeed":["7b516a692d03225c8f0e81a13ceed2dc32bb457d","cf8357a0b6e20da8f78592ec8e53dbd375b1026b"],"171684e0272517c4ed0b7e61af869397e512d8e5":["cf8357a0b6e20da8f78592ec8e53dbd375b1026b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"7b516a692d03225c8f0e81a13ceed2dc32bb457d":["cab7a79353f33d1a94cd307bf33aa5148601ebe6"],"b4e444678504caf66a8060b1d514383aa4feac0c":["171684e0272517c4ed0b7e61af869397e512d8e5"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b4e444678504caf66a8060b1d514383aa4feac0c"]},"commit2Childs":{"cf8357a0b6e20da8f78592ec8e53dbd375b1026b":["e79a60784094f4a1d4e4b03b3e8086bf55d3eeed","171684e0272517c4ed0b7e61af869397e512d8e5"],"cab7a79353f33d1a94cd307bf33aa5148601ebe6":["7b516a692d03225c8f0e81a13ceed2dc32bb457d"],"e79a60784094f4a1d4e4b03b3e8086bf55d3eeed":[],"171684e0272517c4ed0b7e61af869397e512d8e5":["b4e444678504caf66a8060b1d514383aa4feac0c"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cab7a79353f33d1a94cd307bf33aa5148601ebe6"],"7b516a692d03225c8f0e81a13ceed2dc32bb457d":["cf8357a0b6e20da8f78592ec8e53dbd375b1026b","e79a60784094f4a1d4e4b03b3e8086bf55d3eeed"],"b4e444678504caf66a8060b1d514383aa4feac0c":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["e79a60784094f4a1d4e4b03b3e8086bf55d3eeed","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}