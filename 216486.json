{"path":"src/test/org/apache/lucene/util/LuceneTestCase#setUp().mjava","commits":[{"id":"290c401c31db375e771805c3ba7ac5f64c7370dc","date":1192034795,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"src/test/org/apache/lucene/util/LuceneTestCase#setUp().mjava","pathOld":"/dev/null","sourceNew":"  protected void setUp() throws Exception {\n    ConcurrentMergeScheduler.setTestMode();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"74a5e7f20b4a444da9df3b2c0f331fa7a1f64223","date":1227051709,"type":3,"author":"Michael Busch","isMerge":false,"pathNew":"src/test/org/apache/lucene/util/LuceneTestCase#setUp().mjava","pathOld":"src/test/org/apache/lucene/util/LuceneTestCase#setUp().mjava","sourceNew":"  protected void setUp() throws Exception {\n    ConcurrentMergeScheduler.setTestMode();\n    TokenStream.setUseNewAPIDefault(true);\n  }\n\n","sourceOld":"  protected void setUp() throws Exception {\n    ConcurrentMergeScheduler.setTestMode();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ec8b5a20a12931b8d7e616c79c5248ae06cc5568","date":1248471948,"type":3,"author":"Michael Busch","isMerge":false,"pathNew":"src/test/org/apache/lucene/util/LuceneTestCase#setUp().mjava","pathOld":"src/test/org/apache/lucene/util/LuceneTestCase#setUp().mjava","sourceNew":"  protected void setUp() throws Exception {\n    ConcurrentMergeScheduler.setTestMode();\n  }\n\n","sourceOld":"  protected void setUp() throws Exception {\n    ConcurrentMergeScheduler.setTestMode();\n    TokenStream.setUseNewAPIDefault(true);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"efa6f2b2265151f8faaf69272253e065734ec9d4","date":1250942675,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/test/org/apache/lucene/util/LuceneTestCase#setUp().mjava","pathOld":"src/test/org/apache/lucene/util/LuceneTestCase#setUp().mjava","sourceNew":"  protected void setUp() throws Exception {\n    super.setUp();\n    ConcurrentMergeScheduler.setTestMode();\n    TokenStream.setOnlyUseNewAPI(false);\n  }\n\n","sourceOld":"  protected void setUp() throws Exception {\n    ConcurrentMergeScheduler.setTestMode();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9fa6d7a7e7208b52f1b0c4c87005d34ab0dd37dc","date":1251117853,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/test/org/apache/lucene/util/LuceneTestCase#setUp().mjava","pathOld":"src/test/org/apache/lucene/util/LuceneTestCase#setUp().mjava","sourceNew":"  protected void setUp() throws Exception {\n    super.setUp();\n    ConcurrentMergeScheduler.setTestMode();\n    \n    savedAPISetting = TokenStream.getOnlyUseNewAPI();\n    TokenStream.setOnlyUseNewAPI(false);\n  }\n\n","sourceOld":"  protected void setUp() throws Exception {\n    super.setUp();\n    ConcurrentMergeScheduler.setTestMode();\n    TokenStream.setOnlyUseNewAPI(false);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e8d1458a2543cbd30cbfe7929be4dcb5c5251659","date":1254582241,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/test/org/apache/lucene/util/LuceneTestCase#setUp().mjava","pathOld":"src/test/org/apache/lucene/util/LuceneTestCase#setUp().mjava","sourceNew":"  protected void setUp() throws Exception {\n    super.setUp();\n    ConcurrentMergeScheduler.setTestMode();\n  }\n\n","sourceOld":"  protected void setUp() throws Exception {\n    super.setUp();\n    ConcurrentMergeScheduler.setTestMode();\n    \n    savedAPISetting = TokenStream.getOnlyUseNewAPI();\n    TokenStream.setOnlyUseNewAPI(false);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0a046c0c310bc77931fc8441bd920053b607dd14","date":1254584734,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"src/test/org/apache/lucene/util/LuceneTestCase#setUp().mjava","pathOld":"src/test/org/apache/lucene/util/LuceneTestCase#setUp().mjava","sourceNew":"  protected void setUp() throws Exception {\n    super.setUp();\n    ConcurrentMergeScheduler.setTestMode();\n  }\n\n","sourceOld":"  protected void setUp() throws Exception {\n    super.setUp();\n    ConcurrentMergeScheduler.setTestMode();\n    \n    savedAPISetting = TokenStream.getOnlyUseNewAPI();\n    TokenStream.setOnlyUseNewAPI(false);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1326054a8d3aa66382d49decc7f330955c9c6f71","date":1257386139,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/test/org/apache/lucene/util/LuceneTestCase#setUp().mjava","pathOld":"src/test/org/apache/lucene/util/LuceneTestCase#setUp().mjava","sourceNew":"  @Override\n  protected void setUp() throws Exception {\n    super.setUp();\n    ConcurrentMergeScheduler.setTestMode();\n  }\n\n","sourceOld":"  protected void setUp() throws Exception {\n    super.setUp();\n    ConcurrentMergeScheduler.setTestMode();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"48a042c3df37e281328101a2e1dbb50202b08915","date":1266742053,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/test/org/apache/lucene/util/LuceneTestCase#setUp().mjava","pathOld":"src/test/org/apache/lucene/util/LuceneTestCase#setUp().mjava","sourceNew":"  @Override\n  protected void setUp() throws Exception {\n    super.setUp();\n    ConcurrentMergeScheduler.setTestMode();\n    savedBoolMaxClauseCount = BooleanQuery.getMaxClauseCount();\n  }\n\n","sourceOld":"  @Override\n  protected void setUp() throws Exception {\n    super.setUp();\n    ConcurrentMergeScheduler.setTestMode();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d5ff9e61d5748484a6d8e00a9cb7689cb4841922","date":1266772579,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/test/org/apache/lucene/util/LuceneTestCase#setUp().mjava","pathOld":"src/test/org/apache/lucene/util/LuceneTestCase#setUp().mjava","sourceNew":"  @Override\n  protected void setUp() throws Exception {\n    super.setUp();\n    \n    savedUncaughtExceptionHandler = Thread.getDefaultUncaughtExceptionHandler();\n    Thread.setDefaultUncaughtExceptionHandler(new Thread.UncaughtExceptionHandler() {\n      public void uncaughtException(Thread t, Throwable e) {\n        uncaughtExceptions.add(new UncaughtExceptionEntry(t, e));\n        if (savedUncaughtExceptionHandler != null)\n          savedUncaughtExceptionHandler.uncaughtException(t, e);\n      }\n    });\n    \n    ConcurrentMergeScheduler.setTestMode();\n    savedBoolMaxClauseCount = BooleanQuery.getMaxClauseCount();\n  }\n\n","sourceOld":"  @Override\n  protected void setUp() throws Exception {\n    super.setUp();\n    ConcurrentMergeScheduler.setTestMode();\n    savedBoolMaxClauseCount = BooleanQuery.getMaxClauseCount();\n  }\n\n","bugFix":null,"bugIntro":["558b125bbf6fa91eb5355da7e849d46edaf735bc","558b125bbf6fa91eb5355da7e849d46edaf735bc","558b125bbf6fa91eb5355da7e849d46edaf735bc"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/util/LuceneTestCase#setUp().mjava","pathOld":"src/test/org/apache/lucene/util/LuceneTestCase#setUp().mjava","sourceNew":"  @Override\n  protected void setUp() throws Exception {\n    super.setUp();\n    \n    savedUncaughtExceptionHandler = Thread.getDefaultUncaughtExceptionHandler();\n    Thread.setDefaultUncaughtExceptionHandler(new Thread.UncaughtExceptionHandler() {\n      public void uncaughtException(Thread t, Throwable e) {\n        uncaughtExceptions.add(new UncaughtExceptionEntry(t, e));\n        if (savedUncaughtExceptionHandler != null)\n          savedUncaughtExceptionHandler.uncaughtException(t, e);\n      }\n    });\n    \n    ConcurrentMergeScheduler.setTestMode();\n    savedBoolMaxClauseCount = BooleanQuery.getMaxClauseCount();\n  }\n\n","sourceOld":"  @Override\n  protected void setUp() throws Exception {\n    super.setUp();\n    \n    savedUncaughtExceptionHandler = Thread.getDefaultUncaughtExceptionHandler();\n    Thread.setDefaultUncaughtExceptionHandler(new Thread.UncaughtExceptionHandler() {\n      public void uncaughtException(Thread t, Throwable e) {\n        uncaughtExceptions.add(new UncaughtExceptionEntry(t, e));\n        if (savedUncaughtExceptionHandler != null)\n          savedUncaughtExceptionHandler.uncaughtException(t, e);\n      }\n    });\n    \n    ConcurrentMergeScheduler.setTestMode();\n    savedBoolMaxClauseCount = BooleanQuery.getMaxClauseCount();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"74a5e7f20b4a444da9df3b2c0f331fa7a1f64223":["290c401c31db375e771805c3ba7ac5f64c7370dc"],"48a042c3df37e281328101a2e1dbb50202b08915":["1326054a8d3aa66382d49decc7f330955c9c6f71"],"0a046c0c310bc77931fc8441bd920053b607dd14":["9fa6d7a7e7208b52f1b0c4c87005d34ab0dd37dc","e8d1458a2543cbd30cbfe7929be4dcb5c5251659"],"efa6f2b2265151f8faaf69272253e065734ec9d4":["ec8b5a20a12931b8d7e616c79c5248ae06cc5568"],"1326054a8d3aa66382d49decc7f330955c9c6f71":["0a046c0c310bc77931fc8441bd920053b607dd14"],"e8d1458a2543cbd30cbfe7929be4dcb5c5251659":["9fa6d7a7e7208b52f1b0c4c87005d34ab0dd37dc"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"290c401c31db375e771805c3ba7ac5f64c7370dc":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"d5ff9e61d5748484a6d8e00a9cb7689cb4841922":["48a042c3df37e281328101a2e1dbb50202b08915"],"9fa6d7a7e7208b52f1b0c4c87005d34ab0dd37dc":["efa6f2b2265151f8faaf69272253e065734ec9d4"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["d5ff9e61d5748484a6d8e00a9cb7689cb4841922"],"ec8b5a20a12931b8d7e616c79c5248ae06cc5568":["74a5e7f20b4a444da9df3b2c0f331fa7a1f64223"]},"commit2Childs":{"74a5e7f20b4a444da9df3b2c0f331fa7a1f64223":["ec8b5a20a12931b8d7e616c79c5248ae06cc5568"],"48a042c3df37e281328101a2e1dbb50202b08915":["d5ff9e61d5748484a6d8e00a9cb7689cb4841922"],"0a046c0c310bc77931fc8441bd920053b607dd14":["1326054a8d3aa66382d49decc7f330955c9c6f71"],"efa6f2b2265151f8faaf69272253e065734ec9d4":["9fa6d7a7e7208b52f1b0c4c87005d34ab0dd37dc"],"1326054a8d3aa66382d49decc7f330955c9c6f71":["48a042c3df37e281328101a2e1dbb50202b08915"],"e8d1458a2543cbd30cbfe7929be4dcb5c5251659":["0a046c0c310bc77931fc8441bd920053b607dd14"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["290c401c31db375e771805c3ba7ac5f64c7370dc"],"290c401c31db375e771805c3ba7ac5f64c7370dc":["74a5e7f20b4a444da9df3b2c0f331fa7a1f64223"],"d5ff9e61d5748484a6d8e00a9cb7689cb4841922":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9fa6d7a7e7208b52f1b0c4c87005d34ab0dd37dc":["0a046c0c310bc77931fc8441bd920053b607dd14","e8d1458a2543cbd30cbfe7929be4dcb5c5251659"],"ec8b5a20a12931b8d7e616c79c5248ae06cc5568":["efa6f2b2265151f8faaf69272253e065734ec9d4"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}