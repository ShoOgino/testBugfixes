{"path":"solr/test-framework/src/java/org/apache/solr/cloud/ZkTestServer#shutdown().mjava","commits":[{"id":"2c30e4c1cee08b3b229a77991882594fe7250b66","date":1344448871,"type":1,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/cloud/ZkTestServer#shutdown().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/ZkTestServer#shutdown().mjava","sourceNew":"  @SuppressWarnings(\"deprecation\")\n  public void shutdown() throws IOException {\n    // TODO: this can log an exception while trying to unregister a JMX MBean\n    zkServer.shutdown();\n  }\n\n","sourceOld":"  @SuppressWarnings(\"deprecation\")\n  public void shutdown() throws IOException {\n    // TODO: this can log an exception while trying to unregister a JMX MBean\n    zkServer.shutdown();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d6f074e73200c07d54f242d3880a8da5a35ff97b","date":1344507653,"type":1,"author":"Uwe Schindler","isMerge":true,"pathNew":"solr/test-framework/src/java/org/apache/solr/cloud/ZkTestServer#shutdown().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/ZkTestServer#shutdown().mjava","sourceNew":"  @SuppressWarnings(\"deprecation\")\n  public void shutdown() throws IOException {\n    // TODO: this can log an exception while trying to unregister a JMX MBean\n    zkServer.shutdown();\n  }\n\n","sourceOld":"  @SuppressWarnings(\"deprecation\")\n  public void shutdown() throws IOException {\n    // TODO: this can log an exception while trying to unregister a JMX MBean\n    zkServer.shutdown();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c7869f64c874ebf7f317d22c00baf2b6857797a6","date":1344856617,"type":1,"author":"Michael McCandless","isMerge":true,"pathNew":"solr/test-framework/src/java/org/apache/solr/cloud/ZkTestServer#shutdown().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/ZkTestServer#shutdown().mjava","sourceNew":"  @SuppressWarnings(\"deprecation\")\n  public void shutdown() throws IOException {\n    // TODO: this can log an exception while trying to unregister a JMX MBean\n    zkServer.shutdown();\n  }\n\n","sourceOld":"  @SuppressWarnings(\"deprecation\")\n  public void shutdown() throws IOException {\n    // TODO: this can log an exception while trying to unregister a JMX MBean\n    zkServer.shutdown();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1416f9d09d016a6894cd17e1caac137dad2bba59","date":1395941020,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/cloud/ZkTestServer#shutdown().mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/cloud/ZkTestServer#shutdown().mjava","sourceNew":"  @SuppressWarnings(\"deprecation\")\n  public void shutdown() throws IOException, InterruptedException {\n    // TODO: this can log an exception while trying to unregister a JMX MBean\n    zkServer.shutdown();\n    try {\n      zooThread.join();\n    } catch (NullPointerException e) {\n      // okay\n    }\n  }\n\n","sourceOld":"  @SuppressWarnings(\"deprecation\")\n  public void shutdown() throws IOException {\n    // TODO: this can log an exception while trying to unregister a JMX MBean\n    zkServer.shutdown();\n  }\n\n","bugFix":null,"bugIntro":["bb222a3f9d9421d5c95afce73013fbd8de07ea1f"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"bb1f22cfa77230b5f05b7784feae5367f6bbb488","date":1395968145,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/cloud/ZkTestServer#shutdown().mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/cloud/ZkTestServer#shutdown().mjava","sourceNew":"  @SuppressWarnings(\"deprecation\")\n  public void shutdown() throws IOException, InterruptedException {\n    // TODO: this can log an exception while trying to unregister a JMX MBean\n    zkServer.shutdown();\n    try {\n      zooThread.join();\n    } catch (NullPointerException e) {\n      // okay\n    }\n  }\n\n","sourceOld":"  @SuppressWarnings(\"deprecation\")\n  public void shutdown() throws IOException {\n    // TODO: this can log an exception while trying to unregister a JMX MBean\n    zkServer.shutdown();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"dd8a9ad1acc754f713e220250044c2bf06a22a0b","date":1518740056,"type":3,"author":"Tomas Fernandez Lobbe","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/cloud/ZkTestServer#shutdown().mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/cloud/ZkTestServer#shutdown().mjava","sourceNew":"  public void shutdown() throws IOException, InterruptedException {\n    // TODO: this can log an exception while trying to unregister a JMX MBean\n    zkServer.shutdown();\n    try {\n      zooThread.join();\n    } catch (NullPointerException e) {\n      // okay\n    }\n  }\n\n","sourceOld":"  @SuppressWarnings(\"deprecation\")\n  public void shutdown() throws IOException, InterruptedException {\n    // TODO: this can log an exception while trying to unregister a JMX MBean\n    zkServer.shutdown();\n    try {\n      zooThread.join();\n    } catch (NullPointerException e) {\n      // okay\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"bb222a3f9d9421d5c95afce73013fbd8de07ea1f","date":1543514331,"type":3,"author":"markrmiller","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/cloud/ZkTestServer#shutdown().mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/cloud/ZkTestServer#shutdown().mjava","sourceNew":"  public void shutdown() throws IOException, InterruptedException {\n    log.info(\"Shutting down ZkTestServer.\");\n    try {\n      IOUtils.closeQuietly(rootClient);\n      IOUtils.closeQuietly(chRootClient);\n    } finally {\n\n      // TODO: this can log an exception while trying to unregister a JMX MBean\n      try {\n        zkServer.shutdown();\n      } catch (Exception e) {\n        log.error(\"Exception shutting down ZooKeeper Test Server\",e);\n      }\n      while (true) {\n        try {\n          zooThread.join();\n          ObjectReleaseTracker.release(zooThread);\n          zooThread = null;\n          break;\n        } catch (InterruptedException e) {\n          // don't keep interrupted status\n        } catch (NullPointerException e) {\n          // okay\n          break;\n        }\n      }\n    }\n    ObjectReleaseTracker.release(this);\n  }\n\n","sourceOld":"  public void shutdown() throws IOException, InterruptedException {\n    // TODO: this can log an exception while trying to unregister a JMX MBean\n    zkServer.shutdown();\n    try {\n      zooThread.join();\n    } catch (NullPointerException e) {\n      // okay\n    }\n  }\n\n","bugFix":["2c007e7c4cf8c55bc2a5884e315123afaaeec87f","1416f9d09d016a6894cd17e1caac137dad2bba59","bed62fe6383040eaff2ec720cdc55bb1462c61da"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"93fdefa3dfa2ba2532705ca654c5b70e7d91a043","date":1544457778,"type":3,"author":"markrmiller","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/cloud/ZkTestServer#shutdown().mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/cloud/ZkTestServer#shutdown().mjava","sourceNew":"  public void shutdown() throws IOException, InterruptedException {\n    log.info(\"Shutting down ZkTestServer.\");\n    try {\n      IOUtils.closeQuietly(rootClient);\n      IOUtils.closeQuietly(chRootClient);\n    } finally {\n\n      // TODO: this can log an exception while trying to unregister a JMX MBean\n      try {\n        zkServer.shutdown();\n      } catch (Exception e) {\n        log.error(\"Exception shutting down ZooKeeper Test Server\",e);\n      }\n      \n      if (zkDb != null) {\n        zkDb.close();\n      }\n      \n      while (true) {\n        try {\n          zooThread.join();\n          ObjectReleaseTracker.release(zooThread);\n          zooThread = null;\n          break;\n        } catch (InterruptedException e) {\n          // don't keep interrupted status\n        } catch (NullPointerException e) {\n          // okay\n          break;\n        }\n      }\n    }\n    ObjectReleaseTracker.release(this);\n  }\n\n","sourceOld":"  public void shutdown() throws IOException, InterruptedException {\n    log.info(\"Shutting down ZkTestServer.\");\n    try {\n      IOUtils.closeQuietly(rootClient);\n      IOUtils.closeQuietly(chRootClient);\n    } finally {\n\n      // TODO: this can log an exception while trying to unregister a JMX MBean\n      try {\n        zkServer.shutdown();\n      } catch (Exception e) {\n        log.error(\"Exception shutting down ZooKeeper Test Server\",e);\n      }\n      while (true) {\n        try {\n          zooThread.join();\n          ObjectReleaseTracker.release(zooThread);\n          zooThread = null;\n          break;\n        } catch (InterruptedException e) {\n          // don't keep interrupted status\n        } catch (NullPointerException e) {\n          // okay\n          break;\n        }\n      }\n    }\n    ObjectReleaseTracker.release(this);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0db83f1bb855a4ac824c9a2a8e1ee9b29a039c15","date":1554259533,"type":3,"author":"Gus Heck","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/cloud/ZkTestServer#shutdown().mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/cloud/ZkTestServer#shutdown().mjava","sourceNew":"  public void shutdown() throws IOException, InterruptedException {\n    log.info(\"Shutting down ZkTestServer.\");\n    try {\n      IOUtils.closeQuietly(rootClient);\n      IOUtils.closeQuietly(chRootClient);\n    } finally {\n\n      // TODO: this can log an exception while trying to unregister a JMX MBean\n      try {\n        zkServer.shutdown();\n      } catch (Exception e) {\n        log.error(\"Exception shutting down ZooKeeper Test Server\",e);\n      }\n\n      if (zkDb != null) {\n        zkDb.close();\n      }\n\n      while (true) {\n        try {\n          zooThread.join();\n          ObjectReleaseTracker.release(zooThread);\n          zooThread = null;\n          break;\n        } catch (InterruptedException e) {\n          // don't keep interrupted status\n        } catch (NullPointerException e) {\n          // okay\n          break;\n        }\n      }\n    }\n    ObjectReleaseTracker.release(this);\n  }\n\n","sourceOld":"  public void shutdown() throws IOException, InterruptedException {\n    log.info(\"Shutting down ZkTestServer.\");\n    try {\n      IOUtils.closeQuietly(rootClient);\n      IOUtils.closeQuietly(chRootClient);\n    } finally {\n\n      // TODO: this can log an exception while trying to unregister a JMX MBean\n      try {\n        zkServer.shutdown();\n      } catch (Exception e) {\n        log.error(\"Exception shutting down ZooKeeper Test Server\",e);\n      }\n      \n      if (zkDb != null) {\n        zkDb.close();\n      }\n      \n      while (true) {\n        try {\n          zooThread.join();\n          ObjectReleaseTracker.release(zooThread);\n          zooThread = null;\n          break;\n        } catch (InterruptedException e) {\n          // don't keep interrupted status\n        } catch (NullPointerException e) {\n          // okay\n          break;\n        }\n      }\n    }\n    ObjectReleaseTracker.release(this);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"dd8a9ad1acc754f713e220250044c2bf06a22a0b":["1416f9d09d016a6894cd17e1caac137dad2bba59"],"bb1f22cfa77230b5f05b7784feae5367f6bbb488":["2c30e4c1cee08b3b229a77991882594fe7250b66"],"c7869f64c874ebf7f317d22c00baf2b6857797a6":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","2c30e4c1cee08b3b229a77991882594fe7250b66"],"bb222a3f9d9421d5c95afce73013fbd8de07ea1f":["dd8a9ad1acc754f713e220250044c2bf06a22a0b"],"1416f9d09d016a6894cd17e1caac137dad2bba59":["2c30e4c1cee08b3b229a77991882594fe7250b66"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"d6f074e73200c07d54f242d3880a8da5a35ff97b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","2c30e4c1cee08b3b229a77991882594fe7250b66"],"0db83f1bb855a4ac824c9a2a8e1ee9b29a039c15":["93fdefa3dfa2ba2532705ca654c5b70e7d91a043"],"93fdefa3dfa2ba2532705ca654c5b70e7d91a043":["bb222a3f9d9421d5c95afce73013fbd8de07ea1f"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["0db83f1bb855a4ac824c9a2a8e1ee9b29a039c15"],"2c30e4c1cee08b3b229a77991882594fe7250b66":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"dd8a9ad1acc754f713e220250044c2bf06a22a0b":["bb222a3f9d9421d5c95afce73013fbd8de07ea1f"],"bb1f22cfa77230b5f05b7784feae5367f6bbb488":[],"c7869f64c874ebf7f317d22c00baf2b6857797a6":[],"bb222a3f9d9421d5c95afce73013fbd8de07ea1f":["93fdefa3dfa2ba2532705ca654c5b70e7d91a043"],"1416f9d09d016a6894cd17e1caac137dad2bba59":["dd8a9ad1acc754f713e220250044c2bf06a22a0b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c7869f64c874ebf7f317d22c00baf2b6857797a6","d6f074e73200c07d54f242d3880a8da5a35ff97b","2c30e4c1cee08b3b229a77991882594fe7250b66"],"d6f074e73200c07d54f242d3880a8da5a35ff97b":[],"0db83f1bb855a4ac824c9a2a8e1ee9b29a039c15":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"93fdefa3dfa2ba2532705ca654c5b70e7d91a043":["0db83f1bb855a4ac824c9a2a8e1ee9b29a039c15"],"2c30e4c1cee08b3b229a77991882594fe7250b66":["bb1f22cfa77230b5f05b7784feae5367f6bbb488","c7869f64c874ebf7f317d22c00baf2b6857797a6","1416f9d09d016a6894cd17e1caac137dad2bba59","d6f074e73200c07d54f242d3880a8da5a35ff97b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["bb1f22cfa77230b5f05b7784feae5367f6bbb488","c7869f64c874ebf7f317d22c00baf2b6857797a6","d6f074e73200c07d54f242d3880a8da5a35ff97b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}