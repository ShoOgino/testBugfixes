{"path":"src/test/org/apache/lucene/TestSearch#Time(int,int,int).mjava","commits":[{"id":"8fb95844e4ba5160067c64c5eb1cd8a09f7a94f1","date":1064527311,"type":0,"author":"Dmitry Serebrennikov","isMerge":false,"pathNew":"src/test/org/apache/lucene/TestSearch#Time(int,int,int).mjava","pathOld":"/dev/null","sourceNew":"  static long Time(int year, int month, int day) {\n    GregorianCalendar calendar = new GregorianCalendar();\n    calendar.set(year, month, day);\n    return calendar.getTime().getTime();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"64a84446b679daf1e25d901bf647686ade7fc1f0","date":1260811919,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"src/test/org/apache/lucene/TestSearch#Time(int,int,int).mjava","pathOld":"src/test/org/apache/lucene/TestSearch#Time(int,int,int).mjava","sourceNew":"  static long Time(int year, int month, int day) {\n    GregorianCalendar calendar = new GregorianCalendar();\n    calendar.clear();\n    calendar.set(year, month, day);\n    return calendar.getTime().getTime();\n  }\n\n","sourceOld":"  static long Time(int year, int month, int day) {\n    GregorianCalendar calendar = new GregorianCalendar();\n    calendar.set(year, month, day);\n    return calendar.getTime().getTime();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/TestSearch#Time(int,int,int).mjava","pathOld":"src/test/org/apache/lucene/TestSearch#Time(int,int,int).mjava","sourceNew":"  static long Time(int year, int month, int day) {\n    GregorianCalendar calendar = new GregorianCalendar();\n    calendar.clear();\n    calendar.set(year, month, day);\n    return calendar.getTime().getTime();\n  }\n\n","sourceOld":"  static long Time(int year, int month, int day) {\n    GregorianCalendar calendar = new GregorianCalendar();\n    calendar.clear();\n    calendar.set(year, month, day);\n    return calendar.getTime().getTime();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"64a84446b679daf1e25d901bf647686ade7fc1f0":["8fb95844e4ba5160067c64c5eb1cd8a09f7a94f1"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"8fb95844e4ba5160067c64c5eb1cd8a09f7a94f1":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["64a84446b679daf1e25d901bf647686ade7fc1f0"]},"commit2Childs":{"64a84446b679daf1e25d901bf647686ade7fc1f0":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["8fb95844e4ba5160067c64c5eb1cd8a09f7a94f1"],"8fb95844e4ba5160067c64c5eb1cd8a09f7a94f1":["64a84446b679daf1e25d901bf647686ade7fc1f0"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}