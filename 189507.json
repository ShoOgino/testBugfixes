{"path":"lucene/core/src/java/org/apache/lucene/util/IOUtils#copy(File,File).mjava","commits":[{"id":"d536f8f18fa29e8630b3b32d498c7ce2cacfd3d4","date":1341570569,"type":0,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/IOUtils#copy(File,File).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Copy one file's contents to another file. The target will be overwritten\n   * if it exists. The source must exist.\n   */\n  public static void copy(File source, File target) throws IOException {\n    FileInputStream fis = null;\n    FileOutputStream fos = null;\n    try {\n      fis = new FileInputStream(source);\n      fos = new FileOutputStream(target);\n      \n      final byte [] buffer = new byte [1024 * 8];\n      int len;\n      while ((len = fis.read(buffer)) > 0) {\n        fos.write(buffer, 0, len);\n      }\n    } finally {\n      close(fis, fos);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"04e7f30683f53928b2fce016e6430c9795caff22","date":1341839598,"type":0,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/util/IOUtils#copy(File,File).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Copy one file's contents to another file. The target will be overwritten\n   * if it exists. The source must exist.\n   */\n  public static void copy(File source, File target) throws IOException {\n    FileInputStream fis = null;\n    FileOutputStream fos = null;\n    try {\n      fis = new FileInputStream(source);\n      fos = new FileOutputStream(target);\n      \n      final byte [] buffer = new byte [1024 * 8];\n      int len;\n      while ((len = fis.read(buffer)) > 0) {\n        fos.write(buffer, 0, len);\n      }\n    } finally {\n      close(fis, fos);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fe33227f6805edab2036cbb80645cc4e2d1fa424","date":1342713534,"type":0,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/util/IOUtils#copy(File,File).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Copy one file's contents to another file. The target will be overwritten\n   * if it exists. The source must exist.\n   */\n  public static void copy(File source, File target) throws IOException {\n    FileInputStream fis = null;\n    FileOutputStream fos = null;\n    try {\n      fis = new FileInputStream(source);\n      fos = new FileOutputStream(target);\n      \n      final byte [] buffer = new byte [1024 * 8];\n      int len;\n      while ((len = fis.read(buffer)) > 0) {\n        fos.write(buffer, 0, len);\n      }\n    } finally {\n      close(fis, fos);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f4abec28b874149a7223e32cc7a01704c27790de","date":1410644789,"type":4,"author":"Robert Muir","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/util/IOUtils#copy(File,File).mjava","sourceNew":null,"sourceOld":"  /**\n   * Copy one file's contents to another file. The target will be overwritten\n   * if it exists. The source must exist.\n   */\n  public static void copy(File source, File target) throws IOException {\n    FileInputStream fis = null;\n    FileOutputStream fos = null;\n    try {\n      fis = new FileInputStream(source);\n      fos = new FileOutputStream(target);\n      \n      final byte [] buffer = new byte [1024 * 8];\n      int len;\n      while ((len = fis.read(buffer)) > 0) {\n        fos.write(buffer, 0, len);\n      }\n    } finally {\n      close(fis, fos);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"d536f8f18fa29e8630b3b32d498c7ce2cacfd3d4":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"04e7f30683f53928b2fce016e6430c9795caff22":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","d536f8f18fa29e8630b3b32d498c7ce2cacfd3d4"],"fe33227f6805edab2036cbb80645cc4e2d1fa424":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","d536f8f18fa29e8630b3b32d498c7ce2cacfd3d4"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"f4abec28b874149a7223e32cc7a01704c27790de":["d536f8f18fa29e8630b3b32d498c7ce2cacfd3d4"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["f4abec28b874149a7223e32cc7a01704c27790de"]},"commit2Childs":{"d536f8f18fa29e8630b3b32d498c7ce2cacfd3d4":["04e7f30683f53928b2fce016e6430c9795caff22","fe33227f6805edab2036cbb80645cc4e2d1fa424","f4abec28b874149a7223e32cc7a01704c27790de"],"04e7f30683f53928b2fce016e6430c9795caff22":[],"fe33227f6805edab2036cbb80645cc4e2d1fa424":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["d536f8f18fa29e8630b3b32d498c7ce2cacfd3d4","04e7f30683f53928b2fce016e6430c9795caff22","fe33227f6805edab2036cbb80645cc4e2d1fa424"],"f4abec28b874149a7223e32cc7a01704c27790de":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["04e7f30683f53928b2fce016e6430c9795caff22","fe33227f6805edab2036cbb80645cc4e2d1fa424","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}