{"path":"solr/src/java/org/apache/solr/update/DirectUpdateHandler#existsInIndex(String).mjava","commits":[{"id":"893269407f5c988a4b2ee13c7ffc01ec43136c1d","date":1268598046,"type":0,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/src/java/org/apache/solr/update/DirectUpdateHandler#existsInIndex(String).mjava","pathOld":"/dev/null","sourceNew":"  protected boolean existsInIndex(String indexedId) throws IOException {\n    if (idField == null) throw new SolrException( SolrException.ErrorCode.BAD_REQUEST,\"Operation requires schema to have a unique key field\");\n\n    closeWriter();\n    openSearcher();\n    IndexReader ir = searcher.getReader();\n    TermDocs tdocs = null;\n    boolean exists=false;\n    try {\n      tdocs = ir.termDocs(idTerm(indexedId));\n      if (tdocs.next()) exists=true;\n    } finally {\n      try { if (tdocs != null) tdocs.close(); } catch (Exception e) {}\n    }\n    return exists;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8","date":1268599006,"type":4,"author":"Mark Robert Miller","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/src/java/org/apache/solr/update/DirectUpdateHandler#existsInIndex(String).mjava","sourceNew":null,"sourceOld":"  protected boolean existsInIndex(String indexedId) throws IOException {\n    if (idField == null) throw new SolrException( SolrException.ErrorCode.BAD_REQUEST,\"Operation requires schema to have a unique key field\");\n\n    closeWriter();\n    openSearcher();\n    IndexReader ir = searcher.getReader();\n    TermDocs tdocs = null;\n    boolean exists=false;\n    try {\n      tdocs = ir.termDocs(idTerm(indexedId));\n      if (tdocs.next()) exists=true;\n    } finally {\n      try { if (tdocs != null) tdocs.close(); } catch (Exception e) {}\n    }\n    return exists;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ad94625fb8d088209f46650c8097196fec67f00c","date":1453508319,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/src/java/org/apache/solr/update/DirectUpdateHandler#existsInIndex(String).mjava","pathOld":"src/java/org/apache/solr/update/DirectUpdateHandler#existsInIndex(String).mjava","sourceNew":"  protected boolean existsInIndex(String indexedId) throws IOException {\n    if (idField == null) throw new SolrException( SolrException.ErrorCode.BAD_REQUEST,\"Operation requires schema to have a unique key field\");\n\n    closeWriter();\n    openSearcher();\n    IndexReader ir = searcher.getReader();\n    TermDocs tdocs = null;\n    boolean exists=false;\n    try {\n      tdocs = ir.termDocs(idTerm(indexedId));\n      if (tdocs.next()) exists=true;\n    } finally {\n      try { if (tdocs != null) tdocs.close(); } catch (Exception e) {}\n    }\n    return exists;\n  }\n\n","sourceOld":"  protected boolean existsInIndex(String indexedId) throws IOException {\n    if (idField == null) throw new SolrException( SolrException.ErrorCode.BAD_REQUEST,\"Operation requires schema to have a unique key field\");\n\n    closeWriter();\n    openSearcher();\n    IndexReader ir = searcher.getReader();\n    TermDocs tdocs = null;\n    boolean exists=false;\n    try {\n      tdocs = ir.termDocs(idTerm(indexedId));\n      if (tdocs.next()) exists=true;\n    } finally {\n      try { if (tdocs != null) tdocs.close(); } catch (Exception e) {}\n    }\n    return exists;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1da8d55113b689b06716246649de6f62430f15c0","date":1453508340,"type":0,"author":"Dawid Weiss","isMerge":true,"pathNew":"solr/src/java/org/apache/solr/update/DirectUpdateHandler#existsInIndex(String).mjava","pathOld":"/dev/null","sourceNew":"  protected boolean existsInIndex(String indexedId) throws IOException {\n    if (idField == null) throw new SolrException( SolrException.ErrorCode.BAD_REQUEST,\"Operation requires schema to have a unique key field\");\n\n    closeWriter();\n    openSearcher();\n    IndexReader ir = searcher.getReader();\n    TermDocs tdocs = null;\n    boolean exists=false;\n    try {\n      tdocs = ir.termDocs(idTerm(indexedId));\n      if (tdocs.next()) exists=true;\n    } finally {\n      try { if (tdocs != null) tdocs.close(); } catch (Exception e) {}\n    }\n    return exists;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"28427ef110c4c5bf5b4057731b83110bd1e13724","date":1276701452,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"solr/src/java/org/apache/solr/update/DirectUpdateHandler#existsInIndex(String).mjava","pathOld":"solr/src/java/org/apache/solr/update/DirectUpdateHandler#existsInIndex(String).mjava","sourceNew":"  protected boolean existsInIndex(String indexedId) throws IOException {\n    if (idField == null) throw new SolrException( SolrException.ErrorCode.BAD_REQUEST,\"Operation requires schema to have a unique key field\");\n\n    closeWriter();\n    openSearcher();\n    IndexReader ir = searcher.getReader();\n    Term idTerm = idTerm(indexedId);\n    DocsEnum tdocs = MultiFields.getTermDocsEnum(ir,\n                                                 MultiFields.getDeletedDocs(ir),\n                                                 idTerm.field(),\n                                                 new BytesRef(idTerm.text()));\n    if (tdocs != null) {\n      return tdocs.nextDoc() != DocsEnum.NO_MORE_DOCS;\n    } else {\n      return false;\n    }\n  }\n\n","sourceOld":"  protected boolean existsInIndex(String indexedId) throws IOException {\n    if (idField == null) throw new SolrException( SolrException.ErrorCode.BAD_REQUEST,\"Operation requires schema to have a unique key field\");\n\n    closeWriter();\n    openSearcher();\n    IndexReader ir = searcher.getReader();\n    TermDocs tdocs = null;\n    boolean exists=false;\n    try {\n      tdocs = ir.termDocs(idTerm(indexedId));\n      if (tdocs.next()) exists=true;\n    } finally {\n      try { if (tdocs != null) tdocs.close(); } catch (Exception e) {}\n    }\n    return exists;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4f29ba80b723649f5feb7e37afe1a558dd2c1304","date":1278318805,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"solr/src/java/org/apache/solr/update/DirectUpdateHandler#existsInIndex(String).mjava","pathOld":"solr/src/java/org/apache/solr/update/DirectUpdateHandler#existsInIndex(String).mjava","sourceNew":"  protected boolean existsInIndex(String indexedId) throws IOException {\n    if (idField == null) throw new SolrException( SolrException.ErrorCode.BAD_REQUEST,\"Operation requires schema to have a unique key field\");\n\n    closeWriter();\n    openSearcher();\n    IndexReader ir = searcher.getReader();\n    Term idTerm = idTerm(indexedId);\n    DocsEnum tdocs = MultiFields.getTermDocsEnum(ir,\n                                                 MultiFields.getDeletedDocs(ir),\n                                                 idTerm.field(),\n                                                 idTerm.bytes());\n    if (tdocs != null) {\n      return tdocs.nextDoc() != DocsEnum.NO_MORE_DOCS;\n    } else {\n      return false;\n    }\n  }\n\n","sourceOld":"  protected boolean existsInIndex(String indexedId) throws IOException {\n    if (idField == null) throw new SolrException( SolrException.ErrorCode.BAD_REQUEST,\"Operation requires schema to have a unique key field\");\n\n    closeWriter();\n    openSearcher();\n    IndexReader ir = searcher.getReader();\n    Term idTerm = idTerm(indexedId);\n    DocsEnum tdocs = MultiFields.getTermDocsEnum(ir,\n                                                 MultiFields.getDeletedDocs(ir),\n                                                 idTerm.field(),\n                                                 new BytesRef(idTerm.text()));\n    if (tdocs != null) {\n      return tdocs.nextDoc() != DocsEnum.NO_MORE_DOCS;\n    } else {\n      return false;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5f4e87790277826a2aea119328600dfb07761f32","date":1279827275,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"solr/src/java/org/apache/solr/update/DirectUpdateHandler#existsInIndex(String).mjava","pathOld":"solr/src/java/org/apache/solr/update/DirectUpdateHandler#existsInIndex(String).mjava","sourceNew":"  protected boolean existsInIndex(String indexedId) throws IOException {\n    if (idField == null) throw new SolrException( SolrException.ErrorCode.BAD_REQUEST,\"Operation requires schema to have a unique key field\");\n\n    closeWriter();\n    openSearcher();\n    IndexReader ir = searcher.getReader();\n    Term idTerm = idTerm(indexedId);\n    DocsEnum tdocs = MultiFields.getTermDocsEnum(ir,\n                                                 MultiFields.getDeletedDocs(ir),\n                                                 idTerm.field(),\n                                                 idTerm.bytes());\n    if (tdocs != null) {\n      return tdocs.nextDoc() != DocsEnum.NO_MORE_DOCS;\n    } else {\n      return false;\n    }\n  }\n\n","sourceOld":"  protected boolean existsInIndex(String indexedId) throws IOException {\n    if (idField == null) throw new SolrException( SolrException.ErrorCode.BAD_REQUEST,\"Operation requires schema to have a unique key field\");\n\n    closeWriter();\n    openSearcher();\n    IndexReader ir = searcher.getReader();\n    TermDocs tdocs = null;\n    boolean exists=false;\n    try {\n      tdocs = ir.termDocs(idTerm(indexedId));\n      if (tdocs.next()) exists=true;\n    } finally {\n      try { if (tdocs != null) tdocs.close(); } catch (Exception e) {}\n    }\n    return exists;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e6d5c544b159d10e466963873aff1582863f2b6e","date":1293373542,"type":4,"author":"Yonik Seeley","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/src/java/org/apache/solr/update/DirectUpdateHandler#existsInIndex(String).mjava","sourceNew":null,"sourceOld":"  protected boolean existsInIndex(String indexedId) throws IOException {\n    if (idField == null) throw new SolrException( SolrException.ErrorCode.BAD_REQUEST,\"Operation requires schema to have a unique key field\");\n\n    closeWriter();\n    openSearcher();\n    IndexReader ir = searcher.getReader();\n    Term idTerm = idTerm(indexedId);\n    DocsEnum tdocs = MultiFields.getTermDocsEnum(ir,\n                                                 MultiFields.getDeletedDocs(ir),\n                                                 idTerm.field(),\n                                                 idTerm.bytes());\n    if (tdocs != null) {\n      return tdocs.nextDoc() != DocsEnum.NO_MORE_DOCS;\n    } else {\n      return false;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ff9cf7165d6cbafe4ef4431ecc2dc1af9cb2316c","date":1294014627,"type":4,"author":"Michael Busch","isMerge":true,"pathNew":"/dev/null","pathOld":"solr/src/java/org/apache/solr/update/DirectUpdateHandler#existsInIndex(String).mjava","sourceNew":null,"sourceOld":"  protected boolean existsInIndex(String indexedId) throws IOException {\n    if (idField == null) throw new SolrException( SolrException.ErrorCode.BAD_REQUEST,\"Operation requires schema to have a unique key field\");\n\n    closeWriter();\n    openSearcher();\n    IndexReader ir = searcher.getReader();\n    Term idTerm = idTerm(indexedId);\n    DocsEnum tdocs = MultiFields.getTermDocsEnum(ir,\n                                                 MultiFields.getDeletedDocs(ir),\n                                                 idTerm.field(),\n                                                 idTerm.bytes());\n    if (tdocs != null) {\n      return tdocs.nextDoc() != DocsEnum.NO_MORE_DOCS;\n    } else {\n      return false;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"70ad682703b8585f5d0a637efec044d57ec05efb","date":1294259117,"type":4,"author":"Simon Willnauer","isMerge":true,"pathNew":"/dev/null","pathOld":"solr/src/java/org/apache/solr/update/DirectUpdateHandler#existsInIndex(String).mjava","sourceNew":null,"sourceOld":"  protected boolean existsInIndex(String indexedId) throws IOException {\n    if (idField == null) throw new SolrException( SolrException.ErrorCode.BAD_REQUEST,\"Operation requires schema to have a unique key field\");\n\n    closeWriter();\n    openSearcher();\n    IndexReader ir = searcher.getReader();\n    Term idTerm = idTerm(indexedId);\n    DocsEnum tdocs = MultiFields.getTermDocsEnum(ir,\n                                                 MultiFields.getDeletedDocs(ir),\n                                                 idTerm.field(),\n                                                 idTerm.bytes());\n    if (tdocs != null) {\n      return tdocs.nextDoc() != DocsEnum.NO_MORE_DOCS;\n    } else {\n      return false;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"70ad682703b8585f5d0a637efec044d57ec05efb":["4f29ba80b723649f5feb7e37afe1a558dd2c1304","e6d5c544b159d10e466963873aff1582863f2b6e"],"4f29ba80b723649f5feb7e37afe1a558dd2c1304":["28427ef110c4c5bf5b4057731b83110bd1e13724"],"893269407f5c988a4b2ee13c7ffc01ec43136c1d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8":["893269407f5c988a4b2ee13c7ffc01ec43136c1d"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"e6d5c544b159d10e466963873aff1582863f2b6e":["4f29ba80b723649f5feb7e37afe1a558dd2c1304"],"5f4e87790277826a2aea119328600dfb07761f32":["1da8d55113b689b06716246649de6f62430f15c0","4f29ba80b723649f5feb7e37afe1a558dd2c1304"],"1da8d55113b689b06716246649de6f62430f15c0":["a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8","ad94625fb8d088209f46650c8097196fec67f00c"],"ff9cf7165d6cbafe4ef4431ecc2dc1af9cb2316c":["5f4e87790277826a2aea119328600dfb07761f32","e6d5c544b159d10e466963873aff1582863f2b6e"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"28427ef110c4c5bf5b4057731b83110bd1e13724":["1da8d55113b689b06716246649de6f62430f15c0"],"ad94625fb8d088209f46650c8097196fec67f00c":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["e6d5c544b159d10e466963873aff1582863f2b6e"]},"commit2Childs":{"70ad682703b8585f5d0a637efec044d57ec05efb":[],"4f29ba80b723649f5feb7e37afe1a558dd2c1304":["70ad682703b8585f5d0a637efec044d57ec05efb","e6d5c544b159d10e466963873aff1582863f2b6e","5f4e87790277826a2aea119328600dfb07761f32"],"893269407f5c988a4b2ee13c7ffc01ec43136c1d":["a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8"],"a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8":["1da8d55113b689b06716246649de6f62430f15c0"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["ad94625fb8d088209f46650c8097196fec67f00c"],"e6d5c544b159d10e466963873aff1582863f2b6e":["70ad682703b8585f5d0a637efec044d57ec05efb","ff9cf7165d6cbafe4ef4431ecc2dc1af9cb2316c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"5f4e87790277826a2aea119328600dfb07761f32":["ff9cf7165d6cbafe4ef4431ecc2dc1af9cb2316c"],"1da8d55113b689b06716246649de6f62430f15c0":["5f4e87790277826a2aea119328600dfb07761f32","28427ef110c4c5bf5b4057731b83110bd1e13724"],"ff9cf7165d6cbafe4ef4431ecc2dc1af9cb2316c":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["893269407f5c988a4b2ee13c7ffc01ec43136c1d"],"28427ef110c4c5bf5b4057731b83110bd1e13724":["4f29ba80b723649f5feb7e37afe1a558dd2c1304"],"ad94625fb8d088209f46650c8097196fec67f00c":["1da8d55113b689b06716246649de6f62430f15c0"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["70ad682703b8585f5d0a637efec044d57ec05efb","ff9cf7165d6cbafe4ef4431ecc2dc1af9cb2316c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b","a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}