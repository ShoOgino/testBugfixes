{"path":"lucene/analysis/common/src/test/org/apache/lucene/analysis/miscellaneous/TestKeywordMarkerFilter#testIncrementToken().mjava","commits":[{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/miscellaneous/TestKeywordMarkerFilter#testIncrementToken().mjava","pathOld":"modules/analysis/common/src/test/org/apache/lucene/analysis/miscellaneous/TestKeywordMarkerFilter#testIncrementToken().mjava","sourceNew":"  @Test\n  public void testIncrementToken() throws IOException {\n    CharArraySet set = new CharArraySet(TEST_VERSION_CURRENT, 5, true);\n    set.add(\"lucenefox\");\n    String[] output = new String[] { \"the\", \"quick\", \"brown\", \"LuceneFox\",\n        \"jumps\" };\n    assertTokenStreamContents(new LowerCaseFilterMock(\n        new KeywordMarkerFilter(new MockTokenizer(new StringReader(\n            \"The quIck browN LuceneFox Jumps\"), MockTokenizer.WHITESPACE, false), set)), output);\n    CharArraySet mixedCaseSet = new CharArraySet(TEST_VERSION_CURRENT, asSet(\"LuceneFox\"), false);\n    assertTokenStreamContents(new LowerCaseFilterMock(\n        new KeywordMarkerFilter(new MockTokenizer(new StringReader(\n            \"The quIck browN LuceneFox Jumps\"), MockTokenizer.WHITESPACE, false), mixedCaseSet)), output);\n    CharArraySet set2 = set;\n    assertTokenStreamContents(new LowerCaseFilterMock(\n        new KeywordMarkerFilter(new MockTokenizer(new StringReader(\n            \"The quIck browN LuceneFox Jumps\"), MockTokenizer.WHITESPACE, false), set2)), output);\n  }\n\n","sourceOld":"  @Test\n  public void testIncrementToken() throws IOException {\n    CharArraySet set = new CharArraySet(TEST_VERSION_CURRENT, 5, true);\n    set.add(\"lucenefox\");\n    String[] output = new String[] { \"the\", \"quick\", \"brown\", \"LuceneFox\",\n        \"jumps\" };\n    assertTokenStreamContents(new LowerCaseFilterMock(\n        new KeywordMarkerFilter(new MockTokenizer(new StringReader(\n            \"The quIck browN LuceneFox Jumps\"), MockTokenizer.WHITESPACE, false), set)), output);\n    CharArraySet mixedCaseSet = new CharArraySet(TEST_VERSION_CURRENT, asSet(\"LuceneFox\"), false);\n    assertTokenStreamContents(new LowerCaseFilterMock(\n        new KeywordMarkerFilter(new MockTokenizer(new StringReader(\n            \"The quIck browN LuceneFox Jumps\"), MockTokenizer.WHITESPACE, false), mixedCaseSet)), output);\n    CharArraySet set2 = set;\n    assertTokenStreamContents(new LowerCaseFilterMock(\n        new KeywordMarkerFilter(new MockTokenizer(new StringReader(\n            \"The quIck browN LuceneFox Jumps\"), MockTokenizer.WHITESPACE, false), set2)), output);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a32c7218952a3082e8be4be1a325fd217603f365","date":1363034315,"type":5,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/miscellaneous/TestKeywordMarkerFilter#testSetFilterIncrementToken().mjava","pathOld":"lucene/analysis/common/src/test/org/apache/lucene/analysis/miscellaneous/TestKeywordMarkerFilter#testIncrementToken().mjava","sourceNew":"  @Test\n  public void testSetFilterIncrementToken() throws IOException {\n    CharArraySet set = new CharArraySet(TEST_VERSION_CURRENT, 5, true);\n    set.add(\"lucenefox\");\n    String[] output = new String[] { \"the\", \"quick\", \"brown\", \"LuceneFox\",\n        \"jumps\" };\n    assertTokenStreamContents(new LowerCaseFilterMock(\n        new SetKeywordMarkerFilter(new MockTokenizer(new StringReader(\n            \"The quIck browN LuceneFox Jumps\"), MockTokenizer.WHITESPACE, false), set)), output);\n    CharArraySet mixedCaseSet = new CharArraySet(TEST_VERSION_CURRENT, asSet(\"LuceneFox\"), false);\n    assertTokenStreamContents(new LowerCaseFilterMock(\n        new SetKeywordMarkerFilter(new MockTokenizer(new StringReader(\n            \"The quIck browN LuceneFox Jumps\"), MockTokenizer.WHITESPACE, false), mixedCaseSet)), output);\n    CharArraySet set2 = set;\n    assertTokenStreamContents(new LowerCaseFilterMock(\n        new SetKeywordMarkerFilter(new MockTokenizer(new StringReader(\n            \"The quIck browN LuceneFox Jumps\"), MockTokenizer.WHITESPACE, false), set2)), output);\n  }\n\n","sourceOld":"  @Test\n  public void testIncrementToken() throws IOException {\n    CharArraySet set = new CharArraySet(TEST_VERSION_CURRENT, 5, true);\n    set.add(\"lucenefox\");\n    String[] output = new String[] { \"the\", \"quick\", \"brown\", \"LuceneFox\",\n        \"jumps\" };\n    assertTokenStreamContents(new LowerCaseFilterMock(\n        new KeywordMarkerFilter(new MockTokenizer(new StringReader(\n            \"The quIck browN LuceneFox Jumps\"), MockTokenizer.WHITESPACE, false), set)), output);\n    CharArraySet mixedCaseSet = new CharArraySet(TEST_VERSION_CURRENT, asSet(\"LuceneFox\"), false);\n    assertTokenStreamContents(new LowerCaseFilterMock(\n        new KeywordMarkerFilter(new MockTokenizer(new StringReader(\n            \"The quIck browN LuceneFox Jumps\"), MockTokenizer.WHITESPACE, false), mixedCaseSet)), output);\n    CharArraySet set2 = set;\n    assertTokenStreamContents(new LowerCaseFilterMock(\n        new KeywordMarkerFilter(new MockTokenizer(new StringReader(\n            \"The quIck browN LuceneFox Jumps\"), MockTokenizer.WHITESPACE, false), set2)), output);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a32c7218952a3082e8be4be1a325fd217603f365":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a32c7218952a3082e8be4be1a325fd217603f365"]},"commit2Childs":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["a32c7218952a3082e8be4be1a325fd217603f365"],"a32c7218952a3082e8be4be1a325fd217603f365":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}