{"path":"lucene/test-framework/src/test/org/apache/lucene/mockfile/TestVerboseFS#testAsyncFileChannel().mjava","commits":[{"id":"0570a6b8fbda74e4718ba36c70fd1953103a3dcb","date":1429616032,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/test-framework/src/test/org/apache/lucene/mockfile/TestVerboseFS#testAsyncFileChannel().mjava","pathOld":"/dev/null","sourceNew":"  /** Test AsynchronousFileChannel.open */\n  public void testAsyncFileChannel() throws IOException {\n    InfoStreamListener stream = new InfoStreamListener(\"newAsynchronousFileChannel\");\n    Path dir = wrap(createTempDir(), stream);\n    AsynchronousFileChannel channel = AsynchronousFileChannel.open(dir.resolve(\"foobar\"), StandardOpenOption.CREATE_NEW, StandardOpenOption.READ, StandardOpenOption.WRITE);\n    assertTrue(stream.sawMessage());\n    channel.close();\n    \n    try {\n      AsynchronousFileChannel.open(dir.resolve(\"foobar\"), StandardOpenOption.CREATE_NEW, StandardOpenOption.READ, StandardOpenOption.WRITE);\n      fail(\"didn't get expected exception\");\n    } catch (IOException expected) {}\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"cd8a7e622c1138188be79e193b1dc52f3f0889a5","date":1564419078,"type":3,"author":"Munendra S N","isMerge":false,"pathNew":"lucene/test-framework/src/test/org/apache/lucene/mockfile/TestVerboseFS#testAsyncFileChannel().mjava","pathOld":"lucene/test-framework/src/test/org/apache/lucene/mockfile/TestVerboseFS#testAsyncFileChannel().mjava","sourceNew":"  /** Test AsynchronousFileChannel.open */\n  public void testAsyncFileChannel() throws IOException {\n    InfoStreamListener stream = new InfoStreamListener(\"newAsynchronousFileChannel\");\n    Path dir = wrap(createTempDir(), stream);\n    AsynchronousFileChannel channel = AsynchronousFileChannel.open(dir.resolve(\"foobar\"), StandardOpenOption.CREATE_NEW, StandardOpenOption.READ, StandardOpenOption.WRITE);\n    assertTrue(stream.sawMessage());\n    channel.close();\n\n    expectThrows(IOException.class, () -> AsynchronousFileChannel.open(dir.resolve(\"foobar\"),\n        StandardOpenOption.CREATE_NEW, StandardOpenOption.READ, StandardOpenOption.WRITE));\n  }\n\n","sourceOld":"  /** Test AsynchronousFileChannel.open */\n  public void testAsyncFileChannel() throws IOException {\n    InfoStreamListener stream = new InfoStreamListener(\"newAsynchronousFileChannel\");\n    Path dir = wrap(createTempDir(), stream);\n    AsynchronousFileChannel channel = AsynchronousFileChannel.open(dir.resolve(\"foobar\"), StandardOpenOption.CREATE_NEW, StandardOpenOption.READ, StandardOpenOption.WRITE);\n    assertTrue(stream.sawMessage());\n    channel.close();\n    \n    try {\n      AsynchronousFileChannel.open(dir.resolve(\"foobar\"), StandardOpenOption.CREATE_NEW, StandardOpenOption.READ, StandardOpenOption.WRITE);\n      fail(\"didn't get expected exception\");\n    } catch (IOException expected) {}\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f8061ddd97f3352007d927dae445884a6f3d857b","date":1564988276,"type":3,"author":"Atri Sharma","isMerge":true,"pathNew":"lucene/test-framework/src/test/org/apache/lucene/mockfile/TestVerboseFS#testAsyncFileChannel().mjava","pathOld":"lucene/test-framework/src/test/org/apache/lucene/mockfile/TestVerboseFS#testAsyncFileChannel().mjava","sourceNew":"  /** Test AsynchronousFileChannel.open */\n  public void testAsyncFileChannel() throws IOException {\n    InfoStreamListener stream = new InfoStreamListener(\"newAsynchronousFileChannel\");\n    Path dir = wrap(createTempDir(), stream);\n    AsynchronousFileChannel channel = AsynchronousFileChannel.open(dir.resolve(\"foobar\"), StandardOpenOption.CREATE_NEW, StandardOpenOption.READ, StandardOpenOption.WRITE);\n    assertTrue(stream.sawMessage());\n    channel.close();\n\n    expectThrows(IOException.class, () -> AsynchronousFileChannel.open(dir.resolve(\"foobar\"),\n        StandardOpenOption.CREATE_NEW, StandardOpenOption.READ, StandardOpenOption.WRITE));\n  }\n\n","sourceOld":"  /** Test AsynchronousFileChannel.open */\n  public void testAsyncFileChannel() throws IOException {\n    InfoStreamListener stream = new InfoStreamListener(\"newAsynchronousFileChannel\");\n    Path dir = wrap(createTempDir(), stream);\n    AsynchronousFileChannel channel = AsynchronousFileChannel.open(dir.resolve(\"foobar\"), StandardOpenOption.CREATE_NEW, StandardOpenOption.READ, StandardOpenOption.WRITE);\n    assertTrue(stream.sawMessage());\n    channel.close();\n    \n    try {\n      AsynchronousFileChannel.open(dir.resolve(\"foobar\"), StandardOpenOption.CREATE_NEW, StandardOpenOption.READ, StandardOpenOption.WRITE);\n      fail(\"didn't get expected exception\");\n    } catch (IOException expected) {}\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5de0380969f44612d4c2fe721c3b35a3770eadd9","date":1574514111,"type":3,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/test-framework/src/test/org/apache/lucene/mockfile/TestVerboseFS#testAsyncFileChannel().mjava","pathOld":"lucene/test-framework/src/test/org/apache/lucene/mockfile/TestVerboseFS#testAsyncFileChannel().mjava","sourceNew":"  /** Test AsynchronousFileChannel.open */\n  public void testAsyncFileChannel() throws IOException, InterruptedException {\n    InfoStreamListener stream = new InfoStreamListener(\"newAsynchronousFileChannel\");\n    Path dir = wrap(createTempDir(), stream);\n\n    ExecutorService executorService = Executors.newFixedThreadPool(1,\n        new NamedThreadFactory(\"async-io\"));\n    try {\n      Set<StandardOpenOption> opts = Set\n          .of(StandardOpenOption.CREATE_NEW, StandardOpenOption.READ,\n              StandardOpenOption.WRITE);\n      AsynchronousFileChannel channel = AsynchronousFileChannel\n          .open(dir.resolve(\"foobar\"), opts, executorService);\n      assertTrue(stream.sawMessage());\n      channel.close();\n\n      expectThrows(IOException.class, () -> AsynchronousFileChannel.open(dir.resolve(\"foobar\"),\n          opts, executorService));\n\n      expectThrows(NoSuchFileException.class,\n          () -> AsynchronousFileChannel.open(dir.resolve(\"doesNotExist.rip\")));\n    } finally {\n      executorService.shutdown();\n      executorService.awaitTermination(5, TimeUnit.SECONDS);\n    }\n  }\n\n","sourceOld":"  /** Test AsynchronousFileChannel.open */\n  public void testAsyncFileChannel() throws IOException {\n    InfoStreamListener stream = new InfoStreamListener(\"newAsynchronousFileChannel\");\n    Path dir = wrap(createTempDir(), stream);\n    AsynchronousFileChannel channel = AsynchronousFileChannel.open(dir.resolve(\"foobar\"), StandardOpenOption.CREATE_NEW, StandardOpenOption.READ, StandardOpenOption.WRITE);\n    assertTrue(stream.sawMessage());\n    channel.close();\n\n    expectThrows(IOException.class, () -> AsynchronousFileChannel.open(dir.resolve(\"foobar\"),\n        StandardOpenOption.CREATE_NEW, StandardOpenOption.READ, StandardOpenOption.WRITE));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"cd8a7e622c1138188be79e193b1dc52f3f0889a5":["0570a6b8fbda74e4718ba36c70fd1953103a3dcb"],"0570a6b8fbda74e4718ba36c70fd1953103a3dcb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"5de0380969f44612d4c2fe721c3b35a3770eadd9":["cd8a7e622c1138188be79e193b1dc52f3f0889a5"],"f8061ddd97f3352007d927dae445884a6f3d857b":["0570a6b8fbda74e4718ba36c70fd1953103a3dcb","cd8a7e622c1138188be79e193b1dc52f3f0889a5"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["5de0380969f44612d4c2fe721c3b35a3770eadd9"]},"commit2Childs":{"cd8a7e622c1138188be79e193b1dc52f3f0889a5":["5de0380969f44612d4c2fe721c3b35a3770eadd9","f8061ddd97f3352007d927dae445884a6f3d857b"],"0570a6b8fbda74e4718ba36c70fd1953103a3dcb":["cd8a7e622c1138188be79e193b1dc52f3f0889a5","f8061ddd97f3352007d927dae445884a6f3d857b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["0570a6b8fbda74e4718ba36c70fd1953103a3dcb"],"5de0380969f44612d4c2fe721c3b35a3770eadd9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"f8061ddd97f3352007d927dae445884a6f3d857b":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["f8061ddd97f3352007d927dae445884a6f3d857b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}