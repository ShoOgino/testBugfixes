{"path":"lucene/contrib/queries/src/java/org/apache/lucene/search/similar/MoreLikeThis#main(String[]).mjava","commits":[{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/contrib/queries/src/java/org/apache/lucene/search/similar/MoreLikeThis#main(String[]).mjava","pathOld":"contrib/queries/src/java/org/apache/lucene/search/similar/MoreLikeThis#main(String[]).mjava","sourceNew":"    /**\n     * Test driver.\n     * Pass in \"-i INDEX\" and then either \"-fn FILE\" or \"-url URL\".\n     */\n    public static void main(String[] a) throws Throwable {\n        String indexName = \"localhost_index\";\n        String fn = \"c:/Program Files/Apache Group/Apache/htdocs/manual/vhosts/index.html.en\";\n        URL url = null;\n        for (int i = 0; i < a.length; i++) {\n            if (a[i].equals(\"-i\")) {\n                indexName = a[++i];\n            }\n            else if (a[i].equals(\"-f\")) {\n                fn = a[++i];\n            }\n            else if (a[i].equals(\"-url\")) {\n                url = new URL(a[++i]);\n            }\n        }\n\n        PrintStream o = System.out;\n        FSDirectory dir = FSDirectory.open(new File(indexName));\n        IndexReader r = IndexReader.open(dir, true);\n        o.println(\"Open index \" + indexName + \" which has \" + r.numDocs() + \" docs\");\n\n        MoreLikeThis mlt = new MoreLikeThis(r);\n\n        o.println(\"Query generation parameters:\");\n        o.println(mlt.describeParams());\n        o.println();\n\n        Query query = null;\n        if (url != null) {\n            o.println(\"Parsing URL: \" + url);\n            query = mlt.like(url);\n        }\n        else if (fn != null) {\n            o.println(\"Parsing file: \" + fn);\n            query = mlt.like(new File(fn));\n        }\n\n        o.println(\"q: \" + query);\n        o.println();\n        IndexSearcher searcher = new IndexSearcher(dir, true);\n\n        TopDocs hits = searcher.search(query, null, 25);\n        int len = hits.totalHits;\n        o.println(\"found: \" + len + \" documents matching\");\n        o.println();\n        ScoreDoc[] scoreDocs = hits.scoreDocs;\n        for (int i = 0; i < Math.min(25, len); i++) {\n            Document d = searcher.doc(scoreDocs[i].doc);\n\t\t\tString summary = d.get( \"summary\");\n            o.println(\"score  : \" + scoreDocs[i].score);\n            o.println(\"url    : \" + d.get(\"url\"));\n            o.println(\"\\ttitle  : \" + d.get(\"title\"));\n\t\t\tif ( summary != null)\n\t\t\t\to.println(\"\\tsummary: \" + d.get(\"summary\"));\n            o.println();\n        }\n    }\n\n","sourceOld":"    /**\n     * Test driver.\n     * Pass in \"-i INDEX\" and then either \"-fn FILE\" or \"-url URL\".\n     */\n    public static void main(String[] a) throws Throwable {\n        String indexName = \"localhost_index\";\n        String fn = \"c:/Program Files/Apache Group/Apache/htdocs/manual/vhosts/index.html.en\";\n        URL url = null;\n        for (int i = 0; i < a.length; i++) {\n            if (a[i].equals(\"-i\")) {\n                indexName = a[++i];\n            }\n            else if (a[i].equals(\"-f\")) {\n                fn = a[++i];\n            }\n            else if (a[i].equals(\"-url\")) {\n                url = new URL(a[++i]);\n            }\n        }\n\n        PrintStream o = System.out;\n        FSDirectory dir = FSDirectory.open(new File(indexName));\n        IndexReader r = IndexReader.open(dir, true);\n        o.println(\"Open index \" + indexName + \" which has \" + r.numDocs() + \" docs\");\n\n        MoreLikeThis mlt = new MoreLikeThis(r);\n\n        o.println(\"Query generation parameters:\");\n        o.println(mlt.describeParams());\n        o.println();\n\n        Query query = null;\n        if (url != null) {\n            o.println(\"Parsing URL: \" + url);\n            query = mlt.like(url);\n        }\n        else if (fn != null) {\n            o.println(\"Parsing file: \" + fn);\n            query = mlt.like(new File(fn));\n        }\n\n        o.println(\"q: \" + query);\n        o.println();\n        IndexSearcher searcher = new IndexSearcher(dir, true);\n\n        TopDocs hits = searcher.search(query, null, 25);\n        int len = hits.totalHits;\n        o.println(\"found: \" + len + \" documents matching\");\n        o.println();\n        ScoreDoc[] scoreDocs = hits.scoreDocs;\n        for (int i = 0; i < Math.min(25, len); i++) {\n            Document d = searcher.doc(scoreDocs[i].doc);\n\t\t\tString summary = d.get( \"summary\");\n            o.println(\"score  : \" + scoreDocs[i].score);\n            o.println(\"url    : \" + d.get(\"url\"));\n            o.println(\"\\ttitle  : \" + d.get(\"title\"));\n\t\t\tif ( summary != null)\n\t\t\t\to.println(\"\\tsummary: \" + d.get(\"summary\"));\n            o.println();\n        }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e141595402370bee958745de8b1c9de1fa182581","date":1310547892,"type":3,"author":"Christopher John Male","isMerge":false,"pathNew":"lucene/contrib/queries/src/java/org/apache/lucene/search/similar/MoreLikeThis#main(String[]).mjava","pathOld":"lucene/contrib/queries/src/java/org/apache/lucene/search/similar/MoreLikeThis#main(String[]).mjava","sourceNew":"  /**\n   * Test driver.\n   * Pass in \"-i INDEX\" and then either \"-fn FILE\" or \"-url URL\".\n   */\n  public static void main(String[] a) throws Throwable {\n    String indexName = \"localhost_index\";\n    String fn = \"c:/Program Files/Apache Group/Apache/htdocs/manual/vhosts/index.html.en\";\n    URL url = null;\n    for (int i = 0; i < a.length; i++) {\n      if (a[i].equals(\"-i\")) {\n        indexName = a[++i];\n      } else if (a[i].equals(\"-f\")) {\n        fn = a[++i];\n      } else if (a[i].equals(\"-url\")) {\n        url = new URL(a[++i]);\n      }\n    }\n\n    PrintStream o = System.out;\n    FSDirectory dir = FSDirectory.open(new File(indexName));\n    IndexReader r = IndexReader.open(dir, true);\n    o.println(\"Open index \" + indexName + \" which has \" + r.numDocs() + \" docs\");\n\n    MoreLikeThis mlt = new MoreLikeThis(r);\n\n    o.println(\"Query generation parameters:\");\n    o.println(mlt.describeParams());\n    o.println();\n\n    Query query = null;\n    if (url != null) {\n      o.println(\"Parsing URL: \" + url);\n      query = mlt.like(url);\n    } else if (fn != null) {\n      o.println(\"Parsing file: \" + fn);\n      query = mlt.like(new File(fn));\n    }\n\n    o.println(\"q: \" + query);\n    o.println();\n    IndexSearcher searcher = new IndexSearcher(dir, true);\n\n    TopDocs hits = searcher.search(query, null, 25);\n    int len = hits.totalHits;\n    o.println(\"found: \" + len + \" documents matching\");\n    o.println();\n    ScoreDoc[] scoreDocs = hits.scoreDocs;\n    for (int i = 0; i < Math.min(25, len); i++) {\n      Document d = searcher.doc(scoreDocs[i].doc);\n      String summary = d.get(\"summary\");\n      o.println(\"score  : \" + scoreDocs[i].score);\n      o.println(\"url    : \" + d.get(\"url\"));\n      o.println(\"\\ttitle  : \" + d.get(\"title\"));\n      if (summary != null)\n        o.println(\"\\tsummary: \" + d.get(\"summary\"));\n      o.println();\n    }\n  }\n\n","sourceOld":"    /**\n     * Test driver.\n     * Pass in \"-i INDEX\" and then either \"-fn FILE\" or \"-url URL\".\n     */\n    public static void main(String[] a) throws Throwable {\n        String indexName = \"localhost_index\";\n        String fn = \"c:/Program Files/Apache Group/Apache/htdocs/manual/vhosts/index.html.en\";\n        URL url = null;\n        for (int i = 0; i < a.length; i++) {\n            if (a[i].equals(\"-i\")) {\n                indexName = a[++i];\n            }\n            else if (a[i].equals(\"-f\")) {\n                fn = a[++i];\n            }\n            else if (a[i].equals(\"-url\")) {\n                url = new URL(a[++i]);\n            }\n        }\n\n        PrintStream o = System.out;\n        FSDirectory dir = FSDirectory.open(new File(indexName));\n        IndexReader r = IndexReader.open(dir, true);\n        o.println(\"Open index \" + indexName + \" which has \" + r.numDocs() + \" docs\");\n\n        MoreLikeThis mlt = new MoreLikeThis(r);\n\n        o.println(\"Query generation parameters:\");\n        o.println(mlt.describeParams());\n        o.println();\n\n        Query query = null;\n        if (url != null) {\n            o.println(\"Parsing URL: \" + url);\n            query = mlt.like(url);\n        }\n        else if (fn != null) {\n            o.println(\"Parsing file: \" + fn);\n            query = mlt.like(new File(fn));\n        }\n\n        o.println(\"q: \" + query);\n        o.println();\n        IndexSearcher searcher = new IndexSearcher(dir, true);\n\n        TopDocs hits = searcher.search(query, null, 25);\n        int len = hits.totalHits;\n        o.println(\"found: \" + len + \" documents matching\");\n        o.println();\n        ScoreDoc[] scoreDocs = hits.scoreDocs;\n        for (int i = 0; i < Math.min(25, len); i++) {\n            Document d = searcher.doc(scoreDocs[i].doc);\n\t\t\tString summary = d.get( \"summary\");\n            o.println(\"score  : \" + scoreDocs[i].score);\n            o.println(\"url    : \" + d.get(\"url\"));\n            o.println(\"\\ttitle  : \" + d.get(\"title\"));\n\t\t\tif ( summary != null)\n\t\t\t\to.println(\"\\tsummary: \" + d.get(\"summary\"));\n            o.println();\n        }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b7bae1b88906b69dec0d80b1a7afc3c98ec50fa1","date":1310609231,"type":5,"author":"Christopher John Male","isMerge":false,"pathNew":"modules/queries/src/java/org/apache/lucene/queries/mlt/MoreLikeThis#main(String[]).mjava","pathOld":"lucene/contrib/queries/src/java/org/apache/lucene/search/similar/MoreLikeThis#main(String[]).mjava","sourceNew":"  /**\n   * Test driver.\n   * Pass in \"-i INDEX\" and then either \"-fn FILE\" or \"-url URL\".\n   */\n  public static void main(String[] a) throws Throwable {\n    String indexName = \"localhost_index\";\n    String fn = \"c:/Program Files/Apache Group/Apache/htdocs/manual/vhosts/index.html.en\";\n    URL url = null;\n    for (int i = 0; i < a.length; i++) {\n      if (a[i].equals(\"-i\")) {\n        indexName = a[++i];\n      } else if (a[i].equals(\"-f\")) {\n        fn = a[++i];\n      } else if (a[i].equals(\"-url\")) {\n        url = new URL(a[++i]);\n      }\n    }\n\n    PrintStream o = System.out;\n    FSDirectory dir = FSDirectory.open(new File(indexName));\n    IndexReader r = IndexReader.open(dir, true);\n    o.println(\"Open index \" + indexName + \" which has \" + r.numDocs() + \" docs\");\n\n    MoreLikeThis mlt = new MoreLikeThis(r);\n\n    o.println(\"Query generation parameters:\");\n    o.println(mlt.describeParams());\n    o.println();\n\n    Query query = null;\n    if (url != null) {\n      o.println(\"Parsing URL: \" + url);\n      query = mlt.like(url);\n    } else if (fn != null) {\n      o.println(\"Parsing file: \" + fn);\n      query = mlt.like(new File(fn));\n    }\n\n    o.println(\"q: \" + query);\n    o.println();\n    IndexSearcher searcher = new IndexSearcher(dir, true);\n\n    TopDocs hits = searcher.search(query, null, 25);\n    int len = hits.totalHits;\n    o.println(\"found: \" + len + \" documents matching\");\n    o.println();\n    ScoreDoc[] scoreDocs = hits.scoreDocs;\n    for (int i = 0; i < Math.min(25, len); i++) {\n      Document d = searcher.doc(scoreDocs[i].doc);\n      String summary = d.get(\"summary\");\n      o.println(\"score  : \" + scoreDocs[i].score);\n      o.println(\"url    : \" + d.get(\"url\"));\n      o.println(\"\\ttitle  : \" + d.get(\"title\"));\n      if (summary != null)\n        o.println(\"\\tsummary: \" + d.get(\"summary\"));\n      o.println();\n    }\n  }\n\n","sourceOld":"  /**\n   * Test driver.\n   * Pass in \"-i INDEX\" and then either \"-fn FILE\" or \"-url URL\".\n   */\n  public static void main(String[] a) throws Throwable {\n    String indexName = \"localhost_index\";\n    String fn = \"c:/Program Files/Apache Group/Apache/htdocs/manual/vhosts/index.html.en\";\n    URL url = null;\n    for (int i = 0; i < a.length; i++) {\n      if (a[i].equals(\"-i\")) {\n        indexName = a[++i];\n      } else if (a[i].equals(\"-f\")) {\n        fn = a[++i];\n      } else if (a[i].equals(\"-url\")) {\n        url = new URL(a[++i]);\n      }\n    }\n\n    PrintStream o = System.out;\n    FSDirectory dir = FSDirectory.open(new File(indexName));\n    IndexReader r = IndexReader.open(dir, true);\n    o.println(\"Open index \" + indexName + \" which has \" + r.numDocs() + \" docs\");\n\n    MoreLikeThis mlt = new MoreLikeThis(r);\n\n    o.println(\"Query generation parameters:\");\n    o.println(mlt.describeParams());\n    o.println();\n\n    Query query = null;\n    if (url != null) {\n      o.println(\"Parsing URL: \" + url);\n      query = mlt.like(url);\n    } else if (fn != null) {\n      o.println(\"Parsing file: \" + fn);\n      query = mlt.like(new File(fn));\n    }\n\n    o.println(\"q: \" + query);\n    o.println();\n    IndexSearcher searcher = new IndexSearcher(dir, true);\n\n    TopDocs hits = searcher.search(query, null, 25);\n    int len = hits.totalHits;\n    o.println(\"found: \" + len + \" documents matching\");\n    o.println();\n    ScoreDoc[] scoreDocs = hits.scoreDocs;\n    for (int i = 0; i < Math.min(25, len); i++) {\n      Document d = searcher.doc(scoreDocs[i].doc);\n      String summary = d.get(\"summary\");\n      o.println(\"score  : \" + scoreDocs[i].score);\n      o.println(\"url    : \" + d.get(\"url\"));\n      o.println(\"\\ttitle  : \" + d.get(\"title\"));\n      if (summary != null)\n        o.println(\"\\tsummary: \" + d.get(\"summary\"));\n      o.println();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"b7bae1b88906b69dec0d80b1a7afc3c98ec50fa1":["e141595402370bee958745de8b1c9de1fa182581"],"e141595402370bee958745de8b1c9de1fa182581":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b7bae1b88906b69dec0d80b1a7afc3c98ec50fa1"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"b7bae1b88906b69dec0d80b1a7afc3c98ec50fa1":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"e141595402370bee958745de8b1c9de1fa182581":["b7bae1b88906b69dec0d80b1a7afc3c98ec50fa1"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["e141595402370bee958745de8b1c9de1fa182581"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}