{"path":"lucene/src/test/org/apache/lucene/index/TestIndexWriterExceptions.FailOnlyOnFlush#eval(MockDirectoryWrapper).mjava","commits":[{"id":"fd4c4b2a55a46d2c45e3de4514f08e33215caa21","date":1288902330,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexWriterExceptions.FailOnlyOnFlush#eval(MockDirectoryWrapper).mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexWriter.FailOnlyOnFlush#eval(MockDirectoryWrapper).mjava","sourceNew":"    @Override\n    public void eval(MockDirectoryWrapper dir)  throws IOException {\n      if (doFail) {\n        StackTraceElement[] trace = new Exception().getStackTrace();\n        boolean sawAppend = false;\n        boolean sawFlush = false;\n        for (int i = 0; i < trace.length; i++) {\n          if (\"org.apache.lucene.index.FreqProxTermsWriter\".equals(trace[i].getClassName()) && \"appendPostings\".equals(trace[i].getMethodName()))\n            sawAppend = true;\n          if (\"doFlush\".equals(trace[i].getMethodName()))\n            sawFlush = true;\n        }\n\n        if (sawAppend && sawFlush && count++ >= 30) {\n          doFail = false;\n          throw new IOException(\"now failing during flush\");\n        }\n      }\n    }\n\n","sourceOld":"    @Override\n    public void eval(MockDirectoryWrapper dir)  throws IOException {\n      if (doFail) {\n        StackTraceElement[] trace = new Exception().getStackTrace();\n        boolean sawAppend = false;\n        boolean sawFlush = false;\n        for (int i = 0; i < trace.length; i++) {\n          if (\"org.apache.lucene.index.FreqProxTermsWriter\".equals(trace[i].getClassName()) && \"appendPostings\".equals(trace[i].getMethodName()))\n            sawAppend = true;\n          if (\"doFlush\".equals(trace[i].getMethodName()))\n            sawFlush = true;\n        }\n\n        if (sawAppend && sawFlush && count++ >= 30) {\n          doFail = false;\n          throw new IOException(\"now failing during flush\");\n        }\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"85a883878c0af761245ab048babc63d099f835f3","date":1289553330,"type":1,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexWriterExceptions.FailOnlyOnFlush#eval(MockDirectoryWrapper).mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexWriter.FailOnlyOnFlush#eval(MockDirectoryWrapper).mjava","sourceNew":"    @Override\n    public void eval(MockDirectoryWrapper dir)  throws IOException {\n      if (doFail) {\n        StackTraceElement[] trace = new Exception().getStackTrace();\n        boolean sawAppend = false;\n        boolean sawFlush = false;\n        for (int i = 0; i < trace.length; i++) {\n          if (\"org.apache.lucene.index.FreqProxTermsWriter\".equals(trace[i].getClassName()) && \"appendPostings\".equals(trace[i].getMethodName()))\n            sawAppend = true;\n          if (\"doFlush\".equals(trace[i].getMethodName()))\n            sawFlush = true;\n        }\n\n        if (sawAppend && sawFlush && count++ >= 30) {\n          doFail = false;\n          throw new IOException(\"now failing during flush\");\n        }\n      }\n    }\n\n","sourceOld":"    @Override\n    public void eval(MockDirectoryWrapper dir)  throws IOException {\n      if (doFail) {\n        StackTraceElement[] trace = new Exception().getStackTrace();\n        boolean sawAppend = false;\n        boolean sawFlush = false;\n        for (int i = 0; i < trace.length; i++) {\n          if (\"org.apache.lucene.index.FreqProxTermsWriter\".equals(trace[i].getClassName()) && \"appendPostings\".equals(trace[i].getMethodName()))\n            sawAppend = true;\n          if (\"doFlush\".equals(trace[i].getMethodName()))\n            sawFlush = true;\n        }\n\n        if (sawAppend && sawFlush && count++ >= 30) {\n          doFail = false;\n          throw new IOException(\"now failing during flush\");\n        }\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","date":1292920096,"type":0,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexWriterExceptions.FailOnlyOnFlush#eval(MockDirectoryWrapper).mjava","pathOld":"/dev/null","sourceNew":"    @Override\n    public void eval(MockDirectoryWrapper dir)  throws IOException {\n      if (doFail) {\n        StackTraceElement[] trace = new Exception().getStackTrace();\n        boolean sawAppend = false;\n        boolean sawFlush = false;\n        for (int i = 0; i < trace.length; i++) {\n          if (\"org.apache.lucene.index.FreqProxTermsWriter\".equals(trace[i].getClassName()) && \"appendPostings\".equals(trace[i].getMethodName()))\n            sawAppend = true;\n          if (\"doFlush\".equals(trace[i].getMethodName()))\n            sawFlush = true;\n        }\n\n        if (sawAppend && sawFlush && count++ >= 30) {\n          doFail = false;\n          throw new IOException(\"now failing during flush\");\n        }\n      }\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"14975dba6846360ff627c6797726fa4899a3413d","date":1295174738,"type":3,"author":"Michael Busch","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexWriterExceptions.FailOnlyOnFlush#eval(MockDirectoryWrapper).mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexWriterExceptions.FailOnlyOnFlush#eval(MockDirectoryWrapper).mjava","sourceNew":"    @Override\n    public void eval(MockDirectoryWrapper dir)  throws IOException {\n      if (doFail) {\n        StackTraceElement[] trace = new Exception().getStackTrace();\n        boolean sawAppend = false;\n        boolean sawFlush = false;\n        for (int i = 0; i < trace.length; i++) {\n          if (\"org.apache.lucene.index.FreqProxTermsWriterPerField\".equals(trace[i].getClassName()) && \"flush\".equals(trace[i].getMethodName()))\n            sawAppend = true;\n          if (\"flush\".equals(trace[i].getMethodName()))\n            sawFlush = true;\n        }\n\n        if (sawAppend && sawFlush && count++ >= 30) {\n          doFail = false;\n          throw new IOException(\"now failing during flush\");\n        }\n      }\n    }\n\n","sourceOld":"    @Override\n    public void eval(MockDirectoryWrapper dir)  throws IOException {\n      if (doFail) {\n        StackTraceElement[] trace = new Exception().getStackTrace();\n        boolean sawAppend = false;\n        boolean sawFlush = false;\n        for (int i = 0; i < trace.length; i++) {\n          if (\"org.apache.lucene.index.FreqProxTermsWriter\".equals(trace[i].getClassName()) && \"appendPostings\".equals(trace[i].getMethodName()))\n            sawAppend = true;\n          if (\"doFlush\".equals(trace[i].getMethodName()))\n            sawFlush = true;\n        }\n\n        if (sawAppend && sawFlush && count++ >= 30) {\n          doFail = false;\n          throw new IOException(\"now failing during flush\");\n        }\n      }\n    }\n\n","bugFix":null,"bugIntro":["66d4c05d2724c63d6dcbdb32aab67299d77e3ca1"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"b3e06be49006ecac364d39d12b9c9f74882f9b9f","date":1304289513,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexWriterExceptions.FailOnlyOnFlush#eval(MockDirectoryWrapper).mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexWriterExceptions.FailOnlyOnFlush#eval(MockDirectoryWrapper).mjava","sourceNew":"    @Override\n    public void eval(MockDirectoryWrapper dir)  throws IOException {\n      if (doFail) {\n        StackTraceElement[] trace = new Exception().getStackTrace();\n        boolean sawAppend = false;\n        boolean sawFlush = false;\n        for (int i = 0; i < trace.length; i++) {\n          if (\"org.apache.lucene.index.FreqProxTermsWriterPerField\".equals(trace[i].getClassName()) && \"flush\".equals(trace[i].getMethodName()))\n            sawAppend = true;\n          if (\"flush\".equals(trace[i].getMethodName()))\n            sawFlush = true;\n        }\n\n        if (sawAppend && sawFlush && count++ >= 30) {\n          doFail = false;\n          throw new IOException(\"now failing during flush\");\n        }\n      }\n    }\n\n","sourceOld":"    @Override\n    public void eval(MockDirectoryWrapper dir)  throws IOException {\n      if (doFail) {\n        StackTraceElement[] trace = new Exception().getStackTrace();\n        boolean sawAppend = false;\n        boolean sawFlush = false;\n        for (int i = 0; i < trace.length; i++) {\n          if (\"org.apache.lucene.index.FreqProxTermsWriter\".equals(trace[i].getClassName()) && \"appendPostings\".equals(trace[i].getMethodName()))\n            sawAppend = true;\n          if (\"doFlush\".equals(trace[i].getMethodName()))\n            sawFlush = true;\n        }\n\n        if (sawAppend && sawFlush && count++ >= 30) {\n          doFail = false;\n          throw new IOException(\"now failing during flush\");\n        }\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"135621f3a0670a9394eb563224a3b76cc4dddc0f","date":1304344257,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexWriterExceptions.FailOnlyOnFlush#eval(MockDirectoryWrapper).mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexWriterExceptions.FailOnlyOnFlush#eval(MockDirectoryWrapper).mjava","sourceNew":"    @Override\n    public void eval(MockDirectoryWrapper dir)  throws IOException {\n      if (doFail) {\n        StackTraceElement[] trace = new Exception().getStackTrace();\n        boolean sawAppend = false;\n        boolean sawFlush = false;\n        for (int i = 0; i < trace.length; i++) {\n          if (\"org.apache.lucene.index.FreqProxTermsWriterPerField\".equals(trace[i].getClassName()) && \"flush\".equals(trace[i].getMethodName()))\n            sawAppend = true;\n          if (\"flush\".equals(trace[i].getMethodName()))\n            sawFlush = true;\n        }\n\n        if (sawAppend && sawFlush && count++ >= 30) {\n          doFail = false;\n          throw new IOException(\"now failing during flush\");\n        }\n      }\n    }\n\n","sourceOld":"    @Override\n    public void eval(MockDirectoryWrapper dir)  throws IOException {\n      if (doFail) {\n        StackTraceElement[] trace = new Exception().getStackTrace();\n        boolean sawAppend = false;\n        boolean sawFlush = false;\n        for (int i = 0; i < trace.length; i++) {\n          if (\"org.apache.lucene.index.FreqProxTermsWriter\".equals(trace[i].getClassName()) && \"appendPostings\".equals(trace[i].getMethodName()))\n            sawAppend = true;\n          if (\"doFlush\".equals(trace[i].getMethodName()))\n            sawFlush = true;\n        }\n\n        if (sawAppend && sawFlush && count++ >= 30) {\n          doFail = false;\n          throw new IOException(\"now failing during flush\");\n        }\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a3776dccca01c11e7046323cfad46a3b4a471233","date":1306100719,"type":3,"author":"Steven Rowe","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexWriterExceptions.FailOnlyOnFlush#eval(MockDirectoryWrapper).mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexWriterExceptions.FailOnlyOnFlush#eval(MockDirectoryWrapper).mjava","sourceNew":"    @Override\n    public void eval(MockDirectoryWrapper dir)  throws IOException {\n      if (doFail) {\n        StackTraceElement[] trace = new Exception().getStackTrace();\n        boolean sawAppend = false;\n        boolean sawFlush = false;\n        for (int i = 0; i < trace.length; i++) {\n          if (\"org.apache.lucene.index.FreqProxTermsWriterPerField\".equals(trace[i].getClassName()) && \"flush\".equals(trace[i].getMethodName()))\n            sawAppend = true;\n          if (\"flush\".equals(trace[i].getMethodName()))\n            sawFlush = true;\n        }\n\n        if (sawAppend && sawFlush && count++ >= 30) {\n          doFail = false;\n          throw new IOException(\"now failing during flush\");\n        }\n      }\n    }\n\n","sourceOld":"    @Override\n    public void eval(MockDirectoryWrapper dir)  throws IOException {\n      if (doFail) {\n        StackTraceElement[] trace = new Exception().getStackTrace();\n        boolean sawAppend = false;\n        boolean sawFlush = false;\n        for (int i = 0; i < trace.length; i++) {\n          if (\"org.apache.lucene.index.FreqProxTermsWriter\".equals(trace[i].getClassName()) && \"appendPostings\".equals(trace[i].getMethodName()))\n            sawAppend = true;\n          if (\"doFlush\".equals(trace[i].getMethodName()))\n            sawFlush = true;\n        }\n\n        if (sawAppend && sawFlush && count++ >= 30) {\n          doFail = false;\n          throw new IOException(\"now failing during flush\");\n        }\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3cc749c053615f5871f3b95715fe292f34e70a53","date":1321470575,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexWriterExceptions.FailOnlyOnFlush#eval(MockDirectoryWrapper).mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexWriterExceptions.FailOnlyOnFlush#eval(MockDirectoryWrapper).mjava","sourceNew":"    @Override\n    public void eval(MockDirectoryWrapper dir)  throws IOException {\n      if (doFail) {\n        StackTraceElement[] trace = new Exception().getStackTrace();\n        boolean sawAppend = false;\n        boolean sawFlush = false;\n        for (int i = 0; i < trace.length; i++) {\n          if (FreqProxTermsWriterPerField.class.getName().equals(trace[i].getClassName()) && \"flush\".equals(trace[i].getMethodName()))\n            sawAppend = true;\n          if (\"flush\".equals(trace[i].getMethodName()))\n            sawFlush = true;\n        }\n\n        if (sawAppend && sawFlush && count++ >= 30) {\n          doFail = false;\n          throw new IOException(\"now failing during flush\");\n        }\n      }\n    }\n\n","sourceOld":"    @Override\n    public void eval(MockDirectoryWrapper dir)  throws IOException {\n      if (doFail) {\n        StackTraceElement[] trace = new Exception().getStackTrace();\n        boolean sawAppend = false;\n        boolean sawFlush = false;\n        for (int i = 0; i < trace.length; i++) {\n          if (\"org.apache.lucene.index.FreqProxTermsWriterPerField\".equals(trace[i].getClassName()) && \"flush\".equals(trace[i].getMethodName()))\n            sawAppend = true;\n          if (\"flush\".equals(trace[i].getMethodName()))\n            sawFlush = true;\n        }\n\n        if (sawAppend && sawFlush && count++ >= 30) {\n          doFail = false;\n          throw new IOException(\"now failing during flush\");\n        }\n      }\n    }\n\n","bugFix":null,"bugIntro":["66d4c05d2724c63d6dcbdb32aab67299d77e3ca1"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":5,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriterExceptions.FailOnlyOnFlush#eval(MockDirectoryWrapper).mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexWriterExceptions.FailOnlyOnFlush#eval(MockDirectoryWrapper).mjava","sourceNew":"    @Override\n    public void eval(MockDirectoryWrapper dir)  throws IOException {\n      if (doFail) {\n        StackTraceElement[] trace = new Exception().getStackTrace();\n        boolean sawAppend = false;\n        boolean sawFlush = false;\n        for (int i = 0; i < trace.length; i++) {\n          if (FreqProxTermsWriterPerField.class.getName().equals(trace[i].getClassName()) && \"flush\".equals(trace[i].getMethodName()))\n            sawAppend = true;\n          if (\"flush\".equals(trace[i].getMethodName()))\n            sawFlush = true;\n        }\n\n        if (sawAppend && sawFlush && count++ >= 30) {\n          doFail = false;\n          throw new IOException(\"now failing during flush\");\n        }\n      }\n    }\n\n","sourceOld":"    @Override\n    public void eval(MockDirectoryWrapper dir)  throws IOException {\n      if (doFail) {\n        StackTraceElement[] trace = new Exception().getStackTrace();\n        boolean sawAppend = false;\n        boolean sawFlush = false;\n        for (int i = 0; i < trace.length; i++) {\n          if (FreqProxTermsWriterPerField.class.getName().equals(trace[i].getClassName()) && \"flush\".equals(trace[i].getMethodName()))\n            sawAppend = true;\n          if (\"flush\".equals(trace[i].getMethodName()))\n            sawFlush = true;\n        }\n\n        if (sawAppend && sawFlush && count++ >= 30) {\n          doFail = false;\n          throw new IOException(\"now failing during flush\");\n        }\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["3cc749c053615f5871f3b95715fe292f34e70a53"],"a3776dccca01c11e7046323cfad46a3b4a471233":["fd4c4b2a55a46d2c45e3de4514f08e33215caa21","b3e06be49006ecac364d39d12b9c9f74882f9b9f"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"85a883878c0af761245ab048babc63d099f835f3":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","fd4c4b2a55a46d2c45e3de4514f08e33215caa21"],"135621f3a0670a9394eb563224a3b76cc4dddc0f":["85a883878c0af761245ab048babc63d099f835f3","b3e06be49006ecac364d39d12b9c9f74882f9b9f"],"fd4c4b2a55a46d2c45e3de4514f08e33215caa21":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"3cc749c053615f5871f3b95715fe292f34e70a53":["b3e06be49006ecac364d39d12b9c9f74882f9b9f"],"b3e06be49006ecac364d39d12b9c9f74882f9b9f":["fd4c4b2a55a46d2c45e3de4514f08e33215caa21","14975dba6846360ff627c6797726fa4899a3413d"],"14975dba6846360ff627c6797726fa4899a3413d":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","fd4c4b2a55a46d2c45e3de4514f08e33215caa21"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"]},"commit2Childs":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a3776dccca01c11e7046323cfad46a3b4a471233":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["85a883878c0af761245ab048babc63d099f835f3","fd4c4b2a55a46d2c45e3de4514f08e33215caa21","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a"],"85a883878c0af761245ab048babc63d099f835f3":["135621f3a0670a9394eb563224a3b76cc4dddc0f"],"135621f3a0670a9394eb563224a3b76cc4dddc0f":[],"fd4c4b2a55a46d2c45e3de4514f08e33215caa21":["a3776dccca01c11e7046323cfad46a3b4a471233","85a883878c0af761245ab048babc63d099f835f3","b3e06be49006ecac364d39d12b9c9f74882f9b9f","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a"],"3cc749c053615f5871f3b95715fe292f34e70a53":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"b3e06be49006ecac364d39d12b9c9f74882f9b9f":["a3776dccca01c11e7046323cfad46a3b4a471233","135621f3a0670a9394eb563224a3b76cc4dddc0f","3cc749c053615f5871f3b95715fe292f34e70a53"],"14975dba6846360ff627c6797726fa4899a3413d":["b3e06be49006ecac364d39d12b9c9f74882f9b9f"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["14975dba6846360ff627c6797726fa4899a3413d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a3776dccca01c11e7046323cfad46a3b4a471233","135621f3a0670a9394eb563224a3b76cc4dddc0f","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}