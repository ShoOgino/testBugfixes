{"path":"solr/core/src/test/org/apache/solr/search/TestComplexPhraseLeadingWildcard#checkField(String).mjava","commits":[{"id":"ccff665065c8b73e2b143bd5d0277fdb3c8e7f0b","date":1483542662,"type":0,"author":"Mikhail Khludnev","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/search/TestComplexPhraseLeadingWildcard#checkField(String).mjava","pathOld":"/dev/null","sourceNew":"  private void checkField(String field) {\n    assertQ(\n        req(\"q\",\"{!complexphrase inOrder=true}\\\"on* *ver\\\"\",\n            \"df\",field,\n            \"indent\",\"on\",\n            \"debugQuery\", \"true\"),\n        expect(\"1\",\"2\"));\n    \n    assertQ(\n        req(\"q\",\"{!complexphrase inOrder=true}\\\"ON* *VER\\\"\",\n            \"df\",field), \n        expect(\"1\",\"2\"));\n    \n    assertQ(\n        req(\"q\",\"{!complexphrase inOrder=true}\\\"ON* *ver\\\"\",\n            \"df\",field), \n        expect(\"1\",\"2\"));\n    \n    assertQ(\n        req(\"q\",\"{!complexphrase inOrder=true}\\\"on* *ver\\\"~1\",\n            \"df\",field),\n        expect(\"1\",\"2\",\"7\"));\n    \n    assertQ(\"range works if reverse doesn't mess\",\n        req(\"q\",\"{!complexphrase inOrder=true}\\\"on* [* TO a]\\\"\",\n            \"df\",field),\n        expect());\n\n    assertQ(\"range works if reverse doesn't mess\",\n        req(\"q\",\"{!complexphrase inOrder=true}\\\"[on TO onZ] for*\\\"\",\n            \"df\",field),\n        expect(\"2\"));\n  } \n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"491c9672ec42582fe43960452dbd37f1c80fe0f0","date":1483739222,"type":0,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/search/TestComplexPhraseLeadingWildcard#checkField(String).mjava","pathOld":"/dev/null","sourceNew":"  private void checkField(String field) {\n    assertQ(\n        req(\"q\",\"{!complexphrase inOrder=true}\\\"on* *ver\\\"\",\n            \"df\",field,\n            \"indent\",\"on\",\n            \"debugQuery\", \"true\"),\n        expect(\"1\",\"2\"));\n    \n    assertQ(\n        req(\"q\",\"{!complexphrase inOrder=true}\\\"ON* *VER\\\"\",\n            \"df\",field), \n        expect(\"1\",\"2\"));\n    \n    assertQ(\n        req(\"q\",\"{!complexphrase inOrder=true}\\\"ON* *ver\\\"\",\n            \"df\",field), \n        expect(\"1\",\"2\"));\n    \n    assertQ(\n        req(\"q\",\"{!complexphrase inOrder=true}\\\"on* *ver\\\"~1\",\n            \"df\",field),\n        expect(\"1\",\"2\",\"7\"));\n    \n    assertQ(\"range works if reverse doesn't mess\",\n        req(\"q\",\"{!complexphrase inOrder=true}\\\"on* [* TO a]\\\"\",\n            \"df\",field),\n        expect());\n\n    assertQ(\"range works if reverse doesn't mess\",\n        req(\"q\",\"{!complexphrase inOrder=true}\\\"[on TO onZ] for*\\\"\",\n            \"df\",field),\n        expect(\"2\"));\n  } \n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"ccff665065c8b73e2b143bd5d0277fdb3c8e7f0b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["ccff665065c8b73e2b143bd5d0277fdb3c8e7f0b"],"491c9672ec42582fe43960452dbd37f1c80fe0f0":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","ccff665065c8b73e2b143bd5d0277fdb3c8e7f0b"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["ccff665065c8b73e2b143bd5d0277fdb3c8e7f0b","491c9672ec42582fe43960452dbd37f1c80fe0f0"],"ccff665065c8b73e2b143bd5d0277fdb3c8e7f0b":["cd5edd1f2b162a5cfa08efd17851a07373a96817","491c9672ec42582fe43960452dbd37f1c80fe0f0"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"491c9672ec42582fe43960452dbd37f1c80fe0f0":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817","491c9672ec42582fe43960452dbd37f1c80fe0f0"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}