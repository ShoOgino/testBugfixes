{"path":"solr/core/src/java/org/apache/solr/core/SolrCore#getStatistics().mjava","commits":[{"id":"c903c3d15906a3da96b8c0c2fb704491005fdbdb","date":1453508227,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/SolrCore#getStatistics().mjava","pathOld":"solr/src/java/org/apache/solr/core/SolrCore#getStatistics().mjava","sourceNew":"  public NamedList getStatistics() {\n    NamedList<Object> lst = new SimpleOrderedMap<Object>();\n    lst.add(\"coreName\", name==null ? \"(null)\" : name);\n    lst.add(\"startTime\", new Date(startTime));\n    lst.add(\"refCount\", getOpenCount());\n\n    if (null != getCoreDescriptor() && null != getCoreDescriptor().getCoreContainer()) {\n      lst.add(\"aliases\", getCoreDescriptor().getCoreContainer().getCoreNames(this));\n    }\n    return lst;\n  }\n\n","sourceOld":"  public NamedList getStatistics() {\n    NamedList<Object> lst = new SimpleOrderedMap<Object>();\n    lst.add(\"coreName\", name==null ? \"(null)\" : name);\n    lst.add(\"startTime\", new Date(startTime));\n    lst.add(\"refCount\", getOpenCount());\n\n    if (null != getCoreDescriptor() && null != getCoreDescriptor().getCoreContainer()) {\n      lst.add(\"aliases\", getCoreDescriptor().getCoreContainer().getCoreNames(this));\n    }\n    return lst;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a258fbb26824fd104ed795e5d9033d2d040049ee","date":1453508252,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/SolrCore#getStatistics().mjava","pathOld":"solr/src/java/org/apache/solr/core/SolrCore#getStatistics().mjava","sourceNew":"  public NamedList getStatistics() {\n    NamedList<Object> lst = new SimpleOrderedMap<Object>();\n    lst.add(\"coreName\", name==null ? \"(null)\" : name);\n    lst.add(\"startTime\", new Date(startTime));\n    lst.add(\"refCount\", getOpenCount());\n\n    if (null != getCoreDescriptor() && null != getCoreDescriptor().getCoreContainer()) {\n      lst.add(\"aliases\", getCoreDescriptor().getCoreContainer().getCoreNames(this));\n    }\n    return lst;\n  }\n\n","sourceOld":"  public NamedList getStatistics() {\n    NamedList<Object> lst = new SimpleOrderedMap<Object>();\n    lst.add(\"coreName\", name==null ? \"(null)\" : name);\n    lst.add(\"startTime\", new Date(startTime));\n    lst.add(\"refCount\", getOpenCount());\n\n    if (null != getCoreDescriptor() && null != getCoreDescriptor().getCoreContainer()) {\n      lst.add(\"aliases\", getCoreDescriptor().getCoreContainer().getCoreNames(this));\n    }\n    return lst;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/core/SolrCore#getStatistics().mjava","pathOld":"solr/src/java/org/apache/solr/core/SolrCore#getStatistics().mjava","sourceNew":"  public NamedList getStatistics() {\n    NamedList<Object> lst = new SimpleOrderedMap<Object>();\n    lst.add(\"coreName\", name==null ? \"(null)\" : name);\n    lst.add(\"startTime\", new Date(startTime));\n    lst.add(\"refCount\", getOpenCount());\n\n    if (null != getCoreDescriptor() && null != getCoreDescriptor().getCoreContainer()) {\n      lst.add(\"aliases\", getCoreDescriptor().getCoreContainer().getCoreNames(this));\n    }\n    return lst;\n  }\n\n","sourceOld":"  public NamedList getStatistics() {\n    NamedList<Object> lst = new SimpleOrderedMap<Object>();\n    lst.add(\"coreName\", name==null ? \"(null)\" : name);\n    lst.add(\"startTime\", new Date(startTime));\n    lst.add(\"refCount\", getOpenCount());\n\n    if (null != getCoreDescriptor() && null != getCoreDescriptor().getCoreContainer()) {\n      lst.add(\"aliases\", getCoreDescriptor().getCoreContainer().getCoreNames(this));\n    }\n    return lst;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bad6d9c88746be4a83822ab420b8c2398257cfb8","date":1341520565,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/SolrCore#getStatistics().mjava","pathOld":"solr/core/src/java/org/apache/solr/core/SolrCore#getStatistics().mjava","sourceNew":"  public NamedList getStatistics() {\n    NamedList<Object> lst = new SimpleOrderedMap<Object>();\n    lst.add(\"coreName\", name==null ? \"(null)\" : name);\n    lst.add(\"startTime\", new Date(startTime));\n    lst.add(\"refCount\", getOpenCount());\n\n    CoreDescriptor cd = getCoreDescriptor();\n    if (cd != null) {\n      if (null != cd && cd.getCoreContainer() != null) {\n        lst.add(\"aliases\", getCoreDescriptor().getCoreContainer().getCoreNames(this));\n      }\n      CloudDescriptor cloudDesc = cd.getCloudDescriptor();\n      if (cloudDesc != null) {\n        lst.add(\"collection\", cloudDesc.getCollectionName());\n        lst.add(\"shard\", cloudDesc.getShardId());\n      }\n    }\n    \n    return lst;\n  }\n\n","sourceOld":"  public NamedList getStatistics() {\n    NamedList<Object> lst = new SimpleOrderedMap<Object>();\n    lst.add(\"coreName\", name==null ? \"(null)\" : name);\n    lst.add(\"startTime\", new Date(startTime));\n    lst.add(\"refCount\", getOpenCount());\n\n    if (null != getCoreDescriptor() && null != getCoreDescriptor().getCoreContainer()) {\n      lst.add(\"aliases\", getCoreDescriptor().getCoreContainer().getCoreNames(this));\n    }\n    return lst;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8cc14f9076f47098376fc1e6e95eaad72ce8435d","date":1341891180,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/SolrCore#getStatistics().mjava","pathOld":"solr/core/src/java/org/apache/solr/core/SolrCore#getStatistics().mjava","sourceNew":"  public NamedList getStatistics() {\n    NamedList<Object> lst = new SimpleOrderedMap<Object>();\n    lst.add(\"coreName\", name==null ? \"(null)\" : name);\n    lst.add(\"startTime\", new Date(startTime));\n    lst.add(\"refCount\", getOpenCount());\n\n    CoreDescriptor cd = getCoreDescriptor();\n    if (cd != null) {\n      if (null != cd && cd.getCoreContainer() != null) {\n        lst.add(\"aliases\", getCoreDescriptor().getCoreContainer().getCoreNames(this));\n      }\n      CloudDescriptor cloudDesc = cd.getCloudDescriptor();\n      if (cloudDesc != null) {\n        String collection = cloudDesc.getCollectionName();\n        if (collection == null) {\n          collection = \"_notset_\";\n        }\n        lst.add(\"collection\", collection);\n        String shard = cloudDesc.getShardId();\n        if (shard == null) {\n          shard = \"_auto_\";\n        }\n        lst.add(\"shard\", shard);\n      }\n    }\n    \n    return lst;\n  }\n\n","sourceOld":"  public NamedList getStatistics() {\n    NamedList<Object> lst = new SimpleOrderedMap<Object>();\n    lst.add(\"coreName\", name==null ? \"(null)\" : name);\n    lst.add(\"startTime\", new Date(startTime));\n    lst.add(\"refCount\", getOpenCount());\n\n    CoreDescriptor cd = getCoreDescriptor();\n    if (cd != null) {\n      if (null != cd && cd.getCoreContainer() != null) {\n        lst.add(\"aliases\", getCoreDescriptor().getCoreContainer().getCoreNames(this));\n      }\n      CloudDescriptor cloudDesc = cd.getCloudDescriptor();\n      if (cloudDesc != null) {\n        lst.add(\"collection\", cloudDesc.getCollectionName());\n        lst.add(\"shard\", cloudDesc.getShardId());\n      }\n    }\n    \n    return lst;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fe33227f6805edab2036cbb80645cc4e2d1fa424","date":1342713534,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/core/SolrCore#getStatistics().mjava","pathOld":"solr/core/src/java/org/apache/solr/core/SolrCore#getStatistics().mjava","sourceNew":"  public NamedList getStatistics() {\n    NamedList<Object> lst = new SimpleOrderedMap<Object>();\n    lst.add(\"coreName\", name==null ? \"(null)\" : name);\n    lst.add(\"startTime\", new Date(startTime));\n    lst.add(\"refCount\", getOpenCount());\n\n    CoreDescriptor cd = getCoreDescriptor();\n    if (cd != null) {\n      if (null != cd && cd.getCoreContainer() != null) {\n        lst.add(\"aliases\", getCoreDescriptor().getCoreContainer().getCoreNames(this));\n      }\n      CloudDescriptor cloudDesc = cd.getCloudDescriptor();\n      if (cloudDesc != null) {\n        String collection = cloudDesc.getCollectionName();\n        if (collection == null) {\n          collection = \"_notset_\";\n        }\n        lst.add(\"collection\", collection);\n        String shard = cloudDesc.getShardId();\n        if (shard == null) {\n          shard = \"_auto_\";\n        }\n        lst.add(\"shard\", shard);\n      }\n    }\n    \n    return lst;\n  }\n\n","sourceOld":"  public NamedList getStatistics() {\n    NamedList<Object> lst = new SimpleOrderedMap<Object>();\n    lst.add(\"coreName\", name==null ? \"(null)\" : name);\n    lst.add(\"startTime\", new Date(startTime));\n    lst.add(\"refCount\", getOpenCount());\n\n    if (null != getCoreDescriptor() && null != getCoreDescriptor().getCoreContainer()) {\n      lst.add(\"aliases\", getCoreDescriptor().getCoreContainer().getCoreNames(this));\n    }\n    return lst;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"aba371508186796cc6151d8223a5b4e16d02e26e","date":1343474871,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/core/SolrCore#getStatistics().mjava","pathOld":"solr/core/src/java/org/apache/solr/core/SolrCore#getStatistics().mjava","sourceNew":"  public NamedList getStatistics() {\n    NamedList<Object> lst = new SimpleOrderedMap<Object>();\n    lst.add(\"coreName\", name==null ? \"(null)\" : name);\n    lst.add(\"startTime\", new Date(startTime));\n    lst.add(\"refCount\", getOpenCount());\n\n    CoreDescriptor cd = getCoreDescriptor();\n    if (cd != null) {\n      if (null != cd && cd.getCoreContainer() != null) {\n        lst.add(\"aliases\", getCoreDescriptor().getCoreContainer().getCoreNames(this));\n      }\n      CloudDescriptor cloudDesc = cd.getCloudDescriptor();\n      if (cloudDesc != null) {\n        String collection = cloudDesc.getCollectionName();\n        if (collection == null) {\n          collection = \"_notset_\";\n        }\n        lst.add(\"collection\", collection);\n        String shard = cloudDesc.getShardId();\n        if (shard == null) {\n          shard = \"_auto_\";\n        }\n        lst.add(\"shard\", shard);\n      }\n    }\n    \n    return lst;\n  }\n\n","sourceOld":"  public NamedList getStatistics() {\n    NamedList<Object> lst = new SimpleOrderedMap<Object>();\n    lst.add(\"coreName\", name==null ? \"(null)\" : name);\n    lst.add(\"startTime\", new Date(startTime));\n    lst.add(\"refCount\", getOpenCount());\n\n    CoreDescriptor cd = getCoreDescriptor();\n    if (cd != null) {\n      if (null != cd && cd.getCoreContainer() != null) {\n        lst.add(\"aliases\", getCoreDescriptor().getCoreContainer().getCoreNames(this));\n      }\n      CloudDescriptor cloudDesc = cd.getCloudDescriptor();\n      if (cloudDesc != null) {\n        lst.add(\"collection\", cloudDesc.getCollectionName());\n        lst.add(\"shard\", cloudDesc.getShardId());\n      }\n    }\n    \n    return lst;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7530de27b87b961b51f01bd1299b7004d46e8823","date":1355236261,"type":3,"author":"Shai Erera","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/SolrCore#getStatistics().mjava","pathOld":"solr/core/src/java/org/apache/solr/core/SolrCore#getStatistics().mjava","sourceNew":"  @Override\n  public NamedList getStatistics() {\n    NamedList<Object> lst = new SimpleOrderedMap<Object>();\n    lst.add(\"coreName\", name==null ? \"(null)\" : name);\n    lst.add(\"startTime\", new Date(startTime));\n    lst.add(\"refCount\", getOpenCount());\n\n    CoreDescriptor cd = getCoreDescriptor();\n    if (cd != null) {\n      if (null != cd && cd.getCoreContainer() != null) {\n        lst.add(\"aliases\", getCoreDescriptor().getCoreContainer().getCoreNames(this));\n      }\n      CloudDescriptor cloudDesc = cd.getCloudDescriptor();\n      if (cloudDesc != null) {\n        String collection = cloudDesc.getCollectionName();\n        if (collection == null) {\n          collection = \"_notset_\";\n        }\n        lst.add(\"collection\", collection);\n        String shard = cloudDesc.getShardId();\n        if (shard == null) {\n          shard = \"_auto_\";\n        }\n        lst.add(\"shard\", shard);\n      }\n    }\n    \n    return lst;\n  }\n\n","sourceOld":"  public NamedList getStatistics() {\n    NamedList<Object> lst = new SimpleOrderedMap<Object>();\n    lst.add(\"coreName\", name==null ? \"(null)\" : name);\n    lst.add(\"startTime\", new Date(startTime));\n    lst.add(\"refCount\", getOpenCount());\n\n    CoreDescriptor cd = getCoreDescriptor();\n    if (cd != null) {\n      if (null != cd && cd.getCoreContainer() != null) {\n        lst.add(\"aliases\", getCoreDescriptor().getCoreContainer().getCoreNames(this));\n      }\n      CloudDescriptor cloudDesc = cd.getCloudDescriptor();\n      if (cloudDesc != null) {\n        String collection = cloudDesc.getCollectionName();\n        if (collection == null) {\n          collection = \"_notset_\";\n        }\n        lst.add(\"collection\", collection);\n        String shard = cloudDesc.getShardId();\n        if (shard == null) {\n          shard = \"_auto_\";\n        }\n        lst.add(\"shard\", shard);\n      }\n    }\n    \n    return lst;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f0a4eeff354e8081247783f424a8e5a0fe106633","date":1355250757,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/SolrCore#getStatistics().mjava","pathOld":"solr/core/src/java/org/apache/solr/core/SolrCore#getStatistics().mjava","sourceNew":"  @Override\n  public NamedList getStatistics() {\n    NamedList<Object> lst = new SimpleOrderedMap<Object>();\n    lst.add(\"coreName\", name==null ? \"(null)\" : name);\n    lst.add(\"startTime\", new Date(startTime));\n    lst.add(\"refCount\", getOpenCount());\n    lst.add(\"indexDir\", getIndexDir());\n\n    CoreDescriptor cd = getCoreDescriptor();\n    if (cd != null) {\n      if (null != cd && cd.getCoreContainer() != null) {\n        lst.add(\"aliases\", getCoreDescriptor().getCoreContainer().getCoreNames(this));\n      }\n      CloudDescriptor cloudDesc = cd.getCloudDescriptor();\n      if (cloudDesc != null) {\n        String collection = cloudDesc.getCollectionName();\n        if (collection == null) {\n          collection = \"_notset_\";\n        }\n        lst.add(\"collection\", collection);\n        String shard = cloudDesc.getShardId();\n        if (shard == null) {\n          shard = \"_auto_\";\n        }\n        lst.add(\"shard\", shard);\n      }\n    }\n    \n    return lst;\n  }\n\n","sourceOld":"  @Override\n  public NamedList getStatistics() {\n    NamedList<Object> lst = new SimpleOrderedMap<Object>();\n    lst.add(\"coreName\", name==null ? \"(null)\" : name);\n    lst.add(\"startTime\", new Date(startTime));\n    lst.add(\"refCount\", getOpenCount());\n\n    CoreDescriptor cd = getCoreDescriptor();\n    if (cd != null) {\n      if (null != cd && cd.getCoreContainer() != null) {\n        lst.add(\"aliases\", getCoreDescriptor().getCoreContainer().getCoreNames(this));\n      }\n      CloudDescriptor cloudDesc = cd.getCloudDescriptor();\n      if (cloudDesc != null) {\n        String collection = cloudDesc.getCollectionName();\n        if (collection == null) {\n          collection = \"_notset_\";\n        }\n        lst.add(\"collection\", collection);\n        String shard = cloudDesc.getShardId();\n        if (shard == null) {\n          shard = \"_auto_\";\n        }\n        lst.add(\"shard\", shard);\n      }\n    }\n    \n    return lst;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d3fcb70cf561547c7bb1506e0cf32ca7b1287064","date":1357616416,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/core/SolrCore#getStatistics().mjava","pathOld":"solr/core/src/java/org/apache/solr/core/SolrCore#getStatistics().mjava","sourceNew":"  @Override\n  public NamedList getStatistics() {\n    NamedList<Object> lst = new SimpleOrderedMap<Object>();\n    lst.add(\"coreName\", name==null ? \"(null)\" : name);\n    lst.add(\"startTime\", new Date(startTime));\n    lst.add(\"refCount\", getOpenCount());\n    lst.add(\"indexDir\", getIndexDir());\n\n    CoreDescriptor cd = getCoreDescriptor();\n    if (cd != null) {\n      if (null != cd && cd.getCoreContainer() != null) {\n        lst.add(\"aliases\", getCoreDescriptor().getCoreContainer().getCoreNames(this));\n      }\n      CloudDescriptor cloudDesc = cd.getCloudDescriptor();\n      if (cloudDesc != null) {\n        String collection = cloudDesc.getCollectionName();\n        if (collection == null) {\n          collection = \"_notset_\";\n        }\n        lst.add(\"collection\", collection);\n        String shard = cloudDesc.getShardId();\n        if (shard == null) {\n          shard = \"_auto_\";\n        }\n        lst.add(\"shard\", shard);\n      }\n    }\n    \n    return lst;\n  }\n\n","sourceOld":"  public NamedList getStatistics() {\n    NamedList<Object> lst = new SimpleOrderedMap<Object>();\n    lst.add(\"coreName\", name==null ? \"(null)\" : name);\n    lst.add(\"startTime\", new Date(startTime));\n    lst.add(\"refCount\", getOpenCount());\n\n    CoreDescriptor cd = getCoreDescriptor();\n    if (cd != null) {\n      if (null != cd && cd.getCoreContainer() != null) {\n        lst.add(\"aliases\", getCoreDescriptor().getCoreContainer().getCoreNames(this));\n      }\n      CloudDescriptor cloudDesc = cd.getCloudDescriptor();\n      if (cloudDesc != null) {\n        String collection = cloudDesc.getCollectionName();\n        if (collection == null) {\n          collection = \"_notset_\";\n        }\n        lst.add(\"collection\", collection);\n        String shard = cloudDesc.getShardId();\n        if (shard == null) {\n          shard = \"_auto_\";\n        }\n        lst.add(\"shard\", shard);\n      }\n    }\n    \n    return lst;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d642fe6577db47788146c0fc4fe14240ab1718b7","date":1376680349,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/SolrCore#getStatistics().mjava","pathOld":"solr/core/src/java/org/apache/solr/core/SolrCore#getStatistics().mjava","sourceNew":"  @Override\n  public NamedList getStatistics() {\n    NamedList<Object> lst = new SimpleOrderedMap<Object>();\n    lst.add(\"coreName\", name==null ? \"(null)\" : name);\n    lst.add(\"startTime\", new Date(startTime));\n    lst.add(\"refCount\", getOpenCount());\n    lst.add(\"instanceDir\", resourceLoader.getInstanceDir());\n    lst.add(\"indexDir\", getIndexDir());\n\n    CoreDescriptor cd = getCoreDescriptor();\n    if (cd != null) {\n      if (null != cd && cd.getCoreContainer() != null) {\n        lst.add(\"aliases\", getCoreDescriptor().getCoreContainer().getCoreNames(this));\n      }\n      CloudDescriptor cloudDesc = cd.getCloudDescriptor();\n      if (cloudDesc != null) {\n        String collection = cloudDesc.getCollectionName();\n        if (collection == null) {\n          collection = \"_notset_\";\n        }\n        lst.add(\"collection\", collection);\n        String shard = cloudDesc.getShardId();\n        if (shard == null) {\n          shard = \"_auto_\";\n        }\n        lst.add(\"shard\", shard);\n      }\n    }\n    \n    return lst;\n  }\n\n","sourceOld":"  @Override\n  public NamedList getStatistics() {\n    NamedList<Object> lst = new SimpleOrderedMap<Object>();\n    lst.add(\"coreName\", name==null ? \"(null)\" : name);\n    lst.add(\"startTime\", new Date(startTime));\n    lst.add(\"refCount\", getOpenCount());\n    lst.add(\"indexDir\", getIndexDir());\n\n    CoreDescriptor cd = getCoreDescriptor();\n    if (cd != null) {\n      if (null != cd && cd.getCoreContainer() != null) {\n        lst.add(\"aliases\", getCoreDescriptor().getCoreContainer().getCoreNames(this));\n      }\n      CloudDescriptor cloudDesc = cd.getCloudDescriptor();\n      if (cloudDesc != null) {\n        String collection = cloudDesc.getCollectionName();\n        if (collection == null) {\n          collection = \"_notset_\";\n        }\n        lst.add(\"collection\", collection);\n        String shard = cloudDesc.getShardId();\n        if (shard == null) {\n          shard = \"_auto_\";\n        }\n        lst.add(\"shard\", shard);\n      }\n    }\n    \n    return lst;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"31d4861802ca404d78ca1d15f4550eec415b9199","date":1376947894,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/core/SolrCore#getStatistics().mjava","pathOld":"solr/core/src/java/org/apache/solr/core/SolrCore#getStatistics().mjava","sourceNew":"  @Override\n  public NamedList getStatistics() {\n    NamedList<Object> lst = new SimpleOrderedMap<Object>();\n    lst.add(\"coreName\", name==null ? \"(null)\" : name);\n    lst.add(\"startTime\", new Date(startTime));\n    lst.add(\"refCount\", getOpenCount());\n    lst.add(\"instanceDir\", resourceLoader.getInstanceDir());\n    lst.add(\"indexDir\", getIndexDir());\n\n    CoreDescriptor cd = getCoreDescriptor();\n    if (cd != null) {\n      if (null != cd && cd.getCoreContainer() != null) {\n        lst.add(\"aliases\", getCoreDescriptor().getCoreContainer().getCoreNames(this));\n      }\n      CloudDescriptor cloudDesc = cd.getCloudDescriptor();\n      if (cloudDesc != null) {\n        String collection = cloudDesc.getCollectionName();\n        if (collection == null) {\n          collection = \"_notset_\";\n        }\n        lst.add(\"collection\", collection);\n        String shard = cloudDesc.getShardId();\n        if (shard == null) {\n          shard = \"_auto_\";\n        }\n        lst.add(\"shard\", shard);\n      }\n    }\n    \n    return lst;\n  }\n\n","sourceOld":"  @Override\n  public NamedList getStatistics() {\n    NamedList<Object> lst = new SimpleOrderedMap<Object>();\n    lst.add(\"coreName\", name==null ? \"(null)\" : name);\n    lst.add(\"startTime\", new Date(startTime));\n    lst.add(\"refCount\", getOpenCount());\n    lst.add(\"indexDir\", getIndexDir());\n\n    CoreDescriptor cd = getCoreDescriptor();\n    if (cd != null) {\n      if (null != cd && cd.getCoreContainer() != null) {\n        lst.add(\"aliases\", getCoreDescriptor().getCoreContainer().getCoreNames(this));\n      }\n      CloudDescriptor cloudDesc = cd.getCloudDescriptor();\n      if (cloudDesc != null) {\n        String collection = cloudDesc.getCollectionName();\n        if (collection == null) {\n          collection = \"_notset_\";\n        }\n        lst.add(\"collection\", collection);\n        String shard = cloudDesc.getShardId();\n        if (shard == null) {\n          shard = \"_auto_\";\n        }\n        lst.add(\"shard\", shard);\n      }\n    }\n    \n    return lst;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3dffec77fb8f7d0e9ca4869dddd6af94528b4576","date":1377875202,"type":3,"author":"Han Jiang","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/core/SolrCore#getStatistics().mjava","pathOld":"solr/core/src/java/org/apache/solr/core/SolrCore#getStatistics().mjava","sourceNew":"  @Override\n  public NamedList getStatistics() {\n    NamedList<Object> lst = new SimpleOrderedMap<Object>();\n    lst.add(\"coreName\", name==null ? \"(null)\" : name);\n    lst.add(\"startTime\", new Date(startTime));\n    lst.add(\"refCount\", getOpenCount());\n    lst.add(\"instanceDir\", resourceLoader.getInstanceDir());\n    lst.add(\"indexDir\", getIndexDir());\n\n    CoreDescriptor cd = getCoreDescriptor();\n    if (cd != null) {\n      if (null != cd && cd.getCoreContainer() != null) {\n        lst.add(\"aliases\", getCoreDescriptor().getCoreContainer().getCoreNames(this));\n      }\n      CloudDescriptor cloudDesc = cd.getCloudDescriptor();\n      if (cloudDesc != null) {\n        String collection = cloudDesc.getCollectionName();\n        if (collection == null) {\n          collection = \"_notset_\";\n        }\n        lst.add(\"collection\", collection);\n        String shard = cloudDesc.getShardId();\n        if (shard == null) {\n          shard = \"_auto_\";\n        }\n        lst.add(\"shard\", shard);\n      }\n    }\n    \n    return lst;\n  }\n\n","sourceOld":"  @Override\n  public NamedList getStatistics() {\n    NamedList<Object> lst = new SimpleOrderedMap<Object>();\n    lst.add(\"coreName\", name==null ? \"(null)\" : name);\n    lst.add(\"startTime\", new Date(startTime));\n    lst.add(\"refCount\", getOpenCount());\n    lst.add(\"indexDir\", getIndexDir());\n\n    CoreDescriptor cd = getCoreDescriptor();\n    if (cd != null) {\n      if (null != cd && cd.getCoreContainer() != null) {\n        lst.add(\"aliases\", getCoreDescriptor().getCoreContainer().getCoreNames(this));\n      }\n      CloudDescriptor cloudDesc = cd.getCloudDescriptor();\n      if (cloudDesc != null) {\n        String collection = cloudDesc.getCollectionName();\n        if (collection == null) {\n          collection = \"_notset_\";\n        }\n        lst.add(\"collection\", collection);\n        String shard = cloudDesc.getShardId();\n        if (shard == null) {\n          shard = \"_auto_\";\n        }\n        lst.add(\"shard\", shard);\n      }\n    }\n    \n    return lst;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"634f330c54fd3f9f491d52036dc3f40b4f4d8934","date":1394635157,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/SolrCore#getStatistics().mjava","pathOld":"solr/core/src/java/org/apache/solr/core/SolrCore#getStatistics().mjava","sourceNew":"  @Override\n  public NamedList getStatistics() {\n    NamedList<Object> lst = new SimpleOrderedMap<>();\n    lst.add(\"coreName\", name==null ? \"(null)\" : name);\n    lst.add(\"startTime\", new Date(startTime));\n    lst.add(\"refCount\", getOpenCount());\n    lst.add(\"instanceDir\", resourceLoader.getInstanceDir());\n    lst.add(\"indexDir\", getIndexDir());\n\n    CoreDescriptor cd = getCoreDescriptor();\n    if (cd != null) {\n      if (null != cd && cd.getCoreContainer() != null) {\n        lst.add(\"aliases\", getCoreDescriptor().getCoreContainer().getCoreNames(this));\n      }\n      CloudDescriptor cloudDesc = cd.getCloudDescriptor();\n      if (cloudDesc != null) {\n        String collection = cloudDesc.getCollectionName();\n        if (collection == null) {\n          collection = \"_notset_\";\n        }\n        lst.add(\"collection\", collection);\n        String shard = cloudDesc.getShardId();\n        if (shard == null) {\n          shard = \"_auto_\";\n        }\n        lst.add(\"shard\", shard);\n      }\n    }\n    \n    return lst;\n  }\n\n","sourceOld":"  @Override\n  public NamedList getStatistics() {\n    NamedList<Object> lst = new SimpleOrderedMap<Object>();\n    lst.add(\"coreName\", name==null ? \"(null)\" : name);\n    lst.add(\"startTime\", new Date(startTime));\n    lst.add(\"refCount\", getOpenCount());\n    lst.add(\"instanceDir\", resourceLoader.getInstanceDir());\n    lst.add(\"indexDir\", getIndexDir());\n\n    CoreDescriptor cd = getCoreDescriptor();\n    if (cd != null) {\n      if (null != cd && cd.getCoreContainer() != null) {\n        lst.add(\"aliases\", getCoreDescriptor().getCoreContainer().getCoreNames(this));\n      }\n      CloudDescriptor cloudDesc = cd.getCloudDescriptor();\n      if (cloudDesc != null) {\n        String collection = cloudDesc.getCollectionName();\n        if (collection == null) {\n          collection = \"_notset_\";\n        }\n        lst.add(\"collection\", collection);\n        String shard = cloudDesc.getShardId();\n        if (shard == null) {\n          shard = \"_auto_\";\n        }\n        lst.add(\"shard\", shard);\n      }\n    }\n    \n    return lst;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9aea0485ecacb6734c17da2d02569816c23a69c1","date":1425707735,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/SolrCore#getStatistics().mjava","pathOld":"solr/core/src/java/org/apache/solr/core/SolrCore#getStatistics().mjava","sourceNew":"  @Override\n  public NamedList getStatistics() {\n    NamedList<Object> lst = new SimpleOrderedMap<>();\n    lst.add(\"coreName\", name==null ? \"(null)\" : name);\n    lst.add(\"startTime\", new Date(startTime));\n    lst.add(\"refCount\", getOpenCount());\n    lst.add(\"instanceDir\", resourceLoader.getInstanceDir());\n    lst.add(\"indexDir\", getIndexDir());\n\n    CoreDescriptor cd = getCoreDescriptor();\n    if (cd != null) {\n      if (null != cd && cd.getCoreContainer() != null) {\n        lst.add(\"aliases\", getCoreDescriptor().getCoreContainer().getCoreNames(this));\n      }\n      CloudDescriptor cloudDesc = cd.getCloudDescriptor();\n      if (cloudDesc != null) {\n        String collection = cloudDesc.getCollectionName();\n        if (collection == null) {\n          collection = \"_notset_\";\n        }\n        lst.add(\"collection\", collection);\n        String shard = cloudDesc.getShardId();\n        if (shard == null) {\n          shard = \"_auto_\";\n        }\n        lst.add(\"shard\", shard);\n      }\n    }\n\n    return lst;\n  }\n\n","sourceOld":"  @Override\n  public NamedList getStatistics() {\n    NamedList<Object> lst = new SimpleOrderedMap<>();\n    lst.add(\"coreName\", name==null ? \"(null)\" : name);\n    lst.add(\"startTime\", new Date(startTime));\n    lst.add(\"refCount\", getOpenCount());\n    lst.add(\"instanceDir\", resourceLoader.getInstanceDir());\n    lst.add(\"indexDir\", getIndexDir());\n\n    CoreDescriptor cd = getCoreDescriptor();\n    if (cd != null) {\n      if (null != cd && cd.getCoreContainer() != null) {\n        lst.add(\"aliases\", getCoreDescriptor().getCoreContainer().getCoreNames(this));\n      }\n      CloudDescriptor cloudDesc = cd.getCloudDescriptor();\n      if (cloudDesc != null) {\n        String collection = cloudDesc.getCollectionName();\n        if (collection == null) {\n          collection = \"_notset_\";\n        }\n        lst.add(\"collection\", collection);\n        String shard = cloudDesc.getShardId();\n        if (shard == null) {\n          shard = \"_auto_\";\n        }\n        lst.add(\"shard\", shard);\n      }\n    }\n    \n    return lst;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","date":1427779360,"type":3,"author":"Ryan Ernst","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/core/SolrCore#getStatistics().mjava","pathOld":"solr/core/src/java/org/apache/solr/core/SolrCore#getStatistics().mjava","sourceNew":"  @Override\n  public NamedList getStatistics() {\n    NamedList<Object> lst = new SimpleOrderedMap<>();\n    lst.add(\"coreName\", name==null ? \"(null)\" : name);\n    lst.add(\"startTime\", new Date(startTime));\n    lst.add(\"refCount\", getOpenCount());\n    lst.add(\"instanceDir\", resourceLoader.getInstanceDir());\n    lst.add(\"indexDir\", getIndexDir());\n\n    CoreDescriptor cd = getCoreDescriptor();\n    if (cd != null) {\n      if (null != cd && cd.getCoreContainer() != null) {\n        lst.add(\"aliases\", getCoreDescriptor().getCoreContainer().getCoreNames(this));\n      }\n      CloudDescriptor cloudDesc = cd.getCloudDescriptor();\n      if (cloudDesc != null) {\n        String collection = cloudDesc.getCollectionName();\n        if (collection == null) {\n          collection = \"_notset_\";\n        }\n        lst.add(\"collection\", collection);\n        String shard = cloudDesc.getShardId();\n        if (shard == null) {\n          shard = \"_auto_\";\n        }\n        lst.add(\"shard\", shard);\n      }\n    }\n\n    return lst;\n  }\n\n","sourceOld":"  @Override\n  public NamedList getStatistics() {\n    NamedList<Object> lst = new SimpleOrderedMap<>();\n    lst.add(\"coreName\", name==null ? \"(null)\" : name);\n    lst.add(\"startTime\", new Date(startTime));\n    lst.add(\"refCount\", getOpenCount());\n    lst.add(\"instanceDir\", resourceLoader.getInstanceDir());\n    lst.add(\"indexDir\", getIndexDir());\n\n    CoreDescriptor cd = getCoreDescriptor();\n    if (cd != null) {\n      if (null != cd && cd.getCoreContainer() != null) {\n        lst.add(\"aliases\", getCoreDescriptor().getCoreContainer().getCoreNames(this));\n      }\n      CloudDescriptor cloudDesc = cd.getCloudDescriptor();\n      if (cloudDesc != null) {\n        String collection = cloudDesc.getCollectionName();\n        if (collection == null) {\n          collection = \"_notset_\";\n        }\n        lst.add(\"collection\", collection);\n        String shard = cloudDesc.getShardId();\n        if (shard == null) {\n          shard = \"_auto_\";\n        }\n        lst.add(\"shard\", shard);\n      }\n    }\n    \n    return lst;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bcf9886c8ff537aafde14de48ebf744f5673f08b","date":1439041198,"type":3,"author":"Ramkumar Aiyengar","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/SolrCore#getStatistics().mjava","pathOld":"solr/core/src/java/org/apache/solr/core/SolrCore#getStatistics().mjava","sourceNew":"  @Override\n  public NamedList getStatistics() {\n    NamedList<Object> lst = new SimpleOrderedMap<>();\n    lst.add(\"coreName\", name==null ? \"(null)\" : name);\n    lst.add(\"startTime\", startTime);\n    lst.add(\"refCount\", getOpenCount());\n    lst.add(\"instanceDir\", resourceLoader.getInstanceDir());\n    lst.add(\"indexDir\", getIndexDir());\n\n    CoreDescriptor cd = getCoreDescriptor();\n    if (cd != null) {\n      if (null != cd && cd.getCoreContainer() != null) {\n        lst.add(\"aliases\", getCoreDescriptor().getCoreContainer().getCoreNames(this));\n      }\n      CloudDescriptor cloudDesc = cd.getCloudDescriptor();\n      if (cloudDesc != null) {\n        String collection = cloudDesc.getCollectionName();\n        if (collection == null) {\n          collection = \"_notset_\";\n        }\n        lst.add(\"collection\", collection);\n        String shard = cloudDesc.getShardId();\n        if (shard == null) {\n          shard = \"_auto_\";\n        }\n        lst.add(\"shard\", shard);\n      }\n    }\n\n    return lst;\n  }\n\n","sourceOld":"  @Override\n  public NamedList getStatistics() {\n    NamedList<Object> lst = new SimpleOrderedMap<>();\n    lst.add(\"coreName\", name==null ? \"(null)\" : name);\n    lst.add(\"startTime\", new Date(startTime));\n    lst.add(\"refCount\", getOpenCount());\n    lst.add(\"instanceDir\", resourceLoader.getInstanceDir());\n    lst.add(\"indexDir\", getIndexDir());\n\n    CoreDescriptor cd = getCoreDescriptor();\n    if (cd != null) {\n      if (null != cd && cd.getCoreContainer() != null) {\n        lst.add(\"aliases\", getCoreDescriptor().getCoreContainer().getCoreNames(this));\n      }\n      CloudDescriptor cloudDesc = cd.getCloudDescriptor();\n      if (cloudDesc != null) {\n        String collection = cloudDesc.getCollectionName();\n        if (collection == null) {\n          collection = \"_notset_\";\n        }\n        lst.add(\"collection\", collection);\n        String shard = cloudDesc.getShardId();\n        if (shard == null) {\n          shard = \"_auto_\";\n        }\n        lst.add(\"shard\", shard);\n      }\n    }\n\n    return lst;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a626ec4d1c92e59fe390724d6220081047b03ce7","date":1448021525,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/SolrCore#getStatistics().mjava","pathOld":"solr/core/src/java/org/apache/solr/core/SolrCore#getStatistics().mjava","sourceNew":"  @Override\n  public NamedList getStatistics() {\n    NamedList<Object> lst = new SimpleOrderedMap<>();\n    lst.add(\"coreName\", name==null ? \"(null)\" : name);\n    lst.add(\"startTime\", startTime);\n    lst.add(\"refCount\", getOpenCount());\n    lst.add(\"instanceDir\", resourceLoader.getInstancePath());\n    lst.add(\"indexDir\", getIndexDir());\n\n    CoreDescriptor cd = getCoreDescriptor();\n    if (cd != null) {\n      if (null != cd && cd.getCoreContainer() != null) {\n        lst.add(\"aliases\", getCoreDescriptor().getCoreContainer().getCoreNames(this));\n      }\n      CloudDescriptor cloudDesc = cd.getCloudDescriptor();\n      if (cloudDesc != null) {\n        String collection = cloudDesc.getCollectionName();\n        if (collection == null) {\n          collection = \"_notset_\";\n        }\n        lst.add(\"collection\", collection);\n        String shard = cloudDesc.getShardId();\n        if (shard == null) {\n          shard = \"_auto_\";\n        }\n        lst.add(\"shard\", shard);\n      }\n    }\n\n    return lst;\n  }\n\n","sourceOld":"  @Override\n  public NamedList getStatistics() {\n    NamedList<Object> lst = new SimpleOrderedMap<>();\n    lst.add(\"coreName\", name==null ? \"(null)\" : name);\n    lst.add(\"startTime\", startTime);\n    lst.add(\"refCount\", getOpenCount());\n    lst.add(\"instanceDir\", resourceLoader.getInstanceDir());\n    lst.add(\"indexDir\", getIndexDir());\n\n    CoreDescriptor cd = getCoreDescriptor();\n    if (cd != null) {\n      if (null != cd && cd.getCoreContainer() != null) {\n        lst.add(\"aliases\", getCoreDescriptor().getCoreContainer().getCoreNames(this));\n      }\n      CloudDescriptor cloudDesc = cd.getCloudDescriptor();\n      if (cloudDesc != null) {\n        String collection = cloudDesc.getCollectionName();\n        if (collection == null) {\n          collection = \"_notset_\";\n        }\n        lst.add(\"collection\", collection);\n        String shard = cloudDesc.getShardId();\n        if (shard == null) {\n          shard = \"_auto_\";\n        }\n        lst.add(\"shard\", shard);\n      }\n    }\n\n    return lst;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1e806433f42d99c26f5318422f93098f5cafa727","date":1449831556,"type":3,"author":"Christine Poerschke","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/SolrCore#getStatistics().mjava","pathOld":"solr/core/src/java/org/apache/solr/core/SolrCore#getStatistics().mjava","sourceNew":"  @Override\n  public NamedList getStatistics() {\n    NamedList<Object> lst = new SimpleOrderedMap<>(8);\n    lst.add(\"coreName\", name==null ? \"(null)\" : name);\n    lst.add(\"startTime\", startTime);\n    lst.add(\"refCount\", getOpenCount());\n    lst.add(\"instanceDir\", resourceLoader.getInstancePath());\n    lst.add(\"indexDir\", getIndexDir());\n\n    CoreDescriptor cd = getCoreDescriptor();\n    if (cd != null) {\n      if (null != cd && cd.getCoreContainer() != null) {\n        lst.add(\"aliases\", getCoreDescriptor().getCoreContainer().getCoreNames(this));\n      }\n      CloudDescriptor cloudDesc = cd.getCloudDescriptor();\n      if (cloudDesc != null) {\n        String collection = cloudDesc.getCollectionName();\n        if (collection == null) {\n          collection = \"_notset_\";\n        }\n        lst.add(\"collection\", collection);\n        String shard = cloudDesc.getShardId();\n        if (shard == null) {\n          shard = \"_auto_\";\n        }\n        lst.add(\"shard\", shard);\n      }\n    }\n\n    return lst;\n  }\n\n","sourceOld":"  @Override\n  public NamedList getStatistics() {\n    NamedList<Object> lst = new SimpleOrderedMap<>();\n    lst.add(\"coreName\", name==null ? \"(null)\" : name);\n    lst.add(\"startTime\", startTime);\n    lst.add(\"refCount\", getOpenCount());\n    lst.add(\"instanceDir\", resourceLoader.getInstancePath());\n    lst.add(\"indexDir\", getIndexDir());\n\n    CoreDescriptor cd = getCoreDescriptor();\n    if (cd != null) {\n      if (null != cd && cd.getCoreContainer() != null) {\n        lst.add(\"aliases\", getCoreDescriptor().getCoreContainer().getCoreNames(this));\n      }\n      CloudDescriptor cloudDesc = cd.getCloudDescriptor();\n      if (cloudDesc != null) {\n        String collection = cloudDesc.getCollectionName();\n        if (collection == null) {\n          collection = \"_notset_\";\n        }\n        lst.add(\"collection\", collection);\n        String shard = cloudDesc.getShardId();\n        if (shard == null) {\n          shard = \"_auto_\";\n        }\n        lst.add(\"shard\", shard);\n      }\n    }\n\n    return lst;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a35c02a24fd1c193f4a30120e5c4abd7eff42c1d","date":1483555724,"type":3,"author":"Dennis Gove","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/SolrCore#getStatistics().mjava","pathOld":"solr/core/src/java/org/apache/solr/core/SolrCore#getStatistics().mjava","sourceNew":"  @Override\n  public NamedList getStatistics() {\n    NamedList<Object> lst = new SimpleOrderedMap<>(8);\n    lst.add(\"coreName\", name==null ? \"(null)\" : name);\n    lst.add(\"startTime\", startTime);\n    lst.add(\"refCount\", getOpenCount());\n    lst.add(\"instanceDir\", resourceLoader.getInstancePath());\n    lst.add(\"indexDir\", getIndexDir());\n    long size = getIndexSize();\n    lst.add(\"sizeInBytes\", size);\n    lst.add(\"size\", NumberUtils.readableSize(size));\n\n    CoreDescriptor cd = getCoreDescriptor();\n    if (cd != null) {\n      if (null != cd && cd.getCoreContainer() != null) {\n        lst.add(\"aliases\", getCoreDescriptor().getCoreContainer().getCoreNames(this));\n      }\n      CloudDescriptor cloudDesc = cd.getCloudDescriptor();\n      if (cloudDesc != null) {\n        String collection = cloudDesc.getCollectionName();\n        if (collection == null) {\n          collection = \"_notset_\";\n        }\n        lst.add(\"collection\", collection);\n        String shard = cloudDesc.getShardId();\n        if (shard == null) {\n          shard = \"_auto_\";\n        }\n        lst.add(\"shard\", shard);\n      }\n    }\n\n    return lst;\n  }\n\n","sourceOld":"  @Override\n  public NamedList getStatistics() {\n    NamedList<Object> lst = new SimpleOrderedMap<>(8);\n    lst.add(\"coreName\", name==null ? \"(null)\" : name);\n    lst.add(\"startTime\", startTime);\n    lst.add(\"refCount\", getOpenCount());\n    lst.add(\"instanceDir\", resourceLoader.getInstancePath());\n    lst.add(\"indexDir\", getIndexDir());\n\n    CoreDescriptor cd = getCoreDescriptor();\n    if (cd != null) {\n      if (null != cd && cd.getCoreContainer() != null) {\n        lst.add(\"aliases\", getCoreDescriptor().getCoreContainer().getCoreNames(this));\n      }\n      CloudDescriptor cloudDesc = cd.getCloudDescriptor();\n      if (cloudDesc != null) {\n        String collection = cloudDesc.getCollectionName();\n        if (collection == null) {\n          collection = \"_notset_\";\n        }\n        lst.add(\"collection\", collection);\n        String shard = cloudDesc.getShardId();\n        if (shard == null) {\n          shard = \"_auto_\";\n        }\n        lst.add(\"shard\", shard);\n      }\n    }\n\n    return lst;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"491c9672ec42582fe43960452dbd37f1c80fe0f0","date":1483739222,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/core/SolrCore#getStatistics().mjava","pathOld":"solr/core/src/java/org/apache/solr/core/SolrCore#getStatistics().mjava","sourceNew":"  @Override\n  public NamedList getStatistics() {\n    NamedList<Object> lst = new SimpleOrderedMap<>(8);\n    lst.add(\"coreName\", name==null ? \"(null)\" : name);\n    lst.add(\"startTime\", startTime);\n    lst.add(\"refCount\", getOpenCount());\n    lst.add(\"instanceDir\", resourceLoader.getInstancePath());\n    lst.add(\"indexDir\", getIndexDir());\n    long size = getIndexSize();\n    lst.add(\"sizeInBytes\", size);\n    lst.add(\"size\", NumberUtils.readableSize(size));\n\n    CoreDescriptor cd = getCoreDescriptor();\n    if (cd != null) {\n      if (null != cd && cd.getCoreContainer() != null) {\n        lst.add(\"aliases\", getCoreDescriptor().getCoreContainer().getCoreNames(this));\n      }\n      CloudDescriptor cloudDesc = cd.getCloudDescriptor();\n      if (cloudDesc != null) {\n        String collection = cloudDesc.getCollectionName();\n        if (collection == null) {\n          collection = \"_notset_\";\n        }\n        lst.add(\"collection\", collection);\n        String shard = cloudDesc.getShardId();\n        if (shard == null) {\n          shard = \"_auto_\";\n        }\n        lst.add(\"shard\", shard);\n      }\n    }\n\n    return lst;\n  }\n\n","sourceOld":"  @Override\n  public NamedList getStatistics() {\n    NamedList<Object> lst = new SimpleOrderedMap<>(8);\n    lst.add(\"coreName\", name==null ? \"(null)\" : name);\n    lst.add(\"startTime\", startTime);\n    lst.add(\"refCount\", getOpenCount());\n    lst.add(\"instanceDir\", resourceLoader.getInstancePath());\n    lst.add(\"indexDir\", getIndexDir());\n\n    CoreDescriptor cd = getCoreDescriptor();\n    if (cd != null) {\n      if (null != cd && cd.getCoreContainer() != null) {\n        lst.add(\"aliases\", getCoreDescriptor().getCoreContainer().getCoreNames(this));\n      }\n      CloudDescriptor cloudDesc = cd.getCloudDescriptor();\n      if (cloudDesc != null) {\n        String collection = cloudDesc.getCollectionName();\n        if (collection == null) {\n          collection = \"_notset_\";\n        }\n        lst.add(\"collection\", collection);\n        String shard = cloudDesc.getShardId();\n        if (shard == null) {\n          shard = \"_auto_\";\n        }\n        lst.add(\"shard\", shard);\n      }\n    }\n\n    return lst;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"816521ebaad5add9cb96bb88c577394e2938c40b","date":1491931343,"type":4,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/core/src/java/org/apache/solr/core/SolrCore#getStatistics().mjava","sourceNew":null,"sourceOld":"  @Override\n  public NamedList getStatistics() {\n    NamedList<Object> lst = new SimpleOrderedMap<>(8);\n    lst.add(\"coreName\", name==null ? \"(null)\" : name);\n    lst.add(\"startTime\", startTime);\n    lst.add(\"refCount\", getOpenCount());\n    lst.add(\"instanceDir\", resourceLoader.getInstancePath());\n    lst.add(\"indexDir\", getIndexDir());\n    long size = getIndexSize();\n    lst.add(\"sizeInBytes\", size);\n    lst.add(\"size\", NumberUtils.readableSize(size));\n\n    CoreDescriptor cd = getCoreDescriptor();\n    if (cd != null) {\n      if (null != cd && cd.getCoreContainer() != null) {\n        lst.add(\"aliases\", getCoreDescriptor().getCoreContainer().getCoreNames(this));\n      }\n      CloudDescriptor cloudDesc = cd.getCloudDescriptor();\n      if (cloudDesc != null) {\n        String collection = cloudDesc.getCollectionName();\n        if (collection == null) {\n          collection = \"_notset_\";\n        }\n        lst.add(\"collection\", collection);\n        String shard = cloudDesc.getShardId();\n        if (shard == null) {\n          shard = \"_auto_\";\n        }\n        lst.add(\"shard\", shard);\n      }\n    }\n\n    return lst;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"54ca69905c5d9d1529286f06ab1d12c68f6c13cb","date":1492683554,"type":4,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/core/src/java/org/apache/solr/core/SolrCore#getStatistics().mjava","sourceNew":null,"sourceOld":"  @Override\n  public NamedList getStatistics() {\n    NamedList<Object> lst = new SimpleOrderedMap<>(8);\n    lst.add(\"coreName\", name==null ? \"(null)\" : name);\n    lst.add(\"startTime\", startTime);\n    lst.add(\"refCount\", getOpenCount());\n    lst.add(\"instanceDir\", resourceLoader.getInstancePath());\n    lst.add(\"indexDir\", getIndexDir());\n    long size = getIndexSize();\n    lst.add(\"sizeInBytes\", size);\n    lst.add(\"size\", NumberUtils.readableSize(size));\n\n    CoreDescriptor cd = getCoreDescriptor();\n    if (cd != null) {\n      if (null != cd && cd.getCoreContainer() != null) {\n        lst.add(\"aliases\", getCoreDescriptor().getCoreContainer().getCoreNames(this));\n      }\n      CloudDescriptor cloudDesc = cd.getCloudDescriptor();\n      if (cloudDesc != null) {\n        String collection = cloudDesc.getCollectionName();\n        if (collection == null) {\n          collection = \"_notset_\";\n        }\n        lst.add(\"collection\", collection);\n        String shard = cloudDesc.getShardId();\n        if (shard == null) {\n          shard = \"_auto_\";\n        }\n        lst.add(\"shard\", shard);\n      }\n    }\n\n    return lst;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"54ca69905c5d9d1529286f06ab1d12c68f6c13cb":["a35c02a24fd1c193f4a30120e5c4abd7eff42c1d"],"d3fcb70cf561547c7bb1506e0cf32ca7b1287064":["8cc14f9076f47098376fc1e6e95eaad72ce8435d","f0a4eeff354e8081247783f424a8e5a0fe106633"],"f0a4eeff354e8081247783f424a8e5a0fe106633":["7530de27b87b961b51f01bd1299b7004d46e8823"],"c26f00b574427b55127e869b935845554afde1fa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","c903c3d15906a3da96b8c0c2fb704491005fdbdb"],"8cc14f9076f47098376fc1e6e95eaad72ce8435d":["bad6d9c88746be4a83822ab420b8c2398257cfb8"],"bad6d9c88746be4a83822ab420b8c2398257cfb8":["c26f00b574427b55127e869b935845554afde1fa"],"1e806433f42d99c26f5318422f93098f5cafa727":["a626ec4d1c92e59fe390724d6220081047b03ce7"],"d642fe6577db47788146c0fc4fe14240ab1718b7":["f0a4eeff354e8081247783f424a8e5a0fe106633"],"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":["634f330c54fd3f9f491d52036dc3f40b4f4d8934","9aea0485ecacb6734c17da2d02569816c23a69c1"],"aba371508186796cc6151d8223a5b4e16d02e26e":["bad6d9c88746be4a83822ab420b8c2398257cfb8","8cc14f9076f47098376fc1e6e95eaad72ce8435d"],"a626ec4d1c92e59fe390724d6220081047b03ce7":["bcf9886c8ff537aafde14de48ebf744f5673f08b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"9aea0485ecacb6734c17da2d02569816c23a69c1":["634f330c54fd3f9f491d52036dc3f40b4f4d8934"],"491c9672ec42582fe43960452dbd37f1c80fe0f0":["1e806433f42d99c26f5318422f93098f5cafa727","a35c02a24fd1c193f4a30120e5c4abd7eff42c1d"],"634f330c54fd3f9f491d52036dc3f40b4f4d8934":["d642fe6577db47788146c0fc4fe14240ab1718b7"],"a35c02a24fd1c193f4a30120e5c4abd7eff42c1d":["1e806433f42d99c26f5318422f93098f5cafa727"],"3dffec77fb8f7d0e9ca4869dddd6af94528b4576":["f0a4eeff354e8081247783f424a8e5a0fe106633","d642fe6577db47788146c0fc4fe14240ab1718b7"],"31d4861802ca404d78ca1d15f4550eec415b9199":["f0a4eeff354e8081247783f424a8e5a0fe106633","d642fe6577db47788146c0fc4fe14240ab1718b7"],"816521ebaad5add9cb96bb88c577394e2938c40b":["a35c02a24fd1c193f4a30120e5c4abd7eff42c1d"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"fe33227f6805edab2036cbb80645cc4e2d1fa424":["c26f00b574427b55127e869b935845554afde1fa","8cc14f9076f47098376fc1e6e95eaad72ce8435d"],"bcf9886c8ff537aafde14de48ebf744f5673f08b":["9aea0485ecacb6734c17da2d02569816c23a69c1"],"a258fbb26824fd104ed795e5d9033d2d040049ee":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"7530de27b87b961b51f01bd1299b7004d46e8823":["8cc14f9076f47098376fc1e6e95eaad72ce8435d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["816521ebaad5add9cb96bb88c577394e2938c40b"]},"commit2Childs":{"54ca69905c5d9d1529286f06ab1d12c68f6c13cb":[],"d3fcb70cf561547c7bb1506e0cf32ca7b1287064":[],"f0a4eeff354e8081247783f424a8e5a0fe106633":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","d642fe6577db47788146c0fc4fe14240ab1718b7","3dffec77fb8f7d0e9ca4869dddd6af94528b4576","31d4861802ca404d78ca1d15f4550eec415b9199"],"c26f00b574427b55127e869b935845554afde1fa":["bad6d9c88746be4a83822ab420b8c2398257cfb8","fe33227f6805edab2036cbb80645cc4e2d1fa424"],"8cc14f9076f47098376fc1e6e95eaad72ce8435d":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","aba371508186796cc6151d8223a5b4e16d02e26e","fe33227f6805edab2036cbb80645cc4e2d1fa424","7530de27b87b961b51f01bd1299b7004d46e8823"],"bad6d9c88746be4a83822ab420b8c2398257cfb8":["8cc14f9076f47098376fc1e6e95eaad72ce8435d","aba371508186796cc6151d8223a5b4e16d02e26e"],"1e806433f42d99c26f5318422f93098f5cafa727":["491c9672ec42582fe43960452dbd37f1c80fe0f0","a35c02a24fd1c193f4a30120e5c4abd7eff42c1d"],"d642fe6577db47788146c0fc4fe14240ab1718b7":["634f330c54fd3f9f491d52036dc3f40b4f4d8934","3dffec77fb8f7d0e9ca4869dddd6af94528b4576","31d4861802ca404d78ca1d15f4550eec415b9199"],"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":[],"aba371508186796cc6151d8223a5b4e16d02e26e":[],"a626ec4d1c92e59fe390724d6220081047b03ce7":["1e806433f42d99c26f5318422f93098f5cafa727"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c26f00b574427b55127e869b935845554afde1fa","c903c3d15906a3da96b8c0c2fb704491005fdbdb","a258fbb26824fd104ed795e5d9033d2d040049ee"],"9aea0485ecacb6734c17da2d02569816c23a69c1":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","bcf9886c8ff537aafde14de48ebf744f5673f08b"],"491c9672ec42582fe43960452dbd37f1c80fe0f0":[],"634f330c54fd3f9f491d52036dc3f40b4f4d8934":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","9aea0485ecacb6734c17da2d02569816c23a69c1"],"a35c02a24fd1c193f4a30120e5c4abd7eff42c1d":["54ca69905c5d9d1529286f06ab1d12c68f6c13cb","491c9672ec42582fe43960452dbd37f1c80fe0f0","816521ebaad5add9cb96bb88c577394e2938c40b"],"3dffec77fb8f7d0e9ca4869dddd6af94528b4576":[],"31d4861802ca404d78ca1d15f4550eec415b9199":[],"816521ebaad5add9cb96bb88c577394e2938c40b":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["c26f00b574427b55127e869b935845554afde1fa"],"fe33227f6805edab2036cbb80645cc4e2d1fa424":[],"bcf9886c8ff537aafde14de48ebf744f5673f08b":["a626ec4d1c92e59fe390724d6220081047b03ce7"],"a258fbb26824fd104ed795e5d9033d2d040049ee":[],"7530de27b87b961b51f01bd1299b7004d46e8823":["f0a4eeff354e8081247783f424a8e5a0fe106633"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["54ca69905c5d9d1529286f06ab1d12c68f6c13cb","d3fcb70cf561547c7bb1506e0cf32ca7b1287064","a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","aba371508186796cc6151d8223a5b4e16d02e26e","491c9672ec42582fe43960452dbd37f1c80fe0f0","3dffec77fb8f7d0e9ca4869dddd6af94528b4576","31d4861802ca404d78ca1d15f4550eec415b9199","fe33227f6805edab2036cbb80645cc4e2d1fa424","a258fbb26824fd104ed795e5d9033d2d040049ee","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}