{"path":"lucene/core/src/java/org/apache/lucene/search/LRUQueryCache#clearCoreCacheKey(Object).mjava","commits":[{"id":"60596f28be69b10c37a56a303c2dbea07b2ca4ba","date":1425060541,"type":1,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/LRUQueryCache#clearCoreCacheKey(Object).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/LRUFilterCache#clearCoreCacheKey(Object).mjava","sourceNew":"  /**\n   * Remove all cache entries for the given core cache key.\n   */\n  public synchronized void clearCoreCacheKey(Object coreKey) {\n    final LeafCache leafCache = cache.remove(coreKey);\n    if (leafCache != null) {\n      ramBytesUsed -= HASHTABLE_RAM_BYTES_PER_ENTRY;\n      onDocIdSetEviction(coreKey, leafCache.cache.size(), leafCache.ramBytesUsed);\n    }\n  }\n\n","sourceOld":"  /**\n   * Remove all cache entries for the given core cache key.\n   */\n  public synchronized void clearCoreCacheKey(Object coreKey) {\n    final LeafCache leafCache = cache.remove(coreKey);\n    if (leafCache != null) {\n      ramBytesUsed -= HASHTABLE_RAM_BYTES_PER_ENTRY;\n      onDocIdSetEviction(coreKey, leafCache.cache.size(), leafCache.ramBytesUsed);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","date":1427779360,"type":1,"author":"Ryan Ernst","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/search/LRUQueryCache#clearCoreCacheKey(Object).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/LRUFilterCache#clearCoreCacheKey(Object).mjava","sourceNew":"  /**\n   * Remove all cache entries for the given core cache key.\n   */\n  public synchronized void clearCoreCacheKey(Object coreKey) {\n    final LeafCache leafCache = cache.remove(coreKey);\n    if (leafCache != null) {\n      ramBytesUsed -= HASHTABLE_RAM_BYTES_PER_ENTRY;\n      onDocIdSetEviction(coreKey, leafCache.cache.size(), leafCache.ramBytesUsed);\n    }\n  }\n\n","sourceOld":"  /**\n   * Remove all cache entries for the given core cache key.\n   */\n  public synchronized void clearCoreCacheKey(Object coreKey) {\n    final LeafCache leafCache = cache.remove(coreKey);\n    if (leafCache != null) {\n      ramBytesUsed -= HASHTABLE_RAM_BYTES_PER_ENTRY;\n      onDocIdSetEviction(coreKey, leafCache.cache.size(), leafCache.ramBytesUsed);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9cf74e14885cc735f79b6044859a215332a6bcf0","date":1449231766,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/LRUQueryCache#clearCoreCacheKey(Object).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/LRUQueryCache#clearCoreCacheKey(Object).mjava","sourceNew":"  /**\n   * Remove all cache entries for the given core cache key.\n   */\n  public synchronized void clearCoreCacheKey(Object coreKey) {\n    final LeafCache leafCache = cache.remove(coreKey);\n    if (leafCache != null) {\n      ramBytesUsed -= HASHTABLE_RAM_BYTES_PER_ENTRY;\n      final int numEntries = leafCache.cache.size();\n      if (numEntries > 0) {\n        onDocIdSetEviction(coreKey, numEntries, leafCache.ramBytesUsed);\n      } else {\n        assert numEntries == 0;\n        assert leafCache.ramBytesUsed == 0;\n      }\n    }\n  }\n\n","sourceOld":"  /**\n   * Remove all cache entries for the given core cache key.\n   */\n  public synchronized void clearCoreCacheKey(Object coreKey) {\n    final LeafCache leafCache = cache.remove(coreKey);\n    if (leafCache != null) {\n      ramBytesUsed -= HASHTABLE_RAM_BYTES_PER_ENTRY;\n      onDocIdSetEviction(coreKey, leafCache.cache.size(), leafCache.ramBytesUsed);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"aa7f878dadf2afe37eaf26f3f2906ec2dd0aacaa","date":1461326984,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/LRUQueryCache#clearCoreCacheKey(Object).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/LRUQueryCache#clearCoreCacheKey(Object).mjava","sourceNew":"  /**\n   * Remove all cache entries for the given core cache key.\n   */\n  public void clearCoreCacheKey(Object coreKey) {\n    lock.lock();\n    try {\n      final LeafCache leafCache = cache.remove(coreKey);\n      if (leafCache != null) {\n        ramBytesUsed -= HASHTABLE_RAM_BYTES_PER_ENTRY;\n        final int numEntries = leafCache.cache.size();\n        if (numEntries > 0) {\n          onDocIdSetEviction(coreKey, numEntries, leafCache.ramBytesUsed);\n        } else {\n          assert numEntries == 0;\n          assert leafCache.ramBytesUsed == 0;\n        }\n      }\n    } finally {\n      lock.unlock();\n    }\n  }\n\n","sourceOld":"  /**\n   * Remove all cache entries for the given core cache key.\n   */\n  public synchronized void clearCoreCacheKey(Object coreKey) {\n    final LeafCache leafCache = cache.remove(coreKey);\n    if (leafCache != null) {\n      ramBytesUsed -= HASHTABLE_RAM_BYTES_PER_ENTRY;\n      final int numEntries = leafCache.cache.size();\n      if (numEntries > 0) {\n        onDocIdSetEviction(coreKey, numEntries, leafCache.ramBytesUsed);\n      } else {\n        assert numEntries == 0;\n        assert leafCache.ramBytesUsed == 0;\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f7f901826e47f75f810d7aae24b0455d21ea1fe2","date":1461678892,"type":3,"author":"Noble Paul","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/search/LRUQueryCache#clearCoreCacheKey(Object).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/LRUQueryCache#clearCoreCacheKey(Object).mjava","sourceNew":"  /**\n   * Remove all cache entries for the given core cache key.\n   */\n  public void clearCoreCacheKey(Object coreKey) {\n    lock.lock();\n    try {\n      final LeafCache leafCache = cache.remove(coreKey);\n      if (leafCache != null) {\n        ramBytesUsed -= HASHTABLE_RAM_BYTES_PER_ENTRY;\n        final int numEntries = leafCache.cache.size();\n        if (numEntries > 0) {\n          onDocIdSetEviction(coreKey, numEntries, leafCache.ramBytesUsed);\n        } else {\n          assert numEntries == 0;\n          assert leafCache.ramBytesUsed == 0;\n        }\n      }\n    } finally {\n      lock.unlock();\n    }\n  }\n\n","sourceOld":"  /**\n   * Remove all cache entries for the given core cache key.\n   */\n  public synchronized void clearCoreCacheKey(Object coreKey) {\n    final LeafCache leafCache = cache.remove(coreKey);\n    if (leafCache != null) {\n      ramBytesUsed -= HASHTABLE_RAM_BYTES_PER_ENTRY;\n      final int numEntries = leafCache.cache.size();\n      if (numEntries > 0) {\n        onDocIdSetEviction(coreKey, numEntries, leafCache.ramBytesUsed);\n      } else {\n        assert numEntries == 0;\n        assert leafCache.ramBytesUsed == 0;\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","60596f28be69b10c37a56a303c2dbea07b2ca4ba"],"60596f28be69b10c37a56a303c2dbea07b2ca4ba":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"f7f901826e47f75f810d7aae24b0455d21ea1fe2":["9cf74e14885cc735f79b6044859a215332a6bcf0","aa7f878dadf2afe37eaf26f3f2906ec2dd0aacaa"],"9cf74e14885cc735f79b6044859a215332a6bcf0":["60596f28be69b10c37a56a303c2dbea07b2ca4ba"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["f7f901826e47f75f810d7aae24b0455d21ea1fe2"],"aa7f878dadf2afe37eaf26f3f2906ec2dd0aacaa":["9cf74e14885cc735f79b6044859a215332a6bcf0"]},"commit2Childs":{"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":[],"60596f28be69b10c37a56a303c2dbea07b2ca4ba":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","9cf74e14885cc735f79b6044859a215332a6bcf0"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","60596f28be69b10c37a56a303c2dbea07b2ca4ba"],"f7f901826e47f75f810d7aae24b0455d21ea1fe2":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"9cf74e14885cc735f79b6044859a215332a6bcf0":["f7f901826e47f75f810d7aae24b0455d21ea1fe2","aa7f878dadf2afe37eaf26f3f2906ec2dd0aacaa"],"aa7f878dadf2afe37eaf26f3f2906ec2dd0aacaa":["f7f901826e47f75f810d7aae24b0455d21ea1fe2"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}