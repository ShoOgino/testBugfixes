{"path":"solr/core/src/test/org/apache/solr/security/AuditLoggerIntegrationTest.CallbackReceiver#run().mjava","commits":[{"id":"12ddd922ea96c1d0ea68a68506b6984a246cfb22","date":1554385731,"type":0,"author":"Jan HÃ¸ydahl","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/security/AuditLoggerIntegrationTest.CallbackReceiver#run().mjava","pathOld":"/dev/null","sourceNew":"    @Override\n    public void run() {\n      try {\n        log.info(\"Listening for audit callbacks on on port {}\", serverSocket.getLocalPort());\n        Socket socket = serverSocket.accept();\n        BufferedReader reader = new BufferedReader(new InputStreamReader(socket.getInputStream(), StandardCharsets.UTF_8));\n        while (!Thread.currentThread().isInterrupted()) {\n          if (!reader.ready()) continue;\n          ObjectMapper om = new ObjectMapper();\n          om.configure(DeserializationFeature.FAIL_ON_UNKNOWN_PROPERTIES, false);\n          AuditEvent event = om.readValue(reader.readLine(), AuditEvent.class);\n          buffer.add(event);\n          String r = event.getResource();\n          log.info(\"Received audit event for path \" + r);\n          count.incrementAndGet();\n          AtomicInteger resourceCounter = resourceCounts.get(r);\n          if (resourceCounter == null) {\n            resourceCounter = new AtomicInteger(1);\n            resourceCounts.put(r, resourceCounter);\n          } else {\n            resourceCounter.incrementAndGet();\n          }\n        }\n      } catch (IOException e) { \n        log.info(\"Socket closed\", e);\n      }\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5d5482e225fe64e9f868c423923d1144adc88142","date":1571270194,"type":3,"author":"Chris Hostetter","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/security/AuditLoggerIntegrationTest.CallbackReceiver#run().mjava","pathOld":"solr/core/src/test/org/apache/solr/security/AuditLoggerIntegrationTest.CallbackReceiver#run().mjava","sourceNew":"    @Override\n    public void run() {\n      try {\n        log.info(\"Listening for audit callbacks on on port {}\", serverSocket.getLocalPort());\n        Socket socket = serverSocket.accept();\n        BufferedReader reader = new BufferedReader(new InputStreamReader(socket.getInputStream(), StandardCharsets.UTF_8));\n        while (!Thread.currentThread().isInterrupted()) {\n          if (!reader.ready()) continue;\n          ObjectMapper om = new ObjectMapper();\n          om.configure(DeserializationFeature.FAIL_ON_UNKNOWN_PROPERTIES, false);\n          final String msg = reader.readLine();\n          final AuditEvent event = om.readValue(msg, AuditEvent.class);\n          log.info(\"Received {}: {}\", event, msg);\n          queue.add(event);\n        }\n      } catch (IOException e) { \n        log.info(\"Socket closed\", e);\n      }\n    }\n\n","sourceOld":"    @Override\n    public void run() {\n      try {\n        log.info(\"Listening for audit callbacks on on port {}\", serverSocket.getLocalPort());\n        Socket socket = serverSocket.accept();\n        BufferedReader reader = new BufferedReader(new InputStreamReader(socket.getInputStream(), StandardCharsets.UTF_8));\n        while (!Thread.currentThread().isInterrupted()) {\n          if (!reader.ready()) continue;\n          ObjectMapper om = new ObjectMapper();\n          om.configure(DeserializationFeature.FAIL_ON_UNKNOWN_PROPERTIES, false);\n          AuditEvent event = om.readValue(reader.readLine(), AuditEvent.class);\n          buffer.add(event);\n          String r = event.getResource();\n          log.info(\"Received audit event for path \" + r);\n          count.incrementAndGet();\n          AtomicInteger resourceCounter = resourceCounts.get(r);\n          if (resourceCounter == null) {\n            resourceCounter = new AtomicInteger(1);\n            resourceCounts.put(r, resourceCounter);\n          } else {\n            resourceCounter.incrementAndGet();\n          }\n        }\n      } catch (IOException e) { \n        log.info(\"Socket closed\", e);\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a966532d92cf9ba2856f15a8140151bb6b518e4b","date":1588290631,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/security/AuditLoggerIntegrationTest.CallbackReceiver#run().mjava","pathOld":"solr/core/src/test/org/apache/solr/security/AuditLoggerIntegrationTest.CallbackReceiver#run().mjava","sourceNew":"    @Override\n    public void run() {\n      try {\n        if (log.isInfoEnabled()) {\n          log.info(\"Listening for audit callbacks on on port {}\", serverSocket.getLocalPort());\n        }\n        Socket socket = serverSocket.accept();\n        BufferedReader reader = new BufferedReader(new InputStreamReader(socket.getInputStream(), StandardCharsets.UTF_8));\n        while (!Thread.currentThread().isInterrupted()) {\n          if (!reader.ready()) continue;\n          ObjectMapper om = new ObjectMapper();\n          om.configure(DeserializationFeature.FAIL_ON_UNKNOWN_PROPERTIES, false);\n          final String msg = reader.readLine();\n          final AuditEvent event = om.readValue(msg, AuditEvent.class);\n          log.info(\"Received {}: {}\", event, msg);\n          queue.add(event);\n        }\n      } catch (IOException e) { \n        log.info(\"Socket closed\", e);\n      }\n    }\n\n","sourceOld":"    @Override\n    public void run() {\n      try {\n        log.info(\"Listening for audit callbacks on on port {}\", serverSocket.getLocalPort());\n        Socket socket = serverSocket.accept();\n        BufferedReader reader = new BufferedReader(new InputStreamReader(socket.getInputStream(), StandardCharsets.UTF_8));\n        while (!Thread.currentThread().isInterrupted()) {\n          if (!reader.ready()) continue;\n          ObjectMapper om = new ObjectMapper();\n          om.configure(DeserializationFeature.FAIL_ON_UNKNOWN_PROPERTIES, false);\n          final String msg = reader.readLine();\n          final AuditEvent event = om.readValue(msg, AuditEvent.class);\n          log.info(\"Received {}: {}\", event, msg);\n          queue.add(event);\n        }\n      } catch (IOException e) { \n        log.info(\"Socket closed\", e);\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"12ddd922ea96c1d0ea68a68506b6984a246cfb22":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"5d5482e225fe64e9f868c423923d1144adc88142":["12ddd922ea96c1d0ea68a68506b6984a246cfb22"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a966532d92cf9ba2856f15a8140151bb6b518e4b":["5d5482e225fe64e9f868c423923d1144adc88142"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a966532d92cf9ba2856f15a8140151bb6b518e4b"]},"commit2Childs":{"12ddd922ea96c1d0ea68a68506b6984a246cfb22":["5d5482e225fe64e9f868c423923d1144adc88142"],"5d5482e225fe64e9f868c423923d1144adc88142":["a966532d92cf9ba2856f15a8140151bb6b518e4b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["12ddd922ea96c1d0ea68a68506b6984a246cfb22"],"a966532d92cf9ba2856f15a8140151bb6b518e4b":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}