{"path":"src/java/org/apache/lucene/index/IndexWriter#docCount().mjava","commits":[{"id":"91109046a59c58ee0ee5d0d2767b08d1f30d6702","date":1000830588,"type":0,"author":"Jason van Zyl","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/IndexWriter#docCount().mjava","pathOld":"/dev/null","sourceNew":"  /** Returns the number of documents currently in this index. */\n  public final synchronized int docCount() {\n    int count = 0;\n    for (int i = 0; i < segmentInfos.size(); i++) {\n      SegmentInfo si = segmentInfos.info(i);\n      count += si.docCount;\n    }\n    return count;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9c7454619ea6a0710272c1dd947345cee64489f6","date":1026927484,"type":3,"author":"Doug Cutting","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/IndexWriter#docCount().mjava","pathOld":"src/java/org/apache/lucene/index/IndexWriter#docCount().mjava","sourceNew":"  /** Returns the number of documents currently in this index. */\n  public synchronized int docCount() {\n    int count = 0;\n    for (int i = 0; i < segmentInfos.size(); i++) {\n      SegmentInfo si = segmentInfos.info(i);\n      count += si.docCount;\n    }\n    return count;\n  }\n\n","sourceOld":"  /** Returns the number of documents currently in this index. */\n  public final synchronized int docCount() {\n    int count = 0;\n    for (int i = 0; i < segmentInfos.size(); i++) {\n      SegmentInfo si = segmentInfos.info(i);\n      count += si.docCount;\n    }\n    return count;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d7052f725a053aa55424f966831826f61b798bf1","date":1158258681,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/IndexWriter#docCount().mjava","pathOld":"src/java/org/apache/lucene/index/IndexWriter#docCount().mjava","sourceNew":"  /** Returns the number of documents currently in this index. */\n  public synchronized int docCount() {\n    int count = ramSegmentInfos.size();\n    for (int i = 0; i < segmentInfos.size(); i++) {\n      SegmentInfo si = segmentInfos.info(i);\n      count += si.docCount;\n    }\n    return count;\n  }\n\n","sourceOld":"  /** Returns the number of documents currently in this index. */\n  public synchronized int docCount() {\n    int count = 0;\n    for (int i = 0; i < segmentInfos.size(); i++) {\n      SegmentInfo si = segmentInfos.info(i);\n      count += si.docCount;\n    }\n    return count;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"328c1568e471f0c6eaa49ec00334ca59e573710f","date":1173897963,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/IndexWriter#docCount().mjava","pathOld":"src/java/org/apache/lucene/index/IndexWriter#docCount().mjava","sourceNew":"  /** Returns the number of documents currently in this index. */\n  public synchronized int docCount() {\n    ensureOpen();\n    int count = ramSegmentInfos.size();\n    for (int i = 0; i < segmentInfos.size(); i++) {\n      SegmentInfo si = segmentInfos.info(i);\n      count += si.docCount;\n    }\n    return count;\n  }\n\n","sourceOld":"  /** Returns the number of documents currently in this index. */\n  public synchronized int docCount() {\n    int count = ramSegmentInfos.size();\n    for (int i = 0; i < segmentInfos.size(); i++) {\n      SegmentInfo si = segmentInfos.info(i);\n      count += si.docCount;\n    }\n    return count;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4350b17bd363cd13a95171b8df1ca62ea4c3e71c","date":1183562198,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/IndexWriter#docCount().mjava","pathOld":"src/java/org/apache/lucene/index/IndexWriter#docCount().mjava","sourceNew":"  /** Returns the number of documents currently in this index. */\n  public synchronized int docCount() {\n    ensureOpen();\n    int count = docWriter.getNumDocsInRAM();\n    for (int i = 0; i < segmentInfos.size(); i++) {\n      SegmentInfo si = segmentInfos.info(i);\n      count += si.docCount;\n    }\n    return count;\n  }\n\n","sourceOld":"  /** Returns the number of documents currently in this index. */\n  public synchronized int docCount() {\n    ensureOpen();\n    int count = ramSegmentInfos.size();\n    for (int i = 0; i < segmentInfos.size(); i++) {\n      SegmentInfo si = segmentInfos.info(i);\n      count += si.docCount;\n    }\n    return count;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a2fc4b864a5dc2c630bb1fa94091e89e69f8f8be","date":1204801324,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/IndexWriter#docCount().mjava","pathOld":"src/java/org/apache/lucene/index/IndexWriter#docCount().mjava","sourceNew":"  /** Returns the number of documents currently in this index. */\n  public synchronized int docCount() {\n    ensureOpen();\n    int count;\n    if (docWriter != null)\n      count = docWriter.getNumDocsInRAM();\n    else\n      count = 0;\n    for (int i = 0; i < segmentInfos.size(); i++) {\n      SegmentInfo si = segmentInfos.info(i);\n      count += si.docCount;\n    }\n    return count;\n  }\n\n","sourceOld":"  /** Returns the number of documents currently in this index. */\n  public synchronized int docCount() {\n    ensureOpen();\n    int count = docWriter.getNumDocsInRAM();\n    for (int i = 0; i < segmentInfos.size(); i++) {\n      SegmentInfo si = segmentInfos.info(i);\n      count += si.docCount;\n    }\n    return count;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"34e2c71b6406443562df54db233fde0728502f64","date":1209294850,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/IndexWriter#docCount().mjava","pathOld":"src/java/org/apache/lucene/index/IndexWriter#docCount().mjava","sourceNew":"  /** Returns the number of documents currently in this\n   *  index, not counting deletions.\n   * @deprecated Please use {@link #maxDoc()} (same as this\n   * method) or {@link #numDocs()} (also takes deletions\n   * into account), instead. */\n  public synchronized int docCount() {\n    ensureOpen();\n    return maxDoc();\n  }\n\n","sourceOld":"  /** Returns the number of documents currently in this index. */\n  public synchronized int docCount() {\n    ensureOpen();\n    int count;\n    if (docWriter != null)\n      count = docWriter.getNumDocsInRAM();\n    else\n      count = 0;\n    for (int i = 0; i < segmentInfos.size(); i++) {\n      SegmentInfo si = segmentInfos.info(i);\n      count += si.docCount;\n    }\n    return count;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"560b3a3bb8efcae105d6ae5fbee0f8b03c7decc7","date":1255555265,"type":4,"author":"Michael Busch","isMerge":false,"pathNew":"/dev/null","pathOld":"src/java/org/apache/lucene/index/IndexWriter#docCount().mjava","sourceNew":null,"sourceOld":"  /** Returns the number of documents currently in this\n   *  index, not counting deletions.\n   * @deprecated Please use {@link #maxDoc()} (same as this\n   * method) or {@link #numDocs()} (also takes deletions\n   * into account), instead. */\n  public synchronized int docCount() {\n    ensureOpen();\n    return maxDoc();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"d7052f725a053aa55424f966831826f61b798bf1":["9c7454619ea6a0710272c1dd947345cee64489f6"],"328c1568e471f0c6eaa49ec00334ca59e573710f":["d7052f725a053aa55424f966831826f61b798bf1"],"91109046a59c58ee0ee5d0d2767b08d1f30d6702":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"34e2c71b6406443562df54db233fde0728502f64":["a2fc4b864a5dc2c630bb1fa94091e89e69f8f8be"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"9c7454619ea6a0710272c1dd947345cee64489f6":["91109046a59c58ee0ee5d0d2767b08d1f30d6702"],"560b3a3bb8efcae105d6ae5fbee0f8b03c7decc7":["34e2c71b6406443562df54db233fde0728502f64"],"a2fc4b864a5dc2c630bb1fa94091e89e69f8f8be":["4350b17bd363cd13a95171b8df1ca62ea4c3e71c"],"4350b17bd363cd13a95171b8df1ca62ea4c3e71c":["328c1568e471f0c6eaa49ec00334ca59e573710f"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["560b3a3bb8efcae105d6ae5fbee0f8b03c7decc7"]},"commit2Childs":{"d7052f725a053aa55424f966831826f61b798bf1":["328c1568e471f0c6eaa49ec00334ca59e573710f"],"328c1568e471f0c6eaa49ec00334ca59e573710f":["4350b17bd363cd13a95171b8df1ca62ea4c3e71c"],"91109046a59c58ee0ee5d0d2767b08d1f30d6702":["9c7454619ea6a0710272c1dd947345cee64489f6"],"34e2c71b6406443562df54db233fde0728502f64":["560b3a3bb8efcae105d6ae5fbee0f8b03c7decc7"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["91109046a59c58ee0ee5d0d2767b08d1f30d6702"],"9c7454619ea6a0710272c1dd947345cee64489f6":["d7052f725a053aa55424f966831826f61b798bf1"],"a2fc4b864a5dc2c630bb1fa94091e89e69f8f8be":["34e2c71b6406443562df54db233fde0728502f64"],"560b3a3bb8efcae105d6ae5fbee0f8b03c7decc7":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"4350b17bd363cd13a95171b8df1ca62ea4c3e71c":["a2fc4b864a5dc2c630bb1fa94091e89e69f8f8be"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}