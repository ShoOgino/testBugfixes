{"path":"solr/solrj/src/java/org/apache/solr/client/solrj/impl/DelegationTokenHttpSolrClient#DelegationTokenHttpSolrClient(String,HttpClient,ResponseParser,boolean,ModifiableSolrParams).mjava","commits":[{"id":"a8cfe32f552b7e4776be5098105cbd3e11e93792","date":1482161480,"type":0,"author":"Ishan Chattopadhyaya","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/impl/DelegationTokenHttpSolrClient#DelegationTokenHttpSolrClient(String,HttpClient,ResponseParser,boolean,ModifiableSolrParams).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * This constructor is defined at \"protected\" scope. Ideally applications should\n   * use {@linkplain org.apache.solr.client.solrj.impl.HttpSolrClient.Builder} instance\n   * to configure this Solr client instance.\n   *\n   * @param baseURL The base url to communicate with the Solr server\n   * @param client Http client instance to use for communication\n   * @param parser Response parser instance to use to decode response from Solr server\n   * @param allowCompression Should compression be allowed ?\n   * @param invariantParams The parameters which should be passed with every request.\n   */\n  protected DelegationTokenHttpSolrClient(String baseURL,\n      HttpClient client,\n      ResponseParser parser,\n      boolean allowCompression,\n      ModifiableSolrParams invariantParams) {\n    super(baseURL, client, parser, allowCompression, invariantParams);\n\n    setQueryParams(new TreeSet<>(Arrays.asList(DELEGATION_TOKEN_PARAM)));\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5acd68c5f07f7ee604c2eeffe801f4a2d7a1a5bf","date":1482251961,"type":0,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/impl/DelegationTokenHttpSolrClient#DelegationTokenHttpSolrClient(String,HttpClient,ResponseParser,boolean,ModifiableSolrParams).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * This constructor is defined at \"protected\" scope. Ideally applications should\n   * use {@linkplain org.apache.solr.client.solrj.impl.HttpSolrClient.Builder} instance\n   * to configure this Solr client instance.\n   *\n   * @param baseURL The base url to communicate with the Solr server\n   * @param client Http client instance to use for communication\n   * @param parser Response parser instance to use to decode response from Solr server\n   * @param allowCompression Should compression be allowed ?\n   * @param invariantParams The parameters which should be passed with every request.\n   */\n  protected DelegationTokenHttpSolrClient(String baseURL,\n      HttpClient client,\n      ResponseParser parser,\n      boolean allowCompression,\n      ModifiableSolrParams invariantParams) {\n    super(baseURL, client, parser, allowCompression, invariantParams);\n\n    setQueryParams(new TreeSet<>(Arrays.asList(DELEGATION_TOKEN_PARAM)));\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c07dc645ff236a7d51da2a5ef49a948dfbf8610c","date":1498242650,"type":3,"author":"Anshum Gupta","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/impl/DelegationTokenHttpSolrClient#DelegationTokenHttpSolrClient(String,HttpClient,ResponseParser,boolean,ModifiableSolrParams).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/impl/DelegationTokenHttpSolrClient#DelegationTokenHttpSolrClient(String,HttpClient,ResponseParser,boolean,ModifiableSolrParams).mjava","sourceNew":"  /**\n   * This constructor is defined at \"protected\" scope. Ideally applications should\n   * use {@linkplain org.apache.solr.client.solrj.impl.HttpSolrClient.Builder} instance\n   * to configure this Solr client instance.\n   *\n   * @param baseURL The base url to communicate with the Solr server\n   * @param client Http client instance to use for communication\n   * @param parser Response parser instance to use to decode response from Solr server\n   * @param allowCompression Should compression be allowed ?\n   * @param invariantParams The parameters which should be passed with every request.\n   * \n   * @deprecated use {@link DelegationTokenHttpSolrClient#DelegationTokenHttpSolrClient(HttpSolrClient.Builder)} instead, as it is a more\n   * extension/subclassing-friendly alternative\n   */\n  @Deprecated\n  protected DelegationTokenHttpSolrClient(String baseURL,\n      HttpClient client,\n      ResponseParser parser,\n      boolean allowCompression,\n      ModifiableSolrParams invariantParams) {\n    super(baseURL, client, parser, allowCompression, invariantParams);\n\n    setQueryParams(new TreeSet<>(Arrays.asList(DELEGATION_TOKEN_PARAM)));\n  }\n\n","sourceOld":"  /**\n   * This constructor is defined at \"protected\" scope. Ideally applications should\n   * use {@linkplain org.apache.solr.client.solrj.impl.HttpSolrClient.Builder} instance\n   * to configure this Solr client instance.\n   *\n   * @param baseURL The base url to communicate with the Solr server\n   * @param client Http client instance to use for communication\n   * @param parser Response parser instance to use to decode response from Solr server\n   * @param allowCompression Should compression be allowed ?\n   * @param invariantParams The parameters which should be passed with every request.\n   */\n  protected DelegationTokenHttpSolrClient(String baseURL,\n      HttpClient client,\n      ResponseParser parser,\n      boolean allowCompression,\n      ModifiableSolrParams invariantParams) {\n    super(baseURL, client, parser, allowCompression, invariantParams);\n\n    setQueryParams(new TreeSet<>(Arrays.asList(DELEGATION_TOKEN_PARAM)));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b7dfa64bc2074fb87d0ca70095a644c1ead107e1","date":1498356339,"type":3,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/impl/DelegationTokenHttpSolrClient#DelegationTokenHttpSolrClient(String,HttpClient,ResponseParser,boolean,ModifiableSolrParams).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/impl/DelegationTokenHttpSolrClient#DelegationTokenHttpSolrClient(String,HttpClient,ResponseParser,boolean,ModifiableSolrParams).mjava","sourceNew":"  /**\n   * This constructor is defined at \"protected\" scope. Ideally applications should\n   * use {@linkplain org.apache.solr.client.solrj.impl.HttpSolrClient.Builder} instance\n   * to configure this Solr client instance.\n   *\n   * @param baseURL The base url to communicate with the Solr server\n   * @param client Http client instance to use for communication\n   * @param parser Response parser instance to use to decode response from Solr server\n   * @param allowCompression Should compression be allowed ?\n   * @param invariantParams The parameters which should be passed with every request.\n   * \n   * @deprecated use {@link DelegationTokenHttpSolrClient#DelegationTokenHttpSolrClient(HttpSolrClient.Builder)} instead, as it is a more\n   * extension/subclassing-friendly alternative\n   */\n  @Deprecated\n  protected DelegationTokenHttpSolrClient(String baseURL,\n      HttpClient client,\n      ResponseParser parser,\n      boolean allowCompression,\n      ModifiableSolrParams invariantParams) {\n    super(baseURL, client, parser, allowCompression, invariantParams);\n\n    setQueryParams(new TreeSet<>(Arrays.asList(DELEGATION_TOKEN_PARAM)));\n  }\n\n","sourceOld":"  /**\n   * This constructor is defined at \"protected\" scope. Ideally applications should\n   * use {@linkplain org.apache.solr.client.solrj.impl.HttpSolrClient.Builder} instance\n   * to configure this Solr client instance.\n   *\n   * @param baseURL The base url to communicate with the Solr server\n   * @param client Http client instance to use for communication\n   * @param parser Response parser instance to use to decode response from Solr server\n   * @param allowCompression Should compression be allowed ?\n   * @param invariantParams The parameters which should be passed with every request.\n   */\n  protected DelegationTokenHttpSolrClient(String baseURL,\n      HttpClient client,\n      ResponseParser parser,\n      boolean allowCompression,\n      ModifiableSolrParams invariantParams) {\n    super(baseURL, client, parser, allowCompression, invariantParams);\n\n    setQueryParams(new TreeSet<>(Arrays.asList(DELEGATION_TOKEN_PARAM)));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"28288370235ed02234a64753cdbf0c6ec096304a","date":1498726817,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/impl/DelegationTokenHttpSolrClient#DelegationTokenHttpSolrClient(String,HttpClient,ResponseParser,boolean,ModifiableSolrParams).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/impl/DelegationTokenHttpSolrClient#DelegationTokenHttpSolrClient(String,HttpClient,ResponseParser,boolean,ModifiableSolrParams).mjava","sourceNew":"  /**\n   * This constructor is defined at \"protected\" scope. Ideally applications should\n   * use {@linkplain org.apache.solr.client.solrj.impl.HttpSolrClient.Builder} instance\n   * to configure this Solr client instance.\n   *\n   * @param baseURL The base url to communicate with the Solr server\n   * @param client Http client instance to use for communication\n   * @param parser Response parser instance to use to decode response from Solr server\n   * @param allowCompression Should compression be allowed ?\n   * @param invariantParams The parameters which should be passed with every request.\n   * \n   * @deprecated use {@link DelegationTokenHttpSolrClient#DelegationTokenHttpSolrClient(HttpSolrClient.Builder)} instead, as it is a more\n   * extension/subclassing-friendly alternative\n   */\n  @Deprecated\n  protected DelegationTokenHttpSolrClient(String baseURL,\n      HttpClient client,\n      ResponseParser parser,\n      boolean allowCompression,\n      ModifiableSolrParams invariantParams) {\n    super(baseURL, client, parser, allowCompression, invariantParams);\n\n    setQueryParams(new TreeSet<>(Arrays.asList(DELEGATION_TOKEN_PARAM)));\n  }\n\n","sourceOld":"  /**\n   * This constructor is defined at \"protected\" scope. Ideally applications should\n   * use {@linkplain org.apache.solr.client.solrj.impl.HttpSolrClient.Builder} instance\n   * to configure this Solr client instance.\n   *\n   * @param baseURL The base url to communicate with the Solr server\n   * @param client Http client instance to use for communication\n   * @param parser Response parser instance to use to decode response from Solr server\n   * @param allowCompression Should compression be allowed ?\n   * @param invariantParams The parameters which should be passed with every request.\n   */\n  protected DelegationTokenHttpSolrClient(String baseURL,\n      HttpClient client,\n      ResponseParser parser,\n      boolean allowCompression,\n      ModifiableSolrParams invariantParams) {\n    super(baseURL, client, parser, allowCompression, invariantParams);\n\n    setQueryParams(new TreeSet<>(Arrays.asList(DELEGATION_TOKEN_PARAM)));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a8cfe32f552b7e4776be5098105cbd3e11e93792":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"5acd68c5f07f7ee604c2eeffe801f4a2d7a1a5bf":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","a8cfe32f552b7e4776be5098105cbd3e11e93792"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"b7dfa64bc2074fb87d0ca70095a644c1ead107e1":["a8cfe32f552b7e4776be5098105cbd3e11e93792","c07dc645ff236a7d51da2a5ef49a948dfbf8610c"],"28288370235ed02234a64753cdbf0c6ec096304a":["a8cfe32f552b7e4776be5098105cbd3e11e93792","c07dc645ff236a7d51da2a5ef49a948dfbf8610c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["28288370235ed02234a64753cdbf0c6ec096304a"],"c07dc645ff236a7d51da2a5ef49a948dfbf8610c":["a8cfe32f552b7e4776be5098105cbd3e11e93792"]},"commit2Childs":{"a8cfe32f552b7e4776be5098105cbd3e11e93792":["5acd68c5f07f7ee604c2eeffe801f4a2d7a1a5bf","b7dfa64bc2074fb87d0ca70095a644c1ead107e1","28288370235ed02234a64753cdbf0c6ec096304a","c07dc645ff236a7d51da2a5ef49a948dfbf8610c"],"5acd68c5f07f7ee604c2eeffe801f4a2d7a1a5bf":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["a8cfe32f552b7e4776be5098105cbd3e11e93792","5acd68c5f07f7ee604c2eeffe801f4a2d7a1a5bf"],"b7dfa64bc2074fb87d0ca70095a644c1ead107e1":[],"28288370235ed02234a64753cdbf0c6ec096304a":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"c07dc645ff236a7d51da2a5ef49a948dfbf8610c":["b7dfa64bc2074fb87d0ca70095a644c1ead107e1","28288370235ed02234a64753cdbf0c6ec096304a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["5acd68c5f07f7ee604c2eeffe801f4a2d7a1a5bf","b7dfa64bc2074fb87d0ca70095a644c1ead107e1","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}