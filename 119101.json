{"path":"solr/core/src/java/org/apache/solr/util/SolrCLI.CreateCoreTool#runImpl(CommandLine).mjava","commits":[{"id":"4ca20be81c9284c840498143264e583ccbb8525a","date":1438705932,"type":1,"author":"Timothy Potter","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/util/SolrCLI.CreateCoreTool#runImpl(CommandLine).mjava","pathOld":"solr/core/src/java/org/apache/solr/util/SolrCLI.CreateCoreTool#runTool(CommandLine).mjava","sourceNew":"    protected void runImpl(CommandLine cli) throws Exception {\n\n      String solrUrl = cli.getOptionValue(\"solrUrl\", DEFAULT_SOLR_URL);\n      if (!solrUrl.endsWith(\"/\"))\n        solrUrl += \"/\";\n\n      File configsetsDir = new File(cli.getOptionValue(\"configsetsDir\"));\n      if (!configsetsDir.isDirectory())\n        throw new FileNotFoundException(configsetsDir.getAbsolutePath() + \" not found!\");\n\n      String configSet = cli.getOptionValue(\"confdir\", DEFAULT_CONFIG_SET);\n      File configSetDir = new File(configsetsDir, configSet);\n      if (!configSetDir.isDirectory()) {\n        // we allow them to pass a directory instead of a configset name\n        File possibleConfigDir = new File(configSet);\n        if (possibleConfigDir.isDirectory()) {\n          configSetDir = possibleConfigDir;\n        } else {\n          throw new FileNotFoundException(\"Specified config directory \" + configSet +\n              \" not found in \" + configsetsDir.getAbsolutePath());\n        }\n      }\n\n      String coreName = cli.getOptionValue(NAME);\n\n      String systemInfoUrl = solrUrl+\"admin/info/system\";\n      CloseableHttpClient httpClient = getHttpClient();\n      String solrHome = null;\n      try {\n        Map<String,Object> systemInfo = getJson(httpClient, systemInfoUrl, 2, true);\n        if (\"solrcloud\".equals(systemInfo.get(\"mode\"))) {\n          throw new IllegalStateException(\"Solr at \"+solrUrl+\n              \" is running in SolrCloud mode, please use create_collection command instead.\");\n        }\n\n        // convert raw JSON into user-friendly output\n        solrHome = (String)systemInfo.get(\"solr_home\");\n        if (solrHome == null)\n          solrHome = configsetsDir.getParentFile().getAbsolutePath();\n\n      } finally {\n        closeHttpClient(httpClient);\n      }\n\n      String coreStatusUrl = solrUrl+\"admin/cores?action=STATUS&core=\"+coreName;\n      if (safeCheckCoreExists(coreStatusUrl, coreName)) {\n        throw new IllegalArgumentException(\"\\nCore '\"+coreName+\n            \"' already exists!\\nChecked core existence using Core API command:\\n\"+coreStatusUrl);\n      }\n\n      File coreInstanceDir = new File(solrHome, coreName);\n      File confDir = new File(configSetDir,\"conf\");\n      if (!coreInstanceDir.isDirectory()) {\n        coreInstanceDir.mkdirs();\n        if (!coreInstanceDir.isDirectory())\n          throw new IOException(\"Failed to create new core instance directory: \"+coreInstanceDir.getAbsolutePath());\n\n        if (confDir.isDirectory()) {\n          FileUtils.copyDirectoryToDirectory(confDir, coreInstanceDir);\n        } else {\n          // hmmm ... the configset we're cloning doesn't have a conf sub-directory,\n          // we'll just assume it is OK if it has solrconfig.xml\n          if ((new File(configSetDir, \"solrconfig.xml\")).isFile()) {\n            FileUtils.copyDirectory(configSetDir, new File(coreInstanceDir, \"conf\"));\n          } else {\n            throw new IllegalArgumentException(\"\\n\"+configSetDir.getAbsolutePath()+\" doesn't contain a conf subdirectory or solrconfig.xml\\n\");\n          }\n        }\n        echo(\"\\nSetup new core instance directory:\\n\" + coreInstanceDir.getAbsolutePath());\n      }\n\n      String createCoreUrl =\n          String.format(Locale.ROOT,\n              \"%sadmin/cores?action=CREATE&name=%s&instanceDir=%s\",\n              solrUrl,\n              coreName,\n              coreName);\n\n      echo(\"\\nCreating new core '\" + coreName + \"' using command:\\n\" + createCoreUrl + \"\\n\");\n\n      Map<String,Object> json = null;\n      try {\n        json = getJson(createCoreUrl);\n      } catch (SolrServerException sse) {\n        // mostly likely the core already exists ...\n        if (safeCheckCoreExists(coreStatusUrl, coreName)) {\n          // core already exists\n          throw new IllegalArgumentException(\"Core '\"+coreName+\"' already exists!\\nChecked core existence using Core API command:\\n\"+coreStatusUrl);\n        } else {\n          throw sse;\n        }\n      }\n\n      CharArr arr = new CharArr();\n      new JSONWriter(arr, 2).write(json);\n      echo(arr.toString());\n      echo(\"\\n\");\n    }\n\n","sourceOld":"    @Override\n    public int runTool(CommandLine cli) throws Exception {\n\n      String solrUrl = cli.getOptionValue(\"solrUrl\", DEFAULT_SOLR_URL);\n      if (!solrUrl.endsWith(\"/\"))\n        solrUrl += \"/\";\n\n      File configsetsDir = new File(cli.getOptionValue(\"configsetsDir\"));\n      if (!configsetsDir.isDirectory())\n        throw new FileNotFoundException(configsetsDir.getAbsolutePath() + \" not found!\");\n\n      String configSet = cli.getOptionValue(\"confdir\", DEFAULT_CONFIG_SET);\n      File configSetDir = new File(configsetsDir, configSet);\n      if (!configSetDir.isDirectory()) {\n        // we allow them to pass a directory instead of a configset name\n        File possibleConfigDir = new File(configSet);\n        if (possibleConfigDir.isDirectory()) {\n          configSetDir = possibleConfigDir;\n        } else {\n          throw new FileNotFoundException(\"Specified config directory \" + configSet +\n              \" not found in \" + configsetsDir.getAbsolutePath());\n        }\n      }\n\n      String coreName = cli.getOptionValue(NAME);\n\n      String systemInfoUrl = solrUrl+\"admin/info/system\";\n      CloseableHttpClient httpClient = getHttpClient();\n      String solrHome = null;\n      try {\n        Map<String,Object> systemInfo = getJson(httpClient, systemInfoUrl, 2);\n        if (\"solrcloud\".equals(systemInfo.get(\"mode\"))) {\n          System.err.println(\"\\nERROR: Solr at \"+solrUrl+\n              \" is running in SolrCloud mode, please use create_collection command instead.\\n\");\n          return 1;\n        }\n\n        // convert raw JSON into user-friendly output\n        solrHome = (String)systemInfo.get(\"solr_home\");\n        if (solrHome == null)\n          solrHome = configsetsDir.getParentFile().getAbsolutePath();\n\n      } finally {\n        closeHttpClient(httpClient);\n      }\n\n      String coreStatusUrl = solrUrl+\"admin/cores?action=STATUS&core=\"+coreName;\n      if (safeCheckCoreExists(coreStatusUrl, coreName)) {\n        System.err.println(\"\\nCore '\"+coreName+\"' already exists!\");\n        System.err.println(\"\\nChecked core existence using Core API command:\\n\"+coreStatusUrl);\n        System.err.println();\n        return 1;\n      }\n\n      File coreInstanceDir = new File(solrHome, coreName);\n      File confDir = new File(configSetDir,\"conf\");\n      if (!coreInstanceDir.isDirectory()) {\n        coreInstanceDir.mkdirs();\n        if (!coreInstanceDir.isDirectory())\n          throw new IOException(\"Failed to create new core instance directory: \"+coreInstanceDir.getAbsolutePath());\n\n        if (confDir.isDirectory()) {\n          FileUtils.copyDirectoryToDirectory(confDir, coreInstanceDir);\n        } else {\n          // hmmm ... the configset we're cloning doesn't have a conf sub-directory,\n          // we'll just assume it is OK if it has solrconfig.xml\n          if ((new File(configSetDir, \"solrconfig.xml\")).isFile()) {\n            FileUtils.copyDirectory(configSetDir, new File(coreInstanceDir, \"conf\"));\n          } else {\n            System.err.println(\"\\n\"+configSetDir.getAbsolutePath()+\" doesn't contain a conf subdirectory or solrconfig.xml\\n\");\n            return 1;\n          }\n        }\n        System.out.println(\"\\nSetup new core instance directory:\\n\"+coreInstanceDir.getAbsolutePath());\n      }\n\n      String createCoreUrl =\n          String.format(Locale.ROOT,\n              \"%sadmin/cores?action=CREATE&name=%s&instanceDir=%s\",\n              solrUrl,\n              coreName,\n              coreName);\n\n      System.out.println(\"\\nCreating new core '\"+coreName+\"' using command:\\n\"+createCoreUrl+\"\\n\");\n\n      Map<String,Object> json = null;\n      try {\n        json = getJson(createCoreUrl);\n      } catch (SolrServerException sse) {\n        // mostly likely the core already exists ...\n        if (safeCheckCoreExists(coreStatusUrl, coreName)) {\n          // core already exists\n          System.err.println(\"Core '\"+coreName+\"' already exists!\");\n          System.err.println(\"\\nChecked core existence using Core API command:\\n\"+coreStatusUrl);\n        } else {\n          System.err.println(\"Failed to create core '\"+coreName+\"' due to: \"+sse.getMessage());\n        }\n        System.err.println();\n        return 1;\n      }\n\n      CharArr arr = new CharArr();\n      new JSONWriter(arr, 2).write(json);\n      System.out.println(arr.toString());\n      System.out.println();\n\n      return 0;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0f506150a6ebd43fb2833cdf2713e2d1d5bddbd6","date":1439653416,"type":3,"author":"Timothy Potter","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/util/SolrCLI.CreateCoreTool#runImpl(CommandLine).mjava","pathOld":"solr/core/src/java/org/apache/solr/util/SolrCLI.CreateCoreTool#runImpl(CommandLine).mjava","sourceNew":"    protected void runImpl(CommandLine cli) throws Exception {\n\n      String solrUrl = cli.getOptionValue(\"solrUrl\", DEFAULT_SOLR_URL);\n      if (!solrUrl.endsWith(\"/\"))\n        solrUrl += \"/\";\n\n      File configsetsDir = new File(cli.getOptionValue(\"configsetsDir\"));\n      if (!configsetsDir.isDirectory())\n        throw new FileNotFoundException(configsetsDir.getAbsolutePath() + \" not found!\");\n\n      String configSet = cli.getOptionValue(\"confdir\", DEFAULT_CONFIG_SET);\n      File configSetDir = new File(configsetsDir, configSet);\n      if (!configSetDir.isDirectory()) {\n        // we allow them to pass a directory instead of a configset name\n        File possibleConfigDir = new File(configSet);\n        if (possibleConfigDir.isDirectory()) {\n          configSetDir = possibleConfigDir;\n        } else {\n          throw new FileNotFoundException(\"Specified config directory \" + configSet +\n              \" not found in \" + configsetsDir.getAbsolutePath());\n        }\n      }\n\n      String coreName = cli.getOptionValue(NAME);\n\n      String systemInfoUrl = solrUrl+\"admin/info/system\";\n      CloseableHttpClient httpClient = getHttpClient();\n      String solrHome = null;\n      try {\n        Map<String,Object> systemInfo = getJson(httpClient, systemInfoUrl, 2, true);\n        if (\"solrcloud\".equals(systemInfo.get(\"mode\"))) {\n          throw new IllegalStateException(\"Solr at \"+solrUrl+\n              \" is running in SolrCloud mode, please use create_collection command instead.\");\n        }\n\n        // convert raw JSON into user-friendly output\n        solrHome = (String)systemInfo.get(\"solr_home\");\n        if (solrHome == null)\n          solrHome = configsetsDir.getParentFile().getAbsolutePath();\n\n      } finally {\n        closeHttpClient(httpClient);\n      }\n\n      String coreStatusUrl = solrUrl+\"admin/cores?action=STATUS&core=\"+coreName;\n      if (safeCheckCoreExists(coreStatusUrl, coreName)) {\n        throw new IllegalArgumentException(\"\\nCore '\"+coreName+\n            \"' already exists!\\nChecked core existence using Core API command:\\n\"+coreStatusUrl);\n      }\n\n      File coreInstanceDir = new File(solrHome, coreName);\n      File confDir = new File(configSetDir,\"conf\");\n      if (!coreInstanceDir.isDirectory()) {\n        coreInstanceDir.mkdirs();\n        if (!coreInstanceDir.isDirectory())\n          throw new IOException(\"Failed to create new core instance directory: \"+coreInstanceDir.getAbsolutePath());\n\n        if (confDir.isDirectory()) {\n          FileUtils.copyDirectoryToDirectory(confDir, coreInstanceDir);\n        } else {\n          // hmmm ... the configset we're cloning doesn't have a conf sub-directory,\n          // we'll just assume it is OK if it has solrconfig.xml\n          if ((new File(configSetDir, \"solrconfig.xml\")).isFile()) {\n            FileUtils.copyDirectory(configSetDir, new File(coreInstanceDir, \"conf\"));\n          } else {\n            throw new IllegalArgumentException(\"\\n\"+configSetDir.getAbsolutePath()+\" doesn't contain a conf subdirectory or solrconfig.xml\\n\");\n          }\n        }\n        echo(\"\\nSetup new core instance directory:\\n\" + coreInstanceDir.getAbsolutePath());\n      }\n\n      String createCoreUrl =\n          String.format(Locale.ROOT,\n              \"%sadmin/cores?action=CREATE&name=%s&instanceDir=%s\",\n              solrUrl,\n              coreName,\n              coreName);\n\n      echo(\"\\nCreating new core '\" + coreName + \"' using command:\\n\" + createCoreUrl + \"\\n\");\n\n      Map<String,Object> json = getJson(createCoreUrl);\n\n      CharArr arr = new CharArr();\n      new JSONWriter(arr, 2).write(json);\n      echo(arr.toString());\n      echo(\"\\n\");\n    }\n\n","sourceOld":"    protected void runImpl(CommandLine cli) throws Exception {\n\n      String solrUrl = cli.getOptionValue(\"solrUrl\", DEFAULT_SOLR_URL);\n      if (!solrUrl.endsWith(\"/\"))\n        solrUrl += \"/\";\n\n      File configsetsDir = new File(cli.getOptionValue(\"configsetsDir\"));\n      if (!configsetsDir.isDirectory())\n        throw new FileNotFoundException(configsetsDir.getAbsolutePath() + \" not found!\");\n\n      String configSet = cli.getOptionValue(\"confdir\", DEFAULT_CONFIG_SET);\n      File configSetDir = new File(configsetsDir, configSet);\n      if (!configSetDir.isDirectory()) {\n        // we allow them to pass a directory instead of a configset name\n        File possibleConfigDir = new File(configSet);\n        if (possibleConfigDir.isDirectory()) {\n          configSetDir = possibleConfigDir;\n        } else {\n          throw new FileNotFoundException(\"Specified config directory \" + configSet +\n              \" not found in \" + configsetsDir.getAbsolutePath());\n        }\n      }\n\n      String coreName = cli.getOptionValue(NAME);\n\n      String systemInfoUrl = solrUrl+\"admin/info/system\";\n      CloseableHttpClient httpClient = getHttpClient();\n      String solrHome = null;\n      try {\n        Map<String,Object> systemInfo = getJson(httpClient, systemInfoUrl, 2, true);\n        if (\"solrcloud\".equals(systemInfo.get(\"mode\"))) {\n          throw new IllegalStateException(\"Solr at \"+solrUrl+\n              \" is running in SolrCloud mode, please use create_collection command instead.\");\n        }\n\n        // convert raw JSON into user-friendly output\n        solrHome = (String)systemInfo.get(\"solr_home\");\n        if (solrHome == null)\n          solrHome = configsetsDir.getParentFile().getAbsolutePath();\n\n      } finally {\n        closeHttpClient(httpClient);\n      }\n\n      String coreStatusUrl = solrUrl+\"admin/cores?action=STATUS&core=\"+coreName;\n      if (safeCheckCoreExists(coreStatusUrl, coreName)) {\n        throw new IllegalArgumentException(\"\\nCore '\"+coreName+\n            \"' already exists!\\nChecked core existence using Core API command:\\n\"+coreStatusUrl);\n      }\n\n      File coreInstanceDir = new File(solrHome, coreName);\n      File confDir = new File(configSetDir,\"conf\");\n      if (!coreInstanceDir.isDirectory()) {\n        coreInstanceDir.mkdirs();\n        if (!coreInstanceDir.isDirectory())\n          throw new IOException(\"Failed to create new core instance directory: \"+coreInstanceDir.getAbsolutePath());\n\n        if (confDir.isDirectory()) {\n          FileUtils.copyDirectoryToDirectory(confDir, coreInstanceDir);\n        } else {\n          // hmmm ... the configset we're cloning doesn't have a conf sub-directory,\n          // we'll just assume it is OK if it has solrconfig.xml\n          if ((new File(configSetDir, \"solrconfig.xml\")).isFile()) {\n            FileUtils.copyDirectory(configSetDir, new File(coreInstanceDir, \"conf\"));\n          } else {\n            throw new IllegalArgumentException(\"\\n\"+configSetDir.getAbsolutePath()+\" doesn't contain a conf subdirectory or solrconfig.xml\\n\");\n          }\n        }\n        echo(\"\\nSetup new core instance directory:\\n\" + coreInstanceDir.getAbsolutePath());\n      }\n\n      String createCoreUrl =\n          String.format(Locale.ROOT,\n              \"%sadmin/cores?action=CREATE&name=%s&instanceDir=%s\",\n              solrUrl,\n              coreName,\n              coreName);\n\n      echo(\"\\nCreating new core '\" + coreName + \"' using command:\\n\" + createCoreUrl + \"\\n\");\n\n      Map<String,Object> json = null;\n      try {\n        json = getJson(createCoreUrl);\n      } catch (SolrServerException sse) {\n        // mostly likely the core already exists ...\n        if (safeCheckCoreExists(coreStatusUrl, coreName)) {\n          // core already exists\n          throw new IllegalArgumentException(\"Core '\"+coreName+\"' already exists!\\nChecked core existence using Core API command:\\n\"+coreStatusUrl);\n        } else {\n          throw sse;\n        }\n      }\n\n      CharArr arr = new CharArr();\n      new JSONWriter(arr, 2).write(json);\n      echo(arr.toString());\n      echo(\"\\n\");\n    }\n\n","bugFix":["4ca20be81c9284c840498143264e583ccbb8525a","209c0259a9b7087b2111411ec790d6557ef86307"],"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"71a3c96be61f346d83fa7120f1e4672be77a8a8c","date":1447761412,"type":3,"author":"Shai Erera","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/util/SolrCLI.CreateCoreTool#runImpl(CommandLine).mjava","pathOld":"solr/core/src/java/org/apache/solr/util/SolrCLI.CreateCoreTool#runImpl(CommandLine).mjava","sourceNew":"    protected void runImpl(CommandLine cli) throws Exception {\n\n      String solrUrl = cli.getOptionValue(\"solrUrl\", DEFAULT_SOLR_URL);\n      if (!solrUrl.endsWith(\"/\"))\n        solrUrl += \"/\";\n\n      File configsetsDir = new File(cli.getOptionValue(\"configsetsDir\"));\n      if (!configsetsDir.isDirectory())\n        throw new FileNotFoundException(configsetsDir.getAbsolutePath() + \" not found!\");\n\n      String configSet = cli.getOptionValue(\"confdir\", DEFAULT_CONFIG_SET);\n      File configSetDir = new File(configsetsDir, configSet);\n      if (!configSetDir.isDirectory()) {\n        // we allow them to pass a directory instead of a configset name\n        File possibleConfigDir = new File(configSet);\n        if (possibleConfigDir.isDirectory()) {\n          configSetDir = possibleConfigDir;\n        } else {\n          throw new FileNotFoundException(\"Specified config directory \" + configSet +\n              \" not found in \" + configsetsDir.getAbsolutePath());\n        }\n      }\n\n      String coreName = cli.getOptionValue(NAME);\n\n      String systemInfoUrl = solrUrl+\"admin/info/system\";\n      CloseableHttpClient httpClient = getHttpClient();\n      String solrHome = null;\n      try {\n        Map<String,Object> systemInfo = getJson(httpClient, systemInfoUrl, 2, true);\n        if (\"solrcloud\".equals(systemInfo.get(\"mode\"))) {\n          throw new IllegalStateException(\"Solr at \"+solrUrl+\n              \" is running in SolrCloud mode, please use create_collection command instead.\");\n        }\n\n        // convert raw JSON into user-friendly output\n        solrHome = (String)systemInfo.get(\"solr_home\");\n        if (solrHome == null)\n          solrHome = configsetsDir.getParentFile().getAbsolutePath();\n\n      } finally {\n        closeHttpClient(httpClient);\n      }\n\n      String coreStatusUrl = solrUrl+\"admin/cores?action=STATUS&core=\"+coreName;\n      if (safeCheckCoreExists(coreStatusUrl, coreName)) {\n        throw new IllegalArgumentException(\"\\nCore '\"+coreName+\n            \"' already exists!\\nChecked core existence using Core API command:\\n\"+coreStatusUrl);\n      }\n\n      File coreInstanceDir = new File(solrHome, coreName);\n      File confDir = new File(configSetDir,\"conf\");\n      if (!coreInstanceDir.isDirectory()) {\n        coreInstanceDir.mkdirs();\n        if (!coreInstanceDir.isDirectory())\n          throw new IOException(\"Failed to create new core instance directory: \"+coreInstanceDir.getAbsolutePath());\n\n        if (confDir.isDirectory()) {\n          FileUtils.copyDirectoryToDirectory(confDir, coreInstanceDir);\n        } else {\n          // hmmm ... the configset we're cloning doesn't have a conf sub-directory,\n          // we'll just assume it is OK if it has solrconfig.xml\n          if ((new File(configSetDir, \"solrconfig.xml\")).isFile()) {\n            FileUtils.copyDirectory(configSetDir, new File(coreInstanceDir, \"conf\"));\n          } else {\n            throw new IllegalArgumentException(\"\\n\"+configSetDir.getAbsolutePath()+\" doesn't contain a conf subdirectory or solrconfig.xml\\n\");\n          }\n        }\n        echo(\"\\nCopying configuration to new core instance directory:\\n\" + coreInstanceDir.getAbsolutePath());\n      }\n\n      String createCoreUrl =\n          String.format(Locale.ROOT,\n              \"%sadmin/cores?action=CREATE&name=%s&instanceDir=%s\",\n              solrUrl,\n              coreName,\n              coreName);\n\n      echo(\"\\nCreating new core '\" + coreName + \"' using command:\\n\" + createCoreUrl + \"\\n\");\n\n      try {\n        Map<String,Object> json = getJson(createCoreUrl);\n        CharArr arr = new CharArr();\n        new JSONWriter(arr, 2).write(json);\n        echo(arr.toString());\n        echo(\"\\n\");\n      } catch (Exception e) {\n        /* create-core failed, cleanup the copied configset before propagating the error. */\n        FileUtils.deleteDirectory(coreInstanceDir);\n        throw e;\n      }\n    }\n\n","sourceOld":"    protected void runImpl(CommandLine cli) throws Exception {\n\n      String solrUrl = cli.getOptionValue(\"solrUrl\", DEFAULT_SOLR_URL);\n      if (!solrUrl.endsWith(\"/\"))\n        solrUrl += \"/\";\n\n      File configsetsDir = new File(cli.getOptionValue(\"configsetsDir\"));\n      if (!configsetsDir.isDirectory())\n        throw new FileNotFoundException(configsetsDir.getAbsolutePath() + \" not found!\");\n\n      String configSet = cli.getOptionValue(\"confdir\", DEFAULT_CONFIG_SET);\n      File configSetDir = new File(configsetsDir, configSet);\n      if (!configSetDir.isDirectory()) {\n        // we allow them to pass a directory instead of a configset name\n        File possibleConfigDir = new File(configSet);\n        if (possibleConfigDir.isDirectory()) {\n          configSetDir = possibleConfigDir;\n        } else {\n          throw new FileNotFoundException(\"Specified config directory \" + configSet +\n              \" not found in \" + configsetsDir.getAbsolutePath());\n        }\n      }\n\n      String coreName = cli.getOptionValue(NAME);\n\n      String systemInfoUrl = solrUrl+\"admin/info/system\";\n      CloseableHttpClient httpClient = getHttpClient();\n      String solrHome = null;\n      try {\n        Map<String,Object> systemInfo = getJson(httpClient, systemInfoUrl, 2, true);\n        if (\"solrcloud\".equals(systemInfo.get(\"mode\"))) {\n          throw new IllegalStateException(\"Solr at \"+solrUrl+\n              \" is running in SolrCloud mode, please use create_collection command instead.\");\n        }\n\n        // convert raw JSON into user-friendly output\n        solrHome = (String)systemInfo.get(\"solr_home\");\n        if (solrHome == null)\n          solrHome = configsetsDir.getParentFile().getAbsolutePath();\n\n      } finally {\n        closeHttpClient(httpClient);\n      }\n\n      String coreStatusUrl = solrUrl+\"admin/cores?action=STATUS&core=\"+coreName;\n      if (safeCheckCoreExists(coreStatusUrl, coreName)) {\n        throw new IllegalArgumentException(\"\\nCore '\"+coreName+\n            \"' already exists!\\nChecked core existence using Core API command:\\n\"+coreStatusUrl);\n      }\n\n      File coreInstanceDir = new File(solrHome, coreName);\n      File confDir = new File(configSetDir,\"conf\");\n      if (!coreInstanceDir.isDirectory()) {\n        coreInstanceDir.mkdirs();\n        if (!coreInstanceDir.isDirectory())\n          throw new IOException(\"Failed to create new core instance directory: \"+coreInstanceDir.getAbsolutePath());\n\n        if (confDir.isDirectory()) {\n          FileUtils.copyDirectoryToDirectory(confDir, coreInstanceDir);\n        } else {\n          // hmmm ... the configset we're cloning doesn't have a conf sub-directory,\n          // we'll just assume it is OK if it has solrconfig.xml\n          if ((new File(configSetDir, \"solrconfig.xml\")).isFile()) {\n            FileUtils.copyDirectory(configSetDir, new File(coreInstanceDir, \"conf\"));\n          } else {\n            throw new IllegalArgumentException(\"\\n\"+configSetDir.getAbsolutePath()+\" doesn't contain a conf subdirectory or solrconfig.xml\\n\");\n          }\n        }\n        echo(\"\\nSetup new core instance directory:\\n\" + coreInstanceDir.getAbsolutePath());\n      }\n\n      String createCoreUrl =\n          String.format(Locale.ROOT,\n              \"%sadmin/cores?action=CREATE&name=%s&instanceDir=%s\",\n              solrUrl,\n              coreName,\n              coreName);\n\n      echo(\"\\nCreating new core '\" + coreName + \"' using command:\\n\" + createCoreUrl + \"\\n\");\n\n      Map<String,Object> json = getJson(createCoreUrl);\n\n      CharArr arr = new CharArr();\n      new JSONWriter(arr, 2).write(json);\n      echo(arr.toString());\n      echo(\"\\n\");\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"86d2df3ca94d97c62f70b0d321f5f597de2d3eb3","date":1503399053,"type":3,"author":"Jan Høydahl","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/util/SolrCLI.CreateCoreTool#runImpl(CommandLine).mjava","pathOld":"solr/core/src/java/org/apache/solr/util/SolrCLI.CreateCoreTool#runImpl(CommandLine).mjava","sourceNew":"    protected void runImpl(CommandLine cli) throws Exception {\n      String solrUrl = cli.getOptionValue(\"solrUrl\", DEFAULT_SOLR_URL);\n      if (!solrUrl.endsWith(\"/\"))\n        solrUrl += \"/\";\n\n      File configsetsDir = new File(cli.getOptionValue(\"configsetsDir\"));\n      if (!configsetsDir.isDirectory())\n        throw new FileNotFoundException(configsetsDir.getAbsolutePath() + \" not found!\");\n\n      String configSet = cli.getOptionValue(\"confdir\", DEFAULT_CONFIG_SET);\n      File configSetDir = new File(configsetsDir, configSet);\n      if (!configSetDir.isDirectory()) {\n        // we allow them to pass a directory instead of a configset name\n        File possibleConfigDir = new File(configSet);\n        if (possibleConfigDir.isDirectory()) {\n          configSetDir = possibleConfigDir;\n        } else {\n          throw new FileNotFoundException(\"Specified config directory \" + configSet +\n              \" not found in \" + configsetsDir.getAbsolutePath());\n        }\n      }\n\n      String coreName = cli.getOptionValue(NAME);\n\n      String systemInfoUrl = solrUrl+\"admin/info/system\";\n      CloseableHttpClient httpClient = getHttpClient();\n      String solrHome = null;\n      try {\n        Map<String,Object> systemInfo = getJson(httpClient, systemInfoUrl, 2, true);\n        if (\"solrcloud\".equals(systemInfo.get(\"mode\"))) {\n          throw new IllegalStateException(\"Solr at \"+solrUrl+\n              \" is running in SolrCloud mode, please use create_collection command instead.\");\n        }\n\n        // convert raw JSON into user-friendly output\n        solrHome = (String)systemInfo.get(\"solr_home\");\n        if (solrHome == null)\n          solrHome = configsetsDir.getParentFile().getAbsolutePath();\n\n      } finally {\n        closeHttpClient(httpClient);\n      }\n\n      String coreStatusUrl = solrUrl+\"admin/cores?action=STATUS&core=\"+coreName;\n      if (safeCheckCoreExists(coreStatusUrl, coreName)) {\n        throw new IllegalArgumentException(\"\\nCore '\"+coreName+\n            \"' already exists!\\nChecked core existence using Core API command:\\n\"+coreStatusUrl);\n      }\n\n      File coreInstanceDir = new File(solrHome, coreName);\n      File confDir = new File(configSetDir,\"conf\");\n      if (!coreInstanceDir.isDirectory()) {\n        coreInstanceDir.mkdirs();\n        if (!coreInstanceDir.isDirectory())\n          throw new IOException(\"Failed to create new core instance directory: \"+coreInstanceDir.getAbsolutePath());\n\n        if (confDir.isDirectory()) {\n          FileUtils.copyDirectoryToDirectory(confDir, coreInstanceDir);\n        } else {\n          // hmmm ... the configset we're cloning doesn't have a conf sub-directory,\n          // we'll just assume it is OK if it has solrconfig.xml\n          if ((new File(configSetDir, \"solrconfig.xml\")).isFile()) {\n            FileUtils.copyDirectory(configSetDir, new File(coreInstanceDir, \"conf\"));\n          } else {\n            throw new IllegalArgumentException(\"\\n\"+configSetDir.getAbsolutePath()+\" doesn't contain a conf subdirectory or solrconfig.xml\\n\");\n          }\n        }\n        echoIfVerbose(\"\\nCopying configuration to new core instance directory:\\n\" + coreInstanceDir.getAbsolutePath(), cli);\n      }\n\n      String createCoreUrl =\n          String.format(Locale.ROOT,\n              \"%sadmin/cores?action=CREATE&name=%s&instanceDir=%s\",\n              solrUrl,\n              coreName,\n              coreName);\n\n      echoIfVerbose(\"\\nCreating new core '\" + coreName + \"' using command:\\n\" + createCoreUrl + \"\\n\", cli);\n\n      try {\n        Map<String,Object> json = getJson(createCoreUrl);\n        if (cli.hasOption(\"verbose\")) {\n          CharArr arr = new CharArr();\n          new JSONWriter(arr, 2).write(json);\n          echo(arr.toString());\n          echo(\"\\n\");\n        } else {\n          echo(String.format(Locale.ROOT, \"\\nCreated new core '%s'\", coreName));\n        }\n      } catch (Exception e) {\n        /* create-core failed, cleanup the copied configset before propagating the error. */\n        FileUtils.deleteDirectory(coreInstanceDir);\n        throw e;\n      }\n    }\n\n","sourceOld":"    protected void runImpl(CommandLine cli) throws Exception {\n\n      String solrUrl = cli.getOptionValue(\"solrUrl\", DEFAULT_SOLR_URL);\n      if (!solrUrl.endsWith(\"/\"))\n        solrUrl += \"/\";\n\n      File configsetsDir = new File(cli.getOptionValue(\"configsetsDir\"));\n      if (!configsetsDir.isDirectory())\n        throw new FileNotFoundException(configsetsDir.getAbsolutePath() + \" not found!\");\n\n      String configSet = cli.getOptionValue(\"confdir\", DEFAULT_CONFIG_SET);\n      File configSetDir = new File(configsetsDir, configSet);\n      if (!configSetDir.isDirectory()) {\n        // we allow them to pass a directory instead of a configset name\n        File possibleConfigDir = new File(configSet);\n        if (possibleConfigDir.isDirectory()) {\n          configSetDir = possibleConfigDir;\n        } else {\n          throw new FileNotFoundException(\"Specified config directory \" + configSet +\n              \" not found in \" + configsetsDir.getAbsolutePath());\n        }\n      }\n\n      String coreName = cli.getOptionValue(NAME);\n\n      String systemInfoUrl = solrUrl+\"admin/info/system\";\n      CloseableHttpClient httpClient = getHttpClient();\n      String solrHome = null;\n      try {\n        Map<String,Object> systemInfo = getJson(httpClient, systemInfoUrl, 2, true);\n        if (\"solrcloud\".equals(systemInfo.get(\"mode\"))) {\n          throw new IllegalStateException(\"Solr at \"+solrUrl+\n              \" is running in SolrCloud mode, please use create_collection command instead.\");\n        }\n\n        // convert raw JSON into user-friendly output\n        solrHome = (String)systemInfo.get(\"solr_home\");\n        if (solrHome == null)\n          solrHome = configsetsDir.getParentFile().getAbsolutePath();\n\n      } finally {\n        closeHttpClient(httpClient);\n      }\n\n      String coreStatusUrl = solrUrl+\"admin/cores?action=STATUS&core=\"+coreName;\n      if (safeCheckCoreExists(coreStatusUrl, coreName)) {\n        throw new IllegalArgumentException(\"\\nCore '\"+coreName+\n            \"' already exists!\\nChecked core existence using Core API command:\\n\"+coreStatusUrl);\n      }\n\n      File coreInstanceDir = new File(solrHome, coreName);\n      File confDir = new File(configSetDir,\"conf\");\n      if (!coreInstanceDir.isDirectory()) {\n        coreInstanceDir.mkdirs();\n        if (!coreInstanceDir.isDirectory())\n          throw new IOException(\"Failed to create new core instance directory: \"+coreInstanceDir.getAbsolutePath());\n\n        if (confDir.isDirectory()) {\n          FileUtils.copyDirectoryToDirectory(confDir, coreInstanceDir);\n        } else {\n          // hmmm ... the configset we're cloning doesn't have a conf sub-directory,\n          // we'll just assume it is OK if it has solrconfig.xml\n          if ((new File(configSetDir, \"solrconfig.xml\")).isFile()) {\n            FileUtils.copyDirectory(configSetDir, new File(coreInstanceDir, \"conf\"));\n          } else {\n            throw new IllegalArgumentException(\"\\n\"+configSetDir.getAbsolutePath()+\" doesn't contain a conf subdirectory or solrconfig.xml\\n\");\n          }\n        }\n        echo(\"\\nCopying configuration to new core instance directory:\\n\" + coreInstanceDir.getAbsolutePath());\n      }\n\n      String createCoreUrl =\n          String.format(Locale.ROOT,\n              \"%sadmin/cores?action=CREATE&name=%s&instanceDir=%s\",\n              solrUrl,\n              coreName,\n              coreName);\n\n      echo(\"\\nCreating new core '\" + coreName + \"' using command:\\n\" + createCoreUrl + \"\\n\");\n\n      try {\n        Map<String,Object> json = getJson(createCoreUrl);\n        CharArr arr = new CharArr();\n        new JSONWriter(arr, 2).write(json);\n        echo(arr.toString());\n        echo(\"\\n\");\n      } catch (Exception e) {\n        /* create-core failed, cleanup the copied configset before propagating the error. */\n        FileUtils.deleteDirectory(coreInstanceDir);\n        throw e;\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"3a7809d1d753b67f48b1a706e17034bf8b624ea3","date":1504366927,"type":3,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/util/SolrCLI.CreateCoreTool#runImpl(CommandLine).mjava","pathOld":"solr/core/src/java/org/apache/solr/util/SolrCLI.CreateCoreTool#runImpl(CommandLine).mjava","sourceNew":"    protected void runImpl(CommandLine cli) throws Exception {\n      String solrUrl = cli.getOptionValue(\"solrUrl\", DEFAULT_SOLR_URL);\n      if (!solrUrl.endsWith(\"/\"))\n        solrUrl += \"/\";\n\n      File configsetsDir = new File(cli.getOptionValue(\"configsetsDir\"));\n      if (!configsetsDir.isDirectory())\n        throw new FileNotFoundException(configsetsDir.getAbsolutePath() + \" not found!\");\n\n      String configSet = cli.getOptionValue(\"confdir\", DEFAULT_CONFIG_SET);\n      File configSetDir = new File(configsetsDir, configSet);\n      if (!configSetDir.isDirectory()) {\n        // we allow them to pass a directory instead of a configset name\n        File possibleConfigDir = new File(configSet);\n        if (possibleConfigDir.isDirectory()) {\n          configSetDir = possibleConfigDir;\n        } else {\n          throw new FileNotFoundException(\"Specified config directory \" + configSet +\n              \" not found in \" + configsetsDir.getAbsolutePath());\n        }\n      }\n\n      String coreName = cli.getOptionValue(NAME);\n\n      String systemInfoUrl = solrUrl+\"admin/info/system\";\n      CloseableHttpClient httpClient = getHttpClient();\n      String solrHome = null;\n      try {\n        Map<String,Object> systemInfo = getJson(httpClient, systemInfoUrl, 2, true);\n        if (\"solrcloud\".equals(systemInfo.get(\"mode\"))) {\n          throw new IllegalStateException(\"Solr at \"+solrUrl+\n              \" is running in SolrCloud mode, please use create_collection command instead.\");\n        }\n\n        // convert raw JSON into user-friendly output\n        solrHome = (String)systemInfo.get(\"solr_home\");\n        if (solrHome == null)\n          solrHome = configsetsDir.getParentFile().getAbsolutePath();\n\n      } finally {\n        closeHttpClient(httpClient);\n      }\n\n      String coreStatusUrl = solrUrl+\"admin/cores?action=STATUS&core=\"+coreName;\n      if (safeCheckCoreExists(coreStatusUrl, coreName)) {\n        throw new IllegalArgumentException(\"\\nCore '\"+coreName+\n            \"' already exists!\\nChecked core existence using Core API command:\\n\"+coreStatusUrl);\n      }\n\n      File coreInstanceDir = new File(solrHome, coreName);\n      File confDir = new File(configSetDir,\"conf\");\n      if (!coreInstanceDir.isDirectory()) {\n        coreInstanceDir.mkdirs();\n        if (!coreInstanceDir.isDirectory())\n          throw new IOException(\"Failed to create new core instance directory: \"+coreInstanceDir.getAbsolutePath());\n\n        if (confDir.isDirectory()) {\n          FileUtils.copyDirectoryToDirectory(confDir, coreInstanceDir);\n        } else {\n          // hmmm ... the configset we're cloning doesn't have a conf sub-directory,\n          // we'll just assume it is OK if it has solrconfig.xml\n          if ((new File(configSetDir, \"solrconfig.xml\")).isFile()) {\n            FileUtils.copyDirectory(configSetDir, new File(coreInstanceDir, \"conf\"));\n          } else {\n            throw new IllegalArgumentException(\"\\n\"+configSetDir.getAbsolutePath()+\" doesn't contain a conf subdirectory or solrconfig.xml\\n\");\n          }\n        }\n        echoIfVerbose(\"\\nCopying configuration to new core instance directory:\\n\" + coreInstanceDir.getAbsolutePath(), cli);\n      }\n\n      String createCoreUrl =\n          String.format(Locale.ROOT,\n              \"%sadmin/cores?action=CREATE&name=%s&instanceDir=%s\",\n              solrUrl,\n              coreName,\n              coreName);\n\n      echoIfVerbose(\"\\nCreating new core '\" + coreName + \"' using command:\\n\" + createCoreUrl + \"\\n\", cli);\n\n      try {\n        Map<String,Object> json = getJson(createCoreUrl);\n        if (cli.hasOption(\"verbose\")) {\n          CharArr arr = new CharArr();\n          new JSONWriter(arr, 2).write(json);\n          echo(arr.toString());\n          echo(\"\\n\");\n        } else {\n          echo(String.format(Locale.ROOT, \"\\nCreated new core '%s'\", coreName));\n        }\n      } catch (Exception e) {\n        /* create-core failed, cleanup the copied configset before propagating the error. */\n        FileUtils.deleteDirectory(coreInstanceDir);\n        throw e;\n      }\n    }\n\n","sourceOld":"    protected void runImpl(CommandLine cli) throws Exception {\n\n      String solrUrl = cli.getOptionValue(\"solrUrl\", DEFAULT_SOLR_URL);\n      if (!solrUrl.endsWith(\"/\"))\n        solrUrl += \"/\";\n\n      File configsetsDir = new File(cli.getOptionValue(\"configsetsDir\"));\n      if (!configsetsDir.isDirectory())\n        throw new FileNotFoundException(configsetsDir.getAbsolutePath() + \" not found!\");\n\n      String configSet = cli.getOptionValue(\"confdir\", DEFAULT_CONFIG_SET);\n      File configSetDir = new File(configsetsDir, configSet);\n      if (!configSetDir.isDirectory()) {\n        // we allow them to pass a directory instead of a configset name\n        File possibleConfigDir = new File(configSet);\n        if (possibleConfigDir.isDirectory()) {\n          configSetDir = possibleConfigDir;\n        } else {\n          throw new FileNotFoundException(\"Specified config directory \" + configSet +\n              \" not found in \" + configsetsDir.getAbsolutePath());\n        }\n      }\n\n      String coreName = cli.getOptionValue(NAME);\n\n      String systemInfoUrl = solrUrl+\"admin/info/system\";\n      CloseableHttpClient httpClient = getHttpClient();\n      String solrHome = null;\n      try {\n        Map<String,Object> systemInfo = getJson(httpClient, systemInfoUrl, 2, true);\n        if (\"solrcloud\".equals(systemInfo.get(\"mode\"))) {\n          throw new IllegalStateException(\"Solr at \"+solrUrl+\n              \" is running in SolrCloud mode, please use create_collection command instead.\");\n        }\n\n        // convert raw JSON into user-friendly output\n        solrHome = (String)systemInfo.get(\"solr_home\");\n        if (solrHome == null)\n          solrHome = configsetsDir.getParentFile().getAbsolutePath();\n\n      } finally {\n        closeHttpClient(httpClient);\n      }\n\n      String coreStatusUrl = solrUrl+\"admin/cores?action=STATUS&core=\"+coreName;\n      if (safeCheckCoreExists(coreStatusUrl, coreName)) {\n        throw new IllegalArgumentException(\"\\nCore '\"+coreName+\n            \"' already exists!\\nChecked core existence using Core API command:\\n\"+coreStatusUrl);\n      }\n\n      File coreInstanceDir = new File(solrHome, coreName);\n      File confDir = new File(configSetDir,\"conf\");\n      if (!coreInstanceDir.isDirectory()) {\n        coreInstanceDir.mkdirs();\n        if (!coreInstanceDir.isDirectory())\n          throw new IOException(\"Failed to create new core instance directory: \"+coreInstanceDir.getAbsolutePath());\n\n        if (confDir.isDirectory()) {\n          FileUtils.copyDirectoryToDirectory(confDir, coreInstanceDir);\n        } else {\n          // hmmm ... the configset we're cloning doesn't have a conf sub-directory,\n          // we'll just assume it is OK if it has solrconfig.xml\n          if ((new File(configSetDir, \"solrconfig.xml\")).isFile()) {\n            FileUtils.copyDirectory(configSetDir, new File(coreInstanceDir, \"conf\"));\n          } else {\n            throw new IllegalArgumentException(\"\\n\"+configSetDir.getAbsolutePath()+\" doesn't contain a conf subdirectory or solrconfig.xml\\n\");\n          }\n        }\n        echo(\"\\nCopying configuration to new core instance directory:\\n\" + coreInstanceDir.getAbsolutePath());\n      }\n\n      String createCoreUrl =\n          String.format(Locale.ROOT,\n              \"%sadmin/cores?action=CREATE&name=%s&instanceDir=%s\",\n              solrUrl,\n              coreName,\n              coreName);\n\n      echo(\"\\nCreating new core '\" + coreName + \"' using command:\\n\" + createCoreUrl + \"\\n\");\n\n      try {\n        Map<String,Object> json = getJson(createCoreUrl);\n        CharArr arr = new CharArr();\n        new JSONWriter(arr, 2).write(json);\n        echo(arr.toString());\n        echo(\"\\n\");\n      } catch (Exception e) {\n        /* create-core failed, cleanup the copied configset before propagating the error. */\n        FileUtils.deleteDirectory(coreInstanceDir);\n        throw e;\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b79a5db147a1c6f95d1625ddbc3561ef56955225","date":1528848080,"type":3,"author":"Steve Rowe","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/util/SolrCLI.CreateCoreTool#runImpl(CommandLine).mjava","pathOld":"solr/core/src/java/org/apache/solr/util/SolrCLI.CreateCoreTool#runImpl(CommandLine).mjava","sourceNew":"    protected void runImpl(CommandLine cli) throws Exception {\n      String solrUrl = cli.getOptionValue(\"solrUrl\", DEFAULT_SOLR_URL);\n      if (!solrUrl.endsWith(\"/\"))\n        solrUrl += \"/\";\n\n      File configsetsDir = new File(cli.getOptionValue(\"configsetsDir\"));\n      if (!configsetsDir.isDirectory())\n        throw new FileNotFoundException(configsetsDir.getAbsolutePath() + \" not found!\");\n\n      String configSet = cli.getOptionValue(\"confdir\", DEFAULT_CONFIG_SET);\n      File configSetDir = new File(configsetsDir, configSet);\n      if (!configSetDir.isDirectory()) {\n        // we allow them to pass a directory instead of a configset name\n        File possibleConfigDir = new File(configSet);\n        if (possibleConfigDir.isDirectory()) {\n          configSetDir = possibleConfigDir;\n        } else {\n          throw new FileNotFoundException(\"Specified config directory \" + configSet +\n              \" not found in \" + configsetsDir.getAbsolutePath());\n        }\n      }\n\n      String coreName = cli.getOptionValue(NAME);\n\n      String systemInfoUrl = solrUrl+\"admin/info/system\";\n      CloseableHttpClient httpClient = getHttpClient();\n      String solrHome = null;\n      try {\n        Map<String,Object> systemInfo = getJson(httpClient, systemInfoUrl, 2, true);\n        if (\"solrcloud\".equals(systemInfo.get(\"mode\"))) {\n          throw new IllegalStateException(\"Solr at \"+solrUrl+\n              \" is running in SolrCloud mode, please use create_collection command instead.\");\n        }\n\n        // convert raw JSON into user-friendly output\n        solrHome = (String)systemInfo.get(\"solr_home\");\n        if (solrHome == null)\n          solrHome = configsetsDir.getParentFile().getAbsolutePath();\n\n      } finally {\n        closeHttpClient(httpClient);\n      }\n\n      String coreStatusUrl = solrUrl+\"admin/cores?action=STATUS&core=\"+coreName;\n      if (safeCheckCoreExists(coreStatusUrl, coreName)) {\n        throw new IllegalArgumentException(\"\\nCore '\"+coreName+\n            \"' already exists!\\nChecked core existence using Core API command:\\n\"+coreStatusUrl);\n      }\n\n      File coreInstanceDir = new File(solrHome, coreName);\n      File confDir = new File(configSetDir,\"conf\");\n      if (!coreInstanceDir.isDirectory()) {\n        coreInstanceDir.mkdirs();\n        if (!coreInstanceDir.isDirectory())\n          throw new IOException(\"Failed to create new core instance directory: \"+coreInstanceDir.getAbsolutePath());\n\n        if (confDir.isDirectory()) {\n          FileUtils.copyDirectoryToDirectory(confDir, coreInstanceDir);\n        } else {\n          // hmmm ... the configset we're cloning doesn't have a conf sub-directory,\n          // we'll just assume it is OK if it has solrconfig.xml\n          if ((new File(configSetDir, \"solrconfig.xml\")).isFile()) {\n            FileUtils.copyDirectory(configSetDir, new File(coreInstanceDir, \"conf\"));\n          } else {\n            throw new IllegalArgumentException(\"\\n\"+configSetDir.getAbsolutePath()+\" doesn't contain a conf subdirectory or solrconfig.xml\\n\");\n          }\n        }\n        echoIfVerbose(\"\\nCopying configuration to new core instance directory:\\n\" + coreInstanceDir.getAbsolutePath(), cli);\n      }\n\n      String createCoreUrl =\n          String.format(Locale.ROOT,\n              \"%sadmin/cores?action=CREATE&name=%s&instanceDir=%s\",\n              solrUrl,\n              coreName,\n              coreName);\n\n      echoIfVerbose(\"\\nCreating new core '\" + coreName + \"' using command:\\n\" + createCoreUrl + \"\\n\", cli);\n\n      try {\n        Map<String,Object> json = getJson(createCoreUrl);\n        if (cli.hasOption(\"verbose\")) {\n          CharArr arr = new CharArr();\n          new JSONWriter(arr, 2).write(json);\n          echo(arr.toString());\n          echo(\"\\n\");\n        } else {\n          echo(String.format(Locale.ROOT, \"\\nCreated new core '%s'\", coreName));\n        }\n      } catch (Exception e) {\n        /* create-core failed, cleanup the copied configset before propagating the error. */\n        FileUtils.deleteDirectory(coreInstanceDir);\n        throw e;\n      }\n    }\n\n","sourceOld":"    protected void runImpl(CommandLine cli) throws Exception {\n      String solrUrl = cli.getOptionValue(\"solrUrl\", DEFAULT_SOLR_URL);\n      if (!solrUrl.endsWith(\"/\"))\n        solrUrl += \"/\";\n\n      File configsetsDir = new File(cli.getOptionValue(\"configsetsDir\"));\n      if (!configsetsDir.isDirectory())\n        throw new FileNotFoundException(configsetsDir.getAbsolutePath() + \" not found!\");\n\n      String configSet = cli.getOptionValue(\"confdir\", DEFAULT_CONFIG_SET);\n      File configSetDir = new File(configsetsDir, configSet);\n      if (!configSetDir.isDirectory()) {\n        // we allow them to pass a directory instead of a configset name\n        File possibleConfigDir = new File(configSet);\n        if (possibleConfigDir.isDirectory()) {\n          configSetDir = possibleConfigDir;\n        } else {\n          throw new FileNotFoundException(\"Specified config directory \" + configSet +\n              \" not found in \" + configsetsDir.getAbsolutePath());\n        }\n      }\n\n      String coreName = cli.getOptionValue(NAME);\n\n      String systemInfoUrl = solrUrl+\"admin/info/system\";\n      CloseableHttpClient httpClient = getHttpClient();\n      String solrHome = null;\n      try {\n        Map<String,Object> systemInfo = getJson(httpClient, systemInfoUrl, 2, true);\n        if (\"solrcloud\".equals(systemInfo.get(\"mode\"))) {\n          throw new IllegalStateException(\"Solr at \"+solrUrl+\n              \" is running in SolrCloud mode, please use create_collection command instead.\");\n        }\n\n        // convert raw JSON into user-friendly output\n        solrHome = (String)systemInfo.get(\"solr_home\");\n        if (solrHome == null)\n          solrHome = configsetsDir.getParentFile().getAbsolutePath();\n\n      } finally {\n        closeHttpClient(httpClient);\n      }\n\n      String coreStatusUrl = solrUrl+\"admin/cores?action=STATUS&core=\"+coreName;\n      if (safeCheckCoreExists(coreStatusUrl, coreName)) {\n        throw new IllegalArgumentException(\"\\nCore '\"+coreName+\n            \"' already exists!\\nChecked core existence using Core API command:\\n\"+coreStatusUrl);\n      }\n\n      File coreInstanceDir = new File(solrHome, coreName);\n      File confDir = new File(configSetDir,\"conf\");\n      if (!coreInstanceDir.isDirectory()) {\n        coreInstanceDir.mkdirs();\n        if (!coreInstanceDir.isDirectory())\n          throw new IOException(\"Failed to create new core instance directory: \"+coreInstanceDir.getAbsolutePath());\n\n        if (confDir.isDirectory()) {\n          FileUtils.copyDirectoryToDirectory(confDir, coreInstanceDir);\n        } else {\n          // hmmm ... the configset we're cloning doesn't have a conf sub-directory,\n          // we'll just assume it is OK if it has solrconfig.xml\n          if ((new File(configSetDir, \"solrconfig.xml\")).isFile()) {\n            FileUtils.copyDirectory(configSetDir, new File(coreInstanceDir, \"conf\"));\n          } else {\n            throw new IllegalArgumentException(\"\\n\"+configSetDir.getAbsolutePath()+\" doesn't contain a conf subdirectory or solrconfig.xml\\n\");\n          }\n        }\n        echoIfVerbose(\"\\nCopying configuration to new core instance directory:\\n\" + coreInstanceDir.getAbsolutePath(), cli);\n      }\n\n      String createCoreUrl =\n          String.format(Locale.ROOT,\n              \"%sadmin/cores?action=CREATE&name=%s&instanceDir=%s\",\n              solrUrl,\n              coreName,\n              coreName);\n\n      echoIfVerbose(\"\\nCreating new core '\" + coreName + \"' using command:\\n\" + createCoreUrl + \"\\n\", cli);\n\n      try {\n        Map<String,Object> json = getJson(createCoreUrl);\n        if (cli.hasOption(\"verbose\")) {\n          CharArr arr = new CharArr();\n          new JSONWriter(arr, 2).write(json);\n          echo(arr.toString());\n          echo(\"\\n\");\n        } else {\n          echo(String.format(Locale.ROOT, \"\\nCreated new core '%s'\", coreName));\n        }\n      } catch (Exception e) {\n        /* create-core failed, cleanup the copied configset before propagating the error. */\n        FileUtils.deleteDirectory(coreInstanceDir);\n        throw e;\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"7eeaaea0106c7d6a2de50acfc8d357121ef8bd26","date":1531589977,"type":3,"author":"Michael Braun","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/util/SolrCLI.CreateCoreTool#runImpl(CommandLine).mjava","pathOld":"solr/core/src/java/org/apache/solr/util/SolrCLI.CreateCoreTool#runImpl(CommandLine).mjava","sourceNew":"    protected void runImpl(CommandLine cli) throws Exception {\n      String solrUrl = cli.getOptionValue(\"solrUrl\", DEFAULT_SOLR_URL);\n      if (!solrUrl.endsWith(\"/\"))\n        solrUrl += \"/\";\n\n      File configsetsDir = new File(cli.getOptionValue(\"configsetsDir\"));\n      if (!configsetsDir.isDirectory())\n        throw new FileNotFoundException(configsetsDir.getAbsolutePath() + \" not found!\");\n\n      String configSet = cli.getOptionValue(\"confdir\", DEFAULT_CONFIG_SET);\n      File configSetDir = new File(configsetsDir, configSet);\n      if (!configSetDir.isDirectory()) {\n        // we allow them to pass a directory instead of a configset name\n        File possibleConfigDir = new File(configSet);\n        if (possibleConfigDir.isDirectory()) {\n          configSetDir = possibleConfigDir;\n        } else {\n          throw new FileNotFoundException(\"Specified config directory \" + configSet +\n              \" not found in \" + configsetsDir.getAbsolutePath());\n        }\n      }\n\n      String coreName = cli.getOptionValue(NAME);\n\n      String systemInfoUrl = solrUrl+\"admin/info/system\";\n      CloseableHttpClient httpClient = getHttpClient();\n      String solrHome = null;\n      try {\n        Map<String,Object> systemInfo = getJson(httpClient, systemInfoUrl, 2, true);\n        if (\"solrcloud\".equals(systemInfo.get(\"mode\"))) {\n          throw new IllegalStateException(\"Solr at \"+solrUrl+\n              \" is running in SolrCloud mode, please use create_collection command instead.\");\n        }\n\n        // convert raw JSON into user-friendly output\n        solrHome = (String)systemInfo.get(\"solr_home\");\n        if (solrHome == null)\n          solrHome = configsetsDir.getParentFile().getAbsolutePath();\n\n      } finally {\n        closeHttpClient(httpClient);\n      }\n\n      String coreStatusUrl = solrUrl+\"admin/cores?action=STATUS&core=\"+coreName;\n      if (safeCheckCoreExists(coreStatusUrl, coreName)) {\n        throw new IllegalArgumentException(\"\\nCore '\"+coreName+\n            \"' already exists!\\nChecked core existence using Core API command:\\n\"+coreStatusUrl);\n      }\n\n      File coreInstanceDir = new File(solrHome, coreName);\n      File confDir = new File(configSetDir,\"conf\");\n      if (!coreInstanceDir.isDirectory()) {\n        coreInstanceDir.mkdirs();\n        if (!coreInstanceDir.isDirectory())\n          throw new IOException(\"Failed to create new core instance directory: \"+coreInstanceDir.getAbsolutePath());\n\n        if (confDir.isDirectory()) {\n          FileUtils.copyDirectoryToDirectory(confDir, coreInstanceDir);\n        } else {\n          // hmmm ... the configset we're cloning doesn't have a conf sub-directory,\n          // we'll just assume it is OK if it has solrconfig.xml\n          if ((new File(configSetDir, \"solrconfig.xml\")).isFile()) {\n            FileUtils.copyDirectory(configSetDir, new File(coreInstanceDir, \"conf\"));\n          } else {\n            throw new IllegalArgumentException(\"\\n\"+configSetDir.getAbsolutePath()+\" doesn't contain a conf subdirectory or solrconfig.xml\\n\");\n          }\n        }\n        echoIfVerbose(\"\\nCopying configuration to new core instance directory:\\n\" + coreInstanceDir.getAbsolutePath(), cli);\n      }\n\n      String createCoreUrl =\n          String.format(Locale.ROOT,\n              \"%sadmin/cores?action=CREATE&name=%s&instanceDir=%s\",\n              solrUrl,\n              coreName,\n              coreName);\n\n      echoIfVerbose(\"\\nCreating new core '\" + coreName + \"' using command:\\n\" + createCoreUrl + \"\\n\", cli);\n\n      try {\n        Map<String,Object> json = getJson(createCoreUrl);\n        if (cli.hasOption(\"verbose\")) {\n          CharArr arr = new CharArr();\n          new JSONWriter(arr, 2).write(json);\n          echo(arr.toString());\n          echo(\"\\n\");\n        } else {\n          echo(String.format(Locale.ROOT, \"\\nCreated new core '%s'\", coreName));\n        }\n      } catch (Exception e) {\n        /* create-core failed, cleanup the copied configset before propagating the error. */\n        FileUtils.deleteDirectory(coreInstanceDir);\n        throw e;\n      }\n    }\n\n","sourceOld":"    protected void runImpl(CommandLine cli) throws Exception {\n      String solrUrl = cli.getOptionValue(\"solrUrl\", DEFAULT_SOLR_URL);\n      if (!solrUrl.endsWith(\"/\"))\n        solrUrl += \"/\";\n\n      File configsetsDir = new File(cli.getOptionValue(\"configsetsDir\"));\n      if (!configsetsDir.isDirectory())\n        throw new FileNotFoundException(configsetsDir.getAbsolutePath() + \" not found!\");\n\n      String configSet = cli.getOptionValue(\"confdir\", DEFAULT_CONFIG_SET);\n      File configSetDir = new File(configsetsDir, configSet);\n      if (!configSetDir.isDirectory()) {\n        // we allow them to pass a directory instead of a configset name\n        File possibleConfigDir = new File(configSet);\n        if (possibleConfigDir.isDirectory()) {\n          configSetDir = possibleConfigDir;\n        } else {\n          throw new FileNotFoundException(\"Specified config directory \" + configSet +\n              \" not found in \" + configsetsDir.getAbsolutePath());\n        }\n      }\n\n      String coreName = cli.getOptionValue(NAME);\n\n      String systemInfoUrl = solrUrl+\"admin/info/system\";\n      CloseableHttpClient httpClient = getHttpClient();\n      String solrHome = null;\n      try {\n        Map<String,Object> systemInfo = getJson(httpClient, systemInfoUrl, 2, true);\n        if (\"solrcloud\".equals(systemInfo.get(\"mode\"))) {\n          throw new IllegalStateException(\"Solr at \"+solrUrl+\n              \" is running in SolrCloud mode, please use create_collection command instead.\");\n        }\n\n        // convert raw JSON into user-friendly output\n        solrHome = (String)systemInfo.get(\"solr_home\");\n        if (solrHome == null)\n          solrHome = configsetsDir.getParentFile().getAbsolutePath();\n\n      } finally {\n        closeHttpClient(httpClient);\n      }\n\n      String coreStatusUrl = solrUrl+\"admin/cores?action=STATUS&core=\"+coreName;\n      if (safeCheckCoreExists(coreStatusUrl, coreName)) {\n        throw new IllegalArgumentException(\"\\nCore '\"+coreName+\n            \"' already exists!\\nChecked core existence using Core API command:\\n\"+coreStatusUrl);\n      }\n\n      File coreInstanceDir = new File(solrHome, coreName);\n      File confDir = new File(configSetDir,\"conf\");\n      if (!coreInstanceDir.isDirectory()) {\n        coreInstanceDir.mkdirs();\n        if (!coreInstanceDir.isDirectory())\n          throw new IOException(\"Failed to create new core instance directory: \"+coreInstanceDir.getAbsolutePath());\n\n        if (confDir.isDirectory()) {\n          FileUtils.copyDirectoryToDirectory(confDir, coreInstanceDir);\n        } else {\n          // hmmm ... the configset we're cloning doesn't have a conf sub-directory,\n          // we'll just assume it is OK if it has solrconfig.xml\n          if ((new File(configSetDir, \"solrconfig.xml\")).isFile()) {\n            FileUtils.copyDirectory(configSetDir, new File(coreInstanceDir, \"conf\"));\n          } else {\n            throw new IllegalArgumentException(\"\\n\"+configSetDir.getAbsolutePath()+\" doesn't contain a conf subdirectory or solrconfig.xml\\n\");\n          }\n        }\n        echoIfVerbose(\"\\nCopying configuration to new core instance directory:\\n\" + coreInstanceDir.getAbsolutePath(), cli);\n      }\n\n      String createCoreUrl =\n          String.format(Locale.ROOT,\n              \"%sadmin/cores?action=CREATE&name=%s&instanceDir=%s\",\n              solrUrl,\n              coreName,\n              coreName);\n\n      echoIfVerbose(\"\\nCreating new core '\" + coreName + \"' using command:\\n\" + createCoreUrl + \"\\n\", cli);\n\n      try {\n        Map<String,Object> json = getJson(createCoreUrl);\n        if (cli.hasOption(\"verbose\")) {\n          CharArr arr = new CharArr();\n          new JSONWriter(arr, 2).write(json);\n          echo(arr.toString());\n          echo(\"\\n\");\n        } else {\n          echo(String.format(Locale.ROOT, \"\\nCreated new core '%s'\", coreName));\n        }\n      } catch (Exception e) {\n        /* create-core failed, cleanup the copied configset before propagating the error. */\n        FileUtils.deleteDirectory(coreInstanceDir);\n        throw e;\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","date":1531905561,"type":3,"author":"Alessandro Benedetti","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/util/SolrCLI.CreateCoreTool#runImpl(CommandLine).mjava","pathOld":"solr/core/src/java/org/apache/solr/util/SolrCLI.CreateCoreTool#runImpl(CommandLine).mjava","sourceNew":"    protected void runImpl(CommandLine cli) throws Exception {\n      String solrUrl = cli.getOptionValue(\"solrUrl\", DEFAULT_SOLR_URL);\n      if (!solrUrl.endsWith(\"/\"))\n        solrUrl += \"/\";\n\n      File configsetsDir = new File(cli.getOptionValue(\"configsetsDir\"));\n      if (!configsetsDir.isDirectory())\n        throw new FileNotFoundException(configsetsDir.getAbsolutePath() + \" not found!\");\n\n      String configSet = cli.getOptionValue(\"confdir\", DEFAULT_CONFIG_SET);\n      File configSetDir = new File(configsetsDir, configSet);\n      if (!configSetDir.isDirectory()) {\n        // we allow them to pass a directory instead of a configset name\n        File possibleConfigDir = new File(configSet);\n        if (possibleConfigDir.isDirectory()) {\n          configSetDir = possibleConfigDir;\n        } else {\n          throw new FileNotFoundException(\"Specified config directory \" + configSet +\n              \" not found in \" + configsetsDir.getAbsolutePath());\n        }\n      }\n\n      String coreName = cli.getOptionValue(NAME);\n\n      String systemInfoUrl = solrUrl+\"admin/info/system\";\n      CloseableHttpClient httpClient = getHttpClient();\n      String solrHome = null;\n      try {\n        Map<String,Object> systemInfo = getJson(httpClient, systemInfoUrl, 2, true);\n        if (\"solrcloud\".equals(systemInfo.get(\"mode\"))) {\n          throw new IllegalStateException(\"Solr at \"+solrUrl+\n              \" is running in SolrCloud mode, please use create_collection command instead.\");\n        }\n\n        // convert raw JSON into user-friendly output\n        solrHome = (String)systemInfo.get(\"solr_home\");\n        if (solrHome == null)\n          solrHome = configsetsDir.getParentFile().getAbsolutePath();\n\n      } finally {\n        closeHttpClient(httpClient);\n      }\n\n      String coreStatusUrl = solrUrl+\"admin/cores?action=STATUS&core=\"+coreName;\n      if (safeCheckCoreExists(coreStatusUrl, coreName)) {\n        throw new IllegalArgumentException(\"\\nCore '\"+coreName+\n            \"' already exists!\\nChecked core existence using Core API command:\\n\"+coreStatusUrl);\n      }\n\n      File coreInstanceDir = new File(solrHome, coreName);\n      File confDir = new File(configSetDir,\"conf\");\n      if (!coreInstanceDir.isDirectory()) {\n        coreInstanceDir.mkdirs();\n        if (!coreInstanceDir.isDirectory())\n          throw new IOException(\"Failed to create new core instance directory: \"+coreInstanceDir.getAbsolutePath());\n\n        if (confDir.isDirectory()) {\n          FileUtils.copyDirectoryToDirectory(confDir, coreInstanceDir);\n        } else {\n          // hmmm ... the configset we're cloning doesn't have a conf sub-directory,\n          // we'll just assume it is OK if it has solrconfig.xml\n          if ((new File(configSetDir, \"solrconfig.xml\")).isFile()) {\n            FileUtils.copyDirectory(configSetDir, new File(coreInstanceDir, \"conf\"));\n          } else {\n            throw new IllegalArgumentException(\"\\n\"+configSetDir.getAbsolutePath()+\" doesn't contain a conf subdirectory or solrconfig.xml\\n\");\n          }\n        }\n        echoIfVerbose(\"\\nCopying configuration to new core instance directory:\\n\" + coreInstanceDir.getAbsolutePath(), cli);\n      }\n\n      String createCoreUrl =\n          String.format(Locale.ROOT,\n              \"%sadmin/cores?action=CREATE&name=%s&instanceDir=%s\",\n              solrUrl,\n              coreName,\n              coreName);\n\n      echoIfVerbose(\"\\nCreating new core '\" + coreName + \"' using command:\\n\" + createCoreUrl + \"\\n\", cli);\n\n      try {\n        Map<String,Object> json = getJson(createCoreUrl);\n        if (cli.hasOption(\"verbose\")) {\n          CharArr arr = new CharArr();\n          new JSONWriter(arr, 2).write(json);\n          echo(arr.toString());\n          echo(\"\\n\");\n        } else {\n          echo(String.format(Locale.ROOT, \"\\nCreated new core '%s'\", coreName));\n        }\n      } catch (Exception e) {\n        /* create-core failed, cleanup the copied configset before propagating the error. */\n        FileUtils.deleteDirectory(coreInstanceDir);\n        throw e;\n      }\n    }\n\n","sourceOld":"    protected void runImpl(CommandLine cli) throws Exception {\n      String solrUrl = cli.getOptionValue(\"solrUrl\", DEFAULT_SOLR_URL);\n      if (!solrUrl.endsWith(\"/\"))\n        solrUrl += \"/\";\n\n      File configsetsDir = new File(cli.getOptionValue(\"configsetsDir\"));\n      if (!configsetsDir.isDirectory())\n        throw new FileNotFoundException(configsetsDir.getAbsolutePath() + \" not found!\");\n\n      String configSet = cli.getOptionValue(\"confdir\", DEFAULT_CONFIG_SET);\n      File configSetDir = new File(configsetsDir, configSet);\n      if (!configSetDir.isDirectory()) {\n        // we allow them to pass a directory instead of a configset name\n        File possibleConfigDir = new File(configSet);\n        if (possibleConfigDir.isDirectory()) {\n          configSetDir = possibleConfigDir;\n        } else {\n          throw new FileNotFoundException(\"Specified config directory \" + configSet +\n              \" not found in \" + configsetsDir.getAbsolutePath());\n        }\n      }\n\n      String coreName = cli.getOptionValue(NAME);\n\n      String systemInfoUrl = solrUrl+\"admin/info/system\";\n      CloseableHttpClient httpClient = getHttpClient();\n      String solrHome = null;\n      try {\n        Map<String,Object> systemInfo = getJson(httpClient, systemInfoUrl, 2, true);\n        if (\"solrcloud\".equals(systemInfo.get(\"mode\"))) {\n          throw new IllegalStateException(\"Solr at \"+solrUrl+\n              \" is running in SolrCloud mode, please use create_collection command instead.\");\n        }\n\n        // convert raw JSON into user-friendly output\n        solrHome = (String)systemInfo.get(\"solr_home\");\n        if (solrHome == null)\n          solrHome = configsetsDir.getParentFile().getAbsolutePath();\n\n      } finally {\n        closeHttpClient(httpClient);\n      }\n\n      String coreStatusUrl = solrUrl+\"admin/cores?action=STATUS&core=\"+coreName;\n      if (safeCheckCoreExists(coreStatusUrl, coreName)) {\n        throw new IllegalArgumentException(\"\\nCore '\"+coreName+\n            \"' already exists!\\nChecked core existence using Core API command:\\n\"+coreStatusUrl);\n      }\n\n      File coreInstanceDir = new File(solrHome, coreName);\n      File confDir = new File(configSetDir,\"conf\");\n      if (!coreInstanceDir.isDirectory()) {\n        coreInstanceDir.mkdirs();\n        if (!coreInstanceDir.isDirectory())\n          throw new IOException(\"Failed to create new core instance directory: \"+coreInstanceDir.getAbsolutePath());\n\n        if (confDir.isDirectory()) {\n          FileUtils.copyDirectoryToDirectory(confDir, coreInstanceDir);\n        } else {\n          // hmmm ... the configset we're cloning doesn't have a conf sub-directory,\n          // we'll just assume it is OK if it has solrconfig.xml\n          if ((new File(configSetDir, \"solrconfig.xml\")).isFile()) {\n            FileUtils.copyDirectory(configSetDir, new File(coreInstanceDir, \"conf\"));\n          } else {\n            throw new IllegalArgumentException(\"\\n\"+configSetDir.getAbsolutePath()+\" doesn't contain a conf subdirectory or solrconfig.xml\\n\");\n          }\n        }\n        echoIfVerbose(\"\\nCopying configuration to new core instance directory:\\n\" + coreInstanceDir.getAbsolutePath(), cli);\n      }\n\n      String createCoreUrl =\n          String.format(Locale.ROOT,\n              \"%sadmin/cores?action=CREATE&name=%s&instanceDir=%s\",\n              solrUrl,\n              coreName,\n              coreName);\n\n      echoIfVerbose(\"\\nCreating new core '\" + coreName + \"' using command:\\n\" + createCoreUrl + \"\\n\", cli);\n\n      try {\n        Map<String,Object> json = getJson(createCoreUrl);\n        if (cli.hasOption(\"verbose\")) {\n          CharArr arr = new CharArr();\n          new JSONWriter(arr, 2).write(json);\n          echo(arr.toString());\n          echo(\"\\n\");\n        } else {\n          echo(String.format(Locale.ROOT, \"\\nCreated new core '%s'\", coreName));\n        }\n      } catch (Exception e) {\n        /* create-core failed, cleanup the copied configset before propagating the error. */\n        FileUtils.deleteDirectory(coreInstanceDir);\n        throw e;\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bda260250f85f3fbbe1a4dc7f1a8aeec3c183c64","date":1600779734,"type":3,"author":"Alexandre Rafalovitch","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/util/SolrCLI.CreateCoreTool#runImpl(CommandLine).mjava","pathOld":"solr/core/src/java/org/apache/solr/util/SolrCLI.CreateCoreTool#runImpl(CommandLine).mjava","sourceNew":"    protected void runImpl(CommandLine cli) throws Exception {\n      String solrUrl = cli.getOptionValue(\"solrUrl\", DEFAULT_SOLR_URL);\n      if (!solrUrl.endsWith(\"/\"))\n        solrUrl += \"/\";\n\n      File configsetsDir = new File(cli.getOptionValue(\"configsetsDir\"));\n      if (!configsetsDir.isDirectory())\n        throw new FileNotFoundException(configsetsDir.getAbsolutePath() + \" not found!\");\n\n      String configSet = cli.getOptionValue(\"confdir\", DEFAULT_CONFIG_SET);\n      File configSetDir = new File(configsetsDir, configSet);\n      if (!configSetDir.isDirectory()) {\n        // we allow them to pass a directory instead of a configset name\n        File possibleConfigDir = new File(configSet);\n        if (possibleConfigDir.isDirectory()) {\n          configSetDir = possibleConfigDir;\n        } else {\n          throw new FileNotFoundException(\"Specified config directory \" + configSet +\n              \" not found in \" + configsetsDir.getAbsolutePath());\n        }\n      }\n\n      String coreName = cli.getOptionValue(NAME);\n\n      String systemInfoUrl = solrUrl+\"admin/info/system\";\n      CloseableHttpClient httpClient = getHttpClient();\n      String coreRootDirectory = null; //usually same as solr home, but not always\n      try {\n        Map<String,Object> systemInfo = getJson(httpClient, systemInfoUrl, 2, true);\n        if (\"solrcloud\".equals(systemInfo.get(\"mode\"))) {\n          throw new IllegalStateException(\"Solr at \"+solrUrl+\n              \" is running in SolrCloud mode, please use create_collection command instead.\");\n        }\n\n        // convert raw JSON into user-friendly output\n        coreRootDirectory = (String)systemInfo.get(\"core_root\");\n\n        //Fall back to solr_home, in case we are running against older server that does not return the property\n        if (coreRootDirectory == null)  coreRootDirectory = (String)systemInfo.get(\"solr_home\");\n        if (coreRootDirectory == null)  coreRootDirectory = configsetsDir.getParentFile().getAbsolutePath();\n\n      } finally {\n        closeHttpClient(httpClient);\n      }\n\n      String coreStatusUrl = solrUrl+\"admin/cores?action=STATUS&core=\"+coreName;\n      if (safeCheckCoreExists(coreStatusUrl, coreName)) {\n        throw new IllegalArgumentException(\"\\nCore '\"+coreName+\n            \"' already exists!\\nChecked core existence using Core API command:\\n\"+coreStatusUrl);\n      }\n\n      File coreInstanceDir = new File(coreRootDirectory, coreName);\n      File confDir = new File(configSetDir,\"conf\");\n      if (!coreInstanceDir.isDirectory()) {\n        coreInstanceDir.mkdirs();\n        if (!coreInstanceDir.isDirectory())\n          throw new IOException(\"Failed to create new core instance directory: \"+coreInstanceDir.getAbsolutePath());\n\n        if (confDir.isDirectory()) {\n          FileUtils.copyDirectoryToDirectory(confDir, coreInstanceDir);\n        } else {\n          // hmmm ... the configset we're cloning doesn't have a conf sub-directory,\n          // we'll just assume it is OK if it has solrconfig.xml\n          if ((new File(configSetDir, \"solrconfig.xml\")).isFile()) {\n            FileUtils.copyDirectory(configSetDir, new File(coreInstanceDir, \"conf\"));\n          } else {\n            throw new IllegalArgumentException(\"\\n\"+configSetDir.getAbsolutePath()+\" doesn't contain a conf subdirectory or solrconfig.xml\\n\");\n          }\n        }\n        echoIfVerbose(\"\\nCopying configuration to new core instance directory:\\n\" + coreInstanceDir.getAbsolutePath(), cli);\n      }\n\n      String createCoreUrl =\n          String.format(Locale.ROOT,\n              \"%sadmin/cores?action=CREATE&name=%s&instanceDir=%s\",\n              solrUrl,\n              coreName,\n              coreName);\n\n      echoIfVerbose(\"\\nCreating new core '\" + coreName + \"' using command:\\n\" + createCoreUrl + \"\\n\", cli);\n\n      try {\n        Map<String,Object> json = getJson(createCoreUrl);\n        if (cli.hasOption(\"verbose\")) {\n          CharArr arr = new CharArr();\n          new JSONWriter(arr, 2).write(json);\n          echo(arr.toString());\n          echo(\"\\n\");\n        } else {\n          echo(String.format(Locale.ROOT, \"\\nCreated new core '%s'\", coreName));\n        }\n      } catch (Exception e) {\n        /* create-core failed, cleanup the copied configset before propagating the error. */\n        FileUtils.deleteDirectory(coreInstanceDir);\n        throw e;\n      }\n    }\n\n","sourceOld":"    protected void runImpl(CommandLine cli) throws Exception {\n      String solrUrl = cli.getOptionValue(\"solrUrl\", DEFAULT_SOLR_URL);\n      if (!solrUrl.endsWith(\"/\"))\n        solrUrl += \"/\";\n\n      File configsetsDir = new File(cli.getOptionValue(\"configsetsDir\"));\n      if (!configsetsDir.isDirectory())\n        throw new FileNotFoundException(configsetsDir.getAbsolutePath() + \" not found!\");\n\n      String configSet = cli.getOptionValue(\"confdir\", DEFAULT_CONFIG_SET);\n      File configSetDir = new File(configsetsDir, configSet);\n      if (!configSetDir.isDirectory()) {\n        // we allow them to pass a directory instead of a configset name\n        File possibleConfigDir = new File(configSet);\n        if (possibleConfigDir.isDirectory()) {\n          configSetDir = possibleConfigDir;\n        } else {\n          throw new FileNotFoundException(\"Specified config directory \" + configSet +\n              \" not found in \" + configsetsDir.getAbsolutePath());\n        }\n      }\n\n      String coreName = cli.getOptionValue(NAME);\n\n      String systemInfoUrl = solrUrl+\"admin/info/system\";\n      CloseableHttpClient httpClient = getHttpClient();\n      String solrHome = null;\n      try {\n        Map<String,Object> systemInfo = getJson(httpClient, systemInfoUrl, 2, true);\n        if (\"solrcloud\".equals(systemInfo.get(\"mode\"))) {\n          throw new IllegalStateException(\"Solr at \"+solrUrl+\n              \" is running in SolrCloud mode, please use create_collection command instead.\");\n        }\n\n        // convert raw JSON into user-friendly output\n        solrHome = (String)systemInfo.get(\"solr_home\");\n        if (solrHome == null)\n          solrHome = configsetsDir.getParentFile().getAbsolutePath();\n\n      } finally {\n        closeHttpClient(httpClient);\n      }\n\n      String coreStatusUrl = solrUrl+\"admin/cores?action=STATUS&core=\"+coreName;\n      if (safeCheckCoreExists(coreStatusUrl, coreName)) {\n        throw new IllegalArgumentException(\"\\nCore '\"+coreName+\n            \"' already exists!\\nChecked core existence using Core API command:\\n\"+coreStatusUrl);\n      }\n\n      File coreInstanceDir = new File(solrHome, coreName);\n      File confDir = new File(configSetDir,\"conf\");\n      if (!coreInstanceDir.isDirectory()) {\n        coreInstanceDir.mkdirs();\n        if (!coreInstanceDir.isDirectory())\n          throw new IOException(\"Failed to create new core instance directory: \"+coreInstanceDir.getAbsolutePath());\n\n        if (confDir.isDirectory()) {\n          FileUtils.copyDirectoryToDirectory(confDir, coreInstanceDir);\n        } else {\n          // hmmm ... the configset we're cloning doesn't have a conf sub-directory,\n          // we'll just assume it is OK if it has solrconfig.xml\n          if ((new File(configSetDir, \"solrconfig.xml\")).isFile()) {\n            FileUtils.copyDirectory(configSetDir, new File(coreInstanceDir, \"conf\"));\n          } else {\n            throw new IllegalArgumentException(\"\\n\"+configSetDir.getAbsolutePath()+\" doesn't contain a conf subdirectory or solrconfig.xml\\n\");\n          }\n        }\n        echoIfVerbose(\"\\nCopying configuration to new core instance directory:\\n\" + coreInstanceDir.getAbsolutePath(), cli);\n      }\n\n      String createCoreUrl =\n          String.format(Locale.ROOT,\n              \"%sadmin/cores?action=CREATE&name=%s&instanceDir=%s\",\n              solrUrl,\n              coreName,\n              coreName);\n\n      echoIfVerbose(\"\\nCreating new core '\" + coreName + \"' using command:\\n\" + createCoreUrl + \"\\n\", cli);\n\n      try {\n        Map<String,Object> json = getJson(createCoreUrl);\n        if (cli.hasOption(\"verbose\")) {\n          CharArr arr = new CharArr();\n          new JSONWriter(arr, 2).write(json);\n          echo(arr.toString());\n          echo(\"\\n\");\n        } else {\n          echo(String.format(Locale.ROOT, \"\\nCreated new core '%s'\", coreName));\n        }\n      } catch (Exception e) {\n        /* create-core failed, cleanup the copied configset before propagating the error. */\n        FileUtils.deleteDirectory(coreInstanceDir);\n        throw e;\n      }\n    }\n\n","bugFix":["1b1713aa2c66e65f3f024e9c3c4876dfed130ceb","209c0259a9b7087b2111411ec790d6557ef86307"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"4ca20be81c9284c840498143264e583ccbb8525a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"bda260250f85f3fbbe1a4dc7f1a8aeec3c183c64":["b79a5db147a1c6f95d1625ddbc3561ef56955225"],"0efc9f2cae117418f13ba9035f5e1d516ea7a2b5":["86d2df3ca94d97c62f70b0d321f5f597de2d3eb3","b79a5db147a1c6f95d1625ddbc3561ef56955225"],"0f506150a6ebd43fb2833cdf2713e2d1d5bddbd6":["4ca20be81c9284c840498143264e583ccbb8525a"],"3a7809d1d753b67f48b1a706e17034bf8b624ea3":["71a3c96be61f346d83fa7120f1e4672be77a8a8c","86d2df3ca94d97c62f70b0d321f5f597de2d3eb3"],"71a3c96be61f346d83fa7120f1e4672be77a8a8c":["0f506150a6ebd43fb2833cdf2713e2d1d5bddbd6"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"86d2df3ca94d97c62f70b0d321f5f597de2d3eb3":["71a3c96be61f346d83fa7120f1e4672be77a8a8c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["bda260250f85f3fbbe1a4dc7f1a8aeec3c183c64"],"b79a5db147a1c6f95d1625ddbc3561ef56955225":["86d2df3ca94d97c62f70b0d321f5f597de2d3eb3"],"7eeaaea0106c7d6a2de50acfc8d357121ef8bd26":["86d2df3ca94d97c62f70b0d321f5f597de2d3eb3","b79a5db147a1c6f95d1625ddbc3561ef56955225"]},"commit2Childs":{"4ca20be81c9284c840498143264e583ccbb8525a":["0f506150a6ebd43fb2833cdf2713e2d1d5bddbd6"],"bda260250f85f3fbbe1a4dc7f1a8aeec3c183c64":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"0efc9f2cae117418f13ba9035f5e1d516ea7a2b5":[],"0f506150a6ebd43fb2833cdf2713e2d1d5bddbd6":["71a3c96be61f346d83fa7120f1e4672be77a8a8c"],"3a7809d1d753b67f48b1a706e17034bf8b624ea3":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["4ca20be81c9284c840498143264e583ccbb8525a"],"71a3c96be61f346d83fa7120f1e4672be77a8a8c":["3a7809d1d753b67f48b1a706e17034bf8b624ea3","86d2df3ca94d97c62f70b0d321f5f597de2d3eb3"],"86d2df3ca94d97c62f70b0d321f5f597de2d3eb3":["0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","3a7809d1d753b67f48b1a706e17034bf8b624ea3","b79a5db147a1c6f95d1625ddbc3561ef56955225","7eeaaea0106c7d6a2de50acfc8d357121ef8bd26"],"b79a5db147a1c6f95d1625ddbc3561ef56955225":["bda260250f85f3fbbe1a4dc7f1a8aeec3c183c64","0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","7eeaaea0106c7d6a2de50acfc8d357121ef8bd26"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"7eeaaea0106c7d6a2de50acfc8d357121ef8bd26":[]},"heads":["0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","3a7809d1d753b67f48b1a706e17034bf8b624ea3","cd5edd1f2b162a5cfa08efd17851a07373a96817","7eeaaea0106c7d6a2de50acfc8d357121ef8bd26"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}