{"path":"lucene/core/src/java/org/apache/lucene/codecs/lucene62/Lucene62Codec#getPostingsFormatForField(String).mjava","commits":[{"id":"fbe8fc0e68a5e2e7acce82ba880a982bd15cfab8","date":1462567286,"type":2,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/lucene62/Lucene62Codec#getPostingsFormatForField(String).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/lucene60/Lucene60Codec#getPostingsFormatForField(String).mjava","sourceNew":"  /** Returns the postings format that should be used for writing \n   *  new segments of <code>field</code>.\n   *  \n   *  The default implementation always returns \"Lucene50\".\n   *  <p>\n   *  <b>WARNING:</b> if you subclass, you are responsible for index \n   *  backwards compatibility: future version of Lucene are only \n   *  guaranteed to be able to read the default implementation. \n   */\n  public PostingsFormat getPostingsFormatForField(String field) {\n    return defaultFormat;\n  }\n\n","sourceOld":"  /** Returns the postings format that should be used for writing \n   *  new segments of <code>field</code>.\n   *  \n   *  The default implementation always returns \"Lucene50\".\n   *  <p>\n   *  <b>WARNING:</b> if you subclass, you are responsible for index \n   *  backwards compatibility: future version of Lucene are only \n   *  guaranteed to be able to read the default implementation. \n   */\n  public PostingsFormat getPostingsFormatForField(String field) {\n    return defaultFormat;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3d33e731a93d4b57e662ff094f64f94a745422d4","date":1463128289,"type":2,"author":"Mike McCandless","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/lucene62/Lucene62Codec#getPostingsFormatForField(String).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/lucene60/Lucene60Codec#getPostingsFormatForField(String).mjava","sourceNew":"  /** Returns the postings format that should be used for writing \n   *  new segments of <code>field</code>.\n   *  \n   *  The default implementation always returns \"Lucene50\".\n   *  <p>\n   *  <b>WARNING:</b> if you subclass, you are responsible for index \n   *  backwards compatibility: future version of Lucene are only \n   *  guaranteed to be able to read the default implementation. \n   */\n  public PostingsFormat getPostingsFormatForField(String field) {\n    return defaultFormat;\n  }\n\n","sourceOld":"  /** Returns the postings format that should be used for writing \n   *  new segments of <code>field</code>.\n   *  \n   *  The default implementation always returns \"Lucene50\".\n   *  <p>\n   *  <b>WARNING:</b> if you subclass, you are responsible for index \n   *  backwards compatibility: future version of Lucene are only \n   *  guaranteed to be able to read the default implementation. \n   */\n  public PostingsFormat getPostingsFormatForField(String field) {\n    return defaultFormat;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0ad30c6a479e764150a3316e57263319775f1df2","date":1463395403,"type":2,"author":"Karl Wright","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/lucene62/Lucene62Codec#getPostingsFormatForField(String).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/lucene60/Lucene60Codec#getPostingsFormatForField(String).mjava","sourceNew":"  /** Returns the postings format that should be used for writing \n   *  new segments of <code>field</code>.\n   *  \n   *  The default implementation always returns \"Lucene50\".\n   *  <p>\n   *  <b>WARNING:</b> if you subclass, you are responsible for index \n   *  backwards compatibility: future version of Lucene are only \n   *  guaranteed to be able to read the default implementation. \n   */\n  public PostingsFormat getPostingsFormatForField(String field) {\n    return defaultFormat;\n  }\n\n","sourceOld":"  /** Returns the postings format that should be used for writing \n   *  new segments of <code>field</code>.\n   *  \n   *  The default implementation always returns \"Lucene50\".\n   *  <p>\n   *  <b>WARNING:</b> if you subclass, you are responsible for index \n   *  backwards compatibility: future version of Lucene are only \n   *  guaranteed to be able to read the default implementation. \n   */\n  public PostingsFormat getPostingsFormatForField(String field) {\n    return defaultFormat;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d470c8182e92b264680e34081b75e70a9f2b3c89","date":1463985353,"type":2,"author":"Noble Paul","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/lucene62/Lucene62Codec#getPostingsFormatForField(String).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/lucene60/Lucene60Codec#getPostingsFormatForField(String).mjava","sourceNew":"  /** Returns the postings format that should be used for writing \n   *  new segments of <code>field</code>.\n   *  \n   *  The default implementation always returns \"Lucene50\".\n   *  <p>\n   *  <b>WARNING:</b> if you subclass, you are responsible for index \n   *  backwards compatibility: future version of Lucene are only \n   *  guaranteed to be able to read the default implementation. \n   */\n  public PostingsFormat getPostingsFormatForField(String field) {\n    return defaultFormat;\n  }\n\n","sourceOld":"  /** Returns the postings format that should be used for writing \n   *  new segments of <code>field</code>.\n   *  \n   *  The default implementation always returns \"Lucene50\".\n   *  <p>\n   *  <b>WARNING:</b> if you subclass, you are responsible for index \n   *  backwards compatibility: future version of Lucene are only \n   *  guaranteed to be able to read the default implementation. \n   */\n  public PostingsFormat getPostingsFormatForField(String field) {\n    return defaultFormat;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7f3090f7e0cab5b1f5acf12d21f31f00fe74a262","date":1475755647,"type":5,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/backward-codecs/src/java/org/apache/lucene/codecs/lucene62/Lucene62Codec#getPostingsFormatForField(String).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/lucene62/Lucene62Codec#getPostingsFormatForField(String).mjava","sourceNew":"  /** Returns the postings format that should be used for writing \n   *  new segments of <code>field</code>.\n   *  \n   *  The default implementation always returns \"Lucene50\".\n   *  <p>\n   *  <b>WARNING:</b> if you subclass, you are responsible for index \n   *  backwards compatibility: future version of Lucene are only \n   *  guaranteed to be able to read the default implementation. \n   */\n  public PostingsFormat getPostingsFormatForField(String field) {\n    return defaultFormat;\n  }\n\n","sourceOld":"  /** Returns the postings format that should be used for writing \n   *  new segments of <code>field</code>.\n   *  \n   *  The default implementation always returns \"Lucene50\".\n   *  <p>\n   *  <b>WARNING:</b> if you subclass, you are responsible for index \n   *  backwards compatibility: future version of Lucene are only \n   *  guaranteed to be able to read the default implementation. \n   */\n  public PostingsFormat getPostingsFormatForField(String field) {\n    return defaultFormat;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"7f3090f7e0cab5b1f5acf12d21f31f00fe74a262":["d470c8182e92b264680e34081b75e70a9f2b3c89"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"0ad30c6a479e764150a3316e57263319775f1df2":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","3d33e731a93d4b57e662ff094f64f94a745422d4"],"3d33e731a93d4b57e662ff094f64f94a745422d4":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","fbe8fc0e68a5e2e7acce82ba880a982bd15cfab8"],"fbe8fc0e68a5e2e7acce82ba880a982bd15cfab8":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["7f3090f7e0cab5b1f5acf12d21f31f00fe74a262"],"d470c8182e92b264680e34081b75e70a9f2b3c89":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","0ad30c6a479e764150a3316e57263319775f1df2"]},"commit2Childs":{"7f3090f7e0cab5b1f5acf12d21f31f00fe74a262":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["0ad30c6a479e764150a3316e57263319775f1df2","3d33e731a93d4b57e662ff094f64f94a745422d4","fbe8fc0e68a5e2e7acce82ba880a982bd15cfab8","d470c8182e92b264680e34081b75e70a9f2b3c89"],"0ad30c6a479e764150a3316e57263319775f1df2":["d470c8182e92b264680e34081b75e70a9f2b3c89"],"3d33e731a93d4b57e662ff094f64f94a745422d4":["0ad30c6a479e764150a3316e57263319775f1df2"],"fbe8fc0e68a5e2e7acce82ba880a982bd15cfab8":["3d33e731a93d4b57e662ff094f64f94a745422d4"],"d470c8182e92b264680e34081b75e70a9f2b3c89":["7f3090f7e0cab5b1f5acf12d21f31f00fe74a262"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}