{"path":"lucene/codecs/src/java/org/apache/lucene/codecs/block/BlockSkipWriter#writeSkipData(int,IndexOutput).mjava","commits":[{"id":"3e45d45bc3730ddd1341f4eb6025f33b8482e6e2","date":1346834651,"type":1,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/codecs/src/java/org/apache/lucene/codecs/block/BlockSkipWriter#writeSkipData(int,IndexOutput).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/block/BlockSkipWriter#writeSkipData(int,IndexOutput).mjava","sourceNew":"  @Override\n  protected void writeSkipData(int level, IndexOutput skipBuffer) throws IOException {\n    int delta = curDoc - lastSkipDoc[level];\n    // if (DEBUG) {\n    //   System.out.println(\"writeSkipData level=\" + level + \" lastDoc=\" + curDoc + \" delta=\" + delta + \" curDocPointer=\" + curDocPointer);\n    // }\n    skipBuffer.writeVInt(delta);\n    lastSkipDoc[level] = curDoc;\n\n    skipBuffer.writeVInt((int) (curDocPointer - lastSkipDocPointer[level]));\n    lastSkipDocPointer[level] = curDocPointer;\n\n    if (fieldHasPositions) {\n      // if (DEBUG) {\n      //   System.out.println(\"  curPosPointer=\" + curPosPointer + \" curPosBufferUpto=\" + curPosBufferUpto);\n      // }\n      skipBuffer.writeVInt((int) (curPosPointer - lastSkipPosPointer[level]));\n      lastSkipPosPointer[level] = curPosPointer;\n      skipBuffer.writeVInt(curPosBufferUpto);\n\n      if (fieldHasPayloads) {\n        skipBuffer.writeVInt(curPayloadByteUpto);\n      }\n\n      if (fieldHasOffsets) {\n        skipBuffer.writeVInt(curStartOffset - lastStartOffset[level]);\n        lastStartOffset[level] = curStartOffset;\n      }\n\n      if (fieldHasOffsets || fieldHasPayloads) {\n        skipBuffer.writeVInt((int) (curPayPointer - lastSkipPayPointer[level]));\n        lastSkipPayPointer[level] = curPayPointer;\n      }\n    }\n  }\n\n","sourceOld":"  @Override\n  protected void writeSkipData(int level, IndexOutput skipBuffer) throws IOException {\n    int delta = curDoc - lastSkipDoc[level];\n    // if (DEBUG) {\n    //   System.out.println(\"writeSkipData level=\" + level + \" lastDoc=\" + curDoc + \" delta=\" + delta + \" curDocPointer=\" + curDocPointer);\n    // }\n    skipBuffer.writeVInt(delta);\n    lastSkipDoc[level] = curDoc;\n\n    skipBuffer.writeVInt((int) (curDocPointer - lastSkipDocPointer[level]));\n    lastSkipDocPointer[level] = curDocPointer;\n\n    if (fieldHasPositions) {\n      // if (DEBUG) {\n      //   System.out.println(\"  curPosPointer=\" + curPosPointer + \" curPosBufferUpto=\" + curPosBufferUpto);\n      // }\n      skipBuffer.writeVInt((int) (curPosPointer - lastSkipPosPointer[level]));\n      lastSkipPosPointer[level] = curPosPointer;\n      skipBuffer.writeVInt(curPosBufferUpto);\n\n      if (fieldHasPayloads) {\n        skipBuffer.writeVInt(curPayloadByteUpto);\n      }\n\n      if (fieldHasOffsets) {\n        skipBuffer.writeVInt(curStartOffset - lastStartOffset[level]);\n        lastStartOffset[level] = curStartOffset;\n      }\n\n      if (fieldHasOffsets || fieldHasPayloads) {\n        skipBuffer.writeVInt((int) (curPayPointer - lastSkipPayPointer[level]));\n        lastSkipPayPointer[level] = curPayPointer;\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c2808fd811f853d032fff6b48bb83a4b7b6f48e7","date":1348836593,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/codecs/src/java/org/apache/lucene/codecs/block/BlockSkipWriter#writeSkipData(int,IndexOutput).mjava","pathOld":"lucene/codecs/src/java/org/apache/lucene/codecs/block/BlockSkipWriter#writeSkipData(int,IndexOutput).mjava","sourceNew":"  @Override\n  protected void writeSkipData(int level, IndexOutput skipBuffer) throws IOException {\n    int delta = curDoc - lastSkipDoc[level];\n    // if (DEBUG) {\n    //   System.out.println(\"writeSkipData level=\" + level + \" lastDoc=\" + curDoc + \" delta=\" + delta + \" curDocPointer=\" + curDocPointer);\n    // }\n    skipBuffer.writeVInt(delta);\n    lastSkipDoc[level] = curDoc;\n\n    skipBuffer.writeVInt((int) (curDocPointer - lastSkipDocPointer[level]));\n    lastSkipDocPointer[level] = curDocPointer;\n\n    if (fieldHasPositions) {\n      // if (DEBUG) {\n      //   System.out.println(\"  curPosPointer=\" + curPosPointer + \" curPosBufferUpto=\" + curPosBufferUpto);\n      // }\n      skipBuffer.writeVInt((int) (curPosPointer - lastSkipPosPointer[level]));\n      lastSkipPosPointer[level] = curPosPointer;\n      skipBuffer.writeVInt(curPosBufferUpto);\n\n      if (fieldHasPayloads) {\n        skipBuffer.writeVInt(curPayloadByteUpto);\n      }\n\n      if (fieldHasOffsets || fieldHasPayloads) {\n        skipBuffer.writeVInt((int) (curPayPointer - lastSkipPayPointer[level]));\n        lastSkipPayPointer[level] = curPayPointer;\n      }\n    }\n  }\n\n","sourceOld":"  @Override\n  protected void writeSkipData(int level, IndexOutput skipBuffer) throws IOException {\n    int delta = curDoc - lastSkipDoc[level];\n    // if (DEBUG) {\n    //   System.out.println(\"writeSkipData level=\" + level + \" lastDoc=\" + curDoc + \" delta=\" + delta + \" curDocPointer=\" + curDocPointer);\n    // }\n    skipBuffer.writeVInt(delta);\n    lastSkipDoc[level] = curDoc;\n\n    skipBuffer.writeVInt((int) (curDocPointer - lastSkipDocPointer[level]));\n    lastSkipDocPointer[level] = curDocPointer;\n\n    if (fieldHasPositions) {\n      // if (DEBUG) {\n      //   System.out.println(\"  curPosPointer=\" + curPosPointer + \" curPosBufferUpto=\" + curPosBufferUpto);\n      // }\n      skipBuffer.writeVInt((int) (curPosPointer - lastSkipPosPointer[level]));\n      lastSkipPosPointer[level] = curPosPointer;\n      skipBuffer.writeVInt(curPosBufferUpto);\n\n      if (fieldHasPayloads) {\n        skipBuffer.writeVInt(curPayloadByteUpto);\n      }\n\n      if (fieldHasOffsets) {\n        skipBuffer.writeVInt(curStartOffset - lastStartOffset[level]);\n        lastStartOffset[level] = curStartOffset;\n      }\n\n      if (fieldHasOffsets || fieldHasPayloads) {\n        skipBuffer.writeVInt((int) (curPayPointer - lastSkipPayPointer[level]));\n        lastSkipPayPointer[level] = curPayPointer;\n      }\n    }\n  }\n\n","bugFix":["f81e20fb7784c464473faba4f1fdd4f775e8ee87","e885d2b1e112b1d9db6a2dae82b3b493dfba1df1"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"cf8086c7e11dc41303ef1b8050bd355ddfaee76d","date":1350007219,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/lucene41/Lucene41SkipWriter#writeSkipData(int,IndexOutput).mjava","pathOld":"lucene/codecs/src/java/org/apache/lucene/codecs/block/BlockSkipWriter#writeSkipData(int,IndexOutput).mjava","sourceNew":"  @Override\n  protected void writeSkipData(int level, IndexOutput skipBuffer) throws IOException {\n    int delta = curDoc - lastSkipDoc[level];\n    // if (DEBUG) {\n    //   System.out.println(\"writeSkipData level=\" + level + \" lastDoc=\" + curDoc + \" delta=\" + delta + \" curDocPointer=\" + curDocPointer);\n    // }\n    skipBuffer.writeVInt(delta);\n    lastSkipDoc[level] = curDoc;\n\n    skipBuffer.writeVInt((int) (curDocPointer - lastSkipDocPointer[level]));\n    lastSkipDocPointer[level] = curDocPointer;\n\n    if (fieldHasPositions) {\n      // if (DEBUG) {\n      //   System.out.println(\"  curPosPointer=\" + curPosPointer + \" curPosBufferUpto=\" + curPosBufferUpto);\n      // }\n      skipBuffer.writeVInt((int) (curPosPointer - lastSkipPosPointer[level]));\n      lastSkipPosPointer[level] = curPosPointer;\n      skipBuffer.writeVInt(curPosBufferUpto);\n\n      if (fieldHasPayloads) {\n        skipBuffer.writeVInt(curPayloadByteUpto);\n      }\n\n      if (fieldHasOffsets || fieldHasPayloads) {\n        skipBuffer.writeVInt((int) (curPayPointer - lastSkipPayPointer[level]));\n        lastSkipPayPointer[level] = curPayPointer;\n      }\n    }\n  }\n\n","sourceOld":"  @Override\n  protected void writeSkipData(int level, IndexOutput skipBuffer) throws IOException {\n    int delta = curDoc - lastSkipDoc[level];\n    // if (DEBUG) {\n    //   System.out.println(\"writeSkipData level=\" + level + \" lastDoc=\" + curDoc + \" delta=\" + delta + \" curDocPointer=\" + curDocPointer);\n    // }\n    skipBuffer.writeVInt(delta);\n    lastSkipDoc[level] = curDoc;\n\n    skipBuffer.writeVInt((int) (curDocPointer - lastSkipDocPointer[level]));\n    lastSkipDocPointer[level] = curDocPointer;\n\n    if (fieldHasPositions) {\n      // if (DEBUG) {\n      //   System.out.println(\"  curPosPointer=\" + curPosPointer + \" curPosBufferUpto=\" + curPosBufferUpto);\n      // }\n      skipBuffer.writeVInt((int) (curPosPointer - lastSkipPosPointer[level]));\n      lastSkipPosPointer[level] = curPosPointer;\n      skipBuffer.writeVInt(curPosBufferUpto);\n\n      if (fieldHasPayloads) {\n        skipBuffer.writeVInt(curPayloadByteUpto);\n      }\n\n      if (fieldHasOffsets || fieldHasPayloads) {\n        skipBuffer.writeVInt((int) (curPayPointer - lastSkipPayPointer[level]));\n        lastSkipPayPointer[level] = curPayPointer;\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c7492bcb52be51e55d596134b95b2e53cc4ffb91","date":1350223278,"type":5,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/lucene41/Lucene41SkipWriter#writeSkipData(int,IndexOutput).mjava","pathOld":"lucene/codecs/src/java/org/apache/lucene/codecs/block/BlockSkipWriter#writeSkipData(int,IndexOutput).mjava","sourceNew":"  @Override\n  protected void writeSkipData(int level, IndexOutput skipBuffer) throws IOException {\n    int delta = curDoc - lastSkipDoc[level];\n    // if (DEBUG) {\n    //   System.out.println(\"writeSkipData level=\" + level + \" lastDoc=\" + curDoc + \" delta=\" + delta + \" curDocPointer=\" + curDocPointer);\n    // }\n    skipBuffer.writeVInt(delta);\n    lastSkipDoc[level] = curDoc;\n\n    skipBuffer.writeVInt((int) (curDocPointer - lastSkipDocPointer[level]));\n    lastSkipDocPointer[level] = curDocPointer;\n\n    if (fieldHasPositions) {\n      // if (DEBUG) {\n      //   System.out.println(\"  curPosPointer=\" + curPosPointer + \" curPosBufferUpto=\" + curPosBufferUpto);\n      // }\n      skipBuffer.writeVInt((int) (curPosPointer - lastSkipPosPointer[level]));\n      lastSkipPosPointer[level] = curPosPointer;\n      skipBuffer.writeVInt(curPosBufferUpto);\n\n      if (fieldHasPayloads) {\n        skipBuffer.writeVInt(curPayloadByteUpto);\n      }\n\n      if (fieldHasOffsets || fieldHasPayloads) {\n        skipBuffer.writeVInt((int) (curPayPointer - lastSkipPayPointer[level]));\n        lastSkipPayPointer[level] = curPayPointer;\n      }\n    }\n  }\n\n","sourceOld":"  @Override\n  protected void writeSkipData(int level, IndexOutput skipBuffer) throws IOException {\n    int delta = curDoc - lastSkipDoc[level];\n    // if (DEBUG) {\n    //   System.out.println(\"writeSkipData level=\" + level + \" lastDoc=\" + curDoc + \" delta=\" + delta + \" curDocPointer=\" + curDocPointer);\n    // }\n    skipBuffer.writeVInt(delta);\n    lastSkipDoc[level] = curDoc;\n\n    skipBuffer.writeVInt((int) (curDocPointer - lastSkipDocPointer[level]));\n    lastSkipDocPointer[level] = curDocPointer;\n\n    if (fieldHasPositions) {\n      // if (DEBUG) {\n      //   System.out.println(\"  curPosPointer=\" + curPosPointer + \" curPosBufferUpto=\" + curPosBufferUpto);\n      // }\n      skipBuffer.writeVInt((int) (curPosPointer - lastSkipPosPointer[level]));\n      lastSkipPosPointer[level] = curPosPointer;\n      skipBuffer.writeVInt(curPosBufferUpto);\n\n      if (fieldHasPayloads) {\n        skipBuffer.writeVInt(curPayloadByteUpto);\n      }\n\n      if (fieldHasOffsets || fieldHasPayloads) {\n        skipBuffer.writeVInt((int) (curPayPointer - lastSkipPayPointer[level]));\n        lastSkipPayPointer[level] = curPayPointer;\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"db4fdbf3d262768eabc027cd8321edca0cd11fa8","date":1350574784,"type":5,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/lucene41/Lucene41SkipWriter#writeSkipData(int,IndexOutput).mjava","pathOld":"lucene/codecs/src/java/org/apache/lucene/codecs/block/BlockSkipWriter#writeSkipData(int,IndexOutput).mjava","sourceNew":"  @Override\n  protected void writeSkipData(int level, IndexOutput skipBuffer) throws IOException {\n    int delta = curDoc - lastSkipDoc[level];\n    // if (DEBUG) {\n    //   System.out.println(\"writeSkipData level=\" + level + \" lastDoc=\" + curDoc + \" delta=\" + delta + \" curDocPointer=\" + curDocPointer);\n    // }\n    skipBuffer.writeVInt(delta);\n    lastSkipDoc[level] = curDoc;\n\n    skipBuffer.writeVInt((int) (curDocPointer - lastSkipDocPointer[level]));\n    lastSkipDocPointer[level] = curDocPointer;\n\n    if (fieldHasPositions) {\n      // if (DEBUG) {\n      //   System.out.println(\"  curPosPointer=\" + curPosPointer + \" curPosBufferUpto=\" + curPosBufferUpto);\n      // }\n      skipBuffer.writeVInt((int) (curPosPointer - lastSkipPosPointer[level]));\n      lastSkipPosPointer[level] = curPosPointer;\n      skipBuffer.writeVInt(curPosBufferUpto);\n\n      if (fieldHasPayloads) {\n        skipBuffer.writeVInt(curPayloadByteUpto);\n      }\n\n      if (fieldHasOffsets || fieldHasPayloads) {\n        skipBuffer.writeVInt((int) (curPayPointer - lastSkipPayPointer[level]));\n        lastSkipPayPointer[level] = curPayPointer;\n      }\n    }\n  }\n\n","sourceOld":"  @Override\n  protected void writeSkipData(int level, IndexOutput skipBuffer) throws IOException {\n    int delta = curDoc - lastSkipDoc[level];\n    // if (DEBUG) {\n    //   System.out.println(\"writeSkipData level=\" + level + \" lastDoc=\" + curDoc + \" delta=\" + delta + \" curDocPointer=\" + curDocPointer);\n    // }\n    skipBuffer.writeVInt(delta);\n    lastSkipDoc[level] = curDoc;\n\n    skipBuffer.writeVInt((int) (curDocPointer - lastSkipDocPointer[level]));\n    lastSkipDocPointer[level] = curDocPointer;\n\n    if (fieldHasPositions) {\n      // if (DEBUG) {\n      //   System.out.println(\"  curPosPointer=\" + curPosPointer + \" curPosBufferUpto=\" + curPosBufferUpto);\n      // }\n      skipBuffer.writeVInt((int) (curPosPointer - lastSkipPosPointer[level]));\n      lastSkipPosPointer[level] = curPosPointer;\n      skipBuffer.writeVInt(curPosBufferUpto);\n\n      if (fieldHasPayloads) {\n        skipBuffer.writeVInt(curPayloadByteUpto);\n      }\n\n      if (fieldHasOffsets || fieldHasPayloads) {\n        skipBuffer.writeVInt((int) (curPayPointer - lastSkipPayPointer[level]));\n        lastSkipPayPointer[level] = curPayPointer;\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"c7492bcb52be51e55d596134b95b2e53cc4ffb91":["c2808fd811f853d032fff6b48bb83a4b7b6f48e7","cf8086c7e11dc41303ef1b8050bd355ddfaee76d"],"cf8086c7e11dc41303ef1b8050bd355ddfaee76d":["c2808fd811f853d032fff6b48bb83a4b7b6f48e7"],"3e45d45bc3730ddd1341f4eb6025f33b8482e6e2":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"db4fdbf3d262768eabc027cd8321edca0cd11fa8":["c2808fd811f853d032fff6b48bb83a4b7b6f48e7","c7492bcb52be51e55d596134b95b2e53cc4ffb91"],"c2808fd811f853d032fff6b48bb83a4b7b6f48e7":["3e45d45bc3730ddd1341f4eb6025f33b8482e6e2"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["c7492bcb52be51e55d596134b95b2e53cc4ffb91"]},"commit2Childs":{"c7492bcb52be51e55d596134b95b2e53cc4ffb91":["db4fdbf3d262768eabc027cd8321edca0cd11fa8","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cf8086c7e11dc41303ef1b8050bd355ddfaee76d":["c7492bcb52be51e55d596134b95b2e53cc4ffb91"],"3e45d45bc3730ddd1341f4eb6025f33b8482e6e2":["c2808fd811f853d032fff6b48bb83a4b7b6f48e7"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3e45d45bc3730ddd1341f4eb6025f33b8482e6e2"],"db4fdbf3d262768eabc027cd8321edca0cd11fa8":[],"c2808fd811f853d032fff6b48bb83a4b7b6f48e7":["c7492bcb52be51e55d596134b95b2e53cc4ffb91","cf8086c7e11dc41303ef1b8050bd355ddfaee76d","db4fdbf3d262768eabc027cd8321edca0cd11fa8"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["db4fdbf3d262768eabc027cd8321edca0cd11fa8","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}