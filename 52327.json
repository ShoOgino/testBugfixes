{"path":"lucene/src/test/org/apache/lucene/search/TestAutomatonQuery#assertAutomatonHits(int,Automaton).mjava","commits":[{"id":"955c32f886db6f6356c9fcdea6b1f1cb4effda24","date":1270581567,"type":0,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/search/TestAutomatonQuery#assertAutomatonHits(int,Automaton).mjava","pathOld":"/dev/null","sourceNew":"  private void assertAutomatonHits(int expected, Automaton automaton)\n      throws IOException {\n    AutomatonQuery query = new AutomatonQuery(newTerm(\"bogus\"), automaton);\n    \n    query.setRewriteMethod(MultiTermQuery.SCORING_BOOLEAN_QUERY_REWRITE);\n    assertEquals(expected, automatonQueryNrHits(query));\n    \n    query.setRewriteMethod(MultiTermQuery.CONSTANT_SCORE_FILTER_REWRITE);\n    assertEquals(expected, automatonQueryNrHits(query));\n    \n    query.setRewriteMethod(MultiTermQuery.CONSTANT_SCORE_BOOLEAN_QUERY_REWRITE);\n    assertEquals(expected, automatonQueryNrHits(query));\n    \n    query.setRewriteMethod(MultiTermQuery.CONSTANT_SCORE_AUTO_REWRITE_DEFAULT);\n    assertEquals(expected, automatonQueryNrHits(query));\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":5,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestAutomatonQuery#assertAutomatonHits(int,Automaton).mjava","pathOld":"lucene/src/test/org/apache/lucene/search/TestAutomatonQuery#assertAutomatonHits(int,Automaton).mjava","sourceNew":"  private void assertAutomatonHits(int expected, Automaton automaton)\n      throws IOException {\n    AutomatonQuery query = new AutomatonQuery(newTerm(\"bogus\"), automaton);\n    \n    query.setRewriteMethod(MultiTermQuery.SCORING_BOOLEAN_QUERY_REWRITE);\n    assertEquals(expected, automatonQueryNrHits(query));\n    \n    query.setRewriteMethod(MultiTermQuery.CONSTANT_SCORE_FILTER_REWRITE);\n    assertEquals(expected, automatonQueryNrHits(query));\n    \n    query.setRewriteMethod(MultiTermQuery.CONSTANT_SCORE_BOOLEAN_QUERY_REWRITE);\n    assertEquals(expected, automatonQueryNrHits(query));\n    \n    query.setRewriteMethod(MultiTermQuery.CONSTANT_SCORE_AUTO_REWRITE_DEFAULT);\n    assertEquals(expected, automatonQueryNrHits(query));\n  }\n\n","sourceOld":"  private void assertAutomatonHits(int expected, Automaton automaton)\n      throws IOException {\n    AutomatonQuery query = new AutomatonQuery(newTerm(\"bogus\"), automaton);\n    \n    query.setRewriteMethod(MultiTermQuery.SCORING_BOOLEAN_QUERY_REWRITE);\n    assertEquals(expected, automatonQueryNrHits(query));\n    \n    query.setRewriteMethod(MultiTermQuery.CONSTANT_SCORE_FILTER_REWRITE);\n    assertEquals(expected, automatonQueryNrHits(query));\n    \n    query.setRewriteMethod(MultiTermQuery.CONSTANT_SCORE_BOOLEAN_QUERY_REWRITE);\n    assertEquals(expected, automatonQueryNrHits(query));\n    \n    query.setRewriteMethod(MultiTermQuery.CONSTANT_SCORE_AUTO_REWRITE_DEFAULT);\n    assertEquals(expected, automatonQueryNrHits(query));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["955c32f886db6f6356c9fcdea6b1f1cb4effda24"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"955c32f886db6f6356c9fcdea6b1f1cb4effda24":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"]},"commit2Childs":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["955c32f886db6f6356c9fcdea6b1f1cb4effda24"],"955c32f886db6f6356c9fcdea6b1f1cb4effda24":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}