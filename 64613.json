{"path":"contrib/benchmark/src/java/org/apache/lucene/benchmark/byTask/tasks/UpdateDocTask#doLogic().mjava","commits":[{"id":"c4ff8864209d2e972cb4393600c26082f9a6533d","date":1239297466,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"contrib/benchmark/src/java/org/apache/lucene/benchmark/byTask/tasks/UpdateDocTask#doLogic().mjava","pathOld":"/dev/null","sourceNew":"  public int doLogic() throws Exception {\n    final String docID = doc.get(BasicDocMaker.ID_FIELD);\n    if (docID == null) {\n      throw new IllegalStateException(\"document must define the docid field\");\n    }\n    getRunData().getIndexWriter().updateDocument(new Term(BasicDocMaker.ID_FIELD, docID),\n                                                 doc);\n    return 1;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6944b9fa6d8ef96b83ae2d3a4332d03b3857355b","date":1245355139,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"contrib/benchmark/src/java/org/apache/lucene/benchmark/byTask/tasks/UpdateDocTask#doLogic().mjava","pathOld":"contrib/benchmark/src/java/org/apache/lucene/benchmark/byTask/tasks/UpdateDocTask#doLogic().mjava","sourceNew":"  public int doLogic() throws Exception {\n    final String docID = doc.get(DocMaker.ID_FIELD);\n    if (docID == null) {\n      throw new IllegalStateException(\"document must define the docid field\");\n    }\n    getRunData().getIndexWriter().updateDocument(new Term(DocMaker.ID_FIELD, docID), doc);\n    return 1;\n  }\n\n","sourceOld":"  public int doLogic() throws Exception {\n    final String docID = doc.get(BasicDocMaker.ID_FIELD);\n    if (docID == null) {\n      throw new IllegalStateException(\"document must define the docid field\");\n    }\n    getRunData().getIndexWriter().updateDocument(new Term(BasicDocMaker.ID_FIELD, docID),\n                                                 doc);\n    return 1;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d57eb7c98c08c03af6e4cd83509df31c81ac16af","date":1257684312,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"contrib/benchmark/src/java/org/apache/lucene/benchmark/byTask/tasks/UpdateDocTask#doLogic().mjava","pathOld":"contrib/benchmark/src/java/org/apache/lucene/benchmark/byTask/tasks/UpdateDocTask#doLogic().mjava","sourceNew":"  @Override\n  public int doLogic() throws Exception {\n    final String docID = doc.get(DocMaker.ID_FIELD);\n    if (docID == null) {\n      throw new IllegalStateException(\"document must define the docid field\");\n    }\n    getRunData().getIndexWriter().updateDocument(new Term(DocMaker.ID_FIELD, docID), doc);\n    return 1;\n  }\n\n","sourceOld":"  public int doLogic() throws Exception {\n    final String docID = doc.get(DocMaker.ID_FIELD);\n    if (docID == null) {\n      throw new IllegalStateException(\"document must define the docid field\");\n    }\n    getRunData().getIndexWriter().updateDocument(new Term(DocMaker.ID_FIELD, docID), doc);\n    return 1;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3353540ef2debe4c4c017e9d86e2c60f9e784336","date":1258197258,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"contrib/benchmark/src/java/org/apache/lucene/benchmark/byTask/tasks/UpdateDocTask#doLogic().mjava","pathOld":"contrib/benchmark/src/java/org/apache/lucene/benchmark/byTask/tasks/UpdateDocTask#doLogic().mjava","sourceNew":"  @Override\n  public int doLogic() throws Exception {\n    final String docID = doc.get(DocMaker.ID_FIELD);\n    if (docID == null) {\n      throw new IllegalStateException(\"document must define the docid field\");\n    }\n    final IndexWriter iw = getRunData().getIndexWriter();\n    iw.updateDocument(new Term(DocMaker.ID_FIELD, docID), doc);\n    return 1;\n  }\n\n","sourceOld":"  @Override\n  public int doLogic() throws Exception {\n    final String docID = doc.get(DocMaker.ID_FIELD);\n    if (docID == null) {\n      throw new IllegalStateException(\"document must define the docid field\");\n    }\n    getRunData().getIndexWriter().updateDocument(new Term(DocMaker.ID_FIELD, docID), doc);\n    return 1;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/contrib/benchmark/src/java/org/apache/lucene/benchmark/byTask/tasks/UpdateDocTask#doLogic().mjava","pathOld":"contrib/benchmark/src/java/org/apache/lucene/benchmark/byTask/tasks/UpdateDocTask#doLogic().mjava","sourceNew":"  @Override\n  public int doLogic() throws Exception {\n    final String docID = doc.get(DocMaker.ID_FIELD);\n    if (docID == null) {\n      throw new IllegalStateException(\"document must define the docid field\");\n    }\n    final IndexWriter iw = getRunData().getIndexWriter();\n    iw.updateDocument(new Term(DocMaker.ID_FIELD, docID), doc);\n    return 1;\n  }\n\n","sourceOld":"  @Override\n  public int doLogic() throws Exception {\n    final String docID = doc.get(DocMaker.ID_FIELD);\n    if (docID == null) {\n      throw new IllegalStateException(\"document must define the docid field\");\n    }\n    final IndexWriter iw = getRunData().getIndexWriter();\n    iw.updateDocument(new Term(DocMaker.ID_FIELD, docID), doc);\n    return 1;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3353540ef2debe4c4c017e9d86e2c60f9e784336":["d57eb7c98c08c03af6e4cd83509df31c81ac16af"],"6944b9fa6d8ef96b83ae2d3a4332d03b3857355b":["c4ff8864209d2e972cb4393600c26082f9a6533d"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"c4ff8864209d2e972cb4393600c26082f9a6533d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"d57eb7c98c08c03af6e4cd83509df31c81ac16af":["6944b9fa6d8ef96b83ae2d3a4332d03b3857355b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["3353540ef2debe4c4c017e9d86e2c60f9e784336"]},"commit2Childs":{"3353540ef2debe4c4c017e9d86e2c60f9e784336":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"6944b9fa6d8ef96b83ae2d3a4332d03b3857355b":["d57eb7c98c08c03af6e4cd83509df31c81ac16af"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c4ff8864209d2e972cb4393600c26082f9a6533d"],"c4ff8864209d2e972cb4393600c26082f9a6533d":["6944b9fa6d8ef96b83ae2d3a4332d03b3857355b"],"d57eb7c98c08c03af6e4cd83509df31c81ac16af":["3353540ef2debe4c4c017e9d86e2c60f9e784336"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}