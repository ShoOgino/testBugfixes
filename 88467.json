{"path":"lucene/spatial/src/test/org/apache/lucene/spatial/prefix/JtsPolygonTest#testBadPrefixTreePrune().mjava","commits":[{"id":"6b43aca0f70aef9b914114574de1d0916ad2a32b","date":1360908147,"type":0,"author":"David Wayne Smiley","isMerge":false,"pathNew":"lucene/spatial/src/test/org/apache/lucene/spatial/prefix/JtsPolygonTest#testBadPrefixTreePrune().mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * A PrefixTree pruning optimization gone bad.\n   * See <a href=\"https://issues.apache.org/jira/browse/LUCENE-4770>LUCENE-4770</a>.\n   */\n  @Test\n  public void testBadPrefixTreePrune() throws Exception {\n  \n    Shape area = ctx.readShape(\"POLYGON((-122.83 48.57, -122.77 48.56, -122.79 48.53, -122.83 48.57))\");\n    \n    SpatialPrefixTree trie = new QuadPrefixTree(ctx, 12);\n    TermQueryPrefixTreeStrategy strategy = new TermQueryPrefixTreeStrategy(trie, \"geo\");\n    Document doc = new Document();\n    doc.add(new TextField(\"id\", \"1\", Store.YES));\n\n    Field[] fields = strategy.createIndexableFields(area, 0.025);\n    for (Field field : fields) {\n      doc.add(field);  \n    }\n    addDocument(doc);\n\n    Point upperleft = ctx.makePoint(-122.88, 48.54);\n    Point lowerright = ctx.makePoint(-122.82, 48.62);\n    \n    Query query = strategy.makeQuery(new SpatialArgs(SpatialOperation.Intersects, ctx.makeRectangle(upperleft, lowerright)));\n    commit();\n    \n    TopDocs search = indexSearcher.search(query, 10);\n    ScoreDoc[] scoreDocs = search.scoreDocs;\n    for (ScoreDoc scoreDoc : scoreDocs) {\n      System.out.println(indexSearcher.doc(scoreDoc.doc));\n    }\n\n    assertEquals(1, search.totalHits);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3b41f996b22bd5518650f897d050088ff808ec03","date":1360969107,"type":0,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/spatial/src/test/org/apache/lucene/spatial/prefix/JtsPolygonTest#testBadPrefixTreePrune().mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * A PrefixTree pruning optimization gone bad.\n   * See <a href=\"https://issues.apache.org/jira/browse/LUCENE-4770>LUCENE-4770</a>.\n   */\n  @Test\n  public void testBadPrefixTreePrune() throws Exception {\n  \n    Shape area = ctx.readShape(\"POLYGON((-122.83 48.57, -122.77 48.56, -122.79 48.53, -122.83 48.57))\");\n    \n    SpatialPrefixTree trie = new QuadPrefixTree(ctx, 12);\n    TermQueryPrefixTreeStrategy strategy = new TermQueryPrefixTreeStrategy(trie, \"geo\");\n    Document doc = new Document();\n    doc.add(new TextField(\"id\", \"1\", Store.YES));\n\n    Field[] fields = strategy.createIndexableFields(area, 0.025);\n    for (Field field : fields) {\n      doc.add(field);  \n    }\n    addDocument(doc);\n\n    Point upperleft = ctx.makePoint(-122.88, 48.54);\n    Point lowerright = ctx.makePoint(-122.82, 48.62);\n    \n    Query query = strategy.makeQuery(new SpatialArgs(SpatialOperation.Intersects, ctx.makeRectangle(upperleft, lowerright)));\n    commit();\n    \n    TopDocs search = indexSearcher.search(query, 10);\n    ScoreDoc[] scoreDocs = search.scoreDocs;\n    for (ScoreDoc scoreDoc : scoreDocs) {\n      System.out.println(indexSearcher.doc(scoreDoc.doc));\n    }\n\n    assertEquals(1, search.totalHits);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6bc65e9e84ac8f81b0861d2c7d8f56715adbf003","date":1390592414,"type":3,"author":"David Wayne Smiley","isMerge":false,"pathNew":"lucene/spatial/src/test/org/apache/lucene/spatial/prefix/JtsPolygonTest#testBadPrefixTreePrune().mjava","pathOld":"lucene/spatial/src/test/org/apache/lucene/spatial/prefix/JtsPolygonTest#testBadPrefixTreePrune().mjava","sourceNew":"  /**\n   * A PrefixTree pruning optimization gone bad.\n   * See <a href=\"https://issues.apache.org/jira/browse/LUCENE-4770>LUCENE-4770</a>.\n   */\n  @Test\n  public void testBadPrefixTreePrune() throws Exception {\n  \n    Shape area = ctx.readShapeFromWkt(\"POLYGON((-122.83 48.57, -122.77 48.56, -122.79 48.53, -122.83 48.57))\");\n    \n    SpatialPrefixTree trie = new QuadPrefixTree(ctx, 12);\n    TermQueryPrefixTreeStrategy strategy = new TermQueryPrefixTreeStrategy(trie, \"geo\");\n    Document doc = new Document();\n    doc.add(new TextField(\"id\", \"1\", Store.YES));\n\n    Field[] fields = strategy.createIndexableFields(area, 0.025);\n    for (Field field : fields) {\n      doc.add(field);  \n    }\n    addDocument(doc);\n\n    Point upperleft = ctx.makePoint(-122.88, 48.54);\n    Point lowerright = ctx.makePoint(-122.82, 48.62);\n    \n    Query query = strategy.makeQuery(new SpatialArgs(SpatialOperation.Intersects, ctx.makeRectangle(upperleft, lowerright)));\n    commit();\n    \n    TopDocs search = indexSearcher.search(query, 10);\n    ScoreDoc[] scoreDocs = search.scoreDocs;\n    for (ScoreDoc scoreDoc : scoreDocs) {\n      System.out.println(indexSearcher.doc(scoreDoc.doc));\n    }\n\n    assertEquals(1, search.totalHits);\n  }\n\n","sourceOld":"  /**\n   * A PrefixTree pruning optimization gone bad.\n   * See <a href=\"https://issues.apache.org/jira/browse/LUCENE-4770>LUCENE-4770</a>.\n   */\n  @Test\n  public void testBadPrefixTreePrune() throws Exception {\n  \n    Shape area = ctx.readShape(\"POLYGON((-122.83 48.57, -122.77 48.56, -122.79 48.53, -122.83 48.57))\");\n    \n    SpatialPrefixTree trie = new QuadPrefixTree(ctx, 12);\n    TermQueryPrefixTreeStrategy strategy = new TermQueryPrefixTreeStrategy(trie, \"geo\");\n    Document doc = new Document();\n    doc.add(new TextField(\"id\", \"1\", Store.YES));\n\n    Field[] fields = strategy.createIndexableFields(area, 0.025);\n    for (Field field : fields) {\n      doc.add(field);  \n    }\n    addDocument(doc);\n\n    Point upperleft = ctx.makePoint(-122.88, 48.54);\n    Point lowerright = ctx.makePoint(-122.82, 48.62);\n    \n    Query query = strategy.makeQuery(new SpatialArgs(SpatialOperation.Intersects, ctx.makeRectangle(upperleft, lowerright)));\n    commit();\n    \n    TopDocs search = indexSearcher.search(query, 10);\n    ScoreDoc[] scoreDocs = search.scoreDocs;\n    for (ScoreDoc scoreDoc : scoreDocs) {\n      System.out.println(indexSearcher.doc(scoreDoc.doc));\n    }\n\n    assertEquals(1, search.totalHits);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b1eb427f2c6beed80d1724555fc1db003ccf3030","date":1417137397,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/spatial/src/test/org/apache/lucene/spatial/prefix/JtsPolygonTest#testBadPrefixTreePrune().mjava","pathOld":"lucene/spatial/src/test/org/apache/lucene/spatial/prefix/JtsPolygonTest#testBadPrefixTreePrune().mjava","sourceNew":"  /**\n   * A PrefixTree pruning optimization gone bad.\n   * See <a href=\"https://issues.apache.org/jira/browse/LUCENE-4770\">LUCENE-4770</a>.\n   */\n  @Test\n  public void testBadPrefixTreePrune() throws Exception {\n  \n    Shape area = ctx.readShapeFromWkt(\"POLYGON((-122.83 48.57, -122.77 48.56, -122.79 48.53, -122.83 48.57))\");\n    \n    SpatialPrefixTree trie = new QuadPrefixTree(ctx, 12);\n    TermQueryPrefixTreeStrategy strategy = new TermQueryPrefixTreeStrategy(trie, \"geo\");\n    Document doc = new Document();\n    doc.add(new TextField(\"id\", \"1\", Store.YES));\n\n    Field[] fields = strategy.createIndexableFields(area, 0.025);\n    for (Field field : fields) {\n      doc.add(field);  \n    }\n    addDocument(doc);\n\n    Point upperleft = ctx.makePoint(-122.88, 48.54);\n    Point lowerright = ctx.makePoint(-122.82, 48.62);\n    \n    Query query = strategy.makeQuery(new SpatialArgs(SpatialOperation.Intersects, ctx.makeRectangle(upperleft, lowerright)));\n    commit();\n    \n    TopDocs search = indexSearcher.search(query, 10);\n    ScoreDoc[] scoreDocs = search.scoreDocs;\n    for (ScoreDoc scoreDoc : scoreDocs) {\n      System.out.println(indexSearcher.doc(scoreDoc.doc));\n    }\n\n    assertEquals(1, search.totalHits);\n  }\n\n","sourceOld":"  /**\n   * A PrefixTree pruning optimization gone bad.\n   * See <a href=\"https://issues.apache.org/jira/browse/LUCENE-4770>LUCENE-4770</a>.\n   */\n  @Test\n  public void testBadPrefixTreePrune() throws Exception {\n  \n    Shape area = ctx.readShapeFromWkt(\"POLYGON((-122.83 48.57, -122.77 48.56, -122.79 48.53, -122.83 48.57))\");\n    \n    SpatialPrefixTree trie = new QuadPrefixTree(ctx, 12);\n    TermQueryPrefixTreeStrategy strategy = new TermQueryPrefixTreeStrategy(trie, \"geo\");\n    Document doc = new Document();\n    doc.add(new TextField(\"id\", \"1\", Store.YES));\n\n    Field[] fields = strategy.createIndexableFields(area, 0.025);\n    for (Field field : fields) {\n      doc.add(field);  \n    }\n    addDocument(doc);\n\n    Point upperleft = ctx.makePoint(-122.88, 48.54);\n    Point lowerright = ctx.makePoint(-122.82, 48.62);\n    \n    Query query = strategy.makeQuery(new SpatialArgs(SpatialOperation.Intersects, ctx.makeRectangle(upperleft, lowerright)));\n    commit();\n    \n    TopDocs search = indexSearcher.search(query, 10);\n    ScoreDoc[] scoreDocs = search.scoreDocs;\n    for (ScoreDoc scoreDoc : scoreDocs) {\n      System.out.println(indexSearcher.doc(scoreDoc.doc));\n    }\n\n    assertEquals(1, search.totalHits);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"112d77ac8d3e10a362516ad834c9a11d35c94234","date":1456784319,"type":5,"author":"nknize","isMerge":false,"pathNew":"lucene/spatial-extras/src/test/org/apache/lucene/spatial/prefix/JtsPolygonTest#testBadPrefixTreePrune().mjava","pathOld":"lucene/spatial/src/test/org/apache/lucene/spatial/prefix/JtsPolygonTest#testBadPrefixTreePrune().mjava","sourceNew":"  /**\n   * A PrefixTree pruning optimization gone bad.\n   * See <a href=\"https://issues.apache.org/jira/browse/LUCENE-4770\">LUCENE-4770</a>.\n   */\n  @Test\n  public void testBadPrefixTreePrune() throws Exception {\n\n    Shape area = ctx.readShapeFromWkt(\"POLYGON((-122.83 48.57, -122.77 48.56, -122.79 48.53, -122.83 48.57))\");\n\n    SpatialPrefixTree trie = new QuadPrefixTree(ctx, 12);\n    TermQueryPrefixTreeStrategy strategy = new TermQueryPrefixTreeStrategy(trie, \"geo\");\n    Document doc = new Document();\n    doc.add(new TextField(\"id\", \"1\", Store.YES));\n\n    Field[] fields = strategy.createIndexableFields(area, 0.025);\n    for (Field field : fields) {\n      doc.add(field);\n    }\n    addDocument(doc);\n\n    Point upperleft = ctx.makePoint(-122.88, 48.54);\n    Point lowerright = ctx.makePoint(-122.82, 48.62);\n\n    Query query = strategy.makeQuery(new SpatialArgs(SpatialOperation.Intersects, ctx.makeRectangle(upperleft, lowerright)));\n    commit();\n\n    TopDocs search = indexSearcher.search(query, 10);\n    ScoreDoc[] scoreDocs = search.scoreDocs;\n    for (ScoreDoc scoreDoc : scoreDocs) {\n      System.out.println(indexSearcher.doc(scoreDoc.doc));\n    }\n\n    assertEquals(1, search.totalHits);\n  }\n\n","sourceOld":"  /**\n   * A PrefixTree pruning optimization gone bad.\n   * See <a href=\"https://issues.apache.org/jira/browse/LUCENE-4770\">LUCENE-4770</a>.\n   */\n  @Test\n  public void testBadPrefixTreePrune() throws Exception {\n  \n    Shape area = ctx.readShapeFromWkt(\"POLYGON((-122.83 48.57, -122.77 48.56, -122.79 48.53, -122.83 48.57))\");\n    \n    SpatialPrefixTree trie = new QuadPrefixTree(ctx, 12);\n    TermQueryPrefixTreeStrategy strategy = new TermQueryPrefixTreeStrategy(trie, \"geo\");\n    Document doc = new Document();\n    doc.add(new TextField(\"id\", \"1\", Store.YES));\n\n    Field[] fields = strategy.createIndexableFields(area, 0.025);\n    for (Field field : fields) {\n      doc.add(field);  \n    }\n    addDocument(doc);\n\n    Point upperleft = ctx.makePoint(-122.88, 48.54);\n    Point lowerright = ctx.makePoint(-122.82, 48.62);\n    \n    Query query = strategy.makeQuery(new SpatialArgs(SpatialOperation.Intersects, ctx.makeRectangle(upperleft, lowerright)));\n    commit();\n    \n    TopDocs search = indexSearcher.search(query, 10);\n    ScoreDoc[] scoreDocs = search.scoreDocs;\n    for (ScoreDoc scoreDoc : scoreDocs) {\n      System.out.println(indexSearcher.doc(scoreDoc.doc));\n    }\n\n    assertEquals(1, search.totalHits);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"af2638813028b254a88b418ebeafb541afb49653","date":1456804822,"type":5,"author":"Noble Paul","isMerge":true,"pathNew":"lucene/spatial-extras/src/test/org/apache/lucene/spatial/prefix/JtsPolygonTest#testBadPrefixTreePrune().mjava","pathOld":"lucene/spatial/src/test/org/apache/lucene/spatial/prefix/JtsPolygonTest#testBadPrefixTreePrune().mjava","sourceNew":"  /**\n   * A PrefixTree pruning optimization gone bad.\n   * See <a href=\"https://issues.apache.org/jira/browse/LUCENE-4770\">LUCENE-4770</a>.\n   */\n  @Test\n  public void testBadPrefixTreePrune() throws Exception {\n\n    Shape area = ctx.readShapeFromWkt(\"POLYGON((-122.83 48.57, -122.77 48.56, -122.79 48.53, -122.83 48.57))\");\n\n    SpatialPrefixTree trie = new QuadPrefixTree(ctx, 12);\n    TermQueryPrefixTreeStrategy strategy = new TermQueryPrefixTreeStrategy(trie, \"geo\");\n    Document doc = new Document();\n    doc.add(new TextField(\"id\", \"1\", Store.YES));\n\n    Field[] fields = strategy.createIndexableFields(area, 0.025);\n    for (Field field : fields) {\n      doc.add(field);\n    }\n    addDocument(doc);\n\n    Point upperleft = ctx.makePoint(-122.88, 48.54);\n    Point lowerright = ctx.makePoint(-122.82, 48.62);\n\n    Query query = strategy.makeQuery(new SpatialArgs(SpatialOperation.Intersects, ctx.makeRectangle(upperleft, lowerright)));\n    commit();\n\n    TopDocs search = indexSearcher.search(query, 10);\n    ScoreDoc[] scoreDocs = search.scoreDocs;\n    for (ScoreDoc scoreDoc : scoreDocs) {\n      System.out.println(indexSearcher.doc(scoreDoc.doc));\n    }\n\n    assertEquals(1, search.totalHits);\n  }\n\n","sourceOld":"  /**\n   * A PrefixTree pruning optimization gone bad.\n   * See <a href=\"https://issues.apache.org/jira/browse/LUCENE-4770\">LUCENE-4770</a>.\n   */\n  @Test\n  public void testBadPrefixTreePrune() throws Exception {\n  \n    Shape area = ctx.readShapeFromWkt(\"POLYGON((-122.83 48.57, -122.77 48.56, -122.79 48.53, -122.83 48.57))\");\n    \n    SpatialPrefixTree trie = new QuadPrefixTree(ctx, 12);\n    TermQueryPrefixTreeStrategy strategy = new TermQueryPrefixTreeStrategy(trie, \"geo\");\n    Document doc = new Document();\n    doc.add(new TextField(\"id\", \"1\", Store.YES));\n\n    Field[] fields = strategy.createIndexableFields(area, 0.025);\n    for (Field field : fields) {\n      doc.add(field);  \n    }\n    addDocument(doc);\n\n    Point upperleft = ctx.makePoint(-122.88, 48.54);\n    Point lowerright = ctx.makePoint(-122.82, 48.62);\n    \n    Query query = strategy.makeQuery(new SpatialArgs(SpatialOperation.Intersects, ctx.makeRectangle(upperleft, lowerright)));\n    commit();\n    \n    TopDocs search = indexSearcher.search(query, 10);\n    ScoreDoc[] scoreDocs = search.scoreDocs;\n    for (ScoreDoc scoreDoc : scoreDocs) {\n      System.out.println(indexSearcher.doc(scoreDoc.doc));\n    }\n\n    assertEquals(1, search.totalHits);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b1eb427f2c6beed80d1724555fc1db003ccf3030":["6bc65e9e84ac8f81b0861d2c7d8f56715adbf003"],"af2638813028b254a88b418ebeafb541afb49653":["b1eb427f2c6beed80d1724555fc1db003ccf3030","112d77ac8d3e10a362516ad834c9a11d35c94234"],"3b41f996b22bd5518650f897d050088ff808ec03":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","6b43aca0f70aef9b914114574de1d0916ad2a32b"],"6bc65e9e84ac8f81b0861d2c7d8f56715adbf003":["6b43aca0f70aef9b914114574de1d0916ad2a32b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"112d77ac8d3e10a362516ad834c9a11d35c94234":["b1eb427f2c6beed80d1724555fc1db003ccf3030"],"6b43aca0f70aef9b914114574de1d0916ad2a32b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["af2638813028b254a88b418ebeafb541afb49653"]},"commit2Childs":{"b1eb427f2c6beed80d1724555fc1db003ccf3030":["af2638813028b254a88b418ebeafb541afb49653","112d77ac8d3e10a362516ad834c9a11d35c94234"],"af2638813028b254a88b418ebeafb541afb49653":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3b41f996b22bd5518650f897d050088ff808ec03":[],"6bc65e9e84ac8f81b0861d2c7d8f56715adbf003":["b1eb427f2c6beed80d1724555fc1db003ccf3030"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3b41f996b22bd5518650f897d050088ff808ec03","6b43aca0f70aef9b914114574de1d0916ad2a32b"],"112d77ac8d3e10a362516ad834c9a11d35c94234":["af2638813028b254a88b418ebeafb541afb49653"],"6b43aca0f70aef9b914114574de1d0916ad2a32b":["3b41f996b22bd5518650f897d050088ff808ec03","6bc65e9e84ac8f81b0861d2c7d8f56715adbf003"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["3b41f996b22bd5518650f897d050088ff808ec03","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}