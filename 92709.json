{"path":"lucene/core/src/java/org/apache/lucene/index/ConcurrentMergeScheduler#runOnMergeFinished(MergeSource).mjava","commits":[{"id":"89697e7abc9807639c384eecf5a2a6eef1080426","date":1587733375,"type":1,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/ConcurrentMergeScheduler#runOnMergeFinished(MergeSource).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/ConcurrentMergeScheduler#runOnMergeFinished(IndexWriter).mjava","sourceNew":"  synchronized void runOnMergeFinished(MergeSource mergeSource) {\n    // the merge call as well as the merge thread handling in the finally\n    // block must be sync'd on CMS otherwise stalling decisions might cause\n    // us to miss pending merges\n    assert mergeThreads.contains(Thread.currentThread()) : \"caller is not a merge thread\";\n    // Let CMS run new merges if necessary:\n    try {\n      merge(mergeSource, MergeTrigger.MERGE_FINISHED);\n    } catch (AlreadyClosedException ace) {\n      // OK\n    } catch (IOException ioe) {\n      throw new UncheckedIOException(ioe);\n    } finally {\n      removeMergeThread();\n      updateMergeThreads();\n      // In case we had stalled indexing, we can now wake up\n      // and possibly unstall:\n      notifyAll();\n    }\n  }\n\n","sourceOld":"  synchronized void runOnMergeFinished(IndexWriter writer) {\n    // the merge call as well as the merge thread handling in the finally\n    // block must be sync'd on CMS otherwise stalling decisions might cause\n    // us to miss pending merges\n    assert mergeThreads.contains(Thread.currentThread()) : \"caller is not a merge thread\";\n    // Let CMS run new merges if necessary:\n    try {\n      merge(writer, MergeTrigger.MERGE_FINISHED);\n    } catch (AlreadyClosedException ace) {\n      // OK\n    } catch (IOException ioe) {\n      throw new UncheckedIOException(ioe);\n    } finally {\n      removeMergeThread();\n      updateMergeThreads();\n      // In case we had stalled indexing, we can now wake up\n      // and possibly unstall:\n      notifyAll();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"89697e7abc9807639c384eecf5a2a6eef1080426":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["89697e7abc9807639c384eecf5a2a6eef1080426"]},"commit2Childs":{"89697e7abc9807639c384eecf5a2a6eef1080426":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["89697e7abc9807639c384eecf5a2a6eef1080426"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}