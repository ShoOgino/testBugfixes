{"path":"lucene/analysis/common/src/java/org/apache/lucene/analysis/custom/CustomAnalyzer#normalize(String,TokenStream).mjava","commits":[{"id":"ea4107f60b9f95623c16025c9c247412ff809092","date":1468333987,"type":0,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/analysis/common/src/java/org/apache/lucene/analysis/custom/CustomAnalyzer#normalize(String,TokenStream).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  protected TokenStream normalize(String fieldName, TokenStream in) {\n    TokenStream result = in;\n    for (TokenFilterFactory filter : tokenFilters) {\n      if (filter instanceof MultiTermAwareComponent) {\n        filter = (TokenFilterFactory) ((MultiTermAwareComponent) filter).getMultiTermComponent();\n        result = filter.create(in);\n      }\n    }\n    return result;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":0,"author":"Kevin Risden","isMerge":true,"pathNew":"lucene/analysis/common/src/java/org/apache/lucene/analysis/custom/CustomAnalyzer#normalize(String,TokenStream).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  protected TokenStream normalize(String fieldName, TokenStream in) {\n    TokenStream result = in;\n    for (TokenFilterFactory filter : tokenFilters) {\n      if (filter instanceof MultiTermAwareComponent) {\n        filter = (TokenFilterFactory) ((MultiTermAwareComponent) filter).getMultiTermComponent();\n        result = filter.create(in);\n      }\n    }\n    return result;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"55f0917e7469f0026b125e8b839cfb401717c242","date":1483090240,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/analysis/common/src/java/org/apache/lucene/analysis/custom/CustomAnalyzer#normalize(String,TokenStream).mjava","pathOld":"lucene/analysis/common/src/java/org/apache/lucene/analysis/custom/CustomAnalyzer#normalize(String,TokenStream).mjava","sourceNew":"  @Override\n  protected TokenStream normalize(String fieldName, TokenStream in) {\n    TokenStream result = in;\n    for (TokenFilterFactory filter : tokenFilters) {\n      if (filter instanceof MultiTermAwareComponent) {\n        filter = (TokenFilterFactory) ((MultiTermAwareComponent) filter).getMultiTermComponent();\n        result = filter.create(result);\n      }\n    }\n    return result;\n  }\n\n","sourceOld":"  @Override\n  protected TokenStream normalize(String fieldName, TokenStream in) {\n    TokenStream result = in;\n    for (TokenFilterFactory filter : tokenFilters) {\n      if (filter instanceof MultiTermAwareComponent) {\n        filter = (TokenFilterFactory) ((MultiTermAwareComponent) filter).getMultiTermComponent();\n        result = filter.create(in);\n      }\n    }\n    return result;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f03e4bed5023ec3ef93a771b8888cae991cf448d","date":1483469262,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"lucene/analysis/common/src/java/org/apache/lucene/analysis/custom/CustomAnalyzer#normalize(String,TokenStream).mjava","pathOld":"lucene/analysis/common/src/java/org/apache/lucene/analysis/custom/CustomAnalyzer#normalize(String,TokenStream).mjava","sourceNew":"  @Override\n  protected TokenStream normalize(String fieldName, TokenStream in) {\n    TokenStream result = in;\n    for (TokenFilterFactory filter : tokenFilters) {\n      if (filter instanceof MultiTermAwareComponent) {\n        filter = (TokenFilterFactory) ((MultiTermAwareComponent) filter).getMultiTermComponent();\n        result = filter.create(result);\n      }\n    }\n    return result;\n  }\n\n","sourceOld":"  @Override\n  protected TokenStream normalize(String fieldName, TokenStream in) {\n    TokenStream result = in;\n    for (TokenFilterFactory filter : tokenFilters) {\n      if (filter instanceof MultiTermAwareComponent) {\n        filter = (TokenFilterFactory) ((MultiTermAwareComponent) filter).getMultiTermComponent();\n        result = filter.create(in);\n      }\n    }\n    return result;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bc9299657ed604dbd6c593fe9c17258f4c59f72e","date":1527517249,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/analysis/common/src/java/org/apache/lucene/analysis/custom/CustomAnalyzer#normalize(String,TokenStream).mjava","pathOld":"lucene/analysis/common/src/java/org/apache/lucene/analysis/custom/CustomAnalyzer#normalize(String,TokenStream).mjava","sourceNew":"  @Override\n  protected TokenStream normalize(String fieldName, TokenStream in) {\n    TokenStream result = in;\n    // tokenizers can return a tokenfilter if the tokenizer does normalization,\n    // although this is really bogus/abstraction violation...\n    if (tokenizer instanceof MultiTermAwareComponent) {\n      TokenFilterFactory filter = (TokenFilterFactory) ((MultiTermAwareComponent) tokenizer).getMultiTermComponent();\n      result = filter.create(result);\n    }\n    for (TokenFilterFactory filter : tokenFilters) {\n      if (filter instanceof MultiTermAwareComponent) {\n        filter = (TokenFilterFactory) ((MultiTermAwareComponent) filter).getMultiTermComponent();\n        result = filter.create(result);\n      }\n    }\n    return result;\n  }\n\n","sourceOld":"  @Override\n  protected TokenStream normalize(String fieldName, TokenStream in) {\n    TokenStream result = in;\n    for (TokenFilterFactory filter : tokenFilters) {\n      if (filter instanceof MultiTermAwareComponent) {\n        filter = (TokenFilterFactory) ((MultiTermAwareComponent) filter).getMultiTermComponent();\n        result = filter.create(result);\n      }\n    }\n    return result;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e322d5186d76764c8638aa79f72fd42a5aed70ef","date":1542622177,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"lucene/analysis/common/src/java/org/apache/lucene/analysis/custom/CustomAnalyzer#normalize(String,TokenStream).mjava","pathOld":"lucene/analysis/common/src/java/org/apache/lucene/analysis/custom/CustomAnalyzer#normalize(String,TokenStream).mjava","sourceNew":"  @Override\n  protected TokenStream normalize(String fieldName, TokenStream in) {\n    TokenStream result = in;\n    for (TokenFilterFactory filter : tokenFilters) {\n      result = filter.normalize(result);\n    }\n    return result;\n  }\n\n","sourceOld":"  @Override\n  protected TokenStream normalize(String fieldName, TokenStream in) {\n    TokenStream result = in;\n    // tokenizers can return a tokenfilter if the tokenizer does normalization,\n    // although this is really bogus/abstraction violation...\n    if (tokenizer instanceof MultiTermAwareComponent) {\n      TokenFilterFactory filter = (TokenFilterFactory) ((MultiTermAwareComponent) tokenizer).getMultiTermComponent();\n      result = filter.create(result);\n    }\n    for (TokenFilterFactory filter : tokenFilters) {\n      if (filter instanceof MultiTermAwareComponent) {\n        filter = (TokenFilterFactory) ((MultiTermAwareComponent) filter).getMultiTermComponent();\n        result = filter.create(result);\n      }\n    }\n    return result;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"e322d5186d76764c8638aa79f72fd42a5aed70ef":["bc9299657ed604dbd6c593fe9c17258f4c59f72e"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"ea4107f60b9f95623c16025c9c247412ff809092":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"bc9299657ed604dbd6c593fe9c17258f4c59f72e":["55f0917e7469f0026b125e8b839cfb401717c242"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","ea4107f60b9f95623c16025c9c247412ff809092"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["e322d5186d76764c8638aa79f72fd42a5aed70ef"],"55f0917e7469f0026b125e8b839cfb401717c242":["ea4107f60b9f95623c16025c9c247412ff809092"],"f03e4bed5023ec3ef93a771b8888cae991cf448d":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","55f0917e7469f0026b125e8b839cfb401717c242"]},"commit2Childs":{"e322d5186d76764c8638aa79f72fd42a5aed70ef":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["ea4107f60b9f95623c16025c9c247412ff809092","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"ea4107f60b9f95623c16025c9c247412ff809092":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","55f0917e7469f0026b125e8b839cfb401717c242"],"bc9299657ed604dbd6c593fe9c17258f4c59f72e":["e322d5186d76764c8638aa79f72fd42a5aed70ef"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["f03e4bed5023ec3ef93a771b8888cae991cf448d"],"55f0917e7469f0026b125e8b839cfb401717c242":["bc9299657ed604dbd6c593fe9c17258f4c59f72e","f03e4bed5023ec3ef93a771b8888cae991cf448d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"f03e4bed5023ec3ef93a771b8888cae991cf448d":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817","f03e4bed5023ec3ef93a771b8888cae991cf448d"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}