{"path":"lucene/test-framework/src/java/org/apache/lucene/index/AssertingAtomicReader.AssertingSortedDocValues#getOrd(int).mjava","commits":[{"id":"59d00acb12c9809438e21de7c24f016356973d46","date":1359349254,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/index/AssertingAtomicReader.AssertingSortedDocValues#getOrd(int).mjava","pathOld":"/dev/null","sourceNew":"    @Override\n    public int getOrd(int docID) {\n      assert docID >= 0 && docID < maxDoc;\n      int ord = in.getOrd(docID);\n      assert ord >= 0 && ord < valueCount;\n      return ord;\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d4d69c535930b5cce125cff868d40f6373dc27d4","date":1360270101,"type":0,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/index/AssertingAtomicReader.AssertingSortedDocValues#getOrd(int).mjava","pathOld":"/dev/null","sourceNew":"    @Override\n    public int getOrd(int docID) {\n      assert docID >= 0 && docID < maxDoc;\n      int ord = in.getOrd(docID);\n      assert ord >= 0 && ord < valueCount;\n      return ord;\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1a7bf5332d569e3d07c4b248462f5d212e26e9af","date":1376929683,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/index/AssertingAtomicReader.AssertingSortedDocValues#getOrd(int).mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/index/AssertingAtomicReader.AssertingSortedDocValues#getOrd(int).mjava","sourceNew":"    @Override\n    public int getOrd(int docID) {\n      assert docID >= 0 && docID < maxDoc;\n      int ord = in.getOrd(docID);\n      assert ord >= -1 && ord < valueCount;\n      return ord;\n    }\n\n","sourceOld":"    @Override\n    public int getOrd(int docID) {\n      assert docID >= 0 && docID < maxDoc;\n      int ord = in.getOrd(docID);\n      assert ord >= 0 && ord < valueCount;\n      return ord;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e70ec9cf78e14cbbf13fd0e1a9aefa8081c325ff","date":1377034255,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/index/AssertingAtomicReader.AssertingSortedDocValues#getOrd(int).mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/index/AssertingAtomicReader.AssertingSortedDocValues#getOrd(int).mjava","sourceNew":"    @Override\n    public int getOrd(int docID) {\n      assert docID >= 0 && docID < maxDoc;\n      int ord = in.getOrd(docID);\n      assert ord >= -1 && ord < valueCount;\n      return ord;\n    }\n\n","sourceOld":"    @Override\n    public int getOrd(int docID) {\n      assert docID >= 0 && docID < maxDoc;\n      int ord = in.getOrd(docID);\n      assert ord >= 0 && ord < valueCount;\n      return ord;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3dffec77fb8f7d0e9ca4869dddd6af94528b4576","date":1377875202,"type":3,"author":"Han Jiang","isMerge":true,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/index/AssertingAtomicReader.AssertingSortedDocValues#getOrd(int).mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/index/AssertingAtomicReader.AssertingSortedDocValues#getOrd(int).mjava","sourceNew":"    @Override\n    public int getOrd(int docID) {\n      assert docID >= 0 && docID < maxDoc;\n      int ord = in.getOrd(docID);\n      assert ord >= -1 && ord < valueCount;\n      return ord;\n    }\n\n","sourceOld":"    @Override\n    public int getOrd(int docID) {\n      assert docID >= 0 && docID < maxDoc;\n      int ord = in.getOrd(docID);\n      assert ord >= 0 && ord < valueCount;\n      return ord;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c9fb5f46e264daf5ba3860defe623a89d202dd87","date":1411516315,"type":5,"author":"Ryan Ernst","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/index/AssertingLeafReader.AssertingSortedDocValues#getOrd(int).mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/index/AssertingAtomicReader.AssertingSortedDocValues#getOrd(int).mjava","sourceNew":"    @Override\n    public int getOrd(int docID) {\n      assert docID >= 0 && docID < maxDoc;\n      int ord = in.getOrd(docID);\n      assert ord >= -1 && ord < valueCount;\n      return ord;\n    }\n\n","sourceOld":"    @Override\n    public int getOrd(int docID) {\n      assert docID >= 0 && docID < maxDoc;\n      int ord = in.getOrd(docID);\n      assert ord >= -1 && ord < valueCount;\n      return ord;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"59d00acb12c9809438e21de7c24f016356973d46":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"d4d69c535930b5cce125cff868d40f6373dc27d4":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","59d00acb12c9809438e21de7c24f016356973d46"],"3dffec77fb8f7d0e9ca4869dddd6af94528b4576":["d4d69c535930b5cce125cff868d40f6373dc27d4","e70ec9cf78e14cbbf13fd0e1a9aefa8081c325ff"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"1a7bf5332d569e3d07c4b248462f5d212e26e9af":["d4d69c535930b5cce125cff868d40f6373dc27d4"],"e70ec9cf78e14cbbf13fd0e1a9aefa8081c325ff":["d4d69c535930b5cce125cff868d40f6373dc27d4","1a7bf5332d569e3d07c4b248462f5d212e26e9af"],"c9fb5f46e264daf5ba3860defe623a89d202dd87":["e70ec9cf78e14cbbf13fd0e1a9aefa8081c325ff"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["c9fb5f46e264daf5ba3860defe623a89d202dd87"]},"commit2Childs":{"59d00acb12c9809438e21de7c24f016356973d46":["d4d69c535930b5cce125cff868d40f6373dc27d4"],"d4d69c535930b5cce125cff868d40f6373dc27d4":["3dffec77fb8f7d0e9ca4869dddd6af94528b4576","1a7bf5332d569e3d07c4b248462f5d212e26e9af","e70ec9cf78e14cbbf13fd0e1a9aefa8081c325ff"],"3dffec77fb8f7d0e9ca4869dddd6af94528b4576":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["59d00acb12c9809438e21de7c24f016356973d46","d4d69c535930b5cce125cff868d40f6373dc27d4"],"1a7bf5332d569e3d07c4b248462f5d212e26e9af":["e70ec9cf78e14cbbf13fd0e1a9aefa8081c325ff"],"e70ec9cf78e14cbbf13fd0e1a9aefa8081c325ff":["3dffec77fb8f7d0e9ca4869dddd6af94528b4576","c9fb5f46e264daf5ba3860defe623a89d202dd87"],"c9fb5f46e264daf5ba3860defe623a89d202dd87":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["3dffec77fb8f7d0e9ca4869dddd6af94528b4576","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}