{"path":"src/java/org/apache/lucene/index/TermInfosWriter#writeTerm(int,byte[],int).mjava","commits":[{"id":"dbb7b6f10bff9eedd5c9bc6cf9222ffbb2df74d4","date":1206538765,"type":1,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/TermInfosWriter#writeTerm(int,byte[],int).mjava","pathOld":"src/java/org/apache/lucene/index/TermInfosWriter#writeTerm(int,char[],int,int).mjava","sourceNew":"  private void writeTerm(int fieldNumber, byte[] termBytes, int termBytesLength)\n       throws IOException {\n\n    // TODO: UTF16toUTF8 could tell us this prefix\n    // Compute prefix in common with last term:\n    int start = 0;\n    final int limit = termBytesLength < lastTermBytesLength ? termBytesLength : lastTermBytesLength;\n    while(start < limit) {\n      if (termBytes[start] != lastTermBytes[start])\n        break;\n      start++;\n    }\n\n    final int length = termBytesLength - start;\n    output.writeVInt(start);                     // write shared prefix length\n    output.writeVInt(length);                  // write delta length\n    output.writeBytes(termBytes, start, length);  // write delta bytes\n    output.writeVInt(fieldNumber); // write field num\n    if (lastTermBytes.length < termBytesLength) {\n      byte[] newArray = new byte[(int) (termBytesLength*1.5)];\n      System.arraycopy(lastTermBytes, 0, newArray, 0, start);\n      lastTermBytes = newArray;\n    }\n    System.arraycopy(termBytes, start, lastTermBytes, start, length);\n    lastTermBytesLength = termBytesLength;\n  }\n\n","sourceOld":"  private void writeTerm(int fieldNumber, char[] termText, int termTextStart, int termTextLength)\n       throws IOException {\n\n    // Compute prefix in common with last term:\n    int start = 0;\n    final int limit = termTextLength < lastTermTextLength ? termTextLength : lastTermTextLength;\n    while(start < limit) {\n      if (termText[termTextStart+start] != lastTermText[start])\n        break;\n      start++;\n    }\n\n    int length = termTextLength - start;\n\n    output.writeVInt(start);                     // write shared prefix length\n    output.writeVInt(length);                  // write delta length\n    output.writeChars(termText, start+termTextStart, length);  // write delta chars\n    output.writeVInt(fieldNumber); // write field num\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a43a81875fea76763cb9f1ff5a41f2c5b79a6585","date":1264678816,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/TermInfosWriter#writeTerm(int,byte[],int).mjava","pathOld":"src/java/org/apache/lucene/index/TermInfosWriter#writeTerm(int,byte[],int).mjava","sourceNew":"  private void writeTerm(int fieldNumber, byte[] termBytes, int termBytesLength)\n       throws IOException {\n\n    // TODO: UTF16toUTF8 could tell us this prefix\n    // Compute prefix in common with last term:\n    int start = 0;\n    final int limit = termBytesLength < lastTermBytesLength ? termBytesLength : lastTermBytesLength;\n    while(start < limit) {\n      if (termBytes[start] != lastTermBytes[start])\n        break;\n      start++;\n    }\n\n    final int length = termBytesLength - start;\n    output.writeVInt(start);                     // write shared prefix length\n    output.writeVInt(length);                  // write delta length\n    output.writeBytes(termBytes, start, length);  // write delta bytes\n    output.writeVInt(fieldNumber); // write field num\n    if (lastTermBytes.length < termBytesLength) {\n      lastTermBytes = ArrayUtil.grow(lastTermBytes, termBytesLength);\n    }\n    System.arraycopy(termBytes, start, lastTermBytes, start, length);\n    lastTermBytesLength = termBytesLength;\n  }\n\n","sourceOld":"  private void writeTerm(int fieldNumber, byte[] termBytes, int termBytesLength)\n       throws IOException {\n\n    // TODO: UTF16toUTF8 could tell us this prefix\n    // Compute prefix in common with last term:\n    int start = 0;\n    final int limit = termBytesLength < lastTermBytesLength ? termBytesLength : lastTermBytesLength;\n    while(start < limit) {\n      if (termBytes[start] != lastTermBytes[start])\n        break;\n      start++;\n    }\n\n    final int length = termBytesLength - start;\n    output.writeVInt(start);                     // write shared prefix length\n    output.writeVInt(length);                  // write delta length\n    output.writeBytes(termBytes, start, length);  // write delta bytes\n    output.writeVInt(fieldNumber); // write field num\n    if (lastTermBytes.length < termBytesLength) {\n      byte[] newArray = new byte[(int) (termBytesLength*1.5)];\n      System.arraycopy(lastTermBytes, 0, newArray, 0, start);\n      lastTermBytes = newArray;\n    }\n    System.arraycopy(termBytes, start, lastTermBytes, start, length);\n    lastTermBytesLength = termBytesLength;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/TermInfosWriter#writeTerm(int,byte[],int).mjava","pathOld":"src/java/org/apache/lucene/index/TermInfosWriter#writeTerm(int,byte[],int).mjava","sourceNew":"  private void writeTerm(int fieldNumber, byte[] termBytes, int termBytesLength)\n       throws IOException {\n\n    // TODO: UTF16toUTF8 could tell us this prefix\n    // Compute prefix in common with last term:\n    int start = 0;\n    final int limit = termBytesLength < lastTermBytesLength ? termBytesLength : lastTermBytesLength;\n    while(start < limit) {\n      if (termBytes[start] != lastTermBytes[start])\n        break;\n      start++;\n    }\n\n    final int length = termBytesLength - start;\n    output.writeVInt(start);                     // write shared prefix length\n    output.writeVInt(length);                  // write delta length\n    output.writeBytes(termBytes, start, length);  // write delta bytes\n    output.writeVInt(fieldNumber); // write field num\n    if (lastTermBytes.length < termBytesLength) {\n      lastTermBytes = ArrayUtil.grow(lastTermBytes, termBytesLength);\n    }\n    System.arraycopy(termBytes, start, lastTermBytes, start, length);\n    lastTermBytesLength = termBytesLength;\n  }\n\n","sourceOld":"  private void writeTerm(int fieldNumber, byte[] termBytes, int termBytesLength)\n       throws IOException {\n\n    // TODO: UTF16toUTF8 could tell us this prefix\n    // Compute prefix in common with last term:\n    int start = 0;\n    final int limit = termBytesLength < lastTermBytesLength ? termBytesLength : lastTermBytesLength;\n    while(start < limit) {\n      if (termBytes[start] != lastTermBytes[start])\n        break;\n      start++;\n    }\n\n    final int length = termBytesLength - start;\n    output.writeVInt(start);                     // write shared prefix length\n    output.writeVInt(length);                  // write delta length\n    output.writeBytes(termBytes, start, length);  // write delta bytes\n    output.writeVInt(fieldNumber); // write field num\n    if (lastTermBytes.length < termBytesLength) {\n      lastTermBytes = ArrayUtil.grow(lastTermBytes, termBytesLength);\n    }\n    System.arraycopy(termBytes, start, lastTermBytes, start, length);\n    lastTermBytesLength = termBytesLength;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"dbb7b6f10bff9eedd5c9bc6cf9222ffbb2df74d4":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a43a81875fea76763cb9f1ff5a41f2c5b79a6585":["dbb7b6f10bff9eedd5c9bc6cf9222ffbb2df74d4"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a43a81875fea76763cb9f1ff5a41f2c5b79a6585"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["dbb7b6f10bff9eedd5c9bc6cf9222ffbb2df74d4"],"dbb7b6f10bff9eedd5c9bc6cf9222ffbb2df74d4":["a43a81875fea76763cb9f1ff5a41f2c5b79a6585"],"a43a81875fea76763cb9f1ff5a41f2c5b79a6585":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}