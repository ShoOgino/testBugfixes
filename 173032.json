{"path":"lucene/core/src/java/org/apache/lucene/search/MinShouldMatchSumScorer#minheapRemove(Scorer).mjava","commits":[{"id":"34960be55e437a6c96fe66046bf22d33346059f6","date":1363980156,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/MinShouldMatchSumScorer#minheapRemove(Scorer).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Removes a given Scorer from the heap by placing end of heap at that position and bubbling it down\n   */\n  protected final boolean minheapRemove(Scorer scorer) {\n    // find scorer: O(nrInHeap)\n    for (int i = 0; i < nrInHeap; i++) {\n      if (subScorers[i] == scorer) { // remove scorer\n        subScorers[i] = subScorers[--nrInHeap];\n        minheapAdjust(i);\n        return true;\n      }\n    }\n    return false; // scorer already exhausted\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"681329f0d8aa847be84b952db62031b9c15f96c5","date":1364143277,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/MinShouldMatchSumScorer#minheapRemove(Scorer).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/MinShouldMatchSumScorer#minheapRemove(Scorer).mjava","sourceNew":"  /**\n   * Removes a given Scorer from the heap by placing end of heap at that\n   * position and bubbling it either up or down\n   */\n  protected final boolean minheapRemove(Scorer scorer) {\n    // find scorer: O(nrInHeap)\n    for (int i = 0; i < nrInHeap; i++) {\n      if (subScorers[i] == scorer) { // remove scorer\n        subScorers[i] = subScorers[--nrInHeap];\n        //if (i != nrInHeap) subScorers[nrInHeap] = null; // not necessary\n        minheapSiftUp(i);\n        minheapSiftDown(i);\n        return true;\n      }\n    }\n    return false; // scorer already exhausted\n  }\n\n","sourceOld":"  /**\n   * Removes a given Scorer from the heap by placing end of heap at that position and bubbling it down\n   */\n  protected final boolean minheapRemove(Scorer scorer) {\n    // find scorer: O(nrInHeap)\n    for (int i = 0; i < nrInHeap; i++) {\n      if (subScorers[i] == scorer) { // remove scorer\n        subScorers[i] = subScorers[--nrInHeap];\n        minheapAdjust(i);\n        return true;\n      }\n    }\n    return false; // scorer already exhausted\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"251e6911800e3a02e1da3bfd4dc49a914aef9778","date":1423063783,"type":4,"author":"Adrien Grand","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/search/MinShouldMatchSumScorer#minheapRemove(Scorer).mjava","sourceNew":null,"sourceOld":"  /**\n   * Removes a given Scorer from the heap by placing end of heap at that\n   * position and bubbling it either up or down\n   */\n  protected final boolean minheapRemove(Scorer scorer) {\n    // find scorer: O(nrInHeap)\n    for (int i = 0; i < nrInHeap; i++) {\n      if (subScorers[i] == scorer) { // remove scorer\n        subScorers[i] = subScorers[--nrInHeap];\n        //if (i != nrInHeap) subScorers[nrInHeap] = null; // not necessary\n        minheapSiftUp(i);\n        minheapSiftDown(i);\n        return true;\n      }\n    }\n    return false; // scorer already exhausted\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"251e6911800e3a02e1da3bfd4dc49a914aef9778":["681329f0d8aa847be84b952db62031b9c15f96c5"],"34960be55e437a6c96fe66046bf22d33346059f6":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"681329f0d8aa847be84b952db62031b9c15f96c5":["34960be55e437a6c96fe66046bf22d33346059f6"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["251e6911800e3a02e1da3bfd4dc49a914aef9778"]},"commit2Childs":{"251e6911800e3a02e1da3bfd4dc49a914aef9778":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"34960be55e437a6c96fe66046bf22d33346059f6":["681329f0d8aa847be84b952db62031b9c15f96c5"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["34960be55e437a6c96fe66046bf22d33346059f6"],"681329f0d8aa847be84b952db62031b9c15f96c5":["251e6911800e3a02e1da3bfd4dc49a914aef9778"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}