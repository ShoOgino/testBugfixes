{"path":"solr/solrj/src/test/org/apache/solr/client/solrj/SolrExampleTests#testQueryWithParams().mjava","commits":[{"id":"b0f1abf0e29061afae74324b5e9651ef6c3cfbc8","date":1334816206,"type":0,"author":"Sami Siren","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/SolrExampleTests#testQueryWithParams().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testQueryWithParams() throws SolrServerException {\n    SolrServer server = getSolrServer();\n    SolrQuery q = new SolrQuery(\"query\");\n    q.setParam(\"debug\", true);\n    QueryResponse resp = server.query(q);\n    assertEquals(\n        \"server didn't respond with debug=true, didn't we pass in the parameter?\",\n        \"true\",\n        ((NamedList) resp.getResponseHeader().get(\"params\")).get(\"debug\"));\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bafca15d8e408346a67f4282ad1143b88023893b","date":1420034748,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/SolrExampleTests#testQueryWithParams().mjava","pathOld":"solr/solrj/src/test/org/apache/solr/client/solrj/SolrExampleTests#testQueryWithParams().mjava","sourceNew":"  @Test\n  public void testQueryWithParams() throws SolrServerException {\n    SolrClient client = getSolrClient();\n    SolrQuery q = new SolrQuery(\"query\");\n    q.setParam(\"debug\", true);\n    QueryResponse resp = client.query(q);\n    assertEquals(\n        \"server didn't respond with debug=true, didn't we pass in the parameter?\",\n        \"true\",\n        ((NamedList) resp.getResponseHeader().get(\"params\")).get(\"debug\"));\n  }\n\n","sourceOld":"  @Test\n  public void testQueryWithParams() throws SolrServerException {\n    SolrServer server = getSolrServer();\n    SolrQuery q = new SolrQuery(\"query\");\n    q.setParam(\"debug\", true);\n    QueryResponse resp = server.query(q);\n    assertEquals(\n        \"server didn't respond with debug=true, didn't we pass in the parameter?\",\n        \"true\",\n        ((NamedList) resp.getResponseHeader().get(\"params\")).get(\"debug\"));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b8ed5ba2c6fdd51d5fb71cfabb554a7f2a7d6cfa","date":1425039471,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/SolrExampleTests#testQueryWithParams().mjava","pathOld":"solr/solrj/src/test/org/apache/solr/client/solrj/SolrExampleTests#testQueryWithParams().mjava","sourceNew":"  @Test\n  public void testQueryWithParams() throws SolrServerException, IOException {\n    SolrClient client = getSolrClient();\n    SolrQuery q = new SolrQuery(\"query\");\n    q.setParam(\"debug\", true);\n    QueryResponse resp = client.query(q);\n    assertEquals(\n        \"server didn't respond with debug=true, didn't we pass in the parameter?\",\n        \"true\",\n        ((NamedList) resp.getResponseHeader().get(\"params\")).get(\"debug\"));\n  }\n\n","sourceOld":"  @Test\n  public void testQueryWithParams() throws SolrServerException {\n    SolrClient client = getSolrClient();\n    SolrQuery q = new SolrQuery(\"query\");\n    q.setParam(\"debug\", true);\n    QueryResponse resp = client.query(q);\n    assertEquals(\n        \"server didn't respond with debug=true, didn't we pass in the parameter?\",\n        \"true\",\n        ((NamedList) resp.getResponseHeader().get(\"params\")).get(\"debug\"));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","date":1427779360,"type":3,"author":"Ryan Ernst","isMerge":true,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/SolrExampleTests#testQueryWithParams().mjava","pathOld":"solr/solrj/src/test/org/apache/solr/client/solrj/SolrExampleTests#testQueryWithParams().mjava","sourceNew":"  @Test\n  public void testQueryWithParams() throws SolrServerException, IOException {\n    SolrClient client = getSolrClient();\n    SolrQuery q = new SolrQuery(\"query\");\n    q.setParam(\"debug\", true);\n    QueryResponse resp = client.query(q);\n    assertEquals(\n        \"server didn't respond with debug=true, didn't we pass in the parameter?\",\n        \"true\",\n        ((NamedList) resp.getResponseHeader().get(\"params\")).get(\"debug\"));\n  }\n\n","sourceOld":"  @Test\n  public void testQueryWithParams() throws SolrServerException {\n    SolrClient client = getSolrClient();\n    SolrQuery q = new SolrQuery(\"query\");\n    q.setParam(\"debug\", true);\n    QueryResponse resp = client.query(q);\n    assertEquals(\n        \"server didn't respond with debug=true, didn't we pass in the parameter?\",\n        \"true\",\n        ((NamedList) resp.getResponseHeader().get(\"params\")).get(\"debug\"));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":["bafca15d8e408346a67f4282ad1143b88023893b","b8ed5ba2c6fdd51d5fb71cfabb554a7f2a7d6cfa"],"b8ed5ba2c6fdd51d5fb71cfabb554a7f2a7d6cfa":["bafca15d8e408346a67f4282ad1143b88023893b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"bafca15d8e408346a67f4282ad1143b88023893b":["b0f1abf0e29061afae74324b5e9651ef6c3cfbc8"],"b0f1abf0e29061afae74324b5e9651ef6c3cfbc8":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b8ed5ba2c6fdd51d5fb71cfabb554a7f2a7d6cfa"]},"commit2Childs":{"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":[],"b8ed5ba2c6fdd51d5fb71cfabb554a7f2a7d6cfa":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b0f1abf0e29061afae74324b5e9651ef6c3cfbc8"],"bafca15d8e408346a67f4282ad1143b88023893b":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","b8ed5ba2c6fdd51d5fb71cfabb554a7f2a7d6cfa"],"b0f1abf0e29061afae74324b5e9651ef6c3cfbc8":["bafca15d8e408346a67f4282ad1143b88023893b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}