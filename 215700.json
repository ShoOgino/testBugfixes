{"path":"solr/solrj/src/java/org/apache/solr/common/params/SolrParams#toMultiMap(NamedList).mjava","commits":[{"id":"c903c3d15906a3da96b8c0c2fb704491005fdbdb","date":1453508227,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/common/params/SolrParams#toMultiMap(NamedList).mjava","pathOld":"solr/src/common/org/apache/solr/common/params/SolrParams#toMultiMap(NamedList).mjava","sourceNew":"  /** Create a Map<String,String[]> from a NamedList */\n  public static Map<String,String[]> toMultiMap(NamedList params) {\n    HashMap<String,String[]> map = new HashMap<String,String[]>();\n    for (int i=0; i<params.size(); i++) {\n      String name = params.getName(i);\n      String val = params.getVal(i).toString();\n      MultiMapSolrParams.addParam(name,val,map);\n    }\n    return map;\n  }\n\n","sourceOld":"  /** Create a Map<String,String[]> from a NamedList */\n  public static Map<String,String[]> toMultiMap(NamedList params) {\n    HashMap<String,String[]> map = new HashMap<String,String[]>();\n    for (int i=0; i<params.size(); i++) {\n      String name = params.getName(i);\n      String val = params.getVal(i).toString();\n      MultiMapSolrParams.addParam(name,val,map);\n    }\n    return map;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a258fbb26824fd104ed795e5d9033d2d040049ee","date":1453508252,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/common/params/SolrParams#toMultiMap(NamedList).mjava","pathOld":"solr/src/common/org/apache/solr/common/params/SolrParams#toMultiMap(NamedList).mjava","sourceNew":"  /** Create a Map<String,String[]> from a NamedList */\n  public static Map<String,String[]> toMultiMap(NamedList params) {\n    HashMap<String,String[]> map = new HashMap<String,String[]>();\n    for (int i=0; i<params.size(); i++) {\n      String name = params.getName(i);\n      String val = params.getVal(i).toString();\n      MultiMapSolrParams.addParam(name,val,map);\n    }\n    return map;\n  }\n\n","sourceOld":"  /** Create a Map<String,String[]> from a NamedList */\n  public static Map<String,String[]> toMultiMap(NamedList params) {\n    HashMap<String,String[]> map = new HashMap<String,String[]>();\n    for (int i=0; i<params.size(); i++) {\n      String name = params.getName(i);\n      String val = params.getVal(i).toString();\n      MultiMapSolrParams.addParam(name,val,map);\n    }\n    return map;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/solrj/src/java/org/apache/solr/common/params/SolrParams#toMultiMap(NamedList).mjava","pathOld":"solr/src/common/org/apache/solr/common/params/SolrParams#toMultiMap(NamedList).mjava","sourceNew":"  /** Create a Map<String,String[]> from a NamedList */\n  public static Map<String,String[]> toMultiMap(NamedList params) {\n    HashMap<String,String[]> map = new HashMap<String,String[]>();\n    for (int i=0; i<params.size(); i++) {\n      String name = params.getName(i);\n      String val = params.getVal(i).toString();\n      MultiMapSolrParams.addParam(name,val,map);\n    }\n    return map;\n  }\n\n","sourceOld":"  /** Create a Map<String,String[]> from a NamedList */\n  public static Map<String,String[]> toMultiMap(NamedList params) {\n    HashMap<String,String[]> map = new HashMap<String,String[]>();\n    for (int i=0; i<params.size(); i++) {\n      String name = params.getName(i);\n      String val = params.getVal(i).toString();\n      MultiMapSolrParams.addParam(name,val,map);\n    }\n    return map;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"87ec9ddb9890f9278a2c1198fb570881cbf048a3","date":1335150499,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/common/params/SolrParams#toMultiMap(NamedList).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/common/params/SolrParams#toMultiMap(NamedList).mjava","sourceNew":"  /** Create a Map&lt;String,String[]&gt; from a NamedList */\n  public static Map<String,String[]> toMultiMap(NamedList params) {\n    HashMap<String,String[]> map = new HashMap<String,String[]>();\n    for (int i=0; i<params.size(); i++) {\n      String name = params.getName(i);\n      String val = params.getVal(i).toString();\n      MultiMapSolrParams.addParam(name,val,map);\n    }\n    return map;\n  }\n\n","sourceOld":"  /** Create a Map<String,String[]> from a NamedList */\n  public static Map<String,String[]> toMultiMap(NamedList params) {\n    HashMap<String,String[]> map = new HashMap<String,String[]>();\n    for (int i=0; i<params.size(); i++) {\n      String name = params.getName(i);\n      String val = params.getVal(i).toString();\n      MultiMapSolrParams.addParam(name,val,map);\n    }\n    return map;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"634f330c54fd3f9f491d52036dc3f40b4f4d8934","date":1394635157,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/common/params/SolrParams#toMultiMap(NamedList).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/common/params/SolrParams#toMultiMap(NamedList).mjava","sourceNew":"  /** Create a Map&lt;String,String[]&gt; from a NamedList */\n  public static Map<String,String[]> toMultiMap(NamedList params) {\n    HashMap<String,String[]> map = new HashMap<>();\n    for (int i=0; i<params.size(); i++) {\n      String name = params.getName(i);\n      String val = params.getVal(i).toString();\n      MultiMapSolrParams.addParam(name,val,map);\n    }\n    return map;\n  }\n\n","sourceOld":"  /** Create a Map&lt;String,String[]&gt; from a NamedList */\n  public static Map<String,String[]> toMultiMap(NamedList params) {\n    HashMap<String,String[]> map = new HashMap<String,String[]>();\n    for (int i=0; i<params.size(); i++) {\n      String name = params.getName(i);\n      String val = params.getVal(i).toString();\n      MultiMapSolrParams.addParam(name,val,map);\n    }\n    return map;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"b68e97c9c933030236b0123cce18c86b084bd871","date":1431669089,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/common/params/SolrParams#toMultiMap(NamedList).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/common/params/SolrParams#toMultiMap(NamedList).mjava","sourceNew":"  /** Create a Map&lt;String,String[]&gt; from a NamedList */\n  public static Map<String,String[]> toMultiMap(NamedList params) {\n    HashMap<String,String[]> map = new HashMap<>();\n    for (int i=0; i<params.size(); i++) {\n      String name = params.getName(i);\n      Object val = params.getVal(i);\n      if (val instanceof String[]) {\n        MultiMapSolrParams.addParam(name, (String[]) val, map);\n      } else {\n        MultiMapSolrParams.addParam(name, val.toString(), map);\n      }\n    }\n    return map;\n  }\n\n","sourceOld":"  /** Create a Map&lt;String,String[]&gt; from a NamedList */\n  public static Map<String,String[]> toMultiMap(NamedList params) {\n    HashMap<String,String[]> map = new HashMap<>();\n    for (int i=0; i<params.size(); i++) {\n      String name = params.getName(i);\n      String val = params.getVal(i).toString();\n      MultiMapSolrParams.addParam(name,val,map);\n    }\n    return map;\n  }\n\n","bugFix":["44f497c313977be641ddf24aab74b30e6de834d8"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6827268e62848e1e9e42b995c30c14f69a369389","date":1439915491,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/common/params/SolrParams#toMultiMap(NamedList).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/common/params/SolrParams#toMultiMap(NamedList).mjava","sourceNew":"  /** Create a Map&lt;String,String[]&gt; from a NamedList */\n  public static Map<String,String[]> toMultiMap(NamedList params) {\n    HashMap<String,String[]> map = new HashMap<>();\n    for (int i=0; i<params.size(); i++) {\n      String name = params.getName(i);\n      Object val = params.getVal(i);\n      if (val instanceof String[]) {\n        MultiMapSolrParams.addParam(name, (String[]) val, map);\n      } else if (val instanceof List) {\n        List l = (List) val;\n        String[] s = new String[l.size()];\n        for (int j = 0; j < l.size(); j++) {\n          s[j] = l.get(j) == null ? null : String.valueOf(l.get(j));\n        }\n        MultiMapSolrParams.addParam(name, s, map);\n      } else {\n        MultiMapSolrParams.addParam(name, val.toString(), map);\n      }\n    }\n    return map;\n  }\n\n","sourceOld":"  /** Create a Map&lt;String,String[]&gt; from a NamedList */\n  public static Map<String,String[]> toMultiMap(NamedList params) {\n    HashMap<String,String[]> map = new HashMap<>();\n    for (int i=0; i<params.size(); i++) {\n      String name = params.getName(i);\n      Object val = params.getVal(i);\n      if (val instanceof String[]) {\n        MultiMapSolrParams.addParam(name, (String[]) val, map);\n      } else {\n        MultiMapSolrParams.addParam(name, val.toString(), map);\n      }\n    }\n    return map;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"129e5b874f99ae4e04f39c337c940dda690f2d38","date":1524504409,"type":3,"author":"David Smiley","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/common/params/SolrParams#toMultiMap(NamedList).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/common/params/SolrParams#toMultiMap(NamedList).mjava","sourceNew":"  /** Create a Map&lt;String,String[]&gt; from a NamedList */\n  @Deprecated // Doesn't belong here (no SolrParams).  Just remove.\n  public static Map<String,String[]> toMultiMap(NamedList params) {\n    HashMap<String,String[]> map = new HashMap<>();\n    for (int i=0; i<params.size(); i++) {\n      String name = params.getName(i);\n      Object val = params.getVal(i);\n      if (val instanceof String[]) {\n        MultiMapSolrParams.addParam(name, (String[]) val, map);\n      } else if (val instanceof List) {\n        List l = (List) val;\n        String[] s = new String[l.size()];\n        for (int j = 0; j < l.size(); j++) {\n          s[j] = l.get(j) == null ? null : String.valueOf(l.get(j));\n        }\n        MultiMapSolrParams.addParam(name, s, map);\n      } else {\n        MultiMapSolrParams.addParam(name, val.toString(), map);\n      }\n    }\n    return map;\n  }\n\n","sourceOld":"  /** Create a Map&lt;String,String[]&gt; from a NamedList */\n  public static Map<String,String[]> toMultiMap(NamedList params) {\n    HashMap<String,String[]> map = new HashMap<>();\n    for (int i=0; i<params.size(); i++) {\n      String name = params.getName(i);\n      Object val = params.getVal(i);\n      if (val instanceof String[]) {\n        MultiMapSolrParams.addParam(name, (String[]) val, map);\n      } else if (val instanceof List) {\n        List l = (List) val;\n        String[] s = new String[l.size()];\n        for (int j = 0; j < l.size(); j++) {\n          s[j] = l.get(j) == null ? null : String.valueOf(l.get(j));\n        }\n        MultiMapSolrParams.addParam(name, s, map);\n      } else {\n        MultiMapSolrParams.addParam(name, val.toString(), map);\n      }\n    }\n    return map;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8dc9df63ec3bc509a28d29b0ddcf6f14756b3e76","date":1591450217,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/common/params/SolrParams#toMultiMap(NamedList).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/common/params/SolrParams#toMultiMap(NamedList).mjava","sourceNew":"  /** Create a Map&lt;String,String[]&gt; from a NamedList */\n  @Deprecated // Doesn't belong here (no SolrParams).  Just remove.\n  public static Map<String,String[]> toMultiMap(@SuppressWarnings({\"rawtypes\"})NamedList params) {\n    HashMap<String,String[]> map = new HashMap<>();\n    for (int i=0; i<params.size(); i++) {\n      String name = params.getName(i);\n      Object val = params.getVal(i);\n      if (val instanceof String[]) {\n        MultiMapSolrParams.addParam(name, (String[]) val, map);\n      } else if (val instanceof List) {\n        @SuppressWarnings({\"rawtypes\"})\n        List l = (List) val;\n        String[] s = new String[l.size()];\n        for (int j = 0; j < l.size(); j++) {\n          s[j] = l.get(j) == null ? null : String.valueOf(l.get(j));\n        }\n        MultiMapSolrParams.addParam(name, s, map);\n      } else {\n        MultiMapSolrParams.addParam(name, val.toString(), map);\n      }\n    }\n    return map;\n  }\n\n","sourceOld":"  /** Create a Map&lt;String,String[]&gt; from a NamedList */\n  @Deprecated // Doesn't belong here (no SolrParams).  Just remove.\n  public static Map<String,String[]> toMultiMap(NamedList params) {\n    HashMap<String,String[]> map = new HashMap<>();\n    for (int i=0; i<params.size(); i++) {\n      String name = params.getName(i);\n      Object val = params.getVal(i);\n      if (val instanceof String[]) {\n        MultiMapSolrParams.addParam(name, (String[]) val, map);\n      } else if (val instanceof List) {\n        List l = (List) val;\n        String[] s = new String[l.size()];\n        for (int j = 0; j < l.size(); j++) {\n          s[j] = l.get(j) == null ? null : String.valueOf(l.get(j));\n        }\n        MultiMapSolrParams.addParam(name, s, map);\n      } else {\n        MultiMapSolrParams.addParam(name, val.toString(), map);\n      }\n    }\n    return map;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"6827268e62848e1e9e42b995c30c14f69a369389":["b68e97c9c933030236b0123cce18c86b084bd871"],"634f330c54fd3f9f491d52036dc3f40b4f4d8934":["87ec9ddb9890f9278a2c1198fb570881cbf048a3"],"8dc9df63ec3bc509a28d29b0ddcf6f14756b3e76":["129e5b874f99ae4e04f39c337c940dda690f2d38"],"87ec9ddb9890f9278a2c1198fb570881cbf048a3":["c26f00b574427b55127e869b935845554afde1fa"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"129e5b874f99ae4e04f39c337c940dda690f2d38":["6827268e62848e1e9e42b995c30c14f69a369389"],"c26f00b574427b55127e869b935845554afde1fa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","c903c3d15906a3da96b8c0c2fb704491005fdbdb"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"b68e97c9c933030236b0123cce18c86b084bd871":["634f330c54fd3f9f491d52036dc3f40b4f4d8934"],"a258fbb26824fd104ed795e5d9033d2d040049ee":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["8dc9df63ec3bc509a28d29b0ddcf6f14756b3e76"]},"commit2Childs":{"6827268e62848e1e9e42b995c30c14f69a369389":["129e5b874f99ae4e04f39c337c940dda690f2d38"],"634f330c54fd3f9f491d52036dc3f40b4f4d8934":["b68e97c9c933030236b0123cce18c86b084bd871"],"8dc9df63ec3bc509a28d29b0ddcf6f14756b3e76":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"87ec9ddb9890f9278a2c1198fb570881cbf048a3":["634f330c54fd3f9f491d52036dc3f40b4f4d8934"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["c26f00b574427b55127e869b935845554afde1fa"],"129e5b874f99ae4e04f39c337c940dda690f2d38":["8dc9df63ec3bc509a28d29b0ddcf6f14756b3e76"],"c26f00b574427b55127e869b935845554afde1fa":["87ec9ddb9890f9278a2c1198fb570881cbf048a3"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c903c3d15906a3da96b8c0c2fb704491005fdbdb","c26f00b574427b55127e869b935845554afde1fa","a258fbb26824fd104ed795e5d9033d2d040049ee"],"b68e97c9c933030236b0123cce18c86b084bd871":["6827268e62848e1e9e42b995c30c14f69a369389"],"a258fbb26824fd104ed795e5d9033d2d040049ee":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a258fbb26824fd104ed795e5d9033d2d040049ee","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}