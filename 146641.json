{"path":"lucene/core/src/java/org/apache/lucene/document/Field#setValue(int).mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/document/Field#setValue(int).mjava","pathOld":"lucene/src/java/org/apache/lucene/document/Field#setValue(int).mjava","sourceNew":"  public void setValue(int value) {\n    if (!(fieldsData instanceof Integer)) {\n      throw new IllegalArgumentException(\"cannot change value type from \" + fieldsData.getClass().getSimpleName() + \" to Integer\");\n    }\n    if (numericTokenStream != null) {\n      numericTokenStream.setIntValue(value);\n    }\n    fieldsData = Integer.valueOf(value);\n  }\n\n","sourceOld":"  public void setValue(int value) {\n    if (!(fieldsData instanceof Integer)) {\n      throw new IllegalArgumentException(\"cannot change value type from \" + fieldsData.getClass().getSimpleName() + \" to Integer\");\n    }\n    if (numericTokenStream != null) {\n      numericTokenStream.setIntValue(value);\n    }\n    fieldsData = Integer.valueOf(value);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a78a90fc9701e511308346ea29f4f5e548bb39fe","date":1329489995,"type":5,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/document/Field#setIntValue(int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/document/Field#setValue(int).mjava","sourceNew":"  public void setIntValue(int value) {\n    if (!(fieldsData instanceof Integer)) {\n      throw new IllegalArgumentException(\"cannot change value type from \" + fieldsData.getClass().getSimpleName() + \" to Integer\");\n    }\n    if (numericTokenStream != null) {\n      numericTokenStream.setIntValue(value);\n    }\n    fieldsData = Integer.valueOf(value);\n  }\n\n","sourceOld":"  public void setValue(int value) {\n    if (!(fieldsData instanceof Integer)) {\n      throw new IllegalArgumentException(\"cannot change value type from \" + fieldsData.getClass().getSimpleName() + \" to Integer\");\n    }\n    if (numericTokenStream != null) {\n      numericTokenStream.setIntValue(value);\n    }\n    fieldsData = Integer.valueOf(value);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"a78a90fc9701e511308346ea29f4f5e548bb39fe":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a78a90fc9701e511308346ea29f4f5e548bb39fe"]},"commit2Childs":{"a78a90fc9701e511308346ea29f4f5e548bb39fe":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a78a90fc9701e511308346ea29f4f5e548bb39fe"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}