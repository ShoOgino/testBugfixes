{"path":"lucene/backwards/src/test/org/apache/lucene/index/TestIndexWriter#testCreateWithReader().mjava","commits":[{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/backwards/src/test/org/apache/lucene/index/TestIndexWriter#testCreateWithReader().mjava","pathOld":"backwards/src/test/org/apache/lucene/index/TestIndexWriter#testCreateWithReader().mjava","sourceNew":"    // Make sure we can open an index for create even when a\n    // reader holds it open (this fails pre lock-less\n    // commits on windows):\n    public void testCreateWithReader() throws IOException {\n        File indexDir = _TestUtil.getTempDir(\"lucenetestindexwriter\");\n\n        try {\n          Directory dir = FSDirectory.open(indexDir);\n\n          // add one document & close writer\n          IndexWriter writer = new IndexWriter(dir, new WhitespaceAnalyzer(), true, IndexWriter.MaxFieldLength.LIMITED);\n          addDoc(writer);\n          writer.close();\n\n          // now open reader:\n          IndexReader reader = IndexReader.open(dir, true);\n          assertEquals(\"should be one document\", reader.numDocs(), 1);\n\n          // now open index for create:\n          writer = new IndexWriter(dir, new WhitespaceAnalyzer(), true, IndexWriter.MaxFieldLength.LIMITED);\n          assertEquals(\"should be zero documents\", writer.maxDoc(), 0);\n          addDoc(writer);\n          writer.close();\n\n          assertEquals(\"should be one document\", reader.numDocs(), 1);\n          IndexReader reader2 = IndexReader.open(dir, true);\n          assertEquals(\"should be one document\", reader2.numDocs(), 1);\n          reader.close();\n          reader2.close();\n        } finally {\n          rmDir(indexDir);\n        }\n    }\n\n","sourceOld":"    // Make sure we can open an index for create even when a\n    // reader holds it open (this fails pre lock-less\n    // commits on windows):\n    public void testCreateWithReader() throws IOException {\n        File indexDir = _TestUtil.getTempDir(\"lucenetestindexwriter\");\n\n        try {\n          Directory dir = FSDirectory.open(indexDir);\n\n          // add one document & close writer\n          IndexWriter writer = new IndexWriter(dir, new WhitespaceAnalyzer(), true, IndexWriter.MaxFieldLength.LIMITED);\n          addDoc(writer);\n          writer.close();\n\n          // now open reader:\n          IndexReader reader = IndexReader.open(dir, true);\n          assertEquals(\"should be one document\", reader.numDocs(), 1);\n\n          // now open index for create:\n          writer = new IndexWriter(dir, new WhitespaceAnalyzer(), true, IndexWriter.MaxFieldLength.LIMITED);\n          assertEquals(\"should be zero documents\", writer.maxDoc(), 0);\n          addDoc(writer);\n          writer.close();\n\n          assertEquals(\"should be one document\", reader.numDocs(), 1);\n          IndexReader reader2 = IndexReader.open(dir, true);\n          assertEquals(\"should be one document\", reader2.numDocs(), 1);\n          reader.close();\n          reader2.close();\n        } finally {\n          rmDir(indexDir);\n        }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"90eca6fcb6635ca73ea4fdbe2f57d2033b66d3b6","date":1272983566,"type":4,"author":"Uwe Schindler","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/backwards/src/test/org/apache/lucene/index/TestIndexWriter#testCreateWithReader().mjava","sourceNew":null,"sourceOld":"    // Make sure we can open an index for create even when a\n    // reader holds it open (this fails pre lock-less\n    // commits on windows):\n    public void testCreateWithReader() throws IOException {\n        File indexDir = _TestUtil.getTempDir(\"lucenetestindexwriter\");\n\n        try {\n          Directory dir = FSDirectory.open(indexDir);\n\n          // add one document & close writer\n          IndexWriter writer = new IndexWriter(dir, new WhitespaceAnalyzer(), true, IndexWriter.MaxFieldLength.LIMITED);\n          addDoc(writer);\n          writer.close();\n\n          // now open reader:\n          IndexReader reader = IndexReader.open(dir, true);\n          assertEquals(\"should be one document\", reader.numDocs(), 1);\n\n          // now open index for create:\n          writer = new IndexWriter(dir, new WhitespaceAnalyzer(), true, IndexWriter.MaxFieldLength.LIMITED);\n          assertEquals(\"should be zero documents\", writer.maxDoc(), 0);\n          addDoc(writer);\n          writer.close();\n\n          assertEquals(\"should be one document\", reader.numDocs(), 1);\n          IndexReader reader2 = IndexReader.open(dir, true);\n          assertEquals(\"should be one document\", reader2.numDocs(), 1);\n          reader.close();\n          reader2.close();\n        } finally {\n          rmDir(indexDir);\n        }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"90eca6fcb6635ca73ea4fdbe2f57d2033b66d3b6":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["90eca6fcb6635ca73ea4fdbe2f57d2033b66d3b6"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"90eca6fcb6635ca73ea4fdbe2f57d2033b66d3b6":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["90eca6fcb6635ca73ea4fdbe2f57d2033b66d3b6"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}