{"path":"lucene/core/src/java/org/apache/lucene/index/ReadersAndUpdates#ReadersAndUpdates(int,SegmentReader,PendingDeletes).mjava","commits":[{"id":"d60c1bb96a28a26d197c36299f7b6c9c5da617a1","date":1522484702,"type":0,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/ReadersAndUpdates#ReadersAndUpdates(int,SegmentReader,PendingDeletes).mjava","pathOld":"/dev/null","sourceNew":"  /** Init from a previously opened SegmentReader.\n   *\n   * <p>NOTE: steals incoming ref from reader. */\n  ReadersAndUpdates(int indexCreatedVersionMajor, SegmentReader reader, PendingDeletes pendingDeletes) {\n    this(indexCreatedVersionMajor, reader.getSegmentInfo(), reader, pendingDeletes);\n    assert pendingDeletes.numPendingDeletes() >= 0\n        : \"got \" + pendingDeletes.numPendingDeletes() + \" reader.numDeletedDocs()=\" + reader.numDeletedDocs() + \" info.getDelCount()=\" + info.getDelCount() + \" maxDoc=\" + reader.maxDoc() + \" numDocs=\" + reader.numDocs();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"aa5e39259dfd4a68287c824d3b7e1bc9097dc895","date":1522505041,"type":0,"author":"Karl Wright","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/ReadersAndUpdates#ReadersAndUpdates(int,SegmentReader,PendingDeletes).mjava","pathOld":"/dev/null","sourceNew":"  /** Init from a previously opened SegmentReader.\n   *\n   * <p>NOTE: steals incoming ref from reader. */\n  ReadersAndUpdates(int indexCreatedVersionMajor, SegmentReader reader, PendingDeletes pendingDeletes) {\n    this(indexCreatedVersionMajor, reader.getSegmentInfo(), reader, pendingDeletes);\n    assert pendingDeletes.numPendingDeletes() >= 0\n        : \"got \" + pendingDeletes.numPendingDeletes() + \" reader.numDeletedDocs()=\" + reader.numDeletedDocs() + \" info.getDelCount()=\" + info.getDelCount() + \" maxDoc=\" + reader.maxDoc() + \" numDocs=\" + reader.numDocs();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5ee0394b8176abd7c90a4be8c05465be1879db79","date":1522842314,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/ReadersAndUpdates#ReadersAndUpdates(int,SegmentReader,PendingDeletes).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/ReadersAndUpdates#ReadersAndUpdates(int,SegmentReader,PendingDeletes).mjava","sourceNew":"  /** Init from a previously opened SegmentReader.\n   *\n   * <p>NOTE: steals incoming ref from reader. */\n  ReadersAndUpdates(int indexCreatedVersionMajor, SegmentReader reader, PendingDeletes pendingDeletes) throws IOException {\n    this(indexCreatedVersionMajor, reader.getSegmentInfo(), pendingDeletes);\n    assert pendingDeletes.numPendingDeletes() >= 0\n        : \"got \" + pendingDeletes.numPendingDeletes() + \" reader.numDeletedDocs()=\" + reader.numDeletedDocs() + \" info.getDelCount()=\" + info.getDelCount() + \" maxDoc=\" + reader.maxDoc() + \" numDocs=\" + reader.numDocs();\n    this.reader = reader;\n    pendingDeletes.onNewReader(reader, info);\n  }\n\n","sourceOld":"  /** Init from a previously opened SegmentReader.\n   *\n   * <p>NOTE: steals incoming ref from reader. */\n  ReadersAndUpdates(int indexCreatedVersionMajor, SegmentReader reader, PendingDeletes pendingDeletes) {\n    this(indexCreatedVersionMajor, reader.getSegmentInfo(), reader, pendingDeletes);\n    assert pendingDeletes.numPendingDeletes() >= 0\n        : \"got \" + pendingDeletes.numPendingDeletes() + \" reader.numDeletedDocs()=\" + reader.numDeletedDocs() + \" info.getDelCount()=\" + info.getDelCount() + \" maxDoc=\" + reader.maxDoc() + \" numDocs=\" + reader.numDocs();\n  }\n\n","bugFix":null,"bugIntro":["4987206dabc9f3576bb1df72e987094a7dad6e4f","4987206dabc9f3576bb1df72e987094a7dad6e4f"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"4987206dabc9f3576bb1df72e987094a7dad6e4f","date":1527510516,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/ReadersAndUpdates#ReadersAndUpdates(int,SegmentReader,PendingDeletes).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/ReadersAndUpdates#ReadersAndUpdates(int,SegmentReader,PendingDeletes).mjava","sourceNew":"  /** Init from a previously opened SegmentReader.\n   *\n   * <p>NOTE: steals incoming ref from reader. */\n  ReadersAndUpdates(int indexCreatedVersionMajor, SegmentReader reader, PendingDeletes pendingDeletes) throws IOException {\n    this(indexCreatedVersionMajor, reader.getOriginalSegmentInfo(), pendingDeletes);\n    assert pendingDeletes.numPendingDeletes() >= 0\n        : \"got \" + pendingDeletes.numPendingDeletes() + \" reader.numDeletedDocs()=\" + reader.numDeletedDocs() + \" info.getDelCount()=\" + info.getDelCount() + \" maxDoc=\" + reader.maxDoc() + \" numDocs=\" + reader.numDocs();\n    this.reader = reader;\n    pendingDeletes.onNewReader(reader, info);\n  }\n\n","sourceOld":"  /** Init from a previously opened SegmentReader.\n   *\n   * <p>NOTE: steals incoming ref from reader. */\n  ReadersAndUpdates(int indexCreatedVersionMajor, SegmentReader reader, PendingDeletes pendingDeletes) throws IOException {\n    this(indexCreatedVersionMajor, reader.getSegmentInfo(), pendingDeletes);\n    assert pendingDeletes.numPendingDeletes() >= 0\n        : \"got \" + pendingDeletes.numPendingDeletes() + \" reader.numDeletedDocs()=\" + reader.numDeletedDocs() + \" info.getDelCount()=\" + info.getDelCount() + \" maxDoc=\" + reader.maxDoc() + \" numDocs=\" + reader.numDocs();\n    this.reader = reader;\n    pendingDeletes.onNewReader(reader, info);\n  }\n\n","bugFix":["5ee0394b8176abd7c90a4be8c05465be1879db79"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"aef2a94da918b657d107b616a643e1759db43b6a","date":1527706131,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/ReadersAndUpdates#ReadersAndUpdates(int,SegmentReader,PendingDeletes).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/ReadersAndUpdates#ReadersAndUpdates(int,SegmentReader,PendingDeletes).mjava","sourceNew":"  /** Init from a previously opened SegmentReader.\n   *\n   * <p>NOTE: steals incoming ref from reader. */\n  ReadersAndUpdates(int indexCreatedVersionMajor, SegmentReader reader, PendingDeletes pendingDeletes) throws IOException {\n    this(indexCreatedVersionMajor, reader.getOriginalSegmentInfo(), pendingDeletes);\n    this.reader = reader;\n    pendingDeletes.onNewReader(reader, info);\n  }\n\n","sourceOld":"  /** Init from a previously opened SegmentReader.\n   *\n   * <p>NOTE: steals incoming ref from reader. */\n  ReadersAndUpdates(int indexCreatedVersionMajor, SegmentReader reader, PendingDeletes pendingDeletes) throws IOException {\n    this(indexCreatedVersionMajor, reader.getOriginalSegmentInfo(), pendingDeletes);\n    assert pendingDeletes.numPendingDeletes() >= 0\n        : \"got \" + pendingDeletes.numPendingDeletes() + \" reader.numDeletedDocs()=\" + reader.numDeletedDocs() + \" info.getDelCount()=\" + info.getDelCount() + \" maxDoc=\" + reader.maxDoc() + \" numDocs=\" + reader.numDocs();\n    this.reader = reader;\n    pendingDeletes.onNewReader(reader, info);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"763da4a9605e47013078edc323b9d4b608f0f9e0","date":1555353576,"type":5,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/ReadersAndUpdates#ReadersAndUpdates(int,SegmentReader,PendingDeletes,Map[String,String]).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/ReadersAndUpdates#ReadersAndUpdates(int,SegmentReader,PendingDeletes).mjava","sourceNew":"  /** Init from a previously opened SegmentReader.\n   *\n   * <p>NOTE: steals incoming ref from reader. */\n  ReadersAndUpdates(int indexCreatedVersionMajor, SegmentReader reader, PendingDeletes pendingDeletes,\n                    Map<String, String> readerAttributes) throws IOException {\n    this(indexCreatedVersionMajor, reader.getOriginalSegmentInfo(), pendingDeletes, readerAttributes);\n    this.reader = reader;\n    pendingDeletes.onNewReader(reader, info);\n  }\n\n","sourceOld":"  /** Init from a previously opened SegmentReader.\n   *\n   * <p>NOTE: steals incoming ref from reader. */\n  ReadersAndUpdates(int indexCreatedVersionMajor, SegmentReader reader, PendingDeletes pendingDeletes) throws IOException {\n    this(indexCreatedVersionMajor, reader.getOriginalSegmentInfo(), pendingDeletes);\n    this.reader = reader;\n    pendingDeletes.onNewReader(reader, info);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a4e83191a3e02851a0b67e5335e6922f3e9ea86d","date":1583489709,"type":1,"author":"Bruno Roustant","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/ReadersAndUpdates#ReadersAndUpdates(int,SegmentReader,PendingDeletes).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/ReadersAndUpdates#ReadersAndUpdates(int,SegmentReader,PendingDeletes,Map[String,String]).mjava","sourceNew":"  /** Init from a previously opened SegmentReader.\n   *\n   * <p>NOTE: steals incoming ref from reader. */\n  ReadersAndUpdates(int indexCreatedVersionMajor, SegmentReader reader, PendingDeletes pendingDeletes) throws IOException {\n    this(indexCreatedVersionMajor, reader.getOriginalSegmentInfo(), pendingDeletes);\n    this.reader = reader;\n    pendingDeletes.onNewReader(reader, info);\n  }\n\n","sourceOld":"  /** Init from a previously opened SegmentReader.\n   *\n   * <p>NOTE: steals incoming ref from reader. */\n  ReadersAndUpdates(int indexCreatedVersionMajor, SegmentReader reader, PendingDeletes pendingDeletes,\n                    Map<String, String> readerAttributes) throws IOException {\n    this(indexCreatedVersionMajor, reader.getOriginalSegmentInfo(), pendingDeletes, readerAttributes);\n    this.reader = reader;\n    pendingDeletes.onNewReader(reader, info);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"763da4a9605e47013078edc323b9d4b608f0f9e0":["aef2a94da918b657d107b616a643e1759db43b6a"],"5ee0394b8176abd7c90a4be8c05465be1879db79":["aa5e39259dfd4a68287c824d3b7e1bc9097dc895"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"aa5e39259dfd4a68287c824d3b7e1bc9097dc895":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","d60c1bb96a28a26d197c36299f7b6c9c5da617a1"],"d60c1bb96a28a26d197c36299f7b6c9c5da617a1":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"aef2a94da918b657d107b616a643e1759db43b6a":["4987206dabc9f3576bb1df72e987094a7dad6e4f"],"4987206dabc9f3576bb1df72e987094a7dad6e4f":["5ee0394b8176abd7c90a4be8c05465be1879db79"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a4e83191a3e02851a0b67e5335e6922f3e9ea86d"],"a4e83191a3e02851a0b67e5335e6922f3e9ea86d":["763da4a9605e47013078edc323b9d4b608f0f9e0"]},"commit2Childs":{"763da4a9605e47013078edc323b9d4b608f0f9e0":["a4e83191a3e02851a0b67e5335e6922f3e9ea86d"],"5ee0394b8176abd7c90a4be8c05465be1879db79":["4987206dabc9f3576bb1df72e987094a7dad6e4f"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["aa5e39259dfd4a68287c824d3b7e1bc9097dc895","d60c1bb96a28a26d197c36299f7b6c9c5da617a1"],"aa5e39259dfd4a68287c824d3b7e1bc9097dc895":["5ee0394b8176abd7c90a4be8c05465be1879db79"],"d60c1bb96a28a26d197c36299f7b6c9c5da617a1":["aa5e39259dfd4a68287c824d3b7e1bc9097dc895"],"aef2a94da918b657d107b616a643e1759db43b6a":["763da4a9605e47013078edc323b9d4b608f0f9e0"],"4987206dabc9f3576bb1df72e987094a7dad6e4f":["aef2a94da918b657d107b616a643e1759db43b6a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"a4e83191a3e02851a0b67e5335e6922f3e9ea86d":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}