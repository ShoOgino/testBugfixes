{"path":"solr/contrib/dataimporthandler-extras/src/java/org/apache/solr/handler/dataimport/MailEntityProcessor#getNextMail().mjava","commits":[{"id":"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91","date":1306767085,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/contrib/dataimporthandler-extras/src/java/org/apache/solr/handler/dataimport/MailEntityProcessor#getNextMail().mjava","pathOld":"solr/contrib/dataimporthandler-extras/src/main/java/org/apache/solr/handler/dataimport/MailEntityProcessor#getNextMail().mjava","sourceNew":"  private Message getNextMail() {\n    if (!connected) {\n      if (!connectToMailBox())\n        return null;\n      connected = true;\n    }\n    if (folderIter == null) {\n      createFilters();\n      folderIter = new FolderIterator(mailbox);\n    }\n    // get next message from the folder\n    // if folder is exhausted get next folder\n    // loop till a valid mail or all folders exhausted.\n    while (msgIter == null || !msgIter.hasNext()) {\n      Folder next = folderIter.hasNext() ? folderIter.next() : null;\n      if (next == null) {\n        return null;\n      }\n      msgIter = new MessageIterator(next, batchSize);\n    }\n    return msgIter.next();\n  }\n\n","sourceOld":"  private Message getNextMail() {\n    if (!connected) {\n      if (!connectToMailBox())\n        return null;\n      connected = true;\n    }\n    if (folderIter == null) {\n      createFilters();\n      folderIter = new FolderIterator(mailbox);\n    }\n    // get next message from the folder\n    // if folder is exhausted get next folder\n    // loop till a valid mail or all folders exhausted.\n    while (msgIter == null || !msgIter.hasNext()) {\n      Folder next = folderIter.hasNext() ? folderIter.next() : null;\n      if (next == null) {\n        return null;\n      }\n      msgIter = new MessageIterator(next, batchSize);\n    }\n    return msgIter.next();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/contrib/dataimporthandler-extras/src/java/org/apache/solr/handler/dataimport/MailEntityProcessor#getNextMail().mjava","pathOld":"solr/contrib/dataimporthandler/src/extras/main/java/org/apache/solr/handler/dataimport/MailEntityProcessor#getNextMail().mjava","sourceNew":"  private Message getNextMail() {\n    if (!connected) {\n      if (!connectToMailBox())\n        return null;\n      connected = true;\n    }\n    if (folderIter == null) {\n      createFilters();\n      folderIter = new FolderIterator(mailbox);\n    }\n    // get next message from the folder\n    // if folder is exhausted get next folder\n    // loop till a valid mail or all folders exhausted.\n    while (msgIter == null || !msgIter.hasNext()) {\n      Folder next = folderIter.hasNext() ? folderIter.next() : null;\n      if (next == null) {\n        return null;\n      }\n      msgIter = new MessageIterator(next, batchSize);\n    }\n    return msgIter.next();\n  }\n\n","sourceOld":"  private Message getNextMail() {\n    if (!connected) {\n      if (!connectToMailBox())\n        return null;\n      connected = true;\n    }\n    if (folderIter == null) {\n      createFilters();\n      folderIter = new FolderIterator(mailbox);\n    }\n    // get next message from the folder\n    // if folder is exhausted get next folder\n    // loop till a valid mail or all folders exhausted.\n    while (msgIter == null || !msgIter.hasNext()) {\n      Folder next = folderIter.hasNext() ? folderIter.next() : null;\n      if (next == null) {\n        return null;\n      }\n      msgIter = new MessageIterator(next, batchSize);\n    }\n    return msgIter.next();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"36113efe922ae370819b20fba837a1a37d3dd2d8","date":1404234826,"type":3,"author":"Timothy Potter","isMerge":false,"pathNew":"solr/contrib/dataimporthandler-extras/src/java/org/apache/solr/handler/dataimport/MailEntityProcessor#getNextMail().mjava","pathOld":"solr/contrib/dataimporthandler-extras/src/java/org/apache/solr/handler/dataimport/MailEntityProcessor#getNextMail().mjava","sourceNew":"  private Message getNextMail() {\n    if (!connected) {\n      if (!connectToMailBox()) return null;\n      connected = true;\n    }\n    if (folderIter == null) {\n      createFilters();\n      folderIter = new FolderIterator(mailbox);\n    }\n    // get next message from the folder\n    // if folder is exhausted get next folder\n    // loop till a valid mail or all folders exhausted.\n    while (msgIter == null || !msgIter.hasNext()) {\n      Folder next = folderIter.hasNext() ? folderIter.next() : null;\n      if (next == null) return null;\n      \n      msgIter = new MessageIterator(next, batchSize);\n    }\n    return msgIter.next();\n  }\n\n","sourceOld":"  private Message getNextMail() {\n    if (!connected) {\n      if (!connectToMailBox())\n        return null;\n      connected = true;\n    }\n    if (folderIter == null) {\n      createFilters();\n      folderIter = new FolderIterator(mailbox);\n    }\n    // get next message from the folder\n    // if folder is exhausted get next folder\n    // loop till a valid mail or all folders exhausted.\n    while (msgIter == null || !msgIter.hasNext()) {\n      Folder next = folderIter.hasNext() ? folderIter.next() : null;\n      if (next == null) {\n        return null;\n      }\n      msgIter = new MessageIterator(next, batchSize);\n    }\n    return msgIter.next();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0bac5e4f5082317c9a942b1deeeb22d6700ecff7","date":1404338458,"type":3,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"solr/contrib/dataimporthandler-extras/src/java/org/apache/solr/handler/dataimport/MailEntityProcessor#getNextMail().mjava","pathOld":"solr/contrib/dataimporthandler-extras/src/java/org/apache/solr/handler/dataimport/MailEntityProcessor#getNextMail().mjava","sourceNew":"  private Message getNextMail() {\n    if (!connected) {\n      if (!connectToMailBox())\n        return null;\n      connected = true;\n    }\n    if (folderIter == null) {\n      createFilters();\n      folderIter = new FolderIterator(mailbox);\n    }\n    // get next message from the folder\n    // if folder is exhausted get next folder\n    // loop till a valid mail or all folders exhausted.\n    while (msgIter == null || !msgIter.hasNext()) {\n      Folder next = folderIter.hasNext() ? folderIter.next() : null;\n      if (next == null) {\n        return null;\n      }\n      msgIter = new MessageIterator(next, batchSize);\n    }\n    return msgIter.next();\n  }\n\n","sourceOld":"  private Message getNextMail() {\n    if (!connected) {\n      if (!connectToMailBox()) return null;\n      connected = true;\n    }\n    if (folderIter == null) {\n      createFilters();\n      folderIter = new FolderIterator(mailbox);\n    }\n    // get next message from the folder\n    // if folder is exhausted get next folder\n    // loop till a valid mail or all folders exhausted.\n    while (msgIter == null || !msgIter.hasNext()) {\n      Folder next = folderIter.hasNext() ? folderIter.next() : null;\n      if (next == null) return null;\n      \n      msgIter = new MessageIterator(next, batchSize);\n    }\n    return msgIter.next();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0cd303657ee7726e12c45f9fd39b0285acf10c07","date":1405460668,"type":3,"author":"Timothy Potter","isMerge":false,"pathNew":"solr/contrib/dataimporthandler-extras/src/java/org/apache/solr/handler/dataimport/MailEntityProcessor#getNextMail().mjava","pathOld":"solr/contrib/dataimporthandler-extras/src/java/org/apache/solr/handler/dataimport/MailEntityProcessor#getNextMail().mjava","sourceNew":"  private Message getNextMail() {\n    if (!connected) {\n      if (!connectToMailBox()) return null;\n      connected = true;\n    }\n    if (folderIter == null) {\n      createFilters();\n      folderIter = new FolderIterator(mailbox);\n    }\n    // get next message from the folder\n    // if folder is exhausted get next folder\n    // loop till a valid mail or all folders exhausted.\n    while (msgIter == null || !msgIter.hasNext()) {\n      Folder next = folderIter.hasNext() ? folderIter.next() : null;\n      if (next == null) return null;\n      \n      msgIter = new MessageIterator(next, batchSize);\n    }\n    return msgIter.next();\n  }\n\n","sourceOld":"  private Message getNextMail() {\n    if (!connected) {\n      if (!connectToMailBox())\n        return null;\n      connected = true;\n    }\n    if (folderIter == null) {\n      createFilters();\n      folderIter = new FolderIterator(mailbox);\n    }\n    // get next message from the folder\n    // if folder is exhausted get next folder\n    // loop till a valid mail or all folders exhausted.\n    while (msgIter == null || !msgIter.hasNext()) {\n      Folder next = folderIter.hasNext() ? folderIter.next() : null;\n      if (next == null) {\n        return null;\n      }\n      msgIter = new MessageIterator(next, batchSize);\n    }\n    return msgIter.next();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5a2748831fb25b0e9d5a4c315047bf877c887460","date":1498155650,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"solr/contrib/dataimporthandler-extras/src/java/org/apache/solr/handler/dataimport/MailEntityProcessor#getNextMail().mjava","pathOld":"solr/contrib/dataimporthandler-extras/src/java/org/apache/solr/handler/dataimport/MailEntityProcessor#getNextMail().mjava","sourceNew":"  private Message getNextMail() {\n    if (!connected) {\n      // this is needed to load the activation mail stuff correctly\n      // otherwise, the JavaMail multipart support doesn't get configured\n      // correctly, which leads to a class cast exception when processing\n      // multipart messages: IMAPInputStream cannot be cast to\n      // javax.mail.Multipart    \n      if (false == withContextClassLoader(getClass().getClassLoader(), this::connectToMailBox)) {\n        return null;\n      }\n      connected = true;\n    }\n    if (folderIter == null) {\n      createFilters();\n      folderIter = new FolderIterator(mailbox);\n    }\n    // get next message from the folder\n    // if folder is exhausted get next folder\n    // loop till a valid mail or all folders exhausted.\n    while (msgIter == null || !msgIter.hasNext()) {\n      Folder next = folderIter.hasNext() ? folderIter.next() : null;\n      if (next == null) return null;\n      \n      msgIter = new MessageIterator(next, batchSize);\n    }\n    return msgIter.next();\n  }\n\n","sourceOld":"  private Message getNextMail() {\n    if (!connected) {\n      if (!connectToMailBox()) return null;\n      connected = true;\n    }\n    if (folderIter == null) {\n      createFilters();\n      folderIter = new FolderIterator(mailbox);\n    }\n    // get next message from the folder\n    // if folder is exhausted get next folder\n    // loop till a valid mail or all folders exhausted.\n    while (msgIter == null || !msgIter.hasNext()) {\n      Folder next = folderIter.hasNext() ? folderIter.next() : null;\n      if (next == null) return null;\n      \n      msgIter = new MessageIterator(next, batchSize);\n    }\n    return msgIter.next();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b7dfa64bc2074fb87d0ca70095a644c1ead107e1","date":1498356339,"type":3,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"solr/contrib/dataimporthandler-extras/src/java/org/apache/solr/handler/dataimport/MailEntityProcessor#getNextMail().mjava","pathOld":"solr/contrib/dataimporthandler-extras/src/java/org/apache/solr/handler/dataimport/MailEntityProcessor#getNextMail().mjava","sourceNew":"  private Message getNextMail() {\n    if (!connected) {\n      // this is needed to load the activation mail stuff correctly\n      // otherwise, the JavaMail multipart support doesn't get configured\n      // correctly, which leads to a class cast exception when processing\n      // multipart messages: IMAPInputStream cannot be cast to\n      // javax.mail.Multipart    \n      if (false == withContextClassLoader(getClass().getClassLoader(), this::connectToMailBox)) {\n        return null;\n      }\n      connected = true;\n    }\n    if (folderIter == null) {\n      createFilters();\n      folderIter = new FolderIterator(mailbox);\n    }\n    // get next message from the folder\n    // if folder is exhausted get next folder\n    // loop till a valid mail or all folders exhausted.\n    while (msgIter == null || !msgIter.hasNext()) {\n      Folder next = folderIter.hasNext() ? folderIter.next() : null;\n      if (next == null) return null;\n      \n      msgIter = new MessageIterator(next, batchSize);\n    }\n    return msgIter.next();\n  }\n\n","sourceOld":"  private Message getNextMail() {\n    if (!connected) {\n      if (!connectToMailBox()) return null;\n      connected = true;\n    }\n    if (folderIter == null) {\n      createFilters();\n      folderIter = new FolderIterator(mailbox);\n    }\n    // get next message from the folder\n    // if folder is exhausted get next folder\n    // loop till a valid mail or all folders exhausted.\n    while (msgIter == null || !msgIter.hasNext()) {\n      Folder next = folderIter.hasNext() ? folderIter.next() : null;\n      if (next == null) return null;\n      \n      msgIter = new MessageIterator(next, batchSize);\n    }\n    return msgIter.next();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"28288370235ed02234a64753cdbf0c6ec096304a","date":1498726817,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"solr/contrib/dataimporthandler-extras/src/java/org/apache/solr/handler/dataimport/MailEntityProcessor#getNextMail().mjava","pathOld":"solr/contrib/dataimporthandler-extras/src/java/org/apache/solr/handler/dataimport/MailEntityProcessor#getNextMail().mjava","sourceNew":"  private Message getNextMail() {\n    if (!connected) {\n      // this is needed to load the activation mail stuff correctly\n      // otherwise, the JavaMail multipart support doesn't get configured\n      // correctly, which leads to a class cast exception when processing\n      // multipart messages: IMAPInputStream cannot be cast to\n      // javax.mail.Multipart    \n      if (false == withContextClassLoader(getClass().getClassLoader(), this::connectToMailBox)) {\n        return null;\n      }\n      connected = true;\n    }\n    if (folderIter == null) {\n      createFilters();\n      folderIter = new FolderIterator(mailbox);\n    }\n    // get next message from the folder\n    // if folder is exhausted get next folder\n    // loop till a valid mail or all folders exhausted.\n    while (msgIter == null || !msgIter.hasNext()) {\n      Folder next = folderIter.hasNext() ? folderIter.next() : null;\n      if (next == null) return null;\n      \n      msgIter = new MessageIterator(next, batchSize);\n    }\n    return msgIter.next();\n  }\n\n","sourceOld":"  private Message getNextMail() {\n    if (!connected) {\n      if (!connectToMailBox()) return null;\n      connected = true;\n    }\n    if (folderIter == null) {\n      createFilters();\n      folderIter = new FolderIterator(mailbox);\n    }\n    // get next message from the folder\n    // if folder is exhausted get next folder\n    // loop till a valid mail or all folders exhausted.\n    while (msgIter == null || !msgIter.hasNext()) {\n      Folder next = folderIter.hasNext() ? folderIter.next() : null;\n      if (next == null) return null;\n      \n      msgIter = new MessageIterator(next, batchSize);\n    }\n    return msgIter.next();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d2c8f5c46c2501b61e2f55eb7ee59e6c5372290b","date":1598712724,"type":4,"author":"Alexandre Rafalovitch","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/contrib/dataimporthandler-extras/src/java/org/apache/solr/handler/dataimport/MailEntityProcessor#getNextMail().mjava","sourceNew":null,"sourceOld":"  private Message getNextMail() {\n    if (!connected) {\n      // this is needed to load the activation mail stuff correctly\n      // otherwise, the JavaMail multipart support doesn't get configured\n      // correctly, which leads to a class cast exception when processing\n      // multipart messages: IMAPInputStream cannot be cast to\n      // javax.mail.Multipart    \n      if (false == withContextClassLoader(getClass().getClassLoader(), this::connectToMailBox)) {\n        return null;\n      }\n      connected = true;\n    }\n    if (folderIter == null) {\n      createFilters();\n      folderIter = new FolderIterator(mailbox);\n    }\n    // get next message from the folder\n    // if folder is exhausted get next folder\n    // loop till a valid mail or all folders exhausted.\n    while (msgIter == null || !msgIter.hasNext()) {\n      Folder next = folderIter.hasNext() ? folderIter.next() : null;\n      if (next == null) return null;\n      \n      msgIter = new MessageIterator(next, batchSize);\n    }\n    return msgIter.next();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"d2c8f5c46c2501b61e2f55eb7ee59e6c5372290b":["28288370235ed02234a64753cdbf0c6ec096304a"],"36113efe922ae370819b20fba837a1a37d3dd2d8":["c26f00b574427b55127e869b935845554afde1fa"],"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"c26f00b574427b55127e869b935845554afde1fa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","5128b7b3b73fedff05fdc5ea2e6be53c1020bb91"],"5a2748831fb25b0e9d5a4c315047bf877c887460":["0cd303657ee7726e12c45f9fd39b0285acf10c07"],"0bac5e4f5082317c9a942b1deeeb22d6700ecff7":["36113efe922ae370819b20fba837a1a37d3dd2d8"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"0cd303657ee7726e12c45f9fd39b0285acf10c07":["0bac5e4f5082317c9a942b1deeeb22d6700ecff7"],"b7dfa64bc2074fb87d0ca70095a644c1ead107e1":["0cd303657ee7726e12c45f9fd39b0285acf10c07","5a2748831fb25b0e9d5a4c315047bf877c887460"],"28288370235ed02234a64753cdbf0c6ec096304a":["0cd303657ee7726e12c45f9fd39b0285acf10c07","5a2748831fb25b0e9d5a4c315047bf877c887460"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["d2c8f5c46c2501b61e2f55eb7ee59e6c5372290b"]},"commit2Childs":{"d2c8f5c46c2501b61e2f55eb7ee59e6c5372290b":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"36113efe922ae370819b20fba837a1a37d3dd2d8":["0bac5e4f5082317c9a942b1deeeb22d6700ecff7"],"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91":["c26f00b574427b55127e869b935845554afde1fa"],"c26f00b574427b55127e869b935845554afde1fa":["36113efe922ae370819b20fba837a1a37d3dd2d8"],"5a2748831fb25b0e9d5a4c315047bf877c887460":["b7dfa64bc2074fb87d0ca70095a644c1ead107e1","28288370235ed02234a64753cdbf0c6ec096304a"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["5128b7b3b73fedff05fdc5ea2e6be53c1020bb91","c26f00b574427b55127e869b935845554afde1fa"],"0bac5e4f5082317c9a942b1deeeb22d6700ecff7":["0cd303657ee7726e12c45f9fd39b0285acf10c07"],"0cd303657ee7726e12c45f9fd39b0285acf10c07":["5a2748831fb25b0e9d5a4c315047bf877c887460","b7dfa64bc2074fb87d0ca70095a644c1ead107e1","28288370235ed02234a64753cdbf0c6ec096304a"],"b7dfa64bc2074fb87d0ca70095a644c1ead107e1":[],"28288370235ed02234a64753cdbf0c6ec096304a":["d2c8f5c46c2501b61e2f55eb7ee59e6c5372290b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["b7dfa64bc2074fb87d0ca70095a644c1ead107e1","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}