{"path":"lucene/core/src/java/org/apache/lucene/search/spans/SpanPositionRangeQuery#acceptPosition(Spans).mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/spans/SpanPositionRangeQuery#acceptPosition(Spans).mjava","pathOld":"lucene/src/java/org/apache/lucene/search/spans/SpanPositionRangeQuery#acceptPosition(Spans).mjava","sourceNew":"  @Override\n  protected AcceptStatus acceptPosition(Spans spans) throws IOException {\n    assert spans.start() != spans.end();\n    if (spans.start() >= end)\n      return AcceptStatus.NO_AND_ADVANCE;\n    else if (spans.start() >= start && spans.end() <= end)\n      return AcceptStatus.YES;\n    else\n      return AcceptStatus.NO;\n  }\n\n","sourceOld":"  @Override\n  protected AcceptStatus acceptPosition(Spans spans) throws IOException {\n    assert spans.start() != spans.end();\n    if (spans.start() >= end)\n      return AcceptStatus.NO_AND_ADVANCE;\n    else if (spans.start() >= start && spans.end() <= end)\n      return AcceptStatus.YES;\n    else\n      return AcceptStatus.NO;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"30de45e50bdc1a79a6797f34dca6271c8866cb6e","date":1427790465,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/spans/SpanPositionRangeQuery#acceptPosition(Spans).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/spans/SpanPositionRangeQuery#acceptPosition(Spans).mjava","sourceNew":"  @Override\n  protected AcceptStatus acceptPosition(Spans spans) throws IOException {\n    assert spans.startPosition() != spans.endPosition();\n    AcceptStatus res = (spans.startPosition() >= end)\n                      ? AcceptStatus.NO_MORE_IN_CURRENT_DOC\n                      : (spans.startPosition() >= start && spans.endPosition() <= end)\n                      ? AcceptStatus.YES : AcceptStatus.NO;\n    return res;\n  }\n\n","sourceOld":"  @Override\n  protected AcceptStatus acceptPosition(Spans spans) throws IOException {\n    assert spans.start() != spans.end();\n    if (spans.start() >= end)\n      return AcceptStatus.NO_AND_ADVANCE;\n    else if (spans.start() >= start && spans.end() <= end)\n      return AcceptStatus.YES;\n    else\n      return AcceptStatus.NO;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fab172655716b96f7e42376116235017a922de3a","date":1427850611,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/search/spans/SpanPositionRangeQuery#acceptPosition(Spans).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/spans/SpanPositionRangeQuery#acceptPosition(Spans).mjava","sourceNew":"  @Override\n  protected AcceptStatus acceptPosition(Spans spans) throws IOException {\n    assert spans.startPosition() != spans.endPosition();\n    AcceptStatus res = (spans.startPosition() >= end)\n                      ? AcceptStatus.NO_MORE_IN_CURRENT_DOC\n                      : (spans.startPosition() >= start && spans.endPosition() <= end)\n                      ? AcceptStatus.YES : AcceptStatus.NO;\n    return res;\n  }\n\n","sourceOld":"  @Override\n  protected AcceptStatus acceptPosition(Spans spans) throws IOException {\n    assert spans.start() != spans.end();\n    if (spans.start() >= end)\n      return AcceptStatus.NO_AND_ADVANCE;\n    else if (spans.start() >= start && spans.end() <= end)\n      return AcceptStatus.YES;\n    else\n      return AcceptStatus.NO;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8f6e2f8b5923e09c68fcefca2b75678c8d9c89f2","date":1432114286,"type":5,"author":"Alan Woodward","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/spans/SpanPositionRangeQuery#acceptPosition(Spans,SpanCollector).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/spans/SpanPositionRangeQuery#acceptPosition(Spans).mjava","sourceNew":"  @Override\n  protected AcceptStatus acceptPosition(Spans spans, SpanCollector collector) throws IOException {\n    assert spans.startPosition() != spans.endPosition();\n    AcceptStatus res = (spans.startPosition() >= end)\n                      ? AcceptStatus.NO_MORE_IN_CURRENT_DOC\n                      : (spans.startPosition() >= start && spans.endPosition() <= end)\n                      ? AcceptStatus.YES : AcceptStatus.NO;\n    return res;\n  }\n\n","sourceOld":"  @Override\n  protected AcceptStatus acceptPosition(Spans spans) throws IOException {\n    assert spans.startPosition() != spans.endPosition();\n    AcceptStatus res = (spans.startPosition() >= end)\n                      ? AcceptStatus.NO_MORE_IN_CURRENT_DOC\n                      : (spans.startPosition() >= start && spans.endPosition() <= end)\n                      ? AcceptStatus.YES : AcceptStatus.NO;\n    return res;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"29aea3139c4326c0501d75d51059855463220279","date":1433952060,"type":1,"author":"Alan Woodward","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/spans/SpanPositionRangeQuery#acceptPosition(Spans).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/spans/SpanPositionRangeQuery#acceptPosition(Spans,SpanCollector).mjava","sourceNew":"  @Override\n  protected AcceptStatus acceptPosition(Spans spans) throws IOException {\n    assert spans.startPosition() != spans.endPosition();\n    AcceptStatus res = (spans.startPosition() >= end)\n        ? AcceptStatus.NO_MORE_IN_CURRENT_DOC\n        : (spans.startPosition() >= start && spans.endPosition() <= end)\n        ? AcceptStatus.YES : AcceptStatus.NO;\n    return res;\n  }\n\n","sourceOld":"  @Override\n  protected AcceptStatus acceptPosition(Spans spans, SpanCollector collector) throws IOException {\n    assert spans.startPosition() != spans.endPosition();\n    AcceptStatus res = (spans.startPosition() >= end)\n                      ? AcceptStatus.NO_MORE_IN_CURRENT_DOC\n                      : (spans.startPosition() >= start && spans.endPosition() <= end)\n                      ? AcceptStatus.YES : AcceptStatus.NO;\n    return res;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"29aea3139c4326c0501d75d51059855463220279":["8f6e2f8b5923e09c68fcefca2b75678c8d9c89f2"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"8f6e2f8b5923e09c68fcefca2b75678c8d9c89f2":["30de45e50bdc1a79a6797f34dca6271c8866cb6e"],"30de45e50bdc1a79a6797f34dca6271c8866cb6e":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"fab172655716b96f7e42376116235017a922de3a":["3a119bbc8703c10faa329ec201c654b3a35a1e3e","30de45e50bdc1a79a6797f34dca6271c8866cb6e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["29aea3139c4326c0501d75d51059855463220279"]},"commit2Childs":{"29aea3139c4326c0501d75d51059855463220279":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["30de45e50bdc1a79a6797f34dca6271c8866cb6e","fab172655716b96f7e42376116235017a922de3a"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"8f6e2f8b5923e09c68fcefca2b75678c8d9c89f2":["29aea3139c4326c0501d75d51059855463220279"],"30de45e50bdc1a79a6797f34dca6271c8866cb6e":["8f6e2f8b5923e09c68fcefca2b75678c8d9c89f2","fab172655716b96f7e42376116235017a922de3a"],"fab172655716b96f7e42376116235017a922de3a":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["fab172655716b96f7e42376116235017a922de3a","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}