{"path":"modules/join/src/java/org/apache/lucene/search/join/BlockJoinQuery#rewrite(IndexReader).mjava","commits":[{"id":"97e30c53fd81463c6ccd52402c91a6548cf42acb","date":1309296018,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"modules/join/src/java/org/apache/lucene/search/join/BlockJoinQuery#rewrite(IndexReader).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public Query rewrite(IndexReader reader) throws IOException {\n    final Query childRewrite = childQuery.rewrite(reader);\n    if (childRewrite != childQuery) {\n      return new BlockJoinQuery(childQuery,\n                                childRewrite,\n                                parentsFilter,\n                                scoreMode);\n    } else {\n      return this;\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["92a60d15b1eda5fff67e163992fb129a0831493f","200b7947d6511b7efec84c7060730370ecb305d4"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"817d8435e9135b756f08ce6710ab0baac51bdf88","date":1309986993,"type":0,"author":"Steven Rowe","isMerge":true,"pathNew":"modules/join/src/java/org/apache/lucene/search/join/BlockJoinQuery#rewrite(IndexReader).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public Query rewrite(IndexReader reader) throws IOException {\n    final Query childRewrite = childQuery.rewrite(reader);\n    if (childRewrite != childQuery) {\n      return new BlockJoinQuery(childQuery,\n                                childRewrite,\n                                parentsFilter,\n                                scoreMode);\n    } else {\n      return this;\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d083e83f225b11e5fdd900e83d26ddb385b6955c","date":1310029438,"type":0,"author":"Simon Willnauer","isMerge":true,"pathNew":"modules/join/src/java/org/apache/lucene/search/join/BlockJoinQuery#rewrite(IndexReader).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public Query rewrite(IndexReader reader) throws IOException {\n    final Query childRewrite = childQuery.rewrite(reader);\n    if (childRewrite != childQuery) {\n      return new BlockJoinQuery(childQuery,\n                                childRewrite,\n                                parentsFilter,\n                                scoreMode);\n    } else {\n      return this;\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"92a60d15b1eda5fff67e163992fb129a0831493f","date":1317927157,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"modules/join/src/java/org/apache/lucene/search/join/BlockJoinQuery#rewrite(IndexReader).mjava","pathOld":"modules/join/src/java/org/apache/lucene/search/join/BlockJoinQuery#rewrite(IndexReader).mjava","sourceNew":"  @Override\n  public Query rewrite(IndexReader reader) throws IOException {\n    final Query childRewrite = childQuery.rewrite(reader);\n    if (childRewrite != childQuery) {\n      Query rewritten = new BlockJoinQuery(childQuery,\n                                childRewrite,\n                                parentsFilter,\n                                scoreMode);\n      rewritten.setBoost(getBoost());\n      return rewritten;\n    } else {\n      return this;\n    }\n  }\n\n","sourceOld":"  @Override\n  public Query rewrite(IndexReader reader) throws IOException {\n    final Query childRewrite = childQuery.rewrite(reader);\n    if (childRewrite != childQuery) {\n      return new BlockJoinQuery(childQuery,\n                                childRewrite,\n                                parentsFilter,\n                                scoreMode);\n    } else {\n      return this;\n    }\n  }\n\n","bugFix":["97e30c53fd81463c6ccd52402c91a6548cf42acb"],"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"6bd4a7478aca8c3880512b730b28bf3239340635","date":1326554224,"type":5,"author":"Michael McCandless","isMerge":false,"pathNew":"modules/join/src/java/org/apache/lucene/search/join/ToParentBlockJoinQuery#rewrite(IndexReader).mjava","pathOld":"modules/join/src/java/org/apache/lucene/search/join/BlockJoinQuery#rewrite(IndexReader).mjava","sourceNew":"  @Override\n  public Query rewrite(IndexReader reader) throws IOException {\n    final Query childRewrite = childQuery.rewrite(reader);\n    if (childRewrite != childQuery) {\n      Query rewritten = new ToParentBlockJoinQuery(childQuery,\n                                childRewrite,\n                                parentsFilter,\n                                scoreMode);\n      rewritten.setBoost(getBoost());\n      return rewritten;\n    } else {\n      return this;\n    }\n  }\n\n","sourceOld":"  @Override\n  public Query rewrite(IndexReader reader) throws IOException {\n    final Query childRewrite = childQuery.rewrite(reader);\n    if (childRewrite != childQuery) {\n      Query rewritten = new BlockJoinQuery(childQuery,\n                                childRewrite,\n                                parentsFilter,\n                                scoreMode);\n      rewritten.setBoost(getBoost());\n      return rewritten;\n    } else {\n      return this;\n    }\n  }\n\n","bugFix":null,"bugIntro":["ad158e4c28c7c33b7d3fd5c187a183d014d1f6ea"],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"6bd4a7478aca8c3880512b730b28bf3239340635":["92a60d15b1eda5fff67e163992fb129a0831493f"],"97e30c53fd81463c6ccd52402c91a6548cf42acb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"92a60d15b1eda5fff67e163992fb129a0831493f":["97e30c53fd81463c6ccd52402c91a6548cf42acb"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"d083e83f225b11e5fdd900e83d26ddb385b6955c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","97e30c53fd81463c6ccd52402c91a6548cf42acb"],"817d8435e9135b756f08ce6710ab0baac51bdf88":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","97e30c53fd81463c6ccd52402c91a6548cf42acb"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["6bd4a7478aca8c3880512b730b28bf3239340635"]},"commit2Childs":{"6bd4a7478aca8c3880512b730b28bf3239340635":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"97e30c53fd81463c6ccd52402c91a6548cf42acb":["92a60d15b1eda5fff67e163992fb129a0831493f","d083e83f225b11e5fdd900e83d26ddb385b6955c","817d8435e9135b756f08ce6710ab0baac51bdf88"],"92a60d15b1eda5fff67e163992fb129a0831493f":["6bd4a7478aca8c3880512b730b28bf3239340635"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["97e30c53fd81463c6ccd52402c91a6548cf42acb","d083e83f225b11e5fdd900e83d26ddb385b6955c","817d8435e9135b756f08ce6710ab0baac51bdf88"],"d083e83f225b11e5fdd900e83d26ddb385b6955c":[],"817d8435e9135b756f08ce6710ab0baac51bdf88":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["d083e83f225b11e5fdd900e83d26ddb385b6955c","817d8435e9135b756f08ce6710ab0baac51bdf88","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}