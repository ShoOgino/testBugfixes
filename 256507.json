{"path":"lucene/core/src/java/org/apache/lucene/search/BooleanWeight#BooleanWeight(BooleanQuery,IndexSearcher,int,boolean).mjava","commits":[{"id":"954e59be3da8dc1b046646ad7af4b466852009d3","date":1423482367,"type":1,"author":"Alan Woodward","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/BooleanWeight#BooleanWeight(BooleanQuery,IndexSearcher,int,boolean).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/BooleanWeight#BooleanWeight(BooleanQuery,IndexSearcher,boolean,boolean).mjava","sourceNew":"  public BooleanWeight(BooleanQuery query, IndexSearcher searcher, int postingsFlags, boolean disableCoord) throws IOException {\n    super(query);\n    this.query = query;\n    this.needsScores = (postingsFlags & PostingsEnum.FLAG_FREQS) != 0;\n    this.similarity = searcher.getSimilarity();\n    this.disableCoord = disableCoord;\n    weights = new ArrayList<>(query.clauses().size());\n    for (int i = 0 ; i < query.clauses().size(); i++) {\n      BooleanClause c = query.clauses().get(i);\n      final int subQueryFlags = c.getOccur() == Occur.MUST_NOT ? PostingsEnum.FLAG_NONE : postingsFlags;\n      Weight w = c.getQuery().createWeight(searcher, subQueryFlags);\n      weights.add(w);\n      if (!c.isProhibited()) {\n        maxCoord++;\n      }\n    }\n  }\n\n","sourceOld":"  public BooleanWeight(BooleanQuery query, IndexSearcher searcher, boolean needsScores, boolean disableCoord) throws IOException {\n    super(query);\n    this.query = query;\n    this.needsScores = needsScores;\n    this.similarity = searcher.getSimilarity();\n    this.disableCoord = disableCoord;\n    weights = new ArrayList<>(query.clauses().size());\n    for (int i = 0 ; i < query.clauses().size(); i++) {\n      BooleanClause c = query.clauses().get(i);\n      final boolean queryNeedsScores = needsScores && c.getOccur() != Occur.MUST_NOT;\n      Weight w = c.getQuery().createWeight(searcher, queryNeedsScores);\n      weights.add(w);\n      if (!c.isProhibited()) {\n        maxCoord++;\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6a47d642ab24da1a811adce4bda9cc52c520ca13","date":1423483323,"type":5,"author":"Alan Woodward","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/BooleanWeight#BooleanWeight(BooleanQuery,IndexSearcher,boolean,boolean).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/BooleanWeight#BooleanWeight(BooleanQuery,IndexSearcher,int,boolean).mjava","sourceNew":"  public BooleanWeight(BooleanQuery query, IndexSearcher searcher, boolean needsScores, boolean disableCoord) throws IOException {\n    super(query);\n    this.query = query;\n    this.needsScores = needsScores;\n    this.similarity = searcher.getSimilarity();\n    this.disableCoord = disableCoord;\n    weights = new ArrayList<>(query.clauses().size());\n    for (int i = 0 ; i < query.clauses().size(); i++) {\n      BooleanClause c = query.clauses().get(i);\n      final boolean queryNeedsScores = needsScores && c.getOccur() != Occur.MUST_NOT;\n      Weight w = c.getQuery().createWeight(searcher, queryNeedsScores);\n      weights.add(w);\n      if (!c.isProhibited()) {\n        maxCoord++;\n      }\n    }\n  }\n\n","sourceOld":"  public BooleanWeight(BooleanQuery query, IndexSearcher searcher, int postingsFlags, boolean disableCoord) throws IOException {\n    super(query);\n    this.query = query;\n    this.needsScores = (postingsFlags & PostingsEnum.FLAG_FREQS) != 0;\n    this.similarity = searcher.getSimilarity();\n    this.disableCoord = disableCoord;\n    weights = new ArrayList<>(query.clauses().size());\n    for (int i = 0 ; i < query.clauses().size(); i++) {\n      BooleanClause c = query.clauses().get(i);\n      final int subQueryFlags = c.getOccur() == Occur.MUST_NOT ? PostingsEnum.FLAG_NONE : postingsFlags;\n      Weight w = c.getQuery().createWeight(searcher, subQueryFlags);\n      weights.add(w);\n      if (!c.isProhibited()) {\n        maxCoord++;\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"6a47d642ab24da1a811adce4bda9cc52c520ca13":["954e59be3da8dc1b046646ad7af4b466852009d3"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"954e59be3da8dc1b046646ad7af4b466852009d3":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["6a47d642ab24da1a811adce4bda9cc52c520ca13"]},"commit2Childs":{"6a47d642ab24da1a811adce4bda9cc52c520ca13":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["954e59be3da8dc1b046646ad7af4b466852009d3"],"954e59be3da8dc1b046646ad7af4b466852009d3":["6a47d642ab24da1a811adce4bda9cc52c520ca13"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}