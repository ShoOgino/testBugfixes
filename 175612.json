{"path":"lucene/core/src/java/org/apache/lucene/search/ConstantScoreQuery#createWeight(IndexSearcher,boolean).mjava","commits":[{"id":"fb17639909a369c1e64866842e5c213440acc17e","date":1423238093,"type":1,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/ConstantScoreQuery#createWeight(IndexSearcher,boolean).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/ConstantScoreQuery#createWeight(IndexSearcher).mjava","sourceNew":"  @Override\n  public Weight createWeight(IndexSearcher searcher, boolean needsScores) throws IOException {\n    return new ConstantScoreQuery.ConstantWeight(searcher);\n  }\n\n","sourceOld":"  @Override\n  public Weight createWeight(IndexSearcher searcher) throws IOException {\n    return new ConstantScoreQuery.ConstantWeight(searcher);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"954e59be3da8dc1b046646ad7af4b466852009d3","date":1423482367,"type":5,"author":"Alan Woodward","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/ConstantScoreQuery#createWeight(IndexSearcher,int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/ConstantScoreQuery#createWeight(IndexSearcher,boolean).mjava","sourceNew":"  @Override\n  public Weight createWeight(IndexSearcher searcher, int postingsFlags) throws IOException {\n    return new ConstantScoreQuery.ConstantWeight(searcher);\n  }\n\n","sourceOld":"  @Override\n  public Weight createWeight(IndexSearcher searcher, boolean needsScores) throws IOException {\n    return new ConstantScoreQuery.ConstantWeight(searcher);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6a47d642ab24da1a811adce4bda9cc52c520ca13","date":1423483323,"type":1,"author":"Alan Woodward","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/ConstantScoreQuery#createWeight(IndexSearcher,boolean).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/ConstantScoreQuery#createWeight(IndexSearcher,int).mjava","sourceNew":"  @Override\n  public Weight createWeight(IndexSearcher searcher, boolean needsScores) throws IOException {\n    return new ConstantScoreQuery.ConstantWeight(searcher);\n  }\n\n","sourceOld":"  @Override\n  public Weight createWeight(IndexSearcher searcher, int postingsFlags) throws IOException {\n    return new ConstantScoreQuery.ConstantWeight(searcher);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"22a1e22cb62fc34b060a756e6033f01cb5462247","date":1424528768,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/ConstantScoreQuery#createWeight(IndexSearcher,boolean).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/ConstantScoreQuery#createWeight(IndexSearcher,boolean).mjava","sourceNew":"  @Override\n  public Weight createWeight(IndexSearcher searcher, boolean needsScores) throws IOException {\n    final Weight innerWeight = query.createWeight(searcher, false);\n    if (needsScores) {\n      return new ConstantScoreQuery.ConstantWeight(innerWeight);\n    } else {\n      return innerWeight;\n    }\n  }\n\n","sourceOld":"  @Override\n  public Weight createWeight(IndexSearcher searcher, boolean needsScores) throws IOException {\n    return new ConstantScoreQuery.ConstantWeight(searcher);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"60596f28be69b10c37a56a303c2dbea07b2ca4ba","date":1425060541,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/ConstantScoreQuery#createWeight(IndexSearcher,boolean).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/ConstantScoreQuery#createWeight(IndexSearcher,boolean).mjava","sourceNew":"  @Override\n  public Weight createWeight(IndexSearcher searcher, boolean needsScores) throws IOException {\n    final Weight innerWeight = searcher.createWeight(query, false);\n    if (needsScores) {\n      return new ConstantScoreQuery.ConstantWeight(innerWeight);\n    } else {\n      return innerWeight;\n    }\n  }\n\n","sourceOld":"  @Override\n  public Weight createWeight(IndexSearcher searcher, boolean needsScores) throws IOException {\n    final Weight innerWeight = query.createWeight(searcher, false);\n    if (needsScores) {\n      return new ConstantScoreQuery.ConstantWeight(innerWeight);\n    } else {\n      return innerWeight;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","date":1427779360,"type":3,"author":"Ryan Ernst","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/search/ConstantScoreQuery#createWeight(IndexSearcher,boolean).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/ConstantScoreQuery#createWeight(IndexSearcher,boolean).mjava","sourceNew":"  @Override\n  public Weight createWeight(IndexSearcher searcher, boolean needsScores) throws IOException {\n    final Weight innerWeight = searcher.createWeight(query, false);\n    if (needsScores) {\n      return new ConstantScoreQuery.ConstantWeight(innerWeight);\n    } else {\n      return innerWeight;\n    }\n  }\n\n","sourceOld":"  @Override\n  public Weight createWeight(IndexSearcher searcher, boolean needsScores) throws IOException {\n    final Weight innerWeight = query.createWeight(searcher, false);\n    if (needsScores) {\n      return new ConstantScoreQuery.ConstantWeight(innerWeight);\n    } else {\n      return innerWeight;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a7f94ff172f40ff68a926d112e25b96bc38e5a27","date":1431002360,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/ConstantScoreQuery#createWeight(IndexSearcher,boolean).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/ConstantScoreQuery#createWeight(IndexSearcher,boolean).mjava","sourceNew":"  @Override\n  public Weight createWeight(IndexSearcher searcher, boolean needsScores) throws IOException {\n    final Weight innerWeight = searcher.createWeight(query, false);\n    if (needsScores) {\n      return new ConstantScoreWeight(this) {\n\n        @Override\n        public BulkScorer bulkScorer(LeafReaderContext context, Bits acceptDocs) throws IOException {\n          final BulkScorer innerScorer = innerWeight.bulkScorer(context, acceptDocs);\n          if (innerScorer == null) {\n            return null;\n          }\n          return new ConstantBulkScorer(innerScorer, this, score());\n        }\n\n        @Override\n        public Scorer scorer(LeafReaderContext context, Bits acceptDocs) throws IOException {\n          final Scorer innerScorer = innerWeight.scorer(context, acceptDocs);\n          if (innerScorer == null) {\n            return null;\n          }\n          final float score = score();\n          return new FilterScorer(innerScorer) {\n            @Override\n            public float score() throws IOException {\n              return score;\n            }\n            @Override\n            public Collection<ChildScorer> getChildren() {\n              return Collections.singleton(new ChildScorer(innerScorer, \"constant\"));\n            }\n          };\n        }\n\n      };\n    } else {\n      return innerWeight;\n    }\n  }\n\n","sourceOld":"  @Override\n  public Weight createWeight(IndexSearcher searcher, boolean needsScores) throws IOException {\n    final Weight innerWeight = searcher.createWeight(query, false);\n    if (needsScores) {\n      return new ConstantScoreQuery.ConstantWeight(innerWeight);\n    } else {\n      return innerWeight;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0ab7a7b7d9840c6df78aaf2d36b9e8765da1069c","date":1433506692,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/ConstantScoreQuery#createWeight(IndexSearcher,boolean).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/ConstantScoreQuery#createWeight(IndexSearcher,boolean).mjava","sourceNew":"  @Override\n  public Weight createWeight(IndexSearcher searcher, boolean needsScores) throws IOException {\n    final Weight innerWeight = searcher.createWeight(query, false);\n    if (needsScores) {\n      return new ConstantScoreWeight(this) {\n\n        @Override\n        public BulkScorer bulkScorer(LeafReaderContext context, Bits acceptDocs) throws IOException {\n          final BulkScorer innerScorer = innerWeight.bulkScorer(context, acceptDocs);\n          if (innerScorer == null) {\n            return null;\n          }\n          return new ConstantBulkScorer(innerScorer, this, score());\n        }\n\n        @Override\n        public Scorer scorer(LeafReaderContext context, Bits acceptDocs) throws IOException {\n          final Scorer innerScorer = innerWeight.scorer(context, acceptDocs);\n          if (innerScorer == null) {\n            return null;\n          }\n          final float score = score();\n          return new FilterScorer(innerScorer) {\n            @Override\n            public float score() throws IOException {\n              return score;\n            }\n            @Override\n            public int freq() throws IOException {\n              return 1;\n            }\n            @Override\n            public Collection<ChildScorer> getChildren() {\n              return Collections.singleton(new ChildScorer(innerScorer, \"constant\"));\n            }\n          };\n        }\n\n      };\n    } else {\n      return innerWeight;\n    }\n  }\n\n","sourceOld":"  @Override\n  public Weight createWeight(IndexSearcher searcher, boolean needsScores) throws IOException {\n    final Weight innerWeight = searcher.createWeight(query, false);\n    if (needsScores) {\n      return new ConstantScoreWeight(this) {\n\n        @Override\n        public BulkScorer bulkScorer(LeafReaderContext context, Bits acceptDocs) throws IOException {\n          final BulkScorer innerScorer = innerWeight.bulkScorer(context, acceptDocs);\n          if (innerScorer == null) {\n            return null;\n          }\n          return new ConstantBulkScorer(innerScorer, this, score());\n        }\n\n        @Override\n        public Scorer scorer(LeafReaderContext context, Bits acceptDocs) throws IOException {\n          final Scorer innerScorer = innerWeight.scorer(context, acceptDocs);\n          if (innerScorer == null) {\n            return null;\n          }\n          final float score = score();\n          return new FilterScorer(innerScorer) {\n            @Override\n            public float score() throws IOException {\n              return score;\n            }\n            @Override\n            public Collection<ChildScorer> getChildren() {\n              return Collections.singleton(new ChildScorer(innerScorer, \"constant\"));\n            }\n          };\n        }\n\n      };\n    } else {\n      return innerWeight;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0f4464508ee83288c8c4585b533f9faaa93aa314","date":1435240759,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/ConstantScoreQuery#createWeight(IndexSearcher,boolean).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/ConstantScoreQuery#createWeight(IndexSearcher,boolean).mjava","sourceNew":"  @Override\n  public Weight createWeight(IndexSearcher searcher, boolean needsScores) throws IOException {\n    final Weight innerWeight = searcher.createWeight(query, false);\n    if (needsScores) {\n      return new ConstantScoreWeight(this) {\n\n        @Override\n        public BulkScorer bulkScorer(LeafReaderContext context) throws IOException {\n          final BulkScorer innerScorer = innerWeight.bulkScorer(context);\n          if (innerScorer == null) {\n            return null;\n          }\n          return new ConstantBulkScorer(innerScorer, this, score());\n        }\n\n        @Override\n        public Scorer scorer(LeafReaderContext context) throws IOException {\n          final Scorer innerScorer = innerWeight.scorer(context);\n          if (innerScorer == null) {\n            return null;\n          }\n          final float score = score();\n          return new FilterScorer(innerScorer) {\n            @Override\n            public float score() throws IOException {\n              return score;\n            }\n            @Override\n            public int freq() throws IOException {\n              return 1;\n            }\n            @Override\n            public Collection<ChildScorer> getChildren() {\n              return Collections.singleton(new ChildScorer(innerScorer, \"constant\"));\n            }\n          };\n        }\n\n      };\n    } else {\n      return innerWeight;\n    }\n  }\n\n","sourceOld":"  @Override\n  public Weight createWeight(IndexSearcher searcher, boolean needsScores) throws IOException {\n    final Weight innerWeight = searcher.createWeight(query, false);\n    if (needsScores) {\n      return new ConstantScoreWeight(this) {\n\n        @Override\n        public BulkScorer bulkScorer(LeafReaderContext context, Bits acceptDocs) throws IOException {\n          final BulkScorer innerScorer = innerWeight.bulkScorer(context, acceptDocs);\n          if (innerScorer == null) {\n            return null;\n          }\n          return new ConstantBulkScorer(innerScorer, this, score());\n        }\n\n        @Override\n        public Scorer scorer(LeafReaderContext context, Bits acceptDocs) throws IOException {\n          final Scorer innerScorer = innerWeight.scorer(context, acceptDocs);\n          if (innerScorer == null) {\n            return null;\n          }\n          final float score = score();\n          return new FilterScorer(innerScorer) {\n            @Override\n            public float score() throws IOException {\n              return score;\n            }\n            @Override\n            public int freq() throws IOException {\n              return 1;\n            }\n            @Override\n            public Collection<ChildScorer> getChildren() {\n              return Collections.singleton(new ChildScorer(innerScorer, \"constant\"));\n            }\n          };\n        }\n\n      };\n    } else {\n      return innerWeight;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"02e175abd2c4c1611c5a9647486ae8ba249a94c1","date":1468327116,"type":5,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/ConstantScoreQuery#createWeight(IndexSearcher,boolean,float).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/ConstantScoreQuery#createWeight(IndexSearcher,boolean).mjava","sourceNew":"  @Override\n  public Weight createWeight(IndexSearcher searcher, boolean needsScores, float boost) throws IOException {\n    final Weight innerWeight = searcher.createWeight(query, false, 1f);\n    if (needsScores) {\n      return new ConstantScoreWeight(this, boost) {\n\n        @Override\n        public BulkScorer bulkScorer(LeafReaderContext context) throws IOException {\n          final BulkScorer innerScorer = innerWeight.bulkScorer(context);\n          if (innerScorer == null) {\n            return null;\n          }\n          return new ConstantBulkScorer(innerScorer, this, score());\n        }\n\n        @Override\n        public Scorer scorer(LeafReaderContext context) throws IOException {\n          final Scorer innerScorer = innerWeight.scorer(context);\n          if (innerScorer == null) {\n            return null;\n          }\n          final float score = score();\n          return new FilterScorer(innerScorer) {\n            @Override\n            public float score() throws IOException {\n              return score;\n            }\n            @Override\n            public int freq() throws IOException {\n              return 1;\n            }\n            @Override\n            public Collection<ChildScorer> getChildren() {\n              return Collections.singleton(new ChildScorer(innerScorer, \"constant\"));\n            }\n          };\n        }\n\n      };\n    } else {\n      return innerWeight;\n    }\n  }\n\n","sourceOld":"  @Override\n  public Weight createWeight(IndexSearcher searcher, boolean needsScores) throws IOException {\n    final Weight innerWeight = searcher.createWeight(query, false);\n    if (needsScores) {\n      return new ConstantScoreWeight(this) {\n\n        @Override\n        public BulkScorer bulkScorer(LeafReaderContext context) throws IOException {\n          final BulkScorer innerScorer = innerWeight.bulkScorer(context);\n          if (innerScorer == null) {\n            return null;\n          }\n          return new ConstantBulkScorer(innerScorer, this, score());\n        }\n\n        @Override\n        public Scorer scorer(LeafReaderContext context) throws IOException {\n          final Scorer innerScorer = innerWeight.scorer(context);\n          if (innerScorer == null) {\n            return null;\n          }\n          final float score = score();\n          return new FilterScorer(innerScorer) {\n            @Override\n            public float score() throws IOException {\n              return score;\n            }\n            @Override\n            public int freq() throws IOException {\n              return 1;\n            }\n            @Override\n            public Collection<ChildScorer> getChildren() {\n              return Collections.singleton(new ChildScorer(innerScorer, \"constant\"));\n            }\n          };\n        }\n\n      };\n    } else {\n      return innerWeight;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":4,"author":"Kevin Risden","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/search/ConstantScoreQuery#createWeight(IndexSearcher,boolean).mjava","sourceNew":null,"sourceOld":"  @Override\n  public Weight createWeight(IndexSearcher searcher, boolean needsScores) throws IOException {\n    final Weight innerWeight = searcher.createWeight(query, false);\n    if (needsScores) {\n      return new ConstantScoreWeight(this) {\n\n        @Override\n        public BulkScorer bulkScorer(LeafReaderContext context) throws IOException {\n          final BulkScorer innerScorer = innerWeight.bulkScorer(context);\n          if (innerScorer == null) {\n            return null;\n          }\n          return new ConstantBulkScorer(innerScorer, this, score());\n        }\n\n        @Override\n        public Scorer scorer(LeafReaderContext context) throws IOException {\n          final Scorer innerScorer = innerWeight.scorer(context);\n          if (innerScorer == null) {\n            return null;\n          }\n          final float score = score();\n          return new FilterScorer(innerScorer) {\n            @Override\n            public float score() throws IOException {\n              return score;\n            }\n            @Override\n            public int freq() throws IOException {\n              return 1;\n            }\n            @Override\n            public Collection<ChildScorer> getChildren() {\n              return Collections.singleton(new ChildScorer(innerScorer, \"constant\"));\n            }\n          };\n        }\n\n      };\n    } else {\n      return innerWeight;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"6a47d642ab24da1a811adce4bda9cc52c520ca13":["954e59be3da8dc1b046646ad7af4b466852009d3"],"fb17639909a369c1e64866842e5c213440acc17e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a7f94ff172f40ff68a926d112e25b96bc38e5a27":["60596f28be69b10c37a56a303c2dbea07b2ca4ba"],"60596f28be69b10c37a56a303c2dbea07b2ca4ba":["22a1e22cb62fc34b060a756e6033f01cb5462247"],"0ab7a7b7d9840c6df78aaf2d36b9e8765da1069c":["a7f94ff172f40ff68a926d112e25b96bc38e5a27"],"954e59be3da8dc1b046646ad7af4b466852009d3":["fb17639909a369c1e64866842e5c213440acc17e"],"22a1e22cb62fc34b060a756e6033f01cb5462247":["6a47d642ab24da1a811adce4bda9cc52c520ca13"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["0f4464508ee83288c8c4585b533f9faaa93aa314","02e175abd2c4c1611c5a9647486ae8ba249a94c1"],"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":["22a1e22cb62fc34b060a756e6033f01cb5462247","60596f28be69b10c37a56a303c2dbea07b2ca4ba"],"0f4464508ee83288c8c4585b533f9faaa93aa314":["0ab7a7b7d9840c6df78aaf2d36b9e8765da1069c"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"02e175abd2c4c1611c5a9647486ae8ba249a94c1":["0f4464508ee83288c8c4585b533f9faaa93aa314"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["02e175abd2c4c1611c5a9647486ae8ba249a94c1"]},"commit2Childs":{"6a47d642ab24da1a811adce4bda9cc52c520ca13":["22a1e22cb62fc34b060a756e6033f01cb5462247"],"fb17639909a369c1e64866842e5c213440acc17e":["954e59be3da8dc1b046646ad7af4b466852009d3"],"a7f94ff172f40ff68a926d112e25b96bc38e5a27":["0ab7a7b7d9840c6df78aaf2d36b9e8765da1069c"],"60596f28be69b10c37a56a303c2dbea07b2ca4ba":["a7f94ff172f40ff68a926d112e25b96bc38e5a27","a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae"],"0ab7a7b7d9840c6df78aaf2d36b9e8765da1069c":["0f4464508ee83288c8c4585b533f9faaa93aa314"],"954e59be3da8dc1b046646ad7af4b466852009d3":["6a47d642ab24da1a811adce4bda9cc52c520ca13"],"22a1e22cb62fc34b060a756e6033f01cb5462247":["60596f28be69b10c37a56a303c2dbea07b2ca4ba","a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":[],"0f4464508ee83288c8c4585b533f9faaa93aa314":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","02e175abd2c4c1611c5a9647486ae8ba249a94c1"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["fb17639909a369c1e64866842e5c213440acc17e"],"02e175abd2c4c1611c5a9647486ae8ba249a94c1":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}