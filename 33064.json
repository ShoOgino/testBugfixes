{"path":"lucene/src/java/org/apache/lucene/index/SegmentReader#getOnlySegmentReader(Directory).mjava","commits":[{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/SegmentReader#getOnlySegmentReader(Directory).mjava","pathOld":"src/java/org/apache/lucene/index/SegmentReader#getOnlySegmentReader(Directory).mjava","sourceNew":"  /**\n   * Lotsa tests did hacks like:<br/>\n   * SegmentReader reader = (SegmentReader) IndexReader.open(dir);<br/>\n   * They broke. This method serves as a hack to keep hacks working\n   * We do it with R/W access for the tests (BW compatibility)\n   * @deprecated Remove this when tests are fixed!\n   */\n  @Deprecated\n  static SegmentReader getOnlySegmentReader(Directory dir) throws IOException {\n    return getOnlySegmentReader(IndexReader.open(dir,false));\n  }\n\n","sourceOld":"  /**\n   * Lotsa tests did hacks like:<br/>\n   * SegmentReader reader = (SegmentReader) IndexReader.open(dir);<br/>\n   * They broke. This method serves as a hack to keep hacks working\n   * We do it with R/W access for the tests (BW compatibility)\n   * @deprecated Remove this when tests are fixed!\n   */\n  @Deprecated\n  static SegmentReader getOnlySegmentReader(Directory dir) throws IOException {\n    return getOnlySegmentReader(IndexReader.open(dir,false));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"955c32f886db6f6356c9fcdea6b1f1cb4effda24","date":1270581567,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/SegmentReader#getOnlySegmentReader(Directory).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/SegmentReader#getOnlySegmentReader(Directory).mjava","sourceNew":"  /**\n   * Lotsa tests did hacks like:<br/>\n   * SegmentReader reader = (SegmentReader) IndexReader.open(dir);<br/>\n   * They broke. This method serves as a hack to keep hacks working\n   * We do it with R/W access for the tests (BW compatibility)\n   * @deprecated Remove this when tests are fixed!\n   */\n  @Deprecated\n  static SegmentReader getOnlySegmentReader(Directory dir) throws IOException {\n    return getOnlySegmentReader(IndexReader.open(dir, false));\n  }\n\n","sourceOld":"  /**\n   * Lotsa tests did hacks like:<br/>\n   * SegmentReader reader = (SegmentReader) IndexReader.open(dir);<br/>\n   * They broke. This method serves as a hack to keep hacks working\n   * We do it with R/W access for the tests (BW compatibility)\n   * @deprecated Remove this when tests are fixed!\n   */\n  @Deprecated\n  static SegmentReader getOnlySegmentReader(Directory dir) throws IOException {\n    return getOnlySegmentReader(IndexReader.open(dir,false));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4e8cc373c801e54cec75daf9f52792cb4b17f536","date":1291116159,"type":4,"author":"Robert Muir","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/src/java/org/apache/lucene/index/SegmentReader#getOnlySegmentReader(Directory).mjava","sourceNew":null,"sourceOld":"  /**\n   * Lotsa tests did hacks like:<br/>\n   * SegmentReader reader = (SegmentReader) IndexReader.open(dir);<br/>\n   * They broke. This method serves as a hack to keep hacks working\n   * We do it with R/W access for the tests (BW compatibility)\n   * @deprecated Remove this when tests are fixed!\n   */\n  @Deprecated\n  static SegmentReader getOnlySegmentReader(Directory dir) throws IOException {\n    return getOnlySegmentReader(IndexReader.open(dir, false));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3bb13258feba31ab676502787ab2e1779f129b7a","date":1291596436,"type":4,"author":"Simon Willnauer","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/src/java/org/apache/lucene/index/SegmentReader#getOnlySegmentReader(Directory).mjava","sourceNew":null,"sourceOld":"  /**\n   * Lotsa tests did hacks like:<br/>\n   * SegmentReader reader = (SegmentReader) IndexReader.open(dir);<br/>\n   * They broke. This method serves as a hack to keep hacks working\n   * We do it with R/W access for the tests (BW compatibility)\n   * @deprecated Remove this when tests are fixed!\n   */\n  @Deprecated\n  static SegmentReader getOnlySegmentReader(Directory dir) throws IOException {\n    return getOnlySegmentReader(IndexReader.open(dir, false));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","date":1292920096,"type":4,"author":"Michael Busch","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/src/java/org/apache/lucene/index/SegmentReader#getOnlySegmentReader(Directory).mjava","sourceNew":null,"sourceOld":"  /**\n   * Lotsa tests did hacks like:<br/>\n   * SegmentReader reader = (SegmentReader) IndexReader.open(dir);<br/>\n   * They broke. This method serves as a hack to keep hacks working\n   * We do it with R/W access for the tests (BW compatibility)\n   * @deprecated Remove this when tests are fixed!\n   */\n  @Deprecated\n  static SegmentReader getOnlySegmentReader(Directory dir) throws IOException {\n    return getOnlySegmentReader(IndexReader.open(dir, false));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"955c32f886db6f6356c9fcdea6b1f1cb4effda24":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["955c32f886db6f6356c9fcdea6b1f1cb4effda24","4e8cc373c801e54cec75daf9f52792cb4b17f536"],"3bb13258feba31ab676502787ab2e1779f129b7a":["955c32f886db6f6356c9fcdea6b1f1cb4effda24","4e8cc373c801e54cec75daf9f52792cb4b17f536"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["4e8cc373c801e54cec75daf9f52792cb4b17f536"],"4e8cc373c801e54cec75daf9f52792cb4b17f536":["955c32f886db6f6356c9fcdea6b1f1cb4effda24"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"955c32f886db6f6356c9fcdea6b1f1cb4effda24":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","3bb13258feba31ab676502787ab2e1779f129b7a","4e8cc373c801e54cec75daf9f52792cb4b17f536"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":[],"3bb13258feba31ab676502787ab2e1779f129b7a":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["955c32f886db6f6356c9fcdea6b1f1cb4effda24"],"4e8cc373c801e54cec75daf9f52792cb4b17f536":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","3bb13258feba31ab676502787ab2e1779f129b7a","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","3bb13258feba31ab676502787ab2e1779f129b7a","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}