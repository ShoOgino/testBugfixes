{"path":"solr/solrj/src/java/org/apache/solr/client/solrj/impl/Http2SolrClient#close().mjava","commits":[{"id":"1a77e5e21cbd575a8240b0e3926164f15295f4e8","date":1544979500,"type":0,"author":"Cao Manh Dat","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/impl/Http2SolrClient#close().mjava","pathOld":"/dev/null","sourceNew":"  public void close() {\n    // we wait for async requests, so far devs don't want to give sugar for this\n    asyncTracker.waitForComplete();\n    if (closeClient) {\n      try {\n        ExecutorService executor = (ExecutorService) httpClient.getExecutor();\n        httpClient.setStopTimeout(1000);\n        httpClient.stop();\n        ExecutorUtil.shutdownAndAwaitTermination(executor);\n      } catch (Exception e) {\n        throw new RuntimeException(\"Exception on closing client\", e);\n      }\n    }\n\n    assert ObjectReleaseTracker.release(this);\n    System.out.println(\"Done close \" + httpClient.getExecutor().toString());\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9a03bf0dc6b4347c40116c87179f0431290a4e45","date":1551261059,"type":3,"author":"Cao Manh Dat","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/impl/Http2SolrClient#close().mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/impl/Http2SolrClient#close().mjava","sourceNew":"  public void close() {\n    // we wait for async requests, so far devs don't want to give sugar for this\n    asyncTracker.waitForComplete();\n    if (closeClient) {\n      try {\n        ExecutorService executor = (ExecutorService) httpClient.getExecutor();\n        httpClient.setStopTimeout(1000);\n        httpClient.stop();\n        ExecutorUtil.shutdownAndAwaitTermination(executor);\n      } catch (Exception e) {\n        throw new RuntimeException(\"Exception on closing client\", e);\n      }\n    }\n\n    assert ObjectReleaseTracker.release(this);\n  }\n\n","sourceOld":"  public void close() {\n    // we wait for async requests, so far devs don't want to give sugar for this\n    asyncTracker.waitForComplete();\n    if (closeClient) {\n      try {\n        ExecutorService executor = (ExecutorService) httpClient.getExecutor();\n        httpClient.setStopTimeout(1000);\n        httpClient.stop();\n        ExecutorUtil.shutdownAndAwaitTermination(executor);\n      } catch (Exception e) {\n        throw new RuntimeException(\"Exception on closing client\", e);\n      }\n    }\n\n    assert ObjectReleaseTracker.release(this);\n    System.out.println(\"Done close \" + httpClient.getExecutor().toString());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1964c059f45ae1de1877f9f0fe3ca327ea4218e8","date":1594088246,"type":3,"author":"Cao Manh Dat","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/impl/Http2SolrClient#close().mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/impl/Http2SolrClient#close().mjava","sourceNew":"  public void close() {\n    // we wait for async requests, so far devs don't want to give sugar for this\n    asyncTracker.waitForComplete();\n    if (closeClient) {\n      try {\n        httpClient.setStopTimeout(1000);\n        httpClient.stop();\n      } catch (Exception e) {\n        throw new RuntimeException(\"Exception on closing client\", e);\n      }\n    }\n    if (shutdownExecutor) {\n      ExecutorUtil.shutdownAndAwaitTermination(executor);\n    }\n\n    assert ObjectReleaseTracker.release(this);\n  }\n\n","sourceOld":"  public void close() {\n    // we wait for async requests, so far devs don't want to give sugar for this\n    asyncTracker.waitForComplete();\n    if (closeClient) {\n      try {\n        ExecutorService executor = (ExecutorService) httpClient.getExecutor();\n        httpClient.setStopTimeout(1000);\n        httpClient.stop();\n        ExecutorUtil.shutdownAndAwaitTermination(executor);\n      } catch (Exception e) {\n        throw new RuntimeException(\"Exception on closing client\", e);\n      }\n    }\n\n    assert ObjectReleaseTracker.release(this);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"1964c059f45ae1de1877f9f0fe3ca327ea4218e8":["9a03bf0dc6b4347c40116c87179f0431290a4e45"],"1a77e5e21cbd575a8240b0e3926164f15295f4e8":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"9a03bf0dc6b4347c40116c87179f0431290a4e45":["1a77e5e21cbd575a8240b0e3926164f15295f4e8"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["1964c059f45ae1de1877f9f0fe3ca327ea4218e8"]},"commit2Childs":{"1964c059f45ae1de1877f9f0fe3ca327ea4218e8":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"1a77e5e21cbd575a8240b0e3926164f15295f4e8":["9a03bf0dc6b4347c40116c87179f0431290a4e45"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["1a77e5e21cbd575a8240b0e3926164f15295f4e8"],"9a03bf0dc6b4347c40116c87179f0431290a4e45":["1964c059f45ae1de1877f9f0fe3ca327ea4218e8"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}