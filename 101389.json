{"path":"src/java/org/apache/lucene/index/FieldInfo#update(FieldInfo).mjava","commits":[{"id":"5350389bf83287111f7760b9e3db3af8e3648474","date":1216372812,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/FieldInfo#update(FieldInfo).mjava","pathOld":"/dev/null","sourceNew":"  void update(FieldInfo other) {\n    if (isIndexed != other.isIndexed) {\n      isIndexed = true;                      // once indexed, always index\n    }\n    if (storeTermVector != other.storeTermVector) {\n      storeTermVector = true;                // once vector, always vector\n    }\n    if (storePositionWithTermVector != other.storePositionWithTermVector) {\n      storePositionWithTermVector = true;                // once vector, always vector\n    }\n    if (storeOffsetWithTermVector != other.storeOffsetWithTermVector) {\n      storeOffsetWithTermVector = true;                // once vector, always vector\n    }\n    if (omitNorms != other.omitNorms) {\n      omitNorms = false;                // once norms are stored, always store\n    }\n    if (storePayloads != other.storePayloads) {\n      storePayloads = true;\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"902ba79f4590a41c663c447756d2e5041cbbdda9","date":1217956662,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/FieldInfo#update(FieldInfo).mjava","pathOld":"src/java/org/apache/lucene/index/FieldInfo#update(FieldInfo).mjava","sourceNew":"  void update(FieldInfo other) {\n    if (isIndexed != other.isIndexed) {\n      isIndexed = true;                      // once indexed, always index\n    }\n    if (storeTermVector != other.storeTermVector) {\n      storeTermVector = true;                // once vector, always vector\n    }\n    if (storePositionWithTermVector != other.storePositionWithTermVector) {\n      storePositionWithTermVector = true;                // once vector, always vector\n    }\n    if (storeOffsetWithTermVector != other.storeOffsetWithTermVector) {\n      storeOffsetWithTermVector = true;                // once vector, always vector\n    }\n    if (omitNorms != other.omitNorms) {\n      omitNorms = false;                // once norms are stored, always store\n    }\n    if (this.omitTf != omitTf) {\n      this.omitTf = true;                // if one require omitTf at least once, it remains off for life\n    }\n    if (storePayloads != other.storePayloads) {\n      storePayloads = true;\n    }\n  }\n\n","sourceOld":"  void update(FieldInfo other) {\n    if (isIndexed != other.isIndexed) {\n      isIndexed = true;                      // once indexed, always index\n    }\n    if (storeTermVector != other.storeTermVector) {\n      storeTermVector = true;                // once vector, always vector\n    }\n    if (storePositionWithTermVector != other.storePositionWithTermVector) {\n      storePositionWithTermVector = true;                // once vector, always vector\n    }\n    if (storeOffsetWithTermVector != other.storeOffsetWithTermVector) {\n      storeOffsetWithTermVector = true;                // once vector, always vector\n    }\n    if (omitNorms != other.omitNorms) {\n      omitNorms = false;                // once norms are stored, always store\n    }\n    if (storePayloads != other.storePayloads) {\n      storePayloads = true;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d74a6ef4034b9c5c261afaf7f8173ddb14d0b12d","date":1227001993,"type":4,"author":"Michael McCandless","isMerge":false,"pathNew":"/dev/null","pathOld":"src/java/org/apache/lucene/index/FieldInfo#update(FieldInfo).mjava","sourceNew":null,"sourceOld":"  void update(FieldInfo other) {\n    if (isIndexed != other.isIndexed) {\n      isIndexed = true;                      // once indexed, always index\n    }\n    if (storeTermVector != other.storeTermVector) {\n      storeTermVector = true;                // once vector, always vector\n    }\n    if (storePositionWithTermVector != other.storePositionWithTermVector) {\n      storePositionWithTermVector = true;                // once vector, always vector\n    }\n    if (storeOffsetWithTermVector != other.storeOffsetWithTermVector) {\n      storeOffsetWithTermVector = true;                // once vector, always vector\n    }\n    if (omitNorms != other.omitNorms) {\n      omitNorms = false;                // once norms are stored, always store\n    }\n    if (this.omitTf != omitTf) {\n      this.omitTf = true;                // if one require omitTf at least once, it remains off for life\n    }\n    if (storePayloads != other.storePayloads) {\n      storePayloads = true;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"902ba79f4590a41c663c447756d2e5041cbbdda9":["5350389bf83287111f7760b9e3db3af8e3648474"],"d74a6ef4034b9c5c261afaf7f8173ddb14d0b12d":["902ba79f4590a41c663c447756d2e5041cbbdda9"],"5350389bf83287111f7760b9e3db3af8e3648474":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["d74a6ef4034b9c5c261afaf7f8173ddb14d0b12d"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["5350389bf83287111f7760b9e3db3af8e3648474"],"902ba79f4590a41c663c447756d2e5041cbbdda9":["d74a6ef4034b9c5c261afaf7f8173ddb14d0b12d"],"d74a6ef4034b9c5c261afaf7f8173ddb14d0b12d":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"5350389bf83287111f7760b9e3db3af8e3648474":["902ba79f4590a41c663c447756d2e5041cbbdda9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}