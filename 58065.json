{"path":"solr/core/src/java/org/apache/solr/core/SolrResourceLoader#inform(Map[String,SolrInfoMBean]).mjava","commits":[{"id":"c903c3d15906a3da96b8c0c2fb704491005fdbdb","date":1453508227,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/SolrResourceLoader#inform(Map[String,SolrInfoMBean]).mjava","pathOld":"solr/src/java/org/apache/solr/core/SolrResourceLoader#inform(Map[String,SolrInfoMBean]).mjava","sourceNew":"  /**\n   * Register any {@link org.apache.solr.core.SolrInfoMBean}s\n   * @param infoRegistry The Info Registry\n   */\n  public void inform(Map<String, SolrInfoMBean> infoRegistry) {\n    // this can currently happen concurrently with requests starting and lazy components\n    // loading.  Make sure infoMBeans doesn't change.\n\n    SolrInfoMBean[] arr;\n    synchronized (infoMBeans) {\n      arr = infoMBeans.toArray(new SolrInfoMBean[infoMBeans.size()]);\n      waitingForResources.clear();\n    }\n\n\n    for (SolrInfoMBean bean : arr) {\n      infoRegistry.put(bean.getName(), bean);\n    }\n  }\n\n","sourceOld":"  /**\n   * Register any {@link org.apache.solr.core.SolrInfoMBean}s\n   * @param infoRegistry The Info Registry\n   */\n  public void inform(Map<String, SolrInfoMBean> infoRegistry) {\n    // this can currently happen concurrently with requests starting and lazy components\n    // loading.  Make sure infoMBeans doesn't change.\n\n    SolrInfoMBean[] arr;\n    synchronized (infoMBeans) {\n      arr = infoMBeans.toArray(new SolrInfoMBean[infoMBeans.size()]);\n      waitingForResources.clear();\n    }\n\n\n    for (SolrInfoMBean bean : arr) {\n      infoRegistry.put(bean.getName(), bean);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a258fbb26824fd104ed795e5d9033d2d040049ee","date":1453508252,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/SolrResourceLoader#inform(Map[String,SolrInfoMBean]).mjava","pathOld":"solr/src/java/org/apache/solr/core/SolrResourceLoader#inform(Map[String,SolrInfoMBean]).mjava","sourceNew":"  /**\n   * Register any {@link org.apache.solr.core.SolrInfoMBean}s\n   * @param infoRegistry The Info Registry\n   */\n  public void inform(Map<String, SolrInfoMBean> infoRegistry) {\n    // this can currently happen concurrently with requests starting and lazy components\n    // loading.  Make sure infoMBeans doesn't change.\n\n    SolrInfoMBean[] arr;\n    synchronized (infoMBeans) {\n      arr = infoMBeans.toArray(new SolrInfoMBean[infoMBeans.size()]);\n      waitingForResources.clear();\n    }\n\n\n    for (SolrInfoMBean bean : arr) {\n      infoRegistry.put(bean.getName(), bean);\n    }\n  }\n\n","sourceOld":"  /**\n   * Register any {@link org.apache.solr.core.SolrInfoMBean}s\n   * @param infoRegistry The Info Registry\n   */\n  public void inform(Map<String, SolrInfoMBean> infoRegistry) {\n    // this can currently happen concurrently with requests starting and lazy components\n    // loading.  Make sure infoMBeans doesn't change.\n\n    SolrInfoMBean[] arr;\n    synchronized (infoMBeans) {\n      arr = infoMBeans.toArray(new SolrInfoMBean[infoMBeans.size()]);\n      waitingForResources.clear();\n    }\n\n\n    for (SolrInfoMBean bean : arr) {\n      infoRegistry.put(bean.getName(), bean);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/core/SolrResourceLoader#inform(Map[String,SolrInfoMBean]).mjava","pathOld":"solr/src/java/org/apache/solr/core/SolrResourceLoader#inform(Map[String,SolrInfoMBean]).mjava","sourceNew":"  /**\n   * Register any {@link org.apache.solr.core.SolrInfoMBean}s\n   * @param infoRegistry The Info Registry\n   */\n  public void inform(Map<String, SolrInfoMBean> infoRegistry) {\n    // this can currently happen concurrently with requests starting and lazy components\n    // loading.  Make sure infoMBeans doesn't change.\n\n    SolrInfoMBean[] arr;\n    synchronized (infoMBeans) {\n      arr = infoMBeans.toArray(new SolrInfoMBean[infoMBeans.size()]);\n      waitingForResources.clear();\n    }\n\n\n    for (SolrInfoMBean bean : arr) {\n      infoRegistry.put(bean.getName(), bean);\n    }\n  }\n\n","sourceOld":"  /**\n   * Register any {@link org.apache.solr.core.SolrInfoMBean}s\n   * @param infoRegistry The Info Registry\n   */\n  public void inform(Map<String, SolrInfoMBean> infoRegistry) {\n    // this can currently happen concurrently with requests starting and lazy components\n    // loading.  Make sure infoMBeans doesn't change.\n\n    SolrInfoMBean[] arr;\n    synchronized (infoMBeans) {\n      arr = infoMBeans.toArray(new SolrInfoMBean[infoMBeans.size()]);\n      waitingForResources.clear();\n    }\n\n\n    for (SolrInfoMBean bean : arr) {\n      infoRegistry.put(bean.getName(), bean);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1fe2d10beb59bf7c0cb186c688e5dccc70100b6d","date":1346693111,"type":3,"author":"Sami Siren","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/SolrResourceLoader#inform(Map[String,SolrInfoMBean]).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/SolrResourceLoader#inform(Map[String,SolrInfoMBean]).mjava","sourceNew":"  /**\n   * Register any {@link org.apache.solr.core.SolrInfoMBean}s\n   * @param infoRegistry The Info Registry\n   */\n  public void inform(Map<String, SolrInfoMBean> infoRegistry) {\n    // this can currently happen concurrently with requests starting and lazy components\n    // loading.  Make sure infoMBeans doesn't change.\n\n    SolrInfoMBean[] arr;\n    synchronized (infoMBeans) {\n      arr = infoMBeans.toArray(new SolrInfoMBean[infoMBeans.size()]);\n      waitingForResources.clear();\n    }\n\n\n    for (SolrInfoMBean bean : arr) {\n      try {\n        infoRegistry.put(bean.getName(), bean);\n      } catch (Throwable t) {\n        log.warn(\"could not register MBean '\" + bean.getName() + \"'.\", t);\n      }\n    }\n  }\n\n","sourceOld":"  /**\n   * Register any {@link org.apache.solr.core.SolrInfoMBean}s\n   * @param infoRegistry The Info Registry\n   */\n  public void inform(Map<String, SolrInfoMBean> infoRegistry) {\n    // this can currently happen concurrently with requests starting and lazy components\n    // loading.  Make sure infoMBeans doesn't change.\n\n    SolrInfoMBean[] arr;\n    synchronized (infoMBeans) {\n      arr = infoMBeans.toArray(new SolrInfoMBean[infoMBeans.size()]);\n      waitingForResources.clear();\n    }\n\n\n    for (SolrInfoMBean bean : arr) {\n      infoRegistry.put(bean.getName(), bean);\n    }\n  }\n\n","bugFix":null,"bugIntro":["f56da6f4f15d95f318d2d6ac2a39a9183dfecff2"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"f56da6f4f15d95f318d2d6ac2a39a9183dfecff2","date":1389633998,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/SolrResourceLoader#inform(Map[String,SolrInfoMBean]).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/SolrResourceLoader#inform(Map[String,SolrInfoMBean]).mjava","sourceNew":"  /**\n   * Register any {@link org.apache.solr.core.SolrInfoMBean}s\n   * @param infoRegistry The Info Registry\n   */\n  public void inform(Map<String, SolrInfoMBean> infoRegistry) {\n    // this can currently happen concurrently with requests starting and lazy components\n    // loading.  Make sure infoMBeans doesn't change.\n\n    SolrInfoMBean[] arr;\n    synchronized (infoMBeans) {\n      arr = infoMBeans.toArray(new SolrInfoMBean[infoMBeans.size()]);\n      waitingForResources.clear();\n    }\n\n\n    for (SolrInfoMBean bean : arr) {\n      try {\n        infoRegistry.put(bean.getName(), bean);\n      } catch (Exception e) {\n        log.warn(\"could not register MBean '\" + bean.getName() + \"'.\", e);\n      }\n    }\n  }\n\n","sourceOld":"  /**\n   * Register any {@link org.apache.solr.core.SolrInfoMBean}s\n   * @param infoRegistry The Info Registry\n   */\n  public void inform(Map<String, SolrInfoMBean> infoRegistry) {\n    // this can currently happen concurrently with requests starting and lazy components\n    // loading.  Make sure infoMBeans doesn't change.\n\n    SolrInfoMBean[] arr;\n    synchronized (infoMBeans) {\n      arr = infoMBeans.toArray(new SolrInfoMBean[infoMBeans.size()]);\n      waitingForResources.clear();\n    }\n\n\n    for (SolrInfoMBean bean : arr) {\n      try {\n        infoRegistry.put(bean.getName(), bean);\n      } catch (Throwable t) {\n        log.warn(\"could not register MBean '\" + bean.getName() + \"'.\", t);\n      }\n    }\n  }\n\n","bugFix":["1fe2d10beb59bf7c0cb186c688e5dccc70100b6d"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b162d36c69e9b5751ac73bedc8bcf47046d0b945","date":1416426339,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/SolrResourceLoader#inform(Map[String,SolrInfoMBean]).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/SolrResourceLoader#inform(Map[String,SolrInfoMBean]).mjava","sourceNew":"  /**\n   * Register any {@link org.apache.solr.core.SolrInfoMBean}s\n   * @param infoRegistry The Info Registry\n   */\n  public void inform(Map<String, SolrInfoMBean> infoRegistry) {\n    // this can currently happen concurrently with requests starting and lazy components\n    // loading.  Make sure infoMBeans doesn't change.\n\n    SolrInfoMBean[] arr;\n    synchronized (infoMBeans) {\n      arr = infoMBeans.toArray(new SolrInfoMBean[infoMBeans.size()]);\n      waitingForResources.clear();\n    }\n\n\n    for (SolrInfoMBean bean : arr) {\n      // Too slow? I suspect not, but we may need\n      // to start tracking this in a Set.\n      if (!infoRegistry.containsValue(bean)) {\n        try {\n          infoRegistry.put(bean.getName(), bean);\n        } catch (Exception e) {\n          log.warn(\"could not register MBean '\" + bean.getName() + \"'.\", e);\n        }\n      }\n    }\n  }\n\n","sourceOld":"  /**\n   * Register any {@link org.apache.solr.core.SolrInfoMBean}s\n   * @param infoRegistry The Info Registry\n   */\n  public void inform(Map<String, SolrInfoMBean> infoRegistry) {\n    // this can currently happen concurrently with requests starting and lazy components\n    // loading.  Make sure infoMBeans doesn't change.\n\n    SolrInfoMBean[] arr;\n    synchronized (infoMBeans) {\n      arr = infoMBeans.toArray(new SolrInfoMBean[infoMBeans.size()]);\n      waitingForResources.clear();\n    }\n\n\n    for (SolrInfoMBean bean : arr) {\n      try {\n        infoRegistry.put(bean.getName(), bean);\n      } catch (Exception e) {\n        log.warn(\"could not register MBean '\" + bean.getName() + \"'.\", e);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"816521ebaad5add9cb96bb88c577394e2938c40b","date":1491931343,"type":5,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/SolrResourceLoader#inform(Map[String,SolrInfoBean]).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/SolrResourceLoader#inform(Map[String,SolrInfoMBean]).mjava","sourceNew":"  /**\n   * Register any {@link SolrInfoBean}s\n   * @param infoRegistry The Info Registry\n   */\n  public void inform(Map<String, SolrInfoBean> infoRegistry) {\n    // this can currently happen concurrently with requests starting and lazy components\n    // loading.  Make sure infoMBeans doesn't change.\n\n    SolrInfoBean[] arr;\n    synchronized (infoMBeans) {\n      arr = infoMBeans.toArray(new SolrInfoBean[infoMBeans.size()]);\n      waitingForResources.clear();\n    }\n\n\n    for (SolrInfoBean bean : arr) {\n      // Too slow? I suspect not, but we may need\n      // to start tracking this in a Set.\n      if (!infoRegistry.containsValue(bean)) {\n        try {\n          infoRegistry.put(bean.getName(), bean);\n        } catch (Exception e) {\n          log.warn(\"could not register MBean '\" + bean.getName() + \"'.\", e);\n        }\n      }\n    }\n  }\n\n","sourceOld":"  /**\n   * Register any {@link org.apache.solr.core.SolrInfoMBean}s\n   * @param infoRegistry The Info Registry\n   */\n  public void inform(Map<String, SolrInfoMBean> infoRegistry) {\n    // this can currently happen concurrently with requests starting and lazy components\n    // loading.  Make sure infoMBeans doesn't change.\n\n    SolrInfoMBean[] arr;\n    synchronized (infoMBeans) {\n      arr = infoMBeans.toArray(new SolrInfoMBean[infoMBeans.size()]);\n      waitingForResources.clear();\n    }\n\n\n    for (SolrInfoMBean bean : arr) {\n      // Too slow? I suspect not, but we may need\n      // to start tracking this in a Set.\n      if (!infoRegistry.containsValue(bean)) {\n        try {\n          infoRegistry.put(bean.getName(), bean);\n        } catch (Exception e) {\n          log.warn(\"could not register MBean '\" + bean.getName() + \"'.\", e);\n        }\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"54ca69905c5d9d1529286f06ab1d12c68f6c13cb","date":1492683554,"type":4,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/core/src/java/org/apache/solr/core/SolrResourceLoader#inform(Map[String,SolrInfoMBean]).mjava","sourceNew":null,"sourceOld":"  /**\n   * Register any {@link org.apache.solr.core.SolrInfoMBean}s\n   * @param infoRegistry The Info Registry\n   */\n  public void inform(Map<String, SolrInfoMBean> infoRegistry) {\n    // this can currently happen concurrently with requests starting and lazy components\n    // loading.  Make sure infoMBeans doesn't change.\n\n    SolrInfoMBean[] arr;\n    synchronized (infoMBeans) {\n      arr = infoMBeans.toArray(new SolrInfoMBean[infoMBeans.size()]);\n      waitingForResources.clear();\n    }\n\n\n    for (SolrInfoMBean bean : arr) {\n      // Too slow? I suspect not, but we may need\n      // to start tracking this in a Set.\n      if (!infoRegistry.containsValue(bean)) {\n        try {\n          infoRegistry.put(bean.getName(), bean);\n        } catch (Exception e) {\n          log.warn(\"could not register MBean '\" + bean.getName() + \"'.\", e);\n        }\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"54ca69905c5d9d1529286f06ab1d12c68f6c13cb":["b162d36c69e9b5751ac73bedc8bcf47046d0b945"],"1fe2d10beb59bf7c0cb186c688e5dccc70100b6d":["c26f00b574427b55127e869b935845554afde1fa"],"b162d36c69e9b5751ac73bedc8bcf47046d0b945":["f56da6f4f15d95f318d2d6ac2a39a9183dfecff2"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"c26f00b574427b55127e869b935845554afde1fa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","c903c3d15906a3da96b8c0c2fb704491005fdbdb"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a258fbb26824fd104ed795e5d9033d2d040049ee":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"f56da6f4f15d95f318d2d6ac2a39a9183dfecff2":["1fe2d10beb59bf7c0cb186c688e5dccc70100b6d"],"816521ebaad5add9cb96bb88c577394e2938c40b":["b162d36c69e9b5751ac73bedc8bcf47046d0b945"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["816521ebaad5add9cb96bb88c577394e2938c40b"]},"commit2Childs":{"54ca69905c5d9d1529286f06ab1d12c68f6c13cb":[],"1fe2d10beb59bf7c0cb186c688e5dccc70100b6d":["f56da6f4f15d95f318d2d6ac2a39a9183dfecff2"],"b162d36c69e9b5751ac73bedc8bcf47046d0b945":["54ca69905c5d9d1529286f06ab1d12c68f6c13cb","816521ebaad5add9cb96bb88c577394e2938c40b"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["c26f00b574427b55127e869b935845554afde1fa"],"c26f00b574427b55127e869b935845554afde1fa":["1fe2d10beb59bf7c0cb186c688e5dccc70100b6d"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c903c3d15906a3da96b8c0c2fb704491005fdbdb","c26f00b574427b55127e869b935845554afde1fa","a258fbb26824fd104ed795e5d9033d2d040049ee"],"a258fbb26824fd104ed795e5d9033d2d040049ee":[],"f56da6f4f15d95f318d2d6ac2a39a9183dfecff2":["b162d36c69e9b5751ac73bedc8bcf47046d0b945"],"816521ebaad5add9cb96bb88c577394e2938c40b":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["54ca69905c5d9d1529286f06ab1d12c68f6c13cb","a258fbb26824fd104ed795e5d9033d2d040049ee","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}