{"path":"src/test-deprecated/org/apache/lucene/index/TestSegmentTermEnum#testTermEnum().mjava","commits":[{"id":"5b5461affe637a07375542c763a4805300802be8","date":1102270918,"type":0,"author":"Bernhard Messer","isMerge":false,"pathNew":"src/test-deprecated/org/apache/lucene/index/TestSegmentTermEnum#testTermEnum().mjava","pathOld":"/dev/null","sourceNew":"  public void testTermEnum()\n  {\n    IndexWriter writer = null;\n\n    try {\n      writer  = new IndexWriter(dir, new WhitespaceAnalyzer(), true);\n\n      // add 100 documents with term : aaa\n      // add 100 documents with terms: aaa bbb\n      // Therefore, term 'aaa' has document frequency of 200 and term 'bbb' 100\n      for (int i = 0; i < 100; i++) {\n        addDoc(writer, \"aaa\");\n        addDoc(writer, \"aaa bbb\");\n      }\n\n      writer.close();\n    }\n    catch (IOException e) {\n      e.printStackTrace();\n    }\n\n    try {\n      // verify document frequency of terms in an unoptimized index\n      verifyDocFreq();\n\n      // merge segments by optimizing the index\n      writer = new IndexWriter(dir, new WhitespaceAnalyzer(), false);\n      writer.optimize();\n      writer.close();\n\n      // verify document frequency of terms in an optimized index\n      verifyDocFreq();\n    }\n    catch (IOException e2) {\n      e2.printStackTrace();\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c69e98ffd83f56083b99e5443ca713cd5783a2ae","date":1142955392,"type":4,"author":"Yonik Seeley","isMerge":false,"pathNew":"/dev/null","pathOld":"src/test-deprecated/org/apache/lucene/index/TestSegmentTermEnum#testTermEnum().mjava","sourceNew":null,"sourceOld":"  public void testTermEnum()\n  {\n    IndexWriter writer = null;\n\n    try {\n      writer  = new IndexWriter(dir, new WhitespaceAnalyzer(), true);\n\n      // add 100 documents with term : aaa\n      // add 100 documents with terms: aaa bbb\n      // Therefore, term 'aaa' has document frequency of 200 and term 'bbb' 100\n      for (int i = 0; i < 100; i++) {\n        addDoc(writer, \"aaa\");\n        addDoc(writer, \"aaa bbb\");\n      }\n\n      writer.close();\n    }\n    catch (IOException e) {\n      e.printStackTrace();\n    }\n\n    try {\n      // verify document frequency of terms in an unoptimized index\n      verifyDocFreq();\n\n      // merge segments by optimizing the index\n      writer = new IndexWriter(dir, new WhitespaceAnalyzer(), false);\n      writer.optimize();\n      writer.close();\n\n      // verify document frequency of terms in an optimized index\n      verifyDocFreq();\n    }\n    catch (IOException e2) {\n      e2.printStackTrace();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"5b5461affe637a07375542c763a4805300802be8":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"c69e98ffd83f56083b99e5443ca713cd5783a2ae":["5b5461affe637a07375542c763a4805300802be8"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["c69e98ffd83f56083b99e5443ca713cd5783a2ae"]},"commit2Childs":{"5b5461affe637a07375542c763a4805300802be8":["c69e98ffd83f56083b99e5443ca713cd5783a2ae"],"c69e98ffd83f56083b99e5443ca713cd5783a2ae":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["5b5461affe637a07375542c763a4805300802be8"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}