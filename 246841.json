{"path":"lucene/core/src/java/org/apache/lucene/index/DirectoryReader#DirectoryReader(Directory,LeafReader[]).mjava","commits":[{"id":"c9fb5f46e264daf5ba3860defe623a89d202dd87","date":1411516315,"type":0,"author":"Ryan Ernst","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/DirectoryReader#DirectoryReader(Directory,LeafReader[]).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Expert: Constructs a {@code DirectoryReader} on the given subReaders.\n   * @param segmentReaders the wrapped atomic index segment readers. This array is\n   * returned by {@link #getSequentialSubReaders} and used to resolve the correct\n   * subreader for docID-based methods. <b>Please note:</b> This array is <b>not</b>\n   * cloned and not protected for modification outside of this reader.\n   * Subclasses of {@code DirectoryReader} should take care to not allow\n   * modification of this internal array, e.g. {@link #doOpenIfChanged()}.\n   */\n  protected DirectoryReader(Directory directory, LeafReader[] segmentReaders) {\n    super(segmentReaders);\n    this.directory = directory;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["98a04f56464afdffd4c430d6c47a0c868a38354e"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"98b44240f64a2d6935543ff25faee750b29204eb","date":1424972040,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/DirectoryReader#DirectoryReader(Directory,LeafReader[]).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/DirectoryReader#DirectoryReader(Directory,LeafReader[]).mjava","sourceNew":"  /**\n   * Expert: Constructs a {@code DirectoryReader} on the given subReaders.\n   * @param segmentReaders the wrapped atomic index segment readers. This array is\n   * returned by {@link #getSequentialSubReaders} and used to resolve the correct\n   * subreader for docID-based methods. <b>Please note:</b> This array is <b>not</b>\n   * cloned and not protected for modification outside of this reader.\n   * Subclasses of {@code DirectoryReader} should take care to not allow\n   * modification of this internal array, e.g. {@link #doOpenIfChanged()}.\n   */\n  protected DirectoryReader(Directory directory, LeafReader[] segmentReaders) throws IOException {\n    super(segmentReaders);\n    this.directory = directory;\n  }\n\n","sourceOld":"  /**\n   * Expert: Constructs a {@code DirectoryReader} on the given subReaders.\n   * @param segmentReaders the wrapped atomic index segment readers. This array is\n   * returned by {@link #getSequentialSubReaders} and used to resolve the correct\n   * subreader for docID-based methods. <b>Please note:</b> This array is <b>not</b>\n   * cloned and not protected for modification outside of this reader.\n   * Subclasses of {@code DirectoryReader} should take care to not allow\n   * modification of this internal array, e.g. {@link #doOpenIfChanged()}.\n   */\n  protected DirectoryReader(Directory directory, LeafReader[] segmentReaders) {\n    super(segmentReaders);\n    this.directory = directory;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"98a04f56464afdffd4c430d6c47a0c868a38354e","date":1424985833,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/DirectoryReader#DirectoryReader(Directory,LeafReader[]).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/DirectoryReader#DirectoryReader(Directory,LeafReader[]).mjava","sourceNew":"  /**\n   * Expert: Constructs a {@code DirectoryReader} on the given subReaders.\n   * @param segmentReaders the wrapped atomic index segment readers. This array is\n   * returned by {@link #getSequentialSubReaders} and used to resolve the correct\n   * subreader for docID-based methods. <b>Please note:</b> This array is <b>not</b>\n   * cloned and not protected for modification outside of this reader.\n   * Subclasses of {@code DirectoryReader} should take care to not allow\n   * modification of this internal array, e.g. {@link #doOpenIfChanged()}.\n   */\n  protected DirectoryReader(Directory directory, LeafReader[] segmentReaders) throws IOException {\n    super(segmentReaders);\n    this.directory = directory;\n  }\n\n","sourceOld":"  /**\n   * Expert: Constructs a {@code DirectoryReader} on the given subReaders.\n   * @param segmentReaders the wrapped atomic index segment readers. This array is\n   * returned by {@link #getSequentialSubReaders} and used to resolve the correct\n   * subreader for docID-based methods. <b>Please note:</b> This array is <b>not</b>\n   * cloned and not protected for modification outside of this reader.\n   * Subclasses of {@code DirectoryReader} should take care to not allow\n   * modification of this internal array, e.g. {@link #doOpenIfChanged()}.\n   */\n  protected DirectoryReader(Directory directory, LeafReader[] segmentReaders) {\n    super(segmentReaders);\n    this.directory = directory;\n  }\n\n","bugFix":["c9fb5f46e264daf5ba3860defe623a89d202dd87"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","date":1427779360,"type":3,"author":"Ryan Ernst","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/DirectoryReader#DirectoryReader(Directory,LeafReader[]).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/DirectoryReader#DirectoryReader(Directory,LeafReader[]).mjava","sourceNew":"  /**\n   * Expert: Constructs a {@code DirectoryReader} on the given subReaders.\n   * @param segmentReaders the wrapped atomic index segment readers. This array is\n   * returned by {@link #getSequentialSubReaders} and used to resolve the correct\n   * subreader for docID-based methods. <b>Please note:</b> This array is <b>not</b>\n   * cloned and not protected for modification outside of this reader.\n   * Subclasses of {@code DirectoryReader} should take care to not allow\n   * modification of this internal array, e.g. {@link #doOpenIfChanged()}.\n   */\n  protected DirectoryReader(Directory directory, LeafReader[] segmentReaders) throws IOException {\n    super(segmentReaders);\n    this.directory = directory;\n  }\n\n","sourceOld":"  /**\n   * Expert: Constructs a {@code DirectoryReader} on the given subReaders.\n   * @param segmentReaders the wrapped atomic index segment readers. This array is\n   * returned by {@link #getSequentialSubReaders} and used to resolve the correct\n   * subreader for docID-based methods. <b>Please note:</b> This array is <b>not</b>\n   * cloned and not protected for modification outside of this reader.\n   * Subclasses of {@code DirectoryReader} should take care to not allow\n   * modification of this internal array, e.g. {@link #doOpenIfChanged()}.\n   */\n  protected DirectoryReader(Directory directory, LeafReader[] segmentReaders) {\n    super(segmentReaders);\n    this.directory = directory;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":["c9fb5f46e264daf5ba3860defe623a89d202dd87","98a04f56464afdffd4c430d6c47a0c868a38354e"],"98a04f56464afdffd4c430d6c47a0c868a38354e":["c9fb5f46e264daf5ba3860defe623a89d202dd87","98b44240f64a2d6935543ff25faee750b29204eb"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"98b44240f64a2d6935543ff25faee750b29204eb":["c9fb5f46e264daf5ba3860defe623a89d202dd87"],"c9fb5f46e264daf5ba3860defe623a89d202dd87":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["98a04f56464afdffd4c430d6c47a0c868a38354e"]},"commit2Childs":{"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":[],"98a04f56464afdffd4c430d6c47a0c868a38354e":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c9fb5f46e264daf5ba3860defe623a89d202dd87"],"98b44240f64a2d6935543ff25faee750b29204eb":["98a04f56464afdffd4c430d6c47a0c868a38354e"],"c9fb5f46e264daf5ba3860defe623a89d202dd87":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","98a04f56464afdffd4c430d6c47a0c868a38354e","98b44240f64a2d6935543ff25faee750b29204eb"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}