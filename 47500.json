{"path":"solr/solrj/src/java/org/apache/solr/client/solrj/request/CollectionAdminRequest.Create#Create(String,String,String,int).mjava","commits":[{"id":"5a02c54923e5f4de08097fa9028e09e8cf5caa82","date":1475573567,"type":0,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/request/CollectionAdminRequest.Create#Create(String,String,String,int).mjava","pathOld":"/dev/null","sourceNew":"    private Create(String collection, String config, String shards, int numReplicas) {\n      super(CollectionAction.CREATE, SolrIdentifierValidator.validateCollectionName(collection));\n      this.configName = config;\n      this.replicationFactor = numReplicas;\n      this.shards = shards;\n      this.routerName = ImplicitDocRouter.NAME;\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1967bed916cc89da82a1c2085f27976da6d08cbd","date":1475588750,"type":0,"author":"Noble Paul","isMerge":true,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/request/CollectionAdminRequest.Create#Create(String,String,String,int).mjava","pathOld":"/dev/null","sourceNew":"    private Create(String collection, String config, String shards, int numReplicas) {\n      super(CollectionAction.CREATE, SolrIdentifierValidator.validateCollectionName(collection));\n      this.configName = config;\n      this.replicationFactor = numReplicas;\n      this.shards = shards;\n      this.routerName = ImplicitDocRouter.NAME;\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":0,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/request/CollectionAdminRequest.Create#Create(String,String,String,int).mjava","pathOld":"/dev/null","sourceNew":"    private Create(String collection, String config, String shards, int numReplicas) {\n      super(CollectionAction.CREATE, SolrIdentifierValidator.validateCollectionName(collection));\n      this.configName = config;\n      this.replicationFactor = numReplicas;\n      this.shards = shards;\n      this.routerName = ImplicitDocRouter.NAME;\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"61c45e99cf6676da48f19d7511c73712ad39402b","date":1495508331,"type":3,"author":"Tomas Fernandez Lobbe","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/request/CollectionAdminRequest.Create#Create(String,String,String,int).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/request/CollectionAdminRequest.Create#Create(String,String,String,int).mjava","sourceNew":"    private Create(String collection, String config, String shards, int numNrtReplicas) {\n      super(CollectionAction.CREATE, SolrIdentifierValidator.validateCollectionName(collection));\n      this.configName = config;\n      this.nrtReplicas = numNrtReplicas;\n      this.shards = shards;\n      this.routerName = ImplicitDocRouter.NAME;\n    }\n\n","sourceOld":"    private Create(String collection, String config, String shards, int numReplicas) {\n      super(CollectionAction.CREATE, SolrIdentifierValidator.validateCollectionName(collection));\n      this.configName = config;\n      this.replicationFactor = numReplicas;\n      this.shards = shards;\n      this.routerName = ImplicitDocRouter.NAME;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ac97ea104d893f16aab430d9904473bc1f233f3c","date":1496249396,"type":3,"author":"Chris Hostetter","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/request/CollectionAdminRequest.Create#Create(String,String,String,int).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/request/CollectionAdminRequest.Create#Create(String,String,String,int).mjava","sourceNew":"    /** Constructor that assumes {@link ImplicitDocRouter#NAME} and an explicit list of <code>shards</code> */\n    protected Create(String collection, String config, String shards, int numNrtReplicas) {\n      this(collection, config, ImplicitDocRouter.NAME, null, checkNotNull(\"shards\",shards), numNrtReplicas, null, null);\n    }\n\n","sourceOld":"    private Create(String collection, String config, String shards, int numNrtReplicas) {\n      super(CollectionAction.CREATE, SolrIdentifierValidator.validateCollectionName(collection));\n      this.configName = config;\n      this.nrtReplicas = numNrtReplicas;\n      this.shards = shards;\n      this.routerName = ImplicitDocRouter.NAME;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3217321f3e1d7922898c6c633d17acfa840d6875","date":1496257480,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/request/CollectionAdminRequest.Create#Create(String,String,String,int).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/request/CollectionAdminRequest.Create#Create(String,String,String,int).mjava","sourceNew":"    /** Constructor that assumes {@link ImplicitDocRouter#NAME} and an explicit list of <code>shards</code> */\n    protected Create(String collection, String config, String shards, int numNrtReplicas) {\n      this(collection, config, ImplicitDocRouter.NAME, null, checkNotNull(\"shards\",shards), numNrtReplicas, null, null);\n    }\n\n","sourceOld":"    private Create(String collection, String config, String shards, int numNrtReplicas) {\n      super(CollectionAction.CREATE, SolrIdentifierValidator.validateCollectionName(collection));\n      this.configName = config;\n      this.nrtReplicas = numNrtReplicas;\n      this.shards = shards;\n      this.routerName = ImplicitDocRouter.NAME;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"42dc7f2d60851668d9efa2d12baa1d4ebe54b12f","date":1496281877,"type":3,"author":"Cao Manh Dat","isMerge":true,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/request/CollectionAdminRequest.Create#Create(String,String,String,int).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/request/CollectionAdminRequest.Create#Create(String,String,String,int).mjava","sourceNew":"    /** Constructor that assumes {@link ImplicitDocRouter#NAME} and an explicit list of <code>shards</code> */\n    protected Create(String collection, String config, String shards, int numNrtReplicas) {\n      this(collection, config, ImplicitDocRouter.NAME, null, checkNotNull(\"shards\",shards), numNrtReplicas, null, null);\n    }\n\n","sourceOld":"    private Create(String collection, String config, String shards, int numNrtReplicas) {\n      super(CollectionAction.CREATE, SolrIdentifierValidator.validateCollectionName(collection));\n      this.configName = config;\n      this.nrtReplicas = numNrtReplicas;\n      this.shards = shards;\n      this.routerName = ImplicitDocRouter.NAME;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e9017cf144952056066919f1ebc7897ff9bd71b1","date":1496757600,"type":3,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/request/CollectionAdminRequest.Create#Create(String,String,String,int).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/request/CollectionAdminRequest.Create#Create(String,String,String,int).mjava","sourceNew":"    /** Constructor that assumes {@link ImplicitDocRouter#NAME} and an explicit list of <code>shards</code> */\n    protected Create(String collection, String config, String shards, int numNrtReplicas) {\n      this(collection, config, ImplicitDocRouter.NAME, null, checkNotNull(\"shards\",shards), numNrtReplicas, null, null);\n    }\n\n","sourceOld":"    private Create(String collection, String config, String shards, int numReplicas) {\n      super(CollectionAction.CREATE, SolrIdentifierValidator.validateCollectionName(collection));\n      this.configName = config;\n      this.replicationFactor = numReplicas;\n      this.shards = shards;\n      this.routerName = ImplicitDocRouter.NAME;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"e9017cf144952056066919f1ebc7897ff9bd71b1":["1967bed916cc89da82a1c2085f27976da6d08cbd","42dc7f2d60851668d9efa2d12baa1d4ebe54b12f"],"61c45e99cf6676da48f19d7511c73712ad39402b":["1967bed916cc89da82a1c2085f27976da6d08cbd"],"1967bed916cc89da82a1c2085f27976da6d08cbd":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","5a02c54923e5f4de08097fa9028e09e8cf5caa82"],"ac97ea104d893f16aab430d9904473bc1f233f3c":["61c45e99cf6676da48f19d7511c73712ad39402b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3217321f3e1d7922898c6c633d17acfa840d6875":["61c45e99cf6676da48f19d7511c73712ad39402b","ac97ea104d893f16aab430d9904473bc1f233f3c"],"5a02c54923e5f4de08097fa9028e09e8cf5caa82":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"42dc7f2d60851668d9efa2d12baa1d4ebe54b12f":["61c45e99cf6676da48f19d7511c73712ad39402b","3217321f3e1d7922898c6c633d17acfa840d6875"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","1967bed916cc89da82a1c2085f27976da6d08cbd"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3217321f3e1d7922898c6c633d17acfa840d6875"]},"commit2Childs":{"e9017cf144952056066919f1ebc7897ff9bd71b1":[],"61c45e99cf6676da48f19d7511c73712ad39402b":["ac97ea104d893f16aab430d9904473bc1f233f3c","3217321f3e1d7922898c6c633d17acfa840d6875","42dc7f2d60851668d9efa2d12baa1d4ebe54b12f"],"1967bed916cc89da82a1c2085f27976da6d08cbd":["e9017cf144952056066919f1ebc7897ff9bd71b1","61c45e99cf6676da48f19d7511c73712ad39402b","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"ac97ea104d893f16aab430d9904473bc1f233f3c":["3217321f3e1d7922898c6c633d17acfa840d6875"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["1967bed916cc89da82a1c2085f27976da6d08cbd","5a02c54923e5f4de08097fa9028e09e8cf5caa82","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"3217321f3e1d7922898c6c633d17acfa840d6875":["42dc7f2d60851668d9efa2d12baa1d4ebe54b12f","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"42dc7f2d60851668d9efa2d12baa1d4ebe54b12f":["e9017cf144952056066919f1ebc7897ff9bd71b1"],"5a02c54923e5f4de08097fa9028e09e8cf5caa82":["1967bed916cc89da82a1c2085f27976da6d08cbd"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["e9017cf144952056066919f1ebc7897ff9bd71b1","4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}