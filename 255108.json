{"path":"lucene/core/src/test/org/apache/lucene/search/MultiThreadTermVectorsReader[TestMultiThreadTermVectors]#run().mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/MultiThreadTermVectorsReader[TestMultiThreadTermVectors]#run().mjava","pathOld":"lucene/src/test/org/apache/lucene/search/MultiThreadTermVectorsReader[TestMultiThreadTermVectors]#run().mjava","sourceNew":"  public void run() {\n      try {\n        // run the test 100 times\n        for (int i = 0; i < runsToDo; i++)\n          testTermVectors();\n      }\n      catch (Exception e) {\n        e.printStackTrace();\n      }\n      return;\n  }\n\n","sourceOld":"  public void run() {\n      try {\n        // run the test 100 times\n        for (int i = 0; i < runsToDo; i++)\n          testTermVectors();\n      }\n      catch (Exception e) {\n        e.printStackTrace();\n      }\n      return;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d08eba3d52b63561ebf936481ce73e6b6a14aa03","date":1333879759,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/MultiThreadTermVectorsReader[TestMultiThreadTermVectors]#run().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/MultiThreadTermVectorsReader[TestMultiThreadTermVectors]#run().mjava","sourceNew":"  public void run() {\n      try {\n        // run the test 100 times\n        for (int i = 0; i < runsToDo; i++)\n          testTermVectors();\n      }\n      catch (Exception e) {\n        e.printStackTrace();\n      }\n  }\n\n","sourceOld":"  public void run() {\n      try {\n        // run the test 100 times\n        for (int i = 0; i < runsToDo; i++)\n          testTermVectors();\n      }\n      catch (Exception e) {\n        e.printStackTrace();\n      }\n      return;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e3f8ac3877ad6d160de0fd3a6f7155b243dfbddf","date":1333892281,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/MultiThreadTermVectorsReader[TestMultiThreadTermVectors]#run().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/MultiThreadTermVectorsReader[TestMultiThreadTermVectors]#run().mjava","sourceNew":"  public void run() {\n      try {\n        // run the test 100 times\n        for (int i = 0; i < runsToDo; i++)\n          testTermVectors();\n      }\n      catch (Exception e) {\n        e.printStackTrace();\n      }\n      return;\n  }\n\n","sourceOld":"  public void run() {\n      try {\n        // run the test 100 times\n        for (int i = 0; i < runsToDo; i++)\n          testTermVectors();\n      }\n      catch (Exception e) {\n        e.printStackTrace();\n      }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7530de27b87b961b51f01bd1299b7004d46e8823","date":1355236261,"type":3,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/MultiThreadTermVectorsReader[TestMultiThreadTermVectors]#run().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/MultiThreadTermVectorsReader[TestMultiThreadTermVectors]#run().mjava","sourceNew":"  @Override\n  public void run() {\n      try {\n        // run the test 100 times\n        for (int i = 0; i < runsToDo; i++)\n          testTermVectors();\n      }\n      catch (Exception e) {\n        e.printStackTrace();\n      }\n      return;\n  }\n\n","sourceOld":"  public void run() {\n      try {\n        // run the test 100 times\n        for (int i = 0; i < runsToDo; i++)\n          testTermVectors();\n      }\n      catch (Exception e) {\n        e.printStackTrace();\n      }\n      return;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d3fcb70cf561547c7bb1506e0cf32ca7b1287064","date":1357616416,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/search/MultiThreadTermVectorsReader[TestMultiThreadTermVectors]#run().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/MultiThreadTermVectorsReader[TestMultiThreadTermVectors]#run().mjava","sourceNew":"  @Override\n  public void run() {\n      try {\n        // run the test 100 times\n        for (int i = 0; i < runsToDo; i++)\n          testTermVectors();\n      }\n      catch (Exception e) {\n        e.printStackTrace();\n      }\n      return;\n  }\n\n","sourceOld":"  public void run() {\n      try {\n        // run the test 100 times\n        for (int i = 0; i < runsToDo; i++)\n          testTermVectors();\n      }\n      catch (Exception e) {\n        e.printStackTrace();\n      }\n      return;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4208ed8e426ae5f75a41d8b4ae53f4587e413061","date":1580475454,"type":4,"author":"Robert Muir","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/core/src/test/org/apache/lucene/search/MultiThreadTermVectorsReader[TestMultiThreadTermVectors]#run().mjava","sourceNew":null,"sourceOld":"  @Override\n  public void run() {\n      try {\n        // run the test 100 times\n        for (int i = 0; i < runsToDo; i++)\n          testTermVectors();\n      }\n      catch (Exception e) {\n        e.printStackTrace();\n      }\n      return;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"d3fcb70cf561547c7bb1506e0cf32ca7b1287064":["e3f8ac3877ad6d160de0fd3a6f7155b243dfbddf","7530de27b87b961b51f01bd1299b7004d46e8823"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"e3f8ac3877ad6d160de0fd3a6f7155b243dfbddf":["d08eba3d52b63561ebf936481ce73e6b6a14aa03"],"4208ed8e426ae5f75a41d8b4ae53f4587e413061":["7530de27b87b961b51f01bd1299b7004d46e8823"],"d08eba3d52b63561ebf936481ce73e6b6a14aa03":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"7530de27b87b961b51f01bd1299b7004d46e8823":["e3f8ac3877ad6d160de0fd3a6f7155b243dfbddf"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["4208ed8e426ae5f75a41d8b4ae53f4587e413061"]},"commit2Childs":{"d3fcb70cf561547c7bb1506e0cf32ca7b1287064":[],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["d08eba3d52b63561ebf936481ce73e6b6a14aa03"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"e3f8ac3877ad6d160de0fd3a6f7155b243dfbddf":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","7530de27b87b961b51f01bd1299b7004d46e8823"],"4208ed8e426ae5f75a41d8b4ae53f4587e413061":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"d08eba3d52b63561ebf936481ce73e6b6a14aa03":["e3f8ac3877ad6d160de0fd3a6f7155b243dfbddf"],"7530de27b87b961b51f01bd1299b7004d46e8823":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","4208ed8e426ae5f75a41d8b4ae53f4587e413061"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}