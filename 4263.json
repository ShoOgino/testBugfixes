{"path":"lucene/src/test/org/apache/lucene/index/TestIndexWriterReader.AddDirectoriesThreads#doBody(int,Directory[]).mjava","commits":[{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexWriterReader.AddDirectoriesThreads#doBody(int,Directory[]).mjava","pathOld":"src/test/org/apache/lucene/index/TestIndexWriterReader.AddDirectoriesThreads#doBody(int,Directory[]).mjava","sourceNew":"    void doBody(int j, Directory[] dirs) throws Throwable {\n      switch (j % 4) {\n        case 0:\n          mainWriter.addIndexesNoOptimize(dirs);\n          mainWriter.optimize();\n          break;\n        case 1:\n          mainWriter.addIndexesNoOptimize(dirs);\n          numAddIndexesNoOptimize.incrementAndGet();\n          break;\n        case 2:\n          mainWriter.addIndexes(readers);\n          break;\n        case 3:\n          mainWriter.commit();\n      }\n      count.addAndGet(dirs.length*NUM_INIT_DOCS);\n    }\n\n","sourceOld":"    void doBody(int j, Directory[] dirs) throws Throwable {\n      switch (j % 4) {\n        case 0:\n          mainWriter.addIndexesNoOptimize(dirs);\n          mainWriter.optimize();\n          break;\n        case 1:\n          mainWriter.addIndexesNoOptimize(dirs);\n          numAddIndexesNoOptimize.incrementAndGet();\n          break;\n        case 2:\n          mainWriter.addIndexes(readers);\n          break;\n        case 3:\n          mainWriter.commit();\n      }\n      count.addAndGet(dirs.length*NUM_INIT_DOCS);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fb10b6bcde550b87d8f10e5f010bd8f3021023b6","date":1274974592,"type":3,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexWriterReader.AddDirectoriesThreads#doBody(int,Directory[]).mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexWriterReader.AddDirectoriesThreads#doBody(int,Directory[]).mjava","sourceNew":"    void doBody(int j, Directory[] dirs) throws Throwable {\n      switch (j % 4) {\n        case 0:\n          mainWriter.addIndexes(dirs);\n          mainWriter.optimize();\n          break;\n        case 1:\n          mainWriter.addIndexes(dirs);\n          numaddIndexes.incrementAndGet();\n          break;\n        case 2:\n          mainWriter.addIndexes(readers);\n          break;\n        case 3:\n          mainWriter.commit();\n      }\n      count.addAndGet(dirs.length*NUM_INIT_DOCS);\n    }\n\n","sourceOld":"    void doBody(int j, Directory[] dirs) throws Throwable {\n      switch (j % 4) {\n        case 0:\n          mainWriter.addIndexesNoOptimize(dirs);\n          mainWriter.optimize();\n          break;\n        case 1:\n          mainWriter.addIndexesNoOptimize(dirs);\n          numAddIndexesNoOptimize.incrementAndGet();\n          break;\n        case 2:\n          mainWriter.addIndexes(readers);\n          break;\n        case 3:\n          mainWriter.commit();\n      }\n      count.addAndGet(dirs.length*NUM_INIT_DOCS);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"d14e8d18c0e3970c20354dbeeb49da11bd587fbd","date":1321041051,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexWriterReader.AddDirectoriesThreads#doBody(int,Directory[]).mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexWriterReader.AddDirectoriesThreads#doBody(int,Directory[]).mjava","sourceNew":"    void doBody(int j, Directory[] dirs) throws Throwable {\n      switch (j % 4) {\n        case 0:\n          mainWriter.addIndexes(dirs);\n          mainWriter.forceMerge(1);\n          break;\n        case 1:\n          mainWriter.addIndexes(dirs);\n          numaddIndexes.incrementAndGet();\n          break;\n        case 2:\n          mainWriter.addIndexes(readers);\n          break;\n        case 3:\n          mainWriter.commit();\n      }\n      count.addAndGet(dirs.length*NUM_INIT_DOCS);\n    }\n\n","sourceOld":"    void doBody(int j, Directory[] dirs) throws Throwable {\n      switch (j % 4) {\n        case 0:\n          mainWriter.addIndexes(dirs);\n          mainWriter.optimize();\n          break;\n        case 1:\n          mainWriter.addIndexes(dirs);\n          numaddIndexes.incrementAndGet();\n          break;\n        case 2:\n          mainWriter.addIndexes(readers);\n          break;\n        case 3:\n          mainWriter.commit();\n      }\n      count.addAndGet(dirs.length*NUM_INIT_DOCS);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":5,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriterReader.AddDirectoriesThreads#doBody(int,Directory[]).mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexWriterReader.AddDirectoriesThreads#doBody(int,Directory[]).mjava","sourceNew":"    void doBody(int j, Directory[] dirs) throws Throwable {\n      switch (j % 4) {\n        case 0:\n          mainWriter.addIndexes(dirs);\n          mainWriter.forceMerge(1);\n          break;\n        case 1:\n          mainWriter.addIndexes(dirs);\n          numaddIndexes.incrementAndGet();\n          break;\n        case 2:\n          mainWriter.addIndexes(readers);\n          break;\n        case 3:\n          mainWriter.commit();\n      }\n      count.addAndGet(dirs.length*NUM_INIT_DOCS);\n    }\n\n","sourceOld":"    void doBody(int j, Directory[] dirs) throws Throwable {\n      switch (j % 4) {\n        case 0:\n          mainWriter.addIndexes(dirs);\n          mainWriter.forceMerge(1);\n          break;\n        case 1:\n          mainWriter.addIndexes(dirs);\n          numaddIndexes.incrementAndGet();\n          break;\n        case 2:\n          mainWriter.addIndexes(readers);\n          break;\n        case 3:\n          mainWriter.commit();\n      }\n      count.addAndGet(dirs.length*NUM_INIT_DOCS);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["d14e8d18c0e3970c20354dbeeb49da11bd587fbd"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"d14e8d18c0e3970c20354dbeeb49da11bd587fbd":["fb10b6bcde550b87d8f10e5f010bd8f3021023b6"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"fb10b6bcde550b87d8f10e5f010bd8f3021023b6":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"d14e8d18c0e3970c20354dbeeb49da11bd587fbd":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"fb10b6bcde550b87d8f10e5f010bd8f3021023b6":["d14e8d18c0e3970c20354dbeeb49da11bd587fbd"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["fb10b6bcde550b87d8f10e5f010bd8f3021023b6"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}