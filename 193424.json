{"path":"solr/core/src/java/org/apache/solr/update/CdcrUpdateLog.CdcrLogReader#getSubReader().mjava","commits":[{"id":"86290366cefc1b9d4eced13b430858c4a4c0421d","date":1432321109,"type":0,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/update/CdcrUpdateLog.CdcrLogReader#getSubReader().mjava","pathOld":"/dev/null","sourceNew":"    /**\n     * Expert: Instantiate a sub-reader. A sub-reader is used for batch updates. It allows to iterates over the\n     * update logs entries without modifying the state of the parent log reader. If the batch update fails, the state\n     * of the sub-reader is discarded and the state of the parent reader is not modified. If the batch update\n     * is successful, the sub-reader is used to fast forward the parent reader with the method\n     * {@link #forwardSeek(org.apache.solr.update.CdcrUpdateLog.CdcrLogReader)}.\n     */\n    public CdcrLogReader getSubReader() {\n      // Add the last element of the queue to properly initialise the pointer and log reader\n      CdcrLogReader clone = new CdcrLogReader(new ArrayList<TransactionLog>(), this.tlogs.peekLast());\n      clone.tlogs.clear(); // clear queue before copy\n      clone.tlogs.addAll(tlogs); // perform a copy of the list\n      clone.lastPositionInTLog = this.lastPositionInTLog;\n      clone.numRecordsReadInCurrentTlog = this.numRecordsReadInCurrentTlog;\n      clone.lastVersion = this.lastVersion;\n      clone.nextToLastVersion = this.nextToLastVersion;\n\n      // If the update log is not empty, we need to initialise the tlog reader\n      // NB: the tlogReader is equal to null if the update log is empty\n      if (tlogReader != null) {\n        clone.tlogReader.close();\n        clone.tlogReader = currentTlog.getReader(this.tlogReader.currentPos());\n      }\n\n      return clone;\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"23ec6d2969d61cadbfd0a5452e9be1f9999e8aa1","date":1598647393,"type":4,"author":"Ishan Chattopadhyaya","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/core/src/java/org/apache/solr/update/CdcrUpdateLog.CdcrLogReader#getSubReader().mjava","sourceNew":null,"sourceOld":"    /**\n     * Expert: Instantiate a sub-reader. A sub-reader is used for batch updates. It allows to iterates over the\n     * update logs entries without modifying the state of the parent log reader. If the batch update fails, the state\n     * of the sub-reader is discarded and the state of the parent reader is not modified. If the batch update\n     * is successful, the sub-reader is used to fast forward the parent reader with the method\n     * {@link #forwardSeek(org.apache.solr.update.CdcrUpdateLog.CdcrLogReader)}.\n     */\n    public CdcrLogReader getSubReader() {\n      // Add the last element of the queue to properly initialise the pointer and log reader\n      CdcrLogReader clone = new CdcrLogReader(new ArrayList<TransactionLog>(), this.tlogs.peekLast());\n      clone.tlogs.clear(); // clear queue before copy\n      clone.tlogs.addAll(tlogs); // perform a copy of the list\n      clone.lastPositionInTLog = this.lastPositionInTLog;\n      clone.numRecordsReadInCurrentTlog = this.numRecordsReadInCurrentTlog;\n      clone.lastVersion = this.lastVersion;\n      clone.nextToLastVersion = this.nextToLastVersion;\n\n      // If the update log is not empty, we need to initialise the tlog reader\n      // NB: the tlogReader is equal to null if the update log is empty\n      if (tlogReader != null) {\n        clone.tlogReader.close();\n        clone.tlogReader = currentTlog.getReader(this.tlogReader.currentPos());\n      }\n\n      return clone;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"86290366cefc1b9d4eced13b430858c4a4c0421d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"23ec6d2969d61cadbfd0a5452e9be1f9999e8aa1":["86290366cefc1b9d4eced13b430858c4a4c0421d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["23ec6d2969d61cadbfd0a5452e9be1f9999e8aa1"]},"commit2Childs":{"86290366cefc1b9d4eced13b430858c4a4c0421d":["23ec6d2969d61cadbfd0a5452e9be1f9999e8aa1"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["86290366cefc1b9d4eced13b430858c4a4c0421d"],"23ec6d2969d61cadbfd0a5452e9be1f9999e8aa1":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}