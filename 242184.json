{"path":"lucene/src/test/org/apache/lucene/index/TestParallelReader#parallel(Random).mjava","commits":[{"id":"b21422ff1d1d56499dec481f193b402e5e8def5b","date":1281472367,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestParallelReader#parallel(Random).mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestParallelReader#parallel().mjava","sourceNew":"  // Fields 1 & 2 in one index, 3 & 4 in other, with ParallelReader:\n  private Searcher parallel(Random random) throws IOException {\n    Directory dir1 = getDir1(random);\n    Directory dir2 = getDir2(random);\n    ParallelReader pr = new ParallelReader();\n    pr.add(IndexReader.open(dir1, false));\n    pr.add(IndexReader.open(dir2, false));\n    return new IndexSearcher(pr);\n  }\n\n","sourceOld":"  // Fields 1 & 2 in one index, 3 & 4 in other, with ParallelReader:\n  private Searcher parallel() throws IOException {\n    Directory dir1 = getDir1();\n    Directory dir2 = getDir2();\n    ParallelReader pr = new ParallelReader();\n    pr.add(IndexReader.open(dir1, false));\n    pr.add(IndexReader.open(dir2, false));\n    return new IndexSearcher(pr);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ab9633cb67e3c0aec3c066147a23a957d6e7ad8c","date":1281646583,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestParallelReader#parallel(Random).mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestParallelReader#parallel(Random).mjava","sourceNew":"  // Fields 1 & 2 in one index, 3 & 4 in other, with ParallelReader:\n  private IndexSearcher parallel(Random random) throws IOException {\n    dir1 = getDir1(random);\n    dir2 = getDir2(random);\n    ParallelReader pr = new ParallelReader();\n    pr.add(IndexReader.open(dir1, false));\n    pr.add(IndexReader.open(dir2, false));\n    return new IndexSearcher(pr);\n  }\n\n","sourceOld":"  // Fields 1 & 2 in one index, 3 & 4 in other, with ParallelReader:\n  private Searcher parallel(Random random) throws IOException {\n    Directory dir1 = getDir1(random);\n    Directory dir2 = getDir2(random);\n    ParallelReader pr = new ParallelReader();\n    pr.add(IndexReader.open(dir1, false));\n    pr.add(IndexReader.open(dir2, false));\n    return new IndexSearcher(pr);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","date":1292920096,"type":0,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestParallelReader#parallel(Random).mjava","pathOld":"/dev/null","sourceNew":"  // Fields 1 & 2 in one index, 3 & 4 in other, with ParallelReader:\n  private IndexSearcher parallel(Random random) throws IOException {\n    dir1 = getDir1(random);\n    dir2 = getDir2(random);\n    ParallelReader pr = new ParallelReader();\n    pr.add(IndexReader.open(dir1, false));\n    pr.add(IndexReader.open(dir2, false));\n    return new IndexSearcher(pr);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"790e1fde4caa765b3faaad3fbcd25c6973450336","date":1296689245,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestParallelReader#parallel(Random).mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestParallelReader#parallel(Random).mjava","sourceNew":"  // Fields 1 & 2 in one index, 3 & 4 in other, with ParallelReader:\n  private IndexSearcher parallel(Random random) throws IOException {\n    dir1 = getDir1(random);\n    dir2 = getDir2(random);\n    ParallelReader pr = new ParallelReader();\n    pr.add(IndexReader.open(dir1, false));\n    pr.add(IndexReader.open(dir2, false));\n    return newSearcher(pr);\n  }\n\n","sourceOld":"  // Fields 1 & 2 in one index, 3 & 4 in other, with ParallelReader:\n  private IndexSearcher parallel(Random random) throws IOException {\n    dir1 = getDir1(random);\n    dir2 = getDir2(random);\n    ParallelReader pr = new ParallelReader();\n    pr.add(IndexReader.open(dir1, false));\n    pr.add(IndexReader.open(dir2, false));\n    return new IndexSearcher(pr);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"29ef99d61cda9641b6250bf9567329a6e65f901d","date":1297244127,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestParallelReader#parallel(Random).mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestParallelReader#parallel(Random).mjava","sourceNew":"  // Fields 1 & 2 in one index, 3 & 4 in other, with ParallelReader:\n  private IndexSearcher parallel(Random random) throws IOException {\n    dir1 = getDir1(random);\n    dir2 = getDir2(random);\n    ParallelReader pr = new ParallelReader();\n    pr.add(IndexReader.open(dir1, false));\n    pr.add(IndexReader.open(dir2, false));\n    return newSearcher(pr);\n  }\n\n","sourceOld":"  // Fields 1 & 2 in one index, 3 & 4 in other, with ParallelReader:\n  private IndexSearcher parallel(Random random) throws IOException {\n    dir1 = getDir1(random);\n    dir2 = getDir2(random);\n    ParallelReader pr = new ParallelReader();\n    pr.add(IndexReader.open(dir1, false));\n    pr.add(IndexReader.open(dir2, false));\n    return new IndexSearcher(pr);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bde51b089eb7f86171eb3406e38a274743f9b7ac","date":1298336439,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestParallelReader#parallel(Random).mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestParallelReader#parallel(Random).mjava","sourceNew":"  // Fields 1 & 2 in one index, 3 & 4 in other, with ParallelReader:\n  private IndexSearcher parallel(Random random) throws IOException {\n    dir1 = getDir1(random);\n    dir2 = getDir2(random);\n    ParallelReader pr = new ParallelReader();\n    pr.add(IndexReader.open(dir1, false));\n    pr.add(IndexReader.open(dir2, false));\n    return newSearcher(pr);\n  }\n\n","sourceOld":"  // Fields 1 & 2 in one index, 3 & 4 in other, with ParallelReader:\n  private IndexSearcher parallel(Random random) throws IOException {\n    dir1 = getDir1(random);\n    dir2 = getDir2(random);\n    ParallelReader pr = new ParallelReader();\n    pr.add(IndexReader.open(dir1, false));\n    pr.add(IndexReader.open(dir2, false));\n    return new IndexSearcher(pr);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1c5b026d03cbbb03ca4c0b97d14e9839682281dc","date":1323049298,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestParallelReader#parallel(Random).mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestParallelReader#parallel(Random).mjava","sourceNew":"  // Fields 1 & 2 in one index, 3 & 4 in other, with ParallelReader:\n  private IndexSearcher parallel(Random random) throws IOException {\n    dir1 = getDir1(random);\n    dir2 = getDir2(random);\n    ParallelReader pr = new ParallelReader();\n    pr.add(IndexReader.open(dir1));\n    pr.add(IndexReader.open(dir2));\n    return newSearcher(pr);\n  }\n\n","sourceOld":"  // Fields 1 & 2 in one index, 3 & 4 in other, with ParallelReader:\n  private IndexSearcher parallel(Random random) throws IOException {\n    dir1 = getDir1(random);\n    dir2 = getDir2(random);\n    ParallelReader pr = new ParallelReader();\n    pr.add(IndexReader.open(dir1, false));\n    pr.add(IndexReader.open(dir2, false));\n    return newSearcher(pr);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3615ce4a1f785ae1b779244de52c6a7d99227e60","date":1323422019,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestParallelReader#parallel(Random).mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestParallelReader#parallel(Random).mjava","sourceNew":"  // Fields 1 & 2 in one index, 3 & 4 in other, with ParallelReader:\n  private IndexSearcher parallel(Random random) throws IOException {\n    dir1 = getDir1(random);\n    dir2 = getDir2(random);\n    ParallelReader pr = new ParallelReader();\n    pr.add(IndexReader.open(dir1));\n    pr.add(IndexReader.open(dir2));\n    return newSearcher(pr);\n  }\n\n","sourceOld":"  // Fields 1 & 2 in one index, 3 & 4 in other, with ParallelReader:\n  private IndexSearcher parallel(Random random) throws IOException {\n    dir1 = getDir1(random);\n    dir2 = getDir2(random);\n    ParallelReader pr = new ParallelReader();\n    pr.add(IndexReader.open(dir1, false));\n    pr.add(IndexReader.open(dir2, false));\n    return newSearcher(pr);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ba5bc70a1fc1e0abc1eb4171af0d6f2532711c00","date":1323437438,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestParallelReader#parallel(Random).mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestParallelReader#parallel(Random).mjava","sourceNew":"  // Fields 1 & 2 in one index, 3 & 4 in other, with ParallelReader:\n  private IndexSearcher parallel(Random random) throws IOException {\n    dir1 = getDir1(random);\n    dir2 = getDir2(random);\n    ParallelReader pr = new ParallelReader();\n    pr.add(IndexReader.open(dir1));\n    pr.add(IndexReader.open(dir2));\n    return newSearcher(pr);\n  }\n\n","sourceOld":"  // Fields 1 & 2 in one index, 3 & 4 in other, with ParallelReader:\n  private IndexSearcher parallel(Random random) throws IOException {\n    dir1 = getDir1(random);\n    dir2 = getDir2(random);\n    ParallelReader pr = new ParallelReader();\n    pr.add(IndexReader.open(dir1, false));\n    pr.add(IndexReader.open(dir2, false));\n    return newSearcher(pr);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2e32cce0ae9c0f432ccb5f8649a16a5a74e6ef92","date":1327858596,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestParallelReader#parallel(Random).mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestParallelReader#parallel(Random).mjava","sourceNew":"  // Fields 1 & 2 in one index, 3 & 4 in other, with ParallelReader:\n  private IndexSearcher parallel(Random random) throws IOException {\n    dir1 = getDir1(random);\n    dir2 = getDir2(random);\n    ParallelReader pr = new ParallelReader();\n    pr.add(SlowCompositeReaderWrapper.wrap(DirectoryReader.open(dir1)));\n    pr.add(SlowCompositeReaderWrapper.wrap(DirectoryReader.open(dir2)));\n    return newSearcher(pr);\n  }\n\n","sourceOld":"  // Fields 1 & 2 in one index, 3 & 4 in other, with ParallelReader:\n  private IndexSearcher parallel(Random random) throws IOException {\n    dir1 = getDir1(random);\n    dir2 = getDir2(random);\n    ParallelReader pr = new ParallelReader();\n    pr.add(IndexReader.open(dir1));\n    pr.add(IndexReader.open(dir2));\n    return newSearcher(pr);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5cab9a86bd67202d20b6adc463008c8e982b070a","date":1327966443,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestParallelReader#parallel(Random).mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestParallelReader#parallel(Random).mjava","sourceNew":"  // Fields 1 & 2 in one index, 3 & 4 in other, with ParallelReader:\n  private IndexSearcher parallel(Random random) throws IOException {\n    dir1 = getDir1(random);\n    dir2 = getDir2(random);\n    ParallelReader pr = new ParallelReader();\n    pr.add(SlowCompositeReaderWrapper.wrap(DirectoryReader.open(dir1)));\n    pr.add(SlowCompositeReaderWrapper.wrap(DirectoryReader.open(dir2)));\n    return newSearcher(pr);\n  }\n\n","sourceOld":"  // Fields 1 & 2 in one index, 3 & 4 in other, with ParallelReader:\n  private IndexSearcher parallel(Random random) throws IOException {\n    dir1 = getDir1(random);\n    dir2 = getDir2(random);\n    ParallelReader pr = new ParallelReader();\n    pr.add(IndexReader.open(dir1));\n    pr.add(IndexReader.open(dir2));\n    return newSearcher(pr);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9ecf541c11d0df215aa1ea806f826d88fb9b5b9b","date":1328624680,"type":5,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestParallelAtomicReader#parallel(Random).mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestParallelReader#parallel(Random).mjava","sourceNew":"  // Fields 1 & 2 in one index, 3 & 4 in other, with ParallelReader:\n  private IndexSearcher parallel(Random random) throws IOException {\n    dir1 = getDir1(random);\n    dir2 = getDir2(random);\n    ParallelAtomicReader pr = new ParallelAtomicReader.Builder()\n      .add(SlowCompositeReaderWrapper.wrap(DirectoryReader.open(dir1)))\n      .add(SlowCompositeReaderWrapper.wrap(DirectoryReader.open(dir2)))\n      .build();\n    return newSearcher(pr);\n  }\n\n","sourceOld":"  // Fields 1 & 2 in one index, 3 & 4 in other, with ParallelReader:\n  private IndexSearcher parallel(Random random) throws IOException {\n    dir1 = getDir1(random);\n    dir2 = getDir2(random);\n    ParallelReader pr = new ParallelReader();\n    pr.add(SlowCompositeReaderWrapper.wrap(DirectoryReader.open(dir1)));\n    pr.add(SlowCompositeReaderWrapper.wrap(DirectoryReader.open(dir2)));\n    return newSearcher(pr);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9ecf541c11d0df215aa1ea806f826d88fb9b5b9b","date":1328624680,"type":6,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestParallelCompositeReader#parallel(Random).mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestParallelReader#parallel(Random).mjava","sourceNew":"  // Fields 1 & 2 in one index, 3 & 4 in other, with ParallelReader:\n  private IndexSearcher parallel(Random random) throws IOException {\n    dir1 = getDir1(random);\n    dir2 = getDir2(random);\n    final DirectoryReader rd1 = DirectoryReader.open(dir1),\n      rd2 = DirectoryReader.open(dir2);\n    assertEquals(2, rd1.getSequentialSubReaders().length);\n    assertEquals(2, rd2.getSequentialSubReaders().length);\n    ParallelCompositeReader pr = new ParallelCompositeReader.Builder()\n      .add(rd1).add(rd2).build();\n    return newSearcher(pr);\n  }\n\n","sourceOld":"  // Fields 1 & 2 in one index, 3 & 4 in other, with ParallelReader:\n  private IndexSearcher parallel(Random random) throws IOException {\n    dir1 = getDir1(random);\n    dir2 = getDir2(random);\n    ParallelReader pr = new ParallelReader();\n    pr.add(SlowCompositeReaderWrapper.wrap(DirectoryReader.open(dir1)));\n    pr.add(SlowCompositeReaderWrapper.wrap(DirectoryReader.open(dir2)));\n    return newSearcher(pr);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"08b385e33541f6749e71618c9ab36fad908a7ed0","date":1328629771,"type":1,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestParallelReader#parallel(Random).mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestParallelAtomicReader#parallel(Random).mjava","sourceNew":"  // Fields 1 & 2 in one index, 3 & 4 in other, with ParallelReader:\n  private IndexSearcher parallel(Random random) throws IOException {\n    dir1 = getDir1(random);\n    dir2 = getDir2(random);\n    ParallelReader pr = new ParallelReader();\n    pr.add(SlowCompositeReaderWrapper.wrap(DirectoryReader.open(dir1)));\n    pr.add(SlowCompositeReaderWrapper.wrap(DirectoryReader.open(dir2)));\n    return newSearcher(pr);\n  }\n\n","sourceOld":"  // Fields 1 & 2 in one index, 3 & 4 in other, with ParallelReader:\n  private IndexSearcher parallel(Random random) throws IOException {\n    dir1 = getDir1(random);\n    dir2 = getDir2(random);\n    ParallelAtomicReader pr = new ParallelAtomicReader.Builder()\n      .add(SlowCompositeReaderWrapper.wrap(DirectoryReader.open(dir1)))\n      .add(SlowCompositeReaderWrapper.wrap(DirectoryReader.open(dir2)))\n      .build();\n    return newSearcher(pr);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":5,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestParallelReader#parallel(Random).mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestParallelReader#parallel(Random).mjava","sourceNew":"  // Fields 1 & 2 in one index, 3 & 4 in other, with ParallelReader:\n  private IndexSearcher parallel(Random random) throws IOException {\n    dir1 = getDir1(random);\n    dir2 = getDir2(random);\n    ParallelReader pr = new ParallelReader();\n    pr.add(SlowCompositeReaderWrapper.wrap(DirectoryReader.open(dir1)));\n    pr.add(SlowCompositeReaderWrapper.wrap(DirectoryReader.open(dir2)));\n    return newSearcher(pr);\n  }\n\n","sourceOld":"  // Fields 1 & 2 in one index, 3 & 4 in other, with ParallelReader:\n  private IndexSearcher parallel(Random random) throws IOException {\n    dir1 = getDir1(random);\n    dir2 = getDir2(random);\n    ParallelReader pr = new ParallelReader();\n    pr.add(SlowCompositeReaderWrapper.wrap(DirectoryReader.open(dir1)));\n    pr.add(SlowCompositeReaderWrapper.wrap(DirectoryReader.open(dir2)));\n    return newSearcher(pr);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"08b385e33541f6749e71618c9ab36fad908a7ed0":["9ecf541c11d0df215aa1ea806f826d88fb9b5b9b"],"2e32cce0ae9c0f432ccb5f8649a16a5a74e6ef92":["3615ce4a1f785ae1b779244de52c6a7d99227e60"],"ab9633cb67e3c0aec3c066147a23a957d6e7ad8c":["b21422ff1d1d56499dec481f193b402e5e8def5b"],"ba5bc70a1fc1e0abc1eb4171af0d6f2532711c00":["790e1fde4caa765b3faaad3fbcd25c6973450336","3615ce4a1f785ae1b779244de52c6a7d99227e60"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["08b385e33541f6749e71618c9ab36fad908a7ed0"],"9ecf541c11d0df215aa1ea806f826d88fb9b5b9b":["5cab9a86bd67202d20b6adc463008c8e982b070a"],"1c5b026d03cbbb03ca4c0b97d14e9839682281dc":["790e1fde4caa765b3faaad3fbcd25c6973450336"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","ab9633cb67e3c0aec3c066147a23a957d6e7ad8c"],"5cab9a86bd67202d20b6adc463008c8e982b070a":["3615ce4a1f785ae1b779244de52c6a7d99227e60","2e32cce0ae9c0f432ccb5f8649a16a5a74e6ef92"],"790e1fde4caa765b3faaad3fbcd25c6973450336":["ab9633cb67e3c0aec3c066147a23a957d6e7ad8c"],"29ef99d61cda9641b6250bf9567329a6e65f901d":["ab9633cb67e3c0aec3c066147a23a957d6e7ad8c","790e1fde4caa765b3faaad3fbcd25c6973450336"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3615ce4a1f785ae1b779244de52c6a7d99227e60":["790e1fde4caa765b3faaad3fbcd25c6973450336","1c5b026d03cbbb03ca4c0b97d14e9839682281dc"],"b21422ff1d1d56499dec481f193b402e5e8def5b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"bde51b089eb7f86171eb3406e38a274743f9b7ac":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","790e1fde4caa765b3faaad3fbcd25c6973450336"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"]},"commit2Childs":{"08b385e33541f6749e71618c9ab36fad908a7ed0":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"2e32cce0ae9c0f432ccb5f8649a16a5a74e6ef92":["5cab9a86bd67202d20b6adc463008c8e982b070a"],"ab9633cb67e3c0aec3c066147a23a957d6e7ad8c":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","790e1fde4caa765b3faaad3fbcd25c6973450336","29ef99d61cda9641b6250bf9567329a6e65f901d"],"ba5bc70a1fc1e0abc1eb4171af0d6f2532711c00":[],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"9ecf541c11d0df215aa1ea806f826d88fb9b5b9b":["08b385e33541f6749e71618c9ab36fad908a7ed0"],"1c5b026d03cbbb03ca4c0b97d14e9839682281dc":["3615ce4a1f785ae1b779244de52c6a7d99227e60"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["bde51b089eb7f86171eb3406e38a274743f9b7ac"],"5cab9a86bd67202d20b6adc463008c8e982b070a":["9ecf541c11d0df215aa1ea806f826d88fb9b5b9b"],"790e1fde4caa765b3faaad3fbcd25c6973450336":["ba5bc70a1fc1e0abc1eb4171af0d6f2532711c00","1c5b026d03cbbb03ca4c0b97d14e9839682281dc","29ef99d61cda9641b6250bf9567329a6e65f901d","3615ce4a1f785ae1b779244de52c6a7d99227e60","bde51b089eb7f86171eb3406e38a274743f9b7ac"],"29ef99d61cda9641b6250bf9567329a6e65f901d":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","b21422ff1d1d56499dec481f193b402e5e8def5b"],"3615ce4a1f785ae1b779244de52c6a7d99227e60":["2e32cce0ae9c0f432ccb5f8649a16a5a74e6ef92","ba5bc70a1fc1e0abc1eb4171af0d6f2532711c00","5cab9a86bd67202d20b6adc463008c8e982b070a"],"b21422ff1d1d56499dec481f193b402e5e8def5b":["ab9633cb67e3c0aec3c066147a23a957d6e7ad8c"],"bde51b089eb7f86171eb3406e38a274743f9b7ac":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["ba5bc70a1fc1e0abc1eb4171af0d6f2532711c00","29ef99d61cda9641b6250bf9567329a6e65f901d","bde51b089eb7f86171eb3406e38a274743f9b7ac","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}