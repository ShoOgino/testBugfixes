{"path":"lucene/backwards/src/test/org/apache/lucene/search/function/TestDocValues#testGetAverageValue().mjava","commits":[{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/backwards/src/test/org/apache/lucene/search/function/TestDocValues#testGetAverageValue().mjava","pathOld":"backwards/src/test/org/apache/lucene/search/function/TestDocValues#testGetAverageValue().mjava","sourceNew":"  public void testGetAverageValue() {\n    float[] innerArray = new float[] { 1.0f, 1.0f, 1.0f, 1.0f };\n    DocValuesTestImpl docValues = new DocValuesTestImpl(innerArray);\n    assertEquals(\"the average is 1.0f\", 1.0f, docValues.getAverageValue(), 0);\n\n    innerArray = new float[] { 1.0f, 2.0f, 3.0f, 4.0f, 5.0f, 6.0f };\n    docValues = new DocValuesTestImpl(innerArray);\n    assertEquals(\"the average is 3.5f\", 3.5f, docValues.getAverageValue(), 0);\n\n    // test with negative values\n    innerArray = new float[] { -1.0f, 2.0f };\n    docValues = new DocValuesTestImpl(innerArray);\n    assertEquals(\"the average is 0.5f\", 0.5f, docValues.getAverageValue(), 0);\n\n    // test with without values - NaN\n    innerArray = new float[] {};\n    docValues = new DocValuesTestImpl(innerArray);\n    assertTrue(\"the average is NaN - no values in inner array\", Float\n        .isNaN(docValues.getAverageValue()));\n  }\n\n","sourceOld":"  public void testGetAverageValue() {\n    float[] innerArray = new float[] { 1.0f, 1.0f, 1.0f, 1.0f };\n    DocValuesTestImpl docValues = new DocValuesTestImpl(innerArray);\n    assertEquals(\"the average is 1.0f\", 1.0f, docValues.getAverageValue(), 0);\n\n    innerArray = new float[] { 1.0f, 2.0f, 3.0f, 4.0f, 5.0f, 6.0f };\n    docValues = new DocValuesTestImpl(innerArray);\n    assertEquals(\"the average is 3.5f\", 3.5f, docValues.getAverageValue(), 0);\n\n    // test with negative values\n    innerArray = new float[] { -1.0f, 2.0f };\n    docValues = new DocValuesTestImpl(innerArray);\n    assertEquals(\"the average is 0.5f\", 0.5f, docValues.getAverageValue(), 0);\n\n    // test with without values - NaN\n    innerArray = new float[] {};\n    docValues = new DocValuesTestImpl(innerArray);\n    assertTrue(\"the average is NaN - no values in inner array\", Float\n        .isNaN(docValues.getAverageValue()));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"90eca6fcb6635ca73ea4fdbe2f57d2033b66d3b6","date":1272983566,"type":4,"author":"Uwe Schindler","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/backwards/src/test/org/apache/lucene/search/function/TestDocValues#testGetAverageValue().mjava","sourceNew":null,"sourceOld":"  public void testGetAverageValue() {\n    float[] innerArray = new float[] { 1.0f, 1.0f, 1.0f, 1.0f };\n    DocValuesTestImpl docValues = new DocValuesTestImpl(innerArray);\n    assertEquals(\"the average is 1.0f\", 1.0f, docValues.getAverageValue(), 0);\n\n    innerArray = new float[] { 1.0f, 2.0f, 3.0f, 4.0f, 5.0f, 6.0f };\n    docValues = new DocValuesTestImpl(innerArray);\n    assertEquals(\"the average is 3.5f\", 3.5f, docValues.getAverageValue(), 0);\n\n    // test with negative values\n    innerArray = new float[] { -1.0f, 2.0f };\n    docValues = new DocValuesTestImpl(innerArray);\n    assertEquals(\"the average is 0.5f\", 0.5f, docValues.getAverageValue(), 0);\n\n    // test with without values - NaN\n    innerArray = new float[] {};\n    docValues = new DocValuesTestImpl(innerArray);\n    assertTrue(\"the average is NaN - no values in inner array\", Float\n        .isNaN(docValues.getAverageValue()));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"90eca6fcb6635ca73ea4fdbe2f57d2033b66d3b6":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["90eca6fcb6635ca73ea4fdbe2f57d2033b66d3b6"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"90eca6fcb6635ca73ea4fdbe2f57d2033b66d3b6":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["90eca6fcb6635ca73ea4fdbe2f57d2033b66d3b6"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}