{"path":"lucene/contrib/memory/src/java/org/apache/lucene/index/memory/MemoryIndex.MemoryIndexReader#docFreq(String,BytesRef).mjava","commits":[{"id":"936f1eae75daf11568fe1480aec9e06d2ef55367","date":1323215013,"type":1,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/contrib/memory/src/java/org/apache/lucene/index/memory/MemoryIndex.MemoryIndexReader#docFreq(String,BytesRef).mjava","pathOld":"lucene/contrib/memory/src/java/org/apache/lucene/index/memory/MemoryIndex.MemoryIndexReader#docFreq(Term).mjava","sourceNew":"    @Override\n    public int docFreq(String field, BytesRef term) {\n      Info info = getInfo(field);\n      int freq = 0;\n      if (info != null) freq = info.getPositions(term) != null ? 1 : 0;\n      if (DEBUG) System.err.println(\"MemoryIndexReader.docFreq: \" + field + \":\" + term + \", freq:\" + freq);\n      return freq;\n    }\n\n","sourceOld":"    @Override\n    public int docFreq(Term term) {\n      Info info = getInfo(term.field());\n      int freq = 0;\n      if (info != null) freq = info.getPositions(term.bytes()) != null ? 1 : 0;\n      if (DEBUG) System.err.println(\"MemoryIndexReader.docFreq: \" + term + \", freq:\" + freq);\n      return freq;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3615ce4a1f785ae1b779244de52c6a7d99227e60","date":1323422019,"type":1,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/contrib/memory/src/java/org/apache/lucene/index/memory/MemoryIndex.MemoryIndexReader#docFreq(String,BytesRef).mjava","pathOld":"lucene/contrib/memory/src/java/org/apache/lucene/index/memory/MemoryIndex.MemoryIndexReader#docFreq(Term).mjava","sourceNew":"    @Override\n    public int docFreq(String field, BytesRef term) {\n      Info info = getInfo(field);\n      int freq = 0;\n      if (info != null) freq = info.getPositions(term) != null ? 1 : 0;\n      if (DEBUG) System.err.println(\"MemoryIndexReader.docFreq: \" + field + \":\" + term + \", freq:\" + freq);\n      return freq;\n    }\n\n","sourceOld":"    @Override\n    public int docFreq(Term term) {\n      Info info = getInfo(term.field());\n      int freq = 0;\n      if (info != null) freq = info.getPositions(term.bytes()) != null ? 1 : 0;\n      if (DEBUG) System.err.println(\"MemoryIndexReader.docFreq: \" + term + \", freq:\" + freq);\n      return freq;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ba5bc70a1fc1e0abc1eb4171af0d6f2532711c00","date":1323437438,"type":1,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/contrib/memory/src/java/org/apache/lucene/index/memory/MemoryIndex.MemoryIndexReader#docFreq(String,BytesRef).mjava","pathOld":"lucene/contrib/memory/src/java/org/apache/lucene/index/memory/MemoryIndex.MemoryIndexReader#docFreq(Term).mjava","sourceNew":"    @Override\n    public int docFreq(String field, BytesRef term) {\n      Info info = getInfo(field);\n      int freq = 0;\n      if (info != null) freq = info.getPositions(term) != null ? 1 : 0;\n      if (DEBUG) System.err.println(\"MemoryIndexReader.docFreq: \" + field + \":\" + term + \", freq:\" + freq);\n      return freq;\n    }\n\n","sourceOld":"    @Override\n    public int docFreq(Term term) {\n      Info info = getInfo(term.field());\n      int freq = 0;\n      if (info != null) freq = info.getPositions(term.bytes()) != null ? 1 : 0;\n      if (DEBUG) System.err.println(\"MemoryIndexReader.docFreq: \" + term + \", freq:\" + freq);\n      return freq;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8d4eabaae1326fe4c79e878164a5de1a6bff9fa6","date":1327932787,"type":4,"author":"Uwe Schindler","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/contrib/memory/src/java/org/apache/lucene/index/memory/MemoryIndex.MemoryIndexReader#docFreq(String,BytesRef).mjava","sourceNew":null,"sourceOld":"    @Override\n    public int docFreq(String field, BytesRef term) {\n      Info info = getInfo(field);\n      int freq = 0;\n      if (info != null) freq = info.getPositions(term) != null ? 1 : 0;\n      if (DEBUG) System.err.println(\"MemoryIndexReader.docFreq: \" + field + \":\" + term + \", freq:\" + freq);\n      return freq;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5cab9a86bd67202d20b6adc463008c8e982b070a","date":1327966443,"type":4,"author":"Uwe Schindler","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/contrib/memory/src/java/org/apache/lucene/index/memory/MemoryIndex.MemoryIndexReader#docFreq(String,BytesRef).mjava","sourceNew":null,"sourceOld":"    @Override\n    public int docFreq(String field, BytesRef term) {\n      Info info = getInfo(field);\n      int freq = 0;\n      if (info != null) freq = info.getPositions(term) != null ? 1 : 0;\n      if (DEBUG) System.err.println(\"MemoryIndexReader.docFreq: \" + field + \":\" + term + \", freq:\" + freq);\n      return freq;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"8d4eabaae1326fe4c79e878164a5de1a6bff9fa6":["3615ce4a1f785ae1b779244de52c6a7d99227e60"],"ba5bc70a1fc1e0abc1eb4171af0d6f2532711c00":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","3615ce4a1f785ae1b779244de52c6a7d99227e60"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"936f1eae75daf11568fe1480aec9e06d2ef55367":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"3615ce4a1f785ae1b779244de52c6a7d99227e60":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","936f1eae75daf11568fe1480aec9e06d2ef55367"],"5cab9a86bd67202d20b6adc463008c8e982b070a":["3615ce4a1f785ae1b779244de52c6a7d99227e60","8d4eabaae1326fe4c79e878164a5de1a6bff9fa6"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["5cab9a86bd67202d20b6adc463008c8e982b070a"]},"commit2Childs":{"8d4eabaae1326fe4c79e878164a5de1a6bff9fa6":["5cab9a86bd67202d20b6adc463008c8e982b070a"],"ba5bc70a1fc1e0abc1eb4171af0d6f2532711c00":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["ba5bc70a1fc1e0abc1eb4171af0d6f2532711c00","936f1eae75daf11568fe1480aec9e06d2ef55367","3615ce4a1f785ae1b779244de52c6a7d99227e60"],"936f1eae75daf11568fe1480aec9e06d2ef55367":["3615ce4a1f785ae1b779244de52c6a7d99227e60"],"3615ce4a1f785ae1b779244de52c6a7d99227e60":["8d4eabaae1326fe4c79e878164a5de1a6bff9fa6","ba5bc70a1fc1e0abc1eb4171af0d6f2532711c00","5cab9a86bd67202d20b6adc463008c8e982b070a"],"5cab9a86bd67202d20b6adc463008c8e982b070a":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["ba5bc70a1fc1e0abc1eb4171af0d6f2532711c00","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}