{"path":"lucene/core/src/java/org/apache/lucene/codecs/lucene40/Lucene40TermVectorsReader.TVTermsEnum#seekCeil(BytesRef).mjava","commits":[{"id":"eee5f2a24465d2c9a5f86ab84b7c35041a30fda8","date":1373996650,"type":1,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/lucene40/Lucene40TermVectorsReader.TVTermsEnum#seekCeil(BytesRef).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/lucene40/Lucene40TermVectorsReader.TVTermsEnum#seekCeil(BytesRef,boolean).mjava","sourceNew":"    // NOTE: slow!  (linear scan)\n    @Override\n    public SeekStatus seekCeil(BytesRef text)\n      throws IOException {\n      if (nextTerm != 0) {\n        final int cmp = text.compareTo(term);\n        if (cmp < 0) {\n          nextTerm = 0;\n          tvf.seek(tvfFP);\n        } else if (cmp == 0) {\n          return SeekStatus.FOUND;\n        }\n      }\n\n      while (next() != null) {\n        final int cmp = text.compareTo(term);\n        if (cmp < 0) {\n          return SeekStatus.NOT_FOUND;\n        } else if (cmp == 0) {\n          return SeekStatus.FOUND;\n        }\n      }\n\n      return SeekStatus.END;\n    }\n\n","sourceOld":"    // NOTE: slow!  (linear scan)\n    @Override\n    public SeekStatus seekCeil(BytesRef text, boolean useCache)\n      throws IOException {\n      if (nextTerm != 0) {\n        final int cmp = text.compareTo(term);\n        if (cmp < 0) {\n          nextTerm = 0;\n          tvf.seek(tvfFP);\n        } else if (cmp == 0) {\n          return SeekStatus.FOUND;\n        }\n      }\n\n      while (next() != null) {\n        final int cmp = text.compareTo(term);\n        if (cmp < 0) {\n          return SeekStatus.NOT_FOUND;\n        } else if (cmp == 0) {\n          return SeekStatus.FOUND;\n        }\n      }\n\n      return SeekStatus.END;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee","date":1376366778,"type":1,"author":"Han Jiang","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/lucene40/Lucene40TermVectorsReader.TVTermsEnum#seekCeil(BytesRef).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/lucene40/Lucene40TermVectorsReader.TVTermsEnum#seekCeil(BytesRef,boolean).mjava","sourceNew":"    // NOTE: slow!  (linear scan)\n    @Override\n    public SeekStatus seekCeil(BytesRef text)\n      throws IOException {\n      if (nextTerm != 0) {\n        final int cmp = text.compareTo(term);\n        if (cmp < 0) {\n          nextTerm = 0;\n          tvf.seek(tvfFP);\n        } else if (cmp == 0) {\n          return SeekStatus.FOUND;\n        }\n      }\n\n      while (next() != null) {\n        final int cmp = text.compareTo(term);\n        if (cmp < 0) {\n          return SeekStatus.NOT_FOUND;\n        } else if (cmp == 0) {\n          return SeekStatus.FOUND;\n        }\n      }\n\n      return SeekStatus.END;\n    }\n\n","sourceOld":"    // NOTE: slow!  (linear scan)\n    @Override\n    public SeekStatus seekCeil(BytesRef text, boolean useCache)\n      throws IOException {\n      if (nextTerm != 0) {\n        final int cmp = text.compareTo(term);\n        if (cmp < 0) {\n          nextTerm = 0;\n          tvf.seek(tvfFP);\n        } else if (cmp == 0) {\n          return SeekStatus.FOUND;\n        }\n      }\n\n      while (next() != null) {\n        final int cmp = text.compareTo(term);\n        if (cmp < 0) {\n          return SeekStatus.NOT_FOUND;\n        } else if (cmp == 0) {\n          return SeekStatus.FOUND;\n        }\n      }\n\n      return SeekStatus.END;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7dc6ea5fd38ce7aa8f36b3bac8b757da77f31d50","date":1407854805,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/lucene40/Lucene40TermVectorsReader.TVTermsEnum#seekCeil(BytesRef).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/lucene40/Lucene40TermVectorsReader.TVTermsEnum#seekCeil(BytesRef).mjava","sourceNew":"    // NOTE: slow!  (linear scan)\n    @Override\n    public SeekStatus seekCeil(BytesRef text)\n      throws IOException {\n      if (nextTerm != 0) {\n        final int cmp = text.compareTo(term.get());\n        if (cmp < 0) {\n          nextTerm = 0;\n          tvf.seek(tvfFP);\n        } else if (cmp == 0) {\n          return SeekStatus.FOUND;\n        }\n      }\n\n      while (next() != null) {\n        final int cmp = text.compareTo(term.get());\n        if (cmp < 0) {\n          return SeekStatus.NOT_FOUND;\n        } else if (cmp == 0) {\n          return SeekStatus.FOUND;\n        }\n      }\n\n      return SeekStatus.END;\n    }\n\n","sourceOld":"    // NOTE: slow!  (linear scan)\n    @Override\n    public SeekStatus seekCeil(BytesRef text)\n      throws IOException {\n      if (nextTerm != 0) {\n        final int cmp = text.compareTo(term);\n        if (cmp < 0) {\n          nextTerm = 0;\n          tvf.seek(tvfFP);\n        } else if (cmp == 0) {\n          return SeekStatus.FOUND;\n        }\n      }\n\n      while (next() != null) {\n        final int cmp = text.compareTo(term);\n        if (cmp < 0) {\n          return SeekStatus.NOT_FOUND;\n        } else if (cmp == 0) {\n          return SeekStatus.FOUND;\n        }\n      }\n\n      return SeekStatus.END;\n    }\n\n","bugFix":["3cc749c053615f5871f3b95715fe292f34e70a53","814339e4b1ce2063ccbc6cacc6443a6446c7718b"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cc45c615dbb82bf79d5f9550286098367874fbf","date":1409571423,"type":5,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/backward-codecs/src/java/org/apache/lucene/codecs/lucene40/Lucene40TermVectorsReader.TVTermsEnum#seekCeil(BytesRef).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/lucene40/Lucene40TermVectorsReader.TVTermsEnum#seekCeil(BytesRef).mjava","sourceNew":"    // NOTE: slow!  (linear scan)\n    @Override\n    public SeekStatus seekCeil(BytesRef text)\n      throws IOException {\n      if (nextTerm != 0) {\n        final int cmp = text.compareTo(term.get());\n        if (cmp < 0) {\n          nextTerm = 0;\n          tvf.seek(tvfFP);\n        } else if (cmp == 0) {\n          return SeekStatus.FOUND;\n        }\n      }\n\n      while (next() != null) {\n        final int cmp = text.compareTo(term.get());\n        if (cmp < 0) {\n          return SeekStatus.NOT_FOUND;\n        } else if (cmp == 0) {\n          return SeekStatus.FOUND;\n        }\n      }\n\n      return SeekStatus.END;\n    }\n\n","sourceOld":"    // NOTE: slow!  (linear scan)\n    @Override\n    public SeekStatus seekCeil(BytesRef text)\n      throws IOException {\n      if (nextTerm != 0) {\n        final int cmp = text.compareTo(term.get());\n        if (cmp < 0) {\n          nextTerm = 0;\n          tvf.seek(tvfFP);\n        } else if (cmp == 0) {\n          return SeekStatus.FOUND;\n        }\n      }\n\n      while (next() != null) {\n        final int cmp = text.compareTo(term.get());\n        if (cmp < 0) {\n          return SeekStatus.NOT_FOUND;\n        } else if (cmp == 0) {\n          return SeekStatus.FOUND;\n        }\n      }\n\n      return SeekStatus.END;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"402ad3ddc9da7b70da1b167667a60ece6a1381fb","date":1409656478,"type":5,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/backward-codecs/src/java/org/apache/lucene/codecs/lucene40/Lucene40TermVectorsReader.TVTermsEnum#seekCeil(BytesRef).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/lucene40/Lucene40TermVectorsReader.TVTermsEnum#seekCeil(BytesRef).mjava","sourceNew":"    // NOTE: slow!  (linear scan)\n    @Override\n    public SeekStatus seekCeil(BytesRef text)\n      throws IOException {\n      if (nextTerm != 0) {\n        final int cmp = text.compareTo(term.get());\n        if (cmp < 0) {\n          nextTerm = 0;\n          tvf.seek(tvfFP);\n        } else if (cmp == 0) {\n          return SeekStatus.FOUND;\n        }\n      }\n\n      while (next() != null) {\n        final int cmp = text.compareTo(term.get());\n        if (cmp < 0) {\n          return SeekStatus.NOT_FOUND;\n        } else if (cmp == 0) {\n          return SeekStatus.FOUND;\n        }\n      }\n\n      return SeekStatus.END;\n    }\n\n","sourceOld":"    // NOTE: slow!  (linear scan)\n    @Override\n    public SeekStatus seekCeil(BytesRef text)\n      throws IOException {\n      if (nextTerm != 0) {\n        final int cmp = text.compareTo(term.get());\n        if (cmp < 0) {\n          nextTerm = 0;\n          tvf.seek(tvfFP);\n        } else if (cmp == 0) {\n          return SeekStatus.FOUND;\n        }\n      }\n\n      while (next() != null) {\n        final int cmp = text.compareTo(term.get());\n        if (cmp < 0) {\n          return SeekStatus.NOT_FOUND;\n        } else if (cmp == 0) {\n          return SeekStatus.FOUND;\n        }\n      }\n\n      return SeekStatus.END;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"4cc45c615dbb82bf79d5f9550286098367874fbf":["7dc6ea5fd38ce7aa8f36b3bac8b757da77f31d50"],"8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"7dc6ea5fd38ce7aa8f36b3bac8b757da77f31d50":["eee5f2a24465d2c9a5f86ab84b7c35041a30fda8"],"eee5f2a24465d2c9a5f86ab84b7c35041a30fda8":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["402ad3ddc9da7b70da1b167667a60ece6a1381fb"],"402ad3ddc9da7b70da1b167667a60ece6a1381fb":["7dc6ea5fd38ce7aa8f36b3bac8b757da77f31d50","4cc45c615dbb82bf79d5f9550286098367874fbf"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee","eee5f2a24465d2c9a5f86ab84b7c35041a30fda8"],"4cc45c615dbb82bf79d5f9550286098367874fbf":["402ad3ddc9da7b70da1b167667a60ece6a1381fb"],"8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee":[],"7dc6ea5fd38ce7aa8f36b3bac8b757da77f31d50":["4cc45c615dbb82bf79d5f9550286098367874fbf","402ad3ddc9da7b70da1b167667a60ece6a1381fb"],"eee5f2a24465d2c9a5f86ab84b7c35041a30fda8":["7dc6ea5fd38ce7aa8f36b3bac8b757da77f31d50"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"402ad3ddc9da7b70da1b167667a60ece6a1381fb":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}