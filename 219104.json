{"path":"contrib/highlighter/src/java/org/apache/lucene/search/highlight/QueryTermExtractor#getTerms(Query,boolean).mjava","commits":[{"id":"043c298cb215f13ba7b9b81d20760704e8f93d66","date":1107566743,"type":1,"author":"Erik Hatcher","isMerge":false,"pathNew":"contrib/highlighter/src/java/org/apache/lucene/search/highlight/QueryTermExtractor#getTerms(Query,boolean).mjava","pathOld":"sandbox/contributions/highlighter/src/java/org/apache/lucene/search/highlight/QueryTermExtractor#getTerms(Query,boolean).mjava","sourceNew":"\t/**\n\t * Extracts all terms texts of a given Query into an array of WeightedTerms\n\t *\n\t * @param query      Query to extract term texts from\n\t * @param prohibited <code>true</code> to extract \"prohibited\" terms, too\n   * @return an array of the terms used in a query, plus their weights.\n   */\n\tpublic static final WeightedTerm[] getTerms(Query query, boolean prohibited) \n\t{\n\t\tHashSet terms=new HashSet();\n\t\tgetTerms(query,terms,prohibited);\n\t\treturn (WeightedTerm[]) terms.toArray(new WeightedTerm[0]);\n\t}\n\n","sourceOld":"\t/**\n\t * Extracts all terms texts of a given Query into an array of WeightedTerms\n\t *\n\t * @param query      Query to extract term texts from\n\t * @param prohibited <code>true</code> to extract \"prohibited\" terms, too\n   * @return an array of the terms used in a query, plus their weights.\n   */\n\tpublic static final WeightedTerm[] getTerms(Query query, boolean prohibited) \n\t{\n\t\tHashSet terms=new HashSet();\n\t\tgetTerms(query,terms,prohibited);\n\t\treturn (WeightedTerm[]) terms.toArray(new WeightedTerm[0]);\n\t}\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"68fa956cfdb1b0e625046dcfa99f545fc8f04997","date":1133475513,"type":3,"author":"Mark Harwood","isMerge":false,"pathNew":"contrib/highlighter/src/java/org/apache/lucene/search/highlight/QueryTermExtractor#getTerms(Query,boolean).mjava","pathOld":"contrib/highlighter/src/java/org/apache/lucene/search/highlight/QueryTermExtractor#getTerms(Query,boolean).mjava","sourceNew":"\t/**\n\t * Extracts all terms texts of a given Query into an array of WeightedTerms\n\t *\n\t * @param query      Query to extract term texts from\n\t * @param prohibited <code>true</code> to extract \"prohibited\" terms, too\n   * @return an array of the terms used in a query, plus their weights.\n   */\n\tpublic static final WeightedTerm[] getTerms(Query query, boolean prohibited) \n\t{\n\t    return getTerms(query,prohibited,null);\n\t}\t\n\n","sourceOld":"\t/**\n\t * Extracts all terms texts of a given Query into an array of WeightedTerms\n\t *\n\t * @param query      Query to extract term texts from\n\t * @param prohibited <code>true</code> to extract \"prohibited\" terms, too\n   * @return an array of the terms used in a query, plus their weights.\n   */\n\tpublic static final WeightedTerm[] getTerms(Query query, boolean prohibited) \n\t{\n\t\tHashSet terms=new HashSet();\n\t\tgetTerms(query,terms,prohibited);\n\t\treturn (WeightedTerm[]) terms.toArray(new WeightedTerm[0]);\n\t}\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/contrib/highlighter/src/java/org/apache/lucene/search/highlight/QueryTermExtractor#getTerms(Query,boolean).mjava","pathOld":"contrib/highlighter/src/java/org/apache/lucene/search/highlight/QueryTermExtractor#getTerms(Query,boolean).mjava","sourceNew":"\t/**\n\t * Extracts all terms texts of a given Query into an array of WeightedTerms\n\t *\n\t * @param query      Query to extract term texts from\n\t * @param prohibited <code>true</code> to extract \"prohibited\" terms, too\n   * @return an array of the terms used in a query, plus their weights.\n   */\n\tpublic static final WeightedTerm[] getTerms(Query query, boolean prohibited) \n\t{\n\t    return getTerms(query,prohibited,null);\n\t}\t\n\n","sourceOld":"\t/**\n\t * Extracts all terms texts of a given Query into an array of WeightedTerms\n\t *\n\t * @param query      Query to extract term texts from\n\t * @param prohibited <code>true</code> to extract \"prohibited\" terms, too\n   * @return an array of the terms used in a query, plus their weights.\n   */\n\tpublic static final WeightedTerm[] getTerms(Query query, boolean prohibited) \n\t{\n\t    return getTerms(query,prohibited,null);\n\t}\t\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"043c298cb215f13ba7b9b81d20760704e8f93d66":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"68fa956cfdb1b0e625046dcfa99f545fc8f04997":["043c298cb215f13ba7b9b81d20760704e8f93d66"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["68fa956cfdb1b0e625046dcfa99f545fc8f04997"]},"commit2Childs":{"043c298cb215f13ba7b9b81d20760704e8f93d66":["68fa956cfdb1b0e625046dcfa99f545fc8f04997"],"68fa956cfdb1b0e625046dcfa99f545fc8f04997":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["043c298cb215f13ba7b9b81d20760704e8f93d66"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}