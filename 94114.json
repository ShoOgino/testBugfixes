{"path":"lucene/analysis/common/src/java/org/apache/lucene/analysis/compound/hyphenation/HyphenationTree#unpackValues(int).mjava","commits":[{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/common/src/java/org/apache/lucene/analysis/compound/hyphenation/HyphenationTree#unpackValues(int).mjava","pathOld":"modules/analysis/common/src/java/org/apache/lucene/analysis/compound/hyphenation/HyphenationTree#unpackValues(int).mjava","sourceNew":"  protected String unpackValues(int k) {\n    StringBuilder buf = new StringBuilder();\n    byte v = vspace.get(k++);\n    while (v != 0) {\n      char c = (char) ((v >>> 4) - 1 + '0');\n      buf.append(c);\n      c = (char) (v & 0x0f);\n      if (c == 0) {\n        break;\n      }\n      c = (char) (c - 1 + '0');\n      buf.append(c);\n      v = vspace.get(k++);\n    }\n    return buf.toString();\n  }\n\n","sourceOld":"  protected String unpackValues(int k) {\n    StringBuilder buf = new StringBuilder();\n    byte v = vspace.get(k++);\n    while (v != 0) {\n      char c = (char) ((v >>> 4) - 1 + '0');\n      buf.append(c);\n      c = (char) (v & 0x0f);\n      if (c == 0) {\n        break;\n      }\n      c = (char) (c - 1 + '0');\n      buf.append(c);\n      v = vspace.get(k++);\n    }\n    return buf.toString();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ce0b93f49c88f4ffe9cb6d48f4466e38ee7a2d6b","date":1516607161,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/analysis/common/src/java/org/apache/lucene/analysis/compound/hyphenation/HyphenationTree#unpackValues(int).mjava","pathOld":"lucene/analysis/common/src/java/org/apache/lucene/analysis/compound/hyphenation/HyphenationTree#unpackValues(int).mjava","sourceNew":"  protected String unpackValues(int k) {\n    StringBuilder buf = new StringBuilder();\n    byte v = vspace.get(k++);\n    while (v != 0) {\n      char c = (char) (((v & 0xf0 )>>> 4) - 1 + '0');\n      buf.append(c);\n      c = (char) (v & 0x0f);\n      if (c == 0) {\n        break;\n      }\n      c = (char) (c - 1 + '0');\n      buf.append(c);\n      v = vspace.get(k++);\n    }\n    return buf.toString();\n  }\n\n","sourceOld":"  protected String unpackValues(int k) {\n    StringBuilder buf = new StringBuilder();\n    byte v = vspace.get(k++);\n    while (v != 0) {\n      char c = (char) ((v >>> 4) - 1 + '0');\n      buf.append(c);\n      c = (char) (v & 0x0f);\n      if (c == 0) {\n        break;\n      }\n      c = (char) (c - 1 + '0');\n      buf.append(c);\n      v = vspace.get(k++);\n    }\n    return buf.toString();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b94236357aaa22b76c10629851fe4e376e0cea82","date":1516710914,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"lucene/analysis/common/src/java/org/apache/lucene/analysis/compound/hyphenation/HyphenationTree#unpackValues(int).mjava","pathOld":"lucene/analysis/common/src/java/org/apache/lucene/analysis/compound/hyphenation/HyphenationTree#unpackValues(int).mjava","sourceNew":"  protected String unpackValues(int k) {\n    StringBuilder buf = new StringBuilder();\n    byte v = vspace.get(k++);\n    while (v != 0) {\n      char c = (char) (((v & 0xf0 )>>> 4) - 1 + '0');\n      buf.append(c);\n      c = (char) (v & 0x0f);\n      if (c == 0) {\n        break;\n      }\n      c = (char) (c - 1 + '0');\n      buf.append(c);\n      v = vspace.get(k++);\n    }\n    return buf.toString();\n  }\n\n","sourceOld":"  protected String unpackValues(int k) {\n    StringBuilder buf = new StringBuilder();\n    byte v = vspace.get(k++);\n    while (v != 0) {\n      char c = (char) ((v >>> 4) - 1 + '0');\n      buf.append(c);\n      c = (char) (v & 0x0f);\n      if (c == 0) {\n        break;\n      }\n      c = (char) (c - 1 + '0');\n      buf.append(c);\n      v = vspace.get(k++);\n    }\n    return buf.toString();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b94236357aaa22b76c10629851fe4e376e0cea82":["b89678825b68eccaf09e6ab71675fc0b0af1e099","ce0b93f49c88f4ffe9cb6d48f4466e38ee7a2d6b"],"ce0b93f49c88f4ffe9cb6d48f4466e38ee7a2d6b":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b94236357aaa22b76c10629851fe4e376e0cea82"]},"commit2Childs":{"b94236357aaa22b76c10629851fe4e376e0cea82":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"ce0b93f49c88f4ffe9cb6d48f4466e38ee7a2d6b":["b94236357aaa22b76c10629851fe4e376e0cea82"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["b94236357aaa22b76c10629851fe4e376e0cea82","ce0b93f49c88f4ffe9cb6d48f4466e38ee7a2d6b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}