{"path":"solr/solrj/src/java/org/apache/solr/client/solrj/io/stream/JSONTupleStream#advanceToMapKey(String,boolean).mjava","commits":[{"id":"f00f1c5fad501b66705121feb623f8cfbb6712f9","date":1431347838,"type":1,"author":"Joel Bernstein","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/io/stream/JSONTupleStream#advanceToMapKey(String,boolean).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/io/JSONTupleStream#advanceToMapKey(String,boolean).mjava","sourceNew":"  private boolean advanceToMapKey(String key, boolean deepSearch) throws IOException {\n    for (;;) {\n      int event = parser.nextEvent();\n      switch (event) {\n        case JSONParser.STRING:\n          if (key != null) {\n            String val = parser.getString();\n            if (key.equals(val)) {\n              return true;\n            }\n          }\n          break;\n        case JSONParser.OBJECT_END:\n          return false;\n        case JSONParser.OBJECT_START:\n          if (deepSearch) {\n            boolean found = advanceToMapKey(key, true);\n            if (found) {\n              return true;\n            }\n          } else {\n            advanceToMapKey(null, false);\n          }\n          break;\n        case JSONParser.ARRAY_START:\n          skipArray(key, deepSearch);\n          break;\n      }\n    }\n  }\n\n","sourceOld":"  private boolean advanceToMapKey(String key, boolean deepSearch) throws IOException {\n    for (;;) {\n      int event = parser.nextEvent();\n      switch (event) {\n        case JSONParser.STRING:\n          if (key != null) {\n            String val = parser.getString();\n            if (key.equals(val)) {\n              return true;\n            }\n          }\n          break;\n        case JSONParser.OBJECT_END:\n          return false;\n        case JSONParser.OBJECT_START:\n          if (deepSearch) {\n            boolean found = advanceToMapKey(key, true);\n            if (found) {\n              return true;\n            }\n          } else {\n            advanceToMapKey(null, false);\n          }\n          break;\n        case JSONParser.ARRAY_START:\n          skipArray(key, deepSearch);\n          break;\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8da9a71da64ce12a97dcfcdd912893aeb1fa2981","date":1437510515,"type":3,"author":"Joel Bernstein","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/io/stream/JSONTupleStream#advanceToMapKey(String,boolean).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/io/stream/JSONTupleStream#advanceToMapKey(String,boolean).mjava","sourceNew":"  private boolean advanceToMapKey(String key, boolean deepSearch) throws IOException {\n    for (;;) {\n      int event = parser.nextEvent();\n      switch (event) {\n        case JSONParser.STRING:\n          if (key != null) {\n            String val = parser.getString();\n            if (key.equals(val)) {\n              return true;\n            } else if(\"error\".equals(val)) {\n              handleError();\n            }\n          }\n          break;\n        case JSONParser.OBJECT_END:\n          return false;\n        case JSONParser.OBJECT_START:\n          if (deepSearch) {\n            boolean found = advanceToMapKey(key, true);\n            if (found) {\n              return true;\n            }\n          } else {\n            advanceToMapKey(null, false);\n          }\n          break;\n        case JSONParser.ARRAY_START:\n          skipArray(key, deepSearch);\n          break;\n      }\n    }\n  }\n\n","sourceOld":"  private boolean advanceToMapKey(String key, boolean deepSearch) throws IOException {\n    for (;;) {\n      int event = parser.nextEvent();\n      switch (event) {\n        case JSONParser.STRING:\n          if (key != null) {\n            String val = parser.getString();\n            if (key.equals(val)) {\n              return true;\n            }\n          }\n          break;\n        case JSONParser.OBJECT_END:\n          return false;\n        case JSONParser.OBJECT_START:\n          if (deepSearch) {\n            boolean found = advanceToMapKey(key, true);\n            if (found) {\n              return true;\n            }\n          } else {\n            advanceToMapKey(null, false);\n          }\n          break;\n        case JSONParser.ARRAY_START:\n          skipArray(key, deepSearch);\n          break;\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"f00f1c5fad501b66705121feb623f8cfbb6712f9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"8da9a71da64ce12a97dcfcdd912893aeb1fa2981":["f00f1c5fad501b66705121feb623f8cfbb6712f9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["8da9a71da64ce12a97dcfcdd912893aeb1fa2981"]},"commit2Childs":{"f00f1c5fad501b66705121feb623f8cfbb6712f9":["8da9a71da64ce12a97dcfcdd912893aeb1fa2981"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["f00f1c5fad501b66705121feb623f8cfbb6712f9"],"8da9a71da64ce12a97dcfcdd912893aeb1fa2981":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}