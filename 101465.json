{"path":"solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/TestSolrEntityProcessorEndToEnd#addDocumentsToSolr(List[Map[String,Object]]).mjava","commits":[{"id":"cea5f7a2e31566bda38c740c37affa52b0e9c46e","date":1323436632,"type":0,"author":"Martijn van Groningen","isMerge":false,"pathNew":"solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/TestSolrEntityProcessorEndToEnd#addDocumentsToSolr(List[Map[String,Object]]).mjava","pathOld":"/dev/null","sourceNew":"  private void addDocumentsToSolr(List<Map<String,Object>> docs) throws SolrServerException, IOException {\n    List<SolrInputDocument> sidl = new ArrayList<SolrInputDocument>();\n    for (Map<String,Object> doc : docs) {\n      SolrInputDocument sd = new SolrInputDocument();\n      for (Entry<String,Object> entry : doc.entrySet()) {\n        sd.addField(entry.getKey(), entry.getValue());\n      }\n      sidl.add(sd);\n    }\n    \n    HttpClient client = new HttpClient(new MultiThreadedHttpConnectionManager());\n    URL url = new URL(SOLR_SOURCE_URL);\n    CommonsHttpSolrServer solrServer = new CommonsHttpSolrServer(url, client);\n    solrServer.add(sidl);\n    solrServer.commit(true, true);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ba5bc70a1fc1e0abc1eb4171af0d6f2532711c00","date":1323437438,"type":0,"author":"Robert Muir","isMerge":true,"pathNew":"solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/TestSolrEntityProcessorEndToEnd#addDocumentsToSolr(List[Map[String,Object]]).mjava","pathOld":"/dev/null","sourceNew":"  private void addDocumentsToSolr(List<Map<String,Object>> docs) throws SolrServerException, IOException {\n    List<SolrInputDocument> sidl = new ArrayList<SolrInputDocument>();\n    for (Map<String,Object> doc : docs) {\n      SolrInputDocument sd = new SolrInputDocument();\n      for (Entry<String,Object> entry : doc.entrySet()) {\n        sd.addField(entry.getKey(), entry.getValue());\n      }\n      sidl.add(sd);\n    }\n    \n    HttpClient client = new HttpClient(new MultiThreadedHttpConnectionManager());\n    URL url = new URL(SOLR_SOURCE_URL);\n    CommonsHttpSolrServer solrServer = new CommonsHttpSolrServer(url, client);\n    solrServer.add(sidl);\n    solrServer.commit(true, true);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2c007e7c4cf8c55bc2a5884e315123afaaeec87f","date":1327520966,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/TestSolrEntityProcessorEndToEnd#addDocumentsToSolr(List[Map[String,Object]]).mjava","pathOld":"solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/TestSolrEntityProcessorEndToEnd#addDocumentsToSolr(List[Map[String,Object]]).mjava","sourceNew":"  private void addDocumentsToSolr(List<Map<String,Object>> docs) throws SolrServerException, IOException {\n    List<SolrInputDocument> sidl = new ArrayList<SolrInputDocument>();\n    for (Map<String,Object> doc : docs) {\n      SolrInputDocument sd = new SolrInputDocument();\n      for (Entry<String,Object> entry : doc.entrySet()) {\n        sd.addField(entry.getKey(), entry.getValue());\n      }\n      sidl.add(sd);\n    }\n    \n    HttpClient client = new HttpClient(new MultiThreadedHttpConnectionManager());\n    URL url = new URL(getSourceUrl(jetty.getLocalPort()));\n    CommonsHttpSolrServer solrServer = new CommonsHttpSolrServer(url, client);\n    solrServer.add(sidl);\n    solrServer.commit(true, true);\n  }\n\n","sourceOld":"  private void addDocumentsToSolr(List<Map<String,Object>> docs) throws SolrServerException, IOException {\n    List<SolrInputDocument> sidl = new ArrayList<SolrInputDocument>();\n    for (Map<String,Object> doc : docs) {\n      SolrInputDocument sd = new SolrInputDocument();\n      for (Entry<String,Object> entry : doc.entrySet()) {\n        sd.addField(entry.getKey(), entry.getValue());\n      }\n      sidl.add(sd);\n    }\n    \n    HttpClient client = new HttpClient(new MultiThreadedHttpConnectionManager());\n    URL url = new URL(SOLR_SOURCE_URL);\n    CommonsHttpSolrServer solrServer = new CommonsHttpSolrServer(url, client);\n    solrServer.add(sidl);\n    solrServer.commit(true, true);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a3c68e20c73359a10cf3eb4a35c9fa7ab1f3c30d","date":1327523564,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/TestSolrEntityProcessorEndToEnd#addDocumentsToSolr(List[Map[String,Object]]).mjava","pathOld":"solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/TestSolrEntityProcessorEndToEnd#addDocumentsToSolr(List[Map[String,Object]]).mjava","sourceNew":"  private void addDocumentsToSolr(List<Map<String,Object>> docs) throws SolrServerException, IOException {\n    List<SolrInputDocument> sidl = new ArrayList<SolrInputDocument>();\n    for (Map<String,Object> doc : docs) {\n      SolrInputDocument sd = new SolrInputDocument();\n      for (Entry<String,Object> entry : doc.entrySet()) {\n        sd.addField(entry.getKey(), entry.getValue());\n      }\n      sidl.add(sd);\n    }\n    \n    HttpClient client = new HttpClient(new MultiThreadedHttpConnectionManager());\n    URL url = new URL(getSourceUrl(jetty.getLocalPort()));\n    CommonsHttpSolrServer solrServer = new CommonsHttpSolrServer(url, client);\n    solrServer.add(sidl);\n    solrServer.commit(true, true);\n  }\n\n","sourceOld":"  private void addDocumentsToSolr(List<Map<String,Object>> docs) throws SolrServerException, IOException {\n    List<SolrInputDocument> sidl = new ArrayList<SolrInputDocument>();\n    for (Map<String,Object> doc : docs) {\n      SolrInputDocument sd = new SolrInputDocument();\n      for (Entry<String,Object> entry : doc.entrySet()) {\n        sd.addField(entry.getKey(), entry.getValue());\n      }\n      sidl.add(sd);\n    }\n    \n    HttpClient client = new HttpClient(new MultiThreadedHttpConnectionManager());\n    URL url = new URL(SOLR_SOURCE_URL);\n    CommonsHttpSolrServer solrServer = new CommonsHttpSolrServer(url, client);\n    solrServer.add(sidl);\n    solrServer.commit(true, true);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0d22ac6a4146774c1bc8400160fc0b6150294e92","date":1327528604,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/TestSolrEntityProcessorEndToEnd#addDocumentsToSolr(List[Map[String,Object]]).mjava","pathOld":"solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/TestSolrEntityProcessorEndToEnd#addDocumentsToSolr(List[Map[String,Object]]).mjava","sourceNew":"  private void addDocumentsToSolr(List<Map<String,Object>> docs) throws SolrServerException, IOException {\n    List<SolrInputDocument> sidl = new ArrayList<SolrInputDocument>();\n    for (Map<String,Object> doc : docs) {\n      SolrInputDocument sd = new SolrInputDocument();\n      for (Entry<String,Object> entry : doc.entrySet()) {\n        sd.addField(entry.getKey(), entry.getValue());\n      }\n      sidl.add(sd);\n    }\n    \n    HttpClient client = new HttpClient(new MultiThreadedHttpConnectionManager());\n    URL url = new URL(getSourceUrl(jetty.getLocalPort()));\n    CommonsHttpSolrServer solrServer = new CommonsHttpSolrServer(url, client);\n    solrServer.add(sidl);\n    solrServer.commit(true, true);\n  }\n\n","sourceOld":"  private void addDocumentsToSolr(List<Map<String,Object>> docs) throws SolrServerException, IOException {\n    List<SolrInputDocument> sidl = new ArrayList<SolrInputDocument>();\n    for (Map<String,Object> doc : docs) {\n      SolrInputDocument sd = new SolrInputDocument();\n      for (Entry<String,Object> entry : doc.entrySet()) {\n        sd.addField(entry.getKey(), entry.getValue());\n      }\n      sidl.add(sd);\n    }\n    \n    HttpClient client = new HttpClient(new MultiThreadedHttpConnectionManager());\n    URL url = new URL(SOLR_SOURCE_URL);\n    CommonsHttpSolrServer solrServer = new CommonsHttpSolrServer(url, client);\n    solrServer.add(sidl);\n    solrServer.commit(true, true);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7321b77a7bc3edfebd637ef273e9dfaa9969eba6","date":1333023097,"type":3,"author":"Sami Siren","isMerge":false,"pathNew":"solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/TestSolrEntityProcessorEndToEnd#addDocumentsToSolr(List[Map[String,Object]]).mjava","pathOld":"solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/TestSolrEntityProcessorEndToEnd#addDocumentsToSolr(List[Map[String,Object]]).mjava","sourceNew":"  private void addDocumentsToSolr(List<Map<String,Object>> docs) throws SolrServerException, IOException {\n    List<SolrInputDocument> sidl = new ArrayList<SolrInputDocument>();\n    for (Map<String,Object> doc : docs) {\n      SolrInputDocument sd = new SolrInputDocument();\n      for (Entry<String,Object> entry : doc.entrySet()) {\n        sd.addField(entry.getKey(), entry.getValue());\n      }\n      sidl.add(sd);\n    }\n    \n    DefaultHttpClient client = new DefaultHttpClient(new ThreadSafeClientConnManager());\n    URL url = new URL(getSourceUrl(jetty.getLocalPort()));\n    HttpSolrServer solrServer = new HttpSolrServer(url.toExternalForm(), client);\n    solrServer.add(sidl);\n    solrServer.commit(true, true);\n  }\n\n","sourceOld":"  private void addDocumentsToSolr(List<Map<String,Object>> docs) throws SolrServerException, IOException {\n    List<SolrInputDocument> sidl = new ArrayList<SolrInputDocument>();\n    for (Map<String,Object> doc : docs) {\n      SolrInputDocument sd = new SolrInputDocument();\n      for (Entry<String,Object> entry : doc.entrySet()) {\n        sd.addField(entry.getKey(), entry.getValue());\n      }\n      sidl.add(sd);\n    }\n    \n    HttpClient client = new HttpClient(new MultiThreadedHttpConnectionManager());\n    URL url = new URL(getSourceUrl(jetty.getLocalPort()));\n    CommonsHttpSolrServer solrServer = new CommonsHttpSolrServer(url, client);\n    solrServer.add(sidl);\n    solrServer.commit(true, true);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"eb99886ff640d94edb43e0d36112a2b7023379ba","date":1338292884,"type":3,"author":"Sami Siren","isMerge":false,"pathNew":"solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/TestSolrEntityProcessorEndToEnd#addDocumentsToSolr(List[Map[String,Object]]).mjava","pathOld":"solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/TestSolrEntityProcessorEndToEnd#addDocumentsToSolr(List[Map[String,Object]]).mjava","sourceNew":"  private void addDocumentsToSolr(List<Map<String,Object>> docs) throws SolrServerException, IOException {\n    List<SolrInputDocument> sidl = new ArrayList<SolrInputDocument>();\n    for (Map<String,Object> doc : docs) {\n      SolrInputDocument sd = new SolrInputDocument();\n      for (Entry<String,Object> entry : doc.entrySet()) {\n        sd.addField(entry.getKey(), entry.getValue());\n      }\n      sidl.add(sd);\n    }\n    \n    HttpClient client = HttpClientUtil.createClient(null);\n    URL url = new URL(getSourceUrl(jetty.getLocalPort()));\n    HttpSolrServer solrServer = new HttpSolrServer(url.toExternalForm(), client);\n    solrServer.add(sidl);\n    solrServer.commit(true, true);\n  }\n\n","sourceOld":"  private void addDocumentsToSolr(List<Map<String,Object>> docs) throws SolrServerException, IOException {\n    List<SolrInputDocument> sidl = new ArrayList<SolrInputDocument>();\n    for (Map<String,Object> doc : docs) {\n      SolrInputDocument sd = new SolrInputDocument();\n      for (Entry<String,Object> entry : doc.entrySet()) {\n        sd.addField(entry.getKey(), entry.getValue());\n      }\n      sidl.add(sd);\n    }\n    \n    DefaultHttpClient client = new DefaultHttpClient(new ThreadSafeClientConnManager());\n    URL url = new URL(getSourceUrl(jetty.getLocalPort()));\n    HttpSolrServer solrServer = new HttpSolrServer(url.toExternalForm(), client);\n    solrServer.add(sidl);\n    solrServer.commit(true, true);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9fbbf851af229fb91fabc74b799bf3baeb2223ef","date":1355350925,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/TestSolrEntityProcessorEndToEnd#addDocumentsToSolr(List[Map[String,Object]]).mjava","pathOld":"solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/TestSolrEntityProcessorEndToEnd#addDocumentsToSolr(List[Map[String,Object]]).mjava","sourceNew":"  private void addDocumentsToSolr(List<Map<String,Object>> docs) throws SolrServerException, IOException {\n    List<SolrInputDocument> sidl = new ArrayList<SolrInputDocument>();\n    for (Map<String,Object> doc : docs) {\n      SolrInputDocument sd = new SolrInputDocument();\n      for (Entry<String,Object> entry : doc.entrySet()) {\n        sd.addField(entry.getKey(), entry.getValue());\n      }\n      sidl.add(sd);\n    }\n    \n    HttpSolrServer solrServer = new HttpSolrServer(getSourceUrl());\n    solrServer.add(sidl);\n    solrServer.commit(true, true);\n  }\n\n","sourceOld":"  private void addDocumentsToSolr(List<Map<String,Object>> docs) throws SolrServerException, IOException {\n    List<SolrInputDocument> sidl = new ArrayList<SolrInputDocument>();\n    for (Map<String,Object> doc : docs) {\n      SolrInputDocument sd = new SolrInputDocument();\n      for (Entry<String,Object> entry : doc.entrySet()) {\n        sd.addField(entry.getKey(), entry.getValue());\n      }\n      sidl.add(sd);\n    }\n    \n    HttpClient client = HttpClientUtil.createClient(null);\n    URL url = new URL(getSourceUrl(jetty.getLocalPort()));\n    HttpSolrServer solrServer = new HttpSolrServer(url.toExternalForm(), client);\n    solrServer.add(sidl);\n    solrServer.commit(true, true);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a69439d0df009e0bb0038d1e427159f449dd670d","date":1355704683,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/TestSolrEntityProcessorEndToEnd#addDocumentsToSolr(List[Map[String,Object]]).mjava","pathOld":"solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/TestSolrEntityProcessorEndToEnd#addDocumentsToSolr(List[Map[String,Object]]).mjava","sourceNew":"  private void addDocumentsToSolr(List<Map<String,Object>> docs) throws SolrServerException, IOException {\n    List<SolrInputDocument> sidl = new ArrayList<SolrInputDocument>();\n    for (Map<String,Object> doc : docs) {\n      SolrInputDocument sd = new SolrInputDocument();\n      for (Entry<String,Object> entry : doc.entrySet()) {\n        sd.addField(entry.getKey(), entry.getValue());\n      }\n      sidl.add(sd);\n    }\n    \n    HttpSolrServer solrServer = new HttpSolrServer(getSourceUrl());\n    solrServer.setConnectionTimeout(15000);\n    solrServer.setSoTimeout(30000);\n    solrServer.add(sidl);\n    solrServer.commit(true, true);\n  }\n\n","sourceOld":"  private void addDocumentsToSolr(List<Map<String,Object>> docs) throws SolrServerException, IOException {\n    List<SolrInputDocument> sidl = new ArrayList<SolrInputDocument>();\n    for (Map<String,Object> doc : docs) {\n      SolrInputDocument sd = new SolrInputDocument();\n      for (Entry<String,Object> entry : doc.entrySet()) {\n        sd.addField(entry.getKey(), entry.getValue());\n      }\n      sidl.add(sd);\n    }\n    \n    HttpSolrServer solrServer = new HttpSolrServer(getSourceUrl());\n    solrServer.add(sidl);\n    solrServer.commit(true, true);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d3fcb70cf561547c7bb1506e0cf32ca7b1287064","date":1357616416,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/TestSolrEntityProcessorEndToEnd#addDocumentsToSolr(List[Map[String,Object]]).mjava","pathOld":"solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/TestSolrEntityProcessorEndToEnd#addDocumentsToSolr(List[Map[String,Object]]).mjava","sourceNew":"  private void addDocumentsToSolr(List<Map<String,Object>> docs) throws SolrServerException, IOException {\n    List<SolrInputDocument> sidl = new ArrayList<SolrInputDocument>();\n    for (Map<String,Object> doc : docs) {\n      SolrInputDocument sd = new SolrInputDocument();\n      for (Entry<String,Object> entry : doc.entrySet()) {\n        sd.addField(entry.getKey(), entry.getValue());\n      }\n      sidl.add(sd);\n    }\n    \n    HttpSolrServer solrServer = new HttpSolrServer(getSourceUrl());\n    solrServer.setConnectionTimeout(15000);\n    solrServer.setSoTimeout(30000);\n    solrServer.add(sidl);\n    solrServer.commit(true, true);\n  }\n\n","sourceOld":"  private void addDocumentsToSolr(List<Map<String,Object>> docs) throws SolrServerException, IOException {\n    List<SolrInputDocument> sidl = new ArrayList<SolrInputDocument>();\n    for (Map<String,Object> doc : docs) {\n      SolrInputDocument sd = new SolrInputDocument();\n      for (Entry<String,Object> entry : doc.entrySet()) {\n        sd.addField(entry.getKey(), entry.getValue());\n      }\n      sidl.add(sd);\n    }\n    \n    HttpClient client = HttpClientUtil.createClient(null);\n    URL url = new URL(getSourceUrl(jetty.getLocalPort()));\n    HttpSolrServer solrServer = new HttpSolrServer(url.toExternalForm(), client);\n    solrServer.add(sidl);\n    solrServer.commit(true, true);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2d750082a4223c20902ef11ff6a9831d55738ea4","date":1382309916,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/TestSolrEntityProcessorEndToEnd#addDocumentsToSolr(List[Map[String,Object]]).mjava","pathOld":"solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/TestSolrEntityProcessorEndToEnd#addDocumentsToSolr(List[Map[String,Object]]).mjava","sourceNew":"  private void addDocumentsToSolr(List<Map<String,Object>> docs) throws SolrServerException, IOException {\n    List<SolrInputDocument> sidl = new ArrayList<SolrInputDocument>();\n    for (Map<String,Object> doc : docs) {\n      SolrInputDocument sd = new SolrInputDocument();\n      for (Entry<String,Object> entry : doc.entrySet()) {\n        sd.addField(entry.getKey(), entry.getValue());\n      }\n      sidl.add(sd);\n    }\n    \n    HttpSolrServer solrServer = new HttpSolrServer(getSourceUrl());\n    try {\n      solrServer.setConnectionTimeout(15000);\n      solrServer.setSoTimeout(30000);\n      solrServer.add(sidl);\n      solrServer.commit(true, true);\n    } finally {\n      solrServer.shutdown();\n    }\n  }\n\n","sourceOld":"  private void addDocumentsToSolr(List<Map<String,Object>> docs) throws SolrServerException, IOException {\n    List<SolrInputDocument> sidl = new ArrayList<SolrInputDocument>();\n    for (Map<String,Object> doc : docs) {\n      SolrInputDocument sd = new SolrInputDocument();\n      for (Entry<String,Object> entry : doc.entrySet()) {\n        sd.addField(entry.getKey(), entry.getValue());\n      }\n      sidl.add(sd);\n    }\n    \n    HttpSolrServer solrServer = new HttpSolrServer(getSourceUrl());\n    solrServer.setConnectionTimeout(15000);\n    solrServer.setSoTimeout(30000);\n    solrServer.add(sidl);\n    solrServer.commit(true, true);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"634f330c54fd3f9f491d52036dc3f40b4f4d8934","date":1394635157,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/TestSolrEntityProcessorEndToEnd#addDocumentsToSolr(List[Map[String,Object]]).mjava","pathOld":"solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/TestSolrEntityProcessorEndToEnd#addDocumentsToSolr(List[Map[String,Object]]).mjava","sourceNew":"  private void addDocumentsToSolr(List<Map<String,Object>> docs) throws SolrServerException, IOException {\n    List<SolrInputDocument> sidl = new ArrayList<>();\n    for (Map<String,Object> doc : docs) {\n      SolrInputDocument sd = new SolrInputDocument();\n      for (Entry<String,Object> entry : doc.entrySet()) {\n        sd.addField(entry.getKey(), entry.getValue());\n      }\n      sidl.add(sd);\n    }\n    \n    HttpSolrServer solrServer = new HttpSolrServer(getSourceUrl());\n    try {\n      solrServer.setConnectionTimeout(15000);\n      solrServer.setSoTimeout(30000);\n      solrServer.add(sidl);\n      solrServer.commit(true, true);\n    } finally {\n      solrServer.shutdown();\n    }\n  }\n\n","sourceOld":"  private void addDocumentsToSolr(List<Map<String,Object>> docs) throws SolrServerException, IOException {\n    List<SolrInputDocument> sidl = new ArrayList<SolrInputDocument>();\n    for (Map<String,Object> doc : docs) {\n      SolrInputDocument sd = new SolrInputDocument();\n      for (Entry<String,Object> entry : doc.entrySet()) {\n        sd.addField(entry.getKey(), entry.getValue());\n      }\n      sidl.add(sd);\n    }\n    \n    HttpSolrServer solrServer = new HttpSolrServer(getSourceUrl());\n    try {\n      solrServer.setConnectionTimeout(15000);\n      solrServer.setSoTimeout(30000);\n      solrServer.add(sidl);\n      solrServer.commit(true, true);\n    } finally {\n      solrServer.shutdown();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bafca15d8e408346a67f4282ad1143b88023893b","date":1420034748,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/TestSolrEntityProcessorEndToEnd#addDocumentsToSolr(List[Map[String,Object]]).mjava","pathOld":"solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/TestSolrEntityProcessorEndToEnd#addDocumentsToSolr(List[Map[String,Object]]).mjava","sourceNew":"  private void addDocumentsToSolr(List<Map<String,Object>> docs) throws SolrServerException, IOException {\n    List<SolrInputDocument> sidl = new ArrayList<>();\n    for (Map<String,Object> doc : docs) {\n      SolrInputDocument sd = new SolrInputDocument();\n      for (Entry<String,Object> entry : doc.entrySet()) {\n        sd.addField(entry.getKey(), entry.getValue());\n      }\n      sidl.add(sd);\n    }\n    \n    HttpSolrClient solrServer = new HttpSolrClient(getSourceUrl());\n    try {\n      solrServer.setConnectionTimeout(15000);\n      solrServer.setSoTimeout(30000);\n      solrServer.add(sidl);\n      solrServer.commit(true, true);\n    } finally {\n      solrServer.shutdown();\n    }\n  }\n\n","sourceOld":"  private void addDocumentsToSolr(List<Map<String,Object>> docs) throws SolrServerException, IOException {\n    List<SolrInputDocument> sidl = new ArrayList<>();\n    for (Map<String,Object> doc : docs) {\n      SolrInputDocument sd = new SolrInputDocument();\n      for (Entry<String,Object> entry : doc.entrySet()) {\n        sd.addField(entry.getKey(), entry.getValue());\n      }\n      sidl.add(sd);\n    }\n    \n    HttpSolrServer solrServer = new HttpSolrServer(getSourceUrl());\n    try {\n      solrServer.setConnectionTimeout(15000);\n      solrServer.setSoTimeout(30000);\n      solrServer.add(sidl);\n      solrServer.commit(true, true);\n    } finally {\n      solrServer.shutdown();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"cc3b13b430571c2e169f98fe38e1e7666f88522d","date":1422446157,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/TestSolrEntityProcessorEndToEnd#addDocumentsToSolr(List[Map[String,Object]]).mjava","pathOld":"solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/TestSolrEntityProcessorEndToEnd#addDocumentsToSolr(List[Map[String,Object]]).mjava","sourceNew":"  private void addDocumentsToSolr(List<Map<String,Object>> docs) throws SolrServerException, IOException {\n    List<SolrInputDocument> sidl = new ArrayList<>();\n    for (Map<String,Object> doc : docs) {\n      SolrInputDocument sd = new SolrInputDocument();\n      for (Entry<String,Object> entry : doc.entrySet()) {\n        sd.addField(entry.getKey(), entry.getValue());\n      }\n      sidl.add(sd);\n    }\n\n    try (HttpSolrClient solrServer = new HttpSolrClient(getSourceUrl())) {\n      solrServer.setConnectionTimeout(15000);\n      solrServer.setSoTimeout(30000);\n      solrServer.add(sidl);\n      solrServer.commit(true, true);\n    }\n  }\n\n","sourceOld":"  private void addDocumentsToSolr(List<Map<String,Object>> docs) throws SolrServerException, IOException {\n    List<SolrInputDocument> sidl = new ArrayList<>();\n    for (Map<String,Object> doc : docs) {\n      SolrInputDocument sd = new SolrInputDocument();\n      for (Entry<String,Object> entry : doc.entrySet()) {\n        sd.addField(entry.getKey(), entry.getValue());\n      }\n      sidl.add(sd);\n    }\n    \n    HttpSolrClient solrServer = new HttpSolrClient(getSourceUrl());\n    try {\n      solrServer.setConnectionTimeout(15000);\n      solrServer.setSoTimeout(30000);\n      solrServer.add(sidl);\n      solrServer.commit(true, true);\n    } finally {\n      solrServer.shutdown();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e3c94a8b8bf47db4f968d9ae510ec8bbe1372088","date":1460069869,"type":3,"author":"Anshum Gupta","isMerge":false,"pathNew":"solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/TestSolrEntityProcessorEndToEnd#addDocumentsToSolr(List[Map[String,Object]]).mjava","pathOld":"solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/TestSolrEntityProcessorEndToEnd#addDocumentsToSolr(List[Map[String,Object]]).mjava","sourceNew":"  private void addDocumentsToSolr(List<Map<String,Object>> docs) throws SolrServerException, IOException {\n    List<SolrInputDocument> sidl = new ArrayList<>();\n    for (Map<String,Object> doc : docs) {\n      SolrInputDocument sd = new SolrInputDocument();\n      for (Entry<String,Object> entry : doc.entrySet()) {\n        sd.addField(entry.getKey(), entry.getValue());\n      }\n      sidl.add(sd);\n    }\n\n    try (HttpSolrClient solrServer = getHttpSolrClient(getSourceUrl())) {\n      solrServer.setConnectionTimeout(15000);\n      solrServer.setSoTimeout(30000);\n      solrServer.add(sidl);\n      solrServer.commit(true, true);\n    }\n  }\n\n","sourceOld":"  private void addDocumentsToSolr(List<Map<String,Object>> docs) throws SolrServerException, IOException {\n    List<SolrInputDocument> sidl = new ArrayList<>();\n    for (Map<String,Object> doc : docs) {\n      SolrInputDocument sd = new SolrInputDocument();\n      for (Entry<String,Object> entry : doc.entrySet()) {\n        sd.addField(entry.getKey(), entry.getValue());\n      }\n      sidl.add(sd);\n    }\n\n    try (HttpSolrClient solrServer = new HttpSolrClient(getSourceUrl())) {\n      solrServer.setConnectionTimeout(15000);\n      solrServer.setSoTimeout(30000);\n      solrServer.add(sidl);\n      solrServer.commit(true, true);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5bdaf2cee03ff78b0a0cbf23df0095a3590b493b","date":1460110033,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/TestSolrEntityProcessorEndToEnd#addDocumentsToSolr(List[Map[String,Object]]).mjava","pathOld":"solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/TestSolrEntityProcessorEndToEnd#addDocumentsToSolr(List[Map[String,Object]]).mjava","sourceNew":"  private void addDocumentsToSolr(List<Map<String,Object>> docs) throws SolrServerException, IOException {\n    List<SolrInputDocument> sidl = new ArrayList<>();\n    for (Map<String,Object> doc : docs) {\n      SolrInputDocument sd = new SolrInputDocument();\n      for (Entry<String,Object> entry : doc.entrySet()) {\n        sd.addField(entry.getKey(), entry.getValue());\n      }\n      sidl.add(sd);\n    }\n\n    try (HttpSolrClient solrServer = getHttpSolrClient(getSourceUrl())) {\n      solrServer.setConnectionTimeout(15000);\n      solrServer.setSoTimeout(30000);\n      solrServer.add(sidl);\n      solrServer.commit(true, true);\n    }\n  }\n\n","sourceOld":"  private void addDocumentsToSolr(List<Map<String,Object>> docs) throws SolrServerException, IOException {\n    List<SolrInputDocument> sidl = new ArrayList<>();\n    for (Map<String,Object> doc : docs) {\n      SolrInputDocument sd = new SolrInputDocument();\n      for (Entry<String,Object> entry : doc.entrySet()) {\n        sd.addField(entry.getKey(), entry.getValue());\n      }\n      sidl.add(sd);\n    }\n\n    try (HttpSolrClient solrServer = new HttpSolrClient(getSourceUrl())) {\n      solrServer.setConnectionTimeout(15000);\n      solrServer.setSoTimeout(30000);\n      solrServer.add(sidl);\n      solrServer.commit(true, true);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"43d1e498704edd2bba13548a189eed4dfccff11b","date":1499143458,"type":3,"author":"Anshum Gupta","isMerge":false,"pathNew":"solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/TestSolrEntityProcessorEndToEnd#addDocumentsToSolr(List[Map[String,Object]]).mjava","pathOld":"solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/TestSolrEntityProcessorEndToEnd#addDocumentsToSolr(List[Map[String,Object]]).mjava","sourceNew":"  private void addDocumentsToSolr(List<Map<String,Object>> docs) throws SolrServerException, IOException {\n    List<SolrInputDocument> sidl = new ArrayList<>();\n    for (Map<String,Object> doc : docs) {\n      SolrInputDocument sd = new SolrInputDocument();\n      for (Entry<String,Object> entry : doc.entrySet()) {\n        sd.addField(entry.getKey(), entry.getValue());\n      }\n      sidl.add(sd);\n    }\n\n    try (HttpSolrClient solrServer = getHttpSolrClient(getSourceUrl(), 15000, 30000)) {\n      solrServer.add(sidl);\n      solrServer.commit(true, true);\n    }\n  }\n\n","sourceOld":"  private void addDocumentsToSolr(List<Map<String,Object>> docs) throws SolrServerException, IOException {\n    List<SolrInputDocument> sidl = new ArrayList<>();\n    for (Map<String,Object> doc : docs) {\n      SolrInputDocument sd = new SolrInputDocument();\n      for (Entry<String,Object> entry : doc.entrySet()) {\n        sd.addField(entry.getKey(), entry.getValue());\n      }\n      sidl.add(sd);\n    }\n\n    try (HttpSolrClient solrServer = getHttpSolrClient(getSourceUrl())) {\n      solrServer.setConnectionTimeout(15000);\n      solrServer.setSoTimeout(30000);\n      solrServer.add(sidl);\n      solrServer.commit(true, true);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2ea161f828a3a7a6eb9410a431aecda6d7ab1065","date":1499213384,"type":3,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/TestSolrEntityProcessorEndToEnd#addDocumentsToSolr(List[Map[String,Object]]).mjava","pathOld":"solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/TestSolrEntityProcessorEndToEnd#addDocumentsToSolr(List[Map[String,Object]]).mjava","sourceNew":"  private void addDocumentsToSolr(List<Map<String,Object>> docs) throws SolrServerException, IOException {\n    List<SolrInputDocument> sidl = new ArrayList<>();\n    for (Map<String,Object> doc : docs) {\n      SolrInputDocument sd = new SolrInputDocument();\n      for (Entry<String,Object> entry : doc.entrySet()) {\n        sd.addField(entry.getKey(), entry.getValue());\n      }\n      sidl.add(sd);\n    }\n\n    try (HttpSolrClient solrServer = getHttpSolrClient(getSourceUrl(), 15000, 30000)) {\n      solrServer.add(sidl);\n      solrServer.commit(true, true);\n    }\n  }\n\n","sourceOld":"  private void addDocumentsToSolr(List<Map<String,Object>> docs) throws SolrServerException, IOException {\n    List<SolrInputDocument> sidl = new ArrayList<>();\n    for (Map<String,Object> doc : docs) {\n      SolrInputDocument sd = new SolrInputDocument();\n      for (Entry<String,Object> entry : doc.entrySet()) {\n        sd.addField(entry.getKey(), entry.getValue());\n      }\n      sidl.add(sd);\n    }\n\n    try (HttpSolrClient solrServer = getHttpSolrClient(getSourceUrl())) {\n      solrServer.setConnectionTimeout(15000);\n      solrServer.setSoTimeout(30000);\n      solrServer.add(sidl);\n      solrServer.commit(true, true);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d2c8f5c46c2501b61e2f55eb7ee59e6c5372290b","date":1598712724,"type":4,"author":"Alexandre Rafalovitch","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/TestSolrEntityProcessorEndToEnd#addDocumentsToSolr(List[Map[String,Object]]).mjava","sourceNew":null,"sourceOld":"  private void addDocumentsToSolr(List<Map<String,Object>> docs) throws SolrServerException, IOException {\n    List<SolrInputDocument> sidl = new ArrayList<>();\n    for (Map<String,Object> doc : docs) {\n      SolrInputDocument sd = new SolrInputDocument();\n      for (Entry<String,Object> entry : doc.entrySet()) {\n        sd.addField(entry.getKey(), entry.getValue());\n      }\n      sidl.add(sd);\n    }\n\n    try (HttpSolrClient solrServer = getHttpSolrClient(getSourceUrl(), 15000, 30000)) {\n      solrServer.add(sidl);\n      solrServer.commit(true, true);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"d3fcb70cf561547c7bb1506e0cf32ca7b1287064":["eb99886ff640d94edb43e0d36112a2b7023379ba","a69439d0df009e0bb0038d1e427159f449dd670d"],"634f330c54fd3f9f491d52036dc3f40b4f4d8934":["2d750082a4223c20902ef11ff6a9831d55738ea4"],"9fbbf851af229fb91fabc74b799bf3baeb2223ef":["eb99886ff640d94edb43e0d36112a2b7023379ba"],"cea5f7a2e31566bda38c740c37affa52b0e9c46e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"ba5bc70a1fc1e0abc1eb4171af0d6f2532711c00":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","cea5f7a2e31566bda38c740c37affa52b0e9c46e"],"e3c94a8b8bf47db4f968d9ae510ec8bbe1372088":["cc3b13b430571c2e169f98fe38e1e7666f88522d"],"a69439d0df009e0bb0038d1e427159f449dd670d":["9fbbf851af229fb91fabc74b799bf3baeb2223ef"],"7321b77a7bc3edfebd637ef273e9dfaa9969eba6":["2c007e7c4cf8c55bc2a5884e315123afaaeec87f"],"a3c68e20c73359a10cf3eb4a35c9fa7ab1f3c30d":["cea5f7a2e31566bda38c740c37affa52b0e9c46e","2c007e7c4cf8c55bc2a5884e315123afaaeec87f"],"bafca15d8e408346a67f4282ad1143b88023893b":["634f330c54fd3f9f491d52036dc3f40b4f4d8934"],"eb99886ff640d94edb43e0d36112a2b7023379ba":["7321b77a7bc3edfebd637ef273e9dfaa9969eba6"],"43d1e498704edd2bba13548a189eed4dfccff11b":["5bdaf2cee03ff78b0a0cbf23df0095a3590b493b"],"d2c8f5c46c2501b61e2f55eb7ee59e6c5372290b":["43d1e498704edd2bba13548a189eed4dfccff11b"],"0d22ac6a4146774c1bc8400160fc0b6150294e92":["cea5f7a2e31566bda38c740c37affa52b0e9c46e","2c007e7c4cf8c55bc2a5884e315123afaaeec87f"],"2ea161f828a3a7a6eb9410a431aecda6d7ab1065":["5bdaf2cee03ff78b0a0cbf23df0095a3590b493b","43d1e498704edd2bba13548a189eed4dfccff11b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"2d750082a4223c20902ef11ff6a9831d55738ea4":["a69439d0df009e0bb0038d1e427159f449dd670d"],"2c007e7c4cf8c55bc2a5884e315123afaaeec87f":["cea5f7a2e31566bda38c740c37affa52b0e9c46e"],"5bdaf2cee03ff78b0a0cbf23df0095a3590b493b":["cc3b13b430571c2e169f98fe38e1e7666f88522d","e3c94a8b8bf47db4f968d9ae510ec8bbe1372088"],"cc3b13b430571c2e169f98fe38e1e7666f88522d":["bafca15d8e408346a67f4282ad1143b88023893b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["d2c8f5c46c2501b61e2f55eb7ee59e6c5372290b"]},"commit2Childs":{"d3fcb70cf561547c7bb1506e0cf32ca7b1287064":[],"634f330c54fd3f9f491d52036dc3f40b4f4d8934":["bafca15d8e408346a67f4282ad1143b88023893b"],"9fbbf851af229fb91fabc74b799bf3baeb2223ef":["a69439d0df009e0bb0038d1e427159f449dd670d"],"cea5f7a2e31566bda38c740c37affa52b0e9c46e":["ba5bc70a1fc1e0abc1eb4171af0d6f2532711c00","a3c68e20c73359a10cf3eb4a35c9fa7ab1f3c30d","0d22ac6a4146774c1bc8400160fc0b6150294e92","2c007e7c4cf8c55bc2a5884e315123afaaeec87f"],"ba5bc70a1fc1e0abc1eb4171af0d6f2532711c00":[],"e3c94a8b8bf47db4f968d9ae510ec8bbe1372088":["5bdaf2cee03ff78b0a0cbf23df0095a3590b493b"],"a69439d0df009e0bb0038d1e427159f449dd670d":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","2d750082a4223c20902ef11ff6a9831d55738ea4"],"7321b77a7bc3edfebd637ef273e9dfaa9969eba6":["eb99886ff640d94edb43e0d36112a2b7023379ba"],"a3c68e20c73359a10cf3eb4a35c9fa7ab1f3c30d":[],"bafca15d8e408346a67f4282ad1143b88023893b":["cc3b13b430571c2e169f98fe38e1e7666f88522d"],"eb99886ff640d94edb43e0d36112a2b7023379ba":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","9fbbf851af229fb91fabc74b799bf3baeb2223ef"],"43d1e498704edd2bba13548a189eed4dfccff11b":["d2c8f5c46c2501b61e2f55eb7ee59e6c5372290b","2ea161f828a3a7a6eb9410a431aecda6d7ab1065"],"d2c8f5c46c2501b61e2f55eb7ee59e6c5372290b":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"0d22ac6a4146774c1bc8400160fc0b6150294e92":[],"2ea161f828a3a7a6eb9410a431aecda6d7ab1065":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cea5f7a2e31566bda38c740c37affa52b0e9c46e","ba5bc70a1fc1e0abc1eb4171af0d6f2532711c00"],"2d750082a4223c20902ef11ff6a9831d55738ea4":["634f330c54fd3f9f491d52036dc3f40b4f4d8934"],"2c007e7c4cf8c55bc2a5884e315123afaaeec87f":["7321b77a7bc3edfebd637ef273e9dfaa9969eba6","a3c68e20c73359a10cf3eb4a35c9fa7ab1f3c30d","0d22ac6a4146774c1bc8400160fc0b6150294e92"],"5bdaf2cee03ff78b0a0cbf23df0095a3590b493b":["43d1e498704edd2bba13548a189eed4dfccff11b","2ea161f828a3a7a6eb9410a431aecda6d7ab1065"],"cc3b13b430571c2e169f98fe38e1e7666f88522d":["e3c94a8b8bf47db4f968d9ae510ec8bbe1372088","5bdaf2cee03ff78b0a0cbf23df0095a3590b493b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","ba5bc70a1fc1e0abc1eb4171af0d6f2532711c00","a3c68e20c73359a10cf3eb4a35c9fa7ab1f3c30d","0d22ac6a4146774c1bc8400160fc0b6150294e92","2ea161f828a3a7a6eb9410a431aecda6d7ab1065","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}