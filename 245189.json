{"path":"lucene/contrib/analyzers/common/src/java/org/apache/lucene/analysis/th/ThaiAnalyzer#createComponents(String,Reader).mjava","commits":[{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/contrib/analyzers/common/src/java/org/apache/lucene/analysis/th/ThaiAnalyzer#createComponents(String,Reader).mjava","pathOld":"contrib/analyzers/common/src/java/org/apache/lucene/analysis/th/ThaiAnalyzer#createComponents(String,Reader).mjava","sourceNew":"  /**\n   * Creates\n   * {@link org.apache.lucene.analysis.ReusableAnalyzerBase.TokenStreamComponents}\n   * used to tokenize all the text in the provided {@link Reader}.\n   * \n   * @return {@link org.apache.lucene.analysis.ReusableAnalyzerBase.TokenStreamComponents}\n   *         built from a {@link StandardTokenizer} filtered with\n   *         {@link StandardFilter}, {@link ThaiWordFilter}, and\n   *         {@link StopFilter}\n   */\n  @Override\n  protected TokenStreamComponents createComponents(String fieldName,\n      Reader reader) {\n    final Tokenizer source = new StandardTokenizer(matchVersion, reader);\n    TokenStream result = new StandardFilter(source);\n    result = new ThaiWordFilter(result);\n    return new TokenStreamComponents(source, new StopFilter(matchVersion,\n        result, StopAnalyzer.ENGLISH_STOP_WORDS_SET));\n  }\n\n","sourceOld":"  /**\n   * Creates\n   * {@link org.apache.lucene.analysis.ReusableAnalyzerBase.TokenStreamComponents}\n   * used to tokenize all the text in the provided {@link Reader}.\n   * \n   * @return {@link org.apache.lucene.analysis.ReusableAnalyzerBase.TokenStreamComponents}\n   *         built from a {@link StandardTokenizer} filtered with\n   *         {@link StandardFilter}, {@link ThaiWordFilter}, and\n   *         {@link StopFilter}\n   */\n  @Override\n  protected TokenStreamComponents createComponents(String fieldName,\n      Reader reader) {\n    final Tokenizer source = new StandardTokenizer(matchVersion, reader);\n    TokenStream result = new StandardFilter(source);\n    result = new ThaiWordFilter(result);\n    return new TokenStreamComponents(source, new StopFilter(matchVersion,\n        result, StopAnalyzer.ENGLISH_STOP_WORDS_SET));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e04cd57d69cd012c394228709e3ebd001ed9cde5","date":1271710130,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/contrib/analyzers/common/src/java/org/apache/lucene/analysis/th/ThaiAnalyzer#createComponents(String,Reader).mjava","pathOld":"lucene/contrib/analyzers/common/src/java/org/apache/lucene/analysis/th/ThaiAnalyzer#createComponents(String,Reader).mjava","sourceNew":"  /**\n   * Creates\n   * {@link org.apache.lucene.analysis.ReusableAnalyzerBase.TokenStreamComponents}\n   * used to tokenize all the text in the provided {@link Reader}.\n   * \n   * @return {@link org.apache.lucene.analysis.ReusableAnalyzerBase.TokenStreamComponents}\n   *         built from a {@link StandardTokenizer} filtered with\n   *         {@link StandardFilter}, {@link ThaiWordFilter}, and\n   *         {@link StopFilter}\n   */\n  @Override\n  protected TokenStreamComponents createComponents(String fieldName,\n      Reader reader) {\n    final Tokenizer source = new StandardTokenizer(matchVersion, reader);\n    TokenStream result = new StandardFilter(source);\n    if (matchVersion.onOrAfter(Version.LUCENE_31))\n      result = new LowerCaseFilter(matchVersion, result);\n    result = new ThaiWordFilter(matchVersion, result);\n    return new TokenStreamComponents(source, new StopFilter(matchVersion,\n        result, StopAnalyzer.ENGLISH_STOP_WORDS_SET));\n  }\n\n","sourceOld":"  /**\n   * Creates\n   * {@link org.apache.lucene.analysis.ReusableAnalyzerBase.TokenStreamComponents}\n   * used to tokenize all the text in the provided {@link Reader}.\n   * \n   * @return {@link org.apache.lucene.analysis.ReusableAnalyzerBase.TokenStreamComponents}\n   *         built from a {@link StandardTokenizer} filtered with\n   *         {@link StandardFilter}, {@link ThaiWordFilter}, and\n   *         {@link StopFilter}\n   */\n  @Override\n  protected TokenStreamComponents createComponents(String fieldName,\n      Reader reader) {\n    final Tokenizer source = new StandardTokenizer(matchVersion, reader);\n    TokenStream result = new StandardFilter(source);\n    result = new ThaiWordFilter(result);\n    return new TokenStreamComponents(source, new StopFilter(matchVersion,\n        result, StopAnalyzer.ENGLISH_STOP_WORDS_SET));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"9796e6377c89a81fac4b5b7b4688bdb6f40615fa","date":1271719475,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/contrib/analyzers/common/src/java/org/apache/lucene/analysis/th/ThaiAnalyzer#createComponents(String,Reader).mjava","pathOld":"lucene/contrib/analyzers/common/src/java/org/apache/lucene/analysis/th/ThaiAnalyzer#createComponents(String,Reader).mjava","sourceNew":"  /**\n   * Creates\n   * {@link org.apache.lucene.analysis.ReusableAnalyzerBase.TokenStreamComponents}\n   * used to tokenize all the text in the provided {@link Reader}.\n   * \n   * @return {@link org.apache.lucene.analysis.ReusableAnalyzerBase.TokenStreamComponents}\n   *         built from a {@link StandardTokenizer} filtered with\n   *         {@link StandardFilter}, {@link LowerCaseFilter}, {@link ThaiWordFilter}, and\n   *         {@link StopFilter}\n   */\n  @Override\n  protected TokenStreamComponents createComponents(String fieldName,\n      Reader reader) {\n    final Tokenizer source = new StandardTokenizer(matchVersion, reader);\n    TokenStream result = new StandardFilter(source);\n    if (matchVersion.onOrAfter(Version.LUCENE_31))\n      result = new LowerCaseFilter(matchVersion, result);\n    result = new ThaiWordFilter(matchVersion, result);\n    return new TokenStreamComponents(source, new StopFilter(matchVersion,\n        result, StopAnalyzer.ENGLISH_STOP_WORDS_SET));\n  }\n\n","sourceOld":"  /**\n   * Creates\n   * {@link org.apache.lucene.analysis.ReusableAnalyzerBase.TokenStreamComponents}\n   * used to tokenize all the text in the provided {@link Reader}.\n   * \n   * @return {@link org.apache.lucene.analysis.ReusableAnalyzerBase.TokenStreamComponents}\n   *         built from a {@link StandardTokenizer} filtered with\n   *         {@link StandardFilter}, {@link ThaiWordFilter}, and\n   *         {@link StopFilter}\n   */\n  @Override\n  protected TokenStreamComponents createComponents(String fieldName,\n      Reader reader) {\n    final Tokenizer source = new StandardTokenizer(matchVersion, reader);\n    TokenStream result = new StandardFilter(source);\n    if (matchVersion.onOrAfter(Version.LUCENE_31))\n      result = new LowerCaseFilter(matchVersion, result);\n    result = new ThaiWordFilter(matchVersion, result);\n    return new TokenStreamComponents(source, new StopFilter(matchVersion,\n        result, StopAnalyzer.ENGLISH_STOP_WORDS_SET));\n  }\n\n","bugFix":["a9ac13b5f0ce5ef1b2ce168367d993a79594b23a"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0f080986da691a3bba7b757f43ab72cdc82b57ce","date":1273069619,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"modules/analysis/common/src/java/org/apache/lucene/analysis/th/ThaiAnalyzer#createComponents(String,Reader).mjava","pathOld":"lucene/contrib/analyzers/common/src/java/org/apache/lucene/analysis/th/ThaiAnalyzer#createComponents(String,Reader).mjava","sourceNew":"  /**\n   * Creates\n   * {@link org.apache.lucene.analysis.ReusableAnalyzerBase.TokenStreamComponents}\n   * used to tokenize all the text in the provided {@link Reader}.\n   * \n   * @return {@link org.apache.lucene.analysis.ReusableAnalyzerBase.TokenStreamComponents}\n   *         built from a {@link StandardTokenizer} filtered with\n   *         {@link StandardFilter}, {@link LowerCaseFilter}, {@link ThaiWordFilter}, and\n   *         {@link StopFilter}\n   */\n  @Override\n  protected TokenStreamComponents createComponents(String fieldName,\n      Reader reader) {\n    final Tokenizer source = new StandardTokenizer(matchVersion, reader);\n    TokenStream result = new StandardFilter(source);\n    if (matchVersion.onOrAfter(Version.LUCENE_31))\n      result = new LowerCaseFilter(matchVersion, result);\n    result = new ThaiWordFilter(matchVersion, result);\n    return new TokenStreamComponents(source, new StopFilter(matchVersion,\n        result, StopAnalyzer.ENGLISH_STOP_WORDS_SET));\n  }\n\n","sourceOld":"  /**\n   * Creates\n   * {@link org.apache.lucene.analysis.ReusableAnalyzerBase.TokenStreamComponents}\n   * used to tokenize all the text in the provided {@link Reader}.\n   * \n   * @return {@link org.apache.lucene.analysis.ReusableAnalyzerBase.TokenStreamComponents}\n   *         built from a {@link StandardTokenizer} filtered with\n   *         {@link StandardFilter}, {@link LowerCaseFilter}, {@link ThaiWordFilter}, and\n   *         {@link StopFilter}\n   */\n  @Override\n  protected TokenStreamComponents createComponents(String fieldName,\n      Reader reader) {\n    final Tokenizer source = new StandardTokenizer(matchVersion, reader);\n    TokenStream result = new StandardFilter(source);\n    if (matchVersion.onOrAfter(Version.LUCENE_31))\n      result = new LowerCaseFilter(matchVersion, result);\n    result = new ThaiWordFilter(matchVersion, result);\n    return new TokenStreamComponents(source, new StopFilter(matchVersion,\n        result, StopAnalyzer.ENGLISH_STOP_WORDS_SET));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"0f080986da691a3bba7b757f43ab72cdc82b57ce":["9796e6377c89a81fac4b5b7b4688bdb6f40615fa"],"9796e6377c89a81fac4b5b7b4688bdb6f40615fa":["e04cd57d69cd012c394228709e3ebd001ed9cde5"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["0f080986da691a3bba7b757f43ab72cdc82b57ce"],"e04cd57d69cd012c394228709e3ebd001ed9cde5":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"0f080986da691a3bba7b757f43ab72cdc82b57ce":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"9796e6377c89a81fac4b5b7b4688bdb6f40615fa":["0f080986da691a3bba7b757f43ab72cdc82b57ce"],"e04cd57d69cd012c394228709e3ebd001ed9cde5":["9796e6377c89a81fac4b5b7b4688bdb6f40615fa"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["e04cd57d69cd012c394228709e3ebd001ed9cde5"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}