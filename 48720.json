{"path":"lucene/spatial-extras/src/test/org/apache/lucene/spatial/prefix/NumberRangeFacetsTest#searchForDocBits(Query).mjava","commits":[{"id":"112d77ac8d3e10a362516ad834c9a11d35c94234","date":1456784319,"type":1,"author":"nknize","isMerge":false,"pathNew":"lucene/spatial-extras/src/test/org/apache/lucene/spatial/prefix/NumberRangeFacetsTest#searchForDocBits(Query).mjava","pathOld":"lucene/spatial/src/test/org/apache/lucene/spatial/prefix/NumberRangeFacetsTest#searchForDocBits(Query).mjava","sourceNew":"  private Bits searchForDocBits(Query query) throws IOException {\n    FixedBitSet bitSet = new FixedBitSet(indexSearcher.getIndexReader().maxDoc());\n    indexSearcher.search(query,\n        new SimpleCollector() {\n          int leafDocBase;\n          @Override\n          public void collect(int doc) throws IOException {\n            bitSet.set(leafDocBase + doc);\n          }\n\n          @Override\n          protected void doSetNextReader(LeafReaderContext context) throws IOException {\n            leafDocBase = context.docBase;\n          }\n\n          @Override\n          public boolean needsScores() {\n            return false;\n          }\n        });\n    return bitSet;\n  }\n\n","sourceOld":"  private Bits searchForDocBits(Query query) throws IOException {\n    FixedBitSet bitSet = new FixedBitSet(indexSearcher.getIndexReader().maxDoc());\n    indexSearcher.search(query,\n        new SimpleCollector() {\n          int leafDocBase;\n          @Override\n          public void collect(int doc) throws IOException {\n            bitSet.set(leafDocBase + doc);\n          }\n\n          @Override\n          protected void doSetNextReader(LeafReaderContext context) throws IOException {\n            leafDocBase = context.docBase;\n          }\n\n          @Override\n          public boolean needsScores() {\n            return false;\n          }\n        });\n    return bitSet;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"af2638813028b254a88b418ebeafb541afb49653","date":1456804822,"type":1,"author":"Noble Paul","isMerge":true,"pathNew":"lucene/spatial-extras/src/test/org/apache/lucene/spatial/prefix/NumberRangeFacetsTest#searchForDocBits(Query).mjava","pathOld":"lucene/spatial/src/test/org/apache/lucene/spatial/prefix/NumberRangeFacetsTest#searchForDocBits(Query).mjava","sourceNew":"  private Bits searchForDocBits(Query query) throws IOException {\n    FixedBitSet bitSet = new FixedBitSet(indexSearcher.getIndexReader().maxDoc());\n    indexSearcher.search(query,\n        new SimpleCollector() {\n          int leafDocBase;\n          @Override\n          public void collect(int doc) throws IOException {\n            bitSet.set(leafDocBase + doc);\n          }\n\n          @Override\n          protected void doSetNextReader(LeafReaderContext context) throws IOException {\n            leafDocBase = context.docBase;\n          }\n\n          @Override\n          public boolean needsScores() {\n            return false;\n          }\n        });\n    return bitSet;\n  }\n\n","sourceOld":"  private Bits searchForDocBits(Query query) throws IOException {\n    FixedBitSet bitSet = new FixedBitSet(indexSearcher.getIndexReader().maxDoc());\n    indexSearcher.search(query,\n        new SimpleCollector() {\n          int leafDocBase;\n          @Override\n          public void collect(int doc) throws IOException {\n            bitSet.set(leafDocBase + doc);\n          }\n\n          @Override\n          protected void doSetNextReader(LeafReaderContext context) throws IOException {\n            leafDocBase = context.docBase;\n          }\n\n          @Override\n          public boolean needsScores() {\n            return false;\n          }\n        });\n    return bitSet;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9fc47cb7b4346802411bb432f501ed0673d7119e","date":1512640179,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/spatial-extras/src/test/org/apache/lucene/spatial/prefix/NumberRangeFacetsTest#searchForDocBits(Query).mjava","pathOld":"lucene/spatial-extras/src/test/org/apache/lucene/spatial/prefix/NumberRangeFacetsTest#searchForDocBits(Query).mjava","sourceNew":"  private Bits searchForDocBits(Query query) throws IOException {\n    FixedBitSet bitSet = new FixedBitSet(indexSearcher.getIndexReader().maxDoc());\n    indexSearcher.search(query,\n        new SimpleCollector() {\n          int leafDocBase;\n          @Override\n          public void collect(int doc) throws IOException {\n            bitSet.set(leafDocBase + doc);\n          }\n\n          @Override\n          protected void doSetNextReader(LeafReaderContext context) throws IOException {\n            leafDocBase = context.docBase;\n          }\n\n          @Override\n          public ScoreMode scoreMode() {\n            return ScoreMode.COMPLETE_NO_SCORES;\n          }\n        });\n    return bitSet;\n  }\n\n","sourceOld":"  private Bits searchForDocBits(Query query) throws IOException {\n    FixedBitSet bitSet = new FixedBitSet(indexSearcher.getIndexReader().maxDoc());\n    indexSearcher.search(query,\n        new SimpleCollector() {\n          int leafDocBase;\n          @Override\n          public void collect(int doc) throws IOException {\n            bitSet.set(leafDocBase + doc);\n          }\n\n          @Override\n          protected void doSetNextReader(LeafReaderContext context) throws IOException {\n            leafDocBase = context.docBase;\n          }\n\n          @Override\n          public boolean needsScores() {\n            return false;\n          }\n        });\n    return bitSet;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"417142ff08fda9cf0b72d5133e63097a166c6458","date":1512729693,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"lucene/spatial-extras/src/test/org/apache/lucene/spatial/prefix/NumberRangeFacetsTest#searchForDocBits(Query).mjava","pathOld":"lucene/spatial-extras/src/test/org/apache/lucene/spatial/prefix/NumberRangeFacetsTest#searchForDocBits(Query).mjava","sourceNew":"  private Bits searchForDocBits(Query query) throws IOException {\n    FixedBitSet bitSet = new FixedBitSet(indexSearcher.getIndexReader().maxDoc());\n    indexSearcher.search(query,\n        new SimpleCollector() {\n          int leafDocBase;\n          @Override\n          public void collect(int doc) throws IOException {\n            bitSet.set(leafDocBase + doc);\n          }\n\n          @Override\n          protected void doSetNextReader(LeafReaderContext context) throws IOException {\n            leafDocBase = context.docBase;\n          }\n\n          @Override\n          public ScoreMode scoreMode() {\n            return ScoreMode.COMPLETE_NO_SCORES;\n          }\n        });\n    return bitSet;\n  }\n\n","sourceOld":"  private Bits searchForDocBits(Query query) throws IOException {\n    FixedBitSet bitSet = new FixedBitSet(indexSearcher.getIndexReader().maxDoc());\n    indexSearcher.search(query,\n        new SimpleCollector() {\n          int leafDocBase;\n          @Override\n          public void collect(int doc) throws IOException {\n            bitSet.set(leafDocBase + doc);\n          }\n\n          @Override\n          protected void doSetNextReader(LeafReaderContext context) throws IOException {\n            leafDocBase = context.docBase;\n          }\n\n          @Override\n          public boolean needsScores() {\n            return false;\n          }\n        });\n    return bitSet;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"af2638813028b254a88b418ebeafb541afb49653":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","112d77ac8d3e10a362516ad834c9a11d35c94234"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"112d77ac8d3e10a362516ad834c9a11d35c94234":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"9fc47cb7b4346802411bb432f501ed0673d7119e":["af2638813028b254a88b418ebeafb541afb49653"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["417142ff08fda9cf0b72d5133e63097a166c6458"],"417142ff08fda9cf0b72d5133e63097a166c6458":["af2638813028b254a88b418ebeafb541afb49653","9fc47cb7b4346802411bb432f501ed0673d7119e"]},"commit2Childs":{"af2638813028b254a88b418ebeafb541afb49653":["9fc47cb7b4346802411bb432f501ed0673d7119e","417142ff08fda9cf0b72d5133e63097a166c6458"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["af2638813028b254a88b418ebeafb541afb49653","112d77ac8d3e10a362516ad834c9a11d35c94234"],"112d77ac8d3e10a362516ad834c9a11d35c94234":["af2638813028b254a88b418ebeafb541afb49653"],"9fc47cb7b4346802411bb432f501ed0673d7119e":["417142ff08fda9cf0b72d5133e63097a166c6458"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"417142ff08fda9cf0b72d5133e63097a166c6458":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}