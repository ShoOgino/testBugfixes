{"path":"solr/test-framework/src/java/org/apache/solr/cloud/ZkTestServer#run().mjava","commits":[{"id":"2c30e4c1cee08b3b229a77991882594fe7250b66","date":1344448871,"type":1,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/cloud/ZkTestServer#run().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/ZkTestServer#run().mjava","sourceNew":"  public void run() throws InterruptedException {\n    log.info(\"STARTING ZK TEST SERVER\");\n    // we don't call super.setUp\n    zooThread = new Thread() {\n      \n      @Override\n      public void run() {\n        ServerConfig config = new ServerConfig() {\n\n          {\n            setClientPort(ZkTestServer.this.clientPort);\n            this.dataDir = zkDir;\n            this.dataLogDir = zkDir;\n            this.tickTime = theTickTime;\n          }\n          \n          public void setClientPort(int clientPort) {\n            if (clientPortAddress != null) {\n              try {\n                this.clientPortAddress = new InetSocketAddress(\n                        InetAddress.getByName(clientPortAddress.getHostName()), clientPort);\n              } catch (UnknownHostException e) {\n                throw new RuntimeException(e);\n              }\n            } else {\n              this.clientPortAddress = new InetSocketAddress(clientPort);\n            }\n          }\n        };\n\n        try {\n          zkServer.runFromConfig(config);\n        } catch (Throwable e) {\n          throw new RuntimeException(e);\n        }\n      }\n    };\n\n    zooThread.setDaemon(true);\n    zooThread.start();\n\n    int cnt = 0;\n    int port = -1;\n    try {\n       port = getPort();\n    } catch(IllegalStateException e) {\n      \n    }\n    while (port < 1) {\n      Thread.sleep(100);\n      try {\n        port = getPort();\n      } catch(IllegalStateException e) {\n        \n      }\n      if (cnt == 500) {\n        throw new RuntimeException(\"Could not get the port for ZooKeeper server\");\n      }\n      cnt++;\n    }\n  }\n\n","sourceOld":"  public void run() throws InterruptedException {\n    log.info(\"STARTING ZK TEST SERVER\");\n    // we don't call super.setUp\n    zooThread = new Thread() {\n      \n      @Override\n      public void run() {\n        ServerConfig config = new ServerConfig() {\n\n          {\n            setClientPort(ZkTestServer.this.clientPort);\n            this.dataDir = zkDir;\n            this.dataLogDir = zkDir;\n            this.tickTime = theTickTime;\n          }\n          \n          public void setClientPort(int clientPort) {\n            if (clientPortAddress != null) {\n              try {\n                this.clientPortAddress = new InetSocketAddress(\n                        InetAddress.getByName(clientPortAddress.getHostName()), clientPort);\n              } catch (UnknownHostException e) {\n                throw new RuntimeException(e);\n              }\n            } else {\n              this.clientPortAddress = new InetSocketAddress(clientPort);\n            }\n          }\n        };\n\n        try {\n          zkServer.runFromConfig(config);\n        } catch (Throwable e) {\n          throw new RuntimeException(e);\n        }\n      }\n    };\n\n    zooThread.setDaemon(true);\n    zooThread.start();\n\n    int cnt = 0;\n    int port = -1;\n    try {\n       port = getPort();\n    } catch(IllegalStateException e) {\n      \n    }\n    while (port < 1) {\n      Thread.sleep(100);\n      try {\n        port = getPort();\n      } catch(IllegalStateException e) {\n        \n      }\n      if (cnt == 500) {\n        throw new RuntimeException(\"Could not get the port for ZooKeeper server\");\n      }\n      cnt++;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d6f074e73200c07d54f242d3880a8da5a35ff97b","date":1344507653,"type":1,"author":"Uwe Schindler","isMerge":true,"pathNew":"solr/test-framework/src/java/org/apache/solr/cloud/ZkTestServer#run().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/ZkTestServer#run().mjava","sourceNew":"  public void run() throws InterruptedException {\n    log.info(\"STARTING ZK TEST SERVER\");\n    // we don't call super.setUp\n    zooThread = new Thread() {\n      \n      @Override\n      public void run() {\n        ServerConfig config = new ServerConfig() {\n\n          {\n            setClientPort(ZkTestServer.this.clientPort);\n            this.dataDir = zkDir;\n            this.dataLogDir = zkDir;\n            this.tickTime = theTickTime;\n          }\n          \n          public void setClientPort(int clientPort) {\n            if (clientPortAddress != null) {\n              try {\n                this.clientPortAddress = new InetSocketAddress(\n                        InetAddress.getByName(clientPortAddress.getHostName()), clientPort);\n              } catch (UnknownHostException e) {\n                throw new RuntimeException(e);\n              }\n            } else {\n              this.clientPortAddress = new InetSocketAddress(clientPort);\n            }\n          }\n        };\n\n        try {\n          zkServer.runFromConfig(config);\n        } catch (Throwable e) {\n          throw new RuntimeException(e);\n        }\n      }\n    };\n\n    zooThread.setDaemon(true);\n    zooThread.start();\n\n    int cnt = 0;\n    int port = -1;\n    try {\n       port = getPort();\n    } catch(IllegalStateException e) {\n      \n    }\n    while (port < 1) {\n      Thread.sleep(100);\n      try {\n        port = getPort();\n      } catch(IllegalStateException e) {\n        \n      }\n      if (cnt == 500) {\n        throw new RuntimeException(\"Could not get the port for ZooKeeper server\");\n      }\n      cnt++;\n    }\n  }\n\n","sourceOld":"  public void run() throws InterruptedException {\n    log.info(\"STARTING ZK TEST SERVER\");\n    // we don't call super.setUp\n    zooThread = new Thread() {\n      \n      @Override\n      public void run() {\n        ServerConfig config = new ServerConfig() {\n\n          {\n            setClientPort(ZkTestServer.this.clientPort);\n            this.dataDir = zkDir;\n            this.dataLogDir = zkDir;\n            this.tickTime = theTickTime;\n          }\n          \n          public void setClientPort(int clientPort) {\n            if (clientPortAddress != null) {\n              try {\n                this.clientPortAddress = new InetSocketAddress(\n                        InetAddress.getByName(clientPortAddress.getHostName()), clientPort);\n              } catch (UnknownHostException e) {\n                throw new RuntimeException(e);\n              }\n            } else {\n              this.clientPortAddress = new InetSocketAddress(clientPort);\n            }\n          }\n        };\n\n        try {\n          zkServer.runFromConfig(config);\n        } catch (Throwable e) {\n          throw new RuntimeException(e);\n        }\n      }\n    };\n\n    zooThread.setDaemon(true);\n    zooThread.start();\n\n    int cnt = 0;\n    int port = -1;\n    try {\n       port = getPort();\n    } catch(IllegalStateException e) {\n      \n    }\n    while (port < 1) {\n      Thread.sleep(100);\n      try {\n        port = getPort();\n      } catch(IllegalStateException e) {\n        \n      }\n      if (cnt == 500) {\n        throw new RuntimeException(\"Could not get the port for ZooKeeper server\");\n      }\n      cnt++;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c7869f64c874ebf7f317d22c00baf2b6857797a6","date":1344856617,"type":1,"author":"Michael McCandless","isMerge":true,"pathNew":"solr/test-framework/src/java/org/apache/solr/cloud/ZkTestServer#run().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/ZkTestServer#run().mjava","sourceNew":"  public void run() throws InterruptedException {\n    log.info(\"STARTING ZK TEST SERVER\");\n    // we don't call super.setUp\n    zooThread = new Thread() {\n      \n      @Override\n      public void run() {\n        ServerConfig config = new ServerConfig() {\n\n          {\n            setClientPort(ZkTestServer.this.clientPort);\n            this.dataDir = zkDir;\n            this.dataLogDir = zkDir;\n            this.tickTime = theTickTime;\n          }\n          \n          public void setClientPort(int clientPort) {\n            if (clientPortAddress != null) {\n              try {\n                this.clientPortAddress = new InetSocketAddress(\n                        InetAddress.getByName(clientPortAddress.getHostName()), clientPort);\n              } catch (UnknownHostException e) {\n                throw new RuntimeException(e);\n              }\n            } else {\n              this.clientPortAddress = new InetSocketAddress(clientPort);\n            }\n          }\n        };\n\n        try {\n          zkServer.runFromConfig(config);\n        } catch (Throwable e) {\n          throw new RuntimeException(e);\n        }\n      }\n    };\n\n    zooThread.setDaemon(true);\n    zooThread.start();\n\n    int cnt = 0;\n    int port = -1;\n    try {\n       port = getPort();\n    } catch(IllegalStateException e) {\n      \n    }\n    while (port < 1) {\n      Thread.sleep(100);\n      try {\n        port = getPort();\n      } catch(IllegalStateException e) {\n        \n      }\n      if (cnt == 500) {\n        throw new RuntimeException(\"Could not get the port for ZooKeeper server\");\n      }\n      cnt++;\n    }\n  }\n\n","sourceOld":"  public void run() throws InterruptedException {\n    log.info(\"STARTING ZK TEST SERVER\");\n    // we don't call super.setUp\n    zooThread = new Thread() {\n      \n      @Override\n      public void run() {\n        ServerConfig config = new ServerConfig() {\n\n          {\n            setClientPort(ZkTestServer.this.clientPort);\n            this.dataDir = zkDir;\n            this.dataLogDir = zkDir;\n            this.tickTime = theTickTime;\n          }\n          \n          public void setClientPort(int clientPort) {\n            if (clientPortAddress != null) {\n              try {\n                this.clientPortAddress = new InetSocketAddress(\n                        InetAddress.getByName(clientPortAddress.getHostName()), clientPort);\n              } catch (UnknownHostException e) {\n                throw new RuntimeException(e);\n              }\n            } else {\n              this.clientPortAddress = new InetSocketAddress(clientPort);\n            }\n          }\n        };\n\n        try {\n          zkServer.runFromConfig(config);\n        } catch (Throwable e) {\n          throw new RuntimeException(e);\n        }\n      }\n    };\n\n    zooThread.setDaemon(true);\n    zooThread.start();\n\n    int cnt = 0;\n    int port = -1;\n    try {\n       port = getPort();\n    } catch(IllegalStateException e) {\n      \n    }\n    while (port < 1) {\n      Thread.sleep(100);\n      try {\n        port = getPort();\n      } catch(IllegalStateException e) {\n        \n      }\n      if (cnt == 500) {\n        throw new RuntimeException(\"Could not get the port for ZooKeeper server\");\n      }\n      cnt++;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"66c64e8cfded6a585100e6430238faaf416f3fea","date":1344964603,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/cloud/ZkTestServer#run().mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/cloud/ZkTestServer#run().mjava","sourceNew":"  public void run() throws InterruptedException {\n    log.info(\"STARTING ZK TEST SERVER\");\n    // we don't call super.setUp\n    zooThread = new Thread() {\n      \n      @Override\n      public void run() {\n        ServerConfig config = new ServerConfig() {\n\n          {\n            setClientPort(ZkTestServer.this.clientPort);\n            this.dataDir = zkDir;\n            this.dataLogDir = zkDir;\n            this.tickTime = theTickTime;\n          }\n          \n          public void setClientPort(int clientPort) {\n            if (clientPortAddress != null) {\n              try {\n                this.clientPortAddress = new InetSocketAddress(\n                        InetAddress.getByName(clientPortAddress.getHostName()), clientPort);\n              } catch (UnknownHostException e) {\n                throw new RuntimeException(e);\n              }\n            } else {\n              this.clientPortAddress = new InetSocketAddress(clientPort);\n            }\n          }\n        };\n\n        try {\n          zkServer.runFromConfig(config);\n        } catch (Throwable e) {\n          throw new RuntimeException(e);\n        }\n      }\n    };\n\n    zooThread.setDaemon(true);\n    zooThread.start();\n\n    int cnt = 0;\n    int port = -1;\n    try {\n       port = getPort();\n    } catch(IllegalStateException e) {\n      \n    }\n    while (port < 1) {\n      Thread.sleep(100);\n      try {\n        port = getPort();\n      } catch(IllegalStateException e) {\n        \n      }\n      if (cnt == 500) {\n        throw new RuntimeException(\"Could not get the port for ZooKeeper server\");\n      }\n      cnt++;\n    }\n    log.info(\"start zk server on port:\" + port);\n  }\n\n","sourceOld":"  public void run() throws InterruptedException {\n    log.info(\"STARTING ZK TEST SERVER\");\n    // we don't call super.setUp\n    zooThread = new Thread() {\n      \n      @Override\n      public void run() {\n        ServerConfig config = new ServerConfig() {\n\n          {\n            setClientPort(ZkTestServer.this.clientPort);\n            this.dataDir = zkDir;\n            this.dataLogDir = zkDir;\n            this.tickTime = theTickTime;\n          }\n          \n          public void setClientPort(int clientPort) {\n            if (clientPortAddress != null) {\n              try {\n                this.clientPortAddress = new InetSocketAddress(\n                        InetAddress.getByName(clientPortAddress.getHostName()), clientPort);\n              } catch (UnknownHostException e) {\n                throw new RuntimeException(e);\n              }\n            } else {\n              this.clientPortAddress = new InetSocketAddress(clientPort);\n            }\n          }\n        };\n\n        try {\n          zkServer.runFromConfig(config);\n        } catch (Throwable e) {\n          throw new RuntimeException(e);\n        }\n      }\n    };\n\n    zooThread.setDaemon(true);\n    zooThread.start();\n\n    int cnt = 0;\n    int port = -1;\n    try {\n       port = getPort();\n    } catch(IllegalStateException e) {\n      \n    }\n    while (port < 1) {\n      Thread.sleep(100);\n      try {\n        port = getPort();\n      } catch(IllegalStateException e) {\n        \n      }\n      if (cnt == 500) {\n        throw new RuntimeException(\"Could not get the port for ZooKeeper server\");\n      }\n      cnt++;\n    }\n  }\n\n","bugFix":null,"bugIntro":["bb222a3f9d9421d5c95afce73013fbd8de07ea1f"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"c1fe8ee1a5a1ef00a9c4793ec26f17bd90342198","date":1345029782,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"solr/test-framework/src/java/org/apache/solr/cloud/ZkTestServer#run().mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/cloud/ZkTestServer#run().mjava","sourceNew":"  public void run() throws InterruptedException {\n    log.info(\"STARTING ZK TEST SERVER\");\n    // we don't call super.setUp\n    zooThread = new Thread() {\n      \n      @Override\n      public void run() {\n        ServerConfig config = new ServerConfig() {\n\n          {\n            setClientPort(ZkTestServer.this.clientPort);\n            this.dataDir = zkDir;\n            this.dataLogDir = zkDir;\n            this.tickTime = theTickTime;\n          }\n          \n          public void setClientPort(int clientPort) {\n            if (clientPortAddress != null) {\n              try {\n                this.clientPortAddress = new InetSocketAddress(\n                        InetAddress.getByName(clientPortAddress.getHostName()), clientPort);\n              } catch (UnknownHostException e) {\n                throw new RuntimeException(e);\n              }\n            } else {\n              this.clientPortAddress = new InetSocketAddress(clientPort);\n            }\n          }\n        };\n\n        try {\n          zkServer.runFromConfig(config);\n        } catch (Throwable e) {\n          throw new RuntimeException(e);\n        }\n      }\n    };\n\n    zooThread.setDaemon(true);\n    zooThread.start();\n\n    int cnt = 0;\n    int port = -1;\n    try {\n       port = getPort();\n    } catch(IllegalStateException e) {\n      \n    }\n    while (port < 1) {\n      Thread.sleep(100);\n      try {\n        port = getPort();\n      } catch(IllegalStateException e) {\n        \n      }\n      if (cnt == 500) {\n        throw new RuntimeException(\"Could not get the port for ZooKeeper server\");\n      }\n      cnt++;\n    }\n    log.info(\"start zk server on port:\" + port);\n  }\n\n","sourceOld":"  public void run() throws InterruptedException {\n    log.info(\"STARTING ZK TEST SERVER\");\n    // we don't call super.setUp\n    zooThread = new Thread() {\n      \n      @Override\n      public void run() {\n        ServerConfig config = new ServerConfig() {\n\n          {\n            setClientPort(ZkTestServer.this.clientPort);\n            this.dataDir = zkDir;\n            this.dataLogDir = zkDir;\n            this.tickTime = theTickTime;\n          }\n          \n          public void setClientPort(int clientPort) {\n            if (clientPortAddress != null) {\n              try {\n                this.clientPortAddress = new InetSocketAddress(\n                        InetAddress.getByName(clientPortAddress.getHostName()), clientPort);\n              } catch (UnknownHostException e) {\n                throw new RuntimeException(e);\n              }\n            } else {\n              this.clientPortAddress = new InetSocketAddress(clientPort);\n            }\n          }\n        };\n\n        try {\n          zkServer.runFromConfig(config);\n        } catch (Throwable e) {\n          throw new RuntimeException(e);\n        }\n      }\n    };\n\n    zooThread.setDaemon(true);\n    zooThread.start();\n\n    int cnt = 0;\n    int port = -1;\n    try {\n       port = getPort();\n    } catch(IllegalStateException e) {\n      \n    }\n    while (port < 1) {\n      Thread.sleep(100);\n      try {\n        port = getPort();\n      } catch(IllegalStateException e) {\n        \n      }\n      if (cnt == 500) {\n        throw new RuntimeException(\"Could not get the port for ZooKeeper server\");\n      }\n      cnt++;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b05c56a41b733e02a189c48895922b5bd8c7f3d1","date":1345033322,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"solr/test-framework/src/java/org/apache/solr/cloud/ZkTestServer#run().mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/cloud/ZkTestServer#run().mjava","sourceNew":"  public void run() throws InterruptedException {\n    log.info(\"STARTING ZK TEST SERVER\");\n    // we don't call super.setUp\n    zooThread = new Thread() {\n      \n      @Override\n      public void run() {\n        ServerConfig config = new ServerConfig() {\n\n          {\n            setClientPort(ZkTestServer.this.clientPort);\n            this.dataDir = zkDir;\n            this.dataLogDir = zkDir;\n            this.tickTime = theTickTime;\n          }\n          \n          public void setClientPort(int clientPort) {\n            if (clientPortAddress != null) {\n              try {\n                this.clientPortAddress = new InetSocketAddress(\n                        InetAddress.getByName(clientPortAddress.getHostName()), clientPort);\n              } catch (UnknownHostException e) {\n                throw new RuntimeException(e);\n              }\n            } else {\n              this.clientPortAddress = new InetSocketAddress(clientPort);\n            }\n          }\n        };\n\n        try {\n          zkServer.runFromConfig(config);\n        } catch (Throwable e) {\n          throw new RuntimeException(e);\n        }\n      }\n    };\n\n    zooThread.setDaemon(true);\n    zooThread.start();\n\n    int cnt = 0;\n    int port = -1;\n    try {\n       port = getPort();\n    } catch(IllegalStateException e) {\n      \n    }\n    while (port < 1) {\n      Thread.sleep(100);\n      try {\n        port = getPort();\n      } catch(IllegalStateException e) {\n        \n      }\n      if (cnt == 500) {\n        throw new RuntimeException(\"Could not get the port for ZooKeeper server\");\n      }\n      cnt++;\n    }\n    log.info(\"start zk server on port:\" + port);\n  }\n\n","sourceOld":"  public void run() throws InterruptedException {\n    log.info(\"STARTING ZK TEST SERVER\");\n    // we don't call super.setUp\n    zooThread = new Thread() {\n      \n      @Override\n      public void run() {\n        ServerConfig config = new ServerConfig() {\n\n          {\n            setClientPort(ZkTestServer.this.clientPort);\n            this.dataDir = zkDir;\n            this.dataLogDir = zkDir;\n            this.tickTime = theTickTime;\n          }\n          \n          public void setClientPort(int clientPort) {\n            if (clientPortAddress != null) {\n              try {\n                this.clientPortAddress = new InetSocketAddress(\n                        InetAddress.getByName(clientPortAddress.getHostName()), clientPort);\n              } catch (UnknownHostException e) {\n                throw new RuntimeException(e);\n              }\n            } else {\n              this.clientPortAddress = new InetSocketAddress(clientPort);\n            }\n          }\n        };\n\n        try {\n          zkServer.runFromConfig(config);\n        } catch (Throwable e) {\n          throw new RuntimeException(e);\n        }\n      }\n    };\n\n    zooThread.setDaemon(true);\n    zooThread.start();\n\n    int cnt = 0;\n    int port = -1;\n    try {\n       port = getPort();\n    } catch(IllegalStateException e) {\n      \n    }\n    while (port < 1) {\n      Thread.sleep(100);\n      try {\n        port = getPort();\n      } catch(IllegalStateException e) {\n        \n      }\n      if (cnt == 500) {\n        throw new RuntimeException(\"Could not get the port for ZooKeeper server\");\n      }\n      cnt++;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c05c6a4f999960536d6b23302feffb8a50227466","date":1353382574,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/cloud/ZkTestServer#run().mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/cloud/ZkTestServer#run().mjava","sourceNew":"  public void run() throws InterruptedException {\n    log.info(\"STARTING ZK TEST SERVER\");\n    // we don't call super.setUp\n    zooThread = new Thread() {\n      \n      @Override\n      public void run() {\n        ServerConfig config = new ServerConfig() {\n\n          {\n            setClientPort(ZkTestServer.this.clientPort);\n            this.dataDir = zkDir;\n            this.dataLogDir = zkDir;\n            this.tickTime = theTickTime;\n          }\n          \n          public void setClientPort(int clientPort) {\n            if (clientPortAddress != null) {\n              try {\n                this.clientPortAddress = new InetSocketAddress(\n                        InetAddress.getByName(clientPortAddress.getHostName()), clientPort);\n              } catch (UnknownHostException e) {\n                throw new RuntimeException(e);\n              }\n            } else {\n              this.clientPortAddress = new InetSocketAddress(clientPort);\n            }\n            System.out.println(\"client port:\" + this.clientPortAddress);\n          }\n        };\n\n        try {\n          zkServer.runFromConfig(config);\n        } catch (Throwable e) {\n          throw new RuntimeException(e);\n        }\n      }\n    };\n\n    zooThread.setDaemon(true);\n    zooThread.start();\n\n    int cnt = 0;\n    int port = -1;\n    try {\n       port = getPort();\n    } catch(IllegalStateException e) {\n      \n    }\n    while (port < 1) {\n      Thread.sleep(100);\n      try {\n        port = getPort();\n      } catch(IllegalStateException e) {\n        \n      }\n      if (cnt == 500) {\n        throw new RuntimeException(\"Could not get the port for ZooKeeper server\");\n      }\n      cnt++;\n    }\n    log.info(\"start zk server on port:\" + port);\n  }\n\n","sourceOld":"  public void run() throws InterruptedException {\n    log.info(\"STARTING ZK TEST SERVER\");\n    // we don't call super.setUp\n    zooThread = new Thread() {\n      \n      @Override\n      public void run() {\n        ServerConfig config = new ServerConfig() {\n\n          {\n            setClientPort(ZkTestServer.this.clientPort);\n            this.dataDir = zkDir;\n            this.dataLogDir = zkDir;\n            this.tickTime = theTickTime;\n          }\n          \n          public void setClientPort(int clientPort) {\n            if (clientPortAddress != null) {\n              try {\n                this.clientPortAddress = new InetSocketAddress(\n                        InetAddress.getByName(clientPortAddress.getHostName()), clientPort);\n              } catch (UnknownHostException e) {\n                throw new RuntimeException(e);\n              }\n            } else {\n              this.clientPortAddress = new InetSocketAddress(clientPort);\n            }\n          }\n        };\n\n        try {\n          zkServer.runFromConfig(config);\n        } catch (Throwable e) {\n          throw new RuntimeException(e);\n        }\n      }\n    };\n\n    zooThread.setDaemon(true);\n    zooThread.start();\n\n    int cnt = 0;\n    int port = -1;\n    try {\n       port = getPort();\n    } catch(IllegalStateException e) {\n      \n    }\n    while (port < 1) {\n      Thread.sleep(100);\n      try {\n        port = getPort();\n      } catch(IllegalStateException e) {\n        \n      }\n      if (cnt == 500) {\n        throw new RuntimeException(\"Could not get the port for ZooKeeper server\");\n      }\n      cnt++;\n    }\n    log.info(\"start zk server on port:\" + port);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"407687e67faf6e1f02a211ca078d8e3eed631027","date":1355157407,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"solr/test-framework/src/java/org/apache/solr/cloud/ZkTestServer#run().mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/cloud/ZkTestServer#run().mjava","sourceNew":"  public void run() throws InterruptedException {\n    log.info(\"STARTING ZK TEST SERVER\");\n    // we don't call super.setUp\n    zooThread = new Thread() {\n      \n      @Override\n      public void run() {\n        ServerConfig config = new ServerConfig() {\n\n          {\n            setClientPort(ZkTestServer.this.clientPort);\n            this.dataDir = zkDir;\n            this.dataLogDir = zkDir;\n            this.tickTime = theTickTime;\n          }\n          \n          public void setClientPort(int clientPort) {\n            if (clientPortAddress != null) {\n              try {\n                this.clientPortAddress = new InetSocketAddress(\n                        InetAddress.getByName(clientPortAddress.getHostName()), clientPort);\n              } catch (UnknownHostException e) {\n                throw new RuntimeException(e);\n              }\n            } else {\n              this.clientPortAddress = new InetSocketAddress(clientPort);\n            }\n            System.out.println(\"client port:\" + this.clientPortAddress);\n          }\n        };\n\n        try {\n          zkServer.runFromConfig(config);\n        } catch (Throwable e) {\n          throw new RuntimeException(e);\n        }\n      }\n    };\n\n    zooThread.setDaemon(true);\n    zooThread.start();\n\n    int cnt = 0;\n    int port = -1;\n    try {\n       port = getPort();\n    } catch(IllegalStateException e) {\n      \n    }\n    while (port < 1) {\n      Thread.sleep(100);\n      try {\n        port = getPort();\n      } catch(IllegalStateException e) {\n        \n      }\n      if (cnt == 500) {\n        throw new RuntimeException(\"Could not get the port for ZooKeeper server\");\n      }\n      cnt++;\n    }\n    log.info(\"start zk server on port:\" + port);\n  }\n\n","sourceOld":"  public void run() throws InterruptedException {\n    log.info(\"STARTING ZK TEST SERVER\");\n    // we don't call super.setUp\n    zooThread = new Thread() {\n      \n      @Override\n      public void run() {\n        ServerConfig config = new ServerConfig() {\n\n          {\n            setClientPort(ZkTestServer.this.clientPort);\n            this.dataDir = zkDir;\n            this.dataLogDir = zkDir;\n            this.tickTime = theTickTime;\n          }\n          \n          public void setClientPort(int clientPort) {\n            if (clientPortAddress != null) {\n              try {\n                this.clientPortAddress = new InetSocketAddress(\n                        InetAddress.getByName(clientPortAddress.getHostName()), clientPort);\n              } catch (UnknownHostException e) {\n                throw new RuntimeException(e);\n              }\n            } else {\n              this.clientPortAddress = new InetSocketAddress(clientPort);\n            }\n          }\n        };\n\n        try {\n          zkServer.runFromConfig(config);\n        } catch (Throwable e) {\n          throw new RuntimeException(e);\n        }\n      }\n    };\n\n    zooThread.setDaemon(true);\n    zooThread.start();\n\n    int cnt = 0;\n    int port = -1;\n    try {\n       port = getPort();\n    } catch(IllegalStateException e) {\n      \n    }\n    while (port < 1) {\n      Thread.sleep(100);\n      try {\n        port = getPort();\n      } catch(IllegalStateException e) {\n        \n      }\n      if (cnt == 500) {\n        throw new RuntimeException(\"Could not get the port for ZooKeeper server\");\n      }\n      cnt++;\n    }\n    log.info(\"start zk server on port:\" + port);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"144b39b0b004b766b7f785a03b6898512514c0c3","date":1411141724,"type":3,"author":"Timothy Potter","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/cloud/ZkTestServer#run().mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/cloud/ZkTestServer#run().mjava","sourceNew":"  public void run() throws InterruptedException {\n    log.info(\"STARTING ZK TEST SERVER\");\n    // we don't call super.setUp\n    zooThread = new Thread() {\n      \n      @Override\n      public void run() {\n        ServerConfig config = new ServerConfig() {\n\n          {\n            setClientPort(ZkTestServer.this.clientPort);\n            this.dataDir = zkDir;\n            this.dataLogDir = zkDir;\n            this.tickTime = theTickTime;\n          }\n          \n          public void setClientPort(int clientPort) {\n            if (clientPortAddress != null) {\n              try {\n                this.clientPortAddress = new InetSocketAddress(\n                        InetAddress.getByName(clientPortAddress.getHostName()), clientPort);\n              } catch (UnknownHostException e) {\n                throw new RuntimeException(e);\n              }\n            } else {\n              this.clientPortAddress = new InetSocketAddress(clientPort);\n            }\n            System.out.println(\"client port:\" + this.clientPortAddress);\n          }\n        };\n\n        try {\n          zkServer.runFromConfig(config);\n        } catch (Throwable e) {\n          throw new RuntimeException(e);\n        }\n      }\n    };\n\n    zooThread.setDaemon(true);\n    zooThread.start();\n\n    int cnt = 0;\n    int port = -1;\n    try {\n       port = getPort();\n    } catch(IllegalStateException e) {\n\n    }\n    while (port < 1) {\n      Thread.sleep(100);\n      try {\n        port = getPort();\n      } catch(IllegalStateException e) {\n\n      }\n      if (cnt == 500) {\n        throw new RuntimeException(\"Could not get the port for ZooKeeper server\");\n      }\n      cnt++;\n    }\n    log.info(\"start zk server on port:\" + port);\n  }\n\n","sourceOld":"  public void run() throws InterruptedException {\n    log.info(\"STARTING ZK TEST SERVER\");\n    // we don't call super.setUp\n    zooThread = new Thread() {\n      \n      @Override\n      public void run() {\n        ServerConfig config = new ServerConfig() {\n\n          {\n            setClientPort(ZkTestServer.this.clientPort);\n            this.dataDir = zkDir;\n            this.dataLogDir = zkDir;\n            this.tickTime = theTickTime;\n          }\n          \n          public void setClientPort(int clientPort) {\n            if (clientPortAddress != null) {\n              try {\n                this.clientPortAddress = new InetSocketAddress(\n                        InetAddress.getByName(clientPortAddress.getHostName()), clientPort);\n              } catch (UnknownHostException e) {\n                throw new RuntimeException(e);\n              }\n            } else {\n              this.clientPortAddress = new InetSocketAddress(clientPort);\n            }\n            System.out.println(\"client port:\" + this.clientPortAddress);\n          }\n        };\n\n        try {\n          zkServer.runFromConfig(config);\n        } catch (Throwable e) {\n          throw new RuntimeException(e);\n        }\n      }\n    };\n\n    zooThread.setDaemon(true);\n    zooThread.start();\n\n    int cnt = 0;\n    int port = -1;\n    try {\n       port = getPort();\n    } catch(IllegalStateException e) {\n      \n    }\n    while (port < 1) {\n      Thread.sleep(100);\n      try {\n        port = getPort();\n      } catch(IllegalStateException e) {\n        \n      }\n      if (cnt == 500) {\n        throw new RuntimeException(\"Could not get the port for ZooKeeper server\");\n      }\n      cnt++;\n    }\n    log.info(\"start zk server on port:\" + port);\n  }\n\n","bugFix":null,"bugIntro":["bb222a3f9d9421d5c95afce73013fbd8de07ea1f"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"abb23fcc2461782ab204e61213240feb77d355aa","date":1422029612,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/cloud/ZkTestServer#run().mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/cloud/ZkTestServer#run().mjava","sourceNew":"  public void run() throws InterruptedException {\n    log.info(\"STARTING ZK TEST SERVER\");\n    // we don't call super.distribSetUp\n    zooThread = new Thread() {\n      \n      @Override\n      public void run() {\n        ServerConfig config = new ServerConfig() {\n\n          {\n            setClientPort(ZkTestServer.this.clientPort);\n            this.dataDir = zkDir;\n            this.dataLogDir = zkDir;\n            this.tickTime = theTickTime;\n          }\n          \n          public void setClientPort(int clientPort) {\n            if (clientPortAddress != null) {\n              try {\n                this.clientPortAddress = new InetSocketAddress(\n                        InetAddress.getByName(clientPortAddress.getHostName()), clientPort);\n              } catch (UnknownHostException e) {\n                throw new RuntimeException(e);\n              }\n            } else {\n              this.clientPortAddress = new InetSocketAddress(clientPort);\n            }\n            System.out.println(\"client port:\" + this.clientPortAddress);\n          }\n        };\n\n        try {\n          zkServer.runFromConfig(config);\n        } catch (Throwable e) {\n          throw new RuntimeException(e);\n        }\n      }\n    };\n\n    zooThread.setDaemon(true);\n    zooThread.start();\n\n    int cnt = 0;\n    int port = -1;\n    try {\n       port = getPort();\n    } catch(IllegalStateException e) {\n\n    }\n    while (port < 1) {\n      Thread.sleep(100);\n      try {\n        port = getPort();\n      } catch(IllegalStateException e) {\n\n      }\n      if (cnt == 500) {\n        throw new RuntimeException(\"Could not get the port for ZooKeeper server\");\n      }\n      cnt++;\n    }\n    log.info(\"start zk server on port:\" + port);\n  }\n\n","sourceOld":"  public void run() throws InterruptedException {\n    log.info(\"STARTING ZK TEST SERVER\");\n    // we don't call super.setUp\n    zooThread = new Thread() {\n      \n      @Override\n      public void run() {\n        ServerConfig config = new ServerConfig() {\n\n          {\n            setClientPort(ZkTestServer.this.clientPort);\n            this.dataDir = zkDir;\n            this.dataLogDir = zkDir;\n            this.tickTime = theTickTime;\n          }\n          \n          public void setClientPort(int clientPort) {\n            if (clientPortAddress != null) {\n              try {\n                this.clientPortAddress = new InetSocketAddress(\n                        InetAddress.getByName(clientPortAddress.getHostName()), clientPort);\n              } catch (UnknownHostException e) {\n                throw new RuntimeException(e);\n              }\n            } else {\n              this.clientPortAddress = new InetSocketAddress(clientPort);\n            }\n            System.out.println(\"client port:\" + this.clientPortAddress);\n          }\n        };\n\n        try {\n          zkServer.runFromConfig(config);\n        } catch (Throwable e) {\n          throw new RuntimeException(e);\n        }\n      }\n    };\n\n    zooThread.setDaemon(true);\n    zooThread.start();\n\n    int cnt = 0;\n    int port = -1;\n    try {\n       port = getPort();\n    } catch(IllegalStateException e) {\n\n    }\n    while (port < 1) {\n      Thread.sleep(100);\n      try {\n        port = getPort();\n      } catch(IllegalStateException e) {\n\n      }\n      if (cnt == 500) {\n        throw new RuntimeException(\"Could not get the port for ZooKeeper server\");\n      }\n      cnt++;\n    }\n    log.info(\"start zk server on port:\" + port);\n  }\n\n","bugFix":null,"bugIntro":["bb222a3f9d9421d5c95afce73013fbd8de07ea1f"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"cb5af3afeddbb803fb785098176e6e177c34261b","date":1428905393,"type":3,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/cloud/ZkTestServer#run().mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/cloud/ZkTestServer#run().mjava","sourceNew":"  public void run() throws InterruptedException {\n    log.info(\"STARTING ZK TEST SERVER\");\n    // we don't call super.distribSetUp\n    zooThread = new Thread() {\n      \n      @Override\n      public void run() {\n        ServerConfig config = new ServerConfig() {\n\n          {\n            setClientPort(ZkTestServer.this.clientPort);\n            this.dataDir = zkDir;\n            this.dataLogDir = zkDir;\n            this.tickTime = theTickTime;\n          }\n          \n          public void setClientPort(int clientPort) {\n            if (clientPortAddress != null) {\n              try {\n                this.clientPortAddress = new InetSocketAddress(\n                        InetAddress.getByName(clientPortAddress.getHostName()), clientPort);\n              } catch (UnknownHostException e) {\n                throw new RuntimeException(e);\n              }\n            } else {\n              this.clientPortAddress = new InetSocketAddress(clientPort);\n            }\n            log.info(\"client port:\" + this.clientPortAddress);\n          }\n        };\n\n        try {\n          zkServer.runFromConfig(config);\n        } catch (Throwable e) {\n          throw new RuntimeException(e);\n        }\n      }\n    };\n\n    zooThread.setDaemon(true);\n    zooThread.start();\n\n    int cnt = 0;\n    int port = -1;\n    try {\n       port = getPort();\n    } catch(IllegalStateException e) {\n\n    }\n    while (port < 1) {\n      Thread.sleep(100);\n      try {\n        port = getPort();\n      } catch(IllegalStateException e) {\n\n      }\n      if (cnt == 500) {\n        throw new RuntimeException(\"Could not get the port for ZooKeeper server\");\n      }\n      cnt++;\n    }\n    log.info(\"start zk server on port:\" + port);\n  }\n\n","sourceOld":"  public void run() throws InterruptedException {\n    log.info(\"STARTING ZK TEST SERVER\");\n    // we don't call super.distribSetUp\n    zooThread = new Thread() {\n      \n      @Override\n      public void run() {\n        ServerConfig config = new ServerConfig() {\n\n          {\n            setClientPort(ZkTestServer.this.clientPort);\n            this.dataDir = zkDir;\n            this.dataLogDir = zkDir;\n            this.tickTime = theTickTime;\n          }\n          \n          public void setClientPort(int clientPort) {\n            if (clientPortAddress != null) {\n              try {\n                this.clientPortAddress = new InetSocketAddress(\n                        InetAddress.getByName(clientPortAddress.getHostName()), clientPort);\n              } catch (UnknownHostException e) {\n                throw new RuntimeException(e);\n              }\n            } else {\n              this.clientPortAddress = new InetSocketAddress(clientPort);\n            }\n            System.out.println(\"client port:\" + this.clientPortAddress);\n          }\n        };\n\n        try {\n          zkServer.runFromConfig(config);\n        } catch (Throwable e) {\n          throw new RuntimeException(e);\n        }\n      }\n    };\n\n    zooThread.setDaemon(true);\n    zooThread.start();\n\n    int cnt = 0;\n    int port = -1;\n    try {\n       port = getPort();\n    } catch(IllegalStateException e) {\n\n    }\n    while (port < 1) {\n      Thread.sleep(100);\n      try {\n        port = getPort();\n      } catch(IllegalStateException e) {\n\n      }\n      if (cnt == 500) {\n        throw new RuntimeException(\"Could not get the port for ZooKeeper server\");\n      }\n      cnt++;\n    }\n    log.info(\"start zk server on port:\" + port);\n  }\n\n","bugFix":null,"bugIntro":["bb222a3f9d9421d5c95afce73013fbd8de07ea1f"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"fb22dc024132e7ee6f20788033de8f593cb6a1f6","date":1521308208,"type":3,"author":"markrmiller","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/cloud/ZkTestServer#run().mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/cloud/ZkTestServer#run().mjava","sourceNew":"  public void run() throws InterruptedException {\n    log.info(\"STARTING ZK TEST SERVER\");\n    // we don't call super.distribSetUp\n    zooThread = new Thread() {\n      \n      @Override\n      public void run() {\n        ServerConfig config = new ServerConfig() {\n\n          {\n            setClientPort(ZkTestServer.this.clientPort);\n            this.dataDir = zkDir;\n            this.dataLogDir = zkDir;\n            this.tickTime = theTickTime;\n            this.maxSessionTimeout = ZkTestServer.this.maxSessionTimeout;\n            this.minSessionTimeout = ZkTestServer.this.minSessionTimeout;\n          }\n          \n          public void setClientPort(int clientPort) {\n            if (clientPortAddress != null) {\n              try {\n                this.clientPortAddress = new InetSocketAddress(\n                        InetAddress.getByName(clientPortAddress.getHostName()), clientPort);\n              } catch (UnknownHostException e) {\n                throw new RuntimeException(e);\n              }\n            } else {\n              this.clientPortAddress = new InetSocketAddress(clientPort);\n            }\n            log.info(\"client port:\" + this.clientPortAddress);\n          }\n        };\n\n        try {\n          zkServer.runFromConfig(config);\n        } catch (Throwable e) {\n          throw new RuntimeException(e);\n        }\n      }\n    };\n\n    zooThread.setDaemon(true);\n    zooThread.start();\n\n    int cnt = 0;\n    int port = -1;\n    try {\n       port = getPort();\n    } catch(IllegalStateException e) {\n\n    }\n    while (port < 1) {\n      Thread.sleep(100);\n      try {\n        port = getPort();\n      } catch(IllegalStateException e) {\n\n      }\n      if (cnt == 500) {\n        throw new RuntimeException(\"Could not get the port for ZooKeeper server\");\n      }\n      cnt++;\n    }\n    log.info(\"start zk server on port:\" + port);\n  }\n\n","sourceOld":"  public void run() throws InterruptedException {\n    log.info(\"STARTING ZK TEST SERVER\");\n    // we don't call super.distribSetUp\n    zooThread = new Thread() {\n      \n      @Override\n      public void run() {\n        ServerConfig config = new ServerConfig() {\n\n          {\n            setClientPort(ZkTestServer.this.clientPort);\n            this.dataDir = zkDir;\n            this.dataLogDir = zkDir;\n            this.tickTime = theTickTime;\n          }\n          \n          public void setClientPort(int clientPort) {\n            if (clientPortAddress != null) {\n              try {\n                this.clientPortAddress = new InetSocketAddress(\n                        InetAddress.getByName(clientPortAddress.getHostName()), clientPort);\n              } catch (UnknownHostException e) {\n                throw new RuntimeException(e);\n              }\n            } else {\n              this.clientPortAddress = new InetSocketAddress(clientPort);\n            }\n            log.info(\"client port:\" + this.clientPortAddress);\n          }\n        };\n\n        try {\n          zkServer.runFromConfig(config);\n        } catch (Throwable e) {\n          throw new RuntimeException(e);\n        }\n      }\n    };\n\n    zooThread.setDaemon(true);\n    zooThread.start();\n\n    int cnt = 0;\n    int port = -1;\n    try {\n       port = getPort();\n    } catch(IllegalStateException e) {\n\n    }\n    while (port < 1) {\n      Thread.sleep(100);\n      try {\n        port = getPort();\n      } catch(IllegalStateException e) {\n\n      }\n      if (cnt == 500) {\n        throw new RuntimeException(\"Could not get the port for ZooKeeper server\");\n      }\n      cnt++;\n    }\n    log.info(\"start zk server on port:\" + port);\n  }\n\n","bugFix":null,"bugIntro":["bb222a3f9d9421d5c95afce73013fbd8de07ea1f"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"203e3fcf513c02ee2c07015f2ce277e26dc60907","date":1521404157,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"solr/test-framework/src/java/org/apache/solr/cloud/ZkTestServer#run().mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/cloud/ZkTestServer#run().mjava","sourceNew":"  public void run() throws InterruptedException {\n    log.info(\"STARTING ZK TEST SERVER\");\n    // we don't call super.distribSetUp\n    zooThread = new Thread() {\n      \n      @Override\n      public void run() {\n        ServerConfig config = new ServerConfig() {\n\n          {\n            setClientPort(ZkTestServer.this.clientPort);\n            this.dataDir = zkDir;\n            this.dataLogDir = zkDir;\n            this.tickTime = theTickTime;\n            this.maxSessionTimeout = ZkTestServer.this.maxSessionTimeout;\n            this.minSessionTimeout = ZkTestServer.this.minSessionTimeout;\n          }\n          \n          public void setClientPort(int clientPort) {\n            if (clientPortAddress != null) {\n              try {\n                this.clientPortAddress = new InetSocketAddress(\n                        InetAddress.getByName(clientPortAddress.getHostName()), clientPort);\n              } catch (UnknownHostException e) {\n                throw new RuntimeException(e);\n              }\n            } else {\n              this.clientPortAddress = new InetSocketAddress(clientPort);\n            }\n            log.info(\"client port:\" + this.clientPortAddress);\n          }\n        };\n\n        try {\n          zkServer.runFromConfig(config);\n        } catch (Throwable e) {\n          throw new RuntimeException(e);\n        }\n      }\n    };\n\n    zooThread.setDaemon(true);\n    zooThread.start();\n\n    int cnt = 0;\n    int port = -1;\n    try {\n       port = getPort();\n    } catch(IllegalStateException e) {\n\n    }\n    while (port < 1) {\n      Thread.sleep(100);\n      try {\n        port = getPort();\n      } catch(IllegalStateException e) {\n\n      }\n      if (cnt == 500) {\n        throw new RuntimeException(\"Could not get the port for ZooKeeper server\");\n      }\n      cnt++;\n    }\n    log.info(\"start zk server on port:\" + port);\n  }\n\n","sourceOld":"  public void run() throws InterruptedException {\n    log.info(\"STARTING ZK TEST SERVER\");\n    // we don't call super.distribSetUp\n    zooThread = new Thread() {\n      \n      @Override\n      public void run() {\n        ServerConfig config = new ServerConfig() {\n\n          {\n            setClientPort(ZkTestServer.this.clientPort);\n            this.dataDir = zkDir;\n            this.dataLogDir = zkDir;\n            this.tickTime = theTickTime;\n          }\n          \n          public void setClientPort(int clientPort) {\n            if (clientPortAddress != null) {\n              try {\n                this.clientPortAddress = new InetSocketAddress(\n                        InetAddress.getByName(clientPortAddress.getHostName()), clientPort);\n              } catch (UnknownHostException e) {\n                throw new RuntimeException(e);\n              }\n            } else {\n              this.clientPortAddress = new InetSocketAddress(clientPort);\n            }\n            log.info(\"client port:\" + this.clientPortAddress);\n          }\n        };\n\n        try {\n          zkServer.runFromConfig(config);\n        } catch (Throwable e) {\n          throw new RuntimeException(e);\n        }\n      }\n    };\n\n    zooThread.setDaemon(true);\n    zooThread.start();\n\n    int cnt = 0;\n    int port = -1;\n    try {\n       port = getPort();\n    } catch(IllegalStateException e) {\n\n    }\n    while (port < 1) {\n      Thread.sleep(100);\n      try {\n        port = getPort();\n      } catch(IllegalStateException e) {\n\n      }\n      if (cnt == 500) {\n        throw new RuntimeException(\"Could not get the port for ZooKeeper server\");\n      }\n      cnt++;\n    }\n    log.info(\"start zk server on port:\" + port);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"bb222a3f9d9421d5c95afce73013fbd8de07ea1f","date":1543514331,"type":3,"author":"markrmiller","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/cloud/ZkTestServer#run().mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/cloud/ZkTestServer#run().mjava","sourceNew":"  public void run() throws InterruptedException, IOException {\n    run(true);\n  }\n\n","sourceOld":"  public void run() throws InterruptedException {\n    log.info(\"STARTING ZK TEST SERVER\");\n    // we don't call super.distribSetUp\n    zooThread = new Thread() {\n      \n      @Override\n      public void run() {\n        ServerConfig config = new ServerConfig() {\n\n          {\n            setClientPort(ZkTestServer.this.clientPort);\n            this.dataDir = zkDir;\n            this.dataLogDir = zkDir;\n            this.tickTime = theTickTime;\n            this.maxSessionTimeout = ZkTestServer.this.maxSessionTimeout;\n            this.minSessionTimeout = ZkTestServer.this.minSessionTimeout;\n          }\n          \n          public void setClientPort(int clientPort) {\n            if (clientPortAddress != null) {\n              try {\n                this.clientPortAddress = new InetSocketAddress(\n                        InetAddress.getByName(clientPortAddress.getHostName()), clientPort);\n              } catch (UnknownHostException e) {\n                throw new RuntimeException(e);\n              }\n            } else {\n              this.clientPortAddress = new InetSocketAddress(clientPort);\n            }\n            log.info(\"client port:\" + this.clientPortAddress);\n          }\n        };\n\n        try {\n          zkServer.runFromConfig(config);\n        } catch (Throwable e) {\n          throw new RuntimeException(e);\n        }\n      }\n    };\n\n    zooThread.setDaemon(true);\n    zooThread.start();\n\n    int cnt = 0;\n    int port = -1;\n    try {\n       port = getPort();\n    } catch(IllegalStateException e) {\n\n    }\n    while (port < 1) {\n      Thread.sleep(100);\n      try {\n        port = getPort();\n      } catch(IllegalStateException e) {\n\n      }\n      if (cnt == 500) {\n        throw new RuntimeException(\"Could not get the port for ZooKeeper server\");\n      }\n      cnt++;\n    }\n    log.info(\"start zk server on port:\" + port);\n  }\n\n","bugFix":["6b834dd353486678973f4157b3ba402ac3a7ca88","144b39b0b004b766b7f785a03b6898512514c0c3","2c007e7c4cf8c55bc2a5884e315123afaaeec87f","66c64e8cfded6a585100e6430238faaf416f3fea","cb5af3afeddbb803fb785098176e6e177c34261b","bed62fe6383040eaff2ec720cdc55bb1462c61da","abb23fcc2461782ab204e61213240feb77d355aa","fb22dc024132e7ee6f20788033de8f593cb6a1f6"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"66c64e8cfded6a585100e6430238faaf416f3fea":["2c30e4c1cee08b3b229a77991882594fe7250b66"],"bb222a3f9d9421d5c95afce73013fbd8de07ea1f":["203e3fcf513c02ee2c07015f2ce277e26dc60907"],"abb23fcc2461782ab204e61213240feb77d355aa":["144b39b0b004b766b7f785a03b6898512514c0c3"],"b05c56a41b733e02a189c48895922b5bd8c7f3d1":["c7869f64c874ebf7f317d22c00baf2b6857797a6","66c64e8cfded6a585100e6430238faaf416f3fea"],"407687e67faf6e1f02a211ca078d8e3eed631027":["66c64e8cfded6a585100e6430238faaf416f3fea","c05c6a4f999960536d6b23302feffb8a50227466"],"203e3fcf513c02ee2c07015f2ce277e26dc60907":["cb5af3afeddbb803fb785098176e6e177c34261b","fb22dc024132e7ee6f20788033de8f593cb6a1f6"],"c05c6a4f999960536d6b23302feffb8a50227466":["66c64e8cfded6a585100e6430238faaf416f3fea"],"c1fe8ee1a5a1ef00a9c4793ec26f17bd90342198":["d6f074e73200c07d54f242d3880a8da5a35ff97b","66c64e8cfded6a585100e6430238faaf416f3fea"],"144b39b0b004b766b7f785a03b6898512514c0c3":["c05c6a4f999960536d6b23302feffb8a50227466"],"fb22dc024132e7ee6f20788033de8f593cb6a1f6":["cb5af3afeddbb803fb785098176e6e177c34261b"],"c7869f64c874ebf7f317d22c00baf2b6857797a6":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","2c30e4c1cee08b3b229a77991882594fe7250b66"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"d6f074e73200c07d54f242d3880a8da5a35ff97b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","2c30e4c1cee08b3b229a77991882594fe7250b66"],"cb5af3afeddbb803fb785098176e6e177c34261b":["abb23fcc2461782ab204e61213240feb77d355aa"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["bb222a3f9d9421d5c95afce73013fbd8de07ea1f"],"2c30e4c1cee08b3b229a77991882594fe7250b66":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"66c64e8cfded6a585100e6430238faaf416f3fea":["b05c56a41b733e02a189c48895922b5bd8c7f3d1","407687e67faf6e1f02a211ca078d8e3eed631027","c05c6a4f999960536d6b23302feffb8a50227466","c1fe8ee1a5a1ef00a9c4793ec26f17bd90342198"],"bb222a3f9d9421d5c95afce73013fbd8de07ea1f":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"abb23fcc2461782ab204e61213240feb77d355aa":["cb5af3afeddbb803fb785098176e6e177c34261b"],"b05c56a41b733e02a189c48895922b5bd8c7f3d1":[],"407687e67faf6e1f02a211ca078d8e3eed631027":[],"203e3fcf513c02ee2c07015f2ce277e26dc60907":["bb222a3f9d9421d5c95afce73013fbd8de07ea1f"],"c05c6a4f999960536d6b23302feffb8a50227466":["407687e67faf6e1f02a211ca078d8e3eed631027","144b39b0b004b766b7f785a03b6898512514c0c3"],"c1fe8ee1a5a1ef00a9c4793ec26f17bd90342198":[],"144b39b0b004b766b7f785a03b6898512514c0c3":["abb23fcc2461782ab204e61213240feb77d355aa"],"c7869f64c874ebf7f317d22c00baf2b6857797a6":["b05c56a41b733e02a189c48895922b5bd8c7f3d1"],"fb22dc024132e7ee6f20788033de8f593cb6a1f6":["203e3fcf513c02ee2c07015f2ce277e26dc60907"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c7869f64c874ebf7f317d22c00baf2b6857797a6","d6f074e73200c07d54f242d3880a8da5a35ff97b","2c30e4c1cee08b3b229a77991882594fe7250b66"],"d6f074e73200c07d54f242d3880a8da5a35ff97b":["c1fe8ee1a5a1ef00a9c4793ec26f17bd90342198"],"cb5af3afeddbb803fb785098176e6e177c34261b":["203e3fcf513c02ee2c07015f2ce277e26dc60907","fb22dc024132e7ee6f20788033de8f593cb6a1f6"],"2c30e4c1cee08b3b229a77991882594fe7250b66":["66c64e8cfded6a585100e6430238faaf416f3fea","c7869f64c874ebf7f317d22c00baf2b6857797a6","d6f074e73200c07d54f242d3880a8da5a35ff97b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["b05c56a41b733e02a189c48895922b5bd8c7f3d1","407687e67faf6e1f02a211ca078d8e3eed631027","c1fe8ee1a5a1ef00a9c4793ec26f17bd90342198","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}