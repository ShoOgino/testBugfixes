{"path":"solr/core/src/java/org/apache/solr/handler/PingRequestHandler#handleEnable(boolean).mjava","commits":[{"id":"ad826eef7abbe5ff5f62d508c87065b81010c4c6","date":1336074973,"type":0,"author":"Chris M. Hostetter","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/PingRequestHandler#handleEnable(boolean).mjava","pathOld":"/dev/null","sourceNew":"  protected void handleEnable(boolean enable) throws SolrException {\n    if (healthcheck == null) {\n      throw new SolrException(SolrException.ErrorCode.SERVICE_UNAVAILABLE, \n        \"No healthcheck file defined.\");\n    }\n    if ( enable ) {\n      try {\n        // write out when the file was created\n        FileUtils.write(healthcheck, \n                        DateField.formatExternal(new Date()), \"UTF-8\");\n      } catch (IOException e) {\n        throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, \n                                \"Unable to write healthcheck flag file\", e);\n      }\n    } else {\n      if (healthcheck.exists() && !healthcheck.delete()){\n        throw new SolrException(SolrException.ErrorCode.NOT_FOUND,\n                                \"Did not successfully delete healthcheck file: \"\n                                +healthcheck.getAbsolutePath());\n      }\n    }\n  }\n  //////////////////////// SolrInfoMBeans methods //////////////////////\n\n","sourceOld":null,"bugFix":null,"bugIntro":["cbc3688252d4a8045d69a164236b2cf87b721f17"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"2106271e380c198349e0f6eac0395bb462913fab","date":1397072894,"type":3,"author":"Steven Rowe","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/PingRequestHandler#handleEnable(boolean).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/PingRequestHandler#handleEnable(boolean).mjava","sourceNew":"  protected void handleEnable(boolean enable) throws SolrException {\n    if (healthcheck == null) {\n      throw new SolrException(SolrException.ErrorCode.SERVICE_UNAVAILABLE, \n        \"No healthcheck file defined.\");\n    }\n    if ( enable ) {\n      try {\n        // write out when the file was created\n        FileUtils.write(healthcheck, \n                        TrieDateField.formatExternal(new Date()), \"UTF-8\");\n      } catch (IOException e) {\n        throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, \n                                \"Unable to write healthcheck flag file\", e);\n      }\n    } else {\n      if (healthcheck.exists() && !healthcheck.delete()){\n        throw new SolrException(SolrException.ErrorCode.NOT_FOUND,\n                                \"Did not successfully delete healthcheck file: \"\n                                +healthcheck.getAbsolutePath());\n      }\n    }\n  }\n  //////////////////////// SolrInfoMBeans methods //////////////////////\n\n","sourceOld":"  protected void handleEnable(boolean enable) throws SolrException {\n    if (healthcheck == null) {\n      throw new SolrException(SolrException.ErrorCode.SERVICE_UNAVAILABLE, \n        \"No healthcheck file defined.\");\n    }\n    if ( enable ) {\n      try {\n        // write out when the file was created\n        FileUtils.write(healthcheck, \n                        DateField.formatExternal(new Date()), \"UTF-8\");\n      } catch (IOException e) {\n        throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, \n                                \"Unable to write healthcheck flag file\", e);\n      }\n    } else {\n      if (healthcheck.exists() && !healthcheck.delete()){\n        throw new SolrException(SolrException.ErrorCode.NOT_FOUND,\n                                \"Did not successfully delete healthcheck file: \"\n                                +healthcheck.getAbsolutePath());\n      }\n    }\n  }\n  //////////////////////// SolrInfoMBeans methods //////////////////////\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"cbc3688252d4a8045d69a164236b2cf87b721f17","date":1409846185,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/PingRequestHandler#handleEnable(boolean).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/PingRequestHandler#handleEnable(boolean).mjava","sourceNew":"  protected void handleEnable(boolean enable) throws SolrException {\n    if (healthcheck == null) {\n      throw new SolrException(SolrException.ErrorCode.SERVICE_UNAVAILABLE, \n        \"No healthcheck file defined.\");\n    }\n    if ( enable ) {\n      try {\n        // write out when the file was created\n        FileUtils.write(healthcheck, \n                        TrieDateField.formatExternal(new Date()), \"UTF-8\");\n      } catch (IOException e) {\n        throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, \n                                \"Unable to write healthcheck flag file\", e);\n      }\n    } else {\n      try {\n        Files.deleteIfExists(healthcheck.toPath());\n      } catch (Throwable cause) {\n        throw new SolrException(SolrException.ErrorCode.NOT_FOUND,\n                                \"Did not successfully delete healthcheck file: \"\n                                +healthcheck.getAbsolutePath(), cause);\n      }\n    }\n  }\n  //////////////////////// SolrInfoMBeans methods //////////////////////\n\n","sourceOld":"  protected void handleEnable(boolean enable) throws SolrException {\n    if (healthcheck == null) {\n      throw new SolrException(SolrException.ErrorCode.SERVICE_UNAVAILABLE, \n        \"No healthcheck file defined.\");\n    }\n    if ( enable ) {\n      try {\n        // write out when the file was created\n        FileUtils.write(healthcheck, \n                        TrieDateField.formatExternal(new Date()), \"UTF-8\");\n      } catch (IOException e) {\n        throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, \n                                \"Unable to write healthcheck flag file\", e);\n      }\n    } else {\n      if (healthcheck.exists() && !healthcheck.delete()){\n        throw new SolrException(SolrException.ErrorCode.NOT_FOUND,\n                                \"Did not successfully delete healthcheck file: \"\n                                +healthcheck.getAbsolutePath());\n      }\n    }\n  }\n  //////////////////////// SolrInfoMBeans methods //////////////////////\n\n","bugFix":["ad826eef7abbe5ff5f62d508c87065b81010c4c6"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0c38a05f7a7b43c2dabbd25f12f9941c64bb2331","date":1437383270,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/PingRequestHandler#handleEnable(boolean).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/PingRequestHandler#handleEnable(boolean).mjava","sourceNew":"  protected void handleEnable(boolean enable) throws SolrException {\n    if (healthcheck == null) {\n      throw new SolrException(SolrException.ErrorCode.SERVICE_UNAVAILABLE, \n        \"No healthcheck file defined.\");\n    }\n    if ( enable ) {\n      try {\n        // write out when the file was created\n        FileUtils.write(healthcheck, \n                        DateFormatUtil.formatExternal(new Date()), \"UTF-8\");\n      } catch (IOException e) {\n        throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, \n                                \"Unable to write healthcheck flag file\", e);\n      }\n    } else {\n      try {\n        Files.deleteIfExists(healthcheck.toPath());\n      } catch (Throwable cause) {\n        throw new SolrException(SolrException.ErrorCode.NOT_FOUND,\n                                \"Did not successfully delete healthcheck file: \"\n                                +healthcheck.getAbsolutePath(), cause);\n      }\n    }\n  }\n  //////////////////////// SolrInfoMBeans methods //////////////////////\n\n","sourceOld":"  protected void handleEnable(boolean enable) throws SolrException {\n    if (healthcheck == null) {\n      throw new SolrException(SolrException.ErrorCode.SERVICE_UNAVAILABLE, \n        \"No healthcheck file defined.\");\n    }\n    if ( enable ) {\n      try {\n        // write out when the file was created\n        FileUtils.write(healthcheck, \n                        TrieDateField.formatExternal(new Date()), \"UTF-8\");\n      } catch (IOException e) {\n        throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, \n                                \"Unable to write healthcheck flag file\", e);\n      }\n    } else {\n      try {\n        Files.deleteIfExists(healthcheck.toPath());\n      } catch (Throwable cause) {\n        throw new SolrException(SolrException.ErrorCode.NOT_FOUND,\n                                \"Did not successfully delete healthcheck file: \"\n                                +healthcheck.getAbsolutePath(), cause);\n      }\n    }\n  }\n  //////////////////////// SolrInfoMBeans methods //////////////////////\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d3f6c7717a0f1decd1668144537943efcc70cd95","date":1459359762,"type":3,"author":"David Smiley","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/PingRequestHandler#handleEnable(boolean).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/PingRequestHandler#handleEnable(boolean).mjava","sourceNew":"  protected void handleEnable(boolean enable) throws SolrException {\n    if (healthcheck == null) {\n      throw new SolrException(SolrException.ErrorCode.SERVICE_UNAVAILABLE, \n        \"No healthcheck file defined.\");\n    }\n    if ( enable ) {\n      try {\n        // write out when the file was created\n        FileUtils.write(healthcheck, Instant.now().toString(), \"UTF-8\");\n      } catch (IOException e) {\n        throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, \n                                \"Unable to write healthcheck flag file\", e);\n      }\n    } else {\n      try {\n        Files.deleteIfExists(healthcheck.toPath());\n      } catch (Throwable cause) {\n        throw new SolrException(SolrException.ErrorCode.NOT_FOUND,\n                                \"Did not successfully delete healthcheck file: \"\n                                +healthcheck.getAbsolutePath(), cause);\n      }\n    }\n  }\n  //////////////////////// SolrInfoMBeans methods //////////////////////\n\n","sourceOld":"  protected void handleEnable(boolean enable) throws SolrException {\n    if (healthcheck == null) {\n      throw new SolrException(SolrException.ErrorCode.SERVICE_UNAVAILABLE, \n        \"No healthcheck file defined.\");\n    }\n    if ( enable ) {\n      try {\n        // write out when the file was created\n        FileUtils.write(healthcheck, \n                        DateFormatUtil.formatExternal(new Date()), \"UTF-8\");\n      } catch (IOException e) {\n        throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, \n                                \"Unable to write healthcheck flag file\", e);\n      }\n    } else {\n      try {\n        Files.deleteIfExists(healthcheck.toPath());\n      } catch (Throwable cause) {\n        throw new SolrException(SolrException.ErrorCode.NOT_FOUND,\n                                \"Did not successfully delete healthcheck file: \"\n                                +healthcheck.getAbsolutePath(), cause);\n      }\n    }\n  }\n  //////////////////////// SolrInfoMBeans methods //////////////////////\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"d3f6c7717a0f1decd1668144537943efcc70cd95":["0c38a05f7a7b43c2dabbd25f12f9941c64bb2331"],"cbc3688252d4a8045d69a164236b2cf87b721f17":["2106271e380c198349e0f6eac0395bb462913fab"],"ad826eef7abbe5ff5f62d508c87065b81010c4c6":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"2106271e380c198349e0f6eac0395bb462913fab":["ad826eef7abbe5ff5f62d508c87065b81010c4c6"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["d3f6c7717a0f1decd1668144537943efcc70cd95"],"0c38a05f7a7b43c2dabbd25f12f9941c64bb2331":["cbc3688252d4a8045d69a164236b2cf87b721f17"]},"commit2Childs":{"d3f6c7717a0f1decd1668144537943efcc70cd95":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cbc3688252d4a8045d69a164236b2cf87b721f17":["0c38a05f7a7b43c2dabbd25f12f9941c64bb2331"],"ad826eef7abbe5ff5f62d508c87065b81010c4c6":["2106271e380c198349e0f6eac0395bb462913fab"],"2106271e380c198349e0f6eac0395bb462913fab":["cbc3688252d4a8045d69a164236b2cf87b721f17"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["ad826eef7abbe5ff5f62d508c87065b81010c4c6"],"0c38a05f7a7b43c2dabbd25f12f9941c64bb2331":["d3f6c7717a0f1decd1668144537943efcc70cd95"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}