{"path":"solr/core/src/java/org/apache/solr/cloud/SolrZkServerProps[SolrZkServer]#getProperties(String).mjava","commits":[{"id":"c903c3d15906a3da96b8c0c2fb704491005fdbdb","date":1453508227,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/SolrZkServerProps[SolrZkServer]#getProperties(String).mjava","pathOld":"solr/src/java/org/apache/solr/cloud/SolrZkServerProps[SolrZkServer]#getProperties(String).mjava","sourceNew":"  /**\n   * Parse a ZooKeeper configuration file\n   * @param path the patch of the configuration file\n   * @throws ConfigException error processing configuration\n   */\n  public static Properties getProperties(String path) throws ConfigException {\n    File configFile = new File(path);\n\n    LOG.info(\"Reading configuration from: \" + configFile);\n\n    try {\n      if (!configFile.exists()) {\n        throw new IllegalArgumentException(configFile.toString()\n            + \" file is missing\");\n      }\n\n      Properties cfg = new Properties();\n      FileInputStream in = new FileInputStream(configFile);\n      try {\n        cfg.load(in);\n      } finally {\n        in.close();\n      }\n\n      return cfg;\n\n    } catch (IOException e) {\n      throw new ConfigException(\"Error processing \" + path, e);\n    } catch (IllegalArgumentException e) {\n      throw new ConfigException(\"Error processing \" + path, e);\n    }\n  }\n\n","sourceOld":"  /**\n   * Parse a ZooKeeper configuration file\n   * @param path the patch of the configuration file\n   * @throws ConfigException error processing configuration\n   */\n  public static Properties getProperties(String path) throws ConfigException {\n    File configFile = new File(path);\n\n    LOG.info(\"Reading configuration from: \" + configFile);\n\n    try {\n      if (!configFile.exists()) {\n        throw new IllegalArgumentException(configFile.toString()\n            + \" file is missing\");\n      }\n\n      Properties cfg = new Properties();\n      FileInputStream in = new FileInputStream(configFile);\n      try {\n        cfg.load(in);\n      } finally {\n        in.close();\n      }\n\n      return cfg;\n\n    } catch (IOException e) {\n      throw new ConfigException(\"Error processing \" + path, e);\n    } catch (IllegalArgumentException e) {\n      throw new ConfigException(\"Error processing \" + path, e);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a258fbb26824fd104ed795e5d9033d2d040049ee","date":1453508252,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/SolrZkServerProps[SolrZkServer]#getProperties(String).mjava","pathOld":"solr/src/java/org/apache/solr/cloud/SolrZkServerProps[SolrZkServer]#getProperties(String).mjava","sourceNew":"  /**\n   * Parse a ZooKeeper configuration file\n   * @param path the patch of the configuration file\n   * @throws ConfigException error processing configuration\n   */\n  public static Properties getProperties(String path) throws ConfigException {\n    File configFile = new File(path);\n\n    LOG.info(\"Reading configuration from: \" + configFile);\n\n    try {\n      if (!configFile.exists()) {\n        throw new IllegalArgumentException(configFile.toString()\n            + \" file is missing\");\n      }\n\n      Properties cfg = new Properties();\n      FileInputStream in = new FileInputStream(configFile);\n      try {\n        cfg.load(in);\n      } finally {\n        in.close();\n      }\n\n      return cfg;\n\n    } catch (IOException e) {\n      throw new ConfigException(\"Error processing \" + path, e);\n    } catch (IllegalArgumentException e) {\n      throw new ConfigException(\"Error processing \" + path, e);\n    }\n  }\n\n","sourceOld":"  /**\n   * Parse a ZooKeeper configuration file\n   * @param path the patch of the configuration file\n   * @throws ConfigException error processing configuration\n   */\n  public static Properties getProperties(String path) throws ConfigException {\n    File configFile = new File(path);\n\n    LOG.info(\"Reading configuration from: \" + configFile);\n\n    try {\n      if (!configFile.exists()) {\n        throw new IllegalArgumentException(configFile.toString()\n            + \" file is missing\");\n      }\n\n      Properties cfg = new Properties();\n      FileInputStream in = new FileInputStream(configFile);\n      try {\n        cfg.load(in);\n      } finally {\n        in.close();\n      }\n\n      return cfg;\n\n    } catch (IOException e) {\n      throw new ConfigException(\"Error processing \" + path, e);\n    } catch (IllegalArgumentException e) {\n      throw new ConfigException(\"Error processing \" + path, e);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/cloud/SolrZkServerProps[SolrZkServer]#getProperties(String).mjava","pathOld":"solr/src/java/org/apache/solr/cloud/SolrZkServerProps[SolrZkServer]#getProperties(String).mjava","sourceNew":"  /**\n   * Parse a ZooKeeper configuration file\n   * @param path the patch of the configuration file\n   * @throws ConfigException error processing configuration\n   */\n  public static Properties getProperties(String path) throws ConfigException {\n    File configFile = new File(path);\n\n    LOG.info(\"Reading configuration from: \" + configFile);\n\n    try {\n      if (!configFile.exists()) {\n        throw new IllegalArgumentException(configFile.toString()\n            + \" file is missing\");\n      }\n\n      Properties cfg = new Properties();\n      FileInputStream in = new FileInputStream(configFile);\n      try {\n        cfg.load(in);\n      } finally {\n        in.close();\n      }\n\n      return cfg;\n\n    } catch (IOException e) {\n      throw new ConfigException(\"Error processing \" + path, e);\n    } catch (IllegalArgumentException e) {\n      throw new ConfigException(\"Error processing \" + path, e);\n    }\n  }\n\n","sourceOld":"  /**\n   * Parse a ZooKeeper configuration file\n   * @param path the patch of the configuration file\n   * @throws ConfigException error processing configuration\n   */\n  public static Properties getProperties(String path) throws ConfigException {\n    File configFile = new File(path);\n\n    LOG.info(\"Reading configuration from: \" + configFile);\n\n    try {\n      if (!configFile.exists()) {\n        throw new IllegalArgumentException(configFile.toString()\n            + \" file is missing\");\n      }\n\n      Properties cfg = new Properties();\n      FileInputStream in = new FileInputStream(configFile);\n      try {\n        cfg.load(in);\n      } finally {\n        in.close();\n      }\n\n      return cfg;\n\n    } catch (IOException e) {\n      throw new ConfigException(\"Error processing \" + path, e);\n    } catch (IllegalArgumentException e) {\n      throw new ConfigException(\"Error processing \" + path, e);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1fd8fc50365ae7bb9c0d47256bc40182559b70d1","date":1373649022,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/SolrZkServerProps[SolrZkServer]#getProperties(String).mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/SolrZkServerProps[SolrZkServer]#getProperties(String).mjava","sourceNew":"  /**\n   * Parse a ZooKeeper configuration file\n   * @param path the patch of the configuration file\n   * @throws ConfigException error processing configuration\n   */\n  public static Properties getProperties(String path) throws ConfigException {\n    File configFile = new File(path);\n\n    LOG.info(\"Reading configuration from: \" + configFile);\n\n    try {\n      if (!configFile.exists()) {\n        throw new IllegalArgumentException(configFile.toString()\n            + \" file is missing\");\n      }\n\n      Properties cfg = new Properties();\n      FileInputStream in = new FileInputStream(configFile);\n      try {\n        cfg.load(new InputStreamReader(in, IOUtils.CHARSET_UTF_8));\n      } finally {\n        in.close();\n      }\n\n      return cfg;\n\n    } catch (IOException e) {\n      throw new ConfigException(\"Error processing \" + path, e);\n    } catch (IllegalArgumentException e) {\n      throw new ConfigException(\"Error processing \" + path, e);\n    }\n  }\n\n","sourceOld":"  /**\n   * Parse a ZooKeeper configuration file\n   * @param path the patch of the configuration file\n   * @throws ConfigException error processing configuration\n   */\n  public static Properties getProperties(String path) throws ConfigException {\n    File configFile = new File(path);\n\n    LOG.info(\"Reading configuration from: \" + configFile);\n\n    try {\n      if (!configFile.exists()) {\n        throw new IllegalArgumentException(configFile.toString()\n            + \" file is missing\");\n      }\n\n      Properties cfg = new Properties();\n      FileInputStream in = new FileInputStream(configFile);\n      try {\n        cfg.load(in);\n      } finally {\n        in.close();\n      }\n\n      return cfg;\n\n    } catch (IOException e) {\n      throw new ConfigException(\"Error processing \" + path, e);\n    } catch (IllegalArgumentException e) {\n      throw new ConfigException(\"Error processing \" + path, e);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"37a0f60745e53927c4c876cfe5b5a58170f0646c","date":1373994005,"type":3,"author":"Han Jiang","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/cloud/SolrZkServerProps[SolrZkServer]#getProperties(String).mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/SolrZkServerProps[SolrZkServer]#getProperties(String).mjava","sourceNew":"  /**\n   * Parse a ZooKeeper configuration file\n   * @param path the patch of the configuration file\n   * @throws ConfigException error processing configuration\n   */\n  public static Properties getProperties(String path) throws ConfigException {\n    File configFile = new File(path);\n\n    LOG.info(\"Reading configuration from: \" + configFile);\n\n    try {\n      if (!configFile.exists()) {\n        throw new IllegalArgumentException(configFile.toString()\n            + \" file is missing\");\n      }\n\n      Properties cfg = new Properties();\n      FileInputStream in = new FileInputStream(configFile);\n      try {\n        cfg.load(new InputStreamReader(in, IOUtils.CHARSET_UTF_8));\n      } finally {\n        in.close();\n      }\n\n      return cfg;\n\n    } catch (IOException e) {\n      throw new ConfigException(\"Error processing \" + path, e);\n    } catch (IllegalArgumentException e) {\n      throw new ConfigException(\"Error processing \" + path, e);\n    }\n  }\n\n","sourceOld":"  /**\n   * Parse a ZooKeeper configuration file\n   * @param path the patch of the configuration file\n   * @throws ConfigException error processing configuration\n   */\n  public static Properties getProperties(String path) throws ConfigException {\n    File configFile = new File(path);\n\n    LOG.info(\"Reading configuration from: \" + configFile);\n\n    try {\n      if (!configFile.exists()) {\n        throw new IllegalArgumentException(configFile.toString()\n            + \" file is missing\");\n      }\n\n      Properties cfg = new Properties();\n      FileInputStream in = new FileInputStream(configFile);\n      try {\n        cfg.load(in);\n      } finally {\n        in.close();\n      }\n\n      return cfg;\n\n    } catch (IOException e) {\n      throw new ConfigException(\"Error processing \" + path, e);\n    } catch (IllegalArgumentException e) {\n      throw new ConfigException(\"Error processing \" + path, e);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7d89d7e4e5101347833eea558851bf4209218619","date":1396265641,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/SolrZkServerProps[SolrZkServer]#getProperties(String).mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/SolrZkServerProps[SolrZkServer]#getProperties(String).mjava","sourceNew":"  /**\n   * Parse a ZooKeeper configuration file\n   * @param path the patch of the configuration file\n   * @throws ConfigException error processing configuration\n   */\n  public static Properties getProperties(String path) throws ConfigException {\n    File configFile = new File(path);\n\n    LOG.info(\"Reading configuration from: \" + configFile);\n\n    try {\n      if (!configFile.exists()) {\n        throw new IllegalArgumentException(configFile.toString()\n            + \" file is missing\");\n      }\n\n      Properties cfg = new Properties();\n      FileInputStream in = new FileInputStream(configFile);\n      try {\n        cfg.load(new InputStreamReader(in, StandardCharsets.UTF_8));\n      } finally {\n        in.close();\n      }\n\n      return cfg;\n\n    } catch (IOException e) {\n      throw new ConfigException(\"Error processing \" + path, e);\n    } catch (IllegalArgumentException e) {\n      throw new ConfigException(\"Error processing \" + path, e);\n    }\n  }\n\n","sourceOld":"  /**\n   * Parse a ZooKeeper configuration file\n   * @param path the patch of the configuration file\n   * @throws ConfigException error processing configuration\n   */\n  public static Properties getProperties(String path) throws ConfigException {\n    File configFile = new File(path);\n\n    LOG.info(\"Reading configuration from: \" + configFile);\n\n    try {\n      if (!configFile.exists()) {\n        throw new IllegalArgumentException(configFile.toString()\n            + \" file is missing\");\n      }\n\n      Properties cfg = new Properties();\n      FileInputStream in = new FileInputStream(configFile);\n      try {\n        cfg.load(new InputStreamReader(in, IOUtils.CHARSET_UTF_8));\n      } finally {\n        in.close();\n      }\n\n      return cfg;\n\n    } catch (IOException e) {\n      throw new ConfigException(\"Error processing \" + path, e);\n    } catch (IllegalArgumentException e) {\n      throw new ConfigException(\"Error processing \" + path, e);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5eb2511ababf862ea11e10761c70ee560cd84510","date":1396607225,"type":3,"author":"Dawid Weiss","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/cloud/SolrZkServerProps[SolrZkServer]#getProperties(String).mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/SolrZkServerProps[SolrZkServer]#getProperties(String).mjava","sourceNew":"  /**\n   * Parse a ZooKeeper configuration file\n   * @param path the patch of the configuration file\n   * @throws ConfigException error processing configuration\n   */\n  public static Properties getProperties(String path) throws ConfigException {\n    File configFile = new File(path);\n\n    LOG.info(\"Reading configuration from: \" + configFile);\n\n    try {\n      if (!configFile.exists()) {\n        throw new IllegalArgumentException(configFile.toString()\n            + \" file is missing\");\n      }\n\n      Properties cfg = new Properties();\n      FileInputStream in = new FileInputStream(configFile);\n      try {\n        cfg.load(new InputStreamReader(in, StandardCharsets.UTF_8));\n      } finally {\n        in.close();\n      }\n\n      return cfg;\n\n    } catch (IOException e) {\n      throw new ConfigException(\"Error processing \" + path, e);\n    } catch (IllegalArgumentException e) {\n      throw new ConfigException(\"Error processing \" + path, e);\n    }\n  }\n\n","sourceOld":"  /**\n   * Parse a ZooKeeper configuration file\n   * @param path the patch of the configuration file\n   * @throws ConfigException error processing configuration\n   */\n  public static Properties getProperties(String path) throws ConfigException {\n    File configFile = new File(path);\n\n    LOG.info(\"Reading configuration from: \" + configFile);\n\n    try {\n      if (!configFile.exists()) {\n        throw new IllegalArgumentException(configFile.toString()\n            + \" file is missing\");\n      }\n\n      Properties cfg = new Properties();\n      FileInputStream in = new FileInputStream(configFile);\n      try {\n        cfg.load(new InputStreamReader(in, IOUtils.CHARSET_UTF_8));\n      } finally {\n        in.close();\n      }\n\n      return cfg;\n\n    } catch (IOException e) {\n      throw new ConfigException(\"Error processing \" + path, e);\n    } catch (IllegalArgumentException e) {\n      throw new ConfigException(\"Error processing \" + path, e);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c6e1dc1bb4254226c8d7151b596cc1be40671751","date":1421876355,"type":3,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/SolrZkServerProps[SolrZkServer]#getProperties(String).mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/SolrZkServerProps[SolrZkServer]#getProperties(String).mjava","sourceNew":"  /**\n   * Parse a ZooKeeper configuration file\n   * @param path the patch of the configuration file\n   * @throws ConfigException error processing configuration\n   */\n  public static Properties getProperties(String path) throws ConfigException {\n    File configFile = new File(path);\n\n    LOG.info(\"Reading configuration from: \" + configFile);\n\n    try {\n      if (!configFile.exists()) {\n        throw new IllegalArgumentException(configFile.toString()\n            + \" file is missing\");\n      }\n\n      Properties cfg = new Properties();\n      FileInputStream in = new FileInputStream(configFile);\n      try {\n        cfg.load(new InputStreamReader(in, StandardCharsets.UTF_8));\n      } finally {\n        in.close();\n      }\n\n      return cfg;\n\n    } catch (IOException | IllegalArgumentException e) {\n      throw new ConfigException(\"Error processing \" + path, e);\n    }\n  }\n\n","sourceOld":"  /**\n   * Parse a ZooKeeper configuration file\n   * @param path the patch of the configuration file\n   * @throws ConfigException error processing configuration\n   */\n  public static Properties getProperties(String path) throws ConfigException {\n    File configFile = new File(path);\n\n    LOG.info(\"Reading configuration from: \" + configFile);\n\n    try {\n      if (!configFile.exists()) {\n        throw new IllegalArgumentException(configFile.toString()\n            + \" file is missing\");\n      }\n\n      Properties cfg = new Properties();\n      FileInputStream in = new FileInputStream(configFile);\n      try {\n        cfg.load(new InputStreamReader(in, StandardCharsets.UTF_8));\n      } finally {\n        in.close();\n      }\n\n      return cfg;\n\n    } catch (IOException e) {\n      throw new ConfigException(\"Error processing \" + path, e);\n    } catch (IllegalArgumentException e) {\n      throw new ConfigException(\"Error processing \" + path, e);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e9c81f7e703d7ccca5bc78beb61253f0a8a22afd","date":1534976797,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/SolrZkServerProps[SolrZkServer]#getProperties(String).mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/SolrZkServerProps[SolrZkServer]#getProperties(String).mjava","sourceNew":"  /**\n   * Parse a ZooKeeper configuration file\n   * @param path the patch of the configuration file\n   * @throws ConfigException error processing configuration\n   */\n  public static Properties getProperties(String path) throws ConfigException {\n    File configFile = new File(path);\n\n    log.info(\"Reading configuration from: \" + configFile);\n\n    try {\n      if (!configFile.exists()) {\n        throw new IllegalArgumentException(configFile.toString()\n            + \" file is missing\");\n      }\n\n      Properties cfg = new Properties();\n      FileInputStream in = new FileInputStream(configFile);\n      try {\n        cfg.load(new InputStreamReader(in, StandardCharsets.UTF_8));\n      } finally {\n        in.close();\n      }\n\n      return cfg;\n\n    } catch (IOException | IllegalArgumentException e) {\n      throw new ConfigException(\"Error processing \" + path, e);\n    }\n  }\n\n","sourceOld":"  /**\n   * Parse a ZooKeeper configuration file\n   * @param path the patch of the configuration file\n   * @throws ConfigException error processing configuration\n   */\n  public static Properties getProperties(String path) throws ConfigException {\n    File configFile = new File(path);\n\n    LOG.info(\"Reading configuration from: \" + configFile);\n\n    try {\n      if (!configFile.exists()) {\n        throw new IllegalArgumentException(configFile.toString()\n            + \" file is missing\");\n      }\n\n      Properties cfg = new Properties();\n      FileInputStream in = new FileInputStream(configFile);\n      try {\n        cfg.load(new InputStreamReader(in, StandardCharsets.UTF_8));\n      } finally {\n        in.close();\n      }\n\n      return cfg;\n\n    } catch (IOException | IllegalArgumentException e) {\n      throw new ConfigException(\"Error processing \" + path, e);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ad4957cde742defe6db19689abdc267c5d948066","date":1587990850,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/SolrZkServerProps[SolrZkServer]#getProperties(String).mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/SolrZkServerProps[SolrZkServer]#getProperties(String).mjava","sourceNew":"  /**\n   * Parse a ZooKeeper configuration file\n   * @param path the patch of the configuration file\n   * @throws ConfigException error processing configuration\n   */\n  public static Properties getProperties(String path) throws ConfigException {\n    File configFile = new File(path);\n\n    log.info(\"Reading configuration from: {}\", configFile);\n\n    try {\n      if (!configFile.exists()) {\n        throw new IllegalArgumentException(configFile.toString()\n            + \" file is missing\");\n      }\n\n      Properties cfg = new Properties();\n      FileInputStream in = new FileInputStream(configFile);\n      try {\n        cfg.load(new InputStreamReader(in, StandardCharsets.UTF_8));\n      } finally {\n        in.close();\n      }\n\n      return cfg;\n\n    } catch (IOException | IllegalArgumentException e) {\n      throw new ConfigException(\"Error processing \" + path, e);\n    }\n  }\n\n","sourceOld":"  /**\n   * Parse a ZooKeeper configuration file\n   * @param path the patch of the configuration file\n   * @throws ConfigException error processing configuration\n   */\n  public static Properties getProperties(String path) throws ConfigException {\n    File configFile = new File(path);\n\n    log.info(\"Reading configuration from: \" + configFile);\n\n    try {\n      if (!configFile.exists()) {\n        throw new IllegalArgumentException(configFile.toString()\n            + \" file is missing\");\n      }\n\n      Properties cfg = new Properties();\n      FileInputStream in = new FileInputStream(configFile);\n      try {\n        cfg.load(new InputStreamReader(in, StandardCharsets.UTF_8));\n      } finally {\n        in.close();\n      }\n\n      return cfg;\n\n    } catch (IOException | IllegalArgumentException e) {\n      throw new ConfigException(\"Error processing \" + path, e);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"5eb2511ababf862ea11e10761c70ee560cd84510":["1fd8fc50365ae7bb9c0d47256bc40182559b70d1","7d89d7e4e5101347833eea558851bf4209218619"],"c6e1dc1bb4254226c8d7151b596cc1be40671751":["7d89d7e4e5101347833eea558851bf4209218619"],"37a0f60745e53927c4c876cfe5b5a58170f0646c":["c26f00b574427b55127e869b935845554afde1fa","1fd8fc50365ae7bb9c0d47256bc40182559b70d1"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"c26f00b574427b55127e869b935845554afde1fa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","c903c3d15906a3da96b8c0c2fb704491005fdbdb"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"ad4957cde742defe6db19689abdc267c5d948066":["e9c81f7e703d7ccca5bc78beb61253f0a8a22afd"],"a258fbb26824fd104ed795e5d9033d2d040049ee":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"7d89d7e4e5101347833eea558851bf4209218619":["1fd8fc50365ae7bb9c0d47256bc40182559b70d1"],"1fd8fc50365ae7bb9c0d47256bc40182559b70d1":["c26f00b574427b55127e869b935845554afde1fa"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["ad4957cde742defe6db19689abdc267c5d948066"],"e9c81f7e703d7ccca5bc78beb61253f0a8a22afd":["c6e1dc1bb4254226c8d7151b596cc1be40671751"]},"commit2Childs":{"5eb2511ababf862ea11e10761c70ee560cd84510":[],"c6e1dc1bb4254226c8d7151b596cc1be40671751":["e9c81f7e703d7ccca5bc78beb61253f0a8a22afd"],"37a0f60745e53927c4c876cfe5b5a58170f0646c":[],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["c26f00b574427b55127e869b935845554afde1fa"],"c26f00b574427b55127e869b935845554afde1fa":["37a0f60745e53927c4c876cfe5b5a58170f0646c","1fd8fc50365ae7bb9c0d47256bc40182559b70d1"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c903c3d15906a3da96b8c0c2fb704491005fdbdb","c26f00b574427b55127e869b935845554afde1fa","a258fbb26824fd104ed795e5d9033d2d040049ee"],"ad4957cde742defe6db19689abdc267c5d948066":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a258fbb26824fd104ed795e5d9033d2d040049ee":[],"7d89d7e4e5101347833eea558851bf4209218619":["5eb2511ababf862ea11e10761c70ee560cd84510","c6e1dc1bb4254226c8d7151b596cc1be40671751"],"1fd8fc50365ae7bb9c0d47256bc40182559b70d1":["5eb2511ababf862ea11e10761c70ee560cd84510","37a0f60745e53927c4c876cfe5b5a58170f0646c","7d89d7e4e5101347833eea558851bf4209218619"],"e9c81f7e703d7ccca5bc78beb61253f0a8a22afd":["ad4957cde742defe6db19689abdc267c5d948066"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["5eb2511ababf862ea11e10761c70ee560cd84510","37a0f60745e53927c4c876cfe5b5a58170f0646c","a258fbb26824fd104ed795e5d9033d2d040049ee","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}