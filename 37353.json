{"path":"solr/core/src/java/org/apache/solr/parser/CharStream#GetSuffix(int).mjava","commits":[{"id":"3cdb67100dc016748799a77218aa409478372d79","date":1353699950,"type":0,"author":"Yonik Seeley","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/parser/CharStream#GetSuffix(int).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Returns an array of characters that make up the suffix of length 'len' for\n   * the currently matched token. This is used to build up the matched string\n   * for use in actions in the case of MORE. A simple and inefficient\n   * implementation of this is as follows :\n   *\n   *   {\n   *      String t = GetImage();\n   *      return t.substring(t.length() - len, t.length()).toCharArray();\n   *   }\n   */\n  char[] GetSuffix(int len);\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"407687e67faf6e1f02a211ca078d8e3eed631027","date":1355157407,"type":0,"author":"Robert Muir","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/parser/CharStream#GetSuffix(int).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Returns an array of characters that make up the suffix of length 'len' for\n   * the currently matched token. This is used to build up the matched string\n   * for use in actions in the case of MORE. A simple and inefficient\n   * implementation of this is as follows :\n   *\n   *   {\n   *      String t = GetImage();\n   *      return t.substring(t.length() - len, t.length()).toCharArray();\n   *   }\n   */\n  char[] GetSuffix(int len);\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5f43184d94158070757ac9bb9d71dc7b72925013","date":1600412010,"type":4,"author":"Dawid Weiss","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/core/src/java/org/apache/solr/parser/CharStream#GetSuffix(int).mjava","sourceNew":null,"sourceOld":"  /**\n   * Returns an array of characters that make up the suffix of length 'len' for\n   * the currently matched token. This is used to build up the matched string\n   * for use in actions in the case of MORE. A simple and inefficient\n   * implementation of this is as follows :\n   *\n   *   {\n   *      String t = GetImage();\n   *      return t.substring(t.length() - len, t.length()).toCharArray();\n   *   }\n   */\n  char[] GetSuffix(int len);\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3cdb67100dc016748799a77218aa409478372d79":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"5f43184d94158070757ac9bb9d71dc7b72925013":["3cdb67100dc016748799a77218aa409478372d79"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"407687e67faf6e1f02a211ca078d8e3eed631027":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","3cdb67100dc016748799a77218aa409478372d79"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["5f43184d94158070757ac9bb9d71dc7b72925013"]},"commit2Childs":{"3cdb67100dc016748799a77218aa409478372d79":["5f43184d94158070757ac9bb9d71dc7b72925013","407687e67faf6e1f02a211ca078d8e3eed631027"],"5f43184d94158070757ac9bb9d71dc7b72925013":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3cdb67100dc016748799a77218aa409478372d79","407687e67faf6e1f02a211ca078d8e3eed631027"],"407687e67faf6e1f02a211ca078d8e3eed631027":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["407687e67faf6e1f02a211ca078d8e3eed631027","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}