{"path":"solr/core/src/java/org/apache/solr/util/hll/HLL#HLL(int,int).mjava","commits":[{"id":"6d8714f9ceaaff94f0968d1c2d037978c3fde569","date":1437042727,"type":0,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/util/hll/HLL#HLL(int,int).mjava","pathOld":"/dev/null","sourceNew":"    /**\n     *  Construct an empty HLL with the given {@code log2m} and {@code regwidth}.<p/>\n     *\n     *  This is equivalent to calling <code>HLL(log2m, regwidth, -1, true, HLLType.EMPTY)</code>.\n     *\n     * @param log2m log-base-2 of the number of registers used in the HyperLogLog\n     *        algorithm. Must be at least 4 and at most 30.\n     * @param regwidth number of bits used per register in the HyperLogLog\n     *        algorithm. Must be at least 1 and at most 8.\n     *\n     * @see #HLL(int, int, int, boolean, HLLType)\n     */\n    public HLL(final int log2m, final int regwidth) {\n        this(log2m, regwidth, -1, true, HLLType.EMPTY);\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3cee04f63da2b1e4185495f96d22b98fa63a4fa8","date":1437045299,"type":3,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/util/hll/HLL#HLL(int,int).mjava","pathOld":"solr/core/src/java/org/apache/solr/util/hll/HLL#HLL(int,int).mjava","sourceNew":"    /**\n     *  Construct an empty HLL with the given {@code log2m} and {@code regwidth}.\n     *\n     *  This is equivalent to calling <code>HLL(log2m, regwidth, -1, true, HLLType.EMPTY)</code>.\n     *\n     * @param log2m log-base-2 of the number of registers used in the HyperLogLog\n     *        algorithm. Must be at least 4 and at most 30.\n     * @param regwidth number of bits used per register in the HyperLogLog\n     *        algorithm. Must be at least 1 and at most 8.\n     *\n     * @see #HLL(int, int, int, boolean, HLLType)\n     */\n    public HLL(final int log2m, final int regwidth) {\n        this(log2m, regwidth, -1, true, HLLType.EMPTY);\n    }\n\n","sourceOld":"    /**\n     *  Construct an empty HLL with the given {@code log2m} and {@code regwidth}.<p/>\n     *\n     *  This is equivalent to calling <code>HLL(log2m, regwidth, -1, true, HLLType.EMPTY)</code>.\n     *\n     * @param log2m log-base-2 of the number of registers used in the HyperLogLog\n     *        algorithm. Must be at least 4 and at most 30.\n     * @param regwidth number of bits used per register in the HyperLogLog\n     *        algorithm. Must be at least 1 and at most 8.\n     *\n     * @see #HLL(int, int, int, boolean, HLLType)\n     */\n    public HLL(final int log2m, final int regwidth) {\n        this(log2m, regwidth, -1, true, HLLType.EMPTY);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3b5ee4c66244bdfcc4796a114519d47701b2c026","date":1437132013,"type":0,"author":"Dawid Weiss","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/util/hll/HLL#HLL(int,int).mjava","pathOld":"/dev/null","sourceNew":"    /**\n     *  Construct an empty HLL with the given {@code log2m} and {@code regwidth}.\n     *\n     *  This is equivalent to calling <code>HLL(log2m, regwidth, -1, true, HLLType.EMPTY)</code>.\n     *\n     * @param log2m log-base-2 of the number of registers used in the HyperLogLog\n     *        algorithm. Must be at least 4 and at most 30.\n     * @param regwidth number of bits used per register in the HyperLogLog\n     *        algorithm. Must be at least 1 and at most 8.\n     *\n     * @see #HLL(int, int, int, boolean, HLLType)\n     */\n    public HLL(final int log2m, final int regwidth) {\n        this(log2m, regwidth, -1, true, HLLType.EMPTY);\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3b5ee4c66244bdfcc4796a114519d47701b2c026":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","3cee04f63da2b1e4185495f96d22b98fa63a4fa8"],"3cee04f63da2b1e4185495f96d22b98fa63a4fa8":["6d8714f9ceaaff94f0968d1c2d037978c3fde569"],"6d8714f9ceaaff94f0968d1c2d037978c3fde569":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3b5ee4c66244bdfcc4796a114519d47701b2c026"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3b5ee4c66244bdfcc4796a114519d47701b2c026","6d8714f9ceaaff94f0968d1c2d037978c3fde569"],"3b5ee4c66244bdfcc4796a114519d47701b2c026":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3cee04f63da2b1e4185495f96d22b98fa63a4fa8":["3b5ee4c66244bdfcc4796a114519d47701b2c026"],"6d8714f9ceaaff94f0968d1c2d037978c3fde569":["3cee04f63da2b1e4185495f96d22b98fa63a4fa8"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}