{"path":"solr/contrib/langid/src/java/org/apache/solr/update/processor/TikaLanguageIdentifierUpdateProcessor#detectLanguage(Reader).mjava","commits":[{"id":"a4da5f9e2a1f2ac76feac0c0796bdce4881cb687","date":1546536444,"type":1,"author":"Jan HÃ¸ydahl","isMerge":false,"pathNew":"solr/contrib/langid/src/java/org/apache/solr/update/processor/TikaLanguageIdentifierUpdateProcessor#detectLanguage(Reader).mjava","pathOld":"solr/contrib/langid/src/java/org/apache/solr/update/processor/TikaLanguageIdentifierUpdateProcessor#detectLanguage(SolrInputDocument).mjava","sourceNew":"  @Override\n  protected List<DetectedLanguage> detectLanguage(Reader solrDocReader) {\n    String content = SolrInputDocumentReader.asString(solrDocReader);\n    List<DetectedLanguage> languages = new ArrayList<>();\n    if (content.length() != 0) {\n      LanguageIdentifier identifier = new LanguageIdentifier(content);\n      // FIXME: Hack - we get the distance from toString and calculate our own certainty score\n      Double distance = Double.parseDouble(tikaSimilarityPattern.matcher(identifier.toString()).replaceFirst(\"$1\"));\n      // This formula gives: 0.02 => 0.8, 0.1 => 0.5 which is a better sweetspot than isReasonablyCertain()\n      Double certainty = 1 - (5 * distance);\n      if (certainty < 0)\n        certainty = 0d;\n      DetectedLanguage language = new DetectedLanguage(identifier.getLanguage(), certainty);\n      languages.add(language);\n      log.debug(\"Language detected as \"+language+\" with a certainty of \"+language.getCertainty()+\" (Tika distance=\"+identifier.toString()+\")\");\n    } else {\n      log.debug(\"No input text to detect language from, returning empty list\");\n    }\n    return languages;\n  }\n\n","sourceOld":"  @Override\n  protected List<DetectedLanguage> detectLanguage(SolrInputDocument doc) {\n    List<DetectedLanguage> languages = new ArrayList<>();\n    String content = concatFields(doc);\n    if (content.length() != 0) {\n      LanguageIdentifier identifier = new LanguageIdentifier(content);\n      // FIXME: Hack - we get the distance from toString and calculate our own certainty score\n      Double distance = Double.parseDouble(tikaSimilarityPattern.matcher(identifier.toString()).replaceFirst(\"$1\"));\n      // This formula gives: 0.02 => 0.8, 0.1 => 0.5 which is a better sweetspot than isReasonablyCertain()\n      Double certainty = 1 - (5 * distance);\n      if (certainty < 0)\n        certainty = 0d;\n      DetectedLanguage language = new DetectedLanguage(identifier.getLanguage(), certainty);\n      languages.add(language);\n      log.debug(\"Language detected as \"+language+\" with a certainty of \"+language.getCertainty()+\" (Tika distance=\"+identifier.toString()+\")\");\n    } else {\n      log.debug(\"No input text to detect language from, returning empty list\");\n    }\n    return languages;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a5df378a6155dcc1f4d4ecdcbd8ea5bc058560e9","date":1574619880,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/contrib/langid/src/java/org/apache/solr/update/processor/TikaLanguageIdentifierUpdateProcessor#detectLanguage(Reader).mjava","pathOld":"solr/contrib/langid/src/java/org/apache/solr/update/processor/TikaLanguageIdentifierUpdateProcessor#detectLanguage(Reader).mjava","sourceNew":"  @SuppressWarnings(\"deprecation\")\n  @Override\n  protected List<DetectedLanguage> detectLanguage(Reader solrDocReader) {\n    String content = SolrInputDocumentReader.asString(solrDocReader);\n    List<DetectedLanguage> languages = new ArrayList<>();\n    if (content.length() != 0) {\n      org.apache.tika.language.LanguageIdentifier identifier = new  org.apache.tika.language.LanguageIdentifier(content);\n      // FIXME: Hack - we get the distance from toString and calculate our own certainty score\n      Double distance = Double.parseDouble(tikaSimilarityPattern.matcher(identifier.toString()).replaceFirst(\"$1\"));\n      // This formula gives: 0.02 => 0.8, 0.1 => 0.5 which is a better sweetspot than isReasonablyCertain()\n      Double certainty = 1 - (5 * distance);\n      if (certainty < 0)\n        certainty = 0d;\n      DetectedLanguage language = new DetectedLanguage(identifier.getLanguage(), certainty);\n      languages.add(language);\n      log.debug(\"Language detected as \"+language+\" with a certainty of \"+language.getCertainty()+\" (Tika distance=\"+identifier.toString()+\")\");\n    } else {\n      log.debug(\"No input text to detect language from, returning empty list\");\n    }\n    return languages;\n  }\n\n","sourceOld":"  @Override\n  protected List<DetectedLanguage> detectLanguage(Reader solrDocReader) {\n    String content = SolrInputDocumentReader.asString(solrDocReader);\n    List<DetectedLanguage> languages = new ArrayList<>();\n    if (content.length() != 0) {\n      LanguageIdentifier identifier = new LanguageIdentifier(content);\n      // FIXME: Hack - we get the distance from toString and calculate our own certainty score\n      Double distance = Double.parseDouble(tikaSimilarityPattern.matcher(identifier.toString()).replaceFirst(\"$1\"));\n      // This formula gives: 0.02 => 0.8, 0.1 => 0.5 which is a better sweetspot than isReasonablyCertain()\n      Double certainty = 1 - (5 * distance);\n      if (certainty < 0)\n        certainty = 0d;\n      DetectedLanguage language = new DetectedLanguage(identifier.getLanguage(), certainty);\n      languages.add(language);\n      log.debug(\"Language detected as \"+language+\" with a certainty of \"+language.getCertainty()+\" (Tika distance=\"+identifier.toString()+\")\");\n    } else {\n      log.debug(\"No input text to detect language from, returning empty list\");\n    }\n    return languages;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bb9c3baacabd473e8ecd6c4948aabacead49b88e","date":1574700980,"type":3,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/contrib/langid/src/java/org/apache/solr/update/processor/TikaLanguageIdentifierUpdateProcessor#detectLanguage(Reader).mjava","pathOld":"solr/contrib/langid/src/java/org/apache/solr/update/processor/TikaLanguageIdentifierUpdateProcessor#detectLanguage(Reader).mjava","sourceNew":"  @Override\n  protected List<DetectedLanguage> detectLanguage(Reader solrDocReader) {\n    String content = SolrInputDocumentReader.asString(solrDocReader);\n    List<DetectedLanguage> languages = new ArrayList<>();\n    if (content.length() != 0) {\n      LanguageIdentifier identifier = new LanguageIdentifier(content);\n      // FIXME: Hack - we get the distance from toString and calculate our own certainty score\n      Double distance = Double.parseDouble(tikaSimilarityPattern.matcher(identifier.toString()).replaceFirst(\"$1\"));\n      // This formula gives: 0.02 => 0.8, 0.1 => 0.5 which is a better sweetspot than isReasonablyCertain()\n      Double certainty = 1 - (5 * distance);\n      if (certainty < 0)\n        certainty = 0d;\n      DetectedLanguage language = new DetectedLanguage(identifier.getLanguage(), certainty);\n      languages.add(language);\n      log.debug(\"Language detected as \"+language+\" with a certainty of \"+language.getCertainty()+\" (Tika distance=\"+identifier.toString()+\")\");\n    } else {\n      log.debug(\"No input text to detect language from, returning empty list\");\n    }\n    return languages;\n  }\n\n","sourceOld":"  @SuppressWarnings(\"deprecation\")\n  @Override\n  protected List<DetectedLanguage> detectLanguage(Reader solrDocReader) {\n    String content = SolrInputDocumentReader.asString(solrDocReader);\n    List<DetectedLanguage> languages = new ArrayList<>();\n    if (content.length() != 0) {\n      org.apache.tika.language.LanguageIdentifier identifier = new  org.apache.tika.language.LanguageIdentifier(content);\n      // FIXME: Hack - we get the distance from toString and calculate our own certainty score\n      Double distance = Double.parseDouble(tikaSimilarityPattern.matcher(identifier.toString()).replaceFirst(\"$1\"));\n      // This formula gives: 0.02 => 0.8, 0.1 => 0.5 which is a better sweetspot than isReasonablyCertain()\n      Double certainty = 1 - (5 * distance);\n      if (certainty < 0)\n        certainty = 0d;\n      DetectedLanguage language = new DetectedLanguage(identifier.getLanguage(), certainty);\n      languages.add(language);\n      log.debug(\"Language detected as \"+language+\" with a certainty of \"+language.getCertainty()+\" (Tika distance=\"+identifier.toString()+\")\");\n    } else {\n      log.debug(\"No input text to detect language from, returning empty list\");\n    }\n    return languages;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a966532d92cf9ba2856f15a8140151bb6b518e4b","date":1588290631,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/contrib/langid/src/java/org/apache/solr/update/processor/TikaLanguageIdentifierUpdateProcessor#detectLanguage(Reader).mjava","pathOld":"solr/contrib/langid/src/java/org/apache/solr/update/processor/TikaLanguageIdentifierUpdateProcessor#detectLanguage(Reader).mjava","sourceNew":"  @Override\n  protected List<DetectedLanguage> detectLanguage(Reader solrDocReader) {\n    String content = SolrInputDocumentReader.asString(solrDocReader);\n    List<DetectedLanguage> languages = new ArrayList<>();\n    if (content.length() != 0) {\n      LanguageIdentifier identifier = new LanguageIdentifier(content);\n      // FIXME: Hack - we get the distance from toString and calculate our own certainty score\n      Double distance = Double.parseDouble(tikaSimilarityPattern.matcher(identifier.toString()).replaceFirst(\"$1\"));\n      // This formula gives: 0.02 => 0.8, 0.1 => 0.5 which is a better sweetspot than isReasonablyCertain()\n      Double certainty = 1 - (5 * distance);\n      if (certainty < 0)\n        certainty = 0d;\n      DetectedLanguage language = new DetectedLanguage(identifier.getLanguage(), certainty);\n      languages.add(language);\n      if (log.isDebugEnabled()) {\n        log.debug(\"Language detected as {} with a certainty of {} (Tika distance={})\"\n            , language, language.getCertainty(), identifier);\n      }\n    } else {\n      log.debug(\"No input text to detect language from, returning empty list\");\n    }\n    return languages;\n  }\n\n","sourceOld":"  @Override\n  protected List<DetectedLanguage> detectLanguage(Reader solrDocReader) {\n    String content = SolrInputDocumentReader.asString(solrDocReader);\n    List<DetectedLanguage> languages = new ArrayList<>();\n    if (content.length() != 0) {\n      LanguageIdentifier identifier = new LanguageIdentifier(content);\n      // FIXME: Hack - we get the distance from toString and calculate our own certainty score\n      Double distance = Double.parseDouble(tikaSimilarityPattern.matcher(identifier.toString()).replaceFirst(\"$1\"));\n      // This formula gives: 0.02 => 0.8, 0.1 => 0.5 which is a better sweetspot than isReasonablyCertain()\n      Double certainty = 1 - (5 * distance);\n      if (certainty < 0)\n        certainty = 0d;\n      DetectedLanguage language = new DetectedLanguage(identifier.getLanguage(), certainty);\n      languages.add(language);\n      log.debug(\"Language detected as \"+language+\" with a certainty of \"+language.getCertainty()+\" (Tika distance=\"+identifier.toString()+\")\");\n    } else {\n      log.debug(\"No input text to detect language from, returning empty list\");\n    }\n    return languages;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a5df378a6155dcc1f4d4ecdcbd8ea5bc058560e9":["a4da5f9e2a1f2ac76feac0c0796bdce4881cb687"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"bb9c3baacabd473e8ecd6c4948aabacead49b88e":["a5df378a6155dcc1f4d4ecdcbd8ea5bc058560e9"],"a4da5f9e2a1f2ac76feac0c0796bdce4881cb687":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a966532d92cf9ba2856f15a8140151bb6b518e4b":["bb9c3baacabd473e8ecd6c4948aabacead49b88e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a966532d92cf9ba2856f15a8140151bb6b518e4b"]},"commit2Childs":{"a5df378a6155dcc1f4d4ecdcbd8ea5bc058560e9":["bb9c3baacabd473e8ecd6c4948aabacead49b88e"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["a4da5f9e2a1f2ac76feac0c0796bdce4881cb687"],"bb9c3baacabd473e8ecd6c4948aabacead49b88e":["a966532d92cf9ba2856f15a8140151bb6b518e4b"],"a4da5f9e2a1f2ac76feac0c0796bdce4881cb687":["a5df378a6155dcc1f4d4ecdcbd8ea5bc058560e9"],"a966532d92cf9ba2856f15a8140151bb6b518e4b":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}