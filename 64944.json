{"path":"lucene/core/src/test/org/apache/lucene/index/TestTermVectorsWriter#testTermVectorCorruption2().mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestTermVectorsWriter#testTermVectorCorruption2().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestTermVectorsWriter#testTermVectorCorruption2().mjava","sourceNew":"  // LUCENE-1168\n  public void testTermVectorCorruption2() throws IOException {\n    Directory dir = newDirectory();\n    for(int iter=0;iter<2;iter++) {\n      IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig(\n          TEST_VERSION_CURRENT, new MockAnalyzer(random))\n          .setMaxBufferedDocs(2).setRAMBufferSizeMB(\n              IndexWriterConfig.DISABLE_AUTO_FLUSH).setMergeScheduler(\n              new SerialMergeScheduler()).setMergePolicy(\n              new LogDocMergePolicy()));\n\n      Document document = new Document();\n\n      FieldType customType = new FieldType();\n      customType.setStored(true);\n\n      Field storedField = newField(\"stored\", \"stored\", customType);\n      document.add(storedField);\n      writer.addDocument(document);\n      writer.addDocument(document);\n\n      document = new Document();\n      document.add(storedField);\n      FieldType customType2 = new FieldType(StringField.TYPE_UNSTORED);\n      customType2.setStoreTermVectors(true);\n      customType2.setStoreTermVectorPositions(true);\n      customType2.setStoreTermVectorOffsets(true);\n      Field termVectorField = newField(\"termVector\", \"termVector\", customType2);\n      document.add(termVectorField);\n      writer.addDocument(document);\n      writer.forceMerge(1);\n      writer.close();\n\n      IndexReader reader = IndexReader.open(dir);\n      assertNull(reader.getTermVectors(0));\n      assertNull(reader.getTermVectors(1));\n      assertNotNull(reader.getTermVectors(2));\n      reader.close();\n    }\n    dir.close();\n  }\n\n","sourceOld":"  // LUCENE-1168\n  public void testTermVectorCorruption2() throws IOException {\n    Directory dir = newDirectory();\n    for(int iter=0;iter<2;iter++) {\n      IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig(\n          TEST_VERSION_CURRENT, new MockAnalyzer(random))\n          .setMaxBufferedDocs(2).setRAMBufferSizeMB(\n              IndexWriterConfig.DISABLE_AUTO_FLUSH).setMergeScheduler(\n              new SerialMergeScheduler()).setMergePolicy(\n              new LogDocMergePolicy()));\n\n      Document document = new Document();\n\n      FieldType customType = new FieldType();\n      customType.setStored(true);\n\n      Field storedField = newField(\"stored\", \"stored\", customType);\n      document.add(storedField);\n      writer.addDocument(document);\n      writer.addDocument(document);\n\n      document = new Document();\n      document.add(storedField);\n      FieldType customType2 = new FieldType(StringField.TYPE_UNSTORED);\n      customType2.setStoreTermVectors(true);\n      customType2.setStoreTermVectorPositions(true);\n      customType2.setStoreTermVectorOffsets(true);\n      Field termVectorField = newField(\"termVector\", \"termVector\", customType2);\n      document.add(termVectorField);\n      writer.addDocument(document);\n      writer.forceMerge(1);\n      writer.close();\n\n      IndexReader reader = IndexReader.open(dir);\n      assertNull(reader.getTermVectors(0));\n      assertNull(reader.getTermVectors(1));\n      assertNotNull(reader.getTermVectors(2));\n      reader.close();\n    }\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"629c38c4ae4e303d0617e05fbfe508140b32f0a3","date":1334500904,"type":3,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestTermVectorsWriter#testTermVectorCorruption2().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestTermVectorsWriter#testTermVectorCorruption2().mjava","sourceNew":"  // LUCENE-1168\n  public void testTermVectorCorruption2() throws IOException {\n    Directory dir = newDirectory();\n    for(int iter=0;iter<2;iter++) {\n      IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig(\n          TEST_VERSION_CURRENT, new MockAnalyzer(random()))\n          .setMaxBufferedDocs(2).setRAMBufferSizeMB(\n              IndexWriterConfig.DISABLE_AUTO_FLUSH).setMergeScheduler(\n              new SerialMergeScheduler()).setMergePolicy(\n              new LogDocMergePolicy()));\n\n      Document document = new Document();\n\n      FieldType customType = new FieldType();\n      customType.setStored(true);\n\n      Field storedField = newField(\"stored\", \"stored\", customType);\n      document.add(storedField);\n      writer.addDocument(document);\n      writer.addDocument(document);\n\n      document = new Document();\n      document.add(storedField);\n      FieldType customType2 = new FieldType(StringField.TYPE_UNSTORED);\n      customType2.setStoreTermVectors(true);\n      customType2.setStoreTermVectorPositions(true);\n      customType2.setStoreTermVectorOffsets(true);\n      Field termVectorField = newField(\"termVector\", \"termVector\", customType2);\n      document.add(termVectorField);\n      writer.addDocument(document);\n      writer.forceMerge(1);\n      writer.close();\n\n      IndexReader reader = IndexReader.open(dir);\n      assertNull(reader.getTermVectors(0));\n      assertNull(reader.getTermVectors(1));\n      assertNotNull(reader.getTermVectors(2));\n      reader.close();\n    }\n    dir.close();\n  }\n\n","sourceOld":"  // LUCENE-1168\n  public void testTermVectorCorruption2() throws IOException {\n    Directory dir = newDirectory();\n    for(int iter=0;iter<2;iter++) {\n      IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig(\n          TEST_VERSION_CURRENT, new MockAnalyzer(random))\n          .setMaxBufferedDocs(2).setRAMBufferSizeMB(\n              IndexWriterConfig.DISABLE_AUTO_FLUSH).setMergeScheduler(\n              new SerialMergeScheduler()).setMergePolicy(\n              new LogDocMergePolicy()));\n\n      Document document = new Document();\n\n      FieldType customType = new FieldType();\n      customType.setStored(true);\n\n      Field storedField = newField(\"stored\", \"stored\", customType);\n      document.add(storedField);\n      writer.addDocument(document);\n      writer.addDocument(document);\n\n      document = new Document();\n      document.add(storedField);\n      FieldType customType2 = new FieldType(StringField.TYPE_UNSTORED);\n      customType2.setStoreTermVectors(true);\n      customType2.setStoreTermVectorPositions(true);\n      customType2.setStoreTermVectorOffsets(true);\n      Field termVectorField = newField(\"termVector\", \"termVector\", customType2);\n      document.add(termVectorField);\n      writer.addDocument(document);\n      writer.forceMerge(1);\n      writer.close();\n\n      IndexReader reader = IndexReader.open(dir);\n      assertNull(reader.getTermVectors(0));\n      assertNull(reader.getTermVectors(1));\n      assertNotNull(reader.getTermVectors(2));\n      reader.close();\n    }\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"e7e8d6f15900ee22ac3cb0a503f15dc952a3580f","date":1338430031,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestTermVectorsWriter#testTermVectorCorruption2().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestTermVectorsWriter#testTermVectorCorruption2().mjava","sourceNew":"  // LUCENE-1168\n  public void testTermVectorCorruption2() throws IOException {\n    Directory dir = newDirectory();\n    for(int iter=0;iter<2;iter++) {\n      IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig(\n          TEST_VERSION_CURRENT, new MockAnalyzer(random()))\n          .setMaxBufferedDocs(2).setRAMBufferSizeMB(\n              IndexWriterConfig.DISABLE_AUTO_FLUSH).setMergeScheduler(\n              new SerialMergeScheduler()).setMergePolicy(\n              new LogDocMergePolicy()));\n\n      Document document = new Document();\n\n      FieldType customType = new FieldType();\n      customType.setStored(true);\n\n      Field storedField = newField(\"stored\", \"stored\", customType);\n      document.add(storedField);\n      writer.addDocument(document);\n      writer.addDocument(document);\n\n      document = new Document();\n      document.add(storedField);\n      FieldType customType2 = new FieldType(StringField.TYPE_UNSTORED);\n      customType2.setStoreTermVectors(true);\n      customType2.setStoreTermVectorPositions(true);\n      customType2.setStoreTermVectorOffsets(true);\n      Field termVectorField = newField(\"termVector\", \"termVector\", customType2);\n      document.add(termVectorField);\n      writer.addDocument(document);\n      writer.forceMerge(1);\n      writer.close();\n\n      IndexReader reader = DirectoryReader.open(dir);\n      assertNull(reader.getTermVectors(0));\n      assertNull(reader.getTermVectors(1));\n      assertNotNull(reader.getTermVectors(2));\n      reader.close();\n    }\n    dir.close();\n  }\n\n","sourceOld":"  // LUCENE-1168\n  public void testTermVectorCorruption2() throws IOException {\n    Directory dir = newDirectory();\n    for(int iter=0;iter<2;iter++) {\n      IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig(\n          TEST_VERSION_CURRENT, new MockAnalyzer(random()))\n          .setMaxBufferedDocs(2).setRAMBufferSizeMB(\n              IndexWriterConfig.DISABLE_AUTO_FLUSH).setMergeScheduler(\n              new SerialMergeScheduler()).setMergePolicy(\n              new LogDocMergePolicy()));\n\n      Document document = new Document();\n\n      FieldType customType = new FieldType();\n      customType.setStored(true);\n\n      Field storedField = newField(\"stored\", \"stored\", customType);\n      document.add(storedField);\n      writer.addDocument(document);\n      writer.addDocument(document);\n\n      document = new Document();\n      document.add(storedField);\n      FieldType customType2 = new FieldType(StringField.TYPE_UNSTORED);\n      customType2.setStoreTermVectors(true);\n      customType2.setStoreTermVectorPositions(true);\n      customType2.setStoreTermVectorOffsets(true);\n      Field termVectorField = newField(\"termVector\", \"termVector\", customType2);\n      document.add(termVectorField);\n      writer.addDocument(document);\n      writer.forceMerge(1);\n      writer.close();\n\n      IndexReader reader = IndexReader.open(dir);\n      assertNull(reader.getTermVectors(0));\n      assertNull(reader.getTermVectors(1));\n      assertNotNull(reader.getTermVectors(2));\n      reader.close();\n    }\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"04f07771a2a7dd3a395700665ed839c3dae2def2","date":1339350139,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestTermVectorsWriter#testTermVectorCorruption2().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestTermVectorsWriter#testTermVectorCorruption2().mjava","sourceNew":"  // LUCENE-1168\n  public void testTermVectorCorruption2() throws IOException {\n    Directory dir = newDirectory();\n    for(int iter=0;iter<2;iter++) {\n      IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig(\n          TEST_VERSION_CURRENT, new MockAnalyzer(random()))\n          .setMaxBufferedDocs(2).setRAMBufferSizeMB(\n              IndexWriterConfig.DISABLE_AUTO_FLUSH).setMergeScheduler(\n              new SerialMergeScheduler()).setMergePolicy(\n              new LogDocMergePolicy()));\n\n      Document document = new Document();\n\n      FieldType customType = new FieldType();\n      customType.setStored(true);\n\n      Field storedField = newField(\"stored\", \"stored\", customType);\n      document.add(storedField);\n      writer.addDocument(document);\n      writer.addDocument(document);\n\n      document = new Document();\n      document.add(storedField);\n      FieldType customType2 = new FieldType(StringField.TYPE_NOT_STORED);\n      customType2.setStoreTermVectors(true);\n      customType2.setStoreTermVectorPositions(true);\n      customType2.setStoreTermVectorOffsets(true);\n      Field termVectorField = newField(\"termVector\", \"termVector\", customType2);\n      document.add(termVectorField);\n      writer.addDocument(document);\n      writer.forceMerge(1);\n      writer.close();\n\n      IndexReader reader = DirectoryReader.open(dir);\n      assertNull(reader.getTermVectors(0));\n      assertNull(reader.getTermVectors(1));\n      assertNotNull(reader.getTermVectors(2));\n      reader.close();\n    }\n    dir.close();\n  }\n\n","sourceOld":"  // LUCENE-1168\n  public void testTermVectorCorruption2() throws IOException {\n    Directory dir = newDirectory();\n    for(int iter=0;iter<2;iter++) {\n      IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig(\n          TEST_VERSION_CURRENT, new MockAnalyzer(random()))\n          .setMaxBufferedDocs(2).setRAMBufferSizeMB(\n              IndexWriterConfig.DISABLE_AUTO_FLUSH).setMergeScheduler(\n              new SerialMergeScheduler()).setMergePolicy(\n              new LogDocMergePolicy()));\n\n      Document document = new Document();\n\n      FieldType customType = new FieldType();\n      customType.setStored(true);\n\n      Field storedField = newField(\"stored\", \"stored\", customType);\n      document.add(storedField);\n      writer.addDocument(document);\n      writer.addDocument(document);\n\n      document = new Document();\n      document.add(storedField);\n      FieldType customType2 = new FieldType(StringField.TYPE_UNSTORED);\n      customType2.setStoreTermVectors(true);\n      customType2.setStoreTermVectorPositions(true);\n      customType2.setStoreTermVectorOffsets(true);\n      Field termVectorField = newField(\"termVector\", \"termVector\", customType2);\n      document.add(termVectorField);\n      writer.addDocument(document);\n      writer.forceMerge(1);\n      writer.close();\n\n      IndexReader reader = DirectoryReader.open(dir);\n      assertNull(reader.getTermVectors(0));\n      assertNull(reader.getTermVectors(1));\n      assertNotNull(reader.getTermVectors(2));\n      reader.close();\n    }\n    dir.close();\n  }\n\n","bugFix":["1509f151d7692d84fae414b2b799ac06ba60fcb4"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ae14298f4eec6d5faee6a149f88ba57d14a6f21a","date":1396971290,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestTermVectorsWriter#testTermVectorCorruption2().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestTermVectorsWriter#testTermVectorCorruption2().mjava","sourceNew":"  // LUCENE-1168\n  public void testTermVectorCorruption2() throws IOException {\n    Directory dir = newDirectory();\n    for(int iter=0;iter<2;iter++) {\n      IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig(\n          TEST_VERSION_CURRENT, new MockAnalyzer(random()))\n          .setMaxBufferedDocs(2).setRAMBufferSizeMB(\n              IndexWriterConfig.DISABLE_AUTO_FLUSH).setMergeScheduler(\n              new SerialMergeScheduler()).setMergePolicy(\n              new LogDocMergePolicy()));\n\n      Document document = new Document();\n\n      FieldType customType = new FieldType();\n      customType.setStored(true);\n\n      Field storedField = newField(\"stored\", \"stored\", customType);\n      document.add(storedField);\n      writer.addDocument(document);\n      writer.addDocument(document);\n\n      document = new Document();\n      document.add(storedField);\n      FieldType customType2 = new FieldType(StringField.TYPE_NOT_STORED);\n      customType2.setStoreTermVectors(true);\n      customType2.setStoreTermVectorPositions(true);\n      customType2.setStoreTermVectorOffsets(true);\n      Field termVectorField = newField(\"termVector\", \"termVector\", customType2);\n      document.add(termVectorField);\n      writer.addDocument(document);\n      writer.forceMerge(1);\n      writer.shutdown();\n\n      IndexReader reader = DirectoryReader.open(dir);\n      assertNull(reader.getTermVectors(0));\n      assertNull(reader.getTermVectors(1));\n      assertNotNull(reader.getTermVectors(2));\n      reader.close();\n    }\n    dir.close();\n  }\n\n","sourceOld":"  // LUCENE-1168\n  public void testTermVectorCorruption2() throws IOException {\n    Directory dir = newDirectory();\n    for(int iter=0;iter<2;iter++) {\n      IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig(\n          TEST_VERSION_CURRENT, new MockAnalyzer(random()))\n          .setMaxBufferedDocs(2).setRAMBufferSizeMB(\n              IndexWriterConfig.DISABLE_AUTO_FLUSH).setMergeScheduler(\n              new SerialMergeScheduler()).setMergePolicy(\n              new LogDocMergePolicy()));\n\n      Document document = new Document();\n\n      FieldType customType = new FieldType();\n      customType.setStored(true);\n\n      Field storedField = newField(\"stored\", \"stored\", customType);\n      document.add(storedField);\n      writer.addDocument(document);\n      writer.addDocument(document);\n\n      document = new Document();\n      document.add(storedField);\n      FieldType customType2 = new FieldType(StringField.TYPE_NOT_STORED);\n      customType2.setStoreTermVectors(true);\n      customType2.setStoreTermVectorPositions(true);\n      customType2.setStoreTermVectorOffsets(true);\n      Field termVectorField = newField(\"termVector\", \"termVector\", customType2);\n      document.add(termVectorField);\n      writer.addDocument(document);\n      writer.forceMerge(1);\n      writer.close();\n\n      IndexReader reader = DirectoryReader.open(dir);\n      assertNull(reader.getTermVectors(0));\n      assertNull(reader.getTermVectors(1));\n      assertNotNull(reader.getTermVectors(2));\n      reader.close();\n    }\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"54a6bea0b991120a99ad0e2f72ae853fd5ecae0e","date":1406737224,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestTermVectorsWriter#testTermVectorCorruption2().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestTermVectorsWriter#testTermVectorCorruption2().mjava","sourceNew":"  // LUCENE-1168\n  public void testTermVectorCorruption2() throws IOException {\n    Directory dir = newDirectory();\n    for(int iter=0;iter<2;iter++) {\n      IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig(new MockAnalyzer(random()))\n          .setMaxBufferedDocs(2)\n          .setRAMBufferSizeMB(IndexWriterConfig.DISABLE_AUTO_FLUSH)\n          .setMergeScheduler(new SerialMergeScheduler())\n          .setMergePolicy(new LogDocMergePolicy()));\n\n      Document document = new Document();\n\n      FieldType customType = new FieldType();\n      customType.setStored(true);\n\n      Field storedField = newField(\"stored\", \"stored\", customType);\n      document.add(storedField);\n      writer.addDocument(document);\n      writer.addDocument(document);\n\n      document = new Document();\n      document.add(storedField);\n      FieldType customType2 = new FieldType(StringField.TYPE_NOT_STORED);\n      customType2.setStoreTermVectors(true);\n      customType2.setStoreTermVectorPositions(true);\n      customType2.setStoreTermVectorOffsets(true);\n      Field termVectorField = newField(\"termVector\", \"termVector\", customType2);\n      document.add(termVectorField);\n      writer.addDocument(document);\n      writer.forceMerge(1);\n      writer.shutdown();\n\n      IndexReader reader = DirectoryReader.open(dir);\n      assertNull(reader.getTermVectors(0));\n      assertNull(reader.getTermVectors(1));\n      assertNotNull(reader.getTermVectors(2));\n      reader.close();\n    }\n    dir.close();\n  }\n\n","sourceOld":"  // LUCENE-1168\n  public void testTermVectorCorruption2() throws IOException {\n    Directory dir = newDirectory();\n    for(int iter=0;iter<2;iter++) {\n      IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig(\n          TEST_VERSION_CURRENT, new MockAnalyzer(random()))\n          .setMaxBufferedDocs(2).setRAMBufferSizeMB(\n              IndexWriterConfig.DISABLE_AUTO_FLUSH).setMergeScheduler(\n              new SerialMergeScheduler()).setMergePolicy(\n              new LogDocMergePolicy()));\n\n      Document document = new Document();\n\n      FieldType customType = new FieldType();\n      customType.setStored(true);\n\n      Field storedField = newField(\"stored\", \"stored\", customType);\n      document.add(storedField);\n      writer.addDocument(document);\n      writer.addDocument(document);\n\n      document = new Document();\n      document.add(storedField);\n      FieldType customType2 = new FieldType(StringField.TYPE_NOT_STORED);\n      customType2.setStoreTermVectors(true);\n      customType2.setStoreTermVectorPositions(true);\n      customType2.setStoreTermVectorOffsets(true);\n      Field termVectorField = newField(\"termVector\", \"termVector\", customType2);\n      document.add(termVectorField);\n      writer.addDocument(document);\n      writer.forceMerge(1);\n      writer.shutdown();\n\n      IndexReader reader = DirectoryReader.open(dir);\n      assertNull(reader.getTermVectors(0));\n      assertNull(reader.getTermVectors(1));\n      assertNotNull(reader.getTermVectors(2));\n      reader.close();\n    }\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d0ef034a4f10871667ae75181537775ddcf8ade4","date":1407610475,"type":3,"author":"Ryan Ernst","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestTermVectorsWriter#testTermVectorCorruption2().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestTermVectorsWriter#testTermVectorCorruption2().mjava","sourceNew":"  // LUCENE-1168\n  public void testTermVectorCorruption2() throws IOException {\n    Directory dir = newDirectory();\n    for(int iter=0;iter<2;iter++) {\n      IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig(new MockAnalyzer(random()))\n          .setMaxBufferedDocs(2)\n          .setRAMBufferSizeMB(IndexWriterConfig.DISABLE_AUTO_FLUSH)\n          .setMergeScheduler(new SerialMergeScheduler())\n          .setMergePolicy(new LogDocMergePolicy()));\n\n      Document document = new Document();\n\n      FieldType customType = new FieldType();\n      customType.setStored(true);\n\n      Field storedField = newField(\"stored\", \"stored\", customType);\n      document.add(storedField);\n      writer.addDocument(document);\n      writer.addDocument(document);\n\n      document = new Document();\n      document.add(storedField);\n      FieldType customType2 = new FieldType(StringField.TYPE_NOT_STORED);\n      customType2.setStoreTermVectors(true);\n      customType2.setStoreTermVectorPositions(true);\n      customType2.setStoreTermVectorOffsets(true);\n      Field termVectorField = newField(\"termVector\", \"termVector\", customType2);\n      document.add(termVectorField);\n      writer.addDocument(document);\n      writer.forceMerge(1);\n      writer.close();\n\n      IndexReader reader = DirectoryReader.open(dir);\n      assertNull(reader.getTermVectors(0));\n      assertNull(reader.getTermVectors(1));\n      assertNotNull(reader.getTermVectors(2));\n      reader.close();\n    }\n    dir.close();\n  }\n\n","sourceOld":"  // LUCENE-1168\n  public void testTermVectorCorruption2() throws IOException {\n    Directory dir = newDirectory();\n    for(int iter=0;iter<2;iter++) {\n      IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig(new MockAnalyzer(random()))\n          .setMaxBufferedDocs(2)\n          .setRAMBufferSizeMB(IndexWriterConfig.DISABLE_AUTO_FLUSH)\n          .setMergeScheduler(new SerialMergeScheduler())\n          .setMergePolicy(new LogDocMergePolicy()));\n\n      Document document = new Document();\n\n      FieldType customType = new FieldType();\n      customType.setStored(true);\n\n      Field storedField = newField(\"stored\", \"stored\", customType);\n      document.add(storedField);\n      writer.addDocument(document);\n      writer.addDocument(document);\n\n      document = new Document();\n      document.add(storedField);\n      FieldType customType2 = new FieldType(StringField.TYPE_NOT_STORED);\n      customType2.setStoreTermVectors(true);\n      customType2.setStoreTermVectorPositions(true);\n      customType2.setStoreTermVectorOffsets(true);\n      Field termVectorField = newField(\"termVector\", \"termVector\", customType2);\n      document.add(termVectorField);\n      writer.addDocument(document);\n      writer.forceMerge(1);\n      writer.shutdown();\n\n      IndexReader reader = DirectoryReader.open(dir);\n      assertNull(reader.getTermVectors(0));\n      assertNull(reader.getTermVectors(1));\n      assertNotNull(reader.getTermVectors(2));\n      reader.close();\n    }\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"04f07771a2a7dd3a395700665ed839c3dae2def2":["e7e8d6f15900ee22ac3cb0a503f15dc952a3580f"],"54a6bea0b991120a99ad0e2f72ae853fd5ecae0e":["ae14298f4eec6d5faee6a149f88ba57d14a6f21a"],"e7e8d6f15900ee22ac3cb0a503f15dc952a3580f":["629c38c4ae4e303d0617e05fbfe508140b32f0a3"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"d0ef034a4f10871667ae75181537775ddcf8ade4":["54a6bea0b991120a99ad0e2f72ae853fd5ecae0e"],"ae14298f4eec6d5faee6a149f88ba57d14a6f21a":["04f07771a2a7dd3a395700665ed839c3dae2def2"],"629c38c4ae4e303d0617e05fbfe508140b32f0a3":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["d0ef034a4f10871667ae75181537775ddcf8ade4"]},"commit2Childs":{"04f07771a2a7dd3a395700665ed839c3dae2def2":["ae14298f4eec6d5faee6a149f88ba57d14a6f21a"],"54a6bea0b991120a99ad0e2f72ae853fd5ecae0e":["d0ef034a4f10871667ae75181537775ddcf8ade4"],"e7e8d6f15900ee22ac3cb0a503f15dc952a3580f":["04f07771a2a7dd3a395700665ed839c3dae2def2"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["629c38c4ae4e303d0617e05fbfe508140b32f0a3"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"d0ef034a4f10871667ae75181537775ddcf8ade4":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"ae14298f4eec6d5faee6a149f88ba57d14a6f21a":["54a6bea0b991120a99ad0e2f72ae853fd5ecae0e"],"629c38c4ae4e303d0617e05fbfe508140b32f0a3":["e7e8d6f15900ee22ac3cb0a503f15dc952a3580f"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}