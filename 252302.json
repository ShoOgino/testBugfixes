{"path":"lucene/test-framework/src/java/org/apache/lucene/geo/EarthDebugger#addLatLine(double,double,double).mjava","commits":[{"id":"e0a671eed493f97734f17409168061773c1c5b52","date":1460066079,"type":0,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/geo/EarthDebugger#addLatLine(double,double,double).mjava","pathOld":"/dev/null","sourceNew":"  /** Draws a line a fixed latitude, spanning the min/max longitude */\n  public void addLatLine(double lat, double minLon, double maxLon) {\n    String name = \"latline\" + nextShape;\n    nextShape++;\n\n    b.append(\"        var \" + name + \" = WE.polygon([\\n\");\n    double lon;\n    int steps = 36;\n    for(lon = minLon;lon<=maxLon;lon += (maxLon-minLon)/steps) {\n      b.append(\"          [\" + lat + \", \" + lon + \"],\\n\");\n    }\n    b.append(\"          [\" + lat + \", \" + maxLon + \"],\\n\");\n    lon -= (maxLon-minLon)/steps;\n    for(;lon>=minLon;lon -= (maxLon-minLon)/steps) {\n      b.append(\"          [\" + lat + \", \" + lon + \"],\\n\");\n    }\n    b.append(\"        ], {color: \\\"#ff0000\\\", fillColor: \\\"#ffffff\\\", opacity: 1, fillOpacity: 0.0001});\\n\");\n    b.append(\"        \" + name + \".addTo(earth);\\n\");\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"09f15823cf5eb6e807005579e875e117d8598f95","date":1460066385,"type":0,"author":"Karl Wright","isMerge":true,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/geo/EarthDebugger#addLatLine(double,double,double).mjava","pathOld":"/dev/null","sourceNew":"  /** Draws a line a fixed latitude, spanning the min/max longitude */\n  public void addLatLine(double lat, double minLon, double maxLon) {\n    String name = \"latline\" + nextShape;\n    nextShape++;\n\n    b.append(\"        var \" + name + \" = WE.polygon([\\n\");\n    double lon;\n    int steps = 36;\n    for(lon = minLon;lon<=maxLon;lon += (maxLon-minLon)/steps) {\n      b.append(\"          [\" + lat + \", \" + lon + \"],\\n\");\n    }\n    b.append(\"          [\" + lat + \", \" + maxLon + \"],\\n\");\n    lon -= (maxLon-minLon)/steps;\n    for(;lon>=minLon;lon -= (maxLon-minLon)/steps) {\n      b.append(\"          [\" + lat + \", \" + lon + \"],\\n\");\n    }\n    b.append(\"        ], {color: \\\"#ff0000\\\", fillColor: \\\"#ffffff\\\", opacity: 1, fillOpacity: 0.0001});\\n\");\n    b.append(\"        \" + name + \".addTo(earth);\\n\");\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9f2c03aad245c45d7cc59be89febd081df502f24","date":1460455808,"type":3,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/geo/EarthDebugger#addLatLine(double,double,double).mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/geo/EarthDebugger#addLatLine(double,double,double).mjava","sourceNew":"  /** Draws a line a fixed latitude, spanning the min/max longitude */\n  public void addLatLine(double lat, double minLon, double maxLon) {\n    String name = \"latline\" + nextShape;\n    nextShape++;\n\n    b.append(\"        var \" + name + \" = WE.polygon([\\n\");\n    double lon;\n    int steps = getStepCount(lat, minLon, lat, maxLon);\n    for(lon = minLon;lon<=maxLon;lon += (maxLon-minLon)/steps) {\n      b.append(\"          [\" + lat + \", \" + lon + \"],\\n\");\n    }\n    b.append(\"          [\" + lat + \", \" + maxLon + \"],\\n\");\n    lon -= (maxLon-minLon)/steps;\n    for(;lon>=minLon;lon -= (maxLon-minLon)/steps) {\n      b.append(\"          [\" + lat + \", \" + lon + \"],\\n\");\n    }\n    b.append(\"        ], {color: \\\"#ff0000\\\", fillColor: \\\"#ffffff\\\", opacity: 1, fillOpacity: 0.0001});\\n\");\n    b.append(\"        \" + name + \".addTo(earth);\\n\");\n  }\n\n","sourceOld":"  /** Draws a line a fixed latitude, spanning the min/max longitude */\n  public void addLatLine(double lat, double minLon, double maxLon) {\n    String name = \"latline\" + nextShape;\n    nextShape++;\n\n    b.append(\"        var \" + name + \" = WE.polygon([\\n\");\n    double lon;\n    int steps = 36;\n    for(lon = minLon;lon<=maxLon;lon += (maxLon-minLon)/steps) {\n      b.append(\"          [\" + lat + \", \" + lon + \"],\\n\");\n    }\n    b.append(\"          [\" + lat + \", \" + maxLon + \"],\\n\");\n    lon -= (maxLon-minLon)/steps;\n    for(;lon>=minLon;lon -= (maxLon-minLon)/steps) {\n      b.append(\"          [\" + lat + \", \" + lon + \"],\\n\");\n    }\n    b.append(\"        ], {color: \\\"#ff0000\\\", fillColor: \\\"#ffffff\\\", opacity: 1, fillOpacity: 0.0001});\\n\");\n    b.append(\"        \" + name + \".addTo(earth);\\n\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2ffe681f212e5073c69955b4ad22946794c84940","date":1560182863,"type":3,"author":"Koen De Groote","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/geo/EarthDebugger#addLatLine(double,double,double).mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/geo/EarthDebugger#addLatLine(double,double,double).mjava","sourceNew":"  /** Draws a line a fixed latitude, spanning the min/max longitude */\n  public void addLatLine(double lat, double minLon, double maxLon) {\n    String name = \"latline\" + nextShape;\n    nextShape++;\n\n    b.append(\"        var \").append(name).append(\" = WE.polygon([\\n\");\n    double lon;\n    int steps = getStepCount(lat, minLon, lat, maxLon);\n    for(lon = minLon;lon<=maxLon;lon += (maxLon-minLon)/steps) {\n      b.append(\"          [\").append(lat).append(\", \").append(lon).append(\"],\\n\");\n    }\n    b.append(\"          [\").append(lat).append(\", \").append(maxLon).append(\"],\\n\");\n    lon -= (maxLon-minLon)/steps;\n    for(;lon>=minLon;lon -= (maxLon-minLon)/steps) {\n      b.append(\"          [\").append(lat).append(\", \").append(lon).append(\"],\\n\");\n    }\n    b.append(\"        ], {color: \\\"#ff0000\\\", fillColor: \\\"#ffffff\\\", opacity: 1, fillOpacity: 0.0001});\\n\");\n    b.append(\"        \").append(name).append(\".addTo(earth);\\n\");\n  }\n\n","sourceOld":"  /** Draws a line a fixed latitude, spanning the min/max longitude */\n  public void addLatLine(double lat, double minLon, double maxLon) {\n    String name = \"latline\" + nextShape;\n    nextShape++;\n\n    b.append(\"        var \" + name + \" = WE.polygon([\\n\");\n    double lon;\n    int steps = getStepCount(lat, minLon, lat, maxLon);\n    for(lon = minLon;lon<=maxLon;lon += (maxLon-minLon)/steps) {\n      b.append(\"          [\" + lat + \", \" + lon + \"],\\n\");\n    }\n    b.append(\"          [\" + lat + \", \" + maxLon + \"],\\n\");\n    lon -= (maxLon-minLon)/steps;\n    for(;lon>=minLon;lon -= (maxLon-minLon)/steps) {\n      b.append(\"          [\" + lat + \", \" + lon + \"],\\n\");\n    }\n    b.append(\"        ], {color: \\\"#ff0000\\\", fillColor: \\\"#ffffff\\\", opacity: 1, fillOpacity: 0.0001});\\n\");\n    b.append(\"        \" + name + \".addTo(earth);\\n\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"2ffe681f212e5073c69955b4ad22946794c84940":["9f2c03aad245c45d7cc59be89febd081df502f24"],"9f2c03aad245c45d7cc59be89febd081df502f24":["09f15823cf5eb6e807005579e875e117d8598f95"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"e0a671eed493f97734f17409168061773c1c5b52":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["2ffe681f212e5073c69955b4ad22946794c84940"],"09f15823cf5eb6e807005579e875e117d8598f95":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","e0a671eed493f97734f17409168061773c1c5b52"]},"commit2Childs":{"2ffe681f212e5073c69955b4ad22946794c84940":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"9f2c03aad245c45d7cc59be89febd081df502f24":["2ffe681f212e5073c69955b4ad22946794c84940"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["e0a671eed493f97734f17409168061773c1c5b52","09f15823cf5eb6e807005579e875e117d8598f95"],"e0a671eed493f97734f17409168061773c1c5b52":["09f15823cf5eb6e807005579e875e117d8598f95"],"09f15823cf5eb6e807005579e875e117d8598f95":["9f2c03aad245c45d7cc59be89febd081df502f24"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}