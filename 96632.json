{"path":"src/java/org/apache/lucene/index/SegmentTermPositions#skipPositions(int).mjava","commits":[{"id":"b77550c47735d804ddb8767848f5af9b02b88c84","date":1162245631,"type":0,"author":"Yonik Seeley","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/SegmentTermPositions#skipPositions(int).mjava","pathOld":"/dev/null","sourceNew":"  private void skipPositions(int n) throws IOException {\n    for (int f = n; f > 0; f--)         // skip unread positions\n      proxStream.readVInt();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8522ae207a56c6db28ca06fe6cc33e70911c3600","date":1173935743,"type":3,"author":"Michael Busch","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/SegmentTermPositions#skipPositions(int).mjava","pathOld":"src/java/org/apache/lucene/index/SegmentTermPositions#skipPositions(int).mjava","sourceNew":"  private void skipPositions(int n) throws IOException {\n    for (int f = n; f > 0; f--) {        // skip unread positions\n      readDeltaPosition();\n      skipPayload();\n    }      \n  }\n\n","sourceOld":"  private void skipPositions(int n) throws IOException {\n    for (int f = n; f > 0; f--)         // skip unread positions\n      proxStream.readVInt();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"902ba79f4590a41c663c447756d2e5041cbbdda9","date":1217956662,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/SegmentTermPositions#skipPositions(int).mjava","pathOld":"src/java/org/apache/lucene/index/SegmentTermPositions#skipPositions(int).mjava","sourceNew":"  private void skipPositions(int n) throws IOException {\n    assert !currentFieldOmitTf;\n    for (int f = n; f > 0; f--) {        // skip unread positions\n      readDeltaPosition();\n      skipPayload();\n    }      \n  }\n\n","sourceOld":"  private void skipPositions(int n) throws IOException {\n    for (int f = n; f > 0; f--) {        // skip unread positions\n      readDeltaPosition();\n      skipPayload();\n    }      \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"066b6ff5a08e35c3b6880e7c3ddda79526acdab1","date":1237569961,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/SegmentTermPositions#skipPositions(int).mjava","pathOld":"src/java/org/apache/lucene/index/SegmentTermPositions#skipPositions(int).mjava","sourceNew":"  private void skipPositions(int n) throws IOException {\n    assert !currentFieldOmitTermFreqAndPositions;\n    for (int f = n; f > 0; f--) {        // skip unread positions\n      readDeltaPosition();\n      skipPayload();\n    }      \n  }\n\n","sourceOld":"  private void skipPositions(int n) throws IOException {\n    assert !currentFieldOmitTf;\n    for (int f = n; f > 0; f--) {        // skip unread positions\n      readDeltaPosition();\n      skipPayload();\n    }      \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/SegmentTermPositions#skipPositions(int).mjava","pathOld":"src/java/org/apache/lucene/index/SegmentTermPositions#skipPositions(int).mjava","sourceNew":"  private void skipPositions(int n) throws IOException {\n    assert !currentFieldOmitTermFreqAndPositions;\n    for (int f = n; f > 0; f--) {        // skip unread positions\n      readDeltaPosition();\n      skipPayload();\n    }      \n  }\n\n","sourceOld":"  private void skipPositions(int n) throws IOException {\n    assert !currentFieldOmitTermFreqAndPositions;\n    for (int f = n; f > 0; f--) {        // skip unread positions\n      readDeltaPosition();\n      skipPayload();\n    }      \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"8522ae207a56c6db28ca06fe6cc33e70911c3600":["b77550c47735d804ddb8767848f5af9b02b88c84"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"066b6ff5a08e35c3b6880e7c3ddda79526acdab1":["902ba79f4590a41c663c447756d2e5041cbbdda9"],"902ba79f4590a41c663c447756d2e5041cbbdda9":["8522ae207a56c6db28ca06fe6cc33e70911c3600"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["066b6ff5a08e35c3b6880e7c3ddda79526acdab1"],"b77550c47735d804ddb8767848f5af9b02b88c84":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"8522ae207a56c6db28ca06fe6cc33e70911c3600":["902ba79f4590a41c663c447756d2e5041cbbdda9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b77550c47735d804ddb8767848f5af9b02b88c84"],"066b6ff5a08e35c3b6880e7c3ddda79526acdab1":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"902ba79f4590a41c663c447756d2e5041cbbdda9":["066b6ff5a08e35c3b6880e7c3ddda79526acdab1"],"b77550c47735d804ddb8767848f5af9b02b88c84":["8522ae207a56c6db28ca06fe6cc33e70911c3600"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}