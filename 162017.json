{"path":"lucene/test-framework/src/java/org/apache/lucene/analysis/MockFixedLengthPayloadFilter#MockFixedLengthPayloadFilter(Random,TokenStream,int).mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/analysis/MockFixedLengthPayloadFilter#MockFixedLengthPayloadFilter(Random,TokenStream,int).mjava","pathOld":"lucene/src/test-framework/java/org/apache/lucene/analysis/MockFixedLengthPayloadFilter#MockFixedLengthPayloadFilter(Random,TokenStream,int).mjava","sourceNew":"  public MockFixedLengthPayloadFilter(Random random, TokenStream in, int length) {\n    super(in);\n    this.random = random;\n    this.bytes = new byte[length];\n    this.payload = new Payload(bytes);\n  }\n\n","sourceOld":"  public MockFixedLengthPayloadFilter(Random random, TokenStream in, int length) {\n    super(in);\n    this.random = random;\n    this.bytes = new byte[length];\n    this.payload = new Payload(bytes);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5a92b21feea3b1b4d7ad5a06439333c4f757318f","date":1333977928,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/analysis/MockFixedLengthPayloadFilter#MockFixedLengthPayloadFilter(Random,TokenStream,int).mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/analysis/MockFixedLengthPayloadFilter#MockFixedLengthPayloadFilter(Random,TokenStream,int).mjava","sourceNew":"  public MockFixedLengthPayloadFilter(Random random, TokenStream in, int length) {\n    super(in);\n    if (length < 0) {\n      throw new IllegalArgumentException(\"length must be >= 0\");\n    }\n    this.random = random;\n    this.bytes = new byte[length];\n    this.payload = new Payload(bytes);\n  }\n\n","sourceOld":"  public MockFixedLengthPayloadFilter(Random random, TokenStream in, int length) {\n    super(in);\n    this.random = random;\n    this.bytes = new byte[length];\n    this.payload = new Payload(bytes);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ad9e3deabce40d9849c1b75ef706bfa79f4f0d1e","date":1334174049,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/analysis/MockFixedLengthPayloadFilter#MockFixedLengthPayloadFilter(Random,TokenStream,int).mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/analysis/MockFixedLengthPayloadFilter#MockFixedLengthPayloadFilter(Random,TokenStream,int).mjava","sourceNew":"  public MockFixedLengthPayloadFilter(Random random, TokenStream in, int length) {\n    super(in);\n    if (length < 0) {\n      throw new IllegalArgumentException(\"length must be >= 0\");\n    }\n    this.random = random;\n    this.bytes = new byte[length];\n    this.payload = new Payload(bytes);\n  }\n\n","sourceOld":"  public MockFixedLengthPayloadFilter(Random random, TokenStream in, int length) {\n    super(in);\n    this.random = random;\n    this.bytes = new byte[length];\n    this.payload = new Payload(bytes);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"76fa9933adb0556e752e8af9734c4d0ae14622ff","date":1339178321,"type":3,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/analysis/MockFixedLengthPayloadFilter#MockFixedLengthPayloadFilter(Random,TokenStream,int).mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/analysis/MockFixedLengthPayloadFilter#MockFixedLengthPayloadFilter(Random,TokenStream,int).mjava","sourceNew":"  public MockFixedLengthPayloadFilter(Random random, TokenStream in, int length) {\n    super(in);\n    if (length < 0) {\n      throw new IllegalArgumentException(\"length must be >= 0\");\n    }\n    this.random = random;\n    this.bytes = new byte[length];\n    this.payload = new BytesRef(bytes);\n  }\n\n","sourceOld":"  public MockFixedLengthPayloadFilter(Random random, TokenStream in, int length) {\n    super(in);\n    if (length < 0) {\n      throw new IllegalArgumentException(\"length must be >= 0\");\n    }\n    this.random = random;\n    this.bytes = new byte[length];\n    this.payload = new Payload(bytes);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"ad9e3deabce40d9849c1b75ef706bfa79f4f0d1e":["3a119bbc8703c10faa329ec201c654b3a35a1e3e","5a92b21feea3b1b4d7ad5a06439333c4f757318f"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"76fa9933adb0556e752e8af9734c4d0ae14622ff":["ad9e3deabce40d9849c1b75ef706bfa79f4f0d1e"],"5a92b21feea3b1b4d7ad5a06439333c4f757318f":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["76fa9933adb0556e752e8af9734c4d0ae14622ff"]},"commit2Childs":{"ad9e3deabce40d9849c1b75ef706bfa79f4f0d1e":["76fa9933adb0556e752e8af9734c4d0ae14622ff"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["ad9e3deabce40d9849c1b75ef706bfa79f4f0d1e","5a92b21feea3b1b4d7ad5a06439333c4f757318f"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"76fa9933adb0556e752e8af9734c4d0ae14622ff":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"5a92b21feea3b1b4d7ad5a06439333c4f757318f":["ad9e3deabce40d9849c1b75ef706bfa79f4f0d1e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}