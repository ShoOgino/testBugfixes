{"path":"solr/core/src/test/org/apache/solr/cloud/CollectionsAPIDistributedZkTest#testErrorHandling().mjava","commits":[{"id":"fe999fc2d95d6fea71f960bf9556858387ba21f5","date":1363294860,"type":0,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/CollectionsAPIDistributedZkTest#testErrorHandling().mjava","pathOld":"/dev/null","sourceNew":"  private void testErrorHandling() throws Exception {\n    final String baseUrl = getBaseUrl((HttpSolrServer) clients.get(0));\n    \n    \n    // try a bad action\n    ModifiableSolrParams params = new ModifiableSolrParams();\n    params.set(\"action\", \"BADACTION\");\n    String collectionName = \"badactioncollection\";\n    params.set(\"name\", collectionName);\n    QueryRequest request = new QueryRequest(params);\n    request.setPath(\"/admin/collections\");\n    boolean gotExp = false;\n    NamedList<Object> resp = null;\n    try {\n      resp = createNewSolrServer(\"\", baseUrl).request(request);\n    } catch (SolrException e) {\n      gotExp = true;\n    }\n    assertTrue(gotExp);\n    \n    \n    // leave out required param name\n    params = new ModifiableSolrParams();\n    params.set(\"action\", CollectionAction.CREATE.toString());\n    collectionName = \"collection\";\n    // No Name\n    // params.set(\"name\", collectionName);\n    request = new QueryRequest(params);\n    request.setPath(\"/admin/collections\");\n    gotExp = false;\n    resp = null;\n    try {\n      resp = createNewSolrServer(\"\", baseUrl).request(request);\n    } catch (SolrException e) {\n      gotExp = true;\n    }\n    assertTrue(gotExp);\n    \n    // Too many replicas\n    params = new ModifiableSolrParams();\n    params.set(\"action\", CollectionAction.CREATE.toString());\n    collectionName = \"collection\";\n    params.set(\"name\", collectionName);\n    params.set(\"numShards\", 2);\n    params.set(OverseerCollectionProcessor.REPLICATION_FACTOR, 10);\n    request = new QueryRequest(params);\n    request.setPath(\"/admin/collections\");\n    gotExp = false;\n    resp = null;\n    try {\n      resp = createNewSolrServer(\"\", baseUrl).request(request);\n    } catch (SolrException e) {\n      gotExp = true;\n    }\n    assertTrue(gotExp);\n    \n    // Fail on one node\n    \n    // first we make a core with the core name the collections api\n    // will try and use - this will cause our mock fail\n    Create createCmd = new Create();\n    createCmd.setCoreName(\"halfcollection_shard1_replica1\");\n    createCmd.setCollection(\"halfcollectionblocker\");\n    String dataDir = SolrTestCaseJ4.dataDir.getAbsolutePath() + File.separator\n        + System.currentTimeMillis() + \"halfcollection\" + \"_3n\";\n    createCmd.setDataDir(dataDir);\n    createCmd.setNumShards(1);\n    createNewSolrServer(\"\", baseUrl).request(createCmd);\n    \n    createCmd = new Create();\n    createCmd.setCoreName(\"halfcollection_shard1_replica1\");\n    createCmd.setCollection(\"halfcollectionblocker2\");\n    dataDir = SolrTestCaseJ4.dataDir.getAbsolutePath() + File.separator\n        + System.currentTimeMillis() + \"halfcollection\" + \"_3n\";\n    createCmd.setDataDir(dataDir);\n    createCmd.setNumShards(1);\n    createNewSolrServer(\"\", getBaseUrl((HttpSolrServer) clients.get(1))).request(createCmd);\n    \n    params = new ModifiableSolrParams();\n    params.set(\"action\", CollectionAction.CREATE.toString());\n    collectionName = \"halfcollection\";\n    params.set(\"name\", collectionName);\n    params.set(\"numShards\", 2);\n    params.set(\"wt\", \"xml\");\n    \n    String nn1 = ((SolrDispatchFilter) jettys.get(0).getDispatchFilter().getFilter()).getCores().getZkController().getNodeName();\n    String nn2 =  ((SolrDispatchFilter) jettys.get(1).getDispatchFilter().getFilter()).getCores().getZkController().getNodeName();\n    \n    params.set(OverseerCollectionProcessor.CREATE_NODE_SET, nn1 + \",\" + nn2);\n    request = new QueryRequest(params);\n    request.setPath(\"/admin/collections\");\n    gotExp = false;\n    resp = createNewSolrServer(\"\", baseUrl).request(request);\n    \n    SimpleOrderedMap success = (SimpleOrderedMap) resp.get(\"success\");\n    SimpleOrderedMap failure = (SimpleOrderedMap) resp.get(\"failure\");\n\n    String val1 = success.getVal(0).toString();\n    String val2 = failure.getVal(0).toString();\n    assertTrue(val1.contains(\"SolrException\") || val2.contains(\"SolrException\"));\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["e31e6ce5848e5040d4c9ecbb25bc6ccf5d0894ac","efefd19367eebaa6d911ba8f441a30b7b7564e26","6784d0cc613dc1ee97030eaaa5e0754edc22d164"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"630c3d71b7859a9f17dd985bb82bba51bccee575","date":1363359782,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/CollectionsAPIDistributedZkTest#testErrorHandling().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/CollectionsAPIDistributedZkTest#testErrorHandling().mjava","sourceNew":"  private void testErrorHandling() throws Exception {\n    final String baseUrl = getBaseUrl((HttpSolrServer) clients.get(0));\n    \n    \n    // try a bad action\n    ModifiableSolrParams params = new ModifiableSolrParams();\n    params.set(\"action\", \"BADACTION\");\n    String collectionName = \"badactioncollection\";\n    params.set(\"name\", collectionName);\n    QueryRequest request = new QueryRequest(params);\n    request.setPath(\"/admin/collections\");\n    boolean gotExp = false;\n    NamedList<Object> resp = null;\n    try {\n      resp = createNewSolrServer(\"\", baseUrl).request(request);\n    } catch (SolrException e) {\n      gotExp = true;\n    }\n    assertTrue(gotExp);\n    \n    \n    // leave out required param name\n    params = new ModifiableSolrParams();\n    params.set(\"action\", CollectionAction.CREATE.toString());\n    collectionName = \"collection\";\n    // No Name\n    // params.set(\"name\", collectionName);\n    request = new QueryRequest(params);\n    request.setPath(\"/admin/collections\");\n    gotExp = false;\n    resp = null;\n    try {\n      resp = createNewSolrServer(\"\", baseUrl).request(request);\n    } catch (SolrException e) {\n      gotExp = true;\n    }\n    assertTrue(gotExp);\n    \n    // Too many replicas\n    params = new ModifiableSolrParams();\n    params.set(\"action\", CollectionAction.CREATE.toString());\n    collectionName = \"collection\";\n    params.set(\"name\", collectionName);\n    params.set(\"numShards\", 2);\n    params.set(OverseerCollectionProcessor.REPLICATION_FACTOR, 10);\n    request = new QueryRequest(params);\n    request.setPath(\"/admin/collections\");\n    gotExp = false;\n    resp = null;\n    try {\n      resp = createNewSolrServer(\"\", baseUrl).request(request);\n    } catch (SolrException e) {\n      gotExp = true;\n    }\n    assertTrue(gotExp);\n    \n    // No numShards should fail\n    params = new ModifiableSolrParams();\n    params.set(\"action\", CollectionAction.CREATE.toString());\n    collectionName = \"acollection\";\n    params.set(\"name\", collectionName);\n    params.set(OverseerCollectionProcessor.REPLICATION_FACTOR, 10);\n    request = new QueryRequest(params);\n    request.setPath(\"/admin/collections\");\n    gotExp = false;\n    resp = null;\n    try {\n      resp = createNewSolrServer(\"\", baseUrl).request(request);\n    } catch (SolrException e) {\n      gotExp = true;\n    }\n    assertTrue(gotExp);\n    \n    // 0 numShards should fail\n    params = new ModifiableSolrParams();\n    params.set(\"action\", CollectionAction.CREATE.toString());\n    collectionName = \"acollection\";\n    params.set(\"name\", collectionName);\n    params.set(OverseerCollectionProcessor.REPLICATION_FACTOR, 10);\n    params.set(\"numShards\", 0);\n    request = new QueryRequest(params);\n    request.setPath(\"/admin/collections\");\n    gotExp = false;\n    resp = null;\n    try {\n      resp = createNewSolrServer(\"\", baseUrl).request(request);\n    } catch (SolrException e) {\n      gotExp = true;\n    }\n    assertTrue(gotExp);\n    \n    // Fail on one node\n    \n    // first we make a core with the core name the collections api\n    // will try and use - this will cause our mock fail\n    Create createCmd = new Create();\n    createCmd.setCoreName(\"halfcollection_shard1_replica1\");\n    createCmd.setCollection(\"halfcollectionblocker\");\n    String dataDir = SolrTestCaseJ4.dataDir.getAbsolutePath() + File.separator\n        + System.currentTimeMillis() + \"halfcollection\" + \"_3n\";\n    createCmd.setDataDir(dataDir);\n    createCmd.setNumShards(1);\n    createNewSolrServer(\"\", baseUrl).request(createCmd);\n    \n    createCmd = new Create();\n    createCmd.setCoreName(\"halfcollection_shard1_replica1\");\n    createCmd.setCollection(\"halfcollectionblocker2\");\n    dataDir = SolrTestCaseJ4.dataDir.getAbsolutePath() + File.separator\n        + System.currentTimeMillis() + \"halfcollection\" + \"_3n\";\n    createCmd.setDataDir(dataDir);\n    createCmd.setNumShards(1);\n    createNewSolrServer(\"\", getBaseUrl((HttpSolrServer) clients.get(1))).request(createCmd);\n    \n    params = new ModifiableSolrParams();\n    params.set(\"action\", CollectionAction.CREATE.toString());\n    collectionName = \"halfcollection\";\n    params.set(\"name\", collectionName);\n    params.set(\"numShards\", 2);\n    params.set(\"wt\", \"xml\");\n    \n    String nn1 = ((SolrDispatchFilter) jettys.get(0).getDispatchFilter().getFilter()).getCores().getZkController().getNodeName();\n    String nn2 =  ((SolrDispatchFilter) jettys.get(1).getDispatchFilter().getFilter()).getCores().getZkController().getNodeName();\n    \n    params.set(OverseerCollectionProcessor.CREATE_NODE_SET, nn1 + \",\" + nn2);\n    request = new QueryRequest(params);\n    request.setPath(\"/admin/collections\");\n    gotExp = false;\n    resp = createNewSolrServer(\"\", baseUrl).request(request);\n    \n    SimpleOrderedMap success = (SimpleOrderedMap) resp.get(\"success\");\n    SimpleOrderedMap failure = (SimpleOrderedMap) resp.get(\"failure\");\n\n    String val1 = success.getVal(0).toString();\n    String val2 = failure.getVal(0).toString();\n    assertTrue(val1.contains(\"SolrException\") || val2.contains(\"SolrException\"));\n  }\n\n","sourceOld":"  private void testErrorHandling() throws Exception {\n    final String baseUrl = getBaseUrl((HttpSolrServer) clients.get(0));\n    \n    \n    // try a bad action\n    ModifiableSolrParams params = new ModifiableSolrParams();\n    params.set(\"action\", \"BADACTION\");\n    String collectionName = \"badactioncollection\";\n    params.set(\"name\", collectionName);\n    QueryRequest request = new QueryRequest(params);\n    request.setPath(\"/admin/collections\");\n    boolean gotExp = false;\n    NamedList<Object> resp = null;\n    try {\n      resp = createNewSolrServer(\"\", baseUrl).request(request);\n    } catch (SolrException e) {\n      gotExp = true;\n    }\n    assertTrue(gotExp);\n    \n    \n    // leave out required param name\n    params = new ModifiableSolrParams();\n    params.set(\"action\", CollectionAction.CREATE.toString());\n    collectionName = \"collection\";\n    // No Name\n    // params.set(\"name\", collectionName);\n    request = new QueryRequest(params);\n    request.setPath(\"/admin/collections\");\n    gotExp = false;\n    resp = null;\n    try {\n      resp = createNewSolrServer(\"\", baseUrl).request(request);\n    } catch (SolrException e) {\n      gotExp = true;\n    }\n    assertTrue(gotExp);\n    \n    // Too many replicas\n    params = new ModifiableSolrParams();\n    params.set(\"action\", CollectionAction.CREATE.toString());\n    collectionName = \"collection\";\n    params.set(\"name\", collectionName);\n    params.set(\"numShards\", 2);\n    params.set(OverseerCollectionProcessor.REPLICATION_FACTOR, 10);\n    request = new QueryRequest(params);\n    request.setPath(\"/admin/collections\");\n    gotExp = false;\n    resp = null;\n    try {\n      resp = createNewSolrServer(\"\", baseUrl).request(request);\n    } catch (SolrException e) {\n      gotExp = true;\n    }\n    assertTrue(gotExp);\n    \n    // Fail on one node\n    \n    // first we make a core with the core name the collections api\n    // will try and use - this will cause our mock fail\n    Create createCmd = new Create();\n    createCmd.setCoreName(\"halfcollection_shard1_replica1\");\n    createCmd.setCollection(\"halfcollectionblocker\");\n    String dataDir = SolrTestCaseJ4.dataDir.getAbsolutePath() + File.separator\n        + System.currentTimeMillis() + \"halfcollection\" + \"_3n\";\n    createCmd.setDataDir(dataDir);\n    createCmd.setNumShards(1);\n    createNewSolrServer(\"\", baseUrl).request(createCmd);\n    \n    createCmd = new Create();\n    createCmd.setCoreName(\"halfcollection_shard1_replica1\");\n    createCmd.setCollection(\"halfcollectionblocker2\");\n    dataDir = SolrTestCaseJ4.dataDir.getAbsolutePath() + File.separator\n        + System.currentTimeMillis() + \"halfcollection\" + \"_3n\";\n    createCmd.setDataDir(dataDir);\n    createCmd.setNumShards(1);\n    createNewSolrServer(\"\", getBaseUrl((HttpSolrServer) clients.get(1))).request(createCmd);\n    \n    params = new ModifiableSolrParams();\n    params.set(\"action\", CollectionAction.CREATE.toString());\n    collectionName = \"halfcollection\";\n    params.set(\"name\", collectionName);\n    params.set(\"numShards\", 2);\n    params.set(\"wt\", \"xml\");\n    \n    String nn1 = ((SolrDispatchFilter) jettys.get(0).getDispatchFilter().getFilter()).getCores().getZkController().getNodeName();\n    String nn2 =  ((SolrDispatchFilter) jettys.get(1).getDispatchFilter().getFilter()).getCores().getZkController().getNodeName();\n    \n    params.set(OverseerCollectionProcessor.CREATE_NODE_SET, nn1 + \",\" + nn2);\n    request = new QueryRequest(params);\n    request.setPath(\"/admin/collections\");\n    gotExp = false;\n    resp = createNewSolrServer(\"\", baseUrl).request(request);\n    \n    SimpleOrderedMap success = (SimpleOrderedMap) resp.get(\"success\");\n    SimpleOrderedMap failure = (SimpleOrderedMap) resp.get(\"failure\");\n\n    String val1 = success.getVal(0).toString();\n    String val2 = failure.getVal(0).toString();\n    assertTrue(val1.contains(\"SolrException\") || val2.contains(\"SolrException\"));\n  }\n\n","bugFix":null,"bugIntro":["6784d0cc613dc1ee97030eaaa5e0754edc22d164"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"6e756785b6f25f3b8f7ee57c7e210c6b67fbfbbf","date":1363562282,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/CollectionsAPIDistributedZkTest#testErrorHandling().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/CollectionsAPIDistributedZkTest#testErrorHandling().mjava","sourceNew":"  private void testErrorHandling() throws Exception {\n    final String baseUrl = getBaseUrl((HttpSolrServer) clients.get(0));\n    \n    \n    // try a bad action\n    ModifiableSolrParams params = new ModifiableSolrParams();\n    params.set(\"action\", \"BADACTION\");\n    String collectionName = \"badactioncollection\";\n    params.set(\"name\", collectionName);\n    params.set(\"numShards\", 2);\n    QueryRequest request = new QueryRequest(params);\n    request.setPath(\"/admin/collections\");\n    boolean gotExp = false;\n    NamedList<Object> resp = null;\n    try {\n      resp = createNewSolrServer(\"\", baseUrl).request(request);\n    } catch (SolrException e) {\n      gotExp = true;\n    }\n    assertTrue(gotExp);\n    \n    \n    // leave out required param name\n    params = new ModifiableSolrParams();\n    params.set(\"action\", CollectionAction.CREATE.toString());\n    params.set(\"numShards\", 2);\n    collectionName = \"collection\";\n    // No Name\n    // params.set(\"name\", collectionName);\n    request = new QueryRequest(params);\n    request.setPath(\"/admin/collections\");\n    gotExp = false;\n    resp = null;\n    try {\n      resp = createNewSolrServer(\"\", baseUrl).request(request);\n    } catch (SolrException e) {\n      gotExp = true;\n    }\n    assertTrue(gotExp);\n    \n    // Too many replicas\n    params = new ModifiableSolrParams();\n    params.set(\"action\", CollectionAction.CREATE.toString());\n    collectionName = \"collection\";\n    params.set(\"name\", collectionName);\n    params.set(\"numShards\", 2);\n    params.set(OverseerCollectionProcessor.REPLICATION_FACTOR, 10);\n    request = new QueryRequest(params);\n    request.setPath(\"/admin/collections\");\n    gotExp = false;\n    resp = null;\n    try {\n      resp = createNewSolrServer(\"\", baseUrl).request(request);\n    } catch (SolrException e) {\n      gotExp = true;\n    }\n    assertTrue(gotExp);\n    \n    // No numShards should fail\n    params = new ModifiableSolrParams();\n    params.set(\"action\", CollectionAction.CREATE.toString());\n    collectionName = \"acollection\";\n    params.set(\"name\", collectionName);\n    params.set(OverseerCollectionProcessor.REPLICATION_FACTOR, 10);\n    request = new QueryRequest(params);\n    request.setPath(\"/admin/collections\");\n    gotExp = false;\n    resp = null;\n    try {\n      resp = createNewSolrServer(\"\", baseUrl).request(request);\n    } catch (SolrException e) {\n      gotExp = true;\n    }\n    assertTrue(gotExp);\n    \n    // 0 numShards should fail\n    params = new ModifiableSolrParams();\n    params.set(\"action\", CollectionAction.CREATE.toString());\n    collectionName = \"acollection\";\n    params.set(\"name\", collectionName);\n    params.set(OverseerCollectionProcessor.REPLICATION_FACTOR, 10);\n    params.set(\"numShards\", 0);\n    request = new QueryRequest(params);\n    request.setPath(\"/admin/collections\");\n    gotExp = false;\n    resp = null;\n    try {\n      resp = createNewSolrServer(\"\", baseUrl).request(request);\n    } catch (SolrException e) {\n      gotExp = true;\n    }\n    assertTrue(gotExp);\n    \n    // Fail on one node\n    \n    // first we make a core with the core name the collections api\n    // will try and use - this will cause our mock fail\n    Create createCmd = new Create();\n    createCmd.setCoreName(\"halfcollection_shard1_replica1\");\n    createCmd.setCollection(\"halfcollectionblocker\");\n    String dataDir = SolrTestCaseJ4.dataDir.getAbsolutePath() + File.separator\n        + System.currentTimeMillis() + \"halfcollection\" + \"_3n\";\n    createCmd.setDataDir(dataDir);\n    createCmd.setNumShards(1);\n    createNewSolrServer(\"\", baseUrl).request(createCmd);\n    \n    createCmd = new Create();\n    createCmd.setCoreName(\"halfcollection_shard1_replica1\");\n    createCmd.setCollection(\"halfcollectionblocker2\");\n    dataDir = SolrTestCaseJ4.dataDir.getAbsolutePath() + File.separator\n        + System.currentTimeMillis() + \"halfcollection\" + \"_3n\";\n    createCmd.setDataDir(dataDir);\n    createCmd.setNumShards(1);\n    createNewSolrServer(\"\", getBaseUrl((HttpSolrServer) clients.get(1))).request(createCmd);\n    \n    params = new ModifiableSolrParams();\n    params.set(\"action\", CollectionAction.CREATE.toString());\n    collectionName = \"halfcollection\";\n    params.set(\"name\", collectionName);\n    params.set(\"numShards\", 2);\n    params.set(\"wt\", \"xml\");\n    \n    String nn1 = ((SolrDispatchFilter) jettys.get(0).getDispatchFilter().getFilter()).getCores().getZkController().getNodeName();\n    String nn2 =  ((SolrDispatchFilter) jettys.get(1).getDispatchFilter().getFilter()).getCores().getZkController().getNodeName();\n    \n    params.set(OverseerCollectionProcessor.CREATE_NODE_SET, nn1 + \",\" + nn2);\n    request = new QueryRequest(params);\n    request.setPath(\"/admin/collections\");\n    gotExp = false;\n    resp = createNewSolrServer(\"\", baseUrl).request(request);\n    \n    SimpleOrderedMap success = (SimpleOrderedMap) resp.get(\"success\");\n    SimpleOrderedMap failure = (SimpleOrderedMap) resp.get(\"failure\");\n\n    String val1 = success.getVal(0).toString();\n    String val2 = failure.getVal(0).toString();\n    assertTrue(val1.contains(\"SolrException\") || val2.contains(\"SolrException\"));\n  }\n\n","sourceOld":"  private void testErrorHandling() throws Exception {\n    final String baseUrl = getBaseUrl((HttpSolrServer) clients.get(0));\n    \n    \n    // try a bad action\n    ModifiableSolrParams params = new ModifiableSolrParams();\n    params.set(\"action\", \"BADACTION\");\n    String collectionName = \"badactioncollection\";\n    params.set(\"name\", collectionName);\n    QueryRequest request = new QueryRequest(params);\n    request.setPath(\"/admin/collections\");\n    boolean gotExp = false;\n    NamedList<Object> resp = null;\n    try {\n      resp = createNewSolrServer(\"\", baseUrl).request(request);\n    } catch (SolrException e) {\n      gotExp = true;\n    }\n    assertTrue(gotExp);\n    \n    \n    // leave out required param name\n    params = new ModifiableSolrParams();\n    params.set(\"action\", CollectionAction.CREATE.toString());\n    collectionName = \"collection\";\n    // No Name\n    // params.set(\"name\", collectionName);\n    request = new QueryRequest(params);\n    request.setPath(\"/admin/collections\");\n    gotExp = false;\n    resp = null;\n    try {\n      resp = createNewSolrServer(\"\", baseUrl).request(request);\n    } catch (SolrException e) {\n      gotExp = true;\n    }\n    assertTrue(gotExp);\n    \n    // Too many replicas\n    params = new ModifiableSolrParams();\n    params.set(\"action\", CollectionAction.CREATE.toString());\n    collectionName = \"collection\";\n    params.set(\"name\", collectionName);\n    params.set(\"numShards\", 2);\n    params.set(OverseerCollectionProcessor.REPLICATION_FACTOR, 10);\n    request = new QueryRequest(params);\n    request.setPath(\"/admin/collections\");\n    gotExp = false;\n    resp = null;\n    try {\n      resp = createNewSolrServer(\"\", baseUrl).request(request);\n    } catch (SolrException e) {\n      gotExp = true;\n    }\n    assertTrue(gotExp);\n    \n    // No numShards should fail\n    params = new ModifiableSolrParams();\n    params.set(\"action\", CollectionAction.CREATE.toString());\n    collectionName = \"acollection\";\n    params.set(\"name\", collectionName);\n    params.set(OverseerCollectionProcessor.REPLICATION_FACTOR, 10);\n    request = new QueryRequest(params);\n    request.setPath(\"/admin/collections\");\n    gotExp = false;\n    resp = null;\n    try {\n      resp = createNewSolrServer(\"\", baseUrl).request(request);\n    } catch (SolrException e) {\n      gotExp = true;\n    }\n    assertTrue(gotExp);\n    \n    // 0 numShards should fail\n    params = new ModifiableSolrParams();\n    params.set(\"action\", CollectionAction.CREATE.toString());\n    collectionName = \"acollection\";\n    params.set(\"name\", collectionName);\n    params.set(OverseerCollectionProcessor.REPLICATION_FACTOR, 10);\n    params.set(\"numShards\", 0);\n    request = new QueryRequest(params);\n    request.setPath(\"/admin/collections\");\n    gotExp = false;\n    resp = null;\n    try {\n      resp = createNewSolrServer(\"\", baseUrl).request(request);\n    } catch (SolrException e) {\n      gotExp = true;\n    }\n    assertTrue(gotExp);\n    \n    // Fail on one node\n    \n    // first we make a core with the core name the collections api\n    // will try and use - this will cause our mock fail\n    Create createCmd = new Create();\n    createCmd.setCoreName(\"halfcollection_shard1_replica1\");\n    createCmd.setCollection(\"halfcollectionblocker\");\n    String dataDir = SolrTestCaseJ4.dataDir.getAbsolutePath() + File.separator\n        + System.currentTimeMillis() + \"halfcollection\" + \"_3n\";\n    createCmd.setDataDir(dataDir);\n    createCmd.setNumShards(1);\n    createNewSolrServer(\"\", baseUrl).request(createCmd);\n    \n    createCmd = new Create();\n    createCmd.setCoreName(\"halfcollection_shard1_replica1\");\n    createCmd.setCollection(\"halfcollectionblocker2\");\n    dataDir = SolrTestCaseJ4.dataDir.getAbsolutePath() + File.separator\n        + System.currentTimeMillis() + \"halfcollection\" + \"_3n\";\n    createCmd.setDataDir(dataDir);\n    createCmd.setNumShards(1);\n    createNewSolrServer(\"\", getBaseUrl((HttpSolrServer) clients.get(1))).request(createCmd);\n    \n    params = new ModifiableSolrParams();\n    params.set(\"action\", CollectionAction.CREATE.toString());\n    collectionName = \"halfcollection\";\n    params.set(\"name\", collectionName);\n    params.set(\"numShards\", 2);\n    params.set(\"wt\", \"xml\");\n    \n    String nn1 = ((SolrDispatchFilter) jettys.get(0).getDispatchFilter().getFilter()).getCores().getZkController().getNodeName();\n    String nn2 =  ((SolrDispatchFilter) jettys.get(1).getDispatchFilter().getFilter()).getCores().getZkController().getNodeName();\n    \n    params.set(OverseerCollectionProcessor.CREATE_NODE_SET, nn1 + \",\" + nn2);\n    request = new QueryRequest(params);\n    request.setPath(\"/admin/collections\");\n    gotExp = false;\n    resp = createNewSolrServer(\"\", baseUrl).request(request);\n    \n    SimpleOrderedMap success = (SimpleOrderedMap) resp.get(\"success\");\n    SimpleOrderedMap failure = (SimpleOrderedMap) resp.get(\"failure\");\n\n    String val1 = success.getVal(0).toString();\n    String val2 = failure.getVal(0).toString();\n    assertTrue(val1.contains(\"SolrException\") || val2.contains(\"SolrException\"));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"1eeda7e62e149f90eee8895af874c74efa7d4852","date":1375293182,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/CollectionsAPIDistributedZkTest#testErrorHandling().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/CollectionsAPIDistributedZkTest#testErrorHandling().mjava","sourceNew":"  private void testErrorHandling() throws Exception {\n    final String baseUrl = getBaseUrl((HttpSolrServer) clients.get(0));\n    \n    \n    // try a bad action\n    ModifiableSolrParams params = new ModifiableSolrParams();\n    params.set(\"action\", \"BADACTION\");\n    String collectionName = \"badactioncollection\";\n    params.set(\"name\", collectionName);\n    params.set(\"numShards\", 2);\n    QueryRequest request = new QueryRequest(params);\n    request.setPath(\"/admin/collections\");\n    boolean gotExp = false;\n    NamedList<Object> resp = null;\n    try {\n      resp = createNewSolrServer(\"\", baseUrl).request(request);\n    } catch (SolrException e) {\n      gotExp = true;\n    }\n    assertTrue(gotExp);\n    \n    \n    // leave out required param name\n    params = new ModifiableSolrParams();\n    params.set(\"action\", CollectionAction.CREATE.toString());\n    params.set(\"numShards\", 2);\n    collectionName = \"collection\";\n    // No Name\n    // params.set(\"name\", collectionName);\n    request = new QueryRequest(params);\n    request.setPath(\"/admin/collections\");\n    gotExp = false;\n    resp = null;\n    try {\n      resp = createNewSolrServer(\"\", baseUrl).request(request);\n    } catch (SolrException e) {\n      gotExp = true;\n    }\n    assertTrue(gotExp);\n    \n    // Too many replicas\n    params = new ModifiableSolrParams();\n    params.set(\"action\", CollectionAction.CREATE.toString());\n    collectionName = \"collection\";\n    params.set(\"name\", collectionName);\n    params.set(\"numShards\", 2);\n    params.set(REPLICATION_FACTOR, 10);\n    request = new QueryRequest(params);\n    request.setPath(\"/admin/collections\");\n    gotExp = false;\n    resp = null;\n    try {\n      resp = createNewSolrServer(\"\", baseUrl).request(request);\n    } catch (SolrException e) {\n      gotExp = true;\n    }\n    assertTrue(gotExp);\n    \n    // No numShards should fail\n    params = new ModifiableSolrParams();\n    params.set(\"action\", CollectionAction.CREATE.toString());\n    collectionName = \"acollection\";\n    params.set(\"name\", collectionName);\n    params.set(REPLICATION_FACTOR, 10);\n    request = new QueryRequest(params);\n    request.setPath(\"/admin/collections\");\n    gotExp = false;\n    resp = null;\n    try {\n      resp = createNewSolrServer(\"\", baseUrl).request(request);\n    } catch (SolrException e) {\n      gotExp = true;\n    }\n    assertTrue(gotExp);\n    \n    // 0 numShards should fail\n    params = new ModifiableSolrParams();\n    params.set(\"action\", CollectionAction.CREATE.toString());\n    collectionName = \"acollection\";\n    params.set(\"name\", collectionName);\n    params.set(REPLICATION_FACTOR, 10);\n    params.set(\"numShards\", 0);\n    request = new QueryRequest(params);\n    request.setPath(\"/admin/collections\");\n    gotExp = false;\n    resp = null;\n    try {\n      resp = createNewSolrServer(\"\", baseUrl).request(request);\n    } catch (SolrException e) {\n      gotExp = true;\n    }\n    assertTrue(gotExp);\n    \n    // Fail on one node\n    \n    // first we make a core with the core name the collections api\n    // will try and use - this will cause our mock fail\n    Create createCmd = new Create();\n    createCmd.setCoreName(\"halfcollection_shard1_replica1\");\n    createCmd.setCollection(\"halfcollectionblocker\");\n    String dataDir = SolrTestCaseJ4.dataDir.getAbsolutePath() + File.separator\n        + System.currentTimeMillis() + \"halfcollection\" + \"_3n\";\n    createCmd.setDataDir(dataDir);\n    createCmd.setNumShards(1);\n    createNewSolrServer(\"\", baseUrl).request(createCmd);\n    \n    createCmd = new Create();\n    createCmd.setCoreName(\"halfcollection_shard1_replica1\");\n    createCmd.setCollection(\"halfcollectionblocker2\");\n    dataDir = SolrTestCaseJ4.dataDir.getAbsolutePath() + File.separator\n        + System.currentTimeMillis() + \"halfcollection\" + \"_3n\";\n    createCmd.setDataDir(dataDir);\n    createCmd.setNumShards(1);\n    createNewSolrServer(\"\", getBaseUrl((HttpSolrServer) clients.get(1))).request(createCmd);\n    \n    params = new ModifiableSolrParams();\n    params.set(\"action\", CollectionAction.CREATE.toString());\n    collectionName = \"halfcollection\";\n    params.set(\"name\", collectionName);\n    params.set(\"numShards\", 2);\n    params.set(\"wt\", \"xml\");\n    \n    String nn1 = ((SolrDispatchFilter) jettys.get(0).getDispatchFilter().getFilter()).getCores().getZkController().getNodeName();\n    String nn2 =  ((SolrDispatchFilter) jettys.get(1).getDispatchFilter().getFilter()).getCores().getZkController().getNodeName();\n    \n    params.set(OverseerCollectionProcessor.CREATE_NODE_SET, nn1 + \",\" + nn2);\n    request = new QueryRequest(params);\n    request.setPath(\"/admin/collections\");\n    gotExp = false;\n    resp = createNewSolrServer(\"\", baseUrl).request(request);\n    \n    SimpleOrderedMap success = (SimpleOrderedMap) resp.get(\"success\");\n    SimpleOrderedMap failure = (SimpleOrderedMap) resp.get(\"failure\");\n\n    String val1 = success.getVal(0).toString();\n    String val2 = failure.getVal(0).toString();\n    assertTrue(val1.contains(\"SolrException\") || val2.contains(\"SolrException\"));\n  }\n\n","sourceOld":"  private void testErrorHandling() throws Exception {\n    final String baseUrl = getBaseUrl((HttpSolrServer) clients.get(0));\n    \n    \n    // try a bad action\n    ModifiableSolrParams params = new ModifiableSolrParams();\n    params.set(\"action\", \"BADACTION\");\n    String collectionName = \"badactioncollection\";\n    params.set(\"name\", collectionName);\n    params.set(\"numShards\", 2);\n    QueryRequest request = new QueryRequest(params);\n    request.setPath(\"/admin/collections\");\n    boolean gotExp = false;\n    NamedList<Object> resp = null;\n    try {\n      resp = createNewSolrServer(\"\", baseUrl).request(request);\n    } catch (SolrException e) {\n      gotExp = true;\n    }\n    assertTrue(gotExp);\n    \n    \n    // leave out required param name\n    params = new ModifiableSolrParams();\n    params.set(\"action\", CollectionAction.CREATE.toString());\n    params.set(\"numShards\", 2);\n    collectionName = \"collection\";\n    // No Name\n    // params.set(\"name\", collectionName);\n    request = new QueryRequest(params);\n    request.setPath(\"/admin/collections\");\n    gotExp = false;\n    resp = null;\n    try {\n      resp = createNewSolrServer(\"\", baseUrl).request(request);\n    } catch (SolrException e) {\n      gotExp = true;\n    }\n    assertTrue(gotExp);\n    \n    // Too many replicas\n    params = new ModifiableSolrParams();\n    params.set(\"action\", CollectionAction.CREATE.toString());\n    collectionName = \"collection\";\n    params.set(\"name\", collectionName);\n    params.set(\"numShards\", 2);\n    params.set(OverseerCollectionProcessor.REPLICATION_FACTOR, 10);\n    request = new QueryRequest(params);\n    request.setPath(\"/admin/collections\");\n    gotExp = false;\n    resp = null;\n    try {\n      resp = createNewSolrServer(\"\", baseUrl).request(request);\n    } catch (SolrException e) {\n      gotExp = true;\n    }\n    assertTrue(gotExp);\n    \n    // No numShards should fail\n    params = new ModifiableSolrParams();\n    params.set(\"action\", CollectionAction.CREATE.toString());\n    collectionName = \"acollection\";\n    params.set(\"name\", collectionName);\n    params.set(OverseerCollectionProcessor.REPLICATION_FACTOR, 10);\n    request = new QueryRequest(params);\n    request.setPath(\"/admin/collections\");\n    gotExp = false;\n    resp = null;\n    try {\n      resp = createNewSolrServer(\"\", baseUrl).request(request);\n    } catch (SolrException e) {\n      gotExp = true;\n    }\n    assertTrue(gotExp);\n    \n    // 0 numShards should fail\n    params = new ModifiableSolrParams();\n    params.set(\"action\", CollectionAction.CREATE.toString());\n    collectionName = \"acollection\";\n    params.set(\"name\", collectionName);\n    params.set(OverseerCollectionProcessor.REPLICATION_FACTOR, 10);\n    params.set(\"numShards\", 0);\n    request = new QueryRequest(params);\n    request.setPath(\"/admin/collections\");\n    gotExp = false;\n    resp = null;\n    try {\n      resp = createNewSolrServer(\"\", baseUrl).request(request);\n    } catch (SolrException e) {\n      gotExp = true;\n    }\n    assertTrue(gotExp);\n    \n    // Fail on one node\n    \n    // first we make a core with the core name the collections api\n    // will try and use - this will cause our mock fail\n    Create createCmd = new Create();\n    createCmd.setCoreName(\"halfcollection_shard1_replica1\");\n    createCmd.setCollection(\"halfcollectionblocker\");\n    String dataDir = SolrTestCaseJ4.dataDir.getAbsolutePath() + File.separator\n        + System.currentTimeMillis() + \"halfcollection\" + \"_3n\";\n    createCmd.setDataDir(dataDir);\n    createCmd.setNumShards(1);\n    createNewSolrServer(\"\", baseUrl).request(createCmd);\n    \n    createCmd = new Create();\n    createCmd.setCoreName(\"halfcollection_shard1_replica1\");\n    createCmd.setCollection(\"halfcollectionblocker2\");\n    dataDir = SolrTestCaseJ4.dataDir.getAbsolutePath() + File.separator\n        + System.currentTimeMillis() + \"halfcollection\" + \"_3n\";\n    createCmd.setDataDir(dataDir);\n    createCmd.setNumShards(1);\n    createNewSolrServer(\"\", getBaseUrl((HttpSolrServer) clients.get(1))).request(createCmd);\n    \n    params = new ModifiableSolrParams();\n    params.set(\"action\", CollectionAction.CREATE.toString());\n    collectionName = \"halfcollection\";\n    params.set(\"name\", collectionName);\n    params.set(\"numShards\", 2);\n    params.set(\"wt\", \"xml\");\n    \n    String nn1 = ((SolrDispatchFilter) jettys.get(0).getDispatchFilter().getFilter()).getCores().getZkController().getNodeName();\n    String nn2 =  ((SolrDispatchFilter) jettys.get(1).getDispatchFilter().getFilter()).getCores().getZkController().getNodeName();\n    \n    params.set(OverseerCollectionProcessor.CREATE_NODE_SET, nn1 + \",\" + nn2);\n    request = new QueryRequest(params);\n    request.setPath(\"/admin/collections\");\n    gotExp = false;\n    resp = createNewSolrServer(\"\", baseUrl).request(request);\n    \n    SimpleOrderedMap success = (SimpleOrderedMap) resp.get(\"success\");\n    SimpleOrderedMap failure = (SimpleOrderedMap) resp.get(\"failure\");\n\n    String val1 = success.getVal(0).toString();\n    String val2 = failure.getVal(0).toString();\n    assertTrue(val1.contains(\"SolrException\") || val2.contains(\"SolrException\"));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"716d18f3a9b0993bc679d7fa7abdc9bfb03411ec","date":1376375609,"type":3,"author":"Han Jiang","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/cloud/CollectionsAPIDistributedZkTest#testErrorHandling().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/CollectionsAPIDistributedZkTest#testErrorHandling().mjava","sourceNew":"  private void testErrorHandling() throws Exception {\n    final String baseUrl = getBaseUrl((HttpSolrServer) clients.get(0));\n    \n    \n    // try a bad action\n    ModifiableSolrParams params = new ModifiableSolrParams();\n    params.set(\"action\", \"BADACTION\");\n    String collectionName = \"badactioncollection\";\n    params.set(\"name\", collectionName);\n    params.set(\"numShards\", 2);\n    QueryRequest request = new QueryRequest(params);\n    request.setPath(\"/admin/collections\");\n    boolean gotExp = false;\n    NamedList<Object> resp = null;\n    try {\n      resp = createNewSolrServer(\"\", baseUrl).request(request);\n    } catch (SolrException e) {\n      gotExp = true;\n    }\n    assertTrue(gotExp);\n    \n    \n    // leave out required param name\n    params = new ModifiableSolrParams();\n    params.set(\"action\", CollectionAction.CREATE.toString());\n    params.set(\"numShards\", 2);\n    collectionName = \"collection\";\n    // No Name\n    // params.set(\"name\", collectionName);\n    request = new QueryRequest(params);\n    request.setPath(\"/admin/collections\");\n    gotExp = false;\n    resp = null;\n    try {\n      resp = createNewSolrServer(\"\", baseUrl).request(request);\n    } catch (SolrException e) {\n      gotExp = true;\n    }\n    assertTrue(gotExp);\n    \n    // Too many replicas\n    params = new ModifiableSolrParams();\n    params.set(\"action\", CollectionAction.CREATE.toString());\n    collectionName = \"collection\";\n    params.set(\"name\", collectionName);\n    params.set(\"numShards\", 2);\n    params.set(REPLICATION_FACTOR, 10);\n    request = new QueryRequest(params);\n    request.setPath(\"/admin/collections\");\n    gotExp = false;\n    resp = null;\n    try {\n      resp = createNewSolrServer(\"\", baseUrl).request(request);\n    } catch (SolrException e) {\n      gotExp = true;\n    }\n    assertTrue(gotExp);\n    \n    // No numShards should fail\n    params = new ModifiableSolrParams();\n    params.set(\"action\", CollectionAction.CREATE.toString());\n    collectionName = \"acollection\";\n    params.set(\"name\", collectionName);\n    params.set(REPLICATION_FACTOR, 10);\n    request = new QueryRequest(params);\n    request.setPath(\"/admin/collections\");\n    gotExp = false;\n    resp = null;\n    try {\n      resp = createNewSolrServer(\"\", baseUrl).request(request);\n    } catch (SolrException e) {\n      gotExp = true;\n    }\n    assertTrue(gotExp);\n    \n    // 0 numShards should fail\n    params = new ModifiableSolrParams();\n    params.set(\"action\", CollectionAction.CREATE.toString());\n    collectionName = \"acollection\";\n    params.set(\"name\", collectionName);\n    params.set(REPLICATION_FACTOR, 10);\n    params.set(\"numShards\", 0);\n    request = new QueryRequest(params);\n    request.setPath(\"/admin/collections\");\n    gotExp = false;\n    resp = null;\n    try {\n      resp = createNewSolrServer(\"\", baseUrl).request(request);\n    } catch (SolrException e) {\n      gotExp = true;\n    }\n    assertTrue(gotExp);\n    \n    // Fail on one node\n    \n    // first we make a core with the core name the collections api\n    // will try and use - this will cause our mock fail\n    Create createCmd = new Create();\n    createCmd.setCoreName(\"halfcollection_shard1_replica1\");\n    createCmd.setCollection(\"halfcollectionblocker\");\n    String dataDir = SolrTestCaseJ4.dataDir.getAbsolutePath() + File.separator\n        + System.currentTimeMillis() + \"halfcollection\" + \"_3n\";\n    createCmd.setDataDir(dataDir);\n    createCmd.setNumShards(1);\n    createNewSolrServer(\"\", baseUrl).request(createCmd);\n    \n    createCmd = new Create();\n    createCmd.setCoreName(\"halfcollection_shard1_replica1\");\n    createCmd.setCollection(\"halfcollectionblocker2\");\n    dataDir = SolrTestCaseJ4.dataDir.getAbsolutePath() + File.separator\n        + System.currentTimeMillis() + \"halfcollection\" + \"_3n\";\n    createCmd.setDataDir(dataDir);\n    createCmd.setNumShards(1);\n    createNewSolrServer(\"\", getBaseUrl((HttpSolrServer) clients.get(1))).request(createCmd);\n    \n    params = new ModifiableSolrParams();\n    params.set(\"action\", CollectionAction.CREATE.toString());\n    collectionName = \"halfcollection\";\n    params.set(\"name\", collectionName);\n    params.set(\"numShards\", 2);\n    params.set(\"wt\", \"xml\");\n    \n    String nn1 = ((SolrDispatchFilter) jettys.get(0).getDispatchFilter().getFilter()).getCores().getZkController().getNodeName();\n    String nn2 =  ((SolrDispatchFilter) jettys.get(1).getDispatchFilter().getFilter()).getCores().getZkController().getNodeName();\n    \n    params.set(OverseerCollectionProcessor.CREATE_NODE_SET, nn1 + \",\" + nn2);\n    request = new QueryRequest(params);\n    request.setPath(\"/admin/collections\");\n    gotExp = false;\n    resp = createNewSolrServer(\"\", baseUrl).request(request);\n    \n    SimpleOrderedMap success = (SimpleOrderedMap) resp.get(\"success\");\n    SimpleOrderedMap failure = (SimpleOrderedMap) resp.get(\"failure\");\n\n    String val1 = success.getVal(0).toString();\n    String val2 = failure.getVal(0).toString();\n    assertTrue(val1.contains(\"SolrException\") || val2.contains(\"SolrException\"));\n  }\n\n","sourceOld":"  private void testErrorHandling() throws Exception {\n    final String baseUrl = getBaseUrl((HttpSolrServer) clients.get(0));\n    \n    \n    // try a bad action\n    ModifiableSolrParams params = new ModifiableSolrParams();\n    params.set(\"action\", \"BADACTION\");\n    String collectionName = \"badactioncollection\";\n    params.set(\"name\", collectionName);\n    params.set(\"numShards\", 2);\n    QueryRequest request = new QueryRequest(params);\n    request.setPath(\"/admin/collections\");\n    boolean gotExp = false;\n    NamedList<Object> resp = null;\n    try {\n      resp = createNewSolrServer(\"\", baseUrl).request(request);\n    } catch (SolrException e) {\n      gotExp = true;\n    }\n    assertTrue(gotExp);\n    \n    \n    // leave out required param name\n    params = new ModifiableSolrParams();\n    params.set(\"action\", CollectionAction.CREATE.toString());\n    params.set(\"numShards\", 2);\n    collectionName = \"collection\";\n    // No Name\n    // params.set(\"name\", collectionName);\n    request = new QueryRequest(params);\n    request.setPath(\"/admin/collections\");\n    gotExp = false;\n    resp = null;\n    try {\n      resp = createNewSolrServer(\"\", baseUrl).request(request);\n    } catch (SolrException e) {\n      gotExp = true;\n    }\n    assertTrue(gotExp);\n    \n    // Too many replicas\n    params = new ModifiableSolrParams();\n    params.set(\"action\", CollectionAction.CREATE.toString());\n    collectionName = \"collection\";\n    params.set(\"name\", collectionName);\n    params.set(\"numShards\", 2);\n    params.set(OverseerCollectionProcessor.REPLICATION_FACTOR, 10);\n    request = new QueryRequest(params);\n    request.setPath(\"/admin/collections\");\n    gotExp = false;\n    resp = null;\n    try {\n      resp = createNewSolrServer(\"\", baseUrl).request(request);\n    } catch (SolrException e) {\n      gotExp = true;\n    }\n    assertTrue(gotExp);\n    \n    // No numShards should fail\n    params = new ModifiableSolrParams();\n    params.set(\"action\", CollectionAction.CREATE.toString());\n    collectionName = \"acollection\";\n    params.set(\"name\", collectionName);\n    params.set(OverseerCollectionProcessor.REPLICATION_FACTOR, 10);\n    request = new QueryRequest(params);\n    request.setPath(\"/admin/collections\");\n    gotExp = false;\n    resp = null;\n    try {\n      resp = createNewSolrServer(\"\", baseUrl).request(request);\n    } catch (SolrException e) {\n      gotExp = true;\n    }\n    assertTrue(gotExp);\n    \n    // 0 numShards should fail\n    params = new ModifiableSolrParams();\n    params.set(\"action\", CollectionAction.CREATE.toString());\n    collectionName = \"acollection\";\n    params.set(\"name\", collectionName);\n    params.set(OverseerCollectionProcessor.REPLICATION_FACTOR, 10);\n    params.set(\"numShards\", 0);\n    request = new QueryRequest(params);\n    request.setPath(\"/admin/collections\");\n    gotExp = false;\n    resp = null;\n    try {\n      resp = createNewSolrServer(\"\", baseUrl).request(request);\n    } catch (SolrException e) {\n      gotExp = true;\n    }\n    assertTrue(gotExp);\n    \n    // Fail on one node\n    \n    // first we make a core with the core name the collections api\n    // will try and use - this will cause our mock fail\n    Create createCmd = new Create();\n    createCmd.setCoreName(\"halfcollection_shard1_replica1\");\n    createCmd.setCollection(\"halfcollectionblocker\");\n    String dataDir = SolrTestCaseJ4.dataDir.getAbsolutePath() + File.separator\n        + System.currentTimeMillis() + \"halfcollection\" + \"_3n\";\n    createCmd.setDataDir(dataDir);\n    createCmd.setNumShards(1);\n    createNewSolrServer(\"\", baseUrl).request(createCmd);\n    \n    createCmd = new Create();\n    createCmd.setCoreName(\"halfcollection_shard1_replica1\");\n    createCmd.setCollection(\"halfcollectionblocker2\");\n    dataDir = SolrTestCaseJ4.dataDir.getAbsolutePath() + File.separator\n        + System.currentTimeMillis() + \"halfcollection\" + \"_3n\";\n    createCmd.setDataDir(dataDir);\n    createCmd.setNumShards(1);\n    createNewSolrServer(\"\", getBaseUrl((HttpSolrServer) clients.get(1))).request(createCmd);\n    \n    params = new ModifiableSolrParams();\n    params.set(\"action\", CollectionAction.CREATE.toString());\n    collectionName = \"halfcollection\";\n    params.set(\"name\", collectionName);\n    params.set(\"numShards\", 2);\n    params.set(\"wt\", \"xml\");\n    \n    String nn1 = ((SolrDispatchFilter) jettys.get(0).getDispatchFilter().getFilter()).getCores().getZkController().getNodeName();\n    String nn2 =  ((SolrDispatchFilter) jettys.get(1).getDispatchFilter().getFilter()).getCores().getZkController().getNodeName();\n    \n    params.set(OverseerCollectionProcessor.CREATE_NODE_SET, nn1 + \",\" + nn2);\n    request = new QueryRequest(params);\n    request.setPath(\"/admin/collections\");\n    gotExp = false;\n    resp = createNewSolrServer(\"\", baseUrl).request(request);\n    \n    SimpleOrderedMap success = (SimpleOrderedMap) resp.get(\"success\");\n    SimpleOrderedMap failure = (SimpleOrderedMap) resp.get(\"failure\");\n\n    String val1 = success.getVal(0).toString();\n    String val2 = failure.getVal(0).toString();\n    assertTrue(val1.contains(\"SolrException\") || val2.contains(\"SolrException\"));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5a82d855abc18f7ee3e1ec359d8f256c8c86977a","date":1381347960,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/CollectionsAPIDistributedZkTest#testErrorHandling().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/CollectionsAPIDistributedZkTest#testErrorHandling().mjava","sourceNew":"  private void testErrorHandling() throws Exception {\n    final String baseUrl = getBaseUrl((HttpSolrServer) clients.get(0));\n    \n    \n    // try a bad action\n    ModifiableSolrParams params = new ModifiableSolrParams();\n    params.set(\"action\", \"BADACTION\");\n    String collectionName = \"badactioncollection\";\n    params.set(\"name\", collectionName);\n    params.set(\"numShards\", 2);\n    QueryRequest request = new QueryRequest(params);\n    request.setPath(\"/admin/collections\");\n    boolean gotExp = false;\n    NamedList<Object> resp = null;\n    try {\n      resp = createNewSolrServer(\"\", baseUrl).request(request);\n    } catch (SolrException e) {\n      gotExp = true;\n    }\n    assertTrue(gotExp);\n    \n    \n    // leave out required param name\n    params = new ModifiableSolrParams();\n    params.set(\"action\", CollectionAction.CREATE.toString());\n    params.set(\"numShards\", 2);\n    collectionName = \"collection\";\n    // No Name\n    // params.set(\"name\", collectionName);\n    if (secondConfigSet) {\n      params.set(\"collection.configName\", \"conf1\");\n    }\n    request = new QueryRequest(params);\n    request.setPath(\"/admin/collections\");\n    gotExp = false;\n    resp = null;\n    try {\n      resp = createNewSolrServer(\"\", baseUrl).request(request);\n    } catch (SolrException e) {\n      gotExp = true;\n    }\n    assertTrue(gotExp);\n    \n    // Too many replicas\n    params = new ModifiableSolrParams();\n    params.set(\"action\", CollectionAction.CREATE.toString());\n    collectionName = \"collection\";\n    params.set(\"name\", collectionName);\n    params.set(\"numShards\", 2);\n    if (secondConfigSet) {\n      params.set(\"collection.configName\", \"conf1\");\n    }\n    params.set(REPLICATION_FACTOR, 10);\n    request = new QueryRequest(params);\n    request.setPath(\"/admin/collections\");\n    gotExp = false;\n    resp = null;\n    try {\n      resp = createNewSolrServer(\"\", baseUrl).request(request);\n    } catch (SolrException e) {\n      gotExp = true;\n    }\n    assertTrue(gotExp);\n    \n    // No numShards should fail\n    params = new ModifiableSolrParams();\n    params.set(\"action\", CollectionAction.CREATE.toString());\n    collectionName = \"acollection\";\n    params.set(\"name\", collectionName);\n    params.set(REPLICATION_FACTOR, 10);\n    if (secondConfigSet) {\n      params.set(\"collection.configName\", \"conf1\");\n    }\n    request = new QueryRequest(params);\n    request.setPath(\"/admin/collections\");\n    gotExp = false;\n    resp = null;\n    try {\n      resp = createNewSolrServer(\"\", baseUrl).request(request);\n    } catch (SolrException e) {\n      gotExp = true;\n    }\n    assertTrue(gotExp);\n    \n    // 0 numShards should fail\n    params = new ModifiableSolrParams();\n    params.set(\"action\", CollectionAction.CREATE.toString());\n    collectionName = \"acollection\";\n    params.set(\"name\", collectionName);\n    params.set(REPLICATION_FACTOR, 10);\n    params.set(\"numShards\", 0);\n    if (secondConfigSet) {\n      params.set(\"collection.configName\", \"conf1\");\n    }\n    request = new QueryRequest(params);\n    request.setPath(\"/admin/collections\");\n    gotExp = false;\n    resp = null;\n    try {\n      resp = createNewSolrServer(\"\", baseUrl).request(request);\n    } catch (SolrException e) {\n      gotExp = true;\n    }\n    assertTrue(gotExp);\n    \n    // Fail on one node\n    \n    // first we make a core with the core name the collections api\n    // will try and use - this will cause our mock fail\n    Create createCmd = new Create();\n    createCmd.setCoreName(\"halfcollection_shard1_replica1\");\n    createCmd.setCollection(\"halfcollectionblocker\");\n    String dataDir = SolrTestCaseJ4.dataDir.getAbsolutePath() + File.separator\n        + System.currentTimeMillis() + \"halfcollection\" + \"_3n\";\n    createCmd.setDataDir(dataDir);\n    createCmd.setNumShards(1);\n    if (secondConfigSet) {\n      createCmd.setCollectionConfigName(\"conf1\");\n    }\n    createNewSolrServer(\"\", baseUrl).request(createCmd);\n    \n    createCmd = new Create();\n    createCmd.setCoreName(\"halfcollection_shard1_replica1\");\n    createCmd.setCollection(\"halfcollectionblocker2\");\n    dataDir = SolrTestCaseJ4.dataDir.getAbsolutePath() + File.separator\n        + System.currentTimeMillis() + \"halfcollection\" + \"_3n\";\n    createCmd.setDataDir(dataDir);\n    createCmd.setNumShards(1);\n    if (secondConfigSet) {\n      createCmd.setCollectionConfigName(\"conf1\");\n    }\n    createNewSolrServer(\"\", getBaseUrl((HttpSolrServer) clients.get(1))).request(createCmd);\n    \n    params = new ModifiableSolrParams();\n    params.set(\"action\", CollectionAction.CREATE.toString());\n    collectionName = \"halfcollection\";\n    params.set(\"name\", collectionName);\n    params.set(\"numShards\", 2);\n    params.set(\"wt\", \"xml\");\n    \n    if (secondConfigSet) {\n      params.set(\"collection.configName\", \"conf1\");\n    }\n    \n    String nn1 = ((SolrDispatchFilter) jettys.get(0).getDispatchFilter().getFilter()).getCores().getZkController().getNodeName();\n    String nn2 =  ((SolrDispatchFilter) jettys.get(1).getDispatchFilter().getFilter()).getCores().getZkController().getNodeName();\n    \n    params.set(OverseerCollectionProcessor.CREATE_NODE_SET, nn1 + \",\" + nn2);\n    request = new QueryRequest(params);\n    request.setPath(\"/admin/collections\");\n    gotExp = false;\n    resp = createNewSolrServer(\"\", baseUrl).request(request);\n    \n    SimpleOrderedMap success = (SimpleOrderedMap) resp.get(\"success\");\n    SimpleOrderedMap failure = (SimpleOrderedMap) resp.get(\"failure\");\n\n    assertNotNull(resp.toString(), success);\n    assertNotNull(resp.toString(), failure);\n    \n    String val1 = success.getVal(0).toString();\n    String val2 = failure.getVal(0).toString();\n    assertTrue(val1.contains(\"SolrException\") || val2.contains(\"SolrException\"));\n  }\n\n","sourceOld":"  private void testErrorHandling() throws Exception {\n    final String baseUrl = getBaseUrl((HttpSolrServer) clients.get(0));\n    \n    \n    // try a bad action\n    ModifiableSolrParams params = new ModifiableSolrParams();\n    params.set(\"action\", \"BADACTION\");\n    String collectionName = \"badactioncollection\";\n    params.set(\"name\", collectionName);\n    params.set(\"numShards\", 2);\n    QueryRequest request = new QueryRequest(params);\n    request.setPath(\"/admin/collections\");\n    boolean gotExp = false;\n    NamedList<Object> resp = null;\n    try {\n      resp = createNewSolrServer(\"\", baseUrl).request(request);\n    } catch (SolrException e) {\n      gotExp = true;\n    }\n    assertTrue(gotExp);\n    \n    \n    // leave out required param name\n    params = new ModifiableSolrParams();\n    params.set(\"action\", CollectionAction.CREATE.toString());\n    params.set(\"numShards\", 2);\n    collectionName = \"collection\";\n    // No Name\n    // params.set(\"name\", collectionName);\n    request = new QueryRequest(params);\n    request.setPath(\"/admin/collections\");\n    gotExp = false;\n    resp = null;\n    try {\n      resp = createNewSolrServer(\"\", baseUrl).request(request);\n    } catch (SolrException e) {\n      gotExp = true;\n    }\n    assertTrue(gotExp);\n    \n    // Too many replicas\n    params = new ModifiableSolrParams();\n    params.set(\"action\", CollectionAction.CREATE.toString());\n    collectionName = \"collection\";\n    params.set(\"name\", collectionName);\n    params.set(\"numShards\", 2);\n    params.set(REPLICATION_FACTOR, 10);\n    request = new QueryRequest(params);\n    request.setPath(\"/admin/collections\");\n    gotExp = false;\n    resp = null;\n    try {\n      resp = createNewSolrServer(\"\", baseUrl).request(request);\n    } catch (SolrException e) {\n      gotExp = true;\n    }\n    assertTrue(gotExp);\n    \n    // No numShards should fail\n    params = new ModifiableSolrParams();\n    params.set(\"action\", CollectionAction.CREATE.toString());\n    collectionName = \"acollection\";\n    params.set(\"name\", collectionName);\n    params.set(REPLICATION_FACTOR, 10);\n    request = new QueryRequest(params);\n    request.setPath(\"/admin/collections\");\n    gotExp = false;\n    resp = null;\n    try {\n      resp = createNewSolrServer(\"\", baseUrl).request(request);\n    } catch (SolrException e) {\n      gotExp = true;\n    }\n    assertTrue(gotExp);\n    \n    // 0 numShards should fail\n    params = new ModifiableSolrParams();\n    params.set(\"action\", CollectionAction.CREATE.toString());\n    collectionName = \"acollection\";\n    params.set(\"name\", collectionName);\n    params.set(REPLICATION_FACTOR, 10);\n    params.set(\"numShards\", 0);\n    request = new QueryRequest(params);\n    request.setPath(\"/admin/collections\");\n    gotExp = false;\n    resp = null;\n    try {\n      resp = createNewSolrServer(\"\", baseUrl).request(request);\n    } catch (SolrException e) {\n      gotExp = true;\n    }\n    assertTrue(gotExp);\n    \n    // Fail on one node\n    \n    // first we make a core with the core name the collections api\n    // will try and use - this will cause our mock fail\n    Create createCmd = new Create();\n    createCmd.setCoreName(\"halfcollection_shard1_replica1\");\n    createCmd.setCollection(\"halfcollectionblocker\");\n    String dataDir = SolrTestCaseJ4.dataDir.getAbsolutePath() + File.separator\n        + System.currentTimeMillis() + \"halfcollection\" + \"_3n\";\n    createCmd.setDataDir(dataDir);\n    createCmd.setNumShards(1);\n    createNewSolrServer(\"\", baseUrl).request(createCmd);\n    \n    createCmd = new Create();\n    createCmd.setCoreName(\"halfcollection_shard1_replica1\");\n    createCmd.setCollection(\"halfcollectionblocker2\");\n    dataDir = SolrTestCaseJ4.dataDir.getAbsolutePath() + File.separator\n        + System.currentTimeMillis() + \"halfcollection\" + \"_3n\";\n    createCmd.setDataDir(dataDir);\n    createCmd.setNumShards(1);\n    createNewSolrServer(\"\", getBaseUrl((HttpSolrServer) clients.get(1))).request(createCmd);\n    \n    params = new ModifiableSolrParams();\n    params.set(\"action\", CollectionAction.CREATE.toString());\n    collectionName = \"halfcollection\";\n    params.set(\"name\", collectionName);\n    params.set(\"numShards\", 2);\n    params.set(\"wt\", \"xml\");\n    \n    String nn1 = ((SolrDispatchFilter) jettys.get(0).getDispatchFilter().getFilter()).getCores().getZkController().getNodeName();\n    String nn2 =  ((SolrDispatchFilter) jettys.get(1).getDispatchFilter().getFilter()).getCores().getZkController().getNodeName();\n    \n    params.set(OverseerCollectionProcessor.CREATE_NODE_SET, nn1 + \",\" + nn2);\n    request = new QueryRequest(params);\n    request.setPath(\"/admin/collections\");\n    gotExp = false;\n    resp = createNewSolrServer(\"\", baseUrl).request(request);\n    \n    SimpleOrderedMap success = (SimpleOrderedMap) resp.get(\"success\");\n    SimpleOrderedMap failure = (SimpleOrderedMap) resp.get(\"failure\");\n\n    String val1 = success.getVal(0).toString();\n    String val2 = failure.getVal(0).toString();\n    assertTrue(val1.contains(\"SolrException\") || val2.contains(\"SolrException\"));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"d3a46663789411cdf016145a96a40cf861798ae3","date":1395119088,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/CollectionsAPIDistributedZkTest#testErrorHandling().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/CollectionsAPIDistributedZkTest#testErrorHandling().mjava","sourceNew":"  private void testErrorHandling() throws Exception {\n    final String baseUrl = getBaseUrl((HttpSolrServer) clients.get(0));\n    \n    \n    // try a bad action\n    ModifiableSolrParams params = new ModifiableSolrParams();\n    params.set(\"action\", \"BADACTION\");\n    String collectionName = \"badactioncollection\";\n    params.set(\"name\", collectionName);\n    params.set(NUM_SLICES, 2);\n    QueryRequest request = new QueryRequest(params);\n    request.setPath(\"/admin/collections\");\n    boolean gotExp = false;\n    NamedList<Object> resp = null;\n    try {\n      resp = createNewSolrServer(\"\", baseUrl).request(request);\n    } catch (SolrException e) {\n      gotExp = true;\n    }\n    assertTrue(gotExp);\n    \n    \n    // leave out required param name\n    params = new ModifiableSolrParams();\n    params.set(\"action\", CollectionAction.CREATE.toString());\n    params.set(NUM_SLICES, 2);\n    collectionName = \"collection\";\n    // No Name\n    // params.set(\"name\", collectionName);\n    if (secondConfigSet) {\n      params.set(COLLECTION_CONFIG_NAME, \"conf1\");\n    }\n    request = new QueryRequest(params);\n    request.setPath(\"/admin/collections\");\n    gotExp = false;\n    resp = null;\n    try {\n      resp = createNewSolrServer(\"\", baseUrl).request(request);\n    } catch (SolrException e) {\n      gotExp = true;\n    }\n    assertTrue(gotExp);\n    \n    // Too many replicas\n    params = new ModifiableSolrParams();\n    params.set(\"action\", CollectionAction.CREATE.toString());\n    collectionName = \"collection\";\n    params.set(\"name\", collectionName);\n    params.set(NUM_SLICES, 2);\n    if (secondConfigSet) {\n      params.set(COLLECTION_CONFIG_NAME, \"conf1\");\n    }\n    params.set(REPLICATION_FACTOR, 10);\n    request = new QueryRequest(params);\n    request.setPath(\"/admin/collections\");\n    gotExp = false;\n    resp = null;\n    try {\n      resp = createNewSolrServer(\"\", baseUrl).request(request);\n    } catch (SolrException e) {\n      gotExp = true;\n    }\n    assertTrue(gotExp);\n    \n    // No numShards should fail\n    params = new ModifiableSolrParams();\n    params.set(\"action\", CollectionAction.CREATE.toString());\n    collectionName = \"acollection\";\n    params.set(\"name\", collectionName);\n    params.set(REPLICATION_FACTOR, 10);\n    if (secondConfigSet) {\n      params.set(COLLECTION_CONFIG_NAME, \"conf1\");\n    }\n    request = new QueryRequest(params);\n    request.setPath(\"/admin/collections\");\n    gotExp = false;\n    resp = null;\n    try {\n      resp = createNewSolrServer(\"\", baseUrl).request(request);\n    } catch (SolrException e) {\n      gotExp = true;\n    }\n    assertTrue(gotExp);\n    \n    // 0 numShards should fail\n    params = new ModifiableSolrParams();\n    params.set(\"action\", CollectionAction.CREATE.toString());\n    collectionName = \"acollection\";\n    params.set(\"name\", collectionName);\n    params.set(REPLICATION_FACTOR, 10);\n    params.set(NUM_SLICES, 0);\n    if (secondConfigSet) {\n      params.set(COLLECTION_CONFIG_NAME, \"conf1\");\n    }\n    request = new QueryRequest(params);\n    request.setPath(\"/admin/collections\");\n    gotExp = false;\n    resp = null;\n    try {\n      resp = createNewSolrServer(\"\", baseUrl).request(request);\n    } catch (SolrException e) {\n      gotExp = true;\n    }\n    assertTrue(gotExp);\n    \n    // Fail on one node\n    \n    // first we make a core with the core name the collections api\n    // will try and use - this will cause our mock fail\n    Create createCmd = new Create();\n    createCmd.setCoreName(\"halfcollection_shard1_replica1\");\n    createCmd.setCollection(\"halfcollectionblocker\");\n    String dataDir = SolrTestCaseJ4.dataDir.getAbsolutePath() + File.separator\n        + System.currentTimeMillis() + \"halfcollection\" + \"_3n\";\n    createCmd.setDataDir(dataDir);\n    createCmd.setNumShards(1);\n    if (secondConfigSet) {\n      createCmd.setCollectionConfigName(\"conf1\");\n    }\n    createNewSolrServer(\"\", baseUrl).request(createCmd);\n    \n    createCmd = new Create();\n    createCmd.setCoreName(\"halfcollection_shard1_replica1\");\n    createCmd.setCollection(\"halfcollectionblocker2\");\n    dataDir = SolrTestCaseJ4.dataDir.getAbsolutePath() + File.separator\n        + System.currentTimeMillis() + \"halfcollection\" + \"_3n\";\n    createCmd.setDataDir(dataDir);\n    createCmd.setNumShards(1);\n    if (secondConfigSet) {\n      createCmd.setCollectionConfigName(\"conf1\");\n    }\n    createNewSolrServer(\"\", getBaseUrl((HttpSolrServer) clients.get(1))).request(createCmd);\n    \n    params = new ModifiableSolrParams();\n    params.set(\"action\", CollectionAction.CREATE.toString());\n    collectionName = \"halfcollection\";\n    params.set(\"name\", collectionName);\n    params.set(NUM_SLICES, 2);\n    params.set(\"wt\", \"xml\");\n    \n    if (secondConfigSet) {\n      params.set(COLLECTION_CONFIG_NAME, \"conf1\");\n    }\n    \n    String nn1 = ((SolrDispatchFilter) jettys.get(0).getDispatchFilter().getFilter()).getCores().getZkController().getNodeName();\n    String nn2 =  ((SolrDispatchFilter) jettys.get(1).getDispatchFilter().getFilter()).getCores().getZkController().getNodeName();\n    \n    params.set(OverseerCollectionProcessor.CREATE_NODE_SET, nn1 + \",\" + nn2);\n    request = new QueryRequest(params);\n    request.setPath(\"/admin/collections\");\n    gotExp = false;\n    resp = createNewSolrServer(\"\", baseUrl).request(request);\n    \n    SimpleOrderedMap success = (SimpleOrderedMap) resp.get(\"success\");\n    SimpleOrderedMap failure = (SimpleOrderedMap) resp.get(\"failure\");\n\n    assertNotNull(resp.toString(), success);\n    assertNotNull(resp.toString(), failure);\n    \n    String val1 = success.getVal(0).toString();\n    String val2 = failure.getVal(0).toString();\n    assertTrue(val1.contains(\"SolrException\") || val2.contains(\"SolrException\"));\n  }\n\n","sourceOld":"  private void testErrorHandling() throws Exception {\n    final String baseUrl = getBaseUrl((HttpSolrServer) clients.get(0));\n    \n    \n    // try a bad action\n    ModifiableSolrParams params = new ModifiableSolrParams();\n    params.set(\"action\", \"BADACTION\");\n    String collectionName = \"badactioncollection\";\n    params.set(\"name\", collectionName);\n    params.set(\"numShards\", 2);\n    QueryRequest request = new QueryRequest(params);\n    request.setPath(\"/admin/collections\");\n    boolean gotExp = false;\n    NamedList<Object> resp = null;\n    try {\n      resp = createNewSolrServer(\"\", baseUrl).request(request);\n    } catch (SolrException e) {\n      gotExp = true;\n    }\n    assertTrue(gotExp);\n    \n    \n    // leave out required param name\n    params = new ModifiableSolrParams();\n    params.set(\"action\", CollectionAction.CREATE.toString());\n    params.set(\"numShards\", 2);\n    collectionName = \"collection\";\n    // No Name\n    // params.set(\"name\", collectionName);\n    if (secondConfigSet) {\n      params.set(\"collection.configName\", \"conf1\");\n    }\n    request = new QueryRequest(params);\n    request.setPath(\"/admin/collections\");\n    gotExp = false;\n    resp = null;\n    try {\n      resp = createNewSolrServer(\"\", baseUrl).request(request);\n    } catch (SolrException e) {\n      gotExp = true;\n    }\n    assertTrue(gotExp);\n    \n    // Too many replicas\n    params = new ModifiableSolrParams();\n    params.set(\"action\", CollectionAction.CREATE.toString());\n    collectionName = \"collection\";\n    params.set(\"name\", collectionName);\n    params.set(\"numShards\", 2);\n    if (secondConfigSet) {\n      params.set(\"collection.configName\", \"conf1\");\n    }\n    params.set(REPLICATION_FACTOR, 10);\n    request = new QueryRequest(params);\n    request.setPath(\"/admin/collections\");\n    gotExp = false;\n    resp = null;\n    try {\n      resp = createNewSolrServer(\"\", baseUrl).request(request);\n    } catch (SolrException e) {\n      gotExp = true;\n    }\n    assertTrue(gotExp);\n    \n    // No numShards should fail\n    params = new ModifiableSolrParams();\n    params.set(\"action\", CollectionAction.CREATE.toString());\n    collectionName = \"acollection\";\n    params.set(\"name\", collectionName);\n    params.set(REPLICATION_FACTOR, 10);\n    if (secondConfigSet) {\n      params.set(\"collection.configName\", \"conf1\");\n    }\n    request = new QueryRequest(params);\n    request.setPath(\"/admin/collections\");\n    gotExp = false;\n    resp = null;\n    try {\n      resp = createNewSolrServer(\"\", baseUrl).request(request);\n    } catch (SolrException e) {\n      gotExp = true;\n    }\n    assertTrue(gotExp);\n    \n    // 0 numShards should fail\n    params = new ModifiableSolrParams();\n    params.set(\"action\", CollectionAction.CREATE.toString());\n    collectionName = \"acollection\";\n    params.set(\"name\", collectionName);\n    params.set(REPLICATION_FACTOR, 10);\n    params.set(\"numShards\", 0);\n    if (secondConfigSet) {\n      params.set(\"collection.configName\", \"conf1\");\n    }\n    request = new QueryRequest(params);\n    request.setPath(\"/admin/collections\");\n    gotExp = false;\n    resp = null;\n    try {\n      resp = createNewSolrServer(\"\", baseUrl).request(request);\n    } catch (SolrException e) {\n      gotExp = true;\n    }\n    assertTrue(gotExp);\n    \n    // Fail on one node\n    \n    // first we make a core with the core name the collections api\n    // will try and use - this will cause our mock fail\n    Create createCmd = new Create();\n    createCmd.setCoreName(\"halfcollection_shard1_replica1\");\n    createCmd.setCollection(\"halfcollectionblocker\");\n    String dataDir = SolrTestCaseJ4.dataDir.getAbsolutePath() + File.separator\n        + System.currentTimeMillis() + \"halfcollection\" + \"_3n\";\n    createCmd.setDataDir(dataDir);\n    createCmd.setNumShards(1);\n    if (secondConfigSet) {\n      createCmd.setCollectionConfigName(\"conf1\");\n    }\n    createNewSolrServer(\"\", baseUrl).request(createCmd);\n    \n    createCmd = new Create();\n    createCmd.setCoreName(\"halfcollection_shard1_replica1\");\n    createCmd.setCollection(\"halfcollectionblocker2\");\n    dataDir = SolrTestCaseJ4.dataDir.getAbsolutePath() + File.separator\n        + System.currentTimeMillis() + \"halfcollection\" + \"_3n\";\n    createCmd.setDataDir(dataDir);\n    createCmd.setNumShards(1);\n    if (secondConfigSet) {\n      createCmd.setCollectionConfigName(\"conf1\");\n    }\n    createNewSolrServer(\"\", getBaseUrl((HttpSolrServer) clients.get(1))).request(createCmd);\n    \n    params = new ModifiableSolrParams();\n    params.set(\"action\", CollectionAction.CREATE.toString());\n    collectionName = \"halfcollection\";\n    params.set(\"name\", collectionName);\n    params.set(\"numShards\", 2);\n    params.set(\"wt\", \"xml\");\n    \n    if (secondConfigSet) {\n      params.set(\"collection.configName\", \"conf1\");\n    }\n    \n    String nn1 = ((SolrDispatchFilter) jettys.get(0).getDispatchFilter().getFilter()).getCores().getZkController().getNodeName();\n    String nn2 =  ((SolrDispatchFilter) jettys.get(1).getDispatchFilter().getFilter()).getCores().getZkController().getNodeName();\n    \n    params.set(OverseerCollectionProcessor.CREATE_NODE_SET, nn1 + \",\" + nn2);\n    request = new QueryRequest(params);\n    request.setPath(\"/admin/collections\");\n    gotExp = false;\n    resp = createNewSolrServer(\"\", baseUrl).request(request);\n    \n    SimpleOrderedMap success = (SimpleOrderedMap) resp.get(\"success\");\n    SimpleOrderedMap failure = (SimpleOrderedMap) resp.get(\"failure\");\n\n    assertNotNull(resp.toString(), success);\n    assertNotNull(resp.toString(), failure);\n    \n    String val1 = success.getVal(0).toString();\n    String val2 = failure.getVal(0).toString();\n    assertTrue(val1.contains(\"SolrException\") || val2.contains(\"SolrException\"));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"963b0a9b072593721af39e1d9b815fba17e88e7f","date":1395120846,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/CollectionsAPIDistributedZkTest#testErrorHandling().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/CollectionsAPIDistributedZkTest#testErrorHandling().mjava","sourceNew":"  private void testErrorHandling() throws Exception {\n    final String baseUrl = getBaseUrl((HttpSolrServer) clients.get(0));\n    \n    \n    // try a bad action\n    ModifiableSolrParams params = new ModifiableSolrParams();\n    params.set(\"action\", \"BADACTION\");\n    String collectionName = \"badactioncollection\";\n    params.set(\"name\", collectionName);\n    params.set(\"numShards\", 2);\n    QueryRequest request = new QueryRequest(params);\n    request.setPath(\"/admin/collections\");\n    boolean gotExp = false;\n    NamedList<Object> resp = null;\n    try {\n      resp = createNewSolrServer(\"\", baseUrl).request(request);\n    } catch (SolrException e) {\n      gotExp = true;\n    }\n    assertTrue(gotExp);\n    \n    \n    // leave out required param name\n    params = new ModifiableSolrParams();\n    params.set(\"action\", CollectionAction.CREATE.toString());\n    params.set(\"numShards\", 2);\n    collectionName = \"collection\";\n    // No Name\n    // params.set(\"name\", collectionName);\n    if (secondConfigSet) {\n      params.set(\"collection.configName\", \"conf1\");\n    }\n    request = new QueryRequest(params);\n    request.setPath(\"/admin/collections\");\n    gotExp = false;\n    resp = null;\n    try {\n      resp = createNewSolrServer(\"\", baseUrl).request(request);\n    } catch (SolrException e) {\n      gotExp = true;\n    }\n    assertTrue(gotExp);\n    \n    // Too many replicas\n    params = new ModifiableSolrParams();\n    params.set(\"action\", CollectionAction.CREATE.toString());\n    collectionName = \"collection\";\n    params.set(\"name\", collectionName);\n    params.set(\"numShards\", 2);\n    if (secondConfigSet) {\n      params.set(\"collection.configName\", \"conf1\");\n    }\n    params.set(REPLICATION_FACTOR, 10);\n    request = new QueryRequest(params);\n    request.setPath(\"/admin/collections\");\n    gotExp = false;\n    resp = null;\n    try {\n      resp = createNewSolrServer(\"\", baseUrl).request(request);\n    } catch (SolrException e) {\n      gotExp = true;\n    }\n    assertTrue(gotExp);\n    \n    // No numShards should fail\n    params = new ModifiableSolrParams();\n    params.set(\"action\", CollectionAction.CREATE.toString());\n    collectionName = \"acollection\";\n    params.set(\"name\", collectionName);\n    params.set(REPLICATION_FACTOR, 10);\n    if (secondConfigSet) {\n      params.set(\"collection.configName\", \"conf1\");\n    }\n    request = new QueryRequest(params);\n    request.setPath(\"/admin/collections\");\n    gotExp = false;\n    resp = null;\n    try {\n      resp = createNewSolrServer(\"\", baseUrl).request(request);\n    } catch (SolrException e) {\n      gotExp = true;\n    }\n    assertTrue(gotExp);\n    \n    // 0 numShards should fail\n    params = new ModifiableSolrParams();\n    params.set(\"action\", CollectionAction.CREATE.toString());\n    collectionName = \"acollection\";\n    params.set(\"name\", collectionName);\n    params.set(REPLICATION_FACTOR, 10);\n    params.set(\"numShards\", 0);\n    if (secondConfigSet) {\n      params.set(\"collection.configName\", \"conf1\");\n    }\n    request = new QueryRequest(params);\n    request.setPath(\"/admin/collections\");\n    gotExp = false;\n    resp = null;\n    try {\n      resp = createNewSolrServer(\"\", baseUrl).request(request);\n    } catch (SolrException e) {\n      gotExp = true;\n    }\n    assertTrue(gotExp);\n    \n    // Fail on one node\n    \n    // first we make a core with the core name the collections api\n    // will try and use - this will cause our mock fail\n    Create createCmd = new Create();\n    createCmd.setCoreName(\"halfcollection_shard1_replica1\");\n    createCmd.setCollection(\"halfcollectionblocker\");\n    String dataDir = SolrTestCaseJ4.dataDir.getAbsolutePath() + File.separator\n        + System.currentTimeMillis() + \"halfcollection\" + \"_3n\";\n    createCmd.setDataDir(dataDir);\n    createCmd.setNumShards(1);\n    if (secondConfigSet) {\n      createCmd.setCollectionConfigName(\"conf1\");\n    }\n    createNewSolrServer(\"\", baseUrl).request(createCmd);\n    \n    createCmd = new Create();\n    createCmd.setCoreName(\"halfcollection_shard1_replica1\");\n    createCmd.setCollection(\"halfcollectionblocker2\");\n    dataDir = SolrTestCaseJ4.dataDir.getAbsolutePath() + File.separator\n        + System.currentTimeMillis() + \"halfcollection\" + \"_3n\";\n    createCmd.setDataDir(dataDir);\n    createCmd.setNumShards(1);\n    if (secondConfigSet) {\n      createCmd.setCollectionConfigName(\"conf1\");\n    }\n    createNewSolrServer(\"\", getBaseUrl((HttpSolrServer) clients.get(1))).request(createCmd);\n    \n    params = new ModifiableSolrParams();\n    params.set(\"action\", CollectionAction.CREATE.toString());\n    collectionName = \"halfcollection\";\n    params.set(\"name\", collectionName);\n    params.set(\"numShards\", 2);\n    params.set(\"wt\", \"xml\");\n    \n    if (secondConfigSet) {\n      params.set(\"collection.configName\", \"conf1\");\n    }\n    \n    String nn1 = ((SolrDispatchFilter) jettys.get(0).getDispatchFilter().getFilter()).getCores().getZkController().getNodeName();\n    String nn2 =  ((SolrDispatchFilter) jettys.get(1).getDispatchFilter().getFilter()).getCores().getZkController().getNodeName();\n    \n    params.set(OverseerCollectionProcessor.CREATE_NODE_SET, nn1 + \",\" + nn2);\n    request = new QueryRequest(params);\n    request.setPath(\"/admin/collections\");\n    gotExp = false;\n    resp = createNewSolrServer(\"\", baseUrl).request(request);\n    \n    SimpleOrderedMap success = (SimpleOrderedMap) resp.get(\"success\");\n    SimpleOrderedMap failure = (SimpleOrderedMap) resp.get(\"failure\");\n\n    assertNotNull(resp.toString(), success);\n    assertNotNull(resp.toString(), failure);\n    \n    String val1 = success.getVal(0).toString();\n    String val2 = failure.getVal(0).toString();\n    assertTrue(val1.contains(\"SolrException\") || val2.contains(\"SolrException\"));\n  }\n\n","sourceOld":"  private void testErrorHandling() throws Exception {\n    final String baseUrl = getBaseUrl((HttpSolrServer) clients.get(0));\n    \n    \n    // try a bad action\n    ModifiableSolrParams params = new ModifiableSolrParams();\n    params.set(\"action\", \"BADACTION\");\n    String collectionName = \"badactioncollection\";\n    params.set(\"name\", collectionName);\n    params.set(NUM_SLICES, 2);\n    QueryRequest request = new QueryRequest(params);\n    request.setPath(\"/admin/collections\");\n    boolean gotExp = false;\n    NamedList<Object> resp = null;\n    try {\n      resp = createNewSolrServer(\"\", baseUrl).request(request);\n    } catch (SolrException e) {\n      gotExp = true;\n    }\n    assertTrue(gotExp);\n    \n    \n    // leave out required param name\n    params = new ModifiableSolrParams();\n    params.set(\"action\", CollectionAction.CREATE.toString());\n    params.set(NUM_SLICES, 2);\n    collectionName = \"collection\";\n    // No Name\n    // params.set(\"name\", collectionName);\n    if (secondConfigSet) {\n      params.set(COLLECTION_CONFIG_NAME, \"conf1\");\n    }\n    request = new QueryRequest(params);\n    request.setPath(\"/admin/collections\");\n    gotExp = false;\n    resp = null;\n    try {\n      resp = createNewSolrServer(\"\", baseUrl).request(request);\n    } catch (SolrException e) {\n      gotExp = true;\n    }\n    assertTrue(gotExp);\n    \n    // Too many replicas\n    params = new ModifiableSolrParams();\n    params.set(\"action\", CollectionAction.CREATE.toString());\n    collectionName = \"collection\";\n    params.set(\"name\", collectionName);\n    params.set(NUM_SLICES, 2);\n    if (secondConfigSet) {\n      params.set(COLLECTION_CONFIG_NAME, \"conf1\");\n    }\n    params.set(REPLICATION_FACTOR, 10);\n    request = new QueryRequest(params);\n    request.setPath(\"/admin/collections\");\n    gotExp = false;\n    resp = null;\n    try {\n      resp = createNewSolrServer(\"\", baseUrl).request(request);\n    } catch (SolrException e) {\n      gotExp = true;\n    }\n    assertTrue(gotExp);\n    \n    // No numShards should fail\n    params = new ModifiableSolrParams();\n    params.set(\"action\", CollectionAction.CREATE.toString());\n    collectionName = \"acollection\";\n    params.set(\"name\", collectionName);\n    params.set(REPLICATION_FACTOR, 10);\n    if (secondConfigSet) {\n      params.set(COLLECTION_CONFIG_NAME, \"conf1\");\n    }\n    request = new QueryRequest(params);\n    request.setPath(\"/admin/collections\");\n    gotExp = false;\n    resp = null;\n    try {\n      resp = createNewSolrServer(\"\", baseUrl).request(request);\n    } catch (SolrException e) {\n      gotExp = true;\n    }\n    assertTrue(gotExp);\n    \n    // 0 numShards should fail\n    params = new ModifiableSolrParams();\n    params.set(\"action\", CollectionAction.CREATE.toString());\n    collectionName = \"acollection\";\n    params.set(\"name\", collectionName);\n    params.set(REPLICATION_FACTOR, 10);\n    params.set(NUM_SLICES, 0);\n    if (secondConfigSet) {\n      params.set(COLLECTION_CONFIG_NAME, \"conf1\");\n    }\n    request = new QueryRequest(params);\n    request.setPath(\"/admin/collections\");\n    gotExp = false;\n    resp = null;\n    try {\n      resp = createNewSolrServer(\"\", baseUrl).request(request);\n    } catch (SolrException e) {\n      gotExp = true;\n    }\n    assertTrue(gotExp);\n    \n    // Fail on one node\n    \n    // first we make a core with the core name the collections api\n    // will try and use - this will cause our mock fail\n    Create createCmd = new Create();\n    createCmd.setCoreName(\"halfcollection_shard1_replica1\");\n    createCmd.setCollection(\"halfcollectionblocker\");\n    String dataDir = SolrTestCaseJ4.dataDir.getAbsolutePath() + File.separator\n        + System.currentTimeMillis() + \"halfcollection\" + \"_3n\";\n    createCmd.setDataDir(dataDir);\n    createCmd.setNumShards(1);\n    if (secondConfigSet) {\n      createCmd.setCollectionConfigName(\"conf1\");\n    }\n    createNewSolrServer(\"\", baseUrl).request(createCmd);\n    \n    createCmd = new Create();\n    createCmd.setCoreName(\"halfcollection_shard1_replica1\");\n    createCmd.setCollection(\"halfcollectionblocker2\");\n    dataDir = SolrTestCaseJ4.dataDir.getAbsolutePath() + File.separator\n        + System.currentTimeMillis() + \"halfcollection\" + \"_3n\";\n    createCmd.setDataDir(dataDir);\n    createCmd.setNumShards(1);\n    if (secondConfigSet) {\n      createCmd.setCollectionConfigName(\"conf1\");\n    }\n    createNewSolrServer(\"\", getBaseUrl((HttpSolrServer) clients.get(1))).request(createCmd);\n    \n    params = new ModifiableSolrParams();\n    params.set(\"action\", CollectionAction.CREATE.toString());\n    collectionName = \"halfcollection\";\n    params.set(\"name\", collectionName);\n    params.set(NUM_SLICES, 2);\n    params.set(\"wt\", \"xml\");\n    \n    if (secondConfigSet) {\n      params.set(COLLECTION_CONFIG_NAME, \"conf1\");\n    }\n    \n    String nn1 = ((SolrDispatchFilter) jettys.get(0).getDispatchFilter().getFilter()).getCores().getZkController().getNodeName();\n    String nn2 =  ((SolrDispatchFilter) jettys.get(1).getDispatchFilter().getFilter()).getCores().getZkController().getNodeName();\n    \n    params.set(OverseerCollectionProcessor.CREATE_NODE_SET, nn1 + \",\" + nn2);\n    request = new QueryRequest(params);\n    request.setPath(\"/admin/collections\");\n    gotExp = false;\n    resp = createNewSolrServer(\"\", baseUrl).request(request);\n    \n    SimpleOrderedMap success = (SimpleOrderedMap) resp.get(\"success\");\n    SimpleOrderedMap failure = (SimpleOrderedMap) resp.get(\"failure\");\n\n    assertNotNull(resp.toString(), success);\n    assertNotNull(resp.toString(), failure);\n    \n    String val1 = success.getVal(0).toString();\n    String val2 = failure.getVal(0).toString();\n    assertTrue(val1.contains(\"SolrException\") || val2.contains(\"SolrException\"));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"bb1f22cfa77230b5f05b7784feae5367f6bbb488","date":1395968145,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/CollectionsAPIDistributedZkTest#testErrorHandling().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/CollectionsAPIDistributedZkTest#testErrorHandling().mjava","sourceNew":"  private void testErrorHandling() throws Exception {\n    final String baseUrl = getBaseUrl((HttpSolrServer) clients.get(0));\n    \n    \n    // try a bad action\n    ModifiableSolrParams params = new ModifiableSolrParams();\n    params.set(\"action\", \"BADACTION\");\n    String collectionName = \"badactioncollection\";\n    params.set(\"name\", collectionName);\n    params.set(\"numShards\", 2);\n    QueryRequest request = new QueryRequest(params);\n    request.setPath(\"/admin/collections\");\n    boolean gotExp = false;\n    NamedList<Object> resp = null;\n    try {\n      resp = createNewSolrServer(\"\", baseUrl).request(request);\n    } catch (SolrException e) {\n      gotExp = true;\n    }\n    assertTrue(gotExp);\n    \n    \n    // leave out required param name\n    params = new ModifiableSolrParams();\n    params.set(\"action\", CollectionAction.CREATE.toString());\n    params.set(\"numShards\", 2);\n    collectionName = \"collection\";\n    // No Name\n    // params.set(\"name\", collectionName);\n    if (secondConfigSet) {\n      params.set(\"collection.configName\", \"conf1\");\n    }\n    request = new QueryRequest(params);\n    request.setPath(\"/admin/collections\");\n    gotExp = false;\n    resp = null;\n    try {\n      resp = createNewSolrServer(\"\", baseUrl).request(request);\n    } catch (SolrException e) {\n      gotExp = true;\n    }\n    assertTrue(gotExp);\n    \n    // Too many replicas\n    params = new ModifiableSolrParams();\n    params.set(\"action\", CollectionAction.CREATE.toString());\n    collectionName = \"collection\";\n    params.set(\"name\", collectionName);\n    params.set(\"numShards\", 2);\n    if (secondConfigSet) {\n      params.set(\"collection.configName\", \"conf1\");\n    }\n    params.set(REPLICATION_FACTOR, 10);\n    request = new QueryRequest(params);\n    request.setPath(\"/admin/collections\");\n    gotExp = false;\n    resp = null;\n    try {\n      resp = createNewSolrServer(\"\", baseUrl).request(request);\n    } catch (SolrException e) {\n      gotExp = true;\n    }\n    assertTrue(gotExp);\n    \n    // No numShards should fail\n    params = new ModifiableSolrParams();\n    params.set(\"action\", CollectionAction.CREATE.toString());\n    collectionName = \"acollection\";\n    params.set(\"name\", collectionName);\n    params.set(REPLICATION_FACTOR, 10);\n    if (secondConfigSet) {\n      params.set(\"collection.configName\", \"conf1\");\n    }\n    request = new QueryRequest(params);\n    request.setPath(\"/admin/collections\");\n    gotExp = false;\n    resp = null;\n    try {\n      resp = createNewSolrServer(\"\", baseUrl).request(request);\n    } catch (SolrException e) {\n      gotExp = true;\n    }\n    assertTrue(gotExp);\n    \n    // 0 numShards should fail\n    params = new ModifiableSolrParams();\n    params.set(\"action\", CollectionAction.CREATE.toString());\n    collectionName = \"acollection\";\n    params.set(\"name\", collectionName);\n    params.set(REPLICATION_FACTOR, 10);\n    params.set(\"numShards\", 0);\n    if (secondConfigSet) {\n      params.set(\"collection.configName\", \"conf1\");\n    }\n    request = new QueryRequest(params);\n    request.setPath(\"/admin/collections\");\n    gotExp = false;\n    resp = null;\n    try {\n      resp = createNewSolrServer(\"\", baseUrl).request(request);\n    } catch (SolrException e) {\n      gotExp = true;\n    }\n    assertTrue(gotExp);\n    \n    // Fail on one node\n    \n    // first we make a core with the core name the collections api\n    // will try and use - this will cause our mock fail\n    Create createCmd = new Create();\n    createCmd.setCoreName(\"halfcollection_shard1_replica1\");\n    createCmd.setCollection(\"halfcollectionblocker\");\n    String dataDir = createTempDir().getAbsolutePath();\n    createCmd.setDataDir(dataDir);\n    createCmd.setNumShards(1);\n    if (secondConfigSet) {\n      createCmd.setCollectionConfigName(\"conf1\");\n    }\n    createNewSolrServer(\"\", baseUrl).request(createCmd);\n    \n    createCmd = new Create();\n    createCmd.setCoreName(\"halfcollection_shard1_replica1\");\n    createCmd.setCollection(\"halfcollectionblocker2\");\n    dataDir = createTempDir().getAbsolutePath();\n    createCmd.setDataDir(dataDir);\n    createCmd.setNumShards(1);\n    if (secondConfigSet) {\n      createCmd.setCollectionConfigName(\"conf1\");\n    }\n    createNewSolrServer(\"\", getBaseUrl((HttpSolrServer) clients.get(1))).request(createCmd);\n    \n    params = new ModifiableSolrParams();\n    params.set(\"action\", CollectionAction.CREATE.toString());\n    collectionName = \"halfcollection\";\n    params.set(\"name\", collectionName);\n    params.set(\"numShards\", 2);\n    params.set(\"wt\", \"xml\");\n    \n    if (secondConfigSet) {\n      params.set(\"collection.configName\", \"conf1\");\n    }\n    \n    String nn1 = ((SolrDispatchFilter) jettys.get(0).getDispatchFilter().getFilter()).getCores().getZkController().getNodeName();\n    String nn2 =  ((SolrDispatchFilter) jettys.get(1).getDispatchFilter().getFilter()).getCores().getZkController().getNodeName();\n    \n    params.set(OverseerCollectionProcessor.CREATE_NODE_SET, nn1 + \",\" + nn2);\n    request = new QueryRequest(params);\n    request.setPath(\"/admin/collections\");\n    gotExp = false;\n    resp = createNewSolrServer(\"\", baseUrl).request(request);\n    \n    SimpleOrderedMap success = (SimpleOrderedMap) resp.get(\"success\");\n    SimpleOrderedMap failure = (SimpleOrderedMap) resp.get(\"failure\");\n\n    assertNotNull(resp.toString(), success);\n    assertNotNull(resp.toString(), failure);\n    \n    String val1 = success.getVal(0).toString();\n    String val2 = failure.getVal(0).toString();\n    assertTrue(val1.contains(\"SolrException\") || val2.contains(\"SolrException\"));\n  }\n\n","sourceOld":"  private void testErrorHandling() throws Exception {\n    final String baseUrl = getBaseUrl((HttpSolrServer) clients.get(0));\n    \n    \n    // try a bad action\n    ModifiableSolrParams params = new ModifiableSolrParams();\n    params.set(\"action\", \"BADACTION\");\n    String collectionName = \"badactioncollection\";\n    params.set(\"name\", collectionName);\n    params.set(\"numShards\", 2);\n    QueryRequest request = new QueryRequest(params);\n    request.setPath(\"/admin/collections\");\n    boolean gotExp = false;\n    NamedList<Object> resp = null;\n    try {\n      resp = createNewSolrServer(\"\", baseUrl).request(request);\n    } catch (SolrException e) {\n      gotExp = true;\n    }\n    assertTrue(gotExp);\n    \n    \n    // leave out required param name\n    params = new ModifiableSolrParams();\n    params.set(\"action\", CollectionAction.CREATE.toString());\n    params.set(\"numShards\", 2);\n    collectionName = \"collection\";\n    // No Name\n    // params.set(\"name\", collectionName);\n    if (secondConfigSet) {\n      params.set(\"collection.configName\", \"conf1\");\n    }\n    request = new QueryRequest(params);\n    request.setPath(\"/admin/collections\");\n    gotExp = false;\n    resp = null;\n    try {\n      resp = createNewSolrServer(\"\", baseUrl).request(request);\n    } catch (SolrException e) {\n      gotExp = true;\n    }\n    assertTrue(gotExp);\n    \n    // Too many replicas\n    params = new ModifiableSolrParams();\n    params.set(\"action\", CollectionAction.CREATE.toString());\n    collectionName = \"collection\";\n    params.set(\"name\", collectionName);\n    params.set(\"numShards\", 2);\n    if (secondConfigSet) {\n      params.set(\"collection.configName\", \"conf1\");\n    }\n    params.set(REPLICATION_FACTOR, 10);\n    request = new QueryRequest(params);\n    request.setPath(\"/admin/collections\");\n    gotExp = false;\n    resp = null;\n    try {\n      resp = createNewSolrServer(\"\", baseUrl).request(request);\n    } catch (SolrException e) {\n      gotExp = true;\n    }\n    assertTrue(gotExp);\n    \n    // No numShards should fail\n    params = new ModifiableSolrParams();\n    params.set(\"action\", CollectionAction.CREATE.toString());\n    collectionName = \"acollection\";\n    params.set(\"name\", collectionName);\n    params.set(REPLICATION_FACTOR, 10);\n    if (secondConfigSet) {\n      params.set(\"collection.configName\", \"conf1\");\n    }\n    request = new QueryRequest(params);\n    request.setPath(\"/admin/collections\");\n    gotExp = false;\n    resp = null;\n    try {\n      resp = createNewSolrServer(\"\", baseUrl).request(request);\n    } catch (SolrException e) {\n      gotExp = true;\n    }\n    assertTrue(gotExp);\n    \n    // 0 numShards should fail\n    params = new ModifiableSolrParams();\n    params.set(\"action\", CollectionAction.CREATE.toString());\n    collectionName = \"acollection\";\n    params.set(\"name\", collectionName);\n    params.set(REPLICATION_FACTOR, 10);\n    params.set(\"numShards\", 0);\n    if (secondConfigSet) {\n      params.set(\"collection.configName\", \"conf1\");\n    }\n    request = new QueryRequest(params);\n    request.setPath(\"/admin/collections\");\n    gotExp = false;\n    resp = null;\n    try {\n      resp = createNewSolrServer(\"\", baseUrl).request(request);\n    } catch (SolrException e) {\n      gotExp = true;\n    }\n    assertTrue(gotExp);\n    \n    // Fail on one node\n    \n    // first we make a core with the core name the collections api\n    // will try and use - this will cause our mock fail\n    Create createCmd = new Create();\n    createCmd.setCoreName(\"halfcollection_shard1_replica1\");\n    createCmd.setCollection(\"halfcollectionblocker\");\n    String dataDir = SolrTestCaseJ4.dataDir.getAbsolutePath() + File.separator\n        + System.currentTimeMillis() + \"halfcollection\" + \"_3n\";\n    createCmd.setDataDir(dataDir);\n    createCmd.setNumShards(1);\n    if (secondConfigSet) {\n      createCmd.setCollectionConfigName(\"conf1\");\n    }\n    createNewSolrServer(\"\", baseUrl).request(createCmd);\n    \n    createCmd = new Create();\n    createCmd.setCoreName(\"halfcollection_shard1_replica1\");\n    createCmd.setCollection(\"halfcollectionblocker2\");\n    dataDir = SolrTestCaseJ4.dataDir.getAbsolutePath() + File.separator\n        + System.currentTimeMillis() + \"halfcollection\" + \"_3n\";\n    createCmd.setDataDir(dataDir);\n    createCmd.setNumShards(1);\n    if (secondConfigSet) {\n      createCmd.setCollectionConfigName(\"conf1\");\n    }\n    createNewSolrServer(\"\", getBaseUrl((HttpSolrServer) clients.get(1))).request(createCmd);\n    \n    params = new ModifiableSolrParams();\n    params.set(\"action\", CollectionAction.CREATE.toString());\n    collectionName = \"halfcollection\";\n    params.set(\"name\", collectionName);\n    params.set(\"numShards\", 2);\n    params.set(\"wt\", \"xml\");\n    \n    if (secondConfigSet) {\n      params.set(\"collection.configName\", \"conf1\");\n    }\n    \n    String nn1 = ((SolrDispatchFilter) jettys.get(0).getDispatchFilter().getFilter()).getCores().getZkController().getNodeName();\n    String nn2 =  ((SolrDispatchFilter) jettys.get(1).getDispatchFilter().getFilter()).getCores().getZkController().getNodeName();\n    \n    params.set(OverseerCollectionProcessor.CREATE_NODE_SET, nn1 + \",\" + nn2);\n    request = new QueryRequest(params);\n    request.setPath(\"/admin/collections\");\n    gotExp = false;\n    resp = createNewSolrServer(\"\", baseUrl).request(request);\n    \n    SimpleOrderedMap success = (SimpleOrderedMap) resp.get(\"success\");\n    SimpleOrderedMap failure = (SimpleOrderedMap) resp.get(\"failure\");\n\n    assertNotNull(resp.toString(), success);\n    assertNotNull(resp.toString(), failure);\n    \n    String val1 = success.getVal(0).toString();\n    String val2 = failure.getVal(0).toString();\n    assertTrue(val1.contains(\"SolrException\") || val2.contains(\"SolrException\"));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"2a0f5bb79c600763ffe7b8141df59a3169d31e48","date":1396689440,"type":3,"author":"Dawid Weiss","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/cloud/CollectionsAPIDistributedZkTest#testErrorHandling().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/CollectionsAPIDistributedZkTest#testErrorHandling().mjava","sourceNew":"  private void testErrorHandling() throws Exception {\n    final String baseUrl = getBaseUrl((HttpSolrServer) clients.get(0));\n    \n    \n    // try a bad action\n    ModifiableSolrParams params = new ModifiableSolrParams();\n    params.set(\"action\", \"BADACTION\");\n    String collectionName = \"badactioncollection\";\n    params.set(\"name\", collectionName);\n    params.set(\"numShards\", 2);\n    QueryRequest request = new QueryRequest(params);\n    request.setPath(\"/admin/collections\");\n    boolean gotExp = false;\n    NamedList<Object> resp = null;\n    try {\n      resp = createNewSolrServer(\"\", baseUrl).request(request);\n    } catch (SolrException e) {\n      gotExp = true;\n    }\n    assertTrue(gotExp);\n    \n    \n    // leave out required param name\n    params = new ModifiableSolrParams();\n    params.set(\"action\", CollectionAction.CREATE.toString());\n    params.set(\"numShards\", 2);\n    collectionName = \"collection\";\n    // No Name\n    // params.set(\"name\", collectionName);\n    if (secondConfigSet) {\n      params.set(\"collection.configName\", \"conf1\");\n    }\n    request = new QueryRequest(params);\n    request.setPath(\"/admin/collections\");\n    gotExp = false;\n    resp = null;\n    try {\n      resp = createNewSolrServer(\"\", baseUrl).request(request);\n    } catch (SolrException e) {\n      gotExp = true;\n    }\n    assertTrue(gotExp);\n    \n    // Too many replicas\n    params = new ModifiableSolrParams();\n    params.set(\"action\", CollectionAction.CREATE.toString());\n    collectionName = \"collection\";\n    params.set(\"name\", collectionName);\n    params.set(\"numShards\", 2);\n    if (secondConfigSet) {\n      params.set(\"collection.configName\", \"conf1\");\n    }\n    params.set(REPLICATION_FACTOR, 10);\n    request = new QueryRequest(params);\n    request.setPath(\"/admin/collections\");\n    gotExp = false;\n    resp = null;\n    try {\n      resp = createNewSolrServer(\"\", baseUrl).request(request);\n    } catch (SolrException e) {\n      gotExp = true;\n    }\n    assertTrue(gotExp);\n    \n    // No numShards should fail\n    params = new ModifiableSolrParams();\n    params.set(\"action\", CollectionAction.CREATE.toString());\n    collectionName = \"acollection\";\n    params.set(\"name\", collectionName);\n    params.set(REPLICATION_FACTOR, 10);\n    if (secondConfigSet) {\n      params.set(\"collection.configName\", \"conf1\");\n    }\n    request = new QueryRequest(params);\n    request.setPath(\"/admin/collections\");\n    gotExp = false;\n    resp = null;\n    try {\n      resp = createNewSolrServer(\"\", baseUrl).request(request);\n    } catch (SolrException e) {\n      gotExp = true;\n    }\n    assertTrue(gotExp);\n    \n    // 0 numShards should fail\n    params = new ModifiableSolrParams();\n    params.set(\"action\", CollectionAction.CREATE.toString());\n    collectionName = \"acollection\";\n    params.set(\"name\", collectionName);\n    params.set(REPLICATION_FACTOR, 10);\n    params.set(\"numShards\", 0);\n    if (secondConfigSet) {\n      params.set(\"collection.configName\", \"conf1\");\n    }\n    request = new QueryRequest(params);\n    request.setPath(\"/admin/collections\");\n    gotExp = false;\n    resp = null;\n    try {\n      resp = createNewSolrServer(\"\", baseUrl).request(request);\n    } catch (SolrException e) {\n      gotExp = true;\n    }\n    assertTrue(gotExp);\n    \n    // Fail on one node\n    \n    // first we make a core with the core name the collections api\n    // will try and use - this will cause our mock fail\n    Create createCmd = new Create();\n    createCmd.setCoreName(\"halfcollection_shard1_replica1\");\n    createCmd.setCollection(\"halfcollectionblocker\");\n    String dataDir = createTempDir().getAbsolutePath();\n    createCmd.setDataDir(dataDir);\n    createCmd.setNumShards(1);\n    if (secondConfigSet) {\n      createCmd.setCollectionConfigName(\"conf1\");\n    }\n    createNewSolrServer(\"\", baseUrl).request(createCmd);\n    \n    createCmd = new Create();\n    createCmd.setCoreName(\"halfcollection_shard1_replica1\");\n    createCmd.setCollection(\"halfcollectionblocker2\");\n    dataDir = createTempDir().getAbsolutePath();\n    createCmd.setDataDir(dataDir);\n    createCmd.setNumShards(1);\n    if (secondConfigSet) {\n      createCmd.setCollectionConfigName(\"conf1\");\n    }\n    createNewSolrServer(\"\", getBaseUrl((HttpSolrServer) clients.get(1))).request(createCmd);\n    \n    params = new ModifiableSolrParams();\n    params.set(\"action\", CollectionAction.CREATE.toString());\n    collectionName = \"halfcollection\";\n    params.set(\"name\", collectionName);\n    params.set(\"numShards\", 2);\n    params.set(\"wt\", \"xml\");\n    \n    if (secondConfigSet) {\n      params.set(\"collection.configName\", \"conf1\");\n    }\n    \n    String nn1 = ((SolrDispatchFilter) jettys.get(0).getDispatchFilter().getFilter()).getCores().getZkController().getNodeName();\n    String nn2 =  ((SolrDispatchFilter) jettys.get(1).getDispatchFilter().getFilter()).getCores().getZkController().getNodeName();\n    \n    params.set(OverseerCollectionProcessor.CREATE_NODE_SET, nn1 + \",\" + nn2);\n    request = new QueryRequest(params);\n    request.setPath(\"/admin/collections\");\n    gotExp = false;\n    resp = createNewSolrServer(\"\", baseUrl).request(request);\n    \n    SimpleOrderedMap success = (SimpleOrderedMap) resp.get(\"success\");\n    SimpleOrderedMap failure = (SimpleOrderedMap) resp.get(\"failure\");\n\n    assertNotNull(resp.toString(), success);\n    assertNotNull(resp.toString(), failure);\n    \n    String val1 = success.getVal(0).toString();\n    String val2 = failure.getVal(0).toString();\n    assertTrue(val1.contains(\"SolrException\") || val2.contains(\"SolrException\"));\n  }\n\n","sourceOld":"  private void testErrorHandling() throws Exception {\n    final String baseUrl = getBaseUrl((HttpSolrServer) clients.get(0));\n    \n    \n    // try a bad action\n    ModifiableSolrParams params = new ModifiableSolrParams();\n    params.set(\"action\", \"BADACTION\");\n    String collectionName = \"badactioncollection\";\n    params.set(\"name\", collectionName);\n    params.set(\"numShards\", 2);\n    QueryRequest request = new QueryRequest(params);\n    request.setPath(\"/admin/collections\");\n    boolean gotExp = false;\n    NamedList<Object> resp = null;\n    try {\n      resp = createNewSolrServer(\"\", baseUrl).request(request);\n    } catch (SolrException e) {\n      gotExp = true;\n    }\n    assertTrue(gotExp);\n    \n    \n    // leave out required param name\n    params = new ModifiableSolrParams();\n    params.set(\"action\", CollectionAction.CREATE.toString());\n    params.set(\"numShards\", 2);\n    collectionName = \"collection\";\n    // No Name\n    // params.set(\"name\", collectionName);\n    if (secondConfigSet) {\n      params.set(\"collection.configName\", \"conf1\");\n    }\n    request = new QueryRequest(params);\n    request.setPath(\"/admin/collections\");\n    gotExp = false;\n    resp = null;\n    try {\n      resp = createNewSolrServer(\"\", baseUrl).request(request);\n    } catch (SolrException e) {\n      gotExp = true;\n    }\n    assertTrue(gotExp);\n    \n    // Too many replicas\n    params = new ModifiableSolrParams();\n    params.set(\"action\", CollectionAction.CREATE.toString());\n    collectionName = \"collection\";\n    params.set(\"name\", collectionName);\n    params.set(\"numShards\", 2);\n    if (secondConfigSet) {\n      params.set(\"collection.configName\", \"conf1\");\n    }\n    params.set(REPLICATION_FACTOR, 10);\n    request = new QueryRequest(params);\n    request.setPath(\"/admin/collections\");\n    gotExp = false;\n    resp = null;\n    try {\n      resp = createNewSolrServer(\"\", baseUrl).request(request);\n    } catch (SolrException e) {\n      gotExp = true;\n    }\n    assertTrue(gotExp);\n    \n    // No numShards should fail\n    params = new ModifiableSolrParams();\n    params.set(\"action\", CollectionAction.CREATE.toString());\n    collectionName = \"acollection\";\n    params.set(\"name\", collectionName);\n    params.set(REPLICATION_FACTOR, 10);\n    if (secondConfigSet) {\n      params.set(\"collection.configName\", \"conf1\");\n    }\n    request = new QueryRequest(params);\n    request.setPath(\"/admin/collections\");\n    gotExp = false;\n    resp = null;\n    try {\n      resp = createNewSolrServer(\"\", baseUrl).request(request);\n    } catch (SolrException e) {\n      gotExp = true;\n    }\n    assertTrue(gotExp);\n    \n    // 0 numShards should fail\n    params = new ModifiableSolrParams();\n    params.set(\"action\", CollectionAction.CREATE.toString());\n    collectionName = \"acollection\";\n    params.set(\"name\", collectionName);\n    params.set(REPLICATION_FACTOR, 10);\n    params.set(\"numShards\", 0);\n    if (secondConfigSet) {\n      params.set(\"collection.configName\", \"conf1\");\n    }\n    request = new QueryRequest(params);\n    request.setPath(\"/admin/collections\");\n    gotExp = false;\n    resp = null;\n    try {\n      resp = createNewSolrServer(\"\", baseUrl).request(request);\n    } catch (SolrException e) {\n      gotExp = true;\n    }\n    assertTrue(gotExp);\n    \n    // Fail on one node\n    \n    // first we make a core with the core name the collections api\n    // will try and use - this will cause our mock fail\n    Create createCmd = new Create();\n    createCmd.setCoreName(\"halfcollection_shard1_replica1\");\n    createCmd.setCollection(\"halfcollectionblocker\");\n    String dataDir = SolrTestCaseJ4.dataDir.getAbsolutePath() + File.separator\n        + System.currentTimeMillis() + \"halfcollection\" + \"_3n\";\n    createCmd.setDataDir(dataDir);\n    createCmd.setNumShards(1);\n    if (secondConfigSet) {\n      createCmd.setCollectionConfigName(\"conf1\");\n    }\n    createNewSolrServer(\"\", baseUrl).request(createCmd);\n    \n    createCmd = new Create();\n    createCmd.setCoreName(\"halfcollection_shard1_replica1\");\n    createCmd.setCollection(\"halfcollectionblocker2\");\n    dataDir = SolrTestCaseJ4.dataDir.getAbsolutePath() + File.separator\n        + System.currentTimeMillis() + \"halfcollection\" + \"_3n\";\n    createCmd.setDataDir(dataDir);\n    createCmd.setNumShards(1);\n    if (secondConfigSet) {\n      createCmd.setCollectionConfigName(\"conf1\");\n    }\n    createNewSolrServer(\"\", getBaseUrl((HttpSolrServer) clients.get(1))).request(createCmd);\n    \n    params = new ModifiableSolrParams();\n    params.set(\"action\", CollectionAction.CREATE.toString());\n    collectionName = \"halfcollection\";\n    params.set(\"name\", collectionName);\n    params.set(\"numShards\", 2);\n    params.set(\"wt\", \"xml\");\n    \n    if (secondConfigSet) {\n      params.set(\"collection.configName\", \"conf1\");\n    }\n    \n    String nn1 = ((SolrDispatchFilter) jettys.get(0).getDispatchFilter().getFilter()).getCores().getZkController().getNodeName();\n    String nn2 =  ((SolrDispatchFilter) jettys.get(1).getDispatchFilter().getFilter()).getCores().getZkController().getNodeName();\n    \n    params.set(OverseerCollectionProcessor.CREATE_NODE_SET, nn1 + \",\" + nn2);\n    request = new QueryRequest(params);\n    request.setPath(\"/admin/collections\");\n    gotExp = false;\n    resp = createNewSolrServer(\"\", baseUrl).request(request);\n    \n    SimpleOrderedMap success = (SimpleOrderedMap) resp.get(\"success\");\n    SimpleOrderedMap failure = (SimpleOrderedMap) resp.get(\"failure\");\n\n    assertNotNull(resp.toString(), success);\n    assertNotNull(resp.toString(), failure);\n    \n    String val1 = success.getVal(0).toString();\n    String val2 = failure.getVal(0).toString();\n    assertTrue(val1.contains(\"SolrException\") || val2.contains(\"SolrException\"));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"4a7d7ef06ef6f04ba2de657e90e0458048a967c6","date":1409691631,"type":3,"author":"Anshum Gupta","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/CollectionsAPIDistributedZkTest#testErrorHandling().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/CollectionsAPIDistributedZkTest#testErrorHandling().mjava","sourceNew":"  private void testErrorHandling() throws Exception {\n    final String baseUrl = getBaseUrl((HttpSolrServer) clients.get(0));\n    \n    \n    // try a bad action\n    ModifiableSolrParams params = new ModifiableSolrParams();\n    params.set(\"action\", \"BADACTION\");\n    String collectionName = \"badactioncollection\";\n    params.set(\"name\", collectionName);\n    params.set(\"numShards\", 2);\n    QueryRequest request = new QueryRequest(params);\n    request.setPath(\"/admin/collections\");\n    boolean gotExp = false;\n    NamedList<Object> resp = null;\n    try {\n      resp = createNewSolrServer(\"\", baseUrl).request(request);\n    } catch (SolrException e) {\n      gotExp = true;\n    }\n    assertTrue(gotExp);\n    \n    \n    // leave out required param name\n    params = new ModifiableSolrParams();\n    params.set(\"action\", CollectionAction.CREATE.toString());\n    params.set(\"numShards\", 2);\n    collectionName = \"collection\";\n    // No Name\n    // params.set(\"name\", collectionName);\n    if (secondConfigSet) {\n      params.set(\"collection.configName\", \"conf1\");\n    }\n    request = new QueryRequest(params);\n    request.setPath(\"/admin/collections\");\n    gotExp = false;\n    resp = null;\n    try {\n      resp = createNewSolrServer(\"\", baseUrl).request(request);\n    } catch (SolrException e) {\n      gotExp = true;\n    }\n    assertTrue(gotExp);\n    \n    // Too many replicas\n    params = new ModifiableSolrParams();\n    params.set(\"action\", CollectionAction.CREATE.toString());\n    collectionName = \"collection\";\n    params.set(\"name\", collectionName);\n    params.set(\"numShards\", 2);\n    if (secondConfigSet) {\n      params.set(\"collection.configName\", \"conf1\");\n    }\n    params.set(REPLICATION_FACTOR, 10);\n    request = new QueryRequest(params);\n    request.setPath(\"/admin/collections\");\n    gotExp = false;\n    try {\n      resp = createNewSolrServer(\"\", baseUrl).request(request);\n    } catch (SolrException e) {\n      gotExp = true;\n    }\n    assertTrue(gotExp);\n    \n    // No numShards should fail\n    params = new ModifiableSolrParams();\n    params.set(\"action\", CollectionAction.CREATE.toString());\n    collectionName = \"acollection\";\n    params.set(\"name\", collectionName);\n    params.set(REPLICATION_FACTOR, 10);\n    if (secondConfigSet) {\n      params.set(\"collection.configName\", \"conf1\");\n    }\n    request = new QueryRequest(params);\n    request.setPath(\"/admin/collections\");\n    gotExp = false;\n    resp = null;\n    try {\n      resp = createNewSolrServer(\"\", baseUrl).request(request);\n    } catch (SolrException e) {\n      gotExp = true;\n    }\n    assertTrue(gotExp);\n    \n    // 0 numShards should fail\n    params = new ModifiableSolrParams();\n    params.set(\"action\", CollectionAction.CREATE.toString());\n    collectionName = \"acollection\";\n    params.set(\"name\", collectionName);\n    params.set(REPLICATION_FACTOR, 10);\n    params.set(\"numShards\", 0);\n    if (secondConfigSet) {\n      params.set(\"collection.configName\", \"conf1\");\n    }\n    request = new QueryRequest(params);\n    request.setPath(\"/admin/collections\");\n    gotExp = false;\n    resp = null;\n    try {\n      resp = createNewSolrServer(\"\", baseUrl).request(request);\n    } catch (SolrException e) {\n      gotExp = true;\n    }\n    assertTrue(gotExp);\n    \n    // Fail on one node\n    \n    // first we make a core with the core name the collections api\n    // will try and use - this will cause our mock fail\n    Create createCmd = new Create();\n    createCmd.setCoreName(\"halfcollection_shard1_replica1\");\n    createCmd.setCollection(\"halfcollectionblocker\");\n    String dataDir = createTempDir().getAbsolutePath();\n    createCmd.setDataDir(dataDir);\n    createCmd.setNumShards(1);\n    if (secondConfigSet) {\n      createCmd.setCollectionConfigName(\"conf1\");\n    }\n    createNewSolrServer(\"\", baseUrl).request(createCmd);\n    \n    createCmd = new Create();\n    createCmd.setCoreName(\"halfcollection_shard1_replica1\");\n    createCmd.setCollection(\"halfcollectionblocker2\");\n    dataDir = createTempDir().getAbsolutePath();\n    createCmd.setDataDir(dataDir);\n    createCmd.setNumShards(1);\n    if (secondConfigSet) {\n      createCmd.setCollectionConfigName(\"conf1\");\n    }\n    createNewSolrServer(\"\", getBaseUrl((HttpSolrServer) clients.get(1))).request(createCmd);\n    \n    params = new ModifiableSolrParams();\n    params.set(\"action\", CollectionAction.CREATE.toString());\n    collectionName = \"halfcollection\";\n    params.set(\"name\", collectionName);\n    params.set(\"numShards\", 2);\n    params.set(\"wt\", \"xml\");\n    \n    if (secondConfigSet) {\n      params.set(\"collection.configName\", \"conf1\");\n    }\n    \n    String nn1 = ((SolrDispatchFilter) jettys.get(0).getDispatchFilter().getFilter()).getCores().getZkController().getNodeName();\n    String nn2 =  ((SolrDispatchFilter) jettys.get(1).getDispatchFilter().getFilter()).getCores().getZkController().getNodeName();\n    \n    params.set(OverseerCollectionProcessor.CREATE_NODE_SET, nn1 + \",\" + nn2);\n    request = new QueryRequest(params);\n    request.setPath(\"/admin/collections\");\n    gotExp = false;\n    resp = createNewSolrServer(\"\", baseUrl).request(request);\n    \n    SimpleOrderedMap success = (SimpleOrderedMap) resp.get(\"success\");\n    SimpleOrderedMap failure = (SimpleOrderedMap) resp.get(\"failure\");\n\n    assertNotNull(resp.toString(), success);\n    assertNotNull(resp.toString(), failure);\n    \n    String val1 = success.getVal(0).toString();\n    String val2 = failure.getVal(0).toString();\n    assertTrue(val1.contains(\"SolrException\") || val2.contains(\"SolrException\"));\n  }\n\n","sourceOld":"  private void testErrorHandling() throws Exception {\n    final String baseUrl = getBaseUrl((HttpSolrServer) clients.get(0));\n    \n    \n    // try a bad action\n    ModifiableSolrParams params = new ModifiableSolrParams();\n    params.set(\"action\", \"BADACTION\");\n    String collectionName = \"badactioncollection\";\n    params.set(\"name\", collectionName);\n    params.set(\"numShards\", 2);\n    QueryRequest request = new QueryRequest(params);\n    request.setPath(\"/admin/collections\");\n    boolean gotExp = false;\n    NamedList<Object> resp = null;\n    try {\n      resp = createNewSolrServer(\"\", baseUrl).request(request);\n    } catch (SolrException e) {\n      gotExp = true;\n    }\n    assertTrue(gotExp);\n    \n    \n    // leave out required param name\n    params = new ModifiableSolrParams();\n    params.set(\"action\", CollectionAction.CREATE.toString());\n    params.set(\"numShards\", 2);\n    collectionName = \"collection\";\n    // No Name\n    // params.set(\"name\", collectionName);\n    if (secondConfigSet) {\n      params.set(\"collection.configName\", \"conf1\");\n    }\n    request = new QueryRequest(params);\n    request.setPath(\"/admin/collections\");\n    gotExp = false;\n    resp = null;\n    try {\n      resp = createNewSolrServer(\"\", baseUrl).request(request);\n    } catch (SolrException e) {\n      gotExp = true;\n    }\n    assertTrue(gotExp);\n    \n    // Too many replicas\n    params = new ModifiableSolrParams();\n    params.set(\"action\", CollectionAction.CREATE.toString());\n    collectionName = \"collection\";\n    params.set(\"name\", collectionName);\n    params.set(\"numShards\", 2);\n    if (secondConfigSet) {\n      params.set(\"collection.configName\", \"conf1\");\n    }\n    params.set(REPLICATION_FACTOR, 10);\n    request = new QueryRequest(params);\n    request.setPath(\"/admin/collections\");\n    gotExp = false;\n    resp = null;\n    try {\n      resp = createNewSolrServer(\"\", baseUrl).request(request);\n    } catch (SolrException e) {\n      gotExp = true;\n    }\n    assertTrue(gotExp);\n    \n    // No numShards should fail\n    params = new ModifiableSolrParams();\n    params.set(\"action\", CollectionAction.CREATE.toString());\n    collectionName = \"acollection\";\n    params.set(\"name\", collectionName);\n    params.set(REPLICATION_FACTOR, 10);\n    if (secondConfigSet) {\n      params.set(\"collection.configName\", \"conf1\");\n    }\n    request = new QueryRequest(params);\n    request.setPath(\"/admin/collections\");\n    gotExp = false;\n    resp = null;\n    try {\n      resp = createNewSolrServer(\"\", baseUrl).request(request);\n    } catch (SolrException e) {\n      gotExp = true;\n    }\n    assertTrue(gotExp);\n    \n    // 0 numShards should fail\n    params = new ModifiableSolrParams();\n    params.set(\"action\", CollectionAction.CREATE.toString());\n    collectionName = \"acollection\";\n    params.set(\"name\", collectionName);\n    params.set(REPLICATION_FACTOR, 10);\n    params.set(\"numShards\", 0);\n    if (secondConfigSet) {\n      params.set(\"collection.configName\", \"conf1\");\n    }\n    request = new QueryRequest(params);\n    request.setPath(\"/admin/collections\");\n    gotExp = false;\n    resp = null;\n    try {\n      resp = createNewSolrServer(\"\", baseUrl).request(request);\n    } catch (SolrException e) {\n      gotExp = true;\n    }\n    assertTrue(gotExp);\n    \n    // Fail on one node\n    \n    // first we make a core with the core name the collections api\n    // will try and use - this will cause our mock fail\n    Create createCmd = new Create();\n    createCmd.setCoreName(\"halfcollection_shard1_replica1\");\n    createCmd.setCollection(\"halfcollectionblocker\");\n    String dataDir = createTempDir().getAbsolutePath();\n    createCmd.setDataDir(dataDir);\n    createCmd.setNumShards(1);\n    if (secondConfigSet) {\n      createCmd.setCollectionConfigName(\"conf1\");\n    }\n    createNewSolrServer(\"\", baseUrl).request(createCmd);\n    \n    createCmd = new Create();\n    createCmd.setCoreName(\"halfcollection_shard1_replica1\");\n    createCmd.setCollection(\"halfcollectionblocker2\");\n    dataDir = createTempDir().getAbsolutePath();\n    createCmd.setDataDir(dataDir);\n    createCmd.setNumShards(1);\n    if (secondConfigSet) {\n      createCmd.setCollectionConfigName(\"conf1\");\n    }\n    createNewSolrServer(\"\", getBaseUrl((HttpSolrServer) clients.get(1))).request(createCmd);\n    \n    params = new ModifiableSolrParams();\n    params.set(\"action\", CollectionAction.CREATE.toString());\n    collectionName = \"halfcollection\";\n    params.set(\"name\", collectionName);\n    params.set(\"numShards\", 2);\n    params.set(\"wt\", \"xml\");\n    \n    if (secondConfigSet) {\n      params.set(\"collection.configName\", \"conf1\");\n    }\n    \n    String nn1 = ((SolrDispatchFilter) jettys.get(0).getDispatchFilter().getFilter()).getCores().getZkController().getNodeName();\n    String nn2 =  ((SolrDispatchFilter) jettys.get(1).getDispatchFilter().getFilter()).getCores().getZkController().getNodeName();\n    \n    params.set(OverseerCollectionProcessor.CREATE_NODE_SET, nn1 + \",\" + nn2);\n    request = new QueryRequest(params);\n    request.setPath(\"/admin/collections\");\n    gotExp = false;\n    resp = createNewSolrServer(\"\", baseUrl).request(request);\n    \n    SimpleOrderedMap success = (SimpleOrderedMap) resp.get(\"success\");\n    SimpleOrderedMap failure = (SimpleOrderedMap) resp.get(\"failure\");\n\n    assertNotNull(resp.toString(), success);\n    assertNotNull(resp.toString(), failure);\n    \n    String val1 = success.getVal(0).toString();\n    String val2 = failure.getVal(0).toString();\n    assertTrue(val1.contains(\"SolrException\") || val2.contains(\"SolrException\"));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"f4abec28b874149a7223e32cc7a01704c27790de","date":1410644789,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/CollectionsAPIDistributedZkTest#testErrorHandling().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/CollectionsAPIDistributedZkTest#testErrorHandling().mjava","sourceNew":"  private void testErrorHandling() throws Exception {\n    final String baseUrl = getBaseUrl((HttpSolrServer) clients.get(0));\n    \n    \n    // try a bad action\n    ModifiableSolrParams params = new ModifiableSolrParams();\n    params.set(\"action\", \"BADACTION\");\n    String collectionName = \"badactioncollection\";\n    params.set(\"name\", collectionName);\n    params.set(\"numShards\", 2);\n    QueryRequest request = new QueryRequest(params);\n    request.setPath(\"/admin/collections\");\n    boolean gotExp = false;\n    NamedList<Object> resp = null;\n    try {\n      resp = createNewSolrServer(\"\", baseUrl).request(request);\n    } catch (SolrException e) {\n      gotExp = true;\n    }\n    assertTrue(gotExp);\n    \n    \n    // leave out required param name\n    params = new ModifiableSolrParams();\n    params.set(\"action\", CollectionAction.CREATE.toString());\n    params.set(\"numShards\", 2);\n    collectionName = \"collection\";\n    // No Name\n    // params.set(\"name\", collectionName);\n    if (secondConfigSet) {\n      params.set(\"collection.configName\", \"conf1\");\n    }\n    request = new QueryRequest(params);\n    request.setPath(\"/admin/collections\");\n    gotExp = false;\n    resp = null;\n    try {\n      resp = createNewSolrServer(\"\", baseUrl).request(request);\n    } catch (SolrException e) {\n      gotExp = true;\n    }\n    assertTrue(gotExp);\n    \n    // Too many replicas\n    params = new ModifiableSolrParams();\n    params.set(\"action\", CollectionAction.CREATE.toString());\n    collectionName = \"collection\";\n    params.set(\"name\", collectionName);\n    params.set(\"numShards\", 2);\n    if (secondConfigSet) {\n      params.set(\"collection.configName\", \"conf1\");\n    }\n    params.set(REPLICATION_FACTOR, 10);\n    request = new QueryRequest(params);\n    request.setPath(\"/admin/collections\");\n    gotExp = false;\n    try {\n      resp = createNewSolrServer(\"\", baseUrl).request(request);\n    } catch (SolrException e) {\n      gotExp = true;\n    }\n    assertTrue(gotExp);\n    \n    // No numShards should fail\n    params = new ModifiableSolrParams();\n    params.set(\"action\", CollectionAction.CREATE.toString());\n    collectionName = \"acollection\";\n    params.set(\"name\", collectionName);\n    params.set(REPLICATION_FACTOR, 10);\n    if (secondConfigSet) {\n      params.set(\"collection.configName\", \"conf1\");\n    }\n    request = new QueryRequest(params);\n    request.setPath(\"/admin/collections\");\n    gotExp = false;\n    resp = null;\n    try {\n      resp = createNewSolrServer(\"\", baseUrl).request(request);\n    } catch (SolrException e) {\n      gotExp = true;\n    }\n    assertTrue(gotExp);\n    \n    // 0 numShards should fail\n    params = new ModifiableSolrParams();\n    params.set(\"action\", CollectionAction.CREATE.toString());\n    collectionName = \"acollection\";\n    params.set(\"name\", collectionName);\n    params.set(REPLICATION_FACTOR, 10);\n    params.set(\"numShards\", 0);\n    if (secondConfigSet) {\n      params.set(\"collection.configName\", \"conf1\");\n    }\n    request = new QueryRequest(params);\n    request.setPath(\"/admin/collections\");\n    gotExp = false;\n    resp = null;\n    try {\n      resp = createNewSolrServer(\"\", baseUrl).request(request);\n    } catch (SolrException e) {\n      gotExp = true;\n    }\n    assertTrue(gotExp);\n    \n    // Fail on one node\n    \n    // first we make a core with the core name the collections api\n    // will try and use - this will cause our mock fail\n    Create createCmd = new Create();\n    createCmd.setCoreName(\"halfcollection_shard1_replica1\");\n    createCmd.setCollection(\"halfcollectionblocker\");\n    String dataDir = createTempDir().toFile().getAbsolutePath();\n    createCmd.setDataDir(dataDir);\n    createCmd.setNumShards(1);\n    if (secondConfigSet) {\n      createCmd.setCollectionConfigName(\"conf1\");\n    }\n    createNewSolrServer(\"\", baseUrl).request(createCmd);\n    \n    createCmd = new Create();\n    createCmd.setCoreName(\"halfcollection_shard1_replica1\");\n    createCmd.setCollection(\"halfcollectionblocker2\");\n    dataDir = createTempDir().toFile().getAbsolutePath();\n    createCmd.setDataDir(dataDir);\n    createCmd.setNumShards(1);\n    if (secondConfigSet) {\n      createCmd.setCollectionConfigName(\"conf1\");\n    }\n    createNewSolrServer(\"\", getBaseUrl((HttpSolrServer) clients.get(1))).request(createCmd);\n    \n    params = new ModifiableSolrParams();\n    params.set(\"action\", CollectionAction.CREATE.toString());\n    collectionName = \"halfcollection\";\n    params.set(\"name\", collectionName);\n    params.set(\"numShards\", 2);\n    params.set(\"wt\", \"xml\");\n    \n    if (secondConfigSet) {\n      params.set(\"collection.configName\", \"conf1\");\n    }\n    \n    String nn1 = ((SolrDispatchFilter) jettys.get(0).getDispatchFilter().getFilter()).getCores().getZkController().getNodeName();\n    String nn2 =  ((SolrDispatchFilter) jettys.get(1).getDispatchFilter().getFilter()).getCores().getZkController().getNodeName();\n    \n    params.set(OverseerCollectionProcessor.CREATE_NODE_SET, nn1 + \",\" + nn2);\n    request = new QueryRequest(params);\n    request.setPath(\"/admin/collections\");\n    gotExp = false;\n    resp = createNewSolrServer(\"\", baseUrl).request(request);\n    \n    SimpleOrderedMap success = (SimpleOrderedMap) resp.get(\"success\");\n    SimpleOrderedMap failure = (SimpleOrderedMap) resp.get(\"failure\");\n\n    assertNotNull(resp.toString(), success);\n    assertNotNull(resp.toString(), failure);\n    \n    String val1 = success.getVal(0).toString();\n    String val2 = failure.getVal(0).toString();\n    assertTrue(val1.contains(\"SolrException\") || val2.contains(\"SolrException\"));\n  }\n\n","sourceOld":"  private void testErrorHandling() throws Exception {\n    final String baseUrl = getBaseUrl((HttpSolrServer) clients.get(0));\n    \n    \n    // try a bad action\n    ModifiableSolrParams params = new ModifiableSolrParams();\n    params.set(\"action\", \"BADACTION\");\n    String collectionName = \"badactioncollection\";\n    params.set(\"name\", collectionName);\n    params.set(\"numShards\", 2);\n    QueryRequest request = new QueryRequest(params);\n    request.setPath(\"/admin/collections\");\n    boolean gotExp = false;\n    NamedList<Object> resp = null;\n    try {\n      resp = createNewSolrServer(\"\", baseUrl).request(request);\n    } catch (SolrException e) {\n      gotExp = true;\n    }\n    assertTrue(gotExp);\n    \n    \n    // leave out required param name\n    params = new ModifiableSolrParams();\n    params.set(\"action\", CollectionAction.CREATE.toString());\n    params.set(\"numShards\", 2);\n    collectionName = \"collection\";\n    // No Name\n    // params.set(\"name\", collectionName);\n    if (secondConfigSet) {\n      params.set(\"collection.configName\", \"conf1\");\n    }\n    request = new QueryRequest(params);\n    request.setPath(\"/admin/collections\");\n    gotExp = false;\n    resp = null;\n    try {\n      resp = createNewSolrServer(\"\", baseUrl).request(request);\n    } catch (SolrException e) {\n      gotExp = true;\n    }\n    assertTrue(gotExp);\n    \n    // Too many replicas\n    params = new ModifiableSolrParams();\n    params.set(\"action\", CollectionAction.CREATE.toString());\n    collectionName = \"collection\";\n    params.set(\"name\", collectionName);\n    params.set(\"numShards\", 2);\n    if (secondConfigSet) {\n      params.set(\"collection.configName\", \"conf1\");\n    }\n    params.set(REPLICATION_FACTOR, 10);\n    request = new QueryRequest(params);\n    request.setPath(\"/admin/collections\");\n    gotExp = false;\n    try {\n      resp = createNewSolrServer(\"\", baseUrl).request(request);\n    } catch (SolrException e) {\n      gotExp = true;\n    }\n    assertTrue(gotExp);\n    \n    // No numShards should fail\n    params = new ModifiableSolrParams();\n    params.set(\"action\", CollectionAction.CREATE.toString());\n    collectionName = \"acollection\";\n    params.set(\"name\", collectionName);\n    params.set(REPLICATION_FACTOR, 10);\n    if (secondConfigSet) {\n      params.set(\"collection.configName\", \"conf1\");\n    }\n    request = new QueryRequest(params);\n    request.setPath(\"/admin/collections\");\n    gotExp = false;\n    resp = null;\n    try {\n      resp = createNewSolrServer(\"\", baseUrl).request(request);\n    } catch (SolrException e) {\n      gotExp = true;\n    }\n    assertTrue(gotExp);\n    \n    // 0 numShards should fail\n    params = new ModifiableSolrParams();\n    params.set(\"action\", CollectionAction.CREATE.toString());\n    collectionName = \"acollection\";\n    params.set(\"name\", collectionName);\n    params.set(REPLICATION_FACTOR, 10);\n    params.set(\"numShards\", 0);\n    if (secondConfigSet) {\n      params.set(\"collection.configName\", \"conf1\");\n    }\n    request = new QueryRequest(params);\n    request.setPath(\"/admin/collections\");\n    gotExp = false;\n    resp = null;\n    try {\n      resp = createNewSolrServer(\"\", baseUrl).request(request);\n    } catch (SolrException e) {\n      gotExp = true;\n    }\n    assertTrue(gotExp);\n    \n    // Fail on one node\n    \n    // first we make a core with the core name the collections api\n    // will try and use - this will cause our mock fail\n    Create createCmd = new Create();\n    createCmd.setCoreName(\"halfcollection_shard1_replica1\");\n    createCmd.setCollection(\"halfcollectionblocker\");\n    String dataDir = createTempDir().getAbsolutePath();\n    createCmd.setDataDir(dataDir);\n    createCmd.setNumShards(1);\n    if (secondConfigSet) {\n      createCmd.setCollectionConfigName(\"conf1\");\n    }\n    createNewSolrServer(\"\", baseUrl).request(createCmd);\n    \n    createCmd = new Create();\n    createCmd.setCoreName(\"halfcollection_shard1_replica1\");\n    createCmd.setCollection(\"halfcollectionblocker2\");\n    dataDir = createTempDir().getAbsolutePath();\n    createCmd.setDataDir(dataDir);\n    createCmd.setNumShards(1);\n    if (secondConfigSet) {\n      createCmd.setCollectionConfigName(\"conf1\");\n    }\n    createNewSolrServer(\"\", getBaseUrl((HttpSolrServer) clients.get(1))).request(createCmd);\n    \n    params = new ModifiableSolrParams();\n    params.set(\"action\", CollectionAction.CREATE.toString());\n    collectionName = \"halfcollection\";\n    params.set(\"name\", collectionName);\n    params.set(\"numShards\", 2);\n    params.set(\"wt\", \"xml\");\n    \n    if (secondConfigSet) {\n      params.set(\"collection.configName\", \"conf1\");\n    }\n    \n    String nn1 = ((SolrDispatchFilter) jettys.get(0).getDispatchFilter().getFilter()).getCores().getZkController().getNodeName();\n    String nn2 =  ((SolrDispatchFilter) jettys.get(1).getDispatchFilter().getFilter()).getCores().getZkController().getNodeName();\n    \n    params.set(OverseerCollectionProcessor.CREATE_NODE_SET, nn1 + \",\" + nn2);\n    request = new QueryRequest(params);\n    request.setPath(\"/admin/collections\");\n    gotExp = false;\n    resp = createNewSolrServer(\"\", baseUrl).request(request);\n    \n    SimpleOrderedMap success = (SimpleOrderedMap) resp.get(\"success\");\n    SimpleOrderedMap failure = (SimpleOrderedMap) resp.get(\"failure\");\n\n    assertNotNull(resp.toString(), success);\n    assertNotNull(resp.toString(), failure);\n    \n    String val1 = success.getVal(0).toString();\n    String val2 = failure.getVal(0).toString();\n    assertTrue(val1.contains(\"SolrException\") || val2.contains(\"SolrException\"));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"bafca15d8e408346a67f4282ad1143b88023893b","date":1420034748,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/CollectionsAPIDistributedZkTest#testErrorHandling().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/CollectionsAPIDistributedZkTest#testErrorHandling().mjava","sourceNew":"  private void testErrorHandling() throws Exception {\n    final String baseUrl = getBaseUrl((HttpSolrClient) clients.get(0));\n    \n    \n    // try a bad action\n    ModifiableSolrParams params = new ModifiableSolrParams();\n    params.set(\"action\", \"BADACTION\");\n    String collectionName = \"badactioncollection\";\n    params.set(\"name\", collectionName);\n    params.set(\"numShards\", 2);\n    QueryRequest request = new QueryRequest(params);\n    request.setPath(\"/admin/collections\");\n    boolean gotExp = false;\n    NamedList<Object> resp = null;\n    try {\n      resp = createNewSolrClient(\"\", baseUrl).request(request);\n    } catch (SolrException e) {\n      gotExp = true;\n    }\n    assertTrue(gotExp);\n    \n    \n    // leave out required param name\n    params = new ModifiableSolrParams();\n    params.set(\"action\", CollectionAction.CREATE.toString());\n    params.set(\"numShards\", 2);\n    collectionName = \"collection\";\n    // No Name\n    // params.set(\"name\", collectionName);\n    if (secondConfigSet) {\n      params.set(\"collection.configName\", \"conf1\");\n    }\n    request = new QueryRequest(params);\n    request.setPath(\"/admin/collections\");\n    gotExp = false;\n    resp = null;\n    try {\n      resp = createNewSolrClient(\"\", baseUrl).request(request);\n    } catch (SolrException e) {\n      gotExp = true;\n    }\n    assertTrue(gotExp);\n    \n    // Too many replicas\n    params = new ModifiableSolrParams();\n    params.set(\"action\", CollectionAction.CREATE.toString());\n    collectionName = \"collection\";\n    params.set(\"name\", collectionName);\n    params.set(\"numShards\", 2);\n    if (secondConfigSet) {\n      params.set(\"collection.configName\", \"conf1\");\n    }\n    params.set(REPLICATION_FACTOR, 10);\n    request = new QueryRequest(params);\n    request.setPath(\"/admin/collections\");\n    gotExp = false;\n    try {\n      resp = createNewSolrClient(\"\", baseUrl).request(request);\n    } catch (SolrException e) {\n      gotExp = true;\n    }\n    assertTrue(gotExp);\n    \n    // No numShards should fail\n    params = new ModifiableSolrParams();\n    params.set(\"action\", CollectionAction.CREATE.toString());\n    collectionName = \"acollection\";\n    params.set(\"name\", collectionName);\n    params.set(REPLICATION_FACTOR, 10);\n    if (secondConfigSet) {\n      params.set(\"collection.configName\", \"conf1\");\n    }\n    request = new QueryRequest(params);\n    request.setPath(\"/admin/collections\");\n    gotExp = false;\n    resp = null;\n    try {\n      resp = createNewSolrClient(\"\", baseUrl).request(request);\n    } catch (SolrException e) {\n      gotExp = true;\n    }\n    assertTrue(gotExp);\n    \n    // 0 numShards should fail\n    params = new ModifiableSolrParams();\n    params.set(\"action\", CollectionAction.CREATE.toString());\n    collectionName = \"acollection\";\n    params.set(\"name\", collectionName);\n    params.set(REPLICATION_FACTOR, 10);\n    params.set(\"numShards\", 0);\n    if (secondConfigSet) {\n      params.set(\"collection.configName\", \"conf1\");\n    }\n    request = new QueryRequest(params);\n    request.setPath(\"/admin/collections\");\n    gotExp = false;\n    resp = null;\n    try {\n      resp = createNewSolrClient(\"\", baseUrl).request(request);\n    } catch (SolrException e) {\n      gotExp = true;\n    }\n    assertTrue(gotExp);\n    \n    // Fail on one node\n    \n    // first we make a core with the core name the collections api\n    // will try and use - this will cause our mock fail\n    Create createCmd = new Create();\n    createCmd.setCoreName(\"halfcollection_shard1_replica1\");\n    createCmd.setCollection(\"halfcollectionblocker\");\n    String dataDir = createTempDir().toFile().getAbsolutePath();\n    createCmd.setDataDir(dataDir);\n    createCmd.setNumShards(1);\n    if (secondConfigSet) {\n      createCmd.setCollectionConfigName(\"conf1\");\n    }\n    createNewSolrClient(\"\", baseUrl).request(createCmd);\n    \n    createCmd = new Create();\n    createCmd.setCoreName(\"halfcollection_shard1_replica1\");\n    createCmd.setCollection(\"halfcollectionblocker2\");\n    dataDir = createTempDir().toFile().getAbsolutePath();\n    createCmd.setDataDir(dataDir);\n    createCmd.setNumShards(1);\n    if (secondConfigSet) {\n      createCmd.setCollectionConfigName(\"conf1\");\n    }\n    createNewSolrClient(\"\", getBaseUrl((HttpSolrClient) clients.get(1))).request(createCmd);\n    \n    params = new ModifiableSolrParams();\n    params.set(\"action\", CollectionAction.CREATE.toString());\n    collectionName = \"halfcollection\";\n    params.set(\"name\", collectionName);\n    params.set(\"numShards\", 2);\n    params.set(\"wt\", \"xml\");\n    \n    if (secondConfigSet) {\n      params.set(\"collection.configName\", \"conf1\");\n    }\n    \n    String nn1 = ((SolrDispatchFilter) jettys.get(0).getDispatchFilter().getFilter()).getCores().getZkController().getNodeName();\n    String nn2 =  ((SolrDispatchFilter) jettys.get(1).getDispatchFilter().getFilter()).getCores().getZkController().getNodeName();\n    \n    params.set(OverseerCollectionProcessor.CREATE_NODE_SET, nn1 + \",\" + nn2);\n    request = new QueryRequest(params);\n    request.setPath(\"/admin/collections\");\n    gotExp = false;\n    resp = createNewSolrClient(\"\", baseUrl).request(request);\n    \n    SimpleOrderedMap success = (SimpleOrderedMap) resp.get(\"success\");\n    SimpleOrderedMap failure = (SimpleOrderedMap) resp.get(\"failure\");\n\n    assertNotNull(resp.toString(), success);\n    assertNotNull(resp.toString(), failure);\n    \n    String val1 = success.getVal(0).toString();\n    String val2 = failure.getVal(0).toString();\n    assertTrue(val1.contains(\"SolrException\") || val2.contains(\"SolrException\"));\n  }\n\n","sourceOld":"  private void testErrorHandling() throws Exception {\n    final String baseUrl = getBaseUrl((HttpSolrServer) clients.get(0));\n    \n    \n    // try a bad action\n    ModifiableSolrParams params = new ModifiableSolrParams();\n    params.set(\"action\", \"BADACTION\");\n    String collectionName = \"badactioncollection\";\n    params.set(\"name\", collectionName);\n    params.set(\"numShards\", 2);\n    QueryRequest request = new QueryRequest(params);\n    request.setPath(\"/admin/collections\");\n    boolean gotExp = false;\n    NamedList<Object> resp = null;\n    try {\n      resp = createNewSolrServer(\"\", baseUrl).request(request);\n    } catch (SolrException e) {\n      gotExp = true;\n    }\n    assertTrue(gotExp);\n    \n    \n    // leave out required param name\n    params = new ModifiableSolrParams();\n    params.set(\"action\", CollectionAction.CREATE.toString());\n    params.set(\"numShards\", 2);\n    collectionName = \"collection\";\n    // No Name\n    // params.set(\"name\", collectionName);\n    if (secondConfigSet) {\n      params.set(\"collection.configName\", \"conf1\");\n    }\n    request = new QueryRequest(params);\n    request.setPath(\"/admin/collections\");\n    gotExp = false;\n    resp = null;\n    try {\n      resp = createNewSolrServer(\"\", baseUrl).request(request);\n    } catch (SolrException e) {\n      gotExp = true;\n    }\n    assertTrue(gotExp);\n    \n    // Too many replicas\n    params = new ModifiableSolrParams();\n    params.set(\"action\", CollectionAction.CREATE.toString());\n    collectionName = \"collection\";\n    params.set(\"name\", collectionName);\n    params.set(\"numShards\", 2);\n    if (secondConfigSet) {\n      params.set(\"collection.configName\", \"conf1\");\n    }\n    params.set(REPLICATION_FACTOR, 10);\n    request = new QueryRequest(params);\n    request.setPath(\"/admin/collections\");\n    gotExp = false;\n    try {\n      resp = createNewSolrServer(\"\", baseUrl).request(request);\n    } catch (SolrException e) {\n      gotExp = true;\n    }\n    assertTrue(gotExp);\n    \n    // No numShards should fail\n    params = new ModifiableSolrParams();\n    params.set(\"action\", CollectionAction.CREATE.toString());\n    collectionName = \"acollection\";\n    params.set(\"name\", collectionName);\n    params.set(REPLICATION_FACTOR, 10);\n    if (secondConfigSet) {\n      params.set(\"collection.configName\", \"conf1\");\n    }\n    request = new QueryRequest(params);\n    request.setPath(\"/admin/collections\");\n    gotExp = false;\n    resp = null;\n    try {\n      resp = createNewSolrServer(\"\", baseUrl).request(request);\n    } catch (SolrException e) {\n      gotExp = true;\n    }\n    assertTrue(gotExp);\n    \n    // 0 numShards should fail\n    params = new ModifiableSolrParams();\n    params.set(\"action\", CollectionAction.CREATE.toString());\n    collectionName = \"acollection\";\n    params.set(\"name\", collectionName);\n    params.set(REPLICATION_FACTOR, 10);\n    params.set(\"numShards\", 0);\n    if (secondConfigSet) {\n      params.set(\"collection.configName\", \"conf1\");\n    }\n    request = new QueryRequest(params);\n    request.setPath(\"/admin/collections\");\n    gotExp = false;\n    resp = null;\n    try {\n      resp = createNewSolrServer(\"\", baseUrl).request(request);\n    } catch (SolrException e) {\n      gotExp = true;\n    }\n    assertTrue(gotExp);\n    \n    // Fail on one node\n    \n    // first we make a core with the core name the collections api\n    // will try and use - this will cause our mock fail\n    Create createCmd = new Create();\n    createCmd.setCoreName(\"halfcollection_shard1_replica1\");\n    createCmd.setCollection(\"halfcollectionblocker\");\n    String dataDir = createTempDir().toFile().getAbsolutePath();\n    createCmd.setDataDir(dataDir);\n    createCmd.setNumShards(1);\n    if (secondConfigSet) {\n      createCmd.setCollectionConfigName(\"conf1\");\n    }\n    createNewSolrServer(\"\", baseUrl).request(createCmd);\n    \n    createCmd = new Create();\n    createCmd.setCoreName(\"halfcollection_shard1_replica1\");\n    createCmd.setCollection(\"halfcollectionblocker2\");\n    dataDir = createTempDir().toFile().getAbsolutePath();\n    createCmd.setDataDir(dataDir);\n    createCmd.setNumShards(1);\n    if (secondConfigSet) {\n      createCmd.setCollectionConfigName(\"conf1\");\n    }\n    createNewSolrServer(\"\", getBaseUrl((HttpSolrServer) clients.get(1))).request(createCmd);\n    \n    params = new ModifiableSolrParams();\n    params.set(\"action\", CollectionAction.CREATE.toString());\n    collectionName = \"halfcollection\";\n    params.set(\"name\", collectionName);\n    params.set(\"numShards\", 2);\n    params.set(\"wt\", \"xml\");\n    \n    if (secondConfigSet) {\n      params.set(\"collection.configName\", \"conf1\");\n    }\n    \n    String nn1 = ((SolrDispatchFilter) jettys.get(0).getDispatchFilter().getFilter()).getCores().getZkController().getNodeName();\n    String nn2 =  ((SolrDispatchFilter) jettys.get(1).getDispatchFilter().getFilter()).getCores().getZkController().getNodeName();\n    \n    params.set(OverseerCollectionProcessor.CREATE_NODE_SET, nn1 + \",\" + nn2);\n    request = new QueryRequest(params);\n    request.setPath(\"/admin/collections\");\n    gotExp = false;\n    resp = createNewSolrServer(\"\", baseUrl).request(request);\n    \n    SimpleOrderedMap success = (SimpleOrderedMap) resp.get(\"success\");\n    SimpleOrderedMap failure = (SimpleOrderedMap) resp.get(\"failure\");\n\n    assertNotNull(resp.toString(), success);\n    assertNotNull(resp.toString(), failure);\n    \n    String val1 = success.getVal(0).toString();\n    String val2 = failure.getVal(0).toString();\n    assertTrue(val1.contains(\"SolrException\") || val2.contains(\"SolrException\"));\n  }\n\n","bugFix":null,"bugIntro":["6784d0cc613dc1ee97030eaaa5e0754edc22d164"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"6784d0cc613dc1ee97030eaaa5e0754edc22d164","date":1420824784,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/CollectionsAPIDistributedZkTest#testErrorHandling().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/CollectionsAPIDistributedZkTest#testErrorHandling().mjava","sourceNew":"  private void testErrorHandling() throws Exception {\n    final String baseUrl = getBaseUrl((HttpSolrClient) clients.get(0));\n    \n    \n    // try a bad action\n    ModifiableSolrParams params = new ModifiableSolrParams();\n    params.set(\"action\", \"BADACTION\");\n    String collectionName = \"badactioncollection\";\n    params.set(\"name\", collectionName);\n    params.set(\"numShards\", 2);\n    QueryRequest request = new QueryRequest(params);\n    request.setPath(\"/admin/collections\");\n    boolean gotExp = false;\n    try {\n      makeRequest(baseUrl, request);\n    } catch (SolrException e) {\n      gotExp = true;\n    }\n    assertTrue(gotExp);\n    \n    \n    // leave out required param name\n    params = new ModifiableSolrParams();\n    params.set(\"action\", CollectionAction.CREATE.toString());\n    params.set(\"numShards\", 2);\n    collectionName = \"collection\";\n    // No Name\n    // params.set(\"name\", collectionName);\n    if (secondConfigSet) {\n      params.set(\"collection.configName\", \"conf1\");\n    }\n    request = new QueryRequest(params);\n    request.setPath(\"/admin/collections\");\n    gotExp = false;\n    try {\n      makeRequest(baseUrl, request);\n    } catch (SolrException e) {\n      gotExp = true;\n    }\n    assertTrue(gotExp);\n    \n    // Too many replicas\n    params = new ModifiableSolrParams();\n    params.set(\"action\", CollectionAction.CREATE.toString());\n    collectionName = \"collection\";\n    params.set(\"name\", collectionName);\n    params.set(\"numShards\", 2);\n    if (secondConfigSet) {\n      params.set(\"collection.configName\", \"conf1\");\n    }\n    params.set(REPLICATION_FACTOR, 10);\n    request = new QueryRequest(params);\n    request.setPath(\"/admin/collections\");\n    gotExp = false;\n    try {\n      makeRequest(baseUrl, request);\n    } catch (SolrException e) {\n      gotExp = true;\n    }\n    assertTrue(gotExp);\n    \n    // No numShards should fail\n    params = new ModifiableSolrParams();\n    params.set(\"action\", CollectionAction.CREATE.toString());\n    collectionName = \"acollection\";\n    params.set(\"name\", collectionName);\n    params.set(REPLICATION_FACTOR, 10);\n    if (secondConfigSet) {\n      params.set(\"collection.configName\", \"conf1\");\n    }\n    request = new QueryRequest(params);\n    request.setPath(\"/admin/collections\");\n    gotExp = false;\n    try {\n      makeRequest(baseUrl, request);\n    } catch (SolrException e) {\n      gotExp = true;\n    }\n    assertTrue(gotExp);\n    \n    // 0 numShards should fail\n    params = new ModifiableSolrParams();\n    params.set(\"action\", CollectionAction.CREATE.toString());\n    collectionName = \"acollection\";\n    params.set(\"name\", collectionName);\n    params.set(REPLICATION_FACTOR, 10);\n    params.set(\"numShards\", 0);\n    if (secondConfigSet) {\n      params.set(\"collection.configName\", \"conf1\");\n    }\n    request = new QueryRequest(params);\n    request.setPath(\"/admin/collections\");\n    gotExp = false;\n    try {\n      makeRequest(baseUrl, request);\n    } catch (SolrException e) {\n      gotExp = true;\n    }\n    assertTrue(gotExp);\n    \n    // Fail on one node\n    \n    // first we make a core with the core name the collections api\n    // will try and use - this will cause our mock fail\n    Create createCmd = new Create();\n    createCmd.setCoreName(\"halfcollection_shard1_replica1\");\n    createCmd.setCollection(\"halfcollectionblocker\");\n    String dataDir = createTempDir().toFile().getAbsolutePath();\n    createCmd.setDataDir(dataDir);\n    createCmd.setNumShards(1);\n    if (secondConfigSet) {\n      createCmd.setCollectionConfigName(\"conf1\");\n    }\n    makeRequest(baseUrl, createCmd);\n    \n    createCmd = new Create();\n    createCmd.setCoreName(\"halfcollection_shard1_replica1\");\n    createCmd.setCollection(\"halfcollectionblocker2\");\n    dataDir = createTempDir().toFile().getAbsolutePath();\n    createCmd.setDataDir(dataDir);\n    createCmd.setNumShards(1);\n    if (secondConfigSet) {\n      createCmd.setCollectionConfigName(\"conf1\");\n    }\n    makeRequest(getBaseUrl((HttpSolrClient) clients.get(1)), createCmd);\n    \n    params = new ModifiableSolrParams();\n    params.set(\"action\", CollectionAction.CREATE.toString());\n    collectionName = \"halfcollection\";\n    params.set(\"name\", collectionName);\n    params.set(\"numShards\", 2);\n    params.set(\"wt\", \"xml\");\n    \n    if (secondConfigSet) {\n      params.set(\"collection.configName\", \"conf1\");\n    }\n    \n    String nn1 = ((SolrDispatchFilter) jettys.get(0).getDispatchFilter().getFilter()).getCores().getZkController().getNodeName();\n    String nn2 =  ((SolrDispatchFilter) jettys.get(1).getDispatchFilter().getFilter()).getCores().getZkController().getNodeName();\n    \n    params.set(OverseerCollectionProcessor.CREATE_NODE_SET, nn1 + \",\" + nn2);\n    request = new QueryRequest(params);\n    request.setPath(\"/admin/collections\");\n    gotExp = false;\n    NamedList<Object> resp = makeRequest(baseUrl, request);;\n    \n    SimpleOrderedMap success = (SimpleOrderedMap) resp.get(\"success\");\n    SimpleOrderedMap failure = (SimpleOrderedMap) resp.get(\"failure\");\n\n    assertNotNull(resp.toString(), success);\n    assertNotNull(resp.toString(), failure);\n    \n    String val1 = success.getVal(0).toString();\n    String val2 = failure.getVal(0).toString();\n    assertTrue(val1.contains(\"SolrException\") || val2.contains(\"SolrException\"));\n  }\n\n","sourceOld":"  private void testErrorHandling() throws Exception {\n    final String baseUrl = getBaseUrl((HttpSolrClient) clients.get(0));\n    \n    \n    // try a bad action\n    ModifiableSolrParams params = new ModifiableSolrParams();\n    params.set(\"action\", \"BADACTION\");\n    String collectionName = \"badactioncollection\";\n    params.set(\"name\", collectionName);\n    params.set(\"numShards\", 2);\n    QueryRequest request = new QueryRequest(params);\n    request.setPath(\"/admin/collections\");\n    boolean gotExp = false;\n    NamedList<Object> resp = null;\n    try {\n      resp = createNewSolrClient(\"\", baseUrl).request(request);\n    } catch (SolrException e) {\n      gotExp = true;\n    }\n    assertTrue(gotExp);\n    \n    \n    // leave out required param name\n    params = new ModifiableSolrParams();\n    params.set(\"action\", CollectionAction.CREATE.toString());\n    params.set(\"numShards\", 2);\n    collectionName = \"collection\";\n    // No Name\n    // params.set(\"name\", collectionName);\n    if (secondConfigSet) {\n      params.set(\"collection.configName\", \"conf1\");\n    }\n    request = new QueryRequest(params);\n    request.setPath(\"/admin/collections\");\n    gotExp = false;\n    resp = null;\n    try {\n      resp = createNewSolrClient(\"\", baseUrl).request(request);\n    } catch (SolrException e) {\n      gotExp = true;\n    }\n    assertTrue(gotExp);\n    \n    // Too many replicas\n    params = new ModifiableSolrParams();\n    params.set(\"action\", CollectionAction.CREATE.toString());\n    collectionName = \"collection\";\n    params.set(\"name\", collectionName);\n    params.set(\"numShards\", 2);\n    if (secondConfigSet) {\n      params.set(\"collection.configName\", \"conf1\");\n    }\n    params.set(REPLICATION_FACTOR, 10);\n    request = new QueryRequest(params);\n    request.setPath(\"/admin/collections\");\n    gotExp = false;\n    try {\n      resp = createNewSolrClient(\"\", baseUrl).request(request);\n    } catch (SolrException e) {\n      gotExp = true;\n    }\n    assertTrue(gotExp);\n    \n    // No numShards should fail\n    params = new ModifiableSolrParams();\n    params.set(\"action\", CollectionAction.CREATE.toString());\n    collectionName = \"acollection\";\n    params.set(\"name\", collectionName);\n    params.set(REPLICATION_FACTOR, 10);\n    if (secondConfigSet) {\n      params.set(\"collection.configName\", \"conf1\");\n    }\n    request = new QueryRequest(params);\n    request.setPath(\"/admin/collections\");\n    gotExp = false;\n    resp = null;\n    try {\n      resp = createNewSolrClient(\"\", baseUrl).request(request);\n    } catch (SolrException e) {\n      gotExp = true;\n    }\n    assertTrue(gotExp);\n    \n    // 0 numShards should fail\n    params = new ModifiableSolrParams();\n    params.set(\"action\", CollectionAction.CREATE.toString());\n    collectionName = \"acollection\";\n    params.set(\"name\", collectionName);\n    params.set(REPLICATION_FACTOR, 10);\n    params.set(\"numShards\", 0);\n    if (secondConfigSet) {\n      params.set(\"collection.configName\", \"conf1\");\n    }\n    request = new QueryRequest(params);\n    request.setPath(\"/admin/collections\");\n    gotExp = false;\n    resp = null;\n    try {\n      resp = createNewSolrClient(\"\", baseUrl).request(request);\n    } catch (SolrException e) {\n      gotExp = true;\n    }\n    assertTrue(gotExp);\n    \n    // Fail on one node\n    \n    // first we make a core with the core name the collections api\n    // will try and use - this will cause our mock fail\n    Create createCmd = new Create();\n    createCmd.setCoreName(\"halfcollection_shard1_replica1\");\n    createCmd.setCollection(\"halfcollectionblocker\");\n    String dataDir = createTempDir().toFile().getAbsolutePath();\n    createCmd.setDataDir(dataDir);\n    createCmd.setNumShards(1);\n    if (secondConfigSet) {\n      createCmd.setCollectionConfigName(\"conf1\");\n    }\n    createNewSolrClient(\"\", baseUrl).request(createCmd);\n    \n    createCmd = new Create();\n    createCmd.setCoreName(\"halfcollection_shard1_replica1\");\n    createCmd.setCollection(\"halfcollectionblocker2\");\n    dataDir = createTempDir().toFile().getAbsolutePath();\n    createCmd.setDataDir(dataDir);\n    createCmd.setNumShards(1);\n    if (secondConfigSet) {\n      createCmd.setCollectionConfigName(\"conf1\");\n    }\n    createNewSolrClient(\"\", getBaseUrl((HttpSolrClient) clients.get(1))).request(createCmd);\n    \n    params = new ModifiableSolrParams();\n    params.set(\"action\", CollectionAction.CREATE.toString());\n    collectionName = \"halfcollection\";\n    params.set(\"name\", collectionName);\n    params.set(\"numShards\", 2);\n    params.set(\"wt\", \"xml\");\n    \n    if (secondConfigSet) {\n      params.set(\"collection.configName\", \"conf1\");\n    }\n    \n    String nn1 = ((SolrDispatchFilter) jettys.get(0).getDispatchFilter().getFilter()).getCores().getZkController().getNodeName();\n    String nn2 =  ((SolrDispatchFilter) jettys.get(1).getDispatchFilter().getFilter()).getCores().getZkController().getNodeName();\n    \n    params.set(OverseerCollectionProcessor.CREATE_NODE_SET, nn1 + \",\" + nn2);\n    request = new QueryRequest(params);\n    request.setPath(\"/admin/collections\");\n    gotExp = false;\n    resp = createNewSolrClient(\"\", baseUrl).request(request);\n    \n    SimpleOrderedMap success = (SimpleOrderedMap) resp.get(\"success\");\n    SimpleOrderedMap failure = (SimpleOrderedMap) resp.get(\"failure\");\n\n    assertNotNull(resp.toString(), success);\n    assertNotNull(resp.toString(), failure);\n    \n    String val1 = success.getVal(0).toString();\n    String val2 = failure.getVal(0).toString();\n    assertTrue(val1.contains(\"SolrException\") || val2.contains(\"SolrException\"));\n  }\n\n","bugFix":["bafca15d8e408346a67f4282ad1143b88023893b","fe999fc2d95d6fea71f960bf9556858387ba21f5","630c3d71b7859a9f17dd985bb82bba51bccee575"],"bugIntro":["efefd19367eebaa6d911ba8f441a30b7b7564e26"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"e31e6ce5848e5040d4c9ecbb25bc6ccf5d0894ac","date":1438841252,"type":3,"author":"Gregory Chanan","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/CollectionsAPIDistributedZkTest#testErrorHandling().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/CollectionsAPIDistributedZkTest#testErrorHandling().mjava","sourceNew":"  private void testErrorHandling() throws Exception {\n    final String baseUrl = getBaseUrl((HttpSolrClient) clients.get(0));\n    \n    \n    // try a bad action\n    ModifiableSolrParams params = new ModifiableSolrParams();\n    params.set(\"action\", \"BADACTION\");\n    String collectionName = \"badactioncollection\";\n    params.set(\"name\", collectionName);\n    params.set(\"numShards\", 2);\n    QueryRequest request = new QueryRequest(params);\n    request.setPath(\"/admin/collections\");\n    boolean gotExp = false;\n    try {\n      makeRequest(baseUrl, request);\n    } catch (SolrException e) {\n      gotExp = true;\n    }\n    assertTrue(gotExp);\n    \n    \n    // leave out required param name\n    params = new ModifiableSolrParams();\n    params.set(\"action\", CollectionAction.CREATE.toString());\n    params.set(\"numShards\", 2);\n    collectionName = \"collection\";\n    // No Name\n    // params.set(\"name\", collectionName);\n    if (secondConfigSet) {\n      params.set(\"collection.configName\", \"conf1\");\n    }\n    request = new QueryRequest(params);\n    request.setPath(\"/admin/collections\");\n    gotExp = false;\n    try {\n      makeRequest(baseUrl, request);\n    } catch (SolrException e) {\n      gotExp = true;\n    }\n    assertTrue(gotExp);\n    \n    // Too many replicas\n    params = new ModifiableSolrParams();\n    params.set(\"action\", CollectionAction.CREATE.toString());\n    collectionName = \"collection\";\n    params.set(\"name\", collectionName);\n    params.set(\"numShards\", 2);\n    if (secondConfigSet) {\n      params.set(\"collection.configName\", \"conf1\");\n    }\n    params.set(REPLICATION_FACTOR, 10);\n    request = new QueryRequest(params);\n    request.setPath(\"/admin/collections\");\n    gotExp = false;\n    try {\n      makeRequest(baseUrl, request);\n    } catch (SolrException e) {\n      gotExp = true;\n    }\n    assertTrue(gotExp);\n    \n    // No numShards should fail\n    params = new ModifiableSolrParams();\n    params.set(\"action\", CollectionAction.CREATE.toString());\n    collectionName = \"acollection\";\n    params.set(\"name\", collectionName);\n    params.set(REPLICATION_FACTOR, 10);\n    if (secondConfigSet) {\n      params.set(\"collection.configName\", \"conf1\");\n    }\n    request = new QueryRequest(params);\n    request.setPath(\"/admin/collections\");\n    gotExp = false;\n    try {\n      makeRequest(baseUrl, request);\n    } catch (SolrException e) {\n      gotExp = true;\n    }\n    assertTrue(gotExp);\n    \n    // 0 numShards should fail\n    params = new ModifiableSolrParams();\n    params.set(\"action\", CollectionAction.CREATE.toString());\n    collectionName = \"acollection\";\n    params.set(\"name\", collectionName);\n    params.set(REPLICATION_FACTOR, 10);\n    params.set(\"numShards\", 0);\n    if (secondConfigSet) {\n      params.set(\"collection.configName\", \"conf1\");\n    }\n    request = new QueryRequest(params);\n    request.setPath(\"/admin/collections\");\n    gotExp = false;\n    try {\n      makeRequest(baseUrl, request);\n    } catch (SolrException e) {\n      gotExp = true;\n    }\n    assertTrue(gotExp);\n    \n    // Fail on one node\n    \n    // first we make a core with the core name the collections api\n    // will try and use - this will cause our mock fail\n    Create createCmd = new Create();\n    createCmd.setCoreName(\"halfcollection_shard1_replica1\");\n    createCmd.setCollection(\"halfcollectionblocker\");\n    String dataDir = createTempDir().toFile().getAbsolutePath();\n    createCmd.setDataDir(dataDir);\n    createCmd.setNumShards(1);\n    if (secondConfigSet) {\n      createCmd.setCollectionConfigName(\"conf1\");\n    }\n    makeRequest(baseUrl, createCmd);\n    \n    createCmd = new Create();\n    createCmd.setCoreName(\"halfcollection_shard1_replica1\");\n    createCmd.setCollection(\"halfcollectionblocker2\");\n    dataDir = createTempDir().toFile().getAbsolutePath();\n    createCmd.setDataDir(dataDir);\n    createCmd.setNumShards(1);\n    if (secondConfigSet) {\n      createCmd.setCollectionConfigName(\"conf1\");\n    }\n    makeRequest(getBaseUrl((HttpSolrClient) clients.get(1)), createCmd);\n    \n    params = new ModifiableSolrParams();\n    params.set(\"action\", CollectionAction.CREATE.toString());\n    collectionName = \"halfcollection\";\n    params.set(\"name\", collectionName);\n    params.set(\"numShards\", 2);\n    params.set(\"wt\", \"xml\");\n    \n    if (secondConfigSet) {\n      params.set(\"collection.configName\", \"conf1\");\n    }\n    \n    String nn1 = ((SolrDispatchFilter) jettys.get(0).getDispatchFilter().getFilter()).getCores().getZkController().getNodeName();\n    String nn2 =  ((SolrDispatchFilter) jettys.get(1).getDispatchFilter().getFilter()).getCores().getZkController().getNodeName();\n    \n    params.set(OverseerCollectionMessageHandler.CREATE_NODE_SET, nn1 + \",\" + nn2);\n    request = new QueryRequest(params);\n    request.setPath(\"/admin/collections\");\n    gotExp = false;\n    NamedList<Object> resp = makeRequest(baseUrl, request);;\n    \n    SimpleOrderedMap success = (SimpleOrderedMap) resp.get(\"success\");\n    SimpleOrderedMap failure = (SimpleOrderedMap) resp.get(\"failure\");\n\n    assertNotNull(resp.toString(), success);\n    assertNotNull(resp.toString(), failure);\n    \n    String val1 = success.getVal(0).toString();\n    String val2 = failure.getVal(0).toString();\n    assertTrue(val1.contains(\"SolrException\") || val2.contains(\"SolrException\"));\n  }\n\n","sourceOld":"  private void testErrorHandling() throws Exception {\n    final String baseUrl = getBaseUrl((HttpSolrClient) clients.get(0));\n    \n    \n    // try a bad action\n    ModifiableSolrParams params = new ModifiableSolrParams();\n    params.set(\"action\", \"BADACTION\");\n    String collectionName = \"badactioncollection\";\n    params.set(\"name\", collectionName);\n    params.set(\"numShards\", 2);\n    QueryRequest request = new QueryRequest(params);\n    request.setPath(\"/admin/collections\");\n    boolean gotExp = false;\n    try {\n      makeRequest(baseUrl, request);\n    } catch (SolrException e) {\n      gotExp = true;\n    }\n    assertTrue(gotExp);\n    \n    \n    // leave out required param name\n    params = new ModifiableSolrParams();\n    params.set(\"action\", CollectionAction.CREATE.toString());\n    params.set(\"numShards\", 2);\n    collectionName = \"collection\";\n    // No Name\n    // params.set(\"name\", collectionName);\n    if (secondConfigSet) {\n      params.set(\"collection.configName\", \"conf1\");\n    }\n    request = new QueryRequest(params);\n    request.setPath(\"/admin/collections\");\n    gotExp = false;\n    try {\n      makeRequest(baseUrl, request);\n    } catch (SolrException e) {\n      gotExp = true;\n    }\n    assertTrue(gotExp);\n    \n    // Too many replicas\n    params = new ModifiableSolrParams();\n    params.set(\"action\", CollectionAction.CREATE.toString());\n    collectionName = \"collection\";\n    params.set(\"name\", collectionName);\n    params.set(\"numShards\", 2);\n    if (secondConfigSet) {\n      params.set(\"collection.configName\", \"conf1\");\n    }\n    params.set(REPLICATION_FACTOR, 10);\n    request = new QueryRequest(params);\n    request.setPath(\"/admin/collections\");\n    gotExp = false;\n    try {\n      makeRequest(baseUrl, request);\n    } catch (SolrException e) {\n      gotExp = true;\n    }\n    assertTrue(gotExp);\n    \n    // No numShards should fail\n    params = new ModifiableSolrParams();\n    params.set(\"action\", CollectionAction.CREATE.toString());\n    collectionName = \"acollection\";\n    params.set(\"name\", collectionName);\n    params.set(REPLICATION_FACTOR, 10);\n    if (secondConfigSet) {\n      params.set(\"collection.configName\", \"conf1\");\n    }\n    request = new QueryRequest(params);\n    request.setPath(\"/admin/collections\");\n    gotExp = false;\n    try {\n      makeRequest(baseUrl, request);\n    } catch (SolrException e) {\n      gotExp = true;\n    }\n    assertTrue(gotExp);\n    \n    // 0 numShards should fail\n    params = new ModifiableSolrParams();\n    params.set(\"action\", CollectionAction.CREATE.toString());\n    collectionName = \"acollection\";\n    params.set(\"name\", collectionName);\n    params.set(REPLICATION_FACTOR, 10);\n    params.set(\"numShards\", 0);\n    if (secondConfigSet) {\n      params.set(\"collection.configName\", \"conf1\");\n    }\n    request = new QueryRequest(params);\n    request.setPath(\"/admin/collections\");\n    gotExp = false;\n    try {\n      makeRequest(baseUrl, request);\n    } catch (SolrException e) {\n      gotExp = true;\n    }\n    assertTrue(gotExp);\n    \n    // Fail on one node\n    \n    // first we make a core with the core name the collections api\n    // will try and use - this will cause our mock fail\n    Create createCmd = new Create();\n    createCmd.setCoreName(\"halfcollection_shard1_replica1\");\n    createCmd.setCollection(\"halfcollectionblocker\");\n    String dataDir = createTempDir().toFile().getAbsolutePath();\n    createCmd.setDataDir(dataDir);\n    createCmd.setNumShards(1);\n    if (secondConfigSet) {\n      createCmd.setCollectionConfigName(\"conf1\");\n    }\n    makeRequest(baseUrl, createCmd);\n    \n    createCmd = new Create();\n    createCmd.setCoreName(\"halfcollection_shard1_replica1\");\n    createCmd.setCollection(\"halfcollectionblocker2\");\n    dataDir = createTempDir().toFile().getAbsolutePath();\n    createCmd.setDataDir(dataDir);\n    createCmd.setNumShards(1);\n    if (secondConfigSet) {\n      createCmd.setCollectionConfigName(\"conf1\");\n    }\n    makeRequest(getBaseUrl((HttpSolrClient) clients.get(1)), createCmd);\n    \n    params = new ModifiableSolrParams();\n    params.set(\"action\", CollectionAction.CREATE.toString());\n    collectionName = \"halfcollection\";\n    params.set(\"name\", collectionName);\n    params.set(\"numShards\", 2);\n    params.set(\"wt\", \"xml\");\n    \n    if (secondConfigSet) {\n      params.set(\"collection.configName\", \"conf1\");\n    }\n    \n    String nn1 = ((SolrDispatchFilter) jettys.get(0).getDispatchFilter().getFilter()).getCores().getZkController().getNodeName();\n    String nn2 =  ((SolrDispatchFilter) jettys.get(1).getDispatchFilter().getFilter()).getCores().getZkController().getNodeName();\n    \n    params.set(OverseerCollectionProcessor.CREATE_NODE_SET, nn1 + \",\" + nn2);\n    request = new QueryRequest(params);\n    request.setPath(\"/admin/collections\");\n    gotExp = false;\n    NamedList<Object> resp = makeRequest(baseUrl, request);;\n    \n    SimpleOrderedMap success = (SimpleOrderedMap) resp.get(\"success\");\n    SimpleOrderedMap failure = (SimpleOrderedMap) resp.get(\"failure\");\n\n    assertNotNull(resp.toString(), success);\n    assertNotNull(resp.toString(), failure);\n    \n    String val1 = success.getVal(0).toString();\n    String val2 = failure.getVal(0).toString();\n    assertTrue(val1.contains(\"SolrException\") || val2.contains(\"SolrException\"));\n  }\n\n","bugFix":["fe999fc2d95d6fea71f960bf9556858387ba21f5"],"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"1088b72b3b4cc45316b7595bd09023c859cd2327","date":1447150009,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/CollectionsAPIDistributedZkTest#testErrorHandling().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/CollectionsAPIDistributedZkTest#testErrorHandling().mjava","sourceNew":"  private void testErrorHandling() throws Exception {\n    final String baseUrl = getBaseUrl((HttpSolrClient) clients.get(0));\n    \n    \n    // try a bad action\n    ModifiableSolrParams params = new ModifiableSolrParams();\n    params.set(\"action\", \"BADACTION\");\n    String collectionName = \"badactioncollection\";\n    params.set(\"name\", collectionName);\n    params.set(\"numShards\", 2);\n    QueryRequest request = new QueryRequest(params);\n    request.setPath(\"/admin/collections\");\n    boolean gotExp = false;\n    try {\n      makeRequest(baseUrl, request);\n    } catch (SolrException e) {\n      gotExp = true;\n    }\n    assertTrue(gotExp);\n    \n    \n    // leave out required param name\n    params = new ModifiableSolrParams();\n    params.set(\"action\", CollectionAction.CREATE.toString());\n    params.set(\"numShards\", 2);\n    collectionName = \"collection\";\n    // No Name\n    // params.set(\"name\", collectionName);\n    if (secondConfigSet) {\n      params.set(\"collection.configName\", \"conf1\");\n    }\n    request = new QueryRequest(params);\n    request.setPath(\"/admin/collections\");\n    gotExp = false;\n    try {\n      makeRequest(baseUrl, request);\n    } catch (SolrException e) {\n      gotExp = true;\n    }\n    assertTrue(gotExp);\n    \n    // Too many replicas\n    params = new ModifiableSolrParams();\n    params.set(\"action\", CollectionAction.CREATE.toString());\n    collectionName = \"collection\";\n    params.set(\"name\", collectionName);\n    params.set(\"numShards\", 2);\n    if (secondConfigSet) {\n      params.set(\"collection.configName\", \"conf1\");\n    }\n    params.set(REPLICATION_FACTOR, 10);\n    request = new QueryRequest(params);\n    request.setPath(\"/admin/collections\");\n    gotExp = false;\n    try {\n      makeRequest(baseUrl, request);\n    } catch (SolrException e) {\n      gotExp = true;\n    }\n    assertTrue(gotExp);\n    \n    // No numShards should fail\n    params = new ModifiableSolrParams();\n    params.set(\"action\", CollectionAction.CREATE.toString());\n    collectionName = \"acollection\";\n    params.set(\"name\", collectionName);\n    params.set(REPLICATION_FACTOR, 10);\n    if (secondConfigSet) {\n      params.set(\"collection.configName\", \"conf1\");\n    }\n    request = new QueryRequest(params);\n    request.setPath(\"/admin/collections\");\n    gotExp = false;\n    try {\n      makeRequest(baseUrl, request);\n    } catch (SolrException e) {\n      gotExp = true;\n    }\n    assertTrue(gotExp);\n    \n    // 0 numShards should fail\n    params = new ModifiableSolrParams();\n    params.set(\"action\", CollectionAction.CREATE.toString());\n    collectionName = \"acollection\";\n    params.set(\"name\", collectionName);\n    params.set(REPLICATION_FACTOR, 10);\n    params.set(\"numShards\", 0);\n    if (secondConfigSet) {\n      params.set(\"collection.configName\", \"conf1\");\n    }\n    request = new QueryRequest(params);\n    request.setPath(\"/admin/collections\");\n    gotExp = false;\n    try {\n      makeRequest(baseUrl, request);\n    } catch (SolrException e) {\n      gotExp = true;\n    }\n    assertTrue(gotExp);\n    \n    // Fail on one node\n    \n    // first we make a core with the core name the collections api\n    // will try and use - this will cause our mock fail\n    Create createCmd = new Create();\n    createCmd.setCoreName(\"halfcollection_shard1_replica1\");\n    createCmd.setCollection(\"halfcollectionblocker\");\n    String dataDir = createTempDir().toFile().getAbsolutePath();\n    createCmd.setDataDir(dataDir);\n    createCmd.setNumShards(1);\n    if (secondConfigSet) {\n      createCmd.setCollectionConfigName(\"conf1\");\n    }\n    makeRequest(baseUrl, createCmd);\n    \n    createCmd = new Create();\n    createCmd.setCoreName(\"halfcollection_shard1_replica1\");\n    createCmd.setCollection(\"halfcollectionblocker2\");\n    dataDir = createTempDir().toFile().getAbsolutePath();\n    createCmd.setDataDir(dataDir);\n    createCmd.setNumShards(1);\n    if (secondConfigSet) {\n      createCmd.setCollectionConfigName(\"conf1\");\n    }\n    makeRequest(getBaseUrl((HttpSolrClient) clients.get(1)), createCmd);\n    \n    params = new ModifiableSolrParams();\n    params.set(\"action\", CollectionAction.CREATE.toString());\n    collectionName = \"halfcollection\";\n    params.set(\"name\", collectionName);\n    params.set(\"numShards\", 2);\n    params.set(\"wt\", \"xml\");\n    \n    if (secondConfigSet) {\n      params.set(\"collection.configName\", \"conf1\");\n    }\n    \n    String nn1 = jettys.get(0).getCoreContainer().getZkController().getNodeName();\n    String nn2 =  jettys.get(1).getCoreContainer().getZkController().getNodeName();\n    \n    params.set(OverseerCollectionMessageHandler.CREATE_NODE_SET, nn1 + \",\" + nn2);\n    request = new QueryRequest(params);\n    request.setPath(\"/admin/collections\");\n    gotExp = false;\n    NamedList<Object> resp = makeRequest(baseUrl, request);;\n    \n    SimpleOrderedMap success = (SimpleOrderedMap) resp.get(\"success\");\n    SimpleOrderedMap failure = (SimpleOrderedMap) resp.get(\"failure\");\n\n    assertNotNull(resp.toString(), success);\n    assertNotNull(resp.toString(), failure);\n    \n    String val1 = success.getVal(0).toString();\n    String val2 = failure.getVal(0).toString();\n    assertTrue(val1.contains(\"SolrException\") || val2.contains(\"SolrException\"));\n  }\n\n","sourceOld":"  private void testErrorHandling() throws Exception {\n    final String baseUrl = getBaseUrl((HttpSolrClient) clients.get(0));\n    \n    \n    // try a bad action\n    ModifiableSolrParams params = new ModifiableSolrParams();\n    params.set(\"action\", \"BADACTION\");\n    String collectionName = \"badactioncollection\";\n    params.set(\"name\", collectionName);\n    params.set(\"numShards\", 2);\n    QueryRequest request = new QueryRequest(params);\n    request.setPath(\"/admin/collections\");\n    boolean gotExp = false;\n    try {\n      makeRequest(baseUrl, request);\n    } catch (SolrException e) {\n      gotExp = true;\n    }\n    assertTrue(gotExp);\n    \n    \n    // leave out required param name\n    params = new ModifiableSolrParams();\n    params.set(\"action\", CollectionAction.CREATE.toString());\n    params.set(\"numShards\", 2);\n    collectionName = \"collection\";\n    // No Name\n    // params.set(\"name\", collectionName);\n    if (secondConfigSet) {\n      params.set(\"collection.configName\", \"conf1\");\n    }\n    request = new QueryRequest(params);\n    request.setPath(\"/admin/collections\");\n    gotExp = false;\n    try {\n      makeRequest(baseUrl, request);\n    } catch (SolrException e) {\n      gotExp = true;\n    }\n    assertTrue(gotExp);\n    \n    // Too many replicas\n    params = new ModifiableSolrParams();\n    params.set(\"action\", CollectionAction.CREATE.toString());\n    collectionName = \"collection\";\n    params.set(\"name\", collectionName);\n    params.set(\"numShards\", 2);\n    if (secondConfigSet) {\n      params.set(\"collection.configName\", \"conf1\");\n    }\n    params.set(REPLICATION_FACTOR, 10);\n    request = new QueryRequest(params);\n    request.setPath(\"/admin/collections\");\n    gotExp = false;\n    try {\n      makeRequest(baseUrl, request);\n    } catch (SolrException e) {\n      gotExp = true;\n    }\n    assertTrue(gotExp);\n    \n    // No numShards should fail\n    params = new ModifiableSolrParams();\n    params.set(\"action\", CollectionAction.CREATE.toString());\n    collectionName = \"acollection\";\n    params.set(\"name\", collectionName);\n    params.set(REPLICATION_FACTOR, 10);\n    if (secondConfigSet) {\n      params.set(\"collection.configName\", \"conf1\");\n    }\n    request = new QueryRequest(params);\n    request.setPath(\"/admin/collections\");\n    gotExp = false;\n    try {\n      makeRequest(baseUrl, request);\n    } catch (SolrException e) {\n      gotExp = true;\n    }\n    assertTrue(gotExp);\n    \n    // 0 numShards should fail\n    params = new ModifiableSolrParams();\n    params.set(\"action\", CollectionAction.CREATE.toString());\n    collectionName = \"acollection\";\n    params.set(\"name\", collectionName);\n    params.set(REPLICATION_FACTOR, 10);\n    params.set(\"numShards\", 0);\n    if (secondConfigSet) {\n      params.set(\"collection.configName\", \"conf1\");\n    }\n    request = new QueryRequest(params);\n    request.setPath(\"/admin/collections\");\n    gotExp = false;\n    try {\n      makeRequest(baseUrl, request);\n    } catch (SolrException e) {\n      gotExp = true;\n    }\n    assertTrue(gotExp);\n    \n    // Fail on one node\n    \n    // first we make a core with the core name the collections api\n    // will try and use - this will cause our mock fail\n    Create createCmd = new Create();\n    createCmd.setCoreName(\"halfcollection_shard1_replica1\");\n    createCmd.setCollection(\"halfcollectionblocker\");\n    String dataDir = createTempDir().toFile().getAbsolutePath();\n    createCmd.setDataDir(dataDir);\n    createCmd.setNumShards(1);\n    if (secondConfigSet) {\n      createCmd.setCollectionConfigName(\"conf1\");\n    }\n    makeRequest(baseUrl, createCmd);\n    \n    createCmd = new Create();\n    createCmd.setCoreName(\"halfcollection_shard1_replica1\");\n    createCmd.setCollection(\"halfcollectionblocker2\");\n    dataDir = createTempDir().toFile().getAbsolutePath();\n    createCmd.setDataDir(dataDir);\n    createCmd.setNumShards(1);\n    if (secondConfigSet) {\n      createCmd.setCollectionConfigName(\"conf1\");\n    }\n    makeRequest(getBaseUrl((HttpSolrClient) clients.get(1)), createCmd);\n    \n    params = new ModifiableSolrParams();\n    params.set(\"action\", CollectionAction.CREATE.toString());\n    collectionName = \"halfcollection\";\n    params.set(\"name\", collectionName);\n    params.set(\"numShards\", 2);\n    params.set(\"wt\", \"xml\");\n    \n    if (secondConfigSet) {\n      params.set(\"collection.configName\", \"conf1\");\n    }\n    \n    String nn1 = ((SolrDispatchFilter) jettys.get(0).getDispatchFilter().getFilter()).getCores().getZkController().getNodeName();\n    String nn2 =  ((SolrDispatchFilter) jettys.get(1).getDispatchFilter().getFilter()).getCores().getZkController().getNodeName();\n    \n    params.set(OverseerCollectionMessageHandler.CREATE_NODE_SET, nn1 + \",\" + nn2);\n    request = new QueryRequest(params);\n    request.setPath(\"/admin/collections\");\n    gotExp = false;\n    NamedList<Object> resp = makeRequest(baseUrl, request);;\n    \n    SimpleOrderedMap success = (SimpleOrderedMap) resp.get(\"success\");\n    SimpleOrderedMap failure = (SimpleOrderedMap) resp.get(\"failure\");\n\n    assertNotNull(resp.toString(), success);\n    assertNotNull(resp.toString(), failure);\n    \n    String val1 = success.getVal(0).toString();\n    String val2 = failure.getVal(0).toString();\n    assertTrue(val1.contains(\"SolrException\") || val2.contains(\"SolrException\"));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"f9362075f92dff89425ca488b480f70d565d66e7","date":1454985541,"type":3,"author":"markrmiller","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/CollectionsAPIDistributedZkTest#testErrorHandling().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/CollectionsAPIDistributedZkTest#testErrorHandling().mjava","sourceNew":"  private void testErrorHandling() throws Exception {\n    final String baseUrl = getBaseUrl((HttpSolrClient) clients.get(0));\n    \n    // try a bad action\n    ModifiableSolrParams params = new ModifiableSolrParams();\n    params.set(\"action\", \"BADACTION\");\n    String collectionName = \"badactioncollection\";\n    params.set(\"name\", collectionName);\n    params.set(\"numShards\", 2);\n    QueryRequest request = new QueryRequest(params);\n    request.setPath(\"/admin/collections\");\n    boolean gotExp = false;\n    try {\n      makeRequest(baseUrl, request);\n    } catch (SolrException e) {\n      gotExp = true;\n    }\n    assertTrue(gotExp);\n    \n    \n    // leave out required param name\n    params = new ModifiableSolrParams();\n    params.set(\"action\", CollectionAction.CREATE.toString());\n    params.set(\"numShards\", 2);\n    collectionName = \"collection\";\n    // No Name\n    // params.set(\"name\", collectionName);\n    if (secondConfigSet) {\n      params.set(\"collection.configName\", \"conf1\");\n    }\n    request = new QueryRequest(params);\n    request.setPath(\"/admin/collections\");\n    gotExp = false;\n    try {\n      makeRequest(baseUrl, request);\n    } catch (SolrException e) {\n      gotExp = true;\n    }\n    assertTrue(gotExp);\n    \n    // Too many replicas\n    params = new ModifiableSolrParams();\n    params.set(\"action\", CollectionAction.CREATE.toString());\n    collectionName = \"collection\";\n    params.set(\"name\", collectionName);\n    params.set(\"numShards\", 2);\n    if (secondConfigSet) {\n      params.set(\"collection.configName\", \"conf1\");\n    }\n    params.set(REPLICATION_FACTOR, 10);\n    request = new QueryRequest(params);\n    request.setPath(\"/admin/collections\");\n    gotExp = false;\n    try {\n      makeRequest(baseUrl, request);\n    } catch (SolrException e) {\n      gotExp = true;\n    }\n    assertTrue(gotExp);\n    \n    // No numShards should fail\n    params = new ModifiableSolrParams();\n    params.set(\"action\", CollectionAction.CREATE.toString());\n    collectionName = \"acollection\";\n    params.set(\"name\", collectionName);\n    params.set(REPLICATION_FACTOR, 10);\n    if (secondConfigSet) {\n      params.set(\"collection.configName\", \"conf1\");\n    }\n    request = new QueryRequest(params);\n    request.setPath(\"/admin/collections\");\n    gotExp = false;\n    try {\n      makeRequest(baseUrl, request);\n    } catch (SolrException e) {\n      gotExp = true;\n    }\n    assertTrue(gotExp);\n    \n    // 0 numShards should fail\n    params = new ModifiableSolrParams();\n    params.set(\"action\", CollectionAction.CREATE.toString());\n    collectionName = \"acollection\";\n    params.set(\"name\", collectionName);\n    params.set(REPLICATION_FACTOR, 10);\n    params.set(\"numShards\", 0);\n    if (secondConfigSet) {\n      params.set(\"collection.configName\", \"conf1\");\n    }\n    request = new QueryRequest(params);\n    request.setPath(\"/admin/collections\");\n    gotExp = false;\n    try {\n      makeRequest(baseUrl, request);\n    } catch (SolrException e) {\n      gotExp = true;\n    }\n    assertTrue(gotExp);\n    \n    // Fail on one node\n    \n    // first we make a core with the core name the collections api\n    // will try and use - this will cause our mock fail\n    Create createCmd = new Create();\n    createCmd.setCoreName(\"halfcollection_shard1_replica1\");\n    createCmd.setCollection(\"halfcollectionblocker\");\n    String dataDir = createTempDir().toFile().getAbsolutePath();\n    createCmd.setDataDir(dataDir);\n    createCmd.setNumShards(1);\n    if (secondConfigSet) {\n      createCmd.setCollectionConfigName(\"conf1\");\n    }\n    makeRequest(baseUrl, createCmd);\n    \n    createCmd = new Create();\n    createCmd.setCoreName(\"halfcollection_shard1_replica1\");\n    createCmd.setCollection(\"halfcollectionblocker2\");\n    dataDir = createTempDir().toFile().getAbsolutePath();\n    createCmd.setDataDir(dataDir);\n    createCmd.setNumShards(1);\n    if (secondConfigSet) {\n      createCmd.setCollectionConfigName(\"conf1\");\n    }\n    makeRequest(getBaseUrl((HttpSolrClient) clients.get(1)), createCmd);\n    \n    params = new ModifiableSolrParams();\n    params.set(\"action\", CollectionAction.CREATE.toString());\n    collectionName = \"halfcollection\";\n    params.set(\"name\", collectionName);\n    params.set(\"numShards\", 2);\n    params.set(\"wt\", \"xml\");\n    \n    if (secondConfigSet) {\n      params.set(\"collection.configName\", \"conf1\");\n    }\n    \n    String nn1 = jettys.get(0).getCoreContainer().getZkController().getNodeName();\n    String nn2 =  jettys.get(1).getCoreContainer().getZkController().getNodeName();\n    \n    params.set(OverseerCollectionMessageHandler.CREATE_NODE_SET, nn1 + \",\" + nn2);\n    request = new QueryRequest(params);\n    request.setPath(\"/admin/collections\");\n    gotExp = false;\n    NamedList<Object> resp = makeRequest(baseUrl, request);;\n    \n    SimpleOrderedMap success = (SimpleOrderedMap) resp.get(\"success\");\n    SimpleOrderedMap failure = (SimpleOrderedMap) resp.get(\"failure\");\n\n    assertNotNull(resp.toString(), success);\n    assertNotNull(resp.toString(), failure);\n    \n    String val1 = success.getVal(0).toString();\n    String val2 = failure.getVal(0).toString();\n    assertTrue(val1.contains(\"SolrException\") || val2.contains(\"SolrException\"));\n  }\n\n","sourceOld":"  private void testErrorHandling() throws Exception {\n    final String baseUrl = getBaseUrl((HttpSolrClient) clients.get(0));\n    \n    \n    // try a bad action\n    ModifiableSolrParams params = new ModifiableSolrParams();\n    params.set(\"action\", \"BADACTION\");\n    String collectionName = \"badactioncollection\";\n    params.set(\"name\", collectionName);\n    params.set(\"numShards\", 2);\n    QueryRequest request = new QueryRequest(params);\n    request.setPath(\"/admin/collections\");\n    boolean gotExp = false;\n    try {\n      makeRequest(baseUrl, request);\n    } catch (SolrException e) {\n      gotExp = true;\n    }\n    assertTrue(gotExp);\n    \n    \n    // leave out required param name\n    params = new ModifiableSolrParams();\n    params.set(\"action\", CollectionAction.CREATE.toString());\n    params.set(\"numShards\", 2);\n    collectionName = \"collection\";\n    // No Name\n    // params.set(\"name\", collectionName);\n    if (secondConfigSet) {\n      params.set(\"collection.configName\", \"conf1\");\n    }\n    request = new QueryRequest(params);\n    request.setPath(\"/admin/collections\");\n    gotExp = false;\n    try {\n      makeRequest(baseUrl, request);\n    } catch (SolrException e) {\n      gotExp = true;\n    }\n    assertTrue(gotExp);\n    \n    // Too many replicas\n    params = new ModifiableSolrParams();\n    params.set(\"action\", CollectionAction.CREATE.toString());\n    collectionName = \"collection\";\n    params.set(\"name\", collectionName);\n    params.set(\"numShards\", 2);\n    if (secondConfigSet) {\n      params.set(\"collection.configName\", \"conf1\");\n    }\n    params.set(REPLICATION_FACTOR, 10);\n    request = new QueryRequest(params);\n    request.setPath(\"/admin/collections\");\n    gotExp = false;\n    try {\n      makeRequest(baseUrl, request);\n    } catch (SolrException e) {\n      gotExp = true;\n    }\n    assertTrue(gotExp);\n    \n    // No numShards should fail\n    params = new ModifiableSolrParams();\n    params.set(\"action\", CollectionAction.CREATE.toString());\n    collectionName = \"acollection\";\n    params.set(\"name\", collectionName);\n    params.set(REPLICATION_FACTOR, 10);\n    if (secondConfigSet) {\n      params.set(\"collection.configName\", \"conf1\");\n    }\n    request = new QueryRequest(params);\n    request.setPath(\"/admin/collections\");\n    gotExp = false;\n    try {\n      makeRequest(baseUrl, request);\n    } catch (SolrException e) {\n      gotExp = true;\n    }\n    assertTrue(gotExp);\n    \n    // 0 numShards should fail\n    params = new ModifiableSolrParams();\n    params.set(\"action\", CollectionAction.CREATE.toString());\n    collectionName = \"acollection\";\n    params.set(\"name\", collectionName);\n    params.set(REPLICATION_FACTOR, 10);\n    params.set(\"numShards\", 0);\n    if (secondConfigSet) {\n      params.set(\"collection.configName\", \"conf1\");\n    }\n    request = new QueryRequest(params);\n    request.setPath(\"/admin/collections\");\n    gotExp = false;\n    try {\n      makeRequest(baseUrl, request);\n    } catch (SolrException e) {\n      gotExp = true;\n    }\n    assertTrue(gotExp);\n    \n    // Fail on one node\n    \n    // first we make a core with the core name the collections api\n    // will try and use - this will cause our mock fail\n    Create createCmd = new Create();\n    createCmd.setCoreName(\"halfcollection_shard1_replica1\");\n    createCmd.setCollection(\"halfcollectionblocker\");\n    String dataDir = createTempDir().toFile().getAbsolutePath();\n    createCmd.setDataDir(dataDir);\n    createCmd.setNumShards(1);\n    if (secondConfigSet) {\n      createCmd.setCollectionConfigName(\"conf1\");\n    }\n    makeRequest(baseUrl, createCmd);\n    \n    createCmd = new Create();\n    createCmd.setCoreName(\"halfcollection_shard1_replica1\");\n    createCmd.setCollection(\"halfcollectionblocker2\");\n    dataDir = createTempDir().toFile().getAbsolutePath();\n    createCmd.setDataDir(dataDir);\n    createCmd.setNumShards(1);\n    if (secondConfigSet) {\n      createCmd.setCollectionConfigName(\"conf1\");\n    }\n    makeRequest(getBaseUrl((HttpSolrClient) clients.get(1)), createCmd);\n    \n    params = new ModifiableSolrParams();\n    params.set(\"action\", CollectionAction.CREATE.toString());\n    collectionName = \"halfcollection\";\n    params.set(\"name\", collectionName);\n    params.set(\"numShards\", 2);\n    params.set(\"wt\", \"xml\");\n    \n    if (secondConfigSet) {\n      params.set(\"collection.configName\", \"conf1\");\n    }\n    \n    String nn1 = jettys.get(0).getCoreContainer().getZkController().getNodeName();\n    String nn2 =  jettys.get(1).getCoreContainer().getZkController().getNodeName();\n    \n    params.set(OverseerCollectionMessageHandler.CREATE_NODE_SET, nn1 + \",\" + nn2);\n    request = new QueryRequest(params);\n    request.setPath(\"/admin/collections\");\n    gotExp = false;\n    NamedList<Object> resp = makeRequest(baseUrl, request);;\n    \n    SimpleOrderedMap success = (SimpleOrderedMap) resp.get(\"success\");\n    SimpleOrderedMap failure = (SimpleOrderedMap) resp.get(\"failure\");\n\n    assertNotNull(resp.toString(), success);\n    assertNotNull(resp.toString(), failure);\n    \n    String val1 = success.getVal(0).toString();\n    String val2 = failure.getVal(0).toString();\n    assertTrue(val1.contains(\"SolrException\") || val2.contains(\"SolrException\"));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"efefd19367eebaa6d911ba8f441a30b7b7564e26","date":1461003590,"type":3,"author":"anshum","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/CollectionsAPIDistributedZkTest#testErrorHandling().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/CollectionsAPIDistributedZkTest#testErrorHandling().mjava","sourceNew":"  private void testErrorHandling() throws Exception {\n    final String baseUrl = getBaseUrl((HttpSolrClient) clients.get(0));\n    \n    // try a bad action\n    ModifiableSolrParams params = new ModifiableSolrParams();\n    params.set(\"action\", \"BADACTION\");\n    String collectionName = \"badactioncollection\";\n    params.set(\"name\", collectionName);\n    params.set(\"numShards\", 2);\n    QueryRequest request = new QueryRequest(params);\n    request.setPath(\"/admin/collections\");\n    boolean gotExp = false;\n    try {\n      makeRequest(baseUrl, request);\n    } catch (SolrException e) {\n      gotExp = true;\n    }\n    assertTrue(gotExp);\n    \n    \n    // leave out required param name\n    params = new ModifiableSolrParams();\n    params.set(\"action\", CollectionAction.CREATE.toString());\n    params.set(\"numShards\", 2);\n    collectionName = \"collection\";\n    // No Name\n    // params.set(\"name\", collectionName);\n    if (secondConfigSet) {\n      params.set(\"collection.configName\", \"conf1\");\n    }\n    request = new QueryRequest(params);\n    request.setPath(\"/admin/collections\");\n    gotExp = false;\n    try {\n      makeRequest(baseUrl, request);\n    } catch (SolrException e) {\n      gotExp = true;\n    }\n    assertTrue(gotExp);\n    \n    // Too many replicas\n    params = new ModifiableSolrParams();\n    params.set(\"action\", CollectionAction.CREATE.toString());\n    collectionName = \"collection\";\n    params.set(\"name\", collectionName);\n    params.set(\"numShards\", 2);\n    if (secondConfigSet) {\n      params.set(\"collection.configName\", \"conf1\");\n    }\n    params.set(REPLICATION_FACTOR, 10);\n    request = new QueryRequest(params);\n    request.setPath(\"/admin/collections\");\n    gotExp = false;\n    try {\n      makeRequest(baseUrl, request);\n    } catch (SolrException e) {\n      gotExp = true;\n    }\n    assertTrue(gotExp);\n    \n    // No numShards should fail\n    params = new ModifiableSolrParams();\n    params.set(\"action\", CollectionAction.CREATE.toString());\n    collectionName = \"acollection\";\n    params.set(\"name\", collectionName);\n    params.set(REPLICATION_FACTOR, 10);\n    if (secondConfigSet) {\n      params.set(\"collection.configName\", \"conf1\");\n    }\n    request = new QueryRequest(params);\n    request.setPath(\"/admin/collections\");\n    gotExp = false;\n    try {\n      makeRequest(baseUrl, request);\n    } catch (SolrException e) {\n      gotExp = true;\n    }\n    assertTrue(gotExp);\n    \n    // 0 numShards should fail\n    params = new ModifiableSolrParams();\n    params.set(\"action\", CollectionAction.CREATE.toString());\n    collectionName = \"acollection\";\n    params.set(\"name\", collectionName);\n    params.set(REPLICATION_FACTOR, 10);\n    params.set(\"numShards\", 0);\n    if (secondConfigSet) {\n      params.set(\"collection.configName\", \"conf1\");\n    }\n    request = new QueryRequest(params);\n    request.setPath(\"/admin/collections\");\n    gotExp = false;\n    try {\n      makeRequest(baseUrl, request);\n    } catch (SolrException e) {\n      gotExp = true;\n    }\n    assertTrue(gotExp);\n    \n    // Fail on one node\n    \n    // first we make a core with the core name the collections api\n    // will try and use - this will cause our mock fail\n    Create createCmd = new Create();\n    createCmd.setCoreName(\"halfcollection_shard1_replica1\");\n    createCmd.setCollection(\"halfcollectionblocker\");\n    String dataDir = createTempDir().toFile().getAbsolutePath();\n    createCmd.setDataDir(dataDir);\n    createCmd.setNumShards(1);\n    if (secondConfigSet) {\n      createCmd.setCollectionConfigName(\"conf1\");\n    }\n    makeRequest(baseUrl, createCmd);\n    \n    createCmd = new Create();\n    createCmd.setCoreName(\"halfcollection_shard1_replica1\");\n    createCmd.setCollection(\"halfcollectionblocker2\");\n    dataDir = createTempDir().toFile().getAbsolutePath();\n    createCmd.setDataDir(dataDir);\n    createCmd.setNumShards(1);\n    if (secondConfigSet) {\n      createCmd.setCollectionConfigName(\"conf1\");\n    }\n    makeRequest(getBaseUrl((HttpSolrClient) clients.get(1)), createCmd);\n    \n    params = new ModifiableSolrParams();\n    params.set(\"action\", CollectionAction.CREATE.toString());\n    collectionName = \"halfcollection\";\n    params.set(\"name\", collectionName);\n    params.set(\"numShards\", 2);\n    params.set(\"wt\", \"xml\");\n    \n    if (secondConfigSet) {\n      params.set(\"collection.configName\", \"conf1\");\n    }\n    \n    String nn1 = jettys.get(0).getCoreContainer().getZkController().getNodeName();\n    String nn2 =  jettys.get(1).getCoreContainer().getZkController().getNodeName();\n    \n    params.set(OverseerCollectionMessageHandler.CREATE_NODE_SET, nn1 + \",\" + nn2);\n    request = new QueryRequest(params);\n    request.setPath(\"/admin/collections\");\n    NamedList<Object> resp = makeRequest(baseUrl, request, 60000);\n    \n    SimpleOrderedMap success = (SimpleOrderedMap) resp.get(\"success\");\n    SimpleOrderedMap failure = (SimpleOrderedMap) resp.get(\"failure\");\n\n    assertNotNull(resp.toString(), success);\n    assertNotNull(resp.toString(), failure);\n    \n    String val1 = success.getVal(0).toString();\n    String val2 = failure.getVal(0).toString();\n    assertTrue(val1.contains(\"SolrException\") || val2.contains(\"SolrException\"));\n  }\n\n","sourceOld":"  private void testErrorHandling() throws Exception {\n    final String baseUrl = getBaseUrl((HttpSolrClient) clients.get(0));\n    \n    // try a bad action\n    ModifiableSolrParams params = new ModifiableSolrParams();\n    params.set(\"action\", \"BADACTION\");\n    String collectionName = \"badactioncollection\";\n    params.set(\"name\", collectionName);\n    params.set(\"numShards\", 2);\n    QueryRequest request = new QueryRequest(params);\n    request.setPath(\"/admin/collections\");\n    boolean gotExp = false;\n    try {\n      makeRequest(baseUrl, request);\n    } catch (SolrException e) {\n      gotExp = true;\n    }\n    assertTrue(gotExp);\n    \n    \n    // leave out required param name\n    params = new ModifiableSolrParams();\n    params.set(\"action\", CollectionAction.CREATE.toString());\n    params.set(\"numShards\", 2);\n    collectionName = \"collection\";\n    // No Name\n    // params.set(\"name\", collectionName);\n    if (secondConfigSet) {\n      params.set(\"collection.configName\", \"conf1\");\n    }\n    request = new QueryRequest(params);\n    request.setPath(\"/admin/collections\");\n    gotExp = false;\n    try {\n      makeRequest(baseUrl, request);\n    } catch (SolrException e) {\n      gotExp = true;\n    }\n    assertTrue(gotExp);\n    \n    // Too many replicas\n    params = new ModifiableSolrParams();\n    params.set(\"action\", CollectionAction.CREATE.toString());\n    collectionName = \"collection\";\n    params.set(\"name\", collectionName);\n    params.set(\"numShards\", 2);\n    if (secondConfigSet) {\n      params.set(\"collection.configName\", \"conf1\");\n    }\n    params.set(REPLICATION_FACTOR, 10);\n    request = new QueryRequest(params);\n    request.setPath(\"/admin/collections\");\n    gotExp = false;\n    try {\n      makeRequest(baseUrl, request);\n    } catch (SolrException e) {\n      gotExp = true;\n    }\n    assertTrue(gotExp);\n    \n    // No numShards should fail\n    params = new ModifiableSolrParams();\n    params.set(\"action\", CollectionAction.CREATE.toString());\n    collectionName = \"acollection\";\n    params.set(\"name\", collectionName);\n    params.set(REPLICATION_FACTOR, 10);\n    if (secondConfigSet) {\n      params.set(\"collection.configName\", \"conf1\");\n    }\n    request = new QueryRequest(params);\n    request.setPath(\"/admin/collections\");\n    gotExp = false;\n    try {\n      makeRequest(baseUrl, request);\n    } catch (SolrException e) {\n      gotExp = true;\n    }\n    assertTrue(gotExp);\n    \n    // 0 numShards should fail\n    params = new ModifiableSolrParams();\n    params.set(\"action\", CollectionAction.CREATE.toString());\n    collectionName = \"acollection\";\n    params.set(\"name\", collectionName);\n    params.set(REPLICATION_FACTOR, 10);\n    params.set(\"numShards\", 0);\n    if (secondConfigSet) {\n      params.set(\"collection.configName\", \"conf1\");\n    }\n    request = new QueryRequest(params);\n    request.setPath(\"/admin/collections\");\n    gotExp = false;\n    try {\n      makeRequest(baseUrl, request);\n    } catch (SolrException e) {\n      gotExp = true;\n    }\n    assertTrue(gotExp);\n    \n    // Fail on one node\n    \n    // first we make a core with the core name the collections api\n    // will try and use - this will cause our mock fail\n    Create createCmd = new Create();\n    createCmd.setCoreName(\"halfcollection_shard1_replica1\");\n    createCmd.setCollection(\"halfcollectionblocker\");\n    String dataDir = createTempDir().toFile().getAbsolutePath();\n    createCmd.setDataDir(dataDir);\n    createCmd.setNumShards(1);\n    if (secondConfigSet) {\n      createCmd.setCollectionConfigName(\"conf1\");\n    }\n    makeRequest(baseUrl, createCmd);\n    \n    createCmd = new Create();\n    createCmd.setCoreName(\"halfcollection_shard1_replica1\");\n    createCmd.setCollection(\"halfcollectionblocker2\");\n    dataDir = createTempDir().toFile().getAbsolutePath();\n    createCmd.setDataDir(dataDir);\n    createCmd.setNumShards(1);\n    if (secondConfigSet) {\n      createCmd.setCollectionConfigName(\"conf1\");\n    }\n    makeRequest(getBaseUrl((HttpSolrClient) clients.get(1)), createCmd);\n    \n    params = new ModifiableSolrParams();\n    params.set(\"action\", CollectionAction.CREATE.toString());\n    collectionName = \"halfcollection\";\n    params.set(\"name\", collectionName);\n    params.set(\"numShards\", 2);\n    params.set(\"wt\", \"xml\");\n    \n    if (secondConfigSet) {\n      params.set(\"collection.configName\", \"conf1\");\n    }\n    \n    String nn1 = jettys.get(0).getCoreContainer().getZkController().getNodeName();\n    String nn2 =  jettys.get(1).getCoreContainer().getZkController().getNodeName();\n    \n    params.set(OverseerCollectionMessageHandler.CREATE_NODE_SET, nn1 + \",\" + nn2);\n    request = new QueryRequest(params);\n    request.setPath(\"/admin/collections\");\n    gotExp = false;\n    NamedList<Object> resp = makeRequest(baseUrl, request);;\n    \n    SimpleOrderedMap success = (SimpleOrderedMap) resp.get(\"success\");\n    SimpleOrderedMap failure = (SimpleOrderedMap) resp.get(\"failure\");\n\n    assertNotNull(resp.toString(), success);\n    assertNotNull(resp.toString(), failure);\n    \n    String val1 = success.getVal(0).toString();\n    String val2 = failure.getVal(0).toString();\n    assertTrue(val1.contains(\"SolrException\") || val2.contains(\"SolrException\"));\n  }\n\n","bugFix":["6784d0cc613dc1ee97030eaaa5e0754edc22d164","fe999fc2d95d6fea71f960bf9556858387ba21f5"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0e15955b4980562a0c1c81d08654904f3fadb83b","date":1461068916,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/cloud/CollectionsAPIDistributedZkTest#testErrorHandling().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/CollectionsAPIDistributedZkTest#testErrorHandling().mjava","sourceNew":"  private void testErrorHandling() throws Exception {\n    final String baseUrl = getBaseUrl((HttpSolrClient) clients.get(0));\n    \n    // try a bad action\n    ModifiableSolrParams params = new ModifiableSolrParams();\n    params.set(\"action\", \"BADACTION\");\n    String collectionName = \"badactioncollection\";\n    params.set(\"name\", collectionName);\n    params.set(\"numShards\", 2);\n    QueryRequest request = new QueryRequest(params);\n    request.setPath(\"/admin/collections\");\n    boolean gotExp = false;\n    try {\n      makeRequest(baseUrl, request);\n    } catch (SolrException e) {\n      gotExp = true;\n    }\n    assertTrue(gotExp);\n    \n    \n    // leave out required param name\n    params = new ModifiableSolrParams();\n    params.set(\"action\", CollectionAction.CREATE.toString());\n    params.set(\"numShards\", 2);\n    collectionName = \"collection\";\n    // No Name\n    // params.set(\"name\", collectionName);\n    if (secondConfigSet) {\n      params.set(\"collection.configName\", \"conf1\");\n    }\n    request = new QueryRequest(params);\n    request.setPath(\"/admin/collections\");\n    gotExp = false;\n    try {\n      makeRequest(baseUrl, request);\n    } catch (SolrException e) {\n      gotExp = true;\n    }\n    assertTrue(gotExp);\n    \n    // Too many replicas\n    params = new ModifiableSolrParams();\n    params.set(\"action\", CollectionAction.CREATE.toString());\n    collectionName = \"collection\";\n    params.set(\"name\", collectionName);\n    params.set(\"numShards\", 2);\n    if (secondConfigSet) {\n      params.set(\"collection.configName\", \"conf1\");\n    }\n    params.set(REPLICATION_FACTOR, 10);\n    request = new QueryRequest(params);\n    request.setPath(\"/admin/collections\");\n    gotExp = false;\n    try {\n      makeRequest(baseUrl, request);\n    } catch (SolrException e) {\n      gotExp = true;\n    }\n    assertTrue(gotExp);\n    \n    // No numShards should fail\n    params = new ModifiableSolrParams();\n    params.set(\"action\", CollectionAction.CREATE.toString());\n    collectionName = \"acollection\";\n    params.set(\"name\", collectionName);\n    params.set(REPLICATION_FACTOR, 10);\n    if (secondConfigSet) {\n      params.set(\"collection.configName\", \"conf1\");\n    }\n    request = new QueryRequest(params);\n    request.setPath(\"/admin/collections\");\n    gotExp = false;\n    try {\n      makeRequest(baseUrl, request);\n    } catch (SolrException e) {\n      gotExp = true;\n    }\n    assertTrue(gotExp);\n    \n    // 0 numShards should fail\n    params = new ModifiableSolrParams();\n    params.set(\"action\", CollectionAction.CREATE.toString());\n    collectionName = \"acollection\";\n    params.set(\"name\", collectionName);\n    params.set(REPLICATION_FACTOR, 10);\n    params.set(\"numShards\", 0);\n    if (secondConfigSet) {\n      params.set(\"collection.configName\", \"conf1\");\n    }\n    request = new QueryRequest(params);\n    request.setPath(\"/admin/collections\");\n    gotExp = false;\n    try {\n      makeRequest(baseUrl, request);\n    } catch (SolrException e) {\n      gotExp = true;\n    }\n    assertTrue(gotExp);\n    \n    // Fail on one node\n    \n    // first we make a core with the core name the collections api\n    // will try and use - this will cause our mock fail\n    Create createCmd = new Create();\n    createCmd.setCoreName(\"halfcollection_shard1_replica1\");\n    createCmd.setCollection(\"halfcollectionblocker\");\n    String dataDir = createTempDir().toFile().getAbsolutePath();\n    createCmd.setDataDir(dataDir);\n    createCmd.setNumShards(1);\n    if (secondConfigSet) {\n      createCmd.setCollectionConfigName(\"conf1\");\n    }\n    makeRequest(baseUrl, createCmd);\n    \n    createCmd = new Create();\n    createCmd.setCoreName(\"halfcollection_shard1_replica1\");\n    createCmd.setCollection(\"halfcollectionblocker2\");\n    dataDir = createTempDir().toFile().getAbsolutePath();\n    createCmd.setDataDir(dataDir);\n    createCmd.setNumShards(1);\n    if (secondConfigSet) {\n      createCmd.setCollectionConfigName(\"conf1\");\n    }\n    makeRequest(getBaseUrl((HttpSolrClient) clients.get(1)), createCmd);\n    \n    params = new ModifiableSolrParams();\n    params.set(\"action\", CollectionAction.CREATE.toString());\n    collectionName = \"halfcollection\";\n    params.set(\"name\", collectionName);\n    params.set(\"numShards\", 2);\n    params.set(\"wt\", \"xml\");\n    \n    if (secondConfigSet) {\n      params.set(\"collection.configName\", \"conf1\");\n    }\n    \n    String nn1 = jettys.get(0).getCoreContainer().getZkController().getNodeName();\n    String nn2 =  jettys.get(1).getCoreContainer().getZkController().getNodeName();\n    \n    params.set(OverseerCollectionMessageHandler.CREATE_NODE_SET, nn1 + \",\" + nn2);\n    request = new QueryRequest(params);\n    request.setPath(\"/admin/collections\");\n    NamedList<Object> resp = makeRequest(baseUrl, request, 60000);\n    \n    SimpleOrderedMap success = (SimpleOrderedMap) resp.get(\"success\");\n    SimpleOrderedMap failure = (SimpleOrderedMap) resp.get(\"failure\");\n\n    assertNotNull(resp.toString(), success);\n    assertNotNull(resp.toString(), failure);\n    \n    String val1 = success.getVal(0).toString();\n    String val2 = failure.getVal(0).toString();\n    assertTrue(val1.contains(\"SolrException\") || val2.contains(\"SolrException\"));\n  }\n\n","sourceOld":"  private void testErrorHandling() throws Exception {\n    final String baseUrl = getBaseUrl((HttpSolrClient) clients.get(0));\n    \n    // try a bad action\n    ModifiableSolrParams params = new ModifiableSolrParams();\n    params.set(\"action\", \"BADACTION\");\n    String collectionName = \"badactioncollection\";\n    params.set(\"name\", collectionName);\n    params.set(\"numShards\", 2);\n    QueryRequest request = new QueryRequest(params);\n    request.setPath(\"/admin/collections\");\n    boolean gotExp = false;\n    try {\n      makeRequest(baseUrl, request);\n    } catch (SolrException e) {\n      gotExp = true;\n    }\n    assertTrue(gotExp);\n    \n    \n    // leave out required param name\n    params = new ModifiableSolrParams();\n    params.set(\"action\", CollectionAction.CREATE.toString());\n    params.set(\"numShards\", 2);\n    collectionName = \"collection\";\n    // No Name\n    // params.set(\"name\", collectionName);\n    if (secondConfigSet) {\n      params.set(\"collection.configName\", \"conf1\");\n    }\n    request = new QueryRequest(params);\n    request.setPath(\"/admin/collections\");\n    gotExp = false;\n    try {\n      makeRequest(baseUrl, request);\n    } catch (SolrException e) {\n      gotExp = true;\n    }\n    assertTrue(gotExp);\n    \n    // Too many replicas\n    params = new ModifiableSolrParams();\n    params.set(\"action\", CollectionAction.CREATE.toString());\n    collectionName = \"collection\";\n    params.set(\"name\", collectionName);\n    params.set(\"numShards\", 2);\n    if (secondConfigSet) {\n      params.set(\"collection.configName\", \"conf1\");\n    }\n    params.set(REPLICATION_FACTOR, 10);\n    request = new QueryRequest(params);\n    request.setPath(\"/admin/collections\");\n    gotExp = false;\n    try {\n      makeRequest(baseUrl, request);\n    } catch (SolrException e) {\n      gotExp = true;\n    }\n    assertTrue(gotExp);\n    \n    // No numShards should fail\n    params = new ModifiableSolrParams();\n    params.set(\"action\", CollectionAction.CREATE.toString());\n    collectionName = \"acollection\";\n    params.set(\"name\", collectionName);\n    params.set(REPLICATION_FACTOR, 10);\n    if (secondConfigSet) {\n      params.set(\"collection.configName\", \"conf1\");\n    }\n    request = new QueryRequest(params);\n    request.setPath(\"/admin/collections\");\n    gotExp = false;\n    try {\n      makeRequest(baseUrl, request);\n    } catch (SolrException e) {\n      gotExp = true;\n    }\n    assertTrue(gotExp);\n    \n    // 0 numShards should fail\n    params = new ModifiableSolrParams();\n    params.set(\"action\", CollectionAction.CREATE.toString());\n    collectionName = \"acollection\";\n    params.set(\"name\", collectionName);\n    params.set(REPLICATION_FACTOR, 10);\n    params.set(\"numShards\", 0);\n    if (secondConfigSet) {\n      params.set(\"collection.configName\", \"conf1\");\n    }\n    request = new QueryRequest(params);\n    request.setPath(\"/admin/collections\");\n    gotExp = false;\n    try {\n      makeRequest(baseUrl, request);\n    } catch (SolrException e) {\n      gotExp = true;\n    }\n    assertTrue(gotExp);\n    \n    // Fail on one node\n    \n    // first we make a core with the core name the collections api\n    // will try and use - this will cause our mock fail\n    Create createCmd = new Create();\n    createCmd.setCoreName(\"halfcollection_shard1_replica1\");\n    createCmd.setCollection(\"halfcollectionblocker\");\n    String dataDir = createTempDir().toFile().getAbsolutePath();\n    createCmd.setDataDir(dataDir);\n    createCmd.setNumShards(1);\n    if (secondConfigSet) {\n      createCmd.setCollectionConfigName(\"conf1\");\n    }\n    makeRequest(baseUrl, createCmd);\n    \n    createCmd = new Create();\n    createCmd.setCoreName(\"halfcollection_shard1_replica1\");\n    createCmd.setCollection(\"halfcollectionblocker2\");\n    dataDir = createTempDir().toFile().getAbsolutePath();\n    createCmd.setDataDir(dataDir);\n    createCmd.setNumShards(1);\n    if (secondConfigSet) {\n      createCmd.setCollectionConfigName(\"conf1\");\n    }\n    makeRequest(getBaseUrl((HttpSolrClient) clients.get(1)), createCmd);\n    \n    params = new ModifiableSolrParams();\n    params.set(\"action\", CollectionAction.CREATE.toString());\n    collectionName = \"halfcollection\";\n    params.set(\"name\", collectionName);\n    params.set(\"numShards\", 2);\n    params.set(\"wt\", \"xml\");\n    \n    if (secondConfigSet) {\n      params.set(\"collection.configName\", \"conf1\");\n    }\n    \n    String nn1 = jettys.get(0).getCoreContainer().getZkController().getNodeName();\n    String nn2 =  jettys.get(1).getCoreContainer().getZkController().getNodeName();\n    \n    params.set(OverseerCollectionMessageHandler.CREATE_NODE_SET, nn1 + \",\" + nn2);\n    request = new QueryRequest(params);\n    request.setPath(\"/admin/collections\");\n    gotExp = false;\n    NamedList<Object> resp = makeRequest(baseUrl, request);;\n    \n    SimpleOrderedMap success = (SimpleOrderedMap) resp.get(\"success\");\n    SimpleOrderedMap failure = (SimpleOrderedMap) resp.get(\"failure\");\n\n    assertNotNull(resp.toString(), success);\n    assertNotNull(resp.toString(), failure);\n    \n    String val1 = success.getVal(0).toString();\n    String val2 = failure.getVal(0).toString();\n    assertTrue(val1.contains(\"SolrException\") || val2.contains(\"SolrException\"));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a4efd3fffdd7acd625bb88e455c8097e17f75735","date":1477647201,"type":4,"author":"Alan Woodward","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/core/src/test/org/apache/solr/cloud/CollectionsAPIDistributedZkTest#testErrorHandling().mjava","sourceNew":null,"sourceOld":"  private void testErrorHandling() throws Exception {\n    final String baseUrl = getBaseUrl((HttpSolrClient) clients.get(0));\n    \n    // try a bad action\n    ModifiableSolrParams params = new ModifiableSolrParams();\n    params.set(\"action\", \"BADACTION\");\n    String collectionName = \"badactioncollection\";\n    params.set(\"name\", collectionName);\n    params.set(\"numShards\", 2);\n    QueryRequest request = new QueryRequest(params);\n    request.setPath(\"/admin/collections\");\n    boolean gotExp = false;\n    try {\n      makeRequest(baseUrl, request);\n    } catch (SolrException e) {\n      gotExp = true;\n    }\n    assertTrue(gotExp);\n    \n    \n    // leave out required param name\n    params = new ModifiableSolrParams();\n    params.set(\"action\", CollectionAction.CREATE.toString());\n    params.set(\"numShards\", 2);\n    collectionName = \"collection\";\n    // No Name\n    // params.set(\"name\", collectionName);\n    if (secondConfigSet) {\n      params.set(\"collection.configName\", \"conf1\");\n    }\n    request = new QueryRequest(params);\n    request.setPath(\"/admin/collections\");\n    gotExp = false;\n    try {\n      makeRequest(baseUrl, request);\n    } catch (SolrException e) {\n      gotExp = true;\n    }\n    assertTrue(gotExp);\n    \n    // Too many replicas\n    params = new ModifiableSolrParams();\n    params.set(\"action\", CollectionAction.CREATE.toString());\n    collectionName = \"collection\";\n    params.set(\"name\", collectionName);\n    params.set(\"numShards\", 2);\n    if (secondConfigSet) {\n      params.set(\"collection.configName\", \"conf1\");\n    }\n    params.set(REPLICATION_FACTOR, 10);\n    request = new QueryRequest(params);\n    request.setPath(\"/admin/collections\");\n    gotExp = false;\n    try {\n      makeRequest(baseUrl, request);\n    } catch (SolrException e) {\n      gotExp = true;\n    }\n    assertTrue(gotExp);\n    \n    // No numShards should fail\n    params = new ModifiableSolrParams();\n    params.set(\"action\", CollectionAction.CREATE.toString());\n    collectionName = \"acollection\";\n    params.set(\"name\", collectionName);\n    params.set(REPLICATION_FACTOR, 10);\n    if (secondConfigSet) {\n      params.set(\"collection.configName\", \"conf1\");\n    }\n    request = new QueryRequest(params);\n    request.setPath(\"/admin/collections\");\n    gotExp = false;\n    try {\n      makeRequest(baseUrl, request);\n    } catch (SolrException e) {\n      gotExp = true;\n    }\n    assertTrue(gotExp);\n    \n    // 0 numShards should fail\n    params = new ModifiableSolrParams();\n    params.set(\"action\", CollectionAction.CREATE.toString());\n    collectionName = \"acollection\";\n    params.set(\"name\", collectionName);\n    params.set(REPLICATION_FACTOR, 10);\n    params.set(\"numShards\", 0);\n    if (secondConfigSet) {\n      params.set(\"collection.configName\", \"conf1\");\n    }\n    request = new QueryRequest(params);\n    request.setPath(\"/admin/collections\");\n    gotExp = false;\n    try {\n      makeRequest(baseUrl, request);\n    } catch (SolrException e) {\n      gotExp = true;\n    }\n    assertTrue(gotExp);\n    \n    // Fail on one node\n    \n    // first we make a core with the core name the collections api\n    // will try and use - this will cause our mock fail\n    Create createCmd = new Create();\n    createCmd.setCoreName(\"halfcollection_shard1_replica1\");\n    createCmd.setCollection(\"halfcollectionblocker\");\n    String dataDir = createTempDir().toFile().getAbsolutePath();\n    createCmd.setDataDir(dataDir);\n    createCmd.setNumShards(1);\n    if (secondConfigSet) {\n      createCmd.setCollectionConfigName(\"conf1\");\n    }\n    makeRequest(baseUrl, createCmd);\n    \n    createCmd = new Create();\n    createCmd.setCoreName(\"halfcollection_shard1_replica1\");\n    createCmd.setCollection(\"halfcollectionblocker2\");\n    dataDir = createTempDir().toFile().getAbsolutePath();\n    createCmd.setDataDir(dataDir);\n    createCmd.setNumShards(1);\n    if (secondConfigSet) {\n      createCmd.setCollectionConfigName(\"conf1\");\n    }\n    makeRequest(getBaseUrl((HttpSolrClient) clients.get(1)), createCmd);\n    \n    params = new ModifiableSolrParams();\n    params.set(\"action\", CollectionAction.CREATE.toString());\n    collectionName = \"halfcollection\";\n    params.set(\"name\", collectionName);\n    params.set(\"numShards\", 2);\n    params.set(\"wt\", \"xml\");\n    \n    if (secondConfigSet) {\n      params.set(\"collection.configName\", \"conf1\");\n    }\n    \n    String nn1 = jettys.get(0).getCoreContainer().getZkController().getNodeName();\n    String nn2 =  jettys.get(1).getCoreContainer().getZkController().getNodeName();\n    \n    params.set(OverseerCollectionMessageHandler.CREATE_NODE_SET, nn1 + \",\" + nn2);\n    request = new QueryRequest(params);\n    request.setPath(\"/admin/collections\");\n    NamedList<Object> resp = makeRequest(baseUrl, request, 60000);\n    \n    SimpleOrderedMap success = (SimpleOrderedMap) resp.get(\"success\");\n    SimpleOrderedMap failure = (SimpleOrderedMap) resp.get(\"failure\");\n\n    assertNotNull(resp.toString(), success);\n    assertNotNull(resp.toString(), failure);\n    \n    String val1 = success.getVal(0).toString();\n    String val2 = failure.getVal(0).toString();\n    assertTrue(val1.contains(\"SolrException\") || val2.contains(\"SolrException\"));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"59dce44d6a0b58c171de1d47ad8c0a75831f94fd","date":1477668573,"type":4,"author":"Kevin Risden","isMerge":true,"pathNew":"/dev/null","pathOld":"solr/core/src/test/org/apache/solr/cloud/CollectionsAPIDistributedZkTest#testErrorHandling().mjava","sourceNew":null,"sourceOld":"  private void testErrorHandling() throws Exception {\n    final String baseUrl = getBaseUrl((HttpSolrClient) clients.get(0));\n    \n    // try a bad action\n    ModifiableSolrParams params = new ModifiableSolrParams();\n    params.set(\"action\", \"BADACTION\");\n    String collectionName = \"badactioncollection\";\n    params.set(\"name\", collectionName);\n    params.set(\"numShards\", 2);\n    QueryRequest request = new QueryRequest(params);\n    request.setPath(\"/admin/collections\");\n    boolean gotExp = false;\n    try {\n      makeRequest(baseUrl, request);\n    } catch (SolrException e) {\n      gotExp = true;\n    }\n    assertTrue(gotExp);\n    \n    \n    // leave out required param name\n    params = new ModifiableSolrParams();\n    params.set(\"action\", CollectionAction.CREATE.toString());\n    params.set(\"numShards\", 2);\n    collectionName = \"collection\";\n    // No Name\n    // params.set(\"name\", collectionName);\n    if (secondConfigSet) {\n      params.set(\"collection.configName\", \"conf1\");\n    }\n    request = new QueryRequest(params);\n    request.setPath(\"/admin/collections\");\n    gotExp = false;\n    try {\n      makeRequest(baseUrl, request);\n    } catch (SolrException e) {\n      gotExp = true;\n    }\n    assertTrue(gotExp);\n    \n    // Too many replicas\n    params = new ModifiableSolrParams();\n    params.set(\"action\", CollectionAction.CREATE.toString());\n    collectionName = \"collection\";\n    params.set(\"name\", collectionName);\n    params.set(\"numShards\", 2);\n    if (secondConfigSet) {\n      params.set(\"collection.configName\", \"conf1\");\n    }\n    params.set(REPLICATION_FACTOR, 10);\n    request = new QueryRequest(params);\n    request.setPath(\"/admin/collections\");\n    gotExp = false;\n    try {\n      makeRequest(baseUrl, request);\n    } catch (SolrException e) {\n      gotExp = true;\n    }\n    assertTrue(gotExp);\n    \n    // No numShards should fail\n    params = new ModifiableSolrParams();\n    params.set(\"action\", CollectionAction.CREATE.toString());\n    collectionName = \"acollection\";\n    params.set(\"name\", collectionName);\n    params.set(REPLICATION_FACTOR, 10);\n    if (secondConfigSet) {\n      params.set(\"collection.configName\", \"conf1\");\n    }\n    request = new QueryRequest(params);\n    request.setPath(\"/admin/collections\");\n    gotExp = false;\n    try {\n      makeRequest(baseUrl, request);\n    } catch (SolrException e) {\n      gotExp = true;\n    }\n    assertTrue(gotExp);\n    \n    // 0 numShards should fail\n    params = new ModifiableSolrParams();\n    params.set(\"action\", CollectionAction.CREATE.toString());\n    collectionName = \"acollection\";\n    params.set(\"name\", collectionName);\n    params.set(REPLICATION_FACTOR, 10);\n    params.set(\"numShards\", 0);\n    if (secondConfigSet) {\n      params.set(\"collection.configName\", \"conf1\");\n    }\n    request = new QueryRequest(params);\n    request.setPath(\"/admin/collections\");\n    gotExp = false;\n    try {\n      makeRequest(baseUrl, request);\n    } catch (SolrException e) {\n      gotExp = true;\n    }\n    assertTrue(gotExp);\n    \n    // Fail on one node\n    \n    // first we make a core with the core name the collections api\n    // will try and use - this will cause our mock fail\n    Create createCmd = new Create();\n    createCmd.setCoreName(\"halfcollection_shard1_replica1\");\n    createCmd.setCollection(\"halfcollectionblocker\");\n    String dataDir = createTempDir().toFile().getAbsolutePath();\n    createCmd.setDataDir(dataDir);\n    createCmd.setNumShards(1);\n    if (secondConfigSet) {\n      createCmd.setCollectionConfigName(\"conf1\");\n    }\n    makeRequest(baseUrl, createCmd);\n    \n    createCmd = new Create();\n    createCmd.setCoreName(\"halfcollection_shard1_replica1\");\n    createCmd.setCollection(\"halfcollectionblocker2\");\n    dataDir = createTempDir().toFile().getAbsolutePath();\n    createCmd.setDataDir(dataDir);\n    createCmd.setNumShards(1);\n    if (secondConfigSet) {\n      createCmd.setCollectionConfigName(\"conf1\");\n    }\n    makeRequest(getBaseUrl((HttpSolrClient) clients.get(1)), createCmd);\n    \n    params = new ModifiableSolrParams();\n    params.set(\"action\", CollectionAction.CREATE.toString());\n    collectionName = \"halfcollection\";\n    params.set(\"name\", collectionName);\n    params.set(\"numShards\", 2);\n    params.set(\"wt\", \"xml\");\n    \n    if (secondConfigSet) {\n      params.set(\"collection.configName\", \"conf1\");\n    }\n    \n    String nn1 = jettys.get(0).getCoreContainer().getZkController().getNodeName();\n    String nn2 =  jettys.get(1).getCoreContainer().getZkController().getNodeName();\n    \n    params.set(OverseerCollectionMessageHandler.CREATE_NODE_SET, nn1 + \",\" + nn2);\n    request = new QueryRequest(params);\n    request.setPath(\"/admin/collections\");\n    NamedList<Object> resp = makeRequest(baseUrl, request, 60000);\n    \n    SimpleOrderedMap success = (SimpleOrderedMap) resp.get(\"success\");\n    SimpleOrderedMap failure = (SimpleOrderedMap) resp.get(\"failure\");\n\n    assertNotNull(resp.toString(), success);\n    assertNotNull(resp.toString(), failure);\n    \n    String val1 = success.getVal(0).toString();\n    String val2 = failure.getVal(0).toString();\n    assertTrue(val1.contains(\"SolrException\") || val2.contains(\"SolrException\"));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a4efd3fffdd7acd625bb88e455c8097e17f75735":["0e15955b4980562a0c1c81d08654904f3fadb83b"],"efefd19367eebaa6d911ba8f441a30b7b7564e26":["f9362075f92dff89425ca488b480f70d565d66e7"],"59dce44d6a0b58c171de1d47ad8c0a75831f94fd":["0e15955b4980562a0c1c81d08654904f3fadb83b","a4efd3fffdd7acd625bb88e455c8097e17f75735"],"716d18f3a9b0993bc679d7fa7abdc9bfb03411ec":["6e756785b6f25f3b8f7ee57c7e210c6b67fbfbbf","1eeda7e62e149f90eee8895af874c74efa7d4852"],"bb1f22cfa77230b5f05b7784feae5367f6bbb488":["963b0a9b072593721af39e1d9b815fba17e88e7f"],"d3a46663789411cdf016145a96a40cf861798ae3":["5a82d855abc18f7ee3e1ec359d8f256c8c86977a"],"2a0f5bb79c600763ffe7b8141df59a3169d31e48":["963b0a9b072593721af39e1d9b815fba17e88e7f","bb1f22cfa77230b5f05b7784feae5367f6bbb488"],"630c3d71b7859a9f17dd985bb82bba51bccee575":["fe999fc2d95d6fea71f960bf9556858387ba21f5"],"bafca15d8e408346a67f4282ad1143b88023893b":["f4abec28b874149a7223e32cc7a01704c27790de"],"f4abec28b874149a7223e32cc7a01704c27790de":["4a7d7ef06ef6f04ba2de657e90e0458048a967c6"],"1eeda7e62e149f90eee8895af874c74efa7d4852":["6e756785b6f25f3b8f7ee57c7e210c6b67fbfbbf"],"5a82d855abc18f7ee3e1ec359d8f256c8c86977a":["1eeda7e62e149f90eee8895af874c74efa7d4852"],"963b0a9b072593721af39e1d9b815fba17e88e7f":["d3a46663789411cdf016145a96a40cf861798ae3"],"e31e6ce5848e5040d4c9ecbb25bc6ccf5d0894ac":["6784d0cc613dc1ee97030eaaa5e0754edc22d164"],"4a7d7ef06ef6f04ba2de657e90e0458048a967c6":["2a0f5bb79c600763ffe7b8141df59a3169d31e48"],"fe999fc2d95d6fea71f960bf9556858387ba21f5":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"6e756785b6f25f3b8f7ee57c7e210c6b67fbfbbf":["630c3d71b7859a9f17dd985bb82bba51bccee575"],"1088b72b3b4cc45316b7595bd09023c859cd2327":["e31e6ce5848e5040d4c9ecbb25bc6ccf5d0894ac"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"f9362075f92dff89425ca488b480f70d565d66e7":["1088b72b3b4cc45316b7595bd09023c859cd2327"],"0e15955b4980562a0c1c81d08654904f3fadb83b":["f9362075f92dff89425ca488b480f70d565d66e7","efefd19367eebaa6d911ba8f441a30b7b7564e26"],"6784d0cc613dc1ee97030eaaa5e0754edc22d164":["bafca15d8e408346a67f4282ad1143b88023893b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a4efd3fffdd7acd625bb88e455c8097e17f75735"]},"commit2Childs":{"a4efd3fffdd7acd625bb88e455c8097e17f75735":["59dce44d6a0b58c171de1d47ad8c0a75831f94fd","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"efefd19367eebaa6d911ba8f441a30b7b7564e26":["0e15955b4980562a0c1c81d08654904f3fadb83b"],"59dce44d6a0b58c171de1d47ad8c0a75831f94fd":[],"716d18f3a9b0993bc679d7fa7abdc9bfb03411ec":[],"bb1f22cfa77230b5f05b7784feae5367f6bbb488":["2a0f5bb79c600763ffe7b8141df59a3169d31e48"],"d3a46663789411cdf016145a96a40cf861798ae3":["963b0a9b072593721af39e1d9b815fba17e88e7f"],"2a0f5bb79c600763ffe7b8141df59a3169d31e48":["4a7d7ef06ef6f04ba2de657e90e0458048a967c6"],"630c3d71b7859a9f17dd985bb82bba51bccee575":["6e756785b6f25f3b8f7ee57c7e210c6b67fbfbbf"],"bafca15d8e408346a67f4282ad1143b88023893b":["6784d0cc613dc1ee97030eaaa5e0754edc22d164"],"f4abec28b874149a7223e32cc7a01704c27790de":["bafca15d8e408346a67f4282ad1143b88023893b"],"1eeda7e62e149f90eee8895af874c74efa7d4852":["716d18f3a9b0993bc679d7fa7abdc9bfb03411ec","5a82d855abc18f7ee3e1ec359d8f256c8c86977a"],"5a82d855abc18f7ee3e1ec359d8f256c8c86977a":["d3a46663789411cdf016145a96a40cf861798ae3"],"963b0a9b072593721af39e1d9b815fba17e88e7f":["bb1f22cfa77230b5f05b7784feae5367f6bbb488","2a0f5bb79c600763ffe7b8141df59a3169d31e48"],"fe999fc2d95d6fea71f960bf9556858387ba21f5":["630c3d71b7859a9f17dd985bb82bba51bccee575"],"4a7d7ef06ef6f04ba2de657e90e0458048a967c6":["f4abec28b874149a7223e32cc7a01704c27790de"],"e31e6ce5848e5040d4c9ecbb25bc6ccf5d0894ac":["1088b72b3b4cc45316b7595bd09023c859cd2327"],"6e756785b6f25f3b8f7ee57c7e210c6b67fbfbbf":["716d18f3a9b0993bc679d7fa7abdc9bfb03411ec","1eeda7e62e149f90eee8895af874c74efa7d4852"],"1088b72b3b4cc45316b7595bd09023c859cd2327":["f9362075f92dff89425ca488b480f70d565d66e7"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["fe999fc2d95d6fea71f960bf9556858387ba21f5"],"0e15955b4980562a0c1c81d08654904f3fadb83b":["a4efd3fffdd7acd625bb88e455c8097e17f75735","59dce44d6a0b58c171de1d47ad8c0a75831f94fd"],"f9362075f92dff89425ca488b480f70d565d66e7":["efefd19367eebaa6d911ba8f441a30b7b7564e26","0e15955b4980562a0c1c81d08654904f3fadb83b"],"6784d0cc613dc1ee97030eaaa5e0754edc22d164":["e31e6ce5848e5040d4c9ecbb25bc6ccf5d0894ac"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["59dce44d6a0b58c171de1d47ad8c0a75831f94fd","716d18f3a9b0993bc679d7fa7abdc9bfb03411ec","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}