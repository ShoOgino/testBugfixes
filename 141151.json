{"path":"contrib/fast-vector-highlighter/src/test/org/apache/lucene/search/vectorhighlight/FieldPhraseListTest#testSearchLongestPhrase().mjava","commits":[{"id":"d64148a458eb3ddf4d1bb1f1753cb9af194e1707","date":1247144811,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"contrib/fast-vector-highlighter/src/test/org/apache/lucene/search/vectorhighlight/FieldPhraseListTest#testSearchLongestPhrase().mjava","pathOld":"/dev/null","sourceNew":"  public void testSearchLongestPhrase() throws Exception {\n    make1d1fIndex( \"d a b d c a b c\" );\n\n    BooleanQuery query = new BooleanQuery();\n    query.add( pqF( \"a\", \"b\" ), Occur.SHOULD );\n    query.add( pqF( \"a\", \"b\", \"c\" ), Occur.SHOULD );\n    FieldQuery fq = new FieldQuery( query, true, true );\n    FieldTermStack stack = new FieldTermStack( reader, 0, F, fq );\n    FieldPhraseList fpl = new FieldPhraseList( stack, fq );\n    assertEquals( 2, fpl.phraseList.size() );\n    assertEquals( \"ab(1.0)((2,5))\", fpl.phraseList.get( 0 ).toString() );\n    assertEquals( \"abc(1.0)((10,15))\", fpl.phraseList.get( 1 ).toString() );\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/contrib/fast-vector-highlighter/src/test/org/apache/lucene/search/vectorhighlight/FieldPhraseListTest#testSearchLongestPhrase().mjava","pathOld":"contrib/fast-vector-highlighter/src/test/org/apache/lucene/search/vectorhighlight/FieldPhraseListTest#testSearchLongestPhrase().mjava","sourceNew":"  public void testSearchLongestPhrase() throws Exception {\n    make1d1fIndex( \"d a b d c a b c\" );\n\n    BooleanQuery query = new BooleanQuery();\n    query.add( pqF( \"a\", \"b\" ), Occur.SHOULD );\n    query.add( pqF( \"a\", \"b\", \"c\" ), Occur.SHOULD );\n    FieldQuery fq = new FieldQuery( query, true, true );\n    FieldTermStack stack = new FieldTermStack( reader, 0, F, fq );\n    FieldPhraseList fpl = new FieldPhraseList( stack, fq );\n    assertEquals( 2, fpl.phraseList.size() );\n    assertEquals( \"ab(1.0)((2,5))\", fpl.phraseList.get( 0 ).toString() );\n    assertEquals( \"abc(1.0)((10,15))\", fpl.phraseList.get( 1 ).toString() );\n  }\n\n","sourceOld":"  public void testSearchLongestPhrase() throws Exception {\n    make1d1fIndex( \"d a b d c a b c\" );\n\n    BooleanQuery query = new BooleanQuery();\n    query.add( pqF( \"a\", \"b\" ), Occur.SHOULD );\n    query.add( pqF( \"a\", \"b\", \"c\" ), Occur.SHOULD );\n    FieldQuery fq = new FieldQuery( query, true, true );\n    FieldTermStack stack = new FieldTermStack( reader, 0, F, fq );\n    FieldPhraseList fpl = new FieldPhraseList( stack, fq );\n    assertEquals( 2, fpl.phraseList.size() );\n    assertEquals( \"ab(1.0)((2,5))\", fpl.phraseList.get( 0 ).toString() );\n    assertEquals( \"abc(1.0)((10,15))\", fpl.phraseList.get( 1 ).toString() );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"d64148a458eb3ddf4d1bb1f1753cb9af194e1707":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["d64148a458eb3ddf4d1bb1f1753cb9af194e1707"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["d64148a458eb3ddf4d1bb1f1753cb9af194e1707"],"d64148a458eb3ddf4d1bb1f1753cb9af194e1707":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}