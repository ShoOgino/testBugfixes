{"path":"lucene/core/src/test/org/apache/lucene/codecs/lucene40/TestReuseDocsEnum#createRandomIndex(int,RandomIndexWriter,Random).mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/codecs/lucene40/TestReuseDocsEnum#createRandomIndex(int,RandomIndexWriter,Random).mjava","pathOld":"lucene/src/test/org/apache/lucene/codecs/lucene40/TestReuseDocsEnum#createRandomIndex(int,RandomIndexWriter,Random).mjava","sourceNew":"  /**\n   * populates a writer with random stuff. this must be fully reproducable with\n   * the seed!\n   */\n  public static void createRandomIndex(int numdocs, RandomIndexWriter writer,\n      Random random) throws IOException {\n    LineFileDocs lineFileDocs = new LineFileDocs(random);\n\n    for (int i = 0; i < numdocs; i++) {\n      writer.addDocument(lineFileDocs.nextDoc());\n    }\n  }\n\n","sourceOld":"  /**\n   * populates a writer with random stuff. this must be fully reproducable with\n   * the seed!\n   */\n  public static void createRandomIndex(int numdocs, RandomIndexWriter writer,\n      Random random) throws IOException {\n    LineFileDocs lineFileDocs = new LineFileDocs(random);\n\n    for (int i = 0; i < numdocs; i++) {\n      writer.addDocument(lineFileDocs.nextDoc());\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6550af40a4977993323e8fd3b3222a2402084800","date":1334548895,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/codecs/lucene40/TestReuseDocsEnum#createRandomIndex(int,RandomIndexWriter,Random).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/codecs/lucene40/TestReuseDocsEnum#createRandomIndex(int,RandomIndexWriter,Random).mjava","sourceNew":"  /**\n   * populates a writer with random stuff. this must be fully reproducable with\n   * the seed!\n   */\n  public static void createRandomIndex(int numdocs, RandomIndexWriter writer,\n      Random random) throws IOException {\n    LineFileDocs lineFileDocs = new LineFileDocs(random);\n\n    for (int i = 0; i < numdocs; i++) {\n      writer.addDocument(lineFileDocs.nextDoc());\n    }\n    \n    lineFileDocs.close();\n  }\n\n","sourceOld":"  /**\n   * populates a writer with random stuff. this must be fully reproducable with\n   * the seed!\n   */\n  public static void createRandomIndex(int numdocs, RandomIndexWriter writer,\n      Random random) throws IOException {\n    LineFileDocs lineFileDocs = new LineFileDocs(random);\n\n    for (int i = 0; i < numdocs; i++) {\n      writer.addDocument(lineFileDocs.nextDoc());\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cc45c615dbb82bf79d5f9550286098367874fbf","date":1409571423,"type":5,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/backward-codecs/src/test/org/apache/lucene/codecs/lucene40/TestReuseDocsEnum#createRandomIndex(int,RandomIndexWriter,Random).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/codecs/lucene40/TestReuseDocsEnum#createRandomIndex(int,RandomIndexWriter,Random).mjava","sourceNew":"  /**\n   * populates a writer with random stuff. this must be fully reproducable with\n   * the seed!\n   */\n  public static void createRandomIndex(int numdocs, RandomIndexWriter writer,\n      Random random) throws IOException {\n    LineFileDocs lineFileDocs = new LineFileDocs(random);\n\n    for (int i = 0; i < numdocs; i++) {\n      writer.addDocument(lineFileDocs.nextDoc());\n    }\n    \n    lineFileDocs.close();\n  }\n\n","sourceOld":"  /**\n   * populates a writer with random stuff. this must be fully reproducable with\n   * the seed!\n   */\n  public static void createRandomIndex(int numdocs, RandomIndexWriter writer,\n      Random random) throws IOException {\n    LineFileDocs lineFileDocs = new LineFileDocs(random);\n\n    for (int i = 0; i < numdocs; i++) {\n      writer.addDocument(lineFileDocs.nextDoc());\n    }\n    \n    lineFileDocs.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"402ad3ddc9da7b70da1b167667a60ece6a1381fb","date":1409656478,"type":5,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/backward-codecs/src/test/org/apache/lucene/codecs/lucene40/TestReuseDocsEnum#createRandomIndex(int,RandomIndexWriter,Random).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/codecs/lucene40/TestReuseDocsEnum#createRandomIndex(int,RandomIndexWriter,Random).mjava","sourceNew":"  /**\n   * populates a writer with random stuff. this must be fully reproducable with\n   * the seed!\n   */\n  public static void createRandomIndex(int numdocs, RandomIndexWriter writer,\n      Random random) throws IOException {\n    LineFileDocs lineFileDocs = new LineFileDocs(random);\n\n    for (int i = 0; i < numdocs; i++) {\n      writer.addDocument(lineFileDocs.nextDoc());\n    }\n    \n    lineFileDocs.close();\n  }\n\n","sourceOld":"  /**\n   * populates a writer with random stuff. this must be fully reproducable with\n   * the seed!\n   */\n  public static void createRandomIndex(int numdocs, RandomIndexWriter writer,\n      Random random) throws IOException {\n    LineFileDocs lineFileDocs = new LineFileDocs(random);\n\n    for (int i = 0; i < numdocs; i++) {\n      writer.addDocument(lineFileDocs.nextDoc());\n    }\n    \n    lineFileDocs.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"6550af40a4977993323e8fd3b3222a2402084800":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"4cc45c615dbb82bf79d5f9550286098367874fbf":["6550af40a4977993323e8fd3b3222a2402084800"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["402ad3ddc9da7b70da1b167667a60ece6a1381fb"],"402ad3ddc9da7b70da1b167667a60ece6a1381fb":["6550af40a4977993323e8fd3b3222a2402084800","4cc45c615dbb82bf79d5f9550286098367874fbf"]},"commit2Childs":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["6550af40a4977993323e8fd3b3222a2402084800"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"6550af40a4977993323e8fd3b3222a2402084800":["4cc45c615dbb82bf79d5f9550286098367874fbf","402ad3ddc9da7b70da1b167667a60ece6a1381fb"],"4cc45c615dbb82bf79d5f9550286098367874fbf":["402ad3ddc9da7b70da1b167667a60ece6a1381fb"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"402ad3ddc9da7b70da1b167667a60ece6a1381fb":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}