{"path":"solr/solrj/src/java/org/apache/solr/common/IteratorWriter#toList(List).mjava","commits":[{"id":"0cf93ce8d2bc0210731dd8d840f40b183df2c804","date":1489476316,"type":0,"author":"Noble Paul","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/common/IteratorWriter#toList(List).mjava","pathOld":"/dev/null","sourceNew":"  default List toList( List l) throws IOException {\n    writeIter(new IteratorWriter.ItemWriter() {\n      @Override\n      public IteratorWriter.ItemWriter add(Object o) throws IOException {\n        if (o instanceof MapWriter) o = ((MapWriter) o).toMap(new LinkedHashMap<>());\n        if (o instanceof IteratorWriter) o = ((IteratorWriter) o).toList(new ArrayList<>());\n        l.add(o);\n        return this;\n      }\n    });\n    return l;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"226b3bf77af5749a90c81edd3d4168fd6e276a24","date":1490013063,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/common/IteratorWriter#toList(List).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/common/IteratorWriter#toList(List).mjava","sourceNew":"  default List toList( List l)  {\n    try {\n      writeIter(new ItemWriter() {\n        @Override\n        public ItemWriter add(Object o) throws IOException {\n          if (o instanceof MapWriter) o = ((MapWriter) o).toMap(new LinkedHashMap<>());\n          if (o instanceof IteratorWriter) o = ((IteratorWriter) o).toList(new ArrayList<>());\n          l.add(o);\n          return this;\n        }\n      });\n    } catch (IOException e) {\n      throw new RuntimeException(e);\n    }\n    return l;\n  }\n\n","sourceOld":"  default List toList( List l) throws IOException {\n    writeIter(new IteratorWriter.ItemWriter() {\n      @Override\n      public IteratorWriter.ItemWriter add(Object o) throws IOException {\n        if (o instanceof MapWriter) o = ((MapWriter) o).toMap(new LinkedHashMap<>());\n        if (o instanceof IteratorWriter) o = ((IteratorWriter) o).toList(new ArrayList<>());\n        l.add(o);\n        return this;\n      }\n    });\n    return l;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a513b6a92751e54c76fb5447948c9e7d437163a7","date":1496136565,"type":0,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/common/IteratorWriter#toList(List).mjava","pathOld":"/dev/null","sourceNew":"  default List toList( List l)  {\n    try {\n      writeIter(new ItemWriter() {\n        @Override\n        public ItemWriter add(Object o) throws IOException {\n          if (o instanceof MapWriter) o = ((MapWriter) o).toMap(new LinkedHashMap<>());\n          if (o instanceof IteratorWriter) o = ((IteratorWriter) o).toList(new ArrayList<>());\n          l.add(o);\n          return this;\n        }\n      });\n    } catch (IOException e) {\n      throw new RuntimeException(e);\n    }\n    return l;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"74aea047dff7f7c38a2d766827bd20d356f98c6a","date":1496721416,"type":0,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"solr/solrj/src/java/org/apache/solr/common/IteratorWriter#toList(List).mjava","pathOld":"/dev/null","sourceNew":"  default List toList( List l)  {\n    try {\n      writeIter(new ItemWriter() {\n        @Override\n        public ItemWriter add(Object o) throws IOException {\n          if (o instanceof MapWriter) o = ((MapWriter) o).toMap(new LinkedHashMap<>());\n          if (o instanceof IteratorWriter) o = ((IteratorWriter) o).toList(new ArrayList<>());\n          l.add(o);\n          return this;\n        }\n      });\n    } catch (IOException e) {\n      throw new RuntimeException(e);\n    }\n    return l;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"28288370235ed02234a64753cdbf0c6ec096304a","date":1498726817,"type":0,"author":"Karl Wright","isMerge":true,"pathNew":"solr/solrj/src/java/org/apache/solr/common/IteratorWriter#toList(List).mjava","pathOld":"/dev/null","sourceNew":"  default List toList( List l)  {\n    try {\n      writeIter(new ItemWriter() {\n        @Override\n        public ItemWriter add(Object o) throws IOException {\n          if (o instanceof MapWriter) o = ((MapWriter) o).toMap(new LinkedHashMap<>());\n          if (o instanceof IteratorWriter) o = ((IteratorWriter) o).toList(new ArrayList<>());\n          l.add(o);\n          return this;\n        }\n      });\n    } catch (IOException e) {\n      throw new RuntimeException(e);\n    }\n    return l;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a5df378a6155dcc1f4d4ecdcbd8ea5bc058560e9","date":1574619880,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/common/IteratorWriter#toList(List).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/common/IteratorWriter#toList(List).mjava","sourceNew":"  default List toList( List l)  {\n    try {\n      writeIter(new ItemWriter() {\n        @Override\n        @SuppressWarnings(\"unchecked\")\n        public ItemWriter add(Object o) throws IOException {\n          if (o instanceof MapWriter) o = ((MapWriter) o).toMap(new LinkedHashMap<>());\n          if (o instanceof IteratorWriter) o = ((IteratorWriter) o).toList(new ArrayList<>());\n          l.add(o);\n          return this;\n        }\n      });\n    } catch (IOException e) {\n      throw new RuntimeException(e);\n    }\n    return l;\n  }\n\n","sourceOld":"  default List toList( List l)  {\n    try {\n      writeIter(new ItemWriter() {\n        @Override\n        public ItemWriter add(Object o) throws IOException {\n          if (o instanceof MapWriter) o = ((MapWriter) o).toMap(new LinkedHashMap<>());\n          if (o instanceof IteratorWriter) o = ((IteratorWriter) o).toList(new ArrayList<>());\n          l.add(o);\n          return this;\n        }\n      });\n    } catch (IOException e) {\n      throw new RuntimeException(e);\n    }\n    return l;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bb9c3baacabd473e8ecd6c4948aabacead49b88e","date":1574700980,"type":3,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/common/IteratorWriter#toList(List).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/common/IteratorWriter#toList(List).mjava","sourceNew":"  default List toList( List l)  {\n    try {\n      writeIter(new ItemWriter() {\n        @Override\n        public ItemWriter add(Object o) throws IOException {\n          if (o instanceof MapWriter) o = ((MapWriter) o).toMap(new LinkedHashMap<>());\n          if (o instanceof IteratorWriter) o = ((IteratorWriter) o).toList(new ArrayList<>());\n          l.add(o);\n          return this;\n        }\n      });\n    } catch (IOException e) {\n      throw new RuntimeException(e);\n    }\n    return l;\n  }\n\n","sourceOld":"  default List toList( List l)  {\n    try {\n      writeIter(new ItemWriter() {\n        @Override\n        @SuppressWarnings(\"unchecked\")\n        public ItemWriter add(Object o) throws IOException {\n          if (o instanceof MapWriter) o = ((MapWriter) o).toMap(new LinkedHashMap<>());\n          if (o instanceof IteratorWriter) o = ((IteratorWriter) o).toList(new ArrayList<>());\n          l.add(o);\n          return this;\n        }\n      });\n    } catch (IOException e) {\n      throw new RuntimeException(e);\n    }\n    return l;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8dc9df63ec3bc509a28d29b0ddcf6f14756b3e76","date":1591450217,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/common/IteratorWriter#toList(List).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/common/IteratorWriter#toList(List).mjava","sourceNew":"  @SuppressWarnings({\"unchecked\", \"rawtypes\"})\n  default List toList( List l)  {\n    try {\n      writeIter(new ItemWriter() {\n        @Override\n        public ItemWriter add(Object o) throws IOException {\n          if (o instanceof MapWriter) o = ((MapWriter) o).toMap(new LinkedHashMap<>());\n          if (o instanceof IteratorWriter) o = ((IteratorWriter) o).toList(new ArrayList<>());\n          l.add(o);\n          return this;\n        }\n      });\n    } catch (IOException e) {\n      throw new RuntimeException(e);\n    }\n    return l;\n  }\n\n","sourceOld":"  default List toList( List l)  {\n    try {\n      writeIter(new ItemWriter() {\n        @Override\n        public ItemWriter add(Object o) throws IOException {\n          if (o instanceof MapWriter) o = ((MapWriter) o).toMap(new LinkedHashMap<>());\n          if (o instanceof IteratorWriter) o = ((IteratorWriter) o).toList(new ArrayList<>());\n          l.add(o);\n          return this;\n        }\n      });\n    } catch (IOException e) {\n      throw new RuntimeException(e);\n    }\n    return l;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"8dc9df63ec3bc509a28d29b0ddcf6f14756b3e76":["bb9c3baacabd473e8ecd6c4948aabacead49b88e"],"a5df378a6155dcc1f4d4ecdcbd8ea5bc058560e9":["28288370235ed02234a64753cdbf0c6ec096304a"],"226b3bf77af5749a90c81edd3d4168fd6e276a24":["0cf93ce8d2bc0210731dd8d840f40b183df2c804"],"74aea047dff7f7c38a2d766827bd20d356f98c6a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","a513b6a92751e54c76fb5447948c9e7d437163a7"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a513b6a92751e54c76fb5447948c9e7d437163a7":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"bb9c3baacabd473e8ecd6c4948aabacead49b88e":["a5df378a6155dcc1f4d4ecdcbd8ea5bc058560e9"],"0cf93ce8d2bc0210731dd8d840f40b183df2c804":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"28288370235ed02234a64753cdbf0c6ec096304a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","74aea047dff7f7c38a2d766827bd20d356f98c6a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["8dc9df63ec3bc509a28d29b0ddcf6f14756b3e76"]},"commit2Childs":{"8dc9df63ec3bc509a28d29b0ddcf6f14756b3e76":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a5df378a6155dcc1f4d4ecdcbd8ea5bc058560e9":["bb9c3baacabd473e8ecd6c4948aabacead49b88e"],"226b3bf77af5749a90c81edd3d4168fd6e276a24":[],"74aea047dff7f7c38a2d766827bd20d356f98c6a":["28288370235ed02234a64753cdbf0c6ec096304a"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["74aea047dff7f7c38a2d766827bd20d356f98c6a","a513b6a92751e54c76fb5447948c9e7d437163a7","0cf93ce8d2bc0210731dd8d840f40b183df2c804","28288370235ed02234a64753cdbf0c6ec096304a"],"a513b6a92751e54c76fb5447948c9e7d437163a7":["74aea047dff7f7c38a2d766827bd20d356f98c6a"],"bb9c3baacabd473e8ecd6c4948aabacead49b88e":["8dc9df63ec3bc509a28d29b0ddcf6f14756b3e76"],"0cf93ce8d2bc0210731dd8d840f40b183df2c804":["226b3bf77af5749a90c81edd3d4168fd6e276a24"],"28288370235ed02234a64753cdbf0c6ec096304a":["a5df378a6155dcc1f4d4ecdcbd8ea5bc058560e9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["226b3bf77af5749a90c81edd3d4168fd6e276a24","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}