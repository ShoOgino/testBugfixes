{"path":"solr/core/src/test/org/apache/solr/search/facet/TestJsonFacets#doBlockJoin(Client).mjava","commits":[{"id":"9e47fba8dd946896c408eb448f6199f5a9f0da2d","date":1434234768,"type":0,"author":"Yonik Seeley","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/search/facet/TestJsonFacets#doBlockJoin(Client).mjava","pathOld":"/dev/null","sourceNew":"  public void doBlockJoin(Client client) throws Exception {\n    ModifiableSolrParams p = params(\"rows\",\"0\");\n\n    client.deleteByQuery(\"*:*\", null);\n\n    SolrInputDocument parent;\n    parent = sdoc(\"id\", \"1\", \"type_s\",\"book\", \"book_s\",\"A\", \"v_t\",\"q\");\n    client.add(parent, null);\n\n    parent = sdoc(\"id\", \"2\", \"type_s\",\"book\", \"book_s\",\"B\", \"v_t\",\"q w\");\n    parent.addChildDocument( sdoc(\"id\",\"2.1\", \"type_s\",\"page\", \"page_s\",\"a\", \"v_t\",\"x y z\")  );\n    parent.addChildDocument( sdoc(\"id\",\"2.2\", \"type_s\",\"page\", \"page_s\",\"b\", \"v_t\",\"x y  \") );\n    parent.addChildDocument( sdoc(\"id\",\"2.3\", \"type_s\",\"page\", \"page_s\",\"c\", \"v_t\",\"  y z\" )  );\n    client.add(parent, null);\n\n    parent = sdoc(\"id\", \"3\", \"type_s\",\"book\", \"book_s\",\"C\", \"v_t\",\"q w e\");\n    parent.addChildDocument( sdoc(\"id\",\"3.1\", \"type_s\",\"page\", \"page_s\",\"d\", \"v_t\",\"x    \")  );\n    parent.addChildDocument( sdoc(\"id\",\"3.2\", \"type_s\",\"page\", \"page_s\",\"e\", \"v_t\",\"  y  \")  );\n    parent.addChildDocument( sdoc(\"id\",\"3.3\", \"type_s\",\"page\", \"page_s\",\"f\", \"v_t\",\"    z\")  );\n    client.add(parent, null);\n\n    parent = sdoc(\"id\", \"4\", \"type_s\",\"book\", \"book_s\",\"D\", \"v_t\",\"e\");\n    client.add(parent, null);\n\n    client.commit();\n\n    client.testJQ(params(p, \"q\", \"*:*\"\n            , \"json.facet\", \"{ \" +\n                \"pages:{ type:query, domain:{blockChildren:'type_s:book'} , facet:{ x:{field:v_t} } }\" +\n                \",pages2:{type:terms, field:v_t, domain:{blockChildren:'type_s:book'} }\" +\n                \",books:{ type:query, domain:{blockParent:'type_s:book'}  , facet:{ x:{field:v_t} } }\" +\n                \",books2:{type:terms, field:v_t, domain:{blockParent:'type_s:book'} }\" +\n                \",pageof3:{ type:query, q:'id:3', facet : { x : { type:terms, field:page_s, domain:{blockChildren:'type_s:book'}}} }\" +\n                \",bookof22:{ type:query, q:'id:2.2', facet : { x : { type:terms, field:book_s, domain:{blockParent:'type_s:book'}}} }\" +\n                \",missing_blockParent:{ type:query, domain:{blockParent:'type_s:does_not_exist'} }\" +\n                \",missing_blockChildren:{ type:query, domain:{blockChildren:'type_s:does_not_exist'} }\" +\n                \"}\"\n        )\n        , \"facets=={ count:10\" +\n            \", pages:{count:6 , x:{buckets:[ {val:y,count:4},{val:x,count:3},{val:z,count:3} ]}  }\" +\n            \", pages2:{ buckets:[ {val:y,count:4},{val:x,count:3},{val:z,count:3} ] }\" +\n            \", books:{count:4 , x:{buckets:[ {val:q,count:3},{val:e,count:2},{val:w,count:2} ]}  }\" +\n            \", books2:{ buckets:[ {val:q,count:3},{val:e,count:2},{val:w,count:2} ] }\" +\n            \", pageof3:{count:1 , x:{buckets:[ {val:d,count:1},{val:e,count:1},{val:f,count:1} ]}  }\" +\n            \", bookof22:{count:1 , x:{buckets:[ {val:B,count:1} ]}  }\" +\n            \", missing_blockParent:{count:0}\" +\n            \", missing_blockChildren:{count:0}\" +\n            \"}\"\n    );\n\n    // no matches in base query\n    client.testJQ(params(\"q\", \"no_match_s:NO_MATCHES\"\n            , \"json.facet\", \"{ processEmpty:true,\" +\n                \"pages:{ type:query, domain:{blockChildren:'type_s:book'} }\" +\n                \",books:{ type:query, domain:{blockParent:'type_s:book'} }\" +\n                \"}\"\n        )\n        , \"facets=={ count:0\" +\n            \", pages:{count:0}\" +\n            \", books:{count:0}\" +\n            \"}\"\n    );\n\n\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0c47c8f7f4e468629da7c05ba0e983c58abbee18","date":1448228910,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/search/facet/TestJsonFacets#doBlockJoin(Client).mjava","pathOld":"solr/core/src/test/org/apache/solr/search/facet/TestJsonFacets#doBlockJoin(Client).mjava","sourceNew":"  public void doBlockJoin(Client client) throws Exception {\n    ModifiableSolrParams p = params(\"rows\",\"0\");\n\n    client.deleteByQuery(\"*:*\", null);\n\n    SolrInputDocument parent;\n    parent = sdoc(\"id\", \"1\", \"type_s\",\"book\", \"book_s\",\"A\", \"v_t\",\"q\");\n    client.add(parent, null);\n\n    parent = sdoc(\"id\", \"2\", \"type_s\",\"book\", \"book_s\",\"B\", \"v_t\",\"q w\");\n    parent.addChildDocument( sdoc(\"id\",\"2.1\", \"type_s\",\"page\", \"page_s\",\"a\", \"v_t\",\"x y z\")  );\n    parent.addChildDocument( sdoc(\"id\",\"2.2\", \"type_s\",\"page\", \"page_s\",\"b\", \"v_t\",\"x y  \") );\n    parent.addChildDocument( sdoc(\"id\",\"2.3\", \"type_s\",\"page\", \"page_s\",\"c\", \"v_t\",\"  y z\" )  );\n    client.add(parent, null);\n\n    parent = sdoc(\"id\", \"3\", \"type_s\",\"book\", \"book_s\",\"C\", \"v_t\",\"q w e\");\n    parent.addChildDocument( sdoc(\"id\",\"3.1\", \"type_s\",\"page\", \"page_s\",\"d\", \"v_t\",\"x    \")  );\n    parent.addChildDocument( sdoc(\"id\",\"3.2\", \"type_s\",\"page\", \"page_s\",\"e\", \"v_t\",\"  y  \")  );\n    parent.addChildDocument( sdoc(\"id\",\"3.3\", \"type_s\",\"page\", \"page_s\",\"f\", \"v_t\",\"    z\")  );\n    client.add(parent, null);\n\n    parent = sdoc(\"id\", \"4\", \"type_s\",\"book\", \"book_s\",\"D\", \"v_t\",\"e\");\n    client.add(parent, null);\n\n    client.commit();\n\n    client.testJQ(params(p, \"q\", \"*:*\"\n            , \"json.facet\", \"{ \" +\n                \"pages:{ type:query, domain:{blockChildren:'type_s:book'} , facet:{ x:{field:v_t} } }\" +\n                \",pages2:{type:terms, field:v_t, domain:{blockChildren:'type_s:book'} }\" +\n                \",books:{ type:query, domain:{blockParent:'type_s:book'}  , facet:{ x:{field:v_t} } }\" +\n                \",books2:{type:terms, field:v_t, domain:{blockParent:'type_s:book'} }\" +\n                \",pageof3:{ type:query, q:'id:3', facet : { x : { type:terms, field:page_s, domain:{blockChildren:'type_s:book'}}} }\" +\n                \",bookof22:{ type:query, q:'id:2.2', facet : { x : { type:terms, field:book_s, domain:{blockParent:'type_s:book'}}} }\" +\n                \",missing_blockParent:{ type:query, domain:{blockParent:'type_s:does_not_exist'} }\" +\n                \",missing_blockChildren:{ type:query, domain:{blockChildren:'type_s:does_not_exist'} }\" +\n                \"}\"\n        )\n        , \"facets=={ count:10\" +\n            \", pages:{count:6 , x:{buckets:[ {val:y,count:4},{val:x,count:3},{val:z,count:3} ]}  }\" +\n            \", pages2:{ buckets:[ {val:y,count:4},{val:x,count:3},{val:z,count:3} ] }\" +\n            \", books:{count:4 , x:{buckets:[ {val:q,count:3},{val:e,count:2},{val:w,count:2} ]}  }\" +\n            \", books2:{ buckets:[ {val:q,count:3},{val:e,count:2},{val:w,count:2} ] }\" +\n            \", pageof3:{count:1 , x:{buckets:[ {val:d,count:1},{val:e,count:1},{val:f,count:1} ]}  }\" +\n            \", bookof22:{count:1 , x:{buckets:[ {val:B,count:1} ]}  }\" +\n            \", missing_blockParent:{count:0}\" +\n            \", missing_blockChildren:{count:0}\" +\n            \"}\"\n    );\n\n    // no matches in base query\n    client.testJQ(params(\"q\", \"no_match_s:NO_MATCHES\"\n            , \"json.facet\", \"{ processEmpty:true,\" +\n                \"pages:{ type:query, domain:{blockChildren:'type_s:book'} }\" +\n                \",books:{ type:query, domain:{blockParent:'type_s:book'} }\" +\n                \"}\"\n        )\n        , \"facets=={ count:0\" +\n            \", pages:{count:0}\" +\n            \", books:{count:0}\" +\n            \"}\"\n    );\n\n\n    // test facet on children nested under terms facet on parents\n    client.testJQ(params(\"q\", \"*:*\"\n            , \"json.facet\", \"{\" +\n                \"books:{ type:terms, field:book_s, facet:{ pages:{type:terms, field:v_t, domain:{blockChildren:'type_s:book'}} } }\" +\n                \"}\"\n        )\n        , \"facets=={ count:10\" +\n            \", books:{buckets:[{val:A,count:1,pages:{buckets:[]}}\" +\n            \"                 ,{val:B,count:1,pages:{buckets:[{val:y,count:3},{val:x,count:2},{val:z,count:2}]}}\" +\n            \"                 ,{val:C,count:1,pages:{buckets:[{val:x,count:1},{val:y,count:1},{val:z,count:1}]}}\" +\n            \"                 ,{val:D,count:1,pages:{buckets:[]}}\"+\n            \"] }\" +\n            \"}\"\n    );\n\n\n  }\n\n","sourceOld":"  public void doBlockJoin(Client client) throws Exception {\n    ModifiableSolrParams p = params(\"rows\",\"0\");\n\n    client.deleteByQuery(\"*:*\", null);\n\n    SolrInputDocument parent;\n    parent = sdoc(\"id\", \"1\", \"type_s\",\"book\", \"book_s\",\"A\", \"v_t\",\"q\");\n    client.add(parent, null);\n\n    parent = sdoc(\"id\", \"2\", \"type_s\",\"book\", \"book_s\",\"B\", \"v_t\",\"q w\");\n    parent.addChildDocument( sdoc(\"id\",\"2.1\", \"type_s\",\"page\", \"page_s\",\"a\", \"v_t\",\"x y z\")  );\n    parent.addChildDocument( sdoc(\"id\",\"2.2\", \"type_s\",\"page\", \"page_s\",\"b\", \"v_t\",\"x y  \") );\n    parent.addChildDocument( sdoc(\"id\",\"2.3\", \"type_s\",\"page\", \"page_s\",\"c\", \"v_t\",\"  y z\" )  );\n    client.add(parent, null);\n\n    parent = sdoc(\"id\", \"3\", \"type_s\",\"book\", \"book_s\",\"C\", \"v_t\",\"q w e\");\n    parent.addChildDocument( sdoc(\"id\",\"3.1\", \"type_s\",\"page\", \"page_s\",\"d\", \"v_t\",\"x    \")  );\n    parent.addChildDocument( sdoc(\"id\",\"3.2\", \"type_s\",\"page\", \"page_s\",\"e\", \"v_t\",\"  y  \")  );\n    parent.addChildDocument( sdoc(\"id\",\"3.3\", \"type_s\",\"page\", \"page_s\",\"f\", \"v_t\",\"    z\")  );\n    client.add(parent, null);\n\n    parent = sdoc(\"id\", \"4\", \"type_s\",\"book\", \"book_s\",\"D\", \"v_t\",\"e\");\n    client.add(parent, null);\n\n    client.commit();\n\n    client.testJQ(params(p, \"q\", \"*:*\"\n            , \"json.facet\", \"{ \" +\n                \"pages:{ type:query, domain:{blockChildren:'type_s:book'} , facet:{ x:{field:v_t} } }\" +\n                \",pages2:{type:terms, field:v_t, domain:{blockChildren:'type_s:book'} }\" +\n                \",books:{ type:query, domain:{blockParent:'type_s:book'}  , facet:{ x:{field:v_t} } }\" +\n                \",books2:{type:terms, field:v_t, domain:{blockParent:'type_s:book'} }\" +\n                \",pageof3:{ type:query, q:'id:3', facet : { x : { type:terms, field:page_s, domain:{blockChildren:'type_s:book'}}} }\" +\n                \",bookof22:{ type:query, q:'id:2.2', facet : { x : { type:terms, field:book_s, domain:{blockParent:'type_s:book'}}} }\" +\n                \",missing_blockParent:{ type:query, domain:{blockParent:'type_s:does_not_exist'} }\" +\n                \",missing_blockChildren:{ type:query, domain:{blockChildren:'type_s:does_not_exist'} }\" +\n                \"}\"\n        )\n        , \"facets=={ count:10\" +\n            \", pages:{count:6 , x:{buckets:[ {val:y,count:4},{val:x,count:3},{val:z,count:3} ]}  }\" +\n            \", pages2:{ buckets:[ {val:y,count:4},{val:x,count:3},{val:z,count:3} ] }\" +\n            \", books:{count:4 , x:{buckets:[ {val:q,count:3},{val:e,count:2},{val:w,count:2} ]}  }\" +\n            \", books2:{ buckets:[ {val:q,count:3},{val:e,count:2},{val:w,count:2} ] }\" +\n            \", pageof3:{count:1 , x:{buckets:[ {val:d,count:1},{val:e,count:1},{val:f,count:1} ]}  }\" +\n            \", bookof22:{count:1 , x:{buckets:[ {val:B,count:1} ]}  }\" +\n            \", missing_blockParent:{count:0}\" +\n            \", missing_blockChildren:{count:0}\" +\n            \"}\"\n    );\n\n    // no matches in base query\n    client.testJQ(params(\"q\", \"no_match_s:NO_MATCHES\"\n            , \"json.facet\", \"{ processEmpty:true,\" +\n                \"pages:{ type:query, domain:{blockChildren:'type_s:book'} }\" +\n                \",books:{ type:query, domain:{blockParent:'type_s:book'} }\" +\n                \"}\"\n        )\n        , \"facets=={ count:0\" +\n            \", pages:{count:0}\" +\n            \", books:{count:0}\" +\n            \"}\"\n    );\n\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d8e5b9ef6c6c9fa463899a818011b6ee92300a3c","date":1477776845,"type":3,"author":"yonik","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/search/facet/TestJsonFacets#doBlockJoin(Client).mjava","pathOld":"solr/core/src/test/org/apache/solr/search/facet/TestJsonFacets#doBlockJoin(Client).mjava","sourceNew":"  public void doBlockJoin(Client client) throws Exception {\n    ModifiableSolrParams p = params(\"rows\",\"0\");\n\n    client.deleteByQuery(\"*:*\", null);\n\n    SolrInputDocument parent;\n    parent = sdoc(\"id\", \"1\", \"type_s\",\"book\", \"book_s\",\"A\", \"v_t\",\"q\");\n    client.add(parent, null);\n\n    parent = sdoc(\"id\", \"2\", \"type_s\",\"book\", \"book_s\",\"B\", \"v_t\",\"q w\");\n    parent.addChildDocument( sdoc(\"id\",\"2.1\", \"type_s\",\"page\", \"page_s\",\"a\", \"v_t\",\"x y z\")  );\n    parent.addChildDocument( sdoc(\"id\",\"2.2\", \"type_s\",\"page\", \"page_s\",\"b\", \"v_t\",\"x y  \") );\n    parent.addChildDocument( sdoc(\"id\",\"2.3\", \"type_s\",\"page\", \"page_s\",\"c\", \"v_t\",\"  y z\" )  );\n    client.add(parent, null);\n\n    parent = sdoc(\"id\", \"3\", \"type_s\",\"book\", \"book_s\",\"C\", \"v_t\",\"q w e\");\n    parent.addChildDocument( sdoc(\"id\",\"3.1\", \"type_s\",\"page\", \"page_s\",\"d\", \"v_t\",\"x    \")  );\n    parent.addChildDocument( sdoc(\"id\",\"3.2\", \"type_s\",\"page\", \"page_s\",\"e\", \"v_t\",\"  y  \")  );\n    parent.addChildDocument( sdoc(\"id\",\"3.3\", \"type_s\",\"page\", \"page_s\",\"f\", \"v_t\",\"    z\")  );\n    client.add(parent, null);\n\n    parent = sdoc(\"id\", \"4\", \"type_s\",\"book\", \"book_s\",\"D\", \"v_t\",\"e\");\n    client.add(parent, null);\n\n    client.commit();\n\n    client.testJQ(params(p, \"q\", \"*:*\"\n            , \"json.facet\", \"{ \" +\n                \"pages:{ type:query, domain:{blockChildren:'type_s:book'} , facet:{ x:{field:v_t} } }\" +\n                \",pages2:{type:terms, field:v_t, domain:{blockChildren:'type_s:book'} }\" +\n                \",books:{ type:query, domain:{blockParent:'type_s:book'}  , facet:{ x:{field:v_t} } }\" +\n                \",books2:{type:terms, field:v_t, domain:{blockParent:'type_s:book'} }\" +\n                \",pageof3:{ type:query, q:'id:3', facet : { x : { type:terms, field:page_s, domain:{blockChildren:'type_s:book'}}} }\" +\n                \",bookof22:{ type:query, q:'id:2.2', facet : { x : { type:terms, field:book_s, domain:{blockParent:'type_s:book'}}} }\" +\n                \",missing_blockParent:{ type:query, domain:{blockParent:'type_s:does_not_exist'} }\" +\n                \",missing_blockChildren:{ type:query, domain:{blockChildren:'type_s:does_not_exist'} }\" +\n                \"}\"\n        )\n        , \"facets=={ count:10\" +\n            \", pages:{count:6 , x:{buckets:[ {val:y,count:4},{val:x,count:3},{val:z,count:3} ]}  }\" +\n            \", pages2:{ buckets:[ {val:y,count:4},{val:x,count:3},{val:z,count:3} ] }\" +\n            \", books:{count:4 , x:{buckets:[ {val:q,count:3},{val:e,count:2},{val:w,count:2} ]}  }\" +\n            \", books2:{ buckets:[ {val:q,count:3},{val:e,count:2},{val:w,count:2} ] }\" +\n            \", pageof3:{count:1 , x:{buckets:[ {val:d,count:1},{val:e,count:1},{val:f,count:1} ]}  }\" +\n            \", bookof22:{count:1 , x:{buckets:[ {val:B,count:1} ]}  }\" +\n            \", missing_blockParent:{count:0}\" +\n            \", missing_blockChildren:{count:0}\" +\n            \"}\"\n    );\n\n    // no matches in base query\n    client.testJQ(params(\"q\", \"no_match_s:NO_MATCHES\"\n            , \"json.facet\", \"{ processEmpty:true,\" +\n                \"pages:{ type:query, domain:{blockChildren:'type_s:book'} }\" +\n                \",books:{ type:query, domain:{blockParent:'type_s:book'} }\" +\n                \"}\"\n        )\n        , \"facets=={ count:0\" +\n            \", pages:{count:0}\" +\n            \", books:{count:0}\" +\n            \"}\"\n    );\n\n\n    // test facet on children nested under terms facet on parents\n    client.testJQ(params(\"q\", \"*:*\"\n            , \"json.facet\", \"{\" +\n                \"books:{ type:terms, field:book_s, facet:{ pages:{type:terms, field:v_t, domain:{blockChildren:'type_s:book'}} } }\" +\n                \"}\"\n        )\n        , \"facets=={ count:10\" +\n            \", books:{buckets:[{val:A,count:1,pages:{buckets:[]}}\" +\n            \"                 ,{val:B,count:1,pages:{buckets:[{val:y,count:3},{val:x,count:2},{val:z,count:2}]}}\" +\n            \"                 ,{val:C,count:1,pages:{buckets:[{val:x,count:1},{val:y,count:1},{val:z,count:1}]}}\" +\n            \"                 ,{val:D,count:1,pages:{buckets:[]}}\"+\n            \"] }\" +\n            \"}\"\n    );\n\n    // test filter after block join\n    client.testJQ(params(p, \"q\", \"*:*\"\n        , \"json.facet\", \"{ \" +\n            \"pages1:{type:terms, field:v_t, domain:{blockChildren:'type_s:book'}, filter:'*:*' }\" +\n            \",pages2:{type:terms, field:v_t, domain:{blockChildren:'type_s:book'}, filter:'-id:3.1' }\" +\n            \",books:{type:terms, field:v_t, domain:{blockParent:'type_s:book'}, filter:'*:*' }\" +\n            \",books2:{type:terms, field:v_t, domain:{blockParent:'type_s:book'}, filter:'id:1' }\" +\n            \"}\"\n        )\n        , \"facets=={ count:10\" +\n            \", pages1:{ buckets:[ {val:y,count:4},{val:x,count:3},{val:z,count:3} ] }\" +\n            \", pages2:{ buckets:[ {val:y,count:4},{val:z,count:3},{val:x,count:2} ] }\" +\n            \", books:{ buckets:[ {val:q,count:3},{val:e,count:2},{val:w,count:2} ] }\" +\n            \", books2:{ buckets:[ {val:q,count:1} ] }\" +\n            \"}\"\n    );\n\n  }\n\n","sourceOld":"  public void doBlockJoin(Client client) throws Exception {\n    ModifiableSolrParams p = params(\"rows\",\"0\");\n\n    client.deleteByQuery(\"*:*\", null);\n\n    SolrInputDocument parent;\n    parent = sdoc(\"id\", \"1\", \"type_s\",\"book\", \"book_s\",\"A\", \"v_t\",\"q\");\n    client.add(parent, null);\n\n    parent = sdoc(\"id\", \"2\", \"type_s\",\"book\", \"book_s\",\"B\", \"v_t\",\"q w\");\n    parent.addChildDocument( sdoc(\"id\",\"2.1\", \"type_s\",\"page\", \"page_s\",\"a\", \"v_t\",\"x y z\")  );\n    parent.addChildDocument( sdoc(\"id\",\"2.2\", \"type_s\",\"page\", \"page_s\",\"b\", \"v_t\",\"x y  \") );\n    parent.addChildDocument( sdoc(\"id\",\"2.3\", \"type_s\",\"page\", \"page_s\",\"c\", \"v_t\",\"  y z\" )  );\n    client.add(parent, null);\n\n    parent = sdoc(\"id\", \"3\", \"type_s\",\"book\", \"book_s\",\"C\", \"v_t\",\"q w e\");\n    parent.addChildDocument( sdoc(\"id\",\"3.1\", \"type_s\",\"page\", \"page_s\",\"d\", \"v_t\",\"x    \")  );\n    parent.addChildDocument( sdoc(\"id\",\"3.2\", \"type_s\",\"page\", \"page_s\",\"e\", \"v_t\",\"  y  \")  );\n    parent.addChildDocument( sdoc(\"id\",\"3.3\", \"type_s\",\"page\", \"page_s\",\"f\", \"v_t\",\"    z\")  );\n    client.add(parent, null);\n\n    parent = sdoc(\"id\", \"4\", \"type_s\",\"book\", \"book_s\",\"D\", \"v_t\",\"e\");\n    client.add(parent, null);\n\n    client.commit();\n\n    client.testJQ(params(p, \"q\", \"*:*\"\n            , \"json.facet\", \"{ \" +\n                \"pages:{ type:query, domain:{blockChildren:'type_s:book'} , facet:{ x:{field:v_t} } }\" +\n                \",pages2:{type:terms, field:v_t, domain:{blockChildren:'type_s:book'} }\" +\n                \",books:{ type:query, domain:{blockParent:'type_s:book'}  , facet:{ x:{field:v_t} } }\" +\n                \",books2:{type:terms, field:v_t, domain:{blockParent:'type_s:book'} }\" +\n                \",pageof3:{ type:query, q:'id:3', facet : { x : { type:terms, field:page_s, domain:{blockChildren:'type_s:book'}}} }\" +\n                \",bookof22:{ type:query, q:'id:2.2', facet : { x : { type:terms, field:book_s, domain:{blockParent:'type_s:book'}}} }\" +\n                \",missing_blockParent:{ type:query, domain:{blockParent:'type_s:does_not_exist'} }\" +\n                \",missing_blockChildren:{ type:query, domain:{blockChildren:'type_s:does_not_exist'} }\" +\n                \"}\"\n        )\n        , \"facets=={ count:10\" +\n            \", pages:{count:6 , x:{buckets:[ {val:y,count:4},{val:x,count:3},{val:z,count:3} ]}  }\" +\n            \", pages2:{ buckets:[ {val:y,count:4},{val:x,count:3},{val:z,count:3} ] }\" +\n            \", books:{count:4 , x:{buckets:[ {val:q,count:3},{val:e,count:2},{val:w,count:2} ]}  }\" +\n            \", books2:{ buckets:[ {val:q,count:3},{val:e,count:2},{val:w,count:2} ] }\" +\n            \", pageof3:{count:1 , x:{buckets:[ {val:d,count:1},{val:e,count:1},{val:f,count:1} ]}  }\" +\n            \", bookof22:{count:1 , x:{buckets:[ {val:B,count:1} ]}  }\" +\n            \", missing_blockParent:{count:0}\" +\n            \", missing_blockChildren:{count:0}\" +\n            \"}\"\n    );\n\n    // no matches in base query\n    client.testJQ(params(\"q\", \"no_match_s:NO_MATCHES\"\n            , \"json.facet\", \"{ processEmpty:true,\" +\n                \"pages:{ type:query, domain:{blockChildren:'type_s:book'} }\" +\n                \",books:{ type:query, domain:{blockParent:'type_s:book'} }\" +\n                \"}\"\n        )\n        , \"facets=={ count:0\" +\n            \", pages:{count:0}\" +\n            \", books:{count:0}\" +\n            \"}\"\n    );\n\n\n    // test facet on children nested under terms facet on parents\n    client.testJQ(params(\"q\", \"*:*\"\n            , \"json.facet\", \"{\" +\n                \"books:{ type:terms, field:book_s, facet:{ pages:{type:terms, field:v_t, domain:{blockChildren:'type_s:book'}} } }\" +\n                \"}\"\n        )\n        , \"facets=={ count:10\" +\n            \", books:{buckets:[{val:A,count:1,pages:{buckets:[]}}\" +\n            \"                 ,{val:B,count:1,pages:{buckets:[{val:y,count:3},{val:x,count:2},{val:z,count:2}]}}\" +\n            \"                 ,{val:C,count:1,pages:{buckets:[{val:x,count:1},{val:y,count:1},{val:z,count:1}]}}\" +\n            \"                 ,{val:D,count:1,pages:{buckets:[]}}\"+\n            \"] }\" +\n            \"}\"\n    );\n\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"320888923ec13b91f53082558f01f4c9960dd226","date":1477926871,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/search/facet/TestJsonFacets#doBlockJoin(Client).mjava","pathOld":"solr/core/src/test/org/apache/solr/search/facet/TestJsonFacets#doBlockJoin(Client).mjava","sourceNew":"  public void doBlockJoin(Client client) throws Exception {\n    ModifiableSolrParams p = params(\"rows\",\"0\");\n\n    client.deleteByQuery(\"*:*\", null);\n\n    SolrInputDocument parent;\n    parent = sdoc(\"id\", \"1\", \"type_s\",\"book\", \"book_s\",\"A\", \"v_t\",\"q\");\n    client.add(parent, null);\n\n    parent = sdoc(\"id\", \"2\", \"type_s\",\"book\", \"book_s\",\"B\", \"v_t\",\"q w\");\n    parent.addChildDocument( sdoc(\"id\",\"2.1\", \"type_s\",\"page\", \"page_s\",\"a\", \"v_t\",\"x y z\")  );\n    parent.addChildDocument( sdoc(\"id\",\"2.2\", \"type_s\",\"page\", \"page_s\",\"b\", \"v_t\",\"x y  \") );\n    parent.addChildDocument( sdoc(\"id\",\"2.3\", \"type_s\",\"page\", \"page_s\",\"c\", \"v_t\",\"  y z\" )  );\n    client.add(parent, null);\n\n    parent = sdoc(\"id\", \"3\", \"type_s\",\"book\", \"book_s\",\"C\", \"v_t\",\"q w e\");\n    parent.addChildDocument( sdoc(\"id\",\"3.1\", \"type_s\",\"page\", \"page_s\",\"d\", \"v_t\",\"x    \")  );\n    parent.addChildDocument( sdoc(\"id\",\"3.2\", \"type_s\",\"page\", \"page_s\",\"e\", \"v_t\",\"  y  \")  );\n    parent.addChildDocument( sdoc(\"id\",\"3.3\", \"type_s\",\"page\", \"page_s\",\"f\", \"v_t\",\"    z\")  );\n    client.add(parent, null);\n\n    parent = sdoc(\"id\", \"4\", \"type_s\",\"book\", \"book_s\",\"D\", \"v_t\",\"e\");\n    client.add(parent, null);\n\n    client.commit();\n\n    client.testJQ(params(p, \"q\", \"*:*\"\n            , \"json.facet\", \"{ \" +\n                \"pages:{ type:query, domain:{blockChildren:'type_s:book'} , facet:{ x:{field:v_t} } }\" +\n                \",pages2:{type:terms, field:v_t, domain:{blockChildren:'type_s:book'} }\" +\n                \",books:{ type:query, domain:{blockParent:'type_s:book'}  , facet:{ x:{field:v_t} } }\" +\n                \",books2:{type:terms, field:v_t, domain:{blockParent:'type_s:book'} }\" +\n                \",pageof3:{ type:query, q:'id:3', facet : { x : { type:terms, field:page_s, domain:{blockChildren:'type_s:book'}}} }\" +\n                \",bookof22:{ type:query, q:'id:2.2', facet : { x : { type:terms, field:book_s, domain:{blockParent:'type_s:book'}}} }\" +\n                \",missing_blockParent:{ type:query, domain:{blockParent:'type_s:does_not_exist'} }\" +\n                \",missing_blockChildren:{ type:query, domain:{blockChildren:'type_s:does_not_exist'} }\" +\n                \"}\"\n        )\n        , \"facets=={ count:10\" +\n            \", pages:{count:6 , x:{buckets:[ {val:y,count:4},{val:x,count:3},{val:z,count:3} ]}  }\" +\n            \", pages2:{ buckets:[ {val:y,count:4},{val:x,count:3},{val:z,count:3} ] }\" +\n            \", books:{count:4 , x:{buckets:[ {val:q,count:3},{val:e,count:2},{val:w,count:2} ]}  }\" +\n            \", books2:{ buckets:[ {val:q,count:3},{val:e,count:2},{val:w,count:2} ] }\" +\n            \", pageof3:{count:1 , x:{buckets:[ {val:d,count:1},{val:e,count:1},{val:f,count:1} ]}  }\" +\n            \", bookof22:{count:1 , x:{buckets:[ {val:B,count:1} ]}  }\" +\n            \", missing_blockParent:{count:0}\" +\n            \", missing_blockChildren:{count:0}\" +\n            \"}\"\n    );\n\n    // no matches in base query\n    client.testJQ(params(\"q\", \"no_match_s:NO_MATCHES\"\n            , \"json.facet\", \"{ processEmpty:true,\" +\n                \"pages:{ type:query, domain:{blockChildren:'type_s:book'} }\" +\n                \",books:{ type:query, domain:{blockParent:'type_s:book'} }\" +\n                \"}\"\n        )\n        , \"facets=={ count:0\" +\n            \", pages:{count:0}\" +\n            \", books:{count:0}\" +\n            \"}\"\n    );\n\n\n    // test facet on children nested under terms facet on parents\n    client.testJQ(params(\"q\", \"*:*\"\n            , \"json.facet\", \"{\" +\n                \"books:{ type:terms, field:book_s, facet:{ pages:{type:terms, field:v_t, domain:{blockChildren:'type_s:book'}} } }\" +\n                \"}\"\n        )\n        , \"facets=={ count:10\" +\n            \", books:{buckets:[{val:A,count:1,pages:{buckets:[]}}\" +\n            \"                 ,{val:B,count:1,pages:{buckets:[{val:y,count:3},{val:x,count:2},{val:z,count:2}]}}\" +\n            \"                 ,{val:C,count:1,pages:{buckets:[{val:x,count:1},{val:y,count:1},{val:z,count:1}]}}\" +\n            \"                 ,{val:D,count:1,pages:{buckets:[]}}\"+\n            \"] }\" +\n            \"}\"\n    );\n\n    // test filter after block join\n    client.testJQ(params(p, \"q\", \"*:*\"\n        , \"json.facet\", \"{ \" +\n            \"pages1:{type:terms, field:v_t, domain:{blockChildren:'type_s:book'}, filter:'*:*' }\" +\n            \",pages2:{type:terms, field:v_t, domain:{blockChildren:'type_s:book'}, filter:'-id:3.1' }\" +\n            \",books:{type:terms, field:v_t, domain:{blockParent:'type_s:book'}, filter:'*:*' }\" +\n            \",books2:{type:terms, field:v_t, domain:{blockParent:'type_s:book'}, filter:'id:1' }\" +\n            \"}\"\n        )\n        , \"facets=={ count:10\" +\n            \", pages1:{ buckets:[ {val:y,count:4},{val:x,count:3},{val:z,count:3} ] }\" +\n            \", pages2:{ buckets:[ {val:y,count:4},{val:z,count:3},{val:x,count:2} ] }\" +\n            \", books:{ buckets:[ {val:q,count:3},{val:e,count:2},{val:w,count:2} ] }\" +\n            \", books2:{ buckets:[ {val:q,count:1} ] }\" +\n            \"}\"\n    );\n\n  }\n\n","sourceOld":"  public void doBlockJoin(Client client) throws Exception {\n    ModifiableSolrParams p = params(\"rows\",\"0\");\n\n    client.deleteByQuery(\"*:*\", null);\n\n    SolrInputDocument parent;\n    parent = sdoc(\"id\", \"1\", \"type_s\",\"book\", \"book_s\",\"A\", \"v_t\",\"q\");\n    client.add(parent, null);\n\n    parent = sdoc(\"id\", \"2\", \"type_s\",\"book\", \"book_s\",\"B\", \"v_t\",\"q w\");\n    parent.addChildDocument( sdoc(\"id\",\"2.1\", \"type_s\",\"page\", \"page_s\",\"a\", \"v_t\",\"x y z\")  );\n    parent.addChildDocument( sdoc(\"id\",\"2.2\", \"type_s\",\"page\", \"page_s\",\"b\", \"v_t\",\"x y  \") );\n    parent.addChildDocument( sdoc(\"id\",\"2.3\", \"type_s\",\"page\", \"page_s\",\"c\", \"v_t\",\"  y z\" )  );\n    client.add(parent, null);\n\n    parent = sdoc(\"id\", \"3\", \"type_s\",\"book\", \"book_s\",\"C\", \"v_t\",\"q w e\");\n    parent.addChildDocument( sdoc(\"id\",\"3.1\", \"type_s\",\"page\", \"page_s\",\"d\", \"v_t\",\"x    \")  );\n    parent.addChildDocument( sdoc(\"id\",\"3.2\", \"type_s\",\"page\", \"page_s\",\"e\", \"v_t\",\"  y  \")  );\n    parent.addChildDocument( sdoc(\"id\",\"3.3\", \"type_s\",\"page\", \"page_s\",\"f\", \"v_t\",\"    z\")  );\n    client.add(parent, null);\n\n    parent = sdoc(\"id\", \"4\", \"type_s\",\"book\", \"book_s\",\"D\", \"v_t\",\"e\");\n    client.add(parent, null);\n\n    client.commit();\n\n    client.testJQ(params(p, \"q\", \"*:*\"\n            , \"json.facet\", \"{ \" +\n                \"pages:{ type:query, domain:{blockChildren:'type_s:book'} , facet:{ x:{field:v_t} } }\" +\n                \",pages2:{type:terms, field:v_t, domain:{blockChildren:'type_s:book'} }\" +\n                \",books:{ type:query, domain:{blockParent:'type_s:book'}  , facet:{ x:{field:v_t} } }\" +\n                \",books2:{type:terms, field:v_t, domain:{blockParent:'type_s:book'} }\" +\n                \",pageof3:{ type:query, q:'id:3', facet : { x : { type:terms, field:page_s, domain:{blockChildren:'type_s:book'}}} }\" +\n                \",bookof22:{ type:query, q:'id:2.2', facet : { x : { type:terms, field:book_s, domain:{blockParent:'type_s:book'}}} }\" +\n                \",missing_blockParent:{ type:query, domain:{blockParent:'type_s:does_not_exist'} }\" +\n                \",missing_blockChildren:{ type:query, domain:{blockChildren:'type_s:does_not_exist'} }\" +\n                \"}\"\n        )\n        , \"facets=={ count:10\" +\n            \", pages:{count:6 , x:{buckets:[ {val:y,count:4},{val:x,count:3},{val:z,count:3} ]}  }\" +\n            \", pages2:{ buckets:[ {val:y,count:4},{val:x,count:3},{val:z,count:3} ] }\" +\n            \", books:{count:4 , x:{buckets:[ {val:q,count:3},{val:e,count:2},{val:w,count:2} ]}  }\" +\n            \", books2:{ buckets:[ {val:q,count:3},{val:e,count:2},{val:w,count:2} ] }\" +\n            \", pageof3:{count:1 , x:{buckets:[ {val:d,count:1},{val:e,count:1},{val:f,count:1} ]}  }\" +\n            \", bookof22:{count:1 , x:{buckets:[ {val:B,count:1} ]}  }\" +\n            \", missing_blockParent:{count:0}\" +\n            \", missing_blockChildren:{count:0}\" +\n            \"}\"\n    );\n\n    // no matches in base query\n    client.testJQ(params(\"q\", \"no_match_s:NO_MATCHES\"\n            , \"json.facet\", \"{ processEmpty:true,\" +\n                \"pages:{ type:query, domain:{blockChildren:'type_s:book'} }\" +\n                \",books:{ type:query, domain:{blockParent:'type_s:book'} }\" +\n                \"}\"\n        )\n        , \"facets=={ count:0\" +\n            \", pages:{count:0}\" +\n            \", books:{count:0}\" +\n            \"}\"\n    );\n\n\n    // test facet on children nested under terms facet on parents\n    client.testJQ(params(\"q\", \"*:*\"\n            , \"json.facet\", \"{\" +\n                \"books:{ type:terms, field:book_s, facet:{ pages:{type:terms, field:v_t, domain:{blockChildren:'type_s:book'}} } }\" +\n                \"}\"\n        )\n        , \"facets=={ count:10\" +\n            \", books:{buckets:[{val:A,count:1,pages:{buckets:[]}}\" +\n            \"                 ,{val:B,count:1,pages:{buckets:[{val:y,count:3},{val:x,count:2},{val:z,count:2}]}}\" +\n            \"                 ,{val:C,count:1,pages:{buckets:[{val:x,count:1},{val:y,count:1},{val:z,count:1}]}}\" +\n            \"                 ,{val:D,count:1,pages:{buckets:[]}}\"+\n            \"] }\" +\n            \"}\"\n    );\n\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d12e7f5233d4a77959b66fda90df286dace8a9a0","date":1478016064,"type":3,"author":"yonik","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/search/facet/TestJsonFacets#doBlockJoin(Client).mjava","pathOld":"solr/core/src/test/org/apache/solr/search/facet/TestJsonFacets#doBlockJoin(Client).mjava","sourceNew":"  public void doBlockJoin(Client client) throws Exception {\n    ModifiableSolrParams p = params(\"rows\",\"0\");\n\n    client.deleteByQuery(\"*:*\", null);\n\n    SolrInputDocument parent;\n    parent = sdoc(\"id\", \"1\", \"type_s\",\"book\", \"book_s\",\"A\", \"v_t\",\"q\");\n    client.add(parent, null);\n\n    parent = sdoc(\"id\", \"2\", \"type_s\",\"book\", \"book_s\",\"B\", \"v_t\",\"q w\");\n    parent.addChildDocument( sdoc(\"id\",\"2.1\", \"type_s\",\"page\", \"page_s\",\"a\", \"v_t\",\"x y z\")  );\n    parent.addChildDocument( sdoc(\"id\",\"2.2\", \"type_s\",\"page\", \"page_s\",\"b\", \"v_t\",\"x y  \") );\n    parent.addChildDocument( sdoc(\"id\",\"2.3\", \"type_s\",\"page\", \"page_s\",\"c\", \"v_t\",\"  y z\" )  );\n    client.add(parent, null);\n\n    parent = sdoc(\"id\", \"3\", \"type_s\",\"book\", \"book_s\",\"C\", \"v_t\",\"q w e\");\n    parent.addChildDocument( sdoc(\"id\",\"3.1\", \"type_s\",\"page\", \"page_s\",\"d\", \"v_t\",\"x    \")  );\n    parent.addChildDocument( sdoc(\"id\",\"3.2\", \"type_s\",\"page\", \"page_s\",\"e\", \"v_t\",\"  y  \")  );\n    parent.addChildDocument( sdoc(\"id\",\"3.3\", \"type_s\",\"page\", \"page_s\",\"f\", \"v_t\",\"    z\")  );\n    client.add(parent, null);\n\n    parent = sdoc(\"id\", \"4\", \"type_s\",\"book\", \"book_s\",\"D\", \"v_t\",\"e\");\n    client.add(parent, null);\n\n    client.commit();\n\n    client.testJQ(params(p, \"q\", \"*:*\"\n            , \"json.facet\", \"{ \" +\n                \"pages:{ type:query, domain:{blockChildren:'type_s:book'} , facet:{ x:{field:v_t} } }\" +\n                \",pages2:{type:terms, field:v_t, domain:{blockChildren:'type_s:book'} }\" +\n                \",books:{ type:query, domain:{blockParent:'type_s:book'}  , facet:{ x:{field:v_t} } }\" +\n                \",books2:{type:terms, field:v_t, domain:{blockParent:'type_s:book'} }\" +\n                \",pageof3:{ type:query, q:'id:3', facet : { x : { type:terms, field:page_s, domain:{blockChildren:'type_s:book'}}} }\" +\n                \",bookof22:{ type:query, q:'id:2.2', facet : { x : { type:terms, field:book_s, domain:{blockParent:'type_s:book'}}} }\" +\n                \",missing_blockParent:{ type:query, domain:{blockParent:'type_s:does_not_exist'} }\" +\n                \",missing_blockChildren:{ type:query, domain:{blockChildren:'type_s:does_not_exist'} }\" +\n                \"}\"\n        )\n        , \"facets=={ count:10\" +\n            \", pages:{count:6 , x:{buckets:[ {val:y,count:4},{val:x,count:3},{val:z,count:3} ]}  }\" +\n            \", pages2:{ buckets:[ {val:y,count:4},{val:x,count:3},{val:z,count:3} ] }\" +\n            \", books:{count:4 , x:{buckets:[ {val:q,count:3},{val:e,count:2},{val:w,count:2} ]}  }\" +\n            \", books2:{ buckets:[ {val:q,count:3},{val:e,count:2},{val:w,count:2} ] }\" +\n            \", pageof3:{count:1 , x:{buckets:[ {val:d,count:1},{val:e,count:1},{val:f,count:1} ]}  }\" +\n            \", bookof22:{count:1 , x:{buckets:[ {val:B,count:1} ]}  }\" +\n            \", missing_blockParent:{count:0}\" +\n            \", missing_blockChildren:{count:0}\" +\n            \"}\"\n    );\n\n    // no matches in base query\n    client.testJQ(params(\"q\", \"no_match_s:NO_MATCHES\"\n            , \"json.facet\", \"{ processEmpty:true,\" +\n                \"pages:{ type:query, domain:{blockChildren:'type_s:book'} }\" +\n                \",books:{ type:query, domain:{blockParent:'type_s:book'} }\" +\n                \"}\"\n        )\n        , \"facets=={ count:0\" +\n            \", pages:{count:0}\" +\n            \", books:{count:0}\" +\n            \"}\"\n    );\n\n\n    // test facet on children nested under terms facet on parents\n    client.testJQ(params(\"q\", \"*:*\"\n            , \"json.facet\", \"{\" +\n                \"books:{ type:terms, field:book_s, facet:{ pages:{type:terms, field:v_t, domain:{blockChildren:'type_s:book'}} } }\" +\n                \"}\"\n        )\n        , \"facets=={ count:10\" +\n            \", books:{buckets:[{val:A,count:1,pages:{buckets:[]}}\" +\n            \"                 ,{val:B,count:1,pages:{buckets:[{val:y,count:3},{val:x,count:2},{val:z,count:2}]}}\" +\n            \"                 ,{val:C,count:1,pages:{buckets:[{val:x,count:1},{val:y,count:1},{val:z,count:1}]}}\" +\n            \"                 ,{val:D,count:1,pages:{buckets:[]}}\"+\n            \"] }\" +\n            \"}\"\n    );\n\n    // test filter after block join\n    client.testJQ(params(p, \"q\", \"*:*\"\n        , \"json.facet\", \"{ \" +\n            \"pages1:{type:terms, field:v_t, domain:{blockChildren:'type_s:book', filter:'*:*'} }\" +\n            \",pages2:{type:terms, field:v_t, domain:{blockChildren:'type_s:book', filter:'-id:3.1'} }\" +\n            \",books:{type:terms, field:v_t, domain:{blockParent:'type_s:book', filter:'*:*'} }\" +\n            \",books2:{type:terms, field:v_t, domain:{blockParent:'type_s:book', filter:'id:1'} }\" +\n            \"}\"\n        )\n        , \"facets=={ count:10\" +\n            \", pages1:{ buckets:[ {val:y,count:4},{val:x,count:3},{val:z,count:3} ] }\" +\n            \", pages2:{ buckets:[ {val:y,count:4},{val:z,count:3},{val:x,count:2} ] }\" +\n            \", books:{ buckets:[ {val:q,count:3},{val:e,count:2},{val:w,count:2} ] }\" +\n            \", books2:{ buckets:[ {val:q,count:1} ] }\" +\n            \"}\"\n    );\n\n  }\n\n","sourceOld":"  public void doBlockJoin(Client client) throws Exception {\n    ModifiableSolrParams p = params(\"rows\",\"0\");\n\n    client.deleteByQuery(\"*:*\", null);\n\n    SolrInputDocument parent;\n    parent = sdoc(\"id\", \"1\", \"type_s\",\"book\", \"book_s\",\"A\", \"v_t\",\"q\");\n    client.add(parent, null);\n\n    parent = sdoc(\"id\", \"2\", \"type_s\",\"book\", \"book_s\",\"B\", \"v_t\",\"q w\");\n    parent.addChildDocument( sdoc(\"id\",\"2.1\", \"type_s\",\"page\", \"page_s\",\"a\", \"v_t\",\"x y z\")  );\n    parent.addChildDocument( sdoc(\"id\",\"2.2\", \"type_s\",\"page\", \"page_s\",\"b\", \"v_t\",\"x y  \") );\n    parent.addChildDocument( sdoc(\"id\",\"2.3\", \"type_s\",\"page\", \"page_s\",\"c\", \"v_t\",\"  y z\" )  );\n    client.add(parent, null);\n\n    parent = sdoc(\"id\", \"3\", \"type_s\",\"book\", \"book_s\",\"C\", \"v_t\",\"q w e\");\n    parent.addChildDocument( sdoc(\"id\",\"3.1\", \"type_s\",\"page\", \"page_s\",\"d\", \"v_t\",\"x    \")  );\n    parent.addChildDocument( sdoc(\"id\",\"3.2\", \"type_s\",\"page\", \"page_s\",\"e\", \"v_t\",\"  y  \")  );\n    parent.addChildDocument( sdoc(\"id\",\"3.3\", \"type_s\",\"page\", \"page_s\",\"f\", \"v_t\",\"    z\")  );\n    client.add(parent, null);\n\n    parent = sdoc(\"id\", \"4\", \"type_s\",\"book\", \"book_s\",\"D\", \"v_t\",\"e\");\n    client.add(parent, null);\n\n    client.commit();\n\n    client.testJQ(params(p, \"q\", \"*:*\"\n            , \"json.facet\", \"{ \" +\n                \"pages:{ type:query, domain:{blockChildren:'type_s:book'} , facet:{ x:{field:v_t} } }\" +\n                \",pages2:{type:terms, field:v_t, domain:{blockChildren:'type_s:book'} }\" +\n                \",books:{ type:query, domain:{blockParent:'type_s:book'}  , facet:{ x:{field:v_t} } }\" +\n                \",books2:{type:terms, field:v_t, domain:{blockParent:'type_s:book'} }\" +\n                \",pageof3:{ type:query, q:'id:3', facet : { x : { type:terms, field:page_s, domain:{blockChildren:'type_s:book'}}} }\" +\n                \",bookof22:{ type:query, q:'id:2.2', facet : { x : { type:terms, field:book_s, domain:{blockParent:'type_s:book'}}} }\" +\n                \",missing_blockParent:{ type:query, domain:{blockParent:'type_s:does_not_exist'} }\" +\n                \",missing_blockChildren:{ type:query, domain:{blockChildren:'type_s:does_not_exist'} }\" +\n                \"}\"\n        )\n        , \"facets=={ count:10\" +\n            \", pages:{count:6 , x:{buckets:[ {val:y,count:4},{val:x,count:3},{val:z,count:3} ]}  }\" +\n            \", pages2:{ buckets:[ {val:y,count:4},{val:x,count:3},{val:z,count:3} ] }\" +\n            \", books:{count:4 , x:{buckets:[ {val:q,count:3},{val:e,count:2},{val:w,count:2} ]}  }\" +\n            \", books2:{ buckets:[ {val:q,count:3},{val:e,count:2},{val:w,count:2} ] }\" +\n            \", pageof3:{count:1 , x:{buckets:[ {val:d,count:1},{val:e,count:1},{val:f,count:1} ]}  }\" +\n            \", bookof22:{count:1 , x:{buckets:[ {val:B,count:1} ]}  }\" +\n            \", missing_blockParent:{count:0}\" +\n            \", missing_blockChildren:{count:0}\" +\n            \"}\"\n    );\n\n    // no matches in base query\n    client.testJQ(params(\"q\", \"no_match_s:NO_MATCHES\"\n            , \"json.facet\", \"{ processEmpty:true,\" +\n                \"pages:{ type:query, domain:{blockChildren:'type_s:book'} }\" +\n                \",books:{ type:query, domain:{blockParent:'type_s:book'} }\" +\n                \"}\"\n        )\n        , \"facets=={ count:0\" +\n            \", pages:{count:0}\" +\n            \", books:{count:0}\" +\n            \"}\"\n    );\n\n\n    // test facet on children nested under terms facet on parents\n    client.testJQ(params(\"q\", \"*:*\"\n            , \"json.facet\", \"{\" +\n                \"books:{ type:terms, field:book_s, facet:{ pages:{type:terms, field:v_t, domain:{blockChildren:'type_s:book'}} } }\" +\n                \"}\"\n        )\n        , \"facets=={ count:10\" +\n            \", books:{buckets:[{val:A,count:1,pages:{buckets:[]}}\" +\n            \"                 ,{val:B,count:1,pages:{buckets:[{val:y,count:3},{val:x,count:2},{val:z,count:2}]}}\" +\n            \"                 ,{val:C,count:1,pages:{buckets:[{val:x,count:1},{val:y,count:1},{val:z,count:1}]}}\" +\n            \"                 ,{val:D,count:1,pages:{buckets:[]}}\"+\n            \"] }\" +\n            \"}\"\n    );\n\n    // test filter after block join\n    client.testJQ(params(p, \"q\", \"*:*\"\n        , \"json.facet\", \"{ \" +\n            \"pages1:{type:terms, field:v_t, domain:{blockChildren:'type_s:book'}, filter:'*:*' }\" +\n            \",pages2:{type:terms, field:v_t, domain:{blockChildren:'type_s:book'}, filter:'-id:3.1' }\" +\n            \",books:{type:terms, field:v_t, domain:{blockParent:'type_s:book'}, filter:'*:*' }\" +\n            \",books2:{type:terms, field:v_t, domain:{blockParent:'type_s:book'}, filter:'id:1' }\" +\n            \"}\"\n        )\n        , \"facets=={ count:10\" +\n            \", pages1:{ buckets:[ {val:y,count:4},{val:x,count:3},{val:z,count:3} ] }\" +\n            \", pages2:{ buckets:[ {val:y,count:4},{val:z,count:3},{val:x,count:2} ] }\" +\n            \", books:{ buckets:[ {val:q,count:3},{val:e,count:2},{val:w,count:2} ] }\" +\n            \", books2:{ buckets:[ {val:q,count:1} ] }\" +\n            \"}\"\n    );\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9720b151fde2073f4e401450f4574e5f31c2d0ff","date":1478184029,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/search/facet/TestJsonFacets#doBlockJoin(Client).mjava","pathOld":"solr/core/src/test/org/apache/solr/search/facet/TestJsonFacets#doBlockJoin(Client).mjava","sourceNew":"  public void doBlockJoin(Client client) throws Exception {\n    ModifiableSolrParams p = params(\"rows\",\"0\");\n\n    client.deleteByQuery(\"*:*\", null);\n\n    SolrInputDocument parent;\n    parent = sdoc(\"id\", \"1\", \"type_s\",\"book\", \"book_s\",\"A\", \"v_t\",\"q\");\n    client.add(parent, null);\n\n    parent = sdoc(\"id\", \"2\", \"type_s\",\"book\", \"book_s\",\"B\", \"v_t\",\"q w\");\n    parent.addChildDocument( sdoc(\"id\",\"2.1\", \"type_s\",\"page\", \"page_s\",\"a\", \"v_t\",\"x y z\")  );\n    parent.addChildDocument( sdoc(\"id\",\"2.2\", \"type_s\",\"page\", \"page_s\",\"b\", \"v_t\",\"x y  \") );\n    parent.addChildDocument( sdoc(\"id\",\"2.3\", \"type_s\",\"page\", \"page_s\",\"c\", \"v_t\",\"  y z\" )  );\n    client.add(parent, null);\n\n    parent = sdoc(\"id\", \"3\", \"type_s\",\"book\", \"book_s\",\"C\", \"v_t\",\"q w e\");\n    parent.addChildDocument( sdoc(\"id\",\"3.1\", \"type_s\",\"page\", \"page_s\",\"d\", \"v_t\",\"x    \")  );\n    parent.addChildDocument( sdoc(\"id\",\"3.2\", \"type_s\",\"page\", \"page_s\",\"e\", \"v_t\",\"  y  \")  );\n    parent.addChildDocument( sdoc(\"id\",\"3.3\", \"type_s\",\"page\", \"page_s\",\"f\", \"v_t\",\"    z\")  );\n    client.add(parent, null);\n\n    parent = sdoc(\"id\", \"4\", \"type_s\",\"book\", \"book_s\",\"D\", \"v_t\",\"e\");\n    client.add(parent, null);\n\n    client.commit();\n\n    client.testJQ(params(p, \"q\", \"*:*\"\n            , \"json.facet\", \"{ \" +\n                \"pages:{ type:query, domain:{blockChildren:'type_s:book'} , facet:{ x:{field:v_t} } }\" +\n                \",pages2:{type:terms, field:v_t, domain:{blockChildren:'type_s:book'} }\" +\n                \",books:{ type:query, domain:{blockParent:'type_s:book'}  , facet:{ x:{field:v_t} } }\" +\n                \",books2:{type:terms, field:v_t, domain:{blockParent:'type_s:book'} }\" +\n                \",pageof3:{ type:query, q:'id:3', facet : { x : { type:terms, field:page_s, domain:{blockChildren:'type_s:book'}}} }\" +\n                \",bookof22:{ type:query, q:'id:2.2', facet : { x : { type:terms, field:book_s, domain:{blockParent:'type_s:book'}}} }\" +\n                \",missing_blockParent:{ type:query, domain:{blockParent:'type_s:does_not_exist'} }\" +\n                \",missing_blockChildren:{ type:query, domain:{blockChildren:'type_s:does_not_exist'} }\" +\n                \"}\"\n        )\n        , \"facets=={ count:10\" +\n            \", pages:{count:6 , x:{buckets:[ {val:y,count:4},{val:x,count:3},{val:z,count:3} ]}  }\" +\n            \", pages2:{ buckets:[ {val:y,count:4},{val:x,count:3},{val:z,count:3} ] }\" +\n            \", books:{count:4 , x:{buckets:[ {val:q,count:3},{val:e,count:2},{val:w,count:2} ]}  }\" +\n            \", books2:{ buckets:[ {val:q,count:3},{val:e,count:2},{val:w,count:2} ] }\" +\n            \", pageof3:{count:1 , x:{buckets:[ {val:d,count:1},{val:e,count:1},{val:f,count:1} ]}  }\" +\n            \", bookof22:{count:1 , x:{buckets:[ {val:B,count:1} ]}  }\" +\n            \", missing_blockParent:{count:0}\" +\n            \", missing_blockChildren:{count:0}\" +\n            \"}\"\n    );\n\n    // no matches in base query\n    client.testJQ(params(\"q\", \"no_match_s:NO_MATCHES\"\n            , \"json.facet\", \"{ processEmpty:true,\" +\n                \"pages:{ type:query, domain:{blockChildren:'type_s:book'} }\" +\n                \",books:{ type:query, domain:{blockParent:'type_s:book'} }\" +\n                \"}\"\n        )\n        , \"facets=={ count:0\" +\n            \", pages:{count:0}\" +\n            \", books:{count:0}\" +\n            \"}\"\n    );\n\n\n    // test facet on children nested under terms facet on parents\n    client.testJQ(params(\"q\", \"*:*\"\n            , \"json.facet\", \"{\" +\n                \"books:{ type:terms, field:book_s, facet:{ pages:{type:terms, field:v_t, domain:{blockChildren:'type_s:book'}} } }\" +\n                \"}\"\n        )\n        , \"facets=={ count:10\" +\n            \", books:{buckets:[{val:A,count:1,pages:{buckets:[]}}\" +\n            \"                 ,{val:B,count:1,pages:{buckets:[{val:y,count:3},{val:x,count:2},{val:z,count:2}]}}\" +\n            \"                 ,{val:C,count:1,pages:{buckets:[{val:x,count:1},{val:y,count:1},{val:z,count:1}]}}\" +\n            \"                 ,{val:D,count:1,pages:{buckets:[]}}\"+\n            \"] }\" +\n            \"}\"\n    );\n\n    // test filter after block join\n    client.testJQ(params(p, \"q\", \"*:*\"\n        , \"json.facet\", \"{ \" +\n            \"pages1:{type:terms, field:v_t, domain:{blockChildren:'type_s:book', filter:'*:*'} }\" +\n            \",pages2:{type:terms, field:v_t, domain:{blockChildren:'type_s:book', filter:'-id:3.1'} }\" +\n            \",books:{type:terms, field:v_t, domain:{blockParent:'type_s:book', filter:'*:*'} }\" +\n            \",books2:{type:terms, field:v_t, domain:{blockParent:'type_s:book', filter:'id:1'} }\" +\n            \"}\"\n        )\n        , \"facets=={ count:10\" +\n            \", pages1:{ buckets:[ {val:y,count:4},{val:x,count:3},{val:z,count:3} ] }\" +\n            \", pages2:{ buckets:[ {val:y,count:4},{val:z,count:3},{val:x,count:2} ] }\" +\n            \", books:{ buckets:[ {val:q,count:3},{val:e,count:2},{val:w,count:2} ] }\" +\n            \", books2:{ buckets:[ {val:q,count:1} ] }\" +\n            \"}\"\n    );\n\n  }\n\n","sourceOld":"  public void doBlockJoin(Client client) throws Exception {\n    ModifiableSolrParams p = params(\"rows\",\"0\");\n\n    client.deleteByQuery(\"*:*\", null);\n\n    SolrInputDocument parent;\n    parent = sdoc(\"id\", \"1\", \"type_s\",\"book\", \"book_s\",\"A\", \"v_t\",\"q\");\n    client.add(parent, null);\n\n    parent = sdoc(\"id\", \"2\", \"type_s\",\"book\", \"book_s\",\"B\", \"v_t\",\"q w\");\n    parent.addChildDocument( sdoc(\"id\",\"2.1\", \"type_s\",\"page\", \"page_s\",\"a\", \"v_t\",\"x y z\")  );\n    parent.addChildDocument( sdoc(\"id\",\"2.2\", \"type_s\",\"page\", \"page_s\",\"b\", \"v_t\",\"x y  \") );\n    parent.addChildDocument( sdoc(\"id\",\"2.3\", \"type_s\",\"page\", \"page_s\",\"c\", \"v_t\",\"  y z\" )  );\n    client.add(parent, null);\n\n    parent = sdoc(\"id\", \"3\", \"type_s\",\"book\", \"book_s\",\"C\", \"v_t\",\"q w e\");\n    parent.addChildDocument( sdoc(\"id\",\"3.1\", \"type_s\",\"page\", \"page_s\",\"d\", \"v_t\",\"x    \")  );\n    parent.addChildDocument( sdoc(\"id\",\"3.2\", \"type_s\",\"page\", \"page_s\",\"e\", \"v_t\",\"  y  \")  );\n    parent.addChildDocument( sdoc(\"id\",\"3.3\", \"type_s\",\"page\", \"page_s\",\"f\", \"v_t\",\"    z\")  );\n    client.add(parent, null);\n\n    parent = sdoc(\"id\", \"4\", \"type_s\",\"book\", \"book_s\",\"D\", \"v_t\",\"e\");\n    client.add(parent, null);\n\n    client.commit();\n\n    client.testJQ(params(p, \"q\", \"*:*\"\n            , \"json.facet\", \"{ \" +\n                \"pages:{ type:query, domain:{blockChildren:'type_s:book'} , facet:{ x:{field:v_t} } }\" +\n                \",pages2:{type:terms, field:v_t, domain:{blockChildren:'type_s:book'} }\" +\n                \",books:{ type:query, domain:{blockParent:'type_s:book'}  , facet:{ x:{field:v_t} } }\" +\n                \",books2:{type:terms, field:v_t, domain:{blockParent:'type_s:book'} }\" +\n                \",pageof3:{ type:query, q:'id:3', facet : { x : { type:terms, field:page_s, domain:{blockChildren:'type_s:book'}}} }\" +\n                \",bookof22:{ type:query, q:'id:2.2', facet : { x : { type:terms, field:book_s, domain:{blockParent:'type_s:book'}}} }\" +\n                \",missing_blockParent:{ type:query, domain:{blockParent:'type_s:does_not_exist'} }\" +\n                \",missing_blockChildren:{ type:query, domain:{blockChildren:'type_s:does_not_exist'} }\" +\n                \"}\"\n        )\n        , \"facets=={ count:10\" +\n            \", pages:{count:6 , x:{buckets:[ {val:y,count:4},{val:x,count:3},{val:z,count:3} ]}  }\" +\n            \", pages2:{ buckets:[ {val:y,count:4},{val:x,count:3},{val:z,count:3} ] }\" +\n            \", books:{count:4 , x:{buckets:[ {val:q,count:3},{val:e,count:2},{val:w,count:2} ]}  }\" +\n            \", books2:{ buckets:[ {val:q,count:3},{val:e,count:2},{val:w,count:2} ] }\" +\n            \", pageof3:{count:1 , x:{buckets:[ {val:d,count:1},{val:e,count:1},{val:f,count:1} ]}  }\" +\n            \", bookof22:{count:1 , x:{buckets:[ {val:B,count:1} ]}  }\" +\n            \", missing_blockParent:{count:0}\" +\n            \", missing_blockChildren:{count:0}\" +\n            \"}\"\n    );\n\n    // no matches in base query\n    client.testJQ(params(\"q\", \"no_match_s:NO_MATCHES\"\n            , \"json.facet\", \"{ processEmpty:true,\" +\n                \"pages:{ type:query, domain:{blockChildren:'type_s:book'} }\" +\n                \",books:{ type:query, domain:{blockParent:'type_s:book'} }\" +\n                \"}\"\n        )\n        , \"facets=={ count:0\" +\n            \", pages:{count:0}\" +\n            \", books:{count:0}\" +\n            \"}\"\n    );\n\n\n    // test facet on children nested under terms facet on parents\n    client.testJQ(params(\"q\", \"*:*\"\n            , \"json.facet\", \"{\" +\n                \"books:{ type:terms, field:book_s, facet:{ pages:{type:terms, field:v_t, domain:{blockChildren:'type_s:book'}} } }\" +\n                \"}\"\n        )\n        , \"facets=={ count:10\" +\n            \", books:{buckets:[{val:A,count:1,pages:{buckets:[]}}\" +\n            \"                 ,{val:B,count:1,pages:{buckets:[{val:y,count:3},{val:x,count:2},{val:z,count:2}]}}\" +\n            \"                 ,{val:C,count:1,pages:{buckets:[{val:x,count:1},{val:y,count:1},{val:z,count:1}]}}\" +\n            \"                 ,{val:D,count:1,pages:{buckets:[]}}\"+\n            \"] }\" +\n            \"}\"\n    );\n\n    // test filter after block join\n    client.testJQ(params(p, \"q\", \"*:*\"\n        , \"json.facet\", \"{ \" +\n            \"pages1:{type:terms, field:v_t, domain:{blockChildren:'type_s:book'}, filter:'*:*' }\" +\n            \",pages2:{type:terms, field:v_t, domain:{blockChildren:'type_s:book'}, filter:'-id:3.1' }\" +\n            \",books:{type:terms, field:v_t, domain:{blockParent:'type_s:book'}, filter:'*:*' }\" +\n            \",books2:{type:terms, field:v_t, domain:{blockParent:'type_s:book'}, filter:'id:1' }\" +\n            \"}\"\n        )\n        , \"facets=={ count:10\" +\n            \", pages1:{ buckets:[ {val:y,count:4},{val:x,count:3},{val:z,count:3} ] }\" +\n            \", pages2:{ buckets:[ {val:y,count:4},{val:z,count:3},{val:x,count:2} ] }\" +\n            \", books:{ buckets:[ {val:q,count:3},{val:e,count:2},{val:w,count:2} ] }\" +\n            \", books2:{ buckets:[ {val:q,count:1} ] }\" +\n            \"}\"\n    );\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ca2ebd0ea0315b440af8ae976b9c4334f14ccdbc","date":1478373897,"type":3,"author":"yonik","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/search/facet/TestJsonFacets#doBlockJoin(Client).mjava","pathOld":"solr/core/src/test/org/apache/solr/search/facet/TestJsonFacets#doBlockJoin(Client).mjava","sourceNew":"  public void doBlockJoin(Client client) throws Exception {\n    ModifiableSolrParams p = params(\"rows\",\"0\");\n\n    client.deleteByQuery(\"*:*\", null);\n\n    SolrInputDocument parent;\n    parent = sdoc(\"id\", \"1\", \"type_s\",\"book\", \"book_s\",\"A\", \"v_t\",\"q\");\n    client.add(parent, null);\n\n    parent = sdoc(\"id\", \"2\", \"type_s\",\"book\", \"book_s\",\"B\", \"v_t\",\"q w\");\n    parent.addChildDocument( sdoc(\"id\",\"2.1\", \"type_s\",\"page\", \"page_s\",\"a\", \"v_t\",\"x y z\")  );\n    parent.addChildDocument( sdoc(\"id\",\"2.2\", \"type_s\",\"page\", \"page_s\",\"b\", \"v_t\",\"x y  \") );\n    parent.addChildDocument( sdoc(\"id\",\"2.3\", \"type_s\",\"page\", \"page_s\",\"c\", \"v_t\",\"  y z\" )  );\n    client.add(parent, null);\n\n    parent = sdoc(\"id\", \"3\", \"type_s\",\"book\", \"book_s\",\"C\", \"v_t\",\"q w e\");\n    parent.addChildDocument( sdoc(\"id\",\"3.1\", \"type_s\",\"page\", \"page_s\",\"d\", \"v_t\",\"x    \")  );\n    parent.addChildDocument( sdoc(\"id\",\"3.2\", \"type_s\",\"page\", \"page_s\",\"e\", \"v_t\",\"  y  \")  );\n    parent.addChildDocument( sdoc(\"id\",\"3.3\", \"type_s\",\"page\", \"page_s\",\"f\", \"v_t\",\"    z\")  );\n    client.add(parent, null);\n\n    parent = sdoc(\"id\", \"4\", \"type_s\",\"book\", \"book_s\",\"D\", \"v_t\",\"e\");\n    client.add(parent, null);\n\n    client.commit();\n\n    client.testJQ(params(p, \"q\", \"*:*\"\n            , \"json.facet\", \"{ \" +\n                \"pages:{ type:query, domain:{blockChildren:'type_s:book'} , facet:{ x:{field:v_t} } }\" +\n                \",pages2:{type:terms, field:v_t, domain:{blockChildren:'type_s:book'} }\" +\n                \",books:{ type:query, domain:{blockParent:'type_s:book'}  , facet:{ x:{field:v_t} } }\" +\n                \",books2:{type:terms, field:v_t, domain:{blockParent:'type_s:book'} }\" +\n                \",pageof3:{ type:query, q:'id:3', facet : { x : { type:terms, field:page_s, domain:{blockChildren:'type_s:book'}}} }\" +\n                \",bookof22:{ type:query, q:'id:2.2', facet : { x : { type:terms, field:book_s, domain:{blockParent:'type_s:book'}}} }\" +\n                \",missing_blockParent:{ type:query, domain:{blockParent:'type_s:does_not_exist'} }\" +\n                \",missing_blockChildren:{ type:query, domain:{blockChildren:'type_s:does_not_exist'} }\" +\n                \"}\"\n        )\n        , \"facets=={ count:10\" +\n            \", pages:{count:6 , x:{buckets:[ {val:y,count:4},{val:x,count:3},{val:z,count:3} ]}  }\" +\n            \", pages2:{ buckets:[ {val:y,count:4},{val:x,count:3},{val:z,count:3} ] }\" +\n            \", books:{count:4 , x:{buckets:[ {val:q,count:3},{val:e,count:2},{val:w,count:2} ]}  }\" +\n            \", books2:{ buckets:[ {val:q,count:3},{val:e,count:2},{val:w,count:2} ] }\" +\n            \", pageof3:{count:1 , x:{buckets:[ {val:d,count:1},{val:e,count:1},{val:f,count:1} ]}  }\" +\n            \", bookof22:{count:1 , x:{buckets:[ {val:B,count:1} ]}  }\" +\n            \", missing_blockParent:{count:0}\" +\n            \", missing_blockChildren:{count:0}\" +\n            \"}\"\n    );\n\n    // no matches in base query\n    client.testJQ(params(\"q\", \"no_match_s:NO_MATCHES\"\n            , \"json.facet\", \"{ processEmpty:true,\" +\n                \"pages:{ type:query, domain:{blockChildren:'type_s:book'} }\" +\n                \",books:{ type:query, domain:{blockParent:'type_s:book'} }\" +\n                \"}\"\n        )\n        , \"facets=={ count:0\" +\n            \", pages:{count:0}\" +\n            \", books:{count:0}\" +\n            \"}\"\n    );\n\n\n    // test facet on children nested under terms facet on parents\n    client.testJQ(params(\"q\", \"*:*\"\n            , \"json.facet\", \"{\" +\n                \"books:{ type:terms, field:book_s, facet:{ pages:{type:terms, field:v_t, domain:{blockChildren:'type_s:book'}} } }\" +\n                \"}\"\n        )\n        , \"facets=={ count:10\" +\n            \", books:{buckets:[{val:A,count:1,pages:{buckets:[]}}\" +\n            \"                 ,{val:B,count:1,pages:{buckets:[{val:y,count:3},{val:x,count:2},{val:z,count:2}]}}\" +\n            \"                 ,{val:C,count:1,pages:{buckets:[{val:x,count:1},{val:y,count:1},{val:z,count:1}]}}\" +\n            \"                 ,{val:D,count:1,pages:{buckets:[]}}\"+\n            \"] }\" +\n            \"}\"\n    );\n\n    // test filter after block join\n    client.testJQ(params(p, \"q\", \"*:*\"\n        , \"json.facet\", \"{ \" +\n            \"pages1:{type:terms, field:v_t, domain:{blockChildren:'type_s:book', filter:'*:*'} }\" +\n            \",pages2:{type:terms, field:v_t, domain:{blockChildren:'type_s:book', filter:'-id:3.1'} }\" +\n            \",books:{type:terms, field:v_t, domain:{blockParent:'type_s:book', filter:'*:*'} }\" +\n            \",books2:{type:terms, field:v_t, domain:{blockParent:'type_s:book', filter:'id:1'} }\" +\n            \"}\"\n        )\n        , \"facets=={ count:10\" +\n            \", pages1:{ buckets:[ {val:y,count:4},{val:x,count:3},{val:z,count:3} ] }\" +\n            \", pages2:{ buckets:[ {val:y,count:4},{val:z,count:3},{val:x,count:2} ] }\" +\n            \", books:{ buckets:[ {val:q,count:3},{val:e,count:2},{val:w,count:2} ] }\" +\n            \", books2:{ buckets:[ {val:q,count:1} ] }\" +\n            \"}\"\n    );\n\n\n    // test other various ways to get filters\n    client.testJQ(params(p, \"q\", \"*:*\", \"f1\",\"-id:3.1\", \"f2\",\"id:1\"\n        , \"json.facet\", \"{ \" +\n            \"pages1:{type:terms, field:v_t, domain:{blockChildren:'type_s:book', filter:[]} }\" +\n            \",pages2:{type:terms, field:v_t, domain:{blockChildren:'type_s:book', filter:{param:f1} } }\" +\n            \",books:{type:terms, field:v_t, domain:{blockParent:'type_s:book', filter:[{param:q},{param:missing_param}]} }\" +\n            \",books2:{type:terms, field:v_t, domain:{blockParent:'type_s:book', filter:[{param:f2}] } }\" +\n            \"}\"\n        )\n        , \"facets=={ count:10\" +\n            \", pages1:{ buckets:[ {val:y,count:4},{val:x,count:3},{val:z,count:3} ] }\" +\n            \", pages2:{ buckets:[ {val:y,count:4},{val:z,count:3},{val:x,count:2} ] }\" +\n            \", books:{ buckets:[ {val:q,count:3},{val:e,count:2},{val:w,count:2} ] }\" +\n            \", books2:{ buckets:[ {val:q,count:1} ] }\" +\n            \"}\"\n    );\n\n  }\n\n","sourceOld":"  public void doBlockJoin(Client client) throws Exception {\n    ModifiableSolrParams p = params(\"rows\",\"0\");\n\n    client.deleteByQuery(\"*:*\", null);\n\n    SolrInputDocument parent;\n    parent = sdoc(\"id\", \"1\", \"type_s\",\"book\", \"book_s\",\"A\", \"v_t\",\"q\");\n    client.add(parent, null);\n\n    parent = sdoc(\"id\", \"2\", \"type_s\",\"book\", \"book_s\",\"B\", \"v_t\",\"q w\");\n    parent.addChildDocument( sdoc(\"id\",\"2.1\", \"type_s\",\"page\", \"page_s\",\"a\", \"v_t\",\"x y z\")  );\n    parent.addChildDocument( sdoc(\"id\",\"2.2\", \"type_s\",\"page\", \"page_s\",\"b\", \"v_t\",\"x y  \") );\n    parent.addChildDocument( sdoc(\"id\",\"2.3\", \"type_s\",\"page\", \"page_s\",\"c\", \"v_t\",\"  y z\" )  );\n    client.add(parent, null);\n\n    parent = sdoc(\"id\", \"3\", \"type_s\",\"book\", \"book_s\",\"C\", \"v_t\",\"q w e\");\n    parent.addChildDocument( sdoc(\"id\",\"3.1\", \"type_s\",\"page\", \"page_s\",\"d\", \"v_t\",\"x    \")  );\n    parent.addChildDocument( sdoc(\"id\",\"3.2\", \"type_s\",\"page\", \"page_s\",\"e\", \"v_t\",\"  y  \")  );\n    parent.addChildDocument( sdoc(\"id\",\"3.3\", \"type_s\",\"page\", \"page_s\",\"f\", \"v_t\",\"    z\")  );\n    client.add(parent, null);\n\n    parent = sdoc(\"id\", \"4\", \"type_s\",\"book\", \"book_s\",\"D\", \"v_t\",\"e\");\n    client.add(parent, null);\n\n    client.commit();\n\n    client.testJQ(params(p, \"q\", \"*:*\"\n            , \"json.facet\", \"{ \" +\n                \"pages:{ type:query, domain:{blockChildren:'type_s:book'} , facet:{ x:{field:v_t} } }\" +\n                \",pages2:{type:terms, field:v_t, domain:{blockChildren:'type_s:book'} }\" +\n                \",books:{ type:query, domain:{blockParent:'type_s:book'}  , facet:{ x:{field:v_t} } }\" +\n                \",books2:{type:terms, field:v_t, domain:{blockParent:'type_s:book'} }\" +\n                \",pageof3:{ type:query, q:'id:3', facet : { x : { type:terms, field:page_s, domain:{blockChildren:'type_s:book'}}} }\" +\n                \",bookof22:{ type:query, q:'id:2.2', facet : { x : { type:terms, field:book_s, domain:{blockParent:'type_s:book'}}} }\" +\n                \",missing_blockParent:{ type:query, domain:{blockParent:'type_s:does_not_exist'} }\" +\n                \",missing_blockChildren:{ type:query, domain:{blockChildren:'type_s:does_not_exist'} }\" +\n                \"}\"\n        )\n        , \"facets=={ count:10\" +\n            \", pages:{count:6 , x:{buckets:[ {val:y,count:4},{val:x,count:3},{val:z,count:3} ]}  }\" +\n            \", pages2:{ buckets:[ {val:y,count:4},{val:x,count:3},{val:z,count:3} ] }\" +\n            \", books:{count:4 , x:{buckets:[ {val:q,count:3},{val:e,count:2},{val:w,count:2} ]}  }\" +\n            \", books2:{ buckets:[ {val:q,count:3},{val:e,count:2},{val:w,count:2} ] }\" +\n            \", pageof3:{count:1 , x:{buckets:[ {val:d,count:1},{val:e,count:1},{val:f,count:1} ]}  }\" +\n            \", bookof22:{count:1 , x:{buckets:[ {val:B,count:1} ]}  }\" +\n            \", missing_blockParent:{count:0}\" +\n            \", missing_blockChildren:{count:0}\" +\n            \"}\"\n    );\n\n    // no matches in base query\n    client.testJQ(params(\"q\", \"no_match_s:NO_MATCHES\"\n            , \"json.facet\", \"{ processEmpty:true,\" +\n                \"pages:{ type:query, domain:{blockChildren:'type_s:book'} }\" +\n                \",books:{ type:query, domain:{blockParent:'type_s:book'} }\" +\n                \"}\"\n        )\n        , \"facets=={ count:0\" +\n            \", pages:{count:0}\" +\n            \", books:{count:0}\" +\n            \"}\"\n    );\n\n\n    // test facet on children nested under terms facet on parents\n    client.testJQ(params(\"q\", \"*:*\"\n            , \"json.facet\", \"{\" +\n                \"books:{ type:terms, field:book_s, facet:{ pages:{type:terms, field:v_t, domain:{blockChildren:'type_s:book'}} } }\" +\n                \"}\"\n        )\n        , \"facets=={ count:10\" +\n            \", books:{buckets:[{val:A,count:1,pages:{buckets:[]}}\" +\n            \"                 ,{val:B,count:1,pages:{buckets:[{val:y,count:3},{val:x,count:2},{val:z,count:2}]}}\" +\n            \"                 ,{val:C,count:1,pages:{buckets:[{val:x,count:1},{val:y,count:1},{val:z,count:1}]}}\" +\n            \"                 ,{val:D,count:1,pages:{buckets:[]}}\"+\n            \"] }\" +\n            \"}\"\n    );\n\n    // test filter after block join\n    client.testJQ(params(p, \"q\", \"*:*\"\n        , \"json.facet\", \"{ \" +\n            \"pages1:{type:terms, field:v_t, domain:{blockChildren:'type_s:book', filter:'*:*'} }\" +\n            \",pages2:{type:terms, field:v_t, domain:{blockChildren:'type_s:book', filter:'-id:3.1'} }\" +\n            \",books:{type:terms, field:v_t, domain:{blockParent:'type_s:book', filter:'*:*'} }\" +\n            \",books2:{type:terms, field:v_t, domain:{blockParent:'type_s:book', filter:'id:1'} }\" +\n            \"}\"\n        )\n        , \"facets=={ count:10\" +\n            \", pages1:{ buckets:[ {val:y,count:4},{val:x,count:3},{val:z,count:3} ] }\" +\n            \", pages2:{ buckets:[ {val:y,count:4},{val:z,count:3},{val:x,count:2} ] }\" +\n            \", books:{ buckets:[ {val:q,count:3},{val:e,count:2},{val:w,count:2} ] }\" +\n            \", books2:{ buckets:[ {val:q,count:1} ] }\" +\n            \"}\"\n    );\n\n  }\n\n","bugFix":null,"bugIntro":["1209e20f8fc2fbb1cd77a6ed68204b2eb6a77b9d"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"199dfa410f1fdbfd3294106b04096cce5ed34b21","date":1478812506,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/search/facet/TestJsonFacets#doBlockJoin(Client).mjava","pathOld":"solr/core/src/test/org/apache/solr/search/facet/TestJsonFacets#doBlockJoin(Client).mjava","sourceNew":"  public void doBlockJoin(Client client) throws Exception {\n    ModifiableSolrParams p = params(\"rows\",\"0\");\n\n    client.deleteByQuery(\"*:*\", null);\n\n    SolrInputDocument parent;\n    parent = sdoc(\"id\", \"1\", \"type_s\",\"book\", \"book_s\",\"A\", \"v_t\",\"q\");\n    client.add(parent, null);\n\n    parent = sdoc(\"id\", \"2\", \"type_s\",\"book\", \"book_s\",\"B\", \"v_t\",\"q w\");\n    parent.addChildDocument( sdoc(\"id\",\"2.1\", \"type_s\",\"page\", \"page_s\",\"a\", \"v_t\",\"x y z\")  );\n    parent.addChildDocument( sdoc(\"id\",\"2.2\", \"type_s\",\"page\", \"page_s\",\"b\", \"v_t\",\"x y  \") );\n    parent.addChildDocument( sdoc(\"id\",\"2.3\", \"type_s\",\"page\", \"page_s\",\"c\", \"v_t\",\"  y z\" )  );\n    client.add(parent, null);\n\n    parent = sdoc(\"id\", \"3\", \"type_s\",\"book\", \"book_s\",\"C\", \"v_t\",\"q w e\");\n    parent.addChildDocument( sdoc(\"id\",\"3.1\", \"type_s\",\"page\", \"page_s\",\"d\", \"v_t\",\"x    \")  );\n    parent.addChildDocument( sdoc(\"id\",\"3.2\", \"type_s\",\"page\", \"page_s\",\"e\", \"v_t\",\"  y  \")  );\n    parent.addChildDocument( sdoc(\"id\",\"3.3\", \"type_s\",\"page\", \"page_s\",\"f\", \"v_t\",\"    z\")  );\n    client.add(parent, null);\n\n    parent = sdoc(\"id\", \"4\", \"type_s\",\"book\", \"book_s\",\"D\", \"v_t\",\"e\");\n    client.add(parent, null);\n\n    client.commit();\n\n    client.testJQ(params(p, \"q\", \"*:*\"\n            , \"json.facet\", \"{ \" +\n                \"pages:{ type:query, domain:{blockChildren:'type_s:book'} , facet:{ x:{field:v_t} } }\" +\n                \",pages2:{type:terms, field:v_t, domain:{blockChildren:'type_s:book'} }\" +\n                \",books:{ type:query, domain:{blockParent:'type_s:book'}  , facet:{ x:{field:v_t} } }\" +\n                \",books2:{type:terms, field:v_t, domain:{blockParent:'type_s:book'} }\" +\n                \",pageof3:{ type:query, q:'id:3', facet : { x : { type:terms, field:page_s, domain:{blockChildren:'type_s:book'}}} }\" +\n                \",bookof22:{ type:query, q:'id:2.2', facet : { x : { type:terms, field:book_s, domain:{blockParent:'type_s:book'}}} }\" +\n                \",missing_blockParent:{ type:query, domain:{blockParent:'type_s:does_not_exist'} }\" +\n                \",missing_blockChildren:{ type:query, domain:{blockChildren:'type_s:does_not_exist'} }\" +\n                \"}\"\n        )\n        , \"facets=={ count:10\" +\n            \", pages:{count:6 , x:{buckets:[ {val:y,count:4},{val:x,count:3},{val:z,count:3} ]}  }\" +\n            \", pages2:{ buckets:[ {val:y,count:4},{val:x,count:3},{val:z,count:3} ] }\" +\n            \", books:{count:4 , x:{buckets:[ {val:q,count:3},{val:e,count:2},{val:w,count:2} ]}  }\" +\n            \", books2:{ buckets:[ {val:q,count:3},{val:e,count:2},{val:w,count:2} ] }\" +\n            \", pageof3:{count:1 , x:{buckets:[ {val:d,count:1},{val:e,count:1},{val:f,count:1} ]}  }\" +\n            \", bookof22:{count:1 , x:{buckets:[ {val:B,count:1} ]}  }\" +\n            \", missing_blockParent:{count:0}\" +\n            \", missing_blockChildren:{count:0}\" +\n            \"}\"\n    );\n\n    // no matches in base query\n    client.testJQ(params(\"q\", \"no_match_s:NO_MATCHES\"\n            , \"json.facet\", \"{ processEmpty:true,\" +\n                \"pages:{ type:query, domain:{blockChildren:'type_s:book'} }\" +\n                \",books:{ type:query, domain:{blockParent:'type_s:book'} }\" +\n                \"}\"\n        )\n        , \"facets=={ count:0\" +\n            \", pages:{count:0}\" +\n            \", books:{count:0}\" +\n            \"}\"\n    );\n\n\n    // test facet on children nested under terms facet on parents\n    client.testJQ(params(\"q\", \"*:*\"\n            , \"json.facet\", \"{\" +\n                \"books:{ type:terms, field:book_s, facet:{ pages:{type:terms, field:v_t, domain:{blockChildren:'type_s:book'}} } }\" +\n                \"}\"\n        )\n        , \"facets=={ count:10\" +\n            \", books:{buckets:[{val:A,count:1,pages:{buckets:[]}}\" +\n            \"                 ,{val:B,count:1,pages:{buckets:[{val:y,count:3},{val:x,count:2},{val:z,count:2}]}}\" +\n            \"                 ,{val:C,count:1,pages:{buckets:[{val:x,count:1},{val:y,count:1},{val:z,count:1}]}}\" +\n            \"                 ,{val:D,count:1,pages:{buckets:[]}}\"+\n            \"] }\" +\n            \"}\"\n    );\n\n    // test filter after block join\n    client.testJQ(params(p, \"q\", \"*:*\"\n        , \"json.facet\", \"{ \" +\n            \"pages1:{type:terms, field:v_t, domain:{blockChildren:'type_s:book', filter:'*:*'} }\" +\n            \",pages2:{type:terms, field:v_t, domain:{blockChildren:'type_s:book', filter:'-id:3.1'} }\" +\n            \",books:{type:terms, field:v_t, domain:{blockParent:'type_s:book', filter:'*:*'} }\" +\n            \",books2:{type:terms, field:v_t, domain:{blockParent:'type_s:book', filter:'id:1'} }\" +\n            \"}\"\n        )\n        , \"facets=={ count:10\" +\n            \", pages1:{ buckets:[ {val:y,count:4},{val:x,count:3},{val:z,count:3} ] }\" +\n            \", pages2:{ buckets:[ {val:y,count:4},{val:z,count:3},{val:x,count:2} ] }\" +\n            \", books:{ buckets:[ {val:q,count:3},{val:e,count:2},{val:w,count:2} ] }\" +\n            \", books2:{ buckets:[ {val:q,count:1} ] }\" +\n            \"}\"\n    );\n\n\n    // test other various ways to get filters\n    client.testJQ(params(p, \"q\", \"*:*\", \"f1\",\"-id:3.1\", \"f2\",\"id:1\"\n        , \"json.facet\", \"{ \" +\n            \"pages1:{type:terms, field:v_t, domain:{blockChildren:'type_s:book', filter:[]} }\" +\n            \",pages2:{type:terms, field:v_t, domain:{blockChildren:'type_s:book', filter:{param:f1} } }\" +\n            \",books:{type:terms, field:v_t, domain:{blockParent:'type_s:book', filter:[{param:q},{param:missing_param}]} }\" +\n            \",books2:{type:terms, field:v_t, domain:{blockParent:'type_s:book', filter:[{param:f2}] } }\" +\n            \"}\"\n        )\n        , \"facets=={ count:10\" +\n            \", pages1:{ buckets:[ {val:y,count:4},{val:x,count:3},{val:z,count:3} ] }\" +\n            \", pages2:{ buckets:[ {val:y,count:4},{val:z,count:3},{val:x,count:2} ] }\" +\n            \", books:{ buckets:[ {val:q,count:3},{val:e,count:2},{val:w,count:2} ] }\" +\n            \", books2:{ buckets:[ {val:q,count:1} ] }\" +\n            \"}\"\n    );\n\n  }\n\n","sourceOld":"  public void doBlockJoin(Client client) throws Exception {\n    ModifiableSolrParams p = params(\"rows\",\"0\");\n\n    client.deleteByQuery(\"*:*\", null);\n\n    SolrInputDocument parent;\n    parent = sdoc(\"id\", \"1\", \"type_s\",\"book\", \"book_s\",\"A\", \"v_t\",\"q\");\n    client.add(parent, null);\n\n    parent = sdoc(\"id\", \"2\", \"type_s\",\"book\", \"book_s\",\"B\", \"v_t\",\"q w\");\n    parent.addChildDocument( sdoc(\"id\",\"2.1\", \"type_s\",\"page\", \"page_s\",\"a\", \"v_t\",\"x y z\")  );\n    parent.addChildDocument( sdoc(\"id\",\"2.2\", \"type_s\",\"page\", \"page_s\",\"b\", \"v_t\",\"x y  \") );\n    parent.addChildDocument( sdoc(\"id\",\"2.3\", \"type_s\",\"page\", \"page_s\",\"c\", \"v_t\",\"  y z\" )  );\n    client.add(parent, null);\n\n    parent = sdoc(\"id\", \"3\", \"type_s\",\"book\", \"book_s\",\"C\", \"v_t\",\"q w e\");\n    parent.addChildDocument( sdoc(\"id\",\"3.1\", \"type_s\",\"page\", \"page_s\",\"d\", \"v_t\",\"x    \")  );\n    parent.addChildDocument( sdoc(\"id\",\"3.2\", \"type_s\",\"page\", \"page_s\",\"e\", \"v_t\",\"  y  \")  );\n    parent.addChildDocument( sdoc(\"id\",\"3.3\", \"type_s\",\"page\", \"page_s\",\"f\", \"v_t\",\"    z\")  );\n    client.add(parent, null);\n\n    parent = sdoc(\"id\", \"4\", \"type_s\",\"book\", \"book_s\",\"D\", \"v_t\",\"e\");\n    client.add(parent, null);\n\n    client.commit();\n\n    client.testJQ(params(p, \"q\", \"*:*\"\n            , \"json.facet\", \"{ \" +\n                \"pages:{ type:query, domain:{blockChildren:'type_s:book'} , facet:{ x:{field:v_t} } }\" +\n                \",pages2:{type:terms, field:v_t, domain:{blockChildren:'type_s:book'} }\" +\n                \",books:{ type:query, domain:{blockParent:'type_s:book'}  , facet:{ x:{field:v_t} } }\" +\n                \",books2:{type:terms, field:v_t, domain:{blockParent:'type_s:book'} }\" +\n                \",pageof3:{ type:query, q:'id:3', facet : { x : { type:terms, field:page_s, domain:{blockChildren:'type_s:book'}}} }\" +\n                \",bookof22:{ type:query, q:'id:2.2', facet : { x : { type:terms, field:book_s, domain:{blockParent:'type_s:book'}}} }\" +\n                \",missing_blockParent:{ type:query, domain:{blockParent:'type_s:does_not_exist'} }\" +\n                \",missing_blockChildren:{ type:query, domain:{blockChildren:'type_s:does_not_exist'} }\" +\n                \"}\"\n        )\n        , \"facets=={ count:10\" +\n            \", pages:{count:6 , x:{buckets:[ {val:y,count:4},{val:x,count:3},{val:z,count:3} ]}  }\" +\n            \", pages2:{ buckets:[ {val:y,count:4},{val:x,count:3},{val:z,count:3} ] }\" +\n            \", books:{count:4 , x:{buckets:[ {val:q,count:3},{val:e,count:2},{val:w,count:2} ]}  }\" +\n            \", books2:{ buckets:[ {val:q,count:3},{val:e,count:2},{val:w,count:2} ] }\" +\n            \", pageof3:{count:1 , x:{buckets:[ {val:d,count:1},{val:e,count:1},{val:f,count:1} ]}  }\" +\n            \", bookof22:{count:1 , x:{buckets:[ {val:B,count:1} ]}  }\" +\n            \", missing_blockParent:{count:0}\" +\n            \", missing_blockChildren:{count:0}\" +\n            \"}\"\n    );\n\n    // no matches in base query\n    client.testJQ(params(\"q\", \"no_match_s:NO_MATCHES\"\n            , \"json.facet\", \"{ processEmpty:true,\" +\n                \"pages:{ type:query, domain:{blockChildren:'type_s:book'} }\" +\n                \",books:{ type:query, domain:{blockParent:'type_s:book'} }\" +\n                \"}\"\n        )\n        , \"facets=={ count:0\" +\n            \", pages:{count:0}\" +\n            \", books:{count:0}\" +\n            \"}\"\n    );\n\n\n    // test facet on children nested under terms facet on parents\n    client.testJQ(params(\"q\", \"*:*\"\n            , \"json.facet\", \"{\" +\n                \"books:{ type:terms, field:book_s, facet:{ pages:{type:terms, field:v_t, domain:{blockChildren:'type_s:book'}} } }\" +\n                \"}\"\n        )\n        , \"facets=={ count:10\" +\n            \", books:{buckets:[{val:A,count:1,pages:{buckets:[]}}\" +\n            \"                 ,{val:B,count:1,pages:{buckets:[{val:y,count:3},{val:x,count:2},{val:z,count:2}]}}\" +\n            \"                 ,{val:C,count:1,pages:{buckets:[{val:x,count:1},{val:y,count:1},{val:z,count:1}]}}\" +\n            \"                 ,{val:D,count:1,pages:{buckets:[]}}\"+\n            \"] }\" +\n            \"}\"\n    );\n\n    // test filter after block join\n    client.testJQ(params(p, \"q\", \"*:*\"\n        , \"json.facet\", \"{ \" +\n            \"pages1:{type:terms, field:v_t, domain:{blockChildren:'type_s:book', filter:'*:*'} }\" +\n            \",pages2:{type:terms, field:v_t, domain:{blockChildren:'type_s:book', filter:'-id:3.1'} }\" +\n            \",books:{type:terms, field:v_t, domain:{blockParent:'type_s:book', filter:'*:*'} }\" +\n            \",books2:{type:terms, field:v_t, domain:{blockParent:'type_s:book', filter:'id:1'} }\" +\n            \"}\"\n        )\n        , \"facets=={ count:10\" +\n            \", pages1:{ buckets:[ {val:y,count:4},{val:x,count:3},{val:z,count:3} ] }\" +\n            \", pages2:{ buckets:[ {val:y,count:4},{val:z,count:3},{val:x,count:2} ] }\" +\n            \", books:{ buckets:[ {val:q,count:3},{val:e,count:2},{val:w,count:2} ] }\" +\n            \", books2:{ buckets:[ {val:q,count:1} ] }\" +\n            \"}\"\n    );\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1209e20f8fc2fbb1cd77a6ed68204b2eb6a77b9d","date":1540886194,"type":3,"author":"Mikhail Khludnev","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/search/facet/TestJsonFacets#doBlockJoin(Client).mjava","pathOld":"solr/core/src/test/org/apache/solr/search/facet/TestJsonFacets#doBlockJoin(Client).mjava","sourceNew":"  public void doBlockJoin(Client client) throws Exception {\n    ModifiableSolrParams p = params(\"rows\",\"0\");\n\n    client.deleteByQuery(\"*:*\", null);\n\n    SolrInputDocument parent;\n    parent = sdoc(\"id\", \"1\", \"type_s\",\"book\", \"book_s\",\"A\", \"v_t\",\"q\");\n    client.add(parent, null);\n\n    parent = sdoc(\"id\", \"2\", \"type_s\",\"book\", \"book_s\",\"B\", \"v_t\",\"q w\");\n    parent.addChildDocument( sdoc(\"id\",\"2.1\", \"type_s\",\"page\", \"page_s\",\"a\", \"v_t\",\"x y z\")  );\n    parent.addChildDocument( sdoc(\"id\",\"2.2\", \"type_s\",\"page\", \"page_s\",\"b\", \"v_t\",\"x y  \") );\n    parent.addChildDocument( sdoc(\"id\",\"2.3\", \"type_s\",\"page\", \"page_s\",\"c\", \"v_t\",\"  y z\" )  );\n    client.add(parent, null);\n\n    parent = sdoc(\"id\", \"3\", \"type_s\",\"book\", \"book_s\",\"C\", \"v_t\",\"q w e\");\n    parent.addChildDocument( sdoc(\"id\",\"3.1\", \"type_s\",\"page\", \"page_s\",\"d\", \"v_t\",\"x    \")  );\n    parent.addChildDocument( sdoc(\"id\",\"3.2\", \"type_s\",\"page\", \"page_s\",\"e\", \"v_t\",\"  y  \")  );\n    parent.addChildDocument( sdoc(\"id\",\"3.3\", \"type_s\",\"page\", \"page_s\",\"f\", \"v_t\",\"    z\")  );\n    client.add(parent, null);\n\n    parent = sdoc(\"id\", \"4\", \"type_s\",\"book\", \"book_s\",\"D\", \"v_t\",\"e\");\n    client.add(parent, null);\n\n    client.commit();\n\n    client.testJQ(params(p, \"q\", \"*:*\"\n            , \"json.facet\", \"{ \" +\n                \"pages:{ type:query, domain:{blockChildren:'type_s:book'} , facet:{ x:{field:v_t} } }\" +\n                \",pages2:{type:terms, field:v_t, domain:{blockChildren:'type_s:book'} }\" +\n                \",books:{ type:query, domain:{blockParent:'type_s:book'}  , facet:{ x:{field:v_t} } }\" +\n                \",books2:{type:terms, field:v_t, domain:{blockParent:'type_s:book'} }\" +\n                \",pageof3:{ type:query, q:'id:3', facet : { x : { type:terms, field:page_s, domain:{blockChildren:'type_s:book'}}} }\" +\n                \",bookof22:{ type:query, q:'id:2.2', facet : { x : { type:terms, field:book_s, domain:{blockParent:'type_s:book'}}} }\" +\n                \",missing_blockParent:{ type:query, domain:{blockParent:'type_s:does_not_exist'} }\" +\n                \",missing_blockChildren:{ type:query, domain:{blockChildren:'type_s:does_not_exist'} }\" +\n                \"}\"\n        )\n        , \"facets=={ count:10\" +\n            \", pages:{count:6 , x:{buckets:[ {val:y,count:4},{val:x,count:3},{val:z,count:3} ]}  }\" +\n            \", pages2:{ buckets:[ {val:y,count:4},{val:x,count:3},{val:z,count:3} ] }\" +\n            \", books:{count:4 , x:{buckets:[ {val:q,count:3},{val:e,count:2},{val:w,count:2} ]}  }\" +\n            \", books2:{ buckets:[ {val:q,count:3},{val:e,count:2},{val:w,count:2} ] }\" +\n            \", pageof3:{count:1 , x:{buckets:[ {val:d,count:1},{val:e,count:1},{val:f,count:1} ]}  }\" +\n            \", bookof22:{count:1 , x:{buckets:[ {val:B,count:1} ]}  }\" +\n            \", missing_blockParent:{count:0}\" +\n            \", missing_blockChildren:{count:0}\" +\n            \"}\"\n    );\n\n    // no matches in base query\n    client.testJQ(params(\"q\", \"no_match_s:NO_MATCHES\"\n            , \"json.facet\", \"{ processEmpty:true,\" +\n                \"pages:{ type:query, domain:{blockChildren:'type_s:book'} }\" +\n                \",books:{ type:query, domain:{blockParent:'type_s:book'} }\" +\n                \"}\"\n        )\n        , \"facets=={ count:0\" +\n            \", pages:{count:0}\" +\n            \", books:{count:0}\" +\n            \"}\"\n    );\n\n\n    // test facet on children nested under terms facet on parents\n    client.testJQ(params(\"q\", \"*:*\"\n            , \"json.facet\", \"{\" +\n                \"books:{ type:terms, field:book_s, facet:{ pages:{type:terms, field:v_t, domain:{blockChildren:'type_s:book'}} } }\" +\n                \"}\"\n        )\n        , \"facets=={ count:10\" +\n            \", books:{buckets:[{val:A,count:1,pages:{buckets:[]}}\" +\n            \"                 ,{val:B,count:1,pages:{buckets:[{val:y,count:3},{val:x,count:2},{val:z,count:2}]}}\" +\n            \"                 ,{val:C,count:1,pages:{buckets:[{val:x,count:1},{val:y,count:1},{val:z,count:1}]}}\" +\n            \"                 ,{val:D,count:1,pages:{buckets:[]}}\"+\n            \"] }\" +\n            \"}\"\n    );\n\n    // test filter after block join\n    client.testJQ(params(p, \"q\", \"*:*\"\n        , \"json.facet\", \"{ \" +\n            \"pages1:{type:terms, field:v_t, domain:{blockChildren:'type_s:book', filter:'*:*'} }\" +\n            \",pages2:{type:terms, field:v_t, domain:{blockChildren:'type_s:book', filter:'-id:3.1'} }\" +\n            \",books:{type:terms, field:v_t, domain:{blockParent:'type_s:book', filter:'*:*'} }\" +\n            \",books2:{type:terms, field:v_t, domain:{blockParent:'type_s:book', filter:'id:1'} }\" +\n            \"}\"\n        )\n        , \"facets=={ count:10\" +\n            \", pages1:{ buckets:[ {val:y,count:4},{val:x,count:3},{val:z,count:3} ] }\" +\n            \", pages2:{ buckets:[ {val:y,count:4},{val:z,count:3},{val:x,count:2} ] }\" +\n            \", books:{ buckets:[ {val:q,count:3},{val:e,count:2},{val:w,count:2} ] }\" +\n            \", books2:{ buckets:[ {val:q,count:1} ] }\" +\n            \"}\"\n    );\n\n\n    // test other various ways to get filters\n    client.testJQ(params(p, \"q\", \"*:*\", \"f1\",\"-id:3.1\", \"f2\",\"id:1\"\n        , \"json.facet\", \"{ \" +\n            \"pages1:{type:terms, field:v_t, domain:{blockChildren:'type_s:book', filter:[]} }\" +\n            \",pages2:{type:terms, field:v_t, domain:{blockChildren:'type_s:book', filter:{param:f1} } }\" +\n            \",books:{type:terms, field:v_t, domain:{blockParent:'type_s:book', filter:[{param:q},{param:missing_param}]} }\" +\n            \",books2:{type:terms, field:v_t, domain:{blockParent:'type_s:book', filter:[{param:f2}] } }\" +\n            \"}\"\n        )\n        , \"facets=={ count:10\" +\n            \", pages1:{ buckets:[ {val:y,count:4},{val:x,count:3},{val:z,count:3} ] }\" +\n            \", pages2:{ buckets:[ {val:y,count:4},{val:z,count:3},{val:x,count:2} ] }\" +\n            \", books:{ buckets:[ {val:q,count:3},{val:e,count:2},{val:w,count:2} ] }\" +\n            \", books2:{ buckets:[ {val:q,count:1} ] }\" +\n            \"}\"\n    );\n  }\n\n","sourceOld":"  public void doBlockJoin(Client client) throws Exception {\n    ModifiableSolrParams p = params(\"rows\",\"0\");\n\n    client.deleteByQuery(\"*:*\", null);\n\n    SolrInputDocument parent;\n    parent = sdoc(\"id\", \"1\", \"type_s\",\"book\", \"book_s\",\"A\", \"v_t\",\"q\");\n    client.add(parent, null);\n\n    parent = sdoc(\"id\", \"2\", \"type_s\",\"book\", \"book_s\",\"B\", \"v_t\",\"q w\");\n    parent.addChildDocument( sdoc(\"id\",\"2.1\", \"type_s\",\"page\", \"page_s\",\"a\", \"v_t\",\"x y z\")  );\n    parent.addChildDocument( sdoc(\"id\",\"2.2\", \"type_s\",\"page\", \"page_s\",\"b\", \"v_t\",\"x y  \") );\n    parent.addChildDocument( sdoc(\"id\",\"2.3\", \"type_s\",\"page\", \"page_s\",\"c\", \"v_t\",\"  y z\" )  );\n    client.add(parent, null);\n\n    parent = sdoc(\"id\", \"3\", \"type_s\",\"book\", \"book_s\",\"C\", \"v_t\",\"q w e\");\n    parent.addChildDocument( sdoc(\"id\",\"3.1\", \"type_s\",\"page\", \"page_s\",\"d\", \"v_t\",\"x    \")  );\n    parent.addChildDocument( sdoc(\"id\",\"3.2\", \"type_s\",\"page\", \"page_s\",\"e\", \"v_t\",\"  y  \")  );\n    parent.addChildDocument( sdoc(\"id\",\"3.3\", \"type_s\",\"page\", \"page_s\",\"f\", \"v_t\",\"    z\")  );\n    client.add(parent, null);\n\n    parent = sdoc(\"id\", \"4\", \"type_s\",\"book\", \"book_s\",\"D\", \"v_t\",\"e\");\n    client.add(parent, null);\n\n    client.commit();\n\n    client.testJQ(params(p, \"q\", \"*:*\"\n            , \"json.facet\", \"{ \" +\n                \"pages:{ type:query, domain:{blockChildren:'type_s:book'} , facet:{ x:{field:v_t} } }\" +\n                \",pages2:{type:terms, field:v_t, domain:{blockChildren:'type_s:book'} }\" +\n                \",books:{ type:query, domain:{blockParent:'type_s:book'}  , facet:{ x:{field:v_t} } }\" +\n                \",books2:{type:terms, field:v_t, domain:{blockParent:'type_s:book'} }\" +\n                \",pageof3:{ type:query, q:'id:3', facet : { x : { type:terms, field:page_s, domain:{blockChildren:'type_s:book'}}} }\" +\n                \",bookof22:{ type:query, q:'id:2.2', facet : { x : { type:terms, field:book_s, domain:{blockParent:'type_s:book'}}} }\" +\n                \",missing_blockParent:{ type:query, domain:{blockParent:'type_s:does_not_exist'} }\" +\n                \",missing_blockChildren:{ type:query, domain:{blockChildren:'type_s:does_not_exist'} }\" +\n                \"}\"\n        )\n        , \"facets=={ count:10\" +\n            \", pages:{count:6 , x:{buckets:[ {val:y,count:4},{val:x,count:3},{val:z,count:3} ]}  }\" +\n            \", pages2:{ buckets:[ {val:y,count:4},{val:x,count:3},{val:z,count:3} ] }\" +\n            \", books:{count:4 , x:{buckets:[ {val:q,count:3},{val:e,count:2},{val:w,count:2} ]}  }\" +\n            \", books2:{ buckets:[ {val:q,count:3},{val:e,count:2},{val:w,count:2} ] }\" +\n            \", pageof3:{count:1 , x:{buckets:[ {val:d,count:1},{val:e,count:1},{val:f,count:1} ]}  }\" +\n            \", bookof22:{count:1 , x:{buckets:[ {val:B,count:1} ]}  }\" +\n            \", missing_blockParent:{count:0}\" +\n            \", missing_blockChildren:{count:0}\" +\n            \"}\"\n    );\n\n    // no matches in base query\n    client.testJQ(params(\"q\", \"no_match_s:NO_MATCHES\"\n            , \"json.facet\", \"{ processEmpty:true,\" +\n                \"pages:{ type:query, domain:{blockChildren:'type_s:book'} }\" +\n                \",books:{ type:query, domain:{blockParent:'type_s:book'} }\" +\n                \"}\"\n        )\n        , \"facets=={ count:0\" +\n            \", pages:{count:0}\" +\n            \", books:{count:0}\" +\n            \"}\"\n    );\n\n\n    // test facet on children nested under terms facet on parents\n    client.testJQ(params(\"q\", \"*:*\"\n            , \"json.facet\", \"{\" +\n                \"books:{ type:terms, field:book_s, facet:{ pages:{type:terms, field:v_t, domain:{blockChildren:'type_s:book'}} } }\" +\n                \"}\"\n        )\n        , \"facets=={ count:10\" +\n            \", books:{buckets:[{val:A,count:1,pages:{buckets:[]}}\" +\n            \"                 ,{val:B,count:1,pages:{buckets:[{val:y,count:3},{val:x,count:2},{val:z,count:2}]}}\" +\n            \"                 ,{val:C,count:1,pages:{buckets:[{val:x,count:1},{val:y,count:1},{val:z,count:1}]}}\" +\n            \"                 ,{val:D,count:1,pages:{buckets:[]}}\"+\n            \"] }\" +\n            \"}\"\n    );\n\n    // test filter after block join\n    client.testJQ(params(p, \"q\", \"*:*\"\n        , \"json.facet\", \"{ \" +\n            \"pages1:{type:terms, field:v_t, domain:{blockChildren:'type_s:book', filter:'*:*'} }\" +\n            \",pages2:{type:terms, field:v_t, domain:{blockChildren:'type_s:book', filter:'-id:3.1'} }\" +\n            \",books:{type:terms, field:v_t, domain:{blockParent:'type_s:book', filter:'*:*'} }\" +\n            \",books2:{type:terms, field:v_t, domain:{blockParent:'type_s:book', filter:'id:1'} }\" +\n            \"}\"\n        )\n        , \"facets=={ count:10\" +\n            \", pages1:{ buckets:[ {val:y,count:4},{val:x,count:3},{val:z,count:3} ] }\" +\n            \", pages2:{ buckets:[ {val:y,count:4},{val:z,count:3},{val:x,count:2} ] }\" +\n            \", books:{ buckets:[ {val:q,count:3},{val:e,count:2},{val:w,count:2} ] }\" +\n            \", books2:{ buckets:[ {val:q,count:1} ] }\" +\n            \"}\"\n    );\n\n\n    // test other various ways to get filters\n    client.testJQ(params(p, \"q\", \"*:*\", \"f1\",\"-id:3.1\", \"f2\",\"id:1\"\n        , \"json.facet\", \"{ \" +\n            \"pages1:{type:terms, field:v_t, domain:{blockChildren:'type_s:book', filter:[]} }\" +\n            \",pages2:{type:terms, field:v_t, domain:{blockChildren:'type_s:book', filter:{param:f1} } }\" +\n            \",books:{type:terms, field:v_t, domain:{blockParent:'type_s:book', filter:[{param:q},{param:missing_param}]} }\" +\n            \",books2:{type:terms, field:v_t, domain:{blockParent:'type_s:book', filter:[{param:f2}] } }\" +\n            \"}\"\n        )\n        , \"facets=={ count:10\" +\n            \", pages1:{ buckets:[ {val:y,count:4},{val:x,count:3},{val:z,count:3} ] }\" +\n            \", pages2:{ buckets:[ {val:y,count:4},{val:z,count:3},{val:x,count:2} ] }\" +\n            \", books:{ buckets:[ {val:q,count:3},{val:e,count:2},{val:w,count:2} ] }\" +\n            \", books2:{ buckets:[ {val:q,count:1} ] }\" +\n            \"}\"\n    );\n\n  }\n\n","bugFix":["ca2ebd0ea0315b440af8ae976b9c4334f14ccdbc"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"ca2ebd0ea0315b440af8ae976b9c4334f14ccdbc":["d12e7f5233d4a77959b66fda90df286dace8a9a0"],"d8e5b9ef6c6c9fa463899a818011b6ee92300a3c":["0c47c8f7f4e468629da7c05ba0e983c58abbee18"],"9e47fba8dd946896c408eb448f6199f5a9f0da2d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"9720b151fde2073f4e401450f4574e5f31c2d0ff":["320888923ec13b91f53082558f01f4c9960dd226","d12e7f5233d4a77959b66fda90df286dace8a9a0"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"199dfa410f1fdbfd3294106b04096cce5ed34b21":["9720b151fde2073f4e401450f4574e5f31c2d0ff","ca2ebd0ea0315b440af8ae976b9c4334f14ccdbc"],"1209e20f8fc2fbb1cd77a6ed68204b2eb6a77b9d":["ca2ebd0ea0315b440af8ae976b9c4334f14ccdbc"],"d12e7f5233d4a77959b66fda90df286dace8a9a0":["d8e5b9ef6c6c9fa463899a818011b6ee92300a3c"],"320888923ec13b91f53082558f01f4c9960dd226":["0c47c8f7f4e468629da7c05ba0e983c58abbee18","d8e5b9ef6c6c9fa463899a818011b6ee92300a3c"],"0c47c8f7f4e468629da7c05ba0e983c58abbee18":["9e47fba8dd946896c408eb448f6199f5a9f0da2d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["1209e20f8fc2fbb1cd77a6ed68204b2eb6a77b9d"]},"commit2Childs":{"ca2ebd0ea0315b440af8ae976b9c4334f14ccdbc":["199dfa410f1fdbfd3294106b04096cce5ed34b21","1209e20f8fc2fbb1cd77a6ed68204b2eb6a77b9d"],"d8e5b9ef6c6c9fa463899a818011b6ee92300a3c":["d12e7f5233d4a77959b66fda90df286dace8a9a0","320888923ec13b91f53082558f01f4c9960dd226"],"9e47fba8dd946896c408eb448f6199f5a9f0da2d":["0c47c8f7f4e468629da7c05ba0e983c58abbee18"],"9720b151fde2073f4e401450f4574e5f31c2d0ff":["199dfa410f1fdbfd3294106b04096cce5ed34b21"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9e47fba8dd946896c408eb448f6199f5a9f0da2d"],"199dfa410f1fdbfd3294106b04096cce5ed34b21":[],"1209e20f8fc2fbb1cd77a6ed68204b2eb6a77b9d":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"d12e7f5233d4a77959b66fda90df286dace8a9a0":["ca2ebd0ea0315b440af8ae976b9c4334f14ccdbc","9720b151fde2073f4e401450f4574e5f31c2d0ff"],"320888923ec13b91f53082558f01f4c9960dd226":["9720b151fde2073f4e401450f4574e5f31c2d0ff"],"0c47c8f7f4e468629da7c05ba0e983c58abbee18":["d8e5b9ef6c6c9fa463899a818011b6ee92300a3c","320888923ec13b91f53082558f01f4c9960dd226"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["199dfa410f1fdbfd3294106b04096cce5ed34b21","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}