{"path":"solr/core/src/java/org/apache/solr/handler/component/FieldFacetStats#facet(int,BytesRef).mjava","commits":[{"id":"11982a7b6834a8571852448312db4624c32990b5","date":1321300684,"type":1,"author":"Ryan McKinley","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/component/FieldFacetStats#facet(int,BytesRef).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/component/FieldFacetStats#facet(int,Double).mjava","sourceNew":"  public boolean facet(int docID, BytesRef v) {\n    int term = si.getOrd(docID);\n    int arrIdx = term - startTermIndex;\n    if (arrIdx >= 0 && arrIdx < nTerms) {\n      final BytesRef br = si.lookup(term, tempBR);\n      String key = (br == null)?null:facet_sf.getType().indexedToReadable(br.utf8ToString());\n      StatsValues stats = facetStatsValues.get(key);\n      if (stats == null) {\n        stats = StatsValuesFactory.createStatsValues(field_sf);\n        facetStatsValues.put(key, stats);\n      }\n\n      if (v != null && v.length>0) {\n        stats.accumulate(v);\n      } else {\n        stats.missing();\n        return false;\n      }\n      return true;\n    }\n    return false;\n  }\n\n","sourceOld":"  public boolean facet(int docID, Double v) {\n    int term = si.getOrd(docID);\n    int arrIdx = term - startTermIndex;\n    if (arrIdx >= 0 && arrIdx < nTerms) {\n      final BytesRef br = si.lookup(term, tempBR);\n      String key = ft.indexedToReadable(br == null ? null : br.utf8ToString());\n      StatsValues stats = facetStatsValues.get(key);\n      if (stats == null) {\n        stats = new StatsValues();\n        facetStatsValues.put(key, stats);\n      }\n\n      if (v != null) {\n        stats.accumulate(v);\n      } else {\n        stats.missing++;\n        return false;\n      }\n      return true;\n    }\n    return false;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9d7e5f3aa5935964617824d1f9b2599ddb334464","date":1353762831,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/component/FieldFacetStats#facet(int,BytesRef).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/component/FieldFacetStats#facet(int,BytesRef).mjava","sourceNew":"  public boolean facet(int docID, BytesRef v) {\n    int term = si.getOrd(docID);\n    int arrIdx = term - startTermIndex;\n    if (arrIdx >= 0 && arrIdx < nTerms) {\n      \n      final BytesRef br;\n      if (term == -1) {\n        br = null;\n      } else {\n        br = tempBR;\n        si.lookupOrd(term, tempBR);\n      }\n      String key = (br == null)?null:facet_sf.getType().indexedToReadable(br.utf8ToString());\n      StatsValues stats = facetStatsValues.get(key);\n      if (stats == null) {\n        stats = StatsValuesFactory.createStatsValues(field_sf);\n        facetStatsValues.put(key, stats);\n      }\n\n      if (v != null && v.length>0) {\n        stats.accumulate(v);\n      } else {\n        stats.missing();\n        return false;\n      }\n      return true;\n    }\n    return false;\n  }\n\n","sourceOld":"  public boolean facet(int docID, BytesRef v) {\n    int term = si.getOrd(docID);\n    int arrIdx = term - startTermIndex;\n    if (arrIdx >= 0 && arrIdx < nTerms) {\n      final BytesRef br = si.lookup(term, tempBR);\n      String key = (br == null)?null:facet_sf.getType().indexedToReadable(br.utf8ToString());\n      StatsValues stats = facetStatsValues.get(key);\n      if (stats == null) {\n        stats = StatsValuesFactory.createStatsValues(field_sf);\n        facetStatsValues.put(key, stats);\n      }\n\n      if (v != null && v.length>0) {\n        stats.accumulate(v);\n      } else {\n        stats.missing();\n        return false;\n      }\n      return true;\n    }\n    return false;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"d4d69c535930b5cce125cff868d40f6373dc27d4","date":1360270101,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/handler/component/FieldFacetStats#facet(int,BytesRef).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/component/FieldFacetStats#facet(int,BytesRef).mjava","sourceNew":"  public boolean facet(int docID, BytesRef v) {\n    int term = si.getOrd(docID);\n    int arrIdx = term - startTermIndex;\n    if (arrIdx >= 0 && arrIdx < nTerms) {\n      \n      final BytesRef br;\n      if (term == -1) {\n        br = null;\n      } else {\n        br = tempBR;\n        si.lookupOrd(term, tempBR);\n      }\n      String key = (br == null)?null:facet_sf.getType().indexedToReadable(br.utf8ToString());\n      StatsValues stats = facetStatsValues.get(key);\n      if (stats == null) {\n        stats = StatsValuesFactory.createStatsValues(field_sf);\n        facetStatsValues.put(key, stats);\n      }\n\n      if (v != null && v.length>0) {\n        stats.accumulate(v);\n      } else {\n        stats.missing();\n        return false;\n      }\n      return true;\n    }\n    return false;\n  }\n\n","sourceOld":"  public boolean facet(int docID, BytesRef v) {\n    int term = si.getOrd(docID);\n    int arrIdx = term - startTermIndex;\n    if (arrIdx >= 0 && arrIdx < nTerms) {\n      final BytesRef br = si.lookup(term, tempBR);\n      String key = (br == null)?null:facet_sf.getType().indexedToReadable(br.utf8ToString());\n      StatsValues stats = facetStatsValues.get(key);\n      if (stats == null) {\n        stats = StatsValuesFactory.createStatsValues(field_sf);\n        facetStatsValues.put(key, stats);\n      }\n\n      if (v != null && v.length>0) {\n        stats.accumulate(v);\n      } else {\n        stats.missing();\n        return false;\n      }\n      return true;\n    }\n    return false;\n  }\n\n","bugFix":["be20f9fed1d3edcb1c84abcc39df87a90fab22df"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"73bb5a57dc75b54a39494f99986599cae7dff417","date":1361040620,"type":4,"author":"Adrien Grand","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/core/src/java/org/apache/solr/handler/component/FieldFacetStats#facet(int,BytesRef).mjava","sourceNew":null,"sourceOld":"  public boolean facet(int docID, BytesRef v) {\n    int term = si.getOrd(docID);\n    int arrIdx = term - startTermIndex;\n    if (arrIdx >= 0 && arrIdx < nTerms) {\n      \n      final BytesRef br;\n      if (term == -1) {\n        br = null;\n      } else {\n        br = tempBR;\n        si.lookupOrd(term, tempBR);\n      }\n      String key = (br == null)?null:facet_sf.getType().indexedToReadable(br.utf8ToString());\n      StatsValues stats = facetStatsValues.get(key);\n      if (stats == null) {\n        stats = StatsValuesFactory.createStatsValues(field_sf);\n        facetStatsValues.put(key, stats);\n      }\n\n      if (v != null && v.length>0) {\n        stats.accumulate(v);\n      } else {\n        stats.missing();\n        return false;\n      }\n      return true;\n    }\n    return false;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"95303ff3749680c743b9425f9cf99e6e4065e8a8","date":1361061922,"type":4,"author":"Robert Muir","isMerge":true,"pathNew":"/dev/null","pathOld":"solr/core/src/java/org/apache/solr/handler/component/FieldFacetStats#facet(int,BytesRef).mjava","sourceNew":null,"sourceOld":"  public boolean facet(int docID, BytesRef v) {\n    int term = si.getOrd(docID);\n    int arrIdx = term - startTermIndex;\n    if (arrIdx >= 0 && arrIdx < nTerms) {\n      \n      final BytesRef br;\n      if (term == -1) {\n        br = null;\n      } else {\n        br = tempBR;\n        si.lookupOrd(term, tempBR);\n      }\n      String key = (br == null)?null:facet_sf.getType().indexedToReadable(br.utf8ToString());\n      StatsValues stats = facetStatsValues.get(key);\n      if (stats == null) {\n        stats = StatsValuesFactory.createStatsValues(field_sf);\n        facetStatsValues.put(key, stats);\n      }\n\n      if (v != null && v.length>0) {\n        stats.accumulate(v);\n      } else {\n        stats.missing();\n        return false;\n      }\n      return true;\n    }\n    return false;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"d4d69c535930b5cce125cff868d40f6373dc27d4":["11982a7b6834a8571852448312db4624c32990b5","9d7e5f3aa5935964617824d1f9b2599ddb334464"],"95303ff3749680c743b9425f9cf99e6e4065e8a8":["d4d69c535930b5cce125cff868d40f6373dc27d4","73bb5a57dc75b54a39494f99986599cae7dff417"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"9d7e5f3aa5935964617824d1f9b2599ddb334464":["11982a7b6834a8571852448312db4624c32990b5"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["73bb5a57dc75b54a39494f99986599cae7dff417"],"73bb5a57dc75b54a39494f99986599cae7dff417":["d4d69c535930b5cce125cff868d40f6373dc27d4"],"11982a7b6834a8571852448312db4624c32990b5":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"d4d69c535930b5cce125cff868d40f6373dc27d4":["95303ff3749680c743b9425f9cf99e6e4065e8a8","73bb5a57dc75b54a39494f99986599cae7dff417"],"95303ff3749680c743b9425f9cf99e6e4065e8a8":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["11982a7b6834a8571852448312db4624c32990b5"],"9d7e5f3aa5935964617824d1f9b2599ddb334464":["d4d69c535930b5cce125cff868d40f6373dc27d4"],"11982a7b6834a8571852448312db4624c32990b5":["d4d69c535930b5cce125cff868d40f6373dc27d4","9d7e5f3aa5935964617824d1f9b2599ddb334464"],"73bb5a57dc75b54a39494f99986599cae7dff417":["95303ff3749680c743b9425f9cf99e6e4065e8a8","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["95303ff3749680c743b9425f9cf99e6e4065e8a8","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}