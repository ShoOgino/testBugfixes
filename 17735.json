{"path":"src/java/org/apache/lucene/search/FieldSortedHitQueue#FieldSortedHitQueue(IndexReader,String,int).mjava","commits":[{"id":"6decf4a21b049e524a98231b4df27f61c84f7b65","date":1075479753,"type":0,"author":"Otis Gospodnetic","isMerge":false,"pathNew":"src/java/org/apache/lucene/search/FieldSortedHitQueue#FieldSortedHitQueue(IndexReader,String,int).mjava","pathOld":"/dev/null","sourceNew":"    /**\n     * Creates a hit queue sorted by the given field.\n     * @param reader  IndexReader to use.\n     * @param integer_field  Field to sort by.\n     * @param size    Number of hits to return - see {@link PriorityQueue#initialize(int) initialize}\n     * @throws IOException  If the internal term enumerator fails.\n     */\n    public FieldSortedHitQueue (IndexReader reader, String integer_field, int size)\n    throws IOException {\n\n        int hash = reader.hashCode();\n        if (hash != lastReaderHash) {\n            lastReaderHash = hash;\n            if (fieldCache != null) {\n                fieldCache.clear();\n            }\n            fieldCache = new HashMap();\n        }\n\n        initialize (size);\n        initializeSort (reader, integer_field);\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c6691cb6747f9e850337c706c06b92e9ddf816e1","date":1077044431,"type":3,"author":"Doug Cutting","isMerge":false,"pathNew":"src/java/org/apache/lucene/search/FieldSortedHitQueue#FieldSortedHitQueue(IndexReader,String,int).mjava","pathOld":"src/java/org/apache/lucene/search/FieldSortedHitQueue#FieldSortedHitQueue(IndexReader,String,int).mjava","sourceNew":"    /**\n     * Creates a hit queue sorted by the given field.  Hits are sorted by the field, then\n\t * by index order.\n     * @param reader  IndexReader to use.\n     * @param field   Field to sort by.\n     * @param size    Number of hits to return - see {@link PriorityQueue#initialize(int) initialize}\n     * @throws IOException  If the internal term enumerator fails.\n     */\n    FieldSortedHitQueue (IndexReader reader, String field, int size)\n    throws IOException {\n\n\t\t// reset the cache if we have a new reader\n        int hash = reader.hashCode();\n        if (hash != lastReaderHash) {\n            lastReaderHash = hash;\n            fieldCache.clear();\n        }\n\n\t\t// initialize the PriorityQueue\n        initialize (size);\n\n\t\t// set the sort\n        comparators[0] = initializeSort (reader, field);\n    }\n\n","sourceOld":"    /**\n     * Creates a hit queue sorted by the given field.\n     * @param reader  IndexReader to use.\n     * @param integer_field  Field to sort by.\n     * @param size    Number of hits to return - see {@link PriorityQueue#initialize(int) initialize}\n     * @throws IOException  If the internal term enumerator fails.\n     */\n    public FieldSortedHitQueue (IndexReader reader, String integer_field, int size)\n    throws IOException {\n\n        int hash = reader.hashCode();\n        if (hash != lastReaderHash) {\n            lastReaderHash = hash;\n            if (fieldCache != null) {\n                fieldCache.clear();\n            }\n            fieldCache = new HashMap();\n        }\n\n        initialize (size);\n        initializeSort (reader, integer_field);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"99ee715b9c02dd47d9e69a18607a5192c1ebd82b","date":1085007927,"type":4,"author":"Tim Jones","isMerge":false,"pathNew":"/dev/null","pathOld":"src/java/org/apache/lucene/search/FieldSortedHitQueue#FieldSortedHitQueue(IndexReader,String,int).mjava","sourceNew":null,"sourceOld":"    /**\n     * Creates a hit queue sorted by the given field.  Hits are sorted by the field, then\n\t * by index order.\n     * @param reader  IndexReader to use.\n     * @param field   Field to sort by.\n     * @param size    Number of hits to return - see {@link PriorityQueue#initialize(int) initialize}\n     * @throws IOException  If the internal term enumerator fails.\n     */\n    FieldSortedHitQueue (IndexReader reader, String field, int size)\n    throws IOException {\n\n\t\t// reset the cache if we have a new reader\n        int hash = reader.hashCode();\n        if (hash != lastReaderHash) {\n            lastReaderHash = hash;\n            fieldCache.clear();\n        }\n\n\t\t// initialize the PriorityQueue\n        initialize (size);\n\n\t\t// set the sort\n        comparators[0] = initializeSort (reader, field);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"c6691cb6747f9e850337c706c06b92e9ddf816e1":["6decf4a21b049e524a98231b4df27f61c84f7b65"],"99ee715b9c02dd47d9e69a18607a5192c1ebd82b":["c6691cb6747f9e850337c706c06b92e9ddf816e1"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"6decf4a21b049e524a98231b4df27f61c84f7b65":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["99ee715b9c02dd47d9e69a18607a5192c1ebd82b"]},"commit2Childs":{"c6691cb6747f9e850337c706c06b92e9ddf816e1":["99ee715b9c02dd47d9e69a18607a5192c1ebd82b"],"99ee715b9c02dd47d9e69a18607a5192c1ebd82b":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["6decf4a21b049e524a98231b4df27f61c84f7b65"],"6decf4a21b049e524a98231b4df27f61c84f7b65":["c6691cb6747f9e850337c706c06b92e9ddf816e1"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}