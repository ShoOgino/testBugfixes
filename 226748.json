{"path":"contrib/analyzers/common/src/test/org/apache/lucene/analysis/shingle/ShingleFilterTest.TestTokenStream#incrementToken().mjava","commits":[{"id":"0dda87e5ad7246b25d0da56a16ead95360499d86","date":1249273990,"type":0,"author":"Michael Busch","isMerge":false,"pathNew":"contrib/analyzers/common/src/test/org/apache/lucene/analysis/shingle/ShingleFilterTest.TestTokenStream#incrementToken().mjava","pathOld":"/dev/null","sourceNew":"    public final boolean incrementToken() throws IOException {\n      if (index < testToken.length) {\n        Token t = testToken[index++];\n        termAtt.setTermBuffer(t.termBuffer(), 0, t.termLength());\n        offsetAtt.setOffset(t.startOffset(), t.endOffset());\n        posIncrAtt.setPositionIncrement(t.getPositionIncrement());\n        typeAtt.setType(TypeAttributeImpl.DEFAULT_TYPE);\n        return true;\n      } else {\n        return false;\n      }\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["4d3e8520fd031bab31fd0e4d480e55958bc45efe"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"9fa6d7a7e7208b52f1b0c4c87005d34ab0dd37dc","date":1251117853,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"contrib/analyzers/common/src/test/org/apache/lucene/analysis/shingle/ShingleFilterTest.TestTokenStream#incrementToken().mjava","pathOld":"contrib/analyzers/common/src/test/org/apache/lucene/analysis/shingle/ShingleFilterTest.TestTokenStream#incrementToken().mjava","sourceNew":"    public final boolean incrementToken() throws IOException {\n      clearAttributes();\n      if (index < testToken.length) {\n        Token t = testToken[index++];\n        termAtt.setTermBuffer(t.termBuffer(), 0, t.termLength());\n        offsetAtt.setOffset(t.startOffset(), t.endOffset());\n        posIncrAtt.setPositionIncrement(t.getPositionIncrement());\n        typeAtt.setType(TypeAttributeImpl.DEFAULT_TYPE);\n        return true;\n      } else {\n        return false;\n      }\n    }\n\n","sourceOld":"    public final boolean incrementToken() throws IOException {\n      if (index < testToken.length) {\n        Token t = testToken[index++];\n        termAtt.setTermBuffer(t.termBuffer(), 0, t.termLength());\n        offsetAtt.setOffset(t.startOffset(), t.endOffset());\n        posIncrAtt.setPositionIncrement(t.getPositionIncrement());\n        typeAtt.setType(TypeAttributeImpl.DEFAULT_TYPE);\n        return true;\n      } else {\n        return false;\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"d57eb7c98c08c03af6e4cd83509df31c81ac16af","date":1257684312,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"contrib/analyzers/common/src/test/org/apache/lucene/analysis/shingle/ShingleFilterTest.TestTokenStream#incrementToken().mjava","pathOld":"contrib/analyzers/common/src/test/org/apache/lucene/analysis/shingle/ShingleFilterTest.TestTokenStream#incrementToken().mjava","sourceNew":"    @Override\n    public final boolean incrementToken() throws IOException {\n      clearAttributes();\n      if (index < testToken.length) {\n        Token t = testToken[index++];\n        termAtt.setTermBuffer(t.termBuffer(), 0, t.termLength());\n        offsetAtt.setOffset(t.startOffset(), t.endOffset());\n        posIncrAtt.setPositionIncrement(t.getPositionIncrement());\n        typeAtt.setType(TypeAttributeImpl.DEFAULT_TYPE);\n        return true;\n      } else {\n        return false;\n      }\n    }\n\n","sourceOld":"    public final boolean incrementToken() throws IOException {\n      clearAttributes();\n      if (index < testToken.length) {\n        Token t = testToken[index++];\n        termAtt.setTermBuffer(t.termBuffer(), 0, t.termLength());\n        offsetAtt.setOffset(t.startOffset(), t.endOffset());\n        posIncrAtt.setPositionIncrement(t.getPositionIncrement());\n        typeAtt.setType(TypeAttributeImpl.DEFAULT_TYPE);\n        return true;\n      } else {\n        return false;\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/contrib/analyzers/common/src/test/org/apache/lucene/analysis/shingle/ShingleFilterTest.TestTokenStream#incrementToken().mjava","pathOld":"contrib/analyzers/common/src/test/org/apache/lucene/analysis/shingle/ShingleFilterTest.TestTokenStream#incrementToken().mjava","sourceNew":"    @Override\n    public final boolean incrementToken() throws IOException {\n      clearAttributes();\n      if (index < testToken.length) {\n        Token t = testToken[index++];\n        termAtt.setTermBuffer(t.termBuffer(), 0, t.termLength());\n        offsetAtt.setOffset(t.startOffset(), t.endOffset());\n        posIncrAtt.setPositionIncrement(t.getPositionIncrement());\n        typeAtt.setType(TypeAttributeImpl.DEFAULT_TYPE);\n        return true;\n      } else {\n        return false;\n      }\n    }\n\n","sourceOld":"    @Override\n    public final boolean incrementToken() throws IOException {\n      clearAttributes();\n      if (index < testToken.length) {\n        Token t = testToken[index++];\n        termAtt.setTermBuffer(t.termBuffer(), 0, t.termLength());\n        offsetAtt.setOffset(t.startOffset(), t.endOffset());\n        posIncrAtt.setPositionIncrement(t.getPositionIncrement());\n        typeAtt.setType(TypeAttributeImpl.DEFAULT_TYPE);\n        return true;\n      } else {\n        return false;\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"d57eb7c98c08c03af6e4cd83509df31c81ac16af":["9fa6d7a7e7208b52f1b0c4c87005d34ab0dd37dc"],"0dda87e5ad7246b25d0da56a16ead95360499d86":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"9fa6d7a7e7208b52f1b0c4c87005d34ab0dd37dc":["0dda87e5ad7246b25d0da56a16ead95360499d86"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["d57eb7c98c08c03af6e4cd83509df31c81ac16af"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["0dda87e5ad7246b25d0da56a16ead95360499d86"],"d57eb7c98c08c03af6e4cd83509df31c81ac16af":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"0dda87e5ad7246b25d0da56a16ead95360499d86":["9fa6d7a7e7208b52f1b0c4c87005d34ab0dd37dc"],"9fa6d7a7e7208b52f1b0c4c87005d34ab0dd37dc":["d57eb7c98c08c03af6e4cd83509df31c81ac16af"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}