{"path":"solr/core/src/java/org/apache/solr/servlet/SolrRequestParsers#parseQueryString(String,String,Map[String,String[]]).mjava","commits":[{"id":"c7d0565444d6381434fbff66cecf07da249f2bb4","date":1357484111,"type":0,"author":"Uwe Schindler","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/servlet/SolrRequestParsers#parseQueryString(String,String,Map[String,String[]]).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Given a url-encoded query string, map it into the given map\n   * @param queryString as given from URL\n   * @param charset to be used to decode %-encoding\n   * @param map place all parameters in this map\n   */\n  static void parseQueryString(String queryString, String charset, Map<String,String[]> map) {\n    if( queryString != null && queryString.length() > 0 ) {\n      try {\n        for( String kv : queryString.split( \"&\" ) ) {\n          int idx = kv.indexOf( '=' );\n          if( idx >= 0 ) {\n            String name = URLDecoder.decode( kv.substring( 0, idx ), charset);\n            String value = URLDecoder.decode( kv.substring( idx+1 ), charset);\n            MultiMapSolrParams.addParam( name, value, map );\n          } else {\n            String name = URLDecoder.decode( kv, \"UTF-8\" );\n            MultiMapSolrParams.addParam( name, \"\", map );\n          }\n        }\n      }\n      catch( UnsupportedEncodingException uex ) {\n        throw new SolrException( SolrException.ErrorCode.SERVER_ERROR, uex );\n      }\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["b11e385e71ba16f66b16055b72ba44d1b667b51f"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"b11e385e71ba16f66b16055b72ba44d1b667b51f","date":1357584936,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/servlet/SolrRequestParsers#parseQueryString(String,String,Map[String,String[]]).mjava","pathOld":"solr/core/src/java/org/apache/solr/servlet/SolrRequestParsers#parseQueryString(String,String,Map[String,String[]]).mjava","sourceNew":"  /**\n   * Given a url-encoded query string, map it into the given map\n   * @param queryString as given from URL\n   * @param charset to be used to decode %-encoding\n   * @param map place all parameters in this map\n   */\n  static void parseQueryString(String queryString, String charset, Map<String,String[]> map) {\n    if( queryString != null && queryString.length() > 0 ) {\n      try {\n        for( String kv : queryString.split( \"&\" ) ) {\n          int idx = kv.indexOf( '=' );\n          if( idx >= 0 ) {\n            String name = URLDecoder.decode( kv.substring( 0, idx ), charset);\n            String value = URLDecoder.decode( kv.substring( idx+1 ), charset);\n            MultiMapSolrParams.addParam( name, value, map );\n          } else {\n            String name = URLDecoder.decode( kv, charset );\n            MultiMapSolrParams.addParam( name, \"\", map );\n          }\n        }\n      }\n      catch( UnsupportedEncodingException uex ) {\n        throw new SolrException( SolrException.ErrorCode.SERVER_ERROR, uex );\n      }\n    }\n  }\n\n","sourceOld":"  /**\n   * Given a url-encoded query string, map it into the given map\n   * @param queryString as given from URL\n   * @param charset to be used to decode %-encoding\n   * @param map place all parameters in this map\n   */\n  static void parseQueryString(String queryString, String charset, Map<String,String[]> map) {\n    if( queryString != null && queryString.length() > 0 ) {\n      try {\n        for( String kv : queryString.split( \"&\" ) ) {\n          int idx = kv.indexOf( '=' );\n          if( idx >= 0 ) {\n            String name = URLDecoder.decode( kv.substring( 0, idx ), charset);\n            String value = URLDecoder.decode( kv.substring( idx+1 ), charset);\n            MultiMapSolrParams.addParam( name, value, map );\n          } else {\n            String name = URLDecoder.decode( kv, \"UTF-8\" );\n            MultiMapSolrParams.addParam( name, \"\", map );\n          }\n        }\n      }\n      catch( UnsupportedEncodingException uex ) {\n        throw new SolrException( SolrException.ErrorCode.SERVER_ERROR, uex );\n      }\n    }\n  }\n\n","bugFix":["c7d0565444d6381434fbff66cecf07da249f2bb4"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d3fcb70cf561547c7bb1506e0cf32ca7b1287064","date":1357616416,"type":0,"author":"Robert Muir","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/servlet/SolrRequestParsers#parseQueryString(String,String,Map[String,String[]]).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Given a url-encoded query string, map it into the given map\n   * @param queryString as given from URL\n   * @param charset to be used to decode %-encoding\n   * @param map place all parameters in this map\n   */\n  static void parseQueryString(String queryString, String charset, Map<String,String[]> map) {\n    if( queryString != null && queryString.length() > 0 ) {\n      try {\n        for( String kv : queryString.split( \"&\" ) ) {\n          int idx = kv.indexOf( '=' );\n          if( idx >= 0 ) {\n            String name = URLDecoder.decode( kv.substring( 0, idx ), charset);\n            String value = URLDecoder.decode( kv.substring( idx+1 ), charset);\n            MultiMapSolrParams.addParam( name, value, map );\n          } else {\n            String name = URLDecoder.decode( kv, charset );\n            MultiMapSolrParams.addParam( name, \"\", map );\n          }\n        }\n      }\n      catch( UnsupportedEncodingException uex ) {\n        throw new SolrException( SolrException.ErrorCode.SERVER_ERROR, uex );\n      }\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bfea9c90af47b6b37ffaafe52d3307a1f8978e68","date":1357665734,"type":4,"author":"Uwe Schindler","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/core/src/java/org/apache/solr/servlet/SolrRequestParsers#parseQueryString(String,String,Map[String,String[]]).mjava","sourceNew":null,"sourceOld":"  /**\n   * Given a url-encoded query string, map it into the given map\n   * @param queryString as given from URL\n   * @param charset to be used to decode %-encoding\n   * @param map place all parameters in this map\n   */\n  static void parseQueryString(String queryString, String charset, Map<String,String[]> map) {\n    if( queryString != null && queryString.length() > 0 ) {\n      try {\n        for( String kv : queryString.split( \"&\" ) ) {\n          int idx = kv.indexOf( '=' );\n          if( idx >= 0 ) {\n            String name = URLDecoder.decode( kv.substring( 0, idx ), charset);\n            String value = URLDecoder.decode( kv.substring( idx+1 ), charset);\n            MultiMapSolrParams.addParam( name, value, map );\n          } else {\n            String name = URLDecoder.decode( kv, charset );\n            MultiMapSolrParams.addParam( name, \"\", map );\n          }\n        }\n      }\n      catch( UnsupportedEncodingException uex ) {\n        throw new SolrException( SolrException.ErrorCode.SERVER_ERROR, uex );\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4e6354dd7c71fe122926fc53d7d29f715b1283db","date":1357915185,"type":4,"author":"Robert Muir","isMerge":true,"pathNew":"/dev/null","pathOld":"solr/core/src/java/org/apache/solr/servlet/SolrRequestParsers#parseQueryString(String,String,Map[String,String[]]).mjava","sourceNew":null,"sourceOld":"  /**\n   * Given a url-encoded query string, map it into the given map\n   * @param queryString as given from URL\n   * @param charset to be used to decode %-encoding\n   * @param map place all parameters in this map\n   */\n  static void parseQueryString(String queryString, String charset, Map<String,String[]> map) {\n    if( queryString != null && queryString.length() > 0 ) {\n      try {\n        for( String kv : queryString.split( \"&\" ) ) {\n          int idx = kv.indexOf( '=' );\n          if( idx >= 0 ) {\n            String name = URLDecoder.decode( kv.substring( 0, idx ), charset);\n            String value = URLDecoder.decode( kv.substring( idx+1 ), charset);\n            MultiMapSolrParams.addParam( name, value, map );\n          } else {\n            String name = URLDecoder.decode( kv, charset );\n            MultiMapSolrParams.addParam( name, \"\", map );\n          }\n        }\n      }\n      catch( UnsupportedEncodingException uex ) {\n        throw new SolrException( SolrException.ErrorCode.SERVER_ERROR, uex );\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"d3fcb70cf561547c7bb1506e0cf32ca7b1287064":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","b11e385e71ba16f66b16055b72ba44d1b667b51f"],"c7d0565444d6381434fbff66cecf07da249f2bb4":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"bfea9c90af47b6b37ffaafe52d3307a1f8978e68":["b11e385e71ba16f66b16055b72ba44d1b667b51f"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"b11e385e71ba16f66b16055b72ba44d1b667b51f":["c7d0565444d6381434fbff66cecf07da249f2bb4"],"4e6354dd7c71fe122926fc53d7d29f715b1283db":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","bfea9c90af47b6b37ffaafe52d3307a1f8978e68"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["bfea9c90af47b6b37ffaafe52d3307a1f8978e68"]},"commit2Childs":{"d3fcb70cf561547c7bb1506e0cf32ca7b1287064":["4e6354dd7c71fe122926fc53d7d29f715b1283db"],"c7d0565444d6381434fbff66cecf07da249f2bb4":["b11e385e71ba16f66b16055b72ba44d1b667b51f"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","c7d0565444d6381434fbff66cecf07da249f2bb4"],"bfea9c90af47b6b37ffaafe52d3307a1f8978e68":["4e6354dd7c71fe122926fc53d7d29f715b1283db","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"b11e385e71ba16f66b16055b72ba44d1b667b51f":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","bfea9c90af47b6b37ffaafe52d3307a1f8978e68"],"4e6354dd7c71fe122926fc53d7d29f715b1283db":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["4e6354dd7c71fe122926fc53d7d29f715b1283db","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}