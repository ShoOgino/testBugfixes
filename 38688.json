{"path":"solr/solrj/src/test/org/apache/solr/client/solrj/impl/CloudHttp2SolrClientTest#testWrongZkChrootTest().mjava","commits":[{"id":"0544142c22eb88b6d8b3817f2e1190156aa4f9af","date":1551692505,"type":0,"author":"Cao Manh Dat","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/impl/CloudHttp2SolrClientTest#testWrongZkChrootTest().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testWrongZkChrootTest() throws IOException {\n\n    exception.expect(SolrException.class);\n    exception.expectMessage(\"cluster not found/not ready\");\n\n    try (CloudSolrClient client = getCloudSolrClient(cluster.getZkServer().getZkAddress() + \"/xyz/foo\")) {\n      client.setZkClientTimeout(1000 * 60);\n      client.connect();\n      fail(\"Expected exception\");\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c1c83d9065111bd0c52230300b020dcd37184fb0","date":1591758044,"type":3,"author":"Mike Drob","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/impl/CloudHttp2SolrClientTest#testWrongZkChrootTest().mjava","pathOld":"solr/solrj/src/test/org/apache/solr/client/solrj/impl/CloudHttp2SolrClientTest#testWrongZkChrootTest().mjava","sourceNew":"  @Test\n  @AwaitsFix(bugUrl = \"https://issues.apache.org/jira/browse/SOLR-12823\")\n  public void testWrongZkChrootTest() throws IOException {\n\n    exception.expect(SolrException.class);\n    exception.expectMessage(\"cluster not found/not ready\");\n\n    try (CloudSolrClient client = getCloudSolrClient(cluster.getZkServer().getZkAddress() + \"/xyz/foo\")) {\n      client.setZkClientTimeout(1000 * 60);\n      client.connect();\n      fail(\"Expected exception\");\n    }\n  }\n\n","sourceOld":"  @Test\n  public void testWrongZkChrootTest() throws IOException {\n\n    exception.expect(SolrException.class);\n    exception.expectMessage(\"cluster not found/not ready\");\n\n    try (CloudSolrClient client = getCloudSolrClient(cluster.getZkServer().getZkAddress() + \"/xyz/foo\")) {\n      client.setZkClientTimeout(1000 * 60);\n      client.connect();\n      fail(\"Expected exception\");\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"463917d1b14d6e950fa80db37a0e798f5326f105","date":1591890616,"type":3,"author":"murblanc","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/impl/CloudHttp2SolrClientTest#testWrongZkChrootTest().mjava","pathOld":"solr/solrj/src/test/org/apache/solr/client/solrj/impl/CloudHttp2SolrClientTest#testWrongZkChrootTest().mjava","sourceNew":"  @Test\n  public void testWrongZkChrootTest() throws IOException {\n\n    exception.expect(SolrException.class);\n    exception.expectMessage(\"cluster not found/not ready\");\n\n    try (CloudSolrClient client = getCloudSolrClient(cluster.getZkServer().getZkAddress() + \"/xyz/foo\")) {\n      client.setZkClientTimeout(1000 * 60);\n      client.connect();\n      fail(\"Expected exception\");\n    }\n  }\n\n","sourceOld":"  @Test\n  @AwaitsFix(bugUrl = \"https://issues.apache.org/jira/browse/SOLR-12823\")\n  public void testWrongZkChrootTest() throws IOException {\n\n    exception.expect(SolrException.class);\n    exception.expectMessage(\"cluster not found/not ready\");\n\n    try (CloudSolrClient client = getCloudSolrClient(cluster.getZkServer().getZkAddress() + \"/xyz/foo\")) {\n      client.setZkClientTimeout(1000 * 60);\n      client.connect();\n      fail(\"Expected exception\");\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"463917d1b14d6e950fa80db37a0e798f5326f105":["c1c83d9065111bd0c52230300b020dcd37184fb0"],"0544142c22eb88b6d8b3817f2e1190156aa4f9af":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"c1c83d9065111bd0c52230300b020dcd37184fb0":["0544142c22eb88b6d8b3817f2e1190156aa4f9af"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["463917d1b14d6e950fa80db37a0e798f5326f105"]},"commit2Childs":{"463917d1b14d6e950fa80db37a0e798f5326f105":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"0544142c22eb88b6d8b3817f2e1190156aa4f9af":["c1c83d9065111bd0c52230300b020dcd37184fb0"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["0544142c22eb88b6d8b3817f2e1190156aa4f9af"],"c1c83d9065111bd0c52230300b020dcd37184fb0":["463917d1b14d6e950fa80db37a0e798f5326f105"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}