{"path":"solr/core/src/java/org/apache/solr/core/PackageManager#[T]_newInstance(String,Class[T],String).mjava","commits":[{"id":"39dabfd19b49b248d63cedbb01ea144ee5ad071c","date":1566241238,"type":1,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/PackageManager#[T]_newInstance(String,Class[T],String).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/LibListener#[T]_newInstance(String,Class[T]).mjava","sourceNew":"  public <T> T newInstance(String cName, Class<T> expectedType, String pkg) {\n    try {\n      return coreContainer.getResourceLoader().newInstance(cName, expectedType,\n          null, new Class[]{CoreContainer.class}, new Object[]{coreContainer});\n    } catch (SolrException e) {\n      Package p = pkgs.get(pkg);\n\n      if (p != null) {\n        try {\n          Class<? extends T> klas = p.loader.findClass(cName, expectedType);\n          try {\n            return klas.getConstructor(CoreContainer.class).newInstance(coreContainer);\n          } catch (NoSuchMethodException ex) {\n            return klas.getConstructor().newInstance();\n          }\n        } catch (Exception ex) {\n          if (!p.loader.getErrors().isEmpty()) {\n            //some libraries were no loaded due to some errors. May the class was there in those libraries\n            throw new SolrException(SolrException.ErrorCode.SERVER_ERROR,\n                \"There were errors loading some libraries: \" + StrUtils.join(p.loader.getErrors(), ','), ex);\n          }\n          //there were no errors in loading any libraries. The class was probably not suppoed to be there in those libraries\n          // so throw the original exception\n          throw e;\n        }\n      } else {\n        throw e;\n      }\n    }\n  }\n\n","sourceOld":"  public <T> T newInstance(String cName, Class<T> expectedType) {\n    try {\n      return coreContainer.getResourceLoader().newInstance(cName, expectedType,\n          null, new Class[]{CoreContainer.class}, new Object[]{coreContainer});\n    } catch (SolrException e) {\n      if (memClassLoader != null) {\n        try {\n          Class<? extends T> klas = memClassLoader.findClass(cName, expectedType);\n          try {\n            return klas.getConstructor(CoreContainer.class).newInstance(coreContainer);\n          } catch (NoSuchMethodException ex) {\n            return klas.getConstructor().newInstance();\n          }\n        } catch (Exception ex) {\n          if (!memClassLoader.getErrors().isEmpty()) {\n            //some libraries were no loaded due to some errors. May the class was there in those libraries\n            throw new SolrException(SolrException.ErrorCode.SERVER_ERROR,\n                \"There were errors loading some libraries: \" + StrUtils.join(memClassLoader.getErrors(), ','), ex);\n          }\n          //there were no errors in loading any libraries. The class was probably not suppoed to be there in those libraries\n          // so throw the original exception\n          throw e;\n        }\n      } else {\n        throw e;\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c44cc06c26e456fe9c215072b79fce30babe3975","date":1570365040,"type":4,"author":"Ishan Chattopadhyaya","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/core/src/java/org/apache/solr/core/PackageManager#[T]_newInstance(String,Class[T],String).mjava","sourceNew":null,"sourceOld":"  public <T> T newInstance(String cName, Class<T> expectedType, String pkg) {\n    try {\n      return coreContainer.getResourceLoader().newInstance(cName, expectedType,\n          null, new Class[]{CoreContainer.class}, new Object[]{coreContainer});\n    } catch (SolrException e) {\n      Package p = pkgs.get(pkg);\n\n      if (p != null) {\n        try {\n          Class<? extends T> klas = p.loader.findClass(cName, expectedType);\n          try {\n            return klas.getConstructor(CoreContainer.class).newInstance(coreContainer);\n          } catch (NoSuchMethodException ex) {\n            return klas.getConstructor().newInstance();\n          }\n        } catch (Exception ex) {\n          if (!p.loader.getErrors().isEmpty()) {\n            //some libraries were no loaded due to some errors. May the class was there in those libraries\n            throw new SolrException(SolrException.ErrorCode.SERVER_ERROR,\n                \"There were errors loading some libraries: \" + StrUtils.join(p.loader.getErrors(), ','), ex);\n          }\n          //there were no errors in loading any libraries. The class was probably not suppoed to be there in those libraries\n          // so throw the original exception\n          throw e;\n        }\n      } else {\n        throw e;\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b0b597c65628ca9e73913a07e81691f8229bae35","date":1571224353,"type":4,"author":"jimczi","isMerge":true,"pathNew":"/dev/null","pathOld":"solr/core/src/java/org/apache/solr/core/PackageManager#[T]_newInstance(String,Class[T],String).mjava","sourceNew":null,"sourceOld":"  public <T> T newInstance(String cName, Class<T> expectedType, String pkg) {\n    try {\n      return coreContainer.getResourceLoader().newInstance(cName, expectedType,\n          null, new Class[]{CoreContainer.class}, new Object[]{coreContainer});\n    } catch (SolrException e) {\n      Package p = pkgs.get(pkg);\n\n      if (p != null) {\n        try {\n          Class<? extends T> klas = p.loader.findClass(cName, expectedType);\n          try {\n            return klas.getConstructor(CoreContainer.class).newInstance(coreContainer);\n          } catch (NoSuchMethodException ex) {\n            return klas.getConstructor().newInstance();\n          }\n        } catch (Exception ex) {\n          if (!p.loader.getErrors().isEmpty()) {\n            //some libraries were no loaded due to some errors. May the class was there in those libraries\n            throw new SolrException(SolrException.ErrorCode.SERVER_ERROR,\n                \"There were errors loading some libraries: \" + StrUtils.join(p.loader.getErrors(), ','), ex);\n          }\n          //there were no errors in loading any libraries. The class was probably not suppoed to be there in those libraries\n          // so throw the original exception\n          throw e;\n        }\n      } else {\n        throw e;\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"39dabfd19b49b248d63cedbb01ea144ee5ad071c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"c44cc06c26e456fe9c215072b79fce30babe3975":["39dabfd19b49b248d63cedbb01ea144ee5ad071c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["c44cc06c26e456fe9c215072b79fce30babe3975"],"b0b597c65628ca9e73913a07e81691f8229bae35":["39dabfd19b49b248d63cedbb01ea144ee5ad071c","c44cc06c26e456fe9c215072b79fce30babe3975"]},"commit2Childs":{"39dabfd19b49b248d63cedbb01ea144ee5ad071c":["c44cc06c26e456fe9c215072b79fce30babe3975","b0b597c65628ca9e73913a07e81691f8229bae35"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["39dabfd19b49b248d63cedbb01ea144ee5ad071c"],"c44cc06c26e456fe9c215072b79fce30babe3975":["cd5edd1f2b162a5cfa08efd17851a07373a96817","b0b597c65628ca9e73913a07e81691f8229bae35"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"b0b597c65628ca9e73913a07e81691f8229bae35":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817","b0b597c65628ca9e73913a07e81691f8229bae35"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}