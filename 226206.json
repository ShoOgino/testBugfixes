{"path":"lucene/core/src/java/org/apache/lucene/util/QueryBuilder#newGraphSynonymQuery(Query[]).mjava","commits":[{"id":"7e0d75d7d3cda2b33e79d0eb0e716169cebec4db","date":1486463279,"type":0,"author":"Jim Ferenczi","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/QueryBuilder#newGraphSynonymQuery(Query[]).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Builds a new GraphQuery for multi-terms synonyms.\n   * <p>\n   * This is intended for subclasses that wish to customize the generated queries.\n   * @return new Query instance\n   */\n  protected Query newGraphSynonymQuery(Query queries[]) {\n    return new GraphQuery(queries);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b4408f3223cc4586cae91dc945fefb692e411d6d","date":1487771345,"type":3,"author":"Jim Ferenczi","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/QueryBuilder#newGraphSynonymQuery(Query[]).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/QueryBuilder#newGraphSynonymQuery(Query[]).mjava","sourceNew":"  /**\n   * Builds a new GraphQuery for multi-terms synonyms.\n   * <p>\n   * This is intended for subclasses that wish to customize the generated queries.\n   * @return new Query instance\n   */\n  protected Query newGraphSynonymQuery(Query queries[]) {\n    if (queries == null) {\n      return new BooleanQuery.Builder().build();\n    } else if (queries.length == 1) {\n      return queries[0];\n    } else {\n      BooleanQuery.Builder builder = new BooleanQuery.Builder();\n      Arrays.stream(queries).forEachOrdered(qry -> builder.add(qry, BooleanClause.Occur.SHOULD));\n      return builder.build();\n    }\n  }\n\n","sourceOld":"  /**\n   * Builds a new GraphQuery for multi-terms synonyms.\n   * <p>\n   * This is intended for subclasses that wish to customize the generated queries.\n   * @return new Query instance\n   */\n  protected Query newGraphSynonymQuery(Query queries[]) {\n    return new GraphQuery(queries);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6d44a067741cef02c3637ee610da1e8d6d30632e","date":1489762401,"type":5,"author":"Jim Ferenczi","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/QueryBuilder#newGraphSynonymQuery(Iterator[Query]).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/QueryBuilder#newGraphSynonymQuery(Query[]).mjava","sourceNew":"  /**\n   * Builds a new GraphQuery for multi-terms synonyms.\n   * <p>\n   * This is intended for subclasses that wish to customize the generated queries.\n   * @return new Query instance\n   */\n  protected Query newGraphSynonymQuery(Iterator<Query> queries) {\n    BooleanQuery.Builder builder = new BooleanQuery.Builder();\n    while (queries.hasNext()) {\n      builder.add(queries.next(), BooleanClause.Occur.SHOULD);\n    }\n    BooleanQuery bq = builder.build();\n    if (bq.clauses().size() == 1) {\n      return bq.clauses().get(0).getQuery();\n    }\n    return bq;\n  }\n\n","sourceOld":"  /**\n   * Builds a new GraphQuery for multi-terms synonyms.\n   * <p>\n   * This is intended for subclasses that wish to customize the generated queries.\n   * @return new Query instance\n   */\n  protected Query newGraphSynonymQuery(Query queries[]) {\n    if (queries == null) {\n      return new BooleanQuery.Builder().build();\n    } else if (queries.length == 1) {\n      return queries[0];\n    } else {\n      BooleanQuery.Builder builder = new BooleanQuery.Builder();\n      Arrays.stream(queries).forEachOrdered(qry -> builder.add(qry, BooleanClause.Occur.SHOULD));\n      return builder.build();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5b2e16c9b5fb24bd926f6d6cfcf14967f0f1c52b","date":1490280010,"type":5,"author":"Jim Ferenczi","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/QueryBuilder#newGraphSynonymQuery(Iterator[Query]).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/QueryBuilder#newGraphSynonymQuery(Query[]).mjava","sourceNew":"  /**\n   * Builds a new GraphQuery for multi-terms synonyms.\n   * <p>\n   * This is intended for subclasses that wish to customize the generated queries.\n   * @return new Query instance\n   */\n  protected Query newGraphSynonymQuery(Iterator<Query> queries) {\n    BooleanQuery.Builder builder = new BooleanQuery.Builder();\n    while (queries.hasNext()) {\n      builder.add(queries.next(), BooleanClause.Occur.SHOULD);\n    }\n    BooleanQuery bq = builder.build();\n    if (bq.clauses().size() == 1) {\n      return bq.clauses().get(0).getQuery();\n    }\n    return bq;\n  }\n\n","sourceOld":"  /**\n   * Builds a new GraphQuery for multi-terms synonyms.\n   * <p>\n   * This is intended for subclasses that wish to customize the generated queries.\n   * @return new Query instance\n   */\n  protected Query newGraphSynonymQuery(Query queries[]) {\n    if (queries == null) {\n      return new BooleanQuery.Builder().build();\n    } else if (queries.length == 1) {\n      return queries[0];\n    } else {\n      BooleanQuery.Builder builder = new BooleanQuery.Builder();\n      Arrays.stream(queries).forEachOrdered(qry -> builder.add(qry, BooleanClause.Occur.SHOULD));\n      return builder.build();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"b4408f3223cc4586cae91dc945fefb692e411d6d":["7e0d75d7d3cda2b33e79d0eb0e716169cebec4db"],"5b2e16c9b5fb24bd926f6d6cfcf14967f0f1c52b":["b4408f3223cc4586cae91dc945fefb692e411d6d"],"6d44a067741cef02c3637ee610da1e8d6d30632e":["b4408f3223cc4586cae91dc945fefb692e411d6d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["6d44a067741cef02c3637ee610da1e8d6d30632e"],"7e0d75d7d3cda2b33e79d0eb0e716169cebec4db":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["7e0d75d7d3cda2b33e79d0eb0e716169cebec4db"],"b4408f3223cc4586cae91dc945fefb692e411d6d":["5b2e16c9b5fb24bd926f6d6cfcf14967f0f1c52b","6d44a067741cef02c3637ee610da1e8d6d30632e"],"5b2e16c9b5fb24bd926f6d6cfcf14967f0f1c52b":[],"6d44a067741cef02c3637ee610da1e8d6d30632e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"7e0d75d7d3cda2b33e79d0eb0e716169cebec4db":["b4408f3223cc4586cae91dc945fefb692e411d6d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["5b2e16c9b5fb24bd926f6d6cfcf14967f0f1c52b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}