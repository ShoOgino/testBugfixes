{"path":"solr/core/src/test/org/apache/solr/analysis/TestCJKBigramFilterFactory#testHanOnly().mjava","commits":[{"id":"680e7f726eaa1fd44ade8bc1f8a02f452ca7c4ee","date":1325135089,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/analysis/TestCJKBigramFilterFactory#testHanOnly().mjava","pathOld":"/dev/null","sourceNew":"  public void testHanOnly() throws Exception {\n    Reader reader = new StringReader(\"多くの学生が試験に落ちた。\");\n    CJKBigramFilterFactory factory = new CJKBigramFilterFactory();\n    Map<String,String> args = new HashMap<String,String>();\n    args.put(\"hiragana\", \"false\");\n    factory.init(args);\n    TokenStream stream = factory.create(new StandardTokenizer(TEST_VERSION_CURRENT, reader));\n    assertTokenStreamContents(stream,\n        new String[] { \"多\", \"く\", \"の\",  \"学生\", \"が\",  \"試験\", \"に\",  \"落\", \"ち\", \"た\" });\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3149c447232aff105275cf92bb495567e96b0c87","date":1343102374,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/cjk/TestCJKBigramFilterFactory#testHanOnly().mjava","pathOld":"solr/core/src/test/org/apache/solr/analysis/TestCJKBigramFilterFactory#testHanOnly().mjava","sourceNew":"  public void testHanOnly() throws Exception {\n    Reader reader = new StringReader(\"多くの学生が試験に落ちた。\");\n    CJKBigramFilterFactory factory = new CJKBigramFilterFactory();\n    Map<String,String> args = new HashMap<String,String>();\n    args.put(\"hiragana\", \"false\");\n    factory.init(args);\n    TokenStream stream = factory.create(new StandardTokenizer(TEST_VERSION_CURRENT, reader));\n    assertTokenStreamContents(stream,\n        new String[] { \"多\", \"く\", \"の\",  \"学生\", \"が\",  \"試験\", \"に\",  \"落\", \"ち\", \"た\" });\n  }\n\n","sourceOld":"  public void testHanOnly() throws Exception {\n    Reader reader = new StringReader(\"多くの学生が試験に落ちた。\");\n    CJKBigramFilterFactory factory = new CJKBigramFilterFactory();\n    Map<String,String> args = new HashMap<String,String>();\n    args.put(\"hiragana\", \"false\");\n    factory.init(args);\n    TokenStream stream = factory.create(new StandardTokenizer(TEST_VERSION_CURRENT, reader));\n    assertTokenStreamContents(stream,\n        new String[] { \"多\", \"く\", \"の\",  \"学生\", \"が\",  \"試験\", \"に\",  \"落\", \"ち\", \"た\" });\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5a1a22b1ad88b436661458df567f3fdb446392a4","date":1343224444,"type":5,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/cjk/TestCJKBigramFilterFactory#testHanOnly().mjava","pathOld":"solr/core/src/test/org/apache/solr/analysis/TestCJKBigramFilterFactory#testHanOnly().mjava","sourceNew":"  public void testHanOnly() throws Exception {\n    Reader reader = new StringReader(\"多くの学生が試験に落ちた。\");\n    CJKBigramFilterFactory factory = new CJKBigramFilterFactory();\n    Map<String,String> args = new HashMap<String,String>();\n    args.put(\"hiragana\", \"false\");\n    factory.init(args);\n    TokenStream stream = factory.create(new StandardTokenizer(TEST_VERSION_CURRENT, reader));\n    assertTokenStreamContents(stream,\n        new String[] { \"多\", \"く\", \"の\",  \"学生\", \"が\",  \"試験\", \"に\",  \"落\", \"ち\", \"た\" });\n  }\n\n","sourceOld":"  public void testHanOnly() throws Exception {\n    Reader reader = new StringReader(\"多くの学生が試験に落ちた。\");\n    CJKBigramFilterFactory factory = new CJKBigramFilterFactory();\n    Map<String,String> args = new HashMap<String,String>();\n    args.put(\"hiragana\", \"false\");\n    factory.init(args);\n    TokenStream stream = factory.create(new StandardTokenizer(TEST_VERSION_CURRENT, reader));\n    assertTokenStreamContents(stream,\n        new String[] { \"多\", \"く\", \"の\",  \"学生\", \"が\",  \"試験\", \"に\",  \"落\", \"ち\", \"た\" });\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"aba371508186796cc6151d8223a5b4e16d02e26e","date":1343474871,"type":5,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/cjk/TestCJKBigramFilterFactory#testHanOnly().mjava","pathOld":"solr/core/src/test/org/apache/solr/analysis/TestCJKBigramFilterFactory#testHanOnly().mjava","sourceNew":"  public void testHanOnly() throws Exception {\n    Reader reader = new StringReader(\"多くの学生が試験に落ちた。\");\n    CJKBigramFilterFactory factory = new CJKBigramFilterFactory();\n    Map<String,String> args = new HashMap<String,String>();\n    args.put(\"hiragana\", \"false\");\n    factory.init(args);\n    TokenStream stream = factory.create(new StandardTokenizer(TEST_VERSION_CURRENT, reader));\n    assertTokenStreamContents(stream,\n        new String[] { \"多\", \"く\", \"の\",  \"学生\", \"が\",  \"試験\", \"に\",  \"落\", \"ち\", \"た\" });\n  }\n\n","sourceOld":"  public void testHanOnly() throws Exception {\n    Reader reader = new StringReader(\"多くの学生が試験に落ちた。\");\n    CJKBigramFilterFactory factory = new CJKBigramFilterFactory();\n    Map<String,String> args = new HashMap<String,String>();\n    args.put(\"hiragana\", \"false\");\n    factory.init(args);\n    TokenStream stream = factory.create(new StandardTokenizer(TEST_VERSION_CURRENT, reader));\n    assertTokenStreamContents(stream,\n        new String[] { \"多\", \"く\", \"の\",  \"学生\", \"が\",  \"試験\", \"に\",  \"落\", \"ち\", \"た\" });\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f","date":1343768312,"type":5,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/cjk/TestCJKBigramFilterFactory#testHanOnly().mjava","pathOld":"solr/core/src/test/org/apache/solr/analysis/TestCJKBigramFilterFactory#testHanOnly().mjava","sourceNew":"  public void testHanOnly() throws Exception {\n    Reader reader = new StringReader(\"多くの学生が試験に落ちた。\");\n    CJKBigramFilterFactory factory = new CJKBigramFilterFactory();\n    Map<String,String> args = new HashMap<String,String>();\n    args.put(\"hiragana\", \"false\");\n    factory.init(args);\n    TokenStream stream = factory.create(new StandardTokenizer(TEST_VERSION_CURRENT, reader));\n    assertTokenStreamContents(stream,\n        new String[] { \"多\", \"く\", \"の\",  \"学生\", \"が\",  \"試験\", \"に\",  \"落\", \"ち\", \"た\" });\n  }\n\n","sourceOld":"  public void testHanOnly() throws Exception {\n    Reader reader = new StringReader(\"多くの学生が試験に落ちた。\");\n    CJKBigramFilterFactory factory = new CJKBigramFilterFactory();\n    Map<String,String> args = new HashMap<String,String>();\n    args.put(\"hiragana\", \"false\");\n    factory.init(args);\n    TokenStream stream = factory.create(new StandardTokenizer(TEST_VERSION_CURRENT, reader));\n    assertTokenStreamContents(stream,\n        new String[] { \"多\", \"く\", \"の\",  \"学生\", \"が\",  \"試験\", \"に\",  \"落\", \"ち\", \"た\" });\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"680e7f726eaa1fd44ade8bc1f8a02f452ca7c4ee":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"aba371508186796cc6151d8223a5b4e16d02e26e":["680e7f726eaa1fd44ade8bc1f8a02f452ca7c4ee","5a1a22b1ad88b436661458df567f3fdb446392a4"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3149c447232aff105275cf92bb495567e96b0c87":["680e7f726eaa1fd44ade8bc1f8a02f452ca7c4ee"],"b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f":["680e7f726eaa1fd44ade8bc1f8a02f452ca7c4ee","5a1a22b1ad88b436661458df567f3fdb446392a4"],"5a1a22b1ad88b436661458df567f3fdb446392a4":["680e7f726eaa1fd44ade8bc1f8a02f452ca7c4ee","3149c447232aff105275cf92bb495567e96b0c87"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["5a1a22b1ad88b436661458df567f3fdb446392a4"]},"commit2Childs":{"680e7f726eaa1fd44ade8bc1f8a02f452ca7c4ee":["aba371508186796cc6151d8223a5b4e16d02e26e","3149c447232aff105275cf92bb495567e96b0c87","b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f","5a1a22b1ad88b436661458df567f3fdb446392a4"],"aba371508186796cc6151d8223a5b4e16d02e26e":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["680e7f726eaa1fd44ade8bc1f8a02f452ca7c4ee"],"3149c447232aff105275cf92bb495567e96b0c87":["5a1a22b1ad88b436661458df567f3fdb446392a4"],"b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f":[],"5a1a22b1ad88b436661458df567f3fdb446392a4":["aba371508186796cc6151d8223a5b4e16d02e26e","b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["aba371508186796cc6151d8223a5b4e16d02e26e","b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}