{"path":"src/java/org/apache/lucene/index/IndexWriter#ensureOpen(boolean).mjava","commits":[{"id":"2586f96f60332eb97ecd2934b0763791462568b2","date":1220116589,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/IndexWriter#ensureOpen(boolean).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Used internally to throw an {@link\n   * AlreadyClosedException} if this IndexWriter has been\n   * closed.\n   * @throws AlreadyClosedException if this IndexWriter is\n   */\n  protected synchronized final void ensureOpen(boolean includePendingClose) throws AlreadyClosedException {\n    if (closed || (includePendingClose && closing)) {\n      throw new AlreadyClosedException(\"this IndexWriter is closed\");\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c4ff8864209d2e972cb4393600c26082f9a6533d","date":1239297466,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/IndexWriter#ensureOpen(boolean).mjava","pathOld":"src/java/org/apache/lucene/index/IndexWriter#ensureOpen(boolean).mjava","sourceNew":"  /**\n   * Used internally to throw an {@link\n   * AlreadyClosedException} if this IndexWriter has been\n   * closed.\n   * @throws AlreadyClosedException if this IndexWriter is\n   */\n  protected synchronized final void ensureOpen(boolean includePendingClose) throws AlreadyClosedException {\n    if (!isOpen(includePendingClose)) {\n      throw new AlreadyClosedException(\"this IndexWriter is closed\");\n    }\n  }\n\n","sourceOld":"  /**\n   * Used internally to throw an {@link\n   * AlreadyClosedException} if this IndexWriter has been\n   * closed.\n   * @throws AlreadyClosedException if this IndexWriter is\n   */\n  protected synchronized final void ensureOpen(boolean includePendingClose) throws AlreadyClosedException {\n    if (closed || (includePendingClose && closing)) {\n      throw new AlreadyClosedException(\"this IndexWriter is closed\");\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"351c5b8cb12f675814b970fabc3723ee7c78280d","date":1260964021,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/IndexWriter#ensureOpen(boolean).mjava","pathOld":"src/java/org/apache/lucene/index/IndexWriter#ensureOpen(boolean).mjava","sourceNew":"  /**\n   * Used internally to throw an {@link\n   * AlreadyClosedException} if this IndexWriter has been\n   * closed.\n   * @throws AlreadyClosedException if this IndexWriter is\n   */\n  protected final void ensureOpen(boolean includePendingClose) throws AlreadyClosedException {\n    if (closed || (includePendingClose && closing)) {\n      throw new AlreadyClosedException(\"this IndexWriter is closed\");\n    }\n  }\n\n","sourceOld":"  /**\n   * Used internally to throw an {@link\n   * AlreadyClosedException} if this IndexWriter has been\n   * closed.\n   * @throws AlreadyClosedException if this IndexWriter is\n   */\n  protected synchronized final void ensureOpen(boolean includePendingClose) throws AlreadyClosedException {\n    if (!isOpen(includePendingClose)) {\n      throw new AlreadyClosedException(\"this IndexWriter is closed\");\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/IndexWriter#ensureOpen(boolean).mjava","pathOld":"src/java/org/apache/lucene/index/IndexWriter#ensureOpen(boolean).mjava","sourceNew":"  /**\n   * Used internally to throw an {@link\n   * AlreadyClosedException} if this IndexWriter has been\n   * closed.\n   * @throws AlreadyClosedException if this IndexWriter is\n   */\n  protected final void ensureOpen(boolean includePendingClose) throws AlreadyClosedException {\n    if (closed || (includePendingClose && closing)) {\n      throw new AlreadyClosedException(\"this IndexWriter is closed\");\n    }\n  }\n\n","sourceOld":"  /**\n   * Used internally to throw an {@link\n   * AlreadyClosedException} if this IndexWriter has been\n   * closed.\n   * @throws AlreadyClosedException if this IndexWriter is\n   */\n  protected final void ensureOpen(boolean includePendingClose) throws AlreadyClosedException {\n    if (closed || (includePendingClose && closing)) {\n      throw new AlreadyClosedException(\"this IndexWriter is closed\");\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"351c5b8cb12f675814b970fabc3723ee7c78280d":["c4ff8864209d2e972cb4393600c26082f9a6533d"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"c4ff8864209d2e972cb4393600c26082f9a6533d":["2586f96f60332eb97ecd2934b0763791462568b2"],"2586f96f60332eb97ecd2934b0763791462568b2":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["351c5b8cb12f675814b970fabc3723ee7c78280d"]},"commit2Childs":{"351c5b8cb12f675814b970fabc3723ee7c78280d":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["2586f96f60332eb97ecd2934b0763791462568b2"],"c4ff8864209d2e972cb4393600c26082f9a6533d":["351c5b8cb12f675814b970fabc3723ee7c78280d"],"2586f96f60332eb97ecd2934b0763791462568b2":["c4ff8864209d2e972cb4393600c26082f9a6533d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}