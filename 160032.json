{"path":"lucene/src/java/org/apache/lucene/store/DefaultCompoundFileDirectory.CSIndexInput#readInternal(byte[],int,int).mjava","commits":[{"id":"0aab6e810b4b0d3743d6a048be0602801f4b3920","date":1308671625,"type":1,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/store/DefaultCompoundFileDirectory.CSIndexInput#readInternal(byte[],int,int).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/CompoundFileReader.CSIndexInput#readInternal(byte[],int,int).mjava","sourceNew":"    /** Expert: implements buffer refill.  Reads bytes from the current\n     *  position in the input.\n     * @param b the array to read bytes into\n     * @param offset the offset in the array to start storing bytes\n     * @param len the number of bytes to read\n     */\n    @Override\n    protected void readInternal(byte[] b, int offset, int len) throws IOException {\n      long start = getFilePointer();\n      if(start + len > length)\n        throw new IOException(\"read past EOF\");\n      base.seek(fileOffset + start);\n      base.readBytes(b, offset, len, false);\n    }\n\n","sourceOld":"    /** Expert: implements buffer refill.  Reads bytes from the current\n     *  position in the input.\n     * @param b the array to read bytes into\n     * @param offset the offset in the array to start storing bytes\n     * @param len the number of bytes to read\n     */\n    @Override\n    protected void readInternal(byte[] b, int offset, int len) throws IOException {\n      long start = getFilePointer();\n      if(start + len > length)\n        throw new IOException(\"read past EOF\");\n      base.seek(fileOffset + start);\n      base.readBytes(b, offset, len, false);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2553b00f699380c64959ccb27991289aae87be2e","date":1309290151,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/store/DefaultCompoundFileDirectory.CSIndexInput#readInternal(byte[],int,int).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/CompoundFileReader.CSIndexInput#readInternal(byte[],int,int).mjava","sourceNew":"    /** Expert: implements buffer refill.  Reads bytes from the current\n     *  position in the input.\n     * @param b the array to read bytes into\n     * @param offset the offset in the array to start storing bytes\n     * @param len the number of bytes to read\n     */\n    @Override\n    protected void readInternal(byte[] b, int offset, int len) throws IOException {\n      long start = getFilePointer();\n      if(start + len > length)\n        throw new IOException(\"read past EOF\");\n      base.seek(fileOffset + start);\n      base.readBytes(b, offset, len, false);\n    }\n\n","sourceOld":"    /** Expert: implements buffer refill.  Reads bytes from the current\n     *  position in the input.\n     * @param b the array to read bytes into\n     * @param offset the offset in the array to start storing bytes\n     * @param len the number of bytes to read\n     */\n    @Override\n    protected void readInternal(byte[] b, int offset, int len) throws IOException {\n      long start = getFilePointer();\n      if(start + len > length)\n        throw new IOException(\"read past EOF\");\n      base.seek(fileOffset + start);\n      base.readBytes(b, offset, len, false);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d083e83f225b11e5fdd900e83d26ddb385b6955c","date":1310029438,"type":1,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/store/DefaultCompoundFileDirectory.CSIndexInput#readInternal(byte[],int,int).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/CompoundFileReader.CSIndexInput#readInternal(byte[],int,int).mjava","sourceNew":"    /** Expert: implements buffer refill.  Reads bytes from the current\n     *  position in the input.\n     * @param b the array to read bytes into\n     * @param offset the offset in the array to start storing bytes\n     * @param len the number of bytes to read\n     */\n    @Override\n    protected void readInternal(byte[] b, int offset, int len) throws IOException {\n      long start = getFilePointer();\n      if(start + len > length)\n        throw new IOException(\"read past EOF\");\n      base.seek(fileOffset + start);\n      base.readBytes(b, offset, len, false);\n    }\n\n","sourceOld":"    /** Expert: implements buffer refill.  Reads bytes from the current\n     *  position in the input.\n     * @param b the array to read bytes into\n     * @param offset the offset in the array to start storing bytes\n     * @param len the number of bytes to read\n     */\n    @Override\n    protected void readInternal(byte[] b, int offset, int len) throws IOException {\n      long start = getFilePointer();\n      if(start + len > length)\n        throw new IOException(\"read past EOF\");\n      base.seek(fileOffset + start);\n      base.readBytes(b, offset, len, false);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"67aadace85f701c87a4e0721eedcda25d8415a70","date":1314201925,"type":5,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/store/Directory.SlicedIndexInput#readInternal(byte[],int,int).mjava","pathOld":"lucene/src/java/org/apache/lucene/store/DefaultCompoundFileDirectory.CSIndexInput#readInternal(byte[],int,int).mjava","sourceNew":"    /** Expert: implements buffer refill.  Reads bytes from the current\n     *  position in the input.\n     * @param b the array to read bytes into\n     * @param offset the offset in the array to start storing bytes\n     * @param len the number of bytes to read\n     */\n    @Override\n    protected void readInternal(byte[] b, int offset, int len) throws IOException {\n      long start = getFilePointer();\n      if(start + len > length)\n        throw new IOException(\"read past EOF\");\n      base.seek(fileOffset + start);\n      base.readBytes(b, offset, len, false);\n    }\n\n","sourceOld":"    /** Expert: implements buffer refill.  Reads bytes from the current\n     *  position in the input.\n     * @param b the array to read bytes into\n     * @param offset the offset in the array to start storing bytes\n     * @param len the number of bytes to read\n     */\n    @Override\n    protected void readInternal(byte[] b, int offset, int len) throws IOException {\n      long start = getFilePointer();\n      if(start + len > length)\n        throw new IOException(\"read past EOF\");\n      base.seek(fileOffset + start);\n      base.readBytes(b, offset, len, false);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"67aadace85f701c87a4e0721eedcda25d8415a70":["0aab6e810b4b0d3743d6a048be0602801f4b3920"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"0aab6e810b4b0d3743d6a048be0602801f4b3920":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"2553b00f699380c64959ccb27991289aae87be2e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","0aab6e810b4b0d3743d6a048be0602801f4b3920"],"d083e83f225b11e5fdd900e83d26ddb385b6955c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","0aab6e810b4b0d3743d6a048be0602801f4b3920"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["67aadace85f701c87a4e0721eedcda25d8415a70"]},"commit2Childs":{"67aadace85f701c87a4e0721eedcda25d8415a70":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["0aab6e810b4b0d3743d6a048be0602801f4b3920","2553b00f699380c64959ccb27991289aae87be2e","d083e83f225b11e5fdd900e83d26ddb385b6955c"],"0aab6e810b4b0d3743d6a048be0602801f4b3920":["67aadace85f701c87a4e0721eedcda25d8415a70","2553b00f699380c64959ccb27991289aae87be2e","d083e83f225b11e5fdd900e83d26ddb385b6955c"],"2553b00f699380c64959ccb27991289aae87be2e":[],"d083e83f225b11e5fdd900e83d26ddb385b6955c":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["2553b00f699380c64959ccb27991289aae87be2e","d083e83f225b11e5fdd900e83d26ddb385b6955c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}