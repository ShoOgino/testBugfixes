{"path":"lucene/highlighter/src/java/org/apache/lucene/search/uhighlight/FieldOffsetStrategy#createOffsetsEnumsWeightMatcher(LeafReader,int,List[OffsetsEnum]).mjava","commits":[{"id":"795822cce6616d4035b5a4bdbb6c113ea2f715ba","date":1535599765,"type":0,"author":"David Smiley","isMerge":false,"pathNew":"lucene/highlighter/src/java/org/apache/lucene/search/uhighlight/FieldOffsetStrategy#createOffsetsEnumsWeightMatcher(LeafReader,int,List[OffsetsEnum]).mjava","pathOld":"/dev/null","sourceNew":"  protected void createOffsetsEnumsWeightMatcher(LeafReader _leafReader, int docId, List<OffsetsEnum> results) throws IOException {\n    // remap fieldMatcher/requireFieldMatch fields to the field we are highlighting\n    LeafReader leafReader = new FilterLeafReader(_leafReader) {\n      @Override\n      public Terms terms(String field) throws IOException {\n        if (components.getFieldMatcher().test(field)) {\n          return super.terms(components.getField());\n        } else {\n          return super.terms(field);\n        }\n      }\n\n      //  So many subclasses do this!\n      //these ought to be a default or added via some intermediary like \"FilterTransientLeafReader\" (exception on close).\n      @Override\n      public CacheHelper getCoreCacheHelper() {\n        return null;\n      }\n\n      @Override\n      public CacheHelper getReaderCacheHelper() {\n        return null;\n      }\n    };\n    IndexSearcher indexSearcher = new IndexSearcher(leafReader);\n    indexSearcher.setQueryCache(null);\n    Matches matches = indexSearcher.rewrite(components.getQuery())\n        .createWeight(indexSearcher, ScoreMode.COMPLETE_NO_SCORES, 1.0f)\n        .matches(leafReader.getContext(), docId);\n    if (matches == null) {\n      return; // doc doesn't match\n    }\n    for (String field : matches) {\n      if (components.getFieldMatcher().test(field)) {\n        MatchesIterator iterator = matches.getMatches(field);\n        if (iterator == null) {\n          continue;\n        }\n        results.add(new OffsetsEnum.OfMatchesIteratorWithSubs(iterator));\n      }\n    }\n\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"795822cce6616d4035b5a4bdbb6c113ea2f715ba":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["795822cce6616d4035b5a4bdbb6c113ea2f715ba"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["795822cce6616d4035b5a4bdbb6c113ea2f715ba"],"795822cce6616d4035b5a4bdbb6c113ea2f715ba":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}