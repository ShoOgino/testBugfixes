{"path":"client/java/solrj/src/org/apache/solr/client/solrj/impl/CommonsHttpSolrServer#CommonsHttpSolrServer(String,HttpClient).mjava","commits":[{"id":"4f9e70cea495aaf83300e16f5027ed8cb2da59fd","date":1201238296,"type":0,"author":"Yonik Seeley","isMerge":false,"pathNew":"client/java/solrj/src/org/apache/solr/client/solrj/impl/CommonsHttpSolrServer#CommonsHttpSolrServer(String,HttpClient).mjava","pathOld":"/dev/null","sourceNew":"  /** Talk to the Solr server via the given HttpClient.  The connection manager\n   * for the client should be a MultiThreadedHttpConnectionManager if this\n   * client is being reused across SolrServer instances, or of multiple threads\n   * will use this SolrServer.\n   */\n  public CommonsHttpSolrServer(String solrServerUrl, HttpClient httpClient) throws MalformedURLException {\n    this(new URL(solrServerUrl), httpClient);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0a12d3c6475f1b99b086e4ca6b9ba34e65081859","date":1204263291,"type":3,"author":"Ryan McKinley","isMerge":false,"pathNew":"client/java/solrj/src/org/apache/solr/client/solrj/impl/CommonsHttpSolrServer#CommonsHttpSolrServer(String,HttpClient).mjava","pathOld":"client/java/solrj/src/org/apache/solr/client/solrj/impl/CommonsHttpSolrServer#CommonsHttpSolrServer(String,HttpClient).mjava","sourceNew":"  /** Talk to the Solr server via the given HttpClient.  The connection manager\n   * for the client should be a MultiThreadedHttpConnectionManager if this\n   * client is being reused across SolrServer instances, or of multiple threads\n   * will use this SolrServer.\n   */\n  public CommonsHttpSolrServer(String solrServerUrl, HttpClient httpClient) throws MalformedURLException {\n    this(new URL(solrServerUrl), httpClient, new XMLResponseParser());\n  }\n\n","sourceOld":"  /** Talk to the Solr server via the given HttpClient.  The connection manager\n   * for the client should be a MultiThreadedHttpConnectionManager if this\n   * client is being reused across SolrServer instances, or of multiple threads\n   * will use this SolrServer.\n   */\n  public CommonsHttpSolrServer(String solrServerUrl, HttpClient httpClient) throws MalformedURLException {\n    this(new URL(solrServerUrl), httpClient);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7116df897fd068949084f44e80c7c4a0869652e6","date":1213709875,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"client/java/solrj/src/org/apache/solr/client/solrj/impl/CommonsHttpSolrServer#CommonsHttpSolrServer(String,HttpClient).mjava","pathOld":"client/java/solrj/src/org/apache/solr/client/solrj/impl/CommonsHttpSolrServer#CommonsHttpSolrServer(String,HttpClient).mjava","sourceNew":"  /** Talk to the Solr server via the given HttpClient.  The connection manager\n   * for the client should be a MultiThreadedHttpConnectionManager if this\n   * client is being reused across SolrServer instances, or of multiple threads\n   * will use this SolrServer.\n   */\n  public CommonsHttpSolrServer(String solrServerUrl, HttpClient httpClient) throws MalformedURLException {\n    this(new URL(solrServerUrl), httpClient, new BinaryResponseParser());\n  }\n\n","sourceOld":"  /** Talk to the Solr server via the given HttpClient.  The connection manager\n   * for the client should be a MultiThreadedHttpConnectionManager if this\n   * client is being reused across SolrServer instances, or of multiple threads\n   * will use this SolrServer.\n   */\n  public CommonsHttpSolrServer(String solrServerUrl, HttpClient httpClient) throws MalformedURLException {\n    this(new URL(solrServerUrl), httpClient, new XMLResponseParser());\n  }\n\n","bugFix":null,"bugIntro":["7c00763ceedfa0fc93dffe88eddf2ba67e7585de"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"7c00763ceedfa0fc93dffe88eddf2ba67e7585de","date":1215037404,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"client/java/solrj/src/org/apache/solr/client/solrj/impl/CommonsHttpSolrServer#CommonsHttpSolrServer(String,HttpClient).mjava","pathOld":"client/java/solrj/src/org/apache/solr/client/solrj/impl/CommonsHttpSolrServer#CommonsHttpSolrServer(String,HttpClient).mjava","sourceNew":"  /** Talk to the Solr server via the given HttpClient.  The connection manager\n   * for the client should be a MultiThreadedHttpConnectionManager if this\n   * client is being reused across SolrServer instances, or of multiple threads\n   * will use this SolrServer.\n   */\n  public CommonsHttpSolrServer(String solrServerUrl, HttpClient httpClient) throws MalformedURLException {\n    this(new URL(solrServerUrl), httpClient, new BinaryResponseParser(), false);\n  }\n\n","sourceOld":"  /** Talk to the Solr server via the given HttpClient.  The connection manager\n   * for the client should be a MultiThreadedHttpConnectionManager if this\n   * client is being reused across SolrServer instances, or of multiple threads\n   * will use this SolrServer.\n   */\n  public CommonsHttpSolrServer(String solrServerUrl, HttpClient httpClient) throws MalformedURLException {\n    this(new URL(solrServerUrl), httpClient, new BinaryResponseParser());\n  }\n\n","bugFix":["7116df897fd068949084f44e80c7c4a0869652e6"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e3602d5eab954caecc726ab136ad580ac1ceb917","date":1228676831,"type":5,"author":"Ryan McKinley","isMerge":false,"pathNew":"src/solrj/org/apache/solr/client/solrj/impl/CommonsHttpSolrServer#CommonsHttpSolrServer(String,HttpClient).mjava","pathOld":"client/java/solrj/src/org/apache/solr/client/solrj/impl/CommonsHttpSolrServer#CommonsHttpSolrServer(String,HttpClient).mjava","sourceNew":"  /** Talk to the Solr server via the given HttpClient.  The connection manager\n   * for the client should be a MultiThreadedHttpConnectionManager if this\n   * client is being reused across SolrServer instances, or of multiple threads\n   * will use this SolrServer.\n   */\n  public CommonsHttpSolrServer(String solrServerUrl, HttpClient httpClient) throws MalformedURLException {\n    this(new URL(solrServerUrl), httpClient, new BinaryResponseParser(), false);\n  }\n\n","sourceOld":"  /** Talk to the Solr server via the given HttpClient.  The connection manager\n   * for the client should be a MultiThreadedHttpConnectionManager if this\n   * client is being reused across SolrServer instances, or of multiple threads\n   * will use this SolrServer.\n   */\n  public CommonsHttpSolrServer(String solrServerUrl, HttpClient httpClient) throws MalformedURLException {\n    this(new URL(solrServerUrl), httpClient, new BinaryResponseParser(), false);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"e3602d5eab954caecc726ab136ad580ac1ceb917":["7c00763ceedfa0fc93dffe88eddf2ba67e7585de"],"0a12d3c6475f1b99b086e4ca6b9ba34e65081859":["4f9e70cea495aaf83300e16f5027ed8cb2da59fd"],"7c00763ceedfa0fc93dffe88eddf2ba67e7585de":["7116df897fd068949084f44e80c7c4a0869652e6"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"7116df897fd068949084f44e80c7c4a0869652e6":["0a12d3c6475f1b99b086e4ca6b9ba34e65081859"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"4f9e70cea495aaf83300e16f5027ed8cb2da59fd":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"]},"commit2Childs":{"e3602d5eab954caecc726ab136ad580ac1ceb917":[],"0a12d3c6475f1b99b086e4ca6b9ba34e65081859":["7116df897fd068949084f44e80c7c4a0869652e6"],"7c00763ceedfa0fc93dffe88eddf2ba67e7585de":["e3602d5eab954caecc726ab136ad580ac1ceb917"],"7116df897fd068949084f44e80c7c4a0869652e6":["7c00763ceedfa0fc93dffe88eddf2ba67e7585de"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["4f9e70cea495aaf83300e16f5027ed8cb2da59fd"],"4f9e70cea495aaf83300e16f5027ed8cb2da59fd":["0a12d3c6475f1b99b086e4ca6b9ba34e65081859"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["e3602d5eab954caecc726ab136ad580ac1ceb917","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"pathCommit":null}