{"path":"sandbox/contributions/webcrawler-LARM/libs/HTTPClient-patch/HTTPClient/HTTPConnection#Post(String,NVPair[],NVPair[]).mjava","commits":[{"id":"bc6055f4a2e8e9f9caaec2297010c9502480ed69","date":1050060580,"type":0,"author":"cmarschner","isMerge":false,"pathNew":"sandbox/contributions/webcrawler-LARM/libs/HTTPClient-patch/HTTPClient/HTTPConnection#Post(String,NVPair[],NVPair[]).mjava","pathOld":"/dev/null","sourceNew":"    /**\n     * POST's form-data to the specified file using the specified headers. The\n     * data is first urlencoded and then turned into a string of the form\n     * \"name1=value1&name2=value2\". If no <var>Content-type</var> header is\n     * given then one is added with a value of <var>\n     * application/x-www-form-urlencoded</var> .\n     *\n     * @param file                 the absolute path of the file\n     * @param form_data            an array of Name/Value pairs\n     * @param headers              additional headers\n     * @return                     a HTTPResponse structure containing the\n     *      response\n     * @exception ModuleException  if an exception is encountered in any module.\n     * @exception IOException      Description of the Exception\n     */\n    public HTTPResponse Post(String file, NVPair form_data[], NVPair headers[])\n        throws IOException, ModuleException\n    {\n        int idx;\n        for (idx = 0; idx < headers.length; idx++)\n        {\n            if (headers[idx].getName().equalsIgnoreCase(\"Content-type\"))\n            {\n                break;\n            }\n        }\n        if (idx == headers.length)\n        {\n            headers = Util.resizeArray(headers, idx + 1);\n            headers[idx] =\n                    new NVPair(\"Content-type\", \"application/x-www-form-urlencoded\");\n        }\n\n        return Post(file, Codecs.nv2query(form_data), headers);\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"afc16d717d9ed1a8e45371668ca6de674164d624","date":1103345442,"type":4,"author":"Otis Gospodnetic","isMerge":false,"pathNew":"/dev/null","pathOld":"sandbox/contributions/webcrawler-LARM/libs/HTTPClient-patch/HTTPClient/HTTPConnection#Post(String,NVPair[],NVPair[]).mjava","sourceNew":null,"sourceOld":"    /**\n     * POST's form-data to the specified file using the specified headers. The\n     * data is first urlencoded and then turned into a string of the form\n     * \"name1=value1&name2=value2\". If no <var>Content-type</var> header is\n     * given then one is added with a value of <var>\n     * application/x-www-form-urlencoded</var> .\n     *\n     * @param file                 the absolute path of the file\n     * @param form_data            an array of Name/Value pairs\n     * @param headers              additional headers\n     * @return                     a HTTPResponse structure containing the\n     *      response\n     * @exception ModuleException  if an exception is encountered in any module.\n     * @exception IOException      Description of the Exception\n     */\n    public HTTPResponse Post(String file, NVPair form_data[], NVPair headers[])\n        throws IOException, ModuleException\n    {\n        int idx;\n        for (idx = 0; idx < headers.length; idx++)\n        {\n            if (headers[idx].getName().equalsIgnoreCase(\"Content-type\"))\n            {\n                break;\n            }\n        }\n        if (idx == headers.length)\n        {\n            headers = Util.resizeArray(headers, idx + 1);\n            headers[idx] =\n                    new NVPair(\"Content-type\", \"application/x-www-form-urlencoded\");\n        }\n\n        return Post(file, Codecs.nv2query(form_data), headers);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"bc6055f4a2e8e9f9caaec2297010c9502480ed69":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"afc16d717d9ed1a8e45371668ca6de674164d624":["bc6055f4a2e8e9f9caaec2297010c9502480ed69"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["afc16d717d9ed1a8e45371668ca6de674164d624"]},"commit2Childs":{"bc6055f4a2e8e9f9caaec2297010c9502480ed69":["afc16d717d9ed1a8e45371668ca6de674164d624"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["bc6055f4a2e8e9f9caaec2297010c9502480ed69"],"afc16d717d9ed1a8e45371668ca6de674164d624":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}