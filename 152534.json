{"path":"lucene/contrib/analyzers/common/src/java/org/tartarus/snowball/ext/RomanianStemmer#stem().mjava","commits":[{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/contrib/analyzers/common/src/java/org/tartarus/snowball/ext/RomanianStemmer#stem().mjava","pathOld":"contrib/analyzers/common/src/java/org/tartarus/snowball/ext/RomanianStemmer#stem().mjava","sourceNew":"        public boolean stem() {\n            int v_1;\n            int v_2;\n            int v_3;\n            int v_4;\n            int v_5;\n            int v_6;\n            int v_7;\n            int v_8;\n            // (, line 225\n            // do, line 226\n            v_1 = cursor;\n            lab0: do {\n                // call prelude, line 226\n                if (!r_prelude())\n                {\n                    break lab0;\n                }\n            } while (false);\n            cursor = v_1;\n            // do, line 227\n            v_2 = cursor;\n            lab1: do {\n                // call mark_regions, line 227\n                if (!r_mark_regions())\n                {\n                    break lab1;\n                }\n            } while (false);\n            cursor = v_2;\n            // backwards, line 228\n            limit_backward = cursor; cursor = limit;\n            // (, line 228\n            // do, line 229\n            v_3 = limit - cursor;\n            lab2: do {\n                // call step_0, line 229\n                if (!r_step_0())\n                {\n                    break lab2;\n                }\n            } while (false);\n            cursor = limit - v_3;\n            // do, line 230\n            v_4 = limit - cursor;\n            lab3: do {\n                // call standard_suffix, line 230\n                if (!r_standard_suffix())\n                {\n                    break lab3;\n                }\n            } while (false);\n            cursor = limit - v_4;\n            // do, line 231\n            v_5 = limit - cursor;\n            lab4: do {\n                // (, line 231\n                // or, line 231\n                lab5: do {\n                    v_6 = limit - cursor;\n                    lab6: do {\n                        // Boolean test standard_suffix_removed, line 231\n                        if (!(B_standard_suffix_removed))\n                        {\n                            break lab6;\n                        }\n                        break lab5;\n                    } while (false);\n                    cursor = limit - v_6;\n                    // call verb_suffix, line 231\n                    if (!r_verb_suffix())\n                    {\n                        break lab4;\n                    }\n                } while (false);\n            } while (false);\n            cursor = limit - v_5;\n            // do, line 232\n            v_7 = limit - cursor;\n            lab7: do {\n                // call vowel_suffix, line 232\n                if (!r_vowel_suffix())\n                {\n                    break lab7;\n                }\n            } while (false);\n            cursor = limit - v_7;\n            cursor = limit_backward;            // do, line 234\n            v_8 = cursor;\n            lab8: do {\n                // call postlude, line 234\n                if (!r_postlude())\n                {\n                    break lab8;\n                }\n            } while (false);\n            cursor = v_8;\n            return true;\n        }\n\n","sourceOld":"        public boolean stem() {\n            int v_1;\n            int v_2;\n            int v_3;\n            int v_4;\n            int v_5;\n            int v_6;\n            int v_7;\n            int v_8;\n            // (, line 225\n            // do, line 226\n            v_1 = cursor;\n            lab0: do {\n                // call prelude, line 226\n                if (!r_prelude())\n                {\n                    break lab0;\n                }\n            } while (false);\n            cursor = v_1;\n            // do, line 227\n            v_2 = cursor;\n            lab1: do {\n                // call mark_regions, line 227\n                if (!r_mark_regions())\n                {\n                    break lab1;\n                }\n            } while (false);\n            cursor = v_2;\n            // backwards, line 228\n            limit_backward = cursor; cursor = limit;\n            // (, line 228\n            // do, line 229\n            v_3 = limit - cursor;\n            lab2: do {\n                // call step_0, line 229\n                if (!r_step_0())\n                {\n                    break lab2;\n                }\n            } while (false);\n            cursor = limit - v_3;\n            // do, line 230\n            v_4 = limit - cursor;\n            lab3: do {\n                // call standard_suffix, line 230\n                if (!r_standard_suffix())\n                {\n                    break lab3;\n                }\n            } while (false);\n            cursor = limit - v_4;\n            // do, line 231\n            v_5 = limit - cursor;\n            lab4: do {\n                // (, line 231\n                // or, line 231\n                lab5: do {\n                    v_6 = limit - cursor;\n                    lab6: do {\n                        // Boolean test standard_suffix_removed, line 231\n                        if (!(B_standard_suffix_removed))\n                        {\n                            break lab6;\n                        }\n                        break lab5;\n                    } while (false);\n                    cursor = limit - v_6;\n                    // call verb_suffix, line 231\n                    if (!r_verb_suffix())\n                    {\n                        break lab4;\n                    }\n                } while (false);\n            } while (false);\n            cursor = limit - v_5;\n            // do, line 232\n            v_7 = limit - cursor;\n            lab7: do {\n                // call vowel_suffix, line 232\n                if (!r_vowel_suffix())\n                {\n                    break lab7;\n                }\n            } while (false);\n            cursor = limit - v_7;\n            cursor = limit_backward;            // do, line 234\n            v_8 = cursor;\n            lab8: do {\n                // call postlude, line 234\n                if (!r_postlude())\n                {\n                    break lab8;\n                }\n            } while (false);\n            cursor = v_8;\n            return true;\n        }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0f080986da691a3bba7b757f43ab72cdc82b57ce","date":1273069619,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"modules/analysis/common/src/java/org/tartarus/snowball/ext/RomanianStemmer#stem().mjava","pathOld":"lucene/contrib/analyzers/common/src/java/org/tartarus/snowball/ext/RomanianStemmer#stem().mjava","sourceNew":"        public boolean stem() {\n            int v_1;\n            int v_2;\n            int v_3;\n            int v_4;\n            int v_5;\n            int v_6;\n            int v_7;\n            int v_8;\n            // (, line 225\n            // do, line 226\n            v_1 = cursor;\n            lab0: do {\n                // call prelude, line 226\n                if (!r_prelude())\n                {\n                    break lab0;\n                }\n            } while (false);\n            cursor = v_1;\n            // do, line 227\n            v_2 = cursor;\n            lab1: do {\n                // call mark_regions, line 227\n                if (!r_mark_regions())\n                {\n                    break lab1;\n                }\n            } while (false);\n            cursor = v_2;\n            // backwards, line 228\n            limit_backward = cursor; cursor = limit;\n            // (, line 228\n            // do, line 229\n            v_3 = limit - cursor;\n            lab2: do {\n                // call step_0, line 229\n                if (!r_step_0())\n                {\n                    break lab2;\n                }\n            } while (false);\n            cursor = limit - v_3;\n            // do, line 230\n            v_4 = limit - cursor;\n            lab3: do {\n                // call standard_suffix, line 230\n                if (!r_standard_suffix())\n                {\n                    break lab3;\n                }\n            } while (false);\n            cursor = limit - v_4;\n            // do, line 231\n            v_5 = limit - cursor;\n            lab4: do {\n                // (, line 231\n                // or, line 231\n                lab5: do {\n                    v_6 = limit - cursor;\n                    lab6: do {\n                        // Boolean test standard_suffix_removed, line 231\n                        if (!(B_standard_suffix_removed))\n                        {\n                            break lab6;\n                        }\n                        break lab5;\n                    } while (false);\n                    cursor = limit - v_6;\n                    // call verb_suffix, line 231\n                    if (!r_verb_suffix())\n                    {\n                        break lab4;\n                    }\n                } while (false);\n            } while (false);\n            cursor = limit - v_5;\n            // do, line 232\n            v_7 = limit - cursor;\n            lab7: do {\n                // call vowel_suffix, line 232\n                if (!r_vowel_suffix())\n                {\n                    break lab7;\n                }\n            } while (false);\n            cursor = limit - v_7;\n            cursor = limit_backward;            // do, line 234\n            v_8 = cursor;\n            lab8: do {\n                // call postlude, line 234\n                if (!r_postlude())\n                {\n                    break lab8;\n                }\n            } while (false);\n            cursor = v_8;\n            return true;\n        }\n\n","sourceOld":"        public boolean stem() {\n            int v_1;\n            int v_2;\n            int v_3;\n            int v_4;\n            int v_5;\n            int v_6;\n            int v_7;\n            int v_8;\n            // (, line 225\n            // do, line 226\n            v_1 = cursor;\n            lab0: do {\n                // call prelude, line 226\n                if (!r_prelude())\n                {\n                    break lab0;\n                }\n            } while (false);\n            cursor = v_1;\n            // do, line 227\n            v_2 = cursor;\n            lab1: do {\n                // call mark_regions, line 227\n                if (!r_mark_regions())\n                {\n                    break lab1;\n                }\n            } while (false);\n            cursor = v_2;\n            // backwards, line 228\n            limit_backward = cursor; cursor = limit;\n            // (, line 228\n            // do, line 229\n            v_3 = limit - cursor;\n            lab2: do {\n                // call step_0, line 229\n                if (!r_step_0())\n                {\n                    break lab2;\n                }\n            } while (false);\n            cursor = limit - v_3;\n            // do, line 230\n            v_4 = limit - cursor;\n            lab3: do {\n                // call standard_suffix, line 230\n                if (!r_standard_suffix())\n                {\n                    break lab3;\n                }\n            } while (false);\n            cursor = limit - v_4;\n            // do, line 231\n            v_5 = limit - cursor;\n            lab4: do {\n                // (, line 231\n                // or, line 231\n                lab5: do {\n                    v_6 = limit - cursor;\n                    lab6: do {\n                        // Boolean test standard_suffix_removed, line 231\n                        if (!(B_standard_suffix_removed))\n                        {\n                            break lab6;\n                        }\n                        break lab5;\n                    } while (false);\n                    cursor = limit - v_6;\n                    // call verb_suffix, line 231\n                    if (!r_verb_suffix())\n                    {\n                        break lab4;\n                    }\n                } while (false);\n            } while (false);\n            cursor = limit - v_5;\n            // do, line 232\n            v_7 = limit - cursor;\n            lab7: do {\n                // call vowel_suffix, line 232\n                if (!r_vowel_suffix())\n                {\n                    break lab7;\n                }\n            } while (false);\n            cursor = limit - v_7;\n            cursor = limit_backward;            // do, line 234\n            v_8 = cursor;\n            lab8: do {\n                // call postlude, line 234\n                if (!r_postlude())\n                {\n                    break lab8;\n                }\n            } while (false);\n            cursor = v_8;\n            return true;\n        }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"0f080986da691a3bba7b757f43ab72cdc82b57ce":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["0f080986da691a3bba7b757f43ab72cdc82b57ce"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"0f080986da691a3bba7b757f43ab72cdc82b57ce":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["0f080986da691a3bba7b757f43ab72cdc82b57ce"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}