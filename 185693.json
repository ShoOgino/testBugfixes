{"path":"lucene/src/test-framework/org/apache/lucene/store/MockIndexInputWrapper#clone().mjava","commits":[{"id":"f0b9dc55f42953d6740cddbc92cb0d19fe1ba0ce","date":1297021734,"type":1,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/src/test-framework/org/apache/lucene/store/MockIndexInputWrapper#clone().mjava","pathOld":"lucene/src/test/org/apache/lucene/store/MockIndexInputWrapper#clone().mjava","sourceNew":"  @Override\n  public Object clone() {\n    IndexInput iiclone = (IndexInput) delegate.clone();\n    MockIndexInputWrapper clone = new MockIndexInputWrapper(dir, name, iiclone);\n    clone.isClone = true;\n    // Pending resolution on LUCENE-686 we may want to\n    // uncomment this code so that we also track that all\n    // clones get closed:\n    /*\n    synchronized(dir.openFiles) {\n      if (dir.openFiles.containsKey(name)) {\n        Integer v = (Integer) dir.openFiles.get(name);\n        v = Integer.valueOf(v.intValue()+1);\n        dir.openFiles.put(name, v);\n      } else {\n        throw new RuntimeException(\"BUG: cloned file was not open?\");\n      }\n    }\n    */\n    return clone;\n  }\n\n","sourceOld":"  @Override\n  public Object clone() {\n    IndexInput iiclone = (IndexInput) delegate.clone();\n    MockIndexInputWrapper clone = new MockIndexInputWrapper(dir, name, iiclone);\n    clone.isClone = true;\n    // Pending resolution on LUCENE-686 we may want to\n    // uncomment this code so that we also track that all\n    // clones get closed:\n    /*\n    synchronized(dir.openFiles) {\n      if (dir.openFiles.containsKey(name)) {\n        Integer v = (Integer) dir.openFiles.get(name);\n        v = Integer.valueOf(v.intValue()+1);\n        dir.openFiles.put(name, v);\n      } else {\n        throw new RuntimeException(\"BUG: cloned file was not open?\");\n      }\n    }\n    */\n    return clone;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"29ef99d61cda9641b6250bf9567329a6e65f901d","date":1297244127,"type":1,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test-framework/org/apache/lucene/store/MockIndexInputWrapper#clone().mjava","pathOld":"lucene/src/test/org/apache/lucene/store/MockIndexInputWrapper#clone().mjava","sourceNew":"  @Override\n  public Object clone() {\n    IndexInput iiclone = (IndexInput) delegate.clone();\n    MockIndexInputWrapper clone = new MockIndexInputWrapper(dir, name, iiclone);\n    clone.isClone = true;\n    // Pending resolution on LUCENE-686 we may want to\n    // uncomment this code so that we also track that all\n    // clones get closed:\n    /*\n    synchronized(dir.openFiles) {\n      if (dir.openFiles.containsKey(name)) {\n        Integer v = (Integer) dir.openFiles.get(name);\n        v = Integer.valueOf(v.intValue()+1);\n        dir.openFiles.put(name, v);\n      } else {\n        throw new RuntimeException(\"BUG: cloned file was not open?\");\n      }\n    }\n    */\n    return clone;\n  }\n\n","sourceOld":"  @Override\n  public Object clone() {\n    IndexInput iiclone = (IndexInput) delegate.clone();\n    MockIndexInputWrapper clone = new MockIndexInputWrapper(dir, name, iiclone);\n    clone.isClone = true;\n    // Pending resolution on LUCENE-686 we may want to\n    // uncomment this code so that we also track that all\n    // clones get closed:\n    /*\n    synchronized(dir.openFiles) {\n      if (dir.openFiles.containsKey(name)) {\n        Integer v = (Integer) dir.openFiles.get(name);\n        v = Integer.valueOf(v.intValue()+1);\n        dir.openFiles.put(name, v);\n      } else {\n        throw new RuntimeException(\"BUG: cloned file was not open?\");\n      }\n    }\n    */\n    return clone;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bde51b089eb7f86171eb3406e38a274743f9b7ac","date":1298336439,"type":1,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/test-framework/org/apache/lucene/store/MockIndexInputWrapper#clone().mjava","pathOld":"lucene/src/test/org/apache/lucene/store/MockIndexInputWrapper#clone().mjava","sourceNew":"  @Override\n  public Object clone() {\n    IndexInput iiclone = (IndexInput) delegate.clone();\n    MockIndexInputWrapper clone = new MockIndexInputWrapper(dir, name, iiclone);\n    clone.isClone = true;\n    // Pending resolution on LUCENE-686 we may want to\n    // uncomment this code so that we also track that all\n    // clones get closed:\n    /*\n    synchronized(dir.openFiles) {\n      if (dir.openFiles.containsKey(name)) {\n        Integer v = (Integer) dir.openFiles.get(name);\n        v = Integer.valueOf(v.intValue()+1);\n        dir.openFiles.put(name, v);\n      } else {\n        throw new RuntimeException(\"BUG: cloned file was not open?\");\n      }\n    }\n    */\n    return clone;\n  }\n\n","sourceOld":"  @Override\n  public Object clone() {\n    IndexInput iiclone = (IndexInput) delegate.clone();\n    MockIndexInputWrapper clone = new MockIndexInputWrapper(dir, name, iiclone);\n    clone.isClone = true;\n    // Pending resolution on LUCENE-686 we may want to\n    // uncomment this code so that we also track that all\n    // clones get closed:\n    /*\n    synchronized(dir.openFiles) {\n      if (dir.openFiles.containsKey(name)) {\n        Integer v = (Integer) dir.openFiles.get(name);\n        v = Integer.valueOf(v.intValue()+1);\n        dir.openFiles.put(name, v);\n      } else {\n        throw new RuntimeException(\"BUG: cloned file was not open?\");\n      }\n    }\n    */\n    return clone;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"77d4998e63ada9336818d1ebaacc362168f473e8","date":1318620209,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/test-framework/org/apache/lucene/store/MockIndexInputWrapper#clone().mjava","pathOld":"lucene/src/test-framework/org/apache/lucene/store/MockIndexInputWrapper#clone().mjava","sourceNew":"  @Override\n  public Object clone() {\n    dir.inputCloneCount.incrementAndGet();\n    IndexInput iiclone = (IndexInput) delegate.clone();\n    MockIndexInputWrapper clone = new MockIndexInputWrapper(dir, name, iiclone);\n    clone.isClone = true;\n    // Pending resolution on LUCENE-686 we may want to\n    // uncomment this code so that we also track that all\n    // clones get closed:\n    /*\n    synchronized(dir.openFiles) {\n      if (dir.openFiles.containsKey(name)) {\n        Integer v = (Integer) dir.openFiles.get(name);\n        v = Integer.valueOf(v.intValue()+1);\n        dir.openFiles.put(name, v);\n      } else {\n        throw new RuntimeException(\"BUG: cloned file was not open?\");\n      }\n    }\n    */\n    return clone;\n  }\n\n","sourceOld":"  @Override\n  public Object clone() {\n    IndexInput iiclone = (IndexInput) delegate.clone();\n    MockIndexInputWrapper clone = new MockIndexInputWrapper(dir, name, iiclone);\n    clone.isClone = true;\n    // Pending resolution on LUCENE-686 we may want to\n    // uncomment this code so that we also track that all\n    // clones get closed:\n    /*\n    synchronized(dir.openFiles) {\n      if (dir.openFiles.containsKey(name)) {\n        Integer v = (Integer) dir.openFiles.get(name);\n        v = Integer.valueOf(v.intValue()+1);\n        dir.openFiles.put(name, v);\n      } else {\n        throw new RuntimeException(\"BUG: cloned file was not open?\");\n      }\n    }\n    */\n    return clone;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"63cf2ccc69527b763ccb5ab87417cbb96556ff13","date":1319745251,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test-framework/org/apache/lucene/store/MockIndexInputWrapper#clone().mjava","pathOld":"lucene/src/test-framework/org/apache/lucene/store/MockIndexInputWrapper#clone().mjava","sourceNew":"  @Override\n  public Object clone() {\n    ensureOpen();\n    dir.inputCloneCount.incrementAndGet();\n    IndexInput iiclone = (IndexInput) delegate.clone();\n    MockIndexInputWrapper clone = new MockIndexInputWrapper(dir, name, iiclone);\n    clone.isClone = true;\n    // Pending resolution on LUCENE-686 we may want to\n    // uncomment this code so that we also track that all\n    // clones get closed:\n    /*\n    synchronized(dir.openFiles) {\n      if (dir.openFiles.containsKey(name)) {\n        Integer v = (Integer) dir.openFiles.get(name);\n        v = Integer.valueOf(v.intValue()+1);\n        dir.openFiles.put(name, v);\n      } else {\n        throw new RuntimeException(\"BUG: cloned file was not open?\");\n      }\n    }\n    */\n    return clone;\n  }\n\n","sourceOld":"  @Override\n  public Object clone() {\n    dir.inputCloneCount.incrementAndGet();\n    IndexInput iiclone = (IndexInput) delegate.clone();\n    MockIndexInputWrapper clone = new MockIndexInputWrapper(dir, name, iiclone);\n    clone.isClone = true;\n    // Pending resolution on LUCENE-686 we may want to\n    // uncomment this code so that we also track that all\n    // clones get closed:\n    /*\n    synchronized(dir.openFiles) {\n      if (dir.openFiles.containsKey(name)) {\n        Integer v = (Integer) dir.openFiles.get(name);\n        v = Integer.valueOf(v.intValue()+1);\n        dir.openFiles.put(name, v);\n      } else {\n        throw new RuntimeException(\"BUG: cloned file was not open?\");\n      }\n    }\n    */\n    return clone;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7b91922b55d15444d554721b352861d028eb8278","date":1320421415,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test-framework/java/org/apache/lucene/store/MockIndexInputWrapper#clone().mjava","pathOld":"lucene/src/test-framework/org/apache/lucene/store/MockIndexInputWrapper#clone().mjava","sourceNew":"  @Override\n  public Object clone() {\n    ensureOpen();\n    dir.inputCloneCount.incrementAndGet();\n    IndexInput iiclone = (IndexInput) delegate.clone();\n    MockIndexInputWrapper clone = new MockIndexInputWrapper(dir, name, iiclone);\n    clone.isClone = true;\n    // Pending resolution on LUCENE-686 we may want to\n    // uncomment this code so that we also track that all\n    // clones get closed:\n    /*\n    synchronized(dir.openFiles) {\n      if (dir.openFiles.containsKey(name)) {\n        Integer v = (Integer) dir.openFiles.get(name);\n        v = Integer.valueOf(v.intValue()+1);\n        dir.openFiles.put(name, v);\n      } else {\n        throw new RuntimeException(\"BUG: cloned file was not open?\");\n      }\n    }\n    */\n    return clone;\n  }\n\n","sourceOld":"  @Override\n  public Object clone() {\n    ensureOpen();\n    dir.inputCloneCount.incrementAndGet();\n    IndexInput iiclone = (IndexInput) delegate.clone();\n    MockIndexInputWrapper clone = new MockIndexInputWrapper(dir, name, iiclone);\n    clone.isClone = true;\n    // Pending resolution on LUCENE-686 we may want to\n    // uncomment this code so that we also track that all\n    // clones get closed:\n    /*\n    synchronized(dir.openFiles) {\n      if (dir.openFiles.containsKey(name)) {\n        Integer v = (Integer) dir.openFiles.get(name);\n        v = Integer.valueOf(v.intValue()+1);\n        dir.openFiles.put(name, v);\n      } else {\n        throw new RuntimeException(\"BUG: cloned file was not open?\");\n      }\n    }\n    */\n    return clone;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"7b91922b55d15444d554721b352861d028eb8278":["63cf2ccc69527b763ccb5ab87417cbb96556ff13"],"63cf2ccc69527b763ccb5ab87417cbb96556ff13":["77d4998e63ada9336818d1ebaacc362168f473e8"],"29ef99d61cda9641b6250bf9567329a6e65f901d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","f0b9dc55f42953d6740cddbc92cb0d19fe1ba0ce"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"77d4998e63ada9336818d1ebaacc362168f473e8":["f0b9dc55f42953d6740cddbc92cb0d19fe1ba0ce"],"bde51b089eb7f86171eb3406e38a274743f9b7ac":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","f0b9dc55f42953d6740cddbc92cb0d19fe1ba0ce"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["7b91922b55d15444d554721b352861d028eb8278"],"f0b9dc55f42953d6740cddbc92cb0d19fe1ba0ce":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"7b91922b55d15444d554721b352861d028eb8278":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"63cf2ccc69527b763ccb5ab87417cbb96556ff13":["7b91922b55d15444d554721b352861d028eb8278"],"29ef99d61cda9641b6250bf9567329a6e65f901d":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["29ef99d61cda9641b6250bf9567329a6e65f901d","bde51b089eb7f86171eb3406e38a274743f9b7ac","f0b9dc55f42953d6740cddbc92cb0d19fe1ba0ce"],"77d4998e63ada9336818d1ebaacc362168f473e8":["63cf2ccc69527b763ccb5ab87417cbb96556ff13"],"bde51b089eb7f86171eb3406e38a274743f9b7ac":[],"f0b9dc55f42953d6740cddbc92cb0d19fe1ba0ce":["29ef99d61cda9641b6250bf9567329a6e65f901d","77d4998e63ada9336818d1ebaacc362168f473e8","bde51b089eb7f86171eb3406e38a274743f9b7ac"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["29ef99d61cda9641b6250bf9567329a6e65f901d","bde51b089eb7f86171eb3406e38a274743f9b7ac","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}