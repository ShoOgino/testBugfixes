{"path":"contrib/analyzers/common/src/java/org/tartarus/snowball/ext/FinnishStemmer#r_possessive().mjava","commits":[{"id":"a5aa159e1ac4009d23cea92797d3804da4f5e7ad","date":1264041909,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"contrib/analyzers/common/src/java/org/tartarus/snowball/ext/FinnishStemmer#r_possessive().mjava","pathOld":"contrib/snowball/src/java/org/tartarus/snowball/ext/FinnishStemmer#r_possessive().mjava","sourceNew":"        private boolean r_possessive() {\n            int among_var;\n            int v_1;\n            int v_2;\n            int v_3;\n            // (, line 68\n            // setlimit, line 69\n            v_1 = limit - cursor;\n            // tomark, line 69\n            if (cursor < I_p1)\n            {\n                return false;\n            }\n            cursor = I_p1;\n            v_2 = limit_backward;\n            limit_backward = cursor;\n            cursor = limit - v_1;\n            // (, line 69\n            // [, line 69\n            ket = cursor;\n            // substring, line 69\n            among_var = find_among_b(a_4, 9);\n            if (among_var == 0)\n            {\n                limit_backward = v_2;\n                return false;\n            }\n            // ], line 69\n            bra = cursor;\n            limit_backward = v_2;\n            switch(among_var) {\n                case 0:\n                    return false;\n                case 1:\n                    // (, line 72\n                    // not, line 72\n                    {\n                        v_3 = limit - cursor;\n                        lab0: do {\n                            // literal, line 72\n                            if (!(eq_s_b(1, \"k\")))\n                            {\n                                break lab0;\n                            }\n                            return false;\n                        } while (false);\n                        cursor = limit - v_3;\n                    }\n                    // delete, line 72\n                    slice_del();\n                    break;\n                case 2:\n                    // (, line 74\n                    // delete, line 74\n                    slice_del();\n                    // [, line 74\n                    ket = cursor;\n                    // literal, line 74\n                    if (!(eq_s_b(3, \"kse\")))\n                    {\n                        return false;\n                    }\n                    // ], line 74\n                    bra = cursor;\n                    // <-, line 74\n                    slice_from(\"ksi\");\n                    break;\n                case 3:\n                    // (, line 78\n                    // delete, line 78\n                    slice_del();\n                    break;\n                case 4:\n                    // (, line 81\n                    // among, line 81\n                    if (find_among_b(a_1, 6) == 0)\n                    {\n                        return false;\n                    }\n                    // delete, line 81\n                    slice_del();\n                    break;\n                case 5:\n                    // (, line 83\n                    // among, line 83\n                    if (find_among_b(a_2, 6) == 0)\n                    {\n                        return false;\n                    }\n                    // delete, line 84\n                    slice_del();\n                    break;\n                case 6:\n                    // (, line 86\n                    // among, line 86\n                    if (find_among_b(a_3, 2) == 0)\n                    {\n                        return false;\n                    }\n                    // delete, line 86\n                    slice_del();\n                    break;\n            }\n            return true;\n        }\n\n","sourceOld":"        private boolean r_possessive() {\n            int among_var;\n            int v_1;\n            int v_2;\n            int v_3;\n            // (, line 68\n            // setlimit, line 69\n            v_1 = limit - cursor;\n            // tomark, line 69\n            if (cursor < I_p1)\n            {\n                return false;\n            }\n            cursor = I_p1;\n            v_2 = limit_backward;\n            limit_backward = cursor;\n            cursor = limit - v_1;\n            // (, line 69\n            // [, line 69\n            ket = cursor;\n            // substring, line 69\n            among_var = find_among_b(a_4, 9);\n            if (among_var == 0)\n            {\n                limit_backward = v_2;\n                return false;\n            }\n            // ], line 69\n            bra = cursor;\n            limit_backward = v_2;\n            switch(among_var) {\n                case 0:\n                    return false;\n                case 1:\n                    // (, line 72\n                    // not, line 72\n                    {\n                        v_3 = limit - cursor;\n                        lab0: do {\n                            // literal, line 72\n                            if (!(eq_s_b(1, \"k\")))\n                            {\n                                break lab0;\n                            }\n                            return false;\n                        } while (false);\n                        cursor = limit - v_3;\n                    }\n                    // delete, line 72\n                    slice_del();\n                    break;\n                case 2:\n                    // (, line 74\n                    // delete, line 74\n                    slice_del();\n                    // [, line 74\n                    ket = cursor;\n                    // literal, line 74\n                    if (!(eq_s_b(3, \"kse\")))\n                    {\n                        return false;\n                    }\n                    // ], line 74\n                    bra = cursor;\n                    // <-, line 74\n                    slice_from(\"ksi\");\n                    break;\n                case 3:\n                    // (, line 78\n                    // delete, line 78\n                    slice_del();\n                    break;\n                case 4:\n                    // (, line 81\n                    // among, line 81\n                    if (find_among_b(a_1, 6) == 0)\n                    {\n                        return false;\n                    }\n                    // delete, line 81\n                    slice_del();\n                    break;\n                case 5:\n                    // (, line 83\n                    // among, line 83\n                    if (find_among_b(a_2, 6) == 0)\n                    {\n                        return false;\n                    }\n                    // delete, line 84\n                    slice_del();\n                    break;\n                case 6:\n                    // (, line 86\n                    // among, line 86\n                    if (find_among_b(a_3, 2) == 0)\n                    {\n                        return false;\n                    }\n                    // delete, line 86\n                    slice_del();\n                    break;\n            }\n            return true;\n        }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/contrib/analyzers/common/src/java/org/tartarus/snowball/ext/FinnishStemmer#r_possessive().mjava","pathOld":"contrib/analyzers/common/src/java/org/tartarus/snowball/ext/FinnishStemmer#r_possessive().mjava","sourceNew":"        private boolean r_possessive() {\n            int among_var;\n            int v_1;\n            int v_2;\n            int v_3;\n            // (, line 68\n            // setlimit, line 69\n            v_1 = limit - cursor;\n            // tomark, line 69\n            if (cursor < I_p1)\n            {\n                return false;\n            }\n            cursor = I_p1;\n            v_2 = limit_backward;\n            limit_backward = cursor;\n            cursor = limit - v_1;\n            // (, line 69\n            // [, line 69\n            ket = cursor;\n            // substring, line 69\n            among_var = find_among_b(a_4, 9);\n            if (among_var == 0)\n            {\n                limit_backward = v_2;\n                return false;\n            }\n            // ], line 69\n            bra = cursor;\n            limit_backward = v_2;\n            switch(among_var) {\n                case 0:\n                    return false;\n                case 1:\n                    // (, line 72\n                    // not, line 72\n                    {\n                        v_3 = limit - cursor;\n                        lab0: do {\n                            // literal, line 72\n                            if (!(eq_s_b(1, \"k\")))\n                            {\n                                break lab0;\n                            }\n                            return false;\n                        } while (false);\n                        cursor = limit - v_3;\n                    }\n                    // delete, line 72\n                    slice_del();\n                    break;\n                case 2:\n                    // (, line 74\n                    // delete, line 74\n                    slice_del();\n                    // [, line 74\n                    ket = cursor;\n                    // literal, line 74\n                    if (!(eq_s_b(3, \"kse\")))\n                    {\n                        return false;\n                    }\n                    // ], line 74\n                    bra = cursor;\n                    // <-, line 74\n                    slice_from(\"ksi\");\n                    break;\n                case 3:\n                    // (, line 78\n                    // delete, line 78\n                    slice_del();\n                    break;\n                case 4:\n                    // (, line 81\n                    // among, line 81\n                    if (find_among_b(a_1, 6) == 0)\n                    {\n                        return false;\n                    }\n                    // delete, line 81\n                    slice_del();\n                    break;\n                case 5:\n                    // (, line 83\n                    // among, line 83\n                    if (find_among_b(a_2, 6) == 0)\n                    {\n                        return false;\n                    }\n                    // delete, line 84\n                    slice_del();\n                    break;\n                case 6:\n                    // (, line 86\n                    // among, line 86\n                    if (find_among_b(a_3, 2) == 0)\n                    {\n                        return false;\n                    }\n                    // delete, line 86\n                    slice_del();\n                    break;\n            }\n            return true;\n        }\n\n","sourceOld":"        private boolean r_possessive() {\n            int among_var;\n            int v_1;\n            int v_2;\n            int v_3;\n            // (, line 68\n            // setlimit, line 69\n            v_1 = limit - cursor;\n            // tomark, line 69\n            if (cursor < I_p1)\n            {\n                return false;\n            }\n            cursor = I_p1;\n            v_2 = limit_backward;\n            limit_backward = cursor;\n            cursor = limit - v_1;\n            // (, line 69\n            // [, line 69\n            ket = cursor;\n            // substring, line 69\n            among_var = find_among_b(a_4, 9);\n            if (among_var == 0)\n            {\n                limit_backward = v_2;\n                return false;\n            }\n            // ], line 69\n            bra = cursor;\n            limit_backward = v_2;\n            switch(among_var) {\n                case 0:\n                    return false;\n                case 1:\n                    // (, line 72\n                    // not, line 72\n                    {\n                        v_3 = limit - cursor;\n                        lab0: do {\n                            // literal, line 72\n                            if (!(eq_s_b(1, \"k\")))\n                            {\n                                break lab0;\n                            }\n                            return false;\n                        } while (false);\n                        cursor = limit - v_3;\n                    }\n                    // delete, line 72\n                    slice_del();\n                    break;\n                case 2:\n                    // (, line 74\n                    // delete, line 74\n                    slice_del();\n                    // [, line 74\n                    ket = cursor;\n                    // literal, line 74\n                    if (!(eq_s_b(3, \"kse\")))\n                    {\n                        return false;\n                    }\n                    // ], line 74\n                    bra = cursor;\n                    // <-, line 74\n                    slice_from(\"ksi\");\n                    break;\n                case 3:\n                    // (, line 78\n                    // delete, line 78\n                    slice_del();\n                    break;\n                case 4:\n                    // (, line 81\n                    // among, line 81\n                    if (find_among_b(a_1, 6) == 0)\n                    {\n                        return false;\n                    }\n                    // delete, line 81\n                    slice_del();\n                    break;\n                case 5:\n                    // (, line 83\n                    // among, line 83\n                    if (find_among_b(a_2, 6) == 0)\n                    {\n                        return false;\n                    }\n                    // delete, line 84\n                    slice_del();\n                    break;\n                case 6:\n                    // (, line 86\n                    // among, line 86\n                    if (find_among_b(a_3, 2) == 0)\n                    {\n                        return false;\n                    }\n                    // delete, line 86\n                    slice_del();\n                    break;\n            }\n            return true;\n        }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a5aa159e1ac4009d23cea92797d3804da4f5e7ad":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a5aa159e1ac4009d23cea92797d3804da4f5e7ad"]},"commit2Childs":{"a5aa159e1ac4009d23cea92797d3804da4f5e7ad":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["a5aa159e1ac4009d23cea92797d3804da4f5e7ad"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}