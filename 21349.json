{"path":"src/java/org/apache/lucene/util/PriorityQueue#adjustTop().mjava","commits":[{"id":"91109046a59c58ee0ee5d0d2767b08d1f30d6702","date":1000830588,"type":0,"author":"Jason van Zyl","isMerge":false,"pathNew":"src/java/org/apache/lucene/util/PriorityQueue#adjustTop().mjava","pathOld":"/dev/null","sourceNew":"  /** Should be called when the Object at top changes values.  Still log(n)\n   * worst case, but it's at least twice as fast to <pre>\n   *  { pq.top().change(); pq.adjustTop(); }\n   * </pre> instead of <pre>\n   *  { o = pq.pop(); o.change(); pq.push(o); }\n   * </pre>\n   */\n  public final void adjustTop() {\n    downHeap();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"17563f8c3ca7e14d56ce4dcbb3fe9b042ba613cc","date":1241865401,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/util/PriorityQueue#adjustTop().mjava","pathOld":"src/java/org/apache/lucene/util/PriorityQueue#adjustTop().mjava","sourceNew":"  /**\n   * Should be called when the Object at top changes values. Still log(n) worst\n   * case, but it's at least twice as fast to\n   * \n   * <pre>\n   * pq.top().change();\n   * pq.adjustTop();\n   * </pre>\n   * \n   * instead of\n   * \n   * <pre>\n   * o = pq.pop();\n   * o.change();\n   * pq.push(o);\n   * </pre>\n   * \n   * @deprecated use {@link #updateTop()} which returns the new top element and\n   *             saves an additional call to {@link #top()}.\n   */\n  public final void adjustTop() {\n    downHeap();\n  }\n\n","sourceOld":"  /** Should be called when the Object at top changes values.  Still log(n)\n   * worst case, but it's at least twice as fast to <pre>\n   *  { pq.top().change(); pq.adjustTop(); }\n   * </pre> instead of <pre>\n   *  { o = pq.pop(); o.change(); pq.push(o); }\n   * </pre>\n   */\n  public final void adjustTop() {\n    downHeap();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0731e137bcbb58121034de6ddaa67332fbe6e5d1","date":1255233265,"type":4,"author":"Michael Busch","isMerge":false,"pathNew":"/dev/null","pathOld":"src/java/org/apache/lucene/util/PriorityQueue#adjustTop().mjava","sourceNew":null,"sourceOld":"  /**\n   * Should be called when the Object at top changes values. Still log(n) worst\n   * case, but it's at least twice as fast to\n   * \n   * <pre>\n   * pq.top().change();\n   * pq.adjustTop();\n   * </pre>\n   * \n   * instead of\n   * \n   * <pre>\n   * o = pq.pop();\n   * o.change();\n   * pq.push(o);\n   * </pre>\n   * \n   * @deprecated use {@link #updateTop()} which returns the new top element and\n   *             saves an additional call to {@link #top()}.\n   */\n  public final void adjustTop() {\n    downHeap();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"17563f8c3ca7e14d56ce4dcbb3fe9b042ba613cc":["91109046a59c58ee0ee5d0d2767b08d1f30d6702"],"91109046a59c58ee0ee5d0d2767b08d1f30d6702":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"0731e137bcbb58121034de6ddaa67332fbe6e5d1":["17563f8c3ca7e14d56ce4dcbb3fe9b042ba613cc"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["0731e137bcbb58121034de6ddaa67332fbe6e5d1"]},"commit2Childs":{"17563f8c3ca7e14d56ce4dcbb3fe9b042ba613cc":["0731e137bcbb58121034de6ddaa67332fbe6e5d1"],"91109046a59c58ee0ee5d0d2767b08d1f30d6702":["17563f8c3ca7e14d56ce4dcbb3fe9b042ba613cc"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["91109046a59c58ee0ee5d0d2767b08d1f30d6702"],"0731e137bcbb58121034de6ddaa67332fbe6e5d1":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}