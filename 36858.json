{"path":"modules/facet/src/examples/org/apache/lucene/facet/example/merge/TaxonomyMergeUtils#merge(Directory,Directory,IndexWriter,DirectoryTaxonomyWriter).mjava","commits":[{"id":"ea469eab8fd0f3032f4fcde1c644a721e8309d3b","date":1320301582,"type":1,"author":"Shai Erera","isMerge":false,"pathNew":"modules/facet/src/examples/org/apache/lucene/facet/example/merge/TaxonomyMergeUtils#merge(Directory,Directory,IndexWriter,DirectoryTaxonomyWriter).mjava","pathOld":"modules/facet/src/examples/org/apache/lucene/facet/example/merge/TaxonomyMergeUtils#merge(Directory,Directory,IndexWriter,LuceneTaxonomyWriter).mjava","sourceNew":"  /**\n   * Merges the given taxonomy and index directories and commits the changes to\n   * the given writers. This method uses {@link MemoryOrdinalMap} to store the\n   * mapped ordinals. If you cannot afford the memory, you can use\n   * {@link #merge(Directory, Directory, DirectoryTaxonomyWriter.OrdinalMap, IndexWriter, DirectoryTaxonomyWriter)}\n   * by passing {@link DiskOrdinalMap}.\n   * \n   * @see #merge(Directory, Directory, DirectoryTaxonomyWriter.OrdinalMap, IndexWriter, DirectoryTaxonomyWriter)\n   */\n  public static void merge(Directory srcIndexDir, Directory srcTaxDir,\n                            IndexWriter destIndexWriter, \n                            DirectoryTaxonomyWriter destTaxWriter) throws IOException {\n    merge(srcIndexDir, srcTaxDir, new MemoryOrdinalMap(), destIndexWriter, destTaxWriter);\n  }\n\n","sourceOld":"  /**\n   * Merges the given taxonomy and index directories and commits the changes to\n   * the given writers. This method uses {@link MemoryOrdinalMap} to store the\n   * mapped ordinals. If you cannot afford the memory, you can use\n   * {@link #merge(Directory, Directory, LuceneTaxonomyWriter.OrdinalMap, IndexWriter, LuceneTaxonomyWriter)}\n   * by passing {@link DiskOrdinalMap}.\n   * \n   * @see #merge(Directory, Directory, LuceneTaxonomyWriter.OrdinalMap, IndexWriter, LuceneTaxonomyWriter)\n   */\n  public static void merge(Directory srcIndexDir, Directory srcTaxDir,\n                            IndexWriter destIndexWriter, \n                            LuceneTaxonomyWriter destTaxWriter) throws IOException {\n    merge(srcIndexDir, srcTaxDir, new MemoryOrdinalMap(), destIndexWriter, destTaxWriter);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/facet/src/examples/org/apache/lucene/facet/example/merge/TaxonomyMergeUtils#merge(Directory,Directory,IndexWriter,DirectoryTaxonomyWriter).mjava","pathOld":"modules/facet/src/examples/org/apache/lucene/facet/example/merge/TaxonomyMergeUtils#merge(Directory,Directory,IndexWriter,DirectoryTaxonomyWriter).mjava","sourceNew":"  /**\n   * Merges the given taxonomy and index directories and commits the changes to\n   * the given writers. This method uses {@link MemoryOrdinalMap} to store the\n   * mapped ordinals. If you cannot afford the memory, you can use\n   * {@link #merge(Directory, Directory, DirectoryTaxonomyWriter.OrdinalMap, IndexWriter, DirectoryTaxonomyWriter)}\n   * by passing {@link DiskOrdinalMap}.\n   * \n   * @see #merge(Directory, Directory, DirectoryTaxonomyWriter.OrdinalMap, IndexWriter, DirectoryTaxonomyWriter)\n   */\n  public static void merge(Directory srcIndexDir, Directory srcTaxDir,\n                            IndexWriter destIndexWriter, \n                            DirectoryTaxonomyWriter destTaxWriter) throws IOException {\n    merge(srcIndexDir, srcTaxDir, new MemoryOrdinalMap(), destIndexWriter, destTaxWriter);\n  }\n\n","sourceOld":"  /**\n   * Merges the given taxonomy and index directories and commits the changes to\n   * the given writers. This method uses {@link MemoryOrdinalMap} to store the\n   * mapped ordinals. If you cannot afford the memory, you can use\n   * {@link #merge(Directory, Directory, DirectoryTaxonomyWriter.OrdinalMap, IndexWriter, DirectoryTaxonomyWriter)}\n   * by passing {@link DiskOrdinalMap}.\n   * \n   * @see #merge(Directory, Directory, DirectoryTaxonomyWriter.OrdinalMap, IndexWriter, DirectoryTaxonomyWriter)\n   */\n  public static void merge(Directory srcIndexDir, Directory srcTaxDir,\n                            IndexWriter destIndexWriter, \n                            DirectoryTaxonomyWriter destTaxWriter) throws IOException {\n    merge(srcIndexDir, srcTaxDir, new MemoryOrdinalMap(), destIndexWriter, destTaxWriter);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["ea469eab8fd0f3032f4fcde1c644a721e8309d3b"],"ea469eab8fd0f3032f4fcde1c644a721e8309d3b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b89678825b68eccaf09e6ab71675fc0b0af1e099"]},"commit2Childs":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"ea469eab8fd0f3032f4fcde1c644a721e8309d3b":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["ea469eab8fd0f3032f4fcde1c644a721e8309d3b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}