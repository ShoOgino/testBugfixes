{"path":"lucene/test-framework/src/java/org/apache/lucene/util/automaton/AutomatonTestUtil#assertNoDetachedStates(LightAutomaton).mjava","commits":[{"id":"a2de8b489026711e8edde133418a7cacfd2ce4d3","date":1402528930,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/util/automaton/AutomatonTestUtil#assertNoDetachedStates(LightAutomaton).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Checks that an automaton has no detached states that are unreachable\n   * from the initial state.\n   */\n  public static void assertNoDetachedStates(LightAutomaton a) {\n    LightAutomaton a2 = BasicOperations.removeDeadTransitions(a);\n    assert a.getNumStates() == a2.getNumStates() : \"automaton has \" + (a.getNumStates() - a2.getNumStates()) + \" detached states\";\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a67285d1a68175d877eb9fd1624fccad3db028ff","date":1402779028,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/util/automaton/AutomatonTestUtil#assertNoDetachedStates(LightAutomaton).mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/util/automaton/AutomatonTestUtil#assertNoDetachedStates(LightAutomaton).mjava","sourceNew":"  /**\n   * Checks that an automaton has no detached states that are unreachable\n   * from the initial state.\n   */\n  public static void assertNoDetachedStates(LightAutomaton a) {\n    LightAutomaton a2 = BasicOperations.removeDeadStates(a);\n    assert a.getNumStates() == a2.getNumStates() : \"automaton has \" + (a.getNumStates() - a2.getNumStates()) + \" detached states\";\n  }\n\n","sourceOld":"  /**\n   * Checks that an automaton has no detached states that are unreachable\n   * from the initial state.\n   */\n  public static void assertNoDetachedStates(LightAutomaton a) {\n    LightAutomaton a2 = BasicOperations.removeDeadTransitions(a);\n    assert a.getNumStates() == a2.getNumStates() : \"automaton has \" + (a.getNumStates() - a2.getNumStates()) + \" detached states\";\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4ca1c732df8923f5624f6c06b1dcca9e69d98c96","date":1402957391,"type":5,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/util/automaton/AutomatonTestUtil#assertNoDetachedStates(Automaton).mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/util/automaton/AutomatonTestUtil#assertNoDetachedStates(LightAutomaton).mjava","sourceNew":"  /**\n   * Checks that an automaton has no detached states that are unreachable\n   * from the initial state.\n   */\n  public static void assertNoDetachedStates(Automaton a) {\n    Automaton a2 = Operations.removeDeadStates(a);\n    assert a.getNumStates() == a2.getNumStates() : \"automaton has \" + (a.getNumStates() - a2.getNumStates()) + \" detached states\";\n  }\n\n","sourceOld":"  /**\n   * Checks that an automaton has no detached states that are unreachable\n   * from the initial state.\n   */\n  public static void assertNoDetachedStates(LightAutomaton a) {\n    LightAutomaton a2 = BasicOperations.removeDeadStates(a);\n    assert a.getNumStates() == a2.getNumStates() : \"automaton has \" + (a.getNumStates() - a2.getNumStates()) + \" detached states\";\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a2de8b489026711e8edde133418a7cacfd2ce4d3":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a67285d1a68175d877eb9fd1624fccad3db028ff":["a2de8b489026711e8edde133418a7cacfd2ce4d3"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"4ca1c732df8923f5624f6c06b1dcca9e69d98c96":["a67285d1a68175d877eb9fd1624fccad3db028ff"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"a2de8b489026711e8edde133418a7cacfd2ce4d3":["a67285d1a68175d877eb9fd1624fccad3db028ff"],"a67285d1a68175d877eb9fd1624fccad3db028ff":["4ca1c732df8923f5624f6c06b1dcca9e69d98c96"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["a2de8b489026711e8edde133418a7cacfd2ce4d3","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"4ca1c732df8923f5624f6c06b1dcca9e69d98c96":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["4ca1c732df8923f5624f6c06b1dcca9e69d98c96","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}