{"path":"solr/src/test/org/apache/solr/handler/component/SpellCheckComponentTest#testCollate2().mjava","commits":[{"id":"200dc81344eedd33337ec942fb6203faebb1bb4b","date":1282312595,"type":0,"author":"Grant Ingersoll","isMerge":false,"pathNew":"solr/src/test/org/apache/solr/handler/component/SpellCheckComponentTest#testCollate2().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testCollate2() throws Exception {\n    SolrCore core = h.getCore();\n    SearchComponent speller = core.getSearchComponent(\"spellcheck\");\n    assertTrue(\"speller is null and it shouldn't be\", speller != null);\n\n    ModifiableSolrParams params = new ModifiableSolrParams();\n    params.add(CommonParams.QT, \"spellCheckCompRH\");\n    params.add(SpellCheckComponent.SPELLCHECK_BUILD, \"true\");\n    params.add(CommonParams.Q, \"pixma-a-b-c-d-e-f-g\");\n    params.add(SpellCheckComponent.COMPONENT_NAME, \"true\");\n    params.add(SpellCheckComponent.SPELLCHECK_COLLATE, \"true\");\n\n    SolrRequestHandler handler = core.getRequestHandler(\"spellCheckCompRH\");\n    SolrQueryResponse rsp = new SolrQueryResponse();\n    rsp.add(\"responseHeader\", new SimpleOrderedMap());\n    handler.handleRequest(new LocalSolrQueryRequest(core, params), rsp);\n    NamedList values = rsp.getValues();\n    NamedList spellCheck = (NamedList) values.get(\"spellcheck\");\n    NamedList suggestions = (NamedList) spellCheck.get(\"suggestions\");\n    String collation = (String) suggestions.get(\"collation\");\n    assertEquals(\"pixmaa\", collation);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c3d502d76e3744c551eb42e061044585eea3f5eb","date":1287100242,"type":4,"author":"Yonik Seeley","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/src/test/org/apache/solr/handler/component/SpellCheckComponentTest#testCollate2().mjava","sourceNew":null,"sourceOld":"  @Test\n  public void testCollate2() throws Exception {\n    SolrCore core = h.getCore();\n    SearchComponent speller = core.getSearchComponent(\"spellcheck\");\n    assertTrue(\"speller is null and it shouldn't be\", speller != null);\n\n    ModifiableSolrParams params = new ModifiableSolrParams();\n    params.add(CommonParams.QT, \"spellCheckCompRH\");\n    params.add(SpellCheckComponent.SPELLCHECK_BUILD, \"true\");\n    params.add(CommonParams.Q, \"pixma-a-b-c-d-e-f-g\");\n    params.add(SpellCheckComponent.COMPONENT_NAME, \"true\");\n    params.add(SpellCheckComponent.SPELLCHECK_COLLATE, \"true\");\n\n    SolrRequestHandler handler = core.getRequestHandler(\"spellCheckCompRH\");\n    SolrQueryResponse rsp = new SolrQueryResponse();\n    rsp.add(\"responseHeader\", new SimpleOrderedMap());\n    handler.handleRequest(new LocalSolrQueryRequest(core, params), rsp);\n    NamedList values = rsp.getValues();\n    NamedList spellCheck = (NamedList) values.get(\"spellcheck\");\n    NamedList suggestions = (NamedList) spellCheck.get(\"suggestions\");\n    String collation = (String) suggestions.get(\"collation\");\n    assertEquals(\"pixmaa\", collation);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4ecea1664e8617d82eca3b8055a3c37cb4da8511","date":1287578668,"type":4,"author":"Simon Willnauer","isMerge":true,"pathNew":"/dev/null","pathOld":"solr/src/test/org/apache/solr/handler/component/SpellCheckComponentTest#testCollate2().mjava","sourceNew":null,"sourceOld":"  @Test\n  public void testCollate2() throws Exception {\n    SolrCore core = h.getCore();\n    SearchComponent speller = core.getSearchComponent(\"spellcheck\");\n    assertTrue(\"speller is null and it shouldn't be\", speller != null);\n\n    ModifiableSolrParams params = new ModifiableSolrParams();\n    params.add(CommonParams.QT, \"spellCheckCompRH\");\n    params.add(SpellCheckComponent.SPELLCHECK_BUILD, \"true\");\n    params.add(CommonParams.Q, \"pixma-a-b-c-d-e-f-g\");\n    params.add(SpellCheckComponent.COMPONENT_NAME, \"true\");\n    params.add(SpellCheckComponent.SPELLCHECK_COLLATE, \"true\");\n\n    SolrRequestHandler handler = core.getRequestHandler(\"spellCheckCompRH\");\n    SolrQueryResponse rsp = new SolrQueryResponse();\n    rsp.add(\"responseHeader\", new SimpleOrderedMap());\n    handler.handleRequest(new LocalSolrQueryRequest(core, params), rsp);\n    NamedList values = rsp.getValues();\n    NamedList spellCheck = (NamedList) values.get(\"spellcheck\");\n    NamedList suggestions = (NamedList) spellCheck.get(\"suggestions\");\n    String collation = (String) suggestions.get(\"collation\");\n    assertEquals(\"pixmaa\", collation);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"c3d502d76e3744c551eb42e061044585eea3f5eb":["200dc81344eedd33337ec942fb6203faebb1bb4b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"200dc81344eedd33337ec942fb6203faebb1bb4b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"4ecea1664e8617d82eca3b8055a3c37cb4da8511":["200dc81344eedd33337ec942fb6203faebb1bb4b","c3d502d76e3744c551eb42e061044585eea3f5eb"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["c3d502d76e3744c551eb42e061044585eea3f5eb"]},"commit2Childs":{"c3d502d76e3744c551eb42e061044585eea3f5eb":["4ecea1664e8617d82eca3b8055a3c37cb4da8511","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["200dc81344eedd33337ec942fb6203faebb1bb4b"],"200dc81344eedd33337ec942fb6203faebb1bb4b":["c3d502d76e3744c551eb42e061044585eea3f5eb","4ecea1664e8617d82eca3b8055a3c37cb4da8511"],"4ecea1664e8617d82eca3b8055a3c37cb4da8511":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["4ecea1664e8617d82eca3b8055a3c37cb4da8511","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}