{"path":"lucene/core/src/java/org/apache/lucene/index/DocumentsWriterFlushQueue#addFlushTicket(DocumentsWriterPerThread).mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/DocumentsWriterFlushQueue#addFlushTicket(DocumentsWriterPerThread).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/DocumentsWriterFlushQueue#addFlushTicket(DocumentsWriterPerThread).mjava","sourceNew":"  synchronized SegmentFlushTicket addFlushTicket(DocumentsWriterPerThread dwpt) {\n    // Each flush is assigned a ticket in the order they acquire the ticketQueue\n    // lock\n    incTickets();\n    boolean success = false;\n    try {\n      // prepare flush freezes the global deletes - do in synced block!\n      final SegmentFlushTicket ticket = new SegmentFlushTicket(dwpt.prepareFlush());\n      queue.add(ticket);\n      success = true;\n      return ticket;\n    } finally {\n      if (!success) {\n        decTickets();\n      }\n    }\n  }\n\n","sourceOld":"  synchronized SegmentFlushTicket addFlushTicket(DocumentsWriterPerThread dwpt) {\n    // Each flush is assigned a ticket in the order they acquire the ticketQueue\n    // lock\n    incTickets();\n    boolean success = false;\n    try {\n      // prepare flush freezes the global deletes - do in synced block!\n      final SegmentFlushTicket ticket = new SegmentFlushTicket(dwpt.prepareFlush());\n      queue.add(ticket);\n      success = true;\n      return ticket;\n    } finally {\n      if (!success) {\n        decTickets();\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f4363cd33f6eff7fb4753574a441e2d18c1022a4","date":1498067235,"type":3,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/DocumentsWriterFlushQueue#addFlushTicket(DocumentsWriterPerThread).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/DocumentsWriterFlushQueue#addFlushTicket(DocumentsWriterPerThread).mjava","sourceNew":"  synchronized SegmentFlushTicket addFlushTicket(DocumentsWriterPerThread dwpt) throws IOException {\n    // Each flush is assigned a ticket in the order they acquire the ticketQueue\n    // lock\n    incTickets();\n    boolean success = false;\n    try {\n      // prepare flush freezes the global deletes - do in synced block!\n      final SegmentFlushTicket ticket = new SegmentFlushTicket(dwpt.prepareFlush());\n      queue.add(ticket);\n      success = true;\n      return ticket;\n    } finally {\n      if (!success) {\n        decTickets();\n      }\n    }\n  }\n\n","sourceOld":"  synchronized SegmentFlushTicket addFlushTicket(DocumentsWriterPerThread dwpt) {\n    // Each flush is assigned a ticket in the order they acquire the ticketQueue\n    // lock\n    incTickets();\n    boolean success = false;\n    try {\n      // prepare flush freezes the global deletes - do in synced block!\n      final SegmentFlushTicket ticket = new SegmentFlushTicket(dwpt.prepareFlush());\n      queue.add(ticket);\n      success = true;\n      return ticket;\n    } finally {\n      if (!success) {\n        decTickets();\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b7dfa64bc2074fb87d0ca70095a644c1ead107e1","date":1498356339,"type":3,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/DocumentsWriterFlushQueue#addFlushTicket(DocumentsWriterPerThread).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/DocumentsWriterFlushQueue#addFlushTicket(DocumentsWriterPerThread).mjava","sourceNew":"  synchronized SegmentFlushTicket addFlushTicket(DocumentsWriterPerThread dwpt) throws IOException {\n    // Each flush is assigned a ticket in the order they acquire the ticketQueue\n    // lock\n    incTickets();\n    boolean success = false;\n    try {\n      // prepare flush freezes the global deletes - do in synced block!\n      final SegmentFlushTicket ticket = new SegmentFlushTicket(dwpt.prepareFlush());\n      queue.add(ticket);\n      success = true;\n      return ticket;\n    } finally {\n      if (!success) {\n        decTickets();\n      }\n    }\n  }\n\n","sourceOld":"  synchronized SegmentFlushTicket addFlushTicket(DocumentsWriterPerThread dwpt) {\n    // Each flush is assigned a ticket in the order they acquire the ticketQueue\n    // lock\n    incTickets();\n    boolean success = false;\n    try {\n      // prepare flush freezes the global deletes - do in synced block!\n      final SegmentFlushTicket ticket = new SegmentFlushTicket(dwpt.prepareFlush());\n      queue.add(ticket);\n      success = true;\n      return ticket;\n    } finally {\n      if (!success) {\n        decTickets();\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"28288370235ed02234a64753cdbf0c6ec096304a","date":1498726817,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/DocumentsWriterFlushQueue#addFlushTicket(DocumentsWriterPerThread).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/DocumentsWriterFlushQueue#addFlushTicket(DocumentsWriterPerThread).mjava","sourceNew":"  synchronized SegmentFlushTicket addFlushTicket(DocumentsWriterPerThread dwpt) throws IOException {\n    // Each flush is assigned a ticket in the order they acquire the ticketQueue\n    // lock\n    incTickets();\n    boolean success = false;\n    try {\n      // prepare flush freezes the global deletes - do in synced block!\n      final SegmentFlushTicket ticket = new SegmentFlushTicket(dwpt.prepareFlush());\n      queue.add(ticket);\n      success = true;\n      return ticket;\n    } finally {\n      if (!success) {\n        decTickets();\n      }\n    }\n  }\n\n","sourceOld":"  synchronized SegmentFlushTicket addFlushTicket(DocumentsWriterPerThread dwpt) {\n    // Each flush is assigned a ticket in the order they acquire the ticketQueue\n    // lock\n    incTickets();\n    boolean success = false;\n    try {\n      // prepare flush freezes the global deletes - do in synced block!\n      final SegmentFlushTicket ticket = new SegmentFlushTicket(dwpt.prepareFlush());\n      queue.add(ticket);\n      success = true;\n      return ticket;\n    } finally {\n      if (!success) {\n        decTickets();\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6b8498afacfc8322268ca0d659d274fcce08d557","date":1524577248,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/DocumentsWriterFlushQueue#addFlushTicket(DocumentsWriterPerThread).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/DocumentsWriterFlushQueue#addFlushTicket(DocumentsWriterPerThread).mjava","sourceNew":"  synchronized FlushTicket addFlushTicket(DocumentsWriterPerThread dwpt) throws IOException {\n    // Each flush is assigned a ticket in the order they acquire the ticketQueue\n    // lock\n    incTickets();\n    boolean success = false;\n    try {\n      // prepare flush freezes the global deletes - do in synced block!\n      final FlushTicket ticket = new FlushTicket(dwpt.prepareFlush(), true);\n      queue.add(ticket);\n      success = true;\n      return ticket;\n    } finally {\n      if (!success) {\n        decTickets();\n      }\n    }\n  }\n\n","sourceOld":"  synchronized SegmentFlushTicket addFlushTicket(DocumentsWriterPerThread dwpt) throws IOException {\n    // Each flush is assigned a ticket in the order they acquire the ticketQueue\n    // lock\n    incTickets();\n    boolean success = false;\n    try {\n      // prepare flush freezes the global deletes - do in synced block!\n      final SegmentFlushTicket ticket = new SegmentFlushTicket(dwpt.prepareFlush());\n      queue.add(ticket);\n      success = true;\n      return ticket;\n    } finally {\n      if (!success) {\n        decTickets();\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"6b8498afacfc8322268ca0d659d274fcce08d557":["28288370235ed02234a64753cdbf0c6ec096304a"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"f4363cd33f6eff7fb4753574a441e2d18c1022a4":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"b7dfa64bc2074fb87d0ca70095a644c1ead107e1":["3a119bbc8703c10faa329ec201c654b3a35a1e3e","f4363cd33f6eff7fb4753574a441e2d18c1022a4"],"28288370235ed02234a64753cdbf0c6ec096304a":["3a119bbc8703c10faa329ec201c654b3a35a1e3e","f4363cd33f6eff7fb4753574a441e2d18c1022a4"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["6b8498afacfc8322268ca0d659d274fcce08d557"]},"commit2Childs":{"6b8498afacfc8322268ca0d659d274fcce08d557":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["f4363cd33f6eff7fb4753574a441e2d18c1022a4","b7dfa64bc2074fb87d0ca70095a644c1ead107e1","28288370235ed02234a64753cdbf0c6ec096304a"],"f4363cd33f6eff7fb4753574a441e2d18c1022a4":["b7dfa64bc2074fb87d0ca70095a644c1ead107e1","28288370235ed02234a64753cdbf0c6ec096304a"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"b7dfa64bc2074fb87d0ca70095a644c1ead107e1":[],"28288370235ed02234a64753cdbf0c6ec096304a":["6b8498afacfc8322268ca0d659d274fcce08d557"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["b7dfa64bc2074fb87d0ca70095a644c1ead107e1","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}