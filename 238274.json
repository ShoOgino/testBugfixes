{"path":"lucene/src/java/org/apache/lucene/index/IndexReader#docFreq(String,BytesRef).mjava","commits":[{"id":"955c32f886db6f6356c9fcdea6b1f1cb4effda24","date":1270581567,"type":0,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/IndexReader#docFreq(String,BytesRef).mjava","pathOld":"/dev/null","sourceNew":"  /** Returns the number of documents containing the term\n   * <code>t</code>.  This method returns 0 if the term or\n   * field does not exists.  This method does not take into\n   * account deleted documents that have not yet been merged\n   * away. */\n  public int docFreq(String field, BytesRef term) throws IOException {\n    final Fields fields = fields();\n    if (fields == null) {\n      return 0;\n    }\n    final Terms terms = fields.terms(field);\n    if (terms == null) {\n      return 0;\n    }\n    return terms.docFreq(term);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["8028ab7a24273833d53d35eb160dba5b57283cf5"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"e2297162a22c55456e200caef2cbcb00fe381120","date":1321551342,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/IndexReader#docFreq(String,BytesRef).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/IndexReader#docFreq(String,BytesRef).mjava","sourceNew":"  /** Returns the number of documents containing the term\n   * <code>t</code>.  This method returns 0 if the term or\n   * field does not exists.  This method does not take into\n   * account deleted documents that have not yet been merged\n   * away. */\n  public int docFreq(String field, BytesRef term) throws IOException {\n    final Fields fields = fields();\n    if (fields == null) {\n      return 0;\n    }\n    final Terms terms = fields.terms(field);\n    if (terms == null) {\n      return 0;\n    }\n    final TermsEnum termsEnum = terms.iterator(null);\n    if (termsEnum.seekExact(term, true)) {\n      return termsEnum.docFreq();\n    } else {\n      return 0;\n    }\n  }\n\n","sourceOld":"  /** Returns the number of documents containing the term\n   * <code>t</code>.  This method returns 0 if the term or\n   * field does not exists.  This method does not take into\n   * account deleted documents that have not yet been merged\n   * away. */\n  public int docFreq(String field, BytesRef term) throws IOException {\n    final Fields fields = fields();\n    if (fields == null) {\n      return 0;\n    }\n    final Terms terms = fields.terms(field);\n    if (terms == null) {\n      return 0;\n    }\n    return terms.docFreq(term);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"2725b2d479964ea5aaea0ba4ae2634716f3ec26c","date":1327188170,"type":5,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/AtomicIndexReader#docFreq(String,BytesRef).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/IndexReader#docFreq(String,BytesRef).mjava","sourceNew":"  /** Returns the number of documents containing the term\n   * <code>t</code>.  This method returns 0 if the term or\n   * field does not exists.  This method does not take into\n   * account deleted documents that have not yet been merged\n   * away. */\n  public int docFreq(String field, BytesRef term) throws IOException {\n    final Fields fields = fields();\n    if (fields == null) {\n      return 0;\n    }\n    final Terms terms = fields.terms(field);\n    if (terms == null) {\n      return 0;\n    }\n    final TermsEnum termsEnum = terms.iterator(null);\n    if (termsEnum.seekExact(term, true)) {\n      return termsEnum.docFreq();\n    } else {\n      return 0;\n    }\n  }\n\n","sourceOld":"  /** Returns the number of documents containing the term\n   * <code>t</code>.  This method returns 0 if the term or\n   * field does not exists.  This method does not take into\n   * account deleted documents that have not yet been merged\n   * away. */\n  public int docFreq(String field, BytesRef term) throws IOException {\n    final Fields fields = fields();\n    if (fields == null) {\n      return 0;\n    }\n    final Terms terms = fields.terms(field);\n    if (terms == null) {\n      return 0;\n    }\n    final TermsEnum termsEnum = terms.iterator(null);\n    if (termsEnum.seekExact(term, true)) {\n      return termsEnum.docFreq();\n    } else {\n      return 0;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"85dda37116c8d94fccd74dfe59f4d7fe4503e74c","date":1327234819,"type":0,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/IndexReader#docFreq(String,BytesRef).mjava","pathOld":"/dev/null","sourceNew":"  /** Returns the number of documents containing the term\n   * <code>t</code>.  This method returns 0 if the term or\n   * field does not exists.  This method does not take into\n   * account deleted documents that have not yet been merged\n   * away. */\n  public abstract int docFreq(String field, BytesRef term) throws IOException;\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5cab9a86bd67202d20b6adc463008c8e982b070a","date":1327966443,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/IndexReader#docFreq(String,BytesRef).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/IndexReader#docFreq(String,BytesRef).mjava","sourceNew":"  /** Returns the number of documents containing the term\n   * <code>t</code>.  This method returns 0 if the term or\n   * field does not exists.  This method does not take into\n   * account deleted documents that have not yet been merged\n   * away. */\n  public abstract int docFreq(String field, BytesRef term) throws IOException;\n\n","sourceOld":"  /** Returns the number of documents containing the term\n   * <code>t</code>.  This method returns 0 if the term or\n   * field does not exists.  This method does not take into\n   * account deleted documents that have not yet been merged\n   * away. */\n  public int docFreq(String field, BytesRef term) throws IOException {\n    final Fields fields = fields();\n    if (fields == null) {\n      return 0;\n    }\n    final Terms terms = fields.terms(field);\n    if (terms == null) {\n      return 0;\n    }\n    final TermsEnum termsEnum = terms.iterator(null);\n    if (termsEnum.seekExact(term, true)) {\n      return termsEnum.docFreq();\n    } else {\n      return 0;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a85a104e10f92250e7f296aafd8f71bb97c7d9ca","date":1327968489,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/IndexReader#docFreq(String,BytesRef).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/IndexReader#docFreq(String,BytesRef).mjava","sourceNew":"  /** Returns the number of documents containing the\n   * <code>term</code>.  This method returns 0 if the term or\n   * field does not exists.  This method does not take into\n   * account deleted documents that have not yet been merged\n   * away. */\n  public abstract int docFreq(String field, BytesRef term) throws IOException;\n\n","sourceOld":"  /** Returns the number of documents containing the term\n   * <code>t</code>.  This method returns 0 if the term or\n   * field does not exists.  This method does not take into\n   * account deleted documents that have not yet been merged\n   * away. */\n  public abstract int docFreq(String field, BytesRef term) throws IOException;\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":5,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/IndexReader#docFreq(String,BytesRef).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/IndexReader#docFreq(String,BytesRef).mjava","sourceNew":"  /** Returns the number of documents containing the\n   * <code>term</code>.  This method returns 0 if the term or\n   * field does not exists.  This method does not take into\n   * account deleted documents that have not yet been merged\n   * away. */\n  public abstract int docFreq(String field, BytesRef term) throws IOException;\n\n","sourceOld":"  /** Returns the number of documents containing the\n   * <code>term</code>.  This method returns 0 if the term or\n   * field does not exists.  This method does not take into\n   * account deleted documents that have not yet been merged\n   * away. */\n  public abstract int docFreq(String field, BytesRef term) throws IOException;\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"85dda37116c8d94fccd74dfe59f4d7fe4503e74c":["2725b2d479964ea5aaea0ba4ae2634716f3ec26c"],"a85a104e10f92250e7f296aafd8f71bb97c7d9ca":["5cab9a86bd67202d20b6adc463008c8e982b070a"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a85a104e10f92250e7f296aafd8f71bb97c7d9ca"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"e2297162a22c55456e200caef2cbcb00fe381120":["955c32f886db6f6356c9fcdea6b1f1cb4effda24"],"955c32f886db6f6356c9fcdea6b1f1cb4effda24":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"5cab9a86bd67202d20b6adc463008c8e982b070a":["e2297162a22c55456e200caef2cbcb00fe381120","85dda37116c8d94fccd74dfe59f4d7fe4503e74c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"2725b2d479964ea5aaea0ba4ae2634716f3ec26c":["e2297162a22c55456e200caef2cbcb00fe381120"]},"commit2Childs":{"85dda37116c8d94fccd74dfe59f4d7fe4503e74c":["5cab9a86bd67202d20b6adc463008c8e982b070a"],"a85a104e10f92250e7f296aafd8f71bb97c7d9ca":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["955c32f886db6f6356c9fcdea6b1f1cb4effda24"],"e2297162a22c55456e200caef2cbcb00fe381120":["5cab9a86bd67202d20b6adc463008c8e982b070a","2725b2d479964ea5aaea0ba4ae2634716f3ec26c"],"955c32f886db6f6356c9fcdea6b1f1cb4effda24":["e2297162a22c55456e200caef2cbcb00fe381120"],"5cab9a86bd67202d20b6adc463008c8e982b070a":["a85a104e10f92250e7f296aafd8f71bb97c7d9ca"],"2725b2d479964ea5aaea0ba4ae2634716f3ec26c":["85dda37116c8d94fccd74dfe59f4d7fe4503e74c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}