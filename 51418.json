{"path":"lucene/analysis/common/src/java/org/tartarus/snowball/ext/KpStemmer#stem().mjava","commits":[{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/common/src/java/org/tartarus/snowball/ext/KpStemmer#stem().mjava","pathOld":"modules/analysis/common/src/java/org/tartarus/snowball/ext/KpStemmer#stem().mjava","sourceNew":"        public boolean stem() {\n            int v_1;\n            int v_2;\n            int v_3;\n            int v_4;\n            int v_5;\n            int v_6;\n            int v_7;\n            int v_8;\n            int v_9;\n            int v_10;\n            int v_11;\n            int v_12;\n            int v_13;\n            int v_14;\n            int v_15;\n            int v_16;\n            int v_18;\n            int v_19;\n            int v_20;\n            // (, line 214\n            // unset Y_found, line 216\n            B_Y_found = false;\n            // unset stemmed, line 217\n            B_stemmed = false;\n            // do, line 218\n            v_1 = cursor;\n            lab0: do {\n                // (, line 218\n                // [, line 218\n                bra = cursor;\n                // literal, line 218\n                if (!(eq_s(1, \"y\")))\n                {\n                    break lab0;\n                }\n                // ], line 218\n                ket = cursor;\n                // <-, line 218\n                slice_from(\"Y\");\n                // set Y_found, line 218\n                B_Y_found = true;\n            } while (false);\n            cursor = v_1;\n            // do, line 219\n            v_2 = cursor;\n            lab1: do {\n                // repeat, line 219\n                replab2: while(true)\n                {\n                    v_3 = cursor;\n                    lab3: do {\n                        // (, line 219\n                        // goto, line 219\n                        golab4: while(true)\n                        {\n                            v_4 = cursor;\n                            lab5: do {\n                                // (, line 219\n                                if (!(in_grouping(g_v, 97, 121)))\n                                {\n                                    break lab5;\n                                }\n                                // [, line 219\n                                bra = cursor;\n                                // literal, line 219\n                                if (!(eq_s(1, \"y\")))\n                                {\n                                    break lab5;\n                                }\n                                // ], line 219\n                                ket = cursor;\n                                cursor = v_4;\n                                break golab4;\n                            } while (false);\n                            cursor = v_4;\n                            if (cursor >= limit)\n                            {\n                                break lab3;\n                            }\n                            cursor++;\n                        }\n                        // <-, line 219\n                        slice_from(\"Y\");\n                        // set Y_found, line 219\n                        B_Y_found = true;\n                        continue replab2;\n                    } while (false);\n                    cursor = v_3;\n                    break replab2;\n                }\n            } while (false);\n            cursor = v_2;\n            // call measure, line 221\n            if (!r_measure())\n            {\n                return false;\n            }\n            // backwards, line 223\n            limit_backward = cursor; cursor = limit;\n            // (, line 223\n            // do, line 224\n            v_5 = limit - cursor;\n            lab6: do {\n                // (, line 224\n                // call Step_1, line 224\n                if (!r_Step_1())\n                {\n                    break lab6;\n                }\n                // set stemmed, line 224\n                B_stemmed = true;\n            } while (false);\n            cursor = limit - v_5;\n            // do, line 225\n            v_6 = limit - cursor;\n            lab7: do {\n                // (, line 225\n                // call Step_2, line 225\n                if (!r_Step_2())\n                {\n                    break lab7;\n                }\n                // set stemmed, line 225\n                B_stemmed = true;\n            } while (false);\n            cursor = limit - v_6;\n            // do, line 226\n            v_7 = limit - cursor;\n            lab8: do {\n                // (, line 226\n                // call Step_3, line 226\n                if (!r_Step_3())\n                {\n                    break lab8;\n                }\n                // set stemmed, line 226\n                B_stemmed = true;\n            } while (false);\n            cursor = limit - v_7;\n            // do, line 227\n            v_8 = limit - cursor;\n            lab9: do {\n                // (, line 227\n                // call Step_4, line 227\n                if (!r_Step_4())\n                {\n                    break lab9;\n                }\n                // set stemmed, line 227\n                B_stemmed = true;\n            } while (false);\n            cursor = limit - v_8;\n            cursor = limit_backward;            // unset GE_removed, line 229\n            B_GE_removed = false;\n            // do, line 230\n            v_9 = cursor;\n            lab10: do {\n                // (, line 230\n                // and, line 230\n                v_10 = cursor;\n                // call Lose_prefix, line 230\n                if (!r_Lose_prefix())\n                {\n                    break lab10;\n                }\n                cursor = v_10;\n                // call measure, line 230\n                if (!r_measure())\n                {\n                    break lab10;\n                }\n            } while (false);\n            cursor = v_9;\n            // backwards, line 231\n            limit_backward = cursor; cursor = limit;\n            // (, line 231\n            // do, line 232\n            v_11 = limit - cursor;\n            lab11: do {\n                // (, line 232\n                // Boolean test GE_removed, line 232\n                if (!(B_GE_removed))\n                {\n                    break lab11;\n                }\n                // call Step_1c, line 232\n                if (!r_Step_1c())\n                {\n                    break lab11;\n                }\n            } while (false);\n            cursor = limit - v_11;\n            cursor = limit_backward;            // unset GE_removed, line 234\n            B_GE_removed = false;\n            // do, line 235\n            v_12 = cursor;\n            lab12: do {\n                // (, line 235\n                // and, line 235\n                v_13 = cursor;\n                // call Lose_infix, line 235\n                if (!r_Lose_infix())\n                {\n                    break lab12;\n                }\n                cursor = v_13;\n                // call measure, line 235\n                if (!r_measure())\n                {\n                    break lab12;\n                }\n            } while (false);\n            cursor = v_12;\n            // backwards, line 236\n            limit_backward = cursor; cursor = limit;\n            // (, line 236\n            // do, line 237\n            v_14 = limit - cursor;\n            lab13: do {\n                // (, line 237\n                // Boolean test GE_removed, line 237\n                if (!(B_GE_removed))\n                {\n                    break lab13;\n                }\n                // call Step_1c, line 237\n                if (!r_Step_1c())\n                {\n                    break lab13;\n                }\n            } while (false);\n            cursor = limit - v_14;\n            cursor = limit_backward;            // backwards, line 239\n            limit_backward = cursor; cursor = limit;\n            // (, line 239\n            // do, line 240\n            v_15 = limit - cursor;\n            lab14: do {\n                // (, line 240\n                // call Step_7, line 240\n                if (!r_Step_7())\n                {\n                    break lab14;\n                }\n                // set stemmed, line 240\n                B_stemmed = true;\n            } while (false);\n            cursor = limit - v_15;\n            // do, line 241\n            v_16 = limit - cursor;\n            lab15: do {\n                // (, line 241\n                // or, line 241\n                lab16: do {\n                    lab17: do {\n                        // Boolean test stemmed, line 241\n                        if (!(B_stemmed))\n                        {\n                            break lab17;\n                        }\n                        break lab16;\n                    } while (false);\n                    // Boolean test GE_removed, line 241\n                    if (!(B_GE_removed))\n                    {\n                        break lab15;\n                    }\n                } while (false);\n                // call Step_6, line 241\n                if (!r_Step_6())\n                {\n                    break lab15;\n                }\n            } while (false);\n            cursor = limit - v_16;\n            cursor = limit_backward;            // do, line 243\n            v_18 = cursor;\n            lab18: do {\n                // (, line 243\n                // Boolean test Y_found, line 243\n                if (!(B_Y_found))\n                {\n                    break lab18;\n                }\n                // repeat, line 243\n                replab19: while(true)\n                {\n                    v_19 = cursor;\n                    lab20: do {\n                        // (, line 243\n                        // goto, line 243\n                        golab21: while(true)\n                        {\n                            v_20 = cursor;\n                            lab22: do {\n                                // (, line 243\n                                // [, line 243\n                                bra = cursor;\n                                // literal, line 243\n                                if (!(eq_s(1, \"Y\")))\n                                {\n                                    break lab22;\n                                }\n                                // ], line 243\n                                ket = cursor;\n                                cursor = v_20;\n                                break golab21;\n                            } while (false);\n                            cursor = v_20;\n                            if (cursor >= limit)\n                            {\n                                break lab20;\n                            }\n                            cursor++;\n                        }\n                        // <-, line 243\n                        slice_from(\"y\");\n                        continue replab19;\n                    } while (false);\n                    cursor = v_19;\n                    break replab19;\n                }\n            } while (false);\n            cursor = v_18;\n            return true;\n        }\n\n","sourceOld":"        public boolean stem() {\n            int v_1;\n            int v_2;\n            int v_3;\n            int v_4;\n            int v_5;\n            int v_6;\n            int v_7;\n            int v_8;\n            int v_9;\n            int v_10;\n            int v_11;\n            int v_12;\n            int v_13;\n            int v_14;\n            int v_15;\n            int v_16;\n            int v_18;\n            int v_19;\n            int v_20;\n            // (, line 214\n            // unset Y_found, line 216\n            B_Y_found = false;\n            // unset stemmed, line 217\n            B_stemmed = false;\n            // do, line 218\n            v_1 = cursor;\n            lab0: do {\n                // (, line 218\n                // [, line 218\n                bra = cursor;\n                // literal, line 218\n                if (!(eq_s(1, \"y\")))\n                {\n                    break lab0;\n                }\n                // ], line 218\n                ket = cursor;\n                // <-, line 218\n                slice_from(\"Y\");\n                // set Y_found, line 218\n                B_Y_found = true;\n            } while (false);\n            cursor = v_1;\n            // do, line 219\n            v_2 = cursor;\n            lab1: do {\n                // repeat, line 219\n                replab2: while(true)\n                {\n                    v_3 = cursor;\n                    lab3: do {\n                        // (, line 219\n                        // goto, line 219\n                        golab4: while(true)\n                        {\n                            v_4 = cursor;\n                            lab5: do {\n                                // (, line 219\n                                if (!(in_grouping(g_v, 97, 121)))\n                                {\n                                    break lab5;\n                                }\n                                // [, line 219\n                                bra = cursor;\n                                // literal, line 219\n                                if (!(eq_s(1, \"y\")))\n                                {\n                                    break lab5;\n                                }\n                                // ], line 219\n                                ket = cursor;\n                                cursor = v_4;\n                                break golab4;\n                            } while (false);\n                            cursor = v_4;\n                            if (cursor >= limit)\n                            {\n                                break lab3;\n                            }\n                            cursor++;\n                        }\n                        // <-, line 219\n                        slice_from(\"Y\");\n                        // set Y_found, line 219\n                        B_Y_found = true;\n                        continue replab2;\n                    } while (false);\n                    cursor = v_3;\n                    break replab2;\n                }\n            } while (false);\n            cursor = v_2;\n            // call measure, line 221\n            if (!r_measure())\n            {\n                return false;\n            }\n            // backwards, line 223\n            limit_backward = cursor; cursor = limit;\n            // (, line 223\n            // do, line 224\n            v_5 = limit - cursor;\n            lab6: do {\n                // (, line 224\n                // call Step_1, line 224\n                if (!r_Step_1())\n                {\n                    break lab6;\n                }\n                // set stemmed, line 224\n                B_stemmed = true;\n            } while (false);\n            cursor = limit - v_5;\n            // do, line 225\n            v_6 = limit - cursor;\n            lab7: do {\n                // (, line 225\n                // call Step_2, line 225\n                if (!r_Step_2())\n                {\n                    break lab7;\n                }\n                // set stemmed, line 225\n                B_stemmed = true;\n            } while (false);\n            cursor = limit - v_6;\n            // do, line 226\n            v_7 = limit - cursor;\n            lab8: do {\n                // (, line 226\n                // call Step_3, line 226\n                if (!r_Step_3())\n                {\n                    break lab8;\n                }\n                // set stemmed, line 226\n                B_stemmed = true;\n            } while (false);\n            cursor = limit - v_7;\n            // do, line 227\n            v_8 = limit - cursor;\n            lab9: do {\n                // (, line 227\n                // call Step_4, line 227\n                if (!r_Step_4())\n                {\n                    break lab9;\n                }\n                // set stemmed, line 227\n                B_stemmed = true;\n            } while (false);\n            cursor = limit - v_8;\n            cursor = limit_backward;            // unset GE_removed, line 229\n            B_GE_removed = false;\n            // do, line 230\n            v_9 = cursor;\n            lab10: do {\n                // (, line 230\n                // and, line 230\n                v_10 = cursor;\n                // call Lose_prefix, line 230\n                if (!r_Lose_prefix())\n                {\n                    break lab10;\n                }\n                cursor = v_10;\n                // call measure, line 230\n                if (!r_measure())\n                {\n                    break lab10;\n                }\n            } while (false);\n            cursor = v_9;\n            // backwards, line 231\n            limit_backward = cursor; cursor = limit;\n            // (, line 231\n            // do, line 232\n            v_11 = limit - cursor;\n            lab11: do {\n                // (, line 232\n                // Boolean test GE_removed, line 232\n                if (!(B_GE_removed))\n                {\n                    break lab11;\n                }\n                // call Step_1c, line 232\n                if (!r_Step_1c())\n                {\n                    break lab11;\n                }\n            } while (false);\n            cursor = limit - v_11;\n            cursor = limit_backward;            // unset GE_removed, line 234\n            B_GE_removed = false;\n            // do, line 235\n            v_12 = cursor;\n            lab12: do {\n                // (, line 235\n                // and, line 235\n                v_13 = cursor;\n                // call Lose_infix, line 235\n                if (!r_Lose_infix())\n                {\n                    break lab12;\n                }\n                cursor = v_13;\n                // call measure, line 235\n                if (!r_measure())\n                {\n                    break lab12;\n                }\n            } while (false);\n            cursor = v_12;\n            // backwards, line 236\n            limit_backward = cursor; cursor = limit;\n            // (, line 236\n            // do, line 237\n            v_14 = limit - cursor;\n            lab13: do {\n                // (, line 237\n                // Boolean test GE_removed, line 237\n                if (!(B_GE_removed))\n                {\n                    break lab13;\n                }\n                // call Step_1c, line 237\n                if (!r_Step_1c())\n                {\n                    break lab13;\n                }\n            } while (false);\n            cursor = limit - v_14;\n            cursor = limit_backward;            // backwards, line 239\n            limit_backward = cursor; cursor = limit;\n            // (, line 239\n            // do, line 240\n            v_15 = limit - cursor;\n            lab14: do {\n                // (, line 240\n                // call Step_7, line 240\n                if (!r_Step_7())\n                {\n                    break lab14;\n                }\n                // set stemmed, line 240\n                B_stemmed = true;\n            } while (false);\n            cursor = limit - v_15;\n            // do, line 241\n            v_16 = limit - cursor;\n            lab15: do {\n                // (, line 241\n                // or, line 241\n                lab16: do {\n                    lab17: do {\n                        // Boolean test stemmed, line 241\n                        if (!(B_stemmed))\n                        {\n                            break lab17;\n                        }\n                        break lab16;\n                    } while (false);\n                    // Boolean test GE_removed, line 241\n                    if (!(B_GE_removed))\n                    {\n                        break lab15;\n                    }\n                } while (false);\n                // call Step_6, line 241\n                if (!r_Step_6())\n                {\n                    break lab15;\n                }\n            } while (false);\n            cursor = limit - v_16;\n            cursor = limit_backward;            // do, line 243\n            v_18 = cursor;\n            lab18: do {\n                // (, line 243\n                // Boolean test Y_found, line 243\n                if (!(B_Y_found))\n                {\n                    break lab18;\n                }\n                // repeat, line 243\n                replab19: while(true)\n                {\n                    v_19 = cursor;\n                    lab20: do {\n                        // (, line 243\n                        // goto, line 243\n                        golab21: while(true)\n                        {\n                            v_20 = cursor;\n                            lab22: do {\n                                // (, line 243\n                                // [, line 243\n                                bra = cursor;\n                                // literal, line 243\n                                if (!(eq_s(1, \"Y\")))\n                                {\n                                    break lab22;\n                                }\n                                // ], line 243\n                                ket = cursor;\n                                cursor = v_20;\n                                break golab21;\n                            } while (false);\n                            cursor = v_20;\n                            if (cursor >= limit)\n                            {\n                                break lab20;\n                            }\n                            cursor++;\n                        }\n                        // <-, line 243\n                        slice_from(\"y\");\n                        continue replab19;\n                    } while (false);\n                    cursor = v_19;\n                    break replab19;\n                }\n            } while (false);\n            cursor = v_18;\n            return true;\n        }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b6a6a9e301c12ab07b1d0428b5aad813fff317b3","date":1343846505,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/common/src/java/org/tartarus/snowball/ext/KpStemmer#stem().mjava","pathOld":"lucene/analysis/common/src/java/org/tartarus/snowball/ext/KpStemmer#stem().mjava","sourceNew":"                public boolean stem() {\n            int v_1;\n            int v_2;\n            int v_3;\n            int v_4;\n            int v_5;\n            int v_6;\n            int v_7;\n            int v_8;\n            int v_9;\n            int v_10;\n            int v_11;\n            int v_12;\n            int v_13;\n            int v_14;\n            int v_15;\n            int v_16;\n            int v_18;\n            int v_19;\n            int v_20;\n                    // (, line 214\n                    // unset Y_found, line 216\n                    B_Y_found = false;\n                    // unset stemmed, line 217\n                    B_stemmed = false;\n                    // do, line 218\n                    v_1 = cursor;\n                    lab0: do {\n                        // (, line 218\n                        // [, line 218\n                        bra = cursor;\n                        // literal, line 218\n                        if (!(eq_s(1, \"y\")))\n                        {\n                            break lab0;\n                        }\n                        // ], line 218\n                        ket = cursor;\n                        // <-, line 218\n                        slice_from(\"Y\");\n                        // set Y_found, line 218\n                        B_Y_found = true;\n                    } while (false);\n                    cursor = v_1;\n                    // do, line 219\n                    v_2 = cursor;\n                    lab1: do {\n                        // repeat, line 219\n                        replab2: while(true)\n                        {\n                            v_3 = cursor;\n                            lab3: do {\n                                // (, line 219\n                                // goto, line 219\n                                golab4: while(true)\n                                {\n                                    v_4 = cursor;\n                                    lab5: do {\n                                        // (, line 219\n                                        if (!(in_grouping(g_v, 97, 121)))\n                                        {\n                                            break lab5;\n                                        }\n                                        // [, line 219\n                                        bra = cursor;\n                                        // literal, line 219\n                                        if (!(eq_s(1, \"y\")))\n                                        {\n                                            break lab5;\n                                        }\n                                        // ], line 219\n                                        ket = cursor;\n                                        cursor = v_4;\n                                        break golab4;\n                                    } while (false);\n                                    cursor = v_4;\n                                    if (cursor >= limit)\n                                    {\n                                        break lab3;\n                                    }\n                                    cursor++;\n                                }\n                                // <-, line 219\n                                slice_from(\"Y\");\n                                // set Y_found, line 219\n                                B_Y_found = true;\n                                continue replab2;\n                            } while (false);\n                            cursor = v_3;\n                            break replab2;\n                        }\n                    } while (false);\n                    cursor = v_2;\n                    // call measure, line 221\n                    if (!r_measure())\n                    {\n                        return false;\n                    }\n                    // backwards, line 223\n                    limit_backward = cursor; cursor = limit;\n                    // (, line 223\n                    // do, line 224\n                    v_5 = limit - cursor;\n                    lab6: do {\n                        // (, line 224\n                        // call Step_1, line 224\n                        if (!r_Step_1())\n                        {\n                            break lab6;\n                        }\n                        // set stemmed, line 224\n                        B_stemmed = true;\n                    } while (false);\n                    cursor = limit - v_5;\n                    // do, line 225\n                    v_6 = limit - cursor;\n                    lab7: do {\n                        // (, line 225\n                        // call Step_2, line 225\n                        if (!r_Step_2())\n                        {\n                            break lab7;\n                        }\n                        // set stemmed, line 225\n                        B_stemmed = true;\n                    } while (false);\n                    cursor = limit - v_6;\n                    // do, line 226\n                    v_7 = limit - cursor;\n                    lab8: do {\n                        // (, line 226\n                        // call Step_3, line 226\n                        if (!r_Step_3())\n                        {\n                            break lab8;\n                        }\n                        // set stemmed, line 226\n                        B_stemmed = true;\n                    } while (false);\n                    cursor = limit - v_7;\n                    // do, line 227\n                    v_8 = limit - cursor;\n                    lab9: do {\n                        // (, line 227\n                        // call Step_4, line 227\n                        if (!r_Step_4())\n                        {\n                            break lab9;\n                        }\n                        // set stemmed, line 227\n                        B_stemmed = true;\n                    } while (false);\n                    cursor = limit - v_8;\n                    cursor = limit_backward;                    // unset GE_removed, line 229\n                    B_GE_removed = false;\n                    // do, line 230\n                    v_9 = cursor;\n                    lab10: do {\n                        // (, line 230\n                        // and, line 230\n                        v_10 = cursor;\n                        // call Lose_prefix, line 230\n                        if (!r_Lose_prefix())\n                        {\n                            break lab10;\n                        }\n                        cursor = v_10;\n                        // call measure, line 230\n                        if (!r_measure())\n                        {\n                            break lab10;\n                        }\n                    } while (false);\n                    cursor = v_9;\n                    // backwards, line 231\n                    limit_backward = cursor; cursor = limit;\n                    // (, line 231\n                    // do, line 232\n                    v_11 = limit - cursor;\n                    lab11: do {\n                        // (, line 232\n                        // Boolean test GE_removed, line 232\n                        if (!(B_GE_removed))\n                        {\n                            break lab11;\n                        }\n                        // call Step_1c, line 232\n                        if (!r_Step_1c())\n                        {\n                            break lab11;\n                        }\n                    } while (false);\n                    cursor = limit - v_11;\n                    cursor = limit_backward;                    // unset GE_removed, line 234\n                    B_GE_removed = false;\n                    // do, line 235\n                    v_12 = cursor;\n                    lab12: do {\n                        // (, line 235\n                        // and, line 235\n                        v_13 = cursor;\n                        // call Lose_infix, line 235\n                        if (!r_Lose_infix())\n                        {\n                            break lab12;\n                        }\n                        cursor = v_13;\n                        // call measure, line 235\n                        if (!r_measure())\n                        {\n                            break lab12;\n                        }\n                    } while (false);\n                    cursor = v_12;\n                    // backwards, line 236\n                    limit_backward = cursor; cursor = limit;\n                    // (, line 236\n                    // do, line 237\n                    v_14 = limit - cursor;\n                    lab13: do {\n                        // (, line 237\n                        // Boolean test GE_removed, line 237\n                        if (!(B_GE_removed))\n                        {\n                            break lab13;\n                        }\n                        // call Step_1c, line 237\n                        if (!r_Step_1c())\n                        {\n                            break lab13;\n                        }\n                    } while (false);\n                    cursor = limit - v_14;\n                    cursor = limit_backward;                    // backwards, line 239\n                    limit_backward = cursor; cursor = limit;\n                    // (, line 239\n                    // do, line 240\n                    v_15 = limit - cursor;\n                    lab14: do {\n                        // (, line 240\n                        // call Step_7, line 240\n                        if (!r_Step_7())\n                        {\n                            break lab14;\n                        }\n                        // set stemmed, line 240\n                        B_stemmed = true;\n                    } while (false);\n                    cursor = limit - v_15;\n                    // do, line 241\n                    v_16 = limit - cursor;\n                    lab15: do {\n                        // (, line 241\n                        // or, line 241\n                        lab16: do {\n                            lab17: do {\n                                // Boolean test stemmed, line 241\n                                if (!(B_stemmed))\n                                {\n                                    break lab17;\n                                }\n                                break lab16;\n                            } while (false);\n                            // Boolean test GE_removed, line 241\n                            if (!(B_GE_removed))\n                            {\n                                break lab15;\n                            }\n                        } while (false);\n                        // call Step_6, line 241\n                        if (!r_Step_6())\n                        {\n                            break lab15;\n                        }\n                    } while (false);\n                    cursor = limit - v_16;\n                    cursor = limit_backward;                    // do, line 243\n                    v_18 = cursor;\n                    lab18: do {\n                        // (, line 243\n                        // Boolean test Y_found, line 243\n                        if (!(B_Y_found))\n                        {\n                            break lab18;\n                        }\n                        // repeat, line 243\n                        replab19: while(true)\n                        {\n                            v_19 = cursor;\n                            lab20: do {\n                                // (, line 243\n                                // goto, line 243\n                                golab21: while(true)\n                                {\n                                    v_20 = cursor;\n                                    lab22: do {\n                                        // (, line 243\n                                        // [, line 243\n                                        bra = cursor;\n                                        // literal, line 243\n                                        if (!(eq_s(1, \"Y\")))\n                                        {\n                                            break lab22;\n                                        }\n                                        // ], line 243\n                                        ket = cursor;\n                                        cursor = v_20;\n                                        break golab21;\n                                    } while (false);\n                                    cursor = v_20;\n                                    if (cursor >= limit)\n                                    {\n                                        break lab20;\n                                    }\n                                    cursor++;\n                                }\n                                // <-, line 243\n                                slice_from(\"y\");\n                                continue replab19;\n                            } while (false);\n                            cursor = v_19;\n                            break replab19;\n                        }\n                    } while (false);\n                    cursor = v_18;\n                    return true;\n                }\n\n","sourceOld":"        public boolean stem() {\n            int v_1;\n            int v_2;\n            int v_3;\n            int v_4;\n            int v_5;\n            int v_6;\n            int v_7;\n            int v_8;\n            int v_9;\n            int v_10;\n            int v_11;\n            int v_12;\n            int v_13;\n            int v_14;\n            int v_15;\n            int v_16;\n            int v_18;\n            int v_19;\n            int v_20;\n            // (, line 214\n            // unset Y_found, line 216\n            B_Y_found = false;\n            // unset stemmed, line 217\n            B_stemmed = false;\n            // do, line 218\n            v_1 = cursor;\n            lab0: do {\n                // (, line 218\n                // [, line 218\n                bra = cursor;\n                // literal, line 218\n                if (!(eq_s(1, \"y\")))\n                {\n                    break lab0;\n                }\n                // ], line 218\n                ket = cursor;\n                // <-, line 218\n                slice_from(\"Y\");\n                // set Y_found, line 218\n                B_Y_found = true;\n            } while (false);\n            cursor = v_1;\n            // do, line 219\n            v_2 = cursor;\n            lab1: do {\n                // repeat, line 219\n                replab2: while(true)\n                {\n                    v_3 = cursor;\n                    lab3: do {\n                        // (, line 219\n                        // goto, line 219\n                        golab4: while(true)\n                        {\n                            v_4 = cursor;\n                            lab5: do {\n                                // (, line 219\n                                if (!(in_grouping(g_v, 97, 121)))\n                                {\n                                    break lab5;\n                                }\n                                // [, line 219\n                                bra = cursor;\n                                // literal, line 219\n                                if (!(eq_s(1, \"y\")))\n                                {\n                                    break lab5;\n                                }\n                                // ], line 219\n                                ket = cursor;\n                                cursor = v_4;\n                                break golab4;\n                            } while (false);\n                            cursor = v_4;\n                            if (cursor >= limit)\n                            {\n                                break lab3;\n                            }\n                            cursor++;\n                        }\n                        // <-, line 219\n                        slice_from(\"Y\");\n                        // set Y_found, line 219\n                        B_Y_found = true;\n                        continue replab2;\n                    } while (false);\n                    cursor = v_3;\n                    break replab2;\n                }\n            } while (false);\n            cursor = v_2;\n            // call measure, line 221\n            if (!r_measure())\n            {\n                return false;\n            }\n            // backwards, line 223\n            limit_backward = cursor; cursor = limit;\n            // (, line 223\n            // do, line 224\n            v_5 = limit - cursor;\n            lab6: do {\n                // (, line 224\n                // call Step_1, line 224\n                if (!r_Step_1())\n                {\n                    break lab6;\n                }\n                // set stemmed, line 224\n                B_stemmed = true;\n            } while (false);\n            cursor = limit - v_5;\n            // do, line 225\n            v_6 = limit - cursor;\n            lab7: do {\n                // (, line 225\n                // call Step_2, line 225\n                if (!r_Step_2())\n                {\n                    break lab7;\n                }\n                // set stemmed, line 225\n                B_stemmed = true;\n            } while (false);\n            cursor = limit - v_6;\n            // do, line 226\n            v_7 = limit - cursor;\n            lab8: do {\n                // (, line 226\n                // call Step_3, line 226\n                if (!r_Step_3())\n                {\n                    break lab8;\n                }\n                // set stemmed, line 226\n                B_stemmed = true;\n            } while (false);\n            cursor = limit - v_7;\n            // do, line 227\n            v_8 = limit - cursor;\n            lab9: do {\n                // (, line 227\n                // call Step_4, line 227\n                if (!r_Step_4())\n                {\n                    break lab9;\n                }\n                // set stemmed, line 227\n                B_stemmed = true;\n            } while (false);\n            cursor = limit - v_8;\n            cursor = limit_backward;            // unset GE_removed, line 229\n            B_GE_removed = false;\n            // do, line 230\n            v_9 = cursor;\n            lab10: do {\n                // (, line 230\n                // and, line 230\n                v_10 = cursor;\n                // call Lose_prefix, line 230\n                if (!r_Lose_prefix())\n                {\n                    break lab10;\n                }\n                cursor = v_10;\n                // call measure, line 230\n                if (!r_measure())\n                {\n                    break lab10;\n                }\n            } while (false);\n            cursor = v_9;\n            // backwards, line 231\n            limit_backward = cursor; cursor = limit;\n            // (, line 231\n            // do, line 232\n            v_11 = limit - cursor;\n            lab11: do {\n                // (, line 232\n                // Boolean test GE_removed, line 232\n                if (!(B_GE_removed))\n                {\n                    break lab11;\n                }\n                // call Step_1c, line 232\n                if (!r_Step_1c())\n                {\n                    break lab11;\n                }\n            } while (false);\n            cursor = limit - v_11;\n            cursor = limit_backward;            // unset GE_removed, line 234\n            B_GE_removed = false;\n            // do, line 235\n            v_12 = cursor;\n            lab12: do {\n                // (, line 235\n                // and, line 235\n                v_13 = cursor;\n                // call Lose_infix, line 235\n                if (!r_Lose_infix())\n                {\n                    break lab12;\n                }\n                cursor = v_13;\n                // call measure, line 235\n                if (!r_measure())\n                {\n                    break lab12;\n                }\n            } while (false);\n            cursor = v_12;\n            // backwards, line 236\n            limit_backward = cursor; cursor = limit;\n            // (, line 236\n            // do, line 237\n            v_14 = limit - cursor;\n            lab13: do {\n                // (, line 237\n                // Boolean test GE_removed, line 237\n                if (!(B_GE_removed))\n                {\n                    break lab13;\n                }\n                // call Step_1c, line 237\n                if (!r_Step_1c())\n                {\n                    break lab13;\n                }\n            } while (false);\n            cursor = limit - v_14;\n            cursor = limit_backward;            // backwards, line 239\n            limit_backward = cursor; cursor = limit;\n            // (, line 239\n            // do, line 240\n            v_15 = limit - cursor;\n            lab14: do {\n                // (, line 240\n                // call Step_7, line 240\n                if (!r_Step_7())\n                {\n                    break lab14;\n                }\n                // set stemmed, line 240\n                B_stemmed = true;\n            } while (false);\n            cursor = limit - v_15;\n            // do, line 241\n            v_16 = limit - cursor;\n            lab15: do {\n                // (, line 241\n                // or, line 241\n                lab16: do {\n                    lab17: do {\n                        // Boolean test stemmed, line 241\n                        if (!(B_stemmed))\n                        {\n                            break lab17;\n                        }\n                        break lab16;\n                    } while (false);\n                    // Boolean test GE_removed, line 241\n                    if (!(B_GE_removed))\n                    {\n                        break lab15;\n                    }\n                } while (false);\n                // call Step_6, line 241\n                if (!r_Step_6())\n                {\n                    break lab15;\n                }\n            } while (false);\n            cursor = limit - v_16;\n            cursor = limit_backward;            // do, line 243\n            v_18 = cursor;\n            lab18: do {\n                // (, line 243\n                // Boolean test Y_found, line 243\n                if (!(B_Y_found))\n                {\n                    break lab18;\n                }\n                // repeat, line 243\n                replab19: while(true)\n                {\n                    v_19 = cursor;\n                    lab20: do {\n                        // (, line 243\n                        // goto, line 243\n                        golab21: while(true)\n                        {\n                            v_20 = cursor;\n                            lab22: do {\n                                // (, line 243\n                                // [, line 243\n                                bra = cursor;\n                                // literal, line 243\n                                if (!(eq_s(1, \"Y\")))\n                                {\n                                    break lab22;\n                                }\n                                // ], line 243\n                                ket = cursor;\n                                cursor = v_20;\n                                break golab21;\n                            } while (false);\n                            cursor = v_20;\n                            if (cursor >= limit)\n                            {\n                                break lab20;\n                            }\n                            cursor++;\n                        }\n                        // <-, line 243\n                        slice_from(\"y\");\n                        continue replab19;\n                    } while (false);\n                    cursor = v_19;\n                    break replab19;\n                }\n            } while (false);\n            cursor = v_18;\n            return true;\n        }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8fd5be977c105554c6a7b68afcdbc511439723ab","date":1344115570,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/analysis/common/src/java/org/tartarus/snowball/ext/KpStemmer#stem().mjava","pathOld":"lucene/analysis/common/src/java/org/tartarus/snowball/ext/KpStemmer#stem().mjava","sourceNew":"                public boolean stem() {\n            int v_1;\n            int v_2;\n            int v_3;\n            int v_4;\n            int v_5;\n            int v_6;\n            int v_7;\n            int v_8;\n            int v_9;\n            int v_10;\n            int v_11;\n            int v_12;\n            int v_13;\n            int v_14;\n            int v_15;\n            int v_16;\n            int v_18;\n            int v_19;\n            int v_20;\n                    // (, line 214\n                    // unset Y_found, line 216\n                    B_Y_found = false;\n                    // unset stemmed, line 217\n                    B_stemmed = false;\n                    // do, line 218\n                    v_1 = cursor;\n                    lab0: do {\n                        // (, line 218\n                        // [, line 218\n                        bra = cursor;\n                        // literal, line 218\n                        if (!(eq_s(1, \"y\")))\n                        {\n                            break lab0;\n                        }\n                        // ], line 218\n                        ket = cursor;\n                        // <-, line 218\n                        slice_from(\"Y\");\n                        // set Y_found, line 218\n                        B_Y_found = true;\n                    } while (false);\n                    cursor = v_1;\n                    // do, line 219\n                    v_2 = cursor;\n                    lab1: do {\n                        // repeat, line 219\n                        replab2: while(true)\n                        {\n                            v_3 = cursor;\n                            lab3: do {\n                                // (, line 219\n                                // goto, line 219\n                                golab4: while(true)\n                                {\n                                    v_4 = cursor;\n                                    lab5: do {\n                                        // (, line 219\n                                        if (!(in_grouping(g_v, 97, 121)))\n                                        {\n                                            break lab5;\n                                        }\n                                        // [, line 219\n                                        bra = cursor;\n                                        // literal, line 219\n                                        if (!(eq_s(1, \"y\")))\n                                        {\n                                            break lab5;\n                                        }\n                                        // ], line 219\n                                        ket = cursor;\n                                        cursor = v_4;\n                                        break golab4;\n                                    } while (false);\n                                    cursor = v_4;\n                                    if (cursor >= limit)\n                                    {\n                                        break lab3;\n                                    }\n                                    cursor++;\n                                }\n                                // <-, line 219\n                                slice_from(\"Y\");\n                                // set Y_found, line 219\n                                B_Y_found = true;\n                                continue replab2;\n                            } while (false);\n                            cursor = v_3;\n                            break replab2;\n                        }\n                    } while (false);\n                    cursor = v_2;\n                    // call measure, line 221\n                    if (!r_measure())\n                    {\n                        return false;\n                    }\n                    // backwards, line 223\n                    limit_backward = cursor; cursor = limit;\n                    // (, line 223\n                    // do, line 224\n                    v_5 = limit - cursor;\n                    lab6: do {\n                        // (, line 224\n                        // call Step_1, line 224\n                        if (!r_Step_1())\n                        {\n                            break lab6;\n                        }\n                        // set stemmed, line 224\n                        B_stemmed = true;\n                    } while (false);\n                    cursor = limit - v_5;\n                    // do, line 225\n                    v_6 = limit - cursor;\n                    lab7: do {\n                        // (, line 225\n                        // call Step_2, line 225\n                        if (!r_Step_2())\n                        {\n                            break lab7;\n                        }\n                        // set stemmed, line 225\n                        B_stemmed = true;\n                    } while (false);\n                    cursor = limit - v_6;\n                    // do, line 226\n                    v_7 = limit - cursor;\n                    lab8: do {\n                        // (, line 226\n                        // call Step_3, line 226\n                        if (!r_Step_3())\n                        {\n                            break lab8;\n                        }\n                        // set stemmed, line 226\n                        B_stemmed = true;\n                    } while (false);\n                    cursor = limit - v_7;\n                    // do, line 227\n                    v_8 = limit - cursor;\n                    lab9: do {\n                        // (, line 227\n                        // call Step_4, line 227\n                        if (!r_Step_4())\n                        {\n                            break lab9;\n                        }\n                        // set stemmed, line 227\n                        B_stemmed = true;\n                    } while (false);\n                    cursor = limit - v_8;\n                    cursor = limit_backward;                    // unset GE_removed, line 229\n                    B_GE_removed = false;\n                    // do, line 230\n                    v_9 = cursor;\n                    lab10: do {\n                        // (, line 230\n                        // and, line 230\n                        v_10 = cursor;\n                        // call Lose_prefix, line 230\n                        if (!r_Lose_prefix())\n                        {\n                            break lab10;\n                        }\n                        cursor = v_10;\n                        // call measure, line 230\n                        if (!r_measure())\n                        {\n                            break lab10;\n                        }\n                    } while (false);\n                    cursor = v_9;\n                    // backwards, line 231\n                    limit_backward = cursor; cursor = limit;\n                    // (, line 231\n                    // do, line 232\n                    v_11 = limit - cursor;\n                    lab11: do {\n                        // (, line 232\n                        // Boolean test GE_removed, line 232\n                        if (!(B_GE_removed))\n                        {\n                            break lab11;\n                        }\n                        // call Step_1c, line 232\n                        if (!r_Step_1c())\n                        {\n                            break lab11;\n                        }\n                    } while (false);\n                    cursor = limit - v_11;\n                    cursor = limit_backward;                    // unset GE_removed, line 234\n                    B_GE_removed = false;\n                    // do, line 235\n                    v_12 = cursor;\n                    lab12: do {\n                        // (, line 235\n                        // and, line 235\n                        v_13 = cursor;\n                        // call Lose_infix, line 235\n                        if (!r_Lose_infix())\n                        {\n                            break lab12;\n                        }\n                        cursor = v_13;\n                        // call measure, line 235\n                        if (!r_measure())\n                        {\n                            break lab12;\n                        }\n                    } while (false);\n                    cursor = v_12;\n                    // backwards, line 236\n                    limit_backward = cursor; cursor = limit;\n                    // (, line 236\n                    // do, line 237\n                    v_14 = limit - cursor;\n                    lab13: do {\n                        // (, line 237\n                        // Boolean test GE_removed, line 237\n                        if (!(B_GE_removed))\n                        {\n                            break lab13;\n                        }\n                        // call Step_1c, line 237\n                        if (!r_Step_1c())\n                        {\n                            break lab13;\n                        }\n                    } while (false);\n                    cursor = limit - v_14;\n                    cursor = limit_backward;                    // backwards, line 239\n                    limit_backward = cursor; cursor = limit;\n                    // (, line 239\n                    // do, line 240\n                    v_15 = limit - cursor;\n                    lab14: do {\n                        // (, line 240\n                        // call Step_7, line 240\n                        if (!r_Step_7())\n                        {\n                            break lab14;\n                        }\n                        // set stemmed, line 240\n                        B_stemmed = true;\n                    } while (false);\n                    cursor = limit - v_15;\n                    // do, line 241\n                    v_16 = limit - cursor;\n                    lab15: do {\n                        // (, line 241\n                        // or, line 241\n                        lab16: do {\n                            lab17: do {\n                                // Boolean test stemmed, line 241\n                                if (!(B_stemmed))\n                                {\n                                    break lab17;\n                                }\n                                break lab16;\n                            } while (false);\n                            // Boolean test GE_removed, line 241\n                            if (!(B_GE_removed))\n                            {\n                                break lab15;\n                            }\n                        } while (false);\n                        // call Step_6, line 241\n                        if (!r_Step_6())\n                        {\n                            break lab15;\n                        }\n                    } while (false);\n                    cursor = limit - v_16;\n                    cursor = limit_backward;                    // do, line 243\n                    v_18 = cursor;\n                    lab18: do {\n                        // (, line 243\n                        // Boolean test Y_found, line 243\n                        if (!(B_Y_found))\n                        {\n                            break lab18;\n                        }\n                        // repeat, line 243\n                        replab19: while(true)\n                        {\n                            v_19 = cursor;\n                            lab20: do {\n                                // (, line 243\n                                // goto, line 243\n                                golab21: while(true)\n                                {\n                                    v_20 = cursor;\n                                    lab22: do {\n                                        // (, line 243\n                                        // [, line 243\n                                        bra = cursor;\n                                        // literal, line 243\n                                        if (!(eq_s(1, \"Y\")))\n                                        {\n                                            break lab22;\n                                        }\n                                        // ], line 243\n                                        ket = cursor;\n                                        cursor = v_20;\n                                        break golab21;\n                                    } while (false);\n                                    cursor = v_20;\n                                    if (cursor >= limit)\n                                    {\n                                        break lab20;\n                                    }\n                                    cursor++;\n                                }\n                                // <-, line 243\n                                slice_from(\"y\");\n                                continue replab19;\n                            } while (false);\n                            cursor = v_19;\n                            break replab19;\n                        }\n                    } while (false);\n                    cursor = v_18;\n                    return true;\n                }\n\n","sourceOld":"        public boolean stem() {\n            int v_1;\n            int v_2;\n            int v_3;\n            int v_4;\n            int v_5;\n            int v_6;\n            int v_7;\n            int v_8;\n            int v_9;\n            int v_10;\n            int v_11;\n            int v_12;\n            int v_13;\n            int v_14;\n            int v_15;\n            int v_16;\n            int v_18;\n            int v_19;\n            int v_20;\n            // (, line 214\n            // unset Y_found, line 216\n            B_Y_found = false;\n            // unset stemmed, line 217\n            B_stemmed = false;\n            // do, line 218\n            v_1 = cursor;\n            lab0: do {\n                // (, line 218\n                // [, line 218\n                bra = cursor;\n                // literal, line 218\n                if (!(eq_s(1, \"y\")))\n                {\n                    break lab0;\n                }\n                // ], line 218\n                ket = cursor;\n                // <-, line 218\n                slice_from(\"Y\");\n                // set Y_found, line 218\n                B_Y_found = true;\n            } while (false);\n            cursor = v_1;\n            // do, line 219\n            v_2 = cursor;\n            lab1: do {\n                // repeat, line 219\n                replab2: while(true)\n                {\n                    v_3 = cursor;\n                    lab3: do {\n                        // (, line 219\n                        // goto, line 219\n                        golab4: while(true)\n                        {\n                            v_4 = cursor;\n                            lab5: do {\n                                // (, line 219\n                                if (!(in_grouping(g_v, 97, 121)))\n                                {\n                                    break lab5;\n                                }\n                                // [, line 219\n                                bra = cursor;\n                                // literal, line 219\n                                if (!(eq_s(1, \"y\")))\n                                {\n                                    break lab5;\n                                }\n                                // ], line 219\n                                ket = cursor;\n                                cursor = v_4;\n                                break golab4;\n                            } while (false);\n                            cursor = v_4;\n                            if (cursor >= limit)\n                            {\n                                break lab3;\n                            }\n                            cursor++;\n                        }\n                        // <-, line 219\n                        slice_from(\"Y\");\n                        // set Y_found, line 219\n                        B_Y_found = true;\n                        continue replab2;\n                    } while (false);\n                    cursor = v_3;\n                    break replab2;\n                }\n            } while (false);\n            cursor = v_2;\n            // call measure, line 221\n            if (!r_measure())\n            {\n                return false;\n            }\n            // backwards, line 223\n            limit_backward = cursor; cursor = limit;\n            // (, line 223\n            // do, line 224\n            v_5 = limit - cursor;\n            lab6: do {\n                // (, line 224\n                // call Step_1, line 224\n                if (!r_Step_1())\n                {\n                    break lab6;\n                }\n                // set stemmed, line 224\n                B_stemmed = true;\n            } while (false);\n            cursor = limit - v_5;\n            // do, line 225\n            v_6 = limit - cursor;\n            lab7: do {\n                // (, line 225\n                // call Step_2, line 225\n                if (!r_Step_2())\n                {\n                    break lab7;\n                }\n                // set stemmed, line 225\n                B_stemmed = true;\n            } while (false);\n            cursor = limit - v_6;\n            // do, line 226\n            v_7 = limit - cursor;\n            lab8: do {\n                // (, line 226\n                // call Step_3, line 226\n                if (!r_Step_3())\n                {\n                    break lab8;\n                }\n                // set stemmed, line 226\n                B_stemmed = true;\n            } while (false);\n            cursor = limit - v_7;\n            // do, line 227\n            v_8 = limit - cursor;\n            lab9: do {\n                // (, line 227\n                // call Step_4, line 227\n                if (!r_Step_4())\n                {\n                    break lab9;\n                }\n                // set stemmed, line 227\n                B_stemmed = true;\n            } while (false);\n            cursor = limit - v_8;\n            cursor = limit_backward;            // unset GE_removed, line 229\n            B_GE_removed = false;\n            // do, line 230\n            v_9 = cursor;\n            lab10: do {\n                // (, line 230\n                // and, line 230\n                v_10 = cursor;\n                // call Lose_prefix, line 230\n                if (!r_Lose_prefix())\n                {\n                    break lab10;\n                }\n                cursor = v_10;\n                // call measure, line 230\n                if (!r_measure())\n                {\n                    break lab10;\n                }\n            } while (false);\n            cursor = v_9;\n            // backwards, line 231\n            limit_backward = cursor; cursor = limit;\n            // (, line 231\n            // do, line 232\n            v_11 = limit - cursor;\n            lab11: do {\n                // (, line 232\n                // Boolean test GE_removed, line 232\n                if (!(B_GE_removed))\n                {\n                    break lab11;\n                }\n                // call Step_1c, line 232\n                if (!r_Step_1c())\n                {\n                    break lab11;\n                }\n            } while (false);\n            cursor = limit - v_11;\n            cursor = limit_backward;            // unset GE_removed, line 234\n            B_GE_removed = false;\n            // do, line 235\n            v_12 = cursor;\n            lab12: do {\n                // (, line 235\n                // and, line 235\n                v_13 = cursor;\n                // call Lose_infix, line 235\n                if (!r_Lose_infix())\n                {\n                    break lab12;\n                }\n                cursor = v_13;\n                // call measure, line 235\n                if (!r_measure())\n                {\n                    break lab12;\n                }\n            } while (false);\n            cursor = v_12;\n            // backwards, line 236\n            limit_backward = cursor; cursor = limit;\n            // (, line 236\n            // do, line 237\n            v_14 = limit - cursor;\n            lab13: do {\n                // (, line 237\n                // Boolean test GE_removed, line 237\n                if (!(B_GE_removed))\n                {\n                    break lab13;\n                }\n                // call Step_1c, line 237\n                if (!r_Step_1c())\n                {\n                    break lab13;\n                }\n            } while (false);\n            cursor = limit - v_14;\n            cursor = limit_backward;            // backwards, line 239\n            limit_backward = cursor; cursor = limit;\n            // (, line 239\n            // do, line 240\n            v_15 = limit - cursor;\n            lab14: do {\n                // (, line 240\n                // call Step_7, line 240\n                if (!r_Step_7())\n                {\n                    break lab14;\n                }\n                // set stemmed, line 240\n                B_stemmed = true;\n            } while (false);\n            cursor = limit - v_15;\n            // do, line 241\n            v_16 = limit - cursor;\n            lab15: do {\n                // (, line 241\n                // or, line 241\n                lab16: do {\n                    lab17: do {\n                        // Boolean test stemmed, line 241\n                        if (!(B_stemmed))\n                        {\n                            break lab17;\n                        }\n                        break lab16;\n                    } while (false);\n                    // Boolean test GE_removed, line 241\n                    if (!(B_GE_removed))\n                    {\n                        break lab15;\n                    }\n                } while (false);\n                // call Step_6, line 241\n                if (!r_Step_6())\n                {\n                    break lab15;\n                }\n            } while (false);\n            cursor = limit - v_16;\n            cursor = limit_backward;            // do, line 243\n            v_18 = cursor;\n            lab18: do {\n                // (, line 243\n                // Boolean test Y_found, line 243\n                if (!(B_Y_found))\n                {\n                    break lab18;\n                }\n                // repeat, line 243\n                replab19: while(true)\n                {\n                    v_19 = cursor;\n                    lab20: do {\n                        // (, line 243\n                        // goto, line 243\n                        golab21: while(true)\n                        {\n                            v_20 = cursor;\n                            lab22: do {\n                                // (, line 243\n                                // [, line 243\n                                bra = cursor;\n                                // literal, line 243\n                                if (!(eq_s(1, \"Y\")))\n                                {\n                                    break lab22;\n                                }\n                                // ], line 243\n                                ket = cursor;\n                                cursor = v_20;\n                                break golab21;\n                            } while (false);\n                            cursor = v_20;\n                            if (cursor >= limit)\n                            {\n                                break lab20;\n                            }\n                            cursor++;\n                        }\n                        // <-, line 243\n                        slice_from(\"y\");\n                        continue replab19;\n                    } while (false);\n                    cursor = v_19;\n                    break replab19;\n                }\n            } while (false);\n            cursor = v_18;\n            return true;\n        }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d6f074e73200c07d54f242d3880a8da5a35ff97b","date":1344507653,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/analysis/common/src/java/org/tartarus/snowball/ext/KpStemmer#stem().mjava","pathOld":"lucene/analysis/common/src/java/org/tartarus/snowball/ext/KpStemmer#stem().mjava","sourceNew":"                public boolean stem() {\n            int v_1;\n            int v_2;\n            int v_3;\n            int v_4;\n            int v_5;\n            int v_6;\n            int v_7;\n            int v_8;\n            int v_9;\n            int v_10;\n            int v_11;\n            int v_12;\n            int v_13;\n            int v_14;\n            int v_15;\n            int v_16;\n            int v_18;\n            int v_19;\n            int v_20;\n                    // (, line 214\n                    // unset Y_found, line 216\n                    B_Y_found = false;\n                    // unset stemmed, line 217\n                    B_stemmed = false;\n                    // do, line 218\n                    v_1 = cursor;\n                    lab0: do {\n                        // (, line 218\n                        // [, line 218\n                        bra = cursor;\n                        // literal, line 218\n                        if (!(eq_s(1, \"y\")))\n                        {\n                            break lab0;\n                        }\n                        // ], line 218\n                        ket = cursor;\n                        // <-, line 218\n                        slice_from(\"Y\");\n                        // set Y_found, line 218\n                        B_Y_found = true;\n                    } while (false);\n                    cursor = v_1;\n                    // do, line 219\n                    v_2 = cursor;\n                    lab1: do {\n                        // repeat, line 219\n                        replab2: while(true)\n                        {\n                            v_3 = cursor;\n                            lab3: do {\n                                // (, line 219\n                                // goto, line 219\n                                golab4: while(true)\n                                {\n                                    v_4 = cursor;\n                                    lab5: do {\n                                        // (, line 219\n                                        if (!(in_grouping(g_v, 97, 121)))\n                                        {\n                                            break lab5;\n                                        }\n                                        // [, line 219\n                                        bra = cursor;\n                                        // literal, line 219\n                                        if (!(eq_s(1, \"y\")))\n                                        {\n                                            break lab5;\n                                        }\n                                        // ], line 219\n                                        ket = cursor;\n                                        cursor = v_4;\n                                        break golab4;\n                                    } while (false);\n                                    cursor = v_4;\n                                    if (cursor >= limit)\n                                    {\n                                        break lab3;\n                                    }\n                                    cursor++;\n                                }\n                                // <-, line 219\n                                slice_from(\"Y\");\n                                // set Y_found, line 219\n                                B_Y_found = true;\n                                continue replab2;\n                            } while (false);\n                            cursor = v_3;\n                            break replab2;\n                        }\n                    } while (false);\n                    cursor = v_2;\n                    // call measure, line 221\n                    if (!r_measure())\n                    {\n                        return false;\n                    }\n                    // backwards, line 223\n                    limit_backward = cursor; cursor = limit;\n                    // (, line 223\n                    // do, line 224\n                    v_5 = limit - cursor;\n                    lab6: do {\n                        // (, line 224\n                        // call Step_1, line 224\n                        if (!r_Step_1())\n                        {\n                            break lab6;\n                        }\n                        // set stemmed, line 224\n                        B_stemmed = true;\n                    } while (false);\n                    cursor = limit - v_5;\n                    // do, line 225\n                    v_6 = limit - cursor;\n                    lab7: do {\n                        // (, line 225\n                        // call Step_2, line 225\n                        if (!r_Step_2())\n                        {\n                            break lab7;\n                        }\n                        // set stemmed, line 225\n                        B_stemmed = true;\n                    } while (false);\n                    cursor = limit - v_6;\n                    // do, line 226\n                    v_7 = limit - cursor;\n                    lab8: do {\n                        // (, line 226\n                        // call Step_3, line 226\n                        if (!r_Step_3())\n                        {\n                            break lab8;\n                        }\n                        // set stemmed, line 226\n                        B_stemmed = true;\n                    } while (false);\n                    cursor = limit - v_7;\n                    // do, line 227\n                    v_8 = limit - cursor;\n                    lab9: do {\n                        // (, line 227\n                        // call Step_4, line 227\n                        if (!r_Step_4())\n                        {\n                            break lab9;\n                        }\n                        // set stemmed, line 227\n                        B_stemmed = true;\n                    } while (false);\n                    cursor = limit - v_8;\n                    cursor = limit_backward;                    // unset GE_removed, line 229\n                    B_GE_removed = false;\n                    // do, line 230\n                    v_9 = cursor;\n                    lab10: do {\n                        // (, line 230\n                        // and, line 230\n                        v_10 = cursor;\n                        // call Lose_prefix, line 230\n                        if (!r_Lose_prefix())\n                        {\n                            break lab10;\n                        }\n                        cursor = v_10;\n                        // call measure, line 230\n                        if (!r_measure())\n                        {\n                            break lab10;\n                        }\n                    } while (false);\n                    cursor = v_9;\n                    // backwards, line 231\n                    limit_backward = cursor; cursor = limit;\n                    // (, line 231\n                    // do, line 232\n                    v_11 = limit - cursor;\n                    lab11: do {\n                        // (, line 232\n                        // Boolean test GE_removed, line 232\n                        if (!(B_GE_removed))\n                        {\n                            break lab11;\n                        }\n                        // call Step_1c, line 232\n                        if (!r_Step_1c())\n                        {\n                            break lab11;\n                        }\n                    } while (false);\n                    cursor = limit - v_11;\n                    cursor = limit_backward;                    // unset GE_removed, line 234\n                    B_GE_removed = false;\n                    // do, line 235\n                    v_12 = cursor;\n                    lab12: do {\n                        // (, line 235\n                        // and, line 235\n                        v_13 = cursor;\n                        // call Lose_infix, line 235\n                        if (!r_Lose_infix())\n                        {\n                            break lab12;\n                        }\n                        cursor = v_13;\n                        // call measure, line 235\n                        if (!r_measure())\n                        {\n                            break lab12;\n                        }\n                    } while (false);\n                    cursor = v_12;\n                    // backwards, line 236\n                    limit_backward = cursor; cursor = limit;\n                    // (, line 236\n                    // do, line 237\n                    v_14 = limit - cursor;\n                    lab13: do {\n                        // (, line 237\n                        // Boolean test GE_removed, line 237\n                        if (!(B_GE_removed))\n                        {\n                            break lab13;\n                        }\n                        // call Step_1c, line 237\n                        if (!r_Step_1c())\n                        {\n                            break lab13;\n                        }\n                    } while (false);\n                    cursor = limit - v_14;\n                    cursor = limit_backward;                    // backwards, line 239\n                    limit_backward = cursor; cursor = limit;\n                    // (, line 239\n                    // do, line 240\n                    v_15 = limit - cursor;\n                    lab14: do {\n                        // (, line 240\n                        // call Step_7, line 240\n                        if (!r_Step_7())\n                        {\n                            break lab14;\n                        }\n                        // set stemmed, line 240\n                        B_stemmed = true;\n                    } while (false);\n                    cursor = limit - v_15;\n                    // do, line 241\n                    v_16 = limit - cursor;\n                    lab15: do {\n                        // (, line 241\n                        // or, line 241\n                        lab16: do {\n                            lab17: do {\n                                // Boolean test stemmed, line 241\n                                if (!(B_stemmed))\n                                {\n                                    break lab17;\n                                }\n                                break lab16;\n                            } while (false);\n                            // Boolean test GE_removed, line 241\n                            if (!(B_GE_removed))\n                            {\n                                break lab15;\n                            }\n                        } while (false);\n                        // call Step_6, line 241\n                        if (!r_Step_6())\n                        {\n                            break lab15;\n                        }\n                    } while (false);\n                    cursor = limit - v_16;\n                    cursor = limit_backward;                    // do, line 243\n                    v_18 = cursor;\n                    lab18: do {\n                        // (, line 243\n                        // Boolean test Y_found, line 243\n                        if (!(B_Y_found))\n                        {\n                            break lab18;\n                        }\n                        // repeat, line 243\n                        replab19: while(true)\n                        {\n                            v_19 = cursor;\n                            lab20: do {\n                                // (, line 243\n                                // goto, line 243\n                                golab21: while(true)\n                                {\n                                    v_20 = cursor;\n                                    lab22: do {\n                                        // (, line 243\n                                        // [, line 243\n                                        bra = cursor;\n                                        // literal, line 243\n                                        if (!(eq_s(1, \"Y\")))\n                                        {\n                                            break lab22;\n                                        }\n                                        // ], line 243\n                                        ket = cursor;\n                                        cursor = v_20;\n                                        break golab21;\n                                    } while (false);\n                                    cursor = v_20;\n                                    if (cursor >= limit)\n                                    {\n                                        break lab20;\n                                    }\n                                    cursor++;\n                                }\n                                // <-, line 243\n                                slice_from(\"y\");\n                                continue replab19;\n                            } while (false);\n                            cursor = v_19;\n                            break replab19;\n                        }\n                    } while (false);\n                    cursor = v_18;\n                    return true;\n                }\n\n","sourceOld":"        public boolean stem() {\n            int v_1;\n            int v_2;\n            int v_3;\n            int v_4;\n            int v_5;\n            int v_6;\n            int v_7;\n            int v_8;\n            int v_9;\n            int v_10;\n            int v_11;\n            int v_12;\n            int v_13;\n            int v_14;\n            int v_15;\n            int v_16;\n            int v_18;\n            int v_19;\n            int v_20;\n            // (, line 214\n            // unset Y_found, line 216\n            B_Y_found = false;\n            // unset stemmed, line 217\n            B_stemmed = false;\n            // do, line 218\n            v_1 = cursor;\n            lab0: do {\n                // (, line 218\n                // [, line 218\n                bra = cursor;\n                // literal, line 218\n                if (!(eq_s(1, \"y\")))\n                {\n                    break lab0;\n                }\n                // ], line 218\n                ket = cursor;\n                // <-, line 218\n                slice_from(\"Y\");\n                // set Y_found, line 218\n                B_Y_found = true;\n            } while (false);\n            cursor = v_1;\n            // do, line 219\n            v_2 = cursor;\n            lab1: do {\n                // repeat, line 219\n                replab2: while(true)\n                {\n                    v_3 = cursor;\n                    lab3: do {\n                        // (, line 219\n                        // goto, line 219\n                        golab4: while(true)\n                        {\n                            v_4 = cursor;\n                            lab5: do {\n                                // (, line 219\n                                if (!(in_grouping(g_v, 97, 121)))\n                                {\n                                    break lab5;\n                                }\n                                // [, line 219\n                                bra = cursor;\n                                // literal, line 219\n                                if (!(eq_s(1, \"y\")))\n                                {\n                                    break lab5;\n                                }\n                                // ], line 219\n                                ket = cursor;\n                                cursor = v_4;\n                                break golab4;\n                            } while (false);\n                            cursor = v_4;\n                            if (cursor >= limit)\n                            {\n                                break lab3;\n                            }\n                            cursor++;\n                        }\n                        // <-, line 219\n                        slice_from(\"Y\");\n                        // set Y_found, line 219\n                        B_Y_found = true;\n                        continue replab2;\n                    } while (false);\n                    cursor = v_3;\n                    break replab2;\n                }\n            } while (false);\n            cursor = v_2;\n            // call measure, line 221\n            if (!r_measure())\n            {\n                return false;\n            }\n            // backwards, line 223\n            limit_backward = cursor; cursor = limit;\n            // (, line 223\n            // do, line 224\n            v_5 = limit - cursor;\n            lab6: do {\n                // (, line 224\n                // call Step_1, line 224\n                if (!r_Step_1())\n                {\n                    break lab6;\n                }\n                // set stemmed, line 224\n                B_stemmed = true;\n            } while (false);\n            cursor = limit - v_5;\n            // do, line 225\n            v_6 = limit - cursor;\n            lab7: do {\n                // (, line 225\n                // call Step_2, line 225\n                if (!r_Step_2())\n                {\n                    break lab7;\n                }\n                // set stemmed, line 225\n                B_stemmed = true;\n            } while (false);\n            cursor = limit - v_6;\n            // do, line 226\n            v_7 = limit - cursor;\n            lab8: do {\n                // (, line 226\n                // call Step_3, line 226\n                if (!r_Step_3())\n                {\n                    break lab8;\n                }\n                // set stemmed, line 226\n                B_stemmed = true;\n            } while (false);\n            cursor = limit - v_7;\n            // do, line 227\n            v_8 = limit - cursor;\n            lab9: do {\n                // (, line 227\n                // call Step_4, line 227\n                if (!r_Step_4())\n                {\n                    break lab9;\n                }\n                // set stemmed, line 227\n                B_stemmed = true;\n            } while (false);\n            cursor = limit - v_8;\n            cursor = limit_backward;            // unset GE_removed, line 229\n            B_GE_removed = false;\n            // do, line 230\n            v_9 = cursor;\n            lab10: do {\n                // (, line 230\n                // and, line 230\n                v_10 = cursor;\n                // call Lose_prefix, line 230\n                if (!r_Lose_prefix())\n                {\n                    break lab10;\n                }\n                cursor = v_10;\n                // call measure, line 230\n                if (!r_measure())\n                {\n                    break lab10;\n                }\n            } while (false);\n            cursor = v_9;\n            // backwards, line 231\n            limit_backward = cursor; cursor = limit;\n            // (, line 231\n            // do, line 232\n            v_11 = limit - cursor;\n            lab11: do {\n                // (, line 232\n                // Boolean test GE_removed, line 232\n                if (!(B_GE_removed))\n                {\n                    break lab11;\n                }\n                // call Step_1c, line 232\n                if (!r_Step_1c())\n                {\n                    break lab11;\n                }\n            } while (false);\n            cursor = limit - v_11;\n            cursor = limit_backward;            // unset GE_removed, line 234\n            B_GE_removed = false;\n            // do, line 235\n            v_12 = cursor;\n            lab12: do {\n                // (, line 235\n                // and, line 235\n                v_13 = cursor;\n                // call Lose_infix, line 235\n                if (!r_Lose_infix())\n                {\n                    break lab12;\n                }\n                cursor = v_13;\n                // call measure, line 235\n                if (!r_measure())\n                {\n                    break lab12;\n                }\n            } while (false);\n            cursor = v_12;\n            // backwards, line 236\n            limit_backward = cursor; cursor = limit;\n            // (, line 236\n            // do, line 237\n            v_14 = limit - cursor;\n            lab13: do {\n                // (, line 237\n                // Boolean test GE_removed, line 237\n                if (!(B_GE_removed))\n                {\n                    break lab13;\n                }\n                // call Step_1c, line 237\n                if (!r_Step_1c())\n                {\n                    break lab13;\n                }\n            } while (false);\n            cursor = limit - v_14;\n            cursor = limit_backward;            // backwards, line 239\n            limit_backward = cursor; cursor = limit;\n            // (, line 239\n            // do, line 240\n            v_15 = limit - cursor;\n            lab14: do {\n                // (, line 240\n                // call Step_7, line 240\n                if (!r_Step_7())\n                {\n                    break lab14;\n                }\n                // set stemmed, line 240\n                B_stemmed = true;\n            } while (false);\n            cursor = limit - v_15;\n            // do, line 241\n            v_16 = limit - cursor;\n            lab15: do {\n                // (, line 241\n                // or, line 241\n                lab16: do {\n                    lab17: do {\n                        // Boolean test stemmed, line 241\n                        if (!(B_stemmed))\n                        {\n                            break lab17;\n                        }\n                        break lab16;\n                    } while (false);\n                    // Boolean test GE_removed, line 241\n                    if (!(B_GE_removed))\n                    {\n                        break lab15;\n                    }\n                } while (false);\n                // call Step_6, line 241\n                if (!r_Step_6())\n                {\n                    break lab15;\n                }\n            } while (false);\n            cursor = limit - v_16;\n            cursor = limit_backward;            // do, line 243\n            v_18 = cursor;\n            lab18: do {\n                // (, line 243\n                // Boolean test Y_found, line 243\n                if (!(B_Y_found))\n                {\n                    break lab18;\n                }\n                // repeat, line 243\n                replab19: while(true)\n                {\n                    v_19 = cursor;\n                    lab20: do {\n                        // (, line 243\n                        // goto, line 243\n                        golab21: while(true)\n                        {\n                            v_20 = cursor;\n                            lab22: do {\n                                // (, line 243\n                                // [, line 243\n                                bra = cursor;\n                                // literal, line 243\n                                if (!(eq_s(1, \"Y\")))\n                                {\n                                    break lab22;\n                                }\n                                // ], line 243\n                                ket = cursor;\n                                cursor = v_20;\n                                break golab21;\n                            } while (false);\n                            cursor = v_20;\n                            if (cursor >= limit)\n                            {\n                                break lab20;\n                            }\n                            cursor++;\n                        }\n                        // <-, line 243\n                        slice_from(\"y\");\n                        continue replab19;\n                    } while (false);\n                    cursor = v_19;\n                    break replab19;\n                }\n            } while (false);\n            cursor = v_18;\n            return true;\n        }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7530de27b87b961b51f01bd1299b7004d46e8823","date":1355236261,"type":3,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/analysis/common/src/java/org/tartarus/snowball/ext/KpStemmer#stem().mjava","pathOld":"lucene/analysis/common/src/java/org/tartarus/snowball/ext/KpStemmer#stem().mjava","sourceNew":"                @Override\n                public boolean stem() {\n            int v_1;\n            int v_2;\n            int v_3;\n            int v_4;\n            int v_5;\n            int v_6;\n            int v_7;\n            int v_8;\n            int v_9;\n            int v_10;\n            int v_11;\n            int v_12;\n            int v_13;\n            int v_14;\n            int v_15;\n            int v_16;\n            int v_18;\n            int v_19;\n            int v_20;\n                    // (, line 214\n                    // unset Y_found, line 216\n                    B_Y_found = false;\n                    // unset stemmed, line 217\n                    B_stemmed = false;\n                    // do, line 218\n                    v_1 = cursor;\n                    lab0: do {\n                        // (, line 218\n                        // [, line 218\n                        bra = cursor;\n                        // literal, line 218\n                        if (!(eq_s(1, \"y\")))\n                        {\n                            break lab0;\n                        }\n                        // ], line 218\n                        ket = cursor;\n                        // <-, line 218\n                        slice_from(\"Y\");\n                        // set Y_found, line 218\n                        B_Y_found = true;\n                    } while (false);\n                    cursor = v_1;\n                    // do, line 219\n                    v_2 = cursor;\n                    lab1: do {\n                        // repeat, line 219\n                        replab2: while(true)\n                        {\n                            v_3 = cursor;\n                            lab3: do {\n                                // (, line 219\n                                // goto, line 219\n                                golab4: while(true)\n                                {\n                                    v_4 = cursor;\n                                    lab5: do {\n                                        // (, line 219\n                                        if (!(in_grouping(g_v, 97, 121)))\n                                        {\n                                            break lab5;\n                                        }\n                                        // [, line 219\n                                        bra = cursor;\n                                        // literal, line 219\n                                        if (!(eq_s(1, \"y\")))\n                                        {\n                                            break lab5;\n                                        }\n                                        // ], line 219\n                                        ket = cursor;\n                                        cursor = v_4;\n                                        break golab4;\n                                    } while (false);\n                                    cursor = v_4;\n                                    if (cursor >= limit)\n                                    {\n                                        break lab3;\n                                    }\n                                    cursor++;\n                                }\n                                // <-, line 219\n                                slice_from(\"Y\");\n                                // set Y_found, line 219\n                                B_Y_found = true;\n                                continue replab2;\n                            } while (false);\n                            cursor = v_3;\n                            break replab2;\n                        }\n                    } while (false);\n                    cursor = v_2;\n                    // call measure, line 221\n                    if (!r_measure())\n                    {\n                        return false;\n                    }\n                    // backwards, line 223\n                    limit_backward = cursor; cursor = limit;\n                    // (, line 223\n                    // do, line 224\n                    v_5 = limit - cursor;\n                    lab6: do {\n                        // (, line 224\n                        // call Step_1, line 224\n                        if (!r_Step_1())\n                        {\n                            break lab6;\n                        }\n                        // set stemmed, line 224\n                        B_stemmed = true;\n                    } while (false);\n                    cursor = limit - v_5;\n                    // do, line 225\n                    v_6 = limit - cursor;\n                    lab7: do {\n                        // (, line 225\n                        // call Step_2, line 225\n                        if (!r_Step_2())\n                        {\n                            break lab7;\n                        }\n                        // set stemmed, line 225\n                        B_stemmed = true;\n                    } while (false);\n                    cursor = limit - v_6;\n                    // do, line 226\n                    v_7 = limit - cursor;\n                    lab8: do {\n                        // (, line 226\n                        // call Step_3, line 226\n                        if (!r_Step_3())\n                        {\n                            break lab8;\n                        }\n                        // set stemmed, line 226\n                        B_stemmed = true;\n                    } while (false);\n                    cursor = limit - v_7;\n                    // do, line 227\n                    v_8 = limit - cursor;\n                    lab9: do {\n                        // (, line 227\n                        // call Step_4, line 227\n                        if (!r_Step_4())\n                        {\n                            break lab9;\n                        }\n                        // set stemmed, line 227\n                        B_stemmed = true;\n                    } while (false);\n                    cursor = limit - v_8;\n                    cursor = limit_backward;                    // unset GE_removed, line 229\n                    B_GE_removed = false;\n                    // do, line 230\n                    v_9 = cursor;\n                    lab10: do {\n                        // (, line 230\n                        // and, line 230\n                        v_10 = cursor;\n                        // call Lose_prefix, line 230\n                        if (!r_Lose_prefix())\n                        {\n                            break lab10;\n                        }\n                        cursor = v_10;\n                        // call measure, line 230\n                        if (!r_measure())\n                        {\n                            break lab10;\n                        }\n                    } while (false);\n                    cursor = v_9;\n                    // backwards, line 231\n                    limit_backward = cursor; cursor = limit;\n                    // (, line 231\n                    // do, line 232\n                    v_11 = limit - cursor;\n                    lab11: do {\n                        // (, line 232\n                        // Boolean test GE_removed, line 232\n                        if (!(B_GE_removed))\n                        {\n                            break lab11;\n                        }\n                        // call Step_1c, line 232\n                        if (!r_Step_1c())\n                        {\n                            break lab11;\n                        }\n                    } while (false);\n                    cursor = limit - v_11;\n                    cursor = limit_backward;                    // unset GE_removed, line 234\n                    B_GE_removed = false;\n                    // do, line 235\n                    v_12 = cursor;\n                    lab12: do {\n                        // (, line 235\n                        // and, line 235\n                        v_13 = cursor;\n                        // call Lose_infix, line 235\n                        if (!r_Lose_infix())\n                        {\n                            break lab12;\n                        }\n                        cursor = v_13;\n                        // call measure, line 235\n                        if (!r_measure())\n                        {\n                            break lab12;\n                        }\n                    } while (false);\n                    cursor = v_12;\n                    // backwards, line 236\n                    limit_backward = cursor; cursor = limit;\n                    // (, line 236\n                    // do, line 237\n                    v_14 = limit - cursor;\n                    lab13: do {\n                        // (, line 237\n                        // Boolean test GE_removed, line 237\n                        if (!(B_GE_removed))\n                        {\n                            break lab13;\n                        }\n                        // call Step_1c, line 237\n                        if (!r_Step_1c())\n                        {\n                            break lab13;\n                        }\n                    } while (false);\n                    cursor = limit - v_14;\n                    cursor = limit_backward;                    // backwards, line 239\n                    limit_backward = cursor; cursor = limit;\n                    // (, line 239\n                    // do, line 240\n                    v_15 = limit - cursor;\n                    lab14: do {\n                        // (, line 240\n                        // call Step_7, line 240\n                        if (!r_Step_7())\n                        {\n                            break lab14;\n                        }\n                        // set stemmed, line 240\n                        B_stemmed = true;\n                    } while (false);\n                    cursor = limit - v_15;\n                    // do, line 241\n                    v_16 = limit - cursor;\n                    lab15: do {\n                        // (, line 241\n                        // or, line 241\n                        lab16: do {\n                            lab17: do {\n                                // Boolean test stemmed, line 241\n                                if (!(B_stemmed))\n                                {\n                                    break lab17;\n                                }\n                                break lab16;\n                            } while (false);\n                            // Boolean test GE_removed, line 241\n                            if (!(B_GE_removed))\n                            {\n                                break lab15;\n                            }\n                        } while (false);\n                        // call Step_6, line 241\n                        if (!r_Step_6())\n                        {\n                            break lab15;\n                        }\n                    } while (false);\n                    cursor = limit - v_16;\n                    cursor = limit_backward;                    // do, line 243\n                    v_18 = cursor;\n                    lab18: do {\n                        // (, line 243\n                        // Boolean test Y_found, line 243\n                        if (!(B_Y_found))\n                        {\n                            break lab18;\n                        }\n                        // repeat, line 243\n                        replab19: while(true)\n                        {\n                            v_19 = cursor;\n                            lab20: do {\n                                // (, line 243\n                                // goto, line 243\n                                golab21: while(true)\n                                {\n                                    v_20 = cursor;\n                                    lab22: do {\n                                        // (, line 243\n                                        // [, line 243\n                                        bra = cursor;\n                                        // literal, line 243\n                                        if (!(eq_s(1, \"Y\")))\n                                        {\n                                            break lab22;\n                                        }\n                                        // ], line 243\n                                        ket = cursor;\n                                        cursor = v_20;\n                                        break golab21;\n                                    } while (false);\n                                    cursor = v_20;\n                                    if (cursor >= limit)\n                                    {\n                                        break lab20;\n                                    }\n                                    cursor++;\n                                }\n                                // <-, line 243\n                                slice_from(\"y\");\n                                continue replab19;\n                            } while (false);\n                            cursor = v_19;\n                            break replab19;\n                        }\n                    } while (false);\n                    cursor = v_18;\n                    return true;\n                }\n\n","sourceOld":"                public boolean stem() {\n            int v_1;\n            int v_2;\n            int v_3;\n            int v_4;\n            int v_5;\n            int v_6;\n            int v_7;\n            int v_8;\n            int v_9;\n            int v_10;\n            int v_11;\n            int v_12;\n            int v_13;\n            int v_14;\n            int v_15;\n            int v_16;\n            int v_18;\n            int v_19;\n            int v_20;\n                    // (, line 214\n                    // unset Y_found, line 216\n                    B_Y_found = false;\n                    // unset stemmed, line 217\n                    B_stemmed = false;\n                    // do, line 218\n                    v_1 = cursor;\n                    lab0: do {\n                        // (, line 218\n                        // [, line 218\n                        bra = cursor;\n                        // literal, line 218\n                        if (!(eq_s(1, \"y\")))\n                        {\n                            break lab0;\n                        }\n                        // ], line 218\n                        ket = cursor;\n                        // <-, line 218\n                        slice_from(\"Y\");\n                        // set Y_found, line 218\n                        B_Y_found = true;\n                    } while (false);\n                    cursor = v_1;\n                    // do, line 219\n                    v_2 = cursor;\n                    lab1: do {\n                        // repeat, line 219\n                        replab2: while(true)\n                        {\n                            v_3 = cursor;\n                            lab3: do {\n                                // (, line 219\n                                // goto, line 219\n                                golab4: while(true)\n                                {\n                                    v_4 = cursor;\n                                    lab5: do {\n                                        // (, line 219\n                                        if (!(in_grouping(g_v, 97, 121)))\n                                        {\n                                            break lab5;\n                                        }\n                                        // [, line 219\n                                        bra = cursor;\n                                        // literal, line 219\n                                        if (!(eq_s(1, \"y\")))\n                                        {\n                                            break lab5;\n                                        }\n                                        // ], line 219\n                                        ket = cursor;\n                                        cursor = v_4;\n                                        break golab4;\n                                    } while (false);\n                                    cursor = v_4;\n                                    if (cursor >= limit)\n                                    {\n                                        break lab3;\n                                    }\n                                    cursor++;\n                                }\n                                // <-, line 219\n                                slice_from(\"Y\");\n                                // set Y_found, line 219\n                                B_Y_found = true;\n                                continue replab2;\n                            } while (false);\n                            cursor = v_3;\n                            break replab2;\n                        }\n                    } while (false);\n                    cursor = v_2;\n                    // call measure, line 221\n                    if (!r_measure())\n                    {\n                        return false;\n                    }\n                    // backwards, line 223\n                    limit_backward = cursor; cursor = limit;\n                    // (, line 223\n                    // do, line 224\n                    v_5 = limit - cursor;\n                    lab6: do {\n                        // (, line 224\n                        // call Step_1, line 224\n                        if (!r_Step_1())\n                        {\n                            break lab6;\n                        }\n                        // set stemmed, line 224\n                        B_stemmed = true;\n                    } while (false);\n                    cursor = limit - v_5;\n                    // do, line 225\n                    v_6 = limit - cursor;\n                    lab7: do {\n                        // (, line 225\n                        // call Step_2, line 225\n                        if (!r_Step_2())\n                        {\n                            break lab7;\n                        }\n                        // set stemmed, line 225\n                        B_stemmed = true;\n                    } while (false);\n                    cursor = limit - v_6;\n                    // do, line 226\n                    v_7 = limit - cursor;\n                    lab8: do {\n                        // (, line 226\n                        // call Step_3, line 226\n                        if (!r_Step_3())\n                        {\n                            break lab8;\n                        }\n                        // set stemmed, line 226\n                        B_stemmed = true;\n                    } while (false);\n                    cursor = limit - v_7;\n                    // do, line 227\n                    v_8 = limit - cursor;\n                    lab9: do {\n                        // (, line 227\n                        // call Step_4, line 227\n                        if (!r_Step_4())\n                        {\n                            break lab9;\n                        }\n                        // set stemmed, line 227\n                        B_stemmed = true;\n                    } while (false);\n                    cursor = limit - v_8;\n                    cursor = limit_backward;                    // unset GE_removed, line 229\n                    B_GE_removed = false;\n                    // do, line 230\n                    v_9 = cursor;\n                    lab10: do {\n                        // (, line 230\n                        // and, line 230\n                        v_10 = cursor;\n                        // call Lose_prefix, line 230\n                        if (!r_Lose_prefix())\n                        {\n                            break lab10;\n                        }\n                        cursor = v_10;\n                        // call measure, line 230\n                        if (!r_measure())\n                        {\n                            break lab10;\n                        }\n                    } while (false);\n                    cursor = v_9;\n                    // backwards, line 231\n                    limit_backward = cursor; cursor = limit;\n                    // (, line 231\n                    // do, line 232\n                    v_11 = limit - cursor;\n                    lab11: do {\n                        // (, line 232\n                        // Boolean test GE_removed, line 232\n                        if (!(B_GE_removed))\n                        {\n                            break lab11;\n                        }\n                        // call Step_1c, line 232\n                        if (!r_Step_1c())\n                        {\n                            break lab11;\n                        }\n                    } while (false);\n                    cursor = limit - v_11;\n                    cursor = limit_backward;                    // unset GE_removed, line 234\n                    B_GE_removed = false;\n                    // do, line 235\n                    v_12 = cursor;\n                    lab12: do {\n                        // (, line 235\n                        // and, line 235\n                        v_13 = cursor;\n                        // call Lose_infix, line 235\n                        if (!r_Lose_infix())\n                        {\n                            break lab12;\n                        }\n                        cursor = v_13;\n                        // call measure, line 235\n                        if (!r_measure())\n                        {\n                            break lab12;\n                        }\n                    } while (false);\n                    cursor = v_12;\n                    // backwards, line 236\n                    limit_backward = cursor; cursor = limit;\n                    // (, line 236\n                    // do, line 237\n                    v_14 = limit - cursor;\n                    lab13: do {\n                        // (, line 237\n                        // Boolean test GE_removed, line 237\n                        if (!(B_GE_removed))\n                        {\n                            break lab13;\n                        }\n                        // call Step_1c, line 237\n                        if (!r_Step_1c())\n                        {\n                            break lab13;\n                        }\n                    } while (false);\n                    cursor = limit - v_14;\n                    cursor = limit_backward;                    // backwards, line 239\n                    limit_backward = cursor; cursor = limit;\n                    // (, line 239\n                    // do, line 240\n                    v_15 = limit - cursor;\n                    lab14: do {\n                        // (, line 240\n                        // call Step_7, line 240\n                        if (!r_Step_7())\n                        {\n                            break lab14;\n                        }\n                        // set stemmed, line 240\n                        B_stemmed = true;\n                    } while (false);\n                    cursor = limit - v_15;\n                    // do, line 241\n                    v_16 = limit - cursor;\n                    lab15: do {\n                        // (, line 241\n                        // or, line 241\n                        lab16: do {\n                            lab17: do {\n                                // Boolean test stemmed, line 241\n                                if (!(B_stemmed))\n                                {\n                                    break lab17;\n                                }\n                                break lab16;\n                            } while (false);\n                            // Boolean test GE_removed, line 241\n                            if (!(B_GE_removed))\n                            {\n                                break lab15;\n                            }\n                        } while (false);\n                        // call Step_6, line 241\n                        if (!r_Step_6())\n                        {\n                            break lab15;\n                        }\n                    } while (false);\n                    cursor = limit - v_16;\n                    cursor = limit_backward;                    // do, line 243\n                    v_18 = cursor;\n                    lab18: do {\n                        // (, line 243\n                        // Boolean test Y_found, line 243\n                        if (!(B_Y_found))\n                        {\n                            break lab18;\n                        }\n                        // repeat, line 243\n                        replab19: while(true)\n                        {\n                            v_19 = cursor;\n                            lab20: do {\n                                // (, line 243\n                                // goto, line 243\n                                golab21: while(true)\n                                {\n                                    v_20 = cursor;\n                                    lab22: do {\n                                        // (, line 243\n                                        // [, line 243\n                                        bra = cursor;\n                                        // literal, line 243\n                                        if (!(eq_s(1, \"Y\")))\n                                        {\n                                            break lab22;\n                                        }\n                                        // ], line 243\n                                        ket = cursor;\n                                        cursor = v_20;\n                                        break golab21;\n                                    } while (false);\n                                    cursor = v_20;\n                                    if (cursor >= limit)\n                                    {\n                                        break lab20;\n                                    }\n                                    cursor++;\n                                }\n                                // <-, line 243\n                                slice_from(\"y\");\n                                continue replab19;\n                            } while (false);\n                            cursor = v_19;\n                            break replab19;\n                        }\n                    } while (false);\n                    cursor = v_18;\n                    return true;\n                }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d3fcb70cf561547c7bb1506e0cf32ca7b1287064","date":1357616416,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/analysis/common/src/java/org/tartarus/snowball/ext/KpStemmer#stem().mjava","pathOld":"lucene/analysis/common/src/java/org/tartarus/snowball/ext/KpStemmer#stem().mjava","sourceNew":"                @Override\n                public boolean stem() {\n            int v_1;\n            int v_2;\n            int v_3;\n            int v_4;\n            int v_5;\n            int v_6;\n            int v_7;\n            int v_8;\n            int v_9;\n            int v_10;\n            int v_11;\n            int v_12;\n            int v_13;\n            int v_14;\n            int v_15;\n            int v_16;\n            int v_18;\n            int v_19;\n            int v_20;\n                    // (, line 214\n                    // unset Y_found, line 216\n                    B_Y_found = false;\n                    // unset stemmed, line 217\n                    B_stemmed = false;\n                    // do, line 218\n                    v_1 = cursor;\n                    lab0: do {\n                        // (, line 218\n                        // [, line 218\n                        bra = cursor;\n                        // literal, line 218\n                        if (!(eq_s(1, \"y\")))\n                        {\n                            break lab0;\n                        }\n                        // ], line 218\n                        ket = cursor;\n                        // <-, line 218\n                        slice_from(\"Y\");\n                        // set Y_found, line 218\n                        B_Y_found = true;\n                    } while (false);\n                    cursor = v_1;\n                    // do, line 219\n                    v_2 = cursor;\n                    lab1: do {\n                        // repeat, line 219\n                        replab2: while(true)\n                        {\n                            v_3 = cursor;\n                            lab3: do {\n                                // (, line 219\n                                // goto, line 219\n                                golab4: while(true)\n                                {\n                                    v_4 = cursor;\n                                    lab5: do {\n                                        // (, line 219\n                                        if (!(in_grouping(g_v, 97, 121)))\n                                        {\n                                            break lab5;\n                                        }\n                                        // [, line 219\n                                        bra = cursor;\n                                        // literal, line 219\n                                        if (!(eq_s(1, \"y\")))\n                                        {\n                                            break lab5;\n                                        }\n                                        // ], line 219\n                                        ket = cursor;\n                                        cursor = v_4;\n                                        break golab4;\n                                    } while (false);\n                                    cursor = v_4;\n                                    if (cursor >= limit)\n                                    {\n                                        break lab3;\n                                    }\n                                    cursor++;\n                                }\n                                // <-, line 219\n                                slice_from(\"Y\");\n                                // set Y_found, line 219\n                                B_Y_found = true;\n                                continue replab2;\n                            } while (false);\n                            cursor = v_3;\n                            break replab2;\n                        }\n                    } while (false);\n                    cursor = v_2;\n                    // call measure, line 221\n                    if (!r_measure())\n                    {\n                        return false;\n                    }\n                    // backwards, line 223\n                    limit_backward = cursor; cursor = limit;\n                    // (, line 223\n                    // do, line 224\n                    v_5 = limit - cursor;\n                    lab6: do {\n                        // (, line 224\n                        // call Step_1, line 224\n                        if (!r_Step_1())\n                        {\n                            break lab6;\n                        }\n                        // set stemmed, line 224\n                        B_stemmed = true;\n                    } while (false);\n                    cursor = limit - v_5;\n                    // do, line 225\n                    v_6 = limit - cursor;\n                    lab7: do {\n                        // (, line 225\n                        // call Step_2, line 225\n                        if (!r_Step_2())\n                        {\n                            break lab7;\n                        }\n                        // set stemmed, line 225\n                        B_stemmed = true;\n                    } while (false);\n                    cursor = limit - v_6;\n                    // do, line 226\n                    v_7 = limit - cursor;\n                    lab8: do {\n                        // (, line 226\n                        // call Step_3, line 226\n                        if (!r_Step_3())\n                        {\n                            break lab8;\n                        }\n                        // set stemmed, line 226\n                        B_stemmed = true;\n                    } while (false);\n                    cursor = limit - v_7;\n                    // do, line 227\n                    v_8 = limit - cursor;\n                    lab9: do {\n                        // (, line 227\n                        // call Step_4, line 227\n                        if (!r_Step_4())\n                        {\n                            break lab9;\n                        }\n                        // set stemmed, line 227\n                        B_stemmed = true;\n                    } while (false);\n                    cursor = limit - v_8;\n                    cursor = limit_backward;                    // unset GE_removed, line 229\n                    B_GE_removed = false;\n                    // do, line 230\n                    v_9 = cursor;\n                    lab10: do {\n                        // (, line 230\n                        // and, line 230\n                        v_10 = cursor;\n                        // call Lose_prefix, line 230\n                        if (!r_Lose_prefix())\n                        {\n                            break lab10;\n                        }\n                        cursor = v_10;\n                        // call measure, line 230\n                        if (!r_measure())\n                        {\n                            break lab10;\n                        }\n                    } while (false);\n                    cursor = v_9;\n                    // backwards, line 231\n                    limit_backward = cursor; cursor = limit;\n                    // (, line 231\n                    // do, line 232\n                    v_11 = limit - cursor;\n                    lab11: do {\n                        // (, line 232\n                        // Boolean test GE_removed, line 232\n                        if (!(B_GE_removed))\n                        {\n                            break lab11;\n                        }\n                        // call Step_1c, line 232\n                        if (!r_Step_1c())\n                        {\n                            break lab11;\n                        }\n                    } while (false);\n                    cursor = limit - v_11;\n                    cursor = limit_backward;                    // unset GE_removed, line 234\n                    B_GE_removed = false;\n                    // do, line 235\n                    v_12 = cursor;\n                    lab12: do {\n                        // (, line 235\n                        // and, line 235\n                        v_13 = cursor;\n                        // call Lose_infix, line 235\n                        if (!r_Lose_infix())\n                        {\n                            break lab12;\n                        }\n                        cursor = v_13;\n                        // call measure, line 235\n                        if (!r_measure())\n                        {\n                            break lab12;\n                        }\n                    } while (false);\n                    cursor = v_12;\n                    // backwards, line 236\n                    limit_backward = cursor; cursor = limit;\n                    // (, line 236\n                    // do, line 237\n                    v_14 = limit - cursor;\n                    lab13: do {\n                        // (, line 237\n                        // Boolean test GE_removed, line 237\n                        if (!(B_GE_removed))\n                        {\n                            break lab13;\n                        }\n                        // call Step_1c, line 237\n                        if (!r_Step_1c())\n                        {\n                            break lab13;\n                        }\n                    } while (false);\n                    cursor = limit - v_14;\n                    cursor = limit_backward;                    // backwards, line 239\n                    limit_backward = cursor; cursor = limit;\n                    // (, line 239\n                    // do, line 240\n                    v_15 = limit - cursor;\n                    lab14: do {\n                        // (, line 240\n                        // call Step_7, line 240\n                        if (!r_Step_7())\n                        {\n                            break lab14;\n                        }\n                        // set stemmed, line 240\n                        B_stemmed = true;\n                    } while (false);\n                    cursor = limit - v_15;\n                    // do, line 241\n                    v_16 = limit - cursor;\n                    lab15: do {\n                        // (, line 241\n                        // or, line 241\n                        lab16: do {\n                            lab17: do {\n                                // Boolean test stemmed, line 241\n                                if (!(B_stemmed))\n                                {\n                                    break lab17;\n                                }\n                                break lab16;\n                            } while (false);\n                            // Boolean test GE_removed, line 241\n                            if (!(B_GE_removed))\n                            {\n                                break lab15;\n                            }\n                        } while (false);\n                        // call Step_6, line 241\n                        if (!r_Step_6())\n                        {\n                            break lab15;\n                        }\n                    } while (false);\n                    cursor = limit - v_16;\n                    cursor = limit_backward;                    // do, line 243\n                    v_18 = cursor;\n                    lab18: do {\n                        // (, line 243\n                        // Boolean test Y_found, line 243\n                        if (!(B_Y_found))\n                        {\n                            break lab18;\n                        }\n                        // repeat, line 243\n                        replab19: while(true)\n                        {\n                            v_19 = cursor;\n                            lab20: do {\n                                // (, line 243\n                                // goto, line 243\n                                golab21: while(true)\n                                {\n                                    v_20 = cursor;\n                                    lab22: do {\n                                        // (, line 243\n                                        // [, line 243\n                                        bra = cursor;\n                                        // literal, line 243\n                                        if (!(eq_s(1, \"Y\")))\n                                        {\n                                            break lab22;\n                                        }\n                                        // ], line 243\n                                        ket = cursor;\n                                        cursor = v_20;\n                                        break golab21;\n                                    } while (false);\n                                    cursor = v_20;\n                                    if (cursor >= limit)\n                                    {\n                                        break lab20;\n                                    }\n                                    cursor++;\n                                }\n                                // <-, line 243\n                                slice_from(\"y\");\n                                continue replab19;\n                            } while (false);\n                            cursor = v_19;\n                            break replab19;\n                        }\n                    } while (false);\n                    cursor = v_18;\n                    return true;\n                }\n\n","sourceOld":"                public boolean stem() {\n            int v_1;\n            int v_2;\n            int v_3;\n            int v_4;\n            int v_5;\n            int v_6;\n            int v_7;\n            int v_8;\n            int v_9;\n            int v_10;\n            int v_11;\n            int v_12;\n            int v_13;\n            int v_14;\n            int v_15;\n            int v_16;\n            int v_18;\n            int v_19;\n            int v_20;\n                    // (, line 214\n                    // unset Y_found, line 216\n                    B_Y_found = false;\n                    // unset stemmed, line 217\n                    B_stemmed = false;\n                    // do, line 218\n                    v_1 = cursor;\n                    lab0: do {\n                        // (, line 218\n                        // [, line 218\n                        bra = cursor;\n                        // literal, line 218\n                        if (!(eq_s(1, \"y\")))\n                        {\n                            break lab0;\n                        }\n                        // ], line 218\n                        ket = cursor;\n                        // <-, line 218\n                        slice_from(\"Y\");\n                        // set Y_found, line 218\n                        B_Y_found = true;\n                    } while (false);\n                    cursor = v_1;\n                    // do, line 219\n                    v_2 = cursor;\n                    lab1: do {\n                        // repeat, line 219\n                        replab2: while(true)\n                        {\n                            v_3 = cursor;\n                            lab3: do {\n                                // (, line 219\n                                // goto, line 219\n                                golab4: while(true)\n                                {\n                                    v_4 = cursor;\n                                    lab5: do {\n                                        // (, line 219\n                                        if (!(in_grouping(g_v, 97, 121)))\n                                        {\n                                            break lab5;\n                                        }\n                                        // [, line 219\n                                        bra = cursor;\n                                        // literal, line 219\n                                        if (!(eq_s(1, \"y\")))\n                                        {\n                                            break lab5;\n                                        }\n                                        // ], line 219\n                                        ket = cursor;\n                                        cursor = v_4;\n                                        break golab4;\n                                    } while (false);\n                                    cursor = v_4;\n                                    if (cursor >= limit)\n                                    {\n                                        break lab3;\n                                    }\n                                    cursor++;\n                                }\n                                // <-, line 219\n                                slice_from(\"Y\");\n                                // set Y_found, line 219\n                                B_Y_found = true;\n                                continue replab2;\n                            } while (false);\n                            cursor = v_3;\n                            break replab2;\n                        }\n                    } while (false);\n                    cursor = v_2;\n                    // call measure, line 221\n                    if (!r_measure())\n                    {\n                        return false;\n                    }\n                    // backwards, line 223\n                    limit_backward = cursor; cursor = limit;\n                    // (, line 223\n                    // do, line 224\n                    v_5 = limit - cursor;\n                    lab6: do {\n                        // (, line 224\n                        // call Step_1, line 224\n                        if (!r_Step_1())\n                        {\n                            break lab6;\n                        }\n                        // set stemmed, line 224\n                        B_stemmed = true;\n                    } while (false);\n                    cursor = limit - v_5;\n                    // do, line 225\n                    v_6 = limit - cursor;\n                    lab7: do {\n                        // (, line 225\n                        // call Step_2, line 225\n                        if (!r_Step_2())\n                        {\n                            break lab7;\n                        }\n                        // set stemmed, line 225\n                        B_stemmed = true;\n                    } while (false);\n                    cursor = limit - v_6;\n                    // do, line 226\n                    v_7 = limit - cursor;\n                    lab8: do {\n                        // (, line 226\n                        // call Step_3, line 226\n                        if (!r_Step_3())\n                        {\n                            break lab8;\n                        }\n                        // set stemmed, line 226\n                        B_stemmed = true;\n                    } while (false);\n                    cursor = limit - v_7;\n                    // do, line 227\n                    v_8 = limit - cursor;\n                    lab9: do {\n                        // (, line 227\n                        // call Step_4, line 227\n                        if (!r_Step_4())\n                        {\n                            break lab9;\n                        }\n                        // set stemmed, line 227\n                        B_stemmed = true;\n                    } while (false);\n                    cursor = limit - v_8;\n                    cursor = limit_backward;                    // unset GE_removed, line 229\n                    B_GE_removed = false;\n                    // do, line 230\n                    v_9 = cursor;\n                    lab10: do {\n                        // (, line 230\n                        // and, line 230\n                        v_10 = cursor;\n                        // call Lose_prefix, line 230\n                        if (!r_Lose_prefix())\n                        {\n                            break lab10;\n                        }\n                        cursor = v_10;\n                        // call measure, line 230\n                        if (!r_measure())\n                        {\n                            break lab10;\n                        }\n                    } while (false);\n                    cursor = v_9;\n                    // backwards, line 231\n                    limit_backward = cursor; cursor = limit;\n                    // (, line 231\n                    // do, line 232\n                    v_11 = limit - cursor;\n                    lab11: do {\n                        // (, line 232\n                        // Boolean test GE_removed, line 232\n                        if (!(B_GE_removed))\n                        {\n                            break lab11;\n                        }\n                        // call Step_1c, line 232\n                        if (!r_Step_1c())\n                        {\n                            break lab11;\n                        }\n                    } while (false);\n                    cursor = limit - v_11;\n                    cursor = limit_backward;                    // unset GE_removed, line 234\n                    B_GE_removed = false;\n                    // do, line 235\n                    v_12 = cursor;\n                    lab12: do {\n                        // (, line 235\n                        // and, line 235\n                        v_13 = cursor;\n                        // call Lose_infix, line 235\n                        if (!r_Lose_infix())\n                        {\n                            break lab12;\n                        }\n                        cursor = v_13;\n                        // call measure, line 235\n                        if (!r_measure())\n                        {\n                            break lab12;\n                        }\n                    } while (false);\n                    cursor = v_12;\n                    // backwards, line 236\n                    limit_backward = cursor; cursor = limit;\n                    // (, line 236\n                    // do, line 237\n                    v_14 = limit - cursor;\n                    lab13: do {\n                        // (, line 237\n                        // Boolean test GE_removed, line 237\n                        if (!(B_GE_removed))\n                        {\n                            break lab13;\n                        }\n                        // call Step_1c, line 237\n                        if (!r_Step_1c())\n                        {\n                            break lab13;\n                        }\n                    } while (false);\n                    cursor = limit - v_14;\n                    cursor = limit_backward;                    // backwards, line 239\n                    limit_backward = cursor; cursor = limit;\n                    // (, line 239\n                    // do, line 240\n                    v_15 = limit - cursor;\n                    lab14: do {\n                        // (, line 240\n                        // call Step_7, line 240\n                        if (!r_Step_7())\n                        {\n                            break lab14;\n                        }\n                        // set stemmed, line 240\n                        B_stemmed = true;\n                    } while (false);\n                    cursor = limit - v_15;\n                    // do, line 241\n                    v_16 = limit - cursor;\n                    lab15: do {\n                        // (, line 241\n                        // or, line 241\n                        lab16: do {\n                            lab17: do {\n                                // Boolean test stemmed, line 241\n                                if (!(B_stemmed))\n                                {\n                                    break lab17;\n                                }\n                                break lab16;\n                            } while (false);\n                            // Boolean test GE_removed, line 241\n                            if (!(B_GE_removed))\n                            {\n                                break lab15;\n                            }\n                        } while (false);\n                        // call Step_6, line 241\n                        if (!r_Step_6())\n                        {\n                            break lab15;\n                        }\n                    } while (false);\n                    cursor = limit - v_16;\n                    cursor = limit_backward;                    // do, line 243\n                    v_18 = cursor;\n                    lab18: do {\n                        // (, line 243\n                        // Boolean test Y_found, line 243\n                        if (!(B_Y_found))\n                        {\n                            break lab18;\n                        }\n                        // repeat, line 243\n                        replab19: while(true)\n                        {\n                            v_19 = cursor;\n                            lab20: do {\n                                // (, line 243\n                                // goto, line 243\n                                golab21: while(true)\n                                {\n                                    v_20 = cursor;\n                                    lab22: do {\n                                        // (, line 243\n                                        // [, line 243\n                                        bra = cursor;\n                                        // literal, line 243\n                                        if (!(eq_s(1, \"Y\")))\n                                        {\n                                            break lab22;\n                                        }\n                                        // ], line 243\n                                        ket = cursor;\n                                        cursor = v_20;\n                                        break golab21;\n                                    } while (false);\n                                    cursor = v_20;\n                                    if (cursor >= limit)\n                                    {\n                                        break lab20;\n                                    }\n                                    cursor++;\n                                }\n                                // <-, line 243\n                                slice_from(\"y\");\n                                continue replab19;\n                            } while (false);\n                            cursor = v_19;\n                            break replab19;\n                        }\n                    } while (false);\n                    cursor = v_18;\n                    return true;\n                }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"09479cd2de06c67a115b7346a8e5de8af4d62e81","date":1581961081,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/common/src/java/org/tartarus/snowball/ext/KpStemmer#stem().mjava","pathOld":"lucene/analysis/common/src/java/org/tartarus/snowball/ext/KpStemmer#stem().mjava","sourceNew":"public boolean stem() {\n  B_Y_found = false;\n  B_stemmed = false;\n  int v_1 = cursor;\n  lab0: {\n    bra = cursor;\n    if (!(eq_s(\"y\")))\n    {\n      break lab0;\n    }\n    ket = cursor;\n    slice_from(\"Y\");\n    B_Y_found = true;\n  }\n  cursor = v_1;\n  int v_2 = cursor;\n  lab1: {\n    while(true)\n    {\n      int v_3 = cursor;\n      lab2: {\n        golab3: while(true)\n        {\n          int v_4 = cursor;\n          lab4: {\n            if (!(in_grouping(g_v, 97, 121)))\n            {\n              break lab4;\n            }\n            bra = cursor;\n            if (!(eq_s(\"y\")))\n            {\n              break lab4;\n            }\n            ket = cursor;\n            cursor = v_4;\n            break golab3;\n          }\n          cursor = v_4;\n          if (cursor >= limit)\n          {\n            break lab2;\n          }\n          cursor++;\n        }\n        slice_from(\"Y\");\n        B_Y_found = true;\n        continue;\n      }\n      cursor = v_3;\n      break;\n    }\n  }\n  cursor = v_2;\n  if (!r_measure())\n  {\n    return false;\n  }\n  limit_backward = cursor;\n  cursor = limit;\n  int v_5 = limit - cursor;\n  lab5: {\n    if (!r_Step_1())\n    {\n      break lab5;\n    }\n    B_stemmed = true;\n  }\n  cursor = limit - v_5;\n  int v_6 = limit - cursor;\n  lab6: {\n    if (!r_Step_2())\n    {\n      break lab6;\n    }\n    B_stemmed = true;\n  }\n  cursor = limit - v_6;\n  int v_7 = limit - cursor;\n  lab7: {\n    if (!r_Step_3())\n    {\n      break lab7;\n    }\n    B_stemmed = true;\n  }\n  cursor = limit - v_7;\n  int v_8 = limit - cursor;\n  lab8: {\n    if (!r_Step_4())\n    {\n      break lab8;\n    }\n    B_stemmed = true;\n  }\n  cursor = limit - v_8;\n  cursor = limit_backward;\n  B_GE_removed = false;\n  int v_9 = cursor;\n  lab9: {\n    int v_10 = cursor;\n    if (!r_Lose_prefix())\n    {\n      break lab9;\n    }\n    cursor = v_10;\n    if (!r_measure())\n    {\n      break lab9;\n    }\n  }\n  cursor = v_9;\n  limit_backward = cursor;\n  cursor = limit;\n  int v_11 = limit - cursor;\n  lab10: {\n    if (!(B_GE_removed))\n    {\n      break lab10;\n    }\n    if (!r_Step_1c())\n    {\n      break lab10;\n    }\n  }\n  cursor = limit - v_11;\n  cursor = limit_backward;\n  B_GE_removed = false;\n  int v_12 = cursor;\n  lab11: {\n    int v_13 = cursor;\n    if (!r_Lose_infix())\n    {\n      break lab11;\n    }\n    cursor = v_13;\n    if (!r_measure())\n    {\n      break lab11;\n    }\n  }\n  cursor = v_12;\n  limit_backward = cursor;\n  cursor = limit;\n  int v_14 = limit - cursor;\n  lab12: {\n    if (!(B_GE_removed))\n    {\n      break lab12;\n    }\n    if (!r_Step_1c())\n    {\n      break lab12;\n    }\n  }\n  cursor = limit - v_14;\n  cursor = limit_backward;\n  limit_backward = cursor;\n  cursor = limit;\n  int v_15 = limit - cursor;\n  lab13: {\n    if (!r_Step_7())\n    {\n      break lab13;\n    }\n    B_stemmed = true;\n  }\n  cursor = limit - v_15;\n  int v_16 = limit - cursor;\n  lab14: {\n    lab15: {\n      lab16: {\n        if (!(B_stemmed))\n        {\n          break lab16;\n        }\n        break lab15;\n      }\n      if (!(B_GE_removed))\n      {\n        break lab14;\n      }\n    }\n    if (!r_Step_6())\n    {\n      break lab14;\n    }\n  }\n  cursor = limit - v_16;\n  cursor = limit_backward;\n  int v_18 = cursor;\n  lab17: {\n    if (!(B_Y_found))\n    {\n      break lab17;\n    }\n    while(true)\n    {\n      int v_19 = cursor;\n      lab18: {\n        golab19: while(true)\n        {\n          int v_20 = cursor;\n          lab20: {\n            bra = cursor;\n            if (!(eq_s(\"Y\")))\n            {\n              break lab20;\n            }\n            ket = cursor;\n            cursor = v_20;\n            break golab19;\n          }\n          cursor = v_20;\n          if (cursor >= limit)\n          {\n            break lab18;\n          }\n          cursor++;\n        }\n        slice_from(\"y\");\n        continue;\n      }\n      cursor = v_19;\n      break;\n    }\n  }\n  cursor = v_18;\n  return true;\n}\n\n","sourceOld":"                @Override\n                public boolean stem() {\n            int v_1;\n            int v_2;\n            int v_3;\n            int v_4;\n            int v_5;\n            int v_6;\n            int v_7;\n            int v_8;\n            int v_9;\n            int v_10;\n            int v_11;\n            int v_12;\n            int v_13;\n            int v_14;\n            int v_15;\n            int v_16;\n            int v_18;\n            int v_19;\n            int v_20;\n                    // (, line 214\n                    // unset Y_found, line 216\n                    B_Y_found = false;\n                    // unset stemmed, line 217\n                    B_stemmed = false;\n                    // do, line 218\n                    v_1 = cursor;\n                    lab0: do {\n                        // (, line 218\n                        // [, line 218\n                        bra = cursor;\n                        // literal, line 218\n                        if (!(eq_s(1, \"y\")))\n                        {\n                            break lab0;\n                        }\n                        // ], line 218\n                        ket = cursor;\n                        // <-, line 218\n                        slice_from(\"Y\");\n                        // set Y_found, line 218\n                        B_Y_found = true;\n                    } while (false);\n                    cursor = v_1;\n                    // do, line 219\n                    v_2 = cursor;\n                    lab1: do {\n                        // repeat, line 219\n                        replab2: while(true)\n                        {\n                            v_3 = cursor;\n                            lab3: do {\n                                // (, line 219\n                                // goto, line 219\n                                golab4: while(true)\n                                {\n                                    v_4 = cursor;\n                                    lab5: do {\n                                        // (, line 219\n                                        if (!(in_grouping(g_v, 97, 121)))\n                                        {\n                                            break lab5;\n                                        }\n                                        // [, line 219\n                                        bra = cursor;\n                                        // literal, line 219\n                                        if (!(eq_s(1, \"y\")))\n                                        {\n                                            break lab5;\n                                        }\n                                        // ], line 219\n                                        ket = cursor;\n                                        cursor = v_4;\n                                        break golab4;\n                                    } while (false);\n                                    cursor = v_4;\n                                    if (cursor >= limit)\n                                    {\n                                        break lab3;\n                                    }\n                                    cursor++;\n                                }\n                                // <-, line 219\n                                slice_from(\"Y\");\n                                // set Y_found, line 219\n                                B_Y_found = true;\n                                continue replab2;\n                            } while (false);\n                            cursor = v_3;\n                            break replab2;\n                        }\n                    } while (false);\n                    cursor = v_2;\n                    // call measure, line 221\n                    if (!r_measure())\n                    {\n                        return false;\n                    }\n                    // backwards, line 223\n                    limit_backward = cursor; cursor = limit;\n                    // (, line 223\n                    // do, line 224\n                    v_5 = limit - cursor;\n                    lab6: do {\n                        // (, line 224\n                        // call Step_1, line 224\n                        if (!r_Step_1())\n                        {\n                            break lab6;\n                        }\n                        // set stemmed, line 224\n                        B_stemmed = true;\n                    } while (false);\n                    cursor = limit - v_5;\n                    // do, line 225\n                    v_6 = limit - cursor;\n                    lab7: do {\n                        // (, line 225\n                        // call Step_2, line 225\n                        if (!r_Step_2())\n                        {\n                            break lab7;\n                        }\n                        // set stemmed, line 225\n                        B_stemmed = true;\n                    } while (false);\n                    cursor = limit - v_6;\n                    // do, line 226\n                    v_7 = limit - cursor;\n                    lab8: do {\n                        // (, line 226\n                        // call Step_3, line 226\n                        if (!r_Step_3())\n                        {\n                            break lab8;\n                        }\n                        // set stemmed, line 226\n                        B_stemmed = true;\n                    } while (false);\n                    cursor = limit - v_7;\n                    // do, line 227\n                    v_8 = limit - cursor;\n                    lab9: do {\n                        // (, line 227\n                        // call Step_4, line 227\n                        if (!r_Step_4())\n                        {\n                            break lab9;\n                        }\n                        // set stemmed, line 227\n                        B_stemmed = true;\n                    } while (false);\n                    cursor = limit - v_8;\n                    cursor = limit_backward;                    // unset GE_removed, line 229\n                    B_GE_removed = false;\n                    // do, line 230\n                    v_9 = cursor;\n                    lab10: do {\n                        // (, line 230\n                        // and, line 230\n                        v_10 = cursor;\n                        // call Lose_prefix, line 230\n                        if (!r_Lose_prefix())\n                        {\n                            break lab10;\n                        }\n                        cursor = v_10;\n                        // call measure, line 230\n                        if (!r_measure())\n                        {\n                            break lab10;\n                        }\n                    } while (false);\n                    cursor = v_9;\n                    // backwards, line 231\n                    limit_backward = cursor; cursor = limit;\n                    // (, line 231\n                    // do, line 232\n                    v_11 = limit - cursor;\n                    lab11: do {\n                        // (, line 232\n                        // Boolean test GE_removed, line 232\n                        if (!(B_GE_removed))\n                        {\n                            break lab11;\n                        }\n                        // call Step_1c, line 232\n                        if (!r_Step_1c())\n                        {\n                            break lab11;\n                        }\n                    } while (false);\n                    cursor = limit - v_11;\n                    cursor = limit_backward;                    // unset GE_removed, line 234\n                    B_GE_removed = false;\n                    // do, line 235\n                    v_12 = cursor;\n                    lab12: do {\n                        // (, line 235\n                        // and, line 235\n                        v_13 = cursor;\n                        // call Lose_infix, line 235\n                        if (!r_Lose_infix())\n                        {\n                            break lab12;\n                        }\n                        cursor = v_13;\n                        // call measure, line 235\n                        if (!r_measure())\n                        {\n                            break lab12;\n                        }\n                    } while (false);\n                    cursor = v_12;\n                    // backwards, line 236\n                    limit_backward = cursor; cursor = limit;\n                    // (, line 236\n                    // do, line 237\n                    v_14 = limit - cursor;\n                    lab13: do {\n                        // (, line 237\n                        // Boolean test GE_removed, line 237\n                        if (!(B_GE_removed))\n                        {\n                            break lab13;\n                        }\n                        // call Step_1c, line 237\n                        if (!r_Step_1c())\n                        {\n                            break lab13;\n                        }\n                    } while (false);\n                    cursor = limit - v_14;\n                    cursor = limit_backward;                    // backwards, line 239\n                    limit_backward = cursor; cursor = limit;\n                    // (, line 239\n                    // do, line 240\n                    v_15 = limit - cursor;\n                    lab14: do {\n                        // (, line 240\n                        // call Step_7, line 240\n                        if (!r_Step_7())\n                        {\n                            break lab14;\n                        }\n                        // set stemmed, line 240\n                        B_stemmed = true;\n                    } while (false);\n                    cursor = limit - v_15;\n                    // do, line 241\n                    v_16 = limit - cursor;\n                    lab15: do {\n                        // (, line 241\n                        // or, line 241\n                        lab16: do {\n                            lab17: do {\n                                // Boolean test stemmed, line 241\n                                if (!(B_stemmed))\n                                {\n                                    break lab17;\n                                }\n                                break lab16;\n                            } while (false);\n                            // Boolean test GE_removed, line 241\n                            if (!(B_GE_removed))\n                            {\n                                break lab15;\n                            }\n                        } while (false);\n                        // call Step_6, line 241\n                        if (!r_Step_6())\n                        {\n                            break lab15;\n                        }\n                    } while (false);\n                    cursor = limit - v_16;\n                    cursor = limit_backward;                    // do, line 243\n                    v_18 = cursor;\n                    lab18: do {\n                        // (, line 243\n                        // Boolean test Y_found, line 243\n                        if (!(B_Y_found))\n                        {\n                            break lab18;\n                        }\n                        // repeat, line 243\n                        replab19: while(true)\n                        {\n                            v_19 = cursor;\n                            lab20: do {\n                                // (, line 243\n                                // goto, line 243\n                                golab21: while(true)\n                                {\n                                    v_20 = cursor;\n                                    lab22: do {\n                                        // (, line 243\n                                        // [, line 243\n                                        bra = cursor;\n                                        // literal, line 243\n                                        if (!(eq_s(1, \"Y\")))\n                                        {\n                                            break lab22;\n                                        }\n                                        // ], line 243\n                                        ket = cursor;\n                                        cursor = v_20;\n                                        break golab21;\n                                    } while (false);\n                                    cursor = v_20;\n                                    if (cursor >= limit)\n                                    {\n                                        break lab20;\n                                    }\n                                    cursor++;\n                                }\n                                // <-, line 243\n                                slice_from(\"y\");\n                                continue replab19;\n                            } while (false);\n                            cursor = v_19;\n                            break replab19;\n                        }\n                    } while (false);\n                    cursor = v_18;\n                    return true;\n                }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"d3fcb70cf561547c7bb1506e0cf32ca7b1287064":["b6a6a9e301c12ab07b1d0428b5aad813fff317b3","7530de27b87b961b51f01bd1299b7004d46e8823"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"d6f074e73200c07d54f242d3880a8da5a35ff97b":["b89678825b68eccaf09e6ab71675fc0b0af1e099","b6a6a9e301c12ab07b1d0428b5aad813fff317b3"],"b6a6a9e301c12ab07b1d0428b5aad813fff317b3":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"8fd5be977c105554c6a7b68afcdbc511439723ab":["b89678825b68eccaf09e6ab71675fc0b0af1e099","b6a6a9e301c12ab07b1d0428b5aad813fff317b3"],"09479cd2de06c67a115b7346a8e5de8af4d62e81":["7530de27b87b961b51f01bd1299b7004d46e8823"],"7530de27b87b961b51f01bd1299b7004d46e8823":["b6a6a9e301c12ab07b1d0428b5aad813fff317b3"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["09479cd2de06c67a115b7346a8e5de8af4d62e81"]},"commit2Childs":{"d3fcb70cf561547c7bb1506e0cf32ca7b1287064":[],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["d6f074e73200c07d54f242d3880a8da5a35ff97b","b6a6a9e301c12ab07b1d0428b5aad813fff317b3","8fd5be977c105554c6a7b68afcdbc511439723ab"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"d6f074e73200c07d54f242d3880a8da5a35ff97b":[],"b6a6a9e301c12ab07b1d0428b5aad813fff317b3":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","d6f074e73200c07d54f242d3880a8da5a35ff97b","8fd5be977c105554c6a7b68afcdbc511439723ab","7530de27b87b961b51f01bd1299b7004d46e8823"],"8fd5be977c105554c6a7b68afcdbc511439723ab":[],"7530de27b87b961b51f01bd1299b7004d46e8823":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","09479cd2de06c67a115b7346a8e5de8af4d62e81"],"09479cd2de06c67a115b7346a8e5de8af4d62e81":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","d6f074e73200c07d54f242d3880a8da5a35ff97b","8fd5be977c105554c6a7b68afcdbc511439723ab","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}