{"path":"lucene/src/java/org/apache/lucene/index/IndexFileDeleter.CommitPoint#CommitPoint(Collection[CommitPoint],Directory,SegmentInfos).mjava","commits":[{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/IndexFileDeleter.CommitPoint#CommitPoint(Collection[CommitPoint],Directory,SegmentInfos).mjava","pathOld":"src/java/org/apache/lucene/index/IndexFileDeleter.CommitPoint#CommitPoint(Collection[CommitPoint],Directory,SegmentInfos).mjava","sourceNew":"    public CommitPoint(Collection<CommitPoint> commitsToDelete, Directory directory, SegmentInfos segmentInfos) throws IOException {\n      this.directory = directory;\n      this.commitsToDelete = commitsToDelete;\n      userData = segmentInfos.getUserData();\n      segmentsFileName = segmentInfos.getCurrentSegmentFileName();\n      version = segmentInfos.getVersion();\n      generation = segmentInfos.getGeneration();\n      files = Collections.unmodifiableCollection(segmentInfos.files(directory, true));\n      gen = segmentInfos.getGeneration();\n      isOptimized = segmentInfos.size() == 1 && !segmentInfos.info(0).hasDeletions();\n\n      assert !segmentInfos.hasExternalSegments(directory);\n    }\n\n","sourceOld":"    public CommitPoint(Collection<CommitPoint> commitsToDelete, Directory directory, SegmentInfos segmentInfos) throws IOException {\n      this.directory = directory;\n      this.commitsToDelete = commitsToDelete;\n      userData = segmentInfos.getUserData();\n      segmentsFileName = segmentInfos.getCurrentSegmentFileName();\n      version = segmentInfos.getVersion();\n      generation = segmentInfos.getGeneration();\n      files = Collections.unmodifiableCollection(segmentInfos.files(directory, true));\n      gen = segmentInfos.getGeneration();\n      isOptimized = segmentInfos.size() == 1 && !segmentInfos.info(0).hasDeletions();\n\n      assert !segmentInfos.hasExternalSegments(directory);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fb10b6bcde550b87d8f10e5f010bd8f3021023b6","date":1274974592,"type":3,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/IndexFileDeleter.CommitPoint#CommitPoint(Collection[CommitPoint],Directory,SegmentInfos).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/IndexFileDeleter.CommitPoint#CommitPoint(Collection[CommitPoint],Directory,SegmentInfos).mjava","sourceNew":"    public CommitPoint(Collection<CommitPoint> commitsToDelete, Directory directory, SegmentInfos segmentInfos) throws IOException {\n      this.directory = directory;\n      this.commitsToDelete = commitsToDelete;\n      userData = segmentInfos.getUserData();\n      segmentsFileName = segmentInfos.getCurrentSegmentFileName();\n      version = segmentInfos.getVersion();\n      generation = segmentInfos.getGeneration();\n      files = Collections.unmodifiableCollection(segmentInfos.files(directory, true));\n      gen = segmentInfos.getGeneration();\n      isOptimized = segmentInfos.size() == 1 && !segmentInfos.info(0).hasDeletions();\n    }\n\n","sourceOld":"    public CommitPoint(Collection<CommitPoint> commitsToDelete, Directory directory, SegmentInfos segmentInfos) throws IOException {\n      this.directory = directory;\n      this.commitsToDelete = commitsToDelete;\n      userData = segmentInfos.getUserData();\n      segmentsFileName = segmentInfos.getCurrentSegmentFileName();\n      version = segmentInfos.getVersion();\n      generation = segmentInfos.getGeneration();\n      files = Collections.unmodifiableCollection(segmentInfos.files(directory, true));\n      gen = segmentInfos.getGeneration();\n      isOptimized = segmentInfos.size() == 1 && !segmentInfos.info(0).hasDeletions();\n\n      assert !segmentInfos.hasExternalSegments(directory);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"188ca9aea561b1f58ab1a7f2cbdce1c30b36f5e9","date":1289510544,"type":3,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/IndexFileDeleter.CommitPoint#CommitPoint(Collection[CommitPoint],Directory,SegmentInfos).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/IndexFileDeleter.CommitPoint#CommitPoint(Collection[CommitPoint],Directory,SegmentInfos).mjava","sourceNew":"    public CommitPoint(Collection<CommitPoint> commitsToDelete, Directory directory, SegmentInfos segmentInfos) throws IOException {\n      this.directory = directory;\n      this.commitsToDelete = commitsToDelete;\n      userData = segmentInfos.getUserData();\n      segmentsFileName = segmentInfos.getCurrentSegmentFileName();\n      version = segmentInfos.getVersion();\n      generation = segmentInfos.getGeneration();\n      files = Collections.unmodifiableCollection(segmentInfos.files(directory, true));\n      isOptimized = segmentInfos.size() == 1 && !segmentInfos.info(0).hasDeletions();\n    }\n\n","sourceOld":"    public CommitPoint(Collection<CommitPoint> commitsToDelete, Directory directory, SegmentInfos segmentInfos) throws IOException {\n      this.directory = directory;\n      this.commitsToDelete = commitsToDelete;\n      userData = segmentInfos.getUserData();\n      segmentsFileName = segmentInfos.getCurrentSegmentFileName();\n      version = segmentInfos.getVersion();\n      generation = segmentInfos.getGeneration();\n      files = Collections.unmodifiableCollection(segmentInfos.files(directory, true));\n      gen = segmentInfos.getGeneration();\n      isOptimized = segmentInfos.size() == 1 && !segmentInfos.info(0).hasDeletions();\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"85a883878c0af761245ab048babc63d099f835f3","date":1289553330,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/IndexFileDeleter.CommitPoint#CommitPoint(Collection[CommitPoint],Directory,SegmentInfos).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/IndexFileDeleter.CommitPoint#CommitPoint(Collection[CommitPoint],Directory,SegmentInfos).mjava","sourceNew":"    public CommitPoint(Collection<CommitPoint> commitsToDelete, Directory directory, SegmentInfos segmentInfos) throws IOException {\n      this.directory = directory;\n      this.commitsToDelete = commitsToDelete;\n      userData = segmentInfos.getUserData();\n      segmentsFileName = segmentInfos.getCurrentSegmentFileName();\n      version = segmentInfos.getVersion();\n      generation = segmentInfos.getGeneration();\n      files = Collections.unmodifiableCollection(segmentInfos.files(directory, true));\n      isOptimized = segmentInfos.size() == 1 && !segmentInfos.info(0).hasDeletions();\n    }\n\n","sourceOld":"    public CommitPoint(Collection<CommitPoint> commitsToDelete, Directory directory, SegmentInfos segmentInfos) throws IOException {\n      this.directory = directory;\n      this.commitsToDelete = commitsToDelete;\n      userData = segmentInfos.getUserData();\n      segmentsFileName = segmentInfos.getCurrentSegmentFileName();\n      version = segmentInfos.getVersion();\n      generation = segmentInfos.getGeneration();\n      files = Collections.unmodifiableCollection(segmentInfos.files(directory, true));\n      gen = segmentInfos.getGeneration();\n      isOptimized = segmentInfos.size() == 1 && !segmentInfos.info(0).hasDeletions();\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","date":1292920096,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/IndexFileDeleter.CommitPoint#CommitPoint(Collection[CommitPoint],Directory,SegmentInfos).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/IndexFileDeleter.CommitPoint#CommitPoint(Collection[CommitPoint],Directory,SegmentInfos).mjava","sourceNew":"    public CommitPoint(Collection<CommitPoint> commitsToDelete, Directory directory, SegmentInfos segmentInfos) throws IOException {\n      this.directory = directory;\n      this.commitsToDelete = commitsToDelete;\n      userData = segmentInfos.getUserData();\n      segmentsFileName = segmentInfos.getCurrentSegmentFileName();\n      version = segmentInfos.getVersion();\n      generation = segmentInfos.getGeneration();\n      files = Collections.unmodifiableCollection(segmentInfos.files(directory, true));\n      isOptimized = segmentInfos.size() == 1 && !segmentInfos.info(0).hasDeletions();\n    }\n\n","sourceOld":"    public CommitPoint(Collection<CommitPoint> commitsToDelete, Directory directory, SegmentInfos segmentInfos) throws IOException {\n      this.directory = directory;\n      this.commitsToDelete = commitsToDelete;\n      userData = segmentInfos.getUserData();\n      segmentsFileName = segmentInfos.getCurrentSegmentFileName();\n      version = segmentInfos.getVersion();\n      generation = segmentInfos.getGeneration();\n      files = Collections.unmodifiableCollection(segmentInfos.files(directory, true));\n      gen = segmentInfos.getGeneration();\n      isOptimized = segmentInfos.size() == 1 && !segmentInfos.info(0).hasDeletions();\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d14e8d18c0e3970c20354dbeeb49da11bd587fbd","date":1321041051,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/IndexFileDeleter.CommitPoint#CommitPoint(Collection[CommitPoint],Directory,SegmentInfos).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/IndexFileDeleter.CommitPoint#CommitPoint(Collection[CommitPoint],Directory,SegmentInfos).mjava","sourceNew":"    public CommitPoint(Collection<CommitPoint> commitsToDelete, Directory directory, SegmentInfos segmentInfos) throws IOException {\n      this.directory = directory;\n      this.commitsToDelete = commitsToDelete;\n      userData = segmentInfos.getUserData();\n      segmentsFileName = segmentInfos.getCurrentSegmentFileName();\n      version = segmentInfos.getVersion();\n      generation = segmentInfos.getGeneration();\n      files = Collections.unmodifiableCollection(segmentInfos.files(directory, true));\n      segmentCount = segmentInfos.size();\n    }\n\n","sourceOld":"    public CommitPoint(Collection<CommitPoint> commitsToDelete, Directory directory, SegmentInfos segmentInfos) throws IOException {\n      this.directory = directory;\n      this.commitsToDelete = commitsToDelete;\n      userData = segmentInfos.getUserData();\n      segmentsFileName = segmentInfos.getCurrentSegmentFileName();\n      version = segmentInfos.getVersion();\n      generation = segmentInfos.getGeneration();\n      files = Collections.unmodifiableCollection(segmentInfos.files(directory, true));\n      isOptimized = segmentInfos.size() == 1 && !segmentInfos.info(0).hasDeletions();\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"c01638f4dd94981c1d3d52c4f7991246a5a24aba","date":1327876712,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/IndexFileDeleter.CommitPoint#CommitPoint(Collection[CommitPoint],Directory,SegmentInfos).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/IndexFileDeleter.CommitPoint#CommitPoint(Collection[CommitPoint],Directory,SegmentInfos).mjava","sourceNew":"    public CommitPoint(Collection<CommitPoint> commitsToDelete, Directory directory, SegmentInfos segmentInfos) throws IOException {\n      this.directory = directory;\n      this.commitsToDelete = commitsToDelete;\n      userData = segmentInfos.getUserData();\n      segmentsFileName = segmentInfos.getCurrentSegmentFileName();\n      generation = segmentInfos.getGeneration();\n      files = Collections.unmodifiableCollection(segmentInfos.files(directory, true));\n      segmentCount = segmentInfos.size();\n    }\n\n","sourceOld":"    public CommitPoint(Collection<CommitPoint> commitsToDelete, Directory directory, SegmentInfos segmentInfos) throws IOException {\n      this.directory = directory;\n      this.commitsToDelete = commitsToDelete;\n      userData = segmentInfos.getUserData();\n      segmentsFileName = segmentInfos.getCurrentSegmentFileName();\n      version = segmentInfos.getVersion();\n      generation = segmentInfos.getGeneration();\n      files = Collections.unmodifiableCollection(segmentInfos.files(directory, true));\n      segmentCount = segmentInfos.size();\n    }\n\n","bugFix":["59818e85900870556e1bdd604772c77d74f57d89"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"817882884229bace7dc5d1b75f6b0e4aa1e47122","date":1327879145,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/IndexFileDeleter.CommitPoint#CommitPoint(Collection[CommitPoint],Directory,SegmentInfos).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/IndexFileDeleter.CommitPoint#CommitPoint(Collection[CommitPoint],Directory,SegmentInfos).mjava","sourceNew":"    public CommitPoint(Collection<CommitPoint> commitsToDelete, Directory directory, SegmentInfos segmentInfos) throws IOException {\n      this.directory = directory;\n      this.commitsToDelete = commitsToDelete;\n      userData = segmentInfos.getUserData();\n      segmentsFileName = segmentInfos.getCurrentSegmentFileName();\n      generation = segmentInfos.getGeneration();\n      files = Collections.unmodifiableCollection(segmentInfos.files(directory, true));\n      segmentCount = segmentInfos.size();\n    }\n\n","sourceOld":"    public CommitPoint(Collection<CommitPoint> commitsToDelete, Directory directory, SegmentInfos segmentInfos) throws IOException {\n      this.directory = directory;\n      this.commitsToDelete = commitsToDelete;\n      userData = segmentInfos.getUserData();\n      segmentsFileName = segmentInfos.getCurrentSegmentFileName();\n      version = segmentInfos.getVersion();\n      generation = segmentInfos.getGeneration();\n      files = Collections.unmodifiableCollection(segmentInfos.files(directory, true));\n      segmentCount = segmentInfos.size();\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5b6fdfce35d0adb18836cf8711abe487a934df33","date":1327946200,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/IndexFileDeleter.CommitPoint#CommitPoint(Collection[CommitPoint],Directory,SegmentInfos).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/IndexFileDeleter.CommitPoint#CommitPoint(Collection[CommitPoint],Directory,SegmentInfos).mjava","sourceNew":"    public CommitPoint(Collection<CommitPoint> commitsToDelete, Directory directory, SegmentInfos segmentInfos) throws IOException {\n      this.directory = directory;\n      this.commitsToDelete = commitsToDelete;\n      userData = segmentInfos.getUserData();\n      segmentsFileName = segmentInfos.getCurrentSegmentFileName();\n      generation = segmentInfos.getGeneration();\n      files = Collections.unmodifiableCollection(segmentInfos.files(directory, true));\n      segmentCount = segmentInfos.size();\n    }\n\n","sourceOld":"    public CommitPoint(Collection<CommitPoint> commitsToDelete, Directory directory, SegmentInfos segmentInfos) throws IOException {\n      this.directory = directory;\n      this.commitsToDelete = commitsToDelete;\n      userData = segmentInfos.getUserData();\n      segmentsFileName = segmentInfos.getCurrentSegmentFileName();\n      version = segmentInfos.getVersion();\n      generation = segmentInfos.getGeneration();\n      files = Collections.unmodifiableCollection(segmentInfos.files(directory, true));\n      segmentCount = segmentInfos.size();\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":5,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/IndexFileDeleter.CommitPoint#CommitPoint(Collection[CommitPoint],Directory,SegmentInfos).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/IndexFileDeleter.CommitPoint#CommitPoint(Collection[CommitPoint],Directory,SegmentInfos).mjava","sourceNew":"    public CommitPoint(Collection<CommitPoint> commitsToDelete, Directory directory, SegmentInfos segmentInfos) throws IOException {\n      this.directory = directory;\n      this.commitsToDelete = commitsToDelete;\n      userData = segmentInfos.getUserData();\n      segmentsFileName = segmentInfos.getCurrentSegmentFileName();\n      generation = segmentInfos.getGeneration();\n      files = Collections.unmodifiableCollection(segmentInfos.files(directory, true));\n      segmentCount = segmentInfos.size();\n    }\n\n","sourceOld":"    public CommitPoint(Collection<CommitPoint> commitsToDelete, Directory directory, SegmentInfos segmentInfos) throws IOException {\n      this.directory = directory;\n      this.commitsToDelete = commitsToDelete;\n      userData = segmentInfos.getUserData();\n      segmentsFileName = segmentInfos.getCurrentSegmentFileName();\n      generation = segmentInfos.getGeneration();\n      files = Collections.unmodifiableCollection(segmentInfos.files(directory, true));\n      segmentCount = segmentInfos.size();\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"188ca9aea561b1f58ab1a7f2cbdce1c30b36f5e9":["fb10b6bcde550b87d8f10e5f010bd8f3021023b6"],"c01638f4dd94981c1d3d52c4f7991246a5a24aba":["d14e8d18c0e3970c20354dbeeb49da11bd587fbd"],"817882884229bace7dc5d1b75f6b0e4aa1e47122":["d14e8d18c0e3970c20354dbeeb49da11bd587fbd","c01638f4dd94981c1d3d52c4f7991246a5a24aba"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["c01638f4dd94981c1d3d52c4f7991246a5a24aba"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"85a883878c0af761245ab048babc63d099f835f3":["fb10b6bcde550b87d8f10e5f010bd8f3021023b6","188ca9aea561b1f58ab1a7f2cbdce1c30b36f5e9"],"5b6fdfce35d0adb18836cf8711abe487a934df33":["d14e8d18c0e3970c20354dbeeb49da11bd587fbd","c01638f4dd94981c1d3d52c4f7991246a5a24aba"],"d14e8d18c0e3970c20354dbeeb49da11bd587fbd":["188ca9aea561b1f58ab1a7f2cbdce1c30b36f5e9"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["fb10b6bcde550b87d8f10e5f010bd8f3021023b6","188ca9aea561b1f58ab1a7f2cbdce1c30b36f5e9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"fb10b6bcde550b87d8f10e5f010bd8f3021023b6":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"188ca9aea561b1f58ab1a7f2cbdce1c30b36f5e9":["85a883878c0af761245ab048babc63d099f835f3","d14e8d18c0e3970c20354dbeeb49da11bd587fbd","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a"],"c01638f4dd94981c1d3d52c4f7991246a5a24aba":["817882884229bace7dc5d1b75f6b0e4aa1e47122","3a119bbc8703c10faa329ec201c654b3a35a1e3e","5b6fdfce35d0adb18836cf8711abe487a934df33"],"817882884229bace7dc5d1b75f6b0e4aa1e47122":[],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"85a883878c0af761245ab048babc63d099f835f3":[],"5b6fdfce35d0adb18836cf8711abe487a934df33":[],"d14e8d18c0e3970c20354dbeeb49da11bd587fbd":["c01638f4dd94981c1d3d52c4f7991246a5a24aba","817882884229bace7dc5d1b75f6b0e4aa1e47122","5b6fdfce35d0adb18836cf8711abe487a934df33"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":[],"fb10b6bcde550b87d8f10e5f010bd8f3021023b6":["188ca9aea561b1f58ab1a7f2cbdce1c30b36f5e9","85a883878c0af761245ab048babc63d099f835f3","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["fb10b6bcde550b87d8f10e5f010bd8f3021023b6"]},"heads":["817882884229bace7dc5d1b75f6b0e4aa1e47122","85a883878c0af761245ab048babc63d099f835f3","5b6fdfce35d0adb18836cf8711abe487a934df33","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}