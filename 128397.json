{"path":"solr/src/test/org/apache/solr/analysis/TestHyphenatedWordsFilter#testHyphenAtEnd().mjava","commits":[{"id":"893269407f5c988a4b2ee13c7ffc01ec43136c1d","date":1268598046,"type":0,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/src/test/org/apache/solr/analysis/TestHyphenatedWordsFilter#testHyphenAtEnd().mjava","pathOld":"/dev/null","sourceNew":"\t/**\n\t * Test that HyphenatedWordsFilter behaves correctly with a final hyphen\n\t */\n\tpublic void testHyphenAtEnd() throws Exception {\n\t    String input = \"ecologi-\\r\\ncal devel-\\r\\n\\r\\nop compre-\\u0009hensive-hands-on and ecology-\";\n\t    // first test\n\t    TokenStream ts = new WhitespaceTokenizer(new StringReader(input));\n\t    HyphenatedWordsFilterFactory factory = new HyphenatedWordsFilterFactory();\n\t    ts = factory.create(ts);\n\t    assertTokenStreamContents(ts, \n\t        new String[] { \"ecological\", \"develop\", \"comprehensive-hands-on\", \"and\", \"ecology-\" });\n\t  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8","date":1268599006,"type":4,"author":"Mark Robert Miller","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/src/test/org/apache/solr/analysis/TestHyphenatedWordsFilter#testHyphenAtEnd().mjava","sourceNew":null,"sourceOld":"\t/**\n\t * Test that HyphenatedWordsFilter behaves correctly with a final hyphen\n\t */\n\tpublic void testHyphenAtEnd() throws Exception {\n\t    String input = \"ecologi-\\r\\ncal devel-\\r\\n\\r\\nop compre-\\u0009hensive-hands-on and ecology-\";\n\t    // first test\n\t    TokenStream ts = new WhitespaceTokenizer(new StringReader(input));\n\t    HyphenatedWordsFilterFactory factory = new HyphenatedWordsFilterFactory();\n\t    ts = factory.create(ts);\n\t    assertTokenStreamContents(ts, \n\t        new String[] { \"ecological\", \"develop\", \"comprehensive-hands-on\", \"and\", \"ecology-\" });\n\t  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ad94625fb8d088209f46650c8097196fec67f00c","date":1453508319,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/src/test/org/apache/solr/analysis/TestHyphenatedWordsFilter#testHyphenAtEnd().mjava","pathOld":"src/test/org/apache/solr/analysis/TestHyphenatedWordsFilter#testHyphenAtEnd().mjava","sourceNew":"\t/**\n\t * Test that HyphenatedWordsFilter behaves correctly with a final hyphen\n\t */\n\tpublic void testHyphenAtEnd() throws Exception {\n\t    String input = \"ecologi-\\r\\ncal devel-\\r\\n\\r\\nop compre-\\u0009hensive-hands-on and ecology-\";\n\t    // first test\n\t    TokenStream ts = new WhitespaceTokenizer(new StringReader(input));\n\t    HyphenatedWordsFilterFactory factory = new HyphenatedWordsFilterFactory();\n\t    ts = factory.create(ts);\n\t    assertTokenStreamContents(ts, \n\t        new String[] { \"ecological\", \"develop\", \"comprehensive-hands-on\", \"and\", \"ecology-\" });\n\t  }\n\n","sourceOld":"\t/**\n\t * Test that HyphenatedWordsFilter behaves correctly with a final hyphen\n\t */\n\tpublic void testHyphenAtEnd() throws Exception {\n\t    String input = \"ecologi-\\r\\ncal devel-\\r\\n\\r\\nop compre-\\u0009hensive-hands-on and ecology-\";\n\t    // first test\n\t    TokenStream ts = new WhitespaceTokenizer(new StringReader(input));\n\t    HyphenatedWordsFilterFactory factory = new HyphenatedWordsFilterFactory();\n\t    ts = factory.create(ts);\n\t    assertTokenStreamContents(ts, \n\t        new String[] { \"ecological\", \"develop\", \"comprehensive-hands-on\", \"and\", \"ecology-\" });\n\t  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1da8d55113b689b06716246649de6f62430f15c0","date":1453508340,"type":0,"author":"Dawid Weiss","isMerge":true,"pathNew":"solr/src/test/org/apache/solr/analysis/TestHyphenatedWordsFilter#testHyphenAtEnd().mjava","pathOld":"/dev/null","sourceNew":"\t/**\n\t * Test that HyphenatedWordsFilter behaves correctly with a final hyphen\n\t */\n\tpublic void testHyphenAtEnd() throws Exception {\n\t    String input = \"ecologi-\\r\\ncal devel-\\r\\n\\r\\nop compre-\\u0009hensive-hands-on and ecology-\";\n\t    // first test\n\t    TokenStream ts = new WhitespaceTokenizer(new StringReader(input));\n\t    HyphenatedWordsFilterFactory factory = new HyphenatedWordsFilterFactory();\n\t    ts = factory.create(ts);\n\t    assertTokenStreamContents(ts, \n\t        new String[] { \"ecological\", \"develop\", \"comprehensive-hands-on\", \"and\", \"ecology-\" });\n\t  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9c8b12bda3f5864b27e3e04df1be4f6736ec067a","date":1270088127,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"solr/src/test/org/apache/solr/analysis/TestHyphenatedWordsFilter#testHyphenAtEnd().mjava","pathOld":"solr/src/test/org/apache/solr/analysis/TestHyphenatedWordsFilter#testHyphenAtEnd().mjava","sourceNew":"\t/**\n\t * Test that HyphenatedWordsFilter behaves correctly with a final hyphen\n\t */\n\tpublic void testHyphenAtEnd() throws Exception {\n\t    String input = \"ecologi-\\r\\ncal devel-\\r\\n\\r\\nop compre-\\u0009hensive-hands-on and ecology-\";\n\t    // first test\n\t    TokenStream ts = new WhitespaceTokenizer(DEFAULT_VERSION, new StringReader(input));\n\t    HyphenatedWordsFilterFactory factory = new HyphenatedWordsFilterFactory();\n\t    ts = factory.create(ts);\n\t    assertTokenStreamContents(ts, \n\t        new String[] { \"ecological\", \"develop\", \"comprehensive-hands-on\", \"and\", \"ecology-\" });\n\t  }\n\n","sourceOld":"\t/**\n\t * Test that HyphenatedWordsFilter behaves correctly with a final hyphen\n\t */\n\tpublic void testHyphenAtEnd() throws Exception {\n\t    String input = \"ecologi-\\r\\ncal devel-\\r\\n\\r\\nop compre-\\u0009hensive-hands-on and ecology-\";\n\t    // first test\n\t    TokenStream ts = new WhitespaceTokenizer(new StringReader(input));\n\t    HyphenatedWordsFilterFactory factory = new HyphenatedWordsFilterFactory();\n\t    ts = factory.create(ts);\n\t    assertTokenStreamContents(ts, \n\t        new String[] { \"ecological\", \"develop\", \"comprehensive-hands-on\", \"and\", \"ecology-\" });\n\t  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"384e84fe86b09273dea9bb358ff47fc7781f3f17","date":1272992848,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/contrib/analyzers/common/src/test/org/apache/lucene/analysis/miscellaneous/TestHyphenatedWordsFilter#testHyphenAtEnd().mjava","pathOld":"solr/src/test/org/apache/solr/analysis/TestHyphenatedWordsFilter#testHyphenAtEnd().mjava","sourceNew":"\t/**\n\t * Test that HyphenatedWordsFilter behaves correctly with a final hyphen\n\t */\n\tpublic void testHyphenAtEnd() throws Exception {\n\t    String input = \"ecologi-\\r\\ncal devel-\\r\\n\\r\\nop compre-\\u0009hensive-hands-on and ecology-\";\n\t    // first test\n\t    TokenStream ts = new WhitespaceTokenizer(TEST_VERSION_CURRENT, new StringReader(input));\n\t    ts = new HyphenatedWordsFilter(ts);\n\t    assertTokenStreamContents(ts, \n\t        new String[] { \"ecological\", \"develop\", \"comprehensive-hands-on\", \"and\", \"ecology-\" });\n\t  }\n\n","sourceOld":"\t/**\n\t * Test that HyphenatedWordsFilter behaves correctly with a final hyphen\n\t */\n\tpublic void testHyphenAtEnd() throws Exception {\n\t    String input = \"ecologi-\\r\\ncal devel-\\r\\n\\r\\nop compre-\\u0009hensive-hands-on and ecology-\";\n\t    // first test\n\t    TokenStream ts = new WhitespaceTokenizer(DEFAULT_VERSION, new StringReader(input));\n\t    HyphenatedWordsFilterFactory factory = new HyphenatedWordsFilterFactory();\n\t    ts = factory.create(ts);\n\t    assertTokenStreamContents(ts, \n\t        new String[] { \"ecological\", \"develop\", \"comprehensive-hands-on\", \"and\", \"ecology-\" });\n\t  }\n\n","bugFix":null,"bugIntro":["fcbc12aa8147f5203ca283e7252ba4280d6ffd16"],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"9c8b12bda3f5864b27e3e04df1be4f6736ec067a":["1da8d55113b689b06716246649de6f62430f15c0"],"1da8d55113b689b06716246649de6f62430f15c0":["a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8","ad94625fb8d088209f46650c8097196fec67f00c"],"893269407f5c988a4b2ee13c7ffc01ec43136c1d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"384e84fe86b09273dea9bb358ff47fc7781f3f17":["9c8b12bda3f5864b27e3e04df1be4f6736ec067a"],"a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8":["893269407f5c988a4b2ee13c7ffc01ec43136c1d"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"ad94625fb8d088209f46650c8097196fec67f00c":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["384e84fe86b09273dea9bb358ff47fc7781f3f17"]},"commit2Childs":{"9c8b12bda3f5864b27e3e04df1be4f6736ec067a":["384e84fe86b09273dea9bb358ff47fc7781f3f17"],"1da8d55113b689b06716246649de6f62430f15c0":["9c8b12bda3f5864b27e3e04df1be4f6736ec067a"],"893269407f5c988a4b2ee13c7ffc01ec43136c1d":["a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8"],"a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8":["1da8d55113b689b06716246649de6f62430f15c0"],"384e84fe86b09273dea9bb358ff47fc7781f3f17":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["893269407f5c988a4b2ee13c7ffc01ec43136c1d"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["ad94625fb8d088209f46650c8097196fec67f00c"],"ad94625fb8d088209f46650c8097196fec67f00c":["1da8d55113b689b06716246649de6f62430f15c0"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"pathCommit":null}