{"path":"lucene/core/src/java/org/apache/lucene/codecs/block/BlockPostingsWriter#finishDoc().mjava","commits":[{"id":"e885d2b1e112b1d9db6a2dae82b3b493dfba1df1","date":1342716838,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/block/BlockPostingsWriter#finishDoc().mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public void finishDoc() {\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8081d5018e8846bf4080f2809432c759996e749f","date":1344206372,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/block/BlockPostingsWriter#finishDoc().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/block/BlockPostingsWriter#finishDoc().mjava","sourceNew":"  @Override\n  public void finishDoc() throws IOException {\n    // Have collected a block of docs, and get a new doc. \n    // Should write skip data as well as postings list for\n    // current block\n\n    if (lastBlockDocID != -1 && docBufferUpto == 1) {\n      // nocomit move to startDoc?  ie we can write skip\n      // data as soon as the next doc starts...\n      if (DEBUG) {\n        System.out.println(\"  bufferSkip at writeBlock: lastDocID=\" + lastBlockDocID + \" docCount=\" + (docCount-1));\n      }\n      skipWriter.bufferSkip(lastBlockDocID, docCount-1, lastBlockPosFP, lastBlockPayFP, lastBlockPosBufferUpto, lastBlockStartOffset, lastBlockPayloadByteUpto);\n    }\n\n    // Since we don't know df for current term, we had to buffer\n    // those skip data for each block, and when a new doc comes, \n    // write them to skip file.\n    if (docBufferUpto == blockSize) {\n      lastBlockDocID = lastDocID;\n      if (posOut != null) {\n        if (payOut != null) {\n          lastBlockPayFP = payOut.getFilePointer();\n        }\n        lastBlockPosFP = posOut.getFilePointer();\n        lastBlockPosBufferUpto = posBufferUpto;\n        lastBlockStartOffset = lastStartOffset;\n        lastBlockPayloadByteUpto = payloadByteUpto;\n      }\n      if (DEBUG) {\n        System.out.println(\"  docBufferUpto=\"+docBufferUpto+\" now get lastBlockDocID=\"+lastBlockDocID+\" lastBlockPosFP=\" + lastBlockPosFP + \" lastBlockPosBufferUpto=\" + lastBlockPosBufferUpto + \" lastBlockPayloadByteUpto=\" + lastBlockPayloadByteUpto);\n      }\n      docBufferUpto = 0;\n    }\n  }\n\n","sourceOld":"  @Override\n  public void finishDoc() {\n  }\n\n","bugFix":null,"bugIntro":["c2808fd811f853d032fff6b48bb83a4b7b6f48e7"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"d2f8624b27ae4159f0d53a55e5c9c5c6f6fa8f51","date":1344355078,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/block/BlockPostingsWriter#finishDoc().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/block/BlockPostingsWriter#finishDoc().mjava","sourceNew":"  @Override\n  public void finishDoc() throws IOException {\n    // Have collected a block of docs, and get a new doc. \n    // Should write skip data as well as postings list for\n    // current block\n\n    if (lastBlockDocID != -1 && docBufferUpto == 1) {\n      // nocomit move to startDoc?  ie we can write skip\n      // data as soon as the next doc starts...\n      if (DEBUG) {\n        System.out.println(\"  bufferSkip at writeBlock: lastDocID=\" + lastBlockDocID + \" docCount=\" + (docCount-1));\n      }\n      skipWriter.bufferSkip(lastBlockDocID, docCount-1, lastBlockPosFP, lastBlockPayFP, lastBlockPosBufferUpto, lastBlockStartOffset, lastBlockPayloadByteUpto);\n    }\n\n    // Since we don't know df for current term, we had to buffer\n    // those skip data for each block, and when a new doc comes, \n    // write them to skip file.\n    if (docBufferUpto == BLOCK_SIZE) {\n      lastBlockDocID = lastDocID;\n      if (posOut != null) {\n        if (payOut != null) {\n          lastBlockPayFP = payOut.getFilePointer();\n        }\n        lastBlockPosFP = posOut.getFilePointer();\n        lastBlockPosBufferUpto = posBufferUpto;\n        lastBlockStartOffset = lastStartOffset;\n        lastBlockPayloadByteUpto = payloadByteUpto;\n      }\n      if (DEBUG) {\n        System.out.println(\"  docBufferUpto=\"+docBufferUpto+\" now get lastBlockDocID=\"+lastBlockDocID+\" lastBlockPosFP=\" + lastBlockPosFP + \" lastBlockPosBufferUpto=\" + lastBlockPosBufferUpto + \" lastBlockPayloadByteUpto=\" + lastBlockPayloadByteUpto);\n      }\n      docBufferUpto = 0;\n    }\n  }\n\n","sourceOld":"  @Override\n  public void finishDoc() throws IOException {\n    // Have collected a block of docs, and get a new doc. \n    // Should write skip data as well as postings list for\n    // current block\n\n    if (lastBlockDocID != -1 && docBufferUpto == 1) {\n      // nocomit move to startDoc?  ie we can write skip\n      // data as soon as the next doc starts...\n      if (DEBUG) {\n        System.out.println(\"  bufferSkip at writeBlock: lastDocID=\" + lastBlockDocID + \" docCount=\" + (docCount-1));\n      }\n      skipWriter.bufferSkip(lastBlockDocID, docCount-1, lastBlockPosFP, lastBlockPayFP, lastBlockPosBufferUpto, lastBlockStartOffset, lastBlockPayloadByteUpto);\n    }\n\n    // Since we don't know df for current term, we had to buffer\n    // those skip data for each block, and when a new doc comes, \n    // write them to skip file.\n    if (docBufferUpto == blockSize) {\n      lastBlockDocID = lastDocID;\n      if (posOut != null) {\n        if (payOut != null) {\n          lastBlockPayFP = payOut.getFilePointer();\n        }\n        lastBlockPosFP = posOut.getFilePointer();\n        lastBlockPosBufferUpto = posBufferUpto;\n        lastBlockStartOffset = lastStartOffset;\n        lastBlockPayloadByteUpto = payloadByteUpto;\n      }\n      if (DEBUG) {\n        System.out.println(\"  docBufferUpto=\"+docBufferUpto+\" now get lastBlockDocID=\"+lastBlockDocID+\" lastBlockPosFP=\" + lastBlockPosFP + \" lastBlockPosBufferUpto=\" + lastBlockPosBufferUpto + \" lastBlockPayloadByteUpto=\" + lastBlockPayloadByteUpto);\n      }\n      docBufferUpto = 0;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"3c188105a9aae04f56c24996f98f8333fc825d2e","date":1345031914,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/block/BlockPostingsWriter#finishDoc().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/block/BlockPostingsWriter#finishDoc().mjava","sourceNew":"  @Override\n  public void finishDoc() throws IOException {\n    // Have collected a block of docs, and get a new doc. \n    // Should write skip data as well as postings list for\n    // current block\n\n    if (lastBlockDocID != -1 && docBufferUpto == 1) {\n      // TODO: can we move this to startDoc?  ie we can write skip\n      // data as soon as the next doc starts...\n      if (DEBUG) {\n        System.out.println(\"  bufferSkip at writeBlock: lastDocID=\" + lastBlockDocID + \" docCount=\" + (docCount-1));\n      }\n      skipWriter.bufferSkip(lastBlockDocID, docCount-1, lastBlockPosFP, lastBlockPayFP, lastBlockPosBufferUpto, lastBlockStartOffset, lastBlockPayloadByteUpto);\n    }\n\n    // Since we don't know df for current term, we had to buffer\n    // those skip data for each block, and when a new doc comes, \n    // write them to skip file.\n    if (docBufferUpto == BLOCK_SIZE) {\n      lastBlockDocID = lastDocID;\n      if (posOut != null) {\n        if (payOut != null) {\n          lastBlockPayFP = payOut.getFilePointer();\n        }\n        lastBlockPosFP = posOut.getFilePointer();\n        lastBlockPosBufferUpto = posBufferUpto;\n        lastBlockStartOffset = lastStartOffset;\n        lastBlockPayloadByteUpto = payloadByteUpto;\n      }\n      if (DEBUG) {\n        System.out.println(\"  docBufferUpto=\"+docBufferUpto+\" now get lastBlockDocID=\"+lastBlockDocID+\" lastBlockPosFP=\" + lastBlockPosFP + \" lastBlockPosBufferUpto=\" + lastBlockPosBufferUpto + \" lastBlockPayloadByteUpto=\" + lastBlockPayloadByteUpto);\n      }\n      docBufferUpto = 0;\n    }\n  }\n\n","sourceOld":"  @Override\n  public void finishDoc() throws IOException {\n    // Have collected a block of docs, and get a new doc. \n    // Should write skip data as well as postings list for\n    // current block\n\n    if (lastBlockDocID != -1 && docBufferUpto == 1) {\n      // nocomit move to startDoc?  ie we can write skip\n      // data as soon as the next doc starts...\n      if (DEBUG) {\n        System.out.println(\"  bufferSkip at writeBlock: lastDocID=\" + lastBlockDocID + \" docCount=\" + (docCount-1));\n      }\n      skipWriter.bufferSkip(lastBlockDocID, docCount-1, lastBlockPosFP, lastBlockPayFP, lastBlockPosBufferUpto, lastBlockStartOffset, lastBlockPayloadByteUpto);\n    }\n\n    // Since we don't know df for current term, we had to buffer\n    // those skip data for each block, and when a new doc comes, \n    // write them to skip file.\n    if (docBufferUpto == BLOCK_SIZE) {\n      lastBlockDocID = lastDocID;\n      if (posOut != null) {\n        if (payOut != null) {\n          lastBlockPayFP = payOut.getFilePointer();\n        }\n        lastBlockPosFP = posOut.getFilePointer();\n        lastBlockPosBufferUpto = posBufferUpto;\n        lastBlockStartOffset = lastStartOffset;\n        lastBlockPayloadByteUpto = payloadByteUpto;\n      }\n      if (DEBUG) {\n        System.out.println(\"  docBufferUpto=\"+docBufferUpto+\" now get lastBlockDocID=\"+lastBlockDocID+\" lastBlockPosFP=\" + lastBlockPosFP + \" lastBlockPosBufferUpto=\" + lastBlockPosBufferUpto + \" lastBlockPayloadByteUpto=\" + lastBlockPayloadByteUpto);\n      }\n      docBufferUpto = 0;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"1c93396a1df03720cb20e2c2f513a6fa59b21e4c","date":1345032673,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/block/BlockPostingsWriter#finishDoc().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/block/BlockPostingsWriter#finishDoc().mjava","sourceNew":"  @Override\n  public void finishDoc() throws IOException {\n    // Have collected a block of docs, and get a new doc. \n    // Should write skip data as well as postings list for\n    // current block\n\n    if (lastBlockDocID != -1 && docBufferUpto == 1) {\n      // nocomit move to startDoc?  ie we can write skip\n      // data as soon as the next doc starts...\n      if (DEBUG) {\n        System.out.println(\"  bufferSkip at writeBlock: lastDocID=\" + lastBlockDocID + \" docCount=\" + (docCount-1));\n      }\n      skipWriter.bufferSkip(lastBlockDocID, docCount-1, lastBlockPosFP, lastBlockPayFP, lastBlockPosBufferUpto, lastBlockStartOffset, lastBlockPayloadByteUpto);\n    }\n\n    // Since we don't know df for current term, we had to buffer\n    // those skip data for each block, and when a new doc comes, \n    // write them to skip file.\n    if (docBufferUpto == BLOCK_SIZE) {\n      lastBlockDocID = lastDocID;\n      if (posOut != null) {\n        if (payOut != null) {\n          lastBlockPayFP = payOut.getFilePointer();\n        }\n        lastBlockPosFP = posOut.getFilePointer();\n        lastBlockPosBufferUpto = posBufferUpto;\n        lastBlockStartOffset = lastStartOffset;\n        lastBlockPayloadByteUpto = payloadByteUpto;\n      }\n      if (DEBUG) {\n        System.out.println(\"  docBufferUpto=\"+docBufferUpto+\" now get lastBlockDocID=\"+lastBlockDocID+\" lastBlockPosFP=\" + lastBlockPosFP + \" lastBlockPosBufferUpto=\" + lastBlockPosBufferUpto + \" lastBlockPayloadByteUpto=\" + lastBlockPayloadByteUpto);\n      }\n      docBufferUpto = 0;\n    }\n  }\n\n","sourceOld":"  @Override\n  public void finishDoc() throws IOException {\n    // Have collected a block of docs, and get a new doc. \n    // Should write skip data as well as postings list for\n    // current block\n\n    if (lastBlockDocID != -1 && docBufferUpto == 1) {\n      // TODO: can we move this to startDoc?  ie we can write skip\n      // data as soon as the next doc starts...\n      if (DEBUG) {\n        System.out.println(\"  bufferSkip at writeBlock: lastDocID=\" + lastBlockDocID + \" docCount=\" + (docCount-1));\n      }\n      skipWriter.bufferSkip(lastBlockDocID, docCount-1, lastBlockPosFP, lastBlockPayFP, lastBlockPosBufferUpto, lastBlockStartOffset, lastBlockPayloadByteUpto);\n    }\n\n    // Since we don't know df for current term, we had to buffer\n    // those skip data for each block, and when a new doc comes, \n    // write them to skip file.\n    if (docBufferUpto == BLOCK_SIZE) {\n      lastBlockDocID = lastDocID;\n      if (posOut != null) {\n        if (payOut != null) {\n          lastBlockPayFP = payOut.getFilePointer();\n        }\n        lastBlockPosFP = posOut.getFilePointer();\n        lastBlockPosBufferUpto = posBufferUpto;\n        lastBlockStartOffset = lastStartOffset;\n        lastBlockPayloadByteUpto = payloadByteUpto;\n      }\n      if (DEBUG) {\n        System.out.println(\"  docBufferUpto=\"+docBufferUpto+\" now get lastBlockDocID=\"+lastBlockDocID+\" lastBlockPosFP=\" + lastBlockPosFP + \" lastBlockPosBufferUpto=\" + lastBlockPosBufferUpto + \" lastBlockPayloadByteUpto=\" + lastBlockPayloadByteUpto);\n      }\n      docBufferUpto = 0;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"3e4439268f3e73dd6840cec2281bd73e76b3eb28","date":1345033656,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/block/BlockPostingsWriter#finishDoc().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/block/BlockPostingsWriter#finishDoc().mjava","sourceNew":"  @Override\n  public void finishDoc() throws IOException {\n    // Since we don't know df for current term, we had to buffer\n    // those skip data for each block, and when a new doc comes, \n    // write them to skip file.\n    if (docBufferUpto == BLOCK_SIZE) {\n      lastBlockDocID = lastDocID;\n      if (posOut != null) {\n        if (payOut != null) {\n          lastBlockPayFP = payOut.getFilePointer();\n        }\n        lastBlockPosFP = posOut.getFilePointer();\n        lastBlockPosBufferUpto = posBufferUpto;\n        lastBlockStartOffset = lastStartOffset;\n        lastBlockPayloadByteUpto = payloadByteUpto;\n      }\n      if (DEBUG) {\n        System.out.println(\"  docBufferUpto=\"+docBufferUpto+\" now get lastBlockDocID=\"+lastBlockDocID+\" lastBlockPosFP=\" + lastBlockPosFP + \" lastBlockPosBufferUpto=\" + lastBlockPosBufferUpto + \" lastBlockPayloadByteUpto=\" + lastBlockPayloadByteUpto);\n      }\n      docBufferUpto = 0;\n    }\n  }\n\n","sourceOld":"  @Override\n  public void finishDoc() throws IOException {\n    // Have collected a block of docs, and get a new doc. \n    // Should write skip data as well as postings list for\n    // current block\n\n    if (lastBlockDocID != -1 && docBufferUpto == 1) {\n      // nocomit move to startDoc?  ie we can write skip\n      // data as soon as the next doc starts...\n      if (DEBUG) {\n        System.out.println(\"  bufferSkip at writeBlock: lastDocID=\" + lastBlockDocID + \" docCount=\" + (docCount-1));\n      }\n      skipWriter.bufferSkip(lastBlockDocID, docCount-1, lastBlockPosFP, lastBlockPayFP, lastBlockPosBufferUpto, lastBlockStartOffset, lastBlockPayloadByteUpto);\n    }\n\n    // Since we don't know df for current term, we had to buffer\n    // those skip data for each block, and when a new doc comes, \n    // write them to skip file.\n    if (docBufferUpto == BLOCK_SIZE) {\n      lastBlockDocID = lastDocID;\n      if (posOut != null) {\n        if (payOut != null) {\n          lastBlockPayFP = payOut.getFilePointer();\n        }\n        lastBlockPosFP = posOut.getFilePointer();\n        lastBlockPosBufferUpto = posBufferUpto;\n        lastBlockStartOffset = lastStartOffset;\n        lastBlockPayloadByteUpto = payloadByteUpto;\n      }\n      if (DEBUG) {\n        System.out.println(\"  docBufferUpto=\"+docBufferUpto+\" now get lastBlockDocID=\"+lastBlockDocID+\" lastBlockPosFP=\" + lastBlockPosFP + \" lastBlockPosBufferUpto=\" + lastBlockPosBufferUpto + \" lastBlockPayloadByteUpto=\" + lastBlockPayloadByteUpto);\n      }\n      docBufferUpto = 0;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"fcc6cbc7e8693270112e8d40ca98226199c0288e","date":1345039720,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/block/BlockPostingsWriter#finishDoc().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/block/BlockPostingsWriter#finishDoc().mjava","sourceNew":"  @Override\n  public void finishDoc() throws IOException {\n    // Since we don't know df for current term, we had to buffer\n    // those skip data for each block, and when a new doc comes, \n    // write them to skip file.\n    if (docBufferUpto == BLOCK_SIZE) {\n      lastBlockDocID = lastDocID;\n      if (posOut != null) {\n        if (payOut != null) {\n          lastBlockPayFP = payOut.getFilePointer();\n        }\n        lastBlockPosFP = posOut.getFilePointer();\n        lastBlockPosBufferUpto = posBufferUpto;\n        lastBlockStartOffset = lastStartOffset;\n        lastBlockPayloadByteUpto = payloadByteUpto;\n      }\n      // if (DEBUG) {\n      //   System.out.println(\"  docBufferUpto=\"+docBufferUpto+\" now get lastBlockDocID=\"+lastBlockDocID+\" lastBlockPosFP=\" + lastBlockPosFP + \" lastBlockPosBufferUpto=\" +  lastBlockPosBufferUpto + \" lastBlockPayloadByteUpto=\" + lastBlockPayloadByteUpto);\n      // }\n      docBufferUpto = 0;\n    }\n  }\n\n","sourceOld":"  @Override\n  public void finishDoc() throws IOException {\n    // Since we don't know df for current term, we had to buffer\n    // those skip data for each block, and when a new doc comes, \n    // write them to skip file.\n    if (docBufferUpto == BLOCK_SIZE) {\n      lastBlockDocID = lastDocID;\n      if (posOut != null) {\n        if (payOut != null) {\n          lastBlockPayFP = payOut.getFilePointer();\n        }\n        lastBlockPosFP = posOut.getFilePointer();\n        lastBlockPosBufferUpto = posBufferUpto;\n        lastBlockStartOffset = lastStartOffset;\n        lastBlockPayloadByteUpto = payloadByteUpto;\n      }\n      if (DEBUG) {\n        System.out.println(\"  docBufferUpto=\"+docBufferUpto+\" now get lastBlockDocID=\"+lastBlockDocID+\" lastBlockPosFP=\" + lastBlockPosFP + \" lastBlockPosBufferUpto=\" + lastBlockPosBufferUpto + \" lastBlockPayloadByteUpto=\" + lastBlockPayloadByteUpto);\n      }\n      docBufferUpto = 0;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"f8615860cb50aefb8eebca1d1b3893dbe21cf126","date":1345550448,"type":0,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/block/BlockPostingsWriter#finishDoc().mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public void finishDoc() throws IOException {\n    // Since we don't know df for current term, we had to buffer\n    // those skip data for each block, and when a new doc comes, \n    // write them to skip file.\n    if (docBufferUpto == BLOCK_SIZE) {\n      lastBlockDocID = lastDocID;\n      if (posOut != null) {\n        if (payOut != null) {\n          lastBlockPayFP = payOut.getFilePointer();\n        }\n        lastBlockPosFP = posOut.getFilePointer();\n        lastBlockPosBufferUpto = posBufferUpto;\n        lastBlockStartOffset = lastStartOffset;\n        lastBlockPayloadByteUpto = payloadByteUpto;\n      }\n      // if (DEBUG) {\n      //   System.out.println(\"  docBufferUpto=\"+docBufferUpto+\" now get lastBlockDocID=\"+lastBlockDocID+\" lastBlockPosFP=\" + lastBlockPosFP + \" lastBlockPosBufferUpto=\" +  lastBlockPosBufferUpto + \" lastBlockPayloadByteUpto=\" + lastBlockPayloadByteUpto);\n      // }\n      docBufferUpto = 0;\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"001b25b42373b22a52f399dbf072f1224632e8e6","date":1345889167,"type":0,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/block/BlockPostingsWriter#finishDoc().mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public void finishDoc() throws IOException {\n    // Since we don't know df for current term, we had to buffer\n    // those skip data for each block, and when a new doc comes, \n    // write them to skip file.\n    if (docBufferUpto == BLOCK_SIZE) {\n      lastBlockDocID = lastDocID;\n      if (posOut != null) {\n        if (payOut != null) {\n          lastBlockPayFP = payOut.getFilePointer();\n        }\n        lastBlockPosFP = posOut.getFilePointer();\n        lastBlockPosBufferUpto = posBufferUpto;\n        lastBlockStartOffset = lastStartOffset;\n        lastBlockPayloadByteUpto = payloadByteUpto;\n      }\n      // if (DEBUG) {\n      //   System.out.println(\"  docBufferUpto=\"+docBufferUpto+\" now get lastBlockDocID=\"+lastBlockDocID+\" lastBlockPosFP=\" + lastBlockPosFP + \" lastBlockPosBufferUpto=\" +  lastBlockPosBufferUpto + \" lastBlockPayloadByteUpto=\" + lastBlockPayloadByteUpto);\n      // }\n      docBufferUpto = 0;\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3e45d45bc3730ddd1341f4eb6025f33b8482e6e2","date":1346834651,"type":5,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/codecs/src/java/org/apache/lucene/codecs/block/BlockPostingsWriter#finishDoc().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/block/BlockPostingsWriter#finishDoc().mjava","sourceNew":"  @Override\n  public void finishDoc() throws IOException {\n    // Since we don't know df for current term, we had to buffer\n    // those skip data for each block, and when a new doc comes, \n    // write them to skip file.\n    if (docBufferUpto == BLOCK_SIZE) {\n      lastBlockDocID = lastDocID;\n      if (posOut != null) {\n        if (payOut != null) {\n          lastBlockPayFP = payOut.getFilePointer();\n        }\n        lastBlockPosFP = posOut.getFilePointer();\n        lastBlockPosBufferUpto = posBufferUpto;\n        lastBlockStartOffset = lastStartOffset;\n        lastBlockPayloadByteUpto = payloadByteUpto;\n      }\n      // if (DEBUG) {\n      //   System.out.println(\"  docBufferUpto=\"+docBufferUpto+\" now get lastBlockDocID=\"+lastBlockDocID+\" lastBlockPosFP=\" + lastBlockPosFP + \" lastBlockPosBufferUpto=\" +  lastBlockPosBufferUpto + \" lastBlockPayloadByteUpto=\" + lastBlockPayloadByteUpto);\n      // }\n      docBufferUpto = 0;\n    }\n  }\n\n","sourceOld":"  @Override\n  public void finishDoc() throws IOException {\n    // Since we don't know df for current term, we had to buffer\n    // those skip data for each block, and when a new doc comes, \n    // write them to skip file.\n    if (docBufferUpto == BLOCK_SIZE) {\n      lastBlockDocID = lastDocID;\n      if (posOut != null) {\n        if (payOut != null) {\n          lastBlockPayFP = payOut.getFilePointer();\n        }\n        lastBlockPosFP = posOut.getFilePointer();\n        lastBlockPosBufferUpto = posBufferUpto;\n        lastBlockStartOffset = lastStartOffset;\n        lastBlockPayloadByteUpto = payloadByteUpto;\n      }\n      // if (DEBUG) {\n      //   System.out.println(\"  docBufferUpto=\"+docBufferUpto+\" now get lastBlockDocID=\"+lastBlockDocID+\" lastBlockPosFP=\" + lastBlockPosFP + \" lastBlockPosBufferUpto=\" +  lastBlockPosBufferUpto + \" lastBlockPayloadByteUpto=\" + lastBlockPayloadByteUpto);\n      // }\n      docBufferUpto = 0;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"001b25b42373b22a52f399dbf072f1224632e8e6":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","f8615860cb50aefb8eebca1d1b3893dbe21cf126"],"3c188105a9aae04f56c24996f98f8333fc825d2e":["d2f8624b27ae4159f0d53a55e5c9c5c6f6fa8f51"],"3e45d45bc3730ddd1341f4eb6025f33b8482e6e2":["f8615860cb50aefb8eebca1d1b3893dbe21cf126"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"1c93396a1df03720cb20e2c2f513a6fa59b21e4c":["3c188105a9aae04f56c24996f98f8333fc825d2e"],"f8615860cb50aefb8eebca1d1b3893dbe21cf126":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","fcc6cbc7e8693270112e8d40ca98226199c0288e"],"d2f8624b27ae4159f0d53a55e5c9c5c6f6fa8f51":["8081d5018e8846bf4080f2809432c759996e749f"],"e885d2b1e112b1d9db6a2dae82b3b493dfba1df1":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"8081d5018e8846bf4080f2809432c759996e749f":["e885d2b1e112b1d9db6a2dae82b3b493dfba1df1"],"fcc6cbc7e8693270112e8d40ca98226199c0288e":["3e4439268f3e73dd6840cec2281bd73e76b3eb28"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3e45d45bc3730ddd1341f4eb6025f33b8482e6e2"],"3e4439268f3e73dd6840cec2281bd73e76b3eb28":["1c93396a1df03720cb20e2c2f513a6fa59b21e4c"]},"commit2Childs":{"001b25b42373b22a52f399dbf072f1224632e8e6":[],"3c188105a9aae04f56c24996f98f8333fc825d2e":["1c93396a1df03720cb20e2c2f513a6fa59b21e4c"],"3e45d45bc3730ddd1341f4eb6025f33b8482e6e2":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["001b25b42373b22a52f399dbf072f1224632e8e6","f8615860cb50aefb8eebca1d1b3893dbe21cf126","e885d2b1e112b1d9db6a2dae82b3b493dfba1df1"],"1c93396a1df03720cb20e2c2f513a6fa59b21e4c":["3e4439268f3e73dd6840cec2281bd73e76b3eb28"],"f8615860cb50aefb8eebca1d1b3893dbe21cf126":["001b25b42373b22a52f399dbf072f1224632e8e6","3e45d45bc3730ddd1341f4eb6025f33b8482e6e2"],"d2f8624b27ae4159f0d53a55e5c9c5c6f6fa8f51":["3c188105a9aae04f56c24996f98f8333fc825d2e"],"e885d2b1e112b1d9db6a2dae82b3b493dfba1df1":["8081d5018e8846bf4080f2809432c759996e749f"],"8081d5018e8846bf4080f2809432c759996e749f":["d2f8624b27ae4159f0d53a55e5c9c5c6f6fa8f51"],"fcc6cbc7e8693270112e8d40ca98226199c0288e":["f8615860cb50aefb8eebca1d1b3893dbe21cf126"],"3e4439268f3e73dd6840cec2281bd73e76b3eb28":["fcc6cbc7e8693270112e8d40ca98226199c0288e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["001b25b42373b22a52f399dbf072f1224632e8e6","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}