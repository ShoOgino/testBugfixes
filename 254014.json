{"path":"src/test/org/apache/lucene/search/TestRangeQuery#testDeprecatedCstrctors().mjava","commits":[{"id":"fc06b54321fa9fb02e4076ae56b44cfa920ae72d","date":1226568680,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"src/test/org/apache/lucene/search/TestRangeQuery#testDeprecatedCstrctors().mjava","pathOld":"/dev/null","sourceNew":"  //TODO: remove in Lucene 3.0\n  public void testDeprecatedCstrctors() throws IOException {\n    Query query = new RangeQuery(null, new Term(\"content\",\"C\"), false);\n    initializeIndex(new String[] {\"A\", \"B\", \"C\", \"D\"});\n    IndexSearcher searcher = new IndexSearcher(dir);\n    ScoreDoc[] hits = searcher.search(query, null, 1000).scoreDocs;\n    assertEquals(\"A,B,C,D, only B in range\", 2, hits.length);\n    searcher.close();\n    \n    query = new RangeQuery(new Term(\"content\",\"C\"),null, false);\n    initializeIndex(new String[] {\"A\", \"B\", \"C\", \"D\"});\n    searcher = new IndexSearcher(dir);\n    hits = searcher.search(query, null, 1000).scoreDocs;\n    assertEquals(\"A,B,C,D, only B in range\", 1, hits.length);\n    searcher.close();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0f612096ab5275c4821d05f126bf45a89f4782b8","date":1246738452,"type":5,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/test/org/apache/lucene/search/TestTermRangeQuery#testDeprecatedCstrctors().mjava","pathOld":"src/test/org/apache/lucene/search/TestRangeQuery#testDeprecatedCstrctors().mjava","sourceNew":"  //TODO: remove in Lucene 3.0\n  public void testDeprecatedCstrctors() throws IOException {\n    Query query = new RangeQuery(null, new Term(\"content\",\"C\"), false);\n    initializeIndex(new String[] {\"A\", \"B\", \"C\", \"D\"});\n    IndexSearcher searcher = new IndexSearcher(dir);\n    ScoreDoc[] hits = searcher.search(query, null, 1000).scoreDocs;\n    assertEquals(\"A,B,C,D, only B in range\", 2, hits.length);\n    searcher.close();\n    \n    query = new RangeQuery(new Term(\"content\",\"C\"),null, false);\n    initializeIndex(new String[] {\"A\", \"B\", \"C\", \"D\"});\n    searcher = new IndexSearcher(dir);\n    hits = searcher.search(query, null, 1000).scoreDocs;\n    assertEquals(\"A,B,C,D, only B in range\", 1, hits.length);\n    searcher.close();\n  }\n\n","sourceOld":"  //TODO: remove in Lucene 3.0\n  public void testDeprecatedCstrctors() throws IOException {\n    Query query = new RangeQuery(null, new Term(\"content\",\"C\"), false);\n    initializeIndex(new String[] {\"A\", \"B\", \"C\", \"D\"});\n    IndexSearcher searcher = new IndexSearcher(dir);\n    ScoreDoc[] hits = searcher.search(query, null, 1000).scoreDocs;\n    assertEquals(\"A,B,C,D, only B in range\", 2, hits.length);\n    searcher.close();\n    \n    query = new RangeQuery(new Term(\"content\",\"C\"),null, false);\n    initializeIndex(new String[] {\"A\", \"B\", \"C\", \"D\"});\n    searcher = new IndexSearcher(dir);\n    hits = searcher.search(query, null, 1000).scoreDocs;\n    assertEquals(\"A,B,C,D, only B in range\", 1, hits.length);\n    searcher.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"0f612096ab5275c4821d05f126bf45a89f4782b8":["fc06b54321fa9fb02e4076ae56b44cfa920ae72d"],"fc06b54321fa9fb02e4076ae56b44cfa920ae72d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["0f612096ab5275c4821d05f126bf45a89f4782b8"]},"commit2Childs":{"0f612096ab5275c4821d05f126bf45a89f4782b8":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"fc06b54321fa9fb02e4076ae56b44cfa920ae72d":["0f612096ab5275c4821d05f126bf45a89f4782b8"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["fc06b54321fa9fb02e4076ae56b44cfa920ae72d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}