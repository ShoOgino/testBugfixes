{"path":"solr/solrj/src/java/org/apache/solr/common/util/Utils#getVal(Object,String).mjava","commits":[{"id":"d4a9a892a743a560d17851cd4ce6cb0aaa2d8712","date":1498109521,"type":0,"author":"Noble Paul","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/common/util/Utils#getVal(Object,String).mjava","pathOld":"/dev/null","sourceNew":"  private static Object getVal(Object obj, String key) {\n    if(obj instanceof NamedList) return ((NamedList) obj).get(key);\n    else if (obj instanceof Map) return ((Map) obj).get(key);\n    else throw new RuntimeException(\"must be a NamedList or Map\");\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b7dfa64bc2074fb87d0ca70095a644c1ead107e1","date":1498356339,"type":0,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"solr/solrj/src/java/org/apache/solr/common/util/Utils#getVal(Object,String).mjava","pathOld":"/dev/null","sourceNew":"  private static Object getVal(Object obj, String key) {\n    if(obj instanceof NamedList) return ((NamedList) obj).get(key);\n    else if (obj instanceof Map) return ((Map) obj).get(key);\n    else throw new RuntimeException(\"must be a NamedList or Map\");\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"28288370235ed02234a64753cdbf0c6ec096304a","date":1498726817,"type":0,"author":"Karl Wright","isMerge":true,"pathNew":"solr/solrj/src/java/org/apache/solr/common/util/Utils#getVal(Object,String).mjava","pathOld":"/dev/null","sourceNew":"  private static Object getVal(Object obj, String key) {\n    if(obj instanceof NamedList) return ((NamedList) obj).get(key);\n    else if (obj instanceof Map) return ((Map) obj).get(key);\n    else throw new RuntimeException(\"must be a NamedList or Map\");\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ac52b67f02dde8ba4b452266fdf8c0e15442c856","date":1510634873,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/common/util/Utils#getVal(Object,String).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/common/util/Utils#getVal(Object,String).mjava","sourceNew":"  private static Object getVal(Object obj, String key) {\n    if (obj instanceof MapWriter) {\n      Object[] result = new Object[1];\n      try {\n        ((MapWriter) obj).writeMap(new MapWriter.EntryWriter() {\n          @Override\n          public MapWriter.EntryWriter put(String k, Object v) throws IOException {\n            if (key.equals(k)) result[0] = v;\n            return this;\n          }\n        });\n      } catch (IOException e) {\n        throw new RuntimeException(e);\n      }\n      return result[0];\n    }\n\n    if (obj instanceof NamedList) return ((NamedList) obj).get(key);\n    else if (obj instanceof Map) return ((Map) obj).get(key);\n    else throw new RuntimeException(\"must be a NamedList or Map\");\n  }\n\n","sourceOld":"  private static Object getVal(Object obj, String key) {\n    if(obj instanceof NamedList) return ((NamedList) obj).get(key);\n    else if (obj instanceof Map) return ((Map) obj).get(key);\n    else throw new RuntimeException(\"must be a NamedList or Map\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"536bafb7a33a91ae703a78de9f6bd5c7e32471d9","date":1538395209,"type":5,"author":"Noble Paul","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/common/util/Utils#getVal(Object,String,int).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/common/util/Utils#getVal(Object,String).mjava","sourceNew":"  private static Object getVal(Object obj, String key, int idx) {\n    if (obj instanceof MapWriter) {\n      Object[] result = new Object[1];\n      try {\n        ((MapWriter) obj).writeMap(new MapWriter.EntryWriter() {\n          int count = -1;\n          @Override\n          public MapWriter.EntryWriter put(String k, Object v) {\n            if (result[0] != null) return this;\n            if (k != null) {\n              if (key.equals(k)) result[0] = v;\n            } else {\n              if (++count == idx) result[0] = v;\n            }\n            return this;\n          }\n        });\n      } catch (IOException e) {\n        throw new RuntimeException(e);\n      }\n      return result[0];\n    }\n    else if (obj instanceof Map) return ((Map) obj).get(key);\n    else throw new RuntimeException(\"must be a NamedList or Map\");\n  }\n\n","sourceOld":"  private static Object getVal(Object obj, String key) {\n    if (obj instanceof MapWriter) {\n      Object[] result = new Object[1];\n      try {\n        ((MapWriter) obj).writeMap(new MapWriter.EntryWriter() {\n          @Override\n          public MapWriter.EntryWriter put(String k, Object v) throws IOException {\n            if (key.equals(k)) result[0] = v;\n            return this;\n          }\n        });\n      } catch (IOException e) {\n        throw new RuntimeException(e);\n      }\n      return result[0];\n    }\n\n    if (obj instanceof NamedList) return ((NamedList) obj).get(key);\n    else if (obj instanceof Map) return ((Map) obj).get(key);\n    else throw new RuntimeException(\"must be a NamedList or Map\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"d4a9a892a743a560d17851cd4ce6cb0aaa2d8712":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"536bafb7a33a91ae703a78de9f6bd5c7e32471d9":["ac52b67f02dde8ba4b452266fdf8c0e15442c856"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"ac52b67f02dde8ba4b452266fdf8c0e15442c856":["28288370235ed02234a64753cdbf0c6ec096304a"],"b7dfa64bc2074fb87d0ca70095a644c1ead107e1":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","d4a9a892a743a560d17851cd4ce6cb0aaa2d8712"],"28288370235ed02234a64753cdbf0c6ec096304a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","d4a9a892a743a560d17851cd4ce6cb0aaa2d8712"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["536bafb7a33a91ae703a78de9f6bd5c7e32471d9"]},"commit2Childs":{"d4a9a892a743a560d17851cd4ce6cb0aaa2d8712":["b7dfa64bc2074fb87d0ca70095a644c1ead107e1","28288370235ed02234a64753cdbf0c6ec096304a"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["d4a9a892a743a560d17851cd4ce6cb0aaa2d8712","b7dfa64bc2074fb87d0ca70095a644c1ead107e1","28288370235ed02234a64753cdbf0c6ec096304a"],"536bafb7a33a91ae703a78de9f6bd5c7e32471d9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"ac52b67f02dde8ba4b452266fdf8c0e15442c856":["536bafb7a33a91ae703a78de9f6bd5c7e32471d9"],"b7dfa64bc2074fb87d0ca70095a644c1ead107e1":[],"28288370235ed02234a64753cdbf0c6ec096304a":["ac52b67f02dde8ba4b452266fdf8c0e15442c856"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["b7dfa64bc2074fb87d0ca70095a644c1ead107e1","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}