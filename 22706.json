{"path":"solr/core/src/test/org/apache/solr/rest/schema/TestManagedSchemaFieldResource#testAddFieldWithMulipleOptions().mjava","commits":[{"id":"4d2b6e7e5c0569efc1d4cac630d4075d46c6432e","date":1383208237,"type":0,"author":"Steven Rowe","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/rest/schema/TestManagedSchemaFieldResource#testAddFieldWithMulipleOptions().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testAddFieldWithMulipleOptions() throws Exception {\n    assertQ(\"/schema/fields/newfield?indent=on&wt=xml\",\n            \"count(/response/lst[@name='field']) = 0\",\n            \"/response/lst[@name='responseHeader']/int[@name='status'] = '404'\",\n            \"/response/lst[@name='error']/int[@name='code'] = '404'\");\n\n    assertJPut(\"/schema/fields/newfield\",\n               json(\"{'type':'text_en','stored':true,'indexed':false}\"),\n               \"/responseHeader/status==0\");\n\n    File managedSchemaFile = new File(tmpConfDir, \"managed-schema\");\n    assertTrue(managedSchemaFile.exists());\n    String managedSchemaContents = FileUtils.readFileToString(managedSchemaFile, \"UTF-8\");\n    Pattern newfieldStoredTrueIndexedFalsePattern \n        = Pattern.compile( \"<field name=\\\"newfield\\\" type=\\\"text_en\\\" \"\n                         + \"(?=.*stored=\\\"true\\\")(?=.*indexed=\\\"false\\\").*/>\");\n    assertTrue(newfieldStoredTrueIndexedFalsePattern.matcher(managedSchemaContents).find());\n\n    assertQ(\"/schema/fields/newfield?indent=on&wt=xml\",\n            \"count(/response/lst[@name='field']) = 1\",\n            \"/response/lst[@name='responseHeader']/int[@name='status'] = '0'\",\n            \"/response/lst[@name='field']/str[@name='name'] = 'newfield'\",\n            \"/response/lst[@name='field']/str[@name='type'] = 'text_en'\",\n            \"/response/lst[@name='field']/bool[@name='indexed'] = 'false'\",\n            \"/response/lst[@name='field']/bool[@name='stored'] = 'true'\");\n\n    assertU(adoc(\"newfield\", \"value1 value2\", \"id\", \"1234\"));\n    assertU(commit());\n\n    assertQ(\"/schema/fields/newfield2?indent=on&wt=xml\",\n            \"count(/response/lst[@name='field']) = 0\",\n            \"/response/lst[@name='responseHeader']/int[@name='status'] = '404'\",\n            \"/response/lst[@name='error']/int[@name='code'] = '404'\");\n\n    assertJPut(\"/schema/fields/newfield2\",\n               json(\"{'type':'text_en','stored':true,'indexed':true,'multiValued':true}\"),\n               \"/responseHeader/status==0\");\n\n    managedSchemaContents = FileUtils.readFileToString(managedSchemaFile, \"UTF-8\");\n    Pattern newfield2StoredTrueIndexedTrueMultiValuedTruePattern\n        = Pattern.compile( \"<field name=\\\"newfield2\\\" type=\\\"text_en\\\" \"\n                         + \"(?=.*stored=\\\"true\\\")(?=.*indexed=\\\"true\\\")(?=multiValued=\\\"true\\\").*/>\");\n    assertTrue(newfield2StoredTrueIndexedTrueMultiValuedTruePattern.matcher(managedSchemaContents).find());\n\n    assertQ(\"/schema/fields/newfield2?indent=on&wt=xml\",\n            \"count(/response/lst[@name='field']) = 1\",\n            \"/response/lst[@name='responseHeader']/int[@name='status'] = '0'\",\n            \"/response/lst[@name='field']/str[@name='name'] = 'newfield2'\",\n            \"/response/lst[@name='field']/str[@name='type'] = 'text_en'\",\n            \"/response/lst[@name='field']/bool[@name='indexed'] = 'true'\",\n            \"/response/lst[@name='field']/bool[@name='stored'] = 'true'\",\n            \"/response/lst[@name='field']/bool[@name='multiValued'] = 'true'\");\n\n    assertU(adoc(\"newfield2\", \"value1 value2\", \"newfield2\", \"value3 value4\", \"id\", \"5678\"));\n    assertU(commit());\n\n    assertQ(\"/select?q=newfield2:value3\",\n            \"/response/lst[@name='responseHeader']/int[@name='status'] = '0'\",\n            \"/response/result[@name='response'][@numFound='1']\",\n            \"count(/response/result[@name='response']/doc) = 1\",\n            \"/response/result[@name='response']/doc/str[@name='id'][.='5678']\");\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"596c86f565ee4aebc35ff32aab5479e53622d05c","date":1383319298,"type":3,"author":"Steven Rowe","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/rest/schema/TestManagedSchemaFieldResource#testAddFieldWithMulipleOptions().mjava","pathOld":"solr/core/src/test/org/apache/solr/rest/schema/TestManagedSchemaFieldResource#testAddFieldWithMulipleOptions().mjava","sourceNew":"  @Test\n  public void testAddFieldWithMulipleOptions() throws Exception {\n    assertQ(\"/schema/fields/newfield?indent=on&wt=xml\",\n            \"count(/response/lst[@name='field']) = 0\",\n            \"/response/lst[@name='responseHeader']/int[@name='status'] = '404'\",\n            \"/response/lst[@name='error']/int[@name='code'] = '404'\");\n\n    assertJPut(\"/schema/fields/newfield\",\n               json(\"{'type':'text_en','stored':true,'indexed':false}\"),\n               \"/responseHeader/status==0\");\n\n    File managedSchemaFile = new File(tmpConfDir, \"managed-schema\");\n    assertTrue(managedSchemaFile.exists());\n    String managedSchemaContents = FileUtils.readFileToString(managedSchemaFile, \"UTF-8\");\n    Pattern newfieldStoredTrueIndexedFalsePattern \n        = Pattern.compile( \"<field name=\\\"newfield\\\" type=\\\"text_en\\\" \"\n                         + \"(?=.*stored=\\\"true\\\")(?=.*indexed=\\\"false\\\").*/>\");\n    assertTrue(newfieldStoredTrueIndexedFalsePattern.matcher(managedSchemaContents).find());\n\n    assertQ(\"/schema/fields/newfield?indent=on&wt=xml\",\n            \"count(/response/lst[@name='field']) = 1\",\n            \"/response/lst[@name='responseHeader']/int[@name='status'] = '0'\",\n            \"/response/lst[@name='field']/str[@name='name'] = 'newfield'\",\n            \"/response/lst[@name='field']/str[@name='type'] = 'text_en'\",\n            \"/response/lst[@name='field']/bool[@name='indexed'] = 'false'\",\n            \"/response/lst[@name='field']/bool[@name='stored'] = 'true'\");\n\n    assertU(adoc(\"newfield\", \"value1 value2\", \"id\", \"1234\"));\n    assertU(commit());\n\n    assertQ(\"/schema/fields/newfield2?indent=on&wt=xml\",\n            \"count(/response/lst[@name='field']) = 0\",\n            \"/response/lst[@name='responseHeader']/int[@name='status'] = '404'\",\n            \"/response/lst[@name='error']/int[@name='code'] = '404'\");\n\n    assertJPut(\"/schema/fields/newfield2\",\n               json(\"{'type':'text_en','stored':true,'indexed':true,'multiValued':true}\"),\n               \"/responseHeader/status==0\");\n\n    managedSchemaContents = FileUtils.readFileToString(managedSchemaFile, \"UTF-8\");\n    Pattern newfield2StoredTrueIndexedTrueMultiValuedTruePattern\n        = Pattern.compile( \"<field name=\\\"newfield2\\\" type=\\\"text_en\\\" \"\n                         + \"(?=.*stored=\\\"true\\\")(?=.*indexed=\\\"true\\\")(?=.*multiValued=\\\"true\\\").*/>\");\n    assertTrue(newfield2StoredTrueIndexedTrueMultiValuedTruePattern.matcher(managedSchemaContents).find());\n\n    assertQ(\"/schema/fields/newfield2?indent=on&wt=xml\",\n            \"count(/response/lst[@name='field']) = 1\",\n            \"/response/lst[@name='responseHeader']/int[@name='status'] = '0'\",\n            \"/response/lst[@name='field']/str[@name='name'] = 'newfield2'\",\n            \"/response/lst[@name='field']/str[@name='type'] = 'text_en'\",\n            \"/response/lst[@name='field']/bool[@name='indexed'] = 'true'\",\n            \"/response/lst[@name='field']/bool[@name='stored'] = 'true'\",\n            \"/response/lst[@name='field']/bool[@name='multiValued'] = 'true'\");\n\n    assertU(adoc(\"newfield2\", \"value1 value2\", \"newfield2\", \"value3 value4\", \"id\", \"5678\"));\n    assertU(commit());\n\n    assertQ(\"/select?q=newfield2:value3\",\n            \"/response/lst[@name='responseHeader']/int[@name='status'] = '0'\",\n            \"/response/result[@name='response'][@numFound='1']\",\n            \"count(/response/result[@name='response']/doc) = 1\",\n            \"/response/result[@name='response']/doc/str[@name='id'][.='5678']\");\n  }\n\n","sourceOld":"  @Test\n  public void testAddFieldWithMulipleOptions() throws Exception {\n    assertQ(\"/schema/fields/newfield?indent=on&wt=xml\",\n            \"count(/response/lst[@name='field']) = 0\",\n            \"/response/lst[@name='responseHeader']/int[@name='status'] = '404'\",\n            \"/response/lst[@name='error']/int[@name='code'] = '404'\");\n\n    assertJPut(\"/schema/fields/newfield\",\n               json(\"{'type':'text_en','stored':true,'indexed':false}\"),\n               \"/responseHeader/status==0\");\n\n    File managedSchemaFile = new File(tmpConfDir, \"managed-schema\");\n    assertTrue(managedSchemaFile.exists());\n    String managedSchemaContents = FileUtils.readFileToString(managedSchemaFile, \"UTF-8\");\n    Pattern newfieldStoredTrueIndexedFalsePattern \n        = Pattern.compile( \"<field name=\\\"newfield\\\" type=\\\"text_en\\\" \"\n                         + \"(?=.*stored=\\\"true\\\")(?=.*indexed=\\\"false\\\").*/>\");\n    assertTrue(newfieldStoredTrueIndexedFalsePattern.matcher(managedSchemaContents).find());\n\n    assertQ(\"/schema/fields/newfield?indent=on&wt=xml\",\n            \"count(/response/lst[@name='field']) = 1\",\n            \"/response/lst[@name='responseHeader']/int[@name='status'] = '0'\",\n            \"/response/lst[@name='field']/str[@name='name'] = 'newfield'\",\n            \"/response/lst[@name='field']/str[@name='type'] = 'text_en'\",\n            \"/response/lst[@name='field']/bool[@name='indexed'] = 'false'\",\n            \"/response/lst[@name='field']/bool[@name='stored'] = 'true'\");\n\n    assertU(adoc(\"newfield\", \"value1 value2\", \"id\", \"1234\"));\n    assertU(commit());\n\n    assertQ(\"/schema/fields/newfield2?indent=on&wt=xml\",\n            \"count(/response/lst[@name='field']) = 0\",\n            \"/response/lst[@name='responseHeader']/int[@name='status'] = '404'\",\n            \"/response/lst[@name='error']/int[@name='code'] = '404'\");\n\n    assertJPut(\"/schema/fields/newfield2\",\n               json(\"{'type':'text_en','stored':true,'indexed':true,'multiValued':true}\"),\n               \"/responseHeader/status==0\");\n\n    managedSchemaContents = FileUtils.readFileToString(managedSchemaFile, \"UTF-8\");\n    Pattern newfield2StoredTrueIndexedTrueMultiValuedTruePattern\n        = Pattern.compile( \"<field name=\\\"newfield2\\\" type=\\\"text_en\\\" \"\n                         + \"(?=.*stored=\\\"true\\\")(?=.*indexed=\\\"true\\\")(?=multiValued=\\\"true\\\").*/>\");\n    assertTrue(newfield2StoredTrueIndexedTrueMultiValuedTruePattern.matcher(managedSchemaContents).find());\n\n    assertQ(\"/schema/fields/newfield2?indent=on&wt=xml\",\n            \"count(/response/lst[@name='field']) = 1\",\n            \"/response/lst[@name='responseHeader']/int[@name='status'] = '0'\",\n            \"/response/lst[@name='field']/str[@name='name'] = 'newfield2'\",\n            \"/response/lst[@name='field']/str[@name='type'] = 'text_en'\",\n            \"/response/lst[@name='field']/bool[@name='indexed'] = 'true'\",\n            \"/response/lst[@name='field']/bool[@name='stored'] = 'true'\",\n            \"/response/lst[@name='field']/bool[@name='multiValued'] = 'true'\");\n\n    assertU(adoc(\"newfield2\", \"value1 value2\", \"newfield2\", \"value3 value4\", \"id\", \"5678\"));\n    assertU(commit());\n\n    assertQ(\"/select?q=newfield2:value3\",\n            \"/response/lst[@name='responseHeader']/int[@name='status'] = '0'\",\n            \"/response/result[@name='response'][@numFound='1']\",\n            \"count(/response/result[@name='response']/doc) = 1\",\n            \"/response/result[@name='response']/doc/str[@name='id'][.='5678']\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f494bc636a1302995e4930fdccd371eeda452f87","date":1457370876,"type":4,"author":"Noble Paul","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/core/src/test/org/apache/solr/rest/schema/TestManagedSchemaFieldResource#testAddFieldWithMulipleOptions().mjava","sourceNew":null,"sourceOld":"  @Test\n  public void testAddFieldWithMulipleOptions() throws Exception {\n    assertQ(\"/schema/fields/newfield?indent=on&wt=xml\",\n            \"count(/response/lst[@name='field']) = 0\",\n            \"/response/lst[@name='responseHeader']/int[@name='status'] = '404'\",\n            \"/response/lst[@name='error']/int[@name='code'] = '404'\");\n\n    assertJPut(\"/schema/fields/newfield\",\n               json(\"{'type':'text_en','stored':true,'indexed':false}\"),\n               \"/responseHeader/status==0\");\n\n    File managedSchemaFile = new File(tmpConfDir, \"managed-schema\");\n    assertTrue(managedSchemaFile.exists());\n    String managedSchemaContents = FileUtils.readFileToString(managedSchemaFile, \"UTF-8\");\n    Pattern newfieldStoredTrueIndexedFalsePattern \n        = Pattern.compile( \"<field name=\\\"newfield\\\" type=\\\"text_en\\\" \"\n                         + \"(?=.*stored=\\\"true\\\")(?=.*indexed=\\\"false\\\").*/>\");\n    assertTrue(newfieldStoredTrueIndexedFalsePattern.matcher(managedSchemaContents).find());\n\n    assertQ(\"/schema/fields/newfield?indent=on&wt=xml\",\n            \"count(/response/lst[@name='field']) = 1\",\n            \"/response/lst[@name='responseHeader']/int[@name='status'] = '0'\",\n            \"/response/lst[@name='field']/str[@name='name'] = 'newfield'\",\n            \"/response/lst[@name='field']/str[@name='type'] = 'text_en'\",\n            \"/response/lst[@name='field']/bool[@name='indexed'] = 'false'\",\n            \"/response/lst[@name='field']/bool[@name='stored'] = 'true'\");\n\n    assertU(adoc(\"newfield\", \"value1 value2\", \"id\", \"1234\"));\n    assertU(commit());\n\n    assertQ(\"/schema/fields/newfield2?indent=on&wt=xml\",\n            \"count(/response/lst[@name='field']) = 0\",\n            \"/response/lst[@name='responseHeader']/int[@name='status'] = '404'\",\n            \"/response/lst[@name='error']/int[@name='code'] = '404'\");\n\n    assertJPut(\"/schema/fields/newfield2\",\n               json(\"{'type':'text_en','stored':true,'indexed':true,'multiValued':true}\"),\n               \"/responseHeader/status==0\");\n\n    managedSchemaContents = FileUtils.readFileToString(managedSchemaFile, \"UTF-8\");\n    Pattern newfield2StoredTrueIndexedTrueMultiValuedTruePattern\n        = Pattern.compile( \"<field name=\\\"newfield2\\\" type=\\\"text_en\\\" \"\n                         + \"(?=.*stored=\\\"true\\\")(?=.*indexed=\\\"true\\\")(?=.*multiValued=\\\"true\\\").*/>\");\n    assertTrue(newfield2StoredTrueIndexedTrueMultiValuedTruePattern.matcher(managedSchemaContents).find());\n\n    assertQ(\"/schema/fields/newfield2?indent=on&wt=xml\",\n            \"count(/response/lst[@name='field']) = 1\",\n            \"/response/lst[@name='responseHeader']/int[@name='status'] = '0'\",\n            \"/response/lst[@name='field']/str[@name='name'] = 'newfield2'\",\n            \"/response/lst[@name='field']/str[@name='type'] = 'text_en'\",\n            \"/response/lst[@name='field']/bool[@name='indexed'] = 'true'\",\n            \"/response/lst[@name='field']/bool[@name='stored'] = 'true'\",\n            \"/response/lst[@name='field']/bool[@name='multiValued'] = 'true'\");\n\n    assertU(adoc(\"newfield2\", \"value1 value2\", \"newfield2\", \"value3 value4\", \"id\", \"5678\"));\n    assertU(commit());\n\n    assertQ(\"/select?q=newfield2:value3\",\n            \"/response/lst[@name='responseHeader']/int[@name='status'] = '0'\",\n            \"/response/result[@name='response'][@numFound='1']\",\n            \"count(/response/result[@name='response']/doc) = 1\",\n            \"/response/result[@name='response']/doc/str[@name='id'][.='5678']\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"4d2b6e7e5c0569efc1d4cac630d4075d46c6432e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"596c86f565ee4aebc35ff32aab5479e53622d05c":["4d2b6e7e5c0569efc1d4cac630d4075d46c6432e"],"f494bc636a1302995e4930fdccd371eeda452f87":["596c86f565ee4aebc35ff32aab5479e53622d05c"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["f494bc636a1302995e4930fdccd371eeda452f87"]},"commit2Childs":{"4d2b6e7e5c0569efc1d4cac630d4075d46c6432e":["596c86f565ee4aebc35ff32aab5479e53622d05c"],"596c86f565ee4aebc35ff32aab5479e53622d05c":["f494bc636a1302995e4930fdccd371eeda452f87"],"f494bc636a1302995e4930fdccd371eeda452f87":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["4d2b6e7e5c0569efc1d4cac630d4075d46c6432e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}