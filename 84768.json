{"path":"lucene/core/src/java/org/apache/lucene/index/PendingDeletes#isFullyDeleted(IOSupplier[CodecReader]).mjava","commits":[{"id":"15e716649e2bd79a98b5e68c464154ea4c44677a","date":1523975212,"type":1,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/PendingDeletes#isFullyDeleted(IOSupplier[CodecReader]).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/PendingDeletes#isFullyDeleted().mjava","sourceNew":"  /**\n   * Returns <code>true</code> iff the segment represented by this {@link PendingDeletes} is fully deleted\n   */\n  boolean isFullyDeleted(IOSupplier<CodecReader> readerIOSupplier) throws IOException {\n    return info.getDelCount() + numPendingDeletes() == info.info.maxDoc();\n  }\n\n","sourceOld":"  /**\n   * Returns <code>true</code> iff the segment represented by this {@link PendingDeletes} is fully deleted\n   */\n  boolean isFullyDeleted() {\n    return info.getDelCount() + numPendingDeletes() == info.info.maxDoc();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8f2203cb8ae87188877cfbf6ad170c5738a0aad5","date":1528117512,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/PendingDeletes#isFullyDeleted(IOSupplier[CodecReader]).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/PendingDeletes#isFullyDeleted(IOSupplier[CodecReader]).mjava","sourceNew":"  /**\n   * Returns <code>true</code> iff the segment represented by this {@link PendingDeletes} is fully deleted\n   */\n  boolean isFullyDeleted(IOSupplier<CodecReader> readerIOSupplier) throws IOException {\n    return getDelCount() == info.info.maxDoc();\n  }\n\n","sourceOld":"  /**\n   * Returns <code>true</code> iff the segment represented by this {@link PendingDeletes} is fully deleted\n   */\n  boolean isFullyDeleted(IOSupplier<CodecReader> readerIOSupplier) throws IOException {\n    return info.getDelCount() + numPendingDeletes() == info.info.maxDoc();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f592209545c71895260367152601e9200399776d","date":1528238935,"type":3,"author":"Michael Braun","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/PendingDeletes#isFullyDeleted(IOSupplier[CodecReader]).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/PendingDeletes#isFullyDeleted(IOSupplier[CodecReader]).mjava","sourceNew":"  /**\n   * Returns <code>true</code> iff the segment represented by this {@link PendingDeletes} is fully deleted\n   */\n  boolean isFullyDeleted(IOSupplier<CodecReader> readerIOSupplier) throws IOException {\n    return getDelCount() == info.info.maxDoc();\n  }\n\n","sourceOld":"  /**\n   * Returns <code>true</code> iff the segment represented by this {@link PendingDeletes} is fully deleted\n   */\n  boolean isFullyDeleted(IOSupplier<CodecReader> readerIOSupplier) throws IOException {\n    return info.getDelCount() + numPendingDeletes() == info.info.maxDoc();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b70042a8a492f7054d480ccdd2be9796510d4327","date":1528386658,"type":3,"author":"Alessandro Benedetti","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/PendingDeletes#isFullyDeleted(IOSupplier[CodecReader]).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/PendingDeletes#isFullyDeleted(IOSupplier[CodecReader]).mjava","sourceNew":"  /**\n   * Returns <code>true</code> iff the segment represented by this {@link PendingDeletes} is fully deleted\n   */\n  boolean isFullyDeleted(IOSupplier<CodecReader> readerIOSupplier) throws IOException {\n    return getDelCount() == info.info.maxDoc();\n  }\n\n","sourceOld":"  /**\n   * Returns <code>true</code> iff the segment represented by this {@link PendingDeletes} is fully deleted\n   */\n  boolean isFullyDeleted(IOSupplier<CodecReader> readerIOSupplier) throws IOException {\n    return info.getDelCount() + numPendingDeletes() == info.info.maxDoc();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"b70042a8a492f7054d480ccdd2be9796510d4327":["15e716649e2bd79a98b5e68c464154ea4c44677a","8f2203cb8ae87188877cfbf6ad170c5738a0aad5"],"15e716649e2bd79a98b5e68c464154ea4c44677a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"8f2203cb8ae87188877cfbf6ad170c5738a0aad5":["15e716649e2bd79a98b5e68c464154ea4c44677a"],"f592209545c71895260367152601e9200399776d":["15e716649e2bd79a98b5e68c464154ea4c44677a","8f2203cb8ae87188877cfbf6ad170c5738a0aad5"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["8f2203cb8ae87188877cfbf6ad170c5738a0aad5"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["15e716649e2bd79a98b5e68c464154ea4c44677a"],"b70042a8a492f7054d480ccdd2be9796510d4327":[],"15e716649e2bd79a98b5e68c464154ea4c44677a":["b70042a8a492f7054d480ccdd2be9796510d4327","8f2203cb8ae87188877cfbf6ad170c5738a0aad5","f592209545c71895260367152601e9200399776d"],"8f2203cb8ae87188877cfbf6ad170c5738a0aad5":["b70042a8a492f7054d480ccdd2be9796510d4327","f592209545c71895260367152601e9200399776d","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"f592209545c71895260367152601e9200399776d":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["b70042a8a492f7054d480ccdd2be9796510d4327","f592209545c71895260367152601e9200399776d","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}