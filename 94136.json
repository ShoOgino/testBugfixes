{"path":"lucene/queryparser/src/test/org/apache/lucene/queryparser/xml/TestCoreParser#testSpanTermXML().mjava","commits":[{"id":"f054843acc706da8f2f007c842699d62e4af736c","date":1450870707,"type":1,"author":"Christine Poerschke","isMerge":false,"pathNew":"lucene/queryparser/src/test/org/apache/lucene/queryparser/xml/TestCoreParser#testSpanTermXML().mjava","pathOld":"lucene/queryparser/src/test/org/apache/lucene/queryparser/xml/TestParser#testSpanTermXML().mjava","sourceNew":"  public void testSpanTermXML() throws Exception {\n    Query q = parse(\"SpanQuery.xml\");\n    dumpResults(\"Span Query\", q, 5);\n  }\n\n","sourceOld":"  public void testSpanTermXML() throws Exception {\n    Query q = parse(\"SpanQuery.xml\");\n    dumpResults(\"Span Query\", q, 5);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3a9d042920f7f9c50391ae16b88f30344f9008d2","date":1485787054,"type":3,"author":"Christine Poerschke","isMerge":false,"pathNew":"lucene/queryparser/src/test/org/apache/lucene/queryparser/xml/TestCoreParser#testSpanTermXML().mjava","pathOld":"lucene/queryparser/src/test/org/apache/lucene/queryparser/xml/TestCoreParser#testSpanTermXML().mjava","sourceNew":"  public void testSpanTermXML() throws Exception {\n    Query q = parse(\"SpanQuery.xml\");\n    dumpResults(\"Span Query\", q, 5);\n    SpanQuery sq = parseAsSpan(\"SpanQuery.xml\");\n    dumpResults(\"Span Query\", sq, 5);\n    assertEquals(q, sq);\n  }\n\n","sourceOld":"  public void testSpanTermXML() throws Exception {\n    Query q = parse(\"SpanQuery.xml\");\n    dumpResults(\"Span Query\", q, 5);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7c3523a0ab04c3002eee3896c75ea5f10f388bcc","date":1485968422,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"lucene/queryparser/src/test/org/apache/lucene/queryparser/xml/TestCoreParser#testSpanTermXML().mjava","pathOld":"lucene/queryparser/src/test/org/apache/lucene/queryparser/xml/TestCoreParser#testSpanTermXML().mjava","sourceNew":"  public void testSpanTermXML() throws Exception {\n    Query q = parse(\"SpanQuery.xml\");\n    dumpResults(\"Span Query\", q, 5);\n    SpanQuery sq = parseAsSpan(\"SpanQuery.xml\");\n    dumpResults(\"Span Query\", sq, 5);\n    assertEquals(q, sq);\n  }\n\n","sourceOld":"  public void testSpanTermXML() throws Exception {\n    Query q = parse(\"SpanQuery.xml\");\n    dumpResults(\"Span Query\", q, 5);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"f054843acc706da8f2f007c842699d62e4af736c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"3a9d042920f7f9c50391ae16b88f30344f9008d2":["f054843acc706da8f2f007c842699d62e4af736c"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"7c3523a0ab04c3002eee3896c75ea5f10f388bcc":["f054843acc706da8f2f007c842699d62e4af736c","3a9d042920f7f9c50391ae16b88f30344f9008d2"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3a9d042920f7f9c50391ae16b88f30344f9008d2"]},"commit2Childs":{"f054843acc706da8f2f007c842699d62e4af736c":["3a9d042920f7f9c50391ae16b88f30344f9008d2","7c3523a0ab04c3002eee3896c75ea5f10f388bcc"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["f054843acc706da8f2f007c842699d62e4af736c"],"3a9d042920f7f9c50391ae16b88f30344f9008d2":["7c3523a0ab04c3002eee3896c75ea5f10f388bcc","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"7c3523a0ab04c3002eee3896c75ea5f10f388bcc":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["7c3523a0ab04c3002eee3896c75ea5f10f388bcc","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}