{"path":"lucene/luke/src/java/org/apache/lucene/luke/models/documents/TermVectorsAdapter#getTermVector(int,String).mjava","commits":[{"id":"f554f2d9b5456248ab6467b9d4f6015686797a6c","date":1554891357,"type":0,"author":"Tomoko Uchida","isMerge":false,"pathNew":"lucene/luke/src/java/org/apache/lucene/luke/models/documents/TermVectorsAdapter#getTermVector(int,String).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Returns the term vectors for the specified field in the specified document.\n   * If no term vector is available for the field, empty list is returned.\n   *\n   * @param docid - document id\n   * @param field - field name\n   * @return list of term vector elements\n   * @throws IOException - if there is a low level IO error.\n   */\n  List<TermVectorEntry> getTermVector(int docid, String field) throws IOException {\n    Terms termVector = reader.getTermVector(docid, field);\n    if (termVector == null) {\n      // no term vector available\n      log.warn(\"No term vector indexed for doc: #{} and field: {}\", docid, field);\n      return Collections.emptyList();\n    }\n\n    List<TermVectorEntry> res = new ArrayList<>();\n    TermsEnum te = termVector.iterator();\n    while (te.next() != null) {\n      res.add(TermVectorEntry.of(te));\n    }\n    return res;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"f554f2d9b5456248ab6467b9d4f6015686797a6c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["f554f2d9b5456248ab6467b9d4f6015686797a6c"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["f554f2d9b5456248ab6467b9d4f6015686797a6c"],"f554f2d9b5456248ab6467b9d4f6015686797a6c":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}