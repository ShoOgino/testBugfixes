{"path":"lucene/facet/src/java/org/apache/lucene/facet/search/params/FacetSearchParams#addFacetRequest(FacetRequest).mjava","commits":[{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/search/params/FacetSearchParams#addFacetRequest(FacetRequest).mjava","pathOld":"modules/facet/src/java/org/apache/lucene/facet/search/params/FacetSearchParams#addFacetRequest(FacetRequest).mjava","sourceNew":"  /**\n   * Add a facet request to apply for this faceted search.\n   * This method must be called at least once for faceted search \n   * to find any faceted result. <br>\n   * NOTE: The order of addition implies the order of the {@link FacetResult}s\n   * @param facetRequest facet request to be added.\n   */\n  public void addFacetRequest(FacetRequest facetRequest) {\n    if (facetRequest == null) {\n      throw new IllegalArgumentException(\"Provided facetRequest must not be null\");\n    }\n    facetRequests.add(facetRequest);\n  }\n\n","sourceOld":"  /**\n   * Add a facet request to apply for this faceted search.\n   * This method must be called at least once for faceted search \n   * to find any faceted result. <br>\n   * NOTE: The order of addition implies the order of the {@link FacetResult}s\n   * @param facetRequest facet request to be added.\n   */\n  public void addFacetRequest(FacetRequest facetRequest) {\n    if (facetRequest == null) {\n      throw new IllegalArgumentException(\"Provided facetRequest must not be null\");\n    }\n    facetRequests.add(facetRequest);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d4c6c7f3cda7a0595cabd16e5e9107ca29852708","date":1355402234,"type":4,"author":"Shai Erera","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/search/params/FacetSearchParams#addFacetRequest(FacetRequest).mjava","sourceNew":null,"sourceOld":"  /**\n   * Add a facet request to apply for this faceted search.\n   * This method must be called at least once for faceted search \n   * to find any faceted result. <br>\n   * NOTE: The order of addition implies the order of the {@link FacetResult}s\n   * @param facetRequest facet request to be added.\n   */\n  public void addFacetRequest(FacetRequest facetRequest) {\n    if (facetRequest == null) {\n      throw new IllegalArgumentException(\"Provided facetRequest must not be null\");\n    }\n    facetRequests.add(facetRequest);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d3fcb70cf561547c7bb1506e0cf32ca7b1287064","date":1357616416,"type":4,"author":"Robert Muir","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/search/params/FacetSearchParams#addFacetRequest(FacetRequest).mjava","sourceNew":null,"sourceOld":"  /**\n   * Add a facet request to apply for this faceted search.\n   * This method must be called at least once for faceted search \n   * to find any faceted result. <br>\n   * NOTE: The order of addition implies the order of the {@link FacetResult}s\n   * @param facetRequest facet request to be added.\n   */\n  public void addFacetRequest(FacetRequest facetRequest) {\n    if (facetRequest == null) {\n      throw new IllegalArgumentException(\"Provided facetRequest must not be null\");\n    }\n    facetRequests.add(facetRequest);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"d3fcb70cf561547c7bb1506e0cf32ca7b1287064":["b89678825b68eccaf09e6ab71675fc0b0af1e099","d4c6c7f3cda7a0595cabd16e5e9107ca29852708"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"d4c6c7f3cda7a0595cabd16e5e9107ca29852708":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["d4c6c7f3cda7a0595cabd16e5e9107ca29852708"]},"commit2Childs":{"d3fcb70cf561547c7bb1506e0cf32ca7b1287064":[],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","d4c6c7f3cda7a0595cabd16e5e9107ca29852708"],"d4c6c7f3cda7a0595cabd16e5e9107ca29852708":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}