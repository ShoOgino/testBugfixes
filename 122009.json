{"path":"lucene/queries/src/java/org/apache/lucene/queries/function/ValueSource.WrappedDoubleValuesSource#explain(LeafReaderContext,int,Explanation).mjava","commits":[{"id":"41ea72350b903b90cb4fda2a5adbce31aa00c074","date":1498575219,"type":0,"author":"Alan Woodward","isMerge":false,"pathNew":"lucene/queries/src/java/org/apache/lucene/queries/function/ValueSource.WrappedDoubleValuesSource#explain(LeafReaderContext,int,Explanation).mjava","pathOld":"/dev/null","sourceNew":"    @Override\n    public Explanation explain(LeafReaderContext ctx, int docId, Explanation scoreExplanation) throws IOException {\n      Map context = new HashMap<>();\n      FakeScorer scorer = new FakeScorer();\n      scorer.score = scoreExplanation.getValue();\n      context.put(\"scorer\", scorer);\n      FunctionValues fv = in.getValues(context, ctx);\n      return fv.explain(docId);\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"98f11c416d30e556e0004a9a84960702d12d35b1","date":1498628359,"type":0,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"lucene/queries/src/java/org/apache/lucene/queries/function/ValueSource.WrappedDoubleValuesSource#explain(LeafReaderContext,int,Explanation).mjava","pathOld":"/dev/null","sourceNew":"    @Override\n    public Explanation explain(LeafReaderContext ctx, int docId, Explanation scoreExplanation) throws IOException {\n      Map context = new HashMap<>();\n      FakeScorer scorer = new FakeScorer();\n      scorer.score = scoreExplanation.getValue();\n      context.put(\"scorer\", scorer);\n      FunctionValues fv = in.getValues(context, ctx);\n      return fv.explain(docId);\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"28288370235ed02234a64753cdbf0c6ec096304a","date":1498726817,"type":0,"author":"Karl Wright","isMerge":true,"pathNew":"lucene/queries/src/java/org/apache/lucene/queries/function/ValueSource.WrappedDoubleValuesSource#explain(LeafReaderContext,int,Explanation).mjava","pathOld":"/dev/null","sourceNew":"    @Override\n    public Explanation explain(LeafReaderContext ctx, int docId, Explanation scoreExplanation) throws IOException {\n      Map context = new HashMap<>();\n      FakeScorer scorer = new FakeScorer();\n      scorer.score = scoreExplanation.getValue();\n      context.put(\"scorer\", scorer);\n      FunctionValues fv = in.getValues(context, ctx);\n      return fv.explain(docId);\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a38488a55cc52553c9792da5044dd31b15128cd8","date":1510755769,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"lucene/queries/src/java/org/apache/lucene/queries/function/ValueSource.WrappedDoubleValuesSource#explain(LeafReaderContext,int,Explanation).mjava","pathOld":"lucene/queries/src/java/org/apache/lucene/queries/function/ValueSource.WrappedDoubleValuesSource#explain(LeafReaderContext,int,Explanation).mjava","sourceNew":"    @Override\n    public Explanation explain(LeafReaderContext ctx, int docId, Explanation scoreExplanation) throws IOException {\n      Map context = new HashMap<>();\n      FakeScorer scorer = new FakeScorer();\n      scorer.score = scoreExplanation.getValue();\n      context.put(\"scorer\", scorer);\n      context.put(\"searcher\", searcher);\n      FunctionValues fv = in.getValues(context, ctx);\n      return fv.explain(docId);\n    }\n\n","sourceOld":"    @Override\n    public Explanation explain(LeafReaderContext ctx, int docId, Explanation scoreExplanation) throws IOException {\n      Map context = new HashMap<>();\n      FakeScorer scorer = new FakeScorer();\n      scorer.score = scoreExplanation.getValue();\n      context.put(\"scorer\", scorer);\n      FunctionValues fv = in.getValues(context, ctx);\n      return fv.explain(docId);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b8e3fe8a32614e52f7d9fd491b9faab852fbb4bf","date":1514891219,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"lucene/queries/src/java/org/apache/lucene/queries/function/ValueSource.WrappedDoubleValuesSource#explain(LeafReaderContext,int,Explanation).mjava","pathOld":"lucene/queries/src/java/org/apache/lucene/queries/function/ValueSource.WrappedDoubleValuesSource#explain(LeafReaderContext,int,Explanation).mjava","sourceNew":"    @Override\n    public Explanation explain(LeafReaderContext ctx, int docId, Explanation scoreExplanation) throws IOException {\n      Map context = new HashMap<>();\n      FakeScorer scorer = new FakeScorer();\n      scorer.score = scoreExplanation.getValue().floatValue();\n      context.put(\"scorer\", scorer);\n      context.put(\"searcher\", searcher);\n      FunctionValues fv = in.getValues(context, ctx);\n      return fv.explain(docId);\n    }\n\n","sourceOld":"    @Override\n    public Explanation explain(LeafReaderContext ctx, int docId, Explanation scoreExplanation) throws IOException {\n      Map context = new HashMap<>();\n      FakeScorer scorer = new FakeScorer();\n      scorer.score = scoreExplanation.getValue();\n      context.put(\"scorer\", scorer);\n      context.put(\"searcher\", searcher);\n      FunctionValues fv = in.getValues(context, ctx);\n      return fv.explain(docId);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6dbd758f2776b0129f6b3641b6490ddc68d7b0f3","date":1536316907,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"lucene/queries/src/java/org/apache/lucene/queries/function/ValueSource.WrappedDoubleValuesSource#explain(LeafReaderContext,int,Explanation).mjava","pathOld":"lucene/queries/src/java/org/apache/lucene/queries/function/ValueSource.WrappedDoubleValuesSource#explain(LeafReaderContext,int,Explanation).mjava","sourceNew":"    @Override\n    public Explanation explain(LeafReaderContext ctx, int docId, Explanation scoreExplanation) throws IOException {\n      Map context = new HashMap<>();\n      ScoreAndDoc scorer = new ScoreAndDoc();\n      scorer.score = scoreExplanation.getValue().floatValue();\n      context.put(\"scorer\", scorer);\n      context.put(\"searcher\", searcher);\n      FunctionValues fv = in.getValues(context, ctx);\n      return fv.explain(docId);\n    }\n\n","sourceOld":"    @Override\n    public Explanation explain(LeafReaderContext ctx, int docId, Explanation scoreExplanation) throws IOException {\n      Map context = new HashMap<>();\n      FakeScorer scorer = new FakeScorer();\n      scorer.score = scoreExplanation.getValue().floatValue();\n      context.put(\"scorer\", scorer);\n      context.put(\"searcher\", searcher);\n      FunctionValues fv = in.getValues(context, ctx);\n      return fv.explain(docId);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f95c0e33e58652b2a4d8560c8297dbe86ff5b1f2","date":1591961131,"type":3,"author":"Michael Sokolov","isMerge":false,"pathNew":"lucene/queries/src/java/org/apache/lucene/queries/function/ValueSource.WrappedDoubleValuesSource#explain(LeafReaderContext,int,Explanation).mjava","pathOld":"lucene/queries/src/java/org/apache/lucene/queries/function/ValueSource.WrappedDoubleValuesSource#explain(LeafReaderContext,int,Explanation).mjava","sourceNew":"    @Override\n    public Explanation explain(LeafReaderContext ctx, int docId, Explanation scoreExplanation) throws IOException {\n      Map<Object, Object> context = new HashMap<>();\n      ScoreAndDoc scorer = new ScoreAndDoc();\n      scorer.score = scoreExplanation.getValue().floatValue();\n      context.put(\"scorer\", scorer);\n      context.put(\"searcher\", searcher);\n      FunctionValues fv = in.getValues(context, ctx);\n      return fv.explain(docId);\n    }\n\n","sourceOld":"    @Override\n    public Explanation explain(LeafReaderContext ctx, int docId, Explanation scoreExplanation) throws IOException {\n      Map context = new HashMap<>();\n      ScoreAndDoc scorer = new ScoreAndDoc();\n      scorer.score = scoreExplanation.getValue().floatValue();\n      context.put(\"scorer\", scorer);\n      context.put(\"searcher\", searcher);\n      FunctionValues fv = in.getValues(context, ctx);\n      return fv.explain(docId);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"41ea72350b903b90cb4fda2a5adbce31aa00c074":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"b8e3fe8a32614e52f7d9fd491b9faab852fbb4bf":["a38488a55cc52553c9792da5044dd31b15128cd8"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"6dbd758f2776b0129f6b3641b6490ddc68d7b0f3":["b8e3fe8a32614e52f7d9fd491b9faab852fbb4bf"],"f95c0e33e58652b2a4d8560c8297dbe86ff5b1f2":["6dbd758f2776b0129f6b3641b6490ddc68d7b0f3"],"a38488a55cc52553c9792da5044dd31b15128cd8":["28288370235ed02234a64753cdbf0c6ec096304a"],"28288370235ed02234a64753cdbf0c6ec096304a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","41ea72350b903b90cb4fda2a5adbce31aa00c074"],"98f11c416d30e556e0004a9a84960702d12d35b1":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","41ea72350b903b90cb4fda2a5adbce31aa00c074"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["f95c0e33e58652b2a4d8560c8297dbe86ff5b1f2"]},"commit2Childs":{"41ea72350b903b90cb4fda2a5adbce31aa00c074":["28288370235ed02234a64753cdbf0c6ec096304a","98f11c416d30e556e0004a9a84960702d12d35b1"],"b8e3fe8a32614e52f7d9fd491b9faab852fbb4bf":["6dbd758f2776b0129f6b3641b6490ddc68d7b0f3"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["41ea72350b903b90cb4fda2a5adbce31aa00c074","28288370235ed02234a64753cdbf0c6ec096304a","98f11c416d30e556e0004a9a84960702d12d35b1"],"6dbd758f2776b0129f6b3641b6490ddc68d7b0f3":["f95c0e33e58652b2a4d8560c8297dbe86ff5b1f2"],"f95c0e33e58652b2a4d8560c8297dbe86ff5b1f2":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a38488a55cc52553c9792da5044dd31b15128cd8":["b8e3fe8a32614e52f7d9fd491b9faab852fbb4bf"],"28288370235ed02234a64753cdbf0c6ec096304a":["a38488a55cc52553c9792da5044dd31b15128cd8"],"98f11c416d30e556e0004a9a84960702d12d35b1":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["98f11c416d30e556e0004a9a84960702d12d35b1","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}