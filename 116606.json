{"path":"solr/core/src/java/org/apache/solr/util/SolrPluginUtils#stripUnbalancedQuotes(CharSequence).mjava","commits":[{"id":"c903c3d15906a3da96b8c0c2fb704491005fdbdb","date":1453508227,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/util/SolrPluginUtils#stripUnbalancedQuotes(CharSequence).mjava","pathOld":"solr/src/java/org/apache/solr/util/SolrPluginUtils#stripUnbalancedQuotes(CharSequence).mjava","sourceNew":"  /**\n   * Returns it's input if there is an even (ie: balanced) number of\n   * '\"' characters -- otherwise returns a String in which all '\"'\n   * characters are striped out.\n   */\n  public static CharSequence stripUnbalancedQuotes(CharSequence s) {\n    int count = 0;\n    for (int i = 0; i < s.length(); i++) {\n      if (s.charAt(i) == '\\\"') { count++; }\n    }\n    if (0 == (count & 1)) {\n      return s;\n    }\n    return s.toString().replace(\"\\\"\",\"\");\n  }\n\n","sourceOld":"  /**\n   * Returns it's input if there is an even (ie: balanced) number of\n   * '\"' characters -- otherwise returns a String in which all '\"'\n   * characters are striped out.\n   */\n  public static CharSequence stripUnbalancedQuotes(CharSequence s) {\n    int count = 0;\n    for (int i = 0; i < s.length(); i++) {\n      if (s.charAt(i) == '\\\"') { count++; }\n    }\n    if (0 == (count & 1)) {\n      return s;\n    }\n    return s.toString().replace(\"\\\"\",\"\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a258fbb26824fd104ed795e5d9033d2d040049ee","date":1453508252,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/util/SolrPluginUtils#stripUnbalancedQuotes(CharSequence).mjava","pathOld":"solr/src/java/org/apache/solr/util/SolrPluginUtils#stripUnbalancedQuotes(CharSequence).mjava","sourceNew":"  /**\n   * Returns it's input if there is an even (ie: balanced) number of\n   * '\"' characters -- otherwise returns a String in which all '\"'\n   * characters are striped out.\n   */\n  public static CharSequence stripUnbalancedQuotes(CharSequence s) {\n    int count = 0;\n    for (int i = 0; i < s.length(); i++) {\n      if (s.charAt(i) == '\\\"') { count++; }\n    }\n    if (0 == (count & 1)) {\n      return s;\n    }\n    return s.toString().replace(\"\\\"\",\"\");\n  }\n\n","sourceOld":"  /**\n   * Returns it's input if there is an even (ie: balanced) number of\n   * '\"' characters -- otherwise returns a String in which all '\"'\n   * characters are striped out.\n   */\n  public static CharSequence stripUnbalancedQuotes(CharSequence s) {\n    int count = 0;\n    for (int i = 0; i < s.length(); i++) {\n      if (s.charAt(i) == '\\\"') { count++; }\n    }\n    if (0 == (count & 1)) {\n      return s;\n    }\n    return s.toString().replace(\"\\\"\",\"\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/util/SolrPluginUtils#stripUnbalancedQuotes(CharSequence).mjava","pathOld":"solr/src/java/org/apache/solr/util/SolrPluginUtils#stripUnbalancedQuotes(CharSequence).mjava","sourceNew":"  /**\n   * Returns it's input if there is an even (ie: balanced) number of\n   * '\"' characters -- otherwise returns a String in which all '\"'\n   * characters are striped out.\n   */\n  public static CharSequence stripUnbalancedQuotes(CharSequence s) {\n    int count = 0;\n    for (int i = 0; i < s.length(); i++) {\n      if (s.charAt(i) == '\\\"') { count++; }\n    }\n    if (0 == (count & 1)) {\n      return s;\n    }\n    return s.toString().replace(\"\\\"\",\"\");\n  }\n\n","sourceOld":"  /**\n   * Returns it's input if there is an even (ie: balanced) number of\n   * '\"' characters -- otherwise returns a String in which all '\"'\n   * characters are striped out.\n   */\n  public static CharSequence stripUnbalancedQuotes(CharSequence s) {\n    int count = 0;\n    for (int i = 0; i < s.length(); i++) {\n      if (s.charAt(i) == '\\\"') { count++; }\n    }\n    if (0 == (count & 1)) {\n      return s;\n    }\n    return s.toString().replace(\"\\\"\",\"\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8aa2bb13f56a3ad540fd2dc5e882e1ed4bf799d1","date":1419400138,"type":3,"author":"Steven Rowe","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/util/SolrPluginUtils#stripUnbalancedQuotes(CharSequence).mjava","pathOld":"solr/core/src/java/org/apache/solr/util/SolrPluginUtils#stripUnbalancedQuotes(CharSequence).mjava","sourceNew":"  /**\n   * Returns its input if there is an even (ie: balanced) number of\n   * '\"' characters -- otherwise returns a String in which all '\"'\n   * characters are striped out.\n   */\n  public static CharSequence stripUnbalancedQuotes(CharSequence s) {\n    int count = 0;\n    for (int i = 0; i < s.length(); i++) {\n      if (s.charAt(i) == '\\\"') { count++; }\n    }\n    if (0 == (count & 1)) {\n      return s;\n    }\n    return s.toString().replace(\"\\\"\",\"\");\n  }\n\n","sourceOld":"  /**\n   * Returns it's input if there is an even (ie: balanced) number of\n   * '\"' characters -- otherwise returns a String in which all '\"'\n   * characters are striped out.\n   */\n  public static CharSequence stripUnbalancedQuotes(CharSequence s) {\n    int count = 0;\n    for (int i = 0; i < s.length(); i++) {\n      if (s.charAt(i) == '\\\"') { count++; }\n    }\n    if (0 == (count & 1)) {\n      return s;\n    }\n    return s.toString().replace(\"\\\"\",\"\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"8aa2bb13f56a3ad540fd2dc5e882e1ed4bf799d1":["c26f00b574427b55127e869b935845554afde1fa"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"c26f00b574427b55127e869b935845554afde1fa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","c903c3d15906a3da96b8c0c2fb704491005fdbdb"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a258fbb26824fd104ed795e5d9033d2d040049ee":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["8aa2bb13f56a3ad540fd2dc5e882e1ed4bf799d1"]},"commit2Childs":{"8aa2bb13f56a3ad540fd2dc5e882e1ed4bf799d1":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["c26f00b574427b55127e869b935845554afde1fa"],"c26f00b574427b55127e869b935845554afde1fa":["8aa2bb13f56a3ad540fd2dc5e882e1ed4bf799d1"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c903c3d15906a3da96b8c0c2fb704491005fdbdb","c26f00b574427b55127e869b935845554afde1fa","a258fbb26824fd104ed795e5d9033d2d040049ee"],"a258fbb26824fd104ed795e5d9033d2d040049ee":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a258fbb26824fd104ed795e5d9033d2d040049ee","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}