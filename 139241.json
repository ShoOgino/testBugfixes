{"path":"src/java/org/apache/lucene/index/ByteSliceReader#nextSlice().mjava","commits":[{"id":"5a0af3a442be522899177e5e11384a45a6784a3f","date":1205348952,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/ByteSliceReader#nextSlice().mjava","pathOld":"/dev/null","sourceNew":"  public void nextSlice() {\n\n    // Skip to our next slice\n    final int nextIndex = ((buffer[limit]&0xff)<<24) + ((buffer[1+limit]&0xff)<<16) + ((buffer[2+limit]&0xff)<<8) + (buffer[3+limit]&0xff);\n\n    level = ByteBlockPool.nextLevelArray[level];\n    final int newSize = ByteBlockPool.levelSizeArray[level];\n\n    bufferUpto = nextIndex / DocumentsWriter.BYTE_BLOCK_SIZE;\n    bufferOffset = bufferUpto * DocumentsWriter.BYTE_BLOCK_SIZE;\n\n    buffer = pool.buffers[bufferUpto];\n    upto = nextIndex & DocumentsWriter.BYTE_BLOCK_MASK;\n\n    if (nextIndex + newSize >= endIndex) {\n      // We are advancing to the final slice\n      assert endIndex - nextIndex > 0;\n      limit = endIndex - bufferOffset;\n    } else {\n      // This is not the final slice (subtract 4 for the\n      // forwarding address at the end of this new slice)\n      limit = upto+newSize-4;\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/ByteSliceReader#nextSlice().mjava","pathOld":"src/java/org/apache/lucene/index/ByteSliceReader#nextSlice().mjava","sourceNew":"  public void nextSlice() {\n\n    // Skip to our next slice\n    final int nextIndex = ((buffer[limit]&0xff)<<24) + ((buffer[1+limit]&0xff)<<16) + ((buffer[2+limit]&0xff)<<8) + (buffer[3+limit]&0xff);\n\n    level = ByteBlockPool.nextLevelArray[level];\n    final int newSize = ByteBlockPool.levelSizeArray[level];\n\n    bufferUpto = nextIndex / DocumentsWriter.BYTE_BLOCK_SIZE;\n    bufferOffset = bufferUpto * DocumentsWriter.BYTE_BLOCK_SIZE;\n\n    buffer = pool.buffers[bufferUpto];\n    upto = nextIndex & DocumentsWriter.BYTE_BLOCK_MASK;\n\n    if (nextIndex + newSize >= endIndex) {\n      // We are advancing to the final slice\n      assert endIndex - nextIndex > 0;\n      limit = endIndex - bufferOffset;\n    } else {\n      // This is not the final slice (subtract 4 for the\n      // forwarding address at the end of this new slice)\n      limit = upto+newSize-4;\n    }\n  }\n\n","sourceOld":"  public void nextSlice() {\n\n    // Skip to our next slice\n    final int nextIndex = ((buffer[limit]&0xff)<<24) + ((buffer[1+limit]&0xff)<<16) + ((buffer[2+limit]&0xff)<<8) + (buffer[3+limit]&0xff);\n\n    level = ByteBlockPool.nextLevelArray[level];\n    final int newSize = ByteBlockPool.levelSizeArray[level];\n\n    bufferUpto = nextIndex / DocumentsWriter.BYTE_BLOCK_SIZE;\n    bufferOffset = bufferUpto * DocumentsWriter.BYTE_BLOCK_SIZE;\n\n    buffer = pool.buffers[bufferUpto];\n    upto = nextIndex & DocumentsWriter.BYTE_BLOCK_MASK;\n\n    if (nextIndex + newSize >= endIndex) {\n      // We are advancing to the final slice\n      assert endIndex - nextIndex > 0;\n      limit = endIndex - bufferOffset;\n    } else {\n      // This is not the final slice (subtract 4 for the\n      // forwarding address at the end of this new slice)\n      limit = upto+newSize-4;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"5a0af3a442be522899177e5e11384a45a6784a3f":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["5a0af3a442be522899177e5e11384a45a6784a3f"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["5a0af3a442be522899177e5e11384a45a6784a3f"],"5a0af3a442be522899177e5e11384a45a6784a3f":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}