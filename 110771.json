{"path":"solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/DataImporter#runCmd(RequestParams,SolrWriter).mjava","commits":[{"id":"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91","date":1306767085,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/DataImporter#runCmd(RequestParams,SolrWriter).mjava","pathOld":"solr/contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/DataImporter#runCmd(RequestParams,SolrWriter).mjava","sourceNew":"  void runCmd(RequestParams reqParams, SolrWriter sw) {\n    String command = reqParams.command;\n    if (command.equals(ABORT_CMD)) {\n      if (docBuilder != null) {\n        docBuilder.abort();\n      }\n      return;\n    }\n    if (!importLock.tryLock()){\n      LOG.warn(\"Import command failed . another import is running\");      \n      return;\n    }\n    try {\n      if (FULL_IMPORT_CMD.equals(command) || IMPORT_CMD.equals(command)) {\n        doFullImport(sw, reqParams);\n      } else if (command.equals(DELTA_IMPORT_CMD)) {\n        doDeltaImport(sw, reqParams);\n      }\n    } finally {\n      importLock.unlock();\n    }\n  }\n\n","sourceOld":"  void runCmd(RequestParams reqParams, SolrWriter sw) {\n    String command = reqParams.command;\n    if (command.equals(ABORT_CMD)) {\n      if (docBuilder != null) {\n        docBuilder.abort();\n      }\n      return;\n    }\n    if (!importLock.tryLock()){\n      LOG.warn(\"Import command failed . another import is running\");      \n      return;\n    }\n    try {\n      if (FULL_IMPORT_CMD.equals(command) || IMPORT_CMD.equals(command)) {\n        doFullImport(sw, reqParams);\n      } else if (command.equals(DELTA_IMPORT_CMD)) {\n        doDeltaImport(sw, reqParams);\n      }\n    } finally {\n      importLock.unlock();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/DataImporter#runCmd(RequestParams,SolrWriter).mjava","pathOld":"solr/contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/DataImporter#runCmd(RequestParams,SolrWriter).mjava","sourceNew":"  void runCmd(RequestParams reqParams, SolrWriter sw) {\n    String command = reqParams.command;\n    if (command.equals(ABORT_CMD)) {\n      if (docBuilder != null) {\n        docBuilder.abort();\n      }\n      return;\n    }\n    if (!importLock.tryLock()){\n      LOG.warn(\"Import command failed . another import is running\");      \n      return;\n    }\n    try {\n      if (FULL_IMPORT_CMD.equals(command) || IMPORT_CMD.equals(command)) {\n        doFullImport(sw, reqParams);\n      } else if (command.equals(DELTA_IMPORT_CMD)) {\n        doDeltaImport(sw, reqParams);\n      }\n    } finally {\n      importLock.unlock();\n    }\n  }\n\n","sourceOld":"  void runCmd(RequestParams reqParams, SolrWriter sw) {\n    String command = reqParams.command;\n    if (command.equals(ABORT_CMD)) {\n      if (docBuilder != null) {\n        docBuilder.abort();\n      }\n      return;\n    }\n    if (!importLock.tryLock()){\n      LOG.warn(\"Import command failed . another import is running\");      \n      return;\n    }\n    try {\n      if (FULL_IMPORT_CMD.equals(command) || IMPORT_CMD.equals(command)) {\n        doFullImport(sw, reqParams);\n      } else if (command.equals(DELTA_IMPORT_CMD)) {\n        doDeltaImport(sw, reqParams);\n      }\n    } finally {\n      importLock.unlock();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4ebea96bbe279c4a8dc0cd5cd1f987cc9b33436c","date":1335805170,"type":5,"author":"James Dyer","isMerge":false,"pathNew":"solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/DataImporter#runCmd(RequestInfo,SolrWriter).mjava","pathOld":"solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/DataImporter#runCmd(RequestParams,SolrWriter).mjava","sourceNew":"  void runCmd(RequestInfo reqParams, SolrWriter sw) {\n    String command = reqParams.getCommand();\n    if (command.equals(ABORT_CMD)) {\n      if (docBuilder != null) {\n        docBuilder.abort();\n      }\n      return;\n    }\n    if (!importLock.tryLock()){\n      LOG.warn(\"Import command failed . another import is running\");      \n      return;\n    }\n    try {\n      if (FULL_IMPORT_CMD.equals(command) || IMPORT_CMD.equals(command)) {\n        doFullImport(sw, reqParams);\n      } else if (command.equals(DELTA_IMPORT_CMD)) {\n        doDeltaImport(sw, reqParams);\n      }\n    } finally {\n      importLock.unlock();\n    }\n  }\n\n","sourceOld":"  void runCmd(RequestParams reqParams, SolrWriter sw) {\n    String command = reqParams.command;\n    if (command.equals(ABORT_CMD)) {\n      if (docBuilder != null) {\n        docBuilder.abort();\n      }\n      return;\n    }\n    if (!importLock.tryLock()){\n      LOG.warn(\"Import command failed . another import is running\");      \n      return;\n    }\n    try {\n      if (FULL_IMPORT_CMD.equals(command) || IMPORT_CMD.equals(command)) {\n        doFullImport(sw, reqParams);\n      } else if (command.equals(DELTA_IMPORT_CMD)) {\n        doDeltaImport(sw, reqParams);\n      }\n    } finally {\n      importLock.unlock();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"4ebea96bbe279c4a8dc0cd5cd1f987cc9b33436c":["c26f00b574427b55127e869b935845554afde1fa"],"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"c26f00b574427b55127e869b935845554afde1fa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","5128b7b3b73fedff05fdc5ea2e6be53c1020bb91"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["4ebea96bbe279c4a8dc0cd5cd1f987cc9b33436c"]},"commit2Childs":{"4ebea96bbe279c4a8dc0cd5cd1f987cc9b33436c":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91":["c26f00b574427b55127e869b935845554afde1fa"],"c26f00b574427b55127e869b935845554afde1fa":["4ebea96bbe279c4a8dc0cd5cd1f987cc9b33436c"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["5128b7b3b73fedff05fdc5ea2e6be53c1020bb91","c26f00b574427b55127e869b935845554afde1fa"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}