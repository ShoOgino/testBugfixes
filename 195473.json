{"path":"lucene/memory/src/test/org/apache/lucene/index/memory/TestMemoryIndexAgainstDirectory#testSameFieldAddedMultipleTimes().mjava","commits":[{"id":"d77dafd89756a5161d244985903e3487ca109182","date":1548679743,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/memory/src/test/org/apache/lucene/index/memory/TestMemoryIndexAgainstDirectory#testSameFieldAddedMultipleTimes().mjava","pathOld":"lucene/memory/src/test/org/apache/lucene/index/memory/TestMemoryIndexAgainstRAMDir#testSameFieldAddedMultipleTimes().mjava","sourceNew":"  public void testSameFieldAddedMultipleTimes() throws IOException {\n    MemoryIndex mindex = randomMemoryIndex();\n    MockAnalyzer mockAnalyzer = new MockAnalyzer(random());\n    mindex.addField(\"field\", \"the quick brown fox\", mockAnalyzer);\n    mindex.addField(\"field\", \"jumps over the\", mockAnalyzer);\n    LeafReader reader = (LeafReader) mindex.createSearcher().getIndexReader();\n    TestUtil.checkReader(reader);\n    assertEquals(7, reader.terms(\"field\").getSumTotalTermFreq());\n    PhraseQuery query = new PhraseQuery(\"field\", \"fox\", \"jumps\");\n    assertTrue(mindex.search(query) > 0.1);\n    mindex.reset();\n    mockAnalyzer.setPositionIncrementGap(1 + random().nextInt(10));\n    mindex.addField(\"field\", \"the quick brown fox\", mockAnalyzer);\n    mindex.addField(\"field\", \"jumps over the\", mockAnalyzer);\n    assertEquals(0, mindex.search(query), 0.00001f);\n    query = new PhraseQuery(10, \"field\", \"fox\", \"jumps\");\n    assertTrue(\"posGap\" + mockAnalyzer.getPositionIncrementGap(\"field\") , mindex.search(query) > 0.0001);\n    TestUtil.checkReader(mindex.createSearcher().getIndexReader());\n  }\n\n","sourceOld":"  public void testSameFieldAddedMultipleTimes() throws IOException {\n    MemoryIndex mindex = randomMemoryIndex();\n    MockAnalyzer mockAnalyzer = new MockAnalyzer(random());\n    mindex.addField(\"field\", \"the quick brown fox\", mockAnalyzer);\n    mindex.addField(\"field\", \"jumps over the\", mockAnalyzer);\n    LeafReader reader = (LeafReader) mindex.createSearcher().getIndexReader();\n    TestUtil.checkReader(reader);\n    assertEquals(7, reader.terms(\"field\").getSumTotalTermFreq());\n    PhraseQuery query = new PhraseQuery(\"field\", \"fox\", \"jumps\");\n    assertTrue(mindex.search(query) > 0.1);\n    mindex.reset();\n    mockAnalyzer.setPositionIncrementGap(1 + random().nextInt(10));\n    mindex.addField(\"field\", \"the quick brown fox\", mockAnalyzer);\n    mindex.addField(\"field\", \"jumps over the\", mockAnalyzer);\n    assertEquals(0, mindex.search(query), 0.00001f);\n    query = new PhraseQuery(10, \"field\", \"fox\", \"jumps\");\n    assertTrue(\"posGap\" + mockAnalyzer.getPositionIncrementGap(\"field\") , mindex.search(query) > 0.0001);\n    TestUtil.checkReader(mindex.createSearcher().getIndexReader());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"d77dafd89756a5161d244985903e3487ca109182":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["d77dafd89756a5161d244985903e3487ca109182"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["d77dafd89756a5161d244985903e3487ca109182"],"d77dafd89756a5161d244985903e3487ca109182":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}