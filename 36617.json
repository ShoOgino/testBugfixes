{"path":"lucene/src/java/org/apache/lucene/search/MatchAllDocsQuery.MatchAllDocsWeight#explain(ReaderContext,int).mjava","commits":[{"id":"2dadf0f3286a34a0fee6e788ffce88624bf2984e","date":1294260428,"type":1,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/search/MatchAllDocsQuery.MatchAllDocsWeight#explain(ReaderContext,int).mjava","pathOld":"lucene/src/java/org/apache/lucene/search/MatchAllDocsQuery.MatchAllDocsWeight#explain(IndexReader,int).mjava","sourceNew":"    @Override\n    public Explanation explain(ReaderContext context, int doc) {\n      // explain query weight\n      Explanation queryExpl = new ComplexExplanation\n        (true, getValue(), \"MatchAllDocsQuery, product of:\");\n      if (getBoost() != 1.0f) {\n        queryExpl.addDetail(new Explanation(getBoost(),\"boost\"));\n      }\n      queryExpl.addDetail(new Explanation(queryNorm,\"queryNorm\"));\n\n      return queryExpl;\n    }\n\n","sourceOld":"    @Override\n    public Explanation explain(IndexReader reader, int doc) {\n      // explain query weight\n      Explanation queryExpl = new ComplexExplanation\n        (true, getValue(), \"MatchAllDocsQuery, product of:\");\n      if (getBoost() != 1.0f) {\n        queryExpl.addDetail(new Explanation(getBoost(),\"boost\"));\n      }\n      queryExpl.addDetail(new Explanation(queryNorm,\"queryNorm\"));\n\n      return queryExpl;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a10b98ef1ef4bf9e38d2e07a9e425a916afa8705","date":1294747166,"type":5,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/search/MatchAllDocsQuery.MatchAllDocsWeight#explain(AtomicReaderContext,int).mjava","pathOld":"lucene/src/java/org/apache/lucene/search/MatchAllDocsQuery.MatchAllDocsWeight#explain(ReaderContext,int).mjava","sourceNew":"    @Override\n    public Explanation explain(AtomicReaderContext context, int doc) {\n      // explain query weight\n      Explanation queryExpl = new ComplexExplanation\n        (true, getValue(), \"MatchAllDocsQuery, product of:\");\n      if (getBoost() != 1.0f) {\n        queryExpl.addDetail(new Explanation(getBoost(),\"boost\"));\n      }\n      queryExpl.addDetail(new Explanation(queryNorm,\"queryNorm\"));\n\n      return queryExpl;\n    }\n\n","sourceOld":"    @Override\n    public Explanation explain(ReaderContext context, int doc) {\n      // explain query weight\n      Explanation queryExpl = new ComplexExplanation\n        (true, getValue(), \"MatchAllDocsQuery, product of:\");\n      if (getBoost() != 1.0f) {\n        queryExpl.addDetail(new Explanation(getBoost(),\"boost\"));\n      }\n      queryExpl.addDetail(new Explanation(queryNorm,\"queryNorm\"));\n\n      return queryExpl;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"2dadf0f3286a34a0fee6e788ffce88624bf2984e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a10b98ef1ef4bf9e38d2e07a9e425a916afa8705":["2dadf0f3286a34a0fee6e788ffce88624bf2984e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a10b98ef1ef4bf9e38d2e07a9e425a916afa8705"]},"commit2Childs":{"2dadf0f3286a34a0fee6e788ffce88624bf2984e":["a10b98ef1ef4bf9e38d2e07a9e425a916afa8705"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["2dadf0f3286a34a0fee6e788ffce88624bf2984e"],"a10b98ef1ef4bf9e38d2e07a9e425a916afa8705":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}