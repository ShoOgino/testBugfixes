{"path":"solr/solrj/src/test/org/apache/solr/client/solrj/impl/BasicHttpSolrClientTest#testInvariantParams().mjava","commits":[{"id":"a8cfe32f552b7e4776be5098105cbd3e11e93792","date":1482161480,"type":0,"author":"Ishan Chattopadhyaya","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/impl/BasicHttpSolrClientTest#testInvariantParams().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testInvariantParams() throws IOException {\n    try(HttpSolrClient createdClient = new HttpSolrClient.Builder()\n        .withBaseSolrUrl(jetty.getBaseUrl().toString())\n        .withInvariantParams(SolrTestCaseJ4.params(\"param\", \"value\"))\n        .build()) {\n      assertEquals(\"value\", createdClient.getInvariantParams().get(\"param\"));\n    }\n\n    try(HttpSolrClient createdClient = new HttpSolrClient.Builder()\n        .withBaseSolrUrl(jetty.getBaseUrl().toString())\n        .withInvariantParams(SolrTestCaseJ4.params(\"fq\", \"fq1\", \"fq\", \"fq2\"))\n        .build()) {\n      assertEquals(2, createdClient.getInvariantParams().getParams(\"fq\").length);\n    }\n\n    try(HttpSolrClient createdClient = new HttpSolrClient.Builder()\n        .withBaseSolrUrl(jetty.getBaseUrl().toString())\n        .withDelegationToken(\"mydt\")\n        .withInvariantParams(SolrTestCaseJ4.params(DelegationTokenHttpSolrClient.DELEGATION_TOKEN_PARAM, \"mydt\"))\n        .build()) {\n      fail();\n    } catch(Exception ex) {\n      if (!ex.getMessage().equals(\"parameter \"+ DelegationTokenHttpSolrClient.DELEGATION_TOKEN_PARAM +\" is redefined.\")) {\n        throw ex;\n      }\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5acd68c5f07f7ee604c2eeffe801f4a2d7a1a5bf","date":1482251961,"type":0,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/impl/BasicHttpSolrClientTest#testInvariantParams().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testInvariantParams() throws IOException {\n    try(HttpSolrClient createdClient = new HttpSolrClient.Builder()\n        .withBaseSolrUrl(jetty.getBaseUrl().toString())\n        .withInvariantParams(SolrTestCaseJ4.params(\"param\", \"value\"))\n        .build()) {\n      assertEquals(\"value\", createdClient.getInvariantParams().get(\"param\"));\n    }\n\n    try(HttpSolrClient createdClient = new HttpSolrClient.Builder()\n        .withBaseSolrUrl(jetty.getBaseUrl().toString())\n        .withInvariantParams(SolrTestCaseJ4.params(\"fq\", \"fq1\", \"fq\", \"fq2\"))\n        .build()) {\n      assertEquals(2, createdClient.getInvariantParams().getParams(\"fq\").length);\n    }\n\n    try(HttpSolrClient createdClient = new HttpSolrClient.Builder()\n        .withBaseSolrUrl(jetty.getBaseUrl().toString())\n        .withDelegationToken(\"mydt\")\n        .withInvariantParams(SolrTestCaseJ4.params(DelegationTokenHttpSolrClient.DELEGATION_TOKEN_PARAM, \"mydt\"))\n        .build()) {\n      fail();\n    } catch(Exception ex) {\n      if (!ex.getMessage().equals(\"parameter \"+ DelegationTokenHttpSolrClient.DELEGATION_TOKEN_PARAM +\" is redefined.\")) {\n        throw ex;\n      }\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"63a1978c6710c767fa084741e3d6424840003a62","date":1495850671,"type":3,"author":"Chris Hostetter","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/impl/BasicHttpSolrClientTest#testInvariantParams().mjava","pathOld":"solr/solrj/src/test/org/apache/solr/client/solrj/impl/BasicHttpSolrClientTest#testInvariantParams().mjava","sourceNew":"  @Test\n  public void testInvariantParams() throws IOException {\n    try(HttpSolrClient createdClient = new HttpSolrClient.Builder()\n        .withBaseSolrUrl(jetty.getBaseUrl().toString())\n        .withInvariantParams(SolrTestCaseJ4.params(\"param\", \"value\"))\n        .build()) {\n      assertEquals(\"value\", createdClient.getInvariantParams().get(\"param\"));\n    }\n\n    try(HttpSolrClient createdClient = new HttpSolrClient.Builder()\n        .withBaseSolrUrl(jetty.getBaseUrl().toString())\n        .withInvariantParams(SolrTestCaseJ4.params(\"fq\", \"fq1\", \"fq\", \"fq2\"))\n        .build()) {\n      assertEquals(2, createdClient.getInvariantParams().getParams(\"fq\").length);\n    }\n\n    try(HttpSolrClient createdClient = new HttpSolrClient.Builder()\n        .withBaseSolrUrl(jetty.getBaseUrl().toString())\n        .withKerberosDelegationToken(\"mydt\")\n        .withInvariantParams(SolrTestCaseJ4.params(DelegationTokenHttpSolrClient.DELEGATION_TOKEN_PARAM, \"mydt\"))\n        .build()) {\n      fail();\n    } catch(Exception ex) {\n      if (!ex.getMessage().equals(\"parameter \"+ DelegationTokenHttpSolrClient.DELEGATION_TOKEN_PARAM +\" is redefined.\")) {\n        throw ex;\n      }\n    }\n  }\n\n","sourceOld":"  @Test\n  public void testInvariantParams() throws IOException {\n    try(HttpSolrClient createdClient = new HttpSolrClient.Builder()\n        .withBaseSolrUrl(jetty.getBaseUrl().toString())\n        .withInvariantParams(SolrTestCaseJ4.params(\"param\", \"value\"))\n        .build()) {\n      assertEquals(\"value\", createdClient.getInvariantParams().get(\"param\"));\n    }\n\n    try(HttpSolrClient createdClient = new HttpSolrClient.Builder()\n        .withBaseSolrUrl(jetty.getBaseUrl().toString())\n        .withInvariantParams(SolrTestCaseJ4.params(\"fq\", \"fq1\", \"fq\", \"fq2\"))\n        .build()) {\n      assertEquals(2, createdClient.getInvariantParams().getParams(\"fq\").length);\n    }\n\n    try(HttpSolrClient createdClient = new HttpSolrClient.Builder()\n        .withBaseSolrUrl(jetty.getBaseUrl().toString())\n        .withDelegationToken(\"mydt\")\n        .withInvariantParams(SolrTestCaseJ4.params(DelegationTokenHttpSolrClient.DELEGATION_TOKEN_PARAM, \"mydt\"))\n        .build()) {\n      fail();\n    } catch(Exception ex) {\n      if (!ex.getMessage().equals(\"parameter \"+ DelegationTokenHttpSolrClient.DELEGATION_TOKEN_PARAM +\" is redefined.\")) {\n        throw ex;\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d1f5728f32a4a256b36cfabd7a2636452f599bb9","date":1496231774,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/impl/BasicHttpSolrClientTest#testInvariantParams().mjava","pathOld":"solr/solrj/src/test/org/apache/solr/client/solrj/impl/BasicHttpSolrClientTest#testInvariantParams().mjava","sourceNew":"  @Test\n  public void testInvariantParams() throws IOException {\n    try(HttpSolrClient createdClient = new HttpSolrClient.Builder()\n        .withBaseSolrUrl(jetty.getBaseUrl().toString())\n        .withInvariantParams(SolrTestCaseJ4.params(\"param\", \"value\"))\n        .build()) {\n      assertEquals(\"value\", createdClient.getInvariantParams().get(\"param\"));\n    }\n\n    try(HttpSolrClient createdClient = new HttpSolrClient.Builder()\n        .withBaseSolrUrl(jetty.getBaseUrl().toString())\n        .withInvariantParams(SolrTestCaseJ4.params(\"fq\", \"fq1\", \"fq\", \"fq2\"))\n        .build()) {\n      assertEquals(2, createdClient.getInvariantParams().getParams(\"fq\").length);\n    }\n\n    try(HttpSolrClient createdClient = new HttpSolrClient.Builder()\n        .withBaseSolrUrl(jetty.getBaseUrl().toString())\n        .withKerberosDelegationToken(\"mydt\")\n        .withInvariantParams(SolrTestCaseJ4.params(DelegationTokenHttpSolrClient.DELEGATION_TOKEN_PARAM, \"mydt\"))\n        .build()) {\n      fail();\n    } catch(Exception ex) {\n      if (!ex.getMessage().equals(\"parameter \"+ DelegationTokenHttpSolrClient.DELEGATION_TOKEN_PARAM +\" is redefined.\")) {\n        throw ex;\n      }\n    }\n  }\n\n","sourceOld":"  @Test\n  public void testInvariantParams() throws IOException {\n    try(HttpSolrClient createdClient = new HttpSolrClient.Builder()\n        .withBaseSolrUrl(jetty.getBaseUrl().toString())\n        .withInvariantParams(SolrTestCaseJ4.params(\"param\", \"value\"))\n        .build()) {\n      assertEquals(\"value\", createdClient.getInvariantParams().get(\"param\"));\n    }\n\n    try(HttpSolrClient createdClient = new HttpSolrClient.Builder()\n        .withBaseSolrUrl(jetty.getBaseUrl().toString())\n        .withInvariantParams(SolrTestCaseJ4.params(\"fq\", \"fq1\", \"fq\", \"fq2\"))\n        .build()) {\n      assertEquals(2, createdClient.getInvariantParams().getParams(\"fq\").length);\n    }\n\n    try(HttpSolrClient createdClient = new HttpSolrClient.Builder()\n        .withBaseSolrUrl(jetty.getBaseUrl().toString())\n        .withDelegationToken(\"mydt\")\n        .withInvariantParams(SolrTestCaseJ4.params(DelegationTokenHttpSolrClient.DELEGATION_TOKEN_PARAM, \"mydt\"))\n        .build()) {\n      fail();\n    } catch(Exception ex) {\n      if (!ex.getMessage().equals(\"parameter \"+ DelegationTokenHttpSolrClient.DELEGATION_TOKEN_PARAM +\" is redefined.\")) {\n        throw ex;\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e9017cf144952056066919f1ebc7897ff9bd71b1","date":1496757600,"type":3,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/impl/BasicHttpSolrClientTest#testInvariantParams().mjava","pathOld":"solr/solrj/src/test/org/apache/solr/client/solrj/impl/BasicHttpSolrClientTest#testInvariantParams().mjava","sourceNew":"  @Test\n  public void testInvariantParams() throws IOException {\n    try(HttpSolrClient createdClient = new HttpSolrClient.Builder()\n        .withBaseSolrUrl(jetty.getBaseUrl().toString())\n        .withInvariantParams(SolrTestCaseJ4.params(\"param\", \"value\"))\n        .build()) {\n      assertEquals(\"value\", createdClient.getInvariantParams().get(\"param\"));\n    }\n\n    try(HttpSolrClient createdClient = new HttpSolrClient.Builder()\n        .withBaseSolrUrl(jetty.getBaseUrl().toString())\n        .withInvariantParams(SolrTestCaseJ4.params(\"fq\", \"fq1\", \"fq\", \"fq2\"))\n        .build()) {\n      assertEquals(2, createdClient.getInvariantParams().getParams(\"fq\").length);\n    }\n\n    try(HttpSolrClient createdClient = new HttpSolrClient.Builder()\n        .withBaseSolrUrl(jetty.getBaseUrl().toString())\n        .withKerberosDelegationToken(\"mydt\")\n        .withInvariantParams(SolrTestCaseJ4.params(DelegationTokenHttpSolrClient.DELEGATION_TOKEN_PARAM, \"mydt\"))\n        .build()) {\n      fail();\n    } catch(Exception ex) {\n      if (!ex.getMessage().equals(\"parameter \"+ DelegationTokenHttpSolrClient.DELEGATION_TOKEN_PARAM +\" is redefined.\")) {\n        throw ex;\n      }\n    }\n  }\n\n","sourceOld":"  @Test\n  public void testInvariantParams() throws IOException {\n    try(HttpSolrClient createdClient = new HttpSolrClient.Builder()\n        .withBaseSolrUrl(jetty.getBaseUrl().toString())\n        .withInvariantParams(SolrTestCaseJ4.params(\"param\", \"value\"))\n        .build()) {\n      assertEquals(\"value\", createdClient.getInvariantParams().get(\"param\"));\n    }\n\n    try(HttpSolrClient createdClient = new HttpSolrClient.Builder()\n        .withBaseSolrUrl(jetty.getBaseUrl().toString())\n        .withInvariantParams(SolrTestCaseJ4.params(\"fq\", \"fq1\", \"fq\", \"fq2\"))\n        .build()) {\n      assertEquals(2, createdClient.getInvariantParams().getParams(\"fq\").length);\n    }\n\n    try(HttpSolrClient createdClient = new HttpSolrClient.Builder()\n        .withBaseSolrUrl(jetty.getBaseUrl().toString())\n        .withDelegationToken(\"mydt\")\n        .withInvariantParams(SolrTestCaseJ4.params(DelegationTokenHttpSolrClient.DELEGATION_TOKEN_PARAM, \"mydt\"))\n        .build()) {\n      fail();\n    } catch(Exception ex) {\n      if (!ex.getMessage().equals(\"parameter \"+ DelegationTokenHttpSolrClient.DELEGATION_TOKEN_PARAM +\" is redefined.\")) {\n        throw ex;\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9ba1b632c041956c93c41aa1143d16a567014891","date":1592328473,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/impl/BasicHttpSolrClientTest#testInvariantParams().mjava","pathOld":"solr/solrj/src/test/org/apache/solr/client/solrj/impl/BasicHttpSolrClientTest#testInvariantParams().mjava","sourceNew":"  @Test\n  @SuppressWarnings({\"try\"})\n  public void testInvariantParams() throws IOException {\n    try(HttpSolrClient createdClient = new HttpSolrClient.Builder()\n        .withBaseSolrUrl(jetty.getBaseUrl().toString())\n        .withInvariantParams(SolrTestCaseJ4.params(\"param\", \"value\"))\n        .build()) {\n      assertEquals(\"value\", createdClient.getInvariantParams().get(\"param\"));\n    }\n\n    try(HttpSolrClient createdClient = new HttpSolrClient.Builder()\n        .withBaseSolrUrl(jetty.getBaseUrl().toString())\n        .withInvariantParams(SolrTestCaseJ4.params(\"fq\", \"fq1\", \"fq\", \"fq2\"))\n        .build()) {\n      assertEquals(2, createdClient.getInvariantParams().getParams(\"fq\").length);\n    }\n\n\n    try(HttpSolrClient createdClient = new HttpSolrClient.Builder()\n        .withBaseSolrUrl(jetty.getBaseUrl().toString())\n        .withKerberosDelegationToken(\"mydt\")\n        .withInvariantParams(SolrTestCaseJ4.params(DelegationTokenHttpSolrClient.DELEGATION_TOKEN_PARAM, \"mydt\"))\n        .build()) {\n      fail();\n    } catch(Exception ex) {\n      if (!ex.getMessage().equals(\"parameter \"+ DelegationTokenHttpSolrClient.DELEGATION_TOKEN_PARAM +\" is redefined.\")) {\n        throw ex;\n      }\n    }\n  }\n\n","sourceOld":"  @Test\n  public void testInvariantParams() throws IOException {\n    try(HttpSolrClient createdClient = new HttpSolrClient.Builder()\n        .withBaseSolrUrl(jetty.getBaseUrl().toString())\n        .withInvariantParams(SolrTestCaseJ4.params(\"param\", \"value\"))\n        .build()) {\n      assertEquals(\"value\", createdClient.getInvariantParams().get(\"param\"));\n    }\n\n    try(HttpSolrClient createdClient = new HttpSolrClient.Builder()\n        .withBaseSolrUrl(jetty.getBaseUrl().toString())\n        .withInvariantParams(SolrTestCaseJ4.params(\"fq\", \"fq1\", \"fq\", \"fq2\"))\n        .build()) {\n      assertEquals(2, createdClient.getInvariantParams().getParams(\"fq\").length);\n    }\n\n    try(HttpSolrClient createdClient = new HttpSolrClient.Builder()\n        .withBaseSolrUrl(jetty.getBaseUrl().toString())\n        .withKerberosDelegationToken(\"mydt\")\n        .withInvariantParams(SolrTestCaseJ4.params(DelegationTokenHttpSolrClient.DELEGATION_TOKEN_PARAM, \"mydt\"))\n        .build()) {\n      fail();\n    } catch(Exception ex) {\n      if (!ex.getMessage().equals(\"parameter \"+ DelegationTokenHttpSolrClient.DELEGATION_TOKEN_PARAM +\" is redefined.\")) {\n        throw ex;\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"9ba1b632c041956c93c41aa1143d16a567014891":["d1f5728f32a4a256b36cfabd7a2636452f599bb9"],"a8cfe32f552b7e4776be5098105cbd3e11e93792":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"e9017cf144952056066919f1ebc7897ff9bd71b1":["a8cfe32f552b7e4776be5098105cbd3e11e93792","63a1978c6710c767fa084741e3d6424840003a62"],"63a1978c6710c767fa084741e3d6424840003a62":["a8cfe32f552b7e4776be5098105cbd3e11e93792"],"5acd68c5f07f7ee604c2eeffe801f4a2d7a1a5bf":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","a8cfe32f552b7e4776be5098105cbd3e11e93792"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"d1f5728f32a4a256b36cfabd7a2636452f599bb9":["a8cfe32f552b7e4776be5098105cbd3e11e93792","63a1978c6710c767fa084741e3d6424840003a62"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9ba1b632c041956c93c41aa1143d16a567014891"]},"commit2Childs":{"9ba1b632c041956c93c41aa1143d16a567014891":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a8cfe32f552b7e4776be5098105cbd3e11e93792":["e9017cf144952056066919f1ebc7897ff9bd71b1","63a1978c6710c767fa084741e3d6424840003a62","5acd68c5f07f7ee604c2eeffe801f4a2d7a1a5bf","d1f5728f32a4a256b36cfabd7a2636452f599bb9"],"e9017cf144952056066919f1ebc7897ff9bd71b1":[],"63a1978c6710c767fa084741e3d6424840003a62":["e9017cf144952056066919f1ebc7897ff9bd71b1","d1f5728f32a4a256b36cfabd7a2636452f599bb9"],"5acd68c5f07f7ee604c2eeffe801f4a2d7a1a5bf":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["a8cfe32f552b7e4776be5098105cbd3e11e93792","5acd68c5f07f7ee604c2eeffe801f4a2d7a1a5bf"],"d1f5728f32a4a256b36cfabd7a2636452f599bb9":["9ba1b632c041956c93c41aa1143d16a567014891"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["e9017cf144952056066919f1ebc7897ff9bd71b1","5acd68c5f07f7ee604c2eeffe801f4a2d7a1a5bf","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}