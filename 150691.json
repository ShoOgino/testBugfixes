{"path":"lucene/contrib/demo/src/test/org/apache/lucene/demo/html/TestHtmlParser#testMeta().mjava","commits":[{"id":"fb38e04906cc704c95b1bb9cdc7a960017b0cc25","date":1288942385,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/contrib/demo/src/test/org/apache/lucene/demo/html/TestHtmlParser#testMeta().mjava","pathOld":"/dev/null","sourceNew":"  public void testMeta() throws Exception {\n    String text = \"<html><head>\" +\n    \"<meta name=\\\"a\\\" content=\\\"1\\\" />\" +\n    \"<meta name=\\\"b\\\" content=\\\"2\\\" />\" +\n    \"<meta name=\\\"keywords\\\" content=\\\"this is a test\\\" />\" +\n    \"<meta http-equiv=\\\"Content-Type\\\" content=\\\"text/html;charset=UTF-8\\\" />\" +\n    \"</head><body>foobar</body></html>\";\n    HTMLParser parser = new HTMLParser(new StringReader(text));\n    Properties tags = parser.getMetaTags();\n    assertEquals(4, tags.size());\n    assertEquals(\"1\", tags.get(\"a\"));\n    assertEquals(\"2\", tags.get(\"b\"));\n    assertEquals(\"this is a test\", tags.get(\"keywords\"));\n    assertEquals(\"text/html;charset=utf-8\", tags.get(\"content-type\"));\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"85a883878c0af761245ab048babc63d099f835f3","date":1289553330,"type":0,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/contrib/demo/src/test/org/apache/lucene/demo/html/TestHtmlParser#testMeta().mjava","pathOld":"/dev/null","sourceNew":"  public void testMeta() throws Exception {\n    String text = \"<html><head>\" +\n    \"<meta name=\\\"a\\\" content=\\\"1\\\" />\" +\n    \"<meta name=\\\"b\\\" content=\\\"2\\\" />\" +\n    \"<meta name=\\\"keywords\\\" content=\\\"this is a test\\\" />\" +\n    \"<meta http-equiv=\\\"Content-Type\\\" content=\\\"text/html;charset=UTF-8\\\" />\" +\n    \"</head><body>foobar</body></html>\";\n    HTMLParser parser = new HTMLParser(new StringReader(text));\n    Properties tags = parser.getMetaTags();\n    assertEquals(4, tags.size());\n    assertEquals(\"1\", tags.get(\"a\"));\n    assertEquals(\"2\", tags.get(\"b\"));\n    assertEquals(\"this is a test\", tags.get(\"keywords\"));\n    assertEquals(\"text/html;charset=utf-8\", tags.get(\"content-type\"));\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","date":1292920096,"type":0,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/contrib/demo/src/test/org/apache/lucene/demo/html/TestHtmlParser#testMeta().mjava","pathOld":"/dev/null","sourceNew":"  public void testMeta() throws Exception {\n    String text = \"<html><head>\" +\n    \"<meta name=\\\"a\\\" content=\\\"1\\\" />\" +\n    \"<meta name=\\\"b\\\" content=\\\"2\\\" />\" +\n    \"<meta name=\\\"keywords\\\" content=\\\"this is a test\\\" />\" +\n    \"<meta http-equiv=\\\"Content-Type\\\" content=\\\"text/html;charset=UTF-8\\\" />\" +\n    \"</head><body>foobar</body></html>\";\n    HTMLParser parser = new HTMLParser(new StringReader(text));\n    Properties tags = parser.getMetaTags();\n    assertEquals(4, tags.size());\n    assertEquals(\"1\", tags.get(\"a\"));\n    assertEquals(\"2\", tags.get(\"b\"));\n    assertEquals(\"this is a test\", tags.get(\"keywords\"));\n    assertEquals(\"text/html;charset=utf-8\", tags.get(\"content-type\"));\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"81ea17596392ebd5d12741eb9e3b2516258b9413","date":1298090976,"type":5,"author":"Steven Rowe","isMerge":false,"pathNew":"modules/benchmark/src/test/org/apache/lucene/benchmark/byTask/feeds/demohtml/TestHtmlParser#testMeta().mjava","pathOld":"lucene/contrib/demo/src/test/org/apache/lucene/demo/html/TestHtmlParser#testMeta().mjava","sourceNew":"  public void testMeta() throws Exception {\n    String text = \"<html><head>\" +\n    \"<meta name=\\\"a\\\" content=\\\"1\\\" />\" +\n    \"<meta name=\\\"b\\\" content=\\\"2\\\" />\" +\n    \"<meta name=\\\"keywords\\\" content=\\\"this is a test\\\" />\" +\n    \"<meta http-equiv=\\\"Content-Type\\\" content=\\\"text/html;charset=UTF-8\\\" />\" +\n    \"</head><body>foobar</body></html>\";\n    HTMLParser parser = new HTMLParser(new StringReader(text));\n    Properties tags = parser.getMetaTags();\n    assertEquals(4, tags.size());\n    assertEquals(\"1\", tags.get(\"a\"));\n    assertEquals(\"2\", tags.get(\"b\"));\n    assertEquals(\"this is a test\", tags.get(\"keywords\"));\n    assertEquals(\"text/html;charset=utf-8\", tags.get(\"content-type\"));\n  }\n\n","sourceOld":"  public void testMeta() throws Exception {\n    String text = \"<html><head>\" +\n    \"<meta name=\\\"a\\\" content=\\\"1\\\" />\" +\n    \"<meta name=\\\"b\\\" content=\\\"2\\\" />\" +\n    \"<meta name=\\\"keywords\\\" content=\\\"this is a test\\\" />\" +\n    \"<meta http-equiv=\\\"Content-Type\\\" content=\\\"text/html;charset=UTF-8\\\" />\" +\n    \"</head><body>foobar</body></html>\";\n    HTMLParser parser = new HTMLParser(new StringReader(text));\n    Properties tags = parser.getMetaTags();\n    assertEquals(4, tags.size());\n    assertEquals(\"1\", tags.get(\"a\"));\n    assertEquals(\"2\", tags.get(\"b\"));\n    assertEquals(\"this is a test\", tags.get(\"keywords\"));\n    assertEquals(\"text/html;charset=utf-8\", tags.get(\"content-type\"));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f1bdbf92da222965b46c0a942c3857ba56e5c638","date":1298297608,"type":5,"author":"Simon Willnauer","isMerge":true,"pathNew":"modules/benchmark/src/test/org/apache/lucene/benchmark/byTask/feeds/demohtml/TestHtmlParser#testMeta().mjava","pathOld":"lucene/contrib/demo/src/test/org/apache/lucene/demo/html/TestHtmlParser#testMeta().mjava","sourceNew":"  public void testMeta() throws Exception {\n    String text = \"<html><head>\" +\n    \"<meta name=\\\"a\\\" content=\\\"1\\\" />\" +\n    \"<meta name=\\\"b\\\" content=\\\"2\\\" />\" +\n    \"<meta name=\\\"keywords\\\" content=\\\"this is a test\\\" />\" +\n    \"<meta http-equiv=\\\"Content-Type\\\" content=\\\"text/html;charset=UTF-8\\\" />\" +\n    \"</head><body>foobar</body></html>\";\n    HTMLParser parser = new HTMLParser(new StringReader(text));\n    Properties tags = parser.getMetaTags();\n    assertEquals(4, tags.size());\n    assertEquals(\"1\", tags.get(\"a\"));\n    assertEquals(\"2\", tags.get(\"b\"));\n    assertEquals(\"this is a test\", tags.get(\"keywords\"));\n    assertEquals(\"text/html;charset=utf-8\", tags.get(\"content-type\"));\n  }\n\n","sourceOld":"  public void testMeta() throws Exception {\n    String text = \"<html><head>\" +\n    \"<meta name=\\\"a\\\" content=\\\"1\\\" />\" +\n    \"<meta name=\\\"b\\\" content=\\\"2\\\" />\" +\n    \"<meta name=\\\"keywords\\\" content=\\\"this is a test\\\" />\" +\n    \"<meta http-equiv=\\\"Content-Type\\\" content=\\\"text/html;charset=UTF-8\\\" />\" +\n    \"</head><body>foobar</body></html>\";\n    HTMLParser parser = new HTMLParser(new StringReader(text));\n    Properties tags = parser.getMetaTags();\n    assertEquals(4, tags.size());\n    assertEquals(\"1\", tags.get(\"a\"));\n    assertEquals(\"2\", tags.get(\"b\"));\n    assertEquals(\"this is a test\", tags.get(\"keywords\"));\n    assertEquals(\"text/html;charset=utf-8\", tags.get(\"content-type\"));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bde51b089eb7f86171eb3406e38a274743f9b7ac","date":1298336439,"type":5,"author":"Michael Busch","isMerge":true,"pathNew":"modules/benchmark/src/test/org/apache/lucene/benchmark/byTask/feeds/demohtml/TestHtmlParser#testMeta().mjava","pathOld":"lucene/contrib/demo/src/test/org/apache/lucene/demo/html/TestHtmlParser#testMeta().mjava","sourceNew":"  public void testMeta() throws Exception {\n    String text = \"<html><head>\" +\n    \"<meta name=\\\"a\\\" content=\\\"1\\\" />\" +\n    \"<meta name=\\\"b\\\" content=\\\"2\\\" />\" +\n    \"<meta name=\\\"keywords\\\" content=\\\"this is a test\\\" />\" +\n    \"<meta http-equiv=\\\"Content-Type\\\" content=\\\"text/html;charset=UTF-8\\\" />\" +\n    \"</head><body>foobar</body></html>\";\n    HTMLParser parser = new HTMLParser(new StringReader(text));\n    Properties tags = parser.getMetaTags();\n    assertEquals(4, tags.size());\n    assertEquals(\"1\", tags.get(\"a\"));\n    assertEquals(\"2\", tags.get(\"b\"));\n    assertEquals(\"this is a test\", tags.get(\"keywords\"));\n    assertEquals(\"text/html;charset=utf-8\", tags.get(\"content-type\"));\n  }\n\n","sourceOld":"  public void testMeta() throws Exception {\n    String text = \"<html><head>\" +\n    \"<meta name=\\\"a\\\" content=\\\"1\\\" />\" +\n    \"<meta name=\\\"b\\\" content=\\\"2\\\" />\" +\n    \"<meta name=\\\"keywords\\\" content=\\\"this is a test\\\" />\" +\n    \"<meta http-equiv=\\\"Content-Type\\\" content=\\\"text/html;charset=UTF-8\\\" />\" +\n    \"</head><body>foobar</body></html>\";\n    HTMLParser parser = new HTMLParser(new StringReader(text));\n    Properties tags = parser.getMetaTags();\n    assertEquals(4, tags.size());\n    assertEquals(\"1\", tags.get(\"a\"));\n    assertEquals(\"2\", tags.get(\"b\"));\n    assertEquals(\"this is a test\", tags.get(\"keywords\"));\n    assertEquals(\"text/html;charset=utf-8\", tags.get(\"content-type\"));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"f1bdbf92da222965b46c0a942c3857ba56e5c638":["85a883878c0af761245ab048babc63d099f835f3","81ea17596392ebd5d12741eb9e3b2516258b9413"],"81ea17596392ebd5d12741eb9e3b2516258b9413":["fb38e04906cc704c95b1bb9cdc7a960017b0cc25"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"85a883878c0af761245ab048babc63d099f835f3":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","fb38e04906cc704c95b1bb9cdc7a960017b0cc25"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","fb38e04906cc704c95b1bb9cdc7a960017b0cc25"],"bde51b089eb7f86171eb3406e38a274743f9b7ac":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","81ea17596392ebd5d12741eb9e3b2516258b9413"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["81ea17596392ebd5d12741eb9e3b2516258b9413"],"fb38e04906cc704c95b1bb9cdc7a960017b0cc25":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"f1bdbf92da222965b46c0a942c3857ba56e5c638":[],"81ea17596392ebd5d12741eb9e3b2516258b9413":["f1bdbf92da222965b46c0a942c3857ba56e5c638","bde51b089eb7f86171eb3406e38a274743f9b7ac","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"85a883878c0af761245ab048babc63d099f835f3":["f1bdbf92da222965b46c0a942c3857ba56e5c638"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["85a883878c0af761245ab048babc63d099f835f3","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","fb38e04906cc704c95b1bb9cdc7a960017b0cc25"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["bde51b089eb7f86171eb3406e38a274743f9b7ac"],"bde51b089eb7f86171eb3406e38a274743f9b7ac":[],"fb38e04906cc704c95b1bb9cdc7a960017b0cc25":["81ea17596392ebd5d12741eb9e3b2516258b9413","85a883878c0af761245ab048babc63d099f835f3","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["f1bdbf92da222965b46c0a942c3857ba56e5c638","bde51b089eb7f86171eb3406e38a274743f9b7ac","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}