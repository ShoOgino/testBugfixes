{"path":"lucene/test-framework/src/java/org/apache/lucene/util/TestUtil#rmDir(File).mjava","commits":[{"id":"6613659748fe4411a7dcf85266e55db1f95f7315","date":1392773913,"type":1,"author":"Benson Margulies","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/util/TestUtil#rmDir(File).mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/util/_TestUtil#rmDir(File).mjava","sourceNew":"  /**\n   * Deletes a directory and everything underneath it.\n   */\n  public static void rmDir(File dir) throws IOException {\n    if (dir.exists()) {\n      if (dir.isFile() && !dir.delete()) {\n        throw new IOException(\"could not delete \" + dir);\n      }\n      for (File f : dir.listFiles()) {\n        if (f.isDirectory()) {\n          rmDir(f);\n        } else {\n          if (!f.delete()) {\n            throw new IOException(\"could not delete \" + f);\n          }\n        }\n      }\n      if (!dir.delete()) {\n        throw new IOException(\"could not delete \" + dir);\n      }\n    }\n  }\n\n","sourceOld":"  /**\n   * Deletes a directory and everything underneath it.\n   */\n  public static void rmDir(File dir) throws IOException {\n    if (dir.exists()) {\n      if (dir.isFile() && !dir.delete()) {\n        throw new IOException(\"could not delete \" + dir);\n      }\n      for (File f : dir.listFiles()) {\n        if (f.isDirectory()) {\n          rmDir(f);\n        } else {\n          if (!f.delete()) {\n            throw new IOException(\"could not delete \" + f);\n          }\n        }\n      }\n      if (!dir.delete()) {\n        throw new IOException(\"could not delete \" + dir);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5eb2511ababf862ea11e10761c70ee560cd84510","date":1396607225,"type":4,"author":"Dawid Weiss","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/test-framework/src/java/org/apache/lucene/util/TestUtil#rmDir(File).mjava","sourceNew":null,"sourceOld":"  /**\n   * Deletes a directory and everything underneath it.\n   */\n  public static void rmDir(File dir) throws IOException {\n    if (dir.exists()) {\n      if (dir.isFile() && !dir.delete()) {\n        throw new IOException(\"could not delete \" + dir);\n      }\n      for (File f : dir.listFiles()) {\n        if (f.isDirectory()) {\n          rmDir(f);\n        } else {\n          if (!f.delete()) {\n            throw new IOException(\"could not delete \" + f);\n          }\n        }\n      }\n      if (!dir.delete()) {\n        throw new IOException(\"could not delete \" + dir);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2a0f5bb79c600763ffe7b8141df59a3169d31e48","date":1396689440,"type":4,"author":"Dawid Weiss","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/test-framework/src/java/org/apache/lucene/util/TestUtil#rmDir(File).mjava","sourceNew":null,"sourceOld":"  /**\n   * Deletes a directory and everything underneath it.\n   */\n  public static void rmDir(File dir) throws IOException {\n    if (dir.exists()) {\n      if (dir.isFile() && !dir.delete()) {\n        throw new IOException(\"could not delete \" + dir);\n      }\n      for (File f : dir.listFiles()) {\n        if (f.isDirectory()) {\n          rmDir(f);\n        } else {\n          if (!f.delete()) {\n            throw new IOException(\"could not delete \" + f);\n          }\n        }\n      }\n      if (!dir.delete()) {\n        throw new IOException(\"could not delete \" + dir);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"5eb2511ababf862ea11e10761c70ee560cd84510":["6613659748fe4411a7dcf85266e55db1f95f7315","6613659748fe4411a7dcf85266e55db1f95f7315"],"2a0f5bb79c600763ffe7b8141df59a3169d31e48":["6613659748fe4411a7dcf85266e55db1f95f7315","5eb2511ababf862ea11e10761c70ee560cd84510"],"6613659748fe4411a7dcf85266e55db1f95f7315":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["2a0f5bb79c600763ffe7b8141df59a3169d31e48"]},"commit2Childs":{"5eb2511ababf862ea11e10761c70ee560cd84510":["2a0f5bb79c600763ffe7b8141df59a3169d31e48"],"2a0f5bb79c600763ffe7b8141df59a3169d31e48":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"6613659748fe4411a7dcf85266e55db1f95f7315":["5eb2511ababf862ea11e10761c70ee560cd84510","2a0f5bb79c600763ffe7b8141df59a3169d31e48"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["6613659748fe4411a7dcf85266e55db1f95f7315"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}