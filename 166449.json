{"path":"modules/spatial/src/java/org/apache/lucene/spatial/strategy/util/CachedDistanceValueSource#getValues(Map,AtomicReaderContext).mjava","commits":[{"id":"935445a30e9e8dc0240a7c78efc73d08c2faa6a8","date":1329778521,"type":1,"author":"David Wayne Smiley","isMerge":false,"pathNew":"modules/spatial/src/java/org/apache/lucene/spatial/strategy/util/CachedDistanceValueSource#getValues(Map,AtomicReaderContext).mjava","pathOld":"modules/spatial/src/main/java/org/apache/lucene/spatial/strategy/util/CachedDistanceValueSource#getValues(Map,AtomicReaderContext).mjava","sourceNew":"  @Override\n  public FunctionValues getValues(Map context, AtomicReaderContext readerContext) throws IOException {\n    final ShapeFieldCache<Point> cache =\n      provider.getCache(readerContext.reader());\n\n    return new FunctionValues() {\n      @Override\n      public float floatVal(int doc) {\n        return (float) doubleVal(doc);\n      }\n\n      @Override\n      public double doubleVal(int doc) {\n        List<Point> vals = cache.getShapes( doc );\n        if( vals != null ) {\n          double v = calculator.distance(from, vals.get(0));\n          for( int i=1; i<vals.size(); i++ ) {\n            v = Math.min(v, calculator.distance(from, vals.get(i)));\n          }\n          return v;\n        }\n        return Double.NaN; // ?? maybe max?\n      }\n\n      @Override\n      public String toString(int doc) {\n        return description() + \"=\" + floatVal(doc);\n      }\n    };\n  }\n\n","sourceOld":"  @Override\n  public FunctionValues getValues(Map context, AtomicReaderContext readerContext) throws IOException {\n    final ShapeFieldCache<Point> cache =\n      provider.getCache(readerContext.reader());\n\n    return new FunctionValues() {\n      @Override\n      public float floatVal(int doc) {\n        return (float) doubleVal(doc);\n      }\n\n      @Override\n      public double doubleVal(int doc) {\n        List<Point> vals = cache.getShapes( doc );\n        if( vals != null ) {\n          double v = calculator.distance(from, vals.get(0));\n          for( int i=1; i<vals.size(); i++ ) {\n            v = Math.min(v, calculator.distance(from, vals.get(i)));\n          }\n          return v;\n        }\n        return Double.NaN; // ?? maybe max?\n      }\n\n      @Override\n      public String toString(int doc) {\n        return description() + \"=\" + floatVal(doc);\n      }\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"33ee89d976c91275e5be5da438ca0977b1c5b90f","date":1329808149,"type":5,"author":"Ryan McKinley","isMerge":false,"pathNew":"modules/spatial-TEMP/src/java/org/apache/lucene/spatial/strategy/util/CachedDistanceValueSource#getValues(Map,AtomicReaderContext).mjava","pathOld":"modules/spatial/src/java/org/apache/lucene/spatial/strategy/util/CachedDistanceValueSource#getValues(Map,AtomicReaderContext).mjava","sourceNew":"  @Override\n  public FunctionValues getValues(Map context, AtomicReaderContext readerContext) throws IOException {\n    final ShapeFieldCache<Point> cache =\n      provider.getCache(readerContext.reader());\n\n    return new FunctionValues() {\n      @Override\n      public float floatVal(int doc) {\n        return (float) doubleVal(doc);\n      }\n\n      @Override\n      public double doubleVal(int doc) {\n        List<Point> vals = cache.getShapes( doc );\n        if( vals != null ) {\n          double v = calculator.distance(from, vals.get(0));\n          for( int i=1; i<vals.size(); i++ ) {\n            v = Math.min(v, calculator.distance(from, vals.get(i)));\n          }\n          return v;\n        }\n        return Double.NaN; // ?? maybe max?\n      }\n\n      @Override\n      public String toString(int doc) {\n        return description() + \"=\" + floatVal(doc);\n      }\n    };\n  }\n\n","sourceOld":"  @Override\n  public FunctionValues getValues(Map context, AtomicReaderContext readerContext) throws IOException {\n    final ShapeFieldCache<Point> cache =\n      provider.getCache(readerContext.reader());\n\n    return new FunctionValues() {\n      @Override\n      public float floatVal(int doc) {\n        return (float) doubleVal(doc);\n      }\n\n      @Override\n      public double doubleVal(int doc) {\n        List<Point> vals = cache.getShapes( doc );\n        if( vals != null ) {\n          double v = calculator.distance(from, vals.get(0));\n          for( int i=1; i<vals.size(); i++ ) {\n            v = Math.min(v, calculator.distance(from, vals.get(i)));\n          }\n          return v;\n        }\n        return Double.NaN; // ?? maybe max?\n      }\n\n      @Override\n      public String toString(int doc) {\n        return description() + \"=\" + floatVal(doc);\n      }\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6a24bff9b8b5990b2e39206b8742b848c8d88181","date":1330491455,"type":1,"author":"Ryan McKinley","isMerge":false,"pathNew":"modules/spatial/src/java/org/apache/lucene/spatial/strategy/util/CachedDistanceValueSource#getValues(Map,AtomicReaderContext).mjava","pathOld":"modules/spatial/strategy/src/java/org/apache/lucene/spatial/strategy/util/CachedDistanceValueSource#getValues(Map,AtomicReaderContext).mjava","sourceNew":"  @Override\n  public FunctionValues getValues(Map context, AtomicReaderContext readerContext) throws IOException {\n    final ShapeFieldCache<Point> cache =\n      provider.getCache(readerContext.reader());\n\n    return new FunctionValues() {\n      @Override\n      public float floatVal(int doc) {\n        return (float) doubleVal(doc);\n      }\n\n      @Override\n      public double doubleVal(int doc) {\n        List<Point> vals = cache.getShapes( doc );\n        if( vals != null ) {\n          double v = calculator.distance(from, vals.get(0));\n          for( int i=1; i<vals.size(); i++ ) {\n            v = Math.min(v, calculator.distance(from, vals.get(i)));\n          }\n          return v;\n        }\n        return Double.NaN; // ?? maybe max?\n      }\n\n      @Override\n      public String toString(int doc) {\n        return description() + \"=\" + floatVal(doc);\n      }\n    };\n  }\n\n","sourceOld":"  @Override\n  public FunctionValues getValues(Map context, AtomicReaderContext readerContext) throws IOException {\n    final ShapeFieldCache<Point> cache =\n      provider.getCache(readerContext.reader());\n\n    return new FunctionValues() {\n      @Override\n      public float floatVal(int doc) {\n        return (float) doubleVal(doc);\n      }\n\n      @Override\n      public double doubleVal(int doc) {\n        List<Point> vals = cache.getShapes( doc );\n        if( vals != null ) {\n          double v = calculator.distance(from, vals.get(0));\n          for( int i=1; i<vals.size(); i++ ) {\n            v = Math.min(v, calculator.distance(from, vals.get(i)));\n          }\n          return v;\n        }\n        return Double.NaN; // ?? maybe max?\n      }\n\n      @Override\n      public String toString(int doc) {\n        return description() + \"=\" + floatVal(doc);\n      }\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"de3ae51f6d7d658f4c6d1cc9b74cc4b5e45f294e","date":1330665960,"type":5,"author":"David Wayne Smiley","isMerge":false,"pathNew":"modules/spatial/src/java/org/apache/lucene/spatial/util/CachedDistanceValueSource#getValues(Map,AtomicReaderContext).mjava","pathOld":"modules/spatial/src/java/org/apache/lucene/spatial/strategy/util/CachedDistanceValueSource#getValues(Map,AtomicReaderContext).mjava","sourceNew":"  @Override\n  public FunctionValues getValues(Map context, AtomicReaderContext readerContext) throws IOException {\n    final ShapeFieldCache<Point> cache =\n      provider.getCache(readerContext.reader());\n\n    return new FunctionValues() {\n      @Override\n      public float floatVal(int doc) {\n        return (float) doubleVal(doc);\n      }\n\n      @Override\n      public double doubleVal(int doc) {\n        List<Point> vals = cache.getShapes( doc );\n        if( vals != null ) {\n          double v = calculator.distance(from, vals.get(0));\n          for( int i=1; i<vals.size(); i++ ) {\n            v = Math.min(v, calculator.distance(from, vals.get(i)));\n          }\n          return v;\n        }\n        return Double.NaN; // ?? maybe max?\n      }\n\n      @Override\n      public String toString(int doc) {\n        return description() + \"=\" + floatVal(doc);\n      }\n    };\n  }\n\n","sourceOld":"  @Override\n  public FunctionValues getValues(Map context, AtomicReaderContext readerContext) throws IOException {\n    final ShapeFieldCache<Point> cache =\n      provider.getCache(readerContext.reader());\n\n    return new FunctionValues() {\n      @Override\n      public float floatVal(int doc) {\n        return (float) doubleVal(doc);\n      }\n\n      @Override\n      public double doubleVal(int doc) {\n        List<Point> vals = cache.getShapes( doc );\n        if( vals != null ) {\n          double v = calculator.distance(from, vals.get(0));\n          for( int i=1; i<vals.size(); i++ ) {\n            v = Math.min(v, calculator.distance(from, vals.get(i)));\n          }\n          return v;\n        }\n        return Double.NaN; // ?? maybe max?\n      }\n\n      @Override\n      public String toString(int doc) {\n        return description() + \"=\" + floatVal(doc);\n      }\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"6a24bff9b8b5990b2e39206b8742b848c8d88181":["33ee89d976c91275e5be5da438ca0977b1c5b90f"],"935445a30e9e8dc0240a7c78efc73d08c2faa6a8":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"33ee89d976c91275e5be5da438ca0977b1c5b90f":["935445a30e9e8dc0240a7c78efc73d08c2faa6a8"],"de3ae51f6d7d658f4c6d1cc9b74cc4b5e45f294e":["6a24bff9b8b5990b2e39206b8742b848c8d88181"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"6a24bff9b8b5990b2e39206b8742b848c8d88181":["de3ae51f6d7d658f4c6d1cc9b74cc4b5e45f294e"],"935445a30e9e8dc0240a7c78efc73d08c2faa6a8":["33ee89d976c91275e5be5da438ca0977b1c5b90f"],"33ee89d976c91275e5be5da438ca0977b1c5b90f":["6a24bff9b8b5990b2e39206b8742b848c8d88181"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["935445a30e9e8dc0240a7c78efc73d08c2faa6a8","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"de3ae51f6d7d658f4c6d1cc9b74cc4b5e45f294e":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["de3ae51f6d7d658f4c6d1cc9b74cc4b5e45f294e","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}