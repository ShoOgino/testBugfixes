{"path":"solr/core/src/java/org/apache/solr/handler/SnapShooter#createSnapAsync(int,Consumer[NamedList]).mjava","commits":[{"id":"7c0c76f8855bd391c39890131d8dbd56c3fdcef0","date":1512185429,"type":0,"author":"Varun Thacker","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/SnapShooter#createSnapAsync(int,Consumer[NamedList]).mjava","pathOld":"/dev/null","sourceNew":"  public void createSnapAsync(final int numberToKeep, Consumer<NamedList> result) throws IOException {\n    IndexCommit indexCommit;\n    if (commitName != null) {\n      indexCommit = getIndexCommitFromName();\n    } else {\n      indexCommit = getIndexCommit();\n    }\n    createSnapAsync(indexCommit, numberToKeep, result);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["19f02bb04467ed179738a398a7da80bbbe161c16"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"670400747be2d99524159f3806d449ecfb0c2389","date":1512293281,"type":0,"author":"Karl Wright","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/handler/SnapShooter#createSnapAsync(int,Consumer[NamedList]).mjava","pathOld":"/dev/null","sourceNew":"  public void createSnapAsync(final int numberToKeep, Consumer<NamedList> result) throws IOException {\n    IndexCommit indexCommit;\n    if (commitName != null) {\n      indexCommit = getIndexCommitFromName();\n    } else {\n      indexCommit = getIndexCommit();\n    }\n    createSnapAsync(indexCommit, numberToKeep, result);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"19f02bb04467ed179738a398a7da80bbbe161c16","date":1573660732,"type":3,"author":"Chris Hostetter","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/SnapShooter#createSnapAsync(int,Consumer[NamedList]).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/SnapShooter#createSnapAsync(int,Consumer[NamedList]).mjava","sourceNew":"  public void createSnapAsync(final int numberToKeep, Consumer<NamedList> result) throws IOException {\n    //TODO should use Solr's ExecutorUtil\n    new Thread(() -> {\n      try {\n        result.accept(createSnapshot());\n      } catch (Exception e) {\n        log.error(\"Exception while creating snapshot\", e);\n        NamedList snapShootDetails = new NamedList<>();\n        snapShootDetails.add(\"exception\", e.getMessage());\n        result.accept(snapShootDetails);\n      }\n      if (snapshotName == null) {\n        try {\n          deleteOldBackups(numberToKeep);\n        } catch (IOException e) {\n          log.warn(\"Unable to delete old snapshots \", e);\n        }\n      }\n    }).start();\n\n  }\n\n","sourceOld":"  public void createSnapAsync(final int numberToKeep, Consumer<NamedList> result) throws IOException {\n    IndexCommit indexCommit;\n    if (commitName != null) {\n      indexCommit = getIndexCommitFromName();\n    } else {\n      indexCommit = getIndexCommit();\n    }\n    createSnapAsync(indexCommit, numberToKeep, result);\n  }\n\n","bugFix":["7c0c76f8855bd391c39890131d8dbd56c3fdcef0"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ec54bd926c45854b5a1599685b0f7d2bfbfe177f","date":1573838246,"type":3,"author":"Chris Hostetter","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/SnapShooter#createSnapAsync(int,Consumer[NamedList]).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/SnapShooter#createSnapAsync(int,Consumer[NamedList]).mjava","sourceNew":"  public void createSnapAsync(final int numberToKeep, Consumer<NamedList> result) throws IOException {\n    //TODO should use Solr's ExecutorUtil\n    new Thread(() -> {\n      NamedList snapShootDetails;\n      try {\n        snapShootDetails = createSnapshot();\n      } catch (Exception e) {\n        log.error(\"Exception while creating snapshot\", e);\n        snapShootDetails = new NamedList<>();\n        snapShootDetails.add(\"exception\", e.getMessage());\n      }\n      if (snapshotName == null) {\n        try {\n          deleteOldBackups(numberToKeep);\n        } catch (IOException e) {\n          log.warn(\"Unable to delete old snapshots \", e);\n        }\n      }\n      if (null != snapShootDetails) result.accept(snapShootDetails);\n    }).start();\n\n  }\n\n","sourceOld":"  public void createSnapAsync(final int numberToKeep, Consumer<NamedList> result) throws IOException {\n    //TODO should use Solr's ExecutorUtil\n    new Thread(() -> {\n      try {\n        result.accept(createSnapshot());\n      } catch (Exception e) {\n        log.error(\"Exception while creating snapshot\", e);\n        NamedList snapShootDetails = new NamedList<>();\n        snapShootDetails.add(\"exception\", e.getMessage());\n        result.accept(snapShootDetails);\n      }\n      if (snapshotName == null) {\n        try {\n          deleteOldBackups(numberToKeep);\n        } catch (IOException e) {\n          log.warn(\"Unable to delete old snapshots \", e);\n        }\n      }\n    }).start();\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2caf6d6e842e1a4e4ae68ec6dfa5139c31a84ec5","date":1591384964,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/SnapShooter#createSnapAsync(int,Consumer[NamedList]).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/SnapShooter#createSnapAsync(int,Consumer[NamedList]).mjava","sourceNew":"  @SuppressWarnings({\"unchecked\", \"rawtypes\"})\n  public void createSnapAsync(final int numberToKeep, Consumer<NamedList> result) throws IOException {\n    //TODO should use Solr's ExecutorUtil\n    new Thread(() -> {\n      NamedList snapShootDetails;\n      try {\n        snapShootDetails = createSnapshot();\n      } catch (Exception e) {\n        log.error(\"Exception while creating snapshot\", e);\n        snapShootDetails = new NamedList<>();\n        snapShootDetails.add(\"exception\", e.getMessage());\n      }\n      if (snapshotName == null) {\n        try {\n          deleteOldBackups(numberToKeep);\n        } catch (IOException e) {\n          log.warn(\"Unable to delete old snapshots \", e);\n        }\n      }\n      if (null != snapShootDetails) result.accept(snapShootDetails);\n    }).start();\n\n  }\n\n","sourceOld":"  public void createSnapAsync(final int numberToKeep, Consumer<NamedList> result) throws IOException {\n    //TODO should use Solr's ExecutorUtil\n    new Thread(() -> {\n      NamedList snapShootDetails;\n      try {\n        snapShootDetails = createSnapshot();\n      } catch (Exception e) {\n        log.error(\"Exception while creating snapshot\", e);\n        snapShootDetails = new NamedList<>();\n        snapShootDetails.add(\"exception\", e.getMessage());\n      }\n      if (snapshotName == null) {\n        try {\n          deleteOldBackups(numberToKeep);\n        } catch (IOException e) {\n          log.warn(\"Unable to delete old snapshots \", e);\n        }\n      }\n      if (null != snapShootDetails) result.accept(snapShootDetails);\n    }).start();\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"ec54bd926c45854b5a1599685b0f7d2bfbfe177f":["19f02bb04467ed179738a398a7da80bbbe161c16"],"19f02bb04467ed179738a398a7da80bbbe161c16":["670400747be2d99524159f3806d449ecfb0c2389"],"2caf6d6e842e1a4e4ae68ec6dfa5139c31a84ec5":["ec54bd926c45854b5a1599685b0f7d2bfbfe177f"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"7c0c76f8855bd391c39890131d8dbd56c3fdcef0":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"670400747be2d99524159f3806d449ecfb0c2389":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","7c0c76f8855bd391c39890131d8dbd56c3fdcef0"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["2caf6d6e842e1a4e4ae68ec6dfa5139c31a84ec5"]},"commit2Childs":{"ec54bd926c45854b5a1599685b0f7d2bfbfe177f":["2caf6d6e842e1a4e4ae68ec6dfa5139c31a84ec5"],"19f02bb04467ed179738a398a7da80bbbe161c16":["ec54bd926c45854b5a1599685b0f7d2bfbfe177f"],"2caf6d6e842e1a4e4ae68ec6dfa5139c31a84ec5":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["7c0c76f8855bd391c39890131d8dbd56c3fdcef0","670400747be2d99524159f3806d449ecfb0c2389"],"7c0c76f8855bd391c39890131d8dbd56c3fdcef0":["670400747be2d99524159f3806d449ecfb0c2389"],"670400747be2d99524159f3806d449ecfb0c2389":["19f02bb04467ed179738a398a7da80bbbe161c16"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}