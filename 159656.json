{"path":"lucene/core/src/test/org/apache/lucene/search/TestSort#setUp().mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestSort#setUp().mjava","pathOld":"lucene/src/test/org/apache/lucene/search/TestSort#setUp().mjava","sourceNew":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    \n    dvStringSorted = random.nextBoolean();\n    full = getFullIndex();\n    searchX = getXIndex();\n    searchY = getYIndex();\n    queryX = new TermQuery (new Term (\"contents\", \"x\"));\n    queryY = new TermQuery (new Term (\"contents\", \"y\"));\n    queryA = new TermQuery (new Term (\"contents\", \"a\"));\n    queryE = new TermQuery (new Term (\"contents\", \"e\"));\n    queryF = new TermQuery (new Term (\"contents\", \"f\"));\n    queryG = new TermQuery (new Term (\"contents\", \"g\"));\n    queryM = new TermQuery (new Term (\"contents\", \"m\"));\n    sort = new Sort();\n    \n  }\n\n","sourceOld":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    \n    dvStringSorted = random.nextBoolean();\n    full = getFullIndex();\n    searchX = getXIndex();\n    searchY = getYIndex();\n    queryX = new TermQuery (new Term (\"contents\", \"x\"));\n    queryY = new TermQuery (new Term (\"contents\", \"y\"));\n    queryA = new TermQuery (new Term (\"contents\", \"a\"));\n    queryE = new TermQuery (new Term (\"contents\", \"e\"));\n    queryF = new TermQuery (new Term (\"contents\", \"f\"));\n    queryG = new TermQuery (new Term (\"contents\", \"g\"));\n    queryM = new TermQuery (new Term (\"contents\", \"m\"));\n    sort = new Sort();\n    \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"629c38c4ae4e303d0617e05fbfe508140b32f0a3","date":1334500904,"type":3,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestSort#setUp().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestSort#setUp().mjava","sourceNew":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    \n    dvStringSorted = random().nextBoolean();\n    full = getFullIndex();\n    searchX = getXIndex();\n    searchY = getYIndex();\n    queryX = new TermQuery (new Term (\"contents\", \"x\"));\n    queryY = new TermQuery (new Term (\"contents\", \"y\"));\n    queryA = new TermQuery (new Term (\"contents\", \"a\"));\n    queryE = new TermQuery (new Term (\"contents\", \"e\"));\n    queryF = new TermQuery (new Term (\"contents\", \"f\"));\n    queryG = new TermQuery (new Term (\"contents\", \"g\"));\n    queryM = new TermQuery (new Term (\"contents\", \"m\"));\n    sort = new Sort();\n    \n  }\n\n","sourceOld":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    \n    dvStringSorted = random.nextBoolean();\n    full = getFullIndex();\n    searchX = getXIndex();\n    searchY = getYIndex();\n    queryX = new TermQuery (new Term (\"contents\", \"x\"));\n    queryY = new TermQuery (new Term (\"contents\", \"y\"));\n    queryA = new TermQuery (new Term (\"contents\", \"a\"));\n    queryE = new TermQuery (new Term (\"contents\", \"e\"));\n    queryF = new TermQuery (new Term (\"contents\", \"f\"));\n    queryG = new TermQuery (new Term (\"contents\", \"g\"));\n    queryM = new TermQuery (new Term (\"contents\", \"m\"));\n    sort = new Sort();\n    \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"3e29774db46ad98ca4a8d7fcbfab633ebc01f358","date":1355170812,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestSort#setUp().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestSort#setUp().mjava","sourceNew":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    \n    dvStringSorted = random().nextBoolean();\n    full = getFullIndex();\n    searchX = getXIndex();\n    searchY = getYIndex();\n    queryX = new TermQuery(new Term(\"contents\", \"x\"));\n    queryY = new TermQuery(new Term(\"contents\", \"y\"));\n    queryA = new TermQuery(new Term(\"contents\", \"a\"));\n    queryE = new TermQuery(new Term(\"contents\", \"e\"));\n    queryF = new TermQuery(new Term(\"contents\", \"f\"));\n    queryG = new TermQuery(new Term(\"contents\", \"g\"));\n    queryM = new TermQuery(new Term(\"contents\", \"m\"));\n    sort = new Sort();\n    \n  }\n\n","sourceOld":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    \n    dvStringSorted = random().nextBoolean();\n    full = getFullIndex();\n    searchX = getXIndex();\n    searchY = getYIndex();\n    queryX = new TermQuery (new Term (\"contents\", \"x\"));\n    queryY = new TermQuery (new Term (\"contents\", \"y\"));\n    queryA = new TermQuery (new Term (\"contents\", \"a\"));\n    queryE = new TermQuery (new Term (\"contents\", \"e\"));\n    queryF = new TermQuery (new Term (\"contents\", \"f\"));\n    queryG = new TermQuery (new Term (\"contents\", \"g\"));\n    queryM = new TermQuery (new Term (\"contents\", \"m\"));\n    sort = new Sort();\n    \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"d4d69c535930b5cce125cff868d40f6373dc27d4","date":1360270101,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestSort#setUp().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestSort#setUp().mjava","sourceNew":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    \n    dvStringSorted = random().nextBoolean();\n    full = getFullIndex();\n    searchX = getXIndex();\n    searchY = getYIndex();\n    queryX = new TermQuery(new Term(\"contents\", \"x\"));\n    queryY = new TermQuery(new Term(\"contents\", \"y\"));\n    queryA = new TermQuery(new Term(\"contents\", \"a\"));\n    queryE = new TermQuery(new Term(\"contents\", \"e\"));\n    queryF = new TermQuery(new Term(\"contents\", \"f\"));\n    queryG = new TermQuery(new Term(\"contents\", \"g\"));\n    queryM = new TermQuery(new Term(\"contents\", \"m\"));\n    sort = new Sort();\n    \n  }\n\n","sourceOld":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    \n    dvStringSorted = random().nextBoolean();\n    full = getFullIndex();\n    searchX = getXIndex();\n    searchY = getYIndex();\n    queryX = new TermQuery (new Term (\"contents\", \"x\"));\n    queryY = new TermQuery (new Term (\"contents\", \"y\"));\n    queryA = new TermQuery (new Term (\"contents\", \"a\"));\n    queryE = new TermQuery (new Term (\"contents\", \"e\"));\n    queryF = new TermQuery (new Term (\"contents\", \"f\"));\n    queryG = new TermQuery (new Term (\"contents\", \"g\"));\n    queryM = new TermQuery (new Term (\"contents\", \"m\"));\n    sort = new Sort();\n    \n  }\n\n","bugFix":["f5457736ee10c96b4fcd88997461006c8585ac24","ff1421d1974cfd5072e195bbb63592657da2f66e","63bc3238545c6012bd44f5d294077997f236bc4e"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3990ef6ed195a54c0e22c12fcf0103c2a729596e","date":1360961934,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestSort#setUp().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestSort#setUp().mjava","sourceNew":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    \n    dvStringSorted = random().nextBoolean();\n    full = getFullIndex();\n    searchX = getXIndex();\n    searchY = getYIndex();\n    queryX = new TermQuery(new Term(\"contents\", \"x\"));\n    queryA = new TermQuery(new Term(\"contents\", \"a\"));\n    queryE = new TermQuery(new Term(\"contents\", \"e\"));\n    queryF = new TermQuery(new Term(\"contents\", \"f\"));\n    queryG = new TermQuery(new Term(\"contents\", \"g\"));\n    sort = new Sort();\n    \n  }\n\n","sourceOld":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    \n    dvStringSorted = random().nextBoolean();\n    full = getFullIndex();\n    searchX = getXIndex();\n    searchY = getYIndex();\n    queryX = new TermQuery(new Term(\"contents\", \"x\"));\n    queryY = new TermQuery(new Term(\"contents\", \"y\"));\n    queryA = new TermQuery(new Term(\"contents\", \"a\"));\n    queryE = new TermQuery(new Term(\"contents\", \"e\"));\n    queryF = new TermQuery(new Term(\"contents\", \"f\"));\n    queryG = new TermQuery(new Term(\"contents\", \"g\"));\n    queryM = new TermQuery(new Term(\"contents\", \"m\"));\n    sort = new Sort();\n    \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5f183729ece15402db94402d482f29ebac4f7f54","date":1360963151,"type":4,"author":"Robert Muir","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestSort#setUp().mjava","sourceNew":null,"sourceOld":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    \n    dvStringSorted = random().nextBoolean();\n    full = getFullIndex();\n    searchX = getXIndex();\n    searchY = getYIndex();\n    queryX = new TermQuery(new Term(\"contents\", \"x\"));\n    queryA = new TermQuery(new Term(\"contents\", \"a\"));\n    queryE = new TermQuery(new Term(\"contents\", \"e\"));\n    queryF = new TermQuery(new Term(\"contents\", \"f\"));\n    queryG = new TermQuery(new Term(\"contents\", \"g\"));\n    sort = new Sort();\n    \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"95303ff3749680c743b9425f9cf99e6e4065e8a8","date":1361061922,"type":4,"author":"Robert Muir","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestSort#setUp().mjava","sourceNew":null,"sourceOld":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    \n    dvStringSorted = random().nextBoolean();\n    full = getFullIndex();\n    searchX = getXIndex();\n    searchY = getYIndex();\n    queryX = new TermQuery(new Term(\"contents\", \"x\"));\n    queryY = new TermQuery(new Term(\"contents\", \"y\"));\n    queryA = new TermQuery(new Term(\"contents\", \"a\"));\n    queryE = new TermQuery(new Term(\"contents\", \"e\"));\n    queryF = new TermQuery(new Term(\"contents\", \"f\"));\n    queryG = new TermQuery(new Term(\"contents\", \"g\"));\n    queryM = new TermQuery(new Term(\"contents\", \"m\"));\n    sort = new Sort();\n    \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"5f183729ece15402db94402d482f29ebac4f7f54":["3990ef6ed195a54c0e22c12fcf0103c2a729596e"],"d4d69c535930b5cce125cff868d40f6373dc27d4":["629c38c4ae4e303d0617e05fbfe508140b32f0a3","3e29774db46ad98ca4a8d7fcbfab633ebc01f358"],"95303ff3749680c743b9425f9cf99e6e4065e8a8":["d4d69c535930b5cce125cff868d40f6373dc27d4","5f183729ece15402db94402d482f29ebac4f7f54"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3990ef6ed195a54c0e22c12fcf0103c2a729596e":["d4d69c535930b5cce125cff868d40f6373dc27d4"],"629c38c4ae4e303d0617e05fbfe508140b32f0a3":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"3e29774db46ad98ca4a8d7fcbfab633ebc01f358":["629c38c4ae4e303d0617e05fbfe508140b32f0a3"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["5f183729ece15402db94402d482f29ebac4f7f54"]},"commit2Childs":{"5f183729ece15402db94402d482f29ebac4f7f54":["95303ff3749680c743b9425f9cf99e6e4065e8a8","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"d4d69c535930b5cce125cff868d40f6373dc27d4":["95303ff3749680c743b9425f9cf99e6e4065e8a8","3990ef6ed195a54c0e22c12fcf0103c2a729596e"],"95303ff3749680c743b9425f9cf99e6e4065e8a8":[],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["629c38c4ae4e303d0617e05fbfe508140b32f0a3"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"3990ef6ed195a54c0e22c12fcf0103c2a729596e":["5f183729ece15402db94402d482f29ebac4f7f54"],"629c38c4ae4e303d0617e05fbfe508140b32f0a3":["d4d69c535930b5cce125cff868d40f6373dc27d4","3e29774db46ad98ca4a8d7fcbfab633ebc01f358"],"3e29774db46ad98ca4a8d7fcbfab633ebc01f358":["d4d69c535930b5cce125cff868d40f6373dc27d4"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["95303ff3749680c743b9425f9cf99e6e4065e8a8","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}