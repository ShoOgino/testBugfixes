{"path":"solr/core/src/java/org/apache/solr/response/XSLTResponseWriter#write(Writer,SolrQueryRequest,SolrQueryResponse).mjava","commits":[{"id":"c903c3d15906a3da96b8c0c2fb704491005fdbdb","date":1453508227,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/response/XSLTResponseWriter#write(Writer,SolrQueryRequest,SolrQueryResponse).mjava","pathOld":"solr/src/java/org/apache/solr/response/XSLTResponseWriter#write(Writer,SolrQueryRequest,SolrQueryResponse).mjava","sourceNew":"  public void write(Writer writer, SolrQueryRequest request, SolrQueryResponse response) throws IOException {\n    final Transformer t = getTransformer(request);\n    \n    // capture the output of the XMLWriter\n    final CharArrayWriter w = new CharArrayWriter();\n    XMLWriter.writeResponse(w,request,response);\n    \n    // and write transformed result to our writer\n    final Reader r = new BufferedReader(new CharArrayReader(w.toCharArray()));\n    final StreamSource source = new StreamSource(r);\n    final StreamResult result = new StreamResult(writer);\n    try {\n      t.transform(source, result);\n    } catch(TransformerException te) {\n      final IOException ioe = new IOException(\"XSLT transformation error\");\n      ioe.initCause(te);\n      throw ioe;\n    }\n  }\n\n","sourceOld":"  public void write(Writer writer, SolrQueryRequest request, SolrQueryResponse response) throws IOException {\n    final Transformer t = getTransformer(request);\n    \n    // capture the output of the XMLWriter\n    final CharArrayWriter w = new CharArrayWriter();\n    XMLWriter.writeResponse(w,request,response);\n    \n    // and write transformed result to our writer\n    final Reader r = new BufferedReader(new CharArrayReader(w.toCharArray()));\n    final StreamSource source = new StreamSource(r);\n    final StreamResult result = new StreamResult(writer);\n    try {\n      t.transform(source, result);\n    } catch(TransformerException te) {\n      final IOException ioe = new IOException(\"XSLT transformation error\");\n      ioe.initCause(te);\n      throw ioe;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a258fbb26824fd104ed795e5d9033d2d040049ee","date":1453508252,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/response/XSLTResponseWriter#write(Writer,SolrQueryRequest,SolrQueryResponse).mjava","pathOld":"solr/src/java/org/apache/solr/response/XSLTResponseWriter#write(Writer,SolrQueryRequest,SolrQueryResponse).mjava","sourceNew":"  public void write(Writer writer, SolrQueryRequest request, SolrQueryResponse response) throws IOException {\n    final Transformer t = getTransformer(request);\n    \n    // capture the output of the XMLWriter\n    final CharArrayWriter w = new CharArrayWriter();\n    XMLWriter.writeResponse(w,request,response);\n    \n    // and write transformed result to our writer\n    final Reader r = new BufferedReader(new CharArrayReader(w.toCharArray()));\n    final StreamSource source = new StreamSource(r);\n    final StreamResult result = new StreamResult(writer);\n    try {\n      t.transform(source, result);\n    } catch(TransformerException te) {\n      final IOException ioe = new IOException(\"XSLT transformation error\");\n      ioe.initCause(te);\n      throw ioe;\n    }\n  }\n\n","sourceOld":"  public void write(Writer writer, SolrQueryRequest request, SolrQueryResponse response) throws IOException {\n    final Transformer t = getTransformer(request);\n    \n    // capture the output of the XMLWriter\n    final CharArrayWriter w = new CharArrayWriter();\n    XMLWriter.writeResponse(w,request,response);\n    \n    // and write transformed result to our writer\n    final Reader r = new BufferedReader(new CharArrayReader(w.toCharArray()));\n    final StreamSource source = new StreamSource(r);\n    final StreamResult result = new StreamResult(writer);\n    try {\n      t.transform(source, result);\n    } catch(TransformerException te) {\n      final IOException ioe = new IOException(\"XSLT transformation error\");\n      ioe.initCause(te);\n      throw ioe;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/response/XSLTResponseWriter#write(Writer,SolrQueryRequest,SolrQueryResponse).mjava","pathOld":"solr/src/java/org/apache/solr/response/XSLTResponseWriter#write(Writer,SolrQueryRequest,SolrQueryResponse).mjava","sourceNew":"  public void write(Writer writer, SolrQueryRequest request, SolrQueryResponse response) throws IOException {\n    final Transformer t = getTransformer(request);\n    \n    // capture the output of the XMLWriter\n    final CharArrayWriter w = new CharArrayWriter();\n    XMLWriter.writeResponse(w,request,response);\n    \n    // and write transformed result to our writer\n    final Reader r = new BufferedReader(new CharArrayReader(w.toCharArray()));\n    final StreamSource source = new StreamSource(r);\n    final StreamResult result = new StreamResult(writer);\n    try {\n      t.transform(source, result);\n    } catch(TransformerException te) {\n      final IOException ioe = new IOException(\"XSLT transformation error\");\n      ioe.initCause(te);\n      throw ioe;\n    }\n  }\n\n","sourceOld":"  public void write(Writer writer, SolrQueryRequest request, SolrQueryResponse response) throws IOException {\n    final Transformer t = getTransformer(request);\n    \n    // capture the output of the XMLWriter\n    final CharArrayWriter w = new CharArrayWriter();\n    XMLWriter.writeResponse(w,request,response);\n    \n    // and write transformed result to our writer\n    final Reader r = new BufferedReader(new CharArrayReader(w.toCharArray()));\n    final StreamSource source = new StreamSource(r);\n    final StreamResult result = new StreamResult(writer);\n    try {\n      t.transform(source, result);\n    } catch(TransformerException te) {\n      final IOException ioe = new IOException(\"XSLT transformation error\");\n      ioe.initCause(te);\n      throw ioe;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7530de27b87b961b51f01bd1299b7004d46e8823","date":1355236261,"type":3,"author":"Shai Erera","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/response/XSLTResponseWriter#write(Writer,SolrQueryRequest,SolrQueryResponse).mjava","pathOld":"solr/core/src/java/org/apache/solr/response/XSLTResponseWriter#write(Writer,SolrQueryRequest,SolrQueryResponse).mjava","sourceNew":"  @Override\n  public void write(Writer writer, SolrQueryRequest request, SolrQueryResponse response) throws IOException {\n    final Transformer t = getTransformer(request);\n    \n    // capture the output of the XMLWriter\n    final CharArrayWriter w = new CharArrayWriter();\n    XMLWriter.writeResponse(w,request,response);\n    \n    // and write transformed result to our writer\n    final Reader r = new BufferedReader(new CharArrayReader(w.toCharArray()));\n    final StreamSource source = new StreamSource(r);\n    final StreamResult result = new StreamResult(writer);\n    try {\n      t.transform(source, result);\n    } catch(TransformerException te) {\n      final IOException ioe = new IOException(\"XSLT transformation error\");\n      ioe.initCause(te);\n      throw ioe;\n    }\n  }\n\n","sourceOld":"  public void write(Writer writer, SolrQueryRequest request, SolrQueryResponse response) throws IOException {\n    final Transformer t = getTransformer(request);\n    \n    // capture the output of the XMLWriter\n    final CharArrayWriter w = new CharArrayWriter();\n    XMLWriter.writeResponse(w,request,response);\n    \n    // and write transformed result to our writer\n    final Reader r = new BufferedReader(new CharArrayReader(w.toCharArray()));\n    final StreamSource source = new StreamSource(r);\n    final StreamResult result = new StreamResult(writer);\n    try {\n      t.transform(source, result);\n    } catch(TransformerException te) {\n      final IOException ioe = new IOException(\"XSLT transformation error\");\n      ioe.initCause(te);\n      throw ioe;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d3fcb70cf561547c7bb1506e0cf32ca7b1287064","date":1357616416,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/response/XSLTResponseWriter#write(Writer,SolrQueryRequest,SolrQueryResponse).mjava","pathOld":"solr/core/src/java/org/apache/solr/response/XSLTResponseWriter#write(Writer,SolrQueryRequest,SolrQueryResponse).mjava","sourceNew":"  @Override\n  public void write(Writer writer, SolrQueryRequest request, SolrQueryResponse response) throws IOException {\n    final Transformer t = getTransformer(request);\n    \n    // capture the output of the XMLWriter\n    final CharArrayWriter w = new CharArrayWriter();\n    XMLWriter.writeResponse(w,request,response);\n    \n    // and write transformed result to our writer\n    final Reader r = new BufferedReader(new CharArrayReader(w.toCharArray()));\n    final StreamSource source = new StreamSource(r);\n    final StreamResult result = new StreamResult(writer);\n    try {\n      t.transform(source, result);\n    } catch(TransformerException te) {\n      final IOException ioe = new IOException(\"XSLT transformation error\");\n      ioe.initCause(te);\n      throw ioe;\n    }\n  }\n\n","sourceOld":"  public void write(Writer writer, SolrQueryRequest request, SolrQueryResponse response) throws IOException {\n    final Transformer t = getTransformer(request);\n    \n    // capture the output of the XMLWriter\n    final CharArrayWriter w = new CharArrayWriter();\n    XMLWriter.writeResponse(w,request,response);\n    \n    // and write transformed result to our writer\n    final Reader r = new BufferedReader(new CharArrayReader(w.toCharArray()));\n    final StreamSource source = new StreamSource(r);\n    final StreamResult result = new StreamResult(writer);\n    try {\n      t.transform(source, result);\n    } catch(TransformerException te) {\n      final IOException ioe = new IOException(\"XSLT transformation error\");\n      ioe.initCause(te);\n      throw ioe;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3de2e9a536c4115b4f53f14b6ab496ba3af1840c","date":1400252137,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/response/XSLTResponseWriter#write(Writer,SolrQueryRequest,SolrQueryResponse).mjava","pathOld":"solr/core/src/java/org/apache/solr/response/XSLTResponseWriter#write(Writer,SolrQueryRequest,SolrQueryResponse).mjava","sourceNew":"  @Override\n  public void write(Writer writer, SolrQueryRequest request, SolrQueryResponse response) throws IOException {\n    final Transformer t = getTransformer(request);\n    \n    // capture the output of the XMLWriter\n    final CharArrayWriter w = new CharArrayWriter();\n    XMLWriter.writeResponse(w,request,response);\n    \n    // and write transformed result to our writer\n    final Reader r = new BufferedReader(new CharArrayReader(w.toCharArray()));\n    final StreamSource source = new StreamSource(r);\n    final StreamResult result = new StreamResult(writer);\n    try {\n      t.transform(source, result);\n    } catch(TransformerException te) {\n      throw new IOException(\"XSLT transformation error\", te);\n    }\n  }\n\n","sourceOld":"  @Override\n  public void write(Writer writer, SolrQueryRequest request, SolrQueryResponse response) throws IOException {\n    final Transformer t = getTransformer(request);\n    \n    // capture the output of the XMLWriter\n    final CharArrayWriter w = new CharArrayWriter();\n    XMLWriter.writeResponse(w,request,response);\n    \n    // and write transformed result to our writer\n    final Reader r = new BufferedReader(new CharArrayReader(w.toCharArray()));\n    final StreamSource source = new StreamSource(r);\n    final StreamResult result = new StreamResult(writer);\n    try {\n      t.transform(source, result);\n    } catch(TransformerException te) {\n      final IOException ioe = new IOException(\"XSLT transformation error\");\n      ioe.initCause(te);\n      throw ioe;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ccc69a67d5c846a04c7f71e28cb1914e3af895f3","date":1400252660,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/response/XSLTResponseWriter#write(Writer,SolrQueryRequest,SolrQueryResponse).mjava","pathOld":"solr/core/src/java/org/apache/solr/response/XSLTResponseWriter#write(Writer,SolrQueryRequest,SolrQueryResponse).mjava","sourceNew":"  @Override\n  public void write(Writer writer, SolrQueryRequest request, SolrQueryResponse response) throws IOException {\n    final Transformer t = getTransformer(request);\n    \n    // capture the output of the XMLWriter\n    final CharArrayWriter w = new CharArrayWriter();\n    XMLWriter.writeResponse(w,request,response);\n    \n    // and write transformed result to our writer\n    final Reader r = new BufferedReader(new CharArrayReader(w.toCharArray()));\n    final StreamSource source = new StreamSource(r);\n    final StreamResult result = new StreamResult(writer);\n    try {\n      t.transform(source, result);\n    } catch(TransformerException te) {\n      throw new IOException(\"XSLT transformation error\", te);\n    }\n  }\n\n","sourceOld":"  @Override\n  public void write(Writer writer, SolrQueryRequest request, SolrQueryResponse response) throws IOException {\n    final Transformer t = getTransformer(request);\n    \n    // capture the output of the XMLWriter\n    final CharArrayWriter w = new CharArrayWriter();\n    XMLWriter.writeResponse(w,request,response);\n    \n    // and write transformed result to our writer\n    final Reader r = new BufferedReader(new CharArrayReader(w.toCharArray()));\n    final StreamSource source = new StreamSource(r);\n    final StreamResult result = new StreamResult(writer);\n    try {\n      t.transform(source, result);\n    } catch(TransformerException te) {\n      final IOException ioe = new IOException(\"XSLT transformation error\");\n      ioe.initCause(te);\n      throw ioe;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"56572ec06f1407c066d6b7399413178b33176cd8","date":1400495675,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/response/XSLTResponseWriter#write(Writer,SolrQueryRequest,SolrQueryResponse).mjava","pathOld":"solr/core/src/java/org/apache/solr/response/XSLTResponseWriter#write(Writer,SolrQueryRequest,SolrQueryResponse).mjava","sourceNew":"  @Override\n  public void write(Writer writer, SolrQueryRequest request, SolrQueryResponse response) throws IOException {\n    final Transformer t = getTransformer(request);\n    \n    // capture the output of the XMLWriter\n    final CharArrayWriter w = new CharArrayWriter();\n    XMLWriter.writeResponse(w,request,response);\n    \n    // and write transformed result to our writer\n    final Reader r = new BufferedReader(new CharArrayReader(w.toCharArray()));\n    final StreamSource source = new StreamSource(r);\n    final StreamResult result = new StreamResult(writer);\n    try {\n      t.transform(source, result);\n    } catch(TransformerException te) {\n      throw new IOException(\"XSLT transformation error\", te);\n    }\n  }\n\n","sourceOld":"  @Override\n  public void write(Writer writer, SolrQueryRequest request, SolrQueryResponse response) throws IOException {\n    final Transformer t = getTransformer(request);\n    \n    // capture the output of the XMLWriter\n    final CharArrayWriter w = new CharArrayWriter();\n    XMLWriter.writeResponse(w,request,response);\n    \n    // and write transformed result to our writer\n    final Reader r = new BufferedReader(new CharArrayReader(w.toCharArray()));\n    final StreamSource source = new StreamSource(r);\n    final StreamResult result = new StreamResult(writer);\n    try {\n      t.transform(source, result);\n    } catch(TransformerException te) {\n      final IOException ioe = new IOException(\"XSLT transformation error\");\n      ioe.initCause(te);\n      throw ioe;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"d3fcb70cf561547c7bb1506e0cf32ca7b1287064":["c26f00b574427b55127e869b935845554afde1fa","7530de27b87b961b51f01bd1299b7004d46e8823"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"c26f00b574427b55127e869b935845554afde1fa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","c903c3d15906a3da96b8c0c2fb704491005fdbdb"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a258fbb26824fd104ed795e5d9033d2d040049ee":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"56572ec06f1407c066d6b7399413178b33176cd8":["7530de27b87b961b51f01bd1299b7004d46e8823","3de2e9a536c4115b4f53f14b6ab496ba3af1840c"],"3de2e9a536c4115b4f53f14b6ab496ba3af1840c":["7530de27b87b961b51f01bd1299b7004d46e8823"],"7530de27b87b961b51f01bd1299b7004d46e8823":["c26f00b574427b55127e869b935845554afde1fa"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3de2e9a536c4115b4f53f14b6ab496ba3af1840c"],"ccc69a67d5c846a04c7f71e28cb1914e3af895f3":["7530de27b87b961b51f01bd1299b7004d46e8823","3de2e9a536c4115b4f53f14b6ab496ba3af1840c"]},"commit2Childs":{"d3fcb70cf561547c7bb1506e0cf32ca7b1287064":[],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["c26f00b574427b55127e869b935845554afde1fa"],"c26f00b574427b55127e869b935845554afde1fa":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","7530de27b87b961b51f01bd1299b7004d46e8823"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c903c3d15906a3da96b8c0c2fb704491005fdbdb","c26f00b574427b55127e869b935845554afde1fa","a258fbb26824fd104ed795e5d9033d2d040049ee"],"a258fbb26824fd104ed795e5d9033d2d040049ee":[],"56572ec06f1407c066d6b7399413178b33176cd8":[],"7530de27b87b961b51f01bd1299b7004d46e8823":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","56572ec06f1407c066d6b7399413178b33176cd8","3de2e9a536c4115b4f53f14b6ab496ba3af1840c","ccc69a67d5c846a04c7f71e28cb1914e3af895f3"],"3de2e9a536c4115b4f53f14b6ab496ba3af1840c":["56572ec06f1407c066d6b7399413178b33176cd8","cd5edd1f2b162a5cfa08efd17851a07373a96817","ccc69a67d5c846a04c7f71e28cb1914e3af895f3"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"ccc69a67d5c846a04c7f71e28cb1914e3af895f3":[]},"heads":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","a258fbb26824fd104ed795e5d9033d2d040049ee","56572ec06f1407c066d6b7399413178b33176cd8","cd5edd1f2b162a5cfa08efd17851a07373a96817","ccc69a67d5c846a04c7f71e28cb1914e3af895f3"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}