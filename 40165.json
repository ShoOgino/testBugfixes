{"path":"solr/core/src/java/org/apache/solr/core/RequestParams#setParams(String,ParamSet).mjava","commits":[{"id":"b5991832ae4bac45cecfff0fc33125aeac823d3d","date":1456229449,"type":0,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/RequestParams#setParams(String,ParamSet).mjava","pathOld":"/dev/null","sourceNew":"  public RequestParams setParams(String name, ParamSet paramSet) {\n    Map deepCopy = getDeepCopy(data, 3);\n    Map p = (Map) deepCopy.get(NAME);\n    if (p == null) deepCopy.put(NAME, p = new LinkedHashMap());\n    if (paramSet == null) p.remove(name);\n    else p.put(name, paramSet.toMap());\n    return new RequestParams(deepCopy, znodeVersion);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a5296efc4b319f5647b606629c093a94b23692c6","date":1456267155,"type":0,"author":"Mike McCandless","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/core/RequestParams#setParams(String,ParamSet).mjava","pathOld":"/dev/null","sourceNew":"  public RequestParams setParams(String name, ParamSet paramSet) {\n    Map deepCopy = getDeepCopy(data, 3);\n    Map p = (Map) deepCopy.get(NAME);\n    if (p == null) deepCopy.put(NAME, p = new LinkedHashMap());\n    if (paramSet == null) p.remove(name);\n    else p.put(name, paramSet.toMap());\n    return new RequestParams(deepCopy, znodeVersion);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1f1f31880696765d6aec499d3b01fa501129af45","date":1474287317,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/RequestParams#setParams(String,ParamSet).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/RequestParams#setParams(String,ParamSet).mjava","sourceNew":"  public RequestParams setParams(String name, ParamSet paramSet) {\n    Map deepCopy = getDeepCopy(data, 3);\n    Map p = (Map) deepCopy.get(NAME);\n    if (p == null) deepCopy.put(NAME, p = new LinkedHashMap());\n    if (paramSet == null) p.remove(name);\n    else p.put(name, paramSet.toMap(new LinkedHashMap<>()));\n    return new RequestParams(deepCopy, znodeVersion);\n  }\n\n","sourceOld":"  public RequestParams setParams(String name, ParamSet paramSet) {\n    Map deepCopy = getDeepCopy(data, 3);\n    Map p = (Map) deepCopy.get(NAME);\n    if (p == null) deepCopy.put(NAME, p = new LinkedHashMap());\n    if (paramSet == null) p.remove(name);\n    else p.put(name, paramSet.toMap());\n    return new RequestParams(deepCopy, znodeVersion);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"17e5da53e4e5bd659e22add9bba1cfa222e7e30d","date":1475435902,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/core/RequestParams#setParams(String,ParamSet).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/RequestParams#setParams(String,ParamSet).mjava","sourceNew":"  public RequestParams setParams(String name, ParamSet paramSet) {\n    Map deepCopy = getDeepCopy(data, 3);\n    Map p = (Map) deepCopy.get(NAME);\n    if (p == null) deepCopy.put(NAME, p = new LinkedHashMap());\n    if (paramSet == null) p.remove(name);\n    else p.put(name, paramSet.toMap(new LinkedHashMap<>()));\n    return new RequestParams(deepCopy, znodeVersion);\n  }\n\n","sourceOld":"  public RequestParams setParams(String name, ParamSet paramSet) {\n    Map deepCopy = getDeepCopy(data, 3);\n    Map p = (Map) deepCopy.get(NAME);\n    if (p == null) deepCopy.put(NAME, p = new LinkedHashMap());\n    if (paramSet == null) p.remove(name);\n    else p.put(name, paramSet.toMap());\n    return new RequestParams(deepCopy, znodeVersion);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/core/RequestParams#setParams(String,ParamSet).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/RequestParams#setParams(String,ParamSet).mjava","sourceNew":"  public RequestParams setParams(String name, ParamSet paramSet) {\n    Map deepCopy = getDeepCopy(data, 3);\n    Map p = (Map) deepCopy.get(NAME);\n    if (p == null) deepCopy.put(NAME, p = new LinkedHashMap());\n    if (paramSet == null) p.remove(name);\n    else p.put(name, paramSet.toMap(new LinkedHashMap<>()));\n    return new RequestParams(deepCopy, znodeVersion);\n  }\n\n","sourceOld":"  public RequestParams setParams(String name, ParamSet paramSet) {\n    Map deepCopy = getDeepCopy(data, 3);\n    Map p = (Map) deepCopy.get(NAME);\n    if (p == null) deepCopy.put(NAME, p = new LinkedHashMap());\n    if (paramSet == null) p.remove(name);\n    else p.put(name, paramSet.toMap());\n    return new RequestParams(deepCopy, znodeVersion);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"75237075d8425856bf4bbf52a6be4f9162b8187d","date":1591103291,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/RequestParams#setParams(String,ParamSet).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/RequestParams#setParams(String,ParamSet).mjava","sourceNew":"  @SuppressWarnings({\"unchecked\", \"rawtypes\"})\n  public RequestParams setParams(String name, ParamSet paramSet) {\n    Map deepCopy = getDeepCopy(data, 3);\n    Map p = (Map) deepCopy.get(NAME);\n    if (p == null) deepCopy.put(NAME, p = new LinkedHashMap());\n    if (paramSet == null) p.remove(name);\n    else p.put(name, paramSet.toMap(new LinkedHashMap<>()));\n    return new RequestParams(deepCopy, znodeVersion);\n  }\n\n","sourceOld":"  public RequestParams setParams(String name, ParamSet paramSet) {\n    Map deepCopy = getDeepCopy(data, 3);\n    Map p = (Map) deepCopy.get(NAME);\n    if (p == null) deepCopy.put(NAME, p = new LinkedHashMap());\n    if (paramSet == null) p.remove(name);\n    else p.put(name, paramSet.toMap(new LinkedHashMap<>()));\n    return new RequestParams(deepCopy, znodeVersion);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"75237075d8425856bf4bbf52a6be4f9162b8187d":["17e5da53e4e5bd659e22add9bba1cfa222e7e30d"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"17e5da53e4e5bd659e22add9bba1cfa222e7e30d":["b5991832ae4bac45cecfff0fc33125aeac823d3d","1f1f31880696765d6aec499d3b01fa501129af45"],"1f1f31880696765d6aec499d3b01fa501129af45":["b5991832ae4bac45cecfff0fc33125aeac823d3d"],"a5296efc4b319f5647b606629c093a94b23692c6":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","b5991832ae4bac45cecfff0fc33125aeac823d3d"],"b5991832ae4bac45cecfff0fc33125aeac823d3d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["b5991832ae4bac45cecfff0fc33125aeac823d3d","17e5da53e4e5bd659e22add9bba1cfa222e7e30d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["75237075d8425856bf4bbf52a6be4f9162b8187d"]},"commit2Childs":{"75237075d8425856bf4bbf52a6be4f9162b8187d":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"17e5da53e4e5bd659e22add9bba1cfa222e7e30d":["75237075d8425856bf4bbf52a6be4f9162b8187d","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["a5296efc4b319f5647b606629c093a94b23692c6","b5991832ae4bac45cecfff0fc33125aeac823d3d"],"1f1f31880696765d6aec499d3b01fa501129af45":["17e5da53e4e5bd659e22add9bba1cfa222e7e30d"],"a5296efc4b319f5647b606629c093a94b23692c6":[],"b5991832ae4bac45cecfff0fc33125aeac823d3d":["17e5da53e4e5bd659e22add9bba1cfa222e7e30d","1f1f31880696765d6aec499d3b01fa501129af45","a5296efc4b319f5647b606629c093a94b23692c6","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a5296efc4b319f5647b606629c093a94b23692c6","4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}