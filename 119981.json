{"path":"solr/core/src/java/org/apache/solr/servlet/HttpSolrCall#shouldAuthorize().mjava","commits":[{"id":"b3a34dae868734612eb6329aa0ef754f30bd2036","date":1438783154,"type":0,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/servlet/HttpSolrCall#shouldAuthorize().mjava","pathOld":"/dev/null","sourceNew":"  private boolean shouldAuthorize() {\n    if(PKIAuthenticationPlugin.PATH.equals(path)) return false;\n    //admin/info/key is the path where public key is exposed . it is always unsecured\n    if( cores.getPkiAuthenticationPlugin() != null && req.getUserPrincipal() != null){\n      return cores.getPkiAuthenticationPlugin().needsAuthorization(req);\n    }\n    return true;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b9e52dc3261e61fb422a343ba4e6df9a9fab88e6","date":1448994587,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/servlet/HttpSolrCall#shouldAuthorize().mjava","pathOld":"solr/core/src/java/org/apache/solr/servlet/HttpSolrCall#shouldAuthorize().mjava","sourceNew":"  private boolean shouldAuthorize() {\n    if(PKIAuthenticationPlugin.PATH.equals(path)) return false;\n    //admin/info/key is the path where public key is exposed . it is always unsecured\n    if (cores.getPkiAuthenticationPlugin() != null && req.getUserPrincipal() != null) {\n      boolean b = cores.getPkiAuthenticationPlugin().needsAuthorization(req);\n      log.debug(\"PkiAuthenticationPlugin says authorization required : {} \", b);\n      return b;\n    }\n    return true;\n  }\n\n","sourceOld":"  private boolean shouldAuthorize() {\n    if(PKIAuthenticationPlugin.PATH.equals(path)) return false;\n    //admin/info/key is the path where public key is exposed . it is always unsecured\n    if( cores.getPkiAuthenticationPlugin() != null && req.getUserPrincipal() != null){\n      return cores.getPkiAuthenticationPlugin().needsAuthorization(req);\n    }\n    return true;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1214bb624eb41181e5c8e260e0050c7e973ba0f4","date":1487943042,"type":3,"author":"Jan Høydahl","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/servlet/HttpSolrCall#shouldAuthorize().mjava","pathOld":"solr/core/src/java/org/apache/solr/servlet/HttpSolrCall#shouldAuthorize().mjava","sourceNew":"  private boolean shouldAuthorize() {\n    if(path != null && path.endsWith(PKIAuthenticationPlugin.PATH)) return false;\n    //admin/info/key is the path where public key is exposed . it is always unsecured\n    if (cores.getPkiAuthenticationPlugin() != null && req.getUserPrincipal() != null) {\n      boolean b = cores.getPkiAuthenticationPlugin().needsAuthorization(req);\n      log.debug(\"PkiAuthenticationPlugin says authorization required : {} \", b);\n      return b;\n    }\n    return true;\n  }\n\n","sourceOld":"  private boolean shouldAuthorize() {\n    if(PKIAuthenticationPlugin.PATH.equals(path)) return false;\n    //admin/info/key is the path where public key is exposed . it is always unsecured\n    if (cores.getPkiAuthenticationPlugin() != null && req.getUserPrincipal() != null) {\n      boolean b = cores.getPkiAuthenticationPlugin().needsAuthorization(req);\n      log.debug(\"PkiAuthenticationPlugin says authorization required : {} \", b);\n      return b;\n    }\n    return true;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b61ef53ee9899b83a89bf97542c28a4cfd0a64bf","date":1487979822,"type":3,"author":"Jan Høydahl","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/servlet/HttpSolrCall#shouldAuthorize().mjava","pathOld":"solr/core/src/java/org/apache/solr/servlet/HttpSolrCall#shouldAuthorize().mjava","sourceNew":"  private boolean shouldAuthorize() {\n    if(PKIAuthenticationPlugin.PATH.equals(path)) return false;\n    //admin/info/key is the path where public key is exposed . it is always unsecured\n    if (cores.getPkiAuthenticationPlugin() != null && req.getUserPrincipal() != null) {\n      boolean b = cores.getPkiAuthenticationPlugin().needsAuthorization(req);\n      log.debug(\"PkiAuthenticationPlugin says authorization required : {} \", b);\n      return b;\n    }\n    return true;\n  }\n\n","sourceOld":"  private boolean shouldAuthorize() {\n    if(path != null && path.endsWith(PKIAuthenticationPlugin.PATH)) return false;\n    //admin/info/key is the path where public key is exposed . it is always unsecured\n    if (cores.getPkiAuthenticationPlugin() != null && req.getUserPrincipal() != null) {\n      boolean b = cores.getPkiAuthenticationPlugin().needsAuthorization(req);\n      log.debug(\"PkiAuthenticationPlugin says authorization required : {} \", b);\n      return b;\n    }\n    return true;\n  }\n\n","bugFix":null,"bugIntro":["946009ad0fba506337041a368b0a74d2edd59e2c"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"946009ad0fba506337041a368b0a74d2edd59e2c","date":1528114477,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/servlet/HttpSolrCall#shouldAuthorize().mjava","pathOld":"solr/core/src/java/org/apache/solr/servlet/HttpSolrCall#shouldAuthorize().mjava","sourceNew":"  private boolean shouldAuthorize() {\n    if(PublicKeyHandler.PATH.equals(path)) return false;\n    //admin/info/key is the path where public key is exposed . it is always unsecured\n    if (cores.getPkiAuthenticationPlugin() != null && req.getUserPrincipal() != null) {\n      boolean b = cores.getPkiAuthenticationPlugin().needsAuthorization(req);\n      log.debug(\"PkiAuthenticationPlugin says authorization required : {} \", b);\n      return b;\n    }\n    return true;\n  }\n\n","sourceOld":"  private boolean shouldAuthorize() {\n    if(PKIAuthenticationPlugin.PATH.equals(path)) return false;\n    //admin/info/key is the path where public key is exposed . it is always unsecured\n    if (cores.getPkiAuthenticationPlugin() != null && req.getUserPrincipal() != null) {\n      boolean b = cores.getPkiAuthenticationPlugin().needsAuthorization(req);\n      log.debug(\"PkiAuthenticationPlugin says authorization required : {} \", b);\n      return b;\n    }\n    return true;\n  }\n\n","bugFix":["b61ef53ee9899b83a89bf97542c28a4cfd0a64bf"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f592209545c71895260367152601e9200399776d","date":1528238935,"type":3,"author":"Michael Braun","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/servlet/HttpSolrCall#shouldAuthorize().mjava","pathOld":"solr/core/src/java/org/apache/solr/servlet/HttpSolrCall#shouldAuthorize().mjava","sourceNew":"  private boolean shouldAuthorize() {\n    if(PublicKeyHandler.PATH.equals(path)) return false;\n    //admin/info/key is the path where public key is exposed . it is always unsecured\n    if (cores.getPkiAuthenticationPlugin() != null && req.getUserPrincipal() != null) {\n      boolean b = cores.getPkiAuthenticationPlugin().needsAuthorization(req);\n      log.debug(\"PkiAuthenticationPlugin says authorization required : {} \", b);\n      return b;\n    }\n    return true;\n  }\n\n","sourceOld":"  private boolean shouldAuthorize() {\n    if(PKIAuthenticationPlugin.PATH.equals(path)) return false;\n    //admin/info/key is the path where public key is exposed . it is always unsecured\n    if (cores.getPkiAuthenticationPlugin() != null && req.getUserPrincipal() != null) {\n      boolean b = cores.getPkiAuthenticationPlugin().needsAuthorization(req);\n      log.debug(\"PkiAuthenticationPlugin says authorization required : {} \", b);\n      return b;\n    }\n    return true;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b70042a8a492f7054d480ccdd2be9796510d4327","date":1528386658,"type":3,"author":"Alessandro Benedetti","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/servlet/HttpSolrCall#shouldAuthorize().mjava","pathOld":"solr/core/src/java/org/apache/solr/servlet/HttpSolrCall#shouldAuthorize().mjava","sourceNew":"  private boolean shouldAuthorize() {\n    if(PublicKeyHandler.PATH.equals(path)) return false;\n    //admin/info/key is the path where public key is exposed . it is always unsecured\n    if (cores.getPkiAuthenticationPlugin() != null && req.getUserPrincipal() != null) {\n      boolean b = cores.getPkiAuthenticationPlugin().needsAuthorization(req);\n      log.debug(\"PkiAuthenticationPlugin says authorization required : {} \", b);\n      return b;\n    }\n    return true;\n  }\n\n","sourceOld":"  private boolean shouldAuthorize() {\n    if(PKIAuthenticationPlugin.PATH.equals(path)) return false;\n    //admin/info/key is the path where public key is exposed . it is always unsecured\n    if (cores.getPkiAuthenticationPlugin() != null && req.getUserPrincipal() != null) {\n      boolean b = cores.getPkiAuthenticationPlugin().needsAuthorization(req);\n      log.debug(\"PkiAuthenticationPlugin says authorization required : {} \", b);\n      return b;\n    }\n    return true;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"904b7aaf075b8f54091876929c8558540da9068a","date":1554386843,"type":3,"author":"Jan Høydahl","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/servlet/HttpSolrCall#shouldAuthorize().mjava","pathOld":"solr/core/src/java/org/apache/solr/servlet/HttpSolrCall#shouldAuthorize().mjava","sourceNew":"  private boolean shouldAuthorize() {\n    if(PublicKeyHandler.PATH.equals(path)) return false;\n    //admin/info/key is the path where public key is exposed . it is always unsecured\n    if (\"/\".equals(path) || \"/solr/\".equals(path)) return false; // Static Admin UI files must always be served \n    if (cores.getPkiAuthenticationPlugin() != null && req.getUserPrincipal() != null) {\n      boolean b = cores.getPkiAuthenticationPlugin().needsAuthorization(req);\n      log.debug(\"PkiAuthenticationPlugin says authorization required : {} \", b);\n      return b;\n    }\n    return true;\n  }\n\n","sourceOld":"  private boolean shouldAuthorize() {\n    if(PublicKeyHandler.PATH.equals(path)) return false;\n    //admin/info/key is the path where public key is exposed . it is always unsecured\n    if (cores.getPkiAuthenticationPlugin() != null && req.getUserPrincipal() != null) {\n      boolean b = cores.getPkiAuthenticationPlugin().needsAuthorization(req);\n      log.debug(\"PkiAuthenticationPlugin says authorization required : {} \", b);\n      return b;\n    }\n    return true;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3ef011344cb9d79a273b9cfe096c5ecc5de84f58","date":1593208852,"type":3,"author":"Gus Heck","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/servlet/HttpSolrCall#shouldAuthorize().mjava","pathOld":"solr/core/src/java/org/apache/solr/servlet/HttpSolrCall#shouldAuthorize().mjava","sourceNew":"  private boolean shouldAuthorize() {\n    if(PublicKeyHandler.PATH.equals(path)) return false;\n    //admin/info/key is the path where public key is exposed . it is always unsecured\n    if (\"/\".equals(path) || \"/solr/\".equals(path)) return false; // Static Admin UI files must always be served\n    if (cores.getPkiAuthenticationPlugin() != null && req.getUserPrincipal() != null) {\n      boolean b = cores.getPkiAuthenticationPlugin().needsAuthorization(req);\n      log.debug(\"PkiAuthenticationPlugin says authorization required : {} \", b);\n      return b;\n    }\n    return true;\n  }\n\n","sourceOld":"  private boolean shouldAuthorize() {\n    if(PublicKeyHandler.PATH.equals(path)) return false;\n    //admin/info/key is the path where public key is exposed . it is always unsecured\n    if (\"/\".equals(path) || \"/solr/\".equals(path)) return false; // Static Admin UI files must always be served \n    if (cores.getPkiAuthenticationPlugin() != null && req.getUserPrincipal() != null) {\n      boolean b = cores.getPkiAuthenticationPlugin().needsAuthorization(req);\n      log.debug(\"PkiAuthenticationPlugin says authorization required : {} \", b);\n      return b;\n    }\n    return true;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b9e52dc3261e61fb422a343ba4e6df9a9fab88e6":["b3a34dae868734612eb6329aa0ef754f30bd2036"],"b61ef53ee9899b83a89bf97542c28a4cfd0a64bf":["1214bb624eb41181e5c8e260e0050c7e973ba0f4"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"b70042a8a492f7054d480ccdd2be9796510d4327":["b61ef53ee9899b83a89bf97542c28a4cfd0a64bf","946009ad0fba506337041a368b0a74d2edd59e2c"],"904b7aaf075b8f54091876929c8558540da9068a":["946009ad0fba506337041a368b0a74d2edd59e2c"],"b3a34dae868734612eb6329aa0ef754f30bd2036":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"3ef011344cb9d79a273b9cfe096c5ecc5de84f58":["904b7aaf075b8f54091876929c8558540da9068a"],"f592209545c71895260367152601e9200399776d":["b61ef53ee9899b83a89bf97542c28a4cfd0a64bf","946009ad0fba506337041a368b0a74d2edd59e2c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3ef011344cb9d79a273b9cfe096c5ecc5de84f58"],"946009ad0fba506337041a368b0a74d2edd59e2c":["b61ef53ee9899b83a89bf97542c28a4cfd0a64bf"],"1214bb624eb41181e5c8e260e0050c7e973ba0f4":["b9e52dc3261e61fb422a343ba4e6df9a9fab88e6"]},"commit2Childs":{"b9e52dc3261e61fb422a343ba4e6df9a9fab88e6":["1214bb624eb41181e5c8e260e0050c7e973ba0f4"],"b61ef53ee9899b83a89bf97542c28a4cfd0a64bf":["b70042a8a492f7054d480ccdd2be9796510d4327","f592209545c71895260367152601e9200399776d","946009ad0fba506337041a368b0a74d2edd59e2c"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b3a34dae868734612eb6329aa0ef754f30bd2036"],"b70042a8a492f7054d480ccdd2be9796510d4327":[],"904b7aaf075b8f54091876929c8558540da9068a":["3ef011344cb9d79a273b9cfe096c5ecc5de84f58"],"b3a34dae868734612eb6329aa0ef754f30bd2036":["b9e52dc3261e61fb422a343ba4e6df9a9fab88e6"],"3ef011344cb9d79a273b9cfe096c5ecc5de84f58":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"f592209545c71895260367152601e9200399776d":[],"1214bb624eb41181e5c8e260e0050c7e973ba0f4":["b61ef53ee9899b83a89bf97542c28a4cfd0a64bf"],"946009ad0fba506337041a368b0a74d2edd59e2c":["b70042a8a492f7054d480ccdd2be9796510d4327","904b7aaf075b8f54091876929c8558540da9068a","f592209545c71895260367152601e9200399776d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["b70042a8a492f7054d480ccdd2be9796510d4327","f592209545c71895260367152601e9200399776d","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}