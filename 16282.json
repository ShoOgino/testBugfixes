{"path":"solr/core/src/java/org/apache/solr/core/SolrCores#addCoreToPersistList(Config,SolrResourceLoader,CoreDescriptor,String,List[SolrCoreXMLDef]).mjava","commits":[{"id":"9409650933cc688e77e565092a25e58adfc2e18d","date":1366663164,"type":1,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/SolrCores#addCoreToPersistList(Config,SolrResourceLoader,CoreDescriptor,String,List[SolrCoreXMLDef]).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/CoreMaps#addPersistOneCore(Config,SolrResourceLoader,CoreDescriptor,String,List[SolrCoreXMLDef]).mjava","sourceNew":"  protected void addCoreToPersistList(Config cfg, SolrResourceLoader loader,\n      CoreDescriptor dcore, String origCoreName,\n      List<SolrCoreXMLDef> solrCoreXMLDefs) throws XPathExpressionException {\n    \n    String coreName = dcore.getProperty(CoreDescriptor.CORE_NAME);\n    \n    Map<String,String> coreAttribs = new HashMap<String,String>();\n\n    CloudDescriptor cd = dcore.getCloudDescriptor();\n    String collection = null;\n    if (cd != null) collection = cd.getCollectionName();\n\n    if (origCoreName == null) {\n      origCoreName = coreName;\n    }\n    \n    Properties properties = dcore.getCoreProperties();\n    Node node = null;\n    if (cfg != null) {\n      node = cfg.getNode(\"/solr/cores/core[@name='\" + origCoreName + \"']\",\n          false);\n    }\n    \n    coreAttribs.put(CoreDescriptor.CORE_NAME, coreName);\n    \n    addCoreProperty(coreAttribs, loader, node, CoreDescriptor.CORE_INSTDIR, dcore.getRawInstanceDir(), null);\n\n    coreAttribs.put(CoreDescriptor.CORE_COLLECTION,\n        StringUtils.isNotBlank(collection) ? collection : dcore.getName());\n    \n    addCoreProperty(coreAttribs, loader, node, CoreDescriptor.CORE_DATADIR, dcore.getDataDir(), null);\n    addCoreProperty(coreAttribs, loader, node, CoreDescriptor.CORE_ULOGDIR, dcore.getUlogDir(), null);\n    addCoreProperty(coreAttribs, loader, node, CoreDescriptor.CORE_TRANSIENT, Boolean.toString(dcore.isTransient()), null);\n    addCoreProperty(coreAttribs, loader, node, CoreDescriptor.CORE_LOADONSTARTUP, Boolean.toString(dcore.isLoadOnStartup()), null);\n    \n    addCoreProperty(coreAttribs, loader, node, CoreDescriptor.CORE_COLLECTION,\n        collection, dcore.getName());\n    \n    String shard = null;\n    String roles = null;\n    if (cd != null) {\n      shard = cd.getShardId();\n      roles = cd.getRoles();\n    }\n    addCoreProperty(coreAttribs, loader, node, CoreDescriptor.CORE_SHARD,\n        shard, null);\n    \n    addCoreProperty(coreAttribs, loader, node, CoreDescriptor.CORE_ROLES,\n        roles, null);\n\n    coreAttribs.put(CoreDescriptor.CORE_LOADONSTARTUP,\n        Boolean.toString(dcore.isLoadOnStartup()));\n    coreAttribs.put(CoreDescriptor.CORE_TRANSIENT,\n        Boolean.toString(dcore.isTransient()));\n    \n\n    SolrXMLSerializer.SolrCoreXMLDef solrCoreXMLDef = new SolrXMLSerializer.SolrCoreXMLDef();\n    solrCoreXMLDef.coreAttribs = coreAttribs;\n    solrCoreXMLDef.coreProperties = properties;\n    solrCoreXMLDefs.add(solrCoreXMLDef);\n\n  }\n\n","sourceOld":"  protected void addPersistOneCore(Config cfg, SolrResourceLoader loader,\n      CoreDescriptor dcore, String origCoreName,\n      List<SolrCoreXMLDef> solrCoreXMLDefs) throws XPathExpressionException {\n    \n    String coreName = dcore.getProperty(CoreDescriptor.CORE_NAME);\n    \n    Map<String,String> coreAttribs = new HashMap<String,String>();\n\n    CloudDescriptor cd = dcore.getCloudDescriptor();\n    String collection = null;\n    if (cd != null) collection = cd.getCollectionName();\n\n    if (origCoreName == null) {\n      origCoreName = coreName;\n    }\n    \n    Properties properties = dcore.getCoreProperties();\n    Node node = null;\n    if (cfg != null) {\n      node = cfg.getNode(\"/solr/cores/core[@name='\" + origCoreName + \"']\",\n          false);\n    }\n    \n    coreAttribs.put(CoreDescriptor.CORE_NAME, coreName);\n    \n    addCoreProperty(coreAttribs, loader, node, CoreDescriptor.CORE_INSTDIR, dcore.getRawInstanceDir(), null);\n\n    coreAttribs.put(CoreDescriptor.CORE_COLLECTION,\n        StringUtils.isNotBlank(collection) ? collection : dcore.getName());\n    \n    addCoreProperty(coreAttribs, loader, node, CoreDescriptor.CORE_DATADIR, dcore.getDataDir(), null);\n    addCoreProperty(coreAttribs, loader, node, CoreDescriptor.CORE_ULOGDIR, dcore.getUlogDir(), null);\n    addCoreProperty(coreAttribs, loader, node, CoreDescriptor.CORE_TRANSIENT, Boolean.toString(dcore.isTransient()), null);\n    addCoreProperty(coreAttribs, loader, node, CoreDescriptor.CORE_LOADONSTARTUP, Boolean.toString(dcore.isLoadOnStartup()), null);\n    \n    addCoreProperty(coreAttribs, loader, node, CoreDescriptor.CORE_COLLECTION,\n        collection, dcore.getName());\n    \n    String shard = null;\n    String roles = null;\n    if (cd != null) {\n      shard = cd.getShardId();\n      roles = cd.getRoles();\n    }\n    addCoreProperty(coreAttribs, loader, node, CoreDescriptor.CORE_SHARD,\n        shard, null);\n    \n    addCoreProperty(coreAttribs, loader, node, CoreDescriptor.CORE_ROLES,\n        roles, null);\n\n    coreAttribs.put(CoreDescriptor.CORE_LOADONSTARTUP,\n        Boolean.toString(dcore.isLoadOnStartup()));\n    coreAttribs.put(CoreDescriptor.CORE_TRANSIENT,\n        Boolean.toString(dcore.isTransient()));\n    \n\n    SolrXMLSerializer.SolrCoreXMLDef solrCoreXMLDef = new SolrXMLSerializer.SolrCoreXMLDef();\n    solrCoreXMLDef.coreAttribs = coreAttribs;\n    solrCoreXMLDef.coreProperties = properties;\n    solrCoreXMLDefs.add(solrCoreXMLDef);\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"dc6e48afbb50ae0a22fa76e226f04fd585532938","date":1371429211,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/SolrCores#addCoreToPersistList(Config,SolrResourceLoader,CoreDescriptor,String,List[SolrCoreXMLDef]).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/SolrCores#addCoreToPersistList(Config,SolrResourceLoader,CoreDescriptor,String,List[SolrCoreXMLDef]).mjava","sourceNew":"  protected void addCoreToPersistList(Config cfg, SolrResourceLoader loader,\n      CoreDescriptor dcore, String origCoreName,\n      List<SolrCoreXMLDef> solrCoreXMLDefs) throws XPathExpressionException {\n\n    Map<String,String> coreAttribs = new HashMap<String,String>();\n    Properties newProps = new Properties();\n\n    // This is simple, just take anything sent in and saved away in at core creation and write it out.\n    if (dcore.getCreatedProperties().size() > 0) {\n      for (String key : dcore.getCreatedProperties().stringPropertyNames()) {\n        if (CoreAdminParams.ACTION.toString().equals(key)) continue; // Don't persist the \"action\" verb\n        if (key.indexOf(CoreAdminParams.PROPERTY_PREFIX) == 0) {\n          newProps.put(key.substring(CoreAdminParams.PROPERTY_PREFIX.length()), dcore.getCreatedProperties().getProperty(key));\n        } else {\n          coreAttribs.put(key, dcore.getCreatedProperties().getProperty(key));\n        }\n      }\n    } else {\n\n      String coreName = dcore.getProperty(CoreDescriptor.CORE_NAME);\n\n      CloudDescriptor cd = dcore.getCloudDescriptor();\n      String collection = null;\n      if (cd != null) collection = cd.getCollectionName();\n\n      if (origCoreName == null) {\n        origCoreName = coreName;\n      }\n\n      Node node = null;\n      if (cfg != null) {\n        node = cfg.getNode(\"/solr/cores/core[@name='\" + origCoreName + \"']\",\n            false);\n      }\n\n      coreAttribs.put(CoreDescriptor.CORE_NAME, coreName);\n\n      addCoreProperty(coreAttribs, loader, node, CoreDescriptor.CORE_INSTDIR, dcore.getRawInstanceDir(), null);\n\n      addCoreProperty(coreAttribs, loader, node, CoreDescriptor.CORE_COLLECTION,\n          StringUtils.isNotBlank(collection) ? collection : dcore.getName());\n\n      addCoreProperty(coreAttribs, loader, node, CoreDescriptor.CORE_DATADIR,\n          dcore.getDataDir());\n      addCoreProperty(coreAttribs, loader, node, CoreDescriptor.CORE_ULOGDIR,\n          dcore.getUlogDir());\n      addCoreProperty(coreAttribs, loader, node, CoreDescriptor.CORE_TRANSIENT,\n          Boolean.toString(dcore.isTransient()));\n      addCoreProperty(coreAttribs, loader, node, CoreDescriptor.CORE_LOADONSTARTUP,\n          Boolean.toString(dcore.isLoadOnStartup()));\n      addCoreProperty(coreAttribs, loader, node, CoreDescriptor.CORE_CONFIG,\n          dcore.getConfigName());\n      addCoreProperty(coreAttribs, loader, node, CoreDescriptor.CORE_SCHEMA,\n          dcore.getSchemaName());\n\n      addCoreProperty(coreAttribs, loader, node, CoreDescriptor.CORE_COLLECTION,\n          collection, dcore.getName());\n\n      String shard = null;\n      String roles = null;\n      String node_name = null;\n      if (cd != null) {\n        shard = cd.getShardId();\n        roles = cd.getRoles();\n        node_name = cd.getCoreNodeName();\n      }\n      addCoreProperty(coreAttribs, loader, node, CoreDescriptor.CORE_SHARD,\n          shard);\n\n      addCoreProperty(coreAttribs, loader, node, CoreDescriptor.CORE_ROLES,\n          roles);\n\n      addCoreProperty(coreAttribs, loader, node, CoreDescriptor.CORE_NODE_NAME,\n          node_name);\n\n\n      for (Object key : dcore.getCoreProperties().keySet()) {\n\n        if (cfg != null) {\n          Node propNode = cfg.getNode(\"/solr/cores/core[@name='\" + origCoreName + \"']/property[@name='\" + key + \"']\",\n              false);\n\n          if (propNode != null) { // This means it was in the original DOM element, so just copy it.\n            newProps.put(DOMUtil.getAttr(propNode, \"name\", null), DOMUtil.getAttr(propNode, \"value\", null));\n          }\n        }\n      }\n    }\n\n\n\n    SolrXMLSerializer.SolrCoreXMLDef solrCoreXMLDef = new SolrXMLSerializer.SolrCoreXMLDef();\n    solrCoreXMLDef.coreAttribs = coreAttribs;\n    solrCoreXMLDef.coreProperties = newProps;\n    solrCoreXMLDefs.add(solrCoreXMLDef);\n  }\n\n","sourceOld":"  protected void addCoreToPersistList(Config cfg, SolrResourceLoader loader,\n      CoreDescriptor dcore, String origCoreName,\n      List<SolrCoreXMLDef> solrCoreXMLDefs) throws XPathExpressionException {\n    \n    String coreName = dcore.getProperty(CoreDescriptor.CORE_NAME);\n    \n    Map<String,String> coreAttribs = new HashMap<String,String>();\n\n    CloudDescriptor cd = dcore.getCloudDescriptor();\n    String collection = null;\n    if (cd != null) collection = cd.getCollectionName();\n\n    if (origCoreName == null) {\n      origCoreName = coreName;\n    }\n    \n    Properties properties = dcore.getCoreProperties();\n    Node node = null;\n    if (cfg != null) {\n      node = cfg.getNode(\"/solr/cores/core[@name='\" + origCoreName + \"']\",\n          false);\n    }\n    \n    coreAttribs.put(CoreDescriptor.CORE_NAME, coreName);\n    \n    addCoreProperty(coreAttribs, loader, node, CoreDescriptor.CORE_INSTDIR, dcore.getRawInstanceDir(), null);\n\n    coreAttribs.put(CoreDescriptor.CORE_COLLECTION,\n        StringUtils.isNotBlank(collection) ? collection : dcore.getName());\n    \n    addCoreProperty(coreAttribs, loader, node, CoreDescriptor.CORE_DATADIR, dcore.getDataDir(), null);\n    addCoreProperty(coreAttribs, loader, node, CoreDescriptor.CORE_ULOGDIR, dcore.getUlogDir(), null);\n    addCoreProperty(coreAttribs, loader, node, CoreDescriptor.CORE_TRANSIENT, Boolean.toString(dcore.isTransient()), null);\n    addCoreProperty(coreAttribs, loader, node, CoreDescriptor.CORE_LOADONSTARTUP, Boolean.toString(dcore.isLoadOnStartup()), null);\n    \n    addCoreProperty(coreAttribs, loader, node, CoreDescriptor.CORE_COLLECTION,\n        collection, dcore.getName());\n    \n    String shard = null;\n    String roles = null;\n    if (cd != null) {\n      shard = cd.getShardId();\n      roles = cd.getRoles();\n    }\n    addCoreProperty(coreAttribs, loader, node, CoreDescriptor.CORE_SHARD,\n        shard, null);\n    \n    addCoreProperty(coreAttribs, loader, node, CoreDescriptor.CORE_ROLES,\n        roles, null);\n\n    coreAttribs.put(CoreDescriptor.CORE_LOADONSTARTUP,\n        Boolean.toString(dcore.isLoadOnStartup()));\n    coreAttribs.put(CoreDescriptor.CORE_TRANSIENT,\n        Boolean.toString(dcore.isTransient()));\n    \n\n    SolrXMLSerializer.SolrCoreXMLDef solrCoreXMLDef = new SolrXMLSerializer.SolrCoreXMLDef();\n    solrCoreXMLDef.coreAttribs = coreAttribs;\n    solrCoreXMLDef.coreProperties = properties;\n    solrCoreXMLDefs.add(solrCoreXMLDef);\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2eea68c999cd25f09e15e71eb2fd57b17f5eca59","date":1371837918,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/SolrCores#addCoreToPersistList(Config,SolrResourceLoader,CoreDescriptor,String,List[SolrCoreXMLDef]).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/SolrCores#addCoreToPersistList(Config,SolrResourceLoader,CoreDescriptor,String,List[SolrCoreXMLDef]).mjava","sourceNew":"  protected void addCoreToPersistList(Config cfg, SolrResourceLoader loader,\n      CoreDescriptor dcore, String origCoreName,\n      List<SolrCoreXMLDef> solrCoreXMLDefs) throws XPathExpressionException {\n\n    Map<String,String> coreAttribs = new HashMap<String,String>();\n    Properties newProps = new Properties();\n\n    // This is simple, just take anything sent in and saved away in at core creation and write it out.\n    if (dcore.getCreatedProperties().size() > 0) {\n      final List<String> stdNames = new ArrayList<String>(Arrays.asList(CoreDescriptor.standardPropNames));\n      coreAttribs.put(CoreDescriptor.CORE_NAME, dcore.getName()); // NOTE: may have been swapped or renamed!\n      for (String key : dcore.getCreatedProperties().stringPropertyNames()) {\n        if (! stdNames.contains(key) && ! key.startsWith(CoreAdminParams.PROPERTY_PREFIX)) continue;\n        if (key.indexOf(CoreAdminParams.PROPERTY_PREFIX) == 0) {\n          newProps.put(key.substring(CoreAdminParams.PROPERTY_PREFIX.length()), dcore.getCreatedProperties().getProperty(key));\n        } else if (! CoreDescriptor.CORE_NAME.equals(key)) {\n          coreAttribs.put(key, dcore.getCreatedProperties().getProperty(key));\n        }\n      }\n      // Insure instdir is persisted if it's the default since it's checked at startup even if not specified on the\n      // create command.\n      if (! dcore.getCreatedProperties().containsKey(CoreDescriptor.CORE_INSTDIR)) {\n        coreAttribs.put(CoreDescriptor.CORE_INSTDIR, dcore.getProperty(CoreDescriptor.CORE_INSTDIR));\n      }\n    } else {\n\n      String coreName = dcore.getProperty(CoreDescriptor.CORE_NAME);\n\n      CloudDescriptor cd = dcore.getCloudDescriptor();\n      String collection = null;\n      if (cd != null) collection = cd.getCollectionName();\n\n      if (origCoreName == null) {\n        origCoreName = coreName;\n      }\n\n      Node node = null;\n      if (cfg != null) {\n        node = cfg.getNode(\"/solr/cores/core[@name='\" + origCoreName + \"']\",\n            false);\n      }\n\n      coreAttribs.put(CoreDescriptor.CORE_NAME, coreName);\n\n      addCoreProperty(coreAttribs, loader, node, CoreDescriptor.CORE_INSTDIR, dcore.getRawInstanceDir(), null);\n\n      addCoreProperty(coreAttribs, loader, node, CoreDescriptor.CORE_COLLECTION,\n          StringUtils.isNotBlank(collection) ? collection : dcore.getName());\n\n      addCoreProperty(coreAttribs, loader, node, CoreDescriptor.CORE_DATADIR,\n          dcore.getDataDir());\n      addCoreProperty(coreAttribs, loader, node, CoreDescriptor.CORE_ULOGDIR,\n          dcore.getUlogDir());\n      addCoreProperty(coreAttribs, loader, node, CoreDescriptor.CORE_TRANSIENT,\n          Boolean.toString(dcore.isTransient()));\n      addCoreProperty(coreAttribs, loader, node, CoreDescriptor.CORE_LOADONSTARTUP,\n          Boolean.toString(dcore.isLoadOnStartup()));\n      addCoreProperty(coreAttribs, loader, node, CoreDescriptor.CORE_CONFIG,\n          dcore.getConfigName());\n      addCoreProperty(coreAttribs, loader, node, CoreDescriptor.CORE_SCHEMA,\n          dcore.getSchemaName());\n\n      addCoreProperty(coreAttribs, loader, node, CoreDescriptor.CORE_COLLECTION,\n          collection, dcore.getName());\n\n      String shard = null;\n      String roles = null;\n      String node_name = null;\n      if (cd != null) {\n        shard = cd.getShardId();\n        roles = cd.getRoles();\n        node_name = cd.getCoreNodeName();\n      }\n      addCoreProperty(coreAttribs, loader, node, CoreDescriptor.CORE_SHARD,\n          shard);\n\n      addCoreProperty(coreAttribs, loader, node, CoreDescriptor.CORE_ROLES,\n          roles);\n\n      addCoreProperty(coreAttribs, loader, node, CoreDescriptor.CORE_NODE_NAME,\n          node_name);\n\n\n      for (Object key : dcore.getCoreProperties().keySet()) {\n\n        if (cfg != null) {\n          Node propNode = cfg.getNode(\"/solr/cores/core[@name='\" + origCoreName + \"']/property[@name='\" + key + \"']\",\n              false);\n\n          if (propNode != null) { // This means it was in the original DOM element, so just copy it.\n            newProps.put(DOMUtil.getAttr(propNode, \"name\", null), DOMUtil.getAttr(propNode, \"value\", null));\n          }\n        }\n      }\n    }\n\n\n\n    SolrXMLSerializer.SolrCoreXMLDef solrCoreXMLDef = new SolrXMLSerializer.SolrCoreXMLDef();\n    solrCoreXMLDef.coreAttribs = coreAttribs;\n    solrCoreXMLDef.coreProperties = newProps;\n    solrCoreXMLDefs.add(solrCoreXMLDef);\n  }\n\n","sourceOld":"  protected void addCoreToPersistList(Config cfg, SolrResourceLoader loader,\n      CoreDescriptor dcore, String origCoreName,\n      List<SolrCoreXMLDef> solrCoreXMLDefs) throws XPathExpressionException {\n\n    Map<String,String> coreAttribs = new HashMap<String,String>();\n    Properties newProps = new Properties();\n\n    // This is simple, just take anything sent in and saved away in at core creation and write it out.\n    if (dcore.getCreatedProperties().size() > 0) {\n      for (String key : dcore.getCreatedProperties().stringPropertyNames()) {\n        if (CoreAdminParams.ACTION.toString().equals(key)) continue; // Don't persist the \"action\" verb\n        if (key.indexOf(CoreAdminParams.PROPERTY_PREFIX) == 0) {\n          newProps.put(key.substring(CoreAdminParams.PROPERTY_PREFIX.length()), dcore.getCreatedProperties().getProperty(key));\n        } else {\n          coreAttribs.put(key, dcore.getCreatedProperties().getProperty(key));\n        }\n      }\n    } else {\n\n      String coreName = dcore.getProperty(CoreDescriptor.CORE_NAME);\n\n      CloudDescriptor cd = dcore.getCloudDescriptor();\n      String collection = null;\n      if (cd != null) collection = cd.getCollectionName();\n\n      if (origCoreName == null) {\n        origCoreName = coreName;\n      }\n\n      Node node = null;\n      if (cfg != null) {\n        node = cfg.getNode(\"/solr/cores/core[@name='\" + origCoreName + \"']\",\n            false);\n      }\n\n      coreAttribs.put(CoreDescriptor.CORE_NAME, coreName);\n\n      addCoreProperty(coreAttribs, loader, node, CoreDescriptor.CORE_INSTDIR, dcore.getRawInstanceDir(), null);\n\n      addCoreProperty(coreAttribs, loader, node, CoreDescriptor.CORE_COLLECTION,\n          StringUtils.isNotBlank(collection) ? collection : dcore.getName());\n\n      addCoreProperty(coreAttribs, loader, node, CoreDescriptor.CORE_DATADIR,\n          dcore.getDataDir());\n      addCoreProperty(coreAttribs, loader, node, CoreDescriptor.CORE_ULOGDIR,\n          dcore.getUlogDir());\n      addCoreProperty(coreAttribs, loader, node, CoreDescriptor.CORE_TRANSIENT,\n          Boolean.toString(dcore.isTransient()));\n      addCoreProperty(coreAttribs, loader, node, CoreDescriptor.CORE_LOADONSTARTUP,\n          Boolean.toString(dcore.isLoadOnStartup()));\n      addCoreProperty(coreAttribs, loader, node, CoreDescriptor.CORE_CONFIG,\n          dcore.getConfigName());\n      addCoreProperty(coreAttribs, loader, node, CoreDescriptor.CORE_SCHEMA,\n          dcore.getSchemaName());\n\n      addCoreProperty(coreAttribs, loader, node, CoreDescriptor.CORE_COLLECTION,\n          collection, dcore.getName());\n\n      String shard = null;\n      String roles = null;\n      String node_name = null;\n      if (cd != null) {\n        shard = cd.getShardId();\n        roles = cd.getRoles();\n        node_name = cd.getCoreNodeName();\n      }\n      addCoreProperty(coreAttribs, loader, node, CoreDescriptor.CORE_SHARD,\n          shard);\n\n      addCoreProperty(coreAttribs, loader, node, CoreDescriptor.CORE_ROLES,\n          roles);\n\n      addCoreProperty(coreAttribs, loader, node, CoreDescriptor.CORE_NODE_NAME,\n          node_name);\n\n\n      for (Object key : dcore.getCoreProperties().keySet()) {\n\n        if (cfg != null) {\n          Node propNode = cfg.getNode(\"/solr/cores/core[@name='\" + origCoreName + \"']/property[@name='\" + key + \"']\",\n              false);\n\n          if (propNode != null) { // This means it was in the original DOM element, so just copy it.\n            newProps.put(DOMUtil.getAttr(propNode, \"name\", null), DOMUtil.getAttr(propNode, \"value\", null));\n          }\n        }\n      }\n    }\n\n\n\n    SolrXMLSerializer.SolrCoreXMLDef solrCoreXMLDef = new SolrXMLSerializer.SolrCoreXMLDef();\n    solrCoreXMLDef.coreAttribs = coreAttribs;\n    solrCoreXMLDef.coreProperties = newProps;\n    solrCoreXMLDefs.add(solrCoreXMLDef);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d264f386d864b5751209060e8886ca9845f70469","date":1372172126,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/SolrCores#addCoreToPersistList(Config,SolrResourceLoader,CoreDescriptor,String,List[SolrCoreXMLDef]).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/SolrCores#addCoreToPersistList(Config,SolrResourceLoader,CoreDescriptor,String,List[SolrCoreXMLDef]).mjava","sourceNew":"  protected void addCoreToPersistList(Config cfg, SolrResourceLoader loader,\n      CoreDescriptor dcore, String origCoreName,\n      List<SolrCoreXMLDef> solrCoreXMLDefs) throws XPathExpressionException {\n\n    Map<String,String> coreAttribs = new HashMap<String,String>();\n    Properties newProps = new Properties();\n\n    // This is simple, just take anything sent in and saved away in at core creation and write it out.\n    if (dcore.getCreatedProperties().size() > 0) {\n      final List<String> stdNames = new ArrayList<String>(Arrays.asList(CoreDescriptor.standardPropNames));\n      coreAttribs.put(CoreDescriptor.CORE_NAME, dcore.getName()); // NOTE: may have been swapped or renamed!\n      for (String key : dcore.getCreatedProperties().stringPropertyNames()) {\n        if (! stdNames.contains(key) && ! key.startsWith(CoreAdminParams.PROPERTY_PREFIX)) continue;\n        if (key.indexOf(CoreAdminParams.PROPERTY_PREFIX) == 0) {\n          newProps.put(key.substring(CoreAdminParams.PROPERTY_PREFIX.length()), dcore.getCreatedProperties().getProperty(key));\n        } else if (! CoreDescriptor.CORE_NAME.equals(key)) {\n          coreAttribs.put(key, dcore.getCreatedProperties().getProperty(key));\n        }\n      }\n      // Insure instdir is persisted if it's the default since it's checked at startup even if not specified on the\n      // create command.\n      if (! dcore.getCreatedProperties().containsKey(CoreDescriptor.CORE_INSTDIR)) {\n        coreAttribs.put(CoreDescriptor.CORE_INSTDIR, dcore.getRawInstanceDir());\n      }\n    } else {\n\n      String coreName = dcore.getProperty(CoreDescriptor.CORE_NAME);\n\n      CloudDescriptor cd = dcore.getCloudDescriptor();\n      String collection = null;\n      if (cd != null) collection = cd.getCollectionName();\n\n      if (origCoreName == null) {\n        origCoreName = coreName;\n      }\n\n      Node node = null;\n      if (cfg != null) {\n        node = cfg.getNode(\"/solr/cores/core[@name='\" + origCoreName + \"']\",\n            false);\n      }\n\n      coreAttribs.put(CoreDescriptor.CORE_NAME, coreName);\n      coreAttribs.put(CoreDescriptor.CORE_INSTDIR, dcore.getRawInstanceDir());\n      //addCoreProperty(coreAttribs, loader, node, CoreDescriptor.CORE_INSTDIR, dcore.getRawInstanceDir(), null);\n\n      addCoreProperty(coreAttribs, loader, node, CoreDescriptor.CORE_COLLECTION,\n          StringUtils.isNotBlank(collection) ? collection : dcore.getName());\n\n      addCoreProperty(coreAttribs, loader, node, CoreDescriptor.CORE_DATADIR,\n          dcore.getDataDir());\n      addCoreProperty(coreAttribs, loader, node, CoreDescriptor.CORE_ULOGDIR,\n          dcore.getUlogDir());\n      addCoreProperty(coreAttribs, loader, node, CoreDescriptor.CORE_TRANSIENT,\n          Boolean.toString(dcore.isTransient()));\n      addCoreProperty(coreAttribs, loader, node, CoreDescriptor.CORE_LOADONSTARTUP,\n          Boolean.toString(dcore.isLoadOnStartup()));\n      addCoreProperty(coreAttribs, loader, node, CoreDescriptor.CORE_CONFIG,\n          dcore.getConfigName());\n      addCoreProperty(coreAttribs, loader, node, CoreDescriptor.CORE_SCHEMA,\n          dcore.getSchemaName());\n\n      addCoreProperty(coreAttribs, loader, node, CoreDescriptor.CORE_COLLECTION,\n          collection, dcore.getName());\n\n      String shard = null;\n      String roles = null;\n      String node_name = null;\n      if (cd != null) {\n        shard = cd.getShardId();\n        roles = cd.getRoles();\n        node_name = cd.getCoreNodeName();\n      }\n      addCoreProperty(coreAttribs, loader, node, CoreDescriptor.CORE_SHARD,\n          shard);\n\n      addCoreProperty(coreAttribs, loader, node, CoreDescriptor.CORE_ROLES,\n          roles);\n\n      addCoreProperty(coreAttribs, loader, node, CoreDescriptor.CORE_NODE_NAME,\n          node_name);\n\n\n      for (Object key : dcore.getCoreProperties().keySet()) {\n\n        if (cfg != null) {\n          Node propNode = cfg.getNode(\"/solr/cores/core[@name='\" + origCoreName + \"']/property[@name='\" + key + \"']\",\n              false);\n\n          if (propNode != null) { // This means it was in the original DOM element, so just copy it.\n            newProps.put(DOMUtil.getAttr(propNode, \"name\", null), DOMUtil.getAttr(propNode, \"value\", null));\n          }\n        }\n      }\n    }\n\n\n\n    SolrXMLSerializer.SolrCoreXMLDef solrCoreXMLDef = new SolrXMLSerializer.SolrCoreXMLDef();\n    solrCoreXMLDef.coreAttribs = coreAttribs;\n    solrCoreXMLDef.coreProperties = newProps;\n    solrCoreXMLDefs.add(solrCoreXMLDef);\n  }\n\n","sourceOld":"  protected void addCoreToPersistList(Config cfg, SolrResourceLoader loader,\n      CoreDescriptor dcore, String origCoreName,\n      List<SolrCoreXMLDef> solrCoreXMLDefs) throws XPathExpressionException {\n\n    Map<String,String> coreAttribs = new HashMap<String,String>();\n    Properties newProps = new Properties();\n\n    // This is simple, just take anything sent in and saved away in at core creation and write it out.\n    if (dcore.getCreatedProperties().size() > 0) {\n      final List<String> stdNames = new ArrayList<String>(Arrays.asList(CoreDescriptor.standardPropNames));\n      coreAttribs.put(CoreDescriptor.CORE_NAME, dcore.getName()); // NOTE: may have been swapped or renamed!\n      for (String key : dcore.getCreatedProperties().stringPropertyNames()) {\n        if (! stdNames.contains(key) && ! key.startsWith(CoreAdminParams.PROPERTY_PREFIX)) continue;\n        if (key.indexOf(CoreAdminParams.PROPERTY_PREFIX) == 0) {\n          newProps.put(key.substring(CoreAdminParams.PROPERTY_PREFIX.length()), dcore.getCreatedProperties().getProperty(key));\n        } else if (! CoreDescriptor.CORE_NAME.equals(key)) {\n          coreAttribs.put(key, dcore.getCreatedProperties().getProperty(key));\n        }\n      }\n      // Insure instdir is persisted if it's the default since it's checked at startup even if not specified on the\n      // create command.\n      if (! dcore.getCreatedProperties().containsKey(CoreDescriptor.CORE_INSTDIR)) {\n        coreAttribs.put(CoreDescriptor.CORE_INSTDIR, dcore.getProperty(CoreDescriptor.CORE_INSTDIR));\n      }\n    } else {\n\n      String coreName = dcore.getProperty(CoreDescriptor.CORE_NAME);\n\n      CloudDescriptor cd = dcore.getCloudDescriptor();\n      String collection = null;\n      if (cd != null) collection = cd.getCollectionName();\n\n      if (origCoreName == null) {\n        origCoreName = coreName;\n      }\n\n      Node node = null;\n      if (cfg != null) {\n        node = cfg.getNode(\"/solr/cores/core[@name='\" + origCoreName + \"']\",\n            false);\n      }\n\n      coreAttribs.put(CoreDescriptor.CORE_NAME, coreName);\n\n      addCoreProperty(coreAttribs, loader, node, CoreDescriptor.CORE_INSTDIR, dcore.getRawInstanceDir(), null);\n\n      addCoreProperty(coreAttribs, loader, node, CoreDescriptor.CORE_COLLECTION,\n          StringUtils.isNotBlank(collection) ? collection : dcore.getName());\n\n      addCoreProperty(coreAttribs, loader, node, CoreDescriptor.CORE_DATADIR,\n          dcore.getDataDir());\n      addCoreProperty(coreAttribs, loader, node, CoreDescriptor.CORE_ULOGDIR,\n          dcore.getUlogDir());\n      addCoreProperty(coreAttribs, loader, node, CoreDescriptor.CORE_TRANSIENT,\n          Boolean.toString(dcore.isTransient()));\n      addCoreProperty(coreAttribs, loader, node, CoreDescriptor.CORE_LOADONSTARTUP,\n          Boolean.toString(dcore.isLoadOnStartup()));\n      addCoreProperty(coreAttribs, loader, node, CoreDescriptor.CORE_CONFIG,\n          dcore.getConfigName());\n      addCoreProperty(coreAttribs, loader, node, CoreDescriptor.CORE_SCHEMA,\n          dcore.getSchemaName());\n\n      addCoreProperty(coreAttribs, loader, node, CoreDescriptor.CORE_COLLECTION,\n          collection, dcore.getName());\n\n      String shard = null;\n      String roles = null;\n      String node_name = null;\n      if (cd != null) {\n        shard = cd.getShardId();\n        roles = cd.getRoles();\n        node_name = cd.getCoreNodeName();\n      }\n      addCoreProperty(coreAttribs, loader, node, CoreDescriptor.CORE_SHARD,\n          shard);\n\n      addCoreProperty(coreAttribs, loader, node, CoreDescriptor.CORE_ROLES,\n          roles);\n\n      addCoreProperty(coreAttribs, loader, node, CoreDescriptor.CORE_NODE_NAME,\n          node_name);\n\n\n      for (Object key : dcore.getCoreProperties().keySet()) {\n\n        if (cfg != null) {\n          Node propNode = cfg.getNode(\"/solr/cores/core[@name='\" + origCoreName + \"']/property[@name='\" + key + \"']\",\n              false);\n\n          if (propNode != null) { // This means it was in the original DOM element, so just copy it.\n            newProps.put(DOMUtil.getAttr(propNode, \"name\", null), DOMUtil.getAttr(propNode, \"value\", null));\n          }\n        }\n      }\n    }\n\n\n\n    SolrXMLSerializer.SolrCoreXMLDef solrCoreXMLDef = new SolrXMLSerializer.SolrCoreXMLDef();\n    solrCoreXMLDef.coreAttribs = coreAttribs;\n    solrCoreXMLDef.coreProperties = newProps;\n    solrCoreXMLDefs.add(solrCoreXMLDef);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"354983dcdf70c800bf2573d10b54a7391b1dc167","date":1372183171,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/SolrCores#addCoreToPersistList(Config,SolrResourceLoader,CoreDescriptor,String,List[SolrCoreXMLDef]).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/SolrCores#addCoreToPersistList(Config,SolrResourceLoader,CoreDescriptor,String,List[SolrCoreXMLDef]).mjava","sourceNew":"  protected void addCoreToPersistList(Config cfg, SolrResourceLoader loader,\n      CoreDescriptor dcore, String origCoreName,\n      List<SolrCoreXMLDef> solrCoreXMLDefs) throws XPathExpressionException {\n\n    Map<String,String> coreAttribs = new HashMap<String,String>();\n    Properties newProps = new Properties();\n\n    // This is simple, just take anything sent in and saved away in at core creation and write it out.\n    if (dcore.getCreatedProperties().size() > 0) {\n      final List<String> stdNames = new ArrayList<String>(Arrays.asList(CoreDescriptor.standardPropNames));\n      coreAttribs.put(CoreDescriptor.CORE_NAME, dcore.getName()); // NOTE: may have been swapped or renamed!\n      for (String key : dcore.getCreatedProperties().stringPropertyNames()) {\n        if (! stdNames.contains(key) && ! key.startsWith(CoreAdminParams.PROPERTY_PREFIX)) continue;\n        if (key.indexOf(CoreAdminParams.PROPERTY_PREFIX) == 0) {\n          newProps.put(key.substring(CoreAdminParams.PROPERTY_PREFIX.length()), dcore.getCreatedProperties().getProperty(key));\n        } else if (! CoreDescriptor.CORE_NAME.equals(key)) {\n          coreAttribs.put(key, dcore.getCreatedProperties().getProperty(key));\n        }\n      }\n      // Insure instdir is persisted if it's the default since it's checked at startup even if not specified on the\n      // create command.\n      if (! dcore.getCreatedProperties().containsKey(CoreDescriptor.CORE_INSTDIR)) {\n        coreAttribs.put(CoreDescriptor.CORE_INSTDIR, dcore.getProperty(CoreDescriptor.CORE_INSTDIR));\n      }\n    } else {\n\n      String coreName = dcore.getProperty(CoreDescriptor.CORE_NAME);\n\n      CloudDescriptor cd = dcore.getCloudDescriptor();\n      String collection = null;\n      if (cd != null) collection = cd.getCollectionName();\n\n      if (origCoreName == null) {\n        origCoreName = coreName;\n      }\n\n      Node node = null;\n      if (cfg != null) {\n        node = cfg.getNode(\"/solr/cores/core[@name='\" + origCoreName + \"']\",\n            false);\n      }\n\n      coreAttribs.put(CoreDescriptor.CORE_NAME, coreName);\n\n      addCoreProperty(coreAttribs, loader, node, CoreDescriptor.CORE_INSTDIR, dcore.getRawInstanceDir(), null);\n\n      addCoreProperty(coreAttribs, loader, node, CoreDescriptor.CORE_COLLECTION,\n          StringUtils.isNotBlank(collection) ? collection : dcore.getName());\n\n      addCoreProperty(coreAttribs, loader, node, CoreDescriptor.CORE_DATADIR,\n          dcore.getDataDir());\n      addCoreProperty(coreAttribs, loader, node, CoreDescriptor.CORE_ULOGDIR,\n          dcore.getUlogDir());\n      addCoreProperty(coreAttribs, loader, node, CoreDescriptor.CORE_TRANSIENT,\n          Boolean.toString(dcore.isTransient()));\n      addCoreProperty(coreAttribs, loader, node, CoreDescriptor.CORE_LOADONSTARTUP,\n          Boolean.toString(dcore.isLoadOnStartup()));\n      addCoreProperty(coreAttribs, loader, node, CoreDescriptor.CORE_CONFIG,\n          dcore.getConfigName());\n      addCoreProperty(coreAttribs, loader, node, CoreDescriptor.CORE_SCHEMA,\n          dcore.getSchemaName());\n\n      addCoreProperty(coreAttribs, loader, node, CoreDescriptor.CORE_COLLECTION,\n          collection, dcore.getName());\n\n      String shard = null;\n      String roles = null;\n      String node_name = null;\n      if (cd != null) {\n        shard = cd.getShardId();\n        roles = cd.getRoles();\n        node_name = cd.getCoreNodeName();\n      }\n      addCoreProperty(coreAttribs, loader, node, CoreDescriptor.CORE_SHARD,\n          shard);\n\n      addCoreProperty(coreAttribs, loader, node, CoreDescriptor.CORE_ROLES,\n          roles);\n\n      addCoreProperty(coreAttribs, loader, node, CoreDescriptor.CORE_NODE_NAME,\n          node_name);\n\n\n      for (Object key : dcore.getCoreProperties().keySet()) {\n\n        if (cfg != null) {\n          Node propNode = cfg.getNode(\"/solr/cores/core[@name='\" + origCoreName + \"']/property[@name='\" + key + \"']\",\n              false);\n\n          if (propNode != null) { // This means it was in the original DOM element, so just copy it.\n            newProps.put(DOMUtil.getAttr(propNode, \"name\", null), DOMUtil.getAttr(propNode, \"value\", null));\n          }\n        }\n      }\n    }\n\n\n\n    SolrXMLSerializer.SolrCoreXMLDef solrCoreXMLDef = new SolrXMLSerializer.SolrCoreXMLDef();\n    solrCoreXMLDef.coreAttribs = coreAttribs;\n    solrCoreXMLDef.coreProperties = newProps;\n    solrCoreXMLDefs.add(solrCoreXMLDef);\n  }\n\n","sourceOld":"  protected void addCoreToPersistList(Config cfg, SolrResourceLoader loader,\n      CoreDescriptor dcore, String origCoreName,\n      List<SolrCoreXMLDef> solrCoreXMLDefs) throws XPathExpressionException {\n\n    Map<String,String> coreAttribs = new HashMap<String,String>();\n    Properties newProps = new Properties();\n\n    // This is simple, just take anything sent in and saved away in at core creation and write it out.\n    if (dcore.getCreatedProperties().size() > 0) {\n      final List<String> stdNames = new ArrayList<String>(Arrays.asList(CoreDescriptor.standardPropNames));\n      coreAttribs.put(CoreDescriptor.CORE_NAME, dcore.getName()); // NOTE: may have been swapped or renamed!\n      for (String key : dcore.getCreatedProperties().stringPropertyNames()) {\n        if (! stdNames.contains(key) && ! key.startsWith(CoreAdminParams.PROPERTY_PREFIX)) continue;\n        if (key.indexOf(CoreAdminParams.PROPERTY_PREFIX) == 0) {\n          newProps.put(key.substring(CoreAdminParams.PROPERTY_PREFIX.length()), dcore.getCreatedProperties().getProperty(key));\n        } else if (! CoreDescriptor.CORE_NAME.equals(key)) {\n          coreAttribs.put(key, dcore.getCreatedProperties().getProperty(key));\n        }\n      }\n      // Insure instdir is persisted if it's the default since it's checked at startup even if not specified on the\n      // create command.\n      if (! dcore.getCreatedProperties().containsKey(CoreDescriptor.CORE_INSTDIR)) {\n        coreAttribs.put(CoreDescriptor.CORE_INSTDIR, dcore.getRawInstanceDir());\n      }\n    } else {\n\n      String coreName = dcore.getProperty(CoreDescriptor.CORE_NAME);\n\n      CloudDescriptor cd = dcore.getCloudDescriptor();\n      String collection = null;\n      if (cd != null) collection = cd.getCollectionName();\n\n      if (origCoreName == null) {\n        origCoreName = coreName;\n      }\n\n      Node node = null;\n      if (cfg != null) {\n        node = cfg.getNode(\"/solr/cores/core[@name='\" + origCoreName + \"']\",\n            false);\n      }\n\n      coreAttribs.put(CoreDescriptor.CORE_NAME, coreName);\n      coreAttribs.put(CoreDescriptor.CORE_INSTDIR, dcore.getRawInstanceDir());\n      //addCoreProperty(coreAttribs, loader, node, CoreDescriptor.CORE_INSTDIR, dcore.getRawInstanceDir(), null);\n\n      addCoreProperty(coreAttribs, loader, node, CoreDescriptor.CORE_COLLECTION,\n          StringUtils.isNotBlank(collection) ? collection : dcore.getName());\n\n      addCoreProperty(coreAttribs, loader, node, CoreDescriptor.CORE_DATADIR,\n          dcore.getDataDir());\n      addCoreProperty(coreAttribs, loader, node, CoreDescriptor.CORE_ULOGDIR,\n          dcore.getUlogDir());\n      addCoreProperty(coreAttribs, loader, node, CoreDescriptor.CORE_TRANSIENT,\n          Boolean.toString(dcore.isTransient()));\n      addCoreProperty(coreAttribs, loader, node, CoreDescriptor.CORE_LOADONSTARTUP,\n          Boolean.toString(dcore.isLoadOnStartup()));\n      addCoreProperty(coreAttribs, loader, node, CoreDescriptor.CORE_CONFIG,\n          dcore.getConfigName());\n      addCoreProperty(coreAttribs, loader, node, CoreDescriptor.CORE_SCHEMA,\n          dcore.getSchemaName());\n\n      addCoreProperty(coreAttribs, loader, node, CoreDescriptor.CORE_COLLECTION,\n          collection, dcore.getName());\n\n      String shard = null;\n      String roles = null;\n      String node_name = null;\n      if (cd != null) {\n        shard = cd.getShardId();\n        roles = cd.getRoles();\n        node_name = cd.getCoreNodeName();\n      }\n      addCoreProperty(coreAttribs, loader, node, CoreDescriptor.CORE_SHARD,\n          shard);\n\n      addCoreProperty(coreAttribs, loader, node, CoreDescriptor.CORE_ROLES,\n          roles);\n\n      addCoreProperty(coreAttribs, loader, node, CoreDescriptor.CORE_NODE_NAME,\n          node_name);\n\n\n      for (Object key : dcore.getCoreProperties().keySet()) {\n\n        if (cfg != null) {\n          Node propNode = cfg.getNode(\"/solr/cores/core[@name='\" + origCoreName + \"']/property[@name='\" + key + \"']\",\n              false);\n\n          if (propNode != null) { // This means it was in the original DOM element, so just copy it.\n            newProps.put(DOMUtil.getAttr(propNode, \"name\", null), DOMUtil.getAttr(propNode, \"value\", null));\n          }\n        }\n      }\n    }\n\n\n\n    SolrXMLSerializer.SolrCoreXMLDef solrCoreXMLDef = new SolrXMLSerializer.SolrCoreXMLDef();\n    solrCoreXMLDef.coreAttribs = coreAttribs;\n    solrCoreXMLDef.coreProperties = newProps;\n    solrCoreXMLDefs.add(solrCoreXMLDef);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7116474e2e390259937401cf928323e0cbc75e60","date":1372780249,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/SolrCores#addCoreToPersistList(Config,SolrResourceLoader,CoreDescriptor,String,List[SolrCoreXMLDef]).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/SolrCores#addCoreToPersistList(Config,SolrResourceLoader,CoreDescriptor,String,List[SolrCoreXMLDef]).mjava","sourceNew":"  protected void addCoreToPersistList(Config cfg, SolrResourceLoader loader,\n      CoreDescriptor dcore, String origCoreName,\n      List<SolrCoreXMLDef> solrCoreXMLDefs) throws XPathExpressionException {\n\n    Map<String,String> coreAttribs = new HashMap<String,String>();\n    Properties newProps = new Properties();\n\n    // This is simple, just take anything sent in and saved away in at core creation and write it out.\n    if (dcore.getCreatedProperties().size() > 0) {\n      final List<String> stdNames = new ArrayList<String>(Arrays.asList(CoreDescriptor.standardPropNames));\n      coreAttribs.put(CoreDescriptor.CORE_NAME, dcore.getName()); // NOTE: may have been swapped or renamed!\n      for (String key : dcore.getCreatedProperties().stringPropertyNames()) {\n        if (! stdNames.contains(key) && ! key.startsWith(CoreAdminParams.PROPERTY_PREFIX)) continue;\n        if (key.indexOf(CoreAdminParams.PROPERTY_PREFIX) == 0) {\n          newProps.put(key.substring(CoreAdminParams.PROPERTY_PREFIX.length()), dcore.getCreatedProperties().getProperty(key));\n        } else if (! CoreDescriptor.CORE_NAME.equals(key)) {\n          coreAttribs.put(key, dcore.getCreatedProperties().getProperty(key));\n        }\n      }\n      // Insure instdir is persisted if it's the default since it's checked at startup even if not specified on the\n      // create command.\n      if (! dcore.getCreatedProperties().containsKey(CoreDescriptor.CORE_INSTDIR)) {\n        coreAttribs.put(CoreDescriptor.CORE_INSTDIR, dcore.getRawInstanceDir());\n      }\n    } else {\n\n      String coreName = dcore.getProperty(CoreDescriptor.CORE_NAME);\n\n      CloudDescriptor cd = dcore.getCloudDescriptor();\n      String collection = null;\n      if (cd != null) collection = cd.getCollectionName();\n\n      if (origCoreName == null) {\n        origCoreName = coreName;\n      }\n\n      Node node = null;\n      if (cfg != null) {\n        node = cfg.getNode(\"/solr/cores/core[@name='\" + origCoreName + \"']\",\n            false);\n      }\n\n      coreAttribs.put(CoreDescriptor.CORE_NAME, coreName);\n      //coreAttribs.put(CoreDescriptor.CORE_INSTDIR, dcore.getRawInstanceDir());\n      addCoreProperty(coreAttribs, loader, node, CoreDescriptor.CORE_INSTDIR, dcore.getRawInstanceDir(), null);\n\n      addCoreProperty(coreAttribs, loader, node, CoreDescriptor.CORE_COLLECTION,\n          StringUtils.isNotBlank(collection) ? collection : dcore.getName());\n\n      addCoreProperty(coreAttribs, loader, node, CoreDescriptor.CORE_DATADIR,\n          dcore.getDataDir());\n      addCoreProperty(coreAttribs, loader, node, CoreDescriptor.CORE_ULOGDIR,\n          dcore.getUlogDir());\n      addCoreProperty(coreAttribs, loader, node, CoreDescriptor.CORE_TRANSIENT,\n          Boolean.toString(dcore.isTransient()));\n      addCoreProperty(coreAttribs, loader, node, CoreDescriptor.CORE_LOADONSTARTUP,\n          Boolean.toString(dcore.isLoadOnStartup()));\n      addCoreProperty(coreAttribs, loader, node, CoreDescriptor.CORE_CONFIG,\n          dcore.getConfigName());\n      addCoreProperty(coreAttribs, loader, node, CoreDescriptor.CORE_SCHEMA,\n          dcore.getSchemaName());\n\n      addCoreProperty(coreAttribs, loader, node, CoreDescriptor.CORE_COLLECTION,\n          collection, dcore.getName());\n\n      String shard = null;\n      String roles = null;\n      String node_name = null;\n      if (cd != null) {\n        shard = cd.getShardId();\n        roles = cd.getRoles();\n        node_name = cd.getCoreNodeName();\n      }\n      addCoreProperty(coreAttribs, loader, node, CoreDescriptor.CORE_SHARD,\n          shard);\n\n      addCoreProperty(coreAttribs, loader, node, CoreDescriptor.CORE_ROLES,\n          roles);\n\n      addCoreProperty(coreAttribs, loader, node, CoreDescriptor.CORE_NODE_NAME,\n          node_name);\n\n\n      for (Object key : dcore.getCoreProperties().keySet()) {\n\n        if (cfg != null) {\n          Node propNode = cfg.getNode(\"/solr/cores/core[@name='\" + origCoreName + \"']/property[@name='\" + key + \"']\",\n              false);\n\n          if (propNode != null) { // This means it was in the original DOM element, so just copy it.\n            newProps.put(DOMUtil.getAttr(propNode, \"name\", null), DOMUtil.getAttr(propNode, \"value\", null));\n          }\n        }\n      }\n    }\n\n\n\n    SolrXMLSerializer.SolrCoreXMLDef solrCoreXMLDef = new SolrXMLSerializer.SolrCoreXMLDef();\n    solrCoreXMLDef.coreAttribs = coreAttribs;\n    solrCoreXMLDef.coreProperties = newProps;\n    solrCoreXMLDefs.add(solrCoreXMLDef);\n  }\n\n","sourceOld":"  protected void addCoreToPersistList(Config cfg, SolrResourceLoader loader,\n      CoreDescriptor dcore, String origCoreName,\n      List<SolrCoreXMLDef> solrCoreXMLDefs) throws XPathExpressionException {\n\n    Map<String,String> coreAttribs = new HashMap<String,String>();\n    Properties newProps = new Properties();\n\n    // This is simple, just take anything sent in and saved away in at core creation and write it out.\n    if (dcore.getCreatedProperties().size() > 0) {\n      final List<String> stdNames = new ArrayList<String>(Arrays.asList(CoreDescriptor.standardPropNames));\n      coreAttribs.put(CoreDescriptor.CORE_NAME, dcore.getName()); // NOTE: may have been swapped or renamed!\n      for (String key : dcore.getCreatedProperties().stringPropertyNames()) {\n        if (! stdNames.contains(key) && ! key.startsWith(CoreAdminParams.PROPERTY_PREFIX)) continue;\n        if (key.indexOf(CoreAdminParams.PROPERTY_PREFIX) == 0) {\n          newProps.put(key.substring(CoreAdminParams.PROPERTY_PREFIX.length()), dcore.getCreatedProperties().getProperty(key));\n        } else if (! CoreDescriptor.CORE_NAME.equals(key)) {\n          coreAttribs.put(key, dcore.getCreatedProperties().getProperty(key));\n        }\n      }\n      // Insure instdir is persisted if it's the default since it's checked at startup even if not specified on the\n      // create command.\n      if (! dcore.getCreatedProperties().containsKey(CoreDescriptor.CORE_INSTDIR)) {\n        coreAttribs.put(CoreDescriptor.CORE_INSTDIR, dcore.getProperty(CoreDescriptor.CORE_INSTDIR));\n      }\n    } else {\n\n      String coreName = dcore.getProperty(CoreDescriptor.CORE_NAME);\n\n      CloudDescriptor cd = dcore.getCloudDescriptor();\n      String collection = null;\n      if (cd != null) collection = cd.getCollectionName();\n\n      if (origCoreName == null) {\n        origCoreName = coreName;\n      }\n\n      Node node = null;\n      if (cfg != null) {\n        node = cfg.getNode(\"/solr/cores/core[@name='\" + origCoreName + \"']\",\n            false);\n      }\n\n      coreAttribs.put(CoreDescriptor.CORE_NAME, coreName);\n\n      addCoreProperty(coreAttribs, loader, node, CoreDescriptor.CORE_INSTDIR, dcore.getRawInstanceDir(), null);\n\n      addCoreProperty(coreAttribs, loader, node, CoreDescriptor.CORE_COLLECTION,\n          StringUtils.isNotBlank(collection) ? collection : dcore.getName());\n\n      addCoreProperty(coreAttribs, loader, node, CoreDescriptor.CORE_DATADIR,\n          dcore.getDataDir());\n      addCoreProperty(coreAttribs, loader, node, CoreDescriptor.CORE_ULOGDIR,\n          dcore.getUlogDir());\n      addCoreProperty(coreAttribs, loader, node, CoreDescriptor.CORE_TRANSIENT,\n          Boolean.toString(dcore.isTransient()));\n      addCoreProperty(coreAttribs, loader, node, CoreDescriptor.CORE_LOADONSTARTUP,\n          Boolean.toString(dcore.isLoadOnStartup()));\n      addCoreProperty(coreAttribs, loader, node, CoreDescriptor.CORE_CONFIG,\n          dcore.getConfigName());\n      addCoreProperty(coreAttribs, loader, node, CoreDescriptor.CORE_SCHEMA,\n          dcore.getSchemaName());\n\n      addCoreProperty(coreAttribs, loader, node, CoreDescriptor.CORE_COLLECTION,\n          collection, dcore.getName());\n\n      String shard = null;\n      String roles = null;\n      String node_name = null;\n      if (cd != null) {\n        shard = cd.getShardId();\n        roles = cd.getRoles();\n        node_name = cd.getCoreNodeName();\n      }\n      addCoreProperty(coreAttribs, loader, node, CoreDescriptor.CORE_SHARD,\n          shard);\n\n      addCoreProperty(coreAttribs, loader, node, CoreDescriptor.CORE_ROLES,\n          roles);\n\n      addCoreProperty(coreAttribs, loader, node, CoreDescriptor.CORE_NODE_NAME,\n          node_name);\n\n\n      for (Object key : dcore.getCoreProperties().keySet()) {\n\n        if (cfg != null) {\n          Node propNode = cfg.getNode(\"/solr/cores/core[@name='\" + origCoreName + \"']/property[@name='\" + key + \"']\",\n              false);\n\n          if (propNode != null) { // This means it was in the original DOM element, so just copy it.\n            newProps.put(DOMUtil.getAttr(propNode, \"name\", null), DOMUtil.getAttr(propNode, \"value\", null));\n          }\n        }\n      }\n    }\n\n\n\n    SolrXMLSerializer.SolrCoreXMLDef solrCoreXMLDef = new SolrXMLSerializer.SolrCoreXMLDef();\n    solrCoreXMLDef.coreAttribs = coreAttribs;\n    solrCoreXMLDef.coreProperties = newProps;\n    solrCoreXMLDefs.add(solrCoreXMLDef);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6e764e9a107f93be9fa3c922bc6a197b3eec387e","date":1373560501,"type":4,"author":"Alan Woodward","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/core/src/java/org/apache/solr/core/SolrCores#addCoreToPersistList(Config,SolrResourceLoader,CoreDescriptor,String,List[SolrCoreXMLDef]).mjava","sourceNew":null,"sourceOld":"  protected void addCoreToPersistList(Config cfg, SolrResourceLoader loader,\n      CoreDescriptor dcore, String origCoreName,\n      List<SolrCoreXMLDef> solrCoreXMLDefs) throws XPathExpressionException {\n\n    Map<String,String> coreAttribs = new HashMap<String,String>();\n    Properties newProps = new Properties();\n\n    // This is simple, just take anything sent in and saved away in at core creation and write it out.\n    if (dcore.getCreatedProperties().size() > 0) {\n      final List<String> stdNames = new ArrayList<String>(Arrays.asList(CoreDescriptor.standardPropNames));\n      coreAttribs.put(CoreDescriptor.CORE_NAME, dcore.getName()); // NOTE: may have been swapped or renamed!\n      for (String key : dcore.getCreatedProperties().stringPropertyNames()) {\n        if (! stdNames.contains(key) && ! key.startsWith(CoreAdminParams.PROPERTY_PREFIX)) continue;\n        if (key.indexOf(CoreAdminParams.PROPERTY_PREFIX) == 0) {\n          newProps.put(key.substring(CoreAdminParams.PROPERTY_PREFIX.length()), dcore.getCreatedProperties().getProperty(key));\n        } else if (! CoreDescriptor.CORE_NAME.equals(key)) {\n          coreAttribs.put(key, dcore.getCreatedProperties().getProperty(key));\n        }\n      }\n      // Insure instdir is persisted if it's the default since it's checked at startup even if not specified on the\n      // create command.\n      if (! dcore.getCreatedProperties().containsKey(CoreDescriptor.CORE_INSTDIR)) {\n        coreAttribs.put(CoreDescriptor.CORE_INSTDIR, dcore.getRawInstanceDir());\n      }\n    } else {\n\n      String coreName = dcore.getProperty(CoreDescriptor.CORE_NAME);\n\n      CloudDescriptor cd = dcore.getCloudDescriptor();\n      String collection = null;\n      if (cd != null) collection = cd.getCollectionName();\n\n      if (origCoreName == null) {\n        origCoreName = coreName;\n      }\n\n      Node node = null;\n      if (cfg != null) {\n        node = cfg.getNode(\"/solr/cores/core[@name='\" + origCoreName + \"']\",\n            false);\n      }\n\n      coreAttribs.put(CoreDescriptor.CORE_NAME, coreName);\n      //coreAttribs.put(CoreDescriptor.CORE_INSTDIR, dcore.getRawInstanceDir());\n      addCoreProperty(coreAttribs, loader, node, CoreDescriptor.CORE_INSTDIR, dcore.getRawInstanceDir(), null);\n\n      addCoreProperty(coreAttribs, loader, node, CoreDescriptor.CORE_COLLECTION,\n          StringUtils.isNotBlank(collection) ? collection : dcore.getName());\n\n      addCoreProperty(coreAttribs, loader, node, CoreDescriptor.CORE_DATADIR,\n          dcore.getDataDir());\n      addCoreProperty(coreAttribs, loader, node, CoreDescriptor.CORE_ULOGDIR,\n          dcore.getUlogDir());\n      addCoreProperty(coreAttribs, loader, node, CoreDescriptor.CORE_TRANSIENT,\n          Boolean.toString(dcore.isTransient()));\n      addCoreProperty(coreAttribs, loader, node, CoreDescriptor.CORE_LOADONSTARTUP,\n          Boolean.toString(dcore.isLoadOnStartup()));\n      addCoreProperty(coreAttribs, loader, node, CoreDescriptor.CORE_CONFIG,\n          dcore.getConfigName());\n      addCoreProperty(coreAttribs, loader, node, CoreDescriptor.CORE_SCHEMA,\n          dcore.getSchemaName());\n\n      addCoreProperty(coreAttribs, loader, node, CoreDescriptor.CORE_COLLECTION,\n          collection, dcore.getName());\n\n      String shard = null;\n      String roles = null;\n      String node_name = null;\n      if (cd != null) {\n        shard = cd.getShardId();\n        roles = cd.getRoles();\n        node_name = cd.getCoreNodeName();\n      }\n      addCoreProperty(coreAttribs, loader, node, CoreDescriptor.CORE_SHARD,\n          shard);\n\n      addCoreProperty(coreAttribs, loader, node, CoreDescriptor.CORE_ROLES,\n          roles);\n\n      addCoreProperty(coreAttribs, loader, node, CoreDescriptor.CORE_NODE_NAME,\n          node_name);\n\n\n      for (Object key : dcore.getCoreProperties().keySet()) {\n\n        if (cfg != null) {\n          Node propNode = cfg.getNode(\"/solr/cores/core[@name='\" + origCoreName + \"']/property[@name='\" + key + \"']\",\n              false);\n\n          if (propNode != null) { // This means it was in the original DOM element, so just copy it.\n            newProps.put(DOMUtil.getAttr(propNode, \"name\", null), DOMUtil.getAttr(propNode, \"value\", null));\n          }\n        }\n      }\n    }\n\n\n\n    SolrXMLSerializer.SolrCoreXMLDef solrCoreXMLDef = new SolrXMLSerializer.SolrCoreXMLDef();\n    solrCoreXMLDef.coreAttribs = coreAttribs;\n    solrCoreXMLDef.coreProperties = newProps;\n    solrCoreXMLDefs.add(solrCoreXMLDef);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"37a0f60745e53927c4c876cfe5b5a58170f0646c","date":1373994005,"type":4,"author":"Han Jiang","isMerge":true,"pathNew":"/dev/null","pathOld":"solr/core/src/java/org/apache/solr/core/SolrCores#addCoreToPersistList(Config,SolrResourceLoader,CoreDescriptor,String,List[SolrCoreXMLDef]).mjava","sourceNew":null,"sourceOld":"  protected void addCoreToPersistList(Config cfg, SolrResourceLoader loader,\n      CoreDescriptor dcore, String origCoreName,\n      List<SolrCoreXMLDef> solrCoreXMLDefs) throws XPathExpressionException {\n    \n    String coreName = dcore.getProperty(CoreDescriptor.CORE_NAME);\n    \n    Map<String,String> coreAttribs = new HashMap<String,String>();\n\n    CloudDescriptor cd = dcore.getCloudDescriptor();\n    String collection = null;\n    if (cd != null) collection = cd.getCollectionName();\n\n    if (origCoreName == null) {\n      origCoreName = coreName;\n    }\n    \n    Properties properties = dcore.getCoreProperties();\n    Node node = null;\n    if (cfg != null) {\n      node = cfg.getNode(\"/solr/cores/core[@name='\" + origCoreName + \"']\",\n          false);\n    }\n    \n    coreAttribs.put(CoreDescriptor.CORE_NAME, coreName);\n    \n    addCoreProperty(coreAttribs, loader, node, CoreDescriptor.CORE_INSTDIR, dcore.getRawInstanceDir(), null);\n\n    coreAttribs.put(CoreDescriptor.CORE_COLLECTION,\n        StringUtils.isNotBlank(collection) ? collection : dcore.getName());\n    \n    addCoreProperty(coreAttribs, loader, node, CoreDescriptor.CORE_DATADIR, dcore.getDataDir(), null);\n    addCoreProperty(coreAttribs, loader, node, CoreDescriptor.CORE_ULOGDIR, dcore.getUlogDir(), null);\n    addCoreProperty(coreAttribs, loader, node, CoreDescriptor.CORE_TRANSIENT, Boolean.toString(dcore.isTransient()), null);\n    addCoreProperty(coreAttribs, loader, node, CoreDescriptor.CORE_LOADONSTARTUP, Boolean.toString(dcore.isLoadOnStartup()), null);\n    \n    addCoreProperty(coreAttribs, loader, node, CoreDescriptor.CORE_COLLECTION,\n        collection, dcore.getName());\n    \n    String shard = null;\n    String roles = null;\n    if (cd != null) {\n      shard = cd.getShardId();\n      roles = cd.getRoles();\n    }\n    addCoreProperty(coreAttribs, loader, node, CoreDescriptor.CORE_SHARD,\n        shard, null);\n    \n    addCoreProperty(coreAttribs, loader, node, CoreDescriptor.CORE_ROLES,\n        roles, null);\n\n    coreAttribs.put(CoreDescriptor.CORE_LOADONSTARTUP,\n        Boolean.toString(dcore.isLoadOnStartup()));\n    coreAttribs.put(CoreDescriptor.CORE_TRANSIENT,\n        Boolean.toString(dcore.isTransient()));\n    \n\n    SolrXMLSerializer.SolrCoreXMLDef solrCoreXMLDef = new SolrXMLSerializer.SolrCoreXMLDef();\n    solrCoreXMLDef.coreAttribs = coreAttribs;\n    solrCoreXMLDef.coreProperties = properties;\n    solrCoreXMLDefs.add(solrCoreXMLDef);\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"7116474e2e390259937401cf928323e0cbc75e60":["354983dcdf70c800bf2573d10b54a7391b1dc167"],"dc6e48afbb50ae0a22fa76e226f04fd585532938":["9409650933cc688e77e565092a25e58adfc2e18d"],"37a0f60745e53927c4c876cfe5b5a58170f0646c":["9409650933cc688e77e565092a25e58adfc2e18d","6e764e9a107f93be9fa3c922bc6a197b3eec387e"],"9409650933cc688e77e565092a25e58adfc2e18d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"354983dcdf70c800bf2573d10b54a7391b1dc167":["d264f386d864b5751209060e8886ca9845f70469"],"6e764e9a107f93be9fa3c922bc6a197b3eec387e":["7116474e2e390259937401cf928323e0cbc75e60"],"d264f386d864b5751209060e8886ca9845f70469":["2eea68c999cd25f09e15e71eb2fd57b17f5eca59"],"2eea68c999cd25f09e15e71eb2fd57b17f5eca59":["dc6e48afbb50ae0a22fa76e226f04fd585532938"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["6e764e9a107f93be9fa3c922bc6a197b3eec387e"]},"commit2Childs":{"7116474e2e390259937401cf928323e0cbc75e60":["6e764e9a107f93be9fa3c922bc6a197b3eec387e"],"dc6e48afbb50ae0a22fa76e226f04fd585532938":["2eea68c999cd25f09e15e71eb2fd57b17f5eca59"],"37a0f60745e53927c4c876cfe5b5a58170f0646c":[],"9409650933cc688e77e565092a25e58adfc2e18d":["dc6e48afbb50ae0a22fa76e226f04fd585532938","37a0f60745e53927c4c876cfe5b5a58170f0646c"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9409650933cc688e77e565092a25e58adfc2e18d"],"354983dcdf70c800bf2573d10b54a7391b1dc167":["7116474e2e390259937401cf928323e0cbc75e60"],"6e764e9a107f93be9fa3c922bc6a197b3eec387e":["37a0f60745e53927c4c876cfe5b5a58170f0646c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"d264f386d864b5751209060e8886ca9845f70469":["354983dcdf70c800bf2573d10b54a7391b1dc167"],"2eea68c999cd25f09e15e71eb2fd57b17f5eca59":["d264f386d864b5751209060e8886ca9845f70469"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["37a0f60745e53927c4c876cfe5b5a58170f0646c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}