{"path":"lucene/test-framework/src/java/org/apache/lucene/store/MockIndexOutputWrapper#copyBytes(DataInput,long).mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/store/MockIndexOutputWrapper#copyBytes(DataInput,long).mjava","pathOld":"lucene/src/test-framework/java/org/apache/lucene/store/MockIndexOutputWrapper#copyBytes(DataInput,long).mjava","sourceNew":"  @Override\n  public void copyBytes(DataInput input, long numBytes) throws IOException {\n    delegate.copyBytes(input, numBytes);\n    // TODO: we may need to check disk full here as well\n    dir.maybeThrowDeterministicException();\n  }\n\n","sourceOld":"  @Override\n  public void copyBytes(DataInput input, long numBytes) throws IOException {\n    delegate.copyBytes(input, numBytes);\n    // TODO: we may need to check disk full here as well\n    dir.maybeThrowDeterministicException();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7ffaf83ebe420f1af7578f7a9e9d079c184edd3e","date":1367905455,"type":3,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/store/MockIndexOutputWrapper#copyBytes(DataInput,long).mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/store/MockIndexOutputWrapper#copyBytes(DataInput,long).mjava","sourceNew":"  @Override\n  public void copyBytes(DataInput input, long numBytes) throws IOException {\n    checkCrashed();\n    checkDiskFull(null, 0, input, numBytes);\n    \n    delegate.copyBytes(input, numBytes);\n    dir.maybeThrowDeterministicException();\n  }\n\n","sourceOld":"  @Override\n  public void copyBytes(DataInput input, long numBytes) throws IOException {\n    delegate.copyBytes(input, numBytes);\n    // TODO: we may need to check disk full here as well\n    dir.maybeThrowDeterministicException();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f35b6636d641ec7fe9d7e9dbb0a443d47bdf784a","date":1419273748,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/store/MockIndexOutputWrapper#copyBytes(DataInput,long).mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/store/MockIndexOutputWrapper#copyBytes(DataInput,long).mjava","sourceNew":"  @Override\n  public void copyBytes(DataInput input, long numBytes) throws IOException {\n    ensureOpen();\n    checkCrashed();\n    checkDiskFull(null, 0, input, numBytes);\n    \n    delegate.copyBytes(input, numBytes);\n    dir.maybeThrowDeterministicException();\n  }\n\n","sourceOld":"  @Override\n  public void copyBytes(DataInput input, long numBytes) throws IOException {\n    checkCrashed();\n    checkDiskFull(null, 0, input, numBytes);\n    \n    delegate.copyBytes(input, numBytes);\n    dir.maybeThrowDeterministicException();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"7ffaf83ebe420f1af7578f7a9e9d079c184edd3e":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"f35b6636d641ec7fe9d7e9dbb0a443d47bdf784a":["7ffaf83ebe420f1af7578f7a9e9d079c184edd3e"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["f35b6636d641ec7fe9d7e9dbb0a443d47bdf784a"]},"commit2Childs":{"7ffaf83ebe420f1af7578f7a9e9d079c184edd3e":["f35b6636d641ec7fe9d7e9dbb0a443d47bdf784a"],"f35b6636d641ec7fe9d7e9dbb0a443d47bdf784a":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["7ffaf83ebe420f1af7578f7a9e9d079c184edd3e"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}