{"path":"solr/core/src/test/org/apache/solr/cloud/SaslZkACLProviderTest#testSaslZkACLProvider().mjava","commits":[{"id":"740d1c1026cde7506b133f0518c3216f45babaec","date":1421114638,"type":0,"author":"Gregory Chanan","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/SaslZkACLProviderTest#testSaslZkACLProvider().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testSaslZkACLProvider() throws Exception {\n    // Test with Sasl enabled\n    SolrZkClient zkClient = new SolrZkClientWithACLs(zkServer.getZkAddress(), AbstractZkTestCase.TIMEOUT);\n    try {\n      VMParamsZkACLAndCredentialsProvidersTest.doTest(zkClient, true, true, true, true, true);\n     } finally {\n      zkClient.close();\n    }\n\n    // Test without Sasl enabled\n    setupZNodes();\n    System.setProperty(\"zookeeper.sasl.client\", \"false\");\n    zkClient = new SolrZkClientNoACLs(zkServer.getZkAddress(), AbstractZkTestCase.TIMEOUT);\n    try {\n      VMParamsZkACLAndCredentialsProvidersTest.doTest(zkClient, true, true, false, false, false);\n    } finally {\n      zkClient.close();\n      System.clearProperty(\"zookeeper.sasl.client\");\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"20be168d828ac40d262f85364d02f15b491dd88b","date":1469725145,"type":3,"author":"Gregory Chanan","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/SaslZkACLProviderTest#testSaslZkACLProvider().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/SaslZkACLProviderTest#testSaslZkACLProvider().mjava","sourceNew":"  @Test\n  public void testSaslZkACLProvider() throws Exception {\n    // Test with Sasl enabled\n    SolrZkClient zkClient = new SolrZkClientWithACLs(zkServer.getZkAddress(), AbstractZkTestCase.TIMEOUT);\n    try {\n      VMParamsZkACLAndCredentialsProvidersTest.doTest(zkClient,\n          true, true, true, true, true,\n          true, true, true, true, true);\n     } finally {\n      zkClient.close();\n    }\n\n    // Test without Sasl enabled\n    setupZNodes();\n    System.setProperty(\"zookeeper.sasl.client\", \"false\");\n    zkClient = new SolrZkClientNoACLs(zkServer.getZkAddress(), AbstractZkTestCase.TIMEOUT);\n    try {\n      VMParamsZkACLAndCredentialsProvidersTest.doTest(zkClient,\n          true, true, false, false, false,\n          false, false, false, false, false);\n    } finally {\n      zkClient.close();\n      System.clearProperty(\"zookeeper.sasl.client\");\n    }\n  }\n\n","sourceOld":"  @Test\n  public void testSaslZkACLProvider() throws Exception {\n    // Test with Sasl enabled\n    SolrZkClient zkClient = new SolrZkClientWithACLs(zkServer.getZkAddress(), AbstractZkTestCase.TIMEOUT);\n    try {\n      VMParamsZkACLAndCredentialsProvidersTest.doTest(zkClient, true, true, true, true, true);\n     } finally {\n      zkClient.close();\n    }\n\n    // Test without Sasl enabled\n    setupZNodes();\n    System.setProperty(\"zookeeper.sasl.client\", \"false\");\n    zkClient = new SolrZkClientNoACLs(zkServer.getZkAddress(), AbstractZkTestCase.TIMEOUT);\n    try {\n      VMParamsZkACLAndCredentialsProvidersTest.doTest(zkClient, true, true, false, false, false);\n    } finally {\n      zkClient.close();\n      System.clearProperty(\"zookeeper.sasl.client\");\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3b013574eedcdbac35dc7e35b0ee616ffc38895d","date":1470897818,"type":3,"author":"Noble Paul","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/cloud/SaslZkACLProviderTest#testSaslZkACLProvider().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/SaslZkACLProviderTest#testSaslZkACLProvider().mjava","sourceNew":"  @Test\n  public void testSaslZkACLProvider() throws Exception {\n    // Test with Sasl enabled\n    SolrZkClient zkClient = new SolrZkClientWithACLs(zkServer.getZkAddress(), AbstractZkTestCase.TIMEOUT);\n    try {\n      VMParamsZkACLAndCredentialsProvidersTest.doTest(zkClient,\n          true, true, true, true, true,\n          true, true, true, true, true);\n     } finally {\n      zkClient.close();\n    }\n\n    // Test without Sasl enabled\n    setupZNodes();\n    System.setProperty(\"zookeeper.sasl.client\", \"false\");\n    zkClient = new SolrZkClientNoACLs(zkServer.getZkAddress(), AbstractZkTestCase.TIMEOUT);\n    try {\n      VMParamsZkACLAndCredentialsProvidersTest.doTest(zkClient,\n          true, true, false, false, false,\n          false, false, false, false, false);\n    } finally {\n      zkClient.close();\n      System.clearProperty(\"zookeeper.sasl.client\");\n    }\n  }\n\n","sourceOld":"  @Test\n  public void testSaslZkACLProvider() throws Exception {\n    // Test with Sasl enabled\n    SolrZkClient zkClient = new SolrZkClientWithACLs(zkServer.getZkAddress(), AbstractZkTestCase.TIMEOUT);\n    try {\n      VMParamsZkACLAndCredentialsProvidersTest.doTest(zkClient, true, true, true, true, true);\n     } finally {\n      zkClient.close();\n    }\n\n    // Test without Sasl enabled\n    setupZNodes();\n    System.setProperty(\"zookeeper.sasl.client\", \"false\");\n    zkClient = new SolrZkClientNoACLs(zkServer.getZkAddress(), AbstractZkTestCase.TIMEOUT);\n    try {\n      VMParamsZkACLAndCredentialsProvidersTest.doTest(zkClient, true, true, false, false, false);\n    } finally {\n      zkClient.close();\n      System.clearProperty(\"zookeeper.sasl.client\");\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/cloud/SaslZkACLProviderTest#testSaslZkACLProvider().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/SaslZkACLProviderTest#testSaslZkACLProvider().mjava","sourceNew":"  @Test\n  public void testSaslZkACLProvider() throws Exception {\n    // Test with Sasl enabled\n    SolrZkClient zkClient = new SolrZkClientWithACLs(zkServer.getZkAddress(), AbstractZkTestCase.TIMEOUT);\n    try {\n      VMParamsZkACLAndCredentialsProvidersTest.doTest(zkClient,\n          true, true, true, true, true,\n          true, true, true, true, true);\n     } finally {\n      zkClient.close();\n    }\n\n    // Test without Sasl enabled\n    setupZNodes();\n    System.setProperty(\"zookeeper.sasl.client\", \"false\");\n    zkClient = new SolrZkClientNoACLs(zkServer.getZkAddress(), AbstractZkTestCase.TIMEOUT);\n    try {\n      VMParamsZkACLAndCredentialsProvidersTest.doTest(zkClient,\n          true, true, false, false, false,\n          false, false, false, false, false);\n    } finally {\n      zkClient.close();\n      System.clearProperty(\"zookeeper.sasl.client\");\n    }\n  }\n\n","sourceOld":"  @Test\n  public void testSaslZkACLProvider() throws Exception {\n    // Test with Sasl enabled\n    SolrZkClient zkClient = new SolrZkClientWithACLs(zkServer.getZkAddress(), AbstractZkTestCase.TIMEOUT);\n    try {\n      VMParamsZkACLAndCredentialsProvidersTest.doTest(zkClient, true, true, true, true, true);\n     } finally {\n      zkClient.close();\n    }\n\n    // Test without Sasl enabled\n    setupZNodes();\n    System.setProperty(\"zookeeper.sasl.client\", \"false\");\n    zkClient = new SolrZkClientNoACLs(zkServer.getZkAddress(), AbstractZkTestCase.TIMEOUT);\n    try {\n      VMParamsZkACLAndCredentialsProvidersTest.doTest(zkClient, true, true, false, false, false);\n    } finally {\n      zkClient.close();\n      System.clearProperty(\"zookeeper.sasl.client\");\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f607a0a2e930f55385c7a24afb68ef661ef7e3ee","date":1530823671,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/SaslZkACLProviderTest#testSaslZkACLProvider().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/SaslZkACLProviderTest#testSaslZkACLProvider().mjava","sourceNew":"  @Test\n  @BadApple(bugUrl=\"https://issues.apache.org/jira/browse/SOLR-12028\") // 05-Jul-2018\n  public void testSaslZkACLProvider() throws Exception {\n    // Test with Sasl enabled\n    SolrZkClient zkClient = new SolrZkClientWithACLs(zkServer.getZkAddress(), AbstractZkTestCase.TIMEOUT);\n    try {\n      VMParamsZkACLAndCredentialsProvidersTest.doTest(zkClient,\n          true, true, true, true, true,\n          true, true, true, true, true);\n     } finally {\n      zkClient.close();\n    }\n\n    // Test without Sasl enabled\n    setupZNodes();\n    System.setProperty(\"zookeeper.sasl.client\", \"false\");\n    zkClient = new SolrZkClientNoACLs(zkServer.getZkAddress(), AbstractZkTestCase.TIMEOUT);\n    try {\n      VMParamsZkACLAndCredentialsProvidersTest.doTest(zkClient,\n          true, true, false, false, false,\n          false, false, false, false, false);\n    } finally {\n      zkClient.close();\n      System.clearProperty(\"zookeeper.sasl.client\");\n    }\n  }\n\n","sourceOld":"  @Test\n  public void testSaslZkACLProvider() throws Exception {\n    // Test with Sasl enabled\n    SolrZkClient zkClient = new SolrZkClientWithACLs(zkServer.getZkAddress(), AbstractZkTestCase.TIMEOUT);\n    try {\n      VMParamsZkACLAndCredentialsProvidersTest.doTest(zkClient,\n          true, true, true, true, true,\n          true, true, true, true, true);\n     } finally {\n      zkClient.close();\n    }\n\n    // Test without Sasl enabled\n    setupZNodes();\n    System.setProperty(\"zookeeper.sasl.client\", \"false\");\n    zkClient = new SolrZkClientNoACLs(zkServer.getZkAddress(), AbstractZkTestCase.TIMEOUT);\n    try {\n      VMParamsZkACLAndCredentialsProvidersTest.doTest(zkClient,\n          true, true, false, false, false,\n          false, false, false, false, false);\n    } finally {\n      zkClient.close();\n      System.clearProperty(\"zookeeper.sasl.client\");\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7eeaaea0106c7d6a2de50acfc8d357121ef8bd26","date":1531589977,"type":3,"author":"Michael Braun","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/cloud/SaslZkACLProviderTest#testSaslZkACLProvider().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/SaslZkACLProviderTest#testSaslZkACLProvider().mjava","sourceNew":"  @Test\n  @BadApple(bugUrl=\"https://issues.apache.org/jira/browse/SOLR-12028\") // 05-Jul-2018\n  public void testSaslZkACLProvider() throws Exception {\n    // Test with Sasl enabled\n    SolrZkClient zkClient = new SolrZkClientWithACLs(zkServer.getZkAddress(), AbstractZkTestCase.TIMEOUT);\n    try {\n      VMParamsZkACLAndCredentialsProvidersTest.doTest(zkClient,\n          true, true, true, true, true,\n          true, true, true, true, true);\n     } finally {\n      zkClient.close();\n    }\n\n    // Test without Sasl enabled\n    setupZNodes();\n    System.setProperty(\"zookeeper.sasl.client\", \"false\");\n    zkClient = new SolrZkClientNoACLs(zkServer.getZkAddress(), AbstractZkTestCase.TIMEOUT);\n    try {\n      VMParamsZkACLAndCredentialsProvidersTest.doTest(zkClient,\n          true, true, false, false, false,\n          false, false, false, false, false);\n    } finally {\n      zkClient.close();\n      System.clearProperty(\"zookeeper.sasl.client\");\n    }\n  }\n\n","sourceOld":"  @Test\n  public void testSaslZkACLProvider() throws Exception {\n    // Test with Sasl enabled\n    SolrZkClient zkClient = new SolrZkClientWithACLs(zkServer.getZkAddress(), AbstractZkTestCase.TIMEOUT);\n    try {\n      VMParamsZkACLAndCredentialsProvidersTest.doTest(zkClient,\n          true, true, true, true, true,\n          true, true, true, true, true);\n     } finally {\n      zkClient.close();\n    }\n\n    // Test without Sasl enabled\n    setupZNodes();\n    System.setProperty(\"zookeeper.sasl.client\", \"false\");\n    zkClient = new SolrZkClientNoACLs(zkServer.getZkAddress(), AbstractZkTestCase.TIMEOUT);\n    try {\n      VMParamsZkACLAndCredentialsProvidersTest.doTest(zkClient,\n          true, true, false, false, false,\n          false, false, false, false, false);\n    } finally {\n      zkClient.close();\n      System.clearProperty(\"zookeeper.sasl.client\");\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","date":1531905561,"type":3,"author":"Alessandro Benedetti","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/cloud/SaslZkACLProviderTest#testSaslZkACLProvider().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/SaslZkACLProviderTest#testSaslZkACLProvider().mjava","sourceNew":"  @Test\n  @BadApple(bugUrl=\"https://issues.apache.org/jira/browse/SOLR-12028\") // 05-Jul-2018\n  public void testSaslZkACLProvider() throws Exception {\n    // Test with Sasl enabled\n    SolrZkClient zkClient = new SolrZkClientWithACLs(zkServer.getZkAddress(), AbstractZkTestCase.TIMEOUT);\n    try {\n      VMParamsZkACLAndCredentialsProvidersTest.doTest(zkClient,\n          true, true, true, true, true,\n          true, true, true, true, true);\n     } finally {\n      zkClient.close();\n    }\n\n    // Test without Sasl enabled\n    setupZNodes();\n    System.setProperty(\"zookeeper.sasl.client\", \"false\");\n    zkClient = new SolrZkClientNoACLs(zkServer.getZkAddress(), AbstractZkTestCase.TIMEOUT);\n    try {\n      VMParamsZkACLAndCredentialsProvidersTest.doTest(zkClient,\n          true, true, false, false, false,\n          false, false, false, false, false);\n    } finally {\n      zkClient.close();\n      System.clearProperty(\"zookeeper.sasl.client\");\n    }\n  }\n\n","sourceOld":"  @Test\n  public void testSaslZkACLProvider() throws Exception {\n    // Test with Sasl enabled\n    SolrZkClient zkClient = new SolrZkClientWithACLs(zkServer.getZkAddress(), AbstractZkTestCase.TIMEOUT);\n    try {\n      VMParamsZkACLAndCredentialsProvidersTest.doTest(zkClient,\n          true, true, true, true, true,\n          true, true, true, true, true);\n     } finally {\n      zkClient.close();\n    }\n\n    // Test without Sasl enabled\n    setupZNodes();\n    System.setProperty(\"zookeeper.sasl.client\", \"false\");\n    zkClient = new SolrZkClientNoACLs(zkServer.getZkAddress(), AbstractZkTestCase.TIMEOUT);\n    try {\n      VMParamsZkACLAndCredentialsProvidersTest.doTest(zkClient,\n          true, true, false, false, false,\n          false, false, false, false, false);\n    } finally {\n      zkClient.close();\n      System.clearProperty(\"zookeeper.sasl.client\");\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d2d6b868457b26b5a2145b8441b1cfcfc0692b02","date":1534307099,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/SaslZkACLProviderTest#testSaslZkACLProvider().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/SaslZkACLProviderTest#testSaslZkACLProvider().mjava","sourceNew":"  @Test\n  //commented 9-Aug-2018 @BadApple(bugUrl=\"https://issues.apache.org/jira/browse/SOLR-12028\") // 05-Jul-2018\n  public void testSaslZkACLProvider() throws Exception {\n    // Test with Sasl enabled\n    SolrZkClient zkClient = new SolrZkClientWithACLs(zkServer.getZkAddress(), AbstractZkTestCase.TIMEOUT);\n    try {\n      VMParamsZkACLAndCredentialsProvidersTest.doTest(zkClient,\n          true, true, true, true, true,\n          true, true, true, true, true);\n     } finally {\n      zkClient.close();\n    }\n\n    // Test without Sasl enabled\n    setupZNodes();\n    System.setProperty(\"zookeeper.sasl.client\", \"false\");\n    zkClient = new SolrZkClientNoACLs(zkServer.getZkAddress(), AbstractZkTestCase.TIMEOUT);\n    try {\n      VMParamsZkACLAndCredentialsProvidersTest.doTest(zkClient,\n          true, true, false, false, false,\n          false, false, false, false, false);\n    } finally {\n      zkClient.close();\n      System.clearProperty(\"zookeeper.sasl.client\");\n    }\n  }\n\n","sourceOld":"  @Test\n  @BadApple(bugUrl=\"https://issues.apache.org/jira/browse/SOLR-12028\") // 05-Jul-2018\n  public void testSaslZkACLProvider() throws Exception {\n    // Test with Sasl enabled\n    SolrZkClient zkClient = new SolrZkClientWithACLs(zkServer.getZkAddress(), AbstractZkTestCase.TIMEOUT);\n    try {\n      VMParamsZkACLAndCredentialsProvidersTest.doTest(zkClient,\n          true, true, true, true, true,\n          true, true, true, true, true);\n     } finally {\n      zkClient.close();\n    }\n\n    // Test without Sasl enabled\n    setupZNodes();\n    System.setProperty(\"zookeeper.sasl.client\", \"false\");\n    zkClient = new SolrZkClientNoACLs(zkServer.getZkAddress(), AbstractZkTestCase.TIMEOUT);\n    try {\n      VMParamsZkACLAndCredentialsProvidersTest.doTest(zkClient,\n          true, true, false, false, false,\n          false, false, false, false, false);\n    } finally {\n      zkClient.close();\n      System.clearProperty(\"zookeeper.sasl.client\");\n    }\n  }\n\n","bugFix":null,"bugIntro":["bb222a3f9d9421d5c95afce73013fbd8de07ea1f"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"14076e7b40405aa1f08702d8df762d08b5d44f70","date":1537071979,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/SaslZkACLProviderTest#testSaslZkACLProvider().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/SaslZkACLProviderTest#testSaslZkACLProvider().mjava","sourceNew":"  @Test\n  //commented 9-Aug-2018 @BadApple(bugUrl=\"https://issues.apache.org/jira/browse/SOLR-12028\") // 05-Jul-2018\n  @BadApple(bugUrl=\"https://issues.apache.org/jira/browse/SOLR-12028\") // added 15-Sep-2018\n  public void testSaslZkACLProvider() throws Exception {\n    // Test with Sasl enabled\n    SolrZkClient zkClient = new SolrZkClientWithACLs(zkServer.getZkAddress(), AbstractZkTestCase.TIMEOUT);\n    try {\n      VMParamsZkACLAndCredentialsProvidersTest.doTest(zkClient,\n          true, true, true, true, true,\n          true, true, true, true, true);\n     } finally {\n      zkClient.close();\n    }\n\n    // Test without Sasl enabled\n    setupZNodes();\n    System.setProperty(\"zookeeper.sasl.client\", \"false\");\n    zkClient = new SolrZkClientNoACLs(zkServer.getZkAddress(), AbstractZkTestCase.TIMEOUT);\n    try {\n      VMParamsZkACLAndCredentialsProvidersTest.doTest(zkClient,\n          true, true, false, false, false,\n          false, false, false, false, false);\n    } finally {\n      zkClient.close();\n      System.clearProperty(\"zookeeper.sasl.client\");\n    }\n  }\n\n","sourceOld":"  @Test\n  //commented 9-Aug-2018 @BadApple(bugUrl=\"https://issues.apache.org/jira/browse/SOLR-12028\") // 05-Jul-2018\n  public void testSaslZkACLProvider() throws Exception {\n    // Test with Sasl enabled\n    SolrZkClient zkClient = new SolrZkClientWithACLs(zkServer.getZkAddress(), AbstractZkTestCase.TIMEOUT);\n    try {\n      VMParamsZkACLAndCredentialsProvidersTest.doTest(zkClient,\n          true, true, true, true, true,\n          true, true, true, true, true);\n     } finally {\n      zkClient.close();\n    }\n\n    // Test without Sasl enabled\n    setupZNodes();\n    System.setProperty(\"zookeeper.sasl.client\", \"false\");\n    zkClient = new SolrZkClientNoACLs(zkServer.getZkAddress(), AbstractZkTestCase.TIMEOUT);\n    try {\n      VMParamsZkACLAndCredentialsProvidersTest.doTest(zkClient,\n          true, true, false, false, false,\n          false, false, false, false, false);\n    } finally {\n      zkClient.close();\n      System.clearProperty(\"zookeeper.sasl.client\");\n    }\n  }\n\n","bugFix":null,"bugIntro":["bb222a3f9d9421d5c95afce73013fbd8de07ea1f"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"bb222a3f9d9421d5c95afce73013fbd8de07ea1f","date":1543514331,"type":3,"author":"markrmiller","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/SaslZkACLProviderTest#testSaslZkACLProvider().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/SaslZkACLProviderTest#testSaslZkACLProvider().mjava","sourceNew":"  @Test\n  public void testSaslZkACLProvider() throws Exception {\n    // Test with Sasl enabled\n    SolrZkClient zkClient = new SolrZkClientWithACLs(zkServer.getZkAddress(), AbstractZkTestCase.TIMEOUT);\n    try {\n      VMParamsZkACLAndCredentialsProvidersTest.doTest(zkClient,\n          true, true, true, true, true,\n          true, true, true, true, true);\n     } finally {\n      zkClient.close();\n    }\n\n    // Test without Sasl enabled\n    setupZNodes();\n    System.setProperty(\"zookeeper.sasl.client\", \"false\");\n    zkClient = new SolrZkClientNoACLs(zkServer.getZkAddress(), AbstractZkTestCase.TIMEOUT);\n    try {\n      VMParamsZkACLAndCredentialsProvidersTest.doTest(zkClient,\n          true, true, false, false, false,\n          false, false, false, false, false);\n    } finally {\n      zkClient.close();\n      System.clearProperty(\"zookeeper.sasl.client\");\n    }\n  }\n\n","sourceOld":"  @Test\n  //commented 9-Aug-2018 @BadApple(bugUrl=\"https://issues.apache.org/jira/browse/SOLR-12028\") // 05-Jul-2018\n  @BadApple(bugUrl=\"https://issues.apache.org/jira/browse/SOLR-12028\") // added 15-Sep-2018\n  public void testSaslZkACLProvider() throws Exception {\n    // Test with Sasl enabled\n    SolrZkClient zkClient = new SolrZkClientWithACLs(zkServer.getZkAddress(), AbstractZkTestCase.TIMEOUT);\n    try {\n      VMParamsZkACLAndCredentialsProvidersTest.doTest(zkClient,\n          true, true, true, true, true,\n          true, true, true, true, true);\n     } finally {\n      zkClient.close();\n    }\n\n    // Test without Sasl enabled\n    setupZNodes();\n    System.setProperty(\"zookeeper.sasl.client\", \"false\");\n    zkClient = new SolrZkClientNoACLs(zkServer.getZkAddress(), AbstractZkTestCase.TIMEOUT);\n    try {\n      VMParamsZkACLAndCredentialsProvidersTest.doTest(zkClient,\n          true, true, false, false, false,\n          false, false, false, false, false);\n    } finally {\n      zkClient.close();\n      System.clearProperty(\"zookeeper.sasl.client\");\n    }\n  }\n\n","bugFix":["14076e7b40405aa1f08702d8df762d08b5d44f70","d2d6b868457b26b5a2145b8441b1cfcfc0692b02"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e44fa10959d6486d9398c154c4162452667a73d0","date":1544993347,"type":3,"author":"markrmiller","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/SaslZkACLProviderTest#testSaslZkACLProvider().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/SaslZkACLProviderTest#testSaslZkACLProvider().mjava","sourceNew":"  @Test\n  @AwaitsFix(bugUrl = \"https://issues.apache.org/jira/browse/SOLR-13075\")\n  public void testSaslZkACLProvider() throws Exception {\n    // Test with Sasl enabled\n    SolrZkClient zkClient = new SolrZkClientWithACLs(zkServer.getZkAddress(), AbstractZkTestCase.TIMEOUT);\n    try {\n      VMParamsZkACLAndCredentialsProvidersTest.doTest(zkClient,\n          true, true, true, true, true,\n          true, true, true, true, true);\n     } finally {\n      zkClient.close();\n    }\n\n    // Test without Sasl enabled\n    setupZNodes();\n    System.setProperty(\"zookeeper.sasl.client\", \"false\");\n    zkClient = new SolrZkClientNoACLs(zkServer.getZkAddress(), AbstractZkTestCase.TIMEOUT);\n    try {\n      VMParamsZkACLAndCredentialsProvidersTest.doTest(zkClient,\n          true, true, false, false, false,\n          false, false, false, false, false);\n    } finally {\n      zkClient.close();\n      System.clearProperty(\"zookeeper.sasl.client\");\n    }\n  }\n\n","sourceOld":"  @Test\n  public void testSaslZkACLProvider() throws Exception {\n    // Test with Sasl enabled\n    SolrZkClient zkClient = new SolrZkClientWithACLs(zkServer.getZkAddress(), AbstractZkTestCase.TIMEOUT);\n    try {\n      VMParamsZkACLAndCredentialsProvidersTest.doTest(zkClient,\n          true, true, true, true, true,\n          true, true, true, true, true);\n     } finally {\n      zkClient.close();\n    }\n\n    // Test without Sasl enabled\n    setupZNodes();\n    System.setProperty(\"zookeeper.sasl.client\", \"false\");\n    zkClient = new SolrZkClientNoACLs(zkServer.getZkAddress(), AbstractZkTestCase.TIMEOUT);\n    try {\n      VMParamsZkACLAndCredentialsProvidersTest.doTest(zkClient,\n          true, true, false, false, false,\n          false, false, false, false, false);\n    } finally {\n      zkClient.close();\n      System.clearProperty(\"zookeeper.sasl.client\");\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"480c24b17b1edb9771934941a2f800ac5599f937","date":1554266730,"type":3,"author":"erick","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/SaslZkACLProviderTest#testSaslZkACLProvider().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/SaslZkACLProviderTest#testSaslZkACLProvider().mjava","sourceNew":"  @Test\n  public void testSaslZkACLProvider() throws Exception {\n    // Test with Sasl enabled\n    SolrZkClient zkClient = new SolrZkClientWithACLs(zkServer.getZkAddress(), AbstractZkTestCase.TIMEOUT);\n    try {\n      VMParamsZkACLAndCredentialsProvidersTest.doTest(zkClient,\n          true, true, true, true, true,\n          true, true, true, true, true);\n     } finally {\n      zkClient.close();\n    }\n\n    // Test without Sasl enabled\n    setupZNodes();\n    System.setProperty(\"zookeeper.sasl.client\", \"false\");\n    zkClient = new SolrZkClientNoACLs(zkServer.getZkAddress(), AbstractZkTestCase.TIMEOUT);\n    try {\n      VMParamsZkACLAndCredentialsProvidersTest.doTest(zkClient,\n          true, true, false, false, false,\n          false, false, false, false, false);\n    } finally {\n      zkClient.close();\n      System.clearProperty(\"zookeeper.sasl.client\");\n    }\n  }\n\n","sourceOld":"  @Test\n  @AwaitsFix(bugUrl = \"https://issues.apache.org/jira/browse/SOLR-13075\")\n  public void testSaslZkACLProvider() throws Exception {\n    // Test with Sasl enabled\n    SolrZkClient zkClient = new SolrZkClientWithACLs(zkServer.getZkAddress(), AbstractZkTestCase.TIMEOUT);\n    try {\n      VMParamsZkACLAndCredentialsProvidersTest.doTest(zkClient,\n          true, true, true, true, true,\n          true, true, true, true, true);\n     } finally {\n      zkClient.close();\n    }\n\n    // Test without Sasl enabled\n    setupZNodes();\n    System.setProperty(\"zookeeper.sasl.client\", \"false\");\n    zkClient = new SolrZkClientNoACLs(zkServer.getZkAddress(), AbstractZkTestCase.TIMEOUT);\n    try {\n      VMParamsZkACLAndCredentialsProvidersTest.doTest(zkClient,\n          true, true, false, false, false,\n          false, false, false, false, false);\n    } finally {\n      zkClient.close();\n      System.clearProperty(\"zookeeper.sasl.client\");\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6ac9962e9ad9fa53b24c8acb572404c0ac1725d1","date":1554479256,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/SaslZkACLProviderTest#testSaslZkACLProvider().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/SaslZkACLProviderTest#testSaslZkACLProvider().mjava","sourceNew":"  @Test\n  @AwaitsFix(bugUrl = \"https://issues.apache.org/jira/browse/SOLR-13075\")\n  public void testSaslZkACLProvider() throws Exception {\n    // Test with Sasl enabled\n    SolrZkClient zkClient = new SolrZkClientWithACLs(zkServer.getZkAddress(), AbstractZkTestCase.TIMEOUT);\n    try {\n      VMParamsZkACLAndCredentialsProvidersTest.doTest(zkClient,\n          true, true, true, true, true,\n          true, true, true, true, true);\n     } finally {\n      zkClient.close();\n    }\n\n    // Test without Sasl enabled\n    setupZNodes();\n    System.setProperty(\"zookeeper.sasl.client\", \"false\");\n    zkClient = new SolrZkClientNoACLs(zkServer.getZkAddress(), AbstractZkTestCase.TIMEOUT);\n    try {\n      VMParamsZkACLAndCredentialsProvidersTest.doTest(zkClient,\n          true, true, false, false, false,\n          false, false, false, false, false);\n    } finally {\n      zkClient.close();\n      System.clearProperty(\"zookeeper.sasl.client\");\n    }\n  }\n\n","sourceOld":"  @Test\n  public void testSaslZkACLProvider() throws Exception {\n    // Test with Sasl enabled\n    SolrZkClient zkClient = new SolrZkClientWithACLs(zkServer.getZkAddress(), AbstractZkTestCase.TIMEOUT);\n    try {\n      VMParamsZkACLAndCredentialsProvidersTest.doTest(zkClient,\n          true, true, true, true, true,\n          true, true, true, true, true);\n     } finally {\n      zkClient.close();\n    }\n\n    // Test without Sasl enabled\n    setupZNodes();\n    System.setProperty(\"zookeeper.sasl.client\", \"false\");\n    zkClient = new SolrZkClientNoACLs(zkServer.getZkAddress(), AbstractZkTestCase.TIMEOUT);\n    try {\n      VMParamsZkACLAndCredentialsProvidersTest.doTest(zkClient,\n          true, true, false, false, false,\n          false, false, false, false, false);\n    } finally {\n      zkClient.close();\n      System.clearProperty(\"zookeeper.sasl.client\");\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"d2d6b868457b26b5a2145b8441b1cfcfc0692b02":["f607a0a2e930f55385c7a24afb68ef661ef7e3ee"],"bb222a3f9d9421d5c95afce73013fbd8de07ea1f":["14076e7b40405aa1f08702d8df762d08b5d44f70"],"14076e7b40405aa1f08702d8df762d08b5d44f70":["d2d6b868457b26b5a2145b8441b1cfcfc0692b02"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["740d1c1026cde7506b133f0518c3216f45babaec","20be168d828ac40d262f85364d02f15b491dd88b"],"e44fa10959d6486d9398c154c4162452667a73d0":["bb222a3f9d9421d5c95afce73013fbd8de07ea1f"],"0efc9f2cae117418f13ba9035f5e1d516ea7a2b5":["20be168d828ac40d262f85364d02f15b491dd88b","f607a0a2e930f55385c7a24afb68ef661ef7e3ee"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"480c24b17b1edb9771934941a2f800ac5599f937":["e44fa10959d6486d9398c154c4162452667a73d0"],"f607a0a2e930f55385c7a24afb68ef661ef7e3ee":["20be168d828ac40d262f85364d02f15b491dd88b"],"740d1c1026cde7506b133f0518c3216f45babaec":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"20be168d828ac40d262f85364d02f15b491dd88b":["740d1c1026cde7506b133f0518c3216f45babaec"],"6ac9962e9ad9fa53b24c8acb572404c0ac1725d1":["480c24b17b1edb9771934941a2f800ac5599f937"],"3b013574eedcdbac35dc7e35b0ee616ffc38895d":["740d1c1026cde7506b133f0518c3216f45babaec","20be168d828ac40d262f85364d02f15b491dd88b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["6ac9962e9ad9fa53b24c8acb572404c0ac1725d1"],"7eeaaea0106c7d6a2de50acfc8d357121ef8bd26":["20be168d828ac40d262f85364d02f15b491dd88b","f607a0a2e930f55385c7a24afb68ef661ef7e3ee"]},"commit2Childs":{"d2d6b868457b26b5a2145b8441b1cfcfc0692b02":["14076e7b40405aa1f08702d8df762d08b5d44f70"],"bb222a3f9d9421d5c95afce73013fbd8de07ea1f":["e44fa10959d6486d9398c154c4162452667a73d0"],"14076e7b40405aa1f08702d8df762d08b5d44f70":["bb222a3f9d9421d5c95afce73013fbd8de07ea1f"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"e44fa10959d6486d9398c154c4162452667a73d0":["480c24b17b1edb9771934941a2f800ac5599f937"],"0efc9f2cae117418f13ba9035f5e1d516ea7a2b5":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["740d1c1026cde7506b133f0518c3216f45babaec"],"480c24b17b1edb9771934941a2f800ac5599f937":["6ac9962e9ad9fa53b24c8acb572404c0ac1725d1"],"f607a0a2e930f55385c7a24afb68ef661ef7e3ee":["d2d6b868457b26b5a2145b8441b1cfcfc0692b02","0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","7eeaaea0106c7d6a2de50acfc8d357121ef8bd26"],"740d1c1026cde7506b133f0518c3216f45babaec":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","20be168d828ac40d262f85364d02f15b491dd88b","3b013574eedcdbac35dc7e35b0ee616ffc38895d"],"20be168d828ac40d262f85364d02f15b491dd88b":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","f607a0a2e930f55385c7a24afb68ef661ef7e3ee","3b013574eedcdbac35dc7e35b0ee616ffc38895d","7eeaaea0106c7d6a2de50acfc8d357121ef8bd26"],"6ac9962e9ad9fa53b24c8acb572404c0ac1725d1":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3b013574eedcdbac35dc7e35b0ee616ffc38895d":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"7eeaaea0106c7d6a2de50acfc8d357121ef8bd26":[]},"heads":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","3b013574eedcdbac35dc7e35b0ee616ffc38895d","cd5edd1f2b162a5cfa08efd17851a07373a96817","7eeaaea0106c7d6a2de50acfc8d357121ef8bd26"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}