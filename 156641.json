{"path":"src/java/org/apache/lucene/analysis/ReusableAnalyzerBase.TokenStreamComponents#reset(Reader).mjava","commits":[{"id":"ddc5fbfd4c64963aba52713a4496522540294d69","date":1262508497,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"src/java/org/apache/lucene/analysis/ReusableAnalyzerBase.TokenStreamComponents#reset(Reader).mjava","pathOld":"/dev/null","sourceNew":"    /**\n     * Resets the encapsulated components with the given reader. This method by\n     * default returns <code>true</code> indicating that the components have\n     * been reset successfully. Subclasses of {@link ReusableAnalyzerBase} might use\n     * their own {@link TokenStreamComponents} returning <code>false</code> if\n     * the components cannot be reset.\n     * \n     * @param reader\n     *          a reader to reset the source component\n     * @return <code>true</code> if the components were reset, otherwise\n     *         <code>false</code>\n     * @throws IOException\n     *           if the component's reset method throws an {@link IOException}\n     */\n    protected boolean reset(final Reader reader) throws IOException {\n      source.reset(reader);\n      if(sink != source)\n        sink.reset(); // only reset if the sink reference is different from source\n      return true;\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["fcbc12aa8147f5203ca283e7252ba4280d6ffd16"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/analysis/ReusableAnalyzerBase.TokenStreamComponents#reset(Reader).mjava","pathOld":"src/java/org/apache/lucene/analysis/ReusableAnalyzerBase.TokenStreamComponents#reset(Reader).mjava","sourceNew":"    /**\n     * Resets the encapsulated components with the given reader. This method by\n     * default returns <code>true</code> indicating that the components have\n     * been reset successfully. Subclasses of {@link ReusableAnalyzerBase} might use\n     * their own {@link TokenStreamComponents} returning <code>false</code> if\n     * the components cannot be reset.\n     * \n     * @param reader\n     *          a reader to reset the source component\n     * @return <code>true</code> if the components were reset, otherwise\n     *         <code>false</code>\n     * @throws IOException\n     *           if the component's reset method throws an {@link IOException}\n     */\n    protected boolean reset(final Reader reader) throws IOException {\n      source.reset(reader);\n      if(sink != source)\n        sink.reset(); // only reset if the sink reference is different from source\n      return true;\n    }\n\n","sourceOld":"    /**\n     * Resets the encapsulated components with the given reader. This method by\n     * default returns <code>true</code> indicating that the components have\n     * been reset successfully. Subclasses of {@link ReusableAnalyzerBase} might use\n     * their own {@link TokenStreamComponents} returning <code>false</code> if\n     * the components cannot be reset.\n     * \n     * @param reader\n     *          a reader to reset the source component\n     * @return <code>true</code> if the components were reset, otherwise\n     *         <code>false</code>\n     * @throws IOException\n     *           if the component's reset method throws an {@link IOException}\n     */\n    protected boolean reset(final Reader reader) throws IOException {\n      source.reset(reader);\n      if(sink != source)\n        sink.reset(); // only reset if the sink reference is different from source\n      return true;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"ddc5fbfd4c64963aba52713a4496522540294d69":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["ddc5fbfd4c64963aba52713a4496522540294d69"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["ddc5fbfd4c64963aba52713a4496522540294d69"],"ddc5fbfd4c64963aba52713a4496522540294d69":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}