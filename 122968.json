{"path":"sandbox/contributions/webcrawler-LARM/libs/HTTPClient-patch/HTTPClient/HTTPResponse#HTTPResponse(HTTPClientModule[],int,Request,int).mjava","commits":[{"id":"bc6055f4a2e8e9f9caaec2297010c9502480ed69","date":1050060580,"type":0,"author":"cmarschner","isMerge":false,"pathNew":"sandbox/contributions/webcrawler-LARM/libs/HTTPClient-patch/HTTPClient/HTTPResponse#HTTPResponse(HTTPClientModule[],int,Request,int).mjava","pathOld":"/dev/null","sourceNew":"    /**\n     * Creates a new HTTPResponse.\n     *\n     * @param modules        the list of modules handling this response\n     * @param timeout        the timeout to be used on stream read()'s\n     * @param orig           Description of the Parameter\n     * @param readIncrement  Description of the Parameter\n     */\n    HTTPResponse(HTTPClientModule[] modules, int timeout, Request orig, int readIncrement)\n    {\n        this.modules = modules;\n        this.timeout = timeout;\n        try\n        {\n            int qp = orig.getRequestURI().indexOf('?');\n            this.OriginalURI = new URI(orig.getConnection().getProtocol(),\n                    null,\n                    orig.getConnection().getHost(),\n                    orig.getConnection().getPort(),\n                    qp < 0 ? orig.getRequestURI() :\n                    orig.getRequestURI().substring(0, qp),\n                    qp < 0 ? null :\n                    orig.getRequestURI().substring(qp + 1),\n                    null);\n        }\n        catch (ParseException pe)\n        {\n        }\n        this.method = orig.getMethod();\n        this.readIncrement = readIncrement;\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"afc16d717d9ed1a8e45371668ca6de674164d624","date":1103345442,"type":4,"author":"Otis Gospodnetic","isMerge":false,"pathNew":"/dev/null","pathOld":"sandbox/contributions/webcrawler-LARM/libs/HTTPClient-patch/HTTPClient/HTTPResponse#HTTPResponse(HTTPClientModule[],int,Request,int).mjava","sourceNew":null,"sourceOld":"    /**\n     * Creates a new HTTPResponse.\n     *\n     * @param modules        the list of modules handling this response\n     * @param timeout        the timeout to be used on stream read()'s\n     * @param orig           Description of the Parameter\n     * @param readIncrement  Description of the Parameter\n     */\n    HTTPResponse(HTTPClientModule[] modules, int timeout, Request orig, int readIncrement)\n    {\n        this.modules = modules;\n        this.timeout = timeout;\n        try\n        {\n            int qp = orig.getRequestURI().indexOf('?');\n            this.OriginalURI = new URI(orig.getConnection().getProtocol(),\n                    null,\n                    orig.getConnection().getHost(),\n                    orig.getConnection().getPort(),\n                    qp < 0 ? orig.getRequestURI() :\n                    orig.getRequestURI().substring(0, qp),\n                    qp < 0 ? null :\n                    orig.getRequestURI().substring(qp + 1),\n                    null);\n        }\n        catch (ParseException pe)\n        {\n        }\n        this.method = orig.getMethod();\n        this.readIncrement = readIncrement;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"bc6055f4a2e8e9f9caaec2297010c9502480ed69":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"afc16d717d9ed1a8e45371668ca6de674164d624":["bc6055f4a2e8e9f9caaec2297010c9502480ed69"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["afc16d717d9ed1a8e45371668ca6de674164d624"]},"commit2Childs":{"bc6055f4a2e8e9f9caaec2297010c9502480ed69":["afc16d717d9ed1a8e45371668ca6de674164d624"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["bc6055f4a2e8e9f9caaec2297010c9502480ed69"],"afc16d717d9ed1a8e45371668ca6de674164d624":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}