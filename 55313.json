{"path":"lucene/core/src/test/org/apache/lucene/index/TestSegmentReader#testOutOfBoundsAccess().mjava","commits":[{"id":"4d0ee734a67ae20fd4c683458847aebde606bb02","date":1352490740,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestSegmentReader#testOutOfBoundsAccess().mjava","pathOld":"/dev/null","sourceNew":"  public void testOutOfBoundsAccess() throws IOException {\n    int numDocs = reader.maxDoc();\n    try {\n      reader.document(-1);\n      fail();\n    } catch (IndexOutOfBoundsException expected) {}\n    \n    try {\n      reader.getTermVectors(-1);\n      fail();\n    } catch (IndexOutOfBoundsException expected) {}\n    \n    try {\n      reader.document(numDocs);\n      fail();\n    } catch (IndexOutOfBoundsException expected) {}\n    \n    try {\n      reader.getTermVectors(numDocs);\n      fail();\n    } catch (IndexOutOfBoundsException expected) {}\n    \n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["05fe562aa248790944d43cdd478f512572835ba0"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"407687e67faf6e1f02a211ca078d8e3eed631027","date":1355157407,"type":0,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestSegmentReader#testOutOfBoundsAccess().mjava","pathOld":"/dev/null","sourceNew":"  public void testOutOfBoundsAccess() throws IOException {\n    int numDocs = reader.maxDoc();\n    try {\n      reader.document(-1);\n      fail();\n    } catch (IndexOutOfBoundsException expected) {}\n    \n    try {\n      reader.getTermVectors(-1);\n      fail();\n    } catch (IndexOutOfBoundsException expected) {}\n    \n    try {\n      reader.document(numDocs);\n      fail();\n    } catch (IndexOutOfBoundsException expected) {}\n    \n    try {\n      reader.getTermVectors(numDocs);\n      fail();\n    } catch (IndexOutOfBoundsException expected) {}\n    \n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"05fe562aa248790944d43cdd478f512572835ba0","date":1455901667,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestSegmentReader#testOutOfBoundsAccess().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestSegmentReader#testOutOfBoundsAccess().mjava","sourceNew":"  public void testOutOfBoundsAccess() throws IOException {\n    int numDocs = reader.maxDoc();\n\n    expectThrows(IndexOutOfBoundsException.class, () -> {\n      reader.document(-1);\n    });\n    \n    expectThrows(IndexOutOfBoundsException.class, () -> {\n      reader.getTermVectors(-1);\n    });\n    \n    expectThrows(IndexOutOfBoundsException.class, () -> {\n      reader.document(numDocs);\n    });\n    \n    expectThrows(IndexOutOfBoundsException.class, () -> {\n      reader.getTermVectors(numDocs);\n    });    \n  }\n\n","sourceOld":"  public void testOutOfBoundsAccess() throws IOException {\n    int numDocs = reader.maxDoc();\n    try {\n      reader.document(-1);\n      fail();\n    } catch (IndexOutOfBoundsException expected) {}\n    \n    try {\n      reader.getTermVectors(-1);\n      fail();\n    } catch (IndexOutOfBoundsException expected) {}\n    \n    try {\n      reader.document(numDocs);\n      fail();\n    } catch (IndexOutOfBoundsException expected) {}\n    \n    try {\n      reader.getTermVectors(numDocs);\n      fail();\n    } catch (IndexOutOfBoundsException expected) {}\n    \n  }\n\n","bugFix":["4d0ee734a67ae20fd4c683458847aebde606bb02"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"407687e67faf6e1f02a211ca078d8e3eed631027":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","4d0ee734a67ae20fd4c683458847aebde606bb02"],"05fe562aa248790944d43cdd478f512572835ba0":["4d0ee734a67ae20fd4c683458847aebde606bb02"],"4d0ee734a67ae20fd4c683458847aebde606bb02":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["05fe562aa248790944d43cdd478f512572835ba0"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["407687e67faf6e1f02a211ca078d8e3eed631027","4d0ee734a67ae20fd4c683458847aebde606bb02"],"407687e67faf6e1f02a211ca078d8e3eed631027":[],"05fe562aa248790944d43cdd478f512572835ba0":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"4d0ee734a67ae20fd4c683458847aebde606bb02":["407687e67faf6e1f02a211ca078d8e3eed631027","05fe562aa248790944d43cdd478f512572835ba0"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["407687e67faf6e1f02a211ca078d8e3eed631027","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}