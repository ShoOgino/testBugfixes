{"path":"sandbox/contributions/db/src/java/org/apache/lucene/store/db/File#exists(Db,DbTxn).mjava","commits":[{"id":"16869a49920ab77b6df2f6d515ff7499372d7336","date":1074040185,"type":0,"author":"Erik Hatcher","isMerge":false,"pathNew":"sandbox/contributions/db/src/java/org/apache/lucene/store/db/File#exists(Db,DbTxn).mjava","pathOld":"/dev/null","sourceNew":"    protected boolean exists(Db files, DbTxn txn)\n        throws IOException\n    {\n        try {\n            if (files.get(txn, key, data, 0) == Db.DB_NOTFOUND)\n                return false;\n        } catch (DbException e) {\n            throw new IOException(e.getMessage());\n        }\n        \n        byte[] bytes = data.getData();\n        ByteArrayInputStream buffer = new ByteArrayInputStream(bytes);\n        DataInputStream in = new DataInputStream(buffer);\n\n        length = in.readLong();\n        timeModified = in.readLong();\n        in.close();\n\n        uuid = new byte[16];\n        System.arraycopy(bytes, 16, uuid, 0, 16);\n\n        return true;\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b7093bce16e678ecaf87612e82980c6a5959d84d","date":1086082023,"type":5,"author":"Erik Hatcher","isMerge":false,"pathNew":"sandbox/contributions/db/src/java/org/apache/lucene/store/db/File#exists(Db,DbTxn,int).mjava","pathOld":"sandbox/contributions/db/src/java/org/apache/lucene/store/db/File#exists(Db,DbTxn).mjava","sourceNew":"    protected boolean exists(Db files, DbTxn txn, int flags)\n        throws IOException\n    {\n        try {\n            if (files.get(txn, key, data, flags) == Db.DB_NOTFOUND)\n                return false;\n        } catch (DbException e) {\n            throw new IOException(e.getMessage());\n        }\n        \n        byte[] bytes = data.getData();\n        ByteArrayInputStream buffer = new ByteArrayInputStream(bytes);\n        DataInputStream in = new DataInputStream(buffer);\n\n        length = in.readLong();\n        timeModified = in.readLong();\n        in.close();\n\n        uuid = new byte[16];\n        System.arraycopy(bytes, 16, uuid, 0, 16);\n\n        return true;\n    }\n\n","sourceOld":"    protected boolean exists(Db files, DbTxn txn)\n        throws IOException\n    {\n        try {\n            if (files.get(txn, key, data, 0) == Db.DB_NOTFOUND)\n                return false;\n        } catch (DbException e) {\n            throw new IOException(e.getMessage());\n        }\n        \n        byte[] bytes = data.getData();\n        ByteArrayInputStream buffer = new ByteArrayInputStream(bytes);\n        DataInputStream in = new DataInputStream(buffer);\n\n        length = in.readLong();\n        timeModified = in.readLong();\n        in.close();\n\n        uuid = new byte[16];\n        System.arraycopy(bytes, 16, uuid, 0, 16);\n\n        return true;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"16869a49920ab77b6df2f6d515ff7499372d7336":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"b7093bce16e678ecaf87612e82980c6a5959d84d":["16869a49920ab77b6df2f6d515ff7499372d7336"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b7093bce16e678ecaf87612e82980c6a5959d84d"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["16869a49920ab77b6df2f6d515ff7499372d7336"],"16869a49920ab77b6df2f6d515ff7499372d7336":["b7093bce16e678ecaf87612e82980c6a5959d84d"],"b7093bce16e678ecaf87612e82980c6a5959d84d":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}