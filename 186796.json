{"path":"lucene/src/java/org/apache/lucene/codecs/BlockTreeTermsReader.FieldReader.SegmentTermsEnum#SegmentTermsEnum().mjava","commits":[{"id":"a0ae5e3ed1232483b7b8a014f175a5fe43595982","date":1324062192,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/codecs/BlockTreeTermsReader.FieldReader.SegmentTermsEnum#SegmentTermsEnum().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/BlockTreeTermsReader.FieldReader.SegmentTermsEnum#SegmentTermsEnum().mjava","sourceNew":"      public SegmentTermsEnum() throws IOException {\n        //if (DEBUG) System.out.println(\"BTTR.init seg=\" + segment);\n        stack = new Frame[0];\n        \n        // Used to hold seek by TermState, or cached seek\n        staticFrame = new Frame(-1);\n\n        // Init w/ root block; don't use index since it may\n        // not (and need not) have been loaded\n        for(int arcIdx=0;arcIdx<arcs.length;arcIdx++) {\n          arcs[arcIdx] = new FST.Arc<BytesRef>();\n        }\n\n        currentFrame = staticFrame;\n        final FST.Arc<BytesRef> arc;\n        if (index != null) {\n          arc = index.getFirstArc(arcs[0]);\n          // Empty string prefix must have an output in the index!\n          assert arc.isFinal();\n        } else {\n          arc = null;\n        }\n        currentFrame = staticFrame;\n        //currentFrame = pushFrame(arc, rootCode, 0);\n        //currentFrame.loadBlock();\n        validIndexPrefix = 0;\n        // if (DEBUG) {\n        //   System.out.println(\"init frame state \" + currentFrame.ord);\n        //   printSeekState();\n        // }\n\n        //System.out.println();\n        // computeBlockStats().print(System.out);\n      }\n\n","sourceOld":"      public SegmentTermsEnum() throws IOException {\n        //if (DEBUG) System.out.println(\"BTTR.init seg=\" + segment);\n        stack = new Frame[0];\n        \n        // Used to hold seek by TermState, or cached seek\n        staticFrame = new Frame(-1);\n\n        // Init w/ root block; don't use index since it may\n        // not (and need not) have been loaded\n        for(int arcIdx=0;arcIdx<arcs.length;arcIdx++) {\n          arcs[arcIdx] = new FST.Arc<BytesRef>();\n        }\n\n        currentFrame = staticFrame;\n        final FST.Arc<BytesRef> arc;\n        if (index != null) {\n          arc = index.getFirstArc(arcs[0]);\n          // Empty string prefix must have an output in the index!\n          assert arc.isFinal();\n        } else {\n          arc = null;\n        }\n        currentFrame = staticFrame;\n        //currentFrame = pushFrame(arc, rootCode, 0);\n        //currentFrame.loadBlock();\n        validIndexPrefix = 0;\n        // if (DEBUG) {\n        //   System.out.println(\"init frame state \" + currentFrame.ord);\n        //   printSeekState();\n        // }\n\n        //System.out.println();\n        // computeBlockStats().print(System.out);\n      }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b3be20ca1091c0b7cdb2308b9023606a5e451cec","date":1327877325,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/codecs/BlockTreeTermsReader.FieldReader.SegmentTermsEnum#SegmentTermsEnum().mjava","pathOld":"lucene/src/java/org/apache/lucene/codecs/BlockTreeTermsReader.FieldReader.SegmentTermsEnum#SegmentTermsEnum().mjava","sourceNew":"      public SegmentTermsEnum() throws IOException {\n        //if (DEBUG) System.out.println(\"BTTR.init seg=\" + segment);\n        stack = new Frame[0];\n        \n        // Used to hold seek by TermState, or cached seek\n        staticFrame = new Frame(-1);\n\n        if (index == null) {\n          fstReader = null;\n        } else {\n          fstReader = index.getBytesReader(0);\n        }\n\n        // Init w/ root block; don't use index since it may\n        // not (and need not) have been loaded\n        for(int arcIdx=0;arcIdx<arcs.length;arcIdx++) {\n          arcs[arcIdx] = new FST.Arc<BytesRef>();\n        }\n\n        currentFrame = staticFrame;\n        final FST.Arc<BytesRef> arc;\n        if (index != null) {\n          arc = index.getFirstArc(arcs[0]);\n          // Empty string prefix must have an output in the index!\n          assert arc.isFinal();\n        } else {\n          arc = null;\n        }\n        currentFrame = staticFrame;\n        //currentFrame = pushFrame(arc, rootCode, 0);\n        //currentFrame.loadBlock();\n        validIndexPrefix = 0;\n        // if (DEBUG) {\n        //   System.out.println(\"init frame state \" + currentFrame.ord);\n        //   printSeekState();\n        // }\n\n        //System.out.println();\n        // computeBlockStats().print(System.out);\n      }\n\n","sourceOld":"      public SegmentTermsEnum() throws IOException {\n        //if (DEBUG) System.out.println(\"BTTR.init seg=\" + segment);\n        stack = new Frame[0];\n        \n        // Used to hold seek by TermState, or cached seek\n        staticFrame = new Frame(-1);\n\n        // Init w/ root block; don't use index since it may\n        // not (and need not) have been loaded\n        for(int arcIdx=0;arcIdx<arcs.length;arcIdx++) {\n          arcs[arcIdx] = new FST.Arc<BytesRef>();\n        }\n\n        currentFrame = staticFrame;\n        final FST.Arc<BytesRef> arc;\n        if (index != null) {\n          arc = index.getFirstArc(arcs[0]);\n          // Empty string prefix must have an output in the index!\n          assert arc.isFinal();\n        } else {\n          arc = null;\n        }\n        currentFrame = staticFrame;\n        //currentFrame = pushFrame(arc, rootCode, 0);\n        //currentFrame.loadBlock();\n        validIndexPrefix = 0;\n        // if (DEBUG) {\n        //   System.out.println(\"init frame state \" + currentFrame.ord);\n        //   printSeekState();\n        // }\n\n        //System.out.println();\n        // computeBlockStats().print(System.out);\n      }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"817882884229bace7dc5d1b75f6b0e4aa1e47122","date":1327879145,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/codecs/BlockTreeTermsReader.FieldReader.SegmentTermsEnum#SegmentTermsEnum().mjava","pathOld":"lucene/src/java/org/apache/lucene/codecs/BlockTreeTermsReader.FieldReader.SegmentTermsEnum#SegmentTermsEnum().mjava","sourceNew":"      public SegmentTermsEnum() throws IOException {\n        //if (DEBUG) System.out.println(\"BTTR.init seg=\" + segment);\n        stack = new Frame[0];\n        \n        // Used to hold seek by TermState, or cached seek\n        staticFrame = new Frame(-1);\n\n        if (index == null) {\n          fstReader = null;\n        } else {\n          fstReader = index.getBytesReader(0);\n        }\n\n        // Init w/ root block; don't use index since it may\n        // not (and need not) have been loaded\n        for(int arcIdx=0;arcIdx<arcs.length;arcIdx++) {\n          arcs[arcIdx] = new FST.Arc<BytesRef>();\n        }\n\n        currentFrame = staticFrame;\n        final FST.Arc<BytesRef> arc;\n        if (index != null) {\n          arc = index.getFirstArc(arcs[0]);\n          // Empty string prefix must have an output in the index!\n          assert arc.isFinal();\n        } else {\n          arc = null;\n        }\n        currentFrame = staticFrame;\n        //currentFrame = pushFrame(arc, rootCode, 0);\n        //currentFrame.loadBlock();\n        validIndexPrefix = 0;\n        // if (DEBUG) {\n        //   System.out.println(\"init frame state \" + currentFrame.ord);\n        //   printSeekState();\n        // }\n\n        //System.out.println();\n        // computeBlockStats().print(System.out);\n      }\n\n","sourceOld":"      public SegmentTermsEnum() throws IOException {\n        //if (DEBUG) System.out.println(\"BTTR.init seg=\" + segment);\n        stack = new Frame[0];\n        \n        // Used to hold seek by TermState, or cached seek\n        staticFrame = new Frame(-1);\n\n        // Init w/ root block; don't use index since it may\n        // not (and need not) have been loaded\n        for(int arcIdx=0;arcIdx<arcs.length;arcIdx++) {\n          arcs[arcIdx] = new FST.Arc<BytesRef>();\n        }\n\n        currentFrame = staticFrame;\n        final FST.Arc<BytesRef> arc;\n        if (index != null) {\n          arc = index.getFirstArc(arcs[0]);\n          // Empty string prefix must have an output in the index!\n          assert arc.isFinal();\n        } else {\n          arc = null;\n        }\n        currentFrame = staticFrame;\n        //currentFrame = pushFrame(arc, rootCode, 0);\n        //currentFrame.loadBlock();\n        validIndexPrefix = 0;\n        // if (DEBUG) {\n        //   System.out.println(\"init frame state \" + currentFrame.ord);\n        //   printSeekState();\n        // }\n\n        //System.out.println();\n        // computeBlockStats().print(System.out);\n      }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5b6fdfce35d0adb18836cf8711abe487a934df33","date":1327946200,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/codecs/BlockTreeTermsReader.FieldReader.SegmentTermsEnum#SegmentTermsEnum().mjava","pathOld":"lucene/src/java/org/apache/lucene/codecs/BlockTreeTermsReader.FieldReader.SegmentTermsEnum#SegmentTermsEnum().mjava","sourceNew":"      public SegmentTermsEnum() throws IOException {\n        //if (DEBUG) System.out.println(\"BTTR.init seg=\" + segment);\n        stack = new Frame[0];\n        \n        // Used to hold seek by TermState, or cached seek\n        staticFrame = new Frame(-1);\n\n        if (index == null) {\n          fstReader = null;\n        } else {\n          fstReader = index.getBytesReader(0);\n        }\n\n        // Init w/ root block; don't use index since it may\n        // not (and need not) have been loaded\n        for(int arcIdx=0;arcIdx<arcs.length;arcIdx++) {\n          arcs[arcIdx] = new FST.Arc<BytesRef>();\n        }\n\n        currentFrame = staticFrame;\n        final FST.Arc<BytesRef> arc;\n        if (index != null) {\n          arc = index.getFirstArc(arcs[0]);\n          // Empty string prefix must have an output in the index!\n          assert arc.isFinal();\n        } else {\n          arc = null;\n        }\n        currentFrame = staticFrame;\n        //currentFrame = pushFrame(arc, rootCode, 0);\n        //currentFrame.loadBlock();\n        validIndexPrefix = 0;\n        // if (DEBUG) {\n        //   System.out.println(\"init frame state \" + currentFrame.ord);\n        //   printSeekState();\n        // }\n\n        //System.out.println();\n        // computeBlockStats().print(System.out);\n      }\n\n","sourceOld":"      public SegmentTermsEnum() throws IOException {\n        //if (DEBUG) System.out.println(\"BTTR.init seg=\" + segment);\n        stack = new Frame[0];\n        \n        // Used to hold seek by TermState, or cached seek\n        staticFrame = new Frame(-1);\n\n        // Init w/ root block; don't use index since it may\n        // not (and need not) have been loaded\n        for(int arcIdx=0;arcIdx<arcs.length;arcIdx++) {\n          arcs[arcIdx] = new FST.Arc<BytesRef>();\n        }\n\n        currentFrame = staticFrame;\n        final FST.Arc<BytesRef> arc;\n        if (index != null) {\n          arc = index.getFirstArc(arcs[0]);\n          // Empty string prefix must have an output in the index!\n          assert arc.isFinal();\n        } else {\n          arc = null;\n        }\n        currentFrame = staticFrame;\n        //currentFrame = pushFrame(arc, rootCode, 0);\n        //currentFrame.loadBlock();\n        validIndexPrefix = 0;\n        // if (DEBUG) {\n        //   System.out.println(\"init frame state \" + currentFrame.ord);\n        //   printSeekState();\n        // }\n\n        //System.out.println();\n        // computeBlockStats().print(System.out);\n      }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":5,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/BlockTreeTermsReader.FieldReader.SegmentTermsEnum#SegmentTermsEnum().mjava","pathOld":"lucene/src/java/org/apache/lucene/codecs/BlockTreeTermsReader.FieldReader.SegmentTermsEnum#SegmentTermsEnum().mjava","sourceNew":"      public SegmentTermsEnum() throws IOException {\n        //if (DEBUG) System.out.println(\"BTTR.init seg=\" + segment);\n        stack = new Frame[0];\n        \n        // Used to hold seek by TermState, or cached seek\n        staticFrame = new Frame(-1);\n\n        if (index == null) {\n          fstReader = null;\n        } else {\n          fstReader = index.getBytesReader(0);\n        }\n\n        // Init w/ root block; don't use index since it may\n        // not (and need not) have been loaded\n        for(int arcIdx=0;arcIdx<arcs.length;arcIdx++) {\n          arcs[arcIdx] = new FST.Arc<BytesRef>();\n        }\n\n        currentFrame = staticFrame;\n        final FST.Arc<BytesRef> arc;\n        if (index != null) {\n          arc = index.getFirstArc(arcs[0]);\n          // Empty string prefix must have an output in the index!\n          assert arc.isFinal();\n        } else {\n          arc = null;\n        }\n        currentFrame = staticFrame;\n        //currentFrame = pushFrame(arc, rootCode, 0);\n        //currentFrame.loadBlock();\n        validIndexPrefix = 0;\n        // if (DEBUG) {\n        //   System.out.println(\"init frame state \" + currentFrame.ord);\n        //   printSeekState();\n        // }\n\n        //System.out.println();\n        // computeBlockStats().print(System.out);\n      }\n\n","sourceOld":"      public SegmentTermsEnum() throws IOException {\n        //if (DEBUG) System.out.println(\"BTTR.init seg=\" + segment);\n        stack = new Frame[0];\n        \n        // Used to hold seek by TermState, or cached seek\n        staticFrame = new Frame(-1);\n\n        if (index == null) {\n          fstReader = null;\n        } else {\n          fstReader = index.getBytesReader(0);\n        }\n\n        // Init w/ root block; don't use index since it may\n        // not (and need not) have been loaded\n        for(int arcIdx=0;arcIdx<arcs.length;arcIdx++) {\n          arcs[arcIdx] = new FST.Arc<BytesRef>();\n        }\n\n        currentFrame = staticFrame;\n        final FST.Arc<BytesRef> arc;\n        if (index != null) {\n          arc = index.getFirstArc(arcs[0]);\n          // Empty string prefix must have an output in the index!\n          assert arc.isFinal();\n        } else {\n          arc = null;\n        }\n        currentFrame = staticFrame;\n        //currentFrame = pushFrame(arc, rootCode, 0);\n        //currentFrame.loadBlock();\n        validIndexPrefix = 0;\n        // if (DEBUG) {\n        //   System.out.println(\"init frame state \" + currentFrame.ord);\n        //   printSeekState();\n        // }\n\n        //System.out.println();\n        // computeBlockStats().print(System.out);\n      }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b3be20ca1091c0b7cdb2308b9023606a5e451cec":["a0ae5e3ed1232483b7b8a014f175a5fe43595982"],"817882884229bace7dc5d1b75f6b0e4aa1e47122":["a0ae5e3ed1232483b7b8a014f175a5fe43595982","b3be20ca1091c0b7cdb2308b9023606a5e451cec"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["b3be20ca1091c0b7cdb2308b9023606a5e451cec"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"5b6fdfce35d0adb18836cf8711abe487a934df33":["a0ae5e3ed1232483b7b8a014f175a5fe43595982","b3be20ca1091c0b7cdb2308b9023606a5e451cec"],"a0ae5e3ed1232483b7b8a014f175a5fe43595982":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"]},"commit2Childs":{"b3be20ca1091c0b7cdb2308b9023606a5e451cec":["817882884229bace7dc5d1b75f6b0e4aa1e47122","3a119bbc8703c10faa329ec201c654b3a35a1e3e","5b6fdfce35d0adb18836cf8711abe487a934df33"],"817882884229bace7dc5d1b75f6b0e4aa1e47122":[],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["a0ae5e3ed1232483b7b8a014f175a5fe43595982"],"5b6fdfce35d0adb18836cf8711abe487a934df33":[],"a0ae5e3ed1232483b7b8a014f175a5fe43595982":["b3be20ca1091c0b7cdb2308b9023606a5e451cec","817882884229bace7dc5d1b75f6b0e4aa1e47122","5b6fdfce35d0adb18836cf8711abe487a934df33"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["817882884229bace7dc5d1b75f6b0e4aa1e47122","5b6fdfce35d0adb18836cf8711abe487a934df33","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}