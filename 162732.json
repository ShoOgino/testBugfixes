{"path":"solr/solrj/src/java/org/apache/solr/common/util/JavaBinCodec#readVInt(DataInputInputStream).mjava","commits":[{"id":"2fcfd8b392582391d5804daa94c05f917c7fbdc7","date":1370873427,"type":1,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/common/util/JavaBinCodec#readVInt(DataInputInputStream).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/common/util/JavaBinCodec#readVInt(FastInputStream).mjava","sourceNew":"  /**\n   * The counterpart for {@link #writeVInt(int, FastOutputStream)}\n   *\n   * @throws IOException If there is a low-level I/O error.\n   */\n  public static int readVInt(DataInputInputStream in) throws IOException {\n    byte b = in.readByte();\n    int i = b & 0x7F;\n    for (int shift = 7; (b & 0x80) != 0; shift += 7) {\n      b = in.readByte();\n      i |= (b & 0x7F) << shift;\n    }\n    return i;\n  }\n\n","sourceOld":"  /**\n   * The counterpart for {@link #writeVInt(int, FastOutputStream)}\n   *\n   * @throws IOException If there is a low-level I/O error.\n   */\n  public static int readVInt(FastInputStream in) throws IOException {\n    byte b = in.readByte();\n    int i = b & 0x7F;\n    for (int shift = 7; (b & 0x80) != 0; shift += 7) {\n      b = in.readByte();\n      i |= (b & 0x7F) << shift;\n    }\n    return i;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"19275ba31e621f6da1b83bf13af75233876fd3d4","date":1374846698,"type":3,"author":"Han Jiang","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/common/util/JavaBinCodec#readVInt(DataInputInputStream).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/common/util/JavaBinCodec#readVInt(DataInputInputStream).mjava","sourceNew":"  /**\n   * The counterpart for {@link #writeVInt(int, FastOutputStream)}\n   *\n   * @throws IOException If there is a low-level I/O error.\n   */\n  public static int readVInt(DataInputInputStream in) throws IOException {\n    byte b = in.readByte();\n    int i = b & 0x7F;\n    for (int shift = 7; (b & 0x80) != 0; shift += 7) {\n      b = in.readByte();\n      i |= (b & 0x7F) << shift;\n    }\n    return i;\n  }\n\n","sourceOld":"  /**\n   * The counterpart for {@link #writeVInt(int, FastOutputStream)}\n   *\n   * @throws IOException If there is a low-level I/O error.\n   */\n  public static int readVInt(DataInputInputStream in) throws IOException {\n    byte b = in.readByte();\n    int i = b & 0x7F;\n    for (int shift = 7; (b & 0x80) != 0; shift += 7) {\n      b = in.readByte();\n      i |= (b & 0x7F) << shift;\n    }\n    return i;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"716d18f3a9b0993bc679d7fa7abdc9bfb03411ec","date":1376375609,"type":3,"author":"Han Jiang","isMerge":true,"pathNew":"solr/solrj/src/java/org/apache/solr/common/util/JavaBinCodec#readVInt(DataInputInputStream).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/common/util/JavaBinCodec#readVInt(DataInputInputStream).mjava","sourceNew":"  /**\n   * The counterpart for {@link #writeVInt(int, FastOutputStream)}\n   *\n   * @throws IOException If there is a low-level I/O error.\n   */\n  public static int readVInt(DataInputInputStream in) throws IOException {\n    byte b = in.readByte();\n    int i = b & 0x7F;\n    for (int shift = 7; (b & 0x80) != 0; shift += 7) {\n      b = in.readByte();\n      i |= (b & 0x7F) << shift;\n    }\n    return i;\n  }\n\n","sourceOld":"  /**\n   * The counterpart for {@link #writeVInt(int, FastOutputStream)}\n   *\n   * @throws IOException If there is a low-level I/O error.\n   */\n  public static int readVInt(DataInputInputStream in) throws IOException {\n    byte b = in.readByte();\n    int i = b & 0x7F;\n    for (int shift = 7; (b & 0x80) != 0; shift += 7) {\n      b = in.readByte();\n      i |= (b & 0x7F) << shift;\n    }\n    return i;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"716d18f3a9b0993bc679d7fa7abdc9bfb03411ec":["2fcfd8b392582391d5804daa94c05f917c7fbdc7","19275ba31e621f6da1b83bf13af75233876fd3d4"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"19275ba31e621f6da1b83bf13af75233876fd3d4":["2fcfd8b392582391d5804daa94c05f917c7fbdc7"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["19275ba31e621f6da1b83bf13af75233876fd3d4"],"2fcfd8b392582391d5804daa94c05f917c7fbdc7":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"716d18f3a9b0993bc679d7fa7abdc9bfb03411ec":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["2fcfd8b392582391d5804daa94c05f917c7fbdc7"],"19275ba31e621f6da1b83bf13af75233876fd3d4":["716d18f3a9b0993bc679d7fa7abdc9bfb03411ec","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"2fcfd8b392582391d5804daa94c05f917c7fbdc7":["716d18f3a9b0993bc679d7fa7abdc9bfb03411ec","19275ba31e621f6da1b83bf13af75233876fd3d4"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["716d18f3a9b0993bc679d7fa7abdc9bfb03411ec","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}