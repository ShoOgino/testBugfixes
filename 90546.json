{"path":"lucene/join/src/java/org/apache/lucene/search/join/ToParentBlockJoinFieldComparator.Lowest#Lowest(FieldComparator[Object],Filter,Filter,int).mjava","commits":[{"id":"e27b99259bc542853bfc42f809014f56aad988fb","date":1366018447,"type":0,"author":"Martijn van Groningen","isMerge":false,"pathNew":"lucene/join/src/java/org/apache/lucene/search/join/ToParentBlockJoinFieldComparator.Lowest#Lowest(FieldComparator[Object],Filter,Filter,int).mjava","pathOld":"/dev/null","sourceNew":"    /**\n     * Create ToParentBlockJoinFieldComparator.Lowest\n     *\n     * @param wrappedComparator The {@link FieldComparator} on the child / nested level.\n     * @param parentFilter Filter (must produce FixedBitSet per-segment) that identifies the parent documents.\n     * @param childFilter Filter that defines which child / nested documents participates in sorting.\n     * @param spareSlot The extra slot inside the wrapped comparator that is used to compare which nested document\n     *                  inside the parent document scope is most competitive.\n     */\n    public Lowest(FieldComparator<Object> wrappedComparator, Filter parentFilter, Filter childFilter, int spareSlot) {\n      super(wrappedComparator, parentFilter, childFilter, spareSlot);\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b012914a8110b2ff1d075ed1ef72aa57084d4897","date":1414685177,"type":5,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/join/src/java/org/apache/lucene/search/join/ToParentBlockJoinFieldComparator.Lowest#Lowest(FieldComparator[Object],BitDocIdSetFilter,BitDocIdSetFilter,int).mjava","pathOld":"lucene/join/src/java/org/apache/lucene/search/join/ToParentBlockJoinFieldComparator.Lowest#Lowest(FieldComparator[Object],Filter,Filter,int).mjava","sourceNew":"    /**\n     * Create ToParentBlockJoinFieldComparator.Lowest\n     *\n     * @param wrappedComparator The {@link FieldComparator} on the child / nested level.\n     * @param parentFilter Filter that identifies the parent documents.\n     * @param childFilter Filter that defines which child / nested documents participates in sorting.\n     * @param spareSlot The extra slot inside the wrapped comparator that is used to compare which nested document\n     *                  inside the parent document scope is most competitive.\n     */\n    public Lowest(FieldComparator<Object> wrappedComparator, BitDocIdSetFilter parentFilter, BitDocIdSetFilter childFilter, int spareSlot) {\n      super(wrappedComparator, parentFilter, childFilter, spareSlot);\n    }\n\n","sourceOld":"    /**\n     * Create ToParentBlockJoinFieldComparator.Lowest\n     *\n     * @param wrappedComparator The {@link FieldComparator} on the child / nested level.\n     * @param parentFilter Filter (must produce FixedBitSet per-segment) that identifies the parent documents.\n     * @param childFilter Filter that defines which child / nested documents participates in sorting.\n     * @param spareSlot The extra slot inside the wrapped comparator that is used to compare which nested document\n     *                  inside the parent document scope is most competitive.\n     */\n    public Lowest(FieldComparator<Object> wrappedComparator, Filter parentFilter, Filter childFilter, int spareSlot) {\n      super(wrappedComparator, parentFilter, childFilter, spareSlot);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b012914a8110b2ff1d075ed1ef72aa57084d4897":["e27b99259bc542853bfc42f809014f56aad988fb"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"e27b99259bc542853bfc42f809014f56aad988fb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b012914a8110b2ff1d075ed1ef72aa57084d4897"]},"commit2Childs":{"b012914a8110b2ff1d075ed1ef72aa57084d4897":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["e27b99259bc542853bfc42f809014f56aad988fb"],"e27b99259bc542853bfc42f809014f56aad988fb":["b012914a8110b2ff1d075ed1ef72aa57084d4897"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}