{"path":"lucene/grouping/src/test/org/apache/lucene/search/grouping/BaseGroupSelectorTestCase#testSortByRelevance().mjava","commits":[{"id":"fdedc06ffe6518d5666d12901a738624563d147d","date":1588593300,"type":0,"author":"Alan Woodward","isMerge":false,"pathNew":"lucene/grouping/src/test/org/apache/lucene/search/grouping/BaseGroupSelectorTestCase#testSortByRelevance().mjava","pathOld":"/dev/null","sourceNew":"  public void testSortByRelevance() throws IOException {\n\n    Shard shard = new Shard();\n    indexRandomDocs(shard.writer);\n\n    String[] query = new String[]{ \"foo\", \"bar\", \"baz\" };\n    Query topLevel = new TermQuery(new Term(\"text\", query[random().nextInt(query.length)]));\n\n    IndexSearcher searcher = shard.getIndexSearcher();\n    GroupingSearch grouper = new GroupingSearch(getGroupSelector());\n    grouper.setGroupDocsLimit(10);\n    TopGroups<T> topGroups = grouper.search(searcher, topLevel, 0, 5);\n    TopDocs topDoc = searcher.search(topLevel, 1);\n    for (int i = 0; i < topGroups.groups.length; i++) {\n      // Each group should have a result set equal to that returned by the top-level query,\n      // filtered by the group value.\n      Query filtered = new BooleanQuery.Builder()\n          .add(topLevel, BooleanClause.Occur.MUST)\n          .add(filterQuery(topGroups.groups[i].groupValue), BooleanClause.Occur.FILTER)\n          .build();\n      TopDocs td = searcher.search(filtered, 10);\n      assertScoreDocsEquals(topGroups.groups[i].scoreDocs, td.scoreDocs);\n      if (i == 0) {\n        assertEquals(td.scoreDocs[0].doc, topDoc.scoreDocs[0].doc);\n        assertEquals(td.scoreDocs[0].score, topDoc.scoreDocs[0].score, 0);\n      }\n    }\n\n    shard.close();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"fdedc06ffe6518d5666d12901a738624563d147d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["fdedc06ffe6518d5666d12901a738624563d147d"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["fdedc06ffe6518d5666d12901a738624563d147d"],"fdedc06ffe6518d5666d12901a738624563d147d":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}