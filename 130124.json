{"path":"src/java/org/apache/lucene/index/TermInfosReader#get(int).mjava","commits":[{"id":"e0b950aef8cdf4606d480e28ea17bd870b93c81e","date":1060680143,"type":0,"author":"Erik Hatcher","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/TermInfosReader#get(int).mjava","pathOld":"/dev/null","sourceNew":"  /** Returns the nth term in the set. */\n  final synchronized Term get(int position) throws IOException {\n    if (size == 0) return null;\n\n    if (enumerator != null && enumerator.term() != null && position >= enumerator.position &&\n\tposition < (enumerator.position + TermInfosWriter.INDEX_INTERVAL))\n      return scanEnum(position);\t\t  // can avoid seek\n\n    seekEnum(position / TermInfosWriter.INDEX_INTERVAL); // must seek\n    return scanEnum(position);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"15c469602973ef1a33c9a07367a380d278ffab20","date":1074206555,"type":3,"author":"Doug Cutting","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/TermInfosReader#get(int).mjava","pathOld":"src/java/org/apache/lucene/index/TermInfosReader#get(int).mjava","sourceNew":"  /** Returns the nth term in the set. */\n  final synchronized Term get(int position) throws IOException {\n    if (size == 0) return null;\n\n    if (enumerator != null && enumerator.term() != null && position >= enumerator.position &&\n\tposition < (enumerator.position + enumerator.indexInterval))\n      return scanEnum(position);\t\t  // can avoid seek\n\n    seekEnum(position / enumerator.indexInterval); // must seek\n    return scanEnum(position);\n  }\n\n","sourceOld":"  /** Returns the nth term in the set. */\n  final synchronized Term get(int position) throws IOException {\n    if (size == 0) return null;\n\n    if (enumerator != null && enumerator.term() != null && position >= enumerator.position &&\n\tposition < (enumerator.position + TermInfosWriter.INDEX_INTERVAL))\n      return scanEnum(position);\t\t  // can avoid seek\n\n    seekEnum(position / TermInfosWriter.INDEX_INTERVAL); // must seek\n    return scanEnum(position);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e03e3f081e8581c90e28db2f37ab70239194e12b","date":1086627352,"type":4,"author":"Doug Cutting","isMerge":false,"pathNew":"/dev/null","pathOld":"src/java/org/apache/lucene/index/TermInfosReader#get(int).mjava","sourceNew":null,"sourceOld":"  /** Returns the nth term in the set. */\n  final synchronized Term get(int position) throws IOException {\n    if (size == 0) return null;\n\n    if (enumerator != null && enumerator.term() != null && position >= enumerator.position &&\n\tposition < (enumerator.position + enumerator.indexInterval))\n      return scanEnum(position);\t\t  // can avoid seek\n\n    seekEnum(position / enumerator.indexInterval); // must seek\n    return scanEnum(position);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"eafd816608011f66422f3052c37962973582d12a","date":1087172166,"type":0,"author":"Erik Hatcher","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/TermInfosReader#get(int).mjava","pathOld":"/dev/null","sourceNew":"  /** Returns the nth term in the set. */\n  final Term get(int position) throws IOException {\n    if (size == 0) return null;\n\n    SegmentTermEnum enumerator = getEnum();\n    if (enumerator != null && enumerator.term() != null &&\n        position >= enumerator.position &&\n\tposition < (enumerator.position + enumerator.indexInterval))\n      return scanEnum(position);\t\t  // can avoid seek\n\n    seekEnum(position / enumerator.indexInterval); // must seek\n    return scanEnum(position);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["67eae0792656c9170bed86f0b0786bc305aa4e8f"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"cf2ab57cc5ab974400f01fd95f84903ac6d4abfa","date":1195161267,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/TermInfosReader#get(int).mjava","pathOld":"src/java/org/apache/lucene/index/TermInfosReader#get(int).mjava","sourceNew":"  /** Returns the nth term in the set. */\n  final Term get(int position) throws IOException {\n    if (size == 0) return null;\n\n    SegmentTermEnum enumerator = getEnum();\n    if (enumerator != null && enumerator.term() != null &&\n        position >= enumerator.position &&\n\tposition < (enumerator.position + totalIndexInterval))\n      return scanEnum(position);\t\t  // can avoid seek\n\n    seekEnum(position/totalIndexInterval); // must seek\n    return scanEnum(position);\n  }\n\n","sourceOld":"  /** Returns the nth term in the set. */\n  final Term get(int position) throws IOException {\n    if (size == 0) return null;\n\n    SegmentTermEnum enumerator = getEnum();\n    if (enumerator != null && enumerator.term() != null &&\n        position >= enumerator.position &&\n\tposition < (enumerator.position + enumerator.indexInterval))\n      return scanEnum(position);\t\t  // can avoid seek\n\n    seekEnum(position / enumerator.indexInterval); // must seek\n    return scanEnum(position);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"1b30678d88259b68d3d1e3faba3ea3bccdf0c751","date":1211563231,"type":3,"author":"Michael Busch","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/TermInfosReader#get(int).mjava","pathOld":"src/java/org/apache/lucene/index/TermInfosReader#get(int).mjava","sourceNew":"  /** Returns the nth term in the set. */\n  final Term get(int position) throws IOException {\n    if (size == 0) return null;\n\n    SegmentTermEnum enumerator = getThreadResources().termEnum;\n    if (enumerator != null && enumerator.term() != null &&\n        position >= enumerator.position &&\n\tposition < (enumerator.position + totalIndexInterval))\n      return scanEnum(enumerator, position);      // can avoid seek\n\n    seekEnum(enumerator, position/totalIndexInterval); // must seek\n    return scanEnum(enumerator, position);\n  }\n\n","sourceOld":"  /** Returns the nth term in the set. */\n  final Term get(int position) throws IOException {\n    if (size == 0) return null;\n\n    SegmentTermEnum enumerator = getEnum();\n    if (enumerator != null && enumerator.term() != null &&\n        position >= enumerator.position &&\n\tposition < (enumerator.position + totalIndexInterval))\n      return scanEnum(position);\t\t  // can avoid seek\n\n    seekEnum(position/totalIndexInterval); // must seek\n    return scanEnum(position);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"67eae0792656c9170bed86f0b0786bc305aa4e8f","date":1250873268,"type":3,"author":"Michael Busch","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/TermInfosReader#get(int).mjava","pathOld":"src/java/org/apache/lucene/index/TermInfosReader#get(int).mjava","sourceNew":"  /** Returns the nth term in the set. */\n  final Term get(int position) throws IOException {\n    if (size == 0) return null;\n\n    SegmentTermEnum enumerator = getThreadResources().termEnum;\n    if (enumerator.term() != null &&\n        position >= enumerator.position &&\n\tposition < (enumerator.position + totalIndexInterval))\n      return scanEnum(enumerator, position);      // can avoid seek\n\n    seekEnum(enumerator, position/totalIndexInterval); // must seek\n    return scanEnum(enumerator, position);\n  }\n\n","sourceOld":"  /** Returns the nth term in the set. */\n  final Term get(int position) throws IOException {\n    if (size == 0) return null;\n\n    SegmentTermEnum enumerator = getThreadResources().termEnum;\n    if (enumerator != null && enumerator.term() != null &&\n        position >= enumerator.position &&\n\tposition < (enumerator.position + totalIndexInterval))\n      return scanEnum(enumerator, position);      // can avoid seek\n\n    seekEnum(enumerator, position/totalIndexInterval); // must seek\n    return scanEnum(enumerator, position);\n  }\n\n","bugFix":["eafd816608011f66422f3052c37962973582d12a"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1cfe41348f2013aacd533b8f3529449d636aaaeb","date":1265972181,"type":4,"author":"Michael McCandless","isMerge":false,"pathNew":"/dev/null","pathOld":"src/java/org/apache/lucene/index/TermInfosReader#get(int).mjava","sourceNew":null,"sourceOld":"  /** Returns the nth term in the set. */\n  final Term get(int position) throws IOException {\n    if (size == 0) return null;\n\n    SegmentTermEnum enumerator = getThreadResources().termEnum;\n    if (enumerator.term() != null &&\n        position >= enumerator.position &&\n\tposition < (enumerator.position + totalIndexInterval))\n      return scanEnum(enumerator, position);      // can avoid seek\n\n    seekEnum(enumerator, position/totalIndexInterval); // must seek\n    return scanEnum(enumerator, position);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"e0b950aef8cdf4606d480e28ea17bd870b93c81e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"eafd816608011f66422f3052c37962973582d12a":["e03e3f081e8581c90e28db2f37ab70239194e12b"],"1b30678d88259b68d3d1e3faba3ea3bccdf0c751":["cf2ab57cc5ab974400f01fd95f84903ac6d4abfa"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"1cfe41348f2013aacd533b8f3529449d636aaaeb":["67eae0792656c9170bed86f0b0786bc305aa4e8f"],"67eae0792656c9170bed86f0b0786bc305aa4e8f":["1b30678d88259b68d3d1e3faba3ea3bccdf0c751"],"e03e3f081e8581c90e28db2f37ab70239194e12b":["15c469602973ef1a33c9a07367a380d278ffab20"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["1cfe41348f2013aacd533b8f3529449d636aaaeb"],"cf2ab57cc5ab974400f01fd95f84903ac6d4abfa":["eafd816608011f66422f3052c37962973582d12a"],"15c469602973ef1a33c9a07367a380d278ffab20":["e0b950aef8cdf4606d480e28ea17bd870b93c81e"]},"commit2Childs":{"e0b950aef8cdf4606d480e28ea17bd870b93c81e":["15c469602973ef1a33c9a07367a380d278ffab20"],"eafd816608011f66422f3052c37962973582d12a":["cf2ab57cc5ab974400f01fd95f84903ac6d4abfa"],"1b30678d88259b68d3d1e3faba3ea3bccdf0c751":["67eae0792656c9170bed86f0b0786bc305aa4e8f"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["e0b950aef8cdf4606d480e28ea17bd870b93c81e"],"1cfe41348f2013aacd533b8f3529449d636aaaeb":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"e03e3f081e8581c90e28db2f37ab70239194e12b":["eafd816608011f66422f3052c37962973582d12a"],"67eae0792656c9170bed86f0b0786bc305aa4e8f":["1cfe41348f2013aacd533b8f3529449d636aaaeb"],"cf2ab57cc5ab974400f01fd95f84903ac6d4abfa":["1b30678d88259b68d3d1e3faba3ea3bccdf0c751"],"15c469602973ef1a33c9a07367a380d278ffab20":["e03e3f081e8581c90e28db2f37ab70239194e12b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}