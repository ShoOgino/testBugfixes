{"path":"lucene/analysis/common/src/test/org/apache/lucene/analysis/core/TestRandomChains#initBrokenConstructors().mjava","commits":[{"id":"f95c0e33e58652b2a4d8560c8297dbe86ff5b1f2","date":1591961131,"type":0,"author":"Michael Sokolov","isMerge":false,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/core/TestRandomChains#initBrokenConstructors().mjava","pathOld":"/dev/null","sourceNew":"  @SuppressWarnings(\"deprecation\")\n  private static void initBrokenConstructors() {\n    try {\n      brokenConstructors.put(\n          LimitTokenCountFilter.class.getConstructor(TokenStream.class, int.class),\n          ALWAYS);\n      brokenConstructors.put(\n          LimitTokenCountFilter.class.getConstructor(TokenStream.class, int.class, boolean.class),\n          args -> {\n              assert args.length == 3;\n              return !((Boolean) args[2]); // args are broken if consumeAllTokens is false\n          });\n      brokenConstructors.put(\n          LimitTokenOffsetFilter.class.getConstructor(TokenStream.class, int.class),\n          ALWAYS);\n      brokenConstructors.put(\n          LimitTokenOffsetFilter.class.getConstructor(TokenStream.class, int.class, boolean.class),\n          args -> {\n              assert args.length == 3;\n              return !((Boolean) args[2]); // args are broken if consumeAllTokens is false\n          });\n      brokenConstructors.put(\n          LimitTokenPositionFilter.class.getConstructor(TokenStream.class, int.class),\n          ALWAYS);\n      brokenConstructors.put(\n          LimitTokenPositionFilter.class.getConstructor(TokenStream.class, int.class, boolean.class),\n          args -> {\n              assert args.length == 3;\n              return !((Boolean) args[2]); // args are broken if consumeAllTokens is false\n          });\n      for (Class<?> c : Arrays.<Class<?>>asList(\n          // doesn't actual reset itself!  TODO this statement is probably obsolete as of LUCENE-6121 ?\n          CachingTokenFilter.class,\n          // LUCENE-8092: doesn't handle graph inputs\n          CJKBigramFilter.class,\n          // TODO: LUCENE-4983\n          CommonGramsFilter.class,\n          // TODO: doesn't handle graph inputs\n          CommonGramsQueryFilter.class,\n          // Not broken, simulates brokenness:\n          CrankyTokenFilter.class,\n          // TODO: doesn't handle graph inputs (or even look at positionIncrement)\n          HyphenatedWordsFilter.class,\n          // broken offsets\n          PathHierarchyTokenizer.class,\n          // broken offsets\n          ReversePathHierarchyTokenizer.class,\n          // Not broken: we forcefully add this, so we shouldn't\n          // also randomly pick it:\n          ValidatingTokenFilter.class, \n          // TODO: it seems to mess up offsets!?\n          WikipediaTokenizer.class,\n          // TODO: needs to be a tokenizer, doesnt handle graph inputs properly (a shingle or similar following will then cause pain)\n          WordDelimiterFilter.class,\n          // Cannot correct offsets when a char filter had changed them:\n          WordDelimiterGraphFilter.class,\n          // requires a special encoded token value, so it may fail with random data:\n          DelimitedTermFrequencyTokenFilter.class,\n          // requires a special encoded token value, so it may fail with random data:\n          DelimitedBoostTokenFilter.class,\n          // clones of core's filters:\n          org.apache.lucene.analysis.core.StopFilter.class,\n          org.apache.lucene.analysis.core.LowerCaseFilter.class)) {\n        for (Constructor<?> ctor : c.getConstructors()) {\n          brokenConstructors.put(ctor, ALWAYS);\n        }\n      }  \n    } catch (Exception e) {\n      throw new Error(e);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"f95c0e33e58652b2a4d8560c8297dbe86ff5b1f2":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["f95c0e33e58652b2a4d8560c8297dbe86ff5b1f2"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["f95c0e33e58652b2a4d8560c8297dbe86ff5b1f2"],"f95c0e33e58652b2a4d8560c8297dbe86ff5b1f2":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}