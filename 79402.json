{"path":"solr/core/src/java/org/apache/solr/pkg/PackagePluginHolder#reload(PackageLoader.Package,SolrCore).mjava","commits":[{"id":"403c3219db9547cd15baeb98f0804fbb65f36c0f","date":1600394849,"type":1,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/pkg/PackagePluginHolder#reload(PackageLoader.Package,SolrCore).mjava","pathOld":"solr/core/src/java/org/apache/solr/pkg/PackagePluginHolder#reload(PackageLoader.Package).mjava","sourceNew":"  private synchronized void reload(PackageLoader.Package pkg, SolrCore core) {\n    String lessThan = core.getSolrConfig().maxPackageVersion(info.pkgName);\n    PackageLoader.Package.Version newest = pkg.getLatest(lessThan);\n    if (newest == null) {\n      log.error(\"No latest version available for package : {}\", pkg.name());\n      return;\n    }\n    if (lessThan != null) {\n      PackageLoader.Package.Version pkgLatest = pkg.getLatest();\n      if (pkgLatest != newest) {\n        if (log.isInfoEnabled()) {\n          log.info(\"Using version :{}. latest is {},  params.json has config {} : {}\", newest.getVersion(), pkgLatest.getVersion(), pkg.name(), lessThan);\n        }\n      }\n    }\n\n    if (pkgVersion != null) {\n      if (newest == pkgVersion) {\n        //I'm already using the latest classloader in the package. nothing to do\n        return;\n      }\n    }\n\n    if (log.isInfoEnabled()) {\n      log.info(\"loading plugin: {} -> {} using  package {}:{}\",\n          pluginInfo.type, pluginInfo.name, pkg.name(), newest.getVersion());\n    }\n\n    initNewInstance(newest, core);\n    pkgVersion = newest;\n\n  }\n\n","sourceOld":"  private synchronized void reload(PackageLoader.Package pkg) {\n    String lessThan = core.getSolrConfig().maxPackageVersion(info.pkgName);\n    PackageLoader.Package.Version newest = pkg.getLatest(lessThan);\n    if (newest == null) {\n      log.error(\"No latest version available for package : {}\", pkg.name());\n      return;\n    }\n    if (lessThan != null) {\n      PackageLoader.Package.Version pkgLatest = pkg.getLatest();\n      if (pkgLatest != newest) {\n        if (log.isInfoEnabled()) {\n          log.info(\"Using version :{}. latest is {},  params.json has config {} : {}\", newest.getVersion(), pkgLatest.getVersion(), pkg.name(), lessThan);\n        }\n      }\n    }\n\n    if (pkgVersion != null) {\n      if (newest == pkgVersion) {\n        //I'm already using the latest classloader in the package. nothing to do\n        return;\n      }\n    }\n\n    if (log.isInfoEnabled()) {\n      log.info(\"loading plugin: {} -> {} using  package {}:{}\",\n          pluginInfo.type, pluginInfo.name, pkg.name(), newest.getVersion());\n    }\n\n    initNewInstance(newest);\n    pkgVersion = newest;\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"403c3219db9547cd15baeb98f0804fbb65f36c0f":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["403c3219db9547cd15baeb98f0804fbb65f36c0f"]},"commit2Childs":{"403c3219db9547cd15baeb98f0804fbb65f36c0f":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["403c3219db9547cd15baeb98f0804fbb65f36c0f"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}