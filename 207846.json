{"path":"solr/src/java/org/apache/solr/update/processor/SignatureUpdateProcessorFactory#inform(SolrCore).mjava","commits":[{"id":"80caeb078026be414380723b9c6baed49c20b354","date":1273870709,"type":0,"author":"Chris M. Hostetter","isMerge":false,"pathNew":"solr/src/java/org/apache/solr/update/processor/SignatureUpdateProcessorFactory#inform(SolrCore).mjava","pathOld":"/dev/null","sourceNew":"  public void inform(SolrCore core) {\n    final SchemaField field = core.getSchema().getFieldOrNull(getSignatureField());\n    if (null == field) {\n      throw new SolrException\n        (ErrorCode.SERVER_ERROR,\n         \"Can't use signatureField which does not exist in schema: \"\n         + getSignatureField());\n    }\n\n    if (getOverwriteDupes() && ( ! field.indexed() ) ) {\n      throw new SolrException\n        (ErrorCode.SERVER_ERROR,\n         \"Can't set overwriteDupes when signatureField is not indexed: \"\n         + getSignatureField());\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c903c3d15906a3da96b8c0c2fb704491005fdbdb","date":1453508227,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/update/processor/SignatureUpdateProcessorFactory#inform(SolrCore).mjava","pathOld":"solr/src/java/org/apache/solr/update/processor/SignatureUpdateProcessorFactory#inform(SolrCore).mjava","sourceNew":"  public void inform(SolrCore core) {\n    final SchemaField field = core.getSchema().getFieldOrNull(getSignatureField());\n    if (null == field) {\n      throw new SolrException\n        (ErrorCode.SERVER_ERROR,\n         \"Can't use signatureField which does not exist in schema: \"\n         + getSignatureField());\n    }\n\n    if (getOverwriteDupes() && ( ! field.indexed() ) ) {\n      throw new SolrException\n        (ErrorCode.SERVER_ERROR,\n         \"Can't set overwriteDupes when signatureField is not indexed: \"\n         + getSignatureField());\n    }\n  }\n\n","sourceOld":"  public void inform(SolrCore core) {\n    final SchemaField field = core.getSchema().getFieldOrNull(getSignatureField());\n    if (null == field) {\n      throw new SolrException\n        (ErrorCode.SERVER_ERROR,\n         \"Can't use signatureField which does not exist in schema: \"\n         + getSignatureField());\n    }\n\n    if (getOverwriteDupes() && ( ! field.indexed() ) ) {\n      throw new SolrException\n        (ErrorCode.SERVER_ERROR,\n         \"Can't set overwriteDupes when signatureField is not indexed: \"\n         + getSignatureField());\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a258fbb26824fd104ed795e5d9033d2d040049ee","date":1453508252,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/update/processor/SignatureUpdateProcessorFactory#inform(SolrCore).mjava","pathOld":"solr/src/java/org/apache/solr/update/processor/SignatureUpdateProcessorFactory#inform(SolrCore).mjava","sourceNew":"  public void inform(SolrCore core) {\n    final SchemaField field = core.getSchema().getFieldOrNull(getSignatureField());\n    if (null == field) {\n      throw new SolrException\n        (ErrorCode.SERVER_ERROR,\n         \"Can't use signatureField which does not exist in schema: \"\n         + getSignatureField());\n    }\n\n    if (getOverwriteDupes() && ( ! field.indexed() ) ) {\n      throw new SolrException\n        (ErrorCode.SERVER_ERROR,\n         \"Can't set overwriteDupes when signatureField is not indexed: \"\n         + getSignatureField());\n    }\n  }\n\n","sourceOld":"  public void inform(SolrCore core) {\n    final SchemaField field = core.getSchema().getFieldOrNull(getSignatureField());\n    if (null == field) {\n      throw new SolrException\n        (ErrorCode.SERVER_ERROR,\n         \"Can't use signatureField which does not exist in schema: \"\n         + getSignatureField());\n    }\n\n    if (getOverwriteDupes() && ( ! field.indexed() ) ) {\n      throw new SolrException\n        (ErrorCode.SERVER_ERROR,\n         \"Can't set overwriteDupes when signatureField is not indexed: \"\n         + getSignatureField());\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":5,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/update/processor/SignatureUpdateProcessorFactory#inform(SolrCore).mjava","pathOld":"solr/src/java/org/apache/solr/update/processor/SignatureUpdateProcessorFactory#inform(SolrCore).mjava","sourceNew":"  public void inform(SolrCore core) {\n    final SchemaField field = core.getSchema().getFieldOrNull(getSignatureField());\n    if (null == field) {\n      throw new SolrException\n        (ErrorCode.SERVER_ERROR,\n         \"Can't use signatureField which does not exist in schema: \"\n         + getSignatureField());\n    }\n\n    if (getOverwriteDupes() && ( ! field.indexed() ) ) {\n      throw new SolrException\n        (ErrorCode.SERVER_ERROR,\n         \"Can't set overwriteDupes when signatureField is not indexed: \"\n         + getSignatureField());\n    }\n  }\n\n","sourceOld":"  public void inform(SolrCore core) {\n    final SchemaField field = core.getSchema().getFieldOrNull(getSignatureField());\n    if (null == field) {\n      throw new SolrException\n        (ErrorCode.SERVER_ERROR,\n         \"Can't use signatureField which does not exist in schema: \"\n         + getSignatureField());\n    }\n\n    if (getOverwriteDupes() && ( ! field.indexed() ) ) {\n      throw new SolrException\n        (ErrorCode.SERVER_ERROR,\n         \"Can't set overwriteDupes when signatureField is not indexed: \"\n         + getSignatureField());\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["80caeb078026be414380723b9c6baed49c20b354"],"c26f00b574427b55127e869b935845554afde1fa":["80caeb078026be414380723b9c6baed49c20b354","c903c3d15906a3da96b8c0c2fb704491005fdbdb"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"80caeb078026be414380723b9c6baed49c20b354":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a258fbb26824fd104ed795e5d9033d2d040049ee":["80caeb078026be414380723b9c6baed49c20b354"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["c26f00b574427b55127e869b935845554afde1fa"]},"commit2Childs":{"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["c26f00b574427b55127e869b935845554afde1fa"],"c26f00b574427b55127e869b935845554afde1fa":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["80caeb078026be414380723b9c6baed49c20b354"],"80caeb078026be414380723b9c6baed49c20b354":["c903c3d15906a3da96b8c0c2fb704491005fdbdb","c26f00b574427b55127e869b935845554afde1fa","a258fbb26824fd104ed795e5d9033d2d040049ee"],"a258fbb26824fd104ed795e5d9033d2d040049ee":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a258fbb26824fd104ed795e5d9033d2d040049ee","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}