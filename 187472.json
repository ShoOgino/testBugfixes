{"path":"lucene/src/java/org/apache/lucene/index/DocumentsWriter#initFlushState(boolean).mjava","commits":[{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/DocumentsWriter#initFlushState(boolean).mjava","pathOld":"src/java/org/apache/lucene/index/DocumentsWriter#initFlushState(boolean).mjava","sourceNew":"  synchronized private void initFlushState(boolean onlyDocStore) {\n    initSegmentName(onlyDocStore);\n    flushState = new SegmentWriteState(this, directory, segment, docStoreSegment, numDocsInRAM, numDocsInStore, writer.getConfig().getTermIndexInterval());\n  }\n\n","sourceOld":"  synchronized private void initFlushState(boolean onlyDocStore) {\n    initSegmentName(onlyDocStore);\n    flushState = new SegmentWriteState(this, directory, segment, docStoreSegment, numDocsInRAM, numDocsInStore, writer.getConfig().getTermIndexInterval());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"955c32f886db6f6356c9fcdea6b1f1cb4effda24","date":1270581567,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/DocumentsWriter#initFlushState(boolean).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/DocumentsWriter#initFlushState(boolean).mjava","sourceNew":"  synchronized private void initFlushState(boolean onlyDocStore) {\n    initSegmentName(onlyDocStore);\n    flushState = new SegmentWriteState(infoStream, directory, segment, docFieldProcessor.fieldInfos,\n                                       docStoreSegment, numDocsInRAM, numDocsInStore, writer.getConfig().getTermIndexInterval(),\n                                       writer.codecs);\n  }\n\n","sourceOld":"  synchronized private void initFlushState(boolean onlyDocStore) {\n    initSegmentName(onlyDocStore);\n    flushState = new SegmentWriteState(this, directory, segment, docStoreSegment, numDocsInRAM, numDocsInStore, writer.getConfig().getTermIndexInterval());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9b832cbed6eb3d54a8bb9339296bdda8eeb53014","date":1279708040,"type":4,"author":"Michael Busch","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/src/java/org/apache/lucene/index/DocumentsWriter#initFlushState(boolean).mjava","sourceNew":null,"sourceOld":"  synchronized private void initFlushState(boolean onlyDocStore) {\n    initSegmentName(onlyDocStore);\n    flushState = new SegmentWriteState(infoStream, directory, segment, docFieldProcessor.fieldInfos,\n                                       docStoreSegment, numDocsInRAM, numDocsInStore, writer.getConfig().getTermIndexInterval(),\n                                       writer.codecs);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"334c1175813aea771a71728cd2c4ee4754fd0603","date":1279710173,"type":0,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/DocumentsWriter#initFlushState(boolean).mjava","pathOld":"/dev/null","sourceNew":"  synchronized private void initFlushState(boolean onlyDocStore) {\n    initSegmentName(onlyDocStore);\n    flushState = new SegmentWriteState(infoStream, directory, segment, docFieldProcessor.fieldInfos,\n                                       docStoreSegment, numDocsInRAM, numDocsInStore, writer.getConfig().getTermIndexInterval(),\n                                       writer.codecs);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8fe956d65251358d755c56f14fe8380644790e47","date":1279711318,"type":4,"author":"Michael Busch","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/src/java/org/apache/lucene/index/DocumentsWriter#initFlushState(boolean).mjava","sourceNew":null,"sourceOld":"  synchronized private void initFlushState(boolean onlyDocStore) {\n    initSegmentName(onlyDocStore);\n    flushState = new SegmentWriteState(infoStream, directory, segment, docFieldProcessor.fieldInfos,\n                                       docStoreSegment, numDocsInRAM, numDocsInStore, writer.getConfig().getTermIndexInterval(),\n                                       writer.codecs);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0e28c49f1fb6215a550fdadcf3805aa629b63ec0","date":1288081775,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/DocumentsWriter#initFlushState(boolean).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/DocumentsWriter#initFlushState(boolean).mjava","sourceNew":"  synchronized private void initFlushState(boolean onlyDocStore) {\n    initSegmentName(onlyDocStore);\n    flushState = segWriteState();\n  }\n\n","sourceOld":"  synchronized private void initFlushState(boolean onlyDocStore) {\n    initSegmentName(onlyDocStore);\n    flushState = new SegmentWriteState(infoStream, directory, segment, docFieldProcessor.fieldInfos,\n                                       docStoreSegment, numDocsInRAM, numDocsInStore, writer.getConfig().getTermIndexInterval(),\n                                       writer.codecs);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a493e6d0c3ad86bd55c0a1360d110142e948f2bd","date":1289406991,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/DocumentsWriter#initFlushState(boolean).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/DocumentsWriter#initFlushState(boolean).mjava","sourceNew":"  synchronized private void initFlushState(boolean onlyDocStore) {\n    initSegmentName(onlyDocStore);\n    final SegmentCodecs info = SegmentCodecs.build(docFieldProcessor.fieldInfos, writer.codecs);\n    flushState = new SegmentWriteState(infoStream, directory, segment, docFieldProcessor.fieldInfos,\n                                       docStoreSegment, numDocsInRAM, numDocsInStore, writer.getConfig().getTermIndexInterval(), info);\n  }\n\n","sourceOld":"  synchronized private void initFlushState(boolean onlyDocStore) {\n    initSegmentName(onlyDocStore);\n    flushState = new SegmentWriteState(infoStream, directory, segment, docFieldProcessor.fieldInfos,\n                                       docStoreSegment, numDocsInRAM, numDocsInStore, writer.getConfig().getTermIndexInterval(),\n                                       writer.codecs);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"85a883878c0af761245ab048babc63d099f835f3","date":1289553330,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/DocumentsWriter#initFlushState(boolean).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/DocumentsWriter#initFlushState(boolean).mjava","sourceNew":"  synchronized private void initFlushState(boolean onlyDocStore) {\n    initSegmentName(onlyDocStore); // nocommit - this does not work for docValues\n    final SegmentCodecs info = SegmentCodecs.build(docFieldProcessor.fieldInfos, writer.codecs);\n    flushState = new SegmentWriteState(infoStream, directory, segment, docFieldProcessor.fieldInfos,\n                                       docStoreSegment, numDocsInRAM, numDocsInStore, writer.getConfig().getTermIndexInterval(), info);\n  }\n\n","sourceOld":"  synchronized private void initFlushState(boolean onlyDocStore) {\n    initSegmentName(onlyDocStore);\n    flushState = segWriteState();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3ae97ad22c2ae646bfc1c09cab424cb07f9474ca","date":1289932456,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/DocumentsWriter#initFlushState(boolean).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/DocumentsWriter#initFlushState(boolean).mjava","sourceNew":"  synchronized private void initFlushState(boolean onlyDocStore) {\n    initSegmentName(onlyDocStore);\n    final SegmentCodecs info = SegmentCodecs.build(docFieldProcessor.fieldInfos, writer.codecs);\n    flushState = new SegmentWriteState(infoStream, directory, segment, docFieldProcessor.fieldInfos,\n                                       docStoreSegment, numDocsInRAM, numDocsInStore, writer.getConfig().getTermIndexInterval(), info);\n  }\n\n","sourceOld":"  synchronized private void initFlushState(boolean onlyDocStore) {\n    initSegmentName(onlyDocStore); // nocommit - this does not work for docValues\n    final SegmentCodecs info = SegmentCodecs.build(docFieldProcessor.fieldInfos, writer.codecs);\n    flushState = new SegmentWriteState(infoStream, directory, segment, docFieldProcessor.fieldInfos,\n                                       docStoreSegment, numDocsInRAM, numDocsInStore, writer.getConfig().getTermIndexInterval(), info);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5a98a65bdb67cd0b27d18a5564d63bd3e944d3f4","date":1291128345,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/DocumentsWriter#initFlushState(boolean).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/DocumentsWriter#initFlushState(boolean).mjava","sourceNew":"  synchronized private void initFlushState(boolean onlyDocStore) {\n    initSegmentName(onlyDocStore);\n    final SegmentCodecs info = SegmentCodecs.build(docFieldProcessor.fieldInfos, writer.codecs);\n    flushState = new SegmentWriteState(infoStream, directory, segment, docFieldProcessor.fieldInfos,\n                                       docStoreSegment, numDocsInRAM, numDocsInStore, writer.getConfig().getTermIndexInterval(), info, bytesUsed);\n  }\n\n","sourceOld":"  synchronized private void initFlushState(boolean onlyDocStore) {\n    initSegmentName(onlyDocStore);\n    final SegmentCodecs info = SegmentCodecs.build(docFieldProcessor.fieldInfos, writer.codecs);\n    flushState = new SegmentWriteState(infoStream, directory, segment, docFieldProcessor.fieldInfos,\n                                       docStoreSegment, numDocsInRAM, numDocsInStore, writer.getConfig().getTermIndexInterval(), info);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"385cc8c7649bbc88df61ace8ef058a7b9376e95f","date":1291200406,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/DocumentsWriter#initFlushState(boolean).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/DocumentsWriter#initFlushState(boolean).mjava","sourceNew":"  synchronized private void initFlushState(boolean onlyDocStore) {\n    initSegmentName(onlyDocStore);\n    final SegmentCodecs info = SegmentCodecs.build(fieldInfos, writer.codecs);\n    flushState = new SegmentWriteState(infoStream, directory, segment, fieldInfos,\n                                       docStoreSegment, numDocsInRAM, numDocsInStore, writer.getConfig().getTermIndexInterval(), info);\n  }\n\n","sourceOld":"  synchronized private void initFlushState(boolean onlyDocStore) {\n    initSegmentName(onlyDocStore);\n    final SegmentCodecs info = SegmentCodecs.build(docFieldProcessor.fieldInfos, writer.codecs);\n    flushState = new SegmentWriteState(infoStream, directory, segment, docFieldProcessor.fieldInfos,\n                                       docStoreSegment, numDocsInRAM, numDocsInStore, writer.getConfig().getTermIndexInterval(), info);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3bb13258feba31ab676502787ab2e1779f129b7a","date":1291596436,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/DocumentsWriter#initFlushState(boolean).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/DocumentsWriter#initFlushState(boolean).mjava","sourceNew":"  synchronized private void initFlushState(boolean onlyDocStore) {\n    initSegmentName(onlyDocStore);\n    final SegmentCodecs info = SegmentCodecs.build(fieldInfos, writer.codecs);\n    flushState = new SegmentWriteState(infoStream, directory, segment, fieldInfos,\n                                       docStoreSegment, numDocsInRAM, numDocsInStore, writer.getConfig().getTermIndexInterval(), info, bytesUsed);\n  }\n\n","sourceOld":"  synchronized private void initFlushState(boolean onlyDocStore) {\n    initSegmentName(onlyDocStore);\n    final SegmentCodecs info = SegmentCodecs.build(docFieldProcessor.fieldInfos, writer.codecs);\n    flushState = new SegmentWriteState(infoStream, directory, segment, docFieldProcessor.fieldInfos,\n                                       docStoreSegment, numDocsInRAM, numDocsInStore, writer.getConfig().getTermIndexInterval(), info, bytesUsed);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"44fcbde6fb2ac44ee3b45e013e54a42911e689ff","date":1292065621,"type":4,"author":"Michael McCandless","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/src/java/org/apache/lucene/index/DocumentsWriter#initFlushState(boolean).mjava","sourceNew":null,"sourceOld":"  synchronized private void initFlushState(boolean onlyDocStore) {\n    initSegmentName(onlyDocStore);\n    final SegmentCodecs info = SegmentCodecs.build(fieldInfos, writer.codecs);\n    flushState = new SegmentWriteState(infoStream, directory, segment, fieldInfos,\n                                       docStoreSegment, numDocsInRAM, numDocsInStore, writer.getConfig().getTermIndexInterval(), info);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ab5cb6a74aefb78aa0569857970b9151dfe2e787","date":1292842407,"type":4,"author":"Simon Willnauer","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/src/java/org/apache/lucene/index/DocumentsWriter#initFlushState(boolean).mjava","sourceNew":null,"sourceOld":"  synchronized private void initFlushState(boolean onlyDocStore) {\n    initSegmentName(onlyDocStore);\n    final SegmentCodecs info = SegmentCodecs.build(fieldInfos, writer.codecs);\n    flushState = new SegmentWriteState(infoStream, directory, segment, fieldInfos,\n                                       docStoreSegment, numDocsInRAM, numDocsInStore, writer.getConfig().getTermIndexInterval(), info, bytesUsed);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"5a98a65bdb67cd0b27d18a5564d63bd3e944d3f4":["3ae97ad22c2ae646bfc1c09cab424cb07f9474ca"],"44fcbde6fb2ac44ee3b45e013e54a42911e689ff":["385cc8c7649bbc88df61ace8ef058a7b9376e95f"],"a493e6d0c3ad86bd55c0a1360d110142e948f2bd":["334c1175813aea771a71728cd2c4ee4754fd0603"],"85a883878c0af761245ab048babc63d099f835f3":["0e28c49f1fb6215a550fdadcf3805aa629b63ec0","a493e6d0c3ad86bd55c0a1360d110142e948f2bd"],"955c32f886db6f6356c9fcdea6b1f1cb4effda24":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"ab5cb6a74aefb78aa0569857970b9151dfe2e787":["3bb13258feba31ab676502787ab2e1779f129b7a","44fcbde6fb2ac44ee3b45e013e54a42911e689ff"],"334c1175813aea771a71728cd2c4ee4754fd0603":["9b832cbed6eb3d54a8bb9339296bdda8eeb53014"],"9b832cbed6eb3d54a8bb9339296bdda8eeb53014":["955c32f886db6f6356c9fcdea6b1f1cb4effda24"],"385cc8c7649bbc88df61ace8ef058a7b9376e95f":["a493e6d0c3ad86bd55c0a1360d110142e948f2bd"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"8fe956d65251358d755c56f14fe8380644790e47":["955c32f886db6f6356c9fcdea6b1f1cb4effda24"],"0e28c49f1fb6215a550fdadcf3805aa629b63ec0":["334c1175813aea771a71728cd2c4ee4754fd0603"],"3ae97ad22c2ae646bfc1c09cab424cb07f9474ca":["85a883878c0af761245ab048babc63d099f835f3"],"3bb13258feba31ab676502787ab2e1779f129b7a":["5a98a65bdb67cd0b27d18a5564d63bd3e944d3f4","385cc8c7649bbc88df61ace8ef058a7b9376e95f"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["44fcbde6fb2ac44ee3b45e013e54a42911e689ff"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"5a98a65bdb67cd0b27d18a5564d63bd3e944d3f4":["3bb13258feba31ab676502787ab2e1779f129b7a"],"44fcbde6fb2ac44ee3b45e013e54a42911e689ff":["ab5cb6a74aefb78aa0569857970b9151dfe2e787","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a493e6d0c3ad86bd55c0a1360d110142e948f2bd":["85a883878c0af761245ab048babc63d099f835f3","385cc8c7649bbc88df61ace8ef058a7b9376e95f"],"85a883878c0af761245ab048babc63d099f835f3":["3ae97ad22c2ae646bfc1c09cab424cb07f9474ca"],"955c32f886db6f6356c9fcdea6b1f1cb4effda24":["9b832cbed6eb3d54a8bb9339296bdda8eeb53014","8fe956d65251358d755c56f14fe8380644790e47"],"ab5cb6a74aefb78aa0569857970b9151dfe2e787":[],"334c1175813aea771a71728cd2c4ee4754fd0603":["a493e6d0c3ad86bd55c0a1360d110142e948f2bd","0e28c49f1fb6215a550fdadcf3805aa629b63ec0"],"9b832cbed6eb3d54a8bb9339296bdda8eeb53014":["334c1175813aea771a71728cd2c4ee4754fd0603"],"385cc8c7649bbc88df61ace8ef058a7b9376e95f":["44fcbde6fb2ac44ee3b45e013e54a42911e689ff","3bb13258feba31ab676502787ab2e1779f129b7a"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"8fe956d65251358d755c56f14fe8380644790e47":[],"0e28c49f1fb6215a550fdadcf3805aa629b63ec0":["85a883878c0af761245ab048babc63d099f835f3"],"3ae97ad22c2ae646bfc1c09cab424cb07f9474ca":["5a98a65bdb67cd0b27d18a5564d63bd3e944d3f4"],"3bb13258feba31ab676502787ab2e1779f129b7a":["ab5cb6a74aefb78aa0569857970b9151dfe2e787"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["955c32f886db6f6356c9fcdea6b1f1cb4effda24"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["ab5cb6a74aefb78aa0569857970b9151dfe2e787","8fe956d65251358d755c56f14fe8380644790e47","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}