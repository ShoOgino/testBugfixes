{"path":"src/test/org/apache/lucene/analysis/TestCharArraySet#testObjectContains().mjava","commits":[{"id":"0923e125411508bc912fc3d421ebd462aa0ee99f","date":1231279295,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"src/test/org/apache/lucene/analysis/TestCharArraySet#testObjectContains().mjava","pathOld":"/dev/null","sourceNew":"  public void testObjectContains() {\n    CharArraySet set = new CharArraySet(10, true);\n    Integer val = new Integer(1);\n    set.add(val);\n    assertTrue(set.contains(val));\n    assertTrue(set.contains(new Integer(1)));\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c881464041e282c06fdb34e91f883b83b8d97968","date":1247607562,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"src/test/org/apache/lucene/analysis/TestCharArraySet#testObjectContains().mjava","pathOld":"src/test/org/apache/lucene/analysis/TestCharArraySet#testObjectContains().mjava","sourceNew":"  public void testObjectContains() {\n    CharArraySet set = new CharArraySet(10, true);\n    Integer val = new Integer(1);\n    set.add(val);\n    assertTrue(set.contains(val));\n    assertTrue(set.contains(new Integer(1)));\n    // test unmodifiable\n    set = CharArraySet.unmodifiableSet(set);\n    assertTrue(set.contains(val));\n    assertTrue(set.contains(new Integer(1)));\n  }\n\n","sourceOld":"  public void testObjectContains() {\n    CharArraySet set = new CharArraySet(10, true);\n    Integer val = new Integer(1);\n    set.add(val);\n    assertTrue(set.contains(val));\n    assertTrue(set.contains(new Integer(1)));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6bcde5e3f23911110baa101ed062b544162825b5","date":1254521804,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/test/org/apache/lucene/analysis/TestCharArraySet#testObjectContains().mjava","pathOld":"src/test/org/apache/lucene/analysis/TestCharArraySet#testObjectContains().mjava","sourceNew":"  public void testObjectContains() {\n    CharArraySet set = new CharArraySet(10, true);\n    Integer val = Integer.valueOf(1);\n    set.add(val);\n    assertTrue(set.contains(val));\n    assertTrue(set.contains(Integer.valueOf(1)));\n    // test unmodifiable\n    set = CharArraySet.unmodifiableSet(set);\n    assertTrue(set.contains(val));\n    assertTrue(set.contains(Integer.valueOf(1)));\n  }\n\n","sourceOld":"  public void testObjectContains() {\n    CharArraySet set = new CharArraySet(10, true);\n    Integer val = new Integer(1);\n    set.add(val);\n    assertTrue(set.contains(val));\n    assertTrue(set.contains(new Integer(1)));\n    // test unmodifiable\n    set = CharArraySet.unmodifiableSet(set);\n    assertTrue(set.contains(val));\n    assertTrue(set.contains(new Integer(1)));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7f6c85ffa816c86be877aa7a5029a5daa1336e7f","date":1259617761,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/test/org/apache/lucene/analysis/TestCharArraySet#testObjectContains().mjava","pathOld":"src/test/org/apache/lucene/analysis/TestCharArraySet#testObjectContains().mjava","sourceNew":"  public void testObjectContains() {\n    CharArraySet set = new CharArraySet(Version.LUCENE_CURRENT, 10, true);\n    Integer val = Integer.valueOf(1);\n    set.add(val);\n    assertTrue(set.contains(val));\n    assertTrue(set.contains(Integer.valueOf(1)));\n    // test unmodifiable\n    set = CharArraySet.unmodifiableSet(set);\n    assertTrue(set.contains(val));\n    assertTrue(set.contains(Integer.valueOf(1)));\n  }\n\n","sourceOld":"  public void testObjectContains() {\n    CharArraySet set = new CharArraySet(10, true);\n    Integer val = Integer.valueOf(1);\n    set.add(val);\n    assertTrue(set.contains(val));\n    assertTrue(set.contains(Integer.valueOf(1)));\n    // test unmodifiable\n    set = CharArraySet.unmodifiableSet(set);\n    assertTrue(set.contains(val));\n    assertTrue(set.contains(Integer.valueOf(1)));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3ddbb40e897ef945a09991763daff7fa6b72ba87","date":1261610677,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/test/org/apache/lucene/analysis/TestCharArraySet#testObjectContains().mjava","pathOld":"src/test/org/apache/lucene/analysis/TestCharArraySet#testObjectContains().mjava","sourceNew":"  public void testObjectContains() {\n    CharArraySet set = new CharArraySet(Version.LUCENE_CURRENT, 10, true);\n    Integer val = Integer.valueOf(1);\n    set.add(val);\n    assertTrue(set.contains(val));\n    assertTrue(set.contains(new Integer(1))); // another integer\n    assertTrue(set.contains(\"1\"));\n    assertTrue(set.contains(new char[]{'1'}));\n    // test unmodifiable\n    set = CharArraySet.unmodifiableSet(set);\n    assertTrue(set.contains(val));\n    assertTrue(set.contains(new Integer(1))); // another integer\n    assertTrue(set.contains(\"1\"));\n    assertTrue(set.contains(new char[]{'1'}));\n  }\n\n","sourceOld":"  public void testObjectContains() {\n    CharArraySet set = new CharArraySet(Version.LUCENE_CURRENT, 10, true);\n    Integer val = Integer.valueOf(1);\n    set.add(val);\n    assertTrue(set.contains(val));\n    assertTrue(set.contains(Integer.valueOf(1)));\n    // test unmodifiable\n    set = CharArraySet.unmodifiableSet(set);\n    assertTrue(set.contains(val));\n    assertTrue(set.contains(Integer.valueOf(1)));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"55f083e91bb056b57de136da1dfc3b9b6ecc4ef6","date":1265808957,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/test/org/apache/lucene/analysis/TestCharArraySet#testObjectContains().mjava","pathOld":"src/test/org/apache/lucene/analysis/TestCharArraySet#testObjectContains().mjava","sourceNew":"  public void testObjectContains() {\n    CharArraySet set = new CharArraySet(TEST_VERSION_CURRENT, 10, true);\n    Integer val = Integer.valueOf(1);\n    set.add(val);\n    assertTrue(set.contains(val));\n    assertTrue(set.contains(new Integer(1))); // another integer\n    assertTrue(set.contains(\"1\"));\n    assertTrue(set.contains(new char[]{'1'}));\n    // test unmodifiable\n    set = CharArraySet.unmodifiableSet(set);\n    assertTrue(set.contains(val));\n    assertTrue(set.contains(new Integer(1))); // another integer\n    assertTrue(set.contains(\"1\"));\n    assertTrue(set.contains(new char[]{'1'}));\n  }\n\n","sourceOld":"  public void testObjectContains() {\n    CharArraySet set = new CharArraySet(Version.LUCENE_CURRENT, 10, true);\n    Integer val = Integer.valueOf(1);\n    set.add(val);\n    assertTrue(set.contains(val));\n    assertTrue(set.contains(new Integer(1))); // another integer\n    assertTrue(set.contains(\"1\"));\n    assertTrue(set.contains(new char[]{'1'}));\n    // test unmodifiable\n    set = CharArraySet.unmodifiableSet(set);\n    assertTrue(set.contains(val));\n    assertTrue(set.contains(new Integer(1))); // another integer\n    assertTrue(set.contains(\"1\"));\n    assertTrue(set.contains(new char[]{'1'}));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/analysis/TestCharArraySet#testObjectContains().mjava","pathOld":"src/test/org/apache/lucene/analysis/TestCharArraySet#testObjectContains().mjava","sourceNew":"  public void testObjectContains() {\n    CharArraySet set = new CharArraySet(TEST_VERSION_CURRENT, 10, true);\n    Integer val = Integer.valueOf(1);\n    set.add(val);\n    assertTrue(set.contains(val));\n    assertTrue(set.contains(new Integer(1))); // another integer\n    assertTrue(set.contains(\"1\"));\n    assertTrue(set.contains(new char[]{'1'}));\n    // test unmodifiable\n    set = CharArraySet.unmodifiableSet(set);\n    assertTrue(set.contains(val));\n    assertTrue(set.contains(new Integer(1))); // another integer\n    assertTrue(set.contains(\"1\"));\n    assertTrue(set.contains(new char[]{'1'}));\n  }\n\n","sourceOld":"  public void testObjectContains() {\n    CharArraySet set = new CharArraySet(TEST_VERSION_CURRENT, 10, true);\n    Integer val = Integer.valueOf(1);\n    set.add(val);\n    assertTrue(set.contains(val));\n    assertTrue(set.contains(new Integer(1))); // another integer\n    assertTrue(set.contains(\"1\"));\n    assertTrue(set.contains(new char[]{'1'}));\n    // test unmodifiable\n    set = CharArraySet.unmodifiableSet(set);\n    assertTrue(set.contains(val));\n    assertTrue(set.contains(new Integer(1))); // another integer\n    assertTrue(set.contains(\"1\"));\n    assertTrue(set.contains(new char[]{'1'}));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3ddbb40e897ef945a09991763daff7fa6b72ba87":["7f6c85ffa816c86be877aa7a5029a5daa1336e7f"],"0923e125411508bc912fc3d421ebd462aa0ee99f":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"6bcde5e3f23911110baa101ed062b544162825b5":["c881464041e282c06fdb34e91f883b83b8d97968"],"55f083e91bb056b57de136da1dfc3b9b6ecc4ef6":["3ddbb40e897ef945a09991763daff7fa6b72ba87"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"c881464041e282c06fdb34e91f883b83b8d97968":["0923e125411508bc912fc3d421ebd462aa0ee99f"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["55f083e91bb056b57de136da1dfc3b9b6ecc4ef6"],"7f6c85ffa816c86be877aa7a5029a5daa1336e7f":["6bcde5e3f23911110baa101ed062b544162825b5"]},"commit2Childs":{"3ddbb40e897ef945a09991763daff7fa6b72ba87":["55f083e91bb056b57de136da1dfc3b9b6ecc4ef6"],"0923e125411508bc912fc3d421ebd462aa0ee99f":["c881464041e282c06fdb34e91f883b83b8d97968"],"6bcde5e3f23911110baa101ed062b544162825b5":["7f6c85ffa816c86be877aa7a5029a5daa1336e7f"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["0923e125411508bc912fc3d421ebd462aa0ee99f"],"55f083e91bb056b57de136da1dfc3b9b6ecc4ef6":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"c881464041e282c06fdb34e91f883b83b8d97968":["6bcde5e3f23911110baa101ed062b544162825b5"],"7f6c85ffa816c86be877aa7a5029a5daa1336e7f":["3ddbb40e897ef945a09991763daff7fa6b72ba87"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}