{"path":"lucene/src/java/org/apache/lucene/index/IndexWriter#isSeparateNormsFile(String).mjava","commits":[{"id":"ae7b1abd869bbf7d8ae72b0e7ae3852b363bb074","date":1323052749,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/IndexWriter#isSeparateNormsFile(String).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/IndexFileNames#isSeparateNormsFile(String).mjava","sourceNew":"  /**\n   * Returns true if the given filename ends with the separate norms file\n   * pattern: {@code SEPARATE_NORMS_EXTENSION + \"[0-9]+\"}.\n   * @deprecated only for asserting\n   */\n  @Deprecated\n  private static boolean isSeparateNormsFile(String filename) {\n    int idx = filename.lastIndexOf('.');\n    if (idx == -1) return false;\n    String ext = filename.substring(idx + 1);\n    return Pattern.matches(\"s[0-9]+\", ext);\n  }\n\n","sourceOld":"  /**\n   * Returns true if the given filename ends with the separate norms file\n   * pattern: {@code SEPARATE_NORMS_EXTENSION + \"[0-9]+\"}.\n   */\n  public static boolean isSeparateNormsFile(String filename) {\n    int idx = filename.lastIndexOf('.');\n    if (idx == -1) return false;\n    String ext = filename.substring(idx + 1);\n    return Pattern.matches(SEPARATE_NORMS_EXTENSION + \"[0-9]+\", ext);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3615ce4a1f785ae1b779244de52c6a7d99227e60","date":1323422019,"type":1,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/IndexWriter#isSeparateNormsFile(String).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/IndexFileNames#isSeparateNormsFile(String).mjava","sourceNew":"  /**\n   * Returns true if the given filename ends with the separate norms file\n   * pattern: {@code SEPARATE_NORMS_EXTENSION + \"[0-9]+\"}.\n   * @deprecated only for asserting\n   */\n  @Deprecated\n  private static boolean isSeparateNormsFile(String filename) {\n    int idx = filename.lastIndexOf('.');\n    if (idx == -1) return false;\n    String ext = filename.substring(idx + 1);\n    return Pattern.matches(\"s[0-9]+\", ext);\n  }\n\n","sourceOld":"  /**\n   * Returns true if the given filename ends with the separate norms file\n   * pattern: {@code SEPARATE_NORMS_EXTENSION + \"[0-9]+\"}.\n   */\n  public static boolean isSeparateNormsFile(String filename) {\n    int idx = filename.lastIndexOf('.');\n    if (idx == -1) return false;\n    String ext = filename.substring(idx + 1);\n    return Pattern.matches(SEPARATE_NORMS_EXTENSION + \"[0-9]+\", ext);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ba5bc70a1fc1e0abc1eb4171af0d6f2532711c00","date":1323437438,"type":1,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/IndexWriter#isSeparateNormsFile(String).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/IndexFileNames#isSeparateNormsFile(String).mjava","sourceNew":"  /**\n   * Returns true if the given filename ends with the separate norms file\n   * pattern: {@code SEPARATE_NORMS_EXTENSION + \"[0-9]+\"}.\n   * @deprecated only for asserting\n   */\n  @Deprecated\n  private static boolean isSeparateNormsFile(String filename) {\n    int idx = filename.lastIndexOf('.');\n    if (idx == -1) return false;\n    String ext = filename.substring(idx + 1);\n    return Pattern.matches(\"s[0-9]+\", ext);\n  }\n\n","sourceOld":"  /**\n   * Returns true if the given filename ends with the separate norms file\n   * pattern: {@code SEPARATE_NORMS_EXTENSION + \"[0-9]+\"}.\n   */\n  public static boolean isSeparateNormsFile(String filename) {\n    int idx = filename.lastIndexOf('.');\n    if (idx == -1) return false;\n    String ext = filename.substring(idx + 1);\n    return Pattern.matches(SEPARATE_NORMS_EXTENSION + \"[0-9]+\", ext);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ee7817a665237cb0657ed2bd7ae2a2b91ce6aaf9","date":1327025939,"type":4,"author":"Robert Muir","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/src/java/org/apache/lucene/index/IndexWriter#isSeparateNormsFile(String).mjava","sourceNew":null,"sourceOld":"  /**\n   * Returns true if the given filename ends with the separate norms file\n   * pattern: {@code SEPARATE_NORMS_EXTENSION + \"[0-9]+\"}.\n   * @deprecated only for asserting\n   */\n  @Deprecated\n  private static boolean isSeparateNormsFile(String filename) {\n    int idx = filename.lastIndexOf('.');\n    if (idx == -1) return false;\n    String ext = filename.substring(idx + 1);\n    return Pattern.matches(\"s[0-9]+\", ext);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c9f2d6bb11ccaac366d9b7652b2feb0c715d9c31","date":1327836826,"type":4,"author":"Robert Muir","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/src/java/org/apache/lucene/index/IndexWriter#isSeparateNormsFile(String).mjava","sourceNew":null,"sourceOld":"  /**\n   * Returns true if the given filename ends with the separate norms file\n   * pattern: {@code SEPARATE_NORMS_EXTENSION + \"[0-9]+\"}.\n   * @deprecated only for asserting\n   */\n  @Deprecated\n  private static boolean isSeparateNormsFile(String filename) {\n    int idx = filename.lastIndexOf('.');\n    if (idx == -1) return false;\n    String ext = filename.substring(idx + 1);\n    return Pattern.matches(\"s[0-9]+\", ext);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fd92b8bcc88e969302510acf77bd6970da3994c4","date":1327839530,"type":4,"author":"Uwe Schindler","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/src/java/org/apache/lucene/index/IndexWriter#isSeparateNormsFile(String).mjava","sourceNew":null,"sourceOld":"  /**\n   * Returns true if the given filename ends with the separate norms file\n   * pattern: {@code SEPARATE_NORMS_EXTENSION + \"[0-9]+\"}.\n   * @deprecated only for asserting\n   */\n  @Deprecated\n  private static boolean isSeparateNormsFile(String filename) {\n    int idx = filename.lastIndexOf('.');\n    if (idx == -1) return false;\n    String ext = filename.substring(idx + 1);\n    return Pattern.matches(\"s[0-9]+\", ext);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"ee7817a665237cb0657ed2bd7ae2a2b91ce6aaf9":["3615ce4a1f785ae1b779244de52c6a7d99227e60"],"ba5bc70a1fc1e0abc1eb4171af0d6f2532711c00":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","3615ce4a1f785ae1b779244de52c6a7d99227e60"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"fd92b8bcc88e969302510acf77bd6970da3994c4":["3615ce4a1f785ae1b779244de52c6a7d99227e60","c9f2d6bb11ccaac366d9b7652b2feb0c715d9c31"],"3615ce4a1f785ae1b779244de52c6a7d99227e60":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","ae7b1abd869bbf7d8ae72b0e7ae3852b363bb074"],"ae7b1abd869bbf7d8ae72b0e7ae3852b363bb074":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"c9f2d6bb11ccaac366d9b7652b2feb0c715d9c31":["3615ce4a1f785ae1b779244de52c6a7d99227e60","ee7817a665237cb0657ed2bd7ae2a2b91ce6aaf9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["c9f2d6bb11ccaac366d9b7652b2feb0c715d9c31"]},"commit2Childs":{"ee7817a665237cb0657ed2bd7ae2a2b91ce6aaf9":["c9f2d6bb11ccaac366d9b7652b2feb0c715d9c31"],"ba5bc70a1fc1e0abc1eb4171af0d6f2532711c00":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["ba5bc70a1fc1e0abc1eb4171af0d6f2532711c00","3615ce4a1f785ae1b779244de52c6a7d99227e60","ae7b1abd869bbf7d8ae72b0e7ae3852b363bb074"],"fd92b8bcc88e969302510acf77bd6970da3994c4":[],"3615ce4a1f785ae1b779244de52c6a7d99227e60":["ee7817a665237cb0657ed2bd7ae2a2b91ce6aaf9","ba5bc70a1fc1e0abc1eb4171af0d6f2532711c00","fd92b8bcc88e969302510acf77bd6970da3994c4","c9f2d6bb11ccaac366d9b7652b2feb0c715d9c31"],"ae7b1abd869bbf7d8ae72b0e7ae3852b363bb074":["3615ce4a1f785ae1b779244de52c6a7d99227e60"],"c9f2d6bb11ccaac366d9b7652b2feb0c715d9c31":["fd92b8bcc88e969302510acf77bd6970da3994c4","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["ba5bc70a1fc1e0abc1eb4171af0d6f2532711c00","fd92b8bcc88e969302510acf77bd6970da3994c4","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}