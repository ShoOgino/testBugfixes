{"path":"solr/solrj/src/java/org/apache/solr/client/solrj/io/eval/CumulativeProbabilityEvaluator#evaluate(Tuple).mjava","commits":[{"id":"c5156e47b791bd464473781bacfd0f1a03130a6b","date":1496675957,"type":0,"author":"Joel Bernstein","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/io/eval/CumulativeProbabilityEvaluator#evaluate(Tuple).mjava","pathOld":"/dev/null","sourceNew":"  public Number evaluate(Tuple tuple) throws IOException {\n\n    if(subEvaluators.size() != 2) {\n      throw new IOException(\"Cumulative probability expects 2 parameters: an emperical distribution and a number\");\n    }\n\n    StreamEvaluator r = subEvaluators.get(0);\n    StreamEvaluator d = subEvaluators.get(1);\n\n    EmpiricalDistributionEvaluator.EmpiricalDistributionTuple e = (EmpiricalDistributionEvaluator.EmpiricalDistributionTuple)r.evaluate(tuple);\n    Number n = (Number)d.evaluate(tuple);\n    return e.percentile(n.doubleValue());\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e9017cf144952056066919f1ebc7897ff9bd71b1","date":1496757600,"type":0,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/io/eval/CumulativeProbabilityEvaluator#evaluate(Tuple).mjava","pathOld":"/dev/null","sourceNew":"  public Number evaluate(Tuple tuple) throws IOException {\n\n    if(subEvaluators.size() != 2) {\n      throw new IOException(\"Cumulative probability expects 2 parameters: an emperical distribution and a number\");\n    }\n\n    StreamEvaluator r = subEvaluators.get(0);\n    StreamEvaluator d = subEvaluators.get(1);\n\n    EmpiricalDistributionEvaluator.EmpiricalDistributionTuple e = (EmpiricalDistributionEvaluator.EmpiricalDistributionTuple)r.evaluate(tuple);\n    Number n = (Number)d.evaluate(tuple);\n    return e.percentile(n.doubleValue());\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"72dc84475e6ad3fd8951c733b6e17916c03cd574","date":1497801058,"type":3,"author":"Dennis Gove","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/io/eval/CumulativeProbabilityEvaluator#evaluate(Tuple).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/io/eval/CumulativeProbabilityEvaluator#evaluate(Tuple).mjava","sourceNew":"  public Number evaluate(Tuple tuple) throws IOException {\n\n    StreamEvaluator r = subEvaluators.get(0);\n    StreamEvaluator d = subEvaluators.get(1);\n\n    EmpiricalDistributionEvaluator.EmpiricalDistributionTuple e = (EmpiricalDistributionEvaluator.EmpiricalDistributionTuple)r.evaluate(tuple);\n    Number n = (Number)d.evaluate(tuple);\n    return e.percentile(n.doubleValue());\n  }\n\n","sourceOld":"  public Number evaluate(Tuple tuple) throws IOException {\n\n    if(subEvaluators.size() != 2) {\n      throw new IOException(\"Cumulative probability expects 2 parameters: an emperical distribution and a number\");\n    }\n\n    StreamEvaluator r = subEvaluators.get(0);\n    StreamEvaluator d = subEvaluators.get(1);\n\n    EmpiricalDistributionEvaluator.EmpiricalDistributionTuple e = (EmpiricalDistributionEvaluator.EmpiricalDistributionTuple)r.evaluate(tuple);\n    Number n = (Number)d.evaluate(tuple);\n    return e.percentile(n.doubleValue());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2a3ed3f77cdd034e789d00d1ca8bb7054c9fb8e9","date":1498028748,"type":3,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/io/eval/CumulativeProbabilityEvaluator#evaluate(Tuple).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/io/eval/CumulativeProbabilityEvaluator#evaluate(Tuple).mjava","sourceNew":"  public Number evaluate(Tuple tuple) throws IOException {\n\n    StreamEvaluator r = subEvaluators.get(0);\n    StreamEvaluator d = subEvaluators.get(1);\n\n    EmpiricalDistributionEvaluator.EmpiricalDistributionTuple e = (EmpiricalDistributionEvaluator.EmpiricalDistributionTuple)r.evaluate(tuple);\n    Number n = (Number)d.evaluate(tuple);\n    return e.percentile(n.doubleValue());\n  }\n\n","sourceOld":"  public Number evaluate(Tuple tuple) throws IOException {\n\n    if(subEvaluators.size() != 2) {\n      throw new IOException(\"Cumulative probability expects 2 parameters: an emperical distribution and a number\");\n    }\n\n    StreamEvaluator r = subEvaluators.get(0);\n    StreamEvaluator d = subEvaluators.get(1);\n\n    EmpiricalDistributionEvaluator.EmpiricalDistributionTuple e = (EmpiricalDistributionEvaluator.EmpiricalDistributionTuple)r.evaluate(tuple);\n    Number n = (Number)d.evaluate(tuple);\n    return e.percentile(n.doubleValue());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"28288370235ed02234a64753cdbf0c6ec096304a","date":1498726817,"type":0,"author":"Karl Wright","isMerge":true,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/io/eval/CumulativeProbabilityEvaluator#evaluate(Tuple).mjava","pathOld":"/dev/null","sourceNew":"  public Number evaluate(Tuple tuple) throws IOException {\n\n    StreamEvaluator r = subEvaluators.get(0);\n    StreamEvaluator d = subEvaluators.get(1);\n\n    EmpiricalDistributionEvaluator.EmpiricalDistributionTuple e = (EmpiricalDistributionEvaluator.EmpiricalDistributionTuple)r.evaluate(tuple);\n    Number n = (Number)d.evaluate(tuple);\n    return e.percentile(n.doubleValue());\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"40f06aec8ac912d126c71c7e9d6065ed70aa9c65","date":1501530021,"type":4,"author":"Joel Bernstein","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/io/eval/CumulativeProbabilityEvaluator#evaluate(Tuple).mjava","sourceNew":null,"sourceOld":"  public Number evaluate(Tuple tuple) throws IOException {\n\n    StreamEvaluator r = subEvaluators.get(0);\n    StreamEvaluator d = subEvaluators.get(1);\n\n    EmpiricalDistributionEvaluator.EmpiricalDistributionTuple e = (EmpiricalDistributionEvaluator.EmpiricalDistributionTuple)r.evaluate(tuple);\n    Number n = (Number)d.evaluate(tuple);\n    return e.percentile(n.doubleValue());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7a23cf16c8fa265dc0a564adcabb55e3f054e0ac","date":1502192746,"type":4,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"/dev/null","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/io/eval/CumulativeProbabilityEvaluator#evaluate(Tuple).mjava","sourceNew":null,"sourceOld":"  public Number evaluate(Tuple tuple) throws IOException {\n\n    StreamEvaluator r = subEvaluators.get(0);\n    StreamEvaluator d = subEvaluators.get(1);\n\n    EmpiricalDistributionEvaluator.EmpiricalDistributionTuple e = (EmpiricalDistributionEvaluator.EmpiricalDistributionTuple)r.evaluate(tuple);\n    Number n = (Number)d.evaluate(tuple);\n    return e.percentile(n.doubleValue());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8fbc80749c85efd1895219216ee31ee422dbb0a2","date":1502416545,"type":0,"author":"Joel Bernstein","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/io/eval/CumulativeProbabilityEvaluator#evaluate(Tuple).mjava","pathOld":"/dev/null","sourceNew":"  public Number evaluate(Tuple tuple) throws IOException {\n    StreamEvaluator a = subEvaluators.get(0);\n    StreamEvaluator b = subEvaluators.get(1);\n    Number number1 = (Number)b.evaluate(tuple);\n    RealDistribution rd= (RealDistribution)a.evaluate(tuple);\n\n    return rd.cumulativeProbability(number1.doubleValue());\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"19e8eb794082b9cc37b6562c76814ec4a26b9b8b","date":1502501868,"type":0,"author":"Cao Manh Dat","isMerge":true,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/io/eval/CumulativeProbabilityEvaluator#evaluate(Tuple).mjava","pathOld":"/dev/null","sourceNew":"  public Number evaluate(Tuple tuple) throws IOException {\n    StreamEvaluator a = subEvaluators.get(0);\n    StreamEvaluator b = subEvaluators.get(1);\n    Number number1 = (Number)b.evaluate(tuple);\n    RealDistribution rd= (RealDistribution)a.evaluate(tuple);\n\n    return rd.cumulativeProbability(number1.doubleValue());\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"93d40a0287bd8a5b69a8df49a797dcd4a8b1a7be","date":1502692251,"type":0,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/io/eval/CumulativeProbabilityEvaluator#evaluate(Tuple).mjava","pathOld":"/dev/null","sourceNew":"  public Number evaluate(Tuple tuple) throws IOException {\n    StreamEvaluator a = subEvaluators.get(0);\n    StreamEvaluator b = subEvaluators.get(1);\n    Number number1 = (Number)b.evaluate(tuple);\n    RealDistribution rd= (RealDistribution)a.evaluate(tuple);\n\n    return rd.cumulativeProbability(number1.doubleValue());\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ba1e7de64990e3928b90142a52fb92eeff556475","date":1503713257,"type":4,"author":"Dennis Gove","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/io/eval/CumulativeProbabilityEvaluator#evaluate(Tuple).mjava","sourceNew":null,"sourceOld":"  public Number evaluate(Tuple tuple) throws IOException {\n    StreamEvaluator a = subEvaluators.get(0);\n    StreamEvaluator b = subEvaluators.get(1);\n    Number number1 = (Number)b.evaluate(tuple);\n    RealDistribution rd= (RealDistribution)a.evaluate(tuple);\n\n    return rd.cumulativeProbability(number1.doubleValue());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"45c28dbb559366e1f4ef8077346552bfb3f7ecf6","date":1503738439,"type":4,"author":"Karl Wright","isMerge":true,"pathNew":"/dev/null","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/io/eval/CumulativeProbabilityEvaluator#evaluate(Tuple).mjava","sourceNew":null,"sourceOld":"  public Number evaluate(Tuple tuple) throws IOException {\n    StreamEvaluator a = subEvaluators.get(0);\n    StreamEvaluator b = subEvaluators.get(1);\n    Number number1 = (Number)b.evaluate(tuple);\n    RealDistribution rd= (RealDistribution)a.evaluate(tuple);\n\n    return rd.cumulativeProbability(number1.doubleValue());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3a7809d1d753b67f48b1a706e17034bf8b624ea3","date":1504366927,"type":4,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"/dev/null","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/io/eval/CumulativeProbabilityEvaluator#evaluate(Tuple).mjava","sourceNew":null,"sourceOld":"  public Number evaluate(Tuple tuple) throws IOException {\n    StreamEvaluator a = subEvaluators.get(0);\n    StreamEvaluator b = subEvaluators.get(1);\n    Number number1 = (Number)b.evaluate(tuple);\n    RealDistribution rd= (RealDistribution)a.evaluate(tuple);\n\n    return rd.cumulativeProbability(number1.doubleValue());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"19e8eb794082b9cc37b6562c76814ec4a26b9b8b":["40f06aec8ac912d126c71c7e9d6065ed70aa9c65","8fbc80749c85efd1895219216ee31ee422dbb0a2"],"28288370235ed02234a64753cdbf0c6ec096304a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","72dc84475e6ad3fd8951c733b6e17916c03cd574"],"c5156e47b791bd464473781bacfd0f1a03130a6b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"e9017cf144952056066919f1ebc7897ff9bd71b1":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","c5156e47b791bd464473781bacfd0f1a03130a6b"],"7a23cf16c8fa265dc0a564adcabb55e3f054e0ac":["2a3ed3f77cdd034e789d00d1ca8bb7054c9fb8e9","40f06aec8ac912d126c71c7e9d6065ed70aa9c65"],"3a7809d1d753b67f48b1a706e17034bf8b624ea3":["93d40a0287bd8a5b69a8df49a797dcd4a8b1a7be","45c28dbb559366e1f4ef8077346552bfb3f7ecf6"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"45c28dbb559366e1f4ef8077346552bfb3f7ecf6":["19e8eb794082b9cc37b6562c76814ec4a26b9b8b","ba1e7de64990e3928b90142a52fb92eeff556475"],"72dc84475e6ad3fd8951c733b6e17916c03cd574":["c5156e47b791bd464473781bacfd0f1a03130a6b"],"ba1e7de64990e3928b90142a52fb92eeff556475":["19e8eb794082b9cc37b6562c76814ec4a26b9b8b"],"93d40a0287bd8a5b69a8df49a797dcd4a8b1a7be":["7a23cf16c8fa265dc0a564adcabb55e3f054e0ac","19e8eb794082b9cc37b6562c76814ec4a26b9b8b"],"8fbc80749c85efd1895219216ee31ee422dbb0a2":["40f06aec8ac912d126c71c7e9d6065ed70aa9c65"],"40f06aec8ac912d126c71c7e9d6065ed70aa9c65":["28288370235ed02234a64753cdbf0c6ec096304a"],"2a3ed3f77cdd034e789d00d1ca8bb7054c9fb8e9":["e9017cf144952056066919f1ebc7897ff9bd71b1","72dc84475e6ad3fd8951c733b6e17916c03cd574"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["45c28dbb559366e1f4ef8077346552bfb3f7ecf6"]},"commit2Childs":{"19e8eb794082b9cc37b6562c76814ec4a26b9b8b":["45c28dbb559366e1f4ef8077346552bfb3f7ecf6","ba1e7de64990e3928b90142a52fb92eeff556475","93d40a0287bd8a5b69a8df49a797dcd4a8b1a7be"],"28288370235ed02234a64753cdbf0c6ec096304a":["40f06aec8ac912d126c71c7e9d6065ed70aa9c65"],"c5156e47b791bd464473781bacfd0f1a03130a6b":["e9017cf144952056066919f1ebc7897ff9bd71b1","72dc84475e6ad3fd8951c733b6e17916c03cd574"],"e9017cf144952056066919f1ebc7897ff9bd71b1":["2a3ed3f77cdd034e789d00d1ca8bb7054c9fb8e9"],"7a23cf16c8fa265dc0a564adcabb55e3f054e0ac":["93d40a0287bd8a5b69a8df49a797dcd4a8b1a7be"],"3a7809d1d753b67f48b1a706e17034bf8b624ea3":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["28288370235ed02234a64753cdbf0c6ec096304a","c5156e47b791bd464473781bacfd0f1a03130a6b","e9017cf144952056066919f1ebc7897ff9bd71b1"],"45c28dbb559366e1f4ef8077346552bfb3f7ecf6":["3a7809d1d753b67f48b1a706e17034bf8b624ea3","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"72dc84475e6ad3fd8951c733b6e17916c03cd574":["28288370235ed02234a64753cdbf0c6ec096304a","2a3ed3f77cdd034e789d00d1ca8bb7054c9fb8e9"],"93d40a0287bd8a5b69a8df49a797dcd4a8b1a7be":["3a7809d1d753b67f48b1a706e17034bf8b624ea3"],"ba1e7de64990e3928b90142a52fb92eeff556475":["45c28dbb559366e1f4ef8077346552bfb3f7ecf6"],"8fbc80749c85efd1895219216ee31ee422dbb0a2":["19e8eb794082b9cc37b6562c76814ec4a26b9b8b"],"40f06aec8ac912d126c71c7e9d6065ed70aa9c65":["19e8eb794082b9cc37b6562c76814ec4a26b9b8b","7a23cf16c8fa265dc0a564adcabb55e3f054e0ac","8fbc80749c85efd1895219216ee31ee422dbb0a2"],"2a3ed3f77cdd034e789d00d1ca8bb7054c9fb8e9":["7a23cf16c8fa265dc0a564adcabb55e3f054e0ac"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["3a7809d1d753b67f48b1a706e17034bf8b624ea3","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}