{"path":"modules/analysis/common/src/test/org/apache/lucene/analysis/core/TestAnalyzers#testLowerCaseFilterBWComp().mjava","commits":[{"id":"790c3f61c9b891d66d919c5d10db9fa5216eb0f1","date":1274818604,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"modules/analysis/common/src/test/org/apache/lucene/analysis/core/TestAnalyzers#testLowerCaseFilterBWComp().mjava","pathOld":"lucene/src/test/org/apache/lucene/analysis/TestAnalyzers#testLowerCaseFilterBWComp().mjava","sourceNew":"  /**\n   * Test that LowercaseFilter only works on BMP for back compat,\n   * depending upon version\n   * @deprecated remove this test when lucene 3.0 \"broken unicode 4\" support\n   * is no longer needed.\n   */\n  @Deprecated\n  public void testLowerCaseFilterBWComp() throws IOException {\n    Analyzer a = new LowerCaseWhitespaceAnalyzerBWComp();\n    // BMP\n    assertAnalyzesTo(a, \"AbaCaDabA\", new String[] { \"abacadaba\" });\n    // supplementary, no-op\n    assertAnalyzesTo(a, \"\\ud801\\udc16\\ud801\\udc16\\ud801\\udc16\\ud801\\udc16\",\n        new String[] {\"\\ud801\\udc16\\ud801\\udc16\\ud801\\udc16\\ud801\\udc16\"});\n    assertAnalyzesTo(a, \"AbaCa\\ud801\\udc16DabA\",\n        new String[] { \"abaca\\ud801\\udc16daba\" });\n    // unpaired lead surrogate\n    assertAnalyzesTo(a, \"AbaC\\uD801AdaBa\", \n        new String [] { \"abac\\uD801adaba\" });\n    // unpaired trail surrogate\n    assertAnalyzesTo(a, \"AbaC\\uDC16AdaBa\", \n        new String [] { \"abac\\uDC16adaba\" });\n  }\n\n","sourceOld":"  /**\n   * Test that LowercaseFilter only works on BMP for back compat,\n   * depending upon version\n   * @deprecated remove this test when lucene 3.0 \"broken unicode 4\" support\n   * is no longer needed.\n   */\n  @Deprecated\n  public void testLowerCaseFilterBWComp() throws IOException {\n    Analyzer a = new LowerCaseWhitespaceAnalyzerBWComp();\n    // BMP\n    assertAnalyzesTo(a, \"AbaCaDabA\", new String[] { \"abacadaba\" });\n    // supplementary, no-op\n    assertAnalyzesTo(a, \"\\ud801\\udc16\\ud801\\udc16\\ud801\\udc16\\ud801\\udc16\",\n        new String[] {\"\\ud801\\udc16\\ud801\\udc16\\ud801\\udc16\\ud801\\udc16\"});\n    assertAnalyzesTo(a, \"AbaCa\\ud801\\udc16DabA\",\n        new String[] { \"abaca\\ud801\\udc16daba\" });\n    // unpaired lead surrogate\n    assertAnalyzesTo(a, \"AbaC\\uD801AdaBa\", \n        new String [] { \"abac\\uD801adaba\" });\n    // unpaired trail surrogate\n    assertAnalyzesTo(a, \"AbaC\\uDC16AdaBa\", \n        new String [] { \"abac\\uDC16adaba\" });\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4e8cc373c801e54cec75daf9f52792cb4b17f536","date":1291116159,"type":4,"author":"Robert Muir","isMerge":false,"pathNew":"/dev/null","pathOld":"modules/analysis/common/src/test/org/apache/lucene/analysis/core/TestAnalyzers#testLowerCaseFilterBWComp().mjava","sourceNew":null,"sourceOld":"  /**\n   * Test that LowercaseFilter only works on BMP for back compat,\n   * depending upon version\n   * @deprecated remove this test when lucene 3.0 \"broken unicode 4\" support\n   * is no longer needed.\n   */\n  @Deprecated\n  public void testLowerCaseFilterBWComp() throws IOException {\n    Analyzer a = new LowerCaseWhitespaceAnalyzerBWComp();\n    // BMP\n    assertAnalyzesTo(a, \"AbaCaDabA\", new String[] { \"abacadaba\" });\n    // supplementary, no-op\n    assertAnalyzesTo(a, \"\\ud801\\udc16\\ud801\\udc16\\ud801\\udc16\\ud801\\udc16\",\n        new String[] {\"\\ud801\\udc16\\ud801\\udc16\\ud801\\udc16\\ud801\\udc16\"});\n    assertAnalyzesTo(a, \"AbaCa\\ud801\\udc16DabA\",\n        new String[] { \"abaca\\ud801\\udc16daba\" });\n    // unpaired lead surrogate\n    assertAnalyzesTo(a, \"AbaC\\uD801AdaBa\", \n        new String [] { \"abac\\uD801adaba\" });\n    // unpaired trail surrogate\n    assertAnalyzesTo(a, \"AbaC\\uDC16AdaBa\", \n        new String [] { \"abac\\uDC16adaba\" });\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3bb13258feba31ab676502787ab2e1779f129b7a","date":1291596436,"type":4,"author":"Simon Willnauer","isMerge":true,"pathNew":"/dev/null","pathOld":"modules/analysis/common/src/test/org/apache/lucene/analysis/core/TestAnalyzers#testLowerCaseFilterBWComp().mjava","sourceNew":null,"sourceOld":"  /**\n   * Test that LowercaseFilter only works on BMP for back compat,\n   * depending upon version\n   * @deprecated remove this test when lucene 3.0 \"broken unicode 4\" support\n   * is no longer needed.\n   */\n  @Deprecated\n  public void testLowerCaseFilterBWComp() throws IOException {\n    Analyzer a = new LowerCaseWhitespaceAnalyzerBWComp();\n    // BMP\n    assertAnalyzesTo(a, \"AbaCaDabA\", new String[] { \"abacadaba\" });\n    // supplementary, no-op\n    assertAnalyzesTo(a, \"\\ud801\\udc16\\ud801\\udc16\\ud801\\udc16\\ud801\\udc16\",\n        new String[] {\"\\ud801\\udc16\\ud801\\udc16\\ud801\\udc16\\ud801\\udc16\"});\n    assertAnalyzesTo(a, \"AbaCa\\ud801\\udc16DabA\",\n        new String[] { \"abaca\\ud801\\udc16daba\" });\n    // unpaired lead surrogate\n    assertAnalyzesTo(a, \"AbaC\\uD801AdaBa\", \n        new String [] { \"abac\\uD801adaba\" });\n    // unpaired trail surrogate\n    assertAnalyzesTo(a, \"AbaC\\uDC16AdaBa\", \n        new String [] { \"abac\\uDC16adaba\" });\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","date":1292920096,"type":4,"author":"Michael Busch","isMerge":true,"pathNew":"/dev/null","pathOld":"modules/analysis/common/src/test/org/apache/lucene/analysis/core/TestAnalyzers#testLowerCaseFilterBWComp().mjava","sourceNew":null,"sourceOld":"  /**\n   * Test that LowercaseFilter only works on BMP for back compat,\n   * depending upon version\n   * @deprecated remove this test when lucene 3.0 \"broken unicode 4\" support\n   * is no longer needed.\n   */\n  @Deprecated\n  public void testLowerCaseFilterBWComp() throws IOException {\n    Analyzer a = new LowerCaseWhitespaceAnalyzerBWComp();\n    // BMP\n    assertAnalyzesTo(a, \"AbaCaDabA\", new String[] { \"abacadaba\" });\n    // supplementary, no-op\n    assertAnalyzesTo(a, \"\\ud801\\udc16\\ud801\\udc16\\ud801\\udc16\\ud801\\udc16\",\n        new String[] {\"\\ud801\\udc16\\ud801\\udc16\\ud801\\udc16\\ud801\\udc16\"});\n    assertAnalyzesTo(a, \"AbaCa\\ud801\\udc16DabA\",\n        new String[] { \"abaca\\ud801\\udc16daba\" });\n    // unpaired lead surrogate\n    assertAnalyzesTo(a, \"AbaC\\uD801AdaBa\", \n        new String [] { \"abac\\uD801adaba\" });\n    // unpaired trail surrogate\n    assertAnalyzesTo(a, \"AbaC\\uDC16AdaBa\", \n        new String [] { \"abac\\uDC16adaba\" });\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["790c3f61c9b891d66d919c5d10db9fa5216eb0f1","4e8cc373c801e54cec75daf9f52792cb4b17f536"],"3bb13258feba31ab676502787ab2e1779f129b7a":["790c3f61c9b891d66d919c5d10db9fa5216eb0f1","4e8cc373c801e54cec75daf9f52792cb4b17f536"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["4e8cc373c801e54cec75daf9f52792cb4b17f536"],"4e8cc373c801e54cec75daf9f52792cb4b17f536":["790c3f61c9b891d66d919c5d10db9fa5216eb0f1"],"790c3f61c9b891d66d919c5d10db9fa5216eb0f1":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["790c3f61c9b891d66d919c5d10db9fa5216eb0f1"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":[],"3bb13258feba31ab676502787ab2e1779f129b7a":[],"790c3f61c9b891d66d919c5d10db9fa5216eb0f1":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","3bb13258feba31ab676502787ab2e1779f129b7a","4e8cc373c801e54cec75daf9f52792cb4b17f536"],"4e8cc373c801e54cec75daf9f52792cb4b17f536":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","3bb13258feba31ab676502787ab2e1779f129b7a","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","3bb13258feba31ab676502787ab2e1779f129b7a","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}