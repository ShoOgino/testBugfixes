{"path":"solr/core/src/test/org/apache/solr/update/DirectUpdateHandlerTest#testPrepareCommit().mjava","commits":[{"id":"8524650e878177081c15c0c5bccfae2c7dca772b","date":1325284910,"type":0,"author":"Yonik Seeley","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/update/DirectUpdateHandlerTest#testPrepareCommit().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testPrepareCommit() throws Exception {\n    SolrQueryRequest sr = req();\n    IndexReader r = sr.getSearcher().getTopReaderContext().reader;\n    Directory d = r.directory();\n    \n    assertU(adoc(\"id\", \"1\"));\n\n    int nFiles = d.listAll().length;\n\n    updateJ(\"\", params(\"prepareCommit\",\"true\"));\n\n    assertTrue( d.listAll().length > nFiles);  // make sure new index files were actually written\n    \n    assertJQ(req(\"q\", \"id:1\")\n        , \"/response/numFound==0\"\n    );\n\n    updateJ(\"\", params(\"rollback\",\"true\"));\n    assertU(commit());\n\n    assertJQ(req(\"q\", \"id:1\")\n        , \"/response/numFound==0\"\n    );\n\n    assertU(adoc(\"id\",\"1\"));\n    updateJ(\"\", params(\"prepareCommit\",\"true\"));\n\n    assertJQ(req(\"q\", \"id:1\")\n        , \"/response/numFound==0\"\n    );\n\n    assertU(commit());\n\n    assertJQ(req(\"q\", \"id:1\")\n        , \"/response/numFound==1\"\n    );\n\n    sr.close();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4c43c3c404fe84002c7fde67a88b80222ac3b86c","date":1325370827,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/update/DirectUpdateHandlerTest#testPrepareCommit().mjava","pathOld":"solr/core/src/test/org/apache/solr/update/DirectUpdateHandlerTest#testPrepareCommit().mjava","sourceNew":"  @Test\n  public void testPrepareCommit() throws Exception {\n    assertU(adoc(\"id\", \"999\"));\n    assertU(optimize());     // make sure there's just one segment\n    assertU(commit());       // commit a second time to make sure index files aren't still referenced by the old searcher\n\n    SolrQueryRequest sr = req();\n    IndexReader r = sr.getSearcher().getTopReaderContext().reader;\n    Directory d = r.directory();\n\n    log.info(\"FILES before addDoc=\"+ Arrays.asList(d.listAll()));\n    assertU(adoc(\"id\", \"1\"));\n\n    int nFiles = d.listAll().length;\n    log.info(\"FILES before prepareCommit=\"+ Arrays.asList(d.listAll()));\n\n    updateJ(\"\", params(\"prepareCommit\", \"true\"));\n\n    log.info(\"FILES after prepareCommit=\"+Arrays.asList(d.listAll()));\n    assertTrue( d.listAll().length > nFiles);  // make sure new index files were actually written\n    \n    assertJQ(req(\"q\", \"id:1\")\n        , \"/response/numFound==0\"\n    );\n\n    updateJ(\"\", params(\"rollback\",\"true\"));\n    assertU(commit());\n\n    assertJQ(req(\"q\", \"id:1\")\n        , \"/response/numFound==0\"\n    );\n\n    assertU(adoc(\"id\",\"1\"));\n    updateJ(\"\", params(\"prepareCommit\",\"true\"));\n\n    assertJQ(req(\"q\", \"id:1\")\n        , \"/response/numFound==0\"\n    );\n\n    assertU(commit());\n\n    assertJQ(req(\"q\", \"id:1\")\n        , \"/response/numFound==1\"\n    );\n\n    sr.close();\n  }\n\n","sourceOld":"  @Test\n  public void testPrepareCommit() throws Exception {\n    SolrQueryRequest sr = req();\n    IndexReader r = sr.getSearcher().getTopReaderContext().reader;\n    Directory d = r.directory();\n    \n    assertU(adoc(\"id\", \"1\"));\n\n    int nFiles = d.listAll().length;\n\n    updateJ(\"\", params(\"prepareCommit\",\"true\"));\n\n    assertTrue( d.listAll().length > nFiles);  // make sure new index files were actually written\n    \n    assertJQ(req(\"q\", \"id:1\")\n        , \"/response/numFound==0\"\n    );\n\n    updateJ(\"\", params(\"rollback\",\"true\"));\n    assertU(commit());\n\n    assertJQ(req(\"q\", \"id:1\")\n        , \"/response/numFound==0\"\n    );\n\n    assertU(adoc(\"id\",\"1\"));\n    updateJ(\"\", params(\"prepareCommit\",\"true\"));\n\n    assertJQ(req(\"q\", \"id:1\")\n        , \"/response/numFound==0\"\n    );\n\n    assertU(commit());\n\n    assertJQ(req(\"q\", \"id:1\")\n        , \"/response/numFound==1\"\n    );\n\n    sr.close();\n  }\n\n","bugFix":null,"bugIntro":["fc1a22371a19bbb2a92556c4051ca0aaa823a8c2"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"96d207426bd26fa5c1014e26d21d87603aea68b7","date":1327944562,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/update/DirectUpdateHandlerTest#testPrepareCommit().mjava","pathOld":"solr/core/src/test/org/apache/solr/update/DirectUpdateHandlerTest#testPrepareCommit().mjava","sourceNew":"  @Test\n  public void testPrepareCommit() throws Exception {\n    assertU(adoc(\"id\", \"999\"));\n    assertU(optimize());     // make sure there's just one segment\n    assertU(commit());       // commit a second time to make sure index files aren't still referenced by the old searcher\n\n    SolrQueryRequest sr = req();\n    DirectoryReader r = sr.getSearcher().getIndexReader();\n    Directory d = r.directory();\n\n    log.info(\"FILES before addDoc=\"+ Arrays.asList(d.listAll()));\n    assertU(adoc(\"id\", \"1\"));\n\n    int nFiles = d.listAll().length;\n    log.info(\"FILES before prepareCommit=\"+ Arrays.asList(d.listAll()));\n\n    updateJ(\"\", params(\"prepareCommit\", \"true\"));\n\n    log.info(\"FILES after prepareCommit=\"+Arrays.asList(d.listAll()));\n    assertTrue( d.listAll().length > nFiles);  // make sure new index files were actually written\n    \n    assertJQ(req(\"q\", \"id:1\")\n        , \"/response/numFound==0\"\n    );\n\n    updateJ(\"\", params(\"rollback\",\"true\"));\n    assertU(commit());\n\n    assertJQ(req(\"q\", \"id:1\")\n        , \"/response/numFound==0\"\n    );\n\n    assertU(adoc(\"id\",\"1\"));\n    updateJ(\"\", params(\"prepareCommit\",\"true\"));\n\n    assertJQ(req(\"q\", \"id:1\")\n        , \"/response/numFound==0\"\n    );\n\n    assertU(commit());\n\n    assertJQ(req(\"q\", \"id:1\")\n        , \"/response/numFound==1\"\n    );\n\n    sr.close();\n  }\n\n","sourceOld":"  @Test\n  public void testPrepareCommit() throws Exception {\n    assertU(adoc(\"id\", \"999\"));\n    assertU(optimize());     // make sure there's just one segment\n    assertU(commit());       // commit a second time to make sure index files aren't still referenced by the old searcher\n\n    SolrQueryRequest sr = req();\n    IndexReader r = sr.getSearcher().getTopReaderContext().reader;\n    Directory d = r.directory();\n\n    log.info(\"FILES before addDoc=\"+ Arrays.asList(d.listAll()));\n    assertU(adoc(\"id\", \"1\"));\n\n    int nFiles = d.listAll().length;\n    log.info(\"FILES before prepareCommit=\"+ Arrays.asList(d.listAll()));\n\n    updateJ(\"\", params(\"prepareCommit\", \"true\"));\n\n    log.info(\"FILES after prepareCommit=\"+Arrays.asList(d.listAll()));\n    assertTrue( d.listAll().length > nFiles);  // make sure new index files were actually written\n    \n    assertJQ(req(\"q\", \"id:1\")\n        , \"/response/numFound==0\"\n    );\n\n    updateJ(\"\", params(\"rollback\",\"true\"));\n    assertU(commit());\n\n    assertJQ(req(\"q\", \"id:1\")\n        , \"/response/numFound==0\"\n    );\n\n    assertU(adoc(\"id\",\"1\"));\n    updateJ(\"\", params(\"prepareCommit\",\"true\"));\n\n    assertJQ(req(\"q\", \"id:1\")\n        , \"/response/numFound==0\"\n    );\n\n    assertU(commit());\n\n    assertJQ(req(\"q\", \"id:1\")\n        , \"/response/numFound==1\"\n    );\n\n    sr.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"5cab9a86bd67202d20b6adc463008c8e982b070a","date":1327966443,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/update/DirectUpdateHandlerTest#testPrepareCommit().mjava","pathOld":"solr/core/src/test/org/apache/solr/update/DirectUpdateHandlerTest#testPrepareCommit().mjava","sourceNew":"  @Test\n  public void testPrepareCommit() throws Exception {\n    assertU(adoc(\"id\", \"999\"));\n    assertU(optimize());     // make sure there's just one segment\n    assertU(commit());       // commit a second time to make sure index files aren't still referenced by the old searcher\n\n    SolrQueryRequest sr = req();\n    DirectoryReader r = sr.getSearcher().getIndexReader();\n    Directory d = r.directory();\n\n    log.info(\"FILES before addDoc=\"+ Arrays.asList(d.listAll()));\n    assertU(adoc(\"id\", \"1\"));\n\n    int nFiles = d.listAll().length;\n    log.info(\"FILES before prepareCommit=\"+ Arrays.asList(d.listAll()));\n\n    updateJ(\"\", params(\"prepareCommit\", \"true\"));\n\n    log.info(\"FILES after prepareCommit=\"+Arrays.asList(d.listAll()));\n    assertTrue( d.listAll().length > nFiles);  // make sure new index files were actually written\n    \n    assertJQ(req(\"q\", \"id:1\")\n        , \"/response/numFound==0\"\n    );\n\n    updateJ(\"\", params(\"rollback\",\"true\"));\n    assertU(commit());\n\n    assertJQ(req(\"q\", \"id:1\")\n        , \"/response/numFound==0\"\n    );\n\n    assertU(adoc(\"id\",\"1\"));\n    updateJ(\"\", params(\"prepareCommit\",\"true\"));\n\n    assertJQ(req(\"q\", \"id:1\")\n        , \"/response/numFound==0\"\n    );\n\n    assertU(commit());\n\n    assertJQ(req(\"q\", \"id:1\")\n        , \"/response/numFound==1\"\n    );\n\n    sr.close();\n  }\n\n","sourceOld":"  @Test\n  public void testPrepareCommit() throws Exception {\n    assertU(adoc(\"id\", \"999\"));\n    assertU(optimize());     // make sure there's just one segment\n    assertU(commit());       // commit a second time to make sure index files aren't still referenced by the old searcher\n\n    SolrQueryRequest sr = req();\n    IndexReader r = sr.getSearcher().getTopReaderContext().reader;\n    Directory d = r.directory();\n\n    log.info(\"FILES before addDoc=\"+ Arrays.asList(d.listAll()));\n    assertU(adoc(\"id\", \"1\"));\n\n    int nFiles = d.listAll().length;\n    log.info(\"FILES before prepareCommit=\"+ Arrays.asList(d.listAll()));\n\n    updateJ(\"\", params(\"prepareCommit\", \"true\"));\n\n    log.info(\"FILES after prepareCommit=\"+Arrays.asList(d.listAll()));\n    assertTrue( d.listAll().length > nFiles);  // make sure new index files were actually written\n    \n    assertJQ(req(\"q\", \"id:1\")\n        , \"/response/numFound==0\"\n    );\n\n    updateJ(\"\", params(\"rollback\",\"true\"));\n    assertU(commit());\n\n    assertJQ(req(\"q\", \"id:1\")\n        , \"/response/numFound==0\"\n    );\n\n    assertU(adoc(\"id\",\"1\"));\n    updateJ(\"\", params(\"prepareCommit\",\"true\"));\n\n    assertJQ(req(\"q\", \"id:1\")\n        , \"/response/numFound==0\"\n    );\n\n    assertU(commit());\n\n    assertJQ(req(\"q\", \"id:1\")\n        , \"/response/numFound==1\"\n    );\n\n    sr.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"fc1a22371a19bbb2a92556c4051ca0aaa823a8c2","date":1529965060,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/update/DirectUpdateHandlerTest#testPrepareCommit().mjava","pathOld":"solr/core/src/test/org/apache/solr/update/DirectUpdateHandlerTest#testPrepareCommit().mjava","sourceNew":"  @Test\n  public void testPrepareCommit() throws Exception {\n    assertU(adoc(\"id\", \"999\"));\n    assertU(optimize(\"maxSegments\", \"1\"));     // make sure there's just one segment\n    assertU(commit());       // commit a second time to make sure index files aren't still referenced by the old searcher\n\n    SolrQueryRequest sr = req();\n    DirectoryReader r = sr.getSearcher().getIndexReader();\n    Directory d = r.directory();\n\n    log.info(\"FILES before addDoc=\"+ Arrays.asList(d.listAll()));\n    assertU(adoc(\"id\", \"1\"));\n\n    int nFiles = d.listAll().length;\n    log.info(\"FILES before prepareCommit=\"+ Arrays.asList(d.listAll()));\n\n    updateJ(\"\", params(\"prepareCommit\", \"true\"));\n\n    log.info(\"FILES after prepareCommit=\"+Arrays.asList(d.listAll()));\n    assertTrue( d.listAll().length > nFiles);  // make sure new index files were actually written\n    \n    assertJQ(req(\"q\", \"id:1\")\n        , \"/response/numFound==0\"\n    );\n\n    updateJ(\"\", params(\"rollback\",\"true\"));\n    assertU(commit());\n\n    assertJQ(req(\"q\", \"id:1\")\n        , \"/response/numFound==0\"\n    );\n\n    assertU(adoc(\"id\",\"1\"));\n    updateJ(\"\", params(\"prepareCommit\",\"true\"));\n\n    assertJQ(req(\"q\", \"id:1\")\n        , \"/response/numFound==0\"\n    );\n\n    assertU(commit());\n\n    assertJQ(req(\"q\", \"id:1\")\n        , \"/response/numFound==1\"\n    );\n\n    sr.close();\n  }\n\n","sourceOld":"  @Test\n  public void testPrepareCommit() throws Exception {\n    assertU(adoc(\"id\", \"999\"));\n    assertU(optimize());     // make sure there's just one segment\n    assertU(commit());       // commit a second time to make sure index files aren't still referenced by the old searcher\n\n    SolrQueryRequest sr = req();\n    DirectoryReader r = sr.getSearcher().getIndexReader();\n    Directory d = r.directory();\n\n    log.info(\"FILES before addDoc=\"+ Arrays.asList(d.listAll()));\n    assertU(adoc(\"id\", \"1\"));\n\n    int nFiles = d.listAll().length;\n    log.info(\"FILES before prepareCommit=\"+ Arrays.asList(d.listAll()));\n\n    updateJ(\"\", params(\"prepareCommit\", \"true\"));\n\n    log.info(\"FILES after prepareCommit=\"+Arrays.asList(d.listAll()));\n    assertTrue( d.listAll().length > nFiles);  // make sure new index files were actually written\n    \n    assertJQ(req(\"q\", \"id:1\")\n        , \"/response/numFound==0\"\n    );\n\n    updateJ(\"\", params(\"rollback\",\"true\"));\n    assertU(commit());\n\n    assertJQ(req(\"q\", \"id:1\")\n        , \"/response/numFound==0\"\n    );\n\n    assertU(adoc(\"id\",\"1\"));\n    updateJ(\"\", params(\"prepareCommit\",\"true\"));\n\n    assertJQ(req(\"q\", \"id:1\")\n        , \"/response/numFound==0\"\n    );\n\n    assertU(commit());\n\n    assertJQ(req(\"q\", \"id:1\")\n        , \"/response/numFound==1\"\n    );\n\n    sr.close();\n  }\n\n","bugFix":["4c43c3c404fe84002c7fde67a88b80222ac3b86c"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7eeaaea0106c7d6a2de50acfc8d357121ef8bd26","date":1531589977,"type":3,"author":"Michael Braun","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/update/DirectUpdateHandlerTest#testPrepareCommit().mjava","pathOld":"solr/core/src/test/org/apache/solr/update/DirectUpdateHandlerTest#testPrepareCommit().mjava","sourceNew":"  @Test\n  public void testPrepareCommit() throws Exception {\n    assertU(adoc(\"id\", \"999\"));\n    assertU(optimize(\"maxSegments\", \"1\"));     // make sure there's just one segment\n    assertU(commit());       // commit a second time to make sure index files aren't still referenced by the old searcher\n\n    SolrQueryRequest sr = req();\n    DirectoryReader r = sr.getSearcher().getIndexReader();\n    Directory d = r.directory();\n\n    log.info(\"FILES before addDoc=\"+ Arrays.asList(d.listAll()));\n    assertU(adoc(\"id\", \"1\"));\n\n    int nFiles = d.listAll().length;\n    log.info(\"FILES before prepareCommit=\"+ Arrays.asList(d.listAll()));\n\n    updateJ(\"\", params(\"prepareCommit\", \"true\"));\n\n    log.info(\"FILES after prepareCommit=\"+Arrays.asList(d.listAll()));\n    assertTrue( d.listAll().length > nFiles);  // make sure new index files were actually written\n    \n    assertJQ(req(\"q\", \"id:1\")\n        , \"/response/numFound==0\"\n    );\n\n    updateJ(\"\", params(\"rollback\",\"true\"));\n    assertU(commit());\n\n    assertJQ(req(\"q\", \"id:1\")\n        , \"/response/numFound==0\"\n    );\n\n    assertU(adoc(\"id\",\"1\"));\n    updateJ(\"\", params(\"prepareCommit\",\"true\"));\n\n    assertJQ(req(\"q\", \"id:1\")\n        , \"/response/numFound==0\"\n    );\n\n    assertU(commit());\n\n    assertJQ(req(\"q\", \"id:1\")\n        , \"/response/numFound==1\"\n    );\n\n    sr.close();\n  }\n\n","sourceOld":"  @Test\n  public void testPrepareCommit() throws Exception {\n    assertU(adoc(\"id\", \"999\"));\n    assertU(optimize());     // make sure there's just one segment\n    assertU(commit());       // commit a second time to make sure index files aren't still referenced by the old searcher\n\n    SolrQueryRequest sr = req();\n    DirectoryReader r = sr.getSearcher().getIndexReader();\n    Directory d = r.directory();\n\n    log.info(\"FILES before addDoc=\"+ Arrays.asList(d.listAll()));\n    assertU(adoc(\"id\", \"1\"));\n\n    int nFiles = d.listAll().length;\n    log.info(\"FILES before prepareCommit=\"+ Arrays.asList(d.listAll()));\n\n    updateJ(\"\", params(\"prepareCommit\", \"true\"));\n\n    log.info(\"FILES after prepareCommit=\"+Arrays.asList(d.listAll()));\n    assertTrue( d.listAll().length > nFiles);  // make sure new index files were actually written\n    \n    assertJQ(req(\"q\", \"id:1\")\n        , \"/response/numFound==0\"\n    );\n\n    updateJ(\"\", params(\"rollback\",\"true\"));\n    assertU(commit());\n\n    assertJQ(req(\"q\", \"id:1\")\n        , \"/response/numFound==0\"\n    );\n\n    assertU(adoc(\"id\",\"1\"));\n    updateJ(\"\", params(\"prepareCommit\",\"true\"));\n\n    assertJQ(req(\"q\", \"id:1\")\n        , \"/response/numFound==0\"\n    );\n\n    assertU(commit());\n\n    assertJQ(req(\"q\", \"id:1\")\n        , \"/response/numFound==1\"\n    );\n\n    sr.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","date":1531905561,"type":3,"author":"Alessandro Benedetti","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/update/DirectUpdateHandlerTest#testPrepareCommit().mjava","pathOld":"solr/core/src/test/org/apache/solr/update/DirectUpdateHandlerTest#testPrepareCommit().mjava","sourceNew":"  @Test\n  public void testPrepareCommit() throws Exception {\n    assertU(adoc(\"id\", \"999\"));\n    assertU(optimize(\"maxSegments\", \"1\"));     // make sure there's just one segment\n    assertU(commit());       // commit a second time to make sure index files aren't still referenced by the old searcher\n\n    SolrQueryRequest sr = req();\n    DirectoryReader r = sr.getSearcher().getIndexReader();\n    Directory d = r.directory();\n\n    log.info(\"FILES before addDoc=\"+ Arrays.asList(d.listAll()));\n    assertU(adoc(\"id\", \"1\"));\n\n    int nFiles = d.listAll().length;\n    log.info(\"FILES before prepareCommit=\"+ Arrays.asList(d.listAll()));\n\n    updateJ(\"\", params(\"prepareCommit\", \"true\"));\n\n    log.info(\"FILES after prepareCommit=\"+Arrays.asList(d.listAll()));\n    assertTrue( d.listAll().length > nFiles);  // make sure new index files were actually written\n    \n    assertJQ(req(\"q\", \"id:1\")\n        , \"/response/numFound==0\"\n    );\n\n    updateJ(\"\", params(\"rollback\",\"true\"));\n    assertU(commit());\n\n    assertJQ(req(\"q\", \"id:1\")\n        , \"/response/numFound==0\"\n    );\n\n    assertU(adoc(\"id\",\"1\"));\n    updateJ(\"\", params(\"prepareCommit\",\"true\"));\n\n    assertJQ(req(\"q\", \"id:1\")\n        , \"/response/numFound==0\"\n    );\n\n    assertU(commit());\n\n    assertJQ(req(\"q\", \"id:1\")\n        , \"/response/numFound==1\"\n    );\n\n    sr.close();\n  }\n\n","sourceOld":"  @Test\n  public void testPrepareCommit() throws Exception {\n    assertU(adoc(\"id\", \"999\"));\n    assertU(optimize());     // make sure there's just one segment\n    assertU(commit());       // commit a second time to make sure index files aren't still referenced by the old searcher\n\n    SolrQueryRequest sr = req();\n    DirectoryReader r = sr.getSearcher().getIndexReader();\n    Directory d = r.directory();\n\n    log.info(\"FILES before addDoc=\"+ Arrays.asList(d.listAll()));\n    assertU(adoc(\"id\", \"1\"));\n\n    int nFiles = d.listAll().length;\n    log.info(\"FILES before prepareCommit=\"+ Arrays.asList(d.listAll()));\n\n    updateJ(\"\", params(\"prepareCommit\", \"true\"));\n\n    log.info(\"FILES after prepareCommit=\"+Arrays.asList(d.listAll()));\n    assertTrue( d.listAll().length > nFiles);  // make sure new index files were actually written\n    \n    assertJQ(req(\"q\", \"id:1\")\n        , \"/response/numFound==0\"\n    );\n\n    updateJ(\"\", params(\"rollback\",\"true\"));\n    assertU(commit());\n\n    assertJQ(req(\"q\", \"id:1\")\n        , \"/response/numFound==0\"\n    );\n\n    assertU(adoc(\"id\",\"1\"));\n    updateJ(\"\", params(\"prepareCommit\",\"true\"));\n\n    assertJQ(req(\"q\", \"id:1\")\n        , \"/response/numFound==0\"\n    );\n\n    assertU(commit());\n\n    assertJQ(req(\"q\", \"id:1\")\n        , \"/response/numFound==1\"\n    );\n\n    sr.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a966532d92cf9ba2856f15a8140151bb6b518e4b","date":1588290631,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/update/DirectUpdateHandlerTest#testPrepareCommit().mjava","pathOld":"solr/core/src/test/org/apache/solr/update/DirectUpdateHandlerTest#testPrepareCommit().mjava","sourceNew":"  @Test\n  public void testPrepareCommit() throws Exception {\n    assertU(adoc(\"id\", \"999\"));\n    assertU(optimize(\"maxSegments\", \"1\"));     // make sure there's just one segment\n    assertU(commit());       // commit a second time to make sure index files aren't still referenced by the old searcher\n\n    SolrQueryRequest sr = req();\n    DirectoryReader r = sr.getSearcher().getIndexReader();\n    Directory d = r.directory();\n\n    if (log.isInfoEnabled()) {\n      log.info(\"FILES before addDoc={}\", Arrays.asList(d.listAll()));\n    }\n    assertU(adoc(\"id\", \"1\"));\n\n    int nFiles = d.listAll().length;\n    if (log.isInfoEnabled()) {\n      log.info(\"FILES before prepareCommit={}\", Arrays.asList(d.listAll()));\n    }\n\n    updateJ(\"\", params(\"prepareCommit\", \"true\"));\n\n    if (log.isInfoEnabled()) {\n      log.info(\"FILES after prepareCommit={}\", Arrays.asList(d.listAll()));\n    }\n    assertTrue( d.listAll().length > nFiles);  // make sure new index files were actually written\n    \n    assertJQ(req(\"q\", \"id:1\")\n        , \"/response/numFound==0\"\n    );\n\n    updateJ(\"\", params(\"rollback\",\"true\"));\n    assertU(commit());\n\n    assertJQ(req(\"q\", \"id:1\")\n        , \"/response/numFound==0\"\n    );\n\n    assertU(adoc(\"id\",\"1\"));\n    updateJ(\"\", params(\"prepareCommit\",\"true\"));\n\n    assertJQ(req(\"q\", \"id:1\")\n        , \"/response/numFound==0\"\n    );\n\n    assertU(commit());\n\n    assertJQ(req(\"q\", \"id:1\")\n        , \"/response/numFound==1\"\n    );\n\n    sr.close();\n  }\n\n","sourceOld":"  @Test\n  public void testPrepareCommit() throws Exception {\n    assertU(adoc(\"id\", \"999\"));\n    assertU(optimize(\"maxSegments\", \"1\"));     // make sure there's just one segment\n    assertU(commit());       // commit a second time to make sure index files aren't still referenced by the old searcher\n\n    SolrQueryRequest sr = req();\n    DirectoryReader r = sr.getSearcher().getIndexReader();\n    Directory d = r.directory();\n\n    log.info(\"FILES before addDoc=\"+ Arrays.asList(d.listAll()));\n    assertU(adoc(\"id\", \"1\"));\n\n    int nFiles = d.listAll().length;\n    log.info(\"FILES before prepareCommit=\"+ Arrays.asList(d.listAll()));\n\n    updateJ(\"\", params(\"prepareCommit\", \"true\"));\n\n    log.info(\"FILES after prepareCommit=\"+Arrays.asList(d.listAll()));\n    assertTrue( d.listAll().length > nFiles);  // make sure new index files were actually written\n    \n    assertJQ(req(\"q\", \"id:1\")\n        , \"/response/numFound==0\"\n    );\n\n    updateJ(\"\", params(\"rollback\",\"true\"));\n    assertU(commit());\n\n    assertJQ(req(\"q\", \"id:1\")\n        , \"/response/numFound==0\"\n    );\n\n    assertU(adoc(\"id\",\"1\"));\n    updateJ(\"\", params(\"prepareCommit\",\"true\"));\n\n    assertJQ(req(\"q\", \"id:1\")\n        , \"/response/numFound==0\"\n    );\n\n    assertU(commit());\n\n    assertJQ(req(\"q\", \"id:1\")\n        , \"/response/numFound==1\"\n    );\n\n    sr.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d6876f07b799c222744cd7bb821448b930e56f82","date":1598801576,"type":3,"author":"David Smiley","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/update/DirectUpdateHandlerTest#testPrepareCommit().mjava","pathOld":"solr/core/src/test/org/apache/solr/update/DirectUpdateHandlerTest#testPrepareCommit().mjava","sourceNew":"  @Test\n  public void testPrepareCommit() throws Exception {\n    assertU(adoc(\"id\", \"999\"));\n    assertU(optimize(\"maxSegments\", \"1\"));     // make sure there's just one segment\n    assertU(commit());       // commit a second time to make sure index files aren't still referenced by the old searcher\n\n    SolrQueryRequest sr = req();\n    DirectoryReader r = sr.getSearcher().getIndexReader();\n    Directory d = r.directory();\n\n    if (log.isInfoEnabled()) {\n      log.info(\"FILES before addDoc={}\", Arrays.asList(d.listAll()));\n    }\n    assertU(adoc(\"id\", \"1\"));\n\n    assertFalse(Arrays.stream(d.listAll()).anyMatch(s -> s.startsWith(IndexFileNames.PENDING_SEGMENTS)));\n    String beforeSegmentsFile =\n        Arrays.stream(d.listAll()).filter(s -> s.startsWith(IndexFileNames.SEGMENTS)).findAny().get();\n\n    if (log.isInfoEnabled()) {\n      log.info(\"FILES before prepareCommit={}\", Arrays.asList(d.listAll()));\n    }\n\n    updateJ(\"\", params(\"prepareCommit\", \"true\"));\n\n    if (log.isInfoEnabled()) {\n      log.info(\"FILES after prepareCommit={}\", Arrays.asList(d.listAll()));\n    }\n    assertTrue(Arrays.stream(d.listAll()).anyMatch(s -> s.startsWith(IndexFileNames.PENDING_SEGMENTS)));\n    assertEquals(beforeSegmentsFile,\n        Arrays.stream(d.listAll()).filter(s -> s.startsWith(IndexFileNames.SEGMENTS)).findAny().get());\n\n    assertJQ(req(\"q\", \"id:1\")\n        , \"/response/numFound==0\"\n    );\n\n    updateJ(\"\", params(\"rollback\",\"true\"));\n    assertU(commit());\n\n    assertJQ(req(\"q\", \"id:1\")\n        , \"/response/numFound==0\"\n    );\n\n    assertU(adoc(\"id\",\"1\"));\n    updateJ(\"\", params(\"prepareCommit\",\"true\"));\n\n    assertJQ(req(\"q\", \"id:1\")\n        , \"/response/numFound==0\"\n    );\n\n    assertU(commit());\n\n    assertJQ(req(\"q\", \"id:1\")\n        , \"/response/numFound==1\"\n    );\n\n    sr.close();\n  }\n\n","sourceOld":"  @Test\n  public void testPrepareCommit() throws Exception {\n    assertU(adoc(\"id\", \"999\"));\n    assertU(optimize(\"maxSegments\", \"1\"));     // make sure there's just one segment\n    assertU(commit());       // commit a second time to make sure index files aren't still referenced by the old searcher\n\n    SolrQueryRequest sr = req();\n    DirectoryReader r = sr.getSearcher().getIndexReader();\n    Directory d = r.directory();\n\n    if (log.isInfoEnabled()) {\n      log.info(\"FILES before addDoc={}\", Arrays.asList(d.listAll()));\n    }\n    assertU(adoc(\"id\", \"1\"));\n\n    int nFiles = d.listAll().length;\n    if (log.isInfoEnabled()) {\n      log.info(\"FILES before prepareCommit={}\", Arrays.asList(d.listAll()));\n    }\n\n    updateJ(\"\", params(\"prepareCommit\", \"true\"));\n\n    if (log.isInfoEnabled()) {\n      log.info(\"FILES after prepareCommit={}\", Arrays.asList(d.listAll()));\n    }\n    assertTrue( d.listAll().length > nFiles);  // make sure new index files were actually written\n    \n    assertJQ(req(\"q\", \"id:1\")\n        , \"/response/numFound==0\"\n    );\n\n    updateJ(\"\", params(\"rollback\",\"true\"));\n    assertU(commit());\n\n    assertJQ(req(\"q\", \"id:1\")\n        , \"/response/numFound==0\"\n    );\n\n    assertU(adoc(\"id\",\"1\"));\n    updateJ(\"\", params(\"prepareCommit\",\"true\"));\n\n    assertJQ(req(\"q\", \"id:1\")\n        , \"/response/numFound==0\"\n    );\n\n    assertU(commit());\n\n    assertJQ(req(\"q\", \"id:1\")\n        , \"/response/numFound==1\"\n    );\n\n    sr.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"0efc9f2cae117418f13ba9035f5e1d516ea7a2b5":["5cab9a86bd67202d20b6adc463008c8e982b070a","fc1a22371a19bbb2a92556c4051ca0aaa823a8c2"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"96d207426bd26fa5c1014e26d21d87603aea68b7":["4c43c3c404fe84002c7fde67a88b80222ac3b86c"],"8524650e878177081c15c0c5bccfae2c7dca772b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"4c43c3c404fe84002c7fde67a88b80222ac3b86c":["8524650e878177081c15c0c5bccfae2c7dca772b"],"d6876f07b799c222744cd7bb821448b930e56f82":["a966532d92cf9ba2856f15a8140151bb6b518e4b"],"a966532d92cf9ba2856f15a8140151bb6b518e4b":["fc1a22371a19bbb2a92556c4051ca0aaa823a8c2"],"fc1a22371a19bbb2a92556c4051ca0aaa823a8c2":["5cab9a86bd67202d20b6adc463008c8e982b070a"],"5cab9a86bd67202d20b6adc463008c8e982b070a":["4c43c3c404fe84002c7fde67a88b80222ac3b86c","96d207426bd26fa5c1014e26d21d87603aea68b7"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["d6876f07b799c222744cd7bb821448b930e56f82"],"7eeaaea0106c7d6a2de50acfc8d357121ef8bd26":["5cab9a86bd67202d20b6adc463008c8e982b070a","fc1a22371a19bbb2a92556c4051ca0aaa823a8c2"]},"commit2Childs":{"0efc9f2cae117418f13ba9035f5e1d516ea7a2b5":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["8524650e878177081c15c0c5bccfae2c7dca772b"],"96d207426bd26fa5c1014e26d21d87603aea68b7":["5cab9a86bd67202d20b6adc463008c8e982b070a"],"8524650e878177081c15c0c5bccfae2c7dca772b":["4c43c3c404fe84002c7fde67a88b80222ac3b86c"],"4c43c3c404fe84002c7fde67a88b80222ac3b86c":["96d207426bd26fa5c1014e26d21d87603aea68b7","5cab9a86bd67202d20b6adc463008c8e982b070a"],"d6876f07b799c222744cd7bb821448b930e56f82":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a966532d92cf9ba2856f15a8140151bb6b518e4b":["d6876f07b799c222744cd7bb821448b930e56f82"],"5cab9a86bd67202d20b6adc463008c8e982b070a":["0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","fc1a22371a19bbb2a92556c4051ca0aaa823a8c2","7eeaaea0106c7d6a2de50acfc8d357121ef8bd26"],"fc1a22371a19bbb2a92556c4051ca0aaa823a8c2":["0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","a966532d92cf9ba2856f15a8140151bb6b518e4b","7eeaaea0106c7d6a2de50acfc8d357121ef8bd26"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"7eeaaea0106c7d6a2de50acfc8d357121ef8bd26":[]},"heads":["0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","cd5edd1f2b162a5cfa08efd17851a07373a96817","7eeaaea0106c7d6a2de50acfc8d357121ef8bd26"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}