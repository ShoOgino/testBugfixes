{"path":"solr/core/src/java/org/apache/solr/schema/FieldType#createFields(SchemaField,Object).mjava","commits":[{"id":"acd9883560fd89e6448b2b447302fe543040cd4f","date":1488478696,"type":1,"author":"Adrien Grand","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/schema/FieldType#createFields(SchemaField,Object).mjava","pathOld":"solr/core/src/java/org/apache/solr/schema/FieldType#createFields(SchemaField,Object,float).mjava","sourceNew":"  /**\n   * Given a {@link org.apache.solr.schema.SchemaField}, create one or more {@link org.apache.lucene.index.IndexableField} instances\n   * @param field the {@link org.apache.solr.schema.SchemaField}\n   * @param value The value to add to the field\n   * @return An array of {@link org.apache.lucene.index.IndexableField}\n   *\n   * @see #createField(SchemaField, Object)\n   * @see #isPolyField()\n   */\n  public List<IndexableField> createFields(SchemaField field, Object value) {\n    IndexableField f = createField( field, value);\n    if (field.hasDocValues() && f.fieldType().docValuesType() == null) {\n      // field types that support doc values should either override createField\n      // to return a field with doc values or extend createFields if this can't\n      // be done in a single field instance (see StrField for example)\n      throw new UnsupportedOperationException(\"This field type does not support doc values: \" + this);\n    }\n    return f==null ? Collections.<IndexableField>emptyList() : Collections.singletonList(f);\n  }\n\n","sourceOld":"  /**\n   * Given a {@link org.apache.solr.schema.SchemaField}, create one or more {@link org.apache.lucene.index.IndexableField} instances\n   * @param field the {@link org.apache.solr.schema.SchemaField}\n   * @param value The value to add to the field\n   * @param boost The boost to apply\n   * @return An array of {@link org.apache.lucene.index.IndexableField}\n   *\n   * @see #createField(SchemaField, Object, float)\n   * @see #isPolyField()\n   */\n  public List<IndexableField> createFields(SchemaField field, Object value, float boost) {\n    IndexableField f = createField( field, value, boost);\n    if (field.hasDocValues() && f.fieldType().docValuesType() == null) {\n      // field types that support doc values should either override createField\n      // to return a field with doc values or extend createFields if this can't\n      // be done in a single field instance (see StrField for example)\n      throw new UnsupportedOperationException(\"This field type does not support doc values: \" + this);\n    }\n    return f==null ? Collections.<IndexableField>emptyList() : Collections.singletonList(f);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"acd9883560fd89e6448b2b447302fe543040cd4f":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["acd9883560fd89e6448b2b447302fe543040cd4f"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["acd9883560fd89e6448b2b447302fe543040cd4f"],"acd9883560fd89e6448b2b447302fe543040cd4f":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}