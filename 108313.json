{"path":"solr/core/src/java/org/apache/solr/search/grouping/distributed/command/SearchGroupsFieldCommand#result().mjava","commits":[{"id":"ccc08aa684aee4964baee0644a6ba047bfd70829","date":1316263707,"type":0,"author":"Martijn van Groningen","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/grouping/distributed/command/SearchGroupsFieldCommand#result().mjava","pathOld":"/dev/null","sourceNew":"  public Collection<SearchGroup<BytesRef>> result() {\n    return collector.getTopGroups(0, true);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["af20870f6eab3807c968eec0b24e0c4358d0c1e5"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"612521de57bdf68711c68b6d8565e4a80ca0d7f6","date":1333716414,"type":3,"author":"Martijn van Groningen","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/grouping/distributed/command/SearchGroupsFieldCommand#result().mjava","pathOld":"solr/core/src/java/org/apache/solr/search/grouping/distributed/command/SearchGroupsFieldCommand#result().mjava","sourceNew":"  public Collection<SearchGroup<BytesRef>> result() {\n    if (topNGroups > 0) {\n      return firstPassGroupingCollector.getTopGroups(0, true);\n    } else {\n      return Collections.emptyList();\n    }\n  }\n\n","sourceOld":"  public Collection<SearchGroup<BytesRef>> result() {\n    return collector.getTopGroups(0, true);\n  }\n\n","bugFix":null,"bugIntro":["af20870f6eab3807c968eec0b24e0c4358d0c1e5"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"af20870f6eab3807c968eec0b24e0c4358d0c1e5","date":1337002937,"type":3,"author":"Martijn van Groningen","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/grouping/distributed/command/SearchGroupsFieldCommand#result().mjava","pathOld":"solr/core/src/java/org/apache/solr/search/grouping/distributed/command/SearchGroupsFieldCommand#result().mjava","sourceNew":"  public Pair<Integer, Collection<SearchGroup<BytesRef>>> result() {\n    final Collection<SearchGroup<BytesRef>> topGroups;\n    if (topNGroups > 0) {\n      topGroups = firstPassGroupingCollector.getTopGroups(0, true);\n    } else {\n      topGroups = Collections.emptyList();\n    }\n    final Integer groupCount;\n    if (includeGroupCount) {\n      groupCount = allGroupsCollector.getGroupCount();\n    } else {\n      groupCount = null;\n    }\n    return new Pair<Integer, Collection<SearchGroup<BytesRef>>>(groupCount, topGroups);\n  }\n\n","sourceOld":"  public Collection<SearchGroup<BytesRef>> result() {\n    if (topNGroups > 0) {\n      return firstPassGroupingCollector.getTopGroups(0, true);\n    } else {\n      return Collections.emptyList();\n    }\n  }\n\n","bugFix":["ccc08aa684aee4964baee0644a6ba047bfd70829","612521de57bdf68711c68b6d8565e4a80ca0d7f6"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7530de27b87b961b51f01bd1299b7004d46e8823","date":1355236261,"type":3,"author":"Shai Erera","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/grouping/distributed/command/SearchGroupsFieldCommand#result().mjava","pathOld":"solr/core/src/java/org/apache/solr/search/grouping/distributed/command/SearchGroupsFieldCommand#result().mjava","sourceNew":"  @Override\n  public Pair<Integer, Collection<SearchGroup<BytesRef>>> result() {\n    final Collection<SearchGroup<BytesRef>> topGroups;\n    if (topNGroups > 0) {\n      topGroups = firstPassGroupingCollector.getTopGroups(0, true);\n    } else {\n      topGroups = Collections.emptyList();\n    }\n    final Integer groupCount;\n    if (includeGroupCount) {\n      groupCount = allGroupsCollector.getGroupCount();\n    } else {\n      groupCount = null;\n    }\n    return new Pair<Integer, Collection<SearchGroup<BytesRef>>>(groupCount, topGroups);\n  }\n\n","sourceOld":"  public Pair<Integer, Collection<SearchGroup<BytesRef>>> result() {\n    final Collection<SearchGroup<BytesRef>> topGroups;\n    if (topNGroups > 0) {\n      topGroups = firstPassGroupingCollector.getTopGroups(0, true);\n    } else {\n      topGroups = Collections.emptyList();\n    }\n    final Integer groupCount;\n    if (includeGroupCount) {\n      groupCount = allGroupsCollector.getGroupCount();\n    } else {\n      groupCount = null;\n    }\n    return new Pair<Integer, Collection<SearchGroup<BytesRef>>>(groupCount, topGroups);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d3fcb70cf561547c7bb1506e0cf32ca7b1287064","date":1357616416,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/search/grouping/distributed/command/SearchGroupsFieldCommand#result().mjava","pathOld":"solr/core/src/java/org/apache/solr/search/grouping/distributed/command/SearchGroupsFieldCommand#result().mjava","sourceNew":"  @Override\n  public Pair<Integer, Collection<SearchGroup<BytesRef>>> result() {\n    final Collection<SearchGroup<BytesRef>> topGroups;\n    if (topNGroups > 0) {\n      topGroups = firstPassGroupingCollector.getTopGroups(0, true);\n    } else {\n      topGroups = Collections.emptyList();\n    }\n    final Integer groupCount;\n    if (includeGroupCount) {\n      groupCount = allGroupsCollector.getGroupCount();\n    } else {\n      groupCount = null;\n    }\n    return new Pair<Integer, Collection<SearchGroup<BytesRef>>>(groupCount, topGroups);\n  }\n\n","sourceOld":"  public Pair<Integer, Collection<SearchGroup<BytesRef>>> result() {\n    final Collection<SearchGroup<BytesRef>> topGroups;\n    if (topNGroups > 0) {\n      topGroups = firstPassGroupingCollector.getTopGroups(0, true);\n    } else {\n      topGroups = Collections.emptyList();\n    }\n    final Integer groupCount;\n    if (includeGroupCount) {\n      groupCount = allGroupsCollector.getGroupCount();\n    } else {\n      groupCount = null;\n    }\n    return new Pair<Integer, Collection<SearchGroup<BytesRef>>>(groupCount, topGroups);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"634f330c54fd3f9f491d52036dc3f40b4f4d8934","date":1394635157,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/grouping/distributed/command/SearchGroupsFieldCommand#result().mjava","pathOld":"solr/core/src/java/org/apache/solr/search/grouping/distributed/command/SearchGroupsFieldCommand#result().mjava","sourceNew":"  @Override\n  public Pair<Integer, Collection<SearchGroup<BytesRef>>> result() {\n    final Collection<SearchGroup<BytesRef>> topGroups;\n    if (topNGroups > 0) {\n      topGroups = firstPassGroupingCollector.getTopGroups(0, true);\n    } else {\n      topGroups = Collections.emptyList();\n    }\n    final Integer groupCount;\n    if (includeGroupCount) {\n      groupCount = allGroupsCollector.getGroupCount();\n    } else {\n      groupCount = null;\n    }\n    return new Pair<>(groupCount, topGroups);\n  }\n\n","sourceOld":"  @Override\n  public Pair<Integer, Collection<SearchGroup<BytesRef>>> result() {\n    final Collection<SearchGroup<BytesRef>> topGroups;\n    if (topNGroups > 0) {\n      topGroups = firstPassGroupingCollector.getTopGroups(0, true);\n    } else {\n      topGroups = Collections.emptyList();\n    }\n    final Integer groupCount;\n    if (includeGroupCount) {\n      groupCount = allGroupsCollector.getGroupCount();\n    } else {\n      groupCount = null;\n    }\n    return new Pair<Integer, Collection<SearchGroup<BytesRef>>>(groupCount, topGroups);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"aec1849055a2ada9ab66fe871645565085cd5462","date":1400041327,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/grouping/distributed/command/SearchGroupsFieldCommand#result().mjava","pathOld":"solr/core/src/java/org/apache/solr/search/grouping/distributed/command/SearchGroupsFieldCommand#result().mjava","sourceNew":"  @Override\n  public Pair<Integer, Collection<SearchGroup<BytesRef>>> result() {\n    final Collection<SearchGroup<BytesRef>> topGroups;\n    if (topNGroups > 0) {\n      if (field.getType().getNumericType() != null) {\n        topGroups = GroupConverter.fromMutable(field, firstPassGroupingCollector.getTopGroups(0, true));\n      } else {\n        topGroups = firstPassGroupingCollector.getTopGroups(0, true);\n      }\n    } else {\n      topGroups = Collections.emptyList();\n    }\n    final Integer groupCount;\n    if (includeGroupCount) {\n      groupCount = allGroupsCollector.getGroupCount();\n    } else {\n      groupCount = null;\n    }\n    return new Pair<>(groupCount, topGroups);\n  }\n\n","sourceOld":"  @Override\n  public Pair<Integer, Collection<SearchGroup<BytesRef>>> result() {\n    final Collection<SearchGroup<BytesRef>> topGroups;\n    if (topNGroups > 0) {\n      topGroups = firstPassGroupingCollector.getTopGroups(0, true);\n    } else {\n      topGroups = Collections.emptyList();\n    }\n    final Integer groupCount;\n    if (includeGroupCount) {\n      groupCount = allGroupsCollector.getGroupCount();\n    } else {\n      groupCount = null;\n    }\n    return new Pair<>(groupCount, topGroups);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"93dd449115a9247533e44bab47e8429e5dccbc6d","date":1400258396,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/search/grouping/distributed/command/SearchGroupsFieldCommand#result().mjava","pathOld":"solr/core/src/java/org/apache/solr/search/grouping/distributed/command/SearchGroupsFieldCommand#result().mjava","sourceNew":"  @Override\n  public Pair<Integer, Collection<SearchGroup<BytesRef>>> result() {\n    final Collection<SearchGroup<BytesRef>> topGroups;\n    if (topNGroups > 0) {\n      if (field.getType().getNumericType() != null) {\n        topGroups = GroupConverter.fromMutable(field, firstPassGroupingCollector.getTopGroups(0, true));\n      } else {\n        topGroups = firstPassGroupingCollector.getTopGroups(0, true);\n      }\n    } else {\n      topGroups = Collections.emptyList();\n    }\n    final Integer groupCount;\n    if (includeGroupCount) {\n      groupCount = allGroupsCollector.getGroupCount();\n    } else {\n      groupCount = null;\n    }\n    return new Pair<>(groupCount, topGroups);\n  }\n\n","sourceOld":"  @Override\n  public Pair<Integer, Collection<SearchGroup<BytesRef>>> result() {\n    final Collection<SearchGroup<BytesRef>> topGroups;\n    if (topNGroups > 0) {\n      topGroups = firstPassGroupingCollector.getTopGroups(0, true);\n    } else {\n      topGroups = Collections.emptyList();\n    }\n    final Integer groupCount;\n    if (includeGroupCount) {\n      groupCount = allGroupsCollector.getGroupCount();\n    } else {\n      groupCount = null;\n    }\n    return new Pair<>(groupCount, topGroups);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"56572ec06f1407c066d6b7399413178b33176cd8","date":1400495675,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/search/grouping/distributed/command/SearchGroupsFieldCommand#result().mjava","pathOld":"solr/core/src/java/org/apache/solr/search/grouping/distributed/command/SearchGroupsFieldCommand#result().mjava","sourceNew":"  @Override\n  public Pair<Integer, Collection<SearchGroup<BytesRef>>> result() {\n    final Collection<SearchGroup<BytesRef>> topGroups;\n    if (topNGroups > 0) {\n      if (field.getType().getNumericType() != null) {\n        topGroups = GroupConverter.fromMutable(field, firstPassGroupingCollector.getTopGroups(0, true));\n      } else {\n        topGroups = firstPassGroupingCollector.getTopGroups(0, true);\n      }\n    } else {\n      topGroups = Collections.emptyList();\n    }\n    final Integer groupCount;\n    if (includeGroupCount) {\n      groupCount = allGroupsCollector.getGroupCount();\n    } else {\n      groupCount = null;\n    }\n    return new Pair<>(groupCount, topGroups);\n  }\n\n","sourceOld":"  @Override\n  public Pair<Integer, Collection<SearchGroup<BytesRef>>> result() {\n    final Collection<SearchGroup<BytesRef>> topGroups;\n    if (topNGroups > 0) {\n      topGroups = firstPassGroupingCollector.getTopGroups(0, true);\n    } else {\n      topGroups = Collections.emptyList();\n    }\n    final Integer groupCount;\n    if (includeGroupCount) {\n      groupCount = allGroupsCollector.getGroupCount();\n    } else {\n      groupCount = null;\n    }\n    return new Pair<>(groupCount, topGroups);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"97b865fb5b6ef0e08dcafe96ab9cdbcd1cbd0943","date":1440670426,"type":3,"author":"Christine Poerschke","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/grouping/distributed/command/SearchGroupsFieldCommand#result().mjava","pathOld":"solr/core/src/java/org/apache/solr/search/grouping/distributed/command/SearchGroupsFieldCommand#result().mjava","sourceNew":"  @Override\n  public SearchGroupsFieldCommandResult result() {\n    final Collection<SearchGroup<BytesRef>> topGroups;\n    if (topNGroups > 0) {\n      if (field.getType().getNumericType() != null) {\n        topGroups = GroupConverter.fromMutable(field, firstPassGroupingCollector.getTopGroups(0, true));\n      } else {\n        topGroups = firstPassGroupingCollector.getTopGroups(0, true);\n      }\n    } else {\n      topGroups = Collections.emptyList();\n    }\n    final Integer groupCount;\n    if (includeGroupCount) {\n      groupCount = allGroupsCollector.getGroupCount();\n    } else {\n      groupCount = null;\n    }\n    return new SearchGroupsFieldCommandResult(groupCount, topGroups);\n  }\n\n","sourceOld":"  @Override\n  public Pair<Integer, Collection<SearchGroup<BytesRef>>> result() {\n    final Collection<SearchGroup<BytesRef>> topGroups;\n    if (topNGroups > 0) {\n      if (field.getType().getNumericType() != null) {\n        topGroups = GroupConverter.fromMutable(field, firstPassGroupingCollector.getTopGroups(0, true));\n      } else {\n        topGroups = firstPassGroupingCollector.getTopGroups(0, true);\n      }\n    } else {\n      topGroups = Collections.emptyList();\n    }\n    final Integer groupCount;\n    if (includeGroupCount) {\n      groupCount = allGroupsCollector.getGroupCount();\n    } else {\n      groupCount = null;\n    }\n    return new Pair<>(groupCount, topGroups);\n  }\n\n","bugFix":null,"bugIntro":["f7558b5077dd4abd457be151475f13b541f4f13e"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"c7cc3465c2ab2a2b77e204800798affe10454253","date":1448284161,"type":3,"author":"Christine Poerschke","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/grouping/distributed/command/SearchGroupsFieldCommand#result().mjava","pathOld":"solr/core/src/java/org/apache/solr/search/grouping/distributed/command/SearchGroupsFieldCommand#result().mjava","sourceNew":"  @Override\n  public SearchGroupsFieldCommandResult result() {\n    final Collection<SearchGroup<BytesRef>> topGroups;\n    if (firstPassGroupingCollector != null) {\n      if (field.getType().getNumericType() != null) {\n        topGroups = GroupConverter.fromMutable(field, firstPassGroupingCollector.getTopGroups(0, true));\n      } else {\n        topGroups = firstPassGroupingCollector.getTopGroups(0, true);\n      }\n    } else {\n      topGroups = Collections.emptyList();\n    }\n    final Integer groupCount;\n    if (allGroupsCollector != null) {\n      groupCount = allGroupsCollector.getGroupCount();\n    } else {\n      groupCount = null;\n    }\n    return new SearchGroupsFieldCommandResult(groupCount, topGroups);\n  }\n\n","sourceOld":"  @Override\n  public SearchGroupsFieldCommandResult result() {\n    final Collection<SearchGroup<BytesRef>> topGroups;\n    if (topNGroups > 0) {\n      if (field.getType().getNumericType() != null) {\n        topGroups = GroupConverter.fromMutable(field, firstPassGroupingCollector.getTopGroups(0, true));\n      } else {\n        topGroups = firstPassGroupingCollector.getTopGroups(0, true);\n      }\n    } else {\n      topGroups = Collections.emptyList();\n    }\n    final Integer groupCount;\n    if (includeGroupCount) {\n      groupCount = allGroupsCollector.getGroupCount();\n    } else {\n      groupCount = null;\n    }\n    return new SearchGroupsFieldCommandResult(groupCount, topGroups);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"f7558b5077dd4abd457be151475f13b541f4f13e","date":1475830751,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/grouping/distributed/command/SearchGroupsFieldCommand#result().mjava","pathOld":"solr/core/src/java/org/apache/solr/search/grouping/distributed/command/SearchGroupsFieldCommand#result().mjava","sourceNew":"  @Override\n  public SearchGroupsFieldCommandResult result() throws IOException {\n    final Collection<SearchGroup<BytesRef>> topGroups;\n    if (firstPassGroupingCollector != null) {\n      if (field.getType().getNumericType() != null) {\n        topGroups = GroupConverter.fromMutable(field, firstPassGroupingCollector.getTopGroups(0, true));\n      } else {\n        topGroups = firstPassGroupingCollector.getTopGroups(0, true);\n      }\n    } else {\n      topGroups = Collections.emptyList();\n    }\n    final Integer groupCount;\n    if (allGroupsCollector != null) {\n      groupCount = allGroupsCollector.getGroupCount();\n    } else {\n      groupCount = null;\n    }\n    return new SearchGroupsFieldCommandResult(groupCount, topGroups);\n  }\n\n","sourceOld":"  @Override\n  public SearchGroupsFieldCommandResult result() {\n    final Collection<SearchGroup<BytesRef>> topGroups;\n    if (firstPassGroupingCollector != null) {\n      if (field.getType().getNumericType() != null) {\n        topGroups = GroupConverter.fromMutable(field, firstPassGroupingCollector.getTopGroups(0, true));\n      } else {\n        topGroups = firstPassGroupingCollector.getTopGroups(0, true);\n      }\n    } else {\n      topGroups = Collections.emptyList();\n    }\n    final Integer groupCount;\n    if (allGroupsCollector != null) {\n      groupCount = allGroupsCollector.getGroupCount();\n    } else {\n      groupCount = null;\n    }\n    return new SearchGroupsFieldCommandResult(groupCount, topGroups);\n  }\n\n","bugFix":["97b865fb5b6ef0e08dcafe96ab9cdbcd1cbd0943"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/search/grouping/distributed/command/SearchGroupsFieldCommand#result().mjava","pathOld":"solr/core/src/java/org/apache/solr/search/grouping/distributed/command/SearchGroupsFieldCommand#result().mjava","sourceNew":"  @Override\n  public SearchGroupsFieldCommandResult result() throws IOException {\n    final Collection<SearchGroup<BytesRef>> topGroups;\n    if (firstPassGroupingCollector != null) {\n      if (field.getType().getNumericType() != null) {\n        topGroups = GroupConverter.fromMutable(field, firstPassGroupingCollector.getTopGroups(0, true));\n      } else {\n        topGroups = firstPassGroupingCollector.getTopGroups(0, true);\n      }\n    } else {\n      topGroups = Collections.emptyList();\n    }\n    final Integer groupCount;\n    if (allGroupsCollector != null) {\n      groupCount = allGroupsCollector.getGroupCount();\n    } else {\n      groupCount = null;\n    }\n    return new SearchGroupsFieldCommandResult(groupCount, topGroups);\n  }\n\n","sourceOld":"  @Override\n  public SearchGroupsFieldCommandResult result() {\n    final Collection<SearchGroup<BytesRef>> topGroups;\n    if (firstPassGroupingCollector != null) {\n      if (field.getType().getNumericType() != null) {\n        topGroups = GroupConverter.fromMutable(field, firstPassGroupingCollector.getTopGroups(0, true));\n      } else {\n        topGroups = firstPassGroupingCollector.getTopGroups(0, true);\n      }\n    } else {\n      topGroups = Collections.emptyList();\n    }\n    final Integer groupCount;\n    if (allGroupsCollector != null) {\n      groupCount = allGroupsCollector.getGroupCount();\n    } else {\n      groupCount = null;\n    }\n    return new SearchGroupsFieldCommandResult(groupCount, topGroups);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3d81baa64023bbb9b43f6d929ee168b105940d30","date":1486492702,"type":3,"author":"Tomas Fernandez Lobbe","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/grouping/distributed/command/SearchGroupsFieldCommand#result().mjava","pathOld":"solr/core/src/java/org/apache/solr/search/grouping/distributed/command/SearchGroupsFieldCommand#result().mjava","sourceNew":"  @Override\n  public SearchGroupsFieldCommandResult result() throws IOException {\n    final Collection<SearchGroup<BytesRef>> topGroups;\n    if (firstPassGroupingCollector != null) {\n      if (field.getType().getNumberType() != null) {\n        topGroups = GroupConverter.fromMutable(field, firstPassGroupingCollector.getTopGroups(0, true));\n      } else {\n        topGroups = firstPassGroupingCollector.getTopGroups(0, true);\n      }\n    } else {\n      topGroups = Collections.emptyList();\n    }\n    final Integer groupCount;\n    if (allGroupsCollector != null) {\n      groupCount = allGroupsCollector.getGroupCount();\n    } else {\n      groupCount = null;\n    }\n    return new SearchGroupsFieldCommandResult(groupCount, topGroups);\n  }\n\n","sourceOld":"  @Override\n  public SearchGroupsFieldCommandResult result() throws IOException {\n    final Collection<SearchGroup<BytesRef>> topGroups;\n    if (firstPassGroupingCollector != null) {\n      if (field.getType().getNumericType() != null) {\n        topGroups = GroupConverter.fromMutable(field, firstPassGroupingCollector.getTopGroups(0, true));\n      } else {\n        topGroups = firstPassGroupingCollector.getTopGroups(0, true);\n      }\n    } else {\n      topGroups = Collections.emptyList();\n    }\n    final Integer groupCount;\n    if (allGroupsCollector != null) {\n      groupCount = allGroupsCollector.getGroupCount();\n    } else {\n      groupCount = null;\n    }\n    return new SearchGroupsFieldCommandResult(groupCount, topGroups);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"04c370507e5521b2eb998530736f1c19b851ed5a","date":1531911305,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/grouping/distributed/command/SearchGroupsFieldCommand#result().mjava","pathOld":"solr/core/src/java/org/apache/solr/search/grouping/distributed/command/SearchGroupsFieldCommand#result().mjava","sourceNew":"  @Override\n  public SearchGroupsFieldCommandResult result() throws IOException {\n    final Collection<SearchGroup<BytesRef>> topGroups;\n    if (firstPassGroupingCollector != null) {\n      if (field.getType().getNumberType() != null) {\n        topGroups = GroupConverter.fromMutable(field, firstPassGroupingCollector.getTopGroups(0));\n      } else {\n        topGroups = firstPassGroupingCollector.getTopGroups(0);\n      }\n    } else {\n      topGroups = Collections.emptyList();\n    }\n    final Integer groupCount;\n    if (allGroupsCollector != null) {\n      groupCount = allGroupsCollector.getGroupCount();\n    } else {\n      groupCount = null;\n    }\n    return new SearchGroupsFieldCommandResult(groupCount, topGroups);\n  }\n\n","sourceOld":"  @Override\n  public SearchGroupsFieldCommandResult result() throws IOException {\n    final Collection<SearchGroup<BytesRef>> topGroups;\n    if (firstPassGroupingCollector != null) {\n      if (field.getType().getNumberType() != null) {\n        topGroups = GroupConverter.fromMutable(field, firstPassGroupingCollector.getTopGroups(0, true));\n      } else {\n        topGroups = firstPassGroupingCollector.getTopGroups(0, true);\n      }\n    } else {\n      topGroups = Collections.emptyList();\n    }\n    final Integer groupCount;\n    if (allGroupsCollector != null) {\n      groupCount = allGroupsCollector.getGroupCount();\n    } else {\n      groupCount = null;\n    }\n    return new SearchGroupsFieldCommandResult(groupCount, topGroups);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"50dfd19525c8d73e856dca6edb64b7aea074037f","date":1591579225,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/grouping/distributed/command/SearchGroupsFieldCommand#result().mjava","pathOld":"solr/core/src/java/org/apache/solr/search/grouping/distributed/command/SearchGroupsFieldCommand#result().mjava","sourceNew":"  @Override\n  @SuppressWarnings({\"unchecked\"})\n  public SearchGroupsFieldCommandResult result() throws IOException {\n    final Collection<SearchGroup<BytesRef>> topGroups;\n    if (firstPassGroupingCollector != null) {\n      if (field.getType().getNumberType() != null) {\n        topGroups = GroupConverter.fromMutable(field, firstPassGroupingCollector.getTopGroups(0));\n      } else {\n        topGroups = firstPassGroupingCollector.getTopGroups(0);\n      }\n    } else {\n      topGroups = Collections.emptyList();\n    }\n    final Integer groupCount;\n    if (allGroupsCollector != null) {\n      groupCount = allGroupsCollector.getGroupCount();\n    } else {\n      groupCount = null;\n    }\n    return new SearchGroupsFieldCommandResult(groupCount, topGroups);\n  }\n\n","sourceOld":"  @Override\n  public SearchGroupsFieldCommandResult result() throws IOException {\n    final Collection<SearchGroup<BytesRef>> topGroups;\n    if (firstPassGroupingCollector != null) {\n      if (field.getType().getNumberType() != null) {\n        topGroups = GroupConverter.fromMutable(field, firstPassGroupingCollector.getTopGroups(0));\n      } else {\n        topGroups = firstPassGroupingCollector.getTopGroups(0);\n      }\n    } else {\n      topGroups = Collections.emptyList();\n    }\n    final Integer groupCount;\n    if (allGroupsCollector != null) {\n      groupCount = allGroupsCollector.getGroupCount();\n    } else {\n      groupCount = null;\n    }\n    return new SearchGroupsFieldCommandResult(groupCount, topGroups);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"d3fcb70cf561547c7bb1506e0cf32ca7b1287064":["af20870f6eab3807c968eec0b24e0c4358d0c1e5","7530de27b87b961b51f01bd1299b7004d46e8823"],"634f330c54fd3f9f491d52036dc3f40b4f4d8934":["7530de27b87b961b51f01bd1299b7004d46e8823"],"f7558b5077dd4abd457be151475f13b541f4f13e":["c7cc3465c2ab2a2b77e204800798affe10454253"],"aec1849055a2ada9ab66fe871645565085cd5462":["634f330c54fd3f9f491d52036dc3f40b4f4d8934"],"c7cc3465c2ab2a2b77e204800798affe10454253":["97b865fb5b6ef0e08dcafe96ab9cdbcd1cbd0943"],"ccc08aa684aee4964baee0644a6ba047bfd70829":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"04c370507e5521b2eb998530736f1c19b851ed5a":["3d81baa64023bbb9b43f6d929ee168b105940d30"],"612521de57bdf68711c68b6d8565e4a80ca0d7f6":["ccc08aa684aee4964baee0644a6ba047bfd70829"],"56572ec06f1407c066d6b7399413178b33176cd8":["634f330c54fd3f9f491d52036dc3f40b4f4d8934","93dd449115a9247533e44bab47e8429e5dccbc6d"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["c7cc3465c2ab2a2b77e204800798affe10454253","f7558b5077dd4abd457be151475f13b541f4f13e"],"97b865fb5b6ef0e08dcafe96ab9cdbcd1cbd0943":["93dd449115a9247533e44bab47e8429e5dccbc6d"],"3d81baa64023bbb9b43f6d929ee168b105940d30":["f7558b5077dd4abd457be151475f13b541f4f13e"],"50dfd19525c8d73e856dca6edb64b7aea074037f":["04c370507e5521b2eb998530736f1c19b851ed5a"],"93dd449115a9247533e44bab47e8429e5dccbc6d":["634f330c54fd3f9f491d52036dc3f40b4f4d8934","aec1849055a2ada9ab66fe871645565085cd5462"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"af20870f6eab3807c968eec0b24e0c4358d0c1e5":["612521de57bdf68711c68b6d8565e4a80ca0d7f6"],"7530de27b87b961b51f01bd1299b7004d46e8823":["af20870f6eab3807c968eec0b24e0c4358d0c1e5"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["50dfd19525c8d73e856dca6edb64b7aea074037f"]},"commit2Childs":{"d3fcb70cf561547c7bb1506e0cf32ca7b1287064":[],"634f330c54fd3f9f491d52036dc3f40b4f4d8934":["aec1849055a2ada9ab66fe871645565085cd5462","56572ec06f1407c066d6b7399413178b33176cd8","93dd449115a9247533e44bab47e8429e5dccbc6d"],"f7558b5077dd4abd457be151475f13b541f4f13e":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","3d81baa64023bbb9b43f6d929ee168b105940d30"],"aec1849055a2ada9ab66fe871645565085cd5462":["93dd449115a9247533e44bab47e8429e5dccbc6d"],"c7cc3465c2ab2a2b77e204800798affe10454253":["f7558b5077dd4abd457be151475f13b541f4f13e","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"ccc08aa684aee4964baee0644a6ba047bfd70829":["612521de57bdf68711c68b6d8565e4a80ca0d7f6"],"04c370507e5521b2eb998530736f1c19b851ed5a":["50dfd19525c8d73e856dca6edb64b7aea074037f"],"612521de57bdf68711c68b6d8565e4a80ca0d7f6":["af20870f6eab3807c968eec0b24e0c4358d0c1e5"],"56572ec06f1407c066d6b7399413178b33176cd8":[],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"97b865fb5b6ef0e08dcafe96ab9cdbcd1cbd0943":["c7cc3465c2ab2a2b77e204800798affe10454253"],"3d81baa64023bbb9b43f6d929ee168b105940d30":["04c370507e5521b2eb998530736f1c19b851ed5a"],"93dd449115a9247533e44bab47e8429e5dccbc6d":["56572ec06f1407c066d6b7399413178b33176cd8","97b865fb5b6ef0e08dcafe96ab9cdbcd1cbd0943"],"50dfd19525c8d73e856dca6edb64b7aea074037f":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["ccc08aa684aee4964baee0644a6ba047bfd70829"],"af20870f6eab3807c968eec0b24e0c4358d0c1e5":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","7530de27b87b961b51f01bd1299b7004d46e8823"],"7530de27b87b961b51f01bd1299b7004d46e8823":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","634f330c54fd3f9f491d52036dc3f40b4f4d8934"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","56572ec06f1407c066d6b7399413178b33176cd8","4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}