{"path":"src/test/org/apache/lucene/index/MockInputStream#readInternal(byte[],int,int).mjava","commits":[{"id":"b80ed04a564bcfe3a7dd17fdd19be09c1f57d27f","date":1060684916,"type":0,"author":"Erik Hatcher","isMerge":false,"pathNew":"src/test/org/apache/lucene/index/MockInputStream#readInternal(byte[],int,int).mjava","pathOld":"/dev/null","sourceNew":"    protected void readInternal(byte[] dest, int destOffset, int len)\n            throws IOException {\n        int remainder = len;\n        int start = pointer;\n        while (remainder != 0) {\n//          int bufferNumber = start / buffer.length;\n          int bufferOffset = start % buffer.length;\n          int bytesInBuffer = buffer.length - bufferOffset;\n          int bytesToCopy = bytesInBuffer >= remainder ? remainder : bytesInBuffer;\n          System.arraycopy(buffer, bufferOffset, dest, destOffset, bytesToCopy);\n          destOffset += bytesToCopy;\n          start += bytesToCopy;\n          remainder -= bytesToCopy;\n        }\n        pointer += len;\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e971ba25509e21a130fef61f0687be0446ca27a0","date":1095369217,"type":5,"author":"Doug Cutting","isMerge":false,"pathNew":"src/test/org/apache/lucene/index/MockIndexInput#readInternal(byte[],int,int).mjava","pathOld":"src/test/org/apache/lucene/index/MockInputStream#readInternal(byte[],int,int).mjava","sourceNew":"    protected void readInternal(byte[] dest, int destOffset, int len)\n            throws IOException {\n        int remainder = len;\n        int start = pointer;\n        while (remainder != 0) {\n//          int bufferNumber = start / buffer.length;\n          int bufferOffset = start % buffer.length;\n          int bytesInBuffer = buffer.length - bufferOffset;\n          int bytesToCopy = bytesInBuffer >= remainder ? remainder : bytesInBuffer;\n          System.arraycopy(buffer, bufferOffset, dest, destOffset, bytesToCopy);\n          destOffset += bytesToCopy;\n          start += bytesToCopy;\n          remainder -= bytesToCopy;\n        }\n        pointer += len;\n    }\n\n","sourceOld":"    protected void readInternal(byte[] dest, int destOffset, int len)\n            throws IOException {\n        int remainder = len;\n        int start = pointer;\n        while (remainder != 0) {\n//          int bufferNumber = start / buffer.length;\n          int bufferOffset = start % buffer.length;\n          int bytesInBuffer = buffer.length - bufferOffset;\n          int bytesToCopy = bytesInBuffer >= remainder ? remainder : bytesInBuffer;\n          System.arraycopy(buffer, bufferOffset, dest, destOffset, bytesToCopy);\n          destOffset += bytesToCopy;\n          start += bytesToCopy;\n          remainder -= bytesToCopy;\n        }\n        pointer += len;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"e971ba25509e21a130fef61f0687be0446ca27a0":["b80ed04a564bcfe3a7dd17fdd19be09c1f57d27f"],"b80ed04a564bcfe3a7dd17fdd19be09c1f57d27f":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["e971ba25509e21a130fef61f0687be0446ca27a0"]},"commit2Childs":{"e971ba25509e21a130fef61f0687be0446ca27a0":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"b80ed04a564bcfe3a7dd17fdd19be09c1f57d27f":["e971ba25509e21a130fef61f0687be0446ca27a0"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b80ed04a564bcfe3a7dd17fdd19be09c1f57d27f"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}