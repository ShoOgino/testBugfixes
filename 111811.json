{"path":"lucene/test-framework/src/java/org/apache/lucene/mockfile/FilterFileChannel#implCloseChannel().mjava","commits":[{"id":"7cefb6c0aa217f293070c43e7a77682dd56e0a33","date":1416928878,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/mockfile/FilterFileChannel#implCloseChannel().mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  protected void implCloseChannel() throws IOException {\n    // our only way to call delegate.implCloseChannel()\n    for (Class<?> clazz = delegate.getClass(); clazz != null; clazz = clazz.getSuperclass()) {\n      final Method method;\n      try {\n        method = clazz.getDeclaredMethod(\"implCloseChannel\");\n      } catch (NoSuchMethodException e) {\n        continue;\n      }\n      try {\n        method.setAccessible(true);\n        method.invoke(delegate);\n        return;\n      } catch (ReflectiveOperationException e) {\n        throw new IOError(e);\n      }\n    }\n    throw new AssertionError();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["ee800f0f414112690073f337ef3d82c8ab298b2d"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"ee800f0f414112690073f337ef3d82c8ab298b2d","date":1441812782,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/mockfile/FilterFileChannel#implCloseChannel().mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/mockfile/FilterFileChannel#implCloseChannel().mjava","sourceNew":"  @Override\n  protected void implCloseChannel() throws IOException {\n    // our only way to call delegate.implCloseChannel()\n    AccessController.doPrivileged(new PrivilegedAction<Void>() {\n      @Override\n      public Void run() {\n        for (Class<?> clazz = delegate.getClass(); clazz != null; clazz = clazz.getSuperclass()) {\n          final Method method;\n          try {\n            method = clazz.getDeclaredMethod(\"implCloseChannel\");\n          } catch (NoSuchMethodException e) {\n            continue;\n          }\n          try {\n            method.setAccessible(true);\n            method.invoke(delegate);\n            return null;\n          } catch (ReflectiveOperationException e) {\n            throw new IOError(e);\n          }\n        }\n        throw new AssertionError();\n      }\n    });\n  }\n\n","sourceOld":"  @Override\n  protected void implCloseChannel() throws IOException {\n    // our only way to call delegate.implCloseChannel()\n    for (Class<?> clazz = delegate.getClass(); clazz != null; clazz = clazz.getSuperclass()) {\n      final Method method;\n      try {\n        method = clazz.getDeclaredMethod(\"implCloseChannel\");\n      } catch (NoSuchMethodException e) {\n        continue;\n      }\n      try {\n        method.setAccessible(true);\n        method.invoke(delegate);\n        return;\n      } catch (ReflectiveOperationException e) {\n        throw new IOError(e);\n      }\n    }\n    throw new AssertionError();\n  }\n\n","bugFix":["7cefb6c0aa217f293070c43e7a77682dd56e0a33"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0351c74c2d6aea23995022e25e0fa37e97785617","date":1441847382,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/mockfile/FilterFileChannel#implCloseChannel().mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/mockfile/FilterFileChannel#implCloseChannel().mjava","sourceNew":"  @Override\n  protected void implCloseChannel() throws IOException {\n    // we can't call implCloseChannel, but calling this instead is \"ok\":\n    // http://mail.openjdk.java.net/pipermail/nio-dev/2015-September/003322.html\n    delegate.close();\n  }\n\n","sourceOld":"  @Override\n  protected void implCloseChannel() throws IOException {\n    // our only way to call delegate.implCloseChannel()\n    AccessController.doPrivileged(new PrivilegedAction<Void>() {\n      @Override\n      public Void run() {\n        for (Class<?> clazz = delegate.getClass(); clazz != null; clazz = clazz.getSuperclass()) {\n          final Method method;\n          try {\n            method = clazz.getDeclaredMethod(\"implCloseChannel\");\n          } catch (NoSuchMethodException e) {\n            continue;\n          }\n          try {\n            method.setAccessible(true);\n            method.invoke(delegate);\n            return null;\n          } catch (ReflectiveOperationException e) {\n            throw new IOError(e);\n          }\n        }\n        throw new AssertionError();\n      }\n    });\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"0351c74c2d6aea23995022e25e0fa37e97785617":["ee800f0f414112690073f337ef3d82c8ab298b2d"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"ee800f0f414112690073f337ef3d82c8ab298b2d":["7cefb6c0aa217f293070c43e7a77682dd56e0a33"],"7cefb6c0aa217f293070c43e7a77682dd56e0a33":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["0351c74c2d6aea23995022e25e0fa37e97785617"]},"commit2Childs":{"0351c74c2d6aea23995022e25e0fa37e97785617":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["7cefb6c0aa217f293070c43e7a77682dd56e0a33"],"ee800f0f414112690073f337ef3d82c8ab298b2d":["0351c74c2d6aea23995022e25e0fa37e97785617"],"7cefb6c0aa217f293070c43e7a77682dd56e0a33":["ee800f0f414112690073f337ef3d82c8ab298b2d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}