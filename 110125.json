{"path":"modules/grouping/src/java/org/apache/lucene/search/grouping/term/TermSecondPassGroupingCollector#setNextReader(AtomicReaderContext).mjava","commits":[{"id":"8b48c85d1bf438ef65fbc1abe44f4e2c04a43e00","date":1317931776,"type":1,"author":"Martijn van Groningen","isMerge":false,"pathNew":"modules/grouping/src/java/org/apache/lucene/search/grouping/term/TermSecondPassGroupingCollector#setNextReader(AtomicReaderContext).mjava","pathOld":"modules/grouping/src/java/org/apache/lucene/search/grouping/TermSecondPassGroupingCollector#setNextReader(AtomicReaderContext).mjava","sourceNew":"  @Override\n  public void setNextReader(AtomicReaderContext readerContext) throws IOException {\n    super.setNextReader(readerContext);\n    index = FieldCache.DEFAULT.getTermsIndex(readerContext.reader, groupField);\n\n    // Rebuild ordSet\n    ordSet.clear();\n    for (SearchGroupDocs<BytesRef> group : groupMap.values()) {\n//      System.out.println(\"  group=\" + (group.groupValue == null ? \"null\" : group.groupValue.utf8ToString()));\n      int ord = group.groupValue == null ? 0 : index.binarySearchLookup(group.groupValue, spareBytesRef);\n      if (ord >= 0) {\n        groupDocs[ordSet.put(ord)] = group;\n      }\n    }\n  }\n\n","sourceOld":"  @Override\n  public void setNextReader(AtomicReaderContext readerContext) throws IOException {\n    super.setNextReader(readerContext);\n    index = FieldCache.DEFAULT.getTermsIndex(readerContext.reader, groupField);\n\n    // Rebuild ordSet\n    ordSet.clear();\n    for (SearchGroupDocs<BytesRef> group : groupMap.values()) {\n//      System.out.println(\"  group=\" + (group.groupValue == null ? \"null\" : group.groupValue.utf8ToString()));\n      int ord = group.groupValue == null ? 0 : index.binarySearchLookup(group.groupValue, spareBytesRef);\n      if (ord >= 0) {\n        groupDocs[ordSet.put(ord)] = group;\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7528ec8c6e88061e2e6af98c4ae1f72a30f180b2","date":1327854270,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"modules/grouping/src/java/org/apache/lucene/search/grouping/term/TermSecondPassGroupingCollector#setNextReader(AtomicReaderContext).mjava","pathOld":"modules/grouping/src/java/org/apache/lucene/search/grouping/term/TermSecondPassGroupingCollector#setNextReader(AtomicReaderContext).mjava","sourceNew":"  @Override\n  public void setNextReader(AtomicReaderContext readerContext) throws IOException {\n    super.setNextReader(readerContext);\n    index = FieldCache.DEFAULT.getTermsIndex(readerContext.reader(), groupField);\n\n    // Rebuild ordSet\n    ordSet.clear();\n    for (SearchGroupDocs<BytesRef> group : groupMap.values()) {\n//      System.out.println(\"  group=\" + (group.groupValue == null ? \"null\" : group.groupValue.utf8ToString()));\n      int ord = group.groupValue == null ? 0 : index.binarySearchLookup(group.groupValue, spareBytesRef);\n      if (ord >= 0) {\n        groupDocs[ordSet.put(ord)] = group;\n      }\n    }\n  }\n\n","sourceOld":"  @Override\n  public void setNextReader(AtomicReaderContext readerContext) throws IOException {\n    super.setNextReader(readerContext);\n    index = FieldCache.DEFAULT.getTermsIndex(readerContext.reader, groupField);\n\n    // Rebuild ordSet\n    ordSet.clear();\n    for (SearchGroupDocs<BytesRef> group : groupMap.values()) {\n//      System.out.println(\"  group=\" + (group.groupValue == null ? \"null\" : group.groupValue.utf8ToString()));\n      int ord = group.groupValue == null ? 0 : index.binarySearchLookup(group.groupValue, spareBytesRef);\n      if (ord >= 0) {\n        groupDocs[ordSet.put(ord)] = group;\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"5cab9a86bd67202d20b6adc463008c8e982b070a","date":1327966443,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"modules/grouping/src/java/org/apache/lucene/search/grouping/term/TermSecondPassGroupingCollector#setNextReader(AtomicReaderContext).mjava","pathOld":"modules/grouping/src/java/org/apache/lucene/search/grouping/term/TermSecondPassGroupingCollector#setNextReader(AtomicReaderContext).mjava","sourceNew":"  @Override\n  public void setNextReader(AtomicReaderContext readerContext) throws IOException {\n    super.setNextReader(readerContext);\n    index = FieldCache.DEFAULT.getTermsIndex(readerContext.reader(), groupField);\n\n    // Rebuild ordSet\n    ordSet.clear();\n    for (SearchGroupDocs<BytesRef> group : groupMap.values()) {\n//      System.out.println(\"  group=\" + (group.groupValue == null ? \"null\" : group.groupValue.utf8ToString()));\n      int ord = group.groupValue == null ? 0 : index.binarySearchLookup(group.groupValue, spareBytesRef);\n      if (ord >= 0) {\n        groupDocs[ordSet.put(ord)] = group;\n      }\n    }\n  }\n\n","sourceOld":"  @Override\n  public void setNextReader(AtomicReaderContext readerContext) throws IOException {\n    super.setNextReader(readerContext);\n    index = FieldCache.DEFAULT.getTermsIndex(readerContext.reader, groupField);\n\n    // Rebuild ordSet\n    ordSet.clear();\n    for (SearchGroupDocs<BytesRef> group : groupMap.values()) {\n//      System.out.println(\"  group=\" + (group.groupValue == null ? \"null\" : group.groupValue.utf8ToString()));\n      int ord = group.groupValue == null ? 0 : index.binarySearchLookup(group.groupValue, spareBytesRef);\n      if (ord >= 0) {\n        groupDocs[ordSet.put(ord)] = group;\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/grouping/src/java/org/apache/lucene/search/grouping/term/TermSecondPassGroupingCollector#setNextReader(AtomicReaderContext).mjava","pathOld":"modules/grouping/src/java/org/apache/lucene/search/grouping/term/TermSecondPassGroupingCollector#setNextReader(AtomicReaderContext).mjava","sourceNew":"  @Override\n  public void setNextReader(AtomicReaderContext readerContext) throws IOException {\n    super.setNextReader(readerContext);\n    index = FieldCache.DEFAULT.getTermsIndex(readerContext.reader(), groupField);\n\n    // Rebuild ordSet\n    ordSet.clear();\n    for (SearchGroupDocs<BytesRef> group : groupMap.values()) {\n//      System.out.println(\"  group=\" + (group.groupValue == null ? \"null\" : group.groupValue.utf8ToString()));\n      int ord = group.groupValue == null ? 0 : index.binarySearchLookup(group.groupValue, spareBytesRef);\n      if (ord >= 0) {\n        groupDocs[ordSet.put(ord)] = group;\n      }\n    }\n  }\n\n","sourceOld":"  @Override\n  public void setNextReader(AtomicReaderContext readerContext) throws IOException {\n    super.setNextReader(readerContext);\n    index = FieldCache.DEFAULT.getTermsIndex(readerContext.reader(), groupField);\n\n    // Rebuild ordSet\n    ordSet.clear();\n    for (SearchGroupDocs<BytesRef> group : groupMap.values()) {\n//      System.out.println(\"  group=\" + (group.groupValue == null ? \"null\" : group.groupValue.utf8ToString()));\n      int ord = group.groupValue == null ? 0 : index.binarySearchLookup(group.groupValue, spareBytesRef);\n      if (ord >= 0) {\n        groupDocs[ordSet.put(ord)] = group;\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["5cab9a86bd67202d20b6adc463008c8e982b070a"],"7528ec8c6e88061e2e6af98c4ae1f72a30f180b2":["8b48c85d1bf438ef65fbc1abe44f4e2c04a43e00"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"8b48c85d1bf438ef65fbc1abe44f4e2c04a43e00":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"5cab9a86bd67202d20b6adc463008c8e982b070a":["8b48c85d1bf438ef65fbc1abe44f4e2c04a43e00","7528ec8c6e88061e2e6af98c4ae1f72a30f180b2"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b89678825b68eccaf09e6ab71675fc0b0af1e099"]},"commit2Childs":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"7528ec8c6e88061e2e6af98c4ae1f72a30f180b2":["5cab9a86bd67202d20b6adc463008c8e982b070a"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["8b48c85d1bf438ef65fbc1abe44f4e2c04a43e00"],"8b48c85d1bf438ef65fbc1abe44f4e2c04a43e00":["7528ec8c6e88061e2e6af98c4ae1f72a30f180b2","5cab9a86bd67202d20b6adc463008c8e982b070a"],"5cab9a86bd67202d20b6adc463008c8e982b070a":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}