{"path":"lucene/analysis/common/src/java/org/apache/lucene/analysis/util/FilesystemResourceLoader#FilesystemResourceLoader(Path).mjava","commits":[{"id":"f4abec28b874149a7223e32cc7a01704c27790de","date":1410644789,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/common/src/java/org/apache/lucene/analysis/util/FilesystemResourceLoader#FilesystemResourceLoader(Path).mjava","pathOld":"lucene/analysis/common/src/java/org/apache/lucene/analysis/util/FilesystemResourceLoader#FilesystemResourceLoader(File).mjava","sourceNew":"  /**\n   * Creates a resource loader that resolves resources against the given\n   * base directory (may be {@code null} to refer to CWD).\n   * Files not found in file system and class lookups are delegated to context\n   * classloader.\n   */\n  public FilesystemResourceLoader(Path baseDirectory) {\n    this(baseDirectory, new ClasspathResourceLoader());\n  }\n\n","sourceOld":"  /**\n   * Creates a resource loader that resolves resources against the given\n   * base directory (may be {@code null} to refer to CWD).\n   * Files not found in file system and class lookups are delegated to context\n   * classloader.\n   */\n  public FilesystemResourceLoader(File baseDirectory) {\n    this(baseDirectory, new ClasspathResourceLoader());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5a2748831fb25b0e9d5a4c315047bf877c887460","date":1498155650,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/analysis/common/src/java/org/apache/lucene/analysis/util/FilesystemResourceLoader#FilesystemResourceLoader(Path).mjava","pathOld":"lucene/analysis/common/src/java/org/apache/lucene/analysis/util/FilesystemResourceLoader#FilesystemResourceLoader(Path).mjava","sourceNew":"  /**\n   * Creates a resource loader that resolves resources against the given\n   * base directory (may be {@code null} to refer to CWD).\n   * Files not found in file system and class lookups are delegated to context\n   * classloader.\n   * \n   * @deprecated You should not use this ctor, because it uses the thread's context\n   * class loader as fallback for resource lookups, which is bad programming style.\n   * Please specify a {@link ClassLoader} instead.\n   * @see #FilesystemResourceLoader(Path, ClassLoader)\n   */\n  @Deprecated\n  public FilesystemResourceLoader(Path baseDirectory) {\n    this(baseDirectory, new ClasspathResourceLoader());\n  }\n\n","sourceOld":"  /**\n   * Creates a resource loader that resolves resources against the given\n   * base directory (may be {@code null} to refer to CWD).\n   * Files not found in file system and class lookups are delegated to context\n   * classloader.\n   */\n  public FilesystemResourceLoader(Path baseDirectory) {\n    this(baseDirectory, new ClasspathResourceLoader());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b7dfa64bc2074fb87d0ca70095a644c1ead107e1","date":1498356339,"type":3,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"lucene/analysis/common/src/java/org/apache/lucene/analysis/util/FilesystemResourceLoader#FilesystemResourceLoader(Path).mjava","pathOld":"lucene/analysis/common/src/java/org/apache/lucene/analysis/util/FilesystemResourceLoader#FilesystemResourceLoader(Path).mjava","sourceNew":"  /**\n   * Creates a resource loader that resolves resources against the given\n   * base directory (may be {@code null} to refer to CWD).\n   * Files not found in file system and class lookups are delegated to context\n   * classloader.\n   * \n   * @deprecated You should not use this ctor, because it uses the thread's context\n   * class loader as fallback for resource lookups, which is bad programming style.\n   * Please specify a {@link ClassLoader} instead.\n   * @see #FilesystemResourceLoader(Path, ClassLoader)\n   */\n  @Deprecated\n  public FilesystemResourceLoader(Path baseDirectory) {\n    this(baseDirectory, new ClasspathResourceLoader());\n  }\n\n","sourceOld":"  /**\n   * Creates a resource loader that resolves resources against the given\n   * base directory (may be {@code null} to refer to CWD).\n   * Files not found in file system and class lookups are delegated to context\n   * classloader.\n   */\n  public FilesystemResourceLoader(Path baseDirectory) {\n    this(baseDirectory, new ClasspathResourceLoader());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"28288370235ed02234a64753cdbf0c6ec096304a","date":1498726817,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"lucene/analysis/common/src/java/org/apache/lucene/analysis/util/FilesystemResourceLoader#FilesystemResourceLoader(Path).mjava","pathOld":"lucene/analysis/common/src/java/org/apache/lucene/analysis/util/FilesystemResourceLoader#FilesystemResourceLoader(Path).mjava","sourceNew":"  /**\n   * Creates a resource loader that resolves resources against the given\n   * base directory (may be {@code null} to refer to CWD).\n   * Files not found in file system and class lookups are delegated to context\n   * classloader.\n   * \n   * @deprecated You should not use this ctor, because it uses the thread's context\n   * class loader as fallback for resource lookups, which is bad programming style.\n   * Please specify a {@link ClassLoader} instead.\n   * @see #FilesystemResourceLoader(Path, ClassLoader)\n   */\n  @Deprecated\n  public FilesystemResourceLoader(Path baseDirectory) {\n    this(baseDirectory, new ClasspathResourceLoader());\n  }\n\n","sourceOld":"  /**\n   * Creates a resource loader that resolves resources against the given\n   * base directory (may be {@code null} to refer to CWD).\n   * Files not found in file system and class lookups are delegated to context\n   * classloader.\n   */\n  public FilesystemResourceLoader(Path baseDirectory) {\n    this(baseDirectory, new ClasspathResourceLoader());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"5a2748831fb25b0e9d5a4c315047bf877c887460":["f4abec28b874149a7223e32cc7a01704c27790de"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"f4abec28b874149a7223e32cc7a01704c27790de":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"b7dfa64bc2074fb87d0ca70095a644c1ead107e1":["f4abec28b874149a7223e32cc7a01704c27790de","5a2748831fb25b0e9d5a4c315047bf877c887460"],"28288370235ed02234a64753cdbf0c6ec096304a":["f4abec28b874149a7223e32cc7a01704c27790de","5a2748831fb25b0e9d5a4c315047bf877c887460"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["28288370235ed02234a64753cdbf0c6ec096304a"]},"commit2Childs":{"5a2748831fb25b0e9d5a4c315047bf877c887460":["b7dfa64bc2074fb87d0ca70095a644c1ead107e1","28288370235ed02234a64753cdbf0c6ec096304a"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["f4abec28b874149a7223e32cc7a01704c27790de"],"f4abec28b874149a7223e32cc7a01704c27790de":["5a2748831fb25b0e9d5a4c315047bf877c887460","b7dfa64bc2074fb87d0ca70095a644c1ead107e1","28288370235ed02234a64753cdbf0c6ec096304a"],"b7dfa64bc2074fb87d0ca70095a644c1ead107e1":[],"28288370235ed02234a64753cdbf0c6ec096304a":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["b7dfa64bc2074fb87d0ca70095a644c1ead107e1","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}