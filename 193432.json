{"path":"lucene/core/src/java/org/apache/lucene/search/Weight.DefaultBulkScorer#scoreAll(LeafCollector,DocIdSetIterator,TwoPhaseIterator,Bits).mjava","commits":[{"id":"7dd748bb245633a8195281556bb0e68a6ea97d18","date":1449755030,"type":1,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/Weight.DefaultBulkScorer#scoreAll(LeafCollector,DocIdSetIterator,TwoPhaseIterator,Bits).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/Weight.DefaultBulkScorer#scoreAll(LeafCollector,Scorer,TwoPhaseIterator,Bits).mjava","sourceNew":"    /** Specialized method to bulk-score all hits; we\n     *  separate this from {@link #scoreRange} to help out\n     *  hotspot.\n     *  See <a href=\"https://issues.apache.org/jira/browse/LUCENE-5487\">LUCENE-5487</a> */\n    static void scoreAll(LeafCollector collector, DocIdSetIterator iterator, TwoPhaseIterator twoPhase, Bits acceptDocs) throws IOException {\n      if (twoPhase == null) {\n        for (int doc = iterator.nextDoc(); doc != DocIdSetIterator.NO_MORE_DOCS; doc = iterator.nextDoc()) {\n          if (acceptDocs == null || acceptDocs.get(doc)) {\n            collector.collect(doc);\n          }\n        }\n      } else {\n        // The scorer has an approximation, so run the approximation first, then check acceptDocs, then confirm\n        final DocIdSetIterator approximation = twoPhase.approximation();\n        for (int doc = approximation.nextDoc(); doc != DocIdSetIterator.NO_MORE_DOCS; doc = approximation.nextDoc()) {\n          if ((acceptDocs == null || acceptDocs.get(doc)) && twoPhase.matches()) {\n            collector.collect(doc);\n          }\n        }\n      }\n    }\n\n","sourceOld":"    /** Specialized method to bulk-score all hits; we\n     *  separate this from {@link #scoreRange} to help out\n     *  hotspot.\n     *  See <a href=\"https://issues.apache.org/jira/browse/LUCENE-5487\">LUCENE-5487</a> */\n    static void scoreAll(LeafCollector collector, Scorer scorer, TwoPhaseIterator twoPhase, Bits acceptDocs) throws IOException {\n      if (twoPhase == null) {\n        for (int doc = scorer.nextDoc(); doc != DocIdSetIterator.NO_MORE_DOCS; doc = scorer.nextDoc()) {\n          if (acceptDocs == null || acceptDocs.get(doc)) {\n            collector.collect(doc);\n          }\n        }\n      } else {\n        // The scorer has an approximation, so run the approximation first, then check acceptDocs, then confirm\n        final DocIdSetIterator approximation = twoPhase.approximation();\n        for (int doc = approximation.nextDoc(); doc != DocIdSetIterator.NO_MORE_DOCS; doc = approximation.nextDoc()) {\n          if ((acceptDocs == null || acceptDocs.get(doc)) && twoPhase.matches()) {\n            collector.collect(doc);\n          }\n        }\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8bed509d7d09ecab43206c8425435a9976ce7770","date":1601990562,"type":3,"author":"Mayya Sharipova","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/Weight.DefaultBulkScorer#scoreAll(LeafCollector,DocIdSetIterator,TwoPhaseIterator,Bits).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/Weight.DefaultBulkScorer#scoreAll(LeafCollector,DocIdSetIterator,TwoPhaseIterator,Bits).mjava","sourceNew":"    /** Specialized method to bulk-score all hits; we\n     *  separate this from {@link #scoreRange} to help out\n     *  hotspot.\n     *  See <a href=\"https://issues.apache.org/jira/browse/LUCENE-5487\">LUCENE-5487</a> */\n    static void scoreAll(LeafCollector collector, DocIdSetIterator iterator, TwoPhaseIterator twoPhase, Bits acceptDocs) throws IOException {\n      if (twoPhase == null) {\n        for (int doc = iterator.nextDoc(); doc != DocIdSetIterator.NO_MORE_DOCS; doc = iterator.nextDoc()) {\n          if (acceptDocs == null || acceptDocs.get(doc)) {\n            collector.collect(doc);\n          }\n        }\n      } else {\n        // The scorer has an approximation, so run the approximation first, then check acceptDocs, then confirm\n        for (int doc = iterator.nextDoc(); doc != DocIdSetIterator.NO_MORE_DOCS; doc = iterator.nextDoc()) {\n          if ((acceptDocs == null || acceptDocs.get(doc)) && twoPhase.matches()) {\n            collector.collect(doc);\n          }\n        }\n      }\n    }\n\n","sourceOld":"    /** Specialized method to bulk-score all hits; we\n     *  separate this from {@link #scoreRange} to help out\n     *  hotspot.\n     *  See <a href=\"https://issues.apache.org/jira/browse/LUCENE-5487\">LUCENE-5487</a> */\n    static void scoreAll(LeafCollector collector, DocIdSetIterator iterator, TwoPhaseIterator twoPhase, Bits acceptDocs) throws IOException {\n      if (twoPhase == null) {\n        for (int doc = iterator.nextDoc(); doc != DocIdSetIterator.NO_MORE_DOCS; doc = iterator.nextDoc()) {\n          if (acceptDocs == null || acceptDocs.get(doc)) {\n            collector.collect(doc);\n          }\n        }\n      } else {\n        // The scorer has an approximation, so run the approximation first, then check acceptDocs, then confirm\n        final DocIdSetIterator approximation = twoPhase.approximation();\n        for (int doc = approximation.nextDoc(); doc != DocIdSetIterator.NO_MORE_DOCS; doc = approximation.nextDoc()) {\n          if ((acceptDocs == null || acceptDocs.get(doc)) && twoPhase.matches()) {\n            collector.collect(doc);\n          }\n        }\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"8bed509d7d09ecab43206c8425435a9976ce7770":["7dd748bb245633a8195281556bb0e68a6ea97d18"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"7dd748bb245633a8195281556bb0e68a6ea97d18":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["8bed509d7d09ecab43206c8425435a9976ce7770"]},"commit2Childs":{"8bed509d7d09ecab43206c8425435a9976ce7770":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["7dd748bb245633a8195281556bb0e68a6ea97d18"],"7dd748bb245633a8195281556bb0e68a6ea97d18":["8bed509d7d09ecab43206c8425435a9976ce7770"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}