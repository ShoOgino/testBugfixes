{"path":"lucene/analysis/common/src/java/org/apache/lucene/analysis/miscellaneous/LimitTokenCountAnalyzer#LimitTokenCountAnalyzer(Analyzer,int,boolean).mjava","commits":[{"id":"5009d80b96d7223e4120e40035a8b8c1d48cb134","date":1353482392,"type":0,"author":"Chris M. Hostetter","isMerge":false,"pathNew":"lucene/analysis/common/src/java/org/apache/lucene/analysis/miscellaneous/LimitTokenCountAnalyzer#LimitTokenCountAnalyzer(Analyzer,int,boolean).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Build an analyzer that limits the maximum number of tokens per field.\n   * @param delegate the analyzer to wrap\n   * @param maxTokenCount max number of tokens to produce\n   * @param consumeAllTokens whether all tokens from the delegate should be consumed even if maxTokenCount is reached.\n   */\n  public LimitTokenCountAnalyzer(Analyzer delegate, int maxTokenCount, boolean consumeAllTokens) {\n    this.delegate = delegate;\n    this.maxTokenCount = maxTokenCount;\n    this.consumeAllTokens = consumeAllTokens;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"407687e67faf6e1f02a211ca078d8e3eed631027","date":1355157407,"type":0,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/analysis/common/src/java/org/apache/lucene/analysis/miscellaneous/LimitTokenCountAnalyzer#LimitTokenCountAnalyzer(Analyzer,int,boolean).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Build an analyzer that limits the maximum number of tokens per field.\n   * @param delegate the analyzer to wrap\n   * @param maxTokenCount max number of tokens to produce\n   * @param consumeAllTokens whether all tokens from the delegate should be consumed even if maxTokenCount is reached.\n   */\n  public LimitTokenCountAnalyzer(Analyzer delegate, int maxTokenCount, boolean consumeAllTokens) {\n    this.delegate = delegate;\n    this.maxTokenCount = maxTokenCount;\n    this.consumeAllTokens = consumeAllTokens;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"38061899d760e06a12fe186bc1f09ca9ff0e64a6","date":1376491296,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/analysis/common/src/java/org/apache/lucene/analysis/miscellaneous/LimitTokenCountAnalyzer#LimitTokenCountAnalyzer(Analyzer,int,boolean).mjava","pathOld":"lucene/analysis/common/src/java/org/apache/lucene/analysis/miscellaneous/LimitTokenCountAnalyzer#LimitTokenCountAnalyzer(Analyzer,int,boolean).mjava","sourceNew":"  /**\n   * Build an analyzer that limits the maximum number of tokens per field.\n   * @param delegate the analyzer to wrap\n   * @param maxTokenCount max number of tokens to produce\n   * @param consumeAllTokens whether all tokens from the delegate should be consumed even if maxTokenCount is reached.\n   */\n  public LimitTokenCountAnalyzer(Analyzer delegate, int maxTokenCount, boolean consumeAllTokens) {\n    super(delegate.getReuseStrategy());\n    this.delegate = delegate;\n    this.maxTokenCount = maxTokenCount;\n    this.consumeAllTokens = consumeAllTokens;\n  }\n\n","sourceOld":"  /**\n   * Build an analyzer that limits the maximum number of tokens per field.\n   * @param delegate the analyzer to wrap\n   * @param maxTokenCount max number of tokens to produce\n   * @param consumeAllTokens whether all tokens from the delegate should be consumed even if maxTokenCount is reached.\n   */\n  public LimitTokenCountAnalyzer(Analyzer delegate, int maxTokenCount, boolean consumeAllTokens) {\n    this.delegate = delegate;\n    this.maxTokenCount = maxTokenCount;\n    this.consumeAllTokens = consumeAllTokens;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3dffec77fb8f7d0e9ca4869dddd6af94528b4576","date":1377875202,"type":3,"author":"Han Jiang","isMerge":true,"pathNew":"lucene/analysis/common/src/java/org/apache/lucene/analysis/miscellaneous/LimitTokenCountAnalyzer#LimitTokenCountAnalyzer(Analyzer,int,boolean).mjava","pathOld":"lucene/analysis/common/src/java/org/apache/lucene/analysis/miscellaneous/LimitTokenCountAnalyzer#LimitTokenCountAnalyzer(Analyzer,int,boolean).mjava","sourceNew":"  /**\n   * Build an analyzer that limits the maximum number of tokens per field.\n   * @param delegate the analyzer to wrap\n   * @param maxTokenCount max number of tokens to produce\n   * @param consumeAllTokens whether all tokens from the delegate should be consumed even if maxTokenCount is reached.\n   */\n  public LimitTokenCountAnalyzer(Analyzer delegate, int maxTokenCount, boolean consumeAllTokens) {\n    super(delegate.getReuseStrategy());\n    this.delegate = delegate;\n    this.maxTokenCount = maxTokenCount;\n    this.consumeAllTokens = consumeAllTokens;\n  }\n\n","sourceOld":"  /**\n   * Build an analyzer that limits the maximum number of tokens per field.\n   * @param delegate the analyzer to wrap\n   * @param maxTokenCount max number of tokens to produce\n   * @param consumeAllTokens whether all tokens from the delegate should be consumed even if maxTokenCount is reached.\n   */\n  public LimitTokenCountAnalyzer(Analyzer delegate, int maxTokenCount, boolean consumeAllTokens) {\n    this.delegate = delegate;\n    this.maxTokenCount = maxTokenCount;\n    this.consumeAllTokens = consumeAllTokens;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"38061899d760e06a12fe186bc1f09ca9ff0e64a6":["5009d80b96d7223e4120e40035a8b8c1d48cb134"],"3dffec77fb8f7d0e9ca4869dddd6af94528b4576":["5009d80b96d7223e4120e40035a8b8c1d48cb134","38061899d760e06a12fe186bc1f09ca9ff0e64a6"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"407687e67faf6e1f02a211ca078d8e3eed631027":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","5009d80b96d7223e4120e40035a8b8c1d48cb134"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["38061899d760e06a12fe186bc1f09ca9ff0e64a6"],"5009d80b96d7223e4120e40035a8b8c1d48cb134":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"38061899d760e06a12fe186bc1f09ca9ff0e64a6":["3dffec77fb8f7d0e9ca4869dddd6af94528b4576","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3dffec77fb8f7d0e9ca4869dddd6af94528b4576":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["407687e67faf6e1f02a211ca078d8e3eed631027","5009d80b96d7223e4120e40035a8b8c1d48cb134"],"407687e67faf6e1f02a211ca078d8e3eed631027":[],"5009d80b96d7223e4120e40035a8b8c1d48cb134":["38061899d760e06a12fe186bc1f09ca9ff0e64a6","3dffec77fb8f7d0e9ca4869dddd6af94528b4576","407687e67faf6e1f02a211ca078d8e3eed631027"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["3dffec77fb8f7d0e9ca4869dddd6af94528b4576","407687e67faf6e1f02a211ca078d8e3eed631027","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}