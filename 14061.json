{"path":"lucene/test-framework/src/test/org/apache/lucene/analysis/TestMockAnalyzer#testKeep().mjava","commits":[{"id":"b52491e71f0d5d0f0160d6ed0d39e0dd661be68a","date":1429550638,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/test-framework/src/test/org/apache/lucene/analysis/TestMockAnalyzer#testKeep().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/analysis/TestMockAnalyzer#testKeep().mjava","sourceNew":"  /** Test a configuration that behaves a lot like KeepWordFilter */\n  public void testKeep() throws Exception {\n    CharacterRunAutomaton keepWords = \n      new CharacterRunAutomaton(\n          Operations.complement(\n              Operations.union(\n                  Arrays.asList(Automata.makeString(\"foo\"), Automata.makeString(\"bar\"))),\n              DEFAULT_MAX_DETERMINIZED_STATES));\n    Analyzer a = new MockAnalyzer(random(), MockTokenizer.SIMPLE, true, keepWords);\n    assertAnalyzesTo(a, \"quick foo brown bar bar fox foo\",\n        new String[] { \"foo\", \"bar\", \"bar\", \"foo\" },\n        new int[] { 2, 2, 1, 2 });\n  }\n\n","sourceOld":"  /** Test a configuration that behaves a lot like KeepWordFilter */\n  public void testKeep() throws Exception {\n    CharacterRunAutomaton keepWords = \n      new CharacterRunAutomaton(\n          Operations.complement(\n              Operations.union(\n                  Arrays.asList(Automata.makeString(\"foo\"), Automata.makeString(\"bar\"))),\n              DEFAULT_MAX_DETERMINIZED_STATES));\n    Analyzer a = new MockAnalyzer(random(), MockTokenizer.SIMPLE, true, keepWords);\n    assertAnalyzesTo(a, \"quick foo brown bar bar fox foo\",\n        new String[] { \"foo\", \"bar\", \"bar\", \"foo\" },\n        new int[] { 2, 2, 1, 2 });\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"b52491e71f0d5d0f0160d6ed0d39e0dd661be68a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b52491e71f0d5d0f0160d6ed0d39e0dd661be68a"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b52491e71f0d5d0f0160d6ed0d39e0dd661be68a"],"b52491e71f0d5d0f0160d6ed0d39e0dd661be68a":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}