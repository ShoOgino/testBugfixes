{"path":"solr/core/src/java/org/apache/solr/search/CollapsingQParserPlugin.CollapsingScoreCollector#CollapsingScoreCollector(int,int,SortedDocValues,int,IntIntOpenHashMap).mjava","commits":[{"id":"a667f95e8b4d25c8e45a6bb9ba8ce9654e7858d7","date":1401992910,"type":1,"author":"Joel Bernstein","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/CollapsingQParserPlugin.CollapsingScoreCollector#CollapsingScoreCollector(int,int,SortedDocValues,int,IntIntOpenHashMap).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/CollapsingQParserPlugin.CollapsingScoreCollector#CollapsingScoreCollector(int,int,SortedDocValues,int,IntOpenHashSet).mjava","sourceNew":"    public CollapsingScoreCollector(int maxDoc,\n                                    int segments,\n                                    SortedDocValues values,\n                                    int nullPolicy,\n                                    IntIntOpenHashMap boostDocs) {\n      this.maxDoc = maxDoc;\n      this.contexts = new AtomicReaderContext[segments];\n      this.collapsedSet = new FixedBitSet(maxDoc);\n      this.boostDocs = boostDocs;\n      if(this.boostDocs != null) {\n        //Set the elevated docs now.\n        IntOpenHashSet boostG = new IntOpenHashSet();\n        Iterator<IntIntCursor> it = this.boostDocs.iterator();\n        while(it.hasNext()) {\n          IntIntCursor cursor = it.next();\n          int i = cursor.key;\n          this.collapsedSet.set(i);\n          int ord = values.getOrd(i);\n          if(ord > -1) {\n            boostG.add(ord);\n          }\n        }\n        boostOrds = boostG.toArray();\n        Arrays.sort(boostOrds);\n      }\n      this.values = values;\n      int valueCount = values.getValueCount();\n      this.ords = new int[valueCount];\n      Arrays.fill(this.ords, -1);\n      this.scores = new float[valueCount];\n      Arrays.fill(this.scores, -Float.MAX_VALUE);\n      this.nullPolicy = nullPolicy;\n      if(nullPolicy == CollapsingPostFilter.NULL_POLICY_EXPAND) {\n        nullScores = new FloatArrayList();\n      }\n    }\n\n","sourceOld":"    public CollapsingScoreCollector(int maxDoc,\n                                    int segments,\n                                    SortedDocValues values,\n                                    int nullPolicy,\n                                    IntOpenHashSet boostDocs) {\n      this.maxDoc = maxDoc;\n      this.contexts = new AtomicReaderContext[segments];\n      this.collapsedSet = new FixedBitSet(maxDoc);\n      this.boostDocs = boostDocs;\n      if(this.boostDocs != null) {\n        //Set the elevated docs now.\n        IntOpenHashSet boostG = new IntOpenHashSet();\n        Iterator<IntCursor> it = this.boostDocs.iterator();\n        while(it.hasNext()) {\n          IntCursor cursor = it.next();\n          int i = cursor.value;\n          this.collapsedSet.set(i);\n          int ord = values.getOrd(i);\n          if(ord > -1) {\n            boostG.add(ord);\n          }\n        }\n        boostOrds = boostG.toArray();\n        Arrays.sort(boostOrds);\n      }\n      this.values = values;\n      int valueCount = values.getValueCount();\n      this.ords = new int[valueCount];\n      Arrays.fill(this.ords, -1);\n      this.scores = new float[valueCount];\n      Arrays.fill(this.scores, -Float.MAX_VALUE);\n      this.nullPolicy = nullPolicy;\n      if(nullPolicy == CollapsingPostFilter.NULL_POLICY_EXPAND) {\n        nullScores = new FloatArrayList();\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c9fb5f46e264daf5ba3860defe623a89d202dd87","date":1411516315,"type":3,"author":"Ryan Ernst","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/CollapsingQParserPlugin.CollapsingScoreCollector#CollapsingScoreCollector(int,int,SortedDocValues,int,IntIntOpenHashMap).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/CollapsingQParserPlugin.CollapsingScoreCollector#CollapsingScoreCollector(int,int,SortedDocValues,int,IntIntOpenHashMap).mjava","sourceNew":"    public CollapsingScoreCollector(int maxDoc,\n                                    int segments,\n                                    SortedDocValues values,\n                                    int nullPolicy,\n                                    IntIntOpenHashMap boostDocs) {\n      this.maxDoc = maxDoc;\n      this.contexts = new LeafReaderContext[segments];\n      this.collapsedSet = new FixedBitSet(maxDoc);\n      this.boostDocs = boostDocs;\n      if(this.boostDocs != null) {\n        //Set the elevated docs now.\n        IntOpenHashSet boostG = new IntOpenHashSet();\n        Iterator<IntIntCursor> it = this.boostDocs.iterator();\n        while(it.hasNext()) {\n          IntIntCursor cursor = it.next();\n          int i = cursor.key;\n          this.collapsedSet.set(i);\n          int ord = values.getOrd(i);\n          if(ord > -1) {\n            boostG.add(ord);\n          }\n        }\n        boostOrds = boostG.toArray();\n        Arrays.sort(boostOrds);\n      }\n      this.values = values;\n      int valueCount = values.getValueCount();\n      this.ords = new int[valueCount];\n      Arrays.fill(this.ords, -1);\n      this.scores = new float[valueCount];\n      Arrays.fill(this.scores, -Float.MAX_VALUE);\n      this.nullPolicy = nullPolicy;\n      if(nullPolicy == CollapsingPostFilter.NULL_POLICY_EXPAND) {\n        nullScores = new FloatArrayList();\n      }\n    }\n\n","sourceOld":"    public CollapsingScoreCollector(int maxDoc,\n                                    int segments,\n                                    SortedDocValues values,\n                                    int nullPolicy,\n                                    IntIntOpenHashMap boostDocs) {\n      this.maxDoc = maxDoc;\n      this.contexts = new AtomicReaderContext[segments];\n      this.collapsedSet = new FixedBitSet(maxDoc);\n      this.boostDocs = boostDocs;\n      if(this.boostDocs != null) {\n        //Set the elevated docs now.\n        IntOpenHashSet boostG = new IntOpenHashSet();\n        Iterator<IntIntCursor> it = this.boostDocs.iterator();\n        while(it.hasNext()) {\n          IntIntCursor cursor = it.next();\n          int i = cursor.key;\n          this.collapsedSet.set(i);\n          int ord = values.getOrd(i);\n          if(ord > -1) {\n            boostG.add(ord);\n          }\n        }\n        boostOrds = boostG.toArray();\n        Arrays.sort(boostOrds);\n      }\n      this.values = values;\n      int valueCount = values.getValueCount();\n      this.ords = new int[valueCount];\n      Arrays.fill(this.ords, -1);\n      this.scores = new float[valueCount];\n      Arrays.fill(this.scores, -Float.MAX_VALUE);\n      this.nullPolicy = nullPolicy;\n      if(nullPolicy == CollapsingPostFilter.NULL_POLICY_EXPAND) {\n        nullScores = new FloatArrayList();\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8ced52befdc8d88d90766aadbaac496f3fd0e4ee","date":1421070034,"type":5,"author":"Joel Bernstein","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/CollapsingQParserPlugin.OrdScoreCollector#OrdScoreCollector(int,int,SortedDocValues,int,IntIntOpenHashMap).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/CollapsingQParserPlugin.CollapsingScoreCollector#CollapsingScoreCollector(int,int,SortedDocValues,int,IntIntOpenHashMap).mjava","sourceNew":"    public OrdScoreCollector(int maxDoc,\n                             int segments,\n                             SortedDocValues collapseValues,\n                             int nullPolicy,\n                             IntIntOpenHashMap boostDocsMap) {\n      this.maxDoc = maxDoc;\n      this.contexts = new LeafReaderContext[segments];\n      this.collapsedSet = new FixedBitSet(maxDoc);\n      this.collapseValues = collapseValues;\n      int valueCount = collapseValues.getValueCount();\n      if(collapseValues instanceof MultiDocValues.MultiSortedDocValues) {\n        this.multiSortedDocValues = (MultiDocValues.MultiSortedDocValues)collapseValues;\n        this.ordinalMap = multiSortedDocValues.mapping;\n      }\n      this.ords = new int[valueCount];\n      Arrays.fill(this.ords, -1);\n      this.scores = new float[valueCount];\n      Arrays.fill(this.scores, -Float.MAX_VALUE);\n      this.nullPolicy = nullPolicy;\n      if(nullPolicy == CollapsingPostFilter.NULL_POLICY_EXPAND) {\n        nullScores = new FloatArrayList();\n      }\n\n      if(boostDocsMap != null) {\n        this.boosts = true;\n        this.boostOrds = new IntArrayList();\n        this.boostDocs = new IntArrayList();\n        int[] bd = new int[boostDocsMap.size()];\n        Iterator<IntIntCursor> it =  boostDocsMap.iterator();\n        int index = -1;\n        while(it.hasNext()) {\n          IntIntCursor cursor = it.next();\n          bd[++index] = cursor.key;\n        }\n\n        Arrays.sort(bd);\n        this.mergeBoost = new MergeBoost(bd);\n      }\n    }\n\n","sourceOld":"    public CollapsingScoreCollector(int maxDoc,\n                                    int segments,\n                                    SortedDocValues values,\n                                    int nullPolicy,\n                                    IntIntOpenHashMap boostDocs) {\n      this.maxDoc = maxDoc;\n      this.contexts = new LeafReaderContext[segments];\n      this.collapsedSet = new FixedBitSet(maxDoc);\n      this.boostDocs = boostDocs;\n      if(this.boostDocs != null) {\n        //Set the elevated docs now.\n        IntOpenHashSet boostG = new IntOpenHashSet();\n        Iterator<IntIntCursor> it = this.boostDocs.iterator();\n        while(it.hasNext()) {\n          IntIntCursor cursor = it.next();\n          int i = cursor.key;\n          this.collapsedSet.set(i);\n          int ord = values.getOrd(i);\n          if(ord > -1) {\n            boostG.add(ord);\n          }\n        }\n        boostOrds = boostG.toArray();\n        Arrays.sort(boostOrds);\n      }\n      this.values = values;\n      int valueCount = values.getValueCount();\n      this.ords = new int[valueCount];\n      Arrays.fill(this.ords, -1);\n      this.scores = new float[valueCount];\n      Arrays.fill(this.scores, -Float.MAX_VALUE);\n      this.nullPolicy = nullPolicy;\n      if(nullPolicy == CollapsingPostFilter.NULL_POLICY_EXPAND) {\n        nullScores = new FloatArrayList();\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"8ced52befdc8d88d90766aadbaac496f3fd0e4ee":["c9fb5f46e264daf5ba3860defe623a89d202dd87"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a667f95e8b4d25c8e45a6bb9ba8ce9654e7858d7":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"c9fb5f46e264daf5ba3860defe623a89d202dd87":["a667f95e8b4d25c8e45a6bb9ba8ce9654e7858d7"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["8ced52befdc8d88d90766aadbaac496f3fd0e4ee"]},"commit2Childs":{"8ced52befdc8d88d90766aadbaac496f3fd0e4ee":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["a667f95e8b4d25c8e45a6bb9ba8ce9654e7858d7"],"a667f95e8b4d25c8e45a6bb9ba8ce9654e7858d7":["c9fb5f46e264daf5ba3860defe623a89d202dd87"],"c9fb5f46e264daf5ba3860defe623a89d202dd87":["8ced52befdc8d88d90766aadbaac496f3fd0e4ee"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}