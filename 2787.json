{"path":"solr/core/src/java/org/apache/solr/search/CollapsingQParserPlugin.IntScoreCollector#IntScoreCollector(int,int,int,int,int,String,IntIntHashMap,IndexSearcher).mjava","commits":[{"id":"ece7e3f03c890461bce71fb45142b75807c28a4e","date":1583713564,"type":1,"author":"Joel Bernstein","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/CollapsingQParserPlugin.IntScoreCollector#IntScoreCollector(int,int,int,int,int,String,IntIntHashMap,IndexSearcher).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/CollapsingQParserPlugin.IntScoreCollector#IntScoreCollector(int,int,int,int,int,String,IntIntHashMap).mjava","sourceNew":"    public IntScoreCollector(int maxDoc,\n                             int segments,\n                             int nullValue,\n                             int nullPolicy,\n                             int size,\n                             String field,\n                             IntIntHashMap boostDocsMap,\n                             IndexSearcher searcher) {\n      this.maxDoc = maxDoc;\n      this.contexts = new LeafReaderContext[segments];\n      List<LeafReaderContext> con = searcher.getTopReaderContext().leaves();\n      for(int i=0; i<con.size(); i++) {\n        contexts[i] = con.get(i);\n      }\n\n      this.collapsedSet = new FixedBitSet(maxDoc);\n      this.nullValue = nullValue;\n      this.nullPolicy = nullPolicy;\n      if(nullPolicy == CollapsingPostFilter.NULL_POLICY_EXPAND) {\n        nullScores = new FloatArrayList();\n      }\n      this.cmap = new IntLongHashMap(size);\n      this.field = field;\n\n      if(boostDocsMap != null) {\n        this.boosts = true;\n        this.boostDocs = new IntArrayList();\n        this.boostKeys = new IntArrayList();\n        int[] bd = new int[boostDocsMap.size()];\n        Iterator<IntIntCursor> it =  boostDocsMap.iterator();\n        int index = -1;\n        while(it.hasNext()) {\n          IntIntCursor cursor = it.next();\n          bd[++index] = cursor.key;\n        }\n\n        Arrays.sort(bd);\n        this.mergeBoost = new MergeBoost(bd);\n        this.boosts = true;\n      }\n\n    }\n\n","sourceOld":"    public IntScoreCollector(int maxDoc,\n                             int segments,\n                             int nullValue,\n                             int nullPolicy,\n                             int size,\n                             String field,\n                             IntIntHashMap boostDocsMap) {\n      this.maxDoc = maxDoc;\n      this.contexts = new LeafReaderContext[segments];\n      this.collapsedSet = new FixedBitSet(maxDoc);\n      this.nullValue = nullValue;\n      this.nullPolicy = nullPolicy;\n      if(nullPolicy == CollapsingPostFilter.NULL_POLICY_EXPAND) {\n        nullScores = new FloatArrayList();\n      }\n      this.cmap = new IntLongHashMap(size);\n      this.field = field;\n\n      if(boostDocsMap != null) {\n        this.boosts = true;\n        this.boostDocs = new IntArrayList();\n        this.boostKeys = new IntArrayList();\n        int[] bd = new int[boostDocsMap.size()];\n        Iterator<IntIntCursor> it =  boostDocsMap.iterator();\n        int index = -1;\n        while(it.hasNext()) {\n          IntIntCursor cursor = it.next();\n          bd[++index] = cursor.key;\n        }\n\n        Arrays.sort(bd);\n        this.mergeBoost = new MergeBoost(bd);\n        this.boosts = true;\n      }\n\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a813b523bf76aa0a68013d636b6eb53cedb142a4","date":1601387389,"type":3,"author":"Guna Sekhar Dora Kovvuru","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/CollapsingQParserPlugin.IntScoreCollector#IntScoreCollector(int,int,int,int,int,String,IntIntHashMap,IndexSearcher).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/CollapsingQParserPlugin.IntScoreCollector#IntScoreCollector(int,int,int,int,int,String,IntIntHashMap,IndexSearcher).mjava","sourceNew":"    public IntScoreCollector(int maxDoc,\n                             int segments,\n                             int nullValue,\n                             int nullPolicy,\n                             int size,\n                             String field,\n                             IntIntHashMap boostDocsMap,\n                             IndexSearcher searcher) {\n      this.maxDoc = maxDoc;\n      this.contexts = new LeafReaderContext[segments];\n      List<LeafReaderContext> con = searcher.getTopReaderContext().leaves();\n      for(int i=0; i<con.size(); i++) {\n        contexts[i] = con.get(i);\n      }\n\n      this.collapsedSet = new FixedBitSet(maxDoc);\n      this.nullValue = nullValue;\n      this.nullPolicy = nullPolicy;\n      if(nullPolicy == NullPolicy.EXPAND.getCode()) {\n        nullScores = new FloatArrayList();\n      }\n      this.cmap = new IntLongHashMap(size);\n      this.field = field;\n\n      if(boostDocsMap != null) {\n        this.boosts = true;\n        this.boostDocs = new IntArrayList();\n        this.boostKeys = new IntArrayList();\n        int[] bd = new int[boostDocsMap.size()];\n        Iterator<IntIntCursor> it =  boostDocsMap.iterator();\n        int index = -1;\n        while(it.hasNext()) {\n          IntIntCursor cursor = it.next();\n          bd[++index] = cursor.key;\n        }\n\n        Arrays.sort(bd);\n        this.mergeBoost = new MergeBoost(bd);\n        this.boosts = true;\n      }\n\n    }\n\n","sourceOld":"    public IntScoreCollector(int maxDoc,\n                             int segments,\n                             int nullValue,\n                             int nullPolicy,\n                             int size,\n                             String field,\n                             IntIntHashMap boostDocsMap,\n                             IndexSearcher searcher) {\n      this.maxDoc = maxDoc;\n      this.contexts = new LeafReaderContext[segments];\n      List<LeafReaderContext> con = searcher.getTopReaderContext().leaves();\n      for(int i=0; i<con.size(); i++) {\n        contexts[i] = con.get(i);\n      }\n\n      this.collapsedSet = new FixedBitSet(maxDoc);\n      this.nullValue = nullValue;\n      this.nullPolicy = nullPolicy;\n      if(nullPolicy == CollapsingPostFilter.NULL_POLICY_EXPAND) {\n        nullScores = new FloatArrayList();\n      }\n      this.cmap = new IntLongHashMap(size);\n      this.field = field;\n\n      if(boostDocsMap != null) {\n        this.boosts = true;\n        this.boostDocs = new IntArrayList();\n        this.boostKeys = new IntArrayList();\n        int[] bd = new int[boostDocsMap.size()];\n        Iterator<IntIntCursor> it =  boostDocsMap.iterator();\n        int index = -1;\n        while(it.hasNext()) {\n          IntIntCursor cursor = it.next();\n          bd[++index] = cursor.key;\n        }\n\n        Arrays.sort(bd);\n        this.mergeBoost = new MergeBoost(bd);\n        this.boosts = true;\n      }\n\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a813b523bf76aa0a68013d636b6eb53cedb142a4":["ece7e3f03c890461bce71fb45142b75807c28a4e"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"ece7e3f03c890461bce71fb45142b75807c28a4e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a813b523bf76aa0a68013d636b6eb53cedb142a4"]},"commit2Childs":{"a813b523bf76aa0a68013d636b6eb53cedb142a4":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["ece7e3f03c890461bce71fb45142b75807c28a4e"],"ece7e3f03c890461bce71fb45142b75807c28a4e":["a813b523bf76aa0a68013d636b6eb53cedb142a4"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}