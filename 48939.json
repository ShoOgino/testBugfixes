{"path":"modules/analysis/common/src/java/org/tartarus/snowball/ext/HungarianStemmer#r_case_other().mjava","commits":[{"id":"0f080986da691a3bba7b757f43ab72cdc82b57ce","date":1273069619,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"modules/analysis/common/src/java/org/tartarus/snowball/ext/HungarianStemmer#r_case_other().mjava","pathOld":"lucene/contrib/analyzers/common/src/java/org/tartarus/snowball/ext/HungarianStemmer#r_case_other().mjava","sourceNew":"        private boolean r_case_other() {\n            int among_var;\n            // (, line 123\n            // [, line 124\n            ket = cursor;\n            // substring, line 124\n            among_var = find_among_b(a_6, 6);\n            if (among_var == 0)\n            {\n                return false;\n            }\n            // ], line 124\n            bra = cursor;\n            // call R1, line 124\n            if (!r_R1())\n            {\n                return false;\n            }\n            switch(among_var) {\n                case 0:\n                    return false;\n                case 1:\n                    // (, line 125\n                    // delete, line 125\n                    slice_del();\n                    break;\n                case 2:\n                    // (, line 126\n                    // delete, line 126\n                    slice_del();\n                    break;\n                case 3:\n                    // (, line 127\n                    // <-, line 127\n                    slice_from(\"a\");\n                    break;\n                case 4:\n                    // (, line 128\n                    // <-, line 128\n                    slice_from(\"e\");\n                    break;\n            }\n            return true;\n        }\n\n","sourceOld":"        private boolean r_case_other() {\n            int among_var;\n            // (, line 123\n            // [, line 124\n            ket = cursor;\n            // substring, line 124\n            among_var = find_among_b(a_6, 6);\n            if (among_var == 0)\n            {\n                return false;\n            }\n            // ], line 124\n            bra = cursor;\n            // call R1, line 124\n            if (!r_R1())\n            {\n                return false;\n            }\n            switch(among_var) {\n                case 0:\n                    return false;\n                case 1:\n                    // (, line 125\n                    // delete, line 125\n                    slice_del();\n                    break;\n                case 2:\n                    // (, line 126\n                    // delete, line 126\n                    slice_del();\n                    break;\n                case 3:\n                    // (, line 127\n                    // <-, line 127\n                    slice_from(\"a\");\n                    break;\n                case 4:\n                    // (, line 128\n                    // <-, line 128\n                    slice_from(\"e\");\n                    break;\n            }\n            return true;\n        }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/common/src/java/org/tartarus/snowball/ext/HungarianStemmer#r_case_other().mjava","pathOld":"modules/analysis/common/src/java/org/tartarus/snowball/ext/HungarianStemmer#r_case_other().mjava","sourceNew":"        private boolean r_case_other() {\n            int among_var;\n            // (, line 123\n            // [, line 124\n            ket = cursor;\n            // substring, line 124\n            among_var = find_among_b(a_6, 6);\n            if (among_var == 0)\n            {\n                return false;\n            }\n            // ], line 124\n            bra = cursor;\n            // call R1, line 124\n            if (!r_R1())\n            {\n                return false;\n            }\n            switch(among_var) {\n                case 0:\n                    return false;\n                case 1:\n                    // (, line 125\n                    // delete, line 125\n                    slice_del();\n                    break;\n                case 2:\n                    // (, line 126\n                    // delete, line 126\n                    slice_del();\n                    break;\n                case 3:\n                    // (, line 127\n                    // <-, line 127\n                    slice_from(\"a\");\n                    break;\n                case 4:\n                    // (, line 128\n                    // <-, line 128\n                    slice_from(\"e\");\n                    break;\n            }\n            return true;\n        }\n\n","sourceOld":"        private boolean r_case_other() {\n            int among_var;\n            // (, line 123\n            // [, line 124\n            ket = cursor;\n            // substring, line 124\n            among_var = find_among_b(a_6, 6);\n            if (among_var == 0)\n            {\n                return false;\n            }\n            // ], line 124\n            bra = cursor;\n            // call R1, line 124\n            if (!r_R1())\n            {\n                return false;\n            }\n            switch(among_var) {\n                case 0:\n                    return false;\n                case 1:\n                    // (, line 125\n                    // delete, line 125\n                    slice_del();\n                    break;\n                case 2:\n                    // (, line 126\n                    // delete, line 126\n                    slice_del();\n                    break;\n                case 3:\n                    // (, line 127\n                    // <-, line 127\n                    slice_from(\"a\");\n                    break;\n                case 4:\n                    // (, line 128\n                    // <-, line 128\n                    slice_from(\"e\");\n                    break;\n            }\n            return true;\n        }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["0f080986da691a3bba7b757f43ab72cdc82b57ce"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"0f080986da691a3bba7b757f43ab72cdc82b57ce":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b89678825b68eccaf09e6ab71675fc0b0af1e099"]},"commit2Childs":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["0f080986da691a3bba7b757f43ab72cdc82b57ce"],"0f080986da691a3bba7b757f43ab72cdc82b57ce":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}