{"path":"modules/facet/src/java/org/apache/lucene/facet/taxonomy/lucene/LuceneTaxonomyReader#setDelimiter(char).mjava","commits":[{"id":"89f15687f60bd49cd3d9de427e85c17fd9397d61","date":1309381327,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"modules/facet/src/java/org/apache/lucene/facet/taxonomy/lucene/LuceneTaxonomyReader#setDelimiter(char).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * setDelimiter changes the character that the taxonomy uses in its\n   * internal storage as a delimiter between category components. Do not\n   * use this method unless you really know what you are doing.\n   * <P>\n   * If you do use this method, make sure you call it before any other\n   * methods that actually queries the taxonomy. Moreover, make sure you\n   * always pass the same delimiter for all LuceneTaxonomyWriter and\n   * LuceneTaxonomyReader objects you create.\n   */\n  public void setDelimiter(char delimiter) {\n    this.delimiter = delimiter;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"817d8435e9135b756f08ce6710ab0baac51bdf88","date":1309986993,"type":0,"author":"Steven Rowe","isMerge":true,"pathNew":"modules/facet/src/java/org/apache/lucene/facet/taxonomy/lucene/LuceneTaxonomyReader#setDelimiter(char).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * setDelimiter changes the character that the taxonomy uses in its\n   * internal storage as a delimiter between category components. Do not\n   * use this method unless you really know what you are doing.\n   * <P>\n   * If you do use this method, make sure you call it before any other\n   * methods that actually queries the taxonomy. Moreover, make sure you\n   * always pass the same delimiter for all LuceneTaxonomyWriter and\n   * LuceneTaxonomyReader objects you create.\n   */\n  public void setDelimiter(char delimiter) {\n    this.delimiter = delimiter;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d083e83f225b11e5fdd900e83d26ddb385b6955c","date":1310029438,"type":0,"author":"Simon Willnauer","isMerge":true,"pathNew":"modules/facet/src/java/org/apache/lucene/facet/taxonomy/lucene/LuceneTaxonomyReader#setDelimiter(char).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * setDelimiter changes the character that the taxonomy uses in its\n   * internal storage as a delimiter between category components. Do not\n   * use this method unless you really know what you are doing.\n   * <P>\n   * If you do use this method, make sure you call it before any other\n   * methods that actually queries the taxonomy. Moreover, make sure you\n   * always pass the same delimiter for all LuceneTaxonomyWriter and\n   * LuceneTaxonomyReader objects you create.\n   */\n  public void setDelimiter(char delimiter) {\n    this.delimiter = delimiter;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7fea68ff83c1db2f720597dfcea5bee943a35f35","date":1317817445,"type":3,"author":"Shai Erera","isMerge":false,"pathNew":"modules/facet/src/java/org/apache/lucene/facet/taxonomy/lucene/LuceneTaxonomyReader#setDelimiter(char).mjava","pathOld":"modules/facet/src/java/org/apache/lucene/facet/taxonomy/lucene/LuceneTaxonomyReader#setDelimiter(char).mjava","sourceNew":"  /**\n   * setDelimiter changes the character that the taxonomy uses in its\n   * internal storage as a delimiter between category components. Do not\n   * use this method unless you really know what you are doing.\n   * <P>\n   * If you do use this method, make sure you call it before any other\n   * methods that actually queries the taxonomy. Moreover, make sure you\n   * always pass the same delimiter for all LuceneTaxonomyWriter and\n   * LuceneTaxonomyReader objects you create.\n   */\n  public void setDelimiter(char delimiter) {\n    ensureOpen();\n    this.delimiter = delimiter;\n  }\n\n","sourceOld":"  /**\n   * setDelimiter changes the character that the taxonomy uses in its\n   * internal storage as a delimiter between category components. Do not\n   * use this method unless you really know what you are doing.\n   * <P>\n   * If you do use this method, make sure you call it before any other\n   * methods that actually queries the taxonomy. Moreover, make sure you\n   * always pass the same delimiter for all LuceneTaxonomyWriter and\n   * LuceneTaxonomyReader objects you create.\n   */\n  public void setDelimiter(char delimiter) {\n    this.delimiter = delimiter;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ea469eab8fd0f3032f4fcde1c644a721e8309d3b","date":1320301582,"type":5,"author":"Shai Erera","isMerge":false,"pathNew":"modules/facet/src/java/org/apache/lucene/facet/taxonomy/directory/DirectoryTaxonomyReader#setDelimiter(char).mjava","pathOld":"modules/facet/src/java/org/apache/lucene/facet/taxonomy/lucene/LuceneTaxonomyReader#setDelimiter(char).mjava","sourceNew":"  /**\n   * setDelimiter changes the character that the taxonomy uses in its\n   * internal storage as a delimiter between category components. Do not\n   * use this method unless you really know what you are doing.\n   * <P>\n   * If you do use this method, make sure you call it before any other\n   * methods that actually queries the taxonomy. Moreover, make sure you\n   * always pass the same delimiter for all LuceneTaxonomyWriter and\n   * LuceneTaxonomyReader objects you create.\n   */\n  public void setDelimiter(char delimiter) {\n    ensureOpen();\n    this.delimiter = delimiter;\n  }\n\n","sourceOld":"  /**\n   * setDelimiter changes the character that the taxonomy uses in its\n   * internal storage as a delimiter between category components. Do not\n   * use this method unless you really know what you are doing.\n   * <P>\n   * If you do use this method, make sure you call it before any other\n   * methods that actually queries the taxonomy. Moreover, make sure you\n   * always pass the same delimiter for all LuceneTaxonomyWriter and\n   * LuceneTaxonomyReader objects you create.\n   */\n  public void setDelimiter(char delimiter) {\n    ensureOpen();\n    this.delimiter = delimiter;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"ea469eab8fd0f3032f4fcde1c644a721e8309d3b":["7fea68ff83c1db2f720597dfcea5bee943a35f35"],"7fea68ff83c1db2f720597dfcea5bee943a35f35":["89f15687f60bd49cd3d9de427e85c17fd9397d61"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"d083e83f225b11e5fdd900e83d26ddb385b6955c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","89f15687f60bd49cd3d9de427e85c17fd9397d61"],"89f15687f60bd49cd3d9de427e85c17fd9397d61":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"817d8435e9135b756f08ce6710ab0baac51bdf88":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","89f15687f60bd49cd3d9de427e85c17fd9397d61"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["ea469eab8fd0f3032f4fcde1c644a721e8309d3b"]},"commit2Childs":{"ea469eab8fd0f3032f4fcde1c644a721e8309d3b":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"7fea68ff83c1db2f720597dfcea5bee943a35f35":["ea469eab8fd0f3032f4fcde1c644a721e8309d3b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["d083e83f225b11e5fdd900e83d26ddb385b6955c","89f15687f60bd49cd3d9de427e85c17fd9397d61","817d8435e9135b756f08ce6710ab0baac51bdf88"],"d083e83f225b11e5fdd900e83d26ddb385b6955c":[],"89f15687f60bd49cd3d9de427e85c17fd9397d61":["7fea68ff83c1db2f720597dfcea5bee943a35f35","d083e83f225b11e5fdd900e83d26ddb385b6955c","817d8435e9135b756f08ce6710ab0baac51bdf88"],"817d8435e9135b756f08ce6710ab0baac51bdf88":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["d083e83f225b11e5fdd900e83d26ddb385b6955c","817d8435e9135b756f08ce6710ab0baac51bdf88","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}