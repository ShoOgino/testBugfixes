{"path":"solr/solrj/src/java/org/apache/solr/common/params/MultiMapSolrParams#asMultiMap(SolrParams,boolean).mjava","commits":[{"id":"ac53eb8ed1d40ceac7330e9dc2e5c258e8fc155d","date":1426480823,"type":0,"author":"Yonik Seeley","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/common/params/MultiMapSolrParams#asMultiMap(SolrParams,boolean).mjava","pathOld":"/dev/null","sourceNew":"  /** Returns a MultiMap view of the SolrParams.  A new map will be created if newCopy==true */\n  public static Map<String,String[]> asMultiMap(SolrParams params, boolean newCopy) {\n    if (params instanceof MultiMapSolrParams) {\n      Map<String,String[]> map = ((MultiMapSolrParams)params).getMap();\n      if (newCopy) {\n        return new HashMap<>(map);\n      }\n      return map;\n    } else if (params instanceof ModifiableSolrParams) {\n      Map<String,String[]> map = ((ModifiableSolrParams)params).getMap();\n      if (newCopy) {\n        return new HashMap<>(map);\n      }\n      return map;\n    } else {\n      Map<String,String[]> map = new HashMap<>();\n      Iterator<String> iterator = params.getParameterNamesIterator();\n      while (iterator.hasNext()) {\n        String name = iterator.next();\n        map.put(name, params.getParams(name));\n      }\n      return map;\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","date":1427779360,"type":0,"author":"Ryan Ernst","isMerge":true,"pathNew":"solr/solrj/src/java/org/apache/solr/common/params/MultiMapSolrParams#asMultiMap(SolrParams,boolean).mjava","pathOld":"/dev/null","sourceNew":"  /** Returns a MultiMap view of the SolrParams.  A new map will be created if newCopy==true */\n  public static Map<String,String[]> asMultiMap(SolrParams params, boolean newCopy) {\n    if (params instanceof MultiMapSolrParams) {\n      Map<String,String[]> map = ((MultiMapSolrParams)params).getMap();\n      if (newCopy) {\n        return new HashMap<>(map);\n      }\n      return map;\n    } else if (params instanceof ModifiableSolrParams) {\n      Map<String,String[]> map = ((ModifiableSolrParams)params).getMap();\n      if (newCopy) {\n        return new HashMap<>(map);\n      }\n      return map;\n    } else {\n      Map<String,String[]> map = new HashMap<>();\n      Iterator<String> iterator = params.getParameterNamesIterator();\n      while (iterator.hasNext()) {\n        String name = iterator.next();\n        map.put(name, params.getParams(name));\n      }\n      return map;\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8a1c70b003d9abbd2ce7878bce14b6ec28fb05e4","date":1523635523,"type":3,"author":"David Smiley","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/common/params/MultiMapSolrParams#asMultiMap(SolrParams,boolean).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/common/params/MultiMapSolrParams#asMultiMap(SolrParams,boolean).mjava","sourceNew":"  /** Returns a MultiMap view of the SolrParams.  A new map will be created if newCopy==true */\n  public static Map<String,String[]> asMultiMap(SolrParams params, boolean newCopy) {\n    if (params instanceof MultiMapSolrParams) {\n      Map<String,String[]> map = ((MultiMapSolrParams)params).getMap();\n      if (newCopy) {\n        return new HashMap<>(map);\n      }\n      return map;\n    } else if (params instanceof ModifiableSolrParams) {\n      Map<String,String[]> map = ((ModifiableSolrParams)params).getMap();\n      if (newCopy) {\n        return new HashMap<>(map);\n      }\n      return map;\n    } else {\n      Map<String,String[]> map = new HashMap<>();\n      for (Map.Entry<String, String[]> pair : params) {\n        map.put(pair.getKey(), pair.getValue());\n      }\n      return map;\n    }\n  }\n\n","sourceOld":"  /** Returns a MultiMap view of the SolrParams.  A new map will be created if newCopy==true */\n  public static Map<String,String[]> asMultiMap(SolrParams params, boolean newCopy) {\n    if (params instanceof MultiMapSolrParams) {\n      Map<String,String[]> map = ((MultiMapSolrParams)params).getMap();\n      if (newCopy) {\n        return new HashMap<>(map);\n      }\n      return map;\n    } else if (params instanceof ModifiableSolrParams) {\n      Map<String,String[]> map = ((ModifiableSolrParams)params).getMap();\n      if (newCopy) {\n        return new HashMap<>(map);\n      }\n      return map;\n    } else {\n      Map<String,String[]> map = new HashMap<>();\n      Iterator<String> iterator = params.getParameterNamesIterator();\n      while (iterator.hasNext()) {\n        String name = iterator.next();\n        map.put(name, params.getParams(name));\n      }\n      return map;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1cc17990871fe421019acbdd0ed59c8644b9154c","date":1523636883,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"solr/solrj/src/java/org/apache/solr/common/params/MultiMapSolrParams#asMultiMap(SolrParams,boolean).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/common/params/MultiMapSolrParams#asMultiMap(SolrParams,boolean).mjava","sourceNew":"  /** Returns a MultiMap view of the SolrParams.  A new map will be created if newCopy==true */\n  public static Map<String,String[]> asMultiMap(SolrParams params, boolean newCopy) {\n    if (params instanceof MultiMapSolrParams) {\n      Map<String,String[]> map = ((MultiMapSolrParams)params).getMap();\n      if (newCopy) {\n        return new HashMap<>(map);\n      }\n      return map;\n    } else if (params instanceof ModifiableSolrParams) {\n      Map<String,String[]> map = ((ModifiableSolrParams)params).getMap();\n      if (newCopy) {\n        return new HashMap<>(map);\n      }\n      return map;\n    } else {\n      Map<String,String[]> map = new HashMap<>();\n      for (Map.Entry<String, String[]> pair : params) {\n        map.put(pair.getKey(), pair.getValue());\n      }\n      return map;\n    }\n  }\n\n","sourceOld":"  /** Returns a MultiMap view of the SolrParams.  A new map will be created if newCopy==true */\n  public static Map<String,String[]> asMultiMap(SolrParams params, boolean newCopy) {\n    if (params instanceof MultiMapSolrParams) {\n      Map<String,String[]> map = ((MultiMapSolrParams)params).getMap();\n      if (newCopy) {\n        return new HashMap<>(map);\n      }\n      return map;\n    } else if (params instanceof ModifiableSolrParams) {\n      Map<String,String[]> map = ((ModifiableSolrParams)params).getMap();\n      if (newCopy) {\n        return new HashMap<>(map);\n      }\n      return map;\n    } else {\n      Map<String,String[]> map = new HashMap<>();\n      Iterator<String> iterator = params.getParameterNamesIterator();\n      while (iterator.hasNext()) {\n        String name = iterator.next();\n        map.put(name, params.getParams(name));\n      }\n      return map;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"1cc17990871fe421019acbdd0ed59c8644b9154c":["ac53eb8ed1d40ceac7330e9dc2e5c258e8fc155d","8a1c70b003d9abbd2ce7878bce14b6ec28fb05e4"],"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","ac53eb8ed1d40ceac7330e9dc2e5c258e8fc155d"],"8a1c70b003d9abbd2ce7878bce14b6ec28fb05e4":["ac53eb8ed1d40ceac7330e9dc2e5c258e8fc155d"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"ac53eb8ed1d40ceac7330e9dc2e5c258e8fc155d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["1cc17990871fe421019acbdd0ed59c8644b9154c"]},"commit2Childs":{"1cc17990871fe421019acbdd0ed59c8644b9154c":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":[],"8a1c70b003d9abbd2ce7878bce14b6ec28fb05e4":["1cc17990871fe421019acbdd0ed59c8644b9154c"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","ac53eb8ed1d40ceac7330e9dc2e5c258e8fc155d"],"ac53eb8ed1d40ceac7330e9dc2e5c258e8fc155d":["1cc17990871fe421019acbdd0ed59c8644b9154c","a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","8a1c70b003d9abbd2ce7878bce14b6ec28fb05e4"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}