{"path":"lucene/core/src/java/org/apache/lucene/index/IndexWriter#flushFailed(SegmentInfo).mjava","commits":[{"id":"c6bb01d819ee2a06924d25bb5683fe4dcf8cf1a7","date":1349855720,"type":0,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/IndexWriter#flushFailed(SegmentInfo).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Cleans up residuals from a segment that could not be entirely flushed due to an error\n   * @see IndexFileDeleter#refresh(String) \n   */\n  synchronized final void flushFailed(SegmentInfo info) throws IOException {\n    deleter.refresh(info.name);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"aac05884852c2a15a6aa9153063de70dea4fbcae","date":1441829939,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/IndexWriter#flushFailed(SegmentInfo).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/IndexWriter#flushFailed(SegmentInfo).mjava","sourceNew":"  /**\n   * Cleans up residuals from a segment that could not be entirely flushed due to an error\n   */\n  synchronized final void flushFailed(SegmentInfo info) throws IOException {\n    // TODO: this really should be a tragic\n    Collection<String> files;\n    try {\n      files = info.files();\n    } catch (IllegalStateException ise) {\n      // OK\n      files = null;\n    }\n    if (files != null) {\n      deleter.deleteNewFiles(files);\n    }\n  }\n\n","sourceOld":"  /**\n   * Cleans up residuals from a segment that could not be entirely flushed due to an error\n   * @see IndexFileDeleter#refresh(String) \n   */\n  synchronized final void flushFailed(SegmentInfo info) throws IOException {\n    deleter.refresh(info.name);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"86a2e8a56b368d37ef3ba7180541fa317d6fd6c7","date":1524496660,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/IndexWriter#flushFailed(SegmentInfo).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/IndexWriter#flushFailed(SegmentInfo).mjava","sourceNew":"  /**\n   * Cleans up residuals from a segment that could not be entirely flushed due to an error\n   */\n  private synchronized final void flushFailed(SegmentInfo info) throws IOException {\n    // TODO: this really should be a tragic\n    Collection<String> files;\n    try {\n      files = info.files();\n    } catch (IllegalStateException ise) {\n      // OK\n      files = null;\n    }\n    if (files != null) {\n      deleter.deleteNewFiles(files);\n    }\n  }\n\n","sourceOld":"  /**\n   * Cleans up residuals from a segment that could not be entirely flushed due to an error\n   */\n  synchronized final void flushFailed(SegmentInfo info) throws IOException {\n    // TODO: this really should be a tragic\n    Collection<String> files;\n    try {\n      files = info.files();\n    } catch (IllegalStateException ise) {\n      // OK\n      files = null;\n    }\n    if (files != null) {\n      deleter.deleteNewFiles(files);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8a428f5314daaabf8eab7c50bdc3bc14e6cd1aa2","date":1588002560,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/IndexWriter#flushFailed(SegmentInfo).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/IndexWriter#flushFailed(SegmentInfo).mjava","sourceNew":"  /**\n   * Cleans up residuals from a segment that could not be entirely flushed due to an error\n   */\n  private synchronized void flushFailed(SegmentInfo info) throws IOException {\n    // TODO: this really should be a tragic\n    Collection<String> files;\n    try {\n      files = info.files();\n    } catch (IllegalStateException ise) {\n      // OK\n      files = null;\n    }\n    if (files != null) {\n      deleter.deleteNewFiles(files);\n    }\n  }\n\n","sourceOld":"  /**\n   * Cleans up residuals from a segment that could not be entirely flushed due to an error\n   */\n  private synchronized final void flushFailed(SegmentInfo info) throws IOException {\n    // TODO: this really should be a tragic\n    Collection<String> files;\n    try {\n      files = info.files();\n    } catch (IllegalStateException ise) {\n      // OK\n      files = null;\n    }\n    if (files != null) {\n      deleter.deleteNewFiles(files);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"aac05884852c2a15a6aa9153063de70dea4fbcae":["c6bb01d819ee2a06924d25bb5683fe4dcf8cf1a7"],"86a2e8a56b368d37ef3ba7180541fa317d6fd6c7":["aac05884852c2a15a6aa9153063de70dea4fbcae"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"8a428f5314daaabf8eab7c50bdc3bc14e6cd1aa2":["86a2e8a56b368d37ef3ba7180541fa317d6fd6c7"],"c6bb01d819ee2a06924d25bb5683fe4dcf8cf1a7":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["8a428f5314daaabf8eab7c50bdc3bc14e6cd1aa2"]},"commit2Childs":{"aac05884852c2a15a6aa9153063de70dea4fbcae":["86a2e8a56b368d37ef3ba7180541fa317d6fd6c7"],"86a2e8a56b368d37ef3ba7180541fa317d6fd6c7":["8a428f5314daaabf8eab7c50bdc3bc14e6cd1aa2"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c6bb01d819ee2a06924d25bb5683fe4dcf8cf1a7"],"8a428f5314daaabf8eab7c50bdc3bc14e6cd1aa2":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"c6bb01d819ee2a06924d25bb5683fe4dcf8cf1a7":["aac05884852c2a15a6aa9153063de70dea4fbcae"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}