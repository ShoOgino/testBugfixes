{"path":"lucene/src/java/org/apache/lucene/index/values/PackedIntsImpl.IntsReader.IntsSource#ints(int).mjava","commits":[{"id":"01f60198ece724a6e96cd0b45f289cf42ff83d4f","date":1286864103,"type":0,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/values/PackedIntsImpl.IntsReader.IntsSource#ints(int).mjava","pathOld":"/dev/null","sourceNew":"      @Override\n      public long ints(int docID) {\n        // nocommit -- can we somehow avoid 2X method calls\n        // on each get? must push minValue down, and make\n        // PackedInts implement Ints.Source\n        final long val = values.get(docID);\n        // docs not having a value for that field must return a default value\n        return val == defaultValue ? 0 : minValue + val;\n      }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"39f3757037aa8f710c0cbf9a76a332de735f58b0","date":1288384416,"type":5,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/values/PackedIntsImpl.IntsReader.IntsSource#getInt(int).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/values/PackedIntsImpl.IntsReader.IntsSource#ints(int).mjava","sourceNew":"      @Override\n      public long getInt(int docID) {\n        // TODO -- can we somehow avoid 2X method calls\n        // on each get? must push minValue down, and make\n        // PackedInts implement Ints.Source\n        final long val = values.get(docID);\n        // docs not having a value for that field must return a default value\n        return val == defaultValue ? 0 : minValue + val;\n      }\n\n","sourceOld":"      @Override\n      public long ints(int docID) {\n        // nocommit -- can we somehow avoid 2X method calls\n        // on each get? must push minValue down, and make\n        // PackedInts implement Ints.Source\n        final long val = values.get(docID);\n        // docs not having a value for that field must return a default value\n        return val == defaultValue ? 0 : minValue + val;\n      }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"39f3757037aa8f710c0cbf9a76a332de735f58b0":["01f60198ece724a6e96cd0b45f289cf42ff83d4f"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"01f60198ece724a6e96cd0b45f289cf42ff83d4f":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"39f3757037aa8f710c0cbf9a76a332de735f58b0":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["01f60198ece724a6e96cd0b45f289cf42ff83d4f","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"01f60198ece724a6e96cd0b45f289cf42ff83d4f":["39f3757037aa8f710c0cbf9a76a332de735f58b0"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["39f3757037aa8f710c0cbf9a76a332de735f58b0","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}