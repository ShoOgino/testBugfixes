{"path":"lucene/facet/src/java/org/apache/lucene/util/collections/ArrayHashMap#prvt_put(K,V).mjava","commits":[{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/facet/src/java/org/apache/lucene/util/collections/ArrayHashMap#prvt_put(K,V).mjava","pathOld":"modules/facet/src/java/org/apache/lucene/util/collections/ArrayHashMap#prvt_put(K,V).mjava","sourceNew":"  /**\n   * Adds a pair to the map. Takes the first empty position from the\n   * empty-linked-list's head - {@link firstEmpty}. New pairs are always\n   * inserted to baseHash, and are followed by the old colliding pair.\n   */\n  private void prvt_put(K key, V value) {\n    // Hash entry to which the new pair would be inserted\n    int hashIndex = calcBaseHashIndex(key);\n\n    // 'Allocating' a pair from the \"Empty\" list.\n    int objectIndex = firstEmpty;\n\n    // Setting data\n    firstEmpty = next[firstEmpty];\n    values[objectIndex] = value;\n    keys[objectIndex] = key;\n\n    // Inserting the new pair as the first node in the specific hash entry\n    next[objectIndex] = baseHash[hashIndex];\n    baseHash[hashIndex] = objectIndex;\n\n    // Announcing a new pair was added!\n    ++size;\n  }\n\n","sourceOld":"  /**\n   * Adds a pair to the map. Takes the first empty position from the\n   * empty-linked-list's head - {@link firstEmpty}. New pairs are always\n   * inserted to baseHash, and are followed by the old colliding pair.\n   */\n  private void prvt_put(K key, V value) {\n    // Hash entry to which the new pair would be inserted\n    int hashIndex = calcBaseHashIndex(key);\n\n    // 'Allocating' a pair from the \"Empty\" list.\n    int objectIndex = firstEmpty;\n\n    // Setting data\n    firstEmpty = next[firstEmpty];\n    values[objectIndex] = value;\n    keys[objectIndex] = key;\n\n    // Inserting the new pair as the first node in the specific hash entry\n    next[objectIndex] = baseHash[hashIndex];\n    baseHash[hashIndex] = objectIndex;\n\n    // Announcing a new pair was added!\n    ++size;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f9be242e584b2f40a71c1736de4cbdb36bcf08a5","date":1335144174,"type":3,"author":"Christopher John Male","isMerge":false,"pathNew":"lucene/facet/src/java/org/apache/lucene/util/collections/ArrayHashMap#prvt_put(K,V).mjava","pathOld":"lucene/facet/src/java/org/apache/lucene/util/collections/ArrayHashMap#prvt_put(K,V).mjava","sourceNew":"  /**\n   * Adds a pair to the map. Takes the first empty position from the\n   * empty-linked-list's head - {@link #firstEmpty}. New pairs are always\n   * inserted to baseHash, and are followed by the old colliding pair.\n   */\n  private void prvt_put(K key, V value) {\n    // Hash entry to which the new pair would be inserted\n    int hashIndex = calcBaseHashIndex(key);\n\n    // 'Allocating' a pair from the \"Empty\" list.\n    int objectIndex = firstEmpty;\n\n    // Setting data\n    firstEmpty = next[firstEmpty];\n    values[objectIndex] = value;\n    keys[objectIndex] = key;\n\n    // Inserting the new pair as the first node in the specific hash entry\n    next[objectIndex] = baseHash[hashIndex];\n    baseHash[hashIndex] = objectIndex;\n\n    // Announcing a new pair was added!\n    ++size;\n  }\n\n","sourceOld":"  /**\n   * Adds a pair to the map. Takes the first empty position from the\n   * empty-linked-list's head - {@link firstEmpty}. New pairs are always\n   * inserted to baseHash, and are followed by the old colliding pair.\n   */\n  private void prvt_put(K key, V value) {\n    // Hash entry to which the new pair would be inserted\n    int hashIndex = calcBaseHashIndex(key);\n\n    // 'Allocating' a pair from the \"Empty\" list.\n    int objectIndex = firstEmpty;\n\n    // Setting data\n    firstEmpty = next[firstEmpty];\n    values[objectIndex] = value;\n    keys[objectIndex] = key;\n\n    // Inserting the new pair as the first node in the specific hash entry\n    next[objectIndex] = baseHash[hashIndex];\n    baseHash[hashIndex] = objectIndex;\n\n    // Announcing a new pair was added!\n    ++size;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"607428da722dcb3e86bbd11c63de8986e6275c36","date":1360334150,"type":5,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/collections/ArrayHashMap#prvt_put(K,V).mjava","pathOld":"lucene/facet/src/java/org/apache/lucene/util/collections/ArrayHashMap#prvt_put(K,V).mjava","sourceNew":"  /**\n   * Adds a pair to the map. Takes the first empty position from the\n   * empty-linked-list's head - {@link #firstEmpty}. New pairs are always\n   * inserted to baseHash, and are followed by the old colliding pair.\n   */\n  private void prvt_put(K key, V value) {\n    // Hash entry to which the new pair would be inserted\n    int hashIndex = calcBaseHashIndex(key);\n\n    // 'Allocating' a pair from the \"Empty\" list.\n    int objectIndex = firstEmpty;\n\n    // Setting data\n    firstEmpty = next[firstEmpty];\n    values[objectIndex] = value;\n    keys[objectIndex] = key;\n\n    // Inserting the new pair as the first node in the specific hash entry\n    next[objectIndex] = baseHash[hashIndex];\n    baseHash[hashIndex] = objectIndex;\n\n    // Announcing a new pair was added!\n    ++size;\n  }\n\n","sourceOld":"  /**\n   * Adds a pair to the map. Takes the first empty position from the\n   * empty-linked-list's head - {@link #firstEmpty}. New pairs are always\n   * inserted to baseHash, and are followed by the old colliding pair.\n   */\n  private void prvt_put(K key, V value) {\n    // Hash entry to which the new pair would be inserted\n    int hashIndex = calcBaseHashIndex(key);\n\n    // 'Allocating' a pair from the \"Empty\" list.\n    int objectIndex = firstEmpty;\n\n    // Setting data\n    firstEmpty = next[firstEmpty];\n    values[objectIndex] = value;\n    keys[objectIndex] = key;\n\n    // Inserting the new pair as the first node in the specific hash entry\n    next[objectIndex] = baseHash[hashIndex];\n    baseHash[hashIndex] = objectIndex;\n\n    // Announcing a new pair was added!\n    ++size;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"f9be242e584b2f40a71c1736de4cbdb36bcf08a5":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"607428da722dcb3e86bbd11c63de8986e6275c36":["f9be242e584b2f40a71c1736de4cbdb36bcf08a5"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["607428da722dcb3e86bbd11c63de8986e6275c36"]},"commit2Childs":{"f9be242e584b2f40a71c1736de4cbdb36bcf08a5":["607428da722dcb3e86bbd11c63de8986e6275c36"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["f9be242e584b2f40a71c1736de4cbdb36bcf08a5"],"607428da722dcb3e86bbd11c63de8986e6275c36":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}