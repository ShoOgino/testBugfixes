{"path":"solr/core/src/java/org/apache/solr/core/PluginInfo#toString().mjava","commits":[{"id":"c903c3d15906a3da96b8c0c2fb704491005fdbdb","date":1453508227,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/PluginInfo#toString().mjava","pathOld":"solr/src/java/org/apache/solr/core/PluginInfo#toString().mjava","sourceNew":"  @Override\n  public String toString() {\n    StringBuilder sb = new StringBuilder(\"{\");\n    if (type != null) sb.append(\"type = \" + type + \",\");\n    if (name != null) sb.append(\"name = \" + name + \",\");\n    if (className != null) sb.append(\"class = \" + className + \",\");\n    if (initArgs.size() > 0) sb.append(\"args = \" + initArgs);\n    sb.append(\"}\");\n    return sb.toString();\n  }\n\n","sourceOld":"  @Override\n  public String toString() {\n    StringBuilder sb = new StringBuilder(\"{\");\n    if (type != null) sb.append(\"type = \" + type + \",\");\n    if (name != null) sb.append(\"name = \" + name + \",\");\n    if (className != null) sb.append(\"class = \" + className + \",\");\n    if (initArgs.size() > 0) sb.append(\"args = \" + initArgs);\n    sb.append(\"}\");\n    return sb.toString();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a258fbb26824fd104ed795e5d9033d2d040049ee","date":1453508252,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/PluginInfo#toString().mjava","pathOld":"solr/src/java/org/apache/solr/core/PluginInfo#toString().mjava","sourceNew":"  @Override\n  public String toString() {\n    StringBuilder sb = new StringBuilder(\"{\");\n    if (type != null) sb.append(\"type = \" + type + \",\");\n    if (name != null) sb.append(\"name = \" + name + \",\");\n    if (className != null) sb.append(\"class = \" + className + \",\");\n    if (initArgs.size() > 0) sb.append(\"args = \" + initArgs);\n    sb.append(\"}\");\n    return sb.toString();\n  }\n\n","sourceOld":"  @Override\n  public String toString() {\n    StringBuilder sb = new StringBuilder(\"{\");\n    if (type != null) sb.append(\"type = \" + type + \",\");\n    if (name != null) sb.append(\"name = \" + name + \",\");\n    if (className != null) sb.append(\"class = \" + className + \",\");\n    if (initArgs.size() > 0) sb.append(\"args = \" + initArgs);\n    sb.append(\"}\");\n    return sb.toString();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/core/PluginInfo#toString().mjava","pathOld":"solr/src/java/org/apache/solr/core/PluginInfo#toString().mjava","sourceNew":"  @Override\n  public String toString() {\n    StringBuilder sb = new StringBuilder(\"{\");\n    if (type != null) sb.append(\"type = \" + type + \",\");\n    if (name != null) sb.append(\"name = \" + name + \",\");\n    if (className != null) sb.append(\"class = \" + className + \",\");\n    if (initArgs.size() > 0) sb.append(\"args = \" + initArgs);\n    sb.append(\"}\");\n    return sb.toString();\n  }\n\n","sourceOld":"  @Override\n  public String toString() {\n    StringBuilder sb = new StringBuilder(\"{\");\n    if (type != null) sb.append(\"type = \" + type + \",\");\n    if (name != null) sb.append(\"name = \" + name + \",\");\n    if (className != null) sb.append(\"class = \" + className + \",\");\n    if (initArgs.size() > 0) sb.append(\"args = \" + initArgs);\n    sb.append(\"}\");\n    return sb.toString();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a69439d0df009e0bb0038d1e427159f449dd670d","date":1355704683,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/PluginInfo#toString().mjava","pathOld":"solr/core/src/java/org/apache/solr/core/PluginInfo#toString().mjava","sourceNew":"  @Override\n  public String toString() {\n    StringBuilder sb = new StringBuilder(\"{\");\n    if (type != null) sb.append(\"type = \" + type + \",\");\n    if (name != null) sb.append(\"name = \" + name + \",\");\n    if (className != null) sb.append(\"class = \" + className + \",\");\n    if (initArgs != null && initArgs.size() > 0) sb.append(\"args = \" + initArgs);\n    sb.append(\"}\");\n    return sb.toString();\n  }\n\n","sourceOld":"  @Override\n  public String toString() {\n    StringBuilder sb = new StringBuilder(\"{\");\n    if (type != null) sb.append(\"type = \" + type + \",\");\n    if (name != null) sb.append(\"name = \" + name + \",\");\n    if (className != null) sb.append(\"class = \" + className + \",\");\n    if (initArgs.size() > 0) sb.append(\"args = \" + initArgs);\n    sb.append(\"}\");\n    return sb.toString();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d3fcb70cf561547c7bb1506e0cf32ca7b1287064","date":1357616416,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/core/PluginInfo#toString().mjava","pathOld":"solr/core/src/java/org/apache/solr/core/PluginInfo#toString().mjava","sourceNew":"  @Override\n  public String toString() {\n    StringBuilder sb = new StringBuilder(\"{\");\n    if (type != null) sb.append(\"type = \" + type + \",\");\n    if (name != null) sb.append(\"name = \" + name + \",\");\n    if (className != null) sb.append(\"class = \" + className + \",\");\n    if (initArgs != null && initArgs.size() > 0) sb.append(\"args = \" + initArgs);\n    sb.append(\"}\");\n    return sb.toString();\n  }\n\n","sourceOld":"  @Override\n  public String toString() {\n    StringBuilder sb = new StringBuilder(\"{\");\n    if (type != null) sb.append(\"type = \" + type + \",\");\n    if (name != null) sb.append(\"name = \" + name + \",\");\n    if (className != null) sb.append(\"class = \" + className + \",\");\n    if (initArgs.size() > 0) sb.append(\"args = \" + initArgs);\n    sb.append(\"}\");\n    return sb.toString();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0265144286422ad99682a00904cc2536b79c8535","date":1482222684,"type":3,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/PluginInfo#toString().mjava","pathOld":"solr/core/src/java/org/apache/solr/core/PluginInfo#toString().mjava","sourceNew":"  @Override\n  public String toString() {\n    StringBuilder sb = new StringBuilder(\"{\");\n    if (type != null) sb.append(\"type = \" + type + \",\");\n    if (name != null) sb.append(\"name = \" + name + \",\");\n    if (className != null) sb.append(\"class = \" + className + \",\");\n    if (attributes != null && attributes.size() > 0) sb.append(\"attributes = \" + attributes + \",\");\n    if (initArgs != null && initArgs.size() > 0) sb.append(\"args = \" + initArgs);\n    sb.append(\"}\");\n    return sb.toString();\n  }\n\n","sourceOld":"  @Override\n  public String toString() {\n    StringBuilder sb = new StringBuilder(\"{\");\n    if (type != null) sb.append(\"type = \" + type + \",\");\n    if (name != null) sb.append(\"name = \" + name + \",\");\n    if (className != null) sb.append(\"class = \" + className + \",\");\n    if (initArgs != null && initArgs.size() > 0) sb.append(\"args = \" + initArgs);\n    sb.append(\"}\");\n    return sb.toString();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5acd68c5f07f7ee604c2eeffe801f4a2d7a1a5bf","date":1482251961,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/core/PluginInfo#toString().mjava","pathOld":"solr/core/src/java/org/apache/solr/core/PluginInfo#toString().mjava","sourceNew":"  @Override\n  public String toString() {\n    StringBuilder sb = new StringBuilder(\"{\");\n    if (type != null) sb.append(\"type = \" + type + \",\");\n    if (name != null) sb.append(\"name = \" + name + \",\");\n    if (className != null) sb.append(\"class = \" + className + \",\");\n    if (attributes != null && attributes.size() > 0) sb.append(\"attributes = \" + attributes + \",\");\n    if (initArgs != null && initArgs.size() > 0) sb.append(\"args = \" + initArgs);\n    sb.append(\"}\");\n    return sb.toString();\n  }\n\n","sourceOld":"  @Override\n  public String toString() {\n    StringBuilder sb = new StringBuilder(\"{\");\n    if (type != null) sb.append(\"type = \" + type + \",\");\n    if (name != null) sb.append(\"name = \" + name + \",\");\n    if (className != null) sb.append(\"class = \" + className + \",\");\n    if (initArgs != null && initArgs.size() > 0) sb.append(\"args = \" + initArgs);\n    sb.append(\"}\");\n    return sb.toString();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2ffe681f212e5073c69955b4ad22946794c84940","date":1560182863,"type":3,"author":"Koen De Groote","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/PluginInfo#toString().mjava","pathOld":"solr/core/src/java/org/apache/solr/core/PluginInfo#toString().mjava","sourceNew":"  @Override\n  public String toString() {\n    StringBuilder sb = new StringBuilder(\"{\");\n    if (type != null) sb.append(\"type = \").append(type).append(',');\n    if (name != null) sb.append(\"name = \").append(name).append(',');\n    if (className != null) sb.append(\"class = \").append(className).append(',');\n    if (attributes != null && attributes.size() > 0) sb.append(\"attributes = \").append(attributes).append(',');\n    if (initArgs != null && initArgs.size() > 0) sb.append(\"args = \").append(initArgs);\n    sb.append(\"}\");\n    return sb.toString();\n  }\n\n","sourceOld":"  @Override\n  public String toString() {\n    StringBuilder sb = new StringBuilder(\"{\");\n    if (type != null) sb.append(\"type = \" + type + \",\");\n    if (name != null) sb.append(\"name = \" + name + \",\");\n    if (className != null) sb.append(\"class = \" + className + \",\");\n    if (attributes != null && attributes.size() > 0) sb.append(\"attributes = \" + attributes + \",\");\n    if (initArgs != null && initArgs.size() > 0) sb.append(\"args = \" + initArgs);\n    sb.append(\"}\");\n    return sb.toString();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"d3fcb70cf561547c7bb1506e0cf32ca7b1287064":["c26f00b574427b55127e869b935845554afde1fa","a69439d0df009e0bb0038d1e427159f449dd670d"],"0265144286422ad99682a00904cc2536b79c8535":["a69439d0df009e0bb0038d1e427159f449dd670d"],"2ffe681f212e5073c69955b4ad22946794c84940":["0265144286422ad99682a00904cc2536b79c8535"],"5acd68c5f07f7ee604c2eeffe801f4a2d7a1a5bf":["a69439d0df009e0bb0038d1e427159f449dd670d","0265144286422ad99682a00904cc2536b79c8535"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"c26f00b574427b55127e869b935845554afde1fa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","c903c3d15906a3da96b8c0c2fb704491005fdbdb"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a69439d0df009e0bb0038d1e427159f449dd670d":["c26f00b574427b55127e869b935845554afde1fa"],"a258fbb26824fd104ed795e5d9033d2d040049ee":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["2ffe681f212e5073c69955b4ad22946794c84940"]},"commit2Childs":{"d3fcb70cf561547c7bb1506e0cf32ca7b1287064":[],"0265144286422ad99682a00904cc2536b79c8535":["2ffe681f212e5073c69955b4ad22946794c84940","5acd68c5f07f7ee604c2eeffe801f4a2d7a1a5bf"],"2ffe681f212e5073c69955b4ad22946794c84940":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"5acd68c5f07f7ee604c2eeffe801f4a2d7a1a5bf":[],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["c26f00b574427b55127e869b935845554afde1fa"],"c26f00b574427b55127e869b935845554afde1fa":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","a69439d0df009e0bb0038d1e427159f449dd670d"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c903c3d15906a3da96b8c0c2fb704491005fdbdb","c26f00b574427b55127e869b935845554afde1fa","a258fbb26824fd104ed795e5d9033d2d040049ee"],"a69439d0df009e0bb0038d1e427159f449dd670d":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","0265144286422ad99682a00904cc2536b79c8535","5acd68c5f07f7ee604c2eeffe801f4a2d7a1a5bf"],"a258fbb26824fd104ed795e5d9033d2d040049ee":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","5acd68c5f07f7ee604c2eeffe801f4a2d7a1a5bf","a258fbb26824fd104ed795e5d9033d2d040049ee","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}