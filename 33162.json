{"path":"solr/core/src/java/org/apache/solr/search/facet/LegacyFacet#addRangeFacet(String).mjava","commits":[{"id":"ac53eb8ed1d40ceac7330e9dc2e5c258e8fc155d","date":1426480823,"type":0,"author":"Yonik Seeley","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/facet/LegacyFacet#addRangeFacet(String).mjava","pathOld":"/dev/null","sourceNew":"  protected void addRangeFacet(String field)  {\n    parseParams(FacetParams.FACET_RANGE, field);\n    Map<String,Object> cmd = new HashMap<String,Object>(5);\n    Map<String,Object> type = new HashMap<String,Object>(1);\n    type.put(\"range\", cmd);\n\n    String f = key;\n    cmd.put(\"field\", facetValue);\n    cmd.put(\"start\", required.getFieldParam(f,FacetParams.FACET_RANGE_START));\n    cmd.put(\"end\", required.getFieldParam(f,FacetParams.FACET_RANGE_END));\n    cmd.put(\"gap\", required.getFieldParam(f, FacetParams.FACET_RANGE_GAP));\n    String[] p = params.getFieldParams(f, FacetParams.FACET_RANGE_OTHER);\n    if (p != null) cmd.put(\"other\", p.length==1 ? p[0] : Arrays.asList(p));\n    p = params.getFieldParams(f, FacetParams.FACET_RANGE_INCLUDE);\n    if (p != null) cmd.put(\"include\", p.length==1 ? p[0] : Arrays.asList(p));\n\n    final int mincount = params.getFieldInt(f,FacetParams.FACET_MINCOUNT, 0);\n    cmd.put(\"mincount\", mincount);\n\n    boolean hardend = params.getFieldBool(f,FacetParams.FACET_RANGE_HARD_END,false);\n    if (hardend) cmd.put(\"hardend\", hardend);\n\n    addSub(key, type);\n    handleSubs(cmd);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","date":1427779360,"type":0,"author":"Ryan Ernst","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/search/facet/LegacyFacet#addRangeFacet(String).mjava","pathOld":"/dev/null","sourceNew":"  protected void addRangeFacet(String field)  {\n    parseParams(FacetParams.FACET_RANGE, field);\n    Map<String,Object> cmd = new HashMap<String,Object>(5);\n    Map<String,Object> type = new HashMap<String,Object>(1);\n    type.put(\"range\", cmd);\n\n    String f = key;\n    cmd.put(\"field\", facetValue);\n    cmd.put(\"start\", required.getFieldParam(f,FacetParams.FACET_RANGE_START));\n    cmd.put(\"end\", required.getFieldParam(f,FacetParams.FACET_RANGE_END));\n    cmd.put(\"gap\", required.getFieldParam(f, FacetParams.FACET_RANGE_GAP));\n    String[] p = params.getFieldParams(f, FacetParams.FACET_RANGE_OTHER);\n    if (p != null) cmd.put(\"other\", p.length==1 ? p[0] : Arrays.asList(p));\n    p = params.getFieldParams(f, FacetParams.FACET_RANGE_INCLUDE);\n    if (p != null) cmd.put(\"include\", p.length==1 ? p[0] : Arrays.asList(p));\n\n    final int mincount = params.getFieldInt(f,FacetParams.FACET_MINCOUNT, 0);\n    cmd.put(\"mincount\", mincount);\n\n    boolean hardend = params.getFieldBool(f,FacetParams.FACET_RANGE_HARD_END,false);\n    if (hardend) cmd.put(\"hardend\", hardend);\n\n    addSub(key, type);\n    handleSubs(cmd);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","ac53eb8ed1d40ceac7330e9dc2e5c258e8fc155d"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"ac53eb8ed1d40ceac7330e9dc2e5c258e8fc155d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["ac53eb8ed1d40ceac7330e9dc2e5c258e8fc155d"]},"commit2Childs":{"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","ac53eb8ed1d40ceac7330e9dc2e5c258e8fc155d"],"ac53eb8ed1d40ceac7330e9dc2e5c258e8fc155d":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}