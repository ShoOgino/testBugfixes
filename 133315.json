{"path":"lucene/src/java/org/apache/lucene/index/codecs/preflex/SegmentTermEnum#next().mjava","commits":[{"id":"955c32f886db6f6356c9fcdea6b1f1cb4effda24","date":1270581567,"type":1,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/preflex/SegmentTermEnum#next().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/SegmentTermEnum#next().mjava","sourceNew":"  /** Increments the enumeration to the next element.  True if one exists.*/\n  @Override\n  public final boolean next() throws IOException {\n    if (position++ >= size - 1) {\n      prevBuffer.set(termBuffer);\n      termBuffer.reset();\n      return false;\n    }\n\n    prevBuffer.set(termBuffer);\n    termBuffer.read(input, fieldInfos);\n\n    termInfo.docFreq = input.readVInt();\t  // read doc freq\n    termInfo.freqPointer += input.readVLong();\t  // read freq pointer\n    termInfo.proxPointer += input.readVLong();\t  // read prox pointer\n    \n    if(format == -1){\n    //  just read skipOffset in order to increment  file pointer; \n    // value is never used since skipTo is switched off\n      if (!isIndex) {\n        if (termInfo.docFreq > formatM1SkipInterval) {\n          termInfo.skipOffset = input.readVInt(); \n        }\n      }\n    }\n    else{\n      if (termInfo.docFreq >= skipInterval) \n        termInfo.skipOffset = input.readVInt();\n    }\n    \n    if (isIndex)\n      indexPointer += input.readVLong();\t  // read index pointer\n\n    return true;\n  }\n\n","sourceOld":"  /** Increments the enumeration to the next element.  True if one exists.*/\n  @Override\n  public final boolean next() throws IOException {\n    if (position++ >= size - 1) {\n      prevBuffer.set(termBuffer);\n      termBuffer.reset();\n      return false;\n    }\n\n    prevBuffer.set(termBuffer);\n    termBuffer.read(input, fieldInfos);\n\n    termInfo.docFreq = input.readVInt();\t  // read doc freq\n    termInfo.freqPointer += input.readVLong();\t  // read freq pointer\n    termInfo.proxPointer += input.readVLong();\t  // read prox pointer\n    \n    if(format == -1){\n    //  just read skipOffset in order to increment  file pointer; \n    // value is never used since skipTo is switched off\n      if (!isIndex) {\n        if (termInfo.docFreq > formatM1SkipInterval) {\n          termInfo.skipOffset = input.readVInt(); \n        }\n      }\n    }\n    else{\n      if (termInfo.docFreq >= skipInterval) \n        termInfo.skipOffset = input.readVInt();\n    }\n    \n    if (isIndex)\n      indexPointer += input.readVLong();\t  // read index pointer\n\n    return true;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"28427ef110c4c5bf5b4057731b83110bd1e13724","date":1276701452,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/preflex/SegmentTermEnum#next().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/preflex/SegmentTermEnum#next().mjava","sourceNew":"  /** Increments the enumeration to the next element.  True if one exists.*/\n  public final boolean next() throws IOException {\n    if (position++ >= size - 1) {\n      prevBuffer.set(termBuffer);\n      termBuffer.reset();\n      return false;\n    }\n\n    prevBuffer.set(termBuffer);\n    termBuffer.read(input, fieldInfos);\n\n    termInfo.docFreq = input.readVInt();\t  // read doc freq\n    termInfo.freqPointer += input.readVLong();\t  // read freq pointer\n    termInfo.proxPointer += input.readVLong();\t  // read prox pointer\n    \n    if(format == -1){\n    //  just read skipOffset in order to increment  file pointer; \n    // value is never used since skipTo is switched off\n      if (!isIndex) {\n        if (termInfo.docFreq > formatM1SkipInterval) {\n          termInfo.skipOffset = input.readVInt(); \n        }\n      }\n    }\n    else{\n      if (termInfo.docFreq >= skipInterval) \n        termInfo.skipOffset = input.readVInt();\n    }\n    \n    if (isIndex)\n      indexPointer += input.readVLong();\t  // read index pointer\n\n    return true;\n  }\n\n","sourceOld":"  /** Increments the enumeration to the next element.  True if one exists.*/\n  @Override\n  public final boolean next() throws IOException {\n    if (position++ >= size - 1) {\n      prevBuffer.set(termBuffer);\n      termBuffer.reset();\n      return false;\n    }\n\n    prevBuffer.set(termBuffer);\n    termBuffer.read(input, fieldInfos);\n\n    termInfo.docFreq = input.readVInt();\t  // read doc freq\n    termInfo.freqPointer += input.readVLong();\t  // read freq pointer\n    termInfo.proxPointer += input.readVLong();\t  // read prox pointer\n    \n    if(format == -1){\n    //  just read skipOffset in order to increment  file pointer; \n    // value is never used since skipTo is switched off\n      if (!isIndex) {\n        if (termInfo.docFreq > formatM1SkipInterval) {\n          termInfo.skipOffset = input.readVInt(); \n        }\n      }\n    }\n    else{\n      if (termInfo.docFreq >= skipInterval) \n        termInfo.skipOffset = input.readVInt();\n    }\n    \n    if (isIndex)\n      indexPointer += input.readVLong();\t  // read index pointer\n\n    return true;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"08932c793647a36953d1816b1060121f48820d3f","date":1277386540,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/preflex/SegmentTermEnum#next().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/preflex/SegmentTermEnum#next().mjava","sourceNew":"  /** Increments the enumeration to the next element.  True if one exists.*/\n  public final boolean next() throws IOException {\n    if (position++ >= size - 1) {\n      prevBuffer.set(termBuffer);\n      termBuffer.reset();\n      return false;\n    }\n\n    prevBuffer.set(termBuffer);\n    termBuffer.read(input, fieldInfos);\n    newSuffixStart = termBuffer.newSuffixStart;\n\n    termInfo.docFreq = input.readVInt();\t  // read doc freq\n    termInfo.freqPointer += input.readVLong();\t  // read freq pointer\n    termInfo.proxPointer += input.readVLong();\t  // read prox pointer\n    \n    if(format == -1){\n    //  just read skipOffset in order to increment  file pointer; \n    // value is never used since skipTo is switched off\n      if (!isIndex) {\n        if (termInfo.docFreq > formatM1SkipInterval) {\n          termInfo.skipOffset = input.readVInt(); \n        }\n      }\n    }\n    else{\n      if (termInfo.docFreq >= skipInterval) \n        termInfo.skipOffset = input.readVInt();\n    }\n    \n    if (isIndex)\n      indexPointer += input.readVLong();\t  // read index pointer\n\n    return true;\n  }\n\n","sourceOld":"  /** Increments the enumeration to the next element.  True if one exists.*/\n  public final boolean next() throws IOException {\n    if (position++ >= size - 1) {\n      prevBuffer.set(termBuffer);\n      termBuffer.reset();\n      return false;\n    }\n\n    prevBuffer.set(termBuffer);\n    termBuffer.read(input, fieldInfos);\n\n    termInfo.docFreq = input.readVInt();\t  // read doc freq\n    termInfo.freqPointer += input.readVLong();\t  // read freq pointer\n    termInfo.proxPointer += input.readVLong();\t  // read prox pointer\n    \n    if(format == -1){\n    //  just read skipOffset in order to increment  file pointer; \n    // value is never used since skipTo is switched off\n      if (!isIndex) {\n        if (termInfo.docFreq > formatM1SkipInterval) {\n          termInfo.skipOffset = input.readVInt(); \n        }\n      }\n    }\n    else{\n      if (termInfo.docFreq >= skipInterval) \n        termInfo.skipOffset = input.readVInt();\n    }\n    \n    if (isIndex)\n      indexPointer += input.readVLong();\t  // read index pointer\n\n    return true;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5f4e87790277826a2aea119328600dfb07761f32","date":1279827275,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/preflex/SegmentTermEnum#next().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/preflex/SegmentTermEnum#next().mjava","sourceNew":"  /** Increments the enumeration to the next element.  True if one exists.*/\n  public final boolean next() throws IOException {\n    if (position++ >= size - 1) {\n      prevBuffer.set(termBuffer);\n      termBuffer.reset();\n      return false;\n    }\n\n    prevBuffer.set(termBuffer);\n    termBuffer.read(input, fieldInfos);\n    newSuffixStart = termBuffer.newSuffixStart;\n\n    termInfo.docFreq = input.readVInt();\t  // read doc freq\n    termInfo.freqPointer += input.readVLong();\t  // read freq pointer\n    termInfo.proxPointer += input.readVLong();\t  // read prox pointer\n    \n    if(format == -1){\n    //  just read skipOffset in order to increment  file pointer; \n    // value is never used since skipTo is switched off\n      if (!isIndex) {\n        if (termInfo.docFreq > formatM1SkipInterval) {\n          termInfo.skipOffset = input.readVInt(); \n        }\n      }\n    }\n    else{\n      if (termInfo.docFreq >= skipInterval) \n        termInfo.skipOffset = input.readVInt();\n    }\n    \n    if (isIndex)\n      indexPointer += input.readVLong();\t  // read index pointer\n\n    return true;\n  }\n\n","sourceOld":"  /** Increments the enumeration to the next element.  True if one exists.*/\n  @Override\n  public final boolean next() throws IOException {\n    if (position++ >= size - 1) {\n      prevBuffer.set(termBuffer);\n      termBuffer.reset();\n      return false;\n    }\n\n    prevBuffer.set(termBuffer);\n    termBuffer.read(input, fieldInfos);\n\n    termInfo.docFreq = input.readVInt();\t  // read doc freq\n    termInfo.freqPointer += input.readVLong();\t  // read freq pointer\n    termInfo.proxPointer += input.readVLong();\t  // read prox pointer\n    \n    if(format == -1){\n    //  just read skipOffset in order to increment  file pointer; \n    // value is never used since skipTo is switched off\n      if (!isIndex) {\n        if (termInfo.docFreq > formatM1SkipInterval) {\n          termInfo.skipOffset = input.readVInt(); \n        }\n      }\n    }\n    else{\n      if (termInfo.docFreq >= skipInterval) \n        termInfo.skipOffset = input.readVInt();\n    }\n    \n    if (isIndex)\n      indexPointer += input.readVLong();\t  // read index pointer\n\n    return true;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"163fe85a71d778fd2b7747f65ca27b54829e2e57","date":1279898785,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/preflex/SegmentTermEnum#next().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/preflex/SegmentTermEnum#next().mjava","sourceNew":"  /** Increments the enumeration to the next element.  True if one exists.*/\n  public final boolean next() throws IOException {\n    prevBuffer.set(termBuffer);\n    //System.out.println(\"  ste setPrev=\" + prev() + \" this=\" + this);\n\n    if (position++ >= size - 1) {\n      termBuffer.reset();\n      //System.out.println(\"    EOF\");\n      return false;\n    }\n\n    termBuffer.read(input, fieldInfos);\n    newSuffixStart = termBuffer.newSuffixStart;\n\n    termInfo.docFreq = input.readVInt();\t  // read doc freq\n    termInfo.freqPointer += input.readVLong();\t  // read freq pointer\n    termInfo.proxPointer += input.readVLong();\t  // read prox pointer\n    \n    if(format == -1){\n    //  just read skipOffset in order to increment  file pointer; \n    // value is never used since skipTo is switched off\n      if (!isIndex) {\n        if (termInfo.docFreq > formatM1SkipInterval) {\n          termInfo.skipOffset = input.readVInt(); \n        }\n      }\n    }\n    else{\n      if (termInfo.docFreq >= skipInterval) \n        termInfo.skipOffset = input.readVInt();\n    }\n    \n    if (isIndex)\n      indexPointer += input.readVLong();\t  // read index pointer\n\n    //System.out.println(\"  ste ret term=\" + term());\n    return true;\n  }\n\n","sourceOld":"  /** Increments the enumeration to the next element.  True if one exists.*/\n  public final boolean next() throws IOException {\n    if (position++ >= size - 1) {\n      prevBuffer.set(termBuffer);\n      termBuffer.reset();\n      return false;\n    }\n\n    prevBuffer.set(termBuffer);\n    termBuffer.read(input, fieldInfos);\n    newSuffixStart = termBuffer.newSuffixStart;\n\n    termInfo.docFreq = input.readVInt();\t  // read doc freq\n    termInfo.freqPointer += input.readVLong();\t  // read freq pointer\n    termInfo.proxPointer += input.readVLong();\t  // read prox pointer\n    \n    if(format == -1){\n    //  just read skipOffset in order to increment  file pointer; \n    // value is never used since skipTo is switched off\n      if (!isIndex) {\n        if (termInfo.docFreq > formatM1SkipInterval) {\n          termInfo.skipOffset = input.readVInt(); \n        }\n      }\n    }\n    else{\n      if (termInfo.docFreq >= skipInterval) \n        termInfo.skipOffset = input.readVInt();\n    }\n    \n    if (isIndex)\n      indexPointer += input.readVLong();\t  // read index pointer\n\n    return true;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4b103252dee6afa1b6d7a622c773d178788eb85a","date":1280180143,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/preflex/SegmentTermEnum#next().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/preflex/SegmentTermEnum#next().mjava","sourceNew":"  /** Increments the enumeration to the next element.  True if one exists.*/\n  public final boolean next() throws IOException {\n    prevBuffer.set(termBuffer);\n    //System.out.println(\"  ste setPrev=\" + prev() + \" this=\" + this);\n\n    if (position++ >= size - 1) {\n      termBuffer.reset();\n      //System.out.println(\"    EOF\");\n      return false;\n    }\n\n    termBuffer.read(input, fieldInfos);\n    newSuffixStart = termBuffer.newSuffixStart;\n\n    termInfo.docFreq = input.readVInt();\t  // read doc freq\n    termInfo.freqPointer += input.readVLong();\t  // read freq pointer\n    termInfo.proxPointer += input.readVLong();\t  // read prox pointer\n    \n    if(format == -1){\n    //  just read skipOffset in order to increment  file pointer; \n    // value is never used since skipTo is switched off\n      if (!isIndex) {\n        if (termInfo.docFreq > formatM1SkipInterval) {\n          termInfo.skipOffset = input.readVInt(); \n        }\n      }\n    }\n    else{\n      if (termInfo.docFreq >= skipInterval) \n        termInfo.skipOffset = input.readVInt();\n    }\n    \n    if (isIndex)\n      indexPointer += input.readVLong();\t  // read index pointer\n\n    //System.out.println(\"  ste ret term=\" + term());\n    return true;\n  }\n\n","sourceOld":"  /** Increments the enumeration to the next element.  True if one exists.*/\n  public final boolean next() throws IOException {\n    if (position++ >= size - 1) {\n      prevBuffer.set(termBuffer);\n      termBuffer.reset();\n      return false;\n    }\n\n    prevBuffer.set(termBuffer);\n    termBuffer.read(input, fieldInfos);\n    newSuffixStart = termBuffer.newSuffixStart;\n\n    termInfo.docFreq = input.readVInt();\t  // read doc freq\n    termInfo.freqPointer += input.readVLong();\t  // read freq pointer\n    termInfo.proxPointer += input.readVLong();\t  // read prox pointer\n    \n    if(format == -1){\n    //  just read skipOffset in order to increment  file pointer; \n    // value is never used since skipTo is switched off\n      if (!isIndex) {\n        if (termInfo.docFreq > formatM1SkipInterval) {\n          termInfo.skipOffset = input.readVInt(); \n        }\n      }\n    }\n    else{\n      if (termInfo.docFreq >= skipInterval) \n        termInfo.skipOffset = input.readVInt();\n    }\n    \n    if (isIndex)\n      indexPointer += input.readVLong();\t  // read index pointer\n\n    return true;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3242a09f703274d3b9283f2064a1a33064b53a1b","date":1280263474,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/preflex/SegmentTermEnum#next().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/preflex/SegmentTermEnum#next().mjava","sourceNew":"  /** Increments the enumeration to the next element.  True if one exists.*/\n  public final boolean next() throws IOException {\n    prevBuffer.set(termBuffer);\n    //System.out.println(\"  ste setPrev=\" + prev() + \" this=\" + this);\n\n    if (position++ >= size - 1) {\n      termBuffer.reset();\n      //System.out.println(\"    EOF\");\n      return false;\n    }\n\n    termBuffer.read(input, fieldInfos);\n    newSuffixStart = termBuffer.newSuffixStart;\n\n    termInfo.docFreq = input.readVInt();\t  // read doc freq\n    termInfo.freqPointer += input.readVLong();\t  // read freq pointer\n    termInfo.proxPointer += input.readVLong();\t  // read prox pointer\n    \n    if(format == -1){\n    //  just read skipOffset in order to increment  file pointer; \n    // value is never used since skipTo is switched off\n      if (!isIndex) {\n        if (termInfo.docFreq > formatM1SkipInterval) {\n          termInfo.skipOffset = input.readVInt(); \n        }\n      }\n    }\n    else{\n      if (termInfo.docFreq >= skipInterval) \n        termInfo.skipOffset = input.readVInt();\n    }\n    \n    if (isIndex)\n      indexPointer += input.readVLong();\t  // read index pointer\n\n    //System.out.println(\"  ste ret term=\" + term());\n    return true;\n  }\n\n","sourceOld":"  /** Increments the enumeration to the next element.  True if one exists.*/\n  public final boolean next() throws IOException {\n    if (position++ >= size - 1) {\n      prevBuffer.set(termBuffer);\n      termBuffer.reset();\n      return false;\n    }\n\n    prevBuffer.set(termBuffer);\n    termBuffer.read(input, fieldInfos);\n    newSuffixStart = termBuffer.newSuffixStart;\n\n    termInfo.docFreq = input.readVInt();\t  // read doc freq\n    termInfo.freqPointer += input.readVLong();\t  // read freq pointer\n    termInfo.proxPointer += input.readVLong();\t  // read prox pointer\n    \n    if(format == -1){\n    //  just read skipOffset in order to increment  file pointer; \n    // value is never used since skipTo is switched off\n      if (!isIndex) {\n        if (termInfo.docFreq > formatM1SkipInterval) {\n          termInfo.skipOffset = input.readVInt(); \n        }\n      }\n    }\n    else{\n      if (termInfo.docFreq >= skipInterval) \n        termInfo.skipOffset = input.readVInt();\n    }\n    \n    if (isIndex)\n      indexPointer += input.readVLong();\t  // read index pointer\n\n    return true;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7719357817c3f1b2d72fa8ee506d599cf7624225","date":1280514100,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/preflex/SegmentTermEnum#next().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/preflex/SegmentTermEnum#next().mjava","sourceNew":"  /** Increments the enumeration to the next element.  True if one exists.*/\n  public final boolean next() throws IOException {\n    prevBuffer.set(termBuffer);\n    //System.out.println(\"  ste setPrev=\" + prev() + \" this=\" + this);\n\n    if (position++ >= size - 1) {\n      termBuffer.reset();\n      //System.out.println(\"    EOF\");\n      return false;\n    }\n\n    termBuffer.read(input, fieldInfos);\n    newSuffixStart = termBuffer.newSuffixStart;\n\n    termInfo.docFreq = input.readVInt();\t  // read doc freq\n    termInfo.freqPointer += input.readVLong();\t  // read freq pointer\n    termInfo.proxPointer += input.readVLong();\t  // read prox pointer\n    \n    if (termInfo.docFreq >= skipInterval) \n      termInfo.skipOffset = input.readVInt();\n\n    if (isIndex)\n      indexPointer += input.readVLong();\t  // read index pointer\n\n    //System.out.println(\"  ste ret term=\" + term());\n    return true;\n  }\n\n","sourceOld":"  /** Increments the enumeration to the next element.  True if one exists.*/\n  public final boolean next() throws IOException {\n    prevBuffer.set(termBuffer);\n    //System.out.println(\"  ste setPrev=\" + prev() + \" this=\" + this);\n\n    if (position++ >= size - 1) {\n      termBuffer.reset();\n      //System.out.println(\"    EOF\");\n      return false;\n    }\n\n    termBuffer.read(input, fieldInfos);\n    newSuffixStart = termBuffer.newSuffixStart;\n\n    termInfo.docFreq = input.readVInt();\t  // read doc freq\n    termInfo.freqPointer += input.readVLong();\t  // read freq pointer\n    termInfo.proxPointer += input.readVLong();\t  // read prox pointer\n    \n    if(format == -1){\n    //  just read skipOffset in order to increment  file pointer; \n    // value is never used since skipTo is switched off\n      if (!isIndex) {\n        if (termInfo.docFreq > formatM1SkipInterval) {\n          termInfo.skipOffset = input.readVInt(); \n        }\n      }\n    }\n    else{\n      if (termInfo.docFreq >= skipInterval) \n        termInfo.skipOffset = input.readVInt();\n    }\n    \n    if (isIndex)\n      indexPointer += input.readVLong();\t  // read index pointer\n\n    //System.out.println(\"  ste ret term=\" + term());\n    return true;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","date":1292920096,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/preflex/SegmentTermEnum#next().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/preflex/SegmentTermEnum#next().mjava","sourceNew":"  /** Increments the enumeration to the next element.  True if one exists.*/\n  public final boolean next() throws IOException {\n    prevBuffer.set(termBuffer);\n    //System.out.println(\"  ste setPrev=\" + prev() + \" this=\" + this);\n\n    if (position++ >= size - 1) {\n      termBuffer.reset();\n      //System.out.println(\"    EOF\");\n      return false;\n    }\n\n    termBuffer.read(input, fieldInfos);\n    newSuffixStart = termBuffer.newSuffixStart;\n\n    termInfo.docFreq = input.readVInt();\t  // read doc freq\n    termInfo.freqPointer += input.readVLong();\t  // read freq pointer\n    termInfo.proxPointer += input.readVLong();\t  // read prox pointer\n    \n    if (termInfo.docFreq >= skipInterval) \n      termInfo.skipOffset = input.readVInt();\n\n    if (isIndex)\n      indexPointer += input.readVLong();\t  // read index pointer\n\n    //System.out.println(\"  ste ret term=\" + term());\n    return true;\n  }\n\n","sourceOld":"  /** Increments the enumeration to the next element.  True if one exists.*/\n  public final boolean next() throws IOException {\n    prevBuffer.set(termBuffer);\n    //System.out.println(\"  ste setPrev=\" + prev() + \" this=\" + this);\n\n    if (position++ >= size - 1) {\n      termBuffer.reset();\n      //System.out.println(\"    EOF\");\n      return false;\n    }\n\n    termBuffer.read(input, fieldInfos);\n    newSuffixStart = termBuffer.newSuffixStart;\n\n    termInfo.docFreq = input.readVInt();\t  // read doc freq\n    termInfo.freqPointer += input.readVLong();\t  // read freq pointer\n    termInfo.proxPointer += input.readVLong();\t  // read prox pointer\n    \n    if(format == -1){\n    //  just read skipOffset in order to increment  file pointer; \n    // value is never used since skipTo is switched off\n      if (!isIndex) {\n        if (termInfo.docFreq > formatM1SkipInterval) {\n          termInfo.skipOffset = input.readVInt(); \n        }\n      }\n    }\n    else{\n      if (termInfo.docFreq >= skipInterval) \n        termInfo.skipOffset = input.readVInt();\n    }\n    \n    if (isIndex)\n      indexPointer += input.readVLong();\t  // read index pointer\n\n    //System.out.println(\"  ste ret term=\" + term());\n    return true;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7b91922b55d15444d554721b352861d028eb8278","date":1320421415,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/lucene3x/SegmentTermEnum#next().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/preflex/SegmentTermEnum#next().mjava","sourceNew":"  /** Increments the enumeration to the next element.  True if one exists.*/\n  public final boolean next() throws IOException {\n    prevBuffer.set(termBuffer);\n    //System.out.println(\"  ste setPrev=\" + prev() + \" this=\" + this);\n\n    if (position++ >= size - 1) {\n      termBuffer.reset();\n      //System.out.println(\"    EOF\");\n      return false;\n    }\n\n    termBuffer.read(input, fieldInfos);\n    newSuffixStart = termBuffer.newSuffixStart;\n\n    termInfo.docFreq = input.readVInt();\t  // read doc freq\n    termInfo.freqPointer += input.readVLong();\t  // read freq pointer\n    termInfo.proxPointer += input.readVLong();\t  // read prox pointer\n    \n    if (termInfo.docFreq >= skipInterval) \n      termInfo.skipOffset = input.readVInt();\n\n    if (isIndex)\n      indexPointer += input.readVLong();\t  // read index pointer\n\n    //System.out.println(\"  ste ret term=\" + term());\n    return true;\n  }\n\n","sourceOld":"  /** Increments the enumeration to the next element.  True if one exists.*/\n  public final boolean next() throws IOException {\n    prevBuffer.set(termBuffer);\n    //System.out.println(\"  ste setPrev=\" + prev() + \" this=\" + this);\n\n    if (position++ >= size - 1) {\n      termBuffer.reset();\n      //System.out.println(\"    EOF\");\n      return false;\n    }\n\n    termBuffer.read(input, fieldInfos);\n    newSuffixStart = termBuffer.newSuffixStart;\n\n    termInfo.docFreq = input.readVInt();\t  // read doc freq\n    termInfo.freqPointer += input.readVLong();\t  // read freq pointer\n    termInfo.proxPointer += input.readVLong();\t  // read prox pointer\n    \n    if (termInfo.docFreq >= skipInterval) \n      termInfo.skipOffset = input.readVInt();\n\n    if (isIndex)\n      indexPointer += input.readVLong();\t  // read index pointer\n\n    //System.out.println(\"  ste ret term=\" + term());\n    return true;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"7b91922b55d15444d554721b352861d028eb8278":["7719357817c3f1b2d72fa8ee506d599cf7624225"],"08932c793647a36953d1816b1060121f48820d3f":["28427ef110c4c5bf5b4057731b83110bd1e13724"],"3242a09f703274d3b9283f2064a1a33064b53a1b":["5f4e87790277826a2aea119328600dfb07761f32","4b103252dee6afa1b6d7a622c773d178788eb85a"],"4b103252dee6afa1b6d7a622c773d178788eb85a":["08932c793647a36953d1816b1060121f48820d3f","163fe85a71d778fd2b7747f65ca27b54829e2e57"],"163fe85a71d778fd2b7747f65ca27b54829e2e57":["08932c793647a36953d1816b1060121f48820d3f"],"7719357817c3f1b2d72fa8ee506d599cf7624225":["4b103252dee6afa1b6d7a622c773d178788eb85a"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"28427ef110c4c5bf5b4057731b83110bd1e13724":["955c32f886db6f6356c9fcdea6b1f1cb4effda24"],"955c32f886db6f6356c9fcdea6b1f1cb4effda24":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"5f4e87790277826a2aea119328600dfb07761f32":["955c32f886db6f6356c9fcdea6b1f1cb4effda24","08932c793647a36953d1816b1060121f48820d3f"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["3242a09f703274d3b9283f2064a1a33064b53a1b","7719357817c3f1b2d72fa8ee506d599cf7624225"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["7b91922b55d15444d554721b352861d028eb8278"]},"commit2Childs":{"7b91922b55d15444d554721b352861d028eb8278":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"08932c793647a36953d1816b1060121f48820d3f":["4b103252dee6afa1b6d7a622c773d178788eb85a","163fe85a71d778fd2b7747f65ca27b54829e2e57","5f4e87790277826a2aea119328600dfb07761f32"],"3242a09f703274d3b9283f2064a1a33064b53a1b":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a"],"4b103252dee6afa1b6d7a622c773d178788eb85a":["3242a09f703274d3b9283f2064a1a33064b53a1b","7719357817c3f1b2d72fa8ee506d599cf7624225"],"163fe85a71d778fd2b7747f65ca27b54829e2e57":["4b103252dee6afa1b6d7a622c773d178788eb85a"],"7719357817c3f1b2d72fa8ee506d599cf7624225":["7b91922b55d15444d554721b352861d028eb8278","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["955c32f886db6f6356c9fcdea6b1f1cb4effda24"],"28427ef110c4c5bf5b4057731b83110bd1e13724":["08932c793647a36953d1816b1060121f48820d3f"],"955c32f886db6f6356c9fcdea6b1f1cb4effda24":["28427ef110c4c5bf5b4057731b83110bd1e13724","5f4e87790277826a2aea119328600dfb07761f32"],"5f4e87790277826a2aea119328600dfb07761f32":["3242a09f703274d3b9283f2064a1a33064b53a1b"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}