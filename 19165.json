{"path":"lucene/core/src/java/org/apache/lucene/util/packed/Direct32#fill(int,int,long).mjava","commits":[{"id":"747628bb19a950ac2141b16756bdce9a47e94cc2","date":1338661284,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/packed/Direct32#fill(int,int,long).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public void fill(int fromIndex, int toIndex, long val) {\n    assert (val & 0xffffffffL) == val;\n    Arrays.fill(values, fromIndex, toIndex, (int) val);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"55110eb60c5105294fc2ae7912d82b750865aa58","date":1341389822,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/packed/Direct32#fill(int,int,long).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/packed/Direct32#fill(int,int,long).mjava","sourceNew":"  @Override\n  public void fill(int fromIndex, int toIndex, long val) {\n    assert val == (val & 0xFFFFFFFFL);\n    Arrays.fill(values, fromIndex, toIndex, (int) val);\n  }\n\n","sourceOld":"  @Override\n  public void fill(int fromIndex, int toIndex, long val) {\n    assert (val & 0xffffffffL) == val;\n    Arrays.fill(values, fromIndex, toIndex, (int) val);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fe33227f6805edab2036cbb80645cc4e2d1fa424","date":1342713534,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/util/packed/Direct32#fill(int,int,long).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/packed/Direct32#fill(int,int,long).mjava","sourceNew":"  @Override\n  public void fill(int fromIndex, int toIndex, long val) {\n    assert val == (val & 0xFFFFFFFFL);\n    Arrays.fill(values, fromIndex, toIndex, (int) val);\n  }\n\n","sourceOld":"  @Override\n  public void fill(int fromIndex, int toIndex, long val) {\n    assert (val & 0xffffffffL) == val;\n    Arrays.fill(values, fromIndex, toIndex, (int) val);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f440d3f04c39b9b18e8e48a78ef7b9f840674e22","date":1568209549,"type":4,"author":"Adrien Grand","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/util/packed/Direct32#fill(int,int,long).mjava","sourceNew":null,"sourceOld":"  @Override\n  public void fill(int fromIndex, int toIndex, long val) {\n    assert val == (val & 0xFFFFFFFFL);\n    Arrays.fill(values, fromIndex, toIndex, (int) val);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"f440d3f04c39b9b18e8e48a78ef7b9f840674e22":["55110eb60c5105294fc2ae7912d82b750865aa58"],"55110eb60c5105294fc2ae7912d82b750865aa58":["747628bb19a950ac2141b16756bdce9a47e94cc2"],"fe33227f6805edab2036cbb80645cc4e2d1fa424":["747628bb19a950ac2141b16756bdce9a47e94cc2","55110eb60c5105294fc2ae7912d82b750865aa58"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"747628bb19a950ac2141b16756bdce9a47e94cc2":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["f440d3f04c39b9b18e8e48a78ef7b9f840674e22"]},"commit2Childs":{"f440d3f04c39b9b18e8e48a78ef7b9f840674e22":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"55110eb60c5105294fc2ae7912d82b750865aa58":["f440d3f04c39b9b18e8e48a78ef7b9f840674e22","fe33227f6805edab2036cbb80645cc4e2d1fa424"],"fe33227f6805edab2036cbb80645cc4e2d1fa424":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["747628bb19a950ac2141b16756bdce9a47e94cc2"],"747628bb19a950ac2141b16756bdce9a47e94cc2":["55110eb60c5105294fc2ae7912d82b750865aa58","fe33227f6805edab2036cbb80645cc4e2d1fa424"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["fe33227f6805edab2036cbb80645cc4e2d1fa424","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}