{"path":"solr/core/src/test/org/apache/solr/update/processor/TestDocBasedVersionConstraints#testSimpleUpdates().mjava","commits":[{"id":"667eea18b7ca87af38d05d81d479f943a717a6b1","date":1548452298,"type":1,"author":"Tomas Fernandez Lobbe","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/update/processor/TestDocBasedVersionConstraints#testSimpleUpdates().mjava","pathOld":"solr/core/src/test/org/apache/solr/update/TestDocBasedVersionConstraints#testSimpleUpdates().mjava","sourceNew":"  public void testSimpleUpdates() throws Exception {\n\n    // skip low version against committed data\n    assertU(adoc(\"id\", \"aaa\", \"name\", \"a1\", \"my_version_l\", \"1001\"));\n    assertU(commit());\n    assertU(adoc(\"id\", \"aaa\", \"name\", \"a2\", \"my_version_l\", \"1002\"));\n    assertU(commit());\n    assertU(adoc(\"id\", \"aaa\", \"name\", \"XX\", \"my_version_l\",    \"1\"));\n    assertJQ(req(\"qt\",\"/get\", \"id\",\"aaa\", \"fl\",\"name\")\n             , \"=={'doc':{'name':'a2'}}\");\n    assertU(commit());\n    assertJQ(req(\"q\",\"+id:aaa\"), \"/response/numFound==1\");\n    assertJQ(req(\"q\",\"+id:aaa +name:XX\"), \"/response/numFound==0\");\n    assertJQ(req(\"q\",\"+id:aaa +name:a2\"), \"/response/numFound==1\");\n    assertJQ(req(\"qt\",\"/get\", \"id\",\"aaa\", \"fl\",\"name\")\n             , \"=={'doc':{'name':'a2'}}\");\n\n    // skip low version against uncommitted data from updateLog\n    assertU(adoc(\"id\", \"aaa\", \"name\", \"a3\", \"my_version_l\", \"1003\"));\n    assertU(adoc(\"id\", \"aaa\", \"name\", \"XX\", \"my_version_l\",    \"7\"));\n    assertJQ(req(\"qt\",\"/get\", \"id\",\"aaa\", \"fl\",\"name\")\n             , \"=={'doc':{'name':'a3'}}\");\n    assertU(commit());\n    assertJQ(req(\"q\",\"+id:aaa\"), \"/response/numFound==1\");\n    assertJQ(req(\"q\",\"+id:aaa +name:XX\"), \"/response/numFound==0\");\n    assertJQ(req(\"q\",\"+id:aaa +name:a3\"), \"/response/numFound==1\");\n    assertJQ(req(\"qt\",\"/get\", \"id\",\"aaa\", \"fl\",\"name\")\n             , \"=={'doc':{'name':'a3'}}\");\n\n    // interleave updates to multiple docs using same versions\n    for (long ver = 1010; ver < 1020; ver++) {\n      for (String id : new String[] {\"aaa\", \"bbb\", \"ccc\", \"ddd\"}) {\n        assertU(adoc(\"id\", id, \"my_version_l\", \"\"+ver));\n      }\n    }\n    for (String id : new String[] {\"aaa\", \"bbb\", \"ccc\", \"ddd\"}) {\n      assertU(adoc(\"id\", id, \"name\", \"XX\", \"my_version_l\", \"10\"));\n      assertJQ(req(\"qt\",\"/get\", \"id\",id, \"fl\",\"my_version_l\")\n               , \"=={'doc':{'my_version_l':\"+1019+\"}}\");\n    }\n    assertU(commit());\n    assertJQ(req(\"q\",\"name:XX\"), \"/response/numFound==0\");\n    for (String id : new String[] {\"aaa\", \"bbb\", \"ccc\", \"ddd\"}) {\n      assertJQ(req(\"q\",\"+id:\"+id), \"/response/numFound==1\");\n      assertJQ(req(\"q\",\"+name:XX +id:\"+id), \"/response/numFound==0\");\n      assertJQ(req(\"q\",\"+id:\"+id + \" +my_version_l:1019\"), \"/response/numFound==1\");\n      assertJQ(req(\"qt\",\"/get\", \"id\",id, \"fl\",\"my_version_l\")\n               , \"=={'doc':{'my_version_l':\"+1019+\"}}\");\n    }\n  }\n\n","sourceOld":"  public void testSimpleUpdates() throws Exception {\n\n    // skip low version against committed data\n    assertU(adoc(\"id\", \"aaa\", \"name\", \"a1\", \"my_version_l\", \"1001\"));\n    assertU(commit());\n    assertU(adoc(\"id\", \"aaa\", \"name\", \"a2\", \"my_version_l\", \"1002\"));\n    assertU(commit());\n    assertU(adoc(\"id\", \"aaa\", \"name\", \"XX\", \"my_version_l\",    \"1\"));\n    assertJQ(req(\"qt\",\"/get\", \"id\",\"aaa\", \"fl\",\"name\")\n             , \"=={'doc':{'name':'a2'}}\");\n    assertU(commit());\n    assertJQ(req(\"q\",\"+id:aaa\"), \"/response/numFound==1\");\n    assertJQ(req(\"q\",\"+id:aaa +name:XX\"), \"/response/numFound==0\");\n    assertJQ(req(\"q\",\"+id:aaa +name:a2\"), \"/response/numFound==1\");\n    assertJQ(req(\"qt\",\"/get\", \"id\",\"aaa\", \"fl\",\"name\")\n             , \"=={'doc':{'name':'a2'}}\");\n\n    // skip low version against uncommitted data from updateLog\n    assertU(adoc(\"id\", \"aaa\", \"name\", \"a3\", \"my_version_l\", \"1003\"));\n    assertU(adoc(\"id\", \"aaa\", \"name\", \"XX\", \"my_version_l\",    \"7\"));\n    assertJQ(req(\"qt\",\"/get\", \"id\",\"aaa\", \"fl\",\"name\")\n             , \"=={'doc':{'name':'a3'}}\");\n    assertU(commit());\n    assertJQ(req(\"q\",\"+id:aaa\"), \"/response/numFound==1\");\n    assertJQ(req(\"q\",\"+id:aaa +name:XX\"), \"/response/numFound==0\");\n    assertJQ(req(\"q\",\"+id:aaa +name:a3\"), \"/response/numFound==1\");\n    assertJQ(req(\"qt\",\"/get\", \"id\",\"aaa\", \"fl\",\"name\")\n             , \"=={'doc':{'name':'a3'}}\");\n\n    // interleave updates to multiple docs using same versions\n    for (long ver = 1010; ver < 1020; ver++) {\n      for (String id : new String[] {\"aaa\", \"bbb\", \"ccc\", \"ddd\"}) {\n        assertU(adoc(\"id\", id, \"my_version_l\", \"\"+ver));\n      }\n    }\n    for (String id : new String[] {\"aaa\", \"bbb\", \"ccc\", \"ddd\"}) {\n      assertU(adoc(\"id\", id, \"name\", \"XX\", \"my_version_l\", \"10\"));\n      assertJQ(req(\"qt\",\"/get\", \"id\",id, \"fl\",\"my_version_l\")\n               , \"=={'doc':{'my_version_l':\"+1019+\"}}\");\n    }\n    assertU(commit());\n    assertJQ(req(\"q\",\"name:XX\"), \"/response/numFound==0\");\n    for (String id : new String[] {\"aaa\", \"bbb\", \"ccc\", \"ddd\"}) {\n      assertJQ(req(\"q\",\"+id:\"+id), \"/response/numFound==1\");\n      assertJQ(req(\"q\",\"+name:XX +id:\"+id), \"/response/numFound==0\");\n      assertJQ(req(\"q\",\"+id:\"+id + \" +my_version_l:1019\"), \"/response/numFound==1\");\n      assertJQ(req(\"qt\",\"/get\", \"id\",id, \"fl\",\"my_version_l\")\n               , \"=={'doc':{'my_version_l':\"+1019+\"}}\");\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"667eea18b7ca87af38d05d81d479f943a717a6b1":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["667eea18b7ca87af38d05d81d479f943a717a6b1"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["667eea18b7ca87af38d05d81d479f943a717a6b1"],"667eea18b7ca87af38d05d81d479f943a717a6b1":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}