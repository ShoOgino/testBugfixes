{"path":"src/test-deprecated/org/apache/lucene/search/TestFuzzyQuery#testDefaultFuzzinessLong().mjava","commits":[{"id":"5b5461affe637a07375542c763a4805300802be8","date":1102270918,"type":0,"author":"Bernhard Messer","isMerge":false,"pathNew":"src/test-deprecated/org/apache/lucene/search/TestFuzzyQuery#testDefaultFuzzinessLong().mjava","pathOld":"/dev/null","sourceNew":"  public void testDefaultFuzzinessLong() throws Exception {\n    RAMDirectory directory = new RAMDirectory();\n    IndexWriter writer = new IndexWriter(directory, new WhitespaceAnalyzer(), true);\n    addDoc(\"aaaaaaa\", writer);\n    addDoc(\"segment\", writer);\n    writer.optimize();\n    writer.close();\n    IndexSearcher searcher = new IndexSearcher(directory);\n\n    FuzzyQuery query;\n    // not similar enough:\n    query = new FuzzyQuery(new Term(\"field\", \"xxxxx\"));   \n    Hits hits = searcher.search(query);\n    assertEquals(0, hits.length());\n    // edit distance to \"aaaaaaa\" = 3, this matches because the string is longer than\n    // in testDefaultFuzziness so a bigger difference is allowed:\n    query = new FuzzyQuery(new Term(\"field\", \"aaaaccc\"));   \n    hits = searcher.search(query);\n    assertEquals(1, hits.length());\n    assertEquals(hits.doc(0).get(\"field\"), (\"aaaaaaa\"));\n\n    // no match, more than half of the characters is wrong:\n    query = new FuzzyQuery(new Term(\"field\", \"aaacccc\"));   \n    hits = searcher.search(query);\n    assertEquals(0, hits.length());\n\n    // \"student\" and \"stellent\" are indeed similar to \"segment\" by default:\n    query = new FuzzyQuery(new Term(\"field\", \"student\"));   \n    hits = searcher.search(query);\n    assertEquals(1, hits.length());\n    query = new FuzzyQuery(new Term(\"field\", \"stellent\"));   \n    hits = searcher.search(query);\n    assertEquals(1, hits.length());\n\n    searcher.close();\n    directory.close();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c69e98ffd83f56083b99e5443ca713cd5783a2ae","date":1142955392,"type":4,"author":"Yonik Seeley","isMerge":false,"pathNew":"/dev/null","pathOld":"src/test-deprecated/org/apache/lucene/search/TestFuzzyQuery#testDefaultFuzzinessLong().mjava","sourceNew":null,"sourceOld":"  public void testDefaultFuzzinessLong() throws Exception {\n    RAMDirectory directory = new RAMDirectory();\n    IndexWriter writer = new IndexWriter(directory, new WhitespaceAnalyzer(), true);\n    addDoc(\"aaaaaaa\", writer);\n    addDoc(\"segment\", writer);\n    writer.optimize();\n    writer.close();\n    IndexSearcher searcher = new IndexSearcher(directory);\n\n    FuzzyQuery query;\n    // not similar enough:\n    query = new FuzzyQuery(new Term(\"field\", \"xxxxx\"));   \n    Hits hits = searcher.search(query);\n    assertEquals(0, hits.length());\n    // edit distance to \"aaaaaaa\" = 3, this matches because the string is longer than\n    // in testDefaultFuzziness so a bigger difference is allowed:\n    query = new FuzzyQuery(new Term(\"field\", \"aaaaccc\"));   \n    hits = searcher.search(query);\n    assertEquals(1, hits.length());\n    assertEquals(hits.doc(0).get(\"field\"), (\"aaaaaaa\"));\n\n    // no match, more than half of the characters is wrong:\n    query = new FuzzyQuery(new Term(\"field\", \"aaacccc\"));   \n    hits = searcher.search(query);\n    assertEquals(0, hits.length());\n\n    // \"student\" and \"stellent\" are indeed similar to \"segment\" by default:\n    query = new FuzzyQuery(new Term(\"field\", \"student\"));   \n    hits = searcher.search(query);\n    assertEquals(1, hits.length());\n    query = new FuzzyQuery(new Term(\"field\", \"stellent\"));   \n    hits = searcher.search(query);\n    assertEquals(1, hits.length());\n\n    searcher.close();\n    directory.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"5b5461affe637a07375542c763a4805300802be8":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"c69e98ffd83f56083b99e5443ca713cd5783a2ae":["5b5461affe637a07375542c763a4805300802be8"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["c69e98ffd83f56083b99e5443ca713cd5783a2ae"]},"commit2Childs":{"5b5461affe637a07375542c763a4805300802be8":["c69e98ffd83f56083b99e5443ca713cd5783a2ae"],"c69e98ffd83f56083b99e5443ca713cd5783a2ae":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["5b5461affe637a07375542c763a4805300802be8"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}