{"path":"lucene/spatial-extras/src/test/org/apache/lucene/spatial/prefix/TestTermQueryPrefixGridStrategy#testNGramPrefixGridLosAngeles().mjava","commits":[{"id":"112d77ac8d3e10a362516ad834c9a11d35c94234","date":1456784319,"type":1,"author":"nknize","isMerge":false,"pathNew":"lucene/spatial-extras/src/test/org/apache/lucene/spatial/prefix/TestTermQueryPrefixGridStrategy#testNGramPrefixGridLosAngeles().mjava","pathOld":"lucene/spatial/src/test/org/apache/lucene/spatial/prefix/TestTermQueryPrefixGridStrategy#testNGramPrefixGridLosAngeles().mjava","sourceNew":"  @Test\n  public void testNGramPrefixGridLosAngeles() throws IOException {\n    SpatialContext ctx = SpatialContext.GEO;\n    TermQueryPrefixTreeStrategy prefixGridStrategy = new TermQueryPrefixTreeStrategy(new QuadPrefixTree(ctx), \"geo\");\n\n    Shape point = ctx.makePoint(-118.243680, 34.052230);\n\n    Document losAngeles = new Document();\n    losAngeles.add(new StringField(\"name\", \"Los Angeles\", Field.Store.YES));\n    for (Field field : prefixGridStrategy.createIndexableFields(point)) {\n      losAngeles.add(field);\n    }\n    losAngeles.add(new StoredField(prefixGridStrategy.getFieldName(), point.toString()));//just for diagnostics\n\n    addDocumentsAndCommit(Arrays.asList(losAngeles));\n\n    // This won't work with simple spatial context...\n    SpatialArgsParser spatialArgsParser = new SpatialArgsParser();\n    // TODO... use a non polygon query\n//    SpatialArgs spatialArgs = spatialArgsParser.parse(\n//        \"Intersects(POLYGON((-127.00390625 39.8125,-112.765625 39.98828125,-111.53515625 31.375,-125.94921875 30.14453125,-127.00390625 39.8125)))\",\n//        new SimpleSpatialContext());\n\n//    Query query = prefixGridStrategy.makeQuery(spatialArgs, fieldInfo);\n//    SearchResults searchResults = executeQuery(query, 1);\n//    assertEquals(1, searchResults.numFound);\n  }\n\n","sourceOld":"  @Test\n  public void testNGramPrefixGridLosAngeles() throws IOException {\n    SpatialContext ctx = SpatialContext.GEO;\n    TermQueryPrefixTreeStrategy prefixGridStrategy = new TermQueryPrefixTreeStrategy(new QuadPrefixTree(ctx), \"geo\");\n\n    Shape point = ctx.makePoint(-118.243680, 34.052230);\n\n    Document losAngeles = new Document();\n    losAngeles.add(new StringField(\"name\", \"Los Angeles\", Field.Store.YES));\n    for (Field field : prefixGridStrategy.createIndexableFields(point)) {\n      losAngeles.add(field);\n    }\n    losAngeles.add(new StoredField(prefixGridStrategy.getFieldName(), point.toString()));//just for diagnostics\n\n    addDocumentsAndCommit(Arrays.asList(losAngeles));\n\n    // This won't work with simple spatial context...\n    SpatialArgsParser spatialArgsParser = new SpatialArgsParser();\n    // TODO... use a non polygon query\n//    SpatialArgs spatialArgs = spatialArgsParser.parse(\n//        \"Intersects(POLYGON((-127.00390625 39.8125,-112.765625 39.98828125,-111.53515625 31.375,-125.94921875 30.14453125,-127.00390625 39.8125)))\",\n//        new SimpleSpatialContext());\n\n//    Query query = prefixGridStrategy.makeQuery(spatialArgs, fieldInfo);\n//    SearchResults searchResults = executeQuery(query, 1);\n//    assertEquals(1, searchResults.numFound);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"af2638813028b254a88b418ebeafb541afb49653","date":1456804822,"type":1,"author":"Noble Paul","isMerge":true,"pathNew":"lucene/spatial-extras/src/test/org/apache/lucene/spatial/prefix/TestTermQueryPrefixGridStrategy#testNGramPrefixGridLosAngeles().mjava","pathOld":"lucene/spatial/src/test/org/apache/lucene/spatial/prefix/TestTermQueryPrefixGridStrategy#testNGramPrefixGridLosAngeles().mjava","sourceNew":"  @Test\n  public void testNGramPrefixGridLosAngeles() throws IOException {\n    SpatialContext ctx = SpatialContext.GEO;\n    TermQueryPrefixTreeStrategy prefixGridStrategy = new TermQueryPrefixTreeStrategy(new QuadPrefixTree(ctx), \"geo\");\n\n    Shape point = ctx.makePoint(-118.243680, 34.052230);\n\n    Document losAngeles = new Document();\n    losAngeles.add(new StringField(\"name\", \"Los Angeles\", Field.Store.YES));\n    for (Field field : prefixGridStrategy.createIndexableFields(point)) {\n      losAngeles.add(field);\n    }\n    losAngeles.add(new StoredField(prefixGridStrategy.getFieldName(), point.toString()));//just for diagnostics\n\n    addDocumentsAndCommit(Arrays.asList(losAngeles));\n\n    // This won't work with simple spatial context...\n    SpatialArgsParser spatialArgsParser = new SpatialArgsParser();\n    // TODO... use a non polygon query\n//    SpatialArgs spatialArgs = spatialArgsParser.parse(\n//        \"Intersects(POLYGON((-127.00390625 39.8125,-112.765625 39.98828125,-111.53515625 31.375,-125.94921875 30.14453125,-127.00390625 39.8125)))\",\n//        new SimpleSpatialContext());\n\n//    Query query = prefixGridStrategy.makeQuery(spatialArgs, fieldInfo);\n//    SearchResults searchResults = executeQuery(query, 1);\n//    assertEquals(1, searchResults.numFound);\n  }\n\n","sourceOld":"  @Test\n  public void testNGramPrefixGridLosAngeles() throws IOException {\n    SpatialContext ctx = SpatialContext.GEO;\n    TermQueryPrefixTreeStrategy prefixGridStrategy = new TermQueryPrefixTreeStrategy(new QuadPrefixTree(ctx), \"geo\");\n\n    Shape point = ctx.makePoint(-118.243680, 34.052230);\n\n    Document losAngeles = new Document();\n    losAngeles.add(new StringField(\"name\", \"Los Angeles\", Field.Store.YES));\n    for (Field field : prefixGridStrategy.createIndexableFields(point)) {\n      losAngeles.add(field);\n    }\n    losAngeles.add(new StoredField(prefixGridStrategy.getFieldName(), point.toString()));//just for diagnostics\n\n    addDocumentsAndCommit(Arrays.asList(losAngeles));\n\n    // This won't work with simple spatial context...\n    SpatialArgsParser spatialArgsParser = new SpatialArgsParser();\n    // TODO... use a non polygon query\n//    SpatialArgs spatialArgs = spatialArgsParser.parse(\n//        \"Intersects(POLYGON((-127.00390625 39.8125,-112.765625 39.98828125,-111.53515625 31.375,-125.94921875 30.14453125,-127.00390625 39.8125)))\",\n//        new SimpleSpatialContext());\n\n//    Query query = prefixGridStrategy.makeQuery(spatialArgs, fieldInfo);\n//    SearchResults searchResults = executeQuery(query, 1);\n//    assertEquals(1, searchResults.numFound);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a5df378a6155dcc1f4d4ecdcbd8ea5bc058560e9","date":1574619880,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"lucene/spatial-extras/src/test/org/apache/lucene/spatial/prefix/TestTermQueryPrefixGridStrategy#testNGramPrefixGridLosAngeles().mjava","pathOld":"lucene/spatial-extras/src/test/org/apache/lucene/spatial/prefix/TestTermQueryPrefixGridStrategy#testNGramPrefixGridLosAngeles().mjava","sourceNew":"  @SuppressWarnings(\"deprecation\")\n  @Test\n  public void testNGramPrefixGridLosAngeles() throws IOException {\n    SpatialContext ctx = SpatialContext.GEO;\n    TermQueryPrefixTreeStrategy prefixGridStrategy = new TermQueryPrefixTreeStrategy(new QuadPrefixTree(ctx), \"geo\");\n\n    Shape point = ctx.makePoint(-118.243680, 34.052230);\n\n    Document losAngeles = new Document();\n    losAngeles.add(new StringField(\"name\", \"Los Angeles\", Field.Store.YES));\n    for (Field field : prefixGridStrategy.createIndexableFields(point)) {\n      losAngeles.add(field);\n    }\n    losAngeles.add(new StoredField(prefixGridStrategy.getFieldName(), point.toString()));//just for diagnostics\n\n    addDocumentsAndCommit(Arrays.asList(losAngeles));\n\n    // This won't work with simple spatial context...\n    SpatialArgsParser spatialArgsParser = new SpatialArgsParser();\n    // TODO... use a non polygon query\n//    SpatialArgs spatialArgs = spatialArgsParser.parse(\n//        \"Intersects(POLYGON((-127.00390625 39.8125,-112.765625 39.98828125,-111.53515625 31.375,-125.94921875 30.14453125,-127.00390625 39.8125)))\",\n//        new SimpleSpatialContext());\n\n//    Query query = prefixGridStrategy.makeQuery(spatialArgs, fieldInfo);\n//    SearchResults searchResults = executeQuery(query, 1);\n//    assertEquals(1, searchResults.numFound);\n  }\n\n","sourceOld":"  @Test\n  public void testNGramPrefixGridLosAngeles() throws IOException {\n    SpatialContext ctx = SpatialContext.GEO;\n    TermQueryPrefixTreeStrategy prefixGridStrategy = new TermQueryPrefixTreeStrategy(new QuadPrefixTree(ctx), \"geo\");\n\n    Shape point = ctx.makePoint(-118.243680, 34.052230);\n\n    Document losAngeles = new Document();\n    losAngeles.add(new StringField(\"name\", \"Los Angeles\", Field.Store.YES));\n    for (Field field : prefixGridStrategy.createIndexableFields(point)) {\n      losAngeles.add(field);\n    }\n    losAngeles.add(new StoredField(prefixGridStrategy.getFieldName(), point.toString()));//just for diagnostics\n\n    addDocumentsAndCommit(Arrays.asList(losAngeles));\n\n    // This won't work with simple spatial context...\n    SpatialArgsParser spatialArgsParser = new SpatialArgsParser();\n    // TODO... use a non polygon query\n//    SpatialArgs spatialArgs = spatialArgsParser.parse(\n//        \"Intersects(POLYGON((-127.00390625 39.8125,-112.765625 39.98828125,-111.53515625 31.375,-125.94921875 30.14453125,-127.00390625 39.8125)))\",\n//        new SimpleSpatialContext());\n\n//    Query query = prefixGridStrategy.makeQuery(spatialArgs, fieldInfo);\n//    SearchResults searchResults = executeQuery(query, 1);\n//    assertEquals(1, searchResults.numFound);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bb9c3baacabd473e8ecd6c4948aabacead49b88e","date":1574700980,"type":3,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/spatial-extras/src/test/org/apache/lucene/spatial/prefix/TestTermQueryPrefixGridStrategy#testNGramPrefixGridLosAngeles().mjava","pathOld":"lucene/spatial-extras/src/test/org/apache/lucene/spatial/prefix/TestTermQueryPrefixGridStrategy#testNGramPrefixGridLosAngeles().mjava","sourceNew":"  @Test\n  public void testNGramPrefixGridLosAngeles() throws IOException {\n    SpatialContext ctx = SpatialContext.GEO;\n    TermQueryPrefixTreeStrategy prefixGridStrategy = new TermQueryPrefixTreeStrategy(new QuadPrefixTree(ctx), \"geo\");\n\n    Shape point = ctx.makePoint(-118.243680, 34.052230);\n\n    Document losAngeles = new Document();\n    losAngeles.add(new StringField(\"name\", \"Los Angeles\", Field.Store.YES));\n    for (Field field : prefixGridStrategy.createIndexableFields(point)) {\n      losAngeles.add(field);\n    }\n    losAngeles.add(new StoredField(prefixGridStrategy.getFieldName(), point.toString()));//just for diagnostics\n\n    addDocumentsAndCommit(Arrays.asList(losAngeles));\n\n    // This won't work with simple spatial context...\n    SpatialArgsParser spatialArgsParser = new SpatialArgsParser();\n    // TODO... use a non polygon query\n//    SpatialArgs spatialArgs = spatialArgsParser.parse(\n//        \"Intersects(POLYGON((-127.00390625 39.8125,-112.765625 39.98828125,-111.53515625 31.375,-125.94921875 30.14453125,-127.00390625 39.8125)))\",\n//        new SimpleSpatialContext());\n\n//    Query query = prefixGridStrategy.makeQuery(spatialArgs, fieldInfo);\n//    SearchResults searchResults = executeQuery(query, 1);\n//    assertEquals(1, searchResults.numFound);\n  }\n\n","sourceOld":"  @SuppressWarnings(\"deprecation\")\n  @Test\n  public void testNGramPrefixGridLosAngeles() throws IOException {\n    SpatialContext ctx = SpatialContext.GEO;\n    TermQueryPrefixTreeStrategy prefixGridStrategy = new TermQueryPrefixTreeStrategy(new QuadPrefixTree(ctx), \"geo\");\n\n    Shape point = ctx.makePoint(-118.243680, 34.052230);\n\n    Document losAngeles = new Document();\n    losAngeles.add(new StringField(\"name\", \"Los Angeles\", Field.Store.YES));\n    for (Field field : prefixGridStrategy.createIndexableFields(point)) {\n      losAngeles.add(field);\n    }\n    losAngeles.add(new StoredField(prefixGridStrategy.getFieldName(), point.toString()));//just for diagnostics\n\n    addDocumentsAndCommit(Arrays.asList(losAngeles));\n\n    // This won't work with simple spatial context...\n    SpatialArgsParser spatialArgsParser = new SpatialArgsParser();\n    // TODO... use a non polygon query\n//    SpatialArgs spatialArgs = spatialArgsParser.parse(\n//        \"Intersects(POLYGON((-127.00390625 39.8125,-112.765625 39.98828125,-111.53515625 31.375,-125.94921875 30.14453125,-127.00390625 39.8125)))\",\n//        new SimpleSpatialContext());\n\n//    Query query = prefixGridStrategy.makeQuery(spatialArgs, fieldInfo);\n//    SearchResults searchResults = executeQuery(query, 1);\n//    assertEquals(1, searchResults.numFound);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"af2638813028b254a88b418ebeafb541afb49653":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","112d77ac8d3e10a362516ad834c9a11d35c94234"],"a5df378a6155dcc1f4d4ecdcbd8ea5bc058560e9":["af2638813028b254a88b418ebeafb541afb49653"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"bb9c3baacabd473e8ecd6c4948aabacead49b88e":["a5df378a6155dcc1f4d4ecdcbd8ea5bc058560e9"],"112d77ac8d3e10a362516ad834c9a11d35c94234":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["bb9c3baacabd473e8ecd6c4948aabacead49b88e"]},"commit2Childs":{"af2638813028b254a88b418ebeafb541afb49653":["a5df378a6155dcc1f4d4ecdcbd8ea5bc058560e9"],"a5df378a6155dcc1f4d4ecdcbd8ea5bc058560e9":["bb9c3baacabd473e8ecd6c4948aabacead49b88e"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["af2638813028b254a88b418ebeafb541afb49653","112d77ac8d3e10a362516ad834c9a11d35c94234"],"112d77ac8d3e10a362516ad834c9a11d35c94234":["af2638813028b254a88b418ebeafb541afb49653"],"bb9c3baacabd473e8ecd6c4948aabacead49b88e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}