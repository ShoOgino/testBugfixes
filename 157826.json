{"path":"solr/contrib/clustering/src/main/java/org/apache/solr/handler/clustering/carrot2/LuceneLanguageModelFactory.ArabicStemmerFactory.LuceneStemmerAdapter#stem(CharSequence).mjava","commits":[{"id":"88d9ad003cdcb52d92d2f6cfc5abbd1e2ef9d4fb","date":1282573440,"type":0,"author":"Grant Ingersoll","isMerge":false,"pathNew":"solr/contrib/clustering/src/main/java/org/apache/solr/handler/clustering/carrot2/LuceneLanguageModelFactory.ArabicStemmerFactory.LuceneStemmerAdapter#stem(CharSequence).mjava","pathOld":"/dev/null","sourceNew":"\t\t\tpublic CharSequence stem(CharSequence word) {\n\t\t\t\tif (word.length() > buffer.length) {\n\t\t\t\t\tbuffer = new char[word.length()];\n\t\t\t\t}\n\n\t\t\t\tfor (int i = 0; i < word.length(); i++) {\n\t\t\t\t\tbuffer[i] = word.charAt(i);\n\t\t\t\t}\n\n\t\t\t\tint newLen = normalizer.normalize(buffer, word.length());\n\t\t\t\tnewLen = delegate.stem(buffer, newLen);\n\n\t\t\t\tif (newLen != word.length() || !equals(buffer, newLen, word)) {\n\t\t\t\t\treturn CharBuffer.wrap(buffer, 0, newLen);\n\t\t\t\t}\n\n\t\t\t\t// Same-same.\n\t\t\t\treturn null;\n\t\t\t}\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","date":1292920096,"type":0,"author":"Michael Busch","isMerge":true,"pathNew":"solr/contrib/clustering/src/main/java/org/apache/solr/handler/clustering/carrot2/LuceneLanguageModelFactory.ArabicStemmerFactory.LuceneStemmerAdapter#stem(CharSequence).mjava","pathOld":"/dev/null","sourceNew":"\t\t\tpublic CharSequence stem(CharSequence word) {\n\t\t\t\tif (word.length() > buffer.length) {\n\t\t\t\t\tbuffer = new char[word.length()];\n\t\t\t\t}\n\n\t\t\t\tfor (int i = 0; i < word.length(); i++) {\n\t\t\t\t\tbuffer[i] = word.charAt(i);\n\t\t\t\t}\n\n\t\t\t\tint newLen = normalizer.normalize(buffer, word.length());\n\t\t\t\tnewLen = delegate.stem(buffer, newLen);\n\n\t\t\t\tif (newLen != word.length() || !equals(buffer, newLen, word)) {\n\t\t\t\t\treturn CharBuffer.wrap(buffer, 0, newLen);\n\t\t\t\t}\n\n\t\t\t\t// Same-same.\n\t\t\t\treturn null;\n\t\t\t}\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"017c035439201490351b0f5f3d33a393c6c24551","date":1305551986,"type":5,"author":"Stanisław Osiński","isMerge":false,"pathNew":"solr/contrib/clustering/src/main/java/org/apache/solr/handler/clustering/carrot2/LuceneCarrot2StemmerFactory.ArabicStemmerFactory.LuceneStemmerAdapter#stem(CharSequence).mjava","pathOld":"solr/contrib/clustering/src/main/java/org/apache/solr/handler/clustering/carrot2/LuceneLanguageModelFactory.ArabicStemmerFactory.LuceneStemmerAdapter#stem(CharSequence).mjava","sourceNew":"\t\t\tpublic CharSequence stem(CharSequence word) {\r\n\t\t\t\tif (word.length() > buffer.length) {\r\n\t\t\t\t\tbuffer = new char[word.length()];\r\n\t\t\t\t}\r\n\r\n\t\t\t\tfor (int i = 0; i < word.length(); i++) {\r\n\t\t\t\t\tbuffer[i] = word.charAt(i);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tint newLen = normalizer.normalize(buffer, word.length());\r\n\t\t\t\tnewLen = delegate.stem(buffer, newLen);\r\n\r\n\t\t\t\tif (newLen != word.length() || !equals(buffer, newLen, word)) {\r\n\t\t\t\t\treturn CharBuffer.wrap(buffer, 0, newLen);\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Same-same.\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\n","sourceOld":"\t\t\tpublic CharSequence stem(CharSequence word) {\n\t\t\t\tif (word.length() > buffer.length) {\n\t\t\t\t\tbuffer = new char[word.length()];\n\t\t\t\t}\n\n\t\t\t\tfor (int i = 0; i < word.length(); i++) {\n\t\t\t\t\tbuffer[i] = word.charAt(i);\n\t\t\t\t}\n\n\t\t\t\tint newLen = normalizer.normalize(buffer, word.length());\n\t\t\t\tnewLen = delegate.stem(buffer, newLen);\n\n\t\t\t\tif (newLen != word.length() || !equals(buffer, newLen, word)) {\n\t\t\t\t\treturn CharBuffer.wrap(buffer, 0, newLen);\n\t\t\t\t}\n\n\t\t\t\t// Same-same.\n\t\t\t\treturn null;\n\t\t\t}\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c3a8a449466c1ff7ce2274fe73dab487256964b4","date":1305735867,"type":5,"author":"Simon Willnauer","isMerge":true,"pathNew":"solr/contrib/clustering/src/main/java/org/apache/solr/handler/clustering/carrot2/LuceneCarrot2StemmerFactory.ArabicStemmerFactory.LuceneStemmerAdapter#stem(CharSequence).mjava","pathOld":"solr/contrib/clustering/src/main/java/org/apache/solr/handler/clustering/carrot2/LuceneLanguageModelFactory.ArabicStemmerFactory.LuceneStemmerAdapter#stem(CharSequence).mjava","sourceNew":"\t\t\tpublic CharSequence stem(CharSequence word) {\r\n\t\t\t\tif (word.length() > buffer.length) {\r\n\t\t\t\t\tbuffer = new char[word.length()];\r\n\t\t\t\t}\r\n\r\n\t\t\t\tfor (int i = 0; i < word.length(); i++) {\r\n\t\t\t\t\tbuffer[i] = word.charAt(i);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tint newLen = normalizer.normalize(buffer, word.length());\r\n\t\t\t\tnewLen = delegate.stem(buffer, newLen);\r\n\r\n\t\t\t\tif (newLen != word.length() || !equals(buffer, newLen, word)) {\r\n\t\t\t\t\treturn CharBuffer.wrap(buffer, 0, newLen);\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Same-same.\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\n","sourceOld":"\t\t\tpublic CharSequence stem(CharSequence word) {\n\t\t\t\tif (word.length() > buffer.length) {\n\t\t\t\t\tbuffer = new char[word.length()];\n\t\t\t\t}\n\n\t\t\t\tfor (int i = 0; i < word.length(); i++) {\n\t\t\t\t\tbuffer[i] = word.charAt(i);\n\t\t\t\t}\n\n\t\t\t\tint newLen = normalizer.normalize(buffer, word.length());\n\t\t\t\tnewLen = delegate.stem(buffer, newLen);\n\n\t\t\t\tif (newLen != word.length() || !equals(buffer, newLen, word)) {\n\t\t\t\t\treturn CharBuffer.wrap(buffer, 0, newLen);\n\t\t\t\t}\n\n\t\t\t\t// Same-same.\n\t\t\t\treturn null;\n\t\t\t}\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a3776dccca01c11e7046323cfad46a3b4a471233","date":1306100719,"type":4,"author":"Steven Rowe","isMerge":true,"pathNew":"/dev/null","pathOld":"solr/contrib/clustering/src/main/java/org/apache/solr/handler/clustering/carrot2/LuceneLanguageModelFactory.ArabicStemmerFactory.LuceneStemmerAdapter#stem(CharSequence).mjava","sourceNew":null,"sourceOld":"\t\t\tpublic CharSequence stem(CharSequence word) {\n\t\t\t\tif (word.length() > buffer.length) {\n\t\t\t\t\tbuffer = new char[word.length()];\n\t\t\t\t}\n\n\t\t\t\tfor (int i = 0; i < word.length(); i++) {\n\t\t\t\t\tbuffer[i] = word.charAt(i);\n\t\t\t\t}\n\n\t\t\t\tint newLen = normalizer.normalize(buffer, word.length());\n\t\t\t\tnewLen = delegate.stem(buffer, newLen);\n\n\t\t\t\tif (newLen != word.length() || !equals(buffer, newLen, word)) {\n\t\t\t\t\treturn CharBuffer.wrap(buffer, 0, newLen);\n\t\t\t\t}\n\n\t\t\t\t// Same-same.\n\t\t\t\treturn null;\n\t\t\t}\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"017c035439201490351b0f5f3d33a393c6c24551":["88d9ad003cdcb52d92d2f6cfc5abbd1e2ef9d4fb"],"c3a8a449466c1ff7ce2274fe73dab487256964b4":["88d9ad003cdcb52d92d2f6cfc5abbd1e2ef9d4fb","017c035439201490351b0f5f3d33a393c6c24551"],"a3776dccca01c11e7046323cfad46a3b4a471233":["88d9ad003cdcb52d92d2f6cfc5abbd1e2ef9d4fb","017c035439201490351b0f5f3d33a393c6c24551"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","88d9ad003cdcb52d92d2f6cfc5abbd1e2ef9d4fb"],"88d9ad003cdcb52d92d2f6cfc5abbd1e2ef9d4fb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["017c035439201490351b0f5f3d33a393c6c24551"]},"commit2Childs":{"017c035439201490351b0f5f3d33a393c6c24551":["c3a8a449466c1ff7ce2274fe73dab487256964b4","a3776dccca01c11e7046323cfad46a3b4a471233","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"c3a8a449466c1ff7ce2274fe73dab487256964b4":[],"a3776dccca01c11e7046323cfad46a3b4a471233":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","88d9ad003cdcb52d92d2f6cfc5abbd1e2ef9d4fb"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":[],"88d9ad003cdcb52d92d2f6cfc5abbd1e2ef9d4fb":["017c035439201490351b0f5f3d33a393c6c24551","c3a8a449466c1ff7ce2274fe73dab487256964b4","a3776dccca01c11e7046323cfad46a3b4a471233","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["c3a8a449466c1ff7ce2274fe73dab487256964b4","a3776dccca01c11e7046323cfad46a3b4a471233","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}